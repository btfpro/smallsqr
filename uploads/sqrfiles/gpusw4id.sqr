!**********************************************************************!
!  gpusw4id :  Identify W-4 Exempt Payees                 (USA)        !
!**********************************************************************!
!                                                                      !
!               Confidentiality Information:                           !
!                                                                      !
!                                                                      !
! This module contains confidential and proprietary information        !
! of Oracle; it is not to be copied, reproduced, or transmitted        !
! in any form, by any means, in whole or in part, nor is it to         !
! be used for any purpose other than that for which it is              !
! expressly provided under the applicable license agreement.           !
!                                                                      !
! Copyright (C) 2006 Oracle. All Rights Reserved.                      !
!                                                                      !
!**********************************************************************!
!                                                                      !
!          $Date:  2006/07/21:02:03:49                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      !
!**********************************************************************!

#include 'setenv.sqc'  !Set environment
#include 'setup32.sqc' !Printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'GPUSW4ID' to $ReportID
  move 'Identify W-4 Exempt Payees' to $ReportTitle
  display ''
  display 'GPUSW4ID Report'
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  do Initialization
end-procedure

 begin-procedure Initialization
 do Select-Parameters
   let $Thurdate    = $GPUS_RPT_TAX_RC.ThruDate
   let $SCompany = $GPUS_RPT_TAX_RC.Company

end-procedure

begin-heading 6
  #Include 'stdhdg02.sqc'

end-heading

begin-procedure Process-Main
Do Gpusw4id-Headings
if RTRIM($SCompany,' ') = ''
do All-Employees
else
do By_Company
END-IF
end-procedure

begin-procedure All-Employees
begin-SELECT
A.EMPLID
A.COMPANY () on-break print=never procedure=Company-Change
A.GPUS_FWT_ADD_AMT
J.EMPL_RCD
P.NAME

         let $PEMPLID            = &A.EMPLID
         let $PCOMPANY           = &A.COMPANY
          move &A.Company to $Company
         let #PFWT_ADD_AMT       = &A.GPUS_FWT_ADD_AMT
         let #PEMPL_RCD          = &J.EMPL_RCD
         let $PNAME              = &P.NAME

         do Print-Rows

FROM PS_GPUS_FWT_EE A, PS_PERSONAL_DATA P,PS_JOB J
WHERE  J.EFFDT = ( SELECT MAX(J1.EFFDT)
                   FROM PS_JOB J1
                   WHERE J.EMPLID = J1.EMPLID
                    AND J.EMPL_RCD = J1.EMPL_RCD
                    AND J1.EFFDT < $Thurdate)
   AND J.EFFSEQ = ( SELECT MAX(J2.EFFSEQ)
                    FROM PS_JOB J2
                    WHERE J.EMPLID = J2.EMPLID
                      AND J.EMPL_RCD = J2.EMPL_RCD
                      AND J.EFFDT = J2.EFFDT)
   AND J.EMPL_STATUS <> 'T'
   AND A.EFFDT = ( SELECT MAX(A1.EFFDT)
                   FROM PS_GPUS_FWT_EE A1
                   WHERE A.EMPLID = A1.EMPLID
                     AND A.COMPANY = A1.COMPANY
                     AND A1.EFFDT < $Thurdate)
   AND A.EMPLID = J.EMPLID
   AND A.COMPANY = J.COMPANY
   AND A.EMPLID = P.EMPLID
   AND J.EMPLID = P.EMPLID
   AND A.GPUS_FWT_STATUS = 'G'
   AND A.GPUS_FWT_ADD_AMT <= 0
   AND A.GPUS_FWT_ADD_PCT <= 0

ORDER BY A.EMPLID,A.COMPANY
end-SELECT

end-procedure


begin-procedure By_Company
begin-SELECT
B.EMPLID
B.COMPANY  () on-break print=never procedure=Company-Change
B.GPUS_FWT_ADD_AMT
JJ.EMPL_RCD
PP.NAME

          let $PEMPLID            = &B.EMPLID
          let $PCOMPANY           = &B.COMPANY
          move &B.Company to $Company
          let #PFWT_ADD_AMT       = &B.GPUS_FWT_ADD_AMT
          let #PEMPL_RCD          = &JJ.EMPL_RCD
          let $PNAME              = &PP.NAME

          do Print-Rows


FROM PS_GPUS_FWT_EE B, PS_PERSONAL_DATA PP,PS_JOB JJ
WHERE JJ.EFFDT = ( SELECT MAX(JJ1.EFFDT)
                   FROM PS_JOB JJ1
                   WHERE JJ.EMPLID = JJ1.EMPLID
                    AND JJ.EMPL_RCD = JJ1.EMPL_RCD
                    AND JJ1.EFFDT < $Thurdate)
   AND JJ.EFFSEQ = ( SELECT MAX(JJ2.EFFSEQ)
                    FROM PS_JOB JJ2
                    WHERE JJ.EMPLID = JJ2.EMPLID
                      AND JJ.EMPL_RCD = JJ2.EMPL_RCD
                      AND JJ.EFFDT = JJ2.EFFDT)
   AND JJ.EMPL_STATUS <> 'T'
   AND B.EFFDT = ( SELECT MAX(B1.EFFDT)
                   FROM PS_GPUS_FWT_EE B1
                   WHERE B.EMPLID = B1.EMPLID
                     AND B.COMPANY = B1.COMPANY
                     AND B1.EFFDT < $Thurdate)
   AND B.EMPLID = JJ.EMPLID
   AND B.COMPANY = JJ.COMPANY
   AND B.EMPLID = PP.EMPLID
   AND JJ.EMPLID = PP.EMPLID
   AND B.GPUS_FWT_STATUS = 'G'
   AND B.GPUS_FWT_ADD_AMT <= 0
   AND B.GPUS_FWT_ADD_PCT <= 0
   AND B.COMPANY = $SCompany

ORDER BY B.EMPLID,B.COMPANY
end-SELECT

end-procedure

begin-procedure Company-Change
    new-page
 DO Gpusw4id-Headings
end-procedure

begin-procedure Print-Rows

 print $PEMPLID                  (+1,10)
 print #PEMPL_RCD                (,25)        EDIT '9999'
 print $PNAME                    (,35)
 print #PFWT_ADD_AMT             (,70)        edit $9,999,999.99
end-procedure

Begin-Procedure Gpusw4id-Headings

print 'Employee ID'             (+3,10)
print 'Rcd Nbr'                 (,25)
print 'Name'                    (,35)
print 'Additional FWT Amount'   (,70)
print ' '                       (+1,10)
End-Procedure

#Include 'gpuspctl.sqc'  !Select-Parameters procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date math
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'readxlat.sqc'  !Read XLAT values

