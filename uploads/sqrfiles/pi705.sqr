!***********************************************************************
!  PI705.SQR:INTERFACE FIELD XLAT TABLE                                *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:02:29:03                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'  !Set environment
#include 'setup31.sqc' !Printer and page-size initialization


begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PI705' to $ReportID
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  do Get-Report-Language

  move $Pi705_ReportTitle to $ReportTitle
  display ' '
  display $ReportTitle
  display ' '

end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation

! Read from PI705 program ids
do Init_Report_Translation($ReportID,$Language_Cd)

  do Get_Field_Information ('PI705', 'REPORT_TITLE', $Pi705_ReportTitle, #dummy_width)
  do Get_Field_Information ('PI705', 'SYSTEMID', $Pi705_Sid, #dummy_width)
  do Get_Field_Information ('PI705', 'DESCRLONG', $Pi705_Description, #dummy_width)
  do Get_Field_Information ('PI705', 'PIFIELDID', $Pi705_PIFieldId, #dummy_width)
  do Get_Field_Information ('PI705', 'FLDDESCR', $Pi705_FldDescr, #dummy_width)
  do Get_Field_Information ('PI705', 'EFFDT', $Pi705_Effdt, #dummy_width)
  do Get_Field_Information ('PI705', 'PSFIELD1', $Pi705_PSField1, #dummy_width)
  do Get_Field_Information ('PI705', 'PSFIELD2', $Pi705_PSField2, #dummy_width)
  do Get_Field_Information ('PI705', 'PSFIELD3', $Pi705_PSField3, #dummy_width)
  do Get_Field_Information ('PI705', 'PIFIELD', $Pi705_PIField, #dummy_width)

end-procedure


begin-heading 7
#Include 'stdhdgtr.sqc'
  print $Pi705_Sid           (+2,1,6)
  print $Pi705_Description   (,9,30)
  print $Pi705_PIFieldId     (,41,12)
  print $Pi705_FldDescr      (,55,11)
  print $Pi705_Effdt         (,68,8)
  print $Pi705_PSField1      (,78,11)
  print $Pi705_PSField2      (,91,10)
  print $Pi705_PSField3      (,103,10)
  print $Pi705_PIField       (,115,10)
end-HEADING

begin-procedure Process-Main

begin-SELECT

A.PI_SYSTEM_ID               (+1,1,6) on-break level=1 skiplines=1
B.DESCR                     ! (,9) on-break level=1
      Let $Prnt_PiSys_Descr = &B.DESCR
      if $Curr_language_cd <> $Psoptions_Language_Cd
        do Lang-Record-Details
      end-if
      Print  $Prnt_PiSys_Descr  (,9,30) on-break level=1

A.PI_FIELD_ID                (,41,12)
C.DESCRSHORT                ! (,55) on-break level=2
      Let $Prnt_PiFld_Descrshort = &C.DESCRSHORT
      if $Curr_language_cd <> $Psoptions_Language_Cd
        do Lang-Record-Details1
      end-if
      Print  $Prnt_PiFld_Descrshort  (,55,11) on-break level=2

A.EFFDT
    do Format-DateTime(&A.EFFDT, $out, {DEFDATE}, '', '')
    print $out               (,66,10)
A.PS_FIELD1_VALUE            (,78,11)
A.PS_FIELD2_VALUE            (,91,10)
A.PS_FIELD3_VALUE            (,103,10)
A.PI_FIELD_VALUE             (,115,10)

FROM PS_PI_FIELD_XLAT A, PS_PI_SYSTEM_TBL B, PS_PI_FIELD_TBL C
WHERE A.PI_SYSTEM_ID = B.PI_SYSTEM_ID AND B.EFFDT =
    (SELECT MAX(EFFDT)
       FROM PS_PI_SYSTEM_TBL
           WHERE PI_SYSTEM_ID = A.PI_SYSTEM_ID
                 AND EFF_STATUS = 'A'
                 AND EFFDT     <= A.EFFDT)
  AND A.PI_FIELD_ID = C.PI_FIELD_ID AND A.PI_SYSTEM_ID = C.PI_SYSTEM_ID
  AND A.EFFDT = C.EFFDT
ORDER BY A.PI_SYSTEM_ID, A.PI_FIELD_ID, A.EFFDT DESC, A.PS_FIELD1_VALUE,
A.PS_FIELD2_VALUE, A.PS_FIELD3_VALUE

end-SELECT

end-procedure


begin-procedure Lang-Record-Details
begin-select

LB.DESCR

   Let $Prnt_PiSys_Descr = Cond(Rtrim(&LB.DESCR,' ')='', $Prnt_PiSys_Descr, &LB.DESCR)

FROM PS_PI_SYSTEM_LANG LB
WHERE PI_SYSTEM_ID = &A.PI_SYSTEM_ID
  AND LANGUAGE_CD  = $Curr_language_cd
  AND EFFDT        = (SELECT MAX(EFFDT) FROM PS_PI_FIELD_LANG
                       WHERE PI_SYSTEM_ID = &A.PI_SYSTEM_ID
                         AND LANGUAGE_CD  = $Curr_language_cd
                         AND EFFDT <=&A.EFFDT )

end-select
end-procedure


begin-procedure Lang-Record-Details1
begin-select

LC.DESCRSHORT

   Let $Prnt_PiFld_Descrshort = Cond(Rtrim(&LC.DESCRSHORT,' ')='', $Prnt_PiFld_Descrshort, &LC.DESCRSHORT)

FROM PS_PI_FIELD_LANG LC
WHERE PI_SYSTEM_ID = &A.PI_SYSTEM_ID
  AND PI_FIELD_ID  = &A.PI_FIELD_ID
  AND LANGUAGE_CD  = $Curr_language_cd
  AND EFFDT        = (SELECT MAX(EFFDT) FROM PS_PI_FIELD_LANG
                       WHERE PI_SYSTEM_ID = &A.PI_SYSTEM_ID
                         AND PI_FIELD_ID  = &A.PI_FIELD_ID
                         AND LANGUAGE_CD  = $Curr_language_cd
                         AND EFFDT <=&A.EFFDT )

end-select
end-procedure





#Include 'reset.sqc'     !Reset printer procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'sqrtrans.sqc'  !Translate SQR strings to a given language
#Include 'getrplng.sqc'  !Gets the report language

