!***********************************************************************
!  VALIDEIN.SQC : Validation logic for state EIN                       *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2013/02/13:16:13:26                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  885420                                              !
!                                                                      *
!***********************************************************************

begin-procedure Is-String-Numeric ($Test_String, :#Return_Value)
  let #Max_Lngth = length ($Test_String)
  let #Return_Value  =  1
  let #Char_Pos  =  1

  while #Char_Pos <= #Max_Lngth
    let $Test_Char = substr ($Test_String, #Char_Pos, 1)
    let #Which_Digit = instr ('0123456789', $Test_Char, 1)
    if  #Which_Digit = 0
      let #Return_Value  =  0
      break
    end-if
    add 1 to #Char_Pos
  end-while
end-procedure

begin-procedure StripToDash

  let #DashPosition = INSTR($StateEIN,'-',1)
  if #DashPosition <> 2 and #DashPosition <> 3
    let $State_ID_Ltrim = ltrim ($StateEIN, ' ')
  else
    let $State_ID_Ltrim = ltrim ($StateEIN, ' ')
    let $State_ID_Ltrim = ltrim ($State_ID_Ltrim, '0123456789')
    let $State_ID_Ltrim = ltrim ($State_ID_Ltrim, '-')
  end-if
  let $State_ID_Numeric  = $State_ID_Ltrim
  let #StateEIN = $State_ID_Numeric
  move  #StateEIN         to  $StateEIN    09999999999999999999

end-procedure


begin-procedure Validate-SWT-ID-No-Abort

  let $Error-Message-Generated = 'N'

  if $W2-State <> 'DE'
    let $StateEIN = rtrim($Employer-ID-SWT, ' ')
    if $StateEIN = ''
      do Invalid-SWT-ID-No-Abort
    end-if
  end-if

  Evaluate $W2-State
    when = 'AL'
       let $SWT_ID_Ltrim = ltrim ($StateEIN, ' ')
       let $SWT_ID_R = substr ($StateEIN,1,1)
       if $SWT_ID_R = 'R'
          let $SWT_ID_Numeric  = substr ($SWT_ID_Ltrim, 2,9)
       else
          let $SWT_ID_Numeric  = substr ($SWT_ID_Ltrim, 1, 10)
       end-if
       do  Is-String-Numeric ($SWT_ID_Numeric, #Rtrn_Value)
       if #Rtrn_Value = 0
         do Invalid-SWT-ID-No-Abort
       else
         move $SWT_ID_Numeric to #SWT_ID_Numeric
         if $SWT_ID_R <> 'R'
           if #SWT_ID_Numeric < 700000
              move $SWT_ID_Numeric to $StateEIN 0000999999
           else
              do Invalid-SWT-ID-No-Abort
           end-if
         else
           if #SWT_ID_Numeric < 700000
              do Invalid-SWT-ID-No-Abort
            end-if
         end-if
       end-if
       break
    when = 'AR'
       move $Employer-ID-SWT  to  $StateEIN
       while INSTR($StateEIN,'-',1) <> 0
         let #Hyphen = INSTR($StateEIN,'-',1)
         if #Hyphen > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Hyphen - 1)) ||
                           SUBSTR($StateEIN,(#Hyphen + 1),12)
         end-if
       end-while
       while INSTR($StateEIN,' ',1) <> 0
         let #Spaces = INSTR($StateEIN,' ',1)
         if #Spaces > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Spaces - 1)) ||
                           SUBSTR($StateEIN,(#Spaces + 1),12)
         end-if
       end-while
       while INSTR($StateEIN,'.',1) <> 0
         let #Marks  = INSTR($StateEIN,'.',1)
         if #Marks  > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Marks - 1)) ||
                           SUBSTR($StateEIN,(#Marks + 1),12)
         end-if
       end-while
       let $SWT_ID_Test  = ltrim ($StateEIN, ' ')
       if (length($SWT_ID_Test)) <> 11
         do Invalid-SWT-ID-No-Abort
       end-if
       let $StateEmplIN = $StateEIN
       break
    when = 'DC'
       while INSTR($StateEIN,'-',1) <> 0
         let #Hyphen = INSTR($StateEIN,'-',1)
         if #Hyphen > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Hyphen - 1)) ||
                           SUBSTR($StateEIN,(#Hyphen + 1),6)
         end-if
       end-while
       while INSTR($StateEIN,' ',1) <> 0
         let #Spaces = INSTR($StateEIN,' ',1)
         if #Spaces > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Spaces - 1)) ||
                           SUBSTR($StateEIN,(#Spaces + 1),6)
         end-if
       end-while
       do  Is-String-Numeric ($StateEIN, #Rtrn_Value)
       if #Rtrn_Value = 0
         do Invalid-SWT-ID-No-Abort
       end-if
       move $StateEIN to $StateEIN 00000000000099999999
       break
    when = 'DE'
       move '        '  to $StateEIN
       break
    when = 'ID'
       move $Employer-ID-SWT  to  $StateEIN
       while INSTR($StateEIN,'-',1) <> 0
         let #Hyphen = INSTR($StateEIN,'-',1)
         if #Hyphen > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Hyphen - 1)) ||
                           SUBSTR($StateEIN,(#Hyphen + 1),10)
         end-if
       end-while
       while INSTR($StateEIN,' ',1) <> 0
         let #Spaces = INSTR($StateEIN,' ',1)
         if #Spaces > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Spaces - 1)) ||
                           SUBSTR($StateEIN,(#Spaces + 1),10)
         end-if
       end-while
       while INSTR($StateEIN,'.',1) <> 0
         let #Marks  = INSTR($StateEIN,'.',1)
         if #Marks  > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Marks - 1)) ||
                           SUBSTR($StateEIN,(#Marks + 1),10)
         end-if
       end-while
       let $SWT_ID_Test  = ltrim ($StateEIN, ' ')
       if (length($SWT_ID_Test)) <> 9
         do Invalid-SWT-ID-No-Abort
       end-if
       do  Is-String-Numeric ($SWT_ID_Test, #Rtrn_Value)
       if #Rtrn_Value = 0
         do Invalid-SWT-ID-No-Abort
       end-if
       let $StateEIN = lpad($SWT_ID_Test,20,' ')
       break
    when = 'IN'
       let $SWT_ID_Ltrim = ltrim ($StateEIN, ' ')
       let $SWT_ID_Numeric  = substr ($SWT_ID_Ltrim, 1, 13)
       do  Is-String-Numeric ($SWT_ID_Numeric, #Rtrn_Value)
       if #Rtrn_Value = 0
         do Invalid-SWT-ID-No-Abort
       end-if
       let $SWT_ID_Test  = ltrim ($StateEIN, ' ')
       if (length($SWT_ID_Test)) <> 13
         do Invalid-SWT-ID-No-Abort
       end-if
       break
    when = 'KY'
       let $SWT_ID_Ltrim = ltrim ($StateEIN, ' ')
       let $SWT_ID_Numeric  = substr ($SWT_ID_Ltrim, 1, 6)
       do  Is-String-Numeric ($SWT_ID_Numeric, #Rtrn_Value)
       if #Rtrn_Value = 0
         do Invalid-SWT-ID-No-Abort
       end-if
       if (length($SWT_ID_Numeric)) <> 6
         do Invalid-SWT-ID-No-Abort
       end-if
       move $SWT_ID_Numeric  to $StateEIN           00000000000000999999
       break
    when = 'MD'
       while INSTR($StateEIN,'-',1) <> 0
         let #Hyphen = INSTR($StateEIN,'-',1)
         if #Hyphen > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Hyphen - 1)) ||
                           SUBSTR($StateEIN,(#Hyphen + 1),9)
         end-if
       end-while
       while INSTR($StateEIN,' ',1) <> 0
         let #Spaces = INSTR($StateEIN,' ',1)
         if #Spaces > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Spaces - 1)) ||
                           SUBSTR($StateEIN,(#Spaces + 1),9)
         end-if
       end-while
       while INSTR($StateEIN,'.',1) <> 0
         let #Marks  = INSTR($StateEIN,'.',1)
         if #Marks  > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Marks - 1)) ||
                           SUBSTR($StateEIN,(#Marks + 1),9)
         end-if
       end-while
       let $SWT_ID_Test  = ltrim ($StateEIN, ' ')
       if (length($SWT_ID_Test)) <> 8
         do Invalid-SWT-ID-No-Abort
       end-if
       do  Is-String-Numeric ($SWT_ID_Test, #Rtrn_Value)
       if #Rtrn_Value = 0
         do Invalid-SWT-ID-No-Abort
       end-if
       move $SWT_ID_Test to $StateAccountNumber  09999999
       break
    when = 'ME'
       move $Employer-ID-SWT  to  $StateEIN
       while INSTR($StateEIN,'-',1) <> 0
         let #Hyphen = INSTR($StateEIN,'-',1)
         if #Hyphen > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Hyphen - 1)) ||
                           SUBSTR($StateEIN,(#Hyphen + 1),12)
         end-if
       end-while
       while INSTR($StateEIN,' ',1) <> 0
         let #Spaces = INSTR($StateEIN,' ',1)
         if #Spaces > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Spaces - 1)) ||
                           SUBSTR($StateEIN,(#Spaces + 1),12)
         end-if
       end-while
       while INSTR($StateEIN,'.',1) <> 0
         let #Marks  = INSTR($StateEIN,'.',1)
         if #Marks  > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Marks - 1)) ||
                           SUBSTR($StateEIN,(#Marks + 1),12)
         end-if
       end-while
       let $SWT_ID_Test  = ltrim ($StateEIN, ' ')
       if (length($SWT_ID_Test)) <> 11
         do Invalid-SWT-ID-No-Abort
       end-if
       break
    when = 'MS'
       while INSTR($StateEIN,'-',1) <> 0
         let #Hyphen = INSTR($StateEIN,'-',1)
         if #Hyphen > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Hyphen - 1)) ||
                           SUBSTR($StateEIN,(#Hyphen + 1),11)
         end-if
       end-while
       let $SWT_ID_Test  = ltrim ($StateEIN, ' ')
       if (length($SWT_ID_Test)) < 8
         do Invalid-SWT-ID-No-Abort
       end-if
       if (length($SWT_ID_Test)) > 8
         do Invalid-SWT-ID-No-Abort
       end-if
       do  Is-String-Numeric ($SWT_ID_Test, #Rtrn_Value)
       if #Rtrn_Value = 0
         do Invalid-SWT-ID-No-Abort
       end-if
       if (length($SWT_ID_Test)) = 8
         let $SWT_ID_Test = $SWT_ID_Test || '  '
       end-if
       if (length($SWT_ID_Test)) > 8
         let $SWT_ID_Test = SUBSTR($SWT_ID_Test, 1, 8)
         let $SWT_ID_Test = $SWT_ID_Test || '  '
       end-if
       let $StateEIN = $SWT_ID_Test
       break
    when = 'MT'
       move $Employer-ID-SWT to $StateEIN
       break
    when = 'NC'
       move $Employer-ID-SWT  to  $StateEIN
       let $SWT_ID_Ltrim = ltrim ($StateEIN, ' ')
       let $SWT_ID_Numeric  = substr ($SWT_ID_Ltrim, 1, 9)
       do  Is-String-Numeric ($SWT_ID_Numeric, #Rtrn_Value)
       if #Rtrn_Value = 0
         do Invalid-SWT-ID-No-Abort
       end-if
       break
    when = 'NE'
       move $Employer-ID-SWT to $StateEIN
       let $StateEIN = RTRIM($StateEIN, ' ')
       do StripToDash
       do  Is-String-Numeric ($State_ID_Numeric, #Return_Value)
       if #Return_Value = 0
          do Invalid-SWT-ID-No-Abort
       end-if
       break
    when = 'NM'
       let $hyphen_removed = 'N'
       move $Employer-ID-SWT to $StateEIN
       let $StateEIN = RTRIM($StateEIN, ' ')
       while INSTR($StateEIN,'-',1) <> 0
         let #Hyphen = INSTR($StateEIN,'-',1)
         if #Hyphen > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Hyphen - 1)) || SUBSTR($StateEIN,(#Hyphen + 1),11)
           let $hyphen_removed = 'Y'
         end-if
       end-while
       if $hyphen_removed = 'Y'
          if SUBSTR($StateEIN,1,1) = '0'
             let $StateEIN = SUBSTR($StateEIN,2,11)
          else
             do Invalid-SWT-ID-No-Abort
             break
          end-if
       end-if
       if $hyphen_removed = 'Y'
          let $SWT_ID_zeros = SUBSTR($StateEIN,8,2)
          if $SWT_ID_zeros <> '00'
             do Invalid-SWT-ID-No-Abort
          end-if
          let $SWT_ID_Test  = rtrim ($StateEIN, ' ')
          do  Is-String-Numeric ($SWT_ID_Test, #Return_Value)
          if #Return_Value = 0
             do Invalid-SWT-ID-No-Abort
             break
          else
             move $SWT_ID_Test to $StateAccountNumber  9999999999
          end-if
       else
          let $SWT_ID_Test  = ltrim ($StateEIN, ' ')
          if (length($SWT_ID_Test)) <> 8 and
             (length($SWT_ID_Test)) <> 10
             do Invalid-SWT-ID-No-Abort
             break
          end-if
          if (length($SWT_ID_Test)) = 8
              let $State_ID_Numeric  = substr ($StateEIN, 1, 8)
              do  Is-String-Numeric ($State_ID_Numeric, #Return_Value)
              if #Return_Value = 0
                do Invalid-SWT-ID-No-Abort
                break
              else
                let $SWT_ID_Ltrim = SUBSTR($StateEIN,1,7) || '00' || SUBSTR($StateEIN,8,1)
                move $SWT_ID_Ltrim to $StateAccountNumber  9999999999
              end-if
          else
              let $SWT_ID_zeros = SUBSTR($StateEIN,8,2)
              if $SWT_ID_zeros <> '00'
                 do Invalid-SWT-ID-No-Abort
              end-if
              let $State_ID_Numeric  = SUBSTR($StateEIN, 1, 10)
              do  Is-String-Numeric ($State_ID_Numeric, #Return_Value)
              if #Return_Value = 0
                do Invalid-SWT-ID-No-Abort
              end-if
              move $State_ID_Numeric to $StateAccountNumber  9999999999
          end-if
       end-if
       break
    when = 'OH'
       let $StateEIN    = ltrim ($Employer-ID-SWT,' ')
       let $SWT_ID_Test  = rtrim ($StateEIN, ' ')
       if (length($SWT_ID_Test)) < 8
         or (length ($SWT_ID_Test)) > 9
         do Invalid-SWT-ID-No-Abort
       end-if
       if length($SWT_ID_Test) = 8
         let $SWT_ID_Test  = substr ($StateEIN,1,8)
       end-if
       if length($SWT_ID_Test) = 9
         let $SWT_ID_Test  = substr ($StateEIN,1,9)
       end-if
       do  Is-String-Numeric ($SWT_ID_Test, #Rtrn_Value)
       if #Rtrn_Value = 0
         do Invalid-SWT-ID-No-Abort
       end-if
       break
    when = 'OR'
       let $SWT_ID_Ltrim   = ltrim ($StateEIN, ' ')
       let $SWT_ID_Numeric = substr ($SWT_ID_Ltrim, 1, 20)
       do  Is-String-Numeric ($SWT_ID_Numeric, #Rtrn_Value)
       if #Rtrn_Value = 0
         do Invalid-SWT-ID-No-Abort
       end-if
       move $SWT_ID_Numeric  to $StateEIN  09999999999999999999
       break
    when = 'PA'
       let $SWT_ID_Ltrim = ltrim ($StateEIN, ' ')
       let $SWT_ID_Numeric  = substr ($SWT_ID_Ltrim,1,8)
       do  Is-String-Numeric ($SWT_ID_Numeric, #Rtrn_Value)
       if #Rtrn_Value = 0
         do Invalid-SWT-ID-No-Abort
       end-if
       let $StateEmplIN = $StateEIN
       break
    when = 'UT'
       move $Employer-ID-SWT  to  $StateEIN

       while INSTR($StateEIN,'-',1) <> 0
         let #Hyphen = INSTR($StateEIN,'-',1)
         if #Hyphen > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Hyphen - 1)) ||
                           SUBSTR($StateEIN,(#Hyphen + 1),14)
         end-if
       end-while
       while INSTR($StateEIN,' ',1) <> 0
         let #Spaces = INSTR($StateEIN,' ',1)
         if #Spaces > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Spaces - 1)) ||
                           SUBSTR($StateEIN,(#Spaces + 1),14)
         end-if
       end-while

       let $SWT_ID_Ltrim = rtrim ($StateEIN, ' ')
       if (length($SWT_ID_Ltrim)) <> 14
         do Invalid-SWT-ID-No-Abort
       end-if
       let $First_Char   = substr ($SWT_ID_Ltrim, 1, 1)
       let $Second_Char   = substr ($SWT_ID_Ltrim, 1, 2)
       let $Last_Three_Char  = substr ($SWT_ID_Ltrim, 12, 3)

       uppercase $First_Char
       uppercase $Second_Char
       uppercase $Last_Three_Char

       if $Last_Three_Char <> 'WTH' and $Last_Three_Char <> 'WMP'
           do Invalid-SWT-ID-No-Abort
       end-if
       let $SWT_ID_Numeric3  = substr ($SWT_ID_Ltrim, 1, 11)
       do  Is-String-Numeric ($SWT_ID_Numeric3, #Rtrn_Value3)
       if #Rtrn_Value3 = 0
          do Invalid-SWT-ID-No-Abort
       end-if
       let  $StateEIN  =  substr ($SWT_ID_Ltrim, 1, 14)
       break
    when = 'VA'
       let $SWT_ID_Ltrim = ltrim ($StateEIN, ' ')
       let $StateEIN = lpad($SWT_ID_Ltrim,20,' ')
       break
    when = 'VT'
       move $Employer-ID-SWT  to  $StateEIN
       while INSTR($StateEIN,'-',1) <> 0
         let #Hyphen = INSTR($StateEIN,'-',1)
         if #Hyphen > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Hyphen - 1)) ||
                           SUBSTR($StateEIN,(#Hyphen + 1),16)
         end-if
       end-while
       while INSTR($StateEIN,' ',1) <> 0
         let #Spaces = INSTR($StateEIN,' ',1)
         if #Spaces > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Spaces - 1)) ||
                           SUBSTR($StateEIN,(#Spaces + 1),16)
         end-if
       end-while
       while INSTR($StateEIN,'.',1) <> 0
         let #Marks  = INSTR($StateEIN,'.',1)
         if #Marks  > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Marks - 1)) ||
                           SUBSTR($StateEIN,(#Marks + 1),16)
         end-if
       end-while
       let $SWT_ID_Test = ltrim ($StateEIN, ' ')
       let $StateEIN    = rpad($SWT_ID_Test,20,' ')
       break
    when = 'WI'
      move $Employer-ID-SWT  to  $StateEIN
       while INSTR($StateEIN,'-',1) <> 0
         let #Hyphen = INSTR($StateEIN,'-',1)
         if #Hyphen > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Hyphen - 1)) ||
                           SUBSTR($StateEIN,(#Hyphen + 1),16)
         end-if
       end-while
       while INSTR($StateEIN,' ',1) <> 0
         let #Spaces = INSTR($StateEIN,' ',1)
         if #Spaces > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Spaces - 1)) ||
                           SUBSTR($StateEIN,(#Spaces + 1),16)
         end-if
       end-while
       while INSTR($StateEIN,'.',1) <> 0
         let #Marks  = INSTR($StateEIN,'.',1)
         if #Marks  > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Marks - 1)) ||
                           SUBSTR($StateEIN,(#Marks + 1),16)
         end-if
       end-while
      let $SWT_ID_Test  = ltrim ($StateEIN, ' ')
       if (length($SWT_ID_Test)) <> 15
         do Invalid-SWT-ID-No-Abort
       end-if
       if $SWT_ID_Test <> '036APPLIEDFOR01'
         do  Is-String-Numeric ($SWT_ID_Test, #Rtrn_Value)
      if #Rtrn_Value = 0
        do Invalid-SWT-ID-No-Abort
        end-if
      end-if
       let $StateEIN = rpad($SWT_ID_Test,20,' ')
      break
    when = 'WV'
       move $Employer-ID-SWT  to  $StateEIN
       while INSTR($StateEIN,'-',1) <> 0
         let #Hyphen = INSTR($StateEIN,'-',1)
         if #Hyphen > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Hyphen - 1)) ||
                           SUBSTR($StateEIN,(#Hyphen + 1),13)
         end-if
       end-while
       while INSTR($StateEIN,' ',1) <> 0
         let #Spaces = INSTR($StateEIN,' ',1)
         if #Spaces > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Spaces - 1)) ||
                           SUBSTR($StateEIN,(#Spaces + 1),13)
         end-if
       end-while
       while INSTR($StateEIN,'.',1) <> 0
         let #Marks  = INSTR($StateEIN,'.',1)
         if #Marks  > 0
           let $StateEIN = SUBSTR($StateEIN,1,(#Marks - 1)) ||
                           SUBSTR($StateEIN,(#Marks + 1),13)
         end-if
       end-while

       let $SWT_ID_Test  = ltrim ($StateEIN, ' ')
       if (length($SWT_ID_Test)) <> 8 and
          (length($SWT_ID_Test)) <> 9 and
          (length($SWT_ID_Test)) <> 12
         do Invalid-SWT-ID-No-Abort
       end-if
       do  Is-String-Numeric ($SWT_ID_Test, #Rtrn_Value)
       if #Rtrn_Value = 0
         do Invalid-SWT-ID-No-Abort
       end-if
       let $StateEIN = rpad($SWT_ID_Test,20,'0')
       break
    when-other
       move $Employer-ID-SWT  to  $StateEIN
       break
  end-evaluate
  move $StateEIN to $RptStateEIN
end-procedure

!  Unique editing requirements for StateEIN

begin-procedure Invalid-SWT-ID-No-Abort

 if $Error-Message-Generated = 'N'

  let $Message = 'Invalid State EIN number -> ' || '''' || $StateEIN || ''''

  Evaluate $W2-State
    when = 'AL'
      let $Message = $Message || ', Alabama EIN format: < 700,000 then 0123456789; > 700,000 then R123456789'
      break
    when = 'AR'
      let $Message = $Message || ', Arkansas EIN should be 11 characters in length'
      break
    when = 'DC'
      let $Message = $Message || ', District of Columbia EIN must be numeric'
      break
    when = 'ID'
      let $Message = $Message || ', Idaho EIN should be numeric and 9 digits in length'
      break
    when = 'IN'
      let $Message = $Message || ', Indiana EIN must be entered as numeric, 13 digits'
      break
    when = 'KY'
      let $Message = $Message || ', Kentucky EIN should be entered as: 999999'
      break
    when = 'MD'
      let $Message = $Message || ', Maryland EIN should be entered as: 99999999 or 9999999-9'
      break
    when = 'ME'
      let $Message = $Message || ', Maine EIN should be 11 characters in length'
      break
    when = 'MS'
      let $Message = $Message || ', Mississippi EIN should be entered as: 99999999'
      break
    when = 'NC'
      let $Message = $Message || ', North Carolina EIN should be entered as: 999999999'
      break
    when = 'NM'
      let $Message = $Message || ', New Mexico EIN should be entered as: 99999999, 9999999009 or 09-9999999-009'
      break
    when = 'OH'
      let $Message = $Message || ', Ohio EIN should be entered as: 99999999 or 999999999'
      break
    when = 'OR'
      let $Message = $Message || ', Oregon EIN must be numeric'
      break
    when = 'PA'
      let $Message = $Message || ', Pennsylvania EIN should be entered as: 99999999'
      break
    when = 'UT'
      let $Message = $Message || ', Utah EIN should be entered as: 99999999-999-xxx or 99999999999xxx'
      break
    when = 'WI'
      let $Message = $Message || ', Wisconsin EIN should be numeric and 15 digits in length'
      break
    when = 'WV'
      let $Message = $Message || ', West Virginia EIN should be numeric and 8, 9 or 12 digits in length'
      break
    when-other
      let $Message = $Message || ' for ' || $State-Name
      break
  end-evaluate

  let $Error-Message-Generated = 'Y'
 end-if

end-procedure



