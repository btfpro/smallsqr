!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:04:38:32                                 !
!       $Release:  HR9                                                 !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************
! -----------------------------------------------------------------------------
! Report ID:     PAY052.SQR
!
! Description:   Dumps the Tipped Employee Allocation data by
!                selected Company/Year/Quarter.
!
! Purpose:       None really....except to allow the Payroll User(s)
!                to view Tipped employees and their Allocation data.
!
! Created:       3-Sep-1997
!
! Run Frequency: On request.
!
! Input:         PeopleSoft database & user parameters.
!
! Output:
!   ¯  Report   - Allocation Report (PAY052.LIS)
!
! NOTES:
! ------
!   (1)  Specifications based on Tips Project (summer 1997)
!
!   (2)  This SQR assumes that is there are allocations, then
!        there must be at least one row on the TIPS_EMPL_INPUT table.
!
! ---------------------------------------------------------------------
!                      <<<  MAINTENANCE LOG  >>>
! ---------------------------------------------------------------------
! |   WHEN    |  WHO  |  Maintenance performed?
! ---------------------------------------------------------------------
! | dd-mmm-yy |  ???  |
! |           |       |
! ---------------------------------------------------------------------
! \/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/
! /\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\/\

#Include 'setenv.sqc'                  ! Set environment

#Include 'setup32.sqc'                 ! Printer Controls

BEGIN-REPORT                           ! SQR BEGIN Statement

  DO INIT-REPORT                       ! Start the SQR
  DO STDAPI-TERM                       ! End the SQR

END-REPORT                             ! SQR END Statement

! *******************************************************************
! ** Section Begin:  DEFINES <Standard SQR>
! *******************************************************************

#DEFINE  COL01 001     ! Emplid
#DEFINE  COL02 017     ! Employee Name
#DEFINE  COL03 060     ! Tipped?
#DEFINE  COL04 074     ! YTD Allocation
#DEFINE  COL05 093     ! YTD Hours
#DEFINE  COL06 112     ! Pending Allocation
#DEFINE  COL07 131     ! Pending Hours

! *******************************************************************
! ** Section End:  DEFINES <Standard SQR>
! *******************************************************************

! *******************************************************************
! ** Section Begin:  BEGIN-HEADING  <STANDARD SQR>
! *******************************************************************

BEGIN-HEADING   7                        ! Begin Headings

#INCLUDE 'stdhdg02.sqc'                  ! Standard Heading #02

  PRINT '|-------- YTD Allocated --------|'  (+1,{COL04},)
  PRINT '|-------- Total Pending --------|'  (,{COL06},)

  PRINT 'Employee ID'                    (+1,{COL01},)
  PRINT 'Employee Name'                  (,{COL02},)
  PRINT 'Tipped?'                        (,{COL03},)
!  PRINT 'Tips'                           (,{COL04},)
!  PRINT 'Hours'                          (,{COL05},)
!  PRINT 'Tips'                           (,{COL06},)
!  PRINT 'Hours'                          (,{COL07},)

  PRINT '---------------'                (+1,{COL01},)
  PRINT '------------------------------' (,{COL02},)
  PRINT '----------'                     (,{COL03},)
  PRINT '|--------      Tips     --------|'  (,{COL04},)
  PRINT '|--------      Tips     --------|'  (,{COL06},)
!  PRINT '--------------'                 (,{COL04},)
!  PRINT '--------------'                 (,{COL05},)
!  PRINT '--------------'                 (,{COL06},)
!  PRINT '--------------'                 (,{COL07},)

END-HEADING     !  End Headings

! *******************************************************************
! ** Section End:  BEGIN-HEADING  <STANDARD SQR>
! *******************************************************************


! *******************************************************************
! ** Paragraph Begin:  INIT-REPORT
!    Called by the SQR-required section [BEGIN-REPORT]
! *******************************************************************

BEGIN-PROCEDURE INIT-REPORT            ! Main Procedure Section

  MOVE 'PAY052.SQR'                        TO $REPORTID
  MOVE 'Balance Verification Report'   TO $REPORTTITLE

  DO GET-CURRENT-DATETIME

  DISPLAY $REPORTID
  DISPLAY $REPORTTITLE

  DISPLAY ' '

  DISPLAY 'CURRENT DATE : ' NOLINE
  DISPLAY $ASOFTODAY

  DISPLAY 'CURRENT TIME : ' NOLINE
  DISPLAY $ASOFNOW

  DISPLAY ' '

  DO INIT-DATETIME                     ! Perform Date/Time Proc

  DO INIT-NUMBER                       ! Initialize Number

  DO STDAPI-INIT                       ! Standard Initialize

  DO SELECT-PARAMETERS                 ! Standard Select Parameters

  DO START-UP                          ! Start Up Settings

  DO REPORT                            ! Do the MAIN PARAGRAPH

END-PROCEDURE                          ! End the Init Procedure

! *******************************************************************
! ** Paragraph End:  INIT-REPORT
! *******************************************************************


! *******************************************************************
! ** Paragraph Begin:  REPORT
!    This is the main paragraph of the SQR.
!    Common routine for version 6.01 of PeopleSoft Payroll.
! *******************************************************************

BEGIN-PROCEDURE REPORT

BEGIN-SELECT

IUE.EMPLID         (+1,{COL01},) ! Select/Print Emplid
PD.NAME            (,{COL02},)   ! Print the returned Name
  LET $EMPLID=&IUE.EMPLID
  DO GET-TIP-VALUE               ! Retrieve Tipped value from PS_JOB

  PRINT $TIPPED    (,{COL03},)   ! Print the returned Tipped Value

  DO GET-ALLOCATION              ! Retrieve Tip Allocation data

#ifdef DB2ALL
DECIMAL(SUM(IUE.GRS_YTD),15,3)   &IUE.Grs_YTD
DECIMAL(SUM(IUE.HRS_YTD),15,3)   &IUE.Hrs_YTD
#else
SUM(IUE.GRS_YTD)         &IUE.Grs_YTD
SUM(IUE.HRS_YTD)         &IUE.Hrs_YTD
#endif

  PRINT &IUE.Grs_YTD        (,{COL04},)  EDIT  $99,999,999.99  ! YTD Gross

!  PRINT &IUE.Hrs_YTD        (,{COL05},)  EDIT  $99,999,999.99  ! YTD Hours

FROM
      PS_EARNINGS_BAL  IUE,
      PS_NAMES         PD

WHERE
      IUE.COMPANY        =  $RC_PAY.COMPANY      ! JOIN Company
  AND IUE.BALANCE_ID     =  $CALENDAR_YEAR_ID    ! Balance ID
  AND IUE.BALANCE_YEAR   =  #RC_PAY.BALANCE_YEAR ! Balance Year
  AND IUE.ERNCD          =  $ERNCD               ! Look for Tip Allocations

  AND IUE.SPCL_BALANCE   =  'N'                  ! Not an Accumulator
  AND IUE.BALANCE_QTR    =  #RC_PAY.BALANCE_QTR  ! Selected Quarter
  AND IUE.BALANCE_PERIOD =                       ! Max Month
              (SELECT MAX(IUE2.BALANCE_PERIOD)
               FROM PS_EARNINGS_BAL    IUE2
               WHERE  IUE2.EMPLID        =  IUE.EMPLID
                 AND  IUE2.COMPANY       =  IUE.COMPANY
                 AND  IUE2.BALANCE_YEAR  =  IUE.BALANCE_YEAR
                 AND  IUE2.ERNCD         =  IUE.ERNCD
                 AND  IUE2.SPCL_BALANCE  =  IUE.SPCL_BALANCE
                 AND  IUE2.BALANCE_QTR   =  IUE.BALANCE_QTR)

   AND PD.EMPLID    = IUE.EMPLID
   AND PD.NAME_TYPE = 'PRI'
   AND PD.EFFDT =
      (SELECT MAX(PX.EFFDT)
       FROM   PS_NAMES PX
       WHERE  PX.EMPLID    = PD.EMPLID
         AND  PX.NAME_TYPE = PD.NAME_TYPE
         AND  PX.EFFDT    <= $ASOFDATE)
GROUP BY PD.NAME,
      IUE.EMPLID
ORDER BY
      PD.NAME,
      IUE.EMPLID

END-SELECT      !  End the SELECT

END-PROCEDURE   !  REPORT

! *******************************************************************
! ** Paragraph End:  REPORT
! *******************************************************************


! *******************************************************************
! ** Paragraph Begin:  START-UP
! *******************************************************************
!    This paragraph sets the working storage up for the remainder
!    of the SQR.
! *******************************************************************

BEGIN-PROCEDURE START-UP       !  Begin Procedure

  LET $ASOFDATE = $ASOFTODAY            ! Lood Lookup variable
  LET $COMPANY  = $RC_PAY.COMPANY       ! Lood Lookup variable
  DO GET-COMPANY-DATA                   ! Get Company Data
  LET $ERNCD    = &CT.ERNCD_TIPS_ALLOC  ! Load the Earning Code

  DO GET-CALENDAR-YEAR-ID             ! Get Balance ID for Calendar Year

END-PROCEDURE   !  START-UP

! *******************************************************************
! ** Paragraph End:  START-UP
! *******************************************************************


! *******************************************************************
! ** Paragraph Begin:  GET-TIP-VALUE
! *******************************************************************
!    This paragraph retreives the employees 'current' Tipped value
!    off of PS_JOB.  (Field = DIRECTLY_TIPPED)
! *******************************************************************

BEGIN-PROCEDURE GET-TIP-VALUE  ! Begin Procedure

 LET  $TIPPED = 'N/A'          ! Reset the Tipped print value

BEGIN-SELECT  LOOPS=1          ! Start the SELECT

TJ.DIRECTLY_TIPPED             ! Tipped Indicator
TI.EMPL_RCD                   ! EMPL_RCD for later JOIN
TI.COMPANY                     ! COMPANY for later JOIN
TI.BUSINESS_UNIT               ! BUSINESS UNIT for later JOIN
TI.TIPS_ESTAB                  ! TIPS ESTABLISHMENT for later JOIN

      MOVE 'DIRECTLY_TIPPED'       TO $FIELDNAME     ! Get the XLAT
      MOVE &TJ.DIRECTLY_TIPPED     TO $FIELDVALUE    ! Get the XLAT
      DO READ-TRANSLATE-TABLE                        ! Get the XLAT
      MOVE  $XLATSHORTNAME TO $TIPPED                ! Get the XLAT

FROM
      PS_JOB             TJ ,  ! The JOB Table
      PS_TIPS_EMPL_INPUT TI    ! The Tips Gross Receipt Table

WHERE
       TJ.EMPLID     = $EMPLID                   ! Emplid SELECT

  AND  TJ.EMPLID     = TI.EMPLID                 ! JOIN
  AND  TJ.EMPL_RCD  = TI.EMPL_RCD              ! JOIN

  AND  TI.INPUT_DT   =                           ! Max Gross Receipt
        (SELECT MAX(TI1.INPUT_DT)                ! Max Gross Receipt
         FROM PS_TIPS_EMPL_INPUT TI1             ! Max Gross Receipt
          WHERE   TI1.EMPLID    = TI.EMPLID      ! Max Gross Receipt
            AND   TI1.EMPL_RCD = TI.EMPL_RCD)  ! Max Gross Receipt

  AND  TJ.EFFDT      =                           ! Max JOB
        (SELECT MAX(TJ1.EFFDT)                   ! Max JOB
         FROM PS_JOB            TJ1              ! Max JOB
          WHERE   TJ1.EMPLID    = TJ.EMPLID      ! Max JOB
            AND   TJ1.EMPL_RCD = TJ.EMPL_RCD   ! Max JOB
            AND   TJ1.EFFDT    <= $ASOFTODAY     ! Max JOB Seq
      AND  TJ.EFFSEQ     =                       ! Max JOB Seq
          (SELECT MAX(TJ2.EFFSEQ)                ! Max JOB Seq
           FROM PS_JOB            TJ2            ! Max JOB Seq
           WHERE   TJ2.EMPLID    = TJ.EMPLID     ! Max JOB Seq
             AND   TJ2.EMPL_RCD = TJ.EMPL_RCD  ! Max JOB Seq
             AND   TJ2.EFFDT     = TJ.EFFDT))    ! Max JOB Seq

END-SELECT      ! End the SELECT

END-PROCEDURE   !  GET-TIP-VALUE

! *******************************************************************
! ** Paragraph End:  GET-TIP-VALUE
! *******************************************************************


! *******************************************************************
! ** Paragraph Begin:  GET-ALLOCATION
! *******************************************************************
!    This paragraph retreives the employees 'current' Tip Allocations
!    off of PS_TIPS_ALLOC_EMPL
! *******************************************************************

BEGIN-PROCEDURE GET-ALLOCATION ! Begin Procedure

BEGIN-SELECT

sum(TAE.TOT_ALLOCATION) (,{COL06},)  EDIT  $99,999,999.99  ! Total Allocation

sum(TAE.GRS_TIP_HRS)  !  (,{COL07},)  EDIT  $99,999,999.99  ! Gross Tippable Hours - YTD

FROM
      PS_TIPS_ALLOC_EMPL TAE,
      PS_TIPS_ALLOC_PD   TPD

WHERE
      TAE.COMPANY        =  TPD.COMPANY         ! JOIN
  AND TPD.ALLOC_COMPLETE   = 'Y'                ! Completed Postings
  AND TPD.ADDL_PAY_LD_RUN = 'N'                 ! Not loaded to Earnings

  AND TAE.COMPANY        =  &TI.COMPANY         ! JOIN
  AND TAE.BUSINESS_UNIT  =  &TI.BUSINESS_UNIT   ! JOIN
  AND TAE.TIPS_ESTAB     =  &TI.TIPS_ESTAB      ! JOIN
  AND TAE.EMPL_RCD      =  &TI.EMPL_RCD       ! JOIN
  AND TAE.EMPLID         =  $EMPLID             ! Current employee

END-SELECT      ! End the SELECT

END-PROCEDURE   !  GET-ALLOCATION

! *******************************************************************
! ** Paragraph End:  GET-ALLOCATION
! *******************************************************************


! *******************************************************************
! *  Include Section
! *******************************************************************
! *    This is where the SQC's are  included into the body of
! *    the program.
! *    NOTE:  All SQC's are called in lower-case.  For UNIX
! *           environment, make sure that the actual SQC files
! *           are stored in lower-case, or they will not be found.
! *******************************************************************

#Include 'stdapi.sqc'    ! Standard API Procedure
#Include 'curdttim.sqc'  ! Get-Current-DateTime procedure
#Include 'datetime.sqc'  ! Routines for date and time formatting
#Include 'number.sqc'    ! Routines to format numbers
#Include 'readxlat.sqc'  ! Routine to read the Translate Table
#Include 'getcodta.sqc'  ! Routine to retrieve Company data
#Include 'getempnm.sqc'  ! Routine to retrieve Employee Name
#Include 'getbalid.sqc'  ! Routine to retrieve Balance ID (Calendar Year)
#Include 'payrctl2.sqc'  ! Payroll Run Control #2

! *******************************************************************
!                   <<<   END OF FILE   >>>
! *******************************************************************
