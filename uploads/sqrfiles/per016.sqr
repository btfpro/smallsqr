!***********************************************************************
!  PER016:  EEO-1 Report -- Federally specified format                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/09/17:19:12:00                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689848                                              !
!                                                                      *
!***********************************************************************


! Uncomment the following line to have debug values put into the sqr.log
! #DEFINE DEBUGPER016


#include 'setenv.sqc'   !Set environment

!----------------------------------------------------------------------
!---------Program------------------------------------------------------
!----------------------------------------------------------------------
!----------------------------------------------------------------------
Begin-Program

#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Begin Program'
#ENDIF


  DO Init-DateTime
  DO Init-Number
  DO Get-Current-DateTime
  DO Init-Report
  DO Init-Array

  LET $Page_Printed = 'NO'
  LET #H = 0
  let $outputtofile = ''

  ! Specs say font cannot be smaller than 9 points, but
  ! PTPSL160 uses 8 point courier
  !------------------------------------------------------------
  ALTER-PRINTER
      point-size=9                        ! Font size of 9 pts

  ! They want to report by company, single estab, hq unit and its controlled estabs,
  ! or for all establishments
  !------------------------------------------------------------
  evaluate $ReportChoice

  when = '1'
       let $Where-Clause = ' AND F.COMPANY = ' || $quote || $COMPANY || $quote
       break

  when = '2'
       let $Where-Clause = ' AND E.ESTABID = ' || $quote || $Estab || $quote
       break

  when = '3'
 !Begin the Incident 1353849006
       !let $Where-Clause = 'AND F.CTL_ESTABID = ' || $Quote || $CtlEstabID || $Quote
       let $Where-Clause = 'AND F1.CTL_ESTABID = ' || $Quote || $CtlEstabID || $Quote
 !End the Incident 1353849006
       break

  when = '4'
       let $Where-Clause = ' '
       break

  end-evaluate

  DO Process-Main

  DO Stdapi-Term

End-Program

!----------------------------------------------------------------------
!---------Init-Report--------------------------------------------------
!----------------------------------------------------------------------
! We need to get the calendar year from the process instance
!----------------------------------------------------------------------
Begin-Procedure Init-Report

#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Init-Report'
#ENDIF

  MOVE 'PER016' to $ReportID
  MOVE 'EEO-1 Equal Employment Opportunity Employer Information Survey' to $ReportTitle

  DISPLAY $ReportTitle

#IFDEF DEBUGPER016
  DISPLAY 'Report ID: ' NOLINE
  DISPLAY $ReportID
#ENDIF

  DO Stdapi-Init


  IF $prcs_process_instance = ''
     DISPLAY ''
     DISPLAY 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     DISPLAY ''
     STOP QUIET
  ELSE
     DO Select-Parameters
     if $ReportYear = ''
        do Format-DateTime($ThruDate,  $Report_YMD, {DEFYMD}, '', '')
        let #ReportYear = {ps-substr}($Report_YMD,1,4)
     end-if
     do Format-Number(#ReportYear, $ReportYear, '9999')
  END-IF

End-Procedure



!----------------------------------------------------------------------
!---------Setup--------------------------------------------------------
!----------------------------------------------------------------------
! Here, we describe a printer for use in printing our form. NOTE: this
! SQR does not support line printers. You must print this report
! via an SPF file to a laser or inkjet printer.
!-----------------------------------------------------------------------
Begin-Setup
#include 'setupdb.sqc'
DECLARE-PRINTER thePrinter
    ! Printer doesn't matter, because we're going to turn the -ziv flag on
    ! in the process definition. This should work with any printer since
    ! SQR Viewer will print through any Windows print driver...
    type=HP                             ! Hewlett-Packard
    font=3                              ! Helvetica Font
    point-size=9                        ! Default font size of 10 pts
END-DECLARE

DECLARE-LAYOUT landscape                ! A layout called 'landscape'
    paper-size=(11,8.5)                 ! Letter size paper
    orientation=landscape               ! Landscape orientation
    left-margin=.25                     ! Left margin is .5 inches
    top-margin=.5                       ! Top Margin is .5 inches
    right-margin=.25                    ! Right margin of .5 inches
    bottom-margin=.25                   ! Bottom margin of .5 inches
    line-height=9
    char-width=5

END-DECLARE

DECLARE-REPORT landscapeReport
    layout=landscape
    printer-type=HP                     ! Hewlett-Packard
END-DECLARE

#define PAGE_ORIENTATION LANDSCAPE
#define PAGE_MAX_COLS    132
#define PAGE_MAX_LINES   60


End-Setup


!----------------------------------------------------------------------
!---------Get-Values---------------------------------------------------
!----------------------------------------------------------------------
! Fetch run control parameters
!----------------------------------------------------------------------
begin-procedure Get-Values
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Get-Values'
#ENDIF

   DO Get-From-Thru-Date
   DO Get-Run-Scope
   DO Get-CTL_ESTABID
   DO Get-Company
   DO Get-Establishment
   DO Get-Report-Type

   LET $Quote = ''''
   LET #Less_Estabs = 0
   LET #Report_Count = 0


#IFDEF DEBUGPER016
  DISPLAY '   $FromDate: ' NOLINE
  DISPLAY $FromDate
  DISPLAY '   $ThruDate: ' NOLINE
  DISPLAY $ThruDate
  DISPLAY '   $CtlEstabID: ' NOLINE
  DISPLAY $CtlEstabID
  DISPLAY '   $ReportChoice: ' NOLINE
  DISPLAY $ReportChoice
  DISPLAY '   $Continue: ' NOLINE
  DISPLAY $Continue
#ENDIF

end-procedure Get-Values

!----------------------------------------------------------------------
!---------Process-Main-------------------------------------------------
!----------------------------------------------------------------------
! This routine will be run once - this SQL loop controls the flow of
! the program.
!----------------------------------------------------------------------
begin-procedure Process-Main

! Debugging stuff
!----------------------------------------------------
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Process-Main'
#ENDIF

LET $Page_Printed = 'NO'
LET $FIRST = 'N'


begin-SELECT

E.ESTABID,
!Begin the Incident 1353849006
!F.CTL_ESTABID
F1.CTL_ESTABID,
!End the Incident 1353849006
F.HQUNIT,
F.DESCR,
F.ADDRESS1,
F.CITY,
F.COUNTY,
F.STATE,
F.POSTAL,
F.COUNTRY,
F.COMPANY,
G.FEDERAL_EIN,
!Begin the Incident 1353849006
!F.EEO_GOV_CONTRACTOR,
!F.EEO_MIN_100,
!F.EEO_CO_AFFILIATED
F1.EEO_GOV_CONTRACTOR,
F1.EEO_MIN_100,
F1.EEO_CO_AFFILIATED
!End the Incident 1353849006

  #IFDEF DEBUGPER016
    DISPLAY '   Processing Establishment: ' NOLINE
    DISPLAY &E.ESTABID NOLINE
    DISPLAY '  ' NOLINE
    DISPLAY &F.DESCR
!Begin the Incident 1353849006
    !DISPLAY '   &F.CTL_ESTABID: ' NOLINE
    !DISPLAY &F.CTL_ESTABID
    DISPLAY '   &F1.CTL_ESTABID: ' NOLINE
    DISPLAY &F1.CTL_ESTABID
!End the Incident 1353849006
    DISPLAY '   &F.HQUNIT: ' NOLINE
    DISPLAY &F.HQUNIT
  #ENDIF

    LET $HQ_Unit = RTRIM(&F.HQUNIT,' ')
    LET $Estab_Country = RTRIM(&F.COUNTRY,' ')

    IF $HQ_Unit = 'Y'
       LET $Old_Parent_Co = $Parent_Company
       LET $Parent_Company = RTRIM(&F.DESCR,' ')
    END-IF

    LET $This_COMP = RTRIM(&F.COMPANY,' ')

       IF $This_COMP != $Last_COMP

         IF $Last_Single = 'N' and $Page_Printed = 'YES'
             LET $Consolidated = 'Y'
             DO Print-Totals
             DO Write-To-File-Estab
             DO write-to-file
             DO Reset-Array
             If #HeadQ >1
               Display 'WARNING -- Currently for the Company ' noline
               display  $Last_COMP noline
               display ' we are reporting for ' noline
               display  #HeadQ noline
               display ' Head Quarters'
             End-if
         END-IF

         LET $FIRST = 'Y'
         add 5 to #H
         DO Open-File
         let $Last_HQ = ''
         let $Last_Single = ''
         LET $SingleEstab = ''
         Let #HeadQ = 0

       END-IF


    ! On-Break wasn't meeting our needs, we'll handle this manually
    !--------------------------------------------------------------
    IF $HQ_Unit = 'Y' OR $ReportChoice = '2'
    !Begin the Incident 1353849006
       !LET $This_HQ = RTRIM(&F.CTL_ESTABID,' ')
       LET $This_HQ = RTRIM(&F1.CTL_ESTABID,' ')
    !End the Incident 1353849006
       LET $This_HQ_Address = RTRIM(&F.ADDRESS1,' ')
       LET $This_HQ_City = RTRIM(&F.CITY,' ')
       LET $This_HQ_County = RTRIM(&F.COUNTY, ' ')
       LET $This_HQ_State = RTRIM(&F.STATE,' ')
       LET $This_HQ_Postal = RTRIM(&F.POSTAL,' ')
       LET $This_HQ_Descr = RTRIM(&F.DESCR,' ')
       if $FIRST = 'Y'
          add 1 to #HeadQ
          Let $FIRST = 'N'
       END-IF

    END-IF

    ! If we're on to a new Controlling establishment, print
    ! consolidated report if the last establishment wasn't a single
    ! estab. Otherwise, just reset the consolidated array.
    !--------------------------------------------------------------

        IF $This_HQ != $Last_HQ
               IF $Last_Single = 'N' and $Page_Printed = 'YES'
                  LET $Consolidated = 'Y'
                  DO Print-Totals
                  DO Write-To-File-Estab
                  DO write-to-file
                  DO Reset-Array
               END-IF
                  if $FIRST = 'N' AND $Last_HQ != ''
                     add 1 to #HeadQ
                  end-if
                  DO Reset-Consolidated-Array

         END-IF


#IFDEF DEBUGPER016
    DISPLAY '   $This_HQ: ' NOLINE
    DISPLAY $This_HQ
    DISPLAY '   $Last_HQ: ' NOLINE
    DISPLAY $Last_HQ
#ENDIF

    ! Default is that this is NOT a less-than-50 estab
    !--------------------------------------------------------------
    LET $LessThan50 = 'N'

    ! Find out if this is a single or multiple establishment HQ Unit
    !---------------------------------------------------------------
    IF $HQ_Unit = 'Y'
       DO Single-Multiple-Estab
    END-IF
    LET $Last_Single = $SingleEstab


#IFDEF DEBUGPER016
    DISPLAY '   $SingleEstab: ' NOLINE
    DISPLAY $SingleEstab
#ENDIF

    ! If this HQUnit is a single establishment unit, print a single
    ! establishment report, otherwise print a multiple-estab report
    !
    ! Single Estab Reports only print for US HQ Units
    !
    ! Multiple Estab Reports run for any controlled establishment
    ! that is in the US
    !
    ! Headquarter Unit Report runs for both US and non-US estabs,
    ! but no calculations are done if the HQ unit is outside the US
    !---------------------------------------------------------------
    IF $SingleEstab = 'Y' AND $Estab_Country = 'USA'
       DO Process-Estab-Employees
    ELSE
       IF $Estab_Country = 'USA'
          DO Process-Estab-Employees
       END-IF
    END-IF

    !Begin the Incident 1353849006
    !LET $EEO_Contractor = &F.EEO_GOV_CONTRACTOR
    !LET $EEO_Minimum =    &F.EEO_MIN_100
    !LET $EEO_Affiliated = &F.EEO_CO_AFFILIATED
    LET $EEO_Contractor = &F1.EEO_GOV_CONTRACTOR
    LET $EEO_Minimum =    &F1.EEO_MIN_100
    LET $EEO_Affiliated = &F1.EEO_CO_AFFILIATED
    !End the Incident 1353849006
   IF $HQ_Unit = 'N' AND $Estab_Country != 'USA'
    ELSE
       IF $SingleEstab = 'Y' AND $Estab_Country != 'USA'
       ELSE
          IF $SingleEstab = 'Y' AND $EEO_Contractor = 'N' AND $EEO_Minimum = 'N' AND $EEO_Affiliated = 'N'
          ELSE
             LET $Consolidated = 'N'
             DO Print-Totals
             DO Write-To-File-Estab
             DO write-to-file
             DO Reset-Array
          END-IF
       END-IF
    END-IF

    ! Store the Controlling Establishment ID
    !--------------------------------------------------------------
    LET $Last_HQ = $This_HQ
    LET $Last_COMP = $This_COMP
    LET $Last_Estab = RTRIM(&E.ESTABID,' ')

    LET $Last_HQ_Address = $This_HQ_Address
    LET $Last_HQ_City = $This_HQ_City
    LET $Last_HQ_County = $This_HQ_County
    LET $Last_HQ_State = $This_HQ_State
    LET $Last_HQ_Postal = $This_HQ_Postal
    LET $Last_HQ_Descr = $This_HQ_Descr



    !  Reset the establishmet level IDs
    !--------------------------------------------------------------
    DO Reset-Array


FROM  PS_ESTAB_US_VW E,
      PS_ESTAB_TBL F,
   !Begin the Incident 1353849006
      PS_ESTAB_TBL_USA F1,
   !End the Incident 1353849006
      PS_COMPANY_TBL G
WHERE E.ESTABID = F.ESTABID
  AND F.COMPANY    = G.COMPANY
  AND F.EFFDT =  (SELECT MAX(F1.EFFDT)
                 FROM   PS_ESTAB_TBL F1
                 WHERE  F1.ESTABID = E.ESTABID
                   AND  F1.EFFDT  <= $ThruDate)
  AND F.EFF_STATUS = 'A'

  AND ((F.COUNTRY = 'USA'
  !Begin the Incident 1353849006
  !AND (F.EEO_GOV_CONTRACTOR <> 'N'
  !OR F.EEO_CO_AFFILIATED <> 'N'
  !OR F.EEO_MIN_100 <> 'N'))
  AND (F1.EEO_GOV_CONTRACTOR <> 'N'
  OR F1.EEO_CO_AFFILIATED <> 'N'
  OR F1.EEO_MIN_100 <> 'N'))
  !End the Incident 1353849006
  OR F.HQUNIT = 'Y')
  AND G.EFFDT =  (SELECT MAX(G1.EFFDT)
                 FROM   PS_COMPANY_TBL G1
                 WHERE  G1.COMPANY = G.COMPANY
                   AND  G1.EFFDT  <= $ThruDate)
  !Begin the Incident 1353849006
  AND F.ESTABID=F1.ESTABID
  AND F.EFFDT = F1.EFFDT
  !End the Incident 1353849006
[$Where-Clause]

!Begin the Incident 1353849006
!ORDER BY F.COMPANY, F.CTL_ESTABID, F.HQUNIT desc, E.ESTABID
ORDER BY F.COMPANY, F1.CTL_ESTABID, F.HQUNIT desc, E.ESTABID
!End the Incident 1353849006
END-SELECT

  IF $Last_Single = 'N' and $Page_Printed = 'YES'
    LET $Consolidated = 'Y'
    DO Print-Totals
    DO Write-To-File-Estab
    DO write-to-file
    If #HeadQ >1
       Display 'WARNING -- Currently for the Company ' noline
       display  &F.COMPANY noline
       display ' we are reporting for ' noline
       display  #HeadQ noline
       display ' Head Quarters'noline

    End-if

  END-IF
  DO Reset-Array
  DO Reset-Consolidated-Array


end-procedure

!----------------------------------------------------------------------
!---------Get-Number-Of-Establishments---------------------------------
!----------------------------------------------------------------------
! Returns the number of Establishments in the ESTAB_TBL
!
! This will fetch them in correct printing order - an HQ unit followed
! by the establishments it controls
!----------------------------------------------------------------------
begin-procedure Get-Number-Of-Establishments

#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Get-Number-Of-Establishments'
#ENDIF

! If they want only those controlled by one headquarters, then we need
! to only get back those that are controlled by the supplied value
!----------------------------------------------------------------------
IF $ReportChoice = '3'
  !Begin the Incident 1353849006
  !LET $Estab-Where = 'AND Z.CTL_ESTABID = ' || $Quote || $CtlEstabID || $Quote
  LET $Estab-Where = 'AND Z1.CTL_ESTABID = ' || $Quote || $CtlEstabID || $Quote
  !End the Incident 1353849006
ELSE
  LET $Estab-Where = ''
END-IF

CREATE-ARRAY
    NAME = EstablishmentIDs
    SIZE = 5000
    FIELD = theEstab:char

let #count = 0
BEGIN-SELECT DISTINCT

Y.ESTABID
    PUT &Y.ESTABID into EstablishmentIDs(#count)
    ADD 1 to #count
Z.HQUNIT
Z.COMPANY
!Begin the Incident 1353849006
!Z.CTL_ESTABID
Z1.CTL_ESTABID
!End the Incident 1353849006

FROM PS_ESTAB_US_VW   Y,
     PS_ESTAB_TBL  Z,
!Begin the Incident 1353849006    
     PS_ESTAB_TBL_USA  Z1
!End the Incident 1353849006
WHERE Y.ESTABID = Z.ESTABID
AND   Z.REG_REGION = 'USA'
!Begin the Incident 1353849006
AND Z.ESTABID=Z1.ESTABID
AND Z.EFFDT = Z1.EFFDT
[$Estab-Where]

!ORDER BY Z.CTL_ESTABID, Z.HQUNIT desc, Z.COMPANY, Y.ESTABID
ORDER BY Z1.CTL_ESTABID, Z.HQUNIT desc, Z.COMPANY, Y.ESTABID
END-SELECT
!End the Incident 1353849006
end-procedure Get-Number-Of-Establishments


!----------------------------------------------------------------------
!---------Single-Multiple-Estab----------------------------------------
!----------------------------------------------------------------------
! Single-Multiple-Estab is called in Process-Main for each EstabID
! that is a headquarter in order to check if there is only one
! establishment and sets $SingleEstab if so
!----------------------------------------------------------------------
Begin-Procedure Single-Multiple-Estab

#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Single-Multiple-Estab'
#ENDIF

MOVE 'N' to $SingleEstab

begin-SELECT
COUNT(*) &NumEstabs

#IFDEF DEBUGPER016
  DISPLAY '   &NumEstabs for ' NOLINE
  LET $Out = RTRIM(&E.ESTABID,' ')
  DISPLAY $Out NOLINE
  DISPLAY ': ' NOLINE
  DISPLAY &NumEstabs
#ENDIF
     IF &NumEstabs <= 1
        MOVE 'Y' TO $SingleEstab
     END-IF

!Begin the Incident 1353849006
FROM  PS_ESTAB_TBL SME,PS_ESTAB_TBL_USA SME1
!WHERE SME.CTL_ESTABID = &E.ESTABID
WHERE SME1.CTL_ESTABID = &E.ESTABID
!End the Incident 1353849006
  AND SME.EFF_STATUS = 'A'
  AND SME.COUNTRY = 'USA'
  AND SME.EFFDT =
                (SELECT MAX(SME1.EFFDT)
                 FROM   PS_ESTAB_TBL SME1
                 WHERE  SME1.ESTABID = SME.ESTABID
                   AND  SME1.EFFDT  <= $ThruDate)
!Begin the Incident 1353849006
  AND SME.ESTABID=SME1.ESTABID
  AND SME.EFFDT = SME1.EFFDT  
!End the Incident 1353849006
END-SELECT

end-procedure Single-Multiple-Estab

!----------------------------------------------------------------------
!---------Process-Estab-Employees--------------------------------------
!----------------------------------------------------------------------
! Calculate totals for the current establishment
!----------------------------------------------------------------------
Begin-Procedure Process-Estab-Employees
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Process-Estab-Employees'
#ENDIF

BEGIN-SELECT
P22.EMPLID,
ET22.STATE,
J22.EEO_CLASS,
JT22.EEO1CODE,
P22.SEX

    ! $Sex, $EthnicGroup are used in the procedure Analyze-Sex-EthnicGroup
    ! that is called in procedure Increment-Array
    !-----------------------------------------------------------------------
    MOVE &P22.Sex            TO $Sex

    ! call Increment-Array to add the determined no. of employees
    ! to its specific employee category
    !-----------------------------------------------------------------------
    DO Process-Ethnic-Groups
    IF $Found = 'Y'
    DO Increment-Array
    END-IF

FROM  PS_PERS_DATA_MAX P22,
      PS_ESTAB_TBL ET22,
      PS_JOB J22,
      PS_JOBCODE_TBL JT22

  WHERE J22.PER_ORG = 'EMP'
  AND J22.EMPLID     = P22.EMPLID
  AND J22.REG_TEMP   = 'R'
  AND J22.EFFDT =
               (SELECT MAX(J122.EFFDT)
                FROM PS_JOB J122
                WHERE J122.EMPLID  = J22.EMPLID
                AND J122.EMPL_RCD = J22.EMPL_RCD
                AND J122.EFFDT <= $ThruDate)
  AND J22.EFFSEQ =
                (SELECT MAX(J222.EFFSEQ)
                 FROM  PS_JOB J222
                 WHERE J222.EMPLID    = J22.EMPLID
                   AND J222.EMPL_RCD  = J22.EMPL_RCD
                   AND J222.EFFDT     = J22.EFFDT)
  AND J22.JOB_INDICATOR = 'P'

  AND ((J22.EMPL_STATUS IN('A','P','S','L','W')
           AND J22.EFFDT <= $ThruDate)

           OR (J22.EMPL_STATUS IN ('R','Q','T','U') AND (J22.EFFDT BETWEEN $FromDate AND $ThruDate)
         
             and EXISTS (SELECT S22.EMPLID FROM PS_JOB S22
                        WHERE S22.EMPLID = J22.EMPLID
                        AND S22.EMPL_RCD = J22.EMPL_RCD
                        AND S22.EFFDT = (SELECT MAX(L22.EFFDT) FROM PS_JOB L22
                                       WHERE L22.EMPLID  = S22.EMPLID
                                       AND L22.EMPL_RCD = S22.EMPL_RCD
                                       AND L22.EFFDT <= $FromDate
                                       )
                        AND S22.EFFSEQ = (SELECT MAX(M22.EFFSEQ) FROM PS_JOB M22
                                       WHERE M22.EMPLID  = S22.EMPLID
                                       AND M22.EMPL_RCD = S22.EMPL_RCD
                                       AND M22.EFFDT = S22.EFFDT
                                       )
                        AND S22.EMPL_STATUS IN('A','P','S','L','W')
                       )
              )
        )

  AND JT22.JOBCODE   = J22.JOBCODE
  AND JT22.SETID = J22.SETID_JOBCODE
  AND JT22.EFFDT =
                (SELECT MAX(JT122.EFFDT)
                 FROM  PS_JOBCODE_TBL JT122
                 WHERE JT122.JOBCODE = J22.JOBCODE
                 AND JT122.SETID = J22.SETID_JOBCODE
                 AND JT122.EFFDT  <= $ThruDate)
  AND J22.EEO_CLASS    <> 'E'                   !Exclude from counts
  AND JT22.EEO1CODE    <> 'N'                   !Not counted for EEO reporting
  AND ET22.ESTABID = J22.ESTABID
  AND ET22.ESTABID = &E.ESTABID
  AND ET22.EFFDT =
      (SELECT MAX(ET122.EFFDT)
       FROM PS_ESTAB_TBL ET122
       WHERE ET122.ESTABID = J22.ESTABID
         AND ET122.EFFDT <= $ThruDate)


  AND NOT EXISTS (SELECT 'X' FROM PS_DIVERS_ETHNIC DVR, PS_ETHNIC_GRP_TBL ETH
                   WHERE DVR.EMPLID = P22.EMPLID
                     AND DVR.SETID = ETH.SETID
                     AND DVR.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD
                     AND ETH.EFFDT = (SELECT MAX(ETH0.EFFDT) FROM PS_ETHNIC_GRP_TBL ETH0 
                                        WHERE ETH0.SETID = ETH.SETID
                                          AND ETH0.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
                                          AND ETH0.EFFDT <= $ThruDate)
                     AND ETH.ETHNIC_GROUP = '6')

  GROUP BY P22.EMPLID,ET22.STATE,J22.EEO_CLASS,JT22.EEO1CODE,P22.SEX

END-SELECT

End-Procedure Process-Estab-Employees

!----------------------------------------------------------------------
!---------Process-Ethnic-Groups----------------------------------------
!----------------------------------------------------------------------
! Check to see what Ethnic Groups are indicated
!----------------------------------------------------------------------
Begin-Procedure Process-Ethnic-Groups
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Process-Ethnic-Groups'
#ENDIF

LET #Hispanic = 0
LET #RaceCount = 0
LET $EthnicGroup = ' '
LET #EEcount = 0
LET $Found = 'N'
 
! Check to see if the employee has Hispanic indicated
BEGIN-SELECT
COUNT(ETH1.ETHNIC_GROUP) &Hispanic

   LET #Hispanic = &Hispanic

FROM  PS_PERS_DATA_MAX P1,
      PS_DIVERS_ETHNIC  DVR1,
      PS_ETHNIC_GRP_TBL ETH1

WHERE P1.EMPLID          = &P22.EMPLID
  AND P1.EMPLID          = DVR1.EMPLID
  AND DVR1.SETID         = ETH1.SETID
  AND DVR1.ETHNIC_GRP_CD = ETH1.ETHNIC_GRP_CD
  AND ETH1.EFFDT         = (SELECT MAX(ETH2.EFFDT) FROM PS_ETHNIC_GRP_TBL ETH2
                            WHERE ETH2.SETID = ETH1.SETID
                            AND ETH2.ETHNIC_GRP_CD = ETH1.ETHNIC_GRP_CD
                            AND ETH2.EFFDT <= $ThruDate)
  AND ETH1.ETHNIC_GROUP  = '3'    !Hispanic

END-SELECT

IF #Hispanic > 0
   ADD 1 to #EECount
   LET $Found = 'Y'
ELSE
   DO Check-For-Two-Ethnic-Groups ! Check to see if the employee has two or more non-Hispanic races
   IF #RaceCount >= 2
      ADD 1 to #EECount
      LET $Found = 'Y'
   ELSE
      DO Find-Single-Ethnic-Group ! Check to see what single-race category has been indicated
      IF $EthnicGroup <> ''
         ADD 1 to #EECount
         LET $Found = 'Y'
      END-IF
   END-IF
END-IF

End-Procedure Process-Ethnic-Groups

!----------------------------------------------------------------------
!---------Check-For-Two-Ethnic-Groups----------------------------------
!----------------------------------------------------------------------
! Check to see if the employee has two or more non-Hispanic races
!----------------------------------------------------------------------
Begin-Procedure Check-For-Two-Ethnic-Groups
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Check-For-Two-Ethnic-Groups'
#ENDIF

BEGIN-SELECT
COUNT(ETH11.ETHNIC_GROUP) &RaceCount

   LET #RaceCount = &RaceCount

FROM  PS_PERS_DATA_MAX P11,
      PS_DIVERS_ETHNIC  DVR11,
      PS_ETHNIC_GRP_TBL ETH11

WHERE P11.EMPLID          = &P22.EMPLID
  AND P11.EMPLID          = DVR11.EMPLID
  AND DVR11.SETID         = ETH11.SETID
  AND DVR11.ETHNIC_GRP_CD = ETH11.ETHNIC_GRP_CD
  AND ETH11.EFFDT         = (SELECT MAX(ETH22.EFFDT) FROM PS_ETHNIC_GRP_TBL ETH22
                            WHERE ETH22.SETID = ETH11.SETID
                            AND ETH22.ETHNIC_GRP_CD = ETH11.ETHNIC_GRP_CD
                            AND ETH22.EFFDT <= $ThruDate)
END-SELECT

End-Procedure Check-For-Two-Ethnic-Groups

!----------------------------------------------------------------------
!---------Find-Single-Ethnic-Group-------------------------------------
!----------------------------------------------------------------------
! Check to see what single-race category has been indicated
!----------------------------------------------------------------------
Begin-Procedure Find-Single-Ethnic-Group
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Find-Single-Ethnic-Group'
#ENDIF

BEGIN-SELECT
ETH111.ETHNIC_GROUP

   MOVE &ETH111.Ethnic_Group TO $EthnicGroup

FROM  PS_ETHNIC_GRP_TBL ETH111,
      PS_PERS_DATA_MAX P111,
      PS_DIVERS_ETHNIC  DVR111

WHERE P111.EMPLID          = &P22.EMPLID
  AND P111.EMPLID          = DVR111.EMPLID
  AND DVR111.SETID         = ETH111.SETID
  AND DVR111.ETHNIC_GRP_CD = ETH111.ETHNIC_GRP_CD
  AND ETH111.EFFDT         = (SELECT MAX(ETH222.EFFDT) FROM PS_ETHNIC_GRP_TBL ETH222
                            WHERE ETH222.SETID = ETH111.SETID
                            AND ETH222.ETHNIC_GRP_CD = ETH111.ETHNIC_GRP_CD
                            AND ETH222.EFFDT <= $ThruDate)
END-SELECT

End-Procedure Find-Single-Ethnic-Group

!----------------------------------------------------------------------
!---------Increment-Array----------------------------------------------
!----------------------------------------------------------------------
! Description:
! Increment-Array adds the determined no. of employees of an
! establishment in a specific employee category to its corresponding
! field in EEOarray.
!----------------------------------------------------------------------
Begin-Procedure Increment-Array
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Increment-Array'
#ENDIF

  ! If Hispanic is indicated at least once 
  ! then we use the Hispanic columns
  !------------------------------------------------

  IF #Hispanic > 0                         !Hispanic
                                           !------------------------------
     IF $Sex = 'F' 
        MOVE 1 TO #EEOcol
     ELSE
        MOVE 0 TO #EEOcol
     END-IF

  ELSE

  ! Set Default to White Male
  !------------------------------------------------
  IF $Sex = 'F'
       MOVE 8 TO #EEOcol
  ELSE
       MOVE 2 TO #EEOcol
  END-IF

     ! If there are two or more non-Hispanic races 
     ! then we use the Two or More Races columns
  !------------------------------------------------

     IF #RaceCount >= 2

        ADD 5 TO #EEOcol                   !Two or more races
                                           !------------------------------
     ELSE

     ! Otherwise, use the single-race columns 
     !------------------------------------------------

     EVALUATE $EthnicGroup
       WHEN = '2'                       !Black
         ADD 1 TO #EEOcol               !------------------------------
         BREAK
       WHEN = '4'                       !Asian
         ADD 3 TO #EEOcol               !------------------------------
         BREAK
       WHEN = '7'                       !Pacific Islander
            ADD 2 TO #EEOcol               !------------------------------
         BREAK
       WHEN = '5'                       !American Indian/Alaskan Native
         ADD 4 TO #EEOcol               !------------------------------
         BREAK
     END-EVALUATE

   END-IF

  END-IF

  ! Set the category based on the employee's EEO1 Jobcode
  !-------------------------------------------------------------

  EVALUATE &JT22.EEO1CODE
       WHEN = 'A'
       MOVE 1 TO #EEOrow
         BREAK
       WHEN = 'B'
         MOVE 2 TO #EEOrow
         BREAK
       WHEN = '2'
         MOVE 3 TO #EEOrow
         BREAK
       WHEN = '3'
         MOVE 4 TO #EEOrow
         BREAK
       WHEN = '4'
         MOVE 5 TO #EEOrow
         BREAK
       WHEN = '5'
         MOVE 6 TO #EEOrow
         BREAK
       WHEN = '6'
         MOVE 7 TO #EEOrow
         BREAK
       WHEN = '7'
         MOVE 8 TO #EEOrow
         BREAK
       WHEN = '8'
         MOVE 9 TO #EEOrow
         BREAK
       WHEN = '9'
         MOVE 10 TO #EEOrow
         BREAK
  END-EVALUATE

  ARRAY-ADD #EEcount #EEcount to EEOarray(#EEOrow) count(#EEOcol) count (14)
  ARRAY-ADD #EEcount #EEcount to EEOarray(11)      count(#EEOcol) count (14)
  ARRAY-ADD #EEcount #EEcount to Consolidated(#EEOrow) count(#EEOcol) count(14)

End-Procedure Increment-Array

!----------------------------------------------------------------------
!---------Open-File----------------------------------------------------
!----------------------------------------------------------------------
! This procedure opens the output file  used for
! electronic submission.

begin-procedure Open-File
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Open-File'
#ENDIF

  ! the path given in the variable IMPORTPREFIX is defined in SETENV.SQC
  !-------------------------------------------------------------------

  ! Calculate filename for Standard EEO-1 data -- the Less-than-50
  ! data will go into a different file that is created later in the
  ! process
  !-------------------------------------------------------------------
  DO Format-DateTime($AsOfToday, $TempDate, {DEFCMP},'','')
  LET $Filename = '{IMPORTPREFIX}' || 'E1_' ||$This_COMP||{ps-substr}($TempDate, 3, 2)

  ! File 1 is the standard report data
  !-------------------------------------------------------------------
  Open $Filename As #H
                                         For-Writing
                                         Record=1310:Fixed
                                         Status=#FileStatus

  IF #FileStatus = -1
     DISPLAY '    WARNING: Cannot Open File in directory {IMPORTPREFIX}'
         STOP QUIET
  END-IF

end-procedure Open-File

!-----------Init-Array-------------------------------------------------
! Init-Array creates the arrays EEOarray and EEOtotals. In these two
! arrays, the rows indicate the job categories and the columns indicate
! the sex and race/ethnic categories. EEOarray holds the no. of
! employees for the currently processed establishment. EEOtotals holds
! the no. of employees for all processed establishments for the
! consolidated report.
!
! Init-Array also creates an array to hold a list of estabids that
! have less than fifty employees. Such establishments will not be
! processed until after the HQ Unit and all controlled estabs have
! been processed.
!----------------------------------------------------------------------
Begin-Procedure Init-Array

  CREATE-ARRAY NAME=EEOarray  SIZE=5000 FIELD=count:number:15 FIELD=label:char
  CREATE-ARRAY NAME=EEOtotals SIZE=5000 FIELD=count:number:15

  put ' EXEC/SENIOR MGRS... (1.1)' into EEOarray(1)  label
  put ' FIRST/MID-LVL MGRS. (1.2)' into EEOarray(2)  label
  put ' PROFESSIONALS ..... (2  )' into EEOarray(3)  label
  put ' TECHNICIANS ....... (3  )' into EEOarray(4)  label
  put ' SALES WORKERS ..... (4  )' into EEOarray(5)  label
  put ' ADMIN SUPPORT ..... (5  )' into EEOarray(6)  label
  put ' CRAFT WORKERS ..... (6  )' into EEOarray(7)  label
  put ' OPERATIVES  ....... (7  )' into EEOarray(8)  label
  put ' LABORERS & HELPERS. (8  )' into EEOarray(9)  label
  put ' SERVICE WORKERS ... (9  )' into EEOarray(10) label
  put '                      TOTAL (10)' into EEOarray(11) label
  put '        PREVIOUS YEAR TOTAL (11)' into EEOarray(12) label

  move 31 to #startCol             !starting position of first column total
  move  7 to #len                  !length of total (in print positions)

  CREATE-ARRAY NAME=LS SIZE=5000 FIELD=estabid:char
                               FIELD=name:char
                               FIELD=employees:number
                               FIELD=address:char
                               FIELD=city:char
                               FIELD=state:char
                               FIELD=county:char
                               FIELD=zip:char
                               FIELD=activity:char
                               FIELD=companyNum:char

  CREATE-ARRAY NAME=Consolidated SIZE=5000 FIELD=count:number:15 FIELD=label:char
  CREATE-ARRAY NAME=Cons_Total SIZE=5000 FIELD=count:number:15

  put ' EXEC/SENIOR MGRS... (1.1)' into Consolidated(1)  label
  put ' FIRST/MID-LVL MGRS. (1.2)' into Consolidated(2)  label
  put ' PROFESSIONALS ..... (2  )' into Consolidated(3)  label
  put ' TECHNICIANS ....... (3  )' into Consolidated(4)  label
  put ' SALES WORKERS ..... (4  )' into Consolidated(5)  label
  put ' ADMIN SUPPORT ..... (5  )' into Consolidated(6)  label
  put ' CRAFT WORKERS ..... (6  )' into Consolidated(7)  label
  put ' OPERATIVES  ....... (7  )' into Consolidated(8)  label
  put ' LABORERS & HELPERS. (8  )' into Consolidated(9)  label
  put ' SERVICE WORKERS ... (9  )' into Consolidated(10) label
  put '                      TOTAL (10)' into Consolidated(11) label
  put '        PREVIOUS YEAR TOTAL (11)' into Consolidated(12) label

End-Procedure Init-Array

!----------------------------------------------------------------------
!---------Reset-Array--------------------------------------------------
!----------------------------------------------------------------------
! Resets both establishment-level arrays
!----------------------------------------------------------------------
begin-procedure Reset-Array
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Reset-Array'
#ENDIF
! We don't want to overwrite the labels, so loop through this one
! manually
!----------------------------------------------------------------
MOVE 1 TO #EEOrow            !Reset array

WHILE #EEOrow <= 12
    MOVE 0 to #EEOcol
    WHILE #EEOcol <= 14
        PUT 0 INTO EEOarray(#EEOrow)  count(#EEOcol)
        ADD 1 TO #EEOcol
    END-WHILE
    ADD 1 TO #EEOrow
END-WHILE

LET $SingleEstab = 'N'

End-Procedure Reset-Array

!----------------------------------------------------------------------
!---------Reset-Consolidated-Array-------------------------------------
!----------------------------------------------------------------------
! Resets consolidated arrays
!----------------------------------------------------------------------
Begin-Procedure Reset-Consolidated-Array
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Reset-Consolidated-Array'
#ENDIF

! We don't want to overwrite the labels, so loop through this one
! manually
!----------------------------------------------------------------
MOVE 1 TO #EEOrow            !Reset array

WHILE #EEOrow <= 12
    MOVE 0 to #EEOcol
    WHILE #EEOcol <= 14
        PUT 0 INTO Consolidated(#EEOrow)  count(#EEOcol)
        ADD 1 TO #EEOcol
    END-WHILE
    ADD 1 TO #EEOrow
END-WHILE

! We can ravage this one with a CLEAR-ARRAY, no need to be subtle here
!---------------------------------------------------------------------
CLEAR-ARRAY NAME=LS

LET #Report_Count = 0
LET #page_nr = 0
LET #Less_Estabs = 0

End-Procedure Reset-Consolidated-Array

!----------------------------------------------------------------------
!---------Print-Totals-------------------------------------------------
!----------------------------------------------------------------------
! Prints the body of the report, dumping the array values onto the
! page in the correct layout and also adding a row to the appropriate
! digital file
!----------------------------------------------------------------------
Begin-Procedure Print-Totals
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Print-Totals'
#ENDIF
IF $Consolidated = 'Y'
   LET $Value_Estab = $Last_HQ
ELSE
   LET $Value_Estab = RTRIM(&E.ESTABID,' ')
END-IF

DISPLAY '  $Value_Estab: ' NOLINE
DISPLAY $Value_Estab

BEGIN-SELECT

EST.HQUNIT,
EST.DESCR,
EST.ADDRESS1,
EST.ADDRESS2,
EST.CITY,
EST.COUNTY,
EST.STATE,
EST.POSTAL,
EST.COUNTRY,
!Begin the Incident 1353849006
!EST.EMPLOY_APPR,
!EST.SAME_LOCATION,
!EST.SAME_BUSINESS,
EST1.EMPLOY_APPR,
EST1.SAME_LOCATION,
EST1.SAME_BUSINESS,
!End the Incident 1353849006
H.FEDERAL_EIN,
H.COMPANY,
    do EEO-Values
BUS_ACTIVITY_LINE1,
BUS_ACTIVITY_LINE2,
BUS_ACTIVITY_LINE3,
BUS_ACTIVITY_LINE4

FROM  PS_ESTAB_TBL EST,
!Begin the Incident 1353849006
      PS_ESTAB_TBL_USA EST1,
!End the Incident 1353849006
      PS_COMPANY_TBL H
WHERE EST.ESTABID = $Value_Estab
  AND EST.COMPANY = H.COMPANY
  AND EST.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_ESTAB_TBL
       WHERE  ESTABID = EST.ESTABID
         AND  EFFDT  <= $ThruDate)
  AND H.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_COMPANY_TBL
       WHERE  COMPANY = H.COMPANY
         AND  EFFDT  <= $ThruDate)
!Begin the Incident 1353849006
  AND EST.ESTABID=EST1.ESTABID
  AND EST.EFFDT = EST1.EFFDT
!End the Incident 1353849006
END-SELECT

MOVE ' ' to $Report_Type

IF $Consolidated = 'N'
   ADD 1 to #Report_Count
END-IF

DO Check-Estab-Total

! If there are less than fifty employees, let's just store the
! estabid for later use and skip the printing
!----------------------------------------------------------------
IF #est_tot < 50 AND $HQ_Unit = 'N'

   IF $Consolidated = 'N'
      LET LS.estabid(#Less_Estabs) =    RTRIM(&E.ESTABID,' ')
      LET LS.name(#Less_Estabs) =       RTRIM(&EST.DESCR,' ')
      LET LS.employees(#Less_Estabs) =  #est_tot
      Let $ESTADDRESS1 = {ps-substr}(&EST.Address1, 1, 35)
      LET LS.address(#Less_Estabs) =    RTRIM($ESTADDRESS1,' ')
      Let $ESTCITY = {ps-substr}(&EST.City , 1, 19)
      LET LS.city(#Less_Estabs) =       RTRIM($ESTCITY,' ')
      LET LS.state(#Less_Estabs) =      RTRIM(&EST.STATE,' ')
      LET LS.zip(#Less_Estabs) =        RTRIM(&EST.POSTAL,' ')
      Let $ESTCounty  = {ps-substr}(&EST.County, 1, 12)
      LET LS.county(#Less_Estabs) =     RTRIM($ESTCounty,' ')
      LET LS.activity(#Less_Estabs) =   RTRIM(&BUS_ACTIVITY_LINE1,' ') || ' ' || RTRIM(&BUS_ACTIVITY_LINE2,' ') || ' ' || RTRIM(&BUS_ACTIVITY_LINE3,' ') || ' ' || RTRIM(&BUS_ACTIVITY_LINE4,' ')
      LET LS.companyNum(#Less_Estabs) = RTRIM($EEO_Company,' ')
      ADD 1 TO #Less_Estabs
   END-IF
END-IF

IF $Consolidated = 'Y'
   DO Print-Less-Than-50
END-IF

! We are now printing the page if there is at least 1 employee in the estab,
! a headquarter unit, or consolidated report
!----------------------------------------------------------------

IF $Consolidated = 'Y' OR #est_tot >= 1 OR $HQ_Unit = 'Y'

   ! If printing a Consolidated report, copy the values into the
   ! main EEOArray, then calculate totals
   !-------------------------------------------------------------
   IF $Consolidated = 'Y'
      LET #EEORow = 1
      WHILE #EEOrow <= 10
         MOVE 0 to #EEOcol
         WHILE #EEOcol <= 14
            GET #temp_count FROM Consolidated(#EEOrow) count(#EEOcol)
            PUT #temp_count INTO EEOarray(#EEOrow)  count(#EEOcol)
            ADD 1 TO #EEOcol
         END-WHILE
         ADD 1 TO #EEOrow
      END-WHILE

      MOVE 1 TO #EEORow
      WHILE #EEOrow <= 10
         MOVE 0 TO #EEOcol
         WHILE #EEOcol <= 14
            GET #count1 FROM EEOarray(#EEOrow) count(#EEOcol)
            ARRAY-ADD #count1 TO EEOarray(11) count(#EEOcol)
            ADD 1 to #EEOcol
         END-WHILE
         ADD 1 to #EEORow
      END-WHILE

   END-IF

   PRINT '      CO= '                                      (1,2)
   PRINT $EEO_Company                                       ()      EDIT xxxxxx-x
   PRINT 'EQUAL EMPLOYMENT OPPORTUNITY'                    (0,59)

   LET $Page_Printed = 'YES'

   PRINT 'PAGE  '                                          (0,126)
      ADD 1 to #page_nr
      DO Format-Number(#page_nr, $out, '999')
      PRINT $out                                              (0,+1)

   PRINT '      U= '                                       (+1,3)
   IF #est_tot >= 50
      IF $SectionBc = 'Y' 
   PRINT $EEOunit                                          ()      EDIT xxxxxx-x
      END-IF
   ELSE
      PRINT $EEOunit                                       ()      EDIT xxxxxx-x
   END-IF
   PRINT $ReportYear                                       (0,53)
   PRINT 'EMPLOYER INFORMATION REPORT EEO-1'               (0,58)
   PRINT 'NAICS= '                                         (+1,1)
   PRINT $NAICS                                            (,,6)

   IF $Consolidated = 'Y'
      PRINT 'CONSOLIDATED REPORT-TYPE 2'                   (4,59)
      LET $report_type = 'CONSOLIDATED'
   ELSE
      IF $SingleEstab = 'Y'
         PRINT 'SINGLE-ESTABLISHMENT EMPLOYER REPORT'      (4,54)
         LET $report_type = 'SINGLE_ESTAB'
      ELSE
         IF &EST.HQUNIT = 'Y'
            PRINT 'HEADQUARTERS REPORT-TYPE 3'             (4,59)
            LET $report_type = 'HEADQUARTERS'
         ELSE
            IF #est_tot >= 50
               IF $SectionBc = 'Y'
                  PRINT 'ESTABLISHMENT REPORT-TYPE 4'      (4,59)
            LET $report_type = 'INDIVIDUAL_ESTAB'
               ELSE
                  PRINT 'ESTABLISHMENT REPORT-TYPE 9'      (4,59)
                  LET $report_type = 'INDIVIDUAL_ESTAB'
         END-IF
            ELSE
               PRINT 'ESTABLISHMENT REPORT-TYPE 8'         (4,59)
               LET $report_type = 'INDIVIDUAL_ESTAB'
      END-IF
   END-IF
      END-IF
   END-IF

   IF $SingleEstab <> 'Y'
      IF $Consolidated <> 'Y'
         PRINT 'SECTION B-COMPANY IDENTIFICATION'                       (6,1)
         PRINT '1.'                                                     (8,1)
         PRINT $This_HQ_Descr                                           (8,5)
         Let $HQADDRESS1 = {ps-substr}($This_HQ_Address, 1, 35)
         PRINT $HQADDRESS1                                              (9,5)
         Let $HQCITY = {ps-substr}($This_HQ_City, 1, 19)
         PRINT $HQCITY                                                  (10,5)
         Let $HQCounty  = {ps-substr}($This_HQ_County, 1, 12)
         PRINT $HQCounty                                                (10,25)
         PRINT $This_HQ_State                                           (11,5)
         LET $HQPostal = {ps-substr}($This_HQ_Postal, 1, 5)
         PRINT $HQPostal                                                (11,9)
      ELSE
         PRINT 'SECTION B-COMPANY IDENTIFICATION'                       (6,1)
         PRINT '1.'                                                     (8,1)
         PRINT &EST.Descr                                               (8,5)
         Let $ESTADDRESS1 = {ps-substr}(&EST.Address1, 1, 35)
         PRINT $ESTADDRESS1                                             (9,5)
         Let $ESTCITY = {ps-substr}(&EST.City , 1, 19)
         PRINT $ESTCITY                                                 (10,5)
         Let $ESTCounty  = {ps-substr}(&EST.County, 1, 12)
         PRINT $ESTCounty                                               (10,25)
         PRINT &EST.State                                               (11,5)
         LET $ESTPostal = {ps-substr}(&EST.Postal, 1, 5)
         PRINT $ESTPostal                                               (11,9)
      END-IF

      PRINT '2.a.'                                                      (8,51)
      PRINT &EST.Descr                                                  (8,57)
      Let $ESTADDRESS1 = {ps-substr}(&EST.Address1, 1, 35)
      PRINT $ESTADDRESS1                                                (9,57)
      Let $ESTCITY = {ps-substr}(&EST.City , 1, 19)
      PRINT $ESTCITY                                                    (10,57)
      Let $ESTCounty  = {ps-substr}(&EST.County, 1, 12)
      PRINT $ESTCounty                                                  (10,75)
      PRINT &EST.State                                                  (11,57)
      LET $ESTPostal = {ps-substr}(&EST.Postal, 1, 5)
      PRINT $ESTPostal                                                  (11,61)
      PRINT 'b.'                                                        (13,53)
      PRINT $SectionBc                                                  (13,57)
      PRINT 'c.'                                                        (15,53)
      PRINT 'EI='                                                       (15,57)
      PRINT &H.Federal_EIN                                              ()          EDIT 099999999
      PRINT 'SECTION C-TEST FOR FILING REQUIREMENT'                     (6,97)
      PRINT '1-'                                                        (8,97)
      PRINT $SectionC1                                                  ()
      PRINT '2-'                                                        (0,103)
      PRINT $SectionC2                                                  ()
      PRINT '3-'                                                        (0,109)
      PRINT $SectionC3                                                  ()
      PRINT 'DUNS NO.:'                                                 (0,115)
      PRINT $DUNS                                                       (0,+1)      EDIT xx-xxx-xxxx

      PRINT 'SECTION D-EMPLOYMENT DATA  '                               (17,1)
      PRINT ' JOB CATEGORIES'                                           (20,1)
      PRINT 'MALE FEMALE **************** MALE **************** *************** FEMALE ***************  TOTAL' (18,32)
      PRINT 'HISP  HISP   WHITE BLACK NHOPI ASIAN NAT AM 2+RACE  WHITE BLACK NHOPI ASIAN NAT AM 2+RACE   A-N'  (19,32)       
      PRINT '(A)'                                                       (20,33)
      PRINT '(B)'                                                       (0,+4)
      PRINT '(C)'                                                       (0,+4)
      PRINT '(D)'                                                       (0,+4)
      PRINT '(E)'                                                       (0,+4)
      PRINT '(F)'                                                       (0,+4)
      PRINT '(G)'                                                       (0,+4)
      PRINT '(H)'                                                       (0,+4)
      PRINT '(I)'                                                       (0,+4)
      PRINT '(J)'                                                       (0,+4)
      PRINT '(K)'                                                       (0,+4)
      PRINT '(L)'                                                       (0,+4)
      PRINT '(M)'                                                       (0,+4)
      PRINT '(N)'                                                       (0,+4)
      PRINT '(O)'                                                       (0,+4)

      PRINT 'SECTION E-ESTABLISHMENT INFORMATION'                       (10,97)
      PRINT '1-'                                                        (12,97)
      PRINT &Bus_Activity_Line1                                         (12,99)
      PRINT &Bus_Activity_Line2                                         (13,99)
      PRINT &Bus_Activity_Line3                                         (14,99)
      PRINT &Bus_Activity_Line4                                         (15,99)
      PRINT ' DATES OF PAYROLL PERIOD: '                                (38,1)
         DO Format-DateTime($FromDate, $out, {DEFDATE}, '', '')
      PRINT $out                                                        (0,29)
         PRINT 'THRU'                                                  (0,+2)
         DO Format-DateTime($ThruDate, $out, {DEFDATE}, '', '')
         PRINT $out                                                    (0,+2)
     
      PRINT ' CERTIFICATION:'                                           (41,1)
      PRINT ' CERTIFYING OFFICIAL:'                                     (43,1)
      PRINT $CertName                                                   (0,+2)          
      PRINT 'TITLE:'                                                    (0,66)
      PRINT $CertTitle                                                  (0,+2)
      PRINT 'TELEPHONE NO:'                                             (0,108)
      LET $PrintPhone = REPLACE($CertPhone, '/', '-')
      PRINT $PrintPhone                                                 (0,+2) 
      PRINT 'EMAIL:'                                                    (45,27)
      PRINT $CertEmail                                                  (0,+2)
      PRINT ' EEO-1 REPORT CONTACT PERSON:'                             (47,1)
      PRINT $CertName                                                   (0,+2)          
      PRINT 'TITLE:'                                                    (0,66)
      PRINT $CertTitle                                                  (0,+2)
      PRINT 'TELEPHONE NO:'                                             (0,108)
      PRINT $PrintPhone                                                 (0,+2) 
      PRINT 'EMAIL:'                                                    (49,27)
      PRINT $CertEmail                                                  (0,+2)
      PRINT 'STREET ADDRESS:'                                           (0,66)
      PRINT $HQADDRESS1                                                 (0,+2)
      PRINT 'CITY/ST:'                                                  (51,66)
      PRINT $HQCITY                                                     (0,+2)
      PRINT $This_HQ_State                                              (0,+2)
      PRINT 'ZIP:'                                                      (51,99)
      PRINT $HQPostal                                                   (0,+2)

      MOVE 21 TO #line
      MOVE 1  TO #EEOrow
   END-IF

   IF $SingleEstab = 'Y'

      PRINT 'SECTION B-COMPANY IDENTIFICATION'                          (7,1)

      PRINT '1.'                                                        (9,1)
      PRINT &F.Descr                                                    (9,4)
      Let $FADDRESS1 = {ps-substr}(&F.Address1 , 1, 35)
      PRINT $FADDRESS1                                                  (10,4)
      Let $FCITY = {ps-substr}(&F.City  , 1, 20)
      PRINT $FCITY                                                      (11,4)
      Let $FCounty  = {ps-substr}(&F.County , 1, 12)
      PRINT $FCounty                                                    (11,24)
      PRINT &F.State                                                    (12,4)
      LET $FPostal = {ps-substr}(&F.Postal, 1, 5)
      PRINT $FPostal                                                    (12,8)

      PRINT '2.a.'                                                      (9,51)
      PRINT &EST.Descr                                                  (9,57)
      Let $ESTADDRESS1 = {ps-substr}(&EST.Address1, 1, 35)
      PRINT $ESTADDRESS1                                                (10,57)
      Let $ESTCITY = {ps-substr}(&EST.City , 1, 19)
      PRINT $ESTCITY                                                    (11,57)
      Let $ESTCounty  = {ps-substr}(&EST.County, 1, 12)
      PRINT $ESTCounty                                                  (11,75)
      PRINT &EST.State                                                  (12,57)
      LET $ESTPostal = {ps-substr}(&EST.Postal, 1, 5)
      PRINT $ESTPostal                                                  (12,61)
      PRINT 'b.'                                                        (14,53)
      PRINT $SectionBc                                                  (14,57)
      PRINT 'c.'                                                        (16,53)
      PRINT 'EI='                                                       (16,57)
      PRINT &H.Federal_EIN                                              ()          EDIT 099999999
      PRINT 'SECTION C-TEST FOR FILING REQUIREMENT'                     (7,97)
      PRINT '1-'                                                        (9,97)
      PRINT $SectionC1                                                  ()
      PRINT '2-'                                                        (0,103)
      PRINT $SectionC2                                                  ()
      PRINT '3-'                                                        (0,109)
      PRINT $SectionC3                                                  ()
      PRINT 'DUNS NO.:'                                                 (0,115)
      PRINT $DUNS                                                       (0,+1)      EDIT xx-xxx-xxxx

      PRINT 'SECTION D-EMPLOYMENT DATA  '                               (18,1)
      PRINT ' JOB CATEGORIES'                                           (21,1)
      PRINT 'MALE FEMALE **************** MALE **************** *************** FEMALE ***************  TOTAL' (19,32)
      PRINT 'HISP  HISP   WHITE BLACK NHOPI ASIAN NAT AM 2+RACE  WHITE BLACK NHOPI ASIAN NAT AM 2+RACE   A-N'  (20,32)       
      PRINT '(A)'                                                       (21,33)
      PRINT '(B)'                                                       (0,+4)
      PRINT '(C)'                                                       (0,+4)
      PRINT '(D)'                                                       (0,+4)
      PRINT '(E)'                                                       (0,+4)
      PRINT '(F)'                                                       (0,+4)
      PRINT '(G)'                                                       (0,+4)
      PRINT '(H)'                                                       (0,+4)
      PRINT '(I)'                                                       (0,+4)
      PRINT '(J)'                                                       (0,+4)
      PRINT '(K)'                                                       (0,+4)
      PRINT '(L)'                                                       (0,+4)
      PRINT '(M)'                                                       (0,+4)
      PRINT '(N)'                                                       (0,+4)
      PRINT '(O)'                                                       (0,+4)

      PRINT 'SECTION E-ESTABLISHMENT INFORMATION'                       (11,97)
      PRINT '1-'                                                        (13,97)
      PRINT &Bus_Activity_Line1                                         (13,99)
      PRINT &Bus_Activity_Line2                                         (14,99)
      PRINT &Bus_Activity_Line3                                         (15,99)
      PRINT &Bus_Activity_Line4                                         (16,99)
      PRINT ' DATES OF PAYROLL PERIOD: '                                (39,1)
      DO Format-DateTime($FromDate, $out, {DEFDATE}, '', '')
      PRINT $out                                                        (0,29)
      PRINT 'THRU'                                                     (0,+2)
      DO Format-DateTime($ThruDate, $out, {DEFDATE}, '', '')
      PRINT $out                                                       (0,+2)
      
      PRINT ' CERTIFICATION:'                                           (42,1)
      PRINT ' CERTIFYING OFFICIAL:'                                     (44,1)
      PRINT $CertName                                                   (0,+2)          
      PRINT 'TITLE:'                                                    (0,66)
      PRINT $CertTitle                                                  (0,+2)
      PRINT 'TELEPHONE NO:'                                             (0,108)
      LET $PrintPhone = REPLACE($CertPhone, '/', '-')
      PRINT $PrintPhone                                                 (0,+2) 
      PRINT 'EMAIL:'                                                    (46,27)
      PRINT $CertEmail                                                  (0,+2)
      PRINT ' EEO-1 REPORT CONTACT PERSON:'                             (48,1)
      PRINT $CertName                                                   (0,+2)          
      PRINT 'TITLE:'                                                    (0,66)
      PRINT $CertTitle                                                  (0,+2)
      PRINT 'TELEPHONE NO:'                                             (0,108)
      PRINT $PrintPhone                                                 (0,+2) 
      PRINT 'EMAIL:'                                                    (50,27)
      PRINT $CertEmail                                                  (0,+2)
      PRINT 'STREET ADDRESS:'                                           (0,66)
      PRINT $ESTADDRESS1                                                (0,+2)
      PRINT 'CITY/ST:'                                                  (52,66)
      PRINT $ESTCITY                                                    (0,+2)
      PRINT &EST.State                                                  (0,+2)
      PRINT 'ZIP:'                                                      (52,99)
      PRINT $ESTPostal                                                  (0,+2)

      MOVE 22 TO #line
      MOVE 1  TO #EEOrow

   END-IF

   WHILE #EEOrow <= 12
      IF  #EEOrow > 10 AND #EEOrow < 13
         ADD 2 TO #line
      ELSE
         ADD 1 to #line
      END-IF

      GET $EEOcatName FROM EEOarray(#EEOrow) label
      PRINT $EEOcatName (#line,1)

      IF  #EEOrow <> 12            !Don't print 0's for Previous Year Totals
         MOVE #startCol TO #col
         SUBTRACT #len FROM #col
         MOVE 0 TO #EEOcol

          WHILE #EEOcol <= 14
             ADD #len TO #col
             GET #count1 FROM EEOarray(#EEOrow) count(#EEOcol)
             ARRAY-ADD #count1 TO EEOtotals(#EEOrow) count(#EEOcol)

             DO Format-Number(#count1, $out, '999999')
                   PRINT $out (#line,#col,#len)

             IF #EEOrow = 11
                EVALUATE #EEOcol
                   WHEN = 0
                      LET #col0 = #count1
                   WHEN = 1
                      LET #col1 = #count1
                   WHEN = 2
                      LET #col2 = #count1
                   WHEN = 3
                      LET #col3 = #count1
                   WHEN = 4
                      LET #col4 = #count1
                   WHEN = 5
                      LET #col5 = #count1
                   WHEN = 6
                      LET #col6 = #count1
                   WHEN = 7
                      LET #col7 = #count1
                   WHEN = 8
                      LET #col8 = #count1
                   WHEN = 9
                      LET #col9 = #count1
                   WHEN = 10
                      LET #col10 = #count1
                   WHEN = 11
                      LET #col11 = #count1
                   WHEN = 12
                      LET #col12 = #count1
                   WHEN = 13
                      LET #col13 = #count1
                   WHEN = 14
                      LET #col14 = #count1
                END-EVALUATE
             END-IF

             ADD 1 TO #EEOcol

          END-WHILE

       END-IF

       ! Print Previous Reported Totals
       !--------------------------------------------------------
       IF  #EEOrow = 12

          ! Select out previous total values and print.
          !-----------------------------------------------------
          DO Get-Previous-Total
          MOVE #startCol TO #col
          SUBTRACT #len FROM #col
          MOVE 0 to #EEOcol

          WHILE #EEOcol <= 14
             ADD #len TO #col
             IF #EEOcol = 0
                DO Format-Number(#old_col0, $out, '999999')
                ARRAY-ADD #old_col0 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF
             IF #EEOcol = 1
                DO Format-Number(#old_col1, $out, '999999')
                ARRAY-ADD #old_col1 to EEOarray(#EEOrow) count(#EEOcol)
             END-if
             IF #EEOcol = 2
                 DO Format-Number(#old_col2, $out, '999999')
                ARRAY-ADD #old_col2 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF
             IF #EEOcol = 3
                 DO Format-Number(#old_col3, $out, '999999')
                ARRAY-ADD #old_col3 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF
             IF #EEOcol = 4
                DO Format-Number(#old_col4, $out, '999999')
                ARRAY-ADD #old_col4 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF
             IF #EEOcol = 5
                DO Format-Number(#old_col5, $out, '999999')
                ARRAY-ADD #old_col5 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF
             IF #EEOcol = 6
                DO Format-Number(#old_col6, $out, '999999')
                ARRAY-ADD #old_col6 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF
            IF #EEOcol = 7
                DO Format-Number(#old_col7, $out, '999999')
                ARRAY-ADD #old_col7 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF
             IF #EEOcol = 8
                DO Format-Number(#old_col8, $out, '999999')
                ARRAY-ADD #old_col8 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF
             IF #EEOcol = 9
                DO Format-Number(#old_col9, $out, '999999')
                ARRAY-ADD #old_col9 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF
             IF #EEOcol = 10
                DO Format-Number(#old_col10, $out, '999999')
                ARRAY-ADD #old_col10 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF
             IF #EEOcol = 11
                DO Format-Number(#old_col11, $out, '999999')
                ARRAY-ADD #old_col11 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF
             IF #EEOcol = 12
                DO Format-Number(#old_col12, $out, '999999')
                ARRAY-ADD #old_col12 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF
             IF #EEOcol = 13
                DO Format-Number(#old_col13, $out, '999999')
                ARRAY-ADD #old_col13 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF
             IF #EEOcol = 14
                DO Format-Number(#old_col14, $out, '999999')
                ARRAY-ADD #old_col14 to EEOarray(#EEOrow) count(#EEOcol)
             END-IF

                      PRINT $out (#line,#col,#len)

             ADD 1 TO #EEOcol
         END-WHILE

         IF $ReportType = 'GOVT'
            DO Insert-Previous-Totals        !Insert your current totals into the previous total tbl.
         END-IF
      END-IF

      ADD 1 to #EEOrow

   END-WHILE

   NEW-PAGE
END-IF


End-Procedure Print-Totals

!----------------------------------------------------------------------
!---------EEO-Values---------------------------------------------------
!----------------------------------------------------------------------
Begin-Procedure EEO-Values
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: EEO-Values'
#ENDIF

IF $Consolidated = 'Y'
   LET $Value_Estab = $Last_HQ
ELSE
   LET $Value_Estab = &E.ESTABID
END-IF

let $EEO_Company = ''
let $EEOunit = ''
let $DUNS = ''
let $SIC = ''
let $NAICS = ''
let $SectionBc = ''
let $SectionC1 = ''
let $SectionC2 = ''
let $SectionC3 = ''
let $CertOffic = ''
let $CertTitle = ''
let $CertName = ''
let $CertPhone = ''
let $CertFax  = ''
let $CertEmail = ''

BEGIN-SELECT

C.EEO_COMPANY_CD
!Begin the Incident 1353849006
!EST1.DUN_BRADSTREET_NBR
!EST1.EEO_UNIT_NBR
!EST1.NAICS
!EST1.SIC
!EST1.EEO_RPT_PREV_YR
!EST1.EEO_MIN_100
!EST1.EEO_CO_AFFILIATED
!EST1.EEO_GOV_CONTRACTOR
EST2.DUN_BRADSTREET_NBR
EST2.EEO_UNIT_NBR
EST2.NAICS
EST2.SIC
EST2.EEO_RPT_PREV_YR
EST2.EEO_MIN_100
EST2.EEO_CO_AFFILIATED
EST2.EEO_GOV_CONTRACTOR

  MOVE &C.EEO_COMPANY_CD to $EEO_Company        !Company specific code     (Govt supplied)
  !MOVE &EST1.EEO_UNIT_NBR to $EEOunit           !Unit specific code        (Govt supplied)
  !MOVE &EST1.SIC to $SIC                        !Standard Industrial Code  (Govt supplied)
  !MOVE &EST1.NAICS to $NAICS                    !Will eventually replace SIC...
  !MOVE &EST1.EEO_Rpt_Prev_Yr to $SectionBc      !Did you file an EEO-1 Report last year?

  !MOVE &EST1.EEO_Min_100 to $SectionC1          !Does ENTIRE company have min 100 employees?
  !MOVE &EST1.EEO_CO_AFFILIATED to $SectionC2    !Is company affiliated?
  !MOVE &EST1.EEO_GOV_CONTRACTOR to $SectionC3   !Is company a Government Contractor?
  !MOVE &EST1.DUN_BRADSTREET_NBR to $DUNS        !Dun & Bradstreet ID
  MOVE &EST2.EEO_UNIT_NBR to $EEOunit           !Unit specific code        (Govt supplied)
  MOVE &EST2.SIC to $SIC                        !Standard Industrial Code  (Govt supplied)
  MOVE &EST2.NAICS to $NAICS                    !Will eventually replace SIC...
  MOVE &EST2.EEO_Rpt_Prev_Yr to $SectionBc      !Did you file an EEO-1 Report last year?
  
  MOVE &EST2.EEO_Min_100 to $SectionC1          !Does ENTIRE company have min 100 employees?
  MOVE &EST2.EEO_CO_AFFILIATED to $SectionC2    !Is company affiliated?
  MOVE &EST2.EEO_GOV_CONTRACTOR to $SectionC3   !Is company a Government Contractor?
  MOVE &EST2.DUN_BRADSTREET_NBR to $DUNS        !Dun & Bradstreet ID




FROM PS_COMPANY_TBL C,
     PS_ESTAB_TBL EST1,
     PS_ESTAB_TBL_USA EST2
     
!End the Incident 1353849006

WHERE EST1.ESTABID = $Value_Estab
AND   EST1.COMPANY = C.COMPANY
AND   C.EFFDT =
              (SELECT MAX(C1.EFFDT)
               FROM PS_COMPANY_TBL C1
               WHERE C1.COMPANY = C.COMPANY
               AND C1.EFFDT <= $ThruDate)
AND   EST1.EFFDT =
              (SELECT MAX(E1.EFFDT)
               FROM   PS_ESTAB_TBL E1
               WHERE  E1.ESTABID = EST1.ESTABID
                 AND  E1.EFFDT  <= $ThruDate)
!Begin the Incident 1353849006                 
AND EST1.ESTABID=EST2.ESTABID
AND EST1.EFFDT = EST2.EFFDT
!End the Incident 1353849006

END-SELECT

BEGIN-SELECT
EST2.CERTIF_OFFICIAL

   MOVE &EST2.CERTIF_OFFICIAL TO $CertOffic      !Emplid of Certifying Official

      do Get-Official-Title
      do Get-Official-Name
      do Get-Phone-Number
      do Get-Fax-Number
      do Get-Email-Address

FROM PS_ESTAB_TBL_USA EST2
where EST2.ESTABID = $Value_Estab
AND   EST2.EFFDT =
              (SELECT MAX(E2.EFFDT)
               FROM   PS_ESTAB_TBL_USA E2
               WHERE  E2.ESTABID = EST2.ESTABID
                 AND  E2.EFFDT  <= $ThruDate)
END-SELECT

IF $SectionBc != 'Y'
   LET $SectionBc = 'N'
END-IF

IF $SectionC1 != 'Y'
   LET $SectionC1 = 'N'
END-IF

IF $SectionC2 != 'Y'
   LET $SectionC2 = 'N'
END-IF

! There is more than one translate value that should result in
! a 'Y' here, so we need to reverse the logic.
!-------------------------------------------------------------
IF $SectionC3 != 'N'
   LET $SectionC3 = 'Y'
END-IF

End-Procedure EEO-Values

!----------------------------------------------------------------------
!---------Get-Official-Title-------------------------------------------
!----------------------------------------------------------------------
Begin-Procedure Get-Official-Title
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Get-Official-Title'
#ENDIF

BEGIN-SELECT

PE.BUSINESS_TITLE

  MOVE &PE.BUSINESS_TITLE to $CertTitle         !Title of Certifying Official

FROM PS_PER_ORG_ASGN_VW PE
WHERE PE.EMPLID = $CertOffic
AND PE.EMPL_RCD = (SELECT MIN(PE1.EMPL_RCD)
                  FROM PS_PER_ORG_ASGN_VW PE1
                  WHERE PE1.EMPLID = PE.EMPLID)

END-SELECT

End-Procedure Get-Official-Title

!----------------------------------------------------------------------
!---------Get-Official-Name--------------------------------------------
!----------------------------------------------------------------------
Begin-Procedure Get-Official-Name
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Get-Official-Name'
#ENDIF

BEGIN-SELECT

PN.NAME

  MOVE &PN.NAME to $CertName                    !Name of Certifying Official

FROM PS_PERSON_NAME PN
WHERE PN.EMPLID = $CertOffic

END-SELECT

End-Procedure Get-Official-Name

!----------------------------------------------------------------------
!---------Get-Phone-Number-----------------------------------------------
!----------------------------------------------------------------------
Begin-Procedure Get-Phone-Number
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Get-Phone-Number'
#ENDIF

BEGIN-SELECT

PP.PHONE

  MOVE &PP.PHONE to $CertPhone                  !Phone of Certifying Official

FROM PS_PERSONAL_PHONE PP
WHERE PP.EMPLID = $CertOffic
AND PP.PHONE_TYPE = 'BUSN'

END-SELECT

End-Procedure Get-Phone-Number

!----------------------------------------------------------------------
!---------Get-Fax-Number-----------------------------------------------
!----------------------------------------------------------------------
Begin-Procedure Get-Fax-Number
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Get-Fax-Number'
#ENDIF

BEGIN-SELECT

PF.PHONE

  MOVE &PF.PHONE to $CertFax                    !Fax of Certifying Official

FROM PS_PERSONAL_PHONE PF
WHERE PF.EMPLID = $CertOffic
AND PF.PHONE_TYPE = 'FAX'

END-SELECT

End-Procedure Get-Fax-Number

!----------------------------------------------------------------------
!---------Get-Email-Address--------------------------------------------
!----------------------------------------------------------------------
Begin-Procedure Get-Email-Address
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Get-Email-Address'
#ENDIF

BEGIN-SELECT

PM.EMAIL_ADDR

  MOVE &PM.EMAIL_ADDR to $CertEmail             !Email of Certifying Official

FROM PS_EMAIL_ADDRESSES PM
WHERE PM.EMPLID = $CertOffic
AND PM.E_ADDR_TYPE = 'BUSN'

END-SELECT

End-Procedure Get-Email-Address

!----------------------------------------------------------------------
!---------Get-Previous-Total-------------------------------------------
!----------------------------------------------------------------------
! Fetch last year's total values as stored in database
!----------------------------------------------------------------------
Begin-Procedure Get-Previous-Total
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Get-Previous-Total'
#ENDIF


DISPLAY '$report_type: ' NOLINE
DISPLAY $report_type

BEGIN-SELECT DISTINCT

Q.ESTABID                     &q_estabid
Q.CTL_ESTABID                 &q_ctl_estabid
Q.FROMDATE                    &q_fromdate
Q.THRUDATE                    &q_thrudate
Q.EEO1BK_TOT                  &q_colBK
Q.EEO1A_TOT                   &q_col0
Q.EEO1B_TOT                   &q_col1
Q.EEO1C_TOT                   &q_col2
Q.EEO1D_TOT                   &q_col3
Q.EEO1E_TOT                   &q_col4
Q.EEO1F_TOT                   &q_col5
Q.EEO1G_TOT                   &q_col6
Q.EEO1H_TOT                   &q_col7
Q.EEO1I_TOT                   &q_col8
Q.EEO1J_TOT                   &q_col9
Q.EEO1K_TOT                   &q_col10
Q.EEO1L_TOT                   &q_col11
Q.EEO1M_TOT                   &q_col12
Q.EEO1N_TOT                   &q_col13
Q.EEO1O_TOT                   &q_col14

FROM PS_R_PER016 Q
WHERE Q.ESTABID = $Value_Estab
AND Q.EEO_RPT_TYPE = $report_type
AND ((Q.REPORT_RUN_DATE = (SELECT MAX(R.REPORT_RUN_DATE)
                                        FROM PS_R_PER016 R
                                        WHERE R.ESTABID = $Value_Estab
                                        AND R.EEO_RPT_TYPE = $report_type
                                        AND R.REPORT_RUN_DATE < $AsOfToday ))
OR (Q.FROMDATE = (SELECT MAX(R.FROMDATE)
                                        FROM PS_R_PER016 R
                                        WHERE R.ESTABID = $Value_Estab
                                        AND R.EEO_RPT_TYPE = $report_type
                                        AND R.FROMDATE < $FromDate )
AND Q.THRUDATE = (SELECT MAX(R.THRUDATE)
                                        FROM PS_R_PER016 R
                                        WHERE R.ESTABID = $Value_Estab
                                        AND R.EEO_RPT_TYPE = $report_type
                                        AND R.THRUDATE < $ThruDate )))
END-SELECT

IF TO_CHAR(&q_col14) = '0'
   LET #old_col0 = &q_col3
   LET #old_col1 = &q_col8
   LET #old_col2 = &q_col1
   LET #old_col3 = &q_col2
   LET #old_col4 = '0'
   LET #old_col5 = &q_col4
   LET #old_col6 = &q_col5
   LET #old_col7 = '0'
   LET #old_col8 = &q_col6
   LET #old_col9 = &q_col7
   LET #old_col10 = '0'
   LET #old_col11 = &q_col9
   LET #old_col12 = &q_col10
   LET #old_col13 = '0'
   LET #old_col14 = &q_colBK
ELSE
LET #old_col0 = &q_col0
LET #old_col1 = &q_col1
LET #old_col2 = &q_col2
LET #old_col3 = &q_col3
LET #old_col4 = &q_col4
LET #old_col5 = &q_col5
LET #old_col6 = &q_col6
LET #old_col7 = &q_col7
LET #old_col8 = &q_col8
LET #old_col9 = &q_col9
LET #old_col10 = &q_col10
LET #old_col11 = &q_col11
LET #old_col12 = &q_col12
LET #old_col13 = &q_col13
LET #old_col14 = &q_col14
END-IF

End-Procedure Get-Previous-Total

!----------------------------------------------------------------------
!---------Insert-Previous-Totals---------------------------------------
!----------------------------------------------------------------------
Begin-Procedure Insert-Previous-Totals
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Insert-Previous-Totals'
  DISPLAY 'LAST_HQ: ' $Last_HQ
#ENDIF

IF $Value_Estab = ''
!Begin the Incident 1353849006 
    !LET $Value_Estab = &F.CTL_ESTABID
    LET $Value_Estab = &F1.CTL_ESTABID
!End the Incident 1353849006
END-IF

IF $Consolidated = 'Y' and $Last_HQ <> ''
   LET $Cntl_Estab  = $Last_HQ
ELSE
!Begin the Incident 1353849006
   !LET $Cntl_Estab  = &F.CTL_ESTABID
   LET $Cntl_Estab  = &F1.CTL_ESTABID
!End the Incident 1353849006
END-IF

BEGIN-SQL on-error = sql-error

INSERT INTO PS_R_PER016 (

ESTABID
,CTL_ESTABID
,EEO_RPT_TYPE
,FROMDATE
,THRUDATE
,REPORT_RUN_DATE
,EEO1BK_TOT
,EEO1A_TOT
,EEO1B_TOT
,EEO1C_TOT
,EEO1D_TOT
,EEO1E_TOT
,EEO1F_TOT
,EEO1G_TOT
,EEO1H_TOT
,EEO1I_TOT
,EEO1J_TOT
,EEO1K_TOT
,EEO1L_TOT
,EEO1M_TOT
,EEO1N_TOT
,EEO1O_TOT
)

values  (
$Value_Estab
,$Cntl_Estab
,$report_type
,$fromdate
,$thrudate
,$asoftoday
,0
,#col0
,#col1
,#col2
,#col3
,#col4
,#col5
,#col6
,#col7
,#col8
,#col9
,#col10
,#col11
,#col12
,#col13
,#col14
)

end-SQL

End-Procedure Insert-Previous-Totals

!----------------------------------------------------------------------
!---------Check-Estab-Total--------------------------------------------
!----------------------------------------------------------------------
! Check-Estab-Total checks the total no. of employees and invokes the
! procedure Print-Report or adds the EEOarray values to EEOtotals and
! resets EEOarray.
!----------------------------------------------------------------------
Begin-Procedure Check-Estab-Total
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Check-Estab-Total'
#ENDIF

GET #est_tot FROM EEOarray(11) count(14)

#IFDEF DEBUGPER016
  DISPLAY '   #est_tot: ' NOLINE
  DISPLAY #est_tot
#ENDIF

MOVE 1 TO #EEORow
WHILE #EEOrow <= 12
   MOVE 0 TO #EEOcol
   WHILE #EEOcol <= 14
      GET #count1 FROM EEOarray(#EEOrow) count(#EEOcol)
      ARRAY-ADD #count1 TO EEOtotals(#EEOrow) count(#EEOcol)
      ADD 1 to #EEOcol
   END-WHILE
   ADD 1 to #EEORow
END-WHILE

End-Procedure Check-Estab-Total

!----------------------------------------------------------------------
!---------Print-Less-Than-50-------------------------------------------
!----------------------------------------------------------------------
!PRINT Establishments with Less Than Fifty Employees------------------
!----------------------------------------------------------------------
Begin-Procedure Print-Less-Than-50

#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Print-Less-Than-50'
#ENDIF

IF #Less_Estabs >= 1
ALTER-PRINTER
    point-size=24
    font=4                              ! Helvetica Font

   PRINT 'Establishments with Less Than Fifty Employees'       (3,32)

ALTER-PRINTER
    point-size=9
    font=3                              ! Courier Font

   PRINT 'PAGE  '                                          (1,140)
   ADD 1 to #page_nr
   DO Format-Number(#page_nr, $out, '999')
   PRINT $out                                              (,,)

   PRINT 'Number of'                                       (7,1)   BOLD
   PRINT 'Employees'                                       (8,1)   BOLD
   PRINT 'Major Activity'                                  (8,50)  BOLD
   PRINT 'Address'                                         (8,100) BOLD

   ! Horizontal Line below headers
   !-------------------------------------------
   GRAPHIC (8,1,132) HORZ-LINE

END-IF

LET #i = 0
WHILE #i < #Less_Estabs

   ! We'll manually handle page swapping to avoid having to define
   ! separate layouts for the less-than-50 page
   !--------------------------------------------------------------

   IF #current-line > 44
         NEW-PAGE
   ALTER-PRINTER
       font=4                              ! Helvetica Font
       point-size=24

      PRINT 'Establishments with Less Than Fifty Employees'       (3,32)

   ALTER-PRINTER
       point-size=9
       font=3                              ! Courier Font

      PRINT 'PAGE  '                                          (1,140)
      ADD 1 to #page_nr
      DO Format-Number(#page_nr, $out, '999')
      PRINT $out                                              (,,)

      PRINT 'Number of'                                       (7,1)   BOLD
      PRINT 'Employees'                                       (8,1)   BOLD
      PRINT 'Major Activity'                                  (8,50)  BOLD
      PRINT 'Address'                                         (8,100) BOLD

      ! Horizontal Line below headers
      !-------------------------------------------
      GRAPHIC (8,1,132) HORZ-LINE

   END-IF

   LET $Out = TO_CHAR(LS.employees(#i))
   PRINT $Out                                                 (+4, 1)

   LET #temp_line = #current-line

   LET $Out = LS.activity(#i)
   PRINT $Out                                                 (, 50) WRAP 48 5

   LET $Out = LS.name(#i)
   PRINT $Out                                                 (#temp_line, 100)

   LET $Out = LS.address(#i)
   PRINT $Out                                                 (+1, 100)

   LET $Out = LS.city(#i) || ', ' || LS.county(#i) || ' county'
   PRINT $Out                                                 (+1, 100)

   LET $Out = LS.state(#i) || ' ' || LS.zip(#i)
   PRINT $Out                                                 (+1, 100)

   LET #Total_Less = #Total_Less + LS.employees(#i)

   ADD 1 to #i

END-WHILE

! Print total Employees
!-------------------------------------------------------------------------
IF #Less_Estabs >= 1
   PRINT 'Total: '                                               (+3, 1) BOLD
   LET $Out = TO_CHAR(#Total_Less)
   PRINT $Out                                                    (,,)    BOLD
   NEW-PAGE
END-IF

LET #Total_Less = 0

ALTER-PRINTER
    font=3                              ! Helvetica Font

End-Procedure Print-Less-Than-50

!----------------------------------------------------------------------
!---------Write-To-File-Estab------------------------------------------
!----------------------------------------------------------------------
Begin-Procedure Write-To-File-Estab
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Write-To-File-Estab'
#ENDIF


! Field 1 - Company Number, 7 chars
!-----------------------------------------------
DO Strip-Char($EEO_Company, $Out, '-')
IF LENGTH($Out) > 7
 DISPLAY 'WARNING-- Company Code longer than expected'
 LET $Out = {ps-substr}($Out,1,7)
ELSE
 LET $Out = RPAD($Out,7,' ')
END-IF
If $Out = '       '
 DISPLAY 'WARNING-- Company Number is not provided'
End-IF

LET $Output = $Out

! Field 2 - Status - 1 char
!-----------------------------------------------
LET $Unit = 'Y'
IF $SingleEstab = 'Y'
   LET $Output = $Output || '1'
ELSE
   IF $HQ_Unit = 'Y'
      LET $Output = $Output || '3'
      IF $Consolidated = 'Y'
         LET $Output = {ps-substr}($Output,1,7) || '2'
      END-IF
   ELSE
      IF $Consolidated = 'Y'
         LET $Output = $Output || '2'
      ELSE
         IF #est_tot >= 50
            IF $SectionBc = 'Y'
               LET $Output = $Output || '4'
            ELSE
               LET $Output = $Output || '9'
               LET $Unit = 'N'
            END-IF
         ELSE
            IF $SectionBc = 'Y'
            LET $Output = $Output || '8'
            ELSE
               LET $Output = $Output || '8'             
               LET $Unit = 'N'
            END-IF
         END-IF
      END-IF
   END-IF
END-IF

! Field 3 - Unit Number - 7 characters
!-----------------------------------------------
IF $Unit = 'Y'
IF LENGTH($EEOunit) > 7
  DISPLAY 'WARNING-- Unit Number longer than expected'
  LET $Out = {ps-substr}($EEOunit,1,7)
ELSE
  LET $Out = RPAD($EEOunit,7,' ')
END-IF
If $Out = '       '
 DISPLAY 'WARNING-- Unit Number is not provided'
End-IF
ELSE
   LET $Out = '       '
   DISPLAY 'WARNING-- Unit Number not required for this establishment'
END-IF

LET $Output = $Output || $Out

! Field 4 - Estab Name - 35 char
!-----------------------------------------------
LET $Out = RTRIM(&EST.DESCR,' ')
If $Out = ''
 DISPLAY 'WARNING-- Estab Name is not provided'
else
        DO Strip-Char($Out, $Out1, '.')
        DO Strip-Char($Out1, $Out2, ',')

        let #val_len = {PS-length}($Out2)
          let #i = 1
          let $cur_char = ''
          let $outvalue = ''
          let $invalue = LTRIM($out2,' ')
          Let $out = ''
          Let $numb = 'Y'
         while #i <= #val_len

           let $cur_char = {PS-substr}($invalue,#i,1)
           let #ascii_char =  ascii($cur_char)

           if $numb = 'Y'
             IF (#ascii_char >= 48 and #ascii_char <= 57)
             Else
                 Let $numb = 'N'
                 let $out = $out || $cur_char
             end-if
           Else
             let $out = $out || $cur_char
           End-if
          add 1 to #i
         end-while



             let #val_len = {PS-length}($out)
               let #i = 1
               let $cur_char = ''
               let $cut_char = ''
               let $invalue = LTRIM($out,' ')
               Let $out = ''
               Let $out1 = ''
               Let $out2 = ''


        while #i <= #val_len

                 let $val_cut = 'N'
            If #i <= 1
             let $cur_char = {PS-substr}($invalue,#i,1)
                If  $cur_char = 'T' or $cur_char = 't'
                    let #j = #i+1
                let $cur_char = {PS-substr}($invalue,#j,1)
                  If  $cur_char = 'H' or $cur_char = 'h'
                   let #j = #i+2
                   let $cur_char = {PS-substr}($invalue,#j,1)
                    If  $cur_char = 'E' or $cur_char = 'e'
                        let #j = #i+3
                        let $cur_char = {PS-substr}($invalue,#j,1)
                        If  $cur_char = ' '

                         let $val_cut = 'Y'
                         let $cut_char = {PS-substr}($invalue,#i,3)
                        end-if
                    end-if
                  end-if
                end-if
              end-if

                 IF  $val_cut = 'N'
                      let $cur_char = {PS-substr}($invalue,#i,1)
                      let $out = $out || $cur_char
                      add 1 to #i
                 else
                     let #i = #j
                 end-if

          end-while

                  if $cut_char = ''
                  else
                     let $out = $out || ' '||$cut_char
                  end-if


End-IF
IF LENGTH($Out) > 35
   LET $Out = {ps-substr}($Out,1,35)
ELSE
   LET $Out = RPAD($Out,35,' ')
END-IF
LET $Output = $Output || $Out

! Field 5 - Estab Address1 - 34 char
!-----------------------------------------------
LET $Out = ''
LET $Out1 = RTRIM(&EST.ADDRESS1,' ')

If $Out1 = ''
 DISPLAY 'WARNING-- Estab Address1 is not provided'
Else
 DO Strip-Char($Out1, $Out2, '.')
 DO Strip-Char($Out2, $Out, ',')
End-IF
IF LENGTH($Out) > 34
   LET $Out = {ps-substr}($Out,1,34)
ELSE
   LET $Out = RPAD($Out,34,' ')
END-IF
LET $Output = $Output || $Out

! Field 6 - Estab Address2 - 25 char
!-----------------------------------------------
LET $Out1 = RTRIM(&EST.ADDRESS2,' ')
DO Strip-Char($Out1, $Out2, '.')
DO Strip-Char($Out2, $Out, ',')
If $Out = ''
 DISPLAY 'WARNING-- Estab Address2 is not provided'
End-IF
IF LENGTH($Out) > 25
   LET $Out = {ps-substr}($Out,1,25)
ELSE
   LET $Out = RPAD($Out,25,' ')
END-IF
LET $Output = $Output || $Out

! Field 7 - Estab City - 20 char
!-----------------------------------------------
LET $Out1 = RTRIM(&EST.CITY,' ')
DO Strip-Char($Out1, $Out2, '.')
DO Strip-Char($Out2, $Out, ',')
If $Out = ''
 DISPLAY 'WARNING-- City is not provided'
End-IF
IF LENGTH($Out) > 20
   LET $Out = {ps-substr}($Out,1,20)
ELSE
   LET $Out = RPAD($Out,20,' ')
END-IF
LET $Output = $Output || $Out

! Field 8 - Estab State - 2 char
!-----------------------------------------------
LET $Out = RTRIM(&EST.STATE,' ')
If $Out = ''
 DISPLAY 'WARNING-- State is not provided'
End-IF
IF LENGTH($Out) > 2
   LET $Out = {ps-substr}($Out,1,2)
ELSE
   LET $Out = RPAD($Out,2,' ')
END-IF
LET $Output = $Output || $Out

! Field 9 - Estab ZIP - 5 char
!-----------------------------------------------
LET $PostalIn = RTRIM(&EST.POSTAL,' ')
If $PostalIn = ''
 DISPLAY 'WARNING-- Postal Code is not provided'
End-IF
DO Strip-Char($PostalIn, $PostalOut, '-')
IF LENGTH($PostalOut) > 5
   LET $Out = {ps-substr}($PostalOut,1,5)
ELSE
   LET $Out = RPAD($PostalOut,5,' ')
END-IF
LET $Output = $Output || $Out

! Field 10 - Question B.2.C  Was report filed
!            last year 1=yes, 2=no
!-----------------------------------------------
IF $SectionBc = 'Y'
   LET $Output = $Output || '1'
ELSE
   LET $Output = $Output || '2'
END-IF

! Field 11 - Question C.1 Min 100 Employees
!             1=yes, 2=no
!-----------------------------------------------
IF $SectionC1 = 'Y'
   LET $Output = $Output || '1'
ELSE
   LET $Output = $Output || '2'
END-IF

! Field 12 - Question C.2 Affiliated?
!             1=yes, 2=no
!-----------------------------------------------
IF $SectionC2 = 'Y'
   LET $Output = $Output || '1'
ELSE
   LET $Output = $Output || '2'
END-IF

! Field 13 - Question C.3 Gov Contractor?
!             1=yes, 2=no
!-----------------------------------------------
IF $SectionC3 = 'Y'
   LET $Output = $Output || '1'
ELSE
   LET $Output = $Output || '2'
END-IF

! Field 14 - Dun & Bradstreet Number - 9 numbers
!-----------------------------------------------
IF LENGTH($DUNS) > 9
   LET $Out = {ps-substr}($DUNS,1,9)
ELSE
   LET $Out = RPAD($DUNS,9,' ')
END-IF
If $Out = '         '
 DISPLAY 'WARNING-- Dun & Bradstreet Number is not provided'
End-IF
LET $Output = $Output || $Out

! Field 15 - Estab County - 18 char
!-----------------------------------------------
LET $Out1 = RTRIM(&EST.COUNTY,' ')
DO Strip-Char($Out1, $Out2, '.')
DO Strip-Char($Out2, $Out, ',')
If $Out = ''
 DISPLAY 'WARNING-- Estab County is not provided'
End-IF
IF LENGTH($Out) > 18
   LET $Out = {ps-substr}($Out,1,18)
ELSE
   LET $Out = RPAD($Out,18,' ')
END-IF
LET $Output = $Output || $Out

! Field 16 - Pay Period as YYYYMMDDYYYYMMDD
!-----------------------------------------------
DO Format-DateTime($FromDate, $Out, {DEFCMP},'','')
LET $From_Out = {ps-substr}($Out,5,4) || {ps-substr}($Out,1,4)

DO Format-DateTime($ThruDate, $Out, {DEFCMP},'','')
LET $Thru_Out = {ps-substr}($Out,5,4) || {ps-substr}($Out,1,4)

LET $Output = $Output || $From_Out || $Thru_Out

! Field 17 - NAICS Code - 6 Numbers
!-----------------------------------------------
IF LENGTH($NAICS) > 6
   LET $Out = {ps-substr}($NAICS,1,6)
ELSE
   LET $Out = RPAD($NAICS,6,' ')
END-IF
If $Out = '      '
 DISPLAY 'WARNING-- NAICS Code is not provided'
End-IF
LET $Output = $Output || $Out

! Field 18 - Title of Cert. Offic. - 35 char
!-----------------------------------------------
LET $Out = RTRIM($CertTitle,' ')
If $Out = ''
 DISPLAY 'WARNING-- Title of Cert. Offic. is not provided'
End-IF
DO Strip-Char($Out, $Out1, '.')
DO Strip-Char($Out1, $CertTitle, ',')
IF LENGTH($CertTitle) > 35
   LET $Out = {ps-substr}($CertTitle,1,35)
ELSE
   LET $Out = RPAD($CertTitle,35,' ')
END-IF
LET $Output = $Output || $Out

! Field 19 - Name of Cert. Offic. - 35 char
!-----------------------------------------------
LET $Out = RTRIM($CertName,' ')
If $Out = ''
 DISPLAY 'WARNING-- Name of Cert. Offic. is not provided'
End-IF
DO Strip-Char($Out, $Out1, '.')
DO Strip-Char($Out1, $CertName, ',')
IF LENGTH($CertName) > 35
   LET $Out = {ps-substr}($CertName,1,35)

ELSE
   LET $Out = RPAD($CertName,35,' ')

END-IF
LET $Output = $Output || $Out

! Field 20 - Phone of Cert. Offic. - 10 char
!-----------------------------------------------
DO Strip-Char($CertPhone, $PhoneOut1, '/')
DO Strip-Char($PhoneOut1, $PhoneOut2, '-')
let $PhoneOut1 = $PhoneOut2
DO Strip-Char($PhoneOut1, $PhoneOut2, ' ')
IF LENGTH($PhoneOut2) > 10
   LET $Out = {ps-substr}($PhoneOut2,1,10)
ELSE
   LET $Out = RPAD($PhoneOut2,10,' ')
END-IF
If $Out = '          '
 DISPLAY 'WARNING-- Phone of Cert. Offic. is not provided'
End-IF
LET $Output = $Output || $Out

! Field 21 - Email of Cert. Offic. - 40 char
!-----------------------------------------------
IF LENGTH($CertEmail) > 40
   LET $Out = {ps-substr}($CertEmail,1,40)
ELSE
   LET $Out = RPAD($CertEmail,40,' ')
END-IF
LET $Output = $Output || $Out

! Field 22 - Matrix Data
!-----------------------------------------------
      MOVE 1 TO #Matrix_Row
      WHILE #Matrix_Row <= 11
         MOVE 0 TO #Matrix_Col
         WHILE #Matrix_Col <= 14
            GET #Out FROM EEOarray(#Matrix_Row) count(#Matrix_Col)
            LET $Out = TO_CHAR(#Out)

            IF #Matrix_Col = 14
               IF LENGTH($Out) > 7
                  LET $Out = {ps-substr}($Out,1,7)
               ELSE
                  LET $Out = LPAD($Out,7,'0')
               END-IF
               LET $Output = $Output || $Out
            ELSE
               IF LENGTH($Out) > 6
                  LET $Out = {ps-substr}($Out,1,6)
               ELSE
                  LET $Out = LPAD($Out,6,'0')
               END-IF
               LET $Output = $Output || $Out
            END-IF

            ADD 1 to #Matrix_Col
         END-WHILE
         ADD 1 to #Matrix_Row
      END-WHILE

! Put the String in an array for later writing to a file
!------------------------------------------------

LET $outputtofile = $Output
LET $Output = ''

End-Procedure Write-To-File-Estab

!----------------------------------------------------------------------
!-----------Strip-Char-------------------------------------------------
!----------------------------------------------------------------------
! This procedure is used to strip unwanted characters it loops through
! characters in the value string provided and removes all occurrences
! of ANY CHARACTER in $strip. This is used to remove characters like
! dashes, periods etc. Note: This function is also provided in the
! ECBUSDOC.SQC under the name Process-Strip-Char()
!----------------------------------------------------------------------
begin-procedure Strip-Char($invalue,:$outvalue,$strip)
#IFDEF DEBUGPER016
  DISPLAY 'FLOW: Strip-Char'
  DISPLAY '   $invalue: ' NOLINE
  DISPLAY $invalue
  DISPLAY '   $strip: ' NOLINE
  DISPLAY $strip
#ENDIF
  let #val_len = {PS-length}($invalue)
  let #i = 1
  let $cur_char = ''
  let $outvalue = ''

  while #i <= #val_len

     let $cur_char = {PS-substr}($invalue,#i,1)

     if instr($strip, $cur_char, 1) = 0

        let $outvalue = $outvalue || $cur_char

     end-if

     add 1 to #i
  end-while

end-procedure

Begin-Procedure write-to-file

       LET $Output = $outputtofile
       WRITE #H from                    $Output
                                     Status=#FileStatus

       IF #FileStatus != 0
         DISPLAY '    WARNING: Error writing file record'
         STOP QUIET
       END-IF
       LET $outputtofile = ''

 End-Procedure

!----------------------------------------------------------------------
!---------SQCs---------------------------------------------------------
!----------------------------------------------------------------------
#include 'stdapi.sqc'      !Routine to update run status
#include 'rgrnctl1.sqc'    !Get run control parameter values
#include 'rggetval.sqc'    !Get values mask routines
#include 'askcalyr.sqc'    !Ask Calendar Year input
#Include 'curdttim.sqc'    !Get-Current-DateTime procedure
#Include 'datetime.sqc'    !Routines for date and time formatting
#Include 'datemath.sqc'    !Routines for date and time calculations
#Include 'number.sqc'      !Routines to format numbers
