!*****************************************
!  PER001:  Departmental Action Notices  *
!*****************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:22:37                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number

  do Init-Report
   Move 1 to $Year4
  do Get-Current-DateTime
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-heading 4
do Get_Field_Information ('PER001',     'REPORT_TITLE',         $REPORTTITLE,   #DW)
  #Include 'stdhdgtr.sqc'

do Get_Field_Information ('HR',         'EMPL_NAME',            $NAME_q,          #DW)
do Get_Field_Information('HR',          'BUS_UNIT_COLON',             $BUSUNIT,      #DW)
do Get_Field_Information ('HR',         'DEPARTMENT',           $DEPT,          #DW)
do Get_Field_Information ('HR',         'MANAGER',              $MANAGER,       #DW)
LET $DEPTNM = $DEPT || ':'
LET $MANAGE = $MANAGER || ':'

  print $BUSUNIT       (0,1)
  PRINT $BU             (0,+1)
  print $DEPTNM         (0,+3)

  print $DeptName       (0,+1) !PRINTS THE DEPARTMENT NAME
  print $MANAGE         (0,+3)
  print $DeptMgrName    (0,+1)
end-heading

begin-procedure Init-Report

  move 'PER001' to $ReportID
  move '1' to $ReportMMLZero
  move '1' to $ReportDDLZero

  do Delete-Worktable

  do Stdapi-Init

  if $prcs_process_instance = ''
    !No Prompt
  else
    do Select-Parameters
  end-if
  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')
  do Init-Array
end-procedure

begin-procedure Get-Values
let $language_cd = $PRCS_LANGUAGE_CD
end-procedure

begin-procedure Init-Array
do Get_Field_Information ('HR',         'BIRTHDATE',            $BIRTH,         #DW)
do Get_Field_Information ('PER001',    'LEAVE_ABSENCE',        $LEAVE,         #DW)
do Get_Field_Information ('PER001',    'BIRTHDAY_30',          $BIRTHDAY_30,   #DW)
do Get_Field_Information ('PER001',    'ANNIVERSARY_30',       $ANNIVERSARY,   #DW)
do Get_Field_Information ('PER001',    'HIREDT_YRS',           $HIREDT_YRS,    #DW)
do Get_Field_Information ('PER001',    'EFFDT_RETURN',         $EFFDT_RET,     #DW)
do Get_Field_Information ('PER001',    'SUSPENSION',           $SUSPENSION,    #DW)
do Get_Field_Information ('PER001',    'LAYOFF',               $LAYOFF,        #DW)
do Get_Field_Information ('PER001',    'HIRES_30',             $HIRES_30,      #DW)
do Get_Field_Information ('PER001',    'HIRE_DT',              $HIREDT,        #DW)
do Get_Field_Information ('PER001',    'PROMOTION_30',         $PROMOTION,     #DW)
do Get_Field_Information ('PER001',    'EFFDT',                $EFFDT,         #DW)
do Get_Field_Information ('PER001',    'COMPLETION_90',        $COMPLETION,    #DW)
do Get_Field_Information ('PER001',    'INCREASES_11',         $INCREASES,     #DW)
do Get_Field_Information ('PER001',    'LAST_INCREASE_DT',     $LASTINCR,      #DW)
do Get_Field_Information ('PER001',    'SHORT_WORK_BREAK',     $SHORTWBRK,     #DW)  !HP99999
                                Create-array name=Head size=13 field=RptHead:char field=ColHead:char
  put $BIRTHDAY_30                                      into Head(0)  RptHead
  put $BIRTH                                            into Head(0)  ColHead
  put $ANNIVERSARY                                      into Head(1)  RptHead
  put $HIREDT_YRS                                       into Head(1)  ColHead
  put $LEAVE                                            into Head(3)  RptHead
  put $EFFDT_RET                                        into Head(3)  ColHead
  put $SUSPENSION                                       into Head(4)  RptHead
  put $EFFDT_RET                                        into Head(4)  ColHead
  put $LAYOFF                                           into Head(5)  RptHead
  put $EFFDT_RET                                        into Head(5)  ColHead
  put $HIRES_30                                         into Head(6)  RptHead
  put $HIREDT                                           into Head(6)  ColHead
  put $PROMOTION                                        into Head(7)  RptHead
  put $EFFDT                                            into Head(7)  ColHead
  put $COMPLETION                                       into Head(8)  RptHead
  put $HIREDT                                           into Head(8)  ColHead
  put $INCREASES                                        into Head(9)  RptHead
  put $LASTINCR                                         into Head(9)  ColHead
  put $SHORTWBRK                                        into Head(11) RptHead    !HP99999
  put $EFFDT_RET                                        into Head(11) ColHead    !HP99999

  ! New in Release 8.4: the values for Head(2) and Head(10) have been removed, because
  ! 'Employees with Past-Due Reviews' 'Employee Reviews In Next 60 Days' have been removed
  ! from the Deparment Action Notices. This is now tracked in ePerformance Management.

end-procedure

begin-procedure Process-Main

   if $language_cd = 'JPN'
          let $qualifier = 'NAME_AC'
          let $qualifier2 = 'EMPLNAME_AC'
   else
          let $qualifier = 'NAME'
          let $qualifier2 = 'EMPLNAME'
   end-if
  do Data-Selection
  do Create-Report
  do Delete-Worktable

end-procedure

begin-procedure Data-Selection
begin-SELECT DISTINCT
A.EMPLID
A.EFFDT
A.EMPL_RCD
EMPL_STATUS
ACTION
A.BUSINESS_UNIT
DEPTID
A.NAME &NAME
A.NAME_AC &NAME_AC
BIRTHDATE
HIRE_DT
EXPECTED_RETURN_DT

  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($AsOfToday,  $Today_YMD, {DEFYMD}, '', '')
  if not IsNull(&BirthDate)
    move '1' to $Year4
    move '-' to $DDelimiter
    do Format-DateTime(&BirthDate, $Birth_YMD, {DEFYMD}, '', '')
    let $Curr_BD_YMD  = {ps-substr}($Today_YMD,1,4) || {ps-substr}($Birth_YMD,5,4)
          ||'01'
    do Dtu-Diff-Days($Today_YMD, $Curr_BD_YMD, #diff)
    let #BirthDays = #diff + to_number({ps-substr}($Birth_YMD, 9, 2)) - 1
  end-if

  if not IsNull(&Hire_Dt)
    move '1' to $Year4
    move '-' to $DDelimiter
    do Format-DateTime(&Hire_Dt,  $Hire_YMD,  {DEFYMD}, '', '')
    let $Curr_hireday_YMD  = {ps-substr}($Today_YMD,1,4) || {ps-substr}($Hire_YMD,5,4)
          ||'01'
    do Dtu-Diff-Days($Today_YMD, $Curr_hireday_YMD, #diff)
    let #AnvDays = #diff + to_number({ps-substr}($Hire_YMD, 9, 2)) - 1
    do Dtu-Diff-Years($Hire_YMD, $Today_YMD, #AnvYears)
    if {ps-substr}($Hire_YMD, 6,5) <> {ps-substr}($Today_YMD,6,5)
       let #AnvYears = #AnvYears + 1
    end-if
    do Dtu-Diff-Days($Hire_YMD, $Today_YMD, #HireDays)
  end-if

  if not IsNull(&A.Effdt)
    move '1' to $Year4
    move '-' to $DDelimiter
    do Format-DateTime(&A.EffDt,  $Eff_YMD,  {DEFYMD}, '', '')
    do Dtu-Diff-Days($Eff_YMD, $Today_YMD, #EffDays)
  end-if

  do Action-Tests

FROM  PS_EMPLOYEES A
ORDER BY DEPTID, [$qualifier]
end-SELECT
end-procedure

begin-procedure Action-Tests
  if not IsNull(&Birthdate)
    if #BirthDays >= 0 and #BirthDays <= 31
      move 0          to #RptID
      move &Birthdate to $NoticeDate
      do Insert-Worktable
    end-if
  end-if

  if not IsNull(&Hire_Dt)
    if #AnvDays >= 0 and #AnvDays <= 31
      move 1         to #RptID
      move &Hire_Dt  to $NoticeDate
      do Format-Number(#AnvYears, $SpecialField1, '9999')
      do Insert-Worktable
    end-if
  end-if

  evaluate &Empl_Status
    when = 'L'                  !Leave
    when = 'S'                  !Suspension
    when = 'P'                  !Paid Leave
    when = 'W'                  !Short Work Break                       !HP99999
      if IsNull(&Expected_Return_Dt)
        move  ' ' to $SpecialField1
      else
        do Format-DateTime(&Expected_Return_Dt, $SpecialField1,
                           {DEFDATE}, '', '')
      end-if
      if &Empl_Status = 'L' or &Empl_Status = 'P'  !on Leave of Absence
        move 3 to #RptID
      else
        if &Action = 'SUS'   !on Suspension
          move 4 to #RptID
        else                 !on Layoff status
          if &Action = 'SWB'                                            !HP99999
             move 11 to #RptID                                          !HP99999
          else                                                          !HP99999
             move 5 to #RptID                                           !HP99999
          end-if                                                        !HP99999
                                                                        !HP99999
        end-if
      end-if
      move &A.EffDt to $NoticeDate
      do Insert-Worktable
  end-evaluate

  if not IsNull(&Hire_Dt)
    if #HireDays >= 0 and #HireDays <= 30
      move 6        to #RptID
      move &Hire_Dt to $NoticeDate
      do Insert-Worktable
    end-if
  end-if

  if &Action = 'XPR' or &Action = 'PRO'  !Promotion with or without Transfer
    if #EffDays >= 0 and #EffDays <= 30
      move 7        to #RptID
      move &A.EffDt to $NoticeDate
      do Insert-Worktable
    end-if
  end-if

  if not IsNull(&Hire_Dt)
    if #HireDays >= 90 and #HireDays <= 120
      move 8        to #RptID
      move &Hire_Dt to $NoticeDate
      do Insert-Worktable
    end-if
  end-if

begin-SELECT Loops=1
B.EFFDT,B.EFFSEQ

  if not IsNull(&B.EffDt)
    move '1' to $Year4
    move '-' to $DDelimiter
    do Format-DateTime(&B.EffDt, $Eff_YMD,  {DEFYMD}, '', '')
    do Dtu-Diff-Days($Eff_YMD, $Today_YMD, #NoChgDays)
  end-if

FROM  PS_JOB B
WHERE B.EMPLID      = &A.EmplID
  AND B.EMPL_RCD   = &A.EMPL_RCD
  AND B.CHANGE_AMT <> 0

ORDER BY B.EFFDT DESC, B.EFFSEQ DESC
end-SELECT

  if IsNull(&B.EffDt)
    if #HireDays >= 335  !if greater than 11 months since hire
      move 9        to #RptID
      move &Hire_Dt to $NoticeDate
      do Insert-Worktable
    end-if
  else
    if #NoChgDays >= 335 !if greater than 11 months since last increase
      move 9        to #RptID
      move &B.EffDt to $NoticeDate
      do Insert-Worktable
    end-if
  end-if
end-procedure

begin-procedure Insert-Worktable
  do Format-Number(#RptID, $RptID, '9999')
  if $SpecialField1 = ''
     move ' '             to $SpecialField1
  end-if
if $NoticeDate = ''
let $sql-statement = 'PER001.SQR,Insert-Worktable,Insert1,PS_R_PER001'
begin-SQL On-Error=SQL-Error
INSERT INTO PS_R_PER001 (RPTID,BUSINESS_UNIT,DEPARTMENT,
                               EMPLNAME,EMPLNAME_AC,SPECIALFIELD1)
  VALUES ($RptID,&A.BUSINESS_UNIT,&DeptID,&Name,&NAME_AC,$SpecialField1)
end-SQL
else
let $sql-statement = 'PER001.SQR,Insert-Worktable,Insert2,PS_R_PER001'
begin-SQL On-Error=SQL-Error
INSERT INTO PS_R_PER001 (RPTID,BUSINESS_UNIT,DEPARTMENT,EMPLNAME,
                                      EMPLNAME_AC,NOTICEDATE,SPECIALFIELD1)
  VALUES ($RptID,&A.BUSINESS_UNIT,&DeptID,&Name,&NAME_AC,$NoticeDate,$SpecialField1)
end-SQL
end-if
  move '' to $SpecialField1
end-procedure

begin-procedure Delete-Worktable
let $sql-statement = 'PER001.SQR,Delete-Worktable,Delete,PS_R_PER001'
begin-SQL On-Error=SQL-Error
DELETE FROM PS_R_PER001;
end-SQL
end-procedure


begin-procedure Create-Report
  move -1 to #priorRptID
  move $AsOfToday to $AsOfDate
begin-SELECT

R.RPTID
R.BUSINESS_UNIT
R.DEPARTMENT,R.EMPLNAME,R.SPECIALFIELD1,R.NOTICEDATE,R.EMPLNAME_AC,Y.DESCR
  move &R.RptID to #RptID
  move &R.Department to $DeptID
  move &R.Department to $DeptID_New

  LET $BU = RTRIM(&R.BUSINESS_UNIT,' ')

        do Print-Notice
FROM PS_R_PER001 R, PS_DEPT_TBL Y
WHERE Y.DEPTID = R.DEPARTMENT
AND   Y.SETID  = (SELECT SETID FROM PS_SET_CNTRL_REC WHERE  SETCNTRLVALUE = R.BUSINESS_UNIT AND
                  RECNAME = 'DEPT_TBL')
AND Y.EFFDT  = (SELECT MAX(EFFDT) FROM PS_DEPT_TBL WHERE  DEPTID = Y.DEPTID AND  SETID  = Y.SETID
                  AND  EFFDT <= $AsOfDate )
ORDER BY R.BUSINESS_UNIT,Y.DESCR,R.RPTID,[$qualifier2]

end-SELECT

end-procedure

begin-procedure Print-Notice

     if $DeptID_New <> $priorDeptID
        if RTRIM($priorDeptID, ' ') <> '' !if not the first record
         let $DeptID = $DeptID_New
                  new-page
         end-if
    do Get-Department-Name
    move $DeptMgrID to $EmplID
    do Get-Employee-Name
    move $Name to $DeptMgrName
    move $DeptID_New to $priorDeptID


    move -1 to #priorRptID  !ensure subheading on Department change
    position (-2)           !adjust for top-of-page subheading
  end-if
  if #RptID <> #priorRptID
    move #RptID to #priorRptID
    if #current-line >= 72
      new-page
    end-if
    get $RptHead from Head(#priorRptID) RptHead
    print $RptHead        (+3,1)
    do Get_Field_Information ('HR',         'EMPL_NAME',           $EMPLNM,          #DW)
    print $EMPLNM (+1,1)
    get $ColHead from Head(#priorRptID) ColHead
    print $ColHead        (0,44)
    position (+1)
  end-if
  print &R.EmplName (+1,1)

  evaluate #RptID
    when = 0
      do Format-DateTime(&R.NoticeDate, $out, {DEFMDY}, '', '')
      let $mmdd =  {ps-substr}($out, 1, 5)
      let $mm =  {ps-substr}($out, 1, 2)
      let $dd =  {ps-substr}($out, 4, 2)
      if {MMLZero} = '0'
        let $mm = ltrim($mm, '0')
      end-if
      if {DDLZero} = '0'
        let $dd = ltrim($dd, '0')
      end-if
      if {DateType} = '1'
        let $mmdd = $dd || {DDelimiter} || $mm
      else
        let $mmdd = $mm || {DDelimiter} || $dd
      end-if
      print $mmdd (0,46) !don't identify the year
    when = 1
       Move 1 to $Year4
      do Format-DateTime(&R.NoticeDate, $out, {DEFDATE}, '', '')
      print $out (0,44)
      print &R.SpecialField1 (0,58)
    when = 3
    when = 4
    when = 5
      Move 1 to $Year4
      do Format-DateTime(&R.NoticeDate, $out, {DEFDATE}, '', '')
      print $out (0,46)
      print &R.SpecialField1 (0,61)
    when = 6
    when = 8
       Move 1 to $Year4
      do Format-DateTime(&R.NoticeDate, $out, {DEFDATE}, '', '')
      print $out (0,44)
    when = 7
      Move 1 to $Year4
      do Format-DateTime(&R.NoticeDate, $out, {DEFDATE}, '', '')
      print $out (0,47)
    when = 9
       Move 1 to $Year4
      do Format-DateTime(&R.NoticeDate, $out, {DEFDATE}, '', '')
      print $out (0,49)
  end-evaluate

  ! New in Release 8.4: the #RptIDs 2 and 10 have been removed, because
  ! 'Employees with Past-Due Reviews' 'Employee Reviews In Next 60 Days' have been removed
  ! from the Deparment Action Notices. This is now tracked in ePerformance Management.

end-procedure

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'stdapi.sqc'    !Routines to update run status

#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getempnm.sqc'  !Get-Employee-Name procedure
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
