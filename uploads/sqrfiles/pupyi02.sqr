!***********************************************************************
!  PUPYI02:  8.9 Upgrade - ChartKey usage by expense Type              *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      !
!          $Date:  2006/07/20:12:28:45                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      !
!**********************************************************************!

#include 'setenv.sqc' !Set environment
#include 'setup31.sqc'  !printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PUPYI02' to $ReportID

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  
  move 'ChartKey Usage by Expense Type' to $ReportTitle

  display ' '
  display $ReportTitle
  display ' '

end-procedure

!**********************************
Begin-Procedure Report-Translation
!**********************************
! This is DUMMY procedure.
! Needed for the reference from getrplng.sqc.
End-Procedure

begin-HEADING 8

  #Include 'stdhdgtr.sqc'
  Print $PUPYI02_title      (+1,1,30)
  Print ''                  (+1,1,1)
  print $PUPYI02_group1     (+1,#1A, #2A)
  print $PUPYI02_group2     (0,#1B, #2B)
  print $PUPYI02_group3     (0,#1C, #2C)
  print $PUPYI02_group4     (0,#1D, #2D)
  print $PUPYI02_group5     (0,#1E, #2E)
  print $PUPYI02_group6     (0,#1F, #2F)
  print $PUPYI02_group7     (0,#1G, #2G)
  print $PUPYI02_group8     (0,#1H, #2H)
  print $PUPYI02_group9     (0,#1I, #2I)
  print $PUPYI02_group10    (0,#1J, #2J)

  print '-'       (+1,#1A, #2A) Fill
  print '-'       (0,#1B, #2B) Fill
  print '-'   (0,#1C, #2C) Fill
  print '-'       (0,#1D, #2D) Fill
  print '-'       (0,#1E, #2E) Fill
  print '-'       (0,#1F, #2F)  Fill
  print '-'       (0,#1G, #2G) Fill
  If #1G + #2G > 132
     Let #Itmp = (#1G + #2G) - 132
     Let  #2G = #2G - #Itmp 
  end-if 
  print '-'       (0,#1H, #2H) Fill
  If #1I + #2I > 132
    Let  #Itmp = (#1I + #2I) - 132
    Let  #2I = #2I - #Itmp 
  end-if 
  print '-'       (0,#1I, #2I) Fill
  If #1J + #2J > 132
     Let #Itmp = (#1J + #2J) - 132
     Let #2J = #2J - #Itmp 
  end-if 
  print '-'       (0,#1J, #2J) Fill
end-HEADING

!***********************************************************************
!  PROC REPORT                                                         *
!         Main Procedure                                               *
!***********************************************************************

BEGIN-PROCEDURE Process-Main
do Get-EarningsCode
new-page
do Get-DeductionCodes
new-page
do Get-US-Company-Tax
new-page
do Get-CAN-Tax-Account
 
END-PROCEDURE


!***************************************************************************
!  Get-EarningsCode Get the erncd and Chartkey                             *
!***************************************************************************

BEGIN-PROCEDURE Get-EarningsCode
Let #1A = 1 
Let #2A = 9
Let #1B = 11
Let #2B = 5
Let #1C = 17 
Let #2C = 10 
Let #1D = 29 
Let #2D = 30 
Let #1E = 61
Let #2E = 10 
Let #1F = 73
Let #2F = 10 
Let #1G = 85
Let #2G = 5 
Let #1H = 92 
Let #2H = 30 
Let #1I = 91
Let #2I = 1
Let #1J = 91
Let #2J = 1
Let $PUPYI02_group1 = 'Earn Code'
Let $PUPYI02_group2 = 'Setid'
Let $PUPYI02_group3 = 'Efft Date'
Let $PUPYI02_group4 = 'ChartKey Listing'
Let $PUPYI02_group5 = 'Account'
Let $PUPYI02_group6 = 'Department'
Let $PUPYI02_group7 = 'Fund'
Let $PUPYI02_group8 = 'Line Description'
Let $PUPYI02_group9 = ''
Let $PUPYI02_group10 = ''
Let $PUPYI02_title = 'Earnings Expense Accounts'

BEGIN-SELECT 
A.ERNCD
B.SETID
A.EFFDT
A.GL_EXPENSE
B.ACCOUNT
B.DEPTID
B.FUND_CODE
B.LINE_DESCR
  If &A.ERNCD <> $ERNCD_OLD or &B.SETID <> $SETID_OLD or &A.GL_EXPENSE <> $GL_EXPENSE_OLD
     print &A.ERNCD (+1,#1A,#2A)
     print &B.SETID (0,#1B,#2B)
     
     Let $EFFDT = &A.EFFDT 
     do Format-DateTime($EFFDT, $out, {DEFDATE}, '', '')
     print $out (0,#1C,#2C)
     
     print &A.GL_EXPENSE (0,#1D,#2D)
     print &B.ACCOUNT (0, #1E, #2E)
     print &B.DEPTID  (0, #1F, #2F)
     print &B.FUND_CODE (0, #1G, #2G) 
     print &B.LINE_DESCR (0, #1H, #2H) 
  END-IF
  Let $ERNCD_OLD = &A.ERNCD
  Let $SETID_OLD = &A.GL_EXPENSE
  Let $GL_EXPENSE_OLD = &A.GL_EXPENSE
FROM PS_EARNINGS_TBL A
, PS_CHART_KEYS_HR B
WHERE B.CHART_KEY = A.GL_EXPENSE
AND B.ACCOUNT_TYPE = 'X'
ORDER BY A.ERNCD, B.SETID, A.GL_EXPENSE, A.EFFDT
END-SELECT
END-PROCEDURE

!***************************************************************************
!  Get-DeductionCodes                     Get the dedcd and Chartkey       *
!***************************************************************************


BEGIN-PROCEDURE Get-DeductionCodes

Let #1A = 1 
Let #2A = 8
Let #1B = 10
Let #2B = 9
Let #1C = 21 
Let #2C = 5 
Let #1D = 28 
Let #2D = 10 
Let #1E = 40
Let #2E = 30 
Let #1F = 72
Let #2F = 10 
Let #1G = 84
Let #2G = 10 
Let #1H = 96 
Let #2H = 5 
Let #1I = 102
Let #2I = 30
Let #1J = 104
Let #2J = 0
Let $PUPYI02_group1 = 'Ded Code'
Let $PUPYI02_group2 = 'Plan Type'
Let $PUPYI02_group3 = 'Setid'
Let $PUPYI02_group4 = 'Efft Date'
Let $PUPYI02_group5 = 'ChartKey Listing'
Let $PUPYI02_group6 = 'Account'
Let $PUPYI02_group7 = 'Department'
Let $PUPYI02_group8 = 'Fund'
Let $PUPYI02_group9 = 'Line Description'
Let $PUPYI02_group10 = ''
Let $PUPYI02_title = 'Deduction Expense Accounts'


BEGIN-SELECT 
A.DEDCD
A.PLAN_TYPE 
B.SETID &DED_SETID
A.EFFDT &DED_EFFDT 
A.GL_EXPENSE &DED_GL_EXPENSE
B.ACCOUNT &DED_ACCOUNT
B.DEPTID  &DED_DEPTID
B.FUND_CODE &DED_FUND_CODE
B.LINE_DESCR &DED_LINE_DESCR

  If &A.DEDCD <> $DEDCD_OLD or &A.PLAN_TYPE <> $PLAN_TYPE_OLD or &DED_SETID <> $DED_SETID_OLD or &DED_GL_EXPENSE <> $DED_GL_EXPENSE_OLD
     do Format-DateTime(&DED_EFFDT, $out, {DEFDATE}, '', '')
     print &A.DEDCD (+1,#1A,#2A)
     Print &A.PLAN_TYPE (0, #1B, #2B) 
     print &DED_SETID (0, #1C, #2C)
     print $out (0, #1D, #2D)
     print &DED_GL_EXPENSE (0,#1E, #2E)
     print &DED_ACCOUNT (0, #1F, #2F) 
     print &DED_DEPTID (0, #1G , #2G)
     print &DED_FUND_CODE (0, #1H, #2H) 
     Print &DED_LINE_DESCR (0, #1I, #2I) 
  END-IF
  LET $DEDCD_OLD  = &A.DEDCD
  LET $PLAN_TYPE_OLD = &A.PLAN_TYPE
  LET $DED_SETID_OLD = &DED_SETID
  LET $DED_GL_EXPENSE_OLD = &DED_GL_EXPENSE
  
FROM PS_DEDUCTION_CLASS A
, PS_CHART_KEYS_HR B
WHERE B.CHART_KEY = A.GL_EXPENSE
AND B.ACCOUNT_TYPE = 'X'
AND A.DED_CLASS IN ('L', 'N', 'P', 'T')
ORDER BY A.DEDCD, A.PLAN_TYPE, B.SETID, A.GL_EXPENSE,  A.EFFDT

END-SELECT

END-PROCEDURE

!********************************************************************
!  Get-US-Company-Tax Get Companies for US Taxes                    *
!********************************************************************


BEGIN-PROCEDURE Get-US-Company-Tax

Let #1A = 1 
Let #2A = 7
Let #1B = 9
Let #2B = 10
Let #1C = 21 
Let #2C = 5 
Let #1D = 28 
Let #2D = 10 
Let #1E = 40
Let #2E = 30 
Let #1F = 72
Let #2F = 10 
Let #1G = 85
Let #2G = 10 
Let #1H = 97 
Let #2H = 5 
Let #1I = 103
Let #2I = 29
Let #1J = 102
Let #2J = 0
Let $PUPYI02_group1 = 'Company'
Let $PUPYI02_group2 = 'Tax Type'
Let $PUPYI02_group3 = 'Setid'
Let $PUPYI02_group4 = 'Efft Date'
Let $PUPYI02_group5 = 'ChartKey Listing'
Let $PUPYI02_group6 = 'Account'
Let $PUPYI02_group7 = 'Department'
Let $PUPYI02_group8 = 'Fund'
Let $PUPYI02_group9 = 'Line Description'
Let $PUPYI02_group10 = ''
Let $PUPYI02_title = 'US Tax Expense Accounts'

  Let $TaxType = 'FOR'
  do Get-US-Tax-Accounts
  Let $TaxType = 'FMR'
  do Get-US-Tax-Accounts
  Let $TaxType = 'FUT'
  do Get-US-Tax-Accounts
  Let $TaxType = 'SUT'
  do Get-US-Tax-Accounts
  Let $TaxType = 'SDR'
  do Get-US-Tax-Accounts
  Let $TaxType = 'VDR'
  do Get-US-Tax-Accounts
  Let $TaxType = 'LWR'
  do Get-US-Tax-Accounts


END-PROCEDURE

!********************************************************************
!  Get-US-Company-Tax Get Accounts for US Company Taxes             *
!********************************************************************


BEGIN-PROCEDURE Get-US-Tax-Accounts
  

Let $Where_cl  = ' '
 Let $TableName = 'COMPANY_TBL'
Evaluate $TaxType
  When = 'FOR'
    Let $Where_cl = 'AND B.GL_FICA_EXP_OASDI <> '''|| ' ' || ''' AND B.GL_FICA_EXP_OASDI = A.CHART_KEY '
    Let $descr = 'FICA OASDI'
    break
  When = 'FMR'
     Let $Where_cl = 'AND B.GL_FICA_EXP_MED <> ''' || ' ' ||''' AND B.GL_FICA_EXP_MED = A.CHART_KEY ' 
     Let $descr = 'FICA Med'
     break
  When = 'FUT'
      Let $Where_cl = 'AND B.GL_FUT_EXPENSE <> '''|| ' ' || ''' AND B.GL_FUT_EXPENSE = A.CHART_KEY '
      Let $descr = 'FUT'
      break
  When = 'SUT'
    Let  $Where_cl = 'AND B.GL_SUT_EXPENSE <> ''' || ' ' ||''' AND B.GL_SUT_EXPENSE = A.CHART_KEY '
    Let $descr = 'SUT'
      break
  When = 'SDR'
     Let $Where_cl = 'AND B.GL_SDI_EXPENSE <> ''' || ' ' ||'''  AND B.GL_SDI_EXPENSE = A.CHART_KEY '
     Let $descr = 'SDI'
      break
  When = 'VDR' 
     Let $Where_cl = 'AND B.GL_VDI_EXPENSE <> ''' || ' ' ||''' AND B.GL_VDI_EXPENSE = A.CHART_KEY '
     Let $descr = 'VDI'
      break
  When = 'LWR'
     Let  $Where_cl = 'AND B.GL_LCL_EXP <> '''|| ' ' || ''' AND B.GL_LCL_EXP = A.CHART_KEY '
     Let $descr = 'LWR'
      break
  When-other
      break
  End-Evaluate 


BEGIN-SELECT ON-ERROR=SQL-Error
B.COMPANY      &UTAX_COMP
A.SETID        &UTAX_SETID
B.EFFDT        &UTAX_EFFDT
A.CHART_KEY    &UTAX_CHART_KEY
A.ACCOUNT      &UTAX_ACCOUNT
A.DEPTID       &UTAX_DEPTID
A.FUND_CODE    &UTAX_FUND_CODE
A.LINE_DESCR   &UTAX_LINE_DESCR
 If &UTAX_COMP <> $UTAX_COMP_OLD or &UTAX_SETID <> $UTAX_SETID_OLD or $TaxType <> $TaxType_old or &UTAX_CHART_KEY <> $UTAX_CHART_KEY_OLD
   print &UTAX_COMP (+1, #1A, #2A) 
   print $descr (0, #1B, #2B)
   print &UTAX_SETID (0, #1C, #2C)
   do Format-DateTime(&UTAX_EFFDT, $out, {DEFDATE}, '', '')
   print $out (0, #1D, #2D) 
   print &UTAX_CHART_KEY (0, #1E, #2E)
   print &UTAX_ACCOUNT (0, #1F, #2F)
   print &UTAX_DEPTID (0, #1G, #2G)
   print &UTAX_FUND_CODE (0, #1H, #2H)
   Print &UTAX_LINE_DESCR (0, #1I, #2I)
 end-if 
 let $UTAX_COMP_OLD = &UTAX_COMP
 Let $UTAX_SETID_OLD = &UTAX_SETID
 Let $TaxType_old = $TaxType
 Let $UTAX_CHART_KEY_OLD = &UTAX_CHART_KEY
FROM PS_COMPANY_TBL_GL B 
, PS_CHART_KEYS_HR A 
 WHERE A.ACCOUNT_TYPE = 'X'
   [$Where_cl]
 ORDER BY B.COMPANY, A.SETID , A.CHART_KEY
  END-SELECT

END-PROCEDURE

 
!********************************************************************
!  Get-CAN-Tax-Account Get Accounts for Company CAN Taxes           *
!********************************************************************

BEGIN-PROCEDURE Get-CAN-Tax-Account
Let #1A = 1 
Let #2A = 7
Let #1B = 9
Let #2B = 4
Let #1C = 15 
Let #2C = 9 
Let #1D = 26 
Let #2D = 5 
Let #1E = 33
Let #2E = 10 
Let #1F = 45
Let #2F = 30 
Let #1G = 76
Let #2G = 10 
Let #1H = 87 
Let #2H = 10 
Let #1I = 98
Let #2I = 5
Let #1J = 104
Let #2J = 28
Let $PUPYI02_group1 = 'Company'
Let $PUPYI02_group2 = 'Plan'
Let $PUPYI02_group3 = 'Tax Class'
Let $PUPYI02_group4 = 'Setid'
Let $PUPYI02_group5 = 'Efft Date'
Let $PUPYI02_group6 = 'ChartKey Listing'
Let $PUPYI02_group7 = 'Account'
Let $PUPYI02_group8 = 'Department'
Let $PUPYI02_group9 = 'Fund'
Let $PUPYI02_group10 = 'Line Description'
Let $PUPYI02_title = 'Canadian Tax Expense Accounts'

BEGIN-SELECT 
A.COMPANY   &CTAX_COMPANY
A.WAGE_LOSS_PLAN &CTAX_WAGE_LOSS_PLAN
A.TAX_CLASS_CAN  &CTAX_TAX_CLASS_CAN
B.SETID   &CTAX_SETID
A.EFFDT   &CTAX_EFFDT
A.GL_NBR  &CTAX_GL_NBR
B.ACCOUNT  &CTAX_ACCOUNT
B.DEPTID  &CTAX_DEPTID
B.FUND_CODE  &CTAX_FUND_CODE
B.LINE_DESCR  &CTAX_LINE_DESCR
  If &CTAX_COMPANY <> $CTAX_COMPANY_OLD 
    OR &CTAX_SETID <> $CTAX_SETID_OLD
      OR &CTAX_WAGE_LOSS_PLAN <> $CTAX_WAGE_LOSS_PLAN_OLD
         OR &CTAX_TAX_CLASS_CAN <> $CTAX_TAX_CLASS_CAN_OLD
            OR &CTAX_GL_NBR <> $CTAX_GL_NBR_OLD
            print &CTAX_COMPANY (+1, #1A, #2A)
            print &CTAX_WAGE_LOSS_PLAN (0, #1B, #2B) 
            print &CTAX_TAX_CLASS_CAN  (0, #1C, #2C)
            print &CTAX_SETID (0, #1D, #2D)
            do Format-DateTime(&CTAX_EFFDT, $out, {DEFDATE}, '', '')
            print $out (0, #1E, #2E)
            print &CTAX_GL_NBR (0, #1F, #2F)
            print &CTAX_ACCOUNT (0, #1G, #2G)
            print &CTAX_DEPTID (0, #1H, #2H)
            print &CTAX_FUND_CODE (0, #1I, #2I)
            Print &CTAX_LINE_DESCR (0, #1J, #2J)
  END-IF
  Let $CTAX_COMPANY_OLD  = &CTAX_COMPANY
  Let $CTAX_SETID_OLD = &CTAX_SETID 
  Let $CTAX_WAGE_LOSS_PLAN_OLD = &CTAX_WAGE_LOSS_PLAN
  Let $CTAX_TAX_CLASS_CAN_OLD = &CTAX_TAX_CLASS_CAN 
  Let $CTAX_GL_NBR_OLD = &CTAX_GL_NBR 
FROM  PS_WGLS_EXP_GL_ACC A
,PS_CHART_KEYS_HR B
WHERE A.GL_NBR = B.CHART_KEY
ORDER BY A.COMPANY, A.WAGE_LOSS_PLAN , A.TAX_CLASS_CAN ,B.SETID , A.GL_NBR, A.EFFDT
END-SELECT 

END-PROCEDURE


#include 'reset.sqc'     !Reset printer procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'stdapi.sqc'    !Update Process API
#include 'sqrtrans.sqc'  !Translate SQR strings to given language
#include 'getrplng.sqc'  !Get the report language
#include 'readxlat.sqc'  !Read-Translate-Table procedure
