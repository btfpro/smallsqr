!***********************************************************************
!  HRLAY003:  Seniority Report                                         *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:13:30:07                                 *
!       $Release:  HR9                                                 *
!      $Revision:  101                                                 *
!***********************************************************************
! Description:                                                         *
!***********************************************************************

#include 'setenv.sqc'   !Set environment


!***********************************************************************
!-----------------Seup Section-----------------------------------------*
!Description: This section sets the Page Size and Font Size            *
!***********************************************************************
Begin-Setup
#include 'setupdb.sqc'

          page-size  70 240
          DECLARE PRINTER
          type          = HPLASERJET
          orientation   = LANDSCAPE
          lines-inch    = 8
          chars-inch    = 18.6
          top-margin    = 0.30
          left-margin   = 0.20
          font          = 5
          point-size    = 7
          lines-inch    = 8
 
End-Setup

!***********************************************************************
!-----------------Heading Section--------------------------------------*
!Description: This section Prints the Header of this Report            *
!***********************************************************************
Begin-Heading 1

    print $Reportname           (1,1)
    print $Hrsenioritylist      (1,13)
    print $Peoplesoft           (1,63) Center
    print $Pageno               (1,220) 
    PAGE-NUMBER                 (1,229) '  '
    print $Hrseniorityreport    (2,106) 
    print $RunDate              (2,220)
    print $currentdate          ()  
    print $RunTime              (3,220)
    print $current-date         () edit 'HH:MI:SS'
    
End-Heading

!***********************************************************************
!-----------------Program Section--------------------------------------*
!Description:This is the main Program section controls the Program Flow*
!***********************************************************************
Begin-Program

    do STDAPI-INIT
    do Init-DateTime
    do Get-Current-DateTime
    !do Format-DateTime ($AsOfToday, $currentdate, {DEFDATE},'','')
    do Find-Date-Format
             evaluate $DT_FMT
               when = 'M'
                    do Format-DateTime($AsOfToday,$currentdate,{DEFMDY},'','')
                    break
               when = 'D'
                    do Format-DateTime($AsOfToday,$$currentdate,{DEFDMY},'','')
                    break
               when-Other
                    do Format-DateTime($AsOfToday,$currentdate,{DEFYMD},'','')
                    break
          end-evaluate
    do Var-Init
    do Get-RP-Lbl
    do Get-RC-Parm
    do Dynamic-Query 
    do ReportData
    do GRP-TOT
    do STDAPI-TERM
    
End-Program


!***********************************************************************
!-----------------Find-Date-Format-------------------------------------*
!Description: 
!***********************************************************************
begin-procedure Find-Date-Format

let $REC_FOUND = 'N'
begin-SELECT
A.USER_OPTION_VALUE
  let $REC_FOUND = 'Y'
FROM PSUSERPRSNLOPTN A

WHERE A.OPRID = $prcs_oprid
  AND A.USEROPTN = 'DFRMT'
end-SELECT

IF $REC_FOUND = 'N'
  let $DT_FMT = 'M'
ELSE
  LET $DT_FMT = &A.USER_OPTION_VALUE
  LET $DT_FMT = RTRIM($DT_FMT,' ')
END-If

end-procedure !Find-Date-Format


!***********************************************************************
!-----------------Procedure: Header-SNR -------------------------------*
!Description: This Procedure Prints the Header of this Report          *
!***********************************************************************
Begin-Procedure Header-SNR

print $Asofdate            (4,1)
!do Format-DateTime ($Date, $Date2, {DEFDATE},'','')
evaluate $DT_FMT
               when = 'M'
                    do Format-DateTime($Date,$Date2,{DEFMDY},'','')
                    break
               when = 'D'
                    do Format-DateTime($Date,$Date2,{DEFDMY},'','')
                    break
               when-Other
                    do Format-DateTime($Date,$Date2,{DEFYMD},'','')
                    break
          end-evaluate
print $Date2                (,18) 
print $Laboragreement      (+1,1)
print $LbrAgreement        (,18)

if Rtrim($LbragrDesc,' ') != ''
print $LbragrDesc          (,30)
end-if

print $Senioritydateid     (+1,1)
print $Snrid               (,18)

if Rtrim($Snrdescr,' ') != ''
print $Snrdescr            (,30)
end-if

print $Tiebreakerid        (+1,1)
do TIE-BRK
print '              '     (+1,1)

if Rtrim($Dept,' ') != ''
print $Department          (+1,1)
print $Dept                (,11)
print $DeptDesc            (,25)
end-if


if Rtrim($Loc,' ') != ''
print $Location_Lbl        (+1,1)
print $Loc                 (,11)
end-if
if Rtrim($Description,' ') != ''
print $Description         (,25)
end-if

if Rtrim($FacilityID,' ') != ''
print $Facility_Lbl        (+1,1)
print $FacilityID          (,11)
end-if
if Rtrim($FacilityDesc,' ') != ''
print $FacilityDesc        (,25) 
end-if

if Rtrim($Jobcode,' ') != ''
print $Jobcode_Lbl         (+1,1)
print $Jobcode             (,11)
end-if
if Rtrim($JobDesc,' ') != ''
print $JobDesc             (,25)
end-if

if Rtrim($Job_Family,' ') != ''
print $Jobfamily_Lbl       (+1,1)
print $Job_Family          (,11)
end-if
if Rtrim($JobFamly,' ') != ''
print $JobFamly            (,25)
end-if

End-Procedure !Header-SNR

!***********************************************************************
!-----------------Procedure: Report-Details----------------------------*
!Description: This Procedure prints the column headings of the Report  *
!             Details                                                  *
!***********************************************************************

Begin-Procedure Report-Details

print $EmployeeID       (+3,1)
print $Employee         (,14)
print $Emplclass        (,64)
print $Emplclass        (,74)
print $Jobeffdt         (,83)
print $Jobcode1         (,98)
print $Hourlypayrate    (,108)
print $Jobfacility      (,131)
print $Unioncode        (,144)
print $Jobfamily1       (,153)
print $Locationcode     (,164)
print $Department1      (,179)
print $Shift            (,193)
print $Fte              (,200)
print $Stdhours         (,207)
print $Regtemp          (,214)
print $Fullpart         (,223)
print $Snrdescr         (,228)
print $Recnumsat        (,64)
print $Emplclass1       (,74)
print $Jobeffdt1        (,83)
print $Hourlypayrate1   (,108) 
print $Unioncode1       (,144)
print $Jobfamily2       (,153)
print $Locationcode1    (,164)
print $Stdhours1        (,207)
print $Regtemp1         (,214)
print $Part             (,223)

End-Procedure

!***********************************************************************
!-----------------Procedure:Get-RC-Parm--------------------------------*
!Description: This Procedure gets the Run Control Parameters           *
!***********************************************************************
Begin-Procedure Get-RC-Parm
!do Format-DateTime ($AsOfToday, $AsOfToday1, {DEFDATE},'','')
evaluate $DT_FMT
          when = 'M'
        do Format-DateTime($AsOfToday,$AsOfToday1,{DEFMDY},'','')
          break
          when = 'D'
        do Format-DateTime($AsOfToday,$AsOfToday1,{DEFDMY},'','')
          break
          when-Other
        do Format-DateTime($AsOfToday,$AsOfToday1,{DEFYMD},'','')
          break
      end-evaluate
!*****Selecting SetID, Labor Agreement and Seniority Date ID from Runcontrol Record *****
Begin-Select
A.OPRID
A.RUN_CNTL_ID
A.AS_OF_DATE
A.SETID
A.LABOR_AGREEMENT
A.SENIORITY_DATE_ID

from PS_HR_RUNCNTL_LY3 A

where   A.OPRID = $prcs_oprid
    AND A.RUN_CNTL_ID = $prcs_run_cntl_id 
End-Select



!******* Selecting Labor Agreement Description from Labor Agreement Table***************
   
!-------Description is 1st fetched from related language table. If the Login language = Base Language then
!-------the description would not be present in the Related Lang table, in which case it should be 
!-------fetched from the Base table
BEGIN-SELECT
LAL.DESCR
  LET $LBRAGR = &LAL.DESCR
FROM PS_HR_LBR_AGR_LANG LAL
WHERE LABOR_AGREEMENT = &A.LABOR_AGREEMENT
AND SETID = &A.SETID
AND EFFDT = (SELECT MAX(EFFDT)
              FROM PS_HR_LBR_AGR_LANG
              WHERE LABOR_AGREEMENT = &A.LABOR_AGREEMENT
              AND SETID = &A.SETID
              and LANGUAGE_CD = $curr_language_cd
              AND EFFDT <= $AsOfToday)!$current-date)
and LANGUAGE_CD = $curr_language_cd
END-SELECT
    
IF rtrim($LBRAGR,' ') = ''
BEGIN-SELECT
LA.DESCR
 LET $LBRAGR = &LA.DESCR
FROM PS_HR_LABOR_AGRMNT LA
WHERE LABOR_AGREEMENT = &A.LABOR_AGREEMENT
AND SETID = &A.SETID
AND EFFDT = (SELECT MAX(EFFDT)
             FROM PS_HR_LABOR_AGRMNT
             WHERE LABOR_AGREEMENT = &A.LABOR_AGREEMENT
             AND SETID = &A.SETID
             AND EFFDT <= $AsOfToday)!$current-date)
AND EFF_STATUS = 'A'
END-SELECT
END-IF




!******* Selecting Department ID and Description****************************************    
Begin-Select
A.DEPARTMENT
A.SETID_DEPT
from    PS_HR_RUNCNTL_LY3 A   
where   A.OPRID = $prcs_oprid AND
        A.RUN_CNTL_ID = $prcs_run_cntl_id  
End-Select

#define DEPT_TBL
BEGIN-SELECT
dept.DESCR
dept.EFFDT
 let $DEPT_DESC = &dept.DESCR
FROM PS_DEPT_TBL dept
WHERE DEPTID = &A.DEPARTMENT
AND SETID = &A.SETID_DEPT
AND EFFDT = (SELECT MAX(EFFDT)
              FROM PS_DEPT_TBL
              WHERE DEPTID = &A.DEPARTMENT
              AND SETID = &A.SETID_DEPT
              AND EFFDT <= $AsOfToday)!$current-date)
AND EFF_STATUS = 'A'
END-SELECT

Do Get_Related_DEPT_TBL(&A.DEPARTMENT,&dept.EFFDT,&A.SETID_DEPT)

if rtrim($DEPT_TBL-DESCR,' ') <> ''
let $DEPT_DESC = $DEPT_TBL-DESCR
end-if



!******** Selecting Seniority Date ID Description from Seniority Date Table**************
BEGIN-SELECT
SDL.DESCR
 LET $SEN_DESCR = &SDL.DESCR
FROM PS_HR_SNR_DATE_LNG SDL
WHERE SENIORITY_DATE_ID = &A.SENIORITY_DATE_ID
and EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_HR_SNR_DATE_LNG
                    WHERE SENIORITY_DATE_ID = &A.SENIORITY_DATE_ID
                    and LANGUAGE_CD = $curr_language_cd
                    AND EFFDT <= $AsOfToday)
and LANGUAGE_CD = $curr_language_cd
END-SELECT

IF RTRIM($SEN_DESCR, ' ') = ''
BEGIN-SELECT
SD.DESCR
 LET $SEN_DESCR = &SD.DESCR
FROM PS_HR_SNR_DATE_TBL SD
WHERE SD.SENIORITY_DATE_ID = &A.SENIORITY_DATE_ID
AND SD.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_HR_SNR_DATE_TBL
                    WHERE SENIORITY_DATE_ID = &A.SENIORITY_DATE_ID
                    AND EFFDT <= $AsOfToday)
AND SD.EFF_STATUS = 'A'          
END-SELECT
END-IF



!*****************************Selecting Location from Runcontrol Record*******************
Begin-Select
A.LOCATION 
A.SETID_LOCATION
from PS_HR_RUNCNTL_LY3 A
     
where   A.OPRID = $prcs_oprid
        AND A.RUN_CNTL_ID = $prcs_run_cntl_id
End-Select

!*****************************Selecting Location description from Location Table**********
!-------Description is 1st fetched from related language table. We make use of the rellang.sqc
!-------which has appropriate procedure to fetch the description from the Related Lang table...
!-------If the descr is not present in the Related Lang table then it should be fetched from the Base table
#define LOCATION_TBL
BEGIN-SELECT
LOC.DESCR
LOC.EFFDT
 let $LOC_DESC = &LOC.DESCR
FROM PS_LOCATION_TBL LOC
WHERE LOCATION = &A.LOCATION
AND SETID = &A.SETID_LOCATION
AND EFFDT = (SELECT MAX(EFFDT)
              FROM PS_LOCATION_TBL
              WHERE LOCATION = &A.LOCATION
              AND SETID = &A.SETID_LOCATION
              AND EFFDT <= $AsOfToday)!$current-date)
AND EFF_STATUS = 'A'
END-SELECT


Do Get_Related_LOCATION_TBL(&LOC.EFFDT,&A.LOCATION,&A.SETID_LOCATION)


if RTRIM($LOCATION_TBL-DESCR,' ') <> ''
let $LOC_DESC = $LOCATION_TBL-DESCR
end-if



!**********Selecting Job Code from Runcontrol Record *************************************
Begin-Select
A.JOBCODE
A.SETID_JOBCODE
from PS_HR_RUNCNTL_LY3 A
where   A.OPRID = $prcs_oprid AND
        A.RUN_CNTL_ID = $prcs_run_cntl_id 
End-Select

!**********Selecting Job Code Description from Job Code Table*****************************
!-------Description is 1st fetched from related language table. We make use of the rellang.sqc
!-------which has appropriate procedure to fetch the description from the Related Lang table...
!-------If the descr is not present in the Related Lang table then it should be fetched from the Base table
#define JOBCODE_TBL
BEGIN-SELECT
JOB.DESCR
JOB.EFFDT
 let $JOB_DESC = &JOB.DESCR
FROM PS_JOBCODE_TBL JOB
WHERE JOBCODE = &A.JOBCODE
AND SETID = &A.SETID_JOBCODE
AND EFFDT = (SELECT MAX(EFFDT)
              FROM PS_JOBCODE_TBL
              WHERE JOBCODE = &A.JOBCODE
              AND SETID = &A.SETID_JOBCODE
              AND EFFDT <= $AsOfToday)!$current-date)
AND EFF_STATUS = 'A'
END-SELECT

Do Get_Related_JOBCODE_TBL(&JOB.EFFDT,&A.JOBCODE,&A.SETID_JOBCODE)

if RTRIM($JOBCODE_TBL-DESCR,' ') <> ''
let $JOB_DESC = $JOBCODE_TBL-DESCR
end-if



!**********Selecting Job Family from Job Family Table*************************************
Begin-Select
A.JOB_FAMILY
from PS_HR_RUNCNTL_LY3 A  
where   A.OPRID = $prcs_oprid
        AND A.RUN_CNTL_ID = $prcs_run_cntl_id      
End-Select

!*********Selecting Job Family Description from Job Family Table**************************
#define JOB_FAMILY_TBL
Begin-Select
F.DESCR
F.EFFDT
 LET $JOB_FAMILY_DESCR = &F.DESCR

from      PS_JOB_FAMILY_TBL F
     
where   EFFDT = (SELECT MAX(B.EFFDT) FROM PS_JOB_FAMILY_TBL B WHERE B.JOB_FAMILY = &A.JOB_FAMILY
        AND B.EFFDT <= $AsOfToday AND B.EFF_STATUS = 'A')AND F.JOB_FAMILY = &A.JOB_FAMILY
End-Select


DO Get_Related_JOB_FAMILY_TBL(&F.EFFDT,&A.JOB_FAMILY)

IF $JOB_FAMILY_TBL-DESCR <> ''
 LET $JOB_FAMILY_DESCR = $JOB_FAMILY_TBL-DESCR
END-IF




!**********Selecting Labor Facility ID from Run Control Table ****************************
Begin-Select
A.LABOR_FACILITY_ID

from    PS_HR_RUNCNTL_LY3 A
 
where   A.OPRID = $prcs_oprid
        AND A.RUN_CNTL_ID = $prcs_run_cntl_id 
End-Select

!*********Selecting Labor Facility ID Description from Labor Facility Table***************
!-------Description is 1st fetched from related language table. If the Login language = Base Language then
!-------the description would not be present in the Related Lang table, in which case it should be 
!-------fetched from the Base table
BEGIN-SELECT
FACIDL.DESCR
 let $FACID_DESC = &FACIDL.DESCR
FROM PS_HR_LBR_FAC_LNG FACIDL
WHERE LABOR_FACILITY_ID = &A.LABOR_FACILITY_ID
AND EFFDT = (SELECT MAX(EFFDT)
              FROM PS_HR_LBR_FAC_LNG
              WHERE LABOR_FACILITY_ID = &A.LABOR_FACILITY_ID
              and LANGUAGE_CD = $curr_language_cd
              AND EFFDT <= $AsOfToday)!$current-date)
and LANGUAGE_CD = $curr_language_cd
END-SELECT

IF rtrim($FACID_DESC,' ') = ''
BEGIN-SELECT
FACID.DESCR
 let $FACID_DESC = &FACID.DESCR
FROM PS_HR_LBR_FAC_TBL FACID
WHERE LABOR_FACILITY_ID = &A.LABOR_FACILITY_ID
AND EFFDT = (SELECT MAX(EFFDT)
              FROM PS_HR_LBR_FAC_TBL
              WHERE LABOR_FACILITY_ID = &A.LABOR_FACILITY_ID
              AND EFFDT <= $AsOfToday)!$current-date)
AND EFF_STATUS = 'A'
END-SELECT
END-IF


LET $Setid = &A.SETID
LET $Setid = rtrim($Setid,' ')

LET $LbrAgreement = &A.LABOR_AGREEMENT
LET $LbrAgreement = rtrim($LbrAgreement,' ')
LET $LbragrDesc   = $LBRAGR
    
LET $Dept = &A.DEPARTMENT
LET $Dept = rtrim($Dept,' ')
LET $DeptDesc = $DEPT_DESC
LET $DeptDesc = rtrim($DeptDesc,' ')

LET $Loc = &A.LOCATION
LET $Loc = rtrim($Loc,' ')

LET $Jobcode = &A.JOBCODE
LET $Jobcode = rtrim($Jobcode,' ')

LET $Job_Family = &A.JOB_FAMILY
LET $Job_Family = rtrim($Job_Family,' ')

LET $Date = &A.AS_OF_DATE
LET $Date = rtrim($Date,' ')

LET $FacilityID = &A.LABOR_FACILITY_ID
LET $FacilityID = rtrim($FacilityID,' ')
LET $Description = $LOC_DESC

LET $JobDesc = $JOB_DESC
LET $JobFamly = $JOB_FAMILY_DESCR
LET $FacilityDesc = $FACID_DESC

LET $Snrid = &A.SENIORITY_DATE_ID
LET $Snrid = rtrim($Snrid,' ')
LET $Snrdescr = $SEN_DESCR
LET $Snrdescr = rtrim($Snrdescr,' ')

    UNSTRING  $Date BY ' ' INTO $DATE1 $DATE2    
       
    
do Header-SNR

End-procedure !Get-RC-Parm

!***********************************************************************
!-----------------Procedure: TIE-BRK          -------------------------*
!Description: This Procedure gets the Tiebreaker Details.              *
!***********************************************************************
Begin-Procedure TIE-BRK
  !do Format-DateTime ($AsOfToday, $AsOfToday1, {DEFDATE},'','')
  evaluate $DT_FMT
            when = 'M'
          do Format-DateTime($AsOfToday,$AsOfToday1,{DEFMDY},'','')
            break
            when = 'D'
          do Format-DateTime($AsOfToday,$AsOfToday1,{DEFDMY},'','')
            break
            when-Other
          do Format-DateTime($AsOfToday,$AsOfToday1,{DEFYMD},'','')
            break
      end-evaluate
Begin-Select 

A.TIEBREAKER_ID              (,18)   
B.DESCR                      !(,30)  
B.EFFDT
 Do Tiebreaker_desc
 print $tie_descr (,30)
B.FIELDNAME
B.RECNAME
A.LBR_DESC_FLG
A.SEQ_NUM

 

    print '      '  (+1,1)
    LET $FIELD1 = rtrim(&B.FIELDNAME,' ')
    LET $REC1   = rtrim(&B.RECNAME,' ')
    
    if &A.LBR_DESC_FLG = 'Y'
    LET $sort = ' DESC'
    else
    LET $sort = ''
    end-if
    
    
    LET #T1 = #T1 + 1
    LET #R = #R + 5
    LET $T = #T1  
    LET $P = #R
    
    unstring $T by '.' into $T2 
    unstring $P by '.' into $P2 
    
    
        
     IF ($REC1 <> 'JOB' AND $REC1 <> 'HR_EE_SNR_DATES' )
            LET $FROM1  = $FROM1 || ', PS_' || $REC1 || '  A' || $T2
            LET TIESELECT.TIE(#T1) = 'A' || $T2 || '.' || $FIELD1
                 
            LET $WHEREX = $WHEREX  || ' AND ' || 'A' || $T2 ||  '.' || 'EMPLID' || ' = ' || 'S' || '.' || 'EMPLID' 
            LET $WHERE2 = $WHERE2 || ', ' || 'A' || $T2 || '.' || $FIELD1 || $sort
            
     End-If 
            
     If ($REC1 = 'JOB')
            LET TIESELECT.TIE(#T1) = 'J' || '.' || $FIELD1
            LET $WHERE2 = $WHERE2 || ', ' || 'J.' || $FIELD1 || $sort
     End-If
     
     If ($REC1 = 'HR_EE_SNR_DATES')
            LET TIESELECT.TIE(#T1) = 'S' || '.' || $FIELD1
            LET $WHERE2 = $WHERE2 || ', ' || 'S.' || $FIELD1 || $sort
     End-If
     
                        
from    PS_HR_RUNCNTL_LY3B A,
        PS_HR_TIEBREAK_TBL B

where   A.OPRID = $prcs_oprid
        AND A.RUN_CNTL_ID = $prcs_run_cntl_id AND B.TIEBREAKER_ID = A.TIEBREAKER_ID
        AND B.EFFDT = (select MAX(EFFDT) FROM PS_HR_TIEBREAK_TBL WHERE TIEBREAKER_ID = B.TIEBREAKER_ID AND
                       EFFDT <= $AsOfToday )
        AND EFF_STATUS = 'A' ORDER BY A.SEQ_NUM
            
End-Select  
     
End-Procedure !TIE-BRK



!****************************************************************************************
! Procedure: Tiebreaker_desc                                                            !
! Description: Procedure to fetch the Tiebreaker desc                                   !
!***************************************************************************************!
Begin-Procedure Tiebreaker_desc
!Fetch Tie breaker description from Related Language table.
BEGIN-SELECT
TIE_HDL.DESCR
 let $tie_descr = &TIE_HDL.DESCR
FROM PS_HR_TIEBREAK_LNG TIE_HDL
WHERE TIEBREAKER_ID = &A.TIEBREAKER_ID
AND EFFDT = &B.EFFDT
AND LANGUAGE_CD = $curr_language_cd
END-SELECT

if rtrim($tie_descr, ' ') = ''
 let $tie_descr = &B.DESCR
end-if 
End-procedure !Tiebreaker_desc




!***********************************************************************
!-----------------Procedure EMPL-NAME  --------------------------------*
!Description: This Procedure gets the Employee Name from PERSON_NAME   *
!             Table.                                                   *
!***********************************************************************
Begin-Procedure EMPL-NAME

Begin-Select

N.NAME                 (,14) 

FROM PS_PERSON_NAME N

WHERE N.EMPLID = &S.EMPLID

End-Select

End-Procedure !EMPL-NAME

!***********************************************************************
!-----------------Procedure JOB-FAMILY --------------------------------*
!Description: This Procedure gets the JOB_FAMILY from JOBCODE_TBL      *
!             Table.                                                   *
!***********************************************************************
Begin-Procedure JOB-FAMILY

Begin-Select

M.JOB_FAMILY                 (,153) 

FROM PS_JOBCODE_TBL M

WHERE M.JOBCODE = &J.JOBCODE

End-Select

End-Procedure !EMPL-NAME

!***********************************************************************
!-----------------Procedure Report Data--------------------------------*
!Description: This Procedure fetches the data from different tables    *
!             under the Report details based on the Selection criteria *
!             of the Run Control Page                                  *
!***********************************************************************
Begin-Procedure ReportData
DO Report-Details
 !Getting the values from the Teiselect array.
  let $tie1 = tieselect.tie(1)
  let $tie2 = tieselect.tie(2)
  let $tie3 = tieselect.tie(3)
  let $tie4 = tieselect.tie(4)
  let $tie5 = tieselect.tie(5)
  let $tie6 = tieselect.tie(6)
  let $tie7 = tieselect.tie(7)
  let $tie8 = tieselect.tie(8)
  let $tie9 = tieselect.tie(9)
 let $tie10 = tieselect.tie(10)

Begin-Select

S.EMPLID                (+2,1) 
    DO EMPL-NAME
J.EMPL_RCD              (,64)
J.EMPL_STATUS           
J.EMPL_CLASS            (,74)
J.EFFDT        
        do Format-DateTime (&J.EFFDT, $JOBEFFDT, {DEFDATE},'','')
        evaluate $DT_FMT
                    when = 'M'
                  do Format-DateTime(&J.EFFDT,$JOBEFFDT,{DEFMDY},'','')
                    break
                    when = 'D'
                  do Format-DateTime(&J.EFFDT,$JOBEFFDT,{DEFDMY},'','')
                    break
                    when-Other
                  do Format-DateTime(&J.EFFDT,$JOBEFFDT,{DEFYMD},'','')
                    break
      end-evaluate
        print $JOBEFFDT    (,83)
J.JOBCODE               (,98)
J.HOURLY_RT             (,108)
J.LABOR_FACILITY_ID     (,131)
J.UNION_CD              (,144)
    DO JOB-FAMILY
J.LOCATION              (,164)
J.DEPTID                (,179)
J.SHIFT                 (,193)
J.FTE                   (,200)
J.STD_HOURS             (,207)
J.REG_TEMP              (,214)
J.FULL_PART_TIME        (,223)
S.LABOR_SENIORITY_DT    
        do Format-DateTime (&S.LABOR_SENIORITY_DT, $SNRDT, {DEFDATE},'','')
        evaluate $DT_FMT
            when = 'M'
                       do Format-DateTime(&S.LABOR_SENIORITY_DT,$SNRDT,{DEFMDY},'','')
                         break
                         when = 'D'
                       do Format-DateTime(&S.LABOR_SENIORITY_DT,$SNRDT,{DEFDMY},'','')
                         break
                         when-Other
                       do Format-DateTime(&S.LABOR_SENIORITY_DT,$SNRDT,{DEFYMD},'','')
                         break
      end-evaluate
        
        print $SNRDT    (,228)
J.HIRE_DT
[$tie1]  &tie1=CHAR
[$tie2]  &tie2=CHAR
[$tie3]  &tie3=CHAR
[$tie4]  &tie4=CHAR
[$tie5]  &tie5=CHAR
[$tie6]  &tie6=CHAR
[$tie7]  &tie7=CHAR
[$tie8]  &tie8=CHAR
[$tie9]  &tie9=CHAR
[$tie10] &tie10=CHAR
    
    let #count = #count + 1
    If #current-line >= 69
    do Page-Break
    End-If

FROM    PS_HR_EE_SNR_DATES S,
        PS_JOB J

[$FROM1]
[$WHERE]
[$WHERE1]
[$WHERE2]

End-Select
      
    
End-Procedure

!***********************************************************************
!-----------------Procedure: Dynamic-Query ----------------------------*
!Description: This Procedure  gets the data dynamically based on       *
!             Run Control Page                                         *
!                                                                      *
!***********************************************************************
Begin-Procedure Dynamic-Query 

LET $WHERE = ' WHERE J.EMPLID = S.EMPLID AND J.EFFDT = S.EFFDT AND  
               J.EFFSEQ = S.EFFSEQ AND J.EMPL_RCD = S.EMPL_RCD' || 
               ' AND S.EFFDT = (SELECT MAX(Y.EFFDT) FROM PS_HR_EE_SNR_DATES Y WHERE Y.EMPLID = S.EMPLID  AND
               Y.EMPL_RCD = S.EMPL_RCD ' || ' AND  Y.SENIORITY_DATE_ID = S.SENIORITY_DATE_ID  
               AND Y.EFFSEQ = S.EFFSEQ AND  ' ||
               ' Y.LABOR_AGREEMENT = S.LABOR_AGREEMENT AND Y.EFFDT <= ''' || $AsOfToday || ''')'  || 
               ' AND S.EMPL_RCD = (SELECT MAX(W.EMPL_RCD) FROM PS_HR_EE_SNR_DATES W WHERE W.EMPLID = S.EMPLID AND ' ||
            ' W.SENIORITY_DATE_ID = S.SENIORITY_DATE_ID AND W.EFFSEQ = S.EFFSEQ AND   
            ' || ' W.LABOR_AGREEMENT = S.LABOR_AGREEMENT AND W.EFFDT <= ''' || $AsOfToday || ''')'  ||             
           
              ' AND S.EFFSEQ = (SELECT MAX(Z.EFFSEQ) FROM PS_HR_EE_SNR_DATES Z WHERE Z.EMPLID = S.EMPLID AND ' || 
            ' Z.EMPL_RCD = S.EMPL_RCD AND Z.SENIORITY_DATE_ID = S.SENIORITY_DATE_ID  AND '||
            ' Z.LABOR_AGREEMENT = S.LABOR_AGREEMENT AND Z.EFFDT <= ''' || $AsOfToday || ''')'  || $WHEREX 

            
                
!************************** Begin Resolution - 581032 ***************************                
!LET $WHERE = $WHERE || ' AND S.EFFDT <= ''' || $DATE1 || ''''
 LET $WHERE = $WHERE || ' AND S.EFFDT = ( SELECT MAX(S1.EFFDT) FROM PS_HR_EE_SNR_DATES S1 
                         WHERE S1.EMPLID = S.EMPLID AND S1.EMPL_RCD = S.EMPL_RCD AND S1.EFFSEQ = S.EFFSEQ 
                          AND S1.EFFDT <= ''' || $DATE1 || ''')'
!************************** End Resolution - 581032 *****************************

LET $WHERE = $WHERE || ' AND J.EMPL_STATUS = ''' || 'A' || ''''

LET $WHERE = $WHERE || ' AND J.LABOR_AGREEMENT = S.LABOR_AGREEMENT AND S.LABOR_AGREEMENT = ''' || $LbrAgreement || ''''

LET $WHERE = $WHERE || ' AND S.SENIORITY_DATE_ID = ''' || $Snrid || ''''


        
If RTRIM($Dept,' ') <> '' 
    Let $WHERE = $WHERE || ' AND J.DEPTID  = ''' || $Dept || ''''
END-IF
         
If RTRIM($Loc,' ') <> '' 
    Let $WHERE = $WHERE || ' AND J.LOCATION  = ''' || $Loc || ''''
END-IF

If RTRIM($FacilityID,' ') <> ''  
    Let $WHERE = $WHERE || ' AND J.LABOR_FACILITY_ID  = ''' || $FacilityID || ''''
END-IF

If RTRIM($Jobcode,' ') <> ''   
    Let $WHERE = $WHERE || ' AND J.JOBCODE  = ''' || $Jobcode || ''''
END-IF
    
If RTRIM($Job_Family,' ') <> '' 
    LET $WHERE = $WHERE || 'AND M.JOB_FAMILY  = ''' || $Job_Family || ''''
End-If

LET $WHERE1 = $WHERE1 || 'ORDER BY S.LABOR_SENIORITY_DT '
                       
End-Procedure   !Dynamic-Query 

!***********************************************************************
!-----------------Procedure: Group Total-------------------------------*
!Description: This Procedure prints the number Employee ID's Picked on *
!             to the Report.                                           *
!***********************************************************************
Begin-Procedure GRP-TOT

print   $Grouptotal          (+3,1)
print   #count               (,12) edit 999999

End-Procedure !GRP-TOT

!***********************************************************************
!-----------------Procedure: Page Break--------------------------------*
!Description: This Procedure finds the end of the Page and carry       *
!             forward to the next page after Header Section            *
!***********************************************************************
Begin-Procedure Page-Break

New-Page

do Report-Details

End-Procedure !Page-Break

!***********************************************************************
!-----------------Procedure: Var-Init  --------------------------------*
!Description: This Procedure Initializes the Variables required for the*
!             SQR.                                                     *
!***********************************************************************
Begin-Procedure Var-Init

    LET #count = 0
    LET #T1 = 0
    LET #R = 0
    create-array 
            name = tieselect 
            size = 30
           field = tie:char
        
End-Procedure !Var-Init

!***********************************************************************
!-----------------Procedure: Getting Report Labels---------------------*
!Description: This Procedure gets the Report labels from the Database. *
!***********************************************************************
Begin-Procedure Get-RP-Lbl

let $ReportID = 'HR_UHRLY'
do Init_Report_Translation($ReportID,$curr_language_cd) 
do Append_Report_Translation ($ReportID)
do Get_Field_Information ('HR_UHRLY','FACILITY',$Facility_Lbl,#DW1)
do Get_Field_Information ('HR_UHRLY','JOBCODE',$Jobcode_Lbl,#DW1)
do Get_Field_Information ('HR_UHRLY','LOCATION',$Location_Lbl,#DW1)
do Get_Field_Information ('HR_UHRLY','JOB_FAMILY',$Jobfamily_Lbl,#DW1)
do Get_Field_Information ('HR_UHRLY','ASOFDATE',$Asofdate,#DW1)
do Get_Field_Information ('HR_UHRLY','DEPARTMENT',$Department1,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPL',$Empl,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPLOYEE',$Employee,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPLOYEE_CLASS',$Emplclass,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPLOYEE_CLASS1',$Emplclass1,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPLOYEE_ID',$EmployeeID,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPLOYEE_STATUS',$Employeestat,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPLOYEE_STATUS1',$Employeestat1,#DW1)
do Get_Field_Information ('HR_UHRLY','FTE',$Fte,#DW1)
do Get_Field_Information ('HR_UHRLY','FULL_PART',$Fullpart,#DW1)
do Get_Field_Information ('HR_UHRLY','GROUP_TOTAL',$Grouptotal,#DW1)
do Get_Field_Information ('HR_UHRLY','HOURLY_PAYRATE',$Hourlypayrate,#DW1)
do Get_Field_Information ('HR_UHRLY','HOURLY_PAYRATE1',$Hourlypayrate1,#DW1)
do Get_Field_Information ('HR_UHRLY','HR_SENIORITY_LIST',$Hrsenioritylist,#DW1)
do Get_Field_Information ('HR_UHRLY','HR_SENIORITY_RPT',$Hrseniorityreport,#DW1)
do Get_Field_Information ('HR_UHRLY','JOBCODE1',$Jobcode1,#DW1)
do Get_Field_Information ('HR_UHRLY','JOBFAMILY',$Jobfamily1,#DW1)
do Get_Field_Information ('HR_UHRLY','JOBFAMILY1',$Jobfamily2,#DW1)
do Get_Field_Information ('HR_UHRLY','JOB_EFFDT',$Jobeffdt,#DW1)
do Get_Field_Information ('HR_UHRLY','JOB_EFFDT1',$Jobeffdt1,#DW1)
do Get_Field_Information ('HR_UHRLY','JOB_FACILITY',$Jobfacility,#DW1)
do Get_Field_Information ('HR_UHRLY','JOB_FAMILY',$Jobfamily,#DW1)
do Get_Field_Information ('HR_UHRLY','LABOR_AGREEMENT',$LaborAgreement,#DW1)
do Get_Field_Information ('HR_UHRLY','LOCATIONCODE',$Locationcode,#DW1)
do Get_Field_Information ('HR_UHRLY','LOCATIONCODE1',$Locationcode1,#DW1)
do Get_Field_Information ('HR_UHRLY','PAGE_NO',$Pageno,#DW1)
do Get_Field_Information ('HR_UHRLY','PART',$Part,#DW1)
do Get_Field_Information ('HR_UHRLY','PEOPLESOFT',$Peoplesoft,#DW1)
do Get_Field_Information ('HR_UHRLY','REC_NUM_SAT',$Recnumsat,#DW1)
do Get_Field_Information ('HR_UHRLY','REG_TEMP',$Regtemp,#DW1)
do Get_Field_Information ('HR_UHRLY','REG_TEMP1',$Regtemp1,#DW1)
do Get_Field_Information ('HR_UHRLY','REPORTNAME',$Reportname,#DW1)
do Get_Field_Information ('HR_UHRLY','RUN DATE',$Rundate,#DW1)
do Get_Field_Information ('HR_UHRLY','RUN_TIME',$Runtime,#DW1)
do Get_Field_Information ('HR_UHRLY','SENIORITY_DATE_ID',$Senioritydateid,#DW1)
!do Get_Field_Information ('HR_UHRLY','SENIORITY_DESC',$Senioritydesc,#DW1)
!do Get_Field_Information ('HR_UHRLY','SENIORITY_DESC1',$Senioritydesc1,#DW1)
do Get_Field_Information ('HR_UHRLY','SHIFT',$Shift,#DW1)
do Get_Field_Information ('HR_UHRLY','STD_HOURS',$Stdhours,#DW1)
do Get_Field_Information ('HR_UHRLY','STD_HOURS1',$Stdhours1,#DW1)
do Get_Field_Information ('HR_UHRLY','TIEBREAKERID',$Tiebreakerid,#DW1)
do Get_Field_Information ('HR_UHRLY','UNION_CODE',$Unioncode,#DW1)
do Get_Field_Information ('HR_UHRLY','UNION_CODE1',$Unioncode1,#DW1)
do Get_Field_Information ('HR_UHRLY','DEPT',$Department,#DW1)

End-Procedure !Get-RP-Lbl

!************************************************************************
!---------SQCs--------------------------------------------------------- *
!************************************************************************

#include 'stdapi.sqc'      !Routine to update run status
#include 'askcalyr.sqc'    !Ask Calendar Year input
#Include 'curdttim.sqc'    !Get-Current-DateTime procedure
#Include 'datetime.sqc'    !Routines for date and time formatting
#Include 'datemath.sqc'    !Routines for date and time calculations
#Include 'number.sqc'      !Routines to format numbers
#Include 'sqrtrans.sqc'    !Language Translation Routine

#include 'prcslng.sqc'   !Gives Language Code
#include 'rellang.sqc'   !Gives Description from Related Lang tables