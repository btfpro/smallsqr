!***********************************************************************
!  PER507:  Build Departmental Reporting Structure                     *
!***********************************************************************
!** THIS REPORT HAS 3 DIMENSIONAL ARRAY TO HANDLE 568,467 DEPARTMENTS **
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:06:51                                 
!       $Release:  HR9                                                 
!      $Revision:  102                                                 
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
#Include 'setup07.sqc'   !Printer and page-size initialization

begin-REPORT
  do Init-DateTime
  do Get-Current-DateTime
  do Stdapi-Init
  display 'Building Organization Structure for Departments'
  do Ask-As-Of-Date
  do Load-Orgcode-Symbols
  do Clear-Dept-Tbl
  do Mark-Reports-To
  do Update-Top-Level
  move 'N' to $end-level
  while $end-level = 'N'
    do Update-Sub-Level
  end-while
  do Commit-Transaction
  display 'Finished Building Organization Structure for Departments'
  do Stdapi-Term
end-REPORT


begin-PROCEDURE Clear-Dept-Tbl
begin-sql on-error=sql-error
  UPDATE PS_R_PER507
  SET ORGCODE_FLAG = ' ',
      ORGCODE      = ' '
end-SQL
end-PROCEDURE

begin-PROCEDURE Mark-Reports-To
!**********************************************************************
! For efficiency, mark those records which are "effective" on AsOfDate
!**********************************************************************
begin-SELECT
A.SETID,
A.DEPTID,
A.EFFDT
  do Set-Subordinate-Flag
FROM PS_R_PER507 A
WHERE A.REPORTS_TO_DEPT <> ' '
  AND A.EFFDT =
               (SELECT MAX(B.EFFDT)
                FROM PS_R_PER507 B
                WHERE B.DEPTID = A.DEPTID
                AND B.SETID = A.SETID
                AND B.EFFDT <= $AsOfDate)
end-SELECT
end-PROCEDURE

begin-PROCEDURE Set-Subordinate-Flag
begin-sql on-error=sql-error
  UPDATE PS_R_PER507
  SET ORGCODE_FLAG = 'N'
  WHERE DEPTID = &A.DeptID
    AND SETID = &A.SETID
    AND EFFDT  = &A.EffDt
end-SQL
end-PROCEDURE

begin-PROCEDURE Update-Top-Level
!*************************************************************************
!Note: PeopleSoft's convention for identifying a top-level is one that
!      that reports to itself (i.e. DeptID = Reports_To_Dept).  This
!      is necessary since the on-line system enforces that Reports_To_Dept
!      must be a valid entry on the Table.
!*************************************************************************

move 0 to #i
begin-SELECT
D.SETID
D.DEPTID
  do Add-Top-Level-OrgCode
FROM PS_R_PER507 D
WHERE D.REPORTS_TO_DEPT   = D.DEPTID
  AND D.SETID_RPDEPT = D.SETID
  AND D.ORGCODE_FLAG = 'N'
end-SELECT
end-PROCEDURE

begin-PROCEDURE Add-Top-Level-OrgCode
add 1 to #i
do Get-Orgcode-Symbol
begin-sql on-error=sql-error
  UPDATE PS_R_PER507
  SET ORGCODE = $Code
  WHERE DEPTID = &D.DeptID
    AND SETID = &D.SETID
    AND ORGCODE_FLAG = 'N'
end-SQL
end-PROCEDURE

begin-PROCEDURE Update-Sub-Level
begin-SELECT
G.SETID
G.DEPTID,
G.ORGCODE
  move 0 to #i
  do Get-Subordinates
  do Update-Subord-Flag
FROM PS_R_PER507 G
WHERE G.ORGCODE <> ' '
  AND G.ORGCODE_FLAG = 'N'
end-SELECT

if &G.DeptID = ''
  move 'Y' to $end-level
end-if
end-PROCEDURE

begin-PROCEDURE Get-Subordinates
begin-SELECT
H.SETID
H.DEPTID
  do Add-OrgCode
FROM PS_R_PER507 H
WHERE H.REPORTS_TO_DEPT   = &G.DeptID
  AND H.SETID_RPDEPT = &G.SETID
  AND (H.REPORTS_TO_DEPT  <> H.DEPTID OR H.SETID_RPDEPT <> H.SETID)
  AND H.ORGCODE_FLAG = 'N'
ORDER BY DEPTID
end-SELECT
end-PROCEDURE

begin-PROCEDURE Add-OrgCode
add 1 to #i
do Get-Orgcode-Symbol
move &G.OrgCode to $field
move 60 to #length
    let $field = RTRIM(&G.OrgCode,' ')
move $field to $OrgCode
concat $Code with $OrgCode
begin-sql on-error=sql-error
  UPDATE PS_R_PER507
  SET ORGCODE = $OrgCode
  WHERE DEPTID = &H.DeptID
    AND SETID = &H.SETID
    AND ORGCODE_FLAG = 'N'
end-SQL
end-PROCEDURE

begin-PROCEDURE Update-Subord-Flag
begin-sql on-error=sql-error
  UPDATE PS_R_PER507
  SET ORGCODE_FLAG = 'Y'
  WHERE DEPTID = &G.DeptID
    AND SETID = &G.SETID
    AND ORGCODE_FLAG = 'N'
end-SQL
end-PROCEDURE

#include 'askaod.sqc'    !Ask As Of Date input
#Include 'datetime.sqc'  !Routine for Date and Time formatting
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'ldorgsb.sqc'   !Load Orgcode Symbols procedure
#Include 'getorgsb.sqc'  !Get Orgcode Symbol procedure
#Include 'tranctrl.sqc'  !Common Transaction Handling
#Include 'sqrtrans.sqc'  !sql error procedure
#include 'prcsapi.sqc'
#include 'prcsdef.sqc'
#include 'stdapi.sqc'    !Routine to Update Run Status
