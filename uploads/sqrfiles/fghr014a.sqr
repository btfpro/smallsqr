!***********************************************************************
!  FGHR014A:  Distribution of EEO Groups and Comparison by Occupation  *
!             by POI                                                   *
!             (Replaces PER017 - EEO-1 Job Analysis for Federal Govt)  *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      
!          $Date:  2006/07/19:11:54:25                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#Include 'setup31.sqc'  !printer and page-size initialization


begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

Begin-Procedure Report-Translation
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation ('EEOGRP')

  do Get_Field_Information ('FGHR014A','REPORT_TITLE',   $FGHR014A-REPORTTITLE, #CW)
  do Get_Field_Information ('EEOGRP',  'AGENCY',         $AGENCY1,              #CW)
  do Get_Field_Information ('EEOGRP',  'POI2',           $POI2,                 #CW)
  do Get_Field_Information ('EEOGRP',  'POI1',           $POI1,                 #CW)
  do Get_Field_Information ('EEOGRP',  'WHITE',          $WHITE,                #CW)
  do Get_Field_Information ('EEOGRP',  'BLACK',          $BLACK,                #CW)
  do Get_Field_Information ('EEOGRP',  'HISPANIC',       $HISPANIC,             #CW)
  do Get_Field_Information ('EEOGRP',  'ASIAN',          $ASIAN,                #CW)
  do Get_Field_Information ('EEOGRP',  'INDIAN',         $INDIAN,               #CW)
  do Get_Field_Information ('EEOGRP',  'OCCUPCAT',       $OCCUPCAT,             #CW)
  do Get_Field_Information ('EEOGRP',  'TOTAL',          $TOTAL,                #CW)
  do Get_Field_Information ('EEOGRP',  'MALE',           $MALE,                 #CW)
  do Get_Field_Information ('EEOGRP',  'FEMALE',         $FEMALE,               #CW)

End-Procedure

begin-heading 8
  #Include 'stdhtr03.sqc'

  print $AGENCY1   (+1,1)
  print $Company   ()
  print $POI2      (+1,1)
  print $POI       ()
  print $POI1      (+2,27)
  print $WHITE     (0,45)
  print $BLACK     (0,61)
  print $HISPANIC  (0,77)
  print $ASIAN     (0,93)
  print $INDIAN    (0,109)
  print $OCCUPCAT  (+1,1)
  print $TOTAL     (0,26)
  print $MALE      (0,45)
  print $FEMALE    (0,51)
  print $MALE      (0,61)
  print $FEMALE    (0,67)
  print $MALE      (0,77)
  print $FEMALE    (0,83)
  print $MALE      (0,93)
  print $FEMALE    (0,99)
  print $MALE      (0,109)
  print $FEMALE    (0,115)
end-heading

begin-procedure Init-Report
  do Stdapi-Init

  let $ReportID = 'FGHR014A'
  do Get-Report-Language
  let $ReportTitle = $FGHR014A-REPORTTITLE
  display $ReportTitle

  if $prcs_process_instance = ''
    do Ask-EEO-Parameters
  else
    do Select-Parameters
  end-if
  Show 'Report: ' $ReportID
  Show 'OPRID: '  $prcs_oprid
  Show 'Run ID: ' $Prcs_Run_Cntl_ID
  

  Let $Agency = &RUN_CNTL_FG.COMPANY
  Let $Asofdate = &RUN_CNTL_FG.ASOFDATE
  Show 'Company: ' $Agency
  show 'asofdate: ' $AsOfDate

  do Init-Array

end-procedure

begin-procedure Get-Values
  do Get-EEO-Parameters
end-procedure

begin-procedure Init-Array
  create-array name=EEOarray  size=22 field=count:number:40 field=label:char field=seclabel:char
  create-array name=EEOtotals size=22 field=count:number:40

  do Determine-Labels
  Let #TotalRowNumber = #loop

  put $TOTAL                 into EEOarray(#TotalRowNumber)  label
  move #TotalRowNumber to #TotRow    !Row # of TOTAL above
  move 23 to #startCol  !starting position of first column total
  move  8 to #len       !length of total (in print positions)
end-procedure

begin-procedure Determine-Labels

   Let $SelectOccSeries = ' AND JC.GVT_OCC_SERIES IN ('
   let $OccSeries = ''

    move 'N' to $found_count
    Let #loop = 1

begin-SELECT
DD.COMPANY
JCCT.GVT_OCC_SERIES
GG.GVT_DESCR40
!COUNT( JCCT.GVT_OCC_SERIES)
COUNT(*)
  Let $OccSeries = $OccSeries||''''||&jcct.gvt_occ_series||''','
!Let $OccSeries = $OccSeries||''''||&tstgvt_occ_series||''','
  move 'Y' to $found_count
  if #loop = 21
     EXIT-SELECT
  end-if

   move &JCCT.Gvt_Occ_Series to $Gvt_Occ_Series
 !move   &TSTGvt_Occ_Series to $Gvt1_Occ_Series

  move &GG.Gvt_Descr40 to $Gvt_Descr40
  let $label = substr($Gvt_Descr40,1,22)
  do Analyze-Label
  add 1 to #loop

FROM  PS_GVT_PERS_DATA AA,
      PS_EMPLOYMENT BB,
      PS_JOB JJ,
      PS_JOBCODE_TBL JCCT,
      PS_COMPANY_TBL DD,
      PS_GVT_OCCUPATION GG
WHERE JJ.PER_ORG = 'EMP'
  AND JJ.EMPL_STATUS IN ('A','L','S','P')
  AND AA.EMPLID = JJ.EMPLID
  AND AA.EMPL_RCD = JJ.EMPL_RCD
  AND AA.EFFDT = JJ.EFFDT
  AND AA.EFFSEQ = JJ.EFFSEQ
  AND JJ.EMPLID = BB.EMPLID
  AND JJ.EMPL_RCD = BB.EMPL_RCD
  AND JJ.EFFDT =
      (SELECT MAX(JJ1.EFFDT)
       FROM PS_JOB JJ1
       WHERE JJ1.EMPLID = JJ.EMPLID
         AND JJ1.EMPL_RCD = JJ.EMPL_RCD
         AND JJ1.EFFDT <= $AsofDate)
  AND JJ.EFFSEQ =
      (SELECT MAX(JJ2.EFFSEQ)
       FROM PS_JOB JJ2
       WHERE JJ2.EMPLID = JJ.EMPLID
         AND JJ2.EMPL_RCD = JJ.EMPL_RCD
         AND JJ2.EFFDT = JJ.EFFDT)
  AND JCCT.JOBCODE = JJ.JOBCODE
  AND JCCT.EFFDT =
      (SELECT MAX(JCC1.EFFDT)
       FROM PS_JOBCODE_TBL JCC1
       WHERE JCC1.JOBCODE = JCCT.JOBCODE
         AND JCC1.EFFDT <= JJ.EFFDT)
  AND AA.ETHNIC_GROUP  <> '6'  !Not Applicable
  AND JJ.EEO_CLASS     <> 'E'  !Exclude from counts
  AND JJ.COMPANY = $Agency
  AND DD.COMPANY      = JJ.COMPANY
  AND DD.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_COMPANY_TBL
       WHERE  COMPANY = DD.COMPANY
         AND  EFFDT   <= $AsofDate)
  AND GG.GVT_OCC_SERIES      = JCCT.GVT_OCC_SERIES
  AND GG.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_GVT_OCCUPATION
       WHERE  GVT_OCC_SERIES = GG.GVT_OCC_SERIES
         AND  EFFDT   <= $AsofDate)
GROUP BY DD.COMPANY,JCCT.GVT_OCC_SERIES,GG.GVT_DESCR40
ORDER BY 4 DESC
end-SELECT

! to prevent the SQR failing because no value is present
! in job_code_tbl.gvt_occ_series if the report is picking up wrong data, pl ensure
! values are present in job_code_tbl.gvt_occ_series

if not isnull($OccSeries)
   Let $OccSeries = $SelectOccSeries||rtrim($OccSeries,',')||')'
else
   let $err_str = 'WARNING No values in  job_code_tbl.gvt_occ_series'
   display $err_str
end-if

   if $found_count = 'N'
      show 'NO RECORDS FOUND'
   end-if

end-procedure

begin-procedure Analyze-Label

  if #loop < 21
    evaluate #loop
      when = 1
        let $row1 = $Gvt_Occ_Series
        put $label into EEOarray(1) label
        put $Gvt_Occ_Series into EEOarray(1) seclabel
        break
      when = 2
        let $row2 = $Gvt_Occ_Series
        put $label into EEOarray(2) label
        put $Gvt_Occ_Series into EEOarray(2) seclabel
        break
      when = 3
        let $row3 = $Gvt_Occ_Series
        put $label into EEOarray(3) label
        put $Gvt_Occ_Series into EEOarray(3) seclabel
        break
      when = 4
        let $row4 = $Gvt_Occ_Series
        put $label into EEOarray(4) label
        put $Gvt_Occ_Series into EEOarray(4) seclabel
       break
      when = 5
        let $row5 = $Gvt_Occ_Series
        put $label into EEOarray(5) label
        put $Gvt_Occ_Series into EEOarray(5) seclabel
        break
      when = 6
        let $row6 = $Gvt_Occ_Series
        put $label into EEOarray(6) label
        put $Gvt_Occ_Series into EEOarray(6) seclabel
        break
      when = 7
        let $row7 = $Gvt_Occ_Series
        put $label into EEOarray(7) label
        put $Gvt_Occ_Series into EEOarray(7) seclabel
        break
      when = 8
        let $row8 = $Gvt_Occ_Series
        put $label into EEOarray(8) label
        put $Gvt_Occ_Series into EEOarray(8) seclabel
        break
      when = 9
        let $row9 = $Gvt_Occ_Series
        put $label into EEOarray(9) label
        put $Gvt_Occ_Series into EEOarray(9) seclabel
        break
      when = 10
        let $row10 = $Gvt_Occ_Series
        put $label into EEOarray(10) label
        put $Gvt_Occ_Series into EEOarray(10) seclabel
        break
      when = 11
        let $row11 = $Gvt_Occ_Series
        put $label into EEOarray(11) label
        put $Gvt_Occ_Series into EEOarray(11) seclabel
        break
      when = 12
        let $row12= $Gvt_Occ_Series
        put $label into EEOarray(12) label
        put $Gvt_Occ_Series into EEOarray(12) seclabel
        break
      when = 13
        let $row13 = $Gvt_Occ_Series
        put $label into EEOarray(13) label
        put $Gvt_Occ_Series into EEOarray(13) seclabel
        break
      when = 14
        let $row14 = $Gvt_Occ_Series
        put $label into EEOarray(14) label
        put $Gvt_Occ_Series into EEOarray(14) seclabel
        break
      when = 15
        let $row15 = $Gvt_Occ_Series
        put $label into EEOarray(15) label
        put $Gvt_Occ_Series into EEOarray(15) seclabel
        break
      when = 16
        let $row16 = $Gvt_Occ_Series
        put $label into EEOarray(16) label
        put $Gvt_Occ_Series into EEOarray(16) seclabel
        break
      when = 17
        let $row17 = $Gvt_Occ_Series
        put $label into EEOarray(17) label
        put $Gvt_Occ_Series into EEOarray(17) seclabel
        break
      when = 18
        let $row18 = $Gvt_Occ_Series
        put $label into EEOarray(18) label
        put $Gvt_Occ_Series into EEOarray(18) seclabel
        break
      when = 19
        let $row19 = $Gvt_Occ_Series
        put $label into EEOarray(19) label
        put $Gvt_Occ_Series into EEOarray(19) seclabel
        break
      when = 20
        let $row20= $Gvt_Occ_Series
        put $label into EEOarray(20) label
        put $Gvt_Occ_Series into EEOarray(20) seclabel
        break
    end-evaluate
  end-if

end-procedure

begin-procedure Process-Main
begin-SELECT
E.GVT_POI () on-break print=never procedure=Print-Report
E.DESCR
D.COMPANY
D.DESCR
JC.GVT_OCC_SERIES
A.SEX
A.ETHNIC_GROUP
G.GVT_DESCR40
COUNT(*) &TESTPS

  move &A.Sex          to $Sex
  move &A.Ethnic_Group to $EthnicGroup
  move &D.Descr        to $Company
  move &E.Descr        to $POI
  move &JC.Gvt_Occ_Series to $Gvt_Occ_Series
  do Increment-Array
FROM  PS_GVT_PERS_DATA A,
      PS_EMPLOYMENT B,
      PS_JOB J,
      PS_JOBCODE_TBL JC,
      PS_COMPANY_TBL D,
      PS_GVT_OCCUPATION G,
      PS_GVT_POI_TBL E,
      PS_JOB_USF F
WHERE J.PER_ORG = 'EMP'
  AND J.EMPL_STATUS IN ('A','L','S','P')
  AND A.EMPLID = J.EMPLID
  AND A.EMPL_RCD = J.EMPL_RCD
  AND A.EFFDT = J.EFFDT
  AND A.EFFSEQ = J.EFFSEQ
  AND J.EMPLID = B.EMPLID
  AND J.EMPL_RCD = B.EMPL_RCD
  AND J.EMPLID = F.EMPLID
  AND J.EMPL_RCD = F.EMPL_RCD
  AND J.EFFDT = F.EFFDT
  AND J.EFFSEQ = F.EFFSEQ
  AND J.EFFDT =
      (SELECT MAX(J1.EFFDT)
       FROM PS_JOB J1
       WHERE J1.EMPLID = J.EMPLID
         AND J1.EMPL_RCD = J.EMPL_RCD
         AND J1.EFFDT <= $AsofDate)
  AND J.EFFSEQ =
      (SELECT MAX(J2.EFFSEQ)
       FROM PS_JOB J2
       WHERE J2.EMPLID = J.EMPLID
         AND J2.EMPL_RCD = J.EMPL_RCD
         AND J2.EFFDT = J.EFFDT)
  AND JC.JOBCODE = J.JOBCODE
  AND JC.EFFDT =
      (SELECT MAX(JC1.EFFDT)
       FROM PS_JOBCODE_TBL JC1
       WHERE JC1.JOBCODE = JC.JOBCODE
         AND JC1.EFFDT <= J.EFFDT)
  AND A.ETHNIC_GROUP  <> '6'  !Not Applicable
  AND J.EEO_CLASS     <> 'E'  !Exclude from counts
  AND J.COMPANY = $Agency
  AND D.COMPANY      = J.COMPANY
  AND D.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_COMPANY_TBL
       WHERE  COMPANY = D.COMPANY
         AND  EFFDT   <= $AsofDate)
  [$OccSeries]
  AND G.GVT_OCC_SERIES      = JC.GVT_OCC_SERIES
  AND G.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_GVT_OCCUPATION
       WHERE  GVT_OCC_SERIES = G.GVT_OCC_SERIES
         AND  EFFDT   <= $AsofDate)
  AND E.GVT_POI = F.GVT_POI
  AND E.COMPANY = J.COMPANY
  AND E.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_GVT_POI_TBL
       WHERE  GVT_POI = E.GVT_POI
         AND  COMPANY = E.COMPANY
         AND  EFFDT   <= $AsofDate)
GROUP BY E.GVT_POI,E.DESCR,D.COMPANY,D.DESCR,JC.GVT_OCC_SERIES,A.SEX,A.ETHNIC_GROUP,G.GVT_DESCR40
ORDER BY E.GVT_POI
end-SELECT

do Print-Report  !Print last location's report

!  Printing Company Summary
move 'Agency Summary' to $POI
move 1 to #EEOrow    !Load the "print" array with the Company totals
while #EEOrow <= #TotRow
  move 0 to #EEOcol
  while #EEOcol <= 11
    get #count1 from EEOtotals(#EEOrow) count(#EEOcol)
    put #count1 into EEOarray(#EEOrow)  count(#EEOcol)
    add 1 to #EEOcol
  end-while
  add 1 to #EEOrow
end-while
do Print-Report  !Print Company Summary Statistics
end-procedure

begin-procedure Print-Report
  move 3 to #line
  move 1 to #EEOrow
  DISPLAY  #totrow
  while #EEOrow <= #TotRow
    get $EEOcatName from EEOarray(#EEOrow) label
    print $EEOcatName                     (#line,1)

    if #EEOrow < #TotRow
       get $SecondLabel from EEOarray(#EEOrow) seclabel
       Let $SecondLabel = '('||$SecondLabel||')  %'
       print $SecondLabel                    (+1,1)
    else
       print '%'                             (+1,9)
    end-if
!    print '% of Row'    (+1,3)
!    print '% of Column' (+1,3)

    move #startCol to #col  !this is 23
    get #rowTotal from EEOarray(#EEOrow) count(0)
    move 0 to #EEOcol
    while #EEOcol <= 11
!total row counts
      get #count1 from EEOarray(#EEOrow) count(#EEOcol)
      array-add #count1 to EEOtotals(#EEOrow) count(#EEOcol)
      do Format-Number(#count1, $out, 'B999,999')
      print $out (#line,#col)

      multiply 100 times #count1

      move #count1 to #count2
!row percentage
      divide #rowTotal into #count1 on-error=zero
      do Format-Number(#count1, $out, 'B9999.99')
      print $out (+1,#col)

!column percentage
!      get #colTotal from EEOarray(#TotRow) count(#EEOcol)
!      divide #colTotal into #count2 on-error=zero
!      do Format-Number(#count2, $out, 'B9999.99')
!     print $out (+1,#col)

      put 0 into EEOarray(#EEOrow) count(#EEOcol)
      add #len to #col   !add 8 to col
!      if #EEOcol <= 1 or #EEOcol = 6
      if #EEOcol < 1
        add 2 to #col
      end-if
      add 1 to #EEOcol
    end-while
!    add 4 to #line
    add 3 to #line
    add 1 to #EEOrow
  end-while
  new-page
end-procedure

begin-procedure Increment-Array
  do Analyze-Sex-EthnicGroup  !returns 1 to 10 in #EEOcol
  add 1 to #EEOcol            !convert to print column
  do Analyze-Occ-Series

  if #eeorow <> 0
      DISPLAY 'ATTATAT'
     !array-add &COUNT(*) &COUNT(*) to EEOarray(#EEOrow) count(#EEOcol) count (0)
     !array-add &COUNT(*) &COUNT(*) to EEOarray(#TotRow) count(#EEOcol) count (0)
     array-add &TESTPS &TESTPS to EEOarray(#EEORow) count(#EEOcol) count (0)
     array-add &TESTPS &TESTPS to EEOarray(#TotRow) count(#EEOcol) count (0)
  end-if

!  this generates the minority group subtotals
!  if $EthnicGroup > '1'  !if a Minority group
!  if $EthnicGroup <> 'E' !if a Minority group
!    array-add &COUNT(*) to EEOarray(#EEOrow) count(1)
!    array-add &COUNT(*) to EEOarray(#TotRow) count(1)
!  end-if

end-procedure

#include 'stdapi.sqc'    !Routine to Update Run Status
#include 'fgrunctl.sqc'  !Get run control parameter values
#include 'fggetval.sqc'  !Get values mask routines
!#include 'askaod.sqc'    !Ask As Of Date input
#include 'fgaskeeo.sqc'  !Ask EEO Parameters input

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'fgeeogp.sqc'  !Analyze-Sex-EthnicGroup procedure
!#Include 'eeogroup.sqc'  !Analyze-Sex-EthnicGroup procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
