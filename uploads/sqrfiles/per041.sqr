!***********************************************
!  PER041:  Merit Increases Report             *
!***********************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:42:14                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!Procedures ending with "Scrty" and Record alias ending with "SC" are  *
!using SQR Security.                                                   *
!***********************************************************************
#Include 'setenv.sqc'    !Set environment
Begin-Setup
  #Include 'ptset02.sqc'   !Printer and page-size initialization
End-Setup


!**********************************************
! Report                                      *
!**********************************************
begin-report
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Init-Report

   if $prcs_oprid=''
      goto last2
   end-if
 
   do Process-Main
 
   do Reset
   do Stdapi-Term
last2:
end-report


!**********************************************
! Heading                                     *
!**********************************************
begin-heading 9
   do Get_Field_Information ('PER041', 'REPORT_TITLE', $REPORTTITLE, #DW)

   !************************
   ! Print Standard Header *
   !************************
   #Include 'stdhdgtr.sqc'

   !*************************
   ! Print Group Parameters *
   !*************************
   do Get_Field_Information ('PER041', 'GROUP_ID', $GROUP_ID_LBL, #DW)
   print $GROUP_ID_LBL                  (  3,  1)
   print &RUN_CNTL_HR_SP.GB_GROUP_ID    (   , +1)

   do Get_Field_Information ('PER041', 'REVIEW_TYPE', $REVIEW_TYPE_LBL, #DW)
   print $REVIEW_TYPE_LBL               (  4,  1)
   print &RUN_CNTL_HR_SP.EP_REVIEW_TYPE (   , +1)

   do Get_Field_Information ('PER041', 'FROM_DATE', $FROM_DATE_LBL, #DW)
   print $FROM_DATE_LBL                 (  5,  1)
   do Format-DateTime(&RUN_CNTL_HR_SP.SP_FROM_DATE, $out, {DEFDATE}, '', '')
   print $out                           (   ,  +1)
   do Get_Field_Information ('PER041', 'TO_DATE', $TO_DATE_LBL, #DW)
   print $TO_DATE_LBL                   (  0, +2)

   do Format-DateTime(&RUN_CNTL_HR_SP.SP_TO_DATE, $out, {DEFDATE}, '', '')
   print $out                           (   ,  +1)

   do Get_Field_Information ('PER041', 'MERIT_ID', $MERIT_ID_LBL, #DW)
   print $MERIT_ID_LBL                  (  6,  1)
   print &ELIG.SP_MER_INCR_ID        (   , +1)


   !*******************************
   ! Print Employee List Headings *
   !*******************************
   do Get_Field_Information ('HR',     'EMPLID',        $EMPLID_LBL,        #DW)
   do Get_Field_Information ('HR',     'NAME',          $NAME_LBL,          #DW)
   do Get_Field_Information ('HR',     'EMPL_RCD',      $EMPL_RCD_LBL,      #DW)
   do Get_Field_Information ('PER041', 'REVIEW',        $REVIEW_LBL,        #DW)
   do Get_Field_Information ('PER041', 'TYPE',          $TYPE_LBL,          #DW)
   do Get_Field_Information ('PER041', 'PERIOD',        $PERIOD_LBL,        #DW)
   do Get_Field_Information ('PER041', 'BEGIN_DATE',    $BEGIN_DATE_LBL,    #DW)
   do Get_Field_Information ('PER041', 'END_DATE',      $END_DATE_LBL,      #DW)
   do Get_Field_Information ('PER041', 'POINTS',        $POINTS_LBL,        #DW)
   do Get_Field_Information ('PER041', 'RATING_MODEL',  $MODEL_LBL,         #DW)
   do Get_Field_Information ('PER041', 'REVIEW_RATING', $RATING_LBL,        #DW)
   do Get_Field_Information ('PER041', 'RATE_CODE',     $RATE_CODE_LBL,     #DW)
   do Get_Field_Information ('PER041', 'MERIT_INCR',    $MERIT_INCR_LBL,    #DW)
   do Get_Field_Information ('HR',     'STATUS',        $STATUS_LBL,        #DW)

   print $EMPLID_LBL                     (  8,  1, 11)
   print $NAME_LBL                       (  8, 13, 35)
   print $EMPL_RCD_LBL                   (  8, 49,  4)
   print $REVIEW_LBL                     (  8, 56, 10)
   print $TYPE_LBL                       (  9, 56, 10)
   print $PERIOD_LBL                     (  8, 65, 10)
   print $BEGIN_DATE_LBL                 (  9, 65, 10)
   print $PERIOD_LBL                     (  8, 77, 10)
   print $END_DATE_LBL                   (  9, 77, 10)
   print $REVIEW_LBL                     (  8, 89,  8)
   print $POINTS_LBL                     (  9, 89,  8)
   print $RATING_LBL                     (  8, 100, 8)
   print $MODEL_LBL                      (  9, 100, 8)
   print $REVIEW_LBL                     (  8, 108, 8)
   print $RATING_LBL                     (  9, 108, 8)
   print $RATE_CODE_LBL                  (  8, 119, 9)
   print $MERIT_INCR_LBL                 (  8, 137,15)
   print $STATUS_LBL                     (  8, 156,10)

end-heading


!**********************************************
! Init-Report                                 *
!**********************************************
begin-procedure Init-Report

   move 'PER041' to $ReportID
   move 'W' to $ReportMsgType  !Warning

   do Stdapi-Init

   if $prcs_oprid=''
      display ''
      display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
      display ''
      goto last1
   end-if

   if $prcs_process_instance = ''
      do Ask-As-Of-Date
   else
      do Select-Parameters
      do Select-Parameters-SP
   end-if

   do Init_Printer
   do Init_Report_Translation ($ReportID, $language_cd)
   do Append_Report_Translation ('HR')
   do Append_Report_Translation ('PER041')
last1:
end-procedure


!**********************************************
! Select-Parameters-SP                        *
!**********************************************
begin-procedure Select-Parameters-SP

BEGIN-SELECT

RUN_CNTL_HR_SP.OPRID
RUN_CNTL_HR_SP.RUN_CNTL_ID
RUN_CNTL_HR_SP.GB_GROUP_ID
RUN_CNTL_HR_SP.EP_REVIEW_TYPE
RUN_CNTL_HR_SP.SP_FROM_DATE
RUN_CNTL_HR_SP.SP_TO_DATE

  do Get-Values-SP

FROM PS_RUN_CNTL_HR_SP RUN_CNTL_HR_SP

WHERE RUN_CNTL_HR_SP.OPRID = $prcs_oprid
  AND RUN_CNTL_HR_SP.RUN_CNTL_ID = $prcs_run_cntl_id
end-SELECT

end-procedure


!**********************************************
! Get-Values                                  *
!**********************************************
begin-procedure Get-Values

end-procedure


!**********************************************
! Get-Values-SP                               *
!**********************************************
begin-procedure Get-Values-SP

   let $language_cd = $prcs_language_cd

   let $AsOfDate = &RUN_CNTL_HR_SP.SP_TO_DATE

   if $AsOfDate = ''
      move $AsOfToday to $AsOfDate
   end-if

   do Get-Merit-Incr-ID

end-procedure


!**********************************************
! Process-Main                                *
!**********************************************
begin-procedure Process-Main

   !**********************************************
   ! Get Field Label/Value Strings, needed later *
   !**********************************************
   do Get_Field_Information ('HR',     'SALARY_POINTS', $SALARY_POINTS_LBL, #DW)
   do Get_Field_Information ('HR',     'PERCENT',       $PERCENT_LBL,       #DW)
   do Get_Field_Information ('PER041', 'RC_GROUP',      $RC_GROUP_LBL,       #DW)

!*******************************
! For each new/updated Job row *
!*******************************
begin-SELECT
MER.EMPLID                               ( +1,  1)
PERS.NAME                                (  0, 13, 35)
MER.EMPL_RCD                             (  0, 49) edit '999'
MER.EP_REVIEW_TYPE                       (  0, 56)

MER.PERIOD_BEGIN_DT

   do Format-DateTime(&MER.PERIOD_BEGIN_DT, $out, {DEFDATE}, '', '')
   print $out                            (  0, 65)

MER.PERIOD_END_DT

   do Format-DateTime(&MER.PERIOD_END_DT, $out, {DEFDATE}, '', '')
   print $out                            (  0, 77)

MER.REVIEW_POINTS                        (  0, 90) edit '999'
MER.RATING_MODEL                         (  0,100)
MER.REVIEW_RATING                        (  0,111)
MER.COMP_RATECD                          (  0,119)
MER.AMOUNT_PER_POINT
MER.CURRENCY_CD
MER.COMP_FREQUENCY
MER.AMOUNT_PCT
MER.PCT_PER_POINT
MER.RATE_CODE_GROUP
MER.SAL_PTS_PER_POINT
MER.SAL_PTS_FREQUENCY
MER.POINT_PCT
MER.SP_MER_INCR_STATUS

   !*******************************************
   ! Print the Amounts depending on Rate Type *
   !*******************************************
   do Get-Rate-Code-Type
   evaluate $Rate_Type

      when = 'FA'
      when = 'HR'
         if &MER.AMOUNT_PCT <> 0
            print &MER.AMOUNT_PCT            (  0,137) edit '999.999'
            print $PERCENT_LBL               (  0, +1)
         else
            print &MER.AMOUNT_PER_POINT      (  0,128) edit 'b99999999999.999999'
            print &MER.CURRENCY_CD           (  0, +1)
            do Det-Annual-Factor(&MER.COMP_FREQUENCY, $AsOfDate, $freq_descrshort, $dummy1, #dummy2, $dummy3)
            print $freq_descrshort           (  0, +1)
         end-if
         break

      when = 'PC'
         Let $RC_GROUP = rtrim(&MER.RATE_CODE_GROUP,' ')
         if $RC_GROUP = ''
            print &MER.PCT_PER_POINT         (  0,137) edit '999.999'
            print $PERCENT_LBL               (  0, +1)
         else
            print &MER.PCT_PER_POINT         (  0,128) edit '999.999'
            print $PERCENT_LBL               (  0, +1)
            print $RC_GROUP_LBL              (  0,  0)
            print $RC_GROUP                  (  0, +1)
         end-if
         break

      when = 'PT'
         if &MER.POINT_PCT <> 0
            print &MER.POINT_PCT             (  0,137) edit '999.999'
            print $PERCENT_LBL               (  0, +1)
         else
            print &MER.SAL_PTS_PER_POINT     (  0,137) edit '99999'
            print $SALARY_POINTS_LBL         (  0, +1)
            do Det-Annual-Factor(&MER.SAL_PTS_FREQUENCY, $AsOfDate, $freq_descrshort, $dummy1, #dummy2, $dummy3)
            print $freq_descrshort           (  0, +1)
         end-if
         break

   end-evaluate

   ! ************************
   ! Print Action Xlatvalue *
   ! ************************
   move 'SP_MER_INCR_STATUS'  to $FieldName
   move &MER.SP_MER_INCR_STATUS to $FieldValue
   do Read-Translate-Table
   print $XlatShortName                    (  0,156, 10)

FROM PS_SP_MER_INCR_EE MER
    ,PS_PERSON_NAME PERS
WHERE MER.GB_GROUP_ID = &RUN_CNTL_HR_SP.GB_GROUP_ID
  AND MER.EP_REVIEW_TYPE = &RUN_CNTL_HR_SP.EP_REVIEW_TYPE
  AND MER.SP_FROM_DATE = &RUN_CNTL_HR_SP.SP_FROM_DATE
  AND MER.SP_TO_DATE = &RUN_CNTL_HR_SP.SP_TO_DATE
  AND PERS.EMPLID = MER.EMPLID
end-SELECT

end-procedure


!**********************************************
! Get-Merit-Incr-ID                           *
!**********************************************
begin-procedure Get-Merit-Incr-ID

begin-SELECT
ELIG.SP_MER_INCR_ID

FROM PS_SP_MER_INC_ELIG ELIG
WHERE ELIG.GB_GROUP_ID = &RUN_CNTL_HR_SP.GB_GROUP_ID
  AND ELIG.EP_REVIEW_TYPE = &RUN_CNTL_HR_SP.EP_REVIEW_TYPE
  AND ELIG.SP_FROM_DATE = &RUN_CNTL_HR_SP.SP_FROM_DATE
  AND ELIG.SP_TO_DATE =  &RUN_CNTL_HR_SP.SP_TO_DATE

end-SELECT

end-procedure


!***************************************************
! Procedure Get-Rate-Code-Type                     *
! Gets the Rate Code Type of a Seniority Component *
!***************************************************
begin-procedure Get-Rate-Code-Type

   let $Rate_Type = ''

begin-SELECT
RC1.COMP_RATE_TYPE

   let $Rate_Type = &RC1.COMP_RATE_TYPE

FROM PS_COMP_RATECD_TBL RC1
WHERE RC1.COMP_RATECD = &MER.COMP_RATECD
  AND RC1.EFF_STATUS = 'A'
  AND RC1.EFFDT = (SELECT MAX(RC2.EFFDT)
                     FROM PS_COMP_RATECD_TBL RC2
                    WHERE RC2.COMP_RATECD = &MER.COMP_RATECD
                      AND RC2.EFFDT <= $AsOfDate)
end-SELECT

end-procedure


#Include 'hrrnctl1.sqc'  !Get run control parameter values
#Include 'hrgetval.sqc'  !Get values mask routines
#Include 'askaod.sqc'    !Ask As Of Date input
#Include 'frquency.sqc'  !Get Frequency Description

#Include 'readxlat.sqc'  !get translates for fieldname, value
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to update run status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
