!************************************************
!  WP0002FR: Agreement Profit-Sharing report    *
!************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:58:39                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
!#include 'setup32.sqc'   !Printer and page-size initialization

Begin-Setup
#Include 'ptpsl177.sqc'  !Printer and page-size initialization
End-Setup

#define WP_AGRT_INVEST
#define WP_AGREEMENT
#include 'rellang.sqc'

#define C01    1
#define C02   19
#define C03   42
#define C04   47
#define C05   65
#define C06   83
#define C07  101
#define C08  119
#define C09  131
#define C10  142
#define C11  151
#define C12  154
#define C13  162

!***********************************************************************

begin-program
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Term
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-program

!***********************************************************************
!  Heading
!***********************************************************************

begin-heading 6
  #Include 'stdhdgtr.sqc'
end-heading

!***********************************************************************
!  Init Report
!***********************************************************************

begin-procedure Init-Report

  move 'WP0002FR' to $ReportID

  do Stdapi-Init

  let $language_cd = $CURR_LANGUAGE_CD

  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation($ReportID)

  do Get_Field_Information($ReportID, 'REPORT_TITLE', $ReportTitle, #DW)

  if $prcs_process_instance = ''
        !No Prompt
  else
!    do Select-Parameters-WP0002FR
  end-if

 do Init_Printer

 do Security-Param

end-procedure

!***********************************************************************
!  Get Values
!***********************************************************************

begin-procedure Get-Values
!   do GET-WP0002-PARM
end-procedure

!***********************************************************************
!  Main: Creates the Individual Profit-Sharing Report
!***********************************************************************

begin-procedure Process-Main

   do Get-Translat-Info     ! Global
   do Get-Agreement-From-RC-List

end-procedure

!***********************************************************************
!  Gets the strings printed in this report (Globalization)
!***********************************************************************

begin-procedure Get-Translat-Info

  do Get_Field_Information($ReportID, 'WP_AGRT_TYPE'        , $WP_AGRT_TYPE_LBL,    #DW)
  do Get_Field_Information($ReportID, 'WP_AGRT_NAME'        , $WP_AGRT_NAME_LBL,    #DW)
  do Get_Field_Information($ReportID, 'CURRENCY_CD'         , $CURRENCY_LBL,        #DW)
  do Get_Field_Information($ReportID, 'EMPLID'              , $EMPLID_LBL,          #DW)
  do Get_Field_Information($ReportID, 'NAME'                , $NAME_LBL,            #DW)
  do Get_Field_Information($ReportID, 'EMPL_RCD'            , $EMPL_RCD_LBL,        #DW)
  do Get_Field_Information($ReportID, 'PERIOD_ID'           , $PERIOD_ID_LBL,       #DW)
  do Get_Field_Information($ReportID, 'PROFIT_SHARING'      , $PROFIT_SHARING_LBL,  #DW)
  do Get_Field_Information($ReportID, 'WP_WP_GROSS_AMT'     , $WP_WP_GROSS_AMT_LBL, #DW)
  do Get_Field_Information($ReportID, 'WP_WP_DED_AMT'       , $WP_WP_DED_AMT_LBL,   #DW)
  do Get_Field_Information($ReportID, 'WP_WP_NET_AMT'       , $WP_WP_NET_AMT_LBL,   #DW)
  do Get_Field_Information($ReportID, 'INTEREST'            , $INTEREST_LBL,        #DW)
  do Get_Field_Information($ReportID, 'WP_IN_GROSS_AMT'     , $WP_IN_GROSS_AMT_LBL, #DW)
  do Get_Field_Information($ReportID, 'WP_IN_DED_AMT'       , $WP_IN_DED_AMT_LBL,   #DW)
  do Get_Field_Information($ReportID, 'WP_IN_NET_AMT'       , $WP_IN_NET_AMT_LBL,   #DW)
  do Get_Field_Information($ReportID, 'GRAND_TOTAL'         , $GRAND_TOTAL_LBL,     #DW)
  do Get_Field_Information($ReportID, 'WP_STATUS'           , $WP_STATUS_LBL,       #DW)
  do Get_Field_Information($ReportID, 'PAYMENT_DT'          , $PAYMENT_DT_LBL,      #DW)
  do Get_Field_Information($ReportID, 'WP_FIN_ORGANISM'     , $FIN_ORG_LBL,         #DW)
  do Get_Field_Information($ReportID, 'WP_INVESTMENT_CD'    , $INVEST_LBL,          #DW)
  do Get_Field_Information($ReportID, 'PRORATE_FACTOR'      , $PRORATE_LBL,         #DW)
  do Get_Field_Information($ReportID, 'WP_INVEST_PERSO'     ,$WP_INVEST_PERSO_LBL,  #DW)
  do Get_Field_Information($ReportID, 'WP_INVEST_AGRT'      ,$WP_INVEST_AGRT_LBL,   #DW)

end-procedure Get-Translat-Info

!***********************************************************************
!  Prints Employee Profit Sharing
!***********************************************************************
begin-procedure Print-EE-Profit-Sharing

  print &A.EMPLID                (+1,{C01})
  print $NAME                      (,{C02})
  print &A.EMPL_RCD                (,{C03})
  print $PROFIT_SHARING_LBL        (,{C04})
  print &A.WP_GROSS_AMT            (,{C05}) EDIT 9999999999.99
  print &A.WP_DEDUCTIONS_AMT       (,{C06}) EDIT 9999999999.99
  print &A.WP_NET_AMT              (,{C07}) EDIT 9999999999.99
  print $Fund_Status_ShortName     (,{C08})
  print $PAYMENT_DT                (,{C09})
  print &F.CURRENCY_CD             (,{C10})
  print &F.WP_EE_PRO_FACTOR        (,{C11}) EDIT 9.999

end-procedure Print-EE-Profit-Sharing

!***********************************************************************
!  Prints Employee Interests
!***********************************************************************
begin-procedure Print-EE-Interests

  print $INTEREST_LBL            (+1,{C04})
  print &I.WP_GROSS_AMT            (,{C05}) EDIT 9999999999.99
  print &I.WP_DEDUCTIONS_AMT       (,{C06}) EDIT 9999999999.99
  print &I.WP_NET_AMT              (,{C07}) EDIT 9999999999.99
  print $Interest_Status_ShortName (,{C08})
  print $PAYMENT_DT                (,{C09})
  print &I.CURRENCY_CD             (,{C10})

end-procedure Print-EE-Interests

!***********************************************************************
!  Prints Employee Grand Total
!***********************************************************************
begin-procedure Print-EE-Grand-Total

  print '-'                     (+1,{C01}, 165) FILL
  print $GRAND_TOTAL_LBL        (+1,{C01})
  print $PROFIT_SHARING_LBL       (,{C04})
  print #SUM_GROSS_AMT            (,{C05}) EDIT 9999999999.99
  print #SUM_DED_AMT              (,{C06}) EDIT 9999999999.99
  print #SUM_NET_AMT              (,{C07}) EDIT 9999999999.99
  print $INTEREST_LBL           (+1,{C04})
  print #SUM_IN_GROSS_AMT         (,{C05}) EDIT 9999999999.99
  print #SUM_IN_DED_AMT           (,{C06}) EDIT 9999999999.99
  print #SUM_IN_NET_AMT           (,{C07}) EDIT 9999999999.99

end-procedure Print-EE-Grand-Total

!***********************************************************************
!  Prints Investment Options
!***********************************************************************
begin-procedure Print-Investment-Options
  if #WP_PERSO = 1
    print $WP_INVEST_PERSO_LBL (+1,{C01})
  else
    print $WP_INVEST_AGRT_LBL (+1,{C01})
  end-if
  print $WP_DESCR50             (,+2)
  if $WP_INVESTMENT_SW = '1' or $WP_INVESTMENT_SW = '2' or $WP_INVESTMENT_SW = '3' or $WP_INVESTMENT_SW = '4'
     print $WP_INVESTMENT_CD    (,+1)
  end-if
  if $WP_INVESTMENT_SW != '5' and $WP_INVESTMENT_SW != '8' and $WP_INVESTMENT_SW != '9'
     if $WP_INVESTMENT_SW != '6' or ($WP_INVESTMENT_SW = '6' and $WP_INTERNAL_EXTERNAL = 'E')
       print $FIN_ORG_LBL            (+1,{C02})
       print $WP_FIN_ORGANISM        (,+2)
     end-if
  end-if
  if $WP_INVESTMENT_SW != '5' and $WP_INVESTMENT_SW != '8' and $WP_INVESTMENT_SW != '9'
    print $WP_ADDRESS1            (+1,{C02})
    print $WP_ADDRESS2            (,+2)
    print $WP_ADDRESS3            (,+2)
    print $WP_ADDRESS4            (,+2)
    print $WP_POSTAL              (,+2)
    print $WP_CITY                (,+2)
    print $WP_COUNTRY             (,+2)
  end-if
  if not IsNull($WP_COMMENTS)
    print $WP_COMMENTS            (+1,{C02})
  end-if
end-procedure Print-Investment-Options


!***********************************************************************
!  Prints Employee Investment Options
!***********************************************************************
begin-procedure Print-EE-Investment-Options

  if #WP_PERSO = 1
     do Print-Investment-Options
  end-if

end-procedure Print-EE-Investment-Options

!***********************************************************************
!  Get-Agreement-From-RC-List
!***********************************************************************
begin-procedure Get-Agreement-From-RC-List
  let #SUM_GROSS_AMT = 0
  let #SUM_DED_AMT   = 0
  let #SUM_NET_AMT   = 0
  let #SUM_IN_GROSS_AMT = 0
  let #SUM_IN_DED_AMT   = 0
  let #SUM_IN_NET_AMT   = 0

begin-SELECT distinct ON-ERROR=SQL-Error
RC.WP_AGREEMENT_ID   &RC.WP_AGREEMENT_ID
RC.PERIOD_ID         &RC.PERIOD_ID () on-break print=never level=1 after=Period-Change

  let $WP_AGREEMENT_ID = &RC.WP_AGREEMENT_ID
  let $PERIOD_ID = &RC.PERIOD_ID

  do Get-Agreement-Data

  do Print-Common-Header
  do Print-Period-Header
  do Print-EE-WP-Header

  do Get-Employee-Funding

  new-page

from PS_RC_WP_AGRT_RPT RC
where RC.OPRID = $prcs_oprid
  and RC.RUN_CNTL_ID = $prcs_run_cntl_id
order by RC.WP_AGREEMENT_ID, RC.PERIOD_ID
end-SELECT
end-procedure Get-Agreement-From-RC-List

!***********************************************************************
!  Period-Change
!***********************************************************************

begin-procedure Period-Change

  let #SUM_GROSS_AMT = 0
  let #SUM_DED_AMT   = 0
  let #SUM_NET_AMT   = 0

  let #SUM_IN_GROSS_AMT = 0
  let #SUM_IN_DED_AMT   = 0
  let #SUM_IN_NET_AMT   = 0

end-procedure Period-Change

!***********************************************************************
!  Get-Employee-Funding
!***********************************************************************

begin-procedure Get-Employee-Funding
begin-SELECT ON-ERROR=SQL-Error
A.PERIOD_ID                                  &A.PERIOD_ID
A.EMPLID                                     &A.EMPLID   () on-break print=never level=1
A.EMPL_RCD                                   &A.EMPL_RCD () on-break print=never level=2 after=Print-EE-Investment-Options
A.WP_GROSS_AMT                               &A.WP_GROSS_AMT
A.WP_DEDUCTIONS_AMT                          &A.WP_DEDUCTIONS_AMT
A.WP_NET_AMT                                 &A.WP_NET_AMT
A.WP_FUND_STATUS                             &A.WP_FUND_STATUS
{DATEOUT-PREFIX}A.PAYMENT_DT{DATEOUT-SUFFIX} &A.PAYMENT_DT
A.CURRENCY_CD                                &A.CURRENCY_CD
A.WP_AGREEMENT_ID                            &A.WP_AGREEMENT_ID

  do Get-Person-Name    ! Employee's name

  do Get-EE-Fund-Data   ! Currency, Prorate Factor

  if (&A.WP_FUND_STATUS = 'P')
     let #SUM_GROSS_AMT = #SUM_GROSS_AMT + &A.WP_GROSS_AMT
     let #SUM_DED_AMT   = #SUM_DED_AMT   + &A.WP_DEDUCTIONS_AMT
     let #SUM_NET_AMT   = #SUM_NET_AMT   + &A.WP_NET_AMT
  end-if

  let $WP_INVESTMENT_CD = ''
  let $WP_FIN_ORGANISM = ''
  let #WP_PERSO = 0

  do Get-EE-Investment

  if not IsNull(&A.PAYMENT_DT)
     do Format-DateTime(&A.PAYMENT_DT, $PAYMENT_DT, {DEFDMY},'','')
  end-if

  move 'WP_FUND_STATUS' to $FieldName
  move &A.WP_FUND_STATUS to $FieldValue
  do Read-Translate-Table
  let $Fund_Status_ShortName = $XlatShortName

  do Print-EE-Profit-Sharing

  do Get-Employee-Interests
  if not IsNull(&I.PAYMENT_DT)
     do Format-DateTime(&I.PAYMENT_DT, $PAYMENT_DT, {DEFDMY},'','')
  end-if

  if &I.WP_GROSS_AMT <> 0
     do Print-EE-Interests
  end-if
  let $Interest_Status_ShortName = ''

from PS_WP_EE_FUND_DET A, PS_RC_WP_AGRT_RPT R, PS_FAST_SQR_SEC_VW SCRTY
where A.WP_AGREEMENT_ID = R.WP_AGREEMENT_ID
and R.WP_AGREEMENT_ID = &RC.WP_AGREEMENT_ID
and R.OPRID = $prcs_oprid
and R.RUN_CNTL_ID = $prcs_run_cntl_id
and A.PERIOD_ID = R.PERIOD_ID
and R.PERIOD_ID = &RC.PERIOD_ID
[$SecurityClause]
and A.EMPLID = SCRTY.EMPLID
and A.EMPL_RCD = SCRTY.EMPL_RCD
and (A.EMPLID = R.EMPLID OR R.EMPLID = ' ')
and (A.WP_FUND_STATUS = R.WP_FUND_STATUS OR R.WP_FUND_STATUS = ' ')
order by A.WP_AGREEMENT_ID, A.PERIOD_ID, A.EMPLID, A.EMPL_RCD
end-SELECT

  do Print-EE-Grand-Total

end-procedure Get-Employee-Funding

!***********************************************************************
!  Get-Employee-Interests
!***********************************************************************

begin-procedure Get-Employee-Interests
begin-SELECT ON-ERROR=SQL-Error
I.PERIOD_ID                                  &I.PERIOD_ID
I.EMPLID                                     &I.EMPLID
I.EMPL_RCD                                   &I.EMPL_RCD
I.WP_GROSS_AMT                               &I.WP_GROSS_AMT
I.WP_DEDUCTIONS_AMT                          &I.WP_DEDUCTIONS_AMT
I.WP_NET_AMT                                 &I.WP_NET_AMT
I.WP_INTEREST_STATUS                         &I.WP_INTEREST_STATUS
{DATEOUT-PREFIX}I.PAYMENT_DT{DATEOUT-SUFFIX} &I.PAYMENT_DT
I.CURRENCY_CD                                &I.CURRENCY_CD
I.WP_AGREEMENT_ID                            &I.WP_AGREEMENT_ID

  if (&I.WP_INTEREST_STATUS = 'P')
     let #SUM_IN_GROSS_AMT = #SUM_IN_GROSS_AMT + &I.WP_GROSS_AMT
     let #SUM_IN_DED_AMT   = #SUM_IN_DED_AMT   + &I.WP_DEDUCTIONS_AMT
     let #SUM_IN_NET_AMT   = #SUM_IN_NET_AMT   + &I.WP_NET_AMT
  end-if

  move 'WP_INTEREST_STATUS' to $FieldName
  move &I.WP_INTEREST_STATUS to $FieldValue
  do Read-Translate-Table
  let $Interest_Status_ShortName = $XlatShortName

from PS_WP_EE_INTEREST I
where I.WP_AGREEMENT_ID = &RC.WP_AGREEMENT_ID
and I.PERIOD_ID = &RC.PERIOD_ID
and I.EMPLID = &A.EMPLID
and I.EMPL_RCD = &A.EMPL_RCD
order by I.WP_AGREEMENT_ID, I.PERIOD_ID, I.EMPLID, I.EMPL_RCD
end-SELECT
end-procedure Get-Employee-Interests

!***********************************************************************
!  Get-EE-Fund-Data
!***********************************************************************

begin-procedure Get-EE-Fund-Data
begin-SELECT ON-ERROR=SQL-Error
F.CURRENCY_CD           &F.CURRENCY_CD
F.WP_EE_PRO_FACTOR      &F.WP_EE_PRO_FACTOR

from PS_WP_EE_FUND F
where F.WP_AGREEMENT_ID = &RC.WP_AGREEMENT_ID
and F.PERIOD_ID = &RC.PERIOD_ID
and F.EMPLID = &A.EMPLID
and F.EMPL_RCD = &A.EMPL_RCD
end-SELECT
end-procedure Get-EE-Fund-Data

!***********************************************************************
!  Get-Investment-Info
!***********************************************************************

begin-procedure Get-Investment-Info
begin-SELECT ON-ERROR=SQL-Error
INV.WP_INVESTMENT_CD       &INV.WP_INVESTMENT_CD
INV.WP_INVESTMENT_SW       &INV.WP_INVESTMENT_SW
INV.WP_FIN_ORGANISM        &INV.WP_FIN_ORGANISM
INV.INTERNAL_EXTERNAL      &INV.INTERNAL_EXTERNAL
INV.DESCR50                &INV.DESCR50
INV.COUNTRY                &INV.COUNTRY
INV.ADDRESS1               &INV.ADDRESS1
INV.ADDRESS2               &INV.ADDRESS2
INV.ADDRESS3               &INV.ADDRESS3
INV.ADDRESS4               &INV.ADDRESS4
INV.CITY                   &INV.CITY
INV.POSTAL                 &INV.POSTAL
INV.COMMENTS               &INV.COMMENTS
INV.WP_DEF_INVEST_FLG      &INV.WP_DEF_INVEST_FLG

   do Get_Related_WP_AGRT_INVEST(&RC.WP_AGREEMENT_ID, &INV.WP_INVESTMENT_CD)
   if $PSOptions_Language_Cd <> $curr_language_cd
      let $WP_FIN_ORGANISM  = rtrim($WP_AGRT_INVEST-WP_FIN_ORGANISM, ' ')
      let $WP_DESCR50 = rtrim($WP_AGRT_INVEST-DESCR50, ' ')
      let $WP_COMMENTS = rtrim($WP_AGRT_INVEST-COMMENTS, ' ')
   else
      let $WP_FIN_ORGANISM  = rtrim(&INV.WP_FIN_ORGANISM, ' ')
      let $WP_DESCR50 = rtrim(&INV.DESCR50, ' ')
      let $WP_COMMENTS = rtrim(&INV.COMMENTS, ' ')
   end-if
   let $WP_COUNTRY = rtrim(&INV.COUNTRY, ' ')
   let $WP_ADDRESS1 = rtrim(&INV.ADDRESS1, ' ')
   let $WP_ADDRESS2 = rtrim(&INV.ADDRESS2, ' ')
   let $WP_ADDRESS3 = rtrim(&INV.ADDRESS3, ' ')
   let $WP_ADDRESS4 = rtrim(&INV.ADDRESS4, ' ')
   let $WP_CITY = rtrim(&INV.CITY, ' ')
   let $WP_POSTAL = rtrim(&INV.POSTAL, ' ')
   let $WP_DEF_INVEST_FLG = rtrim(&INV.WP_DEF_INVEST_FLG, ' ')
   let $WP_INVESTMENT_SW = rtrim(&INV.WP_INVESTMENT_SW, ' ')
   let $WP_INTERNAL_EXTERNAL = rtrim(&INV.INTERNAL_EXTERNAL, ' ')
   let $WP_INVESTMENT_CD = rtrim(&INV.WP_INVESTMENT_CD, ' ')

from PS_WP_AGRT_INVEST INV
where INV.WP_AGREEMENT_ID = &RC.WP_AGREEMENT_ID
and INV.WP_INVESTMENT_CD = $WP_INVESTMENT_CD
end-SELECT
end-procedure Get-Investment-Info

!***********************************************************************
!  Get-EE-Investment
!***********************************************************************

begin-procedure Get-EE-Investment
begin-SELECT ON-ERROR=SQL-Error
VST.WP_INVESTMENT_CD       &VST.WP_INVESTMENT_CD
VST.WP_INVESTMENT_SW       &VST.WP_INVESTMENT_SW
VST.WP_FIN_ORGANISM        &VST.WP_FIN_ORGANISM
VST.INTERNAL_EXTERNAL      &VST.INTERNAL_EXTERNAL
VST.COUNTRY                &VST.COUNTRY
VST.ADDRESS1               &VST.ADDRESS1
VST.ADDRESS2               &VST.ADDRESS2
VST.ADDRESS3               &VST.ADDRESS3
VST.ADDRESS4               &VST.ADDRESS4
VST.CITY                   &VST.CITY
VST.POSTAL                 &VST.POSTAL
VST.COMMENTS               &VST.COMMENTS

   let $WP_INVESTMENT_CD = rtrim(&VST.WP_INVESTMENT_CD, ' ')
   do Get-Investment-Info
   if $WP_INVESTMENT_SW = '7'
     let $WP_FIN_ORGANISM  = rtrim(&VST.WP_FIN_ORGANISM, ' ')
     let $WP_COUNTRY = rtrim(&VST.COUNTRY, ' ')
     let $WP_ADDRESS1 = rtrim(&VST.ADDRESS1, ' ')
     let $WP_ADDRESS2 = rtrim(&VST.ADDRESS2, ' ')
     let $WP_ADDRESS3 = rtrim(&VST.ADDRESS3, ' ')
     let $WP_ADDRESS4 = rtrim(&VST.ADDRESS4, ' ')
     let $WP_CITY = rtrim(&VST.CITY, ' ')
     let $WP_POSTAL = rtrim(&VST.POSTAL, ' ')
     let $WP_COMMENTS = rtrim(&VST.COMMENTS, ' ')
   end-if
   let $WP_INVESTMENT_SW = rtrim(&VST.WP_INVESTMENT_SW, ' ')
   let $WP_INTERNAL_EXTERNAL = rtrim(&INV.INTERNAL_EXTERNAL, ' ')
   if $WP_DEF_INVEST_FLG = 'Y'
      let #WP_PERSO = 0
   else
      let #WP_PERSO = 1
   end-if

from PS_WP_AGRT_EE_VST VST
where VST.WP_AGREEMENT_ID = &RC.WP_AGREEMENT_ID
and VST.PERIOD_ID = &RC.PERIOD_ID
and VST.EMPLID = &A.EMPLID
and VST.EMPL_RCD = &A.EMPL_RCD
end-SELECT
end-procedure Get-EE-Investment


!***********************************************************************
!  Get-Def-Agrt-Investment
!***********************************************************************

begin-procedure Get-Def-Agrt-Investment
begin-SELECT ON-ERROR=SQL-Error
DEF.WP_INVESTMENT_CD       &DEF.WP_INVESTMENT_CD
DEF.WP_INVESTMENT_SW       &DEF.WP_INVESTMENT_SW
DEF.WP_FIN_ORGANISM        &DEF.WP_FIN_ORGANISM
DEF.INTERNAL_EXTERNAL      &DEF.INTERNAL_EXTERNAL
DEF.DESCR50                &DEF.DESCR50
DEF.COUNTRY                &DEF.COUNTRY
DEF.ADDRESS1               &DEF.ADDRESS1
DEF.ADDRESS2               &DEF.ADDRESS2
DEF.ADDRESS3               &DEF.ADDRESS3
DEF.ADDRESS4               &DEF.ADDRESS4
DEF.CITY                   &DEF.CITY
DEF.POSTAL                 &DEF.POSTAL
DEF.COMMENTS               &DEF.COMMENTS

   do Get_Related_WP_AGRT_INVEST(&RC.WP_AGREEMENT_ID, &DEF.WP_INVESTMENT_CD)
   if $PSOptions_Language_Cd <> $curr_language_cd
      let $WP_FIN_ORGANISM  = rtrim($WP_AGRT_INVEST-WP_FIN_ORGANISM, ' ')
      let $WP_DESCR50 = rtrim($WP_AGRT_INVEST-DESCR50, ' ')
      let $WP_COMMENTS = rtrim($WP_AGRT_INVEST-COMMENTS, ' ')
   else
      let $WP_FIN_ORGANISM  = rtrim(&DEF.WP_FIN_ORGANISM, ' ')
      let $WP_DESCR50 = rtrim(&DEF.DESCR50, ' ')
      let $WP_COMMENTS = rtrim(&DEF.COMMENTS, ' ')
   end-if
   let $WP_INVESTMENT_CD = rtrim(&DEF.WP_INVESTMENT_CD, ' ')
   let $WP_COUNTRY = rtrim(&DEF.COUNTRY, ' ')
   let $WP_ADDRESS1 = rtrim(&DEF.ADDRESS1, ' ')
   let $WP_ADDRESS2 = rtrim(&DEF.ADDRESS2, ' ')
   let $WP_ADDRESS3 = rtrim(&DEF.ADDRESS3, ' ')
   let $WP_ADDRESS4 = rtrim(&DEF.ADDRESS4, ' ')
   let $WP_CITY = rtrim(&DEF.CITY, ' ')
   let $WP_POSTAL = rtrim(&DEF.POSTAL, ' ')
   let $WP_COMMENTS = rtrim($WP_AGRT_INVEST-COMMENTS, ' ')
   let $WP_INVESTMENT_SW = rtrim(&DEF.WP_INVESTMENT_SW, ' ')
   let $WP_INTERNAL_EXTERNAL = rtrim(&DEF.INTERNAL_EXTERNAL, ' ')
   let #WP_PERSO = 0

from PS_WP_AGRT_INVEST DEF
where DEF.WP_AGREEMENT_ID = &RC.WP_AGREEMENT_ID
and DEF.WP_DEF_INVEST_FLG = 'Y'
end-SELECT
end-procedure Get-Def-Agrt-Investment

!***********************************************************************
!  Get Person Name
!***********************************************************************
begin-procedure Get-Person-Name
begin-SELECT ON-ERROR=SQL-Error
PN.NAME       &PN.NAME

  let $NAME = &PN.NAME

from PS_PERSON_NAME PN
where PN.EMPLID = &A.EMPLID
end-SELECT
end-procedure Get-Person-Name


!***********************************************************************
!  Get Agreement Data
!***********************************************************************

begin-procedure Get-Agreement-Data
begin-SELECT ON-ERROR=SQL-Error
AGRT.WP_AGREEMENT_ID      &AGRT.WP_AGREEMENT_ID
AGRT.WP_AGRT_TYPE         &AGRT.WP_AGRT_TYPE
AGRT.DESCRSHORT           &AGRT.DESCRSHORT
AGRT.DESCR50              &AGRT.DESCR50

  let $WP_AGRT_LONG = &AGRT.DESCR50
  let $WP_AGRT_SHORT = &AGRT.DESCRSHORT

  let $WP_AGREEMENT-DESCR50 = $WP_AGRT_LONG
  let $WP_AGREEMENT-DESCRSHORT = $WP_AGRT_SHORT
  do Get_Related_WP_AGREEMENT(&AGRT.WP_AGREEMENT_ID)
  let $WP_AGRT_LONG = $WP_AGREEMENT-DESCR50
  let $WP_AGRT_SHORT = $WP_AGREEMENT-DESCRSHORT

  let $FIELDNAME = 'WP_AGRT_TYPE'
  do Get-XLAT-Values($FIELDNAME, &AGRT.WP_AGRT_TYPE, $AGRT_TYPE_LONG, $AGRT_TYPE_SHORT)

from PS_WP_AGREEMENT AGRT
where AGRT.WP_AGREEMENT_ID = &RC.WP_AGREEMENT_ID
end-SELECT
end-procedure Get-Agreement-Data

!***********************************************************************
!  Get XLAT values
!***********************************************************************
begin-procedure Get-XLAT-Values($FIELDNAME, $FIELDVALUE, :$XLATLONG, :$XLATSHORT)
begin-SELECT ON-ERROR=SQL-Error
{DATEOUT-PREFIX}X.EFFDT{DATEOUT-SUFFIX} &X.EFFDT
X.FIELDNAME       &X.FIELDNAME
X.FIELDVALUE      &X.FIELDVALUE
X.XLATLONGNAME    &X.XLATLONGNAME
X.XLATSHORTNAME   &X.XLATSHORTNAME

  let $XLATLONG = &X.XLATLONGNAME
  let $XLATSHORT = &X.XLATSHORTNAME
  move &X.FIELDNAME   to $FieldName
  move &X.FIELDVALUE  to $FieldValue
  do Read-Translate-Table
  let $XLATLONG  = $XlatLongName
  let $XLATSHORT = $XlatShortName

from PSXLATITEM X
where X.FIELDNAME = $FIELDNAME
and X.FIELDVALUE = $FIELDVALUE
!and X.EFFDT = (select max(X1.EFFDT) from PSXLATITEM X1 where X1.FIELDNAME = X.FIELDNAME and X1.FIELDVALUE = X.FIELDVALUE and X1.EFFDT <= {DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX})
and X.EFF_STATUS = 'A'
end-SELECT
end-procedure Get-XLAT-Values

!***********************************************************************
!  Prints the Header of the report
!***********************************************************************
begin-procedure Print-Common-Header

  print $WP_AGRT_TYPE_LBL            (+1,{C01})
  print $AGRT_TYPE_SHORT               (,{C02})
  print $AGRT_TYPE_LONG                (,{C03})
  print $WP_AGRT_NAME_LBL            (+1,{C01})
  print $WP_AGRT_SHORT                 (,{C02})
  print $WP_AGRT_LONG                  (,{C03})
  do Get-Def-Agrt-Investment
  do Print-Investment-Options

end-procedure Print-Common-Header

!***********************************************************************
!  Prints the Header of the report
!***********************************************************************
begin-procedure Print-Period-Header

  print $PERIOD_ID_LBL               (+1,{C01})
  print &RC.PERIOD_ID                  (,{C02})

end-procedure Print-Period-Header

!***********************************************************************
!  Prints Employee Profit Sharing Header
!***********************************************************************
begin-procedure Print-EE-WP-Header

  print '*'                     (+1,{C01}, 165) FILL
  print $EMPLID_LBL             (+1,{C01})
  print $NAME_LBL                 (,{C02})
  print $EMPL_RCD_LBL             (,{C03})
  print $WP_WP_GROSS_AMT_LBL      (,{C05})
  print $WP_WP_DED_AMT_LBL        (,{C06})
  print $WP_WP_NET_AMT_LBL        (,{C07})
  print $WP_STATUS_LBL            (,{C08})
  print $PAYMENT_DT_LBL           (,{C09})
  print $CURRENCY_LBL             (,{C10})
  print $PRORATE_LBL              (,{C11})

end-procedure Print-EE-WP-Header

!***********************************************************************
!***********************************************************************

#include 'stdapi.sqc'    !Routines to update run status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'readxlat.sqc'  !Routines to read xlat values
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
#Include 'datemath.sqc'
#include 'hrsecty.sqc'
