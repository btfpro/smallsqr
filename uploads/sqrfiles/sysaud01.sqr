! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! SYSAUDIT: PeopleTools Audit Report                                   *
!           This program will check your PeopleTools database objects  *
!           for inconsistancies which will cause your PeopleSoft       *
!           application to be unstable or corrupt.                     *
!           Options are set in the PeopleTools Utilities menu.         *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                  /pt_rep
!                                                                      *
!***********************************************************************

#define REPORTID         'SYSAUD01'

#include 'setenv.sqc'        ! Set environment

Begin-setup
#include 'ptset01.sqc'       ! Init printer and page size
    declare-variable
#ifdef debugd
        date    $StrDateTime
        date    $EndDateTime
        Decimal #ElapsedTime(3)
        integer #rowstoadd
#endif
    end-declare
end-setup

!----------------------------------------------------------------------!
! Report:    SYSAUDIT: PS System Table Audit Report                    !
! Descr:     PeopleSoft System table audits against all PS tables.     !
!----------------------------------------------------------------------!
begin-report
    do Initialize
    do Report
    do Terminate
end-report

!----------------------------------------------------------------------!
begin-procedure Initialize   ! Get Source Database Information
!----------------------------------------------------------------------!
    do Init-DateTime
    do Init-Number

    do Define-Prcs-Vars
    do Get-Run-Control-Parms
    do Get-Current-DateTime

    move {REPORTID} to $ReportID
    move 'PS System Table Audit Report' to $ReportTitle
    move '' to $AuditDescr
    move 'N' to $record_found

#ifdef debugx
    show 'Report Title: ' $ReportTitle
#endif


create-array name=printarray size=8 field=sysaudhdr:char field=start:number field=length:number

begin-select

AUDIT_SW

    move 'Y' to $record_found
    let $AUDIT_CONQRS_SW  = SUBSTR(&AUDIT_SW, 20, 1)
    let $AUDIT_FEED_SW    = SUBSTR(&AUDIT_SW, 21, 1)
    let $AUDIT_SEARCH_SW  = SUBSTR(&AUDIT_SW, 22, 1)
    let $AUDIT_RELCONT_SW = SUBSTR(&AUDIT_SW, 23, 1)        
    let $AUDIT_PIVOT_SW = SUBSTR(&AUDIT_SW, 23, 1)
    #ifdef debugd
        show '&Audit_sw: ' &Audit_sw
    #end-if

    exit-select

FROM PS_RUN_CNTL_SYSAUD
WHERE RUN_CNTL_ID = $prcs_run_cntl_id

end-select

    if $record_found <> 'Y'

        move '1'                to  $audit_conqrs_sw
        move '1'                to  $audit_feed_sw
        move '1'                to  $audit_search_sw
        move '1'                to  $audit_relcont_sw
        move '1'                to  $audit_pivot_sw
    end-if


    do Truncate-PSRECFIELDDB

end-procedure

!----------------------------------------------------------------------!
begin-procedure Terminate
!----------------------------------------------------------------------!

    if #prcs_process_instance > 0
        do Update-Prcs-Run-Status
    end-if

    do Reset

end-procedure

!----------------------------------------------------------------------!
begin-procedure Report
!----------------------------------------------------------------------!

    do Load-PSRECFIELDDB             ! Load PSRECFIELDDB

if #DuplicateRecordsFound = 0

    move 1 to #rowstoadd            !By default, only 1 row is added for an exception.  Some audits are bigger

    if $audit_conqrs_sw = '1'
       do SYSCONQRS-Main
    end-if

    if $audit_feed_sw = '1'
       do SYSFEED-Main
    end-if

    if $audit_search_sw = '1'
        do SYSSEARCH-Main
    end-if
    
    if $audit_relcont_sw = '1'
        do SYSRELCONTENT-Main
    end-if         

    if $audit_pivot_sw = '1'
        do SYSPIVOT-Main
    end-if 
end-if

end-procedure

    #include 'syslodrf.sqc'      ! Load PSRECFIELDDB
    #include 'sysconqr.sqc'      ! Connected Query Edits
    #include 'sysfeed.sqc'       ! Feed Edits
    #include 'syssrch.sqc'     ! Search Edits
    #include 'sysrc.sqc'       ! Related Content Edits    
    #include 'syspivot.sqc'       ! Pivot Grid Edits

!----------------------------------------------------------------------!
begin-heading 4
!----------------------------------------------------------------------!
    #define ShowDatabaseName
    #define ShowPlatformDetail
    #include 'pthdg01.sqc'
end-heading

!----------------------------------------------------------------------!
! Procedure: Print Summary Record                                      !
! Descr:     Print the Summary record for each Audit                   !
!----------------------------------------------------------------------!
begin-procedure PrintSummaryRecord
    next-listing need=10
    alter-printer
        Point-Size=10

    graphic (+2,1,#sqr-max-columns) box 1 2 2

    print $AuditTitle                      (0,1)

    if $ErrorFound = 'Y'
        print 'Result: Exception(s) Found' (0,80) bold
    else
        print 'Result: OK'                 (0,80) bold
    end-if

    alter-printer
        Point-Size=7.2

end-procedure


!----------------------------------------------------------------------!
! Procedure: Print Section Heading                                     !
! Descr:     Print the Column Headings when exceptions are found or on !
!            a new page                                                !
!----------------------------------------------------------------------!
begin-procedure PrintSectionHeadings
    if $DetailErrFound = 'Y'
        if $ErrorFound = 'N'
            let $ErrorFound = 'Y'
            do PrintSummaryRecord
        end-if

        if ((#current-line + #rowstoadd) > #sqr-max-lines)
            move 'Y' to $PageBreak
        else
            move 'N' to $PageBreak
        end-if

        let #wrapval= #sqr-max-columns - 15
        let #contval= #sqr-max-columns - 11
        next-listing need=10
        print $AuditDescr                 (+2,1) wrap #wrapval 3 bold
        if $pagebreak = 'Y'
            print '(continued)'           (0,#contval) bold
        end-if

        move 0 to #n
        print ' ' (+1,0)
        while #n < #numofhdr
            get $SysAudHdr #Start #Length from printarray(#n)
            print $SysAudHdr              (+1,#Start) Bold
            print '-'                     (+1,#Start,#Length) fill
            print ' '                     (-2,1)
            let #n = #n + 1
        end-while

        print ' '                     (+2,1)
        let $pagebreak = 'N'
    end-if
end-procedure

!----------------------------------------------------------------------!
! Procedure: Print Section Heading Large                               !
! Descr:     Print the Column Headings when exceptions are found or on !
!            a new page. Use this function if the fields do not fit on !
!            1 page, width wise.                                       !
!----------------------------------------------------------------------!
begin-procedure PrintSectionHeadingsLarge
    if $DetailErrFound = 'Y'
        if $ErrorFound = 'N'
            let $ErrorFound = 'Y'
            do PrintSummaryRecord
        end-if

        let #wrapval= #sqr-max-columns - 15
        let #contval= #sqr-max-columns - 11
        let #hdroffset = #numofhdr + 2
        next-listing need=#hdroffset

        if $firstiteration = 'Y'
            let $firstiteration = 'N'
            print $AuditDescr                 (+1,1) bold
            print ' '                         (+1,0)
        end-if

        if ((#breakpos + (#rowstoadd * (#numofhdr + 2))) > (#sqr-max-lines - 4))
            move 'Y' to $PageBreak
        else
            move 'N' to $PageBreak
        end-if

        if $pagebreak = 'Y'
            print $AuditDescr             (+1,1) wrap #wrapval 3 bold
            print '(continued)'           (0,#contval) bold
            print ' '                     (+1,1)
        end-if

        move 0 to #n

        while #n < #numofhdr
            get $SysAudHdr #Start #Length from printarray(#n)
            print $SysAudHdr              (+1,1) Bold
            print ' '                     (0,1)
            let #n = #n + 1
        end-while

        let $undrlne = '-------------------------------------------------------'
        print  $undrlne (+1,1)


        let #breakpos = #current-line

        let #Tnumofhdr = (#numofhdr * -1) - 1
        if #Tnumofhdr < 0
            let #Tnumofhdr = 1
        end-if

        print ' ' (+#Tnumofhdr,0)

        let $pagebreak = 'N'

     end-if
end-procedure


!----------------------------------------------------------------------!
! Procedure: End-Section                                               !
! Descr:     Evaluate result of SQL audit and print status.            !
!----------------------------------------------------------------------!
begin-procedure End-Section
   if #rows > 0
       print #rows                       (+2,#Start1) edit 99,999
       print ' Total Rows'               ()
   end-if
   do Commit-Transaction
end-procedure



!----------------------------------------------------------------------!
! Procedure: RetrieveColumnLength                                      !
! Descr:     Given a Table and Field, Returns Column Length and Type   !
!             If Type is not number, then set to Char (Even for Dates) !
!----------------------------------------------------------------------!
begin-procedure RetrieveColumnLength($TableName,$FieldName,:#FieldLen,:$FieldType)

    let $_SQL-STATEMENT = $AuditDescr || ': RetrieveColumnLength'

    let #FieldLen = 0
    let $FieldType = ''


! Strip PS_ off TableNames that begin with PS_

    let $PSCheck = UPPER(substr($Tablename,1,3))
    if $PSCheck = 'PS_'
        let #len = length($Tablename) - 3
        let $TableName = substr($Tablename,4,#len)
    end-if

Begin-Select On-Error=SQL-Error    !Determine Column length
B.LENGTH
B.FIELDTYPE
    let #Fieldlen = &B.LENGTH
    if &B.FIELDTYPE = 2 or &B.FIELDTYPE = 3
        let $FieldType = 'NUMBER'
    else   !0=Char,1=long,4=Date,5=Time,6=DateTime,8=Image
        let $FieldType = 'CHAR'
    end-if
    exit-select
FROM PSRECFIELD A, PSDBFIELD B
WHERE A.FIELDNAME = B.FIELDNAME
  AND A.RECNAME = $TableName
  AND A.FIELDNAME = $FieldName
end-select

    if $FieldType =  ''
        show 'Row Not found in PSDBFIELD for: ' $Fieldname ' in Table: ' $TableName
    end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: Rpt-SQL-Error                                             !
! Descr:     Print SQL error status and terminate if limit exceeded.   !
!----------------------------------------------------------------------!
begin-procedure Rpt-SQL-Error
    let $SQL-STATEMENT = $AuditDescr
    do SQL-Error
end-procedure

#include 'reset.sqc'         ! Reset printer
#include 'datetime.sqc'      ! Routines for date and time formatting
#include 'number.sqc'        ! Routines to format numbers
#include 'prcsapi.sqc'       ! Update Process Request API

