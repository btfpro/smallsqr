! **********************************************************************!
!  This software and related documentation are provided under a         !
!  license agreement containing restrictions on use and                 !
!  disclosure and are protected by intellectual property                !
!  laws. Except as expressly permitted in your license agreement        !
!  or allowed by law, you may not use, copy, reproduce,                 !
!  translate, broadcast, modify, license, transmit, distribute,         !
!  exhibit, perform, publish or display any part, in any form or        !
!  by any means. Reverse engineering, disassembly, or                   !
!  decompilation of this software, unless required by law for           !
!  interoperability, is prohibited.                                     !
!  The information contained herein is subject to change without        !
!  notice and is not warranted to be error-free. If you find any        !
!  errors, please report them to us in writing.                         !
!                                                                       !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.              !
!  All Rights Reserved.                                                 !
! **********************************************************************!


!                                                                       !
!***********************************************************************
! SYSRELATEDCONTENT: PS Related Content report                         *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

#define     portal_name         'Portal Name'
#define     portal_obj_name     'Portal Object Name'
#define     service_id          'Service ID'
#define     instance_id         'Instance ID'

#define     portal_len           12
#define     portal_obj_len       18
#define     service_id_len       11
#define     instance_id_len      12

#define     start_pos1           1
#define     start_pos2           31
#define     start_pos3           62
#define     start_pos4           93
#define     start_pos5           115

#define     pname_hdr           {portal_name}      {start_pos1} {portal_len}           into printarray(0)
#define     pname_obj_hdr       {portal_obj_name}  {start_pos2} {portal_obj_len}       into printarray(1)
#define     service_hdr         {service_id}       {start_pos3} {service_id_len}       into printarray(2)
#define     instance_hdr        {instance_id}      {start_pos4} {instance_id_len}      into printarray(3)


!----------------------------------------------------------------------!
! Procedure: SYSRELCONTENT-Main                                        !
!----------------------------------------------------------------------!

begin-procedure SYSRELCONTENT-Main
    let $ErrorFound = 'N'
    let $AuditTitle = 'Related Content Definition Audit'
    let #Start1      = 1

    do RELCONTENT-01   ! Verify the PSVERISON table for the managed Objects 
    do RELCONTENT-02   ! Verify the PSLOCK table for the managed Objects 
    do RELCONTENT-03   ! Verify required Service Definition for Service Config is present
    do RELCONTENT-04   ! ind orphaned Service Configurations (missing menu entries)
    do RELCONTENT-05   ! Find orphaned mapped fields
    do RELCONTENT-06   ! Find empty root folders
    do RELCONTENT-07   ! Find menus with no folders
    do RELCONTENT-08   ! Missing Application packages for Service Definitions
    do RELCONTENT-09   ! Find orphaned links 
    do RELCONTENT-10   ! Find orphaned folders
    do RELCONTENT-11   ! Find menu entries pointing to non existing service configs
    do RELCONTENT-12   ! Missing Application packages for Service Definitions

    if $ErrorFound = 'N'
        do PrintSummaryRecord
    end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: RELCONTENT-01                                             !
! Descr    : Query the PSVERISON table for the managed Objects         !
!----------------------------------------------------------------------!
begin-procedure RELCONTENT-01
   move 0 to #rows
   let $AuditDescr = '(RELCONTENT-01) Query the PSVERISON table for managed'
      || ' Objects Entries: RCSCM, RCSDM, RCMTM and SCNFM'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let $DetailErrFound  = 'N'
   let $Column1Name     = 'Message'
   let #Column1len      = lengthp($Column1Name)
   let #numofhdr        =  1

   put $Column1Name {start_pos1} #Column1len into printarray(0)

begin-SELECT on-Error=Rpt-SQL-Error
COUNT(*)        &Rel01_Field1

   if(&Rel01_Field1 <> 4)
     if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
                move 'Y' to $DetailErrFound
                do PrintSectionHeadings
     end-if
     let #rows = #rows +1
     let $Rel01_Message1 =  'PSVERSION contains only '
     let $Rel01_Message2 =  'row(s). There should be 4 entries (RCSCM, RCSDM, RCMTM and SCNFM) for Related Content.'
     print $Rel01_Message1        (+1, {start_pos1})
     print &Rel01_Field1          (0, 26)
     print $Rel01_Message2        (0, 28)
     
   end-if
 
FROM PSVERSION 
WHERE OBJECTTYPENAME in ('RCSCM', 'RCSDM','RCMTM','SCNFM')

end-SELECT      

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: RELCONTENT-02                                             !
! Descr    : Query the PSLOCK table for the managed Objects            !
!----------------------------------------------------------------------!
begin-procedure RELCONTENT-02
   move 0 to #rows
   let $AuditDescr = '(RELCONTENT-02) Query the PSLOCK table for managed'
      || ' Objects Entries: RCSCM, RCSDM, RCMTM and SCNFM'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let $DetailErrFound  =  'N'
   let $Column1Name     =  'Message'
   let #Column1len      =  lengthp($Column1Name)
   let #numofhdr        =  1
  
   put $Column1Name {start_pos1} #Column1len into printarray(0)

begin-SELECT on-Error=Rpt-SQL-Error
COUNT(*)        &Rel02_Field1

   if(&Rel02_Field1 <> 4)
      if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
                 move 'Y' to $DetailErrFound
                 do PrintSectionHeadings
      end-if
      let #rows = #rows +1
      let $Rel02_Message1 =  'PSLOCK contains only '
      let $Rel02_Message2 =  'row(s). There should be 4 entries (RCSCM, RCSDM, RCMTM and SCNFM) for Related Content.'
      print $Rel02_Message1        (+1, {start_pos1})
      print &Rel02_Field1          (0, 22)
      print $Rel02_Message2        (0, 24)          
      
   end-if

FROM PSLOCK 
WHERE OBJECTTYPENAME in ('RCSCM', 'RCSDM','RCMTM','SCNFM')

end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: RELCONTENT-03                                             !
! Descr    : Verify required Service Definition for                    !
!            Service Config is present                                 !
!----------------------------------------------------------------------!
begin-procedure RELCONTENT-03
   move 0 to #rows
   let $AuditDescr = '(RELCONTENT-03) Service Configuration is missing the following Service Definitions:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #numofhdr        =  2
   
   let #Start1          =  1
   let #Start2          =  20

   put '       '        #Start1 20 into printarray(0)
   put 'Values'         #Start2 30 into printarray(1)

begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.PORTAL_NAME       &Rel03_Field1
A.PORTAL_OBJNAME    &Rel03_Field2  
A.PTCS_SERVICEID    &Rel03_Field3  
A.PTCS_INSTANCEID   &Rel03_Field4 

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1
   
   print 'Portal Name  :'               (+1,1) BOLD
   print &Rel03_Field1                  (0,20)
   print 'Portal Object:'               (+1,1) BOLD
   print &Rel03_Field2                  (0,20)
   print 'Service ID   :'               (+1,1) BOLD
   print &Rel03_Field3                  (0,20)
   print 'Instance ID  :'               (+1,1) BOLD
   print &Rel03_Field4                  (0,20)
   print '' (+1,1)

FROM PSPTCSSRVCONF A
WHERE A.PTCS_SERVICEID NOT IN (SELECT B.PTCS_SERVICEID FROM PSPTCSSRVDEFN B)

END-SELECT
   if (#rows > 0)
      print ' '                     (+1,1)
   end-if

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: RELCONTENT-04                                             !
! Descr    : Find orphaned service configs  (missing menu entries)     ! 
! Action   : Make a change on the manage service conf page and         !
!            save to add missing menu metadata)                        !                         
!----------------------------------------------------------------------!
begin-procedure RELCONTENT-04
   move 0 to #rows
   let $AuditDescr = '(RELCONTENT-04) Find orphaned Service Configurations (missing menu entries):'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #numofhdr        =  2
   let #Start1          =  1
   let #Start2          =  20
   
   put '       '        #Start1 20 into printarray(0)
   put 'Values'         #Start2 30 into printarray(1)


begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.PORTAL_NAME       &Rel04_Field1
A.PORTAL_OBJNAME    &Rel04_Field2  
A.PTCS_SERVICEID    &Rel04_Field3  
A.PTCS_INSTANCEID   &Rel04_Field4 

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print 'Portal Name  :'               (+1,1) BOLD
   print &Rel04_Field1                  (0,20)
   print 'Portal Object:'               (+1,1) BOLD
   print &Rel04_Field2                  (0,20)
   print 'Service ID   :'               (+1,1) BOLD
   print &Rel04_Field3                  (0,20)
   print 'Instance ID  :'               (+1,1) BOLD
   print &Rel04_Field4                  (0,20)
   print '' (+1,1)

FROM PSPTCSSRVCONF A 
WHERE NOT EXISTS (SELECT B.PORTAL_NAME,B.PORTAL_OBJNAME,B.PTCS_SERVICEID,B.PTCS_INSTANCEID
                        FROM PSPTCS_MNULINKS B 
                        WHERE A.PORTAL_NAME      = B.PORTAL_NAME 
                        AND   A.PORTAL_OBJNAME   = B.PORTAL_OBJNAME 
                        AND   A.PTCS_SERVICEID   = B.PTCS_SERVICEID 
                        AND   A.PTCS_INSTANCEID  = B.PTCS_INSTANCEID)
END-SELECT

   if (#rows > 0)
         print ' '                     (+1,1)
   end-if

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: RELCONTENT-05                                             !
! Descr    : Find orphaned mapped fields                               !
!                                                                      !
!----------------------------------------------------------------------!
begin-procedure RELCONTENT-05
   move 0 to #rows
   let $AuditDescr = '(RELCONTENT-05) Find orphaned mapped fields:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'

   let $Column5Name     = 'Parameter Name'
   let #Column5len      = lengthp($Column5Name) 
   let #numofhdr        =  2
   let #Start1          =  1
   let #Start2          =  20
      
   put '       '        #Start1 20 into printarray(0)
   put 'Values'         #Start2 30 into printarray(1)

begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.PORTAL_NAME           &Rel05_Field1
A.PORTAL_OBJNAME        &Rel05_Field2  
A.PTCS_SERVICEID        &Rel05_Field3  
A.PTCS_INSTANCEID       &Rel05_Field4 
A.PTCS_PARAMETERNAME    &Rel05_Field5 

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print 'Portal Name   :'              (+1,1) BOLD
   print &Rel05_Field1                  (0,20)
   print 'Portal Object :'              (+1,1) BOLD
   print &Rel05_Field2                  (0,20)
   print 'Service ID    :'              (+1,1) BOLD
   print &Rel05_Field3                  (0,20)
   print 'Instance ID   :'              (+1,1) BOLD
   print &Rel05_Field4                  (0,20)
   print 'Parameter Name:'              (+1,1) BOLD
   print &Rel05_Field5                  (0,20)
   print '' (+1,1)

FROM PSPTCS_MAPFLDS A 
WHERE A.PTCS_SERVICEID NOT IN (SELECT B.PTCS_SERVICEID
                                      FROM PSPTCSSRVCONF B)

END-SELECT

   if (#rows > 0)
         print ' '                     (+1,1)
   end-if
   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: RELCONTENT-06                                             !
! Descr    : Find empty root folders                                   !
! Action   : delete folder                                             !
!                                                                      !
!----------------------------------------------------------------------!
begin-procedure RELCONTENT-06
   move 0 to #rows
   let $AuditDescr = '(RELCONTENT-06) Find empty root folders:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'

   let #numofhdr        =  2
   let #Start1          =  1
   let #Start2          =  20
      
   put '       '        #Start1 20 into printarray(0)
   put 'Values'         #Start2 30 into printarray(1)


begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.PORTAL_NAME       &Rel06_Field1
A.PORTAL_OBJNAME    &Rel06_Field2  
A.PTCS_MENUID       &Rel06_Field3  
A.PTCS_FOLDERID     &Rel06_Field4 

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print 'Portal Name  :'               (+1,1) BOLD
   print &Rel06_Field1                  (0,20)
   print 'Portal Object:'               (+1,1) BOLD
   print &Rel06_Field2                  (0,20)
   print 'Menu ID      :'               (+1,1) BOLD
   print &Rel06_Field3                  (0,20)
   print 'Folder ID    :'               (+1,1) BOLD
   print &Rel06_Field4                  (0,20)
   print '' (+1,1)

FROM PSPTCS_MNUFLDRS A 
WHERE A.PTCS_FOLDERID = A.PTCS_PRNT_FOLDERID 
      AND NOT EXISTS (SELECT B.PTCS_FOLDERID 
                        FROM  PSPTCS_MNULINKS B 
                        WHERE A.PORTAL_NAME    = B.PORTAL_NAME 
                        AND   A.PORTAL_OBJNAME = B.PORTAL_OBJNAME 
                        AND   A.PTCS_MENUID    = B.PTCS_MENUID 
                        AND   A.PTCS_FOLDERID  = B.PTCS_FOLDERID)

END-SELECT

   if (#rows > 0)
         print ' '                     (+1,1)
   end-if
   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure



!----------------------------------------------------------------------!
! Procedure: RELCONTENT-07                                             !
! Descr    : Find menus with no folders                                ! 
! Action   : delete empty menus                                        !
!                                                                      !
!----------------------------------------------------------------------!
begin-procedure RELCONTENT-07
   move 0 to #rows
   let $AuditDescr = '(RELCONTENT-07) Find menus with no folders:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #numofhdr        =  2

   put '       '        #Start1 20 into printarray(0)
   put 'Values'         #Start2 30 into printarray(1)
   

begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.PORTAL_NAME       &Rel07_Field1
A.PORTAL_OBJNAME    &Rel07_Field2  
A.PTCS_MENUID       &Rel07_Field3  


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print 'Portal Name  :'               (+1,1) BOLD
   print &Rel07_Field1                  (0,20)
   print 'Portal Object:'               (+1,1) BOLD
   print &Rel07_Field2                  (0,20)
   print 'Menu ID      :'               (+1,1) BOLD
   print &Rel07_Field3                  (0,20)
   print '' (+1,1)
   

FROM PSPTCS_MENU_TBL A 
WHERE NOT EXISTS (SELECT B.PORTAL_NAME,B.PORTAL_OBJNAME,B.PTCS_MENUID 
                         FROM PSPTCS_MNUFLDRS B 
                         WHERE A.PORTAL_NAME     = B.PORTAL_NAME 
                         AND   A.PORTAL_OBJNAME  = B.PORTAL_OBJNAME 
                         AND   A.PTCS_MENUID     = B.PTCS_MENUID)

END-SELECT

   if (#rows > 0)
      print ' '                     (+1,1)
   end-if
   
   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: RELCONTENT-08                                             !
! Descr    : Missing Application packages for Service Definitions      !
! Action   : Import the required App packages                          !
!                                                                      !
!----------------------------------------------------------------------!
begin-procedure RELCONTENT-08
   move 0 to #rows
   let $AuditDescr = '(RELCONTENT-08) Missing Application packages for Service Definitions:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          =  20
   let #numofhdr        =  2

   put '       '        #Start1 20 into printarray(0)
   put 'Values'         #Start2 30 into printarray(1)

begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.PTCS_SERVICEID       &Rel08_Field1
A.PTCS_SERVICENAME     &Rel08_Field2  
A.PACKAGEROOT          &Rel08_Field3  
A.QUALIFYPATH          &Rel08_Field4 
A.APPCLASSID           &Rel08_Field5

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1
   
   print 'Service ID  :'                (+1,1) BOLD
   print &Rel08_Field1                  (0,20)
   print 'Service Name:'                (+1,1) BOLD
   print &Rel08_Field2                  (0,20)
   print 'Package Root:'                (+1,1) BOLD
   print &Rel08_Field3                  (0,20)
   print 'Qualify Path:'                (+1,1) BOLD
   print &Rel08_Field4                  (0,20)
   print 'App Class ID:'                (+1,1) BOLD
   print &Rel08_Field5                  (0,20)
   print '' (+1,1)
   


FROM PSPTCSSRVDEFN A 
WHERE PTCS_SERVICEURLTYP = 'UAPC' AND 
      A.APPCLASSID   NOT  IN (SELECT B.APPCLASSID FROM PSAPPCLASSDEFN B
                                WHERE A.APPCLASSID  = B.APPCLASSID 
                                AND   A.PACKAGEROOT = B.PACKAGEROOT 
                                AND   A.QUALIFYPATH = B.QUALIFYPATH)

END-SELECT

   if (#rows > 0)
       print ' '                     (+1,1)
   end-if
   
   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: RELCONTENT-09                                             !
! Descr    : Find orphaned links                                       ! 
! Action   : Delete links                                              !
!                                                                      !
!----------------------------------------------------------------------!
begin-procedure RELCONTENT-09
   move 0 to #rows
   let $AuditDescr = '(RELCONTENT-09) Find orphaned Menu links:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1             =   1
   let #Start2             =   20
   let #numofhdr           =   2

   put '       '        #Start1 20 into printarray(0)
   put 'Values'         #Start2 30 into printarray(1) 

begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.PORTAL_NAME       &Rel09_Field1
A.PORTAL_OBJNAME    &Rel09_Field2  
A.PTCS_SERVICEID    &Rel09_Field3  
A.PTCS_INSTANCEID   &Rel09_Field4 
A.PTCS_MENUID       &Rel09_Field5  

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1
   print 'Portal Name   :'              (+1,1) BOLD
   print &Rel09_Field1                  (0,20)
   print 'Portal Object :'              (+1,1) BOLD
   print &Rel09_Field2                  (0,20)
   print 'Service ID    :'              (+1,1) BOLD
   print &Rel09_Field3                  (0,20)
   print 'Instance ID   :'              (+1,1) BOLD
   print &Rel09_Field4                  (0,20)
   print 'Menu ID       :'              (+1,1) BOLD
   print &Rel09_Field5                  (0,20)
   print '' (+1,1)

  
FROM PSPTCS_MNULINKS A 
WHERE A.PTCS_FOLDERID NOT IN 
   (SELECT B.PTCS_FOLDERID 
        FROM PSPTCS_MNUFLDRS B 
        WHERE A.PORTAL_NAME    = B.PORTAL_NAME 
        AND   A.PORTAL_OBJNAME = B.PORTAL_OBJNAME 
        AND   A.PTCS_MENUID    = B.PTCS_MENUID)

END-SELECT

   if (#rows > 0)
   print ' '                     (+1,1)
   end-if
   
   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: RELCONTENT-10                                             !
! Descr    : Find orphaned folders                                     ! 
! Action   : Delete folders                                            !
!                                                                      !
!----------------------------------------------------------------------!
begin-procedure RELCONTENT-10
   move 0 to #rows
   let $AuditDescr = '(RELCONTENT-10) Find orphaned folders :'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          =  20
   let #numofhdr        =  2

   put '       '        #Start1 20 into printarray(0)
   put 'Values'         #Start2 30 into printarray(1)


begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.PORTAL_NAME       &Rel10_Field1
A.PORTAL_OBJNAME    &Rel10_Field2  
A.PTCS_MENUID       &Rel10_Field3  
A.PTCS_FOLDERID     &Rel10_Field4  


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print 'Portal Name   :'              (+1,1) BOLD
   print &Rel10_Field1                  (0,20)
   print 'Portal Object :'              (+1,1) BOLD
   print &Rel10_Field2                  (0,20)
   print 'Menu ID       :'              (+1,1) BOLD
   print &Rel10_Field3                  (0,20)
   print 'Folder ID     :'              (+1,1) BOLD
   print &Rel10_Field4                  (0,20)
   print '' (+1,1)
  

FROM PSPTCS_MNUFLDRS A 
WHERE A.PTCS_MENUID NOT IN 
        (SELECT B.PTCS_MENUID 
         FROM   PSPTCS_MENU_TBL B 
         WHERE  A.PORTAL_NAME     = B.PORTAL_NAME 
         AND    A.PORTAL_OBJNAME  = B.PORTAL_OBJNAME)
END-SELECT

   if (#rows > 0)
      print ' '                     (+1,1)
   end-if
   
   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: RELCONTENT-11                                             !
! Descr    : Find Menu entries pointing to non existing                !
!               Service Configurations                                 !
! Action   : delete menu entries                                       !
!                                                                      !
!----------------------------------------------------------------------!
begin-procedure RELCONTENT-11
   move 0 to #rows
   let $AuditDescr = '(RELCONTENT-11) Find Menu entries pointing to non existing Service Configurations:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          =  20
   let #numofhdr        =  2

   put '       '        #Start1 20 into printarray(0)
   put 'Values'         #Start2 30 into printarray(1)

begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.PORTAL_NAME       &Rel11_Field1
A.PORTAL_OBJNAME    &Rel11_Field2  
A.PTCS_SERVICEID    &Rel11_Field3 
A.PTCS_INSTANCEID   &Rel11_Field4
A.PTCS_MENUID       &Rel11_Field5 
A.PTCS_FOLDERID     &Rel11_Field6 

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print 'Portal Name   :'              (+1,1) BOLD
   print &Rel11_Field1                  (0,20)
   print 'Portal Object :'              (+1,1) BOLD
   print &Rel11_Field2                  (0,20)
   print 'Service ID    :'              (+1,1) BOLD
   print &Rel11_Field3                  (0,20)
   print 'Instance ID   :'              (+1,1) BOLD
   print &Rel11_Field4                  (0,20)
   print 'Menu ID       :'              (+1,1) BOLD
   print &Rel11_Field5                  (0,20)
   print 'Folder ID     :'              (+1,1) BOLD
   print &Rel11_Field6                  (0,20)
   print '' (+1,1)



FROM PSPTCS_MNULINKS A 
WHERE NOT EXISTS (
                   SELECT B.PORTAL_NAME, B.PORTAL_OBJNAME, B.PTCS_SERVICEID, B.PTCS_INSTANCEID  
                   FROM PSPTCSSRVCONF B 
                   WHERE      A.PORTAL_NAME      = B.PORTAL_NAME 
                        AND   A.PORTAL_OBJNAME   = B.PORTAL_OBJNAME 
                        AND   A.PTCS_SERVICEID   = B.PTCS_SERVICEID 
                        AND   A.PTCS_INSTANCEID  = B.PTCS_INSTANCEID)
END-SELECT

   if (#rows > 0)
      print ' '                     (+1,1)
   end-if
   
   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: RELCONTENT-12                                             !
! Descr    : Missing Application packages PCode for Service Definitions!
! Action   : Import the required App packages                          !
!                                                                      !
!----------------------------------------------------------------------!
begin-procedure RELCONTENT-12
   move 0 to #rows
   let $AuditDescr = '(RELCONTENT-12) Missing Application packages PeopleCode for Service Definitions:'
      
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          =  20
   let #numofhdr        =  2

   put '       '        #Start1 20 into printarray(0)
   put 'Values'         #Start2 30 into printarray(1)


begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.PTCS_SERVICEID       &Rel12_Field1
A.PTCS_SERVICENAME     &Rel12_Field2
A.PACKAGEROOT          &Rel12_Field3
A.QUALIFYPATH          &Rel12_Field4 
A.APPCLASSID           &Rel12_Field5

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1
   
   print 'Service ID  :'               (+1,1) BOLD
   print &Rel12_Field1                  (0,20)
   print 'Service Name:'               (+1,1) BOLD
   print &Rel12_Field2                  (0,20)
   print 'Package Root:'               (+1,1) BOLD
   print &Rel12_Field3                  (0,20)
   print 'Qualify Path:'               (+1,1) BOLD
   print &Rel12_Field4                  (0,20)
   print 'App Class ID:'               (+1,1) BOLD
   print &Rel12_Field5                  (0,20)
   print '' (+1,1)


FROM  PSPTCSSRVDEFN A 
WHERE PTCS_SERVICEURLTYP= 'UAPC' 
AND NOT  EXISTS (
        SELECT * FROM PSPCMPROG B 
           WHERE OBJECTID1      = 104 
           AND   OBJECTID2      = 107 
           AND   OBJECTVALUE1   = A.PACKAGEROOT 
           AND   OBJECTVALUE2   = A.APPCLASSID)

END-SELECT

   if (#rows > 0)
      print ' '                     (+1,1)
   end-if
   
   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
