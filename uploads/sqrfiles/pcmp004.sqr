!************************************************************
!  PCMP004:  Professional Compliance                        *
!            RI Review                                      *
!************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:14:22:03                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!                                                                      *
!***********************************************************************


#include 'setenv.sqc' !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup

! Related language stuff
#define PCMP_TYPE
#define PCMP_REG_AUTH
#define PCMP_CLASS
#define PCMP_RI_DEVRCOM
#define PCMP_RI_DEVACOM
#define PCMP_RI_DEVAREA
#include 'rellang.sqc'
#define RELLANG_PROG

begin-REPORT
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Layout
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-REPORT

!***********************************************************************
! Init Report
!***********************************************************************

begin-procedure Init-Report

  move 'PCMP004' to $ReportID
  move 'REGULATED INDIVIDUAL REVIEW' to $ReportTitle

  do Stdapi-Init

  let $language_cd = $CURR_LANGUAGE_CD

  if $prcs_process_instance = ''
      INPUT $EmplId 'Enter EMPLID : '
      INPUT #EmplRcd 'Enter Empl Rcd# : '
      INPUT $PcmpType 'Enter Professional Compliance Type :'
      INPUT $RegAuth 'Enter Regulation Authority : '
      INPUT $RevDate 'Enter Review Date : '
  else
    do Get-Values
  end-if

  do Init_Printer
  do Init_Report_Translation('PROFCOMP', $language_cd)
  do Append_Report_Translation('PROFCOMP')

end-procedure

!***********************************************************************
! Get Values
!***********************************************************************

begin-procedure Get-Values

BEGIN-SELECT

  let $language_cd = $PRCS_LANGUAGE_CD

RC.EMPLID
RC.EMPL_RCD
RC.PCMP_TYPE
RC.PCMP_REG_AUTH
RC.PCMP_CREATION_DT

  let $EmplId = &RC.EMPLID
  let #EmplRcd = &RC.EMPL_RCD
  let $PcmpType = &RC.PCMP_TYPE
  let $RegAuth = &RC.PCMP_REG_AUTH
  do Format-DateTime(&RC.PCMP_CREATION_DT, $RevDate, {DEFDATE}, '', '')

from PS_RUN_CNTL_PCMP4 RC

where RC.OPRID = $prcs_oprid
  and RC.RUN_CNTL_ID = $prcs_run_cntl_id

end-select

end-procedure Get-Values

!***********************************************************************
! Layout
!***********************************************************************

begin-procedure Init-Layout

#define col0  1
#define col1  50

end-procedure

!***********************************************************************
! Heading
!***********************************************************************

begin-heading  9

#include 'stdhdgtr.sqc'

print $LBL_EMPLID                (0,{col0})
print $EmplId                    (0,+1)

  do Get-Person-Name

end-heading

!***********************************************************************
!  Gets the employee's name
!***********************************************************************

begin-procedure Get-Person-Name

begin-SELECT
!********************************************** Begin Name Change Format**********************
   
N.NAME_DISPLAY
  
  let $PersName = &N.NAME_DISPLAY
!********************************************** End Name Change Format**********************
  print $PersName                (0,+1)

FROM   PS_PERSON_NAME N

WHERE  N.EMPLID = $EmplId

end-SELECT

end-procedure

!***********************************************************************
! Main
!***********************************************************************

begin-procedure Process-Main

   do Get-Translat-Info   ! Global

  do Get-SetId
  do Get-Pcmp-Type
  do Get-Reg-Auth
  do Get-Classification
  do Get-RI-Review

end-procedure Process-Main

!***********************************************************************
!  Get the SETID
!***********************************************************************

begin-procedure Get-SetId

begin-SELECT

BU.DEFAULT_SETID

  let $SetId = &BU.DEFAULT_SETID

FROM   PS_BUS_UNIT_TBL_HR BU,
       PS_PCMP_RI RI

WHERE  RI.EMPLID = $EmplId
AND    RI.EMPL_RCD = #EmplRcd
AND    RI.PCMP_TYPE = $PcmpType
AND    RI.PCMP_REG_AUTH = $RegAuth
AND    BU.BUSINESS_UNIT = RI.BUSINESS_UNIT

end-SELECT

end-procedure

!***********************************************************************
!  Get the Professional Compliance Type
!***********************************************************************

begin-procedure Get-Pcmp-Type

begin-SELECT

PT.SETID
PT.PCMP_TYPE
PT.PCMP_TYPE_DESCR

  let $PCMP_TYPE-PCMP_TYPE_DESCR = &PT.PCMP_TYPE_DESCR
  do Get_Related_PCMP_TYPE(&PT.PCMP_TYPE, &PT.SETID)
  let $PcmpTypeDescr = $PCMP_TYPE-PCMP_TYPE_DESCR

  print $LBL_PCMP_TYPE                           (+2,{col0})
  print $PcmpTypeDescr                           (0,+1)

FROM   PS_PCMP_TYPE PT

WHERE  PT.SETID = $SetId
AND    PT.PCMP_TYPE = $PcmpType

end-SELECT

end-procedure

!***********************************************************************
!  Get the Regulatory Authority
!***********************************************************************

begin-procedure Get-Reg-Auth

begin-SELECT

RA.SETID
RA.PCMP_TYPE
RA.PCMP_REG_AUTH
RA.PCMP_REG_AUTH_DESC

  let $PCMP_REG_AUTH-PCMP_REG_AUTH_DESC = &RA.PCMP_REG_AUTH_DESC
  do Get_Related_PCMP_REG_AUTH(&RA.PCMP_REG_AUTH, &RA.PCMP_TYPE, &RA.SETID)
  let $RegAuthDescr = $PCMP_REG_AUTH-PCMP_REG_AUTH_DESC

  print $LBL_REG_AUTH                            (+1,{col0})
  print $RegAuthDescr                            (0,+1)

FROM   PS_PCMP_REG_AUTH RA

WHERE  RA.SETID = $SetId
AND    RA.PCMP_TYPE = $PcmpType
AND    RA.PCMP_REG_AUTH = $RegAuth

end-SELECT

end-procedure

!***********************************************************************
!  Get the RI Classification
!***********************************************************************

begin-procedure Get-Classification

begin-SELECT

CL.SETID
CL.PCMP_TYPE
CL.PCMP_REG_AUTH
RIC.PCMP_CLASS
CL.PCMP_CLASS_DESCR

  let $RIClass = &RIC.PCMP_CLASS

  let $PCMP_CLASS-PCMP_CLASS_DESCR = &CL.PCMP_CLASS_DESCR
  do Get_Related_PCMP_CLASS(&RIC.PCMP_CLASS, &CL.PCMP_REG_AUTH, &CL.PCMP_TYPE, &CL.SETID)
  let $Classification = $PCMP_CLASS-PCMP_CLASS_DESCR

  print $LBL_CLASS                               (+1,{col0})
  print $Classification                          (0,+1)

FROM   PS_PCMP_CLASS CL,
       PS_PCMP_RI_CLASS RIC

WHERE  RIC.EMPLID = $EmplId
AND    RIC.EMPL_RCD = #EmplRcd
AND    RIC.PCMP_TYPE = $PcmpType
AND    RIC.PCMP_REG_AUTH = $RegAuth
AND    RIC.EFFDT = (SELECT MAX(RIC2.EFFDT) FROM PS_PCMP_RI_CLASS RIC2
                    WHERE RIC2.EMPLID = RIC.EMPLID
                    AND   RIC2.EMPL_RCD = RIC.EMPL_RCD
                    AND   RIC2.PCMP_TYPE = RIC.PCMP_TYPE
                    AND   RIC2.PCMP_REG_AUTH = RIC.PCMP_REG_AUTH
                    AND   RIC2.EFFDT<=&RC.PCMP_CREATION_DT)
AND    CL.PCMP_CLASS = RIC.PCMP_CLASS
AND    CL.SETID = $SetId

end-SELECT

end-procedure

!***********************************************************************
!  Gets the RI Review.
!***********************************************************************

begin-procedure Get-RI-Review

begin-SELECT

DR.PCMP_EXP_COMP_DT
  do Format-DateTime(&DR.PCMP_EXP_COMP_DT, $ExpDate, {DEFDATE}, '', '')
DR.PCMP_ACT_COMP_DT
  do Format-DateTime(&DR.PCMP_ACT_COMP_DT, $ActDate, {DEFDATE}, '', '')
DR.PCMP_DEV_STATUS

  let $RevStatus = &DR.PCMP_DEV_STATUS

  print $LBL_REV_DT                              (+2,{col0})
  print $RevDate                                 (0,+1)
  print $LBL_EXP_DT                              (0,{col1})
  print $ExpDate                                 (0,+1)
  print $LBL_ACT_DT                              (+1,{col0})
  print $ActDate                                 (0,+1)
  print $LBL_REV_STAT                            (0,{col1})

  do Get-Dev-Status-Xlat

  do Get-Review-Comments
  do Get-Development-Areas

FROM   PS_PCMP_RI_DEV_REC DR

WHERE  DR.EMPLID = &RC.EMPLID
AND    DR.EMPL_RCD = &RC.EMPL_RCD
AND    DR.PCMP_TYPE = &RC.PCMP_TYPE
AND    DR.PCMP_REG_AUTH = &RC.PCMP_REG_AUTH
AND    DR.PCMP_CREATION_DT = &RC.PCMP_CREATION_DT

end-SELECT

end-procedure

!***********************************************************************
!  Gets the Dev Status Xlat value.
!***********************************************************************

begin-procedure Get-Dev-Status-Xlat

  let $FieldName = 'PCMP_DEV_STATUS'
  let $FieldValue = $RevStatus
  do Read-Translate-Table
  let $XlatRevStatus = $XlatLongName

  print $XlatRevStatus                           (0,+1)

end-procedure

!***********************************************************************
!  Gets the RI Review Comments.
!***********************************************************************

begin-procedure Get-Review-Comments

begin-SELECT

REVC.PCMP_CREATION_DT
REVC.PCMP_REG_AUTH
REVC.PCMP_TYPE
REVC.EMPLID
REVC.EMPL_RCD
REVC.PCMP_DEV_COMM

  let $PCMP_RI_DEVRCOM-PCMP_DEV_COMM = &REVC.PCMP_DEV_COMM
  do Get_Related_PCMP_RI_DEVRCOM(&REVC.EMPLID, &REVC.EMPL_RCD, &REVC.PCMP_CREATION_DT, &REVC.PCMP_REG_AUTH, &REVC.PCMP_TYPE)
  let $RevComments = $PCMP_RI_DEVRCOM-PCMP_DEV_COMM

  print $LBL_REV_COMM                            (+2,{col0})
  print $RevComments                             (+1,{col0}) WRAP 80 20

FROM   PS_PCMP_RI_DEVRCOM REVC

WHERE  REVC.EMPLID = &RC.EMPLID
AND    REVC.EMPL_RCD = &RC.EMPL_RCD
AND    REVC.PCMP_TYPE = &RC.PCMP_TYPE
AND    REVC.PCMP_REG_AUTH = &RC.PCMP_REG_AUTH
AND    REVC.PCMP_CREATION_DT = &RC.PCMP_CREATION_DT

end-SELECT

end-procedure

!***********************************************************************
!  Gets the Development Areas
!***********************************************************************

begin-procedure Get-Development-Areas

begin-SELECT

DEVA.PCMP_REG_AUTH
DEVA.PCMP_TYPE
DEVA.PCMP_CREATION_DT
DEVA.EMPLID
DEVA.EMPL_RCD
DEVA.PCMP_ELEM_TYPE
DEVA.PCMP_DEV_AREA
DEVA.PCMP_DEV_DESCR
DEVA.PCMP_DEV_STATUS

  let $ElemType = &DEVA.PCMP_ELEM_TYPE
  let $DevArea = &DEVA.PCMP_DEV_AREA

  let $PCMP_RI_DEVAREA-PCMP_DEV_DESCR = &DEVA.PCMP_DEV_DESCR
  do Get_Related_PCMP_RI_DEVAREA(&DEVA.EMPLID, &DEVA.EMPL_RCD, &DEVA.PCMP_CREATION_DT, &DEVA.PCMP_DEV_AREA, &DEVA.PCMP_ELEM_TYPE, &DEVA.PCMP_REG_AUTH, &DEVA.PCMP_TYPE)
  let $AreaDescr = $PCMP_RI_DEVAREA-PCMP_DEV_DESCR

  let $AStatus = &DEVA.PCMP_DEV_STATUS

  print $LBL_DEV_TYPE                            (+3,{col0})

  do Get-Elem-Type-Xlat

  print $DevArea                                 (0,+1)
  print $AreaDescr                               (0,+1)
  print $LBL_STATUS                              (+1,{col0})

  do Get-Area-Status-Xlat

  do Get-Area-Comments

FROM   PS_PCMP_RI_DEVAREA DEVA

WHERE  DEVA.EMPLID = &RC.EMPLID
AND    DEVA.EMPL_RCD = &RC.EMPL_RCD
AND    DEVA.PCMP_TYPE = &RC.PCMP_TYPE
AND    DEVA.PCMP_REG_AUTH = &RC.PCMP_REG_AUTH
AND    DEVA.PCMP_CREATION_DT = &RC.PCMP_CREATION_DT

end-SELECT

end-procedure

!***********************************************************************
!  Gets the Element Type Xlat value.
!***********************************************************************

begin-procedure Get-Elem-Type-Xlat

  let $FieldName = 'PCMP_ELEM_TYPE'
  let $FieldValue = $ElemType
  do Read-Translate-Table
  let $XlatEType = $XlatLongName
  print $XlatEType                           (0,+1)

end-procedure


!***********************************************************************
!  Gets the Area Status Xlat value.
!***********************************************************************

begin-procedure Get-Area-Status-Xlat

  let $FieldName = 'PCMP_DEV_STATUS'
  let $FieldValue = $AStatus
  do Read-Translate-Table
  let $XlatAStatus = $XlatLongName

  print $XlatAStatus                           (0,+1)

end-procedure

!***********************************************************************
!  Gets the Development Area Comments
!***********************************************************************

begin-procedure Get-Area-Comments

begin-SELECT

DEVAC.PCMP_REG_AUTH
DEVAC.PCMP_TYPE
DEVAC.PCMP_CREATION_DT
DEVAC.EMPLID
DEVAC.EMPL_RCD
DEVAC.PCMP_ELEM_TYPE
DEVAC.PCMP_DEV_AREA
DEVAC.PCMP_DEV_COMM

  let $PCMP_RI_DEVACOM-PCMP_DEV_COMM = &DEVAC.PCMP_DEV_COMM
  do Get_Related_PCMP_RI_DEVACOM(&DEVAC.EMPLID, &DEVAC.EMPL_RCD, &DEVAC.PCMP_CREATION_DT, &DEVAC.PCMP_DEV_AREA, &DEVAC.PCMP_ELEM_TYPE, &DEVAC.PCMP_REG_AUTH, &DEVAC.PCMP_TYPE)
  let $AComments = $PCMP_RI_DEVACOM-PCMP_DEV_COMM

  print $LBL_DEV_ACOM                            (+2,{col0})
  print $AComments                               (+1,{col0}) WRAP 80 20

FROM   PS_PCMP_RI_DEVACOM DEVAC

WHERE  DEVAC.EMPLID = &DEVA.EMPLID
AND    DEVAC.EMPL_RCD = &DEVA.EMPL_RCD
AND    DEVAC.PCMP_TYPE = &DEVA.PCMP_TYPE
AND    DEVAC.PCMP_REG_AUTH = &DEVA.PCMP_REG_AUTH
AND    DEVAC.PCMP_CREATION_DT = &DEVA.PCMP_CREATION_DT
AND    DEVAC.PCMP_ELEM_TYPE = &DEVA.PCMP_ELEM_TYPE
AND    DEVAC.PCMP_DEV_AREA = &DEVA.PCMP_DEV_AREA

end-SELECT

end-procedure

!***********************************************************************
!  Gets the strings printed in this report (Globalization)
!***********************************************************************

begin-procedure Get-Translat-Info

   do Get_Field_Information('PROFCOMP', 'LBL_REV'         ,$LBL_REV          ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_EMPLID'      ,$LBL_EMPLID       ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_PCMP_TYPE'   ,$LBL_PCMP_TYPE    ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_REG_AUTH'    ,$LBL_REG_AUTH     ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_CLASS'       ,$LBL_CLASS        ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_REV_DT'      ,$LBL_REV_DT       ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_REV_COMM'    ,$LBL_REV_COMM     ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_REV_STAT'    ,$LBL_REV_STAT     ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_ACT_DT'      ,$LBL_ACT_DT       ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_EXP_DT'      ,$LBL_EXP_DT       ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_DEV_TYPE'    ,$LBL_DEV_TYPE     ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_STATUS'      ,$LBL_STATUS       ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_DEV_ACOM'    ,$LBL_DEV_ACOM     ,#DW)

end-procedure

!***********************************************************************


#include 'stdapi.sqc'    !Routines to update run status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'curdttim.sqc'  !Current Date/Time
#Include 'number.sqc'    !Routines to format numbers
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'

