! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
!  PTTSTTIM.SQC: PeopleTools SQR Testing Program for TIMEMATH.SQC      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************


!***********************************************************************
begin-procedure TestTimeLogic
!***********************************************************************

    show {Stars}
    show 'TIME LOGIC TESTING'
    show {Stars}

    do Format-DateTime('19990305135045',$timedate,{DEFCMP},'time','native')

    show 'TIMEMATH.SQC Testing'
    show {Dashes}


!***********************************************************************
!Parse_Duration_Test
!-----------------------------------------------------------------------
    let $error  = {No}
    let $Testid = 'Parse_Duration_Test:'

!Scenario 1:
    let $in_duration='10:39:20'
    let #test_out_hours=10
    let #test_out_minutes=39
    let #test_out_seconds=20
    do Parse_Duration_Test($in_duration,#test_out_hours,#test_out_minutes,#test_out_seconds)

!Scenario 2:
    let $in_duration='23:01:59'
    let #test_out_hours=23
    let #test_out_minutes=1
    let #test_out_seconds=59
    do Parse_Duration_Test($in_duration,#test_out_hours,#test_out_minutes,#test_out_seconds)

!Scenario 3:
    let $in_duration='01:59:10'
    let #test_out_hours=1
    let #test_out_minutes=59
    let #test_out_seconds=10
    do Parse_Duration_Test($in_duration,#test_out_hours,#test_out_minutes,#test_out_seconds)

    do ShowTestStatus


!***********************************************************************
!Add_Time_Duration_Test
!-----------------------------------------------------------------------
    let $error  = {No}
    let $Testid = 'Add_Time_Duration_Test:'

!Scenario 1:
    let $in_time        =$timedate
    let $in_duration    ='12:00:00'
    let $wkDate         = strtodate($timedate,{Native-DateTimeMask})
    let $wkDate         = dateadd($wkDate,'hour',12)
    let $out_time       = datetostr($wkDate, {Native-TimeMask})
    let #test_carry_days=1
    do Add_Time_Duration_Test($in_time,$in_duration,$out_time,#test_carry_days)

!Scenario 2:
    let $in_time        =$timedate
    let $in_duration    ='72:0:00'
    let $wkDate         = strtodate($timedate,{Native-DateTimeMask})
    let $wkDate         = dateadd($wkDate,'hour',72)
    let $out_time       = datetostr($wkDate, {Native-TimeMask})
    let #test_carry_days=3
    do Add_Time_Duration_Test($in_time,$in_duration,$out_time,#test_carry_days)

!Scenario 3:
    let $in_time        =$timedate
    let $in_duration    ='-20:00:00'
    let $wkDate         = strtodate($timedate,{Native-DateTimeMask})
    let $wkDate         = dateadd($wkDate,'hour',-20)
    let $out_time       = datetostr($wkDate, {Native-TimeMask})
    let #test_carry_days=-1
    do Add_Time_Duration_Test($in_time,$in_duration,$out_time,#test_carry_days)

    do ShowTestStatus


!***********************************************************************
!Subtract_Time_Duration_Test
!-----------------------------------------------------------------------
    let $error  = {No}
    let $Testid = 'Subtract_Time_Duration_Test:'

!Scenario 1:
    let $in_time        =$timedate
    let $in_duration    ='24:00:00'
    let $wkDate         = strtodate($timedate,{Native-DateTimeMask})
    let $wkDate         = dateadd($wkDate,'hour',-24)
    let $out_time       = datetostr($wkDate, {Native-TimeMask})
    let #test_borrow_days=1
    do Subtract_Time_Duration_Test($in_time,$in_duration,$out_time,#test_borrow_days)

!Scenario 2:
    let $in_time        =$timedate
    let $in_duration    ='43:00:00'
    let $wkDate         = strtodate($timedate,{Native-DateTimeMask})
    let $wkDate         = dateadd($wkDate,'hour',-43)
    let $out_time       = datetostr($wkDate, {Native-TimeMask})
    let #test_borrow_days=2
    do Subtract_Time_Duration_Test($in_time,$in_duration,$out_time,#test_borrow_days)

!Scenario 3:
    let $in_time        =$timedate
    let $in_duration    ='72:50:00'
    let $wkDate         = strtodate($timedate,{Native-DateTimeMask})
    let $wkDate         = dateadd($wkDate,'hour',-72)
    let $wkDate         = dateadd($wkDate,'minute',-50)
    let $out_time       = datetostr($wkDate, {Native-TimeMask})
    let #test_borrow_days=3
    do Subtract_Time_Duration_Test($in_time,$in_duration,$out_time,#test_borrow_days)

    do ShowTestStatus

!***********************************************************************
!Subtract_Time_Time_Test
!-----------------------------------------------------------------------
    let $error  = {No}
    let $Testid = 'Subtract_Time_Time_Test:'


!Scenario 1:
    do Convert_Time_Output('23:59:59',$in_time1)
    do Convert_Time_Output('13:30:59',$in_time2)
    let $test_out_duration='10:29:00'
    do Subtract_Time_Time_Test($in_time1,$in_time2,$test_out_duration)

!Scenario 2:
    do Convert_Time_Output('12:00:00',$in_time1)
    do Convert_Time_Output('04:20:24',$in_time2)
    let $test_out_duration='07:39:36'
    do Subtract_Time_Time_Test($in_time1,$in_time2,$test_out_duration)

!Scenario 3:
    do Convert_Time_Output('23:59:59',$in_time1)
    do Convert_Time_Output('00:00:00',$in_time2)
    let $test_out_duration='23:59:59'
    do Subtract_Time_Time_Test($in_time1,$in_time2,$test_out_duration)

    do ShowTestStatus


!***********************************************************************
!Add_Duration_Duration_Test
!-----------------------------------------------------------------------
    let $error  = {No}
    let $Testid = 'Add_Duration_Duration_Test:'

!Scenario 1:
    let $in_duration1='20:00:20'
    let $in_duration2='13:23:45'
    let $test_out_duration='33:24:05'
    do Add_Duration_Duration_Test($in_duration1,$in_duration2,$test_out_duration)

!Scenario 2:
    let $in_duration1='48:00:00'
    let $in_duration2='24:00:00'
    let $test_out_duration='72:00:00'
    do Add_Duration_Duration_Test($in_duration1,$in_duration2,$test_out_duration)

!Scenario 3:
    let $in_duration1='03:24:23'
    let $in_duration2='10:10:10'
    let $test_out_duration='13:34:33'
    do Add_Duration_Duration_Test($in_duration1,$in_duration2,$test_out_duration)

    do ShowTestStatus


!***********************************************************************
!Subtract_Duration_Duration_Test
!-----------------------------------------------------------------------
    let $error  = {No}
    let $Testid = 'Subtract_Duration_Duration_Test:'

!Scenario 1:
    let $in_duration1='20:00:20'
    let $in_duration2='13:23:45'
    let $test_out_duration='06:36:35'
    do Subtract_Duration_Duration_Test($in_duration1,$in_duration2,$test_out_duration)

!Scenario 2:
    let $in_duration1='48:00:00'
    let $in_duration2='24:00:00'
    let $test_out_duration='24:00:00'
    do Subtract_Duration_Duration_Test($in_duration1,$in_duration2,$test_out_duration)

!Scenario 3:
    let $in_duration1='03:24:23'
    let $in_duration2='10:10:10'
    let $test_out_duration='-06:45:47'
    do Subtract_Duration_Duration_Test($in_duration1,$in_duration2,$test_out_duration)

    do ShowTestStatus


!***********************************************************************
!Convert_Time_24hr_Test
!-----------------------------------------------------------------------
    let $error  = {No}
    let $Testid = 'Convert_Time_24hr_Test:'

!Scenario 1:
    let $in_DateTime= $timedate
    let $wkdate     = strtodate($timedate,{Native-DateTimeMask})
    let $out_time24 = datetostr($wkDate,'HH:MI:SS')
    do Convert_Time_24hr_Test($in_DateTime,$out_time24)

!Scenario 2:
    let $wkdate     = strtodate('20:20:01','HH:MI:SS')
    let $in_DateTime= datetostr($wkDate,{Native-TimeMask})
    let $out_time24='20:20:01'
    do Convert_Time_24hr_Test($in_DateTime,$out_time24)

!Scenario 3:
    let $wkdate     = strtodate('00:00:00','HH:MI:SS')
    let $in_DateTime= datetostr($wkDate,{Native-TimeMask})
    let $out_time24='00:00:00'
    do Convert_Time_24hr_Test($in_DateTime,$out_time24)

    do ShowTestStatus


!***********************************************************************
!Convert_Time_Output_Test
!-----------------------------------------------------------------------
    let $error  = {No}
    let $Testid = 'Convert_Time_Output_Test:'

!Scenario 1:
    do Convert_Time_Output_Test('13:00:23')

!Scenario 2:
    do Convert_Time_Output_Test('10:20:23')

!Scenario 3:
    do Convert_Time_Output_Test('01:01:01')

    do ShowTestStatus

End-Procedure

!***********************************************************************
begin-procedure Parse_Duration_Test($in_duration,#test_out_hours,#test_out_minutes,#test_out_seconds)
!***********************************************************************

    do Parse_Duration($in_duration,#out_hours,#out_minutes,#out_seconds)

    if #test_out_hours<>#out_hours or #test_out_minutes<>#out_minutes or #test_out_seconds<>#out_seconds
        let $_error = {Yes}
    end-if

    #ifdef debugd
        show #test_out_hours ',' #out_hours ',' #test_out_minutes','#out_minutes ',' #test_out_seconds ',' #out_seconds ',Error: ' $_error
    #end-if

end-procedure

!***********************************************************************
begin-procedure Add_Time_Duration_Test($in_time,$in_duration,$out_time,#test_carry_days)
!***********************************************************************

    let $wkout_time = $out_time

    do Add_Time_Duration($in_time,$in_duration,$out_time,#carry_days)

    if $wkout_time <> $out_time or #test_carry_days <> #carry_days
        let $_error = {Yes}
    end-if

    #ifdef debugd
        show $wkout_time ',' $out_time ',' #test_carry_days ',' #carry_days ',Error: ' $_error
    #end-if

end-procedure

!***********************************************************************
begin-procedure Subtract_Time_Duration_Test($in_time,$in_duration,$out_time,#test_borrow_days)
!***********************************************************************

    let $wkout_time = $out_time

    do Subtract_Time_Duration($in_time,$in_duration,$out_time,#borrow_days)

    if #test_borrow_days<>#borrow_days or $wkout_time <> $out_time
        let $_error = {Yes}
    end-if

    #ifdef debugd
        show $wkout_time ',' $out_time ',' #test_borrow_days ',' #borrow_days ',Error: ' $_error
    #end-if

end-procedure


!***********************************************************************
begin-procedure Subtract_Time_Time_Test($in_time1,$in_time2,$test_out_duration)
!***********************************************************************

    do Subtract_Time_Time($in_time1,$in_time2,$out_duration)

    if $test_out_duration <> $out_duration
        let $_error = {Yes}
    end-if

    #ifdef debugd
        show $test_out_duration ',' $out_duration ',Error: ' $_error
    #end-if

end-procedure

!***********************************************************************
begin-procedure Add_Duration_Duration_Test($in_duration1,$in_duration2,$test_out_duration)
!***********************************************************************

    do Add_Duration_Duration($in_duration1,$in_duration2,$out_duration)

    if $test_out_duration<>$out_duration
       let $_error = {Yes}
    end-if

    #ifdef debugd
        show $test_out_duration ',' $out_duration ',Error: ' $_error
    #end-if

end-procedure

!***********************************************************************
begin-procedure Subtract_Duration_Duration_Test($in_duration1,$in_duration2,$test_out_duration)
!***********************************************************************

    do Subtract_Duration_Duration($in_duration1,$in_duration2,$out_duration)

    if $test_out_duration<>$out_duration
       let $_error = {Yes}
    end-if

    #ifdef debugd
        show $test_out_duration ',' $out_duration ',Error: ' $_error
    #end-if

end-procedure

!***********************************************************************
begin-procedure Convert_Time_24hr_Test($in_DateTime,$out_time_test)
!***********************************************************************


    do Convert_Time_24hr($in_DateTime,$out_time24)

    if $out_time_test<>$out_time24
       let $_error = {Yes}
    end-if

    #ifdef debugd
        show $out_time_test ',' $out_time24 ',Error: ' $_error
    #end-if

end-procedure

!***********************************************************************
begin-procedure Convert_Time_Output_Test($in_time24)
!***********************************************************************

    let $_wkdate       = strtodate($in_time24,'HH:MI:SS')
    let $out_time_test = datetostr($_wkDate,{Native-TimeMask})

    do Convert_Time_Output($in_time24,$out_time)

    if $out_time_test <> $out_time
       let $_error = {Yes}
    end-if

    #ifdef debugd
        show $out_time_test ',' $out_time ',Error: ' $_error
    #end-if

end-procedure














