! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
!
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------!
! TBLVIEW.SQR:  Rename Tables                                          !
!----------------------------------------------------------------------!
! Description:                                                         !
!----------------------------------------------------------------------!

#include 'setenv.sqc' !Set environment

begin-setup
#include "setupdb.sqc"
end-setup

begin-report
    let $outputfile = '{FILEPREFIX}TBLVIEW.DMS{FILESUFFIX}'
    open $outputfile as 1 for-writing record=80
    if '{FILEPREFIX}' = ''
        display 'Tblview output file ' noline
        display $outputfile noline
        display ' is in current directory '
    else
        display 'TblView output file is in location ' noline
        display $outputfile
    end-if
    print 'Tblview output file is named TBLVIEW.DMS' (1,1)
    let $Stmt = 'SET LOG C:\TEMP\TBLVIEW.LOG;'
    write 1 from $Stmt
    do Create_TblView_Array
    do Get_Integration_Views
    do Commit-Transaction
    close 1
end-report

!***********************************************************************
! Function:    Create_TblView_Array                                    *
!                                                                      *
! Description: Array for Recfields already in Project                  *
!                                                                      *
!***********************************************************************
begin-procedure Create_TblView_Array
#debug display 'Module: UPGCODES Procedure: Create_TblView_Array'

   create-array NAME=View_List SIZE=125
                FIELD=SRC:char
                FIELD=TGT:char
                FIELD=FLG:char

    move 125 to #Max_Views

    PUT 'AR_BI_HDR'       'BI_HDR'          'N' INTO View_List (0)   SRC TGT FLG
    PUT 'AR_BI_LINE'      'BI_LINE'         'N' INTO View_List (1)   SRC TGT FLG
    PUT 'ASSET_IMAGE_PC'  'ASSET_IMAGE'     'N' INTO View_List (2)   SRC TGT FLG
    PUT 'ASSET_INTFC_VW'  'ASSET'           'N' INTO View_List (3)   SRC TGT FLG
    PUT 'BI_CHARGE_VW'    'BI_CHARGE'       'N' INTO View_List (4)   SRC TGT FLG
    PUT 'BI_CYCLE_VW'     'BI_CYCLE'        'N' INTO View_List (5)   SRC TGT FLG
    PUT 'BI_HDR_ALL_VW'   'BI_HDR'          'N' INTO View_List (6)   SRC TGT FLG
    PUT 'BI_INQPHONE_VW'  'BI_INQPHONE_TBL' 'N' INTO View_List (7)   SRC TGT FLG
    PUT 'BI_IVC_NUM_VW'   'BI_IVC_NUM'      'N' INTO View_List (8)   SRC TGT FLG
    PUT 'BI_IVCLAYOUT_VW' 'BI_IVC_LAYOUT'   'N' INTO View_List (9)   SRC TGT FLG
    PUT 'BI_LINE_VW'      'BI_LINE'         'N' INTO View_List (10)  SRC TGT FLG
    PUT 'BI_ORD_HDR_VW'   'ORD_HEADER'      'N' INTO View_List (11)  SRC TGT FLG
    PUT 'BI_RMA_HDR_VW'   'RMA_HEADER'      'N' INTO View_List (12)  SRC TGT FLG
    PUT 'BNK_RCN_DEPOSIT' 'DEPOSIT_CONTROL' 'N' INTO View_List (13)  SRC TGT FLG
    PUT 'BNK_RCN_DISBRSE' 'PAYMENT_TBL'     'N' INTO View_List (14)  SRC TGT FLG
    PUT 'BNK_RCN_DRAFT'   'DRAFT_CONTROL'   'N' INTO View_List (15)  SRC TGT FLG
    PUT 'BU_AP_ALT'       'BUS_UNIT_TBL_AP' 'N' INTO View_List (16)  SRC TGT FLG
    PUT 'BU_AP_REF'       'BUS_UNIT_TBL_AP' 'N' INTO View_List (17)  SRC TGT FLG
    PUT 'BU_AR_ALT'       'BUS_UNIT_TBL_AR' 'N' INTO View_List (18)  SRC TGT FLG
    PUT 'BU_EDIT_VW_AR'   'BUS_UNIT_TBL_AR' 'N' INTO View_List (19)  SRC TGT FLG
    PUT 'BU_PM_FS'        'BUS_UNIT_TBL_PM' 'N' INTO View_List (20)  SRC TGT FLG
    PUT 'BUS_UNIT_PM_VW'  'BUS_UNIT_TBL_PM' 'N' INTO View_List (21)  SRC TGT FLG
    PUT 'BUYER_TBL_FS'    'BUYER_TBL'       'N' INTO View_List (22)  SRC TGT FLG
    PUT 'CHNG_RQST_DT_FS' 'CHNG_RQST_DTL'   'N' INTO View_List (23)  SRC TGT FLG
    PUT 'CHNG_RQST_FS'    'CHNG_RQST'       'N' INTO View_List (24)  SRC TGT FLG
    PUT 'CUR_RT_TYPE_VW'  'BU_BOOK_TBL'     'N' INTO View_List (25)  SRC TGT FLG
    PUT 'CUST_ADDRESS_FS' 'CUST_ADDRESS'    'N' INTO View_List (26)  SRC TGT FLG
    PUT 'CUST_EXEMPT_VW'  'CUST_EXEMPT'     'N' INTO View_List (27)  SRC TGT FLG
    PUT 'CUSTOMER_FS'     'CUSTOMER'        'N' INTO View_List (28)  SRC TGT FLG
    PUT 'EG_ECO_ASSY_FS'  'EG_ECO_ASSY'     'N' INTO View_List (29)  SRC TGT FLG
    PUT 'EG_ECO_DISP_FS'  'EG_ECO_ASSY'     'N' INTO View_List (30)  SRC TGT FLG
    PUT 'EG_ECO_HEADR_FS' 'EG_ECO_HEADER'   'N' INTO View_List (31)  SRC TGT FLG
    PUT 'GROUP_CNTRL_FS'  'GROUP_CONTROL'   'N' INTO View_List (32)  SRC TGT FLG
    PUT 'INTFC_AP_AM_VW'  'VCHR_ACCTG_LINE' 'N' INTO View_List (33)  SRC TGT FLG
    PUT 'ITEM_OPEN_PC_VW' 'ITEM'            'N' INTO View_List (34)  SRC TGT FLG
    PUT 'ITM_CAT_TBL_FS'  'ITM_CAT_TBL'     'N' INTO View_List (35)  SRC TGT FLG
    PUT 'ITM_PURCH_FS'    'PURCH_ITEM_ATTR' 'N' INTO View_List (36)  SRC TGT FLG
    PUT 'JRNL_HEADER_FS'  'JRNL_HEADER'     'N' INTO View_List (37)  SRC TGT FLG
    PUT 'JRNL_LN_FS'      'JRNL_LN'         'N' INTO View_List (38)  SRC TGT FLG
    PUT 'ORD_ADDR_FS'     'ORD_ADDR'        'N' INTO View_List (39)  SRC TGT FLG
    PUT 'ORD_SCHEDULE_FS' 'ORD_SCHEDULE'    'N' INTO View_List (40)  SRC TGT FLG
    PUT 'ORIGIN_AP_AR'    'ORIGIN_AP'       'N' INTO View_List (41)  SRC TGT FLG
    PUT 'PC_AM_ASSET_VW'  'ASSET'           'N' INTO View_List (42)  SRC TGT FLG
    PUT 'PC_AM_RET_VW'    'PROJ_AM_ASSET'   'N' INTO View_List (43)  SRC TGT FLG
    PUT 'PC_AP_VCHR_VW'   'VOUCHER'         'N' INTO View_List (44)  SRC TGT FLG
    PUT 'PC_CNTRCT_VW'    'CNTRCT_HDR'      'N' INTO View_List (45)  SRC TGT FLG
    PUT 'PC_GL_JRNLLN_VW' 'PROJ_RESOURCE'   'N' INTO View_List (46)  SRC TGT FLG
    PUT 'PC_JG_LN_VW'     'PROJ_RESOURCE'   'N' INTO View_List (47)  SRC TGT FLG
    PUT 'PC_JRNL_GEN_VW'  'PROJ_RESOURCE'   'N' INTO View_List (48)  SRC TGT FLG
    PUT 'PC_PO_HDR_VW'    'PO_HDR'          'N' INTO View_List (49)  SRC TGT FLG
    PUT 'PENDING_DST_FS'  'PENDING_DST'     'N' INTO View_List (50)  SRC TGT FLG
    PUT 'PENDING_ITEM_FS' 'PENDING_ITEM'    'N' INTO View_List (51)  SRC TGT FLG
    PUT 'PO_BU_ITEMS_INV' 'BU_ITEMS_INV'    'N' INTO View_List (52)  SRC TGT FLG
    PUT 'PO_COMMENTS_FS'  'PO_COMMENTS'     'N' INTO View_List (53)  SRC TGT FLG
    PUT 'PO_DF_SETUP_INV' 'DF_SETUP_INV'    'N' INTO View_List (54)  SRC TGT FLG
    PUT 'PO_DMD_INF_INV'  'DEMAND_INF_INV'  'N' INTO View_List (55)  SRC TGT FLG
    PUT 'PO_HDR_FS'       'PO_HDR'          'N' INTO View_List (56)  SRC TGT FLG
    PUT 'PO_ISS_HDR_INV'  'ISSUE_HDR_INV'   'N' INTO View_List (57)  SRC TGT FLG
    PUT 'PO_LINE_DIST_FS' 'PO_LINE_DISTRIB' 'N' INTO View_List (58)  SRC TGT FLG
    PUT 'PO_LINE_FS'      'PO_LINE'         'N' INTO View_List (59)  SRC TGT FLG
    PUT 'PO_LINE_SHIP_FS' 'PO_LINE_SHIP'    'N' INTO View_List (60)  SRC TGT FLG
    PUT 'PO_LN_ACCTG_PC'  'PO_LINE_ACCTG'   'N' INTO View_List (61)  SRC TGT FLG
    PUT 'PO_PLAN_ORD'     'PL_PO_PLAN_ORD'  'N' INTO View_List (62)  SRC TGT FLG
    PUT 'PO_SF_OP_LIST'   'SF_OP_LIST'      'N' INTO View_List (63)  SRC TGT FLG
    PUT 'PO_SF_OPLIST_PO' 'SF_OP_LIST_PO'   'N' INTO View_List (64)  SRC TGT FLG
    PUT 'PO_SF_PRDN_HDR'  'SF_PRDNID_HEADR' 'N' INTO View_List (65)  SRC TGT FLG
    PUT 'PO_TRNS_UNIT'    'TRANS_UNIT'      'N' INTO View_List (66)  SRC TGT FLG
    PUT 'PO_TRNS_UNIT_IT' 'TRANS_UNIT_IT'   'N' INTO View_List (67)  SRC TGT FLG
    PUT 'PROFILE_INT_VW'  'PROFILE_TBL'     'N' INTO View_List (68)  SRC TGT FLG
    PUT 'PROFILE_PCAM_VW' 'PROFILE_TBL'     'N' INTO View_List (69)  SRC TGT FLG
    PUT 'PROFILE_PO_VW'   'PROFILE_TBL'     'N' INTO View_List (70)  SRC TGT FLG
    PUT 'PROJ_ACT_FS'     'PROJ_ACTIVITY'   'N' INTO View_List (71)  SRC TGT FLG
    PUT 'PROJ_ANTYPE_FS'  'PROJ_ANTYPE_TBL' 'N' INTO View_List (72)  SRC TGT FLG
    PUT 'PROJ_CUST_VW'    'CUSTOMER'        'N' INTO View_List (73)  SRC TGT FLG
    PUT 'PROJ_ITEM_VW'    'MASTER_ITEM_TBL' 'N' INTO View_List (74)  SRC TGT FLG
    PUT 'PROJ_MILE_FS'    'PROJ_MILE_TBL'   'N' INTO View_List (75)  SRC TGT FLG
    PUT 'PROJ_MILESTN_FS' 'PROJ_MILESTONES' 'N' INTO View_List (76)  SRC TGT FLG
    PUT 'PROJ_PO_HDR_VW'  'PO_HDR'          'N' INTO View_List (77)  SRC TGT FLG
    PUT 'PROJ_RESCAT_FS'  'PROJ_CATG_TBL'   'N' INTO View_List (78)  SRC TGT FLG
    PUT 'PROJ_RESTYPE_FS' 'PROJ_RES_TYPE'   'N' INTO View_List (79)  SRC TGT FLG
    PUT 'PROJ_SUBCAT_FS'  'PROJ_SUBCAT_TBL' 'N' INTO View_List (80)  SRC TGT FLG
    PUT 'PROJ_VENDOR_VW'  'VENDOR'          'N' INTO View_List (81)  SRC TGT FLG
    PUT 'PROJECT_FS'      'PROJECT'         'N' INTO View_List (82)  SRC TGT FLG
    PUT 'PROJID_BUGL_VW'  'PROJECT'         'N' INTO View_List (83)  SRC TGT FLG
    PUT 'PURCH_ITEM_FS'   'PURCH_ITEM_ATTR' 'N' INTO View_List (84)  SRC TGT FLG
    PUT 'PYMNT_XREF_AR'   'PYMNT_VCHR_XREF' 'N' INTO View_List (85)  SRC TGT FLG
    PUT 'RECV_HD_CMNT_FS' 'RECV_HDR_CMNT'   'N' INTO View_List (86)  SRC TGT FLG
    PUT 'RECV_HDR_ACT_FS' 'RECV_HDR_ACT'    'N' INTO View_List (87)  SRC TGT FLG
    PUT 'RECV_HDR_AM_VW'  'RECV_LN'         'N' INTO View_List (88)  SRC TGT FLG
    PUT 'RECV_HDR_FS'     'RECV_HDR'        'N' INTO View_List (89)  SRC TGT FLG
    PUT 'RECV_LN_CMNT_FS' 'RECV_LN_CMNT'    'N' INTO View_List (90)  SRC TGT FLG
    PUT 'RECV_LN_DIST_FS' 'RECV_LN_DISTRIB' 'N' INTO View_List (91)  SRC TGT FLG
    PUT 'RECV_LN_FS'      'RECV_LN'         'N' INTO View_List (92)  SRC TGT FLG
    PUT 'RECV_LN_INSP_FS' 'RECV_LN_INSP'    'N' INTO View_List (93)  SRC TGT FLG
    PUT 'RECV_LN_PRDN_FS' 'RECV_LN_SHIP'    'N' INTO View_List (94)  SRC TGT FLG
    PUT 'RECV_LN_SHIP_FS' 'RECV_LN_SHIP'    'N' INTO View_List (95)  SRC TGT FLG
    PUT 'RECV_SUBREC_FS'  'RECV_SUBREC_MG'  'N' INTO View_List (96)  SRC TGT FLG
    PUT 'REQ_LN_ACCTG_PC' 'REQ_LINE_ACCTG'  'N' INTO View_List (97)  SRC TGT FLG
    PUT 'SHIP_INF_INV_FS' 'SHIP_INF_INV'    'N' INTO View_List (98)  SRC TGT FLG
    PUT 'VCHR_CLOSE_VW3'  'PYMT_VCHR_XREF'  'N' INTO View_List (99)  SRC TGT FLG
    PUT 'VCHR_FS'         'VOUCHER'         'N' INTO View_List (100) SRC TGT FLG
    PUT 'VCHR_LN_FS'      'VOUCHER_LINE'    'N' INTO View_List (101) SRC TGT FLG
    PUT 'VENDOR_AR'       'VENDOR'          'N' INTO View_List (102) SRC TGT FLG
    PUT 'VENDOR_PO_VW'    'VENDOR'          'N' INTO View_List (103) SRC TGT FLG
    PUT 'VNDR_CUST_VW'    'VENDOR'          'N' INTO View_List (104) SRC TGT FLG
    PUT 'VNDR_FS'         'VENDOR'          'N' INTO View_List (105) SRC TGT FLG
    PUT 'VNDR_VNDSET_VW'  'VENDOR'          'N' INTO View_List (106) SRC TGT FLG
    PUT 'VOUCHER_AR'      'VOUCHER'         'N' INTO View_List (107) SRC TGT FLG

end-procedure

begin-procedure Get_Integration_Views

move ' ' to $TableFnd
begin-SELECT on-error=SQL-Error
RECNAME       &SQL_TableName
    let $SQL_TableName = 'PS_' || rtrim(&SQL_TableName,' ')
FROM PSRECDEFN
WHERE RECNAME IN ('PM_PROP_VIEWTBL','PM_PROD_VIEWTBL')
end-SELECT

begin-SELECT DISTINCT on-error=SQL-Error
RECNAME       &Table_Name

    move 'y' to $TableFnd
    let $Table_Name              = rtrim(&Table_Name,' ')
    do RenameTable

FROM [PSRECDEFN : $SQL_TableName]

end-SELECT

if $TableFnd = ' '
    write 1 from 'no tables renamed'
end-if
end-procedure

begin-procedure RenameTable
begin-SELECT on-error=SQL-Error
RECTYPE       &RecType

    move &RecType to #RecType
    if #RecType = 0

        move '' to $NewName

        let $oldtab = 'PS_' || $Table_Name
        move 0 to #counts
        do Get-Counts
        if #counts = 0
             let $Stmt = '**** SKIPPING RENAME OF ' || $Table_Name || ' TO '
                     || $NewName
             print $Stmt (+1,1)
             display $Stmt
             let $Stmt = '     SOURCE TABLE HAS NO ROWS'
             print $Stmt (+1,1)
             display $Stmt
        else
            move 0 to #I
            while #I < #Max_Views
                get $Find_ViewName from View_List (#I) SRC
                if $Find_ViewName = $Table_Name
                    get $NewName from View_List (#I) TGT
                    put 'Y' into View_List (#I) FLG
                    break
                end-if
                let #I = #I + 1
            end-while
            move 0 to #I
            move 'N' to $NameUsed
            while #I < #Max_Views
                get $Find_ViewName from View_List (#I) SRC
                get $Find_TableName from View_List (#I) TGT
                if $Find_ViewName <> $Table_Name
                and $Find_TableName = $NewName
                    get $Flag from View_List (#I) FLG
                    if $Flag='Y'
                       move 'Y' to $NameUsed
                       break
                    end-if
                end-if
                let #I = #I + 1
            end-while
            if $NewName != ''
                let $Stmt = 'RENAME RECORD ' || $Table_Name || ' AS ' || $NewName || ';'
                do Check_Already_Exists
            end-if
        end-if
    end-if

FROM PSRECDEFN
WHERE RECNAME = $Table_Name
end-SELECT

end-procedure



begin-procedure Check_Already_Exists

move 'N' to $AlreadyExists
begin-SELECT on-error=SQL-Error
RECNAME       &ExistName
    move 'Y' to $AlreadyExists
FROM PSRECDEFN
WHERE RECNAME = $NewName
end-SELECT

if $AlreadyExists = 'N'
     if $NameUsed = 'N'
        write 1 from $Stmt
     else
        let $Stmt = '-- ' || $Stmt
        write 1 from $Stmt
        let $Stmt = '**** ERROR RENAMING ' || $Table_Name || ' TO '
                || $NewName
        print $Stmt (+1,1)
        display $Stmt
        let $Stmt = '     TARGET TABLE ALREADY USED IN RENAME SCRIPT'
        print $Stmt (+1,1)
        display $Stmt
     end-if
else
     let $Stmt = '-- ' || $Stmt
     write 1 from $Stmt
     let $Stmt = '**** ERROR RENAMING ' || $Table_Name || ' TO '
             || $NewName
     print $Stmt (+1,1)
     display $Stmt
     let $Stmt = '     TARGET TABLE ALREADY EXISTS AND SOURCE HAS DATA'
     print $Stmt (+1,1)
     display $Stmt
end-if
end-procedure

!----------------------------------------------------------------------
! Procedure: Get-Counts
!----------------------------------------------------------------------
begin-procedure Get-Counts

begin-select on-error=SQL-Error

COUNT(*)    &counts
    move &counts to #counts
FROM  [PSRECDEFN : $oldtab]

end-select
end-procedure


begin-procedure SQL-Error

  evaluate #sql-status
#ifdef DB2
#ifndef MVS
    when = 6100    !DB2 error for empty-table result set
      break
#end-if
#end-if

    when = -99999  !Token "when" clause for non-DB2 environments
    when-other
#ifdef DB2UNIX
      !*********************************************************
      !  SQR has problems getting error reporting back on DB2  *
      !  for Unix, especially on ODBC.  DB2 is unique in that  *
      !  it flags empty result sets as errors.  The following  *
      !  code is like the code above in that this is another   *
      !  way that SQR will report the empty result set error   *
      !*********************************************************
      if (#sql-status = 0) and
         (isnull($sql-error) or
          ((length($sql-error) > 1800) and (ascii(substr($sql-error,5,1))=255)))
        break
      end-if
      if #sql-status = 437   !DB2 Error for empty-table result set
        break
      end-if
#end-if
#ifdef DB2DDCS
      !*********************************************************
      !  SQR has problems getting error reporting back on DB2  *
      !  for MVS via on ODBC.  DB2 is unique in that           *
      !  it flags empty result sets as errors.  The following  *
      !  code is like the code above in that this is another   *
      !  way that SQR will report the empty result set error   *
      !*********************************************************
      if ((#sql-status = 0) and (length($sql-error) > 500) and
          (ascii(substr($sql-error,5,1))=255)) or
          ((#sql-status = 0) and (isnull($sql-error)))
        break
      end-if
#end-if

      display $sqr-program        noline
      display ': '                noline
      display $ReportID           noline
      display ' - SQL Statement = '
      display $SQL-STATEMENT
      display 'SQL Status = '     noline
      display #sql-status 99999   noline
      display ', SQL Error  = '   noline
      display $sql-error

      do Rollback-Transaction
      stop

  end-evaluate

end-procedure

#include 'tranctrl.sqc'     !Transaction control
