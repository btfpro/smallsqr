!**************    Loading CAE data for cube viewing        ************
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:12:29:05                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'         ! Set environment
#include 'setup01.sqc'        ! Printer and page-size initialization


BEGIN-REPORT

Do Init-DateTime                ! Date formatting
Do Init-Number                  ! Numeric values formatting
Do Get-Current-DateTime()       ! System dates formatting
Do Prepare
Do Main-Process
Do Stdapi-Term
END-REPORT


!***************************************************************
BEGIN-PROCEDURE  Prepare
!***************************************************************
 do Stdapi-Init

 do Security-Param       !SQR security

 if $prcs_process_instance = ''

    INPUT #year       'Saisir annee de reference '
    INPUT #month      'Saisir mois de reference '
    INPUT #day        'Saisir jour de reference '
    do dtu-format-date(#year,#month,#day,$dtu_date)
    do Convert-From-DTU-Date($dtu_date,$native_date)

    display 'native dt: ' noline
    display $native_date
    display 'dtu dt: ' noline
    display $dtu_date

else

    do FP-Select-Parameters
    do Select-Parameters

    let $hr_effdt = &FP_ASOFDATE

    do Convert-To-DTU-Date($hr_effdt,$dtu_date)
    do Convert-From-DTU-Date($dtu_date,$native_date)

    display 'date user: ' noline
    display $hr_effdt
    display 'native dt: ' noline
    display $native_date
    display 'dtu dt: ' noline
    display $dtu_date

end-if

END-PROCEDURE Prepare



!*********************************
BEGIN-PROCEDURE Get-Values
!*********************************

do Get-Calendar-Year
do Get-YesNo

END-PROCEDURE Get-Values



!*********************************
BEGIN-PROCEDURE Main-Process
!*********************************

do Delete-Rows
do Select-Main

END-PROCEDURE Main-Process



!*********************************
BEGIN-PROCEDURE Delete-Rows
!*********************************

let $sql-statement = 'FPA1007.SQR,Delete-Rows,delete,FPAHEADCNT04'
display $sql-statement

BEGIN-SQL On-Error=SQL-Error

Delete from PS_FPAHEADCNT04

END-SQL

END-PROCEDURE Delete-Rows



!*********************************
BEGIN-PROCEDURE Select-Main
!*********************************

let $sql-statement = 'FPA1007.SQR,Select-Main,select'
BEGIN-Select

 DISTINCT

F.FP_PT_PCT                     &F.FP_PT_PCT
C.SETID_DEPT                    &C.SETID_DEPT
C.DEPTID                        &C.DEPTID
A.FP_SHR_TM_RT                  &A.FP_SHR_TM_RT
        let #FP_SHR_TM_RT = &A.FP_SHR_TM_RT
S.FP_INCS_IND                   &D.FP_INCS_IND
        let #FP_INCS_IND = &D.FP_INCS_IND
A.FP_STFBDG_LVL1                &A.FP_STFBDG_LVL1
B.FP_STFBDG_LVL3                &B.FP_STFBDG_LVL3
A.SETID                         &A.SETID
A.FP_CA_CATG_ID                 &A.FP_CA_CATG_ID
A.FP_COMM_ACNT_ID               &A.FP_COMM_ACNT_ID
D.FP_RANK_CD                    &D.FP_RANK_CD
D.FP_CORPS_CD                   &D.FP_CORPS_CD
E.NAME                          &E.NAME
E.SEX                           &E.SEX
{DATEOUT-PREFIX}E.BIRTHDATE{DATEOUT-SUFFIX}       &E.BIRTHDATE
E.EMPLID                        &E.EMPLID

        do Insert-Rows
        display 'do insert'

FROM    PS_FPA_CA_TBL A , PS_FPM_CA_CTG_TBL B,  PS_FPAEECAREER D , PS_FPAEEWORKRT F,
        PS_FPMRANK_TBL R , PS_FPMSALSTEP_TBL S , PS_FPAEEPOST_TBL C , PS_PERSONAL_DT_FST E
        ,PS_FPFAST_PERS_VW2 SCRTY              !SQR security

where  A.EMPLID =           E.EMPLID
and    A.EMPLID =           D.EMPLID
and    A.EMPL_RCD =         D.EMPL_RCD
and    A.EMPLID =           F.EMPLID
and    A.EMPL_RCD =         F.EMPL_RCD
and    A.EMPLID =           C.EMPLID
and    A.EMPL_RCD =         C.EMPL_RCD
and    A.FP_DELET_COMM <>   'Y'
and    A.FP_CA_STATUS in    ( 'A','P','W')
and    B.SETID =            A.SETID
and    B.FP_CA_CATG_ID =    A.FP_CA_CATG_ID
and    B.EFFDT =
        ( select max (B_ED.EFFDT) from PS_FPM_CA_CTG_TBL B_ED
        where B.SETID = B_ED.SETID
          and B.FP_CA_CATG_ID = B_ED.FP_CA_CATG_ID
          and B_ED.EFFDT <= {DATEIN-PREFIX}$native_date{DATEIN-SUFFIX})
and    A.FP_APPL_DT = ( select max (Z.FP_APPL_DT) from PS_FPA_CA_TBL Z
                        where A.EMPLID    = Z.EMPLID
                        and   A.EMPL_RCD = Z.EMPL_RCD
                        and   Z.FP_APPL_DT <= {DATEIN-PREFIX}$native_date{DATEIN-SUFFIX})
and  D.EFFDT = ( select max (T.EFFDT) from PS_FPAEECAREER T
                        where D.EMPLID    = T.EMPLID
                        and   D.EMPL_RCD = T.EMPL_RCD
                        and   T.EFFDT <= {DATEIN-PREFIX}$native_date{DATEIN-SUFFIX})
and  D.EFFSEQ = ( select max (T1.EFFSEQ) from PS_FPAEECAREER T1
                        where D.EMPLID    = T1.EMPLID
                        and   D.EMPL_RCD = T1.EMPL_RCD
                        and   D.EFFDT     = T1.EFFDT)
and  F.EFFDT = ( select max (U.EFFDT) from PS_FPAEEWORKRT U
                        where F.EMPLID    = U.EMPLID
                        and   F.EMPL_RCD = U.EMPL_RCD
                        and   U.EFFDT <= {DATEIN-PREFIX}$native_date{DATEIN-SUFFIX})
and  F.EFFSEQ = ( select max (U1.EFFSEQ) from PS_FPAEEWORKRT U1
                        where F.EMPLID    = U1.EMPLID
                        and   F.EMPL_RCD = U1.EMPL_RCD
                        and   F.EFFDT     = U1.EFFDT)
and  C.EFFDT = ( select max (V.EFFDT) from PS_FPAEEPOST_TBL V
                        where C.EMPLID    = V.EMPLID
                        and   C.EMPL_RCD = V.EMPL_RCD
                        and   V.EFFDT <= {DATEIN-PREFIX}$native_date{DATEIN-SUFFIX})
and  C.EFFSEQ = ( select max (V1.EFFSEQ) from PS_FPAEEPOST_TBL V1
                        where C.EMPLID    = V1.EMPLID
                        and   C.EMPL_RCD = V1.EMPL_RCD
                        and   C.EFFDT     = V1.EFFDT)
and D.FP_RANK_CD     = R.FP_RANK_CD
and D.FP_SETID_RANK  = R.SETID
and R.FP_MATRIX_TYP  = S.FP_MATRIX_TYP
and R.FP_MATRIX_CD   = S.FP_MATRIX_CD
and S.FP_GROSSIND_CD = 'BRUT'
and D.FP_STEP_CD     = S.FP_STEP_CD
and S.EFFDT = (select max(Z.EFFDT) from PS_FPMSALSTEP_TBL Z
        where       R.FP_MATRIX_TYP  = Z.FP_MATRIX_TYP
                and R.FP_MATRIX_CD   = Z.FP_MATRIX_CD
                and Z.FP_GROSSIND_CD = 'BRUT'
                and Z.EFFDT          <= {DATEIN-PREFIX}$native_date{DATEIN-SUFFIX})

and E.EMPLID = SCRTY.EMPLID      !
and D.EMPL_RCD = SCRTY.EMPL_RCD         !SQR security
[$SecurityClause]               !


END-Select

END-PROCEDURE Select-Main



!*********************************
BEGIN-PROCEDURE Insert-Rows
!*********************************

let #WGHT_IND = #FP_SHR_TM_RT * #FP_INCS_IND

do Convert-To-DTU-Date(&E.BIRTHDATE,$dtu_birthdate)
do dtu-diff-years-fp($dtu_birthdate,$dtu_date,#age)
let #td_age = #age / 5

evaluate #td_age
        when < 4
                let $tr_age = 'A'
                break
        when < 5
                let $tr_age = 'B'
                break
        when < 6
                let $tr_age = 'C'
                break
        when < 7
                let $tr_age = 'D'
                break
        when < 8
                let $tr_age = 'E'
                break
        when < 9
                let $tr_age = 'F'
                break
        when < 10
                let $tr_age = 'G'
                break
        when < 11
                let $tr_age = 'H'
                break
       when < 12
                let $tr_age = 'I'
                break
       when < 13
                let $tr_age = 'J'
                break
       when-other
                let $tr_age = 'K'
        end-evaluate

let $FP_CTGBUDGLVL1 = &A.FP_STFBDG_LVL1 || ' ' || &A.SETID || ' ' || &A.FP_CA_CATG_ID
let $FP_RANK_BUDGLVL3 = &B.FP_STFBDG_LVL3 || ' ' || &D.FP_RANK_CD


let $sql-statement = 'FPA1007.SQR,Insert-Rows,insert,FPAHEADCNT04'
display $sql-statement

BEGIN-SQL

Insert into PS_FPAHEADCNT04 (EFFDT, FP_PT_PCT, SETID_DEPT, DEPTID, FP_SHR_TM_RT, FP_WGHT_IND, FP_UNIT,
SETID, FP_COMM_ACNT_ID, FP_STFBDG_LVL1, FP_CTGBUDGLVL1, FP_RANK_BUDGLVL3, FP_CA_CATG_ID, FP_RANK_CD,
FP_CORPS_CD, NAME, SEX, AGE, FP_AGE_LAYER)
values ({DATEIN-PREFIX}$native_date{DATEIN-SUFFIX},
        &F.FP_PT_PCT,
        &C.SETID_DEPT,
        &C.DEPTID,
        &A.FP_SHR_TM_RT,
        #WGHT_IND,
        1,
        &A.SETID,
        &A.FP_COMM_ACNT_ID,
        &A.FP_STFBDG_LVL1,
        $FP_CTGBUDGLVL1,
        $FP_RANK_BUDGLVL3,
        &A.FP_CA_CATG_ID,
        &D.FP_RANK_CD,
        &D.FP_CORPS_CD,
        &E.NAME,
        &E.SEX,
        #age,
        $tr_age)

END-SQL

END-PROCEDURE Insert-Rows


#Include 'fptestdt.sqc'   ! Routines for date and time formatting (FPS)
!#Include 'datetime.sqc'         ! Routines for date and time formatting
#include 'curdttim.sqc'         ! Get-Current-DateTime procedure
#include 'stdapi.sqc'           ! Routines to update run status
#Include 'hrrnctl1.sqc'         ! Get run control parameter values
#Include 'fprnctl1.sqc'         ! Get run control parameter values
#Include 'fpgetval.sqc'         ! Get values mask routines
#Include 'hrgetval.sqc'         ! Get values mask routines
#Include 'number.sqc'           ! Routines to format numbers
!#Include 'datemath.sqc'         ! Routines for date arithmetic
#Include 'hrsecty.sqc'          ! Get SQR Security parameters

