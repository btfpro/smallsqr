!***********************************************************************
!   TL003:  Time & Labor TCD Usage Report                              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/02/06:04:07:27                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  688700                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#include 'setup31.sqc'  !Printer and page-size initialization, SETUP31 and
                        !  SETUP32 SQCs to support HTML, HP PCL, PostScript,
                        !  PDF and Window in addition to Line Printer as
                        !  the output type.


!***********************************************************************
!                                                                      *
! begin-report                                                         *                                                          *
!                                                                      *
! Called By: N/A                                                       *
! Calls:     Init-Processing                                           *
!            Get-Values                                                *
!            Process-Main                                              *
!            Reset                                                     *
!            End-Report                                                *
!                                                                      *
!***********************************************************************

begin-report


#ifdef debugy
        show 'INIT-PROCESSING'
#end-if
        do Init-Processing


#ifdef debugy
        show 'SELECT-PARAMETERS'
#end-if
        do Select-Parameters


#ifdef debugy
        show 'PROCESS-MAIN'
#end-if
        do Process-Main


#ifdef debugy
        show 'RESET'
#end-if
        do Reset                        ! called from reset1.sqc

do Update-Prcs-Run-Status

#ifdef debugy
        show 'END-REPORT'
#end-if


end-report



!***********************************************************************
!                                                                      *
! Init-Processing                                                      *
!                                                                      *
!                                                                      *
! Called By:    begin-report                                           *
! Calls:        Init-Datetime           - datetime.sqc                 *
!               Get-Current-Datetime    - prcsapi.sqc (curdttim.sqc)   *
!               Define-Prcs-Vars        - prcsapi.sqc (prcsdef.sqc)    *
!               Get-Run-Control-Parms   - prcsapi.sqc                  *
!               Init-Report                                            *
!               Init-Number             - number.sqc                   *
!               Get-Language-Codes      - prcslng.sqc                  *
!                                                                      *
! Description:  Standard PeopleSoft initialization processing.         *
!                                                                      *
!***********************************************************************


begin-procedure Init-Processing


#ifdef debugy
    show 'IN PROCEDURE INIT-PROCESSING'
#end-if


#ifdef debugy
        show 'INIT-DATETIME'
#end-if
        do Init-Datetime                ! called from datetime.sqc


#ifdef debugy
        show 'GET-CURRENT-DATETIME'
#end-if
        do Get-Current-Datetime         ! called from prcsapi.sqc (curdttim.sqc)


#ifdef debugy
        show 'DEFINE-PRCS-VARS'
#end-if
        do Define-Prcs-Vars             ! called from prcsapi.sqc (prcsdef.sqc)


#ifdef debugy
        show 'GET-RUN-CONTROL-PARMS'
#end-if
        do Get-Run-Control-Parms        ! In prcsapi.sqc

#ifdef debugy
        show 'SELECT-PARAMETERS'
#end-if
        do Select-Parameters

#ifdef debugy
        show 'INIT-REPORT'
#end-if
        do Init-Report


#ifdef debugy
        show 'INIT-NUMBER'
#end-if
        do Init-Number                  ! called from number.sqc


#ifdef debugy
        show 'GET-LANGUAGE-CODES'
#end-if
        do Get-Language-Codes           ! called from prcslng.sqc


end-procedure !Init-Processing


!***********************************************************************
!                                                                      *
! Init-Report                                                          *
!                                                                      *
!                                                                      *
! Called By: Init-Processing                                           *
! Calls:     Init_Report_Translation    -   sqrtrans.sqc               *
!            Append_Report_Translation  -   sqrtrans.sqc               *
!            Define-Prcs-Vars                                          *
!            Get_Field_Information                                     *
!            Format-DateTime                                           *
!                                                                      *
! Description:  Initializes variables, defines values for variables    *
!               used in report header, date formatting, time           *
!               formatting, translations & strings tables retrievals.  *
!                                                                      *
!***********************************************************************

begin-procedure Init-Report


#ifdef debugy
    show 'IN PROCEDURE INIT-REPORT'
#end-if


    #define Col_10       1
    #define Col_20       15
    #define Col_25       20
    #define Col_27       23
    #define Col_30       28
    #define Col_35       35
    #define Col_40       42
    #define Col_50       52
    #define Col_60       62
    #define Col_70       72
    #define Col_80       82
    #define Col_82       84




!***********************************************************************
!                                                                      *
! Translations procedures & Strings Table retrievals.                  *
!                                                                      *
!***********************************************************************


    do Init_Report_Translation ($ReportID,$Language_Code)
    do Append_Report_Translation ('TLMAIN')


!   do Get_Field_Information ('TLMAIN','EMPLOYEE',            $Employee_lbl,           #DW)
!   do Get_Field_Information ('TLMAIN','EMPLOYEE_NAME',       $Employee_Name_lbl,      #DW)
!   do Get_Field_Information ('TLMAIN','EMPLOYEE_ID',         $ID_lbl,                 #DW)
!   do Get_Field_Information ('TLMAIN','RECORD#',             $RECORD#_lbl,            #DW)
!   do Get_Field_Information ('TLMAIN','DATE_UNDER_REPORT1',  $Date_Under_Report1_lbl, #DW)
!   do Get_Field_Information ('TLMAIN','DATE_UNDER_REPORT2',  $Date_Under_Report2_lbl, #DW)
!   do Get_Field_Information ('TLMAIN','STATUS',              $Status_lbl,             #DW)
!   do Get_Field_Information ('TLMAIN','TIME_RPTG_CODE1',     $Time_Rptg_Code1_lbl,    #DW)
!   do Get_Field_Information ('TLMAIN','TIME_RPTG_CODE2',     $Time_Rptg_Code2_lbl,    #DW)
!   do Get_Field_Information ('TLMAIN','DAY1',                $Day1_lbl,               #DW)
!   do Get_Field_Information ('TLMAIN','TYPE',                $Type_lbl,               #DW)
!   do Get_Field_Information ('TLMAIN','QUANTITY',            $Quantity_lbl,           #DW)
!   do Get_Field_Information ('TLMAIN','DESCR',               $Descr_lbl,              #DW)
!   do Get_Field_Information ('TLMAIN','FOR_THE_PERIOD',      $For_The_Period_lbl,     #DW)
!   do Get_Field_Information ('TLMAIN','THROUGH',             $Through_lbl,            #DW)
!   do Get_Field_Information ('TLMAIN','EMPLOYEE_ID',         $Employee_ID_lbl,        #DW)
!   do Get_Field_Information ('TLMAIN','REPTD_PUNCH_DTL',     $Reptd_Punch_Dtl_lbl,    #DW)

   do Get_Field_Information ('TLMAIN','TCD_USAGE_REPORT',      $Report_Title_lbl,                 #DW)
   do Get_Field_Information ('TLMAIN','TCD_ID',                $TCD_ID_lbl,                       #DW)
   do Get_Field_Information ('TLMAIN','COUNT',                 $Count_lbl,                        #DW)
   do Get_Field_Information ('TLMAIN','TIME_REPORTER',         $Time_Reporter_lbl,                #DW)
   do Get_Field_Information ('TLMAIN','TOTAL_HOURS_COUNT',     $Total_Hours_lbl,                  #DW)
   do Get_Field_Information ('TLMAIN','SCHED_DAYS',            $Sched_Days_lbl,                   #DW)
   do Get_Field_Information ('TLMAIN','TCD_SUPERVISOR',        $TCD_Supervisor_lbl,               #DW)
   do Get_Field_Information ('TLMAIN','RESTRICT_PROFILE',      $Restriction_Profile_lbl,          #DW)
   do Get_Field_Information ('TLMAIN','TRC',                   $TRC_lbl,                          #DW)
   do Get_Field_Information ('TLMAIN','TASK_PROFILE',          $Task_Profiles_lbl,                #DW)
   do Get_Field_Information ('TLMAIN','TASK_TEMPLATE',         $Task_Templates_lbl,               #DW)
   do Get_Field_Information ('TLMAIN','TASK_ELEMENTS',         $Task_Elements_lbl,                #DW)
   do Get_Field_Information ('TLMAIN','TASK_VALUES',           $Task_Values_lbl,                  #DW)
   do Get_Field_Information ('TLMAIN','REPORTING_ELEMENTS',    $Reporting_Elements_lbl,           #DW)
   do Get_Field_Information ('TLMAIN','COUNTRIES',             $Countries_lbl,                    #DW)
   do Get_Field_Information ('TLMAIN','STATES',                $States_lbl,                       #DW)
   do Get_Field_Information ('TLMAIN','LOCALITIES',            $Localities_lbl,                   #DW)
   do Get_Field_Information ('TLMAIN','RATE_CODES',            $Rate_Codes_lbl,                   #DW)
   do Get_Field_Information ('TLMAIN','OVERRIDE_REASON_CO',    $Override_Reason_Codes_lbl,        #DW)
   do Get_Field_Information ('TLMAIN','CURRENCY_CODES',        $Currency_Codes_lbl,               #DW)
   do Get_Field_Information ('TLMAIN','TOTAL',                 $Total_lbl,                        #DW)
   do Get_Field_Information ('TLMAIN','VALS_AVAILABLE',        $Values_Available_lbl,             #DW)

   do Get_Field_Information ('TLMAIN','TIME_RPTRS_SECTION',    $Time_Reporters_Section_lbl,       #DW)
   do Get_Field_Information ('TLMAIN','EMPLOYEE_ID',                $Emplid_lbl,                  #DW)
   do Get_Field_Information ('TLMAIN','RECORD#',              $Empl_Rcd_lbl,                      #DW)
   do Get_Field_Information ('TLMAIN','BADGE_ID',                 $Badge_lbl,                     #DW)
   do Get_Field_Information ('TLMAIN','FIRST_NAME',            $First_Name_lbl,                   #DW)
   do Get_Field_Information ('TLMAIN','LAST_NAME',             $Last_Name_lbl,                    #DW)
   do Get_Field_Information ('TLMAIN','TCD_SPVSRS_SECTION',    $TCD_Supervisors_Section_lbl,      #DW)
   do Get_Field_Information ('TLMAIN','TCD_SPVSR_ID',          $TCD_Supervisor_ID_lbl,            #DW)
   do Get_Field_Information ('TLMAIN','NO_ROWS_FOUND',         $No_Rows_Found_lbl,                #DW)
   do Get_Field_Information ('TLMAIN','RESTRICT_PROF_SECT',    $Restriction_Profiles_Section_lbl, #DW)
   do Get_Field_Information ('TLMAIN','RESTRICT_PROF_ID',      $Restriction_Profile_ID_lbl,       #DW)
   do Get_Field_Information ('TLMAIN','DESCR',                 $Restriction_Profile_Descr_lbl,    #DW)
   do Get_Field_Information ('TLMAIN','TRC_SECTION',           $TRCs_Section_lbl,                 #DW)
   do Get_Field_Information ('TLMAIN','TRC_LBL',               $TRC_lbl,                          #DW)
   do Get_Field_Information ('TLMAIN','DESCR',                 $TRC_Descr_lbl,                    #DW)
   do Get_Field_Information ('TLMAIN','TASK_PROF_SECTION',     $Task_Profile_Section_lbl,         #DW)
   do Get_Field_Information ('TLMAIN','TASK_PROF_ID',          $Task_Profile_ID_lbl,              #DW)
   do Get_Field_Information ('TLMAIN','DESCR',                 $Task_Profile_Descr_lbl,           #DW)
   do Get_Field_Information ('TLMAIN','TASK_TEMPLATE_SECT',    $Task_Template_Section_lbl,        #DW)
   do Get_Field_Information ('TLMAIN','TASK_TEMPLATE_ID',      $Task_Template_ID_lbl,             #DW)
   do Get_Field_Information ('TLMAIN','DESCR',                 $Task_Template_Descr_lbl,          #DW)
   do Get_Field_Information ('TLMAIN','TASK_ELEMENT_SECT',     $Task_Element_Section_lbl,         #DW)
   do Get_Field_Information ('TLMAIN','TASK_TEMPLATE_ID',      $Task_Template_ID_Elem_lbl,        #DW)
   do Get_Field_Information ('TLMAIN','TASK_ELEMENT_CODE',     $Task_Element_Cd_lbl,              #DW)
   do Get_Field_Information ('TLMAIN','DESCR',                 $Task_Element_Descr_lbl,           #DW)
   do Get_Field_Information ('TLMAIN','DETAIL_BY_TCD',         $Detail_by_TCD_lbl,                #DW)
   do Get_Field_Information ('TLMAIN','TCD_ID',                $TCD_ID_lbl,                       #DW)
   do Get_Field_Information ('TLMAIN','DESCR',                 $Description_lbl,                  #DW)





!***********************************************************************
!                                                                      *
! Dates:   All of Europe uses date format DD/MM/YYYY                   *
!          The US uses date format of MM/DD/YYYY                       *
!                                                                      *
! Numbers: The U.S. and the U.K. use NN,NNN.NN                         *
!          The rest of Europe uses NN.NNN,NN                           *
!                                                                      *
!***********************************************************************

    if $curr_language_cd      = 'ENG'
        let $ReportDateType   = '0'             ! resolved in datetime.sqc
    else
        let $ReportDateType   = '1'
    end-if

    if $curr_language_cd = 'ENG' or $curr_language_cd = 'INE'
        let $ReportSDecimal   = '.'
        let $ReportSThousand  = ','
    else
        let $ReportSDecimal   = ','             ! resolved in number.sqc
        let $ReportSThousand  = '.'             ! resolved in number.sqc
    end-if


!***********************************************************************
!                                                                      *
! Initialize time formatting.                                          *
!                                                                      *
!***********************************************************************

    let $_ReportTime24 = '0'


!***********************************************************************
!                                                                      *
! Initialize date formatting.                                          *
!                                                                      *
!***********************************************************************

    !Old date formatting
    !let $Date_Init = '1900-01-01 17:00:00.000'
    !do Format-DateTime($Date_Init, $out999, {DEFDATE}, 'time', '')

    let $Date_Init = '1900-01-01 17:00:00.000'

        #ifdef ORACLE
            let $Date_Init = '01-NOV-1999'
        #end-if

    do Format-DateTime($Date_Init, $out999, {DEFDATE}, '', '')
#ifdef debugy
        show 'datetime   ' noline
        show $out999
#end-if


!***********************************************************************
!                                                                      *
! Report variables.                                                    *
!                                                                      *
!***********************************************************************


    let $ReportID                       = 'TL003'
    let $ReportTitle                    = $Report_Title_lbl
    let #Maxlines                       = 80
    let $Records_Found                  = 'N'
    let $Employee_FirstTimeThru         = 'Y'
    let #Total_Count                    = 0
    let #Time_Reporter_Count            = 0
    let #Total_Hours_Count              = 0
    let #Sched_Days_Count               = 0
    let #TCD_Supervisor_Count           = 0
    let #Restriction_Profile_Count      = 0
    let #TRC_Count                      = 0
    let #Task_Profiles_Count            = 0
    let #Task_Templates_Count           = 0
    let #Task_Elements_Count            = 0
    let #Task_Values_Count              = 0
    let #Countries_Count                = 0
    let #States_Count                   = 0
    let #Localities_Count               = 0
    let #Rate_Codes_Count               = 0
    let #Override_Reason_Codes_Count    = 0
    let #Currency_Codes_Count           = 0



end-procedure !Init-Report


!***************************
begin-heading 9
!***************************

#include 'stdhdgtr.sqc'

#ifdef debugy
        show 'BEGIN-HEADING'
#end-if


    print $FOR_THE_PERIOD_lbl    (-2,{Col_10})
    print $HdgFromDt             (,+1)
    print $THROUGH_lbl           (,+1)
    print $HdgThruDt             (,+1)


end-heading




!************************************************************************
!                                                                       *
! Select-Parameters                                                     *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!************************************************************************

begin-procedure Select-Parameters


#ifdef debugy
    show 'IN PROCEDURE SELECT-PARAMETERS'
#end-if


begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE SELECT-PARAMETERS'
#end-if


REPORT.OPRID
REPORT.RUN_CNTL_ID
PROCESS.PROCESS_INSTANCE     &REPORT.PROCESS_INSTANCE
REPORT.SUMMARY_REPORT       &REPORT.SUMMARY_REPORT
REPORT.DETAIL_REPORT        &REPORT.DETAIL_REPORT
REPORT.LANGUAGE_CD          &REPORT.LANGUAGE_CD

    let #Rpt_Process_Instance = &REPORT.PROCESS_INSTANCE
    let $Rpt_Summary          = &REPORT.SUMMARY_REPORT
    let $Rpt_Detail           = &REPORT.DETAIL_REPORT
    let $Language_Code        = &REPORT.LANGUAGE_CD

FROM PS_TL_TCD_REPORT REPORT, PS_TL_TCD_SQR PROCESS

WHERE REPORT.OPRID         = $PRCS_OPRID
  AND REPORT.RUN_CNTL_ID   = $PRCS_RUN_CNTL_ID
  AND REPORT.RUN_CNTL_ID   = PROCESS.RUN_CNTL_ID
  AND REPORT.OPRID         = PROCESS.OPRID


end-SELECT

end-procedure ! Select-Parameters


!************************************************************************
!                                                                       *
! Process-Main                                                          *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!************************************************************************


begin-procedure Process-Main

#ifdef debugy
    show 'IN PROCEDURE PROCESS-MAIN'
#end-if


    if $Rpt_Summary = 'Y'
        do Exec-TCD-Summary
    end-if

    if $Rpt_Detail = 'Y'
        do Exec-TCD-Detail
    end-if

    do Table-Clean-Up
end-procedure ! Process-Main


!************************************************************************
!                                                                       *
! Exec-TCD-Summary                                                      *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!************************************************************************


begin-procedure Exec-TCD-Summary


#ifdef debugy
    show 'IN PROCEDURE EXEC-TCD-SUMMARY'
#end-if


begin-SELECT DISTINCT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE EXEC-TCD-SUMMARY'
#end-if


TCD1.TCD_ID  &TCD1.TCD_ID


    let $Main_Select_TCD_ID = &TCD1.TCD_ID


    do Exec-Summary-Branch


    let $Prior_Main_Select_TCD_ID = $Main_Select_TCD_ID


FROM PS_TL_EMPL_TAO TCD1
WHERE TCD1.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT


end-procedure ! Exec-TCD-Summary


!************************************************************************
!                                                                       *
! Exec-TCD-Detail                                                       *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!************************************************************************


begin-procedure Exec-TCD-Detail


#ifdef debugy
    show 'IN PROCEDURE EXEC-TCD-DETAIL'
#end-if


begin-SELECT DISTINCT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE EXEC-TCD-DETAIL'
#end-if


TCD2.TCD_ID  &TCD2.TCD_ID


    let $Main_Select_TCD_ID = &TCD2.TCD_ID


    do Exec-Detail-Branch


    let $Prior_Main_Select_TCD_ID = $Main_Select_TCD_ID


FROM PS_TL_EMPL_TAO TCD2
WHERE TCD2.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT


end-procedure ! Exec-TCD-Detail


!************************************************************************
!                                                                       *
! Exec-Summary-Branch                                                   *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!************************************************************************


begin-procedure Exec-Summary-Branch


#ifdef debugy
    show 'IN PROCEDURE EXEC-SUMMARY-BRANCH'
#end-if

    let #Total_Count = 0


    do Get-Time-Reporters-Count


    do Get-Total-Payable-Hours-Count


    do Get-Sched-Days-Count


    do Get-TCD-Supervisors-Count


    do Get-Restriction-Profiles-Count


    do Get-TRCs-Count


    do Get-Task-Profiles-Count


    do Get-Task-Templates-Count


    do Get-Task-Elements-Count


    do Get-Task-Values-Count


    do Get-Reporting-Elements-Counts


    do Perform-Total-Counts


    do Print-Summary-Section


end-procedure ! Exec-Summary-Branch


!************************************************************************
!                                                                       *
! Exec-Detail-Branch                                                    *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!************************************************************************


begin-procedure Exec-Detail-Branch


#ifdef debugy
    show 'IN PROCEDURE EXEC-DETAIL-BRANCH'
#end-if


    let $Printed_Page_Header = 'F'              ! Variable to indicate whether or not page header was printed

    let $Time_Reporters_Detail_First_Row  = 'T' ! Variable to indicate if printing first row.  Controls print
                                                !       header & column names for each detail section
    let $Time_Reporters_Detail_Rows_Found = 'F' ! Variable to indicate whether or not detail rows found for TCD

    if $TCD_ID_FirstTimeThru = 'F'
        if $Main_Select_TCD_ID <> $Prior_$Main_Select_TCD_ID
            new-page
        end-if
    end-if

    do Get-Time-Reporters-Detail



    let $TCD_ID_FirstTimeThru = 'F'

    let $TCD_Supervisors_Detail_First_Row  = 'T'

    let $TCD_Supervisors_Detail_Rows_Found = 'F'

    do Get-TCD-Supervisors-Detail



    let $Restriction-Profiles_Detail_First_Row  = 'T'

    let $Restriction-Profiles_Detail_Rows_Found = 'F'

    do Get-Restriction-Profiles-Detail



    let $TRCs_Detail_First_Row  = 'T'

    let $TRCs_Detail_Rows_Found = 'F'

    do Get-TRCs-Detail



    let $Task-Profiles_Detail_First_Row  = 'T'

    let $Task-Profiles_Detail_Rows_Found = 'F'

    do Get-Task-Profiles-Detail



    let $Task-Templates_Detail_First_Row  = 'T'

    let $Task-Templates_Detail_Rows_Found = 'F'

    do Get-Task-Templates-Detail



    let $Task-Elements_Detail_First_Row  = 'T'

    let $Task-Elements_Detail_Rows_Found = 'F'

    do Get-Task-Elements-Detail



end-procedure ! Exec-Detail-Branch


!************************************************************************
!                                                                       *
! Get-Time-Reporters-Count                                              *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!************************************************************************


begin-procedure Get-Time-Reporters-Count


#ifdef debugy
    show 'IN PROCEDURE GET-TIME-REPORTERS-COUNT'
#end-if


begin-SELECT


 #ifdef debugy
     show 'INSIDE SELECT IN PROCEDURE GET-TIME-REPORTERS-COUNT'
 #end-if

COUNT(*)    &EMPL_COUNT


    let #Time_Reporter_Count = &EMPL_COUNT


FROM PS_TL_EMPL_TAO EMPL1
WHERE EMPL1.TCD_ID           = $Main_Select_TCD_ID
  AND EMPL1.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT


end-procedure ! Get-Time-Reporters-Count


!************************************************************************
!                                                                       *
! Get-Total-Payable-Hours-Count                                         *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-Total-Payable-Hours-Count


#ifdef debugy
    show 'IN PROCEDURE GET-TOTAL-PAYABLE-HOURS-COUNT'
#end-if


begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-TOTAL-PAYABLE-HOURS-COUNT'
#end-if


COUNT(*)    &TOTAL_HOURS_COUNT


    let #Total_Hours_Count = &TOTAL_HOURS_COUNT


FROM PS_TL_TTHRS_TAO TOTHRS
WHERE TOTHRS.TCD_ID           = $Main_Select_TCD_ID
  AND TOTHRS.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT


end-procedure ! Get-Total-Payable-Hours-Count


!************************************************************************
!                                                                       *
! Get-Sched-Days-Count                                                  *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-Sched-Days-Count


#ifdef debugy
    show 'IN PROCEDURE GET-SCHED-DAYS-COUNT'
#end-if


begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-SCHED-DAYS-COUNT'
#end-if


COUNT(*)    &SCHED_DAYS_COUNT


    let #Sched_Days_Count = &SCHED_DAYS_COUNT


FROM PS_TL_SCHED_TAO SCHED
WHERE SCHED.TCD_ID           = $Main_Select_TCD_ID
  AND SCHED.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT


end-procedure ! Get-Sched-Days-Count


!************************************************************************
!                                                                       *
! Get-TCD-Supervisors-Count                                             *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-TCD-Supervisors-Count


#ifdef debugy
    show 'IN PROCEDURE GET-TCD-SUPERVISORS-COUNT'
#end-if


begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-TCD-SUPERVISORS-COUNT'
#end-if


COUNT(*)    &TCD_SUPERVISOR_COUNT


    let #TCD_Supervisor_Count = &TCD_SUPERVISOR_COUNT


FROM PS_TL_SUPVR_TAO SUPER1
WHERE SUPER1.TCD_ID           = $Main_Select_TCD_ID
  AND SUPER1.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT


end-procedure ! Get-TCD-Supervisors-Count


!************************************************************************
!                                                                       *
! Get-Restriction-Profiles-Count                                        *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-Restriction-Profiles-Count


#ifdef debugy
    show 'IN PROCEDURE GET-RESTRICTION-PROFILES-COUNT'
#end-if


begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-RESTRICTION-PROFILES-COUNT'
#end-if


COUNT(*)    &RESTRICTION_PROFILE_COUNT


    let #Restriction_Profile_Count = &RESTRICTION_PROFILE_COUNT


FROM PS_TL_RESPF_TAO RESTPRO1
WHERE RESTPRO1.TCD_ID           = $Main_Select_TCD_ID
  AND RESTPRO1.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT


end-procedure ! Get-Restriction-Profiles-Count


!************************************************************************
!                                                                       *
! Get-TRCs-Count                                                         *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-TRCs-Count


#ifdef debugy
    show 'IN PROCEDURE GET-TRCS-COUNT'
#end-if


begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-TRCS-COUNT'
#end-if


COUNT(*)    &TRC_COUNT


    let #TRC_Count = &TRC_COUNT


FROM PS_TL_TRC_TAO TRC1
WHERE TRC1.TCD_ID           = $Main_Select_TCD_ID
  AND TRC1.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT


end-procedure ! Get-TRCs-Count


!************************************************************************
!                                                                       *
! Get-Task-Profiles-Count                                             *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-Task-Profiles-Count


#ifdef debugy
    show 'IN PROCEDURE GET-TASK-PROFILES-COUNT'
#end-if


begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-TASK-PROFILES-COUNT'
#end-if


COUNT(*)    &TASK_PROFILES_COUNT


    let #Task_Profiles_Count = &TASK_PROFILES_COUNT


FROM PS_TL_TKPRF_TAO TASKPRO1
WHERE TASKPRO1.TCD_ID           = $Main_Select_TCD_ID
  AND TASKPRO1.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT


end-procedure ! Get-Task-Profiles-Count


!************************************************************************
!                                                                       *
! Get-Task-Templates-Count                                              *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-Task-Templates-Count


#ifdef debugy
    show 'IN PROCEDURE GET-TASK-TEMPLATES-COUNT'
#end-if


begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-TASK-TEMPLATES-COUNT'
#end-if


COUNT(*)    &TASK_TEMPLATES_COUNT


    let #Task_Templates_Count = &TASK_TEMPLATES_COUNT


FROM PS_TL_TKTMP_TAO TASKTEMP1
WHERE TASKTEMP1.TCD_ID           = $Main_Select_TCD_ID
  AND TASKTEMP1.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT


end-procedure ! Get-Task-Templates-Count


!************************************************************************
!                                                                       *
! Get-Task-Elements-Count                                               *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-Task-Elements-Count


#ifdef debugy
    show 'IN PROCEDURE GET-TASK-ELEMENTS-COUNT'
#end-if


begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-TASK-ELEMENTS-COUNT'
#end-if


COUNT(DISTINCT TASK_ELEMENT_CD)    &TASK_ELEMENTS_COUNT


    let #Task_Elements_Count = &TASK_ELEMENTS_COUNT


FROM PS_TL_TMPDL_TAO TASKELEM1
WHERE TASKELEM1.TCD_ID           = $Main_Select_TCD_ID
  AND TASKELEM1.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT


end-procedure ! Get-Task-Elements-Count


!************************************************************************
!                                                                       *
! Get-Task-Values-Count                                                 *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-Task-Values-Count


#ifdef debugy
    show 'IN PROCEDURE GET-TASK-VALUES-COUNT'
#end-if


begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-TASK-VALUES-COUNT'
#end-if


COUNT(*)    &TASK_VALUES_COUNT


    let #Task_Values_Count = &TASK_VALUES_COUNT


FROM PS_TL_CDVAL_TAO TASKVAL
WHERE TASKVAL.TCD_ID           = $Main_Select_TCD_ID
  AND TASKVAL.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT


end-procedure ! Get-Task-Values-Count


!************************************************************************
!                                                                       *
! Get-Reporting-Elements-Counts                                         *
!                                                                       *
! Called By:  SUMMARY                                                   *
! Description:  Reporting Elements: Countries, States, Localities       *
!               Rate Codes, Override Reason Codes, Currency Codes       *
!                                                                       *
!************************************************************************


begin-procedure Get-Reporting-Elements-Counts


#ifdef debugy
    show 'IN PROCEDURE GET-REPORTING-ELEMETS-COUNT'
#end-if


begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-REPORTING-ELEMETS-COUNT'
#end-if


COUNT(*)    &COUNTRIES_COUNT


    let #Countries_Count = &COUNTRIES_COUNT


FROM PS_TL_RPTEL_TAO RPTELEM1
WHERE RPTELEM1.TCD_ID           = $Main_Select_TCD_ID
  AND RPTELEM1.RPTG_ELE_IND     = 'CO'                 ! CO = Countries
  AND RPTELEM1.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT




begin-SELECT


COUNT(*)    &STATES_COUNT


    let #States_Count = &STATES_COUNT


FROM PS_TL_RPTEL_TAO RPTELEM2
WHERE RPTELEM2.TCD_ID           = $Main_Select_TCD_ID
  AND RPTELEM2.RPTG_ELE_IND     = 'ST'                 ! ST = States
  AND RPTELEM2.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT




begin-SELECT


COUNT(*)    &LOCALITIES_COUNT


    let #Localities_Count = &LOCALITIES_COUNT


FROM PS_TL_RPTEL_TAO RPTELEM3
WHERE RPTELEM3.TCD_ID           = $Main_Select_TCD_ID
  AND RPTELEM3.RPTG_ELE_IND     = 'LY'                 ! LY = Localities
  AND RPTELEM3.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT




begin-SELECT


COUNT(*)    &RATE_CODES_COUNT


    let #Rate_Codes_Count = &RATE_CODES_COUNT


FROM PS_TL_RPTEL_TAO RPTELEM4
WHERE RPTELEM4.TCD_ID           = $Main_Select_TCD_ID
  AND RPTELEM4.RPTG_ELE_IND     = 'RT'                 ! RT = Rate Codes
  AND RPTELEM4.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT




begin-SELECT


COUNT(*)    &OVERRIDE_REASON_CODES_COUNT


    let #Override_Reason_Codes_Count = &OVERRIDE_REASON_CODES_COUNT


FROM PS_TL_RPTEL_TAO RPTELEM5
WHERE RPTELEM5.TCD_ID           = $Main_Select_TCD_ID
  AND RPTELEM5.RPTG_ELE_IND     = 'OR'                 ! OR = Override Reason
  AND RPTELEM5.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT



begin-SELECT


COUNT(*)    &CURRENCY_CODES_COUNT


    let #Currency_Codes_Count = &CURRENCY_CODES_COUNT


FROM PS_TL_RPTEL_TAO RPTELEM6
WHERE RPTELEM6.TCD_ID           = $Main_Select_TCD_ID
  AND RPTELEM6.RPTG_ELE_IND     = 'CC'                 ! CC = Currency Codes
  AND RPTELEM6.PROCESS_INSTANCE = #Rpt_Process_Instance

end-SELECT


end-procedure ! Get-Task-Values-Count


!************************************************************************
!                                                                       *
! Get-Time-Reporters-Detail                                             *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-Time-Reporters-Detail


#ifdef debugy
    show 'IN PROCEDURE GET-TIME-REPORTERS-DETAIL'
#end-if

let $row_for_this_TCD_flag = 'F'
begin-SELECT

EMPL2.TCD_ID            &EMPL2.TCD_ID
EMPL2.EMPLID            &EMPL2.EMPLID
EMPL2.EMPL_RCD          &EMPL2.EMPL_RCD
EMPL2.BADGE_ID         &EMPL2.BADGE_ID
EMPL2.FIRST_NAME        &EMPL2.FIRST_NAME
EMPL2.LAST_NAME         &EMPL2.LAST_NAME



    #ifdef debugy
       show 'INSIDE SELECT IN PROCEDURE GET-TIME-REPORTERS-DETAIL'
    #end-if
    let $Emplid       = &EMPL2.EMPLID
    let $Empl_Rcd     = &EMPL2.EMPL_RCD
    let $Badge_Number = &EMPL2.BADGE_ID
    let $First_Name   = &EMPL2.FIRST_NAME
    let $Last_Name    = &EMPL2.LAST_NAME


    do Print-Time-Reporters-Detail

    let $row_for_this_TCD_flag = 'T'
    let $Time_Reporters_Detail_Rows_Found = 'T'


FROM PS_TL_EMPL_TAO EMPL2
WHERE EMPL2.TCD_ID           = $Main_Select_TCD_ID
  AND EMPL2.PROCESS_INSTANCE = #Rpt_Process_Instance
ORDER BY EMPL2.EMPLID, EMPL2.EMPL_RCD


end-SELECT
if $row_for_this_TCD_flag = 'F'
            do Print-Time-Reporters-Detail-Header
            print $No_Rows_Found_lbl            (+1,{Col_10})
end-if

end-procedure ! Get-Time-Reporters-Detail


!************************************************************************
!                                                                       *
! Get-TCD-Supervisors-Detail                                            *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-TCD-Supervisors-Detail


#ifdef debugy
    show 'IN PROCEDURE GET-TCD-SUPERVISORS-DETAIL'
#end-if

let $row_for_this_TCD_flag = 'F'
begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-TCD-SUPERVISORS-DETAIL'
#end-if


SUPER2.TCD_ID                      &SUPER2.TCD_ID
SUPER2.TCD_SUPERVISR_ID            &SUPER2.TCD_SUPERVISR_ID
SUPER2.BADGE_ID                    &SUPER2.BADGE_ID


    let $Supervisor_ID           = &SUPER2.TCD_SUPERVISR_ID
    let $Supervisor_Badge_ID     = &SUPER2.BADGE_ID


    do Print-TCD-Supervisors-Detail

    let $row_for_this_TCD_flag = 'T'
    let $TCD_Supervisors_Detail_Rows_Found = 'T'


FROM PS_TL_SUPVR_TAO  SUPER2
WHERE SUPER2.TCD_ID           = $Main_Select_TCD_ID
  AND SUPER2.PROCESS_INSTANCE = #Rpt_Process_Instance
ORDER BY SUPER2.TCD_SUPERVISR_ID


end-SELECT
if $row_for_this_TCD_flag = 'F'
            do Print-TCD-Supervisors-Detail-Header
            print $No_Rows_Found_lbl            (+1,{Col_10})
end-if

end-procedure ! Get-TCD-Supervisors-Detail


!************************************************************************
!                                                                       *
! Get-Restriction-Profiles-Detail                                       *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-Restriction-Profiles-Detail


#ifdef debugy
    show 'IN PROCEDURE GET-RESTRICTION-PROFILES'
#end-if
let $row_for_this_TCD_flag = 'F'
let $Restriction_Profiles_Detail_First_Row = 'T'
BEGIN-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-RESTRICTION-PROFILES'
#end-if


RESTPRO2.TCD_ID                      &RESTPRO2.TCD_ID
RESTPRO2.RESTRICTION_PRF_ID          &RESTPRO2.RESTRICTION_PRF_ID
RESTPRF.EFFDT                        &RESTPRF.EFFDT
RESTPRF.EFF_STATUS                   &RESTPRF.EFF_STATUS
RESTPRF.DESCR                        &RESTPRF.DESCR


    let $Restriction_Profile_ID    = &RESTPRO2.RESTRICTION_PRF_ID
    let $Restriction_Profile_Descr = &RESTPRF.DESCR

    if $Language_Code <> $Psoptions_Language_Cd
        do Get-RestrProf-Descr-Rel-Lang
    end-if

    do Print-Restriction-Profiles-Detail
    let $row_for_this_TCD_flag = 'T'
    let $Restriction_Profiles_Detail_First_Row = 'F'

    let $Restriction_Profiles_Detail_Rows_Found = 'T'


FROM PS_TL_RESPF_TAO  RESTPRO2,
     PS_TL_RESPRF_TBL RESTPRF

WHERE RESTPRO2.TCD_ID               = $Main_Select_TCD_ID
  AND RESTPRO2.RESTRICTION_PRF_ID = RESTPRF.RESTRICTION_PRF_ID
  AND RESTPRF.EFFDT              = (SELECT MAX(A.EFFDT) FROM PS_TL_RESPRF_TBL A
                                     WHERE A.RESTRICTION_PRF_ID = RESTPRO2.RESTRICTION_PRF_ID
                                       AND A.EFFDT <= $AsOfToday)
  AND RESTPRF.EFF_STATUS       = 'A'
  AND RESTPRO2.PROCESS_INSTANCE = #Rpt_Process_Instance
ORDER BY RESTPRO2.RESTRICTION_PRF_ID


end-SELECT
if $row_for_this_TCD_flag = 'F'
            do Print-Restriction-Profiles-Detail-Header
            print $No_Rows_Found_lbl            (+1,{Col_10})
end-if

end-procedure ! Get-Restriction-Profiles-Detail


!************************************************************************
!                                                                       *
! Get-TRCs-Detail                                                       *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************
begin-procedure Get-TRCs-Detail

#ifdef debugy
    show 'IN PROCEDURE GET-TRCS-DETAIL'
#end-if

let $row_for_this_TCD_flag = 'F'
begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-TRCS-DETAIL'
#end-if


TRC2.TCD_ID                  &TRC2.TCD_ID
TRC2.TRC                     &TRC2.TRC
TRC3.DESCR                   &TRC2.DESCR


    let $TRC               = &TRC2.TRC
    let $TRC_Descr         = &TRC2.DESCR

    if $Language_Code <> $Psoptions_Language_Cd
        do Get-TRC-Descr-Rel-Lang
    end-if

    do Print-TRCs-Detail

    let $row_for_this_TCD_flag = 'T'
    let $TRCs_Detail_Rows_Found = 'T'


FROM PS_TL_TRC_TAO  TRC2, PS_TL_TRC_TBL TRC3
WHERE TRC2.TCD_ID           = $Main_Select_TCD_ID
  AND TRC2.PROCESS_INSTANCE = #Rpt_Process_Instance
  AND TRC3.TRC              = TRC2.TRC
  AND TRC3.EFFDT            = (SELECT MAX(A.EFFDT) FROM PS_TL_TRC_TBL A
                                     WHERE A.TRC = TRC3.TRC
                                       AND A.EFFDT <= $AsOfToday)
  AND TRC3.EFF_STATUS           = 'A'
ORDER BY TRC2.TRC


end-SELECT
if $row_for_this_TCD_flag = 'F'
            do Print-TRCs-Detail-Header
            print $No_Rows_Found_lbl            (+1,{Col_10})
end-if

end-procedure ! Get-TRCs-Detail


!************************************************************************
!                                                                       *
! Get-Task-Profiles-Detail                                              *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-Task-Profiles-Detail


   #ifdef debugy
       show 'IN PROCEDURE GET-TASK-PROFILES-DETAIL'
   #end-if
let $row_for_this_TCD_flag = 'F'
let $Task_Profiles_Detail_First_Row = 'T'
begin-SELECT


   #ifdef debugy
       show 'INSIDE SELECT IN PROCEDURE GET-TASK-PROFILES-DETAIL'
   #end-if


TKPRO2.TCD_ID                 &TKPRO2.TCD_ID
TKPRO2.TASK_PROFILE_ID        &TKPRO2.TASK_PROFILE_ID
TKPRO3.DESCR                  &TKPRO2.DESCR


    let $Task_Profile_ID    = &TKPRO2.TASK_PROFILE_ID
    let $Task_Profile_Descr = &TKPRO2.DESCR

    if $Language_Code <> $Psoptions_Language_Cd
        do Get-Task_Profile_Descr-Rel-Lang
    end-if


    do Print-Task-Profiles-Detail
    let $row_for_this_TCD_flag = 'T'
    let $Task_Profiles_Detail_First_Row = 'F'
    let $Task_Profiles_Detail_Rows_Found = 'T'


FROM PS_TL_TKPRF_TAO  TKPRO2, PS_TL_TSKPRF TKPRO3
WHERE TKPRO2.TCD_ID           = $Main_Select_TCD_ID
  AND TKPRO2.PROCESS_INSTANCE = #Rpt_Process_Instance
  AND TKPRO2.TASK_PROFILE_ID  = TKPRO3.TASK_PROFILE_ID
  AND TKPRO3.EFF_STATUS       = 'A'
  AND TKPRO3.EFFDT       = (SELECT MAX(EFFDT) FROM  PS_TL_TSKPRF A
                                    WHERE A.TASK_PROFILE_ID  = TKPRO3.TASK_PROFILE_ID)


end-SELECT
if $row_for_this_TCD_flag = 'F'
            do Print-Task-Profiles-Detail-Header
            print $No_Rows_Found_lbl            (+1,{Col_10})
end-if

end-procedure ! Get-Task-Profiles-Detail


!************************************************************************
!                                                                       *
! Get-Task-Templates-Detail                                             *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-Task-Templates-Detail


   #ifdef debugy
       show 'IN PROCEDURE GET-TASK-TEMPLATES-DETAIL'
   #end-if
let $row_for_this_TCD_flag = 'F'
let $Task_Templates_Detail_First_Row = 'T'
begin-SELECT


 #ifdef debugy
     show 'INSIDE SELECT IN PROCEDURE GET-TASK-TEMPLATES-DETAIL'
 #end-if


TASKTEMP2.TCD_ID               &TASKTEMP2.TCD_ID
TASKTEMP2.TASK_PRFL_TMPLT_ID   &TASKTEMP2.TASK_PRFL_TMPLT_ID
TASKTEMP2.DESCR                &TASKTEMP2.DESCR


    let $Task_Template_ID    = &TASKTEMP2.TASK_PRFL_TMPLT_ID
    let $Task_Template_Descr = &TASKTEMP2.DESCR

    if $Language_Code <> $Psoptions_Language_Cd
        do Get-Task_Prfl_Tmplt_Descr-Rel-Lang
    end-if

    do Print-Task-Templates-Detail

    let $Task_Templates_Detail_First_Row = 'F'
    let $Task_Templates_Detail_Rows_Found = 'T'
    let $row_for_this_TCD_flag = 'T'

FROM PS_TL_TKTMP_TAO  TASKTEMP2
WHERE TASKTEMP2.TCD_ID           = $Main_Select_TCD_ID
  AND TASKTEMP2.PROCESS_INSTANCE = #Rpt_Process_Instance
ORDER BY TASKTEMP2.TASK_PRFL_TMPLT_ID


end-SELECT
if $row_for_this_TCD_flag = 'F'
             do print-task-templates-detail-header
            print $No_Rows_Found_lbl            (+1,{Col_10})
end-if

end-procedure ! Get-Task-Templates-Detail


!************************************************************************
!                                                                       *
! Get-Task-Elements-Detail                                              *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Get-Task-Elements-Detail


#ifdef debugy
    show 'IN PROCEDURE GET-TASK-ELEMENTS-DETAIL'
#end-if
let $row_for_this_TCD_flag = 'F'
let $Task_Elements_Detail_First_Row = 'T'
begin-SELECT


#ifdef debugy
    show 'INSIDE SELECT IN PROCEDURE GET-TASK-ELEMENTS-DETAIL'
#end-if


TASKELEM2.TCD_ID                 &TASKELEM2.TCD_ID
TASKELEM2.TASK_PRFL_TMPLT_ID     &TASKELEM2.TASK_PRFL_TMPLT_ID
TASKELEM2.TASK_ELEMENT_CD        &TASKELEM2.TASK_ELEMENT_CD
TASKELEM2.DESCR                  &TASKELEM2.DESCR


    let $Task_Template_ID_Elem = &TASKELEM2.TASK_PRFL_TMPLT_ID
    let $Task_Element_Code     = &TASKELEM2.TASK_ELEMENT_CD
    let $Task_Element_Descr    = &TASKELEM2.DESCR

    if $Language_Code <> $Psoptions_Language_Cd
        do Get-Task_Element_Descr-Rel-Lang
    end-if

    IF $PREV_TASK_TEMPLATE_ID <> $Task_Template_ID_Elem
         PRINT ' ' (+1,)
    END-IF

    do Print-Task-Elements-Detail
    let $row_for_this_TCD_flag = 'T'
    let $Task_Elements_Detail_First_Row = 'F'
    let $Task_Elements_Detail_Rows_Found = 'T'
    LET $PREV_TASK_TEMPLATE_ID = &TASKELEM2.TASK_PRFL_TMPLT_ID

FROM PS_TL_TMPDL_TAO  TASKELEM2
WHERE TASKELEM2.TCD_ID           = $Main_Select_TCD_ID
  AND TASKELEM2.PROCESS_INSTANCE = #Rpt_Process_Instance
ORDER BY TASKELEM2.TASK_PRFL_TMPLT_ID

end-SELECT
if $row_for_this_TCD_flag = 'F'
            do Print-Task-Elements-Detail-Header
            print $No_Rows_Found_lbl            (+1,{Col_10})
end-if

end-procedure Get-Task-Elements-Detail


!************************************************************************
!                                                                       *
! Perform-Total-Counts                                                  *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Perform-Total-Counts


#ifdef debugy
    show 'IN PROCEDURE PERFORM-TOTAL-COUNTS'
#end-if


    let #Total_Count = #Total_Count + #Time_Reporter_Count
    let #Total_Count = #Total_Count + #Total_Hours_Count
    let #Total_Count = #Total_Count + #Sched_Days_Count
    let #Total_Count = #Total_Count + #TCD_Supervisor_Count
    let #Total_Count = #Total_Count + #Restriction_Profile_Count
    let #Total_Count = #Total_Count + #TRC_Count
    let #Total_Count = #Total_Count + #Task_Profiles_Count
    let #Total_Count = #Total_Count + #Task_Templates_Count
    let #Total_Count = #Total_Count + #Task_Elements_Count
    let #Total_Count = #Total_Count + #Task_Values_Count
    let #Total_Count = #Total_Count + #Countries_Count
    let #Total_Count = #Total_Count + #States_Count
    let #Total_Count = #Total_Count + #Localities_Count
    let #Total_Count = #Total_Count + #Rate_Codes_Count
    let #Total_Count = #Total_Count + #Override_Reason_Codes_Count
    let #Total_Count = #Total_Count + #Currency_Codes_Count


end-procedure Perform-Total-Counts



!************************************************************************
!                                                                       *
! Print-Summary-Section                                                 *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Print-Summary-Section


#ifdef debugy
    show 'IN PROCEDURE PRINT-SUMMARY-SECTION'
#end-if


    print $Summary_by_TCD_lbl           (+1,{Col_10})

    print $TCD_ID_lbl                   (+1,{Col_10})    bold
    print ':'                           (,+1)
    print $Main_Select_TCD_ID           (,+3)            bold
    graphic                             (, {Col_10}, 37) horz-line

    print $Count_lbl                    (,{Col_40})      bold
    graphic                             (, {Col_40}, 11) horz-line

    print '*'                           (+2,{Col_10})
    print $Time_Reporter_lbl            (,)
    print #Time_Reporter_Count          (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $Total_Hours_lbl              (,)
    print #Total_Hours_Count            (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $Sched_Days_lbl               (,)
    print #Sched_Days_Count             (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $TCD_Supervisor_lbl           (,)
    print #TCD_Supervisor_Count         (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $Restriction_Profile_lbl      (,)
    print #Restriction_Profile_Count    (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $TRC_lbl                      (,)
    print #TRC_Count                    (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $Task_Profiles_lbl            (,)
    print #Task_Profiles_Count          (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $Task_Templates_lbl           (,)
    print #Task_Templates_Count         (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $Task_Elements_lbl            (,)
    print #Task_Elements_Count          (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $Task_Values_lbl              (,)
    print #Task_Values_Count            (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $Countries_lbl                (,)
    print #Countries_Count              (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $States_lbl                   (,)
    print #States_Count                 (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $Localities_lbl               (,)
    print #Localities_Count             (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $Rate_Codes_lbl               (,)
    print #Rate_Codes_Count             (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $Override_Reason_Codes_lbl    (,)
    print #Override_Reason_Codes_Count  (,{Col_40})      edit 999999

    print '*'                           (+2,{Col_10})
    print $Currency_Codes_lbl           (,)
    print #Currency_Codes_Count         (,{Col_40})      edit 999999

    graphic                             (, {Col_10}, 60) horz-line

    print $Total_lbl                    (+2,{Col_10})    bold
    print $Values_Available_lbl         (+1,{Col_10})    bold
    print #Total_Count                  (,{Col_40})      edit 999999




 new-page

end-procedure ! Print-Summary-Section


!************************************************************************
!                                                                       *
! Print-Time-Reporters-Detail                                           *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Print-Time-Reporters-Detail


#ifdef debugy
    show 'IN PROCEDURE PRINT-TIME-REPORTERS-DETAIL'
#end-if


    if $Printed_Page_Header = 'F'
        do Print-Detail-Page-Header
        let $Printed_Page_Header = 'T'
    end-if


    if #current-line + 3 > #Maxlines
        new-page
        let $Time_Reporters_Detail_First_Row = 'T'
    end-if


    if $Time_Reporters_Detail_First_Row = 'T'          ! Print header & column titles first time thru for EE
        do Print-Time-Reporters-Detail-Header
        let $Time_Reporters_Detail_First_Row = 'F'
    end-if


    !print $Punch_DTTM                       (+1,{Col_10}
    !print $Day_Of_Week                      (,{Col_30})
    !print $Punch_Type                       (,{Col_40})

    print $Emplid                            (+1,{Col_10})
    print $Empl_Rcd                          (,{Col_20})   edit 99
    print $Badge_Number                      (,{Col_30})
    print $First_Name                        (,{Col_40})
    print $Last_Name                         (,{Col_70})

end-procedure ! Print-Time-Reporters-Detail


!************************************************************************
!                                                                       *
! Print-Time-Reporters-Detail-Header                                    *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Print-Time-Reporters-Detail-Header


#ifdef debugy
    show 'IN PROCEDURE PRINT-TIME-REPORTERS-DETAIL-HEADER'
#end-if


    print $Time_Reporters_Section_lbl   (+3,{Col_10}) bold
    print $Emplid_lbl                   (+2,{Col_10})
    print $Empl_Rcd_lbl                 (,{Col_20})
    print $Badge_lbl                    (,{Col_30})
    print $First_Name_lbl               (,{Col_40})
    print $Last_Name_lbl                (,{Col_70})

    graphic                             (, {Col_10}, 9)  horz-line
    graphic                             (, {Col_20}, 9)  horz-line
    graphic                             (, {Col_30}, 9)  horz-line
    graphic                             (, {Col_40}, 9)  horz-line
    graphic                             (, {Col_70}, 9)  horz-line
    print ' '                           (+1,)

end-procedure ! Print-Time-Reporters-Detail-Header

!************************************************************************
!                                                                       *
! print-restriction-profiles-detail-header                              *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure print-restriction-profiles-detail-header


#ifdef debugy
    show 'IN PROCEDURE print-restriction-profiles-detail-header'
#end-if


    print $Restriction_Profiles_Section_lbl   (+3,{Col_10}) bold
    print $Restriction_Profile_lbl            (+2,{Col_10})
    print $Restriction_Profile_Descr_lbl      (,{Col_30})

    graphic                             (, {Col_10}, 20)  horz-line
    graphic                             (, {Col_30}, 20)  horz-line


end-procedure ! print-restriction-profiles-detail-header

!************************************************************************
!                                                                       *
! print-trcs-detail-header                                    *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure print-trcs-detail-header


#ifdef debugy
    show 'IN PROCEDURE print-trcs-detail-header'
#end-if


    print $TRCs_Section_lbl   (+3,{Col_10}) bold
    print $TRC_lbl            (+2,{Col_10})
    print $TRC_Descr_lbl      (,{Col_30})

    graphic                             (, {Col_10}, 20)  horz-line
    graphic                             (, {Col_30}, 20)  horz-line


end-procedure ! print-trcs-detail-header

!************************************************************************
!                                                                       *
! print-task-profiles-detail-header                                    *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure print-task-profiles-detail-header


#ifdef debugy
    show 'IN PROCEDURE print-task-profiles-detail-header'
#end-if


    print $Task_Profile_Section_lbl   (+3,{Col_10}) bold
    print $Task_Profile_ID_lbl        (+2,{Col_10})
    print $Description_lbl            (,{Col_30})

    graphic                             (, {Col_10}, 20)  horz-line
    graphic                             (, {Col_30}, 20)  horz-line


end-procedure ! print-task-profiles-detail-header

!************************************************************************
!                                                                       *
! print-task-templates-detail-header                                    *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure print-task-templates-detail-header


#ifdef debugy
    show 'IN PROCEDURE print-task-templates-detail-header'
#end-if


    print $Task_Template_Section_lbl   (+3,{Col_10}) bold
    print $Task_Template_ID_lbl        (+2,{Col_10})
    print $Description_lbl             (,{Col_30})

    graphic                             (, {Col_10}, 20)  horz-line
    graphic                             (, {Col_30}, 20)  horz-line


end-procedure ! print-task-templates-detail-header


!************************************************************************
!                                                                       *
! print-task-elements-detail-header                                    *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure print-task-elements-detail-header


#ifdef debugy
    show 'IN PROCEDURE print-task-elements-detail-header'
#end-if


    print $Task_Element_Section_lbl   (+3,{Col_10}) bold
    print $Task_Template_ID_lbl        (+2,{Col_10})
    print $Task_Element_Cd_lbl         (,{Col_30})
    print $Description_lbl             (,{Col_50})

    graphic                             (, {Col_10}, 20)  horz-line
    graphic                             (, {Col_30}, 20)  horz-line
    graphic                             (, {Col_50}, 20)  horz-line


end-procedure ! print-task-elements-detail-header

!************************************************************************
!                                                                       *
! Print-TCD-Supervisors-Detail                                          *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Print-TCD-Supervisors-Detail


#ifdef debugy
    show 'IN PROCEDURE PRINT-TCD-SUPERVISORS-DETAIL'
#end-if


    if $Printed_Page_Header = 'F'
        do Print-Detail-Page-Header
        let $Printed_Page_Header = 'T'
    end-if


    if #current-line + 3 > #Maxlines
        new-page
        let $TCD_Supervisors_Detail_First_Row = 'T'
    end-if


    if $TCD_Supervisors_Detail_First_Row = 'T'          ! Print header & column titles first time thru for EE
        do Print-TCD-Supervisors-Detail-Header
        let $TCD_Supervisors_Detail_First_Row = 'F'
    end-if


    print $Supervisor_ID                   (+1,{Col_10}
    print $Supervisor_Badge_ID             (,{Col_30})


end-procedure ! Print-TCD-Supervisors-Detail


!************************************************************************
!                                                                       *
! Print-TCD-Supervisors-Detail-Header                                   *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Print-TCD-Supervisors-Detail-Header


#ifdef debugy
    show 'IN PROCEDURE PRINT-TCD-SUPERVISORS-DETAIL-HEADER'
#end-if


    print $TCD_Supervisors_Section_lbl  (+3,{Col_10}) bold

    print $TCD_Supervisor_ID_lbl        (+2,{Col_10})
    print $Badge_lbl                    (,{Col_30})

    graphic                             (, {Col_10}, 20)  horz-line
    graphic                             (, {Col_30}, 20)  horz-line


end-procedure ! Print-TCD-Supervisors-Detail-Header


!************************************************************************
!                                                                       *
! Print-Restriction-Profiles-Detail                                     *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Print-Restriction-Profiles-Detail


#ifdef debugy
    show 'IN PROCEDURE PRINT-RESTRICTION-PROFILES-DETAIL'
#end-if


    if $Printed_Page_Header = 'F'
        do Print-Detail-Page-Header
        let $Printed_Page_Header = 'T'
    end-if


    if #current-line + 3 > #Maxlines
        new-page
        let $Restriction_Profiles_Detail_First_Row = 'T'
    end-if


    if $Restriction_Profiles_Detail_First_Row = 'T'          ! Print header & column titles first time thru for EE
        do Print-Restriction-Profiles-Detail-Header
        let $Restriction_Profiles_Detail_First_Row = 'F'
    end-if

    print $Restriction_Profile_ID         (+1,{Col_10}
    print $Restriction_Profile_Descr      (,{Col_30})


end-procedure ! Print-Restriction-Profiles-Detail


!************************************************************************
!                                                                       *
! Print-TRCs-Detail                                                     *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Print-TRCs-Detail


#ifdef debugy
    show 'IN PROCEDURE PRINT-TRCS-DETAIL'
#end-if


    if $Printed_Page_Header = 'F'
        do Print-Detail-Page-Header
        let $Printed_Page_Header = 'T'
        show 'Print1'
    end-if


    if #current-line + 3 > #Maxlines
        new-page
        let $TRCs_Detail_First_Row = 'T'
    end-if


    if $TRCs_Detail_First_Row = 'T'          ! Print header & column titles first time thru for EE
        do Print-TRCs-Detail-Header
        let $TRCs_Detail_First_Row = 'F'
        show 'Print5'
    end-if


    print $TRC                (+1,{Col_10}
    print $TRC_Descr          (,{Col_30})


end-procedure ! Print-TRCs-Detail


!************************************************************************
!                                                                       *
! Print-Task-Profiles-Detail                                            *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Print-Task-Profiles-Detail


#ifdef debugy
    show 'IN PROCEDURE PRINT-TASK-PROFILES-DETAIL'
#end-if


    if $Printed_Page_Header = 'F'
        do Print-Detail-Page-Header
        let $Printed_Page_Header = 'T'
    end-if

    if #current-line + 3 > #Maxlines
        new-page
        let $Task_Profiles_Detail_First_Row = 'T'
    end-if

    if $Task_Profiles_Detail_First_Row = 'T'          ! Print header & column titles first time thru for EE
        do Print-Task-Profiles-Detail-Header
        let $Task_Profiles_Detail_First_Row = 'F'
    end-if

    print $Task_Profile_ID         (+1,{Col_10}
    print $Task_Profile_Descr      (,{Col_30})


end-procedure ! Print-Task-Profiles-Detail


!************************************************************************
!                                                                       *
! Print-Task-Templates-Detail                                           *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Print-Task-Templates-Detail


#ifdef debugy
    show 'IN PROCEDURE PRINT-TASK-TEMPLATES-DETAIL'
#end-if


    if $Printed_Page_Header = 'F'
        do Print-Detail-Page-Header
        let $Printed_Page_Header = 'T'
    end-if

    if #current-line + 3 > #Maxlines
        new-page
        let $Task_Templates_Detail_First_Row = 'T'
    end-if


    if $Task_Templates_Detail_First_Row = 'T'          ! Print header & column titles first time thru for EE
        do Print-Task-Templates-Detail-Header
        let $Task_Templates_Detail_First_Row = 'F'
    end-if


    print $Task_Template_ID     (+1,{Col_10}
    print $Task_Template_Descr  (,{Col_30})


end-procedure ! Print-Task-Templates-Detail

!************************************************************************
!                                                                       *
! Print-Task-Elements-Detail                                            *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Print-Task-Elements-Detail


#ifdef debugy
    show 'IN PROCEDURE PRINT-TASK-ELEMENTS-DETAIL'
#end-if


    if $Printed_Page_Header = 'F'

        do Print-Detail-Page-Header
        let $Printed_Page_Header = 'T'
    end-if

    if #current-line + 3 > #Maxlines
        new-page
        let $Task_Elements_Detail_First_Row = 'T'
    end-if


    if $Task_Elements_Detail_First_Row = 'T'          ! Print header & column titles first time thru for EE
        do Print-Task-Elements-Detail-Header
        let $Task_Elements_Detail_First_Row = 'F'
    end-if


    print $Task_Template_ID_Elem (+1,{Col_10}
    print $Task_Element_Code     (,{Col_30})
    print $Task_Element_Descr    (,{Col_50})


end-procedure ! Print-Task-Elements-Detail


!************************************************************************
!                                                                       *
! Print-Task-Elements-Header                                            *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Print-Task-Elements-Header


#ifdef debugy
    show 'IN PROCEDURE PRINT-TASK-ELEMENTS-HEADER'
#end-if
    !show 'IN PROCEDURE PRINT-TASK-ELEMENTS-HEADER'

    print $Task_Elements_Section_lbl    (+3,{Col_10}) bold

    print $Task_Template_ID_Elem_lbl    (+1,{Col_10}
    print $Task_Element_Code_lbl        (,{Col_30})
    print $Task_Element_Descr_lbl       (,{Col_50})

    graphic                             (, {Col_10}, 20)  horz-line
    graphic                             (, {Col_30}, 20)  horz-line
    graphic                             (, {Col_50}, 20)  horz-line


end-procedure ! Print-Task-Elements-Header


!************************************************************************
!                                                                       *
! Print-Detail-Page-Header                                              *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!                                                                       *
!************************************************************************


begin-procedure Print-Detail-Page-Header


#ifdef debugy
    show 'IN PROCEDURE PRINT-DETAIL-PAGE-HEADER'
#end-if


    print $Detail_by_TCD_lbl    (+3,{Col_10})    bold

    print $TCD_ID_lbl           (+2,{Col_10})    bold
    print ':'                   (,+1)            bold
    print $Main_Select_TCD_ID   (,+3)            bold
    graphic                     (, {Col_10}, 37) horz-line


end-procedure ! Print-Detail-Page-Header

!************************************************************************
!                                                                       *
! Table-Clean-Up                                                      *
!                                                                       *
! Called By:                                                            *
! Description:                                                          *
!                                                                       *
!************************************************************************
begin-procedure Table-Clean-Up

begin-sql
DELETE FROM PS_TL_TRC_TAO WHERE PROCESS_INSTANCE = #Rpt_Process_Instance
end-sql

begin-sql
DELETE FROM PS_TL_TKPRF_TAO WHERE PROCESS_INSTANCE = #Rpt_Process_Instance
end-sql

begin-sql
DELETE FROM PS_TL_TKTMP_TAO WHERE PROCESS_INSTANCE = #Rpt_Process_Instance
end-sql

begin-sql
DELETE FROM PS_TL_TMPDL_TAO  WHERE PROCESS_INSTANCE = #Rpt_Process_Instance
end-sql

begin-sql
DELETE FROM PS_TL_CDVAL_TAO WHERE PROCESS_INSTANCE = #Rpt_Process_Instance
end-sql

begin-sql
DELETE FROM PS_TL_EMPL_TAO WHERE PROCESS_INSTANCE = #Rpt_Process_Instance
end-sql

begin-sql
DELETE FROM PS_TL_SCHED_TAO WHERE PROCESS_INSTANCE = #Rpt_Process_Instance
end-sql

begin-sql
DELETE FROM PS_TL_RESPF_TAO WHERE PROCESS_INSTANCE = #Rpt_Process_Instance
end-sql

begin-sql
DELETE FROM PS_TL_TTHRS_TAO WHERE PROCESS_INSTANCE = #Rpt_Process_Instance
end-sql

begin-sql
DELETE FROM PS_TL_RPTEL_TAO WHERE PROCESS_INSTANCE = #Rpt_Process_Instance
end-sql

begin-sql
DELETE FROM PS_TL_SUPVR_TAO WHERE PROCESS_INSTANCE = #Rpt_Process_Instance
end-sql

end-procedure Table-Clean-Up

!************************************************************************
!                                                                       *
! Get-TRC-Descr-Rel-Lang                                                *
!                                                                       *
! Called By: Get-TRC-Detail                                             *
! Description: Looks up the related language description for TRC        *
!                                                                       *
!************************************************************************
begin-procedure Get-TRC-Descr-Rel-Lang

begin-select
TL_TRC_LANG.DESCR          &TL_TRC_LANG.DESCR

    let $TRC_Descr = rtrim(&TL_TRC_LANG.DESCR,' ')

FROM PS_TL_TRC_LANG  TL_TRC_LANG
WHERE TL_TRC_LANG.TRC         = &TRC2.TRC
  AND TL_TRC_LANG.LANGUAGE_CD = $Language_Code
  AND TL_TRC_LANG.EFFDT       = (SELECT MAX(EFFDT) FROM PS_TL_TRC_LANG
                                  WHERE TRC = TL_TRC_LANG.TRC
                                    AND LANGUAGE_CD = TL_TRC_LANG.LANGUAGE_CD)
end-select

end-procedure

!************************************************************************
!                                                                       *
! Get-RestrProf-Descr-Rel-Lang                                          *
!                                                                       *
! Called By: Get-Restriction-Profiles-Detail                            *
! Description: Looks up the related language description for Restr prof *
!                                                                       *
!************************************************************************
begin-procedure Get-RestrProf-Descr-Rel-Lang

begin-select
TL_RESPRF_LNG.DESCR         &TL_RESPRF_LNG.DESCR

    let $Restriction_Profile_Descr = rtrim(&TL_RESPRF_LNG.DESCR,' ')

FROM PS_TL_RESPRF_LNG TL_RESPRF_LNG
WHERE TL_RESPRF_LNG.RESTRICTION_PRF_ID  = &RESTPRO2.RESTRICTION_PRF_ID
  AND TL_RESPRF_LNG.LANGUAGE_CD = $Language_Code
  AND TL_RESPRF_LNG.EFFDT = (SELECT MAX(EFFDT) FROM PS_TL_RESPRF_LNG
                              WHERE RESTRICTION_PRF_ID = TL_RESPRF_LNG.RESTRICTION_PRF_ID
                                AND LANGUAGE_CD = TL_RESPRF_LNG.LANGUAGE_CD)
end-select

end-procedure

!************************************************************************
!                                                                       *
! Get-Task_Profile_Descr-Rel-Lang                                       *
!                                                                       *
! Called By: Get-Task-Profiles-Detail                                   *
! Description: Looks up the related language description for task prof  *
!                                                                       *
!************************************************************************
begin-procedure Get-Task_Profile_Descr-Rel-Lang

begin-select
TL_TSKPRF_LNG.DESCR         &TL_TSKPRF_LNG.DESCR

  display '&TL_TSKPRF_LNG.DESCR' noline
  display &TL_TSKPRF_LNG.DESCR

    let $Task_Profile_Descr = rtrim(&TL_TSKPRF_LNG.DESCR,' ')

FROM PS_TL_TSKPRF_LNG TL_TSKPRF_LNG
WHERE TL_TSKPRF_LNG.TASK_PROFILE_ID  = &TKPRO2.TASK_PROFILE_ID
  AND TL_TSKPRF_LNG.LANGUAGE_CD = $Language_Code
  AND TL_TSKPRF_LNG.EFFDT       = (SELECT MAX(EFFDT) FROM PS_TL_TSKPRF_LNG
                                    WHERE TASK_PROFILE_ID  = TL_TSKPRF_LNG.TASK_PROFILE_ID
                                      AND LANGUAGE_CD = TL_TSKPRF_LNG.LANGUAGE_CD)
end-select

end-procedure !Get-Task_Profile_Descr-Rel-Lang

!************************************************************************
!                                                                       *
! Get-Task_Prfl_Tmplt_Descr-Rel-Lang                                    *
!                                                                       *
! Called By: Get-Task-Templates-Detail                                  *
! Description: Looks up the related language description for task tmplt *
!                                                                       *
!************************************************************************
begin-procedure Get-Task_Prfl_Tmplt_Descr-Rel-Lang

begin-select
TL_TSKPRF_T_LNG.DESCR         &TL_TSKPRF_T_LNG.DESCR

    let $Task_Template_Descr = rtrim(&TL_TSKPRF_T_LNG.DESCR,' ')

FROM PS_TL_TSKPRF_T_LNG TL_TSKPRF_T_LNG
WHERE TL_TSKPRF_T_LNG.TASK_PRFL_TMPLT_ID  = &TASKTEMP2.TASK_PRFL_TMPLT_ID
  AND TL_TSKPRF_T_LNG.LANGUAGE_CD = $Language_Code

end-select

end-procedure !Get-Task_Prfl_Tmplt_Descr-Rel-Lang

!************************************************************************
!                                                                       *
! Get-Task_Element_Descr-Rel-Lang                                       *
!                                                                       *
! Called By: Get-Task-Elements-Detail                                   *
! Description: Looks up the related language description for task elem  *
!                                                                       *
!************************************************************************
begin-procedure Get-Task_Element_Descr-Rel-Lang

begin-select
TL_TASKELE_LANG.DESCR         &TL_TASKELE_LANG.DESCR

    let $Task_Element_Descr = rtrim(&TL_TASKELE_LANG.DESCR,' ')

FROM PS_TL_TASKELE_LANG TL_TASKELE_LANG
WHERE TL_TASKELE_LANG.TASK_ELEMENT_CD  = &TASKELEM2.TASK_ELEMENT_CD
  AND TL_TASKELE_LANG.LANGUAGE_CD = $Language_Code

end-select

end-procedure !Get-Task_Element_Descr-Rel-Lang

!***********************************************************************
!                                                                      *
! Additional SQCs included in the report                               *
!                                                                      *
!***********************************************************************

#include 'curdttim.sqc'     !Get-Current-DateTime procedure
#include 'datemath.sqc'     !Date conversion procedures
#include 'sqrtrans.sqc'     !Translate SQR strings to given language
#include 'prcsapi.sqc'
#include 'prcslng.sqc'
#include 'prcsdef.sqc'
#include 'readxlat.sqc'     !Procedure to read values from xlattable
#include 'reset1.sqc'        !Reset printer procedure
#include 'number.sqc'   !Routines to format numbers
#include 'datetime.sqc' !Routines for date and time formatting
