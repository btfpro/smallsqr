!***********************************************************************
!  FPA310.SQC:  Flag employees to be advanced                          *
!                                                                      *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:12:38:59                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************


!---------- Main process -------------!
begin-procedure FPA310-Main
do Get-ProTerm
do Calc-DateLim
do Get-Prom
end-procedure FPA310-Main

!---------- Select Days Before (Sub)Step Incremnt -------------!

begin-procedure Get-ProTerm

let $sql-statement = 'FPA310.SQC,,Select,Get-ProTerm'
begin-select On-Error=SQL-Error

W.FP_PROMTERM_DY

from PS_FPMSYSTEM_TBL W
end-select

#IFDEF DEBUGI
    display 'Days Before (Sub)Step Incremnt ' noline
    display &W.FP_PROMTERM_DY
#ENDIF

end-procedure Get-ProTerm

!---------- Limit date calculating -------------!
begin-procedure Calc-DateLim

 Let #wnbj=&W.FP_PROMTERM_DY

 do Convert-To-DTU-Date($AsOfToday,$DateLimw)
 do DTU-Add-Days($DateLimw,#wnbj,$DateLim)
 do Convert-From-DTU-Date($DateLim,$DateLim_Native)

 #IFDEF DEBUGI
    display 'Limit date:' noline
    display $DateLim_Native
 #ENDIF

end-procedure Calc-DateLim

!---------- Select Employees -------------!
begin-procedure Get-Prom


!If retro, use indicator to check that FP_PROM_OK = Y in FPAEECAREER record
!init indicator
!--------------------------------------------------------------------------

#IFDEF RETRO

    move 'N' to $FPA310_OK

#END-IF


!If retro, build dynamic variable 'where' according to the calling routine
!and end date =  end date retro
!build dynamic variable 'var_from'
!--------------------------------------------------------------------------

move 'PS_FPAEECAREER CC1, PS_FPAEESTATUS S1, PS_FPMSTATUSEE_TBL TT1, PS_PERSON_NAME Y1' to $var_from

let $var_where = ''

#IFDEF RETRO

    move #empl_rcd to $empl_rcd
    let $var_where = ' and   CC1.EMPLID  = ''' || $Emplid  || ''''
    let $var_where =  $var_where  ||
            ' and CC1.EMPL_RCD  = ' || $Empl_rcd
    let $var_where =  $var_where  ||
            ' and CC1.EFFDT <= {DATEIN-PREFIX}''' || $date-fin-retro  || ''''
    let $var_where =  $var_where  || '{DYN-DateIn-Suffix}'

#ELSE

    let $var_from = $var_from || ', PS_FPAEELEGALSTAT A, PS_FPFAST_PERS_VW2 SCRTY'                                              !SQR security

    let $var_where =  $var_where  || ' and CC1.FP_FOR_PROM_DT <= {DATEIN-PREFIX}''' || $DateLim_Native   || ''''
    let $var_where =  $var_where  || '{DYN-DateIn-Suffix}'
    let $var_where =  $var_where  || ' and S1.EMPLID = SCRTY.EMPLID ' || $SecurityClause                                         !SQR security
    let $var_where =  $var_where  || ' AND (A.EMPLID = S1.EMPLID AND A.EMPL_RCD = S1.EMPL_RCD AND A.FP_HIR_DOS_SIT = ''02'') '  !SQR security FPAEELEGALSTAT


#END-IF


let $sql-statement = 'FPA310.SQC,Select,Get-Tenure'
begin-select On-Error=SQL-Error

CC1.EMPLID                                          &CC1.emplid
CC1.EMPL_RCD                                        &CC1.empl_rcd
{DATEOUT-PREFIX}CC1.EFFDT{DATEOUT-SUFFIX}           &CC1.effdt
CC1.EFFSEQ                                          &CC1.EFFSEQ
{DATEOUT-PREFIX}CC1.FP_FOR_PROM_DT{DATEOUT-SUFFIX}  &CC1.FP_FOR_PROM_DT
CC1.FP_PROM_OK                                      &CC1.FP_PROM_OK
CC1.FP_SETID_RANK                                   &CC1.Setid
CC1.FP_RANK_CD                                      &CC1.Grade
CC1.FP_STEP_CD                                      &CC1.Echelon
Y1.NAME                                             &Y1.NAME
S1.FP_STATUSEE_CD                                   &S1.statusee_cd

        !Init variables
        !--------------
        do Init-var

        do Display
        do Auto-Prom                    !Automatic (Sub)Step Increment authorized

   IF (rtrim(&G1.FP_PROM_STEP,' ')='Y' and rtrim(&E1.FP_AUTO_PROM,' ')='Y' and rtrim(&T1.FP_AUTO_PROM,' ')='Y' )

      do Print-Prom
      do Update-Prom                    !Update of Automatic (Sub)Step Increment flag into FPAEECAREER

        !If no retro, update FPAEEUPDROW record
        !--------------------------------------
                 #IFNDEF RETRO
                        do Insert-Fpaeeupdrow($Emplid,#Empl_rcd,$Effdt_nat,$AsOfToday)

                        #IFDEF DEBUGI
                        display 'update FPAEEUPDROW record'
                        #ENDIF

                 #END-IF


        !If retro, use indicator to check that FP_PROM_OK = Y in FPAEECAREER record
        !init indicator
        !---------------------------------------------------------------------------

        #IFDEF RETRO

            let $FPA310_OK = 'Y'

        #END-IF

   END-IF

from    [PS_FPAEECAREER CC1, PS_FPAEESTATUS S1, PS_FPMSTATUSEE_TBL TT1, PS_PERSON_NAME Y1, PS_FPAEELEGALSTAT A, PS_FPFAST_PERS_VW2 SCRTY:$var_from]

where   CC1.EMPLID=Y1.EMPLID
        and CC1.FP_CLD_INST = 'N'                !Instance open
        and CC1.FP_PROM_OK='N'
        and CC1.FP_INST_STAT='R'                 !actual
        and S1.EMPLID=CC1.EMPLID
        and S1.EMPL_RCD=CC1.EMPL_RCD
        and S1.EFFDT          =
        (select max(SS1.EFFDT) from PS_FPAEESTATUS SS1
        where SS1.EMPLID  = CC1.EMPLID
        and SS1.EMPL_RCD =CC1.EMPL_RCD
        and SS1.EFFDT<= CC1.FP_FOR_PROM_DT)
        and   TT1.FP_STATUSEE_CD = S1.FP_STATUSEE_CD
        and   TT1.FP_TRNE_SVT_CD <> 'S'            !No select trainee
        and   TT1.EFF_STATUS     = 'A'
        and   TT1.EFFDT          =
             (select max(EFFDT) from PS_FPMSTATUSEE_TBL
              where  FP_STATUSEE_CD  = S1.FP_STATUSEE_CD
              and    EFFDT          <= S1.EFFDT)
        [$var_where]

order by CC1.EMPLID, CC1.EMPL_RCD, CC1.EFFDT, CC1.EFFSEQ

end-select

end-procedure Get-Prom



begin-procedure Display

        Display 'Emplid:' noline
        Display &CC1.emplid

        Display 'Grade:' noline
        Display &CC1.Grade

        Display 'Step:' noline
        Display &CC1.Echelon

        Display 'Effdt:' noline
        Display &CC1.effdt

end-procedure Display



begin-procedure Auto-Prom

begin-select

G1.FP_PROM_STEP
E1.FP_AUTO_PROM
T1.FP_AUTO_PROM

from    PS_FPAEELEGALSTAT L1,
        PS_FPMLEGALSTA_TBL G1,
        PS_FPMRANK_TBL K1,
        PS_FPMSALSTEP_TBL E1,
        PS_FPMSTATUSEE_TBL T1

where   L1.EMPLID=$Emplid
        and L1.EMPL_RCD=#Empl_rcd
        and L1.FP_INST_STAT = 'R'
        and   L1.EFFDT          =
        (select max(LL1.EFFDT) from PS_FPAEELEGALSTAT LL1
        where  LL1.EMPLID  = $Emplid
        and LL1.EMPL_RCD =#Empl_rcd
        and LL1.FP_INST_STAT = 'R'
        and    LL1.EFFDT<= {DATEIN-PREFIX}$for_prom_dt{DATEIN-SUFFIX})

        and G1.FP_LEGALSTAT_CD=L1.FP_LEGALSTAT_CD
        and G1.EFF_STATUS = 'A'
        and G1.EFFDT=(select max(GG1.EFFDT) from PS_FPMLEGALSTA_TBL GG1
        where  GG1.FP_LEGALSTAT_CD=L1.FP_LEGALSTAT_CD
        and    GG1.EFFDT<= {DATEIN-PREFIX}$for_prom_dt{DATEIN-SUFFIX})

        and K1.FP_RANK_CD =$rank
        and K1.SETID      =$Setid
        and K1.EFF_STATUS = 'A'
        and K1.EFFDT= (select max(KK1.EFFDT) from PS_FPMRANK_TBL KK1
        where  KK1.FP_RANK_CD =$rank
        and    KK1.SETID      =$Setid
        and    KK1.EFFDT<= {DATEIN-PREFIX}$for_prom_dt{DATEIN-SUFFIX})

        and E1.FP_MATRIX_TYP=K1.FP_MATRIX_TYP
        and E1.FP_MATRIX_CD=K1.FP_MATRIX_CD
        and E1.FP_SCALE_CD=K1.FP_SCALE_CD
        and E1.FP_STEP_CD=$step
        and E1.EFFDT          =
        (select max(EE1.EFFDT) from PS_FPMSALSTEP_TBL EE1
        where  EE1.FP_MATRIX_TYP=K1.FP_MATRIX_TYP
        and EE1.FP_MATRIX_CD=K1.FP_MATRIX_CD
        and EE1.FP_SCALE_CD=K1.FP_SCALE_CD
        and EE1.FP_STEP_CD=$step
        and EE1.EFFDT<= {DATEIN-PREFIX}$for_prom_dt{DATEIN-SUFFIX})

        and T1.FP_STATUSEE_CD=$status
        and T1.EFF_STATUS = 'A'
        and T1.EFFDT=
        (select max(TT1.EFFDT) from PS_FPMSTATUSEE_TBL TT1
        where TT1.FP_STATUSEE_CD=$status
        and TT1.EFFDT<= {DATEIN-PREFIX}$for_prom_dt{DATEIN-SUFFIX})

end-select

end-procedure Auto-Prom



!---------- Employees to be Rated editing -------------!
begin-procedure Print-Prom

let $Name=substr(&Y1.NAME,1,35)

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&CC1.effdt ,$Effdt,{DEFDMY},'','')

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&CC1.FP_FOR_PROM_DT,$FP_FOR_PROM_DT,{DEFDMY},'','')

print &CC1.emplid                (+1,1)
Print $Name                     (,13)
print &CC1.empl_rcd             (,54)
print $Effdt                    (,64)
print $FP_FOR_PROM_DT           (,82)

end-procedure Print-Prom



!---------- Update indicator FP_PROM_OK in FPAEECAREER record-------------!
begin-procedure Update-Prom

Display 'Update-Prom'

let $sql-statement = 'FPA310.SQC,,Update,Update-Tenure'
begin-SQL On-Error=SQL-Error

Update PS_FPAEECAREER
Set
        FP_PROM_OK='Y',
        LAST_UPDATE_DATE={DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX}

Where EMPLID=$Emplid
  and EMPL_RCD=#Empl_rcd
  and EFFDT={DATEIN-PREFIX}$Effdt_nat{DATEIN-SUFFIX}
  and EFFSEQ = #effseq

end-SQL

end-procedure Update-Prom



BEGIN-PROCEDURE Init-var

    let $Emplid = rtrim(&CC1.Emplid,' ')
    let #Empl_rcd = &CC1.empl_rcd
    Do Convert-To-DTU-Date(&CC1.effdt,$Effdt_dtu)           ! SQR format
    let $Effdt_nat = &CC1.effdt                             ! Native format
    let #effseq = &CC1.EFFSEQ
    let $for_prom_dt = &CC1.FP_FOR_PROM_DT
    let $prom_ok = rtrim(&CC1.FP_PROM_OK,' ')
    let $Setid = rtrim(&CC1.Setid,' ')
    let $rank = rtrim(&CC1.Grade,' ')
    let $step = rtrim(&CC1.Echelon,' ')
    let $status = rtrim(&S1.statusee_cd,' ')

END-PROCEDURE Init-var


! SQR using this SQC must have the following includes
!----------------------------------------------------

!#include 'setenv.sqc'          ! Set environment
!#include 'setup01.sqc'         ! Printer and page-size initialization
!#include 'curdttim.sqc'        ! Get-Current-DateTime procedure
!#include 'stdapi.sqc'          ! Routines to update run status
!#Include 'number.sqc'          ! Routines to format numbers
!#Include 'fptestdt.sqc'      ! Routines for date and time formatting (FPS)
!#Include 'reset.sqc'           ! Reset printer procedure
!#include 'fpjob.sqc'           ! Insert-Fpaeeupdrow procedure (FPS)
!#Include 'hrsecty.sqc'         ! Get SQR Security parameters
!#Include 'fpparam.sqc'         ! Routines for  Parameters Tables (FPS)
