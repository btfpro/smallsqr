!********************************************
! RDED002:  Retroactive Deduction Requests  *
!********************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2006/07/19:09:19:26                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
#define a 15                    ! emplid 16
#define b 5                     ! EMPL_RCD 6
#define c 14                    ! pay_end_dt 15
#define d 6                     ! retroded_rqst_type 6
#define e 8                     ! benefit_program 8
#define f 14                    ! plan_type 15
#define g 10                    ! benefit_plan 11
#define h 10                    ! dedcd 11
#define i 3                     ! ded_class 4
#define j 14                    ! deduct_amt 15
#define k 14                    ! new_deduct_amt 15
#define l 14                    ! deduct_amt_ovrd 15
#define m 14                    ! retroded_ded_amt 15
#define n 7                     ! OK_to_process 6


#include 'setenv.sqc' !Set environment

!**********************************
 begin-program
!**********************************
  do Init-Report
  if $SortBy='E'
    do ReportByEmplid
  else
    do ReportByType
  end-if
  do Stdapi-Term
end-program

!**********************************
begin-procedure Init-Report
!**********************************
  do Init-DateTime
  do Init-Number
  do Stdapi-Init

  move 'RDED002' to $ReportID
  do Get-Report-Language
  let $ReportTitle  = $RDED002-REPORTTITLE
  display $ReportID
  display $ReportTitle

  do Get-Current-DateTime
  do Parameter-Initialization
end-procedure

!**********************************
begin-procedure Parameter-Initialization
!**********************************
  if $Prcs_Process_Instance = ''
    Display 'This SQR must be run from PeopleSoft'
  else
    do Select-Parameters
    move $C.RDEDSQR_SORT to $SortBy
    if $C.Retroded_Rqst_Type =' ' or $C.Retroded_Rqst_Type =''
      move '%' to $Retroded_Rqst_Type
    else
      move $C.Retroded_Rqst_Type to $Retroded_Rqst_Type
    end-if
  end-if
end-procedure

!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from RDED002 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('RDED002','REPORT_TITLE', $RDED002-REPORTTITLE,#CW)
  do Get_Field_Information ('RDED002','RQST',         $RDED002-RQST,       #CW)
  do Get_Field_Information ('RDED002','DED',          $RDED002-DED,        #CW)
  do Get_Field_Information ('RDED002','CLS',          $RDED002-CLS,        #CW)

  do Get_Field_Information ('BEN1',   'PLAN',          $BEN1-PLAN,           #CW)
  do Get_Field_Information ('BEN1',   'BENEFIT',       $BEN1-BENEFIT,        #CW)
  do Get_Field_Information ('BEN1',   'DATE',          $BEN1-DATE,           #CW)
  do Get_Field_Information ('BEN1',   'EMPL',          $BEN1-EMPL,           #CW)
  do Get_Field_Information ('BEN1',   'PROGRAM',       $BEN1-PROGRAM,        #CW)
  do Get_Field_Information ('BEN1',   'TYPE',          $BEN1-TYPE,           #CW)
  do Get_Field_Information ('BEN1',   'PROCESS',       $BEN1-PROCESS,        #CW)
  do Get_Field_Information ('BEN1',   'EMPLOYEE',      $BEN1-EMPLOYEE,       #CW)
  do Get_Field_Information ('BEN1',   'DEDCTON',       $BEN1-DEDCTON,        #CW)
  do Get_Field_Information ('BEN1',   'PLAN',          $BEN1-PLAN,           #CW)
  do Get_Field_Information ('BEN1',   'ID',            $BEN1-ID,             #CW)
  do Get_Field_Information ('BEN1',   'CODE',          $BEN1-CODE,           #CW)
  do Get_Field_Information ('BEN1',   'RCD_NO',        $BEN1-RCD-NO,         #CW)
  do Get_Field_Information ('BEN1',   'PAY',           $BEN1-PAY,            #CW)
  do Get_Field_Information ('BEN1',   'END_DATE',      $BEN1-END-DATE,       #CW)
  do Get_Field_Information ('BEN1',   'AMT',           $BEN1-AMT,            #CW)
  do Get_Field_Information ('BEN1',   'OVERRIDE',      $BEN1-OVERRIDE,       #CW)
  do Get_Field_Information ('BEN1',   'DEDUCT_AMT',    $BEN1-DEDUCT-AMT,     #CW)
  do Get_Field_Information ('BEN1',   'OLD_DEDUCT',    $BEN1-OLD-DEDUCT,     #CW)
  do Get_Field_Information ('BEN1',   'NEW_DEDUCT',    $BEN1-NEW-DEDUCT,     #CW)
  do Get_Field_Information ('BEN1',   'RETROACTIVE',   $BEN1-RETROACTIVE,    #CW)
  do Get_Field_Information ('BEN1',   'OK_TO',         $BEN1-OK-TO,          #CW)

End-Procedure

!**********************************
begin-setup
!**********************************

#Include 'ptpsl177.sqc'  !Printer and page-size initialization

end-setup

!**********************************
begin-heading 9
!**********************************

#Include 'stdhdgtr.sqc'

!Column Heading line 1
  print $BEN1-EMPLOYEE       (+2,1,{a})
  print $BEN1-EMPL           (0,+1,{b})
  print $BEN1-PAY            (0,+1,{c})
  print $RDED002-RQST        (0,+1,{d})
  print $BEN1-BENEFIT        (0,+1,{e})
  print $BEN1-PLAN           (0,+1,{f})
  print $BEN1-BENEFIT        (0,+1,{g})
  print $BEN1-DEDCTON        (0,+1,{h})
  print $RDED002-DED         (0,+1,{i})
  print $BEN1-OLD-DEDUCT     (0,+1,{j})
  print $BEN1-NEW-DEDUCT     (0,+1,{k})
  print $BEN1-DEDUCT-AMT     (0,+1,{l})
  print $BEN1-RETROACTIVE    (0,+1,{m})
  print $BEN1-OK-TO          (0,+1,{n})

!Column Heading line 2
  print $BEN1-ID             (+1,1,{a})
  print $BEN1-RCD-NO         (0,+1,{b})
  print $BEN1-END-DATE       (0,+1,{c})
  print $BEN1-TYPE           (0,+1,{d})
  print $BEN1-PROGRAM        (0,+1,{e})
  print $BEN1-TYPE           (0,+1,{f})
  print $BEN1-PLAN           (0,+1,{g})
  print $BEN1-CODE           (0,+1,{h})
  print $RDED002-CLS         (0,+1,{i})
  print $BEN1-AMT            (0,+1,{j})
  print $BEN1-AMT            (0,+1,{k})
  print $BEN1-OVERRIDE       (0,+1,{l})
  print $BEN1-DEDUCT-AMT     (0,+1,{m})
  print $BEN1-PROCESS        (0,+1,{n})

!Column Heading line 3
  print '='            (+1,1,{a})  FILL
  print '='            (0,+1,{b})  FILL
  print '='            (0,+1,{c})  FILL
  print '='            (0,+1,{d})  FILL
  print '='            (0,+1,{e})  FILL
  print '='            (0,+1,{f})  FILL
  print '='            (0,+1,{g})  FILL
  print '='            (0,+1,{h})  FILL
  print '='            (0,+1,{i})  FILL
  print '='            (0,+1,{j})  FILL
  print '='            (0,+1,{k})  FILL
  print '='            (0,+1,{l})  FILL
  print '='            (0,+1,{m})  FILL
  print '='            (0,+1,{n})  FILL

end-heading

!**********************************
begin-procedure ReportByEmplid
!**********************************

begin-SELECT
A.EMPLID                 (+1,1,{A})
A.EMPL_RCD              (0,+1,{B})
B.PAY_END_DT
    do Format-DateTime(&B.pay_end_dt,$out,{DEFDATE},'','')
    print $out           (0,+1,{c})
A.RETRODED_RQST_TYPE     (0,+1,{D})
B.BENEFIT_PROGRAM        (0,+1,{E})
B.PLAN_TYPE
    let $fieldname='PLAN_TYPE'
    move &B.Plan_Type to $B.Plan_Type
    let $fieldvalue=&B.Plan_Type
    do read-translate-table
    print $xlatshortname (0,+1,{f})
B.BENEFIT_PLAN           (0,+1,{G})
B.DEDCD                  (0,+1,{H})
B.DED_CLASS              (0,+1,{I})
B.DEDUCT_AMT             (0,+1,{J})
B.NEW_DEDUCT_AMT         (0,+1,{K})
B.DEDUCT_AMT_OVRD        (0,+1,{L})
B.RETRODED_DED_AMT       (0,+1,{M})
B.OK_TO_PROCESS          (0,+1,{N})

FROM  PS_RETRODED_RQST A,
      PS_RETRODED_DEDS B
WHERE A.RETRODED_SEQ_NO=B.RETRODED_SEQ_NO
AND   A.RETRODED_PRCS_FLAG  = 'C'
AND   A.RETRODED_RQST_TYPE LIKE $Retroded_Rqst_Type
ORDER BY A.EMPLID,
  A.EMPL_RCD,
  B.BENEFIT_PROGRAM,
  B.PLAN_TYPE,
  B.BENEFIT_PLAN,
  B.DEDCD,
  B.PAY_END_DT

end-SELECT

end-procedure

!**********************************
begin-procedure ReportByType
!**********************************

begin-SELECT
D.EMPLID                 (+1,1,{A})
D.EMPL_RCD              (0,+1,{B})
E.PAY_END_DT
    do Format-DateTime(&E.pay_end_dt,$out,{DEFDATE},'','')
    print $out           (0,+1,{c})
D.RETRODED_RQST_TYPE     (0,+1,{D})
E.BENEFIT_PROGRAM        (0,+1,{E})
E.PLAN_TYPE
    let $fieldname='PLAN_TYPE'
    let $fieldvalue=&E.Plan_Type
    do read-translate-table
    print $xlatshortname (0,+1,{f})
E.BENEFIT_PLAN           (0,+1,{G})
E.DEDCD                  (0,+1,{H})
E.DED_CLASS              (0,+1,{I})
E.DEDUCT_AMT             (0,+1,{J})
E.NEW_DEDUCT_AMT         (0,+1,{K})
E.DEDUCT_AMT_OVRD        (0,+1,{L})
E.RETRODED_DED_AMT       (0,+1,{M})
E.OK_TO_PROCESS          (0,+1,{N})

FROM  PS_RETRODED_RQST D,
      PS_RETRODED_DEDS E
WHERE D.RETRODED_SEQ_NO=E.RETRODED_SEQ_NO
AND  D.RETRODED_PRCS_FLAG  = 'C'
AND  D.RETRODED_RQST_TYPE LIKE $Retroded_Rqst_Type
ORDER BY  D.RETRODED_RQST_TYPE,
  D.EMPLID,
  D.EMPL_RCD,
  E.BENEFIT_PROGRAM,
  E.PLAN_TYPE,
  E.BENEFIT_PLAN,
  E.DEDCD,
  E.PAY_END_DT

end-SELECT

end-procedure

!********************************************************************

#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'reset.sqc'     !Reset Printer

#Include 'getftdts.sqc'  !Get-From-Thru-Dates procedure
#Include 'rdedrctl.sqc'  !Get-Run-Control procedure

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

!************************ End Of Report *****************************
