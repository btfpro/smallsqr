!***********************************************************************
!  TRN009:  Create Profiles                                            *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:41:28                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!                                                                      *
! This SQR allow to create several Profiles in the same process.       *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-Heading 7

do Get_Field_Information ('TRN009',     'REPORT_TITLE',       $REPORTTITLE,     #DW)
  #Include 'stdhdgtr.sqc'

end-Heading


begin-procedure Init-Report
  move 'TRN009' to $ReportID
  move $BaseCurr to $ReportCurr
  move $BaseRtType to $ReportRtType
  move 'W' to $ReportMsgType  !Warning
  move 'Y' to $ReadyForPlan

  let #HeaderType = 1

! Process Scheduler setup
  do Stdapi-Init
  if $prcs_process_instance = ''
    !No Prompt
  else
     do Select-Parameters
  end-if

  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')

end-procedure


begin-procedure Get-Values
  let $language_cd = $prcs_language_cd
  do Get-As-Of-Date
  do Get-TRN009-Param
end-procedure


begin-procedure Process-Main

begin-SELECT
OPRID
RUN_CNTL_ID
BUSINESS_UNIT
TRN_PROFILE_ID
PROFILE_CLAUSE
  do Create-Profile
FROM PS_TRN_BATCH_PROF
WHERE OPRID = $OprId
AND RUN_CNTL_ID = $RunCntlId
end-SELECT

end-procedure


!***********************************************************************
! Create Profile                                                       *
!***********************************************************************

begin-procedure Create-Profile

find 'WHERE' in &PROFILE_CLAUSE 0 #loc
if #loc = -1
show 'It exists no WHERE clause for the profile : ' &TRN_PROFILE_ID '.'
else
let #loc = #loc + 5
let $WhereClause = {ps-substr}(&PROFILE_CLAUSE, #loc + 1, length(&PROFILE_CLAUSE) - #loc + 1)
let $FromClause = {ps-substr}(&PROFILE_CLAUSE, 5, #loc - 10)
begin-sql on-error=sql-error

DELETE FROM PS_TRN_PROF_DEPT_S
WHERE TRN_PROFILE_ID = &TRN_PROFILE_ID AND BUSINESS_UNIT = &BUSINESS_UNIT;

DELETE FROM PS_TRN_PROF_JOB_S
WHERE TRN_PROFILE_ID = &TRN_PROFILE_ID AND BUSINESS_UNIT = &BUSINESS_UNIT;

INSERT INTO PS_TRN_PROF_DEPT_S
(BUSINESS_UNIT, TRN_PROFILE_ID, DEPTID, UPDATE_DEPTID_SW, DEPT_DEMAND)
SELECT
'NEW',
'NEW',
A.DEPTID,
'N',
COUNT(DISTINCT A.EMPLID)
FROM [$FromClause]
WHERE [$WhereClause]
GROUP BY A.DEPTID;

UPDATE PS_TRN_PROF_DEPT_S
SET TRN_PROFILE_ID = &TRN_PROFILE_ID, BUSINESS_UNIT = &BUSINESS_UNIT
WHERE TRN_PROFILE_ID = 'NEW' AND BUSINESS_UNIT = 'NEW';

INSERT INTO PS_TRN_PROF_JOB_S
(BUSINESS_UNIT, TRN_PROFILE_ID, JOBCODE, NUMBER_OF_EMPL)
SELECT
'NEW',
'NEW',
A.JOBCODE,
COUNT(DISTINCT A.EMPLID)
FROM [$FromClause]
WHERE [$WhereClause]
GROUP BY A.JOBCODE;

UPDATE PS_TRN_PROF_JOB_S
SET TRN_PROFILE_ID = &TRN_PROFILE_ID, BUSINESS_UNIT = &BUSINESS_UNIT
WHERE TRN_PROFILE_ID = 'NEW' AND BUSINESS_UNIT = 'NEW';

end-SQL
end-if

end-procedure


#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines

#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'

