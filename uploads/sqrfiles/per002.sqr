!*******************************************
!  PER002:  Employee Birthdays Globalized  *
!*******************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/08/06:00:28:20                                 
!       $Release:  HR9                                                 
!    $Resolution:  689848                                              
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptset02.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Term
    Move 1 to $Year4
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-heading 6
do Get_Field_Information ('PER002',     'REPORT_TITLE', $REPORTTITLE,   #DW)
  #Include 'stdhdgtr.sqc'
do Get_Field_Information ('HR',         'JOBTITLE',     $JOBTITLE,      #DW)
do Get_Field_Information ('HR',         'EMPL_NAME',    $NAME,          #DW)
do Get_Field_Information ('HR',         'MONTHCD',      $MONTH,         #DW)
do Get_Field_Information ('HR',         'BIRTHDATE',    $BIRTH,         #DW)
do Get_Field_Information ('HR',         'SEX',          $SEX,           #DW)
do Get_Field_Information ('HR',         'DEPARTMENT',   $DEPTID,        #DW)

PRINT $MONTH             (+2,1,10)
PRINT $NAME              (0,12,44)
PRINT $BIRTH             (0,57,10)
PRINT $SEX               (0,68,7)
PRINT $DEPTID            (0,76,31)                                         !HP99999
PRINT $JOBTITLE          (0,108)                                        !HP99999
end-heading

begin-procedure Init-Report

  Let $_TableAlias = 'EMP'
  move 'PER002' to $ReportID
  move   'JANUARY  FEBRUARY MARCH    APRIL    MAY      JUNE     ' to $Months
  concat 'JULY     AUGUST   SEPTEMBEROCTOBER  NOVEMBER DECEMBER ' with $Months
  do Delete-Worktable

  do Stdapi-Init
  do Security-Param

  if $prcs_process_instance = ''
        !No Prompt
  else
    do Select-Parameters
  end-if
 do Init_Printer
 do Init_Report_Translation ($ReportID, $Language_cd)
 do Append_Report_Translation ('HR')
 do Init-Array

  if $language_cd = 'JPN'
          let $qualifier = 'NAME_AC'
   else
          let $qualifier = 'NAME'
   end-if

end-procedure

begin-procedure Get-Values
let $language_cd = $PRCS_LANGUAGE_CD
end-procedure

begin-procedure Init-Array
do Get_Field_Information ('HR',         'MONTH1',       $MON1,          #DW)
do Get_Field_Information ('HR',         'MONTH2',       $MON2,          #DW)
do Get_Field_Information ('HR',         'MONTH3',       $MON3,          #DW)
do Get_Field_Information ('HR',         'MONTH4',       $MON4,          #DW)
do Get_Field_Information ('HR',         'MONTH5',       $MON5,          #DW)
do Get_Field_Information ('HR',         'MONTH6',       $MON6,          #DW)
do Get_Field_Information ('HR',         'MONTH7',       $MON7,          #DW)
do Get_Field_Information ('HR',         'MONTH8',       $MON8,          #DW)
do Get_Field_Information ('HR',         'MONTH9',       $MON9,          #DW)
do Get_Field_Information ('HR',         'MONTH10',      $MON10,         #DW)
do Get_Field_Information ('HR',         'MONTH11',      $MON11,         #DW)
do Get_Field_Information ('HR',         'MONTH12',      $MON12,         #DW)

create-array name=MONTHS size = 13 field=MONTH:char
PUT $MON1               INTO    MONTHS(1)
PUT $MON2               INTO    MONTHS(2)
PUT $MON3               INTO    MONTHS(3)
PUT $MON4               INTO    MONTHS(4)
PUT $MON5               INTO    MONTHS(5)
PUT $MON6               INTO    MONTHS(6)
PUT $MON7               INTO    MONTHS(7)
PUT $MON8               INTO    MONTHS(8)
PUT $MON9               INTO    MONTHS(9)
PUT $MON10              INTO    MONTHS(10)
PUT $MON11              INTO    MONTHS(11)
PUT $MON12              INTO    MONTHS(12)
END-PROCEDURE

begin-procedure Process-Main

  move -1 to #priorStartPosn

  do Data-Selection
  do Create-Report
  do Delete-Worktable

end-procedure


begin-procedure Data-Selection
begin-SELECT  DISTINCT
EMP.BIRTHDATE  &Birthdate
  move '1' to $Year4
  do Format-DateTime(&Birthdate, $BirthYMD, {DEFYMD}, '', '')
  let $month = {ps-substr}($BirthYMD,6,2)
  let $days  = {ps-substr}($BirthYMD,9,2)
  let #bdays = to_number($days)
EMP.NAME
EMP.NAME_AC
EMP.SEX
EMP.DEPTNAME
EMP.JOBTITLE
  do Insert-Worktable

FROM  PS_EMPLOYEES EMP
WHERE EMP.BIRTHDATE IS not NULL  

[$SecurityClauseWithoutERN]
end-SELECT
end-procedure

begin-procedure Insert-Worktable
let $sql-statement = 'PER002.SQR,Insert-Worktable,Insert,PS_R_PER002'
begin-SQL On-Error=SQL-Error
INSERT INTO PS_R_PER002 (MONTHCD,DAY_OF_MONTH,NAME,NAME_AC,SEX,DEPTNAME,JOBTITLE)
       VALUES ($month,#bdays,&EMP.Name,&EMP.NAME_AC,&EMP.Sex,&EMP.DeptName,&EMP.JobTitle)
end-SQL
end-procedure

begin-procedure Delete-Worktable
let $sql-statement = 'PER002.SQR,Delete-Worktable,Delete,PS_R_PER002'
begin-SQL On-Error=SQL-Error
DELETE FROM PS_R_PER002;
end-SQL
end-procedure

begin-procedure Create-Report
begin-SELECT
MONTHCD
  let #month = to_number(&MonthCd)
DAY_OF_MONTH
  let #days  = &Day_Of_Month
  let #StartPosn = ((#month)-1)*9
  if #StartPosn <> #priorStartPosn
  get $BirthMonth from MONTHS(#month)
 !   EXTRACT $BirthMonth from $Months #StartPosn 9
    if #priorStartPosn <> -1  !if not the first record
      POSITION (+2)
      print $BirthMonth (+1,1,10)
    else
      print $BirthMonth (+1,1,10)
   end-if

     move #StartPosn to #priorStartPosn
    POSITION (-1)  !print month's first employee on the "month" line
  end-if
NAME         &A.Name         (+1,12,44)
  print #days  (0,57,10) edit 99
SEX          &A.Sex          (0,68,7)
DEPTNAME     &A.DeptName     (0,76,31)                                     !HP99999
JOBTITLE     &A.JobTitle     (0,108)                                    !HP99999
NAME_AC      &A.NAME_AC
FROM  PS_R_PER002 A
ORDER BY MONTHCD,DAY_OF_MONTH,[$qualifier]
end-SELECT
end-procedure

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'stdapi.sqc'    !Routines to update run status

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
#include 'hrsecty.sqc'   !Get SQR Security parameters
