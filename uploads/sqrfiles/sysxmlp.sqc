! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 

!                                                                    !
!***********************************************************************
! SYSXMLP: BI Publisher Definition Criteria Edits report              *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! $Header:: /peopletools/SQR/sysxmlp.sqc                               *
!                                                                      *
!***********************************************************************


!----------------------------------------------------------------------!
! Procedure: SYSXMLP-Main                                              !
!----------------------------------------------------------------------!

begin-procedure SYSXMLP-Main
    let $ErrorFound = 'N'
    let $AuditTitle = 'BI Publisher Audit'
    do SysXmlp-01
    do SysXmlp-02
    do SysXmlp-03
    do SysXmlp-04
    do SysXmlp-05
    do SysXmlp-06
    do SysXmlp-07
    do SysXmlp-08
    do SysXmlp-09
    do SysXmlp-10
    do SysXmlp-11
    do SysXmlp-12

    if $ErrorFound = 'N'
        do PrintSummaryRecord
    end-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SysXmlp-01                                                !
! Descr:     System table audit against PSXPDATASRC table:             !
!            BIP-01: Verify query used by data source                 !
!----------------------------------------------------------------------!
begin-procedure SysXmlp-01

   let $AuditDescr = '(BIP-01) Query Data Source does not exist in '
      || 'Query Definition table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   move '0' to $Missing
   move '1' to $Selcount
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 12
   let #Start3          = 45
   let #numofhdr        =  3

   put 'DS Type'             #Start1 9  into printarray(0)
   put 'DS ID'               #Start2 31 into printarray(1)
   put 'Opr ID'              #Start3 31 into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.DS_TYPE          &Xmlp01_DSType
A.DS_ID            &Xmlp01_DSId
A.OPRID            &Xmlp01_OprId


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Xmlp01_DSType        (+1, #Start1)     on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Xmlp01_DSId          ( 0, #Start2)
   print &Xmlp01_OprId         ( 0, #Start3)

FROM PSXPDATASRC A 
WHERE A.DS_TYPE = 'QRY' 
AND NOT EXISTS (SELECT 'X' FROM PSQRYDEFN Q 
    WHERE A.DS_ID = Q.QRYNAME 
    AND A.OPRID = Q.OPRID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysXmlp-02                                                !
! Descr:     System table audit against PSXPRPTDEFN table:             !
!            BIP-02: Verify data source definition used by report defn!
!----------------------------------------------------------------------!
begin-procedure SysXmlp-02

   let $AuditDescr = '(BIP-02) Data Source Definition used by a Report'
      || ' Definition but does not exist in Data Source Definition'
      || ' table:'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   move '0' to $Missing
   move '1' to $Selcount
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 16
   let #Start3          = 27
   let #Start4          = 60
   let #numofhdr        =  4

   put 'Rpt Defn ID'         #Start1 13 into printarray(0)
   put 'DS Type'             #Start2 9  into printarray(1)
   put 'DS ID'               #Start3 31 into printarray(2)
   put 'Opr ID'              #Start4 31 into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.REPORT_DEFN_ID   &Xmlp02_RptDefnID
A.DS_TYPE          &Xmlp02_DSType
A.DS_ID            &Xmlp02_DSId
A.OPRID            &Xmlp02_OprId


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Xmlp02_RptDefnId     (+1, #Start1)    on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Xmlp02_DSType        ( 0, #Start2)
   print &Xmlp02_DSId          ( 0, #Start3)
   print &Xmlp02_OprId         ( 0, #Start4)

FROM PSXPRPTDEFN A 
WHERE NOT EXISTS (SELECT 'X' FROM PSXPDATASRC B 
    WHERE A.DS_TYPE = B.DS_TYPE 
    AND A.DS_ID = B.DS_ID 
    AND A.OPRID = B.OPRID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysXmlp-03                                                !
! Descr:     System table audit against PSXPRPTTMPL table:             !
!            BIP-03: Verify template definition used by report defn   !
!----------------------------------------------------------------------!
begin-procedure SysXmlp-03

   let $AuditDescr = '(BIP-03) Template Definition used by a Report '
       || 'Definition but does not exist in Template Definition table: '


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   move '0' to $Missing
   move '1' to $Selcount
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 16
   let #numofhdr        =  2

   put 'Rpt Defn ID'         #Start1 13 into printarray(0)
   put 'Template ID'         #Start2 31 into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
A.REPORT_DEFN_ID   &Xmlp03_RptDefnID
A.TMPLDEFN_ID      &Xmlp03_TmplDefnID


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Xmlp03_RptDefnId     (+1, #Start1)     on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Xmlp03_TmplDefnId    ( 0, #Start2)

FROM PSXPRPTTMPL A 
WHERE NOT EXISTS (SELECT 'X' FROM PSXPTMPLDEFN B 
    WHERE A.TMPLDEFN_ID = B.TMPLDEFN_ID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysXmlp-04                                                !
! Descr:     System table audit against PSXPTMPLDEFN table:            !
!            BIP-04: Find orphaned template definition                !
!----------------------------------------------------------------------!
begin-procedure SysXmlp-04

   let $AuditDescr = '(BIP-04) Template Definition not associated with '
       || 'any Report Definition: '


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   move '0' to $Missing
   move '1' to $Selcount
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #numofhdr        =  1

   put 'Template ID'         #Start1 31 into printarray(0)

begin-SELECT on-Error=Rpt-SQL-Error
A.TMPLDEFN_ID      &Xmlp04_TmplDefnID


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Xmlp04_TmplDefnId     (+1, #Start1)   on-break PRINT=CHANGE/TOP-PAGE LEVEL=1

FROM PSXPTMPLDEFN A 
WHERE A.IS_SUBTEMPLATE = 'N' 
AND NOT EXISTS (SELECT 'X' FROM PSXPRPTTMPL B 
    WHERE A.TMPLDEFN_ID = B.TMPLDEFN_ID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysXmlp-05                                                !
! Descr:     System table audit against PSXPTMPLDEFN table:            !
!            BIP-05: Find corrupted associations btwn report/template !
!----------------------------------------------------------------------!
begin-procedure SysXmlp-05

   let $AuditDescr = '(BIP-05) Template Definition associated with '
       || 'more than one Report Definition: '


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   move '0' to $Missing
   move '1' to $Selcount
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #numofhdr        =  1

   put 'Template ID'         #Start1 31 into printarray(0)

begin-SELECT on-Error=Rpt-SQL-Error
A.TMPLDEFN_ID      &Xmlp05_TmplDefnID

    do SysXmlp-CntTemplate(&Xmlp05_TmplDefnID, #CntTmpl)

    if #CntTmpl > 1
        if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
            move 'Y' to $DetailErrFound
            do PrintSectionHeadings
        end-if
        let #rows = #rows +1
        print &Xmlp05_TmplDefnId     (+1, #Start1)   on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
    end-if

FROM PSXPTMPLDEFN A 
WHERE A.IS_SUBTEMPLATE = 'N'
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysXmlp-06                                                !
! Descr:     System table audit against PSXPTMPLDEFN table:            !
!            BIP-06: Find corrupted associations btwn rpt/sub-template!
!----------------------------------------------------------------------!
begin-procedure SysXmlp-06

   let $AuditDescr = '(BIP-06) Sub-Template Definition associated '
       || 'with any Report Definition: '


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   move '0' to $Missing
   move '1' to $Selcount
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #numofhdr        =  1

   put 'Sub-Template ID'         #Start1 31 into printarray(0)

begin-SELECT on-Error=Rpt-SQL-Error
A.TMPLDEFN_ID      &Xmlp06_TmplDefnID


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Xmlp06_TmplDefnId     (+1, #Start1)   on-break PRINT=CHANGE/TOP-PAGE LEVEL=1

FROM PSXPTMPLDEFN A 
WHERE A.IS_SUBTEMPLATE = 'Y' 
AND EXISTS (SELECT 'X' FROM PSXPRPTTMPL B 
    WHERE A.TMPLDEFN_ID = B.TMPLDEFN_ID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysXmlp-07                                                !
! Descr:     System table audit against PSXPTMPLFILEDEF table:         !
!            BIP-07: Validate template file                           !
!----------------------------------------------------------------------!
begin-procedure SysXmlp-07

   let $AuditDescr = '(BIP-07) Template File does not exist in file '
       || 'table: '


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   move '0' to $Missing
   move '1' to $Selcount
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          =  34
   let #Start3          =  47
   let #numofhdr        =  3

   put 'Template ID'         #Start1 31 into printarray(0)
   put 'Effdt'               #Start2 11 into printarray(1)
   put 'File ID'             #Start3 61 into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.TMPLDEFN_ID      &Xmlp07_TmplDefnID
A.EFFDT            &Xmlp07_Effdt
A.TEMPLATE_FILEID  &Xmlp07_FileID


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Xmlp07_TmplDefnId     (+1, #Start1)   on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Xmlp07_Effdt          (0,  #Start2) edit {PTRPTDATE}
   print &Xmlp07_FileID         (0,  #Start3)


FROM PSXPTMPLFILEDEF A 
WHERE NOT EXISTS (SELECT 'X' FROM PSFILEDEFN B 
    WHERE A.TEMPLATE_FILEID = B.FILEID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysXmlp-08                                                !
! Descr:     System table audit against PSXPTMPLFILEDEF table:         !
!            BIP-08: Validate PDF map file                            !
!----------------------------------------------------------------------!
begin-procedure SysXmlp-08

   let $AuditDescr = '(BIP-08) PDF Map File does not exist in file '
       || 'table: '


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   move '0' to $Missing
   move '1' to $Selcount
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          =  34
   let #Start3          =  47
   let #numofhdr        =  3

   put 'Template ID'         #Start1 31 into printarray(0)
   put 'Effdt'               #Start2 11 into printarray(1)
   put 'File ID'             #Start3 61 into printarray(2)

begin-SELECT on-Error=Rpt-SQL-Error
A.TMPLDEFN_ID      &Xmlp08_TmplDefnID
A.EFFDT            &Xmlp08_Effdt
A.MAPFILE_FILEID   &Xmlp08_FileID


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Xmlp08_TmplDefnId     (+1, #Start1)   on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Xmlp08_Effdt          (0,  #Start2) edit {PTRPTDATE}
   print &Xmlp08_FileID         (0,  #Start3)


FROM PSXPTMPLFILEDEF A
WHERE MAPFILE_FILEID <> '' 
AND NOT EXISTS (SELECT 'X' FROM PSFILEDEFN B 
    WHERE A.MAPFILE_FILEID = B.FILEID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysXmlp-09                                                !
! Descr:     System table audit against PSXPTMPLTRINFO table:          !
!            BIP-09: Validate XLIFF file                              !
!----------------------------------------------------------------------!
begin-procedure SysXmlp-09

   let $AuditDescr = '(BIP-09) XLIFF File does not exist in file '
       || 'table: '


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   move '0' to $Missing
   move '1' to $Selcount
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          =  34
   let #Start3          =  47
   let #Start4          =  60
   let #numofhdr        =  4

   put 'Template ID'         #Start1 31 into printarray(0)
   put 'Effdt'               #Start2 11 into printarray(1)
   put 'Lang CD'             #Start3 11 into printarray(2)
   put 'File ID'             #Start4 61 into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.TMPLDEFN_ID      &Xmlp09_TmplDefnID
A.EFFDT            &Xmlp09_Effdt
A.TMPLLANGCD       &Xmlp09_LangCD
A.XLIFF_FILEID     &Xmlp09_FileID


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Xmlp09_TmplDefnId     (+1, #Start1)   on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Xmlp09_Effdt          (0,  #Start2) edit {PTRPTDATE}
   print &Xmlp09_LangCD         (0,  #Start3)
   print &Xmlp09_FileID         (0,  #Start4)


FROM PSXPTMPLTRINFO A 
WHERE NOT EXISTS (SELECT 'X' FROM PSFILEDEFN B 
    WHERE A.XLIFF_FILEID = B.FILEID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysXmlp-10                                                !
! Descr:     System table audit against PSFILEDEFN table:              !
!            BIP-10: Find orphaned file definition                    !
!----------------------------------------------------------------------!
begin-procedure SysXmlp-10

   let $AuditDescr = '(BIP-10) File definition not referenced by any '
       || 'definition: '


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   move '0' to $Missing
   move '1' to $Selcount
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          =  64
   let #numofhdr        =  2

   put 'File ID'             #Start1 61 into printarray(0)
   put 'File Name'           #Start2 65 into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
A.FILEID          &Xmlp10_FileID
A.USERFILENAME    &Xmlp10_FileName

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Xmlp10_FileID   (+1, #Start1)   on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Xmlp10_FileName (0,  #Start2)


FROM PSFILEDEFN A 
WHERE NOT EXISTS (SELECT 'X' FROM PSXPTMPLFILEDEF B 
    WHERE A.FILEID = B.TEMPLATE_FILEID) 
AND NOT EXISTS (SELECT 'X' FROM PSXPTMPLFILEDEF C 
    WHERE A.FILEID = C.MAPFILE_FILEID) 
AND NOT EXISTS (SELECT 'X' FROM PSXPTMPLTRINFO D 
    WHERE A.FILEID = D.XLIFF_FILEID)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure

!----------------------------------------------------------------------!
! Procedure: SysXmlp-11                                                !
! Descr:  System table audit against PSFILEDEFN and PSFILEDATA tables: !
!            BIP-11: Find orphaned file definition                    !
!----------------------------------------------------------------------!
begin-procedure SysXmlp-11

   let $AuditDescr = '(BIP-11) File Id(s) that exist in PSFILEDATA table but '
       || 'missing in PSFILEDEFN table'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   move '0' to $Missing
   move '1' to $Selcount
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          =  64
   let #numofhdr        =  2

   put 'File ID'             #Start1 61 into printarray(0)
   put 'Chunk Sequence'      #Start2 80 into printarray(1)
  

begin-SELECT on-Error=Rpt-SQL-Error
A.FILEID          &Xmlp11_FileID
A.CHUNKSEQUENCE   &Xmlp11_ChunkSeq

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Xmlp11_FileID   (+1, #Start1)   
   print &Xmlp11_ChunkSeq (0,  #Start2)
   

FROM PSFILEDATA A
WHERE A.FILEID NOT IN ( 
SELECT FILEID 
FROM PSFILEDEFN)
end-SELECT

do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SysXmlp-12                                                !
! Descr:     System table audit against PSFILEDEFN table:              !
!            BIP-12: Find orphaned file definition                    !
!----------------------------------------------------------------------!
begin-procedure SysXmlp-12

   let $AuditDescr = '(BIP-12) File Id(s) that exist in PSFILEDEFN table but '
         || 'missing in PSFILEDATA table'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   move '0' to $Missing
   move '1' to $Selcount
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          =  64
   let #numofhdr        =  2

   put 'File ID'             #Start1 61 into printarray(0)
   put 'File Name'           #Start2 65 into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
A.FILEID          &Xmlp12_FileID
A.USERFILENAME    &Xmlp12_FileName

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Xmlp12_FileID   (+1, #Start1)   on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Xmlp12_FileName (0,  #Start2)


 FROM PSFILEDEFN A
WHERE FILEID NOT IN ( 
 SELECT DISTINCT FILEID 
  FROM PSFILEDATA )

end-SELECT

  do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure

!----------------------------------------------------------------------!
! Procedure: SysXmlp-CntTemplate                                       !
! Descr:     Returns number of templates with specified name           !
!----------------------------------------------------------------------!
begin-procedure SysXmlp-CntTemplate($TmplName, :#Count)

begin-select
COUNT(*) &Count

    move &Count to #Count

FROM PSXPRPTTMPL
WHERE TMPLDEFN_ID = $TmpLName
end-select

end-procedure
