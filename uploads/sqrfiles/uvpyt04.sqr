!***********************************************************************
!  UVPUT04:  Rel 9 Upgrade - EE Garn Rule Data                         *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      !
!                $Date:  2006/05/16:15:17:03                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      !
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#include 'setup32.sqc'  !printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-procedure Init-Report
  move 'UVPYT04' to $ReportID

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  do Get-Report-Language
  move $UVPYT04_ReportTitle to $ReportTitle
  display ' '
  display $ReportTitle
  display ' '

end-procedure


! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from UVPYT04 program ids
  do Init_Report_Translation($ReportID,$language_cd)

  do Get_Field_Information ('UVPYT04', 'REPORT_TITLE',  $Uvpyt04_ReportTitle, #dummy_width)
  do Get_Field_Information ('UVPYT04', 'SECTION_A1',    $Uvpyt04_SectionA1,   #dummy_width)
  do Get_Field_Information ('UVPYT04', 'SECTION_A2',    $Uvpyt04_SectionA2,   #dummy_width)
  do Get_Field_Information ('UVPYT04', 'NOTE_FIX',      $Uvpyt04_NoteFix,     #dummy_width)
  do Get_Field_Information ('UVPYT04', 'NOTE_FIX_A',    $Uvpyt04_NoteFixA,    #dummy_width)
  do Get_Field_Information ('UVPYT04', 'NOTE_FIX_B',    $Uvpyt04_NoteFixB,    #dummy_width)
  do Get_Field_Information ('UVPYT04', 'NOTE_FIX_C',    $Uvpyt04_NoteFixC,    #dummy_width)
  do Get_Field_Information ('UVPYT04', 'NOTE_HIST',     $Uvpyt04_NoteHist,    #dummy_width)
  do Get_Field_Information ('UVPYT04', 'NOTE_HIST_A',   $Uvpyt04_NoteHistA,   #dummy_width)
  do Get_Field_Information ('UVPYT04', 'NOTE',          $Uvpyt04_Note,        #dummy_width)
  do Get_Field_Information ('UVPYT04', 'EMPLID',        $Uvpyt04_Emplid,      #dummy_width)
  do Get_Field_Information ('UVPYT04', 'COMPANY',       $Uvpyt04_Company,     #dummy_width)
  do Get_Field_Information ('UVPYT04', 'GARNID',        $Uvpyt04_GarnID,      #dummy_width)
  do Get_Field_Information ('UVPYT04', 'STATUS',        $Uvpyt04_Status,      #dummy_width)
  do Get_Field_Information ('UVPYT04', 'STATE_LAW',     $Uvpyt04_StateLaw,    #dummy_width)
  do Get_Field_Information ('UVPYT04', 'RULE_ID',       $Uvpyt04_RuleID,      #dummy_width)
  do Get_Field_Information ('UVPYT04', 'TOTAL_A1',      $Uvpyt04_TotalA1,     #dummy_width)
  do Get_Field_Information ('UVPYT04', 'TOTAL_A2',      $Uvpyt04_TotalA2,     #dummy_width)

end-procedure


begin-HEADING 12

  #Include 'stdhdgtr.sqc'

  If #Section = 1
     do SectionA1-Heading
  end-if

    If #Section = 2
     do SectionA2-Heading
  end-if

  do Columns-Heading

end-HEADING

begin-procedure SectionA1-Heading

  print $Uvpyt04_SectionA1      (+2,10)
  print $Uvpyt04_NoteFix        (+2,15)
  print $Uvpyt04_NoteFixA       (+1,15)
  print $Uvpyt04_NoteFixB       (+1,15)
  print $Uvpyt04_NoteFixC       (+1,15)

end-procedure

begin-procedure SectionA2-Heading

  print $Uvpyt04_SectionA2      (+2,10)
  print $Uvpyt04_NoteHist       (+2,15)
  print $Uvpyt04_NoteHistA      (+1,15)
  print ' '                     (+2,15)

end-procedure

begin-procedure Columns-Heading

  print $Uvpyt04_Emplid         (+2,10)
  print $Uvpyt04_Company        (0,31)
  print $Uvpyt04_GarnID         (0,51)
  print $Uvpyt04_Status         (0,71)
  print $Uvpyt04_StateLaw       (0,91)
  print $Uvpyt04_RuleID         (0,111)

end-procedure


!***********************************************************************
!  PROC REPORT                                                         *
!         Main Procedure                                               *
!***********************************************************************

BEGIN-PROCEDURE Process-Main

  do Find-Missing-Rule
  do List-Missing-Rule
  do List-Missing-Rule-Hist

END-PROCEDURE

!***********************************************************************
!  Find-Missing-Rule                                                   *
!***********************************************************************

BEGIN-PROCEDURE Find-Missing-Rule

   let $Status_Crit = ' AND A.GARN_STATUS IN (''A'', ''R'') '

BEGIN-SELECT
A.EMPLID
A.COMPANY
A.GARNID
A.GARN_STATUS
B.STATE_GARN_LAW
B.GARN_RULE_ID

  move &A.EMPLID          to $Emplid
  move &A.COMPANY         to $Company
  move &A.GARNID          to $GarnID

  move 'GARN_STATUS'      to $FieldName
  move &A.Garn_Status     to $FieldValue
  do Read-Translate-Table
  move $XlatShortName     to $GarnStatus

  move &B.STATE_GARN_LAW  to $GarnLaw
  move &B.GARN_RULE_ID    to $RuleID

  do Insert-Upgrade-Table

FROM PS_GARN_SPEC A, PS_GARN_RULE B
 WHERE A.EMPLID  = B.EMPLID
   AND A.COMPANY = B.COMPANY
   AND A.GARNID  = B.GARNID

#ifdef MVS
  \$Status_Crit\
#else
  [$Status_Crit]
#endif

   AND (NOT EXISTS (SELECT 'X' FROM PS_GARN_RULE_TBL C
                    WHERE C.STATE_GARN_LAW = B.STATE_GARN_LAW
                      AND C.GARN_RULE_ID   = B.GARN_RULE_ID)
    OR EXISTS (SELECT 'X' FROM PS_GARN_RULE_TBL D
                    WHERE D.STATE_GARN_LAW = B.STATE_GARN_LAW
                      AND D.GARN_RULE_ID   = B.GARN_RULE_ID
                      AND D.EFF_STATUS     = 'I'
                      AND D.EFFDT          = (SELECT MAX(EFFDT)
                                              FROM  PS_GARN_RULE_TBL M
                                              WHERE M.STATE_GARN_LAW = B.STATE_GARN_LAW
                                                AND M.GARN_RULE_ID   = B.GARN_RULE_ID
                                                AND M.EFFDT         <= $AsOfToday)))
   AND NOT EXISTS (SELECT 'X' FROM PS_UPG_GARN_RULE U
                    WHERE U.EMPLID         = A.EMPLID
                      AND U.COMPANY        = A.COMPANY
                      AND U.GARNID         = A.GARNID
                      AND U.STATE_GARN_LAW = B.STATE_GARN_LAW
                      AND U.GARN_RULE_ID   = B.GARN_RULE_ID)
 ORDER BY A.EMPLID, A.COMPANY, A.GARNID

END-SELECT

END-PROCEDURE

!***********************************************************************
!  Insert-Upgrade-Table                                                *
!***********************************************************************
BEGIN-PROCEDURE Insert-Upgrade-Table
BEGIN-SQL  on-error=Ignore
  INSERT INTO PS_UPG_GARN_RULE (UPG_GARN,
                              EMPLID,
                              COMPANY,
                              GARNID,
                              STATE_GARN_LAW,
                              GARN_RULE_ID,
                              GARN_STATUS,
                              PY_GARN_LAW_FROM,
                              PY_GARN_RULE_FROM)
                      VALUES ('M',
                              &A.Emplid,
                              &A.Company,
                              &A.Garnid,
                              &B.State_Garn_Law,
                              &B.Garn_Rule_Id,
                              &A.Garn_Status,
                              ' ',
                              ' ')
END-SQL
END-PROCEDURE

BEGIN-PROCEDURE Ignore
  !Dummy procedure to avoid error if zero row selected for processing
END-PROCEDURE

!***********************************************************************
!  List-Missing-Rule                                                   *
!***********************************************************************

BEGIN-PROCEDURE List-Missing-Rule

  move 0 to #Count
  let #Section = 1

BEGIN-SELECT
N.EMPLID
N.COMPANY
N.GARNID
N.STATE_GARN_LAW
N.GARN_RULE_ID
N.GARN_STATUS

  add 1 to #Count

  move &N.EMPLID          to $Emplid
  move &N.COMPANY         to $Company
  move &N.GARNID          to $GarnID

  move 'GARN_STATUS'      to $FieldName
  move &N.Garn_Status     to $FieldValue
  do Read-Translate-Table
  move $XlatShortName     to $GarnStatus

  move &N.STATE_GARN_LAW  to $GarnLaw
  move &N.GARN_RULE_ID    to $RuleID

  do Print-Garn-Spec

FROM PS_UPG_GARN_RULE N
 WHERE N.UPG_GARN = 'M'
 ORDER BY N.EMPLID, N.COMPANY, N.GARNID, N.STATE_GARN_LAW, N.GARN_RULE_ID

END-SELECT

  if #Count = 0
    print $Uvpyt04_Note   (+3,10)
  else
    print $Uvpyt04_TotalA1 (+3,10)
    print #Count           (0,68,9) edit b,bbb,bb9
  end-if

END-PROCEDURE

!***********************************************************************
!  List-Missing-Rule-Hist                                              *
!***********************************************************************

BEGIN-PROCEDURE List-Missing-Rule-Hist

  move 0 to #Count
  let $Status_Crit = ' AND A1.GARN_STATUS NOT IN  (''A'', ''R'') '
  New-Page
  let #Section = 2

BEGIN-SELECT
A1.EMPLID
A1.COMPANY
A1.GARNID
A1.GARN_STATUS
B1.STATE_GARN_LAW
B1.GARN_RULE_ID

  add 1 to #Count

  move &A1.EMPLID          to $Emplid
  move &A1.COMPANY         to $Company
  move &A1.GARNID          to $GarnID

  move 'GARN_STATUS'       to $FieldName
  move &A1.Garn_Status     to $FieldValue
  do Read-Translate-Table
  move $XlatShortName      to $GarnStatus

  move &B1.STATE_GARN_LAW  to $GarnLaw
  move &B1.GARN_RULE_ID    to $RuleID

  do Print-Garn-Spec

FROM PS_GARN_SPEC A1, PS_GARN_RULE B1
 WHERE A1.EMPLID  = B1.EMPLID
   AND A1.COMPANY = B1.COMPANY
   AND A1.GARNID  = B1.GARNID

#ifdef MVS
  \$Status_Crit\
#else
  [$Status_Crit]
#endif

   AND (NOT EXISTS (SELECT 'X' FROM PS_GARN_RULE_TBL C1
                    WHERE C1.STATE_GARN_LAW = B1.STATE_GARN_LAW
                      AND C1.GARN_RULE_ID   = B1.GARN_RULE_ID)
    OR EXISTS (SELECT 'X' FROM PS_GARN_RULE_TBL D1
                    WHERE D1.STATE_GARN_LAW = B1.STATE_GARN_LAW
                      AND D1.GARN_RULE_ID   = B1.GARN_RULE_ID
                      AND D1.EFF_STATUS     = 'I'
                      AND D1.EFFDT          = (SELECT MAX(EFFDT)
                                              FROM  PS_GARN_RULE_TBL M1
                                              WHERE M1.STATE_GARN_LAW = B1.STATE_GARN_LAW
                                                AND M1.GARN_RULE_ID   = B1.GARN_RULE_ID
                                                AND M1.EFFDT         <= $AsOfToday)))
   AND NOT EXISTS (SELECT 'X' FROM PS_UPG_GARN_RULE U1
                    WHERE U1.EMPLID         = A1.EMPLID
                      AND U1.COMPANY        = A1.COMPANY
                      AND U1.GARNID         = A1.GARNID
                      AND U1.STATE_GARN_LAW = B1.STATE_GARN_LAW
                      AND U1.GARN_RULE_ID   = B1.GARN_RULE_ID)
 ORDER BY A1.EMPLID, A1.COMPANY, A1.GARNID

END-SELECT

  if #Count = 0
     print $Uvpyt04_Note   (+3,10)
  else
     print $Uvpyt04_TotalA2 (+3,10)
     print #Count           (0,75,9) edit b,bbb,bb9
  end-if

END-PROCEDURE

!***********************************************************************
!  Print-Garn-Spec                                                     *
!***********************************************************************
BEGIN-PROCEDURE Print-Garn-Spec

  print $EmplID            (+1,10)
  print $Company           (0,31)
  print $GarnID            (0,51)
  print $GarnStatus        (0,71)
  print $GarnLaw           (0,91)
  print $RuleID            (0,111)

END-PROCEDURE

#include 'reset.sqc'     !Reset printer procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'stdapi.sqc'    !Update Process API
#include 'sqrtrans.sqc'  !Translate SQR strings to given language
#include 'getrplng.sqc'  !Get the report language
#include 'readxlat.sqc'  !Read-Translate-Table procedure
