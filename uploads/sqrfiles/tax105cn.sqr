!***********************************************************************
! TAX105CN.SQR: Employer contribution to CNT                           *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2010, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2010/11/02:12:50:44                                 
!       $Release:  HR9                                                 
!    $Resolution:  813289                                              
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-report
  do Init-Report
  do Main-Report
  do Reset
  do StdAPI-Term
end-report


begin-procedure Init-Report
  do StdAPI-Init
  move 'TAX105CN' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $Tax105cn_Title_Empler_contr to $ReportTitle
  display $ReportTitle

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  do Get-Calendar-Year-Id

  move '' to $Company
  move '' to $priorCompany
  move '****' to $Report_Status
  move 0.0008 to #Levy_Rate
  do Get-Current-Tax-Year
  if &TX.Balance_Year = 1998
    move 50000 to #Limit
  else
    do Get-Wage-Limit
  end-if
  do Init-Company          ! Totals for individual companies

end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from TAX105CN  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('TAX105CN', 'TITLE_EMPLER_CONTR' , $Tax105cn_Title_Empler_contr , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'CALC_OF_EMPLER'     , $Tax105cn_Calc_of_empler     , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'CONTR_TO_FIN'       , $Tax105cn_Contr_to_fin       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'COMM_TRAVAIL'       , $Tax105cn_Comm_travail       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'TOTAL_CONTR'        , $Tax105cn_Total_contr        , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE_I'        , $Tax105cn_Form_line_i        , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE1'         , $Tax105cn_Form_line1         , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE2'         , $Tax105cn_Form_line2         , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE3'         , $Tax105cn_Form_line3         , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE4A'        , $Tax105cn_Form_line4a        , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE4B'        , $Tax105cn_Form_line4b        , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE5'         , $Tax105cn_Form_line5         , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE_II'       , $Tax105cn_Form_line_ii       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE10A'       , $Tax105cn_Form_line10a       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE10B'       , $Tax105cn_Form_line10b       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE10C'       , $Tax105cn_Form_line10c       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE11A'       , $Tax105cn_Form_line11a       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE11B'       , $Tax105cn_Form_line11b       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE11C'       , $Tax105cn_Form_line11c       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE11D'       , $Tax105cn_Form_line11d       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE12A'       , $Tax105cn_Form_line12a       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE12B'       , $Tax105cn_Form_line12b       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE13A'       , $Tax105cn_Form_line13a       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE13B'       , $Tax105cn_Form_line13b       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE13C'       , $Tax105cn_Form_line13c       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE13D'       , $Tax105cn_Form_line13d       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE14'        , $Tax105cn_Form_line14        , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE15A'       , $Tax105cn_Form_line15a       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE15B'       , $Tax105cn_Form_line15b       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE15C'       , $Tax105cn_Form_line15c       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE16'        , $Tax105cn_Form_line16        , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE17'        , $Tax105cn_Form_line17        , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE18A'       , $Tax105cn_Form_line18a       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE18B'       , $Tax105cn_Form_line18b       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE18C'       , $Tax105cn_Form_line18c       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE19'        , $Tax105cn_Form_line19        , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE20'        , $Tax105cn_Form_line20        , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE21'        , $Tax105cn_Form_line21        , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE22'        , $Tax105cn_Form_line22        , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE23A'       , $Tax105cn_Form_line23a       , #dummy_width)
   do Get_Field_Information ('TAX105CN', 'FORM_LINE23B'       , $Tax105cn_Form_line23b       , #dummy_width)


end-procedure

begin-procedure Get-Values
  !no prompt
end-procedure


#Include 'setup31.sqc'  !Printer and page-size initialization


begin-heading 7

  #Include 'stdhtr11.sqc'
  print $Tax105cn_Calc_of_empler                (4,49)
  print $Tax105cn_Contr_to_fin                  (5,46)
  print $Tax105cn_Comm_travail                  (6,44)

  if $Report_Status = 'DONE'
     print $Tax105cn_Total_contr   (7,1)
  end-if

end-heading


begin-procedure Get-Current-Tax-Year

begin-SELECT
TX.BALANCE_YEAR

  move &TX.Balance_Year to $CalYear 9999
  let $FromDate = $CalYear || '0101'
  do Format-DateTime($FromDate, $FromDate, {DEFCMP}, '', 'native')
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

FROM PS_CTXPRC_PARAMS TX
end-SELECT

end-procedure


begin-procedure Get-Wage-Limit

begin-SELECT
TXP.WCB_LIMIT
TXP.PROVINCE

  move &TXP.WCB_Limit to #Limit
  display 'Province Code: ' noline
  display &TXP.Province

FROM PS_CAN_TAX_PROV TXP
WHERE TXP.PROVINCE = 'QC'
  AND TXP.EFFDT        =
      (SELECT MAX(EFFDT)
         FROM PS_CAN_TAX_PROV
        WHERE PROVINCE = 'QC'
          AND EFFDT   <= $AsOfDate)
ORDER BY PROVINCE ASC          !use 'QC' if 'PQ' and 'QC' have same TXP.EFFDT
end-SELECT

end-procedure


begin-procedure Init-Company

  move 0 to #True_RV_Txgrs_Ttl
  move 0 to #Total_Emp
  move 0 to #Parity_Ttl
  move 0 to #Parity_Emp
  Let $Construct = 'N'
  move 0 to #Construct_Ttl
  move 0 to #Construct_Emp
  move 0 to #Parity_Construct_Ttl
  move 0 to #Tips_Ttl
  move 0 to #HeavyEq_Ttl
  move 0 to #Deduct_Ttl
  move 0 to #HeavyEq_Use
  move 0 to #Comp_SubTtl
  move 0 to #OverLimit_Ttl
  move 0 to #OverLimit_Emp
  move 0 to #Elig_Wg
  move 0 to #Not_Elig_Wg
  move 0 to #Levy_Wg
  move 0 to #Levy_Pay

end-procedure


begin-procedure Main-Report

begin-SELECT  ! all wages for each employee (line 10)
A.COMPANY  () on-break print=never after=Company-Change save=$Company level=1
A.EMPLID
#ifndef DB2
SUM(A.TXGRS_YTD)                          &True_RV_Txgrs_Sum
#else
DECIMAL(SUM(A.TXGRS_YTD),15,3)            &True_RV_Txgrs_Sum
#endif

  move &True_RV_Txgrs_Sum to #True_RV_Txgrs_Cur
  add #True_RV_Txgrs_Cur  to #True_RV_Txgrs_Ttl   ! Line 10

  if #True_RV_Txgrs_Cur <> 0.000
    add 1 to #Total_Emp                             ! Line  1
  end-if

  do Parity-Committee
  do Construction-Commission
  do Tips
  do Heavy-Equipment

!****************************************************************************
! do (additional calculations which are relevant to your company)           *
!****************************************************************************

  do Cal-Sub-Total-And-Wages-Over-Limit

FROM  PS_CAN_TAX_BALANCE A
WHERE A.BALANCE_ID    = $Calendar_Year_Id
  AND A.BALANCE_YEAR  = &TX.Balance_Year
  AND A.TAX_CLASS_CAN = 'TRV'
  AND A.BALANCE_PERIOD     =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_CAN_TAX_BALANCE
       WHERE  EMPLID         = A.EMPLID
         AND  COMPANY        = A.COMPANY
         AND  BALANCE_ID     = A.BALANCE_ID
         AND  BALANCE_YEAR   = A.BALANCE_YEAR
         AND  PROVINCE       = A.PROVINCE
         AND  WAGE_LOSS_PLAN = A.WAGE_LOSS_PLAN
         AND  TAX_CLASS_CAN  = A.TAX_CLASS_CAN)
GROUP BY A.COMPANY,
         A.EMPLID
ORDER BY A.COMPANY ASC,
         A.EMPLID ASC
end-SELECT

let $Report_Status = 'DONE'
move '' to $Company
do Print-Lines

end-procedure


begin-procedure Company-Change

  let #Parity_Construct_Ttl = #Parity_Ttl + #Construct_Ttl !line 11
  let #HeavyEq_Use = 0.5 * #HeavyEq_Ttl                    !line 14
  let #Comp_SubTtl = #True_Rv_Txgrs_Ttl - #Deduct_Ttl      !line 17
  let #Elig_Wg     = #Limit * #OverLimit_Emp               !line 20
  let #Not_Elig_Wg = #OverLimit_Ttl - #Elig_Wg             !line 21
  let #Levy_Wg     = #Comp_SubTtl - #Not_Elig_Wg           !line 22
  let #Levy_Pay    = #Levy_Rate * #Levy_Wg                 !line 23

  do Report-Summary
  do Print-Lines
  new-page
  do Init-Company

end-procedure


begin-procedure Report-Summary

  add #True_RV_Txgrs_Ttl to #RS_True_RV_Txgrs_Ttl
  add #Total_Emp to #RS_Total_Emp
  add #Parity_Ttl to #RS_Parity_Construct_Ttl
  add #Parity_Emp to #RS_Parity_Emp
  add #Construct_Ttl to #RS_Parity_Construct_Ttl
  add #Construct_Emp to #RS_Construct_Emp

  if #RS_Construct_Emp > 0
     let $RS_Construct = 'Y'
  else
     let $RS_Construct = 'N'
  end-if

  add #Tips_Ttl to #RS_Tips_Ttl
  add #HeavyEq_Ttl to #RS_HeavyEq_Ttl
  add #HeavyEq_Use to #RS_HeavyEq_Use
  add #Deduct_Ttl to #RS_Deduct_Ttl
  add #Comp_SubTtl to #RS_Comp_SubTtl
  add #OverLimit_Ttl to #RS_OverLimit_Ttl
  add #OverLimit_Emp to #RS_OverLimit_Emp
  add #Elig_Wg to #RS_Elig_Wg
  add #Not_Elig_Wg to #RS_Not_Elig_Wg
  add #Levy_Wg to #RS_Levy_Wg
  add #Levy_Pay to #RS_Levy_Pay

end-procedure


begin-procedure Print-Lines

!set up form layout

print $Tax105cn_Form_line_i                            (4,1)
print $Tax105cn_Form_line1                             (+2,1)
print $Tax105cn_Form_line2                             (+1,1)
print $Tax105cn_Form_line3                             (+1,1)
print $Tax105cn_Form_line4a                            (+1,1)
print $Tax105cn_Form_line4b                            (+1,4)
print $Tax105cn_Form_line5                             (0,66)

print $Tax105cn_Form_line_ii                           (+3,1)
print $Tax105cn_Form_line10a                           (+2,1)
print      &TX.Balance_Year  ()
print $Tax105cn_Form_line10b ()
print $Tax105cn_Form_line10c                           (+1,5)
print $Tax105cn_Form_line11a                           (+1,1)
print $Tax105cn_Form_line11b                           (+1,5)
print $Tax105cn_Form_line11c                           (+1,5)
print $Tax105cn_Form_line11d                           (+1,5)
print $Tax105cn_Form_line12a                           (+1,1)
print $Tax105cn_Form_line12b                           (+1,5)
print $Tax105cn_Form_line13a                           (+1,1)
print $Tax105cn_Form_line13b                           (+1,5)
print $Tax105cn_Form_line13c                           (+1,5)
print $Tax105cn_Form_line13d                           (+1,5)
print $Tax105cn_Form_line14                            (+2,1)
print $Tax105cn_Form_line15a                           (+1,1)
print $Tax105cn_Form_line15b                           (+1,5)
print $Tax105cn_Form_line15c                           (+1,5)
print $Tax105cn_Form_line16                            (+2,1)
print $Tax105cn_Form_line17                            (+2,1)
print $Tax105cn_Form_line18a                           (+1,1)

do Format-Number(#Limit, $out, '$99,999')

print      $out  ()
print $Tax105cn_Form_line18b ()
print $Tax105cn_Form_line18c                           (+1,5)
print $Tax105cn_Form_line19                            (+1,1)
print      $out  ()
print     ':'    ()
print $Tax105cn_Form_line20                            (+2,1)
print      $out  ()
print     ':'    ()
print $Tax105cn_Form_line21                            (+2,1)
print $Tax105cn_Form_line22                            (+2,1)
print $Tax105cn_Form_line23a                           (+2,1)
print $Tax105cn_Form_line23b                           (+1,5)

print '-----------------'       (27,66)
print '-----------------'       (32,86)
print '-----------------'       (34,106)
print '-----------------'       (39,66)
print '-----------------'       (41,86)
print '-----------------'       (43,106)
print '-----------------'       (45,106)
print '================='       (48,106)

!****************************************************************************
! If applicable, print out the name of the Parity Committee, ie:            *
!                                                                           *
! print $Parity_Name  (7,69)                                                *
!****************************************************************************

if $Report_Status <> 'DONE'
   do Print-Company-Info
else
   do Print-Report-Summary
end-if

end-procedure


begin-procedure Print-Company-Info

  do Format-Number (#True_RV_Txgrs_Ttl, $out, '$$9,999,999,999.99')
  print $out                      (16,105)           !line 10

  do Format-Number (#Total_Emp, $out, '9,999,999')
  print $out                      (6,94)             !line  1

  do Format-Number (#Parity_Emp, $out, '9,999,999')
  print $out                      (8,94)             !line  3

  print $Construct                (10,56)            !line  4

  do Format-Number (#Construct_Emp, $out, '9,999,999')
  print $out                      (10,114)           !line  5

  do Format-Number (#Parity_Construct_Ttl, $out, '$$9,999,999,999.99')
  print $out                      (20,85)            !line 11

  do Format-Number (#Tips_Ttl, $out, '$$9,999,999,999.99')
  print $out                      (22,85)            !line 12

  do Format-Number (#HeavyEq_Ttl, $out, '$$9,999,999,999.99')
  print $out                      (26,65)            !line 13

  do Format-Number (#HeavyEq_Use, $out, '$$9,999,999,999.99')
  print $out                      (28,85)            !line 14

!****************************************************************************
! Print out any additional amounts relevant to your company's situation, on *
! line 15.  ie:                                                             *
!                                                                           *
! do Format-Number (#Other_Deduction_Ttl, $out, '$$9,999,999,999.99')       *
! print $out                      (31,85)                                   *
!****************************************************************************

  do Format-Number (#Deduct_Ttl, $out, '$$9,999,999,999.99')
  print $out                      (33,105)           !line 16

  do Format-Number (#Comp_SubTtl, $out, '$$9,999,999,999.99')
  print $out                      (35,105)           !line 17

  do Format-Number (#OverLimit_Ttl, $out, '$$9,999,999,999.99')
  print $out                      (37,85)            !line 18

  do Format-Number (#OverLimit_Emp, $out, '9,999,999')
  print $out                      (38,74)            !line 19

  do Format-Number (#Elig_Wg, $out, '$$9,999,999,999.99')
  print $out                      (40,85)            !line 20

  do Format-Number (#Not_Elig_Wg, $out, '$$9,999,999,999.99')
  print $out                      (42,105)           !line 21

  do Format-Number (#Levy_Wg, $out, '$$9,999,999,999.99')
  print $out                      (44,105)           !line 22

  do Format-Number (#Levy_Pay, $out, '$$9,999,999,999.99')
  print $out                      (47,105)           !line 23

end-procedure


begin-procedure Print-Report-Summary

  do Format-Number (#RS_True_RV_Txgrs_Ttl, $out, '$$9,999,999,999.99')
  print $out                      (16,105)           !line 10

  do Format-Number (#RS_Total_Emp, $out, '9,999,999')
  print $out                      (6,94)             !line  1

  do Format-Number (#RS_Parity_Emp, $out, '9,999,999')
  print $out                      (8,94)             !line  3

  print $RS_Construct             (10,56)            !line  4

  do Format-Number (#RS_Construct_Emp, $out, '9,999,999')
  print $out                      (10,114)           !line  5

  do Format-Number (#RS_Parity_Construct_Ttl, $out, '$$9,999,999,999.99')
  print $out                      (20,85)            !line 11

  do Format-Number (#RS_Tips_Ttl, $out, '$$9,999,999,999.99')
  print $out                      (22,85)            !line 12

  do Format-Number (#RS_HeavyEq_Ttl, $out, '$$9,999,999,999.99')
  print $out                      (26,65)            !line 13

  do Format-Number (#RS_HeavyEq_Use, $out, '$$9,999,999,999.99')
  print $out                      (28,85)            !line 14

!****************************************************************************
! Print out any additional amounts relevant to your company's situation, on *
! line 15.  ie:                                                             *
!                                                                           *
! do Format-Number (#RS_Other_Deduction_Ttl, $out, '$$9,999,999,999.99')    *
! print $out                      (31,85)                                   *
!****************************************************************************

  do Format-Number (#RS_Deduct_Ttl, $out, '$$9,999,999,999.99')
  print $out                      (33,105)           !line 16

  do Format-Number (#RS_Comp_SubTtl, $out, '$$9,999,999,999.99')
  print $out                      (35,105)           !line 17

  do Format-Number (#RS_OverLimit_Ttl, $out, '$$9,999,999,999.99')
  print $out                      (37,85)            !line 18

  do Format-Number (#RS_OverLimit_Emp, $out, '9,999,999')
  print $out                      (38,74)            !line 19

  do Format-Number (#RS_Elig_Wg, $out, '$$9,999,999,999.99')
  print $out                      (40,85)            !line 20

  do Format-Number (#RS_Not_Elig_Wg, $out, '$$9,999,999,999.99')
  print $out                      (42,105)           !line 21

  do Format-Number (#RS_Levy_Wg, $out, '$$9,999,999,999.99')
  print $out                      (44,105)           !line 22

  do Format-Number (#RS_Levy_Pay, $out, '$$9,999,999,999.99')
  print $out                      (47,105)           !line 23

end-procedure


begin-procedure Parity-Committee

move 0 to #Parity_Cur

!****************************************************************************
! The following SELECT statement is only a shell which you may modify to    *
! meet your company's specific needs.  Insert the relevant ErnCd(s) in the  *
! WHERE clause, and add extra code as required by your unique situation.    *
!****************************************************************************
!begin-SELECT
!#ifndef DB2
!SUM(B.GRS_YTD)                       &Parity_Sum
!#else
!DECIMAL(SUM(B.GRS_YTD),15,3)         &Parity_Sum
!#endif
!
!****************************************************************************
! (need to select the Parity Committee Name)                                *
!****************************************************************************
!
!  if &Parity_Sum <> 0
!     move &Parity_Sum to #Parity_Cur
!     add #Parity_Cur to #Parity_Ttl
!     add 1 to #Parity_Emp
!  end-if
!
!FROM PS_CAN_ERN_BALANCE B
!WHERE B.COMPANY       = &A.Company
!  AND B.EMPLID        = &A.EmplID
!  AND B.BALANCE_ID    = $Calendar_Year_Id
!  AND B.BALANCE_YEAR  = &TX.Balance_Year
!  AND B.ERNCD IN ('XXX')
!  AND B.GRS_YTD      <> 0
!  AND B.BALANCE_PERIOD   =
!      (SELECT MAX(BALANCE_PERIOD)
!       FROM   PS_CAN_ERN_BALANCE
!       WHERE  EMPLID         = B.EMPLID
!         AND  COMPANY        = B.COMPANY
!         AND  BALANCE_ID     = B.BALANCE_ID
!         AND  BALANCE_YEAR   = B.BALANCE_YEAR
!         AND  PROVINCE       = B.PROVINCE
!         AND  WAGE_LOSS_PLAN = B.WAGE_LOSS_PLAN
!         AND  ERNCD          = B.ERNCD
!         AND  GRS_YTD       <> 0)
!end-SELECT

end-procedure


begin-procedure Construction-Commission

move 0 to #Construct_Cur

!****************************************************************************
! The following SELECT statement is only a shell which you may modify to    *
! meet your company's specific needs.  Insert the relevant ErnCd(s) in the  *
! WHERE clause, and add extra code as required by your unique situation.    *
!****************************************************************************
!begin-SELECT
!#ifndef DB2
!SUM(C.GRS_YTD)                       &Construct_Sum
!#else
!DECIMAL(SUM(C.GRS_YTD),15,3)         &Construct_Sum
!#endif
!
!  if &Construct_Sum <> 0
!     let $Construct = 'Y'
!     move &Construct_Sum to #Construct_Cur
!     add #Construct_Cur to #Construct_Ttl
!     add 1 to #Construct_Emp
!  end-if
!
!FROM PS_CAN_ERN_BALANCE C
!WHERE C.COMPANY       = &A.Company
!  AND C.EMPLID        = &A.EmplID
!  AND C.BALANCE_ID    = $Calendar_Year_Id
!  AND C.BALANCE_YEAR  = &TX.Balance_Year
!  AND C.ERNCD IN ('YYY')
!  AND C.GRS_YTD      <> 0
!  AND C.BALANCE_PERIOD =
!      (SELECT MAX(BALANCE_PERIOD)
!       FROM   PS_CAN_ERN_BALANCE
!       WHERE  EMPLID         = C.EMPLID
!         AND  COMPANY        = C.COMPANY
!         AND  BALANCE_ID     = C.BALANCE_ID
!         AND  BALANCE_YEAR   = C.BALANCE_YEAR
!         AND  PROVINCE       = C.PROVINCE
!         AND  WAGE_LOSS_PLAN = C.WAGE_LOSS_PLAN
!         AND  ERNCD          = C.ERNCD
!         AND  GRS_YTD       <> 0)
!end-SELECT

end-procedure


begin-procedure Tips

move 0 to #Tips_Cur

!****************************************************************************
! The following SELECT statement is only a shell which you may modify to    *
! meet your company's specific needs.  Insert the relevant ErnCd(s) in the  *
! WHERE clause, and add extra code as required by your unique situation.    *
!****************************************************************************
!begin-SELECT
!#ifndef DB2
!SUM(D.GRS_YTD)                       &Tips_Sum
!#else
!DECIMAL(SUM(D.GRS_YTD),15,3)         &Tips_Sum
!#endif
!
!  if &Tips_Sum <> 0
!     move &Tips_Sum to #Tips_Cur
!     add #Tips_Cur to #Tips_Ttl
!  end-if
!
!FROM PS_CAN_ERN_BALANCE D
!WHERE D.COMPANY       = &A.Company
!  AND D.EMPLID        = &A.EmplID
!  AND D.BALANCE_ID    = $Calendar_Year_Id
!  AND D.BALANCE_YEAR  = &TX.Balance_Year
!  AND D.ERNCD IN ('ZZZ')
!  AND D.GRS_YTD      <> 0
!  AND D.BALANCE_PERIOD =
!      (SELECT MAX(BALANCE_PERIOD)
!       FROM   PS_CAN_ERN_BALANCE
!       WHERE  EMPLID         = D.EMPLID
!         AND  COMPANY        = D.COMPANY
!         AND  BALANCE_ID     = D.BALANCE_ID
!         AND  BALANCE_YEAR   = D.BALANCE_YEAR
!         AND  PROVINCE       = D.PROVINCE
!         AND  WAGE_LOSS_PLAN = D.WAGE_LOSS_PLAN
!         AND  ERNCD          = D.ERNCD
!         AND  GRS_YTD       <> 0)
!end-SELECT

end-procedure


begin-procedure Heavy-Equipment

move 0 to #HeavyEq_Cur

!****************************************************************************
! The following SELECT statement is only a shell which you may modify to    *
! meet your company's specific needs.  Insert the relevant ErnCd(s) in the  *
! WHERE clause, and add extra code as required by your unique situation.    *
!****************************************************************************
!begin-SELECT
!#ifndef DB2
!SUM(E.GRS_YTD)                       &HeavyEq_Sum
!#else
!DECIMAL(SUM(E.GRS_YTD),15,3)         &HeavyEq_Sum
!#endif
!
!  if &HeavyEq_Sum <> 0
!     move &HeavyEq_Sum to #HeavyEq_Cur
!     add #HeavyEq_Cur to #HeavyEq_Ttl
!  end-if
!
!FROM PS_CAN_ERN_BALANCE E
!WHERE E.COMPANY       = &A.Company
!  AND E.EMPLID        = &A.EmplID
!  AND E.BALANCE_ID    = $Calendar_Year_Id
!  AND E.BALANCE_YEAR  = &TX.Balance_Year
!  AND E.ERNCD IN ('AAA', 'BBB', 'CCC')
!  AND E.GRS_YTD      <> 0
!  AND E.BALANCE_PERIOD  =
!      (SELECT MAX(BALANCE_PERIOD)
!       FROM   PS_CAN_ERN_BALANCE
!       WHERE  EMPlID         = E.EMPlID
!         AND  COMPANY        = E.COMPANY
!         AND  BALANCE_ID     = E.BALANCE_ID
!         AND  BALANCE_YEAR   = E.BALANCE_YEAR
!         AND  PROVINCE       = E.PROVINCE
!         AND  WAGE_LOSS_PLAN = E.WAGE_LOSS_PLAN
!         AND  ERNCD          = E.ERNCD
!         AND  GRS_YTD       <> 0)
!end-SELECT

end-procedure


begin-procedure Cal-Sub-Total-And-Wages-Over-Limit

  move 0 to #Deduct_Cur

  add #Parity_Cur to #Deduct_Cur
  add #Construct_Cur to #Deduct_Cur
  add #Tips_Cur to #Deduct_Cur
  let #Deduct_Cur = #Deduct_Cur + (0.5 * #HeavyEq_Cur)

!****************************************************************************
! add (other relevant totals) to #Deduct_Cur                                *
!****************************************************************************

  add #Deduct_Cur to #Deduct_Ttl                          !line 16

  let #Wages_SubTtl = #True_RV_Txgrs_Cur - #Deduct_Cur
  if #Wages_SubTtl > #Limit
     add #Wages_SubTtl to #OverLimit_Ttl                  ! Line 18
     add 1 to #OverLimit_Emp                              ! Line 19
  end-if

end-procedure


#Include 'hrrnctl1.sqc'  !Get run control parameter values
#Include 'getcodta.sqc'  !Get-Company-Data procecdure
#Include 'hrgetval.sqc'  !Get values mask routines
#Include 'getftdts.sqc'  !Get-As-Of-Date procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
