!****************************************
!  PER007:  Temporary Employees         *
!****************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/08/06:00:30:13                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689848                                              !
!                                                                      *
!***********************************************************************
!Procedures ending with "Scrty" and Record alias ending with "SC" are
!using SQR Security.
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
begin-setup
  #Include 'ptset02.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  let $curr_recalc = 'N'
  if $prcs_oprid=''
    goto last2
  end-if
  if $language_cd = 'JPN'
     let $qualifier = 'D.NAME_AC'
  else
     let $qualifier = 'D.NAME'
  end-if
  do Process-Main
  if $curr_recalc = 'Y'
     do Print-Footing
  end-if
  do Reset
  do Stdapi-Term
last2:
end-report


begin-heading 7
do Get_Field_Information ('PER007',     'REPORT_TITLE',         $REPORTTITLE,   #DW)
  #Include 'stdhtr03.sqc'

do Get_Field_Information ('PER007',     'HIRE_DT1',             $HIRE1,         #DW)
do Get_Field_Information ('PER007',     'HIRE_DT2',             $HIRE2,         #DW)
do Get_Field_Information ('PER007',     'FREQUENCY',            $FREQUENCY,     #DW)
do Get_Field_Information ('HR',         'COMP_RATE1',           $COMP1,         #DW)
do Get_Field_Information ('HR',         'COMP_RATE2',           $COMP2,         #DW)
do Get_Field_Information ('HR',         'FLSA_FLAG',            $FLSA,          #DW)
do Get_Field_Information ('HR',         'EMPL_NAME',            $NAME,          #DW)
do Get_Field_Information ('HR',         'HIRE_DT',              $HIRE,          #DW)
do Get_Field_Information ('HR',         'JOBTITLE',             $JOBTITLE,      #DW)
do Get_Field_Information ('HR',         'DEPARTMENT',           $DEPT,          #DW)
do Get_Field_Information ('HR',         'SUPERVISOR_NAME',      $SUPERVISOR,    #DW)
do Get_Field_Information ('HR',         'EMPLID',               $EMPLID,        #DW)
do Get_Field_Information ('HR',         'EMPL_RCD',             $RCD,           #DW)

PRINT   $HIRE1              (+2,72,11)
PRINT   $COMP1              (0,85)
PRINT   $EMPLID             (+1,1,11)
PRINT   $RCD                (0,13,4)
PRINT   $NAME               (0,19,40)
PRINT   $HIRE               (0,60,11)
PRINT   $HIRE2              (0,72,19)
PRINT   $COMP2              (0,93,10)
PRINT   $FREQUENCY          (0,104,10)

#IFDEF USA
  PRINT   $FLSA             (0,115,9)
#ENDIF

PRINT   $JOBTITLE           (0,125,10)
PRINT   $DEPT               (0,136,30)
PRINT   $SUPERVISOR         (0,167)
end-heading

begin-procedure Init-Report
  LET $_TableAlias ='B'
  move 'PER007' to $ReportID
  do Stdapi-Init
  if $prcs_oprid=''
    display ''
    display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
    display ''
    goto last1
  end-if

  do Security-Param

  if $prcs_process_instance = ''
    do Ask-As-Of-date
  else
    do Select-Parameters
  end-if
  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')
last1:
end-procedure

begin-procedure Get-Values
   let $language_cd = $PRCS_LANGUAGE_CD
   do Get-As-Of-Date
end-procedure

begin-procedure Process-Main
begin-SELECT

C.EMPLID                    (+1,1,11)
C.EMPL_RCD                  (0,13,4)

!************BEGIN SQR NAME DISPLAY CHANGE *********************/
!D.NAME                      (0,19,40)
D.NAME_DISPLAY               (0,19,40)
!************END SQR NAME DISPLAY CHANGE *********************/
D.NAME_AC

B.HIRE_DT
B.REHIRE_DT

  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($AsOfDate, $AsOf_YMD, {DEFYMD}, '', '')
  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime(&B.Hire_Dt, $Hire_YMD, {DEFYMD}, '', '')
  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime(&B.ReHire_Dt, $ReHire_YMD, {DEFYMD}, '', '')
  Do Dtu-Diff-Days($Hire_YMD, $AsOf_YMD, #HireDays)
  Do Dtu-Diff-Days($ReHire_YMD, $AsOf_YMD, #RehireDays)

  if #RehireDays < #HireDays and #RehireDays <> 0
    do Format-DateTime(&B.Rehire_Dt, $out, {DEFDATE}, '', '')
    print $out              (0,+1,10)
    do Format-Number(#RehireDays, $out, '99,999')
    print $out              (0,+1,6)
  else
    do Format-DateTime(&B.Hire_Dt, $out, {DEFDATE}, '', '')
    print $out              (0,+1,10)
    do Format-Number(#HireDays, $out, '99,999')
    print $out              (0,+1,6)
  end-if

C.EFFDT
C.EFFSEQ
C.STD_HOURS
C.STD_HRS_FREQUENCY
R.COUNTRY
C.PAID_HOURS
C.PAID_HRS_FREQUENCY
C.FTE
  if &R.COUNTRY = 'FRA'
     let #job_hours = &C.PAID_HOURS
     let $job_hrs_freq = &C.PAID_HRS_FREQUENCY
  else
     let #job_hours = &C.STD_HOURS
     let $job_hrs_freq = &C.STD_HRS_FREQUENCY
  end-if
C.COMP_FREQUENCY
  do Det-Annual-Factor(&C.COMP_FREQUENCY, $AsOfDate, $freq_descrshort,
                       $frequency_type, #freq_annual_factor, $dummy1)
C.CURRENCY_CD &curin
C.COMPRATE
  do Recalc-Job-Comprate(&C.EMPLID,&C.EMPL_RCD,&C.EFFDT,&C.EFFSEQ,&curin,
                         &C.COMP_FREQUENCY,#job_hours,$job_hrs_freq,
                         &C.FTE,$AsOfDate,#job_comprate,$diff_curr)
  if $diff_curr = 'N'
     do Format-Amt(&C.CompRate, $out, 'b99999999999.999999',&curin, $curout)
     if &C.CompRate = 0
        let $curout = ''
     end-if
  else
     do Format-Amt(#job_comprate, $out, 'b99999999999.999999',&curin, $curout)
     if #job_comprate = 0
        let $curout = ''
     end-if
  end-if
  print $out                (0,0,19)
  print $curout             (0,+1,3)
  if $diff_curr = 'Y'
     let $curr_recalc = 'Y'
     print '*'              (0,+1,1)
  else
     print ' '              (0,+1,1)
  end-if
  print $freq_descrshort    (0,+1,10)

#ifdef USA
C.FLSA_STATUS               (0,+4,2)
#endif

C.BUSINESS_UNIT
  LET $BU = RTRIM(&C.BUSINESS_UNIT,' ')

C.JOBCODE
C.SETID_JOBCODE

  move &C.SETID_JOBCODE to $SETID
  move &C.JobCode to $Jobcode
  do Get-Job-Title
  print $JobTitle           (0,+6,10)

C.DEPTID
  move &C.DeptID to $DeptID
  do Get-Department-Name
  print $DeptName           (0,+1,30)

C.SUPERVISOR_ID
  move &C.Supervisor_ID to $EmplID
  do Get-Employee-Name
  print $Name               (0,+1,30)

FROM  PS_PERSON A,
      PS_EMPLOYMENT B,
      PS_JOB C,
      PS_PERSON_NAME D,
      PS_REG_REGION_TBL R
WHERE C.HR_STATUS = 'A'                            !HP99999
  AND C.REG_TEMP = 'T'
  AND A.EMPLID = B.EMPLID
  AND B.EMPLID = C.EMPLID
  AND B.EMPL_RCD = C.EMPL_RCD
  AND C.PER_ORG = 'EMP'
  AND D.EMPLID = A.EMPLID
  AND C.REG_REGION = R.REG_REGION
  AND C.EFFDT =
      (SELECT MAX(H.EFFDT)
       FROM PS_JOB H
       WHERE H.EMPLID = C.EMPLID
         AND H.EMPL_RCD = C.EMPL_RCD
         AND H.EFFDT <= $AsOfDate)
  AND C.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = C.EMPLID
         AND I.EMPL_RCD = C.EMPL_RCD
         AND I.EFFDT = C.EFFDT)

  [$SecurityClausewithERN]

ORDER BY [$qualifier]
end-SELECT
end-procedure

begin-procedure Print-Footing

do Get_Field_Information ('HR',         'COMP_CURR_MSG',         $COMP_CURR_MSG, #DW)
PRINT   $COMP_CURR_MSG      (+3,1)

end-procedure

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask As Of Date input
#include 'hrsecty.sqc'   !Get SQR Security parameters
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'getempnm.sqc'  !Get-Employee-Name procedure
#Include 'currency.sqc'  !Recalc-Job-Comprate procedure
                         !Includes 'number.sqc' and 'frquency.sqc'
#Include 'readxlat.sqc'  !get translates for fieldname, value
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
