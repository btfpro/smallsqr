!***********************************************************************
!  GPUSPS02: Global Payroll Payslips - Static USA Employee Header      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/21:01:51:43                                 *
!       $Release:  HR9                                                 *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************
! Change History
! Incident ID    Dated     Comments
!
! 1269701000      7/05     Redundant reads for some tables. Create arrays and read in data
!                          up front and access the array instead of the table for subsequent
!                          data retrieval

 

!***********************************************************************
! Init-Variables_EEHead                                                         *
!***********************************************************************
begin-procedure Init-Variables_EEHead

  
   if upper($gbl_new_lang_flag) = 'Y'
             
    do Get_Field_Information ($ReportID, 'EMPL_ID'       , $EMPL_ID_LBL,         #DW)
    do Get_Field_Information ($ReportID, 'DEPARTMENT'   , $DEPARTMENT_LBL,       #DW)
    do Get_Field_Information ($ReportID, 'LOCATION'       , $LOCATION_LBL,        #DW)
    do Get_Field_Information ($ReportID, 'JOB_TITLE'    , $JOB_TITLE_LBL,        #DW)
    do Get_Field_Information ($ReportID, 'PAY_RATE'     , $PAY_RATE_LBL,           #DW)
    do Get_Field_Information ($ReportID, 'SSN'           , $SSN_LBL,           #DW)
    do Get_Field_Information ($ReportID, 'TAX_DATA'     , $TAX_DATA_LBL,       #DW)
    do Get_Field_Information ($ReportID, 'FEDERAL'     , $FEDERAL_LBL,           #DW)
    do Get_Field_Information ($ReportID, 'STATE'     , $STATE_LBL,          #DW)
    do Get_Field_Information ($ReportID, 'STATUS'    , $STATUS_LBL,         #DW)
    do Get_Field_Information ($ReportID, 'ALLOWANCES'     , $ALLOWANCES_LBL,     #DW)
    do Get_Field_Information ($ReportID, 'ADDL_PCT'      , $ADDL_PCT_LBL,     #DW)
    do Get_Field_Information ($ReportID, 'ADDL_AMT'       , $ADDL_AMT_LBL,         #DW)
    
  end-if
end-procedure ! Init-Report
!**********************************************************************
!**********************************************************************
!      Employee_Header_Static
!**********************************************************************
!**********************************************************************

begin-procedure Employee_Header_Static

#debug do Pslp-Proc-Debug-Msg('USA EMPLOYEE HEADER STATIC section GPUSPS02.SQC ')
#debug do Pslp-Proc-Debug-Msg('USA EMPLOYEE HEADER STATIC section: Procedure Employee_Header_Static')
    let $space_left = 'y'
    let $check_collision = 'n'
    let $section_printed = 'n'
    do Init-Variables_EEHead
    while ($section_printed = 'n')
        do get_start_page_line_number(#current-line, #page-count, #start-section-line-number, #start-section-page-number)
        do evaluate_space(#start-section-line-number,$space_left)
        if $space_left = 'n'
            if upper($gbl_Paycheck_To_Do) = 'Y'
                Do print_check_usa
                !Add 2 to #start-section-line-number
                move 'n' to $check_collision 
                move 'n' to $gbl_Paycheck_To_Do
            else
                new-page
                Move 1 to #_gbl_curr_Section_Start_Line
                Move 1 to #start-section-line-number
                do Get_Employee_Details
                do Print_Employee_Header
                move 'y' to $section_printed
                break
            end-if
        end-if
        if $space_left = 'y'

            if upper($gbl_Paycheck_To_Do) = 'Y'
                do evaluate_bankdraft_collision(#start-section-line-number,$check_collision)
                if $check_collision = 'y'
                
                    Do print_check_usa
                    #debug do Pslp-Proc-Debug-Msg('USA EMPLOYEE HEADER STATIC section: Back into procedure Employee_Header_Static')
                    move 'n' to $check_collision 
                    move 'n' to $gbl_Paycheck_To_Do
                else
                    do Get_Employee_Details
                    do Print_Employee_Header
                    move 'y' to $section_printed
                    break
                end-if
            else
                do Get_Employee_Details
                do Print_Employee_Header
                move 'y' to $section_printed
                break
            end-if
        end-if
    end-while


end-procedure




!**********************************************************************
!**********************************************************************
!      Get_Employee_Details
!**********************************************************************
!**********************************************************************
begin-procedure Get_Employee_Details
#debug do Pslp-Proc-Debug-Msg('USA EMPLOYEE HEADER STATIC section: Procedure Get_Employee_Details')

    do get_address_type     
    Do Get_Payee_Address($gbl_tgt_Emplid, $ADDR_TYPE, $ADDRESS1_EEHEAD, $ADDRESS2_EEHEAD, 
             $ADDRESS3_EEHEAD, $ADDRESS4_EEHEAD, $CITY_EEHEAD, $STATE_EEHEAD, $POSTAL_EEHEAD)
    Do Get_SSN($gbl_tgt_Emplid,$SSN)
    Do Get_TMP_GDE_Vars
    Do Get_Dept_Name($DEPTID_EEHEAD, $SETID_DEPT_EEHEAD, $Dept)
    do Get_Location_Name($LOCATIONID_EEHEAD,$SETID_LOCATION_EEHEAD, $LOCATION)
    do Get_job_Name($JOBCODE_EEHEAD,$SETID_JOBCODE_EEHEAD, $JobTitle)
    do Get_Tax_Data($gbl_tgt_Emplid,$Company_EEHEAD, $FED_MAR_ST,#FED_ALLOW,#FED_ADD_PCT,
        #FED_ADD_AMT,$STATE,$STATE_MAR_ST,#STATE_ALLOW,#STATE_ADD_ALLOW,#STATE_ADD_PCT,#STATE_ADD_AMT)

end-procedure



!**********************************************************************
!**********************************************************************
!      Get_TMP_GDE_Vars
!**********************************************************************
!**********************************************************************
begin-procedure Get_TMP_GDE_Vars
#debug do Pslp-Proc-Debug-Msg('USA EMPLOYEE HEADER STATIC section: Procedure Get_TMP_GDE_VARS')

   let $COMPANY_EEHEAD = $gbl_tgt_company
   let $SETID_JOBCODE_EEHEAD = $gbl_tgt_setid_jobcode
   let $JOBCODE_EEHEAD = $gbl_tgt_jobcode 
   let $SETID_DEPT_EEHEAD = $tgt_Dept_SetID
   let $DEPTID_EEHEAD = $tgt_deptid
   let $SETID_LOCATION_EEHEAD = $tgt_SetID_Location
   let $LOCATIONID_EEHEAD = $tgt_location
   let #COMPRATE_EEHEAD = #gbl_tgt_comprate 
   let $COMP_FREQUENCY_EEHEAD = $gbl_tgt_comp_frequency 

End-Procedure


!**********************************************************************
!**********************************************************************
!     get_address_type
!**********************************************************************
!**********************************************************************
begin-procedure get_address_type
#debug do Pslp-Proc-Debug-Msg('USA EMPLOYEE HEADER STATIC section: Procedure Get_address_type')

let #i=0
let #j=0


While (#i < {Section_array_size} )

   get $Section_Name from section(#i) Name
   if $Section_Name = $gbl_curr_Section_Name
      break
   end-if
   Add 1 to #i
      
end-while

if #i < {Section_array_size}

    while (#j < {Block_array_size})
      get $block_type from section(#i) BlkType(#j)
      if $block_type = 'A'
        break
      end-if
      Add 1 to #j
    end-while
   
  if #j < {Block_array_size}

   get $block_cont from section(#i) BlkContent(#j)

   Move $block_cont to $ADDR_TYPE

   #debug1 Show '** USA EMPLOYEE HEADER STATIC section:        $ADDR_TYPE = ' $ADDR_TYPE
 
  end-if
end-if

end-procedure


!**********************************************************************
!**********************************************************************
!      Get_SSN
!**********************************************************************
!**********************************************************************

begin-procedure Get_SSN($EMPLID,:$SSN)
#debug do Pslp-Proc-Debug-Msg('USA EMPLOYEE HEADER STATIC section: Procedure Get_SSN')
BEGIN-SELECT ON-ERROR=SQL-ERROR
A.NATIONAL_ID
    Move &A.NATIONAL_ID to $SSN
FROM PS_PERS_NID A 
WHERE A.EMPLID = $Emplid
end-select
end-procedure




!**********************************************************************
!**********************************************************************
!      Get_Tax_Data
!**********************************************************************
!**********************************************************************


begin-procedure Get_Tax_Data($EMPLID,$Company_EEHEAD,:$FED_MAR_ST,:#FED_ALLOW,:#FED_ADD_PCT,:#FED_ADD_AMT,
                 :$STATE,:$STATE_MAR_ST,:#STATE_ALLOW,:#STATE_ADD_ALLOW, :#STATE_ADD_PCT,:#STATE_ADD_AMT)
#debug do Pslp-Proc-Debug-Msg('USA EMPLOYEE HEADER STATIC section: Procedure Get_Tax_Data')
BEGIN-SELECT ON-ERROR=SQL-ERROR
A.GPUS_FWT_MAR_ST
A.GPUS_FWT_ALLOW
A.GPUS_FWT_ADD_PCT
A.GPUS_FWT_ADD_AMT
    MOVE &A.GPUS_FWT_MAR_ST TO $FED_MAR_ST
    MOVE &A.GPUS_FWT_ALLOW TO #FED_ALLOW
    MOVE &A.GPUS_FWT_ADD_PCT TO #FED_ADD_PCT
    MOVE &A.GPUS_FWT_ADD_AMT TO #FED_ADD_AMT
FROM PS_GPUS_FWT_EE A
WHERE A.EMPLID = $EMPLID
    AND A.COMPANY = $COMPANY_EEHEAD
    AND A.EFFDT = (SELECT MAX(A1.EFFDT) FROM PS_GPUS_FWT_EE A1
                            WHERE A1.EMPLID = A.EMPLID
                              AND A1.COMPANY = A.COMPANY)
END-SELECT

BEGIN-SELECT ON-ERROR=SQL-ERROR
A.STATE
A.GPUS_SWT_MAR_STAT
A.GPUS_SWT_WHOLD_ALL
A.GPUS_SWT_ADD_ALLWS
A.GPUS_SWT_ADD_PCT
A.GPUS_SWT_ADD_AMT
    MOVE &A.STATE TO $STATE
    MOVE &A.GPUS_SWT_MAR_STAT TO $STATE_MAR_ST
    MOVE &A.GPUS_SWT_WHOLD_ALL TO #STATE_ALLOW
    MOVE &A.GPUS_SWT_ADD_ALLWS TO #STATE_ADD_ALLOW
    MOVE &A.GPUS_SWT_ADD_PCT TO #STATE_ADD_PCT
    MOVE &A.GPUS_SWT_ADD_AMT TO #STATE_ADD_AMT
FROM PS_GPUS_SWT_EE A
WHERE A.EMPLID = $EMPLID
    AND A.COMPANY = $COMPANY_EEHEAD
    AND A.EFFDT = (SELECT MAX(A1.EFFDT) FROM PS_GPUS_SWT_EE A1
                            WHERE A1.EMPLID = A.EMPLID
                              AND A1.COMPANY = A.COMPANY)
END-SELECT

end-procedure

!**********************************************************************
!**********************************************************************
!      Print_Employee_Header
!**********************************************************************
!**********************************************************************
begin-procedure Print_Employee_Header
#debug do Pslp-Proc-Debug-Msg('USA EMPLOYEE HEADER STATIC section: Procedure Print_Employee_Header')

let #Employee_Header_line_printed = 0
let #row = #start-section-line-number
let $prev_line_printed = 'n'
let #Employee_Section_End = 0
let #Employee_Section_End = #current-line + #gbl_curr_Section_Nbr_Lines
  columns 2 44 86
if #gbl_curr_Section_Nbr_Lines >= 1
  graphic (#row,2,42) box #gbl_curr_Section_Nbr_Lines 10

  next-column

  graphic (#row,2,42) box #gbl_curr_Section_Nbr_Lines 10

  next-column

  graphic (#row,2,42) box 1 10

let #tax_box_size = #gbl_curr_Section_Nbr_Lines - 1
  if #gbl_curr_Section_Nbr_Lines >= 2
    graphic (+1,2,42)   box #tax_box_size 10
  end-if
end-if

!let #Employee_Section_End = #current-line + #gbl_curr_Section_Nbr_Lines

 ! columns 2 44 57 86 98 108
  columns 4 46 59 88 104 115
if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $gbl_tgt_full_name                    (#row,1) bold
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
    If rtrim($ADDRESS1_EEHEAD,' ') != ''
      print $ADDRESS1_EEHEAD    (+1,1)
      Add 1 to #Employee_Header_line_printed
      let $prev_line_printed = 'y'
    end-if
end-if
if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
    If rtrim($ADDRESS2_EEHEAD,' ') != ''
      print $ADDRESS2_EEHEAD    (+1,1)
      Add 1 to #Employee_Header_line_printed
      let $prev_line_printed = 'y'
    end-if
end-if
if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
    If rtrim($ADDRESS3_EEHEAD,' ') != ''
      print $ADDRESS3_EEHEAD    (+1,1)
      Add 1 to #Employee_Header_line_printed
      let $prev_line_printed = 'y'
    end-if
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
    If rtrim($ADDRESS4_EEHEAD,' ') != ''
      print $ADDRESS4_EEHEAD    (+1,1)
      Add 1 to #Employee_Header_line_printed
      let $prev_line_printed = 'y'
    end-if
end-if

    Let $CityStatePostalC = ''
    Let $CityC = rtrim($City_EEHEAD,' ')
    Let $StateC = rtrim($State_EEHEAD,' ')
    if $StateC != ''
               if rtrim($Postal_EEHEAD,' ') != ''
            concat $CityC with $CityStatePostalC 
                 concat ', ' with $CityStatePostalC 
            concat $StateC with $CityStatePostalC 
              end-if
         end-if
    concat $Postal_EEHEAD With $CityStatePostalC
if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
    print $CityStatePostalC   (+1,1)
    Add 1 to #Employee_Header_line_printed
    let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $SSN_LBL                 (+1,1)
  print $SSN         ()     edit xxx-xx-xxxx
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

let #Employee_Header_line_printed = 0

  next-column
if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $EMPL_ID_LBL           (#row,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if
if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $DEPARTMENT_LBL           (+1,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if
if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $LOCATION_LBL             (+1,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if
if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $JOB_TITLE_LBL            (+1,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if
if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $PAY_RATE_LBL             (+1,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

let #Employee_Header_line_printed = 0

  next-column
if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $gbl_tgt_Emplid               (#row,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

  
if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  let $out = $DeptID_EEHEAD || '-' || $Dept
  print $out                    (+1,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $Location          (+1,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $JobTitle               (+1,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if



  if $COMP_FREQUENCY_EEHEAD    = 'H'
     let $Comp_freq_format_mask =  '$$$,$$$,$$$,$$9.999999'
  else
     let $Comp_freq_format_mask =  '$$$,$$$,$$$,$$9.99'
  end-if

  let $out =
    ltrim(edit(#COMPRATE_EEHEAD,$Comp_freq_format_mask),' ') || ' ' || $COMP_FREQUENCY_EEHEAD

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $out                    (+1,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if


let #Employee_Header_line_printed = 0
  next-column

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $TAX_DATA_LBL             (#row,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $STATUS_LBL             (+1,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $ALLOWANCES_LBL          (+1,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $ADDL_PCT_LBL          (+1,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $ADDL_AMT_LBL           (+1,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if


let #Employee_Header_line_printed = 0
  next-column

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $FEDERAL_LBL               (#row,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $FED_MAR_ST           (+1,7)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if
  let   $out = ltrim(edit(#FED_ALLOW,'999'),' ')

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $out                    (+1,7)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  let   $out = ltrim(edit(#FED_ADD_PCT,'b9.999'),' ')
  print $out                    (+1,3)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  let   $out = ltrim(edit(#FED_ADD_AMT,'b9,999.99'),' ')
  print $out                    (+1,3)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

  next-column
let #Employee_Header_line_printed = 0

  let $ResidentState = rtrim($STATE, ' ') || ' ' || $STATE_LBL

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $ResidentState          (#row,1)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  print $STATE_MAR_ST           (+1,8)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  let   $out = ltrim(edit(#STATE_ALLOW,'999'),' ')
  print $out                    (+1,8)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if


if #STATE_ADD_ALLOW > 0
    let   $out = '+' || ltrim(edit(#STATE_ADD_ALLOW,'999'),' ')
    if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
      print $out                  ()
      Add 1 to #Employee_Header_line_printed
      let $prev_line_printed = 'y'
    end-if
end-if
 
if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines
  let   $out = ltrim(edit(#STATE_ADD_PCT,'b9.999'),' ')
   print $out                     (+1,4)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #Employee_Header_line_printed < #gbl_curr_Section_Nbr_Lines                   
  let   $out = ltrim(edit(#STATE_ADD_AMT,'b9,999.99'),' ')
  print $out                    (+1,4)
  Add 1 to #Employee_Header_line_printed
  let $prev_line_printed = 'y'
end-if

if #current-line < #Employee_Section_End
   let #current-line = #Employee_Section_End
end-if 

    
End-procedure 


