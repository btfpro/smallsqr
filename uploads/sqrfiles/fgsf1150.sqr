
!***********************************************************************
!  FGSF1150:  Leave Audit SF1150 Report                                *
!***********************************************************************
!***********************************************************************
!                                                                      *
!  Confidentiality Information:                                        *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:12:16:07                                 *
!       $Release:  HR9                                                 *
!      $Revision:  101                                                 *
!***********************************************************************
!  Modifications:                                                      *
!                                                                      *
!***********************************************************************  
!                                                                      *
!***********************************************************************


!************************************************************
! Section:      Include Files                               *
! Descr:        This sections contains set-up include files.*
!************************************************************

#include 'setenv.sqc'
#include 'setup01.sqc'          ! Portrait Printer/page initialization
                                ! Performs SQR automatic setup procedure
                                ! Procedures:  begin-setup
                                ! Description: Printer and Page-Size Initialization.
#include 'datetime.sqc'         ! Routines for date and time formatting
                                ! Procedures: Init-Datetime
                                ! Procedures: Format-DateTime
                                ! Procedures: Diff-Date
                                ! Procedures: many others.
#include 'curdttim.sqc'         ! Get-Current-DateTime procedure
                                ! Procedures: Get-Current-DateTime





!************************************************************
! Section:      Initialize                                  *
! Descr:        Initializes program variables               *
!************************************************************

BEGIN-SETUP
 DECLARE Printer
           TYPE        = HPLASERJET
                   ORIENTATION = PORTRAIT
                   TOP-MARGIN  = .07
                   LEFT-MARGIN = .10
                   FONT        = 4
                   POINT-SIZE  = 10
           char-size = 7.2

END-SETUP




!************************************************************
! Procedure: Begin-Report                                   *
! Descr:     Main Report procedure.                         *
!************************************************************
begin-Report
  display 'begin report'
 do StdAPI-Init
 do Init-Report
 do Stdapi-Term
 do Reset

end-Report

!************************************************************
! Procedure: Init-Report                                    *
! Descr:     Report initialization procedure.  Set titles,  *
!                        parameters. This is called from the*
!                        Begin-Report procedure.            *
!************************************************************
begin-procedure Init-Report
        do Init-DateTime
        do Init-Number
        do Get-Current-DateTime

    if $prcs_process_instance = ''

    else
       do Select-Parameters

    end-if


end-procedure

!********************************
begin-procedure Select-Parameters
!********************************

  let $process_found = 'N'

BEGIN-SELECT


RUN_CNTL_FG.EMPLID
RUN_CNTL_FG.EMPL_RCD

    let  $Emplid   =  &RUN_CNTL_FG.EMPLID
    let  #Empl_Rcd =  &RUN_CNTL_FG.EMPL_RCD

    do initialize-variables

    do MAIN

    let $process_found = 'Y'

FROM  PS_GVT_RUNCTL_1150 RUN_CNTL_FG

WHERE RUN_CNTL_FG.OPRID       = $Prcs_OprID
  AND RUN_CNTL_FG.RUN_CNTL_ID = $Prcs_Run_Cntl_ID

END-SELECT

End-Procedure  !Select-Parameters

!************************************************************************
BEGIN-PROCEDURE initialize-variables
!************************************************************************

         let $EFFDT                = ' '
         let $NOA_CODE             = ' '
         let $HOURLY_RT            = '0'
         let $PAYGROUP             = ' '
         let $NAME                 = ' '
         let $NATIONAL_ID          = ' '
         let #HOURLY-RT            = '0'
         let $B5-EFFDT             = ' '
         let #C5-hrs-carryover     =  '0'
         let #C5-hrs-earned-ytd    =  '0'
         let #C5-hrs-taken-ytd     =  '0'
         let #C5-hrs-bought-ytd    =  '0'
         let #C5-hrs-adjust-ytd    =  '0'
         let #C5-hrs-sold-ytd      =  '0'
         let #C5-hrs-forfeit-ytd   =  '0'
         let #C5-final-tally       =  '0'
         let #C5-temp-tally        =  '0'
         let #SERVICE_YEARS        =  ' '
         let #SERVICE_MONTHS_test  =  '0'
         let #service_days          = '0'
         let #service_months        = '0'
         let #service_years         = '0'
         let #priorday-factor       = '0'
         let #priorday              = '0'
         let #dtu_da                = '0'
         let #prioryr               = '0'
         let #dtu_yr                = '0'
         let #prior_lv_year         = '0'
         let #prior_lv_mo           = '0'
         let #dtu_mo                = '0'
         let #prior12-factor        = '0'
         let #prior_lv_day          = '0'
         let #HRS-CARRYOVER-AN      = '0'
         let #HRS-EARNED-YTD-AN     = '0'
         let #HRS-GVT-CR-REDUC-AN   = '0'
         let #HRS-TAKEN-YTD-AN      = '0'
         let #HRS-BOUGHT-YTD-AN     = '0'
         let #HRS-ADJUST-YTD-AN     = '0'
         let #HRS-SOLD-YTD-AN       = '0'
         let #GVT-FORFEIT-YTD-AN    = '0'
         LET #GVT_NONPAY_YTD_AN     = '0'
         let $GVT-ERN-ACCR-CLASS-an = ' '
         let #hours12-bal-an        = '0'
         let #HRS-CARRYOVER-SI      = '0'
         let #HRS-EARNED-YTD-SI     = '0'
         let #HRS-GVT-CR-REDUC-SI   = '0'
         let #HRS-TAKEN-YTD-SI      = '0'
         let #HRS-BOUGHT-YTD-SI     = '0'
         let #HRS-ADJUST-YTD-SI     = '0'
         let #HRS-SOLD-YTD-SI       = '0'
         let #GVT-FORFEIT-YTD-SI    = '0'
         LET #GVT_NONPAY_YTD_si     = '0'
         let $GVT-ERN-ACCR-CLASS-SI = ' '
         let #gvt-hrs-tot-si        = '0'
         let #hours12-bal-si        = '0'

         let #HRS-CARRYOVER-RE      = '0'
         let #HRS-EARNED-YTD-RE     = '0'
         let #HRS-GVT-CR-REDUC-RE   = '0'
         let #HRS-TAKEN-YTD-RE      = '0'
         let #HRS_BOUGHT_YTD-RE     = '0'
         let #HRS_ADJUST_YTD-RE     = '0'
         let #HRS_SOLD_YTD          = '0'
         let #GVT_R_HRS_1           = '0'
         let #GVT_R_HRS_TAK_1       = '0'
         let #GVT_R_HRS_2           = '0'
         let #GVT_R_HRS_TAK_2       = '0'
         let #GVT_R_HRS_3           = '0'
         let #GVT_R_HRS_TAK_3       = '0'
         let #GVT_NONPAY_YTD_RE     = '0'
         let $GVT-ERN-ACCR-CLASS-re = ' '
         let #print-8-rest-taken    = '0'
         let #gvt-hrs-tot-re        = '0'
         let #hours12-bal-re        = '0'
         let #tot-taken-print-11    = '0'
         let $full_pt_time          = ' '
         let $par_nte_date          = ' '
         let #A9annual-total        = '0'
         let #A9sick-total          = '0'
         let #A9restored-total      = '0'
         let #AN-OTH-HRS            = '0'
         let $ERNCD-AN              = ' '
         let #AN-OTH-HRS            = '0'
         let #SI-OTH-HRS            = '0'
         let $ERNCD-SI              = ' '
         let #RE-OTH-HRS            = '0'
         let #total16               = '0'
         let #GVT-NONPAY-awop-an    = '0'
         let #GVT-NONPAY-awop-si    = '0'
         let #GVT-NONPAY-awop-re    = '0'
         let #b17-absence-since-lei = '0'
         let #b17-military          = '0'
         let $ho-effdt              = ' '
         let #ho-earned             = '0'
         let #ho-hrs-carryover      = '0'
         let #ho-hrs-adjust         = '0'
         let #ho-hrs-taken          = '0'
         let #20-home-leave         = '0'

         let $Benefit-plan          = ' '
         let #ben-ded-ytd           = '0'

         let $Erncd-Spcl            = ' '
         let #gross-ytd             = '0'
         let #medicare-withholding  = '0'
         let #subject-to-medicare   = '0'



End-Procedure  !initialize-variables
!************************************************************************
BEGIN-PROCEDURE MAIN
!************************************************************************

 do get-static-values
 do get-pay-end-date
 do A5-SUBJECT-TO-USC5
 do TOTAL-SERVICE-6
 do CARRYOVER-7AN
 do CARRYOVER-7SI
 do CARRYOVER-7RE
 do RESTRCN-90DAY
 do TOTAL9
 do TOTAL-LUMPSUM-13A
 do TOTAL-LUMPSUM-13B
 do TOTAL-LUMPSUM-13C
 do total-nonpay-ytd
 do LEI17
 do curr-home-lv-bal20
 do rmk-tsp-dollars
 do rmk-medicare-withholding
 do benefits-remark
 do print-form



END-PROCEDURE MAIN

!************************************************************************
! get-static-values
!************************************************************************

begin-procedure get-static-values
 graphic () font 4 9



BEGIN-SELECT On-Error=SQL-Error


JOB.EFFDT         &JOB.EFFDT         (8,4) EDIT MM/DD/YYYY
JOB.GVT_NOA_CODE  &JOB.GVT_NOA_CODE  (9,4)
JOB.HOURLY_RT     &JOB.HOURLY-RT     (36,18)
JOB.PAYGROUP      &JOB.PAYGROUP
PERS.NAME         &PERS.NAME         (6,4)
NID.NATIONAL_ID   &NID.NATIONAL_ID   (6,33) edit 'xxx-xx-xxxx'

         let $EFFDT = &JOB.EFFDT
         let $NOA_CODE = &JOB.GVT_NOA_CODE
         let $HOURLY_RT = &JOB.HOURLY-RT
         let $PAYGROUP = &JOB.PAYGROUP
         let $NAME = &PERS.NAME
         let $NATIONAL_ID = &NID.NATIONAL_ID
         let #HOURLY-RT = &JOB.HOURLY-RT

     from PS_GVT_JOB JOB,
        PS_GVT_PERS_DATA PERS,
        PS_GVT_PERS_NID NID
        where JOB.EMPLID = $Emplid
        and JOB.EMPL_RCD = #Empl_Rcd
        and JOB.GVT_NOA_CODE IN('300', '301', '302', '303', '304', '312',
          '317', '330', '350', '351', '352', '353', '355', '356', '357', '385', '386', '390')
        and JOB.EMPLID = PERS.EMPLID
        and JOB.EMPLID = NID.EMPLID
        and JOB.EFFDT  = PERS.EFFDT
        and JOB.EFFDT  = NID.EFFDT
        and JOB.EFFSEQ = PERS.EFFSEQ
        and JOB.EFFSEQ = NID.EFFSEQ
        and JOB.EFFDT = (SELECT MAX(JOB1.EFFDT) FROM  PS_GVT_JOB JOB1
               WHERE JOB.EMPLID = JOB1.EMPLID
                  AND JOB.GVT_NOA_CODE =  JOB1.GVT_NOA_CODE)

end-select

BEGIN-SELECT On-Error=SQL-Error
DESCR25    (9,8)

FROM PS_GVT_NOAC_TBL
WHERE GVT_NOA_CODE = $NOA_CODE

end-select

end-procedure get-static-values


!************************************************************************
! Get the pay begin and end dates for the Employee's paygroup for the
!  period in which the employee terminated (eff-date).
! get-pay-end-date
!************************************************************************

begin-procedure get-pay-end-date


begin-select On-Error=SQL-Error

PAY_END_DT     &PAY_END_DT
PAY_BEGIN_DT   &PAY_BEGIN_DT

      let $pay_end_dt = &PAY_END_DT
      LET $PAY_BEGIN_DT = &PAY_BEGIN_DT

 from PS_PAY_CALENDAR
 where PAYGROUP = $PAYGROUP

      and PAY_BEGIN_DT <= $EFFDT
      and PAY_END_DT >= $EFFDT

end-select

end-procedure get-pay-end-date

!***********************************************************************
begin-procedure A5-SUBJECT-TO-USC5
!***********************************************************************


begin-select On-Error=SQL-Error

GVT_ERN_ACCR_CLASS
EFFDT
   do C5-ADD-TO-COUNT
FROM PS_GVT_ACCR_PLAN

 WHERE GVT_ERN_ACCR_CLASS = 'ANN360'
 AND EMPLID =   $EMPLID
 AND EMPL_RCD = #Empl_Rcd

end-select

 If #var5c > 0

   !let $B5-SUBJECT-TO-USC = 'Y'
   print 'X'                      (7,65)


 Else

   !let $B5-SUBJECT-TO-USC = 'N'
   print 'X'                      (7,73)


 end-if


END-PROCEDURE  A5-SUBJECT-TO-USC5


!***********************************************************************
begin-procedure C5-ADD-TO-COUNT
!***********************************************************************
    let #var5c = #var5c + 1

END-PROCEDURE  C5-ADD-TO-COUNT


!***********************************************************************
begin-procedure C5-ANNUAL-LV-BAL
!***********************************************************************


begin-select On-Error=SQL-Error

A.HRS_CARRYOVER    &A.HRS_CARRYOVER
A.HRS_EARNED_YTD   &A.HRS_EARNED_YTD
A.HRS_TAKEN_YTD    &A.HRS_TAKEN_YTD
A.HRS_BOUGHT_YTD   &A.HRS_BOUGHT_YTD
A.HRS_ADJUST_YTD   &A.HRS_ADJUST_YTD
A.HRS_SOLD_YTD     &A.HRS_SOLD_YTD
A.GVT_FORFEIT_YTD  &A.GVT_FORFEIT_YTD
A.GVT_ERN_ACCR_CLASS  &A.GVT_ERN_ACCR_CLASS

   let  #C5-hrs-carryover    =   &A.HRS_CARRYOVER
   let  #C5-hrs-earned-ytd   =   &A.HRS_EARNED_YTD
   let  #C5-hrs-taken-ytd    =   &A.HRS_TAKEN_YTD
   let  #C5-hrs-bought-ytd   =   &A.HRS_BOUGHT_YTD
   let  #C5-hrs-adjust-ytd   =   &A.HRS_ADJUST_YTD
   let  #C5-hrs-sold-ytd     =   &A.HRS_SOLD_YTD
   let  #C5-hrs-forfeit-ytd  =   &A.GVT_FORFEIT_YTD

  do 5c-tally-ann-lv-bal


FROM PS_GVT_ACCR_SUMM A



 WHERE A.GVT_EARN_TYPE = 'AN'
 AND A.EMPLID   = $EMPLID
 AND A.EMPL_RCD = #Empl_Rcd
 AND A.EFFDT = (
   SELECT MAX(A1.EFFDT)
   FROM PS_GVT_ACCR_SUMM A1
     WHERE A1.EMPLID = A.EMPLID
     AND A1.EMPL_RCD = A.EMPL_RCD
     AND A1.GVT_ERN_ACCR_CLASS = A.GVT_ERN_ACCR_CLASS
     AND A1.GVT_EARN_TYPE = A.GVT_EARN_TYPE)

end-select

    PRINT #C5-final-tally  (11,69) edit 999.99

END-PROCEDURE  C5-ANNUAL-LV-BAL

!***********************************************************************
begin-procedure 5c-tally-ann-lv-bal
!***********************************************************************
    let #C5-temp-tally = #C5-HRS-CARRYOVER + #C5-hrs-earned-ytd + #C5-hrs-taken-ytd + #C5-hrs-bought-ytd
        +  #C5-hrs-adjust-ytd - #C5-hrs-sold-ytd -  #C5-hrs-forfeit-ytd

    let #C5-final-tally = #C5-final-tally +  #C5-temp-tally

END-PROCEDURE  5c-tally-ann-lv-bal



!***********************************************************************
begin-procedure TOTAL-SERVICE-6
!***********************************************************************


BEGIN-SELECT   On-Error=SQL-Error

HIRE.EFFDT          &HIRE.HIRE_DT


   LET $HIRE_DT          = &HIRE.HIRE_DT


  FROM PS_GVT_JOB HIRE
    WHERE HIRE.EMPLID = $emplid
    AND HIRE.EMPL_RCD = #Empl_Rcd
    AND HIRE.ACTION = 'HIR'
    AND HIRE.EFFDT = (SELECT MAX(HIRE1.EFFDT)
    FROM PS_GVT_JOB HIRE1
       WHERE HIRE1.EMPLID = HIRE.EMPLID
       AND HIRE1.EMPL_RCD = HIRE.EMPL_RCD
       AND HIRE1.ACTION = HIRE.ACTION)


END-SELECT


   LET #SERVICE_YEARS = trunc(DATEDIFF(&JOB.EFFDT, &HIRE.HIRE_DT, 'YEAR'),0)
    if #service_years < 15
     print 'X'                  (15,13) bold
    else
     print 'X'                  (13,13) bold
    end-if



    LET #SERVICE_MONTHS_test = trunc(DATEDIFF(&JOB.EFFDT, &HIRE.HIRE_DT, 'MONTH'),0)
    let #service_months = #service_months_test - (#service_years * 12)


    let #service_days =
    datediff(&JOB.EFFDT,dateadd(&HIRE.HIRE_DT, 'month', #service_months_test),'day')



     LET #SERVICE_days = trunc(DATEDIFF(&JOB.EFFDT, &HIRE.HIRE_DT, 'DAY'),0)

     let #service_days =
     datediff(&JOB.EFFDT,dateadd(&HIRE.HIRE_DT, 'month', #service_months_test),'day')

     if #service_months < 0
        let #service_years = #service_years - 1
        let #service_months = #service_months + 11
     end-if

     if #service_days < 0
        let #service_months = #service_months - 1
        let #service_days = #service_days + 30
     end-if

     print #service_years         (15,37) edit 99
     print #service_days          (15,73) edit 99
     print #service_months        (15,55) edit 99

    print 'X'                  (15,13) bold


END-PROCEDURE  TOTAL-SERVICE-6


!***********************************************************************
begin-procedure CARRYOVER-7AN
!***********************************************************************



 do Convert-To-DTU-Date(&JOB.EFFDT, $term_date7)


!now pass dtu_date to the parsing routine
   do dtu-parse-date($term_date7, #term7_yr, #term7_mo, #term7_da)

!returns dtu_yr, mo, & da

   let #prioryr = 1
   let #prior12 = 12
   let #priorday   = 31

   let #prior12-factor = #prior12 - #term7_mo

   let #priorday-factor = #priorday - #term7_da

   let #prior_lv_year = #term7_yr - #prioryr

   let  #prior_lv_mo     = #term7_mo  + #prior12-factor
   let  #prior_lv_day    = #term7_da

   !print the dates in 7

   print #prior_lv_mo    (22,11)    edit 99
   print #priorday       (22,15)    edit 99
   print #prior_lv_year  (22,18)    edit 9999



   do dtu-format-date(#dtu_yr, #dtu_mo, #dtu_da, $dtu_date)
   let #prior_lv_date = $dtu_date



begin-select On-Error=SQL-Error

Z.HRS_CARRYOVER
Z.HRS_EARNED_YTD
Z.GVT_CR_REDUC_YTD  &Z.GVT_CR_REDUC_YTD
Z.HRS_TAKEN_YTD     &Z.HRS_TAKEN_YTD
Z.HRS_BOUGHT_YTD    &Z.HRS_BOUGHT_YTD
Z.HRS_ADJUST_YTD    &Z.HRS_ADJUST_YTD
Z.HRS_SOLD_YTD      &Z.HRS_SOLD_YTD
Z.GVT_FORFEIT_YTD   &Z.GVT_FORFEIT_YTD
Z.GVT_ERN_ACCR_CLASS  &Z.GVT_ERN_ACCR_CLASS
Z.GVT_NONPAY_YTD      &Z.GVT_NONPAY_YTD

     let #HRS-CARRYOVER-AN     = &Z.HRS_CARRYOVER
     let #HRS-EARNED-YTD-AN    = &Z.HRS_EARNED_YTD
     let #HRS-GVT-CR-REDUC-AN  = &Z.GVT_CR_REDUC_YTD
     let #HRS-TAKEN-YTD-AN     = &Z.HRS_TAKEN_YTD
     let #HRS-BOUGHT-YTD-AN    = &Z.HRS_BOUGHT_YTD
     let #HRS-ADJUST-YTD-AN    = &Z.HRS_ADJUST_YTD
     let #HRS-SOLD-YTD-AN      = &Z.HRS_SOLD_YTD
     let #GVT-FORFEIT-YTD-AN   = &Z.GVT_FORFEIT_YTD
     LET #GVT_NONPAY_YTD_AN    = &Z.GVT_NONPAY_YTD

     let $GVT-ERN-ACCR-CLASS-an =   &Z.GVT_ERN_ACCR_CLASS

FROM PS_GVT_ACCR_SUMM Z
  WHERE Z.GVT_EARN_TYPE = 'AN'
  AND Z.EMPLID   = $EMPLID
  AND Z.EMPL_RCD = #Empl_Rcd
  AND Z.EFFDT = (
    SELECT MAX(Z1.EFFDT)
    FROM PS_GVT_ACCR_SUMM Z1
    WHERE Z1.EMPLID = Z.EMPLID
    AND Z1.EMPL_RCD = Z.EMPL_RCD
    AND Z1.GVT_EARN_TYPE = Z.GVT_EARN_TYPE)


END-SELECT

   !Use the following for number 10
    print #HRS-GVT-CR-REDUC-AN    (28,24)   !edit 999.99

 !Use the following for number 11
  print #HRS-TAKEN-YTD-AN    (30,23)   edit 999.99


 !Use the following for number 9  



    let #GVT-hrs-bal-an = #HRS-CARRYOVER-AN + #HRS-EARNED-YTD-AN

    print #HRS-CARRYOVER-AN  (22,23)     edit 999.99
    print #HRS-EARNED-YTD-AN (24,23)     edit 999.99
    print #GVT-hrs-bal-an    (27,23)     edit 999.99

  !USE FOR NUMBER 12
     let #hours12-bal-an =
       #HRS-CARRYOVER-AN
     + #HRS-EARNED-YTD-AN
     - #HRS-TAKEN-YTD-AN
     + #HRS-BOUGHT-YTD-AN
     + #HRS-ADJUST-YTD-AN
     - #HRS-SOLD-YTD-AN - #GVT-FORFEIT-YTD-AN
   !let #hours12-bal-an =  #GVT-hrs-bal-an -  #HRS-GVT-CR-REDUC-AN -  #HRS-TAKEN-YTD-AN

   print  #hours12-bal-an   (32,23)




END-PROCEDURE  CARRYOVER-7AN

!***********************************************************************
begin-procedure CARRYOVER-7SI
!***********************************************************************


begin-select On-Error=SQL-Error

b.HRS_CARRYOVER     &b.HRS_CARRYOVER
b.HRS_EARNED_YTD    &b.HRS_EARNED_YTD
b.GVT_CR_REDUC_YTD  &b.GVT_CR_REDUC_YTD
b.HRS_TAKEN_YTD     &b.HRS_TAKEN_YTD
b.HRS_BOUGHT_YTD    &b.HRS_BOUGHT_YTD
b.HRS_ADJUST_YTD    &b.HRS_ADJUST_YTD
b.HRS_SOLD_YTD      &b.HRS_SOLD_YTD
b.GVT_FORFEIT_YTD   &b.GVT_FORFEIT_YTD
b.GVT_ERN_ACCR_CLASS &b.GVT_ERN_ACCR_CLASS
b.GVT_NONPAY_YTD     &b.GVT_NONPAY_YTD


     let #HRS-CARRYOVER-SI     = &b.HRS_CARRYOVER
     let #HRS-EARNED-YTD-SI    = &b.HRS_EARNED_YTD
     let #HRS-GVT-CR-REDUC-SI  = &b.GVT_CR_REDUC_YTD
     let #HRS-TAKEN-YTD-SI     = &b.HRS_TAKEN_YTD
     let #HRS-BOUGHT-YTD-SI    = &b.HRS_BOUGHT_YTD
     let #HRS-ADJUST-YTD-SI    = &b.HRS_ADJUST_YTD
     let #HRS-SOLD-YTD-SI      = &b.HRS_SOLD_YTD
     let #GVT-FORFEIT-YTD-SI   = &b.GVT_FORFEIT_YTD
     LET #GVT_NONPAY_YTD_si    = &b.GVT_NONPAY_YTD
     let $GVT-ERN-ACCR-CLASS-SI  = &b.GVT_ERN_ACCR_CLASS

  FROM PS_GVT_ACCR_SUMM b
  WHERE b.GVT_EARN_TYPE = 'SI'
  AND b.EMPLID   = $EMPLID
  AND b.EMPL_RCD = #Empl_Rcd
  AND b.EFFDT = (
   SELECT MAX(B1.EFFDT)
   FROM PS_GVT_ACCR_SUMM B1
   WHERE B1.EMPLID = b.EMPLID
   AND B1.EMPL_RCD = b.EMPL_RCD
   AND B1.GVT_EARN_TYPE = b.GVT_EARN_TYPE)


END-SELECT

   !Use the following for number 10
    print #HRS-GVT-CR-REDUC-SI    (28,30)   !edit 999.99


   !Use the following for number 11
    print #HRS-TAKEN-YTD-SI    (30,29)     EDIT 999.99



  !USE FOR NUMBER 9 Total

   LET #gvt-hrs-tot-si =   #HRS-CARRYOVER-SI + #HRS-EARNED-YTD-SI
   print #GVT-hrs-tot-si     (27,29)    edit 999.99


   print #HRS-CARRYOVER-SI  (22,29)      edit 999.99
   print #HRS-EARNED-YTD-SI (24,29)      edit 999.99

  !Use the following for number 12   Balance

   let #hours12-bal-si = #HRS-CARRYOVER-SI
     + #HRS-EARNED-YTD-SI - #HRS-TAKEN-YTD-SI
     + #HRS-BOUGHT-YTD-SI + #HRS-ADJUST-YTD-SI
     - #HRS-SOLD-YTD-SI - #GVT-FORFEIT-YTD-SI


   print  #hours12-bal-si   (32,29)




END-PROCEDURE  CARRYOVER-7SI

!***********************************************************************
begin-procedure CARRYOVER-7RE
!***********************************************************************

begin-select On-Error=SQL-Error

c.HRS_CARRYOVER     &c.HRS_CARRYOVER
c.HRS_EARNED_YTD    &c.HRS_EARNED_YTD
c.GVT_CR_REDUC_YTD  &c.GVT_CR_REDUC_YTD
c.HRS_TAKEN_YTD     &c.HRS_TAKEN_YTD
c.HRS_BOUGHT_YTD    &c.HRS_BOUGHT_YTD
c.HRS_ADJUST_YTD    &c.HRS_ADJUST_YTD
c.HRS_SOLD_YTD      &c.HRS_SOLD_YTD
c.GVT_R_HRS_1       &c.GVT_R_HRS_1
c.GVT_R_HRS_TAK_1   &c.GVT_R_HRS_TAK_1
c.GVT_R_HRS_2       &c.GVT_R_HRS_2
c.GVT_R_HRS_TAK_2   &c.GVT_R_HRS_TAK_2
c.GVT_R_HRS_3       &c.GVT_R_HRS_3
c.GVT_R_HRS_TAK_3   &c.GVT_R_HRS_TAK_3
c.GVT_NONPAY_YTD    &c.GVT_NONPAY_YTD

c.GVT_ERN_ACCR_CLASS &c.GVT_ERN_ACCR_CLASS


     let #HRS-CARRYOVER-RE         = &c.HRS_CARRYOVER
     let #HRS-EARNED-YTD-RE        = &c.HRS_EARNED_YTD
     let #HRS-GVT-CR-REDUC-RE      = &c.GVT_CR_REDUC_YTD
     let #HRS-TAKEN-YTD-RE         = &c.HRS_TAKEN_YTD
     let #HRS_BOUGHT_YTD-RE        = &c.HRS_BOUGHT_YTD
     let #HRS_ADJUST_YTD-RE        = &c.HRS_ADJUST_YTD
     let #HRS_SOLD_YTD             = &c.HRS_SOLD_YTD
     let #GVT_R_HRS_1              = &c.GVT_R_HRS_1
     let #GVT_R_HRS_TAK_1          = &c.GVT_R_HRS_TAK_1
     let #GVT_R_HRS_2              = &c.GVT_R_HRS_2
     let #GVT_R_HRS_TAK_2          = &c.GVT_R_HRS_TAK_2
     let #GVT_R_HRS_3              = &c.GVT_R_HRS_3
     let #GVT_R_HRS_TAK_3          = &c.GVT_R_HRS_TAK_3
     let #GVT_NONPAY_YTD_RE           = &c.GVT_NONPAY_YTD
     let $GVT-ERN-ACCR-CLASS-re    = &c.GVT_ERN_ACCR_CLASS

  FROM PS_GVT_ACCR_SUMM c
  WHERE c.GVT_EARN_TYPE = 'RE'
  AND c.EMPLID   = $EMPLID
  AND c.EMPL_RCD = #Empl_Rcd
  AND c.EFFDT = (
    SELECT MAX(c1.EFFDT)
    FROM PS_GVT_ACCR_SUMM c1
    WHERE c1.EMPLID = c.EMPLID
    AND c1.EMPL_RCD = c.EMPL_RCD
    AND c1.GVT_EARN_TYPE = c.GVT_EARN_TYPE)


END-SELECT

   !Use the following for number 8

    do Convert-To-DTU-Date($pay_end_dt, $carryover_date)

    !now pass dtu_date to the parsing routine
   do dtu-parse-date($carryover_date, #carryover_yr, #carryover_mo, #carryover_da)


    print  #carryover_mo   (23,11)    edit 99
    print  #carryover_da   (23,15)    edit 99

    show 'carryover year for 8'
    show #carryover_yr

     print #carryover_yr    (23,18)    edit 9999



    let  #print-8-rest-taken = #HRS-EARNED-YTD-RE + #GVT_R_HRS_1 + #GVT_R_HRS_2 + #GVT_R_HRS_3
    print #print-8-rest-taken  (24,35)

   !Use the following for number 9

    LET #gvt-hrs-tot-re =   #HRS-CARRYOVER-RE + #HRS-EARNED-YTD-RE
    print #GVT-hrs-tot-re     (27,35)
    print #HRS-CARRYOVER-re   (22,35)

   !Use the following for number 10
    print #HRS-GVT-CR-REDUC-RE    (28,35)  !edit 99

   !Use the following for number 11
    let #tot-taken-print-11  =  (#HRS-TAKEN-YTD-RE +  #GVT_R_HRS_TAK_1) ! +  #GVT_R_HRS_TAK_2 +  #GVT_R_HRS_TAK_3
    print #tot-taken-print-11    (30,35)

    !USE FOR NUMBER 12
     let #hours12-bal-re =
       #HRS-CARRYOVER-re
     + #HRS-EARNED-YTD-re
     - #HRS-TAKEN-YTD-re
     + #HRS-BOUGHT-YTD-re
     + #HRS-ADJUST-YTD-re
     - #HRS-SOLD-YTD-re - #GVT-FORFEIT-YTD-re
   !let #hours12-bal-an =  #GVT-hrs-bal-an -  #HRS-GVT-CR-REDUC-AN -  #HRS-TAKEN-YTD-AN

   print  #hours12-bal-re   (32,35)
  
END-PROCEDURE  CARRYOVER-7RE

!***********************************************************************
begin-procedure RESTRCN-90DAY
!***********************************************************************

begin-select On-Error=SQL-Error

A8.FULL_PART_TIME    &A8.FULL_PART_TIME
A8.GVT_PAR_NTE_DATE  &A8.GVT_PAR_NTE_DATE

        let $full_pt_time    = &A8.FULL_PART_TIME
        let $par_nte_date    = &A8.GVT_PAR_NTE_DATE
        do check8-90-days

  FROM PS_GVT_JOB A8
  WHERE A8.EMPLID = $EMPLID
  AND A8.EMPL_RCD = #Empl_Rcd
  AND A8.EFFDT = (
    SELECT MAX(B18.EFFDT)
    FROM PS_GVT_JOB B18
    WHERE B18.EMPLID = A8.EMPLID
    AND B18.EMPL_RCD = A8.EMPL_RCD
    AND A8.EFFSEQ = B18.EFFSEQ
    AND A8.EFFSEQ = (
      SELECT MAX(C18.EFFSEQ)
      FROM PS_GVT_JOB C18
      WHERE B18.EMPLID = C18.EMPLID
      AND B18.EMPL_RCD = C18.EMPL_RCD
      AND B18.EFFDT = C18.EFFDT))

END-SELECT

END-PROCEDURE  RESTRCN-90DAY


!***********************************************************************
begin-procedure check8-90-days
!***********************************************************************
  let $check-90-days = 'N'
  if $full_pt_time = 'P'
     if $par_nte_date > $TERMINATION_DT
     print '90 day restriction applies ' (56,4)
     end-if
  end-if

END-PROCEDURE  check8-90-days

!***********************************************************************
begin-procedure TOTAL9
!***********************************************************************

  let #A9annual-total =    &Z.GVT_CR_REDUC_YTD   
  let #A9sick-total =      &b.GVT_CR_REDUC_YTD    
  let #A9restored-total =   &c.GVT_CR_REDUC_YTD  

END-PROCEDURE  TOTAL9


!***********************************************************************
!** variables for  10, 11, & 12 were selected in #7
begin-procedure TOTAL-LUMPSUM-13A
!** get annual payout
!***********************************************************************

  do get-annual-accr-class

begin-select On-Error=SQL-Error

U.COMPANY                          &U.COMPANY
U.PAYGROUP                         &U.PAYGROUP
U.PAY_END_DT                       &U.PAY_END_DT
U.PAGE_NUM                         &U.PAGE_NUM
U.LINE_NUM                         &U.LINE_NUM
     FROM PS_PAY_CHECK U
     WHERE U.EMPLID = $Emplid
        AND U.EMPL_RCD = #Empl_Rcd
        AND U.PAY_END_DT =
         (SELECT MAX(U1.PAY_END_DT)
          FROM PS_PAY_CHECK U1
          WHERE U1.COMPANY = U.COMPANY
          AND U1.PAYGROUP  = U.PAYGROUP
          AND U1.EMPLID    = U.EMPLID
          AND U1.EMPL_RCD  = U.EMPL_RCD)

END-SELECT

begin-select On-Error=SQL-Error

V.OTH_HRS    &V.OTH_HRS

  FROM PS_PAY_OTH_EARNS_V V

    WHERE  V.ERNCD      = $ERNCD-AN
       AND V.COMPANY    = &U.COMPANY
       AND V.PAYGROUP   = &U.PAYGROUP
       AND V.PAY_END_DT = &U.PAY_END_DT
       AND V.PAGE_NUM   = &U.PAGE_NUM
       AND V.LINE_NUM   = &U.LINE_NUM

END-SELECT
   let  #AN-OTH-HRS = &V.OTH_HRS
   print  #AN-OTH-HRS (34,23)

END-PROCEDURE  TOTAL-LUMPSUM-13A

!***********************************************************************
begin-procedure get-annual-accr-class
!** find the accrual class for the employee for Annual Leave
!***********************************************************************



begin-select On-Error=SQL-Error

ERNCD.GVT_PAY_TERM_ERNCD      &ERNCD.GVT_PAY_TERM_ERNCD
   FROM PS_GVT_ERN_ACR_CLS   ERNCD
   WHERE ERNCD.GVT_ERN_ACCR_CLASS = $GVT-ERN-ACCR-CLASS-AN

END-SELECT
  let $ERNCD-AN   =  &ERNCD.GVT_PAY_TERM_ERNCD

END-PROCEDURE  get-annual-accr-class

!***********************************************************************
begin-procedure TOTAL-LUMPSUM-13B
!** get sick payout
!***********************************************************************

  do get-annual-accr-class-s

begin-select On-Error=SQL-Error

USCK.COMPANY                        &USCK.COMPANY
USCK.PAYGROUP                       &USCK.PAYGROUP
USCK.PAY_END_DT                     &USCK.PAY_END_DT
USCK.PAGE_NUM                       &USCK.PAGE_NUM
USCK.LINE_NUM                       &USCK.LINE_NUM
     FROM PS_PAY_CHECK USCK
     WHERE USCK.EMPLID    = $Emplid
        AND USCK.EMPL_RCD = #Empl_Rcd
        AND USCK.PAY_END_DT =
         (SELECT MAX(USCK1.PAY_END_DT)
          FROM PS_PAY_CHECK USCK1
          WHERE USCK1.COMPANY = USCK.COMPANY
          AND USCK1.PAYGROUP = USCK.PAYGROUP
          AND USCK1.EMPLID = USCK.EMPLID)

END-SELECT

begin-select On-Error=SQL-Error

VSCK.OTH_HRS    &VSCK.OTH_HRS

  FROM PS_PAY_OTH_EARNS_V VSCK

    WHERE VSCK.ERNCD       = $ERNCD-SI
       AND VSCK.COMPANY    = &USCK.COMPANY
       AND VSCK.PAYGROUP   = &USCK.PAYGROUP
       AND VSCK.PAY_END_DT = &USCK.PAY_END_DT
       AND VSCK.PAGE_NUM   = &USCK.PAGE_NUM
       AND VSCK.LINE_NUM   = &USCK.LINE_NUM

END-SELECT
   let  #SI-OTH-HRS = &VSCK.OTH_HRS
   print  #SI-OTH-HRS (34,29)

END-PROCEDURE  TOTAL-LUMPSUM-13b

!***********************************************************************
begin-procedure get-annual-accr-class-s
!** find the accrual class for the employee for Sick Leave
!***********************************************************************

begin-select On-Error=SQL-Error

SCKCD.GVT_PAY_TERM_ERNCD      &SCKCD.GVT_PAY_TERM_ERNCD
   FROM PS_GVT_ERN_ACR_CLS   SCKCD
   WHERE SCKCD.GVT_ERN_ACCR_CLASS = $GVT-ERN-ACCR-CLASS-SI

END-SELECT
  let $ERNCD-SI   =  &SCKCD.GVT_PAY_TERM_ERNCD

END-PROCEDURE  get-annual-accr-class-s


!***********************************************************************
!** get restored payout
begin-procedure TOTAL-LUMPSUM-13C
!***********************************************************************

  do get-annual-accr-class-R


begin-select On-Error=SQL-Error

W.COMPANY                        &W.COMPANY
W.PAYGROUP                       &W.PAYGROUP
W.PAY_END_DT                     &W.PAY_END_DT
W.PAGE_NUM                       &W.PAGE_NUM
W.LINE_NUM                       &W.LINE_NUM
     FROM PS_PAY_CHECK W
     WHERE W.EMPLID = $Emplid
     AND W.EMPL_RCD = #Empl_Rcd
        AND W.PAY_END_DT =
         (SELECT MAX(W1.PAY_END_DT)
          FROM PS_PAY_CHECK W1
          WHERE W1.COMPANY = W.COMPANY
          AND W1.PAYGROUP  = W.PAYGROUP
          AND W1.EMPLID    = W.EMPLID
          AND W1.EMPL_RCD  = W.EMPL_RCD)

END-SELECT

begin-select On-Error=SQL-Error

T.OTH_HRS    &T.OTH_HRS

  FROM PS_PAY_OTH_EARNS_V T

    WHERE T.ERNCD          = $ERNCD-RE
       AND T.COMPANY       = &W.COMPANY
       AND T.PAYGROUP      = &W.PAYGROUP
       AND T.PAY_END_DT    = &W.PAY_END_DT
       AND T.PAGE_NUM      = &W.PAGE_NUM
       AND T.LINE_NUM      = &W.LINE_NUM

END-SELECT

   let  #RE-OTH-HRS = &T.OTH_HRS
   print  #RE-OTH-HRS (34,35)



END-PROCEDURE  TOTAL-LUMPSUM-13C

!***********************************************************************
begin-procedure get-annual-accr-class-r
!** find the accrual class for the employee for Restored Leave
!***********************************************************************

begin-select On-Error=SQL-Error

RESCD.GVT_PAY_TERM_ERNCD      &RESCD.GVT_PAY_TERM_ERNCD
   FROM PS_GVT_ERN_ACR_CLS   RESCD
   WHERE RESCD.GVT_ERN_ACCR_CLASS = $GVT-ERN-ACCR-CLASS-RE

END-SELECT
  let $ERNCD-RE   =  &RESCD.GVT_PAY_TERM_ERNCD


END-PROCEDURE  get-annual-accr-class-r

!***********************************************************************
!** total the non-paid year to date
begin-procedure total-nonpay-ytd
!***********************************************************************

  let #total16 = #GVT_NONPAY_YTD_AN + #GVT_NONPAY_YTD_SI + #GVT_NONPAY_YTD_RE
  print #total16   (48,35)


END-PROCEDURE  total-nonpay-ytd
!***********************************************************************
!** get the date of last equivalent increase
begin-procedure lei17
!***********************************************************************

begin-select On-Error=SQL-Error

LEI.LAST_INCREASE_DT      (50,23) EDIT MM/DD/YYYY
  do TOTAL-AWOP17B

FROM PS_EMPLOYMENT  LEI
WHERE LEI.EMPLID   = $EMPLID
  AND LEI.EMPL_RCD = #Empl_Rcd

END-SELECT

END-PROCEDURE  lei17


!***********************************************************************
!** get the earnings for military leave
begin-procedure TOTAL-AWOP17B
!***********************************************************************
  
begin-select On-Error=SQL-Error

awop1.GVT_NONPAY_YTD    &awop1.GVT_NONPAY_YTD


     let #GVT-NONPAY-awop-an    = &awop1.GVT_NONPAY_YTD

  FROM PS_GVT_ACCR_SUMM awop1
  WHERE awop1.GVT_EARN_TYPE = 'AN'
  AND awop1.EMPLID      = $EMPLID
  AND awop1.EMPL_RCD    = #Empl_Rcd
    AND
    awop1.EFFDT = (
    SELECT MAX(awop1a.EFFDT)
    FROM PS_GVT_ACCR_SUMM awop1a
    WHERE awop1a.EMPLID = awop1.EMPLID
    AND awop1a.EMPL_RCD = awop1.EMPL_RCD
    AND awop1a.EFFDT < &LEI.LAST_INCREASE_DT
    AND awop1a.GVT_EARN_TYPE = awop1.GVT_EARN_TYPE)


END-SELECT

  !Next get the sick ytd before the lei

begin-select On-Error=SQL-Error

awop2.GVT_NONPAY_YTD    &awop2.GVT_NONPAY_YTD


     let #GVT-NONPAY-awop-si    = &awop2.GVT_NONPAY_YTD

  FROM PS_GVT_ACCR_SUMM awop2
  WHERE awop2.GVT_EARN_TYPE = 'SI'
  AND awop2.EMPLID    = $EMPLID
  AND awop2.EMPL_RCD  = #Empl_Rcd
    AND
    awop2.EFFDT = (
    SELECT MAX(awop2a.EFFDT)
    FROM PS_GVT_ACCR_SUMM awop2a
    WHERE awop2a.EMPLID = awop2.EMPLID
    AND awop2a.EMPL_RCD = awop2.EMPL_RCD
    AND awop2a.EFFDT < &LEI.LAST_INCREASE_DT
    AND awop2a.GVT_EARN_TYPE = awop2.GVT_EARN_TYPE)


END-SELECT

  !Last get the restored ytd before the lei

begin-select On-Error=SQL-Error

awop3.GVT_NONPAY_YTD    &awop3.GVT_NONPAY_YTD

     let #GVT-NONPAY-awop-re    = &awop3.GVT_NONPAY_YTD

  FROM PS_GVT_ACCR_SUMM awop3
  WHERE awop3.GVT_EARN_TYPE = 'RE'
  AND awop3.EMPLID    = $EMPLID
  AND awop3.EMPL_RCD  = #Empl_Rcd
    AND
    awop3.EFFDT = (
    SELECT MAX(awop3a.EFFDT)
    FROM PS_GVT_ACCR_SUMM awop3a
    WHERE awop3a.EMPLID = awop3.EMPLID
    AND awop3a.EMPL_RCD = awop3.EMPL_RCD
    AND awop3a.EFFDT < &LEI.LAST_INCREASE_DT
    AND awop3a.GVT_EARN_TYPE = awop3.GVT_EARN_TYPE)

END-SELECT

  let #b17-absence-since-lei =  #total16  - #GVT-NONPAY-awop-an - #GVT-NONPAY-awop-si - #GVT-NONPAY-awop-re
  print #b17-absence-since-lei   (52,35) edit 9999.99

END-PROCEDURE  TOTAL-AWOP17B

!***********************************************************************
!** add up the earnings, if any, for military leave
begin-procedure TALLY-EARNINGS-17
!***********************************************************************

  let #b17-military = #b17-military + #A17-EARNINGS

END-PROCEDURE  TALLY-EARNINGS-17

!***********************************************************************
!** get the current balance of home leave and the 'as of' date
begin-procedure curr-home-lv-bal20
!***********************************************************************

begin-select On-Error=SQL-Error

HOM.EFFDT           &HOM.EFFDT
HOM.HRS_EARNED_YTD  &HOM.HRS_EARNED_YTD
HOM.HRS_CARRYOVER   &HOM.HRS_CARRYOVER
HOM.HRS_ADJUST_YTD  &HOM.HRS_ADJUST_YTD
HOM.HRS_TAKEN_YTD   &HOM.HRS_TAKEN_YTD

  let $ho-effdt            = &HOM.EFFDT
  let #ho-earned           = &HOM.HRS_EARNED_YTD
  let #ho-hrs-carryover    = &HOM.HRS_CARRYOVER
  let #ho-hrs-adjust       = &HOM.HRS_ADJUST_YTD
  let #ho-hrs-taken        = &HOM.HRS_TAKEN_YTD

  do 20-add-home-bal


FROM PS_GVT_ACCR_SUMM HOM
   WHERE HOM.EMPLID       = $EMPLID
    AND  HOM.EMPL_RCD     = #Empl_Rcd
    AND HOM.GVT_EARN_TYPE = 'HO'
    AND HOM.EFFDT = (
      SELECT MAX(HOM1.EFFDT)


      FROM PS_GVT_ACCR_SUMM HOM1
      WHERE HOM1.EMPLID = HOM.EMPLID
      AND HOM1.EMPL_RCD = HOM.EMPL_RCD
      AND HOM1.GVT_ERN_ACCR_CLASS = HOM.GVT_ERN_ACCR_CLASS
      AND HOM1.GVT_EARN_TYPE = HOM.GVT_EARN_TYPE)

END-SELECT

   print #20-home-leave (32,70) edit 9999.99


END-PROCEDURE  curr-home-lv-bal20

!***********************************************************************
!** add up the earnings, if any, for home leave
begin-procedure 20-add-home-bal
!***********************************************************************


  let #20-home-leave = #ho-earned + #ho-hrs-carryover + #ho-hrs-adjust - #ho-hrs-taken

END-PROCEDURE  20-add-home-bal


!***********************************************************************
!** Remark - TSP Contributions and wages for the current year
!** Determine if there was a deduction taken in the current calendar year for Plan 42
begin-procedure rmk-tsp-dollars
!***********************************************************************



begin-select On-Error=SQL-Error

A.BENEFIT_PLAN,
A.DED_YTD

  let $Benefit-Plan = &A.BENEFIT_PLAN
  let #ben-ded-ytd  = &A.DED_YTD

FROM PS_DEDUCTION_BAL A
WHERE A.EMPLID = $Emplid
AND A.PLAN_TYPE = '42'
AND A.DED_CLASS = 'B'
AND A.BALANCE_YEAR =   (SELECT MAX(B.BALANCE_YEAR) FROM PS_DEDUCTION_BAL B
                        WHERE B.EMPLID = A.EMPLID 
                              AND B.COMPANY = A.COMPANY
                             AND B.BALANCE_ID = A.BALANCE_ID)
AND A.BALANCE_PERIOD =
           (SELECT MAX(D.BALANCE_PERIOD) FROM PS_DEDUCTION_BAL D
              WHERE D.EMPLID = A.EMPLID
              AND D.COMPANY = A.COMPANY
              AND D.BALANCE_ID = A.BALANCE_ID
              AND D.DED_CLASS = A.DED_CLASS
              AND D.BALANCE_YEAR = A.BALANCE_YEAR)

END-SELECT

  print 'TSP Contributions: '  (54,2)
  print #ben-ded-ytd           (54,22)

  do find-the-earnings-code



END-PROCEDURE  rmk-tsp-dollars


!***********************************************************************
!** Remark - TSP Contributions and wages for the current year
!**
begin-procedure find-the-earnings-code
!***********************************************************************



begin-select On-Error=SQL-Error

A.ERNCD_SPCL

  let $Erncd-Spcl  =  &A.ERNCD_SPCL

FROM PS_SAVINGS_PLN_TBL A
   WHERE A.PLAN_TYPE = '42'
     AND A.BENEFIT_PLAN = $Benefit-Plan
     AND A.EFFDT = (SELECT MAX(B.EFFDT) FROM PS_SAVINGS_PLN_TBL B
                      WHERE A.PLAN_TYPE = B.PLAN_TYPE AND A.BENEFIT_PLAN = B.BENEFIT_PLAN
                     AND A.ERNCD_SPCL = B.ERNCD_SPCL)

END-SELECT

   do get-earnings-bal

END-PROCEDURE  find-the-earnings-code

!***********************************************************************
!** Remark - TSP Contributions and wages for the current year
!**
begin-procedure get-earnings-bal
!***********************************************************************



begin-select On-Error=SQL-Error

A.GRS_YTD

  let #gross-ytd = &A.GRS_YTD

FROM PS_EARNINGS_BAL A
   WHERE A.ERNCD    = $Erncd-Spcl
     AND A.EMPLID   = $Emplid
     AND A.EMPL_RCD = #Empl_Rcd
     AND A.BALANCE_YEAR = (SELECT MAX(B.BALANCE_YEAR) FROM PS_EARNINGS_BAL B
               WHERE B.EMPLID      = A.EMPLID 
                  AND B.EMPL_RCD   = A.EMPL_RCD 
                  AND B.COMPANY    = A.COMPANY
                  AND B.BALANCE_ID = A.BALANCE_ID
                  AND B.ERNCD      = A.ERNCD)
       AND A.BALANCE_PERIOD = (SELECT MAX(C.BALANCE_PERIOD)
                             FROM PS_EARNINGS_BAL C
                                  WHERE C.EMPLID = A.EMPLID
                                   AND C.EMPL_RCD = A.EMPL_RCD
                                   AND C.COMPANY = A.COMPANY
                                   AND C.BALANCE_ID = A.BALANCE_ID
                                   AND C.BALANCE_YEAR = A.BALANCE_YEAR
                                   AND C.ERNCD = A.ERNCD)

END-SELECT

     print 'Wages Subject to TSP:  '  (55,2)
     print #gross-ytd                 (55,22)

END-PROCEDURE  get-earnings-bal

!***********************************************************************
!** Remark - Medicare withholding for the current year
begin-procedure rmk-medicare-withholding
!***********************************************************************

begin-select On-Error=SQL-Error

BAL.TAX_YTD
BAL.TXGRS_YTD

     LET  #medicare-withholding   =  &BAL.TAX_YTD
     LET  #subject-to-medicare    =  &BAL.TXGRS_YTD

  FROM PS_TAX_BALANCE BAL
     WHERE BAL.EMPLID     = $Emplid
        AND BAL.TAX_CLASS = 'F'
        AND BAL.BALANCE_YEAR = (SELECT MAX(BAL1.BALANCE_YEAR) FROM PS_TAX_BALANCE BAL1
                                WHERE BAL.EMPLID = BAL1.EMPLID
                                  AND BAL.TAX_CLASS = BAL1.TAX_CLASS)
       AND BAL.BALANCE_PERIOD =(SELECT MAX(BAL2.BALANCE_PERIOD) FROM PS_TAX_BALANCE BAL2
                                WHERE BAL2.EMPLID = BAL.EMPLID 
                                  AND BAL2.TAX_CLASS = BAL.TAX_CLASS
                                  AND BAL2.BALANCE_YEAR = BAL.BALANCE_YEAR)

END-SELECT

  print 'Medicare Withholding: '       (56,2)
  print  #medicare-withholding         (56,22)
  print 'Wages Subject to Medicare: '  (57,2)
  print  #subject-to-medicare          (57,22)

 do get-oasdi

END-PROCEDURE  rmk-medicare-withholding

!***********************************************************************
!** Remark - OASDI withholding for the current year
begin-procedure get-oasdi
!***********************************************************************

begin-select On-Error=SQL-Error

OASDI.TAX_YTD
OASDI.TXGRS_YTD

     LET  #oasdi-withholding =  &OASDI.TAX_YTD
     LET  #subject-to-oasdi    =  &OASDI.TXGRS_YTD

  FROM PS_TAX_BALANCE OASDI
     WHERE OASDI.EMPLID = $Emplid
        AND OASDI.TAX_CLASS = 'D'
        AND OASDI.BALANCE_YEAR = (SELECT MAX(OASDI1.BALANCE_YEAR) FROM PS_TAX_BALANCE OASDI1
                                WHERE OASDI.EMPLID = OASDI1.EMPLID AND OASDI.TAX_CLASS = OASDI1.TAX_CLASS)
       AND OASDI.BALANCE_PERIOD =(SELECT MAX(OASDI2.BALANCE_PERIOD) FROM PS_TAX_BALANCE OASDI2
                                WHERE OASDI2.EMPLID = OASDI.EMPLID AND OASDI2.TAX_CLASS = OASDI.TAX_CLASS
                                AND OASDI2.BALANCE_YEAR = OASDI.BALANCE_YEAR)


END-SELECT

  print 'OASDI Withholding: '      (58,2)
  print  #oasdi-withholding        (58,22)
  print 'Wages Subject to OASDI: ' (59,2)
  print  #subject-to-oasdi         (59,22)



END-PROCEDURE  get-oasdi

!************************************************************
begin-procedure benefits-remark
!************************************************************


Begin-SELECT

BENVW.BENEFIT_PLAN                 &BENVW.BENEFIT_PLAN
 do prt-benefits-remark

FROM PS_BENEFITS_VW BENVW
   WHERE BENVW.EMPLID = $EMPLID
   AND BENVW.EMPL_RCD = #Empl_Rcd
   AND BENVW.PAY_END_DT >=
  (SELECT MAX(BENVW1.PAY_END_DT)
    FROM PS_BENEFITS_VW BENVW1
    WHERE BENVW1.EMPLID = BENVW.EMPLID
    AND BENVW1.EMPL_RCD = BENVW.EMPL_RCD)

end-select

  print 'Health Benefit Enrollment Codes: '    (60,2)


end-procedure benefits-remark

!************************************************************
begin-procedure prt-benefits-remark
!************************************************************

  PRINT &BENVW.BENEFIT_PLAN  (+2,13)


END-PROCEDURE  prt-benefits-remark
!************************************************************
begin-procedure Print-Form
!************************************************************



  Graphic () FONT 4 12
  position (1,1)
  Print 'RECORD OF LEAVE DATA' (+1,28) BOLD
  !NEED 56 LENGTH
  Graphic (+2,1,76) BOX 67 !69=LENGTH !76,72 IS MAX LENGTH; 125,76 IS MAX WIDTH



  Graphic () font 4 7
  Print '1. Name (Last,First, Middle)' (,2)
  Print '  2. Social Security Number'    (,31)
  Print '3. (For agency use)'          (,55)
  Graphic (0,1,30)  box 3
  Graphic (,31,23)  box 3
  Graphic (,54,23)  box 3

  Graphic (+3,64,2) box 1
  Graphic (0,72,2)  box 1
  Print '4. Date and Nature of Separation' (,2)
  Print '  5.' (,31)
  Print 'A. Subject to 5 U.S.C. 6304(B) (45 day leave ceiling)' (,33)
  Print 'Yes' (,67)
  Print 'No'  (,75)

  Graphic (+0,1,30) box 5
  Graphic (,31,46)  box 5

  Graphic (,33,44) horz-line 5
  Graphic (,54,4)   vert-line 5

  Print 'B. Last Date Subject to 5 U.S.C. 6304(B)' (+1,33)
  Print 'C. Annual Leave Balance as of That Date'  (,55)

  Print '(Hours)'                                  (+1,58)

  Graphic (+3,1,76) box 4
  Graphic (,12,4)   box 2
  Print '6.' (,2)
  Print 'Total Service for'       (,3)
  Print 'More than 15 Years'      (,17)

  Print 'Leave (as of Date)'      (+1,3)

  Print 'of Separation)'          (+1,3)
  Graphic (,12,4) box 2

  Print 'Less Than 15 years (show)' (+1,17)
  Print 'Years'                     (,33)
  Print 'Months'                    (,50)
  Print 'Days'                      (,68)

  Graphic (+1,1,39)  box 37
  Graphic (,40,37) box 37

  Graphic () font 4 10
  Print 'SUMMARY OF ANNUAL AND SICK LEAVE' (+1,6) bold
  Print 'SUMMARY OF HOME LEAVE'            (,48)   bold

  Graphic () FONT 4 7

  Graphic (+2,1,39) box 4
  Graphic (,40,37)  box 5
  Graphic (,10,4)  box 1
  Graphic (,14,4)  box 1
  Graphic (,18,4)  box 1
  Graphic (,22,18) box 1
  Graphic (,65,4)  box 1
  Graphic (,69,4)  box 1
  Graphic (,73,4)  box 1
    Print '7.'     (,2)
        Print 'Carryover Bal-' (,3)
    Print 'MO.'   (,11)
        Print 'DAY'   (,+1)
        Print 'YEAR'  (,+1)
        Print 'HOURS' (,29)
        Print '18.'   (,41)
        Print 'Basic Service Period of 24' (,43)
        Print 'MO.'   (,66)
        Print 'DAY'   (,70)
        Print 'YEAR'  (,74)

  Graphic (+1,10,4) box 3
  Graphic (,14,4)   box 3
  Graphic (,18,4)   box 3
  Graphic (,22,6)   box 1
  Graphic (,28,6)   box 1
  Graphic (,34,6)   box 1
  Graphic (,65,4)  box 1
  Graphic (,69,4)  box 1
  Graphic (,73,4)  box 1
  Print   'Annual'  (,23)
  Print   'Sick'    (,30)
  Print   'Restored' (,35)
  Print   'ance From' (,3)
  Print   'Months of Continuous' (,43)
  Print   'Date Started'         (,57)

  Print 'Prior Leave' (+1,3)
  Graphic (,22,6)   box 2
  Graphic (,28,6)   box 2
  Graphic (,34,6)   box 2

  Print 'Service Abroad:' (,43)



  Graphic (,65,4)  box 1
  Graphic (,69,4)  box 1
  Graphic (,73,4)  box 1
  Print 'Date Completed' (,57)

    Print 'Year Ending' (+1,3)

  Graphic (+1,10,4)  box 1
  Graphic (,14,4)  box 1
  Graphic (,18,4)  box 1
  Print '8.' (,2)
  Print 'Current Leave' (,3)
  Graphic (,22,6)   box 13
  Graphic (,28,6)   box 13
  Graphic (,34,6)   box 13

  Graphic (+1,40,37)  box 5
  Print 'Year Accrual Through Pay Period Ending' (,3)
  Print '19.'        (,41)
  Print 'Current 12 Months Accrual Period' (,43)


  Graphic (,40,37)  box 5
  Graphic (,69,8)  box 13
  Graphic (,65,4)  box 1
  Graphic (,69,4)  box 1
  Graphic (,73,4)  box 1
        Print 'MO.'   (,66)
        Print 'DAY'   (,70)
        Print 'YEAR'  (,74)

  Print '(if 90 day restriction applicable,'(+1,3)
  Print 'Began on'  (,43)
  Graphic (,65,4)  box 1
  Graphic (,69,4)  box 1
  Graphic (,73,4)  box 1

  Print 'explain in remarks)' (+1,3)

  Graphic (+1,1,39) box 1
  Print '9.'       (,2)
  Print 'Total'    (,3)
  Print 'Hours Absent Without Pay Since' (,43)

  Graphic (+1,1,39) box 1
  Print ' 10.'     (,1)
  Print 'Reduction in Credits, If Any (current year)' (,3)
  Print 'That Date' (,43)
  Graphic () font 4 10
  !let $xxx = chr(151)  !155  -- next 6 lines prints the arrow
  !let $yyy = chr(0173)
  !let $zzz = chr(155) !0173
  !print $xxx (,48,14) fill
  !print $xxx (,67)
  !print $zzz (,68)

  Print  '------------------------------------>' (,48)

  Graphic () font 4 7

  Graphic (+1,1,39) box 3
  Graphic (,40,37)  box 5
  Graphic (,65,4)  box 1
  Graphic (,69,4)  box 1
  Graphic (,73,4)  box 1
        Print 'MO.'   (,66)
        Print 'DAY'   (,70)
        Print 'YEAR'  (,74)
  Print ' 11.'     (,1)
  Print 'Total Leave Taken, Current Year Through' (,3)
  Print '20.' (,41)
  Print 'Current Balance (or accrual) as of' (,43)

  Print 'Date of Separation'                 (+1,3)
  Graphic (,65,4)  box 1
  Graphic (,69,4)  box 1
  Graphic (,73,4)  box 1

  Graphic (+2,1,39) box 1
  Print ' 12.'    (,1)
  Print 'Balance' (,3)
  Print 'Number of Hours' (,43)
  Graphic () font 4 10
  !print $xxx (,51,12) fill  !-- next 3 lines prints the arrow
  !print $xxx (,67)
  !print $zzz (,68)
  Print  '------------------------------>' (,51)
  Graphic () font 4 7

  Graphic (+1,1,39) box 3
  Print ' 13.'    (,1)
  Graphic (,28,6) box 3 0 30
  Print 'Total Hours Paid in Lump Sum' (,3)

  Graphic (+1,40,37) box 3
  Print '21.' (,41)
  Print 'Twelve Months Accrual Date as of Date Separation' (,43)

  Print '                                      ' (+1,3)
  Print 'Number of Hours' (,43)

  Graphic () font 4 10
  !print $xxx (,51,12) fill  !-- next 3 lines prints the arrow
  !print $xxx (,67)
  !print $zzz (,68)
  Print  '------------------------------>' (,51)
  Graphic () font 4 7

  Graphic (+1,1,39) box 1

  Print ' 14.' (,1)
  Print 'Salary Rate(s) Per hour:' (,3)

  Graphic (+1,1,39) box 9
  Graphic (,40,37)  box 10
  Print ' 15.' (,1)
  Print '22.'  (,41)
  Print 'Dates Leave' (,43)
  Graphic (,22,18)   box 1
  Graphic (,22,4)    box 9
  Graphic (,26,4)    box 9
  Graphic (,30,4)    box 9
  Graphic (,34,6)    box 9
  Graphic (,53,12) box 10
  Graphic (,65,12) box 10
  Print '   MO.'   (,22)
  Print '   DAY'   (,26)
  Print '  YEAR'  (,30)
  Print ' HOURS' (,35)
  Print 'FROM' (,57)
  Print 'TO'   (,70)

  Graphic (+1,19,21) box 1
  Graphic (,53,24)   box 1
  Graphic (,53,4)    box 9
  Graphic (,57,4)    box 9
  Graphic (,61,4)    box 9
  Graphic (,65,4)    box 9
  Graphic (,69,4)    box 9
  Graphic (,73,4)    box 9
  Print ' Lump Sum Leave Dates (if part-time' (,1)
  Print ' From' (,19)
  Print '   MO.'   (,53)
  Print '   DAY'   (,57)
  Print '  YEAR'   (,61)
  Print '   MO.'   (,65)
  Print '   DAY'   (,69)
  Print '  YEAR'   (,73)
  Print 'Used Prior 24' (,43)

  Graphic (+1,19,21) box 1
  Graphic (,53,24) box 2
  Print ' tour, explain in Remarks)' (,1)
  Print 'Months' (,43)
  Print ' Thru' (,19)

  Print ' a.'   (+1,1)
  Print 'Restored' (,3)
  Print ' From' (,19)
  Graphic (,19,21) box 1

  Print ' Thru' (+1,19)
  Graphic (,19,21) box 1
  Graphic (,53,24) box 2

  Print ' b.'   (+1,1)
  Print 'Annual Leave Above Ceiling' (,3)
  Print ' From' (,19)
  Graphic (,19,21) box 1

  Print ' Thru' (+1,19)
  Graphic (,19,21) box 1
  Graphic (,53,24) box 2

  Print ' c.'   (+1,1)
  Print 'Annual Leave Within Ceiling' (,3)
  Print ' From' (,19)
  Graphic (,19,21) box 1

  Print ' Thru' (+1,19)
  Graphic (,19,21) box 1
  Graphic (,53,24) box 2

  Graphic (+1,1,39)  box 1
  Graphic () font 4 8
  Print 'ABSENCE WITHOUT PAY' (,14) BOLD
  Print 'MILITARY LEAVE' (+1,42) BOLD
  Graphic () font 4 7

  Graphic (,1,39) box 2
  Graphic (,34,6) box 6
  Graphic (,53,12) box 6
  Graphic (,65,12) box 6
  Print 'FROM' (,57)
  Print 'TO'   (,70)
  Print ' 16.' (,1)
  Print 'During Leave Year in Which Separated' (,3)
  Print ' Hours' (,35)

  Graphic (+1,34,6) box 1
  Graphic (,53,4)    box 5
  Graphic (,57,4)    box 5
  Graphic (,61,4)    box 5
  Graphic (,65,4)    box 5
  Graphic (,69,4)    box 5
  Graphic (,73,4)    box 5
  Print '23.'      (,41)
  Print 'During  Current' (,43)
  Print '   MO.'   (,53)
  Print '   DAY'   (,57)
  Print '  YEAR'   (,61)
  Print '   MO.'   (,65)
  Print '   DAY'   (,69)
  Print '  YEAR'   (,73)

  Print 'Calendar Year'   (+1,43)
  Graphic (,53,24) box 2

  !Graphic (,22,4)    box 2
  !Graphic (,26,4)    box 2
  !Graphic (,30,4)    box 2
  !Graphic (,34,6)    box 2 0 30
  !Graphic (,40,2)   vert-line   --------
  !Print '   MO.'   (,22)
  !Print '   DAY'   (,26)
  !Print '  YEAR'   (,30)
  Print ' 17.'     (,1)
  Print 'A.'       (,3)
  Print ' Date of Last Equivalent Increase' (,4)
  !Print 'A.'      (,41)

  Graphic () font 4 6
  Print ' A. Regular-Active Duty or Training' (+1,40)
  Graphic () font 4 7

  Graphic (,3,37) horz-line  5
  Graphic (,43,33) horz-line 5
  Graphic (,22,12) box 1


  Graphic (+1,34,6) box 1
  Print 'B.'       (,3)
  Print ' Total AWOP Hours since Last Equivalent Increase (except during)' (,4)
  Print ' Hours' (,35)
  Print 'B.' (,43)
  Print 'Special --' (,44)

  Print ' military service and while in receipt of OWCP payments)' (+1,4)
  Print 'Civil Disturbance' (,44)

  Print ' 24.'              (+1,1)
  Print 'Remarks (include shore leave information, if applicable):' (,3)

  Graphic (+14,1,30) box 4
  Graphic (,31,38)   box 4
  Graphic (,69,8)    box 4
  Print ' 25.'    (,1)
  Print 'Certified Correct By: (Signature)' (,3)
  Print '  26. Title, Agency, Address, Telephone Number'    (,31)
  Print '  27. Date'       (,69)

  Graphic () font 4 6
  Print '1150-113'   (+4,1)
  Print 'STANDARD FORM 1150' (,62) BOLD
  Print '(REV. 12-77)'    (,72)

  Print 'CIVIL SERVICE COMMISSION' (+1,62)
  Print 'FPM SUPP. 296-31 AND 990-2' (+1,62) BOLD

  next-listing need = 60

END-procedure

!*******************************************************************
#include 'reset.sqc'            ! Reset Printer procedure
#include 'datemath.sqc'
#include 'number.sqc'           ! Procedures: Init-Number
#Include 'stdapi.sqc'           ! Update Process API
#Include 'prcsapi.sqc'           ! Get Run Control parms

