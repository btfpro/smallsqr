!***************************************************
!  TAX016:  Default Tax Data Audit Report (Canada) *
!***************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:06:15:54                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup32.sqc'                 ! Printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main

  display 'Employees Processed: ' noline
  display #Employees 9,999

  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'TAX016CN'to $ReportID
  move 'CAN'     TO $Country

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.
  move $Tax016cn_ReportTitle to $ReportTitle

  if $Prcs_Process_Instance = ''
    do Get-From-Thru-Dates
  else
    do Select-Parameters
    move $RC_PAY.FromDate to $FromDate
    move $RC_PAY.ThruDate to $ThruDate ! Kept fot Stdhtr08.sqc
    move $RC_PAY.ThruDate to $AsOfDate ! Added because the query uses $AsOfDate
  end-if
end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from TAX016CN and PAY1 program ids
   do Init_Report_Translation($ReportID,$Language_Cd)
   do Append_Report_Translation('PAY1')

   do Get_Field_Information ('TAX016CN', 'REPORT_TITLE', $Tax016cn_ReportTitle, #dummy_width)
   do Get_Field_Information ('TAX016CN', 'HIRE_DT',      $Tax016cn_Hire_Dt,     #dummy_width)
   do Get_Field_Information ('TAX016CN', 'PRV',          $Tax016cn_Prv,         #dummy_width)
   do Get_Field_Information ('TAX016CN', 'EXCPN',        $Tax016cn_Excpn,       #dummy_width)
   do Get_Field_Information ('TAX016CN', 'NET_CLMAMT',   $Tax016cn_Net_ClmAmt,  #dummy_width)
   do Get_Field_Information ('TAX016CN', 'EXCPN_TXT',    $Tax016cn_Excpn_Txt,   #dummy_width)
   do Get_Field_Information ('TAX016CN', 'NET_CLAIM',    $Tax016cn_Net_Claim,   #dummy_width)
   do Get_Field_Information ('TAX016CN', 'FED_AMOUNT',   $Tax016cn_Fed_Amount,  #dummy_width)

   do Get_Field_Information ('PAY1',     'PAYGRP',       $Pay1_PayGrp,          #dummy_width)
   do Get_Field_Information ('PAY1',     'EMP_ID',       $Pay1_Emp_Id,          #dummy_width)
   do Get_Field_Information ('PAY1',     'NAME',         $Pay1_Name,            #dummy_width)

end-procedure

begin-heading 8

  #include 'stdhtr11.sqc'
  if $PayGroup <> $priorPayGroup
    do Get-PayGroup-Data
    move $PayGroup to $priorPayGroup
  end-if
  print $Pay1_PayGrp         (5,1)
  print $PayGroup            (0,13)
  print $PayGroupName        (0,17)
  print $Pay1_Emp_Id         (+2,3)
  print $Pay1_Name           (0,17)
  print $Tax016cn_Hire_Dt    (0,51)
  print $Tax016cn_Net_Claim  (0,62)
  print $Tax016cn_Excpn      (0,122)

  print $Tax016cn_Fed_Amount (+1,62)
  print $Tax016cn_Prv        (0,86)
  print $Tax016cn_Net_ClmAmt (0,109)

end-heading

Begin-Procedure Process-Main

Begin-SELECT

A.COMPANY
B.PAYGROUP
A.EMPLID
A.EFFDT
A.CIT_NET_CLAIM_AMT
A.QIT_NET_CLAIM_AMT
D.STATE
F.SETID

  if &A.Emplid <> $Emplid
      add 1 to #Employees
      move &A.Emplid to $Emplid
  end-if

  if &A.Company <> $Company
      or &B.Paygroup <> $Paygroup

      if Rtrim($Company,' ') <> ''
            and RTRIM($PAYGROUP, ' ') <> ''

          NEW-PAGE
      end-if

      move &A.Company to $Company
      move &B.Paygroup to $Paygroup
  end-if

  move &A.Emplid            to $Emplid
  move &A.Effdt             to $Effdt
  move &A.CIT_Net_Claim_Amt to #CIT_Net_Claim_Amt
  move &D.State             to $State

  do Get-State-Tax-Data     ! Get Province Description

  move &A.QIT_Net_Claim_Amt to #QIT_Net_Claim_Amt
  move &F.setid to $setid

  do Get-Prov-Tax-Data

  do Print-Employee-Data

FROM PS_CAN_TAX_DATA A,
     PS_JOB B,
     PS_LOCATION_TBL D,
     PS_REC_GROUP_REC E,
     PS_SET_CNTRL_GROUP F

WHERE A.LAST_ACTION = 'D'
  AND A.EFFDT   >= $FromDate
  AND A.EFFDT   <= $AsOfDate
  AND B.EMPLID   = A.EMPLID
  AND B.EFFDT    = A.EFFDT
  AND E.RECNAME = 'LOCATION_TBL' AND F.REC_GROUP_ID = E.REC_GROUP_ID
  AND F.SETCNTRLVALUE = B.BUSINESS_UNIT
  AND D.LOCATION = B.LOCATION AND D.SETID = F.SETID
  AND D.EFFDT =
      (SELECT MAX(D1.EFFDT)
       FROM   PS_LOCATION_TBL D1
       WHERE  D1.LOCATION = D.LOCATION
         AND  D1.EFFDT   <= A.EFFDT)
  AND D.COUNTRY  = $Country

ORDER BY A.COMPANY,
         B.PAYGROUP,
         A.EMPLID,
         A.EFFDT,
         D.STATE

End-SELECT

End-Procedure


Begin-Procedure Get-Prov-Tax-Data

  move 0 to #TCP

Begin-SELECT
G.CIT_NET_CLAIM_AMT

  move &G.CIT_Net_Claim_Amt to #TCP

FROM PS_CAN_TAX_PRVDATA G

WHERE G.EMPLID   = &A.EMPLID
  AND G.COMPANY  = &A.COMPANY
  AND G.EFFDT    = &A.EFFDT

End-SELECT

End-Procedure


Begin-Procedure Print-Employee-Data

  print &A.Emplid                      (+1,3)    on-break level=1 skiplines=1

  do Get-Employee-Data
  let $Location = rtrim(&X.Location, ' ')
  do Get-Location-Name
  do Get-Paygroup-Data

  print &Y.Name                        (0,17,30)
  do Format-DateTime($Effdt, $Effdt,{DEFDATE},'','')
  print $Effdt                         (0,50)
  do Format-Number (#CIT_Net_Claim_Amt, $CIT_Net_Claim_Amt, '9999999.00')
  print $CIT_Net_Claim_Amt             (0,65)
  print $Descr                         (0,81)

  if $LocationState = 'QC'
    do Format-Number (#QIT_Net_Claim_Amt, $QIT_Net_Claim_Amt, '9999999.00')
    print $QIT_Net_Claim_Amt             (0,106)
  else
    do Format-Number (#TCP, $TCP, '9999999.00')
    print $TCP                           (0,106)
  end-if


  if &ZZ.Country <> &PGT.Country

      print $Tax016cn_Excpn_Txt (0,122) on-break level=2
  end-if

end-procedure

begin-procedure Get-Employee-Data

begin-SELECT LOOPS=1

X.DEPTID, X.LOCATION, Y.NAME, X.EFFDT, X.EFFSEQ

FROM  PS_JOB X, PS_PERSON_NAME Y

WHERE Y.EMPLID = X.EMPLID
  AND X.EMPLID = $Emplid
  AND X.EFFDT <= $EffDt

ORDER BY X.EFFDT DESC, X.EFFSEQ DESC

end-SELECT

end-procedure

begin-procedure Get-State-Tax-Data

  if $AsOfDate = ''  !if no As-Of-Date is specified, default to Today
    move $AsOfToday to $AsOfDate
  end-if

begin-SELECT
PS_STATE_NAMES_TBL.DESCR
FROM  PS_STATE_NAMES_TBL
WHERE COUNTRY = $Country
  AND STATE   = $State
end-SELECT

  let $Descr = RTRIM(&PS_State_Names_Tbl.Descr, ' ')

!---------------------------------------------------------------!
! Only retrieve data from the related language table if         !
! the operator language is not the same to the installation     !
! language or $curr_language_cd  is different from $language_cd !
!---------------------------------------------------------------!

  if $curr_language_cd <> $Psoptions_Language_Cd
     do Get-Rel-Lang-State
  end-if

end-procedure


begin-procedure Get-Rel-Lang-State

begin-SELECT
STL.DESCR

    if rtrim(&STL.Descr, ' ') <> ''
       let $Descr = RTRIM(&STL.Descr, ' ')
    end-if

FROM  PS_STATE_NAMES_LNG STL
WHERE STL.COUNTRY     = $Country
  AND STL.LANGUAGE_CD = $Curr_language_cd
  AND STL.STATE       = $State

end-SELECT

end-procedure

#include 'getcodta.sqc'  ! Get-Company-Data procedure
#include 'getpgdta.sqc'  ! Get-Paygroup-Data procedure
#include 'getlocnm.sqc'  ! Get-Location-Name procedure
#include 'readxlat.sqc'  ! Read-Translate-Table procedure
#include 'curdttim.sqc'  ! Get-Current-DateTime procedure
#Include 'datetime.sqc'  ! Routines for date and time formatting
#Include 'number.sqc'    ! Routines to format numbers
#include 'getftdts.sqc'  ! Routines to prompt for From - To Dates
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrctl2.sqc'  !Get-Run-Control procedure
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
