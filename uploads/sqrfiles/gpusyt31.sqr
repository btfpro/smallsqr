!**********************************************************************!
!  gpusyt31:  State W-2 Tax Totals Report                              !
!                                                                      !
!               Confidentiality Information:                           !
!                                                                      !
!                                                                      !
! This module contains confidential and proprietary information        !
! of Oracle; it is not to be copied, reproduced, or transmitted        !
! in any form, by any means, in whole or in part, nor is it to         !
! be used for any purpose other than that for which it is              !
! expressly provided under the applicable license agreement.           !
!                                                                      !
! Copyright (C) 2006 Oracle. All Rights Reserved.                      !
!                                                                      !
!**********************************************************************!
!                                                                      !
!          $Date:  2006/07/21:02:07:15                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      !
!**********************************************************************!

#include 'setenv.sqc'  !Set environment
#include 'setup31.sqc' !Printer and page-size initialization
#include 'usarpt.sqc'  !Get USA variables

Begin-Setup
  declare-variable
      integer #MaxYear2
  end-declare
End-Setup

Begin-Report
      do Init-Report
      do emp-from-to
      do Process-Main
        let $xx = 'Y'
        do Get-EE-Details1
        do total
      do Stdapi-Term

End-Report
!***********************************************************************
begin-procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Initialization
  move 'GPUSYT31' to $ReportID
  move 'State W-2 Tax Totals Report' to $ReportTitle
  Display 'State W-2 Tax Totals Report'
  if $EEDetailFlag = 'Y'
    move 'State W-2 Tax Totals Detail Report' to $ReportTitle
  else
    move 'State W-2 Tax Totals Summary Report' to $ReportTitle
  end-if
end-procedure
!***********************************************************************
begin-procedure Initialization
  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

  move $910Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear
  do Get-Tax-Reporting-Run-Controls
  do assign-year-end-variables
  do Convert-Parameters

  move &TX.CALENDAR_YEAR to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')


begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

end-procedure
!***********************************************************************
Begin-Heading 7
  #include 'stdhdg01.sqc'

    if $xx = 'N'
        Print 'Total State Wages'      (7,67)
        Print 'Total State Income Tax' (7,87)
    else
      if $EEDetailFlag = 'Y'
        Print 'W2 Rpt Company '        (3,1)
        Print $A.W2_Reporting_Co       (0,+2)
        Print $A.Descr                 (0,+2)
        let $TaxYear = 'Tax Year ' || $CalYear
        Print $TaxYear                 (3,)    center
        Print 'Federal EIN '           (4,1)
        Print $A.Federal_EIN           (,+2)   edit xx-xxxxxxx
        Print 'State:'                 (5,1)
        Print $State                   (,+1)
        Print ' '                      (+2,31)
        Print 'SSN'                    (+1,27)
        Print 'Name'                   (,45)
        Print 'Total State Wages'      (,67)
        Print 'Total State Income Tax' (,87)
      else
        Print 'W2 Rpt Company '        (3,1)
        Print $A.W2_Reporting_Co       (0,+2)
        Print $A.Descr                 (0,+2)
        let $TaxYear = 'Tax Year ' || $CalYear
        Print $TaxYear                 (3,)    center
        Print 'Federal EIN '           (4,1)
        Print $A.Federal_EIN           (,+2)   edit xx-xxxxxxx
        Print 'State'    (+2,1)
        Print 'Number of'              (,27)
        Print 'W-2 Statements'         (+1,23)
        Print 'Total State Wages'      (,42)
        Print 'Total State Income Tax' (,62)
       end-if
     end-if
End-Heading
!***********************************************************************
begin-procedure Process-Main
begin-SELECT DISTINCT
A.GPUS_YE_RPT_CO
A.GPUS_TAX_EIN
A.DESCR
A.EFFDT

      move &A.GPUS_TAX_EIN     to $A.Federal_EIN  099999999
      move &A.Descr           to $A.Descr
      move &A.GPUS_YE_RPT_CO to $A.W2_Reporting_Co
      move &A.EFFDT          to $EFFDATE



        do Get-EE-Details
     if $EEDetailFlag <> 'Y'
        do Get-State-Count
     end-if
    FROM  PS_GPUS_YE_CO_TBL A,PS_GPUS_YE_DAT C

    WHERE A.GPUS_TAX_EIN = C.GPUS_TAX_EIN
       AND A.EFFDT = (SELECT MAX(A1.EFFDT)
                 FROM PS_GPUS_YE_CO_TBL A1
                 WHERE A1.GPUS_YE_RPT_CO = A.GPUS_YE_RPT_CO
                    AND A1.EFFDT     <= $AsOfDate)
       AND A.GPUS_YE_RPT_CO <> ' '
ORDER BY A.GPUS_YE_RPT_CO
end-SELECT
end-procedure
!***********************************************************************
begin-procedure Get-State-Count
begin-SELECT DISTINCT
EEE5.GPUS_YE_RPT_CO     () on-break Print=never after=Print-End
EEE1.STATE      () on-break Print=never after=Print-Amounts
EEE1.GPUS_TAXFORM_ID    () on-break Print=never  after=Print-Amounts1
EEE1.EMPLID

       add 1 to #Count
       let $comp = &EEE5.GPUS_YE_RPT_CO
       let $TAXFORM_ID = RTRIM(&EEE1.GPUS_TAXFORM_ID,' ')
       let $State = RTRIM(&EEE1.STATE,' ')
       do GET-MAXIMUM-EFFDT

FROM  PS_GPUS_YE_EE5_VW EEE5,PS_GPUS_YE_EE1_VW  EEE1
     WHERE EEE5.GPUS_TAX_EIN = $A.Federal_EIN
      AND EEE5.GPUS_TAX_EIN    = EEE1.GPUS_TAX_EIN
      AND EEE5.GPUS_CAL_YEAR   >= #MaxYear2
      AND EEE5.GPUS_TAXFORM_ID      = EEE1.GPUS_TAXFORM_ID
      AND EEE5.GPUS_TAX_EIN         = EEE1.GPUS_TAX_EIN
      AND EEE5.EMPLID          = EEE1.EMPLID

      AND EEE5.GPUS_CAL_YEAR   = EEE1.GPUS_CAL_YEAR
      [$fromtoEEE1]
      AND EEE5.GPUS_SEQ_NBR    = EEE1.GPUS_SEQ_NBR
      AND EEE5.GPUS_CAL_YEAR   = &TX.CALENDAR_YEAR
      AND ((EEE1.GPUS_TAXFORM_BOX            IN ('08','14')
              AND EEE1.GPUS_TAXFORM_ID     = '40')
           OR (EEE1.GPUS_TAXFORM_BOX            IN ($YE_Fed_Wages,$YE_Fed_Tax)
               AND EEE1.GPUS_TAXFORM_ID    IN ('50','30','20'))
           OR (EEE1.GPUS_TAXFORM_BOX            IN ($YE_State_Wages, $YE_State_Tax)
               AND EEE1.GPUS_TAXFORM_ID     = '10'))

       AND EEE5.GPUS_YE_STATUS  <> '20'
    ORDER BY EEE5.GPUS_YE_RPT_CO,EEE1.STATE,EEE1.EMPLID,EEE1.GPUS_TAXFORM_ID
end-SELECT
end-procedure
!***********************************************************************
begin-procedure Print-Amounts

    IF $STATE <> ''

      LET $SP_CLAUSE = 'AND E1E.STATE = '''||$State||''''
      do Get-State-Totals
      move &A.GPUS_YE_RPT_CO to $Company
      do Get-State-Tax-Data
      Print $State     (+1,1)

      do Format-Number(#Count, $out, 'B99,999')            !Count

      Print $out  (,30)

      do Format-Number(#17, $out, 'B9999999999.99')           !State wages
      if  $out = '              '
          print  '0.00'  (,55)
         else
          Print $out       (,45)
      end-if


      do Format-Number(#18, $out, 'B9999999999.99')           !State tax
      if  $out = '              '
          print  '0.00'  (,80)
         else
          Print $out       (,70)
      end-if
   END-IF
      move 0 to #17
      move 0 to #18
      move 0 to #Count
      move '' to $StateEIN
end-procedure
!***********************************************************************
begin-procedure Print-Amounts1

      IF $TAXFORM_ID  = '40'
       OR $TAXFORM_ID = '30'
       OR $TAXFORM_ID = '20'
       OR $TAXFORM_ID = '50'

              if $TAXFORM_ID = '40'
                      let $STATE = 'PR'
              END-IF

              if $TAXFORM_ID = '20'
                       let $STATE = 'AS'
              END-IF

              if $TAXFORM_ID = '30'
                       let $STATE = 'GU'
              END-IF

              if $TAXFORM_ID = '50'
                       let $STATE = 'VI'
              END-IF

       LET $SP_CLAUSE  = 'AND E1E.GPUS_TAXFORM_ID = '''||$TAXFORM_ID||''''

      do Get-State-Totals
      move &A.GPUS_YE_RPT_CO to $Company
      do Get-State-Tax-Data
      Print $State     (+1,1)

      do Format-Number(#Count, $out, 'B99,999')            !Count

      Print $out  (,30)

      do Format-Number(#17, $out, 'B9999999999.99')           !State wages
      if  $out = '              '
          print  '0.00'  (,55)
         else
          Print $out       (,45)
      end-if


      do Format-Number(#18, $out, 'B9999999999.99')           !State tax
      if  $out = '              '
          print  '0.00'  (,80)
         else
          Print $out       (,70)
      end-if
      move 0 to #17
      move 0 to #18
      move 0 to #Count
      move '' to $StateEIN
END-IF
end-procedure
!***********************************************************************
begin-procedure Get-State-Totals

begin-SELECT
E0E.GPUS_YE_RPT_CO
E1E.STATE
E1E.EMPLID
E1E.GPUS_TAXFORM_BOX
E1E.GPUS_TAXFORM_ID

    #ifdef DB2ALL
DECIMAL(SUM(E1E.GPUS_YE_AMOUNT),15,3) &E1E.GPUS_YE_AMOUNT
    #else
SUM(E1E.GPUS_YE_AMOUNT) &E1E.GPUS_YE_AMOUNT
    #endif
       move &E1E.GPUS_YE_AMOUNT  to #Amount
       let $D.Box = RTRIM(&E1E.GPUS_TAXFORM_BOX,' ')
       let $TAXFORM_ID = RTRIM(&E1E.GPUS_TAXFORM_ID,' ')
       do Compute-Territory-State-Wages
       do GET-MAXIMUM-EFFDT


    FROM  PS_GPUS_YE_EE1_VW E1E,PS_GPUS_YE_EE0_VW  E0E
    WHERE E0E.GPUS_TAX_EIN = $A.Federal_EIN
       AND E1E.GPUS_TAX_EIN  = E0E.GPUS_TAX_EIN
       AND E1E.GPUS_CAL_YEAR >= #MaxYear2
       AND E1E.GPUS_CAL_YEAR = &TX.CALENDAR_YEAR
       [$SP_CLAUSE]
       AND E1E.EMPLID          = E0E.EMPLID
       [$fromtoE1E]
       AND E1E.GPUS_TAXFORM_ID  = E0E.GPUS_TAXFORM_ID
       AND ((E1E.GPUS_TAXFORM_BOX      IN ('08','14')
               AND E1E.GPUS_TAXFORM_ID  = '40')
           OR (E1E.GPUS_TAXFORM_BOX           IN ($YE_Fed_Wages, $YE_Fed_Tax)
               AND E1E.GPUS_TAXFORM_ID IN ('50','30','20'))
           OR (E1E.GPUS_TAXFORM_BOX            IN ($YE_State_Wages, $YE_State_Tax)
               AND E1E.GPUS_TAXFORM_ID = '10'))

       AND E1E.GPUS_CAL_YEAR   = E0E.GPUS_CAL_YEAR
       AND E0E.GPUS_YE_STATUS   <> '20'
    GROUP BY E0E.GPUS_YE_RPT_CO,E1E.STATE,E1E.GPUS_TAXFORM_ID,E1E.EMPLID,E1E.GPUS_TAXFORM_BOX
    ORDER BY E0E.GPUS_YE_RPT_CO,E1E.STATE,E1E.GPUS_TAXFORM_ID,E1E.EMPLID,E1E.GPUS_TAXFORM_BOX
end-SELECT
end-procedure
!***********************************************************************
begin-procedure Compute-Territory-State-Wages

 do assign-year-end-variables

     if $TaxForm_ID = '10'

         evaluate $D.Box

           when = $YE_State_Wages                            !State wages
             add #Amount to #17
             break
           when = $YE_State_Tax                              !State tax

             add #Amount to #18
             break
         end-evaluate
     else
       if $TaxForm_ID = '40'
          evaluate $D.Box
              when = '08'                               !Puerto Rico wages
                add #Amount to #17
                break
              when = '14'                               !Puerto Rico tax
                add #Amount to #18
                break
          end-evaluate

       else
          evaluate $D.Box
            when = $YE_Fed_Wages                             !Territory wages
              add #Amount to #17
              break
            when = $YE_Fed_Tax                                !Territory tax
              add #Amount to #18
            break
          end-evaluate

       end-if
     end-if
end-procedure
!***********************************************************************
begin-procedure Convert-Parameters
  move $GPUS_EMPL_DTLS to $EEDetailFlag
end-procedure
!***********************************************************************
begin-procedure Get-EE-Details
begin-SELECT DISTINCT
EE5.GPUS_YE_RPT_CO () on-break Print=never level=1  after = total1
EE1.STATE   () on-break Print=never level=2  after=Print-State-Summary
EE1.GPUS_TAXFORM_ID  () on-break Print=never level=3 after = Territories1
EE1.EMPLID  () on-break Print=never level=4 after=After-EE
EE1.GPUS_TAXFORM_BOX
EE1.GPUS_YE_AMOUNT
EE5.GPUS_YE_LNAME
EE5.GPUS_YE_MNAME
EE5.GPUS_YE_FNAME
EE5.GPUS_YE_SUFFIX
EE5.SSN


    if &EE1.State <> $State
        let $State = RTRIM(&EE1.State,' ')
        do State-Break
    end-if
    move &EE5.GPUS_YE_RPT_CO    to $comp
    move &EE1.GPUS_YE_AMOUNT    to #Amount
    move &EE5.GPUS_YE_FNAME     to $W2_FName
    move &EE5.GPUS_YE_MNAME     to $W2_MName
    move &EE5.GPUS_YE_LNAME     to $W2_LName
    move &EE5.GPUS_YE_SUFFIX    to $W2_Suffix
    move &EE5.SSN               to $W2_SSN
    move &EE1.EMPLID              to $EMPLID
    let $TAXFORM_ID = RTRIM(&EE1.GPUS_TAXFORM_ID,' ')
    let $D.Box = RTRIM(&EE1.GPUS_TAXFORM_BOX,' ')
    LET $test = 'N'
    do Compute-Territory-State-Wages
    do GET-MAXIMUM-EFFDT

    FROM  PS_GPUS_YE_EE5_VW EE5,PS_GPUS_YE_EE1_VW  EE1, PS_GPUS_YE_CO_TBL CC

    WHERE EE5.GPUS_TAX_EIN = $A.Federal_EIN
      AND EE5.GPUS_TAX_EIN    = EE1.GPUS_TAX_EIN
      AND EE5.GPUS_CAL_YEAR   >= #MaxYear2
      AND EE5.GPUS_TAXFORM_ID      = EE1.GPUS_TAXFORM_ID
      AND EE5.GPUS_TAX_EIN         = EE1.GPUS_TAX_EIN
      AND EE5.EMPLID          = EE1.EMPLID
      AND EE5.GPUS_CAL_YEAR   = EE1.GPUS_CAL_YEAR
      [$fromtoEE1]
      AND EE5.GPUS_SEQ_NBR    = EE1.GPUS_SEQ_NBR
      AND EE5.GPUS_CAL_YEAR   = &TX.CALENDAR_YEAR
      AND ((EE1.GPUS_TAXFORM_BOX            IN ('08','14')
              AND EE1.GPUS_TAXFORM_ID     = '40')
           OR (EE1.GPUS_TAXFORM_BOX            IN ($YE_Fed_Wages,$YE_Fed_Tax)
               AND EE1.GPUS_TAXFORM_ID    IN ('50','30','20'))
           OR (EE1.GPUS_TAXFORM_BOX            IN ($YE_State_Wages, $YE_State_Tax)
               AND EE1.GPUS_TAXFORM_ID     = '10'))

       AND EE5.GPUS_YE_STATUS  <> '20'
    ORDER BY EE5.GPUS_YE_RPT_CO,EE1.STATE,EE1.GPUS_TAXFORM_ID,EE1.EMPLID
end-SELECT
end-procedure
!***********************************************************************
begin-procedure State-Break
  move &A.GPUS_YE_RPT_CO to $Company
  do Get-State-Tax-Data
end-procedure
!***********************************************************************
begin-procedure Print-End
   new-page
if $EEDetailFlag <> 'Y'
   Print 'Grand total Per Company with all states combined:'   (+1,1)
    Print $comp     (,52)
    do Format-Number(#astpercomp, $out, 'B9999999999.99')
    if  $out = '              '
        print  '0.00'  (,80)
       else
        Print $out       (,70)
      end-if

    do Format-Number(#astpercomp1, $out, 'B9999999999.99')
    if  $out = '              '
        print  '0.00'  (,105)
       else
        Print $out       (,95)
   end-if
  let  #astpercomp = '0'
  let  #astpercomp1 = '0'
  LET $xx = 'N'
  new-page
  LET $xx = 'Y'
end-if
end-procedure
!***********************************************************************
begin-procedure After-EE
IF  $EEDetailFlag = 'Y'
   let $SSN = ' '
   move $W2_SSN to $S123 xxx
   if $S123 = &Temp_SSN_Mask or RTRIM($W2_SSN, ' ') = ''
     move 'Unavailable' to $W2_SSN
   else
     move $W2_SSN to $SSN xxx-xx-xxxx
   end-if

   let $W2_FName  = rtrim($W2_FName,' ') ||' '
   let $W2_MName  = rtrim($W2_MName,' ') ||' '
   let $W2_LName  = rtrim($W2_LName,' ') ||' '
   let $W2_Suffix = rtrim($W2_Suffix,' ') ||' '

   if $W2_MName <> ' '
      let $YE_Whole_Name = $W2_FName || $W2_MName || $W2_LName || $W2_Suffix
   else
      let $YE_Whole_Name = $W2_FName || $W2_LName || $W2_Suffix
   end-if

   Print $SSN             (+1,23)

   Print $YE_Whole_Name   (,45,22)

   do Format-Number(#17, $out, 'B9999999999.99')           !State wages
   if  $out = '              '
       print  '0.00'  (,80)
      else
       Print $out       (,70)
   end-if

   do Format-Number(#18, $out, 'B9999999999.99')           !State tax
   if  $out = '              '
       print  '0.00'  (,105)
      else
       Print $out       (,95)
   end-if
   END-IF

   let #Dtl_Count = #Dtl_Count + 1
   let #Dtl_Amt17 = #Dtl_Amt17 + #17
   let #Dtl_Amt18 = #Dtl_Amt18 + #18


   let #Amount = 0
   let #17 = 0
   let #18 = 0

end-procedure
!***********************************************************************
begin-procedure Print-State-Summary
  IF  $EEDetailFlag = 'Y'
      let $Total_Label = RTRIM($State, ' ') || ' Totals:'    !(TO CHECK FOR STATE)
    IF $STATE <> 'VI'
    Print 'Number of'              (+3,47)
    Print 'W-2 Statements '         (+1,42)
    Print 'Total State Wages'      (,67)
    Print 'Total State Income Tax' (,87)

    Print $Total_Label             (+2,10,19)


    do Format-Number(#Dtl_Count, $out, 'B99,999')               !Count

    Print $out  (,49)

    do Format-Number(#Dtl_Amt17, $out, 'B9999999999.99')        !State wages
    END-IF
END-IF
      let #Dtl_totAmt17 = #Dtl_totAmt17 + #Dtl_Amt17
      let #Dtl_totAmt17pcas = #Dtl_totAmt17pcas + #Dtl_Amt17
      IF $STATE <> 'VI'
 IF  $EEDetailFlag = 'Y'
      if  $out = '              '
          print  '0.00'  (,80)
         else
          Print $out       (,70)
      end-if
 END-IF
      END-IF
    do Format-Number(#Dtl_Amt18, $out, 'B9999999999.99')        !State tax

      let #Dtl_totAmt18 = #Dtl_totAmt18 + #Dtl_Amt18
      let #Dtl_totAmt18pcas = #Dtl_totAmt18pcas + #Dtl_Amt18

IF  $EEDetailFlag = 'Y'
    IF $STATE <> 'VI'
      if  $out = '              '
          print  '0.00'  (,105)
         else
          Print $out       (,95)
      end-if
    END-IF
        new-page
END-IF

    move 0 to #Dtl_Count
    move 0 to #Dtl_Amt17
    move 0 to #Dtl_Amt18
 end-procedure
!***********************************************************************
begin-procedure GET-MAXIMUM-EFFDT
begin-SELECT
MAX(W.EFFDT)   &W.EFFDT

    let $MaxYear = datetostr(&W.EFFDT)
    let $MaxYear1= substr($MaxYear,1,4)
    let #MaxYear2= to_number($MaxYear1)

    FROM PS_GPUS_YE_CO_TBL W
    WHERE W.GPUS_TAX_EIN  = $A.Federal_EIN

    AND W.EFFDT <= $AsOfDate
end-SELECT
end-procedure
!***********************************************************************
begin-procedure emp-from-to
begin-SELECT
EMPLID_FROM  &EFROM
EMPLID_TO   &ETO
      let $EFRM = &EFROM
      let $ET = &ETO
      let $A = ''''

      let $fromtoE1 = 'AND E1.EMPLID BETWEEN '''||$EFRM||''' AND '''||$ET||$A
      let $fromtoEE1  = 'AND EE1.EMPLID BETWEEN '''||$EFRM||''' AND '''||$ET||$A
      let $fromtoEEE1  = 'AND EEE1.EMPLID BETWEEN '''||$EFRM||''' AND '''||$ET||$A
      let $fromtoE1E   = 'AND E1E.EMPLID BETWEEN '''||$EFRM||''' AND '''||$ET||$A

from PS_GP_STRM
WHERE STRM_NUM = #STRM_NUM

end-SELECT
end-procedure
!***********************************************************************
begin-procedure total
     let $xx = 'N'
    Print 'Grand total of all States for all Companies'   (+3,1)
    do Format-Number(#Dtl_totAmt17, $out, 'B9999999999.99')
        Print $out       (,70)
    do Format-Number(#Dtl_totAmt18, $out, 'B9999999999.99')
           Print $out       (,95)

 end-procedure
!***********************************************************************
begin-procedure total1

  let $XX = 'N'
  if $EEDetailFlag = 'Y'
 Print 'Grand total Per Company with all states combined:'   (+1,1)
 Print $comp     (,52)
 do Format-Number(#Dtl_totAmt17pcas, $out, 'B9999999999.99')
 if  $out = '              '
     print  '0.00'  (,80)
    else
     Print $out       (,70)
   end-if

 do Format-Number(#Dtl_totAmt18pcas, $out, 'B9999999999.99')
 if  $out = '              '
     print  '0.00'  (,105)
    else
     Print $out       (,95)
   end-if

end-if
   let #astpercomp = #astpercomp + #Dtl_totAmt17pcas
   let #astpercomp1 = #astpercomp1 + #Dtl_totAmt18pcas
   let #Dtl_totAmt17pcas = 0
   let #Dtl_totAmt18pcas = 0
if $EEDetailFlag = 'Y'

   new-page
end-if

let $XX = 'Y'
end-procedure

!***********************************************************************
begin-procedure Get-EE-Details1
 let $xx = 'N'
begin-SELECT
E1.STATE   () on-break Print=never level=1  after=Print-State-Summary1
SUM(E1.GPUS_YE_AMOUNT)  &E1.GPUS_YE_AMOUNT
E1.GPUS_TAXFORM_ID  () on-break Print=never level = 1 after=Territories
E1.GPUS_TAXFORM_BOX
        let $TAXFORM_ID1 = RTRIM(&E1.GPUS_TAXFORM_ID,' ')
        let $STATE1 = RTRIM(&E1.STATE,' ')
        move &E1.GPUS_YE_AMOUNT    to #Amount1

        let $D.Box1 = RTRIM(&E1.GPUS_TAXFORM_BOX,' ')

   do Compute-Territory-State-Wages1
   do GET-MAXIMUM-EFFDT

FROM  PS_GPUS_YE_EE EE,PS_GPUS_YE_EE1_VW  E1
    WHERE ((E1.GPUS_TAXFORM_BOX            IN ('08','14')
              AND E1.GPUS_TAXFORM_ID     = '40')
           OR (E1.GPUS_TAXFORM_BOX            IN ($YE_Fed_Wages,$YE_Fed_Tax)
               AND E1.GPUS_TAXFORM_ID    IN ('50','30','20'))
           OR (E1.GPUS_TAXFORM_BOX            IN ($YE_State_Wages, $YE_State_Tax)
               AND E1.GPUS_TAXFORM_ID     = '10'))

        AND EE.EMPLID = E1.EMPLID
        AND EE.GPUS_TAX_EIN = E1.GPUS_TAX_EIN
        AND EE.GPUS_CAL_YEAR = E1.GPUS_CAL_YEAR
        AND EE.GPUS_CAL_YEAR = &TX.CALENDAR_YEAR
        AND EE.GPUS_TAXFORM_ID = E1.GPUS_TAXFORM_ID
        AND EE.GPUS_YE_STATUS  <> '20'
       GROUP BY E1.STATE,E1.GPUS_TAXFORM_ID,E1.GPUS_TAXFORM_BOX
end-SELECT
end-procedure
!***********************************************************************
begin-procedure Compute-Territory-State-Wages1

 do assign-year-end-variables

     if $TaxForm_ID1 = '10'

         evaluate $D.Box1

           when = $YE_State_Wages                            !State wages
             add #Amount1 to #171
             break
           when = $YE_State_Tax                             !State tax

             add #Amount1 to #181
             break
          end-evaluate

     else
       if $TaxForm_ID1 = '40'
          evaluate $D.Box1
              when =  '08'                              !Puerto Rico wages
                add #Amount1 to #171
                break
              when = '14'                               !Puerto Rico tax
                add #Amount1 to #181
                break
          end-evaluate

       else
          evaluate $D.Box1
            when = $YE_Fed_Wages                              !Territory wages
              add #Amount1 to #171
              break
            when = $YE_Fed_Tax                                !Territory tax
              add #Amount1 to #181
            break
          end-evaluate

       end-if
     end-if

end-procedure
!***********************************************************************
begin-procedure Print-State-Summary1

 if $STATE1 <> ''

   Print 'Grand total of all Companies by State: '  (+1,1)
   Print $state1   (,46)
   do Format-Number(#171, $out, 'B9999999999.99')
   if  $out = '              '
    print  '0.00'  (,80)
   else
    Print $out       (,70)
   end-if
   do Format-Number(#181, $out, 'B9999999999.99')
   if  $out = '              '
    print  '0.00'  (,105)
   else
    Print $out   (,95)
   end-if

 end-if
  let #171 = 0
  let #181 = 0
end-procedure
!***********************************************************************
begin-procedure  Territories


IF $TAXFORM_ID1  = '40'
 OR $TAXFORM_ID1 = '30'
 OR $TAXFORM_ID1 = '20'
 OR $TAXFORM_ID1 = '50'

        if $TAXFORM_ID1 = '40'
                let $STATE2 = 'PR'
        END-IF

        if $TAXFORM_ID1 = '20'
                 let $STATE2 = 'AS'
        END-IF

        if $TAXFORM_ID1 = '30'
                 let $STATE2 = 'GU'
        END-IF

        if $TAXFORM_ID1 = '50'
                 let $STATE2 = 'VI'
        END-IF

   Print 'Grand total of all Companies by State: '  (+1,1)
   Print $state2   (,46)
   do Format-Number(#171, $out, 'B9999999999.99')
   if  $out = '              '
       print  '0.00'  (,80)
      else
       Print $out       (,70)
   end-if
   do Format-Number(#181, $out, 'B9999999999.99')
   if  $out = '              '
       print  '0.00'  (,105)
      else
       Print $out       (,95)
   end-if


   let #171 = 0
   let #181 = 0


END-IF
end-procedure
!***********************************************************************
begin-procedure Territories1

  IF $TAXFORM_ID  = '40'
   OR $TAXFORM_ID = '30'
   OR $TAXFORM_ID = '20'
   OR $TAXFORM_ID = '50'
  if $EEDetailFlag = 'Y'
          if $TAXFORM_ID = '40'
                  let $STATE = 'PR'
          END-IF

          if $TAXFORM_ID = '20'
                   let $STATE = 'AS'
          END-IF

          if $TAXFORM_ID = '30'
                   let $STATE = 'GU'
          END-IF

          if $TAXFORM_ID = '50'
                   let $STATE = 'VI'
        END-IF

      let $Total_Label = RTRIM($State, ' ') || ' Totals:'    !(TO CHECK FOR STATE)


    Print 'Number of'              (+3,47)
    Print 'W-2 Statements'         (+1,42)
    Print 'Total State Wages'      (,67)
    Print 'Total State Income Tax' (,87)
    Print $Total_Label             (+2,10,19)
    do Format-Number(#Dtl_Count, $out, 'B99,999')               !Count

    Print $out  (,49)

    do Format-Number(#Dtl_Amt17, $out, 'B9999999999.99')        !State wages
  end-if

      let #Dtl_totAmt17 = #Dtl_totAmt17 + #Dtl_Amt17
      let #Dtl_totAmt17pcas = #Dtl_totAmt17pcas + #Dtl_Amt17
  if $EEDetailFlag = 'Y'
      if  $out = '              '
          print  '0.00'  (,80)
         else
          Print $out       (,70)
   end-if


    do Format-Number(#Dtl_Amt18, $out, 'B9999999999.99')        !State tax
 end-if



      let #Dtl_totAmt18 = #Dtl_totAmt18 + #Dtl_Amt18
      let #Dtl_totAmt18pcas = #Dtl_totAmt18pcas + #Dtl_Amt18
 if $EEDetailFlag = 'Y'
      if  $out = '              '
          print  '0.00'  (,105)
         else
          Print $out       (,95)
      end-if

    if $STATE <> 'VI'
        new-page
    end-if
end-if
    move 0 to #Dtl_Count
    move 0 to #Dtl_Amt17
    move 0 to #Dtl_Amt18
end-if
 end-procedure

!***********************************************************************

#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'stdapi.sqc'    !Update Process API
#include 'gpusw2.sqc'    !Translation of W2 Boxes
#include 'gpusrntl.sqc'  !Get-Tax-Reporting-Run-Controls
#include 'gpusstdt.sqc'  !Get-State-Tax-Data