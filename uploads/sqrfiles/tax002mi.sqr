!***********************************************************************
!  TAX002MI:  Qtrly State Employee Wage List - MICHIGAN                *
!                                                                      *
!             NOTE: "#IFDEF TAXTEST" in main SELECT is used for        *
!                   testing this report against DEMO database          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:05:53:55                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP00001       Release 8 Technical Merge Select Installation Table    *
!            ** Please note - This SQR has a cloned version for        *
!               Education and Government.  The SQR name is T002MIHP.   *
!               If you are making changes to this SQR, please check SQR*
!               T002MIHP to see if changes need to be made there too.  *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#Include 'usarpt.sqc'  !Get USA variables

begin-setup

#include 'prt002a.sqc'  !Printer and page-size initialization

end-setup

begin-report
  do Init-Report

  do Process-Main

  if #Employees_On_Page > 0 and #Employees_On_Page < 20
    do Page-Complete
  end-if

  do Stdapi-Term

end-report

begin-procedure Init-Report
  display 'Quarterly Employee Wage List - Michigan'

  do Init-DateTime
  do Init-Number

  do Get-Tax-Reporting-Run-Controls

  move $PeriodEndDate to $AsOfDate  !for included procedures
  do Get-Calendar-Year-Id
  do Stdapi-Init

end-procedure

begin-heading 18
  move '/' to $DDelimiter
  do Format-DateTime($PeriodEndDate, $out, {DEFMDY}, '', '')
  print $out                      (7,12)
  print $CompanyName              (11,10)
  print $Compnyadd1               (+1,10)
  let $field = RTRIM($Compnycity, ' ')
  print $field                    (+1,10)
  print &CT.State                 ()      edit ,bxx
  move  &CT.Postal                to $Zip
  move  &CT.Postal                to $ZipExtsn ~~~~~~xxxx
  if instr($Zip,'-',6) = 0
  and $ZipExtsn <> '    '
    let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
  end-if
  print $Zip                      (0,+2)
  move &CT.Federal_EIN to $FederalEIN
  let #loc = length($FederalEIN)
  extract $Federal_EIN from $FederalEIN 0 #loc
  if #loc <> 9
     print '0'                    (13,56)
     print $Federal_EIN           (13,57) edit xbxxxxxxx
  else
     print $Federal_EIN           (13,56) edit xxbxxxxxxx
  end-if
  print &Employer_ID_SUT          (15,63)
  print '000'                     (15,76)
  if #PAGE_NUM = #TotalPages
    print 'I declare that I have examined this report, and to the best'
                                  (61,2)
    print 'of my knowledge and belief, it is true, correct and complete.'
                                  (62,2)
    print 'Signed:'               (64,2)
    print 'Date:'                 (64,40)
    do Format-Number(#CompanyTotal, $out, '99999999.99')
    print $out                    (61,67) edit xxxxxxxx~bbxx
  end-if
  do Format-Number(#PAGE_NUM, $out, 'b99')
  print $out                      (64,68)
  do Format-Number(#TotalPages, $out, 'b99')
  print $out                      (0,+5)

end-heading

begin-procedure Process-Main

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

  Show 'Calendar Year: ' $Calendar_Year_Id
  Show 'Balance  Year: ' &TX.Balance_Year
  Show 'Balance  Qtr:  ' &TX.Balance_Qtr
  Show 'Asofdate:      ' $Asofdate

begin-SELECT
C.COMPANY () on-break print=never before=Company-Change
C.STATE
C.EMPLID
C.TAX_CLASS
C.LOCALITY
C.TXGRS_QTD
C.NLGRS_QTD

D1.NATIONAL_ID
PN.LAST_NAME
PN.FIRST_NAME
PN.MIDDLE_NAME


  do Process-Tax-Balance

FROM  PS_TAX_BALANCE C, PS_PERSON_NAME PN, PS_PERS_NID D1, PS_COMPANY_TBL A
WHERE D1.EMPLID           = C.EMPLID
  AND D1.COUNTRY          = {NID_COUNTRY}
  AND D1.NATIONAL_ID_TYPE = $PAYROLL_NID_TYPE
  AND PN.EMPLID           = C.EMPLID
#ifdef TAXTEST
  AND C.STATE             = 'CA'
#else
  AND C.STATE             = 'MI'
#endif
  AND C.LOCALITY          = ' '
  AND C.TAX_CLASS         = 'U'                ! Unemployment
  AND C.BALANCE_ID        = $Calendar_Year_Id
  AND C.BALANCE_YEAR      = &TX.Balance_Year
  AND C.BALANCE_QTR       = &TX.Balance_Qtr
  AND C.BALANCE_PERIOD    =
      (SELECT MAX(C1.BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE C1
       WHERE  C1.EMPLID        = C.EMPLID
         AND  C1.COMPANY       = C.COMPANY
         AND C1.BALANCE_ID     = C.BALANCE_ID
         AND C1.BALANCE_YEAR   = C.BALANCE_YEAR
         AND C1.BALANCE_QTR    = C.BALANCE_QTR
         AND  C1.STATE         = C.STATE
         AND  C1.LOCALITY      = C.LOCALITY
         AND  C1.TAX_CLASS     = C.TAX_CLASS)
  AND C.NLGRS_QTD     > 0
  AND A.COMPANY = C.COMPANY
  AND A.EFF_STATUS = 'A'
  AND A.TAX_REPORT_TYPE = '2'
  AND A.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = A.COMPANY
         AND  EFFDT  <= $AsOfDate)
ORDER BY C.COMPANY, D1.NATIONAL_ID, C.STATE, C.LOCALITY, C.TAX_CLASS
end-SELECT
end-procedure

begin-procedure Process-Tax-Balance
  add 1 to #LINE_NUM
  print #LINE_NUM          (+2,2)  edit b9

  move &D1.NATIONAL_ID to $S123 xxx       !isolate first 3 digits

  if $S123 = &Temp_SSN_Mask or RTRIM(&D1.NATIONAL_ID, ' ') = ''
    print ' '                    (0,12)
  else
    print &D1.NATIONAL_ID        (0,12)  edit xxx-xx-xxxx
  end-if

  let $LastName   = rtrim(&PN.LAST_NAME, ' ')
  let $FirstName  = rtrim(&PN.FIRST_NAME, ' ')
  let $MidInitial = {ps-substr}(&PN.MIDDLE_NAME,1,1)

  print $LastName                (0,31,15)
  print $FirstName               (0,48,13)

  move &C.NLGrs_QTD to #NLGrs_QTD
  do Format-Number(#NLGrs_QTD, $out, '99999999.99')
  print $out                     (0,67) edit  xxxxxxxx~bbxx

  add #NLGrs_QTD to #CompanyTotal
  add 1 to #Employees_On_Page

  if #Employees_On_Page = 20
    do Page-Complete
  end-if
end-procedure

begin-procedure Get-Total
begin-SELECT

COUNT(*)          &EmplCount

FROM  PS_TAX_BALANCE TB, PS_COMPANY_TBL A2
WHERE TB.COMPANY       = &C.Company
#ifdef TAXTEST
  AND TB.STATE         = 'CA'
#else
  AND TB.STATE         = 'MI'
#endif
  AND TB.LOCALITY      = ' '
  AND TB.TAX_CLASS     = 'U'                 ! Unemployment
  AND TB.BALANCE_ID    = $Calendar_Year_Id
  AND TB.BALANCE_YEAR  = &TX.Balance_Year
  AND TB.BALANCE_QTR   = &TX.Balance_Qtr
  AND TB.NLGRS_QTD     > 0
  AND TB.BALANCE_PERIOD       =
      (SELECT MAX(C2.BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE C2
       WHERE  C2.EMPLID        = TB.EMPLID
         AND  C2.COMPANY       = TB.COMPANY
         AND C2.BALANCE_ID    = TB.BALANCE_ID
         AND C2.BALANCE_YEAR  = TB.BALANCE_YEAR
         AND C2.BALANCE_QTR   = TB.BALANCE_QTR
         AND  C2.STATE         = TB.STATE
         AND  C2.LOCALITY      = TB.LOCALITY
         AND  C2.TAX_CLASS     = TB.TAX_CLASS)
  AND A2.COMPANY = TB.COMPANY
  AND A2.EFF_STATUS = 'A'
  AND A2.TAX_REPORT_TYPE = '2'
  AND A2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = A2.COMPANY
         AND  EFFDT  <= $AsOfDate)
GROUP BY TB.COMPANY, TB.STATE
end-SELECT
  let #TotalPages = CEIL(&EmplCount/20)
end-procedure

begin-procedure Page-Complete
  add 1 to #PAGE_NUM
  new-page
  move 0 to #Employees_On_Page
  move 0 to #LINE_NUM
end-procedure

begin-procedure Company-Change
  if #Employees_On_Page < 20 and #Employees_On_Page > 0
    do Page-Complete
  end-if
  move 0 to #PAGE_NUM
  move 0 to #CompanyTotal
  move &C.Company to $Company
  do Get-Company-Data
#ifdef TAXTEST
  move 'CA' to $State
#else
  move 'MI' to $State
#endif
  do Get-State-Tax-Data             !Employer ID
  do Get-Total
end-procedure

#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getstdta.sqc'  !Get-State-Tax-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'stdapi.sqc'    !Update Process API
