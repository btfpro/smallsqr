!**********************************************************
!  CNTPAY02 Contract Pay - Batch Contract Renewals Report *
!**********************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:03:25:54                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!       $Last Revision:  05.08.02 - Synchronize to Job and Job Jr      *
!                                                                      *
!***********************************************************************
! This program is specific to HRMS for Public Sector.                  *
!***********************************************************************

#include 'setenv.sqc'     !Set environment
#Include 'setup32.sqc'    !Printer and page-size initialization

!***********************************************************************
begin-program

  do HOUSEKEEPING
  do MAINLINE
  do WRAPUP

end-program

!***********************************************************************
begin-heading 8

!***   Standard heading paragraph sets up headings and dividers for report.

   #Include 'stdhdgtr.sqc'                                        
   print $CNTPAY02_CONT_HDG          (+1,51,25)
   print $CNTPAY02_PAYM_HDG            (,+3,25)
   print $CNTPAY02_EMPLID             (+1,5,10)
   print $CNTPAY02_RCD_NO              (,+3,05)
   print $CNTPAY02_CONTRACT            (,+3,08)
   print $CNTPAY02_EFFDT               (,+3,11)
   print $CNTPAY02_BEGIN_DT            (,+3,11)
   print $CNTPAY02_END_DT              (,+3,11)
   print $CNTPAY02_BEGIN_DT            (,+3,11)
   print $CNTPAY02_END_DT              (,+3,11)
   print $CNTPAY02_AMOUNT              (,+3,12)
   print $CNTPAY02_PMT_TERM            (,+3,08)
   print $CNTPAY02_RENEWALS            (,+3,10)
   print '-----------------'           (+1,5,10)
   print '-----------------'           (,+3,05)
   print '-----------------'           (,+3,08)
   print '-----------------'           (,+3,11)
   print '-----------------'           (,+3,11)
   print '-----------------'           (,+3,11)
   print '-----------------'           (,+3,11)
   print '-----------------'           (,+3,11)
   print '-----------------'           (,+3,12)
   print '-----------------'           (,+3,08)
   print '-----------------'           (,+3,10)
end-heading



!******************************************************************************
! Procedure: HOUSEKEEPING                                                     *
! Descr:     Performs initialization steps and gets run control or prompt     *
!            data required for processing                                     *
!                                                                             *
! Called by: HOUSEKEEPING                                                     *
!******************************************************************************
begin-procedure HOUSEKEEPING

   move 'CNTPAY02' to $ReportID                

   do INIT-DATETIME
   do INIT-NUMBER
   do GET-CURRENT-DATETIME
   do STDAPI-INIT
   do REPORT-TRANSLATION                       

   if $Prcs_Process_Instance = ''
      do PROMPTS             !Prompt user for Company, Paygroup, Renewal_Days_Out
   else
      do SELECT-PARAMETERS   !Get Company, Paygroup, Renewal_Days_Out from Run Cntl.
      do GET-VALUES
   end-if

   do READ-HEADER-TXN

   let $Indent = '   '
   show $Indent $ReportID ' - ' $ReportTitle
   display ' '

   do PRINT-REPORT-HEADER

end-procedure



!******************************************************************************
! Procedure: READ-HEADER-TXN                                                  *
! Descr:     READ TXN HEADER FOR CONTRACT RENEWAL BEGIN/END PERIOD            *
!                                                                             *
! Called by: REPORT (main program)                                            *
!******************************************************************************
begin-procedure READ-HEADER-TXN

let $err-statement1 = 'CNTPAY02.SQR, Select Error- READ-HEADER'
let $err-statement2 = 'Bind Variables - Company: '||$Company||
                                    ', Paygroup: '||$Paygroup

begin-SELECT on-error=Error-Display
HDR.PROCESS_INSTANCE
HDR.CONTRACT_BEGIN_DT
HDR.CONTRACT_END_DT

   let $Renewal_Begin_dt = &HDR.CONTRACT_BEGIN_DT
   let $Renewal_End_Dt   = &HDR.CONTRACT_END_DT

FROM PS_HPCNTPAY02_HDR HDR
WHERE HDR.PROCESS_INSTANCE = #prcs_job_instance
end-SELECT

end-procedure



!***********************************************************************
! F-LPARKER-125 (CAMI)                                                 *
! Read language-dependent text from the database using CNTPAY02        *
! program id.                                                          *
!***********************************************************************
begin-procedure REPORT-TRANSLATION

  let $language_cd = $PRCS_LANGUAGE_CD
  do Init_Report_Translation($ReportID,$Language_Cd)

  do Get_Field_Information ('CNTPAY02', 'AMOUNT',       $CNTPAY02_AMOUNT,     #DW)
  do Get_Field_Information ('CNTPAY02', 'BEGIN_DT',     $CNTPAY02_BEGIN_DT,   #DW)
  do Get_Field_Information ('CNTPAY02', 'COMP_ROWS',    $CNTPAY02_COMP_ROWS,  #DW)
  do Get_Field_Information ('CNTPAY02', 'CONTRACT_HDG', $CNTPAY02_CONT_HDG,   #DW)
  do Get_Field_Information ('CNTPAY02', 'CURRENT',      $CNTPAY02_CURRENT,    #DW)
  do Get_Field_Information ('CNTPAY02', 'EFFDT',        $CNTPAY02_EFFDT,      #DW)
  do Get_Field_Information ('CNTPAY02', 'EMPLID',       $CNTPAY02_EMPLID,     #DW)
  do Get_Field_Information ('CNTPAY02', 'END_DT',       $CNTPAY02_END_DT,     #DW)
  do Get_Field_Information ('CNTPAY02', 'ERR_COND0',    $CNTPAY02_ERR_COND0,  #DW)
  do Get_Field_Information ('CNTPAY02', 'ERR_COND1',    $CNTPAY02_ERR_COND1,  #DW)
  do Get_Field_Information ('CNTPAY02', 'ERR_COND2',    $CNTPAY02_ERR_COND2,  #DW)
  do Get_Field_Information ('CNTPAY02', 'ERR_COND3',    $CNTPAY02_ERR_COND3,  #DW)
  do Get_Field_Information ('CNTPAY02', 'ERR_COND4',    $CNTPAY02_ERR_COND4,  #DW)
  do Get_Field_Information ('CNTPAY02', 'ERROR_MSG',    $CNTPAY02_ERROR_MSG,  #DW)
  do Get_Field_Information ('CNTPAY02', 'HDR_MSG1',     $CNTPAY02_HDR_MSG1,   #DW)
  do Get_Field_Information ('CNTPAY02', 'HDR_MSG2',     $CNTPAY02_HDR_MSG2,   #DW)
  do Get_Field_Information ('CNTPAY02', 'PAYMENT_HDG',  $CNTPAY02_PAYM_HDG,   #DW)
  do Get_Field_Information ('CNTPAY02', 'PAYMENT_A',    $CNTPAY02_PAYM_A,     #DW)
  do Get_Field_Information ('CNTPAY02', 'PAYMENT_L',    $CNTPAY02_PAYM_L,     #DW)
  do Get_Field_Information ('CNTPAY02', 'PAYMENT_X',    $CNTPAY02_PAYM_X,     #DW)
  do Get_Field_Information ('CNTPAY02', 'PMT_TERM',     $CNTPAY02_PMT_TERM,   #DW)
  do Get_Field_Information ('CNTPAY02', 'RCD_NO',       $CNTPAY02_RCD_NO,     #DW)
  do Get_Field_Information ('CNTPAY02', 'RENEWAL',      $CNTPAY02_RENEWAL,    #DW)
  do Get_Field_Information ('CNTPAY02', 'RENEWALS',     $CNTPAY02_RENEWALS,   #DW)
  do Get_Field_Information ('CNTPAY02', 'REPORT_TITLE', $REPORTTITLE,         #DW)
  do Get_Field_Information ('CNTPAY02', 'STATUS_MSG1',  $CNTPAY02_STATUS_MSG1,#DW)
  do Get_Field_Information ('CNTPAY02', 'STATUS_MSG2',  $CNTPAY02_STATUS_MSG2,#DW)
  do Get_Field_Information ('CNTPAY02', 'STATUS_MSG3',  $CNTPAY02_STATUS_MSG3,#DW)
  do Get_Field_Information ('CNTPAY02', 'THRU',         $CNTPAY02_THRU,       #DW)
  do Get_Field_Information ('CNTPAY02', 'TRAILER1',     $CNTPAY02_TRAILER1,   #DW)
  do Get_Field_Information ('CNTPAY02', 'TRAILER2',     $CNTPAY02_TRAILER2,   #DW)
  do Get_Field_Information ('CNTPAY02', 'TRAILER3',     $CNTPAY02_TRAILER3,   #DW)
  do Get_Field_Information ('CNTPAY02', 'CONTRACT',     $CNTPAY02_CONTRACT,   #DW)

end-procedure



!******************************************************************************
! Procedure: PROMPTS                                                          *
! Descr:     Prompts for all input parameters in the event the program is run *
!            directly from SQR.  In normal use, this should not happen.       *
!                                                                             *
! Called by: HOUSEKEEPING                                                     *
!******************************************************************************
begin-procedure PROMPTS

   input $Company Maxlen=3 'Input Company' Type=Char
   uppercase $Company

   input $Paygroup Maxlen=3 'Input Paygroup' Type=Char
   uppercase $Paygroup

   input $Renewal_Days_Out Maxlen=2 'Input # of days of Contracts to Renew'
         Type=Integer
   move $Renewal_Days_Out to #Renewal_Days_Out
   if #Renewal_Days_Out = 0
      move 1 to #Renewal_Days_Out
   end-if

end-procedure



!******************************************************************************
! Procedure: GET-VALUES                                                       *
! Descr:     Retrives run control varibles from process scheduler.            *
!                                                                             *
! Called by: HOUSEKEEPING                                                     *
!******************************************************************************
begin-procedure GET-VALUES

   let $Company          = $RC_PAYINIT.COMPANY
   let $Paygroup         = $RC_PAYINIT.PAYGROUP
   let #Renewal_Days_Out = #RC_PAYINIT.RENEWAL_DAYS_OUT

end-procedure GET-VALUES



!******************************************************************************
! Procedure: PRINT-REPORT-HEADER                                              *
! Descr:     Prints Company, Paygroup, and Renewal Period Header data.        *
!                                                                             *
! Called by: HOUSEKEEPING                                                     *
!******************************************************************************
begin-procedure PRINT-REPORT-HEADER

   do GET-CURRENT-DATETIME

   let $Indent = '   '
   let $Renewal_Days_Out = edit(#Renewal_Days_Out,'999')

   let $Header_1_Msg = $CNTPAY02_HDR_MSG1 || ' ' ||    
                       $Company           || ',  Paygroup: ' || 
                       $Paygroup

   let $Header_2_Msg = $CNTPAY02_HDR_MSG2 || ' ' ||    
                       $Renewal_Begin_dt  || ' ' || 
                       $CNTPAY02_THRU     || ' ' || 
                       $Renewal_End_Dt                 

   let $Status_1_Msg = $CNTPAY02_STATUS_MSG1 || ' ' || $SysDateTime
   let $Status_2_Msg = $CNTPAY02_STATUS_MSG2 || ' ' || 
                       $Renewal_Days_Out               

   print $Header_1_Msg  (+1,0,0) Center
   print $Header_2_Msg  (+1,0,0) Center
   print '    '         (+2,1,1)

   display $Indent         noline
   display $Status_1_Msg
   display ' '
   display $Indent         noline
   display $Header_1_Msg
   display $Indent         noline
   display $Header_2_Msg
   display ' '
   display $Indent         noline
   display $Status_2_Msg

end-procedure PRINT-REPORT-HEADER



!******************************************************************************
! Procedure: MAINLINE                                                         *
! Descr:     Read all txn record as processed by the AE program HP_CNTPAY02   *
!            and report on each txn.                                          *
!                                                                             *
! Called by: REPORT (main program)                                            *
!******************************************************************************
begin-procedure MAINLINE

let $Indent = ''

let $err-statement1 = 'CNTPAY02.SQR, Select Error- MAINLINE'
let $err-statement2 = 'Bind Variables - Company: '||$Company||
                                    ', Paygroup: '||$Paygroup

LET $FIRST_TIME          = 'Y'
let $J_EMPLID            = &TXN.EMPLID
let #J_EMPL_RCD          = &TXN.EMPL_RCD
let #C_CONTRACT_AMT      = &TXN.ANNUAL_RT
let #N_CONTRACT_AMT      = &TXN.ANNUAL_RT
let $C_PAYMENT_TERM      = &TXN.PAYMENT_TERM
let $ERROR_CODE          = &TXN.ERROR_CODE
let #C_Cnt_Renewal_Count = &TXN.CNT_RENEWAL_COUNT
let #N_Cnt_Renewal_Count = &TXN.CNT_RENEWAL_COUNT
let #CT_Processed        = 0
let #CT_In_Error         = 0

begin-SELECT on-error=Error-Display
TXN.PROCESS_INSTANCE
TXN.EMPLID
TXN.EMPL_RCD
TXN.PROCESS_SWITCH
TXN.CREATED_DTTM
TXN.PROCESSED
TXN.ERROR_CODE
TXN.EFFDT_OTH
TXN.JOB_EFFDT
TXN.NEW_EFFDT
TXN.EFFSEQ
TXN.EMPL_STATUS
TXN.FREQUENCY_TYPE
TXN.HP_TRACK_ACTUALS
TXN.CONTRACT_BEGIN_DT
TXN.CONTRACT_END_DT
TXN.PAYMENT_BEGIN_DT
TXN.PAYMENT_END_DT
TXN.PAYMENT_TERM
TXN.ANNUAL_RT
TXN.CNT_RENEWAL_COUNT

   IF $FIRST_TIME = 'Y'
      LET $FIRST_TIME = 'N'
   ELSE
      IF &TXN.PROCESS_SWITCH = '1'

         !--- PRINT THE PREVIOUS EMPLOYEE ---
         DO SET-WRITE-REPORT-LINE

         !--------- CLEAR VARIABLES -----------
         let $J_EMPLID            = &TXN.EMPLID
         let #J_EMPL_RCD          = &TXN.EMPL_RCD
         let #C_CONTRACT_AMT      = &TXN.ANNUAL_RT
         let #N_CONTRACT_AMT      = &TXN.ANNUAL_RT
         let $C_PAYMENT_TERM      = &TXN.PAYMENT_TERM
         let $ERROR_CODE          = &TXN.ERROR_CODE
         let #C_Cnt_Renewal_Count = &TXN.CNT_RENEWAL_COUNT
         let #N_Cnt_Renewal_Count = &TXN.CNT_RENEWAL_COUNT
      END-IF
   END-IF

   IF &TXN.PROCESS_SWITCH = '1'
      let $J_EMPLID       = &TXN.EMPLID
      let #J_EMPL_RCD     = &TXN.EMPL_RCD
      let #C_CONTRACT_AMT = &TXN.ANNUAL_RT
      let #N_CONTRACT_AMT = &TXN.ANNUAL_RT

      let $C_Effdt               = &TXN.JOB_EFFDT
      let $C_Contract_Begin_Dt   = &TXN.CONTRACT_BEGIN_DT
      let $C_Contract_End_Dt     = &TXN.CONTRACT_END_DT
      let $C_Payment_Begin_Dt    = &TXN.PAYMENT_BEGIN_DT
      let $C_Payment_End_Dt      = &TXN.PAYMENT_BEGIN_DT 

      let #C_Cnt_Renewal_Count = &TXN.CNT_RENEWAL_COUNT
      let $C_PAYMENT_TERM = &TXN.PAYMENT_TERM
      let $ERROR_CODE     = &TXN.ERROR_CODE

      let #CT_Processed   = #CT_Processed + 1

      if &TXN.ERROR_CODE <> '0'
         let #CT_In_Error = #CT_In_Error + 1
      end-if

   ELSE  !-- PROCESS_SWITCH MUST BE A '2'
      let $N_Effdt               = &TXN.NEW_EFFDT
      let $N_Contract_Begin_Dt   = &TXN.CONTRACT_BEGIN_DT
      let $N_Contract_End_Dt     = &TXN.CONTRACT_END_DT
      let $N_Payment_Begin_Dt    = &TXN.PAYMENT_BEGIN_DT
      let $N_Payment_End_Dt      = &TXN.PAYMENT_BEGIN_DT 

      let #N_Cnt_Renewal_Count = &TXN.CNT_RENEWAL_COUNT

   END-IF

FROM PS_HPCNTPAY02_TXN TXN
WHERE TXN.PROCESS_INSTANCE = #prcs_job_instance
ORDER BY EMPLID, EMPL_RCD, PROCESS_SWITCH
end-SELECT

IF $FIRST_TIME = 'N'
   !--- PRINT THE LAST EMPLOYEE ---
   DO SET-WRITE-REPORT-LINE
END-IF

end-procedure



!******************************************************************************
! Procedure: SET-WRITE-REPORT-LINE                                            *
! Descr:     Prints two lines to the processing report showing current and    *
!            and renewed contract information.                                *
!                                                                             *
! Called by: WRAPUP                                                           *
!******************************************************************************
begin-procedure SET-WRITE-REPORT-LINE

   let $J_Empl_Rcd          = edit(#J_Empl_Rcd,'99')
   let $C_Contract_Amt      = edit(#C_Contract_Amt,'9,999,999.99')
   let $N_Contract_Amt      = edit(#N_Contract_Amt,'9,999,999.99')
   let $C_Cnt_Renewal_Count = edit(#C_Cnt_Renewal_Count,'99')
   let $N_Cnt_Renewal_Count = edit(#N_Cnt_Renewal_Count,'99')

   evaluate $C_Payment_Term
      when = 'A'
         let $Payment_Disp = $CNTPAY02_PAYM_A   
      when = 'C'
         let $Payment_Disp = $CNTPAY02_CONTRACT 
      when = 'L'
         let $Payment_Disp = $CNTPAY02_PAYM_L   
      when = 'X'
         let $Payment_Disp = $CNTPAY02_PAYM_X   
   end-evaluate

   show 'gwc' $c_payment_term '/' $payment_disp '/'

   let $Error_Msg_Common    = $CNTPAY02_ERROR_MSG

   evaluate $Error_Code
      when = '0'
         let $Error_Cond = $CNTPAY02_ERR_COND0
      when = '1'
         let $Error_Cond = $CNTPAY02_ERR_COND1
      when = '2'
         let $Error_Cond = $CNTPAY02_ERR_COND2
      when = '3'
         let $Error_Cond = $CNTPAY02_ERR_COND3
      when = '4'
         let $Error_Cond = $CNTPAY02_ERR_COND4
   end-evaluate

   if $ERROR_CODE = '0'  ! Renewal Valid
      print $J_EmplID             (+2,5,10)
      print $J_Empl_Rcd           (,+3,05)
      print $CNTPAY02_CURRENT     (,+3,08)    
      print $C_Effdt              (,+3,11)
      print $C_Contract_Begin_Dt  (,+3,11)
      print $C_Contract_End_Dt    (,+3,11)
      print $C_Payment_Begin_Dt   (,+3,11)
      print $C_Payment_End_Dt     (,+3,11)
      print $C_Contract_Amt       (,+3,12)
      print $Payment_Disp         (,+3,08)
      print $C_Cnt_Renewal_Count  (,+7,06)
      print $CNTPAY02_RENEWAL     (+1,26,08)  
      print $N_Effdt              (,+3,11)
      print $N_Contract_Begin_Dt  (,+3,11)
      print $N_Contract_End_Dt    (,+3,11)
      print $N_Payment_Begin_Dt   (,+3,11)
      print $N_Payment_End_Dt     (,+3,11)
      print $N_Contract_Amt       (,+3,12)
      print $Payment_Disp         (,+3,08)
      print $N_Cnt_Renewal_Count  (,+7,06)
   else
      print $J_EmplID             (+2,5,10)
      print $J_Empl_Rcd           (,+3,05)
      print $CNTPAY02_CURRENT     (,+3,08)    
      print $C_Effdt              (,+3,11)
      print $C_Contract_Begin_Dt  (,+3,11)
      print $C_Contract_End_Dt    (,+3,11)
      print $C_Payment_Begin_Dt   (,+3,11)
      print $C_Payment_End_Dt     (,+3,11)
      print $C_Contract_Amt       (,+3,12)
      print $Payment_Disp         (,+3,08)
      print $C_Cnt_Renewal_Count  (,+7,06)
      print $Error_Msg_Common     (+1,26,0)
      print $Error_Cond           (,+1,0)
   end-if

end-procedure SET-WRITE-REPORT-LINE
!******************************************************************************
! Procedure: PRINT-REPORT-TRAILER                                             *
! Descr:     Prints and Displays Process Ending status and trailer data       *
!                                                                             *
! Called by: WRAPUP                                                           *
!******************************************************************************
begin-procedure PRINT-REPORT-TRAILER

   do GET-CURRENT-DATETIME
   let $CT_Processed = edit(#CT_Processed,'99999')   !???
   let $CT_In_Error  = edit(#CT_In_Error,'99999')    !???

   let $Indent = '   '
   let $Trailer_1_Msg = $CNTPAY02_TRAILER1 || ' ' ||                 
                        $Company           || ',  Paygroup: ' ||
                        $Paygroup

   let $Trailer_2_Msg = $CNTPAY02_TRAILER2    || ' ' || $CT_Processed
   let $Trailer_3_Msg = $CNTPAY02_TRAILER3    || ' ' || $CT_In_Error 
   let $Status_3_Msg  = $CNTPAY02_STATUS_MSG3 || ' ' || $SysDateTime 

   print $Trailer_1_Msg  (+3,0,0) Center
   print $Trailer_2_Msg  (+2,0,0) Center
   print $Trailer_3_Msg  (+1,0,0) Center

   display ' '
   display ' '
   display $Indent         noline
   display $Trailer_1_Msg
   display ' '
   display $Indent         noline
   display $Trailer_2_Msg
   display $Indent         noline
   display $Trailer_3_Msg
   display ' '
   display $Indent         noline
   display $Status_3_Msg
   display ' '
   display ' '

end-procedure PRINT-REPORT-TRAILER



!******************************************************************************
! Procedure: DELETE-RUN-CONTROL                                               *
! Descr:     Deletes the run control record for the process.                  *
!                                                                             *
! Called by: WRAPUP                                                           *
!******************************************************************************
begin-procedure DELETE-RUN-CONTROL

begin-SQL on-error=DUMMY-PROC
DELETE FROM PS_RC_PAYINIT
WHERE OPRID       = $Prcs_OprID
  AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-SQL

begin-SQL on-error=DUMMY-PROC
DELETE FROM PSPRCSRUNCNTL
WHERE OPRID        = $Prcs_OprID
AND   RUNCNTLID    = $Prcs_Run_Cntl_ID
end-SQL

end-procedure



!******************************************************************************
! Procedure: WRAPUP                                                           *
! Descr:     This paragraph ends the report process and updates the status of *
!            the job in the process scheduler.                                *
!                                                                             *
! Called by: REPORT (main SQR program)                                        *
!******************************************************************************
begin-procedure WRAPUP

   do PRINT-REPORT-TRAILER
   do DELETE-RUN-CONTROL
   do RESET
   do STDAPI-TERM

end-procedure WRAPUP



!******************************************************************************
! Procedure: DUMMY-PROC                                                       *
! Descr:     This is a dummy paragraph to sidestep SQL errors while deleting  *
!            run control records.                                             *
!                                                                             *
! Called by: DELETE-RUN-CONTROL                                               *
!******************************************************************************
begin-procedure DUMMY-PROC

   let $Dummy_Var = 1

end-procedure DUMMY-PROC



!******************************************************************************
! SQCs                                                                        *
!******************************************************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stderror.sqc'  !Routine for error display
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'datewrk.sqc'   !Routines for working with dates
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get run control parameters.  This will change
                         !depending on the type of report you are running
                         !and which type of parameters are being used to
                         !run the report.
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language    
