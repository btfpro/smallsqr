! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! SYSLANG: PS Language Table Edits report
!
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                                *
!***********************************************************************
!                                                                      *
!----------------------------------------------------------------------!
! Procedure: SYSLANG-Main                                              !
!----------------------------------------------------------------------!
begin-procedure SYSLANG-Main

        let $ErrorFound = 'N'
        let $AuditTitle = 'Language Definition Audit'
        do SYSLANG-01
        do SYSLANG-02
        do SYSLANG-03
        do SYSLANG-04
        do SYSLANG-05
        do SYSLANG-07
        do SYSLANG-08
        do SYSLANG-09
        !do SYSLANG-10  !same as swap-2 in swpaudit
        !do SYSLANG-11  !same as swap-3 in swpaudit
        !do SYSLANG-12  !same as swap-4 in swpaudit
        do SYSLANG-13
        !do SYSLANG-14  !same as swap-5 in swpaudit
        do SYSLANG-15
        do SYSLANG-16
        !do SYSLANG-17 !move to swpaudit as swap-8
        !do SYSLANG-18

        if $ErrorFound = 'N'
            do PrintSummaryRecord
        end-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSLANG-01                          !
!                                                                      !
! Descr:     System table audit against PSRECDEFNLANG table:           !
!                                                                      !
!            SYSLANG-01: Verify No Base Language Records are in the     !
!                       Foreign Language Table                         !
!----------------------------------------------------------------------!
begin-procedure SYSLANG-01
   move 0 to #rows
   let $AuditDescr = '(SYSLANG-01) Base Language Records found '
        || 'in the PSRECDEFNLANG table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #numofhdr        =  2

   put 'Record Name'          #Start1 21 into printarray(0)
   put 'Base Language Code'   #Start2 31 into printarray(1)


begin-SELECT on-Error=Rpt-SQL-Error
A.LANGUAGE_CD      &SysLang01_Language_CD
A.RECNAME          &SysLang01_RecName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
        or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &SysLang01_RecName      (+1, #Start1)
   print &SysLang01_Language_CD  ( 0, #Start2)

FROM PSRECDEFNLANG A
WHERE A.LANGUAGE_CD =
  (SELECT B.LANGUAGE_CD FROM PSOPTIONS B)

end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSLANG-02                          !
!                                                                      !
! Descr:     System table audit against PSDBFIELDLANG table:           !
!                                                                      !
!            SYSLANG-02: Verify No Base Language Fields are in the      !
!                       Foreign Language Table                         !
!----------------------------------------------------------------------!
begin-procedure SYSLANG-02
   move 0 to #rows
   let $AuditDescr = '(SYSLANG-02) Base Language Fields found '
        || 'in the PSDBFIELDLANG table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if



   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #numofhdr        =  2

   put 'Field Name'           #Start1 21 into printarray(0)
   put 'Base Language Code'   #Start2 31 into printarray(1)


begin-SELECT on-Error=Rpt-SQL-Error
A.LANGUAGE_CD      &SysLang02_Language_CD
A.FIELDNAME        &SysLang02_FldName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
         or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &SysLang02_FldName      (+1, #Start1)
   print &SysLang02_Language_CD  ( 0, #Start2)

FROM PSDBFIELDLANG A
WHERE A.LANGUAGE_CD =
  (SELECT B.LANGUAGE_CD FROM PSOPTIONS B)

end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSLANG-03                !
!                                                                      !
! Descr:      System table audit against PSRECDEFNLANG table:          !
!                                                                      !
!            SYSLANG-03: Verify No Foreign Language Records exist in    !
!                       PSRECDEFNLANG without the associated Base      !
!                       Language Records in PSRECDEFN                  !
!----------------------------------------------------------------------!
begin-procedure SYSLANG-03
   move 0 to #rows
   let $AuditDescr = '(SYSLANG-03) Foreign Language Records found '
        || 'in PSRECDEFNLANG table without related Base Records '
        || 'from PSRECDEFN:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #numofhdr        =  2

   put 'Record Name'             #Start1 21 into printarray(0)
   put 'Foreign Language Code'   #Start2 31 into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
A.LANGUAGE_CD      &SysLang03_Language_CD
A.RECNAME          &SysLang03_RecName

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
         or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &SysLang03_RecName      (+1, #Start1)
   print &SysLang03_Language_CD  ( 0, #Start2)

FROM PSRECDEFNLANG A
WHERE NOT EXISTS
  (SELECT 'X'
   FROM PSRECDEFN B
   WHERE A.RECNAME = B.RECNAME)
AND A.LANGUAGE_CD <> (SELECT LANGUAGE_CD FROM PSOPTIONS)

end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSLANG-04             !
!                                                                      !
! Descr:     System table audit against PSDBFIELDLANG table:           !
!                                                                      !
!            SYSLANG-04: Verify No Foreign Language Fields exist in     !
!                       PSDBFIELDLANG without the related Base         !
!                       Language Fields in PSDBFIELD                   !
!----------------------------------------------------------------------!
begin-procedure SYSLANG-04
   move 0 to #rows
   let $AuditDescr = '(SYSLANG-04) Foreign Language Fields found '
        || 'in the PSDBFIELDLANG table without related Base Fields '
        || 'from PSDBFIELD:'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #numofhdr        =  2

   put 'Field Name'              #Start1 21 into printarray(0)
   put 'Foreign Language Code'   #Start2 31 into printarray(1)


begin-SELECT on-Error=Rpt-SQL-Error
A.LANGUAGE_CD      &SysLang04_Language_CD
A.FIELDNAME        &SysLang04_FldName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
          or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &SysLang04_FldName      (+1, #Start1)
   print &SysLang04_Language_CD  ( 0, #Start2)

FROM PSDBFIELDLANG A
WHERE NOT EXISTS
  (SELECT 'X'
   FROM PSDBFIELD B
   WHERE A.FIELDNAME = B.FIELDNAME)
AND A.LANGUAGE_CD <> (SELECT LANGUAGE_CD FROM PSOPTIONS)
AND A.LANGUAGE_CD = (SELECT LANGUAGE_CD FROM PSOPTIONS)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!-----------------------------------------------------------------------!
! Procedure: SYSLANG-05                                                 !
!                                                                       !
! Descr:     System table audit against PSXLATITEM table:               !
!                                                                       !
!            SYSLANG-05: Verify No Foreign Language Xlat Fields exist   !
!                       in PSXLATITEMLANG without related Base Language !
!                       Xlat Fileds in the PSXLATITEM                   !
!-----------------------------------------------------------------------!
begin-procedure SYSLANG-05
   move 0 to #rows
   let $AuditDescr = '(SYSLANG-05) Foreign Language Translate Fields '
        || 'found in PSXLATITEMLANG without related Base '
        || 'Language Translate Fields:'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = 50
   let #Start4          = 62
   let #numofhdr        =  4

   put 'Field Name'              #Start1 21 into printarray(0)
   put 'Language Code'           #Start2 21 into printarray(1)
   put 'XLAT Value'              #Start3 10 into printarray(2)
   put 'Effective Date'          #Start4 21 into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.LANGUAGE_CD      &SysLang05_Language_CD
A.FIELDNAME        &SysLang05_FldName
A.FIELDVALUE       &SysLang05_FldValue
A.EFFDT            &SysLang05_Effdt


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
        or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &SysLang05_FldName      (+1, #Start1)
   print &SysLang05_Language_CD  ( 0, #Start2)
   print &SysLang05_FldValue     ( 0, #Start3)
   print &SysLang05_Effdt        ( 0, #Start4) edit {PTRPTDATE}

FROM PSXLATITEMLANG A

WHERE NOT EXISTS
  (SELECT 'X'
   FROM PSXLATITEM B
   WHERE A.FIELDNAME = B.FIELDNAME
   AND A.FIELDVALUE = B.FIELDVALUE
   AND A.EFFDT = B.EFFDT)

end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSLANG-07                          !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SYSLANG-07: Verify there are No Invalid Related Language   !
!                       Records                                        !
!----------------------------------------------------------------------!
begin-procedure SYSLANG-07
   move 0 to #rows
   let $AuditDescr = '(SYSLANG-07) Related Language Records Which Are ' ||
                        'Not Valid Records'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = 59
   let #numofhdr        =  3

   put 'Record Name'                  #Start1 21 into printarray(0)
   put 'Invalid Rel Language Name'    #Start2 31 into printarray(1)
   put 'Ownerid'                      #Start3  7 into printarray(2)



begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME                 &SysLang07_Recname
A.RELLANGRECNAME          &SysLang07_Relname
A.OBJECTOWNERID           &SysLang07_ObjectOwnerid


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
          or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &SysLang07_RecName      (+1, #Start1)
   print &SysLang07_RelName      ( 0, #Start2)
   print &SysLang07_ObjectOwnerid ( 0,#Start3)

FROM PSRECDEFN A
WHERE A.RELLANGRECNAME <> ' '
AND A.RELLANGRECNAME NOT IN
    (SELECT B.RECNAME FROM PSRECDEFN B)
ORDER BY A.RECNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
!----------------------------------------------------------------------!
! Procedure: SYSLANG-08                   !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SYSLANG-08: Identify related lang records that are         !
!            effective dated but do not have a EFFDT field defined     !
!                                                                      !
!----------------------------------------------------------------------!
begin-procedure SYSLANG-08
   move 0 to #rows
   let $AuditDescr = '(SYSLANG-08) The Following Rel Lang Records are ' ||
                     'effective dated but do not have an EFFDT field defined'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = 59
   let #numofhdr        =  3

   put 'Record Name'             #Start1 21 into printarray(0)
   put 'Rel Lang Rec W/O EFFDT'  #Start2 31 into printarray(1)
   put 'Ownerid'                 #Start3  7 into printarray(2)



begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME                 &SysLang08_Recname
A.RELLANGRECNAME          &SysLang08_Relname
A.OBJECTOWNERID           &SysLang08_ObjectOwnerid


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
              or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &SysLang08_RecName      (+1, #Start1)
   print &SysLang08_RelName      ( 0, #Start2)
   print &SysLang08_ObjectOwnerid ( 0,#Start3)

FROM PSRECDEFN A, PSRECFIELDDB B
WHERE
#ifdef DB2
    SUBSTR(DIGITS((DECIMAL(B.USEEDIT, 11, 1))/2), 17, 1) = '5'
#else
    #ifdef ORACLE
        TRUNC(B.USEEDIT/2, 0)*2 <> B.USEEDIT
    #else
        #ifdef DB2UNIX
         INTEGER(B.USEEDIT/2)*2 <> B.USEEDIT
        #else
          ROUND(B.USEEDIT/2, 0)*2 <> B.USEEDIT
        #endif
    #endif
#endif
AND A.RELLANGRECNAME <> ' '
AND A.RECNAME = B.RECNAME
AND B.FIELDNAME = 'EFFDT'
AND A.RELLANGRECNAME NOT IN
    (SELECT C.RECNAME FROM PSRECFIELDDB C WHERE C.FIELDNAME='EFFDT')
ORDER BY A.RECNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSLANG-09                                                !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SYSLANG-09: Identify related language records Pointing to  !
!            another related language records.                         !
!----------------------------------------------------------------------!
begin-procedure SYSLANG-09

   let $AuditDescr = '(SYSLANG-09) The Following Related Language ' ||
                     'Record(s) Point to another Related Language Record'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = 59
   let #Start4                  = 93
   let #numofhdr        =  4

   put 'Record Name'                             #Start1 21 into printarray(0)
   put 'Rel Language Record'                     #Start2 31 into printarray(1)
   put 'Referenced Rel Language Record'          #Start3 31 into printarray(2)
   put 'Ownerid'                                 #Start4  7 into printarray(3)


begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME                 &SysLang09_Recname
A.RELLANGRECNAME          &SysLang09_Relname
B.RELLANGRECNAME          &SysLang09_Relnameref
A.OBJECTOWNERID           &SysLang09_ObjectOwnerid


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
          or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &SysLang09_RecName      (+1, #Start1)
   print &SysLang09_RelName      ( 0, #Start2)
   print &SysLang09_RelNameref   ( 0, #Start3)
   print &SysLang09_ObjectOwnerid  ( 0, #Start4)

FROM PSRECDEFN A, PSRECDEFN B
WHERE A.RELLANGRECNAME <> ' '
AND A.RELLANGRECNAME = B.RECNAME
AND B.RELLANGRECNAME <>' '
ORDER BY A.RECNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSLANG-10                     !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SYSLANG-10: Identify related language records that         !
!            Contain a LANGUAGE_CD Field That Is Not A Key             !
!----------------------------------------------------------------------!
begin-procedure SYSLANG-10

   let $AuditDescr = '(SYSLANG-10) The Following Related Language Record(s) '||
                     'do not contain LANGUAGE_CD as a key field.'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = 59
   let #numofhdr        =  3

   put 'Record Name'              #Start1 21 into printarray(0)
   put 'Rel Language Record'      #Start2 31 into printarray(1)
   put 'Ownerid'                  #Start3  7 into printarray(2)



begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME                 &SysLang10_Recname
A.RELLANGRECNAME          &SysLang10_Relname
A.OBJECTOWNERID           &SysLang10_ObjectOwnerid

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
         or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &SysLang10_RecName      (+1, #Start1)
   print &SysLang10_RelName      ( 0, #Start2)
   print &SysLang10_ObjectOwnerid ( 0, #Start3)


FROM PSRECDEFN A
WHERE A.RELLANGRECNAME <> ' '
AND NOT EXISTS (SELECT 'X'  FROM PSRECFIELDDB K
WHERE
#ifdef DB2
    SUBSTR(DIGITS((DECIMAL(K.USEEDIT, 11, 1))/2), 17, 1) = '5'
#else
    #ifdef ORACLE
        TRUNC(K.USEEDIT/2, 0)*2 <> K.USEEDIT
    #else
        #ifdef DB2UNIX
           INTEGER(K.USEEDIT/2)*2 <> K.USEEDIT
        #else
           ROUND(K.USEEDIT/2, 0)*2 <> K.USEEDIT
        #endif
    #endif
#endif
AND K.RECNAME = A.RELLANGRECNAME
AND K.FIELDNAME='LANGUAGE_CD')


ORDER BY 1
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
!----------------------------------------------------------------------!
! Procedure: SYSLANG-11                                                !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SYSLANG-11: Identify related language view that           !
!            Have The Wrong Structure Defined                          !
!----------------------------------------------------------------------!

begin-procedure SYSLANG-11

   let $AuditDescr = '(SYSLANG-11) The Following Related Language View(s) ' ||
                     'Have The Wrong Structure Defined'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = #Start2 + 24
   let #Start4          = #Start3 + 24
   let #numofhdr        =  4

   put 'Record Name'               #Start1 21 into printarray(0)
   put 'Rel Language Record'       #Start2 21 into printarray(1)
   put 'Unmatched Field'           #Start3 20 into printarray(2)
   put 'Ownerid'                   #Start4  7 into printarray(3)


begin-SELECT on-Error=Rpt-SQL-Error
R.RECNAME                 &SysLang11_Recname
R.RELLANGRECNAME          &SysLang11_Relname
K.FIELDNAME               &SysLang11_FieldName
R.OBJECTOWNERID           &SysLang11_ObjectOwnerid


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
       or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &SysLang11_RecName      (+1, #Start1)
   print &SysLang11_RelName      ( 0, #Start2)
   print &SysLang11_FieldName    ( 0, #Start3)
   print &SysLang11_ObjectOwnerid ( 0, #Start4)

FROM PSRECDEFN R, PSRECFIELDDB K
WHERE R.RELLANGRECNAME <> ' '
AND R.RECTYPE in (1, 5, 6)
AND K.RECNAME = R.RELLANGRECNAME
AND K.FIELDNAME <> 'LANGUAGE_CD'
AND NOT EXISTS (SELECT 'X'  FROM PSRECFIELDDB P
WHERE P.RECNAME = R.RECNAME
AND P.FIELDNAME=K.FIELDNAME)
ORDER BY 1
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
!----------------------------------------------------------------------!
! Procedure: SYSLANG-12                                                !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SYSLANG-12: Identify related language tables that          !
!            Have The Wrong Key Structure Defined                      !
!----------------------------------------------------------------------!

begin-procedure SYSLANG-12

   let $AuditDescr = '(SYSLANG-12) The Following Related Language Table(s) '||
                     'Have The Wrong Key Structure Defined'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = #Start2 + 24
   let #Start4          = #Start3 + 24
   let #Start5          = #Start4 + 27
   let #numofhdr        = 5

   put 'Record Name'                             #Start1 21 into printarray(0)
   put 'Rel Language Record'                     #Start2 21 into printarray(1)
   put 'Unmatched Key Field'                     #Start3 20 into printarray(2)
   put 'Exists Only On'                          #Start4 21 into printarray(3)
   put 'Ownerid'                                 #Start5  7 into printarray(4)


begin-SELECT on-Error=Rpt-SQL-Error
R.RECNAME                 &SysLang12_Recname
R.RELLANGRECNAME          &SysLang12_Relname
K.FIELDNAME               &SysLang12_FieldName
'Base Record            ' &SysLang12_LIT
R.OBJECTOWNERID           &SysLang12_ObjectOwnerid


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
         or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &SysLang12_RecName      (+1, #Start1)
   print &SysLang12_RelName      ( 0, #Start2)
   print &SysLang12_FieldName    ( 0, #Start3)
   print &SysLang12_LIT          ( 0, #Start4)
   print &SysLang12_ObjectOwnerid ( 0, #Start5)

FROM PSRECDEFN R, PSRECFIELDDB K
where R.RECTYPE in (0, 7)
and R.RELLANGRECNAME <> ' '
and K.RECNAME = R.RECNAME
and
#ifdef DB2
    SUBSTR(DIGITS((DECIMAL(K.USEEDIT, 11, 1))/2), 17, 1) = '5'
#else
    #ifdef ORACLE
        TRUNC(K.USEEDIT/2, 0)*2 <> K.USEEDIT
    #else
        #ifdef DB2UNIX
           INTEGER(K.USEEDIT/2)*2 <> K.USEEDIT
        #else
           ROUND(K.USEEDIT/2, 0)*2 <> K.USEEDIT
        #endif
    #endif
#endif
and NOT EXISTS  (select 'X' from PSRECFIELDDB A
where A.RECNAME = R.RELLANGRECNAME
and A.FIELDNAME = K.FIELDNAME
and
#ifdef DB2
    SUBSTR(DIGITS((DECIMAL(A.USEEDIT, 11, 1))/2), 17, 1) = '5')
#else
    #ifdef ORACLE
       TRUNC(A.USEEDIT/2, 0)*2 <> A.USEEDIT)
    #else
       #ifdef DB2UNIX
         INTEGER(A.USEEDIT/2)*2 <> A.USEEDIT)
       #else
         ROUND(A.USEEDIT/2, 0)*2 <> A.USEEDIT)
       #endif
    #endif
#endif
UNION
SELECT
R.RECNAME,
R.RELLANGRECNAME,
K.FIELDNAME,
'Related Language Record',
R.OBJECTOWNERID
from  PSRECDEFN R, PSRECFIELDDB K
where R.RECTYPE in (0, 7)
and R.RELLANGRECNAME <> ' '
and K.RECNAME = R.RELLANGRECNAME
and
#ifdef DB2
    SUBSTR(DIGITS((DECIMAL(K.USEEDIT, 11, 1))/2), 17, 1) = '5'
#else
    #ifdef ORACLE
        TRUNC(K.USEEDIT/2, 0)*2 <> K.USEEDIT
    #else
        #ifdef DB2UNIX
          INTEGER(K.USEEDIT/2)*2 <> K.USEEDIT
        #else
          ROUND(K.USEEDIT/2, 0)*2 <> K.USEEDIT
        #endif
    #endif
#endif
and K.FIELDNAME <> 'LANGUAGE_CD'
and NOT EXISTS   (select 'X' from PSRECFIELDDB B
where B.RECNAME = R.RECNAME
and B.FIELDNAME = K.FIELDNAME
and
#ifdef DB2
    SUBSTR(DIGITS((DECIMAL(B.USEEDIT, 11, 1))/2), 17, 1) = '5')
#else
    #ifdef ORACLE
        TRUNC(B.USEEDIT/2, 0)*2 <> B.USEEDIT)
    #else
        #ifdef DB2UNIX
           INTEGER(B.USEEDIT/2)*2 <> B.USEEDIT)
        #else
           ROUND(B.USEEDIT/2, 0)*2 <> B.USEEDIT)
        #endif
    #endif
#endif
order by 1, 2, 4
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
!----------------------------------------------------------------------!
! Procedure: SYSLANG-13                                                !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SYSLANG-13: Identify related language records that        !
!            Have More Than One Base Record Defined                    !
!----------------------------------------------------------------------!

begin-procedure SYSLANG-13

   let $AuditDescr = '(SYSLANG-13) The Following Related Language ' ||
                     'Record(s) Have More Than One Base Record Defined'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = #Start2 + 25
   let #numofhdr        =  3

   put 'Rel Language Record'      #Start1 21 into printarray(0)
   put 'Defined to Base Records'  #Start2 21 into printarray(1)
   put 'Ownerid'                  #Start3  7 into printarray(2)


begin-SELECT on-Error=Rpt-SQL-Error
A.RELLANGRECNAME          &SysLang13_Relname
A.RECNAME                 &SysLang13_Recname
A.OBJECTOWNERID           &SysLang13_ObjectOwnerid


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
          or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &SysLang13_RelName      (+1, #Start1)
   print &SysLang13_RecName       ( 0, #Start2)
   print &SysLang13_ObjectOwnerid ( 0, #Start3)

FROM  PSRECDEFN A
WHERE A.RELLANGRECNAME <> ' '
AND   A.RECTYPE   in (0, 7)
AND  EXISTS (SELECT B.RECNAME
FROM PSRECDEFN B
WHERE B.RELLANGRECNAME = A.RELLANGRECNAME
AND B.RECNAME <> A.RECNAME
AND B.RECTYPE IN (0, 7))
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if
end-procedure
!----------------------------------------------------------------------!
! Procedure: SYSLANG-14                                                !
!                                                                      !
! Descr:     System table audit against PSRECDEFN table:               !
!                                                                      !
!            SYSLANG-14: Identify related language RECORDS that        !
!            Have The Wrong Structure Defined                          !
!----------------------------------------------------------------------!

begin-procedure SYSLANG-14

   let $AuditDescr = '(SYSLANG-14) The Following Related Language Records ' ||
                     'Have The Wrong Structure Defined'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = #Start2 + 24
   let #Start4          = #Start3 + 24
   let #Start5          = #Start4 + 10
   let #numofhdr        = 4

   put 'Record Name'               #Start1 21 into printarray(0)
   put 'Rel Language Record'       #Start2 21 into printarray(1)
   put 'Unmatched Field'           #Start3 20 into printarray(2)
   put 'Ownerid'                   #Start4  7 into printarray(3)



begin-SELECT on-Error=Rpt-SQL-Error
R.RECNAME                 &SysLang14_Recname
R.RELLANGRECNAME          &SysLang14_Relname
K.FIELDNAME               &SysLang14_FieldName
K.USEEDIT                 &SysLang14_UseEdit
R.OBJECTOWNERID           &SysLang14_ObjectOwnerid


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
       or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &SysLang14_RecName      (+1, #Start1)
   print &SysLang14_RelName      ( 0, #Start2)
   print &SysLang14_FieldName    ( 0, #Start3)
   print &SysLang14_ObjectOwnerid ( 0, #Start4)

FROM PSRECDEFN R, PSRECFIELDDB K
WHERE R.RELLANGRECNAME <> ' '
AND R.RECTYPE in (0, 7)
AND K.RECNAME = R.RELLANGRECNAME
AND K.FIELDNAME <> 'LANGUAGE_CD'
AND NOT EXISTS (SELECT 'X'  FROM PSRECFIELDDB P
WHERE P.RECNAME = R.RECNAME
AND P.FIELDNAME=K.FIELDNAME)
ORDER BY 1
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if
end-procedure
!----------------------------------------------------------------------!
! Procedure: SYSLANG-15                                                !
!                                                                      !
! Descr:     System table audit against PSDBFLDLABLANG and PSDBFIELD:  !
!                                                                      !
!            SYSLANG-15: Identify related language fields in PSDBFLDLABLLANG         !
!            that are orphan rows.                                         !
!----------------------------------------------------------------------!

begin-procedure SYSLANG-15

   let $AuditDescr = '(SYSLANG-15) The Following Related Language field(s)'||
                     ' in PSDBFLDLABLLANG are orphaned'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if
  let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #numofhdr        =  2

   put 'Rel Language Field'      #Start1 21 into printarray(0)
   put 'Language Code'           #Start2 21 into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
A.FIELDNAME               &SYSLANG15_FieldName
A.LANGUAGE_CD             &SYSLANG15_LanguageCd


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
          or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &SysLang15_FieldName    (+1, #Start1)
   print &SysLang15_LanguageCd   ( 0, #Start2)

FROM PSDBFLDLABLLANG  A
WHERE NOT EXISTS (SELECT 'X'
FROM PSDBFIELD B
WHERE A.FIELDNAME = B.FIELDNAME)
ORDER BY 1, 2
end-SELECT

    do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SYSLANG-16                                              !
!                                                                      !
! Descr:     System table audit against PSOPRDEFN:  !
!                                                                      !
!            SYSLANG-16: Identify any invalid LANGUAGE CODE in PSOPRDEFN!
!----------------------------------------------------------------------!

begin-procedure SYSLANG-16

   let $AuditDescr = '(SYSLANG-16) Invalid language code found in PSOPRDEFN'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if
  let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #numofhdr        =  2

   put 'User ID'                #Start1 18 into printarray(0)
   put 'Language Code'           #Start2 18 into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID          &SYSLANG16_OPRID
A.LANGUAGE_CD        &SYSLANG16_LangCD


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
          or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &SYSLANG16_OPRID    (+1, #Start1)
   print &SYSLANG16_LangCD   ( 0, #Start2)

FROM PSOPRDEFN A 
WHERE 
     A.LANGUAGE_CD NOT IN (SELECT B.LANGUAGE_CD FROM PSLANGUAGES B)
end-SELECT

    do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SYSLANG-17                                              !
!                                                                      !
! Descr:     System table audit against PSRECDEFN:  !
!                                                                      !
!            SYSLANG-17: Identify any mismatch between the RECTYPE of base and RLR                                 !
!----------------------------------------------------------------------!

begin-procedure SYSLANG-17

!Set flag to Y to audit PPT owned records. Will check the records in PPLTOOLS only
!Set flag to N to audit all records in the DB

   let $flag = 'Y'

   if $flag = 'Y'
      let $AuditDescr = '(SYSLANG-17) -Informational Only- The Following PeopleTools owned base records and RLRs' ||
                     ' have different record types'
   else
       let $AuditDescr = '(SYSLANG-17) -Informational Only- The Following base records and RLRs' ||
                     ' have different record types'
    end-if

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if
  let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 25
   let #Start3          = #Start2 + 24
   let #Start4          = #Start3 + 28
   let #numofhdr        =  4
   let $quote = chr(39)

   put 'Base Record Name'      #Start1 18 into printarray(0)
   put 'Base Record Type'       #Start2 18 into printarray(1)
   put 'Rel Language Record Name'      #Start3 25 into printarray(2)
   put 'Rel Language Record Type'       #Start4 25 into printarray(3)

   if $flag = 'Y'
        let $where_clause = ' AND A.RECNAME IN (SELECT OBJECTVALUE1 FROM PSPROJECTITEM WHERE OBJECTTYPE = 0 AND PROJECTNAME = ' || $quote || 'PPLTOOLS' || $quote || ')'
   else
         let $where_clause = ''
    end-if

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME        &SYSLANG17_RecName1
A.RECTYPE        &SYSLANG17_RecType1
B.RECNAME               &SYSLANG17_RecName2
B.RECTYPE                 &SYSLANG17_RecType2


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
          or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &SYSLANG17_RecName1    (+1, #Start1)
   print &SYSLANG17_RecType1   ( 0, #Start2)
   print &SYSLANG17_RecName2    (0, #Start3)
   print &SYSLANG17_RecType2   ( 0, #Start4)

FROM PSRECDEFN A, PSRECDEFN B 
WHERE 
    (( A.RECTYPE=1 AND A.RELLANGRECNAME = B.RECNAME AND B.RECTYPE = 0 ) OR
    ( A.RECTYPE=0 AND A.RELLANGRECNAME = B.RECNAME AND B.RECTYPE = 1 ))
[$where_clause]
end-SELECT

    do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!-------------------------------------------------------------------------------------------------!
! Procedure: SYSLANG-18                                                                           !
!                                                                                                 !
! Descr:     System table audit against ALL_VIEWS in Oracle and INFORMATION_SCHEMA.VIEWS in MSS:  !
!                                                                                                 !
!            SYSLANG-18: Identify any views using PSPNLFIELDLANG.LBLTEXT                          !
!-------------------------------------------------------------------------------------------------!

begin-procedure SYSLANG-18

   let $AuditDescr = '(SYSLANG-18) -Informational Only- Views referencing PSPNLFIELDLANG.LBLTEXT'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #numofhdr        =  1

   put 'View Name'              #Start1 18 into printarray(0)

BEGIN-SELECT on-Error=Rpt-SQL-Error
A.SQLID
A.SQLTEXT

                  LET $view_name = &A.SQLID
                  LET $view_struct = &A.SQLTEXT
        DO PRINT_VIEWNAME  
FROM PSSQLTEXTDEFN A
WHERE 
       A.SQLTYPE = '2' 
AND A.SQLID <> 'PNLFIELD_LVW'
END-SELECT

    do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

begin-procedure PRINT_VIEWNAME 
LET #nPos1 = instr(upper($view_struct),'PSPNLFIELDLANG',1)
LET #nPos2 = instr(upper($view_struct),'LBLTEXT',1)

 if  #nPos1 <> 0 and #nPos2 <> 0 
   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y')
          or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1
  
   print $view_name (+1, #Start1)

 end-if
end-procedure

