!********************************************
! RDED001:  Retroactive Deduction Requests  *
!********************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2006/07/19:09:18:53                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
#define a 16                    ! emplid 16
#define b 6                     ! EMPL_RCD 6
#define c 15                    ! retroded_rqst_type 15
#define d 8                     ! retroded_pgm_id 8
#define e 8                     ! mass_retro_rqst_id 8
#define f 15                    ! retroded_effdt 15
#define g 15                    ! prcs_end_dt 15
#define h 15                    ! plan_type 15
#define i 11                    ! benefit_plan 11
#define j 11                    ! dedcd 11
#define k 6                     ! duplicate_flag 6

#include 'setenv.sqc' !Set environment

!**********************************
begin-program
!**********************************
  do Init-Report
  if $SortBy='E'
    do ReportByEmplid
  else
    do ReportByType
  end-if
  do Stdapi-Term
end-program


!**********************************
begin-setup
!**********************************

#Include 'ptpsl177.sqc'  !Printer and page-size initialization

end-setup


!**********************************
begin-procedure Init-Report
!**********************************
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime

  move 'RDED001' to $ReportID
  do Get-Report-Language
  let $ReportTitle  = $RDED001-REPORTTITLE
  display $ReportID
  display $ReportTitle

  do Parameter-Initialization
end-procedure


!**********************************
begin-procedure Parameter-Initialization
!**********************************
  if $Prcs_Process_Instance = ''
    Display 'This SQR must be run from PeopleSoft'
  else
    Display 'Running select parms'
    do Select-Parameters
    move $C.RDEDSQR_SORT to $SortBy
    if $C.Retroded_Rqst_Type =' ' or $C.Retroded_Rqst_Type=''
      move '%' to $Retroded_Rqst_Type
    else
      move $C.Retroded_Rqst_Type to $Retroded_Rqst_Type
    end-if
  end-if
end-procedure


!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from RDED001 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('RDED001', 'REPORT_TITLE', $RDED001-REPORTTITLE, #CW)
  do Get_Field_Information ('RDED001', 'REQUEST',      $RDED001-REQUEST,     #CW)
  do Get_Field_Information ('RDED001', 'MASS',         $RDED001-MASS,        #CW)
  do Get_Field_Information ('RDED001', 'DUPL',         $RDED001-DUPL,        #CW)
  do Get_Field_Information ('RDED001', 'FLAG',         $RDED001-FLAG     ,   #CW)

  do Get_Field_Information ('BEN1',   'EFFECTIVE',     $BEN1-EFFECTIVE,      #CW)
  do Get_Field_Information ('BEN1',   'PLAN',          $BEN1-PLAN,           #CW)
  do Get_Field_Information ('BEN1',   'BENEFIT',       $BEN1-BENEFIT,        #CW)
  do Get_Field_Information ('BEN1',   'DATE',          $BEN1-DATE,           #CW)
  do Get_Field_Information ('BEN1',   'EMPL',          $BEN1-EMPL,           #CW)
  do Get_Field_Information ('BEN1',   'PROGRAM',       $BEN1-PROGRAM,        #CW)
  do Get_Field_Information ('BEN1',   'TYPE',          $BEN1-TYPE,           #CW)
  do Get_Field_Information ('BEN1',   'PROCESS',       $BEN1-PROCESS,        #CW)
  do Get_Field_Information ('BEN1',   'EMPLOYEE',      $BEN1-EMPLOYEE,       #CW)
  do Get_Field_Information ('BEN1',   'DEDCTON',       $BEN1-DEDCTON,        #CW)
  do Get_Field_Information ('BEN1',   'PLAN',          $BEN1-PLAN,           #CW)
  do Get_Field_Information ('BEN1',   'ID',            $BEN1-ID,             #CW)
  do Get_Field_Information ('BEN1',   'CODE',          $BEN1-CODE,           #CW)
  do Get_Field_Information ('BEN1',   'RCD_NO',        $BEN1-RCD-NO,         #CW)
  do Get_Field_Information ('BEN1',   'END_DATE',      $BEN1-END-DATE,       #CW)

End-Procedure


!**********************************
begin-heading 8
!**********************************
#Include 'stdhdgtr.sqc'

!Column Heading line 1
  print $BEN1-EMPLOYEE             (+2,1,{a})
  print $BEN1-EMPL                 (0,+1,{b})
  print $RDED001-REQUEST           (0,+1,{c})
  print $BEN1-PROGRAM              (0,+1,{d})
  print $RDED001-MASS              (0,+1,{e})
  print $BEN1-EFFECTIVE            (0,+1,{f})
  print $BEN1-PROCESS              (0,+1,{g})
  print $BEN1-PLAN                 (0,+1,{h})
  print $BEN1-BENEFIT              (0,+1,{i})
  print $BEN1-DEDCTON              (0,+1,{j})
  print $RDED001-DUPL              (0,+1,{k})

!Column Heading line 2
  print $BEN1-ID                   (+1,1,{a})
  print $BEN1-RCD-NO               (0,+1,{b})
  print $BEN1-TYPE                 (0,+1,{c})
  print $BEN1-ID                   (0,+1,{d})
  print $BEN1-ID                   (0,+1,{e})
  print $BEN1-DATE                 (0,+1,{f})
  print $BEN1-END-DATE             (0,+1,{g})
  print $BEN1-TYPE                 (0,+1,{h})
  print $BEN1-PLAN                 (0,+1,{i})
  print $BEN1-CODE                 (0,+1,{j})
  print $RDED001-FLAG              (0,+1,{k})

!Column Heading line 2
  print '='                        (+1,1,{a}) FILL
  print '='                        (0,+1,{b}) FILL
  print '='                        (0,+1,{c}) FILL
  print '='                        (0,+1,{d}) FILL
  print '='                        (0,+1,{e}) FILL
  print '='                        (0,+1,{f}) FILL
  print '='                        (0,+1,{g}) FILL
  print '='                        (0,+1,{h}) FILL
  print '='                        (0,+1,{i}) FILL
  print '='                        (0,+1,{j}) FILL
  print '='                        (0,+1,{k}) FILL

end-heading


!**********************************
begin-procedure ReportByEmplid
!**********************************

begin-SELECT
A.EMPLID                 (+1,1,{A})
A.EMPL_RCD              (0,+1,{B})
A.RETRODED_RQST_TYPE     (0,+1,{C})
A.RETRODED_PGM_ID        (0,+1,{D})
A.MASS_RETRO_RQST_ID     (0,+1,{E})
A.RETRODED_EFFDT
    do format-datetime(&a.retroded_effdt,$out,{DEFDATE},'','')
    print $out           (0,+1,{f})
A.PRCS_END_DT
    do format-datetime(&a.Prcs_End_Dt,$out,{DEFDATE},'','')
    print $out           (0,+1,{g})
A.PLAN_TYPE
    let $fieldname='PLAN_TYPE'
    let $fieldvalue=&A.Plan_Type
    do read-translate-table
    print $xlatshortname (0,+1,{h})
A.BENEFIT_PLAN           (0,+1,{I})
A.DEDCD                  (0,+1,{J})
A.DUPLICATE_FLAG         (0,+1,{K})
FROM  PS_RETRODED_RQST A
WHERE A.RETRODED_PRCS_FLAG  = 'N'
AND   A.RETRODED_RQST_TYPE LIKE $Retroded_Rqst_Type
ORDER BY A.EMPLID,
  A.EMPL_RCD,
  A.RETRODED_RQST_TYPE,
  A.RETRODED_PGM_ID,
  A.MASS_RETRO_RQST_ID

end-SELECT

end-procedure


!**********************************
begin-procedure ReportByType
!**********************************
begin-SELECT
B.EMPLID                 (+1,1,{A})
B.EMPL_RCD              (0,+1,{B})
B.RETRODED_RQST_TYPE     (0,+1,{C})
B.RETRODED_PGM_ID        (0,+1,{D})
B.MASS_RETRO_RQST_ID     (0,+1,{E})
B.RETRODED_EFFDT
    do format-datetime(&B.retroded_effdt,$out,{DEFDATE},'','')
    print $out           (0,+1,{f})
B.PRCS_END_DT
    do format-datetime(&B.Prcs_End_Dt,$out,{DEFDATE},'','')
    print $out           (0,+1,{g})
B.PLAN_TYPE
    let $fieldname='PLAN_TYPE'
    let $fieldvalue=&B.Plan_Type
    do read-translate-table
    print $xlatshortname (0,+1,{h})
B.BENEFIT_PLAN           (0,+1,{I})
B.DEDCD                  (0,+1,{J})
B.DUPLICATE_FLAG         (0,+1,{K})
FROM  PS_RETRODED_RQST B
WHERE B.RETRODED_PRCS_FLAG  = 'N'
AND   B.RETRODED_RQST_TYPE LIKE $Retroded_Rqst_Type
ORDER BY B.RETRODED_RQST_TYPE,
  B.EMPLID,
  B.EMPL_RCD,
  B.RETRODED_PGM_ID,
  B.MASS_RETRO_RQST_ID

end-SELECT
end-procedure

!**********************************

#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'reset.sqc'     !Reset Printer

#Include 'getftdts.sqc'  !Get-From-Thru-Dates procedure
#Include 'rdedrctl.sqc'  !Get-Run-Control procedure

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

!************************ End Of Report *****************************
