!***********************************************************************
! GPESDATA.SQC:  Retrieve Run Control for the parameters of some       *
!                Spanish GP Reports                                    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/09/13:01:54:09                                 !
!       $Release:  HR9                                                 !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************


!************************************************************************
begin-procedure Select-SS-Parameters
!************************************************************************

begin-select
RCSS.OPRID, 
RCSS.RUN_CNTL_ID,
RCSS.GPES_MONTHCD, 
RCSS.YEARCD ,
RCSS.COMPANY,
RCSS.SSN_EMPLOYER,
RCSS.CAL_PRD_ID,
RCSS.GPES_FILE_NAME,
RCSS.GPES_SSTC_PYMT_OPT,
RCSS.GPES_SSTC_OUTOF_DT,
RCSS.TEST

 do Get-SS-Values
 
FROM PS_GPES_RC_SS RCSS
 WHERE RCSS.OPRID = $PRCS_OPRID
   AND RCSS.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID

end-select
end-procedure




!************************************************************************
! Procedure Get-Company-Data
!************************************************************************


begin-procedure Get-Company-Data
#debug do Fin-Debug-Msg('COMPANY-TBL')


  if $AsOfDate = ''  !if no As-Of-Date is specified, default to Today
    move $AsOfToday to $AsOfDate
  end-if


  let $Cmpny-Descr = ''
  let $Cmpny-Address = ''
  let $Cmpny-City = ''
  let $Cmpny-Postal = ''
  let $Cmpny-State-Desc = ''
  let $Cmpny-Indstry-Desc = ''


let $sql-statement = 'GPES_TC1.SQR,COMPANY-TBL,Select,PS_COMPANY_TBL'
begin-SELECT on-error=SQL-Error
CMPNY.EFFDT
CMPNY.DESCR
CMPNY.COUNTRY
CMPNY.ADDRESS1
  let $Cmpny-Address1 = &CMPNY.ADDRESS1

CMPNY.ADDRESS2
CMPNY.ADDRESS3
CMPNY.ADDRESS4
CMPNY.CITY
CMPNY.NUM1
  let $Cmpny-Piso = &CMPNY.NUM1

CMPNY.NUM2
  let $Cmpny-Puerta = &CMPNY.NUM2

CMPNY.HOUSE_TYPE
CMPNY.ADDR_FIELD1
  let $Cmpny-ViaType = &CMPNY.ADDR_FIELD1

CMPNY.ADDR_FIELD2
  let $Cmpny-Num = &CMPNY.ADDR_FIELD2

CMPNY.ADDR_FIELD3
  let $Cmpny-Esc = &CMPNY.ADDR_FIELD3

CMPNY.COUNTY
CMPNY.STATE
CMPNY.POSTAL
CMPNY.GEO_CODE
CMPNY.IN_CITY_LIMIT
 let $Cmpny-ADDLINE2=LTRIM(RTRIM(&CMPNY.ADDR_FIELD1,' ')||' ',' ')||LTRIM(RTRIM(&CMPNY.ADDRESS1,' ')||' ',' ')
 let $Cmpny-ADDLINE3=LTRIM(RTRIM(&CMPNY.ADDRESS2,' ')||' ',' ')
 let $Cmpny-ADDLINE31=LTRIM(RTRIM(&CMPNY.ADDR_FIELD2,' ')||' ',' ')||LTRIM(RTRIM(&CMPNY.ADDR_FIELD3,' ')||' ',' ')
 let $Cmpny-ADDLINE4=LTRIM(RTRIM(&CMPNY.ADDRESS4,' ')||' ',' ')||LTRIM(RTRIM(&CMPNY.NUM1,' ')||' ',' ')||LTRIM(RTRIM(&CMPNY.NUM2,' ')||' ',' ')||LTRIM(RTRIM(&CMPNY.HOUSE_TYPE,' ')||' ',' ')

CMPNY.FISCAL_ID_CD
  let $Cmpny-CIF = &CMPNY.FISCAL_ID_CD
  
  if $Curr_Language_Cd <> $PSoptions_language_cd
    do Get-Cmpny-Lang
  end-if
  if $Cmpny-Descr = ''
    let $Cmpny-Descr = &CMPNY.DESCR
  end-if
  
  let $Cmpny-address = $Cmpny-ADDLINE2||$Cmpny-ADDLINE3||$Cmpny-ADDLINE31||$Cmpny-ADDLINE4
  let $Cmpny-City = &CMPNY.CITY
  let $Cmpny-Postal = &CMPNY.POSTAL
  let $Country = &CMPNY.COUNTRY
  let $State = &CMPNY.STATE
  Do Get-State-Descr
  let $Cmpny-State-Desc = $State-Desc

FROM PS_COMPANY_TBL CMPNY

WHERE CMPNY.COMPANY = $Company
  AND CMPNY.EFFDT = (SELECT MAX(EFFDT) FROM PS_COMPANY_TBL CMPNY2
                     WHERE CMPNY2.COMPANY = CMPNY.COMPANY
                                  AND  CMPNY2.EFFDT <= $AsOfDate)
  AND CMPNY.EFF_STATUS <> 'I'

end-SELECT

let $sql-statement = 'GPESDATA.SQR,ESTAB-SSEC-ESP,Select,PS_ESTAB_SSEC_ESP'
begin-SELECT on-error=SQL-Error
ESTABS.ESTABID
ESTABS.INDSTRY_CD_ESP
  Do Get-Industry-Data

FROM PS_ESTAB_SSEC_ESP ESTABS,
     PS_ESTAB_TBL ESTABT

WHERE ESTABT.ESTABID = ESTABS.ESTABID
  AND ESTABT.EFFDT = ESTABS.EFFDT
  AND ESTABT.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_SSEC_ESP
                      WHERE ESTABID = ESTABT.ESTABID
                        AND EFFDT <= $AsOfDate)
  AND ESTABT.EFF_STATUS <> 'I'
  AND ESTABS.SSN_EMPLOYER = &GPESRC.SSN_EMPLOYER
end-SELECT

end-procedure


!************************************************************************
! Procedure Get-State-Descr
!************************************************************************
begin-procedure Get-State-Descr
#debug do Fin-Debug-Msg('STATE-NAMES-TBL')

  let $State-Desc = ''

let $sql-statement = 'GPESGTCO.SQR,STATE-NAMES-TBL,Select,PS_STATE_NAMES_TBL'
begin-SELECT on-error=SQL-Error
STE.DESCR

  if $Curr_Language_Cd <> $PSoptions_language_cd
    do Get-State-Lang
  end-if
  if $State-Desc = ''
    let $State-Desc = &STE.DESCR
  end-if
  

FROM PS_STATE_NAMES_TBL STE

WHERE STE.COUNTRY = $Country
  AND STE.STATE = $State

end-SELECT

  #debugd show 'Country: ' $Country
  #debugd show 'State cd: ' $State
  #debugd show 'Description: ' $State-Desc

end-procedure


!************************************************************************
! Procedure Get-State-Lang
!************************************************************************
BEGIN-PROCEDURE Get-State-Lang
#debug do Fin-Debug-Msg('Get-State-Lang')

let $sql-statement = 'GPESDATA.SQC,Get-State-Lang,Select,PS_STATE_NAMES_LNG'
BEGIN-SELECT on-error=SQL-Error
STELNG.DESCR

  LET $State-Desc = &STELNG.DESCR


FROM PS_STATE_NAMES_LNG STELNG

WHERE STELNG.COUNTRY = $Country
  AND STELNG.STATE = $State
  AND STELNG.LANGUAGE_CD = $Curr_Language_Cd

END-SELECT

END-PROCEDURE



!************************************************************************
! Procedure Get-Cmpny-Lang
!************************************************************************
BEGIN-PROCEDURE Get-Cmpny-Lang
#debug do Fin-Debug-Msg('Get-Cmpny-Lang')

let $sql-statement = 'GPESDATA.SQC,Get-Cmpny-Lang,Select,PS_COMPNY_TBL_LANG'
BEGIN-SELECT on-error=SQL-Error
CMPNYLNG.DESCR

  LET $Cmpny-Descr = &CMPNYLNG.DESCR


FROM PS_COMPNY_TBL_LANG CMPNYLNG

WHERE CMPNYLNG.COMPANY = $Company
  AND CMPNYLNG.EFFDT = $AsOfDate
  AND CMPNYLNG.LANGUAGE_CD = $Curr_Language_Cd

END-SELECT

END-PROCEDURE




!************************************************************************
! Procedure Get-Industry-Data
!************************************************************************
begin-procedure Get-Industry-Data
#debug do Fin-Debug-Msg('Get-Industry-Data')

let $sql-statement = 'GPESDATA.SQC,INDSTRY-ACT-ESP,Select,PS_INDSTRY_ACT_ESP'
begin-SELECT on-error=SQL-Error
IND.DESCR50

  let $Cmpny-Indstry-Desc = &IND.DESCR50
  

FROM PS_INDSTRY_ACT_ESP IND

WHERE IND.INDSTRY_CD_ESP = &ESTABS.INDSTRY_CD_ESP
  AND IND.EFFDT = (SELECT MAX(EFFDT) FROM PS_INDSTRY_ACT_ESP IND2
                     WHERE IND2.INDSTRY_CD_ESP = IND.INDSTRY_CD_ESP
                                  AND  IND2.EFFDT <= $AsOfDate)
  AND IND.EFF_STATUS <> 'I'

end-SELECT
  
end-procedure


!************************************************************************
! Procedure Get-Insur-Data
!************************************************************************
begin-procedure  Get-Insur-Data

begin-select
INS.INSUR_COMP_CD_ESP,
INS.DESCR
  move &INS.DESCR to $Insur-Descr
FROM PS_INSUR_COMP_ESP INS
WHERE INS.INSUR_COMP_CD_ESP = $Insur-Cmpny
end-select

end-procedure



!************************************************************************
! Procedure Get-CCC-Data
!************************************************************************
begin-procedure  Get-CCC-Data

begin-select
CCC.ADDR_FIELD1, 
CCC.ADDRESS1, 
CCC.ADDR_FIELD2, 
CCC.CITY, 
CCC.STATE, 
CCC.POSTAL
  move &CCC.ADDR_FIELD1 to $CCC-CdVia
  move &CCC.ADDRESS1 to $CCC-Street
  move &CCC.ADDR_FIELD2 to $CCC-Num
  move &CCC.CITY to $CCC-City
  move &CCC.STATE to $CCC-Prov
  move &CCC.POSTAL to $CCC-Postal
  let $CCC-Addr = LTRIM(RTRIM($CCC-CdVia,' ')||' ',' ')||LTRIM(RTRIM($CCC-Street,' ')||' ',' ')||LTRIM(RTRIM($CCC-Num,' ')||' ',' ')
  

FROM PS_ESTAB_TBL CCC
WHERE CCC.ESTABID = $CCC
AND CCC.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_ESTAB_TBL A_ED
        WHERE CCC.ESTABID = A_ED.ESTABID
          AND A_ED.EFFDT <= $AsOfDate)
end-select

end-procedure


!**********************************************************************!
! PROCEDURE:     GET-EMPL_NID                                          !
! DESCRIPTION:   GET EMPLOYEE NATIONAL ID                              !
!**********************************************************************!

BEGIN-PROCEDURE  Get-Empl-Nid
#debug do Fin-Debug-Msg('Get-Empl-Nid')


let $sql-statement = 'GPESDATA.SQC,Get-Empl-Nid,Select,PS_PERS_NID (DNI)'
BEGIN-SELECT on-error=SQL-Error
NID0.NATIONAL_ID

  let $Empl-Primary-DNI = &NID0.NATIONAL_ID


FROM PS_PERS_NID NID0

WHERE NID0.EMPLID = $Select-EMPLID
 AND  NID0.PRIMARY_NID = 'Y'

END-SELECT



let $National_type = 'DNI'
let $sql-statement = 'GPESDATA.SQC,Get-Empl-Nid,Select,PS_PERS_NID (DNI)'
BEGIN-SELECT on-error=SQL-Error
NID1.NATIONAL_ID

  let $Empl-DNI = &NID1.NATIONAL_ID


FROM PS_PERS_NID NID1

WHERE NID1.EMPLID = $Select-EMPLID
 AND  NID1.COUNTRY = $Country
 AND  NID1.NATIONAL_ID_TYPE = $National_type

END-SELECT


let $National_type = 'SSN'
let $sql-statement = 'GPESDATA,Get-Empl-Nid,Select,PS_PERS_NID (SSN)'
BEGIN-SELECT on-error=SQL-Error
NID2.NATIONAL_ID

  let $Empl-SSN = &NID2.NATIONAL_ID


FROM PS_PERS_NID NID2

WHERE NID2.EMPLID = $Select-EMPLID
 AND  NID2.COUNTRY = $Country
 AND  NID2.NATIONAL_ID_TYPE = $National_type

END-SELECT

  #debugd show 'Employee id: ' $Select-EMPLID
  #debugd show 'DNI: ' $Empl-DNI
  #debugd show 'SSN: ' $Empl-SSN

end-procedure


!**********************************************************************!
! PROCEDURE:     GET-Literal-Day                                       !
! DESCRIPTION:   Converts Day in Letters                               !
!**********************************************************************!

begin-procedure  Get-Literal-Day

evaluate $Day_In
  when =  '1'
    let $Day_Literal = 'Uno'
       break
  when =  '2'
    let $Day_Literal = 'Dos'
       break
  when =  '3'
    let $Day_Literal = 'Tres'
       break
  when =  '4'
    let $Day_Literal = 'Cuatro'
       break
  when =  '5'
    let $Day_Literal = 'Cinco'
       break
  when =  '6'
    let $Day_Literal = 'Seis'
       break
  when =  '7'
    let $Day_Literal = 'Siete'
       break
  when =  '8'
    let $Day_Literal = 'Ocho'
       break
  when =  '9'
    let $Day_Literal = 'Nueve'
       break
  when =  '10'
    let $Day_Literal = 'Diez'
       break
  when =  '11'
    let $Day_Literal = 'Once'
       break
  when =  '12'
    let $Day_Literal = 'Doce'
       break
  when =  '13'
    let $Day_Literal = 'Trece'
       break
  when =  '14'
    let $Day_Literal = 'Catorce'
       break
  when =  '15'
    let $Day_Literal = 'Quince'
       break
  when =  '16'
    let $Day_Literal = 'Dieciseis'
       break
  when =  '17'
    let $Day_Literal = 'Diecisiete'
       break
  when =  '18'
    let $Day_Literal = 'Dieciocho'
       break
  when =  '19'
    let $Day_Literal = 'Diecinueve'
       break
  when =  '20'
    let $Day_Literal = 'Veinte'
       break
  when =  '21'
    let $Day_Literal = 'Ventiuno'
       break
  when =  '22'
    let $Day_Literal = 'Ventidos'
       break
  when =  '23'
    let $Day_Literal = 'Ventitres'
       break
  when =  '24'
    let $Day_Literal = 'Venticuatro'
       break
  when =  '25'
    let $Day_Literal = 'Venticinco'
       break
  when =  '26'
    let $Day_Literal = 'Ventiseis'
       break
  when =  '27'
    let $Day_Literal = 'Ventisiete'
       break
  when =  '28'
    let $Day_Literal = 'Ventiocho'
       break
  when =  '29'
    let $Day_Literal = 'Ventinueve'
       break
  when =  '30'
    let $Day_Literal = 'Treinta'
       break
  when =  '31'
    let $Day_Literal = 'Treinta y uno'
       break

end-evaluate

end-procedure


!**********************************************************************!
! PROCEDURE:     GET-Literal-Month                                     !
! DESCRIPTION:   Converts Month in Letters                             !
!**********************************************************************!

begin-procedure  Get-Literal-Month

evaluate $Month_In
  when =  '1'
     let $Month_Literal = 'Enero'
        break
  when =  '2'
     let $Month_Literal = 'Febrero'
        break
  when =  '3'
     let $Month_Literal = 'Marzo'
        break
  when =  '4'
     let $Month_Literal = 'Abril'
        break
  when =  '5'
     let $Month_Literal = 'Mayo'
        break
  when =  '6'
     let $Month_Literal = 'Junio'
        break
  when =  '7'
     let $Month_Literal = 'Julio'
        break
  when =  '8'
     let $Month_Literal = 'Agosto'
        break
  when =  '9'
     let $Month_Literal = 'Septiembre'
        break
  when =  '10'
     let $Month_Literal = 'Octubre'
        break
  when =  '11'
     let $Month_Literal = 'Noviembre'
        break
  when =  '12'
     let $Month_Literal = 'Diciembre'
        break
end-evaluate
end-procedure


!--------------------------------------------------------------------!
! Debug Msg                                                          !
!--------------------------------------------------------------------!
begin-procedure Fin-Debug-Msg($procedure_name)
   display ' '
   display '----------------------------------'
   display $procedure_name
   #debugt date-time () {Native-DateTime} &SysDateTime
   #debugt move &SysDateTime to $SysDateTime
   #debugt show 'TIMING, ' $procedure_name ', ' $SysDateTime
   display ' '
end-procedure ! Fin-Debug-Msg




#Include 'getsetid.sqc'
