!***********************************************************************
!  PAY025:  Balance Adjustment Audit Report                            *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
! Copyright (C) 1988, 2011, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2011/12/15:16:28:36                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  872510                                              !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
! HP00001       Add $PublicSector indicator                            *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup32.sqc'     ! Init printer and page size

#Define C_EmplID                  1
#Define C_REASON                  1
#Define C_BAL_ADJ_SEQ            14
#Define C_DT_ENTERED             18
#Define C_CALENDAR_YEAR          29
#Define C_QTRCD                  38
#Define C_MONTHCD                43
#Define C_FIELD_NAME             53
#Define C_BEFORE_ADJ             74
#Define C_AFTER_ADJ             102
#Define C_AMOUNT_ADJ             88
#Define C_PLAN_TYPE             117
#Define C_BENEFIT_PLAN          123
#Define C_DED_CODE              132
#Define C_DED_CLASS             143
#Define C_GARNISH_ID            154
#Define C_SPECIAL_BAL           117
#Define C_EARN_CODE             126
#Define C_STATE                 117
#Define C_LOCALITY              129
#Define C_TAX_CLASS             141
#Define C_COUNTRY               130                                     !HP99999
#Define C_LOCALITY_HP           137                                     !HP99999
#Define C_TAX_CLASS_HP          149                                     !HP99999
#Define C_CODE_BEFORE_ADJ        82                                     !HP99999
#Define C_CODE_AMOUNT_ADJ        96                                     !HP99999
#Define C_CODE_AFTER_ADJ        110                                     !HP99999


begin-report
  move 'PAY025' to $ReportID
  move 'Balance Adjustment Audit' to $ReportTitle
  do Init

  if $Break_Prompt = 'N'
    do Main
  end-if

  do Stdapi-Term
  do Reset
end-report


begin-heading 9

#include 'stdhdg11.sqc'

if $Balance_Type = 'Check'
    do Check-headings
end-if

if $Balance_Type = 'Earnings'
    do Earnings-headings
end-if

if $Balance_Type = 'Deduction'
    do Deduction-headings
end-if

if $Balance_Type = 'Garnishment'
    do Garnishment-headings
end-if

if $Balance_Type = 'Tax'
    do Tax-headings
end-if

if $Balance_Type = 'Tax1042'                                            !HP99999
    do Tax1042-headings                                                 !HP99999
end-if                                                                  !HP99999
                                                                        !HP99999
end-heading


begin-procedure Check-headings
    print 'Check YTD Balance Adjustments'      (+2,1)
    do Common-headings-1
    do Common-headings-2
    do Common-headings-3
end-procedure


begin-procedure Earnings-headings
    print 'Earnings YTD Balance Adjustments'  (+2,1)
    do Common-headings-1
    do Earnings-headings-1
    do Common-headings-2
    do Earnings-headings-2
    do Common-headings-3
    do Earnings-headings-3
end-procedure


begin-procedure Deduction-headings
    print 'Deduction YTD Balance Adjustments'  (+2,1)
    do Common-headings-1
    do Deduction-headings-1
    do Common-headings-2
    do Deduction-headings-2
    do Common-headings-3
    do Deduction-headings-3
end-procedure


begin-procedure Garnishment-headings
    print 'Garnishment YTD Balance Adjustments'  (+2,1)
    do Common-headings-1
    do Deduction-headings-1
    do Garnishment-headings-1
    do Common-headings-2
    do Deduction-headings-2
    do Garnishment-headings-2
    do Common-headings-3
    do Deduction-headings-3
    do Garnishment-headings-3
end-procedure

begin-procedure Tax-headings
    print 'Tax YTD Balance Adjustments'  (+2,1)
    print 'Locality/'                    (+1,{C_LOCALITY})
    do Common-headings-1
    do Tax-headings-1
    do Common-headings-2
    do Tax-headings-2
    do Common-headings-3
    do Tax-headings-3
end-procedure

begin-procedure Tax1042-headings                                        !HP99999
    print '1042 Tax YTD Balance Adjustments'  (+2,1)                    !HP99999
    do Common-headings-1                                                !HP99999
    do Tax-1042-headings-1                                              !HP99999
    do Common-headings-2                                                !HP99999
    do Tax-1042-headings-2                                              !HP99999
    do Common-headings-3                                                !HP99999
    do Tax-1042-headings-3                                              !HP99999
end-procedure                                                           !HP99999
                                                                        !HP99999
begin-procedure Common-headings-1

    evaluate $Balance_Type
      when = 'Tax'
         print 'EmplID/'                   (+1,{C_EmplID})
      break
      when-other
         print 'EmplID/'                   (+2,{C_EmplID})
      break
    end-evaluate
    print 'Adj'                             (0,{C_BAL_ADJ_SEQ})
    print 'Date'                            (0,{C_DT_ENTERED})
    print 'Calendar'                        (0,{C_CALENDAR_YEAR})
    print 'Qtr'                             (0,{C_QTRCD})
    print 'Month'                           (0,{C_MONTHCD})
    print 'Field'                           (0,{C_FIELD_NAME})
    print '       Before'                   (0,{C_BEFORE_ADJ})
    print '        After'                   (0,{C_AFTER_ADJ})
    print '   Adjustment'                   (0,{C_AMOUNT_ADJ})
end-procedure


begin-procedure Common-headings-2

    print 'Reason'                         (+1,{C_EmplID})
    print 'Seq'                             (0,{C_BAL_ADJ_SEQ})
    print 'Adjusted'                        (0,{C_DT_ENTERED})
    print 'Year'                            (0,{C_CALENDAR_YEAR})
    print 'Code'                            (0,{C_QTRCD})
    print 'Code'                            (0,{C_MONTHCD})
    print 'Name'                            (0,{C_FIELD_NAME})
    print '   Adjustment'                   (0,{C_BEFORE_ADJ})
    print '   Adjustment'                   (0,{C_AFTER_ADJ})
    print '       Amount'                   (0,{C_AMOUNT_ADJ})
end-procedure


begin-procedure Common-headings-3
    print '-----------'                    (+1,{C_EmplID})
    print '--------'                        (0,{C_CALENDAR_YEAR})
    print '---'                             (0,{C_BAL_ADJ_SEQ})
    print '----------'                      (0,{C_DT_ENTERED})
    print '----'                            (0,{C_QTRCD})
    print '-----'                           (0,{C_MONTHCD})
    print '----------------'                (0,{C_FIELD_NAME})
    print '-------------'                   (0,{C_BEFORE_ADJ})
    print '-------------'                   (0,{C_AFTER_ADJ})
    print '-------------'                   (0,{C_AMOUNT_ADJ})
end-procedure


begin-procedure Earnings-headings-1
    print 'Special'                         (0,{C_SPECIAL_BAL})
    print 'Earn'                            (0,{C_EARN_CODE})
end-procedure


begin-procedure Earnings-headings-2
    print 'Balance'                         (0,{C_SPECIAL_BAL})
    print 'Code'                            (0,{C_EARN_CODE})
end-procedure


begin-procedure Earnings-headings-3
    print '-------'                         (0,{C_SPECIAL_BAL})
    print '----'                            (0,{C_EARN_CODE})
end-procedure


begin-procedure Deduction-headings-1

    print 'Plan     '                       (0,{C_PLAN_TYPE})
    print 'Benefit  '                       (0,{C_BENEFIT_PLAN})
    print 'Deduction'                       (0,{C_DED_CODE})
    print 'Deduction'                       (0,{C_DED_CLASS})

end-procedure


begin-procedure Deduction-headings-2

    print 'Type'                            (0,{C_PLAN_TYPE})
    print '   Plan'                         (0,{C_BENEFIT_PLAN})
    print '     Code'                       (0,{C_DED_CODE})
    print '    Class'                       (0,{C_DED_CLASS})

end-procedure


begin-procedure Deduction-headings-3

    print '----'                            (0,{C_PLAN_TYPE})
    print '-------'                         (0,{C_BENEFIT_PLAN})
    print '---------'                       (0,{C_DED_CODE})
    print '----------'                      (0,{C_DED_CLASS})

end-procedure


begin-procedure Tax-headings-1

    print 'Work PSD'                        (0,{C_LOCALITY})
    print 'Tax'                             (0,{C_TAX_CLASS})

end-procedure


begin-procedure Tax-headings-2

    print 'State'                           (0,{C_STATE})
    print 'Res PSD'                         (0,{C_LOCALITY})
    print 'Class'                           (0,{C_TAX_CLASS})

end-procedure


begin-procedure Tax-headings-3

    print '----------'                      (0,{C_STATE})
    print '----------'                      (0,{C_LOCALITY})
    print '----------'                      (0,{C_TAX_CLASS})

end-procedure

begin-procedure Tax-1042-headings-1                                     !HP99999
                                                                        !HP99999
    print 'Income'                          (0,{C_LOCALITY_HP})         !HP99999
    print 'Tax'                             (0,{C_TAX_CLASS_HP})        !HP99999
                                                                        !HP99999
end-procedure                                                           !HP99999
                                                                        !HP99999
                                                                        !HP99999
begin-procedure Tax-1042-headings-2                                     !HP99999
                                                                        !HP99999
    print 'State'                           (0,{C_STATE})               !HP99999
    print 'Cntry'                           (0,{C_COUNTRY})             !HP99999
    print 'Code'                            (0,{C_LOCALITY_HP})         !HP99999
    print 'Rate'                            (0,{C_TAX_CLASS_HP})        !HP99999
                                                                        !HP99999
end-procedure                                                           !HP99999
                                                                        !HP99999
                                                                        !HP99999
begin-procedure Tax-1042-headings-3                                     !HP99999
                                                                        !HP99999
    print '----------'                      (0,{C_STATE})               !HP99999
    print '-----'                           (0,{C_COUNTRY})             !HP99999
    print '-------'                         (0,{C_LOCALITY_HP})         !HP99999
    print '---------'                       (0,{C_TAX_CLASS_HP})        !HP99999
                                                                        !HP99999
end-procedure                                                           !HP99999
                                                                        !HP99999
                                                                        !HP99999
begin-procedure Garnishment-headings-1
    print 'Garnish  '                       (0,{C_GARNISH_ID})
end-procedure


begin-procedure Garnishment-headings-2
    print '     ID'                         (0,{C_GARNISH_ID})
end-procedure


begin-procedure Garnishment-headings-3
    print '-------'                         (0,{C_GARNISH_ID})
end-procedure


begin-procedure Init
  do Init-DateTime
  do Init-Number
  do Get-EandG                                                          !HP00001
  do Get-Current-DateTime

  display $ReportTitle
  display 'Current Date : ' noline
  display $AsOfToday
  display 'Current Time : ' noline
  display $AsOfNow
  display ' '

  do Stdapi-Init
  do Get-Calendar-Year-Id
  move 'N' to $Break_Prompt

  if $Prcs_Process_Instance = ''
    do Get-From-Thru-Dates
    do Which-Date

    if $Break_Prompt = 'N'
      do Company-Where-Prompt
    end-if

  else
    do Select-Parameters
    move $RC_PAY.Company   to $SlctCompany
    move $RC_PAY.FromDate  to $FromDate
    move $RC_PAY.ThruDate  to $ThruDate
    move $RC_PAY.AsOfDate  to $AsOfDate
    move $RC_PAY.Which_Date to $Which_Date
  end-if

  if RTRIM($SlctCompany, ' ') = ''
    move '' to $Company_Where
  else
    let $Company_Where = 'AND CS.COMPANY = ' || '''' || $SlctCompany || ''''
  end-if

end-procedure


begin-procedure Which-Date

  while 1 = 1
    input $Which_Date maxlen=1 'Select Balance Date(B), Adjust Date(A) or blank to exit?' type=char
    uppercase $Which_Date

    if RTRIM($Which_Date, ' ') = 'B'
            or RTRIM($Which_Date, ' ') = 'A'
        break
    end-if

    if RTRIM($Which_Date, ' ') = ''
        move 'Y' to $Break_Prompt
        break
    end-if

  end-while

end-procedure


begin-procedure Company-Where-Prompt

  input $SlctCompany maxlen=3 'Enter Company ID (e.g. ccb) or blank for all' type=char
  uppercase $SlctCompany

end-procedure


begin-procedure Main           ! Main report processing

  do Company-Selection

end-procedure


begin-procedure Company-Selection

begin-SELECT
CS.COMPANY

  do Process-Adjustments

FROM PS_COMPANY_TBL CS
WHERE CS.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_COMPANY_TBL
       WHERE  COMPANY = CS.COMPANY
         AND  EFFDT  <= $AsOfDate)
[$Company_Where]
end-SELECT

end-procedure


begin-procedure Process-Adjustments
  move &CS.Company to $Company

  let $Adjustments_Found = 'N'
  move 'Check' to $Balance_Type
  do Check-Adjustments

  if $Adjustments_Found = 'N'
     print 'No'                            (+3,10)
     print $Balance_Type                   (0,+2)
     print 'Adjustments Found for'         (0,+2)
     print $Company                        (0,+2)
  end-if

  do page_break

  let $Adjustments_Found = 'N'
  move 'Earnings' to $Balance_Type
  do Earnings-Adjustments

  if $Adjustments_Found = 'N'
     print 'No'                            (+3,10)
     print $Balance_Type                   (0,+2)
     print 'Adjustments Found for'         (0,+2)
     print $Company                        (0,+2)
  end-if

  do page_break

  let $Adjustments_Found = 'N'
  move 'Deduction' to $Balance_Type
  do Deduction-Adjustments

  if $Adjustments_Found = 'N'
     print 'No'                            (+3,10)
     print $Balance_Type                   (0,+2)
     print 'Adjustments Found for'         (0,+2)
     print $Company                        (0,+2)
  end-if

  do page_break

  let $Adjustments_Found = 'N'
  move 'Garnishment' to $Balance_Type
  do Garnishment-Adjustments

  if $Adjustments_Found = 'N'
     print 'No'                            (+3,10)
     print $Balance_Type                   (0,+2)
     print 'Adjustments Found for'         (0,+2)
     print $Company                        (0,+2)
  end-if

  do page_break

  let $Adjustments_Found = 'N'
  move 'Tax' to $Balance_Type
  do Tax-Adjustments

  if $Adjustments_Found = 'N'
     print 'No'                            (+3,10)
     print $Balance_Type                   (0,+2)
     print 'Adjustments Found for'         (0,+2)
     print $Company                        (0,+2)
  end-if

  do page_break

  if $PublicSector = 'Y'                                                !HP00001
    let $Adjustments_Found = 'N'                                        !HP99999
    move 'Tax1042' to $Balance_Type                                     !HP99999
    do Tax1042-Adjustments                                              !HP99999
                                                                        !HP99999
    if $Adjustments_Found = 'N'                                         !HP99999
       print 'No'                            (+3,10)                    !HP99999
       print $Balance_Type                   (0,+2)                     !HP99999
       print 'Adjustments Found for'         (0,+2)                     !HP99999
       print $Company                        (0,+2)                     !HP99999
    end-if                                                              !HP99999
                                                                        !HP99999
    do page_break                                                       !HP99999
  end-if                                                                !HP00001
end-procedure


begin-procedure Check-Adjustments
    let $Prefix = 'A'
    do Build-Where-Clause

begin-SELECT
A.EMPLID
A.COMPANY
A.BALANCE_YEAR
A.BAL_ADJ_SEQ
A.DT_ENTERED
A.BALANCE_QTR
A.BALANCE_PERIOD
A.TOTAL_GROSS_YTD
A.TOT_GRS_YTD_ADJ
A.TOT_GRS_ADJ
A.TOTAL_TAXES_YTD
A.TOT_TAX_YTD_ADJ
A.TOT_TAX_ADJ
A.TOTAL_DEDNS_YTD
A.TOT_DED_YTD_ADJ
A.TOT_DED_ADJ
A.NET_PAY_YTD
A.NET_PAY_YTD_ADJ
A.NET_PAY_ADJ
A.ADJ_REASON

  let $Adjustments_Found = 'Y'

  do Print-Check-Adjustments

FROM PS_BAL_ADJ_CHK A
WHERE A.COMPANY = &CS.Company AND A.BALANCE_ID = $Calendar_Year_Id
     [$Date_Where_1]
     [$Date_Where_2]
     [$Date_Where_3]
ORDER BY A.EMPLID, [$Date_Order_1] [$Date_Order_2]
end-SELECT

end-procedure


begin-procedure Earnings-Adjustments
    let $Prefix = 'C'
    do Build-Where-Clause

begin-SELECT
C.EMPLID
C.COMPANY
C.BALANCE_YEAR
C.SPCL_BALANCE
C.ERNCD
C.BAL_ADJ_SEQ
C.DT_ENTERED
C.BALANCE_QTR
C.BALANCE_PERIOD
C.HRS_YTD
C.HRS_QTD
C.HRS_MTD
C.HRS_YTD_ADJ
C.HRS_QTD_ADJ
C.HRS_MTD_ADJ
C.HRS_ADJ
C.GRS_YTD
C.GRS_QTD
C.GRS_MTD
C.GRS_YTD_ADJ
C.GRS_QTD_ADJ
C.GRS_MTD_ADJ
C.GRS_ADJ
C.ADJ_REASON

  let $Adjustments_Found = 'Y'
  do Print-Earnings-Adjustments

FROM PS_BAL_ADJ_ERN C
WHERE C.COMPANY = &CS.Company AND C.BALANCE_ID = $Calendar_Year_Id
     [$Date_Where_1]
     [$Date_Where_2]
     [$Date_Where_3]
ORDER BY C.EMPLID, [$Date_Order_1] [$Date_Order_2]
end-SELECT

end-procedure


begin-procedure Deduction-Adjustments
    let $Prefix = 'B'
    do Build-Where-Clause

begin-SELECT
B.EMPLID
B.COMPANY
B.BALANCE_YEAR
B.PLAN_TYPE
B.BENEFIT_PLAN
B.DEDCD
B.DED_CLASS
B.BAL_ADJ_SEQ
B.DT_ENTERED
B.BALANCE_QTR
B.BALANCE_PERIOD
B.DED_YTD
B.DED_QTD
B.DED_MTD
B.DED_YTD_ADJ
B.DED_QTD_ADJ
B.DED_MTD_ADJ
B.DED_ADJ
B.ADJ_REASON

  let $Adjustments_Found = 'Y'
  do Print-Deduction-Adjustments

FROM PS_BAL_ADJ_DED B
WHERE B.COMPANY = &CS.Company AND B.BALANCE_ID = $Calendar_Year_Id
     [$Date_Where_1]
     [$Date_Where_2]
     [$Date_Where_3]
ORDER BY B.EMPLID, [$Date_Order_1] [$Date_Order_2]
end-SELECT

end-procedure


begin-procedure Garnishment-Adjustments
    let $Prefix = 'D'
    do Build-Where-Clause

begin-SELECT
D.EMPLID
D.COMPANY
D.BALANCE_YEAR
D.PLAN_TYPE
D.BENEFIT_PLAN
D.DEDCD
D.DED_CLASS
D.GARNID
D.BAL_ADJ_SEQ
D.DT_ENTERED
D.BALANCE_QTR
D.BALANCE_PERIOD
D.DED_YTD
D.DED_QTD
D.DED_MTD
D.DED_YTD_ADJ
D.DED_QTD_ADJ
D.DED_MTD_ADJ
D.DED_ADJ
D.DED_GARN_YTD
D.DED_GARN_QTD
D.DED_GARN_MTD
D.DED_GARN_YTD_ADJ
D.DED_GARN_QTD_ADJ
D.DED_GARN_MTD_ADJ
D.DED_GARN_ADJ
D.DED_CFEE_YTD
D.DED_CFEE_QTD
D.DED_CFEE_MTD
D.DED_CFEE_YTD_ADJ
D.DED_CFEE_QTD_ADJ
D.DED_CFEE_MTD_ADJ
D.DED_CFEE_ADJ
D.DED_PFEE_YTD
D.DED_PFEE_QTD
D.DED_PFEE_MTD
D.DED_PFEE_YTD_ADJ
D.DED_PFEE_QTD_ADJ
D.DED_PFEE_MTD_ADJ
D.DED_PFEE_ADJ
D.ADJ_REASON

  let $Adjustments_Found = 'Y'
  do Print-Garnishment-Adjustments

FROM PS_BAL_ADJ_GRN D
WHERE D.COMPANY = &CS.Company AND D.BALANCE_ID = $Calendar_Year_Id
     [$Date_Where_1]
     [$Date_Where_2]
     [$Date_Where_3]
ORDER BY D.EMPLID, [$Date_Order_1] [$Date_Order_2]
end-SELECT

end-procedure


begin-procedure Tax-Adjustments
    let $Prefix = 'E'
    do Build-Where-Clause

begin-SELECT
E.EMPLID
E.COMPANY
E.BALANCE_YEAR
E.STATE
E.LOCALITY
E.TAX_CLASS
E.WORK_PSD_CD
E.RES_PSD_CD
E.BAL_ADJ_SEQ
E.DT_ENTERED
E.BALANCE_QTR
E.BALANCE_PERIOD
E.TAX_YTD
E.TAX_QTD
E.TAX_MTD
E.TAX_YTD_ADJ
E.TAX_QTD_ADJ
E.TAX_MTD_ADJ
E.TAX_ADJ
E.TXGRS_YTD
E.TXGRS_QTD
E.TXGRS_MTD
E.TXGRS_YTD_ADJ
E.TXGRS_QTD_ADJ
E.TXGRS_MTD_ADJ
E.TXGRS_ADJ
E.NLGRS_YTD
E.NLGRS_QTD
E.NLGRS_MTD
E.NLGRS_YTD_ADJ
E.NLGRS_QTD_ADJ
E.NLGRS_MTD_ADJ
E.NLGRS_ADJ
E.ADJ_REASON

  let $Adjustments_Found = 'Y'
  do Print-Tax-Adjustments

FROM PS_BAL_ADJ_TAX E
WHERE E.COMPANY = &CS.Company  AND E.BALANCE_ID = $Calendar_Year_Id
     [$Date_Where_1]
     [$Date_Where_2]
     [$Date_Where_3]
ORDER BY E.EMPLID, [$Date_Order_1] [$Date_Order_2]
end-SELECT

end-procedure


begin-procedure Tax1042-Adjustments                                     !HP99999
    let $Prefix = 'F'                                                   !HP99999
    do Build-Where-Clause                                               !HP99999
                                                                        !HP99999
begin-SELECT                                                            !HP99999
F.EMPLID                                                                !HP99999
F.COMPANY                                                               !HP99999
F.BALANCE_YEAR                                                          !HP99999
F.STATE                                                                 !HP99999
F.COUNTRY                                                               !HP99999
F.INCOME_CD_1042                                                        !HP99999
F.TAX_RT                                                                !HP99999
F.BAL_ADJ_SEQ                                                           !HP99999
F.DT_ENTERED                                                            !HP99999
F.BALANCE_QTR                                                           !HP99999
F.BALANCE_PERIOD                                                        !HP99999
F.TAX_1042_YTD                                                          !HP99999
F.TAX_1042_QTD                                                          !HP99999
F.TAX_1042_MTD                                                          !HP99999
F.TAX_1042_YTD_ADJ                                                      !HP99999
F.TAX_1042_QTD_ADJ                                                      !HP99999
F.TAX_1042_MTD_ADJ                                                      !HP99999
F.TAX_1042_ADJ                                                          !HP99999
F.TXGRS_1042_YTD                                                        !HP99999
F.TXGRS_1042_QTD                                                        !HP99999
F.TXGRS_1042_MTD                                                        !HP99999
F.TXGRS_1042_YTD_ADJ                                                    !HP99999
F.TXGRS_1042_QTD_ADJ                                                    !HP99999
F.TXGRS_1042_MTD_ADJ                                                    !HP99999
F.TXGRS_1042_ADJ                                                        !HP99999
F.WH_ALLOW_YTD                                                          !HP99999
F.WH_ALLOW_QTD                                                          !HP99999
F.WH_ALLOW_MTD                                                          !HP99999
F.WH_ALLOW_YTD_ADJ                                                      !HP99999
F.WH_ALLOW_QTD_ADJ                                                      !HP99999
F.WH_ALLOW_MTD_ADJ                                                      !HP99999
F.WH_ALLOW_ADJ                                                          !HP99999
F.EXEMPT_CD_1042                                                        !HP99999
F.EXEMPT_CD_1042_ADJ                                                    !HP99999
F.TAX1042_REFUND                                                        !HP99999
F.TAX1042_REFUND_ADJ                                                    !HP99999
F.TAX1042_REFUND_NEW                                                    !HP99999
F.ADJ_REASON                                                            !HP99999
                                                                        !HP99999
  let $Adjustments_Found = 'Y'                                          !HP99999
  do Print-Tax1042-Adjustments                                          !HP99999
                                                                        !HP99999
FROM PS_BAL_ADJ_TAX1042 F                                               !HP99999
WHERE F.COMPANY = &CS.Company  AND F.BALANCE_ID = $Calendar_Year_Id     !HP99999
     [$Date_Where_1]                                                    !HP99999
     [$Date_Where_2]                                                    !HP99999
     [$Date_Where_3]                                                    !HP99999
ORDER BY F.EMPLID, [$Date_Order_1] [$Date_Order_2]                      !HP99999
end-SELECT                                                              !HP99999
                                                                        !HP99999
end-procedure                                                           !HP99999
                                                                        !HP99999
                                                                        !HP99999
begin-procedure Print-Check-Adjustments
  next-listing need=5

  do Format-Number(&A.Total_Gross_YTD, $Total_Gross_YTD, 'b9,999,999.99')
  do Format-Number(&A.Tot_Grs_YTD_Adj, $Tot_Grs_YTD_Adj, 'b9,999,999.99')
  do Format-Number(&A.Tot_Grs_Adj, $Tot_Grs_Adj, 'b9,999,999.99')
  do Format-Number(&A.Total_Taxes_YTD, $Total_Taxes_YTD, 'b9,999,999.99')
  do Format-Number(&A.Tot_Tax_YTD_Adj, $Tot_Tax_YTD_Adj, 'b9,999,999.99')
  do Format-Number(&A.Tot_Tax_Adj, $Tot_Tax_Adj, 'b9,999,999.99')
  do Format-Number(&A.Total_Dedns_YTD, $Total_Dedns_YTD, 'b9,999,999.99')
  do Format-Number(&A.Tot_Ded_YTD_Adj, $Tot_Ded_YTD_Adj, 'b9,999,999.99')
  do Format-Number(&A.Tot_Ded_Adj, $Tot_Ded_Adj, 'b9,999,999.99')
  do Format-Number(&A.Net_Pay_YTD, $Net_Pay_YTD, 'b9,999,999.99')
  do Format-Number(&A.Net_Pay_YTD_Adj, $Net_Pay_YTD_Adj, 'b9,999,999.99')
  do Format-Number(&A.Net_Pay_Adj, $Net_Pay_Adj, 'b9,999,999.99')

  do Format-Number(&A.Balance_Year, $Calendar_Year, 'b9999999')

  print &A.EmplID               (+1,{C_EmplID})
  print &A.Bal_adj_Seq           (0,{C_BAL_ADJ_SEQ})
  print &A.Dt_Entered            (0,{C_DT_ENTERED},11)                  !HP99999
  print $Calendar_Year           (0,{C_CALENDAR_YEAR})
  let $Balance_Qtr = to_char(&A.Balance_Qtr)                            !HP99999
  let $QtrCd = ' ' || $Balance_Qtr
  print $QtrCd                   (0,{C_QTRCD})
  let $Balance_Period = to_char(&A.Balance_Period)                      !HP99999
  let $MonthCd = ' ' || $Balance_Period
  print $MonthCd                 (0,{C_MONTHCD})

  print 'Total Gross YTD'        (0,{C_FIELD_NAME})
  print $Total_Gross_YTD         (0,{C_BEFORE_ADJ})
  print $Tot_Grs_YTD_Adj         (0,{C_AFTER_ADJ})
  print $Tot_Grs_Adj             (0,{C_AMOUNT_ADJ})

  print &A.Adj_Reason           (+1,{C_REASON})
  print 'Total Taxes YTD'        (0,{C_FIELD_NAME})
  print $Total_Taxes_YTD         (0,{C_BEFORE_ADJ})
  print $Tot_Tax_YTD_Adj         (0,{C_AFTER_ADJ})
  print $Tot_Tax_Adj             (0,{C_AMOUNT_ADJ})

  print 'Deductions YTD '       (+1,{C_FIELD_NAME})
  print $Total_Dedns_YTD         (0,{C_BEFORE_ADJ})
  print $Tot_Ded_YTD_Adj         (0,{C_AFTER_ADJ})
  print $Tot_Ded_Adj             (0,{C_AMOUNT_ADJ})

  print 'Net Pay YTD    '       (+1,{C_FIELD_NAME})
  print $Net_Pay_YTD             (0,{C_BEFORE_ADJ})
  print $Net_Pay_YTD_Adj         (0,{C_AFTER_ADJ})
  print $Net_Pay_Adj             (0,{C_AMOUNT_ADJ})

end-procedure


begin-procedure Print-Earnings-Adjustments
  next-listing need=7

  do Format-Number(&C.HRS_YTD    , $HRS_YTD    , 'b9,999,999.99')
  do Format-Number(&C.HRS_YTD_ADJ, $HRS_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&C.HRS_ADJ    , $HRS_ADJ    , 'b9,999,999.99')
  do Format-Number(&C.HRS_QTD    , $HRS_QTD    , 'b9,999,999.99')
  do Format-Number(&C.HRS_QTD_ADJ, $HRS_QTD_ADJ, 'b9,999,999.99')
  do Format-Number(&C.HRS_MTD    , $HRS_MTD    , 'b9,999,999.99')
  do Format-Number(&C.HRS_MTD_ADJ, $HRS_MTD_ADJ, 'b9,999,999.99')
  do Format-Number(&C.GRS_YTD    , $GRS_YTD    , 'b9,999,999.99')
  do Format-Number(&C.GRS_YTD_ADJ, $GRS_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&C.GRS_ADJ    , $GRS_ADJ    , 'b9,999,999.99')
  do Format-Number(&C.GRS_QTD    , $GRS_QTD    , 'b9,999,999.99')
  do Format-Number(&C.GRS_QTD_ADJ, $GRS_QTD_ADJ, 'b9,999,999.99')
  do Format-Number(&C.GRS_MTD    , $GRS_MTD    , 'b9,999,999.99')
  do Format-Number(&C.GRS_MTD_ADJ, $GRS_MTD_ADJ, 'b9,999,999.99')

  do Format-Number(&C.Balance_Year, $Calendar_Year, 'b9999999')

  print &C.EmplID               (+1,{C_EmplID})
  print &C.Bal_adj_Seq           (0,{C_BAL_ADJ_SEQ})
  print &C.Dt_Entered            (0,{C_DT_ENTERED},11)                  !HP99999
  print $Calendar_Year           (0,{C_CALENDAR_YEAR})

  let $Balance_Qtr = to_char(&C.Balance_Qtr)                            !HP99999
  let $QtrCd = ' ' || $Balance_Qtr
  print $QtrCd                   (0,{C_QTRCD})
  let $Balance_Period = to_char(&C.Balance_Period)                      !HP99999
  let $MonthCd = ' ' || $Balance_Period
  print $MonthCd                 (0,{C_MONTHCD})

  print 'Total Hours YTD'        (0,{C_FIELD_NAME})
  print $HRS_YTD                 (0,{C_BEFORE_ADJ})
  print $HRS_YTD_ADJ             (0,{C_AFTER_ADJ})
  print $HRS_ADJ                 (0,{C_AMOUNT_ADJ})

  print &C.SPCL_BALANCE          (0,{C_SPECIAL_BAL})
  print &C.ERNCD                 (0,{C_EARN_CODE})

  print &C.Adj_Reason           (+1,{C_REASON})
  print 'Total Hours QTD'        (0,{C_FIELD_NAME})
  print $HRS_QTD                 (0,{C_BEFORE_ADJ})
  print $HRS_QTD_ADJ             (0,{C_AFTER_ADJ})

  print 'Total Hours MTD'       (+1,{C_FIELD_NAME})
  print $HRS_MTD                 (0,{C_BEFORE_ADJ})
  print $HRS_MTD_ADJ             (0,{C_AFTER_ADJ})

  print 'Total Gross YTD'       (+1,{C_FIELD_NAME})
  print $GRS_YTD                 (0,{C_BEFORE_ADJ})
  print $GRS_YTD_ADJ             (0,{C_AFTER_ADJ})
  print $GRS_ADJ                 (0,{C_AMOUNT_ADJ})

  print 'Total Gross QTD'       (+1,{C_FIELD_NAME})
  print $GRS_QTD                 (0,{C_BEFORE_ADJ})
  print $GRS_QTD_ADJ             (0,{C_AFTER_ADJ})

  print 'Total Gross MTD'       (+1,{C_FIELD_NAME})
  print $GRS_MTD                 (0,{C_BEFORE_ADJ})
  print $GRS_MTD_ADJ             (0,{C_AFTER_ADJ})

end-procedure


begin-procedure Print-Deduction-Adjustments
  next-listing need=4

  do Format-Number(&B.DED_YTD    , $DED_YTD    , 'b9,999,999.99')
  do Format-Number(&B.DED_YTD_ADJ, $DED_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&B.DED_QTD    , $DED_QTD    , 'b9,999,999.99')
  do Format-Number(&B.DED_QTD_ADJ, $DED_QTD_ADJ, 'b9,999,999.99')
  do Format-Number(&B.DED_MTD    , $DED_MTD    , 'b9,999,999.99')
  do Format-Number(&B.DED_MTD_ADJ, $DED_MTD_ADJ, 'b9,999,999.99')
  do Format-Number(&B.DED_ADJ    , $DED_ADJ    , 'b9,999,999.99')

  do Format-Number(&B.Balance_Year, $Calendar_Year, 'b9999999')

  print &B.EmplID               (+1,{C_EmplID})
  print &B.Bal_adj_Seq           (0,{C_BAL_ADJ_SEQ})
  print &B.Dt_Entered            (0,{C_DT_ENTERED},11)                  !HP99999
  print $Calendar_Year           (0,{C_CALENDAR_YEAR})

  let $Balance_Qtr = to_char(&B.Balance_Qtr)                            !HP99999
  let $QtrCd = ' ' || $Balance_Qtr
  print $QtrCd                   (0,{C_QTRCD})
  let $Balance_Period = to_char(&B.Balance_Period)                      !HP99999
  let $MonthCd = ' ' || $Balance_Period
  print $MonthCd                 (0,{C_MONTHCD})

  print 'Total Deduction YTD'    (0,{C_FIELD_NAME})
  print $DED_YTD                 (0,{C_BEFORE_ADJ})
  print $DED_YTD_ADJ             (0,{C_AFTER_ADJ})
  print $DED_ADJ                 (0,{C_AMOUNT_ADJ})
  print &B.PLAN_TYPE             (0,{C_PLAN_TYPE})
  print &B.BENEFIT_PLAN          (0,{C_BENEFIT_PLAN})
  print &B.DEDCD                 (0,{C_DED_CODE})

  move 'DED_CLASS' to $FieldName
  move &B.Ded_Class to $FieldValue
  do Read-Translate-Table
  let $Ded_Class = $XlatShortName
  print $DED_CLASS               (0,{C_DED_CLASS})

  print &B.Adj_Reason           (+1,{C_REASON})
  print 'Total Deduction QTD'    (0,{C_FIELD_NAME})
  print $DED_QTD                 (0,{C_BEFORE_ADJ})
  print $DED_QTD_ADJ             (0,{C_AFTER_ADJ})

  print 'Total Deduction MTD'   (+1,{C_FIELD_NAME})
  print $DED_MTD                 (0,{C_BEFORE_ADJ})
  print $DED_MTD_ADJ             (0,{C_AFTER_ADJ})

end-procedure


begin-procedure Print-Garnishment-Adjustments
  next-listing need=13

  do Format-Number(&D.DED_YTD    , $DED_YTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_YTD_ADJ, $DED_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&D.DED_ADJ    , $DED_ADJ    , 'b9,999,999.99')
  do Format-Number(&D.DED_QTD    , $DED_QTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_QTD_ADJ, $DED_QTD_ADJ, 'b9,999,999.99')
  do Format-Number(&D.DED_MTD    , $DED_MTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_MTD_ADJ, $DED_MTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.DED_GARN_YTD    , $DED_GARN_YTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_GARN_YTD_ADJ, $DED_GARN_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&D.DED_GARN_ADJ    , $DED_GARN_ADJ    , 'b9,999,999.99')

  do Format-Number(&D.DED_GARN_QTD    , $DED_GARN_QTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_GARN_QTD_ADJ, $DED_GARN_QTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.DED_GARN_MTD    , $DED_GARN_MTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_GARN_MTD_ADJ, $DED_GARN_MTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.DED_CFEE_YTD    , $DED_CFEE_YTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_CFEE_YTD_ADJ, $DED_CFEE_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&D.DED_CFEE_ADJ    , $DED_CFEE_ADJ    , 'b9,999,999.99')

  do Format-Number(&D.DED_CFEE_QTD    , $DED_CFEE_QTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_CFEE_QTD_ADJ, $DED_CFEE_QTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.DED_CFEE_MTD    , $DED_CFEE_MTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_CFEE_MTD_ADJ, $DED_CFEE_MTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.DED_PFEE_YTD    , $DED_PFEE_YTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_PFEE_YTD_ADJ, $DED_PFEE_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&D.DED_PFEE_ADJ    , $DED_PFEE_ADJ    , 'b9,999,999.99')

  do Format-Number(&D.DED_PFEE_QTD    , $DED_PFEE_QTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_PFEE_QTD_ADJ, $DED_PFEE_QTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.DED_PFEE_MTD    , $DED_PFEE_MTD    , 'b9,999,999.99')
  do Format-Number(&D.DED_PFEE_MTD_ADJ, $DED_PFEE_MTD_ADJ, 'b9,999,999.99')

  do Format-Number(&D.Balance_Year, $Calendar_Year, 'b9999999')

  print &D.EmplID               (+1,{C_EmplID})
  print &D.Bal_adj_Seq           (0,{C_BAL_ADJ_SEQ})
  print &D.Dt_Entered            (0,{C_DT_ENTERED},11)                  !HP99999
  print $Calendar_Year           (0,{C_CALENDAR_YEAR})

  let $Balance_Qtr = to_char(&D.Balance_Qtr)                            !HP99999
  let $QtrCd = ' ' || $Balance_Qtr
  print $QtrCd                   (0,{C_QTRCD})
  let $Balance_Period = to_char(&D.Balance_Period)                      !HP99999
  let $MonthCd = ' ' || $Balance_Period
  print $MonthCd                 (0,{C_MONTHCD})

  print 'Total Deduction YTD'    (0,{C_FIELD_NAME})
  print $DED_YTD                 (0,{C_BEFORE_ADJ})
  print $DED_YTD_ADJ             (0,{C_AFTER_ADJ})
  print $DED_ADJ                 (0,{C_AMOUNT_ADJ})
  print &D.PLAN_TYPE             (0,{C_PLAN_TYPE})
  print &D.BENEFIT_PLAN          (0,{C_BENEFIT_PLAN})
  print &D.DEDCD                 (0,{C_DED_CODE})

  move 'DED_CLASS' to $FieldName
  move &D.Ded_Class to $FieldValue
  do Read-Translate-Table
  let $Ded_Class = $XlatShortName
  print $DED_CLASS               (0,{C_DED_CLASS})

  print &D.GARNID                (0,{C_GARNISH_ID})

  print &D.Adj_Reason           (+1,{C_REASON})
  print 'Total Deduction QTD'    (0,{C_FIELD_NAME})
  print $DED_QTD                 (0,{C_BEFORE_ADJ})
  print $DED_QTD_ADJ             (0,{C_AFTER_ADJ})

  print 'Total Deduction MTD'   (+1,{C_FIELD_NAME})
  print $DED_MTD                 (0,{C_BEFORE_ADJ})
  print $DED_MTD_ADJ             (0,{C_AFTER_ADJ})

  print 'Total Garnishment YTD' (+1,{C_FIELD_NAME})
  print $DED_GARN_YTD            (0,{C_BEFORE_ADJ})
  print $DED_GARN_YTD_ADJ        (0,{C_AFTER_ADJ})
  print $DED_GARN_ADJ            (0,{C_AMOUNT_ADJ})

  print 'Total Garnishment QTD' (+1,{C_FIELD_NAME})
  print $DED_GARN_QTD            (0,{C_BEFORE_ADJ}
  print $DED_GARN_QTD_ADJ        (0,{C_AFTER_ADJ})

  print 'Total Garnishment MTD' (+1,{C_FIELD_NAME})
  print $DED_GARN_MTD            (0,{C_BEFORE_ADJ}
  print $DED_GARN_MTD_ADJ        (0,{C_AFTER_ADJ})

  print 'Total Company Fee YTD' (+1,{C_FIELD_NAME})
  print $DED_CFEE_YTD            (0,{C_BEFORE_ADJ})
  print $DED_CFEE_YTD_ADJ        (0,{C_AFTER_ADJ})
  print $DED_CFEE_ADJ            (0,{C_AMOUNT_ADJ})

  print 'Total Company Fee QTD' (+1,{C_FIELD_NAME})
  print $DED_CFEE_QTD            (0,{C_BEFORE_ADJ}
  print $DED_CFEE_QTD_ADJ        (0,{C_AFTER_ADJ})

  print 'Total Company Fee MTD' (+1,{C_FIELD_NAME})
  print $DED_CFEE_MTD            (0,{C_BEFORE_ADJ}
  print $DED_CFEE_MTD_ADJ        (0,{C_AFTER_ADJ})

  print 'Total Payee Fee YTD'   (+1,{C_FIELD_NAME})
  print $DED_PFEE_YTD            (0,{C_BEFORE_ADJ})
  print $DED_PFEE_YTD_ADJ        (0,{C_AFTER_ADJ})
  print $DED_PFEE_ADJ            (0,{C_AMOUNT_ADJ})

  print 'Total Payee Fee QTD'   (+1,{C_FIELD_NAME})
  print $DED_PFEE_QTD            (0,{C_BEFORE_ADJ}
  print $DED_PFEE_QTD_ADJ        (0,{C_AFTER_ADJ})

  print 'Total Payee Fee MTD'   (+1,{C_FIELD_NAME})
  print $DED_PFEE_MTD            (0,{C_BEFORE_ADJ}
  print $DED_PFEE_MTD_ADJ        (0,{C_AFTER_ADJ})

end-procedure


begin-procedure Print-Tax-Adjustments
  next-listing need=10

  do Format-Number(&E.TAX_YTD      ,$TAX_YTD      , 'b9,999,999.99')
  do Format-Number(&E.TAX_YTD_ADJ  ,$TAX_YTD_ADJ  , 'b9,999,999.99')
  do Format-Number(&E.TAX_ADJ      ,$TAX_ADJ      , 'b9,999,999.99')

  do Format-Number(&E.TAX_QTD      ,$TAX_QTD      , 'b9,999,999.99')
  do Format-Number(&E.TAX_QTD_ADJ  ,$TAX_QTD_ADJ  , 'b9,999,999.99')

  do Format-Number(&E.TAX_MTD      ,$TAX_MTD      , 'b9,999,999.99')
  do Format-Number(&E.TAX_MTD_ADJ  ,$TAX_MTD_ADJ  , 'b9,999,999.99')

  do Format-Number(&E.TXGRS_YTD    ,$TXGRS_YTD    , 'b9,999,999.99')
  do Format-Number(&E.TXGRS_YTD_ADJ,$TXGRS_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&E.TXGRS_ADJ    ,$TXGRS_ADJ    , 'b9,999,999.99')

  do Format-Number(&E.TXGRS_QTD    ,$TXGRS_QTD    , 'b9,999,999.99')
  do Format-Number(&E.TXGRS_QTD_ADJ,$TXGRS_QTD_ADJ, 'b9,999,999.99')
  do Format-Number(&E.TXGRS_MTD    ,$TXGRS_MTD    , 'b9,999,999.99')
  do Format-Number(&E.TXGRS_MTD_ADJ,$TXGRS_MTD_ADJ, 'b9,999,999.99')
  do Format-Number(&E.NLGRS_YTD    ,$NLGRS_YTD    , 'b9,999,999.99')
  do Format-Number(&E.NLGRS_YTD_ADJ,$NLGRS_YTD_ADJ, 'b9,999,999.99')
  do Format-Number(&E.NLGRS_ADJ    ,$NLGRS_ADJ    , 'b9,999,999.99')

  do Format-Number(&E.NLGRS_QTD    ,$NLGRS_QTD    , 'b9,999,999.99')
  do Format-Number(&E.NLGRS_QTD_ADJ,$NLGRS_QTD_ADJ, 'b9,999,999.99')

  do Format-Number(&E.NLGRS_MTD    ,$NLGRS_MTD    , 'b9,999,999.99')
  do Format-Number(&E.NLGRS_MTD_ADJ,$NLGRS_MTD_ADJ, 'b9,999,999.99')

  do Format-Number(&E.Balance_Year, $Calendar_Year, 'b9999999')

  move 'TAX_CLASS' to $FieldName
  move &E.Tax_Class to $FieldValue
  do Read-Translate-Table
  let $Tax_Class = $XlatShortName

  print &E.EmplID               (+1,{C_EmplID})
  print &E.Bal_adj_Seq           (0,{C_BAL_ADJ_SEQ})
  print &E.Dt_Entered            (0,{C_DT_ENTERED},11)                  !HP99999
  print $Calendar_Year           (0,{C_CALENDAR_YEAR})

  let $Balance_Qtr = to_char(&E.Balance_Qtr)                            !HP99999
  let $QtrCd = ' ' || $Balance_Qtr
  print $QtrCd                   (0,{C_QTRCD})
  let $Balance_Period = to_char(&E.Balance_Period)                      !HP99999
  let $MonthCd = ' ' || $Balance_Period
  print $MonthCd                 (0,{C_MONTHCD})

  print 'Total Taxes YTD'        (0,{C_FIELD_NAME})
  print $TAX_YTD                 (0,{C_BEFORE_ADJ})
  print $TAX_YTD_ADJ             (0,{C_AFTER_ADJ})
  print $TAX_ADJ                 (0,{C_AMOUNT_ADJ})

  LET $state_out = RTRIM(&E.STATE, ' ')

  evaluate $state_out
      when = '$U'
           move 'US Federal' to $state_out
           break
      when = '$UAS'
           move 'Federal-AS' to $state_out
           break
      when = '$UGU'
           move 'Federal-GU' to $state_out
           break
      when = '$UPR'
           move 'Federal-PR' to $state_out
           break
      when = '$UVI'
           move 'Federal-VI' to $state_out
           break
  end-evaluate

  print  $state_out              (0,{C_STATE})

  print &E.LOCALITY              (0,{C_LOCALITY})
  print $TAX_CLASS               (0,{C_TAX_CLASS})

  print &E.Adj_Reason           (+1,{C_REASON})
  print 'Total Taxes QTD'        (0,{C_FIELD_NAME})
  print $TAX_QTD                 (0,{C_BEFORE_ADJ})
  print $TAX_QTD_ADJ             (0,{C_AFTER_ADJ})
  print &E.Work_PSD_Cd           (0,{C_LOCALITY})

  print 'Total Taxes MTD'       (+1,{C_FIELD_NAME})
  print $TAX_MTD                 (0,{C_BEFORE_ADJ})
  print $TAX_MTD_ADJ             (0,{C_AFTER_ADJ})
  print &E.Res_PSD_Cd            (0,{C_LOCALITY})

  print 'Taxable Gross YTD'     (+1,{C_FIELD_NAME})
  print $TXGRS_YTD               (0,{C_BEFORE_ADJ})
  print $TXGRS_YTD_ADJ           (0,{C_AFTER_ADJ})
  print $TXGRS_ADJ               (0,{C_AMOUNT_ADJ})

  print 'Taxable Gross QTD'     (+1,{C_FIELD_NAME})
  print $TXGRS_QTD               (0,{C_BEFORE_ADJ})
  print $TXGRS_QTD_ADJ           (0,{C_AFTER_ADJ})

  print 'Taxable Gross MTD'     (+1,{C_FIELD_NAME})
  print $TXGRS_MTD               (0,{C_BEFORE_ADJ})
  print $TXGRS_MTD_ADJ           (0,{C_AFTER_ADJ})

  print 'No Limit Gross YTD'    (+1,{C_FIELD_NAME})
  print $NLGRS_YTD               (0,{C_BEFORE_ADJ})
  print $NLGRS_YTD_ADJ           (0,{C_AFTER_ADJ})
  print $NLGRS_ADJ               (0,{C_AMOUNT_ADJ})

  print 'No Limit Gross QTD'    (+1,{C_FIELD_NAME})
  print $NLGRS_QTD               (0,{C_BEFORE_ADJ})
  print $NLGRS_QTD_ADJ           (0,{C_AFTER_ADJ})

  print 'No Limit Gross MTD'    (+1,{C_FIELD_NAME})
  print $NLGRS_MTD               (0,{C_BEFORE_ADJ})
  print $NLGRS_MTD_ADJ           (0,{C_AFTER_ADJ})

end-procedure


begin-procedure Print-Tax1042-Adjustments                                            !HP99999
  next-listing need=12                                                               !HP99999
                                                                                     !HP99999
  if RTRIM(&F.EXEMPT_CD_1042_ADJ, ' ') <> ''                                         !HP99999
     let $New_Exempt_CD = &F.EXEMPT_CD_1042_ADJ                                      !HP99999
  else                                                                               !HP99999
     if RTRIM(&F.EXEMPT_CD_1042, ' ') <> ''                                          !HP99999
        let $New_Exempt_CD = &F.EXEMPT_CD_1042                                       !HP99999
     else                                                                            !HP99999
        let $New_Exempt_CD = '  '                                                    !HP99999
     end-if                                                                          !HP99999
  end-if                                                                             !HP99999
                                                                                     !HP99999
  do Format-Number(&F.TAX_1042_YTD      ,$TAX_1042_YTD      , 'b9,999,999.99')       !HP99999
  do Format-Number(&F.TAX_1042_YTD_ADJ  ,$TAX_1042_YTD_ADJ  , 'b9,999,999.99')       !HP99999
  do Format-Number(&F.TAX_1042_ADJ      ,$TAX_1042_ADJ      , 'b9,999,999.99')       !HP99999
                                                                                     !HP99999
  do Format-Number(&F.TAX_1042_QTD      ,$TAX_1042_QTD      , 'b9,999,999.99')       !HP99999
  do Format-Number(&F.TAX_1042_QTD_ADJ  ,$TAX_1042_QTD_ADJ  , 'b9,999,999.99')       !HP99999
                                                                                     !HP99999
  do Format-Number(&F.TAX_1042_MTD      ,$TAX_1042_MTD      , 'b9,999,999.99')       !HP99999
  do Format-Number(&F.TAX_1042_MTD_ADJ  ,$TAX_1042_MTD_ADJ  , 'b9,999,999.99')       !HP99999
                                                                                     !HP99999
  do Format-Number(&F.TXGRS_1042_YTD    ,$TXGRS_1042_YTD    , 'b9,999,999.99')       !HP99999
  do Format-Number(&F.TXGRS_1042_YTD_ADJ,$TXGRS_1042_YTD_ADJ, 'b9,999,999.99')       !HP99999
  do Format-Number(&F.TXGRS_1042_ADJ    ,$TXGRS_1042_ADJ    , 'b9,999,999.99')       !HP99999
                                                                                     !HP99999
  do Format-Number(&F.TXGRS_1042_QTD    ,$TXGRS_1042_QTD    , 'b9,999,999.99')       !HP99999
  do Format-Number(&F.TXGRS_1042_QTD_ADJ,$TXGRS_1042_QTD_ADJ, 'b9,999,999.99')       !HP99999
  do Format-Number(&F.TXGRS_1042_MTD    ,$TXGRS_1042_MTD    , 'b9,999,999.99')       !HP99999
  do Format-Number(&F.TXGRS_1042_MTD_ADJ,$TXGRS_1042_MTD_ADJ, 'b9,999,999.99')       !HP99999
  do Format-Number(&F.WH_ALLOW_YTD      ,$WH_ALLOW_YTD    ,   'b9,999,999.99')       !HP99999
  do Format-Number(&F.WH_ALLOW_YTD_ADJ  ,$WH_ALLOW_YTD_ADJ,   'b9,999,999.99')       !HP99999
  do Format-Number(&F.WH_ALLOW_ADJ      ,$WH_ALLOW_ADJ    ,   'b9,999,999.99')       !HP99999
                                                                                     !HP99999
  do Format-Number(&F.WH_ALLOW_QTD      ,$WH_ALLOW_QTD    ,   'b9,999,999.99')       !HP99999
  do Format-Number(&F.WH_ALLOW_QTD_ADJ  ,$WH_ALLOW_QTD_ADJ,   'b9,999,999.99')       !HP99999
                                                                                     !HP99999
  do Format-Number(&F.WH_ALLOW_MTD      ,$WH_ALLOW_MTD    ,   'b9,999,999.99')       !HP99999
  do Format-Number(&F.WH_ALLOW_MTD_ADJ  ,$WH_ALLOW_MTD_ADJ,   'b9,999,999.99')       !HP99999
                                                                                     !HP99999
  do Format-Number(&F.TAX1042_REFUND,     $TAX1042_REFUND,     'b9,999,999.99')      !HP99999
  do Format-Number(&F.TAX1042_REFUND_ADJ, $TAX1042_REFUND_ADJ, 'b9,999,999.99')      !HP99999
  do Format-Number(&F.TAX1042_REFUND_NEW, $TAX1042_REFUND_NEW, 'b9,999,999.99')      !HP99999
                                                                                     !HP99999
  do Format-Number(&F.Balance_Year, $Calendar_Year, 'b9999999')                      !HP99999
                                                                                     !HP99999
                                                                                     !HP99999
  print &F.EmplID               (+1,{C_EmplID})                                      !HP99999
  print &F.Bal_adj_Seq           (0,{C_BAL_ADJ_SEQ})                                 !HP99999
  print &F.Dt_Entered            (0,{C_DT_ENTERED},11)                               !HP99999
  print $Calendar_Year           (0,{C_CALENDAR_YEAR})                               !HP99999
                                                                                     !HP99999
  let $Balance_Qtr = to_char(&F.Balance_Qtr)                                         !HP99999
  let $QtrCd = ' ' || $Balance_Qtr                                                   !HP99999
  print $QtrCd                   (0,{C_QTRCD})                                       !HP99999
  let $Balance_Period = to_char(&F.Balance_Period)                                   !HP99999
  let $MonthCd = ' ' || $Balance_Period                                              !HP99999
  print $MonthCd                 (0,{C_MONTHCD})                                     !HP99999
                                                                                     !HP99999
  print 'Total Taxes YTD'        (0,{C_FIELD_NAME})                                  !HP99999
  print $TAX_1042_YTD            (0,{C_BEFORE_ADJ})                                  !HP99999
  print $TAX_1042_YTD_ADJ        (0,{C_AFTER_ADJ})                                   !HP99999
  print $TAX_1042_ADJ            (0,{C_AMOUNT_ADJ})                                  !HP99999

  LET $state_out = RTRIM(&F.STATE, ' ')

  evaluate $state_out
      when = '$U'
           move 'US Federal' to $state_out
           break
      when = '$UAS'
           move 'Federal-AS' to $state_out
           break
      when = '$UGU'
           move 'Federal-GU' to $state_out
           break
      when = '$UPR'
           move 'Federal-PR' to $state_out
           break
      when = '$UVI'
           move 'Federal-VI' to $state_out
           break
  end-evaluate
                                                   !HP99999
  print $state_out               (0,{C_STATE})                                       !HP99999
                                                                                     !HP99999
  LET $cntry_out = RTRIM(&F.COUNTRY, ' ')                                            !HP99999
  print $cntry_out               (0,{C_COUNTRY})                                     !HP99999
                                                                                     !HP99999
  if $PublicSector = 'Y'                                                             !HP99999
    print &F.INCOME_CD_1042      (0,{C_LOCALITY_HP})                                 !HP99999
    print &F.TAX_RT              (0,{C_TAX_CLASS_HP})                                !HP99999
  else                                                                               !HP99999
    print &F.INCOME_CD_1042      (0,{C_LOCALITY})                                    !HP99999
    print &F.TAX_RT              (0,{C_TAX_CLASS})                                   !HP99999
  end-if                                                                             !HP99999
                                                                                     !HP99999
  print &F.Adj_Reason           (+1,{C_REASON})                                      !HP99999
  print 'Total Taxes QTD'        (0,{C_FIELD_NAME})                                  !HP99999
  print $TAX_1042_QTD                 (0,{C_BEFORE_ADJ})                             !HP99999
  print $TAX_1042_QTD_ADJ             (0,{C_AFTER_ADJ})                              !HP99999
                                                                                     !HP99999
  print 'Total Taxes MTD'       (+1,{C_FIELD_NAME})                                  !HP99999
  print $TAX_1042_MTD                 (0,{C_BEFORE_ADJ})                             !HP99999
  print $TAX_1042_MTD_ADJ             (0,{C_AFTER_ADJ})                              !HP99999
                                                                                     !HP99999
                                                                                     !HP99999
  print 'Taxable Gross YTD'     (+1,{C_FIELD_NAME})                                  !HP99999
  print $TXGRS_1042_YTD               (0,{C_BEFORE_ADJ})                             !HP99999
  print $TXGRS_1042_YTD_ADJ           (0,{C_AFTER_ADJ})                              !HP99999
  print $TXGRS_1042_ADJ               (0,{C_AMOUNT_ADJ})                             !HP99999
                                                                                     !HP99999
  print 'Taxable Gross QTD'     (+1,{C_FIELD_NAME})                                  !HP99999
  print $TXGRS_1042_QTD               (0,{C_BEFORE_ADJ})                             !HP99999
  print $TXGRS_1042_QTD_ADJ           (0,{C_AFTER_ADJ})                              !HP99999
                                                                                     !HP99999
  print 'Taxable Gross MTD'     (+1,{C_FIELD_NAME})                                  !HP99999
  print $TXGRS_1042_MTD               (0,{C_BEFORE_ADJ})                             !HP99999
  print $TXGRS_1042_MTD_ADJ           (0,{C_AFTER_ADJ})                              !HP99999
                                                                                     !HP99999
  print 'Withholding Allowance YTD'    (+1,{C_FIELD_NAME})                           !HP99999
  print $WH_ALLOW_YTD               (0,{C_BEFORE_ADJ})                               !HP99999
  print $WH_ALLOW_YTD_ADJ           (0,{C_AFTER_ADJ})                                !HP99999
  print $WH_ALLOW_ADJ               (0,{C_AMOUNT_ADJ})                               !HP99999
                                                                                     !HP99999
  print 'Withholding Allowance QTD'    (+1,{C_FIELD_NAME})                           !HP99999
  print $WH_ALLOW_QTD               (0,{C_BEFORE_ADJ})                               !HP99999
  print $WH_ALLOW_QTD_ADJ           (0,{C_AFTER_ADJ})                                !HP99999
                                                                                     !HP99999
  print 'Withholding Allowance MTD'    (+1,{C_FIELD_NAME})                           !HP99999
  print $WH_ALLOW_MTD               (0,{C_BEFORE_ADJ})                               !HP99999
  print $WH_ALLOW_MTD_ADJ           (0,{C_AFTER_ADJ})                                !HP99999
                                                                                     !HP99999
  print 'Reimbursed Amount'     (+1,{C_FIELD_NAME})                                  !HP99999
  print $TAX1042_REFUND             (0,{C_BEFORE_ADJ})                               !HP99999
  print $TAX1042_REFUND_NEW         (0,{C_AFTER_ADJ})                                !HP99999
  print $TAX1042_REFUND_ADJ         (0,{C_AMOUNT_ADJ})                               !HP99999
                                                                                     !HP99999
  print 'Exemption Code'               (+1,{C_FIELD_NAME})                           !HP99999
  print &F.EXEMPT_CD_1042           (0,{C_CODE_BEFORE_ADJ})                          !HP99999
  print &F.EXEMPT_CD_1042_ADJ       (0,{C_CODE_AMOUNT_ADJ})                          !HP99999
  print $New_Exempt_CD              (0,{C_CODE_AFTER_ADJ})                           !HP99999
                                                                                     !HP99999
end-procedure                                                                        !HP99999
                                                                                     !HP99999
                                                                                     !HP99999
begin-procedure page_break

    if $End = 'Y'
      do Reset
    end-if

    new-page
end-procedure


begin-procedure Build-Where-Clause

    if RTRIM($Which_Date, ' ') = 'A'
        let $W1 = 'AND '
        let $W2 = $Prefix
        let $W3 = '.DT_ENTERED BETWEEN '''
        let $W4 =  $FromDate
        let $W5 =  ''' AND '''
        let $W6 =  $AsOfDate
        let $W7 =  ''''

        let $Date_Where_1 = $W1 || $W2 || $W3 || $W4 || $W5 || $W6 || $W7
        let $Date_Where_2 = ''
        let $Date_Where_3 = ''

        let $O1 = $Prefix
        let $O2 = '.DT_ENTERED'
        let $Date_Order_1 = $O1 || $O2
        let $Date_Order_2 = ''
    end-if

    if RTRIM($Which_Date, ' ') = 'B'
        move $AsOfDate to $Save_AsOfDate
        move $FromDate to $AsOfDate
        do Get-Date-Codes
        let #From_Year   = to_number($AsOfYYYY)
        ! #from_month  = $AsOfMonth
         let #from_month  = to_number($AsOfMonth)

        move $Save_AsOfDate to $AsOfDate
        do Get-Date-Codes
        let #To_Year   = to_number($AsOfYYYY)
        !let $To_Month  = $AsOfMonth
        let $AsOfMonth = ltrim($AsOfMonth, '0')                         !HP99999
        let #To_Month  = to_number($AsOfMonth)

        let $W1 = 'AND (('
        let $W2 = $Prefix
        let $W3 = '.BALANCE_YEAR > '
        do Format-Number(#From_Year, $W4, '9999')
        let $W5 = ' AND '
        let $W6 = $Prefix
        let $W7 = '.BALANCE_YEAR < '
        do Format-Number(#To_Year, $W8, '9999')
        let $W9 = ')'
        let $Date_Where_1 = $W1 || $W2 || $W3 || $W4 || $W5 || $W6 || $W7 || $W8 ||  $W9

        let $W1 = ' OR ('
        let $W2 = $Prefix
        let $W3 = '.BALANCE_YEAR = '
        do Format-Number(#From_Year, $W4, '9999')
        let $W5 =  ' AND '
        let $W6 = $Prefix
        let $W7 = '.BALANCE_PERIOD >= '
        do Format-Number(#from_month, $W8, '99')
        let $W9 = ')'
        let $Date_Where_2 = $W1 || $W2 || $W3 || $W4 || $W5 || $W6 || $W7 || $W8 || $W9

        if #From_Year = #To_Year
           let $W1 = ' AND ('
        else
           let $W1 = ' OR ('
        end-if

        let $W2 = $Prefix
        let $W3 = '.BALANCE_YEAR = '
        do Format-Number(#To_Year, $W4, '9999')
        let $W5 = ' AND '
        let $W6 = $Prefix
        let $W7 = '.BALANCE_PERIOD <= '
        do Format-Number(#To_Month, $W8, '99')
        let $W9 = '))'
        let $Date_Where_3 = $W1 || $W2 || $W3 || $W4 || $W5 || $W6 || $W7 || $W8 || $W9

        let $O1 = $Prefix
        let $O2 = '.BALANCE_YEAR,'
        let $Date_Order_1 = $O1 || $O2
        let $O2 = '.BALANCE_PERIOD'
        let $Date_Order_2 = $O1 || $O2
    end-if

end-procedure


#Include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'curdttim.sqc'  !Current Date and Time
#include 'geteandg.sqc'  !Get-EandG procedure                           !HP00001
#include 'getftdts.sqc'  !Current Date and Time
#include 'getdatcd.sqc'  !Get Year, Quarter Month Codes from $AsOfDate
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#include 'reset.sqc'     !Reset Printer
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrctl2.sqc'  !Get-Run-Control procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'getmsgct.sqc'  !Gets Message Catalog
