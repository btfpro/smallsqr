!***********************************************************************
!  PAY716: Print contents of Garnishment DE Definition Tables          *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:05:03:27                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PAY716' to $ReportID

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  do Get-Report-Language
  move $Pay716_ReportTitle to $ReportTitle

  display ' '
  display $ReportTitle
  display ' '

end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from PAY716 program ids
  do Init_Report_Translation($ReportID,$language_cd)

  do Get_Field_Information ('PAY716', 'REPORT_TITLE',  $Pay716_ReportTitle,   #dummy_width)
  do Get_Field_Information ('PAY716', 'GARN_DE_DEFN1', $Pay716_Garn_DE_Defn1, #dummy_width)
  do Get_Field_Information ('PAY716', 'EFFDT1',        $Pay716_EffDt1,        #dummy_width)
  do Get_Field_Information ('PAY716', 'MAINT_RESP1',   $Pay716_Maint_Resp1,   #dummy_width)
  do Get_Field_Information ('PAY716', 'DECALC_FTX1',   $Pay716_Decalc_FTX1,   #dummy_width)
  do Get_Field_Information ('PAY716', 'DECALC_STX1',   $Pay716_Decalc_STX1,   #dummy_width)
  do Get_Field_Information ('PAY716', 'DECALC_LTX1',   $Pay716_Decalc_LTX1,   #dummy_width)
  do Get_Field_Information ('PAY716', 'DECALC_CSP1',   $Pay716_Decalc_CSP1,   #dummy_width)
  do Get_Field_Information ('PAY716', 'PLAN_TYPE1',    $Pay716_Plan_Type1,    #dummy_width)
  do Get_Field_Information ('PAY716', 'BEN_PLAN1',     $Pay716_Ben_Plan1,     #dummy_width)
  do Get_Field_Information ('PAY716', 'DEDCD1',        $Pay716_DedCd1,        #dummy_width)
  do Get_Field_Information ('PAY716', 'DED_CLASS1',    $Pay716_Ded_Class1,    #dummy_width)
  do Get_Field_Information ('PAY716', 'GARN_DE_DEFN2', $Pay716_Garn_DE_Defn2, #dummy_width)
  do Get_Field_Information ('PAY716', 'EFFDT2',        $Pay716_EffDt2,        #dummy_width)
  do Get_Field_Information ('PAY716', 'DESCRLONG2',    $Pay716_DescrLong2,    #dummy_width)
  do Get_Field_Information ('PAY716', 'MAINT_RESP2',   $Pay716_Maint_Resp2,   #dummy_width)
  do Get_Field_Information ('PAY716', 'DECALC_FTX2',   $Pay716_Decalc_FTX2,   #dummy_width)
  do Get_Field_Information ('PAY716', 'DECALC_STX2',   $Pay716_Decalc_STX2,   #dummy_width)
  do Get_Field_Information ('PAY716', 'DECALC_LTX2',   $Pay716_Decalc_LTX2,   #dummy_width)
  do Get_Field_Information ('PAY716', 'DECALC_CSP2',   $Pay716_Decalc_CSP2,   #dummy_width)
  do Get_Field_Information ('PAY716', 'PLAN_TYPE2',    $Pay716_Plan_Type2,    #dummy_width)
  do Get_Field_Information ('PAY716', 'BEN_PLAN2',     $Pay716_Ben_Plan2,     #dummy_width)
  do Get_Field_Information ('PAY716', 'DEDCD2',        $Pay716_DedCd2,        #dummy_width)
  do Get_Field_Information ('PAY716', 'DED_CLASS2',    $Pay716_Ded_Class2,    #dummy_width)

end-procedure


begin-HEADING 7

  #Include 'stdhdgtr.sqc'

  print $Pay716_Garn_DE_Defn1  (+2,1)
  print $Pay716_EffDt1         (0,13)
  print $Pay716_Maint_Resp1    (0,60)
  print $Pay716_Decalc_FTX1    (0,67)
  print $Pay716_Decalc_STX1    (0,79)
  print $Pay716_Decalc_LTX1    (0,91)
  print $Pay716_Decalc_CSP1    (0,103)
  print $Pay716_Plan_Type1     (0,119)
  print $Pay716_Ben_Plan1      (0,125)
  print $Pay716_DedCd1         (0,134)
  print $Pay716_Ded_Class1     (0,145)

  print $Pay716_Garn_DE_Defn2  (+1,1)
  print $Pay716_EffDt2         (0,13)
  print $Pay716_DescrLong2     (0,28)
  print $Pay716_Maint_Resp2    (0,60)
  print $Pay716_Decalc_FTX2    (0,67)
  print $Pay716_Decalc_STX2    (0,79)
  print $Pay716_Decalc_LTX2    (0,91)
  print $Pay716_Decalc_CSP2    (0,103)
  print $Pay716_Plan_Type2     (0,119)
  print $Pay716_Ben_Plan2      (0,125)
  print $Pay716_DedCd2         (0,134)
  print $Pay716_Ded_Class2     (0,145)

end-HEADING

!***********************************************************************
!  PROC PROCESS-MAIN
!         Main Procedure
!***********************************************************************

BEGIN-PROCEDURE Process-Main
BEGIN-SELECT

A.GARN_DE_DEFNID           (+1,1,10)   on-break level=1
A.EFFDT
  do Format-DateTime(&A.EffDt, $out, {DEFDATE}, '', '')
  print $out               (0,+2)
A.EFF_STATUS
  if &A.Eff_Status = 'I'
    print 'I'              (0,0,1)
  else
    print ' '              (0,0,1)
  end-if
A.DESCR                    !(0,28,30)
A.DESCRLONG
          move &A.DESCR      to $PRNT_DESCR
          move &A.DESCRLONG to $PRNT_DESCRLONG
        if $Curr_language_cd <> $Psoptions_Language_Cd
        do Lang-Record-Details
        end-if
          print $PRNT_DESCR      (0,28,30)

A.MAINT_RESPONSBLTY        (0,+4,3)
A.DECALC_SUBTR_FTX         (0,+6,6)
A.DECALC_SUBTR_STX         (0,+6,6)
A.DECALC_SUBTR_LTX         (0,+6,6)
A.DECALC_SUBTR_CSP         (0,+6,6)

  do Get-Deduction-Records

  if RTRIM($PRNT_DescrLong,' ') <> ''
   print $PRNT_DescrLong     (+2,28)      wrap 140 20
                                       ON=<10> STRIP=<13>
   POSITION (+1)
 end-if

FROM  PS_GARN_DE_DEFN A
ORDER BY A.GARN_DE_DEFNID, A.EFFDT DESC
END-SELECT
END-PROCEDURE


BEGIN-PROCEDURE Lang-Record-Details
BEGIN-SELECT
LA.DESCR
LA.DESCRLONG

        let $PRNT_DESCR = Cond(Rtrim(&LA.DESCR,' ')='', &A.DESCR, &LA.DESCR)
        let $PRNT_DESCRLONG = Cond(Rtrim(&LA.DESCRLONG,' ')='', &A.DESCRLONG, &LA.DESCRLONG)

FROM PS_GARN_DE_DEF_LNG LA
WHERE LA.GARN_DE_DEFNID = &A.GARN_DE_DEFNID
  AND LA.LANGUAGE_CD    = $Curr_language_cd
  AND LA.EFFDT          = (SELECT MAX(EFFDT) FROM PS_GARN_DE_DEF_LNG
                            WHERE GARN_DE_DEFNID = &A.GARN_DE_DEFNID
                              AND LANGUAGE_CD    = $Curr_language_cd
                              AND EFFDT         <= &A.EFFDT)
END-SELECT
END-PROCEDURE

BEGIN-PROCEDURE Get-Deduction-Records

  move 0 to #LineIncr

BEGIN-SELECT

B.PLAN_TYPE                    (+#LINEINCR,119,4)
B.BENEFIT_PLAN                 (0,+2,7)
B.DEDCD                        (0,+2,9)
B.DED_CLASS                    (0,+2,9)

  move 1 to #LineIncr

FROM  PS_GARN_DE_DED B
WHERE B.GARN_DE_DEFNID    = &A.Garn_DE_DefnID
  AND B.EFFDT             = &A.EffDt
ORDER BY B.PLAN_TYPE, B.BENEFIT_PLAN, B.DEDCD, B.DED_CLASS
END-SELECT
END-PROCEDURE

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language


