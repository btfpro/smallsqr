!***********************************************************************
!  GPUSBND1:  Global Payroll US - Bond Purchase Report
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/21:01:41:46                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#Include 'setup31.sqc' !Printer and page-size initialization
#Include 'usarpt.sqc'  !Get USA Variables

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'GPUSBND1' to $ReportID
  move 'Bond Purchase Report' to $ReportTitle
  display ''
  display $ReportTitle
  display ''

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init
  display 'Report Began: ' noline
  display $AsofNow
  do Report
  do Get-Current-DateTime
  display 'Report Ended: ' noline
  display $AsofNow

end-procedure


begin-heading 8

#Include 'stdhdg02.sqc'

  print 'Bond ID: '       (+1,1)
  print $HdgBondID        ()
  
  print 'Denomination:'   (0,26)
  print $HdgDenom         ()
  print 'Purchase Cost:'  (0,50)
  print $HdgCost          ()
  
  
  print 'No.Of'            (+2,46)
  print 'Purchase'         (0,53)
  print 'Bond Owner Name/' (0,65)
  print 'Co-Owner/'        (0,111)
    
  print 'Employee ID'      (+1,1)
  print 'Name'             (0,14)
  print 'Bonds'            (0,46)
  print 'Date'             (0,55)
  print 'Other Registrant Name'    (0,65)
  print 'SSN'                      (0,101)
  print 'Beneficiary'              (0,111)

  
end-heading


begin-procedure Report
  move 'N' to $Bond_Purchase
begin-SELECT
A.COMPANY               () on-break print=never level=1 procedure=Company-Change
A.EMPLID
A.EMPL_RCD
A.CAL_RUN_ID
A.GP_PAYGROUP
A.CAL_ID
A.SEG_BGN_DT
A.SEG_END_DT
A.SEQ_NUM8
A.ORIG_CAL_RUN_ID
A.GPUS_BND_ID           () on-break print=never level=2 procedure=Denom-Change
B.GPUS_BND_PURCH_AMT
B.GPUS_BND_RDMPT_AMT
B.DESCR
A.GPUS_BND_LOG_STAT
A.GPUS_BND_PURCH_UNI
A.GPUS_BND_PURCH_AMT
A.GPUS_BND_COLL_AMT
A.GPUS_BND_DISB_AMT
A.EFFDT
A.GPUS_BND_NUM
A.GPUS_BND_OWNER_T
A.GPUS_BND_DEP_BEN
A.GPUS_BND_OTH_REG_T
A.GPUS_BND_REG
A.GPUS_BND_OTH_BEN
   let $Emplid     = &A.EMPLID
   let $Pay_End_Dt = &A.EFFDT
   let $Owner_Type = &A.GPUS_BND_OWNER_T
   let $Dep_Benef  = &A.GPUS_BND_DEP_BEN
   let $Oth_Reg_T  = &A.GPUS_BND_OTH_REG_T
   let $Oth_Reg    = &A.GPUS_BND_REG
   let $Oth_Benef  = &A.GPUS_BND_OTH_BEN
   let #Bond_Purch_Uni = &A.GPUS_BND_PURCH_UNI
   let #Bond_Purch_Amt = &B.GPUS_BND_PURCH_AMT
   let #Bond_Rdmpt_Amt = &B.GPUS_BND_RDMPT_AMT
   
   do Bond-Purchase
   do Print-Owner-Data

FROM  PS_GPUS_BND_DTL A,
      PS_GPUS_BND_TBL B

WHERE A.GPUS_BND_ID = B.GPUS_BND_ID
AND B.EFFDT = (SELECT MAX(EFFDT) FROM PS_GPUS_BND_TBL
              WHERE GPUS_BND_ID = A.GPUS_BND_ID
              AND EFF_STATUS = 'A'
              AND EFFDT <= A.EFFDT)

ORDER BY A.COMPANY, A.GPUS_BND_ID, A.EMPLID
end-SELECT
  if $Bond_Purchase = 'Y'
    do Company-Change
  end-if

  move 'Y' to $End_of_Report  !for Reset's begin-footing
end-procedure



begin-procedure Bond-Purchase
  move 'Y' to $Bond_Purchase

  move &A.COMPANY      to $Company
  move #Bond_Rdmpt_Amt to $HdgDenom $$$,$$9
  move #Bond_Purch_Amt to $HdgCost  $$$,$$9
  move &B.DESCR        to $HdgBondID
  add  #Bond_Purch_Uni to #TotalBonds
end-procedure



begin-procedure Print-Owner-Data
   do Get-Empl-Data
   if $Owner_Type = '10'
     let $Name = $EmplName
     let $SSN  = $EmplSSN
   else
     let $DepBen = $Dep_Benef
     do Get-Dependent-Data
     let $Name = $DepName
     let $SSN  = $DepSSN
   end-if

  do Rotate-Name
  move $Name  to $OwnerName
  move $SSN   to $OwnerSSN
  print $Emplid                         (1,1)
  print $EmplName                       (0,14,30)
  print #Bond_Purch_Uni                 (0,46)  edit 999
  do Format-DateTime($Pay_End_Dt, $out, {DEFDATE}, '', '')
  print $out                            (0,53)
  print $OwnerName                      (0,65,30)
  if rtrim($OwnerSSN,' ') <> ''
    print $OwnerSSN                     (0,97)  edit xxx-xx-xxxx
  end-if

  if $Oth_Reg_T = '10'    !None
  else
     if $Oth_Reg_T = '10'  !Employee
        move $EmplName to $Name
        move $EmplSSN  to $SSN
     else
        move $Oth_Benef to $DepBen
        if $Oth_Reg = '30'
           do Get-Dependent-Data
           let $Name = $DepName
           let $SSN  = $DepSSN
        else
           let $Name = $EmplName
           let $SSN  = $EmplSSN
        end-if
     end-if
 
     do Rotate-Name
     print $Name                        (2,65,30)
     if rtrim($SSN,' ') <> ''
        print $SSN                      (0,97)  edit xxx-xx-xxxx
     end-if     
     Evaluate $Oth_Reg_T
        when = '10'
           Let $OthRegType = ' '
        when = '20'
           Let $OthRegType = 'Co-Owner'
        when = '30'
           Let $OthRegType = 'Beneficiary'
     end-evaluate
     print $OthRegType            (0,111)
  end-if
  next-listing skiplines=1 need=2
end-procedure Print-Owner-Data



begin-procedure Get-Dependent-Data
  move '' to $DepName
  move '' to $DepSSN
begin-SELECT
H.NAME
  let $DepName = &H.NAME
  
FROM  PS_DEP_BEN_NAME H
WHERE H.EMPLID           = $Emplid
  AND H.DEPENDENT_BENEF  = $DepBen
  AND H.EFFDT = (SELECT MAX(EFFDT) FROM PS_DEP_BEN_NAME
                 WHERE EMPLID = $Emplid
                 AND DEPENDENT_BENEF = $DepBen
                 AND EFFDT <= $Pay_End_Dt)
end-SELECT

begin-SELECT
HN.NATIONAL_ID
  let $DepSSN = &HN.NATIONAL_ID
  
FROM  PS_DEP_BENEF_NID HN
WHERE HN.EMPLID           = $Emplid
  AND HN.DEPENDENT_BENEF  = $DepBen
  AND HN.NATIONAL_ID_TYPE = 'PR'
end-SELECT
end-procedure Get-Dependent-Data



begin-procedure Get-Empl-Data
  move '' to $EmplName
  move '' to $EmplSSN
begin-select
EN.NAME
  let $EmplName = &EN.NAME

FROM PS_PERSON_NAME EN
WHERE EMPLID = $Emplid
end-select

begin-select
PN.NATIONAL_ID 
  let $EmplSSN = &PN.NATIONAL_ID

FROM PS_PERS_NID PN
WHERE PN.EMPLID =  $Emplid
AND PN.NATIONAL_ID_TYPE = 'PR'
end-select
end-procedure Get-Empl-Data



begin-procedure Company-Change
  move 'Y' to $CompChg
  do Denom-Change
  move 'N' to $CompChg
  print 'Total Bonds Purchased--All Denominations:' (+2,1)
  do Format-Number(#CompanyTotal, $out, '999,999')
  print $out                                (0,42)
  move 0 to #CompanyTotal
  new-page
end-procedure Company-Change



begin-procedure Denom-Change
  print 'Total '            (+2,12)
  print $HdgDenom           ()
  print ' Bonds Purchased:' ()
  do Format-Number(#TotalBonds, $out, '99,999')
  print $out        (0,43)
  add #TotalBonds to #CompanyTotal
  move 0 to #TotalBonds

  if $CompChg <> 'Y'
    new-page
  end-if
end-procedure Denom-Change


#Include 'gpuscodt.sqc'  !Get-Company-Data procedure
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to a given language
