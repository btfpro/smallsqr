
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/02/06:20:19:51                                 
!       $Release:  HR9                                                 
!    $Resolution:  688700                                              
!                                                                      *
!***********************************************************************
! Modifications                                                        *
!                                                                      *
! 107388 - Changes to print based on absolute instead of relative      *
!          positioning. Other incidents addressed as well              *
!***********************************************************************



!***********************************************************************
!                                                                      *
!  Function:     Process-PAR-Nbr                                       *
!                                                                      *
!  Description                                                         *
!                                                                      *
!***********************************************************************
Begin-Procedure Process-PAR-Nbr

display 'Processing PAR For:    '
display 'Emplid ' noline
display $EMPLID
display 'Empl Rec Number ' noline
display #EMPL_RCD
display 'EFFDT '   noline
display  $EFFDT
display 'EFFSEQ ' noline
display  #EFFSEQ
display 'PAR Type ' noline
display  $gvt_par_type

do Initialize-Data

evaluate  $gvt_par_type
     when = 'P'
        do  Process-Job-Award-or-Bonus-PAR
        break
     when = 'R'
        !do  Process-Recruit-PAR
        break
end-evaluate

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Process-Job-Award-or-Bonus-PAR                        *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Process-Job-Award-or-Bonus-PAR

do Select-Job-Data

do Determine-Side-of-Report

do Get-NOA-Code-Descr

do Process-Job-Data

do Get-Position-Data

do Retrieve-Highest-Educ-Info          ! R--I24G1

do Determine-Authorization-Fields

do Process-NOA-Code

do Get-Par-Tracking

do Get-Remarks

do Process-Translate-Values

if  $gvt_form_type  =  'SF50'
    do Print-SF50-Form
else
    do Print-SF52-Form
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Initialize-Data                                       *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
begin-procedure Initialize-Data

create-array  name  = remarks  size=300
              field = remarks_line:char


let $action_flag        = 'N'
let $milgrade           = ' '
let $milsep             = ' '
let $credmil            = ' '
let $disvet             = ' '
let $milstatus          = ' '
let $milstart           = 0
let $milend             = 0
let $belowmaj           = ' '
let $abovemaj           = ' '
let $trk_wip_status     = ' '
let $wip_status         = ' '
let $wip_record         = ' '
let $gvt_date_wrk       = ' '
let $namevar            = ' '
let $job_spclst         = ' '
let $geochk             = ' '
let $found_previous_occurrence = 'N'
let $found_PAR_NBR      = 'N'
let $action_xlat        = ' '
let $name               = ' '
let $ssn                = ' '
let $birthdate          = ''
let $gvt_noa_descr      = ' '
let $gvt_noa_descr2     = ' '
let $gvt_effdt_proposed = ''
let $gvt_cont_emplid    = ' '
let $gvt_cont_name      = ' '
let $gvt_cont_phone     = ' '
let $gvt_req_emplid     = ' '
let $gvt_req_name       = ' '
let $gvt_req_title      = ' '
let $gvt_req_date       = ''
let $gvt_auth_emplid    = ' '
let $gvt_auth_name      = ' '
let $gvt_auth_title     = ' '
let $gvt_auth_date      = ''
let $action             = ' '
let $action_reason      = ' '
let $gvt_noa_code       = ' '
let $gvt_par_nte_date   = ' '
let $field5a            = ' '
let $field5b            = ' '
let $field5b1           = ' '        !use $field5b1 to replace $gvt_noa_descr2
let $field5c            = ' '
let $field5d1           = ' '
let $field5d2           = ' '
let $field5e            = ' '
let $field5f1           = ' '
let $field5f2           = ' '
let $field6a            = ' '
let $field6b1           = ' '
let $field6b2           = ' '
let $field6c            = ' '
let $field6d1           = ' '
let $field6d2           = ' '
let $field6e            = ' '
let $field6f1           = ' '
let $field6f2           = ' '
let $field7a            = ' '
let $field7b            = ' '
let $field7c            = ' '
let $field8             = ' '
let $field9             = ' '
let $field10            = ' '
let $field11            = ' '
let #field12            = 0
let $field12            = ' '
let #field12a           = 0
let $field12a           = ' '
let #field12b           = 0
let $field12b           = ' '
let #field12c           = 0
let $field12c           = ' '
let #field12d           = 0
let $field12d           = ' '
let $field13            = ' '
let $gvt_sub_agency     = ' '
let $field14a           = ' '
let $field14b           = ' '
let $field14c           = ' '
let $field14d           = ' '
let $field14e           = ' '
let $field14f           = ' '
let $field14g           = ' '
let $field14h           = ' '
let $field14x           = ' '
let $field15a           = ' '
let $field15b           = ' '
let $field15c           = ' '
let $field16            = ' '
let $field17            = ' '
let $field18            = ' '
let $field19            = ' '
let #field20            = 0
let $field20            = ' '
let #field20a           = 0
let $field20a           = ' '
let #field20b           = 0
let $field20b           = ' '
let #field20c           = 0
let $field20c           = ' '
let #field20d           = 0
let $field20d           = ' '
let $field21            = ' '
let $field22a           = ' '
let $field22b           = ' '
let $field22c           = ' '
let $field22d           = ' '
let $field22e           = ' '
let $field22f           = ' '
let $field22g           = ' '
let $field22h           = ' '
let $field22x           = ' '
let $field23            = ' '
let $field24            = ' '
let $field26            = ' '
let $field27            = ' '
let $field27a           = ' '
let $field28            = ' '
let $field28a           = ' '
let $field29            = ' '
let $field30            = ' '
let $field30a           = ' '
let $field31            = ''
let $field32            = ' '
let $field32a           = ' '
let #field33            = 0
let $field34            = ' '
let $field35            = ' '
let $field36            = ' '
let $field37            = ' '
let $field38            = ' '
let $field39a           = ' '
let $field39b           = ' '
let $field39c           = ' '
let $field39d           = ' '
let $field45            = ' '
let $field46            = ' '
let $field47            = ' '
let $field48            = ' '
let $field49            = ' '
let $sf50_field46a      = ' '
let $sf50_field46b      = ' '
let $sf50_field47a      = ' '
let $sf50_field47b      = ' '
let $sf50_field48       = ' '
let $sf50_field49       = ''
let $sf50_field50a      = ' '
let $sf50_field50b      = ' '
let $field50            = ' '
let $field50a           = ' '
let $field51            = ' '
let $field51a           = ' '
let $part_d_action_reason    = ' '
let $part_d_comments         = ' '
let $part_e_action_reason    = ' '
let $part_e_comments         = ' '
let $part_e_effdt            = ''
let $part_e_name             = ' '
let $part_e_date_sign        = ''
let $part_e_address1         = ' '
let $part_e_address2         = ' '
let $part_e_address3         = ' '
let $part_e_address4         = ' '
let $part_e_city             = ' '
let $part_e_city             = ' '
let $part_e_state            = ' '
let $part_e_zip              = ' '
let $gvt_appr_name           = ' '
let $gvt_appr_deptid         = ' '
let $gvt_appr_dept_descr     = ' '
let $gvt_appr_title          = ' '
let $gvt_appr_date           = ''
let $gvt_sign_name           = ' '
let $gvt_sign_title          = ' '
let $gvt_sign_date           = ''
let $var47A                  = ''
let $var47B                  = ''


End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Determine-Side-of-Report                              *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Determine-Side-of-Report

If  $gvt_par_type  = 'P'
    let $acct_cd             =  &e.acct_cd
    let $gvt_noa_code        =  &e.gvt_noa_code
    let $action              =  &e.action
    let $gvt_effdt_proposed  =  &e.gvt_effdt_proposed
    let $ref_data_tbl_effdt  =  &e.effdt
    let #ref_data_tbl_effseq =  &e.effseq
    let $ref_data_gvt_effdt  =  &e.gvt_effdt

end-if


!****** If first position of NOA Code is 1 or 2, then the right side is
!****** printed only.  If NOA Code has 3 or 4 as first character, then
!****** the left side of the report is printed only.  The remaining
!****** characters (5,7,8) print on both sides except for the awards
!****** and bonuses.

if  rtrim ($gvt_noa_code, ' ')  <>  ''
    let  $first_noac = substr ($gvt_noa_code, 1, 1)
else
    do  Process-Action
end-if

evaluate $first_noac
     when = '1'
     when = '2'
          let $side_flag = 'R'
     when = '3'
     when = '4'
         do Get-Retirement-Termination
         let $side_flag = 'L'
     when-other
         let $side_flag = 'B'
end-evaluate

evaluate $gvt_noa_code
     when = '805'
     when = '806'
     when = '815'
     when = '816'
     when = '872'
     when = '873'
     when = '874'
     when = '875'
     when = '876'
     when = '877'
     when = '878'
     when = '879'
     when = '885'

          let $side_flag = 'R'

end-evaluate

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Process-Action                                        *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Process-Action

Begin-Select    loops=1

NOA.GVT_NOA_CODE

    let  $first_noac = substr (&noa.gvt_noa_code, 1, 1)

from  PS_GVT_NOAC_TBL    NOA

where  NOA.ACTION  =  $action

End-Select

End-Procedure

!***********************************************************************
!                                                                      *
!  Function:     Select-Job-Data                                       *
!                                                                      *
!  Description:  This procedure selects job data using various 'where' *
!                clauses for the different types of PARs.              *
!                                                                      *
!***********************************************************************
Begin-Procedure Select-Job-Data

Begin-Select

E.EMPLID
E.EMPL_RCD
E.EFFDT
E.EFFSEQ
E.POSITION_NBR
E.ACTION
E.GVT_NOA_CODE
E.GVT_LEG_AUTH_1
E.GVT_PAR_AUTH_D1
E.GVT_PAR_AUTH_D1_2
E.GVT_LEG_AUTH_2
E.GVT_PAR_AUTH_D2
E.GVT_PAR_AUTH_D2_2
E.GVT_EFFDT_PROPOSED
E.GVT_CONT_EMPLID
E.ACTION_REASON
E.LOCATION
E.GVT_WORK_SCHED
E.GVT_POI
E.FLSA_STATUS
E.COMPANY
E.GVT_SUB_AGENCY
E.STD_HOURS
E.GVT_PAY_RATE_DETER
E.GVT_PAY_PLAN
E.GRADE
E.GVT_STEP
E.ACCT_CD
E.JOBCODE
E.GVT_PAY_BASIS
E.GVT_POSN_OCCUPIED
E.COMPRATE
E.GVT_COMPRATE
E.GVT_LOCALITY_ADJ
E.GVT_RETIRE_PLAN
NN.GVT_VET_PREF_APPT
NN.GVT_VET_PREF_RIF
E.GVT_ANN_IND
E.GVT_FEGLI
LL.GVT_TENURE
E.PAYGROUP
E.GVT_PAR_NTE_DATE
E.GVT_RTND_PAY_PLAN
E.GVT_RTND_GRADE
E.GVT_RTND_STEP
E.GVT_XFER_FROM_AGCY
E.GVT_XFER_TO_AGCY
E.DEPTID
E.GVT_SF52_NBR
E.GVT_STATUS_TYPE
E.GVT_DETL_POSN_NBR
E.GVT_BW_RT_NO_LOC
E.GVT_ANNL_RT_NO_LOC
E.GVT_HRLY_RT_NO_LOC
E.GVT_MNLY_RT_NO_LOC
E.GVT_EFFDT
H.GVT_FUNC_CLASS
H.GVT_OFFICIAL_DESCR
E.BARG_UNIT
LL.SERVICE_DT
LL.GVT_DETL_BARG_UNIT
NN.NAME
NN.BIRTHDATE
NID.NATIONAL_ID
!NN.CITIZENSHIP_STATUS
ZZ.CITIZENSHIP_STATUS
NN.MILITARY_STATUS
NN.ADDRESS1
NN.ADDRESS2
NN.ADDRESS3
NN.ADDRESS4
NN.CITY
NN.STATE
NN.POSTAL
OO.DESCR
NN.GVT_MIL_GRADE
NN.GVT_MIL_SEP_RET
NN.GVT_CRED_MIL_SVCE
NN.DISABLED_VET
NN.GVT_MIL_SVCE_END
NN.GVT_MIL_SVCE_START
NN.GVT_MIL_RESRVE_CAT
LOC.GVT_GEOLOC_CD
FROM  PS_GVT_JOB          E,
      PS_JOBCODE_TBL      H,
      PS_GVT_PERS_DATA    NN,
      PS_GVT_EMPLOYMENT   LL,
      PS_ACTN_REASON_TBL  OO,
      PS_GVT_PERS_NID     NID,
      PS_LOCATION_TBL     LOC,
      PS_CITIZENSHIP      ZZ


WHERE E.EMPLID             = $EMPLID
and   E.EMPL_RCD           = #EMPL_RCD
and   E.EFFDT              = $EFFDT
and   E.EFFSEQ             = #EFFSEQ
and   E.EMPLID             = NN.EMPLID
and   E.EMPL_RCD           = NN.EMPL_RCD
and   E.EFFDT              = NN.EFFDT
and   E.EFFSEQ             = NN.EFFSEQ
and   E.EMPLID             = LL.EMPLID
and   E.EMPL_RCD           = LL.EMPL_RCD
and   E.EFFDT              = LL.EFFDT
and   E.EFFSEQ             = LL.EFFSEQ
and   E.EMPLID             = NID.EMPLID
and   E.EMPL_RCD           = NID.EMPL_RCD
and   E.EFFDT              = NID.EFFDT
and   E.EFFSEQ             = NID.EFFSEQ
and   E.EMPLID             = ZZ.EMPLID
and   NID.COUNTRY          = 'USA'
and   NID.COUNTRY          = ZZ.COUNTRY
and   NID.NATIONAL_ID_TYPE = 'PR'
and   H.JOBCODE            = E.JOBCODE
and   H.EFFDT              = (SELECT MAX(H1.EFFDT)
                            FROM  PS_JOBCODE_TBL H1
                            WHERE H1.JOBCODE =  H.JOBCODE
                            AND   H1.EFFDT   <= E.EFFDT)
and   OO.ACTION            = E.ACTION
and   OO.ACTION_REASON     = E.ACTION_REASON
and   OO.EFFDT             = (SELECT MAX(OO1.EFFDT)
                              FROM   PS_ACTN_REASON_TBL  OO1
                              WHERE  OO1.ACTION        =  OO.ACTION
                              AND    OO1.ACTION_REASON =  OO.ACTION_REASON
                              AND    OO1.EFFDT         <= E.EFFDT)

and   LOC.LOCATION         = E.LOCATION
and   LOC.EFFDT            = (SELECT MAX(LOC1.EFFDT)
                           FROM PS_LOCATION_TBL LOC1
                           WHERE LOC1.LOCATION       =  E.LOCATION
                           AND   LOC1.EFFDT          <=  E.EFFDT)
End-Select


Begin-Select

G.LOCATION
G.GVT_OCC_SERIES
G.MANAGER_LEVEL

FROM  PS_POSITION_DATA G
WHERE G.POSITION_NBR = &E.POSITION_NBR
AND   G.EFFDT        = (SELECT MAX(G1.EFFDT)
                        FROM   PS_POSITION_DATA G1
                        WHERE  G1.POSITION_NBR =  G.POSITION_NBR
                        AND    G1.EFFDT        <= &E.EFFDT)

End-Select

if not isnull(&E.GVT_DETL_POSN_NBR)

  let $detl_posn_nbr   = &E.GVT_DETL_POSN_NBR
  let $detl_posn_effdt = &E.EFFDT
  do Retrieve-Detail-Position-Info

end-if

Begin-Select

BON.GOAL_AMT
BON.OTH_HRS

FROM  PS_GVT_AWD_DATA BON
WHERE BON.EMPLID    = $EMPLID
AND   BON.EMPL_RCD  = #EMPL_RCD
AND   BON.EFFDT     = $EFFDT
AND   BON.EFFSEQ    = #EFFSEQ

end-select

Let #bonus_amt = 0
Move &BON.GOAL_AMT to #bonus_amt
Move &BON.OTH_HRS  to #bonus_hrs

Begin-Select

Y.NAME

    let $prevname = &Y.NAME           ! DJ32H:  Added this line

from   PS_GVT_PERS_DATA Y,
       PS_GVT_JOB Z
where  Y.EMPLID     = $emplid
and    Y.EMPL_RCD   = #empl_rcd
and    Y.EMPLID     = Z.EMPLID
and    Y.EMPL_RCD   = Z.EMPL_RCD
and    Y.EFFDT      = Z.EFFDT
and    Y.EFFSEQ     = Z.EFFSEQ
and    Y.EFFDT      =
       (SELECT MAX(Y1.EFFDT)
       from  PS_GVT_PERS_DATA Y1
       where Y1.EMPLID     =  Y.EMPLID
       and   Y1.EMPL_RCD   =  Y.EMPL_RCD
       and   Y1.EFFDT      <  $EFFDT
       and   Y1.EFFSEQ     =
             (SELECT MAX(Y2.EFFSEQ)
             from   PS_GVT_PERS_DATA Y2
             where  Y2.EMPLID    = Y.EMPLID
             and    Y2.EMPL_RCD  = Y.EMPL_RCD
             and    Y2.EFFDT     = Y.EFFDT))
and    Y.EFFSEQ     =
       (SELECT MAX(Y3.EFFSEQ)
       from   PS_GVT_PERS_DATA Y3
       where  Y3.EMPLID    = Y.EMPLID
       and    Y3.EMPL_RCD  = Y.EMPL_RCD
       and    Y3.EFFDT     = Y.EFFDT)
       and    Z.EFFDT =
              (SELECT MAX(Z1.EFFDT)
              from   PS_GVT_JOB Z1
              where    Z1.EFFDT   <= Y.EFFDT)

end-select

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Retrieve Detail Position Information                  *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Retrieve-Detail-Position-Info

Begin-Select

G2.DESCR
G2.POSITION_NBR
G2.JOBCODE

FROM   PS_POSITION_DATA G2
WHERE  G2.POSITION_NBR = $detl_posn_nbr
AND    G2.EFFDT       <= (SELECT MAX(G3.EFFDT)
                         FROM  PS_POSITION_DATA G3
                         WHERE G3.POSITION_NBR  = G2.POSITION_NBR
                         AND   G3.EFFDT        <= $detl_posn_effdt)
End-Select



end-procedure


!***********************************************************************
!                                                                      *
!  Function:     Retrieve Highest Education Level Information          *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************

! R--I24G1
Begin-Procedure Retrieve-Highest-Educ-Info

do Convert-To-DTU-Date(&e.effdt,$dtu_effdt)
let #effdt_yr = to_number(substr($dtu_effdt,1,4))


begin-select
AC.EMPLID,
AC.YR_ACQUIRED
AC.MAJOR
DG.EDUCATION_LVL

   let $field45 = &DG.EDUCATION_LVL
   let $field46 = to_char(&AC.YR_ACQUIRED)
   let $field47 = &AC.MAJOR

FROM PS_DEGREE_VW DG, PS_ACCOMPLISHMENTS AC
WHERE AC.EMPLID = &E.EMPLID
AND   AC.ACCOMPLISHMENT = DG.ACCOMPLISHMENT
AND   DG.EDUCATION_LVL = (SELECT MAX(DG1.EDUCATION_LVL) FROM PS_DEGREE_VW DG1, PS_ACCOMPLISHMENTS AC1
                         WHERE   AC1.EMPLID = AC.EMPLID
                         AND     AC1.ACCOMPLISHMENT = DG1.ACCOMPLISHMENT
                         AND     AC1.GRADUATE_INDICATOR = 'Y')
AND   YR_ACQUIRED     = (SELECT MAX(AC1.YR_ACQUIRED) FROM PS_DEGREE_VW DG1, PS_ACCOMPLISHMENTS AC1
                         WHERE AC1.EMPLID = AC.EMPLID
                         AND   AC1.ACCOMPLISHMENT = DG1.ACCOMPLISHMENT
                         AND   AC1.YR_ACQUIRED <= #effdt_yr
                         AND   AC1.GRADUATE_INDICATOR = 'Y')
end-select



end-procedure



!***********************************************************************
!                                                                      *
!  Function:     Process-Job-Data                                      *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Process-Job-Data

move &e.emplid              to $emplid
move &e.empl_rcd            to #empl_rcd
move &e.gvt_par_nte_date    to $gvt_par_nte_date
move #bonus_amt             to #comprate

move &e.gvt_pay_basis       to $field21
move &e.gvt_comprate        to #field20a
move &e.gvt_locality_adj    to #field20b
move &e.paygroup            to $paygroup
move &e.gvt_pay_plan        to $gvt_pay_plan
move &e.grade               to $grade
move &e.gvt_rtnd_pay_plan   to $gvt_rtnd_pay_plan
move &e.gvt_rtnd_grade      to $gvt_rtnd_grade
move &e.gvt_rtnd_step       to $gvt_rtnd_step
move &e.gvt_step            to $gvt_step
move &e.position_nbr        to $position_nbr
move &e.gvt_sf52_nbr        to $gvt_par_nbr
move &e.action_reason       to $action_reason
move &e.gvt_work_sched      to $field32
move &e.gvt_poi             to $gvt_poi

if  $field32  <>  'F'
and $field32  <>  'G'
and $field32  <>  'I'
    let  $std_hours         =  &e.std_hours
    let  #field33           =  &e.std_hours * 2
else
    let  $field33           =  ' '
end-if

move &e.flsa_status         to $field35
move &e.jobcode             to $jobcode
move &e.company             to $company
move &e.gvt_poi             to $sf50_field48
move &e.gvt_pay_rate_deter  to $field29
move $acct_cd               to $field36
move &e.gvt_posn_occupied   to $field34
move &e.gvt_retire_plan     to $field30
move &nn.gvt_vet_pref_appt  to $field23


move &nn.gvt_mil_grade      to $milgrade
move &nn.gvt_mil_sep_ret    to $milsep
move &nn.gvt_cred_mil_svce  to $credmil
move &nn.disabled_vet       to $disvet
move &nn.military_status    to $milstatus
move &nn.birthdate          to $birthdate
move &nn.gvt_mil_svce_end   to $milend
move &nn.gvt_mil_svce_start to $milstart
move &nn.gvt_mil_resrve_cat to $milrsrvcat


   if &nn.gvt_vet_pref_rif   =  'Y'
      let $field26           =  'Y'
   else
      let $field26           =  'N'
   end-if

move &e.gvt_ann_ind         to $field28
move &e.gvt_fegli           to $field27
move &e.gvt_fegli           to $gvt_fegli

do Get-Fegli-Descr

move &fgl.descr50           to $field27a
move &ll.gvt_tenure         to $field24

move &nn.name               to $name
     let  $ssn              = edit(rtrim(&nid.national_id, ' '), 'xxx-xx-xxxx')
move &ll.service_dt         to $field31


   if &e.action = 'DET'
      move &ll.gvt_detl_barg_unit to $field37
   else
      move &e.barg_unit          to $field37
   end-if

move &loc.gvt_geoloc_cd     to $field38
move &nn.birthdate          to $birthdate
move &zz.citizenship_status to $field49
move &nn.military_status    to $field50
move &h.gvt_func_class      to $field48
move &f.descr25             to $gvt_noa_descr
move &f.descr25_2           to $gvt_noa_descr2
move &g.gvt_occ_series      to $gvt_occ_series
move &g.manager_level       to $field51

move &e.gvt_cont_emplid     to $gvt_cont_emplid

do Get-Contact-Info
do Get-PAR-Job-Location-Data

move &e.company             to $company
move &e.company             to $sf50_field47a

do Get-Agency-Descr

move &x.descr               to $sf50_field46a

move &e.gvt_sub_agency      to $gvt_Sub_Agency
move &e.gvt_sub_agency      to $sf50_field47b
do Get-SubAgency-Descr
move &dd.gvt_descr70        to $sf50_field46b

move &e.deptid              to $Deptid

do Get-Department-Data

move &g.location            to $Position_Location

do Get-Position-Location-Data


evaluate $first_noac
     when = '3'
     when = '4'
        let $field21 = ' '
end-evaluate

End-Procedure



!***********************************************************************
!                                                                      *
!  Function:     Process-Translate-Values                              *
!                                                                      *
!  Description:  Retrieve translate values from the XLAT table.        *
!                                                                      *
!***********************************************************************
Begin-Procedure Process-Translate-Values

move  ' '  to  $xlatlongname
if rtrim($action, ' ') <> ''
    let $fieldname     = 'ACTION'
    let $fieldvalue    = $action
    do Read-Translate-Table
    let $action_xlat   = $xlatlongname
end-if

move  ' '  to  $xlatlongname
if rtrim($field28, ' ') <> ''
    let $fieldname      = 'GVT_ANN_IND'
    let $fieldvalue     = $field28
    do Read-Translate-Table
    let $field28a       = $xlatlongname
end-if

move  ' '  to  $xlatlongname


if rtrim($field29, ' ') <> ''
    let $fieldname      = 'GVT_PAY_RATE_DETER'
    let $fieldvalue     = $field29
    do Read-Translate-Table
    let $field29a       = $xlatlongname
end-if


move  ' '  to  $xlatlongname
if rtrim($field30, ' ') <> ''
    let $fieldname      = 'GVT_RETIRE_PLAN'
    let $fieldvalue     = $field30
    do Read-Translate-Table
    let $field30a       = $xlatlongname
end-if

move  ' '  to  $xlatlongname
if rtrim($field32, ' ') <> ''
    let $fieldname      = 'GVT_WORK_SCHED'
    let $fieldvalue     = $field32
    do Read-Translate-Table
    let $field32a       = $xlatlongname
end-if

move  ' '  to  $xlatshortname
if rtrim($field50, ' ') <> ''
    let $fieldname      = 'MILITARY_STATUS'
    let $fieldvalue     = $field50
    do Read-Translate-Table
    let $field50a       = $xlatshortname
end-if

move  ' '  to  $xlatshortname
if rtrim($field51, ' ') <> ''
    let $fieldname      = 'MANAGER_LEVEL'
    let $fieldvalue     = $field51
    do Read-Translate-Table
    let $field51a       = $xlatshortname
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Process-NOA-Code                                      *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************

Begin-Procedure Process-NOA-Code

!**** The first 'if statement' is to determine where the current PAR_JOB
!**** data will print on the SF52.. the Second 'if statement' determines
!**** if a previous occurrence of the PAR_JOB is needed to print on the
!**** on the left side of the SF52 for SF52's that have both sides printed


if  $gvt_par_type = 'P'
    if rtrim (&e.gvt_xfer_from_agcy, ' ') <> '' and
       ($gvt_noa_code = '130' or
        $gvt_noa_code = '132' or
        $gvt_noa_code = '145' or
        $gvt_noa_code = '147')

          let $field14x =  'Transfer from: ' || &e.gvt_xfer_from_agcy

    end-if

    if  rtrim (&e.gvt_xfer_to_agcy, ' ')   <> '' and
        ($gvt_noa_code = '352' or
         $gvt_noa_code = '390')

           let $field22x = 'Transfer to: ' || &e.gvt_xfer_to_agcy

    end-if
end-if

if  $side_flag = 'L'

! print left side of form for current GVT_JOB record

    move $gvt_pay_plan         to $field8
    move $gvt_occ_series       to $field9
    move $grade                to $field10


! if pay rate determinant = 'S' then step equal to retained step otherwise
! equal to government step

    if $field29 = 'S'
        let $field8  = $gvt_rtnd_pay_plan
        let $field10 = $gvt_rtnd_grade
        let $field11 = $gvt_rtnd_step
    else
        let $field11 = $gvt_step
    end-if

    do Process-Other-Pay

    do Process-Left-Fields

else

! print right side of form for current PAR_JOB record

    if $gvt_noa_code = '931' or $gvt_noa_code = '930' or $action = 'DET'
          move &G2.descr             to $field15a
          move &G2.jobcode           to $field15b
          move $detl_posn_nbr        to $field15c
    else
          move &h.gvt_official_descr to $field15a
          move $jobcode              to $field15b
          move $position_nbr         to $field15c
    end-if


    move $gvt_pay_plan               to $field16
    move $gvt_occ_series             to $field17
    move $grade                      to $field18

! if pay rate determinant = 'S' then step equal to retained step otherwise
! equal to government step

    if $field29 = 'S'
        let $field16 = $gvt_rtnd_pay_plan
        let $field18 = $gvt_rtnd_grade
        let $field19 = $gvt_rtnd_step
    else
        let $field19 = $gvt_step
    end-if

    do Process-Other-Pay
    do Process-Right-Fields

    do bonus-data


end-if


!*** if SF52 printed on both sides and not an award or bonus type, get the
!*** previous record from the PAR_JOB record
!*** otherwise, use data from the PAR_AWARD or PAR_BONUS table instead of
!*** the PAR_JOB for awards and bonuses


if  $side_flag    =  'B'
    !  MS7U5:
    let $recurse-effdt = $effdt
    let #recurse-effseq = #effseq
    do Get-Previous-Occurrence
end-if

evaluate &e.gvt_noa_code               ! will replace noa_descr2 line on sf50/52 print

   when = '780'
      move $prevname to $field5b1     ! DJ32H:  Show previous name on Name Change action
      break

   when = '815'
   when = '816'
   when = '825'
   when = '872'
   when = '873'
   when = '874'
   when = '875'
   when = '876'
   when = '877'
   when = '878'
   when = '879'
   when = '885'
      do Blank-Blocks-7-14
      do Blank-Blocks-16-19
      do Blank-Block-20
      do Blank-Blocks-21-And-29
     break

end-evaluate

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Process-AUO                                           *
!                                                                      *
!  Description:  Determines if AUO was Granted, Changed, or Terminated *
!                and the percentage of base and total dollar amount    *
!***********************************************************************

begin-procedure Process-AUO

! :  R-AXC-5W4QO/R-ACOX-FN8J6: Added procedure to properly retrieve and format AUO SF50/52

! Look up AUO from current action for comparison to previous AUO

let $auo_found = 'N'

Begin-Select

AC.ERNCD
AC.AMOUNT

    if substr(&AC.erncd,1,1) = 'A' and
      (substr(&AC.erncd,2,2) = '05' or substr(&AC.erncd,2,2) = '10' or substr(&AC.erncd,2,2) = '15'
        or substr(&AC.erncd,2,2) = '20' or substr(&AC.erncd,2,2) = '25')

      let $auo_cd = &ac.erncd
      let $auo_found = 'Y'
      let $auo_percentage = substr(&AC.erncd,2,2) || '%'
      let #auo_amount = (#op-calc-comprate + #op-calc-locality) * to_number($auo_percentage) / 100
    end-if

from  PS_GVT_JOBERNS AC

where AC.EMPLID    = $emplid
and   AC.EMPL_RCD  = #empl_rcd
and   AC.EFFDT     = $erncd_effdt
and   AC.EFFSEQ    = #erncd_effseq

end-select

if $auo_found = 'N'
!Show 'AUO TERMINATED [' $erncd_effdt '/' #erncd_effseq ']'

   move '00%'   to      $field-12-20
   move 0       to      #field-12D-20D

else
!Show 'AUO GRANTED/CHANGED [' $erncd_effdt '/' #erncd_effseq ']'

   move $auo_percentage to      $field-12-20
   move #auo_amount     to      #total_other_pay

end-if

! These fields are always blank for AUO actions
   move 0      to      #field-12A-20A
   move 0      to      #field-12B-20B
   move 0      to      #field-12C-20C
   move ''     to      $field-13-21

! Place values on appropriate side of form
if $found_previous_occurrence = 'Y'
! Place values on left side of form

   move $field-12-20            to $field12
   move #field-12A-20A          to #field12a
   move #field-12B-20B          to #field12b
   move #field-12C-20C          to #field12c
   move $field-13-21            to $field13

else
!Place values on right side of form

   move $field-12-20            to $field20
   move #field-12A-20A          to #field20a
   move #field-12B-20B          to #field20b
   move #field-12C-20C          to #field20c
   move $field-13-21            to $field21

end-if

end-procedure


!***********************************************************************
!                                                                      *
!  Function:     Get-Par-Tracking                                      *
!                                                                      *
!  Description:  Retrieves the status of the GVT_PAR_NBR and the       *
!                requestor and authorizor empl id, if available.       *
!                period per year.                                      *
!                                                                      *
!***********************************************************************
Begin-Procedure Get-Par-Tracking


let $found_tracking_flag = 'N'
let $part_d_processed    = 'N'
let $wip_record = 'USFED'
let $EFFDT = &E.EFFDT
let #effseq = &e.effseq

!DISPLAY $WIP_RECORD

!DISPLAY $EMPLID
!DISPLAY #EMPL_RCD
!DISPLAY $EFFDT
!DISPLAY #EFFSEQ


Begin-Select

J.EMPLID
J.EMPL_RCD
J.GVT_TRK_SEQUENCE
J.GVT_DATE_WRK
J.GVT_WIP_STATUS
J.OPRID
J.COMMENTS
J.GVT_TRK_EMPLID
J.GVT_TRK_EMPL_RCD
Y.GVT_SF52_AREA

    Move &y.gvt_sf52_area to $gvt_sf52_area
    Move &J.GVT_TRK_EMPLID TO $TRK_EMPLID
    Move &J.GVT_TRK_EMPL_RCD  TO $TRK_EMPL_RCD
    Move &J.COMMENTS TO $TRK_COMMENTS
    Move &J.GVT_DATE_WRK TO $TRK_DATE_WRK

    Do Process-WIP-Info

FROM  PS_GVT_EE_DATA_TRK J,
      PS_GVT_WIP_STATUS Y

WHERE J.EMPLID         = $EMPLID
AND   J.EMPL_RCD       = #EMPL_RCD
AND   J.EFFDT          = $EFFDT
AND   J.EFFSEQ         = #EFFSEQ
AND   Y.GVT_WIP_RECORD = $WIP_RECORD
AND   Y.GVT_WIP_STATUS = J.GVT_WIP_STATUS

order by 2

End-Select

if $gvt_par_type  =  'P'
    if $first_noac <> '3'
        let $part_d_action_reason = &oo.descr
    else
        let $part_e_action_reason = &oo.descr
        let $part_e_effdt         = $gvt_effdt_proposed
        let $part_e_name          = $name
        let $part_e_address1      = &nn.address1
        let $part_e_address2      = &nn.address2
        let $part_e_address3      = &nn.address3
        let $part_e_address4      = &nn.address4
        let $part_e_city          = &nn.city
        let $part_e_state         = &nn.state
        let $part_e_zip           = &nn.postal
    end-if
end-if

End-Procedure





!***********************************************************************
!                                                                      *
!  Function:     Process-WIP-Info                                      *
!                                                                      *
!  Description:  Placeshorizer, Approver etc info in appropriate   *
!                fields based on value in GVT_WIP_STATUS.GVT_SF52_AREA *
!                                                                      *
!***********************************************************************

Begin-Procedure Process-WIP-Info

evaluate  $GVT_SF52_AREA
     WHEN = 'A-5'

            let $gvt_req_emplid       = $trk_emplid
            let #gvt_req_empl_rcd     = $TRK_EMPL_RCD

            do Get-Requestor-Info

            let $gvt_req_date         = $TRK_DATE_WRK

             if $first_noac <> '3'
                let $part_d_processed = 'Y'
                let $part_d_comments  = $TRK_COMMENTS
            else
                let $part_e_comments  = $TRK_COMMENTS
                let $part_e_date_sign = $TRK_DATE_WRK
            end-if

         when = 'A-6'

            let $gvt_auth_emplid      = $trk_emplid
            let #gvt_auth_empl_rcd    = $TRK_EMPL_RCD

            do Get-Authorizor-Info

            let $gvt_auth_date        = $TRK_DATE_WRK

         when = 'C-A'

            let $gvt_appr_emplid      = $trk_emplid
            let #gvt_appr_empl_rcd    = $TRK_EMPL_RCD
           do Get-Approver-Info

           let $gvt_appr_date        = $TRK_DATE_WRK
           if  $first_noac       <> '3'
           and $part_d_processed =  'N'
               let $part_d_comments  = $TRK_COMMENTS
            end-if

           if  $first_noac       <> '3'
           and $part_d_processed =  'N'
                let $part_d_comments  = $TRK_COMMENTS
           end-if

!*****************************************************************************
!  Process the data based on poi processor signature table                   *
!*****************************************************************************
        when = 'C-S'

            let $gvt_sign_emplid      = $trk_emplid
            let #gvt_sign_empl_rcd    = $TRK_EMPL_RCD

            DO  Get_POI_Signature_Info  ! 04.21.99 - We want the signature authority to be the POI Designated Signature

            let $gvt_sign_date        = $TRK_DATE_WRK
            let $sf50_field49         = $TRK_DATE_WRK

            if  $first_noac       <> '3'
            and $part_d_processed =  'N'
                let $part_d_comments  = $TRK_COMMENTS
            end-if

    end-evaluate

    move 'Y' to $found_tracking_flag


End-Procedure


!**************************************************************************
!                                                                         *
!  Function:     Get_POI_Signature_Info                                       *
!                                                                         *
!  Description:  Retrieves the name and business title of the             *
!                primary approver for the POI.                            *
!                                                                         *
!**************************************************************************
Begin-procedure Get_POI_Signature_Info
   ! IF  ( $gvt_form_type  =  'SF50' )    ! Pete Marcotty (PeopleSoft) 01.06.99 - Print Appr official for SF50 only

        DO Select_POI_Signature_Auth( &E.GVT_POI, $lv_sig_auth_name, $lv_sig_auth_title )

        !******************************************************************
        ! If there is no signature authority defined for the employee's POI, then leave the
        ! signature on the sf50 as the employee who entered the PAR
        !******************************************************************
        IF ( ISNULL(RTRIM($lv_sig_auth_name, ' ')))
            LET $gvt_sign_name  = ' '
            LET $sf50_field50a  = ' '
            LET $gvt_sign_title = ' '
            LET $sf50_field50b  = ' '
        ELSE
            LET $gvt_sign_name  = $lv_sig_auth_name
            LET $sf50_field50a  = $lv_sig_auth_name
            LET $gvt_sign_title = $lv_sig_auth_title
            LET $sf50_field50b  = $lv_sig_auth_title
        END-IF
    ! END-IF

End-Procedure   Get_POI_Signature_Info

!**************************************************************************
!                                                                         *
!  Function:    Select_POI_Signature_Auth                                 *
!                                                                         *
!  Description: Retrieves the name and title of the employee who has      *
!               signing authority for current employee's sf50 being       *
!               printed                                                   *
!**************************************************************************

BEGIN-PROCEDURE Select_POI_Signature_Auth( $pvi_gvt_poi, :$pvo_sig_auth_name, :$pvo_sig_auth_title )


    LET $pvo_sig_auth_name =''
    LET $pvo_sig_auth_title=''


BEGIN-SELECT
PM.GVT_PO_NAME          &PM.GVT_PO_NAME
PM.GVT_ORG_TTL_DESCR    &PM.GVT_ORG_TTL_DESCR
PM.GVT_PRIM_APPROVER

    LET $pvo_sig_auth_name =&PM.GVT_PO_NAME
    LET $pvo_sig_auth_title=&PM.GVT_ORG_TTL_DESCR

    FROM  PS_GVT_POI_SIG_TBL PM,
          PS_GVT_POI_TBL P
    WHERE P.GVT_POI=$pvi_gvt_poi
      AND PM.GVT_POI           = $pvi_gvt_poi
      AND P.EFFDT              = PM.EFFDT

      AND P.EFFDT=
            (SELECT MAX(EFFDT)
             FROM   PS_GVT_POI_TBL P2
             WHERE  P.GVT_POI=P2.GVT_POI
             AND    EFFDT   <= P2.EFFDT )

 ORDER BY PM.GVT_PRIM_APPROVER,
          PM.GVT_PO_NAME DESC

END-SELECT


END-PROCEDURE   Select_POI_Signature_Auth




!***********************************************************************
!                                                                      *
!  Function:     Get-Remarks                                           *
!                                                                      *
!  Description:  Retrieves the remarks for the secord page of form.    *
!                                                                      *
!***********************************************************************
Begin-Procedure Get-Remarks

let #remarks_array_counter  =  -1

clear-array  name=remarks

move  'N'           to  $remarks_previously_processed
move  'NEW REMARK'  to  $new_remark_marker

do Format-DateTime($AsOfToday, $current-date, {DEFCMP},'','')

Begin-Select

K.GVT_SF50_REMARK
K.GVT_REMARK_LINE1
K.GVT_REMARK_LINE2
K.GVT_REMARK_LINE3
K.GVT_REMARK_LINE4
K.GVT_REMARK_LINE5
K.GVT_REMARK_LINE6
K.GVT_REMARK_LINE7
K.GVT_REMARK_LINE8
K.GVT_REMARK_LINE9
K.GVT_INSERT_REQD
K1.PRINT_PRIORITY

    if  $remarks_previously_processed  =  'Y'
        let #remarks_array_counter  =  #remarks_array_counter  +  1
        PUT $new_remark_marker  INTO REMARKS (#remarks_array_counter) REMARKS_LINE
    end-if

    if  rtrim (&k.gvt_remark_line1, ' ')  <>  ''
        let #remarks_array_counter  =  #remarks_array_counter  +  1
        PUT &k.gvt_remark_line1 INTO REMARKS (#remarks_array_counter) REMARKS_LINE
    end-if

    if  rtrim (&k.gvt_remark_line2, ' ')  <>  ''
        let #remarks_array_counter  =  #remarks_array_counter  +  1
        PUT &k.gvt_remark_line2 INTO REMARKS (#remarks_array_counter) REMARKS_LINE
    end-if

    if  rtrim (&k.gvt_remark_line3, ' ')  <>  ''
        let #remarks_array_counter  =  #remarks_array_counter  +  1
        PUT &k.gvt_remark_line3 INTO REMARKS (#remarks_array_counter) REMARKS_LINE
    end-if

    if  rtrim (&k.gvt_remark_line4, ' ')  <>  ''
        let #remarks_array_counter  =  #remarks_array_counter  +  1
        PUT &k.gvt_remark_line4 INTO REMARKS (#remarks_array_counter) REMARKS_LINE
    end-if

    if  rtrim (&k.gvt_remark_line5  ' ')  <>  ''
        let #remarks_array_counter  =  #remarks_array_counter  +  1
        PUT &k.gvt_remark_line5 INTO REMARKS (#remarks_array_counter) REMARKS_LINE
    end-if

    if  rtrim (&k.gvt_remark_line6, ' ')  <>  ''
        let #remarks_array_counter  =  #remarks_array_counter  +  1
        PUT &k.gvt_remark_line6 INTO REMARKS (#remarks_array_counter) REMARKS_LINE
    end-if

    if  rtrim (&k.gvt_remark_line7, ' ')  <>  ''
        let #remarks_array_counter  =  #remarks_array_counter  +  1
        PUT &k.gvt_remark_line7 INTO REMARKS (#remarks_array_counter) REMARKS_LINE
    end-if

    if  rtrim (&k.gvt_remark_line8, ' ')  <>  ''
        let #remarks_array_counter  =  #remarks_array_counter  +  1
        PUT &k.gvt_remark_line8 INTO REMARKS (#remarks_array_counter) REMARKS_LINE
    end-if

    if  rtrim (&k.gvt_remark_line9, ' ')  <>  ''
        let #remarks_array_counter  =  #remarks_array_counter  +  1
        PUT &k.gvt_remark_line9 INTO REMARKS (#remarks_array_counter) REMARKS_LINE
    end-if

    move  'Y'  to  $remarks_previously_processed

from  PS_GVT_PAR_REMARKS K, PS_GVT_SF50_RK_TBL K1

WHERE K.EMPLID    = $emplid
AND   K.EMPL_RCD  = #empl_rcd
AND   K.EFFDT     = $ref_data_tbl_effdt
AND   K.EFFSEQ    = #ref_data_tbl_effseq
AND   K.GVT_SF50_REMARK = K1.GVT_SF50_REMARK
AND   K1.EFFDT =(SELECT MAX(K2.EFFDT) FROM PS_GVT_SF50_RK_TBL K2 
                            WHERE K2.EFFDT <=  $AsOfToday
                                  AND K2.GVT_SF50_REMARK = K1.GVT_SF50_REMARK)

order  by  K1.PRINT_PRIORITY, K.GVT_SF50_REMARK 

End-Select

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Get-Contact-Info                                      *
!                                                                      *
!  Description:  Retrieves the name and phone number of the contact    *
!                person.                                               *
!                                                                      *
!***********************************************************************
Begin-Procedure Get-Contact-Info

let $found_contact_flag = 'N'

Begin-Select

L.NAME
   do Get-Phone-Data


   move 'Y' to $found_contact_flag

FROM   PS_PERSONAL_DATA L
WHERE  L.EMPLID = $gvt_cont_emplid

End-Select

move &l.name  to $gvt_cont_name
move $Phone   to $gvt_cont_phone



End-Procedure

!***************************************
begin-procedure Get-Phone-Data
!***************************************!

  if rtrim($gvt_cont_emplid,' ') = ''
    move '' to $Phone
    goto GetPhoneExit
  end-if

begin-SELECT
PPE.PHONE
FROM  PS_PERSONAL_PHONE PPE
WHERE PPE.EMPLID =$gvt_cont_emplid
  AND PPE.PHONE_TYPE = 'MAIN'
end-SELECT

     let $Phone      = rtrim(&PPE.Phone,' ')

GetPhoneExit:

end-procedure




!**************************************************************************
!                                                                         *
!  Function:     Get-Additional-Info                                      *
!                                                                         *
!  Description:  Retrieves the name and phone number of person for        *
!                additional information.                                  *
!                                                                         *
!**************************************************************************

Begin-Procedure Get-Additional-Info


Begin-Select

PP.COUNTRY_CODE
PP.PHONE
PD.NAME

     move &pd.name  to $gvt_cont_name
     move &pp.phone to $gvt_cont_phone

from PS_PERSONAL_PHONE PP,
     PS_GVT_PERS_DATA  PD


where PP.EMPLID     = $job_spclst
and   PD.EMPLID     = $job_spclst
and   PP.PHONE_TYPE = 'BUSN'


End-Select

End-Procedure



!***********************************************************************
!                                                                      *
!  Function:     Get-Requestor-Info                                    *
!                                                                      *
!  Description:  Retrieves the name and phone number of the requestor. *
!                                                                      *
!***********************************************************************
Begin-Procedure Get-Requestor-Info

let $found_requestor_flag = 'N'

Begin-Select

M.NAME
N.POSITION_NBR

     move 'Y' to $found_requestor_flag

from  PS_PERSONAL_DATA    M,
      PS_JOB              N


where M.EMPLID       = $gvt_req_emplid
and   N.EMPLID       = M.EMPLID
and   N.EMPL_RCD     = #gvt_req_empl_rcd
and   N.EFFDT        =
      (SELECT MAX(N1.EFFDT)
       from   PS_JOB N1
       where  N1.EMPLID    =  N.EMPLID
       and    N1.EMPL_RCD  =  N.EMPL_RCD
       and    N1.EFFDT     <= $ref_data_tbl_effdt)
and   N.EFFSEQ       =
      (SELECT MAX(N2.EFFSEQ)
       from   PS_JOB N2
       where  N2.EMPLID    = N.EMPLID
       and    N2.EMPL_RCD  = N.EMPL_RCD
       and    N2.EFFDT     = N.EFFDT)

End-Select

Begin-Select

O.DESCR
FROM PS_POSITION_DATA    O
WHERE O.POSITION_NBR = &N.POSITION_NBR AND
      O.EFFDT        =
      (SELECT MAX(O1.EFFDT)
       from   PS_POSITION_DATA O1
       where  O1.POSITION_NBR =  O.POSITION_NBR
       and    O1.EFFDT        <= $ref_data_tbl_effdt)

END-SELECT

move &m.name  to $gvt_req_name
move &o.descr to $gvt_req_title

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Get-Authorizor-Info                                   *
!                                                                      *
!  Description:  Retrieves the name and phone number of the            *
!                authoizor.                                            *
!                                                                      *
!***********************************************************************
Begin-Procedure Get-Authorizor-Info

let $found_authorizor_flag = 'N'

Begin-Select

P.NAME
Q.POSITION_NBR

    move 'Y' to $found_authorizor_flag

from   PS_JOB Q,
       PS_PERSONAL_DATA P

where  P.EMPLID     = $gvt_auth_emplid
and    Q.EMPLID     = P.EMPLID
and    Q.EMPL_RCD   = #gvt_auth_empl_rcd
and    Q.EFFDT      =
       (SELECT MAX(Q1.EFFDT)
        from   PS_JOB Q1
        where  Q1.EMPLID    =  Q.EMPLID
        and    Q1.EMPL_RCD  =  Q.EMPL_RCD
        and    Q1.EFFDT     <= $ref_data_tbl_effdt)
and    Q.EFFSEQ =
       (SELECT MAX(Q2.EFFSEQ)
        from   PS_JOB Q2
        where  Q2.EMPLID    = Q.EMPLID
        and    Q2.EMPL_RCD  = Q.EMPL_RCD
        and    Q2.EFFDT     = Q.EFFDT)


End-Select


Begin-Select

R.DESCR

from   PS_POSITION_DATA R

where  R.POSITION_NBR = &Q.POSITION_NBR
and    R.EFFDT        =
       (SELECT MAX(R1.EFFDT)
        from   PS_POSITION_DATA R1
        where  R1.POSITION_NBR =  R.POSITION_NBR
        and    R1.EFFDT        <= $ref_data_tbl_effdt)

End-Select

move &p.name  to $gvt_auth_name
move &r.descr to $gvt_auth_title

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Get-Approver-Info                                     *
!                                                                      *
!  Description:  Retrieves the name and other data for the approver    *
!                of the PAR.                                           *
!                                                                      *
!***********************************************************************
Begin-Procedure Get-Approver-Info

let $found_approver_flag = 'N'

Begin-Select

QQ.NAME
RR.DEPTID
RR.POSITION_NBR
TT.DESCRSHORT

     move 'Y' to $found_approver_flag

from  PS_PERSONAL_DATA    QQ,
      PS_JOB              RR,
      PS_DEPT_TBL         TT

where QQ.EMPLID       = $gvt_appr_emplid
and   RR.EMPLID       = QQ.EMPLID
and   RR.EMPL_RCD     = #gvt_appr_empl_rcd
and   RR.EFFDT        =
      (SELECT MAX(RR1.EFFDT)
       from   PS_JOB RR1
       where  RR1.EMPLID    =  RR.EMPLID
       and    RR1.EMPL_RCD  =  RR.EMPL_RCD
       and    RR1.EFFDT     <= $ref_data_tbl_effdt)
and   RR.EFFSEQ       =
      (SELECT MAX(RR2.EFFSEQ)
       from   PS_JOB RR2
       where  RR2.EMPLID    = RR.EMPLID
       and    RR2.EMPL_RCD  = RR.EMPL_RCD
       and    RR2.EFFDT     = RR.EFFDT)
and   TT.DEPTID       = RR.DEPTID
and   TT.EFFDT        =
      (SELECT MAX(TT1.EFFDT)
       from   PS_DEPT_TBL      TT1
       where  TT1.DEPTID       =  TT.DEPTID
       and    TT1.EFFDT        <= $ref_data_tbl_effdt)

End-Select

Begin-Select

SS.DESCR

from  PS_POSITION_DATA    SS

where SS.POSITION_NBR = &RR.POSITION_NBR
and   SS.EFFDT        =
      (SELECT MAX(SS1.EFFDT)
       from   PS_POSITION_DATA SS1
       where  SS1.POSITION_NBR =  SS.POSITION_NBR
       and    SS1.EFFDT        <= $ref_data_tbl_effdt)

End-Select

move &qq.name        to $gvt_appr_name
move &tt.descrshort  to $gvt_appr_dept_descr
move &ss.descr       to $gvt_appr_title

End-Procedure


!**************************************************************************
!                                                                        *
!  Function:    Retirement-Termination                                    *
!                                                                         *
!  Description: Retrieves data from the current record to place in the    *
!               from fields.  This is necessary for retirement and        *
!               termination actions , where the current row should display*
!               in the FROM section of the form                           *
!**************************************************************************

Begin-procedure Get-Retirement-Termination

Begin-Select

RET.EFFDT
RET.EFFSEQ
RET.PAYGROUP
RET.COMPANY
RET.GVT_SUB_AGENCY
RET.POSITION_NBR
RET.GVT_PAY_PLAN
RET.GRADE
RET.JOBCODE
RET.GVT_STEP
RET.DEPTID
RET.COMPRATE
RET.GVT_COMPRATE
RET.GVT_PAY_BASIS
RET.GVT_LOCALITY_ADJ
RET.GVT_RTND_GVT_STEP
RET.GVT_PAY_RATE_DETER
TER.GVT_OFFICIAL_DESCR
RET.GVT_BW_RT_NO_LOC
RET.GVT_ANNL_RT_NO_LOC
RET.GVT_HRLY_RT_NO_LOC
RET.GVT_MNLY_RT_NO_LOC

    ! Move 'Y' to $found_previous_occurrence        !  2F4U8:  This variable is innappropriately used and causes
                                                    !                Other Pay to be miscalculated on Ret/Termination actions.
from   PS_GVT_JOB       RET,
       PS_JOBCODE_TBL   TER

where  RET.JOBCODE      = TER.JOBCODE
and    RET.EMPLID       = $emplid
and    RET.EMPL_RCD     = #empl_rcd
and    RET.EFFDT        =
       (SELECT MAX(RET1.EFFDT)
        from  PS_GVT_JOB RET1
        where RET1.EMPLID           =  RET.EMPLID
        and   RET1.EMPL_RCD         =  RET.EMPL_RCD
        and   (RET1.GVT_STATUS_TYPE = 'COM' OR RET1.GVT_STATUS_TYPE = 'COR')
        and   RET1.EFFDT            <=  $ref_data_tbl_effdt)
and   RET.EFFSEQ        =
      (SELECT MAX(RET3.EFFSEQ)
       from   PS_GVT_JOB RET3
       where  RET3.EMPLID    = RET.EMPLID
       and    RET3.EMPL_RCD  = RET.EMPL_RCD
       and    RET3.EFFDT     = RET.EFFDT)
and    TER.EFFDT        =
       (SELECT MAX(TER1.EFFDT)
        from   PS_JOBCODE_TBL TER1
        where  TER1.JOBCODE =  TER.JOBCODE
        and    TER1.EFFDT   <= TER.EFFDT)

End-Select


    move &RET.paygroup            to $paygroup
    move &TER.gvt_official_descr  to $field7a
    move &RET.jobcode             to $field7b
    move &RET.position_nbr        to $field7c
    move &RET.gvt_pay_plan        to $field8
    move &RET.company             to $company
    move &v.gvt_occ_series        to $field9
    move &RET.grade               to $field10
    move &RET.gvt_pay_basis       to $field13
    move &RET.gvt_comprate        to #field12a
    move &RET.gvt_locality_adj    to #field12b


evaluate $first_noac
     when = '3'
     when = '4'
        let $field21 = ' '
end-evaluate


End-Procedure

!***********************************************************************
!                                                                      *
!  Function:     Get-Previous-Occurrence                               *
!                                                                      *
!  Description:  Determines how to get the previous occurrence for a   *
!                two-sided SF52 report.                                *
!                                                                      *
!***********************************************************************
Begin-Procedure Get-Previous-Occurrence

Begin-Select

count(*) &DAY_COUNT

from PS_GVT_JOB DC
where DC.EMPLID       = $emplid
and   DC.EMPL_RCD    = #empl_rcd
and   DC.EFFDT        = $recurse-effdt                   !  MS7U5:  $effdt
and   DC.EFFSEQ       = (SELECT MAX(DC1.EFFSEQ)
                         from   PS_GVT_JOB DC1
                         where  DC1.EMPLID       = DC.EMPLID
                         and    DC1.EMPL_RCD     = DC.EMPL_RCD
                         and    DC1.EFFDT        = DC.EFFDT
                         and    DC1.EFFSEQ       < #recurse-effseq)    !  MS7U5:  $effseq
and  (DC.GVT_STATUS_TYPE = 'COM' OR DC.GVT_STATUS_TYPE = 'COR')

End-Select

if &DAY_COUNT = 0

   do Get-Previous-Diff-Day

else

   do Get-Previous-Same-Day

end-if

move 'N' to $found_previous_occurrence

Begin-Select

U.EFFDT
U.EFFSEQ
U.PAYGROUP
U.COMPANY
U.GVT_SUB_AGENCY
U.POSITION_NBR
U.GVT_PAY_PLAN
U.GRADE
U.JOBCODE
U.GVT_STEP
U.DEPTID
U.COMPRATE
U.GVT_COMPRATE
U.GVT_PAY_BASIS
U.GVT_LOCALITY_ADJ
U.GVT_RTND_GVT_STEP
U.GVT_PAY_RATE_DETER
W.GVT_OFFICIAL_DESCR
U.GVT_BW_RT_NO_LOC
U.GVT_ANNL_RT_NO_LOC
U.GVT_HRLY_RT_NO_LOC
U.GVT_MNLY_RT_NO_LOC
U.GVT_DETL_POSN_NBR

 move 'Y' to $found_previous_occurrence

from   PS_GVT_JOB     U,
       PS_JOBCODE_TBL W

where  U.JOBCODE      = W.JOBCODE
and    U.EMPLID       = $emplid
and    U.EMPL_RCD     = #empl_rcd
and    U.EFFDT        = $prev_effdt
and    U.EFFSEQ       = #prev_effseq
and    W.EFFDT        = (SELECT MAX(W1.EFFDT)
                         from   PS_JOBCODE_TBL W1
                         where  W1.JOBCODE     = W.JOBCODE
                         and    W1.EFFDT   <= U.EFFDT)

End-Select

Begin-Select


V.GVT_OCC_SERIES
V.LOCATION

from   PS_POSITION_DATA V

where  V.POSITION_NBR = &U.POSITION_NBR
and    V.EFFDT        =
       (SELECT MAX(V1.EFFDT)
        from   PS_POSITION_DATA V1
        where  V1.POSITION_NBR =  V.POSITION_NBR
        and    V1.EFFDT        <= &U.EFFDT)

End-Select

if $found_previous_occurrence = 'N'

    display 'No Previous Action found in for two-side processing'

else

!  MS7U5:
! First check if the original record is a correction.  We don't want to use the record immediately
! prior to it because it contains incorrect information. We want the last record that was officially correct.

  if &e.gvt_status_type = 'COR' and $recurse-flag <> 'Y'
     let $recurse-flag = 'Y'   ! only want to do this one time to skip the record immediately after the COR action

     let $recurse-effdt  = &u.effdt
     let #recurse-effseq = &u.effseq

     do Get-Previous-Occurrence
  else
    let $prev_effdt            = &u.effdt
    let #prev_effseq           = &u.effseq

    if $gvt_noa_code = '932'   or $action = 'DTL'
       let $detl_posn_nbr      = &U.GVT_DETL_POSN_NBR
       let $detl_posn_effdt    = &U.EFFDT

       do Retrieve-Detail-Position-Info

       move &G2.descr             to $field7a
       move &G2.jobcode           to $field7b
       move $detl_posn_nbr        to $field7c
       move '8888'                to $field37
    else
       move &w.gvt_official_descr to $field7a
       move &u.jobcode            to $field7b
       move &u.position_nbr       to $field7c
    end-if

    move &u.paygroup           to $paygroup
    move &u.gvt_pay_plan       to $field8
    move &u.company            to $company
    move &v.gvt_occ_series     to $field9
    move &u.grade              to $field10
    move &u.gvt_pay_basis      to $field13
    move &u.gvt_comprate       to #field12a
    move &u.gvt_locality_adj   to #field12b

    move &u.gvt_sub_agency to $gvt_sub_agency
    do Get-SubAgency-Descr

    move &u.deptid         to $deptid
    do Get-Department-Data

    move &v.location to $position_location
    do Get-Position-Location-Data

! if pay rate determinant = 'S' then step is equal to retained step,
! otherwise step is equal to government step

    if &u.gvt_pay_rate_deter = 'S'
        let $field11 = &u.gvt_rtnd_gvt_step
    else
        let $field11 = &u.gvt_step
    end-if

    do Process-Other-Pay

    do Process-Left-Fields
   end-if
end-if

End-Procedure



!***********************************************************************
!                                                                      *
!  Function:     Get-Previous-Diff-Day                                 *
!                                                                      *
!  Description:  Retrieves Keys for Previous Row from Different Days   *
!                                                                      *
!***********************************************************************

begin-procedure Get-Previous-Diff-Day

Begin-Select

DCD.EMPLID
DCD.EMPL_RCD
DCD.EFFDT
DCD.EFFSEQ

from PS_GVT_JOB DCD
where DCD.EMPLID       = $emplid
and   DCD.EMPL_RCD     = #empl_rcd
and   DCD.EFFDT        =
       (SELECT MAX(DCD1.EFFDT)
        from  PS_GVT_JOB DCD1
        where DCD1.EMPLID          =  DCD.EMPLID
        and   DCD1.EMPL_RCD        =  DCD.EMPL_RCD
        and   (DCD1.GVT_STATUS_TYPE = 'COM' OR DCD1.GVT_STATUS_TYPE = 'COR')
        and   DCD1.EFFDT           <  $recurse-effdt     !  MS7U5:  ref_data_tbl_effdt
        and   DCD1.EFFSEQ          =
              (SELECT MAX(DCD2.EFFSEQ)
               from   PS_GVT_JOB DCD2
               where  DCD2.EMPLID    = DCD.EMPLID
               and    DCD2.EMPL_RCD = DCD.EMPL_RCD
               and    DCD2.EFFDT     = DCD.EFFDT)
and   DCD.EFFSEQ        =
      (SELECT MAX(DCD3.EFFSEQ)
       from   PS_GVT_JOB DCD3
       where  DCD3.EMPLID    = DCD.EMPLID
       and    DCD3.EMPL_RCD  = DCD.EMPL_RCD
       and    DCD3.EFFDT     = DCD.EFFDT))

End-Select

let $prev_effdt     = &DCD.EFFDT
let #prev_effseq    = &DCD.EFFSEQ

End-Procedure

!***********************************************************************
!                                                                      *
!  Function:     Get-Previous-Same-Day                                 *
!                                                                      *
!  Description:  Retrieves Keys for Previous Row on Same Day           *
!                                                                      *
!***********************************************************************

begin-procedure Get-Previous-Same-Day

Begin-Select

DCS.EMPLID
DCS.EMPL_RCD
DCS.EFFDT
DCS.EFFSEQ

from PS_GVT_JOB DCS
where DCS.EMPLID       = $emplid
and   DCS.EMPL_RCD     = #empl_rcd
and   DCS.EFFDT        =
       (SELECT MAX(DCS1.EFFDT)
        from  PS_GVT_JOB DCS1
        where DCS1.EMPLID           =  DCS.EMPLID
        and   DCS1.EMPL_RCD         =  DCS.EMPL_RCD
        and   (DCS1.GVT_STATUS_TYPE = 'COM' OR DCS1.GVT_STATUS_TYPE = 'COR')
        and   DCS1.EFFDT            =  $recurse-effdt           !  MS7U5:  ref_data_tbl_effdt
        and   DCS1.EFFSEQ           =
              (SELECT MAX(DCS2.EFFSEQ)
               from   PS_GVT_JOB DCS2
               where  DCS2.EMPLID    = DCS.EMPLID
               and    DCS2.EMPL_RCD  = DCS.EMPL_RCD
               and    DCS2.EFFDT     = DCS.EFFDT
               and    DCS2.EFFSEQ    < #recurse-effseq)     !  MS7U5:  #effseq
and   DCS.EFFSEQ        =
      (SELECT MAX(DCS3.EFFSEQ)
       from   PS_GVT_JOB DCS3
       where  DCS3.EMPLID    = DCS.EMPLID
       and    DCS3.EMPL_RCD  = DCS.EMPL_RCD
       and    DCS3.EFFDT     = DCS.EFFDT
       and    DCS3.EFFSEQ    < #recurse-effseq))       !  MS7U5: #effseq

End-Select

let $prev_effdt     = &DCS.EFFDT
let #prev_effseq    = &DCS.EFFSEQ

End-Procedure

!***********************************************************************
!                                                                      *
!  Function:     Get-NOA-Code-Descr                                    *
!                                                                      *
!  Description:  Retrieves the description of the NOA code.            *
!                                                                      *
!***********************************************************************
begin-procedure Get-NOA-Code-Descr

Begin-Select

F.DESCR25
F.DESCR25_2

from  PS_GVT_NOAC_TBL  F

where F.ACTION       = $action
and   F.GVT_NOA_CODE = $gvt_noa_code
and   F.EFFDT        =
      (SELECT MAX(F1.EFFDT)
       from   PS_GVT_NOAC_TBL  F1
       where  F1.ACTION        =  F.ACTION
       and    F1.GVT_NOA_CODE  =  F.GVT_NOA_CODE
       and    F1.EFFDT         <= $ref_data_tbl_effdt)

End-Select

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Get-Agency-Descr                                      *
!                                                                      *
!  Description:  Retrieves the description of the agency from the      *
!                COMPANY_TBL.      .                                   *
!                                                                      *
!***********************************************************************
begin-procedure Get-Agency-Descr

let $found_agency_flag = 'N'

Begin-Select

X.DESCR

    move 'Y' to $found_agency_flag

from  PS_COMPANY_TBL X

where X.COMPANY = $company
and   X.EFFDT   =
      (SELECT MAX(X1.EFFDT)
       from   PS_COMPANY_TBL X1
       where  X1.COMPANY =  X.COMPANY
       and    X1.EFFDT   <= $ref_data_tbl_effdt)

End-Select

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Get-SubAgency-Descr                                   *
!                                                                      *
!  Description:  Retrieves the description of the sub-agency from      *
!                the database.     .                                   *
!                                                                      *
!***********************************************************************
Begin-Procedure Get-SubAgency-Descr

let $found_sub_flag = 'N'

Begin-Select

DD.GVT_DESCR70

    move 'Y' to $found_sub_flag

from  PS_GVT_SUBAGCY_TBL DD

where DD.COMPANY        = $company
and   DD.GVT_SUB_AGENCY = $gvt_sub_agency
and   DD.EFFDT          =
      (SELECT MAX(DD1.EFFDT)
       from   PS_GVT_SUBAGCY_TBL DD1
       where  DD1.COMPANY        =  DD.COMPANY
       and    DD1.GVT_SUB_AGENCY =  DD.GVT_SUB_AGENCY
       and    DD1.EFFDT          <= $ref_data_tbl_effdt)

End-Select

if $found_sub_flag = 'N'
     move ' '             to $sub_agency_descr
else
    move &dd.gvt_descr70 to $sub_agency_descr
end-if

if ($side_flag = 'L'
or  $found_previous_occurrence = 'Y')
    move $Sub_Agency_Descr to $Field14a

else
    move $Sub_Agency_Descr to $Field22a
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Get-Fegli-Descr                                       *
!                                                                      *
!  Description:  Retrieves the description of the FEGLI code from      *
!                GVT_FEGLI.                                            *
!                                                                      *
!***********************************************************************
begin-procedure Get-Fegli-Descr

Begin-Select

FGL.DESCR50

from  PS_GVT_FEGLI FGL

where FGL.GVT_FEGLI = $gvt_fegli
and   FGL.EFFDT   =
      (SELECT MAX(FGL1.EFFDT)
       from   PS_GVT_FEGLI FGL1
       where  FGL1.GVT_FEGLI =  FGL.GVT_FEGLI
       and    FGL1.EFFDT   <= $ref_data_tbl_effdt)

End-Select

End-Procedure




!***********************************************************************
!                                                                      *
!  Function:     Get-Position-Data                                     *
!                                                                      *
!  Description:  Retrieves the occ series and supervisor level from    *
!                the position data table.                              *
!                                                                      *
!***********************************************************************
Begin-Procedure Get-Position-Data

let $found_position_flag = 'N'

Begin-Select

EE.GVT_OCC_SERIES
EE.MANAGER_LEVEL

    move 'Y' to $found_position_flag

from  PS_POSITION_DATA EE

where EE.POSITION_NBR = $position_nbr
and   EE.EFFDT        =
      (SELECT MAX(EE1.EFFDT)
       from   PS_POSITION_DATA EE1
       where  EE1.POSITION_NBR =  EE.POSITION_NBR
       and    EE1.EFFDT        <= $ref_data_tbl_effdt)

End-Select

if $found_position_flag = 'N'

    move ' ' to $gvt_occ_series
    move ' ' to $field51

else

    move &ee.gvt_occ_series to $gvt_occ_series
    move &ee.manager_level  to $field51

    if rtrim(&ee.manager_level, ' ') = ''
        let $manager_flag = 'Y'
        do Process-Translate-Values
    end-if

end-if

!**** Determines which side to populate the data, left or right.


if ($side_flag = 'L')
    move $gvt_occ_series     to $field9
else
    move $gvt_occ_series     to $field17
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Process-Other-Pay                                     *
!                                                                      *
!  Description:  Retrieves the earnings code from the GVT_JOB_ERNS     *
!                table for each employee.                              *
!                                                                      *
!***********************************************************************
begin-procedure Process-Other-Pay

let #total_other_pay = 0

if $found_previous_occurrence = 'Y'
    let $erncd_effdt  = $prev_effdt
    let #erncd_effseq = #prev_effseq

    ! HR5AP:  Set variables that are used to calc other pay with PREVIOUS row values
    let #op-calc-comprate = &u.gvt_comprate
    let #op-calc-locality = &u.gvt_locality_adj

else
    let $erncd_effdt  = $ref_data_tbl_effdt
    let #erncd_effseq = #ref_data_tbl_effseq

    ! HR5AP:  Set variables that are used to calc other pay with CURRENT row values
    let #op-calc-comprate = &e.gvt_comprate
    let #op-calc-locality = &e.gvt_locality_adj
end-if

! :  R-ACOX-FN8J6/R-AXC-5W4QO : if 818/Administratively Uncontrollable Overtime, don't calc other pay.
if &e.gvt_noa_code = '818'
   do Process-AUO
else

Begin-Select

FF.ERNCD
FF.AMOUNT

    let $erncd  = &ff.erncd
    let #amount = &ff.amount
    do Process-Other-Pay-Calc

from  PS_GVT_JOBERNS FF

where FF.EMPLID    = $emplid
and   FF.EMPL_RCD  = #empl_rcd
and   FF.EFFDT     = $erncd_effdt
and   FF.EFFSEQ    = #erncd_effseq

End-Select

end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Process-Other-Pay-Calc                                *
!                                                                      *
!  Description:  Retrieves the other pay indicator, based on type,     *
!                and multiplication factor from the Earnings_Tbl for   *
!                each earning code selected in the previous procedure. *
!                Other pay calculated if gvt_oth_pay = 'Y' only.       *
!                                                                      *
!***********************************************************************
begin-procedure Process-Other-Pay-Calc

let $found_earnings_flag = 'N'

Begin-Select

GG.GVT_OTH_PAY
GG.BASED_ON_TYPE
GG.FACTOR_MULT
GG.GVT_ADD_TO_SF50_52
GG.GVT_INCLUDE_LOC

    move 'Y' to $found_earnings_flag

    let $gvt_oth_pay        = &gg.gvt_oth_pay
    let $based_on_type      = &gg.based_on_type
    let #factor_mult        = &gg.factor_mult
    let $gvt_add_to_sf50_52 = &gg.gvt_add_to_sf50_52
    let $gvt_include_loc    = &gg.gvt_include_loc

    if $gvt_oth_pay = 'Y'
        do Get-Pay-Frequency
        do Annualize-Other-Pay
        let #total_other_pay = #total_other_pay + #other_pay
    end-if

from  PS_EARNINGS_TBL GG

WHERE GG.ERNCD = $erncd
and   GG.EFFDT =
      (SELECT MAX(GG1.EFFDT)
       from   PS_EARNINGS_TBL GG1
       where  GG1.ERNCD = GG.ERNCD
       and    GG1.EFFDT <= $ref_data_tbl_effdt)

End-Select


End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Get-Pay-Frequecy                                      *
!                                                                      *
!  Description:  Retrieves the pay frequency for the employee's        *
!                company and paygroup and sets the number of pay       *
!                period per year.                                      *
!                                                                      *
!***********************************************************************
begin-procedure Get-Pay-Frequency

let $found_frequency = 'N'

Begin-Select

HH.PAY_FREQUENCY

    move 'Y' to $found_frequency

    let $pay_frequency = &hh.pay_frequency

    evaluate $pay_frequency
        when = 'W'
            let #Pay_period = 52
            break
        when = 'B'
            let #Pay_period = 26
            break
        when = 'M'
            let #Pay_period = 12
            break
        when = 'S'
            let #Pay_period = 24
            break
        when = 'D'
            let #Pay_period = 260
            break
        when = 'Q'
            let #Pay_period = 4
            break
        when = 'A'
            let #Pay_period = 1
            break
    end-evaluate

from  PS_PAYGROUP_TBL HH

where HH.COMPANY  = $company
and   HH.PAYGROUP = $paygroup
and   HH.EFFDT    =
      (SELECT MAX(HH1.EFFDT) from PS_PAYGROUP_TBL HH1
       where  HH1.COMPANY  =  HH.COMPANY
       and    HH1.PAYGROUP =  HH.PAYGROUP
       and    HH1.EFFDT    <= $ref_data_tbl_effdt)

End-Select

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Annualize-Other-Pay                                   *
!                                                                      *
!  Description:  Annualizes other pay amounts using either the number  *
!                of pay periods per year or a factor multiplier.       *
!                                                                      *
!***********************************************************************


Begin-Procedure Annualize-Other-Pay

! HR5AP:  use #op-calc-comprate and #op-calc-locality variables to calculate appropriate other_pay rate
!               (used to be &E.GVT_COMPRATE and &E.GVT_LOCALITY_ADJ)


if $based_on_type = 'N'
    let #other_pay = #amount * #pay_period
else
    if $gvt_add_to_sf50_52 = 'Y'
        if $gvt_include_loc = 'Y'
            let #other_pay = (#op-calc-comprate + #op-calc-locality) * #factor_mult
        else
            let #other_pay = #op-calc-comprate * #factor_mult
        end-if
    end-if
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Get-Department-Data                                   *
!                                                                      *
!  Description:  Retrieves the 4 levels of department titles from the  *
!                department table.                                     *
!                                                                      *
!***********************************************************************
begin-procedure Get-Department-Data

let $found_dept_flag = 'N'

Begin-Select

II.GVT_PAR_DESCR2
II.GVT_PAR_DESCR3
II.GVT_PAR_DESCR4
II.GVT_PAR_DESCR5

    move 'Y' to $found_dept_flag

from  PS_DEPT_TBL II

where II.DEPTID = $Deptid
and   II.EFFDT  =
      (SELECT MAX(II1.EFFDT)
       from   PS_DEPT_TBL II1
       where  II1.DEPTID =  II.DEPTID

and    II1.EFFDT  <= $ref_data_tbl_effdt)

End-Select

if $found_dept_flag = 'N'
    move ' '                to $gvt_par_descr2
    move ' '                to $gvt_par_descr3
    move ' '                to $gvt_par_descr4
    move ' '                to $gvt_par_descr5
else
    move &ii.gvt_par_descr2 to $gvt_par_descr2
    move &ii.gvt_par_descr3 to $gvt_par_descr3
    move &ii.gvt_par_descr4 to $gvt_par_descr4
    move &ii.gvt_par_descr5 to $gvt_par_descr5
end-if

!**** Determines which side to populate the data, left or right.

if ($side_flag                 = 'L'
or  $found_previous_occurrence = 'Y')
      move $gvt_par_descr2 to $field14b
      move $gvt_par_descr3 to $field14c
      move $gvt_par_descr4 to $field14d
      move $gvt_par_descr5 to $field14e
else
      move $gvt_par_descr2 to $field22b
      move $gvt_par_descr3 to $field22c
      move $gvt_par_descr4 to $field22d
      move $gvt_par_descr5 to $field22e
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Get-Position-Location-Data                            *
!                                                                      *
!  Description:  Retrieves location data for the location data based   *
!                on the location on the position.                      *
!                                                                      *
!***********************************************************************
begin-procedure Get-Position-Location-Data

let $found_loc_flag = 'N'

Begin-Select

JJ.CITY
JJ.STATE
JJ.COUNTRY

    move 'Y' to $found_loc_flag

from  PS_LOCATION_TBL JJ

where JJ.LOCATION = $position_location
and   JJ.EFFDT    =
      (SELECT MAX(JJ1.EFFDT)
       from   PS_LOCATION_TBL JJ1
       where  JJ1.LOCATION =  JJ.LOCATION
       and    JJ1.EFFDT    <= $ref_data_tbl_effdt)

End-Select

if $found_loc_flag = 'N'
    move ' '         to $position_location_city
    move ' '         to $position_location_state
    move ' '         to $position_location_country
else
    move &jj.city    to $position_location_city
    move &jj.state   to $position_location_state
    move &jj.country to $position_location_country
end-if

!**** Determines which side of the report to put the data, left or right.

if ($side_flag                 = 'L' or
    $found_previous_occurrence = 'Y')
    move $position_location_city    to $field14f
    move $position_location_state   to $field14g
    move $position_location_country to $field14h
else
    move $position_location_city    to $field22f
    move $position_location_state   to $field22g
    move $position_location_country to $field22h
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Get-PAR-Job-Location-Data                             *
!                                                                      *
!  Description:  Retrieves location data for the location from the     *
!                GVT_PAR_JOB record.                                   *
!                                                                      *
!***********************************************************************
Begin-Procedure Get-PAR-Job-Location-Data

let $found_PAR_loc_flag = 'N'

Begin-Select

KK.CITY
KK.COUNTY
KK.STATE
KK.COUNTRY
KK.EFFDT
KK.GVT_ST_CNTRY_DESCR

   move 'Y' to $found_PAR_loc_flag

FROM  PS_GVT_GEOLOC_TBL KK
WHERE KK.GVT_GEOLOC_CD = $field38
and   KK.EFFDT    =
      (SELECT MAX(KK1.EFFDT)
       from   PS_GVT_GEOLOC_TBL KK1
       where  KK1.GVT_GEOLOC_CD =  KK.GVT_GEOLOC_CD
       and    KK1.EFFDT        <= $ref_data_tbl_effdt)

End-Select


if $found_PAR_loc_flag = 'N'
    move ' '         to $Field39a
    move ' '         to $Field39b
    move ' '         to $Field39c
    move ' '         to $Field39d
else
    let $geochk = substr (&loc.gvt_geoloc_cd,1,2)
    if  $geochk >= '00' and $geochk <= '99'
        move &kk.city               to $field39a
        move &kk.county             to $field39b
        move &kk.state              to $field39c
        move &kk.country            to $field39d
    else
        move &kk.city               to $field39a
        move &kk.gvt_st_cntry_descr to $field39d
    end-if
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     bonus-data                                            *
!                                                                      *
!  Description:  Checks for Bonus PAR and adjusts fields accordingly   *
!                                                                      *
!                                                                      *
!***********************************************************************
begin-procedure bonus-data

 if (#bonus_amt <> 0) or
    (#bonus_hrs <> 0)

!Show 'Award Hours: ' #bonus_hrs
!Show 'Award Amnt : ' #bonus_amt

      if (#bonus_hrs <> 0)
      if #bonus_hrs < 100
         let $field20 = edit(#bonus_hrs,'00.00') || ' Hours'
      else
         let $field20 = edit(#bonus_hrs,'000.00') || ' Hours'
      end-if
   else
      let $field20 = edit(#bonus_amt,'$$,$$$,$$9.99')
      end-if

      let $field21  = ''
end-if


end-procedure


!***********************************************************************
!                                                                      *
! Function:     Blank-Blocks-7-14                                      *
!                                                                      *
! Description:  Set blocks 7 through 14 to blank                       *
!                                                                      *
!***********************************************************************

Begin-procedure Blank-Blocks-7-14

   let $field7a   = ''
   let $field7b   = ''
   let $field7c   = ''
   let $field8    = ''
   let $field9    = ''
   let $field10   = ''
   let $field11   = ''
   do Blank-Block-12
   let $field13   = ''
   let $field14aa = ''
   let $field14a  = ''
   let $field14b  = ''
   let $field14c  = ''
   let $field14d  = ''
   let $field14e  = ''
   let $field14f  = ''
   let $field14g  = ''
   let $field14h  = ''
   let $field14x  = ''


end-procedure


!***********************************************************************
!                                                                      *
! Function:        Blank-Block-12                                      *
!                                                                      *
! Description:  Set block 12 to blank                                  *
!                                                                      *
!                                                                      *
!***********************************************************************

Begin-procedure Blank-Block-12



   let $field12   = ''
   let #field12   = 0
   let #field12a  = 0
   let $field12a  = ''
   let $field12b  = ''
   let #field12b  = 0
   let $field12c  = ''
   let #field12c  = 0
   let $field12d  = ''
   let #field12d  = 0




end-procedure


!***********************************************************************
!                                                                      *
! Function:        Blank-Block-14                                      *
!                                                                      *
! Description:  Set block 14 to blank                                  *
!                                                                      *
!                                                                      *
!***********************************************************************

Begin-procedure Blank-Block-14

   let $field14a  = ''
   let $field14aa = ''
   let $field14b  = ''
   let $field14c  = ''
   let $field14d  = ''
   let $field14e  = ''
   let $field14f  = ''
   let $field14g  = ''
   let $field14h  = ''
   let $field14x  = ''

end-procedure


!***********************************************************************
!                                                                      *
! Function:        Blank-Blocks-16-19                                  *
!                                                                      *
! Description:  Set blocks 16 - 19 to                                  *
!                                                                      *
!                                                                      *
!***********************************************************************

Begin-procedure Blank-Blocks-16-19

   let $field16   = ''
   let $field17   = ''
   let $field18   = ''
   let $field19   = ''

end-procedure

!***********************************************************************
!                                                                      *
! Function:        Blank-Block-20                                      *
!                                                                      *
! Description:  Set block 20 to blank                                  *
!                                                                      *
!                                                                      *
!***********************************************************************

Begin-procedure Blank-Block-20

   let $field20a  = ''
   let $field20b  = ''
   let $field20c  = ''
   let $field20d  = ''

end-procedure


!***********************************************************************
!                                                                      *
! Function:     Blank-Blocks-21-And-29                                 *
!                                                                      *
! Description:  Set block 20 to blank                                  *
!                                                                      *
!                                                                      *
!***********************************************************************

Begin-procedure Blank-Blocks-21-And-29

   let $field21   = ''
   let $field29   = ''

end-procedure




!***********************************************************************
!                                                                      *
!  Function:     Determine-Authorization-Fields                        *
!                                                                      *
!  Description:  This procedure populates the Authorization Fields,    *
!                fields 5c through 5f2.  For awards and bonuses, the   *
!                data from the awards and bonus tables are to be used  *
!                to populate the table not from the gvt_par_job        *
!                record.                                               *
!                                                                      *
!***********************************************************************
begin-procedure Determine-Authorization-Fields

evaluate  $gvt_par_type
    when = 'P'
        move &e.gvt_leg_auth_1    to $field5c
        move &e.gvt_par_auth_d1   to $field5d1
        move &e.gvt_par_auth_d1_2 to $field5d2
        move &e.gvt_leg_auth_2    to $field5e
        move &e.gvt_par_auth_d2   to $field5f1
        move &e.gvt_par_auth_d2_2 to $field5f2
        break
end-evaluate

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Process-Left-Fields                                   *
!                                                                      *
!  Description:  Processes the left side salary fields to be           *
!                character fields with currency characteristics.       *
!                                                                      *
!***********************************************************************
Begin-Procedure Process-Left-Fields


if #field12a = 0
! :  R-AXC-5W4QO/R-ACOX-FN8J6:
   if $gvt_noa_code <> '818'
      let $field12a = '$0'
   else
      let $field12a = ''
   end-if
else
   let #trunc_field12a = trunc(#field12a,2)
   let $field12a = edit(#trunc_field12a,'$$,$$$,$$9.99')
end-if

if #field12b = 0
! :  R-AXC-5W4QO/R-ACOX-FN8J6:
   if $gvt_noa_code <> '818'
      let $field12b = '$0'
   else
      let $field12b = ''
   end-if
else
   let $field12b = edit(#field12b,'$$$,$$9.99')
end-if

let #field12c = round(#field12a + #field12b,2)
if #field12c = 0
! :  R-AXC-5W4QO/R-ACOX-FN8J6:
   if $gvt_noa_code <> '818'
      let $field12c = '$0'
   else
      let $field12c = ''
   end-if
else
    let $field12c = edit(#field12c,'$$,$$$,$$9.99')
end-if

let #field12d = round(#total_other_pay,0)

if #field12d = 0
    let $field12d = '$0'
else
    let $field12d = edit(#field12d,'$$$,$$9')
end-if

! :  R-AXC-5W4QO/R-ACOX-FN8J6: Keep if current value is a percentage.  AUO requires % in 12/20D
if substr($field20,length($field20),1) <> '%'
   let #field12 = round(#field12c + #field12d,2)
   if #field12 = 0
      let $field12 = '$0'
   else
      let $field12 = edit(#field12,'$$,$$$,$$9.99')
   end-if
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Process-Right-Fields                                  *
!                                                                      *
!  Description:  Processes the right side salary fields to be          *
!                character fields with currency characteristics.       *
!                                                                     *
!***********************************************************************
begin-procedure Process-Right-Fields

if #field20a = 0
! :  R-AXC-5W4QO/R-ACOX-FN8J6:
   if $gvt_noa_code <> '818'
     let $field20a = '$0'
   else
      let $field20a = ''
   end-if
else
    let #trunc_field20a = trunc(#field20a,2)
    let $field20a = edit(#trunc_field20a,'$$,$$$,$$9.99')
end-if

if #field20b = 0
! :  R-AXC-5W4QO/R-ACOX-FN8J6:
   if $gvt_noa_code <> '818'
     let $field20b = '$0'
   else
      let $field20b = ''
   end-if
else
    let $field20b = edit(trunc(#field20b,2),'$$$,$$9.99')
end-if

let #field20c = round((#field20a + #field20b),2)

if #field20c = 0
! :  R-AXC-5W4QO/R-ACOX-FN8J6:
   if $gvt_noa_code <> '818'
      let $field20c = '$0'
   else
      let $field20c = ''
   end-if
else
    let $field20c = edit(#field20c,'$$,$$$,$$9.99')
end-if

let #field20d = round(#total_other_pay,0)

if #field20d = 0
    let $field20d = '$0'
else
    let $field20d = edit(#field20d,'$$$,$$9')
end-if

! :  R-AXC-5W4QO/R-ACOX-FN8J6: Keep if current value is a percentage.  AUO requires % in 12/20D
if substr($field20,length($field20),1) <> '%'
   let #field20 = round((#field20c + #field20d),2)
   if #field20 = 0
      let $field20 = '$0'
   else
      let $field20 = edit(#field20,'$$,$$$,$$9.99')
   end-if
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Process-Position-Jobcode-Data                         *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Process-Position-Jobcode-Data

Begin-Select

POS.LOCATION
POS.COMPANY
POS.GVT_SUB_AGENCY
POS.BARG_UNIT
POS.GVT_PAY_PLAN
POS.GRADE
POS.MANAGER_LEVEL
POS.FLSA_STATUS
POS.GVT_OCC_SERIES
POS.GVT_POI
POS.GVT_POSN_OCCUPIED
JCD.GVT_OFFICIAL_DESCR
JCD.GVT_PAY_BASIS

    move  &jcd.gvt_official_descr          to  $field15a
    move  &pos.gvt_pay_plan                to  $field16
    move  &pos.gvt_occ_series              to  $field17
    move  &pos.grade                       to  $field18
    move  &jcd.gvt_pay_basis               to  $field21
    move  &pos.gvt_posn_occupied           to  $field34
    move  &pos.flsa_status                 to  $field35
    move  &pos.barg_unit                   to  $field37
    move  &pos.location                    to  $field38
    move  &pos.manager_level               to  $field51
    move  &pos.gvt_poi                     to  $gvt_poi

    move  'R'  to  $side_flag

    move &pos.company             to $company
    move &pos.gvt_sub_agency      to $gvt_sub_agency
    do Get-SubAgency-Descr

    do Get-Department-Data

    move  &pos.location           to $position_location
    do Get-Position-Location-Data



!***********************************************************************
!   Even though this procedure is par JOB location data it is truly    *
!   based on the location value in field 38.                           *
!***********************************************************************
    do  Get-PAR-Job-Location-Data

from  PS_POSITION_DATA     POS,
      PS_JOBCODE_TBL       JCD

where POS.EFFDT         =
      (SELECT  max (POS1.EFFDT)
       from    PS_POSITION_DATA  POS1
       where   POS1.POSITION_NBR   =   POS.POSITION_NBR
       and     POS1.EFFDT          <=  $ref_data_tbl_effdt)
and   JCD.EFFDT         =
      (SELECT  max (JCD1.EFFDT)
       from    PS_JOBCODE_TBL    JCD1
       where   JCD1.JOBCODE        =   JCD.JOBCODE
       and     JCD1.EFFDT          <=  $ref_data_tbl_effdt)

End-Select

Evaluate $first_noac
    when = '3'
    when = '4'
     let $field21 = ' '
End-Evaluate


End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Print-SF52-Form                                       *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Print-SF52-Form

if $first_form = 'N'
  NEW-PAGE
end-if

do Print-SF52-Page-One-Layout
do Print-SF52-Page-One-Data

NEW-PAGE

do Print-SF52-Page-Two-Layout
do Print-SF52-Page-Two-Data

let $first_form = 'N'

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Print-SF52-Page-One-Data                              *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Print-SF52-Page-One-Data


alter-printer
 point-size=10

PRINT '' (-50,1,0)

print  $action_xlat                                                 (7,6,0)
print  $gvt_par_nbr                                                (0,117,0)

!Set cursor for box 3
position (9,0)

print  $gvt_cont_name                                              (0,6,0)
print  $gvt_cont_phone                                             (0,45,0)

if  $gvt_effdt_proposed <> ''
    do Format-DateTime($gvt_effdt_proposed, $out, {DEFMDY},'','')
    print  $out                                                           (0,117,0)
end-if

!Set cursor for box 5
position (12,0)

print  $gvt_req_name                                               (11,6,0)

if  $gvt_req_date <> ''
    do Format-DateTime($gvt_req_date, $out, {DEFMDY},'','')
    print  $out                                                           (11,45,0)
end-if
print  $gvt_auth_name                                              (11,66,0)

if  $gvt_auth_date <> ''
    do Format-DateTime($gvt_auth_date, $out, {DEFMDY},'','')
    print  $out                                                           (11,117,0)
end-if

print  $gvt_req_title                                                (12,6,0)

print  $gvt_auth_title                                              (12,66,0)

print  ' '                                                                  (+4,1,0)

do  Print-SF50-52-Common-Data

alter-printer
 point-size=10

!Set cursor for box 45
position (65,0)

print  $field45                                                    (0,7,0)
print  $field46                                                    (0,22,0)


UNSTRING $field47 by '   ' into $field47res
let #len47 = length($field47res)

If #len47 < 20
   print  $field47                                                 (0,33,0)
else
   EXTRACT $var47A from $field47  0  18
      let $var47A = $var47A|| '-'
      print   $var47A                                             (64,43,0)
   EXTRACT $var47B from $field47 18  #len47
      print   $var47B                                             (65,33,0)
end-if


print  $field48                                                    (0,68,0)
print  $field49                                                    (0,82,0)
print  $field50                                                    (0,99,0)
print  $field50a                                                  (0,105,0)
print  $field51                                                    (0,117,0)
print  $field51a                                                   (0,120,0)

alter-printer
  point-size=10

  !Set cursor for Part C
position (68,0)

print  $gvt_appr_dept_descr                               (0,7,0)
print  $gvt_appr_name                                         (0,25,0)

if  $gvt_appr_date <> ''
    do Format-DateTime($gvt_appr_date, $out, {DEFMDY},'','')
    print  $out                                                       (0,50,0)
end-if

print  $gvt_appr_title                                          (69,25,0)

print  $gvt_sign_name                                         (75,80,0)

if  $gvt_sign_date <> ''
    do Format-DateTime($gvt_sign_date, $out, {DEFMDY},'','')
    print  $out                                                      (75,119,0)
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Print-SF52-Page-Two-Data                              *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Print-SF52-Page-Two-Data

! GRAPHIC () FONT 5 8

do  Print-SF52-Page-Two-Data-Without-Remarks

print  ' '                                                         (40,3,0)

let  $null_line                   =  'NULL LINE'
let  $half_line                   =  'HALF LINE'
let  $complete_line               =  'COMPLETE LINE'

let  #remarks_while_counter       =  0
let  #remarks_on_page_counter     =  0
let  $remark_line_to_print        =  ''
let  $previous_print_line_status  =  $null_line

print  ' '                               (+1,5,0)

while  #remarks_while_counter  <=  #remarks_array_counter

    if  #remarks_on_page_counter  >  23

        print  'REMARKS CONTINUED ON SECOND PAGE'                  (+2,26,0)     BOLD

        NEW-PAGE
        do  Print-SF52-Page-Two-Layout
        do  Print-SF52-Page-Two-Data-Without-Remarks

        print  'REMARKS CONTINUED:'                                (52,32,0)

        let  #remarks_on_page_counter    =  1
    end-if

    get  $gvt_remark_line  from  remarks (#remarks_while_counter)  remarks_line

    evaluate  $previous_print_line_status

        when  =  $half_line

            if  $gvt_remark_line  =  $new_remark_marker
                let  $previous_print_line_status  =  $null_line
            else
                let  $print_line_flag             =  'Y'
                let  $remark_line_to_print        =  $remark_line_to_print  ||  ' '  ||
                                                     $gvt_remark_line
                let  $previous_print_line_status  =  $complete_line
            end-if

            let  $print_line_flag   =  'Y'
            break

        when  =  $null_line
        when  =  $complete_line

            if  $gvt_remark_line                  =  $new_remark_marker
                let  $remark_line_to_print        =  ''
                let  $previous_print_line_status  =  $null_line
            else
                if  $previous_print_line_status  =  $null_line
                    let  $remark_line_to_print        =  '- '  ||  $gvt_remark_line
                else
                    let  $remark_line_to_print        =  '  '  ||  $gvt_remark_line
                end-if
                let  $previous_print_line_status  =  $half_line
            end-if

            let  $print_line_flag       =  'N'
            break

    end-evaluate

    if  $print_line_flag  =  'Y'
        ALTER-PRINTER
          POINT-SIZE=7.5
         print  $remark_line_to_print                               (+1,5,0)
       let  #remarks_on_page_counter  =  #remarks_on_page_counter  +  1
    end-if

    let  #remarks_while_counter        =  #remarks_while_counter    +  1

end-while

if  $previous_print_line_status  =  $half_line
    ALTER-PRINTER
          POINT-SIZE=7.5
    print  $remark_line_to_print                               (+1,5,0)
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Print-SF52-Page-Two-Data-Without-Remarks              *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Print-SF52-Page-Two-Data-Without-Remarks

 alter-printer
 point-size=10

print  $name                                                           (2,11,0)
print  $gvt_par_nbr                                                (0,112,0)

if  $part_d_action_reason <> ' '
    print  $part_d_action_reason                              (8,5,0)
    let #comments_start_line  =  9
else
    print  ''                                                               (12,5,0)
    let #comments_start_line  =  8
end-if

if  rtrim ($part_d_comments, ' ')  <>  ''
    move $part_d_comments         to  $prntext
    move 5                        to  #PrnStartCol
    move #comments_start_line     to  #PrnStartRow
    move 110                      to  #MaxWrapWidth
    move 1                        to  #MoveLinesDown
    move 20                       to  #MaxPrnLines
    move 'N'                      to  $PrintBold
    do PrintWrap
end-if

if  $part_e_action_reason <> ' '
    print  $part_e_action_reason                                   (30,5,0)
    let #comments_start_line  =  31
else
    print  ''                                                                   (30,3,0)
    let #comments_start_line  =  30
end-if


if  rtrim ($part_e_comments, ' ')  <>  ''
    move $part_e_comments         to  $prntext
    move 4                        to  #PrnStartCol
    move #comments_start_line     to  #PrnStartRow
    move 110                      to  #MaxWrapWidth
    move 1                        to  #MoveLinesDown
    move 20                       to  #MaxPrnLines
    move 'N'                      to  $PrintBold
    do PrintWrap
end-if

! Set cursor for Part E box 2
position (39,0)

if  $part_e_effdt <> ''
    do Format-DateTime($part_e_effdt, $out, {DEFMDY},'','')
    print  $out                                                       (0,5,0)
end-if

print  $part_e_name                                             (0,25,0)

if  $part_e_date_sign <> ''
    do Format-DateTime($part_e_date_sign, $out, {DEFMDY},'','')
    print  $out                                                         (0,53,0)
end-if

!print ' '                                                          (-13,50,0)

if  rtrim ($part_e_address1, ' ')  <> ''
    print  $part_e_address1                                   (36,90,0)
end-if

if  rtrim ($part_e_address2, ' ')  <> ''
    print  $part_e_address2                                  (37,90,0)
end-if

if  rtrim ($part_e_address3, ' ')  <> ''
    print  $part_e_address3                                  (38,90,0)
end-if

if  rtrim ($part_e_address4, ' ')  <> ''
    print  $part_e_address4                                 (39,90,0)
    if  $part_e_city  <>  ' '
         let $part_e_city_state_zip = rtrim ($part_e_city, ' ')   || ', '  ||
                                 rtrim ($part_e_state, ' ')  || ' '   ||
                                 rtrim ($part_e_zip, ' ')
         print $part_e_city_state_zip                      (40,90,0)
    end-if
else
    if  $part_e_city  <>  ' '
         let $part_e_city_state_zip = rtrim ($part_e_city, ' ')   || ', '  ||
                                 rtrim ($part_e_state, ' ')  || ' '   ||
                                 rtrim ($part_e_zip, ' ')
         print $part_e_city_state_zip                      (39,90,0)
     end-if
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Print-SF50-Form                                       *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Print-SF50-Form

!****************************************************************************************
!    Process Employee Copy
!****************************************************************************************

if $gvt_par_copy1  =  'Y'

    if $first_form = 'N'
        NEW-PAGE
    end-if

    move   ' '                                                  to  $next_page_information
   ! move   '1 -                Employee Copy                '   to  $copy_information

    do Print-SF50-Page-One-Layout

    do Print-SF50-Page-One-Data

    move 'N'  to  $first_form

end-if


!****************************************************************************************
!    Process OPF Copy
!****************************************************************************************

if $gvt_par_copy2  =  'Y'

    if $first_form = 'N'
        NEW-PAGE
    end-if

    move   ' '                                                  to  $next_page_information
    move   '2 - OPF Copy - Long-Term Record - DO NOT DESTROY'   to  $copy_information

    do Print-SF50-Page-One-Layout

    do Print-SF50-Page-One-Data

    move 'N'  to  $first_form

end-if

!****************************************************************************************
!    Process Payroll Copy
!****************************************************************************************

 if $gvt_par_copy3  =  'Y'

    if $first_form = 'N'
      NEW-PAGE
    end-if

    move   ' '                                               to  $next_page_information
    move   '                      3 - Payroll Copy'          to  $copy_information

    do Print-SF50-Page-One-Layout

    do Print-SF50-Page-One-Data

    move 'N'  to  $first_form

 end-if

!****************************************************************************************
!    Process Utility Copy
!****************************************************************************************

 if $gvt_par_copy4  =  'Y'

    if $first_form = 'N'
      NEW-PAGE
    end-if

    move   ' '                                               to  $next_page_information
    move   '                      4 - Utility Copy'          to  $copy_information

    do Print-SF50-Page-One-Layout

    do Print-SF50-Page-One-Data

    move 'N'  to  $first_form

end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Print-SF50-Page-One-Data                              *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Print-SF50-Page-One-Data

do  Print-SF50-Page-One-Data-Without-Remarks

print  ' '                                                         (56,3,0)

let  $null_line                   =  'NULL LINE'
let  $half_line                   =  'HALF LINE'
let  $complete_line               =  'COMPLETE LINE'

let  #remarks_while_counter       =  0
let  #remarks_on_page_counter     =  0
let  $remark_line_to_print        =  ''
let  $page_number_to_print        =  ''
let  #page_number     =  1   
let  $page_number     =  '' 
let  $previous_print_line_status  =  $null_line

while  #remarks_while_counter  <=  #remarks_array_counter

    if  #remarks_on_page_counter  >  4
        ALTER-PRINTER
          POINT-SIZE=7
                            let #page_number = #page_number + 1
                                     move #page_number to $page_number
                                     unstring $page_number by '.' into $page_number1 $junkvalue
                                    
                                     let  $page_number_to_print = 'REMARKS CONTINUED ON PAGE ' || $page_number1
                                     print $page_number_to_print  (+2,32,0)     BOLD
                                 
        NEW-PAGE
        do  Print-SF50-Page-One-Layout
        do  Print-SF50-Page-One-Data-Without-Remarks
        ! GRAPHIC () FONT 5 9
          print  'REMARKS CONTINUED:'                                (56,32,0)

       ALTER-PRINTER
          POINT-SIZE=7.5
        let  #remarks_on_page_counter    =  1
    end-if

    get  $gvt_remark_line  from  remarks (#remarks_while_counter)  remarks_line

    evaluate  $previous_print_line_status

        when  =  $half_line

            if  $gvt_remark_line  =  $new_remark_marker
                let  $previous_print_line_status  =  $null_line
            else
                let  $print_line_flag             =  'Y'
                let  $remark_line_to_print        =  $remark_line_to_print  ||  ' '  ||
                                                     $gvt_remark_line
                let  $previous_print_line_status  =  $complete_line
            end-if

            let  $print_line_flag   =  'Y'
            break

        when  =  $null_line
        when  =  $complete_line

            if  $gvt_remark_line                  =  $new_remark_marker
                let  $remark_line_to_print        =  ''
                let  $previous_print_line_status  =  $null_line
            else
                if  $previous_print_line_status  =  $null_line
                    let  $remark_line_to_print        =  '- '  ||  $gvt_remark_line
                else
                    let  $remark_line_to_print        =  '  '  ||  $gvt_remark_line
                end-if
                let  $previous_print_line_status  =  $half_line
            end-if

            let  $print_line_flag       =  'N'
            break

    end-evaluate

    if  $print_line_flag  =  'Y'
        ALTER-PRINTER
          POINT-SIZE=7.5
        print  $remark_line_to_print                               (+1,5,0)
        let  #remarks_on_page_counter  =  #remarks_on_page_counter  +  1
    end-if

    let  #remarks_while_counter        =  #remarks_while_counter    +  1

end-while

if  $previous_print_line_status  =  $half_line
    ALTER-PRINTER
          POINT-SIZE=7.5
    print  $remark_line_to_print                               (+1,5,0)
end-if

End-Procedure


!***********************************************************************
!                                                                      *
!  Function:     Print-SF50-Page-One-Data-Without-Remarks              *
!                                                                      *
!  Description:                                                        *
!                                                                      *
!***********************************************************************
Begin-Procedure Print-SF50-Page-One-Data-Without-Remarks

ALTER-PRINTER
POINT-SIZE=7.5

print  ' '                                                         (8,1,0)

do  Print-SF50-52-Common-Data

ALTER-PRINTER
POINT-SIZE=10

print  'PAR Number:'                                               (+2,95,0)
print  $gvt_par_nbr                                                (0,109,0)

print  $sf50_field46a                                              (68,6,0)
print  $sf50_field46b                                              (69,6,0)

let  $sf50_field47 = rtrim ($sf50_field47a, ' ')  ||
                     rtrim ($sf50_field47b, ' ')
print  $sf50_field47                                               (72,6,0)
print  $sf50_field48                                               (0,28,0)

if  $sf50_field49 <> ''
    do Format-DateTime($sf50_field49, $out, {DEFMDY},'','')
    print  $out                                                    (0,50,0)
end-if

print  $sf50_field50a                                              (68,66,0)
print  $sf50_field50b                                              (69,66,0)

End-Procedure


#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#include 'fgsfcomm.sqc'  !Common layout of SF 50 and SF 52
#Include 'fgsf52.sqc'    !Layout of SF 50
#Include 'fgsf50.sqc'    !Layout of SF 52
#Include 'fgparcm.sqc'   !Print SF50/52 Common Data
#Include 'fgprtwrp.sqc'  !Wrap text data
#Include 'datemath.sqc'  !Date and Time math routines
#Include 'datetime.sqc'  !Date and Time formatting

