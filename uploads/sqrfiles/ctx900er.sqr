!***********************************************************************
! CTX900ER: Edit Personal Data prior to annual reporting.
!                   Report all employee entries with duplicate SINs.
!                   Report all employee entries with duplicate wage loss plans.
!***********************************************************************
!***********************************************************************
!
!
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2012, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2012/07/18:12:21:17                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  872684                                              !
!
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization
#include 'canrpt.sqc' !Get USA variables
#Include 'ctxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure


begin-report
  do Init-Report
#ifdef PRCSSCHD
  do StdAPI-Term
#end-if
end-report

begin-procedure Init-Report
  #ifdef PRCSSCHD
    do StdAPI-Init
  #end-if

  move 'CTX900ER' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $Ctx900er_Title_Dup_sin to $ReportTitle
  display $ReportTitle

  do Init-DateTime
  do Init-Number
  do Get-Calendar-Year-Id


  do Get-Can-Tax-Processing-Params  !TX.Balance_Year
  move &TX.Balance_Year to $Year 9999
  let $AsOfDate = $Year || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')
  do Get-Current-DateTime

  do Process-Main

end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from CTX900ER  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('CTX900ER', 'TITLE_DUP_SIN'   , $Ctx900er_Title_Dup_sin  , #dummy_width)
   do Get_Field_Information ('CTX900ER', 'EMP_HEAD'        , $Ctx900er_Emp_head       , #dummy_width)
   do Get_Field_Information ('CTX900ER', 'SIN'             , $Ctx900er_Sin            , #dummy_width)
   do Get_Field_Information ('CTX900ER', 'BUSINESS_UNIT'   , $Ctx900er_Business_unit  , #dummy_width)
   do Get_Field_Information ('CTX900ER', 'MESSAGE'         , $Ctx900er_Message        , #dummy_width)
   do Get_Field_Information ('CTX900ER', 'DUPL_SIN'        , $Ctx900er_Dupl_sin       , #dummy_width)
   do Get_Field_Information ('CTX900ER', 'EMPLID'          , $Ctx900er_Emplid         , #dummy_width)
   do Get_Field_Information ('CTX900ER', 'BUSINESS_UNIT2'  , $Ctx900er_Business_unit2 , #dummy_width)
   do Get_Field_Information ('CTX900ER', 'MSG_PART1'       , $Ctx900er_msg_part1      , #dummy_width)
   do Get_Field_Information ('CTX900ER', 'MSG_PART2'       , $Ctx900er_msg_part2      , #dummy_width)
   do Get_Field_Information ('CTX900ER', 'MSG_PART3'       , $Ctx900er_msg_part3      , #dummy_width)
   do Get_Field_Information ('CTX900ER', 'MSG_PART4'       , $Ctx900er_msg_part4      , #dummy_width)
   do Get_Field_Information ('CTX900ER', 'INCORRECT_SIN'   , $Ctx900er_Incorrect_sin  , #dummy_width)

end-procedure

begin-heading 6
  #Include 'stdhdgtr.sqc'
  print $Ctx900er_Emp_head                 (+2,1)
  print $Ctx900er_Sin                      (0,56)
  print $Ctx900er_Business_unit            (0,68)
  print $Ctx900er_Message                  (0,85)

end-heading

begin-procedure Process-Main

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

do Process-Duplicate-SIN-Edit
do Process-Multiple-Wage-Loss-Plan

end-procedure

begin-procedure Process-Duplicate-SIN-Edit

begin-SELECT
D1.NATIONAL_ID
D.NAME            &D.NAME
D.EMPLID          &D.EMPLID
J.BUSINESS_UNIT   &J.BUSINESS_UNIT

   let $D.EmplID        = RTRIM(&D.EmplID, ' ')
   let $D.Name          = RTRIM(&D.Name, ' ')
   let $J.Business_unit = RTRIM(&J.Business_unit, ' ')

   if &D1.National_id = $Prev-SIN

       print $Prev-EmplID                               (+2,1)
       print $Prev-Name                                 (0,13,35)
       print $Prev-SIN                                  (0,52) edit xxx-xxx-xxx
         print $Prev-BU                                           (0,68)
       print $Ctx900er_Dupl_sin                           (0,85)
       print $D.Name                                      (0,+1)  !,35)
       print $Ctx900er_Emplid                             (0,+2)
       print &D.EmplID                                  (0,+2)
    !    print $Ctx900er_Business_unit2                           (0,+2)
    !    print &D.BUSINESS_UNIT                                   (0,+1)
    else
       do Process-Invalid-SIN
   end-if



   move &D1.National_id to $Prev-SIN
   move $D.EmplID       to $Prev-EmplID
   move $D.Name         to $Prev-Name
   move $J.Business_unit to $Prev-BU


FROM  PS_PERSON_NAME D, PS_PERS_NID D1, PS_JOB J
WHERE D.EMPLID            = D1.EMPLID
  AND D1.COUNTRY          = {NID_COUNTRY}
  AND D1.NATIONAL_ID_TYPE = $PAYROLL_NID_TYPE
  AND D1.NATIONAL_ID      <> ' '
  AND J.EMPLID = D.EMPLID
  AND J.EMPL_RCD =
      (SELECT MIN(J1.EMPL_RCD)
       FROM   PS_JOB J1
       WHERE  J1.EMPLID    = J.EMPLID)
  AND J.EFFDT  =
      (SELECT MAX(J2.EFFDT)
       FROM   PS_JOB J2
       WHERE  J2.EMPLID    = J.EMPLID
         AND  J2.EMPL_RCD  = J.EMPL_RCD
         AND  J2.EFFDT    <= $AsOfDate)
  AND J.EFFSEQ =
      (SELECT MAX(J3.EFFSEQ)
       FROM PS_JOB J3
       WHERE J3.EMPLID     = J.EMPLID
         AND J3.EMPL_RCD   = J.EMPL_RCD
         AND J3.EFFDT      = J.EFFDT)

ORDER BY D1.NATIONAL_ID ASC

end-SELECT

end-procedure

begin-procedure Process-Multiple-Wage-Loss-Plan

begin-SELECT
C.COMPANY
PD1.NATIONAL_ID
PD.NAME
JD.BUSINESS_UNIT
C.EMPLID
C.PROVINCE
C.WAGE_LOSS_PLAN

  if &C.EmplID <> $priorEmplID
    move &C.EmplID                     to  $PriorEmplID
    move &PD.Name                      to  $PriorName
    move &PD1.NATIONAL_ID              to  $PriorSIN
    move &JD.BUSINESS_UNIT             to  $Priorbu
    move &C.Wage_Loss_Plan             to  $PriorWage_Loss_Plan
    let  $PriorProvince =  rtrim(&C.Province, ' ')
    move &C.Company                        to  $PriorCompany
 else
    if &C.Wage_Loss_Plan <> $PriorWage_Loss_plan
     if &C.EmplID <> $PrintedEmpl
        let $Company = &C.Company
        let $Province = rtrim(&C.Province, ' ')
        let $Wage_Loss_Plan = &C.Wage_Loss_Plan

        let $Messg = $Ctx900er_msg_part1 || $PriorCompany||$Ctx900er_msg_part2 ||$PriorProvince||$Ctx900er_msg_part3 ||$PriorWage_Loss_Plan||') '
        let $Messg2 = $Ctx900er_msg_part4 ||$Company||$Ctx900er_msg_part2 ||$Province||$Ctx900er_msg_part3 ||$Wage_Loss_Plan||') '

        print $PriorEmplID             (+2,1)
        print $PriorName               (0,13,35)
        print $PriorSIN                (0,52) edit xxx-xxx-xxx
          print $Priorbu                           (0,68)
        print $Messg                   (0,85)
        print $Messg2                  (+1,85)
        move &C.EmplID to $PrintedEmpl
      end-if
     else
        let $PriorProvince = rtrim(&C.Province, ' ')
    end-if
  end-if


FROM  PS_CAN_TAX_BALANCE C, PS_PERSON_NAME PD, PS_PERS_NID PD1, PS_JOB JD
WHERE C.EMPLID             = PD.EMPLID
  AND C.BALANCE_YEAR       = &TX.Balance_Year
  AND C.BALANCE_ID         = $Calendar_Year_Id
  AND PD.EMPLID            = PD1.EMPLID
  AND PD1.COUNTRY           = {NID_COUNTRY}
  AND PD1.NATIONAL_ID_TYPE = $PAYROLL_NID_TYPE
  AND C.BALANCE_PERIOD     =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_CAN_TAX_BALANCE
       WHERE  EMPLID        = C.EMPLID
         AND  COMPANY       = C.COMPANY
         AND  BALANCE_YEAR  = C.BALANCE_YEAR
         AND  BALANCE_ID    = C.BALANCE_ID
         AND  PROVINCE      = C.PROVINCE
         AND  WAGE_LOSS_PLAN = C.WAGE_LOSS_PLAN)
  AND JD.EMPLID = C.EMPLID
  AND JD.EMPL_RCD =
      (SELECT MIN(JD1.EMPL_RCD)
       FROM   PS_JOB JD1
       WHERE  JD1.EMPLID    = JD.EMPLID)
  AND JD.EFFDT  =
      (SELECT MAX(JD2.EFFDT)
       FROM   PS_JOB JD2
       WHERE  JD2.EMPLID    = JD.EMPLID
         AND  JD2.EMPL_RCD  = JD.EMPL_RCD
         AND  JD2.EFFDT    <= $AsOfDate)
  AND JD.EFFSEQ =
      (SELECT MAX(JD3.EFFSEQ)
       FROM PS_JOB JD3
       WHERE JD3.EMPLID     = JD.EMPLID
         AND JD3.EMPL_RCD   = JD.EMPL_RCD
         AND JD3.EFFDT      = JD.EFFDT)


ORDER BY C.COMPANY ASC ,C.EMPLID ASC
end-SELECT

end-procedure

begin-procedure Process-Invalid-SIN

  let $SIN1 = substr(&D1.NATIONAL_ID,1,1)
  move $SIN1           to #SIN1
  move &D1.National_id to $SIN
  
  if #SIN1 = 0 or #SIN1 = 8
     print $D.EmplID                                  (+2,1)
     print $D.Name                                    (0,13,35)
     print $SIN                                       (0,52) edit xxx-xxx-xxx
     print $J.Business_unit                           (0,68)
     print $Ctx900er_Incorrect_sin                    (0,85)
     print $D.Name                                    (0,+1)  !,35)
     print $Ctx900er_Emplid                           (0,+2)
     print &D.EmplID                                  (0,+2)
  end-if

end-procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id

#ifdef PRCSSCHD
  #Include 'stdapi.sqc'    !Update Process API
#end-if

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

