
!***********************************************************************
!               CONFIDENTIALITY INFORMATION:                           *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:03:48:14                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
! Commented out call to delete Run Control
!**********************************************************************

#include 'setenv.sqc'        ! SET ENVIRONMENT
#include 'setup02.sqc'       ! PRINTER AND PAGE-SIZE INITIALIZATION

!***********************************************************************
BEGIN-REPORT
!***********************************************************************
  DO INIT-REPORT
  DO OPEN-FILE
  DO PROCESS-MAIN
  DO RESET
  DO CLOSE-FILE
!  DO DELETE-RUN-CONTROL
  DO STDAPI-TERM
END-REPORT

BEGIN-PROCEDURE INIT-REPORT

  MOVE 'FGPY016' TO $REPORTID
  MOVE 'Biweekly/Quarterly Errors Report from SSA' TO $REPORTTITLE
  DO STDAPI-INIT

  DO SELECT-PARAMETERS
END-PROCEDURE INIT-REPORT

!***********************************************************************
BEGIN-HEADING 6
!***********************************************************************
 #include 'stdhdg01.sqc'

  PRINT 'EMPLOYEE NAME'        (+2,1)
  PRINT 'SSN'                  (0,33)
  PRINT 'EMPLOYER NAME'        (0,45)
  PRINT 'FEIN'                 (0,88)
  PRINT 'SSN CORRECTION'       (0,101)

END-HEADING

!***********************************************************************
begin-procedure OPEN-FILE
!***********************************************************************
 let $FileName1 = '{IMPORTPREFIX}' || $FileName

 Open $FileName1 As 1 For-Reading
                      Record=831:Vary

 If #FileStatus = -1
     display ' Cannot Open File'
     stop quiet
  End-If

end-procedure OPEN-FILE

!***********************************************************************
begin-procedure CLOSE-FILE
!***********************************************************************
 close 1

  Print 'Num Of Records Received from file: '    (+3,10)
  Print #RcdsRec                                 (0,50)    edit BBBBBBBBBB9

  Print 'Num Of Records Read from file: '        (+1,10)
  add 1 to #NumOfRecords
  Print #NumOfRecords                            (0,50)    edit BBBBBBBBBB9

  Print 'Num Of Records Rejected from file: '    (+1,10)
  Print #RcdsRej                                 (0,50)    edit BBBBBBBBBB9

  Print 'Num Of Records Returned from file: '    (+1,10)
  Print #RcdsReturned                            (0,50)    edit BBBBBBBBBB9

  Print 'Num Of Records Posted from file: '      (+1,10)
  Print #RcdsPosted                              (0,50)    edit BBBBBBBBBB9

  display 'Num Of Records Read: ' noline
  display #NumOfRecords

  display  ' '
   if #NumOfRecords > 0
     Let $Message = 'File '
     concat  $FileName1 with $Message
     concat  ' was read' with $Message
     Print $Message                (+2,10)
     display $Message
  else
     Let $Message = 'File '
     concat  $FileName1 with $Message
     concat  ' is empty' with $Message
     display $Message
   END-IF

end-procedure CLOSE-FILE

!*************************************************************************************
BEGIN-PROCEDURE PROCESS-MAIN
!*************************************************************************************
While 1

    read 1 into $SSAErrors:831

    if #END-FILE
        break
    end-if

  let $RecordId = substr($SSAErrors,1,2)
  Evaluate $RecordId
  WHEN = 'H4'
    let $ReportType = 'Biweekly'
    DO Parse-Heading
    let $Parsed = 'Y'
    Break
  WHEN = 'HQ'
    let $ReportType = 'Biweekly'
    DO Parse-Heading
    let $Parsed = 'Y'
    Break
  WHEN = 'W4'
    DO Parse-Detail
    let $Parsed = 'Y'
    Break
  When = 'QW'
    DO Parse-Detail
    let $Parsed = 'Y'
    Break
  When-Other
    let $Parsed = 'N'
  End-Evaluate

  If $Parsed = 'Y'
      add 1 to #NumOfRecords
      DO Report-SSA-Errors
  End-if

End-While

END-PROCEDURE PROCESS-MAIN

!***********************************************************************
BEGIN-PROCEDURE Parse-Heading
!***********************************************************************
let $BatchNbr = substr($SSAErrors,27,6)
do Format-Number(#BatchNbr, $BatchNbr, '099999')
let #RcdsRec  = substr($SSAErrors,33,11)
let #RcdsRej  = substr($SSAErrors,44,11)
let #RcdsReturned = substr($SSAErrors,55,11)
let #RcdsPosted = substr($SSAErrors,66,11)
let $ErrorCode1 = substr($SSAErrors,88,4)
let $ErrorCode2 = substr($SSAErrors,92,4)
let $ErrorCode3 = substr($SSAErrors,96,4)
let $ErrorCode4 = substr($SSAErrors,100,4)
let $ErrorCode5 = substr($SSAErrors,104,4)
let $EmpLName   = 'Header Record '

END-PROCEDURE Parse-Heading

!***********************************************************************
BEGIN-PROCEDURE Parse-Detail
!***********************************************************************
let $EmpSSN      = substr($SSAErrors,3,9)
let $EmpFName    = substr($SSAErrors,12,16)
let $EmpMName    = substr($SSAErrors,28,16)
let $EmpLName    = substr($SSAErrors,44,30)

If $RecordId = 'W4'
    let $FEIN        = substr($SSAErrors,290,9)
    let $EmprName    = substr($SSAErrors,311,45)
    let $ErrorCode1  = substr($SSAErrors,802,4)
    let $ErrorCode2  = substr($SSAErrors,806,4)
    let $ErrorCode3  = substr($SSAErrors,810,4)
    let $ErrorCode4  = substr($SSAErrors,814,4)
    let $ErrorCode5  = substr($SSAErrors,818,4)
    let $SSNVerify   = substr($SSAErrors,822,1)
    let $SSNCorr     = substr($SSAErrors,823,9)
End-if

If $RecordId = 'QW'
    let $FEIN        = substr($SSAErrors,90,9)
    let $EmprName    = substr($SSAErrors,111,45)
    let $ErrorCode1  = substr($SSAErrors,602,4)
    let $ErrorCode2  = substr($SSAErrors,606,4)
    let $ErrorCode3  = substr($SSAErrors,610,4)
    let $ErrorCode4  = substr($SSAErrors,614,4)
    let $ErrorCode5  = substr($SSAErrors,618,4)
    let $SSNVerify   = substr($SSAErrors,622,1)
    let $SSNCorr     = substr($SSAErrors,623,9)
End-if

END-PROCEDURE Parse-Detail

!***********************************************************************
begin-procedure Report-SSA-Errors
!***********************************************************************
If NOT ISNULL($ErrorCode1)
    DO PRINT-EMPL-EMPR-DATA
    let $ErrorCode = $ErrorCode1
    DO GET-SSA-ERROR-MESSAGES
    DO PRINT-ERROR-MESSAGES
End-if

If NOT ISNULL($ErrorCode2)
    let $ErrorCode = $ErrorCode2
    DO GET-SSA-ERROR-MESSAGES
    DO PRINT-ERROR-MESSAGES
End-if

If NOT ISNULL($ErrorCode3)
    let $ErrorCode = $ErrorCode3
    DO GET-SSA-ERROR-MESSAGES
    DO PRINT-ERROR-MESSAGES
End-if

If NOT ISNULL($ErrorCode4)
    let $ErrorCode = $ErrorCode4
    DO GET-SSA-ERROR-MESSAGES
    DO PRINT-ERROR-MESSAGES
End-if

If NOT ISNULL($ErrorCode5)
    let $ErrorCode = $ErrorCode5
    DO GET-SSA-ERROR-MESSAGES
    DO PRINT-ERROR-MESSAGES
End-if

END-PROCEDURE Report-SSA-Errors

!***********************************************************************
begin-procedure Print-Error-Messages
!***********************************************************************
PRINT 'Error Code/Message:  '      (+1,10)
PRINT $ErrorCode                   (0,30)
PRINT $ErrMsg                      (0,36)

END-PROCEDURE Print-Error-Messages

!***********************************************************************
begin-procedure Print-Empl-Empr-Data
!***********************************************************************
  let $EmpName = rtrim ($EmpLName, ' ')
  concat ', ' with $EmpName
  concat $EmpFName with $EmpName

  PRINT $EmpName                         (+2,1)
  PRINT $EmpSSN                          (0,33)
  PRINT $EmprName                        (0,45)
  PRINT $FEIN                            (0,88)
  PRINT $SSNCorr                         (0,101)

END-PROCEDURE Print-Empl-Empr-Data

!***********************************************************************
begin-procedure SELECT-PARAMETERS
!***********************************************************************
BEGIN-SELECT

NH_RUNCTL.OPRID
NH_RUNCTL.RUN_CNTL_ID
NH_RUNCTL.FILE_NAME

  let $Oprid       = &NH_RUNCTL.OPRID
  let $FileName    = &NH_RUNCTL.FILE_NAME
  let $RunCntl     = &NH_RUNCTL.RUN_CNTL_ID

from PS_GVT_NH_RUNCTL NH_RUNCTL

where NH_RUNCTL.OPRID = $prcs_oprid
  and NH_RUNCTL.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

end-procedure SELECT-PARAMETERS

!***********************************************************************
begin-procedure DELETE-RUN-CONTROL
!***********************************************************************
BEGIN-SQL
DELETE FROM PS_GVT_NH_RUNCTL
 WHERE OPRID = $Oprid AND
       RUN_CNTL_ID = $RunCntl
end-sql

end-procedure DELETE-RUN-CONTROL

#include 'askftd.sqc'       ! FROM THRU DATE INPUT
#include 'reset.sqc'        ! RESET PRINTER PROCEDURE
#include 'stdapi.sqc'       ! UPDATE PROCESS API
#include 'curdttim.sqc'     ! GET-CURRENT-DATETIME PROCEDURE
#include 'datetime.sqc'     ! ROUTINES FOR DATE AND TIME FORMATTING
#include 'number.sqc'       ! ROUTINES TO FORMAT NUMBERS
#include 'datemath.sqc'     ! ROUTINES FOR DATEMATH
#include 'rotname3.sqc'     ! GET FIRSTNAME AND LASTNAME
#Include 'getbalid.sqc'     ! GET-CALENDAR-YEAR-ID
#include 'fgovrpch.sqc'     ! Over Punch routine
#include 'fgpynh.sqc'       ! RETRIEVE ERROR MESSAGES
