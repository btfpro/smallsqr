!***********************************************************************
! BEN104:  Sample Carrier Interface (Using BN_SNAP_XXX Tables)         *
!          Disability (3X) Plans                                       *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                $Date:  2006/02/06:14:47:41                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      *
!***********************************************************************
!                                                                      *
! This is a SAMPLE carrier interface program for Disability plans.
! Several useful functions from BENCRFNC.SQC are illustrated.  It is
! expected that the user will use this program as a guide to develop
! custom interface programs for specific carriers.
!
! ----------------------------------------------------------------- dcd
!
! Output File Layout
! ------------------
!
!     Header Record
!               Record Code          X(1)    (H)eader
!               Run Date             X(8)    YYYYMMDD
!               As Of Date           X(8)    YYYYMMDD
!               Company              X(30)
!
!     Enrollment Records
!               Record Code          X(1)    (E)mployee
!               Coverage Elect       X(1)    (E)nrolled, (T)erminated
!               Emplid               X(11)
!               Benefit Record       9(2)
!               National Id          X(15)   SSN / SIN
!               Policy Number        X(10)
!               Benefit Plan         X(10)
!               Benefit Plan Descr   X(10)
!               Enroll Date          X(10)   Original Enrollment Date YYYYMMDD
!               Last Name            X(30)
!               First Name           X(25)
!               Address Line 1       X(30)
!               Address Line 2       X(30)
!               City                 X(30)
!               State                X(2)
!               Postal/Zip Code      X(12)
!               Country              X(3)
!               Sex                  X(1)    (M)ale, (F)emale
!               Birthdate            X(8)    YYYYMMDD
!               Covered Salary       9(8)    ! Covered Salary (Adjusted to honor Max Monthly Benefit)
!               Premium Base         9(8)    ! Premium Basis  (Adjusted to honor "Use Salary Replacement")
!
!     Trailer Record
!               Record Code          X(1)    (T)railer
!               Record Count         9(8)
!               Company              X(30)

!**********************************************************************
!
! Modification History:
!       Initial Development: 10/31/2000   PeopleSoft, Inc.          dcd
!
!**********************************************************************

#Include 'setenv.sqc' !Set environment

! NOTE: The following global variables are used by the functions in BENCRFNC.SQC:
!       $SetId
!       $VendorId
!       $AsOfDate

!----------
Begin-Setup
!----------
  #Include 'ptpsp125.sqc'

  ! Common Cache Tables
  #Include 'bencrtbl.sqc'
End-Setup


BEGIN-PROGRAM
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do StdAPI-Term
END-PROGRAM

!********************************************
Begin-Procedure Init-Report
!********************************************

 Let #EnrollmentCount = 0
 Let #WriteCount = 0
 Let $Out_File = ' '

 Move 'SAMPLE_INTERFACE' to $ReportID
 Move 'Sample Disability Interface Extract' to $ReportTitle
 Display $ReportTitle
 Display ' '

 Do StdAPI-Init

 If $prcs_process_instance = ''
   Do Ask-Values
 Else
   Do Get-Values
 End-If

 Let $VendorId =  Upper($VendorId)

! Initialize Dates
 Move ' ' to $AsOfDate
 Let $LastRunDate_YMD = ' '

 Do Get-Snapshot-As-Of-Date($AsOfDate)

 Let $ThisSnapRunDate_YMD = ' '
 Let $PrevSnapRunDate_YMD = ' '
 Do Get-Snapshot-Run-Dates($ThisSnapRunDate_YMD, $PrevSnapRunDate_YMD)

 ! Truncate the Time from the "As Of" date
 Do Format-DateTime($AsOfDate, $DateOut, {DEFCMP},'','')
 Do Format-DateTime($DateOut, $AsOfDate, {DEFCMP},'','native')

 Move $AsOfToday  to  $RunDate

End-Procedure

!********************************************
Begin-Procedure Ask-Values
!********************************************

 Display '  '
 Let $SetId = ''
 While $SetId = ''
    Input $SetId 'Enter Vendor SetId > ' type=char
 End-While

 Display '  '
 Let $VendorId = ''
 While $VendorId = ''
    Input $VendorId 'Enter Vendor Id > ' type=char
 End-While

 Display '  '
 Let $PlanType = ''
 Input $PlanType 'Enter Plan Type (or <Return> to process all) > ' type=char

 Display ' '
 Display 'Processing...'

End-Procedure

!********************************************
begin-procedure Get-Values
!********************************************

   do Select-Parameters
   do Get-Provider
   do Get-Plan-Type

   Move $Provider  to  $VendorId
   Move $Plan_Type  to  $PlanType

end-procedure

!********************************************
Begin-Procedure Process-Main
!********************************************
 Do Load-Reporting-Cache
 Do Open-Output-File
 Do Write-Header-Record
 Do Process-Enrollments
 Do Write-Trailer-Record
 Do Update-Run-History($AsOfDate,'C',$SetId,$VendorId,$PlanType,$Outfile,#WriteCount)
 Do Commit-Transaction
 Do Display-Run-Details
 Close 90
End-Procedure

!********************************************
Begin-Procedure Process-Enrollments
!********************************************
! Note: The SELECT list below includes some fields that are specific
!       to certain plan types.  They are included for illustrative
!       purposes - as an aid for developing variations of this program
!       for plan types other than Health.
!

  If ($PlanType = '' Or $PlanType = ' ')
    Let $WhereString = ' > ''' || '00' || ''' '
  Else
    Let $WhereString = ' = ''' || $PlanType || ''' '
  End-if

Begin-SELECT
A.EMPLID
A.COBRA_EVENT_ID             ! Health, FSA
A.BENEFIT_RCD_NBR
A.DEPENDENT_BENEF            ! Blank for employee-level
A.PLAN_TYPE
A.COVERAGE_ELECT             ! (E)nroll, (T)erminate
A.BENEFIT_PLAN
A.COVRG_CD                   ! Health
A.COVERAGE_TYPE              ! Life/AD&D
A.BN_FORMULA_ID              ! Life/AD&D
A.ENROLLE_TYPE               ! Life/AD&D
A.SUM_DEP_COVG               ! Life/AD&D
A.COVERAGE_ELECT_DT
A.COVERAGE_BEGIN_DT
A.DEDUCTION_BEGIN_DT
A.ENROLLMENT_DT
A.GROUP_NBR
A.HLTH_PROVIDER_ID           ! Health
A.PREVIOUSLY_SEEN            ! Health
A.ANNUAL_PLEDGE              ! FSA
A.FLAT_DED_AMT               ! Savings
A.PCT_GROSS                  ! Savings
A.FLAT_DED_AMT_ATAX          ! Savings
A.PCT_GROSS_ATAX             ! Savings
A.VOLUNTARY_AMT              ! Pension
A.VOLUNTARY_PCT              ! Pension
A.VACN_HOURS                 ! Vacation Buy/Sell
A.VACN_BUY_FLAT_AMT          ! Vacation Buy/Sell
A.VACN_SELL_FLAT_AMT         ! Vacation Buy/Sell
A.BENEF_PCT                  ! Life/AD&D, Savings, Pension (Beneficiary)
A.FLAT_AMOUNT                ! Life/AD&D, Pension  (Beneficiary)
A.FACTOR_XSALARY             ! Life/AD&D
A.EXCESS                     ! Life/AD&D, Pension  (Beneficiary)
A.CONTINGENT                 ! Life/AD&D, Pension  (Beneficiary)
A.DED_CUR                    ! Last Deduction Taken - only if Include_Ded = "Y"
A.PAY_END_DT                 ! Last Deduction Taken - only if Include_Ded = "Y"
A.CALCULATED_BASE            ! Life/AD&D, Disability - only if Include_Calc = "Y"
A.PREMIUM_BASE               ! Life/AD&D, Disability - only if Include_Calc = "Y"
B.LAST_NAME
B.FIRST_NAME
B.NAME_PREFIX
B.NATIONAL_ID
B.RELATIONSHIP
B.ADDRESS1
B.ADDRESS2
B.CITY
B.STATE
B.POSTAL
B.COUNTRY
B.SEX
B.BIRTHDATE
B.SMOKER
J.BENEFIT_PROGRAM
J.COMPANY                    ! Employee's Primary Job
J.PAYGROUP                   ! Employee's Primary Job
J.EMPL_RCD                   ! Employee's Primary Job
J.SERVICE_DT                 ! Employee's Primary Job

  Add 1  to  #EnrollmentCount

  ! Get any Descriptions or other cached info that may be needed on the
  ! interface file.
  Do Lookup-Cached-Info


  ! Apply any code mappings that may be required
  Do Map-Codes

  ! Write the interface record
  If &A.COVERAGE_ELECT = 'T'
     Do Check-Term-Already-Sent
     If $TermAlreadySent = 'N'
        Do Write-Rec
     End-If
  Else
     Do Write-Rec
  End-If

FROM   PS_BN_SNAP_JOB J,
       PS_BN_SNAP_PER B,
       PS_BN_SNAP_PLAN A
WHERE J.EMPLID = A.EMPLID
  AND J.BENEFIT_RCD_NBR = A.BENEFIT_RCD_NBR
  AND J.COBRA_EVENT_ID = A.COBRA_EVENT_ID
  AND B.EMPLID = A.EMPLID
  AND B.DEPENDENT_BENEF = A.DEPENDENT_BENEF
  AND A.SETID     = $SetID
  AND A.VENDOR_ID = $VendorId
  AND A.COVERAGE_ELECT IN ('E','T')
  AND A.PLAN_TYPE [$WhereString]
ORDER BY A.EMPLID, A.COBRA_EVENT_ID, A.PLAN_TYPE, A.COVERAGE_ELECT, A.DEPENDENT_BENEF

END-SELECT

End-Procedure


!*********************************
Begin-Procedure Lookup-Cached-Info
!*********************************
! Be sure to comment out any of these that you don't need.

 Do Get-Covrg-Cd-Descr(&A.COVRG_CD, $CovrgCdDescr, $CovrgCdDescrShort)
 Do Get-Plan-Name(&A.PLAN_TYPE, &A.BENEFIT_PLAN, $PlanDescr, $PlanDescrShort)
 Do Get-Relationship-Descr(&B.RELATIONSHIP, $RelationDescr, $RelationDescrShort)
 Do Get-Vendor-Policy($SetId, $VendorId, &A.GROUP_NBR, $PolicyNbr)
 Do Get-Plan-Name(&A.PLAN_TYPE, &A.BENEFIT_PLAN, $PlanName, $PlanNameShort)

End-Procedure


!************************
Begin-Procedure Map-Codes
!************************
! Customize this procedure to do any mapping of PeopleSoft Codes
! to the vendor's code set. Be sure to use variable names ($xxx)
! instead of database buffer fields (&A.xxx) in the Write-Rec
! procedure for any codes that you map.


End-Procedure

!**************************************
Begin-Procedure Check-Term-Already-Sent
!**************************************
! Send Terminations only once. This looks at the Coverage_Elect_Dt
! to see if it was posted to the database since the previous
! snapshot was created, or if it has an Effective date or Coverage Begin date is greater
! than the "As Of" date from the previous interface created for this vendor.

 Let $TermAlreadySent = 'Y'

 Do Get-Last-Interface-Date($SetId, $Vendor_Id, &A.PLAN_TYPE, $LastAsOfDate_YMD)
 Move &A.COVERAGE_ELECT_DT  to  $Dt
 Do Format-Datetime($Dt, $ElectDt_YMD,{DEFCMP},'','')
 Move &A.COVERAGE_BEGIN_DT  to  $Dt
 Do Format-Datetime($Dt, $CvgBeginDt_YMD,{DEFCMP},'','')
 Move &A.DEDUCTION_BEGIN_DT  to  $Dt
 Do Format-Datetime($Dt, $DedBeginDt_YMD,{DEFCMP},'','')

 If ($ElectDt_YMD    >= $PrevSnapRunDate_YMD)  Or
    ($CvgBeginDt_YMD >= $LastAsOfDate_YMD) Or
    ($DedBeginDt_YMD >= $LastAsOfDate_YMD)
        Let $TermAlreadySent = 'N'
 End-If

End-Procedure

!********************************************
Begin-Procedure Write-Header-Record
!********************************************
! Define your header record layout (if any) here.
!
! Convert dates to desired date format...
  Do Format-DateTime($RunDate, $RunDate_YMD, {DEFCMP}, '', '')
  Do Format-DateTime($AsOfDate, $AsOfDate_YMD, {DEFCMP}, '', '')

  Let $RecordCode = 'H'                     ! Header Record
  Let $Company = 'PEOPLESOFT, INC'

  write 90 from
                $RecordCode:1
                $RunDate_YMD:8
                $AsOfDate_YMD:8
                $Company:30

End-Procedure

!********************************************
Begin-Procedure Write-Rec
!********************************************
! Define your provider-specific file layout here.
!
! Convert dates to desired date format...
  Do Format-DateTime(&A.ENROLLMENT_DT, $Enroll_Dt, {DEFCMP}, '', '')
  Do Format-DateTime(&B.BIRTHDATE, $Birthdate, {DEFCMP}, '', '')

! Convert numerics to desired format
  Move &A.BENEFIT_RCD_NBR  to  $BenefitRcdNbr 09
  Move &A.CALCULATED_BASE  to  $CalculatedBase 09999999
  Move &A.PREMIUM_BASE  to  $PremiumBase 09999999

! Set Record Code
  Move 'E'  to  $RecordCode              ! Employee Record


  Write 90 from
                $RecordCode:1
                &A.COVERAGE_ELECT:1
                &A.EMPLID:11
                $BenefitRcdNbr:2
                &B.NATIONAL_ID:15
                $PolicyNbr:10
                &A.BENEFIT_PLAN:6
                $PlanNameShort:10
                $Enroll_Dt:8
                &B.LAST_NAME:30
                &B.FIRST_NAME:25
                &B.ADDRESS1:30
                &B.ADDRESS2:30
                &B.CITY:30
                &B.STATE:2
                &B.POSTAL:12
                &B.COUNTRY:3
                &B.SEX:1
                $Birthdate:8
                $CalculatedBase:8
                $PremiumBase:8

   Add 1  to  #WriteCount

End-Procedure

!********************************************
Begin-Procedure Write-Trailer-Record
!********************************************
! Define your trailer record layout (if any) here.

  Let $RecordCode = 'T'                     ! Trailer Record
  Let $Company = 'PEOPLESOFT, INC'
  Let $RecordCount = Lpad(to_char(#WriteCount),8,'0')

  write 90 from
                $RecordCode:1
                $RecordCount:8
                $Company:30

End-Procedure

!*******************************
Begin-Procedure Open-Output-File
!*******************************
!Restrict filename to 8 chars, then prepare it according to OS...
 Let $OutFile = {PS-SUBSTR}($VendorId, 1, 8)
 Let $OutFile = Rtrim($OutFile, ' ')
 Let $OutFile = '{IMPORTPREFIX}' || $OutFile || '{IMPORTSUFFIX}'

 Open $OutFile as 90 for-writing record = 300

End-Procedure

!**********************************
Begin-Procedure Display-Run-Details
!**********************************

 Display ' '
 Display 'Run Details...'
 Display '                            SetId: ' noline
 Display $SetId
 Display '                         VendorId: ' noline
 Display $VendorId
 Display '                        Plan Type: ' noline
 If Rtrim($PlanType,' ') = ''
    Display '<all>'
 Else
    Display $PlanType
 End-If
 Display '                Snapshot Run Date: ' noline
 Do Convert-YMD-To-RPT($ThisSnapRunDate_YMD,$ThisSnapRunDate_RPT)
 Display $ThisSnapRunDate_RPT
 Display '          Prior Snapshot Run Date: ' noline
 Do Convert-YMD-To-RPT($PrevSnapRunDate_YMD,$PrevSnapRunDate_RPT)
 Display $PrevSnapRunDate_RPT
 Display '        Previous Extract Run Date: ' noline
 If Rtrim($LastRunDate_YMD,' ') = ''
    Display '<none found>'
 Else
    Do Convert-YMD-To-RPT($LastRunDate_YMD,$LastRunDate_RPT)
    Display $LastRunDate_RPT
 End-If
 Display '    Previous Extract "As of" Date: ' noline
 If Rtrim($LastAsOfDate_YMD,' ') = ''
    Display '<none found>'
 Else
    Do Convert-YMD-To-RPT($LastAsOfDate_YMD,$LastAsOfDate_RPT)
    Display $LastAsOfDate_RPT
 End-If
 Display '             Current "As of" Date: ' noline
 Display $AsOfDate
 Display '                        File Name: ' noline
 Display $OutFile

 Display '            Enrollments Processed: ' noline
 Display #EnrollmentCount 9,999,999
 Display '             File Records Written: ' noline
 Display #WriteCount 9,999,999

 Display ' '
 Display ' Run History Created... '
 Display '                         Run Date: ' noline
 Display $RunDate
 Display '                     "As of" Date: ' noline
 Display $AsOfDate

End-Procedure

!****************************************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines
#Include 'bencrfnc.sqc'  !Carrier Interface utilities
