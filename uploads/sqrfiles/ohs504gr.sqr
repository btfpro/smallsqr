!*****************************************************************
!  OHS504GR:  Anzeige des Unternehmers über eine Berufskrankheit *
!*****************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:15:48                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#define LANGUAGE_REPORT 'GER'
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

#include 'ohsrnctl.sqc'  !Get run control parameter values
#include 'ohs003gr.sqc'  !Gets common data for the reports OHS501GR.sqr and OHS504GR.sqr
#include 'ohsget.sqc'    !Get values mask routines

#include 'stdapi.sqc'    !Routines to update run status
#include 'readxlat.sqc'  !Read-Translate-Table procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'getlocnm.sqc'  !Get-Location-Name procedure
#include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure

#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getempad.sqc'  !Get-Employee-Address
#Include 'getempna.sqc'  !Get-Nationality
#include 'askftd.sqc'    ! From-Thru date

!-------------------------------------------------------
begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Clean-Table
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

!-------------------------------------------------------
begin-heading 4
 #Include 'stdhdg01.sqc'
end-heading

!-------------------------------------------------------
begin-procedure Init-Report
!-------------------------------------------------------
  Show 'Start: OHS504GR.sqr'
  move 'OHS504GR' to $ReportID
  move 'Berufskrankheit' to $ReportTitle
  display $ReportTitle

  do Stdapi-Init

  if $prcs_process_instance = ''
      do Ask-From-Thru-Date
  else
    do Select-Parameters
  end-if


end-procedure

!-------------------------------------------------------
begin-procedure Get-Values
!-------------------------------------------------------

  Move &RUN_CNTL_OHS.ACCIDENT_INS     to $BGName
  Move &RUN_CNTL_OHS.EMPLID           to $Emplid
  Move &RUN_CNTL_OHS.NON_EMPLOYEE_ID  to $NonEmplid
  Move &RUN_CNTL_OHS.ILLNESS_NBR_GER  to $ReportIllness
  Move &RUN_CNTL_OHS.PHONE            to $PhoneNumber

  if rtrim(&RUN_CNTL_OHS.NON_EMPLOYEE_ID,' ') = ''
     let $NonEmplid = ' '
  end-if

  if rtrim(&RUN_CNTL_OHS.EMPLID,' ') = ''
     let $Emplid = ' '
  end-if

  if rtrim($ReportIllness,' ') = ''
     let $ReportIllness = '%'
  end-if


end-procedure

!-------------------------------------------------------
! Clear out the temporary table
!-------------------------------------------------------
begin-procedure Clean-Table

begin-sql on-error=sql-error
DELETE from  PS_OHS004GER_TMP1
WHERE OPRID = $prcs_oprid
AND   RUN_CNTL_ID = $prcs_run_cntl_id
end-sql

begin-sql on-error=sql-error
DELETE from  PS_OHS004GER_TMP2
WHERE OPRID = $prcs_oprid
AND   RUN_CNTL_ID = $prcs_run_cntl_id
end-sql

end-procedure

!-------------------------------------------------------
! Main Procedure
!-------------------------------------------------------

begin-procedure Process-Main
  if rtrim($AsOfToday, ' ') <> ''
    do ConvertToComponents($AsOfToday,$D_yy,$D_mm,$D_dd)
    let $AsOfDate1 = $D_dd || '.' || $D_mm || '.' || $D_yy
  else
    let $AsOfDate1 = ' '
  end-if

    do Get-BG-Data
    let #cnt = 0
  do SearchSetID
  ! if $REG_SetID <> ''
      do Get-Illness-Data
  !end-if
   If #cnt > 0 
     Show '# of Rows added to PS_OHS004GER_TMP1 temp table: ' #cnt
     Show 'Please run the Crystal Report now'
   else
     Show ' No data was selected for this report '
   end-if
   
   Show 'End: OHS504GR.sqr'
end-procedure

!-------------------------------------------------------
!Get Illness Data
!-------------------------------------------------------
begin-procedure Get-Illness-Data
!display 'Procedure: Get Illness Data'
begin-SELECT

INJ.ILLNESS_NBR_GER
  move &INJ.ILLNESS_NBR_GER to $Inc_nbr
INJ.EMPLID
  move &INJ.EMPLID to $Emplid
INJ.EMPL_RCD
  move &INJ.EMPL_RCD to #Inj_Empl_Rcd_Nbr
INJ.NON_EMPLOYEE_ID
  move &INJ.NON_EMPLOYEE_ID to $NonEmplid
  if rtrim($Emplid,' ') <> ''
     Do Get-EE-Data
  else
     Do Get-non-ee-data
  end-if
INJ.INCIDENT_NBR
  let $Incident-Nbr = &INJ.INCIDENT_NBR
  do Get-SI_PROVIDER_GER
INJ.ILL_START_DT_GER
    do Format-DateTime(&INJ.ILL_START_DT_GER, $Illstart, {DEFDATE}, '', '')
INJ.PAY_UNTIL_DT_GER
  
  let $21Paycon = ' '
  if rtrim(&INJ.ILL_START_DT_GER, ' ') <> '' and rtrim(&INJ.PAY_UNTIL_DT_GER, ' ') <> ''
     do Convert-To-DTU-Date(&INJ.ILL_START_DT_GER, $date1)
     do Convert-To-DTU-Date(&INJ.PAY_UNTIL_DT_GER, $date2)
     do dtu-diff-days($date1, $date2, #diff_days)
     if #diff_days > 0
        let #sum_weeks = #diff_days / 7
        let #sum_weeks1   =ROUND(#sum_weeks,0)
        let $21Paycon = to_char(#sum_weeks1)
     end-if
  end-if
INJ.OWNR_PRTNR_SW_GER
   move ' ' to $17owner
   if &INJ.OWNR_PRTNR_SW_GER = 'Y'
      move 'X' to $17owner
   end-if
INJ.PARTNER_SW_GER
   move ' ' to $17partner
   if &INJ.PARTNER_SW_GER = 'Y'
      move 'X' to $17partner
   end-if
INJ.RELATION_SW_GER
   move ' ' to $17Relat
   if &INJ.RELATION_SW_GER = 'Y'
      move 'X' to $17Relat
   end-if
INJ.RELATIONSHIP
   move ' ' to $17Spouse
   if &INJ.RELATIONSHIP = 'SP'
      move 'X' to $17Spouse
   end-if
INJ.SYMPTOMS_GER
  move &INJ.SYMPTOMS_GER to $Symptoms
INJ.OCC_ILLNESS_CD
    move &INJ.OCC_ILLNESS_CD to $Diseasecode
INJ.JOB_DESCR_GER
    move &INJ.JOB_DESCR_GER to $Illjob
INJ.START_DT
    do Format-DateTime(&INJ.START_DT, $jobstart, {DEFDATE}, '', '')
INJ.END_DT
 do Format-DateTime(&INJ.END_DT, $Jobend, {DEFDATE}, '', '')
INJ.AUTOPSY_SW_GER
 if &INJ.AUTOPSY_SW_GER = 'Y'
    move 'Ja' to $Autopsynein
  else
    move 'Nein' to $Autopsynein
 end-if
INJ.PHYSICIAN_NAME
  move &INJ.PHYSICIAN_NAME to $Autopsyname
INJ.AUTOPSY_DT_GER
  do Format-DateTime(&INJ.AUTOPSY_DT_GER, $Autopsydate, {DEFDATE}, '', '')
INJ.AUTOPSY_RESULT_GER
   move &INJ.AUTOPSY_RESULT_GER to $Autopsyresult
INJ.WORK_RESP_GER
 move &INJ.WORK_RESP_GER to $Responsible
INJ.WORK_DANGERS_GER
  move &INJ.WORK_DANGERS_GER to $Workdangers
INJ.CHECKUP_RESULT_GER
 move &INJ.CHECKUP_RESULT_GER to $Checkup
INJ.PAT_RESIDENCE_GER
  move &INJ.PAT_RESIDENCE_GER to $Now
INJ.COMMENTS
  move &INJ.COMMENTS to $Comments
INJ1.DESCR50
  move &INJ1.DESCR50 to $25Descr

 do Get-Doctor-Data
 do Get-First-Doctor

 do Get-Correct-Action
 move $CorrectCd to $37BCode
 move $CorrectDescr to $37Descr

 do Write-Data


FROM PS_ILLNESS_GER INJ, PS_OCC_ILLNESS_TBL INJ1

where  INJ.EMPLID = $Emplid
AND INJ.NON_EMPLOYEE_ID = $NonEmplid
AND INJ.ILLNESS_NBR_GER like $ReportIllness
AND INJ.OCC_ILLNESS_CD = INJ1.OCC_ILLNESS_CD
AND INJ1.SETID = INJ.REG_REGION
AND INJ1.EFFDT IN (SELECT MAX(INJ2.EFFDT) FROM PS_OCC_ILLNESS_TBL INJ2
                   WHERE INJ2.SETID = INJ1.SETID
                   AND INJ2.OCC_ILLNESS_CD = INJ1.OCC_ILLNESS_CD
                   AND INJ2.EFFDT <= $Asoftoday)
end-SELECT
end-procedure



!-------------------------------------------------------
!Get Employee Data
!-------------------------------------------------------
begin-procedure Get-EE-Data

 Do Get-Emplid-data

 move $Full_Name to $5Name
 move $Street to $7Add1
 move $Postal to $7Zip
 move $City to $7City


  move $Sex      to $9Bsex
  move $SexDescr to $9Sex

  if rtrim($Birthdate, ' ') <> ''
    do ConvertToComponents($Birthdate,$B_yy,$B_mm,$B_dd)
    let $6Birth = $B_dd || '.' || $B_mm || '.' || $B_yy
  else
    let $6Birth = ' '
  end-if

  move $DtOfDeath1 to $Death
  move ' ' to $29Code
  if rtrim ($Death, ' ') = ''
     
  else
     Move '1' to $29Code
  end-if

  move $NatDescr to $10Nat

  do Get-Job-Related-Data

  
end-procedure

!-------------------------------------------------------
!Get Non-Employee Data
!-------------------------------------------------------
begin-procedure Get-Non-EE-Data

 do Get-Non-Empl-Data

 move $Name to $5Name
 move $Address to $7Add1
 move $Postal to $7Zip
 move $City to $7City

  move $SexNe to $9Bsex
  move $SexNeDescr to $9Sex

  if rtrim($Birthdate, ' ') <> ''
    do ConvertToComponents($Birthdate,$B_yy,$B_mm,$B_dd)
    let $6Birth = $B_dd || '.' || $B_mm || '.' || $B_yy
  else
    let $6Birth = ' '
  end-if

  move '2' to $24Code
  if rtrim ($NeDtOfDeath, ' ') = ''
     Move 'X' to $24Nein
  else
     Move 'X' to $24Death
     Move '1' to $24Code
  end-if

end-procedure

!-------------------------------------------------------
!Get Job Related Data
!-------------------------------------------------------
begin-procedure Get-Job-Related-Data
begin-SELECT
J.EMPLID
J.EMPL_RCD
  move &J.EMPL_RCD to $Emplrec
J.EFFDT
  move &J.EFFDT to $Job_Effdt
J.EFFSEQ
J.BUSINESS_UNIT
  LET $BU = RTRIM(&J.BUSINESS_UNIT,' ')
J.SETID_DEPT
  let $setID_Dept = &J.SETID_DEPT
J.DEPTID
  let $DeptID = rtrim (&J.DEPTID, '')
  if $DeptID <> ''
    ! Get Mitgliedsnummer
    do Get-Mit-Nbr-Data
    move $AccNum to $1Mit
  end-if
J.JOBCODE
J.SETID_JOBCODE
  let $JobCode = rtrim (&J.JOBCODE, '')
  if $JobCode <> ''
   let $SETID = &J.SETID_JOBCODE
    do Get-Job-Title
    move $JobTitle to $12Jobt
  end-if
J.LOCATION
  move &J.LOCATION to $Loc
  let $Location = rtrim (&J.LOCATION, '')
J.COMPANY
  do Get-Health-Ins-Data
  move $DescrIns to $18Siprov
  move $City to $18City
  move $postal to $18postal

  move &J.COMPANY to $Company
  do Get-Company-Data
J.EMPL_CTG
  let $15Cat = ' '
  if &J.EMPL_CTG = '16'
     move 'X' to $15Cat
  end-if
J.EMPL_CLASS
  let $Empl_Class = rtrim(&J.EMPL_CLASS, ' ')
  if $Empl_Class = 'T' or $Empl_Class = 'P'
     move 'X' to $Empl_Class
  end-if

FROM PS_JOB J
WHERE   J.EMPLID = $Emplid
AND     J.EMPL_RCD = #Inj_Empl_Rcd_Nbr
AND     J.EFFDT = (SELECT MAX(EFFDT)
                  FROM PS_JOB J1
                  WHERE J1.EMPLID = J.EMPLID
                  AND J1.EMPL_RCD = J.EMPL_RCD)
AND     J.EFFSEQ = (SELECT MAX(EFFSEQ)
                   FROM PS_JOB J12
                   WHERE J12.EMPLID = J.EMPLID
                   AND J12.EMPL_RCD = J.EMPL_RCD
                   AND J12.EFFDT = J.EFFDT)

end-SELECT
end-procedure

!-------------------------------------------------------
!Get Doctor Address
!-------------------------------------------------------
begin-procedure Get-Doctor-Data
begin-SELECT loops=1


ILA.POSTAL
  move &ILA.POSTAL to $27Zip

FROM PS_ILL_CARE_GER ILA

WHERE ILA.EMPLID = $Emplid
AND   ILA.EMPL_RCD = #Inj_Empl_Rcd_Nbr
AND   ILA.NON_EMPLOYEE_ID = $NonEmplid
AND   ILA.ILLNESS_NBR_GER = $Inc_Nbr
AND   ILA.CARE_TYPE = 'W'

end-SELECT
end-procedure

!-------------------------------------------------------
!Get 1st Doctor Address
!-------------------------------------------------------
begin-procedure Get-First-Doctor
begin-SELECT loops=1
ILL.FIRST_VISIT_DT_GER
 do Format-DateTime(&ILL.FIRST_VISIT_DT_GER, $26Date, {DEFDATE}, '', '')
ILL.CARE_TYPE


FROM PS_ILL_CARE_GER ILL

WHERE ILL.EMPLID = $Emplid
AND   ILL.EMPL_RCD = #Inj_Empl_Rcd_Nbr
AND   ILL.NON_EMPLOYEE_ID = $NonEmplid
AND   ILL.ILLNESS_NBR_GER = $Inc_Nbr
AND   ILL.CARE_TYPE = 'A'

end-SELECT
end-procedure

!-------------------------------------------------------
!Write Data to Temp Table
!-------------------------------------------------------
Begin-Procedure Write-Data
!display 'Procedure Write Data'
!********************************************
! Initialize the variables to a space
! This way if there is no data put in, the
! table insert statement will still work
!********************************************
 if $5Name <> ''  
   let #cnt = #cnt + 1
 end-if

If $1Mit = ''
 move ' ' to $1Mit
End-if

If $5Name = ''
 move ' ' to $5Name
End-if
If $6Birth = ''
 move ' ' to $6Birth
End-if
If $7Add1 = ''
 move ' ' to $7Add1
End-if
If $7City = ''
 move ' ' to $7City
End-if
If $7Zip = ''
 move ' ' to $7Zip
End-if
If $9Sex = ''
 move ' ' to $9Sex
End-if
If $10Nat = ''
 move ' ' to $10Nat
End-if
If $12Jobt = ''
 move ' ' to $12Jobt
End-if
If $15Cat = ''
 move ' ' to $15Cat
End-if
If $17Relat = ''
 move ' ' to $17Relat
End-if
If $17Owner = ''
 move ' ' to $17Owner
End-if
If $17Spouse = ''
 move ' ' to $17Spouse
End-if
If $17Partner = ''
 move ' ' to $17Partner
End-if
If $18SiProv = ''
 move ' ' to $18Siprov
End-if
If $18City = ''
 move ' ' to $18City
End-if
If $21Paycon = ''
 move ' ' to $21Paycon
End-if
If $27Zip = ''
 move ' ' to $27Zip
End-if
If $37Descr = ''
 move ' ' to $37Descr
End-if
If $Codescr = ''
 move ' ' to $Codescr
End-if
If $CoAdd1 = ''
 move ' ' to $Coadd1
End-if
If $Cozip = ''
 move ' ' to $Cozip
End-if
If $Cocity = ''
 move ' ' to $Cocity
End-if
If $BGDescr = ''
 move ' ' to $BGDescr
End-if
If $bgAdd1 = ''
 move ' ' to $bgadd1
End-if
If $bgzip = ''
 move ' ' to $bgzip
End-if
If $bgcity = ''
 move ' ' to $bgcity
End-if
If $9Bsex = ''
 move ' ' to $9Bsex
End-if
If $37Bcode = ''
 move ' ' to $37Bcode
End-if
If $Reportyear = ''
 move ' ' to $Reportyear
End-if
If $29Code = ''
 move ' ' to $29Code
End-if
If $Death = ''
 move ' ' to $Death
End-if
If $Autopsynein = ''
 move ' ' to $Autopsynein
End-if
If $symptoms = ''
 move ' ' to $symptoms
End-if
If $Responsible = ''
 move ' ' to $Responsible
End-if
If $25Descr = ''
 move ' ' to $25Descr
End-if
If $Illstart = ''
 move ' ' to $Illstart
End-if
If $Illjob = ''
 move ' ' to $Illjob
End-if
If $Jobstart = ''
 move ' ' to $Jobstart
End-if
If $Jobend = ''
 move ' ' to $Jobend
End-if
If $Checkup = ''
 move ' ' to $Checkup
End-if
If $Diseasecode = ''
 move ' ' to $Diseasecode
End-if
If $26Date = ''
 move ' ' to $26date
End-if
If $Now = ''
 move ' ' to $Now
End-if
If $Autopsyname = ''
 move ' ' to $Autopsyname
End-if
If $Autopsydate = ''
 move ' ' to $Autopsydate
End-if
If $Autopsyresult = ''
 move ' ' to $Autopsyresult
End-if
If $Workdangers = ''
 move ' ' to $workdangers
End-if
If $Comments = ''
 move ' ' to $Comments
End-if

IF $NonEmplid = ''
 move ' ' to $NonEmplid
end-if

IF $Emplid = ''
 move ' ' to $Emplid
end-if

if $PhoneNumber = ''
 move ' ' to $PhoneNumber
end-if

if $Empl_Class = ''
 move ' ' to $Empl_Class
end-if

if $18postal = ''
 move ' ' to $18postal
end-if

if $AsOfDate1 = ''
 move ' ' to $AsOfDate1
end-if

begin-sql on-error=sql-error

INSERT INTO PS_OHS004GER_TMP1
(OPRID,
RUN_CNTL_ID,
EMPLID,
NON_EMPLOYEE_ID,
SI_ACCIDENT_NUM,
NAME,
BIRTHDATE_GER,
ADDRESS1,
POSTAL,
CITY_FROM,
NATIONALITY,
DESCR2_GER,
EMPL_CAT2_GER,
RELATION_SW_GER,
OWNR_PRTNR_SW_GER,
PARTNER_SW_GER,
SPOUSE_GER,
DESCR2,
CITY_OTHER,
PAY_UNTIL_GER,
POSTAL_GER,
PHONE,
EMPL_CLASS,
DESCR100
)

VALUES
($prcs_oprid,
$prcs_run_cntl_id,
$Emplid,
$NonEmplid,
$1Mit,
$5Name,
$6Birth,
$7Add1,
$7Zip,
$7City,
$10Nat,
$AsOfDate1,
$15Cat,
$17Relat,
$17Owner,
$17Partner,
$17Spouse,
$18Siprov,
$18City,
$21Paycon,
$18postal,
$PhoneNumber,
$Empl_Class,
$37Descr
)

End-SQL


begin-sql on-error=sql-error

INSERT INTO PS_OHS004GER_TMP2
(OPRID,
RUN_CNTL_ID,
EMPLID,
NON_EMPLOYEE_ID,
DESCR,
ADDRESS2_OTHER,
POSTAL,
CITY,
DESCR1_GER,
ADDRESS3,
POSTAL_OTHER,
CITY_OTHER,
SEX,
SYMPTOMS_GER,
WORK_RESP_GER,
DESCR100,
JOB_DESCR_GER,
CHECKUP_RESULT_GER,
WORK_DANGERS_GER
)

VALUES
($prcs_oprid,
$prcs_run_cntl_id,
$Emplid,
$NonEmplid,
$Codescr,
$Coadd1,
$Cozip,
$Cocity,
$BGDescr,
$bgadd1,
$bgzip,
$bgcity,
$9Bsex,
$symptoms,
$Responsible,
$25Descr,
$Illjob,
$Checkup,
$Workdangers
)


End-SQL

End-Procedure


!***********************************************
!Format Times
!***********************************************
begin-procedure Format-Times ($timeIn, :$timeOut)

  extract $time-hour   from $timeIn 0 2
  extract $time-min    from $timeIn 3 2
  let #time-hour     = $time-hour

  let $timeOut   = $time-hour
  let $timeOut   = ltrim($timeOut, '0')
  if #time-hour < 10
    let $timeOut   = {ps-substr}($timeOut,1,1)
  else
    let $timeOut   = {ps-substr}($timeOut,1,2)
  end-if
  concat '.'        with $timeOut
  concat $time-min with $timeOut
  concat ' Uhr '     with $timeOut

end-procedure

!***********************************************
!Search SetID
!***********************************************
begin-procedure SearchSetID
let $REG_SetID = ''
Begin-select
JSET.REG_REGION
   let $REG_SetID = &JSET.REG_REGION
from PS_JOB JSET, PS_ILLNESS_GER ILLSET
where JSET.EMPLID = $emplid
and   JSET.EMPLID = ILLSET.EMPLID
and   JSET.EMPL_RCD = ILLSET.EMPL_RCD
and   JSET.EFFDT =
                    (select max(JSET2.EFFDT)
                     from  PS_JOB JSET2
                     where JSET2.EMPLID = JSET.EMPLID
                     and   JSET2.EMPL_RCD = JSET.EMPL_RCD
                     and   JSET2.EFFDT <= $Asoftoday)
and JSET.EFFSEQ =
                    (select max(JSET3.EFFSEQ)
                     from  PS_JOB JSET3
                     where JSET3.EMPLID = JSET.EMPLID
                     and   JSET3.EMPL_RCD = JSET.EMPL_RCD
                     and   JSET3.EFFDT = JSET.EFFDT)
end-select
end-procedure

