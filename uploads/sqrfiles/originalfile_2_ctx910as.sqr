!***********************************************************************
!  CTX910AS:  CANADA T4, T4A, RL-1, RL-2 Amended Audit Summary Report  *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2007 Oracle. All Rights Reserved.                    *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2007/01/17:11:12:57                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  654914                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment

#Include 'setup32.sqc'   !printer and page-size init
#Include 'ctxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#define TAXFORM_BOX
#define TAXFORM_NOTES
#include 'rellang.sqc'

begin-report
  do Init-Report
  do Process-Main
#ifdef PRCSSCHD
  do StdAPI-Term
#endif
end-report

begin-heading 3

 if $PrintAuditHdr = 'Y'

   #Include 'stdhdgtr.sqc'

   print $Ctx910as_Company             (3,1)
   print $Company_Prior                (0,19)
   print $Ctx910as_Slip                (+1,1)

   evaluate $TaxformID_Prior
      when = 'A'
         print $Ctx910as_T4a_suppl     (0,19)
         break
      when = 'R'
         print $Ctx910as_rv1_slip      (0,19)
         break
      when = 'T'
         print $Ctx910as_T4_suppl      (0,19)
         break
      when = 'V'
         print $Ctx910as_rv2_slip      (0,19)
         break
      when-other
         break
   end-evaluate

   print $CalYear           (3,,)    center

 else

   #Include 'stdhdg01.sqc'
   print $Ctx910as_Title2_Except_Rpt   (3,,) center

 end-if

end-heading


begin-procedure Init-Report

  date-time () hh:mi:ss &t1
  display &t1

  #ifdef PRCSSCHD
   do StdAPI-Init
  #endif

  use-PROCEDURE
     for-reports=(all)
     BEFORE-PAGE=Check-Hdr

  move 'CTX910AS' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  do Init-DateTime
  do Init-Number
  do Get-Calendar-Year-Id

  do Initialization

  date-time () hh:mi:ss &t2
  display &t2
end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from CTX910AS  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('CTX910AS', 'TITLE_RPT'       , $Ctx910as_Title_rpt       , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'TITLE_T4_RPT'    , $Ctx910as_Title_t4_rpt    , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'TITLE_T4A_RPT'   , $Ctx910as_Title_t4a_rpt   , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'TITLE_RV1_RPT'   , $Ctx910as_Title_rv1_rpt   , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'TITLE_RV2_RPT'   , $Ctx910as_Title_rv2_rpt   , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'COMPANY'         , $Ctx910as_Company         , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'SIN'             , $Ctx910as_Sin             , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'EMPLID'          , $Ctx910as_Emplid          , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'LOCATION'        , $Ctx910as_Location        , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'DEPARTMENT'      , $Ctx910as_Department      , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'T4_SUPPL'        , $Ctx910as_T4_suppl        , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'WAGELS_PLAN'     , $Ctx910as_Wagels_plan     , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'WAGELS_PLAN2'    , $Ctx910as_Wagels_plan2    , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'PROVINCE'        , $Ctx910as_Province        , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'PROVINCE2'       , $Ctx910as_Province2       , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'BUS_NUMBER'      , $Ctx910as_Bus_number      , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'CPPQPP_EXEMP'    , $Ctx910as_Cppqpp_exemp    , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'EI_EXEMP'        , $Ctx910as_Ei_exemp        , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'T4A_SUPPL'       , $Ctx910as_T4a_suppl       , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'T4A_FOOTNOTE'    , $Ctx910as_T4a_footnote    , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'RV1_SLIP'        , $Ctx910as_Rv1_slip        , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'QIN_NUMBER'      , $Ctx910as_Qin_number      , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'RV2_SLIP'        , $Ctx910as_Rv2_slip        , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'RV1_FOOTNOTE'    , $Ctx910as_Rv1_footnote    , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'RV2_FOOTNOTE'    , $Ctx910as_Rv2_footnote    , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'BOX#'            , $Ctx910as_Box#            , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'DESCR'           , $Ctx910as_Descr           , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'AMOUNT'          , $Ctx910as_Amount          , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'PRIORITY'        , $Ctx910as_Priority        , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'FOOTNOTE'        , $Ctx910as_Footnote        , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'BX38_CODE'       , $Ctx910as_Bx38_code       , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'FOOTNOTE_MSG'    , $Ctx910as_Footnote_msg    , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'LOC_CODE'        , $Ctx910as_Loc_code        , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'DEPT'            , $Ctx910as_Dept            , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'QIN'             , $Ctx910as_Qin             , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'RCA'             , $Ctx910as_Rca             , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'FN_CODE'         , $Ctx910as_Fn_code         , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'EMPL_CODE'       , $Ctx910as_Empl_Code       , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'SLIP_PROCESS'    , $Ctx910as_Slip_Process    , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'SEQUENCE_NUM'    , $Ctx910as_Num             , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'COMMENTS'        , $Ctx910as_Comments        , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'SLIP'            , $Ctx910as_Slip            , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'COMP_TOTALS'     , $Ctx910as_Comp_Totals     , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'PROVINCE_TOTALS' , $Ctx910as_Province_Totals , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'WLP_TOTALS'      , $Ctx910as_WLP_Totals      , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'EMPLOYEE_TOTALS' , $Ctx910as_Employee_Totals , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'SLIP_AMENDED'    , $Ctx910as_Slip_Amended    , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'SLIP_CANCELLED'  , $Ctx910as_Slip_Cancelled  , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'SLIP_ORIGINAL'   , $Ctx910as_Slip_Original   , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'SLIP_REISSUED'   , $Ctx910as_Slip_Reissued   , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'EMPLOYEE_COUNT'  , $Ctx910as_Employee_Count  , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'T4A_TOTALS'      , $Ctx910as_T4A_Totals      , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'T4_TOTALS'       , $Ctx910as_T4_Totals       , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'RV1_TOTALS'      , $Ctx910as_Rv1_Totals      , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'RV2_TOTALS'      , $Ctx910as_Rv2_Totals      , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'T4A_FT_TOTALS'   , $Ctx910as_T4A_ft_totals   , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'RV1_FT_TOTALS'   , $Ctx910as_Rv1_ft_totals   , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'RV2_FT_TOTALS'   , $Ctx910as_Rv2_ft_totals   , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'NORV1_FT_TOTALS' , $Ctx910as_NoRV1_Ft_Totals , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'NORV2_FT_TOTALS' , $Ctx910as_NoRV2_Ft_Totals , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'NOT4A_FT_TOTALS' , $Ctx910as_NoT4A_Ft_Totals , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'NO'              , $Ctx910as_No              , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'PERIOD'          , $Ctx910as_Period          , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'SEE'             , $Ctx910as_See             , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'COMMA'           , $Ctx910as_Comma           , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'TITLE_EXCEPT_RPT', $Ctx910as_Title_Except_Rpt, #dummy_width)
   do Get_Field_Information ('CTX910AS', 'TITLE2_EXCEPT_RPT', $Ctx910as_Title2_Except_Rpt, #dummy_width)
   do Get_Field_Information ('CTX910AS', 'COMPANY_EXCEPT'  , $Ctx910as_Company_Except  , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'TAXFORM_ID_EXCEPT',$Ctx910as_TaxformID_Except, #dummy_width)
   do Get_Field_Information ('CTX910AS', 'EMPLID_EXCEPT'   , $Ctx910as_Emplid_Except   , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'NAME_EXCEPT'     , $Ctx910as_Name_Except     , #dummy_width)
   do Get_Field_Information ('CTX910AS', 'PPIP_EXPMPT'     , $Ctx910as_PPIP_Exempt     , #dummy_width)


end-procedure

begin-procedure Initialization

  move ' ' to $InitForm
  move ' ' to $InitBox
  move ' ' to $InitText
  move 0 to #InitAmt
  move 'Y' to $FirstRecord

  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

  move $910Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear
  do Get-Can-Tax-Processing-Params

  move &TX.Balance_Year to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

  if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
    display ''
    display 'Current Year is not one greater than Tax Reporting Year.'
    display 'Current Year is    ' noline
    display  #saveAsOfYear  9999
    display 'Tax Reporting Year ' noline
    display &TX.Balance_Year
    input $Answer maxlen=1 'Calendar Year is not one greater than Tax Reporting Year - Do you want to continue? (Y/N)'
    uppercase $Answer
    if $Answer <> 'Y'
      stop
    end-if
  end-if
  do Array-Create
  do Load-Box-Arrays
  do Get-Tax-Tbl-Info

   if $PRCS_Process_Instance <> ''
#ifdef PRCSSCHD
           do Select-Canadian-YrEnd-Parameters
           do Convert-Parameters
#endif
   end-if

  evaluate $RptForm
    when = 'TARV'
      move $Ctx910as_Title_rpt     to $ReportTitle
      break
    when = 'T'
      move $Ctx910as_Title_t4_rpt  to $ReportTitle
      break
    when = 'A'
      move $Ctx910as_Title_t4a_rpt to $ReportTitle
      break
    when = 'R'
      move $Ctx910as_Title_rv1_rpt to $ReportTitle
      break
    when = 'V'
      move $Ctx910as_Title_rv2_rpt to $ReportTitle
      break
    when-other
      break
  end-evaluate

  display ''
  display $ReportTitle

end-procedure


begin-procedure Array-Create

  create-array name=PrT4_Area size=53 -
    field=PT4_Box:char                -
    field=PT4_Descr:char              -
    field=PT4_Amt:number

  create-array name=PrT4A_Area size=20 -
    field=PT4A_Box:char                -
    field=PT4A_Descr:char              -
    field=PT4A_Amt:number

  create-array name=PrRV1_Area size=27 -
    field=PRV1_Box:char                -
    field=PRV1_Descr:char              -
    field=PRV1_Amt:number

  create-array name=PrRV2_Area size=25 -
    field=PRV2_Box:char                -
    field=PRV2_Descr:char              -
    field=PRV2_Amt:number

  create-array name=T4A_Footnotes size=50   -
    field=AFN_Box:char                      -
    field=AFN_Box_Text:char                 -
    field=AFN_Slip_Text:char                -
    field=AFN_Priority:number               -
    field=AFN_Code:char                     -
    field=AFN_Amt:number

  create-array name=RV1_Footnotes size=200   -
    field=RFN_Box:char                       -
    field=RFN_Box_Text:char                  -
    field=RFN_Slip_Text:char                 -
    field=RFN_Priority:number                -
    field=RFN_Amt:number

  create-array name=RV2_Footnotes size=50   -
    field=VFN_Box:char                      -
    field=VFN_Box_Text:char                 -
    field=VFN_Slip_Text:char                -
    field=VFN_Priority:number               -
    field=VFN_Amt:number

  create-array name=L1_Totals size=300      -
    field=L1_Form:char                      -
    field=L1_BoxNum:char                    -
    field=L1_BoxAmt:number

  create-array name=L2_Totals size=300      -
    field=L2_Form:char                      -
    field=L2_BoxNum:char                    -
    field=L2_BoxAmt:number

  create-array name=L3_Totals size=300      -
    field=L3_Form:char                      -
    field=L3_BoxNum:char                    -
    field=L3_BoxAmt:number

  create-array name=SumT4_Area size=50      -
    field=ST4_Box:char                      -
    field=ST4_Descr:char                    -
    field=ST4_Amt:number

  create-array name=SumT4A_Area size=20     -
    field=ST4A_Box:char                     -
    field=ST4A_Descr:char                   -
    field=ST4A_Amt:number

  create-array name=SumRV1_Area size=25     -
    field=SRV1_Box:char                     -
    field=SRV1_Descr:char                   -
    field=SRV1_Amt:number

  create-array name=SumRV2_Area size=25     -
    field=SRV2_Box:char                     -
    field=SRV2_Descr:char                   -
    field=SRV2_Amt:number

  create-array name=SumT4A_Footnotes size=50  -
    field=SAFN_Box:char                       -
    field=SAFN_Box_Text:char                  -
    field=SAFN_Slip_Text:char                 -
    field=SAFN_Priority:number                -
    field=SAFN_Code:char                      -
    field=SAFN_Amt:number

  create-array name=SumRV1_Footnotes size=200 -
    field=SRFN_Box:char                       -
    field=SRFN_Box_Text:char                  -
    field=SRFN_Slip_Text:char                 -
    field=SRFN_Priority:number                -
    field=SRFN_Amt:number

  create-array name=SumRV2_Footnotes size=50  -
    field=SVFN_Box:char                       -
    field=SVFN_Box_Text:char                  -
    field=SVFN_Slip_Text:char                 -
    field=SVFN_Priority:number                -
    field=SVFN_Amt:number


end-procedure

begin-procedure Load-Box-Arrays

   move ' ' to $Spacer
   move 0 to #Zero
   move 0 to #i
   move 0 to #j
   move 0 to #k
   move 0 to #l
   move 0 to #fi
   move 0 to #fj
   move 0 to #fk
   move 0 to #fl

   display 'as of date is ' noline
   display $Asofdate

begin-SELECT
M.TAXFORM_ID
M.BOX
M.DESCRSHORT
M.EFFDT

   let $M.BOX = RTRIM(&M.BOX, ' ')
   let $TAXFORM_BOX-DESCRSHORT = &M.DESCRSHORT

   do Get_Related_TAXFORM_BOX(&M.BOX,&M.EFFDT,&M.TAXFORM_ID)

   EXTRACT $FN from &M.Box 2 1

   if &M.Taxform_ID = 'T'
      do Load-T4-Boxes
   end-if

   if &M.Taxform_ID = 'A'
      do Load-T4A-Boxes
   end-if

   if &M.Taxform_ID = 'R'
      do Load-RV1-Boxes
   end-if

   if &M.Taxform_ID = 'V'
      do Load-RV2-Boxes
   end-if

FROM PS_TAXFORM_BOX M
WHERE  EFFDT = (SELECT MAX(EFFDT)
                FROM PS_TAXFORM_BOX
                WHERE TAXFORM_ID = M.TAXFORM_ID
                  AND EFFDT <= $AsOfDate)
ORDER BY M.TAXFORM_ID ASC, M.BOX ASC
end-SELECT

end-procedure

begin-procedure Load-T4-Boxes

   if $FN = '' or $FN = ' '
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into PrT4_Area(#i)
         PT4_Box PT4_Descr PT4_Amt
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into SumT4_Area(#i)
         ST4_Box ST4_Descr ST4_Amt
       add 1 to #i
       move #i to #max_T4boxes

   end-if

end-procedure

begin-procedure Load-T4A-Boxes

   if $FN = '' or $FN = ' '
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into PrT4A_Area(#j)
         PT4A_Box PT4A_Descr PT4A_Amt
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into SumT4A_Area(#j)
         ST4A_Box ST4A_Descr ST4A_Amt
       add 1 to #j
       move #j to #max_T4Aboxes
   else
      move 'A' to $FN_TaxformID
      do Get-Footnote-Data
      put &M.Box $BoxText $Spacer #BoxPriority $BoxNoteCd #Zero
                       into T4A_Footnotes(#fj)
          AFN_Box AFN_Box_Text AFN_Slip_Text AFN_Priority AFN_Code AFN_Amt
      put &M.Box $BoxText $Spacer #BoxPriority $BoxNoteCd #Zero
                       into SumT4A_Footnotes(#fj)
          SAFN_Box SAFN_Box_Text SAFN_Slip_Text SAFN_Priority SAFN_Code SAFN_Amt
      add 1 to #fj
      move #fj to #max_T4Afootnotes
   end-if

end-procedure

begin-procedure Load-RV1-Boxes

   if $FN = '' or $FN = ' ' or $M.BOX = 'CDO'
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into PrRV1_Area(#k)
         PRV1_Box PRV1_Descr PRV1_Amt
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into SumRV1_Area(#k)
         SRV1_Box SRV1_Descr SRV1_Amt
       add 1 to #k
       move #k to #max_RV1boxes
   else
      move 'R' to $FN_TaxformID
      do Get-Footnote-Data
      put &M.Box $BoxText $Spacer #BoxPriority #Zero
                       into RV1_Footnotes(#fk)
          RFN_Box RFN_Box_Text RFN_Slip_Text RFN_Priority RFN_Amt
      put &M.Box $BoxText $Spacer #BoxPriority #Zero
                       into SumRV1_Footnotes(#fk)
          SRFN_Box SRFN_Box_Text SRFN_Slip_Text SRFN_Priority SRFN_Amt
      add 1 to #fk
      move #fk to #max_RV1footnotes
   end-if

   let $M.BOX = ' '

end-procedure

begin-procedure Load-RV2-Boxes

   if $FN = '' or $FN = ' '
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into PrRV2_Area(#l)
         PRV2_Box PRV2_Descr PRV2_Amt
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into SumRV2_Area(#l)
         SRV2_Box SRV2_Descr SRV2_Amt
       add 1 to #l
       move #l to #max_RV2boxes
   else
      move 'V' to $FN_TaxformID
      do Get-Footnote-Data
      put &M.Box $BoxText $Spacer #BoxPriority #Zero
                       into RV2_Footnotes(#fl)
          VFN_Box VFN_Box_Text VFN_Slip_Text VFN_Priority VFN_Amt
      put &M.Box $BoxText $Spacer #BoxPriority #Zero
                       into SumRV2_Footnotes(#fl)
          SVFN_Box SVFN_Box_Text SVFN_Slip_Text SVFN_Priority SVFN_Amt
      add 1 to #fl
      move #fl to #max_RV2footnotes
   end-if

end-procedure

begin-procedure Get-Footnote-Data

! let $BoxNZ = rtrim(&M.Box, ' ')
! let $BoxWZ = $BoxNZ || ' '

begin-SELECT
BX.BOX_NOTE_TEXT
BX.BOX_NOTE_SEQ
BX.BOX_NOTE_CD
BX.EFFDT

    let $Box = RTRIM(&M.Box, ' ')
    let $TAXFORM_NOTES-BOX_NOTE_TEXT = &BX.BOX_NOTE_TEXT

    do Get_Related_TAXFORM_NOTES(&M.BOX,&BX.EFFDT,&M.TAXFORM_ID)

    evaluate $Box
    when = 'O01'
      move 'RA' to $BoxText
      break
    when = 'O02'
      move 'RB' to $BoxText
      break
    when = 'O03'
      move 'RC' to $BoxText
      break
    when = 'O04'
      move 'RD' to $BoxText
      break
    when = 'O06'
      move 'RF' to $BoxText
      break
    when = 'O07'
      move 'RG' to $BoxText
      break
    when = 'O08'
      move 'RH' to $BoxText
      break
    when = 'O09'
      move 'RI' to $BoxText
      break
    when = 'O10'
      move 'RJ' to $BoxText
      break
    when = 'O11'
      move 'RK' to $BoxText
      break
    when = 'O12'
      move 'RL' to $BoxText
      break
    when = 'O13'
      move 'RM' to $BoxText
      break
    when = 'O14'
      move 'RN' to $BoxText
      break
    when = 'O15'
      move 'RO' to $BoxText
      break
    when = 'O16'
      move 'RP' to $BoxText
      break
    when = 'O17'
      move 'RQ' to $BoxText
      break
    when = 'O18'
      move 'RR' to $BoxText
      break
    when = 'O19'
      move 'RS' to $BoxText
      break
    when = 'O20'
      move 'RT' to $BoxText
      break
    when = 'O21'
      move 'RU' to $BoxText
      break
    when = 'O22'
      move 'RV' to $BoxText
      break
    when = 'O23'
      move 'RW' to $BoxText
      break
    when = 'O92'
      find '(' in &BX.Box_Note_Text 0 #loc
      if #loc <> - 1
        extract $BoxText from $TAXFORM_NOTES-BOX_NOTE_TEXT 0 #loc
        let $BoxText  = 'RB ' || $BoxText
      end-if
      break
    when-other
      move $TAXFORM_NOTES-BOX_NOTE_TEXT to $BoxText
    end-evaluate

    move &BX.Box_Note_Seq to #BoxPriority
    move &BX.Box_Note_Cd to $BoxNoteCd

FROM PS_TAXFORM_NOTES BX
WHERE  TAXFORM_ID = &M.Taxform_ID
  AND  BOX = &M.Box
! AND (BOX = $BOXNZ or
!      BOX = $BOXWZ)
  AND  EFFDT = (SELECT MAX(EFFDT)
                FROM PS_TAXFORM_BOX
                WHERE TAXFORM_ID = &M.Taxform_ID
                  AND BOX = BX.BOX
                  AND EFFDT <= $AsOfDate)
end-SELECT

end-procedure


begin-procedure Get-Tax-Tbl-Info

begin-SELECT
TT.CPP_MAX_EARNS
TT.UI_MAX_ANNL_EARNS

  move &TT.CPP_Max_Earns     to #CPP-Max-Earns
  move &TT.UI_Max_Annl_Earns to #UI_Max_Annl_Earns

FROM PS_CAN_TAX_TBL TT
WHERE TT.EFFDT = (SELECT MAX(TT1.EFFDT)
                  FROM PS_CAN_TAX_TBL TT1
                  WHERE TT1.EFFDT <= $AsOfDate)
end-SELECT

end-procedure


begin-procedure Process-Main

   do Cleanup-Temp-Table
   do Process-EE-Multiple-Slips
   do Get-Amend-Slips
   do Process-Records
   if #temp_rec_count > 0
     do Merge-Temp-Records
   end-if

   do Update-Temp-Rec
   do Process-Report

   if $Print_Exception = 'Y'
     move 'Y' to $PrintExceptHdr
     do Print-Exception-EE
     do Delete-Exception-Table
   end-if

end-procedure


!***********************************************************************
! PROCESS-EE-MULTIPLE-SLIPS This procedure will find all amended/      *
! cancelled/reissue slips with multiple original slips. They will be   *
! on the exception report.                                             *
!***********************************************************************

begin-procedure Process-EE-Multiple-Slips

  let $Print_Exception = 'N'

begin-SELECT
MS.COMPANY
MS.TAXFORM_ID
MS.EMPLID
ME.SLIP_SURNAME
ME.SLIP_FIRST_NAME
ME.SLIP_INITIAL

  do Check-Multiple-Original

  if #num_slips > 1

    if rtrim(&ME.SLIP_SURNAME, ' ')   = ''
      let $Slip_Surname_Multi         = ' '
    else
      let $Slip_Surname_Multi         = rtrim(&ME.SLIP_SURNAME, ' ')
    end-if

    if rtrim(&ME.SLIP_FIRST_NAME, ' ') = ''
      let $Slip_FirstName_Multi       = ' '
    else
      let $Slip_FirstName_Multi       = rtrim(&ME.SLIP_FIRST_NAME, ' ')
    end-if

    if rtrim(&ME.SLIP_INITIAL, ' ')    = ''
      let $Slip_MI_Multi              = ' '
    else
      let $Slip_MI_Multi              = rtrim(&ME.SLIP_INITIAL, ' ')
    end-if

    do Create-Exception-Rec
    let $Print_Exception = 'Y'

  end-if

FROM PS_CAN_YE_SLIP  MS,
     PS_CAN_YE_EMPL  ME
WHERE MS.CALENDAR_YEAR = &TX.Balance_Year
  AND MS.TAXFORM_ID IN ($Taxform1, $Taxform2, $Taxform3, $Taxform4)
  AND MS.SEQUENCE_NUMBER = (
       SELECT MAX(MS1.SEQUENCE_NUMBER)
               FROM PS_CAN_YE_SLIP MS1
                  WHERE MS1.COMPANY = MS.COMPANY
                    AND MS1.EMPLID  = MS.EMPLID
                    AND MS1.CALENDAR_YEAR = MS.CALENDAR_YEAR)
  AND MS.YE_SLIP_PROCESS IN ('A', 'C', 'N')
  AND ME.COMPANY          = MS.COMPANY
  AND ME.EMPLID           = MS.EMPLID
  AND ME.CALENDAR_YEAR    = MS.CALENDAR_YEAR
  AND ME.SEQUENCE_NUMBER  = MS.SEQUENCE_NUMBER
GROUP BY MS.COMPANY, MS.TAXFORM_ID, MS.EMPLID, ME.SLIP_SURNAME, ME.SLIP_FIRST_NAME, ME.SLIP_INITIAL

end-SELECT

end-procedure


begin-procedure Check-Multiple-Original

  let #num_slips  = 0
  let $OrginalWLP = ' '

begin-SELECT

MO.TAXFORM_ID
MO.WAGE_LOSS_PLAN

   if &MO.Taxform_Id = 'A'

      if rtrim(&MO.Wage_Loss_Plan, ' ') <> rtrim($OrginalWLP, ' ')
        let #num_slips    = #num_slips + 1
        let $OrginalWLP   = &MO.Wage_Loss_Plan
      end-if

   else
      let #num_slips      = #num_slips + 1
   end-if

FROM PS_CAN_YE_SLIP  MO
WHERE MO.CALENDAR_YEAR     = &TX.Balance_Year
  AND MO.COMPANY           = &MS.COMPANY
  AND MO.TAXFORM_ID        = &MS.TAXFORM_ID
  AND MO.SEQUENCE_NUMBER   = 0
  AND MO.EMPLID            = &MS.EMPLID
end-SELECT

end-procedure


begin-procedure Create-Exception-Rec

begin-SQL ON-ERROR = SQL-Error

INSERT INTO PS_R_CTX910AS_TMP3(
 COMPANY
,TAXFORM_ID
,EMPLID
,SLIP_SURNAME
,SLIP_FIRST_NAME
,SLIP_INITIAL)
VALUES
(&MS.COMPANY
,&MS.TAXFORM_ID
,&MS.EMPLID
,$Slip_Surname_Multi
,$Slip_FirstName_Multi
,$Slip_MI_Multi);

end-SQL

end-procedure


begin-procedure Get-Amend-Slips

begin-SELECT
S.TAXFORM_ID
S.COMPANY
S.PROVINCE
S.WAGE_LOSS_PLAN
S.EMPLID
S.SEQUENCE_NUMBER
E.SLIP_SURNAME
E.SLIP_FIRST_NAME
E.SLIP_INITIAL
E.SIN
S.REPORTING_ID
S.EMPLOYMENT_CODE
S.SIN_CONTRB_SPOUSE
S.YE_SLIP_PROCESS
S.UI_EXEMPT
E.LOCATION
E.DEPTID
E.EMPLID
E.CALENDAR_YEAR
E.SEQUENCE_NUMBER


  let $TaxformID         = rtrim(&S.Taxform_ID, ' ')
  let $Company           = rtrim(&S.Company, ' ')
  let $Province          = rtrim(&S.Province, ' ')
  let $WageLossPlan      = rtrim(&S.Wage_Loss_Plan, ' ')
  let $CTX_TaxformID     = $TaxformID
  let $CTX_Company       = $Company
  let $CTX_Province      = $Province
  let $CTX_WageLossPlan  = $WageLossPlan
  let $Emplid            = rtrim(&E.Emplid, ' ')
  let #Seq_Num           = &S.SEQUENCE_NUMBER
  let $slip_process      = rtrim(&S.YE_SLIP_PROCESS, ' ')
  if rtrim(&E.SLIP_SURNAME, ' ') = ''
    let $Surname         = ' '
  else
    let $Surname         = rtrim(&E.SLIP_SURNAME, ' ')
  end-if
  if rtrim(&E.SLIP_FIRST_NAME, ' ') = ''
    let $FirstName       = ' '
  else
    let $FirstName       = rtrim(&E.SLIP_FIRST_NAME, ' ')
  end-if
  if rtrim(&E.SLIP_INITIAL, ' ') = ''
    let $Initial = ' '
  else
    let $Initial         = rtrim(&E.SLIP_INITIAL, ' ')
  end-if
  if rtrim(&E.SIN, ' ')  = ''
    let $SIN             = ' '
  else
    let $SIN             = rtrim(&E.SIN, ' ')
  end-if
  if rtrim(&S.REPORTING_ID, ' ') = ''
    let $ReportingID     = ' '
  else
    let $ReportingID     = rtrim(&S.REPORTING_ID, ' ')
  end-if
  if rtrim(&S.Employment_Code, ' ') = ''
    let $EmploymentCode  = ' '
  else
    let $EmploymentCode  = rtrim(&S.Employment_Code, ' ')
  end-if
  if rtrim(&S.SIN_CONTRB_SPOUSE, ' ')  = ''
    let $sin_contrb_spouse  = ' '
  else
    let $sin_contrb_spouse = rtrim(&S.SIN_CONTRB_SPOUSE, ' ')
  end-if
  if rtrim(&S.UI_EXEMPT, ' ') = ''
    let $UIExempt  = ' '
  else
    if (&S.UI_Exempt = 'Y' or
         &S.UI_Exempt = 'X')
      move 'X' to $UIExempt
    else
      move ' ' to $UIExempt
    end-if
  end-if
  if rtrim(&E.Location, ' ') = ''
    let $Location        = ' '
  else
    let $Location        = rtrim(&E.Location, ' ')
  end-if
  if rtrim(&E.Deptid, ' ') = ''
    let $DeptID          = ' '
  else
    let $DeptID          = rtrim(&E.Deptid, ' ')
  end-if

  let $PrintFlag         = 'Y'

  do Create-Temp-Rec

  if &S.Taxform_ID = 'A'
    do Get-Original-Slip-T4A
  else
    do Get-Original-Slip
  end-if

FROM PS_CAN_YE_EMPL  E,
     PS_CAN_YE_SLIP  S
WHERE E.CALENDAR_YEAR = &TX.Balance_Year
  AND S.CALENDAR_YEAR = &TX.Balance_Year
  AND S.TAXFORM_ID IN ($Taxform1, $Taxform2, $Taxform3, $Taxform4)
  AND S.COMPANY = E.COMPANY
  AND E.EMPLID = S.EMPLID
  AND E.SEQUENCE_NUMBER = S.SEQUENCE_NUMBER
  AND S.SEQUENCE_NUMBER = (
       SELECT MAX(S1.SEQUENCE_NUMBER)
               FROM PS_CAN_YE_SLIP S1
                  WHERE S1.COMPANY = S.COMPANY
                    AND S1.EMPLID  = S.EMPLID
                    AND S1.CALENDAR_YEAR = S.CALENDAR_YEAR)
  AND S.YE_SLIP_PROCESS IN ('A', 'C', 'N')
  AND NOT EXISTS (SELECT 'X'
                   FROM PS_R_CTX910AS_TMP3 T3
                    WHERE T3.COMPANY     = S.COMPANY
                      AND T3.TAXFORM_ID  = S.TAXFORM_ID
                      AND T3.EMPLID      = S.EMPLID)
end-SELECT

end-procedure


begin-procedure Create-Temp-Rec

begin-SQL ON-ERROR = SQL-Error

INSERT INTO PS_R_CTX910AS_TMP(
 CTX_COMPANY
,CTX_TAXFORM_ID
,CTX_PROVINCE
,CTX_WAGE_LOSS_PLAN
,COMPANY
,TAXFORM_ID
,PROVINCE
,WAGE_LOSS_PLAN
,EMPLID
,SEQUENCE_NUMBER
,YE_SLIP_PROCESS
,SLIP_SURNAME
,SLIP_FIRST_NAME
,SLIP_INITIAL
,SIN
,REPORTING_ID
,EMPLOYMENT_CODE
,SIN_CONTRB_SPOUSE
,UI_EXEMPT
,LOCATION
,DEPTID
,CTX_PRINT_FLAG
)
VALUES
($CTX_Company
,$CTX_TaxformID
,$CTX_Province
,$CTX_WageLossPlan
,$Company
,$TaxformID
,$Province
,$WageLossPlan
,$Emplid
,#Seq_Num
,$slip_process
,$Surname
,$FirstName
,$Initial
,$SIN
,$ReportingID
,$EmploymentCode
,$sin_contrb_spouse
,$UIExempt
,$Location
,$DeptID
,$PrintFlag);

end-SQL
end-procedure


begin-procedure Get-Original-Slip

begin-SELECT
SH.TAXFORM_ID
SH.COMPANY
SH.PROVINCE
SH.WAGE_LOSS_PLAN
SH.EMPLID
SH.SEQUENCE_NUMBER
SH.REPORTING_ID
SH.EMPLOYMENT_CODE
SH.SIN_CONTRB_SPOUSE
SH.YE_SLIP_PROCESS
SH.UI_EXEMPT
EH.EMPLID
EH.CALENDAR_YEAR
EH.SEQUENCE_NUMBER
EH.SLIP_SURNAME
EH.SLIP_FIRST_NAME
EH.SLIP_INITIAL
EH.SIN
EH.LOCATION
EH.DEPTID


  let $TaxformID         = rtrim(&SH.Taxform_ID, ' ')
  let $Company           = rtrim(&SH.Company, ' ')
  let $Province          = rtrim(&SH.Province, ' ')
  let $WageLossPlan      = rtrim(&SH.Wage_Loss_Plan, ' ')
  let $CTX_TaxformID     = $TaxformID
  let $CTX_Company       = $Company
  let $CTX_Province      = $Province
  let $CTX_WageLossPlan  = $WageLossPlan
  let $Emplid            = rtrim(&EH.Emplid, ' ')
  let #Seq_Num           = &SH.SEQUENCE_NUMBER
  let $slip_process      = rtrim(&SH.YE_SLIP_PROCESS, ' ')
  if rtrim(&EH.SLIP_SURNAME, ' ')  = ''
    let $Surname         = ' '
  else
    let $Surname         = rtrim(&EH.SLIP_SURNAME, ' ')
  end-if
  if rtrim(&EH.SLIP_FIRST_NAME, ' ') = ''
    let $FirstName       = ' '
  else
    let $FirstName       = rtrim(&EH.SLIP_FIRST_NAME, ' ')
  end-if
  if rtrim(&EH.SLIP_INITIAL, ' ') = ''
    let $Initial         = ' '
  else
    let $Initial         = rtrim(&EH.SLIP_INITIAL, ' ')
  end-if
  if rtrim(&EH.SIN, ' ') = ''
    let $SIN             = ' '
  else
    let $SIN             = rtrim(&EH.SIN, ' ')
  end-if
  if rtrim(&SH.REPORTING_ID, ' ') = ''
    let $ReportingID     = ' '
  else
    let $ReportingID     = rtrim(&SH.REPORTING_ID, ' ')
  end-if
  if rtrim(&SH.Employment_Code, ' ') = ''
    let $EmploymentCode  = ' '
  else
    let $EmploymentCode  = rtrim(&SH.Employment_Code, ' ')
  end-if
  if rtrim(&SH.SIN_CONTRB_SPOUSE, ' ')  = ''
    let $sin_contrb_spouse = ' '
  else
    let $sin_contrb_spouse = rtrim(&SH.SIN_CONTRB_SPOUSE, ' ')
  end-if
  if rtrim(&SH.UI_EXEMPT, ' ')  = ''
    let $UIExempt  = ' '
  else
    if (&SH.UI_Exempt = 'Y' or
         &SH.UI_Exempt = 'X')
      move 'X' to $UIExempt
    else
      move ' ' to $UIExempt
    end-if
  end-if
  if rtrim(&EH.Location, ' ') = ''
    let $Location        = ' '
  else
    let $Location        = rtrim(&EH.Location, ' ')
  end-if
  if rtrim(&EH.Deptid, ' ') = ''
    let $DeptID          = ' '
  else
    let $DeptID          = rtrim(&EH.Deptid, ' ')
  end-if

  let $PrintFlag         = 'Y'

  do Create-Temp-Rec

FROM PS_CAN_YE_EMPL  EH,
     PS_CAN_YE_SLIP  SH
WHERE EH.CALENDAR_YEAR = &TX.Balance_Year
  AND SH.CALENDAR_YEAR = &TX.Balance_Year
  AND SH.COMPANY       = &S.COMPANY
  AND SH.TAXFORM_ID    = &S.TAXFORM_ID
  AND SH.EMPLID        = &S.EMPLID
  AND SH.YE_SLIP_PROCESS <> 'D'
  AND SH.COMPANY = EH.COMPANY
  AND EH.EMPLID = SH.EMPLID
  AND SH.SEQUENCE_NUMBER = 0
  AND EH.SEQUENCE_NUMBER = SH.SEQUENCE_NUMBER

end-SELECT

end-procedure


begin-procedure Get-Original-Slip-T4A

begin-SELECT

TA.COMPANY
TA.EMPLID
TA.CALENDAR_YEAR
TA.SEQUENCE_NUMBER
TA.TAXFORM_ID
TA.WAGE_LOSS_PLAN
TA.REPORTING_ID
TA.YE_SLIP_PROCESS
TA.EMPLOYMENT_CODE
TA.SIN_CONTRB_SPOUSE
TA.UI_EXEMPT
YE.SLIP_SURNAME
YE.SLIP_FIRST_NAME,
YE.SLIP_INITIAL,
YE.SIN,
YE.LOCATION,
YE.DEPTID


  let $TaxformID         = rtrim(&TA.Taxform_ID, ' ')
  let $Company           = rtrim(&TA.Company, ' ')
  let $Province          = rtrim(&S.Province, ' ')

  let $WageLossPlan      = rtrim(&TA.Wage_Loss_Plan, ' ')
  let $CTX_TaxformID     = $TaxformID
  let $CTX_Company       = $Company
  let $CTX_Province      = $Province

  let $CTX_WageLossPlan  = $WageLossPlan
  let $Emplid            = rtrim(&TA.Emplid, ' ')
  let #Seq_Num           = &TA.SEQUENCE_NUMBER
  let $slip_process      = rtrim(&TA.YE_SLIP_PROCESS, ' ')
  if rtrim(&YE.SLIP_SURNAME, ' ')  = ''
    let $Surname         = ' '
  else
    let $Surname         = rtrim(&YE.SLIP_SURNAME, ' ')
  end-if
  if rtrim(&YE.SLIP_FIRST_NAME, ' ') = ''
    let $FirstName       = ' '
  else
    let $FirstName       = rtrim(&YE.SLIP_FIRST_NAME, ' ')
  end-if
  if rtrim(&YE.SLIP_INITIAL, ' ') = ''
    let $Initial         = ' '
  else
    let $Initial         = rtrim(&YE.SLIP_INITIAL, ' ')
  end-if
  if rtrim(&YE.SIN, ' ') = ''
    let $SIN             = ' '
  else
    let $SIN             = rtrim(&YE.SIN, ' ')
  end-if
  if rtrim(&TA.REPORTING_ID, ' ') = ''
    let $ReportingID     = ' '
  else
    let $ReportingID     = rtrim(&TA.REPORTING_ID, ' ')
  end-if
  if rtrim(&TA.Employment_Code, ' ') = ''
    let $EmploymentCode  = ' '
  else
    let $EmploymentCode  = rtrim(&TA.Employment_Code, ' ')
  end-if
  if rtrim(&TA.SIN_CONTRB_SPOUSE, ' ')  = ''
    let $sin_contrb_spouse = ' '
  else
    let $sin_contrb_spouse = rtrim(&TA.SIN_CONTRB_SPOUSE, ' ')
  end-if
  if rtrim(&TA.UI_EXEMPT, ' ')  = ''
    let $UIExempt  = ' '
  else
    if (&TA.UI_Exempt = 'Y' or
         &TA.UI_Exempt = 'X')
      move 'X' to $UIExempt
    else
      move ' ' to $UIExempt
    end-if
  end-if
  if rtrim(&YE.Location, ' ') = ''
    let $Location        = ' '
  else
    let $Location        = rtrim(&YE.Location, ' ')
  end-if
  if rtrim(&YE.Deptid, ' ') = ''
    let $DeptID          = ' '
  else
    let $DeptID          = rtrim(&YE.Deptid, ' ')
  end-if

  let $PrintFlag         = 'Y'

  do Create-Temp-Rec


FROM PS_CAN_YE_SLIP TA,
     PS_CAN_YE_EMPL YE
WHERE  TA.COMPANY         = &S.COMPANY
  AND  TA.EMPLID          = &S.EMPLID
  AND  TA.CALENDAR_YEAR   = &TX.Balance_Year
  AND  TA.SEQUENCE_NUMBER = 0
  AND  TA.TAXFORM_ID      = 'A'
  AND  TA.COMPANY         = YE.COMPANY
  AND  TA.EMPLID          = YE.EMPLID
  AND  TA.CALENDAR_YEAR   = YE.CALENDAR_YEAR
  AND  TA.SEQUENCE_NUMBER = YE.SEQUENCE_NUMBER
GROUP BY TA.COMPANY, TA.EMPLID, TA.CALENDAR_YEAR, TA.SEQUENCE_NUMBER, TA.TAXFORM_ID,
         TA.WAGE_LOSS_PLAN, TA.REPORTING_ID, TA.YE_SLIP_PROCESS, TA.EMPLOYMENT_CODE,
         TA.SIN_CONTRB_SPOUSE, TA.UI_EXEMPT, YE.SLIP_SURNAME, YE.SLIP_FIRST_NAME,
         YE.SLIP_INITIAL, YE.SIN, YE.LOCATION, YE.DEPTID

end-SELECT

end-procedure


!***********************************************************************
! PROCESS-RECORDS This procedure finds all the original, amended or    *
! cancelled slips based on the report sorting sequence to ensure the   *
! temp record has employees slip records in pairs (amended/cancelled   *
! and original).                                                       *
!***********************************************************************

begin-procedure Process-Records

  let #Record_Count    = 0
  let #temp_rec_count  = 0
  let $FirstRecord     = 'Y'

begin-SELECT

TMP.CTX_COMPANY
TMP.CTX_TAXFORM_ID
TMP.CTX_PROVINCE
TMP.CTX_WAGE_LOSS_PLAN
TMP.COMPANY
TMP.TAXFORM_ID
TMP.PROVINCE
TMP.WAGE_LOSS_PLAN
TMP.EMPLID
TMP.SEQUENCE_NUMBER
TMP.YE_SLIP_PROCESS
TMP.SLIP_SURNAME
TMP.SLIP_FIRST_NAME
TMP.SLIP_INITIAL
TMP.SIN
TMP.REPORTING_ID
TMP.EMPLOYMENT_CODE
TMP.SIN_CONTRB_SPOUSE
TMP.UI_EXEMPT
TMP.LOCATION
TMP.DEPTID

  if $FirstRecord = 'Y'
     do Save-Temp-Rec1-Data
     let $FirstRecord = 'N'
  end-if

!When there is no amended i.e. seq > 0!
  if &TMP.Sequence_Number = 0 and #Record_Count = 0

    do Find-Amend-Record
    do Process-Amend-Temp-Record

  else

  !When there is no original i.e. seq 0!
    if #Record_Count = 1 and
      (rtrim(&TMP.CTX_Company, ' ') <> rtrim($Temp_Company, ' ') or
      rtrim(&TMP.Emplid, ' ')       <> rtrim($Temp_Emplid, ' ')  or
      rtrim(&TMP.CTX_WAGE_LOSS_PLAN, ' ') <> rtrim($Temp_WageLossPlan, ' ') or
      rtrim(&TMP.CTX_Province, ' ') <> rtrim($Temp_Province, ' ') or
      rtrim(&TMP.CTX_Taxform_Id, ' ')  <> rtrim($Temp_TaxformID, ' ') )

      do Find-Original-Record

    !When missing a seq >0 i.e. current is seq 0!
      if &TMP.Sequence_Number = 0 and #Record_Count = 0
        do Find-Amend-Record
        do Process-Amend-Temp-Record
      else
        do Process-Amend-Temp-Record
      end-if

    else

      do Process-Amend-Temp-Record

    end-if
  end-if

  do Save-Temp-Rec1-Data

FROM PS_R_CTX910AS_TMP TMP
ORDER BY TMP.CTX_COMPANY ASC, TMP.CTX_TAXFORM_ID ASC, TMP.CTX_PROVINCE ASC, TMP.CTX_WAGE_LOSS_PLAN ASC,
         TMP.EMPLID ASC, TMP.SEQUENCE_NUMBER DESC


end-SELECT

!When there is no original for last record!
  if #Record_Count = 1

    do Find-Original-Record

  end-if

end-procedure


begin-procedure Save-Temp-Rec1-Data

  let $Temp_TaxformID          = rtrim(&TMP.TAXFORM_ID, ' ')
  let $Temp_Company            = rtrim(&TMP.COMPANY, ' ')
  let $Temp_Province           = rtrim(&TMP.PROVINCE, ' ')
  let $Temp_WageLossPlan       = rtrim(&TMP.WAGE_LOSS_PLAN, ' ')
  let $Temp_Emplid             = rtrim(&TMP.EMPLID, ' ')

end-procedure


begin-procedure Find-Amend-Record

  do Save-Temp-Rec1-Data

  do Get-Amend-Temp-Record
  let #Record_Count = #Record_Count + 1

end-procedure


begin-procedure Find-Original-Record

  do Get-Original-Temp-Record

  let #Record_Count = #Record_Count + 1

  if #Record_Count = 2
    let #Record_Count = 0
  end-if

  do Save-Temp-Rec1-Data

end-procedure


begin-procedure Process-Amend-Temp-Record

  let #Record_Count = #Record_Count + 1

  if #Record_Count = 2
    let #Record_Count = 0
  end-if

end-procedure



begin-procedure Get-Amend-Temp-Record

begin-SELECT

AR.CTX_COMPANY
AR.CTX_TAXFORM_ID
AR.CTX_PROVINCE
AR.CTX_WAGE_LOSS_PLAN
AR.COMPANY
AR.TAXFORM_ID
AR.PROVINCE
AR.WAGE_LOSS_PLAN
AR.EMPLID
AR.SEQUENCE_NUMBER
AR.YE_SLIP_PROCESS
AR.SLIP_SURNAME
AR.SLIP_FIRST_NAME
AR.SLIP_INITIAL
AR.SIN
AR.REPORTING_ID
AR.EMPLOYMENT_CODE
AR.SIN_CONTRB_SPOUSE
AR.UI_EXEMPT
AR.LOCATION
AR.DEPTID

  let $CTX_Company        = $Temp_Company
  let $CTX_TaxformID      = $Temp_TaxformID
  let $CTX_Province       = $Temp_Province
  let $CTX_WageLossPlan   = $Temp_WageLossPlan
  let $Company            = rtrim(&AR.COMPANY, ' ')
  let $TaxformID          = rtrim(&AR.TAXFORM_ID, ' ')
  let $Province           = rtrim(&AR.PROVINCE, ' ')
  let $WageLossPlan       = rtrim(&AR.WAGE_LOSS_PLAN, ' ')
  let $Emplid             = rtrim(&AR.EMPLID, ' ')
  let #Seq_Num            = &AR.SEQUENCE_NUMBER
  let $slip_process       = rtrim(&AR.YE_SLIP_PROCESS, ' ')
  if rtrim(&AR.SLIP_SURNAME, ' ') = ''
    let $Surname          = ' '
  else
    let $Surname          = rtrim(&AR.SLIP_SURNAME, ' ')
  end-if
  if rtrim(&AR.SLIP_FIRST_NAME, ' ') = ''
    let $FirstName        = ' '
  else
    let $FirstName        = rtrim(&AR.SLIP_FIRST_NAME, ' ')
  end-if
  if rtrim(&AR.SLIP_INITIAL, ' ') = ''
    let $Initial          = ' '
  else
    let $Initial          = rtrim(&AR.SLIP_INITIAL, ' ')
  end-if
  if rtrim(&AR.SIN, ' ')  = ''
    let $SIN              = ' '
  else
    let $SIN              = rtrim(&AR.SIN, ' ')
  end-if
  if rtrim(&AR.REPORTING_ID, ' ') = ''
    let $ReportingID      = ' '
  else
    let $ReportingID      = rtrim(&AR.REPORTING_ID, ' ')
  end-if
  if rtrim(&AR.EMPLOYMENT_CODE, ' ') = ''
    let $EmploymentCode   = ' '
  else
    let $EmploymentCode   = rtrim(&AR.EMPLOYMENT_CODE, ' ')
  end-if
  if rtrim(&AR.SIN_CONTRB_SPOUSE, ' ') = ''
    let $sin_contrb_spouse = ' '
  else
    let $sin_contrb_spouse = rtrim(&AR.SIN_CONTRB_SPOUSE, ' ')
  end-if
  if rtrim(&AR.UI_EXEMPT, ' ')  = ''
    let $UIExempt  = ' '
  else
    if (&AR.UI_Exempt = 'Y' or
      &AR.UI_Exempt = 'X')
       move 'X' to $UIExempt
    else
       move ' ' to $UIExempt
    end-if
  end-if
  if rtrim(&AR.LOCATION, ' ') = ''
    let $Location         = ' '
  else
    let $Location         = rtrim(&AR.LOCATION, ' ')
  end-if
  if rtrim(&AR.DEPTID, ' ') = ''
    let $Deptid           = ' '
  else
    let $Deptid           = rtrim(&AR.DEPTID, ' ')
  end-if

  do Create-Temp2-Rec


FROM PS_R_CTX910AS_TMP AR
  WHERE AR.COMPANY          = &TMP.CTX_Company
    AND AR.TAXFORM_ID       = &TMP.CTX_Taxform_Id
    AND AR.EMPLID           = &TMP.Emplid
    AND AR.SEQUENCE_NUMBER  = (
       SELECT MAX(AR1.SEQUENCE_NUMBER)
          FROM PS_R_CTX910AS_TMP AR1
           WHERE AR1.COMPANY     = &TMP.CTX_COMPANY
             AND AR1.TAXFORM_ID  = &TMP.CTX_TAXFORM_ID
             AND AR1.EMPLID      = &TMP.EMPLID)
    AND AR.YE_SLIP_PROCESS IN ('A', 'C', 'N')

end-SELECT

end-procedure


begin-procedure Create-Temp2-Rec

begin-SQL ON-ERROR = SQL-Error

INSERT INTO PS_R_CTX910AS_TMP2(
 CTX_COMPANY
,CTX_TAXFORM_ID
,CTX_PROVINCE
,CTX_WAGE_LOSS_PLAN
,COMPANY
,TAXFORM_ID
,PROVINCE
,WAGE_LOSS_PLAN
,EMPLID
,SEQUENCE_NUMBER
,YE_SLIP_PROCESS
,SLIP_SURNAME
,SLIP_FIRST_NAME
,SLIP_INITIAL
,SIN
,REPORTING_ID
,EMPLOYMENT_CODE
,SIN_CONTRB_SPOUSE
,UI_EXEMPT
,LOCATION
,DEPTID
)
VALUES
($CTX_Company
,$CTX_TaxformID
,$CTX_Province
,$CTX_WageLossPlan
,$Company
,$TaxformID
,$Province
,$WageLossPlan
,$Emplid
,#Seq_Num
,$slip_process
,$Surname
,$FirstName
,$Initial
,$SIN
,$ReportingID
,$EmploymentCode
,$sin_contrb_spouse
,$UIExempt
,$Location
,$DeptID);

end-SQL

  let #temp_rec_count = #temp_rec_count + 1

end-procedure


begin-procedure Get-Original-Temp-Record

begin-SELECT

OT.CTX_COMPANY
OT.CTX_TAXFORM_ID
OT.CTX_PROVINCE
OT.CTX_WAGE_LOSS_PLAN
OT.COMPANY
OT.TAXFORM_ID
OT.PROVINCE
OT.WAGE_LOSS_PLAN
OT.EMPLID
OT.SEQUENCE_NUMBER
OT.YE_SLIP_PROCESS
OT.SLIP_SURNAME
OT.SLIP_FIRST_NAME
OT.SLIP_INITIAL
OT.SIN
OT.REPORTING_ID
OT.EMPLOYMENT_CODE
OT.SIN_CONTRB_SPOUSE
OT.UI_EXEMPT
OT.LOCATION
OT.DEPTID

  let $CTX_Company        = $Temp_Company
  let $CTX_TaxformID      = $Temp_TaxformID
  let $CTX_Province       = $Temp_Province
  let $CTX_WageLossPlan   = $Temp_WageLossPlan
  let $Company            = rtrim(&OT.COMPANY, ' ')
  let $TaxformID          = rtrim(&OT.TAXFORM_ID, ' ')
  let $Province           = rtrim(&OT.PROVINCE, ' ')
  let $WageLossPlan       = rtrim(&OT.WAGE_LOSS_PLAN, ' ')
  let $Emplid             = rtrim(&OT.EMPLID, ' ')
  let #Seq_Num            = &OT.SEQUENCE_NUMBER
  let $slip_process       = rtrim(&OT.YE_SLIP_PROCESS, ' ')
  if rtrim(&OT.SLIP_SURNAME, ' ') = ''
    let $Surname          = ' '
  else
    let $Surname          = rtrim(&OT.SLIP_SURNAME, ' ')
  end-if
  if rtrim(&OT.SLIP_FIRST_NAME, ' ') = ''
    let $FirstName        = ' '
  else
    let $FirstName        = rtrim(&OT.SLIP_FIRST_NAME, ' ')
  end-if
  if rtrim(&OT.SLIP_INITIAL, ' ') = ''
    let $Initial          = ' '
  else
    let $Initial          = rtrim(&OT.SLIP_INITIAL, ' ')
  end-if
  if rtrim(&OT.SIN, ' ')  = ''
    let $SIN              = ' '
  else
    let $SIN              = rtrim(&OT.SIN, ' ')
  end-if
  if rtrim(&OT.REPORTING_ID, ' ') = ''
    let $ReportingID      = ' '
  else
    let $ReportingID      = rtrim(&OT.REPORTING_ID, ' ')
  end-if
  if rtrim(&OT.EMPLOYMENT_CODE, ' ') = ''
    let $EmploymentCode   = ' '
  else
    let $EmploymentCode   = rtrim(&OT.EMPLOYMENT_CODE, ' ')
  end-if
  if rtrim(&OT.SIN_CONTRB_SPOUSE, ' ')  = ''
    let $sin_contrb_spouse = ' '
  else
    let $sin_contrb_spouse = rtrim(&OT.SIN_CONTRB_SPOUSE, ' ')
  end-if
  if rtrim(&OT.UI_EXEMPT, ' ')  = ''
    let $UIExempt  = ' '
  else
    if (&OT.UI_Exempt = 'Y' or
       &OT.UI_Exempt = 'X')
       move 'X' to $UIExempt
    else
       move ' ' to $UIExempt
     end-if
  end-if
  if rtrim(&OT.LOCATION, ' ')  = ''
    let $Location         = ' '
  else
    let $Location         = rtrim(&OT.LOCATION, ' ')
  end-if
  if rtrim(&OT.DEPTID, ' ')  = ''
    let $Deptid           = ' '
  else
    let $Deptid           = rtrim(&OT.DEPTID, ' ')
  end-if

  do Create-Temp2-Rec

FROM PS_R_CTX910AS_TMP OT
  WHERE OT.COMPANY          = $Temp_Company
    AND OT.TAXFORM_ID       = $Temp_TaxformID
    AND OT.EMPLID           = $Temp_EmplID
    AND OT.SEQUENCE_NUMBER  = 0
    AND OT.YE_SLIP_PROCESS  = 'O'

end-SELECT

end-procedure


!***********************************************************************
! MERGE-TEMP-RECORDS This procedure merges all the amended/cancelled   *
! or original slips back into the main temp record before this record  *
! is sorted for the report printing.                                   *
!***********************************************************************

begin-procedure Merge-Temp-Records

begin-SELECT

MT.CTX_COMPANY
MT.CTX_TAXFORM_ID
MT.CTX_PROVINCE
MT.CTX_WAGE_LOSS_PLAN
MT.COMPANY
MT.TAXFORM_ID
MT.PROVINCE
MT.WAGE_LOSS_PLAN
MT.EMPLID
MT.SEQUENCE_NUMBER
MT.YE_SLIP_PROCESS
MT.SLIP_SURNAME
MT.SLIP_FIRST_NAME
MT.SLIP_INITIAL
MT.SIN
MT.REPORTING_ID
MT.EMPLOYMENT_CODE
MT.SIN_CONTRB_SPOUSE
MT.UI_EXEMPT
MT.LOCATION
MT.DEPTID

  let $CTX_TaxformID     = rtrim(&MT.CTX_Taxform_ID, ' ')
  let $CTX_Company       = rtrim(&MT.CTX_Company, ' ')
  let $CTX_Province      = rtrim(&MT.CTX_Province, ' ')
  let $CTX_WageLossPlan  = rtrim(&MT.CTX_Wage_Loss_Plan, ' ')
  let $TaxformID         = rtrim(&MT.Taxform_ID, ' ')
  let $Company           = rtrim(&MT.Company, ' ')
  let $Province          = rtrim(&MT.Province, ' ')
  let $WageLossPlan      = rtrim(&MT.Wage_Loss_Plan, ' ')
  let $Emplid            = rtrim(&MT.Emplid, ' ')
  let #Seq_Num           = &MT.SEQUENCE_NUMBER
  let $slip_process      = rtrim(&MT.YE_SLIP_PROCESS, ' ')
  if rtrim(&MT.SLIP_SURNAME, ' ') = ''
    let $Surname         = ' '
  else
    let $Surname         = rtrim(&MT.SLIP_SURNAME, ' ')
  end-if
  if rtrim(&MT.SLIP_FIRST_NAME, ' ') = ''
    let $FirstName       = ' '
  else
    let $FirstName       = rtrim(&MT.SLIP_FIRST_NAME, ' ')
  end-if
  if rtrim(&MT.SLIP_INITIAL, ' ') = ''
    let $Initial = ' '
  else
    let $Initial         = rtrim(&MT.SLIP_INITIAL, ' ')
  end-if
  if rtrim(&MT.SIN, ' ') = ''
    let $SIN             = ' '
  else
    let $SIN             = rtrim(&MT.SIN, ' ')
  end-if
  if rtrim(&MT.REPORTING_ID, ' ') = ''
    let $ReportingID     = ' '
  else
    let $ReportingID     = rtrim(&MT.REPORTING_ID, ' ')
  end-if
  if rtrim(&MT.Employment_Code, ' ') = ''
    let $EmploymentCode  = ' '
  else
    let $EmploymentCode  = rtrim(&MT.Employment_Code, ' ')
  end-if
  if rtrim(&MT.SIN_CONTRB_SPOUSE, ' ')  = ''
    let $sin_contrb_spouse = ' '
  else
    let $sin_contrb_spouse = rtrim(&MT.SIN_CONTRB_SPOUSE, ' ')
  end-if
  if rtrim(&MT.UI_EXEMPT, ' ')  = ''
    let $UIExempt  = ' '
  else
    if (&MT.UI_Exempt = 'Y' or
      &MT.UI_Exempt = 'X')
        move 'X' to $UIExempt
    else
        move ' ' to $UIExempt
    end-if
  end-if
  if rtrim(&MT.Location, ' ')  = ''
    let $Location        = ' '
  else
    let $Location        = rtrim(&MT.Location, ' ')
  end-if
  if rtrim(&MT.Deptid, ' ') = ''
    let $DeptID          = ' '
  else
    let $DeptID          = rtrim(&MT.Deptid, ' ')
  end-if

  let $PrintFlag         = 'N'

  do Create-Temp-Rec

FROM PS_R_CTX910AS_TMP2 MT

end-SELECT

end-procedure


begin-procedure Update-Temp-Rec

!assign a dummy to Province key for T4A to skip the province order!

  let $DummyT4AProv = 'DUMMY'

begin-SQL
UPDATE PS_R_CTX910AS_TMP

 SET CTX_PROVINCE = $DummyT4AProv

WHERE CTX_TAXFORM_ID = 'A'

end-SQL

end-procedure


begin-procedure Process-Report

  let #Record_Count   = 0
  let $FirstRecord    = 'Y'
  let $SaveOrig_Info  = 'N'

begin-SELECT

R.CTX_COMPANY
R.CTX_TAXFORM_ID
R.CTX_PROVINCE
R.CTX_WAGE_LOSS_PLAN
R.COMPANY
R.TAXFORM_ID
R.PROVINCE
R.WAGE_LOSS_PLAN
R.EMPLID
R.SEQUENCE_NUMBER
R.YE_SLIP_PROCESS
R.SLIP_SURNAME
R.SLIP_FIRST_NAME
R.SLIP_INITIAL
R.SIN
R.REPORTING_ID
R.EMPLOYMENT_CODE
R.SIN_CONTRB_SPOUSE
R.UI_EXEMPT
R.LOCATION
R.DEPTID
R.CTX_PRINT_FLAG

  if $FirstRecord = 'Y'
     do Save-Current-Data
     let $FirstRecord = 'N'

  else

    if rtrim(&R.CTX_Company, ' ') <> rtrim($Company_Prior, ' ')
       do Company-Break
    else
      if rtrim(&R.CTX_Taxform_Id, ' ') <> rtrim($TaxformID_Prior, ' ')
        do Taxform-Break
      else
        if rtrim(&R.CTX_Province, ' ') <> rtrim($Province_Prior, ' ')
          do Province-Break
        else
          if rtrim(&R.CTX_Wage_Loss_Plan, ' ') <> rtrim($WageLossPlan_Prior, ' ')
            do Wage-Loss-Plan-Break
          end-if
        end-if
      end-if
    end-if
  end-if


  if &R.CTX_Print_Flag = 'Y'

    if &R.Taxform_id = 'A'
      do Get-Detail-Records-T4A
    else
      do Get-Detail-Records
    end-if

    if &R.Sequence_Number > 0
      do Get-Comments
    end-if

  else

    if &R.Sequence_Number > 0
      let $SaveOrig_Info  = 'Y'
    end-if


    if &R.Taxform_id = 'T'
      do Get-Detail-Records
    end-if

  end-if


  if $FirstRecord = 'N'
    do Save-Current-Data
  end-if

  do Print-Empl-Form

  let #Record_Count = #Record_Count + 1

  if #Record_Count = 2
    if $SaveOrig_Info  = 'Y'
      do Save-Orig-Info-to-Sum
      let $SaveOrig_Info  = 'N'
    end-if

    do Print-EE-Summary
    let #Record_Count = 0
  end-if


FROM PS_R_CTX910AS_TMP R
ORDER BY R.CTX_COMPANY ASC, R.CTX_TAXFORM_ID ASC, R.CTX_PROVINCE ASC, R.CTX_WAGE_LOSS_PLAN ASC,
         R.EMPLID ASC, R.SEQUENCE_NUMBER DESC

end-SELECT

  do Print-WLP-Summary
  do Print-Province-Summary
  do Print-Company-Summary

end-procedure


begin-procedure Save-Current-Data

  let $TaxformID_Prior    = rtrim(&R.CTX_TAXFORM_ID, ' ')
  let $Company_Prior      = rtrim(&R.CTX_COMPANY, ' ')
  let $Province_Prior     = rtrim(&R.CTX_PROVINCE, ' ')
  let $WageLossPlan_Prior = rtrim(&R.CTX_WAGE_LOSS_PLAN, ' ')

  let $TaxformID          = rtrim(&R.TAXFORM_ID, ' ')
  let $Company            = rtrim(&R.COMPANY, ' ')
  let $Province           = rtrim(&R.PROVINCE, ' ')
  let $WageLossPlan       = rtrim(&R.WAGE_LOSS_PLAN, ' ')
  let $Emplid             = rtrim(&R.EMPLID, ' ')
  move &R.SEQUENCE_NUMBER to $Seq_Num 99
  let $Surname            = rtrim(&R.SLIP_SURNAME, ' ')
  let $FirstName          = rtrim(&R.SLIP_FIRST_NAME, ' ')
  let $Initial            = rtrim(&R.SLIP_INITIAL, ' ')
  let $SIN                = rtrim(&R.SIN, ' ')
  let $ReportingID        = rtrim(&R.REPORTING_ID, ' ')
  let $EmploymentCode     = rtrim(&R.EMPLOYMENT_CODE, ' ')

  let $Location           = rtrim(&R.LOCATION, ' ')
  let $Deptid             = rtrim(&R.DEPTID, ' ')

  evaluate &R.YE_SLIP_PROCESS
     when = 'A'
        let $slip_process = $Ctx910as_Slip_Amended
        break
     when = 'C'
        let $slip_process = $Ctx910as_Slip_Cancelled
        break
     when = 'O'
        let $slip_process = $Ctx910as_Slip_Original
        break
     when = 'N'
        let $slip_process = $Ctx910as_Slip_Reissued
        break
     when-other
        let $slip_process = ' '
        break
  end-evaluate

  if &R.SEQUENCE_NUMBER > 0
    do Save-Summary-Data
  end-if

end-procedure


begin-procedure Save-Summary-Data

  let $Province_Sum          = $Province
  let $WageLossPlan_Sum      = $WageLossPlan
  let $Emplid_Sum            = $Emplid
  let $Surname_Sum           = $Surname
  let $FirstName_Sum         = $FirstName
  let $Initial_Sum           = $Initial
  let $SIN_Sum               = $SIN
  let $ReportingID_Sum       = $ReportingID
  let $EmploymentCode_Sum    = $EmploymentCode

  let $UIExempt_Sum          = $UIExempt
  let $Location_Sum          = $Location
  let $Deptid_Sum            = $Deptid

end-procedure


begin-procedure Save-Orig-Info-to-Sum

  let $Province_Sum          = rtrim(&R.PROVINCE, ' ')
  let $WageLossPlan_Sum      = rtrim(&R.WAGE_LOSS_PLAN, ' ')
  let $Emplid_Sum            = rtrim(&R.EMPLID, ' ')
  let $Surname_Sum           = rtrim(&R.SLIP_SURNAME, ' ')
  let $FirstName_Sum         = rtrim(&R.SLIP_FIRST_NAME, ' ')
  let $Initial_Sum           = rtrim(&R.SLIP_INITIAL, ' ')
  let $SIN_Sum               = rtrim(&R.SIN, ' ')
  let $ReportingID_Sum       = rtrim(&R.REPORTING_ID, ' ')
  let $EmploymentCode_Sum    = rtrim(&R.EMPLOYMENT_CODE, ' ')

  let $CPPExempt_Sum         = $CPPExempt
  let $UIExempt_Sum          = $UIExempt
  let $PPIPExempt_Sum        = $PPIPExempt
  let $Location_Sum          = rtrim(&R.LOCATION, ' ')
  let $Deptid_Sum            = rtrim(&R.DEPTID, ' ')

end-procedure


begin-procedure Get-Detail-Records

begin-SELECT
D.BOX
D.CAN_YE_BOX_TEXT
D.CAN_YE_BOX_AMT
D.COMPANY
D.EMPLID
D.CALENDAR_YEAR
D.SEQUENCE_NUMBER
D.TAXFORM_ID
D.WAGE_LOSS_PLAN
D.PROVINCE

  evaluate &R.TAXFORM_ID
     when = 'T'
        do Process-T4-Data
        break
     when = 'R'
        do Process-RV1-Data
        break
     when = 'V'
        do Process-RV2-Data
        break
     when-other
        break
  end-evaluate

FROM PS_CAN_YE_DETAIL  D
WHERE D.COMPANY         = &R.COMPANY
  AND D.EMPLID          = &R.EMPLID
  AND D.CALENDAR_YEAR   = &TX.Balance_Year
  AND D.SEQUENCE_NUMBER = &R.SEQUENCE_NUMBER
  AND D.TAXFORM_ID      = &R.TAXFORM_ID
  AND D.WAGE_LOSS_PLAN  = &R.WAGE_LOSS_PLAN
  AND D.PROVINCE        = &R.PROVINCE

ORDER BY D.BOX ASC
end-SELECT

end-procedure


begin-procedure Get-Detail-Records-T4A

begin-SELECT
YD.COMPANY
YD.EMPLID
YD.CALENDAR_YEAR
YD.SEQUENCE_NUMBER
YD.TAXFORM_ID
YD.WAGE_LOSS_PLAN
YD.BOX
YD.CAN_YE_BOX_TEXT
SUM(YD.CAN_YE_BOX_AMT)   &Box_T4A_Amt

  do Process-T4A-Data


FROM PS_CAN_YE_DETAIL  YD
WHERE YD.COMPANY           = &R.COMPANY
  AND YD.EMPLID            = &R.EMPLID
  AND YD.CALENDAR_YEAR     = &TX.Balance_Year
  AND YD.SEQUENCE_NUMBER   = &R.SEQUENCE_NUMBER
  AND YD.TAXFORM_ID        = 'A'
  AND YD.WAGE_LOSS_PLAN    = &R.WAGE_LOSS_PLAN
GROUP BY YD.COMPANY, YD.EMPLID , YD.CALENDAR_YEAR ,YD.SEQUENCE_NUMBER ,YD.TAXFORM_ID  ,YD.WAGE_LOSS_PLAN ,
         YD.BOX , YD.CAN_YE_BOX_TEXT
ORDER BY YD.BOX ASC

end-SELECT
end-procedure


begin-procedure Get-Comments

  let $Amend_Comments = ' '

begin-SELECT

AE.COMMENTS

  let $Amend_Comments = rtrim(&AE.COMMENTS, ' ')

FROM PS_CAN_YE_AMEND_E  AE
WHERE AE.COMPANY           = &R.COMPANY
  AND AE.EMPLID            = &R.EMPLID
  AND AE.CALENDAR_YEAR     = &TX.Balance_Year
  AND AE.SEQUENCE_NUMBER   = &R.SEQUENCE_NUMBER

end-SELECT
end-procedure


begin-procedure Process-T4-Data

  move 0 to #load_box
  move 0 to #load_note

  if rtrim(&D.Box, ' ') = '28C' or rtrim(&D.Box, ' ') = '28c'
     move 'X' to $CPPExempt

     if &R.SEQUENCE_NUMBER > 0
       move 'X' to $CPPExempt_Sum
     end-if

     move 'Y' to $PrintZero_Bx26
  else
    if rtrim(&D.Box, ' ') = '28U' or rtrim(&D.Box, ' ') = '28u'
       move 'X' to $UIExempt

       if &R.SEQUENCE_NUMBER > 0
         move 'X' to $UIExempt_Sum
       end-if

       move 'Y' to $PrintZero_Bx24

    else
       if rtrim(&D.Box, ' ') = '28P' or rtrim(&D.Box, ' ') = '28p'
         move 'X' to $PPIPExempt

         if &R.SEQUENCE_NUMBER > 0
           move 'X' to $PPIPExempt_Sum
         end-if
       end-if

    end-if
  end-if


  if &R.CTX_Print_Flag = 'Y'

  extract $FN_Ind from &D.Box 2 1
  if $FN_Ind = '' or $FN_Ind = ' '
    let $Box = RTRIM(&D.Box,' ')
    if $Box = '50' or $Box = '26' or $Box = '24'
       let $Text = RTRIM(&D.CAN_YE_Box_Text, ' ')

       if $Box = '50'
         if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
           let $T4_Plan = ' '
         else
           let $T4_Plan = RTRIM(&D.CAN_YE_BOX_TEXT, ' ')
         end-if

         if &R.SEQUENCE_NUMBER > 0
           if &R.YE_SLIP_PROCESS <> 'C'
             let $T4_Plan_Sum = $T4_Plan
           else
             let $T4_Plan_Sum = ' '
           end-if
         else
           if $T4_Plan = $T4_Plan_Sum
             let $T4_Plan_Sum = ' '
           end-if
         end-if
       end-if
    end-if

    while #load_box < #max_T4boxes

      let #temp_CAN_YE_Box_Amt = 0

      get $LoadBox from PrT4_Area(#load_box) PT4_Box
      let $LoadBox = rtrim($LoadBox, ' ')
      if $LoadBox = $Box

        let #temp_CAN_YE_Box_Amt = &D.CAN_YE_Box_Amt

        if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
          let #temp_CAN_YE_Box_Amt = 0
        end-if

        array-add #temp_CAN_YE_Box_Amt to PrT4_Area(#load_box) PT4_Amt

        if &R.SEQUENCE_NUMBER > 0
           array-add #temp_CAN_YE_Box_Amt to SumT4_Area(#load_box) ST4_Amt
        else
           array-subtract #temp_CAN_YE_Box_Amt from SumT4_Area(#load_box) ST4_Amt
        end-if

        break
      else
        add 1 to #load_box
      end-if

    end-while

  end-if

  end-if

end-procedure


begin-procedure Process-T4-UI-CPP-Boxes

  move 0 to #load_box
  move 0 to #savebox14


  while #load_box < #max_T4boxes

    let #temp_CAN_YE_Box_Amt = 0

    get $LoadT4Box #LoadT4Amt from PrT4_Area(#load_box) PT4_Box PT4_Amt
    let $LoadT4Box = rtrim($LoadT4Box, ' ')

     evaluate $LoadT4Box
       when = '14'
         let #savebox14 = #LoadT4Amt
         break

       when = '24'
         if #LoadT4Amt = 0
           if $UIExempt <> 'X'

             if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
               let #temp_CAN_YE_Box_Amt     = 0
             else
               if #savebox14 >= #UI_Max_Annl_Earns
                 let #temp_CAN_YE_Box_Amt   = #UI_Max_Annl_Earns
               else
                 let #temp_CAN_YE_Box_Amt   = #savebox14
               end-if
             end-if

             array-add #temp_CAN_YE_Box_Amt to PrT4_Area(#load_box) PT4_Amt

             if &R.SEQUENCE_NUMBER > 0
               array-add #temp_CAN_YE_Box_Amt to SumT4_Area(#load_box) ST4_Amt
             else
               array-subtract #temp_CAN_YE_Box_Amt from SumT4_Area(#load_box) ST4_Amt
             end-if

           end-if
         end-if

       when = '26'
         if #LoadT4Amt = 0
           if $CPPExempt <> 'X'

             if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
               let #temp_CAN_YE_Box_Amt     = 0
             else
               if #savebox14 >= #CPP-Max-Earns
                 let #temp_CAN_YE_Box_Amt   = #CPP-Max-Earns
               else
                 let #temp_CAN_YE_Box_Amt   = #savebox14
               end-if
             end-if

             array-add #temp_CAN_YE_Box_Amt to PrT4_Area(#load_box) PT4_Amt

             if &R.SEQUENCE_NUMBER > 0
               array-add #temp_CAN_YE_Box_Amt to SumT4_Area(#load_box) ST4_Amt
             else
               array-subtract #temp_CAN_YE_Box_Amt from SumT4_Area(#load_box) ST4_Amt
             end-if

           end-if
         end-if

       when-other
          break

     end-evaluate

     add 1 to #load_box
  end-while

end-procedure


begin-procedure Process-T4A-Data

  move 0 to #load_box
  move 0 to #load_note

  extract $FN_Ind from &YD.Box 2 1
  if $FN_Ind = '' or $FN_Ind = ' '
    let $Box = RTRIM(&YD.Box,' ')
    if $Box = '36'

      if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
        let $T4A_Plan = ' '
      else
        let $T4A_Plan = RTRIM(&YD.CAN_YE_BOX_TEXT, ' ')
      end-if

      if &R.SEQUENCE_NUMBER > 0
        if &R.YE_SLIP_PROCESS <> 'C'
          let $T4A_Plan_Sum = $T4A_Plan
        else
          let $T4A_Plan_Sum = ' '
        end-if
      else
        if $T4A_Plan = $T4A_Plan_Sum
          let $T4A_Plan_Sum = ' '
        end-if
      end-if
    end-if

    while #load_box < #max_T4Aboxes

      let #temp_CAN_YE_Box_Amt = 0

      get $LoadBox from PrT4A_Area(#load_box) PT4A_Box
      let $LoadBox = RTRIM($LoadBox,' ')
      if $LoadBox = $Box

        let #temp_CAN_YE_Box_Amt = &Box_T4A_Amt

        if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
          let #temp_CAN_YE_Box_Amt = 0
        end-if

        array-add #temp_CAN_YE_Box_Amt to PrT4A_Area(#load_box) PT4A_Amt

        if &R.SEQUENCE_NUMBER > 0
           array-add #temp_CAN_YE_Box_Amt to SumT4A_Area(#load_box) ST4A_Amt
        else
           array-subtract #temp_CAN_YE_Box_Amt from SumT4A_Area(#load_box) ST4A_Amt
        end-if
        break
      else
        add 1 to #load_box
      end-if
    end-while
  else
    while #load_note < #max_T4Afootnotes

      let #temp_CAN_YE_Box_Amt = 0

      get $LoadNote from T4A_Footnotes(#load_note) AFN_Box
      let $Box = RTRIM(&YD.Box,' ')
      let $LoadNote = RTRIM($LoadNote,' ')
      if $LoadNote = $Box

        let #temp_CAN_YE_Box_Amt = &Box_T4A_Amt
        if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
          let #temp_CAN_YE_Box_Amt = 0
        end-if

        array-add #temp_CAN_YE_Box_Amt to T4A_Footnotes(#load_note) AFN_Amt

        if &R.SEQUENCE_NUMBER > 0
           array-add #temp_CAN_YE_Box_Amt to SumT4A_Footnotes(#load_note) SAFN_Amt
        else
           array-subtract #temp_CAN_YE_Box_Amt from SumT4A_Footnotes(#load_note) SAFN_Amt
        end-if

        put &YD.CAN_YE_Box_Text into T4A_Footnotes (#load_note) AFN_Slip_Text
        put &YD.CAN_YE_Box_Text into SumT4A_Footnotes (#load_note) SAFN_Slip_Text

        if &R.YE_SLIP_PROCESS <> 'C'
          add 1 to #T4A_FNCount
        end-if

        add 1 to #T4A_FNCount_Sum

        break
      else
        add 1 to #load_note
      end-if
    end-while
  end-if

end-procedure

begin-procedure Process-RV1-Data

  let $Box = RTRIM(&D.Box, ' ')

  if $Box = 'CDO'
    if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
      let $Code = ' '
    else
      let $Code = RTRIM(&D.CAN_YE_BOX_TEXT, ' ')
    end-if

    if &R.SEQUENCE_NUMBER > 0
      if &R.YE_SLIP_PROCESS <> 'C'
        let $SumCode = $Code
      else
        let $SumCode = ' '
      end-if
    else
      if $Code = $SumCode
        let $SumCode = ' '
      end-if
    end-if
  end-if

  move 0 to #load_box
  move 0 to #load_note

  extract $FN_Ind from &D.Box 2 1
  if $FN_Ind = '' or $FN_Ind = ' ' or $Box = 'CDO'
    let $Box = RTRIM(&D.Box,' ')
    if $Box = 'G' and &D.CAN_YE_Box_Amt = 0
       let $TextG = RTRIM(&D.CAN_YE_Box_Text, ' ')
       if $TextG <> ''
          move 'Y' to $PrintZero_BxG
       end-if
    end-if
    while #load_box < #max_RV1boxes

      let #temp_CAN_YE_Box_Amt = 0

      get $LoadBox from PrRV1_Area(#load_box) PRV1_Box
      let $LoadBox = RTRIM($LoadBox,' ')
      if $LoadBox = $Box
        let #temp_CAN_YE_Box_Amt = &D.CAN_YE_Box_Amt

        if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
          let #temp_CAN_YE_Box_Amt = 0
        end-if

        array-add #temp_CAN_YE_Box_Amt to PrRV1_Area(#load_box) PRV1_Amt

        if &R.SEQUENCE_NUMBER > 0
           array-add #temp_CAN_YE_Box_Amt to SumRV1_Area(#load_box) SRV1_Amt
        else
           array-subtract #temp_CAN_YE_Box_Amt from SumRV1_Area(#load_box) SRV1_Amt
        end-if

        break
      else
        add 1 to #load_box
      end-if
    end-while
  else
    while #load_note < #max_RV1footnotes

      let #temp_CAN_YE_Box_Amt = 0

      get $LoadNote from RV1_Footnotes(#load_note) RFN_Box
      let $Box = RTRIM(&D.Box,' ')
      let $LoadNote = RTRIM($LoadNote,' ')
      if $LoadNote = $Box
        do Check-BoxO
        if $PrintFN = 'Y'

          let #temp_CAN_YE_Box_Amt = &D.CAN_YE_Box_Amt
          if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
            let #temp_CAN_YE_Box_Amt = 0
          end-if

          array-add #temp_CAN_YE_Box_Amt to RV1_Footnotes(#load_note) RFN_Amt

          if &R.SEQUENCE_NUMBER > 0
            array-add #temp_CAN_YE_Box_Amt to SumRV1_Footnotes(#load_note) SRFN_Amt
          else
            array-subtract #temp_CAN_YE_Box_Amt from SumRV1_Footnotes(#load_note) SRFN_Amt
          end-if

          put &D.CAN_YE_Box_Text into RV1_Footnotes (#load_note) RFN_Slip_Text
          put &D.CAN_YE_Box_Text into SumRV1_Footnotes (#load_note) SRFN_Slip_Text

          if &R.YE_SLIP_PROCESS <> 'C'
            add 1 to #RV1_FNCount
          end-if

          add 1 to #RV1_FNCount_Sum

        end-if
        break
      else
        add 1 to #load_note
      end-if
    end-while
  end-if

end-procedure

begin-procedure Check-BoxO

  let $PrintFN = ' '

  if $Box <> 'CDO'

    EXTRACT $Box_Ind from $Box 0 1

    if $Box_Ind = 'O'
      if $Code = 'RZ' or  ($Box = 'O92' and $Code = 'RB') or ($Box = 'O82') or ($Box = 'O30')
        let $PrintFN = 'Y'
      end-if
    else
      let $PrintFN = 'Y'
    end-if

  end-if

end-procedure


begin-procedure Process-RV1-BoxG

  move 0 to #load_box
  move 0 to #saveboxA
  move 0 to #saveboxB


  while #load_box < #max_RV1boxes

    let #temp_CAN_YE_Box_Amt = 0

    get $LoadBox #LoadAmt from PrRV1_Area(#load_box) PRV1_Box PRV1_Amt
    let $LoadBox = rtrim($LoadBox, ' ')

     evaluate $LoadBox
       when = 'A'
         let #saveboxA = #LoadAmt

       when = 'B'
         let #saveboxB = #LoadAmt

       when = 'G'
         if #LoadAmt = 0
           if #saveboxB > 0

             if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
               let #temp_CAN_YE_Box_Amt   = 0
             else
               let #temp_CAN_YE_Box_Amt   = #saveboxA
             end-if

             if &R.SEQUENCE_NUMBER > 0
               array-add #temp_CAN_YE_Box_Amt to SumRV1_Area(#load_box) SRV1_Amt
             else
               array-subtract #temp_CAN_YE_Box_Amt from SumRV1_Area(#load_box) SRV1_Amt
             end-if

           end-if
         end-if

       when-other
          break
     end-evaluate

     add 1 to #load_box
  end-while

end-procedure


begin-procedure Process-RV2-Data

  if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
    let $sin_contrb_spouse = ' '
  else
    let $sin_contrb_spouse = RTRIM(&R.SIN_CONTRB_SPOUSE, ' ')
  end-if

  if &R.SEQUENCE_NUMBER > 0
    if &R.YE_SLIP_PROCESS <> 'C'
      let $sin_contrb_spouse_sum = $sin_contrb_spouse
    else
      let $sin_contrb_spouse_sum = ' '
    end-if
  else
    if $sin_contrb_spouse  = $sin_contrb_spouse_sum
      let $sin_contrb_spouse_sum = ' '
    end-if
  end-if


  move 0 to #load_box
  move 0 to #load_note

  extract $FN_Ind from &D.Box 2 1
  if $FN_Ind = '' or $FN_Ind = ' '
    let $Box = RTRIM(&D.Box,' ')
    if $Box = 'G' and &D.CAN_YE_Box_Amt = 0
       let $TextG = RTRIM(&D.CAN_YE_Box_Text, ' ')
       if $TextG <> ''
          move 'Y' to $PrintZero_BxG
       end-if
    end-if

    while #load_box < #max_RV2boxes

      let #temp_CAN_YE_Box_Amt = 0

      get $LoadBox from PrRV2_Area(#load_box) PRV2_Box
      let $LoadBox = RTRIM($LoadBox,' ')
      if $LoadBox = $Box

        let #temp_CAN_YE_Box_Amt = &D.CAN_YE_Box_Amt

        if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
          let #temp_CAN_YE_Box_Amt = 0
        end-if

        array-add #temp_CAN_YE_Box_Amt to PrRV2_Area(#load_box) PRV2_Amt

        if &R.SEQUENCE_NUMBER > 0
           array-add #temp_CAN_YE_Box_Amt to SumRV2_Area(#load_box) SRV2_Amt
        else
           array-subtract #temp_CAN_YE_Box_Amt from SumRV2_Area(#load_box) SRV2_Amt
        end-if
        break
      else
        add 1 to #load_box
      end-if
    end-while
  else
    while #load_note < #max_RV2footnotes

      let #temp_CAN_YE_Box_Amt = 0

      get $LoadNote from RV2_Footnotes(#load_note) VFN_Box
      let $Box = RTRIM(&D.Box,' ')
      let $LoadNote = RTRIM($LoadNote,' ')
      if $LoadNote = $Box

        let #temp_CAN_YE_Box_Amt = &D.CAN_YE_Box_Amt
        if &R.SEQUENCE_NUMBER > 0 and &R.YE_SLIP_PROCESS = 'C'
          let #temp_CAN_YE_Box_Amt = 0
        end-if

        array-add #temp_CAN_YE_Box_Amt to RV2_Footnotes(#load_note) VFN_Amt

        if &R.SEQUENCE_NUMBER > 0
            array-add #temp_CAN_YE_Box_Amt to SumRV2_Footnotes(#load_note) SVFN_Amt
        else
            array-subtract #temp_CAN_YE_Box_Amt from SumRV2_Footnotes(#load_note) SVFN_Amt
        end-if

        put &D.CAN_YE_Box_Text into RV2_Footnotes (#load_note) VFN_Slip_Text
        put &D.CAN_YE_Box_Text into SumRV2_Footnotes (#load_note) SVFN_Slip_Text

        add 1 to #RV2_FNCount

        add 1 to #RV2_FNCount_Sum

        break
      else
        add 1 to #load_note
      end-if
    end-while
  end-if

end-procedure


begin-procedure Wage-Loss-Plan-Break

  do Print-WLP-Summary

  if $TaxformID = 'A' or $TaxformID = 'T'
    new-page
  end-if

end-procedure


begin-procedure Print-WLP-Summary

  if $TaxformID = 'A' or $TaxformID = 'T'

    let #SummaryLevel = 1
    new-page

    do Print-ReportID-Header
    do Print-WLP-Total-Line

    evaluate $TaxformID
    when = 'A'
      do Add-Level1-to-Level3
      break
    when = 'T'
      do Add-Level1-to-Level2
      break
    when-other
      break
    end-evaluate

    do Print-Level1-Totals

  end-if

end-procedure


begin-procedure Province-Break

  if $TaxformID = 'T'
    do Print-WLP-Summary
    do Print-Province-Summary

    new-page
  end-if

end-procedure


begin-procedure Print-Province-Summary

  if $TaxformID = 'T'

    let #SummaryLevel = 2
    new-page
    do Print-ReportID-Header
    do Print-Province-Total-Line
    do Add-Level2-to-Level3
    do Print-Level2-Totals

  end-if

end-procedure


begin-procedure Taxform-Break

  do Print-WLP-Summary
  do Print-Province-Summary
  do Print-Company-Summary
  new-page

end-procedure


begin-procedure Company-Break

  do Taxform-Break

end-procedure


begin-procedure Print-Company-Summary

  if $TaxformID = 'R' or $TaxformID = 'V'
    do Add-Level1-to-Level3
  end-if

  let #SummaryLevel = 3
  new-page
  do Print-ReportID-Header

  do Print-Company-Total-Line
  do Print-Level3-Totals

end-procedure


begin-procedure Print-EE-Summary

  if $TaxformID  = 'T'
    do Print-T4-Summary
    do Initialize-T4-Data
    do Initialize-T4-Summary
  end-if

  if $TaxformID  = 'A'
    do Print-T4A-Summary
    do Initialize-T4A-Data
    do Initialize-T4A-Summary
  end-if

  if $TaxformID  = 'R'
    do Print-RV1-Summary
    do Initialize-RV1-Data
    do Initialize-RV1-Summary
  end-if

  if $TaxformID  = 'V'
    do Print-RV2-Summary
    do Initialize-RV2-Data
    do Initialize-RV2-Summary
  end-if

  add 1 to #EmplCount_Lev1

end-procedure


begin-procedure Print-Empl-Form

  if &R.TAXFORM_ID = 'T'
    do Print-T4-Data
  end-if

  if &R.TAXFORM_ID = 'A'
    do Print-T4A-Data
  end-if

  if &R.TAXFORM_ID = 'R'
    do Print-RV1-Data
  end-if

  if &R.TAXFORM_ID = 'V'
    do Print-RV2-Data
  end-if

end-procedure


begin-procedure Print-T4-Data

  next-listing need=9

  print $Surname             (+2,3)
  print ','                  (0,0)
  print $FirstName           (0,+1)
  print $Initial             (0,+1)
  print $Ctx910as_Sin        (0,50)
  print $SIN                 (0,56) edit xxx-xxx-xxx
  print $Ctx910as_Emplid     (0,71)
  print $EmplID              (0,80)
  print $Ctx910as_Location   (0,90)
  print $Location            (0,101)
  print $Ctx910as_Department (0,116)
  print $DeptID              (0,129)

  print $Ctx910as_Bus_number   (+1,50)
  print $ReportingID           (0,64)
  print $Ctx910as_Cppqpp_exemp (0,90)
  print $CPPExempt             (0,107)
  print $Ctx910as_Ei_exemp     (0,116)
  print $UIExempt              (0,129)
  print $Ctx910as_Empl_Code    (+1,50)
  print $EmploymentCode        (0,68)
  print $Ctx910as_Wagels_Plan2 (0,90)
  print $WageLossPlan          (0,107)
  print $Ctx910as_Province2    (0,116)
  print $Province              (0,129)

  print $Ctx910as_Slip_Process (+1,50)
  print $slip_process          (0,65)
  print $Ctx910as_Num          (0,90)
  print $Seq_Num               (0,105)
  print $Ctx910as_PPIP_Exempt  (0,116)
  print $PPIPExempt            (0,131)



  if &R.Ctx_Print_Flag = 'Y'

    do Print-Column-Headings

    move 0 to #i
    move 0 to #fi
    move 0 to #var

    while #i <= #max_T4boxes
      get $PrBox $PrDescr #PrAmt from PrT4_Area(#i)
                       PT4_Box PT4_Descr PT4_Amt
      let $PrBox = RTRIM($PrBox,' ')
      if #i < 8
        evaluate $PrBox
           when = '14'
           when = '20'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99mi
              break

            when = '16'
            when = '22'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,64) edit 99999999.99mi
              break

            when = '17'
            when = '24'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              if $PrBox = '17' or
                ($PrBox = '24' and (($PrintZero_Bx24 = 'Y') or
                                               (#PrAmt <> 0)))
                   print #PrAmt (0,96) edit 99999999.99mi
              end-if
              break

            when = '18'
            when = '26'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if $PrBox = '18' or
                ($PrBox = '26' and (($PrintZero_Bx26 = 'Y') or
                                               (#PrAmt <> 0)))
                   print #PrAmt (0,128) edit 99999999.99mi
              end-if
              break

           end-evaluate
      else
        if (#PrAmt <> 0) or
            ($PrBox = '50' and $T4_Plan <> ' ' and $T4_Plan <> '')
          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
          when = 13
          when = 17
          when = 21
          when = 25
          when = 29
          when = 33
          when = 37
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              if $PrBox = '50'
                 print $T4_Plan (0,35)
              else
                 print #PrAmt (0,31) edit 99999999.99mi
              end-if
              break

          when = 2
          when = 6
          when = 10
          when = 14
          when = 18
          when = 22
          when = 26
          when = 30
          when = 34
          when = 38
              print $PrBox (0,50)
              print $PrDescr (0,54)
              if $PrBox = '50'
                 print $T4_Plan (0,68)
              else
                 print #PrAmt (0,64) edit 99999999.99mi
              end-if
              break

          when = 3
          when = 7
          when = 11
          when = 15
          when = 19
          when = 23
          when = 27
          when = 31
          when = 35
              print $PrBox (0,82)
              print $PrDescr (0,86)
              if $PrBox = '50'
                 print $T4_Plan (0,100)
              else
                 print #PrAmt (0,96) edit 99999999.99mi
              end-if
              break

          when = 4
          when = 8
          when = 12
          when = 16
          when = 20
          when = 24
          when = 28
          when = 32
          when = 36
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if $PrBox = '50'
                 print $T4_Plan (0,132)
              else
                 print #PrAmt (0,128) edit 99999999.99mi
              end-if
          when-other
            break

          end-evaluate
       end-if
     end-if

     add 1 to #i

   end-while

   do Process-T4-UI-CPP-Boxes

   if $slip_process  <> $Ctx910as_Slip_Original
     print $Ctx910as_Comments (+2,10)
     print $Amend_Comments (0,20)    WRAP 120 5 STRIP=<13> ON=<10>
   end-if

   if &R.Sequence_Number > 0
     do Initialize-T4-Data
   end-if

   move ' ' to $T4_Plan

  else
    print $Ctx910as_No                             (+2,50)
    print $slip_process                            (0,+1)
    print $Ctx910as_Slip                           (0,)
    print $Ctx910as_Period                         (0,)
    print $Ctx910as_See                            (0,)
    print $Ctx910as_Province                       (0,+1)
    print $Province                                (0,)
    print $Ctx910as_Comma                          (0,)
    print $Ctx910as_Wagels_plan                    (0,)
    print $WageLossPlan                            (0,)
    print $Ctx910as_Period                         (0,)

  end-if

end-procedure


begin-procedure Print-T4-Summary

  next-listing need=9

  print $Ctx910as_Employee_Totals (+2,3)
  print $Surname_Sum              (+2,3)
  print ','                       (0,0)
  print $FirstName_Sum            (0,+1)
  print $Initial_Sum              (0,+1)
  print $Ctx910as_Sin             (0,50)
  print $SIN_Sum                  (0,56) edit xxx-xxx-xxx
  print $Ctx910as_Emplid          (0,71)
  print $EmplID_Sum               (0,80)
  print $Ctx910as_Location        (0,90)
  print $Location_Sum             (0,101)
  print $Ctx910as_Department      (0,116)
  print $DeptID_Sum               (0,129)

  print $Ctx910as_Bus_number      (+1,50)
  print $ReportingID_Sum          (0,64)
  print $Ctx910as_Cppqpp_exemp    (0,90)
  print $CPPExempt_Sum            (0,107)
  print $Ctx910as_Ei_exemp        (0,116)
  print $UIExempt_Sum             (0,130)

  print $Ctx910as_Empl_Code       (+1,50)
  print $EmploymentCode_Sum       (0,68)
  print $Ctx910as_Wagels_Plan2    (0,90)
  print $WageLossPlan_Sum         (0,107)
  print $Ctx910as_Province2       (0,116)
  print $Province_Sum             (0,130)
  print $Ctx910as_PPIP_Exempt     (+1,50)
  print $PPIPExempt_Sum           (0,65)

  do Print-Column-Headings

  move 0 to #i
  move 0 to #fi
  move 0 to #var

  while #i <= #max_T4boxes
      get $PrBox $PrDescr #PrAmt from SumT4_Area(#i)
                       ST4_Box ST4_Descr ST4_Amt
      let $PrBox = RTRIM($PrBox,' ')
       if #i < 8
          evaluate $PrBox
            when = '14'
            when = '20'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99mi

            when = '16'
            when = '22'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,64) edit 99999999.99mi

            when = '17'
            when = '24'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,96) edit 99999999.99mi

            when = '18'
            when = '26'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,128) edit 99999999.99mi

           end-evaluate
       else
         if (#PrAmt <> 0) or
            ($PrBox = '50' and $T4_Plan_Sum <> ' ' and $T4_Plan_Sum <> '')
          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
          when = 13
          when = 17
          when = 21
          when = 25
          when = 29
          when = 33
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              if $PrBox = '50'
                 print $T4_Plan_Sum (0,35)
              else
                 print #PrAmt (0,31) edit 99999999.99mi
              end-if

          when = 2
          when = 6
          when = 10
          when = 14
          when = 18
          when = 22
          when = 26
          when = 30
          when = 34
              print $PrBox (0,50)
              print $PrDescr (0,54)
              if $PrBox = '50'
                 print $T4_Plan_Sum (0,68)
              else
                 print #PrAmt (0,64) edit 99999999.99mi
              end-if

          when = 3
          when = 7
          when = 11
          when = 15
          when = 19
          when = 23
          when = 27
          when = 31
          when = 35
              print $PrBox (0,82)
              print $PrDescr (0,86)
              if $PrBox = '50'
                 print $T4_Plan_Sum (0,100)
              else
                 print #PrAmt (0,96) edit 99999999.99mi
              end-if

          when = 4
          when = 8
          when = 12
          when = 16
          when = 20
          when = 24
          when = 28
          when = 32
          when = 36
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if $PrBox = '50'
                 print $T4_Plan_Sum (0,132)
              else
                 print #PrAmt (0,128) edit 99999999.99mi
              end-if
          when-other
            break

       end-evaluate
       end-if
     end-if

     add 1 to #i

  end-while


  do Add-T4-to-Level1
  do Initialize-T4-Data

end-procedure


begin-procedure Print-T4A-Data

  next-listing need=9

  print $Surname             (+2,3)
  print ','                  (0,0)
  print $FirstName           (0,+1)
  print $Initial             (0,+1)
  print $Ctx910as_Sin        (0,50)
  print $SIN                 (0,56) edit xxx-xxx-xxx
  print $Ctx910as_Emplid     (0,71)
  print $EmplID              (0,80)
  print $Ctx910as_Location   (0,90)
  print $Location            (0,101)
  print $Ctx910as_Department (0,116)
  print $DeptID              (0,129)

  print $Ctx910as_Bus_number   (+1,50)
  print $ReportingID           (0,64)
  print $Ctx910as_Wagels_Plan2 (0,90)
  print $WageLossPlan          (0,107)
  print $Ctx910as_Province2    (0,116)
  print $Province              (0,130)

  print $Ctx910as_Slip_Process (+1,50)
  print $slip_process          (0,65)
  print $Ctx910as_Num          (0,90)
  print $Seq_Num               (0,105)

  if &R.Ctx_Print_Flag = 'Y'

    do Print-Column-Headings

    move 0 to #j
    move 0 to #fj
    move 0 to #var

    while #j <= #max_T4Aboxes
      get $PrBox $PrDescr #PrAmt from PrT4A_Area(#j)
                       PT4A_Box PT4A_Descr PT4A_Amt
      let $PrBox = RTRIM($PrBox,' ')
        if #j < 8
          evaluate $PrBox
            when = '16'
            when = '24'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99mi

            when = '18'
            when = '26'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,64) edit 99999999.99mi

            when = '20'
            when = '27'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,96) edit 99999999.99mi

            when = '22'
            when = '28'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,128) edit 99999999.99mi

          end-evaluate
        else

          if (#PrAmt <> 0) or

            ($PrBox = '36' and not IsBlank($T4A_Plan))
            add 1 to #var
            evaluate #var
            when = 1
            when = 5
            when = 9
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              if $PrBox = '36'
                print $T4A_Plan (0,31)
              else
                print #PrAmt (0,31) edit 99999999.99mi
              end-if

            when = 2
            when = 6
            when = 10
              print $PrBox (0,50)
              print $PrDescr (0,54)
              if $PrBox = '36'
                print $T4A_Plan (0,64)
              else
                print #PrAmt (0,64) edit 99999999.99mi
              end-if

            when = 3
            when = 7
            when = 11
              print $PrBox (0,82)
              print $PrDescr (0,86)
              if $PrBox = '36'
                print $T4A_Plan (0,96)
              else
                print #PrAmt (0,96) edit 99999999.99mi
              end-if

            when = 4
            when = 8
            when = 12
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if $PrBox = '36'
                print $T4A_Plan (0,128)
              else
                print #PrAmt (0,128) edit 99999999.99mi
              end-if

            when-other
              break
            end-evaluate
          end-if
        end-if

        add 1 to #j

      end-while

     if #T4A_FNCount > 0
       next-listing need=6
       print $Ctx910as_T4a_footnote  (+1,14)
       if #T4A_FNCount > 1
         print $Ctx910as_Fn_code    (0,35)
       end-if
       do Print-Footnote-Column-Headings

       while #fj <= #max_T4Afootnotes

         get $FNBox $FNBoxText $FNSlipText #FNPriority $FNCode #FNAmt
                              from T4A_Footnotes(#fj)
                AFN_Box AFN_Box_Text AFN_Slip_Text AFN_Priority AFN_Code AFN_Amt

         if #FNAmt <> 0 or not isblank($FNSlipText)
           print #FNPriority (+1,32) edit 99
           print $FNBox (0,41)
           if #FNAmt <> 0
             print #FNAmt (0,48) edit 99,999,999.99mi
           end-if
           print $FNCode (0,66)
           print $FNBoxText (0,73)
           print $FNSlipText (0,103)
         end-if
         add 1 to #fj

       end-while
     else
       print '  ' (+1,1)
     end-if

     if $slip_process  <> $Ctx910as_Slip_Original
     print $Ctx910as_Comments (+2,10)
     print $Amend_Comments (0,20)    WRAP 120 5 STRIP=<13> ON=<10>
     end-if

     do Initialize-T4A-Data
     move ' ' to $T4A_Plan

else

  print $Ctx910as_No                             (+2,50)
  print $slip_process                            (0,+1)
  print $Ctx910as_Slip                           (0,)
  print $Ctx910as_Period                         (0,)
  print $Ctx910as_See                            (0,)
  print $Ctx910as_Wagels_plan                    (0,+1)
  print $WageLossPlan                            (0,)
  print $Ctx910as_Period                         (0,)

end-if

end-procedure


begin-procedure Print-T4A-Summary

  next-listing need=9

  print $Ctx910as_Employee_Totals (+2,3)
  print $Surname_Sum              (+2,3)
  print ','                       (0,0)
  print $FirstName_Sum            (0,+1)
  print $Initial_Sum              (0,+1)
  print $Ctx910as_Sin             (0,50)
  print $SIN_Sum                  (0,56) edit xxx-xxx-xxx
  print $Ctx910as_Emplid          (0,71)
  print $EmplID_Sum               (0,80)
  print $Ctx910as_Location        (0,90)
  print $Location_Sum             (0,101)
  print $Ctx910as_Department      (0,116)
  print $DeptID_Sum               (0,129)

  print $Ctx910as_Bus_number      (+1,50)
  print $ReportingID_Sum          (0,64)
  print $Ctx910as_Wagels_Plan2    (0,90)
  print $WageLossPlan_Sum         (0,107)
  print $Ctx910as_Province2       (0,116)
  print $Province_Sum             (0,130)

  do Print-Column-Headings

  move 0 to #j
  move 0 to #fj
  move 0 to #var

    while #j <= #max_T4Aboxes
      get $PrBox $PrDescr #PrAmt from SumT4A_Area(#j)
                       ST4A_Box ST4A_Descr ST4A_Amt
      let $PrBox = RTRIM($PrBox,' ')
       if #j < 8
          evaluate $PrBox
            when = '16'
            when = '24'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99mi

            when = '18'
            when = '26'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,64) edit 99999999.99mi

            when = '20'
            when = '27'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,96) edit 99999999.99mi

            when = '22'
            when = '28'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,128) edit 99999999.99mi

          end-evaluate
       else

        if (#PrAmt <> 0) or
           ($PrBox = '36' and not IsBlank($T4A_Plan_Sum))

          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              if $PrBox = '36'
                print $T4A_Plan_Sum (0,31)
              else
                print #PrAmt (0,31) edit 99999999.99mi
              end-if

          when = 2
          when = 6
          when = 10
              print $PrBox (0,50)
              print $PrDescr (0,54)
              if $PrBox = '36'
                print $T4A_Plan_Sum (0,64)
              else
                print #PrAmt (0,64) edit 99999999.99mi
              end-if

          when = 3
          when = 7
          when = 11
              print $PrBox (0,82)
              print $PrDescr (0,86)
              if $PrBox = '36'
                print $T4A_Plan_Sum (0,96)
              else
                print #PrAmt (0,96) edit 99999999.99mi
              end-if

          when = 4
          when = 8
          when = 12
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if $PrBox = '36'
                print $T4A_Plan_Sum (0,128)
              else
                print #PrAmt (0,128) edit 99999999.99mi
              end-if

          when-other
              break
       end-evaluate
      end-if
     end-if

     add 1 to #j

    end-while

    if #T4A_FNCount_Sum > 0
       next-listing need=6
       print $Ctx910as_T4a_footnote  (+1,14)
       if #T4A_FNCount > 1
          print $Ctx910as_Fn_code    (0,35)
       end-if
       do Print-Footnote-Column-Headings

    while #fj <= #max_T4Afootnotes

       get $FNBox $FNBoxText $FNSlipText #FNPriority $FNCode #FNAmt
                              from SumT4A_Footnotes(#fj)
                SAFN_Box SAFN_Box_Text SAFN_Slip_Text SAFN_Priority SAFN_Code SAFN_Amt

       if #FNAmt <> 0 or not isblank($FNSlipText)
       print #FNPriority (+1,32) edit 99
       print $FNBox (0,41)
       if #FNAmt <> 0
          print #FNAmt (0,48) edit 99,999,999.99mi
       end-if
       print $FNCode (0,66)
       print $FNBoxText (0,73)
       print $FNSlipText (0,103)
       end-if
       add 1 to #fj

    end-while
    else
       print '  ' (+1,1)
    end-if

  do Add-T4A-to-Level1
  do Initialize-T4A-Data
  move ' ' to $T4A_Plan

end-procedure


begin-procedure Print-RV1-Data

  next-listing need=9

  print $Surname             (+2,3)
  print ','                  (0,0)
  print $FirstName           (0,+1)
  print $Initial             (0,+1)
  print $Ctx910as_Sin        (0,50)
  print $SIN                 (0,56) edit xxx-xxx-xxx
  print $Ctx910as_Emplid     (0,71)
  print $EmplID              (0,80)
  print $Ctx910as_Location   (0,90)
  print $Location            (0,101)
  print $Ctx910as_Department (0,116)
  print $DeptID              (0,129)

  print $Ctx910as_Qin_number   (+1,50)
  print $ReportingID           (0,64)
  print $Ctx910as_Slip_Process (0,90)
  print $slip_process          (0,105)
  print $Ctx910as_Num          (0,116)
  print $Seq_Num               (0,130)

  if &R.Ctx_Print_Flag = 'Y'

    do Print-Column-Headings

    move 0 to #k
    move 0 to #fk
    move 0 to #var

    while #k <= #max_RV1boxes
       get $PrBox $PrDescr #PrAmt from PrRV1_Area(#k)
                       PRV1_Box PRV1_Descr PRV1_Amt
       let $PrBox = RTRIM($PrBox,' ')
       if #k < 5
          evaluate $PrBox
            when = 'A'
            when = 'D'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99mi

            when = 'B'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,64) edit 99999999.99mi

            when = 'C'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,96) edit 99999999.99mi

            when = 'CDO'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print $Code  (0,137)

          end-evaluate
       else
         if #PrAmt <> 0 or
           (#PrAmt = 0 and $PrBox = 'G' and $PrintZero_BxG = 'Y')
          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
          when = 13
          when = 17
          when = 21
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,64) edit 99999999.99mi

          when = 2
          when = 6
          when = 10
          when = 14
          when = 18
          when = 22
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,96) edit 99999999.99mi

          when = 3
          when = 7
          when = 11
          when = 15
          when = 19
          when = 23
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,128) edit 99999999.99mi

          when = 4
          when = 8
          when = 12
          when = 16
          when = 20
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99mi

          when-other
              break
       end-evaluate
      end-if
     end-if

     add 1 to #k

    end-while

    do Process-RV1-BoxG

    if #RV1_FNCount > 0
       next-listing need=6
       print $Ctx910as_Rv1_footnote (+1,14)
       do Print-Footnote-Column-Headings

    while #fk <= #max_RV1footnotes

       get $FNBox $FNBoxText $FNSlipText #FNPriority #FNAmt
              from RV1_Footnotes(#fk) RFN_Box RFN_Box_Text RFN_Slip_Text
                                               RFN_Priority RFN_Amt

       if rtrim($FNBox, ' ') <> 'CDO'
       if #FNAmt <> 0 or not isblank($FNSlipText)
       print #FNPriority (+1,32) edit 99
       print $FNBox (0,41)
       if #FNAmt <> 0
          print #FNAmt (0,48) edit 99,999,999.99mi
       end-if
       print $FNBoxText (0,73)
       print $FNSlipText (0,103)
       end-if
       end-if

       add 1 to #fk

    end-while
    else
       print '  ' (+1,4)
    end-if

    if $slip_process  <> $Ctx910as_Slip_Original
      print $Ctx910as_Comments (+2,10)
      print $Amend_Comments (0,20)    WRAP 120 5 STRIP=<13> ON=<10>
    end-if

  do Initialize-RV1-Data

end-if

end-procedure


begin-procedure Print-RV1-Summary

  next-listing need=9

  print $Ctx910as_Employee_Totals (+2,3)
  print $Surname_Sum              (+2,3)
  print ','                       (0,0)
  print $FirstName_Sum            (0,+1)
  print $Initial_Sum              (0,+1)
  print $Ctx910as_Sin             (0,50)
  print $SIN_Sum                  (0,56) edit xxx-xxx-xxx
  print $Ctx910as_Emplid          (0,71)
  print $EmplID_Sum               (0,80)
  print $Ctx910as_Location        (0,90)
  print $Location_Sum             (0,101)
  print $Ctx910as_Department      (0,116)
  print $DeptID_Sum               (0,129)

  print $Ctx910as_Qin_number      (+1,50)
  print $ReportingID_Sum          (0,64)

  do Print-Column-Headings

  move 0 to #k
  move 0 to #fk
  move 0 to #var

  while #k <= #max_RV1boxes
       get $PrBox $PrDescr #PrAmt from SumRV1_Area(#k)
                       SRV1_Box SRV1_Descr SRV1_Amt
      let $PrBox = RTRIM($PrBox,' ')
       if #k < 5
          evaluate $PrBox
            when = 'A'
            when = 'D'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99mi

            when = 'B'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,64) edit 99999999.99mi

            when = 'C'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,96) edit 99999999.99mi

            when = 'CDO'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print $SumCode  (0,137)

          end-evaluate
       else
         if #PrAmt <> 0 or
            (#PrAmt = 0 and $PrBox = 'G')
          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
          when = 13
          when = 17
          when = 21
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,64) edit 99999999.99mi

          when = 2
          when = 6
          when = 10
          when = 14
          when = 18
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,96) edit 99999999.99mi

          when = 3
          when = 7
          when = 11
          when = 15
          when = 19
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,128) edit 99999999.99mi

          when = 4
          when = 8
          when = 12
          when = 16
          when = 20
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99mi

          when-other
              break
       end-evaluate
      end-if
     end-if

     add 1 to #k

    end-while

    if #RV1_FNCount_Sum > 0
       next-listing need=6
       print $Ctx910as_Rv1_footnote (+1,14)
       do Print-Footnote-Column-Headings

    while #fk <= #max_RV1footnotes

       get $FNBox $FNBoxText $FNSlipText #FNPriority #FNAmt
              from SumRV1_Footnotes(#fk) SRFN_Box SRFN_Box_Text SRFN_Slip_Text
                                               SRFN_Priority SRFN_Amt

       if $FNBox <> 'CDO'
       if #FNAmt <> 0 or not isblank($FNSlipText)
       print #FNPriority (+1,32) edit 99
       print $FNBox (0,41)
       if #FNAmt <> 0
          print #FNAmt (0,48) edit 99,999,999.99mi
       end-if
       print $FNBoxText (0,73)
       print $FNSlipText (0,103)
       end-if
       end-if

       add 1 to #fk

    end-while
    else
       print '  ' (+1,4)
    end-if

  do Add-RV1-to-Level1
  do Initialize-RV1-Data

end-procedure


begin-procedure Print-RV2-Data

  next-listing need=9

  print $Surname               (+2,3)
  print ','                    (0,0)
  print $FirstName             (0,+1)
  print $Initial               (0,+1)
  print $Ctx910as_Sin          (0,50)
  print $SIN                   (0,56) edit xxx-xxx-xxx
  print $Ctx910as_Emplid       (0,71)
  print $EmplID                (0,80)
  print $Ctx910as_Location     (0,90)
  print $Location              (0,101)
  print $Ctx910as_Department   (0,116)
  print $DeptID                (0,129)

  print $Ctx910as_Qin_number   (+1,50)
  print $ReportingID           (0,64)
  print $Ctx910as_Slip_Process (0,90)
  print $slip_process          (0,105)
  print $Ctx910as_Num          (0,116)
  print $Seq_Num               (0,130)

  if &R.Ctx_Print_Flag = 'Y'

    do Print-Column-Headings

    move 0 to #l
    move 0 to #fl
    move 0 to #var

    while #l <= #max_RV2boxes
       get $PrBox $PrDescr #PrAmt from PrRV2_Area(#l)
                       PRV2_Box PRV2_Descr PRV2_Amt
      let $PrBox = RTRIM($PrBox,' ')
       if #l < 5
          evaluate $PrBox
            when = 'A'
            when = 'E'
            when = 'I'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99mi

            when = 'B'
            when = 'F'
            when = 'J'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,64) edit 99999999.99mi

            when = 'C'
            when = 'G'
            when = 'K'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,96) edit 99999999.99mi

            when = 'D'
            when = 'H'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,128) edit 99999999.99mi

          end-evaluate
       else
         if #PrAmt <> 0  or
           (#PrAmt = 0 and $PrBox = 'G' and $PrintZero_BxG = 'Y')
           or (#PrAmt = 0 and $PrBox = 'N' and rtrim($sin_contrb_spouse, ' ') <> '')
          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
              print $PrBox (0,50)
              print $PrDescr (0,54)
              if $PrBox = 'N'
                print $sin_contrb_spouse (0,66) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,64) edit 99999999.99mi
              end-if
          when = 2
          when = 6
          when = 10
              print $PrBox (0,82)
              print $PrDescr (0,86)
              if $PrBox = 'N'
                print $sin_contrb_spouse (0,98) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,96) edit 99999999.99mi
              end-if
          when = 3
          when = 7
          when = 11
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if $PrBox = 'N'
                print $sin_contrb_spouse (0,130) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,128) edit 99999999.99mi
              end-if
          when = 4
          when = 8
          when = 12
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              if $PrBox = 'N'
                print $sin_contrb_spouse (0,33) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,31) edit 99999999.99mi
              end-if
          when-other
              break
       end-evaluate
      end-if
     end-if

     add 1 to #l

    end-while

    if #RV2_FNCount > 0
       next-listing need=6
       print $Ctx910as_Rv2_footnote (+1,14)
       do Print-Footnote-Column-Headings

    while #fl <= #max_RV2footnotes

       get $FNBox $FNBoxText $FNSlipText #FNPriority #FNAmt
              from RV2_Footnotes(#fl) VFN_Box VFN_Box_Text VFN_Slip_Text
                                               VFN_Priority VFN_Amt

       if #FNAmt <> 0 or not isblank($FNSlipText)
       print #FNPriority (+1,32) edit 99
       print $FNBox (0,41)
       if #FNAmt <> 0
          print #FNAmt (0,48) edit 99,999,999.99mi
       end-if
       print $FNBoxText (0,73)
       print $FNSlipText (0,103)
       end-if
       add 1 to #fl

    end-while
    else
       print '  ' (+1,4)
    end-if

    if $slip_process  <> $Ctx910as_Slip_Original
      print $Ctx910as_Comments (+2,10)
      print $Amend_Comments (0,20)    WRAP 120 5 STRIP=<13> ON=<10>
    end-if

    do Initialize-RV2-Data

  end-if

end-procedure


begin-procedure Print-RV2-Summary

  next-listing need=9

  print $Ctx910as_Employee_Totals   (+2,3)
  print $Surname_Sum                (+2,3)
  print ','                         (0,0)
  print $FirstName_Sum              (0,+1)
  print $Initial_Sum                (0,+1)
  print $Ctx910as_Sin               (0,50)
  print $SIN_Sum                    (0,56) edit xxx-xxx-xxx
  print $Ctx910as_Emplid            (0,71)
  print $EmplID_Sum                 (0,80)
  print $Ctx910as_Location          (0,90)
  print $Location_Sum               (0,101)
  print $Ctx910as_Department        (0,116)
  print $DeptID_Sum                 (0,129)

  print $Ctx910as_Qin_number        (+1,50)
  print $ReportingID_Sum            (0,64)

  do Print-Column-Headings

     move 0 to #l
     move 0 to #fl
     move 0 to #var

    while #l <= #max_RV2boxes
       get $PrBox $PrDescr #PrAmt from SumRV2_Area(#l)
                       SRV2_Box SRV2_Descr SRV2_Amt
      let $PrBox = RTRIM($PrBox,' ')
       if #l < 5
          evaluate $PrBox
            when = 'A'
            when = 'E'
            when = 'I'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99mi

            when = 'B'
            when = 'F'
            when = 'J'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,64) edit 99999999.99mi

            when = 'C'
            when = 'G'
            when = 'K'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,96) edit 99999999.99mi

            when = 'D'
            when = 'H'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,128) edit 99999999.99mi

          end-evaluate
       else
         if #PrAmt <> 0  or
           (#PrAmt = 0 and $PrBox = 'G' and $PrintZero_BxG = 'Y')
           or (#PrAmt = 0 and $PrBox = 'N' and rtrim($sin_contrb_spouse_sum, ' ') <> '')
          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
              print $PrBox (0,50)
              print $PrDescr (0,54)
              if $PrBox = 'N'
                print $sin_contrb_spouse_sum (0,66) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,64) edit 99999999.99mi
              end-if
          when = 2
          when = 6
          when = 10
              print $PrBox (0,82)
              print $PrDescr (0,86)
              if $PrBox = 'N'
                print $sin_contrb_spouse_sum (0,98) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,96) edit 99999999.99mi
              end-if
          when = 3
          when = 7
          when = 11
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if $PrBox = 'N'
                print $sin_contrb_spouse_sum (0,130) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,128) edit 99999999.99mi
              end-if
          when = 4
          when = 8
          when = 12
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              if $PrBox = 'N'
                print $sin_contrb_spouse_sum (0,33) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,31) edit 99999999.99mi
              end-if
          when-other
              break
       end-evaluate
      end-if
     end-if

     add 1 to #l

    end-while

    if #RV2_FNCount_Sum > 0
       next-listing need=6
       print $Ctx910as_Rv2_footnote (+1,14)
       do Print-Footnote-Column-Headings

    while #fl <= #max_RV2footnotes

       get $FNBox $FNBoxText $FNSlipText #FNPriority #FNAmt
              from SumRV2_Footnotes(#fl) SVFN_Box SVFN_Box_Text SVFN_Slip_Text
                                               SVFN_Priority SVFN_Amt

       if #FNAmt <> 0 or not isblank($FNSlipText)
       print #FNPriority (+1,32) edit 99
       print $FNBox (0,41)
       if #FNAmt <> 0
          print #FNAmt (0,48) edit 99,999,999.99mi
       end-if
       print $FNBoxText (0,73)
       print $FNSlipText (0,103)
       end-if
       add 1 to #fl

    end-while
    else
       print '  ' (+1,4)
    end-if

  do Add-RV2-to-Level1
  do Initialize-RV2-Data

end-procedure


begin-procedure Print-Column-Headings

  print $Ctx910as_Box#   (+2,10)
  print $Ctx910as_Descr  (0,15)
  print $Ctx910as_Amount (0,36)
  print $Ctx910as_Box#   (0,49)
  print $Ctx910as_Descr  (0,54)
  print $Ctx910as_Amount (0,69)
  print $Ctx910as_Box#   (0,81)
  print $Ctx910as_Descr  (0,86)
  print $Ctx910as_Amount (0,101)
  print $Ctx910as_Box#   (0,113)
  print $Ctx910as_Descr  (0,118)
  print $Ctx910as_Amount (0,133)

end-procedure

begin-procedure Print-Footnote-Column-Headings

  print $Ctx910as_Priority     (+1,29)
  print $Ctx910as_Footnote     (0,39)
  print $Ctx910as_Amount       (0,52)

  if $TaxformID = 'A'
     print $Ctx910as_Bx38_code (0,62)
  end-if
  print $Ctx910as_Footnote_msg (0,73)

end-procedure

begin-procedure Initialize-T4-Data

   move ' ' to $CPPExempt
   move ' ' to $UIExempt
   move ' ' to $PPIPExempt
   move ' ' to $PrintZero_Bx26
   move ' ' to $PrintZero_Bx24
   move 0 to #i
   move 0 to #fi
   let #InitAmt = 0
   let $InitText = ' '
   let $Amend_Comments = ' '

   while #i < #max_T4boxes
      put #InitAmt into PrT4_Area(#i) PT4_Amt
      add 1 to #i
   end-while

end-procedure

begin-procedure Initialize-T4A-Data

   move 0 to #j
   move 0 to #fj
   let #InitAmt = 0
   let $InitText = ' '
   let $Amend_Comments = ' '

   while #j < #max_T4Aboxes
      put #InitAmt into PrT4A_Area(#j) PT4A_Amt
      add 1 to #j
   end-while

   while #fj < #max_T4Afootnotes
      put #InitAmt $InitText into T4A_Footnotes(#fj) AFN_Amt AFN_Slip_Text
      add 1 to #fj
   end-while

   move 0 to #T4A_FNCount

end-procedure

begin-procedure Initialize-RV1-Data

   let $TextG = ''
   let $PrintZero_BxG = ' '
   move 0 to #k
   move 0 to #fk
   let #InitAmt = 0
   let $InitText = ' '
   let $Code = ' '
   let $Amend_Comments = ' '

   while #k < #max_RV1boxes
      put #InitAmt into PrRV1_Area(#k) PRV1_Amt
      add 1 to #k
   end-while

   while #fk < #max_RV1footnotes
      put #InitAmt $InitText into RV1_Footnotes(#fk) RFN_Amt RFN_Slip_Text
      add 1 to #fk
   end-while

   move 0 to #RV1_FNCount

end-procedure

begin-procedure Initialize-RV2-Data

   let $TextG = ''
   let $PrintZero_BxG = ' '
   move 0 to #l
   move 0 to #fl
   let #InitAmt = 0
   let $InitText = ' '
   let $sin_contrb_spouse  = ' '
   let $Amend_Comments = ' '

   while #l < #max_RV2boxes
      put #InitAmt into PrRV2_Area(#l) PRV2_Amt
      add 1 to #l
   end-while

   while #fl < #max_RV2footnotes
      put #InitAmt $InitText into RV2_Footnotes(#fl) VFN_Amt VFN_Slip_Text
      add 1 to #fL
   end-while

end-procedure


begin-procedure Initialize-T4-Summary

   move ' ' to $CPPExempt
   move ' ' to $UIExempt
   move ' ' to $PrintZero_Bx26
   move ' ' to $PrintZero_Bx24
   move 0 to #i
   move 0 to #fi
   let #InitAmt = 0
   let $InitText = ' '
   move ' ' to $Surname_Sum
   move ' ' to $FirstName_Sum
   move ' ' to $Initial_Sum
   move ' ' to $SIN_Sum
   move ' ' to $EmplID_Sum
   move ' ' to $Location_Sum
   move ' ' to $DeptID_Sum
   move ' ' to $ReportingID_Sum
   move ' ' to $CPPExempt_Sum
   move ' ' to $UIExempt_Sum
   move ' ' to $PPIPExempt_Sum
   move ' ' to $EmploymentCode_Sum
   move ' ' to $WageLossPlan_Sum
   move ' ' to $Province_Sum

   move ' ' to $T4_Plan
   move ' ' to $T4_Plan_Sum

   while #i < #max_T4boxes
      put #InitAmt into SumT4_Area(#i) ST4_Amt
      add 1 to #i
   end-while

end-procedure

begin-procedure Initialize-T4A-Summary

   move 0 to #j
   move 0 to #fj
   let #InitAmt = 0
   let $InitText = ' '
   move ' ' to $Surname_Sum
   move ' ' to $FirstName_Sum
   move ' ' to $Initial_Sum
   move ' ' to $SIN_Sum
   move ' ' to $EmplID_Sum
   move ' ' to $Location_Sum
   move ' ' to $DeptID_Sum
   move ' ' to $ReportingID_Sum
   move ' ' to $WageLossPlan_Sum
   move ' ' to $Province_Sum

   move ' ' to $T4A_Plan
   move ' ' to $T4A_Plan_Sum

   while #j < #max_T4Aboxes
      put #InitAmt into SumT4A_Area(#j) ST4A_Amt
      add 1 to #j
   end-while

   while #fj < #max_T4Afootnotes
      put #InitAmt $InitText into SumT4A_Footnotes(#fj) SAFN_Amt SAFN_Slip_Text
      add 1 to #fj
   end-while

   move 0 to #T4A_FNCount_Sum

end-procedure

begin-procedure Initialize-RV1-Summary

   let $TextG = ''
   let $PrintZero_BxG = ' '
   move 0 to #k
   move 0 to #fk
   let #InitAmt = 0
   let $InitText = ' '
   move ' ' to $Surname_Sum
   move ' ' to $FirstName_Sum
   move ' ' to $Initial_Sum
   move ' ' to $SIN_Sum
   move ' ' to $EmplID_Sum
   move ' ' to $Location_Sum
   move ' ' to $DeptID_Sum
   move ' ' to $ReportingID_Sum

   let $Code = ' '
   let $SumCode = ' '

   while #k < #max_RV1boxes
      put #InitAmt into SumRV1_Area(#k) SRV1_Amt
      add 1 to #k
   end-while

   while #fk < #max_RV1footnotes
      put #InitAmt $InitText into SumRV1_Footnotes(#fk) SRFN_Amt SRFN_Slip_Text
      add 1 to #fk
   end-while

   move 0 to #RV1_FNCount_Sum

end-procedure

begin-procedure Initialize-RV2-Summary

   let $TextG = ''
   let $PrintZero_BxG = ' '
   move 0 to #l
   move 0 to #fl
   let #InitAmt = 0
   let $InitText = ' '
   move ' ' to $Surname_Sum
   move ' ' to $FirstName_Sum
   move ' ' to $Initial_Sum
   move ' ' to $SIN_Sum
   move ' ' to $EmplID_Sum
   move ' ' to $Location_Sum
   move ' ' to $DeptID_Sum
   move ' ' to $ReportingID_Sum

   let $sin_contrb_spouse  = ' '
   let $sin_contrb_spouse_sum  = ' '

   while #l < #max_RV2boxes
      put #InitAmt into SumRV2_Area(#l) SRV2_Amt
      add 1 to #l
   end-while

   while #fl < #max_RV2footnotes
      put #InitAmt $InitText into SumRV2_Footnotes(#fl) SVFN_Amt SVFN_Slip_Text
      add 1 to #fL
   end-while

   move 0 to #RV2_FNCount_Sum

end-procedure




begin-procedure Add-T4-to-Level1

  move 0 to #i
  move 0 to #fi
  move 'T' to $Form

  while #i <= #max_T4boxes
     get $BoxNum #BoxAmount from SumT4_Area(#i) ST4_Box ST4_Amt
     if #BoxAmount <> 0
        do Add-to-Level1
     end-if
     add 1 to #i
  end-while

end-procedure

begin-procedure Add-T4A-to-Level1

  move 0 to #j
  move 0 to #fj
  move 'A' to $Form

  while #j <= #max_T4Aboxes
     get $BoxNum #BoxAmount from SumT4A_Area(#j) ST4A_Box ST4A_Amt
     if #BoxAmount <> 0
        do Add-to-Level1
     end-if
     add 1 to #j
  end-while

  while #fj <= #max_T4Afootnotes
     get $BoxNum #BoxAmount from SumT4A_Footnotes(#fj) SAFN_Box SAFN_Amt
     if #BoxAmount <> 0
        do Add-to-Level1
     end-if
     add 1 to #fj
  end-while

end-procedure

begin-procedure Add-RV1-to-Level1

  move 0 to #k
  move 0 to #fk
  move 'R' to $Form

  while #k <= #max_RV1boxes
     get $BoxNum #BoxAmount from SumRV1_Area(#k) SRV1_Box SRV1_Amt
     if #BoxAmount <> 0
        do Add-to-Level1
     end-if
     add 1 to #k
  end-while

  while #fk <= #max_RV1footnotes
     get $BoxNum #BoxAmount from SumRV1_Footnotes(#fk) SRFN_Box SRFN_Amt
     if #BoxAmount <> 0
        do Add-to-Level1
     end-if
     add 1 to #fk
  end-while

end-procedure

begin-procedure Add-RV2-to-Level1

  move 0 to #l
  move 0 to #fl
  move 'V' to $Form

  while #l <= #max_RV2boxes
     get $BoxNum #BoxAmount from SumRV2_Area(#l) SRV2_Box SRV2_Amt
     if #BoxAmount <> 0
        do Add-to-Level1
     end-if
     add 1 to #l
  end-while

  while #fl <= #max_RV2footnotes
     get $BoxNum #BoxAmount from SumRV2_Footnotes(#fl) SVFN_Box SVFN_Amt
     if #BoxAmount <> 0
        do Add-to-Level1
     end-if
     add 1 to #fl
  end-while

end-procedure

begin-procedure Add-to-Level1

  move 0 to #lev1
  move 300 to #max_lev1

  while #lev1 <= #max_lev1
    get $Lev1Form $Lev1Box from L1_Totals(#lev1) L1_Form L1_BoxNum
    let $Lev1Form = RTRIM($Lev1Form,' ')
    let $Lev1Box = RTRIM($Lev1Box,' ')
    let $BoxNum = RTRIM($BoxNum,' ')

    if $Lev1Form = $Form and $Lev1Box = $BoxNum
       array-add #BoxAmount to L1_Totals(#lev1) L1_BoxAmt
       break
    else
       if $Lev1Form = '' and $Lev1Box = ''
         put $Form $BoxNum #BoxAmount into L1_Totals(#lev1) L1_Form
                                                 L1_BoxNum L1_BoxAmt
         break
       else
          add 1 to #lev1
       end-if
    end-if
  end-while

end-procedure

begin-procedure Add-Level1-to-Level2

  move 0 to #i
  move 300 to #max_i

  while #i <= #max_i
     get $Form_L1 $BoxNum_L1 #BoxAmt_L1
                     from L1_Totals(#i) L1_Form L1_BoxNum L1_BoxAmt

     if $BoxNum_L1 = '' or $BoxNum_L1 = ' '
       break
     else
       move 0 to #j
       move 300 to #max_j

       while #j <= #max_j
         get $Form_L2 $BoxNum_L2 from L2_Totals(#j) L2_Form L2_BoxNum
         if $Form_L1 = $Form_L2  and $BoxNum_L1 = $BoxNum_L2
            array-add #BoxAmt_L1 to L2_Totals(#j) L2_BoxAmt
            break
         else
            if ($Form_L2 = '' or $Form_L2 = ' ') and
               ($BoxNum_L2 = '' or $BoxNum_L2 = ' ')
                 put $Form_L1 $BoxNum_L1 #BoxAmt_L1  into
                    L2_Totals(#j) L2_Form L2_BoxNum L2_BoxAmt
                 break
            else
               add 1 to #j
            end-if
         end-if
       end-while
     end-if
     add 1 to #i
  end-while

  add #EmplCount_Lev1 to #EmplCount_Lev2

end-procedure


begin-procedure Add-Level2-to-Level3

  move 0 to #i
  move 300 to #max_i

  while #i <= #max_i
     get $Form_L2 $BoxNum_L2 #BoxAmt_L2
                     from L2_Totals(#i) L2_Form L2_BoxNum L2_BoxAmt

     if $BoxNum_L2 = '' or $BoxNum_L2 = ' '
       break
     else
       move 0 to #j
       move 300 to #max_j

       while #j <= #max_j
         get $Form_L3 $BoxNum_L3 from L3_Totals(#j) L3_Form L3_BoxNum
         if $Form_L2 = $Form_L3  and $BoxNum_L2 = $BoxNum_L3
            array-add #BoxAmt_L2 to L3_Totals(#j) L3_BoxAmt
            break
         else
            if ($Form_L3 = '' or $Form_L3 = ' ') and
               ($BoxNum_L3 = '' or $BoxNum_L3 = ' ')
                  put $Form_L2 $BoxNum_L2 #BoxAmt_L2 into L3_Totals(#j)
                                   L3_Form L3_BoxNum L3_BoxAmt
                  break
            else
               add 1 to #j
            end-if
         end-if
       end-while
     end-if
     add 1 to #i
  end-while

  add #EmplCount_Lev2 to #EmplCount_Lev3

end-procedure


begin-procedure Add-Level1-to-Level3

  move 0 to #i
  move 300 to #max_i

  while #i <= #max_i
     get $Form_L1 $BoxNum_L1 #BoxAmt_L1
                     from L1_Totals(#i) L1_Form L1_BoxNum L1_BoxAmt

     if $BoxNum_L1 = '' or $BoxNum_L1 = ' '
       break
     else
       move 0 to #j
       move 300 to #max_j

       while #j <= #max_j
         get $Form_L3 $BoxNum_L3 from L3_Totals(#j) L3_Form L3_BoxNum
         if $Form_L1 = $Form_L3  and $BoxNum_L1 = $BoxNum_L3
            array-add #BoxAmt_L1 to L3_Totals(#j) L3_BoxAmt
            break
         else
            if ($Form_L3 = '' or $Form_L3 = ' ') and
               ($BoxNum_L3 = '' or $BoxNum_L3 = ' ')
                 put $Form_L1 $BoxNum_L1 #BoxAmt_L1  into
                    L3_Totals(#j) L3_Form L3_BoxNum L3_BoxAmt
                 break
            else
               add 1 to #j
            end-if
         end-if
       end-while
     end-if
     add 1 to #i
  end-while

  add #EmplCount_Lev1 to #EmplCount_Lev3

end-procedure


begin-procedure Initialize-Level1-Totals

  move 0 to #i
  move 300 to #max_i
  while #i < #max_i
     put $InitForm $InitBox #InitAmt
                into L1_Totals(#i) L1_Form L1_BoxNum L1_BoxAmt
     add 1 to #i
  end-while

  move 0 to #EmplCount_Lev1

end-procedure

begin-procedure Initialize-Level2-Totals

  move 0 to #i
  move 300 to #max_i
  while #i < #max_i
     put $InitForm $InitBox #InitAmt
                into L2_Totals(#i) L2_Form L2_BoxNum L2_BoxAmt
     add 1 to #i
  end-while

  move 0 to #EmplCount_Lev2

end-procedure

begin-procedure Initialize-Level3-Totals

  move 0 to #i
  move 300 to #max_i
  while #i < #max_i
     put $InitForm $InitBox #InitAmt
                into L3_Totals(#i) L3_Form L3_BoxNum L3_BoxAmt
     add 1 to #i
  end-while

  move 0 to #EmplCount_Lev3

end-procedure


begin-procedure Print-Level1-Totals

  move 0 to #tot
  while #tot < 300
    get $TotForm $TotBox #TotAmt from L1_Totals(#tot)
                         L1_Form L1_BoxNum L1_BoxAmt
    extract $FN_Ind from $TotBox 2 1
    let $TotForm = RTRIM($TotForm, ' ')
    evaluate $TotForm

      when = 'T'
        do Create-T4-Totals

      when = 'A'
        do Create-T4A-Totals

      when = 'R'
        do Create-RV1-Totals

      when = 'V'
        do Create-RV2-Totals

    end-evaluate

    add 1 to #tot

  end-while

  print $Ctx910as_Employee_Count (+2,15)
  print #EmplCount_Lev1          (0,30) edit 99,999

  evaluate $TaxformID
    when = 'A'
        do Print-T4A-Totals
     when = 'R'
        do Print-RV1-Totals
     when = 'T'
        do Print-T4-Totals
     when = 'V'
        do Print-RV2-Totals
  end-evaluate

  do Initialize-Level1-Totals
  do Initialize-T4-Data
  do Initialize-T4A-Data
  do Initialize-RV1-Data
  do Initialize-RV2-Data

end-procedure

begin-procedure Print-Level2-Totals

  move 0 to #tot
  while #tot < 300
    get $TotForm $TotBox #TotAmt from L2_Totals(#tot)
                         L2_Form L2_BoxNum L2_BoxAmt
    extract $FN_Ind from $TotBox 2 1
    let $TotForm = RTRIM($TotForm, ' ')
    evaluate $TotForm

      when = 'T'
        do Create-T4-Totals

      when = 'A'
        do Create-T4A-Totals

      when = 'R'
        do Create-RV1-Totals

      when = 'V'
        do Create-RV2-Totals

    end-evaluate

    add 1 to #tot

  end-while

  print $Ctx910as_Employee_Count (+2,15)
  print #EmplCount_Lev2           (0,30) edit 99,999

  evaluate $TaxformID
     when = 'A'
        do Print-T4A-Totals
     when = 'R'
        do Print-RV1-Totals
     when = 'T'
        do Print-T4-Totals
     when = 'V'
        do Print-RV2-Totals
  end-evaluate

  do Initialize-Level1-Totals
  do Initialize-Level2-Totals
  do Initialize-T4-Data
  do Initialize-T4A-Data
  do Initialize-RV1-Data
  do Initialize-RV2-Data

end-procedure


begin-procedure Print-Level3-Totals

  move 0 to #tot
  while #tot < 300
    get $TotForm $TotBox #TotAmt from L3_Totals(#tot)
                         L3_Form L3_BoxNum L3_BoxAmt
    extract $FN_Ind from $TotBox 2 1
    let $TotForm = RTRIM($TotForm, ' ')
    evaluate $TotForm

      when = 'T'
        do Create-T4-Totals

      when = 'A'
        do Create-T4A-Totals

      when = 'R'
        do Create-RV1-Totals

      when = 'V'
        do Create-RV2-Totals

    end-evaluate

    add 1 to #tot

  end-while

  print $Ctx910as_Employee_Count (+2,15)
  print #EmplCount_Lev3  (0,30) edit 99,999

  evaluate $TaxformID
     when = 'A'
        do Print-T4A-Totals
     when = 'R'
        do Print-RV1-Totals
     when = 'T'
        do Print-T4-Totals
     when = 'V'
        do Print-RV2-Totals
  end-evaluate

  do Initialize-Level1-Totals
  do Initialize-Level2-Totals
  do Initialize-Level3-Totals
  do Initialize-T4-Data
  do Initialize-T4A-Data
  do Initialize-RV1-Data
  do Initialize-RV2-Data

end-procedure


begin-procedure Create-T4-Totals

  if $FN_Ind = ' ' or $FN_Ind = ''
     move 0 to #box
     while #box < #max_T4boxes
       get $CkBox from PrT4_Area(#box) PT4_Box
       if RTrim($CkBox,' ') = RTrim($TotBox,' ')
          put #TotAmt into PrT4_Area(#box) PT4_Amt
          break
       else
          add 1 to #box
       end-if
     end-while

  end-if

end-procedure

begin-procedure Create-T4A-Totals

  if $FN_Ind = ' ' or $FN_Ind = ''
     move 0 to #box
     while #box < #max_T4Aboxes
       get $CkBox from PrT4A_Area(#box) PT4A_Box
       if RTrim($CkBox,' ') = RTrim($TotBox,' ')
          put #TotAmt into PrT4A_Area(#box) PT4A_Amt
          break
       else
          add 1 to #box
       end-if
     end-while
  else
     move 0 to #footnote
     while #footnote < #max_T4Afootnotes
       get $CkBox from T4A_Footnotes(#footnote) AFN_Box
       if RTrim($CkBox,' ') = RTrim($TotBox,' ')
          put #TotAmt into T4A_Footnotes(#footnote) AFN_Amt
          break
       else
          add 1 to #footnote
       end-if
     end-while
  end-if

end-procedure

begin-procedure Create-RV1-Totals

  if $FN_Ind = ' ' or $FN_Ind = ''
     move 0 to #box
     while #box < #max_RV1boxes
       get $CkBox from PrRV1_Area(#box) PRV1_Box
       if RTrim($CkBox,' ') = RTrim($TotBox,' ')
          put #TotAmt into PrRV1_Area(#box) PRV1_Amt
          break
       else
          add 1 to #box
       end-if
     end-while
  else
     move 0 to #footnote
     while #footnote < #max_RV1footnotes
       get $CkBox from RV1_Footnotes(#footnote) RFN_Box
       if RTrim($CkBox,' ') = RTrim($TotBox,' ')
          put #TotAmt into RV1_Footnotes(#footnote) RFN_Amt
          break
       else
          add 1 to #footnote
       end-if
     end-while
  end-if

end-procedure

begin-procedure Create-RV2-Totals

  if $FN_Ind = ' ' or $FN_Ind = ''
     move 0 to #box
     while #box < #max_RV2boxes
       get $CkBox from PrRV2_Area(#box) PRV2_Box
       if RTrim($CkBox,' ') = RTrim($TotBox,' ')
          put #TotAmt into PrRV2_Area(#box) PRV2_Amt
          break
       else
          add 1 to #box
       end-if
     end-while
  else
     move 0 to #footnote
     while #footnote < #max_RV2footnotes
       get $CkBox from RV2_Footnotes(#footnote) VFN_Box
       if RTrim($CkBox,' ') = RTrim($TotBox,' ')
          put #TotAmt into RV2_Footnotes(#footnote) VFN_Amt
          break
       else
          add 1 to #footnote
       end-if
     end-while
  end-if

end-procedure

begin-procedure Print-T4-Totals

  print $Ctx910as_T4_totals (+2,3)

  do Print-Total-Headings

  move 0 to #print
  while #print < #max_T4boxes
     get $PrBox $PrDescr #PrAmt from PrT4_Area(#print) PT4_Box PT4_Descr
                                                       PT4_Amt
     LET $PrBox = RTRIM($PrBox, ' ')
     evaluate #print
     when = 0
     when = 3
     when = 6
     when = 9
     when = 12
     when = 15
     when = 18
     when = 21
     when = 24
     when = 27
     when = 30
     when = 33
     when = 36
       print $PrBox (+1,6)
       print $PrDescr (0,10)
       if $PrBox = '50'
         print ' ' (0,26)
       else
         print #PrAmt (0,26) edit 99,999,999,999.99mi
       end-if

     when = 1
     when = 4
     when = 7
     when = 10
     when = 13
     when = 16
     when = 19
     when = 22
     when = 25
     when = 28
     when = 31
     when = 34
     when = 37
       print $PrBox (0,48)
       print $PrDescr (0,52)
       if $PrBox = '50'
         print ' ' (0,68)
       else
         print #PrAmt (0,68) edit 99,999,999,999.99mi
       end-if

     when = 2
     when = 5
     when = 8
     when = 11
     when = 14
     when = 17
     when = 20
     when = 23
     when = 26
     when = 29
     when = 32
     when = 35
       print $PrBox (0,90)
       print $PrDescr (0,94)
       if $PrBox = '50'
         print ' ' (0,110)
       else
         print #PrAmt (0,110) edit 99,999,999,999.99mi
       end-if

   end-evaluate

   add 1 to #print

 end-while

end-procedure


begin-procedure Print-T4A-Totals

  next-listing need=6

  print $Ctx910as_T4a_totals (+2,3)

  do Print-Total-Headings

  move 0 to #print
  while #print < #max_T4Aboxes
     get $PrBox $PrDescr #PrAmt from PrT4A_Area(#print) PT4A_Box PT4A_Descr
                                                        PT4A_Amt
     LET $PrBox = RTRIM($PrBox, ' ')
     evaluate #print
     when = 0
     when = 3
     when = 6
     when = 9
     when = 12
     when = 15
     when = 18
       print $PrBox (+1,6)
       print $PrDescr (0,10)
       if $PrBox = '36'
         print ' ' (0,26)
       else
         print #PrAmt (0,26) edit 99,999,999,999.99mi
       end-if

     when = 1
     when = 4
     when = 7
     when = 10
     when = 13
     when = 16
     when = 19
       print $PrBox (0,48)
       print $PrDescr (0,52)
       if $PrBox = '36'
         print ' ' (0,68)
       else
         print #PrAmt (0,68) edit 99,999,999,999.99mi
       end-if

     when = 2
     when = 5
     when = 8
     when = 11
     when = 14
     when = 17
     when = 20
       print $PrBox (0,90)
       print $PrDescr (0,94)
       if $PrBox = '36'
         print ' ' (0,110)
       else
         print #PrAmt (0,110) edit 99,999,999,999.99mi
       end-if

   end-evaluate
     add 1 to #print

 end-while

  next-listing need=15

  print $Ctx910as_T4a_ft_totals (+2,24)

  move 0 to #print
  move 'N' to $T4As_Printed
  while #print < #max_T4Afootnotes
    get $FNBox $FNBoxText $FNSlipText #FNAmt
       from T4A_Footnotes(#print) AFN_Box AFN_Box_Text AFN_Slip_Text AFN_Amt

    if #FNAmt <> 0
       print $FNBox (+1,28)
       print #FNAmt (0,34) edit 999,999,999.99mi
       print $FNBoxText (0,50)
       move 'Y' to $T4As_Printed
    end-if

    add 1 to #print
  end-while

  if $T4As_Printed = 'N'
     print $Ctx910as_noT4a_ft_totals (+1,28)
  end-if

end-procedure


begin-procedure Print-RV1-Totals

  next-listing need=15

  print $Ctx910as_Rv1_totals (+2,3)

  do Print-Total-Headings

  move 0 to #print
  while #print < #max_RV1boxes
     get $PrBox $PrDescr #PrAmt from PrRV1_Area(#print) PRV1_Box PRV1_Descr
                                                        PRV1_Amt
     evaluate #print
     when = 0
     when = 3
     when = 6
     when = 9
     when = 12
     when = 15
     when = 18
     when = 21
     when = 24
     when = 27
       print $PrBox (+1,6)
       print $PrDescr (0,10)
       if rtrim($PrBox, ' ') = 'CDO'
         print ' '    (0,26)
       else
         print #PrAmt (0,26) edit 99,999,999,999.99mi
       end-if

     when = 1
     when = 4
     when = 7
     when = 10
     when = 13
     when = 16
     when = 19
     when = 22
     when = 25
     when = 28
       print $PrBox (0,48)
       print $PrDescr (0,52)
       if rtrim($PrBox, ' ') = 'CDO'
         print ' '    (0,68)
       else
         print #PrAmt (0,68) edit 99,999,999,999.99mi
       end-if

     when = 2
     when = 5
     when = 8
     when = 11
     when = 14
     when = 17
     when = 20
     when = 23
     when = 26
       print $PrBox (0,90)
       print $PrDescr (0,94)
       if rtrim($PrBox, ' ') = 'CDO'
         print ' '    (0,110)
       else
         print #PrAmt (0,110) edit 99,999,999,999.99mi
       end-if

   end-evaluate

   add 1 to #print

 end-while

 print $Ctx910as_Rv1_ft_totals (+2,24)

  move 'N' to $RV1s_Printed
  move 0 to #print
  while #print < #max_RV1footnotes
    get $FNBox $FNBoxText $FNSlipText #FNAmt
       from RV1_Footnotes(#print) RFN_Box RFN_Box_Text RFN_Slip_Text RFN_Amt

    if #FNAmt <> 0
       print $FNBox (+1,28)
       print #FNAmt (0,34) edit 999,999,999.99mi
       print $FNBoxText (0,50)
       move 'Y' to $RV1s_Printed
    end-if

    add 1 to #print

  end-while

  if $RV1s_Printed = 'N'
     print $Ctx910as_Norv1_ft_totals (+1,28)
  end-if

end-procedure

begin-procedure Print-RV2-Totals

  next-listing need=15

  print $Ctx910as_Rv2_totals (+2,3)

  do Print-Total-Headings

  move 0 to #print
  while #print < #max_RV2boxes
     get $PrBox $PrDescr #PrAmt from PrRV2_Area(#print) PRV2_Box PRV2_Descr
                                                        PRV2_Amt
     evaluate #print
     when = 0
     when = 3
     when = 6
     when = 9
     when = 12
     when = 15
       print $PrBox (+1,6)
       print $PrDescr (0,10)
       if rtrim($PrBox, ' ') = 'N'
         print ' '    (0,26)
       else
         print #PrAmt (0,26) edit 99,999,999,999.99mi
       end-if

     when = 1
     when = 4
     when = 7
     when = 10
     when = 13
     when = 16
       print $PrBox (0,48)
       print $PrDescr (0,52)
       if rtrim($PrBox, ' ') = 'N'
         print ' '    (0,68)
       else
         print #PrAmt (0,68) edit 99,999,999,999.99mi
       end-if

     when = 2
     when = 5
     when = 8
     when = 11
     when = 14
       print $PrBox (0,90)
       print $PrDescr (0,94)
       if rtrim($PrBox, ' ') = 'N'
         print ' '    (0,110)
       else
         print #PrAmt (0,110) edit 99,999,999,999.99mi
       end-if

   end-evaluate

   add 1 to #print

 end-while

  print $Ctx910as_Rv2_ft_totals (+2,24)

  move 'N' to $RV2s_Printed
  move 0 to #print
  while #print < #max_RV2footnotes
    get $FNBox $FNBoxText $FNSlipText #FNAmt
       from RV2_Footnotes(#print) VFN_Box VFN_Box_Text VFN_Slip_Text VFN_Amt

    if #FNAmt <> 0
       print $FNBox (+1,28)
       print #FNAmt (0,34) edit 999,999,999.99mi
       print $FNBoxText (0,50)
       move 'Y' to $RV2s_Printed
    end-if

    add 1 to #print
  end-while

  if $RV2s_Printed = 'N'
     print $Ctx910as_Norv2_ft_totals (+1,28)
  end-if

end-procedure

begin-procedure Print-Slip-Total-Line

  print $Ctx910as_Slip_totals   (+2,3)
  evaluate $TaxformID
    when = 'A'
      print $Ctx910as_T4A_suppl (0,+2)
    when = 'R'
      print $Ctx910as_Rv1_slip  (0,+2)
    when = 'T'
      print $Ctx910as_T4_suppl  (0,+2)
    when = 'V'
      print $Ctx910as_Rv2_slip  (0,+2)
    when-other
      break
  end-evaluate

end-procedure


begin-procedure Print-Company-Total-Line

  print $Ctx910as_Comp_totals     (+2,3)
  print $CurrentCompany           (0,+2)

end-procedure


begin-procedure Print-Province-Total-Line

  print $Ctx910as_Province_totals (+2,3)
  print $CurrentProvince          (0,+2)

end-procedure


begin-procedure Print-WLP-Total-Line

  print $Ctx910as_WLP_totals      (+2,3)
  print $CurrentWLP               (0,+2)

end-procedure


begin-procedure Print-Province-Heading

  print $Ctx910as_Province        (+1,3)
  print $Province                 (0,+2)

end-procedure


begin-procedure Print-WLP-Heading

  print $Ctx910as_WLP             (+1,3)
  print $WLP                      (0,+2)

end-procedure


begin-procedure Print-Total-Headings

   print $Ctx910as_Box#   (+1,5)
   print $Ctx910as_Descr  (0,12)
   print $Ctx910as_Amount (0,32)
   print $Ctx910as_Box#   (0,47)
   print $Ctx910as_Descr  (0,54)
   print $Ctx910as_Amount (0,74)
   print $Ctx910as_Box#   (0,89)
   print $Ctx910as_Descr  (0,96)
   print $Ctx910as_Amount (0,116)

end-procedure


begin-procedure Print-ReportID-Header

  evaluate #SummaryLevel
     when = 0                        !Slip
        if $TaxformID = 'T'
          print $Ctx910as_Province      (+1,1)
          print $Province_Prior         (0,19)
          print $Ctx910as_Wagels_plan   (+1,1)
          print $WageLossPlan_Prior     (0,19)
        else
          if $TaxformID = 'A'
            print $Ctx910as_Wagels_plan (+1,1)
            print $WageLossPlan_Prior   (0,19)
          end-if
        end-if
        break
     when = 1                        !WLP
        if $TaxformID = 'T'
          print $Ctx910as_Province       (+1,1)
          print $Province_Prior          (0,19)
          print $Ctx910as_Wagels_plan    (+1,1)
          print $WageLossPlan_Prior      (0,19)
        else
          if $TaxformID = 'A'
            print $Ctx910as_Wagels_plan  (+1,1)
            print $WageLossPlan_Prior    (0,19)
          end-if
        end-if
        break
     when = 2                        !Province
        if $TaxformID = 'T'
          print $Ctx910as_Province      (+1,1)
          print $Province_Prior         (0,19)
        end-if
        break
     when = 3                        !Company
        break
     when-other
        break
  end-evaluate

  let #SummaryLevel = 0

end-procedure


begin-procedure Convert-Parameters

  move $RC_CAN_YE.Audit_Ind       to  $RptForm

  if $RptForm = 'X'

       let $RptForm = 'TARV'
       let $Taxform1 = 'T'
       let $Taxform2 = 'A'
       let $Taxform3 = 'R'
       let $Taxform4 = 'V'
  else

       let $Taxform1 = $RptForm
       let $Taxform2 = $RptForm
       let $Taxform3 = $RptForm
       let $Taxform4 = $RptForm

  end-if

end-procedure


begin-procedure Cleanup-Temp-Table

begin-SQL on-error=Ignore

  DELETE FROM PS_R_CTX910AS_TMP;

end-SQL

begin-SQL on-error=Ignore

  DELETE FROM PS_R_CTX910AS_TMP2;

end-SQL

end-procedure


begin-procedure Delete-Exception-Table

begin-SQL on-error=Ignore

  DELETE FROM PS_R_CTX910AS_TMP3;

end-SQL

end-procedure


begin-procedure Print-Exception-EE

begin-SELECT

EE.COMPANY               (+1,1) on-break level=1 before=Except-Company-Hdr
EE.TAXFORM_ID

  evaluate &EE.taxform_Id
    when = 'A'
      let $TaxfomID_Except = $Ctx910as_T4a_suppl
    when = 'T'
      let $TaxfomID_Except = $Ctx910as_T4_suppl
    when-other
      break
  end-evaluate

  print $TaxfomID_Except (,16)   on-break level=2 skiplines=1


EE.EMPLID                (,36)
EE.SLIP_SURNAME
EE.SLIP_FIRST_NAME
EE.SLIP_INITIAL

  let $Slip_Surname_Except   = rtrim(&EE.SLIP_SURNAME, ' ')
  let $Slip_Firstname_Except = rtrim(&EE.SLIP_FIRST_NAME, ' ')
  let $Slip_MI_Except        = rtrim(&EE.SLIP_INITIAL, ' ')

  print $Slip_Surname_Except     (,51)
  print ','                      (0,0)
  print $Slip_Firstname_Except   (0,+1)
  print $Slip_MI_Except          (0,+1)


FROM PS_R_CTX910AS_TMP3  EE
   ORDER BY EE.COMPANY ASC, EE.TAXFORM_ID ASC, EE.EMPLID ASC, EE.SLIP_SURNAME ASC, EE.SLIP_FIRST_NAME ASC

end-SELECT
end-procedure


begin-procedure Except-Company-Hdr

  new-page
  print $Ctx910as_Company_Except       (4,1)
  print $Ctx910as_TaxformID_Except     (,16)
  print $Ctx910as_Emplid_Except        (,36)
  print $Ctx910as_Name_Except          (,51)
  print ' '                            (+1,)

end-procedure


begin-procedure Check-Hdr

  if $PrintExceptHdr    = 'Y'
    let $PrintAuditHdr  = 'N'
    move $Ctx910as_Title_Except_Rpt to $ReportTitle
  else
    let $PrintAuditHdr  = 'Y'
  end-if

end-procedure


begin-procedure Ignore
  !Dummy procedure to avoid error if no records to delete
end-procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#ifdef PRCSSCHD
#Include 'ctxrctl1.sqc' ! Get-Can-Tax YE Report Parameters
#Include 'stdapi.sqc'    !Update Process API
#Include 'txrnctl1.sqc'  !Process Scheduler Run Controls
#endif
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

