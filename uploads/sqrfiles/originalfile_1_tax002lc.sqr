!******************************************************************
!  TAX002LC:  Quarterly State Tax Report - Employee Wage Listing  *
!             Local Tax Version                                   *
!******************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/10/23:13:10:34                                 !
!       $Release:  HR9                                                 !
!      $Revision:  103                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#Include 'setup31.sqc'  !printer and page-size initialization
#Include 'usarpt.sqc'   !Get USA variables

begin-report
  do Init-Report

  do Process-Main

  do Stdapi-Term

end-report

begin-procedure Init-Report
  display 'Quarterly Employee Wage Listing - Local Taxes'

  do Init-DateTime
  do Init-Number

  do Get-Tax-Reporting-Run-Controls

  move $PeriodEndDate to $AsOfDate  !for included procedures
  do Get-Current-DateTime
  do Get-Calendar-Year-Id
  do Stdapi-Init

end-procedure

begin-heading 16
  if $Company <> $priorCompany
    do Get-Company-Data
    move $Company to $priorCompany
    move ''       to $priorState  !force change in State below
  end-if
  if rtrim($State, ' ') <> $priorState
    do Get-State-Tax-Data  !Employer_ID_SWT, Employer_ID_SUT, State Name
    let $priorState = rtrim($State, ' ')
    move ''       to $priorLocality  !force change in Locality below
    move 0 to #PAGE_NUM
  end-if
  if $Locality <> $priorLocality
    do Get-Local-Tax-Data  !Employer_ID, Locality name
    move $Locality to $priorLocality
    move 0 to #PAGE_NUM
  end-if
  add 1 to #PAGE_NUM

  let $StateName = RTRIM($StateName, ' ')
  let $StateLocalNames = $StateName || '   ' || $Localname
  let $StateLocalInfo  = substr($StateLocalNames,1,45)
  print $StateLocalInfo    (5,2)

  do Format-DateTime($PeriodEndDate, $out, {DEFDATE}, '', '')
  print $out               (0,51)
  print 'Page'             (0,70)
  do Format-Number(#PAGE_NUM, $out, '999')
  print $out               (0,+2)
  print $CompanyName       (+3,12)
  print $compnyadd1        (+1,12)
  let $field = RTRIM($compnycity, ' ')
  print $field             (+1,12)
  print &CT.State          ()      edit ,bxx
  move  &CT.Postal                to $Zip
  move  &CT.Postal                to $ZipExtsn ~~~~~~xxxx
  if instr($Zip,'-',6) = 0
  and $ZipExtsn <> '    '
    let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
  end-if
  print $Zip                      (0,+2)
  print &Employer_ID_LWT   (+2,12)

  print 'SSN'              (+3,2,11)
  print 'Name'             (+0,+2,20)
  print 'Wages'            (+0,40)
  print 'Tax Withheld'     (+0,50)
end-heading

begin-footing 6
  do Format-Number(#PgTotGrs, $out, '99999,999.99')
  print $out (+2,35)
  do Format-Number(#PgTotLWTax, $out, '99999,999.99')
  print $out (0,+3)
  move 0 to #PgTotGrs
  move 0 to #PgTotLWTax
end-footing

begin-procedure Process-Main

  Show 'Calendar Year: ' $Calendar_Year_Id
  Show 'Balance  Year: ' &TX.Balance_Year
  Show 'Balance  Qtr:  ' &TX.Balance_Qtr
  Show 'Asofdate:      ' $Asofdate

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

begin-SELECT
C.COMPANY  () on-break print=never level=1 procedure=Company-Change
C.STATE    () on-break print=never level=2 procedure=State-Change
  if rtrim(&C.State, ' ') <> $prior_State1
    move 'Y' to $firstMonthCd1
  end-if
C.LOCALITY () on-break print=never level=2 procedure=Locality-Change
  if &C.Locality <> $prior_Locality1
    move 'Y' to $firstMonthCd1
  end-if
C.EMPLID
  if &C.EmplID <> $prior_EmplID1
    move 'Y' to $firstMonthCd1
  end-if
C.BALANCE_YEAR
C.BALANCE_QTR
C.BALANCE_PERIOD
C.TXGRS_QTD
C.TAX_QTD
C.TAX_CLASS

D1.NATIONAL_ID
PN.NAME

  move &C.Company  to $Company  !for Heading
  let $State = rtrim(&C.State, ' ')
  move &C.Locality to $Locality !for Heading

  if $firstMonthCd1 = 'Y'
    if &C.TxGrs_QTD > 0
      do Process-Tax-Balance
    end-if
    move 'N' to $firstMonthCd1
  end-if

  if #count = 10
    display '.' noline
    move 0 to #count
  end-if
  add 1 to #count

  move &C.EmplID    to $prior_EmplID1
  let $prior_State1 = rtrim(&C.State, ' ')
  move &C.Locality  to $prior_Locality1

FROM  PS_TAX_BALANCE C, PS_NAMES PN, PS_PERS_NID D1, PS_COMPANY_TBL A
WHERE C.EMPLID            = D1.EMPLID
  AND D1.COUNTRY          = {NID_COUNTRY}
  AND D1.NATIONAL_ID_TYPE = $PAYROLL_NID_TYPE
  AND PN.EMPLID           = C.EMPLID
  AND PN.NAME_TYPE = 'PRI'
  AND PN.EFFDT =
      (SELECT MAX(PX.EFFDT)
       FROM   PS_NAMES PX
       WHERE  PX.EMPLID    = PN.EMPLID
         AND  PX.NAME_TYPE = PN.NAME_TYPE
         AND  PX.EFFDT    <= $AsOfDate)
  AND C.STATE             <> '$U'
  AND C.LOCALITY          <> ' '
  AND C.TAX_CLASS     IN ('H','P','B')
  AND C.BALANCE_ID        = $Calendar_Year_Id
  AND C.BALANCE_YEAR      = &TX.Balance_Year
  AND C.BALANCE_QTR       = &TX.Balance_Qtr
  AND A.COMPANY = C.COMPANY
  AND A.EFF_STATUS = 'A'
  AND A.TAX_REPORT_TYPE = '2'
  AND A.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
       WHERE  COMPANY = A.COMPANY
         AND  EFFDT  <= $AsOfDate)
ORDER BY C.COMPANY, C.STATE, C.LOCALITY, D1.NATIONAL_ID, C.TAX_CLASS,
         C.BALANCE_YEAR, C.BALANCE_QTR, C.BALANCE_PERIOD DESC
end-SELECT
end-procedure

begin-procedure Process-Tax-Balance
  if &C.EmplID <> $priorEmplID
    move &C.EmplID to $priorEmplID
    move $SSN   to $S123 xxx       !isolate first 3 digits

    if $S123 = &Temp_SSN_Mask or RTRIM(&D1.NATIONAL_ID, ' ') = ''
      print 'Applied For'          (+1,2)
    else
      print &D1.NATIONAL_ID        (+1,2)  edit xxxbxxbxxxx
    end-if
    print &PN.Name                  (0,15,20)
  end-if

  print &C.TxGrs_QTD               (0,35) edit 99999,999.99
  print &C.Tax_QTD                 (0,+3) edit 99999,999.99
  add &C.TxGrs_QTD to #PgTotGrs
  add &C.Tax_QTD to #PgTotLWTax

end-procedure

begin-procedure Company-Change
  new-page
end-procedure

begin-procedure State-Change
  new-page
end-procedure

begin-procedure Locality-Change
  new-page
end-procedure

#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getstdta.sqc'  !Get-State-Tax-Data procedure
#Include 'getlcdta.sqc'  !Get-Local-Tax-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers

#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'stdapi.sqc'    !Update Process API
