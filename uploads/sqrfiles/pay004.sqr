!************************************
!  PAY004:  Payroll Check Register  *
!************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:04:24:55                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#include 'setup32.sqc' !Printer and page-size initialization

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PAY004' to $ReportID

  do Init-DateTime
  do Init-Number
  do Stdapi-Init

  do Get-Report-Language
  move $Pay004_ReportTitle to $ReportTitle
  display $ReportTitle

  do Payroll-Report-Initialization
end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from PAY004 program ids
  do Init_Report_Translation($ReportID,$language_cd)
  do Append_Report_Translation('HR')

  do Get_Field_Information ('PAY004', 'REPORTTITLE',  $Pay004_ReportTitle, #dummy_width)
  do Get_Field_Information ('PAY004', 'FORMID',       $Pay004_FormID,      #dummy_width)
  do Get_Field_Information ('PAY004', 'SEPCHK1',      $Pay004_SepChk1,     #dummy_width)
  do Get_Field_Information ('PAY004', 'LOCNCD1',      $Pay004_LocnCd1,     #dummy_width)
  do Get_Field_Information ('PAY004', 'PAYGRP1',      $Pay004_PayGrp1,     #dummy_width)
  do Get_Field_Information ('PAY004', 'ADDRESS1',     $Pay004_Address1,    #dummy_width)
  do Get_Field_Information ('PAY004', 'CHECKNO2',     $Pay004_CheckNo2,    #dummy_width)
  do Get_Field_Information ('PAY004', 'CHECKDT2',     $Pay004_CheckDt2,    #dummy_width)
  do Get_Field_Information ('PAY004', 'CHECKAMT2',    $Pay004_CheckAmt2,   #dummy_width)
  do Get_Field_Information ('PAY004', 'SEPCHK2',      $Pay004_SepChk2,     #dummy_width)
  do Get_Field_Information ('PAY004', 'EMPNAME2',     $Pay004_EmpName2,    #dummy_width)
  do Get_Field_Information ('PAY004', 'EMPID2',       $Pay004_EmpID2,      #dummy_width)
  do Get_Field_Information ('PAY004', 'DEPT2',        $Pay004_Dept2,       #dummy_width)
  do Get_Field_Information ('PAY004', 'DEPTID2',      $Pay004_DeptId2,     #dummy_width)
  do Get_Field_Information ('PAY004', 'LOCN2',        $Pay004_Locn2,       #dummy_width)
  do Get_Field_Information ('PAY004', 'LOCNCD2',      $Pay004_LocnCd2,     #dummy_width)
  do Get_Field_Information ('PAY004', 'PAYGRP2',      $Pay004_PayGrp2,     #dummy_width)
  do Get_Field_Information ('PAY004', 'ADDRESS2',     $Pay004_Address2,    #dummy_width)
  do Get_Field_Information ('PAY004', 'GRANDTOT',     $Pay004_GrandTot,    #dummy_width)
  do Get_Field_Information ('PAY004', 'CHECKS',       $Pay004_Checks,      #dummy_width)
  do Get_Field_Information ('PAY004', 'CHECK',        $Pay004_Check,       #dummy_width)
  do Get_Field_Information ('PAY004', 'REVERSALS',    $Pay004_Reversals,   #dummy_width)
  do Get_Field_Information ('PAY004', 'REVERSAL',     $Pay004_Reversal,    #dummy_width)
  do Get_Field_Information ('PAY004', 'ONLINE',       $Pay004_Online,      #dummy_width)
  do Get_Field_Information ('PAY004', 'FINAL',        $Pay004_Final,       #dummy_width)
  do Get_Field_Information ('PAY004', 'ONLN_FNL',     $Pay004_Onln_Fnl,    #dummy_width)
  do Get_Field_Information ('PAY004', 'SOURCE',       $Pay004_Source2,     #dummy_width)
  do Get_Field_Information ('PAY004', 'COMPTOT',      $Pay004_CompTot,     #dummy_width)
  do Get_Field_Information ('PAY004', 'LEGEND',       $Pay004_Legend,      #dummy_width)

  do Get_Field_Information ('HR', 'BUS_UNIT1',  $HR_Bus_Unit1, #dummy_width)
  do Get_Field_Information ('HR', 'BUS_UNIT2',  $HR_Bus_Unit2, #dummy_width)

end-procedure


begin-heading 7
  #Include 'stdhtrpi.sqc'
  #Include 'stdhtr02.sqc'
  print $Pay004_FormID               (+1,1)
  print $Form_ID                     (0,13)

  print $Pay004_SepChk1              (+2,50)
  print $Hr_Bus_Unit1                (0,122)
  print $Pay004_LocnCd1              (0,143)
  print $Pay004_PayGrp1              (0,154)
  print $Pay004_Address1             (0,161)

  print $Pay004_CheckNo2             (+1,1)
  print $Pay004_Source2              (0,17)
  print $Pay004_CheckDt2             (0,25)
  print $Pay004_CheckAmt2            (0,37)
  print $Pay004_SepChk2              (0,50)
  print $Pay004_EmpName2             (0,56)
  print $Pay004_EmpID2               (0,85)
  print $Pay004_Dept2                (0,98)
  print $Pay004_DeptId2              (0,111)
  print $Hr_Bus_Unit2                (0,124)
  print $Pay004_Locn2                (0,131)
  print $Pay004_LocnCd2              (0,143)
  print $Pay004_PayGrp2              (0,154)
  print $Pay004_Address2             (0,161)

end-heading


begin-procedure Report

begin-SELECT
A.COMPANY () on-break print=never procedure=Company-Change
B.FORM_ID () on-break print=never procedure=FormID-Change
B.PAYCHECK_NBR
B.CHECK_DT
B.NET_PAY
B.SEPCHK
B.NAME
B.EMPLID
B.DEPTID
B.LOCATION
B.PAYGROUP
B.PAY_END_DT
B.PAYCHECK_OPTION
B.OFF_CYCLE,B.PAGE_NUM,B.LINE_NUM
B.PAYCHECK_ADDR_OPTN
B.PAY_SHEET_SRC
B.BUSINESS_UNIT

  move &B.Form_ID to $Form_ID
  move &B.PayCheck_Option to $PayCheck_Option

#ifdef DB2ALL
  move &B.PayCheck_Addr_Optn to $PayCheck_Addr_Optn xxxx
#else
#ifdef MICROSOFT
  move &B.PayCheck_Addr_Optn to $PayCheck_Addr_Optn xxxx
#else
  move &B.PayCheck_Addr_Optn to $PayCheck_Addr_Optn
#endif
#endif

  move &B.Net_Pay to #NetPay

  if &B.PayCheck_Option = '&'
    do Get-Pay-Distribution
    subtract #Deposit_Total from #NetPay
  end-if

  if &B.PayCheck_Option = 'R'
    do Get-Original-Check

    if $PayCheck_Option = '&'               !original check option
      move #Check_Amount to #NetPay
    end-if
  end-if

  if $PayCheck_Option <> 'A'
    do Print-Line
  end-if

FROM  PS_PAY_CALENDAR A,
      PS_PAY_CHECK    B
WHERE [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND B.COMPANY          = A.COMPANY
  AND B.PAYGROUP         = A.PAYGROUP
  AND B.PAY_END_DT       = A.PAY_END_DT
  AND B.PAYCHECK_OPTION <> 'A'
ORDER BY A.COMPANY,
         B.FORM_ID,
         B.PAYCHECK_NBR
end-SELECT

  move 1 to #level
  do Company-Change
  print $Pay004_GrandTot    (+2,1)
  do Format-Number(#GrandNetPay, $out, '$,$$$,$$$,$$9.99')
  print $out      (0,32)
  do Format-Number(#GrandChecks, $out, '999,999')
  print $out      (0,+2)
  if #GrandChecks <> 1

     print $Pay004_Checks   (0,+1)

  else

     print $Pay004_Check   (0,+1)

  end-if

  do Format-Number(#GrandReversals, $out, '999,999')
  print $out   (0,+2)

  if #GrandReversals <> 1
    print $Pay004_Reversals     (0,+1)
  else
    print $Pay004_Reversal      (0,+1)
  end-if

  do Reset

end-procedure


begin-procedure Print-Line

  print &B.PAYCHECK_NBR          (+1,1)  edit 099999999999999
  evaluate &B.Pay_Sheet_Src
    when = 'O'
      print $Pay004_Online (0,17)
      break
    when = 'K'
      print $Pay004_Final  (0,17)
      break
    when = 'L'
      print $Pay004_Onln_Fnl (0,17)
      break
  end-evaluate

  do Format-DateTime(&B.Check_Dt, $out, {DEFDATE}, '', '')
  print $out               (0,25)

  if &B.SepChk <> 0
    print &B.SepChk        (0,51)
  end-if

  print &B.Name            (0,54,30)
  print &B.EmplID          (0,85)
  print &B.DeptID          (0,110)
  print &B.Business_unit   (0,124)
  print &B.Location        (0,143)

  print &B.PayGroup        (0,155)

  move &A.Company  to $Company
  move &B.Check_Dt to $AsOfDate  !for included procedures
  move &B.DeptID   to $DeptID
  move &B.Business_unit to $Bu   ! Used by department name and to setid procedures
  do Get-Department-Name
  print $DeptNameAbbrv            (0,98)
  move &B.Location      to $Location
  let $Recname  = 'LOCATION_TBL'
  do Get-Setid($Bu, $Recname, $Setid)
  do Get-Location-Name
  print $LocationAbbrv            (0,131)

#ifdef DB2ALL
  move &B.PayCheck_Addr_Optn to $PayCheck_Addr_Optn xxxx
#endif
#ifdef MICROSOFT
  move &B.PayCheck_Addr_Optn to $PayCheck_Addr_Optn xxxx
#endif

  let $FieldName  = 'PAYCHECK_ADDR_OPTN'
  let $FieldValue = $PayCheck_Addr_Optn
  do Read-Translate-Table
  move $XLatShortName to $AddressOption

  print $AddressOption            (0,161)

  do Format-Number(#NetPay, $out, '99,999,999.99')
  print $out              (0,35)
  add #NetPay    to #TotalNetPay
  if &B.PayCheck_Option = 'R'
    add 1           to #TotalReversals
  else
    add 1           to #TotalChecks
  end-if
end-procedure

begin-procedure Get-Pay-Distribution
  move 0 to #Deposit_Total
begin-SELECT

PD.DEPOSIT_AMOUNT
PD.ACCOUNT_TYPE
  add &PD.Deposit_Amount to #Deposit_Total

FROM  PS_PAY_DISTRIBUTN PD
WHERE PD.COMPANY         = &A.Company
  AND PD.PAYGROUP        = &B.PayGroup
  AND PD.PAY_END_DT      = &B.Pay_End_Dt
  AND PD.OFF_CYCLE       = &B.Off_Cycle
  AND PD.PAGE_NUM           = &B.PAGE_NUM
  AND PD.LINE_NUM           = &B.LINE_NUM
  AND PD.SEPCHK          = &B.SepChk
  AND PD.ACCOUNT_TYPE   <> '$'
end-SELECT

end-procedure


begin-procedure Get-Original-Check

begin-SELECT
P1.COMPANY
P1.PAYGROUP
P1.PAY_END_DT
P1.PAYCHECK_OPTION
P1.OFF_CYCLE
P1.PAGE_NUM
P1.LINE_NUM
P1.SEPCHK

  move &P1.PayCheck_Option to $PayCheck_Option

  if $PayCheck_Option = '&'
    do Get-Original-Distribution
  end-if

FROM  PS_PAY_CHECK P1
WHERE P1.FORM_ID         = &B.Form_ID
  AND P1.PAYCHECK_NBR          = &B.PAYCHECK_NBR
  AND P1.CHECK_DT        = &B.Check_Dt
  AND P1.PAYCHECK_OPTION <> 'R'
end-SELECT

end-procedure


begin-procedure Get-Original-Distribution

  move 0 to #Check_Amount
begin-SELECT
DEPOSIT_AMOUNT
  subtract &Deposit_Amount from #Check_Amount
FROM  PS_PAY_DISTRIBUTN
WHERE COMPANY    = &P1.Company
  AND PAYGROUP   = &P1.PayGroup
  AND PAY_END_DT = &P1.Pay_End_Dt
  AND OFF_CYCLE  = &P1.Off_Cycle
  AND PAGE_NUM      = &P1.PAGE_NUM
  AND LINE_NUM      = &P1.LINE_NUM
  AND SEPCHK     = &P1.SepChk
  AND ACCOUNT_TYPE      = '$'
end-SELECT

end-procedure


begin-procedure FormID-Change
  new-page
end-procedure


begin-procedure Company-Change

  print $Pay004_CompTot     (+2,1)
  do Format-Number(#TotalNetPay, $out, '$,$$$,$$$,$$9.99')
  print $out      (0,32)
  do Format-Number(#TotalChecks, $out, '999,999')
  print $out      (0,+2)
  if #TotalChecks <> 1

    print $Pay004_Checks      (0,+1)

  else

    print $Pay004_Check       (0,+1)

  end-if

  do Format-Number(#TotalReversals, $out, '999,999')
  print $out   (0,+2)

  if #TotalReversals <> 1
    print $Pay004_Reversals    (0,+1)
  else
    print $Pay004_Reversal     (0,+1)
  end-if

  add #TotalChecks to #GrandChecks
  add #TotalReversals  to #GrandReversals
  add #TotalNetPay to #GrandNetPay
  move 0 to #TotalChecks
  move 0 to #TotalReversals
  move 0 to #TotalNetPay

  if #level = 0
    new-page
  end-if

end-procedure

!******************************************************
!  RESET: Reset printer, print 'End of Report'        *
!         Note: Uncomment ENCODE statement to force   *
!               a printer reset at end of report      *
!******************************************************

begin-procedure Reset
  move 'Y' to $End_of_Report
  if #MsgFlagW
     print $MsgTextW (+2,1)
  end-if
end-procedure

begin-footing 2
  print $Pay004_Legend (1,1)
  if $End_of_Report = 'Y'
    !*******************************************************************
    !  Use a globalized string if one was gotten from stdhdgtr         *
    !*******************************************************************
    if $stdhdg_end_rep = ''
      print 'End of Report' (+1,1) center
    else
      print $stdhdg_end_rep (+1,1) center
    end-if
 !  encode '<27>E' into $Reset
    print $Reset (+0,+1)
  end-if
end-footing

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'getsetid.sqc'  !Get-Setid procedure
#Include 'getlocnm.sqc'  !Get-Location-Name procedure
#Include 'payinit.sqc'   !Report Initialization and Timing
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
#include 'readxlat.sqc'  !Read-Translate-Table procedure
