!***********************************************************************
! BEN001: Health Plan Participants                                     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                $Date:  2006/05/23:00:08:42                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'   !Set environment

Begin-Setup
  #Include 'ptpsl177.sqc'
End-Setup


#define col_sep                  1   !Column Separator
#define col_plan_type           10   !Plan Type
#define col_ben_plan            10   !Benefit Plan
#define col_dept_id             10   !Department ID
#define col_dept_name           10   !Department Name
#define col_empl_name           40   !Employee Name
#define col_empl_id             12   !Employee ID
#define col_empl_stat            7   !Employee Status
#define col_empl_type            5   !Employee Type
#define col_reg_temp             5   !Reg/Temp
#define col_full_part            6   !Full/Part
#define col_pay_grp              6   !Pay Group
#define col_covrg               11   !Coverage
#define col_covrg_begin         11   !Coverage Begin
#define col_covrg_end           11   !Coverage End
#define col_cobra                6   !COBRA

#define col_total                5   !Totals

!***********************************************************************
Begin-Program
!***********************************************************************
  do Init-Report
  do Process-Main
  do StdAPI-Term
End-Program

!***********************************************************************
Begin-Procedure Init-Report
!***********************************************************************

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do StdAPI-Init

  if IsBlank($prcs_process_instance)
    do Ask-Values
  else
    do Get-Values
  end-if
  do Format-DateTime($AsOfDate,$AsOfDateRpt,{DEFMDY},'','')

  let  $ReportID = 'BEN001'
  do Get-Report-Language
  let $ReportTitle  = $BEN001-REPORTTITLE
  display  'Report ID: ' noline
  display  $ReportTitle

#Include 'ldplntyp.sqc' !Load-Lookup Table with Plan Types

End-Procedure


!***************************************
Begin-Procedure Ask-Values
!***************************************

  do Ask-As-Of-Date

End-Procedure


!***************************************
Begin-Procedure Get-Values
!***************************************

  do Select-Parameters
  do Get-As-Of-Date

End-Procedure


!***********************************************************************
Begin-Procedure Report-Translation
!***********************************************************************

! Read from BEN001 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('BEN001', 'REPORT_TITLE', $BEN001-REPORTTITLE, #CW)
  do Get_Field_Information ('BEN001', 'SETID',        $BEN001-SETID,       #CW)
  do Get_Field_Information ('BEN001', 'VENDOR',       $BEN001-VENDOR,      #CW)
  do Get_Field_Information ('BEN001', 'ASOFDATE',     $BEN001-ASOFDATE,    #CW)
  do Get_Field_Information ('BEN001', 'REG',          $BEN001-REG,         #CW)
  do Get_Field_Information ('BEN001', 'FULL',         $BEN001-FULL,        #CW)
  do Get_Field_Information ('BEN001', 'TEMP',         $BEN001-TEMP,        #CW)
  do Get_Field_Information ('BEN001', 'PART',         $BEN001-PART,        #CW)
  do Get_Field_Information ('BEN001', 'BEGIN',        $BEN001-BEGIN,       #CW)
  do Get_Field_Information ('BEN001', 'END',          $BEN001-END,         #CW)
  do Get_Field_Information ('BEN001', 'GROUP',        $BEN001-GROUP,       #CW)
  do Get_Field_Information ('BEN001', 'EVT_ID',       $BEN001-EVT-ID,      #CW)
  do Get_Field_Information ('BEN001', 'COMP_TOTAL',   $BEN001-COMPANY-TOT, #CW)
  do Get_Field_Information ('BEN001', 'PROV_TOTAL',   $BEN001-PROV-TOT,    #CW)
  do Get_Field_Information ('BEN1',   'EMPLOYEE',     $BEN1-EMPLOYEE,      #CW)
  do Get_Field_Information ('BEN1',   'NAME',         $BEN1-NAME,          #CW)
  do Get_Field_Information ('BEN1',   'BENEFIT',      $BEN1-BENEFIT,       #CW)
  do Get_Field_Information ('BEN1',   'DEPARTMENT',   $BEN1-DEPARTMENT,    #CW)
  do Get_Field_Information ('BEN1',   'EMPL',         $BEN1-EMPL,          #CW)
  do Get_Field_Information ('BEN1',   'PAY',          $BEN1-PAY,           #CW)
  do Get_Field_Information ('BEN1',   'STATUS',       $BEN1-STATUS,        #CW)
  do Get_Field_Information ('BEN1',   'COVERAGE',     $BEN1-COVERAGE,      #CW)
  do Get_Field_Information ('BEN1',   'COBRA',        $BEN1-COBRA,         #CW)
  do Get_Field_Information ('BEN1',   'ID',           $BEN1-ID,            #CW)
  do Get_Field_Information ('BEN1',   'PLAN_TYPE',    $BEN1-PLAN-TYPE,     #CW)
  do Get_Field_Information ('BEN1',   'PLAN',         $BEN1-PLAN,          #CW)
  do Get_Field_Information ('BEN1',   'TYPE',         $BEN1-TYPE,          #CW)

End-Procedure


!***********************************************************************
Begin-Heading 9
!***********************************************************************

#Include 'stdhtr02.sqc'

  if $Provider <> $PriorProvider OR $SetID <> $PriorSetID
    if Not IsBlank($Provider) AND Not IsBlank($Setid)
      do Get-Provider-Name
    end-if
    move $SetID    to $SetID
    move $Provider to $PriorProvider
  end-if

  print $BEN001-SETID          (4,1,10)
  print $SetID                 (0,13)
  print $BEN001-VENDOR         (+1,1,10)
  print $ProviderName          (0,13)
  print $BEN001-ASOFDATE       (+1,1,10)
  print $AsOfDateRpt           (0,13)

  print ''                (+2,1,{col_plan_type})
  print $BEN1-BENEFIT     (0,+{col_sep},{col_ben_plan})
  print $BEN1-DEPARTMENT  (0,+{col_sep},{col_dept_id})
  print $BEN1-DEPARTMENT  (0,+{col_sep},{col_dept_name})
  print $BEN1-EMPLOYEE    (0,+{col_sep},{col_empl_name})
  print $BEN1-EMPLOYEE    (0,+{col_sep},{col_empl_id})
  print $BEN1-EMPL        (0,+{col_sep},{col_empl_stat})
  print $BEN1-EMPL        (0,+{col_sep},{col_empl_type})
  print $BEN001-REG       (0,+{col_sep},{col_reg_temp})
  print $BEN001-FULL      (0,+{col_sep},{col_full_part})
  print $BEN1-PAY         (0,+{col_sep},{col_pay_grp})
  print ''                (0,+{col_sep},{col_covrg})
  print $BEN1-COVERAGE    (0,+{col_sep},{col_covrg_begin})
  print $BEN1-COVERAGE    (0,+{col_sep},{col_covrg_end})
  print $BEN1-COBRA       (0,+{col_sep},{col_cobra})

  print $BEN1-PLAN-TYPE   (+1,1,{col_plan_type})
  print $BEN1-PLAN        (0,+{col_sep},{col_ben_plan})
  print $BEN1-ID          (0,+{col_sep},{col_dept_id})
  print $BEN1-NAME        (0,+{col_sep},{col_dept_name})
  print $BEN1-NAME        (0,+{col_sep},{col_empl_name})
  print $BEN1-ID          (0,+{col_sep},{col_empl_id})
  print $BEN1-STATUS      (0,+{col_sep},{col_empl_stat})
  print $BEN1-TYPE        (0,+{col_sep},{col_empl_type})
  print $BEN001-TEMP      (0,+{col_sep},{col_reg_temp})
  print $BEN001-PART      (0,+{col_sep},{col_full_part})
  print $BEN001-GROUP     (0,+{col_sep},{col_pay_grp})
  print $BEN1-COVERAGE    (0,+{col_sep},{col_covrg})
  print $BEN001-BEGIN     (0,+{col_sep},{col_covrg_begin})
  print $BEN001-END       (0,+{col_sep},{col_covrg_end})
  print $BEN001-EVT-ID    (0,+{col_sep},{col_cobra})

  print '='               (+1,1,{col_plan_type})                  Fill
  print '='               (0,+{col_sep},{col_ben_plan})           Fill
  print '='               (0,+{col_sep},{col_dept_id})            Fill
  print '='               (0,+{col_sep},{col_dept_name})          Fill
  print '='               (0,+{col_sep},{col_empl_name})          Fill
  print '='               (0,+{col_sep},{col_empl_id})            Fill
  print '='               (0,+{col_sep},{col_empl_stat})          Fill
  print '='               (0,+{col_sep},{col_empl_type})          Fill
  print '='               (0,+{col_sep},{col_reg_temp})           Fill
  print '='               (0,+{col_sep},{col_full_part})          Fill
  print '='               (0,+{col_sep},{col_pay_grp})            Fill
  print '='               (0,+{col_sep},{col_covrg})              Fill
  print '='               (0,+{col_sep},{col_covrg_begin})        Fill
  print '='               (0,+{col_sep},{col_covrg_end})          Fill
  print '='               (0,+{col_sep},{col_cobra})              Fill

End-Heading

!***********************************************************************
Begin-Procedure Process-Main
!***********************************************************************

Begin-SELECT

J.COMPANY   ()   On-Break
                 PRINT=NEVER
                 LEVEL=1
                 PROCEDURE=COMPANY-CHANGE

C.SETID     ()   On-Break
                 PRINT=NEVER
                 LEVEL=2
                 PROCEDURE=PROVIDER-CHANGE

C.VENDOR_ID ()   On-Break
                 PRINT=NEVER
                 LEVEL=2
                 PROCEDURE=PROVIDER-CHANGE

  move &J.Company   to $Company
  move &C.Setid     to $Setid
  move &C.Vendor_ID to $Provider
  add 1 to #ProviderTotal

B.PLAN_TYPE
  let $Plan_Type = &B.Plan_Type
#ifdef MICROSOFT
  let $Plan_Type = Edit(&B.Plan_Type, 'XXXX')
#endif
#ifdef DB2ALL
  if Not (#UNICODE_ENABLED)
    let $Plan_Type = Edit(&B.Plan_Type, 'XXXX')
  end-if
#endif
  LOOKUP PLAN-TYPES $Plan_Type $PlanDesc
  print $PlanDesc              (+1,1,{col_plan_type})

B.BENEFIT_PLAN
  move &B.BENEFIT_PLAN to $Benefit_Plan
D.DESCRSHORT
  move &D.DESCRSHORT to $BenefitNameAbbrv
  do Get-Benefit-Name-Lang
  print $BenefitNameAbbrv      (0,12,{col_ben_plan})

J.DEPTID                       (0,23,{col_dept_id})
J.SETID_DEPT
DT.DESCRSHORT
DT.EFFDT
N.NAME
  move &DT.DESCRSHORT to $DEPTNAME_ABBRV
  if $Curr_Language_cd <> $PSoptions_language_cd
     do Get-Department-Lang
  end-if

  print $DEPTNAME_ABBRV        (0,34,{col_dept_name})
  print &N.NAME                (0,45,{col_empl_name})

J.EMPLID                       (0,86,{col_empl_id})
J.EMPL_STATUS                  (0,99,{col_empl_stat})
J.EMPL_TYPE                    (0,107,{col_empl_type})
J.REG_TEMP                     (0,113,{col_reg_temp})
J.FULL_PART_TIME               (0,119,{col_full_part})
J.PAYGROUP                     (0,126,{col_pay_grp})
J.EMPL_RCD
B.COVRG_CD
B.COVERAGE_ELECT
B.COVERAGE_ELECT_DT
B.COVERAGE_BEGIN_DT

  if &B.Coverage_Elect = 'W'
    print 'Waived'             (0,133,{col_covrg})
    do Format-DateTime(&B.Coverage_Elect_Dt, $out, {DEFDATE}, '','')
    print $out                 (0,145,{col_covrg_begin})
  else
    let $CovrgCd = &B.Covrg_Cd
    let $CovrgEffdt = $AsOfDate
    do Get-Covrg-Code-Descr
    let $HealthCoverage = $CovrgDescrShort
    print $HealthCoverage      (0,133,{col_covrg})
    do Format-DateTime(&B.Coverage_Begin_Dt, $out, {DEFDATE}, '','')
    print $out                 (0,145,{col_covrg_begin})
  end-if

  do Format-DateTime(&B.Coverage_Elect_Dt, $out1, {DEFCMP}, '', '')
  do Format-DateTime($AsOfToday, $out2, {DEFCMP},'', '')
  if $out1 > $out2
    print '*'                    ()  !signify future effective date
  end-if

B.COVERAGE_END_DT
  if not IsNull(&B.Coverage_End_Dt)
    do Format-DateTime(&B.Coverage_End_Dt, $out, {DEFDATE}, '','')
    print $out                 (0,157,{col_covrg_end})
  end-if

B.COBRA_EVENT_ID               (0,169,{col_cobra})

FROM  PS_JOB            J,
      PS_PERSON_NAME    N,
      PS_HEALTH_BENEFIT B,
      PS_VENDOR         C,
      PS_BENEF_PLAN_TBL D,
      PS_DEPT_TBL       DT

WHERE J.EFFDT = (SELECT MAX(EFFDT)
                  FROM  PS_JOB
                 WHERE  EMPLID   = J.EMPLID
                   AND  EMPL_RCD = J.EMPL_RCD
                   AND  EFFDT   <= $AsOfDate)
  AND J.EFFSEQ = (SELECT MAX(EFFSEQ)
                  FROM  PS_JOB
                 WHERE  EMPLID   = J.EMPLID
                   AND  EMPL_RCD = J.EMPL_RCD
                   AND  EFFDT    = J.EFFDT)
  AND J.HR_STATUS = 'A'
  AND N.EMPLID   = J.EMPLID
  AND B.EMPLID   = J.EMPLID
  AND B.EMPL_RCD = J.EMPL_RCD
  AND B.COVERAGE_BEGIN_DT = (SELECT MAX(COVERAGE_BEGIN_DT)
                               FROM PS_HEALTH_BENEFIT
                              WHERE EMPLID             = B.EMPLID
                                AND COBRA_EVENT_ID     = B.COBRA_EVENT_ID
                                AND EMPL_RCD           = B.EMPL_RCD
                                AND PLAN_TYPE          = B.PLAN_TYPE
                                AND BENEFIT_NBR        = B.BENEFIT_NBR
                                AND COVERAGE_BEGIN_DT <= $AsOfDate)
  AND ((B.COVERAGE_END_DT IS NULL) OR (B.COVERAGE_END_DT > $AsOfDate))
  AND B.COVERAGE_ELECT <> 'T'
  AND D.PLAN_TYPE    = B.PLAN_TYPE
  AND D.BENEFIT_PLAN = B.BENEFIT_PLAN
  AND D.EFFDT = (SELECT MAX(E.EFFDT)
                   FROM PS_BENEF_PLAN_TBL E
                  WHERE E.PLAN_TYPE    = D.PLAN_TYPE
                    AND E.BENEFIT_PLAN = D.BENEFIT_PLAN
                    AND E.EFFDT       <= $AsOfDate)
  AND C.SETID     = D.SETID
  AND C.VENDOR_ID = D.VENDOR_ID
  AND DT.SETID  = J.SETID_DEPT
  AND DT.DEPTID = J.DEPTID
  AND DT.EFFDT  = (SELECT MAX(DT1.EFFDT)
                   FROM  PS_DEPT_TBL DT1
                  WHERE  DT1.SETID     = DT.SETID
                    AND  DT1.DEPTID    = DT.DEPTID
                    AND  DT1.EFFDT <= $AsOfDate)

  AND DT.EFF_STATUS = 'A'

ORDER BY J.COMPANY ASC,
         C.SETID ASC,
         C.VENDOR_ID ASC,
         B.PLAN_TYPE ASC,
         B.BENEFIT_PLAN ASC,
         J.DEPTID ASC,
         J.EMPLID ASC,
         J.EMPL_RCD ASC

End-SELECT

  move 'Y' to $End
  do Company-Change

End-Procedure


!***********************************************************************
Begin-Procedure Company-Change
!***********************************************************************

  move 1 to #level
  do Provider-Change
  move 0 to #level

  print $BEN001-COMPANY-TOT (+2,1,16)
  do Format-Number(#CompanyTotal, $out, '99,999')
  print $out (0,20)

  move 0 to #CompanyTotal

  if ($End = 'Y')
    do Reset
  end-if

  new-page

End-Procedure


!***********************************************************************
Begin-Procedure Provider-Change
!***********************************************************************

  print $BEN001-PROV-TOT (+2,1,16)
  do Format-Number(#ProviderTotal, $out, '99,999')
  print $out (0,20)

  add #ProviderTotal to #CompanyTotal
  move 0 to #ProviderTotal

  if (#level = 0)
    new-page
  end-if

End-Procedure


!***********************************************************************
Begin-Procedure Get-Department-Lang
!***********************************************************************

Begin-SELECT
X.DESCRSHORT

  if Not IsBlank(&X.DESCRSHORT)
     move &X.DESCRSHORT to $DEPTNAME_ABBRV
  end-if

FROM  PS_DEPT_TBL_LANG X
WHERE X.SETID       = &J.SETID_DEPT
  AND X.DEPTID      = &J.DEPTID
  AND X.EFFDT       = &DT.EFFDT
  AND X.LANGUAGE_CD = $curr_language_cd

END-SELECT
End-Procedure


!***********************************************************************
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines
#Include 'getcvgcd.sqc'  !Get-Covrg-Code-Descr procedure
#Include 'getprvnm.sqc'  !Get-Provider-Name procedure
#Include 'getbennm.sqc'  !Get-Benefit-Name-Lang procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Format-DateTime procedures
#Include 'benasof.sqc'   !Ask-As-Of-Date procedure
#Include 'number.sqc'    !Format-Number procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
!***********************************************************************

