!******************************************
!  PAY015B:  Check Reconciliation Report  *
!******************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:04:30:02                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !Printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PAY015B' to $ReportID

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.
  move $Pay015b_ReportTitle to $ReportTitle
  display $ReportTitle
  do Initialization
end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation

! Read from PAY015B program id
  do Init_Report_Translation($ReportID,$curr_language_cd)

  if $Program_Read = 'Y'
    do Get_Field_Information ('PAY015B', 'REPORT_TITLE',    $Pay015b_ReportTitle,     #dummy_width)
    do Get_Field_Information ('PAY015B', 'BANK_TRNNO',      $Pay015b_Bank_TrnNo,      #dummy_width)
    do Get_Field_Information ('PAY015B', 'ACCNO',           $Pay015b_AccNo,           #dummy_width)
    do Get_Field_Information ('PAY015B', 'CHECK',           $Pay015b_Check,           #dummy_width)
    do Get_Field_Information ('PAY015B', 'AMOUNT',          $Pay015b_Amount,          #dummy_width)
    do Get_Field_Information ('PAY015B', 'CHECKDT',         $Pay015b_CheckDt,         #dummy_width)
    do Get_Field_Information ('PAY015B', 'TOTAL_ITEMS',     $Pay015b_Total_Items,     #dummy_width)
    do Get_Field_Information ('PAY015B', 'TOTAL_AMT',       $Pay015b_Total_Amt,       #dummy_width)
    do Get_Field_Information ('PAY015B', 'ISSUED_CMP_CHK',  $Pay015b_Issued_Cmp_Chk,  #dummy_width)
    do Get_Field_Information ('PAY015B', 'ISSUED_MNL_CHK',  $Pay015b_Issued_Mnl_Chk,  #dummy_width)
    do Get_Field_Information ('PAY015B', 'REVERSED_CHK',    $Pay015b_Reversed_Chk,    #dummy_width)
    do Get_Field_Information ('PAY015B', 'RECON_MNL_CHK',   $Pay015b_Recon_Mnl_Chk,   #dummy_width)
    do Get_Field_Information ('PAY015B', 'RECON_BNK_CHK',   $Pay015b_Recon_Bnk_Chk,   #dummy_width)
    do Get_Field_Information ('PAY015B', 'OUTSTANDING_CHK', $Pay015b_Outstanding_Chk, #dummy_width)
    do Get_Field_Information ('PAY015B', 'UNPRCS_MNL_CHK',  $Pay015b_Unprcs_Mnl_Chk,  #dummy_width)
    do Get_Field_Information ('PAY015B', 'LEGEND',          $Pay015b_Legend,          #dummy_width)

    let $Pay015b_Amount = lpad($Pay015b_Amount,7,' ')
  end-if

end-procedure
begin-heading 6
  #Include 'stdhdgtr.sqc'
  do Set-Main-Heading
  print $MainHead             (3)    center
  print $Pay015b_Bank_TrnNo   (4,1)
  print $TRANSIT_NUM             ()
  print $Pay015b_AccNo        (0,+3)
  print $ACCOUNT_NUM             ()
  if $SortFld <= 'C'             ! Construct 5 occurences
    print $Pay015b_Check      (+2,2)
    print $Pay015b_Amount     (0,23)
    print $Pay015b_Check      (0,36)
    print $Pay015b_Amount     (0,57)
    print $Pay015b_Check      (0,70)
    print $Pay015b_Amount     (0,91)
    print $Pay015b_Check      (0,104)
    print $Pay015b_Amount     (0,125)
    print $Pay015b_Check      (0,138)
    print $Pay015b_Amount     (0,159)
  else                           ! Construct 4 occurences
    print $Pay015b_Check      (+2,2)
    print $Pay015b_Amount     (0,23)
    print $Pay015b_CheckDt    (0,32)
    print $Pay015b_Check      (0,46)
    print $Pay015b_Amount     (0,67)
    print $Pay015b_CheckDt    (0,76)
    print $Pay015b_Check      (0,90)
    print $Pay015b_Amount     (0,111)
    print $Pay015b_CheckDt    (0,120)
    print $Pay015b_Check      (0,134)
    print $Pay015b_Amount     (0,155)
    print $Pay015b_CheckDt    (0,164)
  end-if
end-heading

begin-footing 2
  if $Totals = 'Y'
    print $Pay015b_Total_Items (1,1)
    do Format-Number(#Recons, $out, '999,999')
    print $out        ()
    print $Pay015b_Total_Amt   (0,+3)
    do Format-Number(#ReconTotal, $out, '999,999,999.99mi')
    print $out        ()
  end-if
  print $Pay015b_Legend        (2,1)
end-footing

begin-procedure Set-Main-Heading

  evaluate $SortFld
  when = 'B'
    move $Pay015b_Issued_Cmp_Chk                     to $MainHead
  when = 'C'
    move $Pay015b_Issued_Mnl_Chk                     to $MainHead
  when = 'D'
    move $Pay015b_Reversed_Chk                       to $MainHead
  when = 'E'
    move $Pay015b_Recon_Mnl_Chk                      to $MainHead
  when = 'F'
    move $Pay015b_Recon_Bnk_Chk                      to $MainHead
  when = 'G'
    move $Pay015b_Outstanding_Chk                    to $MainHead
  when = 'H'
    move $Pay015b_Unprcs_Mnl_Chk                     to $MainHead
  end-evaluate
end-procedure

begin-procedure Initialization
  do Get-Current-DateTime
end-procedure

begin-procedure Process-Main
  move 0         to #LineCount
  move 47        to #MaxLines  !maximum number of items in one column
begin-SELECT
W.TRANSIT_NUM () on-break print=never level=1 procedure=Report-Change
W.ACCOUNT_NUM () on-break print=never level=1 procedure=Report-Change
W.SORT_FLD () on-break print=never level=1 procedure=Report-Change
  move &W.TRANSIT_NUM   to $TRANSIT_NUM
  move &W.ACCOUNT_NUM   to $ACCOUNT_NUM
  if &W.SORT_Fld <> $SortFld
    move &W.SORT_Fld to $SortFld
    if &W.SORT_Fld <= 'C'
      COLUMNS 1  35  69  103  137
    else
      COLUMNS 1  45  89  133
    end-if
  end-if
W.CHECK_DT
W.PAYCHECK_NBR              (+1,1) EDIT 9000000000000000
W.NET_PAY             (0,17)  EDIT 99,999,999.99MI
W.PAY_SHEET_SRC

  if $SortFld > 'C'
    do Format-DateTime(&W.check_dt, $tempdate, {DEFCMP}, '', '')
    let $year  = substr($tempdate,1,4)
    let $month = substr($tempdate,5,2)
    let $day   = substr($tempdate,7,2)
    let $TempDate = $year||'-'||$month||'-'||$day
    print $tempdate (0,32)
    if &W.Pay_Sheet_Src = 'O' or &W.Pay_Sheet_Src = 'K' or &W.Pay_Sheet_Src = 'L'
       print &W.Pay_Sheet_Src   (0,42)
    end-if
  else
    if &W.Pay_Sheet_Src = 'O' or &W.Pay_Sheet_Src = 'K' or &W.Pay_Sheet_Src = 'L'
       print &W.Pay_Sheet_Src   (0,32)
    end-if
  end-if

  add 1          to #LineCount

  if #LineCount = #MaxLines
    NEXT-COLUMN GOTO-TOP=1 AT-END=NEWPAGE
    move 0       to #LineCount
  end-if

  add 1          to #Recons
  add &W.Net_Pay to #ReconTotal

FROM  PS_R_PAY015 W
ORDER BY TRANSIT_NUM,ACCOUNT_NUM,SORT_FLD,PAYCHECK_NBR
end-SELECT
  do Report-Change
end-procedure

begin-procedure Report-Change
  move 'Y' to $Totals
  new-page
  move 'N' to $Totals
  move 0   to #Recons
  move 0   to #ReconTotal
  move 0   to #LineCount
end-procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to a given language
#Include 'getrplng.sqc'  !Gets the report language
