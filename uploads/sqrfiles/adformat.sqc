!*********************************************************
!  ADFORMAT:  Set Global Address line strings            *
!*********************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:11:04:03                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
! Required Input:
!     $NAME                = From Global address subrecord
!     $ADDRESS2            = From Global address subrecord
!     $ADDRESS3            = From Global address subrecord
!     $ADDRESS4            = From Global address subrecord
!     $NUM1                = From Global address subrecord
!     $NUM2                = From Global address subrecord
!     $HOUSE_TYPE          = From Global address subrecord
!     $POSTAL              = From Global address subrecord
!     $CITY                = From Global address subrecord
!     $STATE               = From Global address subrecord
!     $COUNTY              = From Global address subrecord
!     $COUNTRY             = From Global address subrecord
!     $GEO_CODE            = From Global address subrecord
!     $ADDR_FIELD1         = From Global address subrecord
!     $ADDR_FIELD2         = From Global address subrecord
!     $ADDR_FIELD3         = From Global address subrecord
!     $IN_CITY_LIMIT       = From Global address subrecord
!
! Usage:  (for compacting address lines)
!
!     if $ADDLINE1 <> ''
!        print $ADDLINE1  (+2,1)
!     end-if
!     if $ADDLINE2 <> ''
!        print $ADDLINE2  (+1,1)
!     end-if
!     if $ADDLINE3 <> ''
!        print $ADDLINE3  (+1,1)
!     end-if
!     if $ADDLINE31 <> ''
!        print $ADDLINE31 (+1,1)
!     end-if
!     if $ADDLINE4 <> ''
!        print $ADDLINE4  (+1,1)
!     end-if
!     if $ADDLINE5 <> ''
!        print $ADDLINE5  (+1,1)
!     end-if
!     if $ADDLINE6 <> ''
!        print $ADDLINE6  (+1,1)
!     end-if
!
!***********************************************************************

BEGIN-PROCEDURE ADFORMAT

LET $ADDLINE1=$NAME
LET $ADDLINE2=''
LET $ADDLINE3=''
LET $ADDLINE31=''
LET $ADDLINE4=''
LET $ADDLINE5=''
LET $ADDLINE6=''
LET #Adfmt_linecount = 0
LET #Adfmt_prevline = 0
LET #Adfmt_line = 0
LET #Adfmt_count = 0
LET $Adfmt_Field = ''

do Get-Add-Format

If #Adfmt_linecount > 5
   Let $Adfmt_Field = $ADDLINE6
   LET $ADDLINE6=LTRIM(RTRIM($Adfmt_Field||' '||$COUNTRY||' '||$GEO_CODE||' '||$IN_CITY_LIMIT,' '),' ')
else
   LET $ADDLINE6=LTRIM(RTRIM($COUNTRY||' '||$GEO_CODE||' '||$IN_CITY_LIMIT,' '),' ')
End-if

END-PROCEDURE


!***********************************************************************
! COMPRESS-ADDRESS: Remove empty lines from an international address   *
! This procedure can be called after Adformat() to skip empty lines    *
!***********************************************************************

begin-procedure Compress-Address

  create-array name=intl_addr_new size=7 field=addr_line:char
  put '' into intl_addr_new(0) addr_line
  put '' into intl_addr_new(1) addr_line
  put '' into intl_addr_new(2) addr_line
  put '' into intl_addr_new(3) addr_line
  put '' into intl_addr_new(4) addr_line
  put '' into intl_addr_new(5) addr_line
  put '' into intl_addr_new(6) addr_line

  create-array name=intl_addr size=7 field=addr_line:char
  put $ADDLINE1  into intl_addr(0) addr_line
  put $ADDLINE2  into intl_addr(1) addr_line
  put $ADDLINE3  into intl_addr(2) addr_line
  put $ADDLINE31 into intl_addr(3) addr_line
  put $ADDLINE4  into intl_addr(4) addr_line
  put $ADDLINE5  into intl_addr(5) addr_line
  put $ADDLINE6  into intl_addr(6) addr_line

  let #i = 0
  let #fillLine = 0
  while (#i < 7)
    get $tempStr from intl_addr(#i) addr_line
    if rtrim($tempStr, ' ') <> ''
      put $tempStr into intl_addr_new(#fillLine) addr_line
      let #fillLine = #fillLine + 1
    end-if
    let #i = #i + 1
  end-while

  get $ADDLINE1  from intl_addr_new(0) addr_line
  get $ADDLINE2  from intl_addr_new(1) addr_line
  get $ADDLINE3  from intl_addr_new(2) addr_line
  get $ADDLINE31 from intl_addr_new(3) addr_line
  get $ADDLINE4  from intl_addr_new(4) addr_line
  get $ADDLINE5  from intl_addr_new(5) addr_line
  get $ADDLINE6  from intl_addr_new(6) addr_line

end-procedure


!********************************************************************
! Retrieve the address fields from EO_ADDR_FMT_TBL.
!********************************************************************
begin-procedure Get-Add-Format

begin-select
ADFMT.EO_ADDRESS_FIELD
ADFMT.EO_ADDR_PRINT
ADFMT.EO_ADDR_LINE
ADFMT.EO_ADDR_POSITION
ADFMT.EO_ADDR_FLD_OVR
ADFMT.EO_ADDR_PRE_SEP
ADFMT.EO_ADDR_PST_SEP

   let $eo_addr_print = LTRIM(RTRIM(&ADFMT.eo_addr_print,' '),' ')

   if $eo_addr_print = 'Y'

      let $eo_address_field = LTRIM(RTRIM(&ADFMT.eo_address_field,' '),' ')
      let $eo_addr_fld_ovr = LTRIM(RTRIM(&ADFMT.eo_addr_fld_ovr,' '),' ')
      let $eo_addr_pre_sep = LTRIM(RTRIM(&ADFMT.eo_addr_pre_sep,' '),' ')
      let $eo_addr_pst_sep = LTRIM(RTRIM(&ADFMT.eo_addr_pst_sep,' '),' ')

      evaluate $eo_address_field
         when = 'COUNTRY'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($COUNTRY,' '),' ')
            break
         when = 'ADDRESS1'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($ADDRESS1,' '),' ')
            break
         when = 'ADDRESS2'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($ADDRESS2,' '),' ')
            break
         when = 'ADDRESS3'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($ADDRESS3,' '),' ')
            break
         when = 'ADDRESS4'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($ADDRESS4,' '),' ')
            break
         when = 'NUM1'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($NUM1,' '),' ')
            break
         when = 'NUM2'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($NUM2,' '),' ')
            break
         when = 'HOUSE_TYPE'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($HOUSE_TYPE,' '),' ')
            break
         when = 'POSTAL'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($POSTAL,' '),' ')
            break
         when = 'CITY'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($CITY,' '),' ')
            break
         when = 'STATE'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($STATE,' '),' ')
            break
         when = 'COUNTY'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($COUNTY,' '),' ')
            break
         when = 'ADDR_FIELD1'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($ADDR_FIELD1,' '),' ')
            break
         when = 'ADDR_FIELD2'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($ADDR_FIELD2,' '),' ')
            break
         when = 'ADDR_FIELD3'
            Let $Adfmt_Fieldvalue = LTRIM(RTRIM($ADDR_FIELD3,' '),' ')
            break
      end-evaluate

      If $Adfmt_Fieldvalue <> ''

         Let #Adfmt_line = &ADFMT.eo_addr_line
         If #Adfmt_prevline <> #Adfmt_line and #Adfmt_prevline <> 0
            Let #Adfmt_linecount = #Adfmt_linecount + 1
            Do Adfmt-Assign-linevalue
         end-if
         Let #Adfmt_prevline = #Adfmt_line

         If $eo_addr_fld_ovr = 'Y'
            Do Adfmt-Get-Descr
            If $Adfmt_Descr <> ' '
               Let $Adfmt_Field = LTRIM(RTRIM($Adfmt_Field||' '|| $eo_addr_pre_sep || $Adfmt_Descr || $eo_addr_pst_sep,' '),' ')
            else
               Let $Adfmt_Field = LTRIM(RTRIM($Adfmt_Field||' '|| $eo_addr_pre_sep || $Adfmt_Fieldvalue || $eo_addr_pst_sep,' '),' ')
            end-if
         else
            Let $Adfmt_Field = LTRIM(RTRIM($Adfmt_Field||' '|| $eo_addr_pre_sep || $Adfmt_Fieldvalue || $eo_addr_pst_sep,' '),' ')
         end-if

      end-if

   end-if

from PS_EO_ADDR_FMT_TBL ADFMT
where ADFMT.COUNTRY = $COUNTRY ORDER BY EO_ADDR_LINE, EO_ADDR_POSITION

end-select

If #Adfmt_linecount < 6 and $Adfmt_Field <> ''
   Let #Adfmt_linecount = #Adfmt_linecount + 1
   Do Adfmt-Assign-linevalue
end-if

end-procedure


!********************************************************************
! Adformat-Assign-linevalue
!
! Purpose: Assigns the $ADDLINE value from what is stored in $Adfmt_Field
!          Depending on which line has been entered.
!
!********************************************************************
begin-procedure Adfmt-Assign-linevalue

If #Adfmt_linecount = 1
   LET $ADDLINE2=LTRIM(RTRIM($Adfmt_Field,' '),' ')
else
   If #Adfmt_linecount = 2
      LET $ADDLINE3=LTRIM(RTRIM($Adfmt_Field,' '),' ')
   else
      If #Adfmt_linecount = 3
         LET $ADDLINE31=LTRIM(RTRIM($Adfmt_Field,' '),' ')
      else
         If #Adfmt_linecount = 4
            LET $ADDLINE4=LTRIM(RTRIM($Adfmt_Field,' '),' ')
         else
            If #Adfmt_linecount = 5
               LET $ADDLINE5=LTRIM(RTRIM($Adfmt_Field,' '),' ')
            else
               If #Adfmt_linecount = 6
                  LET $ADDLINE6=LTRIM(RTRIM($Adfmt_Field,' '),' ')
               End-if
            End-if
         End-if
      End-if
   End-if
End-if

Let $Adfmt_Field = ''

end-procedure


!********************************************************************
! Adfmt-Get-Descr
!
! Purpose: Gets the Descr/xlat value if it should be used.
!
!********************************************************************
begin-procedure Adfmt-Get-Descr

do Adfmt-Get-Edittable
if $eo_edittable = ''
   do Adfmt-Get-xlatshortname
else
   do Adfmt-Get-Descrvalue
end-if


end-procedure


!********************************************************************
! Adfmt-Get-Edittable
!
! Purpose: Gets the Edittable from PSRECDEFN
!
!********************************************************************
begin-procedure Adfmt-Get-Edittable

begin-select
ADFMT2.EDITTABLE

   let $eo_edittable = LTRIM(RTRIM(&ADFMT2.edittable,' '),' ')

from PSRECFIELD ADFMT2
where ADFMT2.RECNAME = 'ADDRESS_SBR' AND ADFMT2.FIELDNAME = $eo_address_field

end-select

end-procedure


!********************************************************************
! Adfmt-Get-xlatshortname
!
! Purpose: Gets the Xlatshortname from PSXLATITE
!
!********************************************************************
begin-procedure Adfmt-Get-xlatshortname

begin-select
ADFMT3.XLATSHORTNAME

   let $Adfmt_Descr = LTRIM(RTRIM(&ADFMT3.xlatshortname,' '),' ')

from PSXLATITEM ADFMT3
where ADFMT3.FIELDNAME = $eo_address_field AND ADFMT3.FIELDVALUE = $Adfmt_Fieldvalue

end-select

end-procedure


!********************************************************************
! Adfmt-Get-Descrvalue
!
! Purpose: Gets the Descrvalue from Edittable
!
!********************************************************************
begin-procedure Adfmt-Get-Descrvalue

do Adfmt-Get-SQL
Let $Adfmt_eo_edittable = 'PS_' || $eo_edittable

begin-select
ADFMT6.DESCR

   Let $Adfmt_Descr = LTRIM(RTRIM(&ADFMT6.descr,' '),' ')

from [$Adfmt_eo_edittable] ADFMT6
[$Adfmt_sql]
end-select

end-procedure


!********************************************************************
! Adfmt-Get-SQL
!
! Purpose: Gets the SQL for building the retrieving from Edittable
!
!********************************************************************
begin-procedure Adfmt-Get-SQL

Let $Adfmt_First = 'Y'
Let $Adfmt_sql = ''

begin-select
ADFMT4.FIELDNAME

   Let $Adfmt_edit_fieldname = LTRIM(RTRIM(&ADFMT4.fieldname,' '),' ')
   Let $Adfmt_found = 'N'
   do Adfmt-Get-found

   if $Adfmt_found = 'Y'

      if $Adfmt_First = 'Y'
         Let $Adfmt_sql = $Adfmt_sql || ' WHERE '
         Let $Adfmt_First = 'N'
      else
         Let $Adfmt_sql = $Adfmt_sql || ' AND '
      end-if

      Evaluate $Adfmt_edit_fieldname
        when = 'COUNTRY'
             Let $Adfmt_Edittable_sql_fieldvalue = $COUNTRY
             Break
        when = 'ADDRESS1'
             Let $Adfmt_Edittable_sql_fieldvalue = $ADDRESS1
             Break
        when = 'ADDRESS2'
             Let $Adfmt_Edittable_sql_fieldvalue = $ADDRESS2
             Break
        when = 'ADDRESS3'
             Let $Adfmt_Edittable_sql_fieldvalue = $ADDRESS3
             Break
        when = 'ADDRESS4'
             Let $Adfmt_Edittable_sql_fieldvalue = $ADDRESS4
             Break
        when = 'NUM1'
             Let $Adfmt_Edittable_sql_fieldvalue = $NUM1
             Break
        when = 'NUM2'
             Let $Adfmt_Edittable_sql_fieldvalue = $NUM2
             Break
        when = 'HOUSE_TYPE'
             Let $Adfmt_Edittable_sql_fieldvalue = $HOUSE_TYPE
             Break
        when = 'CITY'
             Let $Adfmt_Edittable_sql_fieldvalue = $CITY
             Break
        when = 'STATE'
             Let $Adfmt_Edittable_sql_fieldvalue = $STATE
             Break
        when = 'POSTAL'
             Let $Adfmt_Edittable_sql_fieldvalue = $POSTAL
             Break
        when = 'COUNTY'
             Let $Adfmt_Edittable_sql_fieldvalue = $COUNTY
             Break
        when = 'ADDR_FIELD1'
             Let $Adfmt_Edittable_sql_fieldvalue = $ADDR_FIELD1
             Break
        when = 'ADDR_FIELD2'
             Let $Adfmt_Edittable_sql_fieldvalue = $ADDR_FIELD2
             Break
        when = 'ADDR_FIELD3'
             Let $Adfmt_Edittable_sql_fieldvalue = $ADDR_FIELD3
             Break
      End-evaluate

      Let $Adfmt_sql = $Adfmt_sql || $Adfmt_edit_fieldname || ' = ' || '''' || $Adfmt_Edittable_sql_fieldvalue || ''''

   end-if

from PSKEYDEFN ADFMT4
where ADFMT4.RECNAME = $eo_edittable AND ADFMT4.INDEXID = '_'
end-select

end-procedure


!********************************************************************
! Adfmt-Get-found
!
! Purpose: Returns Y to $Adfmt_found if the field exists.
!
!********************************************************************
begin-procedure Adfmt-Get-found

begin-select
ADFMT5.FIELDNAME

   Let $Adfmt_found = 'Y'

from PSRECFIELD ADFMT5
where ADFMT5.RECNAME = 'ADDRESS_SBR' AND ADFMT5.FIELDNAME = $Adfmt_edit_fieldname

end-select

end-procedure

