!***********************************************************************
!  TAX920PR:  Create W-2c/W-3c Print Files - Puerto Rico               *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2012, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!                                                                      *
!          $Date:  2012/03/14:11:35:16                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  872517                                              !
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'   !Set environment
#DEFINE WCOLUMN1 4      !Set up first print column of form
#DEFINE WCOLUMN2 42     !Set up mid-point column of form


begin-setup
    #Include 'setup03i.sqc'  !printer and page-size init


end-setup


begin-report

  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  display ''
  display 'Creating W-2cPR print file.'
  display ''

  date-time () hh:mi:ss &t1
  display &t1

  move 'TAX920PR' to $ReportID
  let $Program = 'W2PR'
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Initialization
  do Assign-Year-End-Variables
  if &W2C.ALIGN_COUNT > 0
    do Print-Alignment-Forms
    do Init-Values
  end-if

  move &W2C.Telephone_Nbr to $Phone
  move &W2C_INSTALL.W2C_DEF_CAL_YR  to $ER_Year
  if &W2C.W2C_REG_REPRINT  = 'R'
    do Read-EEs
  else
    do Read-Employee-Data
  end-if

  if $EmployeeFound = 'N'
    display ' '
    display '****** No Employee Records Selected ******'
    display ' '
    new-page
    print '********************************'  (+3,1)
    print '  No Employee Records Selected  '  (+1,1)
    print '********************************'  (+1,1)
  else
    if &W2C.W2C_REG_REPRINT  = 'C'
      do Update-W2C-Parameters
    else
      do Update-Reg-Reprint-Status
    end-if
    display ''
    display 'Upon successful conclusion of this program, one file will have'
    display 'been created. '
    display ''
    display 'Run the W-2cPR audit program(TAX921PR) to get'
    display 'the totals for the W-3c PR report.'
    display ''
  end-if

  date-time () hh:mi:ss &t2
  display &t2
end-procedure

begin-procedure Initialization
  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $920Date, {DEFYMD},'','')

  move $920Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear

  do Init-Values
  do Get-W2C-Run-Controls
  do Get-W2C-Parameters

  if RTRIM(&W2C.FORM_ID ,' ') = ''
    display '*********************************************************'
    display 'Form ID not specified on Report- W2c Process Parameters Panel '
    display 'Program stopped'
    display '*********************************************************'
    stop
  end-if
  move &W2C_INSTALL.W2C_DEF_CAL_YR  to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

  do Load-W2C-PRT


  move  0 to #Form#
  let $First_time = 'Y'

  move &W2C.EMPLOYEES_PER_PAGE  to #EmployeesPerPage
  if $Layout_Styple = '1VERTICAL'
    COLUMNS {WCOLUMN2}
    move 1 to #FormsPerPage
  else
    if $Layout_Style = '2VERTICAL'
      COLUMNS {WCOLUMN1}
      move 1 to #FormsPerPage
    else
      move 1 to #FormsPerPage
    end-if
  end-if

  if #EmployeesPerPage  > #FormsPerPage
    display '*********************************************************'
    display 'Employees Per Page specifed on Report- W2c Process Parameters'
    display 'Panel  is greater than the number of forms per page     '
    display 'for the Form ID selected.                                '
    display '*********************************************************'
    stop
  end-if

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

end-procedure


begin-procedure Read-Employee-Data

  move 'N' to $EmployeeFound

begin-SELECT
E.COMPANY          () ON-BREAK LEVEL=1 PRINT=NEVER BEFORE=BEFORE-COMPANY
E.W2C_ADD_EMPLID   () ON-BREAK LEVEL=2 PRINT=NEVER BEFORE=BEFORE-EMPLID
E.W2C_SSN
E.W2C_FNAME
E.W2C_MIDDLE_NAME
E.W2C_LNAME
E.W2C_SUFFIX
E.ADDRESS1
E.ADDRESS2
E.CITY
E.STATE
E.POSTAL
E.COUNTRY
E.EMPLOYER_ID_SWT
E.CONTROL_NUMBER
E.MAR_STATUS
E.SPOUSE_SSN
E.PRV_SSN
E.PRV_YE_FNAME
E.PRV_YE_MIDDLE_NAME
E.PRV_YE_LNAME
E.PRV_YE_SUFFIX
E.PRV_ADDRESS1
E.PRV_ADDRESS2
E.PRV_CITY
E.PRV_STATE
E.PRV_POSTAL
E.PRV_COUNTRY
E.PRV_MAR_STATUS
E.PRV_SPOUSE_SSN
E.PRV_CONTROL_NBR
E.W2C_BATCH_NBR
E.CALENDAR_YEAR
E.DESCRLONG

  move 'Y' to $EmployeeFound
  move &E.CALENDAR_YEAR  to $ER_Year  9999
  do Load-Amounts
  do Print-W2C
  if &W2C.W2C_REG_REPRINT  = 'C'
    do Update-W2-History
  end-if

FROM  PS_YE_W2CP_DATA E
  WHERE E.W2C_STATUS       <> 'V'
  AND W2C_TAXFORM_ID = $Taxform_ID
  [$E.Batch_Nbr]
  [$E.SelectedEEs]        !NULL string if SELECT EEs option not used
ORDER BY E.COMPANY, E.W2C_SSN
end-SELECT
end-procedure

begin-procedure Before-Company

begin-SELECT
A.W2_REPORTING_CO
A.DESCR
A.FEDERAL_EIN
A.ADDRESS1
A.ADDRESS2
A.CITY
A.STATE
A.POSTAL
A.COUNTRY
A.TAXFORM_ID
A.BUSI_TERM_DT

  move &A.Federal_EIN     to $Federal_EIN 099999999
  move $Federal_EIN       to $A.Federal_EIN xx-xxxxxxx
  move &A.Descr           to $A.Descr
  move &A.Address1        to $A.Address1
  move &A.Address2        to $A.Address2
  move &A.Country         to $A.Country
  let  $A.City            =  RTRIM(&A.City,' ')
  let  $A.State           =  RTRIM(&A.State,' ')
  move &A.POSTAL          to $A.Postal
  move &A.W2_Reporting_Co to $A.W2_Reporting_Co
  move &A.Busi_Term_Dt    to $A.Closing_Dt
  do Format-DateTime($A.Closing_Dt, $A.Closing_Date, {DEFDMY},'','')
  let $A.Closing_Date
      = substr($A.Closing_Date, 1, 2) || '     ' ||
        substr($A.Closing_Date, 4, 2) || '     ' ||
        substr($A.Closing_Date, 9, 2)

  UPPERCASE $A.Descr
  UPPERCASE $A.Address1
  UPPERCASE $A.Address2
  UPPERCASE $A.Country
  UPPERCASE $A.City


FROM  PS_W2_COMPANY A
WHERE A.COMPANY  = &E.COMPANY
  AND A.W2_REPORTING_CO <> ' '
  AND A.TAXFORM_ID       = 'W'
  AND A.CALENDAR_YEAR = (SELECT MAX(CALENDAR_YEAR)
                         FROM PS_W2_COMPANY
                         WHERE A.COMPANY = COMPANY
                           AND A.TAXFORM_ID = TAXFORM_ID
                           AND CALENDAR_YEAR <= &E.CALENDAR_YEAR)

end-SELECT
end-procedure

begin-procedure Before-EmplID

  move &E.W2C_ADD_EMPLID   to $E.EmplID

  move &E.W2C_SSN to $S123 xxx
  if $S123 = &Temp_SSN_Mask or RTRIM(&E.W2C_SSN, ' ') = ''
    move 'Applied For' to $E.SSN
  else
    move &E.W2C_SSN to $E.SSN xxx-xx-xxxx
  end-if

  move &E.PRV_SSN to $S123 xxx
  if $S123 = &Temp_SSN_Mask or RTRIM(&E.PRV_SSN, ' ') = ''
    move 'Applied For' to $E.Prv_SSN
  else
    move &E.PRV_SSN to $E.Prv_SSN xxx-xx-xxxx
  end-if

  move &E.W2C_FNAME to $E.Name
  move &E.W2C_FNAME to $E.Fname
  move &E.W2C_MIDDLE_NAME to $E.MiddleName
  move &E.W2C_LNAME to $E.Lname
  move &E.W2C_SUFFIX to $E.Suffix
  let $E.Name = rtrim($E.Name, ' ')  || ' '
  let $E.Fname = rtrim($E.Fname, ' ')  || ' '
  let $E.MiddleName = rtrim($E.MiddleName, ' ') || ' '
  let $E.Lname = rtrim($E.Lname, ' ')
  let $E.Suffix =rtrim($E.Suffix, ' ')  || ' '

  let $E.YE_New_Name = $E.Name || $E.Lname
  move $E.YE_New_Name to $YE_New_Name

  if length($E.Lname) > 28
    let $E.Lname = SUBSTR($E.Lname, 1,28)
  end-if
  let #Fullnamelength =  length($E.Name) + length($E.Lname)
  if  #Fullnamelength > 30
     let #newnamelength = 30 - (length($E.Lname) + 1)
     let $E.Name = SUBSTR($E.Name, 1, #newnamelength)
     let $E.Name = rtrim($E.Name, ' ')  || ' '
  end-if

  let $E.YE_Name = $E.Name || $E.Lname

  move $E.YE_Name to $YE_Name
  move $YE_Name to $E.YE_Name

  if $E.MiddleName <> ' '
    let $E.YE_Fname = $E.Fname || $E.MiddleName
  else
    let $E.YE_Fname = $E.Fname
  end-if

  if $E.Suffix <> ' '
    let $E.YE_Lname = $E.Lname ||  $E.Suffix
  else
    let $E.YE_Lname = $E.Lname
  end-if
  move $E.YE_Fname to $YE_Fname
  move $YE_Fname to $E.YE_Fname

  move $E.YE_LName to $YE_LName
  move $YE_LName to $E.YE_LName

  move &E.Employer_ID_SWT       to $E.Employer_ID_SWT
  move &E.Control_Number        to $E.Control_Number
  move &E.Mar_Status            to $E.Mar_Status
  move &E.Spouse_SSN            to $E.Spouse_SSN

  move &E.Address1        to $E.Address1
  move &E.Address2        to $E.Address2
  move &E.Country         to $E.Country
  let  $E.City            =  RTRIM(&E.City,' ')
  let  $E.State           =  RTRIM(&E.State,' ')
  move &E.Postal          to $E.Postal
  move &E.DescrLong       to $E.DescrLong
  let $E.Comments_A   = substr ($E.DescrLong, 1, 60)
  let $E.Comments_B   = substr ($E.DescrLong, 61, 60)

  move &E.PRV_YE_FNAME to $E.Prv_Name
  move &E.PRV_YE_FNAME to $E.Prv_Fname
  move &E.PRV_YE_MIDDLE_NAME to $E.Prv_MiddleName
  move &E.PRV_YE_LNAME to $E.Prv_Lname
  move &E.PRV_YE_SUFFIX to $E.Prv_Suffix
  let $E.Prv_Name = rtrim($E.Prv_Name, ' ')  || ' '
  let $E.Prv_Fname = rtrim($E.Prv_Fname, ' ')  || ' '
  let $E.Prv_MiddleName = rtrim($E.Prv_MiddleName, ' ') || ' '
  let $E.Prv_Lname = rtrim($E.Prv_Lname, ' ')
  let $E.Prv_Suffix =rtrim($E.Prv_Suffix, ' ')  || ' '
  let $E.Prv_W2C_Name = $E.Prv_Name || $E.Prv_Lname

  move $E.Prv_W2C_Name to $Prv_Name
  move $Prv_Name to $E.Prv_W2C_Name

  if length($E.Prv_Lname) > 30
    let $E.Prv_Lname = SUBSTR($E.Prv_Lname, 1,30)
  end-if
  let #Fullnamelength =  length($E.Prv_Name) + length($E.Prv_Lname)
  if  #Fullnamelength > 32
     let #newnamelength = 32 - (length($E.Prv_Lname) + 1)
     let $E.Prv_Name = SUBSTR($E.Prv_Name, 1, #newnamelength)
     let $E.Prv_Name = rtrim($E.Prv_Name, ' ')  || ' '
  end-if

  let $E.Prv_YE_Print_Name = $E.Prv_Name || $E.Prv_Lname

  move $E.Prv_YE_Print_Name to $Prv_YE_Print_Name
  move $Prv_YE_Print_Name to $E.Prv_YE_Print_Name

  if $E.Prv_MiddleName <> ' '
    let $E.Prv_W2C_Fname = $E.Prv_Fname || $E.Prv_MiddleName
  else
    let $E.Prv_W2C_Fname = $E.Prv_Fname
  end-if

  if $E.Prv_Suffix <> ' '
    let $E.Prv_W2C_Lname = $E.Prv_Lname || ' ' || $E.Prv_Suffix
  else
    let $E.Prv_W2C_Lname = $E.Prv_Lname
  end-if
  move $E.Prv_W2C_Fname to $Prv_Fname
  move $Prv_Fname to $E.Prv_W2C_Fname

  move $E.Prv_W2C_LName to $Prv_LName
  move $Prv_LName to $E.Prv_W2C_LName

  move &E.Prv_Address1        to $E.Prv_Address1
  move &E.Prv_Address2        to $E.Prv_Address2
  move &E.Prv_Country         to $E.Prv_Country
  let  $E.Prv_City            =  RTRIM(&E.Prv_City,' ')
  let  $E.Prv_State           =  RTRIM(&E.Prv_State,' ')
  move &E.Prv_Postal          to $E.Prv_Postal

!  move &E.Prv_Employer_ID_SWT       to $E.Prv_Employer_ID_SWT
  move &E.Prv_Control_Nbr           to $E.Prv_Control_Number
  move &E.Prv_Mar_Status            to $E.Prv_Mar_Status
  move &E.Prv_Spouse_SSN            to $E.Prv_Spouse_SSN

  uppercase $YE_Name
  uppercase $E.Address1
  uppercase $E.Address2
  uppercase $E.Country
  uppercase $E.City

  uppercase $E.Prv_Name
  uppercase $Prv_YE_Print_Name
  uppercase $E.Prv_Address1
  uppercase $E.Prv_Address2
  uppercase $E.Prv_Country
  uppercase $E.Prv_City

end-procedure


begin-procedure Print-W2C
  move 0 to #NextStateLoc
  move 0 to #HoldNextStateLoc
  move 0 to #LocalPrintCount
  move 0 to #StateSWTCount
  move 1 to #j

  while #j <= #FormsPerPage/#EmployeesPerPage  !loop for individual ee's
    do Next-Form
    do Print-ER-Data
    do Print-EE-Data
    do Print-Page1-Data
    do Print-Fed-Amounts
    add 1 to #j
  end-while

  do Init-Values


end-procedure

begin-procedure Init-Values

  move 0 to #Cost_Pension_Annuity
  move 0 to #Wages
  move 0 to #Reimbursed_Expense
  move 0 to #Tax_Withheld
  move 0 to #Retire_Fund
  move 0 to #CODA_Plans
  move 0 to #SS_Wages
  move 0 to #SS_Tax
  move 0 to #Med_Wages
  move 0 to #Med_Tax
  move 0 to #SS_Tips
  move 0 to #Tips
  move 0 to #Commissions
  move 0 to #Allowance
  move 0 to #Total_Comm_Allow_Tips
  move 0 to #TotalAbove
  move 0 to #SS_Tax_Tips
  move 0 to #Med_Tax_Tips
  move 0 to #Sal_Act_No_324
  move 0 to #HIRE_Act_Wages_Tips_PR
  move 0 to #ER_Health_Cost
  move 0 to #Charitable_Contrib
  move 0 to #Save_Money_Pgm

  move 0 to #Prv_Cost_Pension_Annuity
  move 0 to #Prv_Wages
  move 0 to #Prv_Reimbursed_Expense
  move 0 to #Prv_Tax_Withheld
  move 0 to #Prv_Retire_Fund
  move 0 to #Prv_CODA_Plans
  move 0 to #Prv_SS_Wages
  move 0 to #Prv_SS_Tax
  move 0 to #Prv_Med_Wages
  move 0 to #Prv_Med_Tax
  move 0 to #Prv_SS_Tips
  move 0 to #Prv_Tips
  move 0 to #Prv_Commissions
  move 0 to #Prv_Allowance
  move 0 to #Prv_Total_Comm_Allow_Tips
  move 0 to #Prv_TotalAbove
  move 0 to #Prv_SS_Tax_Tips
  move 0 to #Prv_Med_Tax_Tips
  move 0 to #Prv_Sal_Act_No_324
  move 0 to #Prv_HIRE_Wages_Tips
  move 0 to #Prv_ER_Health_Cost
  move 0 to #Prv_Charitable_Contrib
  move 0 to #Prv_Save_Money_Pgm

  let $Found_Wages       = 'N'
  let $Found_Commissions = 'N'
  let $Found_Allowance   = 'N'
  let $Found_Tips        = 'N'

end-procedure

begin-procedure Print-ER-Data
  let $A.Address1  = SUBSTR($A.Address1,1,30)
  let $A.Address2  = SUBSTR($A.Address2,1,30)
  if $ER_Year < '2008'
     do Print-Value($ER_Year,#L_Year_and_Form,#C_Year_and_Form,$YE_Year)
  end-if
  do Print-Value($A.Federal_EIN,#L_ER_EIN,#C_ER_EIN,$YE_ER_EIN)

  do Print-Value($A.Descr,#L_ER_Name,#C_ER_Name,$YE_ER_Name)
  do Print-Value($A.Address1,#L_ER_Address1,#C_ER_Address1,$YE_ER_Address1)
!  if RTRIM($A.Address2, ' ') <> ''
!    do Print-Value($A.Address2,#L_ER_Address2,#C_ER_Address2,$YE_ER_Address2)
    move 'N' to $LineShift
!  else
!    move 'Y' to $LineShift
!  end-if
  if #Align_Count = 0
    if $A.Country = 'USA'
      move $A.Postal           to $Zip
      move $Zip                to $ZipExtsn ~~~~~~xxxx
      if instr($Zip,'-',6) = 0
      and $ZipExtsn <> '    '
        let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
      end-if
      let #citystateziplen = length($Zip)
      let $State_City_Zip = $A.City || ', ' || $A.State || ' ' || $Zip
      if length($State_City_Zip) > 32
         let #newlen = 32 - #citystateziplen
         let $State_City_Zip = SUBSTR($A.City, 1, #newlen) || ', ' || $A.State || ' ' || $Zip
      end-if
    else
      let $State_City_Zip = $A.City || ', ' || $A.State || ' ' || $A.Country || ' ' || $A.Postal
      if length($State_City_Zip) > 32
         let #citystateziplen = length($A.State) + length($A.Country) + length($A.Postal) + 4
         let $State_City_Zip = SUBSTR($A.City, 1, 32 - #citystateziplen) || ', ' || $A.State || ' ' || $A.Country || ' ' || $A.Postal
      end-if
    end-if
  end-if
  if $LineShift = 'Y'
    let #PrintLine = #L_ER_Address2
  else
    let #PrintLine = #L_State_City_Zip
  end-if
  do Print-Value($State_City_Zip,#PrintLine,#C_State_City_Zip,$YE_ER_State_City_Zip)
  do Print-Value($A.Closing_Date, #L_ER_Closing, #C_ER_Closing, $F1B)
  do Print-Value($Phone, #L_ER_Phone, #C_ER_Phone, $F5B)

end-procedure

begin-procedure Print-EE-Data

  let $YE_W2C_Name  = SUBSTR($YE_Name,1,30)
  let $E.Address1  = SUBSTR($E.Address1,1,30)
  let $E.Address2  = SUBSTR($E.Address2,1,30)
  do Print-Value($YE_W2C_Name,#L_EE_Full_Name,#C_EE_Full_Name,$YE_W2C_EE_FullName)
  if RTRIM($E.Address1 ' ') <> ''
    let $E.Address1 = RTRIM($E.Address1, ' ')
    do Print-Value($E.Address1,#L_EE_Address1,#C_EE_Address1,$YE_W2C_EE_Address1)
    move 'Y' to $Address1
  else
    let $E.Address1 = RTRIM($E.Address2, ' ')
    do Print-Value($E.Address1,#L_EE_Address1,#C_EE_Address1,$YE_W2C_EE_Address1)
    move 'N' to $Address1
  end-if
  if RTRIM($E.Address2, ' ') <> '' and $Address1 = 'Y'
    do Print-Value($E.Address2,#L_EE_Address2,#C_EE_Address2,$YE_W2C_EE_Address2)
    move 'N' to $LineShift
  else
    move 'Y' to $LineShift
  end-if

  if #Align_Count = 0
    if $E.Country = 'USA'
      move $E.Postal           to $Zip
      move $Zip                to $ZipExtsn ~~~~~~xxxx
      if instr($Zip,'-',6) = 0
      and $ZipExtsn <> '    '
        let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
      end-if
      let #citystatesiplen = length($Zip)
      let $B4 = $E.City || ', ' || $E.State || ' ' || $Zip
      if length($B4) > 32
         let $B4 = SUBSTR($E.City, 1, 32 - #citystateziplen) || ', ' || $E.State || ' ' || $Zip
      end-if
    else
      let $B4 = $E.City || ', ' || $E.State || ' ' ||
              $E.Country || ' ' || $E.Postal
      if length($B4) > 32
         let #citystateziplen = length($E.State) + length($E.Country) + length($E.Postal) + 4
         let $B4 = SUBSTR($E.City, 1, 32 - #citystateziplen) || ', ' || $E.State || ' ' || $E.Country || ' ' || $E.Postal
      end-if
    end-if
  end-if

  if $LineShift = 'Y'
    let #PrintLine = #L_EE_Address2
  else
    let #PrintLine = #L_EE_State_City_Zip
  end-if
  do Print-Value($B4,#PrintLine,#C_EE_State_City_Zip,$YE_W2C_EE_State_City_Zip)

  do Print-Value($E.SSN,#L_EE_SSN,#C_EE_SSN,$YE_EE_SSN)
  if ($YE_New_Name <> $Prv_Name)
    do Print-Value($E.Prv_Incorrect_Name,#L_EE_Incorrect_Name,#C_EE_Incorrect_Name,$F06B)
  end-if

  if ($E.SSN <> $E.Prv_SSN)
    do Print-Value($E.Prv_SSN,#L_EE_Incorrect_SSN,#C_EE_Incorrect_SSN,$F06A)
  end-if
  do Print-Value ($E.Prv_Control_Number, #L_Prv_Control_Number, #C_Prv_Control_Number, $F27B)
  do Print-Value ($E.Comments_A, #L_Comments_A, #C_Comments_A, $F26A)
  do Print-Value ($E.Comments_B, #L_Comments_B, #C_Comments_B, $F26B)

end-procedure

begin-procedure Load-Amounts
  move 0 to #StateLocalCount
begin-SELECT
D.STATE
D.LOCALITY
D.BOX
D.CURRENT_AMOUNT
D.PRV_AMOUNT

  move &D.CURRENT_AMOUNT to #Amount
  move &D.PRV_AMOUNT to #Prv_Amount
  if #Amount <> #Prv_Amount

    let $D.Box = RTRIM(&D.BOX,' ')

    do Evaluate-PR-Boxes

  end-if

FROM  PS_YE_W2CP_AMOUNTS D
WHERE D.W2C_BATCH_NBR   = &E.W2C_BATCH_NBR
AND   D.COMPANY         = &E.COMPANY
AND   D.W2C_ADD_EMPLID  = &E.W2C_ADD_EMPLID
AND   D.CALENDAR_YEAR   = &E.CALENDAR_YEAR
ORDER BY D.STATE, D.LOCALITY, D.BOX
end-SELECT
end-procedure

begin-procedure Print-Fed-Amounts

  if #Cost_Pension_Annuity <> #Prv_Cost_Pension_Annuity
    let #Cost_Pension_Annuity_Diff = #Cost_Pension_Annuity - #Prv_Cost_Pension_Annuity

    do Format-W2c-Number(#Prv_Cost_Pension_Annuity, $out, $FCost_Pension_Annuity)         !Federal wages
    do Print-Value($out,#L_Cost_Pension_Annuity,#C_Cost_Pension_Annuity,$YE_Cost_Pension_Annuity)

    do Format-W2c-Number(#Cost_Pension_Annuity, $out, $FCost_Pension_Annuity)
    print $out (,+5)

    do Format-W2c-Number(#Cost_Pension_Annuity_Diff, $out, $FCost_Pension_Annuity)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #Wages <> #Prv_Wages
    let $Found_Wages = 'Y'
    let #Wages_Diff = #Wages - #Prv_Wages
    add #Wages to #TotalAbove
    add #Prv_Wages to #Prv_TotalAbove

    do Format-W2c-Number(#Prv_Wages, $out, $FWages)         !Federal wages
    do Print-Value($out,#L_Wages,#C_Wages,$YE_Wages)

    do Format-W2c-Number(#Wages, $out, $FWages)
    print $out (,+5)

    do Format-W2c-Number(#Wages_Diff, $out, $FWages)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #Commissions <> #Prv_Commissions
    let $Found_Commissions = 'Y'
    let #Commissions_Diff = #Commissions - #Prv_Commissions
    add #Commissions to #TotalAbove
    add #Prv_Commissions to #Prv_TotalAbove

    do Format-W2c-Number(#Prv_Commissions, $out, $FCommissions)         !Federal Commissions
    do Print-Value($out,#L_Commissions,#C_Commissions,$YE_Commissions)

    do Format-W2c-Number(#Commissions, $out, $FCommissions)
    print $out (,+5)

    do Format-W2c-Number(#Commissions_Diff, $out, $FCommissions)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #Allowance <> #Prv_Allowance
    let $Found_Allowance = 'Y'
    let #Allowance_Diff = #Allowance - #Prv_Allowance
    add #Allowance to #TotalAbove
    add #Prv_Allowance to #Prv_TotalAbove

    do Format-W2c-Number(#Prv_Allowance, $out, $FAllowance)         !Federal Allowance
    do Print-Value($out,#L_Allowance,#C_Allowance,$YE_Allowance)

    do Format-W2c-Number(#Allowance, $out, $FAllowance)
    print $out (,+5)

    do Format-W2c-Number(#Allowance_Diff, $out, $FAllowance)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #Tips <> #Prv_Tips
    let $Found_Tips = 'Y'
    let #Tips_Diff = #Tips - #Prv_Tips
    add #Tips to #TotalAbove
    add #Prv_Tips to #Prv_TotalAbove

    do Format-W2c-Number(#Prv_Tips, $out, $FTips)
    do Print-Value($out,#L_Tips,#C_Tips,$YE_Tips)

    do Format-W2c-Number(#Tips, $out, $FTips)
    print $out (,+5)

    do Format-W2c-Number(#Tips_Diff, $out, $FTips)
    print $out (,+6) edit 99999999.99ps

  end-if

  if $Found_Wages       = 'Y'
  or $Found_Commissions = 'Y'
  or $Found_Allowance   = 'Y'
  or $Found_Tips        = 'Y'

    let #TotalAbove_Diff = #TotalAbove - #Prv_TotalAbove

    do Format-W2c-Number(#Prv_TotalAbove, $out, $FTotalAbove)
    do Print-Value($out,#L_TotalAbove,#C_TotalAbove,$Comm_Allow_Tips_Total)

    do Format-W2c-Number(#TotalAbove, $out, $FTotalAbove)
    print $out (,+5)

    do Format-W2c-Number(#TotalAbove_Diff, $out, $FTotalAbove)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #Reimbursed_Expense <> #Prv_Reimbursed_Expense
    let #Reimbursed_Expense_Diff = #Reimbursed_Expense - #Prv_Reimbursed_Expense

    do Format-W2c-Number(#Prv_Reimbursed_Expense, $out, $FReimbursed_Expense)
    do Print-Value($out,#L_Reimbursed_Expense,#C_Reimbursed_Expense,$YE_Reimbursed_Expense)

    do Format-W2c-Number(#Reimbursed_Expense, $out, $FReimbursed_Expense)
    print $out (,+5)

    do Format-W2c-Number(#Reimbursed_Expense_Diff, $out, $FReimbursed_Expense)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #Tax_Withheld <> #Prv_Tax_Withheld
    let #Tax_Diff = #Tax_Withheld - #Prv_Tax_Withheld

    do Format-W2c-Number(#Prv_Tax_Withheld, $out, $FTax)
    do Print-Value($out,#L_Tax,#C_Tax,$YE_Tax_Withheld)

    do Format-W2c-Number(#Tax_Withheld, $out, $FTax)
    print $out (,+5)

    do Format-W2c-Number(#Tax_Diff, $out, $FTax)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #Retire_Fund <> #Prv_Retire_Fund
    let #Retire_Fund_Diff = #Retire_Fund - #Prv_Retire_Fund

    do Format-W2c-Number(#Prv_Retire_Fund, $out, $FRetire_Fund)
    do Print-Value($out,#L_Retire_Fund,#C_Retire_Fund,$YE_Retire_Fund)

    do Format-W2c-Number(#Retire_Fund, $out, $FRetire_Fund)
    print $out (,+5)

    do Format-W2c-Number(#Retire_Fund_Diff, $out, $FRetire_Fund)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #CODA_Plans <> #Prv_CODA_Plans
    let #CODA_Plans_Diff = #CODA_Plans - #Prv_CODA_Plans

    do Format-W2c-Number(#Prv_CODA_Plans, $out, $FCODA_Plans)
    do Print-Value($out,#L_CODA_Plans,#C_CODA_Plans,$YE_CODA_Plans)

    do Format-W2c-Number(#CODA_Plans, $out, $FCODA_Plans)
    print $out (,+5)

    do Format-W2c-Number(#CODA_Plans_Diff, $out, $FCODA_Plans)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #SS_Wages <> #Prv_SS_Wages
    let #SS_Wages_Diff = #SS_Wages - #Prv_SS_Wages

    do Format-W2c-Number(#Prv_SS_Wages, $out, $FSS_Wages)
    do Print-Value($out,#L_SS_Wages,#C_SS_Wages,$YE_SS_Wages)

    do Format-W2c-Number(#SS_Wages, $out, $FSS_Wages)
    print $out (,+5)

    do Format-W2c-Number(#SS_Wages_Diff, $out, $FSS_Wages)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #SS_Tax <> #Prv_SS_Tax
    let #SS_Tax_Diff = #SS_Tax - #Prv_SS_Tax

    do Format-W2c-Number(#Prv_SS_Tax, $out, $FSS_Tax)
    do Print-Value($out,#L_SS_Tax,#C_SS_Tax,$YE_SS_Tax)

    do Format-W2c-Number(#SS_Tax, $out, $FSS_Tax)
    print $out (,+5)

    do Format-W2c-Number(#SS_Tax_Diff, $out, $FSS_Tax)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #Med_Wages <> #Prv_Med_Wages
    let #Med_Wages_Diff = #Med_Wages - #Prv_Med_Wages

    do Format-W2c-Number(#Prv_Med_Wages, $out, $FMed_Wages)
    do Print-Value($out,#L_Med_Wages,#C_Med_Wages,$YE_Med_Wages)

    do Format-W2c-Number(#Med_Wages, $out, $FMed_Wages)
    print $out (,+5)

    do Format-W2c-Number(#Med_Wages_Diff, $out, $FMed_Wages)
    print $out (,+6) edit 99999999.99ps

  end-if


  if #Med_Tax <> #Prv_Med_Tax
    let #Med_Tax_Diff = #Med_Tax - #Prv_Med_Tax

    do Format-W2c-Number(#Prv_Med_Tax, $out, $FMed_Tax)
    do Print-Value($out,#L_Med_Tax,#C_Med_Tax,$YE_Med_Tax)

    do Format-W2c-Number(#Med_Tax, $out, $FMed_Tax)
    print $out (,+5)

    do Format-W2c-Number(#Med_Tax_Diff, $out, $FMed_Tax)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #SS_Tips <> #Prv_SS_Tips
    let #SS_Tips_Diff = #SS_Tips - #Prv_SS_Tips

    do Format-W2c-Number(#Prv_SS_Tips, $out, $FSS_Tips)
    do Print-Value($out,#L_SS_Tips,#C_SS_Tips,$YE_SS_Tips)


    do Format-W2c-Number(#SS_Tips, $out, $FSS_Tips)
    print $out (,+5)

    do Format-W2c-Number(#SS_Tips_Diff, $out, $FSS_Tips)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #SS_Tax_Tips <> #Prv_SS_Tax_Tips
    let #SS_Tax_Tips_Diff = #SS_Tax_Tips - #Prv_SS_Tax_Tips

    do Format-W2c-Number(#Prv_SS_Tax_Tips, $out, $FSS_Tax_Tips)
    do Print-Value($out,#L_SS_Tax_Tips,#C_SS_Tax_Tips,$YE_SS_Tax_Tips)


    do Format-W2c-Number(#SS_Tax_Tips, $out, $FSS_Tax_Tips)
    print $out (,+5)

    do Format-W2c-Number(#SS_Tax_Tips_Diff, $out, $FSS_Tax_Tips)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #Med_Tax_Tips <> #Prv_Med_Tax_Tips
    let #Med_Tax_Tips_Diff = #Med_Tax_Tips - #Prv_Med_Tax_Tips


    do Format-W2c-Number(#Prv_Med_Tax_Tips, $out, $FMed_Tax_Tips)
    do Print-Value($out,#L_Med_Tax_Tips,#C_Med_Tax_Tips,$YE_Med_Tax_Tips)


    do Format-W2c-Number(#Med_Tax_Tips, $out, $FMed_Tax_Tips)
    print $out (,+5)

    do Format-W2c-Number(#Med_Tax_Tips_Diff, $out, $FMed_Tax_Tips)
    print $out (,+6) edit 99999999.99ps

  end-if

  if #Sal_Act_No_324 <> #Prv_Sal_Act_No_324
    let #Sal_Act_324_Diff = #Sal_Act_No_324 - #Prv_Sal_Act_No_324


    do Format-W2c-Number(#Prv_Sal_Act_No_324, $out, $FSal_Act_324)
    do Print-Value($out,#L_Sal_Act_324, #C_Sal_Act_324,$YE_Sal_Act_324)


    do Format-W2c-Number(#Sal_Act_No_324, $out, $FSal_Act_324)
    print $out (,+5)

    do Format-W2c-Number(#Sal_Act_324_Diff, $out, $FSal_Act_324)
    print $out (,+6) edit 99999999.99ps

  end-if

  if $ER_Year < '2011'
     if #HIRE_Act_Wages_Tips_PR <> #Prv_HIRE_Wages_Tips
        let #Hire_Act_Wtips_Diff = #HIRE_Act_Wages_Tips_PR - #Prv_HIRE_Wages_Tips

        do Format-W2c-Number(#Prv_HIRE_Wages_Tips, $out, $FHire_Act_Wtips)
        do Print-Value($out,#L_Hire_Act_Wtips, #C_Hire_Act_Wtips,$YE_Hire_Act_Wtips)

        do Format-W2c-Number(#HIRE_Act_Wages_Tips_PR, $out, $FHire_Act_Wtips)
        print $out (,+5)

        do Format-W2c-Number(#Hire_Act_Wtips_Diff, $out, $FHire_Act_Wtips)
        print $out (,+6) edit 99999999.99ps
     end-if
  end-if

  if $ER_Year > '2010'
     if #ER_Health_Cost <> #Prv_ER_Health_Cost
        let #ER_Health_Cost_Diff = #ER_Health_Cost - #Prv_ER_Health_Cost

        do Format-W2c-Number(#Prv_ER_Health_Cost, $out, $FER_Health_Cost)
        do Print-Value($out,#L_ER_Health_Cost, #C_ER_Health_Cost,$YE_ER_Health_Cost)

        do Format-W2c-Number(#ER_Health_Cost, $out, $FER_Health_Cost)
        print $out (,+5)

        do Format-W2c-Number(#ER_Health_Cost_Diff, $out, $FER_Health_Cost)
        print $out (,+6) edit 99999999.99ps
     end-if

     if #Charitable_Contrib <> #Prv_Charitable_Contrib
        let #Charitable_Contrib_Diff = #Charitable_Contrib - #Prv_Charitable_Contrib

        do Format-W2c-Number(#Prv_Charitable_Contrib, $out, $FCharitable_Contrib)
        do Print-Value($out,#L_Charitable_Contrib, #C_Charitable_Contrib,$YE_Charitable_Contrib)
 
        do Format-W2c-Number(#Charitable_Contrib, $out, $FCharitable_Contrib)
        print $out (,+5)

        do Format-W2c-Number(#Charitable_Contrib_Diff, $out, $FCharitable_Contrib)
        print $out (,+6) edit 99999999.99ps
     end-if

     if #Save_Money_Pgm <> #Prv_Save_Money_Pgm
        let #Save_Money_Pgm_Diff = #Save_Money_Pgm - #Prv_Save_Money_Pgm

        do Format-W2c-Number(#Prv_Save_Money_Pgm, $out, $FSave_Money_Pgm)
        do Print-Value($out,#L_Save_Money_Pgm, #C_Save_Money_Pgm,$YE_Save_Money_Pgm)

        do Format-W2c-Number(#Save_Money_Pgm, $out, $FSave_Money_Pgm)
        print $out (,+5)

        do Format-W2c-Number(#Save_Money_Pgm_Diff, $out, $FSave_Money_Pgm)
        print $out (,+6) edit 99999999.99ps
     end-if
  end-if

end-procedure


begin-procedure Print-Page1-Data

  if ($YE_New_Name <> $Prv_Name)
    do Print-Value('X',#L_EE_Incorrect_Name,#C_EE_Incorrect_Name,$F)
    do Print-Value($Prv_YE_Print_Name,#L_EE_Incorrect_Name,#C_EE_Incorrect_Name,$F06B)
  end-if


  if ($E.SSN <> $E.Prv_SSN)
    do Print-Value($E.Prv_SSN,#L_EE_Incorrect_SSN,#C_EE_Incorrect_SSN,$F06A)
  end-if

end-procedure


begin-procedure Next-Form
  do Next-Form-TwoVertical
end-procedure



begin-procedure Load-W2C-PRT

begin-SELECT
F.LAYOUT_STYLE
F.TOP_MARGIN
F.TOP_SPLIT
F.CENTER_SPLIT
F.BOTTOM_SPLIT
F.LAST_PRINT_LINE
F.LOCALS_PER_FORM

  let $Layout_Style = RTRIM(&F.Layout_Style,' ')
  move &F.Top_Margin       to #Top_Margin
  move &F.Top_Split        to #Top_Split
  move &F.Center_Split     to #Center_Split
  move &F.Bottom_Split     to #Bottom_Split
  move &F.Last_Print_Line  to #Last_Print_Line
  move &F.Locals_Per_Form  to #Locals_Per_Form

! encode '<27>E<27>(0N<27>&l6D<27>&l0E<27>&l70F' into $SetupString
! print $SetupString (1,1)
!            |    |       |       |       |
!            |    |       |       |        --> 70 text lines
!            |    |       |        --> top margin = 0 lines
!            |    |        --> 6 lines per inch
!            |     --> ISO 8859-1 symbol set
!             --> Reset

FROM  PS_TAXFORM_FORM F
WHERE F.FORM_ID = &W2C.FORM_ID
  AND F.TAXFORM_ID = $TaxformW2c
  AND F.EFFDT   =
      (SELECT MAX(EFFDT)
       FROM   PS_TAXFORM_TBL
       WHERE  TAXFORM_ID = F.TAXFORM_ID
         AND  EFFDT  <= $AsOfDate)
end-SELECT

  do assign-year-end-variables

begin-SELECT
P.BOX
P.PRINT_LINE
P.PRINT_COL
P.PRINT_FORMAT
P.PRINT_TEXT

  let $P.Box = RTRIM(&P.Box,' ')
  evaluate $P.Box
    when = $YE_Cost_Pension_annuity
      move &P.Print_Line   to #L_Cost_Pension_annuity               ! previous
      move &P.Print_Col    to #C_Cost_Pension_annuity
      let $FCost_Pension_annuity  = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Wages
      move &P.Print_Line   to #L_Wages              ! previous
      move &P.Print_Col    to #C_Wages
      let $FWages = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Commissions
      move &P.Print_Line   to #L_Commissions              ! previous
      move &P.Print_Col    to #C_Commissions
      let $FCommissions = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Allowance
      move &P.Print_Line   to #L_Allowance             ! previous
      move &P.Print_Col    to #C_Allowance
      let $FAllowance = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Tips
      move &P.Print_Line   to #L_Tips              ! previous
      move &P.Print_Col    to #C_Tips
      let $FTips = RTRIM(&P.Print_Format,' ')
      break
    when = $Comm_Allow_Tips_Total
      move &P.Print_Line   to #L_TotalAbove             ! previous
      move &P.Print_Col    to #C_TotalAbove
      let $FTotalAbove = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Reimbursed_Expense
      move &P.Print_Line   to #L_Reimbursed_Expense              ! previous
      move &P.Print_Col    to #C_Reimbursed_Expense
      let $FReimbursed_Expense = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Tax_Withheld
      move &P.Print_Line   to #L_Tax              ! previous
      move &P.Print_Col    to #C_Tax
      let $FTax = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Retire_Fund
      move &P.Print_Line   to #L_Retire_Fund             ! previous
      move &P.Print_Col    to #C_Retire_Fund
      let $FRetire_Fund = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_CODA_Plans
      move &P.Print_Line   to #L_CODA_Plans              ! previous
      move &P.Print_Col    to #C_CODA_Plans
      let $FCODA_Plans = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_SS_Wages                          !SS wages
      move &P.Print_Line   to #L_SS_Wages              ! previous
      move &P.Print_Col    to #C_SS_Wages
      let $FSS_Wages = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_SS_Tax                            !SS Tax
      move &P.Print_Line   to #L_SS_Tax              ! previous
      move &P.Print_Col    to #C_SS_Tax
      let $FSS_Tax = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Med_Wages                         !Medicare wages
      move &P.Print_Line   to #L_Med_Wages              ! previous
      move &P.Print_Col    to #C_Med_Wages
      let $FMed_Wages = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Med_Tax                           !Medicare tax
      move &P.Print_Line   to #L_Med_Tax              ! previous
      move &P.Print_Col    to #C_Med_Tax
      let $FMed_Tax = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_SS_Tips                           !SS tips
      move &P.Print_Line   to #L_SS_Tips              ! previous
      move &P.Print_Col    to #C_SS_Tips
      let $FSS_Tips = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_SS_Tax_Tips
      move &P.Print_Line   to #L_SS_Tax_Tips              ! previous
      move &P.Print_Col    to #C_SS_Tax_Tips
      let $FSS_Tax_Tips  = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Med_Tax_Tips
      move &P.Print_Line   to #L_Med_Tax_Tips              ! previous
      move &P.Print_Col    to #C_Med_Tax_Tips
      let $FMed_Tax_Tips  = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Sal_Act_No_324                             !Salary Act No. 324
      move &P.Print_Line   to #L_Sal_Act_324              ! previous
      move &P.Print_Col    to #C_Sal_Act_324
      let $FSal_Act_324  = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_HIRE_Act_Wages                             !HIRE Act Wages and Tips
      move &P.Print_Line   to #L_Hire_Act_Wtips           ! previous
      move &P.Print_Col    to #C_Hire_Act_Wtips
      let $FHire_Act_Wtips  = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_ER_Health_Cost                             !ER-Sponsored Health Covg
      move &P.Print_Line   to #L_ER_Health_Cost              ! previous
      move &P.Print_Col    to #C_ER_Health_Cost
      let $FER_Health_Cost  = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Charitable_Contrib                         !Charitable Contributions
      move &P.Print_Line   to #L_Charitable_Contrib          ! previous
      move &P.Print_Col    to #C_Charitable_Contrib
      let $FCharitable_Contrib = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Save_Money_Pgm                             !Money Plan
      move &P.Print_Line   to #L_Save_Money_Pgm              ! previous
      move &P.Print_Col    to #C_Save_Money_Pgm
      let $FSave_Money_Pgm  = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Year
      move &P.Print_Line   to #L_Year_and_Form
      move &P.Print_Col    to #C_Year_and_Form
      let $FA = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_EE_FullName
      move &P.Print_Line   to #L_EE_Full_Name
      move &P.Print_Col    to #C_EE_Full_Name
      let $FB1 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_EE_Address1
      move &P.Print_Line   to #L_EE_Address1
      move &P.Print_Col    to #C_EE_Address1
      let $FB2 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_EE_Address2
      move &P.Print_Line   to #L_EE_Address2
      move &P.Print_Col    to #C_EE_Address2
      let $FB3 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_State_City_Zip
      move &P.Print_Line   to #L_EE_State_City_Zip
      move &P.Print_Col    to #C_EE_State_City_Zip
      let $FB4 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_EE_Incorrect_Name
      move &P.Print_Line   to #L_EE_Incorrect_Name
      move &P.Print_Col    to #C_EE_Incorrect_Name
      let $FB5 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_ER_Name
      move &P.Print_Line   to #L_ER_Name
      move &P.Print_Col    to #C_ER_Name
      let $FER_Name = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_ER_Address1
      move &P.Print_Line   to #L_ER_Address1
      move &P.Print_Col    to #C_ER_Address1
      let $FER_Address1 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_ER_Address2
      move &P.Print_Line   to #L_ER_Address2
      move &P.Print_Col    to #C_ER_Address2
      let $FER_Address2 = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_ER_State_City_Zip
      move &P.Print_Line   to #L_State_City_Zip
      move &P.Print_Col    to #C_State_City_Zip
      let $FERState_City_Zip = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_ER_Phone
      move &P.Print_Line   to #L_ER_Phone
      move &P.Print_Col    to #C_ER_Phone
      let $FERPhone = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_ER_Closing
      move &P.Print_Line   to #L_ER_Closing
      move &P.Print_Col    to #C_ER_Closing
      let $FERClosing = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_EE_SSN
      move &P.Print_Line   to #L_EE_SSN
      move &P.Print_Col    to #C_EE_SSN
      let $FD = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_ER_ID
      move &P.Print_Line   to #L_ER_EIN
      move &P.Print_Col    to #C_ER_EIN
      let $FF = RTRIM(&P.Print_Format,' ')
      break
!    when = $YE_W2C_ER_State_ID                                   !SWT
!      move &P.Print_Line   to #L_ER_State_ID
!      move &P.Print_Col    to #C_ER_State_ID
!      let $FG = RTRIM(&P.Print_Format,' ')
!      break
!    when = $YE_W2C_ER_Use                                  !Employer use
!      move &P.Print_Line   to #L_ER_Use
!      move &P.Print_Col    to #C_ER_Use
!      break
    when = $YE_EE_Incorrect_SSN                        !EE incorrect SSN
      move &P.Print_Line   to #L_EE_Incorrect_SSN
      move &P.Print_Col    to #C_EE_Incorrect_SSN
      break
    when = $YE_ER_Prv_Control_Number
      move &P.Print_Line   to #L_Prv_Control_Number
      move &P.Print_Col    to #C_Prv_Control_Number
      let $F27B = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Comments_A
      move &P.Print_Line   to #L_Comments_A
      move &P.Print_Col    to #C_Comments_A
      let $F26A = RTRIM(&P.Print_Format,' ')
      break
    when = $YE_Comments_B
      move &P.Print_Line   to #L_Comments_B
      move &P.Print_Col    to #C_Comments_B
      let $F26B = RTRIM(&P.Print_Format,' ')
      break
    when-other
        move $P.Box to $Box xx
      break
  end-evaluate

FROM  PS_TAXFORM_PRT P
WHERE P.FORM_ID = &W2C.FORM_ID
  AND P.TAXFORM_ID = $TaxformW2c
  AND P.EFFDT   =
      (SELECT MAX(EFFDT)
       FROM   PS_TAXFORM_TBL
       WHERE  TAXFORM_ID = P.TAXFORM_ID
         AND  EFFDT  <= $AsOfDate)
ORDER BY P.BOX
end-SELECT
end-procedure


begin-procedure Load-Test-Data

  let $A.Federal_EIN =
         LPAD($x,TO_NUMBER(SUBSTR($FF,3,INSTR($FF,')',1)-2)),'X')

  let $A.Descr =
         LPAD($x,TO_NUMBER(SUBSTR($FER_Name,3,INSTR($FER_Name,')',1)-2)),'X')

  let $A.Address1 =
         LPAD($x,TO_NUMBER(SUBSTR($FER_Address1,3,INSTR($FER_Address1,')',1)-2)),'X')

  let $A.Address2 =
         LPAD($x,TO_NUMBER(SUBSTR($FER_Address2,3,INSTR($FER_Address2,')',1)-2)),'X')

  let $State_City_Zip =
         LPAD($x,TO_NUMBER(SUBSTR($FState_City_Zip,3,INSTR($FState_City_Zip,')',1)-2)),'Y')

  let $ER_Year = $CalYear

  let $YE_Name =
         LPAD($x,TO_NUMBER(SUBSTR($FB1,3,INSTR($FB1,')',1)-2)),'Y')

  let $Prv_Name =
         LPAD($x,TO_NUMBER(SUBSTR($F06B,3,INSTR($F06B,')',1)-2)),'X')
  let $Prv_YE_Print_Name = $Prv_Name

  let $E.SSN =
         LPAD($x,TO_NUMBER(SUBSTR($FD,3,INSTR($FD,')',1)-2)),'X')

  let $E.Prv_SSN = 'YYYYYYYYYYY'

  let $A.Closing_Date = 'DD     MM     YY'

  let $Phone = '999-999-9999'

  let $E.Address1 =
         LPAD($x,TO_NUMBER(SUBSTR($FB2F1,3,INSTR($FB2,')',1)-2)),'X')

  let $E.Address2 =
         LPAD($x,TO_NUMBER(SUBSTR($FB3,3,INSTR($FB3,')',1)-2)),'X')

  let $B4 =
         LPAD($x,TO_NUMBER(SUBSTR($FB4,3,INSTR($FB4,')',1)-2)),'X')

  let $E.Comments_A =
         LPAD($x,TO_NUMBER(SUBSTR($F26A,3,INSTR($F26A,')',1)-2)),'X')

  let $E.Comments_B =
         LPAD($x,TO_NUMBER(SUBSTR($F26B,3,INSTR($F26B,')',1)-2)),'X')

  let #Cost_Pension_Annuity = 99999999.99
  let #Prv_Cost_Pension_Annuity = 0.00

  let #Wages = 0.00
  let #Prv_Wages = 99999999.99

  let #Commissions = 99999999.99
  let #Prv_Commissions = 0.00

  let #Allowance = 0.00
  let #Prv_Allowance = 99999999.99

  let #Tips = 99999999.99
  let #Prv_Tips = 0.00

  let #TotalAbove = 0.00
  let #Prv_TotalAbove = 99999999.99

  let #Reimbursed_Expense = 99999999.99
  let #Prv_Reimbursed_Expense = 0.00

  let #Tax_Withheld = 0.00
  let #Prv_Tax_Withheld = 99999999.99

  let #Retire_Fund = 99999999.99
  let #Prv_Retire_Fund = 0.00

  let #CODA_Plans = 0.00
  let #Prv_CODA_Plans = 99999999.99

  let #SS_Wages = 99999999.99
  let #Prv_SS_Wages = 0.00

  let #SS_Tax = 0
  let #Prv_SS_Tax = 99999999.99

  let #Med_Wages = 99999999.99
  let #Prv_Med_Wages = 0.00

  let #Med_Tax = 0
  let #Prv_Med_Tax = 99999999.99

  let #SS_Tips = 99999999.99
  let #Prv_SS_Tips = 0.00

  let #SS_Tax_Tips = 0
  let #Prv_SS_Tax_Tips = 99999999.99

  let #Med_Tax_Tips = 99999999.99
  let #Prv_Med_Tax_Tips = 0.00

  let #Sal_Act_No_324 = 99999999.99
  let #Prv_Sal_Act_No_324 = 0.00

  let #HIRE_Act_Wages_Tips_PR = 99999999.99
  let #Prv_HIRE_Wages_Tips = 0.00

  let #ER_Health_Cost = 99999999.99
  let #Prv_ER_Health_Cost = 0.00

  let #Charitable_Contrib = 99999999.99
  let #Prv_Charitable_Contrib = 0.00

  let #Save_Money_Pgm = 99999999.99
  let #Prv_Save_Money_Pgm = 0.00

end-procedure

begin-procedure Print-Alignment-Forms
  move &W2C.ALIGN_COUNT  to #Align_Count
  let #Align_Count = #Align_Count * #FormsPerPage
  move #EmployeesPerPage to #temp
  move #FormsPerPage to #EmployeesPerPage
  move 1 to #k
  while #k <= #Align_Count
    do Load-Test-Data
    do Print-W2C
    add 1 to #k
  end-while
  move 0 to #Align_Count
  move #temp to #EmployeesPerPage
  move '' to $priorState
  move '' to $priorLocality
  move '' to $LocalityPrintName

end-procedure

begin-procedure Print-Value($String,#Line,#Col,$Identifier)

  #ifdef TAXTEST
    display $String
    display #Line
    display #Col
    display $Identifier
  #endif

  if #Line > 0
    print $String (#Line,#Col)
  else
    display ''
    display '***************************************'
    display 'Print Line not defined for Box ' noline
    display $Identifier
    display 'in Tax Form Print Parameters Table.'
    display 'Program Stopped.'
    display '***************************************'
    display ''
    stop
  end-if
end-procedure


begin-procedure Read-EEs
let $FirstEE = 'Y'

begin-SELECT
C.W2C_ADD_EMPLID
C.W2C_BATCH_NBR
C.W2C_RECENT_BATCH

  move &C.W2C_ADD_EMPLID  to $SelectedEmplID
  move &C.W2C_BATCH_NBR to #W2c_Batch_Nbr
  move &C.W2C_BATCH_NBR to $W2c_Batch_Nbr
  move &C.W2C_ADD_EMPLID  to $ReprintCheck
  let $ReprintCheck = rtrim(&C.W2C_ADD_EMPLID ,' ')

  if isnull(rtrim($ReprintCheck,'')) and $FirstEE = 'Y'
    do Get-Reprint-Info
  else
    let $E.SelectedEEs = 'AND E.W2C_ADD_EMPLID = '''
    let $E.SelectedEEs = $E.SelectedEEs || RTRIM($SelectedEmplID  , ' ') || ''''

    if &C.W2C_RECENT_BATCH = 'N'
      let $E.Batch_Nbr = 'AND E.W2C_BATCH_NBR = ' || $W2c_Batch_Nbr
    else
      let $E.Batch_Nbr = 'AND E.W2C_BATCH_NBR = (SELECT MAX(W2C_BATCH_NBR) FROM ' ||
       'PS_YE_W2CP_DATA WHERE E.COMPANY = COMPANY ' ||
       'AND E.W2C_ADD_EMPLID = W2C_ADD_EMPLID AND E.W2C_STATUS = W2C_STATUS)'
    end-if
  end-if
  do Read-Employee-Data

  let $FirstEE = 'N'

FROM  PS_RC_TAX920PREE C
WHERE C.OPRID         = $Prcs_OprID
  AND C.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
end-SELECT

end-procedure

begin-procedure Get-Reprint-Info


  if &C.W2C_RECENT_BATCH  = 'Y'
    do Get-Most-Recent-Batch
  end-if

  let $E.Batch_Nbr = 'AND E.W2C_BATCH_NBR = ' || $W2c_Batch_Nbr


end-procedure


begin-procedure Get-Most-Recent-Batch
begin-SELECT

COUNT(*)   &W2cCount

FROM PS_YE_W2CP_DATA CT
WHERE CT.W2C_BATCH_NBR = &W2C_INSTALL.W2C_BATCH_NBR

end-SELECT

if &W2cCount > 0
    let #W2c_Batch_Nbr = &W2C_INSTALL.W2C_BATCH_NBR
else
    let #W2c_Batch_Nbr = &W2C_INSTALL.W2C_BATCH_NBR  - 1
end-if

let $W2c_Batch_Nbr = #W2c_Batch_Nbr

end-procedure

begin-procedure Get-W2C-Run-Controls

begin-select

W2C.W2C_REG_REPRINT
W2C.ALIGN_COUNT
W2C.FORM_ID
W2C.EMPLOYEES_PER_PAGE
W2C.TELEPHONE_NBR


  move &W2C.Telephone_Nbr to $Phone

FROM  PS_RC_TAX920PR   W2C
WHERE W2C.OPRID            = $Prcs_OprID
AND   W2C.RUN_CNTL_ID      = $Prcs_Run_Cntl_ID

end-select


  let $Taxform_ID = 'P'
  let $TaxformW2c = 'Q'

end-procedure

begin-procedure Get-W2C-Parameters

begin-select
W2C_INSTALL.W2C_BATCH_NBR
W2C_INSTALL.W2C_BATCH_YR
W2C_INSTALL.W2C_DEF_CAL_YR


FROM  PS_YE_W2C_INSTALL W2C_INSTALL
WHERE W2C_TAXFORM_ID = $Taxform_ID
end-SELECT


move &W2C_INSTALL.W2C_DEF_CAL_YR to #W2c_Def_Cal_Yr
move &W2C_INSTALL.W2C_BATCH_NBR to #W2c_Batch_Nbr
move &W2C_INSTALL.W2C_BATCH_NBR to $W2c_Batch_Nbr

move &W2C_INSTALL.W2C_BATCH_YR   to $W2C_Batch_Yr 9999
move &W2C_INSTALL.W2C_BATCH_YR   to #W2C_Batch_Yr
let $E.Batch_Nbr = 'AND E.W2C_BATCH_NBR = ' || $W2c_Batch_Nbr

end-procedure


begin-procedure Update-W2-History

 let $W2c_Error = 'Update-W2-History '

 begin-SQL on-error=Error-W2c-Processing
  UPDATE PS_YE_EE
    SET PROCESS_FLAG = 'X'
   WHERE EMPLID = &E.W2C_ADD_EMPLID
    AND CALENDAR_YEAR = &E.CALENDAR_YEAR
    AND TAXFORM_ID = $Taxform_ID
    AND COMPANY IN (SELECT W2C.COMPANY
       FROM PS_W2_COMPANY W2C
       WHERE W2C.W2_REPORTING_CO = &E.COMPANY
       AND W2C.CALENDAR_YEAR = &E.CALENDAR_YEAR);
 end-SQL
end-procedure



begin-procedure Update-W2C-Parameters

 let $W2c_Error = 'Update-W2C-Parameters  '

 begin-SQL on-error=Error-W2c-Processing
  UPDATE PS_YE_W2CP_DATA
   SET W2C_STATUS = 'C'
  WHERE W2C_BATCH_NBR = &W2C_INSTALL.W2C_BATCH_NBR
  AND W2C_STATUS <> 'V';
end-SQL

  do Delete-W2c-Install
  do Insert-W2c-Install
end-procedure

begin-procedure Update-Reg-Reprint-Status

 let $W2c_Error = 'Update-Reg-Reprint-Status '

 begin-SQL on-error=Error-W2c-Processing
  UPDATE PS_RC_TAX920PR
   SET W2C_REG_REPRINT  = 'C';
 end-SQL

 let $W2c_Error = 'Delete-W2c-EE  '

 begin-SQL on-error=Error-W2c-Processing
  DELETE FROM  PS_RC_TAX920PREE
  WHERE OPRID         = $Prcs_OprID
  AND RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
 end-SQL

end-procedure


begin-procedure Delete-W2c-Install

 let $W2c_Error = 'Delete-W2c-Install   '

 begin-SQL on-error=Error-W2c-Processing
  DELETE FROM PS_YE_W2C_INSTALL WHERE W2C_TAXFORM_ID = $TAXFORM_ID;
 end-SQL
end-procedure

begin-procedure Insert-W2c-Install
 add 1 to #W2c_Batch_Nbr
 let $W2c_Error = 'Insert-W2c-Install   '

 begin-SQL on-error=Error-W2c-Processing
  INSERT INTO PS_YE_W2C_INSTALL (W2C_BATCH_NBR,
                            W2C_TAXFORM_ID,
                            W2C_NEW_BATCH,
                            W2C_DEF_CAL_YR,
                            W2C_BATCH_YR)
                    VALUES (#W2c_Batch_Nbr,
                            $Taxform_ID,
                            'Y',
                            #W2c_Def_Cal_Yr,
                            #W2c_Batch_Yr);
 end-SQL
end-procedure

begin-procedure Error-W2c-Processing
  display 'W2c Processing Error ' noline
  display $W2c_Error
end-procedure


begin-procedure Next-Form-TwoVertical
 if #Form# <> 1
    add 1 to #Form#
  else
    move 1 to #Form#
  end-if
  evaluate #Form#                 !use to position for next forms
    when = 1
      if $First_time = 'N'
         new-page
      end-if
      next-column
      do Print-Value(' ',#Top_Margin,1,'Top Margin')
!      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')

      break
!    when = 2
!      next-listing
!
!      do Print-Value(' ',#Center_Split,1,'Center Split')
!      next-listing
!      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')

  end-evaluate

  let $First_time = 'N'

end-procedure


begin-procedure Format-W2c-Number(#in, :$out, $mask)

  if #in <> 0
    move #in to $out :$mask
    let $out = translate($out,',.',$_Delimiters)
  else
      let $out = '           0'
  end-if


end-procedure


#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'w2c.sqc'       !Routine for W2 Year End W-2c Box variables
#Include 'w2prbox.sqc'   !Evaluate-PR-Boxes
