!***********************************************************************
!  PER002CH Accident Report                                            *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:24:20                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'    !Set environment

!**********************************************************************!
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

#define COMPANY_TBL
#define PERS_DATA_EFFDT
#define PERSON_NAME
#define JOBCODE_TBL
#define INCIDENT_DATA
#define COMP_PROP_TBL
#define BODY_PART_TBL
#define INJURY_NATR_TBL
#define DIAGNOSIS_TBL
#define INJ_REHAB_ACTN
#define COUNTRY_TBL
#define COMP_RATECD_TBL
#define BUS_UNIT_TBL_HR
#define FREQUENCY_TBL
#define INJURY_ILL_ADDR

#include "rellang.sqc"

!**********************************************************************!
begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report

  Show 'Start Process: ' $ReportID  
  do Process-Main
  Show 'End Process: ' $ReportID
  do Reset
  do Stdapi-Term
end-report

!**********************************************************************!
begin-procedure Init-Layout
#define col1    1
#define col2    20
#define col3    33
#define col4    45
end-procedure

!**********************************************************************!
begin-heading 7
  #Include 'stdhtr03.sqc'
string $INCIDENT $incident_nbr by ' ' into $TITLE
print $TITLE (+1,1) center bold
end-heading

!**********************************************************************!
! Procedure: Init-Report                                               !
! Descr:     Report initialization procedure.  Set titles, parameters. !
!            This is called from the Begin-Report procedure.           !
!**********************************************************************!
begin-procedure Init-Report

  move 'PER002CH' to $ReportID

  do Stdapi-Init

  if $Prcs_Process_Instance = ''
  else
    do Select-Parameters
    move &RUN_CNTL_HR_CHE.EMPLID to $emplid_inj 
    move &RUN_CNTL_HR_CHE.INCIDENT_NBR to $incident_nbr
  end-if

do Init_Printer
do Init_Report_Translation ($ReportID, $language_cd)

do Append_Report_Translation ('HR')

end-procedure

!**********************************************************************!
begin-procedure Get-Values
   let $language_cd = $prcs_language_cd
   let $curr_language_cd = $prcs_language_cd
end-procedure

!**********************************************************************!
begin-procedure Process-Main
do Get-String-Tbl

begin-SELECT 
LANGUAGE_CD 
 let $Psoptions_Language_Cd = &LANGUAGE_CD
FROM PSOPTIONS
end-SELECT

let $emplid = ' '
let $incident_date = $AsOfToday 
begin-SELECT 
A.EMPLID
A.EMPL_RCD
A.NON_EMPLOYEE_ID
A.DT_REPORTED
{TIMEOUT-PREFIX}A.TM_REPORTED{TIMEOUT-SUFFIX} &A.TM_REPORTED
A.WORK_RELATED
A.LAST_FULL_WORK_DAY
{TIMEOUT-PREFIX}A.LAST_WORKED_TM{TIMEOUT-SUFFIX} &A.LAST_WORKED_TM
A.RETURN_DT
{TIMEOUT-PREFIX}A.RETURN_TM{TIMEOUT-SUFFIX} &A.RETURN_TM
A.AWAY_FROM_WORKDAYS
A.RESTRICTD_WORKDAYS
A.COMMENTS
B.INCIDENT_DT
{TIMEOUT-PREFIX}B.INCIDENT_TIME{TIMEOUT-SUFFIX} &B.INCIDENT_TIME
B.REG_REGION
B.DT_REPORTED
{TIMEOUT-PREFIX}B.TIME_REPORTED{TIMEOUT-SUFFIX} &B.TIME_REPORTED
B.REPORTED_TO
B.REPORTED_BY_EMPL
B.REPORTED_BY_NONEMP
B.LOCATION
B.LOCATION_NAME
B.ADDRESS1
B.CITY
B.COUNTRY
B.DESCRLONG
   let $emplid = &A.EMPLID
   let #empl_rcd = &A.EMPL_RCD
   let $incident_date = &B.INCIDENT_DT
   do EE-Data

 ! Incident Detail
   ! Incident Date
     do Format-DateTime(&B.INCIDENT_DT, $INCIDENT_DT1, {DEFDMY}, '', '')
   ! Date Reported
     do Format-DateTime(&B.DT_REPORTED, $DT_REPORTED1, {DEFDMY}, '', '')
  
   ! Reported to
     let $EmplID = &B.REPORTED_TO
     do Get-Employee-Name
     let $REPORTED_TO = $Name

   ! Reported by
     if &B.REPORTED_BY_EMPL > ' '
        LET $REPORT_BY1 = &B.REPORTED_BY_EMPL
        let $EmplID = &B.REPORTED_BY_EMPL
        do Get-Employee-Name
        let $REPORTED_BY1 = $Name
     end-if
     if &B.REPORTED_BY_NONEMP > ' '
        LET $REPORT_BY2 = &B.REPORTED_BY_NONEMP
        LET $NON_EE_ID1 = &B.REPORTED_BY_NONEMP
        do get-non-ee-data
        let $REPORTED_BY2 = $NON_EE_NAME
     end-if

   ! Incident location
     ! country
       let $country = &B.COUNTRY
       do Country_Descr
       let $CountryLoc = $CountryDescr

   do Print-Accident-Report2

   do Incident-Role

 ! Injury details
     do Format-DateTime(&A.DT_REPORTED, $DT_REPORT_INJ, {DEFDMY}, '', '')

   do Injury-Details

 ! Work Related incident
   PRINT $HEAD6 (+2,{col1},43) BOLD
   if &A.WORK_RELATED = 'Y'
      PRINT 'YES' (,{col4}) BOLD
      PRINT $HEAD7 (+2,{col1}) BOLD
      do Format-DateTime(&A.LAST_FULL_WORK_DAY, $LastDate, {DEFDMY}, '', '')
      do Format-DateTime(&A.RETURN_DT, $ReturnDate, {DEFDMY}, '', '')

      PRINT $LASTDT (+2,{col1})
      LET $TIME1 = substr(&A.LAST_WORKED_TM,1,5)
      STRING $LastDate $TIME1 BY ' - ' INTO $DATE1
      PRINT $DATE1 (,{col3})

      PRINT $RETURN_DT (+1,{col1})
      LET $TIME2 = substr(&A.RETURN_TM,1,5)
      STRING $ReturnDate $TIME2 BY ' - ' INTO $DATE2
      IF $DATE2 = ' - ' 
         LET $DATE2 = ' '
      END-IF
      PRINT $DATE2 (,{col3})

      PRINT $AWAY_FROM_WORKDAYS (+1,{col1},31)
      PRINT &A.AWAY_FROM_WORKDAYS (,{col3})
      PRINT $RESTRICTD_WORKDAYS (+1,{col1},31)
      PRINT &A.RESTRICTD_WORKDAYS (,{col3})
   end-if

FROM PS_INJURY_ILL_VW A, PS_INCIDENT_DATA B
WHERE A.INCIDENT_NBR = $incident_nbr
AND A.INCIDENT_NBR = B.INCIDENT_NBR 
AND A.EMPLID = $emplid_inj
end-SELECT
end-procedure Process-Main

!**********************************************************************!
begin-procedure EE-Data
BEGIN-SELECT
J.EMPL_RCD
J.EFFDT
J.EFFSEQ
J.COMPANY
J.EMPL_CLASS
J.REG_REGION
J.FULL_PART_TIME
J.BUSINESS_UNIT
J.DEPTID
J.LOCATION
J.JOBCODE
J.CURRENCY_CD
J.COMP_FREQUENCY
J.COMPRATE
C.DESCR
C.ADDRESS1
C.CITY
C.COUNTRY
C.ACCDNT_INS_NBR_CHE
D.DESCR
F.NAME
  
G.HIRE_DT
G.REHIRE_DT
V.BUSINESS_UNIT
V.DESCR
X3.DESCRSHORT


  Do Get-Person
  Do Get-Pers_Data_Effdt

 Do Get-Empl-Address ($Emplid,'HOME', $AddressFound)
          
   Let $COUNTRY  = $GETADDR_Country
   let $ADDRESS1 = $GETADDR_Address1
   let $CITY = $GETADDR_CITY

    do Country_Descr
    Let $Employee_Country = $CountryDescr
 

    string $ADDRESS1 $CITY $Employee_Country by ', ' into $ADDRESS_EE
    let $ADDRESS_EE = rtrim($ADDRESS_EE,', ')
    let $ADDRESS_EE = ltrim($ADDRESS_EE,',')



 ! Get Company Data
   let $COMPANY_TBL-ADDRESS1 = rtrim(&C.ADDRESS1, ' ')
   let $COMPANY_TBL-CITY = rtrim(&C.CITY, ' ')
   let $COMPANY_TBL-DESCR = &C.DESCR
   do Get_Related_COMPANY_TBL(&J.COMPANY, &J.EFFDT)

 ! Get Country Description
   let $Company_Country = &D.DESCR
   do Get_Related_COUNTRY_TBL(&C.COUNTRY)
   if $COUNTRY_TBL-DESCR > ''
      let $Company_Country = $COUNTRY_TBL-DESCR
   end-if
   let $Company_Country = rtrim($Company_Country, ' ')

 ! Get Compensation Data
   let $effdt = &J.EFFDT
   let #effseq = &J.EFFSEQ


   let $Employee_Country = rtrim($Employee_Country, ' ')


  ! Format Birthdate
    do Format-DateTime($Pers_BirthDate, $BIRTHDATE_EE, {DEFDMY}, '', '')

  ! Get AVS/AHV
    do Get_AVS_AHV

  ! Get Marital Status
    let $CivilStatus = ' '
    let $FieldName = 'MAR_STATUS'
    LET $FieldValue = $Pers_Data_Mar_Status
    let $LongName = ' '
    do Read-Xlat
    let $CivilStatus = $LongName

  ! Employee Data at incident date
    do Format-DateTime(&G.HIRE_DT, $HIRE_DT1, {DEFDMY}, '', '')
    do Format-DateTime(&G.REHIRE_DT, $REHIRE_DT1, {DEFDMY}, '', '')

    ! Employee Class
      let $Empl_Class = &J.EMPL_CLASS
      let $Reg_Region = &J.REG_REGION
    ! input: $Reg_Region, $Empl_Class; output: $Empl_Class_Name
      do Get-Empl-Class-Name
      let $EE_Class = $Empl_Class_Name

    ! Business Unit
      let $BUS_UNIT_TBL_HR-DESCR = &V.DESCR
      do Get_Related_BUS_UNIT_TBL_HR(&V.BUSINESS_UNIT)

    ! Department Name in $DeptName
      let $DeptID = &J.DEPTID
      let $BU = &J.BUSINESS_UNIT
      do Get-Department-Name

    ! Location name in $LocationName
      let $Location = &J.LOCATION
      let $Busunit = &J.BUSINESS_UNIT
      let $Recname = 'LOCATION_TBL'
      do Get-Setid ($Busunit, $Recname, $Setid)
      do Get-Location-Name

    ! Job Code description in $JobTitle
      let $JobCode = &J.JOBCODE
      let $Recname = 'JOBCODE_TBL'
      do Get-Setid ($Busunit, $Recname, $Setid)
      do Get-Job-Title

    ! Compensation Rate
      do Format-Number(&J.COMPRATE, $COMPRATE_JOB, '999,999,999,999.99')

    ! Frequency
      let $FREQ_JOB = &X3.DESCRSHORT
      do Get_Related_FREQUENCY_TBL(&J.EFFDT, &J.COMP_FREQUENCY)
      IF $FREQUENCY_TBL-DESCRSHORT > ' '
         let $FREQ_JOB = $FREQUENCY_TBL-DESCRSHORT
      end-if

    ! Phone
      let $EE_Company = &J.COMPANY
      do Get_Phone

FROM PS_JOB J, PS_COMPANY_TBL C, PS_COUNTRY_TBL D, PS_PERSON_NAME F, PS_EMPLOYMENT G, 
PS_BUS_UNIT_TBL_HR V, PS_FREQUENCY_TBL X3
WHERE J.EMPLID = $emplid_inj
AND   J.EMPL_RCD = #empl_rcd
AND   J.COMPANY = C.COMPANY
AND   J.EFFDT = (SELECT MAX(J2.EFFDT) FROM PS_JOB J2 WHERE J.EMPLID = J2.EMPLID AND 
                 J.EMPL_RCD = J2.EMPL_RCD AND J2.EFFDT  <= $incident_date)
AND   J.EFFSEQ = (SELECT MAX(J3.EFFSEQ) FROM PS_JOB J3 WHERE J.EMPLID = J3.EMPLID AND 
                 J.EMPL_RCD = J3.EMPL_RCD AND J3.EFFDT  = J.EFFDT)
AND   C.EFFDT = (SELECT MAX(C2.EFFDT) FROM PS_COMPANY_TBL C2 WHERE C.COMPANY = C2.COMPANY AND C.EFFDT  <= J.EFFDT)
AND   C.COUNTRY = D.COUNTRY
AND   J.EMPLID = F.EMPLID
AND   J.EMPLID = G.EMPLID
AND   J.EMPL_RCD = G.EMPL_RCD
AND   J.BUSINESS_UNIT = V.BUSINESS_UNIT
AND   J.COMP_FREQUENCY = X3.FREQUENCY_ID
AND   X3.EFFDT = (SELECT MAX(X2.EFFDT) FROM PS_FREQUENCY_TBL X2 WHERE X3.FREQUENCY_ID = X2.FREQUENCY_ID AND
               X2.EFFDT <= J.EFFDT)
end-SELECT

   do Print-Accident-Report1
! Get Compensation Data
  DO EE-Compensation-Data

! Total Comprate
PRINT $TOT_COMP (+2,{col1})
string $COMPRATE_JOB &J.CURRENCY_CD $FREQ_JOB BY '  ' INTO $TOT_COMPRATE
PRINT $TOT_COMPRATE (,19)
end-procedure EE-Data

!**********************************************************************!
begin-procedure Get_Phone
BEGIN-SELECT
E.PHONE
FROM PS_COMP_PHONE_TBL E
WHERE E.COMPANY = $EE_Company 
AND   E.PHONE_TYPE = 'BUSN'
end-SELECT
end-procedure Get_Phone

!**********************************************************************!
begin-procedure EE-Compensation-Data
print $COMPENSATION (+2,{col1})
print $COMP_RATECD (+2,{col1},11)
print $SEQ (,13,5)
print $DESCR (,19,15)
print $COMP_RATE_TYPE (,35,20)
print $COMPRATE (,56,28)
print $COMP_PCT (,85,9)
print $CURRENCY_CD (,95,9)
print $FREQUENCY_ID (,105)
BEGIN-SELECT
H.COMP_RATECD
H.COMP_EFFSEQ
H.COMP_RATE_POINTS
H.COMP_PCT
H.COMPRATE
H.CURRENCY_CD
H.COMP_FREQUENCY
I.DESCRSHORT
I.COMP_RATE_TYPE
I.COMP_BASE_PAY_SW
W.DESCRSHORT
 
  do Format-Number(&H.COMP_EFFSEQ, $COMP_EFFSEQ, '999')
  
  let $COMP_RATECD_TBL-DESCRSHORT = &I.DESCRSHORT
  do Get_Related_COMP_RATECD_TBL(&H.COMP_RATECD, $effdt)

  let $Rate_Type = ' '
  let $FieldName = 'COMP_RATE_TYPE'
  LET $FieldValue = &I.COMP_RATE_TYPE
  do Read-Xlat
  let $Rate_Type = $ShortName
  
  LET $COMP_PCT1 = ' '
  IF &I.COMP_RATE_TYPE = 'PC' AND &H.COMP_PCT > 0
     do Format-Number(&H.COMP_PCT, $COMP_PCT1, '999,999')
  END-IF

  do Format-Number(&H.COMP_RATE_POINTS, $COMP_POINTS, '99999')

  do Format-Number(&H.COMPRATE, $RATECD_COMPRATE, '999,999,999,999.999999')

  let $FREQ_COMPRATECD = &W.DESCRSHORT
  do Get_Related_FREQUENCY_TBL($effdt, &H.COMP_FREQUENCY)
  !IF $FREQUENCY_TBL-DESCRSHORT > ''
  !   let $FREQ_COMPRATECD = $FREQUENCY_TBL-DESCRSHORT
  !end-if

 print &H.COMP_RATECD (+1,{col1},10)
 print $COMP_EFFSEQ (,12,6)
 print $COMP_RATECD_TBL-DESCRSHORT (,19,15)
 print $Rate_Type (,35,20)
 print $RATECD_COMPRATE (,56,28)
 print $COMP_PCT1 (,85,9)
 print &H.CURRENCY_CD (,95,9)
 print $FREQ_COMPRATECD (,105)

FROM PS_COMPENSATION H, PS_COMP_RATECD_TBL I, PS_FREQUENCY_TBL W
WHERE H.EMPLID = $emplid_inj AND H.EMPL_RCD = #empl_rcd AND H.EFFDT = $effdt AND H.EFFSEQ = #effseq
AND H.COMP_RATECD = I.COMP_RATECD
AND I.EFFDT = (SELECT MAX(I2.EFFDT) FROM PS_COMP_RATECD_TBL I2 WHERE I2.COMP_RATECD = I.COMP_RATECD
              AND I2.EFFDT <= $effdt)
AND H.COMP_FREQUENCY = W.FREQUENCY_ID
AND W.EFFDT = (SELECT MAX(W2.EFFDT) FROM PS_FREQUENCY_TBL W2 WHERE W.FREQUENCY_ID = W2.FREQUENCY_ID AND
              W2.EFFDT <= $effdt)
end-SELECT
end-procedure EE-Compensation-Data

!**********************************************************************!
begin-procedure Incident-Role
print $PEOPLE (+2,{col1})
BEGIN-SELECT
K.EMPLID
K.NON_EMPLOYEE_ID
K.INCIDENT_ROLE
K.CONFIRM_STATEMENT

   let $Role = ' '
   let $FieldName = 'INCIDENT_ROLE'
   LET $FieldValue = &K.INCIDENT_ROLE
   do Read-Xlat
   let $Role = $LongName

   let $EE_Role1  = ' '
   let $EE_Role2  = ' '
   let $EmplID = ' '
   LET $NON_EE_ID1 = ' '

   let $EmplID = &K.EMPLID
   do Get-Employee-Name
   let $EE_Role1 = $Name

   LET $NON_EE_ID1 = &K.NON_EMPLOYEE_ID
   do get-non-ee-data
   let $EE_Role2  = $NON_EE_NAME

   let $Confirm = ' '
   if &K.CONFIRM_STATEMENT > ' '
      let $Confirm = ' '
      let $FieldName = 'CONFIRM_STATEMENT'
      LET $FieldValue = &K.CONFIRM_STATEMENT
      do Read-Xlat
      let $Confirm = $LongName
   end-if

 let $EMPLID_ROLE1 = ' '
 let $EMPLID_ROLE2 = ' '
 print $ROLE1 (+2,{col1},18)
 print $ROLE (,{col2})
    string &K.EMPLID $EE_Role1 BY '   ' INTO $EMPLID_ROLE1
    print $EMPLID1 (+1,{col2},24)
    print $EMPLID_ROLE1 (,{col4})

    print $NON_EE_ID (+1,{col2},24)
    string &K.NON_EMPLOYEE_ID $EE_Role2 BY '   ' INTO $EMPLID_ROLE2
    print $EMPLID_ROLE2 (,{col4})
 print $Confirm (+1,{col2})

 FROM PS_INCIDENT_PEOPLE K
WHERE K.INCIDENT_NBR = $incident_nbr
end-SELECT
end-procedure Incident-Role

!**********************************************************************!
begin-procedure Injury-Details
 print $HEAD4 (+2,{col1}) BOLD
 print $INJ_NOTIF (+2,{col1})
 print $DT_REPORTED (+2,{col1},18)
 print $DT_REPORT_INJ (,{col2})
 print $TIME_REP (+1,{col1},18)
      LET $TIME2 = substr(&A.TM_REPORTED,1,5)
 print $TIME2 (,{col2}) 

 print $INJ_DETAILS (+2,{col1})
LET $INJ_ILL_DET = RTRIM(&A.COMMENTS, ' ')
LET #INC = LENGTH($INJ_ILL_DET)
IF #INC > 0 
   LET #INC_DESCR_ROWS = #INC / 100
   IF #INC_DESCR_ROWS < 1
      LET #INC_DESCR_ROWS = 1
   else
      LET #INC_DESCR_ROWS = #INC_DESCR_ROWS + 1
   END-IF
   print $INJ_ILL_DET (+1,{col2}) WRAP 100 #INC_DESCR_ROWS
END-IF

! Body Part
STRING $BODY_PARTS $SIDE_OF_BODY BY ' - ' INTO $BODY_SIDE
 print $BODY_SIDE (+2,{col1})
show 
BEGIN-SELECT
L.BODY_PART_CD
L.SIDE_OF_BODY
N.DESCR100
N.SETID
 let $BODY_PART_TBL-DESCR100 = &N.DESCR100
 do Get_Related_BODY_PART_TBL(&L.BODY_PART_CD, $incident_date, &N.SETID)
 let $BODY_PART_TBL-DESCR100 = rtrim($BODY_PART_TBL-DESCR100, ' ')

    let $Side_Body = ' '
    let $FieldName = 'SIDE_OF_BODY'
    LET $FieldValue = &L.SIDE_OF_BODY
    do Read-Xlat
    let $Side_Body = rtrim($ShortName, ' ')

 print $BODY_PART_TBL-DESCR100 (+1,{col2},12)
 print $Side_Body (,{col3})

FROM PS_INJURY_ILL_BP L, PS_SET_CNTRL_REC M, PS_BODY_PART_TBL N
WHERE L.EMPLID = $emplid_inj AND L.EMPL_RCD = #empl_rcd
and L.INCIDENT_NBR = $incident_nbr
AND M.RECNAME       = 'BODY_PART_TBL'
AND M.SETCNTRLVALUE = &B.REG_REGION
AND N.SETID = M.SETID
AND N.BODY_PART_CD = L.BODY_PART_CD
AND N.EFFDT = (SELECT MAX(N2.EFFDT) FROM PS_BODY_PART_TBL N2 WHERE N.SETID = N2.SETID 
              AND N.BODY_PART_CD = N2.BODY_PART_CD AND N2.EFFDT <= $incident_date)
end-SELECT

! Nature of Injury
 print $INJURY_NATURE_CD (+2,{col1})
BEGIN-SELECT
O.INJURY_NATURE_CD
P.DESCR100
P.SETID
 let $INJURY_NATR_TBL-DESCR100 = &P.DESCR100
 do Get_Related_INJURY_NATR_TBL($incident_date, &O.INJURY_NATURE_CD, &P.SETID)
 let $INJURY_NATR_TBL-DESCR100 = RTRIM($INJURY_NATR_TBL-DESCR100, ' ')
 print $INJURY_NATR_TBL-DESCR100 (+1,{col2})

FROM PS_INJURY_ILL_NOI O, PS_INJURY_NATR_TBL P, PS_SET_CNTRL_REC Q
WHERE O.EMPLID = $emplid_inj AND O.EMPL_RCD = #empl_rcd
and O.INCIDENT_NBR = $incident_nbr
AND Q.RECNAME       = 'INJURY_NATR_TBL'
AND Q.SETCNTRLVALUE = &B.REG_REGION
AND Q.SETID = P.SETID
AND O.INJURY_NATURE_CD = P.INJURY_NATURE_CD
AND P.EFFDT = (SELECT MAX(P2.EFFDT) FROM PS_INJURY_NATR_TBL P2 WHERE P.SETID = P2.SETID 
              AND P.INJURY_NATURE_CD = P2.INJURY_NATURE_CD AND P2.EFFDT <= $incident_date)
end-SELECT

! Physician Data : 1st treatment
 print $HOSPITALINFO (+2,{col1})
BEGIN-SELECT
R.PHYSICIAN_ID
R.PHYSICIAN_NAME
R.MEDICAL_FAC_CD
R.ADDRESS1
R.CITY
R.COUNTRY
R.CARE_TYPE

 let $INJURY_ILL_ADDR-ADDRESS1 = rtrim(&R.ADDRESS1, ' ')
 let $INJURY_ILL_ADDR-CITY = rtrim(&R.CITY, ' ')

 let $country = &R.COUNTRY
 do Country_Descr
 let $CountryPhy1 = RTRIM($CountryDescr, ' ')

 STRING $INJURY_ILL_ADDR-ADDRESS1 $INJURY_ILL_ADDR-CITY $CountryPhy1 BY ', ' INTO $1ST_AID
 let $1ST_AID = rtrim($1ST_AID,', ')
 let $1ST_AID = ltrim($1ST_AID,',')
 STRING &R.PHYSICIAN_ID &R.PHYSICIAN_NAME BY '   ' INTO $PHY_1ST_AID
 print $HOSPITAL (+2,{col2})
 print $PHY_1ST_AID (+1,{col2})
 print $ADDRESS_BTN (+1,{col2},12)
 print $1ST_AID (,{col3})

 FROM PS_INJ_ILL_ADDR_VW R
WHERE R.INCIDENT_NBR = $incident_nbr
AND R.CARE_TYPE = 'A'
end-SELECT

! Physician Data : other treatment
 print $HOSPITALINFO2 (+2,{col1})
BEGIN-SELECT
S.PHYSICIAN_ID
S.PHYSICIAN_NAME
S.MEDICAL_FAC_CD
S.ADDRESS1
S.CITY
S.COUNTRY
S.CARE_TYPE
S.HOSPITAL

 let $AddressPhy2 = rtrim(&S.ADDRESS1, ' ')
 let $CityPhy2 = rtrim(&S.CITY, ' ')

 let $country = &S.COUNTRY
 do Country_Descr
 let $CountryPhy2 = RTRIM($CountryDescr, ' ')

 STRING $AddressPhy2 $CityPhy2 $CountryPhy2 BY ', ' INTO $OTHER_AID
 let $OTHER_AID = rtrim($OTHER_AID,', ')
 let $OTHER_AID = ltrim($OTHER_AID,',')

 IF &S.HOSPITAL > ' '
    LET $PHY_OTHER_AID = &S.HOSPITAL 
 ELSE
     STRING &S.PHYSICIAN_ID &S.PHYSICIAN_NAME BY '   ' INTO $PHY_OTHER_AID
 END-IF

 print $HOSPITAL (+2,{col2})
 print $PHY_OTHER_AID (+1,{col2})
 print $ADDRESS_BTN (+1,{col2},12)
 print $OTHER_AID (,{col3})

 FROM PS_INJ_ILL_ADDR_VW S
WHERE S.INCIDENT_NBR = $incident_nbr
AND S.CARE_TYPE <> 'A'
end-SELECT
end-procedure Injury-Details

!**********************************************************************!
begin-procedure Get_AVS_AHV
 let $NationalID = ' '
BEGIN-SELECT
U.NATIONAL_ID
 let $NationalID = &U.NATIONAL_ID
FROM PS_PERS_NID U
WHERE U.EMPLID = $emplid_inj
AND   U.COUNTRY = 'CHE'
AND   U.NATIONAL_ID_TYPE = 'AHV'
end-SELECT
end-procedure Get_AVS_AHV

!**********************************************************************!
begin-procedure Country_Descr
 let $CountryDescr = ' '
BEGIN-SELECT
Y.DESCR
   let $CountryDescr = &Y.DESCR
   do Get_Related_COUNTRY_TBL($country)
   if $COUNTRY_TBL-DESCR > ''
      let $CountryDescr = $COUNTRY_TBL-DESCR
   end-if
FROM PS_COUNTRY_TBL Y
WHERE Y.COUNTRY = $country
end-SELECT
end-procedure Country_Location

!**********************************************************************!
! Procedure:     Select-Parameters                                     !
! Description:   Controls prompting for user entered parameters        !
!**********************************************************************!
begin-procedure select-parameters

BEGIN-SELECT

RUN_CNTL_HR_CHE.EMPLID
RUN_CNTL_HR_CHE.INCIDENT_NBR
 do Get-Values
from PS_RUN_CNTL_HR_CHE RUN_CNTL_HR_CHE

where RUN_CNTL_HR_CHE.OPRID = $prcs_oprid
  and RUN_CNTL_HR_CHE.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

end-procedure

!**********************************************************************!
begin-procedure Get-String-Tbl

do Get_Field_Information    ('PER002CH',     'REPORT_TITLE',        $REPORTTITLE,           #DW)
do Get_Field_Information        ('PER002CH',    'ADDRESS_BTN',          $ADDRESS_BTN,           #DW)
do Get_Field_Information        ('PER002CH',    'AVS',                  $AVS,                   #DW)
do Get_Field_Information        ('PER002CH',    'AWAY_FROM_WORKDAYS',   $AWAY_FROM_WORKDAYS,    #DW)
do Get_Field_Information        ('PER002CH',    'BIRTHDATE',            $BIRTHDATE1,            #DW)
do Get_Field_Information        ('PER002CH',    'BODY_PARTS',           $BODY_PARTS,            #DW)
do Get_Field_Information        ('PER002CH',    'BUSINESS_UNIT',        $BUSINESS_UNIT,         #DW)
do Get_Field_Information        ('PER002CH',    'CITIZENSHIP_STATUS',   $CITIZENSHIP_STATUS,    #DW)
do Get_Field_Information        ('PER002CH',    'CIVIL_STATUS',         $CIVIL_STATUS,          #DW)
do Get_Field_Information        ('PER002CH',    'COMPANY',                  $COMPANY,               #DW)
do Get_Field_Information        ('PER002CH',    'COMPENSATION',         $COMPENSATION,          #DW)
do Get_Field_Information        ('PER002CH',    'COMPRATE',                 $COMPRATE,              #DW)
do Get_Field_Information        ('PER002CH',    'COMP_BASE_PAY_SW',         $COMP_BASE_PAY_SW,      #DW)
do Get_Field_Information        ('PER002CH',    'COMP_PCT',                 $COMP_PCT,              #DW)
do Get_Field_Information        ('PER002CH',    'COMP_RATECD',          $COMP_RATECD,           #DW)
do Get_Field_Information        ('PER002CH',    'COMP_RATE_TYPE',           $COMP_RATE_TYPE,        #DW)
do Get_Field_Information        ('PER002CH',    'CONFIRM_STATEMENT',    $CONFIRM_STATEMENT,         #DW)
do Get_Field_Information        ('PER002CH',    'CURRENCY_CD',          $CURRENCY_CD,           #DW)
do Get_Field_Information        ('PER002CH',    'DEPTID',                   $DEPTID1,               #DW)
do Get_Field_Information        ('PER002CH',    'DESCR',                    $DESCR,                     #DW)
do Get_Field_Information        ('PER002CH',    'DT_REPORTED',          $DT_REPORTED,           #DW)
do Get_Field_Information        ('PER002CH',    'EMPDATA',                  $EMPDATA,               #DW)
do Get_Field_Information        ('PER002CH',    'EMPLID',                   $EMPLID1,               #DW)
do Get_Field_Information        ('PER002CH',    'EMPL_CLASS',           $EMPL_CLASS,            #DW)
do Get_Field_Information        ('PER002CH',    'FREQUENCY_ID',         $FREQUENCY_ID,          #DW)
do Get_Field_Information        ('PER002CH',    'FULL_PART_TIME',           $FULL_PART_TIME,        #DW)
do Get_Field_Information        ('PER002CH',    'HEAD1',                    $HEAD1,                     #DW)
do Get_Field_Information        ('PER002CH',    'HEAD2',                    $HEAD2,                     #DW)
do Get_Field_Information        ('PER002CH',    'HEAD3',                    $HEAD3,                     #DW)
do Get_Field_Information        ('PER002CH',    'HEAD4',                    $HEAD4,                     #DW)
do Get_Field_Information        ('PER002CH',    'HEAD5',                    $HEAD5,                     #DW)
do Get_Field_Information        ('PER002CH',    'HEAD6',                    $HEAD6,                     #DW)
do Get_Field_Information        ('PER002CH',    'HEAD7',                    $HEAD7,                     #DW)
do Get_Field_Information        ('PER002CH',    'HIRE_DT',                  $HIRE_DT,               #DW)
do Get_Field_Information        ('PER002CH',    'HOSPITAL',                 $HOSPITAL,              #DW)
do Get_Field_Information        ('PER002CH',    'HOSPITALINFO',         $HOSPITALINFO,          #DW)
do Get_Field_Information        ('PER002CH',    'HOSPITALINFO2',            $HOSPITALINFO2,             #DW)
do Get_Field_Information        ('PER002CH',    'INCIDENT',                 $INCIDENT,              #DW)
do Get_Field_Information        ('PER002CH',    'INCIDENT_DT',          $INCIDENT_DT,           #DW)
do Get_Field_Information        ('PER002CH',    'INCIDENT_TIME',            $INCIDENT_TIME,             #DW)
do Get_Field_Information        ('PER002CH',    'INC_DESCR',            $INC_DESCR,                 #DW)
do Get_Field_Information        ('PER002CH',    'INC_LOC_DATA',         $INC_LOC_DATA,          #DW)
do Get_Field_Information        ('PER002CH',    'INJNOTIF',                 $INJNOTIF,              #DW)
do Get_Field_Information        ('PER002CH',    'INJURY_NATURE_CD',         $INJURY_NATURE_CD,      #DW)
do Get_Field_Information        ('PER002CH',    'INJ_DETAILS',          $INJ_DETAILS,           #DW)
do Get_Field_Information        ('PER002CH',    'INJ_NOTIF',            $INJ_NOTIF,                 #DW)
do Get_Field_Information        ('PER002CH',    'INS_NBR',                  $INS_NBR,               #DW)
do Get_Field_Information        ('PER002CH',    'JOBCODE',                  $JOBCODE1,              #DW)
do Get_Field_Information        ('PER002CH',    'LASTDT',                   $LASTDT,                #DW)
do Get_Field_Information        ('PER002CH',    'LOCATION',                 $LOCATION1,             #DW)
do Get_Field_Information        ('PER002CH',    'LOCATIONID',           $LOCATIONID,            #DW)
do Get_Field_Information        ('PER002CH',    'LOCATIONNAME',         $LOCATIONNAME1,         #DW)
do Get_Field_Information        ('PER002CH',    'NAME',                 $NAME1,                 #DW)
do Get_Field_Information        ('PER002CH',    'NON_EMPLOYEE_ID',          $NON_EE_ID,             #DW)
do Get_Field_Information        ('PER002CH',    'PEOPLE',                   $PEOPLE,                #DW)
do Get_Field_Information        ('PER002CH',    'PHONE',                    $PHONE,                     #DW)
do Get_Field_Information        ('PER002CH',    'REHIRE_DT',            $REHIRE_DT,                 #DW)
do Get_Field_Information        ('PER002CH',    'REPORTEDBY',           $REPORTEDBY,            #DW)
do Get_Field_Information        ('PER002CH',    'REPORTEDTO',           $REPORTEDTO,            #DW)
do Get_Field_Information        ('PER002CH',    'REPORT_TITLE',         $REPORT_TITLE,          #DW)
do Get_Field_Information        ('PER002CH',    'RESTRICTD_WORKDAYS',   $RESTRICTD_WORKDAYS,    #DW)
do Get_Field_Information        ('PER002CH',    'RETURN_DT',            $RETURN_DT,                 #DW)
do Get_Field_Information        ('PER002CH',    'ROLE',                 $ROLE1,                 #DW)
do Get_Field_Information        ('PER002CH',    'SEQ',                  $SEQ,                   #DW)
do Get_Field_Information        ('PER002CH',    'SIDE_OF_BODY',         $SIDE_OF_BODY,          #DW)
do Get_Field_Information        ('PER002CH',    'TIME_REP',                 $TIME_REP,              #DW)
do Get_Field_Information        ('PER002CH',    'TOT_COMP',                 $TOT_COMP,              #DW)
do Get_Field_Information        ('PER002CH',    'REG_REGION',           $REG_REGION,            #DW)
end-procedure

!**********************************************************************!
begin-procedure Print-Accident-Report1

! Company information
print $HEAD1 (+2,{col1}) BOLD
PRINT $COMPANY (+2,{col1})
print $COMPANY_TBL-DESCR (,{col2},18)
string $COMPANY_TBL-ADDRESS1 $COMPANY_TBL-CITY $Company_Country by ', ' into $ADDRESS_COMPANY
 let $ADDRESS_COMPANY = rtrim($ADDRESS_COMPANY,', ')
 let $ADDRESS_COMPANY = ltrim($ADDRESS_COMPANY,',')
print $ADDRESS_BTN (+1,{col1},18)
print $ADDRESS_COMPANY (,{col2}) WRAP 60 3
print $PHONE (+1,{col1},18)
print &E.PHONE (,{col2})
print $INS_NBR (+1,{col1},18)
print &C.ACCDNT_INS_NBR_CHE (,{col2})

! Employee injured
print $HEAD2 (+2,{col1}) BOLD
print $EMPLID1 (+2,{col1},18)
print $emplid (,{col2})
print $NAME1 (+1,{col1},18)
print &F.NAME (,{col2})
print $ADDRESS_BTN (+1,{col1},18)

print $ADDRESS_EE (,{col2}) WRAP 60 3
print $BIRTHDATE1 (+1,{col1},18)
print $BIRTHDATE_EE (,{col2})
print $AVS (+1,{col1},18)
print $NationalID (,{col2})
print $CITIZENSHIP_STATUS (+1,{col1})
print $CIVIL_STATUS (+1,{col1},18)
print $CivilStatus (,{col2})

! Employee data at incident date
print $EMPDATA (+2,{col1})
print $HIRE_DT (+2,{col1},18)
print $HIRE_DT1 (,{col2})
print $REHIRE_DT (+1,{col1},18)
print $REHIRE_DT1 (,{col2})
print $EMPL_CLASS (+1,{col1},18)
print $EE_Class (,{col2})
print $BUSINESS_UNIT (+1,{col1},18)
print &V.BUSINESS_UNIT (,{col2},12)
print $BUS_UNIT_TBL_HR-DESCR (,{col3})
print $DEPTID1 (+1,{col1},18)
print $DEPTID (,{col2},12)
print $DeptName (,{col3})
print $LOCATION1 (+1,{col1},18)
print $LOCATION (,{col2},12)
print $LocationName (,{col3})
print $JOBCODE1 (+1,{col1},18)
print $JOBCODE (,{col2},12)
print $JobTitle (,{col3})
end-procedure

!**********************************************************************!
begin-procedure Print-Accident-Report2
New-Page
! Incident detail
print $HEAD3 (+2,{col1}) BOLD
print $INCIDENT_DT (+2,{col1},18)
print $INCIDENT_DT1 (,{col2})
print $INCIDENT_TIME (+1,{col1},18)
      LET $TIME3 = substr(&B.INCIDENT_TIME,1,5)
print $TIME3 (,{col2})
print $REG_REGION (+1,{col1},18)
print &B.REG_REGION (,{col2})
print $INJ_NOTIF (+2,{col1})
print $DT_REPORTED (+2,{col1},18)
print $DT_REPORTED1 (,{col2})
print $TIME_REP (+1,{col1},18)
      LET $TIME4 = substr(&B.TIME_REPORTED,1,5)
print  $TIME4 (,{col2}) 
print $REPORTEDTO (+1,{col1},18)
print &B.REPORTED_TO (,{col2},12)
print $REPORTED_TO (,{col3})
print $REPORTEDBY (+1,{col1},18)
print $REPORT_BY1 (,{col2},12)
print $REPORTED_BY1 (,{col3})
if $REPORT_BY2 > ' '
   print $REPORT_BY2 (+1,{col2},12)
   print $REPORTED_BY2 (,{col3})
end-if

! Incident description
print $INC_DESCR (+2,{col1})
LET $INC_DESC = RTRIM(&B.DESCRLONG, ' ')
LET #INC_DESCR = LENGTH($INC_DESC)
IF #INC_DESCR > 0 
   LET #INC_DESCR_ROWS = #INC_DESCR / 100
   IF #INC_DESCR_ROWS < 1
      LET #INC_DESCR_ROWS = 1
   else
      LET #INC_DESCR_ROWS = #INC_DESCR_ROWS + 1
   END-IF
   print $INC_DESC (+1,{col2}) WRAP 100 #INC_DESCR_ROWS
END-IF

! Incident location data
print $INC_LOC_DATA (+2,{col1})
print $LOCATIONID (+2,{col1},18)
print &B.LOCATION (,{col2})
print $LOCATIONNAME1 (+1,{col1},18)
print &B.LOCATION_NAME (,{col2})
print $ADDRESS_BTN (+1,{col1},18)
let $ADD1_LOC = rtrim(&B.ADDRESS1, ' ')
LET $CITY_LOC = rtrim(&B.CITY, ' ')
LET $COUNTRY_LOC = rtrim($CountryLoc, ' ')
string $ADD1_LOC $CITY_LOC $COUNTRY_LOC by ', ' into $ADD_LOC
 let $ADD_LOC = rtrim($ADD_LOC,', ')
 let $ADD_LOC = ltrim($ADD_LOC,',')
print $ADD_LOC (,{col2})
end-procedure

!**********************************************************************!
begin-procedure Read-Xlat
  do Read-Translate-Table
  move $XlatShortName to $ShortName
  move $XlatLongName  to $LongName
end-procedure

!**********************************************************************!
begin-procedure get-non-ee-data
let $NON_EE_NAME = ' '
begin-SELECT
AB.NAME
  LET $NON_EE_NAME = &AB.NAME
FROM  PS_NE_PERSONAL_DTA AB
WHERE AB.NON_EMPLOYEE_ID = $NON_EE_ID1
end-SELECT
end-procedure

!******************************************************************!
begin-procedure Get-Pers_Data_Effdt

Let $Pers_Data_Sex = ' '
Let $Pers_Data_Mar_Status = ' '

begin-select
PDE.SEX
PDE.MAR_STATUS
  Let $Pers_Data_Sex = &PDE.SEX
  Let $Pers_Data_Mar_Status = &PDE.MAR_STATUS

From PS_PERS_DATA_EFFDT PDE
Where PDE.EMPLID = $Emplid
and PDE.EFFDT =
       (SELECT MAX(PDF.EFFDT)
        from PS_PERS_DATA_EFFDT PDF
        where PDF.EMPLID = PDE.EMPLID
        and   PDF.EFFDT <= &J.EFFDT)
end-select

end-procedure !Get-Pers_Data_Effdt

!******************************************************************!
begin-procedure Get-Person

Let $Pers_BirthDate = ' '

begin-select
PERSON.BIRTHDATE

  Let $Pers_BirthDate = &PERSON.BIRTHDATE

From PS_PERSON PERSON
Where PERSON.EMPLID = $EmplID

end-select

end-procedure !Get-Person

!**********************************************************************!
! Called SQC Procedures                                                !
!**********************************************************************!
#include 'stdapi.sqc'    !Routines to update run status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
#include 'askaod.sqc'    !Ask As Of Date input
#include 'getdptnm.sqc'
#include 'getlocnm.sqc'
#include 'getsetid.sqc'
#include 'getjobtl.sqc'
#include 'getempad.sqc'
#include 'getempnm.sqc'
#Include 'getempcl.sqc'  !Get Employee Class Name
#Include 'getaddr.sqc'   !Routine to retrieve Home Address
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
