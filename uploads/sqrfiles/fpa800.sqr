!***********************************************************************
!
! FPA800.SQR  : Select Promotable Employees
!
!***********************************************************************
!***********************************************************************
!
!               Confidentiality Information:
!
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:12:49:18                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!
!***********************************************************************

#DEFINE promouvable

#include 'setenv.sqc'       ! Set environment
#include 'setup01.sqc'      ! Printer and page-size initialization


BEGIN-REPORT

Do Init-DateTime
Do Init-Number
Do Get-Current-DateTime()
Do Init-Report
Do Proc-Main
do Stdapi-Term

END-REPORT



!***************************************************************
!
!
!       Init-Report
!
!
!***************************************************************
BEGIN-PROCEDURE  Init-Report

Do Stdapi-Init
do Security-Param       !SQR security


if $prcs_process_instance = ''

        INPUT $Date 'Starting date'
        let $fp_thruDate = $Date
        if rtrim($fp_thruDate,' ') = ''
            DO Convert-To-DTU-Date ($AsOfToday,$fp_ThruDate)
        end-if

        INPUT $Setid_Rank 'Setid Rank'
        let $Setid_Rank = Rtrim($Setid_Rank ,' ')

        INPUT $Rank_Start 'Grade of Origin'
        let $Rank_Start = Rtrim($Rank_Start,' ')

else

        Do FP-Select-Parameters
        Do Select-Parameters

end-if

END-PROCEDURE Init-Report



!***************************************************************
!
!
!       Get-Values
!
!
!***************************************************************
BEGIN-PROCEDURE  Get-Values

        Do Get-fp-thrudate
        Do Get-Rank-Start
        Do Get-Setid-Rank

END-PROCEDURE Get-Values



!***************************************************************
!
!
!       Proc-Main
!
!
!***************************************************************
BEGIN-PROCEDURE  Proc-Main

! Promotable Employees Select Criteria
!-------------------------------------
DO Convert-To-DTU-Date ($fp_thruDate,$Thrudate_dtu)

#IFDEF DEBUGI
    display 'Proc-Main Beginning'
    display '$Thrudate_dtu : ' noline
    display $Thrudate_dtu
#ENDIF

! Delete FPAEECAREERTER
!----------------------
do DELETE-FPAEECAREERTER


let $sql-statement = 'FPA800.SQR, Select, Proc-Main'
BEGIN-SELECT On-Error=SQL-Error

{DATEOUT-PREFIX}A.FP_THRUDATE{DATEOUT-SUFFIX}   &FP_THRUDATE2
A.FP_SETID_RANK                                 &FP_SETID_RANK
A.FP_RANK_START                                 &FP_RANK_START
A.FP_SETID_RANK_END                             &FP_SETID_RANK_END
A.FP_RANK_END                                   &FP_RANK_END
A.FP_STEP_MIN                                   &FP_STEP_MIN
A.FP_TRUESEN_MIN_DY                             &FP_TRUESEN_MIN_DY
A.FP_TRUESEN_MIN_MN                             &FP_TRUESEN_MIN_MN
A.FP_TRUESEN_MIN_YR                             &FP_TRUESEN_MIN_YR
A.FP_DURSTEP_MIN_DY                             &FP_DURSTEP_MIN_DY
A.FP_DURSTEP_MIN_MN                             &FP_DURSTEP_MIN_MN
A.FP_DURSTEP_MIN_YR                             &FP_DURSTEP_MIN_YR
A.FP_STEP_MAX                                   &FP_STEP_MAX
A.FP_TRUESEN_MAX_DY                             &FP_TRUESEN_MAX_DY
A.FP_TRUESEN_MAX_MN                             &FP_TRUESEN_MAX_MN
A.FP_TRUESEN_MAX_YR                             &FP_TRUESEN_MAX_YR
A.FP_DURSTEP_MAX_DY                             &FP_DURSTEP_MAX_DY
A.FP_DURSTEP_MAX_MN                             &FP_DURSTEP_MAX_MN
A.FP_DURSTEP_MAX_YR                             &FP_DURSTEP_MAX_YR
A.FP_SENRAN_DY                                  &FP_SENRAN_DY
A.FP_SENRAN_MN                                  &FP_SENRAN_MN
A.FP_SENRAN_YR                                  &FP_SENRAN_YR
A.FP_DURRAN_DY                                  &FP_DURRAN_DY
A.FP_DURRAN_MN                                  &FP_DURRAN_MN
A.FP_DURRAN_YR                                  &FP_DURRAN_YR
A.FP_SENCOR_DY                                  &FP_SENCOR_DY
A.FP_SENCOR_MN                                  &FP_SENCOR_MN
A.FP_SENCOR_YR                                  &FP_SENCOR_YR
A.FP_DURCOR_DY                                  &FP_DURCOR_DY
A.FP_DURCOR_MN                                  &FP_DURCOR_MN
A.FP_DURCOR_YR                                  &FP_DURCOR_YR
A.FP_SENCAT_DY                                  &FP_SENCAT_DY
A.FP_SENCAT_MN                                  &FP_SENCAT_MN
A.FP_SENCAT_YR                                  &FP_SENCAT_YR
A.FP_DURCAT_DY                                  &FP_DURCAT_DY
A.FP_DURCAT_MN                                  &FP_DURCAT_MN
A.FP_DURCAT_YR                                  &FP_DURCAT_YR
A.FP_MARK_N1                                    &FP_MARK_N1
A.FP_MARK_N2                                    &FP_MARK_N2
A.FP_MARK_N3                                    &FP_MARK_N3
A.FP_PRO_ACCESS                                 &FP_PRO_ACCESS
B.FP_MATRIX_TYP                                 &FP_MATRIX_TYP
B.FP_MATRIX_CD                                  &FP_MATRIX_CD
B.FP_SCALE_CD                                   &FP_SCALE_CD

    #IFDEF DEBUGI
        Display '** Start **'
    #ENDIF

    !---Init variables
    Do Init_Var

    !---Delete rows from FPAEEPROM_TBL for Grade of Origin and starting date selected in FPMPROMTABL_TBL
    Do DELETE-FPAEEPROM-TBL

    !---Retrieve fields belonging to PS_FPAEECAREER
    do LIST-FIELDS

    !---Select Employees from FPAEECAREER and insert into FPAEECAREERTER
    do SELECT-FPAEECAREER

    #IFDEF DEBUGI
        !Seniority calculation in CareerTer
        Display '****************************'
        Display '*****  CALL FPA315  ********'
        Display '****************************'
    #ENDIF

    let $ThruDate = $fp_thruDate
    Let $_Emplid = ''
    do FPA315-Main

    !---Select Promotable Employees
    Do Get_Agents_Promouvables

    !---Delete FPAEECAREERTER---
    do DELETE-FPAEECAREERTER

    #IFDEF DEBUGI
        Display '** End **'
    #ENDIF

FROM PS_FPMPROMTABL_TBL A,
     PS_FPMRANK_TBL B
WHERE A.FP_THRUDATE = {DATEIN-PREFIX}$fp_Thrudate{DATEIN-SUFFIX}
      AND A.FP_SETID_RANK = $Setid_Rank
      AND A.FP_RANK_START = $Rank_Start
      AND A.FP_SETID_RANK = B.SETID
      AND A.FP_RANK_START = B.FP_RANK_CD
      AND B.EFF_STATUS = 'A'
      AND B.EFFDT = (SELECT MAX(C.EFFDT)
                     FROM PS_FPMRANK_TBL C
                     WHERE C.SETID = B.SETID
                     AND   C.FP_RANK_CD = B.FP_RANK_CD
                     AND   C.EFF_STATUS = 'A'
                     AND   C.EFFDT <= A.FP_THRUDATE)
END-SELECT

#IFDEF DEBUGI
    display 'Proc-Main Ending'
#ENDIF

END-PROCEDURE Proc-Main



!***************************************************************
!
!
!       Init_Var
!
!
!***************************************************************
BEGIN-PROCEDURE Init_Var

!---Init variables----

Let #FP_TRUESEN_MIN_DY       =&FP_TRUESEN_MIN_DY
Let #FP_TRUESEN_MIN_MN       =&FP_TRUESEN_MIN_MN
Let #FP_TRUESEN_MIN_YR       =&FP_TRUESEN_MIN_YR
Let #FP_DURSTEP_MIN_DY       =&FP_DURSTEP_MIN_DY
Let #FP_DURSTEP_MIN_MN       =&FP_DURSTEP_MIN_MN
Let #FP_DURSTEP_MIN_YR       =&FP_DURSTEP_MIN_YR

Let #FP_TRUESEN_MAX_DY       =&FP_TRUESEN_MAX_DY
Let #FP_TRUESEN_MAX_MN       =&FP_TRUESEN_MAX_MN
Let #FP_TRUESEN_MAX_YR       =&FP_TRUESEN_MAX_YR
Let #FP_DURSTEP_MAX_DY       =&FP_DURSTEP_MAX_DY
Let #FP_DURSTEP_MAX_MN       =&FP_DURSTEP_MAX_MN
Let #FP_DURSTEP_MAX_YR       =&FP_DURSTEP_MAX_YR

Let #FP_SENRAN_DY            =&FP_SENRAN_DY
Let #FP_SENRAN_MN            =&FP_SENRAN_MN
Let #FP_SENRAN_YR            =&FP_SENRAN_YR
Let #FP_DURRAN_DY            =&FP_DURRAN_DY
Let #FP_DURRAN_MN            =&FP_DURRAN_MN
Let #FP_DURRAN_YR            =&FP_DURRAN_YR

Let #FP_SENCOR_DY            =&FP_SENCOR_DY
Let #FP_SENCOR_MN            =&FP_SENCOR_MN
Let #FP_SENCOR_YR            =&FP_SENCOR_YR
Let #FP_DURCOR_DY            =&FP_DURCOR_DY
Let #FP_DURCOR_MN            =&FP_DURCOR_MN
Let #FP_DURCOR_YR            =&FP_DURCOR_YR


Let #FP_SENCAT_DY            =&FP_SENCAT_DY
Let #FP_SENCAT_MN            =&FP_SENCAT_MN
Let #FP_SENCAT_YR            =&FP_SENCAT_YR
Let #FP_DURCAT_DY            =&FP_DURCAT_DY
Let #FP_DURCAT_MN            =&FP_DURCAT_MN
Let #FP_DURCAT_YR            =&FP_DURCAT_YR

Let #FP_MARK_N1              =&FP_MARK_N1
Let #FP_MARK_N2              =&FP_MARK_N2
Let #FP_MARK_N3              =&FP_MARK_N3

!----Test if variables are not null

Do Rtrim_Nnull(&FP_SETID_RANK,$FP_SETID_RANK)
Do Rtrim_Nnull(&FP_RANK_START,$FP_RANK_START)
Do Rtrim_Nnull(&FP_SETID_RANK_END,$FP_SETID_RANK_END)
Do Rtrim_Nnull(&FP_RANK_END,$FP_RANK_END)
Do Rtrim_Nnull(&FP_STEP_MIN,$FP_STEP_MIN)
Do Rtrim_Nnull(&FP_STEP_MAX,$FP_STEP_MAX)
!Do Rtrim_Nnull(&FP_CORPS_CD,$FP_CORPS_CD)
!Do Rtrim_Nnull(&FP_CATG_FP,$FP_CATG_FP)
Do Rtrim_Nnull(&FP_PRO_ACCESS,$FP_PRO_ACCESS)
Do Rtrim_Nnull(&FP_MATRIX_TYP,$FP_MATRIX_TYP)
Do Rtrim_Nnull(&FP_MATRIX_CD,$FP_MATRIX_CD)
Do Rtrim_Nnull(&FP_SCALE_CD,$FP_SCALE_CD)

Do Convert-To-DTU-Date(&FP_THRUDATE2,$StepBeg_dt)

#IFDEF DEBUGI
    Display 'Prom Employees Select Criteria :'
    Display '$StepBeg_dt : '        noline
    Display $StepBeg_dt
    Display '$FP_RANK_END : '       noline
    Display $FP_RANK_END
    Display 'FP_SETID_RANK_END : '  noline
    Display $FP_SETID_RANK_END
    Display '$FP_SETID_RANK : '     noline
    Display $FP_SETID_RANK
    Display '$FP_RANK_START : '     noline
    Display $FP_RANK_START
    Display '$FP_MATRIX_TYP : '     noline
    Display $FP_MATRIX_TYP
    Display '$FP_MATRIX_CD : '      noline
    Display $FP_MATRIX_CD
    Display '$FP_SCALE_CD : '       noline
    Display $FP_SCALE_CD
#ENDIF


END-PROCEDURE Init_Var


!***************************************************************
!
!
!       Rtrim_Nnull
!
!
!***************************************************************
BEGIN-PROCEDURE Rtrim_Nnull($nom_in,:$nom_out)

!----do rtrim if $nom_in is not null

let $nom_out = rtrim($nom_in,' ')
if isnull($nom_out)
  let $nom_out = ' '
end-if

END-PROCEDURE Rtrim_Nnull



!***************************************************************
!
!
!       Get_Agents_Promouvables
!
!
!***************************************************************
BEGIN-PROCEDURE  Get_Agents_Promouvables

! Dynamic 'Where' building
!-------------------------

let $select-where1 = 'A.FP_SETID_RANK = ''' || $FP_SETID_RANK || '''
                      AND A.FP_RANK_CD = ''' || $FP_RANK_START || '''
                      AND A.FP_INST_STAT = ''R''
                      AND A.EMPLID = C.EMPLID
                      AND A.EFFDT <= {DATEIN-PREFIX}''' ||$fp_thrudate|| ''' {DYN-DateIn-Suffix}
                      AND A.EFFDT  = '||
                          '(SELECT MAX(EFFDT) from PS_FPAEECAREERTER A1
                                   WHERE  A1.EMPLID    = A.EMPLID
                                   AND    A1.EMPL_RCD = A.EMPL_RCD
                                   AND    A1.EFFDT    <=  {DATEIN-PREFIX}''' ||$fp_thrudate|| ''' {DYN-DateIn-Suffix})' ||
                     ' AND B.FP_MATRIX_TYP = ''' || $FP_MATRIX_TYP || '''
                      AND B.FP_MATRIX_CD  = ''' || $FP_MATRIX_CD  || '''
                      AND B.FP_SCALE_CD   = ''' || $FP_SCALE_CD   || '''
                      AND B.FP_STEP_CD    = A.FP_STEP_CD ' ||
                     ' AND B.EFFDT = ' ||
                          '(SELECT MAX(B1.EFFDT) from PS_FPMSALSTEP_TBL B1
                                   WHERE  B1.FP_MATRIX_TYP = ''' || $FP_MATRIX_TYP || '''
                                   AND    B1.FP_MATRIX_CD  = ''' || $FP_MATRIX_CD  || '''
                                   AND    B1.FP_SCALE_CD   = ''' || $FP_SCALE_CD   || '''
                                   AND    B1.FP_STEP_CD    = A.FP_STEP_CD
                                   AND    B1.EFFDT <= A.EFFDT) ' ||
                     'AND A.EFFSEQ = ' ||
                           '(SELECT MAX(B2.EFFSEQ) from PS_FPAEECAREERTER B2
                                    WHERE B2.EMPLID    = A.EMPLID
                                    AND   B2.EMPL_RCD = A.EMPL_RCD
                                    AND   B2.FP_INST_STAT = ''R''
                                    AND   B2.EFFDT = A.EFFDT ) '


!* Select steps and seniority *

   if $FP_STEP_MIN != ' '

          Do Get-Step-No ($FP_MATRIX_TYP,$FP_MATRIX_CD,$FP_SCALE_CD,$FP_STEP_MIN,$fp_thrudate,#Step_min_No,$equiv_step)

          let $select-where1 = $select-where1 || ' and B.FP_STEP_NO >= ' || to_char(#Step_min_No)

   end-if

   if $FP_STEP_MAX != ' '

           Do Get-Step-No ($FP_MATRIX_TYP,$FP_MATRIX_CD,$FP_SCALE_CD,$FP_STEP_MAX,$fp_thruDate,#Step_max_No,$equiv_step)

           let $select-where1 = $select-where1 || ' and B.FP_STEP_NO <= ' || to_char(#Step_max_No)

   end-if



   Do Rtrim_Nnull(&EMPLID_AG,$EMPLID_AG)
   Do Rtrim_Nnull(&FP_STEP_CD_AG,$FP_STEP_CD_AG)
   Do Rtrim_Nnull(&FP_CORPS_CD_AG,$FP_CORPS_CD_AG)
   Do Rtrim_Nnull(&FP_CATG_FP_AG,$FP_CATG_FP_AG)
   Do Rtrim_Nnull(&FP_PRO_ACCESS_AG,$FP_PRO_ACCESS_AG)

    #IFDEF DEBUGI
        display 'Where Variable'
        display $select-where1
    #ENDIF

!--Select Promotable Employees---

let $sql-statement = 'FPA800.SQR, Select, Get_Agents_Promouvables'
BEGIN-SELECT DISTINCT On-Error=SQL-Error

A.EMPLID                                        &EMPLID_AG
A.EMPL_RCD                                      &EMPL_RCD_AG
A.FP_SETID_RANK                                 &FP_SETID_RANK_AG
A.FP_RANK_CD                                    &FP_RANK_CD_AG
A.FP_STEP_CD                                    &FP_STEP_CD_AG
{DATEOUT-PREFIX}A.EFFDT{DATEOUT-SUFFIX}         &EFFDT_AG
A.FP_TRUESEN_DY                                 &FP_TRUESEN_DY_AG
A.FP_TRUESEN_MN                                 &FP_TRUESEN_MN_AG
A.FP_TRUESEN_YR                                 &FP_TRUESEN_YR_AG
A.FP_DURSTEP_DY                                 &FP_DURSTEP_DY_AG
A.FP_DURSTEP_MN                                 &FP_DURSTEP_MN_AG
A.FP_DURSTEP_YR                                 &FP_DURSTEP_YR_AG
A.FP_SENRAN_DY                                  &FP_SENRAN_DY_AG
A.FP_SENRAN_MN                                  &FP_SENRAN_MN_AG
A.FP_SENRAN_YR                                  &FP_SENRAN_YR_AG
A.FP_DURRAN_DY                                  &FP_DURRAN_DY_AG
A.FP_DURRAN_MN                                  &FP_DURRAN_MN_AG
A.FP_DURRAN_YR                                  &FP_DURRAN_YR_AG
A.FP_SENENTRK_DY                                &FP_SENENTRK_DY_AG
A.FP_SENENTRK_MN                                &FP_SENENTRK_MN_AG
A.FP_SENENTRK_YR                                &FP_SENENTRK_YR_AG
A.FP_CORPS_CD                                   &FP_CORPS_CD_AG
A.FP_SENCOR_DY                                  &FP_SENCOR_DY_AG
A.FP_SENCOR_MN                                  &FP_SENCOR_MN_AG
A.FP_SENCOR_YR                                  &FP_SENCOR_YR_AG
A.FP_DURCOR_DY                                  &FP_DURCOR_DY_AG
A.FP_DURCOR_MN                                  &FP_DURCOR_MN_AG
A.FP_DURCOR_YR                                  &FP_DURCOR_YR_AG
A.FP_SENENTCRP_DY                               &FP_SENENTCRP_DY_AG
A.FP_SENENTCRP_MN                               &FP_SENENTCRP_MN_AG
A.FP_SENENTCRP_YR                               &FP_SENENTCRP_YR_AG
A.FP_CATG_FP                                    &FP_CATG_FP_AG
A.FP_SENENTCTG_DY                               &FP_SENENTCTG_DY_AG
A.FP_SENENTCTG_MN                               &FP_SENENTCTG_MN_AG
A.FP_SENENTCTG_YR                               &FP_SENENTCTG_YR_AG
A.FP_PRO_ACCESS                                 &FP_PRO_ACCESS_AG
B.FP_STEP_NO                                    &FP_STEP_NO_AG
{DATEOUT-PREFIX}C.BIRTHDATE{DATEOUT-SUFFIX}     &BIRTHDATE_AG

      !---Test before insert and init variables
      Do Var_test

    #IFDEF DEBUGI
        display 'WHERE variable'
        display $select-where1

        Display '***** Employees selected *****'
        Display '$EMPLID_AG : '         noline
        Display $EMPLID_AG
        Display '$FP_SETID_RANK_AG : '  noline
        Display $FP_SETID_RANK_AG
        Display '$FP_STEP_CD_AG : '     noline
        Display $FP_STEP_CD_AG
        Display '$Effdt_Ag : '          noline
        Display $Effdt_Ag
        Display '$FP_CORPS_CD_AG : '    noline
        Display $FP_CORPS_CD_AG
        Display '#FP_STEP_NO_AG : '     noline
        Display #FP_STEP_NO_AG
    #ENDIF

   !---Select body from Employees selected for the calculation of seniority in the Category
   Do Get_Corps_Mat

   !* Calculation of seniority and service length in the Category

   let #FP_SENCAT_YR_AG = #FP_SENCAT_YR_AG + #FP_SENENTCTG_YR_AG
   let #FP_SENCAT_MN_AG = #FP_SENCAT_MN_AG + #FP_SENENTCTG_MN_AG
   let #FP_SENCAT_DY_AG = #FP_SENCAT_DY_AG + #FP_SENENTCTG_DY_AG

   While #FP_SENCAT_DY_AG >= 30
       let #FP_SENCAT_MN_AG = #FP_SENCAT_MN_AG + 1
       let #FP_SENCAT_DY_AG = #FP_SENCAT_DY_AG - 30
   End-While

   While #FP_SENCAT_MN_AG >= 12
       let #FP_SENCAT_YR_AG = #FP_SENCAT_YR_AG + 1
       let #FP_SENCAT_MN_AG = #FP_SENCAT_MN_AG - 12
   End-While


   do Change-Char (#FP_SENCAT_YR,#FP_SENCAT_MN,#FP_SENCAT_DY,$FP_SENCAT)
   do Change-Char (#FP_DURCAT_YR,#FP_DURCAT_MN,#FP_DURCAT_DY,$FP_DURCAT)

   do Change-Char (#FP_SENCAT_YR_AG,#FP_SENCAT_MN_AG,#FP_SENCAT_DY_AG,$FP_SENCAT_AG)
   do Change-Char (#FP_DURCAT_YR_AG,#FP_DURCAT_MN_AG,#FP_DURCAT_DY_AG,$FP_DURCAT_AG)


   !* Select the seniority and service length in the body *

   let #FP_SENCOR_YR_AG = #FP_SENCOR_YR_AG + #FP_SENENTCRP_YR_AG
   let #FP_SENCOR_MN_AG = #FP_SENCOR_MN_AG + #FP_SENENTCRP_MN_AG
   let #FP_SENCOR_DY_AG = #FP_SENCOR_DY_AG + #FP_SENENTCRP_DY_AG

   While #FP_SENCOR_DY_AG >= 30
       let #FP_SENCOR_MN_AG = #FP_SENCOR_MN_AG + 1
       let #FP_SENCOR_DY_AG = #FP_SENCOR_DY_AG - 30
   End-While

   While #FP_SENCOR_MN_AG >= 12
       let #FP_SENCOR_YR_AG = #FP_SENCOR_YR_AG + 1
       let #FP_SENCOR_MN_AG = #FP_SENCOR_MN_AG - 12
   End-While


   do Change-Char (#FP_SENCOR_YR,#FP_SENCOR_MN,#FP_SENCOR_DY,$FP_SENCOR)
   do Change-Char (#FP_SENCOR_YR_AG,#FP_SENCOR_MN_AG,#FP_SENCOR_DY_AG,$FP_SENCOR_AG)

   do Change-Char (#FP_DURCOR_YR,#FP_DURCOR_MN,#FP_DURCOR_DY,$FP_DURCOR)
   do Change-Char (#FP_DURCOR_YR_AG,#FP_DURCOR_MN_AG,#FP_DURCOR_DY_AG,$FP_DURCOR_AG)


  !*  Calculation seniority and service length in the Grade *

   let #FP_SENRAN_YR_AG = #FP_SENRAN_YR_AG + #FP_SENENTRK_YR_AG
   let #FP_SENRAN_MN_AG = #FP_SENRAN_MN_AG + #FP_SENENTRK_MN_AG
   let #FP_SENRAN_DY_AG = #FP_SENRAN_DY_AG + #FP_SENENTRK_DY_AG


   While #FP_SENRAN_DY_AG >= 30
       let #FP_SENRAN_MN_AG = #FP_SENRAN_MN_AG + 1
       let #FP_SENRAN_DY_AG = #FP_SENRAN_DY_AG - 30
   End-While

   While #FP_SENRAN_MN_AG >= 12
       let #FP_SENCOR_YR_AG = #FP_SENCOR_YR_AG + 1
       let #FP_SENRAN_MN_AG = #FP_SENRAN_MN_AG - 12
   End-While


  !*  Seniority and service length

  do Change-Char (#FP_SENRAN_YR,#FP_SENRAN_MN,#FP_SENRAN_DY,$FP_SENRAN)
  do Change-Char (#FP_SENRAN_YR_AG,#FP_SENRAN_MN_AG,#FP_SENRAN_DY_AG,$FP_SENRAN_AG)

  do Change-Char (#FP_DURRAN_YR,#FP_DURRAN_MN,#FP_DURRAN_DY,$FP_DURRAN)
  do Change-Char (#FP_DURRAN_YR_AG,#FP_DURRAN_MN_AG,#FP_DURRAN_DY_AG,$FP_DURRAN_AG)


!* Select steps and seniority *

   if #FP_STEP_NO_AG = #Step_min_No

        do Change-Char (#FP_TRUESEN_MIN_YR,#FP_TRUESEN_MIN_MN,#FP_TRUESEN_MIN_DY,$FP_TRUESEN_MIN)
        do Change-Char (#FP_DURSTEP_MIN_YR,#FP_DURSTEP_MIN_MN,#FP_DURSTEP_MIN_DY,$FP_DURSTEP_MIN)

        do Change-Char (#FP_TRUESEN_YR_AG,#FP_TRUESEN_MN_AG,#FP_TRUESEN_DY_AG,$FP_TRUESEN_AG)
        do Change-Char (#FP_DURSTEP_YR_AG,#FP_DURSTEP_MN_AG,#FP_DURSTEP_DY_AG,$FP_DURSTEP_AG)

   end-if

   if #FP_STEP_NO_AG = #Step_max_No

        do Change-Char (#FP_TRUESEN_MAX_YR,#FP_TRUESEN_MAX_MN,#FP_TRUESEN_MAX_DY,$FP_TRUESEN_MAX)
        do Change-Char (#FP_DURSTEP_MAX_YR,#FP_DURSTEP_MAX_MN,#FP_DURSTEP_MAX_DY,$FP_DURSTEP_MAX)

        do Change-Char (#FP_TRUESEN_YR_AG,#FP_TRUESEN_MN_AG,#FP_TRUESEN_DY_AG,$FP_TRUESEN_AG)
        do Change-Char (#FP_DURSTEP_YR_AG,#FP_DURSTEP_MN_AG,#FP_DURSTEP_DY_AG,$FP_DURSTEP_AG)

   end-if


   if (rtrim($FP_SENCAT,' ') != '000000') and (rtrim($FP_SENCAT_AG,' ') < rtrim($FP_SENCAT,' '))

     #IFDEF DEBUGI
        display 'seniority in the category is too small'
     #ENDIF

   else

     if (rtrim($FP_DURCAT,' ') != '000000') and (rtrim($FP_DURCAT_AG,' ') < rtrim($FP_DURCAT,' '))

       #IFDEF DEBUGI
            display 'service length in the category is too small'
       #ENDIF

     else


       if (rtrim($FP_SENCOR,' ') != '000000') and (rtrim($FP_SENCOR_AG,' ') < rtrim($FP_SENCOR,' '))

         #IFDEF DEBUGI
            display 'seniority in the body is too small'
         #ENDIF

       else

         if (rtrim($FP_DURCOR,' ') != '000000') and (rtrim($FP_DURCOR_AG,' ') < rtrim($FP_DURCOR,' '))

           #IFDEF DEBUGI
            display 'service length in the body is too small'
           #ENDIF

         else

           if (rtrim($FP_SENRAN,' ') != '000000') and (rtrim($FP_SENRAN_AG,' ') < rtrim($FP_SENRAN,' '))

             #IFDEF DEBUGI
                display 'seniority in the grade is too small'
             #ENDIF

           else

             if (rtrim($FP_DURRAN,' ') != '000000') and (rtrim($FP_DURRAN_AG,' ') < rtrim($FP_DURRAN,' '))

               #IFDEF DEBUGI
                display 'service length in the grade is too small'
               #ENDIF

             else

               if #FP_STEP_NO_AG = #Step_min_No and (rtrim($FP_TRUESEN_MIN,' ') != '000000') and (rtrim($FP_TRUESEN_AG,' ') < rtrim($FP_TRUESEN_MIN,' '))

                 #IFDEF DEBUGI
                    display 'seniority in the step is too small'
                 #ENDIF

               else

                 if #FP_STEP_NO_AG = #Step_min_No and (rtrim($FP_DURSTEP_MIN,' ') != '000000') and (rtrim($FP_DURSTEP_AG,' ') < rtrim($FP_DURSTEP_MIN,' '))

                   #IFDEF DEBUGI
                    display 'service length in the step is too small'
                   #ENDIF

                 else

                   if #FP_STEP_NO_AG = #Step_max_No and (rtrim($FP_TRUESEN_MAX,' ') != '000000') and (rtrim($FP_TRUESEN_AG,' ') > rtrim($FP_TRUESEN_MAX,' '))

                     #IFDEF DEBUGI
                        display 'seniority in the step is too large'
                     #ENDIF


                   else

                     if #FP_STEP_NO_AG = #Step_max_No and (rtrim($FP_DURSTEP_MAX,' ') != '000000') and (rtrim($FP_DURSTEP_AG,' ') > rtrim($FP_DURSTEP_MAX,' '))

                       #IFDEF DEBUGI
                        display 'service length in the step is too large'
                       #ENDIF

                     else

                       #IFDEF DEBUGI
                        display 'conditions  OK'
                       #ENDIF

                       !---Select three last employee marks
                       Do Get_Mark_Mat

                       !---Insert data into FPAEEPROM_TBL record
                       Do Insert_Fpaeeprom_Tbl

                     end-if

                   end-if

                 end-if

               end-if

             end-if

           end-if

         end-if

       end-if

     end-if

   end-if



FROM PS_FPAEECAREERTER A,
     PS_FPMSALSTEP_TBL B,
     PS_PERSON C
    ,PS_FPFAST_PERS_VW2 SCRTY          !SQR security

WHERE [$select-where1]

      and A.EMPLID = SCRTY.EMPLID   !
      and A.EMPL_RCD = SCRTY.EMPL_RCD   !SQR security
     [$SecurityClause]              !


ORDER BY A.EMPLID,A.EMPL_RCD

END-SELECT

END-PROCEDURE Get_Agents_Promouvables



!***************************************************************
!
!
!       Var_test
!
!
!***************************************************************
BEGIN-PROCEDURE  Var_test

!---Init variables

LET #EMPL_RCD_AG         = &EMPL_RCD_AG
LET #FP_TRUESEN_DY_AG    = &FP_TRUESEN_DY_AG
LET #FP_TRUESEN_MN_AG    = &FP_TRUESEN_MN_AG
LET #FP_TRUESEN_YR_AG    = &FP_TRUESEN_YR_AG
LET #FP_DURSTEP_DY_AG    = &FP_DURSTEP_DY_AG
LET #FP_DURSTEP_MN_AG    = &FP_DURSTEP_MN_AG
LET #FP_DURSTEP_YR_AG    = &FP_DURSTEP_YR_AG
LET #FP_SENRAN_DY_AG     = &FP_SENRAN_DY_AG
LET #FP_SENRAN_MN_AG     = &FP_SENRAN_MN_AG
LET #FP_SENRAN_YR_AG     = &FP_SENRAN_YR_AG
LET #FP_DURRAN_DY_AG     = &FP_DURRAN_DY_AG
LET #FP_DURRAN_MN_AG     = &FP_DURRAN_MN_AG
LET #FP_DURRAN_YR_AG     = &FP_DURRAN_YR_AG
LET #FP_SENENTRK_DY_AG   = &FP_SENENTRK_DY_AG
LET #FP_SENENTRK_MN_AG   = &FP_SENENTRK_MN_AG
LET #FP_SENENTRK_YR_AG   = &FP_SENENTRK_YR_AG

LET #FP_SENCOR_DY_AG     = &FP_SENCOR_DY_AG
LET #FP_SENCOR_MN_AG     = &FP_SENCOR_MN_AG
LET #FP_SENCOR_YR_AG     = &FP_SENCOR_YR_AG
LET #FP_DURCOR_DY_AG     = &FP_DURCOR_DY_AG
LET #FP_DURCOR_MN_AG     = &FP_DURCOR_MN_AG
LET #FP_DURCOR_YR_AG     = &FP_DURCOR_YR_AG
LET #FP_SENENTCRP_DY_AG  = &FP_SENENTCRP_DY_AG
LET #FP_SENENTCRP_MN_AG  = &FP_SENENTCRP_MN_AG
LET #FP_SENENTCRP_YR_AG  = &FP_SENENTCRP_YR_AG
LET #FP_SENENTCTG_DY_AG  = &FP_SENENTCTG_DY_AG
LET #FP_SENENTCTG_MN_AG  = &FP_SENENTCTG_MN_AG
LET #FP_SENENTCTG_YR_AG  = &FP_SENENTCTG_YR_AG


LET $FP_SETID_RANK_END_AG= $FP_SETID_RANK_END
LET $FP_RANK_END_AG      = $FP_RANK_END

LET #FP_STEP_NO_AG       = &FP_STEP_NO_AG

!---Test before insert

Do Rtrim_Nnull(&EMPLID_AG,$EMPLID_AG)
Do Rtrim_Nnull(&FP_SETID_RANK_AG,$FP_SETID_RANK_AG)
Do Rtrim_Nnull(&FP_RANK_CD_AG,$FP_RANK_CD_AG)
Do Rtrim_Nnull(&FP_STEP_CD_AG,$FP_STEP_CD_AG)
Do Rtrim_Nnull(&FP_CORPS_CD_AG,$FP_CORPS_CD_AG)
Do Rtrim_Nnull(&FP_CATG_FP_AG,$FP_CATG_FP_AG)
Do Rtrim_Nnull(&FP_PRO_ACCESS_AG,$FP_PRO_ACCESS_AG)
Let $BIRTHDATE_AG = &BIRTHDATE_AG

Do Convert-To-DTU-Date(&EFFDT_AG,$Effdt_Ag)

END-PROCEDURE Var_test



!***************************************************************
!
!
!       Get_Corps_Mat
!
!
!***************************************************************
BEGIN-PROCEDURE  Get_Corps_Mat

! Init
!------
let #FP_SENCAT_DY_AG=0
let #FP_SENCAT_MN_AG=0
let #FP_SENCAT_YR_AG=0
let #FP_DURCAT_DY_AG=0
let #FP_DURCAT_MN_AG=0
let #FP_DURCAT_YR_AG=0

! Select body
!------------

let $sql-statement = 'FPA800.SQR, Select, Get_Corps_Mat'
BEGIN-SELECT On-Error=SQL-Error

FP_CORPS_CD   &Corps_Mat

    Do Rtrim_Nnull(&Corps_Mat,$Corps_Mat)

    ! Calculation of seniority and service length in the Category
    !------------------------------------------------------------
    Do Calculer_Anc_Dur_Cat($EMPLID_AG,#EMPL_RCD_AG,$FP_CATG_FP_AG,$Corps_Mat,$fp_thruDate,#FP_SENCOR_MAX_DY,#FP_SENCOR_MAX_MN,#FP_SENCOR_MAX_YR,#FP_DURCOR_MAX_DY,#FP_DURCOR_MAX_MN,#FP_DURCOR_MAX_YR)

    let #FP_SENCAT_DY_AG=#FP_SENCAT_DY_AG + #FP_SENCOR_MAX_DY
    let #FP_SENCAT_MN_AG=#FP_SENCAT_MN_AG + #FP_SENCOR_MAX_MN
    let #FP_SENCAT_YR_AG=#FP_SENCAT_YR_AG + #FP_SENCOR_MAX_YR
    let #FP_DURCAT_DY_AG=#FP_DURCAT_DY_AG + #FP_DURCOR_MAX_DY
    let #FP_DURCAT_MN_AG=#FP_DURCAT_MN_AG + #FP_DURCOR_MAX_MN
    let #FP_DURCAT_YR_AG=#FP_DURCAT_YR_AG + #FP_DURCOR_MAX_YR

    while #FP_SENCAT_DY_AG>=30
        let #FP_SENCAT_MN_AG=#FP_SENCAT_MN_AG + 1
        let #FP_SENCAT_DY_AG=#FP_SENCAT_DY_AG - 30
    end-while

    while #FP_DURCAT_DY_AG>=30
        let #FP_DURCAT_MN_AG=#FP_DURCAT_MN_AG + 1
        let #FP_DURCAT_DY_AG=#FP_DURCAT_DY_AG - 30
    end-while

    while #FP_SENCAT_MN_AG>=12
        let #FP_SENCAT_YR_AG=#FP_SENCAT_YR_AG + 1
        let #FP_SENCAT_MN_AG=#FP_SENCAT_MN_AG - 12
    end-while

    while #FP_DURCAT_MN_AG>=12
        let #FP_DURCAT_YR_AG=#FP_DURCAT_YR_AG + 1
        let #FP_DURCAT_MN_AG=#FP_DURCAT_MN_AG - 12
    end-while

FROM PS_FPAEECAREERTER A
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

WHERE A.EMPLID  = $EMPLID_AG
AND A.EMPL_RCD = #EMPL_RCD_AG
AND A.FP_CATG_FP= $FP_CATG_FP_AG
AND A.EFFDT <= {DATEIN-PREFIX}$fp_thrudate{DATEIN-SUFFIX}

and A.EMPLID = SCRTY.EMPLID             !
and A.EMPL_RCD = SCRTY.EMPL_RCD         !SQR security
    [$SecurityClause]                   !

GROUP BY A.FP_CORPS_CD

END-SELECT

END-PROCEDURE Get_Corps_Mat



!***************************************************************
!
!
!       Get_Mark_Mat
!
!       Select three last employee marks
!
!
!***************************************************************

BEGIN-PROCEDURE  Get_Mark_Mat
#IFDEF debugi
    display 'Get_mark_mat'
#ENDIF

! initialisation
!---------------
LET #FP_MARK_N1_AG       = 0
LET #FP_MARK_N2_AG       = 0
LET #FP_MARK_N3_AG       = 0

Let #Compteur            = 0

let $sql-statement = 'FPA800.SQR, Select, Get_Mark_Mat'
BEGIN-SELECT On-Error=SQL-Error

A.FP_REV_RATING   &FP_REV_RATING
A.EFFDT

    Let #Compteur = #Compteur + 1

    if #Compteur <= 3

        EVALUATE #Compteur

                WHEN = 1
                        Let #FP_MARK_N1_AG = &FP_REV_RATING
                        Break
                WHEN = 2
                        Let #FP_MARK_N2_AG = &FP_REV_RATING
                        Break
                WHEN = 3
                        Let #FP_MARK_N3_AG = &FP_REV_RATING
                        Break
        END-EVALUATE

    end-if

FROM PS_EMPLOYEE_REVIEW A
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

WHERE A.EMPLID  = $EMPLID_AG
AND A.EMPL_RCD = #EMPL_RCD_AG
AND A.EFFDT <= {DATEIN-PREFIX}$fp_thrudate{DATEIN-SUFFIX}

and A.EMPLID = SCRTY.EMPLID         !
and A.EMPL_RCD = SCRTY.EMPL_RCD     !SQR security
    [$SecurityClause]               !

ORDER BY EFFDT DESC

END-SELECT

display 'end Get_Mark_Mat'

END-PROCEDURE Get_Mark_Mat



!***************************************************************
!
!
!       Calculer_Anc_Dur_Cat
!
!
!***************************************************************
BEGIN-PROCEDURE  Calculer_Anc_Dur_Cat($nom_in1,#nom_in2,$nom_in3,$nom_in4,$date,:#nom_out1,:#nom_out2,:#nom_out3,:#nom_out4,:#nom_out5,:#nom_out6)

let #nom_out1=0
let #nom_out2=0
let #nom_out3=0
let #nom_out4=0
let #nom_out5=0
let #nom_out6=0

! Select seniority and service length in the body
!-------------------------------------------------
let $sql-statement = 'FPA800.SQR, Select, Calculer_Anc_Dur_Cat'
BEGIN-SELECT On-Error=SQL-Error

A.FP_SENCOR_DY   &sencor_dy_max
A.FP_SENCOR_MN   &sencor_mn_max
A.FP_SENCOR_YR   &sencor_yr_max
A.FP_DURCOR_DY   &durcor_dy_max
A.FP_DURCOR_MN   &durcor_mn_max
A.FP_DURCOR_YR   &durcor_yr_max

    let #nom_out1=&sencor_dy_max
    let #nom_out2=&sencor_mn_max
    let #nom_out3=&sencor_yr_max
    let #nom_out4=&durcor_dy_max
    let #nom_out5=&durcor_mn_max
    let #nom_out6=&durcor_yr_max

FROM PS_FPAEECAREERTER A
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

WHERE A.EMPLID    = $nom_in1
AND A.EMPL_RCD   = #nom_in2
AND A.FP_CATG_FP  = $nom_in3
AND A.FP_CORPS_CD = $nom_in4
AND A.EFFDT       = (select max(B.EFFDT)
                     FROM PS_FPAEECAREERTER B
                     WHERE B.EMPLID  = $nom_in1
                     AND B.EMPL_RCD = #nom_in2
                     AND B.FP_CATG_FP= $nom_in3
                     AND A.FP_CORPS_CD = $nom_in4
                     AND B.EMPLID  = A.EMPLID
                     AND B.EMPL_RCD = A.EMPL_RCD
                     AND B.EFFDT <= {DATEIN-PREFIX}$date{DATEIN-SUFFIX}  )

and A.EMPLID = SCRTY.EMPLID      !
and A.EMPL_RCD = SCRTY.EMPL_RCD         !SQR security
[$_SecurityClause]               !

END-SELECT

END-PROCEDURE Calculer_Anc_Dur_Cat



!***************************************************************
!
!
!       Insert_Fpaeeprom_Tbl
!       Insert data into FPAEEPROM_TBL record
!
!
!***************************************************************
BEGIN-PROCEDURE  Insert_Fpaeeprom_Tbl

#IFDEF DEBUGI
    display 'Insert_Fpaeeprom_Tbl'
#ENDIF


let $sql-statement = 'FPA800.SQR, Insert, Insert_Fpaeeprom_Tbl'
BEGIN-SQL On-Error=SQL-Error

INSERT INTO PS_FPAEEPROM_TBL
(
FP_SETID_RANK,
FP_RANK_START,
FP_THRUDATE,
FP_SETID_RANK_END,
FP_RANK_END,
EMPLID,
EMPL_RCD,
BIRTHDATE,
FP_FLAG_ORIG,
FP_STEP_CD,
FP_TRUESEN_DY,
FP_TRUESEN_MN,
FP_TRUESEN_YR,
FP_DURSTEP_DY,
FP_DURSTEP_MN,
FP_DURSTEP_YR,
FP_SENRAN_DY,
FP_SENRAN_MN,
FP_SENRAN_YR,
FP_DURRAN_DY,
FP_DURRAN_MN,
FP_DURRAN_YR,
FP_SENENTRK_DY,
FP_SENENTRK_MN,
FP_SENENTRK_YR,
FP_CORPS_CD,
FP_SENCOR_DY,
FP_SENCOR_MN,
FP_SENCOR_YR,
FP_DURCOR_DY,
FP_DURCOR_MN,
FP_DURCOR_YR,
FP_SENENTCRP_DY,
FP_SENENTCRP_MN,
FP_SENENTCRP_YR,
FP_CATG_FP,
FP_SENCAT_DY,
FP_SENCAT_MN,
FP_SENCAT_YR,
FP_DURCAT_DY,
FP_DURCAT_MN,
FP_DURCAT_YR,
FP_SENENTCTG_DY,
FP_SENENTCTG_MN,
FP_SENENTCTG_YR,
FP_MARK_N1,
FP_MARK_N2,
FP_MARK_N3,
FP_PRO_ACCESS
)
VALUES
($FP_SETID_RANK,
$FP_RANK_START,
{DATEIN-PREFIX}$fp_thrudate{DATEIN-SUFFIX},
$FP_SETID_RANK_END,
$FP_RANK_END,
$EMPLID_AG,
#EMPL_RCD_AG,
{DATEIN-PREFIX}$BIRTHDATE_AG{DATEIN-SUFFIX},
'Y',
$FP_STEP_CD_AG,
#FP_TRUESEN_DY_AG,
#FP_TRUESEN_MN_AG,
#FP_TRUESEN_YR_AG,
#FP_DURSTEP_DY_AG,
#FP_DURSTEP_MN_AG,
#FP_DURSTEP_YR_AG,
#FP_SENRAN_DY_AG,
#FP_SENRAN_MN_AG,
#FP_SENRAN_YR_AG,
#FP_DURRAN_DY_AG,
#FP_DURRAN_MN_AG,
#FP_DURRAN_YR_AG,
#FP_SENENTRK_DY_AG,
#FP_SENENTRK_MN_AG,
#FP_SENENTRK_YR_AG,
$FP_CORPS_CD_AG,
#FP_SENCOR_DY_AG,
#FP_SENCOR_MN_AG,
#FP_SENCOR_YR_AG,
#FP_DURCOR_DY_AG,
#FP_DURCOR_MN_AG,
#FP_DURCOR_YR_AG,
#FP_SENENTCRP_DY_AG,
#FP_SENENTCRP_MN_AG,
#FP_SENENTCRP_YR_AG,
$FP_CATG_FP_AG,
#FP_SENCAT_DY_AG,
#FP_SENCAT_MN_AG,
#FP_SENCAT_YR_AG,
#FP_DURCAT_DY_AG,
#FP_DURCAT_MN_AG,
#FP_DURCAT_YR_AG,
#FP_SENENTCTG_DY_AG,
#FP_SENENTCTG_DY_AG,
#FP_SENENTCTG_DY_AG,
#FP_MARK_N1_AG,
#FP_MARK_N2_AG,
#FP_MARK_N3_AG,
$FP_PRO_ACCESS_AG
)
END-SQL

#IFDEF DEBUGI
    display 'FPA800 / END-PROCEDURE Insert_Fpaeeprom_Tbl'
#ENDIF

END-PROCEDURE Insert_Fpaeeprom_Tbl



!-------------------------------------------
! Procedure DELETE-FPAEEPROM-TBL
!-------------------------------------------
! Delete row from FPAEEPROM_TBL
! In  :
! Out :
!-------------------------------------------
begin-procedure DELETE-FPAEEPROM-TBL

let $sql-statement = 'FPA800.SQR, Delete, DELETE-FPAEEPROM-TBL'
Begin-SQL On-Error=SQL-Error

DELETE FROM PS_FPAEEPROM_TBL
WHERE
FP_THRUDATE           = {DATEIN-PREFIX}$fp_thrudate{DATEIN-SUFFIX}
AND FP_SETID_RANK     = $FP_SETID_RANK
AND FP_RANK_START     = $FP_RANK_START
AND FP_SETID_RANK_END = $FP_SETID_RANK_END
AND FP_RANK_END       = $FP_RANK_END

end-SQL

#IFDEF DEBUGI
    Display 'FPA800 / End Proc DELETE-FPAEEPROM-TBL'
#ENDIF

END-PROCEDURE DELETE-FPAEEPROM-TBL



!-------------------------------------------
! Procedure DELETE-FPAEECAREERTER
!-------------------------------------------
! Delete FPAEECAREERTER
! In  :
! Out :
!-------------------------------------------
begin-procedure DELETE-FPAEECAREERTER

let $sql-statement = 'FPA800.SQR, Delete, DELETE-FPAEECAREERTER'
Begin-SQL On-Error=SQL-Error

DELETE FROM PS_FPAEECAREERTER

end-SQL

#IFDEF DEBUGI
    Display 'FPA800 / DELETE-FPAEECAREERTER End Proc'
#ENDIF

END-PROCEDURE DELETE-FPAEECAREERTER



!-----------------------------------------------
! Procedure LIST-FIELDS
!-----------------------------------------------
! Retrieve fields belonging to PS_FPAEECAREER
! In  :
! Out :
!-----------------------------------------------
BEGIN-PROCEDURE LIST-FIELDS

display 'procedure LIST-FIELDS'

let $field_list = ''

let $sql-statement = 'FPA800.SQR, Select, LIST-FIELDS'
BEGIN-SELECT On-Error=SQL-Error

RF.FIELDNAME            &RF.FIELDNAME
DF.FIELDTYPE            &DF.FIELDTYPE

  if &DF.FIELDTYPE <> 1
    let $gnr-fieldname =  rtrim(&RF.FIELDNAME,' ')
    let $field_list = $field_list || $gnr-field-line-prefix || $gnr-fieldname
    let $gnr-field-line-prefix = ','
  end-if

FROM PSRECFIELD RF,
PSDBFIELD       DF
WHERE DF.FIELDNAME  = RF.FIELDNAME
AND   RF.RECNAME    = 'FPAEECAREER'
AND   RF.SUBRECORD  = 'N'
ORDER BY 1
END-SELECT

END-PROCEDURE LIST-FIELDS



!------------------------------------------------------------------
! Procedure INSERT-FPAEECAREERTER
!------------------------------------------------------------------
! Select Employees from FPAEECAREER and insert into FPAEECAREERTER
! In  :
! Out :
!------------------------------------------------------------------
begin-procedure INSERT-FPAEECAREERTER

let $sql-statement = 'FPA800.SQR, insert,INSERT-FPAEECAREERTER'
begin-SQL  On-Error=SQL-Error

    INSERT INTO PS_FPAEECAREERTER ([$field_list])
    SELECT [$field_list] from PS_FPAEECAREER
    WHERE EMPLID = $Emplid_bascule
    AND EMPL_RCD = #EMPL_RCD_BASCULE

end-SQL

END-PROCEDURE INSERT-FPAEECAREERTER



!***************************************************************
!
!
!       SELECT-FPAEECAREER
!
!
!***************************************************************
BEGIN-PROCEDURE  SELECT-FPAEECAREER

!--- Dynamic 'Where' building -----

let $select-where2 =  'A.FP_SETID_RANK = ''' || $FP_SETID_RANK || '''
                      AND A.FP_RANK_CD = ''' || $FP_RANK_START || '''
                      AND A.FP_INST_STAT = ''R''
                      AND A.EFFDT <= {DATEIN-PREFIX}''' ||$fp_thrudate|| ''' {DYN-DateIn-Suffix}
                      AND A.EFFDT  = '||
                          '(SELECT MAX(EFFDT) from PS_FPAEECAREER A1
                                   WHERE  A1.EMPLID    = A.EMPLID
                                   AND    A1.EMPL_RCD = A.EMPL_RCD
                                   AND    A1.EFFDT    <=  {DATEIN-PREFIX}''' ||$fp_thrudate|| ''' {DYN-DateIn-Suffix})' ||
                     ' AND A.EFFSEQ = ' ||
                           '(SELECT MAX(B2.EFFSEQ) from PS_FPAEECAREER B2
                                    WHERE B2.EMPLID    = A.EMPLID
                                    AND   B2.EMPL_RCD = A.EMPL_RCD
                                    AND   B2.FP_INST_STAT = ''R''
                                    AND   B2.EFFDT = A.EFFDT ) '


let $sql-statement = 'FPA800.SQR, Select, SELECT-FPAEECAREER'
BEGIN-SELECT On-Error=SQL-Error

A.EMPLID                               &EMPLID_BASCULE
A.EMPL_RCD                            &EMPL_RCD_BASCULE

        Do Rtrim_Nnull(&EMPLID_BASCULE,$Emplid_bascule)
        let #EMPL_RCD_BASCULE = &EMPL_RCD_BASCULE
        Do INSERT-FPAEECAREERTER

FROM PS_FPAEECAREER A
    ,PS_FPFAST_PERS_VW2 SCRTY           !SQR security

WHERE [$select-where2]

      and A.EMPLID = SCRTY.EMPLID      !
      and A.EMPL_RCD = SCRTY.EMPL_RCD    !SQR security
      [$SecurityClause]                !

ORDER BY A.EMPLID

END-SELECT

END-PROCEDURE SELECT-FPAEECAREER



#Include 'fpa315.sqc'       ! Seniority calculating (FPS)
#include 'stdapi.sqc'       ! Routines to update run status
#Include 'hrrnctl1.sqc'     ! Get run control parameter values
#Include 'hrgetval.sqc'     ! Get values mask routines
#Include 'fprnctl1.sqc'     ! Get run control parameter values (FPS)
#Include 'fpgetval.sqc'     ! Get values mask routines (FPS)
#Include 'hrsecty.sqc'      ! Get SQR Security parameters
#Include 'fptestdt.sqc'   ! Routines for date and time formatting (FPS)
#Include 'fpparam.sqc'      ! Routines for  Parameters Tables (FPS)
#include 'curdttim.sqc'     ! Get-Current-DateTime procedure
#Include 'number.sqc'       ! Routines to format numbers
#include 'fpsalary.sqc'     ! Routines for salary (FPS)
#include 'fpjob.sqc'        ! Insert-Fpaeeupdrow procedure (FPS)
