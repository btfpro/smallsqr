!********************************
!  PER024:  Job Group Analysis  *
!********************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:33:36                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#include 'hrhl02.sqc'   !Landscape Confidential Header


begin-program
   #debug show 'PER024: Begin-Program'
   do Use-Narrow-Layout
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Init-Report

   !********************************************************************
   !  Set miscellaneous report parameters
   !********************************************************************
   let $confidential = 'YES'
   let $quote = ''''
   !Begin Resolution 574458
   let $RowsFound = 'N'
   !End Resolution 574458
   
   evaluate $date-indicator

   !********************************************************************
   !  Format EFFDT selection criteria based on ASOFDATE
   !********************************************************************
   when = '1'
      let $effdt-criteria = ' <= ' || $quote || $asofdate || $quote
      break

   when-other
      display 'PER024/Error: Invalid Run Control Date Indicator'
      stop quiet

   end-evaluate

   evaluate $reportchoice

   !********************************************************************
   !  Generate report for the whole company
   !********************************************************************
   when = '1'
      do Get-Company-Info
      let $where-clause = ' AND B.COMPANY = ' || $quote || $company || $quote
      do Process-Main
      do Print-Consolidated-Totals
      break

   !********************************************************************
   !  Generate report for a single establishment
   !********************************************************************
   when = '2'
      do Get-Establishment-Info
      let $where-clause = ' AND B.ESTABID = ' || $quote || $estab || $quote
      do Process-Main
      break

   !********************************************************************
   !  Generate report for a Headquarters Establishment and any other
   !  establishments under its control
   !********************************************************************
   when = '3'
      do Process-Multi-Estab
      do Print-Consolidated-Totals
      break

   !********************************************************************
   !  Generate report for all Establishments
   !********************************************************************
   when = '4'
      do Process-Multi-Estab
      break

   when-other
      display 'PER024/Error: Invalid Run Control Report Choice'
      stop quiet

   end-evaluate

   !********************************************************************
   !  Print End-of-Report message on the very last page
   !********************************************************************
   ALTER-PRINTER
      font=4
      point-size=18

   print '*** End of Report ***' (+4,1) Bold Center

   do Stdapi-Term
end-program


begin-procedure Process-Multi-Estab
   #debug show 'Process-Multi-Estab'
   let #i = 0
   do Get-Number-Of-Establishments
   while #i < #count
      let $estab = establishmentids.theestab(#i)
      do Get-Establishment-Info
      let $where-clause = ' AND B.ESTABID = ' || $quote || $estab || $quote
      do Process-Main
      add 1 to #i
      if #i < #count
         !*************************************************************
         !  Print each establishment on a separate page
         !*************************************************************
         new-page
      end-if
   end-while
end-procedure Process-Multi-Estab


begin-procedure Init-Report
   #debug show 'PER024: Init-Report'
   let $reportid    = 'PER024'
   let $reporttitle = 'Job Group Analysis'
   show 'PER024: Start Program ' $reportid ' (' $reporttitle ')'

   do Init-Array

   do Stdapi-Init

   if $prcs_process_instance = ''
      display 'PER024/Error: The Job Group Analysis Program must be run using Process Scheduler'
      stop quiet
   else
      do Select-Parameters
   end-if
end-procedure Init-Report


begin-procedure Get-Values
   #debug show 'PER024: Get-Values'
   do Get-Date-Indicator
   do Get-As-Of-Date
   do Get-From-Thru-Date
   do Get-Run-Scope
   do Get-Company
   do Get-Establishment
   do Get-CTL_ESTABID
end-procedure Get-Values


begin-procedure Init-Array
   #debug show 'PER024: Init-Array'

   create-array name=tbl-column size=2 - !0=Unused
      field=column:number:15             !0=Unused

   put  44 into tbl-column(1) column(1)  !Total Employees
   put  57 into tbl-column(1) column(2)  !Minority Totals
   put  68 into tbl-column(1) column(3)  !Male Totals
   put  77 into tbl-column(1) column(4)  !White Male
   put  85 into tbl-column(1) column(5)  !Black Male
   put  93 into tbl-column(1) column(6)  !Hisp Male
   put 101 into tbl-column(1) column(7)  !Asian Male
   put 109 into tbl-column(1) column(8)  !AmInd Male
   put 119 into tbl-column(1) column(9)  !Female Totals
   put 128 into tbl-column(1) column(10) !White Female
   put 136 into tbl-column(1) column(11) !Black Female
   put 144 into tbl-column(1) column(12) !Hisp Female
   put 152 into tbl-column(1) column(13) !Asian Female
   put 160 into tbl-column(1) column(14) !AmInd Female

   create-array name=tbl-totals size=4 - !0=Consolidated Totals,1=Estab Totals,2=JobGroup Totals,3=JobTitle Totals
      field=total:number:15              !0=Unused
end-procedure Init-Array

begin-procedure Print-Column-Headings
   #debug show 'PER024: Print-Column-Headings'

   ALTER-PRINTER
      font=4
      point-size=12

   let $jobgroup-header = '[' || rtrim($save-eeo-job-group,' ') || '] ' || rtrim($save-job-group-descr,' ') || $continue-header
   print $jobgroup-header    (+1,1) Bold

   ALTER-PRINTER
      font=3
      point-size=7.2

   print '                                 Salary      Total    '     (+2,1) Bold
   print '    Total      /------------------ M A L E --------------'  ()     Bold
   print '---/     /--------------- F E M A L E ----------------/'    ()     Bold
   print 'Job Title                        Grade     Employees  '     (+1,1) Bold
   !************Begin Resolution - 619239 **************
   !print '  Minorities   Total    White   Black   Hisp.   Asian   Am' ()     Bold
   !print 'Ind     Total    White   Black   Hisp.   Asian   AmInd'     ()     Bold
   print '  Minorities   Total    White   Black   Hisp. Asn/PcIs  Am' ()     Bold
   print 'Ind     Total    White   Black   Hisp. Asn/PcIs  AmInd'     ()     Bold
   !************End Resolution - 619239 ****************

   graphic (+1,1,166) horz-line 7
end-procedure Print-Column-Headings

begin-procedure Process-Main
   #debug show 'PER024: Process-Main' ' $effdt-criteria = ' $effdt-criteria ' $where-clause = ' $where-clause
   let $initial-estab-break    = 'Y'
   let $initial-jobgroup-break = 'Y'
   let $subsequent-estab-break = 'N'
   let #reccnt = 0

   ALTER-PRINTER
      font=4
      point-size=7.2

begin-select
B.ESTABID         ()  On-Break Level=1 Before=Before-Estab-Break     After=After-Estab-Break     Print=Never
F.EEO_JOB_GROUP   ()  On-Break Level=2 Before=Before-JobGroup-Break  After=After-JobGroup-Break  Print=Never
C.DESCR           ()  On-Break Level=3 Before=Before-JobTitle-Break  After=After-JobTitle-Break  Print=Never
B.SAL_ADMIN_PLAN  ()  On-Break Level=3 Before=Before-SalPlan-Break  After=After-SalPlan-Break  Print=Never
B.GRADE           ()  On-Break Level=3 Before=Before-Grade-Break  After=After-Grade-Break  Print=Never
PDE.SEX
ETH.ETHNIC_GROUP
F.DESCR
COUNT(*)
  !Begin Resolution 574458
  let $RowsFound = 'Y'
  !End Resolution 574458

  if &ETH.ETHNIC_GROUP > '1'                             !Minority Totals
     array-add &COUNT(*)    to tbl-totals(3) total(2)
     array-add &COUNT(*)    to tbl-totals(2) total(2)
     array-add &COUNT(*)    to tbl-totals(1) total(2)
     array-add &COUNT(*) to tbl-totals(0) total(2)
  end-if

  move &PDE.SEX             to $sex
  move &ETH.Ethnic_Group      to $ethnicgroup
  do Analyze-Sex-EthnicGroup  !returns a value of 1-10 in #eeocol

  if &PDE.SEX = 'F'                                   !Female Totals
     array-add &COUNT(*)    to tbl-totals(3) total(9)
     array-add &COUNT(*)    to tbl-totals(2) total(9)
     array-add &COUNT(*)    to tbl-totals(1) total(9)
     array-add &COUNT(*)    to tbl-totals(0) total(9)
     let #offset-eeocol = #eeocol + 4
  else                                                 !Male Totals
     array-add &COUNT(*)    to tbl-totals(3) total(3)
     array-add &COUNT(*)    to tbl-totals(2) total(3)
     array-add &COUNT(*)    to tbl-totals(1) total(3)
     array-add &COUNT(*)    to tbl-totals(0) total(3)
     let #offset-eeocol = #eeocol + 3
  end-if

  array-add &COUNT(*) &COUNT(*)    to tbl-totals(3) total(1) total(#offset-eeocol)  !Total Employees/Individual Employee
  array-add &COUNT(*) &COUNT(*)    to tbl-totals(2) total(1) total(#offset-eeocol)
  array-add &COUNT(*) &COUNT(*)    to tbl-totals(1) total(1) total(#offset-eeocol)
  array-add &COUNT(*) &COUNT(*)    to tbl-totals(0) total(1) total(#offset-eeocol)
FROM  PS_PERSON A,
      PS_JOB B,
      PS_JOBCODE_TBL C,
      PS_DIVERS_ETHNIC DVR,
      PS_ETHNIC_GRP_TBL ETH,
      PS_REG_REGION_TBL E,
      PS_EEO_JOB_GRP_TBL F,
      PS_PERS_DATA_EFFDT PDE

WHERE  B.PER_ORG = 'EMP'

   AND PDE.SEX <> 'U'         !Undefined

   AND B.ESTABID <> ' '       !No EstabID
   AND B.EMPLID = A.EMPLID
   AND B.EMPLID = PDE.EMPLID
   AND B.EMPL_STATUS IN ('A','L','S','P','W')
   AND B.EEO_CLASS    <> 'E'  !Exclude from counts
   AND B.EFFDT   = (SELECT MAX(B1.EFFDT) FROM PS_JOB B1
                    WHERE B1.EMPLID   = B.EMPLID
                      AND B1.EMPL_RCD = B.EMPL_RCD
                      AND B1.EFFDT [$effdt-criteria])
   AND B.EFFSEQ  = (SELECT MAX(B2.EFFSEQ) FROM PS_JOB B2
                    WHERE B2.EMPLID   = B.EMPLID
                      AND B2.EMPL_RCD = B.EMPL_RCD
                      AND B2.EFFDT    = B.EFFDT)

   AND C.SETID   = B.SETID_JOBCODE
   AND C.JOBCODE = B.JOBCODE
   AND C.EFF_STATUS = 'A'
   AND C.EFFDT   = (SELECT MAX(C1.EFFDT) FROM PS_JOBCODE_TBL C1
                    WHERE C1.JOBCODE  = C.JOBCODE
                      AND C1.SETID    = C.SETID
                      !***********BEGIN RESOLUTION 609634***********
                      !AND C1.EFFDT   <= B.EFFDT)
                      AND C1.EFFDT [$effdt-criteria])
                      !***********END RESOLUTION 609634***********  
   AND C.EEO1CODE     <> 'N'  !Not counted for EEO reporting
   AND PDE.EFFDT = (SELECT MAX(PDE1.EFFDT) FROM PS_PERS_DATA_EFFDT PDE1
                    WHERE PDE1.EMPLID = PDE.EMPLID
                      AND PDE1.EFFDT <= B.EFFDT)
                                       

   AND DVR.EMPLID  = A.EMPLID
   AND DVR.PRIMARY_INDICATOR = 'Y' 
   AND DVR.SETID = ETH.SETID 
   AND DVR.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
   AND ETH.EFFDT = (SELECT MAX(E2.EFFDT) FROM PS_ETHNIC_GRP_TBL E2 
                   WHERE E2.SETID = ETH.SETID 
                   AND E2.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD 
                   AND E2.EFFDT [$effdt-criteria])
   AND ETH.ETHNIC_GROUP <> '6'  !Not Applicable

   AND E.REG_REGION = B.REG_REGION
   AND E.COUNTRY = 'USA'

   AND F.EEO_JOB_GROUP = C.EEO_JOB_GROUP

   [$where-clause]

GROUP BY B.ESTABID,
         F.EEO_JOB_GROUP,
         C.DESCR,
         B.SAL_ADMIN_PLAN,
         B.GRADE,
         PDE.SEX,
         ETH.ETHNIC_GROUP,
         F.DESCR

ORDER BY B.ESTABID,
         F.EEO_JOB_GROUP,
         C.DESCR,
         B.SAL_ADMIN_PLAN,
         B.GRADE,
         PDE.SEX,
         ETH.ETHNIC_GROUP,
         F.DESCR

end-select

end-procedure Process-Main


begin-procedure Before-Estab-Break
   #debug show 'PER024: Before-Estab-Break'

   let $save-estabid = &B.ESTABID

   if $initial-estab-break = 'Y'
      let $estab = $save-estabid
      do Get-Establishment-Info
      let $initial-estab-break = 'N'
   else
      let $subsequent-estab-break = 'Y'
   end-if
end-procedure Before-Estab-Break


begin-procedure Before-JobGroup-Break
   #debug show 'PER024: Before-JobGroup-Break'

   let $save-eeo-job-group    = &F.EEO_JOB_GROUP
   let $save-job-group-descr  = &F.DESCR

   if $initial-jobgroup-break = 'Y'
      do Print-Column-Headings
      let $initial-jobgroup-break = 'N'
   else
      new-page
      do Print-Column-Headings
   end-if

   if $subsequent-estab-break = 'Y'
      let $estab = $save-estabid
      do Get-Establishment-Info
      let $subsequent-estab-break = 'N'
   end-if
end-procedure Before-JobGroup-Break


begin-procedure Before-JobTitle-Break
   #debug show 'PER024: Before-JobTitle-Break'
   let $save-job-title-descr = &C.DESCR
   let $save-sal-admin-plan  = &B.SAL_ADMIN_PLAN
   let $save-grade           = &B.GRADE

   let $print-job-title = 'Y'
end-procedure Before-JobTitle-Break


begin-procedure Before-SalPlan-Break
   #debug show 'PER024: Before-SalPlan-Break'
   let $sal-break = 'N'   
   let $save-sal-admin-plan  = &B.SAL_ADMIN_PLAN
   let $save-grade           = &B.GRADE
   
end-procedure Before-SalPlan-Break


begin-procedure Before-Grade-Break
   #debug show 'PER024: Before-Grade-Break'
   let $grade-break = 'N'   
   let $save-sal-admin-plan  = &B.SAL_ADMIN_PLAN
   let $save-grade           = &B.GRADE
   
end-procedure Before-Grade-Break


begin-procedure Print-Consolidated-Totals
   #debug show 'PER024: Print-Consolidated-Totals'

   !Begin Resolution 574458
   !new-page
   if $RowsFound = 'Y'
     new-page
   end-if
  !End Resolution 574458

   !********************************************************************
   !  Retrieve the proper name and address data
   !********************************************************************
   if $reportchoice = '1'
      do Get-Company-Info
      let $consolidated-subheader = '  (Company Totals)'
   else
      if $reportchoice = '3'
         let $estab = establishmentids.theestab(0)
         do Get-Establishment-Info
         let $consolidated-subheader = '  (Headquarters and Controlled Establishment Totals)'
      else
         display 'PER024/Error: Invalid consolidated total $reportchoice = ' $reportchoice
         stop quiet
      end-if
   end-if

   ALTER-PRINTER

      font=4
      point-size=12

   let $consolidated-header = rtrim($name,' ') || $consolidated-subheader
   print $consolidated-header               (+1,1) Bold Box Shade

   ALTER-PRINTER
      font=3
      point-size=7.2

   print '                                             Total    '     (+2,1) Bold
   print '    Total      /------------------ M A L E --------------'  ()     Bold
   print '---/     /--------------- F E M A L E ----------------/'    ()     Bold
   print '                                           Employees  '     (+1,1) Bold
   !********************Begin Resolution - 619239 *********************
   !print '  Minorities   Total    White   Black   Hisp.   Asian   Am' ()     Bold
   !print 'Ind     Total    White   Black   Hisp.   Asian   AmInd'     ()     Bold
   print '  Minorities   Total    White   Black   Hisp. Asn/PcIs  Am' ()     Bold
   print 'Ind     Total    White   Black   Hisp. Asn/PcIs  AmInd'     ()     Bold
   !********************End Resolution - 619239 ***********************

   print ' Consolidated Totals:'       (+2,20)  Bold

   let #break-level = 0
   do Print-Totals
   let #reccnt=0
end-procedure Print-Consolidated-Totals


begin-procedure After-Estab-Break
   #debug show 'PER024: After-Estab-Break'

   new-page

   ALTER-PRINTER
      font=4
      point-size=12

   let $estab-header = rtrim($name,' ') || '  (Establishment Totals)'
   print $estab-header                 (+1,1) Bold Box Shade

   ALTER-PRINTER
      font=3
      point-size=7.2

   print '                                             Total    '     (+2,1) Bold
   print '    Total      /------------------ M A L E --------------'  ()     Bold
   print '---/     /--------------- F E M A L E ----------------/'    ()     Bold
   print '                                           Employees  '     (+1,1) Bold
   !********************Begin Resolution - 619239 *********************
   !print '  Minorities   Total    White   Black   Hisp.   Asian   Am' ()     Bold
   !print 'Ind     Total    White   Black   Hisp.   Asian   AmInd'     ()     Bold
   print '  Minorities   Total    White   Black   Hisp. Asn/PcIs  Am' ()     Bold
   print 'Ind     Total    White   Black   Hisp. Asn/PcIs  AmInd'     ()     Bold
   !********************End Resolution - 619239 ***********************

   print 'Establishment Totals:'       (+2,20)  Bold

   let #break-level = 1
   do Print-Totals
   let #reccnt = 0
end-procedure After-Estab-Break


begin-procedure After-JobGroup-Break
   #debug show 'PER024: After-JobGroup-Break'

   !********************************************************************
   !  Check for page break
   !********************************************************************
   if #reccnt > 25
      do Process-Page-Break
   else
      graphic (0,1,166) horz-line 7
   end-if

   print 'Job Group Totals:'            (+2,25)  Bold

   let #break-level = 2
   do Print-Totals
   let #reccnt = 0
end-procedure After-JobGroup-Break


begin-procedure After-JobTitle-Break
   #debug show 'PER024: After-JobTitle-Break'

   if $sal-break = 'N' and $grade-break = 'N'

     do Process-Level-3-Break   

   end-if

   let $print-job-title = 'N'
end-procedure After-JobTitle-Break


begin-procedure After-SalPlan-Break
   #debug show 'PER024: After-SalPlan-Break'

   if $grade-break = 'N'
     do Process-Level-3-Break
   end-if
   let $print-job-title = 'N'
   let $sal-break = 'Y'
end-procedure After-SalPlan-Break


begin-procedure After-Grade-Break
   #debug show 'PER024: After-Grade-Break'

   do Process-Level-3-Break
   let $print-job-title = 'N'
   let $grade-break = 'Y'
end-procedure After-Grade-Break


begin-procedure Process-Level-3-Break

   #debug show 'PER024: Process-Level-3-Break'
   !********************************************************************
   !  Check for page break
   !********************************************************************
   if #reccnt > 28
      do Process-Page-Break
   end-if

   add 1 to #reccnt

   !********************************************************************
   !  Determine if shade box should be printed
   !********************************************************************
   let #remainder = mod(#reccnt, 2)
   if #remainder = 0
      graphic   (+1,1,166) box 1 0 15
   else
      print ' ' (+1,1)
   end-if

   if $print-job-title = 'Y'
     print $save-job-title-descr (0,1,31)
   end-if
   let   $salary-grade = $save-sal-admin-plan || '/' || $save-grade
   print $salary-grade (0,34,8)

   let #break-level = 3
   do Print-Totals

end-procedure Process-Level-3-Break


begin-procedure Process-Page-Break
   #debug show 'PER024: Process-Page-Break'
   graphic (0,1,166) horz-line 7
   new-page
   let $continue-header = ' - Continued'
   do Print-Column-Headings
   let $continue-header = ' '
   let #reccnt = 0
end-procedure Process-Page-Break


begin-procedure Print-Totals
   #debug show 'PER024: Print-Totals'

   move 1 to #index

   while #index <= 14
      get #total from tbl-totals(#break-level) total(#index)
      get #column from tbl-column(1) column(#index)
      do Format-Number(#total, $out, '999,999')
      print $out (0,#column)
      if #break-level = 3
         put 0 into tbl-totals(#break-level) total(#index)
      end-if
      add 1 to #index
   end-while

   if #break-level = 2
         or #break-level = 1
         or #break-level = 0
      print '% of Total:'              (+2,30)  Bold
      get #total-employees from tbl-totals(#break-level) total(1)

      move 1 to #index

      while #index <= 14
         get #total from tbl-totals(#break-level) total(#index)
         multiply 100 times #total
         divide #total-employees into #total on-error=zero
         get #column from tbl-column(1) column(#index)
         do Format-Number(#total, $out, '9999.99')
         print $out (0,#column)
         put 0 into tbl-totals(#break-level) total(#index)
         add 1 to #index
      end-while
   end-if
end-procedure Print-Totals

!-----------------------------------------------------------------------

#include 'rgrnctl1.sqc'  !Get run control parameter values
#include 'rggetval.sqc'  !Get values mask routines
#include 'regutils.sqc'  !Get Company/Establishment data

#include 'eeogroup.sqc'  !Analyze-Sex-EthnicGroup procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
