!**********************************************
! CBR008: COBRA Administration Error Report
!**********************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:08:58:49                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'  !Set Database Environment

Begin-Setup
  #Include 'ptpsl177.sqc'
End-Setup

#Define col_emplid              11      !Employee Id
#Define col_rcd#                 4      !Benefit Record Number
#Define col_depid                3      !Dependent Benef
#define col_event_id             5      !Event Id
#define col_msg_id               6      !Message Id
#define col_msg_descr           90      !Message Description
#define col_msg_data            30      !Message Data

#define col_sep                  1      !Column Separator
#define gap_sep                  4      !Gap Separator

!*************************************
Begin-Program
!*************************************

  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Process-Main

  display 'Report Ended at: ' noline
  do display-time

  do Reset
  do StdAPI-Term

End-Program

!*************************************
Begin-Procedure Init-Report
!*************************************

  let $ReportID    = 'CBR008'
  let $ReportTitle = 'COBRA Administration Error Report'

  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  do Init-DateTime
  do StdAPI-Init

End-Procedure

!*************************************
Begin-Heading 8
!*************************************

#include 'stdhdg01.sqc'

  print ' '                             (+2,1,{col_emplid})
  print 'Ben'                           (0,+{col_sep},{col_rcd#})
  print 'Event'                         (0,+{col_sep},{col_event_id})
  print 'Dep'                           (0,+{col_sep},{col_depid})
  print 'Employee Id '                  (+1,1,{col_emplid})
  print 'Rcd#'                          (0,+{col_sep},{col_rcd#})
  print 'Id'                            (0,+{col_sep},{col_event_id})
  print 'Id'                            (0,+{col_sep},{col_depid})
  print 'Msg-Id'                        (0,+{col_sep},{col_msg_id})
  print 'Error Message Description'     (0,+{gap_sep},{col_msg_descr})
  print 'Message-Data 1/2/3'            (0,+{gap_sep},{col_msg_data})

  print '='                             (+1,1,{col_emplid})    Fill
  print '='                             (0,+{col_sep},{col_rcd#}) Fill
  print '='                             (0,+{col_sep},{col_event_id})  Fill
  print '='                             (0,+{col_sep},{col_depid})   Fill
  print '='                             (0,+{col_sep},{col_msg_id})    Fill
  print '='                             (0,+{gap_sep},{col_msg_descr}) Fill
  print '='                             (0,+{gap_sep},{col_msg_data})  Fill

End-Heading

!*************************************
Begin-Procedure Process-Main
!*************************************

  let #MsgOffset = {col_emplid} + {col_sep} +
                   {col_rcd#} + {col_sep} + {col_event_id} + {col_sep} +
                   {col_depid} + {col_sep} + {col_msg_id} + {gap_sep} +
                   {col_msg_descr} + {gap_sep} +1

Begin-Select
A.EMPLID          (0,1,{COL_EMPLID})             On-Break
                                                 PRINT=CHANGE/TOP-PAGE
                                                 LEVEL=1
A.BENEFIT_RCD_NBR    (0,+{COL_SEP},{COL_RCD#})      On-Break
                                                 PRINT=CHANGE/TOP-PAGE
                                                 LEVEL=1
A.COBRA_EVENT_ID  (0,+{COL_SEP},{COL_EVENT_ID})  On-Break
                                                 PRINT=CHANGE/TOP-PAGE
                                                 LEVEL=1
A.DEPENDENT_BENEF (0,+{COL_SEP},{COL_DEPID})     On-Break
                                                 PRINT=CHANGE/TOP-PAGE
                                                 LEVEL=1
A.MSGID           (0,+{COL_SEP},{COL_MSG_ID})

  let $ErrMsgID = &A.MSGID
  do Get-Err-Msg-Descr
  print $ErrMsgLong   (0,+{gap_sep},{col_msg_descr}) WRAP {col_msg_descr} 6

A.MSGDATA1
  if (RTRIM(&A.MSGDATA1, ' ') <> '')
    let $MsgData = '1: ' || &A.MSGDATA1
    print $MsgData                 (1,#MsgOffset,{col_msg_data})
  end-if

A.MSGDATA2
  if (RTRIM(&A.MSGDATA2, ' ') <> '')
    let $MsgData = '2: ' || &A.MSGDATA2
    print $MsgData                 (+1,#MsgOffset,{col_msg_data})
  end-if

A.MSGDATA3
  if (RTRIM(&A.MSGDATA3, ' ') <> '')
    let $MsgData = '3: ' || &A.MSGDATA3
    print $MsgData                 (+1,#MsgOffset,{col_msg_data})
  end-if

  NEXT-LISTING SKIPLINES=1 NEED=6

FROM  PS_COBRA_MESSAGE A
ORDER BY A.EMPLID ASC,
         A.BENEFIT_RCD_NBR ASC,
         A.COBRA_EVENT_ID ASC,
         A.MSGID ASC,
         A.MSGDATA1 ASC

End-Select

End-Procedure

!*********************************
Begin-Procedure Get-Err-Msg-Descr
!*********************************

  let $ErrMsgLong = '[MsgID not found in PAY_MESSAGE_TBL]'

Begin-Select
B.DESCR
B.DESCRLONG
  let $ErrMsgLong = &B.DESCRLONG

FROM  PS_PAY_MESSAGE_TBL B
WHERE B.MSGID = $ErrMsgID
End-Select

End-Procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!*************************************

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Format-DateTime

#Include 'stdapi.sqc'    !Update Process API
!****************************** End Of Report *******************************
