!***********************************************************************
!  TAX706: Print Taxable Gross Definitions Table                       *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:06:27:10                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup31.sqc'  !printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'TAX706' to $ReportID
  move 'Taxable Gross Definition' to $ReportTitle
  display ' '
  display $ReportTitle
  display ' '

  do Init-DateTime
  do Get-Current-DateTime
  do Stdapi-Init
end-procedure

begin-HEADING 7
  #Include 'stdhdg01.sqc'

  print ' '                             (+2,2,5)
  print 'Locality'                      (0,+3,8)
  print 'Locality'                      (0,+3,40)
  print 'Eff'                           (0,+3)
  print 'Tax Grs'                       (0,76,10)
  print 'Tax Grs'                       (0,+3,10)
  print ' '                             (0,+3,9)
  print 'Effect on'                     (0,+3,10)

  print 'State'                         (+1,2,5)
  print 'Code'                          (0,+3,8)
  print 'Name'                          (0,+3,40)
  print 'Date'                          (0,+3)
  print 'Type'                          (0,76,10)
  print 'Base'                          (0,+3,10)
  print 'Component'                     (0,+3,9)
  print 'Gross  '                       (0,+3,10)

end-HEADING

!***********************************************************************
!  PROC PROCESS-MAIN
!         Main Procedure
!***********************************************************************

BEGIN-PROCEDURE Process-Main
BEGIN-SELECT

A.STATE                      (+1,2,5)  on-break skiplines=1 print=always
A.LOCALITY                   (0,+3,8)
  if RTRIM(&A.Locality, ' ') <> ''
    do Get-Locality-Name
    if RTRIM(&A.Locality, ' ') = '$DFLT'
      print '* Locality Default *'      (0,+3,40)
    else
      print &D.Locality_Name            (0,+3,40)
    end-if
  else
    print ' '                           (0,+3,40)
  end-if
A.EFFDT &A.EffDt
  do Format-DateTime(&A.EffDt, $out, {DEFDATE}, '', '')
  print $out                            (0,+3)

A.EFF_STATUS
  if &A.Eff_Status = 'I'
    print 'I'                           (0,0,1)
  else
    print ' '                           (0,0,1)
  end-if

  do Get-Type-Base

FROM PS_TAXGR_DEFN_TBL A
ORDER BY A.STATE, A.LOCALITY, A.EFFDT DESC

END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC GET-TYPE-BASE
!         Get taxable gross definition tax type and base
!***********************************************************************

BEGIN-PROCEDURE Get-Type-Base
  move 0 to #LineIncr
BEGIN-SELECT

B.TAX_GRS_TYPE
  move 'TAX_GRS_TYPE' to $FieldName
  move &B.Tax_Grs_Type  to $FieldValue
  do Read-Translate-Table
  print $XlatShortName       (+#LineIncr,76,10)

B.TAX_GRS_BASE
  move 'TAX_GRS_BASE' to $FieldName
  move &B.Tax_Grs_Base  to $FieldValue
  do Read-Translate-Table
  print $XlatShortName       (0,+3,10)

  do Get-Components
  move 1 to #LineIncr

FROM PS_TAXGR_BASE_TBL B
WHERE B.STATE    = &A.State
  AND B.LOCALITY = &A.Locality
  AND B.EFFDT    = &A.EffDt
ORDER BY B.TAX_GRS_TYPE

END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC GET-COMPONENTS
!         Get taxable gross definition components
!***********************************************************************

BEGIN-PROCEDURE Get-Components

  move 0 to #count
  move 'N' to $Match

BEGIN-SELECT

C.STATE
C.LOCALITY
C.TAX_GRS_TYPE
C.TAX_GRS_COMPNT
C.TAX_GRS_EFFECT

  if RTRIM(&C.Locality, ' ') = '' and RTRIM(&A.Locality, ' ') = ''
    move 'Y' to $Match
  end-if
  if &C.Locality = &A.Locality
    move 'Y' to $Match
  end-if

  if $Match = 'Y'
    if #count = 0
      print &C.Tax_Grs_Compnt              (0,+3,9)
      move 999 to #count
    else
      print &C.Tax_Grs_Compnt              (+1,-22,9)
    end-if

    move 'TAX_GRS_EFFECT' to $FieldName
    move &C.Tax_Grs_Effect to $FieldValue
    do Read-Translate-Table
    print $XlatShortName                   (0,+3,10)
  end-if
  move 'N' to $Match

FROM PS_TAXGR_CMPNT_TBL C
WHERE C.STATE            = &A.State
  AND C.EFFDT            = &A.EffDT
  AND C.TAX_GRS_TYPE     = &B.Tax_Grs_Type

END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC GET-LOCALITY-NAME
!         Get locality name
!***********************************************************************

BEGIN-PROCEDURE Get-Locality-Name

BEGIN-SELECT

D.LOCALITY_NAME

FROM PS_LOCAL_TAX_TBL D
WHERE D.STATE            = &A.State
  AND D.LOCALITY         = &A.Locality
  AND D.EFFDT            =
      ( SELECT MAX(EFFDT)
          FROM PS_LOCAL_TAX_TBL
         WHERE STATE    = &A.State
           AND LOCALITY = &A.Locality)

END-SELECT
END-PROCEDURE

#Include 'readxlat.sqc'  !get translates for fieldname, value
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'stdapi.sqc'    !Update Process API
