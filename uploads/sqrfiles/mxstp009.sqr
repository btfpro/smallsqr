!***********************************************************************
! MXSTP009.SQR   STPS Training and Development External Registration   *
!                     Application. (Instructor List)                   *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:13:52:16                                 *
!       $Release:  HR9                                                 *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'   !Set environment

Begin-Setup
#include 'setupdb.sqc'
 Declare-Printer   THIS_REPORT
  Type=HPLASERJET
  Font=5
  Point-Size=14
  Pitch=17
  Symbol-Set=19U     ! ASCII symbol set
 End-Declare
 
 Declare-Layout THIS_REPORT
  Orientation=Portrait
  Top-Margin= .35
  Left-Margin=.2
  Max-Lines=82
  Max-Columns=130
  Char-Width=4    ! 7.2
  Line-Height=9     ! 72/printer_point-size
 End-Declare
 
 Declare-Report THIS_REPORT
  Printer-Type=HPLASERJET
  LayOut=THIS_REPORT
 End-Declare

End-Setup

begin-report
  move '1' to $ReportDateType
  move '1' to $Reportyear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
!  do Declare-Printer
  do Init-Report
  do Select-Parameters
  do Report
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do Stdapi-Term
  !do Reset
end-report

begin-procedure Init-Report
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  move 'MXSTP001' to $ReportID
  let $ReportTitle = 'STPS DC-5 Solicitud de Registro de Agente Capacitador Externo (Reverso)'
  display $ReportTitle
end-procedure Init-Report

begin-heading 1
  position  (1)
end-heading

!begin-procedure Declare-Printer
!  let #fontstd  = 5
!  let #sizestd  = 6
!  let #fontsm   = 5
!  let #sizesm   = 8
!  let #fontmed  = 5
!  let #sizemed  = 10
!  let #fontgr   = 5
!  let #sizegr   = 12
!  let #fontxgr  = 5
!  let #sizexgr  = 14
!  declare printer
!    type          = HPLASERJET
!    orientation   = portrait
!    top-margin    = 0.35
!    left-margin   = 0.0   !0.5
!    symbol-set    = 19U
!    font          = 5
!    font-style    = fixed
!    point-size    = 14 !12
!    line-size     = 9
!end-procedure Declare-Printer

begin-procedure Report
  do Get-Report-Data
  do Get-Location-Data
  if $Print_Instr = 'Y'
    do Get-Instructor-Data
  end-if
  do print-format
end-procedure Report

begin-procedure Select-Parameters
begin-select
RC.COMPANY
RC.ESTABID
RC.PRINT_ADDRESS_MEX

  let $Company = &RC.COMPANY
  let $ESTABID = rtrim(&RC.ESTABID,' ')
  let $Print_Instr = &RC.PRINT_ADDRESS_MEX

FROM PS_RUN_STPS_MEX RC
WHERE RC.OPRID       = $Prcs_OprID
  AND RC.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
  print ''              (12,1)
end-procedure Select-Parameters


begin-procedure Get-Report-Data
begin-select
CM.REP_NAME_MEX
  let $Rep_Name  = &CM.REP_NAME_MEX

FROM PS_COMPANY_TBL_MEX CM
WHERE CM.COMPANY = $Company
and CM.EFFDT = (SELECT MAX(EFFDT) FROM PS_COMPANY_TBL_MEX
               WHERE COMPANY = CM.COMPANY
               AND EFFDT <= $AsofToday)
end-select
end-procedure Get-Report-Data


begin-procedure Get-Location-Data
begin-select
IMS.CITY
IMS.STATE
  let $City     = rtrim(&IMS.CITY,' ')
  let $State    = &IMS.STATE
FROM PS_LOCATION_TBL IMS
WHERE IMS.ESTABID = $ESTABID
AND IMS.EFFDT = (SELECT MAX(EFFDT) FROM PS_LOCATION_TBL
               WHERE ESTABID = IMS.ESTABID
               AND EFF_STATUS = 'A'
               AND EFFDT <= $AsofToday)
end-select
end-procedure Get-Location-Data

begin-procedure Get-Instructor-Data
  move 0 to #Inst_Count
  move 1 to #Instructor_Cons
begin-select
T.INSTRUCTOR_ID
P.NAME
P.LAST_NAME
P.LAST_NAME_SRCH
P.SECOND_LAST_NAME
P.SECOND_LAST_SRCH
P.FIRST_NAME
P.FIRST_NAME_SRCH
T.INSTRUCTOR_RFC_MEX
T.AREA_OF_EXPERTISE
  let $Instructor_RFC = &T.INSTRUCTOR_RFC_MEX
  let $Expertise = &T.AREA_OF_EXPERTISE
  let $Instructor_Name = rtrim(&P.LAST_NAME_SRCH,' ') || ' ' || rtrim(&P.SECOND_LAST_SRCH,' ') || ' ' || rtrim(&P.FIRST_NAME_SRCH,' ')
  do Print-Detail
FROM PS_TRN_INSTRCT_TBL T,
     PS_NAMES P
WHERE T.INSTRUCTOR_ID = P.EMPLID
and   T.EFFDT =(SELECT MAX(A_ED.EFFDT) FROM PS_TRN_INSTRCT_TBL A_ED
                     WHERE T.INSTRUCTOR_ID = A_ED.INSTRUCTOR_ID
                     AND A_ED.EFF_STATUS = 'A'
                     AND A_ED.EFFDT <=$AsOfToday)

and   P.NAME_TYPE = 'PRI'
and   P.EFFDT     = (SELECT MAX(EFFDT) FROM PS_NAMES
                     WHERE EMPLID = P.EMPLID
                     AND   NAME_TYPE = P.NAME_TYPE
                     AND   EFFDT <= $AsOfToday)

end-select
end-procedure Get-Instructor-Data

begin-procedure print-format
print $Rep_Name             (67,31)
let $City_St = $City || ', ' || $State
print $City_St                 (74,31)
do Convert-To-DTU-Date($AsOfToday,$AsOfToday1)
let $Today_Y1 = substr($AsOfToday1,3,1)
let $Today_Y2 = substr($AsOfToday1,4,1)
let $Today_M1 = substr($AsOfToday1,6,1)
let $Today_M2 = substr($AsOfToday1,7,1)
let $Today_D1 = substr($AsOfToday1,9,1)
let $Today_D2 = substr($AsOfToday1,10,1)
print $Today_Y1             (74,81)
print $Today_Y2             (74,86)
print $Today_M1             (74,91)
print $Today_M2             (74,96)
print $Today_D1             (74,101)
print $Today_D2             (74,105)
end-procedure print-format

begin-procedure Print-Detail
print #Instructor_Cons      (+1,2) edit 09999
print $Instructor_Name      ( ,17,25)
print $Instructor_RFC       ( ,71)
print $Expertise            ( ,105,20)
print ' '                   (+1,2)
add 1 to #Inst_Count
add 1 to #Instructor_Cons
if #Inst_Count  = 22
   let #Inst_Count = 0
   do Print-Format
   new-page
end-if
end-procedure Print-Detail

!****************************************************************
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Date math routines
#include 'askcalyr.sqc'  !Ask-Calendar-Year
