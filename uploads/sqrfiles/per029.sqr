!***********************************
!  PER029:  Database Audit         *
!***********************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:35:22                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup


begin-report
  Show 'Start: PER029'
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  Show 'From / Thru Date Range Selected: '
  show '     $Fromdatetime: ' $FromDateTime
  show '     $Thrudatetime: ' $ThruDateTime
  if #CNT > 0
     Show '# of records selected from PSAUDIT: ' #CNT
  else
     Show 'No data selected from PSAUDIT for this report'
     Print 'No data selected from PSAUDIT for this report' (+2,10)
  end-if
  show 'End: PER029'
  do Reset
  do Stdapi-Term
end-report


begin-heading 6
do Get_Field_Information ('PER029',     $REPORT_TITLE',         $REPORTTITLE,   #DW)
  #Include 'stdhtr08.sqc'

do Get_Field_Information ('PER029',     'OPERATOR1',            $OPERATOR,      #DW)
do Get_Field_Information ('PER029',     'CHANGE_DT_TIME',       $DT_TIME,       #DW)
do Get_Field_Information ('PER029',     'FIELDNAME',            $FIELD,         #DW)
do Get_Field_Information ('PER029',     'OLD_VALUE',            $OLD,           #DW)
do Get_Field_Information ('PER029',     'NEW_VALUE',            $NEW,           #DW)
do Get_Field_Information ('PER029',     'KEYS',                 $KEYS,          #DW)
do Get_Field_Information ('PER029',     'RECNAME',              $RECNAME,       #DW)
do Get_Field_Information ('HR',         'ACTION',               $ACTION,        #DW)

PRINT   $OPERATOR               (+2,1,9)
PRINT   $DT_TIME                (0,11,19)
PRINT   $ACTION                 (0,31,7)
PRINT   $FIELD                  (0,39,19)
PRINT   $OLD                    (0,59,18)
PRINT   $NEW                    (0,81,21)
PRINT   $KEYS                   (0,103)
end-heading

begin-procedure Init-Report

  move 'PER029' to $ReportID
  do Init-Array

  do Stdapi-Init

  if $prcs_process_instance = ''
    do Ask-From-Thru-Date
  else
    do Select-Parameters
  end-if
  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')

end-procedure

begin-procedure Get-Values
   let $language_cd = $PRCS_LANGUAGE_CD
   do Get-From-Thru-Date
end-procedure

begin-procedure Init-Array
  create-array name=KeyNames size=1 field=ColName:char:16
end-procedure

begin-procedure Process-Main
  let #CNT = 0
  position (-1)
  move '1' to $Year4
  do Format-DateTime($FromDate, $FromDateTime, {DEFYMD}, '', '')
  move '1' to $Year4
  do Format-DateTime($ThruDate, $ThruDateTime, {DEFYMD}, '', '')

  concat ' 00:00:01' with $FromDateTime
  concat ' 23:59:59' with $ThruDateTime

!    show 'Fromdatetime: ' $FromDateTime
  do Format-DateTime($FromDateTime, $FromDateTime, {DEFYMD}, 'time', 'native')
  do Format-DateTime($ThruDateTime, $ThruDateTime, {DEFYMD}, 'time', 'native')
!  show 'Fromdatetime: ' $FromDateTime
!  show 'past Format Datetime'
!#ifdef INFORMIX
!  concat '.000' with $FromDateTime
!  concat '.000' with $ThruDateTime
!#end-if
Begin-SELECT
A.RECNAME
  let #CNT = #CNT + 1
  if &A.RecName <> $RecName
    print 'Record Name: ' (+2,1,0)
    print &A.RecName      ()
    POSITION              (+1)
    move &A.RecName to $RecName
    do Get-Key-Names
    NEXT-LISTING NEED=3
  end-if
A.AUDIT_OPRID             (1,1)
A.AUDIT_STAMP
{DATETIMEOUT-PREFIX}A.AUDIT_STAMP{DATETIMEOUT-SUFFIX} &Audit_DTTM
  do Format-DateTime(&Audit_DTTM, $out, {DEFDATE}, 'time', '')
  print $out              (1,11)
A.AUDIT_ACTN
  evaluate &A.Audit_Actn
    when = 'A'
      print 'Add'         (1,31)
    when = 'C'
      print 'Change'      (1,31)
    when = 'D'
      print 'Delete'      (1,31)
  end-evaluate
A.FIELDNAME               (1,39)
A.OLDVALUE                (1,59,20) WRAP 20 3
A.NEWVALUE                (1,81,20) WRAP 20 3
A.KEY1,A.KEY2,A.KEY3,A.KEY4,A.KEY5,
A.KEY6,A.KEY7,A.KEY8,A.KEY9,A.KEY10,
A.KEY11,A.KEY12,A.KEY13,A.KEY14,A.KEY15

 let $Key1  = rtrim(&A.Key1, ' ')
 let $Key2  = rtrim(&A.Key2, ' ')
 let $Key3  = rtrim(&A.Key3, ' ')
 let $Key4  = rtrim(&A.Key4, ' ')
 let $Key5  = rtrim(&A.Key5, ' ')
 let $Key6  = rtrim(&A.Key6, ' ')
 let $Key7  = rtrim(&A.Key7, ' ')
 let $Key8  = rtrim(&A.Key8, ' ')
 let $Key9  = rtrim(&A.Key9, ' ')
 let $Key10 = rtrim(&A.Key10, ' ')
 let $Key11 = rtrim(&A.Key11, ' ')
 let $Key12 = rtrim(&A.Key12, ' ')
 let $Key13 = rtrim(&A.Key13, ' ')
 let $Key14 = rtrim(&A.Key14, ' ')
 let $Key15 = rtrim(&A.Key15, ' ')

  move 1 to #i
  move 0 to #strlen
  move 1 to #LINE_NUM
  WHILE #i <= #KeyCount
    GET $ColName from KEYNAMES(0) COLNAME(#I)
    Concat '[' with $ColName
    evaluate #i
      when = 1
        concat $Key1 with $ColName
      when = 2
        concat $Key2 with $ColName
      when = 3
        concat $Key3 with $ColName
      when = 4
        concat $Key4 with $ColName
      when = 5
        concat $Key5 with $ColName
      when = 6
        concat $Key6 with $ColName
      when = 7
        concat $Key7 with $ColName
      when = 8
        concat $Key8 with $ColName
      when = 9
        concat $Key9 with $ColName
      when = 10
        concat $Key10 with $ColName
      when = 11
        concat $Key11 with $ColName
      when = 12
        concat $Key12 with $ColName
      when = 13
        concat $Key13 with $ColName
      when = 14
        concat $Key14 with $ColName
      when = 15
        concat $Key15 with $ColName
    end-evaluate
    concat ']' with $ColName                !temp end-of-string marker
    FIND ']' IN $ColName 0 #locn
    let #strlen = #locn + #strlen + 1

    if #strlen > 72
      print $KeyString (#LINE_NUM,103)
      add 1 to #LINE_NUM
      move '' to $KeyString
      move 0 to #strlen
    end-if

    concat $ColName with $KeyString
    concat '  ' with $KeyString
    add 1 to #i
  END-WHILE
 
  print $KeyString   (#LINE_NUM,103)
  move '' to $KeyString

  NEXT-LISTING NEED=3
FROM  PSAUDIT A
WHERE A.AUDIT_STAMP
BETWEEN {DATETIMEIN-PREFIX}$FROMDATETIME{DATETIMEIN-SUFFIX}
  AND {DATETIMEIN-PREFIX}$THRUDATETIME{DATETIMEIN-SUFFIX}

ORDER BY A.RECNAME,A.AUDIT_OPRID,A.AUDIT_STAMP

end-SELECT
end-procedure

begin-procedure Get-Key-Names

  move 0  to #KeyCount

begin-SELECT

R.FIELDNUM
R.FIELDNAME
R.USEEDIT

  let #Key = trunc((&R.UseEdit/1),0) - (trunc((&R.UseEdit/2),0) * 2)

   if #Key <> 0
    add 1 to #KeyCount
    let $ColName = rtrim(&R.FieldName, ' ')
    concat ': ' with $ColName
    PUT $ColName INTO KEYNAMES(0) COLNAME(#KEYCOUNT)
    
 
  end-if

FROM  PSRECFIELD R
WHERE R.RECNAME = &A.RecName
ORDER BY R.FIELDNUM
end-SELECT




end-procedure

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'stdapi.sqc'    !Routines to update run status
#include 'askftd.sqc'    !From Thru Date input

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
