!**************************************************
!  PER013:  Employee Compensation Changes         *
!**************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/09/06:00:56:04                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689848                                              !
!                                                                      *
!***********************************************************************
! Implements row-level security via PS_FAST_SQR_SEC_VW in hrsecty.sqc  *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
begin-setup
  #Include 'ptset02.sqc'   !Printer and page-size initialization
end-setup

#define JOBCODE_TBL
#include "rellang.sqc"

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  if $prcs_oprid=''
    goto last2
  end-if
  if $language_cd = 'JPN'
     let $qualifier = 'A.NAME_AC'
  else
     let $qualifier = 'A.NAME'
  end-if
  
  do Process-Main
      
  do Reset
  do Stdapi-Term
last2:
end-report

!---------------------------------------------------------------------------------------
begin-heading 7
  #Include 'stdhtr08.sqc'

  PRINT   $BUS_UNIT1X             (+2,1,49)
  print $HIRE1                       (0,55,11)
  print $EMP1                        (0,67,5)
  print $JOB1                        (0,73,19)
  print $GRADE1                      (0,93,8)
  if #MultiCurr
    print $CUR1                      (0,102,3)
  end-if
  print $CURRENT                     (0,116,14)
  print $COMP_RT                     (0,131)

  PRINT   $BUS_UNIT2              (+1,1,6)
  print $NAME                        (0,7,30)
  print $EMPLID                      (0,38,11)
  print $RCD                         (0,50,4)
  print $HIRE2                       (0,55,11)
  print $EMP2                        (0,67,5)
  print $JOB2                        (0,73,7)
  print $JOBTITLEx                   (0,81,11)
  print $GRADE2                      (0,93,8)
  if #MultiCurr
    print $CUR2                      (0,102,11)
  end-if
  print $COMP                        (0,114,16)
  print $DATE                        (0,131,11)
  print $AMOUNT                      (0,146,9)
  print $PERCENT                     (0,157,8)
  print $ACTION                      (0,167)

end-heading

begin-procedure Init-Report

  move 'PER013' to $ReportID
  do Stdapi-Init
  if $prcs_oprid=''
    display ''
    display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
    display ''
    goto last1
  end-if

  if $prcs_process_instance = ''
    do Ask-From-Thru-Date
  else
    do Select-Parameters
  end-if
  do Init_Printer
  do Init_Report_translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')
  last1:
end-procedure

begin-procedure Get-Values
   let $language_cd = $prcs_language_cd
   do Get-From-Thru-Date
   do Get-PER013-Parm
  let $show_comp = &RUN_CNTL_HR.MULT_COMP_FLAG

 SHOW '$show_comp ' $show_comp
 SHOW '$FromDate ' $FromDate 
 SHOW '$ThruDate ' $ThruDate
 SHOW '$SecurityClause ' $SecurityClause
 SHOW '$qualifier ' $qualifier
end-procedure

!---------------------------------------------------------------------------------------
begin-procedure Process-Main

!Setup for row-level security...
let $_TableAlias = 'B'
do Security-Param

do Get-Labels
begin-SELECT
C.DEPTID () on-break print=never procedure=Dept-Change
  if $firstRec <> 'N'
    do Initialize-Subheading
    move 'N' to $firstRec
  end-if

C.BUSINESS_UNIT            (+1,1,6)
A.NAME                     (0,7,30)
A.NAME_AC
A.EMPLID                   (0,38,11)
B.EMPL_RCD                 (0,50,4)

B.HIRE_DT  &Hire_Dt
  do Format-DateTime(&Hire_Dt, $out, {DEFDATE}, '', '')
  print $out               (0,55,11)

C.EMPL_TYPE                (0,67,5)

C.JOBCODE                  &JOBCODE
D.EFFDT
D.DESCRSHORT               &JOBCODE_TBL-DESCRSHORT
 print &JOBCODE            (0,73,7)

C.SETID_JOBCODE

  let $JOBCODE_TBL-DESCRSHORT = &JOBCODE_TBL-DESCRSHORT
  do Get_Related_JOBCODE_TBL(&D.EFFDT, &JOBCODE, &C.SETID_JOBCODE)

  print $JOBCODE_TBL-DESCRSHORT (0,81,11)

C.SAL_ADMIN_PLAN           (0,93,5) EDIT XXXX/
C.GRADE                    ()
C.CURRENCY_CD
  if #MultiCurr
     print &C.Currency_cd  (0,102,3)
  end-if

C.COMPRATE
  do Format-Number(&C.COMPRATE, $out, '999999999999.999999')
  print $out               (0,106,19)

C.COMP_FREQUENCY           (0,126,5)

C.EFFDT
  do Format-DateTime(&C.EffDt, $out, {DEFDATE}, '', '')
  print $out               (0,131,10)
C.EFFSEQ

C.CHANGE_AMT
  do Format-Number(&C.CHANGE_AMT, $out, '999999999999.999999mi')
  print $out               (0,135,19)

C.CHANGE_PCT
  do Format-Number(&C.Change_Pct, $out, '999.999mi')
  print $out               (0,155,8)

C.ACTION
  move 'ACTION' to $FieldName
  move &C.Action  to $FieldValue
  do Read-Translate-Table
  print $XlatShortName     (0,167,10)
  if $show_comp = 'Y'
    move 'Y' to $firstcomp
    do Get-Compensation-Components
    position (+1)
  end-if

FROM  PS_PERSON_NAME A,
      PS_EMPLOYMENT B,
      PS_JOB C,
      PS_JOBCODE_TBL D
WHERE A.EMPLID = B.EMPLID
  AND B.EMPLID = C.EMPLID
  AND B.EMPL_RCD = C.EMPL_RCD
  AND C.EFFDT BETWEEN $FromDate AND $ThruDate
  AND (C.CHANGE_PCT <> 0
   OR C.ACTION = 'HIR'
   OR C.ACTION = 'REH')
  AND D.SETID = C.SETID_JOBCODE
  AND D.JOBCODE = C.JOBCODE
  AND D.EFFDT = (SELECT MAX(D2.EFFDT) FROM PS_JOBCODE_TBL D2 WHERE D.SETID = D2.SETID AND D.JOBCODE = D2.JOBCODE
                 AND D2.EFFDT <= C.EFFDT)
  [$SecurityClauseWithERN]

ORDER BY C.DEPTID,C.BUSINESS_UNIT ,[$qualifier],A.EMPLID,C.EFFDT DESC,C.ACTION ASC
end-SELECT
end-procedure

begin-procedure Get-Compensation-Components
  do Get_Field_Information ('HR',         'COMP_COMPONENTS',      $COMPONENTS,    #DW)
  print $COMPONENTS            (+1,56,32)
begin-SELECT
D.COMP_EFFSEQ
D.COMP_RATECD
  if $firstcomp <> 'N'
    print &D.COMP_RATECD       (0,89)
    move 'N' to $firstcomp
  else
    print &D.COMP_RATECD       (+1,89,8)
  end-if
D.CURRENCY_CD                  (0,98,3)
D.COMPRATE
  do Format-Number(&D.CompRate, $out, '999999999999.999999')
  print $out                   (0,101,19)
D.COMP_FREQUENCY               (0,121,15)
D.CHANGE_AMT
  do Format-Number(&D.CHANGE_AMT, $out, '999999999999.999999mi')
  print $out                   (0,137,19)
D.CHANGE_PCT
  do Format-Number(&D.CHANGE_PCT, $out, '999.999mi')
  print $out                   (0,157)
FROM  PS_COMPENSATION D
WHERE D.EMPLID    = &A.EmplID
  AND D.EMPL_RCD = &B.EMPL_RCD
  AND D.EFFDT     = &C.Effdt
  AND D.EFFSEQ    = &C.Effseq
ORDER BY D.COMP_RATECD, D.COMP_EFFSEQ
end-SELECT
end-procedure

begin-procedure Dept-Change
  if #current-line >= #sqr-max-lines - 4  !ensure at least one employee is listed
    new-page
  else
    position (+3)
  end-if
  do Initialize-Subheading
end-procedure

begin-procedure Initialize-Subheading
  move &C.DeptID to $DeptID
  do Get-Department-Name
  do Print-Subheading
end-procedure

begin-procedure Print-Subheading
  print $DEPTID1     (+1,1)
  print $DeptID      (0,+1,1)
  print $DeptName    (0,+2)
  position (+1)
end-procedure

begin-procedure Get-Labels

do Get_Field_Information ('PER013',     'REPORT_TITLE', $REPORTTITLE,   #DW)
do Get_Field_Information ('PER013',     'CURRENT',      $CURRENT,       #DW)
do Get_Field_Information ('PER013',     'COMP_RT',      $COMP_RT,       #DW)
do Get_Field_Information ('PER013',     'DATE_TO',      $DATE,          #DW)
do Get_Field_Information ('HR',         'AMOUNT',       $AMOUNT,        #DW)
do Get_Field_Information ('PER013',     'PERCENT',      $PERCENT,       #DW)

do Get_Field_Information ('HR',         'DEPTID',       $DEPTID1,       #DW)
do Get_Field_Information ('HR',         'EMPL_NAME',    $NAME,          #DW)
do Get_Field_Information ('HR',         'EMPLID',       $EMPLID,        #DW)
do Get_Field_Information ('HR',         'HIRE_DT1',     $HIRE1,         #DW)
do Get_Field_Information ('HR',         'HIRE_DT2',     $HIRE2,         #DW)
do Get_Field_Information ('HR',         'EMPL_TYPE1',   $EMP1,          #DW)
do Get_Field_Information ('HR',         'EMPL_TYPE2',   $EMP2,          #DW)
do Get_Field_Information ('HR',         'JOBCODE1',     $JOB1,          #DW)
do Get_Field_Information ('HR',         'JOBCODE2',     $JOB2,          #DW)
do Get_Field_Information ('HR',         'JOBTITLE',     $JOBTITLEx,      #DW)
do Get_Field_Information ('HR',         'GRADE1',       $GRADE1,        #DW)
do Get_Field_Information ('HR',         'GRADE2',       $GRADE2,        #DW)
do Get_Field_Information ('HR',         'CURRENCY_CD1', $CUR1,          #DW)
do Get_Field_Information ('HR',         'CURRENCY_CD2', $CUR2,          #DW)
do Get_Field_Information ('HR',         'ACTION',       $ACTION,        #DW)
do Get_Field_Information ('HR',         'COMPRATE',     $COMP,          #DW)
do Get_Field_Information ('HR',         'EMPL_RCD',     $RCD,           #DW)

do Get_Field_Information ('HR',       'BUS_UNIT1X',        $BUS_UNIT1X,         #DW)
do Get_Field_Information ('HR',       'BUS_UNIT2',        $BUS_UNIT2,         #DW)

end-procedure

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askftd.sqc'    !From Thru Date input
#include 'hrsecty.sqc'   !Get SQR Security parameters

#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#include 'stdapi.sqc'    !Routines to update run status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
