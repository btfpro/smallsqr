!************************************************
!  PAY014CN:  Employee Earnings Record - CANADA *
!************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                $Date:  2006/01/03:16:54:25                           !
!             $Release:  HR9                                           !
!            $Revision:  102                                           !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !Printer and page-size initialization
#Include 'ctxrnctl.sqc'  !Get-Can-Tax-Processing-Params procedure

begin-report
  do Init-Report
  do StdAPI-Term
end-report

begin-procedure Init-Report
  do StdAPI-Init
  move 'PAY014CN' to $ReportID

  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $Pay014cn_Title_emp_earn to $ReportTitle

  do Init-DateTime
  do Init-Number

  do Initialization
  do Get-Can-Tax-Processing-Params
  move $PeriodEndDate to $AsOfDate  !for included procedures
  do Standard-Initialization
end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from PAY014CN  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('PAY014CN', 'TITLE_EMP_EARN' , $Pay014cn_Title_emp_earn , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'QUARTER_TXT'    , $Pay014cn_Quarter        , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'COMPANY_TOT'    , $Pay014cn_Company_tot    , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'QUARTER_TOT'    , $Pay014cn_Quarter_tot    , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'YTD_TOT'        , $Pay014cn_Ytd_tot        , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'QTD_HDR'        , $Pay014cn_Qtd_hdr        , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'GROSS_HDR'      , $Pay014cn_Gross_hdr      , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'TAXES_HDR'      , $Pay014cn_Taxes_hdr      , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'DEDUC_HDR'      , $Pay014cn_Deduc_hdr      , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'NET_HDR'        , $Pay014cn_Net_hdr        , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'COL_HDR1'       , $Pay014cn_Col_hdr1       , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'COL_HDR2'       , $Pay014cn_Col_hdr2       , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'COL_HDR3'       , $Pay014cn_Col_hdr3       , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'COL_HDR4'       , $Pay014cn_Col_hdr4       , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'COL_HDR5'       , $Pay014cn_Col_hdr5       , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'COL_HDR6'       , $Pay014cn_Col_hdr6       , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'COL_HDR7'       , $Pay014cn_Col_hdr7       , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'COL_HDR8'       , $Pay014cn_Col_hdr8       , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'COL_HDR9'       , $Pay014cn_Col_hdr9       , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'COL_HDR10'      , $Pay014cn_Col_hdr10      , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'COL_HDR11'      , $Pay014cn_Col_hdr11      , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'COL_HDR12'      , $Pay014cn_Col_hdr12      , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'FIRST'          , $Pay014cn_first          , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'SECOND'         , $Pay014cn_second         , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'THIRD'          , $Pay014cn_third          , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'FOURTH'         , $Pay014cn_fourth         , #dummy_width)
   do Get_Field_Information ('PAY014CN', 'LEGEND'         , $Pay014cn_legend         , #dummy_width)


end-procedure





begin-procedure Initialization
  create-array name=Totals size=3 -
    field=TotalName:char field=total:number:10 field=startCol:number:10
  put $Pay014cn_Company_tot   into Totals(1) TotalName
  put $Pay014cn_Quarter_tot   into Totals(2) TotalName
  put  15 into Totals(0) startCol(0)              !Reg Hrs
  put  34 into Totals(0) startCol(1)              !Reg Earns
  put  46 into Totals(0) startCol(2)              !OT Hrs
  put  59 into Totals(0) startCol(3)              !OT Earns
  put  73 into Totals(0) startCol(4)              !Other Hrs
  put  89 into Totals(0) startCol(5)              !Other Earns
  put 101 into Totals(0) startCol(6)              !Gross Pay
  put 118 into Totals(0) startCol(7)              !Federal Taxes
  put 139 into Totals(0) startCol(8)              !Deductions
  put 161 into Totals(0) startCol(9)              !Net Pay

  create-array name=ETDarray size=100         -
    field=EarnType:char                       -
    field=EarnHours:number                    -
    field=EarnGross:number                    -
    field=TaxType:char                        -
    field=TaxAmt:number                       -
    field=DedCode:char                        -
    field=DedAmt:number

  move 7 to #MaxSummaryLines !Index of last entry in the
                             !Summary array

  create-array name=SUMarray size=8           -
    field=EarnHrType:char:2                   -
    field=EarnHours:number:2                  -
    field=EarnGrsType:char:2                  -
    field=EarnGross:number:2                  -
    field=TaxType:char                        -
    field=TaxAmt:number                       -
    field=DedCode:char:3                      -
    field=DedAmt:number:3

  do Initialize-ETD-Array
  do Initialize-SUM-Array
end-procedure

begin-heading 7
  #Include 'stdhtr10.sqc'
  evaluate &TX.Balance_Qtr
    when =  1
      move $Pay014cn_first   to $QtrName
    when =  2
      move $Pay014cn_second  to $QtrName
    when =  3
      move $Pay014cn_third   to $QtrName
    when =  4
      move $Pay014cn_fourth  to $QtrName
  end-evaluate

  move $QtrName to $PeriodDesc
  concat $Pay014cn_Quarter with $PeriodDesc
  concat &TX.Balance_Year with $PeriodDesc

  print $PeriodDesc (3)  CENTER
  print $Pay014cn_Col_hdr1                  (+3,1)
  print $Pay014cn_Col_hdr2                  ()
  print $Pay014cn_Col_hdr3                  ()
  print $Pay014cn_Col_hdr4                  (+1,1)
  print $Pay014cn_Col_hdr5                  ()
  print $Pay014cn_Col_hdr6                  ()
  print $Pay014cn_Col_hdr7                  ()
  print $Pay014cn_Col_hdr8                  (+1,1)
end-heading

begin-footing 14
  if $EmplRecordComplete <> 'Y' or $LastPage = 'Y'
    goto END-FOOTING
  end-if

  print $Pay014cn_Quarter_tot       (+0,4)
  move 2 to #totalRow
  move 1 to #rollRow
  move 1 to #posn
  move 0 to #i
  while #i <= 9
    get #total from Totals(#totalRow) total(#i)
    get #startCol from Totals(0) startCol(#i)
    do Format-Number(#total, $out, '999,999,999.99mi')
    print $out (+#posn,#startCol)
    multiply -1 times #posn
    array-add #total to Totals(#rollRow) total(#i)
    put 0 into Totals(#totalRow) total(#i)
    add 1 to #i
  end-while

  do Get-YTD

  print $Pay014cn_Ytd_tot     (+2,4)
  print $Pay014cn_Gross_hdr   (+0,82)
  print #chk_gross_ytd        (+0,89)    edit 99,999,999.99mi
  print $Pay014cn_Taxes_hdr   (+0,108)
  print #chk_taxes_ytd        (+0,114)   edit 99999,999.99mi
  print $Pay014cn_Deduc_hdr   (+0,130)
  print #chk_dedns_ytd        (+0,142)   edit 9999,999.99mi
  print $Pay014cn_Net_hdr     (+0,158)
  print #chk_net_pay_ytd      (+0,162)   edit 99,999,999.99mi

  print $Pay014cn_Qtd_hdr                                         (+2,1)
  print $Pay014cn_Col_hdr9                                        (+0,8)
  print $Pay014cn_Col_hdr10                                       (+0,42)
  print $Pay014cn_Col_hdr11                                       (+0,80)
  print $Pay014cn_Col_hdr12                                       (+0,110)

  move 0 to #i
  while #i < #MaxSummaryLines
    get $EarnHrType0        -
        #EarnHours0         -
        $EarnGrsType0       -
        #EarnGross0         -
        $EarnHrType1        -
        #EarnHours1         -
        $EarnGrsType1       -
        #EarnGross1         -
        $TaxType            -
        #TaxAmt             -
        $DedCode0           -
        #DedAmt0            -
        $DedCode1           -
        #DedAmt1            -
        $DedCode2           -
        #DedAmt2            -
      from SUMarray(#i)     -
        EarnHrType(0)       -
        EarnHours(0)        -
        EarnGrsType(0)      -
        EarnGross(0)        -
        EarnHrType(1)       -
        EarnHours(1)        -
        EarnGrsType(1)      -
        EarnGross(1)        -
        TaxType             -
        TaxAmt              -
        DedCode(0)          -
        DedAmt(0)           -
        DedCode(1)          -
        DedAmt(1)           -
        DedCode(2)          -
        DedAmt(2)

    do Format-Number(#EarnHours0, $out, 'b9999.99mi')
    print $out      (+1,08)
    print $EarnHrType0      (+0,17)
    do Format-Number(#EarnHours1, $out, 'b9999.99mi')
    print $out      (+0,22)
    print $EarnHrType1      (+0,31)

    do Format-Number(#EarnGross0, $out, 'b999999.99mi')
    print $out      (+0,42)
    print $EarnGrsType0     (+0,53)
    do Format-Number(#EarnGross1, $out, 'b999999.99mi')
    print $out      (+0,58)
    print $EarnGrsType1     (+0,69)

    do Format-Number(#TaxAmt, $out, 'b999999.99mi')
    print $out      (+0,82)

    if $TaxType = 'RV2'
       print 'RL-2'            (+0,94)
    else
       print $TaxType          (+0,94)
    end-if

    do Format-Number(#DedAmt0, $out, 'b99999.99mi')
    print $out      (+0,110)
    print $DedCode0         (+0,120)

    do Format-Number(#DedAmt1, $out, 'b99999.99mi')
    print $out      (+0,130)
    print $DedCode1         (+0,140)

    do Format-Number(#DedAmt2, $out, 'b99999.99mi')
    print $out      (+0,150)
    print $DedCode2         (+0,160)

    add 1 to #i
  end-while

   print $Pay014cn_legend  (+1,1)

END-FOOTING:
end-footing

begin-procedure Report

begin-SELECT
A.COMPANY    () on-break print=never  level=1 procedure=Company-Change
A.PAYGROUP   () on-break print=never  level=2 procedure=PayGroup-Change
PD.NAME      () on-break print=never  level=3 procedure=Employee-Change
B.EMPLID

A.PAY_END_DT
  do Format-DateTime(&A.Pay_End_Dt, $out, {DEFDATE}, '', '')
  print $out    (2,1)

A1.BALANCE_YEAR
B.DEPTID        (3,1)
B.BUSINESS_UNIT (3,12)

A.CHECK_DT           &A.Check_Dt

B.CHECK_DT
B.PAYCHECK_OPTION
B.FORM_ID
B.PAYCHECK_NBR    () on-break print=never  level=4 procedure=PAYCHECK_NBR-Change

  if RTRIM(&B.Form_ID, ' ') <> ''
    print &B.Form_ID   (2,12)
  end-if

  if &B.PAYCHECK_NBR <> 0
    do Format-Number(&B.PAYCHECK_NBR, $out, '099999999999999')
    print $out         (4,1)
  end-if

B.TOTAL_GROSS          (2,105) EDIT 99,999,999.99MI
B.NET_PAY              (2,162) EDIT 99,999,999.99MI
B.PAY_SHEET_SRC
  if &B.Pay_Sheet_Src = 'O' or &B.Pay_Sheet_Src = 'K' or &B.Pay_Sheet_Src = 'L'
     print &B.Pay_Sheet_Src (2,20)
  end-if

B.TOTAL_TAXES,B.TOTAL_DEDUCTIONS,B.OFF_CYCLE,B.PAGE_NUM,B.LINE_NUM,B.SEPCHK
  move &A.Company    to $Company
  move &A.PayGroup   to $PayGroup
  move &A.Pay_End_Dt to $PayEndDate
  move &B.EmplID     to $EmplID
  move &PD.Name      to $Name
  move &A.Check_Dt   to $AsOfDate  !for included procedures
  ARRAY-ADD &B.Total_Gross &B.Total_Deductions &B.Net_Pay -
    to Totals(2) total(6) total(8) total(9)
  do Initialize-ETD-Array
  do Get-Pay-Earnings
  do Get-Taxes
  do Get-Deductions
  do Print-Detail

  NEXT-LISTING NEED=4
FROM  PS_PAY_CALENDAR A, PS_PAY_CHECK B, PS_PAY_CAL_BAL_ID A1,
      PS_PAYGROUP_TBL P, PS_NAMES PD
WHERE A.COMPANY         = A1.COMPANY
  AND A.PAYGROUP        = A1.PAYGROUP
  AND A.PAY_END_DT      = A1.PAY_END_DT
  AND A1.BALANCE_YEAR   = &TX.Balance_Year
  AND A1.BALANCE_ID     = &TX.Balance_Id
  AND A1.BALANCE_QTR    = &TX.Balance_Qtr
  AND PD.EMPLID         = B.EMPLID
  AND PD.NAME_TYPE = 'PRI'
  AND PD.EFFDT =
      (SELECT MAX(PX.EFFDT)
       FROM   PS_NAMES PX
       WHERE  PX.EMPLID    = PD.EMPLID
         AND  PX.NAME_TYPE = PD.NAME_TYPE
         AND  PX.EFFDT    <= $AsOfDate)
  AND B.COMPANY         = A.COMPANY
  AND B.PAYGROUP        = A.PAYGROUP
  AND B.PAY_END_DT      = A.PAY_END_DT
  AND B.PAYCHECK_STATUS IN ('F','R','A')
  AND P.COMPANY         = A.COMPANY
  AND P.PAYGROUP        = A.PAYGROUP
  AND P.COUNTRY         = 'CAN'
  AND P.EFFDT            =
      (SELECT MAX(EFFDT)
         FROM PS_PAYGROUP_TBL
        WHERE COMPANY    = A.COMPANY
          AND PAYGROUP   = A.PAYGROUP
          AND EFF_STATUS = 'A'
          AND EFFDT     <= A.PAY_END_DT)
ORDER BY A.COMPANY ASC, A.PAYGROUP ASC, PD.NAME ASC, B.EMPLID ASC,
         A.PAY_END_DT ASC, B.DEPTID ASC, B.PAGE_NUM ASC, B.LINE_NUM ASC,
         B.SEPCHK ASC
end-SELECT

  do Print-Co-Totals

end-procedure

begin-procedure Print-Co-Totals

                              !print last employee
  move 1 to #changeLevel
  move 'Y' to $EmplRecordComplete
  do Print-Totals

                              !print company totals on separate page
  move ' ' to $Name
  move ' ' to $EmplID
  move 'Y' to $LastPage
  get $TotalName from Totals(1) TotalName
  print $TotalName (+2,4)
  position (+1)
  move 0 to #i
  while #i <= 9
    get #total from Totals(1) total(#i)
    get #startCol from Totals(0) startCol(#i)
    do Format-Number(#total, $out, '999,999,999.99mi')
    print $out (+#posn,#startCol)
    multiply -1 times #posn
    put 0 into Totals(1) total(#i)
    put 0 into Totals(2) total(#i)
    add 1 to #i
  end-while

  do Initialize-ETD-Array
  do Initialize-SUM-Array

end-procedure

begin-procedure Initialize-ETD-Array
  move 0 to #i
  while #i <= #ETDmax

    put  ' '
         0              -
         0              -
         ' '            -
         0              -
         ' '            -
         0              -
    into ETDarray(#i)   -
         EarnType       -
         EarnHours      -
         EarnGross      -
         TaxType        -
         TaxAmt         -
         DedCode        -
         DedAmt

    add 1 to #i
  end-while
  move -1 to #ETDmax
end-procedure

begin-procedure Initialize-SUM-Array
  move 0 to #i
  while #i <= #MaxSummaryLines
    put  ' ' 0 ' ' 0                                         -
         ' ' 0 ' ' 0                                         -
         ' ' 0                                               -
         ' ' 0 ' ' 0 ' ' 0                                   -
    into SUMarray(#i)                                        -
      EarnHrType(0) EarnHours(0) EarnGrsType(0) EarnGross(0) -
      EarnHrType(1) EarnHours(1) EarnGrsType(1) EarnGross(1) -
      TaxType TaxAmt                                         -
      DedCode(0) DedAmt(0) DedCode(1) DedAmt(1) DedCode(2) DedAmt(2)
    add 1 to #i
  end-while
end-procedure


begin-procedure Get-Pay-Earnings
  position (1)
  move -1 to #i
begin-SELECT
C.REG_HRS+C.REG_EARN_HRS     &Hours    (+1,22) EDIT       B999.99MI
C.REG_EARNS+C.REG_HRLY_EARNS &Earnings (0,35)  EDIT B9,999,999.99MI
C.OT_HRS                               (0,54)  EDIT       B999.99MI
C.OT_HRLY_EARNS                        (0,64)  EDIT    B99,999.99MI
C.ADDL_NBR
  ARRAY-ADD &Hours &Earnings &C.OT_Hrs &C.OT_Hrly_Earns -
    to Totals(2) total(0) total(1) total(2) total(3)
  do Get-Other-Hours-Earnings
FROM  PS_PAY_EARNINGS C
WHERE COMPANY         = $Company
  AND PAYGROUP        = $PayGroup
  AND PAY_END_DT      = $PayEndDate
  AND OFF_CYCLE       = &B.Off_Cycle
  AND PAGE_NUM           = &B.PAGE_NUM
  AND LINE_NUM           = &B.LINE_NUM
  AND SEPCHK          = &B.SepChk
  AND OK_TO_PAY       = 'Y'
  AND PAY_LINE_STATUS = 'F'
  AND C.SINGLE_CHECK_USE IN ('C', 'N')
ORDER BY C.ADDL_NBR ASC
end-SELECT
end-procedure

begin-procedure Get-Other-Hours-Earnings
begin-SELECT

ERNCD,OTH_HRS,OTH_EARNS

  add 1 to #i
  PUT &ErnCd &Oth_Hrs &Oth_Earns INTO ETDARRAY(#I) -
    EARNTYPE EARNHOURS EARNGROSS
  ARRAY-ADD &Oth_Hrs &Oth_Earns to TOTALS(2) TOTAL(4) TOTAL(5)

  move &ErnCd to $SummaryCode

  if &Oth_Hrs <> 0
    move 'ERNHR' to $UpdateType
    move &Oth_Hrs to #Hours
    do Update-Summary-Array
  end-if

  if &Oth_Earns <> 0
    move 'ERNGRS' to $UpdateType
    move &Oth_Earns to #Gross
    do Update-Summary-Array
  end-if

FROM  PS_PAY_OTH_EARNS
WHERE COMPANY    = $Company
  AND PAYGROUP   = $PayGroup
  AND PAY_END_DT = $PayEndDate
  AND OFF_CYCLE  = &B.Off_Cycle
  AND PAGE_NUM      = &B.PAGE_NUM
  AND LINE_NUM      = &B.LINE_NUM
  AND SEPCHK     = &B.SepChk
  AND ADDL_NBR      = &C.ADDL_NBR
ORDER BY ERNCD ASC
end-SELECT
  if #i > #ETDmax
    move #i to #ETDmax
  end-if
end-procedure

begin-procedure Get-Taxes
  move -1 to #i
begin-SELECT
M.PROVINCE
M.TAX_CUR
M.TAX_CLASS_CAN

  move 'TAX' to $UpdateType

  add 1 to #i
  PUT &M.Tax_Cur &M.TAX_CLASS_CAN INTO ETDARRAY(#I) TAXAMT TAXTYPE
  ARRAY-ADD &M.Tax_Cur to TOTALS(2) TOTAL(7)
  move &M.TAX_CLASS_CAN to $SummaryCode
  move &M.TAX_CUR to #Tax
  do Update-Summary-Array

FROM  PS_PAY_TAX_CAN M
WHERE M.COMPANY    = $Company
  AND M.PAYGROUP   = $PayGroup
  AND M.PAY_END_DT = $PayEndDate
  AND M.OFF_CYCLE  = &B.Off_Cycle
  AND M.PAGE_NUM      = &B.PAGE_NUM
  AND M.LINE_NUM      = &B.LINE_NUM
  AND M.SEPCHK     = &B.SepChk
  AND M.TAX_CLASS_CAN IN ('CIT','QIT','CPP','QPP','T4A','RV2','EIE','PYT','QIE')
  AND M.TAX_CUR   <> 0
end-SELECT
  if #i > #ETDmax
    move #i to #ETDmax
  end-if
end-procedure

begin-procedure Get-Deductions
  move -1 to #i
begin-SELECT
F.PLAN_TYPE
F.DEDCD

#ifdef DB2ALL
DECIMAL(SUM(F.DED_CUR),15,3)   &F.Ded_cur
#else
SUM(F.DED_CUR)         &F.Ded_cur
#endif

  add 1 to #i
  move &F.Plan_Type to $DedCode xx
  concat &F.DedCd with $DedCode -xxxxxx
  PUT &F.Ded_Cur $DedCode INTO ETDARRAY(#I) DEDAMT DEDCODE

  move 'DED' to $UpdateType
  move $DedCode to $SummaryCode
  move &F.Ded_Cur to #DedAmt
  do Update-Summary-Array

FROM  PS_PAY_DEDUCTION F
WHERE F.COMPANY    = $Company
  AND F.PAYGROUP   = $PayGroup
  AND F.PAY_END_DT = $PayEndDate
  AND F.OFF_CYCLE  = &B.Off_Cycle
  AND F.PAGE_NUM      = &B.PAGE_NUM
  AND F.LINE_NUM      = &B.LINE_NUM
  AND F.SEPCHK     = &B.SepChk
  AND F.DED_CLASS <= 'K'
  AND F.DED_CUR   <> 0
GROUP BY F.PLAN_TYPE, F.DEDCD
ORDER BY F.PLAN_TYPE, F.DEDCD
end-SELECT
  if #i > #ETDmax
    move #i to #ETDmax
  end-if
end-procedure

begin-procedure Get-YTD
  move 0.00 to #chk_gross_ytd
  move 0.00 to #chk_taxes_ytd
  move 0.00 to #chk_dedns_ytd
  move 0.00 to #chk_net_pay_ytd

begin-SELECT
Y.TOTAL_GROSS_YTD
Y.TOTAL_TAXES_YTD
Y.TOTAL_DEDNS_YTD
Y.NET_PAY_YTD
Y.EMPLID
Y.COMPANY
Y.BALANCE_YEAR
Y.BALANCE_QTR
Y.BALANCE_PERIOD

  add &Y.TOTAL_GROSS_YTD to #chk_gross_ytd   round=2
  add &Y.TOTAL_TAXES_YTD to #chk_taxes_ytd   round=2
  add &Y.TOTAL_DEDNS_YTD to #chk_dedns_ytd   round=2
  add &Y.NET_PAY_YTD     to #chk_net_pay_ytd round=2

FROM PS_CAN_CHECK_YTD Y
WHERE Y.BALANCE_YEAR = &TX.Balance_Year
  AND Y.BALANCE_ID   = &TX.Balance_Id
  AND Y.BALANCE_QTR  = &TX.Balance_Qtr
  AND Y.COMPANY      = $Company
  AND Y.EMPLID       = $EmplID
  AND Y.BALANCE_PERIOD =
      (SELECT MAX(BALANCE_PERIOD)
        FROM PS_CAN_CHECK_YTD
       WHERE COMPANY        = Y.COMPANY
         AND EMPLID         = Y.EMPLID
         AND BALANCE_YEAR   = Y.BALANCE_YEAR
         AND BALANCE_QTR    = Y.BALANCE_QTR
         AND PROVINCE       = Y.PROVINCE
         AND WAGE_LOSS_PLAN = Y.WAGE_LOSS_PLAN)
end-SELECT
end-procedure

begin-procedure Print-Detail
  position (1)
  move 0 to #i
  while #i <= #ETDmax
    get $EarnType #EarnHours #EarnGross -
        #TaxAmt $TaxType -
        #DedAmt $DedCode -
    from ETDarray(#i) -
        EarnType EarnHours EarnGross -
        TaxAmt TaxType -
        DedAmt DedCode

    print $EarnType     (+1,79)
    do Format-Number(#EarnHours, $out, 'b999.99mi')
    print $out  (0,83)
    do Format-Number(#EarnGross, $out, 'b9,999,999.99mi')
    print $out  (0,90)
    do Format-Number(#TaxAmt, $out, 'b9999,999.99mi')
    print $out  (0,120)

    if $TaxType = 'RV2'
       print 'RL-2'        (0,134)
    else
       print $TaxType      (0,134)
    end-if

    do Format-Number(#DedAmt, $out, 'b999,999.99mi')
    print $out  (0,142)
    print $DedCode      (0,154)
    add 1 to #i
  end-while
end-procedure

begin-procedure Company-Change

  do Print-Co-Totals

  move 2 to #changeLevel
  do Print-Totals
  move 'N' to $LastPage

end-procedure

begin-procedure PayGroup-Change
  move 3 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure Employee-Change
  move 4 to #changeLevel
  move 'Y' to $EmplRecordComplete
  do Print-Totals
  do Initialize-SUM-Array
  move 'N' to $EmplRecordComplete
end-procedure

begin-procedure PAYCHECK_NBR-Change
  move 5 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure Print-Totals
  if #changeLevel = 5          !skip page except on Pay_End_Dt change
    position (+1)
  else
    new-page
  end-if
end-procedure

begin-procedure Update-Summary-Array
  move 0 to #k
  move 'N' to $ExitWhile
  while #k <= #MaxSummaryLines
    evaluate $UpdateType
      when = 'ERNHR'
        move 0 to #m
        while #m <= 1
          get $EarnType from SUMarray(#k) EarnHrType(#m)
          if RTRIM($EarnType, ' ') = '' !if array entry is null
            put $SummaryCode into SUMarray(#k) EarnHrType(#m)
            move 'Y' to $ExitWhile
            break                 !exit the "evaluate"
          else
            if $SummaryCode = $EarnType
              move 'Y' to $ExitWhile
              break  !exit the "evaluate"
            else
              if #k = #MaxSummaryLines
                put 'OTH' into SUMarray(#k) EarnHrType(#m)
                move 'Y' to $ExitWhile
                break  !exit the "evaluate"
              end-if
            end-if
          end-if
          add 1 to #m
        end-while
      when = 'ERNGRS'
        move 0 to #m
        while #m <= 1
          get $EarnType from SUMarray(#k) EarnGrsType(#m)
          if RTRIM($EarnType, ' ') = '' !if array entry is null
            put $SummaryCode into SUMarray(#k) EarnGrsType(#m)
            move 'Y' to $ExitWhile
            break                 !exit the "evaluate"
          else
            if $SummaryCode = $EarnType
              move 'Y' to $ExitWhile
              break  !exit the "evaluate"
            else
              if #k = #MaxSummaryLines
                put 'OTH' into SUMarray(#k) EarnGrsType(#m)
                move 'Y' to $ExitWhile
                break  !exit the "evaluate"
              end-if
            end-if
          end-if
          add 1 to #m
        end-while
      when = 'TAX'
        get $TaxType from SUMarray(#k) TaxType
        if RTRIM($TaxType, ' ') = '' !if array entry is null
          put $SummaryCode into SUMarray(#k) TaxType
          move 'Y' to $ExitWhile
          break                 !exit the "evaluate"
        else
          if $SummaryCode = $TaxType
            move 'Y' to $ExitWhile
            break  !exit the "evaluate"
          else
            if #k = #MaxSummaryLines
              put 'OTH' into SUMarray(#k) TaxType
              move 'Y' to $ExitWhile
              break  !exit the "evaluate"
            end-if
          end-if
        end-if
      when = 'DED'
        move 0 to #m
        while #m <= 2
          get $DedCode from SUMarray(#k) DedCode(#m)
          if RTRIM($DedCode, ' ') = '' !if array entry is null
            put $SummaryCode into SUMarray(#k) DedCode(#m)
            move 'Y' to $ExitWhile
            break                 !exit the "evaluate"
          else
            if $SummaryCode = $DedCode
              move 'Y' to $ExitWhile
              break  !exit the "evaluate"
            else
              if #k = #MaxSummaryLines
                put 'OTH' into SUMarray(#k) DedCode(#m)
                move 'Y' to $ExitWhile
                break  !exit the "evaluate"
              end-if
            end-if
          end-if
          add 1 to #m
        end-while
    end-evaluate
    if $ExitWhile = 'Y'
      break
    end-if
    add 1 to #k
  end-while
  evaluate $UpdateType
    when = 'ERNHR'
      array-add #Hours  to SUMarray(#k) EarnHours(#m)
    when = 'ERNGRS'
      array-add #Gross  to SUMarray(#k) EarnGross(#m)
    when = 'TAX'
      array-add #Tax to SUMarray(#k) TaxAmt
    when = 'DED'
      array-add #DedAmt to SUMarray(#k) DedAmt(#m)
  end-evaluate
end-procedure

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
#Include 'stdinit.sqc'   !Report Initialization and Timing
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
