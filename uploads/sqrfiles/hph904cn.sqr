!***********************************************************************
!  HPH904CN:   Extract CATS - PART-TIME DATA                           *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:13:21:05                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
! Extract PT Canadian Academic Teaching Survey data for submission to  *
! Statistics Canada.                                                   *
!                                                                      *
! Input: PS_HP_PT_SURVEY                                               *
!        PS_PT_APPNTMNT
!        PS_PERS_NID
!                                                                      *
! Output :  <user specify>                                             *
!                                                                      *
!***********************************************************************
!***********************************************************************
! This program is specific to HRMS for Education & Government          *
!***********************************************************************


#include 'setenv.sqc'     !Set environment
#include 'setup31.sqc'    !Printer and page-size initialization


begin-REPORT

  do Initialization
  do Open-File

  display 'Report began at: ' NoLine
  display &SysDateTime
  display ''

  do Process-Main

  close 1

  do Update-Rptng-Period-Table
  do Delete-Run-Control
  do Reset
  do StdAPI-Term

  display 'Report ended at: ' NoLine
  display &SysDateTime
  display ''

end-REPORT


!***********************************************************************
! INITIALIZATION
! Initializes variables.
!***********************************************************************
begin-procedure INITIALIZATION

  move 'HPH904CN' to $ReportID
  move 'Extract Canadian Academic Teaching Survey - Part-Time Data' to $ReportTitle

  display $ReportID     NoLine
  display ':'           NoLine
  display $ReportTitle
  display ' '

  do INIT-DATETIME
  do GET-CURRENT-DATETIME
  do STDAPI-INIT

  let #First = 1

  do SELECT-PARAMETERS               ! Get E&G parameters
  do SELECT-REPORT-PARAMETERS        ! Get StatsCan parameters
  do SETUP-VARIABLES

  move '          ' to $Blank
  move 0 to #NoofFTLine

end-procedure INITIALIZATION


!***********************************************************************
! MAINLINE
! This is the main procedure
!***********************************************************************
begin-procedure PROCESS-MAIN

  display 'Started Extracting PT Canadian Academic Teaching Survey Line Data .... '

  do EXTRACT-PT-SURVEY-LINE-DATA

  display 'Finished Extracting PT Canadian Academic Teaching Survey Line Data.'
  display ' '

  do Format-Number(#NoofPTLine, $out, '99,999,999')

  display 'Number of PT Survey line records: ' noline
  display $out
  display ' '

end-procedure PROCESS-MAIN


!***********************************************************************
! PROCESS SURVEY DATA
! Extracts the data from the survey tables
!***********************************************************************
begin-procedure EXTRACT-PT-SURVEY-LINE-DATA

  let $J_Prev_Emplid = ''

  let $err-statement1 = 'HPH904CN, Select Error - EXTRACT-PT-SURVEY-LINE-DATA'
  let $err-statement2 = 'Bind Variable: #CURRPT_YR: '||edit(#CurrRpt_Yr,'0000')

begin-SELECT On-Error=Error-Display
PTS.HP_STATS_CAN_YR,
PTS.HP_STATS_INSTN_CD,
PTS.SEX,
PTS.HP_YEAR_OF_BIRTH,
PTS.HP_BARGAIN_AGENT,
PTS.HP_STATS_DEG_LVL,
PTS.HP_HIGHEST_DEG_YR,
PTS.HP_TOTAL_APPNTMNTS,
PTA.EMPLID,
PTA.START_DT,
PTA.END_DT,
PTA.HP_PT_SALARY_PAID,
PTA.HP_APPTMNT_STATUS,
PTA.HP_PT_APPTMNT_TYPE,
PTA.HP_STATS_SUBJ_CD,
PTA.HP_TEACHING_LOAD,
PTA.HP_FTTE,
PER.NATIONAL_ID

   if &PTA.EMPLID <> $J_Prev_Emplid

      if #First

         let #First = 0

      else

         do WRITE-PTS-TRANSACTIONS

      end-if

      let $Emplid = substr(&PTA.EMPLID,1,9)
      do Format-Number( &PTS.HP_STATS_INSTN_CD, $Instn, '999999')
      let $DegLvl = substr(&PTS.HP_STATS_DEG_LVL,2,1)
      do Format-Number(&PTS.HP_YEAR_OF_BIRTH, $BirthYr, '9999')
      let $Agent = &PTS.HP_BARGAIN_AGENT
      do Format-Number(&PTS.HP_HIGHEST_DEG_YR, $DegYr, '9999')

      If &PTS.SEX = 'M'
         let $Gender = '1'
      Else
         let $Gender = '2'
      End-If

      do Format-Number(&PTS.HP_TOTAL_APPNTMNTS, $TotAppts, '09')
      let $SIN = substr(&PER.NATIONAL_ID,1,9)

      do SETUP-VARIABLES

   end-if

   if #Array < 5

      do Format-Number(&PTA.HP_PT_SALARY_PAID, $Salary, '099999')
      move &PTA.HP_APPTMNT_STATUS to $Status

      let $Start_Dt = &PTA.START_DT
      let $End_Dt = &PTA.END_DT

      do CONVERT-TO-DTU-DATE($Start_Dt,$Start_Dtu_Dt)
      do CONVERT-TO-DTU-DATE($End_Dt,$End_Dtu_Dt)

      let $StartYr = substr($Start_Dtu_Dt,3,2)
      let $StartMon = substr($Start_Dtu_Dt,6,2)
      let $EndYr = substr($End_Dtu_Dt,3,2)
      let $EndMon = substr($End_Dtu_Dt,6,2)

      let $Start_Date = $StartMon||$StartYr
      let $End_Date = $EndMon||$EndYr

      move &PTA.HP_PT_APPTMNT_TYPE  to $Type
      move &PTA.HP_STATS_SUBJ_CD    to $Subject
      do Format-Number(&PTA.HP_TEACHING_LOAD, $Load, '0.99')
      do Format-Number(&PTA.HP_FTTE, $FTTE, '0.99')

      let $Record = $Salary||$Status||$Start_Date||$End_Date||$Type||$Subject||$Load||$FTTE

      put $Record into TAA(#Array) TAA_Record

      let #Array = #Array + 1

   end-if

   let $J_Prev_Emplid =&PTA.EMPLID

 FROM PS_HP_PT_SURVEY PTS, PS_HP_PT_APPNTMNT PTA, PS_PERS_NID PER
WHERE PTS.HP_STATS_CAN_YR = #CurrRpt_Yr
  AND PTA.HP_STATS_CAN_YR = PTS.HP_STATS_CAN_YR
  AND PTA.EMPLID = PTS.EMPLID
  AND PER.EMPLID = PTS.EMPLID
  AND PER.COUNTRY = 'CAN'
  AND PER.NATIONAL_ID_TYPE = 'PR'
ORDER BY PTA.EMPLID ASC
end-SELECT

  if $J_Prev_Emplid <> ''
     do WRITE-PTS-TRANSACTIONS
  end-if

end-procedure EXTRACT-PT-SURVEY-LINE-DATA


!***********************************************************************
! WRITE FTS TRANSACITONS
! Writes the data to the output file.
!***********************************************************************
begin-procedure WRITE-PTS-TRANSACTIONS

  get $Appt1 from TAA(0) TAA_Record
  get $Appt2 from TAA(1) TAA_Record
  get $Appt3 from TAA(2) TAA_Record
  get $Appt4 from TAA(3) TAA_Record
  get $Appt5 from TAA(4) TAA_Record

  Write 1 from
         $Instn:6
         $SIN:9
         $Gender:1
         $BirthYr:4
         $Agent:1
         $DegLvl:1
         $DegYr:4
         $TotAppts:2
         $Appt1:27
         $Appt2:27
         $Appt3:27
         $Appt4:27
         $Appt5:27

  Add 1 to #NoofPTLine


  do UPDATE-PT-SURVEY-DATA

end-procedure WRITE-PTS-TRANSACTIONS

!***********************************************************************
! UPDATE SURVEY DATA with a last reported date
! Updates the survey data with a last reported date for those records used to
! create the flat file.
!***********************************************************************
begin-procedure UPDATE-PT-SURVEY-DATA


  let $err-statement1 = 'HPH904CN, Select Error - UPDATE-PT-SURVEY-DATA'
  let $err-statement2 = 'Bind Variable: #CURRPT_YR: '||edit(#CurrRpt_Yr,'0000') || ' $J_Prev_Emplid: '
                         || $J_Prev_Emplid

begin-SQL On-Error=Error-Display
 UPDATE PS_HP_PT_SURVEY
  SET HP_LAST_DT_RPRTED = $AsOfToday
 WHERE HP_STATS_CAN_YR = #CurrRpt_Yr
   AND EMPLID = $J_Prev_Emplid
end-SQL

end-procedure UPDATE-PT-SURVEY-DATA


!***********************************************************************
! GET-PARAMETER-VALUES
! Gets the run control parameters
!***********************************************************************
begin-procedure GET-PARAMETER-VALUES

  do CONVERT-TO-DTU-DATE($PT_Rpt_Start_Dt,$PT_Start_Dtu_Dt)
  do CONVERT-TO-DTU-DATE($PT_Rpt_End_Dt,$PT_End_Dtu_Dt)

  do DTU-PARSE-DATE($PT_Start_Dtu_Dt,#dtu_yr, #dtu_mo, #dtu_da)
  let #CurrRpt_Yr = #dtu_yr
  display #CurrRpt_Yr

  let $Year_Head = 'Reporting Year ' || edit(#dtu_yr,'0000')
  display $Year_Head

  let $Date_Head = 'From ' || $PT_Start_Dtu_Dt || ' To ' || $PT_End_Dtu_Dt
  display $Date_Head

end-procedure GET-PARAMETER-VALUES


!***********************************************************************
!SETUP VARIABLES
!***********************************************************************
begin-procedure SETUP-VARIABLES

  if #First_Row
     create-array name=TAA size=5
        field=TAA_Record:char
  end-if

  clear-array name=TAA
  let #Array = 0

end-procedure SETUP-VARIABLES


!***********************************************************************
!GET VALUES
!***********************************************************************
BEGIN-PROCEDURE Get-Values
END-PROCEDURE Get-Values


!***********************************************************************
!OPEN FILE
!Opens the output file
!***********************************************************************
begin-procedure OPEN-FILE

  !************************************************************
  !  CODE INSERTED TO ACCEPT INTERNAL EXPORT FILE NAME
  !  {IMPORTPREFIX} is defined in setenv.sqc
  !************************************************************

  let $Runctl_PT_FileName = ltrim(rtrim($Runctl_PT_FileName, ' '), ' ')
  let $OpenName = '{IMPORTPREFIX}' || $Runctl_PT_FileName || '.DAT'

  open $OpenName as 1 for-writing record=163:fixed Status=#filestat

  display 'Output File : ' noline
  display $OpenName
  display ' '
  display 'File Status : ' noline
  display #filestat

end-procedure OPEN-FILE


!***********************************************************************
! DELETE RUN CONTROL
! Deletes run control information from run control table.
!***********************************************************************
begin-procedure DELETE-RUN-CONTROL

  let $err-statement1 = 'HPH904CN, Delete Error - DELETE-RUN-CONTROL'
  let $err-statement2 = 'Bind Variables: $PRCS_OPRID: '||$Prcs_OprID||
                        ', $PRCS_RUN_CNTL_ID: '||$Prcs_Run_Cntl_ID

begin-SQL On-Error=Error-Display
DELETE FROM PS_RUN_CNTL_EG
WHERE OPRID       = $Prcs_OprID
  AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-SQL

end-procedure


!***********************************************************************
! SQCs                                                                 *
!***********************************************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Date math routine
#Include 'number.sqc'    !Routines to format numbers
#Include 'stderror.sqc'  !Routine for error display.
#Include 'hprnctl1.sqc'  !Routine for EG parameters
#Include 'egrnctl1.sqc'  !Get E&G run control parameters
