!**********************************************************************!
!  gpussm1a:  Selected State(s) W-2 Audit Report                       !
!**********************************************************************!
!                                                                      !
!               Confidentiality Information:                           !
!                                                                      !
!                                                                      !
! This module contains confidential and proprietary information        !
! of Oracle; it is not to be copied, reproduced, or transmitted        !
! in any form, by any means, in whole or in part, nor is it to         !
! be used for any purpose other than that for which it is              !
! expressly provided under the applicable license agreement.           !
!                                                                      !
! Copyright (C) 2006 Oracle. All Rights Reserved.                      !
!                                                                      !
!**********************************************************************!
!                                                                      !
!          $Date:  2006/07/21:01:57:27                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      !
!**********************************************************************!

#include 'setenv.sqc'  !Set environment
#include 'setup32.sqc' !Printer and page-size initialization

Begin-Report
  do Init-Report
  do Select-Reports
  do Stdapi-Term
End-Report

Begin-Procedure Init-Report
  do Init-DateTime
  do Init-Number
     display 'Report SM1C'
  do Stdapi-Init
  do Initialization
End-Procedure

Begin-Procedure Initialization
  display ''
  display 'Selected State(s) W-2 Audit Report '
  display ' '
  move 'GPUSSM1A' to $ReportID
  do Get-Current-DateTime

  If $Prcs_Process_Instance = ''
    Display 'Report cannot be run outside of PeopleSoft, please use process scheduler.'
    Stop
  End-if

  do Convert-Parameters

  move '' to $ErName
End-Procedure

Begin-Procedure Select-Reports

#ifdef USA
  move 'USA' to $Country
#endif

Begin-Select
F.STATE       () on-break print=never before=Before-State
                                       after=After-State
F.DESCR

  let $ProcState = rtrim(&F.STATE, ' ')
  if #filestat <> -1
     do Read-Tape-File
  end-if

FROM PS_GPUS_MMREFST_VW  F
End-Select
End-Procedure

Begin-Procedure Before-State

  let $WRecordFound = 'N'
  let $ORecordFound = 'N'
  let $SRecordFound = 'N'
  let $TRecordFound = 'N'
  let $FRecordFound = 'N'
  let $State = rtrim(&F.STATE, ' ')
  let $FileIn = 'GPUS_SM1_C' || $State
  let $StateName = rtrim(&F.DESCR, '  ')
  let $ReportTitle = 'W-2 Audit Report - ' || $StateName

  move 'Y' to $State-Process
  do Open-File

End-Procedure

Begin-Procedure After-State
 if #filestat <> -1
  if $TotalsOnly <> 'N'
    if $SRecordFound = 'Y'
      if $TRecordFound <> 'Y'
        do Print-Employer-Totals
      end-if
    end-if

    if $SRecordFound = 'Y'
      if $FRecordFound <> 'Y'
        do Print-File-Totals
      end-if
    end-if
  else
    if $State-Process = 'Y'
      do Print-Employer-Totals
      do Print-File-Totals
    end-if
  end-if

  if #filestate = 0
  end-if
 end-if
End-Procedure

Begin-Procedure Open-File

  #ifdef NT
  #define FILEPATH files\
  #end-if

  #ifdef UNIX
  #define FILEPATH files/
  #end-if

  Let $prcs_path = $prcsoutputdir
  Let #st = 1
  Find  'log_output'  In  $prcs_path  #st   #Loc
  Let #Len = Length($prcs_path )
  Let $Str1= Substr($prcs_path, 0, #Loc)
  Let $Str2=  $Str1 || '{FILEPATH}'
  Let $FileID = $Str2 || $FileIn
  open $FileID as 1 for-reading record=512
    status=#filestat
  if #filestat != 0
    display $FileID noline
    display ' not found '
  else
    display 'Processing ' noline
    display  $StateName
  end-if
End-Procedure

Begin-Procedure Process-RA-Record

  if $ErName <> ''
    if $TotalsOnly = 'N'
      new-page
      move ' ' to $Col1Hdr1
      move ' ' to $Col2Hdr1
      move ' ' to $Col3Hdr1
      move ' ' to $Col4Hdr1
      move ' ' to $Col5Hdr1
      move ' ' to $Col6Hdr1
      move ' ' to $Col7Hdr1
      move ' ' to $Col1Hdr2
      move ' ' to $Col2Hdr2
      move ' ' to $Col3Hdr2
      move ' ' to $Col4Hdr2
      move ' ' to $Col5Hdr2
      move ' ' to $Col6Hdr2
      move ' ' to $Col7Hdr2
    end-if
  end-if

  do Print-RA-Record
End-Procedure


Begin-Procedure Process-RW-Record
  do Print-RW-Record
  let $WRecordFound = 'Y'
End-Procedure





Begin-Procedure Process-RE-Record
  if $SRecordFound = 'Y'
     if $TRecordFound <> 'Y'
        do Print-Employer-Totals
     end-if
  end-if
  if $ErName <> ''
    if $TotalsOnly = 'N'
      new-page
      move ' ' to $Col1Hdr1
      move ' ' to $Col2Hdr1
      move ' ' to $Col3Hdr1
      move ' ' to $Col4Hdr1
      move ' ' to $Col5Hdr1
      move ' ' to $Col6Hdr1
      move ' ' to $Col7Hdr1
      move ' ' to $Col1Hdr2
      move ' ' to $Col2Hdr2
      move ' ' to $Col3Hdr2
      move ' ' to $Col4Hdr2
      move ' ' to $Col5Hdr2
      move ' ' to $Col6Hdr2
      move ' ' to $Col7Hdr2
    end-if
  end-if

  next-listing  NEED = 24
  do Print-RE-Record

  if $TotalsOnly = 'N'
    move $ErName              to $Employer
    new-page
    if $State = 'IN'
      move '           '      to $Col1Hdr1
      move 'Name  '           to $Col1Hdr2
      move '       '          to $Col2Hdr1
      move 'SSN'              to $Col2Hdr2
      move '                ' to $Col3Hdr1
      move '                ' to $Col4Hdr1
      move 'State Wages'   to $Col3Hdr2
      move 'State Taxes'   to $Col4Hdr2
      move '                  ' to $Col5Hdr1
      move '                  ' to $Col6Hdr1
      move '  County Wages' to $Col5Hdr2
      move '  County Taxes' to $Col6Hdr2
      move '                ' to $Col7Hdr1
      move '   Advance EIC  ' to $Col7Hdr2
    else
      if $State = 'OH'
        move '           '      to $Col1Hdr1
        move 'Name  '           to $Col1Hdr2
        move '       '          to $Col2Hdr1
        move 'SSN'              to $Col2Hdr2
        move '                ' to $Col3Hdr1
        move '                ' to $Col4Hdr1
        move 'State Wages'      to $Col3Hdr2
        move 'State Taxes'      to $Col4Hdr2
        move '                  ' to $Col5Hdr1
        move '                  ' to $Col6Hdr1
        move '  District Wages' to $Col5Hdr2
        move '  District Taxes' to $Col6Hdr2
        move '                ' to $Col7Hdr1
        move '                ' to $Col7Hdr2
        else
          move 'Last'             to $Col1Hdr1
          move 'Name'             to $Col1Hdr2
          move 'First'            to $Col2Hdr1
          move 'Name'             to $Col2Hdr2
          move 'Middle'           to $Col3Hdr1
          move 'Name'             to $Col3Hdr2
          move 'SSN'              to $Col4Hdr2
          move '              '   to $Col5Hdr1
          move '   State Wages'   to $Col5Hdr2
          move '              '   to $Col6Hdr1
          move '   State Taxes'   to $Col6Hdr2
          move '                ' to $Col7Hdr1
          move '                ' to $Col7Hdr2
      end-if
    end-if
  end-if
End-Procedure

Begin-Procedure Process-RS-Record
  do Print-RS-Record
  let $SRecordFound = 'Y'
  let $TRecordFound = 'N'
End-Procedure

Begin-Procedure Process-RO-Record
  do Print-RO-Record
  let $ORecordFound = 'Y'
End-Procedure

Begin-Procedure Process-Employer-Record
  do Print-RE-Record
  if $TotalsOnly = 'N'
    move $ErName              to $Employer
    new-page
  end-if
End-Procedure

Begin-Procedure Process-RF-Record
  do Print-RF-Record
  let $FRecordFound = 'Y'
End-Procedure

Begin-Procedure Process-RU-Record
  do Print-RU-Record
End-Procedure

Begin-Procedure Process-RT-Record
  do Print-RT-Record
  let $TRecordFound = 'Y'
End-Procedure

Begin-Procedure Print-Employer-Totals
  move 'Y' to $TRecordFound
  if #T_StateWages <> 0
    or #T_StateTax <> 0
    print 'Employer Totals - Wages: ' (+2,1)
    print  #T_StateWages (0,26) edit 999,999,999.99   !State Taxable Wages

    print 'Taxes: ' (+1,19)
    print  #T_StateTax   (0,26) edit 999,999,999.99   !State Taxes

  end-if

  add #T_StateWages to #F_StateWages
  add #T_StateTax   to #F_StateTax
  add #T_LclWages   to #F_LclWages
  add #T_LclTax     to #F_LclTax
  add #T_StateEIC   to #F_StateEIC

  move 0 to #T_StateWages
  move 0 to #T_StateTax
  move 0 to #T_LclWages
  move 0 to #T_LclTax
  move 0 to #T_StateEIC

End-Procedure

Begin-Procedure Print-File-Totals
  print 'File Totals - Wages: ' (+2,1)
  print  #F_StateWages (0,26) edit 999,999,999.99   !State Taxable Wages
  print 'Taxes: ' (+1,15)
  print  #F_StateTax   (0,26) edit 999,999,999.99   !State Taxes
  if $CombineStateAndLocal  = 'Y'
    print 'Local Wages: ' (+1,13)
    print  #F_LclWages   (0,26) edit 999,999,999.99   !Local Wages

    print 'Local Tax:   ' (+1,13)
    print  #F_LclTax     (0,26) edit 999,999,999.99   !Local Taxes
    if $State = 'IN'
      print 'State EIC:   ' (+1,13)
      print  #F_StateEIC   (0,26) edit 999,999,999.99   !State EIC
    end-if
  end-if

   new-page
   let $flag = 'Y'
  move 0 to #F_StateWages
  move 0 to #F_StateTax
  move 0 to #F_LclWages
  move 0 to #F_LclTax
  move 0 to #F_StateEIC

  move '' to $ErName
End-Procedure

Begin-Procedure Print-RW-RO-Headings

  print 'SSN'                            (+2,1)
  print 'FWT Gross'                       (0,17)
  print 'FWT Tax'                         (0,35)
  print 'FICA Gross'                      (0,48)
  print 'FICA Tax'                        (0,66)
  print 'Medi Wages'                      (0,80)
  print 'Medi Tax'                        (0,98)
  print 'FICA Tips'                       (0,113)
  print 'EIC'                             (0,135)
  print 'Dpnd Care'                       (0,145)
  print '401k'                            (0,166)

  print '403b'                           (+1,26)
  print '408k6'                           (0,41)
  print '457b'                            (0,58)
  print '501c18d'                         (0,71)
  print 'Military'                        (0,86)
  print 'NQ 457 Y'                        (0,102)
  print 'NQ 457 N'                        (0,118)
  print 'GTL ER Cost'                     (0,131)
  print 'NS Stock Op'                     (0,147)
  print 'Thrd Pty Tax'                    (0,160)

  print 'Alloc TIPS '                    (+1,16)
  print 'Unc Tax TIPS'                    (0,30)
  print 'Med Sav Act'                     (0,47)
  print '408p Retire'                     (0,62)
  print 'Adopt Exp '                      (0,82)
  print 'Unc SS GTL'                      (0,96)
  print 'Unc Med GTL'                     (0,111)
  print 'Fed WG - PR'                     (0,127)
  print 'Comm - PR'                       (0,145)
  print 'Allow - PR'                      (0,159)

  print 'TIPS - PR'                      (+1,21)
  print 'Tot Comp-PR'                     (0,35)
  print 'Tax - PR'                        (0,54)
  print 'Retire - PR'                     (0,67)
  print 'Fed WG - TY'                     (0,83)
  print 'Fed TX - TY'                     (0,99)
  print '           '                     (0,115)
  print '           '                     (0,131)

  move '  ' to $FullLine
  print $FullLine                        (+1,180)

End-Procedure


Begin-Procedure Convert-Parameters
Begin-Select
RC.CALENDAR_YEAR
RC.GPUS_TOTALS_ONLY

FROM  PS_GPUS_RC_MMREF RC
WHERE RC.OPRID = $Prcs_OprID
  AND RC.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
End-Select

  move &RC.CALENDAR_YEAR           to $Cal_Year
  move &RC.GPUS_TOTALS_ONLY        to $TotalsOnly
End-Procedure




begin-heading 7
 print '            '    (1,1)
 print 'PeopleSoft'      ()          center
 print 'Report ID:  '    (+1,1)
 print $ReportID         ()
 uppercase $ReportTitle
 print $ReportTitle      ()          center
 let #RptCol = {ColR} - 2
 page-number             (0,#RptCol)  'Page No.  '
 print 'Run Date '       (+1,#RptCol)
 print $ReportDate       ()
 print 'Run Time '       (+1,#RptCol)
 print $ReportTime       ()
 IF $flag = 'Y'
  print 'Employer: '                      (4,1)
  print $ErName                           ()

 ELSE

  print 'Employer: '                      (4,1)
  print $ErName                           ()
  print $Col1Hdr1                         (+2,1)
  print $Col2Hdr1                         (0,27)
  print $Col3Hdr1                         (0,48)
  print $Col4Hdr1                         (0,69)
  print $Col5Hdr1                         (0,84)
  print $Col6Hdr1                         (0,106)
  print $Col7Hdr1                         (0,126)
  print $Col1Hdr2                         (+1,1)
  print $Col2Hdr2                         (0,27)
  print $Col3Hdr2                         (0,48)
  print $Col4Hdr2                         (0,69)
  print $Col5Hdr2                         (0,84)
  print $Col6Hdr2                         (0,106)
  print $Col7Hdr2                         (0,126)
  END-IF
  let $flag = 'N'
end-heading

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'gpusrdfl.sqc'  !Read state mag tape file
#Include 'stdapi.sqc'    !Update Process API

