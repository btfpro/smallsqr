!***********************************************************************
!  TAX962LC:  Selected Local(s) W-2 Audit Report                       *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2007/11/15:11:17:43                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  731474                                              !
!                                                                      *
!***********************************************************************
!                                                                      *
! Rimini Street Modification Log                                       *
!                                                                      *
!  08/05/2014   RSI-HCM103951 v1.0                                     *
!  Descr: Modified the SQR to read the .XLS file for Michigan, Detroit *
!         W-2 efiling mandatory                                        *
!         Modified the SQR to read W2REPORT file for Michigan, Flint   *
!         W-2 efiling mandatory                                        *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#include 'setup32.sqc' !Printer and page-size initialization
#Define Prgm_Ver       '1.0'   !Corresponds to Modification History above.                                             !RSI-HCM103951

begin-report
  Show 'TAX962LC.SQR - Version ' {Prgm_Ver}                                                                            !RSI-HCM103951
  Show '**************************************************'                                                            !RSI-HCM103951
  do Init-Report
  do Get-Transmitter
  do Select-Reports
  do Stdapi-Term
end-report

begin-procedure Init-Report
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Initialization
end-procedure

begin-procedure Initialization
  display ''
  display 'Selected State(s) W-2 Audit Report '
  display ' '
  move 'TAX962LC' to $ReportID
  do Get-Current-DateTime

  If $Prcs_Process_Instance = ''
    Display 'Report cannot be run outside of PeopleSoft, please use process scheduler.'
    Stop
  End-if

  do Select-US-Year-End-Parameters
  do Convert-Parameters

  move '' to $ErName
  let $TAX962LC = 'Y'
end-procedure

begin-procedure Select-Reports

#ifdef USA
  move 'USA' to $Country
#endif

  move &TX.Balance_Year to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

begin-SELECT
A.REG_SELECT_PROC
A.REPORTING_MEDIUM

  move &A.REG_SELECT_PROC to $Reg-Select-Process
  move &A.REPORTING_MEDIUM  to $FileType

FROM PS_RC_TAX960LC A
WHERE A.OPRID              = $Prcs_OprID
  AND A.RUN_CNTL_ID        = $Prcs_Run_Cntl_ID

end-SELECT

let $Local-Process = 'Y'
if $Reg-Select-Process = 'J'
  do Select-All-Agencies
end-if

if $Reg-Select-Process = 'A'
  do Select-Specific-Agencies
end-if

if $Reg-Select-Process = 'T'
  do Select-All-States
end-if

if $Reg-Select-Process = 'L'
  do Select-All-Locations
end-if

End-procedure

begin-procedure Select-All-Agencies

Begin-SELECT DISTINCT

B.W2_RPTG_AGENCY  () on-break print=never before=Before-State
                                      after=After-State

  let $W2_RPTG_AGENCY = rtrim(&B.W2_RPTG_AGENCY, ' ')
  if #filestat = 0
    if $FileType = 'D' and ($W2_RPTG_AGENCY <> 'READ' and
      $W2_RPTG_AGENCY <> 'STRA')
                                                                                                                        !RSI-HCM103951 Begin
      If $FileIn <> 'DET'
         do Read-Diskette-File
      Else
         do DTRT-Count
      End-If
                                                                                                                        !RSI-HCM103951 End
    else
                                                                                                                        !RSI-HCM103951 Begin
      If $FileIn ='DET'
        do DTRT-Count
      Else
        do Read-Tape-File
      End-If
                                                                                                                        !RSI-HCM103951 End
    end-if
  end-if

FROM PS_LOCAL_TAX_TBL2 B
WHERE B.W2_RPTG_AGENCY <> ' '
  AND B.EFFDT =
      (SELECT MAX(B1.EFFDT) FROM PS_LOCAL_TAX_TBL2 B1
       WHERE B1.STATE = B.STATE
       AND B1.LOCALITY = B.LOCALITY
       AND B1.EFFDT <= $AsOfDate)
ORDER BY B.W2_RPTG_AGENCY
end-SELECT

end-procedure

begin-procedure Select-Specific-Agencies

begin-SELECT

C.W2_RPTG_AGENCY  () on-break print=never before=Before-State
                                      after=After-State

  let $W2_RPTG_AGENCY = rtrim(&C.W2_RPTG_AGENCY, ' ')
  if #filestat = 0
    if $FileType = 'D' and ($W2_RPTG_AGENCY <> 'READ' and
      $W2_RPTG_AGENCY <> 'STRA')
                                                                                                                        !RSI-HCM103951 Begin
      If $FileIn <> 'DET'
         do Read-Diskette-File
      Else
         do DTRT-Count
      End-If
                                                                                                                        !RSI-HCM103951 End
    else
                                                                                                                        !RSI-HCM103951 Begin
      If $FileIn ='DET'
        do DTRT-Count
      Else
        do Read-Tape-File
      End-If
                                                                                                                        !RSI-HCM103951 End
    end-if
  end-if

FROM PS_RC_TAX960LC_AGE C
WHERE C.OPRID              = $Prcs_OprID
  AND C.RUN_CNTL_ID        = $Prcs_Run_Cntl_ID

ORDER BY C.W2_RPTG_AGENCY
end-SELECT

end-procedure
begin-procedure Select-All-States

begin-SELECT DISTINCT

D.W2_RPTG_AGENCY  () on-break print=never before=Before-State
                                      after=After-State

  let $W2_RPTG_AGENCY = rtrim(&D.W2_RPTG_AGENCY, ' ')
  if #filestat = 0
    if $FileType = 'D' and ($W2_RPTG_AGENCY <> 'READ' and
      $W2_RPTG_AGENCY <> 'STRA')
                                                                                                                        !RSI-HCM103951 Begin
      If $FileIn <> 'DET'
         do Read-Diskette-File
      Else
         do DTRT-Count
      End-If
                                                                                                                        !RSI-HCM103951 End
    else
                                                                                                                        !RSI-HCM103951 Begin
      If $FileIn ='DET'
        do DTRT-Count
      Else
        do Read-Tape-File
      End-If
                                                                                                                        !RSI-HCM103951 End
    end-if
  end-if

FROM PS_LOCAL_TAX_TBL2 D, PS_RC_TAX960LC_ST E
WHERE E.OPRID              = $Prcs_OprID
  AND E.RUN_CNTL_ID        = $Prcs_Run_Cntl_ID
  AND E.STATE              = D.STATE
  AND D.W2_RPTG_AGENCY <> ' '
  AND D.EFFDT =
      (SELECT MAX(D1.EFFDT) FROM PS_LOCAL_TAX_TBL2 D1
       WHERE D1.STATE = D.STATE
       AND D1.LOCALITY = D.LOCALITY
       AND D1.EFFDT <= $AsOfDate)
ORDER BY D.W2_RPTG_AGENCY

end-SELECT

end-procedure

begin-procedure Select-All-Locations

begin-SELECT DISTINCT

F.W2_RPTG_AGENCY  () on-break print=never before=Before-State
                                      after=After-State

  let $W2_RPTG_AGENCY = rtrim(&F.W2_RPTG_AGENCY, ' ')
  if #filestat = 0
    if $FileType = 'D' and ($FileIn <> 'READ' and
        $FileIn <> 'STRA')
                                                                                                                        !RSI-HCM103951 Begin
      If $FileIn <> 'DET'
         do Read-Diskette-File
      Else
         do DTRT-Count
      End-If
                                                                                                                        !RSI-HCM103951 End
    else
                                                                                                                        !RSI-HCM103951 Begin
      If $FileIn ='DET'
        do DTRT-Count
      Else
        do Read-Tape-File
      End-If
                                                                                                                        !RSI-HCM103951 End
    end-if
  end-if

FROM PS_LOCAL_TAX_TBL2 F, PS_RC_TAX960LC_JUR G
WHERE G.OPRID              = $Prcs_OprID
  AND G.RUN_CNTL_ID        = $Prcs_Run_Cntl_ID
  AND G.LOCALITY           = F.LOCALITY
  AND F.W2_RPTG_AGENCY     <> ' '
  AND F.EFFDT =
      (SELECT MAX(F1.EFFDT) FROM PS_LOCAL_TAX_TBL2 F1
       WHERE F1.STATE = F.STATE
       AND F1.LOCALITY = F.LOCALITY
       AND F1.EFFDT <= $AsOfDate)
ORDER BY F.W2_RPTG_AGENCY
end-SELECT

end-procedure

begin-procedure Before-State

  let $WRecordFound = 'N'
  let $ORecordFound = 'N'
  let $SRecordFound = 'N'
  let $TRecordFound = 'N'
  let $FRecordFound = 'N'

  if $Reg-Select-Process = 'J'
    let $FileIn = rtrim(&B.W2_RPTG_AGENCY, ' ')
  end-if

  if $Reg-Select-Process = 'A'
    let $FileIn = rtrim(&C.W2_RPTG_AGENCY, ' ')
  end-if

  if $Reg-Select-Process = 'T'
    let $FileIn = rtrim(&D.W2_RPTG_AGENCY, ' ')
  end-if

  if $Reg-Select-Process = 'L'
    let $FileIn = rtrim(&F.W2_RPTG_AGENCY, ' ')
  end-if

  if $FileIn > ' '
    let $ReportTitle = 'W-2 Audit Report - ' || $FileIn
    display 'Processing ' noline
    display  $FileIn
    display ' '

  !  Control printing of 'RW' Record during State processing.

     move 'Y' to $State-Process

    if $FileType = 'D' and ($FileIn <> 'READ' and
        $FileIn <> 'STRA')
      do Open-Diskette
    else
      if $FileType > ' '
        do Open-File
      else
        stop
      end-if
    end-if
  end-if
end-procedure

begin-procedure After-State
  if $TotalsOnly <> 'N'
    if $SRecordFound = 'Y'
      if $TRecordFound <> 'Y'
        do Print-Employer-Totals
      end-if
    end-if

    if $SRecordFound = 'Y'
      if $FRecordFound <> 'Y'
        do Print-File-Totals
      end-if
    end-if
  else
    if $State-Process = 'Y'
                                                                                                                       !RSI-HCM103951 Begin
      If $FileIn <> 'DET'
         do Print-Employer-Totals
         do Print-File-Totals
      End-If
                                                                                                                       !RSI-HCM103951 End
    end-if
  end-if

  if #filestate = 0
    new-page
  end-if
end-procedure

begin-procedure Open-Diskette
  let $TX.Company = rtrim(&TX.Company, ' ')                                                                            !RSI-HCM103951
  move 1 to #FileExtension
   move #FileExtension to $FileExtension 099
#ifdef OS400
   let $FileExtension = '(D' || $FileExtension || ')'
                                                                                                                        !RSI-HCM103951 Begin
   If $FileIn = 'DET'
      let $FileID = '{IMPORTPREFIX}' || $FileIn || $FileExtension || '_' || $TX.Company || '.XLS'
   Else
      If $FileIn = 'FLINT'
         let $FileID = '{IMPORTPREFIX}' || 'W2REPORT'|| $FileExtension
      Else
         let $FileID = '{IMPORTPREFIX}' || $FileIn || $FileExtension
      End-If
   End-If
                                                                                                                        !RSI-HCM103951 End
#else
                                                                                                                        !RSI-HCM103951 Begin
   If $FileIn = 'DET'
      let $FileID = '{IMPORTPREFIX}' || $FileIn || '.' || $FileExtension || '_' || $TX.Company || '.XLS'
   Else
      If $FileIn = 'FLINT'
         let $FileID = '{IMPORTPREFIX}' || 'W2REPORT' || '.' || $FileExtension
      Else
         let $FileID = '{IMPORTPREFIX}' || $FileIn || '.' || $FileExtension
      End-If
   End-If
                                                                                                                        !RSI-HCM103951 End
#endif
                                                                                                                        !RSI-HCM103951 Begin
  If $FileIn = 'DET'
     open $FileID as 1 for-reading record=512
     status=#filestat
  Else
     open $FileID as 1 for-reading record=512:fixed
     status=#filestat
  End-If
                                                                                                                        !RSI-HCM103951 End
  if #filestat != 0
    display $FileID noline
    display ' not found '
    display ' '
  else
                                                                                                                        !RSI-HCM103951 Begin
     If $FileIn <> 'DET'
        display $FileID noline
        display ' found '
        display ' '
     End-If
                                                                                                                        !RSI-HCM103951 End
  end-if
end-procedure

begin-procedure Open-File
                                                                                                                        !RSI-HCM103951 Begin
  If $FileIn = 'DET'
     let $TX.Company = rtrim(&TX.Company, ' ')
     let $FileID = '{IMPORTPREFIX}' || $FileIn || '_' || $TX.Company || '.XLS'
  Else
     If $FileIn = 'FLINT'
        let $FileID = '{IMPORTPREFIX}' || 'W2REPORT' || '{IMPORTSUFFIX}'
     Else
        let $FileID = '{IMPORTPREFIX}' || $FileIn || '{IMPORTSUFFIX}'
     End-If
  End-If
                                                                                                                        !RSI-HCM103951 End
  open $FileID as 1 for-reading record=512
    status=#filestat
  if #filestat != 0
    display $FileID noline
    display ' not found '
    display ' '
  else
                                                                                                                        !RSI-HCM103951 Begin
    If $FileIn <> 'DET'
         display $FileID noline
         display ' found '
         display ' '
     End-If
                                                                                                                        !RSI-HCM103951 End
  end-if
end-procedure
                                                                                                                        !RSI-HCM103951 Begin
!************************************************
! Procedure DTRT-Count
!************************************************
Begin-Procedure DTRT-Count
Begin-SELECT
Count(*) &ABC.Count

   Move &ABC.Count to $ABC.Count

FROM  PS_W2_COMPANY ABC
WHERE ABC.CALENDAR_YEAR = &TX.Balance_Year
End-Select
  move '0' to #DTRTFileNumber
  close 1
  do DTRT-CompanyName

End-Procedure DTRT-Count

!************************************************
! Procedure DTRT-CompanyName
!************************************************
Begin-Procedure DTRT-CompanyName
Begin-SELECT
XYZ.COMPANY

  let $TX.Company = rtrim(&XYZ.COMPANY, ' ')

 If $FileType = 'D'
    move 1 to #FileExtension
    move #FileExtension to $FileExtension 099
    #ifdef OS400
       let $FileExtension = '(D' || $FileExtension || ')'
       let $FileID = '{IMPORTPREFIX}' || $FileIn || $FileExtension || '_' || $TX.Company || '.XLS'
    #else
       let $FileID = '{IMPORTPREFIX}' || $FileIn || '.' || $FileExtension || '_' || $TX.Company || '.XLS'
    #endif
 Else
     let $FileID = '{IMPORTPREFIX}' || $FileIn || '_' || $TX.Company || '.XLS'
 End-If

 let #flexists = exists($FileID)
 If #flexists = 0
   open $FileID as 2 for-reading record=512
     status=#FileStatus
     If #FileStatus != 0
        display $FileID noline
        display ' not found'
     Else
        display $FileID noline
        display ' found'
        show ' '
     End-If
     do Read-DTRT-XLS-File
 End-If

FROM  PS_W2_COMPANY XYZ
WHERE XYZ.CALENDAR_YEAR = &TX.Balance_Year
End-Select

End-Procedure DTRT-CompanyName

!************************************************
! Procedure Read-DTRT-XLS-File
!************************************************
Begin-Procedure Read-DTRT-XLS-File

 read 2 into $CompanyHeaderDetails:300
 read 2 into $CompanyDetails:300
 move ' ' to $CompnayDataRecoord
 concat $CompanyDetails with $CompnayDataRecoord
 do Print-DTRT-XLS-File

End-Procedure Read-DTRT-XLS-File

!************************************************
! Procedure Print-DTRT-XLS-File
!************************************************
Begin-Procedure Print-DTRT-XLS-File
 let #DTRTFileNumber = #DTRTFileNumber + 1
 let $tab = chr(9)

 Unstring $CompnayDataRecoord By $tab Into $CompanyName $PaymentYear $SubmitterEIN $StreetNumber $StreetName $AddressLine2 $City $State $Zip $TotalEmployees $TotalDetroitTaxWithheld $TotalGrossWagesPaid $TotalLocalWagesPaid

 move $StreetNumber to $StreetNumber
 let $StreetNumber = rtrim($StreetNumber, ' ')
 let $StreetName = rtrim($StreetName, ' ')
 let $AddressLine2 = rtrim($AddressLine2, ' ')
 let $DeliveryAddress = $StreetNumber ||' ' || $StreetName

 If #DTRTFileNumber <> 1
    new-page
 End-if
 print 'Record ID' (+1,1)
 print 'Submitter EIN' (+2,1)
 print $SubmitterEIN (,20)
 print 'PIN' (+1,1)
 print 'Company Name' (+2,1)
 print $CompanyName (,19)
 print 'Location Address' (+1,1)
 print $AddressLine2 (,20)
 print 'Delivery Address' (+1,1)
 print $DeliveryAddress (,20)
 print 'City' (+1,1)
 print $City (,20)
 print 'State' (+1,1)
 print $State (,20)
 print 'Zip' (+1,1)
 print $Zip (,20)
 print 'Zip Extension' (+1,1)
 print 'Country Code' (+1,1)
 print 'Submitter Name' (+2,1)
 print $CompanyName (,19)
 print 'Location Address' (+1,1)
 print $AddressLine2 (,20)
 print 'Delivery Address' (+1,1)
 print $DeliveryAddress (,20)
 print 'City' (+1,1)
 print $City (,20)
 print 'State' (+1,1)
 print $State  (,20)
 print 'Zip' (+1,1)
 print $Zip (,20)
 print 'Zip Extension' (+1,1)
 print 'Country Code' (+1,1)
 print 'Contact Name' (+2,1)
 print 'Contact Phone' (+1,1)
 print 'Contact Extension' (+1,1)
 print 'Contact E-Mail' (+1,1)
 print 'Contact Fax' (+1,1)
 do DTRT-Emp-Details
 do Print-DTRT-Employer-Totals
 do Print-DTRT-File-Totals

End-Procedure Print-DTRT-XLS-File

!************************************************
! Procedure DTRT-Emp-Details
!************************************************
Begin-Procedure DTRT-Emp-Details

If $TotalsOnly = 'N'
   new-page
   If $Reg-Select-Process <> 'J'
      print 'Last' (0,1)
      print 'First'(,27)
      print 'Middle'(,48)
      print ' ' (,69)
      print 'Locality' (,84)
      print '   Local Wages' (,105)
      print '   Local Taxes' (,126)
      print 'Name'(+1,1)
      print 'Name'(,27)
      print 'Name'(,48)
      print 'SSN'(,69)
      print ' '(+1,1
   End-If
End-If

 let #LocalWages = 0
 let #LocalTax = 0

 read 2 into $EmployeeHeaderDetails:400
 While 1 = 1
    read 2 into $EmplDetails:400
    If #end-file = 1
       break  !exit the "while"
    End-If
    move ' ' to $EmplDataDetails
    concat $EmplDetails with $EmplDataDetails

    Unstring $EmplDataDetails By $tab Into $LastName $FirstName $MiddleName $SSN $StreetNo $StreetName $AddressLine2 $City $State $Zip $DetroitTax $GrossWages $LocalWagesPaid

    If $TotalsOnly = 'N'
      print $LastName (+1,1)
      print $FirstName (,27)
      print $MiddleName (,48)
      print $SSN (,69)
      print $LocalWagesPaid (,106) edit 999,999,999.99
      print $DetroitTax (,126) edit 999,999,999.99
    End-If
    let #LocalWagesPaid = $LocalWagesPaid
    let #DetroitTax = $DetroitTax
    let #LocalWages = #LocalWages + #LocalWagesPaid
    let #LocalTax = #LocalTax + #DetroitTax
 End-While
 close  2

End-Procedure DTRT-Emp-Details

!************************************************
! Procedure Print-DTRT-File-Totals
!************************************************
Begin-Procedure Print-DTRT-File-Totals

  print 'File Totals - Wages: ' (+2,1)
  print 'Local Wages: ' (+1,13)
  print  #LocalWages   (0,36) edit 999,999,999.99
  print 'Local Tax:   ' (+1,13)
  print  #LocalTax     (0,36) edit 999,999,999.99

End-Procedure Print-DTRT-File-Totals

!************************************************
! Procedure Print-DTRT-Employer-Totals
!************************************************
Begin-Procedure Print-DTRT-Employer-Totals

    print 'Employer Totals - Wages: ' (+2,1)
    print  $TotalLocalWagesPaid (0,33) edit 99,999,999,999.99
    print 'Taxes: ' (+1,19)
    print  $TotalDetroitTaxWithheld (0,36) edit 999,999,999.99

End-Procedure Print-DTRT-Employer-Totals
                                                                                                                       !RSI-HCM103951 End
begin-procedure Process-RA-Record

  if $ErName <> ''
    if $TotalsOnly = 'N'
      new-page
      move ' ' to $Col1Hdr1
      move ' ' to $Col2Hdr1
      move ' ' to $Col3Hdr1
      move ' ' to $Col4Hdr1
      move ' ' to $Col5Hdr1
      move ' ' to $Col6Hdr1
      move ' ' to $Col7Hdr1
      move ' ' to $Col1Hdr2
      move ' ' to $Col2Hdr2
      move ' ' to $Col3Hdr2
      move ' ' to $Col4Hdr2
      move ' ' to $Col5Hdr2
      move ' ' to $Col6Hdr2
      move ' ' to $Col7Hdr2
    end-if
  end-if

  do Print-RA-Record
end-procedure

begin-procedure Process-RW-Record
  do Print-RW-Record
  let $WRecordFound = 'Y'
end-procedure

begin-procedure Process-RE-Record

  if $SRecordFound = 'Y'
     if $TRecordFound <> 'Y'
        do Print-Employer-Totals
     end-if
  end-if

  if $ErName <> ''
    new-page
    if $TotalsOnly = 'N'
      move ' ' to $Col1Hdr1
      move ' ' to $Col2Hdr1
      move ' ' to $Col3Hdr1
      move ' ' to $Col4Hdr1
      move ' ' to $Col5Hdr1
      move ' ' to $Col6Hdr1
      move ' ' to $Col7Hdr1
      move ' ' to $Col1Hdr2
      move ' ' to $Col2Hdr2
      move ' ' to $Col3Hdr2
      move ' ' to $Col4Hdr2
      move ' ' to $Col5Hdr2
      move ' ' to $Col6Hdr2
      move ' ' to $Col7Hdr2
    end-if
  end-if

  next-listing  NEED = 24
  do Print-RE-Record

  if $TotalsOnly = 'N'
    move $ErName              to $Employer
    new-page
    if $State = 'IN'
      move '           '      to $Col1Hdr1
      move 'Name  '           to $Col1Hdr2
      move '       '          to $Col2Hdr1
      move 'SSN'              to $Col2Hdr2
      move '                ' to $Col3Hdr1
      move '                ' to $Col4Hdr1
      move 'Local Wages'   to $Col3Hdr2
      move 'Local Taxes'   to $Col4Hdr2
      move '                  ' to $Col5Hdr1
      move '                  ' to $Col6Hdr1
      move '  County Wages' to $Col5Hdr2
      move '  County Taxes' to $Col6Hdr2
      move '                ' to $Col7Hdr1
      move '   Advance EIC  ' to $Col7Hdr2
    else
      if $State = 'OH'
        move '           '      to $Col1Hdr1
        move 'Name  '           to $Col1Hdr2
        move '       '          to $Col2Hdr1
        move 'SSN'              to $Col2Hdr2
        move '                ' to $Col3Hdr1
        move '                ' to $Col4Hdr1
        move 'Local Wages'      to $Col3Hdr2
        move 'Local Taxes'      to $Col4Hdr2
        move '                  ' to $Col5Hdr1
        move '                  ' to $Col6Hdr1
        move '  District Wages' to $Col5Hdr2
        move '  District Taxes' to $Col6Hdr2
        move '                ' to $Col7Hdr1
        move '                ' to $Col7Hdr2
        else
          move 'Last'             to $Col1Hdr1
          move 'Name'             to $Col1Hdr2
          move 'First'            to $Col2Hdr1
          move 'Name'             to $Col2Hdr2
          move 'Middle'           to $Col3Hdr1
          move 'Name'             to $Col3Hdr2
          move 'SSN'              to $Col4Hdr2
          move 'Locality      '   to $Col5Hdr1
          move '              '   to $Col5Hdr2
          move '   Local Wages'   to $Col6Hdr1
          move '              '   to $Col6Hdr2
          move '   Local Taxes  ' to $Col7Hdr1
          move '                ' to $Col7Hdr2
      end-if
    end-if
  end-if
end-procedure

begin-procedure Process-RS-Record
  do Print-RS-Record-for-Local
  let $SRecordFound = 'Y'
  let $TRecordFound = 'N'
end-procedure

begin-procedure Process-RO-Record
  do Print-RO-Record
  let $ORecordFound = 'Y'
end-procedure

begin-procedure Process-Employer-Record
  do Print-RE-Record
  if $TotalsOnly = 'N'
    move $ErName              to $Employer
    new-page
  end-if
end-procedure

begin-procedure Process-RF-Record
  do Print-RF-Record
  let $FRecordFound = 'Y'
end-procedure

begin-procedure Process-RU-Record
  do Print-RU-Record
end-procedure

begin-procedure Process-RT-Record
  do Print-RT-Record
  let $TRecordFound = 'Y'
end-procedure

begin-procedure Print-Employer-Totals

  move 'Y' to $TRecordFound
  if #T_StateWages <> 0
    or #T_StateTax <> 0
    or #T_LclWages <> 0
    or #T_LclTax   <> 0
    or #T_StateEIC <> 0

    print 'Employer Totals - Wages: ' (+2,1)
    print  #T_LclWages (0,33) edit 99,999,999,999.99   !Local Taxable Wages

    print 'Taxes: ' (+1,19)
    print  #T_LclTax   (0,36) edit 999,999,999.99      !Local Taxes

  end-if

  add #T_StateWages to #F_StateWages
  add #T_StateTax   to #F_StateTax
  add #T_LclWages   to #F_LclWages
  add #T_LclTax     to #F_LclTax
  add #T_StateEIC   to #F_StateEIC

  move 0 to #T_StateWages
  move 0 to #T_StateTax
  move 0 to #T_LclWages
  move 0 to #T_LclTax
  move 0 to #T_StateEIC

end-procedure

begin-procedure Print-File-Totals
  print 'File Totals - Wages: ' (+2,1)
  print 'Local Wages: ' (+1,13)
  print  #F_LclWages   (0,36) edit 999,999,999.99   !Local Wages

  print 'Local Tax:   ' (+1,13)
  print  #F_LclTax     (0,36) edit 999,999,999.99   !Local Taxes
  move 0 to #F_StateWages
  move 0 to #F_StateTax
  move 0 to #F_LclWages
  move 0 to #F_LclTax
  move 0 to #F_StateEIC
  move '' to $ErName
end-procedure

Begin-Procedure Print-RW-RO-Headings

  print 'SSN'                            (+2,1)
  print 'FWT Gross'                       (0,17)
  print 'FWT Tax'                         (0,35)
  print 'FICA Gross'                      (0,48)
  print 'FICA Tax'                        (0,66)
  print 'Medi Wages'                      (0,80)
  print 'Medi Tax'                        (0,98)
  print 'FICA Tips'                       (0,113)
  print 'EIC'                             (0,135)
  print 'Dpnd Care'                       (0,145)
  print '401k'                            (0,166)

  print '403b'                           (+1,26)
  print '408k6'                           (0,41)
  print '457b'                            (0,58)
  print '501c18d'                         (0,71)
  print 'Military'                        (0,86)
  print 'NQ 457 Y'                        (0,102)
  print 'NQ 457 N'                        (0,118)
  print 'GTL ER Cost'                     (0,131)
  print 'NS Stock Op'                     (0,147)
  print 'Thrd Pty Tax'                    (0,160)

  print 'Alloc TIPS '                    (+1,16)
  print 'Unc Tax TIPS'                    (0,30)
  print 'Med Sav Act'                     (0,47)
  print '408p Retire'                     (0,62)
  print 'Adopt Exp '                      (0,82)
  print 'Unc SS GTL'                      (0,96)
  print 'Unc Med GTL'                     (0,111)
  print 'Fed WG - PR'                     (0,127)
  print 'Comm - PR'                       (0,145)
  print 'Allow - PR'                      (0,159)

  print 'TIPS - PR'                      (+1,21)
  print 'Tot Comp-PR'                     (0,35)
  print 'Tax - PR'                        (0,54)
  print 'Retire - PR'                     (0,67)
  print 'Fed WG - TY'                     (0,83)
  print 'Fed TX - TY'                     (0,99)
  print '           '                     (0,115)
  print '           '                     (0,131)

  move '  ' to $FullLine
  print $FullLine                        (+1,180)

end-procedure

begin-procedure Get-Transmitter
begin-SELECT
TX.COMPANY, TX.BALANCE_YEAR

FROM PS_TAXRPT_RUNCTL TX
end-SELECT

begin-SELECT
X.DESCR

FROM  PS_W2_COMPANY X
WHERE COMPANY = &TX.Company
  AND X.CALENDAR_YEAR = &TX.Balance_Year
end-SELECT
  move &X.Descr to $TrName
end-procedure

begin-procedure Convert-Parameters

  move $RC_US_YE.Totals_Only to $TotalsOnly

Begin-Select

RC960.REPORTING_MEDIUM
RC960.DISKETTE_TYPE
RC960.EMPLR_PIN
RC960.RESUB_INDICATOR
RC960.RESUB_TLCN
RC960.CONTACT_NAME_SSA
RC960.TELEPHONE_NBR
RC960.PHONE_EXTN
RC960.EMAIL_ADDR_MMREF
RC960.CONTACT_FAX
RC960.NOTIFY_METHOD

FROM PS_TAX960_PARM RC960
End-Select

  if rtrim(&RC960.CONTACT_NAME_SSA, ' ') = ''
    Show 'Electronic Parameters must be set up on SETUP Menu.'
    Show 'Re-execute after establishing Electronic Parameters.'
    Stop
  End-if

  move &RC960.EMAIL_ADDR_MMREF to $RC960.EMAIL_ADDR
  uppercase $RC960.EMAIL_ADDR
end-procedure

#Include 'hdg962.sqc'    !Report and Column Headings
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'rdtap962.sqc'  !Read state mag tape file
#Include 'stdapi.sqc'    !Update Process API
#Include 'txrnctl2.sqc'  !US Year End Process Scheduler Run Controls
