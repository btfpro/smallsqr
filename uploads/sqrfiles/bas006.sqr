!*************************************
! BAS006: Missing Elections Report
!*************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                $Date:  2006/04/11:17:56:45                           
!             $Release:  HR9                                           
!            $Revision:  101                                           
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'  !Set Database Environment

Begin-Setup
  #Include 'ptpsp125.sqc'
End-Setup

#define col_name          23            !Name
#define col_emplid        10            !Employee Id
#define col_sched_id       6            !Schedule Id
#define col_ben_prog       3            !Benefit Program
#define col_date          10            !Date
#define col_deptid        10            !Department Id
#define col_dept_desc     10            !Department Description
#define col_location       8            !Location Id
#define col_location_desc 10            !Location Description
#define col_phone         12            !Telephone Number

#define col_sep            1            !Column Separator

!*************************************
Begin-Program
!*************************************

  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Process-Main

  display 'Report Ended at: ' noline
  do display-time

  do Reset
  do StdAPI-Term

End-Program

!*************************************
Begin-Procedure Init-Report
!*************************************

  do Init-DateTime
  do Get-Current-DateTime
  do StdAPI-Init

  let $ReportID = 'BAS006'
  do Get-Report-Language
  let $ReportTitle  = $BAS006-REPORTTITLE
  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

End-Procedure

!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BAS006 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('BAS006', 'REPORT_TITLE', $BAS006-REPORTTITLE, #CW)
  do Get_Field_Information ('BAS006', 'BEN',          $BAS006-BEN,         #CW)
  do Get_Field_Information ('BAS006', 'PGM',          $BAS006-PGM,         #CW)

  do Get_Field_Information ('BEN1',   'EMPLOYEE',     $BEN1-EMPLOYEE,      #CW)
  do Get_Field_Information ('BEN1',   'NAME',         $BEN1-NAME,          #CW)
  do Get_Field_Information ('BEN1',   'EVENT',        $BEN1-EVENT,         #CW)
  do Get_Field_Information ('BEN1',   'SCHED',        $BEN1-SCHED,         #CW)
  do Get_Field_Information ('BEN1',   'DEPARTMENT',   $BEN1-DEPARTMENT,    #CW)
  do Get_Field_Information ('BEN1',   'LOCATION',     $BEN1-LOCATION,      #CW)
  do Get_Field_Information ('BEN1',   'LOCTN',        $BEN1-LOCTN,         #CW)
  do Get_Field_Information ('BEN1',   'DATE',         $BEN1-DATE,          #CW)
  do Get_Field_Information ('BEN1',   'PHONE',        $BEN1-PHONE,         #CW)
  do Get_Field_Information ('BEN1',   'WORK',         $BEN1-WORK,          #CW)
  do Get_Field_Information ('BEN1',   'ID',           $BEN1-ID,            #CW)
  do Get_Field_Information ('BEN1',   'HOME',         $BEN1-HOME,          #CW)
  do Get_Field_Information ('BEN1',   'DESCR1',       $BEN1-DESCR1,        #CW)

End-Procedure



!*************************************
Begin-Procedure Ask-Values
!*************************************

 do Ask-Schedule-Id

End-Procedure

!*************************************
Begin-Procedure Get-Values
!*************************************

 do Select-Parameters
 do Get-Schedule-Id

End-Procedure

!*************************************
Begin-Heading 7
!*************************************

#Include 'stdhdgtr.sqc'

 print $BEN1-EMPLOYEE       (+2,1,{col_name})
 print $BEN1-EMPLOYEE       (0,+{col_sep},{col_emplid})
 print $BEN1-SCHED          (0,+{col_sep},{col_sched_id})
 print $BAS006-BEN          (0,+{col_sep},{col_ben_prog})
 print $BEN1-EVENT          (0,+{col_sep},{col_date})
 print $BEN1-DEPARTMENT     (0,+{col_sep},{col_deptid})
 print $BEN1-DEPARTMENT     (0,+{col_sep},{col_dept_desc})
 print $BEN1-LOCTN          (0,+{col_sep},{col_location})
 print $BEN1-LOCATION       (0,+{col_sep},{col_location_desc})
 print $BEN1-WORK           (0,+{col_sep},{col_phone})
 print $BEN1-HOME           (0,+{col_sep},{col_phone})

 print $BEN1-NAME           (+1,1,{col_name})
 print $BEN1-ID             (0,+{col_sep},{col_emplid})
 print $BEN1-ID             (0,+{col_sep},{col_sched_id})
 print $BAS006-PGM          (0,+{col_sep},{col_ben_prog})
 print $BEN1-DATE           (0,+{col_sep},{col_date})
 print $BEN1-ID             (0,+{col_sep},{col_deptid})
 print $BEN1-DESCR1         (0,+{col_sep},{col_location_desc})
 print $BEN1-ID             (0,+{col_sep},{col_location})
 print $BEN1-DESCR1         (0,+{col_sep},{col_location_desc})
 print $BEN1-PHONE          (0,+{col_sep},{col_phone})
 print $BEN1-PHONE          (0,+{col_sep},{col_phone})

 print '='              (+1,1,{col_name})                    Fill
 print '='              (0,+{col_sep},{col_emplid})          Fill
 print '='              (0,+{col_sep},{col_sched_id})        Fill
 print '='              (0,+{col_sep},{col_ben_prog})        Fill
 print '='              (0,+{col_sep},{col_date})            Fill
 print '='              (0,+{col_sep},{col_deptid})          Fill
 print '='              (0,+{col_sep},{col_dept_desc})       Fill
 print '='              (0,+{col_sep},{col_location})        Fill
 print '='              (0,+{col_sep},{col_location_desc})   Fill
 print '='              (0,+{col_sep},{col_phone})           Fill
 print '='              (0,+{col_sep},{col_phone})           Fill

End-Heading

!*************************************
Begin-Procedure Process-Main
!*************************************

Begin-Select

G.NAME                          (+1,1,{COL_NAME})
P.EMPLID                        (0,+{COL_SEP},{COL_EMPLID})
    move &P.EMPLID to $Emplid
P.SCHED_ID                      (0,+{COL_SEP},{COL_SCHED_ID})
P.BENEFIT_PROGRAM               (0,+{COL_SEP},{COL_BEN_PROG})
P.EVENT_DT
  do Format-DateTime(&P.Event_dt, $Out, {DEFDATE},'','')
  print $Out                    (0,+{col_sep},{col_date})
J.BUSINESS_UNIT
J.DEPTID                        (0,+{COL_SEP},{COL_DEPTID})
  if rtrim(&J.DeptID,' ') <> $DeptID
      or &J.BUSINESS_UNIT <> $BU
    let $BU = &J.BUSINESS_UNIT
    let $DeptID = rtrim(&J.DeptID,' ')
    do Get-Department-Name
  end-if
  print $DeptNameAbbrv          (0,+{COL_SEP},{COL_DEPT_DESC})
J.LOCATION                      (0,+{COL_SEP},{COL_LOCATION})
  if rtrim(&J.Location,' ') <> $Location
      or &J.BUSINESS_UNIT <> $Busunit
    let $Busunit = &J.BUSINESS_UNIT
    let $Recname = 'LOCATION_TBL'
    do Get-Setid($Busunit, $Recname, $Setid)
    let $Location = rtrim(&J.Location,' ')
    do Get-Location-Name
  end-if
  print $LocationAbbrv          (0,+{COL_SEP},{COL_LOCATION_DESC})
E.POSITION_PHONE                (0,+{COL_SEP},{COL_PHONE})
   do Get-Phone-Data
   print $Phone                 (0,+{COL_SEP},{COL_PHONE})

G.NAME_PSFORMAT

From PS_BAS_PARTIC    P,
     PS_PERSON_NAME   G,
     PS_PER_ORG_ASGN  E,
     PS_JOB           J

Where P.SCHED_ID LIKE $Sched_Id
And P.EVENT_STATUS   = 'O'
And P.PROCESS_IND    = 'N'
And P.BAS_PROCESS_STATUS = 'NT'
And G.EMPLID    = P.EMPLID
And E.EMPLID    = P.EMPLID
And J.EMPLID    = E.EMPLID
And J.EMPL_RCD = E.EMPL_RCD
And J.EFFDT = (SELECT MAX(J1.EFFDT)
                 From PS_JOB J1
                Where J1.EMPLID    = J.EMPLID
                  And J1.EMPL_RCD = J.EMPL_RCD
                  And J1.EFFDT    <= $AsOfToday)
And J.EFFSEQ = (SELECT MAX(J2.EFFSEQ)
                  From PS_JOB J2
                 Where J2.EMPLID    = J.EMPLID
                   And J2.EMPL_RCD = J.EMPL_RCD
                   And J2.EFFDT     = J.EFFDT)

Order by G.NAME_PSFORMAT ASC,
         P.EMPLID ASC,
         P.SCHED_ID ASC,
         P.EVENT_DT ASC

End-Select
End-Procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure



!***************************************
begin-procedure Get-Phone-Data
!***************************************!

  if rtrim($Emplid,' ') = ''
    move '' to $Phone
    goto GetPhoneExit
  end-if

begin-SELECT
PP.PHONE
FROM  PS_PERSONAL_PHONE PP
WHERE PP.EMPLID = $Emplid
  AND PP.PHONE_TYPE = 'MAIN'
end-SELECT

     let $Phone      = rtrim(&PP.Phone,' ')


GetPhoneExit:

end-procedure


!*************************************

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Format-DateTime
#Include 'getsetid.sqc'  !Get-Setid procedure
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getlocnm.sqc'  !Get-Location-Name procedure
#Include 'getsched.sqc'  !Ask-Schedule-Id Procedure

#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

!****************************** End Of Report *******************************

