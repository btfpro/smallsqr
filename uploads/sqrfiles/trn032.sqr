!************************************************************
!  Trn032:    EE Session Cost Summary                       *
!************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:45:28                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************


#include 'setenv.sqc' !Set environment
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

! Related language stuff
#define COURSE_TBL
#include 'rellang.sqc'
#define RELLANG_PROG

begin-REPORT
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Layout
  do Init-Report
!--ADDED FOR FIX 302027 STARTS
  do Find-Date-Format
!--ADDED FOR FIX 302027 ENDS
  do Process-Main
  do Stdapi-Term
end-REPORT

!***********************************************************************
! Init Report
!***********************************************************************

begin-procedure Init-Report

  move 'TRN032' to $ReportID

!--------COMMENTED FOR FIX 590517 STARTS
!  move 'EMPLOYEE SESSION COST SUMMARY' to $ReportTitle
!--------COMMENTED FOR FIX 590517 ENDS


  do Stdapi-Init

  let $language_cd = $CURR_LANGUAGE_CD
  let #TotCosts = 0

  if $prcs_process_instance = ''
      INPUT $EE 'Enter Employee ID : '
      INPUT $Course 'Enter Course : '
      INPUT $Session 'Enter Session : '
  else
    do Get-Values
  end-if

  do Init_Printer
  do Init_Report_Translation('TRAINING', $language_cd)

!--------COMMENTED FOR FIX 590517 STARTS  
!  do Append_Report_Translation('TRAINING')
!--------COMMENTED FOR FIX 590517 ENDS

!--------ADDED FOR FIX 590517 STARTS
   do Append_Report_Translation('TRN032')
   do Get_Field_Information ('TRN032', 'REPORT_TITLE',   $ReportTitle,   #dummy_width)
!--------ADDED FOR FIX 590517 ENDS

end-procedure

!--ADDED FOR FIX 302027 STARTS
begin-procedure Find-Date-Format

let $REC_FOUND = 'N'
begin-SELECT
A.USER_OPTION_VALUE
  let $REC_FOUND = 'Y'
FROM PSUSERPRSNLOPTN A

WHERE A.OPRID = $prcs_oprid
  AND A.USEROPTN = 'DFRMT'
end-SELECT

IF $REC_FOUND = 'N'
  let $DT_FMT = 'M'
ELSE
  LET $DT_FMT = &A.USER_OPTION_VALUE
  LET $DT_FMT = RTRIM($DT_FMT,' ')
END-If
 
end-procedure !Find-Date-Format
!--ADDED FOR FIX 302027 ENDS

!***********************************************************************
! Get Values
!***********************************************************************

begin-procedure Get-Values

begin-SELECT

RUN_CNTL_TRN032.EMPLID
RUN_CNTL_TRN032.COURSE
RUN_CNTL_TRN032.SESSION_NBR

  let $language_cd = $PRCS_LANGUAGE_CD

  let $EE = &RUN_CNTL_TRN032.EMPLID
  let $Course = &RUN_CNTL_TRN032.COURSE
  let $Session = &RUN_CNTL_TRN032.SESSION_NBR

FROM  PS_RUN_CNTL_TRN032 RUN_CNTL_TRN032

WHERE RUN_CNTL_TRN032.OPRID = $prcs_oprid
  AND RUN_CNTL_TRN032.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT

end-procedure Get-Values

!***********************************************************************
! Layout
!***********************************************************************

begin-procedure Init-Layout

#define col0  1
#define col1  20

end-procedure

!***********************************************************************
! Heading
!***********************************************************************

begin-heading  9

!--COMMENTED FOR FIX 302027 STARTS
!#include 'stdhdgtr.sqc'
!--COMMENTED FOR FIX 302027 ENDS
!--ADDED FOR FIX 302027 STARTS
  do Append_Report_Translation ('STDHDGTR')
  if $Program_Read = 'Y'
    do Get_Field_Information ('STDHDGTR', 'STDHDG_CO_NM',   $stdhdg_co_nm,   #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_REP_ID',  $stdhdg_rep_id,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_PAGE_NO', $stdhdg_page_no, #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_RUN_DT',  $stdhdg_run_dt,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_RUN_TM',  $stdhdg_run_tm,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_END_REP', $stdhdg_end_rep, #dummy_width)
  end-if

  print '            '    (1,1)
  print $stdhdg_co_nm     ()          center
  print $stdhdg_rep_id    (+1,1)
  print $ReportID         (0,+2)
!***********************************************************************
! T-MBOWDEN-5: not to uppercase due to languages other than English    *
!***********************************************************************
! uppercase $ReportTitle                                               *
  print $ReportTitle      ()          center
  let #RptCol = {ColR} - 2
  print $stdhdg_page_no   (0,#RptCol)
  print #page-count       (0,+2)      edit 88888888
  print $stdhdg_run_dt    (+1,#RptCol)
  let $RepDate = StrToDate($ReportDate,{PTRPTDATE})
    evaluate $DT_FMT
     when = 'M'
          do Format-DateTime($RepDate,$Rep_dt,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime($RepDate,$Rep_dt,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime($RepDate,$Rep_dt,{DEFYMD},'','')
          break
     end-evaluate
  print $Rep_dt           (0,+1) 
  print $stdhdg_run_tm    (+1,#RptCol)
  print $ReportTime       (0,+1)
!--ADDED FOR FIX 302027 ENDS

print $LBL_COURSE       (0,{col0})
print $Course           (0,{col1})
print $CourseDescr      (0,+1)
print $LBL_SESS_NUM     (+1,{col0}
print $Session          (0,{col1})
print $LBL_DATE         (+1,{col0})
print $st_date          (0,{col1})
print ' - '             (0,0)
print $end_date         (0,0)

end-heading

!***********************************************************************
! Main
!***********************************************************************

begin-procedure Process-Main

   do Get-Translat-Info   ! Global

   do Get-Session-Info
   do Get-EE-Name
   do Get-EE-Sal-Costs
   do Get-EE-Prov-Costs
   do Get-EE-Facil-Costs
   do Get-EE-Equip-Costs
   do Get-EE-Instr-Costs
   do Get-EE-Expn-Costs
   do Get-EE-SSExpn-Costs
   do Print-Total-Costs

end-procedure Process-Main

!***********************************************************************
!  Gets header information about the course session
!***********************************************************************

begin-procedure Get-Session-Info

begin-SELECT

CST.COURSE
CT.DESCR
CST.SESSION_NBR
CST.COURSE_START_DT
CST.COURSE_END_DT

  let $COURSE_TBL-DESCR = &CT.DESCR
  do Get_Related_COURSE_TBL(&CST.COURSE)

  let $Course = &CST.COURSE
  let $CourseDescr = $COURSE_TBL-DESCR
  let $Session = &CST.SESSION_NBR

!--COMMENTED FOR FIX 302027 STARTS
!  do Format-DateTime(&CST.COURSE_START_DT,$st_date,{DEFDATE},'','')
!  do Format-DateTime(&CST.COURSE_END_DT,$end_date,{DEFDATE},'','')
!--COMMENTED FOR FIX 302027 ENDS
!--ADDED FOR FIX 302027 STARTS
  evaluate $DT_FMT
     when = 'M'
          do Format-DateTime(&CST.COURSE_START_DT,$st_date,{DEFMDY},'','')
          do Format-DateTime(&CST.COURSE_END_DT,$end_date,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime(&CST.COURSE_START_DT,$st_date,{DEFDMY},'','')
          do Format-DateTime(&CST.COURSE_END_DT,$end_date,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime(&CST.COURSE_START_DT,$st_date,{DEFYMD},'','')
          do Format-DateTime(&CST.COURSE_END_DT,$end_date,{DEFYMD},'','')
     end-evaluate
!--ADDED FOR FIX 302027 ENDS

FROM   PS_CRSE_SESSN_TBL CST
      ,PS_COURSE_TBL     CT

WHERE  CST.COURSE = $Course
AND    CST.SESSION_NBR = $Session
AND    CT.COURSE = CST.COURSE

end-SELECT

end-procedure

!***********************************************************************
!  Get Employee Name
!***********************************************************************

begin-procedure Get-EE-Name

begin-SELECT
!*********************************Begin Name Change Format***************************
 !PD.NAME
PD.NAME_DISPLAY
!*********************************End Name Change Format***************************
  print $LBL_EMPLOYEE (0,{col0})
  print $EE           (0,{col1})
!*********************************Begin Name Change Format***************************
  !print &PD.NAME              (0,+2)
   print &PD.NAME_DISPLAY      (0,+2)
!*********************************End   Name Change Format***************************
FROM   PS_PERSON_NAME    PD

WHERE  PD.EMPLID = $EE

end-SELECT

end-procedure

!***********************************************************************
!  Get Salary Costs
!***********************************************************************

begin-procedure Get-EE-Sal-Costs

  print $LBL_SALARY            (+2,{col0})

begin-SELECT
EESAL.PER_EE_COST
EESAL.CURRENCY_CD

  print &EESAL.PER_EE_COST     (0,{col1}) edit 999999999.999

  let $CurrCd = &EESAL.CURRENCY_CD
  let #TotCosts = #TotCosts + &EESAL.PER_EE_COST

FROM   PS_TRN032_TAO   EESAL

WHERE  EESAL.EMPLID = $EE
AND    EESAL.COURSE = $Course
AND    EESAL.SESSION_NBR = $Session
AND    EESAL.COST_SOURCE = 'S'

end-SELECT

end-procedure

!***********************************************************************
!  Get Vendor Costs
!***********************************************************************

begin-procedure Get-EE-Prov-Costs

  print $LBL_VENDOR             (+1,{col0})

begin-SELECT
EEPROV.PER_EE_COST
EEPROV.CURRENCY_CD

  print &EEPROV.PER_EE_COST     (0,{col1}) edit 999999999.999

  let $CurrCd = &EEPROV.CURRENCY_CD
  let #TotCosts = #TotCosts + &EEPROV.PER_EE_COST

FROM   PS_TRN032_TAO   EEPROV

WHERE  EEPROV.EMPLID = $EE
AND    EEPROV.COURSE = $Course
AND    EEPROV.SESSION_NBR = $Session
AND    EEPROV.COST_SOURCE = 'P'

end-SELECT

end-procedure

!***********************************************************************
!  Get Facility Costs
!***********************************************************************

begin-procedure Get-EE-Facil-Costs

  print $LBL_FACILITY          (+1,{col0})

begin-SELECT
EEFAC.PER_EE_COST
EEFAC.CURRENCY_CD

  print &EEFAC.PER_EE_COST     (0,{col1}) edit 999999999.999

  let $CurrCd = &EEFAC.CURRENCY_CD
  let #TotCosts = #TotCosts + &EEFAC.PER_EE_COST

FROM   PS_TRN032_TAO   EEFAC

WHERE  EEFAC.EMPLID = $EE
AND    EEFAC.COURSE = $Course
AND    EEFAC.SESSION_NBR = $Session
AND    EEFAC.COST_SOURCE = 'F'

end-SELECT

end-procedure

!***********************************************************************
!  Get Equipment Costs
!***********************************************************************

begin-procedure Get-EE-Equip-Costs

  print $LBL_EQUIP            (+1,{col0})

begin-SELECT
EEEQ.PER_EE_COST
EEEQ.CURRENCY_CD

  print &EEEQ.PER_EE_COST     (0,{col1}) edit 999999999.999

  let $CurrCd = &EEEQ.CURRENCY_CD
  let #TotCosts = #TotCosts + &EEEQ.PER_EE_COST

FROM   PS_TRN032_TAO   EEEQ

WHERE  EEEQ.EMPLID = $EE
AND    EEEQ.COURSE = $Course
AND    EEEQ.SESSION_NBR = $Session
AND    EEEQ.COST_SOURCE = 'Q'

end-SELECT

end-procedure

!***********************************************************************
!  Get Instructor Costs
!***********************************************************************

begin-procedure Get-EE-Instr-Costs

  print $LBL_INSTR             (+1,{col0})

begin-SELECT
EEINS.PER_EE_COST
EEINS.CURRENCY_CD

  print &EEINS.PER_EE_COST     (0,{col1}) edit 999999999.999

  let $CurrCd = &EEINS.CURRENCY_CD
  let #TotCosts = #TotCosts + &EEINS.PER_EE_COST

FROM   PS_TRN032_TAO   EEINS

WHERE  EEINS.EMPLID = $EE
AND    EEINS.COURSE = $Course
AND    EEINS.SESSION_NBR = $Session
AND    EEINS.COST_SOURCE = 'I'

end-SELECT

end-procedure

!***********************************************************************
!  Get EE Expense Costs
!***********************************************************************

begin-procedure Get-EE-Expn-Costs

  print $LBL_EE_EXPN          (+1,{col0})

begin-SELECT
EEEX.PER_EE_COST
EEEX.CURRENCY_CD

  print &EEEX.PER_EE_COST     (0,{col1}) edit 999999999.999

  let $CurrCd = &EEEX.CURRENCY_CD
  let #TotCosts = #TotCosts + &EEEX.PER_EE_COST

FROM   PS_TRN032_TAO   EEEX

WHERE  EEEX.EMPLID = $EE
AND    EEEX.COURSE = $Course
AND    EEEX.SESSION_NBR = $Session
AND    EEEX.COST_SOURCE = 'X'

end-SELECT

end-procedure

!***********************************************************************
!  Get Session Expense Costs
!***********************************************************************

begin-procedure Get-EE-SSExpn-Costs

  print $LBL_SSN_EXPN           (+1,{col0})

begin-SELECT
EESSEX.PER_EE_COST
EESSEX.CURRENCY_CD

  print &EESSEX.PER_EE_COST     (0,{col1}) edit 999999999.999

  let $CurrCd = &EESSEX.CURRENCY_CD
  let #TotCosts = #TotCosts + &EESSEX.PER_EE_COST

FROM   PS_TRN032_TAO   EESSEX

WHERE  EESSEX.EMPLID = $EE
AND    EESSEX.COURSE = $Course
AND    EESSEX.SESSION_NBR = $Session
AND    EESSEX.COST_SOURCE = 'N'

end-SELECT

end-procedure

!***********************************************************************
!  Prints Total Costs
!***********************************************************************

begin-procedure Print-Total-Costs

  print $LBL_TOTAL         (+2,{col0})
  print #TotCosts          (0,{col1}) edit 999999999.999
  print $CurrCd            (0,+2)

end-procedure

!***********************************************************************
!  Gets the strings printed in this report (Globalization)
!***********************************************************************

begin-procedure Get-Translat-Info

!--------ADDED FOR FIX 590517 STARTS  
   do Append_Report_Translation('TRAINING')
!--------ADDED FOR FIX 590517 ENDS

   do Get_Field_Information('TRAINING', 'LBL_COURSE'      ,$LBL_COURSE       ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_SESS_NUM'    ,$LBL_SESS_NUM     ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_DATE'        ,$LBL_DATE         ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_EMPLOYEE'    ,$LBL_EMPLOYEE     ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_SALARY'      ,$LBL_SALARY       ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_VENDOR'      ,$LBL_VENDOR       ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_FACILITY'    ,$LBL_FACILITY     ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_EQUIPMENT'   ,$LBL_EQUIP        ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_INSTRUCTOR'  ,$LBL_INSTR        ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_EE_EXPENSE'  ,$LBL_EE_EXPN      ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_SESSION_EXPN',$LBL_SSN_EXPN     ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_TOTAL'       ,$LBL_TOTAL        ,#DW)

end-procedure

!***********************************************************************

#include 'hrrnctl1.sqc'  !Get run control parameter values

#include 'stdapi.sqc'    !Routines to update run status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
#Include 'datemath.sqc'

