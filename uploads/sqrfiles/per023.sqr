!***********************************************
!  PER023:  Salary History for Company         *
!***********************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/09/06:00:57:10                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689848                                              !
!                                                                      *
!***********************************************************************
! Implements row-level security via PS_FAST_SQR_SEC_VW in hrsecty.sqc  *
!***********************************************************************
#include 'setenv.sqc'     !Set environment
begin-setup
  #Include 'ptset02.sqc'   !Printer and page-size initialization
end-setup

#define DEPT_TBL
#define JOBCODE_TBL
#include "rellang.sqc"

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  if $prcs_oprid=''
    goto last2
  end-if
  
  do Process-Main
 
  do Reset
  do Stdapi-Term
LAST2:
end-report

begin-heading 7

do Get_Field_Information ('PER023',     'REPORT_TITLE', $REPORTTITLE,   #DW)
do Get_Field_Information ('HR',         'DEPARTMENT',   $DEPT,          #DW)
do Get_Field_Information ('HR',         'BUS_UNIT1X',   $BUS_UNIT1X,    #DW)
do Get_Field_Information ('HR',         'BUS_UNIT2',    $BUS_UNIT2,     #DW)

  #Include 'stdhtr08.sqc'

  LET $DEPT = $DEPT || ':'
  print $DEPT               (3,1)
  print $DeptID             (,+1)
  print $DEPT_TBL-DESCR     (,+2)

do Get_Field_Information ('PER023',     'CHANGE_AMT1',  $CHANGE1,       #DW)
do Get_Field_Information ('PER023',     'CHANGE_AMT2',  $CHANGE2,       #DW)
do Get_Field_Information ('PER023',     'CHANGE_PERCENT1',$PERCENT1,    #DW)
do Get_Field_Information ('PER023',     'CHANGE_PERCENT2',$PERCENT2,    #DW)
do Get_Field_Information ('HR',         'EMP_TYP1',     $EMP1,          #DW)
do Get_Field_Information ('HR',         'EMP_TYP2',     $EMP2,          #DW)
do Get_Field_Information ('HR',         'REG_TMP1',     $REG1,          #DW)
do Get_Field_Information ('HR',         'REG_TMP2',     $REG2,          #DW)


do Get_Field_Information ('HR',         'EMPL_NAME',    $NAME,          #DW)
do Get_Field_Information ('HR',         'EMPLID',       $EMPLID,        #DW)
do Get_Field_Information ('HR',         'HIRE_DT1',     $HIRE1,         #DW)
do Get_Field_Information ('HR',         'HIRE_DT2',     $HIRE2,         #DW)
do Get_Field_Information ('HR',         'EFFDT1',       $EFFDT1,        #DW)
do Get_Field_Information ('HR',         'EFFDT2',       $EFFDT2,        #DW)
do Get_Field_Information ('HR',         'JOBCODE1',     $JOB1,          #DW)
do Get_Field_Information ('HR',         'JOBCODE2',     $JOB2,          #DW)
do Get_Field_Information ('HR',         'JOBTITLE',     $JOBTITLE,      #DW)
do Get_Field_Information ('HR',         'GRADE1',       $GRADE1,        #DW)
do Get_Field_Information ('HR',         'GRADE2',       $GRADE2,        #DW)
do Get_Field_Information ('HR',         'CURRENCY_CD1', $CUR1,          #DW)
do Get_Field_Information ('HR',         'CURRENCY_CD2', $CUR2,          #DW)
do Get_Field_Information ('HR',         'ACTION',       $ACTION,        #DW)
do Get_Field_Information ('HR',         'COMPRATE',     $COMP,          #DW)
do Get_Field_Information ('HR',         'SUPERVISOR_NAME',$SUPER,       #DW)
do Get_Field_Information ('HR',         'FULL_PART_TM1',$FULL1,         #DW)
do Get_Field_Information ('HR',         'FULL_PART_TM2',$FULL2,         #DW)

  PRINT   $BUS_UNIT1X             (+3,1,48)
print   $EFFDT1                 (0,50,21)
PRINT   $EMP1                   (0,72,3)
PRINT   $REG1                   (0,76,3)
PRINT   $FULL1                  (0,80,4)
PRINT   $JOB1                   (0,85,17)
PRINT   $GRADE1                 (0,103,7)
 if #MultiCurr
    print $CUR1                 (0,111,35)
  end-if
PRINT   $CHANGE1                (0,147,7)
PRINT   $PERCENT1               (0,155)

  PRINT   $BUS_UNIT2              (+1,1,5)
PRINT   $NAME                   (0,7,30)
PRINT   $EMPLID                 (0,38,11)
PRINT   $EFFDT2                 (0,50,10)
print   $ACTION                 (0,61,10)
PRINT   $EMP2                   (0,72,3)
PRINT   $REG2                   (0,76,3)
PRINT   $FULL2                  (0,80,4)
PRINT   $JOB2                   (0,85,6)
PRINT   $JOBTITLE               (0,92,10)
PRINT   $GRADE2                 (0,103,7)
  if #MultiCurr
    print $CUR2                 (0,111,9)
  end-if
PRINT   $COMP                   (0,121,25)
PRINT   $CHANGE2                (0,147,7)
PRINT   $PERCENT2               (0,155,7)
PRINT   $SUPER                  (0,163)
end-heading


begin-procedure Init-Report

  move 'PER023' to $ReportID
  do Stdapi-Init
  if $prcs_oprid=''
    display ''
    display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
    display ''
    goto last1
  end-if

  if $prcs_process_instance = ''
    do Ask-From-Thru-Date
  else
    do Select-Parameters
  end-if
  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')
  LAST1:
end-procedure

begin-procedure Get-Values

   let $language_cd = $prcs_language_cd
   do Get-As-Of-Date
   do Get-From-Thru-Date
   do Get-PER023-Parm

end-procedure

begin-procedure Process-Main

  !Setup for row-level security...
  let $_TableAlias = 'B'
  do Security-Param

  if $language_cd = 'JPN'
    let $qualifier = 'A.NAME_AC'
  else
    let $qualifier = 'A.NAME'
  end-if

begin-SELECT
C.DEPTID                          ()     on-break print=never level=1 procedure=Dept-Change
  move &C.DeptID  to $DeptID

     let $DEPT_TBL-DESCR = &T.DESCR
     do Get_Related_DEPT_TBL($DeptID, &T.EFFDT, &C.SETID_DEPT)

C.BUSINESS_UNIT                   (+1,1,5) on-break level=2 skiplines=1
 let $BU = &C.BUSINESS_UNIT
A.NAME                            (0,7,30)  on-break level=2
A.EMPLID                          (0,38,11) on-break level=2
A.NAME_AC
C.EFFDT
  do Format-DateTime(&C.EffDt, $out, {DEFDATE}, '', '')
  print $out                      (0,50,10)
C.EFFSEQ
C.ACTION
  move 'ACTION'   to $FieldName
  move &C.Action  to $FieldValue
  do Read-Translate-Table
  print $XlatShortName            (0,61,10)
C.EMPL_TYPE                       (0,72,3)
C.REG_TEMP                        (0,76,3)
C.FULL_PART_TIME                  (0,80,4)
C.JOBCODE                         (0,85,6)
C.SETID_JOBCODE
C.SETID_DEPT

D.EFFDT
D.DESCRSHORT               &JOBCODE_TBL-DESCRSHORT

T.EFFDT
T.DESCR

  let $JOBCODE_TBL-DESCRSHORT = &JOBCODE_TBL-DESCRSHORT
  do Get_Related_JOBCODE_TBL(&D.EFFDT, &C.JOBCODE, &C.SETID_JOBCODE)

  print $JOBCODE_TBL-DESCRSHORT  (0,92,10)

C.SAL_ADMIN_PLAN                  (0,103) EDIT XXX/
C.GRADE                           ()
C.CURRENCY_CD
  if #MultiCurr
    print &C.Currency_Cd          (0,111,2)
  end-if
C.COMPRATE
  do Format-Number(&C.CompRate, $out, '999999999999.9999')
  print $out                      (0,114)
C.COMP_FREQUENCY                  (0,132,5)
C.CHANGE_AMT
  do Format-Number(&C.Change_Amt, $out, '999999999999.9999mi')
  print $out                      (0,138)
C.CHANGE_PCT
  do Format-Number(&C.Change_Pct, $out, '999.99mi')
  print $out                      (0,156)
B.EMPL_RCD
C.SUPERVISOR_ID
  move &C.Supervisor_ID to $EmplID
  do Get-Employee-Name
  do Rotate-Name
  print $LastName                 (0,163,13)
  if $show_comp = 'Y'
    move 'Y' to $firstcomp
    do Get-Compensation-Components
    position (+1)
  end-if

FROM  PS_PERSON_NAME A,
      PS_EMPLOYMENT B,
      PS_JOB C,
      PS_JOBCODE_TBL D,
      PS_DEPT_TBL T

WHERE A.EMPLID = B.EMPLID
  AND B.EMPLID = C.EMPLID
  AND B.EMPL_RCD = C.EMPL_RCD
  AND C.EFFDT BETWEEN $FromDate AND $ThruDate
  AND (C.CHANGE_PCT > 0
   OR C.ACTION = 'HIR'
   OR C.ACTION = 'REH')
  AND D.SETID = C.SETID_JOBCODE
  AND D.JOBCODE = C.JOBCODE
  AND D.EFFDT = (SELECT MAX(D2.EFFDT) FROM PS_JOBCODE_TBL D2 WHERE D.SETID = D2.SETID AND D.JOBCODE = D2.JOBCODE
                 AND D2.EFFDT <= C.EFFDT)
  AND T.SETID = C.SETID_DEPT
  AND T.DEPTID = C.DEPTID
  AND T.EFFDT = (SELECT MAX(T2.EFFDT) FROM PS_DEPT_TBL T2 WHERE T.SETID = T2.SETID AND T.DEPTID = T2.DEPTID
                 AND T2.EFFDT <= C.EFFDT)

  [$SecurityClauseWithERN]

ORDER BY C.DEPTID,C.BUSINESS_UNIT , [$qualifier],A.EMPLID,C.EFFDT
end-SELECT

end-procedure

begin-procedure Get-Compensation-Components

  do Get_Field_Information ('HR',         'COMP_COMPONENTS',      $COMPONENTS,    #DW)
  print $COMPONENTS            (+1,72,30)

begin-SELECT
D.COMP_EFFSEQ
D.COMP_RATECD
  if $firstcomp <> 'N'
    print &D.COMP_RATECD       (0,103)
    move 'N' to $firstcomp
  else
    print &D.COMP_RATECD       (+1,103,7)
  end-if
D.CURRENCY_CD                  (0,111,2)
D.COMPRATE
  do Format-Number(&D.CompRate, $out, '999999999999.9999')
  print $out                   (0,114)
D.COMP_FREQUENCY               (0,132,5)
D.CHANGE_AMT
  do Format-Number(&D.CHANGE_AMT, $out, '999999999999.9999mi')
  print $out                   (0,138)
D.CHANGE_PCT
  do Format-Number(&D.CHANGE_PCT, $out, '999.99mi')
  print $out                   (0,156)
FROM  PS_COMPENSATION D
WHERE D.EMPLID    = &A.EmplID
  AND D.EMPL_RCD = &B.EMPL_RCD
  AND D.EFFDT     = &C.Effdt
  AND D.EFFSEQ    = &C.Effseq
ORDER BY D.COMP_RATECD, D.COMP_EFFSEQ
end-SELECT
end-procedure

begin-procedure Dept-Change
  new-page
end-procedure

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askftd.sqc'    !From Thru Date input
#include 'hrsecty.sqc'   !Get SQR Security parameters

#Include 'getempnm.sqc'  !Get-Employee-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines to format datetimes
#Include 'number.sqc'    !Routine to format numbers
#include 'stdapi.sqc'    !Routine to update run status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
