!***********************************************************************
!  VC012:  Variable Compensation - TREE INCONSISTANCY REPORT           *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:56:21                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
!                                                                      *
! HP99999       Release 8                                              *
!***********************************************************************

#include 'setenv.sqc'    !Set environment

#define GB_GROUP_TBL
#define VC_PLAN_TBL

#Include 'rellang.sqc'

Begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report

  if $start-error <> 'Y'
    do Report
  end-if
  do Stdapi-Term
  do Reset
end-report

!********************************************
begin-procedure Init-Report
  move 'VCREPS' to $ReportID
  move 'Tree Inconsistency Report' to $ReportTitle
  display $ReportTitle
  display ' '
  do Stdapi-init
  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.

  display $reportid
  display 'lang - '
  display $language_cd

  if $prcs_process_instance = ''
     display 'This process cannot be run outside the Process scheduler'
     let $start_error = 'Y'
  else
     let $start_error = 'N'
     do Select-Parameters
  end-if
end-procedure

!*********************************************************************
begin-procedure select-parameters

#DEBUGx show 'select-parameters'

BEGIN-SELECT
A.OPRID
A.RUN_CNTL_ID
A.VC_PLAN_ID
A.VC_PAYOUT_PRD_ID
A.PRD_END_DT
A.TREE_NAME
A.VC_TREE_DT
A.VC_REPORT_TYPE
A.VC_PLAN_MEM_CRIT

from PS_RC_VC_REPORTS A
where A.OPRID       = $prcs_oprid and
      A.RUN_CNTL_ID = $prcs_run_cntl_id
end-select
end-procedure

!**************************************************************************
!    Report procedure
!**************************************************************************
begin-procedure Report
#DEBUGx show 'Report'

 Position (1,1)
 let $init_group = ''
Begin-Select
MD.GB_GROUP_ID,
MD.EMPLID,
MD.EMPL_RCD,
PD.NAME,
GT.DESCR,
VT.DESCR50

  do getrellang

  if &MD.GB_GROUP_ID <> $init_group
     position (+1)
     Print &MD.GB_GROUP_ID (,5)
     Print $GT_DESCR (,22)
     let $init_group = &MD.GB_GROUP_ID
  end-if

  do printrow

From PS_VC_PLAN_MEM MD,
     PS_VC_PLAN_TBL VT,
     PS_PERSON_NAME PD,
     PS_GB_GROUP_TBL GT
Where MD.VC_PLAN_ID = &A.VC_PLAN_ID AND
      VT.VC_PLAN_ID = &A.VC_PLAN_ID AND
      MD.VC_PAYOUT_PRD_ID = &A.VC_PAYOUT_PRD_ID AND
      NOT EXISTS (SELECT 'X' from PS_VC_TREE_ALND_VW TG
                                WHERE TG.TREE_NAME = &A.TREE_NAME AND
                                TG.TREE_EFFDT = &A.VC_TREE_DT AND
                                TG.GB_GROUP_ID = MD.GB_GROUP_ID) AND
      PD.EMPLID = MD.EMPLID and
      GT.GB_GROUP_ID = MD.GB_GROUP_ID
order by MD.GB_GROUP_ID

End-Select
end-procedure

!********************************************************
Begin-procedure getrellang

#DEBUGx show 'getrellang'

! Get Related Language info for PS_VC_PLAN_TBL
  move &VT.DESCR50 to $VC_PLAN_TBL-DESCR50
  do Get_Related_VC_PLAN_TBL(&A.VC_PLAN_ID)
  move  $VC_PLAN_TBL-DESCR50 to $VT_DESCR50


if rtrim(&A.VC_PLAN_MEM_CRIT,' ') = 'G' or rtrim(&A.VC_PLAN_MEM_CRIT,' ') = 'T'

begin-select
MAX(G2.EFFDT)  &G2_EFFDT=char
FROM PS_GB_GROUP_TBL G2
WHERE G2.GB_GROUP_ID = &MD.GB_GROUP_ID
AND   G2.EFFDT <= &A.PRD_END_DT
end-select
! Get Related Language info for PS_GB_GROUP_TBL
  move &GT.DESCR to $GB_GROUP_TBL-DESCR
  do Get_Related_GB_GROUP_TBL(&G2_EFFDT,&MD.GB_GROUP_ID)
  move $GB_GROUP_TBL-DESCR to $GT_DESCR

end-if
end-procedure

!********************************************************
Begin-procedure PrintRow

#DEBUGx show 'PrintRow'

  print &MD.EMPLID (,54)
  print &MD.EMPL_RCD (,68)
  print &PD.NAME (,80,44)
  position (+1)
end-procedure

!********************************************************
Begin-Heading 12

 Print $current-date (2,119) edit 'MM/DD/YYYY'

 Page-Number (1,119)

 Print $plan_id (4,2)

 let $plan_info =  &A.VC_PLAN_ID || ' ' || $VT_DESCR50

 Print $plan_info (4,22)
 Print $payout_prd_id (5,2)
 Print &A.VC_PAYOUT_PRD_ID (5,22)
 Print $reportname (2,30) center
 Print $tree_name (6,2)
 Print &A.TREE_NAME (6,22)
 Print $tree_date (7,2)
 Print &A.VC_TREE_DT (7,22) edit 'MM/DD/YYYY'

   Print $group (10,5)
   Print $emplid (10,54)
   Print $empl_rcd (10,68)
   Print $name (10,80)
End-Heading

!**************************************************************************
begin-procedure report-translation
!**************************************************************************
do Init_Report_Translation($ReportID,$Language_Cd)

do Get_Field_Information ('VCREPS','ACTUAL_AWARD',$actual_award,#DW)
do Get_Field_Information ('VCREPS','ACTUAL_FUNDING',$actual_funding,#DW)
do Get_Field_Information ('VCREPS','ANNUAL_RATE',$annual_rate,#DW)
do Get_Field_Information ('VCREPS','ATTAINED',$attained,#DW)
do Get_Field_Information ('VCREPS','VC_CARRYOVER_BAL',$carryover_balance,#DW)
do Get_Field_Information ('VCREPS','EMPLID',$emplid,#dw)
do Get_Field_Information ('VCREPS','EMPL_RCD',$empl_rcd,#DW)
do Get_Field_Information ('VCREPS','GROUP',$group,#DW)
do Get_Field_Information ('VCREPS','GROUP_GOALS',$group_goals,#DW)
do Get_Field_Information ('VCREPS','GUARANTEE',$guarantee,#DW)
do Get_Field_Information ('VCREPS','HIRE_DATE',$hire_date,#DW)
do Get_Field_Information ('VCREPS','JOB_CODE',$job_code,#DW)
do Get_Field_Information ('VCREPS','MAX_AWARD',$max_award,#DW)
do Get_Field_Information ('VCREPS','MIN/MAX',$minmax,#DW)
do Get_Field_Information ('VCREPS','MIN_AWARD',$min_award,#DW)
do Get_Field_Information ('VCREPS','NAME',$name,#DW)
do Get_Field_Information ('VCREPS','OVERALL_PERF_FACT',$overall_perf_factor,#DW)
do Get_Field_Information ('VCREPS','VC_PAYOUT_PRD_ID',$payout_prd_id,#DW)
do Get_Field_Information ('VCREPS','PERFORMACE_FACTOR',$parf_factor,#DW)
do Get_Field_Information ('VCREPS','PLAN ID',$plan_id,#DW)
do Get_Field_Information ('VCREPS','PROJECTED_PAYOUT',$projected_payout,#DW)
do Get_Field_Information ('VCREPS','VC_TARGET_AWARD',$target_award,#DW)
do Get_Field_Information ('VCREPS','VC_TARGET_VALUE',$target_value,#DW)
do Get_Field_Information ('VCREPS','TOTAL_PLAN',$total_plan,#DW)
do Get_Field_Information ('VCREPS','TOTAL_GROUP',$total_group,#DW)
do Get_Field_Information ('VCREPS','UNALLOCATED_BAL',$unallocated_balance,#DW)
do Get_Field_Information ('VCREPS','VALUATION',$valuation,#DW)
do Get_Field_Information ('VCREPS','VARIANCE',$variance,#DW)
do Get_Field_Information ('VCREPS','WEIGHTING',$weighting,#DW)
do Get_Field_Information ('VCREPS','DETAIL',$detail,#DW)
do Get_Field_Information ('VCREPS','SUMMARY',$summary,#DW)
do Get_Field_Information ('VCREPS','TREE_DATE',$tree_date,#DW)
do Get_Field_Information ('VCREPS','TREE_NAME',$Tree_name,#DW)
do Get_Field_Information ('VCREPS','VC012',$reportname,#DW)

end-procedure

!*****************************************************************
#include 'stdapi.sqc'    !Routine to update run Status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'
#include 'sqrtrans.sqc'
#Include 'getrplng.sqc'  !Get the report language
