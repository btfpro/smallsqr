!***********************************************************************
!  FPTrain.sqc:  This sqc is used in FPA300 and FPA305                 *
!       Calculation of the date of granting of tenure                  *
!        and of the end date of the probation period                   *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2006/07/19:12:56:49                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************


!***************************************************************
!
!
!       Va-Init
!       Reinitialization of the variables for each civil servant
!
!
!***************************************************************
BEGIN-PROCEDURE Va-Init

        let #Anc-Dy = 0           !Seniority
        let #Anc-Mn = 0
        let #Anc-Yr = 0
        let $Promo = 'N'          !Date of granting of tenure and end date of the probation period already calculated
        let #Anc-Dy-Last = 0      !Preceding seniority
        let #Anc-Mn-Last = 0
        let #Anc-Yr-Last = 0
        Let #i = 0                !100% Activity Indicator
        Let #Days-Num-Calc = 0    !Nber of days / months before the granting of tenure date
        Let #Pct-Tp-Last = 0      !Preceding Working time percentage
        Let $Calc-Beg-dt = ''     !Beginning date of calculation
        Let #Coeff-Last = 0       !Preceding Coeff
        Let $flag_calc_prom = 'N' !Modif JL on 15/06/98
                                  !Use of a flag for the calculation of
                                  !the end date of probation period
                                  !only once when seniority > probation duration

END-PROCEDURE  Va-Init



!***************************************************************
!
!
!       Search-First-Pos-Stat
!       Retrieve the last civil service position for the
!       preceding step if the end date
!       is greater than the begin date of the current step
!
!***************************************************************
BEGIN-PROCEDURE Search-First-Pos-Stat

#IFDEF DEBUGI
    display 'Search-First-Pos-Stat Beginning '
#ENDIF

let $sql-statement = 'FPA305.SQR,Select,Search-First-Pos-Stat'
BEGIN-SELECT On-Error=SQL-Error

{DATEOUT-PREFIX}A.EFFDT{DATEOUT-SUFFIX}         &Posit-Beg1
{DATEOUT-PREFIX}A.FP_FOREND_DT{DATEOUT-SUFFIX}  &ForEnd-dt1
{DATEOUT-PREFIX}A.FP_END_DT{DATEOUT-SUFFIX}     &End-dt1
B.FP_PROPD_BRK                                  &Break1

        do Convert-To-DTU-Date(&StepBeg_dt,$Posit-Beg)
        do Convert-To-DTU-Date(&ForEnd-dt1,$ForEnd-dt)
        do Convert-To-DTU-Date(&End-dt1,$End-dt)

        ! Value the Interruption Coefficient:
        ! If Interruption of the promotion period: 0% of activity
        ! else Coeff=100% of activity
        !---------------------------------------------------------
        if &Break = 'Y'
                let #Coeff = 0
        else
                let #Coeff = 100
        end-if

        #IFDEF DEBUGI
            display  'Search-Pos-Stat1 no agent :' noline
            display  &Emplid
            display  'search-pos-stat1 Beginning of position :' noline
            display  $Posit-Beg
            display  'Search-Pos-Stat1 Expected end date :' noline
            display  $ForEnd-dt
            display  'Search-Pos-Stat1 real end date :' noline
            display  $End-dt
            display  'Search-Pos-Stat1 Coeff :' noline
            display  #Coeff
        #ENDIF

        ! Calculate the end date of the position
        !---------------------------------------
        do Calc-Posit-End ($Posit-Beg,$End-dt,$ForEnd-dt,$Posit-End)

        #IFDEF DEBUGI
            Display '$Posit-End :' noline
            Display $Posit-End
        #ENDIF

        IF $Calc-Beg-dt = ''
                Let $Calc-Beg-dt = $Posit-Beg
        end-if

        ! If end of position > beginning of step
        ! Calculate seniority
        !---------------------------------------
        if $Posit-End > $Posit-Beg
                do Search-PTime
        else
                if $End-dt = ''
                    do Add-Date($Posit-Beg,10,0,0,$Posit-End )

                    #IFDEF DEBUGI
                        Display 'Expectation'
                        Display '$Posit-End :' noline
                        Display $Posit-End
                    #ENDIF

                    Let $Calc-Beg-dt = $Posit-Beg
                    do Search-PTime
                end-if
        end-if


from  PS_FPAEELEGALSTAT A, PS_FPMLEGALSTA_TBL B
     ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where A.EMPLID = &Emplid
and   A.EMPL_RCD = &Empl_rcd
and   A.EFFDT =
        (select max(EFFDT)
         from  PS_FPAEELEGALSTAT
         where EMPLID = &Emplid
         and   EMPL_RCD = &Empl_rcd
         and   FP_INST_STAT = 'R'
         and   EFFDT < {DATEIN-PREFIX}&StepBeg_dt{DATEIN-SUFFIX})
and   A.FP_LEGALSTAT_CD  = B.FP_LEGALSTAT_CD
and   A.FP_INST_STAT = 'R'                      !Occurrence Status: real
and   B.EFF_STATUS   = 'A'
and   B.EFFDT =
        (select max(EFFDT)
         from  PS_FPMLEGALSTA_TBL
         where FP_LEGALSTAT_CD = A.FP_LEGALSTAT_CD
         and   EFFDT <= A.EFFDT)

and   A.EMPLID = SCRTY.EMPLID       !
and   A.EMPL_RCD = SCRTY.EMPL_RCD   !SQR security
      [$SecurityClause]             !

order by A.EFFDT

END-SELECT

#IFDEF DEBUGI
    display 'Search-First-Pos-Stat End'
#ENDIF

END-PROCEDURE  Search-First-Pos-Stat



!***************************************************************
!
!
!       Search-Pos-Stat: Look for the civil service positions
!
!
!***************************************************************
BEGIN-PROCEDURE Search-Pos-Stat

#IFDEF DEBUGI
    display 'search-pos-stat Beginning'
#ENDIF

! Retrieve all the civil service positions for the current step
!--------------------------------------------------------------

let $sql-statement = 'FPA300.SQR,,Select,Search-Pos-Stat'
BEGIN-SELECT On-Error=SQL-Error

{DATEOUT-PREFIX}W.EFFDT{DATEOUT-SUFFIX} &Posit-Beg
{DATEOUT-PREFIX}W.FP_FOREND_DT{DATEOUT-SUFFIX} &ForEnd-dt
{DATEOUT-PREFIX}W.FP_END_DT{DATEOUT-SUFFIX} &End-dt
X.FP_TENPD_BRK      &Break

        do Convert-To-DTU-Date(&Posit-Beg,$Posit-Beg)
        do Convert-To-DTU-Date(&ForEnd-dt,$ForEnd-dt)
        do Convert-To-DTU-Date(&End-dt,$End-dt)

        let $Break = &Break

        ! Value the Interruption Coefficient:
        ! If Interruption of the granting tenure: Coeff=0% of activity
        ! else Coeff=100% of activity
        !-------------------------------------------------------------
        if $Break = 'Y'
                let #Coeff = 0
        else
                let #Coeff = 100
        end-if

        #IFDEF DEBUGI
            display  'Search-Pos-Stat no civil servant :'       noline
            display  &Emplid
            display  'search-pos-stat Beginning of position:'   noline
            display  $Posit-Beg
            display  'Search-Pos-Stat Expected end date :'      noline
            display  $ForEnd-dt
            display  'Search-Pos-Stat Real end date :'          noline
            display  $End-dt
            display  'Search-Pos-Stat Interruption :'           noline
            display  $Break
            display  'Search-Pos-Stat Coeff :'                  noline
            display  #Coeff
        #ENDIF

        !Calculate the end date of the position:
        !---------------------------------------
        do Calc-Posit-End ($Posit-Beg,$End-dt,$ForEnd-dt,$Posit-End)

        IF $Calc-Beg-dt = ''
                Let $Calc-Beg-dt = $Posit-Beg
        end-if

        do Search-PTime

from  PS_FPAEELEGALSTAT W, PS_FPMLEGALSTA_TBL X
     ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where W.EMPLID = &Emplid
and   W.EMPL_RCD = &Empl_rcd
and   W.EFFDT >= {DATEIN-PREFIX}&StepBeg_dt{DATEIN-SUFFIX}
and   W.FP_LEGALSTAT_CD  = X.FP_LEGALSTAT_CD
and   W.FP_INST_STAT = 'R'                      !Occurrence Status: Real
and   X.EFF_STATUS   = 'A'
and   X.EFFDT =
        (select max(EFFDT)
         from  PS_FPMLEGALSTA_TBL
         where FP_LEGALSTAT_CD = W.FP_LEGALSTAT_CD
         and   EFFDT <= W.EFFDT)

and   W.EMPLID = SCRTY.EMPLID       !
and   W.EMPL_RCD = SCRTY.EMPL_RCD   !SQR security
      [$SecurityClause]             !

order by W.EFFDT

END-SELECT

#IFDEF DEBUGI
    display 'search-pos-stat End'
#ENDIF

END-PROCEDURE Search-Pos-Stat



!***************************************************************
!
!
!  Search-PTime: Search for the working time and calculate seniority
!
!
!***************************************************************
BEGIN-PROCEDURE Search-PTime

#IFDEF DEBUGI
    display 'Search-PartTime Beginning'
#ENDIF

do Init-Search-PTime
do Search-PTime1


    If $CalcPTime = 'N'
            do Search-PTime2
    end-if


    If $Search = 'N'
    ! No working time found for the period
    !-------------------------------------
            #IFDEF DEBUGI
                Display 'No working time found for the period'
            #ENDIF

            Do Calc-Anc
    Else
            IF $CalcPTime = 'N'
            ! The period is not over
            !-----------------------
                    Do  dtu-add-days ($Calc-Anc-End,1,$Calc-Anc-Beg)
                    Let $Calc-Anc-End = $Posit-End
                    Let #Pct-Tp = 100
                    Let $PartTime = 'F'

                    #IFDEF DEBUGI
                        Display 'The period is not over'
                    #ENDIF

                    Do Calc-Anc

            End-if

    end-if

#IFDEF DEBUGI
    display 'search-parttime End'
#ENDIF

END-PROCEDURE Search-Pos-Stat



!***************************************************************
!
!    Init-Search-PTime : Initialize search for working time
!
!
!***************************************************************
BEGIN-PROCEDURE Init-Search-PTime

        do Convert-From-DTU-date($Posit-Beg,$Posit-Beg-Nat)
        do Convert-From-DTU-date($Posit-End,$Posit-End-Nat)
        Let $Calc-Anc-Beg = $Posit-Beg  !Begin date Seniority calculation
        Let $Calc-Anc-End = $Posit-End  !End date Seniority calculation
        Let #Pct-Tp-Last = #Pct-Tp      !Preceding Working Time percentage
        Let #Pct-Tp = 100               !Working Time percentage
        Let $PartTime = 'F'             !Part-time/Full time
        Let $CalcPTime = 'N'            !Seniority Calculation Indicator
                                        !Part Time period

        Let $Search = 'N'               !Working Period Indicator
                                        !Found
END-PROCEDURE Init-Search-PTime



!***************************************************************
!
!    Search-PTime1 : Search for the first Working Time period
!
!
!***************************************************************
BEGIN-PROCEDURE Search-PTime1

let $sql-statement = 'FPA300.SQR,Select,Search-PartTime'
BEGIN-SELECT On-Error=SQL-Error

{DATEOUT-PREFIX}A.EFFDT{DATEOUT-SUFFIX}         &PTim-Beg
{DATEOUT-PREFIX}A.FP_FOREND_DT{DATEOUT-SUFFIX}  &PTimeForEnd
{DATEOUT-PREFIX}A.FP_END_DT{DATEOUT-SUFFIX}     &PTimeEnd
A.FULL_PART_TIME                                &Part-Time
A.FP_PT_PCT                                     &Pct-Tp


            Let $Part-Time = &Part-Time
            Let #Pct-Tp = &Pct-Tp
            do Convert-To-DTU-Date(&PTim-Beg,$PTim-Beg)
            do Convert-To-DTU-Date(&PTimeForEnd,$PTimeForEnd)
            do Convert-To-DTU-Date(&PTimeEnd,$PTimeEnd)

            Let $Search = 'Y'

            ! find end date of seniority calculation
            !---------------------------------------
            Do Calc-Anc-End

            #IFDEF DEBUGI
                Display 'Search-PTime 1 Seniority Calculation'
            #ENDIF

            Do Calc-Anc

from  PS_FPAEEWORKRT A
     ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where A.EMPLID = &Emplid
and   A.EMPL_RCD = &Empl_rcd
and   A.FP_INST_STAT = 'R'
and   A.EFFDT =
(Select Max(A1.EFFDT) from PS_FPAEEWORKRT A1
where A1.EMPLID = &Emplid
and   A1.EMPL_RCD = &Empl_rcd
and   A1.FP_INST_STAT = 'R'
and   A1.EFFDT <= {DATEIN-PREFIX}$Posit-Beg-Nat{DATEIN-SUFFIX})
and   A.EFFSEQ =
(select Max(A2.EFFSEQ) from PS_FPAEEWORKRT A2
where A2.EFFDT = A.EFFDT
and   A2.EMPLID = A.EMPLID
and   A2.EMPL_RCD = A.EMPL_RCD
and   A2.FP_INST_STAT = 'R')

and   A.EMPLID = SCRTY.EMPLID       !
and   A.EMPL_RCD = SCRTY.EMPL_RCD   !SQR security
      [$SecurityClause]             !

END-SELECT

END-PROCEDURE Search-PTime1



!***************************************************************
!
!    Search-PTime2 : Search for next working time period
!
!
!***************************************************************
BEGIN-PROCEDURE Search-PTime2

let $sql-statement = 'FPA300.SQR,Select,Search-PartTime'
BEGIN-SELECT On-Error=SQL-Error

{DATEOUT-PREFIX}A.EFFDT{DATEOUT-SUFFIX}         &PTim-Beg2
{DATEOUT-PREFIX}A.FP_FOREND_DT{DATEOUT-SUFFIX}  &PTimeForEnd2
{DATEOUT-PREFIX}A.FP_END_DT{DATEOUT-SUFFIX}     &PTimeEnd2
A.FULL_PART_TIME                                &Part-Time2
A.FP_PT_PCT                                     &Pct-Tp2
A.EFFSEQ

            Let $Part-Time = &Part-Time2
            Let #Pct-Tp = &Pct-Tp2
            do Convert-To-DTU-Date(&PTim-Beg2,$PTim-Beg)
            do Convert-To-DTU-Date(&PTimeForEnd2,$PTimeForEnd)
            do Convert-To-DTU-Date(&PTimeEnd2,$PTimeEnd)

            Let $Search = 'Y'

            Let $Calc-Anc-Beg = $PTim-Beg

            #IFDEF DEBUGI
                display 'avant calc'
                display &PTim-Beg2
                display &PTimeEnd2
                display $PTimeEnd
            #ENDIF

            Do Calc-Anc-End

            #IFDEF DEBUGI
                Display 'Search-PTime 2 Seniority Calculation'
            #ENDIF

            Do Calc-Anc

from  PS_FPAEEWORKRT A
     ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where A.EMPLID = &Emplid
and   A.EMPL_RCD = &Empl_rcd
and   A.EFFDT > {DATEIN-PREFIX}$Posit-Beg-Nat{DATEIN-SUFFIX}
and   A.EFFDT < {DATEIN-PREFIX}$Posit-End-Nat{DATEIN-SUFFIX}
and   A.FP_INST_STAT = 'R'

and   A.EMPLID = SCRTY.EMPLID        !
and   A.EMPL_RCD = SCRTY.EMPL_RCD    !SQR security
      [$SecurityClause]              !

order by A.EFFDT,A.EFFSEQ

END-SELECT

END-PROCEDURE Search-PTime2



!***************************************************************
!
!    Calc-Anc-End : Find the end date for Seniority Calculation
!                   Function used in Search-PTime1 and 2
!
!***************************************************************
BEGIN-PROCEDURE Calc-Anc-End

#IFDEF DEBUGI
    Display '$Posit-Beg :'      noline
    Display $Posit-Beg
    Display '$Posit-End :'      noline
    Display $Posit-End
    Display '$PTimeEnd :'       noline
    Display $PTimeEnd
    Display '$PTimeForEnd :'    noline
    Display $PTimeForEnd
#ENDIF

IF $PTimeEnd = ''
        IF $PTimeForEnd = ''
                let $Calc-Anc-End = $Posit-End
                Let $CalcPTime = 'Y'
        else

                IF $PTimeForEnd >= $Posit-End
                        let $Calc-Anc-End = $Posit-End
                        Let $CalcPTime = 'Y'
                else
                        let $Calc-Anc-End = $PTimeForEnd
                end-if

        End-if

Else

        IF $PTimeEnd >= $Posit-End
                let $Calc-Anc-End = $Posit-End
                Let $CalcPTime = 'Y'
        else
                let $Calc-Anc-End = $PTimeEnd
        end-if

End-if

END-PROCEDURE Calc-Anc-End



!***************************************************************
!
!    Calc-Anc : For each civil service position
!               and  for each working time period
!               calculate the duration of the civil service position
!               of the preceding and current seniority
!
!
!***************************************************************
BEGIN-PROCEDURE Calc-Anc

#IFDEF DEBUGI
    display 'Calc-Anc Begin :'
    Display '$Calc-Anc-beg:'    noline
    Display $Calc-Anc-beg
    Display '$Calc-Anc-end:'    noline
    Display $Calc-Anc-End
    Display '#Coeff:'           noline
    Display #Coeff
    Display '#Pct-Tp:'          noline
    Display #Pct-Tp
    Display '#Pct-Tp-Last:'     noline
    Display #Pct-Tp-Last
    Display '#Coeff-Last:'      noline
    Display #Coeff-Last
#ENDIF

! Number of days till the end of the civil service position
!----------------------------------------------------------
IF $Cal-Thirtieth ='T'  !Thirtieth method
        let #Days-Number=30
else                    !Calendar days method
        Do Days-Number($Calc-Anc-End,#Days-Number )
end-if

! Preceding seniority, Begin Date Calculation Date, Nbr of days months Calculation dt
!------------------------------------------------------------------------------------

IF #Coeff = 100

        ! #Coeff must equal to #Coeff-Last
        !---------------------------------
        If #Pct-Tp = #Pct-Tp-Last and #Coeff = #Coeff-Last
                Let #i = #i + 1
        Else
                Let #i = 1
                let #Anc-Dy-Last = #Anc-Dy
                let #Anc-Mn-Last = #Anc-Mn
                let #Anc-Yr-Last = #Anc-Yr
                Let #Days-Num-Calc = #Days-Number
                Let $Calc-Beg-dt = $Calc-Anc-Beg

                #IFDEF DEBUGI
                    display $Calc-Beg-dt
                #ENDIF

        End-if

Else

        Let #i = 0
        let #Anc-Dy-Last = #Anc-Dy
        let #Anc-Mn-Last = #Anc-Mn
        let #Anc-Yr-Last = #Anc-Yr
        Let #Days-Num-Calc = #Days-Number
        Let $Calc-Beg-dt = $Calc-Anc-Beg

end-if

#IFDEF DEBUGI
    Display 'Preceding Seniority: Y/M/D'
    Display #Anc-Yr-Last
    Display #Anc-Mn-Last
    Display #Anc-Dy-Last
    Display '#i=' noline
    Display #i
#ENDIF

! Calculation of the duration of the civil service position
!----------------------------------------------------------
do FP-Calc-Dur($Cal-Thirtieth,$Calc-Anc-Beg,$Calc-Anc-End,#Year,#Month,#Day)

#IFDEF DEBUGI
    display 'Calc-Anc Difference between begin and end date expressed as Y/M/D'
    display #Year
    display #Month
    display #Day
#ENDIF

! Conversion of the duration according to the Activity Coefficient
!-----------------------------------------------------------------
do Trans-FullTime (#Coeff,#Year,#Month,#Day,#Year-out,#Month-out,#Day-out)
Let #Year = #Year-out
Let #Month = #Month-out
Let #Day = #Day-out

! Conversion of the duration according to the part-time
!------------------------------------------------------
IF #Coeff = 100

#IFDEF DEBUGI
    display $Part-Time
    Display 'Part-time Pct :' noline
    display #Pct-Tp
#ENDIF

 IF $Part-Time = 'P'
        do Trans-FullTime(#Pct-Tp,#Year,#Month,#Day,#Year-out,#Month-out,#Day-out)

        #IFDEF DEBUGI
            display 'Calc-Anc Part Time Y/M/D'
        #ENDIF

        Let #Year = #Year-out
        Let #Month = #Month-out
        Let #Day = #Day-out
 end-if
end-if

!Total Seniority with % of career progression (real seniority)
!-------------------------------------------------------------
let #Anc-Dy = #Anc-Dy + #Day
let #Anc-Mn = #Anc-Mn + #Month
let #Anc-Yr = #Anc-Yr + #Year

While #Anc-Dy >= #Days-Number
        let #Anc-Mn = #Anc-Mn + 1
        let #Anc-Dy = #Anc-Dy - #Days-Number
End-While

While #Anc-Mn >= 12
        let #Anc-Yr = #Anc-Yr + 1
        let #Anc-Mn = #Anc-Mn - 12
End-While

do Change-Char (#Anc-Yr  , #Anc-Mn , #Anc-Dy , $Anc-Step )

#IFDEF DEBUGI
    display 'Calc-Anc Seniority in the step YY MM DD:' noline
    display #Anc-Yr noline
    display #Anc-Mn noline
    display #Anc-Dy
    display 'Calc-Anc Seniority in the step :' noline
    display $Anc-Step
#ENDIF

! For each civil service position: compare the legal duration
! of the probation period with the total seniority in the probation period.
! If Total Seniority >= Legal duration of the probation period
!
!       Calculation of the granting of tenure date
! else
!       Calculate the remaining duration in the probation period to achieve the legal duration
!---------------------------------------------------------------------------------------------

Let #pct-tp-Last = #pct-tp

! Get the preceding Promotion Coeff
!----------------------------------
Let #Coeff-Last = #Coeff

#IFDEF DEBUGI
    display '******************'
    display '$Anc-Step'
    display $Anc-Step
    display '$Dur_Train'
    display $Dur_Train

    display '*************flag_calc_prom******************'
    display $flag_calc_prom
#ENDIF


If $Anc-Step  >= $Dur_Train  and $flag_calc_prom != 'Y'     !Sen > Duration of the probation period and promotion date not calculated
        do Calc-Prom                                        !Calculation of promotion Date
        Let $flag_calc_prom = 'Y'                           !Promotion Date has been calculated
End-if

#IFDEF DEBUGI
    display 'Calc-Anc End :'
#ENDIF

END-PROCEDURE Calc-Anc



!****************************************************************************************************
!
! Calc-Compl: Calculate the remaining duration in the probation period to achieve the legal duration
!
!****************************************************************************************************
BEGIN-PROCEDURE Calc-Compl

#IFDEF DEBUGI
    display 'Preceding Seniority Y/M/D'
    Display #Anc-Yr-Last
    Display #Anc-Mn-Last
    Display #Anc-Dy-Last

    display 'Duration Y/M/J'
    Display #DurTrainYr
    Display #DurTrainMn
    Display #DurTrainDy
#ENDIF

! Calculate the remaining duration % the preceding civil service position
!-----------------------------------------------------------------------
If  #Anc-Dy-Last <= #DurTrainDy
        let #RAFDy  = #DurTrainDy  - #Anc-Dy-Last
else
        let #RAFDy  =  #Days-Number - #Anc-Dy-Last +#DurTrainDy
        let #Anc-Mn-Last = #Anc-Mn-Last + 1
end-if

If  #Anc-Mn-Last  <= #DurTrainMn
        let #RAFMn  = #DurTrainMn  - #Anc-Mn-Last
else
        let #RAFMn  =  12 - #Anc-Mn-Last  + #DurTrainMn
        let #Anc-Yr-Last = #Anc-Yr-Last + 1
end-if

let #RAFAn = #DurTrainYr - #Anc-Yr-Last

#IFDEF DEBUGI
    display 'Calc-RAF Days :'   noline
    display #RAFDy
    display 'Calc-RAF Months :' noline
    display #RAFMn
    display 'Calc-RAF Years :'  noline
    display #RAFAn
#ENDIF

! Calculate the remaining duration in the civil service position
!---------------------------------------------------------------

Do Trans-PartTime(#Coeff,#RAFAn,#RAFMn,#RAFDy,#Compl-An,#Compl-Mn,#Compl-Jr)

#IFDEF DEBUGI
    display '#Compl-An :' noline
    display #Compl-An
    display '#Compl-Mn :' noline
    display #Compl-Mn
    display '#Compl-Jr :' noline
    display #Compl-Jr
#ENDIF

IF $Part-Time = 'P'

        do Trans-PartTime(#Pct-Tp,#Compl-An,#Compl-Mn,#Compl-Jr,#AF,#MF,#DF)

        #IFDEF DEBUGI
            display 'Sen-Calc Part Time Y/M/D'
            display #AF
            display #MF
            display #DF
        #ENDIF

        Let #Compl-An = #AF
        Let #Compl-Mn = #MF
        Let #Compl-Jr = #DF

end-if

END-PROCEDURE Calc-Compl

