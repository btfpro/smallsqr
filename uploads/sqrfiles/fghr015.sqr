!*************************************
!  FGHR015:  Union Membership        *
!*************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:11:55:34                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!Procedures ending with "Scrty" and Record alias ending with "SC" are
!using SQR Security.
!***********************************************************************
!***********************************************************************
!                                                                      *
! Program modified to meet Federal Government specific requirements    *
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization


begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report

  if $prcs_oprid=''
  goto last2
 end-if
 !if $scrty_flag='Y'         !FG - commented out commercial security procedure as we
 !do Process-Main-Scrty      !do not seem to use it.
 !else
  do Process-Main
 !end-if
  do Reset
  do Stdapi-Term
last2:
end-report

begin-heading 7
  #Include 'stdhtr02.sqc'

  print $UNIONCD                                         (+3,1)
  print $UNION                                           (0,12)
  print $DATE                                            (0,23)
  print $EMPLNAME                                        (0,45)
  print $HIRE                                            (0,85)
  print $SENIORITY                                       (0,97)
  print $EMPLSTATUS                                      (0,140)
  print $HOURLY                                          (0,161)
  print $UNIONNAME                                       (+1,1)
  print $SCOPE                                           (0,12)
  print $REC                                             (0,23)
  print $EMPLID                                          (0,34)
  print $JOBTITLE                                        (0,45)
  print $DATE                                            (0,85)
  print $DATE                                            (0,97)
  print $DEPT                                            (0,109)
  print $LOCATION                                        (0,121)
  print $TYPE                                            (0,140)
  print $GRP                                             (0,155)
  print $RATE                                            (0,161)
  print $SHIFT                                           (0,172)
end-heading


!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from FGHR015 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
!  do Append_Report_Translation ('FGHR015')

  do Get_Field_Information ('FGHR015',  'REPORT_TITLE',   $FGHR015-REPORTTITLE,  #CW)
  do Get_Field_Information ('FGHR015',  'UNIONCD',        $UNIONCD,              #CW)
  do Get_Field_Information ('FGHR015',  'UNION',          $UNION,                #CW)
  do Get_Field_Information ('FGHR015',  'DATE',           $DATE,                 #CW)
  do Get_Field_Information ('FGHR015',  'EMPLNAME',       $EMPLNAME,             #CW)
  do Get_Field_Information ('FGHR015',  'HIRE',           $HIRE,                 #CW)
  do Get_Field_Information ('FGHR015',  'SENIORITY',      $SENIORITY,            #CW)
  do Get_Field_Information ('FGHR015',  'EMPLSTATUS',     $EMPLSTATUS,           #CW)
  do Get_Field_Information ('FGHR015',  'HOURLY',         $HOURLY,               #CW)
  do Get_Field_Information ('FGHR015',  'UNIONNAME',      $UNIONNAME,            #CW)
  do Get_Field_Information ('FGHR015',  'SCOPE',          $SCOPE,                #CW)
  do Get_Field_Information ('FGHR015',  'REC',            $REC,                  #CW)
  do Get_Field_Information ('FGHR015',  'EMPLID',         $EMPLID,               #CW)

  do Get_Field_Information ('FGHR015',  'JOBTITLE',       $JOBTITLE,             #CW)
  do Get_Field_Information ('FGHR015',  'DEPT',           $DEPT,                 #CW)
  do Get_Field_Information ('FGHR015',  'LOCATION',       $LOCATION,             #CW)
  do Get_Field_Information ('FGHR015',  'TYPE',           $TYPE,                 #CW)
  do Get_Field_Information ('FGHR015',  'GRP',            $GRP,                  #CW)
  do Get_Field_Information ('FGHR015',  'RATE',           $RATE,                 #CW)
  do Get_Field_Information ('FGHR015',  'SHIFT',          $SHIFT,                #CW)

End-Procedure

begin-procedure Init-Report
  do Stdapi-Init

  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  do Sqr-Param
  if $prcs_process_instance = ''
    !No Prompt
  else
    do Select-Parameters
  end-if

  #define Year4 '1'
  move 'FGHR015' to $ReportID
  do Get-Report-Language
  move $FGHR015-REPORTTITLE to $ReportTitle
  display $ReportTitle

last1:
end-procedure

begin-procedure Get-Values

!No Prompt

end-procedure

begin-procedure Process-Main
  if $language_cd = 'JPN'
     let $qualifier1 = 'A.NAME_AC'
  else
     let $qualifier1 = 'A.NAME'
  end-if
begin-SELECT DISTINCT
A.BUSINESS_UNIT
  LET $BU = RTRIM(&A.BUSINESS_UNIT,' ')
A.COMPANY          ()  on-break print=never level=1 procedure=Company-Change
  move &A.Company to $Company
A.UNION_CD                    (+1,1)
                  on-break print=change/top-page level=2 after=Union_Cd-Change
  move &A.Union_Cd to $Union_Cd

A.BARG_UNIT
B.GVT_UNION_SCOPE
A.EFFDT             &A.EffDt

  move &A.EffDt    to $AsOfDate
  move 'GVT_UNION_SCOPE' to $FieldName
  move &B.Gvt_Union_Scope  to $FieldValue
  do Read-Translate-Table
  print $XlatShortName        (0,12)


B.GVT_DT_UNION_RCGNZ          &B.Gvt_Dt_Union_Rcgnz

  if RTRIM(&B.Gvt_Dt_Union_Rcgnz, ' ') <> ''
    do Format-DateTime(&B.Gvt_Dt_Union_Rcgnz , $out, {DEFDATE}, '', '')
    print $out                (0,23)
  end-if

A.EMPLID                      (0,34)

A.NAME                        (0,45)
A.HIRE_DT  &A.Hire_Dt
  do Format-DateTime(&A.Hire_Dt, $out, {DEFDATE}, '', '')
  print $out                  (0,85)

A.UNION_SENIORITY_DT          &A.Union_Seniority_Dt

  if not IsNULL(&A.Union_Seniority_Dt)
    do Format-DateTime(&A.Union_Seniority_Dt, $out, {DEFDATE}, '', '')
    print $out                (0,97)
  end-if

A.DEPTNAME_ABBRV              (0,109)
A.LOCATION

  move &A.Location to $Location
  do Get-Setid($BU,'LOCATION_TBL', $Setid)
  do Get-Location-Name
  print $LocationAbbrv          (0,121)

A.JOBTITLE_ABBRV
A.EMPL_TYPE                     (0,141)
A.REG_TEMP                      (0,145)
A.FULL_PART_TIME                (0,150)
A.PAYGROUP                      (0,155)
A.CURRENCY_CD &curin
A.HOURLY_RT
  do Format-Amt(&A.Hourly_Rt, $out, '9999.9999',&curin, $curout)
  print $out                    (0,159)
  print $curout                 (0,169)

A.SHIFT                         (0,175)

  !2nd data row

C.DESCRSHORT                    (+1,1)
 move &C.DescrShort to $DescrShort

A.GVT_ORG_TTL_DESCR             (0,45)

  let #Union_Empl_Ct = #Union_Empl_Ct + 1

FROM  PS_EMPLOYEES A, PS_GVT_BU_UNION B, PS_UNION_TBL C
WHERE A.BARG_UNIT = B.BARG_UNIT
  AND A.UNION_CD  = B.UNION_CD
  AND A.UNION_CD  = C.UNION_CD
  AND B.EFFDT =
               (SELECT MAX(EFFDT)
                FROM PS_GVT_BU_UNION
                WHERE BARG_UNIT = B.BARG_UNIT
                AND   UNION_CD  = B.UNION_CD)
  AND C.EFFDT =
               (SELECT MAX(EFFDT)
                FROM PS_UNION_TBL
                WHERE UNION_CD  = B.UNION_CD)

ORDER BY A.COMPANY,A.UNION_CD,A.BARG_UNIT,[$qualifier1]
end-SELECT
end-procedure


begin-procedure Process-Main-Scrty
   if $language_cd = 'JPN'
     let $qualifier1 = 'AASC.NAME_AC'
  else
     let $qualifier1 = 'AASC.NAME'
  end-if
begin-SELECT DISTINCT
AASC.BUSINESS_UNIT
  LET $BU = RTRIM(&AASC.BUSINESS_UNIT,' ')
AASC.COMPANY          ()  on-break print=never level=1 procedure=Company-Change
  move &AASC.Company to $Company
AASC.UNION_CD                    (+1,1)
BSC.DESCRSHORT                  (0,7)
AASC.BARG_UNIT
AASC.EFFDT             &AASC.EffDt

  move &AASC.EffDt    to $AsOfDate
  move 'BARG_UNIT' to $FieldName
  move &AASC.Barg_Unit  to $FieldValue
  do Read-Translate-Table
  print $XlatShortName        (0,18)
AASC.EMPLID                      (0,29)
AASC.NAME                        (0,41)
AASC.HIRE_DT  &AASC.Hire_Dt
  do Format-DateTime(&AASC.Hire_Dt, $out, {DEFDATE}, '', '')
  print $out                  (0,73)
AASC.UNION_SENIORITY_DT          &AASC.Union_Seniority_Dt

  if not IsNULL(&AASC.Union_Seniority_Dt)
    do Format-DateTime(&AASC.Union_Seniority_Dt, $out, {DEFDATE}, '', '')
    print $out                (0,84)
  end-if
AASC.DEPTNAME_ABBRV              (0,95)
AASC.LOCATION
  move &AASC.Location to $Location
  do Get-Location-Name
  print $LocationAbbrv          (0,106)
AASC.JOBTITLE_ABBRV                (0,117)
AASC.EMPL_TYPE                     (0,129)
AASC.REG_TEMP                      (0,133)
AASC.FULL_PART_TIME                (0,138)
AASC.PAYGROUP                      (0,144)
AASC.CURRENCY_CD &Aasccurin
AASC.HOURLY_RT
  do Format-Amt(&AASC.Hourly_Rt, $out, '999999999999.999999',&Aasccurin, $curout)
  print $out                    (0,147)
  print $curout                 (0,167)
AASC.SHIFT                         (0,173)
FROM  PS_EMPLOYEES AASC, PS_UNION_TBL BSC, PS_FAST_SQR_SEC_VW SCRTY 
WHERE AASC.EMPLID = SCRTY.EMPLID
  AND AASC.EMPL_RCD = SCRTY.EMPL_RCD
  [$SecurityClause]
  AND BSC.UNION_CD = AASC.UNION_CD
  AND BSC.EFFDT =
               (SELECT MAX(EFFDT)
                FROM PS_UNION_TBL
                WHERE UNION_CD  = BSC.UNION_CD)

ORDER BY AASC.COMPANY,AASC.UNION_CD,AASC.BARG_UNIT,[$qualifier1]
end-SELECT
end-procedure

begin-procedure Company-Change
  new-page
end-procedure

begin-procedure Union_Cd-Change
 print 'Total members for '              (+3,12)
 print $DescrShort                       ()
 print ' : '                             ()
 print #Union_Empl_Ct                    ()  edit 9,999,999
 print '.'                               ()
  new-page
let #Union_Empl_Ct = 0

end-procedure

#include 'fgrunctl.sqc'  !Get run control parameter values
#include 'fggetval.sqc'  !Get values mask routines
#include 'hrsecty.sqc'   !Get SQR Security parameters

#Include 'getsetid.sqc'  !Get-setid procedure
#Include 'getlocnm.sqc'  !Get-Location-Name procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure (used in StdHtr02)
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Rountines to Update Run Status

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
