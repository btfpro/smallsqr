!***********************************************************************
! GEXBNGPD:  Loads GE Participation Panel from data file               *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! Narrative:            This SQR is designed to read an interface file *
!                       and load GEX_PARTIC_DATE.  Currently designed  *
!                       to run from server only                        *
!                                                                      *
! SQL Tables:           GEX_PARTIC_DATE                                *
!                                                                      *
! Written by:           Tony Labra                                     *
!                                                                      *
! Normally Run:         On Demand                                      *
!                                                                      *
! Control Parms:        AsOfDate                                       *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! AXL       07/06/2002  Initial Creation                               *
!								       *
! DXS       01/30/2008  Retrofitted in 9.0. Made changes in procedure  *
!                       Verify-Personal-Data and generation of the     *
!                       ftp command variable                           *
! 1289792   01/19/2017  Change the code for SSN-EMPLID changes         *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup01.sqc'
#define  FileID 'gexbngpd.prn'
 
!*********************************************************************
begin-report
!*********************************************************************

  do Init-DateTime
  do Init-Number
  do Init-Report
  do Open-Files
  do Process-Data-Load
  do EOJ
  do Stdapi-Term

end-report

!***********************************************************************
begin-procedure Init-Report
!***********************************************************************

  do Get-Current-DateTime
  do Stdapi-Init

  let $ReportID = 'GEXBNGPD'
  let $ReportTitle = 'Load (Insert) Participation Date Panel'

  display $ReportID noline
  display ' - '     noline
  display $ReportTitle 

  date-time () hh:mi:ss &TimeBegan
  date-time () MM/DD/YYYY  &DateBegan
  show 'Report Began at ' &TimeBegan ' on '  &DateBegan
  
  if $prcs_process_instance = ''
     display 'Need to run this program thru process scheduler'
     stop
  else

     !System Commands
     do GEXXX951-Select-Oracle-Instance
     let $db_name = lower($GEXXX951_Oracle_Instance)
     let $cd_command_bindir = 'cd '||'$BINDIR'
     ! DXS, Added the following 2 lines 
     let $pshome = getenv('PS_HOME')
     let $ftp_command = '/bin/ksh  ' || $pshome || '/scripts/gex_shell/' || 'gexbngpd.sh '||$db_name
    
     do get-process-instance

     !Change to Bindir Directory On UNIX
     CALL SYSTEM USING $cd_command_bindir #sys_status
   
     !Get input file
     CALL SYSTEM USING $ftp_command #sys_status
 
  end-if

end-procedure

!***********************************************************************
begin-procedure get-process-instance
!***********************************************************************
let $found = 'N'
begin-SELECT 
max(PRCSINSTANCE) &prcsinstance_A
   move &prcsinstance_a to $prcsinstance
   move 'Y' to $found
  
FROM    PSPRCSRQST
WHERE PRCSNAME = $ReportID
end-SELECT

 if ($found = 'N') or 
    RTRIM($PRCSINSTANCE,' ') = ''
	display 'NO DATA SELECTED FOR THIS REPORT RUN'  
 end-if

end-procedure                                             

!***********************************************************************
begin-procedure Open-Files
!***********************************************************************

  let $Filenm = '{INFILE}' ||{FileID}

  show '$filenm ' $filenm

  open $filenm as 1 for-reading
     record=100:vary
     status=#open1
  if #open1 = -1
     display 'Open failed for file <' noline
     display $filenm noline
     display '>'
     stop 
  end-if

  let $filenm1= '{OUTFILE}' || lower($ReportId) || '_' || $prcsinstance || '.lis'
  show '$filenm1 ' $filenm1

  open $filenm1 as 10 for-writing
      record=150:fixed
      status=#filests10
  if #filests10 <> 0
     display 'Open failed for file <' noline
     display $filenm1 noline
     display '>'
     stop
  end-if 

  uppercase $ReportTitle
  write 10 from '                                        ' 'Giant Eagle'
  write 10 from 'Report ID:  ' $ReportID '               ' $ReportTitle
  write 10 from ' '  
  write 10 from 'Run Date    ' $ReportDate
  write 10 from 'Run Time    ' $ReportTime
  write 10 from ' '
  write 10 from ' '
  write 10 from 'ERR MSG':30   
  write 10 from '------------------------------------------------------------':60 

end-procedure

!*********************************************************************
begin-procedure Process-Data-Load
!*********************************************************************

   while 1
   !GEX-SECENGG - 1289792 - 01/19/2017 - Begin
   ! read 1 into $EMPLID:9
     read 1 into $EMPLID:7
   !GEX-SECENGG - 1289792 - 01/19/2017 - End
                $filler:3
    	        $PARTICIPATION_DATE_LOAD:10 
                $filler:2
    	        $GEX_ACQUISITION_DT_LOAD:10
                $filler:2
    	        $VESTING_DT_LOAD:10 
                $filler:2
    	        $DESCR50:50 

    if #end-file = 1
      break
    end-if

    Let #Record_count = #Record_count + 1
  
    Let $Record_error = 'N'

    !** Check required fields for nulls and valid values

    If isnull($EMPLID) = 1
        show 'Emplid Missing'
        let #missing_emplid = #missing_emplid + 1
        let $Record_error = 'Y'
    else
        let $employee_exists = 'N'
        do Verify-Personal-Data
          if $employee_exists = 'N'
              let #invalid_emp = #invalid_emp + 1
              Show 'Emplid Invalid - ' $EMPLID
              let $Record_error = 'Y'
              let $Reason = 'Employee does not exist in Psoft'
              do Print-error('Load Error',$Reason)
          end-if
     end-if

    if $Record_error = 'N'
       let #valid_count = #valid_count + 1
       let $PARTICIPATION_DATE = datetostr(strtodate($PARTICIPATION_DATE_LOAD,'YYYY-MM-DD'),'DD-MON-YYYY')
       let $GEX_ACQUISITION_DT = datetostr(strtodate($GEX_ACQUISITION_DT_LOAD,'YYYY-MM-DD'),'DD-MON-YYYY')
       let $VESTING_DT         = datetostr(strtodate($VESTING_DT_LOAD,'YYYY-MM-DD'),'DD-MON-YYYY')
       
       Do Insert-Partic-Panel 
      
    end-if
    
   End-while

end-procedure

!********************************************************************
begin-procedure Verify-Personal-Data
!********************************************************************
Begin-Select
PD.Emplid
    let $employee_exists = 'Y'

FROM ps_per_org_asgn PD		! DXS, 1/30/08. Using this record instead
! From PS_PERSONAL_DATA PD
Where PD.Emplid = $Emplid 
! and PD.Per_Status='E'
and PD.PER_ORG = 'EMP'
End-Select
end-procedure

!********************************************************************
begin-procedure Find-Current-Row
!********************************************************************
 
  let $found_gpd = 'N'

Begin-Select
GPD.Emplid
    let $found_gpd = 'Y'
    show 'found ee' $emplid
From PS_GEX_PARTIC_DATE GPD
Where GPD.Emplid = $Emplid
End-Select
end-procedure

!********************************************************************
begin-procedure Insert-Partic-Panel 
!********************************************************************   
  let $sql-statement = 'Insert-Partic-Panel'
begin-SQL On-Error=SQL-Error-E
Insert into ps_gex_partic_date
       (EMPLID,                         
        PARTICIPATION_DATE,
        GEX_ACQUISITION_DT,
        VESTING_DT,             
        DESCR50,         
        COMMENTS)               
VALUES
        ($EMPLID,
	$PARTICIPATION_DATE,
        nvl($GEX_ACQUISITION_DT,''),
        $VESTING_DT,
        nvl($DESCR50,' '), 
        ' ')

end-sql
  
    If #sql-status = 0
      let #panel_inserts = #panel_inserts + #sql-count
    else
      Show 'Insert failed - ' $EMPLID
      let #invalid_insert = #invalid_insert + 1
    End-if

end-procedure

!************************************************************************
begin-procedure SQL-Error-E
!************************************************************************
Let $Error_message= $sql-statement || ', EMPLOYEE=' || $EMPLID || ' Did not Load.'
Let $SQL_Error_Msg1 = 'SQL Status: ' || to_char(#sql-status)
Let $SQL_Error_Msg2 = 'SQL Error: ' || $sql-error

  if substr($sql-error,1,9) = 'ORA-00001'
     Let $Reason = 'EE duplicate on incoming file or already in panel'
  else
     Let $Reason = $sql-error
  end-if

show $Error_message
show $SQL_Error_Msg1
show $SQL_Error_Msg2

do Print-error('Load Error',$Reason)

end-procedure

!********************************************************************
begin-procedure Print-error($Err_Field, $Err_Value)
!********************************************************************

 write 10 from $Err_Field:12 $Err_Value:50 $_emplid 
	
end-procedure

!***********************************************************************
Begin-Procedure EOJ
!***********************************************************************
      
  show ' '
  show 'Records Read           ' #record_count
  show ' '
  show 'Valid Rows             ' #valid_count
  show 'Invalid Rows           ' #invalid_emp
  show ' '
  show 'Rows Ins into Panel    ' #panel_inserts

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'

End-Procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'gexxx951.sqc'  !Get Oracle instance

