!***********************************************************************
! GEXBN014:  Termination List for Cobra Administration                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXBN014 :		Termination List for Cobra Administration      *
!                                                                      *        
! Narrative:		This report shows employee information of      *
!				terminated employees.                          *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!				#debug8 key variable values                    *
!				#debug7 data returned from sql calls           * 
!                                                                      *  
! SQL Tables:		ben_prog_partic                                *
!                       health_benefit                                 *
!                       personal_data                                  *
!                       job                                            *
!                                                                      *
! Written by:		Jim Hutchison                                  *       
!                                                                      *
! Normally Run:		Monthly                                        *
!                                                                      *
! Control Parms:		FOR WHERE CLAUSE:                              *
!				  Multiple Benefit Programs                    *
!				  From Date                                    *
!				  Thru Date                                    *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS	DATE		DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! JDH		06/29/98	Initial Creation                               *
! JDH		11/23/98	Removed plan type and benefit plan from run    *
!                         controls.  Added run control logic to        *
!                         populate the from and thru dates if they are *
!                         left blank.  Added SQRW run control logic.   *
! JDH       01/11/98    Modified logic to include EE's who had health  *
!                         coverage elected prior to termination for    *
!                         the specified benefit programs.              *
! SXK       02/18/99    Modified to incorporate elect dt, benefit plan
!			and changed logic not to look at job actions but
!			coverage elect codes in health_benefit table
! SXK       03/15/99    Added check to see if line count exceeds max allowed
! SXK       05/12/1999  Modified to show employee info when EE 
!			will be terminated within next 30 days starting
!			from current pay begin date
! JNB       02/25/2000  Retrofitted zip to postal
! GBD       07/15/2002  Added Fieldvalue to effective dated selection  *
!                       of the Load-Lookup procedure.                  *
! GEX-CXB 10/05/2007   Upgrade 9.0 Changes.
! GEX-MXT 04/02/2008   ADDED THE join condition for PER_ORG_INST       *
!ISDVDZK               Modified the existing procedures to include          *
!                      plantype 60 and 6Z as per ITG #51626 on 08-aug-2008  * 
! GEX_SEC_REENG 2015-06-24 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
! GEX_SEC_REENG 2015-11-27 Surya Sobha                                 *
! Changes related to gex_emplid_mapp/7 digit emplid                    * 
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Portrait)


#define #column1  001
#define #column2  046
#define #column3  085
#define #column4  107
#define #column5  125
#define #column6  142
#define #column7  155
#define #column8  170


Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report


Begin-Heading 6
#debug9 Show 'Begin-Heading'

  #Include 'stdhdg01.sqc'

  Print 'Benefit Program: '     (3,1)
  Print $Save_Benefit_Program   (,+1)

  Let $X000_temp_out = 'Pay End Dt: ' || $last_pay_end_dt

  Print $X000_temp_out         (3,)  Center

  Print 'ORIG'                 (6,{#column4})
  Print 'COVERAGE'             (+0,{#column5})
  Print 'EMPL'                 (+0,{#column6})
  print 'COVERAGE'             (+0,{#column7})
  print 'BENEFIT'              (+0,{#column8})

  Print 'EMPLOYEE NAME'        (+1,{#column1})
  Print 'HOME ADDRESS'         (+0,{#column2})
  !GEX_SEC_REENG 2015-11-27 Surya Sobha Begins
  !Print 'SSN'                  (+0,{#column3})
  Print 'ID '                  (+0,{#column3})
  !GEX_SEC_REENG 2015-11-27 Surya Sobha Ends 
  Print 'HIRE DATE'            (+0,{#column4})
  Print 'ELECT DT'             (+0,{#column5})
  Print 'STATUS'               (+0,{#column6})
  print 'BEGIN DT'             (+0,{#column7})
  print ' PLAN '               (+0,{#column8})
End-Heading


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      = 'GEXBN014'
  Let $ReportTitle   = 'Termination List for Cobra Administration'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime

  Let $GEXXX911_Benefit_Program_Alias = 'bpp.benefit_program'
  Let $GEXXX911_Plan_Type_Alias       = '1'
  Let $GEXXX911_Benefit_Plan_Alias    = '1'

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  Let $X000_Order_By = 'Benefit Program, Name'

  Do Format-DateTime($FromDate, $FromDate_MDY, {DEFMDY}, '', '')
  Do Format-DateTime($ThruDate, $ThruDate_MDY, {DEFMDY}, '', '')

  Do P130-Print-Cover-Page
  Do P140-Get-Xlat-Lookup
End-Procedure


Begin-Procedure P110-SQRW-Run-Controls
#debug9 Show 'P110-SQRW-Run-Controls'
!  Do Ask-From-Thru-Date

  Let $BenefitProgramString = ''''
  Display 'Enter Benefit Program or leave blank to exit.'
  While 1=1
    Input $In-Benefit-Program Maxlen=3 'Benefit Program'
    Uppercase $In-Benefit-Program
    If Rtrim($In-Benefit-Program, ' ') = ''
      Concat '''' With $BenefitProgramString
      Break
    End-If
    If $BenefitProgramString <> ''''
      Concat ''',''' With $BenefitProgramString
    End-If
    Concat $In-Benefit-Program With $BenefitProgramString
  End-While

  let $X000_WHERE_SELECT_ASOFDATE = $asoftoday

  Do P150-Get-Last-Pay-End-Dt
  
  If $BenefitProgramString = ''''''
    Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
    Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = $GEXXX911_Benefit_Program_Alias || ' In (' || $BenefitProgramString || ')'
    Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
  End-If
End-Procedure


Begin-Procedure P120-Process-Scheduler-Run-Controls
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXRCBN1-SELECT-PARAMETERS

!  Let $FromDate = &GEX_RC_BEN.FromDate
!  Let $ThruDate = &GEX_RC_BEN.ThruDate
  let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_BEN.ASOFDATE

  If Rtrim($X000_WHERE_SELECT_ASOFDATE, ' ') = '' 
     let $X000_WHERE_SELECT_ASOFDATE = $ASOFtoday
  end-if

  Do P150-Get-Last-Pay-End-Dt

  Do GEXXX911-Select-Benefit-Program-Parameters
End-Procedure


begin-procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print 'Pay End Dt :'                                            (+2,5)
  Print $last_pay_end_dt                                          (+0,+2)
  Print '$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA:'             (+2,5)
  Print $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA        (+0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

  Let #PAGE-COUNT = 0
  New-Page 
End-Procedure


begin-procedure P140-Get-Xlat-Lookup
#debug9 Show 'P140-Get-Xlat-Lookup'

  Let $Where='     X.FIELDNAME   = ''EMPL_STATUS'''        ||
             ' AND X.EFF_STATUS  = ''A'''                  ||
!             ' AND X.LANGUAGE_CD = ''ENG'''                ||	 !GEX-CXB Commented for Upgrade 9.0 on 10/23/2007	
             ' AND X.EFFDT       = '                       ||
                 '(SELECT MAX(EFFDT)'                      ||
!                 ' FROM   XLATTABLE X1'                    ||	!GEX-CXB Commented for Upgrade 9.0 on 10/23/2007
                 ' FROM   PSXLATITEM X1'                    ||	!GEX-CXB Added for Upgrade 9.0 on 10/23/2007
                 ' WHERE  X1.FIELDNAME   = X.FIELDNAME'    ||
!GBD 07/15/2002 Begin
!                 ' AND    X1.LANGUAGE_CD = ''ENG'''  ||
!                 ' AND    X1.LANGUAGE_CD = X.LANGUAGE_CD'  ||	!GEX-CXB Commented for Upgrade 9.0 on 10/23/2007
                 ' AND    X1.FIELDVALUE  = X.FIELDVALUE'   ||
!GBD 07/15/2002 End
                 ' AND    X1.EFFDT      <= ''' || $last_pay_end_dt || '''' ||
                 ' AND    X1.EFF_STATUS  = ''A'')'

  Load-Lookup
    Name=XlatLookup
    Rows=10
    !Table='XLATTABLE X'	!GEX-CXB Commented for Upgrade 9.0 on 10/23/2007
    Table='PSXLATITEM X'	!GEX-CXB Added for Upgrade 9.0 on 10/23/2007
    Key='X.FIELDVALUE'
    Return_Value='X.XLATSHORTNAME'
    Where=$Where
    Quiet
End-Procedure


Begin-Procedure P150-Get-Last-Pay-End-Dt
#debug9 Show 'P150-Get-Last-Pay-End-Dt'
Begin-Select
pcal.pay_end_dt &last_pay_end_dt
pcal.pay_begin_Dt &pay_begin_Dt
 
  Let $last_pay_end_dt = &last_pay_end_dt
  let $pay_begin_dt = &pay_begin_dt
  
!SXK 05/12/1999 Begin
  do convert-to-dtu-date($pay_begin_dt,$pay_begin_dt_dtu)
  do dtu-add-days($pay_begin_dt_dtu,30,$range_end_dt_dtu)
  do convert-from-dtu-date($range_end_dt_dtu,$range_end_Dt)
  show 'Pay Begin Dt: ' $pay_begin_dt_dtu
  show 'Range End Dt:'  $range_end_dt
!SXK 05/12/1999 End
!  Do P160-Get-First-Pay-End-Dt

From   ps_pay_calendar pcal

Where  pcal.company           = 'GEI'
And    pcal.paygroup          = 'RET'
And    pcal.pay_end_dt        =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  company         = 'GEI'
       And    paygroup        = 'RET'
       And    pay_confirm_run   = 'Y'
       And    pay_end_dt      <= $x000_where_select_asofdate)
End-Select
End-Procedure


Begin-Procedure P160-Get-First-Pay-End-Dt
#debug9 Show 'P160-Get-First-Pay-End-Dt'
Begin-Select Distinct
pay_begin_dt &first_pay_begin_dt
pay_end_dt   &first_pay_end_dt

  Let $first_pay_begin_dt = &first_pay_begin_dt
  Let $first_pay_end_dt   = &first_pay_end_dt
  Let $FromDate           = &first_pay_begin_dt 

From   ps_pay_calendar

Where  pay_end_dt              =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  company          = 'GEI'
       And    paygroup         = 'RET'
       And    pay_end_dt      <= $last_pay_end_dt
       And    pay_period       = '1'
       And    pay_confirm_run  = 'Y')
And    pay_confirm_run         = 'Y'
End-Select
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'

display $last_pay_end_dt
display $pay_begin_dt
  let #address_line = 2
  let #bplan_line = 0
  
Begin-Select Distinct
bpp.benefit_program  ()  On-Break
                         Level=1
                         Print=Never
                         Save=$Save_Benefit_Program
                         After=P210-After-Benefit-Program-Break

j.full_part_time
j.effdt
j.company
j.deptid
j.emplid
j.empl_rcd
j.empl_status
pd.name
pd.address1
pd.address2
pd.city
pd.state
pd.postal
!pd.orig_hire_dt	!GEX-CXB Commented for Upgrade 9.0 on 10/23/2007
INST.orig_hire_dt 	!GEX-CXB Added for Upgrade 9.0 on 10/23/2007

  Let $Data-Found-Flag = 'Y'
  do select-health-record
!  Do P220-Print-Record

From  ps_personal_data   pd,
      ps_job             j,
      PS_PER_ORG_INST 	INST,	!GEX-CXB Added for Upgrade 9.0 on 10/23/2007
      ps_ben_prog_partic bpp

Where pd.emplid              = j.emplid
AND   J.EMPLID		     =	INST.EMPLID	!GEX-CXB Added for Upgrade 9.0 on 10/23/2007
AND INST.EMPLID 	     = PD.EMPLID	!GEX-CXB Added for Upgrade 9.0 on 10/23/2007
!And   pd.per_status          = 'E'		!GEX-CXB Commented for Upgrade 9.0 on 10/23/2007
And   INST.PER_ORG           = 'EMP'		!GEX-CXB Added for Upgrade 9.0 on 10/23/2007
AND   INST.ORG_INSTANCE_ERN  = J.EMPL_RCD	!GEX-MXT added for PER_ORG_INST join
!And   j.empl_status     Not In ('X','V')
!And   j.action              In ('TER','TWP','TWB')
And   bpp.emplid             = j.emplid
And   bpp.empl_rcd          = j.empl_rcd
And  ( Exists
     (Select Null
      From   ps_health_benefit hb
      Where  hb.emplid            = bpp.emplid
      And    hb.empl_rcd         = bpp.empl_rcd
      And    hb.cobra_event_id    = bpp.cobra_event_id
      And    hb.plan_type in ('10','11','14','1Z')
      And    hb.coverage_elect    = 'T'
      And    ((hb.coverage_elect_dt between $pay_begin_dt and $last_pay_end_Dt
              and hb.coverage_begin_Dt < $pay_begin_dt)
!SXK 05/12/1999 Begin
!              or hb.coverage_begin_dt between $pay_begin_dt and $last_pay_end_dt))
              or (hb.coverage_begin_dt between $pay_begin_dt and $range_end_dt)))
!SXK 05/12/1999 End
or  Exists                                                   !isdvdzk added it for including plantype 60 and 6Z on 08-aug-2008 START *
     (Select Null
      From   ps_fsa_benefit fb
      Where  fb.emplid            = bpp.emplid
      And    fb.empl_rcd         = bpp.empl_rcd
      And    fb.cobra_event_id    = bpp.cobra_event_id
      And    fb.plan_type in ('60','6Z')
      And    fb.coverage_elect    = 'T'
      And    ((fb.coverage_elect_dt between $pay_begin_dt and $last_pay_end_Dt
              and fb.coverage_begin_Dt < $pay_begin_dt)
              or (fb.coverage_begin_dt between $pay_begin_dt and $range_end_dt))))   !isdvdzk added it for including plantype 60 and 6Z on 08-aug-2008  END *
And  [$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA]
And  bpp.effdt = (select max(effdt)
                    from ps_ben_prog_partic
                   where emplid = bpp.emplid
                     and empl_Rcd = bpp.empl_Rcd
                     and effdt <= $last_pay_end_dt)
And  j.effdt = (select max(effdt)
                  from ps_job
                 where emplid = j.emplid
                   and empl_rcd = j.empl_Rcd
                   and effdt <= $last_pay_end_dt)
and  j.effseq = (select max(effseq)
                   from ps_job
                  where emplid = j.emplid
                    and empl_Rcd = j.empl_Rcd
                    and effdt = j.effdt)
Order By bpp.benefit_program, pd.name
End-Select
End-Procedure

Begin-Procedure select-health-record
let $employee_print = 'Y'
begin-select
hb1.plan_type 
hb1.coverage_begin_dt
hb1.coverage_elect_dt
 
 if (&hb1.plan_type ='60' or &hb1.plan_type='6Z')         !isdvdzk added it for including plantype 60 and 6Z on 08-aug-2008
   do  select-prev-benefitfsa-plan                        !isdvdzk added it for including plantype 60 and 6Z on 08-aug-2008
 else                                                     !isdvdzk added it for including plantype 60 and 6Z on 08-aug-2008
   do select-prev-benefit-plan                            !isdvdzk added it for including plantype 60 and 6Z on 08-aug-2008
 end-if
   
   Do P220-Print-Record  
   
from ps_health_benefit hb1
where hb1.emplid = &j.emplid
and hb1.empl_rcd = &j.empl_rcd
and hb1.plan_type in ('10','11','14','1Z')
and hb1.coverage_elect = 'T'
and ((hb1.coverage_elect_dt between $pay_begin_dt and $last_pay_end_dt
     and hb1.coverage_begin_dt < $pay_begin_dt)
!SXK 05/12/1999 Begin
!     or hb1.coverage_begin_dt between $pay_begin_dt and $last_pay_end_dt)
     or (hb1.coverage_begin_dt between $pay_begin_dt and $range_end_dt))
union select                                                 !isdvdzk added it for including plantype 60 and 6Z on 08-aug-2008 START *
fb1.plan_type ,                                              
fb1.coverage_begin_dt,                                       
fb1.coverage_elect_dt                                        
from ps_fsa_benefit fb1                                      
where fb1.emplid = &j.emplid                                 
and fb1.empl_rcd = &j.empl_rcd
and fb1.plan_type in ('60','6Z')
and fb1.coverage_elect = 'T'
  And   ((fb1.coverage_elect_dt between $pay_begin_dt and $last_pay_end_dt
              and fb1.coverage_begin_Dt < $pay_begin_dt)
              or (fb1.coverage_begin_dt between $pay_begin_dt and $range_end_dt))       !isdvdzk added it for including plantype 60 and 6Z on 08-aug-2008  END *
     
order by plan_type 
end-select


end-procedure

begin-procedure select-prev-benefit-plan
let $prev_benefit_plan = ' '
begin-select
hb2.benefit_plan

  move &hb2.benefit_plan to $prev_benefit_plan

from ps_health_benefit hb2
where hb2.emplid = &j.emplid
and hb2.empl_rcd = &j.empl_rcd
and hb2.plan_type = &hb1.plan_type
and hb2.coverage_elect <> 'T'
and hb2.coverage_begin_dt = (select max(coverage_begin_Dt)
                               from ps_health_benefit
                              where emplid = hb2.emplid
                                and empl_rcd = hb2.empl_Rcd
                                and plan_type = &hb1.plan_type
                                and coverage_elect <> 'T'
                                and coverage_begin_dt <= &hb1.coverage_begin_dt)
end-select

end-procedure

begin-procedure select-prev-benefitfsa-plan          !isdvdzk added it for including plantype 60 and 6Z on 08-aug-2008 START *
let $prev_benefit_plan = ' '
begin-select
fb2.benefit_plan

  move &fb2.benefit_plan to $prev_benefit_plan

from ps_fsa_benefit fb2
where fb2.emplid = &j.emplid
and fb2.empl_rcd = &j.empl_rcd
and fb2.plan_type = &hb1.plan_type
and fb2.coverage_elect <> 'T'
and fb2.coverage_begin_dt = (select max(coverage_begin_Dt)
                               from ps_fsa_benefit
                              where emplid = fb2.emplid
                                and empl_rcd = fb2.empl_Rcd
                                and plan_type = &hb1.plan_type
                                and coverage_elect <> 'T'
                                and coverage_begin_dt <= &hb1.coverage_begin_dt)
end-select

end-procedure                                         !isdvdzk added it for including plantype 60 and 6Z on 08-aug-2008 END *



Begin-Procedure P210-After-Benefit-Program-Break
#debug9 Show 'P210-After-Benefit-Program-Break'
  New-Page
  let #address_line = 2 
  let #bplan_line = 0
   
End-Procedure


Begin-Procedure P220-Print-Record
#debug9 Show 'P220-Print-Record'

 !Do Format-DateTime(&hb1.coverage_elect_dt, $elect_dt, {DEFMDY}, '', '') 
 Let $elect_dt = edit(&hb1.coverage_elect_dt,'mm/dd/yy') 
 !Do Format-DateTime(&hb1.coverage_begin_dt, $begin_dt, {DEFMDY}, '', '') 
 Let $begin_dt = edit(&hb1.coverage_begin_dt,'mm/dd/yy') 
 if $employee_print = 'Y'
  !Do Format-DateTime(&pd.orig_hire_dt, $orig_hire_dt, {DEFMDY}, '', '')	!GEX-CXB Commented for Upgrade 9.0 on 10/23/2007
  !Do Format-DateTime(&INST.orig_hire_dt, $orig_hire_dt, {DEFMDY}, '', '')	!GEX-CXB Added for Upgrade 9.0 on 10/23/2007
  Let $orig_hire_dt = edit(&INST.orig_hire_dt,'mm/dd/yy') 
  Let $Address3 = Rtrim(&pd.city, ' ') || ', ' || Rtrim(&pd.state, ' ') || '  ' || &pd.postal
  Lookup XlatLookup &j.empl_status $Empl_Status_XlatValue
  
  if #address_line >= #bplan_line 
     let #address_line = #address_line + 2  
  else
     let #address_line = #bplan_line + 2
  end-if
!SXK 03/15/99 Begin
 ! if #address_line > 51                           !VENDRBC Commented for Upgrade 9.0 on
  if #address_line > 30                            !VENDRBC Commented for Upgrade 9.0 on
   let #address_line =  2  
    let #bplan_line = 0
     new-page
   end-if
!SXK 03/15/99 End
  
  display &j.emplid
  display #address_line
  Print &pd.name               (#address_line,{#column1},030)    !VENDRBC Commented for Upgrade 9.0 on
  Print &pd.address1           (,{#column2})
  Print &j.emplid              (,{#column3}) !Edit xxx-xx-xxxx !GEX_SEC_REENG 2015-06-24 Vahini Katta
  Print $orig_hire_dt          (,{#column4})
  Print $elect_Dt              (,{#column5})
  Print $Empl_Status_XlatValue (,{#column6})
  print $begin_Dt              (,{#column7})
  print $Prev_benefit_plan     (,{#column8})
  let #bplan_line = #address_line
  If Rtrim(&pd.address2, ' ') <> ''
    Print &pd.address2         (+1,{#column2})
   let #address_line = #address_line + 1 
   End-If

  Print $Address3              (+1,{#column2}) 
  let #address_line = #address_line + 1 
  let $employee_print = 'N'
 else
  let #bplan_line = #bplan_line + 1 
!SXK 03/15/99 Begin
  !if #bplan_line > 51     !VENDRBC Commented for Upgrade 9.0 on
  if #bplan_line > 30     !VENDRBC Commented for Upgrade 9.0 on
     let #bplan_line = 2
     let #address_line = 0
     new-page                                   
 end-if
  
!SXK 03/15/99 End
  display #bplan_line
  print $elect_dt (#bplan_line,{#column5})
  print $begin_dt (,{#column7})
  print $prev_benefit_plan (,{#column8})
 end-if
End-Procedure


Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc
  Show 'Successful end of report'
End-Procedure


begin-procedure Ask-From-Thru-Date
  display ''
  display 'You may restrict this report to a specified range of dates, choose'
  display 'the value from the options below or press enter to accept the default:'
  display ''
  display '   A = All Dates (default)'
  display '   S = Specify a date range'
  display ''

  input $Answer maxlen=1 'Enter your From/Thru date range selection'
  uppercase $Answer

  do Get-Date-Values
end-procedure


begin-procedure Get-Date-Values
  if $Answer = 'A' or $Answer = ''
     do P150-Get-Last-Pay-End-Dt
     goto Finish
  end-if

  do Get-Dates

  while $DateOK <> 'Y'
     do Get-Dates
  end-while

  Finish:

  do Format-DateTime($FromDate, $out1, {DEFDATE}, '', '')
  do Format-DateTime($ThruDate, $out2, {DEFDATE}, '', '')

  display 'Report Value:  ' noline
  display $out1 noline
  display ' thru ' noline
  display $out2
end-procedure


begin-procedure Get-Dates
  move 'Y' to $DateOK

  if $FromDateOK <> 'Y'
     display ''
     display 'Enter the ''From'' Date ({Prompt-Date}) for this report or press'

     input $FromDate 'enter to default the ''From'' date to 01/01/00'

     if $FromDate = ''
        move $Century_Begin_Dt to $FromDate
     else
        move {PDelimiter} to $DDelimiter
        do Format-DateTime($FromDate,$FromDate,{Prompt-Mask},'','native')
     end-if

     do Validate-Native-Date($FromDate,$DateOK)

     if $DateOK = 'N'
         display '**** This is an invalid date, please reenter ****'
     end-if
  end-if

  if $DateOK = 'Y'
     move 'Y' to $FromDateOK
     display ''
     display 'Enter the ''Thru'' Date ({Prompt-Date}) for this report or press'

     input $ThruDate 'enter to default the ''Thru'' Date to today''s date'

     if $ThruDate = ''
        move $AsOfToday to $ThruDate
     else
        move {PDelimiter} to $DDelimiter
        do Format-DateTime($ThruDate,$ThruDate,{Prompt-Mask},'','native')
     end-if

     do Validate-Native-Date($ThruDate,$DateOK)

     if $DateOK = 'N'
         display '**** This is an invalid date, please reenter ****'
     end-if

     if $DateOK = 'Y'
        do Check-Dates
     end-if
  end-if
end-procedure


begin-procedure Check-Dates
  do Format-DateTime($FromDate,$out1,{DEFCMP},'','')
  do Format-DateTime($ThruDate,$out2,{DEFCMP},'','')
  if $out1 > $out2
    display ''
    display 'From Date can not be greater than Thru Date'
    move 'N' to $DateOK
    move 'N' to $FromDateOK
  end-if
end-procedure


#include 'validdt.sqc'   ! Validate date routine
#Include 'gexxx911.sqc'  !Get Benefit Program Multiples Run Controls
#include 'gexxx920.sqc'  !Get ben single row run control
#include 'getcodta.sqc'  !Get Get-Company-Data Procedure
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
