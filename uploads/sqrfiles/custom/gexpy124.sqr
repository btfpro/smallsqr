!***********************************************************************
! GEXPY124:  This program prints out a report of year-end deduction    * 
!            balances    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!  $Date:: 9/10/97 07:00A       $                                      *
!  $Revision:: 01               $                                      *
!  $Workfile:: GEXPY124.SQR     $                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  xxxx    CWB         11/27/2000     INITIAL CREATION                 *
!                                     Adapted from GEXPY001.           *
! GEX_SEC_REENG Vahini Katta 09/18/2016                                *
! Changes related to SSN Conversion
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-setup

#include 'setup32a.sqc' 

declare-report detail-report
Printer-Type=HPLASERJET
  layout=DEFAULT
end-declare

declare-report summary-report
Printer-Type=HPLASERJET
  layout=DEFAULT
end-declare

end-setup

!*********************************************************************
!Initial processing, retrieving current dates and calls the main 
!procedure to do the processing.                                     
!*********************************************************************

begin-report
!  use-report deduction-report

  do Init-DateTime
  do Init-Number
  do stdapi-init
  do Get-Calendar-Year-Id

  do Get-Current-DateTime
  do Report
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term
  !*do Reset
end-report

!*********************************************************************
!If this Program is being executed through process scheduler, 
!the run control parameters and calls the main processing procedure.
!Otherwise, interrogates the user for the run control parameters and 
!validates them. If the run control parameters are invalid, stops the
!execution.
!*********************************************************************
begin-procedure Report

 date-time () hh:mi:ss &timeBegan
 display 'Report Began: ' noline
 display &timeBegan

 move 'N' to $Errorfound

  if $prcs_process_instance = ''
      input $rnctl_date 'Enter Run Control Date({Prompt-Date}): ' type=char
      do format-datetime($rnctl_date,$rnctl_date,{prompt-mask},'','native')
      if rtrim($rnctl_Date,' ') = ''
	 let $rnctl_date = $asoftoday
      end-if

       Input $in_year Maxlen=4 'Enter 4 Digit Balance Year (required).' type=char
	 While Rtrim($In_year,' ') = ''
           Input $in_year Maxlen=4 'Enter 4 Digit Balance Year (required).' type=char
         end-while
       let $GEXXX900_INCLUDE_COMPANY_CRITERIA = '1=1'
       Display 'Enter Company or leave blank to exit.'
       while 1=1 
	 Input $In_Company Maxlen=3 'Company'
	 Uppercase $In_Company
	 If Rtrim($In_Company, ' ') = ''
             break
         else
             Let $GEXXX900_Company_Alias  = 'A.COMPANY'
	     Let $Include_Condition = '(' || $GEXXX900_Company_Alias || ' = '''  || $In_Company || ''')'
            Add 1 To #GEX_RC_COMPANY_ROWS
	    If #GEX_RC_COMPANY_ROWS = 1
	       Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = '(' || $Include_Condition
	    Else
	       Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = $GEXXX900_INCLUDE_COMPANY_CRITERIA || ' Or '  || $Include_Condition 
	    End-If
          end-if
        end-while

       If #GEX_RC_COMPANY_ROWS = 0
          Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = '1=1'
       Else
          Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = $GEXXX900_INCLUDE_COMPANY_CRITERIA || ')'
       End-if

   show '$GEXXX900_INCLUDE_COMPANY_CRITERIA: ' $GEXXX900_INCLUDE_COMPANY_CRITERIA

   display '**************************************'
   display '*     1. Summary Report              *'
   display '*     2. Detail  Report              *'
   display '**************************************'     
   input $Option maxlen=1 'Select Report Option:' type=integer
   move $option to #option
   
   while #option  <> 1
     and #option <> 2
     display 'Report Option must be 1 or 2!!'
     input $Option maxlen=1 'Select Report Option:' type=integer 
     move $option to #option
   end-while

  else
   !get parameters from single row run control record 
       Do GEXXX922-Select-Parameters
          let $rnctl_date = $GEX_RC_PAY.ASOFDATE
            if Rtrim($rnctl_date,' ') = ''
              let $rnctl_date = $asoftoday
            end-if
	  let $in_year = #GEX_RC_PAY.Balance_Year
          let $option = $GEX_RC_PAY.Option_ID 
          move $option to #option  
       Let $GEXXX900_Company_Alias  = 'A.COMPANY'
       Do GEXXX900-Select-Company-Parameters 
 
! if $sev-error = 'Y'
!    goto report-exit
! end-if
end-if  

  if #option = 1
    use-report summary-report
    move 'PY124SUM' to $ReportID
    move 'Year-end General Deduction Summary Report' to $ReportTitle
    do print-cover-page
    do process-summary-data
  else 
  if #option = 2
    use-report detail-report
    move 'PY124DET' to $ReportID
    move 'Year-end General Deduction Detail Report' to $ReportTitle
    do print-cover-page
    do process-detail-data
  end-if
  end-if

Report-Exit:

  date-time () hh:mi:ss &timeProcess
  display ' Process Ended: ' noline
  display &timeProcess

end-procedure

!***********************************************************************
begin-procedure Print-Cover-Page
!***********************************************************************
#debug9 show 'Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$ReportID:'                                              (+2,5) 
  Print  $ReportID                                                (0,+2)
  Print  $reportTitle                                             (0,+2)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)


  Print '$As Of Date                                          ='   (+1,5)
  Print  $rnctl_date                                               (0,+2)


  Print '$GEXXX900_Include_Company_Criteria                   ='   (+1,5)
  Print  $GEXXX900_Include_Company_Display_Criteria                (0,+2)


  Let #PAGE-COUNT = 0

  new-page
 
End-Procedure

!*********************************************************************
!Prints the header information in the report.
!*********************************************************************

begin-heading 6 for-reports=(summary-report)

#Include 'stdhdg01.sqc'

!********************************

  print 'COMPANY' (+1,4) BOLD
  print 'DEDCD'    (,12) BOLD
  print 'CLASS'    (,21) BOLD
  print 'AMOUNT'   (,33) BOLD
  print '-'       (+1,4,39) BOLD FILL  
end-heading

begin-heading 6 for-reports=(detail-report)

#Include 'stdhdg01.sqc'

!********************************

  print 'EMPLID ' (+1,6) BOLD
  print 'COMPANY'  (,16) BOLD
  print 'DEDCD'    (,27) BOLD
  print 'CLASS'    (,36) BOLD
  print 'AMOUNT'   (,46) BOLD
  print '-'       (+1,4,50) BOLD FILL  
end-heading

!*********************************************************************
!Prints the footer in the report
!*********************************************************************

begin-footing 1 for-reports=(detail-report,summary-report)
page-number (1,123) 'Page '  
last-page () ' of ' '.'

end-footing

!*********************************************************************
!This is the main processing control procedure.  
!********************************************************************* 

begin-procedure process-detail-data

  move 'N' to $found
  move 'N' to $company_change

Begin-select  on-error=sql-error-found('process-detail-data')
a.company  
a.emplid
a.dedcd         
a.ded_class     
a.ded_ytd  

   move 'Y'          to $found
   let $emplid       =  &a.emplid

   let $company      =  &a.company
    
   if Rtrim($prev_company,' ') = ''
     let $prev_company =  $company
   end-if

   if $company       <> $prev_company
     new-page
   end-if
   let $prev_company =  $company

   let $dedcd        = &a.dedcd 
   let $ded_class    = &a.ded_class
   move &a.ded_ytd     to #ded_ytd 
   move #ded_ytd     to $ded_ytd 99,999,999.99

   do print-detail-line

FROM PS_DEDUCTION_BAL A
WHERE A.BALANCE_ID = 'CY'
  AND A.BALANCE_YEAR = $in_year
  and [$GEXXX900_INCLUDE_COMPANY_CRITERIA] 
  and balance_period=(select max(balance_period) from ps_deduction_bal
		      where a.emplid=emplid
		      and a.company=company
		      and a.plan_type=plan_type
		      and a.benefit_plan=benefit_plan
		      and a.balance_id=balance_id 
		      and a.balance_year=balance_year
		      and a.dedcd=dedcd 
		      and a.ded_class=ded_class)
group by a.company, a.dedcd, a.emplid,a.ded_class, a.ded_ytd
order by a.company, a.dedcd,  a.emplid
end-select

end-procedure
!*******************************************************************************************
begin-procedure process-summary-data

  move 'N' to $found
  move 'N' to $company_change

Begin-select  on-error=sql-error-found('process-summary-data')
a.company       &company
a.dedcd         &dedcd     
a.ded_class     &ded_class    
sum(a.ded_ytd)  &ded_sum

   move 'Y'          to $found
   let $company      =  &company

   if Rtrim($prev_company,' ') = ''
     let $prev_company =  $company
   end-if

   if $company       <> $prev_company
     new-page
   end-if
   let $prev_company =  $company

   let $dedcd        = &dedcd 
   let $ded_class    = &ded_class
   move &ded_sum     to #ded_sum 
   move #ded_sum     to $ded_sum 99,999,999.99

   do print-summary-line

FROM PS_DEDUCTION_BAL A
WHERE a.BALANCE_ID = 'CY'
  AND a.BALANCE_YEAR = $in_year
  and [$GEXXX900_INCLUDE_COMPANY_CRITERIA] 
  and balance_period=(select max(balance_period) from ps_deduction_bal
		      where a.emplid=emplid
		      and a.company=company
		      and a.plan_type=plan_type
		      and a.benefit_plan=benefit_plan
		      and a.balance_id=balance_id 
		      and a.balance_year=balance_year
		      and a.dedcd=dedcd 
		      and a.ded_class=ded_class)
group by a.company, a.dedcd, a.ded_class
order by a.company, a.dedcd, a.ded_class
end-select

end-procedure
!*********************************************************************
!Prints the report line.
!*********************************************************************

begin-procedure print-summary-line
  print $company          (+1,6)
  print $dedcd            (0,12)
  print $ded_class        (0,23)
  print $ded_sum          (0,30)
end-procedure
!*********************************************************************

begin-procedure print-detail-line
  print $emplid           (+1,4)
  print $company          (0,16)
  print $dedcd            (0,27)
  print $ded_class        (0,38)
  print $ded_ytd          (0,40)
end-procedure

!*********************************************************************
!Retrieves the Company Description from the database
!*********************************************************************

begin-procedure get-company-desc

move ' ' to $company_desc

begin-select on-error=sql-error-found('get-company-desc')
J.DESCR

  move &J.DESCR to $company_Desc

from PS_COMPANY_TBL J

WHERE J.COMPANY = $COMPANY
  AND J.EFFDT =
      (SELECT MAX(EFFDT)
	 FROM PS_COMPANY_TBL
	WHERE COMPANY = $COMPANY)
end-select

end-procedure

!*********************************************************************
!Retrieves the Paygroup Description from the database
!*********************************************************************

begin-procedure get-paygroup-desc

move ' ' to $paygroup_desc

begin-select on-error=sql-error-found('get-paygroup-desc')
JJ.DESCR

  move &JJ.DESCR to $paygroup_Desc

from PS_PAYGROUP_TBL JJ

WHERE JJ.PAYGROUP = $PAYGROUP
  AND JJ.EFFDT =
      (SELECT MAX(EFFDT)
	 FROM PS_PAYGROUP_TBL
	WHERE PAYGROUP = $paygroup)
end-select

end-procedure

!*********************************************************************
!Retrieves the Department Description from the database
!*********************************************************************

begin-procedure get-dept-desc

move ' ' to $dept_Desc
DISPLAY 'Department:'
display $deptid
begin-select on-error=sql-error-found('get-dept-desc')
K.DESCR

   move &K.DESCR to $dept_desc
   display $dept_Desc
FROM PS_DEPT_TBL K

WHERE K.DEPTID = $DEPTID
  AND K.EFFDT =
       (SELECT MAX(EFFDT)
	  FROM PS_DEPT_TBL 
	 WHERE DEPTID = $DEPTID)
end-select

end-procedure

!*********************************************************************
!Validates the Deduction code against the database
!*********************************************************************

begin-procedure edit-ded
move 'N' to $found

begin-select on-error=sql-error-found('Edit-Ded')
L.DESCR
  move &L.DESCR to $ded_desc
  move 'Y' to $found
FROM PS_DEDUCTION_TBL L
WHERE L.DEDCD = $In_Ded
  AND L.EFFDT = 
      (SELECT MAX(EFFDT)
	 FROM PS_DEDUCTION_TBL 
	WHERE DEDCD = $In_Ded)
end-select

end-procedure

!*********************************************************************
!Validates the Sorting Option 
!*********************************************************************

begin-procedure edit-option
move 'N' to $found

Evaluate #Option
   when = 1
       move 'Y' to $found
       move 'Order By Account Code' to $option_desc 
       break
   when = 2
       move 'Y' to $found
       move 'Order By Union Code' to $option_desc 
       break
   when = 3
       move 'Y' to $found
       move 'Order By Name' to $option_desc 
       break
   when-other
       break
End-Evaluate

end-procedure


!*********************************************************************
!Retrieves the run control parameters from the database
!*********************************************************************

begin-procedure select-parameters

!move 'N' to $found

!begin-select on-error=sql-error-found('select-parameters')
!RC.DEDCD
!RC.OPTION
!      move 'Y' to $found

!from PS_xxxxxx RC

!WHERE RC.OPRID          = $Prcs_OprID
!AND   RC.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID

!end-select

!if $found = 'N'
!   display 'No rows found in Run control table'
!end-if

end-procedure

!*********************************************************************
!Validates the company information
!*********************************************************************

begin-procedure Edit-Company
  move 'N' to $Found

begin-select ON-ERROR=SQL-Error-Found('Edit-Company')

'f'
  move 'Y' to $Found

FROM PS_COMPANY_TBL com, PS_JOB J 
WHERE com.COMPANY = $In_Company
  AND com.EFFDT =
	    (SELECT MAX(EFFDT)
	     FROM PS_COMPANY_TBL
	     WHERE COMPANY = $In_Company)
end-SELECT

end-procedure

!*********************************************************************
!Validates the store information
!*********************************************************************

begin-procedure Edit-Deptcd

  move 'N' to $Found

begin-SELECT ON-ERROR=SQL-Error-Found('Edit-Deptcd')
'S' 
	move 'Y' to $Found
	
FROM PS_DEPT_TBL DEPT
WHERE DEPT.DEPTID = $In_deptcd
  AND DEPT.EFF_STATUS = 'A'
  AND DEPT.EFFDT =
	    (SELECT MAX(EFFDT)
	     FROM PS_DEPT_TBL
	     WHERE DEPTID = $In_deptcd
	       AND EFF_STATUS = 'A')
end-SELECT

end-procedure

!*********************************************************************
!Displays the error messages and stops execution
!*********************************************************************
 
begin-procedure SQL-Error-Found($Proc_Name) 
  do error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 

  STOP

end-procedure


!*********************************************************************
!Displays the employee id that failed 
!*********************************************************************

begin-procedure Error-Found
  move 'Y' to $ErrorFound
  do Format-Number(#InputTran, $out, '99999')
  display $out 
 ! GEX_SEC_REENG Vahini Katta 09/18/2016 Begins
  !let $EmplId_1st3 = substr($EmplId,1,3)
  !let $EmplId_mid2 = substr($EmplId,4,2)
  !let $EmplId_last4 = substr($EmplId,6,4)
 
  !String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  !display $EmplID11 
  display $EmplId
 ! GEX_SEC_REENG Vahini Katta 09/18/2016 Ends 
end-procedure

#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
!*#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
  
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table

#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexaltse.sqc'  ! Alter session SQC
