!***********************************************************************
! GEXBN628:           HEALTH MANAGEMENT CORPORATION                    *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXBN628 :            HEALTH MANAGEMENT CORPORATION                  *
!                                                                      *        
! Narrative:            This program creates a file having data of     *
!                       employees and their dependents enrolled  in    *
!			Medical Plan with Health Management Corporation*  
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                                                                      *  
! SQL Tables:           PS_JOB                                         *
!                       PS_HEALTH_BENEFIT                              *
!                       PS_PERSONAL_DATA                               *
!                       PS_BEN_PROG_PARTIC                             *
!                       PS_DEPENDENT_BENEF                             *
!                       PS_DEP_BENEF_NID                               *
!                                                                      *                      
!                                                                      *
! Written by:           Sumit Nandecha                                 *       
!                                                                      *
! Normally Run:         Monthly                                        *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS      DATE            DESCRIPTION OF THE CHANGE              *
!***********************************************************************
! GXX-TLL       05/23/2008      HCM 9.0 Retrofitting                   *
! VENDTKK       08/22/2008      Changed the naming convention of file  *
! ISDVMXD	01/13/2009      Added selection criteria as per ITG 56520 *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)

Begin-Setup
 Declare-Variable
   date $Asofdate_dt_format
   date $Hire_Dt_format
   date $check_date 		!isdvmxd added for ITG 56520 on 03/02/2009
   date $AsOfDate		!isdvmxd added for ITG 56520 on 03/02/2009
 End-Declare
End-Setup

Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
  
End-Report

!****************************************************************************
Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc
  
  Let $ReportID      = 'GEXBN628'
  Let $ReportTitle   = 'MEMBERSHIP FILE FOR HEALTH MANAGEMENT CORPORATION'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime
    
  If $prcs_process_instance = ''
     Do P110-SQRW-Run-Controls
  Else
     Do P120-Process-Scheduler-Run-Controls
  End-if

  Show '$AsOfDate                                           = ' $AsOfDate
  !Let $File_Dt = edit($AsOfDate,'mmddyy')    !VENDTKK ITG#51612  22-Aug-2008 commented
  Let $File_Dt = edit($AsOfDate,'YYYYMMDD')    !VENDTKK ITG#51612  22-Aug-2008
  Do P140-Open-File
  !Let $File_Hdr = 'GiantEagleMembership' || $File_Dt  !VENDTKK ITG#51612  22-Aug-2008 commented
 Let $File_Hdr = 'GiantEagle_Member_' || $File_Dt  !VENDTKK ITG#51612  22-Aug-2008
  Do Write-Header
  encode '<009>' into $tab  
  encode ' ' into $space  
End-Procedure

!****************************************************************************
Begin-Procedure P110-SQRW-Run-Controls
#debug9 Show 'P110-SQRW-Run-Controls'
  Do Ask-As-Of-Date
  Let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate
 
End-Procedure

!****************************************************************************
Begin-Procedure P120-Process-Scheduler-Run-Controls
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXRCBN1-SELECT-PARAMETERS
 
  Let $AsOfDate = &GEX_RC_BEN.AsOfDate
  SHOW '&GEX_RC_BEN.AsOfDate: ' &GEX_RC_BEN.AsOfDate
  If ltrim(Rtrim(&GEX_RC_BEN.AsOfDate, ' '),' ') = ''
     Let $AsOfDate = $AsOfToday
     SHOW '$AsOfDate: ' $AsOfToday  
  End-If
End-Procedure

!****************************************************************************
Begin-Procedure P140-Open-File
#debug9 Show 'P140-Open-File'
   Let $Member_File = '{OUTFILE}' || Lower($ReportID) || '.dat'
   !LET $Member_File = 'U:\psoft\working\vendsxn\ITG 48152\6-May\' || Lower($ReportID) || '.dat'
   show '$Member_File: '   $Member_File	!vendsxn Added for Testing
   OPEN $Member_File as 1 for-writing record=480:vary status = #Open_mem
   
    
   if (#Open_mem <> 0)
      let $Error-Message = 'PROGRAM ABORTED - Problem opening file : ' || $Member_File
      show $Error-Message
      STOP
   end-if
   
   !VENDTKK Begin
    Let $Member_File_Copy= '{OUTFILE}' || Lower($ReportID) || '.xls'
      OPEN $Member_File_Copy as 2 for-writing record=480:vary status = #Open_mem_cp
   
    
   if (#Open_mem_cp <> 0)
      let $Error-Message = 'PROGRAM ABORTED - Problem opening file : ' || $Member_File_Copy
      show $Error-Message
      STOP
   end-if
   !VENDTKK End
End-Procedure

!****************************************************************************
Begin-Procedure Write-Header
   
   write 1 from 
         ' ':33
         $File_Hdr:30
         
   write 1 from ' '
   
    !VENDTKK Begin
     string $space $space $space $space $space  '                                              ' $File_Hdr by $tab into $write_row 
            
    Write 2 from $write_row Status=#filestat	
    
    string $space by $tab into $write_row 
    
    Write 2 from $write_row Status=#filestat	
   !VENDTKK End
End-Procedure Write-Header

!****************************************************************************
Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
	Let $Data-Found-Flag = 'N'
	Let #Tot_Rec_Cnt = 0
	Let #Member_Cnt = 0
	Let $service_month_flag = 'N'
Begin-Select DISTINCT
A.EMPLID
A.EMPL_RCD
!A.EFFDT
A.EFFSEQ
!A.EMPL_STATUS
!A.COMPANY
!A.BENEFIT_PROGRAM !GEX-TLL 05/23/2008
POI.ORIG_HIRE_DT			!ISDVMXD added for ITG 56520 on 01/13/2009 
A.HIRE_DT				!ISDVMXD added for ITG 56520 on 03/06/2009 

   Let $Data-Found-Flag = 'Y'
   
   Do Initialize-Variables
   Do Initialize-Dep-Var
   
   Let $Emplid 		=  &A.EMPLID
   show '$Emplid: '$Emplid	!vendsxn Testings
   Let $Empl_Rcd 	=  &A.EMPL_RCD
   !Let $Job_Effdt 	=  &A.EFFDT
   Let $Effseq 	 	=  &A.EFFSEQ
   !Let $Empl_Status     =  &A.EMPL_STATUS
   !Let $Company         =  &A.COMPANY
   !Let $Benefit_Prog    =  &A.BENEFIT_PROGRAM !GEX-TLL 05/23/2008
   Let $Orig_Start_Dt = &POI.ORIG_HIRE_DT		!ISDVMXD added for ITG 56520 on 01/13/2009 
   Let $Hire_Dt = edit(&A.HIRE_DT,'YYYYMMDD')		!ISDVMXD added for ITG 56520 on 03/06/2009
   Show 'Hire Date = ' $Orig_Start_Dt	!ISDVMXD added for ITG 56520 on 01/13/2009 
   
   Do Check-Hire-Date-Criteria		!ISDVMXD added for ITG 56520 on 01/13/2009 
   
   If $service_month_flag = 'Y'		!ISDVMXD added for ITG 56520 on 01/13/2009
   
   	Let $Hlth_Ben_Found = 'N'
   	Let #Hlth_Row_Cnt = 0
   	!Let $PT_10 = 'N'
   	!Let $PT_1Y = 'N'
   	Let $PT_E_10 = 'N'
   	Let $PT_E_1Y = 'N'
   	Let $PT_W_10 = 'N'
   	Let $PT_W_1Y = 'N'
   	!show '$PT_E_10: '$PT_E_10	!Vendsxn Testing
   	!show '$PT_E_1Y: '$PT_E_1Y
   	!show '$PT_W_10: '$PT_W_10
   	!show '$PT_W_1Y: '$PT_W_1Y
   	Do Chk-Hlth-Benefit
   	Do Chk-DP-Hlth
   	If $Hlth_Ben_Found = 'N'
	   !Let $Hlth_Ben_Effdt = $Hire_Dt	!ISDVMXD added for ITG 56520 on 03/06/2009	   		
   	   Do Get-Employee-Data
   	   Do Write-File
   	End-If  
   	  
   End-If				!ISDVMXD added for ITG 56520 on 01/13/2009
   
FROM PS_JOB A,PS_PER_ORG_INST POI	!ISDVMXD modified for ITG 56520 on 01/14/2009
WHERE A.EMPLID = POI.EMPLID		!ISDVMXD added for ITG 56520 on 01/14/2009
AND A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        	WHERE A.EMPLID = A_ED.EMPLID
          	AND A.EMPL_RCD = A_ED.EMPL_RCD
          	AND A_ED.EFFDT <= $AsOfDate)
AND A.EFFSEQ = (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        	WHERE A.EMPLID = A_ES.EMPLID
          	AND A.EMPL_RCD = A_ES.EMPL_RCD
          	AND A.EFFDT = A_ES.EFFDT)
AND A.EMPL_STATUS IN ('A','L','P','S') !Active Team Members
AND A.COMPANY > '999' !Excluding Independents

!AND A.HIRE_DT >= 
!AND A.EMPLID IN ('020629257','162663724','176609338','190624817','175684432','187487313','190269944','205467902','163585465') !LIKE '170%'	!TESTING
!AND A.EMPLID IN ('180609822','282408704','174681646','300569969','166567677')!,'180462745','165729053','167483802') !ISDVMXD added for testing ITG 56520
ORDER BY A.EMPLID
End-Select
End-Procedure

!**************************************************************************
!ADDED BY ISDVMXD FOR ITG 56520 on 01/13/2009 -- Begin
Begin-Procedure Check-Hire-Date-Criteria

	Let $service_month_flag = 'N'	
	
	Show 'In Check-Hire-Date-Criteria'
	Show 'As of date = ' $AsOfDate
	!Let $check_date = dateadd(&POI.ORIG_HIRE_DT,'Month',6) 	!isdvmxd added for ITG 56520 on 03/02/2009
	!Show 'check date = ' $check_date
	If datediff($AsOfDate,&POI.ORIG_HIRE_DT,'Month') >= 6	!isdvmxd added for ITG 56520 on 03/02/2009
		Let $service_month_flag = 'Y'
	End-If
	Show '$service_month_flag = ' $service_month_flag

End-Procedure Check-Hire-Date-Criteria
!ADDED BY ISDVMXD FOR ITG 56520 on 01/13/2009 -- End

!**************************************************************************

Begin-Procedure Chk-Hlth-Benefit
!show 'Inside pRoc Chk-Hlth-Benefit'	!Vendsxn Testing
Begin-Select
B.COBRA_EVENT_ID
B.PLAN_TYPE
B.BENEFIT_NBR
B.EFFDT
B.COVERAGE_BEGIN_DT
B.COVERAGE_ELECT
!B.BENEFIT_PLAN

   Do Get-Employee-Data
   Do Init-Dep-Var
   Let $Hlth_Ben_Found = 'Y'
   Let #Hlth_Row_Cnt = #Hlth_Row_Cnt + 1
   
   Let #Cobra_Event_ID  =  &B.COBRA_EVENT_ID
   Let $Plan_Type 	=  ltrim(rtrim(&B.PLAN_TYPE,' '),' ')
   !show '$Plan_Type; '$Plan_Type	!Vendsxn Testing
   Let #Benefit_Nbr 	=  &B.BENEFIT_NBR
   Let $Hlth_Cvrg_Effdt = &B.EFFDT
   !show '$Hlth_Cvrg_Effdt: '$Hlth_Cvrg_Effdt	!Vendsxn Testing
   Let $Hlth_Ben_Effdt 	=  edit(&B.COVERAGE_BEGIN_DT,'YYYYMMDD')
   !show '$Hlth_Ben_Effdt: '$Hlth_Ben_Effdt	!Vendsxn Testing
   !Let $Cvrg_Bgn_Dt 	=  &B.COVERAGE_BEGIN_DT
   Let $Cvrg_Elect 	=  ltrim(rtrim(&B.COVERAGE_ELECT,' '),' ')
   !show '$Cvrg_Elect: '$Cvrg_Elect	!Vendsxn Testing
   
   If $Cvrg_Elect <> 'E'
      !Let $Hlth_Ben_Effdt = $Srvc_Dt		!isdvmxd commented for ITG 56520 on 03/06/09
      Let $Hlth_Ben_Effdt = $Hire_Dt	!isdvmxd modified for ITG 56520 on 03/06/09
   !isdvmxd added for ITG 56520 on 03/03/09 - BEgin   
   !Else      
   	!If $Cvrg_Elect = 'W'
   	   ! Let $Hlth_Ben_Effdt = $Orig_Start_Dt
   	!End-If
   !isdvmxd added for ITG 56520 on 03/03/09 - End	   	
   End-If

   If $Plan_Type = '10' AND $Cvrg_Elect = 'E'
      Let $PT_E_10 = 'Y'
      Do Write-File
         Let #Dep_Count = 0
         Do Chk-Hlth-Dependent
   Else
      If $Plan_Type = '1Y' AND $Cvrg_Elect = 'E' AND $PT_E_10 = 'N'
         Let $PT_E_1Y = 'Y'
         Do Write-File
         Let #Dep_Count = 0
         Do Chk-Hlth-Dependent
      Else
         If $Plan_Type = '10' AND $Cvrg_Elect = 'W' AND $PT_W_1Y = 'N'
            Let $PT_W_10 = 'Y'
            Do Write-File
         Else
            If $Plan_Type = '1Y' AND $Cvrg_Elect = 'W' AND $PT_W_10 = 'N'
               Let $PT_W_1Y = 'Y'
               Do Write-File
            !Else
              !If $Plan_Type = '10' AND $Cvrg_Elect <> 'E' AND $Cvrg_Elect <> 'W' AND $PT_W_1Y = 'N' AND $PT_E_1Y = 'N'
              !If $Plan_Type = '10' AND $Cvrg_Elect <> 'E' AND $Cvrg_Elect <> 'W' AND $Cvrg_Elect <> 'T' AND $PT_W_1Y = 'N' AND $PT_E_1Y = 'N'
                 !Let $PT_10 = 'Y'
                 !Do Write-File
              !Else
                 !If $Plan_Type = '1Y' AND $Cvrg_Elect <> 'E' AND $Cvrg_Elect <> 'W' AND $PT_10 = 'N'
                 !If $Plan_Type = '1Y' AND $Cvrg_Elect <> 'E' AND $Cvrg_Elect <> 'W' AND $Cvrg_Elect <> 'T' AND $PT_10 = 'N'
                    !Let $PT_1Y = 'Y'
                    !Do Write-File
                 !End-If
              !End-If
            End-If
         End-if      
      End-If  
   End-If
   
      !show '$PT_E_10: '$PT_E_10	!Vendsxn Testing
      !show '$PT_E_1Y: '$PT_E_1Y
      !show '$PT_W_10: '$PT_W_10
      !show '$PT_W_1Y: '$PT_W_1Y
   
FROM PS_HEALTH_BENEFIT B
WHERE B.EMPLID = $Emplid
AND B.EMPL_RCD = $Empl_Rcd
AND B.PLAN_TYPE IN ('10','1Y')
AND B.COVERAGE_ELECT IN ('E','W')
AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_HEALTH_BENEFIT B_ED
        	WHERE B.EMPLID = B_ED.EMPLID
          	AND B.EMPL_RCD = B_ED.EMPL_RCD
          	AND B.COBRA_EVENT_ID = B_ED.COBRA_EVENT_ID
          	AND B.PLAN_TYPE = B_ED.PLAN_TYPE
          	AND B.BENEFIT_NBR = B_ED.BENEFIT_NBR
          	AND B_ED.EFFDT <= $AsOfDate)
ORDER BY B.PLAN_TYPE ASC
End-Select
End-Procedure Chk-Hlth-Benefit
!**************************************************************************

Begin-Procedure Get-Employee-Data
!show 'Inside Procedure gEt-Employee-Data'	!Vendsxn Testing

   Let $Member_No = '000'	!Policy Holder
   !show '$Member_No: '$Member_No	!Vendsxn Testing
   Let $Relation_Print = 'S'

Begin-Select
E.SERVICE_DT

   Let $Srvc_Dt = edit(&E.SERVICE_DT,'YYYYMMDD')
   !show '$Srvc_Dt: '$Srvc_Dt	!Vendsxn Testing

FROM PS_EMPLOYMENT E
WHERE E.EMPLID = $Emplid
End-Select

   Do Get-Benef-Prog

Begin-Select
P.LAST_NAME
P.FIRST_NAME
P.MIDDLE_NAME
P.ADDRESS1
P.ADDRESS2
P.CITY
P.STATE
P.POSTAL
P.PHONE
P.SEX
!P.ETHNIC_GROUP   !VENDTLL 05/23/2008 Commented 
P.BIRTHDATE

   Let $Last_Name   = &P.LAST_NAME
   Let $First_Name  = &P.FIRST_NAME
   Let $Middle_Name = &P.MIDDLE_NAME
   Let $Addr1 	    = &P.ADDRESS1
   Let $Addr2 	    = &P.ADDRESS2
   Let $City 	    = &P.CITY
   Let $State 	    = &P.STATE
   Let $Postal 	    = &P.POSTAL
   Let $Phone 	    = &P.PHONE
   
   Unstring $Phone by '/' into $ph1 $ph2 $ph3
   Unstring $ph2 by '-' into $ph4 $ph5
   
   Let $Phone = $ph1||$ph4||$ph5
   
   Let $Sex 	    = &P.SEX
   Let $Birth_Dt = edit(&P.BIRTHDATE,'YYYYMMDD')

FROM PS_PERSONAL_DATA P
WHERE P.EMPLID = $Emplid
End-Select

Begin-Select
ET.ETHNIC_GROUP

   Let $Ethnic_Grp  = &ET.ETHNIC_GROUP
   !show '$Ethnic_Grp: '$Ethnic_Grp	!Vendsxn Testing

!GEX-TLL 05/23/2008 HCM 9.0 Begin
!From PS_GEX_ETHNIC_TBL1 ET
From PS_ETHNIC_GRP_TBL ET,
     PS_DIVERS_ETHNIC D
WHERE D.EMPLID = $Emplid
AND   D.REG_REGION = 'USA'  	
AND   D.PRIMARY_INDICATOR = 'Y' 
and D.REG_REGION = ET.SETID
and D.ETHNIC_GRP_CD = ET.ETHNIC_GRP_CD
and ET.EFFDT = (SELECT MAX(ETHNA.EFFDT)
		 FROM PS_ETHNIC_GRP_TBL ETHNA
		 WHERE ET.SETID    = ETHNA.SETID
		 AND   ET.ETHNIC_GRP_CD = ETHNA.ETHNIC_GRP_CD
		 AND   ETHNA.EFFDT    <= $AsOfDate)
!GEX-TLL 05/23/2008 HCM 9.0 End		 
End-Select

   do Get-Gex-Mapp-EmpIid ($Emplid,$emplid_out)	!VENDSXN Added
   Do Get-Emp-Ssn ($Emplid, $Ssn_out)
   !show '$emplid_out: '$emplid_out	!Vendsxn Testing
   !show '$Ssn_out: '$Ssn_out	!Vendsxn Testing
End-Procedure Get-Employee-Data
!**************************************************************************

Begin-Procedure Get-Benef-Prog
!show 'Get-Benef-Prog'	!Vendsxn Testing
Begin-Select
BP.BENEFIT_PROGRAM

   Let $Benefit_Prog = &BP.BENEFIT_PROGRAM
   !show '$Benefit_Prog: '$Benefit_Prog		!Vendsxn Testing

FROM PS_BEN_PROG_PARTIC BP
WHERE BP.EMPLID = $Emplid
AND BP.EMPL_RCD = $Empl_Rcd
!AND BP.COBRA_EVENT_ID = #Cobra_Event_ID
AND BP.EFFDT = (SELECT MAX(BP1.EFFDT) 
		FROM PS_BEN_PROG_PARTIC BP1
        	WHERE BP.EMPLID = BP1.EMPLID
          	AND BP.EMPL_RCD = BP1.EMPL_RCD
          	AND BP.COBRA_EVENT_ID = BP1.COBRA_EVENT_ID
          	AND BP1.EFFDT <= $AsOfDate)
End-Select
End-Procedure Get-Benef-Prog

!**************************************************************************

Begin-Procedure Chk-Hlth-Dependent
!show 'INSIde Proc Chk-Hlth-Dependent'	!Vendsxn Testing
Begin-Select
C.DEPENDENT_BENEF
C.EFFDT

   Do Initialize-Dep-Var
   Let $Dep_Found = 'Y'
   Let $Dep_Benef = &C.DEPENDENT_BENEF
   !show '$Dep_Benef: '$Dep_Benef	!Vendsxn Testing
   !show '$Hlth_Ben_Effdt: '$Hlth_Ben_Effdt	!Vendsxn Testing
   
   Do Get-Dependent-Data
   Do Get-Dependent-NID
   
   Do Write-File
   
FROM PS_HEALTH_DEPENDNT C
WHERE C.EMPLID = $Emplid
AND C.EMPL_RCD = $Empl_Rcd
AND C.COBRA_EVENT_ID = #Cobra_Event_ID
AND C.PLAN_TYPE  = $Plan_Type
AND C.BENEFIT_NBR = #Benefit_Nbr
AND C.EFFDT = $Hlth_Cvrg_Effdt	!(SELECT MAX(C_ED.EFFDT)	
		!FROM PS_HEALTH_DEPENDNT C_ED
        	!WHERE C.EMPLID = C_ED.EMPLID
          	!AND C.EMPL_RCD = C_ED.EMPL_RCD
          	!AND C.COBRA_EVENT_ID = C_ED.COBRA_EVENT_ID
          	!AND C.PLAN_TYPE = C_ED.PLAN_TYPE
          	!AND C.BENEFIT_NBR = C_ED.BENEFIT_NBR
          	!AND C_ED.EFFDT <= $Cvrg_Bgn_Dt)

End-Select

End-Procedure Chk-Hlth-Dependent

!**************************************************************************

Begin-Procedure Get-Dependent-Data
!show 'INside Get-Dependent-Data'	!Vendsxn Testing
Begin-Select
D.RELATIONSHIP
D.SEX
D.BIRTHDATE
D.LAST_NAME
D.FIRST_NAME
D.MIDDLE_NAME

   Let $Relation    = ltrim(rtrim(&D.RELATIONSHIP,' '),' ')
   Let $Sex         = &D.SEX
   Let $Birth_Dt    = edit(&D.BIRTHDATE,'YYYYMMDD')
   Let $Last_Name   = &D.LAST_NAME
   Let $First_Name  = &D.FIRST_NAME
   Let $Middle_Name = &D.MIDDLE_NAME

   If $Relation = 'SP'
      Let $Member_No = '001'
      !show 'SP $Member_No: '$Member_No		!Vendsxn Testing
      Let $Relation_Print = 'P'
   Else
      Let $Member_No = to_char(2 + #Dep_Count)
      !show 'Other $Member_No: '$Member_No	!Vendsxn Testing
      Let $Relation_Print = 'D'
      Let #Dep_Count = #Dep_Count + 1
   End-If

      Let $Member_No = edit($Member_No,'000')
      !show '$Edited Member_No: '$Member_No	!Vendsxn Testing
      
      !show '$Relation_Print: '$Relation_Print	!Vendsxn Testing

FROM PS_DEPENDENT_BENEF D
WHERE D.EMPLID = $Emplid
AND D.DEPENDENT_BENEF = $Dep_Benef
End-Select

End-Procedure Get-Dependent-Data

!**************************************************************************

Begin-Procedure Get-Dependent-NID
!show 'In Proc Get-Dependent-NID'	!Vendsxn Testing
Begin-Select
DB.NATIONAL_ID 

   Let $Dep_NID = &DB.NATIONAL_ID
   !show '$Dep_NID: '$Dep_NID	!Vendsxn Testing
   Let $Ssn_out = $Dep_NID

FROM PS_DEP_BENEF_NID DB
WHERE DB.EMPLID = $Emplid
AND DB.DEPENDENT_BENEF = $Dep_Benef
End-Select

End-Procedure Get-Dependent-NID

!**************************************************************************

Begin-Procedure Write-File
!show 'Writing data to file'	!Vendsxn Testing
   Let #Tot_Rec_Cnt = #Tot_Rec_Cnt + 1
   If $Member_No = '000'
      Let #Member_Cnt = #Member_Cnt + 1
   End-If
   string $space $space $Member_No $Emplid $Ssn_out $Birth_Dt $Sex $Dep_NID $Last_Name $First_Name $Middle_Name $Addr1 $Addr2 $City $State $Postal $Phone $Relation_Print $Hlth_Ben_Effdt $Benefit_Prog $Ethnic_Grp $space $emplid_out by $tab into $write_row    !VENDTKK
write 1 from
      ' ':5	!Network Code
      ' ':5	!Contract Code
      $Member_No:3	!Member No
      $Emplid:20	!Insured ID (SSN)
      $Ssn_out:9	!Policy Holder SSN / Insured ID
      $Birth_Dt:8	!Date of Birth
      $Sex:1		!Gender
      $Dep_NID:9	!Member SSN (Dependent's SSN)
      $Last_Name:20
      $First_Name:15
      $Middle_Name:1
      $Addr1:30
      $Addr2:30
      $City:20
      $State:2
      $Postal:10
      $Phone:10
      $Relation_Print:1
      $Hlth_Ben_Effdt:8	!Effective Date of Policy
      $Benefit_Prog:15	!Employee Group Number
      $Ethnic_Grp:2	!Ethnicity
      ' ':50		!EMPI
      $emplid_out:30	!Card ID (7-Digit Emplid)
      
     
      
Write 2 from $write_row Status=#filestat		!VENDTKK	

  If #filestat <> 0
     Show 'Error writing file HiPot_GS Promotion by EVP.  Program terminating.'
     Stop
  End-If

End-Procedure Write-File

!**************************************************************************
Begin-Procedure Chk-DP-Hlth
!show 'Inside pRoc Chk-DP-Hlth'	!Vendsxn Testing
Begin-Select
B1.COBRA_EVENT_ID
B1.PLAN_TYPE
B1.BENEFIT_NBR
B1.EFFDT
B1.COVERAGE_BEGIN_DT
B1.COVERAGE_ELECT

   Do Get-Employee-Data
   Do Init-Dep-Var
   
   Let #Cobra_Event_ID  =  &B1.COBRA_EVENT_ID
   Let $Plan_Type 	=  ltrim(rtrim(&B1.PLAN_TYPE,' '),' ')
   !show '$Plan_Type; '$Plan_Type	!Vendsxn Testing
   Let #Benefit_Nbr 	=  &B1.BENEFIT_NBR
   Let $Hlth_Cvrg_Effdt =  &B1.EFFDT
   !show '$Hlth_Cvrg_Effdt: '$Hlth_Cvrg_Effdt	!Vendsxn Testing
   Let $Hlth_Ben_Effdt 	=  edit(&B1.COVERAGE_BEGIN_DT,'YYYYMMDD')
   !show '$Hlth_Ben_Effdt: '$Hlth_Ben_Effdt	!Vendsxn Testing
   !Let $Cvrg_Bgn_Dt 	=  &B1.COVERAGE_BEGIN_DT
   Let $Cvrg_Elect 	=  ltrim(rtrim(&B1.COVERAGE_ELECT,' '),' ')
   !show '$Cvrg_Elect: '$Cvrg_Elect	!Vendsxn Testing
   
      Do Chk-Hlth-Dependent
   
FROM PS_HEALTH_BENEFIT B1
WHERE B1.EMPLID = $Emplid
AND B1.EMPL_RCD = $Empl_Rcd
AND B1.PLAN_TYPE = '15'
AND B1.COVERAGE_ELECT = 'E'
AND B1.EFFDT = (SELECT MAX(B_ED1.EFFDT) FROM PS_HEALTH_BENEFIT B_ED1
        	WHERE B1.EMPLID = B_ED1.EMPLID
          	AND B1.EMPL_RCD = B_ED1.EMPL_RCD
          	AND B1.COBRA_EVENT_ID = B_ED1.COBRA_EVENT_ID
          	AND B1.PLAN_TYPE = B_ED1.PLAN_TYPE
          	AND B1.BENEFIT_NBR = B_ED1.BENEFIT_NBR
          	AND B_ED1.EFFDT <= $AsOfDate)
End-Select
End-Procedure Chk-DP-Hlth
!**************************************************************************

Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'

  !If $Data-Found-Flag <> 'Y'
  If ($Data-Found-Flag <> 'Y' AND $service_month_flag <> 'Y')	!ISDVMXD modified for ITG 56520 
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (5) center
  End-If

  Do Write-Footer
  Do P310-Close-File
  
  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc
         
  Show 'Successful end of report'
End-Procedure

!****************************************************************************
Begin-Procedure Write-Footer
   Let $Tot_Rec_Cnt = to_char(#Tot_Rec_Cnt)
   Let $Member_Cnt = to_char(#Member_Cnt)
   
   write 1 from ' '

   write 1 from 
         ' ':10
         'TOTAL MEMBER COUNT: ':21
         $Member_Cnt:5
         ' ':10
         'TOTAL RECORD COUNT: ':21
         $Tot_Rec_Cnt:5
   
   !VENDTKK Begin      
   Write 2 from ' ' Status=#filestat
   
   string $space $space $space 'TOTAL MEMBER COUNT: ' $Member_Cnt $space 'TOTAL RECORD COUNT: ' $Tot_Rec_Cnt by $tab into $write_row 
            
    Write 2 from $write_row Status=#filestat
      
   !VENDTKK End                  
End-Procedure Write-Footer
!****************************************************************************

Begin-Procedure P310-Close-File
#debug9 Show 'P310-Close-File'
  Close 1

  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop
  End-If
  
  Close 2

  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop
  End-If
  
  
End-Procedure

!****************************************************************************
Begin-Procedure Initialize-Variables
   
   Let $Emplid 		= ' '
   Let $Empl_Rcd 	= ' '
   Let $Ssn_out         = ' '
   !Let $Job_Effdt 	= ''
   Let $Effseq 	 	= 0
   !Let $Empl_Status     = ' '
   !Let $Company         = ' '
   !Let $Benefit_Prog    = ' '
   Let #Cobra_Event_ID  = 0
   Let $Plan_Type 	= ' '
   Let #Benefit_Nbr 	= 0
   Let $Hlth_Ben_Effdt 	= ''
   !Let $Cvrg_Bgn_Dt 	= ''
   Let $Hlth_Cvrg_Effdt = ''
   Let $Cvrg_Elect 	= ' '
   !Let $Benefit_Plan 	= ' '
   
   Let $Srvc_Dt     = ''
   Let $Last_Name   = ' '
   Let $First_Name  = ' '
   Let $Middle_Name = ' '
   Let $Addr1 	    = ' '
   Let $Addr2 	    = ' '
   Let $City 	    = ' '
   Let $State 	    = ' '
   Let $Postal 	    = ' '
   Let $Phone 	    = ' '
   Let $Sex 	    = ' '
   Let $Ethnic_Grp  = ' '
   Let $Benefit_Prog = ' '
   Let $emplid_out  = ' '
   Let $Relation    = ' '
   Let $Relation_Print = ' '
   Let $Birth_Dt    = ''

End-Procedure Initialize-Variables

!****************************************************************************
Begin-Procedure Initialize-Dep-Var
   Let $Dep_Benef = ' '
   Let $Member_No = ' '
   !Let $Hlth_Ben_Effdt = ''
   Let $Relation = ' '
   Let $Relation_Print = ' '
   Let $Sex      = ' '
   Let $Birth_Dt = ''
   Let $Dep_NID  = ' '
   Let $Last_Name   = ' '
   Let $First_Name  = ' '
   Let $Middle_Name = ' '
   Let $Cvrg_Elect  = ' '
   Let $Ethnic_Grp  = ' '
   Let $Ssn_out = ' '
End-Procedure Initialize-Dep-Var
!****************************************************************************
Begin-Procedure Init-Dep-Var
   Let $Dep_Benef = ' '
   !Let $Member_No = '000'
   !Let $Hlth_Ben_Effdt = ''
   !Let $Relation = ' '
   !Let $Relation_Print = 'S'
   !Let $Sex      = ' '
   !Let $Birth_Dt = ''
   Let $Dep_NID  = ' '
   !Let $Last_Name   = ' '
   !Let $First_Name  = ' '
   !Let $Middle_Name = ' '
   !Let $Cvrg_Elect  = ' '
End-Procedure Init-Dep-Var
!****************************************************************************

#Include 'gexxx919.sqc'  !Get Dedcd multiple row table  
#Include 'gexxx912.sqc'  !Get Plan Type/Benefit Plan Multiples Run Controls
#include 'gexxx903.sqc'  !Get employee status multiple row table
!#include 'gexxx976.sqc'  !vendsxn Commented
#include 'gexxx920.sqc'  !Get ben single row run control
#include 'gexxx940.sqc'  !Get Coverage Elect multiple row table
#include 'gexxx951.sqc'
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'getgeid.sqc'   !Get 7 digit Emplid