!***********************************************************************
!  GEXPY075:  Payroll Check Print - USA - With Micr Code               *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! GiantEagle, Inc.; it is not to be copied, reproduced, or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of GiantEagle.                        *
!                                                                      *
! Copyright (c) 1988-1996 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
!      $Date:: 10/13/97 10:44a  $                                      *
!  $Revision:: 01               $                                      *
!  $Workfile:: GEXPY075.SQR     $                                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
! Function: Generates paychecks and earnings statements for a given    *
!           RUN_ID or (partial) pay calendar.                          *
!                                                                      *
! Comments: Utilizes a bank microcode soft font and a custom signature *
!           font catridge to allow printing of the entire check on an  *
!           HP LaserJet printer so equipped and configured.            *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE          DESCRIPTION OF THE CHANGE         *
!***********************************************************************
!  GEXPY075   SXK      11/17/1998    INITIAL CREATION                  *
!                                                                      *
!  GEXPY075   SXK      12/09/98      used Rule optimizer               *
!                                                                      *
!  GEXPY075   SXK      12/21/1998    Changed order by                  *
!                                                                      *
!  GEXPY075   SXK      01/25/1999    Commented out previous order by   *
!				     and kept the delivered order also *
!				     moved emplid besides              *
!                                    homeaddrline3 and placed acct_cd  *
!                                    in between deptid and location    *
!                                                                      *
!	      SXK      02/23/1999    Modified to not to print 515 hrs  *
!                                                                      *
!	      SXK      04/06/1999    Added department and acctcd on the*
!				     address flap                      *
!                                                                      *
!             SXK      04/07/1999    Modified to suppress hourly rt and*
!				     hours for GEI/OFF and GEI/EXE for *
!				     REG erncd                         *
!                                                                      *
!             SXK      04/12/1999    Modified to accept multiple       *
!                                    individual check numbers to be    *
!                                    able to reprint                   *
!                                                                      *
!             CWB      07/19/1999    Hard coded $BankCityState =       *
!                                    'Ashland, OH  44805'              *
!                                    If dedcd=PAYADJ, set YTD to zero. *
!                                                                      *
!             CWB      07/23/1999    Changed BankId from 90 to 56.     *
!                                    Changed substring logic to        *
!                                    eliminate zeros in the fractional *
!                                    number.                           *
!                                                                      *
!	      SXK      09/28/1999    Modified to print extra page when *
!				     any of earnings, taxes and        *
!                                    deductions exceed 13 rows.        *
!                                                                      *
!             SXK      12/13/1999    Changed ssn to emplid, zip to     *
!                                    postal and &locality_abbrv to     *
!                                    $localabbr                        *
!                                                                      *
!             AXL      02/04/2000    Replaced references to            *
!                                    Check_No_Start & Check_No_Thru    *
!                                    with new 7.5 equivalents          *
!                                    Chkadv_No_Start & Chkadv_No_Thru  *
!                                                                      *
!             CJH      12/22/2000    170 and 167 Earnings - suppressed *
!                                    hours and rate on paycheck        *
!                                                                      *
!             SCM      1/26/2001     Added company 'RFI' and paygroup  *
!                                    'OF4' for Cleveland.              *
!                                                                      *
!             SCM      2/6/2001      Bypass printing of the check      *
!                                    signature if Cleveland (company=  *
!                                   'RFI'. Printer has no chip to print*
!                                                                      *    
!             CWB      02/13/2001   Added literal '** VOID AFTER 6 MONTHS **' 
!                                     to the print logic.              *
!                                   Added ALL_ROWS hint to main select.*  
!                                                                      *
!             SCM      02/23/2001    Added micro encoding for printing *
!                                  off cycle checks on Cleveland printer
!                                                                      *
!             SCM      04/18/2002   Added tax_class='G'   OASDI tips & *
!                                   tax_class='T'  FICA Medicare tips  *
!                                   for Bradley House acquisition.     *     
!             SRK      09/30/2002   Added SRC_BANK join to get the     *
!                                   paygroup data values and used      *
!                                   ps_payroll_data table to get the   *
!                                   mail drop values as part of 8.3    *
!                                                                      *  
!             CWB      02/19/2003   Added EMPL_RCD to EARNINGS_BAL joins.*
!             CWB      02/21/2002   Use BT.BANK_NM instead of BT.DESCRSHORT 
!
!             CJH      06/25/2003   Garn Process is indicated by a "G" in 8.3
!                                   rather than a "Y"
!                                                                      *
!             SCM  07/03/2003   Added processing for Team bonus checks.*
!                               Print 'TBP' in upper right hand corner *
!                               of address flap if EE had an erncd of  *
!                               '535' (TBP Bonus erncd).               *
!                  07/29/2003   Add code to print the rate if TBP.     *
!                                                                      * 
!CSR 10830    CWB  03/10/2005  Changes to the counters used to print   *
!                              a second page when more tha 13 entries  *
!                              in earnings or deductions.              *
!                              Also logic to exclude printing PA memo  *
!                              row from PS_TAX_BALANCE.                *
!                              Force an abend if no checks produced.   *
!                                                                      * 
!ITG # 37593  ISDVMXR  09/01/2006 Change the check print and advice print  *
!                              to hide a portion of the SSN            *
!                                                                         * 
!CSR 11148    CWB  02/07/2007     Expand check number edit from 7 digits  *
!                                 to 8.                                   *
!NPK/ASS 06/18/2008 Removed RFI as per payroll request                    
!             VENDTKK  02/02/2009  Added INCLUDE GETPOSNM.SQC to pull  *
!                  	           JOBTITLE from POSITION_DATA.DESCR   *
!				   field instead of JOBCODE_TBL.DESCR  *
!ITG 71975   VENDKXY  01/18/2009 Done the changes in order to suppress *
!earning codes 700 and 701					       *
! Changed column position for Gross Amount in procedure Init-Report.
!  ISDVMZA    12/02/2015  Added logic to display company name as --    *
!                         Butler Refrigerated Meats Inc -- for those   *
!                         TMs who were transferred from BRM to TMK and *
!                         got assigned to paygroup 'W09'               *
!-------------------------------------------------------------------------------
! GEXPY_849_CSR1530_01 2014-09-05 Surya Sobha (TCS)
! Our Alpha I Level 2 off-cycle Troy 617 printer broke down. This triggered us to
! make a code change as shown below. Please be advised that any printer change
! would require a code change to this program. The code changes that are part of
! this CSR are only applicable for our new printer, which is from 
! Source Technologies Model ST9650.
! Here's the user guide of the ST9650 printer.
! http://www.sourcetech.com/downloads/st9650-user-guide.pdf
! Troubleshooting tip: Before you make any changes to this program, please make
! sure one is able to print the signature through basic printer diagnostics. If you
! are not able to print the signature through basic printer diagnostics, please
! call the vendor and request to walk us through the procedure.
! The printer user guide typically provides instructions about MICR mode commands
! The key is the Flash(card) Resource Number. Make sure it's correct. Here's
! an example: '&%STHPASSWORD$&%STP10500$&%1B$(10500XA&%STQ$'. 10500 is the
! Flash Resource Number for ST9650.
! Did changes to following procedures.
! begin-procedure Init-Variables
! begin-procedure Z001-Print-Bank-Micrcode-COD
! begin-procedure Z002-Print-Bank-Micrcode-POD
! ST9650 printer passcode is: 20244689.
!-------------------------------------------------------------------------------

#include 'setenv.sqc'    !set database environment
#include 'setup07.sqc'
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'getdednm.sqc'  !Get-Deduction-Name procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'geternnm.sqc'  !Get-Earnings-Name procedure
#include 'getjobtl.sqc'  !Get-Job-Title procedure
#include 'getlcdta.sqc'  !Get-Local-Tax-Data
#include 'getlocnm.sqc'  !Get-Location-Name procedure
#include 'ldnumlit.sqc'  !Load-NumberLits-Array procedure
#include 'netinwds.sqc'  !Net-Pay-In-Words procedure
#include 'readxlat.sqc'  !Read-Translate-Table procedure
#include 'rotname1.sqc'  !Rotate-Name procedure
#include 'datetime.sqc'  !general date and time formatting procedures
#include 'number.sqc'    !general number formatting procedures
#include 'payinit.sqc'   !Payroll-Report-Initialization procedure
#include 'payrnctl.sqc'  !Get-Run-Control procedure
#include 'stdapi.sqc'    !StdAPI-Init procedure
#include 'reset.sqc'     !Reset printer procedure
#include 'getbalid.sqc'  !Get-Calendar-Year-Id
#include 'gexaltse.sqc'  ! Alter session SQC
!SXK 01/25/99 Begin
#Include 'getactnm.sqc'  !Get-Acctcd-Name Procedure
!SXK 01/25/99 End
#include 'getposnm.sqc'   !VENDTKK End   ITG#56786   2-Feb-2009	   

!***********************************************************************
begin-setup
!***********************************************************************

#ifndef MVS
  printer-init <27>E<27>&l0L
  !            |     --> Perforation Skip
  !             --> Reset

  declare procedure
    before-report = Init-Page-Size
#endif

  page-size 85 131

end-setup


!***********************************************************************
begin-procedure Init-Page-Size
!***********************************************************************
! This sends a 'Perforation Skip' command to disable any bottom
! margin and obtain the maximum PCL page.  This is required to
! print the MICR line sufficiently close to the bottom of the
! form to be correctly positioned on the check.

!  encode '<27>&l0L' into $perforation_skip
  encode '<27><27>%-12400X' into $perforation_skip
  print $perforation_skip () code

end-procedure


!***********************************************************************
begin-procedure Init-Variables
!***********************************************************************

  let $ReportID    = 'GEXPY075'
  let $ReportTitle = 'Payroll Check Print'
  let $Country     = 'USA'

  let #StdFont     = 5                  !Times Roman proportional
  let #StmtPntSize = 7                  !statement point-size
  let #ChkPntSize  = 9                  !check point-size

!printer escape sequence for the check signature font

!  encode '<27>(1Q<27>(s0p1.00h72.0v0s0b0T' into $SigFont

!  encode '<27>(4B<27>(s1p8.00h72.0v0s0b102T' into $SigFont
!  encode '<27>&l6D' into $linesperinch
!  encode '<27>&l0O<27>(4B<27>(s0p3h12v0s0b102T' into $SigFont
!  let $exc_String_1 = chr(33)
!  let $sigfont_char = $exc_string_1||'"#$%&'||''''||'()*' 
! ||'"'||'#$%&'||''''||'()*' into $sigfont_char
!  encode '!"#$%&'()*' into $sigfont_1
!  move $sigfont_char to $sigfont_1
!  encode '+,-./01234' into $sigfont_2
!  let $sigfont_char = '56789:;'||'<'||'='||'>'
!  move $sigfont_char to $sigfont_3
!  encode '?@ABCDEFGH' into $sigfont_4


encode '<27>(0U<27>(s0p8.00h9.8v0s0b250T' into $Micrfont_COD_On        !SCM 02/23/2001
encode '<27>(0U<27>(s0p10.00h12.0v0s0b3T' into $Micrfont_COD_Off       !SCM 02/23/2001

! GEXPY_849_CSR1530_01 2014-09-05 Surya Sobha Begin
! Commenting out the following lines. These lines of code were used for
! Troy 617 printer.
! encode '<27>&f102y0x0S<27>(4B<27>(s0p3h9.12v0s0b102T' into $Sigfont 
! encode '<27>&f1s0S<27>&a+000V<33><34><35><36><37><38><39><40><41><42>' into $Sigfont_1
! encode '<27>&f1s0S<27>&a+120V<43><44><45><46><47><48><49><50><51><52>' into $Sigfont_2
! encode '<27>&f1s0S<27>&a+240V<53><54><55><56><57><58><59><60><61><62>' into $Sigfont_3
! encode '<27>&f1s0S<27>&a+360V<63><64><65><66><67><68><69><70><71><72>' into $Sigfont_4
! encode '<27>&f1s1x3x8X' into $SigTail

! Below are the settings for the Signature prints with the new 
! Source Technologies Model ST9650 printer.
let $sigfont = '' 
let $Sigfont_1 = ''
let $Sigfont_2 = ''
let $Sigfont_3 = ''
let $Sigfont_4 = ''
let $SigTail =   '&%STHPASSWORD$&%STP10500$&%1B$(10500XA&%STQ$'
! GEXPY_849_CSR1530_01 2014-09-05 Surya Sobha End
  
!the bank city/state prefix as printed on the check as part of the
!hyphenated numerator of the fractional bank routing number

!CWB  07/23/99  Begin
  let $BankDistrict = '56'              !for paygroup $BankID
!  let $BankDistrict = '90'              !for paygroup $BankID
!CWB  07/23/99  End

end-procedure


!***********************************************************************
begin-procedure Init-Arrays
!***********************************************************************

!  #define m  7  !number of separate detail sections

!SXK 10/13/97 Begin
  #define m  6  !number of separate detail sections
!SXK end

  #define n 13  !maximum number of detail entries per section

  let #RatesRow       = 0
  let #HoursRow       = 1
  let #EarnsRow       = 2
  let #PreTaxDedsRow  = 3
  let #TaxesRow       = 4

!SXK 10/13/97 Begin
!  let #PostTaxDedsRow = 5
!  let #BenefitsRow    = 6

  let #BenefitsRow    = 5
!SXK End

  let #lastRow  = {m}-1
  !SXK 09/28/1999 Begin
  let #lastCol  = 2*({n}-1)  !SXK used to be n-1
  #define new_n 26

    create-array name  = ETDarray         -
               size  = {m}                -
               field = Code:char:{new_n}  -
               field = Name:char:{new_n}  -
               field = Cur:number:{new_n} -
               field = YTD:number:{new_n}

  !SXK 09/28/1999 End
  let $lastCode = '***'
  let $lastName = 'Other'
  let #lastRate = 0

!  create-array name  = ETDarray       -
!	       size  = {m}            -
!	       field = Code:char:{n}  -
!	       field = Name:char:{n}  -
!	       field = Cur:number:{n} -
!	       field = YTD:number:{n}

  do Load-NumberLits-Array  !load literals for converting Net Pay to words

end-procedure


!***********************************************************************
begin-report
!***********************************************************************
!SXK 12/09/98 Begin
!  do Alter-Session   ! Set Session to RULE Optimizer
!SXK 12/09/98 End
  do Init-DateTime
  do Init-Number
  do Get-Calendar-Year-Id
  do StdAPI-Init
  do Init-Variables
  do Init-Arrays
  do Payroll-Report-Initialization      !calls "Report" procedure
  do Get-Paychecks

  display 'Total Checks  ' noline
  display #TotalChecks  999,999,999
  display 'Total Net Pay ' noline
  display #TotalNetPay  $$$,$$$,$$9.99mi
  if #totalchecks = 0                  ! CWB 03/10/2005
    STOP                               ! CWB 03/10/2005
  end-if                               ! CWB 03/10/2005
  do StdAPI-Term
  do Reset

end-report


!***********************************************************************
begin-procedure Report
!***********************************************************************

  if $Prcs_Process_Instance = ''
    display 'Enter a Beginning Check No. if restarting the run; ' noline
    display 'otherwise leave blank'
    input $BeginCheck# maxlen=8 'Enter Beginning Check No.' type=integer
    move  $BeginCheck# to #BeginCheck#
!SXK 04/06/1999 Begin
    input $ThruCheck# maxlen=8 'Enter Ending Check No.' type=integer
    if rtrim($thrupaycheck_nbr,' ') <> ''
       move  $ThruCheck# to #ThruCheck#
    else
       let $ThruCheck = '9999999'
       move $ThruCheck to #ThruCheck#
    end-if
!SXK 04/06/1999 End
!SXK 04/12/1999 Begin - Allows to print multiple individual checks
    input $check_numbers maxlen=8 'Enter Individual Check#. or leave blank' type=integer
    while rtrim($check_numbers,' ') <> ''
!       move $check_numbers to #check_numbers
       add 1 to #check_count_1
       if #check_count_1 = 1
          let $check_string = $check_string|| ' AND '||'((B.PAYCHECK_NBR = '||$check_numbers||')'
       else
          let $check_string = $check_string|| ' OR '||'(B.PAYCHECK_NBR = '||$check_numbers||')'
       end-if
       input $check_numbers maxlen=8 'Enter Individual Check#. or leave blank' type=integer
    end-while
    if #check_count_1 = 0
       let $check_string = $check_string||')'
    else
       let $check_string = $check_string||'))'
    end-if
    move $check_String to $GEXXX932_INCLUDE_CHECK_CRITERIA

    input $CheckMessage maxlen=110 'Enter Check Message'
  else
     move #RC_PAYINIT.Chkadv_No_Start to #BeginCheck#	!AXL 02/04/2000
!SXK 04/06/1999 Begin
     move #RC_PAYINIT.Chkadv_No_Thru  to #ThruCheck#	!AXL 02/04/2000
!SXK 04/06/1999 End
!SXK 04/12/1999 Begin
     let $GEXXX932_Check_Alias = 'B.PAYCHECK_NBR'
     Do GEXXX932-Select-Check-Parameters
     let $GEXXX932_INCLUDE_CHECK_CRITERIA = 'AND '||$GEXXX932_INCLUDE_CHECK_CRITERIA||')'

     move $RC_PAYINIT.Message_Text   to $CheckMessage
  end-if
  display $GEXXX932_INCLUDE_CHECK_CRITERIA
end-procedure


!***********************************************************************
begin-procedure Get-Paychecks
!***********************************************************************

begin-SELECT
/*+ ALL_ROWS */
A.COMPANY,A.PAYGROUP,A.PAY_BEGIN_DT,A.PAY_END_DT,A1.BALANCE_ID
A1.BALANCE_YEAR,A1.BALANCE_PERIOD,A.CHECK_DT
B.OFF_CYCLE,B.PAGE_NUM,B.LINE_NUM,B.SEPCHK
B.FORM_ID,B.PAYCHECK_NBR,B.CHECK_DT
B.EMPLID,B.EMPL_RCD,B.NAME,B.PAYCHECK_NAME,B.ADDRESS1,B.ADDRESS2,B.CITY
B.STATE,B.postal
B.PAYCHECK_OPTION,B.PAYCHECK_ADDR_OPTN
B.TOTAL_GROSS,B.TOTAL_TAXES,B.TOTAL_DEDUCTIONS,B.NET_PAY
B.PAY_SHEET_SRC
G.EFFDT
Y.TOTAL_GROSS_YTD,Y.TOTAL_TAXES_YTD,Y.TOTAL_DEDNS_YTD,Y.NET_PAY_YTD

!  display 'In the main'

  if &A.Company <> $Company
    move &A.Company    to $Company
    move &A.Pay_End_Dt to $AsOfDate
    do Get-Company-Data
    move ''            to $PayGroup
  end-if

  if &A.PayGroup <> $PayGroup
    move &A.PayGroup   to $PayGroup
    move &A.Pay_End_Dt to $AsOfDate
    do Get-PayGroup-Data
  end-if
  do Reset-Variables

  do Get-Ee-Job-Data
  do Get-Ee-Tax-Data

  do Get-Earnings-Detail
  do Get-Taxes-Detail
  do Get-Deductions-Detail

  if &B.PayCheck_Option = '&'           !both advice and check
    do Get-Net-Pay-Distribution
  else
    move &B.Net_Pay to #CheckNetPay
  end-if

  do Get-Vacation-Balances
  let $extra_page = 'N'
  do Print-Statement
  !SXK 09/28/1999 Begin
  if $extra_page = 'Y'
     do print-extra-page
  end-if

  Let $EE_Had_TBP_Erncd535 = 'N'           !SCM  07/03/2003 Reset printing bonus for next EE
   
  do print-check
  !SXK 09/28/1999 End

  add 1            to #TotalChecks
  add #CheckNetPay to #TotalNetPay

FROM  PS_PAY_CALENDAR A, PS_PAY_CAL_BAL_ID A1,
      PS_PAY_CHECK    B,
      PS_PAYGROUP_TBL G,
!SXK 01/25/99 Modified to have only paycheck_nbr as the sorting order
!and remove the change made on 05/04/98 and keep the delivered sorting order
      PS_CHECK_YTD    Y
!SXK 05/04/98 Added to be able to sort by Company, 
!DeptID, Mail Drop, ACCT_CD and Name

!      PS_EMPLOYMENT     EMP1,
!      PS_JOB            JOB1
!SXK 01/25/99 End

WHERE [$SlctCalendar]
  AND A.COMPANY = A1.COMPANY AND A.PAYGROUP = A1.PAYGROUP
  AND A.PAY_END_DT = A1.PAY_END_DT AND A1.BALANCE_ID = $Calendar_Year_Id
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND B.COMPANY         = A.COMPANY
  AND B.PAYGROUP        = A.PAYGROUP
  AND B.PAY_END_DT      = A.PAY_END_DT
  AND B.PAYCHECK_NBR         <> 0
  AND ((B.PAYCHECK_NBR         >= #BeginCheck#
!SXK 04/06/1999 Begin
  AND B.PAYCHECK_NBR         <= #ThruCheck#)
!SXK 04/06/1999 End
!SXK 04/12/1999 Begin
  [$GEXXX932_INCLUDE_CHECK_CRITERIA]
!SXK 04/12/1999 End
  AND B.PAYCHECK_OPTION IN ('C','&','M')
  AND B.PAYCHECK_STATUS = 'F'
  AND G.COMPANY         = A.COMPANY
  AND G.PAYGROUP        = A.PAYGROUP
  AND G.COUNTRY         = $Country
  AND Y.COMPANY         = A.COMPANY
  AND Y.BALANCE_ID   =  A1.BALANCE_ID
  AND Y.BALANCE_YEAR   =  A1.BALANCE_YEAR
  AND Y.BALANCE_QTR    = A1.BALANCE_QTR
  AND Y.BALANCE_PERIOD  = A1.BALANCE_PERIOD
  AND Y.EMPLID          = B.EMPLID
! GEXPY_849_CSR1530_01 2014-09-05 Surya Sobha  Begin
! Use the following line of code if you are testing and want to print just one check.
! This avoids wasting paper.
!  AND B.EMPLID          = '123456789'
! GEXPY_849_CSR1530_01 2014-09-05 Surya Sobha  End
  AND G.EFFDT           =
    (SELECT MAX(EFFDT)
       FROM PS_PAYGROUP_TBL
      WHERE COMPANY    = A.COMPANY
	AND PAYGROUP   = A.PAYGROUP
	AND EFF_STATUS = 'A'
	AND EFFDT     <= A.PAY_END_DT)
!SXK 04/19/98 
!  AND EMP1.EMPLID     = B.EMPLID
!  AND EMP1.EMPL_RCD  = B.EMPL_RCD
!  AND JOB1.EMPLID     = B.EMPLID
!  AND JOB1.EMPL_RCD  = B.EMPL_RCD
!  AND JOB1.EFFDT = 
!    (SELECT MAX(EFFDT)
!       FROM PS_JOB
!      WHERE EMPLID    = JOB1.EMPLID
!	AND EMPL_RCD   = JOB1.EMPL_RCD
!	AND EFFDT     <= A.PAY_END_DT)
!  AND JOB1.EFFSEQ = 
!    (SELECT MAX(EFFSEQ)
!       FROM PS_JOB
!      WHERE EMPLID    = JOB1.EMPLID
!	AND EMPL_RCD = JOB1.EMPL_RCD
!	AND EFFDT     = JOB1.EFFDT)

ORDER BY B.FORM_ID,
         B.PAYCHECK_NBR
!ORDER BY  B.DEPTID, EMP1.MAIL_DROP, B.NAME

end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Company-Data
!***********************************************************************

begin-SELECT
CT.DESCR,CT.ADDRESS1,CT.ADDRESS2,CT.CITY,CT.STATE,CT.postal

 !let $CompanyName      = &CT.Descr
!***********************************************************************
!ISDVMZA -- Begin -- added logic for BRM transfer to TMK
!***********************************************************************
	if &A.Company = 'TMK' and &A.Paygroup = 'W09'         
	  let $CompanyName      = 'Butler Refrigerated Meats Inc.'
	else
	  let $CompanyName      = &CT.Descr
	end-if
!***********************************************************************
!ISDVMZA -- End 
!***********************************************************************

  let $CompanyCityState =
      rtrim(&CT.City,' ') ||' '|| rtrim(&CT.State,' ') ||'  '|| &CT.postal

  let $CompanyAddrLine1   = &CT.Address1
  let $CompanyAddrLine3   = ''
  if rtrim(&CT.Address2,' ') = ''
    let $CompanyAddrLine2 = $CompanyCityState
  else
    let $CompanyAddrLine2 = &CT.Address2
    let $CompanyAddrLine3 = $CompanyCityState
  end-if

FROM  PS_COMPANY_TBL CT
WHERE COMPANY = &A.Company
  AND EFFDT   =
    (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
      WHERE COMPANY = CT.COMPANY
	AND EFFDT  <= &A.Pay_End_Dt)
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-PayGroup-Data
!***********************************************************************
!SRK 09/30/2002 - Added ps_src_bank join to get the bank transit and 
!account numbers
begin-SELECT
PG.DESCR
PG.ERNCD_REG_HRS,PG.ERNCD_OT_HRS,PG.ERNCD_REG_EARNS
PG.SRC_BANK_ID
SB.SRC_BANK_ID,SB.BANK_CD,SB.ACCOUNT_EC_ID
BT.DESCRSHORT,BT.ADDRESS1,BT.ADDRESS2,BT.CITY,BT.STATE,BT.postal,
BT.BANK_NM   ! CWB 02/21/2003

  let $PayGroupName = &PG.Descr
  let $TransitNum   = &SB.Bank_Cd
  let $AccountNum   = translate(rtrim(&SB.Account_EC_ID,' '),'-','D')
  let $BankID       = $BankDistrict || '-' ||
!CWB  07/23/99  Begin
                      SUBSTR(&SB.BANK_CD,6,3) || '/' ||
                      SUBSTR(&SB.BANK_CD,2,3)
!                      SUBSTR(&PG.TRANSIT_NUM,5,4) || '/' ||
!                      SUBSTR(&PG.TRANSIT_NUM,1,4)
!CWB  07/23/99  End

  let $ErnCd = &PG.ErnCd_Reg_Hrs
  do Get-Earnings-Name
  move $EarningsName to $EarnNameRegHrs
  let $ErnCd = &PG.ErnCd_OT_Hrs
  do Get-Earnings-Name
  move $EarningsName to $EarnNameOTHrs
  let $ErnCd = &PG.ErnCd_Reg_Earns
  do Get-Earnings-Name
  move $EarningsName to $EarnNameRegEarns

!  let $BankName      = upper(&BT.Descrshort)  !SRK 09/30/2002 8.3 changes
  let $BankName      = upper(&BT.BANK_NM)      ! CWB 02/21/2003

  let $BankCityState =
!CWB 07/19/99 Begin
      'Ashland, OH  44805'
!      rtrim(&BT.City,' ') ||' '|| rtrim(&BT.State,' ') ||'  '|| &BT.postal
!CWB 07/19/99 End


  let $BankAddrLine1   = &BT.Address1
  let $BankAddrLine3   = ''
  if rtrim(&BT.Address2,' ') = ''
    let $BankAddrLine2 = $BankCityState
  else
    let $BankAddrLine2 = &BT.Address2
    let $BankAddrLine3 = $BankCityState
  end-if

FROM  PS_PAYGROUP_TBL PG,
      PS_SRC_BANK SB,
      PS_BANK_EC_TBL BT
WHERE PG.COMPANY  = &A.Company
  AND PG.PAYGROUP = &A.PayGroup
  AND PG.COUNTRY  = $Country
  AND PG.EFFDT    = &G.Effdt
  AND PG.SRC_BANK_ID = SB.SRC_BANK_ID
  AND BT.BANK_CD     = SB.BANK_CD
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Ee-Job-Data
!***********************************************************************
!SXK 12/13/1999 - Changed from ssn to emplid, zip to postal
!SRK 09/30/2002 - Modified maildrop from employment to Payroll data table
begin-SELECT
J.DEPTID,J.JOBCODE,J.LOCATION,J.COMPRATE,J.COMP_FREQUENCY, J.ACCT_CD, J.EMPL_TYPE
P.NAME,P.emplid,P.ADDRESS1,P.ADDRESS2,P.CITY,P.STATE,P.Postal, PAY.MAIL_DROP
J.Position_nbr								!VENDTKK   ITG#56786   2-Feb-2009

  let $DeptID   = rtrim(&J.DeptID,' ')
  do Get-Department-Name
  let $AcctCD   = rtrim(&J.Acct_cd,' ')
  do Get-Acct-CD-Descr
  let $JobCode  = rtrim(&J.JobCode,' ')
  do Get-Job-Title
  !VENDTKK Begin   ITG#56786   2-Feb-2009

  Let $Position_Nbr = &J.Position_nbr
  Do Get-Position-Title			 !getposnm.sqc
  	 IF $PosName = '' 
  		Let $jobtitle = $jobtitle
	 Else
 		Let $jobtitle = $PosName
	 End-if
 !VENDTKK End   ITG#56786   2-Feb-2009	
  let $Location = rtrim(&J.Location,' ')
  do Get-Location-Name

  let $FieldName  = 'COMP_FREQUENCY'
  let $FieldValue = &J.Comp_Frequency
  do Read-Translate-Table
  move $XLatLongName to $CompFrequency

  let $Name = &P.Name
  do Rotate-Name
  move $Name to $HomeName


  let $HomeCityState =
      rtrim(&P.City,' ') ||' '|| rtrim(&P.State,' ') ||'  ' || &P.postal
      
      
       
      !ISDVMXR 08/28/2006 Begin                   
     !show '&P.EMPLID  ' &P.EMPLID
     let $Emplid_f = substr(&P.emplid,6,4)
	 let $Emplid = 'XXX-XX-' ||$Emplid_f
	! show  '$Emplid AFTER FORMATTING  ' $Emplid
  !ISDVMXR 08/28/2006 END




  let $HomeAddrLine1   = &P.Address1
  let $HomeAddrLine3   = ''
  if rtrim(&P.Address2,' ') = ''
    let $HomeAddrLine2 = $HomeCityState
  else
    let $HomeAddrLine2 = &P.Address2
    let $HomeAddrLine3 = $HomeCityState
  end-if

FROM  PS_JOB           J,
      PS_PERSONAL_DATA P,
      PS_PAYROLL_DATA PAY
WHERE P.EMPLID = J.EMPLID
  AND PAY.EMPLID = J.EMPLID
  AND PAY.COMPANY = J.COMPANY
  AND J.EMPLID = &B.EmplID
  AND J.EMPL_RCD = &B.Empl_Rcd
  AND J.EFFDT  =
    (SELECT MAX(EFFDT)
       FROM PS_JOB
      WHERE EMPLID    = J.EMPLID
	AND EMPL_RCD = J.EMPL_RCD
	AND EFFDT    <= &A.Pay_End_Dt)
  AND J.EFFSEQ =
    (SELECT MAX(EFFSEQ)
       FROM PS_JOB
      WHERE EMPLID    = J.EMPLID
	AND EMPL_RCD = J.EMPL_RCD
	AND EFFDT     = J.EFFDT)
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Ee-Tax-Data
!***********************************************************************

begin-SELECT
FT.EFFDT,FT.FWT_MAR_STATUS,FT.FWT_ALLOWANCES
FT.FWT_ADDL_AMT,FT.FWT_ADDL_PCT
ST.STATE,ST.RESIDENT,ST.SWT_MAR_STATUS,ST.SWT_ALLOWANCES
ST.SWT_ADDL_ALLOWNCES,ST.SWT_ADDL_AMT,ST.SWT_ADDL_PCT

  let $FieldName    = 'FWT_MAR_STATUS'
  let $FieldValue   = &FT.FWT_Mar_Status
  do Read-Translate-Table
  let $FWTMarStatus = $XlatShortName

  do Get-SWT-Marital-Status

FROM  PS_FED_TAX_DATA   FT,
      PS_STATE_TAX_DATA ST
WHERE ST.EMPLID   = FT.EMPLID
  AND ST.COMPANY  = FT.COMPANY
  AND ST.EFFDT    = FT.EFFDT
  AND ST.RESIDENT = 'Y'
  AND FT.EMPLID   = &B.EmplID
  AND FT.COMPANY  = &A.Company
  AND FT.EFFDT    =
    (SELECT MAX(EFFDT)
       FROM PS_FED_TAX_DATA
      WHERE EMPLID  = FT.EMPLID
	AND COMPANY = FT.COMPANY
	AND EFFDT  <= &A.Pay_End_Dt)
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-SWT-Marital-Status
!***********************************************************************

begin-SELECT
SM.DESCRLONG

  let $SWTMarStatus = substr(&SM.DescrLong,1,25)

FROM  PS_SWT_MARSTAT_TBL SM
WHERE SM.STATE          = &ST.State
  AND SM.SWT_MAR_STATUS = &ST.SWT_Mar_Status
  AND SM.EFFDT          =
    (SELECT MAX(EFFDT)
       FROM PS_SWT_MARSTAT_TBL
      WHERE STATE          = SM.STATE
	AND SWT_MAR_STATUS = SM.SWT_MAR_STATUS
	AND EFFDT         <= &A.Pay_End_Dt)
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Earnings-Detail
!***********************************************************************

begin-SELECT
E.HOURLY_RT,E.REG_HRS,E.REG_HRLY_EARNS
E.OT_HRS,E.OT_HRLY_EARNS
E.REG_EARNS
E.ADDL_NBR
  let #k = 1
  WHILE #k <= 3
    evaluate #k
      when = 1
	move &PG.ErnCd_Reg_Hrs   to $Code
	move $EarnNameRegHrs     to $Name
	    !SXK 04/07/99 Begin

! CWB 06/20/2000 -begin
!	    if &A.COMPANY = 'GEI' 
	    if &A.COMPANY = 'GEI' or &A.COMPANY = 'KAP' 
                 or &A.COMPANY = 'RFI'                            !SCM 1/26/2001 added RFIfor COD  
	      if &A.PAYGROUP = 'OFF' or &A.PAYGROUP = 'EXE'
!                 or &A.PAYGROUP = 'KAP'   ! CWB                  !SCM 1/26/2001 commented for COD 
                  or &A.PAYGROUP = 'KAP' or &A.PAYGROUP = 'OF4'   !SCM 1/26/2001 added OF4 for COD    
! CWB 06/20/2000 - end
	        if &J.EMPL_TYPE = 'S'
	              move 0 to #hours
	              move 0 to #Rate
	        else
		        move &E.Hourly_Rt        to #Rate
		        move &E.Reg_Hrs          to #Hours
	        end-if
	      else
	        move &E.Hourly_Rt        to #Rate
	        move &E.Reg_Hrs          to #Hours
	      end-if
            else
	      move &E.Hourly_Rt        to #Rate
	      move &E.Reg_Hrs          to #Hours
	    end-if
	    !SXK 04/07/99 End

	move &E.Reg_Hrly_Earns   to #Earns
      when = 2
	move &PG.ErnCd_OT_Hrs    to $Code
	move $EarnNameOTHrs      to $Name
	move &E.OT_Hrs           to #Hours
	move &E.OT_Hrly_Earns    to #Earns
      when = 3
	move &PG.ErnCd_Reg_Earns to $Code
	move $EarnNameRegEarns   to $Name
	move 0                   to #Rate
	move 0                   to #Hours
	move &E.Reg_Earns        to #Earns
     end-evaluate
     move #RatesRow              to #i
     do Update-ETDarray-Current-Earnings
     add 1 to #k
  END-WHILE
  do Get-Other-Earnings-Detail
FROM  PS_PAY_EARNINGS E
WHERE E.COMPANY    = &A.Company
  AND E.PAYGROUP   = &A.PayGroup
  AND E.PAY_END_DT = &A.Pay_End_Dt
  AND E.OFF_CYCLE  = &B.Off_Cycle
  AND E.PAGE_NUM      = &B.Page_num
  AND E.LINE_NUM      = &B.Line_num
  AND E.SEPCHK     = &B.SepChk
  AND E.SINGLE_CHECK_USE IN ('C', 'N')
ORDER BY E.ADDL_NBR
end-SELECT
  do Get-Earning-Balances
end-procedure


!***********************************************************************
begin-procedure Get-Other-Earnings-Detail
!***********************************************************************

begin-SELECT
OE.ERNCD
  let $ErnCd = &OE.ErnCd
  do Get-Earnings-Name
OE.OTH_HRS
OE.OTH_EARNS
  move $ErnCd        to $Code
  move $EarningsName to $Name

  if $erncd = '535'                      !SCM  07/03/2003  TBP Bonus Erncd
     let $EE_Had_TBP_Erncd535 = 'Y'      !SCM  07/03/2003
  end-if                                 !SCM  07/03/2003
  
  !SXK 02/23/99 begin
! 12/21/2000 - CJH - suppress printing hours and rate for erncds 170 and 167'
!VENDKXY  Done the changes for ITG 71975-- Begin
!  if ($erncd = '515')
!   if ($erncd = '515') or ($erncd = '170') or ($erncd = '167')
    if ($erncd = '515') or ($erncd = '170') or ($erncd = '167') or ($erncd = '700') or ($erncd = '701')
     move 0 to #rate
     move 0 to #hours
! 12/21/2000 - CJH - end  
!VENDKXY  Done the changes for ITG 71975-- End  
  else
    !SXK 04/07/99 Begin
! CWB 06/20/2000 -begin
!	if &A.COMPANY = 'GEI'
        if &A.COMPANY = 'GEI' or &A.COMPANY = 'KAP' 
           or &A.COMPANY = 'RFI'                           !SCM 1/26/2001 added RFI for COD  
	if &A.PAYGROUP = 'OFF' or &A.PAYGROUP = 'EXE'
!          or &A.PAYGROUP = 'KAP'   ! CWB                  !SCM 1/26/2001 commented for COD 
           or &A.PAYGROUP = 'KAP' or &A.PAYGROUP = 'OF4'   !SCM 1/26/2001 added OF4 for COD    
! CWB 06/20/2000 - end
        if &J.EMPL_TYPE = 'S'
           if $Erncd = 'REG'
              move 0 to #hours
              move 0 to #Rate
           else
	      move &E.Hourly_Rt  to #Rate
              move &OE.Oth_Hrs   to #Hours
           end-if
        else
           move &E.Hourly_Rt  to #Rate
           move &OE.Oth_Hrs   to #Hours
        end-if
      else
        move &E.Hourly_Rt  to #Rate
        move &OE.Oth_Hrs   to #Hours
      end-if
   else
     move &E.Hourly_Rt  to #Rate
     move &OE.Oth_Hrs   to #Hours
   end-if
  !SXK 04/07/99 End
  end-if
  !SXK 02/23/99 End

  move &OE.Oth_Earns to #Earns
  move #RatesRow     to #i
  do Update-ETDarray-Current-Earnings
FROM  PS_PAY_OTH_EARNS OE
WHERE OE.COMPANY    = &A.Company
  AND OE.PAYGROUP   = &A.PayGroup
  AND OE.PAY_END_DT = &A.Pay_End_Dt
  AND OE.OFF_CYCLE  = &B.Off_Cycle
  AND OE.PAGE_NUM      = &B.Page_num
  AND OE.LINE_NUM      = &B.Line_num
  AND OE.SEPCHK     = &B.SepChk
  AND OE.ADDL_NBR      = &E.Addl_nbr
ORDER BY OE.ERNCD
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Earning-Balances
!***********************************************************************

  let #Cur = 0
!SXK 10/25/1999 Begin
  let #ern_pre_count = 0
!SXK 10/25/1999 End

begin-SELECT
EB.ERNCD,EB.HRS_YTD,EB.GRS_YTD

  let $ErnCd = &EB.ErnCd
  do Get-Earnings-Name
  let $Code = $ErnCd
  let $Name = $EarningsName

  let #k = 1
  WHILE #k <= 3
    evaluate #k
      when = 1
	move 0           to #YTD
	move #RatesRow   to #i
      when = 2
! 22-DEC-2000 - CJH suppress hours and rate for 170 and 167
!VENDKXY  Done the changes for ITG 71975-- Begin
!        if $erncd = '515'
!        if ($erncd = '515') OR ($erncd = '170') or ($erncd = '167')
         if ($erncd = '515') or ($erncd = '170') or ($erncd = '167') or ($erncd = '700') or ($erncd = '701')
           move 0 to #ytd
! 22-DEC-2000                        
!VENDKXY  Done the changes for ITG 71975-- End                                          
        else
	  !SXK 04/07/99 Begin
! CWB 06/20/2000 -begin
!	if &A.COMPANY = 'GEI'
        if &A.COMPANY = 'GEI' or &A.COMPANY = 'KAP' 
           or &A.COMPANY = 'RFI'                           !SCM 1/26/2001 added RFI for COD  
	if &A.PAYGROUP = 'OFF' or &A.PAYGROUP = 'EXE'
!          or &A.PAYGROUP = 'KAP'   ! CWB                  !SCM 1/26/2001 commented for COD 
           or &A.PAYGROUP = 'KAP' or &A.PAYGROUP = 'OF4'   !SCM 1/26/2001 added OF4 for COD    
! CWB 06/20/2000 - end
	        if &J.EMPL_TYPE = 'S'
	           if $Erncd = 'REG'
	              move 0 to #YTD
                   else
	              move &EB.Hrs_YTD to #YTD
	           end-if
                else
	           move &EB.Hrs_YTD to #YTD
	        end-if
             else
                 move &EB.Hrs_YTD to #YTD
	     end-if
          else
             move &EB.Hrs_YTD to #YTD
	  end-if
	  !SXK 04/07/99 End

        end-if

	move #HoursRow   to #i
      when = 3
	move &EB.Grs_YTD to #YTD
	move #EarnsRow   to #i
    end-evaluate
    do Update-ETDarray
    add 1 to #k
  END-WHILE
!SXK 10/25/1999 Begin
  add 1 to  #ern_pre_count
!SXK 10/25/1999 End

FROM  PS_EARNINGS_BAL EB
WHERE EB.EMPLID        = &B.EmplID
  AND EB.EMPL_RCD      = &B.EMPL_RCD     ! CWB 02/19/2003
  AND EB.COMPANY       = &A.Company
  AND EB.BALANCE_ID    = &A1.BALANCE_ID
  AND EB.BALANCE_YEAR  = &A1.BALANCE_YEAR
  AND EB.SPCL_BALANCE  = 'N'
  AND ((EB.ERNCD <> '700') AND  (EB.ERNCD <> '701'))  !VENDKXY  Done the changes for ITG 71975
  AND EB.BALANCE_PERIOD       =
    (SELECT MAX(BALANCE_PERIOD)
       FROM PS_EARNINGS_BAL
      WHERE EMPLID        = EB.EMPLID
        AND EMPL_RCD      = EB.EMPL_RCD     ! CWB 02/19/2003
	AND COMPANY       = EB.COMPANY
	AND BALANCE_ID    = EB.BALANCE_ID
	AND BALANCE_YEAR  = EB.BALANCE_YEAR
	AND SPCL_BALANCE  = EB.SPCL_BALANCE
	AND ERNCD         = EB.ERNCD
	AND BALANCE_PERIOD      <= &A1.BALANCE_PERIOD)
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Get-Taxes-Detail
!***********************************************************************

  let #YTD = 0
  let #i   = #TaxesRow

begin-SELECT
T.STATE,T.LOCALITY,T.TAX_CLASS,T.TAX_CUR,T.TXGRS_CUR



  let $Code = rtrim(&T.State,' ') || rtrim(&T.Locality,' ') || &T.Tax_Class

  if rtrim(&T.State, ' ') = '$U'
    let $Name = 'Fed'
    if &T.Tax_Class = 'H'               !withholding
      move &T.TxGrs_Cur to #FedTaxGrossCur
    end-if
  else


    let $Name = rtrim(&T.State, ' ')

    if rtrim(&T.Locality,' ') <> ''     !if a Locality


      let $State = rtrim(&T.State, ' ')
      let $Locality = rtrim(&T.Locality, ' ')

      do Get-Local-Tax-Data
      let $Name = $Name || ' ' || $localabbr
    end-if
  end-if
  let $FieldName  = 'TAX_CLASS'
  let $FieldValue = &T.Tax_Class
  do Read-Translate-Table
  let $Name = $Name || ' ' || $XLatShortName

  move &T.Tax_Cur to #Cur
  do Update-ETDarray

FROM  PS_PAY_TAX T
WHERE T.COMPANY    = &A.Company
  AND T.PAYGROUP   = &A.PayGroup
  AND T.PAY_END_DT = &A.Pay_End_Dt
  AND T.OFF_CYCLE  = &B.Off_Cycle
  AND T.PAGE_NUM      = &B.Page_num
  AND T.LINE_NUM      = &B.Line_num
  AND T.SEPCHK     = &B.SepChk
  AND T.TAX_CLASS IN ('B','C','D','F','G','H','M','N','P','T','V')   !SCM 04/18/2002 Added 'G' and 'T'
ORDER BY T.STATE,T.LOCALITY,T.TAX_CLASS DESC
end-SELECT
  do Get-Tax-Balances
end-procedure


!***********************************************************************
begin-procedure Get-Tax-Balances
!***********************************************************************

  let #Cur = 0
!SXK 10/25/1999 Begin
  let #tax_pre_count = 0
!SXK 10/25/1999 End

begin-SELECT
TB.STATE,TB.LOCALITY,TB.TAX_CLASS,TB.TAX_YTD,TB.TXGRS_YTD



  let $Code = rtrim(&TB.State, ' ') || rtrim(&TB.Locality,' ') || &TB.Tax_Class  !-:

  if rtrim(&TB.State, ' ') = '$U'
    let $Name = 'Fed'
    if &TB.Tax_Class = 'H'               !withholding
      move &TB.TxGrs_YTD to #FedTaxGrossYTD
    end-if
  else



    let $Name = rtrim(&TB.State,' ')
    if rtrim(&TB.Locality,' ') <> ''     !if a Locality


      let $State = rtrim(&TB.State, ' ')
      let $Locality = rtrim(&TB.Locality, ' ')

      do Get-Local-Tax-Data
      let $Name = $Name || ' ' || $localabbr
    end-if
  end-if
  let $FieldName  = 'TAX_CLASS'
  let $FieldValue = &TB.Tax_Class
  do Read-Translate-Table
  let $Name = $Name || ' ' || $XLatShortName

  move &TB.Tax_YTD to #YTD
  do Update-ETDarray
!SXK 10/25/1999 Begin
!  add 1 to #tax_pre_count      ! CWB 03/10/2005
 
!SXK 10/25/1999 End

FROM  PS_TAX_BALANCE TB
WHERE TB.EMPLID        = &B.EmplID
  AND TB.COMPANY       = &A.Company
  AND TB.BALANCE_ID    = &A1.BALANCE_ID
  AND TB.BALANCE_YEAR  = &A1.BALANCE_YEAR
  AND TB.TAX_CLASS IN ('B','C','D','F','G','H','M','N','P','T','V')  !SCM  04/22/2002  Added 'G' and 'T'
  AND TB.BALANCE_PERIOD      =
    (SELECT MAX(BALANCE_PERIOD)
       FROM PS_TAX_BALANCE
      WHERE EMPLID        = TB.EMPLID
	AND COMPANY       = TB.COMPANY
	AND BALANCE_ID    = TB.BALANCE_ID
	AND BALANCE_YEAR  = TB.BALANCE_YEAR
	AND STATE         = TB.STATE
	AND (LOCALITY     = TB.LOCALITY
	 OR  LOCALITY = ' ' and TB.LOCALITY = ' ')
	AND TAX_CLASS     = TB.TAX_CLASS
	AND BALANCE_PERIOD      <= &A1.BALANCE_PERIOD)
  and not (tb.tax_class='P' and tb.state='PA' and tb.locality=' ')
! 03/10/2005 CWB added above to exclude memo row for PA
ORDER BY TB.STATE,TB.LOCALITY,TB.TAX_CLASS DESC
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Deductions-Detail
!***********************************************************************

  let #YTD = 0

begin-SELECT
N.PLAN_TYPE,N.DEDCD,N.DED_CLASS,N.DED_CUR

  let $PlanType = &N.Plan_Type
  let $DedCd    = &N.DedCd

  do Get-Deduction-Name
! CJH - 06/25/2003 - Garnishments are indicated by a Spcl_Process = G flag rather than a Y
!  if $GarnProcess = 'Y'
  if $SpclProcess = 'G'
! CJH - end
    do Get-Garnishment-Detail
  else
    let $Code = $PlanType || $DedCd || &N.Ded_Class
    let $Name = $DeductionName

    evaluate &N.Ded_Class
      when = 'B'           !Before-tax deduction

!SXK 10/13/97 Begin
      when = 'A'           !After-tax deduction
!SXK End
	move #PreTaxDedsRow  to #i

!SXK 10/13/97 Begin
!      when = 'A'           !After-tax deduction
!        move #PostTaxDedsRow to #i
!SXK End

      when = 'N'           !Non-taxable benefit
      when = 'P'
	move #BenefitsRow    to #i
      when = 'T'           !Taxable benefit
	move #BenefitsRow    to #i
	concat '*' with $Name
      when-other

!SXK 10/13/97 Begin
!        move #PostTaxDedsRow to #i
	move #PreTaxDedsRow to #i
!SXK End

    end-evaluate

    move &N.Ded_Cur to #Cur
    do Update-ETDarray
  end-if

FROM  PS_PAY_DEDUCTION N
WHERE N.COMPANY    = &A.Company
  AND N.PAYGROUP   = &A.PayGroup
  AND N.PAY_END_DT = &A.Pay_End_Dt
  AND N.OFF_CYCLE  = &B.Off_Cycle
  AND N.PAGE_NUM      = &B.Page_num
  AND N.LINE_NUM      = &B.Line_num
  AND N.SEPCHK     = &B.SepChk
end-SELECT
  do Get-Deduction-Balances
end-procedure


!**********************************************************************
begin-procedure Get-Garnishment-Detail
!**********************************************************************

  let #YTD = 0

begin-SELECT
GR.GARNID, GR.DEDUCT_AMT

  let $GarnID = RTRIM(&GR.Garnid, ' ')
  do Get-Garn-Type
  let $FieldName = 'GARN_TYPE'
  let #GarnAmt = &GR.Deduct_Amt

  do Read-Translate-Table
  let $GarnName = $XlatShortName

  let $Name = $GarnID || ' ' || $GarnName
  let $Code = 'GG' || $GarnID || &N.Ded_Class

!SXK 10/13/97 Begin
!  move #PostTaxDedsRow to #i
  move #PreTaxDedsRow to #i
!SXK End

  move #GarnAmt to #Cur
  do Update-ETDarray

FROM PS_PAY_GARNISH GR
WHERE GR.COMPANY = &A.COMPANY
  AND GR.PAYGROUP = &A.PAYGROUP
  AND GR.PAY_END_DT = &A.PAY_END_DT
  AND GR.OFF_CYCLE = &B.OFF_CYCLE
  AND GR.PAGE_NUM = &B.PAGE_NUM
  AND GR.LINE_NUM = &B.LINE_NUM
ORDER BY GR.GARNID
end-SELECT
end-procedure


!***********************************************************************
begin-procedure Get-Garn-Type
!***********************************************************************

begin-SELECT
GS.GARN_TYPE

  let $FieldValue = &GS.Garn_Type

FROM PS_GARN_SPEC GS
WHERE GS.EMPLID = &B.EMPLID
  AND GS.COMPANY = &A.COMPANY
  AND GS.GARNID = $Garnid
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Get-Deduction-Balances
!***********************************************************************

  let #Cur = 0
!SXK 10/25/1999 Begin
  let #ded_pre_count_p = 0
  let #ded_pre_count_t = 0
!SXK 10/25/1999 End

begin-SELECT
NB.PLAN_TYPE,NB.DEDCD,NB.DED_CLASS,NB.DED_YTD

  let $PlanType = &NB.Plan_Type
  let $DedCd = &NB.DEDCD
  do Get-Deduction-Name
  if $SpclProcess= 'G'  !SRK 09/30/2002 - 8.3 reapply
    do Get-Garn-Balances
!SXK 10/25/1999 Begin
!  add 1 to #ded_pre_count_p      ! CWB 03/10/2005
 
!SXK 10/25/1999 End

  else

    let $Code = &NB.Plan_Type || &NB.DedCd || &NB.Ded_Class

    let $PlanType = &NB.Plan_Type
    let $DedCd    = &NB.DedCd
    let $Name = $DeductionName

    evaluate &NB.Ded_Class
      when = 'B'           !Before-tax deduction

!SXK 10/13/97 Begin
      when = 'A'           !After-tax deduction
!SXK End
	move #PreTaxDedsRow  to #i
!SXK 10/25/1999 Begin
!  add 1 to #ded_pre_count_p      ! CWB 03/10/2005
 
!SXK 10/25/1999 End

!SXK 10/13/97 Begin
!      when = 'A'           !After-tax deduction
!        move #PostTaxDedsRow to #i
!SXK End

      when = 'N'           !Non-taxable benefit
      when = 'P'
	move #BenefitsRow    to #i
!SXK 10/25/1999 Begin
!  add 1 to #ded_pre_count_t      ! CWB 03/10/2005
 
!SXK 10/25/1999 End

      when = 'T'           !Taxable benefit
	move #BenefitsRow    to #i
	concat '*' with $Name
!SXK 10/25/1999 Begin
!  add 1 to #ded_pre_count_t      ! CWB 03/10/2005
 
!SXK 10/25/1999 End

      when-other

!SXK 10/13/97 Begin
!        move #PostTaxDedsRow to #i
	move #PreTaxDedsRow to #i
!SXK End
!SXK 10/25/1999 Begin
!  add 1 to #ded_pre_count_p      ! CWB 03/10/2005
 
!SXK 10/25/1999 End

    end-evaluate
!CWB 07/19/99 Begin
    if $DedCd = 'PAYADJ'
      move 0 to #YTD
    else 
      move &NB.Ded_YTD to #YTD
    end-if
!CWB 07/19/99 End

    do Update-ETDarray
  end-if

FROM  PS_DEDUCTION_BAL NB
WHERE NB.EMPLID        = &B.EmplID
  AND NB.COMPANY       = &A.Company
  AND NB.BALANCE_ID    = &A1.BALANCE_ID
  AND NB.BALANCE_YEAR  = &A1.BALANCE_YEAR
  AND NB.BALANCE_PERIOD       =
    (SELECT MAX(BALANCE_PERIOD)
       FROM PS_DEDUCTION_BAL
      WHERE EMPLID        = NB.EMPLID
	AND COMPANY       = NB.COMPANY
	AND BALANCE_ID    = NB.BALANCE_ID
	AND BALANCE_YEAR  = NB.BALANCE_YEAR
	AND PLAN_TYPE     = NB.PLAN_TYPE
	AND DEDCD         = NB.DEDCD
	AND DED_CLASS     = NB.DED_CLASS
	AND BALANCE_PERIOD     <= &A1.BALANCE_PERIOD)
end-SELECT

end-procedure


!**********************************************************************
begin-procedure Get-Garn-Balances
!**********************************************************************

  let #Cur = 0

begin-SELECT
NG.GARNID, NG.DED_CLASS, NG.DED_YTD

  let $GarnID = RTRIM(&NG.Garnid, ' ')
  let #YTD = &NG.Ded_YTD

  do Get-Garn-Type
  do Read-Translate-Table
  let $GarnName = $XlatShortName
  let $Name = 'GARN' || ' ' || $GarnID || ' ' || $GarnName
  let $Code = 'GG' || $GarnID || &NG.Ded_Class

!SXK 12/07/98 Begin
!  move #PostTaxDedsRow to #i
  move #PreTaxDedsRow to #i
!SXk End

  do Update-ETDarray

FROM  PS_GARN_BALANCE NG
WHERE NG.EMPLID = &B.EMPLID
  AND NG.COMPANY = &A.COMPANY
  AND NG.BALANCE_ID = &A1.BALANCE_ID
  AND NG.BALANCE_YEAR = &A1.BALANCE_YEAR
  AND NG.BALANCE_PERIOD =
      (SELECT MAX(BALANCE_PERIOD)
	 FROM PS_GARN_BALANCE
	WHERE EMPLID = NG.EMPLID
	  AND COMPANY = NG.COMPANY
	  AND BALANCE_ID = NG.BALANCE_ID
	  AND BALANCE_YEAR = NG.BALANCE_YEAR
	  AND BALANCE_PERIOD <= &A1.BALANCE_PERIOD)
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Get-Net-Pay-Distribution
!***********************************************************************

begin-SELECT
PD.PAYCHECK_NBR,PD.ACCOUNT_TYPE,PD.DEPOSIT_AMOUNT

  if &PD.Account_Type = '$'             !check
    add &PD.Deposit_Amount to #CheckNetPay
  else
    move &PD.paycheck_nbr        to #Advice#
    add &PD.Deposit_Amount to #DepositNetPay
  end-if

FROM  PS_PAY_DISTRIBUTN PD
WHERE PD.COMPANY    = &A.Company
  AND PD.PAYGROUP   = &A.PayGroup
  AND PD.PAY_END_DT = &A.Pay_End_Dt
  AND PD.OFF_CYCLE  = &B.Off_Cycle
  AND PD.PAGE_NUM      = &B.Page_num
  AND PD.LINE_NUM      = &B.Line_num
  AND PD.SEPCHK     = &B.SepChk
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Vacation-Balances
!***********************************************************************

begin-SELECT LOOPS=1
V.HRS_CARRYOVER,V.HRS_EARNED_YTD,V.HRS_TAKEN_YTD
V.HRS_ADJUST_YTD,V.HRS_BOUGHT_YTD,V.HRS_SOLD_YTD
V.HRS_TAKEN_UNPROC,V.HRS_ADJUST_UNPROC
V.HRS_BOUGHT_UNPROC,V.HRS_SOLD_UNPROC
V.ACCRUAL_PROC_DT

  let #VacStartBal = &V.Hrs_Carryover
  let #VacEarned   = &V.Hrs_Earned_YTD
  let #VacBought   = &V.Hrs_Bought_YTD + &V.Hrs_Bought_Unproc
  let #VacTaken    = &V.Hrs_Taken_YTD  + &V.Hrs_Taken_Unproc
  let #VacSold     = &V.Hrs_Sold_YTD   + &V.Hrs_Sold_Unproc
  let #VacAdjust   = &V.Hrs_Adjust_YTD + &V.Hrs_Adjust_Unproc
  let #VacEndBal   = #VacStartBal + #VacEarned + #VacBought
		     - #VacTaken - #VacSold + #VacAdjust

FROM  PS_LEAVE_ACCRUAL V
WHERE V.EMPLID           = &B.Emplid
  AND V.COMPANY          = &A.Company
  AND V.PLAN_TYPE        = '51'                 !Vacation
  AND V.ACCRUAL_PROC_DT <= &B.Check_Dt
ORDER BY V.ACCRUAL_PROC_DT DESC
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Reset-Variables
!***********************************************************************

!reset employee tax data
  move ' ' to $FWTMarStatus
  move ' ' to $SWTMarStatus

!reset current and YTD amounts
  move 0 to #Cur
  move 0 to #YTD

!reset ETDarray
  move 0 to #i
  while #i <= #lastRow
    move 0 to #j
    while #j <= #lastCol
      put ' ' ' ' 0 0 into ETDarray(#i) Code(#j) Name(#j) Cur(#j) YTD(#j)
      add 1 to #j
    end-while
    add 1 to #i
  end-while

!reset vacation totals
  move 0 to #VacStartBal
  move 0 to #VacEarned
  move 0 to #VacBought
  move 0 to #VacTaken
  move 0 to #VacSold
  move 0 to #VacAdjust
  move 0 to #VacEndBal

!reset current and YTD recalc totals
  move 0 to #HourCurTotal
  move 0 to #HourYTDTotal
  move 0 to #PreTaxDedCurTotal
  move 0 to #PreTaxDedYTDTotal
  move 0 to #PostTaxDedCurTotal
  move 0 to #PostTaxDedYTDTotal
  move 0 to #FedTaxGrossCur
  move 0 to #FedTaxGrossYTD

!reset net pay distribution totals
  move 0 to #CheckNetPay
  move 0 to #DepositNetPay

end-procedure


!***********************************************************************
begin-procedure Update-ETDarray-Current-Earnings
!***********************************************************************

  if #Hours <> 0 or #Earns <> 0

    move #RatesRow to #i
    move 0 to #j
    while #j <= #lastCol
      get $jCode #jRate from ETDarray(#i) Code(#j) Cur(#j)
      if rtrim($jCode,' ') = ''                 !if array entry is null
	break                                   !exit the "while"
      else
	if $Code = $jCode and #Rate = #jRate    !if array entry match
	  break                                 !exit the "while"
	else
	  if #j = #lastCol
	    move $lastCode to $Code
	    move $lastName to $Name
	    move #lastRate to #Rate
	    break                               !exit the "while"
	  end-if
	end-if
      end-if
      add 1 to #j
    end-while

    while #i <= #EarnsRow
      evaluate #i
	when = #RatesRow
	  move #Rate  to #Cur
	when = #HoursRow
	  move #Hours to #Cur
	when = #EarnsRow
	  move #Earns to #Cur
	when-other
	  move 0      to #Cur
      end-evaluate

      put $Code $Name into ETDarray(#i) Code(#j) Name(#j)

      if #i = #RatesRow
	put #Cur     into ETDarray(#i) Cur(#j)
      else
	array-add #Cur to ETDarray(#i) Cur(#j)
      end-if
      add 1 to #i
    end-while

  end-if
end-procedure


!***********************************************************************
begin-procedure Update-ETDarray
!***********************************************************************

  move 0 to #j
  while #j <= #lastCol

    get $jCode from ETDarray(#i) Code(#j)
    if rtrim($jCode,' ') = ''                   !if array entry is null
      put $Code $Name into ETDarray(#i) Code(#j) Name(#j)
      break                                     !exit the "while"
    else
      if $Code = $jCode                         !if array entry match
	break                                   !exit the "while"
      else
	if #j = #lastCol
	  put $lastCode $lastName into ETDarray(#i) Code(#j) Name(#j)
	  break                                 !exit the "while"
	end-if
      end-if
    end-if
    add 1 to #j

  end-while

  array-add #Cur #YTD to ETDarray(#i) Cur(#j) YTD(#j)

end-procedure


!***********************************************************************
begin-procedure Read-ETDarray
!***********************************************************************

  move 0 to #i
  while #i <= #lastRow
    get $Name #Cur #YTD from ETDarray(#i) Name(#j) Cur(#j) YTD(#j)
    evaluate #i
      when = #RatesRow
	move $Name to $EarnName
	move #Cur  to #EarnRate
      when = #HoursRow
	move #Cur  to #HourCur
	move #YTD  to #HourYTD
	add  #Cur  to #HourCurTotal
	add  #YTD  to #HourYTDTotal
      when = #EarnsRow
	move #Cur  to #EarnCur
	move #YTD  to #EarnYTD
      when = #PreTaxDedsRow
	move $Name to $PreTaxDedName
	move #Cur  to #PreTaxDedCur
	move #YTD  to #PreTaxDedYTD
	add  #Cur  to #PreTaxDedCurTotal
	add  #YTD  to #PreTaxDedYTDTotal
      when = #TaxesRow
	move $Name to $TaxName
	move #Cur  to #TaxCur
	move #YTD  to #TaxYTD

!SXK 10/13/97 Begin
!      when = #PostTaxDedsRow
!        move $Name to $PostTaxDedName
!        move #Cur  to #PostTaxDedCur
!        move #YTD  to #PostTaxDedYTD
!        add  #Cur  to #PostTaxDedCurTotal
!        add  #YTD  to #PostTaxDedYTDTotal
!SXK End

      when = #BenefitsRow
	move $Name to $BenefitName
	move #Cur  to #BenefitCur
	move #YTD  to #BenefitYTD
    end-evaluate
    add 1 to #i
  end-while
end-procedure


!***********************************************************************
begin-procedure Print-Statement
!***********************************************************************

  do Declare-Printer-Statement

!print the pay period information

!**********
!SXK 10/13/97 Begin
!**********

  let #row = 1

  move 11 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  print $CompanyName            (#row,3) bold
 
!********  SCM   begin  07/03/2003   Print 'TBP' on bonus checks addr front in big font
  if $EE_Had_TBP_Erncd535 = 'Y'                   !if ee had an erncd of 535, this is a
      let #row = 2                                !team bonus check.  Print 'TBP'                                 
      move 30 to #companypntsize                  !in upper right corner of addr flap 
      graphic () font :#StdFont :#CompanyPntSize  !move down a row to accomodate big font
      print 'TBP'            (#row,80) bold
  end-if
!********  SCM   end    07/03/2003
 
  move 9 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  position (+2)
  do Format-Check-Name-Address
  print $CheckLocation          (,3)
!SXK 04/06/99 Begin
  print $checkdept (+1,3)
  print $checkacct (+1,3)
  print 'Mail Drop: ' (+1,3)
  print &PAY.MAIL_DROP ()
!SXK 04/06/99 End

!print the ETD detail information

  let #row1 = 23  !Original value 11
  let #row2 = 40  !Original Value 28 

  columns 43

  graphic (#row1,1,81) box  1 10 12
  graphic (#row1,,81)  box  1 10

  columns 3 43 3 43 84

  graphic (+1,1,40)    box 2 10 
  graphic (+2,,40)     box 9 10
  graphic (+9,,40)     box 1 10
  graphic (+1,,40)     box 4 10
  graphic (+4,,81)     box 1 10
  next-column
  let #row3 = #row1 + 1
  graphic (#row3,1,81) box  2 10
  graphic (+2,,81)     box 13 10
  graphic (+13,,81)    box  1 10
  next-column
  graphic (#row2,1,40) box  1 10 12
  graphic (#row2,,40)  box  1 10
  graphic (+1,,40)     box  1 10
  graphic (+1,,40)     box 13 10   !Used to be 13 for the height SXK 02/18/98
  graphic (+13,,40)    box  1 10
  next-column
  graphic (#row2,1,41) box  1 10 12
  graphic (#row2,,41)  box  1 10
  graphic (+1,,41)     box  1 10
  graphic (+1,,41)     box 13 10   !Used to be 13 for the height SXK 02/18/98 
  graphic (+13,,41)    box  1 10
  next-column
  graphic (#row2,1,40) box  1 10 12
  graphic (#row2,,40)  box  1 10
  graphic (+1,,40)     box  1 10
  graphic (+1,,40)     box 13 10   !Used to be 13 for the height SXK 02/18/98
  graphic (+13,,40)    box  1 10

  use-column 0

  move 9 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  print $CompanyName            (#row1,4) bold
 
  graphic () font :#StdFont :#StmtPntSize
 
  print 'HOURS AND EARNINGS'    (#row1,71) bold

!print the employee information

  print 'Pay Begin Dt:'       (+1,4)
  do Format-DateTime(&A.Pay_Begin_Dt, $out, {DEFDATE}, '', '')
  print $out                    (,16)
  print 'Check Dt:'        (,25)
  do Format-DateTime(&B.Check_Dt, $out, {DEFDATE}, '', '')
  print $out                    (,35)

  print '-'                     (,77,16) fill
  print 'Current'               (,87)
  print '-'                     (,93,16)   fill
  print '-'                     (,107,12)   fill
  print 'YTD'                   (,114)
  print '-'                     (,118,10)   fill

  print 'Pay End Dt:'       (+1,4)
  do Format-DateTime(&A.Pay_End_Dt, $out, {DEFDATE}, '', '')
  print $out                    (,16)
  print 'Check #:'              (,25)
!  do Format-Number(&B.paycheck_nbr, $out, '0999999')
  do Format-Number(&B.paycheck_nbr, $out, '09999999')   ! CWB 02/07/2007 expand to 8 digits
  print $out                    (,35) bold

  print 'Description'           (,44)
  print 'Rate'                  (,77)
  print 'Hours'                 (,88)
  print 'Earnings'              (,96)
  print 'Hours'                 (,107)
  print 'Earnings'              (,117)

  print $HomeName               (+1,4) bold
  print $HomeAddrLine1          (+1,4)
  print $HomeAddrLine2          (+1,4)
  print $HomeAddrLine3          (+1,4)
!SXK 01/25/99 Moved emplid besides homeaddrline3 
  print 'Emp ID: '            (,23) !isdvmxr 10/19/2006 chanaged from 25 to 23
!  print 'Employee ID: '         (+1,4)
  !print &P.emplid              (,33)     edit xxx-xx-xxxx  ISDVMXR 09/14/2006
  print $Emplid                 (,32)    !ISDVMXR 09/14/2006 ISDVMXR 09/14/2006 change from 33 to 32
!SXK 01/25/99 End

  print 'Department:'           (+1,4)
  let $out = $DeptID || '-' || $DeptName
  print $out                    (,16)
!SXK 01/25/99 Begin
  print 'Acct CD:'              (+1,4)
  let $out = $AcctCD || '-' || $AcctCDName
  print $out                    (,16)
!SXK 01/25/99 End
  print 'Location:'             (+1,4)
  print $LocationName           (,16)
  print 'Job Title:'            (+1,4)
  print $JobTitle               (,16)
  print 'Pay Group:'            (+1,4)
  let $out = $PayGroup || '-' || $PayGroupName
  print $out                    (,16)

  let #row = 35
  columns 4 20 30

  print 'TAX DATA:'             (#row,1)
  print 'Marital Status:'       (+1,1)
  print 'Allowances:'           (+1,1)
  print 'Addl. Pct.:'           (+1,1)
  print 'Addl. Amt.:'           (+1,1)

  next-column
  print 'Federal'               (#row,1)
  print $FWTMarStatus           (+1,1)
  let   $out = ltrim(edit(&FT.FWT_Allowances,'999'),' ')
  print $out                    (+1,1)
  let   $out = ltrim(edit(&FT.FWT_Addl_Pct,'b9.999'),' ')
  print $out                    (+1,1)
  let   $out = ltrim(edit(&FT.FWT_Addl_Amt,'b9,999.99'),' ')
  print $out                    (+1,1)

  next-column
  let $ResidentState = rtrim(&ST.State, ' ') || ' State'
  print $ResidentState          (#row,1)
  print $SWTMarStatus           (+1,1)
  let   $out = ltrim(edit(&ST.SWT_Allowances,'999'),' ')
  print $out                    (+1,1)
  if &ST.SWT_Addl_Allownces > 0
    let   $out = '+' || ltrim(edit(&ST.SWT_Addl_Allownces,'999'),' ')
    print $out                  ()
  end-if
  let   $out = ltrim(edit(&ST.SWT_Addl_Pct,'b9.999'),' ')
  print $out                    (+1,1)
  let   $out = ltrim(edit(&ST.SWT_Addl_Amt,'b9,999.99'),' ')
  print $out                    (+1,1)

  use-column 0

  
  print 'TAXES'                 (#row2,16)      bold
  print 'Description'           (+1,4)
  print ' Current'              (,26)
  print ' YTD'                  (,38)

  print 'DEDUCTIONS' (#row2,59) bold
  print 'EMPLOYER PAID BENEFITS'(,95)      bold
  print 'Description'           (+1,44)
  print ' Current'              (,68)
  print ' YTD'                  (,79)
  print 'Description'           (,85)
  print ' Current'              (,109)
  print ' YTD'                  (,119)

  let #row1 = #row1 + 3
  let #row2 = #row2 + 2

  columns 44 75 87 94 106 113 4 24 33 44 66 74 85 107 114

  move 0 to #j
!SXK 02/18/98 Begin
!  move 'Y' to $Total_Earn_Print
!  move 'Y' to $Total_Print

  while #j <= {n}
     if #j = {n}
!    if #j = {n} - 1             !totals lines  SXK 02/18/98
    !SXK 0928/1999 Begin
    if #ern_pre_count <= {n}
      move 'Total:'             to $EarnName
      move 0                    to #EarnRate
      move #HourCurTotal        to #HourCur
      move #HourYTDTotal        to #HourYTD
      move &B.Total_Gross       to #EarnCur
      move &Y.Total_Gross_YTD   to #EarnYTD
      move 'N' to $Total_Print   !SXK 02/18/98
    else
      move '* Continued on next page' to $EarnName
      move 0 to #earnrate
      move 0 to #hourcur
      move 0 to #hourytd
      move 0 to #earncur
      move 0 to #earnytd
      let $extra_page = 'Y'
    end-if
!    else    !SXK 02/18/98
!      if #j = {n}                 !totals lines
      if #ded_pre_count_p <= {n}
         move 'Total:'             to $PreTaxDedName
         move #PreTaxDedCurTotal   to #PreTaxDedCur
         move #PreTaxDedYTDTotal   to #PreTaxDedYTD
      else
         move '* Continued on next page' to $pretaxdedname
         move 0 to #pretaxdedcur
         move 0 to #pretaxdedytd
         let $extra_page = 'Y'
      end-if
      if #tax_pre_count <= {n}
         move 'Total:'             to $TaxName
         move &B.Total_Taxes       to #TaxCur
         move &Y.Total_Taxes_YTD   to #TaxYTD
      else
         move '* Continued on next page' to $TaxName
         move 0 to #taxcur
         move 0 to #taxytd
         let $extra_page = 'Y'
      end-if

!        move 'Total:'             to $PostTaxDedName
!        move #PostTaxDedCurTotal  to #PostTaxDedCur
!        move #PostTaxDedYTDTotal  to #PostTaxDedYTD
       if #ded_pre_count_t <= {n}
	 move '* Taxable'          to $BenefitName
	 move 0                    to #BenefitCur
	 move 0                    to #BenefitYTD
       else 
         move '* Continued on next page' to $BenefitName
         move 0 to #BenefitCur
         move 0 to #BenefitYTD
         let $extra_page = 'Y'
       end-if
      else
	 do Read-ETDarray
      end-if
!    end-if

!SXK 02/18/98 Begin
!    if $Total_Earn_Print = 'Y'
!SXK 02/18/98 End

       print $EarnName             (#row1,1)
     !SXK 09/29/1999 Begin
       if substr($EarnName,1,1) = '*'
          let $continue = 'Y'
       else
          let $continue = 'N'
       end-if
     !SXK 09/30/1999 end
       next-column
 
!***********  SCM  07/29/2003 Begin -Comment current code and Add code to print rate if TBP bonus
!       if #HourCur <> 0
!          print #EarnRate           () edit b999.9999mi ! change to 12,6 if needed
!       end-if

       if #HourCur <> 0
           print #EarnRate           () edit b999.9999mi ! change to 12,6 if needed
       else
          if $EarnName = 'Team Bonus Program'
             print #EarnRate           () edit b999.9999mi  
          end-if
       end-if
!************ SCM 07/29/2003  End
       
       next-column
       print #HourCur              () edit b999.99mi
       next-column
       if rtrim($EarnName,' ') <> '' and $continue = 'N'
	  print #EarnCur            () edit 9999,990.99mi
       end-if
       next-column
       print #HourYTD              () edit b9999.99mi
       next-column
       if rtrim($EarnName,' ') <> '' and $continue = 'N'
	  print #EarnYTD            () edit 999999,990.99mi
       end-if

!SXK 02/18/98 Begin

!       if $Total_Print = 'N'
!          move 'N' to $Total_Earn_Print
!       end-if
!    else
!          next-column
!          next-column
!          next-column
!          next-column
!          next-column

!    end-if

!SXK 02/18/98 End

    next-column
    print $TaxName              (#row2,1)
    if substr($TaxName,1,1) = '*'
       let $continue = 'Y'
    else 
       let $continue = 'N'
    end-if
    next-column
    if rtrim($TaxName,' ') <> '' and $continue = 'N'
      print #TaxCur             () edit 9999,990.99mi
      next-column
      print #TaxYTD             () edit 99999,990.99mi
      add 1 to #tax_pre_count       ! CWB 03/10/2005
    else
      next-column
    end-if

    next-column
    print $PreTaxDedName        (#row2,1)
    if substr($PreTaxDedName,1,1) = '*'
       let $continue = 'Y'
    else
       let $continue = 'N'
    end-if
    next-column
    if rtrim($PreTaxDedName,' ') <> '' and $continue = 'N'
      print #PreTaxDedCur       () edit 9,999,990.99mi
      next-column
      print #PreTaxDedYTD       () edit 99,999,990.99mi
      add 1 to #ded_pre_count_p       ! CWB 03/10/2005
    else
      next-column
    end-if

!    next-column
!    print $PostTaxDedName       ()
!    next-column
!    if rtrim($PostTaxDedName,' ') <> ''
!      print #PostTaxDedCur      () edit 9,999,990.99mi
!      next-column
!      print #PostTaxDedYTD      () edit 99,999,990.99mi
!    else
!      next-column
!    end-if

    next-column
    print $BenefitName          ()
    if substr($BenefitName,1,1) = '*'
       let $continue = 'Y'
    else
       let $continue = 'N'
    end-if
    next-column
    if rtrim($BenefitName,' ') <> '' and $continue = 'N'
      if #j <= #lastCol         !not totals line
	print #BenefitCur       () edit 9,999,990.99mi
	next-column
	print #BenefitYTD       () edit 99,999,990.99mi
        add 1 to #ded_pre_count_t      ! CWB 03/10/2005
      end-if
    else
      next-column
    end-if

    add 1 to #row1
    add 1 to #row2
    next-column
    add 1 to #j

  end-while

!print the current and YTD summary totals

  let #row = 56  !Used to be 53 SXK 02/18/98

  columns 3

  graphic (#row,1,121) box 1 10 15
  graphic (#row,,121)  box 1 10
  graphic (+1,,121)    box 2 10

  columns 4 24 48 72 94 113

  print ''                      (#row,1)
  print 'Current:'              (+1,1)
  print 'YTD:'                  (+1,1)

  next-column
  print 'TOTAL GROSS'           (#row,-2) bold
  print &B.Total_Gross          (+1,1) edit 999,999,990.99mi
  print &Y.Total_Gross_YTD      (+1,1) edit 999,999,990.99mi

  next-column
  print 'FED TAXABLE GROSS'     (#row,-8) bold
  print #FedTaxGrossCur         (+1,1) edit 999,999,990.99mi
  print #FedTaxGrossYTD         (+1,1) edit 999,999,990.99mi

  next-column
  print ' TOTAL TAXES'          (#row,-3) bold
  print &B.Total_Taxes          (+1,1) edit 99,999,990.99mi
  print &Y.Total_Taxes_YTD      (+1,1) edit 99,999,990.99mi

  next-column
  print 'TOTAL DEDUCTIONS'      (#row,-8) bold
  print &B.Total_Deductions     (+1,1) edit 99,999,990.99mi
  print &Y.Total_Dedns_YTD      (+1,1) edit 99,999,990.99mi

  next-column
  print ' NET PAY'              (#row,+2) bold
  print &B.Net_Pay              (+1,1) edit 999,999,990.99mi
  print &Y.Net_Pay_YTD          (+1,1) edit 999,999,990.99mi

!print the vacation balance totals

!  let #row = 47

!  columns 1

!  graphic (#row,1,24) box  1 10 12
!  graphic (#row,,24)  box  1 10
!  graphic (+1,,24)    box  6 10
!  graphic (+6,,24)    box  1 10

!  columns 2 19

!  print 'PTO HOURS'             (#row,1) bold
!  print 'Start Balance:'        (+1,1)
!  print '+ Earned:'             (+1,1)
!  print '+ Bought:'             (+1,1)
!  print ' -  Taken:'            (+1,1)
!  print ' -  Sold:'             (+1,1)
!  print '+ Adjustments:'        (+1,1)
!  print 'End Balance:'          (+1,1)

!  next-column
!  print ' YTD'                  (#row,+1) bold
!  print #VacStartBal            (+1,1) edit 9,990.9mi
!  print #VacEarned              (+1,1) edit b,999.9mi
!  print #VacBought              (+1,1) edit b,999.9mi
!  print #VacTaken               (+1,1) edit b,999.9mi
!  print #VacSold                (+1,1) edit b,999.9mi
!  print #VacAdjust              (+1,1) edit b,999.9mi
!  print #VacEndBal              (+1,1) edit 9,990.9mi

!print the net pay distribution

!  let #row = 47

!  columns 92

!  graphic (#row,1,35) box  1 10 12
!  graphic (#row,,35)  box  1 10
!  graphic (+1,,35)    box  2 10
!  graphic (+2,,35)    box  1 10

!  columns 93 116

!  print 'NET PAY DISTRIBUTION'  (#row,1) bold

!  if #DepositNetPay <> 0
!    do Format-Number(#Advice#, $out, '0999999')
!    let $out = 'Advice #' || $out
!    print $out                  (+1,1)
!    next-column
!    print #DepositNetPay        () edit b99,999,999.99mi
!    next-column
!  end-if

!  if #CheckNetPay <> 0
!    do Format-Number(&B.payCheck_nbr, $out, '0999999')
!    let $out = 'Check #' || $out
!    print $out                  (+1,1)
!    next-column
!    print #CheckNetPay          () edit b99,999,999.99mi
!    next-column
!  end-if

!  position                      (50,1)
!  print 'Total:'                ()
!  next-column
!  print &B.Net_Pay              () edit 999,999,990.99mi

!print the check message

  let #row = 59

  columns 4

  print 'MESSAGE: '             (#row,1) bold
  print $CheckMessage           ()
  !SXK 09/30/1999 Begin

if $extra_page = 'Y'
  print 'CONTINUED ON NEXT PAGE' (68) center bold

!Print the employee address on the flap

  do Declare-Printer-Check
  
  let $h_name = upper($checkname)  
  position (8)
  move 11 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  print $H_Name               (,50) bold

  move 9 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  position (+1) 
  print $checkAddrLine1          (,50)
  position (+1) 
  print $checkAddrLine2          (,50)
  position (+1) 
  print $checkAddrLine3          (,50) 

end-if
 !SXK 09/30/1999 End  

end-procedure


!***********************************************************************
begin-procedure Print-Check
!***********************************************************************

  do Declare-Printer-Check

  do Format-Check-Name-Address

!print the company and bank information and the check number

  let #row = 62

  columns 4 59 71 114
  graphic () font :#StdFont :#ChkPntSize

  print $CompanyName            (#row,1) bold
  print $CompanyAddrLine1       (+1,1)
  print $CompanyAddrLine2       (+1,1)
  print $CompanyAddrLine3       (+1,1)

  next-column
  graphic () font :#StdFont :#StmtPntSize
  print $BankID                 (#row,1)

  next-column
  graphic () font :#StdFont :#ChkPntSize

  print $BankName               (#row,1) bold
  print $BankAddrLine1          (+1,1)
  print $BankAddrLine2          (+1,1)
  print $BankAddrLine3          (+1,1)

  next-column
  print 'Check No.'             (#row,1) bold
!  do Format-Number(&B.payCheck_nbr, $out, '9999999')
  do Format-Number(&B.paycheck_nbr, $out, '09999999')   ! CWB 02/07/2007 expand to 8 digits
  let $out = ltrim($out,' ')
  print $out                    (+1,1)   bold

!print the check date and numeric amount

  let #row = 65  !Used to be 66

  columns 96 109

  print 'Date:'                 (#row,1) bold

  next-column
  do Format-DateTime(&B.Check_Dt, $out, {DEFDATE}, '', '')
  print $out                    (#row,1) bold

  next-column
  add 2 to #row
  print 'Pay Amount:'           (#row,1) bold

  next-column
  do Format-Number(#CheckNetPay, $out, '$$$$,$$$,$$9.99mi')
  let $out = rpad(ltrim($out,' '),14,'*')
  print $out                    (#row,1) bold

!print the amount in words and the payee information

  let #row = 68

  columns 4 15

  print 'Pay'                   (#row,1) bold

  next-column
  graphic                       (#row,1,81) horz-line 7
  move #CheckNetPay to #NetPay
  do Net-Pay-In-Words           !convert numbers to words
  let $NetInWords = '****' || upper($NetInWords) || '****'
  print $NetInWords             ()

  next-column
  print 'To The'                (+2,1) bold

! CWB 02/13/2001 Begin
!  print '** VOID AFTER 6 MONTHS **' (,65) bold
! CWB 02/13/2001 End

  print 'Order Of'              (+1,1) bold

  next-column
  print $CheckName              (+1,1) bold
  print $CheckAddrLine1         (+1,1)
  print $CheckAddrLine2         (+1,1)
  print $CheckAddrLine3         (+1,1)
  print $CheckLocation          (+1,1)

!print the check signature
 
!      SCM 2/6/2001  bypass printing of signature if Company = 'RFI'
!NPK/ASS 06/18/2008 Removed RFI as per payroll request  
  !If &A.COMPANY = 'RFI'                         !SCM 2/6/2001
  !   goto skipsig                               !SCM 2/6/2001
  !else                                          !SCM 2/6/2001
  !NPK/ASS 06/18/2008 Removed RFI as per payroll request  
     let #row = 73  !Used to be 76

     columns 78     !82  !USed to be 84

!  graphic                       (#row,1,40) horz-line 7
!  print $linesperinch ()code
    print $SigFont                (#row,1) code
!  print 'A'                     (,+2)
    let #row_2 = #row - 2
    let #row_1 = #row - 1
    let #row_plus2 = #row + 2
    let #row_plus1 = #row + 1
    print $sigfont_1  (#row_1,1) code
    print $sigfont_2  (#row,1) code
    print $sigfont_3  (#row_plus1,1) code
    print $sigfont_4  (#row_plus2,1) code
    print $sigtail (#row_plus2,1) code
 ! end-if                                         !SCM 2/6/2001
 !NPK/ASS 06/18/2008 Removed RFI as per payroll request  

!skipsig:                                         !SCM 2/6/2001
!NPK/ASS 06/18/2008 Removed RFI as per payroll request  

!print the bank microcode
!  SCM 2/23/2001   Created separate paragraphs for COD and POD since they have different micrcoding.

!NPK/ASS 06/18/2008 Removed RFI as per payroll request  
  !If &A.COMPANY = 'RFI'                         !SCM 2/23/2001
  !   do Z001-Print-Bank-Micrcode-COD            !SCM 2/23/2001
 ! else                                          !SCM 2/23/2001
     do Z002-Print-Bank-Micrcode-POD            !SCM 2/23/2001
 ! end-if                                        !SCM 2/23/2001
!NPK/ASS 06/18/2008 Removed RFI as per payroll request  
                                            

!Print the employee address on the flap

  do Declare-Printer-Check
  
  let $h_name = upper($checkname)  
  position (8)
  move 11 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  print $H_Name               (,50) bold

  move 9 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  position (+1) 
  print $checkAddrLine1          (,50)
  position (+1) 
  print $checkAddrLine2          (,50)
  position (+1) 
  print $checkAddrLine3          (,50) 
  

  new-page

end-procedure

!********************
!SXK End
!********************
!SXK 09/28/1999 Begin
!***********************************************************************
begin-procedure Print-Extra-Page
!***********************************************************************
  new-page

  do Declare-Printer-Statement

!SRK 09/30/2002 - Modified maildrop from employment to Payroll data table
!print the pay period information

  let #row = 1

  move 11 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  print $CompanyName            (#row,3) bold

!********  SCM   begin  07/03/2003   Print 'TBP' on bonus checks addr front in big font
  if $EE_Had_TBP_Erncd535 = 'Y'                   !if ee had an erncd of 535, this is a
      let #row = 2                                !team bonus check.  Print 'TBP'                                 
      move 30 to #companypntsize                  !in upper right corner of addr flap 
      graphic () font :#StdFont :#CompanyPntSize  !move down a row to accomodate big font
      print 'TBP'            (#row,80) bold
  end-if
!********  SCM   end    07/03/2003
 
  move 9 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  position (+2)
  do Format-Check-Name-Address
  print $CheckLocation          (,3)
  print $checkdept (+1,3)
  print $checkacct (+1,3)
  print 'Mail Drop: ' (+1,3)
  print &PAY.MAIL_DROP ()


!print the ETD detail information

  let #row1 = 23  !Original value 11
  let #row2 = 40  !Original Value 28 

  columns 43

  graphic (#row1,1,81) box  1 10 12
  graphic (#row1,,81)  box  1 10

  columns 3 43 3 43 84

  graphic (+1,1,40)    box 2 10 
  graphic (+2,,40)     box 9 10
  graphic (+9,,40)     box 1 10
  graphic (+1,,40)     box 4 10
  graphic (+4,,81)     box 1 10
  next-column
  let #row3 = #row1 + 1
  graphic (#row3,1,81) box  2 10
  graphic (+2,,81)     box 13 10
  graphic (+13,,81)    box  1 10
  next-column
  graphic (#row2,1,40) box  1 10 12
  graphic (#row2,,40)  box  1 10
  graphic (+1,,40)     box  1 10
  graphic (+1,,40)     box 13 10   !Used to be 13 for the height SXK 02/18/98
  graphic (+13,,40)    box  1 10
  next-column
  graphic (#row2,1,41) box  1 10 12
  graphic (#row2,,41)  box  1 10
  graphic (+1,,41)     box  1 10
  graphic (+1,,41)     box 13 10   !Used to be 13 for the height SXK 02/18/98 
  graphic (+13,,41)    box  1 10
  next-column
  graphic (#row2,1,40) box  1 10 12
  graphic (#row2,,40)  box  1 10
  graphic (+1,,40)     box  1 10
  graphic (+1,,40)     box 13 10   !Used to be 13 for the height SXK 02/18/98
  graphic (+13,,40)    box  1 10

  use-column 0

  move 9 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  print $CompanyName            (#row1,4) bold
 
  graphic () font :#StdFont :#StmtPntSize
 
  print 'HOURS AND EARNINGS'    (#row1,71) bold

!print the employee information

  print 'Pay Begin Dt:'       (+1,4)
  do Format-DateTime(&A.Pay_Begin_Dt, $out, {DEFDATE}, '', '')
  print $out                    (,16)
  print 'Check Dt:'        (,25)
  do Format-DateTime(&B.Check_Dt, $out, {DEFDATE}, '', '')
  print $out                    (,35)

  print '-'                     (,77,16) fill
  print 'Current'               (,87)
  print '-'                     (,93,16)   fill
  print '-'                     (,107,12)   fill
  print 'YTD'                   (,114)
  print '-'                     (,118,10)   fill

  print 'Pay End Dt:'       (+1,4)
  do Format-DateTime(&A.Pay_End_Dt, $out, {DEFDATE}, '', '')
  print $out                    (,16)
  print 'Check #:'              (,25)
!  do Format-Number(&B.payCheck_nbr, $out, '0999999')
  do Format-Number(&B.paycheck_nbr, $out, '09999999')   ! CWB 02/07/2007 expand to 8 digits
  print $out                    (,35) bold

  print 'Description'           (,44)
  print 'Rate'                  (,77)
  print 'Hours'                 (,88)
  print 'Earnings'              (,96)
  print 'Hours'                 (,107)
  print 'Earnings'              (,117)

  print $HomeName               (+1,4) bold
  print $HomeAddrLine1          (+1,4)
  print $HomeAddrLine2          (+1,4)
  print $HomeAddrLine3          (+1,4)

  print 'Emp ID: '            (,23)!isdvmxr 10/19/2006 chanaged from 25 to 23

!  print &P.emplid                (,33)     edit xxx-xx-xxxx  ISDVMXR 09/14/2006
   print $Emplid                  (,32) !ISDVMXR 09/14/2006 ISDVMXR 09/14/2006 change from 33 to 32




  print 'Department:'           (+1,4)
  let $out = $DeptID || '-' || $DeptName
  print $out                    (,16)

  print 'Acct CD:'              (+1,4)
  let $out = $AcctCD || '-' || $AcctCDName
  print $out                    (,16)

  print 'Location:'             (+1,4)
  print $LocationName           (,16)
  print 'Job Title:'            (+1,4)
  print $JobTitle               (,16)
  print 'Pay Group:'            (+1,4)
  let $out = $PayGroup || '-' || $PayGroupName
  print $out                    (,16)

  let #row = 35
  columns 4 20 30

  print 'TAX DATA:'             (#row,1)
  print 'Marital Status:'       (+1,1)
  print 'Allowances:'           (+1,1)
  print 'Addl. Pct.:'           (+1,1)
  print 'Addl. Amt.:'           (+1,1)

  next-column
  print 'Federal'               (#row,1)
  print $FWTMarStatus           (+1,1)
  let   $out = ltrim(edit(&FT.FWT_Allowances,'999'),' ')
  print $out                    (+1,1)
  let   $out = ltrim(edit(&FT.FWT_Addl_Pct,'b9.999'),' ')
  print $out                    (+1,1)
  let   $out = ltrim(edit(&FT.FWT_Addl_Amt,'b9,999.99'),' ')
  print $out                    (+1,1)

  next-column
  let $ResidentState = rtrim(&ST.State, ' ') || ' State'
  print $ResidentState          (#row,1)
  print $SWTMarStatus           (+1,1)
  let   $out = ltrim(edit(&ST.SWT_Allowances,'999'),' ')
  print $out                    (+1,1)
  if &ST.SWT_Addl_Allownces > 0
    let   $out = '+' || ltrim(edit(&ST.SWT_Addl_Allownces,'999'),' ')
    print $out                  ()
  end-if
  let   $out = ltrim(edit(&ST.SWT_Addl_Pct,'b9.999'),' ')
  print $out                    (+1,1)
  let   $out = ltrim(edit(&ST.SWT_Addl_Amt,'b9,999.99'),' ')
  print $out                    (+1,1)

  use-column 0

  
  print 'TAXES'                 (#row2,16)      bold
  print 'Description'           (+1,4)
  print ' Current'              (,26)
  print ' YTD'                  (,38)

  print 'DEDUCTIONS' (#row2,59) bold
  print 'EMPLOYER PAID BENEFITS'(,95)      bold
  print 'Description'           (+1,44)
  print ' Current'              (,68)
  print ' YTD'                  (,79)
  print 'Description'           (,85)
  print ' Current'              (,109)
  print ' YTD'                  (,119)

  let #row1 = #row1 + 3
  let #row2 = #row2 + 2

  columns 44 75 87 94 106 113 4 24 33 44 66 74 85 107 114

  let #j = {n}

  while #j <= {new_n}
     if #j = {new_n}
     if #ern_pre_count > {n}
      move 'Total:'             to $EarnName
      move 0                    to #EarnRate
      move #HourCurTotal        to #HourCur
      move #HourYTDTotal        to #HourYTD
      move &B.Total_Gross       to #EarnCur
      move &Y.Total_Gross_YTD   to #EarnYTD
      move 'N' to $Total_Print   !SXK 02/18/98
     end-if
     if #ded_pre_count_p > {n}
         move 'Total:'             to $PreTaxDedName
         move #PreTaxDedCurTotal   to #PreTaxDedCur
         move #PreTaxDedYTDTotal   to #PreTaxDedYTD
     end-if
     if #tax_pre_count > {n}
         move 'Total:'             to $TaxName
         move &B.Total_Taxes       to #TaxCur
         move &Y.Total_Taxes_YTD   to #TaxYTD
     end-if
     if #ded_pre_count_t > {n} 
         move '* Taxable'          to $BenefitName
         move 0                    to #BenefitCur
         move 0                    to #BenefitYTD
     end-if
   else
        do Read-ETDarray
   end-if


       print $EarnName             (#row1,1)
       next-column
       if #HourCur <> 0
          print #EarnRate           () edit b999.9999mi ! change to 12,6 if needed
       end-if
       next-column
       print #HourCur              () edit b999.99mi
       next-column
       if rtrim($EarnName,' ') <> ''
          print #EarnCur            () edit 9999,990.99mi
       end-if
       next-column
       print #HourYTD              () edit b9999.99mi
       next-column
       if rtrim($EarnName,' ') <> ''
          print #EarnYTD            () edit 999999,990.99mi
       end-if

!SXK 02/18/98 Begin

!       if $Total_Print = 'N'
!          move 'N' to $Total_Earn_Print
!       end-if
!    else
!          next-column
!          next-column
!          next-column
!          next-column
!          next-column

!    end-if

!SXK 02/18/98 End

    next-column
    print $TaxName              (#row2,1)
    next-column
    if rtrim($TaxName,' ') <> ''
      print #TaxCur             () edit 9999,990.99mi
      next-column
      print #TaxYTD             () edit 99999,990.99mi
    else
      next-column
    end-if

    next-column
    print $PreTaxDedName        (#row2,1)
    next-column
    if rtrim($PreTaxDedName,' ') <> ''
      print #PreTaxDedCur       () edit 9,999,990.99mi
      next-column
      print #PreTaxDedYTD       () edit 99,999,990.99mi
    else
      next-column
    end-if

!    next-column
!    print $PostTaxDedName       ()
!    next-column
!    if rtrim($PostTaxDedName,' ') <> ''
!      print #PostTaxDedCur      () edit 9,999,990.99mi
!      next-column
!      print #PostTaxDedYTD      () edit 99,999,990.99mi
!    else
!      next-column
!    end-if

    next-column
    print $BenefitName          ()
    next-column
    if rtrim($BenefitName,' ') <> ''
      if #j <= #lastCol         !not totals line
        print #BenefitCur       () edit 9,999,990.99mi
        next-column
        print #BenefitYTD       () edit 99,999,990.99mi
      end-if
    else
      next-column
    end-if

    add 1 to #row1
    add 1 to #row2
    next-column
    add 1 to #j

  end-while

end-procedure

! SCM 2/23/2001   new paragraph for printing checks in Cleveland.
!
!*********************************************************************** 
begin-procedure Z001-Print-Bank-Micrcode-COD
!***********************************************************************
  use-column 0
!  do Format-Number(&B.payCheck_nbr, $CheckNum, '0999999')
  do Format-Number(&B.paycheck_nbr, $CheckNum, '09999999')   ! CWB 02/07/2007 expand to 8 digits
  let #begin = 1
  let #end = 1

  let $transit_string = 'a'   !$exc_String||'a'      
  while RTRIM(substr($TransitNum,#begin,#end),' ') <> ''
       let $partial_String = substr($TransitNum,#begin,#end)
       let $partial_String = RTRIM($partial_string,' ')
       let $transit_String = $transit_String||$partial_String !||$exc_string
       let #begin = #begin + #end
       let #end = 2
  end-while

  let $transit_string = $transit_string||'a'               

  let #begin = 1
  let #end = 2
  let $acct_string = ''
  while RTRIM(substr($AccountNum,#begin,#end),' ') <> ''
       let $partial_String = substr($AccountNum,#begin,#end)
       let $partial_String = RTRIM($partial_string,' ')
       if #begin = 1
	  let $acct_String = $acct_String||$partial_String
       else
	 let $acct_String = $acct_String||$partial_String
       end-if
       let #begin = #begin + #end
       let #end = 2
  end-while

  let $acct_string = $acct_string||'b'                

  let #begin = 1
  let #end = 1
   
  let $check_string = 'b'           
  while RTRIM(substr($CheckNum,#begin,#end),' ') <> ''
       let $partial_String = substr($CheckNum,#begin,#end)
       let $partial_String = RTRIM($partial_string,' ')
       let $check_String = $check_String||$partial_String !||$exc_string
       let #begin = #begin + #end
       let #end = 2
  end-while

  let $check_string = $check_string||'b'               

! GEXPY_849_CSR1530_01 2014-09-05 Surya Sobha Begin
! Commenting out the following line, which was used for Troy Model 617 printer.
  !let $MicrLine = $check_String||' '||$transit_string||' '||$acct_String

! Added the following line of code to enable MICR printing for Model ST9650
  let $MicrLine = '&%STHPASSWORD$&%SMD' || 'C' || $check_String   || 'C' || ' ' || 'T' || $transit_string || 'T' || '    ' || $acct_String || 'C' || '$&%STQ$'
  
! GEXPY_849_CSR1530_01 2014-09-05 Surya Sobha End
 
  print $Micrfont_COD_on        (80,11) code                      
  print $MicrLine               (80,11)                           
  print $Micrfont_COD_off       (81,11) code                       

end-procedure

!    SCM   2/23/2001   this is the original code split into a separate paragraph
!******************************************************** 
begin-procedure Z002-Print-Bank-Micrcode-POD
!******************************************************** 
  use-column 0
!  do Format-Number(&B.payCheck_nbr, $CheckNum, '0999999')
  do Format-Number(&B.paycheck_nbr, $CheckNum, '09999999')   ! CWB 02/07/2007 expand to 8 digits
  let #begin = 1
  let #end = 1
!   let $exc_string = chr(65)
!   let $transit_string = $exc_String||':'
  let $transit_string = chr(65)               
  while RTRIM(substr($TransitNum,#begin,#end),' ') <> ''
       let $partial_String = substr($TransitNum,#begin,#end)
       let $partial_String = RTRIM($partial_string,' ')
       let $transit_String = $transit_String||$partial_String !||$exc_string
       let #begin = #begin + #end
       let #end = 2
  end-while

  let $transit_string = $transit_string||chr(65)           

  let #begin = 1
  let #end = 2
!  let $acct_string = chr(67)
  let $acct_string = ''
  while RTRIM(substr($AccountNum,#begin,#end),' ') <> ''
       let $partial_String = substr($AccountNum,#begin,#end)
       let $partial_String = RTRIM($partial_string,' ')
       if #begin = 1
	  let $acct_String = $acct_String||$partial_String
       else
!          let $acct_String = $acct_String||$exc_String||$partial_String
	 let $acct_String = $acct_String||$partial_String
       end-if
       let #begin = #begin + #end
       let #end = 2
  end-while
  let $acct_string = $acct_string||chr(67)           
   
  let #begin = 1
  let #end = 1
   
  let $check_string = chr(67)    
  while RTRIM(substr($CheckNum,#begin,#end),' ') <> ''
       let $partial_String = substr($CheckNum,#begin,#end)
       let $partial_String = RTRIM($partial_string,' ')
       let $check_String = $check_String||$partial_String !||$exc_string
       let #begin = #begin + #end
       let #end = 2
  end-while

  let $check_string = $check_string||chr(67)          
      
!  let $MicrLine =
!    'C' || $CheckNum   || 'C' || ' ' ||
!    'A' || $TransitNum || 'A' || ' ' ||
!           $AccountNum || 'C'   

! GEXPY_849_CSR1530_01 2014-09-05 Surya Sobha Begin
! Commenting out the following line, which was used for Troy Model 617 printer.      
  !let $MicrLine = $check_String||' '||$transit_string||' '||$acct_String
  ! Change TCSXSSS Begin - Printer Issue on MICR and Signature after installing the new Printer
  
! Added the following line of code to enable MICR printing for Model ST9650
    let $MicrLine = '&%STHPASSWORD$&%SMD' || 'C' || $check_String   || 'C' || ' ' || 'T' || $transit_string || 'T' || '    ' || $acct_String || 'C' || '$&%STQ$'

! GEXPY_849_CSR1530_01 2014-09-05 Surya Sobha Begin
  
  do Declare-Printer-Microcode                      
  print $MicrLine               (80,11)            !Used to be 83rd line and 21 columns SXK 02/19/98 
   
end-procedure
 
!***********************************************************************
begin-procedure Declare-Printer-Statement
!***********************************************************************

  declare printer
    type          = HPLASERJET
    orientation   = portrait
    lines-inch    = 8
    chars-inch    = 16.6
    top-margin    = 0.30
    left-margin   = 0.25
    font          = 5
    point-size    = 7
    lines-inch    = 8

end-procedure


!***********************************************************************
begin-procedure Declare-Printer-Check
!***********************************************************************

  declare printer
    type          = HPLASERJET
    orientation   = portrait
    lines-inch    = 8
    chars-inch    = 16.6
    top-margin    = 0.00
    left-margin   = 0.25
    font          = 5
    point-size    = 9

end-procedure


!***********************************************************************
begin-procedure Declare-Printer-Microcode
!***********************************************************************

  declare printer
    type          = HPLASERJET
    orientation   = portrait
    top-margin    = 0.00
    left-margin   = 0.00
    symbol-set    = 0Q
    font          = 620
    font-style    = fixed
    point-size    = 8.4
    line-size     = 9.05
    chars-inch    = 8.0
!   char-size     = 7.2

end-procedure


!***********************************************************************
begin-procedure Format-Check-Name-Address
!***********************************************************************

  if rtrim(&B.PayCheck_Name,' ') <> ''
    let $Name = &B.PayCheck_Name
    do Rotate-Name
    let $CheckName = upper($Name)
  end-if

  let $CheckAddrLine3 = ' '
  let $CheckLocation =  ' '

  evaluate &B.PayCheck_Addr_Optn
    when = 'C'  !Mail to Check Address
    when = 'H'  !Mail to Home Address
    when = 'M'  !Mail to Mail Address

      let $CheckCityState =
	rtrim(&B.City,' ') || edit(&B.State,',bxxbb') || &B.postal

      let $CheckAddrLine1   = &B.Address1
      if rtrim(&B.Address2,' ') = ''
	let $CheckAddrLine2 = $CheckCityState
      else
	let $CheckAddrLine2 = &B.Address2
	let $CheckAddrLine3 = $CheckCityState
      end-if

      let $CheckLocation = 'Location: ' || $LocationName

    when = 'D'  !Deliver to Home Department
      let $CheckAddrLine1 = 'Department ID: ' || $DeptID
      let $CheckAddrLine2 = $DeptName

    when = 'L'  !Deliver to Job Location
    when = 'P'  !Deliver to Check Location
      let $CheckAddrLine1 = 'Location ID: ' || $Location
      let $CheckAddrLine2 = $LocationName
  end-evaluate

!SXK 04/06/99 Begin
  let $checkdept = 'Department: ' || $deptid || '-' || $deptname
  let $checkacct = 'Account CD: ' || $acctcd || '-' || $acctcdname
!SXK 04/06/99 End

end-procedure
!SXK 04/12/1999 Begin
#Include 'gexxx932.sqc'  !Get Multiple Individual Check Numbers
!SXK 04/12/1999 End
