!***********************************************************************
! GEXBNYPY: This program prints out a report showing each ee that had  *
!           a new job row inserted and also a log that shows each ee   *
!           that came through for processing and how they were         *
!           evaluated.   It calculates the benefit changes on the      *
!           actual hours worked and inserts config7 field on PS_JOB    *
!           for Youngstown Clerks:(BProgram=R19,R20,R21,R22,R23,R24,R25)  
!           It will run every year (end of month processing in         * 
!           September. ) This is the anniversary of the contract       *
!           ratification date (Ratif date was Sept 12, 2002).          *
!           Results from the process will be benefit elig inserts      *
!           effective Oct 1 of current yr.                             *
!***********************************************************************
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  CSR   INITIALS   DATE            DESCRIPTION OF THE CHANGE	       *	
!***********************************************************************
! HR10312  SCM   09/16/2002  INITIAL CREATION for the use of           *
!                            config7 field for Youngstown Clerks,      *
!                            accessed on panel gex_elig_config7.       *
!                            New sqc was created: gexbnypy.sqc         *                                
!                                                                      *
! HR10478  GBD   04/18/2003  Added code to process Benefit Plan R31    *
!                            (Canfield Clerks).                        *
! HR10478  GBD   05/16/2003  Added Benefit_Program run control sqc.    *
! HR10478  GBD   05/21/2003  Changed job lookup effdt value.           *
!                                                                      *
! HR10746  AXL   07/07/2004  Added code to process Benefit Plan R03 &  *
!                            R28 (Hermitage & Boardman)                *
!***********************************************************************
#include 'setenv.sqc' !Set environment

begin-setup

!#include 'setupdb.sqc'
#include 'setup32a.sqc'

declare-report JobInsert-Detail-Report
Printer-Type=HPLASERJET
 layout=DEFAULT
end-declare

declare-report Report-log
Printer-Type=HPLASERJET
  layout=DEFAULT
end-declare

end-setup

!*********************************************************************
!Initial processing, retrieving current dates and calls the main 
!procedure to do the processing.                                     
!*********************************************************************
begin-report

  use-report JobInsert-Detail-Report

  do Init-DateTime
  do Init-Number
  do stdapi-init 

  do Get-Current-DateTime
  let $reportdate_mm = substr($reportdate,1,2)
  let $reportdate_dd = substr($reportdate,4,2)
  let $reportdate_yy = substr($reportdate,7,2)

  Let #Current_Year = Substr($AsOfToday,8,4)            !AsOfToday looks like: 01-JAN-2002
  let $Current_year = to_char(floor(#Current_year))
  show '$Current_year: ' $Current_year
  

  let #prev_year = #Current_Year - 1
  let $prev_year = to_char(floor(#prev_year))
  show '$prev_year: ' $prev_year

  
  Let $GEXXX911_Benefit_Program_Alias = 'B.BENEFIT_PROGRAM'      !GBD 05/16/2003

  do edit-pay-calendar      ! gexbnmdt.sqc         
 
  let $reportdate_ccyyyy = $reportdate_mm||'/'||$reportdate_dd||'/'||$current_year  
  do format-datetime($reportdate_ccyyyy,$reportdate_ccyy,{DEFMDY},'','NATIVE')
   
  show '$reportdate_ccyy   used as job row insert action date:  ' $reportdate_ccyy

! GBD 04/18/2003 Begin 
! let $job_newrow_effdt = '10'||'/'||'01'||'/'||$Current_year    !October 1 of current year
                                                                 !for inserting new job rows.

 !let $job_effdt = '09'||'/'||'12'||'/'||$Current_year           !Ratification anniversary date  
 
 ! do format-datetime($job_effdt,$effdt_dbf,{DEFMDY},'','NATIVE') 
  !do format-datetime($job_newrow_effdt,$effdt_newrow_dbf,{DEFMDY},'','NATIVE')
 !show 'job newrow effdt = ' $effdt_newrow_dbf  
   !show 'job lookup effdt = ' $effdt_dbf   
! GBD 04/18/2003 End
  
  do Report
 
  !Do Rollback-Transaction		!**debug** inactivate afer testing
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show ' '
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
  show ' '

  do stdapi-term

end-report

begin-heading 8 for-reports=(Report-log)
  LET $REPORTID = 'BNYPYLOG'
  move 'Youngstown Pension Eligibility- ALL Activity - Report Log' to $ReportTitle

 #Include 'stdhdg01.sqc'

  print 'Emplid'                          (7,1)
  print 'Name'                            (0,32)
  print 'Total Ratification'              (0,69)  
  print 'Average Weekly'                  (0,95)  
  print 'Leave Weeks'                     (0,114)       
  print '    Year Hours'                  (+1,69) 
  print '     Hours'                      (0,95)
  print 'Message'                         (0,130)        
  print '-'                               (+1,1,174) fill

end-heading


begin-heading 8 for-reports=(JobInsert-Detail-Report)
  move 'GEXBNYPY' to $ReportID
  move 'Youngstown Pension Eligibility Activity ' to $ReportTitle
  display $ReportTitle

 #Include 'stdhdg01.sqc'
  Let $Heading_Line2 = 'Annual Contract Ratification Process (Job Inserts)'
  
  Print $Heading_Line2                    (3,)  center
  print 'BP'                              (7,1)
  print 'Emplid'                          (0,6)
  print 'Name'                            (0,38)
  print 'Total Ratification'              (0,75)  
  print 'Average Weekly'                  (0,101)  
  print 'Leave Weeks'                     (0,120)
  print 'Jobeffdt'                        (0,136) 
           
  print '    Year Hours'                  (+1,75) 
  print '     Hours'                      (0,101)
  print 'NotWorked'                       (0,120)         
  print '-'                               (+1,1,174) fill
end-heading
 
!*********************************************************************
!Prints the footer in the report log
!*********************************************************************

begin-footing 2 for-reports=(Report-log)
page-number (1,108) 'Page '  
last-page () ' of ' '.'

end-footing

!*********************************************************************
!If this Program is being executed through process scheduler, 
!the run control parameters and calls the main processing procedure.
!Otherwise, interrogates the user for the run control parameters and 
!validates them. If the run control parameters are invalid, stops the
!execution.
!*********************************************************************
begin-procedure Report

date-time () hh:mi:ss &timeBegan
display 'Report Began: ' noline
display &timeBegan

 move 'N' to $Errorfound

! GBD 05/16/2003 Begin
if $prcs_process_instance = ''
   do P110-SQRW-Run-Controls
else
   do P120-Process-Scheduler-Run-Controls
end-if
! GBD 05/16/2003 End


move $reportdate_ccyyyy to $rnctl_date

let $rnctl_mm = substr($rnctl_Date,1,2)
let $rnctl_dd = substr($rnctl_Date,4,2)
let $rnctl_yyyy = substr($rnctl_Date,7,4)       
let $rnctl_yy  = substr($rnctl_date,9,2)
move $rnctl_yyyy to #rnctl_yyyy
move $rnctl_yy to #rnctl_yy

 Let #inputtran = 0
 Let #inserts   = 0
 Let #recs_onlog = 0
 do Process-Employee-Data

 if $sev-error = 'Y'
    goto report-exit
 end-if
 
use-report JobInsert-Detail-Report
  print '# of Job Inserts:   '        (+2,2)
  print #inserts                      (,25)  edit 9,999

use-report Report-Log
  print '# Employees on Log: '        (+2,2)
  print #recs_onlog                   (,25)  edit 999,999
  print '# of Job Inserts:   '        (+1,2)
  print #inserts                      (,25)  edit 9,999
 
Report-Exit:

  date-time () hh:mi:ss &timeProcess  
  display ' Transactions Processed:  ' noline
  display #InputTran 999999
  display ' # Job Inserts:           ' noline
  display #inserts 99999  

end-procedure


! GBD 05/16/2003 Begin
!*********************************************************************
begin-procedure P110-SQRW-Run-Controls
!*********************************************************************
  Let $BenefitProgramString = ''''
  While 1=1
    Display 'Enter Benefit Program or leave blank to exit.'
      Input $In-Benefit-Program Maxlen=3 'Benefit Program'
      Uppercase $In-Benefit-Program
      If Rtrim($In-Benefit-Program, ' ') = ''
	Concat '''' With $BenefitProgramString
	Break
      End-If
      If $BenefitProgramString <> ''''
	Concat ''',''' With $BenefitProgramString
      End-If
      Concat $In-Benefit-Program With $BenefitProgramString
    End-While

    If $BenefitProgramString = ''''''
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = $GEXXX911_Benefit_Program_Alias || ' In (' || $BenefitProgramString || ')'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
    End-If

end-procedure


!*********************************************************************
begin-procedure P120-Process-Scheduler-Run-Controls
!*********************************************************************
  Do GEXXX911-Select-Benefit-Program-Parameters
end-procedure

! GBD 05/16/2003 End


!*********************************************************************
!Determines previous month's number of weeks to find out the weekly 
!hours worked for each employee. Calls the main benefits participation
!logic and leave of absence logic
!*********************************************************************

Begin-Procedure Process-Employee-Data

move 'N' to $errorfound
move 'N' to $found
!**********************************************************
!  Company and Paygroup set here to use when querying the 
!   Pay Calendar to retrieve the correct check date rows.
!**********************************************************
 move 'GEI' to $Co_Name       
 move 'RET'to $Pay_Name 


!************************************************************
!Logic to go to GEX_SQR_PROCESS table and retrieves all the 
!benefit programs that need to be run through this SQR
!************************************************************

  move 'GEXBNYPY' to $ReportID_srch
  show '$ReportID_srch to retrieve-benefit-pgms: ' $ReportID_srch
!  need  $reportID_srch for ps_gex_sqr_process lookup in retrieve-benefit-pgms para  
  do Retrieve-benefit-pgms                         !gexbnypy.sqc

  display $BP_name
 
  if $ben_pgm_found = 'N'
     display 'No Benefit Programs found for Process:GEXBNYPY'
  end-if

end-procedure
 

!*********************************************************************
!Retrieves each employee who participated in Benefit Program and
!calls necessary procedures to determine their hours. 
!********************************************************************* 

begin-procedure process-benefit-partic
display 'Process-Benefit-Partic'

 move 'N' to $errorfound

! GBD 04/18/2003 Begin 
  Evaluate $BP_name
    !AXL 07/07/2004 Begin 
    When = 'R03'
       let $job_newrow_effdt = '07'||'/'||'01'||'/'||$Current_year    !*July 1 of current year
                                                                      !for inserting new job rows.  
       let $job_effdt = '06'||'/'||'24'||'/'||$Current_year           !Ratification anniversary date  
       do format-datetime($job_effdt,$effdt_dbf,{DEFMDY},'','NATIVE') 
       do format-datetime($job_newrow_effdt,$effdt_newrow_dbf,{DEFMDY},'','NATIVE')
       show 'job newrow effdt = ' $effdt_newrow_dbf  
       show 'job lookup effdt = ' $effdt_newrow_dbf         
       break
    !AXL 07/07/2004 End
    When = 'R19' 
    when = 'R20'
    when = 'R21'
    when = 'R22'
    when = 'R23'
    when = 'R24'
    when = 'R25'
           let $job_newrow_effdt = '10'||'/'||'01'||'/'||$Current_year    !October 1 of current year
                                                                      !for inserting new job rows.

       let $job_effdt = '09'||'/'||'12'||'/'||$Current_year           !Ratification anniversary date  
 
       do format-datetime($job_effdt,$effdt_dbf,{DEFMDY},'','NATIVE') 
       do format-datetime($job_newrow_effdt,$effdt_newrow_dbf,{DEFMDY},'','NATIVE')
       show 'job newrow effdt = ' $effdt_newrow_dbf  
!       show 'job lookup effdt = ' $effdt_dbf   
       show 'job lookup effdt = ' $effdt_newrow_dbf                   !GBD 05/21/2003
       break
    !AXL 07/07/2004 Begin
    When = 'R28'
       let $job_newrow_effdt = '08'||'/'||'01'||'/'||$Current_year    !August 1 of current year
                                                                      !for inserting new job rows.  
       let $job_effdt = '07'||'/'||'16'||'/'||$Current_year           !Ratification anniversary date  
       do format-datetime($job_effdt,$effdt_dbf,{DEFMDY},'','NATIVE') 
       do format-datetime($job_newrow_effdt,$effdt_newrow_dbf,{DEFMDY},'','NATIVE')
       show 'job newrow effdt = ' $effdt_newrow_dbf  
       show 'job lookup effdt = ' $effdt_newrow_dbf         
       break
    !AXL 07/07/2004 End
    when = 'R31'
       let $job_newrow_effdt = '05'||'/'||'01'||'/'||$Current_year    !May 1 of current year
                                                                      !for inserting new job rows.
   
       let $job_effdt = '04'||'/'||'10'||'/'||$Current_year           !Ratification anniversary date  
 
       do format-datetime($job_effdt,$effdt_dbf,{DEFMDY},'','NATIVE') 
       do format-datetime($job_newrow_effdt,$effdt_newrow_dbf,{DEFMDY},'','NATIVE')
       show 'job newrow effdt = ' $effdt_newrow_dbf  
!       show 'job lookup effdt = ' $effdt_dbf   
       show 'job lookup effdt = ' $effdt_newrow_dbf                   !GBD 05/21/2003
       break
  End-Evaluate

!**********************************************************************
!  Need to determine the range of weeks that define the prev 1 year 
!  anniversary from the ratification date anniversary. 
!------------------------------------------------------------------
!  For Benefit Programs R19, R20, R21, R22, R23, R24, R25
!  Ratification date was 9/12/2002, so the following dates are used
!   9/01/current year - 1  as the beginning year
!   8/31/current year      as the end year
!------------------------------------------------------------------
!  For Benefit Program R31
!  Ratification date was 4/10/2003, so the following dates are used
!   4/01/current year - 1  as the beginning year
!   3/31/current year      as the end year
!------------------------------------------------------------------
!  For Benefit Program R03
!  Ratification date was 6/24/2004, so the following dates are used
!   6/01/current year - 1  as the beginning year
!   5/31/current year      as the end year
!------------------------------------------------------------------
!  For Benefit Program R28
!  Ratification date was 7/16/2004, so the following dates are used
!   7/01/current year - 1  as the beginning year
!   6/30/current year      as the end year
!------------------------------------------------------------------
!Begin Range and End Range are the pay end dates that those dates fall in.
!  gexbnypy.sqc contains the next 3 paragraphs that does the calc.
!**********************************************************************

   do Determine-define-1yr-from-ratif-anniv
   do Determine-payend-dt-for-begin-range 
   do Determine-payend-dt-for-end-range
   do Convert-begin-end-range-to-weeks                     ! calcs #weeks_peryr

! GBD 04/18/2003 End

!display $log_printed

if $log_printed = 'Y'
   use-report report-log
   new-page
end-if

   move $bp_name to $prev_bp_name
use-report report-log

move 'N' to $beninfo_found

begin-select on-error=sql-error-found('process-benefit-partic')
B.EMPLID  &emplid
B.EMPL_RCD  &empl_rcd#
B.BENEFIT_PROGRAM
C.ERNCD_SPCL
C1.FIELDNAME_L1
C1.FIELDNAME_L2
C1.GEX_SPCL_ACCUM_CD2
D.EMPL_RCD   
D.EFFDT
D.EFFSEQ
D.EMPL_STATUS
D.ACTION_REASON
D.ELIG_CONFIG1
D.ELIG_CONFIG7
D.COMPANY
D.DEPTID
D.ACCT_CD
D.JOBCODE
D.REG_TEMP
D.UNION_CD	!AXL 7/7/2004 - Add
E.NAME
SQRE.SERVICE_DT

 !AXL 7/7/2004 - Begin
 move 'N' to $skip_record

 Let $bpuc_check = &B.BENEFIT_PROGRAM || &D.UNION_CD
 show '$bpuc_check ' $bpuc_check
 Evaluate $bpuc_check
   When = 'R03R10'
      move 'Y' to $skip_record
      break
   When-Other
     !Do nothing
 End-Evaluate
 show '$skip_record ' $skip_record
 If $skip_record = 'N'
 !AXL 7/7/2004 - End

   add +1 to #InputTran
   move 'Y' to $beninfo_found
   move 'N' to $job_insert             !used to display insert message on report log
   move &emplid to $emplid
   move &empl_rcd# to $empl_rcd#
   move &C1.GEX_SPCL_ACCUM_CD2 to $GEX_SPCL_ACCUM_CD2

   display 'EMPLID =    ' noline 
   display $emplid
   display 'JOB EFFDT = ' noline
!   display $effdt_dbf
   display $effdt_newrow_dbf                     !GBD 05/21/2003
   if RTRIM(&C1.FIELDNAME_L2,' ') <> ''
      display 'FIELDNAME_L2 ' noline
      display &c1.fieldname_L2
      Let $RelatedTo2 = 'Y'
      display '$RelatedTo2 ' noline
      display $RelatedTo2 
   end-if
 
!******  Already calculated the number of weeks between the begin range  
!******  and end range dates. (#weeks_peryr). Figure out the number of weeks 
!******  ee was out during that period (begin range and end range) for FMLA
!******  or personal leave and convert that into weeks. Subtract those leave
!******  weeks from total weeks. Sum up the hours the ee worked (and convert 
!******  to avg hours per wk by dividing the wkly-spcl-hrs by # weeks worked.
   
   do Calc-total-absence-period    	             !calcs #total_absence(in days)
   let #total_absence_wks = #total_absence/7
   show '*** #total_absence_wks = ' #total_absence_wks
   let #weeks_peryr_minus_loa_wks = #weeks_peryr - #total_absence_wks
   show '*** #weeks_peryr_minus_loa_wks = ' #weeks_peryr_minus_loa_wks
 
   do Calculate-sum-yrly-spcl-hrs
   show '*** #yrly_spcl_hrs = ' #yrly_spcl_hrs
 
   if #weeks_peryr_minus_loa_wks = 0          !means ee was out on loa entire range
      let #week_hrs = 0
   else
      let #week_hrs = #yrly_spcl_hrs/#weeks_peryr_minus_loa_wks   !#weeks_hrs=avg hrs worked/week
   end-if 
 
   show '***  #week_hrs = ' #week_hrs
   show '******************************'
 
    if $errorfound = 'N'
      do process-elig-rules                        !gexbnypy.sqc
      if $errorfound = 'N'
         do Evaluate-config-value        
      end-if
   end-if
 
! Print all employees on report log.
   use-report Report-log
   if $job_insert = 'Y'
      let $Insert_Message = 'JOB INSERT'  
   else 
      let $Insert_Message = '          '
   end-if
   do Print-log                               
   add 1 to #recs_onlog
   move 'N' to $errorfound                      !reset in case there was an error on log

 end-if		!AXL 7/7/2004 - Add
   
FROM PS_BEN_PROG_PARTIC B,
     PS_SPCL_EARNS_TBL C,
     PS_BEN_DEFN_PGM C1,
     PS_JOB D,
     PS_PERSONAL_DATA E,
     PS_EMPLOYMENT SQRE
     

WHERE B.BENEFIT_PROGRAM = $BP_name
  AND B.EMPLID = D.EMPLID
  AND B.EMPL_RCD = D.EMPL_RCD
  AND D.EMPL_STATUS in ('A','L','P')
  AND B.EMPLID = E.EMPLID
  AND D.EMPLID = SQRE.EMPLID
  AND D.EMPL_RCD = SQRE.EMPL_RCD
  AND [$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA]               !GBD 05/16/2003 Added Criteria
 [$service_dt_crit]                           !hire dt contract range determined in gexbnypy.sqc 
  AND C1.BENEFIT_PROGRAM = B.BENEFIT_PROGRAM
  AND C1.GEX_SPCL_ACCUM_CD2 = C.ERNCD_SPCL
  AND B.EFFDT = (SELECT MAX(EFFDT)
                   FROM PS_BEN_PROG_PARTIC
                  WHERE EMPLID = B.EMPLID
                    AND EMPL_RCD = B.EMPL_RCD
!                    AND EFFDT <= $effdt_dbf)
                    AND EFFDT <= $effdt_newrow_dbf)    !GBD 05/21/2003
  AND C1.EFFDT = (SELECT MAX(EFFDT)
                   FROM PS_BEN_DEFN_PGM
                  WHERE BENEFIT_PROGRAM = $BP_name
                    AND EFF_STATUS = 'A'
                    AND EFFDT <= SYSDATE)              !setup tables check current effdt
  AND C.EFFDT = (SELECT MAX(C3.EFFDT)
                   FROM PS_SPCL_EARNS_TBL C3
                  WHERE C3.ERNCD_SPCL = C.ERNCD_SPCL
                    AND C3.EFF_STATUS = 'A'
                    AND C3.EFFDT <= SYSDATE)           !setup tables check current effdt
  AND D.EFFDT = (SELECT MAX(EFFDT)
                   FROM PS_JOB
                  WHERE EMPLID = D.EMPLID
                    AND EMPL_RCD = D.EMPL_RCD
!                    AND EFFDT <= $effdt_dbf)
                    AND EFFDT <= $effdt_newrow_dbf)    !GBD 05/21/2003
  AND D.EFFSEQ = (SELECT MAX(EFFSEQ)
                   FROM PS_JOB
                  WHERE EMPLID = D.EMPLID
                    AND EMPL_RCD = D.EMPL_RCD
                    AND EFFDT = D.EFFDT)
  AND D.ELIG_CONFIG7 <> '000A000000'    !select ees who have not been evaluated at the $.56 
                                       !pension contrib rate (the "A" level)
  

ORDER BY B.BENEFIT_PROGRAM, B.EMPLID
end-SELECT

 show 'In process-benefit-partic end select'
 show '$BP_name ' $BP_name

 !if $beninfo_found = 'N' and &B.BENEFIT_PROGRAM = $BP_name
 if $beninfo_found = 'N' 
   Let $beninfo_found = ' ' 
   do error-found
   print 'No Benefit Participation information found' (,34)
 end-if

end-procedure


!*********************************************************************
!Compares the existing job table config7 field and the calculated field
!and processes further
!*********************************************************************

begin-procedure Evaluate-config-value

move &D.ELIG_CONFIG7 to $ee_config7_job
! $ee_config7_val is the value created in gexbnypy.sqc
 
move $ee_config7_val to $elig_config7           !for job insert

let $ee_config7_job_nospaces = rtrim($ee_config7_job,' ')
let $ee_config7_val_nospaces = rtrim($ee_config7_Val,' ')

display 'Job Config7 Value: ' noline
display $ee_config7_job
display 'Pgm Config7 Value: ' noline
display $ee_config7_val
   
   let $ee_config7_job_4to7 = substr($ee_config7_job_nospaces,4,7)
   let $ee_config7_val_4to7 = substr($ee_config7_val_nospaces,4,7)

!   Evaluate $ee_config7_val_4to7, if there is a change, insert job row.
   If $ee_config7_val_4to7  <> $ee_config7_job_4to7
         do insert-procedure
         use-report JobInsert-Detail-Report
         do Print-JobInsert-Report
         add +1 to #inserts
         let $job_insert = 'Y'
   end-if
 
end-procedure
  

!*********************************************************************
!      Print the Rows Inserted into Job
!*********************************************************************    
 
begin-procedure Print-JobInsert-Report
 
  print $BP_name                          (+1,1)
  print $Emplid                           (0,6)
  print &E.Name                           (0,38)
  print #yrly_spcl_hrs                    (0,75)   edit 99,999.99   
  print #week_hrs                         (0,101)  edit 999.99   
  print #total_absence_wks                (0,120)  edit 99
!  print $effdt_dbf                        (0,136) 
  print $effdt_newrow_dbf                 (0,136)                 !GBD 05/21/2003
           
end-procedure

!*********************************************************************
!      Print the Log 
!*********************************************************************    
 
begin-procedure Print-Log
 
  print $BP_name                          (+1,1)
  print $Emplid                           (0,6)
  print &E.Name                           (0,38)
  print #yrly_spcl_hrs                    (0,75)   edit 99,999.99   
  print #week_hrs                         (0,101)  edit 999.99   
  print #total_absence_wks                (0,120)  edit 99
  print $Insert_Message                   (0,135)
           
end-procedure

#include 'getcodta.sqc'  !Get-Company-Data Procedure     
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
!*#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'payrnctl.sqc'  !Select-Parameters
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'readxlat.sqc'  !Read xlattable
#Include 'gexbnypy.sqc'  !Elig rules for config7 - clone of gexbnahp.sqc  
#include 'gexbnmdt.sqc'
#Include 'gexxx911.sqc'  !PS_GEX_RC_BEN_PRGM Parameters          !GBD 05/16/2003
