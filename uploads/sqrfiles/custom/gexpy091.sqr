!***********************************************************************
! GEXPY091:  Corporate Bonus Report                                    *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY091 :            Bonus Report                                   *
!                                                                      *
! Narrative:            This report has 3 different processing modes.  *
!                         (1) Projection                               *
!                         (2) Preview Calculation                      *
!                         (3) Final Calculation                        *
!                                                                      *
!                       In projection mode, a report will be created   *
!                        showing current and previous year bonus       *
!                        amounts and percentages as well as calculated *
!                        bonus for verification.  This is the same as  *
!                        the preview report except that new rows will  *
!                        not be inserted into the bonus table.         *
!                                                                      *
!                       In preview calc mode, a report will be created *
!                        showing current and previous year bonus       *
!                        amounts and percentages as well as calculated *
!                        bonus for verification.  Responsible officers *
!                        can make any necessary changes for employees  *
!                        in their department for the current year.     *
!                        Worksheets can be recreated in preview mode   *
!                        until all information is correct.             *
!                                                                      *
!                       In final calc mode, a report will be created   *
!                        showing current and previous year bonus       *
!                        amounts and percentages, as well as current   *
!                        year bonus.  PS_ADDL_PAY_DATA table will be   *
!                        updated accordingly.                          *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           addl_pay_data                                  *
!                       addl_pay_effdt                                 *
!                       addl_pay_erncd                                 *
!                       gex_empl_bonus                                 *
!                       gex_dept_tbl                                   *
!                       gex_mgmt_report                                *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                                                                      *
! Written by:           Abhishek Gupta                                 *
!                                                                      *
! Normally Run:         Annually                                       *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Company Division Code(s)                     *
!                         Company(s)                                   *
!                         Paygroup(s)                                  *
!                         Deptid(s)                                    *
!                         Employee Status(es)                          *
!                         Account Code(s)                              *
!                         Union Code(s)                                *
!                         Employee Type(s)                             *
!                         Jobcode(s)                                   *
!                                                                      *
!                         As Of Date                                   *
!                         Hire Date                                    *
!                         Salary Date                                  *
!                         Bonus Award Date                             *
!                         Bonus Percent to Use                         *
!                         Run Type                                     *
!                                                                      *
!----------------------------------------------------------------------*
! Tables Referenced:                                                   *
!----------------------------------------------------------------------*
! TABLE                  SEL     UPD     INS     DEL                   *
!----------------------------------------------------------------------*
! PS_ADDL_PAY_DATA        Y       -       Y       -                    *
! PS_ADDL_PAY_EFFDT       Y       -       Y       -                    *
! PS_ADDL_PAY_ERNCD       Y       -       Y       -                    *
! PS_DEPT_TBL             Y       -       -       -                    *
! PS_GEX_ACCT_CD_TBL      Y       -       -       -                    *
! PS_GEX_DEPT_TBL         Y       -       -       -                    *
! PS_GEX_EMPL_BONUS       Y       Y       Y       -                    *
! PS_GEX_MGMT_REPORT      Y       -       -       -                    *
! PS_GEX_RC_BON_EMPL      Y       -       -       -                    *
! PS_GEX_RC_GEXPY212      Y       -       Y       -                    *
! PS_GEX_RC_GEXPY214      Y       -       -       -                    *
! PS_GEX_SALGD_BONUS      Y       -       -       -                    *
! PS_GEX_TM_BON_EXCP      Y       -       -       -                    *
! PS_JOB                  Y       -       -       -                    *
! PS_JOBCODE_TBL          Y       -       -       -                    *
! PS_PERSONAL_DATA        Y       -       -       -                    *
! PS_POSITION_DATA        Y       -       -       -                    *
!----------------------------------------------------------------------*
!----------------------------------------------------------------------*
! Program Flow:                                                        *
!                                                                      *
! P100-INITIALIZATION                                                  *
!       INIT-DATETIME                                                  *
!       INIT-NUMBER                                                    *
!       GET-CURRENT-DATETIME                                           *
!       STDAPI-INIT                                                    *
!       P110-SQRW-RUN-CONTROLS                                         *
!               GEXXX950-INPUT-PARAMETERS                              *
!               ASK-HIRE-DATE                                          *
!                       FORMAT-DATETIME                                *
!                       VALIDATE-NATIVE-DATE                           *
!               ASK-SALARY-DATE                                        *
!                       FORMAT-DATETIME                                *
!                       VALIDATE-NATIVE-DATE                           *
!               ASK-BONUS-AWARD-DATE                                   *
!                       FORMAT-DATETIME                                *
!                       VALIDATE-NATIVE-DATE                           *
!       P120-PROCESS-SCHEDULER-RUN-CONTROLS                            *
!               GEXXX922-SELECT-PARAMETERS                             *
!               GEXPY214-SELECT-PARAMETERS                             *
!               SELECT-PARAMETERS                                      *
!               GEXXX900-SELECT-COMPANY-PARAMETERS                     *
!               GEXXX901-SELECT-COMPANY-PAYGROUP-PARAMETERS            *
!               GEXXX902-SELECT-DEPTID-PARAMETERS                      *
!               GEXXX903-SELECT-EMP-STAT-PARAMETERS                    *
!               GEXXX907-SELECT-DIV-CD-PARAMETERS                      *
!               GEXXX909-SELECT-ACCT-CD-PARAMETERS                     *
!               GEXXX913-SELECT-UNION-CD-PARAMETERS                    *
!               GEXXX916-SELECT-JOBCODE-PARAMETERS                     *
!               GEXXX930-SELECT-EMP-TYPE-PARAMETERS                    *
!       FORMAT-DATETIME                                                *
!       CONVERT-TO-DTU-DATE                                            *
!       DTU-ADD-DAYS                                                   *
!       CONVERT-FROM-DTU-DATE                                          *
!       P130-PRINT-COVER-PAGE                                          *
! OPEN-FILE                                                            *
! PRINT-HEADER                                                         *
! GET-RC-EMPLID                                                        *
! DELETE-EMPLID                                                        *
! SELECT-RC-EMPLID                                                     *
!       INSERT-EMPLID                                                  *
! GET-EMPLID                                                           *
!       INSERT-EMPLID                                                  *
!       GET-EMPLID-2                                                   *
!               GEXXX900-SELECT-COMPANY-PARAMETERS                     *
!               GEXXX901-SELECT-COMPANY-PAYGROUP-PARAMETERS            *
!               GEXXX902-SELECT-DEPTID-PARAMETERS                      *
!               GEXXX903-SELECT-EMP-STAT-PARAMETERS                    *
!               GEXXX907-SELECT-DIV-CD-PARAMETERS                      *
!               GEXXX909-SELECT-ACCT-CD-PARAMETERS                     *
!               GEXXX913-SELECT-UNION-CD-PARAMETERS                    *
!               GEXXX930-SELECT-EMP-TYPE-PARAMETERS                    *
!               INSERT-EMPLID                                          *
! SELECT-EMPLID                                                        *
!       P200-MAIN-PROCESS                                              *
!               P220-BONUS-TABLE-SELECT                                *
!               GET-LEAVE-DURATION                                     *
!                       GET-PREV-EMPL-STATUS                           *
!                       GET-PREV-EMPL-STATUS                           *
!                       GET-MAX-DURATION-DEPTID                        *
!               CHECK-TERMINATION-ASOFCUTOFF                           *
!               P220-BONUS-TABLE-SELECT                                *
!               GET-ALL-GRADES                                         *
!                       GET-BONUS-GROUP                                *
!                       GET-PREV-EMPL-STATUS                           *
!                       GET-BONUS-GROUP                                *
!                       GET-PREV-EMPL-STATUS                           *
!                       GET-BONUS-GROUP                                *
!                       GET-DIFF-EMPL-TYPE-DURATION                    *
!                       SUM-DISTINCT-GRADE                             *
!               GEX-EE-EXCEPTION-PCT                                   *
!               GET-PCTS                                               *
!               GET-EE-SALARY                                          *
!                       GET-FUTURE-DT-HIR                              *
!                       GET-FUTURE-DT-REH                              *
!                       GET-SALARY-ASOF-SALARYDATE                     *
!                       GET-SALARY-ELIG-JOBCODE                        *
!               GET-HOURLY-EE-SALARY                                   *
!               CHECK-VALID-REPORTS-TO                                 *
!               GET-POSITION-REPORTS-TO                                *
!               CHECK-VALID-REPORTS-TO                                 *
!               WRITE-FILE                                             *
!                       FORMAT-DATETIME                                *
!                       GET-ACCOUNTCD-DESCR                            *
!                       GET-JOBCODE-DESCR-WRITE                        *
!                       FORMAT-DATETIME                                *
!                       GET-ACCOUNTCD-DESCR                            *
!                       GET-JOBCODE-DESCR-WRITE                        *
!               CHECK-BONUS-ALREADY-CALCULATED                         *
!               UPDATE-BONUS-AMOUNT                                    *
!               P270-INSERT-GEX-EMPL-BONUS-PCT                         *
!       PRINT-REPORT-MODE2                                             *
!               P290-PRINT-RECORD                                      *
!                       GET-ACCT-CD-DESCR                              *
!                       FORMAT-DATETIME                                *
! P200-MAIN-PROCESS2                                                   *
!       BONUS-TABLE-LAST-YEAR                                          *
!       CHECK-EXISTING-510                                             *
!       P240-INSERT-ADDL-PAY-ERNCD                                     *
!       CHECK-EXISTING-510-EFFDT                                       *
!       P250-INSERT-ADDL-PAY-EFFDT                                     *
!       CHECK-EXISTING-510-DATA                                        *
!       P260-INSERT-ADDL-PAY-DATA                                      *
!       P260-INSERT-ADDL-PAY-DATA                                      *
!       P290-PRINT-RECORD                                              *
!               GET-ACCT-CD-DESCR                                      *
!               FORMAT-DATETIME                                        *
!       WRITE-FILE                                                     *
!               FORMAT-DATETIME                                        *
!               GET-ACCOUNTCD-DESCR                                    *
!               GET-JOBCODE-DESCR-WRITE                                *
!               FORMAT-DATETIME                                        *
!               GET-ACCOUNTCD-DESCR                                    *
!               GET-JOBCODE-DESCR-WRITE                                *
!       P230-UPDATE-BONUS-TABLE                                        *
! P300-FINALIZATION                                                    *
!       RESET                                                          *
!       STDAPI-TERM                                                    *
!                                                                      *
!----------------------------------------------------------------------*
! Debugging:                                                           **
!       Syntax:   -DebugUFDCS   Place on command line after db name.   *
!       Options:        F       FLOW    Procedure names.               *
!       Options:        D       DATA    Selected information.          *
!       Options:        C       CALC    Calculated information.        *
!       Options:        S       SQLS    Dynamic SQL values.            *
!       Options:        U       USER    Values for Users.              *
!       Notes:          You may use one, some or all of the letter optn*
!                                                                      *
! Errors:                                                              *
!       Description:    Prints whenever a database error occurs.       *
!       Value:          M       MESG    Error Messages.                *
!----------------------------------------------------------------------*
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! VENDAXG  05/20/10    Initial Creation                                *
! VENDAXG  09/03/2010  Modified for S3#14562544, Changed add'l pay Deptid
! VENDAXG  06/15/2011  Modified for Bonus Processing 2011.             *
!VENDAXG  06/04/2012  Modified for Bonus Changes 2012.                 *
! 1221434 06/06/2012  Modified Leave Logic for Bonus Changes 2012.     *
! ISDVNPK 05/02/2013  GEXHR_848_PRJ95045_BONUS_2013                    *
!                     Added the Exclude Job Code condition and changed *
!                     the leave logic to 4 from 3 months for Full Bonus*
! ISDVNPK 07/31/2013  GEXHR_848_PRJ95045_BONUS2013_2                   *
!                     Commented the hardcoding of 1.5 & 2 weeks for Hourly*
!                     Bonus calculations and retrieved it from Run Control Page*
! ISDVMZA 03/15/2014  GEXHR_848_E161362_BONUS2014                      *
!                     New process to allow separate calculation of the *
!                     following: 75% for Pre-Tax & 25% for STS         *
!                     This change currently affects only Salaried TMs  *
!                     Hourly TMs are not (yet) affected.               *
!                     Due to the amount of code changes, I renamed the *
!                     original program to gexpy091_old for comparison  *
!                     and to make the code cleaner and readable        *
! ISDVVXK 07/07/2015  ISDVVXK - GEXHR_848_E1944_BONUS2015              *
!                     Added Profit and Store to Store sales percentages*
!                     Fix the annual rt for rehires                    *
! 1289792 03/20/2017  GEXHR_BONUS2017                                  *
!                     Remove the hardcoding for 75% and 25%calculations*
!                     Calculate based on the weight values provided    *
!                     on the run control page. Change the calculation  *
!                     for the midpoint-one and midpoint-two            *
!1306266(MM) 08/21/17 Modification to incorporate Dept changes         *
!***********************************************************************

#include 'setenv.sqc'    !Set environment

#define PRINTER_TYPE JDH
#define PAGE_LEFT_MARG 0
#define PAGE_TOP_MARG 0.125
#define CHAR_WIDTH 4.32

#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Landscape)

!******    Report Layout   *****************!
!******    Hourly          *****************!
!                                                                                1.5          2           2014
!                                IN STORE   HIRE       HOURLY      WEEKLY        WEEKS       WEEKS        BONUS
!NAME                  SSN       DEPARTMENT DATE                   SALARY        SALARY      SALARY       AMOUNT
!--------------------- --------- ---------- -------- ----------   -----------    ---------   ---------    ----------- --------------------------------------------------
!         1         2         3         4         5         6         7         8         9         0         1         2         3         4         5         6         7
!123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890

!******   Salary (Revised) *****************!
!                                                     <------------------------------------  2014 YEAR  ---------------------------------->
!                                IN STORE    HIRE       ANNUAL    MIN/TARGET/MAX 75% PRE-TAX     BONUS    25% STS    BONUS        TOTAL
!NAME                  SSN       DEPARTMENT  DATE       SALARY    PERCENT BONUS    % USED        AMOUNT    % USED    AMOUNT    BONUS AMOUNT  COMMENTS
!--------------------- --------- ---------- -------- ------------ -------------- ----------- ------------ -------  ----------- ------------- -----------------------
!123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
!         1         2         3         4         5         6         7         8         9         0         1         2         3         4         5         6         7


#define #column1     1
#define #column2    23
#define #column3    33
#define #column4    44
#define #column5    53
#define #column6    66
#define #column7    75
#define #column8    81
#define #column9    84
#define #column10   93
#define #column11  106
#define #column12  115
#define #column13  127
#define #column14  141
#define #column15  103   !1289792 -- GEXHR_BONUS2017
#define #columnS9   81   !1289792 -- GEXHR_BONUS2017
#define #columnS11 103   !1289792 -- GEXHR_BONUS2017
Begin-Setup


Create-Array Name=Employee  size=500000
Field=EMPLID:Char

Create-Array Name=Leave_Duration  size=100
Field=Empl_Status:Char
Field=Duration:Number
Field=Empl_Type:Char ! GEXPY_848_E95094_02 2012-06-06 1221434

Create-Array Name=Salary_Grade  size=100
Field=Grade:Char
Field=Sal_Admin_Plan:Char
Field=Empl_Type:Char
Field=Jobcode:Char
Field=DeptId:Char       !MM     08/21/2017
Field=Position_Nbr:Char !Vendaxg Added for Bonus Processing 2011 on 05/31/2011
Field=Annual_Rt:Number  !GEXPY_848_E95094_02 2012-06-06 VENDAXG
Field=Promotion:Char    !GEXPY_848_E95094_02 2012-06-06 VENDAXG
Field=Duration:Number

Create-Array Name=Final-Grade-List  size=100
Field=Empl_Type:Char
Field=Sal_Admin_Plan:Char
Field=Grade:Char
Field=Jobcode:Char
Field=Position_Nbr:Char !Vendaxg Added for Bonus Processing 2011 on 05/31/2011
Field=Annual_Rt:Number  !GEXPY_848_E95094_02 2012-06-06 VENDAXG
Field=Promotion:Char    !GEXPY_848_E95094_02 2012-06-06 VENDAXG
Field=Duration:Number

!GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
create-array name=Employee_All_Bonus  size=100
Field=Emplid:Char
Field=Empl_Rcd:Number
Field=Gex_Bonus_Year:Number
Field=Deptid:Char
Field=Empl_Type:Char
Field=Budget_Deptid:Char
Field=Jobcode:Char
Field=Annual_rt:Number  !GEXPY_848_E95094_02 2012-06-28
Field=Position_Nbr:Char
Field=Gex_Min_Bonus_Pct:Number
Field=Gex_Target_Bonus_Pct:Number
Field=Gex_Max_Bonus_Pct:Number
Field=Gex_Bonus_Pct_Used:Number
Field=Gex_Bonus_Amt:Number
Field=Gex_Bonus_Pct_Used_2:Number     !ISDVMZA -- GEXHR_848_E161362_BONUS2014
Field=Gex_Bonus_Amt_2:Number          !ISDVMZA -- GEXHR_848_E161362_BONUS2014
Field=Gex_Final_Bonus_Amt:Number
Field=Gex_Bonus_Group:Char
Field=Reports_To:Char
Field=Std_hours:Number
Field=Grade:Char
Field=Sal_Adm_Plan:Char

create-array name=Final_Employee_All_Bonus  size=100
Field=Emplid:Char
Field=Empl_Rcd:Number
Field=Gex_Bonus_Year:Number
Field=Deptid:Char
Field=Empl_Type:Char
Field=Budget_Deptid:Char
Field=Jobcode:Char
Field=Annual_rt:Number  !GEXPY_848_E95094_02 2012-06-28
Field=Position_Nbr:Char
Field=Gex_Min_Bonus_Pct:Number
Field=Gex_Target_Bonus_Pct:Number
Field=Gex_Max_Bonus_Pct:Number
Field=Gex_Bonus_Pct_Used:Number
Field=Gex_Bonus_Amt:Number
Field=Gex_Bonus_Pct_Used_2:Number     !ISDVMZA -- GEXHR_848_E161362_BONUS2014
Field=Gex_Bonus_Amt_2:Number          !ISDVMZA -- GEXHR_848_E161362_BONUS2014
Field=Gex_Final_Bonus_Amt:Number
Field=Gex_Bonus_Group:Char
Field=Reports_To:Char
Field=Std_hours:Number
Field=Grade:Char
Field=Sal_Adm_Plan:Char

!GEXPY_848_E95094_02 2012-06-06 VENDAXG - End

Create-Array Name=Deptid  size=100
Field=Deptid:Char
Field=Duration:Number



Declare-Variable
Date $End_Date_Empl_Status
Date $All_Effdt_Empl_Status
Date $Old_Effdt_Empl_Status
Date $Start_Date_Empl_Status
Date $From_Date
Date $Thru_Date
Date $Term_CutOff_Date
Date $End_Date_Grade
Date $All_Effdt_Grade
Date $Old_Effdt_Grade
Date $Start_Date_Grade
Date $Last_Hire_Dt
End-Declare

End-Setup

Begin-Report
#debug9 Show 'Begin-Report'
   Do P100-Initialization
   Do Open-File
   Do Print-header

   If $Run_Type = '1' or
      $Run_Type = '2'

       Do Get-RC-Emplid
       Do Delete-Emplid

       If $RC_EmplID_Found = 'Y'
           Do Select-RC-EmplID
       Else
           Do Get-Emplid
       End-if

       Do Select-Emplid

   Else
       Do P200-Main-Process2
   End-If
   !rollback
   Do P300-Finalization
End-Report


Begin-Heading 10
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg02.sqc'

  Print ':'                    (3,8)

  Print $ReportTitle2          (3,)  Center

  If Rtrim($Officer, ' ') <> ''
    Let $Officer_Hdg = 'Responsible Officer - ' || Rtrim($Officer, ' ')
    Print $Officer_Hdg         (4,)  Center
  End-If

  if $Deptid <> $priorDeptid
    Do Get-Department-Name
    move $Deptid to $priorDeptid
  end-if

  Print 'Deptid:'               (4,1)
  Print $Deptid                 (0,13)
  Print $DeptName               (0,+2)

  If $Empl_Type = 'S' Or
     $Empl_Type = ''

    !***   Report Heading for Salaried TM   ****!

    Print '<------------------------------------ '   (+2,{#column5})
    Print $Current_Year         (,)
    Print 'YEAR ------------------------------------>'    (,+1)

    Print 'IN STORE'            (+1,{#column3})
    Print 'HIRE'                (+0,{#column4})
    Print '   ANNUAL'           (+0,{#column5})
    Print 'MIN/TARGET/MAX'      (+0,{#column6})
!    Print '75% PRE-TAX'         (+0,{#column8})      !1289792 -- GEXHR_BONUS2017
    Print 'METRIC 1 '            (+0,{#column8})      !1289792 -- GEXHR_BONUS2017
    Print '   BONUS'            (+0,{#column10})
!    Print '25% STS'             (+0,{#column11})     !1289792 -- GEXHR_BONUS2017
    Print 'METRIC 2 '           (+0,{#column15})      !1289792 -- GEXHR_BONUS2017
    Print '  BONUS'             (+0,{#column12})
    Print ' TOTAL'              (+0,{#column13})

    Print 'NAME'                (+1,{#column1})
!    Print 'SSN'                 (+0,{#column2})     !1289792 -- GEXHR_BONUS2017
    Print 'EMPLID'              (+0,{#column2})      !1289792 -- GEXHR_BONUS2017
    Print 'DEPARTMENT'          (+0,{#column3})
    Print 'DATE'                (+0,{#column4})
    Print '   SALARY'           (+0,{#column5})
    Print 'PERCENT BONUS'       (+0,{#column6})
    !Print '% USED'              (+0,{#column9})      !1289792 -- GEXHR_BONUS2017
    Print '% USED'              (+0,{#columnS9})      !1289792 -- GEXHR_BONUS2017
    Print '   AMOUNT'           (+0,{#column10})
    !Print '% USED'              (+0,{#column11})      !1289792 -- GEXHR_BONUS2017
    Print '% USED'              (+0,{#columnS11})      !1289792 -- GEXHR_BONUS2017
    Print '  AMOUNT'            (+0,{#column12})
    Print 'BONUS AMOUNT'        (+0,{#column13})
    Print 'COMMENTS'            (+0,{#column14})

    Print '-'                   (+2,{#column1},21)   Fill
    Print '-'                   (+0,{#column2},9)    Fill
    Print '-'                   (+0,{#column3},10)   Fill
    Print '-'                   (+0,{#column4},8)    Fill
    Print '-'                   (+0,{#column5},12)   Fill
    Print '-'                   (+0,{#column6},14)   Fill
    Print '-'                   (+0,{#column8},11)   Fill
    Print '-'                   (+0,{#column10},12)  Fill
    Print '-'                   (+0,{#column11},7)   Fill
    Print '-'                   (+0,{#column12},11)  Fill
    Print '-'                   (+0,{#column13},13)  Fill
    Print '-'                   (+0,{#column14},25)  Fill

  Else

    !***   Report Heading for Hourly TM   ****!

    Print #BONUS_PAYWEEK2       (+2,{#column8})
    Print #BONUS_PAYWEEK3       (,{#column10})
    Print $Current_Year         (,{#column11})

    Print 'IN STORE'            (+1,{#column3})
    Print 'HIRE'                (+0,{#column4})
    Print '  HOURLY'            (+0,{#column5})
    Print ' WEEKLY'             (+0,{#column6})
    Print 'WEEKS'               (+0,{#column8})
    Print 'WEEKS'               (+0,{#column10})
    Print 'BONUS'               (+0,{#column11})

    Print 'NAME'                (+1,{#column1})
!    Print '  SSN'               (+0,{#column2})     !1289792 -- GEXHR_BONUS2017
    Print ' EMPLID'              (+0,{#column2})      !1289792 -- GEXHR_BONUS2017
    Print 'DEPARTMENT'          (+0,{#column3})
    Print 'DATE'                (+0,{#column4})
    Print ' SALARY'             (+0,{#column6})
    Print 'SALARY'              (+0,{#column8})
    Print 'SALARY'              (+0,{#column10})
    Print 'AMOUNT'              (+0,{#column11})

    Print '-'                   (+2,{#column1},21)   Fill
    Print '-'                   (+0,{#column2},9)    Fill
    Print '-'                   (+0,{#column3},10)   Fill
    Print '-'                   (+0,{#column4},8)    Fill
    Print '-'                   (+0,{#column5},10)   Fill
    Print '-'                   (+0,{#column6},10)   Fill
    Print '-'                   (+0,{#column8},9)    Fill
    Print '-'                   (+0,{#column10},9)   Fill
    Print '-'                   (+0,{#column11},50)  Fill

  End-If

End-Heading


!***********************************************************************
Begin-Procedure P100-Initialization
!***********************************************************************
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXPY091'
  Let $ReportTitle   =   'Bonus Report'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  Let $GEXXX900_Company_Alias  = 'JOB.COMPANY'
  Let $GEXXX901_Company_Alias  = 'JOB.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'JOB.PAYGROUP'
 Let $GEXXX902_Deptid_Alias   = 'JOB.DEPTID'
  Let $GEXXX903_Emp_Stat_Alias = 'JOB.EMPL_STATUS'
  Let $GEXXX907_Div_CD_Alias   = 'GEXDT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias  = 'JOB.ACCT_CD'
  Let $GEXXX913_Union_Cd_Alias = 'JOB.UNION_CD'
  Let $GEXXX916_Jobcode_Alias  = 'JOB.JOBCODE'
  Let $GEXXX930_Emp_Type_Alias = 'JOB.EMPL_TYPE'
  
  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls

  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  Show 'Report Began at ' &timeBegan ' on ' &dateBegan

  Do Format-DateTime($AsOfDate, $Heading_AsOfDate, {DEFDATE}, '', '')
  Let #Current_Year  = To_Number(Substr($AsOfDate,8,4))
  Let #Previous_Year = To_Number(Substr($AsOfDate,8,4))-1
  Move #Current_Year  To $Current_Year  9999
  Move #Previous_Year To $Previous_Year 9999

  Evaluate $Run_Type
    When = '1'
      Let $ReportTitle2 = '(Projection Report)'
    When = '2'
      Let $ReportTitle2 = '(Preview Calculation)'
    When = '3'
      Let $ReportTitle2 = '(Review Bonus Activity)'
    When = '4'
      Let $ReportTitle2 = '(Final Calculation)'
  End-Evaluate

  Let $X000_Order_By = 'Responsible Officer, Company, Deptid, Employee Type, Name'

  Show '$GEXXX907_Include_Div_Cd_Display_Criteria           = ' $GEXXX907_Include_Div_Cd_Display_Criteria
  Show '$GEXXX900_Include_Company_Display_Criteria          = ' $GEXXX900_Include_Company_Display_Criteria
  Show '$GEXXX901_Include_Company_Paygroup_Display_Criteria = ' $GEXXX901_Include_Company_Paygroup_Display_Criteria
  Show '$GEXXX902_Include_Deptid_Display_Criteria           = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Display_Criteria         = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  Show '$GEXXX909_Include_Acct_Cd_Display_Criteria          = ' $GEXXX909_Include_Acct_Cd_Display_Criteria
  Show '$GEXXX913_Include_Union_Cd_Display_Criteria         = ' $GEXXX913_Include_Union_Cd_Display_Criteria
  Show '$GEXXX916_Exclude_Jobcode_Display_Criteria          = ' $GEXXX916_Exclude_Jobcode_Display_Criteria
  Show '$GEXXX930_Include_Emp_Type_Display_Criteria         = ' $GEXXX930_Include_Emp_Type_Display_Criteria

  Show '$AsOfDate         = ' $AsOfDate
  Show '$Hire_Dt          = ' $Rc_Hire_Dt
  Show '$Salary_Dt        = ' $Salary_Dt
  Show '$Bonus_Award_Dt   = ' $Bonus_Award_Dt
  Show '$Run_Type         = ' $Run_Type '  ' $ReportTitle2
  Show '75% $Bonus_Pct_to_Use =  75%: ' $Bonus_Pct_to_Use ' - ' $Bonus_Pct
  Show '25% $Bonus_Pct_to_Use =  25%: ' $Bonus_Pct_to_Use_2 ' - ' $Bonus_Pct_2

  Do Convert-To-DTU-Date($Bonus_Award_Dt, $Bonus_Award_Dt_dtu)
  Do dtu-add-days($Bonus_Award_Dt_dtu,1, $Bonus_Award_Dt_Plus1_dtu)
  Do Convert-From-DTU-Date($Bonus_Award_Dt_Plus1_dtu,$Bonus_Award_Dt_Plus1)
  #debug8 Show '$Bonus_Award_Dt_Plus_One = ' $Bonus_Award_Dt_Plus1

  Do P130-Print-Cover-Page
End-Procedure


!***********************************************************************
Begin-Procedure P110-SQRW-Run-Controls
!***********************************************************************
#debug9 Show 'P110-SQRW-Run-Controls'

  Display 'Enter Run Type  (1=Projection, 2=Preview Calc, 3=Bonus Activity Review, 4=Final Calc)'
  While 1=1
    Input $Run_Type Maxlen=1 'Run Type'
    If $Run_Type = '1' Or
       $Run_Type = '2' Or
       $Run_Type = '3' Or
       $Run_Type = '4'
      Break
    End-If
  End-While

  If $Run_Type = '3' Or $Run_Type = '4'
     Let $GEXXX903_Emp_Stat_Alias = 'j.fieldvalue'
     Let $GEXXX930_Emp_Type_Alias = 'j.fieldvalue'
  End-If

  Do GEXXX950-Input-Parameters

  Let $DateOK = 'N'
  While $DateOK <> 'Y'
    Do Ask-Hire-Date
  End-While

  Let $DateOK = 'N'
  While $DateOK <> 'Y'
    Do Ask-Salary-Date
  End-While

  Let $DateOK = 'N'
  While $DateOK <> 'Y'
    Do Ask-Bonus-Award-Date
  End-While

  Let $UnionCdString = ''''
  Display 'Enter Union Code or leave blank to exit.'
  While 1=1
    Input $In-UnionCd Maxlen=3 'Union Code'
    Uppercase $In-UnionCd
    If Rtrim($In-UnionCd, ' ') = ''
      Concat '''' With $UnionCdString
      Break
    End-If
    If $UnionCdString <> ''''
      Concat ''',''' With $UnionCdString
    End-If
    Concat $In-UnionCd With $UnionCdString
  End-While

  If $UnionCdString = ''''''
    Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = '1=1'
    Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = $GEXXX913_Union_CD_Alias || ' In (' || $UnionCdString || ')'
    Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = $GEXXX913_INCLUDE_UNION_CD_CRITERIA
  End-If

  Let $EmplTypeString = ''''
  Display 'Enter Employee Type or leave blank to exit.'
  While 1=1
    Input $In-EmplType Maxlen=1 'Employee Type'
    Uppercase $In-EmplType
    If Rtrim($In-EmplType, ' ') = ''
      Concat '''' With $EmplTypeString
      Break
    End-If
    If $EmplTypeString <> ''''
      Concat ''',''' With $EmplTypeString
    End-If
    Concat $In-EmplType With $EmplTypeString
  End-While

  If $EmplTypeString = ''''''
    Let $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA = '1=1'
    Let $GEXXX930_INCLUDE_EMP_TYPE_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA = $GEXXX930_Emp_Type_Alias || ' In (' || $EmplTypeString || ')'
    Let $GEXXX930_INCLUDE_EMP_TYPE_DISPLAY_CRITERIA = $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA
  End-If

  Move '''' to $JobcodeString
  Display 'Enter Jobcode or leave blank to exit.'
  While 1=1
    Input $Jobcode maxlen=6 'Jobcode'
    Uppercase $Jobcode
    if RTRIM($Jobcode, ' ') = ''
      concat '''' with $JobcodeString
      break
    end-if
    if $JobcodeString <> ''''
      concat ''',''' with $JobcodeString
    end-if
    concat $Jobcode with $JobcodeString
  End-While

  if $JobcodeString = ''''''
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA = '1=1'
    Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA = 'NONE'
  else
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA = $GEXXX916_Jobcode_Alias || ' Not In (' || $JobcodeString || ')'
    Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA
  end-if

  Display 'Enter Bonus Percent to Use  (1=Minimum, 2=Mid One, 3=Target, 4=Mid Two, 5=Maximum)'
  While 1=1

    Input $Bonus_Pct_to_Use Maxlen=1 'Bonus Percent to Use 75%'

    Evaluate $Bonus_Pct_to_Use
       When = '1'
         Let $Bonus_Pct = '(Minimum)'
          Break
       When = '2'
          Let $Bonus_Pct = '(Mid One)'
          Break
       When = '3'
          Let $Bonus_Pct = '(Target)'
          Break
       When = '4'
          Let $Bonus_Pct = '(Maximum)'
          Break
    End-Evaluate

    Input $Bonus_Pct_to_Use_2 Maxlen=1 'Bonus Percent to Use 25% STS'

    Evaluate $Bonus_Pct_to_Use_2
       When = '1'
         Let $Bonus_Pct_2 = '(Minimum)'
          Break
       When = '2'
          Let $Bonus_Pct_2 = '(Mid One)'
          Break
       When = '3'
          Let $Bonus_Pct_2 = '(Target)'
          Break
       When = '4'
          Let $Bonus_Pct_2 = '(Maximum)'
          Break
    End-Evaluate

  End-While
End-Procedure


!***********************************************************************
Begin-Procedure Ask-Hire-Date
!***********************************************************************
#debug9 Show 'Ask-Hire-Date'
  move 'Y' to $DateOK
  display ''
  display 'Enter the ''Hired As Of'' Date ({Prompt-Date}) for this report or press'
  input $Rc_Hire_Dt 'enter to default today''s date as the ''Hired As Of'' date'
  if Rtrim($Rc_Hire_Dt, ' ') = ''
    move $AsOfToday to $Rc_Hire_Dt
  else
    move {PDelimiter} to $DDelimiter
    do Format-DateTime($Rc_Hire_Dt,$Rc_Hire_Dt,{Prompt-Mask},'','native')
  end-if
  do Validate-Native-Date($Rc_Hire_Dt,$DateOK)
  if $DateOK = 'N'
    display '**** This is an invalid date, please reenter ****'
  end-if
End-Procedure


!***********************************************************************
Begin-Procedure Ask-Salary-Date
!***********************************************************************
#debug9 Show 'Ask-Salary-Date'
  move 'Y' to $DateOK
  display ''
  display 'Enter the ''Salary As Of'' Date ({Prompt-Date}) for this report or press'
  input $Salary_Dt 'enter to default today''s date as the ''Salary As Of'' date'
  if $Salary_Dt = ''
    move $AsOfToday to $Salary_Dt
  else
    move {PDelimiter} to $DDelimiter
    do Format-DateTime($Salary_Dt,$Salary_Dt,{Prompt-Mask},'','native')
  end-if
  do Validate-Native-Date($Salary_Dt,$DateOK)
  if $DateOK = 'N'
    display '**** This is an invalid date, please reenter ****'
  end-if
End-Procedure


!***********************************************************************
Begin-Procedure Ask-Bonus-Award-Date
!***********************************************************************
#debug9 Show 'Ask-Bonus-Award-Date'
  move 'Y' to $DateOK
  display ''
  display 'Enter the Bonus Award Date ({Prompt-Date}) for this report or press'
  input $Bonus_Award_Dt 'enter to default today''s date as the Bonus Award Date'
  if $Bonus_Award_Dt = ''
    move $AsOfToday to $Bonus_Award_Dt
  else
    move {PDelimiter} to $DDelimiter
    do Format-DateTime($Bonus_Award_Dt,$Bonus_Award_Dt,{Prompt-Mask},'','native')
  end-if
  do Validate-Native-Date($Bonus_Award_Dt,$DateOK)
  if $DateOK = 'N'
    display '**** This is an invalid date, please reenter ****'
  end-if
End-Procedure


!***********************************************************************
Begin-Procedure P120-Process-Scheduler-Run-Controls
!***********************************************************************
#debug9 Show 'P120-Process-Scheduler-Run-Controls'

   Do GEXXX922-Select-Parameters
   Do GEXPY214-Select-Parameters
   Do Select-Parameters    !hrrnctl1.sqc

   Let #BONUS_PAYWEEK2   = 0
   Let #BONUS_PAYWEEK3   = 0

   Let $From_Date        = &RUN_CNTL_HR.FROMDATE
   Let $Thru_Date        = &RUN_CNTL_HR.THRUDATE
   Let #BONUS_PAYWEEK2   = &RUN_CNTL_HR.PERCENTCHG
   Let #BONUS_PAYWEEK3   = &RUN_CNTL_HR.AMOUNTCHG
   Let $Term_CutOff_Date = &rc.gex_term_cutoff_dt

   #debug8 Show 'From Date : '$From_Date
   #debug8 Show 'Thru Date : '$Thru_Date
   #debug8 Show 'Term Cutoff Date : '$Term_CutOff_Date
   Let #Total_RC_Bonus_Duration = Datediff($Thru_Date,$From_Date,'DAY')
   Let #DurfromRctl = #Total_RC_Bonus_Duration
   #debug8 Show 'Total Duration : '#Total_RC_Bonus_Duration

   Let $AsOfDate          = $GEX_RC_PAY.AsOfDate
   Let $Rc_Hire_Dt        = $GEX_RC_PAY.Hire_Dt
   Let $Salary_Dt         = $GEX_RC_PAY.FromDate
   Let $Run_Type          = $GEX_RC_PAY.GEXPY091_Rpt_Type
   Let $Bonus_Award_Dt    = $GEX_RC_PAY.ThruDate
   Let $Bonus_Pct_to_Use  = $GEX_RC_PAY.GEXPY091_Bonus_Pct     ! variable for 75% pre-tax
   Let #Pct_of_Pct_Used   = #GEX_RC_PAY.Min_OT_Hrs             ! variable for 75% pre-tax
   Let $Bonus_Pct_to_Use_2 = $GEX_RC_PAY.GEXPY091_Bns_Pct2     ! variable for 25% STS Sales Growth
   Let #Pct_of_Pct_Used_2 = #GEX_RC_PAY.GEX_Match_Amt          ! variable for 25% STS Sales Growth
   Let #Profit_Pct        = #GEX_RC_PAY.GEX_PROFIT_BON_PCT     ! ISDVVXK - GEXHR_848_E1944_BONUS2015
   Let #STS_Pct           = #GEX_RC_PAY.GEX_STS_BONUS_PCT      ! ISDVVXK - GEXHR_848_E1944_BONUS2015
   Let #Metric1Weight     = #GEX_RC_PAY.GEX_METRIC1_WEIGHT     ! 1289792 - GEXHR_BONUS2017
   Let #Metric2Weight     = #GEX_RC_PAY.GEX_METRIC2_WEIGHT     ! 1289792 - GEXHR_BONUS2017

   show 'Vahini #Profit_Pct :' #Profit_Pct
   show '#STS_Pct    :' #STS_Pct
   #debug8 Show '75% pre-tax Bonus = ' #Pct_of_Pct_Used
   #debug8 Show '25% STS Bonus = ' #Pct_of_Pct_Used_2

   If Rtrim($AsOfDate, ' ') = ''
     Let $AsOfDate = $AsOfToday
   End-If

   If Rtrim($Rc_Hire_Dt, ' ') = ''
     Let $Rc_Hire_Dt = $AsOfToday
   End-If

   If Rtrim($Salary_Dt, ' ') = ''
     Let $Salary_Dt = $AsOfToday
   End-If

   If Rtrim($Run_Type, ' ') = ''
     Let $Run_Type = '1'
   End-If

   If Rtrim($Bonus_Pct_to_Use, ' ') = ''
     Let $Bonus_Pct_to_Use = '2'
   End-If

   If Rtrim($Bonus_Pct_to_Use_2, ' ') = ''
     Let $Bonus_Pct_to_Use_2 = '2'
   End-If

   If Rtrim($Bonus_Award_Dt, ' ') = ''
     Let $Bonus_Award_Dt = $AsOfToday
   End-If

   If $Run_Type = '3' Or $Run_Type = '4'
      Let $GEXXX903_Emp_Stat_Alias = 'j.fieldvalue'
      Let $GEXXX930_Emp_Type_Alias = 'j.fieldvalue'
   End-If

   Do GEXXX900-Select-Company-Parameters
   Do GEXXX901-Select-Company-Paygroup-Parameters
   Do GEXXX902-Select-Deptid-Parameters
   Do GEXXX903-Select-Emp-Stat-Parameters
   Do GEXXX907-Select-Div-Cd-Parameters
   Do GEXXX909-Select-Acct-Cd-Parameters
   Do GEXXX913-Select-Union-Cd-Parameters
   Do GEXXX916-Select-Jobcode-Parameters
   Do GEXXX930-Select-Emp-Type-Parameters

End-Procedure


!***********************************************************************
begin-procedure P130-Print-Cover-Page
!***********************************************************************
#debug9 Show  'P130-Print-Cover-Page'
   Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
   Print '$Prcs_OprID          ='                                  (+2,5)
   Print $Prcs_OprID                                               (0,+2)
   Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
   Print $Prcs_Run_Cntl_ID                                         (0,+2)

   Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
   Print '$GEXXX907_Include_Div_Cd_Display_Criteria           ='   (+2,5)
   Print $GEXXX907_Include_Div_Cd_Display_Criteria                 (0,+2)
   Print '$GEXXX900_Include_Company_Display_Criteria          ='   (+1,5)
   Print $GEXXX900_Include_Company_Display_Criteria                (0,+2)
   Print '$GEXXX901_Include_Company_paygroup_Display_Criteria ='   (+1,5)
   Print $GEXXX901_Include_Company_paygroup_Display_Criteria       (0,+2)
   Print '$GEXXX902_Include_Deptid_Display_Criteria           ='   (+1,5)
   Print $GEXXX902_Include_Deptid_Display_Criteria                 (0,+2)
   Print '$GEXXX903_Include_Emp_Stat_Display_Criteria         ='   (+1,5)
   Print $GEXXX903_Include_Emp_Stat_Display_Criteria               (0,+2)
   Print '$GEXXX909_Include_Acct_Cd_Display_Criteria          ='   (+1,5)
   Print $GEXXX909_Include_Acct_Cd_Display_Criteria                (0,+2)
   Print '$GEXXX913_Include_Union_Cd_Display_Criteria         ='   (+1,5)
   Print $GEXXX913_Include_Union_Cd_Display_Criteria               (0,+2)
   Print '$GEXXX916_Exclude_Jobcode_Display_Criteria          ='   (+1,5)
   Print $GEXXX916_Exclude_Jobcode_Display_Criteria                (0,+2)
   Print '$GEXXX930_Include_Emp_Type_Display_Criteria         ='   (+1,5)
   Print $GEXXX930_Include_Emp_Type_Display_Criteria               (0,+2)

   Print 'As Of Date         ='              (+2,5)
   Print $AsOfDate                           (0,+2)
   Print 'Hire Date          ='              (+1,5)
   Print $Rc_Hire_Dt                         (0,+2)
   Print 'Salary Date        ='              (+1,5)
   Print $Salary_Dt                          (0,+2)
   Print 'Bonus Award Date   ='              (+1,5)
   Print $Bonus_Award_Dt                     (0,+2)
   Print 'Run Type           ='              (+1,5)
   Print $Run_Type                           (0,+2)
   Print $ReportTitle2                       (0,+2)

!   Print '75% Pre-Tax Bonus Pct to Use ='    (+1,5)  !1289792 - GEXHR_BONUS2017 
   Print 'Metric 1 Weight Bonus Pct to Use ='    (+1,5)  !1289792 - GEXHR_BONUS2017 
   Print $Bonus_Pct_to_Use                   (0,+2)
!   Print $Bonus_Pct                          (0,+2)
!   Print '25% STS Bonus Pct to Use ='        (+1,5)  !1289792 - GEXHR_BONUS2017 
   Print 'Metric 2 Weight Bonus Pct to Use ='        (+1,5)  !1289792 - GEXHR_BONUS2017 
   Print $Bonus_Pct_to_Use_2                 (0,+2)
!   Print $Bonus_Pct_2                        (0,+2)

   Print 'SORT ORDER FOR THIS REPORT RUN:'   (+5,2)
   Print $X000_Order_By                      (+2,5)

   Let #PAGE-COUNT = 0

End-Procedure


!***********************************************************************
Begin-Procedure Get-Emplid
!***********************************************************************
#debug9 Show  '***  Get-Emplid   *** '

#debug7 Show 'From - Thru Date                            = ' $From_date ' - ' $Thru_Date
#debug7 Show '$GEXXX900_Include_Company_Criteria]         = ' $GEXXX900_Include_Company_Criteria
#debug7 Show '$GEXXX901_Include_Company_Paygroup_Criteria]= ' $GEXXX901_Include_Company_Paygroup_Criteria
#debug7 Show '$GEXXX902_Include_Deptid_Criteria]          = ' $GEXXX902_Include_Deptid_Criteria
#debug7 Show '$GEXXX903_Include_Emp_Stat_Criteria]        = ' $GEXXX903_Include_Emp_Stat_Criteria
#debug7 Show '$GEXXX907_Include_Div_Cd_Criteria]          = ' $GEXXX907_Include_Div_Cd_Criteria
#debug7 Show '$GEXXX909_Include_Acct_Cd_Criteria]         = ' $GEXXX909_Include_Acct_Cd_Criteria
#debug7 Show '$GEXXX913_Include_Union_Cd_Criteria]        = ' $GEXXX913_Include_Union_Cd_Criteria
#debug7 Show '$GEXXX930_Include_Emp_Type_Criteria]        = ' $GEXXX930_Include_Emp_Type_Criteria
#debug7 Show '$GEXXX916_Exclude_Jobcode_Criteria]         = ' $GEXXX916_Exclude_Jobcode_Criteria
#debug7 Show 'JOB.LAST_HIRE_DT <= $Rc_Hire_Dt             = ' $Rc_Hire_Dt

   Let #Distinct_Employee_Count = 1

Begin-Select DISTINCT
JOB.EMPLID

        Let $Emplid = Ltrim(Rtrim(&JOB.EMPLID,' '),' ')
        #debug8 Show '$Emplid :'$Emplid
        Do Insert-Emplid
        Add 1 to #Distinct_Employee_Count

FROM PS_JOB JOB, ps_gex_dept_tbl     GEXDT
WHERE JOB.EFFDT BETWEEN $From_date and $Thru_Date
AND JOB.DEPTID = GEXDT.DEPTID
AND  GEXDT.EFFDT = (SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
                        WHERE  DEPTID       = GEXDT.DEPTID
                        AND    EFFDT       <= $AsOfDate)
AND  GEXDT.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM   PS_GEX_DEPT_TBL
                                        WHERE  DEPTID       = GEXDT.DEPTID
                                        AND    EFFDT        = GEXDT.EFFDT)

AND  [$GEXXX900_Include_Company_Criteria]
AND  [$GEXXX901_Include_Company_Paygroup_Criteria]
AND  [$GEXXX902_Include_Deptid_Criteria]
AND  [$GEXXX903_Include_Emp_Stat_Criteria]
AND  [$GEXXX907_Include_Div_Cd_Criteria]
AND  [$GEXXX909_Include_Acct_Cd_Criteria]
AND  [$GEXXX913_Include_Union_Cd_Criteria]
AND  [$GEXXX930_Include_Emp_Type_Criteria]
And  [$GEXXX916_Exclude_Jobcode_Criteria]
AND  JOB.LAST_HIRE_DT <= $Rc_Hire_Dt

End-Select

#debug7 Show 'SQL = '
#debug8 Show 'Distinct_Employee_Count :'#Distinct_Employee_Count
    Do Get-Emplid-2
#debug8 Show 'Distinct_Employee_Count :'#Distinct_Employee_Count
End-Procedure Get-Emplid


!***********************************************************************
Begin-Procedure Get-Emplid-2
!***********************************************************************
#debug9 Show  '***  Get-Emplid-2   *** '

    Let $GEXXX900_Company_Alias  = 'JM2.company'
    Let $GEXXX901_Company_Alias  = 'JM2.company'
    Let $GEXXX901_Paygroup_Alias = 'JM2.paygroup'
    Let $GEXXX902_Deptid_Alias   = 'JM2.deptid'
    Let $GEXXX903_Emp_Stat_Alias = 'JM2.empl_status'
    Let $GEXXX907_Div_CD_Alias   = 'GEXNXT.gex_company_div_cd'
    Let $GEXXX909_Acct_CD_Alias  = 'JM2.acct_cd'
    Let $GEXXX913_Union_Cd_Alias = 'JM2.union_cd'
    Let $GEXXX916_Jobcode_Alias  = 'JM2.jobcode'
    Let $GEXXX930_Emp_Type_Alias = 'JM2.empl_type'


    Do GEXXX900-Select-Company-Parameters
    Do GEXXX901-Select-Company-Paygroup-Parameters
    Do GEXXX902-Select-Deptid-Parameters
    Do GEXXX903-Select-Emp-Stat-Parameters
    Do GEXXX907-Select-Div-Cd-Parameters
    Do GEXXX909-Select-Acct-Cd-Parameters
    Do GEXXX913-Select-Union-Cd-Parameters

    Do GEXXX930-Select-Emp-Type-Parameters
!GEXHR_848_PRJ95045_BONUS_2013 2013-05-02 ISDVNPK
    Do GEXXX916-Select-Jobcode-Parameters
!GEXHR_848_PRJ95045_BONUS_2013 2013-05-02 ISDVNPK

#debug8 SHOW $GEXXX900_Include_Company_Criteria
#debug8 SHOW $GEXXX901_Include_Company_Paygroup_Criteria
#debug8 SHOW $GEXXX902_Include_Deptid_Criteria
#debug8 SHOW $GEXXX903_Include_Emp_Stat_Criteria
#debug8 SHOW $GEXXX907_Include_Div_Cd_Criteria
#debug8 SHOW $GEXXX909_Include_Acct_Cd_Criteria
#debug8 SHOW $GEXXX913_Include_Union_Cd_Criteria
#debug8 SHOW $GEXXX930_Include_Emp_Type_Criteria
!GEXHR_848_PRJ95045_BONUS_2013 2013-05-02 ISDVNPK
#debug8 SHOW $GEXXX916_Exclude_Jobcode_Criteria
!GEXHR_848_PRJ95045_BONUS_2013 2013-05-02 ISDVNPK
#debug8 SHOW $GEXXX214_Include_Bonus_Group_Criteria
#debug8 SHOW $Fromdate
#debug8 SHOW $ThruDate
#debug8 SHOW $Hire_Dt
!Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - End
 #debug8 Show 'GEXXX903_Include_Emp_Stat_Criteria :' $GEXXX903_Include_Emp_Stat_Criteria
 #debug8 Show 'GEXXX930_Include_Emp_Type_Criteria :'$GEXXX930_Include_Emp_Type_Criteria

Begin-Select DISTINCT
JM2.EMPLID

    Let $Emplid = Ltrim(Rtrim(&JM2.EMPLID,' '),' ')

    Do Insert-Emplid

    Let #Distinct_Employee_Count = #Distinct_Employee_Count  + 1
    Show  '$Emplid :'$Emplid

FROM PS_JOB JM2, PS_GEX_DEPT_TBL  GEXNXT
WHERE JM2.DEPTID = GEXNXT.DEPTID
AND  GEXNXT.EFFDT = (SELECT MAX(EFFDT)
                       FROM PS_GEX_DEPT_TBL
                      WHERE DEPTID  = GEXNXT.DEPTID
                        AND EFFDT  <= $AsOfDate)
AND  GEXNXT.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER)
                                 FROM PS_GEX_DEPT_TBL
                                WHERE DEPTID  = GEXNXT.DEPTID
                                  AND EFFDT   = GEXNXT.EFFDT)
And    JM2.EFFDT            = (SELECT MAX(JM21.EFFDT)
                                 FROM PS_JOB JM21
                                WHERE JM21.EMPLID    = JM2.EMPLID
                                  AND JM21.EMPL_RCD  = JM2.EMPL_RCD
                                  AND JM21.EFFDT     < $Thru_Date)
And    JM2.EFFSEQ           = (SELECT MAX(jm22.EFFSEQ)
                                 FROM PS_JOB JM22
                                WHERE JM22.EMPLID    = JM2.EMPLID
                                  AND JM22.EMPL_RCD  = JM2.EMPL_RCD
                                  AND JM22.EFFDT     = JM2.EFFDT)
AND  [$GEXXX900_Include_Company_Criteria]
AND  [$GEXXX901_Include_Company_Paygroup_Criteria]
AND  [$GEXXX902_Include_Deptid_Criteria]
AND  [$GEXXX903_Include_Emp_Stat_Criteria]
AND  [$GEXXX907_Include_Div_Cd_Criteria]
AND  [$GEXXX909_Include_Acct_Cd_Criteria]
AND  [$GEXXX913_Include_Union_Cd_Criteria]
AND  [$GEXXX930_Include_Emp_Type_Criteria]
And  [$GEXXX916_Exclude_Jobcode_Criteria]
AND  JM2.LAST_HIRE_DT <= $Rc_Hire_Dt
AND  JM2.EMPLID NOT IN (SELECT DISTINCT TMP.EMPLID FROM PS_GEX_RC_GEXPY212 TMP)
End-Select

End-Procedure Get-Emplid-2


!**********************************************************************
Begin-Procedure Select-Emplid
!**********************************************************************
#debug9 Show  '***  Select-Emplid   *** '

Begin-Select Distinct
PRC.EMPLID

    Let $Distinct_Emplid = Ltrim(rtrim(&PRC.EMPLID,' '),' ')
    Do P200-Main-Process

FROM PS_GEX_RC_GEXPY212 PRC

End-Select
    Do Print-Report-Mode2
    Close 1
!***********************************************************************
End-Procedure Select-Emplid
!***********************************************************************


!**********************************************************************
Begin-Procedure Delete-Emplid
!**********************************************************************
#debug9 Show  '***  Delete-Emplid   *** '

Begin-SQL On-Error=P299-Error('Delete-Emplid')
Delete from PS_GEX_RC_GEXPY212
End-SQL

!***********************************************************************
End-Procedure Delete-Emplid
!***********************************************************************

!***********************************************************************
Begin-Procedure Insert-Emplid
!***********************************************************************
#debug9 Show  '***  Insert-Emplid   *** '

Begin-Sql On-Error=P299-Error('Insert-Emplid')
Insert Into PS_GEX_RC_GEXPY212
(EMPLID
 )
Values
($Emplid)
End-Sql
!***********************************************************************
End-Procedure Insert-Emplid
!***********************************************************************

!***********************************************************************
Begin-Procedure P200-Main-Process
!***********************************************************************
#debug8 Show 'Entering Procedure P200-Main-Process :'$Distinct_Emplid ' '$Rc_Hire_Dt
#debug9 Show  '***  P200-Main-Process   *** '
    Let #AllBonus = 1                               !GEXPY_848_E95094_02 2012-06-06 VENDAXG
    Clear-array  Name=Employee_All_Bonus            !GEXPY_848_E95094_02 2012-06-06 VENDAXG
    Clear-array  Name=Final_Employee_All_Bonus      !GEXPY_848_E95094_02 2012-06-06 VENDAXG

Begin-Select
PD2.NAME
J.COMPANY
J.DEPTID
J.EMPL_TYPE
J.EMPLID
J.EMPL_RCD
J.ACCT_CD
J.HIRE_DT
J.SETID_DEPT
J.SAL_ADMIN_PLAN
J.GRADE
J.LAST_HIRE_DT
J.REPORTS_TO

    Let $Emplid             = &J.EMPLID
    Let #Empl_Rcd_Nbr       = &J.EMPL_RCD
    Let $Name               = &PD2.NAME
    Let $Company            = &J.COMPANY
    Let $Deptid             = &J.DEPTID
    Let $Acctcd             = &J.ACCT_CD
    Let $Empl_Type          = &J.EMPL_TYPE
    Let $Hire_Dt            = &J.HIRE_DT
    Let $Last_Hire_Dt       = &J.LAST_HIRE_DT
    Let $Reports_to         = &J.REPORTS_TO

    Let $current_found = 'N'
    #debug8 Show '********************************************'  $Emplid  '****************************************************'
    Let #Year = #Current_Year
    Do P220-Bonus-Table-Select
    Let #current_min_pct     = &gex_min_bonus_pct
    Let #current_tar_pct     = &gex_tar_bonus_pct
    Let #current_max_pct     = &gex_max_bonus_pct
    Let #current_csi_adj_pct = &gex_csi_adj_pct
    Let #current_bonus_amt   = &gex_bonus_amt
    Let #current_bonus_amt_2 = &gex_bonus_amt2
    !1289792 - GEXHR_BONUS2017 Begins
    !Let #current_mid_one     = (#current_min_pct + #current_tar_pct) / 2
    !Let #current_mid_two     = (#current_tar_pct + #current_max_pct) / 2
    Let #current_mid_one     = (#current_tar_pct - #current_min_pct )
    Let #current_mid_two     = (#current_max_pct - #current_tar_pct )
    !1289792 - GEXHR_BONUS2017 Ends


    Let $Skip = 'Y'
    Let $Leave_Duration_Skip = 'N'
    Let $Leave_Duration_prorate = 'N'

    Do Get-Leave-Duration

    if #Total_Leave_Duration > 0
       if #Total_Leave_Duration <= 122
          Let $Leave_Duration_Skip = 'N'
       Else
  	  if #Total_Leave_Duration > 122 and #Total_Leave_Duration <= 273
             Let $Leave_Duration_prorate = 'Y'
             Let $Leave_Duration_Skip = 'N'
          Else
             Let $Leave_Duration_Skip = 'Y'
          End-if
       End-if
    End-if

    If $Run_Type = '1'
       Let $Skip = 'N'
    Else
       If $Run_Type = '2'
          If &gex_bonus_status <> '4'
             Let $Skip = 'N'
          End-If
       End-if
    End-If

    Do Check-Termination-AsofCutoff

    #debug8 Show 'Skip : ' $Skip  ' Leave_Duration_Skip : '$Leave_Duration_Skip ' Termination_Row_Found :' $Termination_Row_Found

    If ($Skip = 'N') AND
       ($Leave_Duration_Skip = 'N') AND
       ($Termination_Row_Found = 'N')

        Let $OK-To-Advance-Page = 'Y'
        Let $Data-Found-Flag = 'Y'
        Let #Year = #Previous_Year
        Do P220-Bonus-Table-Select

        Let #annual_rt            = &annual_rt
        Let #hourly_rt            = 0
        Let #weekly_rt            = &annual_rt / 52
        Let #previous_min_pct     = &gex_min_bonus_pct
        Let #previous_tar_pct     = &gex_tar_bonus_pct
        Let #previous_max_pct     = &gex_max_bonus_pct
        Let #previous_csi_adj_pct = &gex_csi_adj_pct
        Let #previous_bonus_amt   = &gex_bonus_amt
        Let #previous_bonus_amt_2 = &gex_bonus_amt2

        Let #previous_mid_one     = (#previous_min_pct + #previous_tar_pct) / 2
        Let #previous_mid_two     = (#previous_tar_pct + #previous_max_pct) / 2

        Let $salary_effdt = $Salary_Dt

        Evaluate $Run_Type
           When = '1'
              Let $Update_Status = '1'
           When = '2'
              Let $Update_Status = '2'
        End-Evaluate

        Do Get-EE-Salary
        Do Get-All-Grades
        #debug8 Show 'Hourly Rate : ' #hourly_rt ' Weekly Rate: '#weekly_rt ' 1.5 Weekly Rate: ' #weekly_rt_1_5 ' 2 Weekly rate: '#weekly_rt_2

        Let #Final_Calculation = 1
        Let $Promotion_Found_Flag = 'N'

        While #Final_Calculation < #Curr_Grade
           Let #Curr_Grade       = #Curr_Grade - 1
           
           !Get $Calculate_Grade $Calculate_Sal_Admin_Plan $Calculate_Empl_type $Calculate_JobCode $Calculate_Position_Nbr #Calculate_Annual_Rt $Calculate_Promotion_Found #Calculate_Duration From Salary_Grade(#Curr_Grade) !MM 08/21/2017 
           Get $Calculate_Grade $Calculate_Sal_Admin_Plan $Calculate_Empl_type $Calculate_JobCode $CalculateDept $Calculate_Position_Nbr #Calculate_Annual_Rt $Calculate_Promotion_Found #Calculate_Duration From Salary_Grade(#Curr_Grade) !MM 08/21/2017 

           #debug8 Show '***************************** Calculation for **********************************'
           #debug8 Show 'Empl Type : '$Calculate_Empl_type ' Grade : '$Calculate_Grade ' Sal Admin Plan : '$Calculate_Sal_Admin_Plan ' JobCode :'$Calculate_JobCode  '$CalculateDept' $CalculateDept  'Calculate_Annual_Rt:'#Calculate_Annual_Rt ' Calculate_Promotion_Found:'$Calculate_Promotion_Found '  Duration : '#Calculate_Duration ' Calculate_Position_Nbr :'$Calculate_Position_Nbr

           Let #Year = #Current_Year

           If $Calculate_Promotion_Found = 'Y'
              Let #Pro_Annual_Rt = #Calculate_Annual_Rt
              Let $Promotion_Found_Flag = 'Y'
           End-if

           If $Promotion_Found_Flag = 'Y'
              Let #Annual_Rt = #Pro_Annual_Rt
           End-if

           Do Gex-EE-Exception-Pct

           If $Exception_Found <> 'Y'
              Do Get-Pcts
           End-if
           
           !1289792 - GEXHR_BONUS2017 Begins
           !Let #current_mid_one     = (#current_min_pct + #current_tar_pct) / 2
           !Let #current_mid_two     = (#current_tar_pct + #current_max_pct) / 2
           Let #current_mid_one     = (#current_tar_pct - #current_min_pct )
           Let #current_mid_two     = (#current_max_pct - #current_tar_pct )
           !1289792 - GEXHR_BONUS2017 Ends

           !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
           !1289792 - GEXHR_BONUS2017 Begins
           !Let #current_mid_three   = (#current_tar_pct - #current_min_pct)
           Let #current_mid_three   = #current_max_pct
           !1289792 - GEXHR_BONUS2017 Ends          
           !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends

           !**   Set the 75% Pre-Tax Bonus variables used for calculation   **!
           Evaluate $Bonus_Pct_to_Use
                 When = '1'
                         Let #ee_pct = #current_min_pct
                 When = '2'
                         !1289792 - GEXHR_BONUS2017 Begins
                         !Let #ee_pct = #current_mid_one
                         Let #ee_pct = #current_min_pct + (#current_mid_one * #profit_pct)  
                         Show '#current_mid_one :' #current_mid_one
                         !1289792 - GEXHR_BONUS2017 Ends
                 When = '3'
                         Let #ee_pct = #current_tar_pct
                 When = '4'
                         !1289792 - GEXHR_BONUS2017 Begins
                         !Let #ee_pct = #current_mid_two
                         Let #ee_pct = #current_tar_pct + (#current_mid_two * #profit_pct)  
                         !1289792 - GEXHR_BONUS2017 Ends
                 When = '5'
                         Let #ee_pct = #current_max_pct
                 !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins                         
                 When = '6'
                         Show '#profit_pct :' #profit_pct
                         !1289792 - GEXHR_BONUS2017 Begins
                         !Let #ee_pct = #current_min_pct + (#current_mid_three * #profit_pct) 
                         Let #ee_pct = #current_max_pct + (#current_mid_three * #profit_pct)
                         !1289792 - GEXHR_BONUS2017 Ends  
                         Show '#current_mid_three :' #current_mid_three
                         Show '#ee_pct :' #ee_pct  
                 !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends        
           End-Evaluate

           !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
           !Let #Gex_Bonus_Pct_Used = #Ee_Pct
           !1289792 - GEXHR_BONUS2017 Begins
           !if $Bonus_Pct_to_Use <> '6'
              !Let #Ee_Pct = #Ee_Pct * (#Pct_of_Pct_Used / 100) * .75
              Let #Ee_Pct = #Ee_Pct * (#Pct_of_Pct_Used / 100) * (#Metric1Weight/100)
           !1289792 - GEXHR_BONUS2017 Ends
           !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
           !1289792 - GEXHR_BONUS2017 Begins
          ! else
              !Let #Ee_Pct = #Ee_Pct * .75
           !1289792 - GEXHR_BONUS2017 Ends
               Show '#Ee_Pct :' #Ee_Pct
           !end-if
           Let #Gex_Bonus_Pct_Used = #Ee_Pct
           !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
           Let #ee_csi = #current_csi_adj_pct
           Let #current_bonus_amt = 0

           !**   Set the 25% STS Growth variables used for calculation   **!
           Evaluate $Bonus_Pct_to_Use_2
                 When = '1'
                         Let #ee_pct_2 = #current_min_pct
                 When = '2'
                         !1289792 - GEXHR_BONUS2017 Begins
                         !Let #ee_pct_2 = #current_mid_one
                         Let #ee_pct_2 = #current_min_pct + (#current_mid_one * #STS_pct)  
                         !1289792 - GEXHR_BONUS2017 Ends
                 When = '3'
                         Let #ee_pct_2 = #current_tar_pct
                 When = '4'
                         !1289792 - GEXHR_BONUS2017 Begins
                         !Let #ee_pct_2 = #current_mid_two
                         Let #ee_pct_2 = #current_tar_pct + (#current_mid_two * #STS_pct)  
                         !1289792 - GEXHR_BONUS2017 Ends

                 When = '5'
                         Let #ee_pct_2 = #current_max_pct
                         !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins                         
                 When = '6'
                         Show '#STS_pct :' #STS_pct
                         !1289792 - GEXHR_BONUS2017 Begins
                         !Let #ee_pct_2 = #current_min_pct + (#current_mid_three * #STS_pct)  
                         Let #ee_pct_2 = #current_max_pct + (#current_mid_three * #STS_pct)
                         !1289792 - GEXHR_BONUS2017 Ends 
                         Show '#current_mid_three :' #current_mid_three
                         Show '#ee_pct_2 :' #ee_pct_2    
                 !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends        
           End-Evaluate

           
           !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
           !Let #Gex_Bonus_Pct_Used_2 = #Ee_Pct_2
           !1289792 - GEXHR_BONUS2017 Begins
           !if $Bonus_Pct_to_Use_2 <> '6'
              !Let #Ee_Pct_2 = #Ee_Pct_2 * (#Pct_of_Pct_Used_2 / 100) * .25
              Let #Ee_Pct_2 = #Ee_Pct_2 * (#Pct_of_Pct_Used_2 / 100) * (#Metric2Weight/100)
           !else
              !Let #Ee_Pct_2 = #Ee_Pct_2 * .25
           !1289792 - GEXHR_BONUS2017 Ends
              Show '#ee_pct_2 :' #ee_pct_2 
           !end-if
           Let #Gex_Bonus_Pct_Used_2 = #Ee_Pct_2
           !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
           Let #ee_csi_2 = #current_csi_adj_pct
           Let #current_bonus_amt_2 = 0
           Let #current_bonus_amt_total = 0

           If $Calculate_Empl_type = 'S'

               !*  Variables with _2 are used for 25% STS Growth calculation

               Let #Calc_Bonus   = #annual_rt * #ee_pct     ! calculate the 75% pre-tax
               Let #Calc_Bonus_2 = #annual_rt * #ee_pct_2   ! calculate the 25% STS Growth

               #debug8 Show 'Annual Rate * EE Pct: '#annual_rt ' * ' #ee_pct ' = Calculated Bonus 75%: '  #Calc_Bonus
               #debug8 Show 'Annual Rate * EE Pct: '#annual_rt ' * ' #Ee_pct_2 ' = Calculated Bonus 25%: ' #Calc_Bonus_2
               #debug8 Show 'Total Salary Leave Duration: '#Total_Leave_S
               #debug8 Show 'Pro-rate Leave: '$Leave_Duration_prorate

               if $Leave_Duration_prorate = 'Y'
                      Let #Calc_After_Empl_Type_Proration   = (#Calc_Bonus * (#Total_Duration_S - #Total_Leave_S)) / #Total_RC_Bonus_Duration
                      Let #Calc_After_Empl_Type_Proration_2 = (#Calc_Bonus_2 * (#Total_Duration_S - #Total_Leave_S)) / #Total_RC_Bonus_Duration
               else
                      Let #Calc_After_Empl_Type_Proration   = (#Calc_Bonus * #Total_Duration_S) / #Total_RC_Bonus_Duration
                      Let #Calc_After_Empl_Type_Proration_2 = (#Calc_Bonus_2 * #Total_Duration_S) / #Total_RC_Bonus_Duration
               End-if

               #debug8 Show 'Proration for Salaried and Leave Days : '#Total_Duration_S ' Is : '#Calc_After_Empl_Type_Proration

               If #Total_Duration_S <> 0
                       Let #Calc_After_JobCode_Proration   = (#Calc_After_Empl_Type_Proration * #Calculate_Duration) / #Total_Duration_S
                       Let #Calc_After_JobCode_Proration_2 = (#Calc_After_Empl_Type_Proration_2 * #Calculate_Duration) / #Total_Duration_S
                       #debug8 Show 'Proration for Jobcode Duration : '#Calculate_Duration ' Out of total Period of :'#Total_Duration_S ' Is :'#Calc_After_JobCode_Proration
               Else
                       Let #Calc_After_JobCode_Proration   = 0
                       Let #Calc_After_JobCode_Proration_2 = 0
                       #debug8 Show 'Total Duration in the Jobcode is zero.'
               End-if

               Let #Current_bonus_amt       = #Calc_After_JobCode_Proration
               Let #Current_bonus_amt_2     = #Calc_After_JobCode_Proration_2
               Let #Current_Bonus_Amt_Total = #Current_bonus_amt + #Current_bonus_amt_2
               Let #hourly_rt     = 0
               Let #weekly_rt     = 0
               Let #weekly_rt_1_5 = 0
               Let #weekly_rt_2   = 0

               #debug8 Show '75% Bonus = ' #Current_bonus_amt ' -- 25% Bonus = ' #Current_bonus_amt_2 ' -- Total Bonus = ' #Current_Bonus_Amt_Total

           End-If

           Let $Empl_Type = $Calculate_Empl_type

           Do Check-Delegation
           If $Delegation_Found = 'Y'
               Let $Reports_to = $New_Reports_to
           Else
               Do Check-Valid-Reports-To
               If $Employee_Found_in_Position = 'Y'
                   Show 'First No Reports To position found for Position Number: '$Reports_to
               Else
                   Let #k = 1
                   while #k < 5
                       Do Get-Position-Reports-To
                       Let $Reports_to = $Reports_to_Position
                       Do Check-Valid-Reports-To
                       If $Employee_Found_in_Position = 'Y'
                           !Let $Reports_to = $Reports_to_Position
                           Show 'No Reports To position found for Position Number: '$Reports_to ' #k :' #k
                           Break
                       Else
                           !Let $Reports_to = $Reports_to_Position
                           Show 'No Reports To position found for Position Number: '$Reports_to ' #k :'#k
                       End-if
                       Let #k = #k + 1
                   End-while
               End-if
           End-if

           Let $Gex_Dept_bonus_Group = 'BG06'
           !MM 08/21/2017 BEGIN           
           !Put $Emplid #Empl_Rcd_Nbr
           !    #Year $Deptid $Empl_Type
           !    $Max_Duration_Deptid $Calculate_JobCode
           !    #Annual_Rt $Calculate_Position_Nbr
           !    #Current_Min_Pct #Current_Tar_Pct
           !    #Current_Max_Pct
           !    #Gex_Bonus_Pct_Used #Current_Bonus_Amt
           !    #Gex_Bonus_Pct_Used_2 #Current_Bonus_Amt_2
           !    #Current_Bonus_Amt_Total
           !    $Gex_Dept_bonus_Group $Reports_to
           !    #Gex_Std_Hours $Calculate_Grade
           !    $Calculate_Sal_Admin_Plan
           !    Into Employee_All_Bonus(#AllBonus)

           Put $Emplid #Empl_Rcd_Nbr
               #Year $CalculateDept  $Empl_Type
               $Max_Duration_Deptid $Calculate_JobCode
               #Annual_Rt $Calculate_Position_Nbr
               #Current_Min_Pct #Current_Tar_Pct
               #Current_Max_Pct
               #Gex_Bonus_Pct_Used #Current_Bonus_Amt
               #Gex_Bonus_Pct_Used_2 #Current_Bonus_Amt_2
               #Current_Bonus_Amt_Total
               $Gex_Dept_bonus_Group $Reports_to
               #Gex_Std_Hours $Calculate_Grade
               $Calculate_Sal_Admin_Plan
               Into Employee_All_Bonus(#AllBonus)
           !MM 08/21/2017 END   

           Let #AllBonus = #AllBonus + 1

           Add 1                   To #type-count
           Add 1                   To #deptid-count

           Add #previous_bonus_amt      To #type_previous_bonus
           Add #previous_bonus_amt_2    To #type_previous_bonus_2
           Add #previous_bonus_amt_total To #type_previous_bonus_total
           Add #current_bonus_amt       To #type_current_bonus
           Add #current_bonus_amt_2     To #type_current_bonus_2
           Add #Current_Bonus_Amt_Total to #type_current_bonus_total

           Add #previous_bonus_amt      To #deptid_previous_bonus
           Add #previous_bonus_amt_2    To #deptid_previous_bonus_2
           Add #previous_bonus_amt_total To #deptid_previous_bonus_total
           Add #current_bonus_amt       To #deptid_current_bonus
           Add #current_bonus_amt_2     To #deptid_current_bonus_2
           Add #Current_Bonus_Amt_Total to #deptid_current_bonus_total

           Add #previous_bonus_amt      To #report_previous_bonus
           Add #previous_bonus_amt_2    To #report_previous_bonus_2
           Add #previous_bonus_amt_total To #report_previous_bonus_total
           Add #current_bonus_amt       To #report_current_bonus
           Add #current_bonus_amt_2     To #report_current_bonus_2
           Add #Current_Bonus_Amt_Total to #report_current_bonus_total
       End-while

    End-If

    #debug8 Show '************************End Processing Employee :' $Emplid  ' **************************'

From   ps_personal_data    pd2,
       ps_job              j
Where  pd2.emplid = $Distinct_Emplid
  and  pd2.emplid = j.emplid
  and  j.effdt    = (Select Max(j1.effdt)
                       From ps_job j1
                      Where j1.emplid    = j.emplid
                        and j1.empl_rcd  = j.empl_rcd
                        and j1.effdt    <= sysdate)
  and  j.effseq   = (Select Max(j2.effseq)
                       From ps_job j2
                      Where j2.emplid   = j.emplid
                        and j2.empl_rcd = j.empl_rcd
                        and j2.effdt    = j.effdt)
  and  j.last_hire_dt <= $Rc_Hire_Dt
End-Select

   Let #All_Bonus_Counter = 1
#debug8 Show '*************************** Total Jobcode Bonus Row ***********************'
   While #All_Bonus_Counter < #AllBonus
        Get $Allbonus_Emplid #AllBonus_Empl_Rcd
            #Current_Year $Deptid $Empl_Type
            $Max_Duration_Deptid $Jobcd
            #Annual_Rt $Gex_Position_Nbr
            #Current_Min_Pct #Current_Tar_Pct
            #Current_Max_Pct
            #Gex_Bonus_Pct_Used #Current_Bonus_Amt
            #Gex_Bonus_Pct_Used_2 #Current_Bonus_Amt_2
            #Current_Bonus_Amt_Total
            $Gex_Dept_bonus_Group $Reports_to
            #Std_hours $All_grade $Gex_Sal_Admin_Plan
            From Employee_All_Bonus(#All_Bonus_Counter)
        #debug8 Show $Allbonus_Emplid ':' #AllBonus_Empl_Rcd ':' #Current_Year ':' $Deptid ':' $Empl_Type ':' $Max_Duration_Deptid ':' $Jobcd ':' #Annual_Rt ':' $Gex_Position_Nbr ':' #Current_Min_Pct ':' #Current_Tar_Pct ':' #Current_Max_Pct ':' #Gex_Bonus_Pct_Used ':' #Current_Bonus_Amt ':' #Current_Bonus_Amt_2 ':' #Current_Bonus_Amt_Total ':' $Gex_Dept_bonus_Group ':' $Reports_to ':' #Std_hours ':'  $All_grade ':'$Gex_Sal_Admin_Plan
        Let #All_Bonus_Counter = #All_Bonus_Counter + 1
   End-While
#debug8 Show '*************************** Total Jobcode Bonus Row ***********************'

   Do Sum-Distinct-Bonus-Grades
   Do Process-EE-Bonus-Rows

#debug8 Show 'Exiting Procedure P200-Main-Process Emplid :'$Distinct_Emplid
!***********************************************************************
End-Procedure
!***********************************************************************

!***********************************************************************
Begin-Procedure Process-EE-Bonus-Rows
!***********************************************************************
#debug9 Show  '***  Process-EE-Bonus-Rows   *** '
#debug9 Show  'Final_Bonus_Grade_Row_Count: ' #Final_Bonus_Grade_Row_Count
   Let #Counter_Insert = 1
   Let #annual_rt_Final = #annual_rt
   While #Counter_Insert < #Final_Bonus_Grade_Row_Count

        Get $Emplid #Empl_Rcd_Nbr #Year
            $Deptid $Empl_Type $Max_Duration_Deptid
            $Calculate_JobCode #Annual_rt
            $Calculate_Position_Nbr #Current_Min_Pct
            #Current_Tar_Pct #Current_Max_Pct
            #Gex_Bonus_Pct_Used #Current_Bonus_Amt
            #Gex_Bonus_Pct_Used_2 #Current_Bonus_Amt_2
            #Current_Bonus_Amt_Total
!            #Final_Bonus_Amt
            $Gex_Dept_bonus_Group $Reports_to
            #Gex_Std_Hours $Calculate_Grade $All_Sal_Adm_Plan
            From Final_Employee_All_Bonus(#Counter_Insert)

        If $Empl_Type = 'H'
            Do Get-Hourly-EE-Salary
            Let #annual_rt =0
        Else
            Let #hourly_rt = 0
            let #weekly_rt = 0
            Let #weekly_rt_1_5 = 0
            Let #weekly_rt_2 = 0
!            Let #annual_rt = #annual_rt
            Let #Final_Bonus_Amt = #Current_Bonus_Amt + #Current_Bonus_Amt_2
        End-if

        Do Check-Bonus-Already-Calculated
        If $Bonus_Calculated = 'Y'
            Do Update-Bonus-Amount
        Else
            Do P270-Insert-GEX-Empl-Bonus-PCT
        End-if
        Do write-file

        #debug8 Show $Emplid ':' #Empl_Rcd_Nbr  ':' #Year  ':' $Deptid  ':' $Empl_Type ':'  $Max_Duration_Deptid  ':' $Calculate_JobCode  ':' #annual_rt ':' $Calculate_Position_Nbr  ':' #Current_Min_Pct ':'  #Current_Tar_Pct ':' #Current_Max_Pct  ':' #Gex_Bonus_Pct_Used ':'  #Current_Bonus_Amt  ':' #Final_Bonus_Amt  ':' $Gex_Dept_bonus_Group  ':' $Reports_to  ':' #Gex_Std_Hours  ':' $Calculate_Grade ':' !All_Sal_Adm_Plan
        Let #Counter_Insert = #Counter_Insert + 1
   End-while
!***********************************************************************
End-Procedure Process-EE-Bonus-Rows
!***********************************************************************

!***********************************************************************
Begin-Procedure Sum-Distinct-Bonus-Grades
!***********************************************************************
#debug9 Show  '***  Sum-Distinct-Bonus-Grades   *** '
   Let #Counter_Bonus_Grades =0
   Let $Prev_Distinct_Bonus_Grade = ''
   Let #Distinct_Bonus_Grade_Count = 0
   Let #Sum_Distinct_Bonus_Grade_Duration = 0
   Let #Final_Bonus_Grade_Row_Count = 0
   Let #Counter_Bonus_Grades  = #All_Bonus_Counter

   While #Counter_Bonus_Grades > 0

      Let #Counter_Bonus_Grades = #Counter_Bonus_Grades - 1
      Get $Allbonus_Emplid #AllBonus_Empl_Rcd
          #Allbonus_Year $Allbonus_Deptid
          $Allbonus_Empl_Type $Allbonus_Max_Dur_Dept
          $Allbonus_Jobcd #Annual_Rt
          $Allbonus_Gex_Pos_Nbr #Allbonus_Current_Min_Pct
          #Allbonus_Current_Tar_Pct #Allbonus_Current_Max_Pct
          #Allbonus_Gex_Bonus_Pct_Used #Allbonus_Current_Bonus_Amt
          #Allbonus_Gex_Bonus_Pct_Used_2 #Allbonus_Current_Bonus_Amt_2
          #Allbonus_Current_Bonus_Amt_Total $Allbonus_Dept_bon_Group
          $Allbonus_Reports_to #Allbonus_Std_hours
          $Allbonus_All_grade $Allbonus_Sal_Adm_pln
          From Employee_All_Bonus(#Counter_Bonus_Grades)

      Let $Bonus_Grade_Found_Final_List = 'N'
      Let #Counter_Bonus_Grades2 = 0
      While #Counter_Bonus_Grades2 < #Final_Bonus_Grade_Row_Count
          Let #Counter_Bonus_Grades2 = #Counter_Bonus_Grades2 + 1
          Get $D_Emplid #D_Empl_Rcd #D_Current_Year
              $D_Deptid $Dist_Bon_Empl_Type
              $Dist_Bon_Max_Duration_Deptid $Dist_Bon_Jobcd
              #Dist_Annual_Rt $Dist_Bon_Gex_Position_Nbr
              #Dist_Bon_Current_Min_Pct #Dist_Bon_Current_Tar_Pct
              #Dist_Bon_Current_Max_Pct
              #Dist_Bon_Gex_Bonus_Pct_Used #Dist_Bon_Current_Bonus_Amt
              #Dist_Bon_Gex_Bonus_Pct_Used_2 #Dist_Bon_Current_Bonus_Amt_2
              #Dist_Bon_Current_Bonus_Amt_Total
              $Dist_Bon_Gex_Dept_bonus_Group $Dist_Bon_Reports_to
              #Dist_Bon_Std_hours $Dist_Bon_All_grade $Dist_Bon_All_Sal_Adm
              From Final_Employee_All_Bonus(#Counter_Bonus_Grades2)

          If ($Allbonus_Empl_Type = $Dist_Bon_Empl_Type) And ($Allbonus_Empl_Type = 'H')
              Let $Bonus_Grade_Found_Final_List = 'Y'
          Else
              If ($Dist_Bon_All_grade = $Allbonus_All_grade) AND ($Allbonus_Sal_Adm_pln = $Dist_Bon_All_Sal_Adm) AND ($Allbonus_Empl_Type = $Dist_Bon_Empl_Type) AND ($Allbonus_Jobcd = $Dist_Bon_Jobcd)
                  Let $Bonus_Grade_Found_Final_List = 'Y'
              End-if
          End-if

      End-While

      If $Bonus_Grade_Found_Final_List = 'N'
          Let #Counter_Bonus_Grades1 = 0
          Let $Prev_All_Bonus_Grade = ''
          Let #Sum_Distinct_Bonus_Grade_Amount = 0
          Let #Sum_Distinct_Bonus_Grade_Amount_2 = 0
          Let #Sum_Distinct_Bonus_Grade_Amount_Total = 0

          While #Counter_Bonus_Grades1 < #All_Bonus_Counter
              Let #Counter_Bonus_Grades1 = #Counter_Bonus_Grades1 + 1
              Get $F_Emplid #F_Empl_Rcd #F_Current_Year
                  $F_Deptid $Find_Bon_Empl_Type
                  $Find_Bon_Max_Duration_Deptid $Find_Bon_Jobcd
                  #Find_Annual $Find_Bon_Gex_Position_Nbr
                  #Find_Bon_Current_Min_Pct #Find_Bon_Current_Tar_Pct
                  #Find_Bon_Current_Max_Pct
                  #Find_Bon_Gex_Bonus_Pct_Used #Find_Bon_Current_Bonus_Amt
                  #Find_Bon_Gex_Bonus_Pct_Used_2 #Find_Bon_Current_Bonus_Amt_2
                  #Find_Bon_Current_Bonus_Amt_Total $Find_Bon_Gex_Dept_bonus_Group
                  $Find_Bon_Reports_to #Find_Bon_Std_hours
                  $Find_Bon_All_grade $Find_Bon_Sal_Adm_Plan
                  From Employee_All_Bonus(#Counter_Bonus_Grades1)

              If ($Find_Bon_All_grade = $Allbonus_All_grade)
                  AND ($Allbonus_Sal_Adm_pln = $Find_Bon_Sal_Adm_Plan)
                  AND ($Allbonus_Empl_Type = $Find_Bon_Empl_Type)
                  AND ($Allbonus_Jobcd = $Find_Bon_Jobcd)

                  Let #Sum_Distinct_Bonus_Grade_Amount       = #Sum_Distinct_Bonus_Grade_Amount       + #Find_Bon_Current_Bonus_Amt
                  Let #Sum_Distinct_Bonus_Grade_Amount_2     = #Sum_Distinct_Bonus_Grade_Amount_2     + #Find_Bon_Current_Bonus_Amt_2
                  Let #Sum_Distinct_Bonus_Grade_Amount_Total = #Sum_Distinct_Bonus_Grade_Amount_Total + #Find_Bon_Current_Bonus_Amt_Total

              End-if
          End-While

          Let #Final_Bonus_Grade_Row_Count =  #Final_Bonus_Grade_Row_Count + 1
          Put $Allbonus_Emplid #AllBonus_Empl_Rcd
              #Allbonus_Year $Allbonus_Deptid $Allbonus_Empl_Type
              $Allbonus_Max_Dur_Dept $Allbonus_Jobcd
              #Annual_Rt $Allbonus_Gex_Pos_Nbr
              #Allbonus_Current_Min_Pct #Allbonus_Current_Tar_Pct
              #Allbonus_Current_Max_Pct
              #Allbonus_Gex_Bonus_Pct_Used #Sum_Distinct_Bonus_Grade_Amount
              #Allbonus_Gex_Bonus_Pct_Used_2 #Sum_Distinct_Bonus_Grade_Amount_2
              #Sum_Distinct_Bonus_Grade_Amount_Total $Allbonus_Dept_bon_Group
              $Allbonus_Reports_to #Allbonus_Std_hours
              $Allbonus_All_grade $Allbonus_Sal_Adm_pln
              Into Final_Employee_All_Bonus(#Final_Bonus_Grade_Row_Count)

      End-if

   End-While

   Let #Counter_Bonus_Grades_testing = 1
   #debug8 Show '*************************** Distinct Grade Bonus Row ***********************'
   While #Counter_Bonus_Grades_testing < #Final_Bonus_Grade_Row_Count

       Get $Test_Emplid #Test_Empl_Rcd
           #Test_Current_Year $Test_Deptid
           $Test_Empl_Type $Test_Max_Duration_Deptid
           $Test_Jobcd #Test_Ann_rt $Test_Gex_Position_Nbr
           #Test_Current_Min_Pct #Test_Current_Tar_Pct
           #Test_Current_Max_Pct
           #Test_Gex_Bonus_Pct_Used #Sum_Distinct_Bonus_Grade_Amount
           #Test_Gex_Bonus_Pct_Used_2 #Sum_Distinct_Bonus_Grade_Amount_2
           #Sum_Distinct_Bonus_Grade_Amount_Total
           $Test_Gex_Dept_bonus_Group $Test_Reports_to
           #Test_Std_hours $Test_All_grade $Test_All_Sal_Adm_Pln
           From Final_Employee_All_Bonus(#Counter_Bonus_Grades_testing)
       #debug8 Show $Test_Emplid ':' #Test_Empl_Rcd  ':' #Test_Current_Year ':'  $Test_Deptid  ':' $Test_Empl_Type  ':' $Test_Max_Duration_Deptid  ':' $Test_Jobcd  ':' #Test_Ann_rt ':' $Test_Gex_Position_Nbr ':'  #Test_Current_Min_Pct  ':'  #Test_Current_Tar_Pct ':'  #Test_Current_Max_Pct  ':'
       #debug8 Show #Test_Gex_Bonus_Pct_Used  ':' #Sum_Distinct_Bonus_Grade_Amount  ':' #Sum_Distinct_Bonus_Grade_Amount  ':' #Sum_Distinct_Bonus_Grade_Amount_Total  ':' #Sum_Distinct_Bonus_Grade_Amount_Total  ':' $Test_Gex_Dept_bonus_Group ':'  $Test_Reports_to  ':' #Test_Std_hours  ':' $Test_All_grade ':' $Test_All_Sal_Adm_Pln
       Let #Counter_Bonus_Grades_testing = #Counter_Bonus_Grades_testing + 1

   End-while
   #debug8 Show '***************************  Distinct Grade Bonus Row ***********************'
!***********************************************************************
End-Procedure Sum-Distinct-Bonus-Grades
!***********************************************************************

!***********************************************************************
Begin-Procedure P200-Main-Process2
!***********************************************************************
#debug9 Show  'P200-Main-Process2'
#debug8 Show 'ENtering Process2'

If $Run_Type ='4'
        Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' = ' || $GEXXX902_Deptid_Alias
End-If
Show $GEXXX902_INCLUDE_DEPTID_CRITERIA
Begin-Select
b.DEPTID     ()  On-Break  Level=1
                           Print=Never

b.EMPL_TYPE  ()  On-Break  Level=2
                           Print=Never
                           Before=P280-Empl-Type-Totals
PD3.NAME
pd4.name
j2.company
B.EMPLID
B.EMPL_RCD
B.GEX_MIN_BONUS_PCT
B.GEX_TAR_BONUS_PCT
B.GEX_MAX_BONUS_PCT
B.GEX_CSI_ADJ_PCT
B.GEX_BONUS_AMT
B.GEX_BONUS_AMT2  !ISDVMZA -- GEXHR_848_E161362_BONUS2014
B.GEX_BONUS_STATUS
B.JOBCODE
B.BUDGET_DEPTID
B.GEX_FNAL_BONUS_AMT
B.ANNUAL_RT
J2.ACCT_CD
J2.DEPTID
B.COMMENTS_BY_NAME
E2.HIRE_DT
J2.LAST_HIRE_DT
B.GEX_WEEKLY_RT
B.GEX_WEEKLY_RT_1_5
B.GEX_WEEKLY_RT_2
B.HOURLY_RT
B.GEX_BONUS_PCT_USED !ISDVMZA -- GEXHR_848_E161362_BONUS2014
B.GEX_BONUS_PCT2_USE !ISDVMZA -- GEXHR_848_E161362_BONUS2014

        Let $Acctcd             = &j2.acct_cd
        Let $job_deptid         = &j2.deptid
        Let $comments_by_name   = &b.comments_by_name


        Let $emplid             = &b.emplid
        Let #empl_rcd_nbr       = &b.empl_rcd
        !Let $Officer                   = &pd4.name
        Let $Company            = &j2.company
        Let $Deptid             = &b.deptid
        Let $Last_hire_Dt       = &J2.LAST_HIRE_DT
        Let $Empl_Type          = &b.empl_type
        Let $Hire_Dt            = &J2.LAST_HIRE_DT
        Let $name               = &pd3.name
        Let #current_min_pct    = &b.gex_min_bonus_pct
        Let #current_tar_pct    = &b.gex_tar_bonus_pct
        Let #current_max_pct    = &b.gex_max_bonus_pct
        Let #current_csi_adj_pct= &b.gex_csi_adj_pct
        Let #current_bonus_amt  = &b.gex_bonus_amt
        Let #current_bonus_amt_2 = &b.gex_bonus_amt2 !ISDVMZA -- GEXHR_848_E161362_BONUS2014
        Let $Budget_Deptid      = &B.BUDGET_DEPTID
        Let $Calculate_JobCode  = &B.JOBCODE
        Let #Annual_rt          = &B.ANNUAL_RT
        Let #Final_Bonus_Amount = &B.GEX_FNAL_BONUS_AMT
        Let #weekly_rt_1        = &B.GEX_WEEKLY_RT_1_5
        Let #weekly_rt_2        = &B.GEX_WEEKLY_RT_2
        Let #Bonus_Pct_Used     = &B.GEX_BONUS_PCT_USED
        Let #Bonus_Pct_Used_2   = &B.GEX_BONUS_PCT2_USE !ISDVMZA -- GEXHR_848_E161362_BONUS2014
        !1289792 - GEXHR_BONUS2017 Begins
        !Let #current_mid_one    = (#current_min_pct + #current_tar_pct) / 2
        !Let #current_mid_two    = (#current_tar_pct + #current_max_pct) / 2
        Let #current_mid_one     = (#current_tar_pct - #current_min_pct )
        Let #current_mid_two     = (#current_max_pct - #current_tar_pct )
        !1289792 - GEXHR_BONUS2017 Ends

        Let $Skip = 'Y'

        If $Run_Type = '3'
            Let $Skip = 'N'
        Else
            If $Run_Type = '4'
                If &b.gex_bonus_status = '3' or &b.gex_bonus_status = '2'
                    Let $Skip = 'N'
                End-If
            End-If
        End-If

       #debug8 Show 'emplid ' $emplid ' b.deptid ' &b.deptid ' job_deptid ' $job_deptid ' $Skip : '$Skip ' &b.gex_bonus_status :'&b.gex_bonus_status

        If $Skip = 'N'
            Let $OK-To-Advance-Page = 'Y'
            Let $Data-Found-Flag = 'Y'
            Let #Year = #Previous_Year
            Do Bonus-Table-Last-Year        !get last yr info

            !Let #hourly_rt            = 0
            Let #hourly_rt            = &B.HOURLY_RT
            !Let #weekly_rt            = &bx.annual_rt / 52
            Let #weekly_rt            = &B.GEX_WEEKLY_RT
            Let #previous_min_pct     = &bx.gex_min_bonus_pct
            Let #previous_tar_pct     = &bx.gex_tar_bonus_pct
            Let #previous_max_pct     = &bx.gex_max_bonus_pct
            Let #previous_csi_adj_pct = &bx.gex_csi_adj_pct
            Let #previous_bonus_amt   = &bx.gex_bonus_amt
            Let #previous_bonus_amt_2 = &bx.gex_bonus_amt2
            Let #previous_bonus_amt_total = &bx.gex_fnal_bonus_amt

            Let #previous_mid_one     = (#previous_min_pct + #previous_tar_pct) / 2
            Let #previous_mid_two     = (#previous_tar_pct + #previous_max_pct) / 2

            Evaluate $Run_Type
                When = '3'
                    Let $Update_Status = '3'
                When = '4'
                    Let $Update_Status = '4'
            End-Evaluate

            Evaluate $Bonus_Pct_to_Use
                When = '1'
                    Let #ee_pct = #current_min_pct
                When = '2'
                    !1289792 - GEXHR_BONUS2017 Begins
                    !Let #ee_pct = #current_mid_one
                    Let #ee_pct = #current_min_pct + (#current_mid_one * #profit_pct)  
                    Show '#current_mid_one :' #current_mid_one
                    !1289792 - GEXHR_BONUS2017 Ends
                When = '3'
                    Let #ee_pct = #current_tar_pct
                When = '4'
                    !1289792 - GEXHR_BONUS2017 Begins
                    !Let #ee_pct = #current_mid_two
                    Let #ee_pct = #current_tar_pct + (#current_mid_two * #profit_pct)  
                    !1289792 - GEXHR_BONUS2017 Ends
                When = '5'
                    Let #ee_pct = #current_max_pct
                    !1289792 - GEXHR_BONUS2017 Begins
                 When = '6'
                    !Let #ee_pct = #current_min_pct + (#current_mid_three * #profit_pct) 
                    Let #ee_pct = #current_max_pct + (#current_mid_three * #profit_pct)
                    !1289792 - GEXHR_BONUS2017 Ends  
            End-Evaluate

            Evaluate $Bonus_Pct_to_Use_2
                When = '1'
                    Let #ee_pct_2 = #current_min_pct
                When = '2'
                    !1289792 - GEXHR_BONUS2017 Begins
                    !Let #ee_pct_2 = #current_mid_one
                    Let #ee_pct_2 = #current_min_pct + (#current_mid_one * #STS_pct)
                    !1289792 - GEXHR_BONUS2017 Ends
                When = '3'
                    Let #ee_pct_2 = #current_tar_pct
                When = '4'
                    !1289792 - GEXHR_BONUS2017 Begins
                    !Let #ee_pct_2 = #current_mid_two
                    Let #ee_pct_2 = #current_tar_pct + (#current_mid_two * #STS_pct)  
                    !1289792 - GEXHR_BONUS2017 Ends
                When = '5'
                    Let #ee_pct_2 = #current_max_pct
                    !1289792 - GEXHR_BONUS2017 Begins
                 When = '6'
                    !Let #ee_pct_2 = #current_min_pct + (#current_mid_three * #STS_pct)  
                    Let #ee_pct_2 = #current_max_pct + (#current_mid_three * #STS_pct)
                    !1289792 - GEXHR_BONUS2017 Ends
            End-Evaluate

            Let #ee_csi = #current_csi_adj_pct

            #debug8 Show 'emplid ' $emplid ' b.deptid ' &b.deptid ' job_deptid ' $job_deptid

            If $Run_Type = '4'
                If #Final_Bonus_Amount > 0
                    Do Check-Existing-510
                    If $Exists_510 ='N'
                        Do P240-Insert-Addl-Pay-Erncd
                    End-If

                    Do Check-Existing-510-Effdt
                    If $Exists_510_Effdt ='N'
                        Do P250-Insert-Addl-Pay-Effdt
                    End-If

                    Do Check-Existing-510-Data

                    If $Exists_510_Data ='N'
                        If &B.BUDGET_DEPTID = $job_deptid
                            Let $deptid_ins = ' '
                        Else
                            Let $deptid_ins = &b.BUDGET_DEPTID
                        End-If
                        Let #addl_seq = 1
                        Do P260-Insert-Addl-Pay-Data
                    Else
                        If &b.BUDGET_DEPTID = $job_deptid
                            Let $deptid_ins = ' '
                        Else
                            Let $deptid_ins = &b.BUDGET_DEPTID
                        End-if
                        Let #addl_seq = &z.addl_seq + 1
                        Do P260-Insert-Addl-Pay-Data
                    End-If
                End-if
            End-if

            Add 1                   To #type-count
            Add 1                   To #deptid-count

            Add #previous_bonus_amt   To #type_previous_bonus
            Add #previous_bonus_amt_2 To #type_previous_bonus_2
            Add #previous_bonus_amt_total To #type_previous_bonus_total
            Add #Final_Bonus_Amount   To #type_current_bonus_total

            Add #previous_bonus_amt   To #deptid_previous_bonus
            Add #previous_bonus_amt_2 To #deptid_previous_bonus_2
            Add #previous_bonus_amt_total To #deptid_previous_bonus_total
            Add #Final_Bonus_Amount   To #deptid_current_bonus_total

            Add #previous_bonus_amt   To #report_previous_bonus
            Add #previous_bonus_amt_2 To #report_previous_bonus_2
            Add #previous_bonus_amt_total To #report_previous_bonus_total
            Add #Final_Bonus_Amount   To #report_current_bonus_total

            Do P290-Print-Record
            Do write-file
            Do P230-Update-Bonus-Table
        End-If

From   ps_gex_empl_bonus   b,
       ps_personal_data    pd4,
       ps_personal_data    pd3,
       ps_employment       e2,
       ps_job              j2

Where  pd3.emplid           = b.emplid
And    e2.emplid            = b.emplid
And    e2.empl_rcd         = b.empl_rcd
and    pd4.emplid = pd3.emplid
And    b.gex_bonus_year = #current_year
and    b.emplid             = j2.emplid
and    b.empl_rcd          = j2.empl_rcd
And j2.effdt  = (Select Max(effdt) from ps_job
                  Where j2.emplid    = emplid
                   And  j2.empl_rcd = empl_rcd
                   And  effdt     <= $AsOfdate)
  And j2.effseq = (Select Max(effseq) From ps_job
                  Where j2.emplid    = emplid
                  And   j2.empl_rcd = empl_rcd
                  And   j2.effdt     = effdt)
And  B.DEPTID IN (SELECT DISTINCT JOB.DEPTID FROM PS_DEPT_TBL JOB  WHERE [$GEXXX902_INCLUDE_DEPTID_CRITERIA])
and b.gex_bonus_ind = 'A'

Order By  b.deptid,b.empl_type, pd3.name
End-Select
End-Procedure


!***********************************************************************
Begin-Procedure P220-Bonus-Table-Select
!***********************************************************************
#debug9 Show  'P220-Bonus-Table-Select'
!Show  'P220-Bonus-Table-Select'
Begin-Select
annual_rt
gex_min_bonus_pct
gex_tar_bonus_pct
gex_max_bonus_pct
gex_csi_adj_pct
gex_bonus_status
gex_bonus_amt
gex_bonus_amt2
deptid
comments_by_name

  If #Year = #Current_Year
    Let $current_found = 'Y'
  End-If
  Let $comments_by_name=&comments_by_name


From   ps_gex_empl_bonus
Where  emplid         = $emplid
And    empl_rcd      = #empl_rcd_nbr
And    gex_bonus_year = #Year
And    deptid         = &j.deptid


End-Select
End-Procedure


!***********************************************************************
Begin-Procedure Get-Pcts
!***********************************************************************
#debug9 Show  'Get-Pcts'

    Let $Pct-Found='N'
    Let #current_min_pct  = 0
    Let #current_tar_pct  = 0
    Let #current_max_pct  = 0
    
Begin-Select
GD.gex_min_bonus_pct
GD.gex_tar_bonus_pct
GD.gex_max_bonus_pct

       Let #current_min_pct  = &GD.gex_min_bonus_pct
       Let #current_tar_pct  = &GD.gex_tar_bonus_pct
       Let #current_max_pct  = &GD.gex_max_bonus_pct
       
    Let $Pct-Found='Y'

From   PS_GEX_SALGD_BONUS GD
Where  GD.SETID          = 'COMMN'
And    GD.SAL_ADMIN_PLAN = $Calculate_Sal_Admin_Plan
And    GD.GRADE          = $Calculate_Grade
AND    GD.EFFDT          = (SELECT Max(GD1.EFFDT)
                              from PS_GEX_SALGD_BONUS GD1
                             WHERE GD1.SETID=GD.SETID
                               AND GD1.SAL_ADMIN_PLAN = GD.SAL_ADMIN_PLAN
                               AND GD1.GRADE=GD.GRADE)

End-Select
End-Procedure

!***********************************************************************
Begin-Procedure Bonus-Table-Last-Year
!***********************************************************************
#debug9 Show  'Bonus-Table-Last-Year'

Begin-Select

bx.annual_rt
bx.gex_min_bonus_pct
bx.gex_tar_bonus_pct
bx.gex_max_bonus_pct
bx.gex_csi_adj_pct
bx.gex_bonus_status
bx.gex_bonus_amt
bx.gex_bonus_amt2
bx.gex_fnal_bonus_amt
bx.deptid

From   ps_gex_empl_bonus bx

Where  bx.emplid         = $emplid
And    bx.empl_rcd       = #empl_rcd_nbr
And    bx.gex_bonus_year = #Year
And    bx.deptid         = &b.deptid

End-Select
End-Procedure


!***********************************************************************
Begin-Procedure P240-Update-GEX-Empl-Bonus
!***********************************************************************
#debug9 Show  'P240-Update-GEX-Empl-Bonus'

Begin-SQL
 Update ps_gex_empl_bonus
    Set gex_min_bonus_pct = #current_min_pct
       ,gex_tar_bonus_pct = #current_tar_pct
       ,gex_max_bonus_pct = #current_max_pct
  Where emplid            = $emplid
       And empl_rcd       = #empl_rcd_nbr
       And gex_bonus_year = #Current_Year
       and deptid         = &j.deptid
End-SQL

End-Procedure
!***********************************************************************


!***********************************************************************
Begin-Procedure P250-Update-GEX-Empl-Bonus
!***********************************************************************
#debug9 Show  'P250-Update-GEX-Empl-Bonus'
!Show   '&b.deptid' &b.deptid

Begin-SQL
 Update ps_gex_empl_bonus
     Set gex_bonus_amt    = #current_bonus_amt
        ,gex_bonus_amt2   = #current_bonus_amt_2
     Where emplid         = $emplid
       And empl_rcd       = #empl_rcd_nbr
       And gex_bonus_year = #Current_Year
       and deptid         = &j.deptid
End-SQL
End-Procedure


!***********************************************************************
Begin-Procedure P230-Update-Bonus-Table
!***********************************************************************
#debug9 Show  'P230-Update-Bonus-Table'
#debug8 Show 'Emplid : '$emplid '  Bonus Year : '#current_Year ' Status : '$Update_Status ' Gex Bonus INd : A'
Begin-SQL
Update ps_gex_empl_bonus FINUPD
Set FINUPD.gex_bonus_status = $Update_Status

WHERE FINUPD.EMPLID             = $emplid
AND FINUPD.EMPL_RCD             = #empl_rcd_nbr
AND FINUPD.GEX_BONUS_YEAR       = #Current_Year
AND FINUPD.DEPTID               = &B.DEPTID
AND FINUPD.EMPL_TYPE            = &B.EMPL_TYPE
AND FINUPD.BUDGET_DEPTID        = &B.BUDGET_DEPTID
AND FINUPD.JOBCODE              = &B.JOBCODE
and FINUPD.gex_bonus_ind        = 'A'

End-SQL
End-Procedure


!***********************************************************************
Begin-Procedure Check-Existing-510
!***********************************************************************
#debug9 Show  'Check-Existing-510'
    Let $exists_510 = 'N'

Begin-Select
'X'
    Let $exists_510 = 'Y'

From   ps_addl_pay_erncd
Where  emplid    = &b.emplid
And    empl_rcd  = &b.empl_rcd
And    erncd     = '510'

End-Select
End-Procedure

!***********************************************************************
Begin-Procedure Check-Existing-510-Effdt
!***********************************************************************
#debug9 Show  'Check-Existing-510-Effdt'
    Let $exists_510_Effdt = 'N'
Begin-Select
'Y'
    Let $exists_510_Effdt = 'Y'

From   ps_addl_pay_effdt
Where  emplid    = &b.emplid
And    empl_rcd  = &b.empl_rcd
And    erncd     = '510'
And    effdt     = $Bonus_Award_Dt

End-Select
End-Procedure

!***********************************************************************
Begin-Procedure Check-Existing-510-Data
!***********************************************************************
#debug9 Show  'Check-Existing-510-Data'
    Let $exists_510_Data = 'N'
Begin-Select
!'Z'
Z.addl_seq

    Let $exists_510_Data = 'Y'

From   ps_addl_pay_data z
Where  z.emplid    = &b.emplid
And    z.empl_rcd  = &b.empl_rcd
And    z.erncd     = '510'
And    z.effdt     = $Bonus_Award_Dt
!and    addl_seq   = 1

End-Select
End-Procedure


!***********************************************************************
Begin-Procedure P240-Insert-Addl-Pay-Erncd
!***********************************************************************
#debug9 Show  'P240-Insert-Addl-Pay-Erncd'
Begin-SQL  On-Error=P299-Error('P240-Insert-Addl-Pay-Erncd')
  Insert Into ps_addl_pay_erncd
    Values (&b.emplid, &b.empl_rcd, '510', 'B')
End-SQL
End-Procedure

!***********************************************************************
Begin-Procedure P250-Insert-Addl-Pay-Effdt
!***********************************************************************
#debug9 Show  'P250-Insert-Addl-Pay-Effdt'
Begin-SQL  On-Error=P299-Error('P250-Insert-Addl-Pay-Effdt')
  Insert Into ps_addl_pay_effdt
    Values (&b.emplid, &b.empl_rcd, '510', $Bonus_Award_Dt, 'B')
End-SQL
End-Procedure

!***********************************************************************
Begin-Procedure P260-Insert-Addl-Pay-Data
!***********************************************************************
#debug9 Show  'P260-Insert-Addl-Pay-Data'

Begin-SQL  On-Error=P299-Error('P260-Insert-Addl-Pay-Data')
!***********************************************************************
  Insert Into ps_addl_pay_data
    Values
        (&b.emplid,
        &b.empl_rcd,
        '510',
        $Bonus_Award_Dt,
        #addl_seq,
        $deptid_ins,
        ' ',
        ' ',
        ' ',
        ' ',
        'J',
        0,
        0,
        #Final_Bonus_Amount,
        'N',
        0,
        $Bonus_Award_Dt_Plus1,
        #Final_Bonus_Amount,
        0,
        'Y',
        'Y',
        'N',
        'N',
        'Y',
        'Y',
        'Y',
        'Y',
        'Y',
        ' ',
        ' ',
        1,
        'S',
        'A',
        'S',
        'BON',
        'R',
        ' ',
        ' ',
        'STDBU',
        ' ',
        'B')

End-SQL
End-Procedure

!***********************************************************************
Begin-Procedure P270-Insert-GEX-Empl-Bonus
!***********************************************************************
#debug9 Show  'P270-Insert-GEX-Empl-Bonus'
!Vendaxg Added for Bonus Processing 2011 on 05/31/2011 - Begin
If $Reports_to = ''
        Let $Reports_to = '00019333'
End-if
!Vendaxg Added for Bonus Processing 2011 on 05/31/2011 - End
Begin-SQL  On-Error=P299-Error('P270-Insert-GEX-Empl-Bonus')
 Insert Into PS_GEX_EMPL_BONUS
             (EMPLID,EMPL_RCD
             ,GEX_BONUS_YEAR
             ,DEPTID
             ,EMPL_TYPE
             ,NAME
             ,ANNUAL_RT
             ,GEX_MIN_BONUS_PCT
             ,GEX_TAR_BONUS_PCT
             ,GEX_MAX_BONUS_PCT
             ,GEX_EMPL_OVERRIDE
             ,GEX_CSI_ADJ_PCT
             ,GEX_BONUS_STATUS
             ,GEX_BONUS_AMT
             ,GEX_BONUS_AMT2
             ,GEX_BONUS_AWARD_DT
             ,GEX_BONUS_IND
             ,COMMENTS_BY_NAME
             ,COMPLETE_FLAG)
      Values (&j.emplid
             ,&j.empl_rcd
             ,#Current_Year
             ,$deptid
             ,$empl_type
             ,$name
             ,0
             ,#current_min_pct
             ,#current_tar_pct
             ,#current_max_pct
             ,'N'
             ,0
             ,'2'
             ,0
             ,0
             ,null
             ,'A'
             ,' '
             ,' ')
End-SQL
End-Procedure

!***********************************************************************
Begin-Procedure New-Page
!***********************************************************************
#debug9 Show  'New-Page'
  If $OK-To-Advance-Page = 'Y'
    Let $OK-To-Advance-Page = 'N'
    New-Page
  End-If
End-Procedure

!***********************************************************************
Begin-Procedure P280-Empl-Type-Totals
!***********************************************************************
#debug9 Show  'P280-Empl-Type-Totals'
Show  'P280-Empl-Type-Totals'
  If #type-count > 0
    Evaluate $empl_type
      When = 'H'
        Print 'Hourly Employee Totals'         (+2,{#column4})
        Print ' '                              (,{#column10})
!        Print #type_current_bonus_total        (,+6)  Edit 999,999,999,990.00  Bold
        Print #type_current_bonus_total        (,+6)  Edit 999,999,999,990.00  Bold
      When = 'S'
        Print 'Salaried Employee Totals'       (+2,{#column4})
        Print ' '                              (,{#column9})
        Print #type_current_bonus              (,+5)           Edit 9999,999,990.00  Bold
        Print ' '                              (,{#column11})
        Print #type_current_bonus_2            (,+4)           Edit 9999,999,990.00  Bold

        if #type_current_bonus_total > 99999999
           Print #type_current_bonus_total        (,+1)           Edit 9999,999,990.00  Bold
        else
           Print #type_current_bonus_total        (,+1)           Edit 99,999,990.00  Bold
        end-if

    End-Evaluate

  End-If
  Do Get-Officer-Name
  new-page
  Let #type-count            = 0
  Let #type_previous_bonus   = 0
  Let #type_current_bonus    = 0
  Let #type_current_bonus_2  = 0
  Let #type_current_bonus_total = 0
End-Procedure


!***********************************************************************
Begin-Procedure Get-Officer-Name
!***********************************************************************
Begin-Select
NMA.NAME

    Let $Officer = Ltrim(Rtrim(&NMA.NAME,' '),' ')

FROM PS_GEX_MGMT_REPORT MG, PS_PERSONAL_DATA NMA
WHERE  NMA.EMPLID = MG.GEX_EVP
AND MG.DEPTID =$Deptid
End-Select
!***********************************************************************
End-Procedure Get-Officer-Name
!***********************************************************************


!***********************************************************************
Begin-Procedure P285-Deptid-Totals
!***********************************************************************
#debug9 Show 'P285-Deptid-Totals'
Show 'Print P285-Deptid-Totalss '
  If #deptid-count > 0
    Evaluate $empl_type
      When = 'H'
        Print 'Department ID Totals'           (+2,{#column4})
!        Print #deptid_current_bonus            (,{#column10})   Edit 999,999,999,990.00  Bold
        Print #deptid_current_bonus_total      (,{#column10})   Edit 999,999,999,990.00  Bold
      When = 'S'
        Print 'Salaried Employee Totals'       (+2,{#column4})
        Print #deptid_current_bonus            (,{#column10})   Edit 9999,999,990.00  Bold
        Print #deptid_current_bonus_2          (,{#column12})   Edit 9999,999,990.00  Bold
        Print #deptid_current_bonus_total      (,{#column13})   Edit 9999,999,990.00  Bold
    End-Evaluate
  End-If

  !new-page

  Let #deptid-count           = 0
  Let #deptid_previous_bonus  = 0
  Let #deptid_current_bonus   = 0
  Let #deptid_current_bonus_2 = 0
  Let #deptid_current_bonus_total = 0
End-Procedure

!***********************************************************************
Begin-Procedure P290-Print-Record
!***********************************************************************
#debug9 Show 'P290-Print-Record'

  Do Get-Acct-cd-descr

  Print $name                   (+2,{#column1},21)
  Print $emplid                 (,{#column2})
  Print $AcctNameAbbrv          (,{#column3})

  Do Format-DateTime($Hire_Dt, $Hire_Date, {DEFMDY}, '', '')
  Print $Hire_Date              (,{#column4})

  If $Empl_Type = 'S'
     Print #annual_rt            (,{#column5})   Edit 999,990.99
     Print #Bonus_Pct_Used       (,{#column8}
     Print #Bonus_Pct_Used_2     (,{#column11}
  Else
     Print #hourly_rt            (,{#column5})   Edit 99,990.99
     Print #weekly_rt            (,{#column6})   Edit 999,990.99

     Print #weekly_rt_1          (,{#column8})   Edit 999,990.99
     Print #weekly_rt_2          (,{#column10})  Edit 999,990.99
     !Print #Bonus_Pct_USed (,{#column8}
  End-If

  If $Empl_Type = 'S'
     Move #previous_min_pct To $temp 0.000
     Let $previous_min_pct = Substr($temp,2,4)

     Move #previous_tar_pct To $temp 0.000
     Let $previous_tar_pct = Substr($temp,2,4)


     Move #previous_max_pct To $temp 0.000
     If #previous_max_pct >= 1
        Let $previous_max_pct = Substr($temp,1,4)
     Else
        Let $previous_max_pct = Substr($temp,2,4)
     End-If


     Move #previous_csi_adj_pct To $temp 00.000

     If #previous_csi_adj_pct = 1
        Let $previous_csi_adj_pct = ' 1.00'
     Else
        If #previous_csi_adj_pct = -1
           Let $previous_csi_adj_pct = '-1.00'
        Else
           If Substr($temp,1,1) = '-'
              Let $previous_csi_adj_pct = '-' || Substr($temp,3,4)
           Else
              Let $previous_csi_adj_pct = ' ' || Substr($temp,3,4)
           End-If
        End-If
     End-If

     Move #current_min_pct To $temp 0.000
     Let $current_min_pct = Substr($temp,2,4)

     Print $current_min_pct      (,{#column6})

     Print '/'                   (,)

     Move #current_tar_pct To $temp 0.000
     Let $current_tar_pct = Substr($temp,2,4)
     Print $current_tar_pct      (,)

     Print '/'                   (,)

     Move #current_max_pct To $temp 0.000
     If #current_max_pct >= 1
        Let $current_max_pct = Substr($temp,1,4)
     Else
        Let $current_max_pct = Substr($temp,2,4)
     End-If
     Print $current_max_pct      (,)

     Move #current_csi_adj_pct To $temp 00.000

     If #current_csi_adj_pct = 1
        Let $current_csi_adj_pct = ' 1.00'
     Else
        If #current_csi_adj_pct = -1
           Let $current_csi_adj_pct = '-1.00'
        Else
           If Substr($temp,1,1) = '-'
              Let $current_csi_adj_pct = '-' || Substr($temp,3,4)
           Else
              Let $current_csi_adj_pct = ' ' || Substr($temp,3,4)
           End-If
        End-If
     End-If

     Print #current_bonus_amt       (,{#column10})   Edit  9,999,990.00
     Print #current_bonus_amt_2     (,{#column12})   Edit   9999,990.00
     Print #Final_Bonus_Amount      (,{#column13})   Edit 99,999,990.00  Bold
     Print $comments_by_name        (,{#column14})

  Else

     Print #Final_Bonus_Amount      (,{#column11})  Edit 9,999,990.00  Bold
     Print $comments_by_name        (,{#column14})

  End-If

End-Procedure

!***********************************************************************
Begin-Procedure P299-Error($msg)
!***********************************************************************
#debug9 Show 'P299-Error'
  If Substr($_sql-error,1,9) <> 'ORA-00001'
     or #sql-status <> 0
      Show 'SQL Error in ' $msg
      Show 'SQL Error: '  $sql-error
      Stop
  End-If
End-Procedure

!***********************************************************************
Begin-Procedure P300-Finalization
!***********************************************************************
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (25,) Center
  Else
    New-Page
    Print 'Report Totals'             (+1,{#column6})
    Print #report_current_bonus       (,{#column8})   Edit 9,999,999,990.00  Bold
    Print #report_current_bonus_2     (,{#column12})  Edit 9,999,999,990.00  Bold
    Print #report_current_bonus_total (,{#column13})  Edit 9,999,999,990.00  Bold
  End-If



  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  #debug8 Show 'Report Ended at ' &timeEnded ' on ' &dateEnded
  #debug8 Show 'Successful end of report'
End-Procedure

!***********************************************************************
Begin-Procedure Get-Leave-Duration
!***********************************************************************
#debug9 Show  '***  Get-Leave-Duration   *** '

    Let #Row_Count_Empl_Status =1
    Let #Curr_Empl_Status = 1
    Let $Pre_Empl_Status = ''
    Let #Total_Leave_H = 0
    Let #Total_Leave_S = 0
    Let $Empl_Type_lv = ''
    Clear-array  Name=Leave_Duration
    Clear-array  Name=Deptid

Begin-Select
ALD.Jobcode
ALD.Effdt
ALD.Deptid
ALD.EMPL_STATUS
ALD.EMPL_TYPE ! GEXPY_848_E95094_02 2012-06-06 1221434


        Let $All_Jobcode = Ltrim(Rtrim(&ALD.Jobcode,' '),' ')
        Let $All_Deptid = Ltrim(Rtrim(&ALD.Deptid,' '),' ')
        Let $All_Effdt_Empl_Status= &ALD.Effdt
        Let $All_Empl_Status = &ALD.EMPL_STATUS
        Let $End_Date_Empl_Status = $Thru_Date
        Let $Start_Date_Empl_Status = $From_Date
        Let $All_Empl_type_new = &ALD.EMPL_TYPE ! added by sitansh bonus 2012
        If $Pre_Empl_Status = ''

           Let #Duration_Empl_Status = datediff($End_Date_Empl_Status,$All_Effdt_Empl_Status,'DAY')
           #debug8 Show 'First Duration Empl Status: '#Duration_Empl_Status ' Empl Status : '$All_Empl_Status
           !Put $All_Empl_Status #Duration_Empl_Status Into Leave_Duration(#Curr_Empl_Status) !Commented by Sitansh for bonus 2012
           Put $All_Empl_Status #Duration_Empl_Status $All_Empl_type_new Into Leave_Duration(#Curr_Empl_Status) ! GEXPY_848_E95094_02 2012-06-06 1221434
           Put $All_Deptid #Duration_Empl_Status Into Deptid(#Curr_Empl_Status)
           Let $Old_Effdt_Empl_Status = $All_Effdt_Empl_Status
           Let $Pre_Empl_Status = $All_Empl_Status
           Let #Curr_Empl_Status = #Curr_Empl_Status + 1
        Else

           Let #Duration_Empl_Status = datediff($Old_Effdt_Empl_Status,$All_Effdt_Empl_Status,'DAY')
           !Put $All_Empl_Status #Duration_Empl_Status Into Leave_Duration(#Curr_Empl_Status) !Commented by Sitansh for bonus 2012
           Put $All_Empl_Status #Duration_Empl_Status $All_Empl_type_new Into Leave_Duration(#Curr_Empl_Status) ! GEXPY_848_E95094_02 2012-06-06 1221434
           Put $All_Deptid #Duration_Empl_Status Into Deptid(#Curr_Empl_Status)
           Let $Old_Effdt_Empl_Status = $All_Effdt_Empl_Status
           Let $Pre_Empl_Status = $All_Empl_Status
           Let #Curr_Empl_Status = #Curr_Empl_Status + 1
           #debug8 Show 'Duration Empl Status : '#Duration_Empl_Sttaus ' Deptid : '$All_Empl_Status

        End-If
        Let #Row_Count_Empl_Status = #Row_Count_Empl_Status + 1

From PS_JOB ALD
Where ALD.emplid = $Emplid
And ALD.empl_rcd = #Empl_rcd_nbr
And ALD.effdt between $From_Date and $Thru_Date
order by ALD.EFFDT desc
End-Select

    If #Row_Count_Empl_Status =1

        Do Get-Prev-Empl-Status
        Let #Duration_Empl_Status = #DurfromRctl
        !Put $Prevd_Empl_Status #Duration_Empl_Status Into Leave_Duration(#Curr_Empl_Status) ! commented by sitansh for bonus 2012
        Put $Prevd_Empl_Status #Duration_Empl_Status $Prevd_Empl_Type Into Leave_Duration(#Curr_Empl_Status) ! Added by sitansh  for bonus 2012
        Put $Prevd_Deptid #Duration_Empl_Status Into Deptid(#Curr_Empl_Status)
        Let #Row_Count_Empl_Status = #Row_Count_Empl_Status + 1


    Else
        Do Get-Prev-Empl-Status
        Let #Duration_Empl_Status = datediff($All_Effdt_Empl_Status,$Start_Date_Empl_Status,'DAY')
        If $Prevd_Empl_Status <> ''

                !Put $Prevd_Empl_Status #Duration_Empl_Status Into Leave_Duration(#Curr_Empl_Status) ! commented by sitansh for bonus 2012
                Put $Prevd_Empl_Status #Duration_Empl_Status $Prevd_Empl_Type Into Leave_Duration(#Curr_Empl_Status) ! GEXPY_848_E95094_02 2012-06-06 1221434
                Put $Prevd_Deptid #Duration_Empl_Status Into Deptid(#Curr_Empl_Status)
                Let #Row_Count_Empl_Status = #Row_Count_Empl_Status + 1


        End-If


    End-If

    Let #i = 1
    Let #Total_Leave_Duration = 0
    #debug8 Show '******************* Calculate Leave Duration -- Begin  ***********************'
    While #i <= #Curr_Empl_Status

        !Get $Empl_Status #Duration From Leave_Duration(#i) ! commented by sitansh for bonus 2012
        Get $Empl_Status #Duration $Empl_Type_lv From Leave_Duration(#i) ! GEXPY_848_E95094_02 2012-06-06 1221434
        #debug8 Show 'Emplid Status :  ' $Empl_Status ' Duration :'#Duration
        If ($Empl_Status = 'L') or
                ($Empl_Status = 'P')
                Let #Total_Leave_Duration = #Total_Leave_Duration + #Duration
                ! GEXPY_848_E95094_02 2012-06-06 1221434 begin
                if $Empl_Type_lv = 'S' ! Added by sitansh
                        Let #Total_Leave_S = #Total_Leave_S + #Duration
                else
                        if $Empl_Type_lv = 'H'
                                Let #Total_Leave_H = #Total_Leave_H + #Duration
                        End-if
                End-if
                ! GEXPY_848_E95094_02 2012-06-06 1221434 end
        End-if

        Let #i = #i + 1

    End-While
#debug8 Show 'Total Leave Duration for Emplid : '$Emplid   ' '#Total_Leave_Duration
#debug8 Show 'Total Leave Salary for Emplid : '$Emplid   ' '#Total_Leave_S
#debug8 Show 'Total Leave Hourly Duration for Emplid : '$Emplid   ' '#Total_Leave_H
#debug8 Show '******************* Calculate Leave Duration -- End  ***********************'


#debug8 Show '******************* Calculate Maximum Duration Deptid ***********************'
Let #ij = 1
While #ij <= #Curr_Empl_Status

        Get $Get_Deptid #Duration From Deptid(#ij)
        #debug8 Show 'Department :  ' $Get_Deptid ' Duration :'#Duration

        Let #ij = #ij + 1

End-While
Do Get-Max-Duration-Deptid
#debug8 Show 'Maximum Duration Deptid : '$Max_Duration_Deptid
#debug8 Show '******************* Calculate Maximum Duration Deptid ***********************'
!***********************************************************************
End-Procedure Get-Leave-Duration
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Prev-Empl-Status
!***********************************************************************
#debug9 Show 'entering procedure Get-Prev-Deptid'

Let $Prevd_Empl_Status = ''
Let $Prevd_Grade = ''
Let $Prevd_Sal_Admin_Plan = ''
Let $Prevd_Empl_Type = ''
Let $Prevd_Deptid = ''
Let $Prevd_Jobcode = ''
Let $Promotion_Found = 'N' !GEXPY_848_E95094_02 2012-06-06 VENDAXG
Begin-Select
PREVD.DEPTID
PREVD.ANNUAL_RT
PREVD.HOURLY_RT
PREVD.STD_HOURS
PREVD.EMPL_STATUS
PREVD.GRADE
PREVD.SAL_ADMIN_PLAN
PREVD.EMPL_TYPE
PREVD.JOBCODE
PREVD.POSITION_NBR !VENDAXG Added for Bonus Processing 2011 on 05/31/2011



        Let $Prevd_Empl_Status = Ltrim(Rtrim(&PREVD.EMPL_STATUS,' '),' ')
        Let $Prevd_Grade = Ltrim(Rtrim(&PREVD.GRADE,' '),' ')
        Let $Prevd_Sal_Admin_Plan = Ltrim(Rtrim(&PREVD.SAL_ADMIN_PLAN,' '),' ')
        Let $Prevd_Empl_Type = Ltrim(Rtrim(&PREVD.EMPL_TYPE,' '),' ')
        Let $Prevd_Deptid = Ltrim(Rtrim(&PREVD.DEPTID,' '),' ')
        Let $Prevd_Jobcode = Ltrim(Rtrim(&PREVD.JOBCODE,' '),' ')
        Let $Prevd_Position_Nbr = Ltrim(Rtrim(&PREVD.POSITION_NBR,' '),' ')
        Let #Prevd_Annual_Rt = &PREVD.ANNUAL_RT !GEXPY_848_E95094_02 2012-06-06 VENDAXG
        #debug9 Show  'Prevd_Empl_Status :'$Prevd_Empl_Status ' Prevd_Position_Nbr :' $Prevd_Position_Nbr

FROM PS_JOB PREVD
Where PREVD.emplid = $emplid
And PREVD.empl_rcd = #empl_rcd_nbr
AND PREVD.EFFDT = (Select Max(PREVD1.effdt)
                       From   ps_job  PREVD1
                       Where   PREVD.emplid       = PREVD1.emplid
       And     PREVD.empl_rcd    =  PREVD1.empl_rcd
       And     PREVD1.effdt       <= $From_Date )
AND  PREVD.EFFSEQ =   (Select Max(PREVD2.EFFSEQ)
                     From   ps_job  PREVD2
       Where   PREVD.emplid       = PREVD2.emplid
       And     PREVD.empl_rcd    =  PREVD2.empl_rcd
       And     PREVD.effdt       = PREVD2.effdt )
AND PREVD.EMPL_STATUS <> 'T'

ORDER BY PREVD.EFFDT DESC


End-Select

!***********************************************************************
End-Procedure Get-Prev-Empl-Status
!***********************************************************************


!***********************************************************************
Begin-Procedure GEXPY214-Select-Parameters
!***********************************************************************
#debug9 Show  '***  GEXPY214-Select-Parameters   *** '

Begin-Select
rc.gex_rc_cmp_comp
rc.GEX_RC_SFC1_MCP
rc.gex_rc_sfc2_tsr
rc.gex_Rc_rpm1_tss
rc.gex_rc_rpm2_ci
rc.gex_rc_rpm3_css
rc.gex_term_cutoff_dt

From ps_gex_rc_gexpy214 rc
Where rc.OPRID = $prcs_oprid
And rc.RUN_CNTL_ID = $prcs_run_cntl_id

End-Select
!***********************************************************************
End-Procedure GEXPY214-Select-Parameters
!***********************************************************************

Begin-Procedure get-values

End-Procedure get-values

!GEXPY_848_E95094_02 2012-06-06 VENDAXG Mod#8 - Begin
!***********************************************************************
Begin-Procedure Find-Salary-AsofRuncontrol
!***********************************************************************
#debug9 Show  '***  Find-Salary-AsofRuncontrol   *** '

Let $Promotion_Found  = 'N'
Let #annual_rt = 0
Let #hourly_rt = 0
Let #weekly_rt = 0
Let #weekly_rt_1_5 = 0
Let #weekly_rt_2 = 0

Begin-Select
PROM.EMPLID
PROM.EMPL_RCD
PROM.EFFDT
PROM.EFFSEQ
PROM.ANNUAL_RT
PROM.HOURLY_RT
PROM.STD_HOURS
PROM.EMPL_TYPE

        Let $Prom_Empl_Type     = &PROM.EMPL_TYPE
        !Let #Annual_Rt_Asof_runcontrol = &PROM.ANNUAL_RT
        !Let #Prom_Hourly_rt = &PROM.HOURLY_RT
        !Let #Prom_Std_Hours = &PROM.STD_HOURS

        Let #annual_rt = &PROM.ANNUAL_RT
        Let #hourly_rt = &PROM.HOURLY_RT
        Let #weekly_rt = #hourly_rt * &PROM.STD_HOURS
        !Let #Prom_Std_Hours = &PROM.STD_HOURS
        !GEXHR_848_PRJ95045_BONUS2013_2 07/31/2013 ISDVNPK
        !Let #weekly_rt_1_5 = #weekly_rt * 1.5
        Let #weekly_rt_1_5 = #weekly_rt * #BONUS_PAYWEEK2
        !Let #weekly_rt_2 = #weekly_rt * 2
        Let #weekly_rt_2 = #weekly_rt * #BONUS_PAYWEEK3
        !GEXHR_848_PRJ95045_BONUS2013_2 07/31/2013 ISDVNPK
        Let #Gex_Std_Hours = &PROM.STD_HOURS
        If $Prom_Empl_Type = 'H'
                Let #annual_rt = #hourly_rt * #Gex_Std_Hours * 52

        End-If
        Show 'Salary As of Runcontrol date : '#annual_rt

FROM PS_JOB PROM
Where PROM.emplid = $emplid
And PROM.empl_rcd = #empl_rcd_nbr
AND PROM.EFFDT = (Select Max(PROM1.effdt)
                       From   ps_job  PROM1
                       Where   PROM.emplid       = PROM1.emplid
       And     PROM.empl_rcd    =  PROM1.empl_rcd
       And     PROM1.effdt       <= $Salary_Dt )
AND  PROM.EFFSEQ =   (Select Max(PROM2.EFFSEQ)
                     From   ps_job  PROM2
       Where   PROM.emplid       = PROM2.emplid
       And     PROM.empl_rcd    =  PROM2.empl_rcd
       And     PROM2.effdt       = PROM.effdt )

ORDER BY PROM.EFFDT DESC
End-Select
!***********************************************************************
End-Procedure Find-Salary-AsofRuncontrol
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-All-Grades
!***********************************************************************
#debug9 Show  '***  Get-All-Grades   *** '

Let #Row_Count_Grade =1
Let #Curr_Grade = 1
Let $Pre_Grade = ''
Let $Hire_REhire_Found = ''
Let $Hire_REhire_Row_Found = 'N'
Let $End_Date_Grade = $Thru_Date
Let $Start_Date_Grade = $From_Date
Let $Promotion_Found = 'N' !GEXPY_848_E95094_02 2012-06-06 VENDAXG
Clear-array  Name=Salary_Grade
Begin-Select
GRADE.Jobcode
GRADE.Effdt
GRADE.Deptid
GRADE.EMPL_STATUS
GRADE.SAL_ADMIN_PLAN
GRADE.GRADE
GRADE.EMPL_TYPE
GRADE.ACTION
GRADE.POSITION_NBR !VENDAXG Added for Bonus Processing 2011 on 05/31/2011
GRADE.ACTION_REASON     !GEXPY_848_E95094_02 2012-06-06 VENDAXG
GRADE.ANNUAL_RT !GEXPY_848_E95094_02 2012-06-06 VENDAXG

    Let $All_Jobcode        = Ltrim(Rtrim(&GRADE.Jobcode,' '),' ')
    Let $All_Deptid         = Ltrim(Rtrim(&GRADE.Deptid,' '),' ')
    Let $All_Effdt_Grade    = &GRADE.Effdt
    Let $All_Empl_Status    = &GRADE.EMPL_STATUS
    Let $All_Sal_Admin_Plan = &GRADE.SAL_ADMIN_PLAN
    Let $All_Grade          = &GRADE.GRADE
    Let $All_Empl_Type      = &GRADE.EMPL_TYPE
    Let $All_Action         = Ltrim(Rtrim(&GRADE.ACTION,' '),' ')
    Let $All_Position_Nbr   = Ltrim(Rtrim(&GRADE.POSITION_NBR,' '),' ') !VENDAXG Added for Bonus Processing 2011 on 05/31/2011
    Let #All_Annual_Rt      = &GRADE.ANNUAL_RT
    Let $All_Action_Reason  = &GRADE.ACTION_REASON

    #debug8 Show 'ACtion : '$All_Action

    Do Get-Bonus-Group
    If $Bonus_Group_Found = 'Y'
        !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
        If ($All_Action = 'PRO' and $All_Action_Reason = 'NCP')
            Let $Promotion_Found = 'Y'
            Let #Promoted_Salary = #All_Annual_Rt
        Else
            Let $Promotion_Found = 'N'
        End-if
        !GEXPY_848_E95094_02 2012-06-06 VENDAXG - End

        If $Hire_REhire_Row_Found = 'N'
            If $Pre_Grade = ''
               Let #Duration_Grade = datediff($End_Date_Grade,$All_Effdt_Grade,'DAY')
               #debug8 Show 'First Duration Grade: '#Duration_Grade ' Grade : '$All_Grade ' Sal Admin Plan :'$All_Sal_Admin_Plan ' Empl type : '$All_Empl_Type ' Position_Nbr :'$All_Position_Nbr
               !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - Begin
               !Put $All_Grade $All_Sal_Admin_Plan $All_Empl_Type $All_Jobcode #Duration_Grade Into Salary_Grade(#Curr_Grade)
               !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
               !Put $All_Grade $All_Sal_Admin_Plan $All_Empl_Type $All_Jobcode $All_Position_Nbr #Duration_Grade Into Salary_Grade(#Curr_Grade)
               !Put $All_Grade $All_Sal_Admin_Plan $All_Empl_Type $All_Jobcode $All_Position_Nbr #All_Annual_Rt $Promotion_Found #Duration_Grade Into Salary_Grade(#Curr_Grade) !MM 08/21/2017
               Put $All_Grade $All_Sal_Admin_Plan $All_Empl_Type $All_Jobcode $All_Deptid $All_Position_Nbr #All_Annual_Rt $Promotion_Found #Duration_Grade Into Salary_Grade(#Curr_Grade) !MM 08/21/2017
               !GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
               !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - End
               Let $Old_Effdt_Grade = $All_Effdt_Grade
               Let $Pre_Grade = $All_Grade
               Let #Curr_Grade = #Curr_Grade + 1
            Else

               Let #Duration_Grade = datediff($Old_Effdt_Grade,$All_Effdt_Grade,'DAY')
               !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - Begin
               !Put $All_Grade $All_Sal_Admin_Plan $All_Empl_Type $All_Jobcode #Duration_Grade Into Salary_Grade(#Curr_Grade)
               !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
               !Put $All_Grade $All_Sal_Admin_Plan $All_Empl_Type $All_Jobcode $All_Position_Nbr #Duration_Grade Into Salary_Grade(#Curr_Grade)
               !Put $All_Grade $All_Sal_Admin_Plan $All_Empl_Type $All_Jobcode $All_Position_Nbr #All_Annual_Rt $Promotion_Found #Duration_Grade Into Salary_Grade(#Curr_Grade) !MM 08/21/2017
               Put $All_Grade $All_Sal_Admin_Plan $All_Empl_Type $All_Jobcode $All_Deptid $All_Position_Nbr #All_Annual_Rt $Promotion_Found #Duration_Grade Into Salary_Grade(#Curr_Grade)    !MM 08/21/2017
               !GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
               !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - End
               Let $Old_Effdt_Grade = $All_Effdt_Grade
               Let $Pre_Grade = $All_Grade
               Let #Curr_Grade = #Curr_Grade + 1
               #debug8 Show 'Duration Grade : '#Duration_Grade ' Grade : '$All_Grade ' Sal Admin Plan :'$All_Sal_Admin_Plan '$All_Deptid' $All_Deptid ' Empl Type :'$All_Empl_Type ' Position_Nbr :'$All_Position_Nbr

            End-If
            Let #Row_Count_Grade = #Row_Count_Grade + 1
        End-if

    Else
            If  $Pre_Grade = ''
                 #debug8 Show 'Bonus Group Not found first rows :' $All_Deptid
                 Let $End_Date_Grade = $All_Effdt_Grade
            Else
                 #debug8 Show 'Bonus Group Not found :' $All_Deptid
                 Let $Old_Effdt_Grade = $All_Effdt_Grade
            End-if
    End-if
    If $Hire_REhire_Found = ''
            If ($All_Action = 'REH') Or ($All_Action = 'HIR')
                Let $Hire_REhire_Row_Found = 'Y'
                Let $Hire_REhire_Found = 'Y'
                #debug8 Show 'Hire or Rehir Row found : '$All_Action
            End-If
    End-if

From PS_JOB GRADE
Where GRADE.emplid = $Emplid
And GRADE.empl_rcd = #Empl_rcd_nbr
And GRADE.effdt between $From_Date and $Thru_Date
order by GRADE.EFFDT desc
End-Select

    If #Row_Count_Grade =1

        Do Get-Prev-Empl-Status
        Let $All_Deptid = $Prevd_Deptid
        Do Get-Bonus-Group
        If $Bonus_Group_Found = 'Y'
            Let #Duration_Grade = #DurfromRctl
            !VENDAXG Added for Bonus Processing 2011 on 05/31/2011 - Begin
            !Put $Prevd_Grade $Prevd_Sal_Admin_Plan $Prevd_Empl_Type $Prevd_Jobcode #Duration_Grade Into Salary_Grade(#Curr_Grade)
            !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
            !Put $Prevd_Grade $Prevd_Sal_Admin_Plan $Prevd_Empl_Type $Prevd_Jobcode $Prevd_Position_Nbr #Duration_Grade Into Salary_Grade(#Curr_Grade)
            !Put $Prevd_Grade $Prevd_Sal_Admin_Plan $Prevd_Empl_Type $Prevd_Jobcode $Prevd_Position_Nbr #Prevd_Annual_Rt $Promotion_Found #Duration_Grade Into Salary_Grade(#Curr_Grade) !MM 08/21/2017
            Put $Prevd_Grade $Prevd_Sal_Admin_Plan $Prevd_Empl_Type $Prevd_Jobcode $Prevd_Deptid $Prevd_Position_Nbr #Prevd_Annual_Rt $Promotion_Found #Duration_Grade Into Salary_Grade(#Curr_Grade) !MM 08/21/2017
            !GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
            !VENDAXG Added for Bonus Processing 2011 on 05/31/2011 - End
            Let #Curr_Grade = #Curr_Grade + 1
            Let #Row_Count_Grade = #Row_Count_Grade + 1

        End-if

    Else
        If $Hire_REhire_Row_Found = 'N'
            Do Get-Prev-Empl-Status
            Let $All_Deptid = $Prevd_Deptid
            Do Get-Bonus-Group
            If $Bonus_Group_Found = 'Y'
                Let #Duration_Grade = datediff($All_Effdt_Grade,$Start_Date_Grade,'DAY')
                If $Prevd_Grade <> ''
                    !VENDAXG Added for Bonus Processing 2011 on 05/31/2011 - Begin
                    !Put $Prevd_Grade $Prevd_Sal_Admin_Plan $Prevd_Empl_Type $Prevd_Jobcode #Duration_Grade Into Salary_Grade(#Curr_Grade)
                    !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
                    !Put $Prevd_Grade $Prevd_Sal_Admin_Plan $Prevd_Empl_Type $Prevd_Jobcode $Prevd_Position_Nbr #Duration_Grade Into Salary_Grade(#Curr_Grade)
                    !Put $Prevd_Grade $Prevd_Sal_Admin_Plan $Prevd_Empl_Type $Prevd_Jobcode $Prevd_Position_Nbr #Prevd_Annual_Rt $Promotion_Found #Duration_Grade Into Salary_Grade(#Curr_Grade) !MM 08/21/2017
                    Put $Prevd_Grade $Prevd_Sal_Admin_Plan $Prevd_Empl_Type $Prevd_Jobcode  $Prevd_Deptid $Prevd_Position_Nbr #Prevd_Annual_Rt $Promotion_Found #Duration_Grade Into Salary_Grade(#Curr_Grade) !MM 08/21/2017
                    !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
                    !VENDAXG Added for Bonus Processing 2011 on 05/31/2011 - End
                    Let #Curr_Grade = #Curr_Grade + 1
                    Let #Row_Count_Grade = #Row_Count_Grade + 1

                #debug8 Show 'Duration Grade : '#Duration_Grade ' Prev Grade : '$Prevd_Grade ' Prev Sal Admin Plan : '$Prevd_Sal_Admin_Plan ' Empl Type :'$Prevd_Empl_Type ' Prev Jobcode :'$Prevd_Jobcode ' Prevd_Position_Nbr :'$Prevd_Position_Nbr
                End-If

            End-if
        End-if
    End-If

    Let #i = 1
    Let #Total_Leave_Duration = 0
    #debug8 Show '************** Empl Type, Grade, Sal Admin Plan and Duration for the Employee *************'
    While #i < #Curr_Grade

        !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - Begin
        !Get $Grade $Sal_Admin_Plan $Get_Empl_type $Get_Jobcode #Duration From Salary_Grade(#i)
        !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
        !Get $Grade $Sal_Admin_Plan $Get_Empl_type $Get_Jobcode $Get_Position_Nbr #Duration From Salary_Grade(#i)
        !Get $Grade $Sal_Admin_Plan $Get_Empl_type $Get_Jobcode $Get_Position_Nbr #Get_Annual_Rt $Get_Promotion_found #Duration From Salary_Grade(#i) !MM 08/21/2017
        Get $Grade $Sal_Admin_Plan $Get_Empl_type $Get_Jobcode $Get_Dept $Get_Position_Nbr #Get_Annual_Rt $Get_Promotion_found #Duration From Salary_Grade(#i) !MM 08/21/2017
        !GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
        !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - End
        #debug8 Show 'Empl Type : '$Get_Empl_type ' Grade :' $Grade ' Sal Admin Plan :'$Sal_Admin_Plan ' Jobcode :'$Get_Jobcode 'Dept ' $Get_Dept ' Annual Rate:' #Get_Annual_Rt ' Promotion Found: '$Get_Promotion_Found ' Duration :'#Duration ' Get_Position_Nbr :' $Get_Position_Nbr

        Let #i = #i + 1

    End-While
    #debug8 Show '************** Empl Type, Grade, Sal Admin Plan and Duration for the Employee *************'
    Do Get-Diff-Empl-Type-Duration

!***********************************************************************
End-ProcedurE Get-All-Grades
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Diff-Empl-Type-Duration
!***********************************************************************
#debug9 Show  '***  Get-Diff-Empl-Type-Duration   *** '

    Let #j = 1
    Let #Total_Duration_H = 0
    Let #Total_Duration_S = 0
    While #j < #Curr_Grade

        !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - Begin
        !Get $Grade $Sal_Admin_Plan $Get_Empl_type $Get_Jobcode  #Duration From Salary_Grade(#j)
        !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
        !Get $Grade $Sal_Admin_Plan $Get_Empl_type $Get_Jobcode $Get_Position_Nbr #Duration From Salary_Grade(#j)
        !Get $Grade $Sal_Admin_Plan $Get_Empl_type $Get_Jobcode $Get_Position_Nbr #Get_Annual_rt $Get_Promotion_Found #Duration From Salary_Grade(#j) !MM 08/21/2017
        Get $Grade $Sal_Admin_Plan $Get_Empl_type $Get_Jobcode $Get_Dept $Get_Position_Nbr #Get_Annual_rt $Get_Promotion_Found #Duration From Salary_Grade(#j) !MM 08/21/2017
        !GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
        !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - End

        If $Get_Empl_type = 'S'
                Let #Total_Duration_S = #Duration + #Total_Duration_S
        Else
                If $Get_Empl_type = 'H'
                        Let #Total_Duration_H = #Duration + #Total_Duration_H
                End-If
        End-if

        Let #j = #j + 1
    End-While

#debug8 Show 'Duration as Salaried : '#Total_Duration_S ' and Duration as Hourly :'#Total_Duration_H
!***********************************************************************
End-Procedure Get-Diff-Empl-Type-Duration
!***********************************************************************

!***********************************************************************
Begin-Procedure Sum-Distinct-Grade
!***********************************************************************
#debug9 Show  '***  Sum-Distinct-Grade   *** '

    Let #Counter_Distinct_Grade=1
    Let $Prev_Distinct_Grade = ''
    Let #Distinct_Grade_Count = 0
    Let #Sum_Distinct_Grade_Duration = 0
    Let #Final_Grade_Row_Count = 0
    Clear-array  Name=Final-Grade-List
    While #Counter_Distinct_Grade < #Curr_Grade

       !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - Begin
       !Get $All_Grade $All_Sal_Admin_Plan $All_Get_Empl_type $All_Jobcode #All_Duration From Salary_Grade(#Counter_Distinct_Grade)
       !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
       !Get $All_Grade $All_Sal_Admin_Plan $All_Get_Empl_type $All_Jobcode $All_Position_Nbr #All_Duration From Salary_Grade(#Counter_Distinct_Grade)
       !Get $All_Grade $All_Sal_Admin_Plan $All_Get_Empl_type $All_Jobcode $All_Position_Nbr #All_Annual_Rt $All_Promotion_Found #All_Duration From Salary_Grade(#Counter_Distinct_Grade) !MM 08/21/2017
       Get $All_Grade $All_Sal_Admin_Plan $All_Get_Empl_type $All_Jobcode $All_Dept $All_Position_Nbr #All_Annual_Rt $All_Promotion_Found #All_Duration From Salary_Grade(#Counter_Distinct_Grade) !MM 08/21/2017
       !GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
       !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - End

        Let $Grade_Found_Final_List = 'N'
        Let #Counter_Distinct_Grade2 = 1

        While #Counter_Distinct_Grade2 <= #Final_Grade_Row_Count

                !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - Begin
                !Get $Distinct_Get_Empl_Type $Distinct_Sal_Admin_Plan $Distinct_Grade  $Distinct_JobCode #Distinct_Duration From Final-Grade-List(#Counter_Distinct_Grade2)
                !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
                !Get $Distinct_Get_Empl_Type $Distinct_Sal_Admin_Plan $Distinct_Grade  $Distinct_JobCode $Distinct_Position_Nbr #Distinct_Duration From Final-Grade-List(#Counter_Distinct_Grade2)
                Get $Distinct_Get_Empl_Type $Distinct_Sal_Admin_Plan $Distinct_Grade  $Distinct_JobCode $Distinct_Position_Nbr #Distinct_Annual_Rt $Distinct_Promotion_Found #Distinct_Duration From Final-Grade-List(#Counter_Distinct_Grade2)
                !GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
                !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - End
                If ($All_Get_Empl_type = $Distinct_Get_Empl_Type) And ($All_Get_Empl_type = 'H')
                        Let $Grade_Found_Final_List = 'Y'
                Else
                !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - End
                        If ($Distinct_Grade = $All_Grade) AND ($All_Sal_Admin_Plan = $Distinct_Sal_Admin_Plan) AND ($All_Get_Empl_type = $Distinct_Get_Empl_Type) AND ($All_Jobcode = $Distinct_JobCode)
                                Let $Grade_Found_Final_List = 'Y'
                        End-if


                End-if !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011
                Let #Counter_Distinct_Grade2 = #Counter_Distinct_Grade2 + 1
        End-While


        If $Grade_Found_Final_List = 'N'
                Let #Counter_Distinct_Grade1 = 0
                Let $Prev_All_Grade = ''
                Let #Sum_Distinct_Grade_Duration = 0
                While #Counter_Distinct_Grade1 <= #Curr_Grade
                        Let #Counter_Distinct_Grade1 = #Counter_Distinct_Grade1 + 1
                        !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - Begin
                        !Get $Find_Grade $Final_Sal_Admin_Plan $Final_Get_Empl_type $Final_JobCode #Final_Duration From Salary_Grade(#Counter_Distinct_Grade1)
                        !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
                        !Get $Find_Grade $Final_Sal_Admin_Plan $Final_Get_Empl_type $Final_JobCode $Final_Position_Nbr #Final_Duration From Salary_Grade(#Counter_Distinct_Grade1) !MM 08/21/2017
                        !Get $Find_Grade $Final_Sal_Admin_Plan $Final_Get_Empl_type $Final_JobCode $Final_Position_Nbr #Final_Annual_rt $Final_Promotion_Found #Final_Duration From Salary_Grade(#Counter_Distinct_Grade1) !MM 08/21/2017
                        Get $Find_Grade $Final_Sal_Admin_Plan $Final_Get_Empl_type $Final_JobCode $Final_Dept $Final_Position_Nbr #Final_Duration From Salary_Grade(#Counter_Distinct_Grade1) !MM 08/21/2017
                        Get $Find_Grade $Final_Sal_Admin_Plan $Final_Get_Empl_type $Final_JobCode $Final_Dept $Final_Position_Nbr #Final_Annual_rt $Final_Promotion_Found #Final_Duration From Salary_Grade(#Counter_Distinct_Grade1) !MM 08/21/2017
                        !GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
                        !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - End

                        If ($Find_Grade  = $All_Grade) AND ($All_Sal_Admin_Plan = $Final_Sal_Admin_Plan) AND ($All_Get_Empl_type = $Final_Get_Empl_type) AND ($All_JobCode = $Final_JobCode)
                                Let #Sum_Distinct_Grade_Duration = #Sum_Distinct_Grade_Duration + #Final_Duration

                        End-if

                End-While
                Let #Final_Grade_Row_Count =  #Final_Grade_Row_Count + 1
                !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - Begin
                !Put $All_Get_Empl_type $All_Sal_Admin_Plan  $All_Grade $All_JobCode #Sum_Distinct_Grade_Duration into Final-Grade-List(#Final_Grade_Row_Count)
                !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
                !Put $All_Get_Empl_type $All_Sal_Admin_Plan  $All_Grade $All_JobCode $All_Position_Nbr #Sum_Distinct_Grade_Duration into Final-Grade-List(#Final_Grade_Row_Count)
                Put $All_Get_Empl_type $All_Sal_Admin_Plan  $All_Grade $All_JobCode $All_Position_Nbr #All_Annual_rt $Ann_Promotion_Found #Sum_Distinct_Grade_Duration into Final-Grade-List(#Final_Grade_Row_Count)
                !GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
                !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - End
        End-if
        Let #Counter_Distinct_Grade = #Counter_Distinct_Grade + 1
    End-While

    Let #Counter_Grade_testing = 1

#debug8 Show '*************************** Distinct Grade***********************'

    While #Counter_Grade_testing <= #Final_Grade_Row_Count

        !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - Begin
        !Get $Final_Empl_type $Final_Sal_Admin_Plan $Fina_Grade_Testing $Final_JobCode #Sum_Distinct_Duration From Final-Grade-List(#Counter_Grade_testing)
        !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
        !Get $Final_Empl_type $Final_Sal_Admin_Plan $Fina_Grade_Testing $Final_JobCode $Final_Position_Nbr #Sum_Distinct_Duration From Final-Grade-List(#Counter_Grade_testing)
        Get $Final_Empl_type $Final_Sal_Admin_Plan $Fina_Grade_Testing $Final_JobCode $Final_Position_Nbr #Find_Annual_Rt $Find_Promotion_Found #Sum_Distinct_Duration From Final-Grade-List(#Counter_Grade_testing)
        !GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
        !Vendaxg Modified for Bonus Processing 2011 on 05/31/2011 - End
        #debug8 Show 'Distinct Empl Type : '$Final_Empl_type ' Grade : '$Fina_Grade_Testing ' Sal Admin Plan : '$Final_Sal_Admin_Plan ' JobCode :'$Final_JobCode  ' Find Annual Rt : '#Find_Annual_Rt ' Find Promotion: '$Find_Promotion_Found '  Duration : '#Sum_Distinct_Duration ' Final_Position_Nbr :' $Final_Position_Nbr
        Let #Counter_Grade_testing = #Counter_Grade_testing + 1

    End-while
#debug8 Show '*************************** Distinct Grade***********************'
!***********************************************************************
End-Procedure Sum-Distinct-Grade
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-Termination-AsofCutoff
!**********************************************************************
#debug8 Show 'Entering Procedure Check-Termination-AsofCutoff For Emplid : '$Emplid ' Cut off date : ' $Term_CutOff_Date
Let $Termination_Row_Found = 'N'
Begin-Select
TER.EMPLID

        Let $Termination_Row_Found = 'Y'
        #debug8 Show 'Termination Row found for Emplid :'$Emplid

FROM PS_JOB TER
WHERE TER.EMPLID = $Emplid
AND TER.EMPL_RCD = #Empl_Rcd_Nbr
AND TER.EFFDT = (SELECT MAX(TER1.EFFDT) FROM PS_JOB TER1 WHERE TER.EMPLID = TER1.EMPLID
                        AND TER.EMPL_RCD = TER1.EMPL_RCD
                        AND TER1.EFFDT <= $Term_CutOff_Date)
AND TER.EFFSEQ = (SELECT MAX(TER2.EFFSEQ) FROM PS_JOB TER2 WHERE TER.EMPLID = TER2.EMPLID
                        AND TER.EMPL_RCD = TER2.EMPL_RCD
                        AND TER.EFFDT = TER2.EFFDT)
AND TER.EMPL_STATUS IN ('T','R','Q','U')
End-Select
!***********************************************************************
End-Procedure Check-Termination-AsofCutoff
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Bonus-Group
!***********************************************************************
#debug9 Show  '***  Get-Bonus-Group   *** '

Let $Bonus_Group_Found = 'N'
Begin-Select
BG.GEX_BONUS_GROUP

        Let $Bonus_Group_Found = 'Y'

FROM PS_GEX_DEPT_TBL BG
WHERE BG.DEPTID =  $All_Deptid
AND BG.SETID    = 'COMMN'
AND BG.EFFDT    = (SELECT MAX(BG1.EFFDT) FROM PS_GEX_DEPT_TBL BG1 WHERE BG.SETID = BG1.SETID
                        AND BG.DEPTID = BG1.DEPTID
                        AND BG.EFFDT <= SYSDATE)
AND BG.GEX_BONUS_GROUP = 'BG06'


End-Select

!***********************************************************************
End-Procedure Get-Bonus-Group
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Max-Duration-Deptid
!***********************************************************************
#debug9 Show  '***  Get-Max-Duration-Deptid   *** '
Let #Deptid_Tra = 1
Let #compute_max_duration = 0
Let $prev_deptid_proc = ''
Let $Max_Duration_Deptid = ''

While #Deptid_Tra <= #Curr_Empl_Status
   Get $Prevd_Deptid #Duration_Deptid From Deptid(#Deptid_Tra)

   Let #Deptid_Tra = #Deptid_Tra + 1
   Let #Deptid_Tra1 = 1

        If $prev_deptid_proc <> $prevd_Deptid
                Let #Deptid_Duration_Days = 0
                While #Deptid_Tra1 <= #Curr_Empl_Status

                        Get $prevd_Deptid1 #Duration_Deptid1 From Deptid(#Deptid_Tra1)
                        #debug8 Show '$prevd_Deptid1 : '$prevd_Deptid1  ' #Duration_Deptid1 :'#Duration_Deptid1
                                If $prevd_Deptid1 = $prevd_Deptid
                                        Let #Deptid_Duration_Days = #Deptid_Duration_Days + #Duration_Deptid1
                                        #debug8 Show '#Deptid_Duration_Days : ' #Deptid_Duration_Days
                                End-IF

                        Let #Deptid_Tra1 = #Deptid_Tra1 + 1
                End-While

                if #compute_max_duration < #Deptid_Duration_Days
                        Let #compute_max_duration = #Deptid_Duration_Days
                        Let $Max_Duration_Deptid = $prevd_Deptid

                End-if
                Let $prev_deptid_proc = $prevd_Deptid
        End-if


End-While

!***********************************************************************
End-Procedure Get-Max-Duration-Deptid
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Hourly-EE-Salary
!***********************************************************************
#debug9 Show  '***  Get-Max-Duration-Deptid   *** '
!Vendaxg Added for Bonus Processing 2011 on 05/31/2011 - Begin
Let #Gex_Std_Hours = 0  !Vendaxg Added for Bonus Processing 2011 on 05/31/2011
!Do Get-Future-Dt-HIR
!If $Future_dt_hir = 'N'
!       Do Get-Future-Dt-REH
!       If $Future_dt_reh = 'N'
!               Do Get-Hourly-Salary-ASOF-SalaryDate
!               #debug8 Show 'Hourly Salary found for Valid Grade as of salary date from Run control'
!       Else
!               #debug8 Show 'Hourly Future dated REHIRE row found'
!       End-if
!Else
!       #debug8 Show 'Hourly Futured dated HIRE Row found'
!End-if
Let #annual_rt = 0
Let #hourly_rt = 0
Let #weekly_rt = 0
Let #weekly_rt_1_5 = 0
Let #weekly_rt_2 = 0
Begin-Select
SALHR.ACTION
SALHR.EFFDT
SALHR.ANNUAL_RT
SALHR.HOURLY_RT
SALHR.STD_HOURS


        Let #annual_rt = &SALHR.ANNUAL_RT
        Let #hourly_rt = &SALHR.HOURLY_RT
        Let #weekly_rt = #hourly_rt * &SALHR.STD_HOURS
        Let #weekly_rt_1_5 = #weekly_rt * #BONUS_PAYWEEK2
        Let #weekly_rt_2 = #weekly_rt * #BONUS_PAYWEEK3
        Let #Gex_Std_Hours = &SALHR.STD_HOURS !Vendaxg Added for Bonus Processing 2011 on 05/31/2011

        #debug8 Show 'Hourly #annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt '  Job Code : '$JOBCD


FROM PS_JOB SALHR
WHERE SALHR.EMPLID = $Emplid
AND SALHR.EMPL_RCD = #Empl_Rcd_Nbr
AND SALHR.EFFDT    = (SELECT MAX(SALHR1.EFFDT) FROM PS_JOB SALHR1
                        WHERE SALHR.EMPLID = SALHR1.EMPLID
                        AND SALHR.EMPL_RCD = SALHR1.EMPL_RCD
                        AND SALHR1.EMPL_TYPE = 'H'
                        AND SALHR1.EFFDT <= SYSDATE)
AND SALHR.EFFSEQ = (SELECT MAX(SALHR2.EFFSEQ) FROM PS_JOB SALHR2
                        WHERE SALHR.EMPLID = SALHR2.EMPLID
                        AND SALHR.EMPL_RCD = SALHR2.EMPL_RCD
                        AND SALHR2.EMPL_TYPE = 'H'
                        AND SALHR.EFFDT = SALHR2.EFFDT)

End-Select
!Vendaxg Added for Bonus Processing 2011 on 05/31/2011 - End
!***********************************************************************
End-Procedure Get-Hourly-EE-Salary
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-EE-Salary
!***********************************************************************
#debug9 Show  '***  Get-EE-Salary   *** '
    Let #Gex_Std_Hours = 0  !Vendaxg Added for Bonus Processing 2011 on 05/31/2011
    Do Get-Future-Dt-HIR
    If $Future_dt_hir = 'N'
        Do Get-Future-Dt-REH
        If $Future_dt_reh = 'N'
                !GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
                !Do Get-Salary-ASOF-SalaryDate
                Do Find-Salary-AsofRuncontrol
                !If $Salary_asof_date = 'N'
                !       Do Get-Salary-Elig-Jobcode
                !       If $Salary_Elig_Jobcode = 'N'
                !               #debug8 Show 'Salary Not found for Valid Grade after  salary date from Run control'
                !       Else
                !               #debug8 Show 'Salary found for Valid Grade after  salary date from Run control'
                !       End-if
                !Else
                !       #debug8 Show 'Salary found for Valid Grade as of salary date from Run control'
                !End-if
                !GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
        Else
                #debug8 Show 'Future dated REHIRE row found'
        End-if
    Else
        #debug8 Show 'Futured dated HIRE Row found'
    End-if
!***********************************************************************
End-Procedure Get-EE-Salary
!***********************************************************************


!***********************************************************************
Begin-Procedure Get-Future-Dt-HIR
!***********************************************************************
Let $Future_dt_hir = 'N'
Let #annual_rt = 0
Let #hourly_rt = 0
Let #weekly_rt = 0
Let #weekly_rt_1_5 = 0
Let #weekly_rt_2 = 0
Begin-Select
SALHIR.ACTION
SALHIR.EFFDT
SALHIR.ANNUAL_RT
SALHIR.HOURLY_RT
SALHIR.STD_HOURS


        Let $Future_dt_hir = 'Y'
        Let #annual_rt = &SALHIR.ANNUAL_RT
        Let #hourly_rt = &SALHIR.HOURLY_RT
        Let #weekly_rt = #hourly_rt * &SALHIR.STD_HOURS
        !GEXHR_848_PRJ95045_BONUS2013_2 07/31/2013 ISDVNPK
        !Let #weekly_rt_1_5 = #weekly_rt * 1.5
        Let #weekly_rt_1_5 = #weekly_rt * #BONUS_PAYWEEK2
        !Let #weekly_rt_2 = #weekly_rt * 2
        Let #weekly_rt_2 = #weekly_rt * #BONUS_PAYWEEK3
        !GEXHR_848_PRJ95045_BONUS2013_2 07/31/2013 ISDVNPK
        Let #Gex_Std_Hours = &SALHIR.STD_HOURS !Vendaxg Added for Bonus Processing 2011 on 05/31/2011

        #debug8 Show '#annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt '  Job Code : '$JOBCD


FROM PS_JOB SALHIR
WHERE SALHIR.EMPLID = $Emplid
AND SALHIR.EMPL_RCD = #Empl_Rcd_Nbr
AND SALHIR.EFFDT    > $Salary_Effdt
AND SALHIR.ACTION = 'HIR'
AND SALHIR.EFFDT BETWEEN $From_Date AND  $Thru_Date
End-Select
!***********************************************************************
End-Procedure Get-Future-Dt-HIR
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Future-Dt-REH
!***********************************************************************
Let $Future_dt_reh = 'N'
Let #annual_rt = 0
Let #hourly_rt = 0
Let #weekly_rt = 0
Let #weekly_rt_1_5 = 0
Let #weekly_rt_2 = 0

Begin-Select
SALREH.ACTION
SALREH.EFFDT
SALREH.ANNUAL_RT
SALREH.HOURLY_RT
SALREH.STD_HOURS


        Let $Future_dt_reh = 'Y'
        Let #annual_rt = &SALREH.ANNUAL_RT
        Let #hourly_rt = &SALREH.HOURLY_RT
        Let #weekly_rt = #hourly_rt * &SALREH.STD_HOURS
        !GEXHR_848_PRJ95045_BONUS2013_2 07/31/2013 ISDVNPK
        !Let #weekly_rt_1_5 = #weekly_rt * 1.5
        Let #weekly_rt_1_5 = #weekly_rt * #BONUS_PAYWEEK2
        !Let #weekly_rt_2 = #weekly_rt * 2
        Let #weekly_rt_2 = #weekly_rt * #BONUS_PAYWEEK3
        !GEXHR_848_PRJ95045_BONUS2013_2 07/31/2013 ISDVNPK
        Let #Gex_Std_Hours = &SALREH.STD_HOURS !Vendaxg Added for Bonus Processing 2011 on 05/31/2011

        #debug8 Show 'Rehire : #annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt '  Job Code : '$JOBCD


FROM PS_JOB SALREH
WHERE SALREH.EMPLID = $Emplid
AND SALREH.EMPL_RCD = #Empl_Rcd_Nbr
AND SALREH.EFFDT    > $Salary_Effdt
! ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
!AND SALREH.ACTION = 'HIR'
AND SALREH.ACTION = 'REH' 
! ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
AND SALREH.EFFDT BETWEEN $From_Date AND  $Thru_Date
End-Select
!***********************************************************************
End-Procedure Get-Future-Dt-REH
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Salary-ASOF-SalaryDate
!***********************************************************************
#debug9 Show  '***  Get-Salary-ASOF-SalaryDate   *** '

Let $Salary_asof_date = 'N'
Show  'Salary Date :'$Salary_Effdt
Let #annual_rt = 0
Let #hourly_rt = 0
Let #weekly_rt = 0
Let #weekly_rt_1_5 = 0
Let #weekly_rt_2 = 0
Begin-Select
SALASDT.ACTION
SALASDT.EFFDT
SALASDT.ANNUAL_RT
SALASDT.HOURLY_RT
SALASDT.STD_HOURS


        Let $Salary_asof_date = 'Y'
        Let #annual_rt = &SALASDT.ANNUAL_RT
        Let #hourly_rt = &SALASDT.HOURLY_RT
        Let #weekly_rt = #hourly_rt * &SALASDT.STD_HOURS
        !GEXHR_848_PRJ95045_BONUS2013_2 07/31/2013 ISDVNPK
        !Let #weekly_rt_1_5 = #weekly_rt * 1.5
        Let #weekly_rt_1_5 = #weekly_rt * #BONUS_PAYWEEK2
        !Let #weekly_rt_2 = #weekly_rt * 2
        Let #weekly_rt_2 = #weekly_rt * #BONUS_PAYWEEK3
        !GEXHR_848_PRJ95045_BONUS2013_2 07/31/2013 ISDVNPK


        #debug8 Show '#annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt '  Job Code : '$JOBCD


FROM PS_JOB SALASDT
WHERE SALASDT.EMPLID = $Emplid
AND SALASDT.EMPL_RCD = #Empl_Rcd_Nbr
AND SALASDT.EFFDT    = (SELECT MAX(SALASDT1.EFFDT) FROM PS_JOB SALASDT1
                        WHERE SALASDT.EMPLID = SALASDT1.EMPLID
                        AND SALASDT.EMPL_RCD = SALASDT1.EMPL_RCD
                        AND SALASDT1.EFFDT <= $Salary_Effdt)
AND SALASDT.EFFSEQ = (SELECT MAX(SALASDT2.EFFSEQ) FROM PS_JOB SALASDT2
                        WHERE SALASDT.EMPLID = SALASDT2.EMPLID
                        AND SALASDT.EMPL_RCD = SALASDT2.EMPL_RCD
                        AND SALASDT.EFFDT = SALASDT2.EFFDT)
AND (SALASDT.SAL_ADMIN_PLAN, SALASDT.GRADE) IN
                      (SELECT DISTINCT VLDJB.SAL_ADMIN_PLAN, VLDJB.GRADE
                         FROM PS_GEX_SALGD_BONUS VLDJB
                        WHERE VLDJB.EFFDT = (SELECT MAX(VLDJB1.EFFDT) FROM PS_GEX_SALGD_BONUS VLDJB1
                                                WHERE VLDJB1.SETID = VLDJB.SETID
                                                AND VLDJB1.SAL_ADMIN_PLAN = VLDJB.SAL_ADMIN_PLAN
                                                AND VLDJB1.GRADE = VLDJB.GRADE
                                                AND VLDJB1.EFFDT <= SYSDATE))

End-Select
!***********************************************************************
End-Procedure Get-Salary-ASOF-SalaryDate
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Hourly-Salary-ASOF-SalaryDate
!***********************************************************************
#debug9 Show  '***  Get-Hourly-Salary-ASOF-SalaryDate   *** '

Let $Salary_asof_date = 'N'
#debug8 Show 'Salary Date :'$Salary_Effdt
Let #annual_rt = 0
Let #hourly_rt = 0
Let #weekly_rt = 0
Let #weekly_rt_1_5 = 0
Let #weekly_rt_2 = 0
Begin-Select
SALASDTH.ACTION
SALASDTH.EFFDT
SALASDTH.ANNUAL_RT
SALASDTH.HOURLY_RT
SALASDTH.STD_HOURS


        Let $Salary_asof_date = 'Y'
        Let #annual_rt = &SALASDTH.ANNUAL_RT
        Let #hourly_rt = &SALASDTH.HOURLY_RT
        Let #weekly_rt = #hourly_rt * &SALASDTH.STD_HOURS
        Let #weekly_rt_1_5 = #weekly_rt * #BONUS_PAYWEEK2
        Let #weekly_rt_2 = #weekly_rt * #BONUS_PAYWEEK3
        Let #Gex_Std_Hours = &SALASDTH.STD_HOURS

        #debug8 Show 'Hourly #annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt '  Job Code : '$JOBCD

FROM PS_JOB SALASDTH
WHERE SALASDTH.EMPLID = $Emplid
AND SALASDTH.EMPL_RCD = #Empl_Rcd_Nbr
AND SALASDTH.EFFDT    = (SELECT MAX(SALASDTH1.EFFDT) FROM PS_JOB SALASDTH1
                        WHERE SALASDTH.EMPLID = SALASDTH1.EMPLID
                        AND SALASDTH.EMPL_RCD = SALASDTH1.EMPL_RCD
                        AND SALASDTH1.EFFDT <= $Salary_Effdt)
AND SALASDTH.EFFSEQ = (SELECT MAX(SALASDTH2.EFFSEQ) FROM PS_JOB SALASDTH2
                        WHERE SALASDTH.EMPLID = SALASDTH2.EMPLID
                        AND SALASDTH.EMPL_RCD = SALASDTH2.EMPL_RCD
                        AND SALASDTH.EFFDT = SALASDTH2.EFFDT)

End-Select
!***********************************************************************
End-Procedure Get-Hourly-Salary-ASOF-SalaryDate
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Salary-Elig-Jobcode
!***********************************************************************
#debug9 Show  '***  Get-Salary-Elig-Jobcode   *** '

    Let $Salary_Elig_Jobcode = 'N'
    Let #annual_rt = 0
    Let #hourly_rt = 0
    Let #weekly_rt = 0
    Let #weekly_rt_1_5 = 0
    Let #weekly_rt_2 = 0

Begin-Select
SALEJBCD.ACTION
SALEJBCD.EFFDT
SALEJBCD.ANNUAL_RT
SALEJBCD.HOURLY_RT
SALEJBCD.STD_HOURS
SALEJBCD.SAL_ADMIN_PLAN
SALEJBCD.GRADE

    Let $Salary_Elig_Jobcode = 'Y'
    Let #annual_rt = &SALEJBCD.ANNUAL_RT
    Let #hourly_rt = &SALEJBCD.HOURLY_RT
    Let #weekly_rt = #hourly_rt * &SALEJBCD.STD_HOURS
    Let #weekly_rt_1_5 = #weekly_rt * #BONUS_PAYWEEK2
    Let #weekly_rt_2 = #weekly_rt * #BONUS_PAYWEEK3

    #debug8 Show '#annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt '  Job Code : '$JOBCD

FROM PS_JOB SALEJBCD
WHERE SALEJBCD.EMPLID = $Emplid
AND SALEJBCD.EMPL_RCD = #Empl_Rcd_Nbr
AND SALEJBCD.EFFDT    = (SELECT MIN(SALEJBCD1.EFFDT)
                           FROM PS_JOB SALEJBCD1
                          WHERE SALEJBCD.EMPLID = SALEJBCD1.EMPLID
                            AND SALEJBCD.EMPL_RCD = SALEJBCD1.EMPL_RCD
                            AND (SALEJBCD1.SAL_ADMIN_PLAN,SALEJBCD1.GRADE)  IN (SELECT DISTINCT SALVLDJB.SAL_ADMIN_PLAN,SALVLDJB.GRADE
                                                                                  FROM PS_GEX_SALGD_BONUS SALVLDJB
                                                                                 WHERE SALVLDJB.EFFDT = (SELECT MAX(SALVLDJB1.EFFDT)
                                                                                                           FROM PS_GEX_SALGD_BONUS SALVLDJB1
                                                                                                          WHERE SALVLDJB1.SETID = SALVLDJB.SETID
                                                                                                            AND SALVLDJB1.SAL_ADMIN_PLAN = SALVLDJB.SAL_ADMIN_PLAN
                                                                                                            AND SALVLDJB1.GRADE = SALVLDJB.GRADE
                                                                                                            AND SALVLDJB1.EFFDT <= SYSDATE))
                            AND SALEJBCD1.EFFDT >= $Salary_Effdt)
AND SALEJBCD.EFFSEQ  = (SELECT MAX(SALEJBCD2.EFFSEQ)
                          FROM PS_JOB SALEJBCD2
                         WHERE SALEJBCD.EMPLID       = SALEJBCD2.EMPLID
                           AND SALEJBCD.EMPL_RCD       = SALEJBCD2.EMPL_RCD
                           AND SALEJBCD.EFFDT          = SALEJBCD2.EFFDT
                           AND SALEJBCD.SAL_ADMIN_PLAN = SALEJBCD2.SAL_ADMIN_PLAN
                           AND SALEJBCD.GRADE = SALEJBCD2.GRADE)
End-Select
!***********************************************************************
End-Procedure Get-Salary-Elig-Jobcode
!***********************************************************************

!***********************************************************************
Begin-Procedure write-file
!***********************************************************************
!#debug8 Show 'writing file'
    move #annual_rt to $annual_rt
    Move #Empl_Rcd_Nb to $Empl_Rcd
    move &dateBegan to $date
    move  &timeBegan to $time

    Let $datetime = $date ||  $time
    If $Run_Type = '1' or
        $Run_Type = '2'

        Do Format-DateTime($Last_hire_Dt, $Last_hire_Dt_Write, {DEFMDY}, '', '')
        Let $Emplid_Write ='="' || $Emplid || '"'
        Let $Empl_Rcd_Write ='="' || $Empl_Rcd || '"'
        Do Get-AccountCd-Descr
        Let $Account_Code_Descr_Write = '="' || $Account_Code_Descr || '"'
        Let $Jobcode1_write  ='="' || $Calculate_JobCode  || '"'
        Do Get-Jobcode-Descr-Write
        Let $Jobcode_Descr_write  ='="' || $Jobcode_Descr  || '"'
        Let $Max_duration_deptid_write ='="' || $max_duration_deptid || '"'
        Let $Deptid_write  ='="' || $Deptid  || '"'
        Let $Grade_Write = '="' || $Calculate_Grade  || '"'


        If $Proration_Done = 'N'
            Let $Space = ' '
        Else
            Let $Space = 'Prorated*'
        End-If

        string $name $emplid_Write $empl_rcd $Account_Code_Descr_Write $Jobcode1_write $Jobcode_Descr_write $Last_hire_Dt_Write #annual_rt $Deptid_write $Max_duration_deptid_write $Grade_Write #Current_Bonus_Amt #Current_Bonus_Amt_2 #Current_Bonus_Amt_Total $ReportTitle2  $datetime by $delim into $actives

    else

        Do Format-DateTime($Last_hire_Dt, $Last_hire_Dt_Write, {DEFMDY}, '', '')

        Let $Emplid_Write ='="' || $Emplid || '"'
        Let $Empl_Rcd_Write ='="' || $Empl_Rcd || '"'
        Do Get-AccountCd-Descr
        Let $Account_Code_Descr_Write = '="' || $Account_Code_Descr || '"'
        Let $Jobcode1_write  ='="' || $Calculate_JobCode  || '"'
        Do Get-Jobcode-Descr-Write
        Let $Jobcode_Descr_write  ='="' || $Jobcode_Descr  || '"'
        Let $Max_duration_deptid_write ='="' || $Budget_Deptid || '"'
        Let $Deptid_write  ='="' || $Deptid  || '"'
        Let $Grade_Write = '="' || $Calculate_Grade  || '"'

        string $name  by $delim into $actives

        string $actives  $emplid_write  by $delim into $actives

        string $actives  $empl_rcd    $max_dept_jobcode_write  $jobcode by $delim into $actives

        string $actives  $MaxJobcodedescr $full_part_time  #std_hours  $Hire_Date #annual_rt $Empl_Type by $delim into $actives

        string $actives  $max_duration_deptid_write by $delim into $actives

        string $actives  $Deptid_write by $delim into $actives

        string $name $emplid_Write $empl_rcd $Account_Code_Descr_Write $Jobcode1_write $Jobcode_Descr_write $Last_hire_Dt_Write #annual_rt $Deptid_write $Grade_Write $Max_duration_deptid_write #Current_Bonus_Amt #Current_Bonus_Amt_2 #Final_Bonus_Amount $ReportTitle2  $datetime by $delim into $actives


    end-if

    write 1 from $actives


!***********************************************************************
End-Procedure write-file
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-AccountCd-Descr
!***********************************************************************
Begin-Select
ACCT.DESCRSHORT

        Let $Account_Code_Descr = &ACCT.DESCRSHORT

FROM PS_GEX_ACCT_CD_TBL ACCT
WHERE ACCT.EFFDT = (SELECT MAX(ACCT1.EFFDT) FROM PS_GEX_ACCT_CD_TBL ACCT1
                    WHERE ACCT.ACCT_CD = ACCT1.ACCT_CD
                    AND ACCT.EFFDT<=SYSDATE)
AND ACCT.ACCT_CD = $Acctcd
End-Select
!***********************************************************************
End-Procedure Get-AccountCd-Descr
!***********************************************************************
!***********************************************************************
Begin-Procedure Get-Jobcode-Descr-Write
!***********************************************************************
Begin-Select
JBCDDES.DESCR

        Let $Jobcode_Descr = &JBCDDES.DESCR

FROM PS_JOBCODE_TBL JBCDDES
WHERE JBCDDES.EFFDT = (SELECT MAX(JDSR.EFFDT) FROM PS_JOBCODE_TBL JDSR
                        WHERE JDSR.SETID = JBCDDES.SETID
                        AND JDSR.JOBCODE = JBCDDES.JOBCODE
                        AND JDSR.EFFDT <= SYSDATE)

AND JBCDDES.JOBCODE = $Calculate_JobCode
AND JBCDDES.SETID = 'COMMN'

End-Select
!***********************************************************************
End-Procedure Get-Jobcode-Descr-Write
!***********************************************************************

!***********************************************************************
Begin-Procedure Open-File
!***********************************************************************

MOVE $CURRENT-DATE TO $CURRDT 'MMDDYY'
        ENCODE '<012>' INTO $NEXT
        encode '<009>' into $delim


   IF $sqr-platform='UNIX'
        Let $path='{OUTFILE}'
   else
        Let $path = '\\corp.gianteagle.com\common\HR\HRPS\Secure\Annual_Bonus\'
   End-if

   move #prcs_process_instance to $Process_instance
   Let $File_Name = 'gexpy091'
   Let $file = $path ||Lower($File_Name)||'_'|| $Prcs_Process_instance || '.xls'


   #debug8 Show '$file:' $file

  Open $file
       As 1
       For-Writing
       Record=1000:Vary
!***********************************************************************
End-Procedure Open-File
!***********************************************************************


!***********************************************************************
Begin-Procedure Print-header
!***********************************************************************
    encode '<009>' into $tab


    Let $delim = $tab
!Show  'printing header'
    string '' '' '' '' 'CORPORATE ANNUAL BONUS REPORT' '' '' '' '' '' '' '' '' '' '' by $delim into $string_col1
    write 1 from $string_col1

    string 'GEXPY091' '' '' '' 'CORPORATE ANNUAL BONUS REPORT' '' '' '' '' '' '' '' '' '' '' by $delim into $string_col2
    write 1 from $string_col2


    STRING 'Name ' 'Emplid ' ' Empl_Rcd '  ' Store Dept '  ' Job Code' ' Job Title ' ' Hire Date ' ' Salary ' ' Home Deptid ' ' Bonus Deptid' ' Grade' ' 75% Pre-Tax Bonus Amount ' ' 25% STS Bonus Amount ' ' Final Bonus Amount '  ' Mode ' ' TimeStamp ' ' Comments ' by $delim into $string_cols
    write 1 from $string_cols
!***********************************************************************
End-Procedure Print-header
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-Bonus-Already-Calculated
!***********************************************************************
#debug9 Show  '***  Check-Bonus-Already-Calculated   *** '

    Let $Bonus_Calculated = 'N'

    If $Calculate_Grade = ''
        Let $Calculate_Grade = ' '
    End-if

Begin-Select
BON.EMPLID

        Let $Bonus_Calculated = 'Y'

FROM PS_GEX_EMPL_BONUS BON
WHERE BON.EMPLID        = $Emplid
AND BON.EMPL_RCD        = #Empl_Rcd_Nbr
AND BON.GEX_BONUS_YEAR  = #Year
AND BON.DEPTID          = $Deptid
AND BON.EMPL_TYPE       = $Empl_Type
AND BON.BUDGET_DEPTID   = $max_duration_deptid
AND BON.JOBCODE         = $Calculate_JobCode
AND BON.GRADE           = $Calculate_Grade      !VENDAXG Added for Bonus Processing 2011 on 06/06/2011

End-Select
!***********************************************************************
End-Procedure Check-Bonus-Already-Calculated
!***********************************************************************

!***********************************************************************
Begin-Procedure Update-Bonus-Amount
!***********************************************************************
#debug9 Show  '***  Update-Bonus-Amount   *** '

    If $Reports_to = ''
        Let $Reports_to = '00019333'
    End-if
    If $Calculate_Grade = ''
        Let $Calculate_Grade = ' '
    End-if

Begin-Sql

UPDATE PS_GEX_EMPL_BONUS BONUPD

SET BONUPD.GEX_MIN_BONUS_PCT = #Current_Min_Pct,
    BONUPD.GEX_TAR_BONUS_PCT = #Current_Tar_Pct,
    BONUPD.GEX_MAX_BONUS_PCT = #Current_Max_Pct,
    BONUPD.GEX_BONUS_AMT     = #Current_Bonus_Amt,
    BONUPD.GEX_BONUS_AMT2    = #Current_Bonus_Amt_2,
    BONUPD.ANNUAL_RT         = #Annual_Rt,
    BONUPD.GEX_FNAL_BONUS_AMT= #Current_Bonus_Amt_Total,
    BONUPD.REPORTS_TO        = $Reports_to,
    BONUPD.POSITION_NBR      = $Calculate_Position_Nbr,
    BONUPD.GEX_BONUS_GROUP   = 'BG06',
    BONUPD.GEX_BONUS_PCT_USED= #Gex_Bonus_Pct_Used,
    BONUPD.GEX_BONUS_PCT2_USE= #Gex_Bonus_Pct_Used_2,
    BONUPD.GRADE             = $Calculate_Grade,
    BONUPD.STD_HOURS         = #Gex_Std_Hours,
    BONUPD.HOURLY_RT         = #hourly_rt,
    BONUPD.GEX_WEEKLY_RT     = #weekly_rt,
    BONUPD.GEX_WEEKLY_RT_1_5 = #weekly_rt_1_5,
    BONUPD.GEX_WEEKLY_RT_2   = #weekly_rt_2

WHERE BONUPD.EMPLID             = $Emplid
AND BONUPD.EMPL_RCD             = #Empl_Rcd_Nbr
AND BONUPD.GEX_BONUS_YEAR       = #Year
AND BONUPD.DEPTID               = $Deptid
AND BONUPD.EMPL_TYPE            = $Empl_Type
AND BONUPD.BUDGET_DEPTID        = $Max_Duration_Deptid
AND BONUPD.JOBCODE              = $Calculate_JobCode
AND BONUPD.GRADE                = $Calculate_Grade      !VENDAXG Added for Bonus Processing 2011 on 06/06/2011

End-Sql
!***********************************************************************
End-Procedure Update-Bonus-Amount
!***********************************************************************

!***********************************************************************
Begin-Procedure P270-Insert-GEX-Empl-Bonus-PCT
!***********************************************************************

#debug8 Show 'P270-Insert-GEX-Empl-Bonus  Emplid : '$Emplid ' Empl Rcd : '#Empl_Rcd_Nbr ' Bonus Year :'#Year ' Home Dept : '$Deptid ' Empl Type :'$Empl_Type ' Budget Dept : '$max_duration_deptid ' Jobcode :' $Jobcd ' Name :'$Name ' Annual Rate: '  #annual_rt ' Bonus Minimum % :'#Current_Min_Pct ' Targer % : '#Current_Tar_Pct ' Maximum % :'#Current_Max_Pct ' Bonus Amount :'#Current_Bonus_Amt ' Retorts To: '$Reports_to ' Hire date : '$Last_Hire_Dt
#debug8 Show 'Calculate_Position_Nbr :' $Calculate_Position_Nbr '  #Gex_Bonus_Pct_Used : '#Gex_Bonus_Pct_Used ' $Calculate_Grade :'$Calculate_Grade  ' Gex_Std_Hours : '#Gex_Std_Hours ' Gex_Fnal_Bonus : '#Current_Bonus_Amt_Total
If $max_duration_deptid = ''
Let $max_duration_deptid = 'Dumy'
End-if
!Vendaxg Added for Bonus Processing 2011 on 05/31/2011 - Begin
If $Reports_to = ''
        Let $Reports_to = '00019333'
End-if
If $Calculate_Grade = ''
        Let $Calculate_Grade = ' '
End-if
!Vendaxg Added for Bonus Processing 2011 on 05/31/2011 - End
!1289792 -- GEXHR_BONUS2017 - To skip the excluded jobcode - Begin
let #isExcludedJobcode = instr($GEXXX916_Exclude_Jobcode_Display_Criteria, $Calculate_JobCode, 1)

if #isExcludedJobcode = 0 
!1289792 -- GEXHR_BONUS2017 - To skip the excluded jobcode - End
Begin-SQL
Insert Into ps_gex_empl_bonus
           (EMPLID
           ,EMPL_RCD
           ,GEX_BONUS_YEAR
           ,DEPTID
           ,EMPL_TYPE
           ,BUDGET_DEPTID
           ,JOBCODE
           ,POSITION_NBR
           ,NAME,ANNUAL_RT
           ,GEX_MIN_BONUS_PCT
           ,GEX_TAR_BONUS_PCT
           ,GEX_MAX_BONUS_PCT
           ,GEX_EMPL_OVERRIDE
           ,GEX_CSI_ADJ_PCT
           ,GEX_BONUS_PCT_USED
           ,GEX_BONUS_PCT2_USE  !ISDVMZA -- GEXHR_848_E161362_BONUS2014
           ,GEX_BONUS_STATUS
           ,GEX_BONUS_AMT
           ,GEX_BONUS_AMT2      !ISDVMZA -- GEXHR_848_E161362_BONUS2014
           ,GEX_FNAL_BONUS_AMT
           ,GEX_BONUS_GROUP
           ,GEX_BONUS_AWARD_DT
           ,GEX_BONUS_IND
           ,REPORTS_TO
           ,COMMENTS_BY_NAME
           ,STD_HOURS
           ,GRADE
           ,HOURLY_RT
           ,GEX_WEEKLY_RT
           ,GEX_WEEKLY_RT_1_5
           ,GEX_WEEKLY_RT_2
           ,SUBMITTED
           ,SUBMITTED_DT
           ,APPROVER_ID
           ,APPROVED
           ,APPROVEDTTM
           ,PROCESSED
           ,PROCESS_DT
           ,COMPLETE_FLAG
           ,PROCESS_NAME      !ISDVMZA -- GEXHR_848_E161362_BONUS2014
           ,COMMENTS)
    Values ($Emplid
            ,#Empl_Rcd_Nbr
            ,#Year
            ,$Deptid
            ,$Empl_Type
            ,$Max_Duration_Deptid
            ,$Calculate_JobCode
            ,$Calculate_Position_Nbr
            ,$Name
            ,#Annual_Rt
            ,#Current_Min_Pct
            ,#Current_Tar_Pct
            ,#Current_Max_Pct
            ,'N'
            ,0
            ,#Gex_Bonus_Pct_Used
            ,#Gex_Bonus_Pct_Used_2  !ISDVMZA -- GEXHR_848_E161362_BONUS2014
           ,'2'
            ,#Current_Bonus_Amt
            ,#Current_Bonus_Amt_2   !ISDVMZA -- GEXHR_848_E161362_BONUS2014
            ,#Current_Bonus_Amt_Total
            ,'BG06'
            ,null
            ,'A'
            ,$Reports_to
            , ' '
            ,#Gex_Std_Hours
            ,$Calculate_Grade
            ,#hourly_rt
            ,#weekly_rt
            ,#weekly_rt_1_5
            ,#weekly_rt_2
            ,' '
            ,sysdate
            ,' '
            ,' '
            ,sysdate
            ,' '
            ,sysdate
            ,' '
            ,'GEXPY091'             !ISDVMZA -- GEXHR_848_E161362_BONUS2014
            ,' ')
End-SQL
else
#debug8 show 'Jobcode : ' $Calculate_JobCode ' was excluded and hence skipped'
End-if                              !1289792 -- GEXHR_BONUS2017 - To not write the excluded jobcode
!***********************************************************************
End-Procedure P270-Insert-GEX-Empl-Bonus-PCT
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-RC-Emplid
!***********************************************************************
#debug9 Show  '***  Get-RC-Emplid   *** '

Let $OprID                = '''' || $Prcs_OprID       || ''''
Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
Let $RC_EmplID_Found = 'N'

Begin-Select
GEX_RC_EMPLID.EMPLID

  Let $Run_Emplid = Ltrim(Rtrim(&GEX_RC_EMPLID.EMPLID,' '),' ')
  If $Run_Emplid <> ''
        Let $RC_EmplID_Found = 'Y'
  End-if

From  PS_GEX_RC_BON_EMPL GEX_RC_EMPLID

Where GEX_RC_EMPLID.OPRID                    = [$OprID]
And   GEX_RC_EMPLID.RUN_CNTL_ID              = [$Run_Cntl_ID]

End-Select

#debug9 Show  '$RC_EmplID_Found = ' $RC_EmplID_Found
!***********************************************************************
End-Procedure Get-RC-Emplid
!***********************************************************************

!***********************************************************************
Begin-Procedure Select-RC-EmplID
!***********************************************************************
#debug9 Show  '***  Select-RC-Emplid   *** '
Let $OprID                = '''' || $Prcs_OprID       || ''''
Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''

Begin-Select
GEX_RC_EMPLID1.EMPLID

     Let $Emplid = Ltrim(rtrim(&GEX_RC_EMPLID1.EMPLID,' '),' ')

     If $Emplid <> ''
         Do Insert-Emplid
     End-if

From  PS_GEX_RC_BON_EMPL GEX_RC_EMPLID1

Where GEX_RC_EMPLID1.OPRID                    = $Prcs_OprID
And   GEX_RC_EMPLID1.RUN_CNTL_ID              = $Prcs_Run_Cntl_ID

End-Select

!***********************************************************************
End-Procedure Select-RC-EmplID
!***********************************************************************

!***********************************************************************
Begin-Procedure Gex-EE-Exception-Pct
!***********************************************************************
#debug9 Show  '***  Gex-EE-Exception-Pct   *** '
Let $Exception_Found = 'N'
Let $PCTFOUND='N'
Let #current_min_pct = 0
Let #current_tar_pct = 0
Let #current_max_pct = 0
Let #current_mid_one = 0
Let #current_mid_two = 0

Begin-Select
EXCP.GEX_MIN_BONUS_PCT
EXCP.GEX_TAR_BONUS_PCT
EXCP.GEX_MAX_BONUS_PCT

      Let $PCTFOUND='Y'
      Let $Exception_Found = 'Y'
      #debug8 Show 'Exception Bonus Percentage found : '$Exception_Found
      Let #current_min_pct   = &EXCP.GEX_MIN_BONUS_PCT
      Let #current_tar_pct   = &EXCP.GEX_TAR_BONUS_PCT
      Let #current_max_pct   = &EXCP.GEX_MAX_BONUS_PCT

      !Let #current_mid_one     = (#current_min_pct + #current_tar_pct) / 2
      !Let #current_mid_two     = (#current_tar_pct + #current_max_pct) / 2

FROM PS_GEX_TM_BON_EXCP EXCP
WHERE  EXCP.EMPLID = $Emplid
AND EXCP.EMPL_RCD = #Empl_Rcd_Nbr
AND EXCP.YEAR = #Current_Year
AND EXCP.GEX_BONUS_GROUP = 'BG06'

End-Select
!***********************************************************************
End-Procedure Gex-EE-Exception-Pct
!***********************************************************************

!***********************************************************************
Begin-Procedure Print-Report-Mode2
!***********************************************************************
Let #type_previous_bonus         = 0
Let #type_previous_bonus_2       = 0
Let #type_previous_bonus_total   = 0
Let #type_current_bonus          = 0
Let #type_current_bonus_2        = 0
Let #type_current_bonus_total    = 0
Let #deptid_previous_bonus       = 0
Let #deptid_previous_bonus_2     = 0
Let #deptid_previous_bonus_total = 0
Let #deptid_current_bonus        = 0
Let #deptid_current_bonus_2      = 0
Let #deptid_current_bonus_total  = 0
Let #report_previous_bonus       = 0
Let #report_previous_bonus_2     = 0
Let #report_previous_bonus_total = 0
Let #report_current_bonus        = 0
Let #report_current_bonus_2      = 0
Let #report_current_bonus_total  = 0
Let #type-count = 0
Let #deptid-count = 0

Begin-Select
REPORT.DEPTID     ()  On-Break  Level=1
                           Print=Never

REPORT.EMPL_TYPE  ()  On-Break  Level=2
                           Print=Never
                           Before=P280-Empl-Type-Totals

REPORT.NAME
REPORT.EMPLID
REPORT.EMPL_RCD
REPORT.ANNUAL_RT
REPORT.GEX_MIN_BONUS_PCT
REPORT.GEX_TAR_BONUS_PCT
REPORT.GEX_MAX_BONUS_PCT
REPORT.GEX_BONUS_PCT_USED
REPORT.GEX_BONUS_AMT
REPORT.GEX_BONUS_PCT2_USE
REPORT.GEX_BONUS_AMT2
REPORT.BUDGET_DEPTID
REPORT.JOBCODE
REPORT.GEX_FNAL_BONUS_AMT
REPORT.GEX_WEEKLY_RT_1_5
REPORT.GEX_WEEKLY_RT_2
REPORT.HOURLY_RT
REPORT.GEX_WEEKLY_RT
JOBREP.LAST_HIRE_DT

        Let $Emplid              = &REPORT.EMPLID
        Let #empl_rcd_nbr        = &REPORT.EMPL_RCD
        Let $Deptid              = &REPORT.DEPTID
        !Let $Last_hire_Dt       = &J2.LAST_HIRE_DT
        Let $Empl_Type           = &REPORT.EMPL_TYPE
        Let $Hire_Dt             = &JOBREP.LAST_HIRE_DT
        Let $Name                = &REPORT.NAME
        Let #Current_Min_Pct     = &REPORT.GEX_MIN_BONUS_PCT
        Let #Current_Tar_Pct     = &REPORT.GEX_TAR_BONUS_PCT
        Let #Current_Max_Pct     = &REPORT.GEX_MAX_BONUS_PCT
        Let #Bonus_Pct_USed      = &REPORT.GEX_BONUS_PCT_USED
        Let #Current_Bonus_Amt   = &REPORT.GEX_BONUS_AMT
        Let #Bonus_Pct_Used_2    = &REPORT.GEX_BONUS_PCT2_USE
        Let #Current_Bonus_Amt_2 = &REPORT.GEX_BONUS_AMT2
        Let $Budget_Deptid       = &REPORT.BUDGET_DEPTID
        Let $Calculate_JobCode   = &REPORT.JOBCODE
        Let #Annual_rt           = &REPORT.ANNUAL_RT
        Let #Current_Bonus_Amt_Total  = &REPORT.GEX_FNAL_BONUS_AMT
!        Let #Final_Bonus_Amount  = &REPORT.GEX_FNAL_BONUS_AMT
        Let #weekly_rt_1         = &REPORT.GEX_WEEKLY_RT_1_5
        Let #weekly_rt_2         = &REPORT.GEX_WEEKLY_RT_2
        Let #hourly_rt           = &REPORT.HOURLY_RT
        Let #weekly_rt           = &REPORT.GEX_WEEKLY_RT

        Add 1                         To #type-count
        Add 1                         To #deptid-count
        Add #previous_bonus_amt       To #type_previous_bonus
        Add #previous_bonus_amt_2     To #type_previous_bonus_2
        Add #previous_bonus_amt_total To #type_previous_bonus_total
        Add #Current_Bonus_Amt        To #type_current_bonus
        Add #Current_Bonus_Amt_2      To #type_current_bonus_2
        Add #Current_Bonus_Amt_Total  To #type_current_bonus_total
!        Add #Final_Bonus_Amount   To #type_current_bonus

        Add #previous_bonus_amt       To #deptid_previous_bonus
        Add #previous_bonus_amt_2     To #deptid_previous_bonus_2
        Add #previous_bonus_amt_total To #deptid_previous_bonus_total
        Add #Current_Bonus_Amt        To #deptid_current_bonus
        Add #Current_Bonus_Amt_2      To #deptid_current_bonus_2
        Add #Current_Bonus_Amt_Total  To #deptid_current_bonus_total
!        Add #Final_Bonus_Amount   To #deptid_current_bonus

        Add #previous_bonus_amt       To #report_previous_bonus
        Add #previous_bonus_amt_2     To #report_previous_bonus_2
        Add #previous_bonus_amt_total To #report_previous_bonus_total
        Add #Current_Bonus_Amt        To #report_current_bonus
        Add #Current_Bonus_Amt_2      To #report_current_bonus_2
        Add #Current_Bonus_Amt_Total  To #report_current_bonus_total
!        Add #Final_Bonus_Amount   To #report_current_bonus

        Do P290-Print-Record

FROM PS_GEX_EMPL_BONUS REPORT, PS_JOB JOBREP
WHERE REPORT.GEX_BONUS_YEAR = #Current_Year
AND REPORT.EMPLID = JOBREP.EMPLID
AND REPORT.EMPL_RCD = JOBREP.EMPL_RCD
AND JOBREP.EFFDT = (SELECT MAX(JOBREP1.EFFDT) FROM PS_JOB JOBREP1
                        WHERE JOBREP.EMPLID = JOBREP1.EMPLID
                        AND JOBREP.EMPL_RCD = JOBREP1.EMPL_RCD
                        AND JOBREP1.EFFDT<$asofdate)
AND JOBREP.EFFSEQ = (SELECT MAX(JOBREP2.EFFSEQ) FROM PS_JOB JOBREP2
                        WHERE JOBREP.EMPLID = JOBREP2.EMPLID
                        AND JOBREP.EMPL_RCD = JOBREP2.EMPL_RCD
                        AND JOBREP.EFFDT = JOBREP2.EFFDT)
AND REPORT.GEX_BONUS_IND = 'A'
AND REPORT.EMPLID IN ( SELECT DISTINCT(T.EMPLID) FROM PS_GEX_RC_GEXPY212 T )
ORDER BY REPORT.DEPTID, REPORT.EMPL_TYPE, REPORT.NAME
End-Select
!***********************************************************************
End-Procedure Print-Report-Mode2
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-Valid-Reports-To
!***********************************************************************
Let $Employee_Found_in_Position = 'N'
Begin-Select
POS.EMPLID

        Let $Employee_Found_in_Position = 'Y'

FROM PS_JOB POS
WHERE POS.EFFDT = (SELECT MAX(POS1.EFFDT) FROM PS_JOB POS1
                        WHERE POS.EMPLID = POS1.EMPLID
                        AND   POS.EMPL_RCD = POS1.EMPL_RCD
                        AND   POS1.EFFDT <=SYSDATE)
AND POS.EFFSEQ  = (SELECT MAX(POS2.EFFSEQ) FROM PS_JOB POS2
                        WHERE POS.EMPLID = POS2.EMPLID
                        AND   POS.EMPL_RCD = POS2.EMPL_RCD
                        AND   POS.EFFDT = POS2.EFFDT)
AND POS.EMPL_STATUS IN ('A','L','P','S')
AND POS.POSITION_NBR = $Reports_to
End-Select
!***********************************************************************
End-Procedure Check-Valid-Reports-To
!***********************************************************************
!***********************************************************************
Begin-Procedure Get-Position-Reports-To
!***********************************************************************
Let $Reports_to_Position = ''
Begin-Select
REP.REPORTS_TO

        Let $Reports_to_Position = &REP.REPORTS_TO

FROM PS_POSITION_DATA REP
WHERE REP.EFFDT = (SELECT MAX(REP1.EFFDT) FROM PS_POSITION_DATA REP1
                        WHERE REP.POSITION_NBR = REP1.POSITION_NBR
                        AND REP1.EFFDT <= SYSDATE)
AND REP.POSITION_NBR = $Reports_to

End-Select

!***********************************************************************
End-Procedure Get-Position-Reports-To
!***********************************************************************
!***********************************************************************
Begin-Procedure Check-Delegation
!***********************************************************************
Let $Delegation_Found = 'N'
Begin-Select
DELE.ORIGINATOR_ID

        Let $Delegation_Found = 'Y'
        Let $New_Reports_to = &DELE.ORIGINATOR_ID

FROM PS_GEX_APPR_DELG DELE
WHERE DELE.MANAGER_ID = $Reports_to
AND   DELE.DEPTID     = $Deptid
AND   DELE.GEX_PROCESSNAME = '002'
AND   DELE.END_DATE >= sysdate
End-Select
!***********************************************************************
End-Procedure Check-Delegation
!***********************************************************************

!Vendaxg Added for Bonus Processing 2011 on 05/26/2011 - End
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx913.sqc'  !Get union code multiple row table
#include 'gexxx916.sqc'  !Get jobcode multiple row table
#include 'gexxx930.sqc'  !Get empl type multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls

#include 'getcodta.sqc'  !Get-Company-Data
#include 'getdptnm.sqc'  !Get-Department-Name
#include 'getactnm.sqc'  !Get-Acct-cd-descr procedure
#include 'askaod.sqc'    !Get AsOfDate
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#include 'hrrnctl1.sqc'  !Get run control parameter values

