!***********************************************************************
!  GEXPY656:  Trustmark Life Insurance Deduction                       *  
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       * 
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY656:  	Trustmark Life Insurance Deduction                     *
!		(Based on GEXPY651)                                    *
!                                                                      *
! Narrative:	Creates a report and file for the Trustmark Life       *
!               Insurance Company.                                     *
!                                                                      *
! #Debugx Used:	#debug9 paragraph trace                                *
!			#debug8 key variable values                    *
!			#debug7 data returned from sql calls           *
! 	                                                               *
! SQL Tables:           PS_JOB                                         *
!			PS_PERSONAL_DATA 	                       *
!			PS_EMPLOYMENT    	                       *
!			PS_GEX_DEPT_TBL  	                       *
!			PS_PAY_DEDUCTION 	                       *
!			PS_JOBCODE_TBL    	                       *
! 	                                                               *
! Normally Run:	Monthly                                                *
! 	                                                               *
! Prerequisite: 	None                                           *
! 	                                                               *
! Entered Run                                                          *
! Control Parms:	FOR WHERE CLAUSE:                              *
! 	                                                               *
!			Company  	 Franchise companies to be     *
!                                        entered and maintained by user*
! 	                                                               *
!			As Of Date	Allow for entry or default to  *
!                                       today's date.	               *
! 	                                                               *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! ID#       INITIALS  DATE              DESCRIPTION OF THE CHANGE      *
!***********************************************************************
!   CSR#                                                               *
!                                                                      *
! HR10689   CWB       05/14/2004        Initial creation.              *
!                                       Based on GEXPY651.             *
!                                                                      *
! HR10751   CWB       07/01/2004        Changed logic to print only the*
!                                       sum of ded_cur for each emp.   *             
!                                                                      *
! HR11041   NPK       08/01/2006        Changed from weekly to monthly *
!                                                                      * 
!          GEX-TLL    04/22/2008        HCM 9.0 upgrade changes        *  
!          ISDVDZK    05/20/2009       Added the Code as per the       *
!                                      S3#12755716 on 05/20/2009       *                                            
!***********************************************************************

!selection criteria
#define #x000_col_selection_criteria_a 	2
#define #x000_col_selection_criteria_b 	5
!#Define OUTFILE  /apps/hr/hrms90/hrdev90/outgoing/	!For testing
!line 1
#define #x000_col_emplid                02
#define #x000_col_name                  13

#define #x000_col_company		44  !02
#define #x000_col_deptid		53  !06
!#define #x000_col_union_cd		61  !11
#define #x000_col_empl_status		61  !17
#define #x000_col_hire_date     	70  !21  
#define #x000_col_termination_dt	82  !30
!#define #x000_col_birth_dt	       104  !39
!#define #x000_col_hourly_rt	       117  !88
!#define #x000_col_empl_type            128  !95
#define #x000_col_ded_cur              104

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'  !Printer and page-size initialization

!***********************************************************************
begin-heading 7

#Include 'stdhdg01.sqc'

 let $x000_ped = 'Pay End Date: '|| $X000_REPORT_HEADING_PAY_END_DT
 print $x000_ped                    (4,1) 

 let $x000_temp_out =  'Report as of ' || $X000_REPORT_HEADING_ASOFDATE 
 print $x000_temp_out 	            (4,) center 

 
!line 1
 print 'Name'         	   (+2,{#x000_col_name})	
 print 'Emplid'	           (0,{#x000_col_emplid})
 print 'Company'	   (0,{#x000_col_company})
 print 'Deptid'        	   (0,{#x000_col_deptid})
 print 'Emp Stat'          (0,{#x000_col_empl_status})
 print 'Hire Date'         (0,{#x000_col_hire_date})
 print 'Term Date'         (0,{#x000_col_termination_dt})
 print ' Deduction Amt'    (0,{#x000_col_ded_cur})

end-heading


!***********************************************************************
begin-report
!***********************************************************************
#debug9 show 'begin-report'

  do Init-DateTime
  do Init-Number
  do Create-work-table
  do Get-Current-DateTime
 
  do StdAPI-Init
  do P010-Init-Variables
  do P100-main-select

  do Mail-the-file

  date-time () mm/dd/yyyy &dayended
  date-time () hh:mi:ss &timeended
  show 'Report ended on ' &dayended ' at '&timeended

  do StdAPI-Term
  do Reset

  show 'Successful End of Report'

end-report


!***********************************************************************
begin-procedure P010-Init-Variables
!***********************************************************************
#debug9 show 'P010-Init-Variables'

  do Get-Calendar-Year-Id

  let $x000_new_page_flag = 'N'

  let $ReportID    = 'GEXPY656'
  let $ReportTitle = 'Trustmark Life Insurance Deduction'
  let $Country     = 'USA'
  let $first_pass  = 'Y'

  let $Misc_ID     = ' '
  let $Filler76    = ' '

  show '$ReportID=' $ReportID 
  show '$ReportTitle=' $ReportTitle
  date-time () mm/dd/yyyy &dayBegan
  date-time () hh:mi:ss &timeBegan
  show 'Report Began on ' &daybegan ' at '&timebegan
 
  Let $GEXXX900_Company_Alias  = 'J.COMPANY'
  Let $GEXXX919_DEDCD_Alias    = 'DED.DEDCD'

!RUN CONTROL LOGIC
  if $Prcs_Process_Instance = ''
        display 'The Unix command logic requires this process to be run online.'
	do GEXXX950-Input-Parameters
        do get-dedcd-input
  else
 
!	get parameters from single row run control record 
	Do GEXXX922-Select-Parameters
      let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
      if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
        let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
      end-if
      do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')

!	get parameters from multiples run control record
    	Let $GEXXX900_Company_Alias  = 'J.COMPANY'                           

    Do GEXXX900-Select-Company-Parameters 
    Do GEXXX919-Select-DEDCD-Parameters

      show '$Prcs_Process_Instance =' $Prcs_Process_Instance 

  end-if

  do P001-Select-Pay-End-Dt
  show 'Pay End Dt: ' $pay_end_dt

  let $year4 = '1'
  do Format-DateTime($pay_end_dt, $X000_PAY_DT,{DEFYMD}, '', '')
  show $X000_PAY_DT

! HR11041   NPK       08/01/2006  Fetched the balance year, qtr, period

  let $balance_year = substr($X000_PAY_DT,1,4)
  let $balance_period = substr($X000_PAY_DT,6,2)
  let $bal_per1 = substr($balance_period,1,1)
  if $bal_per1 = '0'
     let $balance_period = substr($balance_period,2,1)
  end-if
  
  if $balance_period = '1' or $balance_period = '2' or $balance_period = '3'
       let $balance_qtr = '1'
  end-if
  if $balance_period = '4' or $balance_period = '5' or $balance_period = '6'
       let $balance_qtr = '2'
  end-if
  if $balance_period = '7' or $balance_period = '8' or $balance_period = '9'
       let $balance_qtr = '3'
  end-if
  if $balance_period = '10' or $balance_period = '11' or $balance_period = '12'
       let $balance_qtr = '4'
  end-if

  show $balance_year ' ' $balance_period ' ' $balance_qtr

! HR11041   NPK       08/01/2006  Fetched the balance year, qtr, period


  let $year4 = '1'
  do Format-DateTime($pay_end_dt, $X000_REPORT_HEADING_PAY_END_DT,{DEFYMD}, '', '')
!   show 'pay end date: ' $X000_REPORT_HEADING_PAY_END_DT
   let $ped_yy = substr($X000_REPORT_HEADING_PAY_END_DT,1,4)
   let $ped_mm = substr($X000_REPORT_HEADING_PAY_END_DT,6,2)
   let $ped_dd = substr($X000_REPORT_HEADING_PAY_END_DT,9,2)
   let $X000_REPORT_HEADING_PAY_END_DT = $ped_mm||'/'||$ped_dd||'/'||$ped_yy
!   show 'reformatted: ' $X000_REPORT_HEADING_PAY_END_DT

!default the selection date to today, if not entered by user
    if rtrim($X000_WHERE_SELECT_ASOFDATE, ' ' ) = ''
       let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
    end-if

   let $year4 = '1' 
   do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFYMD}, '', '')
!   show 'header date: ' $X000_REPORT_HEADING_ASOFDATE
   let $header_yy = substr($X000_REPORT_HEADING_ASOFDATE,1,4)
   let $header_mm = substr($X000_REPORT_HEADING_ASOFDATE,6,2)
   let $header_dd = substr($X000_REPORT_HEADING_ASOFDATE,9,2)
   let $X000_REPORT_HEADING_ASOFDATE = $header_mm||'/'||$header_dd||'/'||$header_yy
!   show 'reformatted: ' $X000_REPORT_HEADING_ASOFDATE


	show '$GEXXX900_INCLUDE_COMPANY_CRITERIA               =' $GEXXX900_INCLUDE_COMPANY_CRITERIA
 	show '$GEXXX919_INCLUDE_DEDCD_CRITERIA                 =' $GEXXX919_INCLUDE_DEDCD_CRITERIA         
        show '$X000_WHERE_SELECT_ASOFDATE                      =' $X000_WHERE_SELECT_ASOFDATE 

 	print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
	print '$Prcs_OPRID          ='                              (+1,{#x000_col_selection_criteria_b})
	print $Prcs_OPRID                                           (0,+2)
	print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
	print $PRCS_RUN_CNTL_ID                                     (0,+2)

 	print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,{#x000_col_selection_criteria_a})
 	print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
 	print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA            (0,+2)
	print '$GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA            ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA              (0,+2)

      print '$X000_WHERE_SELECT_ASOFDATE                         ='   (+1,{#x000_col_selection_criteria_b})
      print $X000_WHERE_SELECT_ASOFDATE                           (0,+2)
   
	print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,{#x000_col_selection_criteria_a})

  let $filename = '{OUTFILE}'||'gexpy656.dat'  
  !let $filename = '//apps/hr/hrms90/hrdev90/outgoing/'||'gexpy656.dat'  !GEX-TLL TESTING
  open $filename as 1
     for-writing record=153

  if #writestat != 0
    display 'Error Opening output file.  Program terminating.'
    stop
  end-if

 LET #PAGE-COUNT = 0
 NEW-PAGE
 LET #PAGE-COUNT = 1

end-procedure

Begin-procedure get-dedcd-input
  Let $DedCdString = ''''
  Display 'Enter Deduction Code or leave blank to exit.'
  While 1=1
    Input $In-DedCd Maxlen=6 'Deduction Code'
    Uppercase $In-DedCd
    If Rtrim($In-dedCd, ' ') = ''
      Concat '''' With $dedCdString
      Break
    End-If
    If $DedcdString <> ''''
      Concat ''',''' With $DedcdString
    End-If
    Concat $In-Dedcd With $DedCdString
  End-While

  If $DedcdString = ''''''
    Let $GEXXX919_INCLUDE_DEDCD_CRITERIA = '1=1'
    Let $GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX919_INCLUDE_DEDCD_CRITERIA = $GEXXX919_DEDCD_Alias || ' In (' || $DedcdString || ')'
    Let $GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA = $GEXXX919_INCLUDE_DEDCD_CRITERIA
  End-If
End-procedure

!********************************************
begin-procedure P100-main-select
!********************************************
#debug9 show 'P100-main-select'

!*********  convert $pay_end_dt (which looks like: 01-APR-2002) to look like:  01/04/2002
  Let $Year4 = '1'                                           !return 4 digit year
  Do Format-DateTime ($pay_end_dt, $paymmddyyyy, {DEFMDY}, '', '')

  let $pay_end_mm = substr($paymmddyyyy,1,2)
  let $pay_end_dd = substr($paymmddyyyy,4,2)
  let $pay_end_yy = substr($paymmddyyyy,7,4)
  let $pay_end = $pay_end_yy||$pay_end_mm||$pay_end_dd
  
  
  let $rowfound = 'N'

begin-SELECT 
J.COMPANY
J.PAYGROUP
J.DEPTID                
J.EMPLID                !() on-break                       ! HR11041   NPK       08/01/2006  commented out
                        !   print=never
                        !   after=after-emplid-change-1       
                        !   level=01                       ! HR11041   NPK       08/01/2006  commented out
J.EMPL_RCD               
J.EMPL_STATUS            
!C.PAY_END_DT  ! HR11041   NPK       08/01/2006  commented out
P.NAME      
EMP.HIRE_DT
EMP.TERMINATION_DT
!DED.DED_CUR   ! HR11041   NPK       08/01/2006  commented out          
  
  if $first_pass = 'Y'
     let $first_pass = 'N'
  end-if

  let $hire_date = &emp.hire_dt
  
  let $term_date = &EMP.TERMINATION_DT
  
 
  if rtrim($term_date,' ') <> ''
   let $status = 'T'
  else
  if &j.empl_status = 'L'
  or &j.empl_status = 'P'
    let $status = 'L'
  else 
    let $status = ' ' 
  end-if
  end-if 

  let $emplid = &j.emplid
  let $company = &j.company
  let $paygroup = &j.paygroup
  let $deptid = &j.deptid
  let $name = &p.name
  let $name = RTRIM($name,' ')
  let $empl_rcd = &J.EMPL_RCD     !ISDVDZK Added the Code as per the S3#12755716 on 05/20/2009 

 
 ! HR11041   NPK       08/01/2006  added the following 
  
  
  !ISDVDZK Added the Code as per the S3#12755716 on 05/20/2009 Start
  Do Get-EMPL-RCD
  
  If $EMPFOUND='Y'
   goto skip-process
  END-IF
  !ISDVDZK Added the Code as per the S3#12755716 on 05/20/2009 End
  
  
  Do Get-Ded-Mtd
  
  
 if #ded_cur = 0
      
     !Skip processing  
     
  else
    
    if (&J.COMPANY = $hold_company) and (&J.EMPLID = $hold_emplid) 
    let #empl_ded_cur=0    !GEX-TLL 04/22/2008 Added
    else 
       do After-emplid-Change-1
    end-if

  end-if

  let $hold_company = &J.COMPANY
  let $hold_emplid  = &J.EMPLID

 ! HR11041   NPK       08/01/2006  added the above

  !let #ded_cur = &ded.ded_cur    ! HR11041   NPK       08/01/2006  commented out
  !add #ded_cur to #empl_ded_cur  ! HR11041   NPK       08/01/2006  commented out
  !ISDVDZK Added the Code as per the S3#12755716 on 05/20/2009 start
  skip-process: 
  !ISDVDZK Added the Code as per the S3#12755716 on 05/20/2009 End
FROM  PS_JOB          	J,
      PS_PERSONAL_DATA 	P,
      PS_EMPLOYMENT 	EMP    !,
     ! PS_PAY_CHECK      C,      ! HR11041   NPK       08/01/2006  commented out
     ! PS_PAY_DEDUCTION  DED     ! HR11041   NPK       08/01/2006  commented out

WHERE P.EMPLID = J.EMPLID
! HR11041   NPK       08/01/2006  commented out
! AND c.emplid = j.emplid
! and c.company = j.company
! and c.deptid = j.deptid
 AND [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
! AND DED.COMPANY        = C.COMPANY
! AND DED.PAYGROUP       = C.PAYGROUP
! AND DED.PAGE_NUM       = C.PAGE_NUM
! AND DED.LINE_NUM       = C.LINE_NUM
! AND DED.SEPCHK         = C.SEPCHK
! AND DED.OFF_CYCLE      = C.OFF_CYCLE
! AND DED.PAY_END_DT     = C.PAY_END_DT
! AND [$GEXXX919_INCLUDE_DEDCD_CRITERIA]
! AND C.PAY_END_DT       = $pay_end_dt
! HR11041   NPK       08/01/2006  commented out
 AND J.EFFDT  =
   		(SELECT MAX(EFFDT)
       		FROM PS_JOB
      		WHERE EMPLID    = J.EMPLID
       		  AND EMPL_RCD  = J.EMPL_RCD
                  AND COMPANY   = J.COMPANY   ! HR11041   NPK       08/01/2006  Added this
       		  AND EFFDT    <= $pay_end_dt)
 AND J.EFFSEQ =
    		(SELECT MAX(EFFSEQ)
       		FROM PS_JOB
      		WHERE EMPLID  = J.EMPLID
       		AND EMPL_RCD  = J.EMPL_RCD
                AND COMPANY   = J.COMPANY   ! HR11041   NPK       08/01/2006  Added this
      		AND EFFDT     = J.EFFDT)
 !and J.EMPLID='270929011'
 AND J.EMPLID	     = EMP.EMPLID
 AND J.EMPL_RCD      = EMP.EMPL_RCD
ORDER BY J.EMPLID
					
end-SELECT

  if $rowfound = 'N'
    print '** NO DATA SELECTED FOR THIS REPORT RUN **'  (25,) center
  else
     do get-wt-data
     close 1
     do get-rpt-data 

     if #current-line > 55
        NEW-PAGE
     end-if

     print 'Report Totals:'   (+2,2)
     print #tot_empl_count    (0,20) EDIT 99,999
     let #ded_cur_tot = #ded_cur_tot / 100
     print #ded_cur_tot       (0,{#x000_col_ded_cur}) EDIT $$$,$$$,$$9.00
  end-if

  do Drop-Work-Table
End-Procedure

! HR11041   NPK       08/01/2006  Added new procedure to get DED_MTD
!********************************************
Begin-Procedure Get-Ded-Mtd
!********************************************
#debug9 show 'Get-Ded-Mtd'

  let #ded_cur = 0
 
begin-select
DED.DED_MTD

  let #ded_cur = &DED.DED_MTD
  add #ded_cur to #empl_ded_cur
  
FROM PS_DEDUCTION_BAL DED
WHERE DED.EMPLID         = &J.EMPLID
  AND DED.COMPANY        = &J.COMPANY
  AND DED.BALANCE_ID     = 'CY'
  AND DED.BALANCE_YEAR   = $balance_year
  AND DED.BALANCE_QTR    = $balance_qtr
  AND DED.BALANCE_PERIOD = $balance_period
  AND [$GEXXX919_INCLUDE_DEDCD_CRITERIA]
end-select


End-Procedure Get-Ded-Mtd
! HR11041   NPK       08/01/2006  Added new procedure to get DED_MTD

!ISDVDZK Added the Code as per the S3#12755716 on 05/20/2009 Start
!********************************************
Begin-Procedure Get-EMPL-RCD
!********************************************
 LET $EMPFOUND='N'
begin-select
JB.emplid
JB.empl_rcd
JB.effdt
JB.EMPL_STATUS

  IF &JB.EMPL_STATUS='T' 
    Do GET-ACT-EMPL
  END-IF


FROM PS_JOB JB where JB.EMPLID=$emplid and JB.EMPL_RCD=$empl_rcd and   JB.EFFDT=
(SELECT MAX(EFFDT)from PS_JOB JB1 where JB1.EMPLID=JB.EMPLID and JB1.EMPL_RCD=JB.EMPL_RCD)
end-select
End-Procedure


!********************************************
Begin-Procedure GET-ACT-EMPL
!********************************************
#debug9 show 'GET-ACT-EMPL'
 
begin-select
JC.emplid
JC.empl_rcd
JC.effdt
JC.EMPL_STATUS

 LET $EMPFOUND='Y'
   
 
FROM PS_JOB JC where JC.EMPLID=&JB.emplid  and   JC.EFFDT>&JB.effdt and JC.EMPL_RCD<>&JB.empl_rcd
and JC.EMPL_STATUS<>'T'
end-select

End-Procedure
!ISDVDZK Added the Code as per the S3#12755716 on 05/20/2009 End 

!*********************************************************************
Begin-procedure After-emplid-Change-1
!*********************************************************************

    if #empl_ded_cur = 0           ! CWB 07/01/2004
     !Skip processing
    else
  
      let $name = substr($name,1,40)

      let #empl_ded_cur = #empl_ded_cur * 100 
      move #empl_ded_cur to $ded_cur 099999999
  
      do insert-into-work-table

      let $rowfound = 'Y'
    end-if
    move 0 to #empl_ded_cur            ! CWB 07/01/2004
    move #empl_ded_cur to $ded_cur 099999999
    
end-procedure

!*********************************************************************
Begin-procedure Create-work-table
!*********************************************************************
#debug9 show 'Create-Work-Table'

 Let $tablename = 'PS_WT_GEXPY656'

begin-sql 
CREATE TABLE [$tablename] 
	(NAME		VARCHAR2(50)	NOT NULL,
	 EMPLID		VARCHAR2(11)	NOT NULL,
         EMPL_STATUS    VARCHAR2(1)     NOT NULL, 
         COMPANY        VARCHAR2(3)     NOT NULL, 
         PAYGROUP       VARCHAR2(3)     NOT NULL,
         DEPTID         VARCHAR2(10)    NOT NULL,
         HIRE_DT        DATE,
         TERMINATION_DT DATE,
         DED_CUR        NUMBER(10,2)    NOT NULL)
        TABLESPACE TE7TOOLS001

end-sql 
end-procedure

!*********************************************
begin-procedure Insert-into-work-table
!*********************************************
#debug9 show 'Insert-into-work-table'

Begin-SQL

Insert Into [$tablename]
   Values ($NAME,
           $EMPLID,
           $STATUS,
           $COMPANY,
           $PAYGROUP,
           $DEPTID,
           $HIRE_DATE,
           $TERM_DATE,
           $DED_CUR)  
end-sql 
end-procedure


!*********************************************************************
Begin-procedure get-wt-data
!*********************************************************************
#debug9 show 'Get-WT-Data'

Begin-select
WT.NAME
WT.EMPLID
WT.EMPL_STATUS
WT.TERMINATION_DT
sum(WT.DED_CUR) &WT.DED_CUR       ! HR11041   NPK       08/01/2006  Changed this to Sum

  let $w_name = substr(&wt.name,1,40)
  let $w_emplid = &wt.emplid
  let $w_status = &wt.empl_status
  let $w_term_date = &wt.termination_dt
   if rtrim($w_term_date,' ') = ''
     let $w_term_dt = ' '
   else
     let $year4 = '1' 
     do Format-DateTime($w_TERM_DATE, $W_term_dt,{DEFMDY}, '', '')
     let $dt_1 = substr($w_term_dt,1,2)
     let $dt_2 = substr($w_term_dt,4,2)
     let $dt_3 = substr($w_term_dt,7,4)
     let $w_term_dt = $dt_1||$dt_2||$dt_3 
   end-if
 
 
   move &WT.DED_CUR to #w_ded_CUR
!  let #ded_cur = #ded_cur * 100
  move #w_ded_cur to $w_ded_amt 099999999

    do P400-Write-Detail-Record
 
from [$tablename] WT
group by  ! HR11041   NPK       08/01/2006  Added the group by
WT.NAME,
WT.EMPLID,
WT.EMPL_STATUS,
WT.TERMINATION_DT
order by WT.EMPLID

end-select

end-procedure
!*********************************************************************
! Write Data Record 
!*********************************************************************
begin-procedure P400-Write-Detail-Record

  add 1 to #write_recs

  write 1 from $w_emplid:9               !Emplid
               $Misc_ID:10               !Spaces
	       $w_name:40                !Name - Last,First
               $w_status:1               !Status
	       $w_term_dt:8              !Termination Date mmddyyyy
               $w_ded_amt:9              !Deduction Amount
               $filler76:76              !Space

end-procedure

!*********************************************************************
Begin-procedure get-rpt-data
!*********************************************************************
#debug9 show 'Get-rpt-Data'

Begin-select
WTR.COMPANY                () on-break
                           print=never
                           after=after-company-change
                           level=01
WTR.PAYGROUP
WTR.DEPTID
WTR.NAME
WTR.EMPLID                 () on-break
                           print=never
                           after=after-emplid-change-2
                           level=02
WTR.EMPL_STATUS
WTR.HIRE_DT
WTR.TERMINATION_DT
WTR.DED_CUR

  let $wr_name = substr(&wtr.name,1,40)
  let $wr_emplid = &wtr.emplid
  let $wr_status = &wtr.empl_status
  let $wr_company = &wtr.company
  let $wr_deptid  = &wtr.deptid
  let $wr_hire_date = &wtr.hire_dt
  let $wr_term_date = &wtr.termination_dt
  move &WTr.DED_CUR to #wr_ded_CUR
  let $rpt_ded_cur = (#wr_ded_cur / 100)

  do P600-Write-Detail-Report-Line

from [$tablename] WTR
order by 
WTR.COMPANY,
WTR.PAYGROUP,
WTR.DEPTID,
WTR.EMPLID

end-select

end-procedure

!*********************************************************************
Begin-procedure After-Company-Change
!*********************************************************************
  let $out =  'Company '||$wr_company||' totals:' 
  print $out             (+2,2)
  print #company_emps    (,20) EDIT 99,999
  let #company_ded_cur = #company_ded_cur / 100
  print #company_ded_cur (,{#x000_col_ded_cur}) EDIT $$$,$$$,$$9.00
  new-page
  move 0 to #company_emps
  move 0 to #company_ded_cur

end-procedure

!*********************************************************************
Begin-procedure After-emplid-Change-2
!*********************************************************************
  
      add 1 to #company_emps 
      add 1 to #tot_empl_count

      add #wr_ded_cur to #company_ded_cur
      add #wr_ded_cur to #ded_cur_tot
    
end-procedure

!*********************************************
begin-procedure P600-Write-Detail-Report-Line
!*********************************************
#debug9 show  'P600-Write-Detail-Report-Line'

 if #current_line >= 55
    NEW-PAGE
 end-if

 print $WR_NAME    	(+1,{#x000_col_name},30)
 print $WR_EMPLID     	(0,{#x000_col_emplid})
 print $wr_COMPANY      (0,{#x000_col_company})
 print $wr_DEPTID       (0,{#x000_col_deptid})
 print $wr_STATUS	(0,{#x000_col_empl_status})

 let $hire_dt = $wr_HIRE_DATE
 if rtrim($hire_dt,' ') = ''
 else
   let $year4 = '1' 
   do Format-DateTime($HIRE_DT, $x600_emp_hire_dt,{DEFYMD}, '', '')
   let $hire_yy = substr($x600_emp_hire_dt,1,4)
   let $hire_mm = substr($x600_emp_hire_dt,6,2)
   let $hire_dd = substr($x600_emp_hire_dt,9,2)
   let $x600_emp_hire_dt = $hire_mm||'/'||$hire_dd||'/'||$hire_yy
   print $x600_emp_hire_dt 	(0,{#x000_col_hire_date})
 end-if

 let $termination_dt = $WR_TERM_DATE
 if rtrim($termination_dt,' ') = ''
 else
   let $year4 = '1' 
   do Format-DateTime($TERMINATION_DT, $x600_TERMINATION_DT,{DEFYMD}, '', '')
   let $term_yy = substr($x600_TERMINATION_DT,1,4)
   let $term_mm = substr($x600_TERMINATION_DT,6,2)
   let $term_dd = substr($x600_TERMINATION_DT,9,2)
   let $x600_TERMINATION_DT = $term_mm||'/'||$term_dd||'/'||$term_yy
   print $x600_TERMINATION_DT	(0,{#x000_col_termination_dt})
 end-if

 print $RPT_DED_CUR     (0,{#x000_col_ded_cur})  EDIT  999,999,999.99

end-procedure

!************************************
begin-procedure Drop-work-table
!************************************
#debug9 show 'Drop-work-table' 

begin-sql 
DROP TABLE [$tablename]
end-sql
end-procedure
!***********************************************************************
begin-procedure P001-Select-Pay-End-Dt
!***********************************************************************
begin-select loops=1
MAX(PC.PAY_END_DT)      &pay_end_dt
  move &pay_end_dt   to $pay_end_dt

FROM   PS_PAY_CALENDAR PC
WHERE  PC.PAY_END_DT <= $X000_WHERE_SELECT_ASOFDATE 
AND    PC.PAY_CONFIRM_RUN = 'Y'
end-select

begin-select
MIN(PC2.CHECK_DT)       &check_dt
  move &check_dt     to $check_dt

FROM PS_PAY_CALENDAR PC2
WHERE PC2.PAY_END_DT = $pay_end_dt
AND   PC2.PAY_CONFIRM_RUN = 'Y'
end-select

  display 'Last Confirmed Pay End Date: ' noline
  display $pay_end_dt
  display '                 Check Date: ' noline
  display $check_dt

end-procedure


!******************************************************************
Begin-Procedure Mail-the-file
!******************************************************************
   do copy-the-file
   do GEXXX951-Select-Oracle-Instance
   let $db_name = lower($GEXXX951_Oracle_Instance)
   Do GEXXX971-Select-Trans-Type-Parameters
   if ($GEXXX971_EMAIL_ADDR_CRITERIA = '') and ($GEXXX971_FTP_ADDR_CRITERIA = '')
      show 'Either no rows exist on GEX_INTFC_RULE/DATA for this Oprid/Run Control ID'
      show 'or the most current rows under this ID have been set to inactive. Data will'
      show 'not be sent.'
   else
      if $GEXXX971_GEX_TRANS_TYPE = 'E'
         show $GEXXX971_EMAIL_ADDR_CRITERIA
         show 'This is the email statement produced: '
            let $UNIX_MAIL_COMMAND = '/usr/local/bin/todos -v $PS_HOME/outgoing/py656.dat &&/usr/local/bin/mailer.pl "'
		||$GEXXX971_EMAIL_ADDR_CRITERIA||'" "GIANT EAGLE - TRUSTMARK MONTHLY FILE" '
		||'"$BINDIR/gexpy656_msg.sh" $PS_HOME/outgoing/py656.dat'
            show $UNIX_MAIL_COMMAND

            CALL SYSTEM USING $UNIX_MAIL_COMMAND #system_status
            
            if #system_status <> 0
               add 1 to #errorcount
               show 'eMail of py656.dat failed.'
               STOP
            else
               show 'py656.dat was emailed successfully'
               do remove-the-file 
            end-if

      end-if
      if $GEXXX971_GEX_TRANS_TYPE = 'F'
         show $GEXXX971_FTP_ADDR_CRITERIA
         show 'Need to insert a Call FTP shell script to run ftp'
      end-if
   end-if
End-Procedure

!*********************************************************************
begin-procedure copy-the-file
!*********************************************************************
! copies the file so that a DOS version can be created before mailing.

      let $copy_command = 'cp $PS_HOME/outgoing/gexpy656.dat $PS_HOME/outgoing/py656.dat' 
      show '$copy_command: ' $copy_command
      CALL SYSTEM USING $copy_command #sys_status
      if #sys_status <> 0
         let $copy_display_msg = 'ERROR - copy of gexpy656.dat to py656.dat did not work'
         display $copy_display_msg
	 display 'JOB failed'
	 stop
      end-if

end-procedure

!*********************************************************************
begin-procedure remove-the-file
!*********************************************************************

      let $rm_command = 'rm $PS_HOME/outgoing/py656.dat' 
      show '$rm_command: ' $rm_command
      CALL SYSTEM USING $rm_command #sys_status
      if #sys_status <> 0
         let $rm_display_msg = 'ERROR - removal of py656.dat did not work'
         display $rm_display_msg
	 display 'JOB failed'
	 stop
      end-if

end-procedure
!***********************************************************************
begin-procedure SQL-Error-Found($Proc_Name)
!***********************************************************************
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
end-procedure

!***********************************************************************
 
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
#Include 'getdednm.sqc'  !Get-Deduction-Name procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'reset.sqc'     !Reset 
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx919.sqc'  !Get dedcd multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls
#include 'gexxx951.sqc'  !Oracle Database Name 
#include 'gexxx971.sqc'  !Email and FTP Parameters
#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'gexdept.sqc'   !Get Original dept
#include 'rotname3.sqc'  !Split name into its components.
