!***********************************************************************

!  GEXHR054:  EEO-1 Report -- Federally specified format               *

!***********************************************************************

!  NOTE: THIS EEO-1 REPORT REVISED TO REFLECT REVISIONS APPROVED BY THE*

!        U.S. EQUAL OPPORTUNITY COMMISSION AS OF  09/1992              *

!***********************************************************************

!                                                                      *

!               Confidentiality Information:                           *

!                                                                      *

! This module is the confidential and proprietary information of       *

! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *

! in any form, by any means, in whole or in part, nor is it to be used *

! for any purpose other than that for which it is expressly provided   *

! without the written permission of PeopleSoft.                        *

!                                                                      *

! Copyright (c) 1988-1997 PeopleSoft, Inc. All Rights Reserved         *

!                                                                      *

!***********************************************************************

!                                                                      *

!  $Date:: 7/02/98 6:48p    $                                          *

!  $Revision:: 3            $                                          *

!  $Workfile:: PER016.SQR   $                                          *

!                                                                      *

!***********************************************************************

! Revision made on 5/17/96 includes the changes that allows  reporting *

! for 'Previously Reported Totals'.                                    *

!***********************************************************************

!Revision made on 9/8/96 includes the changes that allows reporting of *

!offices that have less than 50 employees                              *

!***********************************************************************

!Revision made on 02/01/99 to include the changes for the SIC -> NAICS *

!code conversion (incident #R-DLZ-V61PL)                               *

!***********************************************************************

!                         MODIFICATION HISTORY                         *

!***********************************************************************

! INITIALS	DATE		DESCRIPTION OF THE CHANGE              *

!***********************************************************************

! AXL		08/11/1999	Initial Creation 		       *

!               HR486           This is a copy of Psoft delivered      *

!                               PER016.SQR.  Code added to:            *

!				1) Prompt for Company/Division Code if *

!				   running from sqrw icon or           *

!				2) Get Cmpy/Div Cd from panel          *

!                                                                      *

!		09/14/1999	Commented out delivered code that was  *

!				limiting employee selection to         *

!				Regular Full Time only.                *

!                                                                      *

! SXK		11/23/1999	Changed from zip to postal             *

!                                                                      *

! SXK           11/29/1999      Changed to get ethnic_group from       *

!                               diversity                              *

!                                                                      *

! AXL           09/27/2000      Added new 7.5 columns for insert into  *

!                               ps_r_per016x.                          *

!                                                                      *

! AXL           10/16/2001      Copied join logic to ESTABLISHMENT TBL *

!                               from original Psoft version PER016.SQR *

!                               to stop Independant Depts from showing *

!                               up.  Took out RULE hints to improve    *

!                               performance.                           *

!                                                                      *

! CWB           08/04/2004      Added logic to create an ASCII file as *

!                               mandated by the EEOC for 2004.         *

!                                                                      *

! SRC           12/16/2004      Type 8 records on the EEO data file    *

!                               are incorrect- Added missing logic to  *

!                               write the correct values               *

!                                                                      *

! AXL           08/24/2005      Remove NEW-PAGE command that was       *

!                               causing unnecessary breaks.  Added     *

!                               delivered coded from PER016.sqr        *

!                               Added debug9 statements.               *

!                               Revisited outstanding bug that prevents*

!                               independents from printing.            *

!                                                                      *

! AXL            09/22/2005     Further modifications to allow sqr to  *

!                               process correctly whether run for IND  *

!                                                                      *

! DXS            09/13/2006     Change in procedure EEO1-Report in order*

!                               to print the consolidated report for   *

!                               non-independents.                      *

!								       *

! DXS		 09/29/2006	Run control setup change in Init-Report*

!				for running report via SQRW.           *

!				Code change in Increment-Array to report*

!				correct count for non-white females.

!

! VENDTKK       08/10/2007      Modification-GEXHR054 to correct the   *

!				format of the EEO-1 repor. Added columns*

!				for two or more races and for Hispanic *

!				ethnic groups .changed the file  format*

!				to add these to column values 	       *

!	                                                               *

! VENDTKK       11/16/2007      Modified ouupt file layout             *

! GEX-RBC       11/27/2007      Upgrade 9.0			       *

! GEX-MXT       03/31/2008      Ethnicity changes                      *

! ISDVMZA       05/06/2014      Update Report Type for less than 50 TMs*

! ISDVMZA       07/02/2014      Forced the program to print consolidated*

!                               Report for RIDC.                       *

! ISDVMZA       09/25/2015      Added FEIN as a new requirement for    *

!                               this year in posn 1311.                *

!***********************************************************************

#include 'setenv.sqc'    !Set environment

#include 'setup10.sqc'   !printer and page-size initialization







!************************************************************************

begin-report

!************************************************************************

  do Init-DateTime

  do Init-Number

  do Get-Current-DateTime

  do Init-Report

  ! CWB 02/02/2004 BEGIN

  do open-file

  ! CWB 02/02/2004 END

  do Process-Main

  !  do Print-Less-Than-50  ????????????

  ! CWB 02/02/2004 BEGIN

  do close-file

  ! CWB 02/02/2004 END



  date-time () mm/dd/yyyy &dayended

  date-time () hh:mi:ss &timeended

  !show 'Report ended on ' &dayended ' at '&timeended



  do Reset

  do Stdapi-Term

end-report



!************************************************************************

begin-Setup

!************************************************************************

  #include 'setupdb.sqc'

end-Setup



!************************************************************************

begin-procedure Init-Report

!************************************************************************



  Let $GEXXX907_Div_CD_Alias = 'GDT.GEX_COMPANY_DIV_CD'



  move 'GEXHR054' to $ReportID

  move 'EEO-1 Report' to $ReportTitle

  display $ReportId

  display $ReportTitle



  date-time () mm/dd/yyyy &dayBegan

  date-time () hh:mi:ss &timeBegan

  !show 'Report Began on ' &daybegan ' at '&timebegan



  do Init-Array



  do Stdapi-Init



  ! DXS, 09/29/06. Take run control params from the page.

  if $prcs_process_instance = ''

    	let $Prcs_Run_Cntl_ID = 'gexhr054'

	!testinglet $Prcs_OprID = 'ISDVDXS'

	let $Prcs_OprID = 'HRISPAP'	!VENDTKK  ITG-40829  08/11/2007

 end-if



    do GEXRCHR1-Select-Parameters

    Do GEXXX907-Select-Div-CD-Parameters

    let $FromDate  = RTRIM(&GEX_RC_HR.FROMDATE, ' ')

    let $ThruDate  = RTRIM(&GEX_RC_HR.THRUDATE, ' ')

    let $RptChoice = RTRIM(&GEX_RC_HR.EEO_REPORT_TYPE, ' ')





  do Format-DateTime($ThruDate, $out, {DEFCMP}, '', '')

  let $ReportYear = substr($out, 1, 4)



  let $thru_dt = $out

  do Format-DateTime($FromDate, $from_dt, {DEFCMP}, '', '')

  !show '$from_dt:  ' $from_dt

  !show '$thru_dt:  ' $thru_dt



  !show 'From Date                                 = ' $FromDate

  !show 'Thru Date                                 = ' $ThruDate

  !show 'Rpt Choice                                = ' $RptChoice

  !show '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = ' $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA



  Do Print-Cover-Page



end-procedure



!***********************************************************************

begin-procedure Print-Cover-Page

!***********************************************************************



  !Logic from stdhdg01.sqc copied to override #RptCol

  Do GEXXX951-Select-Oracle-Instance          !GEX001-add

  print 'Oracle DB:'                (1,1)     !GEX001-add

  print $GEXXX951_Oracle_Instance   (1,13)    !GEX001-add



  print 'Giant Eagle'     ()          center

  print 'Report ID:  '    (+1,1)

  print $ReportID         ()

  uppercase $ReportTitle

  print $ReportTitle      ()          center

  page-number             (0,121)  'Page No.  '

  print 'Run Date '       (+1,121)

  print $ReportDate       ()

  print 'Run Time '       (+1,121)

  print $ReportTime       ()



  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)

  Print '$Prcs_OPRID          ='                                  (+2,5)

  Print $GEX_RC_HR.OPRID                                          (0,+2)

  Print '$PRCS_RUN_CNTL_ID    ='                                  (+1,5)

  Print $GEX_RC_HR.RUN_CNTL_ID                                    (0,+2)



  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)



  Print 'REPORT REQUEST PARAMETER - FROM DATE                ='   (+1,5)

  Print $FromDate                                                 (0,+2)



  Print 'REPORT REQUEST PARAMETER - THRU DATE                ='   (+1,5)

  Print $ThruDate                                                 (0,+2)



  Print 'REPORT REQUEST PARAMETER - EEO REPORT RUN TYPE      ='   (+1,5)

  Print $RptChoice                                                (0,+2)



  Print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+1,5)

  Print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA                 (0,+2)





  Let #PAGE-COUNT = 0

  NEW-PAGE



end-procedure



!***********************************************************************

begin-procedure Init-Array  !VENDTKK  ITG-40829  08/11/2007

!***********************************************************************

  create-array name = EEOarray  size = 14 field = count:number:15 field = label:char



  create-array name = EEOtotals size = 14 field = count:number:15



  put 'Executive/Senior Level......(1) ' into EEOarray(1)  label

  put 'First/Mid-Level Officials.. (2) ' into EEOarray(2)  label

  put 'Professionals.............. (3) ' into EEOarray(3)  label

  put 'Technicians................ (4) ' into EEOarray(4)  label

  put 'Sales Workers.............. (5) ' into EEOarray(5)  label

  put 'Administrative Suppor...... (6) ' into EEOarray(6)  label

  put 'Craft Workers.............. (7) ' into EEOarray(7)  label

  put 'OPERATIVES ................ (8) ' into EEOarray(8)  label

  put 'LABORERS and Helper ....... (9) ' into EEOarray(9)  label

  put 'SERVICE WORKERS............ (10)' into EEOarray(10) label

  put '                      TOTAL (11)' into EEOarray(11) label

  put '    PREVIOUS REPORTED TOTAL (12)' into EEOarray(12) label



   move 33 to #startCol             !starting position of first column total

   move  7 to #len                  !length of total (in print positions)

end-procedure







!***********************************************************************

! Function: Check-Estab-Total                                          *

!                                                                      *

! Description:                                                         *

! Check-Estab-Total checks the total no. of employees and invokes the  *

! procedure Print-Report or adds the EEOarray values to EEOtotals and  *

! resets EEOarray.                                                     *

!                                                                      *

!***********************************************************************

begin-procedure Check-Estab-Total

!***********************************************************************



#ifdef !debug9

    !show ' '

    !show '        start procedure Check-Estab-Total for $EstabID = ' $EstabID

#endif

  let #est_tot = 0

get #est_tot from EEOarray(11) count(14)



!show 'Getting from EEOarray(10) count(0)'

!show '#est_tot  ' #est_tot



!Processing is different for estab with > 50 or less

! than 50 employees.





!show 'Estb ID :' $EstabID ' Count  :' #est_tot



if #est_tot <> 0 or $EstabID = $Ctl_EstabID

#debug9 show 'vendtkk1 $EstabID ' $EstabID

    add 1 to #rpt_count

    !show 'Doing Print-Report'

  do Print-Report

else

    move 1 to #EEORow

    while #EEOrow <= 12		!VENDTKK  ITG-40829  08/11/2007

        move 0 to #EEOcol

        while #EEOcol <= 14	!VENDTKK  ITG-40829  08/11/2007

            get #count1 from EEOarray(#EEOrow) count(#EEOcol)

	    !show '#count1 ' #count1 ' from EEOarray row ' #EEOrow ' and col ' #EEOcol

            array-add #count1 to EEOtotals(#EEOrow) count(#EEOcol)

	    !show 'array-add #count1 ' #count1 ' to EEOtotals row ' #EEOrow ' and col ' #EEOcol

            put 0 into EEOarray(#EEOrow) count(#EEOcol)

	    !show 'put 0 into EEOarray row ' #EEOrow ' and col ' #EEOcol

            add 1 to #EEOcol

        end-while

        add 1 to #EEORow

    end-while

end-if



#ifdef !debug9

    !show '        end procedure Check-Estab-Total for $EstabID = ' $EstabID

    !show ' '

#endif



end-procedure Check-Estab-Total





!***********************************************************************

begin-procedure Process-Main

!***********************************************************************

begin-SELECT distinct

F.ESTABID

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin

!F.CTL_ESTABID

FU.CTL_ESTABID

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - End

F.HQUNIT

F.DESCR

F.ADDRESS1

F.CITY

F.COUNTY

F.STATE

F.POSTAL !sxk 11/23/99 Changed from zip to postal

F.COUNTRY

F.COMPANY 				!AXL 10/16/2001

G.FEDERAL_EIN



    let $LessThan50 = 'N'

    move 0 to #rpt_count

    move 0 to #page_nr

 !GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin

    !move &F.Ctl_EstabID to $Ctl_EstabID

    move &FU.Ctl_EstabID to $Ctl_EstabID

    !GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - End



#debug9 show '$Ctl_EstabID ' $Ctl_EstabID

    move &F.COMPANY to $EstabCompany	!AXL 10/16/2001



#debug9 show '$EstabCompany ' $EstabCompany



    do Single-Multiple-Estab



    !

    ! print the HQ report (type 3) with zero values for parent companies outside the US

    !

    if &F.HQUNIT = 'Y' and &F.COUNTRY <> 'USA' and $SingleEstab = 'N'

        move &F.ESTABID to $EstabID

#debug9 show ' $EstabID ' $EstabID

         do Print-Report

    end-if



   !show 'Doing EEO1-Reportt'



   do EEO1-Report    !VENDTKK  ITG-40829  08/11/2007



FROM  PS_ESTAB_TBL  F,

       PS_ESTAB_TBL_USA FU,	!GEX-RBC Added for Upgrade 9.0 on 11/27/2007

      PS_COMPANY_TBL  G

WHERE  F.HQUNIT     = 'Y'

  AND F.COMPANY    = G.COMPANY

  AND F.EFF_STATUS = 'A'

    AND f.estabid = fu.estabid

  AND F.EFFDT =

                (SELECT MAX(EFFDT)

                 FROM   PS_ESTAB_TBL

                 WHERE  ESTABID = F.ESTABID

                   AND  EFFDT  <= $ThruDate)

  AND G.EFFDT =

                (SELECT MAX(EFFDT)

                 FROM   PS_COMPANY_TBL

                 WHERE  COMPANY = G.COMPANY

                   AND  EFFDT  <= $ThruDate)

! and f.estabid in ('ECHO','GEI')	  DXS, Remove comment to run for a smaller load.

 ! and f.estabid in ('GEI')	  vendtkk Remove comment to run for a smaller load.

ORDER BY F.ESTABID

end-SELECT



#ifdef !debug9

    !show 'end procedure Process-Main'

    !show 'div_cd '  $div_cd

    !show ' '

#endif



   !AXL 09/22/2005 Force routine at the end - Begin

   if $DIV_CD = 'IND'

      if $LessThan50 = 'Y'

         do Print-Less-Than-50

      end-if

   end-if

   !AXL 09/22/2005 Force routine at the end - End





end-procedure



!***********************************************************************

begin-procedure EEO1-Report

!***********************************************************************

#debug9 show 'begin-procedure EEO1-Report'



#ifdef !debug9

    !show ' '

    !show '    start procedure EE01-Report for $Ctl_EstabID = ' $Ctl_Estabid

#endif





begin-SELECT

L.ESTABID ()    on-break print=never procedure=Check-Estab-Total

J.EMPLID

J.EEO_CLASS,

JT.EEO1CODE,

P.SEX,

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin

ETHGRP.ETHNIC_GROUP

!DI.ethnic_group

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - End

GDT.GEX_COMPANY_DIV_CD

COUNT(*) &EEcount



    !

    ! $Sex, $EthnicGroup are used in the procedure Analyze-Sex-EthnicGroup

    ! that is called in procedure Increment-Array

    !

    let $emplid = &J.EMPLID

    if $pre_emplid <> $emplid

    	do count-ethnic

    end-if

    move &P.Sex          to $Sex

    ! move &DI.Ethnic_Group to $EthnicGroup  VENDTKK  ITG-40829  08/11/2007

    move &L.EstabID      to $EstabID



    let $DIV_CD = &GDT.GEX_COMPANY_DIV_CD	!AXL 09/22/2005 Add



    #ifdef !debug9

        !show ' '

        !show '        in EE01-Report in SELECT: L.EstabID = ' $EstabID ', &EEcount = ' &EEcount

    #endif







    !

    ! call Increment-Array to add the determined no. of employees

    ! to its specific employee category

    !

    !show 'Doing Increment-Array'

    do Increment-Array

    let $pre_emplid = $emplid



FROM  PS_PERSONAL_DATA  P,

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin

      !PS_DIVERSITY  DI, !SXK 11/29/1999 Added diversity

      PS_DIVERS_ETHNIC DI,

      PS_ETHNIC_GRP_TBL ETHGRP,

      PS_ESTAB_TBL_USA ETU,

      PS_PER_ORG_INST INST,

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - End

      PS_ESTAB_TBL  ET,			!AXL 09/26/2001 Added Estab_tbl

      PS_EMPLOYMENT  E,

      PS_JOB  J,

      PS_JOBCODE_TBL  JT,

      PS_LOCATION_TBL  L,

      ps_gex_dept_tbl  gdt

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin

!WHERE P.PER_STATUS = 'E'

  WHERE INST.PER_ORG = 'EMP'

  AND J.EMPLID = INST.EMPLID

  AND INST.ORG_INSTANCE_ERN =  J.EMPL_RCD

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - End

   AND E.EMPLID     = P.EMPLID

  AND J.EMPLID     = E.EMPLID

  AND J.EMPL_RCD  = E.EMPL_RCD

!SXK 11/29/1999 Begin

AND    P.EMPLID = DI.EMPLID

!SXK 11/29/1999 End



  AND E.EMPL_RCD = 0

 !AND J.REG_TEMP = 'R'			AXL - 9/14/1999 Comment out per HR

  AND J.EFFDT =

               (SELECT MAX(J1.EFFDT)

                FROM PS_JOB  J1

                WHERE J1.EMPLID  = J.EMPLID

                AND J1.EMPL_RCD = J.EMPL_RCD

                AND J1.EFFDT <= $ThruDate)

  AND J.EFFSEQ =

                (SELECT MAX(J2.EFFSEQ)

                 FROM  PS_JOB  J2

                 WHERE J2.EMPLID    = J.EMPLID

                   AND J2.EMPL_RCD = J.EMPL_RCD

                   AND J2.EFFDT     = J.EFFDT)

  AND ((J.EMPL_STATUS = 'A'

          AND J.EFFDT <= $ThruDate)

        OR (J.EMPL_STATUS <> 'A'

          AND J.EFFDT BETWEEN $FromDate AND $ThruDate)

        OR (J.EMPL_STATUS IN ('L', 'S', 'P')

          AND J.EFFDT <= $FromDate))

  AND JT.JOBCODE   = J.JOBCODE

  AND JT.SETID = J.SETID_JOBCODE

  AND JT.EFFDT =

                (SELECT MAX(JT1.EFFDT)

                 FROM  PS_JOBCODE_TBL  JT1

                 WHERE JT1.JOBCODE = J.JOBCODE

                 AND JT1.SETID = J.SETID_JOBCODE

                 AND JT1.EFFDT  <= $ThruDate)

		! AND DI.ETHNIC_GROUP <> '6'                 !Not Applicable  !GEX-RBC Commented for Upgrade 9.0 on 11/27/2007

		 AND J.EEO_CLASS    <> 'E'                 !Exclude from counts

  		 AND JT.EEO1CODE    <> 'N'                 !Not counted for EEO reporting

 		 AND L.LOCATION      = J.LOCATION

  !AXL 10/16/2001 - New Join logic - Begin

  AND L.SETID = (SELECT SETID

                 FROM PS_SET_CNTRL_REC

                  WHERE RECNAME = 'LOCATION_TBL'

                   AND SETCNTRLVALUE = J.BUSINESS_UNIT)

  AND L.EFFDT =

      (SELECT MAX(EFFDT)

       FROM   PS_LOCATION_TBL  L1

       WHERE  L1.LOCATION = L.LOCATION

         AND L1.SETID = L.SETID

         AND  L1.EFFDT   <= $ThruDate)

  AND ET.ESTABID = L.ESTABID

  !GEX-RBC Modified for Upgrade 9.0 on 11/27/2007  - End

   AND ET.ESTABID = ETU.ESTABID

  !AND ET.CTL_ESTABID = $Ctl_EstabID

  AND ETU.CTL_ESTABID = $Ctl_EstabID

  AND ETU.EFFDT = (SELECT MAX(EFFDT)

       FROM PS_ESTAB_TBL_USA ETU1

       WHERE ETU1.ESTABID = ETU.ESTABID

         AND ETU1.EFFDT <= $ThruDate)

 !GEX-RBC Modified for Upgrade 9.0 on 11/27/2007  - End

  AND ET.EFFDT =

      (SELECT MAX(EFFDT)

       FROM PS_ESTAB_TBL  ET1

       WHERE ET1.ESTABID = L.ESTABID

         AND ET1.EFFDT <= $ThruDate)

  !AXL 10/16/2001 - New Join logic - End

  AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]	!AXL-HR486 Add

  And J.deptid = gdt.deptid

  !AXL 8/24/2005 Rework select logic for GDT join - Begin

  !And gdt.effdt                 =

  !    (Select Max(effdt)

  !     From   ps_gex_dept_tbl

  !     Where  deptid             = gdt.deptid

  !     And    effdt             <= $ThruDate)

  !And gdt.sequence_number       =

  !    (Select Max(sequence_number)

  !     From   ps_gex_dept_tbl

  !     Where  deptid             = gdt.deptid

  !     And    effdt              = gdt.effdt)

  AND gdt.EFFDT =

        (SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL

        WHERE gdt.SETID = SETID

          AND gdt.DEPTID = DEPTID

         AND EFFDT <= J.EFFDT)

!GEX-RBC Added for Upgrade 9.0 on 11/27/2007  - Begin

     AND DI.SETID = ETHGRP.SETID

    AND DI.ETHNIC_GRP_CD = ETHGRP.ETHNIC_GRP_CD

    AND DI.PRIMARY_INDICATOR = 'Y' 	!GEX-MXT ADDED FOR ETHNICITY CHANGES

   AND ETHGRP.EFFDT = (SELECT MAX(ETH2.EFFDT) FROM PS_ETHNIC_GRP_TBL ETH2

                   WHERE ETH2.SETID = ETHGRP.SETID

                   AND ETH2.ETHNIC_GRP_CD = ETHGRP.ETHNIC_GRP_CD

                   AND ETH2.EFFDT  <= $ThruDate)

   AND ETHGRP.ETHNIC_GROUP <> '6'  !Not Applicable



!GEX-RBC Added for Upgrade 9.0 on 11/27/2007  - End

  !AXL 8/24/2005 Rework select logic for GDT join - End

!AXL 09/22/2005 New Group By

!GROUP BY L.ESTABID,J.EEO_CLASS,JT.EEO1CODE,P.SEX,DI.ETHNIC_GROUP

!GROUP BY L.ESTABID,J.EEO_CLASS,JT.EEO1CODE,P.SEX,DI.ETHNIC_GROUP,GDT.GEX_COMPANY_DIV_CD

GROUP BY L.ESTABID,J.EMPLID,J.EEO_CLASS,JT.EEO1CODE,P.SEX,ETHGRP.ETHNIC_GROUP,GDT.GEX_COMPANY_DIV_CD

! ORDER BY L.ESTABID    VENDTKK testing

ORDER BY L.ESTABID,J.EMPLID

end-SELECT





#ifdef !debug9

    !show '        in procedure EE01-Report after select: call Check-Estab-Total'

#endif



do Check-Estab-Total



 !AXL 09/22/2005 Prevent IND from printing in wrong section - Begin

 if $DIV_CD <>  'IND'

    if $LessThan50 = 'Y'

       !show 'Doing Print-Less-Than-50'

        do Print-Less-Than-50

    end-if

 end-if

 !AXL 09/22/2005 Prevent IND from printing in wrong section - End



move &F.EstabID to $EstabID



#ifdef !debug9

    !show '        in procedure EE01-Report after calling Check-Estab-Total: F.EstabID = ' $EstabID

#endif



!

! load Parent's totals from EEOtotals into EEOarray for printing

!

move 1 to #EEOrow

while #EEOrow <= 12 !VENDTKK  ITG-40829  08/11/2007

    move 0 to #EEOcol

    while #EEOcol <= 14  !ventkk

        get #count1 from EEOtotals(#EEOrow) count(#EEOcol)

        put #count1 into EEOarray(#EEOrow)  count(#EEOcol)

	 !show 'Getting from EEOtotals and putting into EEOarray'

	 !show '#count1 ' #count1

	 !show '#EEOrow ' #EEOrow

	 !show '#EEOcol ' #EEOcol



        add 1 to #EEOcol

    end-while

    add 1 to #EEOrow

end-while



if $SingleEstab = 'N'



    do Reset

    move 'Y' to $Consolidated



#debug9 show 'In $SingleEstab = N, if condition'

#debug9 show '$EstabID  ' $EstabID

#debug9 show 'Before #est_tot ' #est_tot



    if $EstabID = 'RIDC'         ! ISDVMZA -- Forced consolidated report for RIDC

!    if $EstabID = 'GEI'          ! DXS, 09/13/06, this was done to force printing of the

	let #est_tot = 50	 ! Consolidated report for GEI

    end-if



    !show 'After #est_tot ' #est_tot

    !show 'Doing Print-Report'

     do Print-Report              !Print consolidated statistics



    move 'N' to $End_of_Report   !Reset $End_of_Report Flag for next HQ

    move 'N' to $Consolidated



end-if



!show 'Doing Reset-Array'

do Reset-Array

!show 'Doing Reset-Totals'

do Reset-Totals



#ifdef !debug9

    !show '    end procedure EE01-Report for $Ctl_EstabID = ' $Ctl_Estabid

    !show ' '

#endif



end-procedure EEO1-Report





!***********************************************************************

! Function: Single-Multiple-Estab                                      *

!                                                                      *

! Description:                                                         *

! Single-Multiple-Estab is called in Process-Main for each EstabID     *

! that is a headquarter in order to check if there is only one         *

! establishment and sets $SingleEstab if so                            *

!                                                                      *

!***********************************************************************

begin-procedure Single-Multiple-Estab

!***********************************************************************



#debug9 show 'Procedure:  Single-Multiple-Estab for $Ctl_EstabID = ' $Ctl_Estabid



move 'N' to $SingleEstab



begin-SELECT

COUNT(*) &NumEstabs

    if &NumEstabs = 1

        move 'Y' to $SingleEstab

    end-if

FROM  PS_ESTAB_TBL  E

WHERE

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin

	E.ESTABID = (SELECT EU.ESTABID FROM PS_ESTAB_TBL_USA EU

     							WHERE EU.CTL_ESTABID = $CTL_ESTABID

     							AND EU.ESTABID = E.ESTABID

     							AND EU.EFFDT = (SELECT MAX(EU1.EFFDT) FROM PS_ESTAB_TBL_USA EU1

     							WHERE EU1.ESTABID = EU.ESTABID

     							AND EU1.EFFDT <= $ThruDate))

!E.CTL_ESTABID = $Ctl_EstabID

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - End

  AND E.COMPANY = $EstabCompany

  AND E.EFF_STATUS = 'A'

  AND E.EFFDT =

                (SELECT MAX(EFFDT)

                 FROM   PS_ESTAB_TBL

                 WHERE  ESTABID = E.ESTABID

                   AND  EFFDT  <= $ThruDate)

end-SELECT



#ifdef !debug9

    !show '        $SingleEstab = ' $SingleEstab

    !show '    end procedure Single-Multiple-Estab for $Ctl_EstabID = ' $Ctl_Estabid

    !show ' '

#endif



end-procedure Single-Multiple-Estab











!***********************************************************************

begin-procedure Increment-Array   !VENDTKK  ITG-40829  08/11/2007

!***********************************************************************

   !show 'Doing Analyze-Sex-EthnicGroup'

   !show 'Before #EEOcol ' #EEOcol



 ! do Count-Ethnic

  do Analyze-Sex-EthnicGroup



    !show 'After #EEOcol ' #EEOcol



move &JT.EEO1code to #EEOrow



Evaluate  &JT.EEO1code

	when = 'A'

	  move  1 to #EEOrow

	when = 'B'

	   move 2 to #EEOrow

	when = '2'

	   move 3 to #EEOrow

	when = '3'

	   move 4 to #EEOrow

	when = '4'

	   move 5 to #EEOrow

	when = '5'

	   move 6 to #EEOrow

	when = '6'

	   move 7 to #EEOrow

	when = '7'

	   move 8 to #EEOrow

	when = '8'

	   move 9 to #EEOrow

	when = '9'

	   move 10 to #EEOrow

end-evaluate









  !show '#EEOrow ' #EEOrow



#ifdef !debug9

  !show ' '

  !show '        in procedure Increment-Array: $EstabID = ' $EstabID ', &EEcount = ' &EEcount ', #EEOrow = ' #EEOrow ', #EEOcol BEFORE = ' #EEOcol

#endif



    ! DXS, 09/29/06, not needed. Due to this non-white Females not reported correctly.

    !  if 6 <= #EEOcol and #EEOcol <= 10

    !	!show 'Setting #EEOcol to 6'

    !      let #EEOcol = 6

    !  end-if



#ifdef !debug9

    !show '        in procedure Increment-Array: $EstabID = ' $EstabID ', &EEcount = ' &EEcount ', #EEOrow = ' #EEOrow ', #EEOcol AFTER = ' #EEOcol

#endif



  !show 'Doing Array Add'

  !show '&EEcount ' &EEcount

  !show '&EEcount ' &EEcount

  !show '#EEOrow ' #EEOrow

  !show '#EEOcol ' #EEOcol



  array-add &EEcount &EEcount to EEOarray(#EEOrow) count(#EEOcol) count (14) !VENDTKK  ITG-40829  08/11/2007

  array-add &EEcount &EEcount to EEOarray(11)      count(#EEOcol) count (14) !VENDTKK  ITG-40829  08/11/2007



end-procedure Increment-Array



!***********************************************************************

begin-procedure Reset-Array

!***********************************************************************

  move 1 to #EEOrow            !Reset array

  while #EEOrow <= 12

    move 0 to #EEOcol

    while #EEOcol <= 14

      put 0 into EEOarray(#EEOrow)  count(#EEOcol)

      add 1 to #EEOcol

    end-while

    add 1 to #EEOrow

  end-while

end-procedure



!***********************************************************************

begin-procedure Reset-Totals

!***********************************************************************

  move 1 to #EEOrow            !Reset array

  while #EEOrow <= 12

    move 0 to #EEOcol

    while #EEOcol <= 14

      put 0 into EEOtotals(#EEOrow) count(#EEOcol)

      add 1 to #EEOcol

    end-while

    add 1 to #EEOrow

  end-while

end-procedure



!***********************************************************************

begin-procedure Print-Less-Than-50

!***********************************************************************

!Print all offices with less than 50 employees.

!This information is saved in R_PER016X tbl and printed

!as the last thing on this SQR.



#ifdef !debug9

    !show 'in procedure Print-Less-Than-50 for for $EstabID = ' $EstabID

    !show ' '

#endif



print 'FACILITIES WITH LESS THAN 50 EMPLOYEES'    (0,46)



print 'PAGE  '                                    (0,119)

add 1 to #page_nr

do Format-Number(#page_nr, $out, '999')

	print $out                                        (0,+1)	!ventkk



	print 'Number of'                                 (+4,4)        !ventkk

	print 'Major Activity'                            (0,46)        !ventkk

	print 'Address'                                   (0,95)        !ventkk

	print 'Employees'                                 (+1,4)        !ventkk

	print '---------------'                           (0,46)        !ventkk

	print '---------------'                           (0,95)        !ventkk

	print '---------------'                           (+1,4)        !ventkk



begin-SELECT



NUM_OF_EMPLOYEES                &num_of_employees

MAJOR_ACTIVITY                  &major_activity

OFFICE_NAME                     &office_name

ADDRESS1                        &address1_lt50 ! lt50 = less_than_50

CITY                            &city_lt50

STATE                           &state_lt50

COUNTY                          &county_lt50

POSTAL                          &zip_lt50

COUNTRY                         &country_lt50

        do print-lt50-details

from PS_R_PER016X

where NUM_OF_EMPLOYEES > 0

  and NUM_OF_EMPLOYEES < 50

order by NUM_OF_EMPLOYEES

end-select



! Print the total line at the bottom



begin-select

NUM_OF_EMPLOYEES &tot_emp

  do update-counter

from PS_R_PER016X

end-select



  print '________'                (+1,4)

  print #tot_emp                  (+1,4) edit 99999



  new-page



! Delete rows from R_PER016X and get it clean for the next run.

! This is a temp table and all rows can be deleted.



begin-sql

DELETE from PS_R_PER016X

end-sql



! Also reset the #tot_emp variable for the next run.

let #tot_emp = 0



end-procedure Print-Less-Than-50



!***********************************************************************

begin-procedure print-lt50-details

!***********************************************************************

!print a detail line for each office with less than 50 employees.

 	 print &num_of_employees         (+3,5) edit 99

 	 print &major_activity           (0,46)

 	 print &office_name              (0,85)

 	 print &address1_lt50            (+1,85)

 	 print &city_lt50                (+1,85)

 	 print &county_lt50              (0,100)

 	 print &state_lt50               (+1,85)

 	 print &zip_lt50                 (0,88)

 	 print &country_lt50             (0,100)

end-procedure print-lt50-details







!***********************************************************************

begin-procedure update-counter

!***********************************************************************



let #num_of_emp = &tot_emp

let #tot_emp = #tot_emp + #num_of_emp





end-procedure update-counter



!***********************************************************************

! Function: Print-Report                                               *

!                                                                      *

! Description:                                                         *

! Print-Report does the major actions to print out the different       *

! types of establishment reports and invokes further actions           *

! for establishments with less than 50 employees.                      *

!                                                                      *

!***********************************************************************

begin-procedure Print-Report

!***********************************************************************



#debug9 show 'Procedure:  Print-Report for $EstabID = ' $EstabID



    let $EEO_COMPNY = ''

    move ' ' to $EEO_DESCR

    move ' ' to $EEO_ADDRESS1

    move ' ' to $EEO_CITY

    move ' ' to $EEO_COUNTY

    move ' ' to $EEO_STATE

    move ' ' to $EEO_POSTAL

    move ' ' to $EEO_COUNTRY

    move ' ' to $EEO_BUS_ACTIVITY_LINE1



!XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

! CWB         Fix the aliases



begin-SELECT

E2.HQUNIT,

E2.DESCR,

E2.ADDRESS1,

E2.CITY,

E2.COUNTY,

E2.STATE,

E2.POSTAL,

E2.COUNTRY,

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin

!E2.EMPLOY_APPR,

!E2.SAME_LOCATION,

!E2.SAME_BUSINESS,

EU2.EMPLOY_APPR,

EU2.SAME_LOCATION,

EU2.SAME_BUSINESS,

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - End

H.FEDERAL_EIN,

H.COMPANY,

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin

!E2.BUS_ACTIVITY_LINE1,

!E2.BUS_ACTIVITY_LINE2,

!E2.BUS_ACTIVITY_LINE3,

!E2.BUS_ACTIVITY_LINE4

EU2.BUS_ACTIVITY_LINE1,

EU2.BUS_ACTIVITY_LINE2,

EU2.BUS_ACTIVITY_LINE3,

EU2.BUS_ACTIVITY_LINE4

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin



    move &H.Company  to $EEO_Compny

    move &E2.DESCR    to $EEO_DESCR

    move &E2.ADDRESS1 to $EEO_ADDRESS1

    move &E2.CITY     to $EEO_CITY

    move &E2.COUNTY   to $EEO_COUNTY

    move &E2.STATE    to $EEO_STATE

    move &E2.POSTAL   to $EEO_POSTAL

    move &E2.COUNTRY  to $EEO_COUNTRY

    !GEX-RBC Modified ded for Upgrade 9.0 on 11/27/2007 - Begin

    !move &E2.BUS_ACTIVITY_LINE1 to $EEO_BUS_ACTIVITY_LINE1

    move &EU2.BUS_ACTIVITY_LINE1 to $EEO_BUS_ACTIVITY_LINE1

    !GEX-RBC Modified ded for Upgrade 9.0 on 11/27/2007 - End



    do EEO-Values



FROM  PS_ESTAB_TBL  E2,

      PS_ESTAB_TBL_USA EU2,		!GEX-RBC Added for Upgrade 9.0 on 11/27/2007

      PS_COMPANY_TBL  H

WHERE E2.ESTABID = $EstabID

  AND E2.ESTABID = EU2.ESTABID		!GEX-RBC Added for Upgrade 9.0 on 11/27/2007

  AND E2.COMPANY = H.COMPANY

  AND E2.EFFDT =

      (SELECT MAX(EFFDT)

       FROM   PS_ESTAB_TBL

       WHERE  ESTABID = E2.ESTABID

         AND  EFFDT  <= $ThruDate)

!GEX-RBC Added for Upgrade 9.0 on 11/27/2007 - Begin

      AND EU2.EFFDT =

      (SELECT MAX(EFFDT)

       FROM   PS_ESTAB_TBL_USA

       WHERE  ESTABID = EU2.ESTABID

         AND  EFFDT  <= $ThruDate)

!GEX-RBC Added for Upgrade 9.0 on 11/27/2007 - End

  AND H.EFFDT =

      (SELECT MAX(EFFDT)

       FROM   PS_COMPANY_TBL

       WHERE  COMPANY = H.COMPANY

         AND  EFFDT  <= $ThruDate)

end-SELECT



! CWB 08/04/2004 BEGIN

! If $EEOcompany <> ' '        vendtkk

! CWB 08/04/2004 END

!if $EEOcompany <> 'INDEPNT'  !vendtkk    ITG-40829    08-23-2007



#debug9 show '#est_tot = ' #est_tot ', $Consolidated = ' $Consolidated ', &Hqunit = ' &e2.Hqunit ', Div_cd = '$DIV_CD



move ' ' to $report_type



  !AXL 09/22/2005  IND will still get in

  If $Consolidated = 'Y' or &e2.Hqunit = 'Y' or $DIV_CD <> 'IND'

  

     If #est_tot >= 50



        print '      CO='                                       (1,2)

        print $EEOcompany                                 ()      edit xxxxxx-x

        print 'EQUAL EMPLOYMENT OPPORTUNITY'              (0,46,72)

        print 'PAGE  '                                    (0,119)

        add 1 to #page_nr

        do Format-Number(#page_nr, $out, '999')

        print $out                                        (0,+1)



        print '      ='                                        (+1,3)

        print $EEOunit                                    ()      edit xxxxxx-x

        print $ReportYear                                 (0,41,4)

        print 'EMPLOYER INFORMATION REPORT EEO-1'         (0,46)

        print 'SIC/NAICS='                                (+1,1)

        print $SIC                                        (,,4)

        print '/'                                         ()

        print $NAICS                                      (,,6)



        if $Consolidated = 'Y'



#debug9 show 'Printing Consolidated Report for  ' $EEOcompany



            print 'CONSOLIDATED REPORT - TYPE 2'            (5,49)

            print 'NUMBER OF REPORTS FILED - '              (6,1)

            let $report_type = 'CONSOLIDATED'



            #ifdef !debug9

                !show '            in procedure Print-Report: assign $report_type to ' $report_type

            #endif

            let $report_cd = '2'

            do Format-Number(#rpt_count, $out, '009')

            print $out (6,27)

        else

            if $SingleEstab = 'Y'

                print 'SINGLE ESTABLISHMENT EMPLOYER REPORT - TYPE 1' (5,39)

                let $report_type = 'SINGLE_ESTAB'

                let $report_cd = '1'

                #ifdef !debug9

                    !show '            in procedure Print-Report: assign $report_type to ' $report_type

                #endif

            else

 	        if &E2.HQunit = 'Y'

                    print 'HEADQUARTERS REPORT - TYPE 3'        (5,47)

                    let $report_type = 'HEADQUARTERS'

                    let $report_cd = '3'

                    #ifdef !debug9

                        !show '            in procedure Print-Report: assign $report_type to ' $report_type

                    #endif

                else

                    print 'ESTABLISHMENT REPORT - TYPE 4' (5,43)

                    let $report_type = 'INDIVIDUAL_ESTAB'

 	            let $report_cd = '4'

                    #ifdef !debug9

                        !show '            in procedure Print-Report: assign $report_type to ' $report_type

                    #endif

                end-if

            end-if

        end-if



        print 'SECTION B - COMPANY IDENTIFICATION'        (8,1)

        print '1.'                                        (10,1,3)

        print &F.Descr                                    (10,4)

        print &F.Address1                                 (11,4)

        print &F.City                                     (12,4,19)

        print &F.County                                   (12,24)

        print &F.State                                    (13,4,3)

        let $Postal = {ps-substr}(&F.Postal, 1, 5)

        print $Postal                                      (13,8)

        print '2.a.'                                      (10,44,4)

        print &E2.Descr                                    (10,49)

        print &E2.Address1                                 (11,49)

        print &E2.City                                     (12,49)

        print &E2.County                                   (12,68)

        print &E2.State                                    (13,49)

        let $Postal = {ps-substr}(&E2.Postal, 1, 5)

        print $Postal                                      (13,52)

        print 'b.'                                        (15,46,2)

        print 'EI='                                       (15,49)

        print &H.Federal_EIN                              ()      edit 099999999

        print 'c.'                                        (17,46,2)

        print $SectionBc                                  (17,49)

        print 'SECTION C - TEST FOR FILING REQUIREMENT'   (8,90)

        print '1-'                                        (10,90)

        print $SectionC1                                  ()

        print '2-'                                        (0,96)

        print $SectionC2                                  ()

        print '3-'                                        (0,102)

        print $SectionC3                                  ()

        print 'DUNS NO.:'                                 (0,108)

        print $DUNS                                       (0,+1) edit xx-xxx-xxxx



        print 'SECTION D - EMPLOYMENT DATA'               (20,1)

        print '     Hispanic                               Not-Hispanic or Latino                  '                            (21,34)  !VENDTKK  ITG-40829  08/11/2007

        print 'JOB CATEGORIES'                            (23,7)

        print '     M      F     *****************  MALE  ***********    **********  FEMALE  *********************  Total A-N' (22,34)!VENDTKK  ITG-40829  08/11/2007

        print '(A)'                                       (23,38)!VENDTKK  ITG-40829  08/11/2007

        print '(B)'                                       (0,+4)!VENDTKK  ITG-40829  08/11/2007

        print '(C)'                                       (0,+4)

        print '(D)'                                       (0,+4)

        print '(E)'                                       (0,+4)

        print '(F)'                                       (0,+4)

        print '(G)'                                       (0,+4)

        print '(H)'                                       (0,+4)

        print '(I)'                                       (0,+4)

        print '(J)'                                       (0,+4)

        print '(K)'                                       (0,+4)

        print '(L)'                                       (0,+4)

        print '(M)'                                       (0,+4)

        print '(N)'                                       (0,+4)

        print '(O)'                                       (0,+4)



        !show 'Section D Report heading printing complete'

        if $Consolidated <> 'Y'



	    print 'SECTION E - ESTABLISHMENT INFORMATION'   (12,90)

	    print '1-'                                      (14,90)

	    !GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin

	    !print &e2.Bus_Activity_Line1                       (14,92)

	    !print &e2.Bus_Activity_Line2                       (15,92)

	    !print &e2.Bus_Activity_Line3                       (16,92)

	    !print &e2.Bus_Activity_Line4                       (17,92)

	    print &EU2.Bus_Activity_Line1                       (14,92)

	    print &EU2.Bus_Activity_Line2                       (15,92)

	    print &EU2.Bus_Activity_Line3                       (16,92)

	    print &EU2.Bus_Activity_Line4                       (17,92)

	    !GEX-AXG Modified for Upgrade 9.0 on 11/27/2007 - End

	    print '* OTHER QUESTIONS *'                     (40,1)

	    print '1 -'                                     (42,1)

	    do Format-DateTime($FromDate, $out, {DEFDATE}, '', '')

	    print $out                                      (0,6)

	    print 'THRU'                                    (0,15)

	    do Format-DateTime($ThruDate, $out, {DEFDATE}, '', '')

	    print $out                                      (0,20)

	    print '2 - '                                    (0,44)

	    !GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin

	    !print &e2.Employ_Appr                              ()

	    print &EU2.Employ_Appr                              ()

	    !GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - End



	    print 'SECTION G - CERTIFICATION'               (45,1)

	    print 'CHECK   1 - [  ] ALL REPORTS ARE ACCURATE AND WERE PREPARED IN ACCORDANCE WITH THE INSTRUCTIONS (CHECK ON CONSOLIDATED REPORT ONLY)'  (47,1)

	    print ' ONE    2 - [  ] THIS REPORT IS ACCURATE AND WAS PREPARED IN ACCORDANCE WITH INSTRUCTIONS'  (48,1)

	    print 'CERTIFYING OFFICIAL:                        TITLE:                        SIGNATURE:                        DATE:'  (50,1)

	    print 'PERSON TO CONTACT REGARDING THIS REPORT:                             STREET ADDRESS:'  (52,1)

	    print 'TITLE:                  CITY/ST:                 ZIP:           TELEPHONE/AREA CODE:                        EXT:' (54,1)

	End-if

        !-----------------------------------------------------



 	move 24 to #line

  	move 1 to #EEOrow



        While #EEOrow <= 12		!VENDTKK  ITG-40829  08/11/2007



	  If  #EEOrow > 10 and #EEOrow < 13

              add 2 to #line

	  Else

	      add 1 to #line

          End-if



  	get $EEOcatName from EEOarray(#EEOrow) label

  	print $EEOcatName (#line,1)









	    If  #EEOrow <> 12            !Don't print 0's for Previous Reported Totals  VENDTKK  ITG-40829  08/11/2007

	        move #startCol to #col

	        subtract #len from #col

	        move 0 to #EEOcol



	        while #EEOcol <= 14



	           add #len to #col

	           get #count1 from EEOarray(#EEOrow) count(#EEOcol)

		   !show 'Getting #count1 ' #count1  ' from EEOarray row ' #EEOrow ' and col ' #EEOcol

	           array-add #count1 to EEOtotals(#EEOrow) count(#EEOcol)

		   !show 'array-add #count1 ' #count1  ' to EEOtotals row ' #EEOrow ' and col ' #EEOcol

	           do Format-Number(#count1, $out, '9999999')



                   print $out (#line,#col,#len)

	           !show '$out ' $out



		  ! CWB 08/04/2004 BEGIN

			!show 'Doing evaluate-for-detail-rec'

   	            do evaluate-for-detail-rec

		  ! CWB 08/04/2004 END



	           if #EEOrow = 11		!VENDTKK  ITG-40829  08/11/2007 print total

	              evaluate #EEOcol

	                   when = 0

	                   let #col0 = #count1

	                   when = 1

	                   let #col1 = #count1

	                   when = 2

	                   let #col2 = #count1

	                   when = 3

	                   let #col3 = #count1

	                   when = 4

	                   let #col4 = #count1

	                   when = 5

	                   let #col5 = #count1

	                   when = 6

	                   let #col6 = #count1

	                   when = 7

	                   let #col7 = #count1

	                   when = 8

	                   let #col8 = #count1

	                   when = 9

	                   let #col9 = #count1

	                   when = 10

	                   let #col10 = #count1

	                   when = 11

	                   let #col11 = #count1

	                   when = 12

	                   let #col12 = #count1

	                   when = 13

	                   let #col13 = #count1

	                   when = 14

	                   let #col14 = #count1

	             end-evaluate

      		   end-if



		    put 0 into EEOarray(#EEOrow) count(#EEOcol)

		    add 1 to #EEOcol

    	        end-while

            End-if





	    If  #EEOrow = 12                 !VENDTKK  ITG-40829  08/11/2007print Previous Reported Totals



	        do Get-Previous-Total      !Select out previous total values and print.

	        move #startCol to #col

	        subtract #len from #col

	        move 0 to #EEOcol



	        while #EEOcol <= 14		!VENDTKK  ITG-40829  08/11/2007



	          add #len to #col

	          if #EEOcol = 0

	          do Format-Number(#old_col0, $out, '9999999')

	          end-if

	          if #EEOcol = 1

	          do Format-Number(#old_col1, $out, '9999999')

	          end-if

	          if #EEOcol = 2

	          do Format-Number(#old_col2, $out, '9999999')

	          end-if

	          if #EEOcol = 3

	          do Format-Number(#old_col3, $out, '9999999')

	          end-if

	          if #EEOcol = 4

	          do Format-Number(#old_col4, $out, '9999999')

	          end-if

	          if #EEOcol = 5

	          do Format-Number(#old_col5, $out, '9999999')

	          end-if

	          if #EEOcol = 6

	          do Format-Number(#old_col6, $out, '9999999')

	          end-if

	          if #EEOcol = 7

	          do Format-Number(#old_col7, $out, '9999999')

	          end-if

	          if #EEOcol = 8

	          do Format-Number(#old_col8, $out, '9999999')

	          end-if

	          if #EEOcol = 9

	          do Format-Number(#old_col9, $out, '9999999')

	          end-if

	          if #EEOcol = 10

	          do Format-Number(#old_col10, $out, '9999999')

	          end-if

	          if #EEOcol = 11

	          do Format-Number(#old_col11, $out, '9999999')

	          end-if

	          if #EEOcol = 12

	          do Format-Number(#old_col12, $out, '9999999')

	          end-if

	          if #EEOcol = 13

	          do Format-Number(#old_col13, $out, '9999999')

	          end-if

	          if #EEOcol = 14

	          do Format-Number(#old_col14, $out, '9999999')

	          end-if

	          IF $SECTIONBC = 'Y'

	             print $out (#line,#col,#len)

		     !show '$out ' $out ' when $SECTIONBC = Y'

                  End-if



                 !CWB 08/04/2004 BEGIN

		 !show 'evaluate-for-detail-rec again'

		 do evaluate-for-detail-rec

		 !CWB 08/04/2004 END



		 add 1 to #EEOcol



                end-while



                if $RptChoice = 'GOVT'

                    do Insert-Previous-Totals        !Insert your current totals into the previous total tbl.

                end-if



            end-if



            add 1 to #EEOrow



        end-while



        new-page



   end-if  !AXL - 09/22/2005 NEW

 end-if

#ifdef !debug9

    !show ' '

    !show '            in procedure Print-Report: #est_tot = ' #est_tot '    $report_type = ' $report_type

    !show ' '

#endif



 !----------------------------------------------------------------------------

 ! The type 8 records on the EEO data file were incorrect

 ! because of the variables/array not initiated properly in the following code

 ! SRC 12/10/2004 BEGIN

 !----------------------------------------------------------------------------

 if #est_tot < 50 and $report_type <> 'HEADQUARTERS' and $report_type <> 'CONSOLIDATED'



    move 24 to #line

    move 1 to #EEOrow



    let $report_cd = '8'



    #ifdef !debug9

        !show '            in procedure Print-Report: call less-than-50 for $EstabID = ' $EstabID

    #endif



    do less-than-50  ! Capture the count for establishments with counts

                     ! that add up to less than 50.







    while #EEOrow <= 11



        If  #EEOrow > 10 and #EEOrow < 13		!VENDTKK  ITG-40829  08/11/2007

	    add 2 to #line

	Else

	    add 1 to #line

	End-if



	get $EEOcatName from EEOarray(#EEOrow) label



        !move 0 to #EEOcol



	If #EEOrow <> 12            !VENDTKK  ITG-40829  08/11/2007 Don't print 0's for Previous Reported Totals



	    move #startCol to #col

	    subtract #len from #col

	    move 0 to #EEOcol



            while #EEOcol <= 14

	        add #len to #col

                get #count1 from EEOarray(#EEOrow) count(#EEOcol)

		array-add #count1 to EEOtotals(#EEOrow) count(#EEOcol)

                do Format-Number(#count1, $out, '9999999')



		Do evaluate-for-detail-rec



	                if #EEOrow = 11		!VENDTKK  ITG-40829  08/11/2007 print total

	              evaluate #EEOcol

	                   when = 0

	                   let #col0 = #count1

	                   when = 1

	                   let #col1 = #count1

	                   when = 2

	                   let #col2 = #count1

	                   when = 3

	                   let #col3 = #count1

	                   when = 4

	                   let #col4 = #count1

	                   when = 5

	                   let #col5 = #count1

	                   when = 6

	                   let #col6 = #count1

	                   when = 7

	                   let #col7 = #count1

	                   when = 8

	                   let #col8 = #count1

	                   when = 9

	                   let #col9 = #count1

	                   when = 10

	                   let #col10 = #count1

	                   when = 11

	                   let #col11 = #count1

	                   when = 12

	                   let #col12 = #count1

	                   when = 13

	                   let #col13 = #count1

	                   when = 14

	                   let #col14 = #count1

	             end-evaluate

      		   end-if



		put 0 into EEOarray(#EEOrow) count(#EEOcol)

		add 1 to #EEOcol

            end-while

	end-if



        If #EEOrow = 12                 !VENDTKK  ITG-40829  08/11/2007print Previous Reported Totals



	    do Get-Previous-Total        !Select out previous total values and print.

	    move #startCol to #col

	    subtract #len from #col

	    move 0 to #EEOcol



	     while #EEOcol <= 14		!VENDTKK  ITG-40829  08/11/2007



	          add #len to #col

	          if #EEOcol = 0

	          do Format-Number(#old_col0, $out, '9999999')

	          end-if

	          if #EEOcol = 1

	          do Format-Number(#old_col1, $out, '9999999')

	          end-if

	          if #EEOcol = 2

	          do Format-Number(#old_col2, $out, '9999999')

	          end-if

	          if #EEOcol = 3

	          do Format-Number(#old_col3, $out, '9999999')

	          end-if

	          if #EEOcol = 4

	          do Format-Number(#old_col4, $out, '9999999')

	          end-if

	          if #EEOcol = 5

	          do Format-Number(#old_col5, $out, '9999999')

	          end-if

	          if #EEOcol = 6

	          do Format-Number(#old_col6, $out, '9999999')

	          end-if

	          if #EEOcol = 7

	          do Format-Number(#old_col7, $out, '9999999')

	          end-if

	          if #EEOcol = 8

	          do Format-Number(#old_col8, $out, '9999999')

	          end-if

	          if #EEOcol = 9

	          do Format-Number(#old_col9, $out, '9999999')

	          end-if

	          if #EEOcol = 10

	          do Format-Number(#old_col10, $out, '9999999')

	          end-if

	          if #EEOcol = 11

	          do Format-Number(#old_col11, $out, '9999999')

	          end-if

	          if #EEOcol = 12

	          do Format-Number(#old_col12, $out, '9999999')

	          end-if

	          if #EEOcol = 13

	          do Format-Number(#old_col13, $out, '9999999')

	          end-if

	          if #EEOcol = 14

	          do Format-Number(#old_col14, $out, '9999999')

	          end-if

	          IF $SECTIONBC = 'Y'

	             print $out (#line,#col,#len)

		     !show '$out ' $out ' when $SECTIONBC = Y'

                  End-if



	        do evaluate-for-detail-rec

	        add 1 to #EEOcol

            end-while

      	end-if

        add 1 to #EEORow

  ! SRC 12/10/2004 END

  !------------------------------------------------------------------



    End-while



 End-if



#ifdef !debug9

    !show '            end procedure Print-Report for $EstabID = ' $EstabID

    !show ' '

    !show '$EEOcompany and $DIV_CD ' $EEOcompany ' ' $DIV_CD

    !show ' '

#endif



    !AXL 09/22/2005  New flag to prevent IND rows from !showing up on Corp run - Begin

    let $print_ok = 'Y'

   if $EEOcompany = 'INDEPNT' and $DIV_CD <> 'IND'

    !if $EEOcompany = 'INDEPNT' !vendtkk 08/23/2007  ITG-40829

       let $print_ok = 'N'

    end-if



    ! CWB 08/04/2004 BEGIN

    if $print_ok = 'Y'

       Do write-detail-record

    end-if

    ! CWB 08/04/2004 END

    !AXL 09/22/2005  New flag to prevent IND rows from !showing up on Corp run - End

! Else

   ! CWB 08/04/2004 END

 !End-if



end-procedure Print-Report



!***********************************************************************

begin-procedure Insert-Previous-Totals		!VENDTKK  ITG-40829  08/11/2007

!***********************************************************************

begin-SQL

INSERT INTO PS_R_PER016_NEW (

ESTABID

,CTL_ESTABID

,EEO_RPT_TYPE

,FROMDATE

,THRUDATE

,REPORT_RUN_DATE

,EEO1A_TOT

,EEO1B_TOT

,EEO1C_TOT

,EEO1D_TOT

,EEO1E_TOT

,EEO1F_TOT

,EEO1G_TOT

,EEO1H_TOT

,EEO1I_TOT

,EEO1J_TOT

,EEO1K_TOT

,EEO1L_TOT

,EEO1M_TOT

,EEO1N_TOT

,EEO1AN_TOT

)

values  (

 nvl($estabid,' ')

,nvl($ctl_estabid,' ')

,nvl($report_type,' ')

,nvl($fromdate,' ')

,nvl($thrudate,' ')

,nvl($asoftoday,' ')

,nvl(#col0,0)

,nvl(#col1,0)

,nvl(#col2,0)

,nvl(#col3,0)

,nvl(#col4,0)

,nvl(#col5,0)

,nvl(#col6,0)

,nvl(#col7,0)

,nvl(#col8,0)

,nvl(#col9,0)

,nvl(#col10,0)

,nvl(#col11,0)

,nvl(#col12,0)

,nvl(#col13,0)

,nvl(#col14,0)

)

end-SQL

end-procedure Insert-Previous-Totals



!***********************************************************************

begin-procedure Get-Previous-Total

!***********************************************************************

begin-SELECT

Q.ESTABID                     &q_estabid

Q.CTL_ESTABID                 &q_ctl_estabid

Q.FROMDATE                    &q_fromdate

Q.THRUDATE                    &q_thrudate

Q.EEO1A_TOT                  &q_col0

Q.EEO1B_TOT                   &q_col1

Q.EEO1C_TOT                   &q_col2

Q.EEO1D_TOT                   &q_col3

Q.EEO1E_TOT                   &q_col4

Q.EEO1F_TOT                   &q_col5

Q.EEO1G_TOT                   &q_col6

Q.EEO1H_TOT                   &q_col7

Q.EEO1I_TOT                   &q_col8

Q.EEO1J_TOT                   &q_col9

Q.EEO1K_TOT                   &q_col10

Q.EEO1L_TOT                   &q_col11

Q.EEO1M_TOT                   &q_col12

Q.EEO1N_TOT                   &q_col13

Q.EEO1AN_TOT                   &q_col14

from PS_R_PER016_NEW Q

where Q.ESTABID = $estabid

  and Q.CTL_ESTABID = $ctl_estabid

  and Q.EEO_RPT_TYPE = $report_type

  and Q.REPORT_RUN_DATE = (SELECT MAX(R.REPORT_RUN_DATE)

                                        from PS_R_PER016_NEW R

                                        where R.ESTABID = $estabid

                                        and  R.CTL_ESTABID = $ctl_estabid

                                        and R.EEO_RPT_TYPE = $report_type

!                                        and R.REPORT_RUN_DATE < $fromdate )

                                        and R.REPORT_RUN_DATE < $asoftoday )

end-SELECT

  let #old_col0 = &q_col0

  let #old_col1 = &q_col1

  let #old_col2 = &q_col2

  let #old_col3 = &q_col3

  let #old_col4 = &q_col4

  let #old_col5 = &q_col5

  let #old_col6 = &q_col6

  let #old_col7 = &q_col7

  let #old_col8 = &q_col8

  let #old_col9 = &q_col9

  let #old_col10 = &q_col10

  let #old_col11 = &q_col11

  let #old_col12 = &q_col12

  let #old_col13 = &q_col13

  let #old_col14 = &q_col14

end-procedure Get-Previous-Total



!***********************************************************************

begin-procedure less-than-50  !VENDTKK  ITG-40829  08/11/2007

!***********************************************************************



 let $LessThan50 = 'Y'



#ifdef !debug9

    !show ' '

    !show '                in procedure less-than-50: start insert for $EstabID = ' $EstabID

    !show '#est_tot: '  #est_tot

#endif



begin-SQL



INSERT INTO PS_R_PER016X

(NUM_OF_EMPLOYEES

,MAJOR_ACTIVITY

,OFFICE_NAME

,COUNTRY

,ADDRESS1

,ADDRESS2

,ADDRESS3

,ADDRESS4

,CITY

!AXL 9/27/2000 New 7.5 columns - Begin

,NUM1

,NUM2

,HOUSE_TYPE

!AXL 9/27/2000 New 7.5 columns - End

!AXC 08/05/2002 New 8.3 Columns Begin

,addr_field1

,addr_field2

,addr_field3

,COUNTY

,STATE

,POSTAL

!AXL 9/27/2000 New 7.5 columns - Begin

,GEO_CODE

,IN_CITY_LIMIT

!AXL 9/27/2000 New 7.5 columns - End

)

values (

 nvl(#est_tot,0)

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin

!,nvl(&e2.Bus_Activity_Line1,' ')

,nvl(&EU2.Bus_Activity_Line1,' ')

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - End

,nvl(&E2.Descr,' ')

,nvl(&E2.Country,' ')

,nvl(&E2.Address1,' ')

,' '

,' '

,' '

,nvl(&E2.City,' ')

!AXL 9/27/2000 New 7.5 columns - Begin

,' '

,' '

,' '

!AXL 9/27/2000 New 7.5 columns - End

,' '	!AXC 8.3 New Columns

,' '	!AXC 8.3 New Columns

,' '	!AXC 8.3 New Columns

,nvl(&E2.County,' ')

,nvl(&E2.State,' ')

,nvl(&E2.postal,' ')

!AXL 9/27/2000 New 7.5 columns - Begin

,' '

,' '

!AXL 9/27/2000 New 7.5 columns - End

)

end-SQL



#ifdef !debug9

    !show '                end of procedure less-than-50: insert done for $EstabID = ' $EstabID

    !show ' '

#endif



end-procedure less-than-50





!***********************************************************************

Begin-Procedure Open-File

!***********************************************************************

   Let $FileID = '{OUTFILE}' || Lower($ReportID)|| '.dat'

  ! DXS, 09/29/06, use this while running via SQRW

   ! Let $FileID = 'c:\isdvdxs\ ' || Lower($ReportID)|| '.dat'

   ! Let $FileID = 'c:\temp\gexhr054.txt'  !testing vendtkk



    If ($database_name = 'HRTEST')

    	Let $FileID = '\\nt5\peopledev\temp\'|| Lower($ReportID)|| '.dat'

    End-If



    If ($database_name = 'HRPROD')

    	Let $FileID = '\\Goofey\psprod\temp\'|| Lower($ReportID)|| '.dat'

    End-If



    show $FileID



  Open $FileID

    As 1

    For-Writing

     Record=1600:Fixed	 !VENDTKK  ITG-40829  08/11/2007

    Status=#Filestat



  If #Filestat != 0

    Display 'Error Opening output file.  Program terminating.'

    Stop

  End-If



End-Procedure



!***********************************************************************

Begin-Procedure Close-File

!***********************************************************************

  Close 1

End-Procedure







!***********************************************************************

  begin-procedure evaluate-for-detail-rec

!***********************************************************************

	evaluate #EEOrow

	  when = 1

	    evaluate #EEOcol

	        when = 0

        	 move $out to $LINE_1A 099999

		when = 1

		 move $out to $LINE_1B 099999

		when = 2

		 move $out to $LINE_1C 099999

		when = 3

		 move $out to $LINE_1D 099999

		when = 4

		 move $out to $LINE_1E 099999

		when = 5

		 move $out to $LINE_1F 099999

		when = 6

		 move $out to $LINE_1G 099999

		when = 7

		 move $out to $LINE_1H 099999

		when = 8

		 move $out to $LINE_1I 099999

		when = 9

		 move $out to $LINE_1J 099999

		when = 10

		 move $out to $LINE_1K 099999

                when = 11

		 move $out to $LINE_1L 099999

		when = 12

		 move $out to $LINE_1M 099999

		when = 13

		 move $out to $LINE_1N 099999

		when = 14

		 move $out to $LINE_1O 0999999

	    end-evaluate

	  when = 2

	    evaluate #EEOcol

	        when = 0

        	 move $out to $LINE_2A 099999

		when = 1

		 move $out to $LINE_2B 099999

		when = 2

		 move $out to $LINE_2C 099999

		when = 3

		 move $out to $LINE_2D 099999

		when = 4

		 move $out to $LINE_2E 099999

		when = 5

		 move $out to $LINE_2F 099999

		when = 6

		 move $out to $LINE_2G 099999

		when = 7

		 move $out to $LINE_2H 099999

		when = 8

		 move $out to $LINE_2I 099999

		when = 9

		 move $out to $LINE_2J 099999

		when = 10

		 move $out to $LINE_2K 099999

		when = 11

		 move $out to $LINE_2L 099999

		when = 12

		 move $out to $LINE_2M 099999

		when = 13

		 move $out to $LINE_2N 099999

		when = 14

		 move $out to $LINE_2O 0999999

	    end-evaluate

	  when = 3

	    evaluate #EEOcol

	        when = 0

        	 move $out to $LINE_3A 099999

		when = 1

		 move $out to $LINE_3B 099999

		when = 2

		 move $out to $LINE_3C 099999

		when = 3

		 move $out to $LINE_3D 099999

		when = 4

		 move $out to $LINE_3E 099999

		when = 5

		 move $out to $LINE_3F 099999

		when = 6

		 move $out to $LINE_3G 099999

		when = 7

		 move $out to $LINE_3H 099999

		when = 8

		 move $out to $LINE_3I 099999

		when = 9

		 move $out to $LINE_3J 099999

		when = 10

		 move $out to $LINE_3K 099999

		when = 11

		 move $out to $LINE_3L 099999

		when = 12

		 move $out to $LINE_3M 099999

		when = 13

		 move $out to $LINE_3N 099999

		when = 14

		 move $out to $LINE_3O 0999999

	   end-evaluate

	  when = 4

	    evaluate #EEOcol

	        when = 0

        	 move $out to $LINE_4A 099999

		when = 1

		 move $out to $LINE_4B 099999

		when = 2

		 move $out to $LINE_4C 099999

		when = 3

		 move $out to $LINE_4D 099999

		when = 4

		 move $out to $LINE_4E 099999

		when = 5

		 move $out to $LINE_4F 099999

		when = 6

		 move $out to $LINE_4G 099999

		when = 7

		 move $out to $LINE_4H 099999

		when = 8

		 move $out to $LINE_4I 099999

		when = 9

		 move $out to $LINE_4J 099999

		when = 10

		 move $out to $LINE_4K 099999

		when = 11

		 move $out to $LINE_4L 099999

		when = 12

		 move $out to $LINE_4M 099999

		when = 13

		 move $out to $LINE_4N 099999

		when = 14

		 move $out to $LINE_4O 0999999

	    end-evaluate

	  when = 5

	    evaluate #EEOcol

	        when = 0

        	 move $out to $LINE_5A 099999

		when = 1

		 move $out to $LINE_5B 099999

		when = 2

		 move $out to $LINE_5C 099999

		when = 3

		 move $out to $LINE_5D 099999

		when = 4

		 move $out to $LINE_5E 099999

		when = 5

		 move $out to $LINE_5F 099999

		when = 6

		 move $out to $LINE_5G 099999

		when = 7

		 move $out to $LINE_5H 099999

		when = 8

		 move $out to $LINE_5I 099999

		when = 9

		 move $out to $LINE_5J 099999

		when = 10

		 move $out to $LINE_5K 099999

		when = 11

		 move $out to $LINE_5L 099999

		when = 12

		 move $out to $LINE_5M 099999

		when = 13

		 move $out to $LINE_5N 099999

		when = 14

		 move $out to $LINE_5O 0999999

	    end-evaluate

	  when = 6

	    evaluate #EEOcol

	        when = 0

        	 move $out to $LINE_6A 099999

		when = 1

		 move $out to $LINE_6B 099999

		when = 2

		 move $out to $LINE_6C 099999

		when = 3

		 move $out to $LINE_6D 099999

		when = 4

		 move $out to $LINE_6E 099999

		when = 5

		 move $out to $LINE_6F 099999

		when = 6

		 move $out to $LINE_6G 099999

		when = 7

		 move $out to $LINE_6H 099999

		when = 8

		 move $out to $LINE_6I 099999

		when = 9

		 move $out to $LINE_6J 099999

		when = 10

		 move $out to $LINE_6K 099999

		when = 11

		 move $out to $LINE_6L 099999

		when = 12

		 move $out to $LINE_6M 099999

		when = 13

		 move $out to $LINE_6N 099999

		when = 14

		 move $out to $LINE_6O 0999999

	    end-evaluate

	  when = 7

	    evaluate #EEOcol

	        when = 0

        	 move $out to $LINE_7A 099999

		when = 1

		 move $out to $LINE_7B 099999

		when = 2

		 move $out to $LINE_7C 099999

		when = 3

		 move $out to $LINE_7D 099999

		when = 4

		 move $out to $LINE_7E 099999

		when = 5

		 move $out to $LINE_7F 099999

		when = 6

		 move $out to $LINE_7G 099999

		when = 7

		 move $out to $LINE_7H 099999

		when = 8

		 move $out to $LINE_7I 099999

		when = 9

		 move $out to $LINE_7J 099999

		when = 10

		 move $out to $LINE_7K 099999

		when = 11

		 move $out to $LINE_7L 099999

		when = 12

		 move $out to $LINE_7M 099999

		when = 13

		 move $out to $LINE_7N 099999

		when = 14

		 move $out to $LINE_7O 0999999

	    end-evaluate

	  when = 8

	    evaluate #EEOcol

	        when = 0

        	 move $out to $LINE_8A 099999

		when = 1

		 move $out to $LINE_8B 099999

		when = 2

		 move $out to $LINE_8C 099999

		when = 3

		 move $out to $LINE_8D 099999

		when = 4

		 move $out to $LINE_8E 099999

		when = 5

		 move $out to $LINE_8F 099999

		when = 6

		 move $out to $LINE_8G 099999

		when = 7

		 move $out to $LINE_8H 099999

		when = 8

		 move $out to $LINE_8I 099999

		when = 9

		 move $out to $LINE_8J 099999

		when = 10

		 move $out to $LINE_8K 099999

	        when = 11

		 move $out to $LINE_8L 099999

		when = 12

		 move $out to $LINE_8M 099999

		when = 13

		 move $out to $LINE_8N 099999

		when = 14

		 move $out to $LINE_8O 0999999



	    end-evaluate

	  when = 9

	    evaluate #EEOcol

	        when = 0

        	 move $out to $LINE_9A 099999

		when = 1

		 move $out to $LINE_9B 099999

		when = 2

		 move $out to $LINE_9C 099999

		when = 3

		 move $out to $LINE_9D 099999

		when = 4

		 move $out to $LINE_9E 099999

		when = 5

		 move $out to $LINE_9F 099999

		when = 6

		 move $out to $LINE_9G 099999

		when = 7

		 move $out to $LINE_9H 099999

		when = 8

		 move $out to $LINE_9I 099999

		when = 9

		 move $out to $LINE_9J 099999

		when = 10

		 move $out to $LINE_9K 099999

		when = 11

		 move $out to $LINE_9L 099999

		when = 12

		 move $out to $LINE_9M 099999

		when = 13

		 move $out to $LINE_9N 099999

		when = 14

		 move $out to $LINE_9O 0999999

	    end-evaluate

	  when = 10

	    evaluate #EEOcol

	        when = 0

        	 move $out to $LINE_10A 099999

		when = 1

		 move $out to $LINE_10B 099999

		when = 2

		 move $out to $LINE_10C 099999

		when = 3

		 move $out to $LINE_10D 099999

		when = 4

		 move $out to $LINE_10E 099999

		when = 5

		 move $out to $LINE_10F 099999

		when = 6

		 move $out to $LINE_10G 099999

		when = 7

		 move $out to $LINE_10H 099999

		when = 8

		 move $out to $LINE_10I 099999

		when = 9

		 move $out to $LINE_10J 099999

		when = 10

		 move $out to $LINE_10K 099999

	        when = 11

		 move $out to $LINE_10L 099999

		when = 12

		 move $out to $LINE_10M 099999

		when = 13

		 move $out to $LINE_10N 099999

		when = 14

		 move $out to $LINE_10O 0999999

	    end-evaluate

	  when = 11

	    evaluate #EEOcol

	        when = 0

        	 move $out to $LINE_11A 099999

		when = 1

		 move $out to $LINE_11B 099999

		when = 2

		 move $out to $LINE_11C 099999

		when = 3

		 move $out to $LINE_11D 099999

		when = 4

		 move $out to $LINE_11E 099999

		when = 5

		 move $out to $LINE_11F 099999

		when = 6

		 move $out to $LINE_11G 099999

		when = 7

		 move $out to $LINE_11H 099999

		when = 8

		 move $out to $LINE_11I 099999

		when = 9

		 move $out to $LINE_11J 099999

		when = 10

		 move $out to $LINE_11K 099999

		when = 11

		 move $out to $LINE_11L 099999

		when = 12

		 move $out to $LINE_11M 099999

		when = 13

		 move $out to $LINE_11N 099999

		when = 14

		 move $out to $LINE_11O 0999999

	    end-evaluate

	  when = 12

	    evaluate #EEOcol

	        when = 0

        	 move $out to $LINE_12A 099999

		when = 1

		 move $out to $LINE_12B 099999

		when = 2

		 move $out to $LINE_12C 099999

		when = 3

		 move $out to $LINE_12D 099999

		when = 4

		 move $out to $LINE_12E 099999

		when = 5

		 move $out to $LINE_12F 099999

		when = 6

		 move $out to $LINE_12G 099999

		when = 7

		 move $out to $LINE_12H 099999

		when = 8

		 move $out to $LINE_12I 099999

		when = 9

		 move $out to $LINE_12J 099999

		when = 10

		 move $out to $LINE_12K 099999

		when = 11

		 move $out to $LINE_12L 099999

		when = 12

		 move $out to $LINE_12M 099999

		when = 13

		 move $out to $LINE_12N 099999

		when = 14

		 move $out to $LINE_12O 0999999



	    end-evaluate

    end-evaluate



end-procedure



!***********************************************************************

begin-procedure EEO-Values

!***********************************************************************



#ifdef !debug9

    !show ' '

    !show '                start procedure EEO-Values for $EstabID = ' $EstabID '  and $EEO_Compny = ' $EEO_Compny

#endif



begin-SELECT

C.EEO_COMPANY_CD

E.DUN_BRADSTREET_NBR

E.EEO_UNIT_NBR

E.SIC		!AXL 8/24/2005 Copied from PER016.SQR

E.NAICS

E.EEO_RPT_PREV_YR

E.EEO_MIN_100

E.EEO_CO_AFFILIATED

E.EEO_GOV_CONTRACTOR



  !AXL 8/24/2005 Allow Indepenents to work - Begin

   let $Comp = ltrim(rtrim(&C.EEO_Company_Cd,' '),' ')   !vendtkk ITG-40829 08-23-2007

  !if isblank(&C.EEO_Company_Cd) = 1   vendtkk

  if isblank($Comp) !vendtkk    ITG-40829   08-23-2007

     let $EEOcompany = 'INDEPNT'

  else

     move &C.EEO_Company_Cd to $EEOcompany    !Company specific code     (Govt supplied)

  end-if

  !AXL 8/24/2005 Allow Indepenents to work - End



  move &E.EEO_Unit_Nbr to $EEOunit         !Unit specific code        (Govt supplied)

  move &E.SIC to $SIC                      !Standard Industrial Code  (Govt supplied)

  move &E.NAICS to $NAICS                  !North Amer Ind Class Sys  (Govt supplied)

  move &E.EEO_Rpt_Prev_Yr to $SectionBc    !Did you file an EEO-1 Report last year?

  move &E.EEO_Min_100 to $SectionC1        !Does ENTIRE company have min 100 employees?

  move &E.EEO_Co_Affiliated to $SectionC2  !Is company affiliated?

  move &E.EEO_Gov_Contractor to $SectionC3 !Is company a Government Contractor?

  move &E.Dun_Bradstreet_NBR to $DUNS         !Dun & Bradstreet ID

FROM PS_COMPANY_TBL  C,

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin

!     PS_ESTAB_TBL  E

     PS_ESTAB_TBL  ESTAB,

     PS_ESTAB_TBL_USA E



!WHERE E.COMPANY = $EEO_Compny

WHERE ESTAB.COMPANY = $EEO_Compny

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - End

AND E.ESTABID = $EstabID

AND E.ESTABID = ESTAB.ESTABID	!GEX-RBC Added for Upgrade 9.0 on 11/27/2007

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - Begin

!AND E.COMPANY = C.COMPANY

AND ESTAB.COMPANY = C.COMPANY

!GEX-RBC Modified for Upgrade 9.0 on 11/27/2007 - End

AND C.EFFDT =

  (SELECT MAX(C1.EFFDT)

   FROM PS_COMPANY_TBL  C1

   WHERE C1.COMPANY = C.COMPANY

   AND C1.EFFDT <= $ThruDate)

!GEX-RBC Added for Upgrade 9.0 on 11/27/2007 - Begin

  AND ESTAB.EFFDT =

  (SELECT MAX(ESTAB1.EFFDT)

   FROM   PS_ESTAB_TBL_USA ESTAB1

   WHERE  ESTAB1.ESTABID = ESTAB.ESTABID

   AND  ESTAB1.EFFDT  <= $ThruDate)

!GEX-RBC Added for Upgrade 9.0 on 11/27/2007 - End

AND E.EFFDT =

  (SELECT MAX(E1.EFFDT)

   FROM   PS_ESTAB_TBL  E1

   WHERE  E1.ESTABID = E.ESTABID

   AND  E1.EFFDT  <= $ThruDate)

end-SELECT



#ifdef !debug9

    !show '                end procedure EEO-Values for $EstabID = ' $EstabID '  and $EEO_Compny = ' $EEO_Compny

    !show ' '

#endif



end-procedure EEO-Values





!***********************************************************************

begin-procedure write-detail-record

!***********************************************************************

	let $NAME_CERT  = 'Michele Reuss'

	let $TITLE_CERT = 'Vice President, Human Resources'

	let $PHONE_CERT = '4129636200'

	let $FAX_CERT   = '4129681618'

	let $EMAIL_CERT = 'Michele.Reuss@gianteagle.com'



   !  ISDVMZA  --  05/06/2014  --  Begin

   !  Set the Report Type to '8' if the store has less than 50 TMs

   !     regardless if this is the first time reporting to EEO.

   if $SectionBc = 'N'

      if #est_tot < 50 and $report_type <> 'HEADQUARTERS' and $report_type <> 'CONSOLIDATED'

         let $report_cd = '8'

      else

         if isblank($EEOunit)

            let $report_cd = '9'

         else

            let $report_cd = '4'

         end-if

      end-if

   end-if

   !  ISDVMZA  --  05/06/2014  --  End



  !VENDTKK    ITG#45332   11/16/2007 Begin





   if ($SectionBc = 'Y')

      let $SectionBc_1 = '1'

   else

      let $SectionBc_1 = '2'

   end-if



   if ($SectionC1 = 'Y')

      let $SectionC1_1 = '1'

   else

      let $SectionC1_1 = '2'

   end-if



   if ($SectionC2 = 'Y')

       let $SectionC2_1 = '1'

   else

       let $SectionC2_1 = '2'

   end-if



   if ($SectionC3 = 'Y')

       let $SectionC3_1 = '1'

   else

       let $SectionC3_1 = '2'

   end-if



   let $DUNS = rtrim($DUNS, ' ')

   let $NAICS = rtrim($NAICS, ' ')

   let $DUNS_1 = lpad($DUNS, 9 , '0')

   let $NAICS_1 = lpad($NAICS, 6 , '0')



   let $date1 = edit($from_dt, 'MMDDYYYY')		!vendtkk

   let $date2 = edit($thru_dt, 'MMDDYYYY')          !vendtkk



   let $Descr = replace(&e2.Descr,',' ,' ')

   let $Descr = replace($Descr,'.' ,' ')

   let $Addr  = replace(&e2.Address1,',',' ')

   let $Addr  = replace($Addr,'.',' ')

   let $Title = replace($TITLE_CERT, ',',' ')

   !VENDTKK    ITG#45332   11/16/2007   end





  write 1 from

  	$EEOcompany:7

	$report_cd:1

	$EEOunit:7

	!&e2.Descr:35				!VENDTKK    ITG#45332   11/16/2007

	$Descr:35				!VENDTKK    ITG#45332   11/16/2007

	!&e2.Address1:34		        !VENDTKK    ITG#45332   11/16/2007

	$Addr:34			        !VENDTKK    ITG#45332   11/16/2007

	' ':25

	&e2.City:20

	&e2.State:2

	&e2.Postal:5

	!' ':4               			!VENDTKK    ITG#45332   11/16/2007

	$SectionBc_1:1

	!&G.Federal_EIN:9     			!VENDTKK    ITG#45332   11/16/2007

	$SectionC1_1:1

	$SectionC2_1:1

	$SectionC3_1:1

	$DUNS_1:9

	&e2.County:18

	!$from_dt:8				!VENDTKK    ITG#45332   11/16/2007

	!$thru_dt:8				!VENDTKK    ITG#45332   11/16/2007

	$date1:8

	$date2:8

	!$D2:1             			!VENDTKK    ITG#45332   11/16/2007

	!$SIC:4					!VENDTKK    ITG#45332   11/16/2007

	$NAICS_1:6

	!$TITLE_CERT:35 		        !VENDTKK    ITG#45332   11/16/2007

	$Title:35			        !VENDTKK    ITG#45332   11/16/2007

	$NAME_CERT:35

	$PHONE_CERT:10

	!$FAX_CERT:10				!VENDTKK    ITG#45332   11/16/2007

	$EMAIL_CERT:40

!	$MATRIX_DATA:737

	$LINE_1A:6

	$LINE_1B:6

	$LINE_1C:6

	$LINE_1D:6

	$LINE_1E:6

	$LINE_1F:6

	$LINE_1G:6

	$LINE_1H:6

	$LINE_1I:6

	$LINE_1J:6

	$LINE_1K:6

	$LINE_1L:6

	$LINE_1M:6

	$LINE_1N:6

	$LINE_1O:7

	$LINE_2A:6

	$LINE_2B:6

	$LINE_2C:6

	$LINE_2D:6

	$LINE_2E:6

	$LINE_2F:6

	$LINE_2G:6

	$LINE_2H:6

	$LINE_2I:6

	$LINE_2J:6

	$LINE_2K:6

	$LINE_2L:6

	$LINE_2M:6

	$LINE_2N:6

	$LINE_2O:7

	$LINE_3A:6

	$LINE_3B:6

	$LINE_3C:6

	$LINE_3D:6

	$LINE_3E:6

	$LINE_3F:6

	$LINE_3G:6

	$LINE_3H:6

	$LINE_3I:6

	$LINE_3J:6

	$LINE_3K:6

	$LINE_3L:6

	$LINE_3M:6

	$LINE_3N:6

	$LINE_3O:7

	$LINE_4A:6

	$LINE_4B:6

	$LINE_4C:6

	$LINE_4D:6

	$LINE_4E:6

	$LINE_4F:6

	$LINE_4G:6

	$LINE_4H:6

	$LINE_4I:6

	$LINE_4J:6

	$LINE_4K:6

	$LINE_4L:6

	$LINE_4M:6

	$LINE_4N:6

	$LINE_4O:7

	$LINE_5A:6

	$LINE_5B:6

	$LINE_5C:6

	$LINE_5D:6

	$LINE_5E:6

	$LINE_5F:6

	$LINE_5G:6

	$LINE_5H:6

	$LINE_5I:6

	$LINE_5J:6

	$LINE_5K:6

	$LINE_5L:6

	$LINE_5M:6

	$LINE_5N:6

	$LINE_5O:7

	$LINE_6A:6

	$LINE_6B:6

	$LINE_6C:6

	$LINE_6D:6

	$LINE_6E:6

	$LINE_6F:6

	$LINE_6G:6

	$LINE_6H:6

	$LINE_6I:6

	$LINE_6J:6

	$LINE_6K:6

	$LINE_6L:6

	$LINE_6M:6

	$LINE_6N:6

	$LINE_6O:7

	$LINE_7A:6

	$LINE_7B:6

	$LINE_7C:6

	$LINE_7D:6

	$LINE_7E:6

	$LINE_7F:6

	$LINE_7G:6

	$LINE_7H:6

	$LINE_7I:6

	$LINE_7J:6

	$LINE_7K:6

	$LINE_7L:6

	$LINE_7M:6

	$LINE_7N:6

	$LINE_7O:7

	$LINE_8A:6

	$LINE_8B:6

	$LINE_8C:6

	$LINE_8D:6

	$LINE_8E:6

	$LINE_8F:6

	$LINE_8G:6

	$LINE_8H:6

	$LINE_8I:6

	$LINE_8J:6

	$LINE_8K:6

	$LINE_8L:6

	$LINE_8M:6

	$LINE_8N:6

	$LINE_8O:7

	$LINE_9A:6

	$LINE_9B:6

	$LINE_9C:6

	$LINE_9D:6

	$LINE_9E:6

	$LINE_9F:6

	$LINE_9G:6

	$LINE_9H:6

	$LINE_9I:6

	$LINE_9J:6

	$LINE_9K:6

	$LINE_9L:6

	$LINE_9M:6

	$LINE_9N:6

	$LINE_9O:7

	$LINE_10A:6

	$LINE_10B:6

	$LINE_10C:6

	$LINE_10D:6

	$LINE_10E:6

	$LINE_10F:6

	$LINE_10G:6

	$LINE_10H:6

	$LINE_10I:6

	$LINE_10J:6

	$LINE_10K:6

	$LINE_10L:6

	$LINE_10M:6

	$LINE_10N:6

	$LINE_10O:7

	$LINE_11A:6

	$LINE_11B:6

	$LINE_11C:6

	$LINE_11D:6

	$LINE_11E:6

	$LINE_11F:6

	$LINE_11G:6

	$LINE_11H:6

	$LINE_11I:6

	$LINE_11J:6

	$LINE_11K:6

	$LINE_11L:6

	$LINE_11M:6

	$LINE_11N:6

	$LINE_11O:7

	!$LINE_12A:6

	!$LINE_12B:6

	!$LINE_12C:6

	!$LINE_12D:6

	!$LINE_12E:6

	!$LINE_12F:6

	!$LINE_12G:6

	!$LINE_12H:6

	!$LINE_12I:6

	!$LINE_12J:6

	!$LINE_12K:6

	!$LINE_12L:6

	!$LINE_12M:6

	!$LINE_12N:6

	!$LINE_12O:7

	&G.Federal_EIN:10     			!ISDVMZA    09/24/2015





	Do Reset-Variables



end-procedure



Begin-Procedure Reset-Variables		!vendtkk ITG-40829 08-31-2007 added to re initialize te variable



        Let $LINE_1A = '000000'

	Let $LINE_1B = '000000'

	Let $LINE_1C = '000000'

	Let $LINE_1D = '000000'

	Let $LINE_1E = '000000'

	Let $LINE_1F = '000000'

	Let $LINE_1G = '000000'

	Let $LINE_1H = '000000'

	Let $LINE_1I = '000000'

	Let $LINE_1J = '000000'

	Let $LINE_1K = '000000'

	Let $LINE_1L = '000000'

	Let $LINE_1M = '000000'

	Let $LINE_1N = '000000'

	Let $LINE_1O = '0000000'

	Let $LINE_2A = '000000'

	Let $LINE_2B = '000000'

	Let $LINE_2C = '000000'

	Let $LINE_2D = '000000'

	Let $LINE_2E = '000000'

	Let $LINE_2F = '000000'

	Let $LINE_2G = '000000'

	Let $LINE_2H = '000000'

	Let $LINE_2I = '000000'

	Let $LINE_2J = '000000'

	Let $LINE_2K = '000000'

	Let $LINE_2L = '000000'

	Let $LINE_2M = '000000'

	Let $LINE_2N = '000000'

	Let $LINE_2O = '0000000'

	Let $LINE_3A = '000000'

	Let $LINE_3B = '000000'

	Let $LINE_3C = '000000'

	Let $LINE_3D = '000000'

	Let $LINE_3E = '000000'

	Let $LINE_3F = '000000'

	Let $LINE_3G = '000000'

	Let $LINE_3H = '000000'

	Let $LINE_3I = '000000'

	Let $LINE_3J = '000000'

	Let $LINE_3K = '000000'

	Let $LINE_3L = '000000'

	Let $LINE_3M = '000000'

	Let $LINE_3N = '000000'

	Let $LINE_3O = '0000000'

	Let $LINE_4A = '000000'

	Let $LINE_4B = '000000'

	Let $LINE_4C = '000000'

	Let $LINE_4D = '000000'

	Let $LINE_4E = '000000'

	Let $LINE_4F = '000000'

	Let $LINE_4G = '000000'

	Let $LINE_4H = '000000'

	Let $LINE_4I = '000000'

	Let $LINE_4J = '000000'

	Let $LINE_4K = '000000'

	Let $LINE_4L = '000000'

	Let $LINE_4M = '000000'

	Let $LINE_4N = '000000'

	Let $LINE_4O = '0000000'

	Let $LINE_5A = '000000'

	Let $LINE_5B = '000000'

	Let $LINE_5C = '000000'

	Let $LINE_5D = '000000'

	Let $LINE_5E = '000000'

	Let $LINE_5F = '000000'

	Let $LINE_5G = '000000'

	Let $LINE_5H = '000000'

	Let $LINE_5I = '000000'

	Let $LINE_5J = '000000'

	Let $LINE_5K = '000000'

	Let $LINE_5L = '000000'

	Let $LINE_5M = '000000'

	Let $LINE_5N = '000000'

	Let $LINE_5O = '0000000'

	Let $LINE_6A = '000000'

	Let $LINE_6B = '000000'

	Let $LINE_6C = '000000'

	Let $LINE_6D = '000000'

	Let $LINE_6E = '000000'

	Let $LINE_6F = '000000'

	Let $LINE_6G = '000000'

	Let $LINE_6H = '000000'

	Let $LINE_6I = '000000'

	Let $LINE_6J = '000000'

	Let $LINE_6K = '000000'

	Let $LINE_6L = '000000'

	Let $LINE_6M = '000000'

	Let $LINE_6N = '000000'

	Let $LINE_6O = '0000000'

	Let $LINE_7A = '000000'

	Let $LINE_7B = '000000'

	Let $LINE_7C = '000000'

	Let $LINE_7D = '000000'

	Let $LINE_7E = '000000'

	Let $LINE_7F = '000000'

	Let $LINE_7G = '000000'

	Let $LINE_7H = '000000'

	Let $LINE_7I = '000000'

	Let $LINE_7J = '000000'

	Let $LINE_7K = '000000'

	Let $LINE_7L = '000000'

	Let $LINE_7M = '000000'

	Let $LINE_7N = '000000'

	Let $LINE_7O = '0000000'

	Let $LINE_8A = '000000'

	Let $LINE_8B = '000000'

	Let $LINE_8C = '000000'

	Let $LINE_8D = '000000'

	Let $LINE_8E = '000000'

	Let $LINE_8F = '000000'

	Let $LINE_8G = '000000'

	Let $LINE_8H = '000000'

	Let $LINE_8I = '000000'

	Let $LINE_8J = '000000'

	Let $LINE_8K = '000000'

	Let $LINE_8L = '000000'

	Let $LINE_8M = '000000'

	Let $LINE_8N = '000000'

	Let $LINE_8O = '0000000'

	Let $LINE_9A = '000000'

	Let $LINE_9B = '000000'

	Let $LINE_9C = '000000'

	Let $LINE_9D = '000000'

	Let $LINE_9E = '000000'

	Let $LINE_9F = '000000'

	Let $LINE_9G = '000000'

	Let $LINE_9H = '000000'

	Let $LINE_9I = '000000'

	Let $LINE_9J = '000000'

	Let $LINE_9K = '000000'

	Let $LINE_9L = '000000'

	Let $LINE_9M = '000000'

	Let $LINE_9N = '000000'

	Let $LINE_9O = '0000000'

	Let $LINE_10A = '000000'

	Let $LINE_10B = '000000'

	Let $LINE_10C = '000000'

	Let $LINE_10D = '000000'

	Let $LINE_10E = '000000'

	Let $LINE_10F = '000000'

	Let $LINE_10G = '000000'

	Let $LINE_10H = '000000'

	Let $LINE_10I = '000000'

	Let $LINE_10J = '000000'

	Let $LINE_10K = '000000'

	Let $LINE_10L = '000000'

	Let $LINE_10M = '000000'

	Let $LINE_10N = '000000'

	Let $LINE_10O = '0000000'

	Let $LINE_11A = '000000'

	Let $LINE_11B = '000000'

	Let $LINE_11C = '000000'

	Let $LINE_11D = '000000'

	Let $LINE_11E = '000000'

	Let $LINE_11F = '000000'

	Let $LINE_11G = '000000'

	Let $LINE_11H = '000000'

	Let $LINE_11I = '000000'

	Let $LINE_11J = '000000'

	Let $LINE_11K = '000000'

	Let $LINE_11L = '000000'

	Let $LINE_11M = '000000'

	Let $LINE_11N = '000000'

	Let $LINE_11O = '0000000'

	Let $LINE_12A = '000000'

	Let $LINE_12B = '000000'

	Let $LINE_12C = '000000'

	Let $LINE_12D = '000000'

	Let $LINE_12E = '000000'

	Let $LINE_12F = '000000'

	Let $LINE_12G = '000000'

	Let $LINE_12H = '000000'

	Let $LINE_12I = '000000'

	Let $LINE_12J = '000000'

	Let $LINE_12K = '000000'

	Let $LINE_12L = '000000'

	Let $LINE_12M = '000000'

	Let $LINE_12N = '000000'

	Let $LINE_12O = '0000000'

End-Procedure Reset-Variables

! CWB 02/02/2004 END















#Include 'stdapi.sqc'    !Routine to update run status

#Include 'askftd.sqc'    !Ask As Of Date input

#Include 'eeogroup_a.sqc'  !Analyze-Sex-EthnicGroup procedure  !VENDTKK  ITG-40829  08/11/2007

#Include 'reset.sqc'     !Reset printer procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure

#Include 'datetime.sqc'  !Routines for date and time formatting

#Include 'number.sqc'    !Routines to format numbers

#Include 'gexxx907.sqc'  !Get company/division code multiple row table

#Include 'gexxx921.sqc'  !Get hr single row run control

#Include 'gexxx951.sqc'  !Select Oracle Instance



