!***********************************************************************
!  GEXPL602:  Local 23 Pension (not eligible) Interface                *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPL602:             Local 23 Pension (not eligible) Interface      *
!                                                                      *
! Narrative:		This program creates a monthly report for      *
!                       Local 23 and a file that contains employee     *
!                       information required by the union to           *
!                       administer the pension benefit.                *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!			#debug8 key variable values                    *
!			#debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:		pay_calendar                                   *
!                       ben_defn_pgm                                   *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                       ben_prog_partic                                *
!                       earnings_bal                                   *
!                       health_benefit                                 *
!                                                                      *
! Written by:		Jim Hutchison                                  *
!                                                                      *
! Normally Run:		Monthly                                        *
!                                                                      *
! Control Parms:	FOR WHERE CLAUSE:                              *
!                         Plan Type(s)                                 *
!                         Benefit Program(s)                           *
!                         Officer Code(s)                              *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS	DATE         DESCRIPTION OF THE CHANGE                 *
!***********************************************************************
!  JDH          02/01/99     Initial Creation.                         *
!  JDH          02/26/99     Add descending sort on effseq.            *
!  JDH          03/03/99     Don't show hours for managers.            *
!  JDH          03/12/99     Fixed problem with earnings balance.      *
!  JDH          04/13/99     Get the effdt, action, action_reason from *
!                             the job row that originally set the      *
!                             empl_status to its current value for     *
!                             empl_status in ('L','P','R','T').        *
!  JDH          06/29/99     Changed logic to get action,              *
!                             action_reason, effdt.                    *
!  SXK          10/21/99     Changed to have union from job_labor      *
!  SXK          11/16/1999   Changed ZIP to POSTAL and SSN to emplid   *
!  PSR          08/27/2002   EMPL_RCD is now part of the key for 
!                            PS_EARNINGS_BAL - Upgrade 8.3
!  ISDVASS   	03/26/2008   Upgrade 9.0 Changes.                        *
!  GEX-TLL      05/21/2008 HCM 9.0 Upgrade (Emplid to SSN Conversion)  *
! GEX_SEC_REENG 2015-04-29 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#include 'setup32.sqc'   !Printer and page-size initialization

!GEX-TLL 05/21/2008 HCM 9.0 Upgrade Changes Begin
!#define #column1     1
!#define #column2    35
!#define #column3    48
!#define #column4    60
!#define #column5    72
!#define #column6    81
!#define #column7    88
!#define #column8    96
!#define #column9   106
!#define #column10  116
!#define #column11  127
!#define #column12  144
!#define #column13  161
#define #column1     1
#define #column2    35
#define #column2_1  47
#define #column3    57
#define #column4    69
#define #column5    81
#define #column6    89
#define #column7    97
#define #column8   105
#define #column9   114
#define #column10  122
#define #column11  131
#define #column12  146
#define #column13  161
!GEX-TLL 05/21/2008 HCM 9.0 Upgrade Changes End

Begin-Heading 8
#debug9 Show 'Begin-Heading'

#Include 'stdhdg01.sqc'

  Do P230-Get-Benefit-Program-Name

  Print 'Ben Pgm:'             (3,1)
  Print $Benefit_Program       (3,13)
  Print $BenefitProgramDescr   (3,) Center

  Print $Reporting_Period      (4,) Center 

  print 'SERVICE'              (+2,{#column3})
  print 'BIRTH'                (+0,{#column4})
  print 'UNION'                (+0,{#column5})
  print 'EMPL'                 (+0,{#column7})
  print 'ACTION'               (+0,{#column9}) 
  print 'EFF'                  (+0,{#column10})
  print '           MTD'       (+0,{#column12})
  print '         TOTAL'       (+0,{#column13})

  print 'EMPLOYEE NAME'        (+1,{#column1}) 
  print 'SSN'                  (+0,{#column2})
  print 'Emplid'               (+0,{#column2_1})   !GEX-TLL 05/21/2008 Added
  print 'DATE'                 (+0,{#column3})
  print 'DATE'                 (+0,{#column4})
  print 'CODE'                 (+0,{#column5})
  print 'F/P'                  (+0,{#column6})
  print 'STAT'                 (+0,{#column7})
  print 'ACTION'               (+0,{#column8}) 
  print 'REASON'               (+0,{#column9}) 
  print 'DATE'                 (+0,{#column10})
  print '     MTD HOURS'       (+0,{#column11})
  print '    VACN HOURS'       (+0,{#column12})
  print '     MTD HOURS'       (+0,{#column13})

  print '-'                    (+1,{#column1},30)  FILL
  print '-'                    (+0,{#column2},09)  FILL
  print '-'                    (+0,{#column2_1},07)FILL   !GEX-TLL 05/21/2008 Added
  print '-'                    (+0,{#column3},08)  FILL
  print '-'                    (+0,{#column4},08)  FILL
  print '-'                    (+0,{#column5},05)  FILL
  print '-'                    (+0,{#column6},03)  FILL
  print '-'                    (+0,{#column7},04)  FILL
  print '-'                    (+0,{#column8},06)  FILL
  print '-'                    (+0,{#column9},06)  FILL
  print '-'                    (+0,{#column10},08) FILL
  print '-'                    (+0,{#column11},14) FILL
  print '-'                    (+0,{#column12},14) FILL
  print '-'                    (+0,{#column13},14) FILL
End-Heading


Begin-Report
#debug9 Show 'Begin-Report'

!  Do Set-Optimizer-Goal			!ISDVASS Upgrade 9.0 Changes

  Do Init-DateTime
  Do Init-Number
  Do Get-Current-DateTime
  Do Stdapi-Init

  Do P100-Start
  Do P200-Main-Process
  Do P300-Finish

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
End-Report


Begin-Procedure Set-Optimizer-Goal
  Begin-SQL
    Alter Session Set OPTIMIZER_GOAL=RULE;
    
  End-SQL
End-Procedure


Begin-Procedure P100-Start
#debug9 Show 'P100-Start'

  move 'GEXPL602'                                    To $ReportID
  move 'LOCAL 23 PENSION (NOT ELIGIBLE) INTERFACE'   To $ReportTitle

  Show '$ReportID=' $ReportID
  Show '$ReportTitle=' $ReportTitle

  Let $GEXXX912_Plan_Type_Alias       = 'hb.plan_type'
  Let $GEXXX911_Benefit_Program_Alias = 'bpp.benefit_program'
  Let $GEXXX929_Officer_Cd_Alias      = 'j.officer_cd'

  If $prcs_process_instance = ''

    Move '''' to $PlanTypeString
    Display 'Enter Plan Type or leave blank to exit.'
    While 1=1
      Input $PlanType Maxlen=2 'Plan Type'
      Uppercase $PlanType
      if RTRIM($PlanType, ' ') = ''
        concat '''' with $PlanTypeString
        break
      end-if
      if $PlanTypeString <> ''''
        concat ''',''' with $PlanTypeString
      end-if
      concat $PlanType with $PlanTypeString
    End-While

    if $PlanTypeString = ''''''
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
    else
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_Plan_Type_Alias || ' In (' || $PlanTypeString || ')'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
    end-if
   
    Let $BenefitProgramString = ''''
    Display 'Enter Benefit Program or leave blank to exit.'
    While 1=1
      Input $In-Benefit-Program Maxlen=3 'Benefit Program'
      Uppercase $In-Benefit-Program
      If Rtrim($In-Benefit-Program, ' ') = ''
        Concat '''' With $BenefitProgramString
        Break
      End-If
      If $BenefitProgramString <> ''''
        Concat ''',''' With $BenefitProgramString
      End-If
      Concat $In-Benefit-Program With $BenefitProgramString
    End-While

    If $BenefitProgramString = ''''''
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = $GEXXX911_Benefit_Program_Alias || ' In (' || $BenefitProgramString || ')'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
    End-If

    Move '''' to $OfficerCdString
    Display 'Enter Officer Code or leave blank to exit.'
    While 1=1
      Input $OfficerCd Maxlen=1 'Officer Code'
      Uppercase $OfficerCd
      if RTRIM($OfficerCd, ' ') = ''
        concat '''' with $OfficerCdString
        break
      end-if
      if $OfficerCdString <> ''''
        concat ''',''' with $OfficerCdString
      end-if
      concat $OfficerCd with $OfficerCdString
    End-While

    if $OfficerCdString = ''''''
      let $GEXXX929_INCLUDE_OFFICER_CD_CRITERIA = '1=1'
      let $GEXXX929_INCLUDE_OFFICER_CD_DISPLAY_CRITERIA = 'ALL'
    else
      let $GEXXX929_INCLUDE_OFFICER_CD_CRITERIA = $GEXXX929_Officer_Cd_Alias || ' In (' || $OfficerCdString || ')'
      let $GEXXX929_INCLUDE_OFFICER_CD_DISPLAY_CRITERIA = $GEXXX929_INCLUDE_OFFICER_CD_CRITERIA
    end-if

  Else

    Do GEXXX912-Select-Benefit-Plan-Parameters
    Do GEXXX911-Select-Benefit-Program-Parameters
    Do GEXXX929-Select-Officer-Cd-Parameters

  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  If $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
    Display 'At least one plan type parameter must be specified'
    Stop
  End-If

  If $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
    Display 'At least one benefit program parameter must be specified'
    Stop
  End-If

  If $GEXXX929_INCLUDE_OFFICER_CD_CRITERIA = '1=1'
    Display 'At least one officer code parameter must be specified'
    Stop
  End-If

  Let $X000_ORDER_BY = 'Benefit Program, Employee Name'

  Show '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA    = '   $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA
  Show '$GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = '   $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA
  Show '$GEXXX929_INCLUDE_OFFICER_CD_DISPLAY_CRITERIA      = '   $GEXXX929_INCLUDE_OFFICER_CD_DISPLAY_CRITERIA

  Do Get-Calendar-Year-Id    !getbalid.sqc

  Do P140-Get-Last-Confirmed-Pay
  Do P150-Print-Cover-Page
  Do P160-Open-File
End-Procedure


Begin-Procedure P140-Get-Last-Confirmed-Pay
#debug9 Show 'P140-Get-Last-Confirmed-Pay'

Begin-Select
pay_period
pay_end_dt
To_Number(To_Char(pay_end_dt,'MM'))          &balance_period
To_Number(To_Char(pay_end_dt,'YYYY'))        &balance_year
To_Char(pay_end_dt,'fmMonth YYYY')           &period
Last_Day(pay_end_dt)                         &current_month_end

  Let $AsOfDate         = &pay_end_dt
  Let $pay_end_dt       = &pay_end_dt
  Let #balance_year     = &balance_year
  Let #balance_period   = &balance_period
  Let $Reporting_Period = &period

  let #balance_qtr = #balance_period
  let #balance_qtr = ((#balance_qtr - 1)/ 3) + 1
  do Format-Number(#balance_qtr, $balance_qtr, '9.99') !avoid rounding the integer portion
  move $balance_qtr to $balance_qtr x     !save the integer portion
  let #balance_qtr = $balance_qtr

  Show 'Report will contain balances for the month of ' $Reporting_Period
  Show 'Last confirmed pay end date:  ' $pay_end_dt

  Do P145-Get-First-Pay-Period

  If Rtrim($pay_end_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  End-If

From   ps_pay_calendar

Where  company                = 'GEI'
And    paygroup               = 'RET'

And    pay_end_dt             =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  company         = 'GEI'
       And    paygroup        = 'RET'
       And    pay_end_dt     <= $AsOfToday
       And    pay_confirm_run = 'Y')

And    pay_confirm_run = 'Y'
End-Select
End-Procedure


Begin-Procedure P145-Get-First-Pay-Period
#debug9 Show 'P145-Get-First-Pay-Period'
Begin-Select
pay_end_dt &first_pay_end_dt

  Let $first_pay_end_dt = &first_pay_end_dt
  Do Convert-to-DTU-Date($first_pay_end_dt, $first_pay_end_dt_dtu)

From   ps_pay_calendar

Where  company    = 'GEI'
And    paygroup   = 'RET'
And    To_Char(check_dt,'YYYYMM')
                  = To_Char(To_Date($pay_end_dt),'YYYYMM')
And    pay_period = 1
End-Select
End-Procedure


begin-procedure P150-Print-Cover-Page
#debug9 Show 'P150-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,1)
  Print '$Prcs_OPRID          = '                             (+2,5)
  Print $Prcs_OPRID                                           (0,+2)
  Print '$PRCS_RUN_CNTL_ID    = '                             (+1,5)
  Print $PRCS_RUN_CNTL_ID                                     (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                   (+5,2)
  Print '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA     = '    (+2,5)
  Print $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA             (0,+2)
  Print '$GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA  = '    (+2,5)
  Print $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA          (0,+2)
  Print '$GEXXX929_INCLUDE_OFFICER_CD_DISPLAY_CRITERIA       = '    (+2,5)
  Print $GEXXX929_INCLUDE_OFFICER_CD_DISPLAY_CRITERIA               (0,+2)

  Print 'Report will contain balances for the month of'       (+2,5)
  Print $Reporting_Period                                     (0,+1)
  Print 'Last confirmed pay end date:'                        (+2,5)
  Print $pay_end_dt                                           (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $X000_ORDER_BY                                        (+2,5)

  Let #PAGE-COUNT = 0
  New-Page
End-Procedure


Begin-Procedure P160-Open-File
#debug9 Show 'P160-Open-File'

  Let $File1 = '{OUTFILE}' || Lower($ReportID) || '.dat'

  Open $File1
    As 1
    For-Writing
    !Record=243:Fixed	!GEX-TLL 05/21/2008 Commented
    Record=260:Fixed	!GEX-TLL 05/21/2008 Added
    Status=#Filestat

  If #Filestat != 0
    Display 'Error Opening output file.  Program terminating.'
    Stop
  End-If
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'

Begin-Select
bpp.benefit_program  ()     On-Break   Level=1
                                       Print=Never
                                       Save=$Save_Benefit_Program
                                       After=P290-After-BP-Break

bpp.emplid
bpp.empl_rcd
bpp.cobra_event_id
!SXK 10/21/99
J.UNION_CD
e.service_dt

pd.name
pd.birthdate
pd.emplid  !SXK 11/16/1999 Changed from ssn
pd.sex
pd.address1
pd.address2
pd.city
pd.state
pd.postal  !SXK 11/16/1999 Changed from zip

j.emplid
j.empl_rcd
j.effdt
j.company
j.deptid
j.jobcode
j.empl_status
j.reg_temp
j.full_part_time
j.gex_volun_low_hrs

  Let $Benefit_Program = &bpp.benefit_program

  Let $Health-Benefit-Row-Found = 'N'

  Do P210-Health-Benefit

  If ($Health-Benefit-Row-Found = 'N') Or
     (&hb.coverage_elect = 'T')
    Let $Data-Found-Flag = 'Y'

    Evaluate &j.empl_status
      When = 'L'
      When = 'P'
      When = 'R'
      When = 'T'
        Do P240-Get-Leave-Begin-Date
        Break
      When-Other
        Do P245-Get-Status-Date
    End-Evaluate

    Let #MTD-Total-Hours    = 0
    Let #YTD-Total-Hours    = 0
    Let #MTD-Vacation-Hours = 0
    Let #MTD-Hours          = 0

    If Substr($Benefit_Program,1,1) <> 'C'
      Let $spcl_balance = '''Y'''
      Let $erncd = '(''PD2'')'
      Do P250-Get-Hours
      Let #MTD-Total-Hours = #hrs_mtd
      Let #YTD-Total-Hours = #hrs_ytd

      Let $spcl_balance = '''N'''
      Let $erncd = '(''513'',''515'')'
      Do P250-Get-Hours
      Let #MTD-Vacation-Hours = #hrs_mtd
      Let #MTD-Hours = #MTD-Total-Hours - #MTD-Vacation-Hours
    End-If

    Do P260-Format-Record
    Do P270-Print-Record
    Do P280-Write-Record

    Add #MTD-Hours           To #BP-MTD-Hours
    Add #MTD-Vacation-Hours  To #BP-MTD-Vacation-Hours
    Add #MTD-Total-Hours     To #BP-MTD-Total-Hours
  End-If

From   ps_personal_data          pd,
       ps_employment             e,
       ps_job                    j,
       ps_ben_prog_partic        bpp

Where [$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA]

And    bpp.effdt                 =
      (Select Max(effdt)
       From   ps_ben_prog_partic
       Where  emplid             = bpp.emplid
       And    empl_rcd          = bpp.empl_rcd
       And    cobra_event_id     = bpp.cobra_event_id
       And    effdt             <= $pay_end_dt)

And    j.emplid                  = bpp.emplid
And    j.empl_rcd               = bpp.empl_rcd

And    pd.emplid                 = bpp.emplid

And    e.emplid                  = bpp.emplid
And    e.empl_rcd               = bpp.empl_rcd

And    j.effdt                   =
      (Select Max(effdt)
       From   ps_job
       Where  emplid             = bpp.emplid
       And    empl_rcd          = bpp.empl_rcd
       And    effdt             <= $pay_end_dt)

And    j.effseq                  =
      (Select Max(effseq)
       From   ps_job
       Where  emplid             = j.emplid
       And    empl_rcd          = j.empl_rcd
       And    effdt              = j.effdt)

And    Months_Between($first_pay_end_dt,e.service_dt) Between 12 And 24

And   [$GEXXX929_INCLUDE_OFFICER_CD_CRITERIA]

Order By bpp.benefit_program, pd.name
End-Select
End-Procedure


Begin-Procedure P210-Health-Benefit
#debug9 Show 'P210-Health-Benefit'

Begin-Select
hb.coverage_elect

  Let $Health-Benefit-Row-Found = 'Y'

From   ps_health_benefit hb

Where  hb.emplid              = &bpp.emplid
And    hb.empl_rcd           = &bpp.empl_rcd
And    hb.cobra_event_id      = &bpp.cobra_event_id

And   [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]

And    hb.coverage_begin_dt   =
      (Select Max(coverage_begin_dt)
       From   ps_health_benefit
       Where  emplid          = hb.emplid
       And    empl_rcd       = hb.empl_rcd
       And    cobra_event_id  = hb.cobra_event_id
       And    plan_type       = hb.plan_type
       And    benefit_nbr        = hb.benefit_nbr
       And    effdt          <= $pay_end_dt)
End-Select
End-Procedure


Begin-Procedure P230-Get-Benefit-Program-Name
#debug9 Show 'P230-Get-Benefit-Program-Name'

Begin-Select
bdp.descr

  Let $BenefitProgramDescr = &bdp.descr

From   ps_ben_defn_pgm   bdp

Where  bdp.benefit_program    = $benefit_program

And    bdp.effdt              =
      (Select Max(effdt)
       From   ps_ben_defn_pgm
       Where  benefit_program = bdp.benefit_program
       And    effdt          <= $pay_end_dt)
End-Select
End-Procedure


Begin-Procedure P240-Get-Leave-Begin-Date
#debug9 Show 'P240-Get-Leave-Begin-Date'
  Let $Status-Change = 'N'
Begin-Select
JOB.EFFDT
JOB.EMPL_STATUS
JOB.ACTION
JOB.ACTION_REASON

  If &JOB.EMPL_STATUS = &J.EMPL_STATUS And
      $Status-Change = 'N'
    Let $Effective-Date = &JOB.EFFDT
    Let $Action         = &JOB.ACTION
    Let $Action_Reason  = &JOB.ACTION_REASON
    Let $Status-Change = 'N'
  Else
    Let $Status-Change = 'Y'
  End-If

FROM   PS_JOB JOB

WHERE  EMPLID     = &J.EMPLID
AND    EMPL_RCD  = &J.EMPL_RCD
AND    EFFDT     <= &J.EFFDT
ORDER BY JOB.EFFDT DESC, JOB.EFFSEQ DESC
End-Select
End-Procedure


Begin-Procedure P245-Get-Status-Date
#debug9 Show 'P245-Get-Status-Date'
  Let $Reg-Temp-Change = 'N'
Begin-Select
J1.EFFDT
J1.REG_TEMP
J1.ACTION
J1.ACTION_REASON
J1.EMPL_STATUS

  If &J1.REG_TEMP = &J.REG_TEMP And
      $Reg-Temp-Change = 'N'
    Let $Reg-Temp-Change = 'N'
    If &J1.EMPL_STATUS <> 'T'
      Let $Effective-Date = &J1.EFFDT
      Let $Action         = &J1.ACTION
      Let $Action_Reason  = &J1.ACTION_REASON
    End-If
  Else
    Let $Reg-Temp-Change = 'Y'
  End-If

FROM   PS_JOB J1

WHERE  EMPLID     = &J.EMPLID
AND    EMPL_RCD  = &J.EMPL_RCD
AND    EFFDT     <= &J.EFFDT
ORDER BY J1.EFFDT DESC, J1.EFFSEQ DESC
End-Select
End-Procedure


Begin-Procedure P250-Get-Hours
#debug9 Show 'P250-Get-Hours'
  Let #hrs_ytd = 0
  Let #hrs_mtd = 0

Begin-Select
eb.balance_period
eb.hrs_mtd
eb.hrs_ytd

  Add &eb.hrs_ytd To #hrs_ytd

  If &eb.balance_period = #balance_period
    Add &eb.hrs_mtd To #hrs_mtd
  End-If

From   ps_earnings_bal eb

Where  eb.emplid              = &j.emplid
And    eb.company             = &j.company
And    eb.balance_id          = 'CY'
And    eb.balance_year        = #balance_year
And    eb.empl_rcd	      = &j.empl_rcd
And    eb.balance_period      =
      (Select Max(balance_period)
       From   ps_earnings_bal
       Where  emplid          = eb.emplid
       And    company         = eb.company
       And    balance_id      = eb.balance_id
       And    balance_year    = eb.balance_year
       And    balance_period <= #balance_period
       And    spcl_balance    = eb.spcl_balance
       And    empl_rcd        = eb.empl_rcd
       And    erncd           = eb.erncd)

And    eb.spcl_balance        = [$spcl_balance]
And    eb.erncd              In [$erncd]
End-Select
End-Procedure


Begin-Procedure P260-Format-Record
#debug9 Show 'P260-Format-Record'

  If &j.gex_volun_low_hrs = 'Y'
    Let $gex_volun_low_hrs = 'Y'
  Else
    Let $gex_volun_low_hrs = ''
  End-If

  Do Format-DateTime(&e.service_dt, $Service_Dt, {DEFMDY}, '', '')

  Let $Year4 = '1'
  Do Format-DateTime(&e.service_dt, $ServiceDt, {DEFYMD}, '', '')

  Do Format-DateTime(&pd.birthdate, $Birthdate, {DEFMDY}, '', '')

  Let $Year4 = '1'
  Do Format-DateTime(&pd.birthdate, $Birth_Date, {DEFYMD}, '', '')

  Let $Year4 = '1'
  Do Format-DateTime($Effective-Date, $effdt, {DEFYMD}, '', '')

  Do Format-DateTime($Effective-Date, $eff_dt, {DEFMDY}, '', '')

  Move #MTD-Hours           To #Pension_MTD_Hours
  Move #MTD-Vacation-Hours  To #Pension_MTD_Vacation_Hours
  Move #MTD-Total-Hours     To #Pension_MTD_Total_Hours
  Move #YTD-Total-Hours     To #Pension_YTD_Total_Hours

  Move #Pension_MTD_Hours To $string
  Unstring $string By '.' Into $string_int $string_after_Dec
  Move $string_int To $string_int_ed 09999
  Let $Pension_MTD_Hours = $string_int_ed || Substr($string_after_Dec,1,2)

  Move #Pension_MTD_Vacation_Hours To $string
  Unstring $string By '.' Into $string_int $string_after_Dec
  Move $string_int To $string_int_ed 09999
  Let $Pension_MTD_Vacation_Hours = $string_int_ed || Substr($string_after_Dec,1,2)

  Move #Pension_MTD_Total_Hours To $string
  Unstring $string By '.' Into $string_int $string_after_Dec
  Move $string_int To $string_int_ed 09999
  Let $Pension_MTD_Total_Hours = $string_int_ed || Substr($string_after_Dec,1,2)

  Move #Pension_YTD_Total_Hours To $string
  Unstring $string By '.' Into $string_int $string_after_Dec
  Move $string_int To $string_int_ed 09999
  Let $Pension_YTD_Total_Hours = $string_int_ed || Substr($string_after_Dec,1,2)

  If Substr($Pension_MTD_Hours,1,1) != '-'
    Let $Pension_MTD_Hours = '+' || Substr($Pension_MTD_Hours,2,6)
  End-If

  If Substr($Pension_MTD_Vacation_Hours,1,1) != '-'
    Let $Pension_MTD_Vacation_Hours = '+' || Substr($Pension_MTD_Vacation_Hours,2,6)
  End-If

  If Substr($Pension_MTD_Total_Hours,1,1) != '-'
    Let $Pension_MTD_Total_Hours = '+' || Substr($Pension_MTD_Total_Hours,2,6)
  End-If

  If Substr($Pension_YTD_Total_Hours,1,1) != '-'
    Let $Pension_YTD_Total_Hours = '+' || Substr($Pension_YTD_Total_Hours,2,6)
  End-If
End-Procedure


Begin-Procedure P270-Print-Record
#debug9 Show 'P270-Print-Record'
!GEX-TLL 05/21/2008 Added Begin
  do Get-Gex-Mapp-EmpIid (&pd.emplid,$emplid_out)            
  do Get-Emp-Ssn (&pd.emplid,$Ssn_Out) 
!GEX-TLL 05/21/2008 Added End
  Add 1 To #BP-Recs-Printed

  Print &pd.name                   (+1,{#column1},30)
  !Print &pd.emplid                 (+0,{#column2})	!GEX-TLL 05/21/2008 
  Print $Ssn_Out                   (+0,{#column2})      !GEX-TLL 05/21/2008 Added
  Print $emplid_out                (+0,{#column2_1}) 	!GEX-TLL 05/21/2008 Added
  Print $Service_Dt                (+0,{#column3})
  Print $Birthdate                 (+0,{#column4})
  Print &J.UNION_CD                (+0,{#column5}) !SXK 10/21/99
  Print &J.full_part_time          (+0,{#column6})
  Print &j.empl_status             (+0,{#column7})
  Print $Action                    (+0,{#column8})
  Print $Action_Reason             (+0,{#column9})
  Print $eff_dt                    (+0,{#column10})
  Print #MTD-Hours                 (+0,{#column11})  Edit 999,999,999.99
  Print #MTD-Vacation-Hours        (+0,{#column12})  Edit 999,999,999.99
  Print #MTD-Total-Hours           (+0,{#column13})  Edit 999,999,999.99
End-Procedure


Begin-Procedure P280-Write-Record
#debug9 Show 'P280-Write-Record'
!GEX-TLL 05/21/2008 HCM 9.0 Upgrade Added Begin
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
  let $emplid_out  =  &pd.emplid 
  !do Get-Gex-Mapp-EmpIid (&pd.emplid,$emplid_out)            
  do Get-Emp-Ssn (&pd.emplid,$Ssn_Out)          
!GEX-TLL 05/21/2008 HCM 9.0 Upgrade Added End
  Add 1 To #recs-written

  write 1 from $Benefit_Program:3
               !&pd.emplid:9	!GEX-TLL  05/21/2008
               $Ssn_Out:9	!GEX-TLL  05/21/2008
	       &pd.name:30
               &pd.sex:1
               $gex_volun_low_hrs:1
	       &j.full_part_time:1
	       &j.reg_temp:1
	       $action:3
	       $action_reason:3
	       $Birth_Date:10
	       $ServiceDt:10
	       $Effdt:10
               '          ':10
               &pd.address1:35
               &pd.address2:35
               &pd.city:30
               &pd.state:2
               &pd.postal:10
               $Pension_MTD_Hours:7
               $Pension_MTD_Vacation_Hours:7
               $Pension_MTD_Total_Hours:7
               $Pension_YTD_Total_Hours:7
  	       '+0000000000':11
  	       $emplid_out:7  	!GEX-TLL  05/21/2008
    Status=#Filestat

  If #Filestat != 0
    Display 'Error Writing output file.  Program terminating.'
    Stop
  End-If
End-Procedure


Begin-Procedure P290-After-BP-Break
#debug9 Show 'P290-After-BP-Break'

  If #BP-Recs-Printed > 0
    Print 'Benefit Program'          (+3,{#column2})
    Print $Save_Benefit_Program      (0,+1)
    Print 'Totals'                   (0,+1)

    Print #BP-MTD-Hours              (+0,{#column11})   Edit 999,999,999.99
    Print #BP-MTD-Vacation-Hours     (+0,{#column12})   Edit 999,999,999.99
    Print #BP-MTD-Total-Hours        (+0,{#column13})   Edit 999,999,999.99

    Let #BP-MTD-Hours           = 0
    Let #BP-MTD-Vacation-Hours  = 0
    Let #BP-MTD-Total-Hours     = 0

    New-Page
    Let #BP-Recs-Printed = 0
  End-If
End-Procedure


Begin-Procedure P300-Finish
#debug9 Show 'P300-Finish'

  Do P310-Close-File
  Do P320-Display-File-Totals
  Do P330-Print-Report-Totals

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
End-Procedure


Begin-Procedure P310-Close-File
#debug9 Show 'P310-Close-File'

  Close 1
End-Procedure


Begin-Procedure P320-Display-File-Totals
#debug9 Show 'P320-Display-File-Totals'

  Move #recs-written To $recs-written   888,888,888

  Display ''
  Display $recs-written          Noline
  Display ' records written to ' Noline
  Display $File1
  Display ''
End-Procedure


Begin-Procedure P330-Print-Report-Totals
#debug9 Show 'P330-Print-Report-Totals'

  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If
End-Procedure


#include 'gexxx912.sqc'  !Get plan type multiple row table
#include 'gexxx911.sqc'  !Get benefit program multiple row table
#include 'gexxx929.sqc'  !Get officer code multiple row table
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'number.sqc'    !Routines to format numbers
#Include 'reset.sqc'     !Reset printer Procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'getgeid.sqc'   !Get 7 digit Emplid 	!GEX-TLL 05/21/2008 

