!***********************************************************************
! GEXBN604:  PENSION RENEWAL                                           *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXBN604:             PENSION RENEWAL                                *
!                                                                      *
! Narrative:            This SQR produces a report and a file          *
!                        containing census data for all employees who  *
!                        are entitled to the corporate pension.        *
!                                                                      *
! #Debugx Used:    	#debug9 paragraph trace                        *
!		      	#debug8 key variable values                    *
!		      	#debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           PS_EARNINGS_BAL                                *
!                       PS_BEN_PROG_PARTIC                             *
!                       PS_JOB                                         *
!                       PS_EMPLOYMENT                                  *
!                       PS_PERSONAL_DATA                               *
!                       PS_GEX_DEPT_TBL                                *
!                                                                      *
! Written by:           Joe Besagar                                    *
!                                                                      *
! Normally run:         Annually                                       *
!                                                                      *
! Control Parms:        As Of Date                                     *
!                       Benefit Programs                               *
!                       Report/Interface Flag                          *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS    DATE           DESCRIPTION OF THE CHANGE                *
!***********************************************************************
!  JNB         08/03/1998     INITIAL CREATION                         *
!                                                                      *
!  SXK         09/08/1998     Added OUTFILE variable                   *
!                                                                      *
!  JDH         08/25/1999     Pull hours from earnings_bal.            *
!                                                                      *
!  SXK         10/20/1999     Modified to have union cd from job_labor *
!                                                                      *
!  SXC         02/15/2000     Included the benefit plan column on the  *
!                             report & interface.                      *
!                                                                      *
!  SXC         02/22/2000     Modified to have YTD_HOURS column report *
!                             using special accumalator TOT. The       *
!                             YTD_GROSS will continue to use the       *
!                             special accumalator CPN. Also only empls *
!                             with status A,P & L will be included.    *
!                                                                      *
!  SXC         03/01/2000     Modified to include all employees,       *
!                             including empls with status A,P,L,T,D,R  *
!                             etc.                                     *
!                             Depending on whether the empl is active  *
!                             or terminated, the appropriate ben.plan  *
!                             will be displayed from the pension_plan  *
!                             table.                                   *
!                                                                      *
!  AXL          08/24/2000    Slight modifications of new logic added  *
!                             previously by SXC to address the process-*
!                             ing of terms and selecting benefit plans *
!                                                                      *
!  AXL          02/23/2001    Allowed formatted dates to be recognized *
!                             by procedure creating DAT file.          *
!                                                                      *
!  AXL          02/04/2002    Added Union Codes TOL, COL, HGN          *
!                                                                      *
!  AXL          02/11/2002    Removed hard-coded union code values and *
!                             added run control logic to pass union    *
!                             codes from panel.                        *
!  PSR          08/12/2002    Modified to get union_cd from job        * 
!                             - Upgrade 8.3                            *
!  PSR          08/27/2002    EMPL_RCD is now part of the key for      *
!                             PS_EARNINGS_BAL - Upgrade 8.3            *
!                                                                      *
!  CJH          02/25/2003    Remove empl_rcd criteria so balances are *
!                             retrieved across all jobs                *
!                                                                      *
!  GBD          07/17/2003    Added code to email dat file when        *
!                             produced                                 *
!                                                                      *
!  AXL  10890   03/02/2005    Shift focus of accumulators from CPN/TOT *
!                             to just CPN                              *
!                                                                      *
!  AXL          03/14/2006    Overhauled sqr to look at new tables &   *
!                             added new procedures in response new     *
!                             requirements.                            *
!
! ISDVNPK 	08/23/2007    Changed XLATTABLE to PSXLATITEM as part of 9.0 upgrade 
! VENDRBC 	12/6/2007     Changed the Print co-ordinate.Previously the ouptput was over writing,
!                    	      for which i have changed the output into correct format.
!                   	      Made changes in the SQR to get the date format as mm/dd/yy. 
!GEX-TLL	04/16/2008    HCM 9.0 Upgrade Retrofitting             *
! ISDVASS  04/23/2008   Changed print coordinates 
! ISDVASS  04/30/2008   modified the sqr to pull action descrs from ps_action_tbl
! GEX_SEC_REENG 2017-01-04 Jyotsna Negi                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************
#include 'setenv.sqc'   !Set environment

!AXL 3/14/2006 - New Multiple Report layout - Begin
begin-setup
!#Include 'setup02.sqc'  !Printer and page-size initialization
#Include 'setup32a.sqc'   !Printer and page-size initialization

!selection criteria
#define #x000_col_selection_criteria_a 	 2
#define #x000_col_selection_criteria_b 	 5

!AXL 03/10/2006 - Begin
!rpt1

#define #x000_col_emp#  		  1
!#define #x000_col_name  		 15   !VENDRBC comments for upgarde 9.0 on.Here i have changed the column size 20 to fit.
#define #x000_col_name  		 12   !VENDRBC End comments for upgarde 9.0  ! ISDVASS changed to 12 from 20
!------------------------------------------
#define #x000_col_benplan                45
#define #x000_col_plan_dt  		 52
#define #x000_col_birthdate  		 62
#define #x000_col_hire  		 72
#define #x000_col_term  		 82
#define #x000_col_cred_svc_dt 		 92
#define #x000_col_vest_svc_dt  		102
#define #x000_col_pen_hrs  		112
#define #x000_col_pen_gross  		122
#define #x000_col_status		134
#define #x000_col_empl_type  		139
#define #x000_col_salary  		142
#define #x000_col_rate			155


!Rpt 2
#define #rpt2_col_status		45
#define #rpt2_col_efftdate  		55
#define #rpt2_col_actn  		67
#define #rpt2_col_actn_rsn  		76

!Rpt 3
#define #rpt3_col_efftdate  		45
#define #rpt3_col_covg  		60
#define #rpt3_col_bnft_pln 		75


  declare-report report-demographics
    layout=DEFAULT
  end-declare

  declare-report report-history
    layout=DEFAULT
  end-declare
   
  
  declare-report Pension-Plan-History
    layout=DEFAULT
  end-declare
 
end-setup

!***********************************************************************
begin-heading 8 for-reports=(report-demographics)
!***********************************************************************
#debug9 show 'begin-heading'

  let $ReportID = 'BN604DMO'
  move 'PENSION RENEWAL - Demographics Report' to $ReportTitle
  If $Interface-Flag <> 'I'

  #Include 'stdhdg01.sqc'

  print 'BENEF'          (+2,{#x000_col_benplan})
  print 'PLAN'           (0,{#x000_col_plan_dt})
  print 'BIRTH'          (0,{#x000_col_birthdate})
  print 'HIRE'           (0,{#x000_col_hire})
  print 'TERM'           (0,{#x000_col_term})
  print 'CRED SVC'       (0,{#x000_col_cred_svc_dt})
  print 'VEST SVC'       (0,{#x000_col_vest_svc_dt}) 
  print '     YTD'	 (0,{#x000_col_pen_hrs})
  print '       YTD'	 (0,{#x000_col_pen_gross})
  print 'EMPL'           (0,{#x000_col_status})
  print 'EMPL'           (0,{#x000_col_empl_type})
  print '   ANNUAL'      (0,{#x000_col_salary})
  print 'HOURLY'         (0,{#x000_col_rate})

  print 'EMPLID'         (+1,{#x000_col_emp#})
  print 'EMPLOYEE NAME'  (0,{#x000_col_name})
  print 'PLAN'           (0,{#x000_col_benplan})
  print 'DATE'           (0,{#x000_col_birthdate})
  print 'DATE'           (0,{#x000_col_plan_dt})
  print 'DATE'           (0,{#x000_col_hire})
  print 'DATE'           (0,{#x000_col_term})
  print 'DATE'           (0,{#x000_col_cred_svc_dt})
  print 'DATE'           (0,{#x000_col_vest_svc_dt}) 
  print '   HOURS'       (0,{#x000_col_pen_hrs})
  print '     GROSS'	 (0,{#x000_col_pen_gross})
  print 'STS'            (0,{#x000_col_status})
  print 'TYPE'           (0,{#x000_col_empl_type})
  print '   SALARY'	 (0,{#x000_col_salary})
  print '  RATE'	 (0,{#x000_col_rate})
  
  print '-' (+1,{#x000_col_emp#},160)      Fill
 
  end-if

end-heading

!***********************************************************************
begin-heading 8 for-reports=(report-history)
!***********************************************************************
#debug9 show 'begin-heading'

  let $ReportID = 'BN604HST'
  move 'PENSION RENEWAL - Status History' to $ReportTitle
  If $Interface-Flag <> 'I'

  #Include 'stdhdg01.sqc'

  print 'EMPL'           (+2,{#rpt2_col_status})
  print 'EFFDT'          (0,{#rpt2_col_efftdate})
  print 'ACTN'           (0,{#rpt2_col_actn_rsn})
 
  print 'EMPLID'         (+1,{#x000_col_emp#})
  print 'EMPLOYEE NAME'  (0,{#x000_col_name})
  print 'STS'            (0,{#rpt2_col_status})
  print 'DATE'           (0,{#rpt2_col_efftdate})
  print 'ACTION'	 (0,{#rpt2_col_actn})
  print 'RSN'	         (0,{#rpt2_col_actn_rsn})
  
  !print '-' (+1,{#x000_col_emp#},90)      Fill
  print '-' (+1,{#x000_col_emp#},120)      Fill
  
 
  end-if

end-heading


!***********************************************************************
begin-heading 8 for-reports=(Pension-Plan-History)
!***********************************************************************
#debug9 show 'begin-heading'

  let $ReportID = 'BN604PEN'
  move 'PENSION RENEWAL - Pension Plan History' to $ReportTitle
  If $Interface-Flag <> 'I'

  #Include 'stdhdg01.sqc'

  print 'EFFDT'          (+2,{#rpt3_col_efftdate})
  print 'COVRG'          (0,{#rpt3_col_covg})
  print 'BNFT'           (0,{#rpt3_col_bnft_pln})
 
  print 'EMPLID'         (+1,{#x000_col_emp#})
  print 'EMPLOYEE NAME'  (0,{#x000_col_name})
  print 'DATE'           (0,{#rpt3_col_efftdate})
  print 'ELECT'		 (0,{#rpt3_col_covg})
  print 'PLAN'	         (0,{#rpt3_col_bnft_pln})
  
  !print '-' (+1,{#x000_col_emp#},90)      Fill
  print '-' (+1,{#x000_col_emp#},120)      Fill
   
  end-if

end-heading
!AXL 3/14/2006 - New Multiple Report layout - End

!***********************************************************************
begin-report
!***********************************************************************
#debug9 show 'begin-report'

  use-report report-demographics

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do StdAPI-Init
  do p010-Init-Variables
  do p100-Get-Employees-Data
  do stdapi-term
  do reset

  show 'Successful end of report'
end-report

!***********************************************************************
begin-procedure P010-Init-Variables
!***********************************************************************
#debug9 show 'P010-Init-Variables'
  let $x000_new_page_flag = 'N'
  
  let $ReportID           = 'GEXBN604'
  let $ReportTitle        = 'PENSION RENEWAL'
  let $Country            = 'USA'

  show '$ReportID= '     $ReportID
  show '$ReportTitle = ' $ReportTitle 
  show '$ReportDate='    $ReportDate
  show '$ReportTime='    $ReportTime

  Do GEXXX951-Select-Oracle-Instance
 
  !AXL 3/14/2006 New Runtrol parms 
  Let $GEXXX912_Plan_Type_Alias       = 'PEN.PLAN_TYPE'
  Let $GEXXX912_Benefit_Plan_Alias    = 'PEN.BENEFIT_PLAN'

  if $Prcs_Process_Instance = ''
    do Ask-As-Of-Date
    let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate

    show '$X000_WHERE_SELECT_ASOFDATE ' $X000_WHERE_SELECT_ASOFDATE

    Display 'Enter Plan Type/Benefit Plan or leave blank to exit.'
    While 1=1
      Input $In-Plan-Type Maxlen=2 'Plan Type'
      Uppercase $In-Plan-Type
      If Rtrim($In-Plan-Type, ' ') = ''
        Break
      Else
        Input $In-Benefit-Plan Maxlen=6 'Benefit Plan'
        Uppercase $In-Benefit-Plan
        If Rtrim($In-Benefit-Plan, ' ') = ''
          Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || $In-Plan-Type || ''')'
        Else
          Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || $In-Plan-Type || ''' And ' || $GEXXX912_Benefit_Plan_Alias || ' = '''  || $In-Benefit-Plan || ''')'
        End-If
        Add 1 To #GEX_RC_BEN_PLAN_ROWS
        If #GEX_RC_BEN_PLAN_ROWS = 1
          Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '(' || $Include_Condition
        Else
          Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ' Or '  || $Include_Condition
        End-If
      End-If
    End-While

    If #GEX_RC_BEN_PLAN_ROWS = 0
      Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
      Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ')'
      Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
    End-If

    While 1=1
      Input $Interface-Flag Maxlen=1 '(R)eport / (I)nterface / (B)oth'
      Uppercase $Interface-Flag
      If $Interface-Flag = 'R' Or
         $Interface-Flag = 'I' Or
         $Interface-Flag = 'B'
        Break
      End-If
    End-While

  else

    Do GEXRCBN1-SELECT-PARAMETERS

    Let $Interface-Flag = &GEX_RC_BEN.GEX_RPT_INTERFACE

    If Rtrim($Interface-Flag, ' ') = ''
      Let $Interface-Flag = 'B'
    End-If

    let $X000_WHERE_SELECT_ASOFDATE = &GEX_RC_BEN.ASOFDATE

    if rtrim(&GEX_RC_BEN.ASOFDATE,' ') = ''
      let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
    end-if

    Do GEXXX912-Select-Benefit-Plan-Parameters
   
  end-if  

  Let $Year4 = '1'
  do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $as_of_date, {DEFYMD},'','')
  let #balance_year   = Substr($as_of_date,1,4)
  let $balance_year   = edit(#balance_year,'9999')

  let $run_begin = '01-JAN-'
  let $run_dd_mon_yyyy_begin = $run_begin || $balance_year

  show 'Balance year - ' #balance_year
  show 'Begin Parameter - ' $run_dd_mon_yyyy_begin

  do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')

  let $X000_ORDER_BY = 'Employee Name'
 
  If $Interface-Flag <> 'I'
  print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
  print '$Prcs_OPRID          ='                              (+1,{#x000_col_selection_criteria_b})
  print $Prcs_OPRID                                           (0,+2)
  print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
  print $PRCS_RUN_CNTL_ID                                     (0,+2)

  print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,{#x000_col_selection_criteria_a})

  print '$X000_WHERE_SELECT_ASOFDATE:'                        (+1,{#x000_col_selection_criteria_b})
  print $X000_REPORT_HEADING_ASOFDATE                         (0,+2)
         
  Print '$GEXXX912_INCLUDE_BENEFIT_PROGRAM_CRITERIA:'         (+2,5)
  Print $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA       (0,+2)
        
  Print '$Interface-Flag:'                                    (+2,5)
  Evaluate $Interface-Flag
    When = 'R'
      Print '(R)eport'                                        (0,+2)
    When = 'I'
      Print '(I)nterface'                                     (0,+2)
    When = 'B'
      Print '(B)oth'                                          (0,+2)
  End-Evaluate

  print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,{#x000_col_selection_criteria_a})
  print '$X000_ORDER_BY                  ='                   (+1,{#x000_col_selection_criteria_b})
  print $X000_ORDER_BY                                        (0,+2)

  let #page-count = 0
  NEW-PAGE
  LET #PAGE-COUNT = 1
  end-if
end-procedure

!***********************************************************************
begin-procedure p100-Get-Employees-Data
!***********************************************************************
#debug9 show 'p100-Get-Employees-Data'

  let $FileName = '{OUTFILE}'||'gexbn604'||'.'||'dat'
  !let $FileName = '//apps/hr/hrms90/hrdev90/outgoing/'||'gexbn604'||'.'||'dat' !GEX-TLL TESTING
  
   let $FileName_Ref = '{OUTFILE}'||'gexbn604_ref'||'.'||'dat'  !GEX-TLL 04/16/2008 HCM 9.0 Upgrade
   !LET $FileName_Ref = '//apps/hr/hrms90/hrdev90/outgoing/GEXBN604.DAT'  !GEX-TLL TESTING

  If $Interface-Flag <> 'R'
    open $FileName as 1 for-writing record=239 status=#filestat

    if #filestat < 0
      display 'File Open error occured;  Cannot proceed'
      goto Report-Exit
    end-if  
    
     End-If  
  !GEX-TLL 04/16/2008 HCM 9.0 Upgrade - Begin
   Open $FileName_Ref  as 4 for-writing record=60 status=#filestat4     
    
    if #filestat4 < 0
      display 'File Open error occured;  Cannot proceed'
      goto Report-Exit
   !GEX-TLL 04/16/2008 HCM 9.0 Upgrade - End   
  End-If  

  !AXL 3/14/2006 New output files
  let $FileName2 = '{OUTFILE}'||'gexbn604'||'.'||'da2'  !GEX-TLL TESTING
  !let $FileName2 = '//apps/hr/hrms90/hrdev90/outgoing/'||'gexbn604'||'.'||'da2' !GEX-TLL TESTING
  If $Interface-Flag <> 'R'
    open $FileName2 as 2 for-writing record=61 status=#filestat2

    if #filestat2 < 0
      display 'File Open error occured;  Cannot proceed'
      goto Report-Exit
    end-if  
  End-If  
        
  let $FileName3 = '{OUTFILE}'||'gexbn604'||'.'||'da3'  !GEX-TLL TESTING
  !let $FileName3 = '//apps/hr/hrms90/hrdev90/outgoing/'||'gexbn604'||'.'||'da3'  !GEX-TLL TESTING

  If $Interface-Flag <> 'R'
    open $FileName3 as 3 for-writing record=61 status=#filestat3

    if #filestat3 < 0
      display 'File Open error occured;  Cannot proceed'
      goto Report-Exit
    end-if  
  End-If  

  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  move 'N' to $Errorfound

  do P115-process-employee-data
   
  if $sev-error = 'Y'
    goto report-exit
  end-if
  
Report-Exit:

  !AXL 3/14/2006 New log statements
  do Format-Number(#InputTran1, $out, '99999')
  show 'Total Transactions on Demographic Extract= ' $out
  
  do Format-Number(#InputTran2, $out, '99999')
  show 'Total Transactions on Job History Extract = ' $out

  do Format-Number(#InputTran3, $out, '99999')
  show 'Total Transactions on Pension Plan History Extract = ' $out

  do Format-Number(#InputTran, $out, '99999')
  show 'Total Transactions = ' $out
  
  If $Interface-Flag <> 'R'
    close 1
    close 2
    close 3
    !Do P850-email-file                                      !GBD 07/17/2003
  End-If  

  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
end-procedure

!***********************************************************************                             
begin-procedure P115-process-employee-data
!***********************************************************************
#debug9 show 'p115-process-employee-data'
!AXL 3/14/2006 Redo main select logic

Let $Data-Found-Flag = 'N'

BEGIN-SELECT

J.EMPLID
J.EMPL_RCD	
J.COMPANY      
J.EFFDT
PD.NAME
PD.SEX
PD.MAR_STATUS
PD.BIRTHDATE
   !Do Format-DateTime(&PD.BIRTHDATE,$birthdt, {DEFMDY}, '', '') !vendrbc
   Let $birthdt= edit(&PD.BIRTHDATE,'MM/DD/YY') !VENDRBC Added for upgarde 9.0 on
PEN.BENEFIT_PLAN
PEN.EFFDT
  ! Do Format-DateTime(&PEN.EFFDT,$plandt, {DEFMDY}, '', '') !vendrbc
  Let $plandt = edit(&PEN.EFFDT,'MM/DD/YY') !VENDRBC Added for upgarde 9.0 on
E.HIRE_DT
  ! Do Format-DateTime(&E.HIRE_DT,$hiredt, {DEFMDY}, '', '')
   Let $hiredt = edit(&E.HIRE_DT,'MM/DD/YY') !VENDRBC Added for upgarde 9.0 on
e.termination_dt	
   !Do Format-DateTime(&e.termination_dt,$termdt, {DEFMDY}, '', '') !vendrbc
   Let $termdt = edit(&e.termination_dt,'MM/DD/YY') !VENDRBC Added for upgarde 9.0 on
GPD.PARTICIPATION_DATE
   !Do Format-DateTime(&GPD.PARTICIPATION_DATE,$particdt, {DEFMDY}, '', '') !vendrbc
   Let $particdt = edit(&GPD.PARTICIPATION_DATE,'MM/DD/YY') !VENDRBC Added for upgarde 9.0 on
GPD.VESTING_DT
   !Do Format-DateTime(&GPD.VESTING_DT,$vestdt, {DEFMDY}, '', '') !VENDRBC 
   Let $vestdt = edit(&GPD.VESTING_DT,'MM/DD/YY') !VENDRBC Added for upgarde 9.0 on
J.EMPL_TYPE
PD.ADDRESS1
PD.ADDRESS2
PD.CITY
PD.STATE      
PD.postal          
J.EMPL_STATUS
J.FULL_PART_TIME
J.ANNUAL_RT
J.HOURLY_RT
J.ACTION

  !AXL 3/14/2006 Retire skip record logic
  !let $skip_record = 'N'

  let $job_yyyy = datetostr(&J.EFFDT,'YYYY')
  !show '$job_yyyy ' $job_yyyy

  ! AXL - 8/24/2000 - Begin
  !if &J.ACTION = 'TER' or &J.ACTION = 'RET'
  !   if to_number($job_yyyy) <> #balance_year
  !      let $skip_record = 'Y'
  !   end-if
  !end-if    
  ! AXL - 8/24/2000 - End

  IF &J.EMPL_TYPE = 'H'
    let #salary_amt  = 0
    let #hourly_rate = &j.hourly_rt
  ELSE
    let #salary_amt  = &j.annual_rt
    let #hourly_rate = 0 
  END-IF

   Let $Data-Found-Flag = 'Y'

 !If $skip_record = 'N'  !AXL - 8/24/2000 Weed out terms from prev yrs

  If &pd.name <> $previous_name
    Let $previous_name = &pd.name
    Add 1 to #total_employee_count
  End-If

  Do Get-Earnings-Hrs
  Do Get-Pension-Earnings

  Do Extract-Status-History
  Do Extract-Pension-Plan-Activity

  If $Interface-Flag <> 'I'
      Do P800-print-fields
  End-If  
  If $Interface-Flag <> 'R'
      Do P820-create-record
  End-If
 Do write-ref-file  !GEX-TLL 04/16/2008 HCM 9.0 Upgrade		
 !End-if

FROM   PS_PERSONAL_DATA PD, 
       PS_EMPLOYMENT E,
       PS_JOB J,
       PS_PENSION_PLAN PEN,
       PS_GEX_PARTIC_DATE GPD

  WHERE  PD.EMPLID = E.EMPLID 
    
     AND E.EMPLID = J.EMPLID
     AND E.EMPL_RCD = J.EMPL_RCD

     AND J.EMPLID = GPD.EMPLID (+)

     AND J.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB 
        WHERE J.EMPLID = EMPLID
          AND J.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $X000_WHERE_SELECT_ASOFDATE)
     AND J.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB 
        WHERE J.EMPLID = EMPLID
          AND J.EMPL_RCD = EMPL_RCD
          AND J.EFFDT = EFFDT)

     AND J.EMPLID   = PEN.EMPLID
     AND J.EMPL_RCD = PEN.EMPL_RCD

     AND (
         (PEN.EFFDT =  (SELECT MAX(EFFDT) FROM PS_PENSION_PLAN 
          WHERE PEN.EMPLID      = EMPLID
            AND PEN.EMPL_RCD    = EMPL_RCD
            AND PEN.PLAN_TYPE   = PLAN_TYPE
            AND PEN.BENEFIT_NBR = BENEFIT_NBR
            AND EFFDT <= $X000_WHERE_SELECT_ASOFDATE)
	    AND  [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]
	    AND  (PEN.EFFDT <= $X000_WHERE_SELECT_ASOFDATE OR
                 PEN.COVERAGE_ELECT <= $X000_WHERE_SELECT_ASOFDATE))

	  OR

	 (PEN.EFFDT = (SELECT MAX(EFFDT) FROM PS_PENSION_PLAN 
          WHERE PEN.EMPLID      = EMPLID
            AND PEN.EMPL_RCD    = EMPL_RCD
            AND PEN.PLAN_TYPE   = PLAN_TYPE
            AND PEN.BENEFIT_NBR = BENEFIT_NBR
            AND EFFDT >
			(SELECT MAX(EFFDT) FROM PS_PENSION_PLAN
				WHERE PEN.EMPLID = EMPLID
				AND PEN.EMPL_RCD = EMPL_RCD
				AND PEN.PLAN_TYPE =PLAN_TYPE
				AND PEN.BENEFIT_NBR = BENEFIT_NBR
				AND EFFDT <= $X000_WHERE_SELECT_ASOFDATE 
            	                AND COVERAGE_ELECT = 'E') )
	   AND PEN.PLAN_TYPE IN (select distinct pen.plan_type from ps_pension_pln_tbl pen
                        where [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA])
           AND PEN.COVERAGE_ELECT_DT BETWEEN $run_dd_mon_yyyy_begin AND $X000_WHERE_SELECT_ASOFDATE
           AND PEN.COVERAGE_ELECT = 'T')
	  
	  )
  
Order By PD.NAME
End-Select
                            
  if $Data-Found-Flag <> 'Y'
    If $Interface-Flag <> 'I'
      print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) CENTER
    End-If
  else
    If $Interface-Flag <> 'I'
      print 'Total Employee Count:'    (+3,{#x000_col_emp#})
      print #total_employee_count      (0,{#x000_col_plan_dt})     Edit 999,999,999
    End-If
  end-if
End-Procedure


!*********************************************************************
begin-procedure get-pension-earnings
!*********************************************************************
#debug9 show 'get-pension-earnings'
begin-select 

sum(PE.grs_ytd)	&sum_grs_ytd
	
   let #sum_grs_ytd = &sum_grs_ytd
      
from PS_GEX_EARNS_BAL PE
 
WHERE PE.EMPLID       = &j.emplid
  AND PE.EMPL_RCD     = &j.empl_rcd
  !AND PE.COMPANY      = &j.company	AXL 6/14/2006 Deactivate per new request
  AND PE.BALANCE_ID   = 'CY'
  AND PE.BALANCE_YEAR = #balance_year
  AND PE.GRS_YTD      > 0

end-select
end-procedure

!*********************************************************************
begin-procedure Get-Earnings-Hrs
!*********************************************************************
#debug9 Show 'Get-Earnings-Hrs'
begin-select 

sum(C2.HRS_YTD)	   &sum_hrs_ytd

   let #sum_hrs_ytd = &sum_hrs_ytd

FROM   PS_EARNINGS_BAL C2

WHERE  C2.EMPLID              = &j.EMPLID
AND    C2.EMPL_RCD            = &j.EMPL_RCD	!AXL 02/20/2003
!AND    C2.COMPANY             = &j.COMPANY	AXL 6/14/2006 Deactivate per new request
AND    C2.BALANCE_ID          = 'CY'
AND    C2.BALANCE_YEAR        = #balance_year
AND    C2.COMPANY             > '999'		!AXL 6/14/2006 Ignore Independants

AND    C2.BALANCE_PERIOD      =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_EARNINGS_BAL
       WHERE  EMPLID          = C2.EMPLID
       AND    EMPL_RCD        = C2.EMPL_RCD	!AXL 02/20/2003
       AND    COMPANY         = C2.COMPANY
       AND    BALANCE_ID      = C2.BALANCE_ID
       AND    BALANCE_YEAR    = C2.BALANCE_YEAR
       AND    SPCL_BALANCE    = C2.SPCL_BALANCE
       AND    ERNCD           = C2.ERNCD)

AND   C2.SPCL_BALANCE        = 'Y'
AND   C2.ERNCD               = 'CPN'   
AND   C2.HRS_YTD             > 0

end-select
end-procedure

!***********************************************************************
begin-procedure Extract-Status-History
!***********************************************************************
Begin-Select

HIST.EMPLID
PD2.NAME
HIST.EFFDT
   !Do Format-DateTime(&HIST.EFFDT,$hist_effdt, {DEFMDY}, '', '') !vendrbc
   Let $hist_effdt = edit(&HIST.EFFDT,'MM/DD/YY') !VENDRBC Added for upgarde 9.0 on
HIST.EMPL_STATUS
HIST.ACTION
HIST.ACTION_REASON
!XLAT.XLATLONGNAME
XLAT.ACTION_DESCR
XLAT2.XLATLONGNAME
ACTN.DESCR

  If $Interface-Flag <> 'I'
      Do Print-fields2
  End-If  
  If $Interface-Flag <> 'R'
      Do create-record2
  End-If

FROM   PS_JOB HIST,
       PS_PERSONAL_DATA PD2,
       !PSXLATITEM XLAT,   ! ISDVNPK 08/23/2007 Changed XLATTABLE to PSXLATITEM as part of 9.0 upgrade  
       PS_ACTION_TBL XLAT,  ! ISDVASS 04/30/2008 for ACTION used ACTION_TBL 
       PSXLATITEM XLAT2,   ! ISDVNPK 08/23/2007 Changed XLATTABLE to PSXLATITEM as part of 9.0 upgrade  
       PS_ACTN_REASON_TBL ACTN

WHERE  HIST.EMPLID           = &J.EMPLID
AND    HIST.EMPL_RCD         = &J.EMPL_RCD
AND    HIST.COMPANY          = &J.COMPANY
 
AND    HIST.EMPLID           = PD2.EMPLID

AND   (HIST.EFFDT between $run_dd_mon_yyyy_begin and $X000_WHERE_SELECT_ASOFDATE
	 OR
       HIST.ACTION_DT between $run_dd_mon_yyyy_begin and $X000_WHERE_SELECT_ASOFDATE)

AND (HIST.ACTION in ('HIR','REH','LTD','RFL','RET','RWP','TWB','TWP')
     or
    HIST.ACTION||HIST.ACTION_REASON in ('PLAST2','PLAST3','PLAST4','PLASTD',
                                        'CORST2','CORST3','CORSTD',
					'PLAWC1','PLAWC2','PLAWC3',
                                        'CORWC1','CORWC2','CORWC3',
					'PLAFML','CORFML',
					'PLAPER','PLAPRS',
					'CORPER','CORPRS',
					'PLAMIL','CORMIL',
					'PLALOF','CORLOF',
					'PLASU1','PLASU2',
					'CORSU1','CORSU2') )

  AND  XLAT.EFFDT =
!        (SELECT MAX(EFFDT) FROM PSXLATITEM ! ISDVNPK 08/23/2007 Changed XLATTABLE to PSXLATITEM as part of 9.0 upgrade  
        (SELECT MAX(EFFDT) FROM PS_ACTION_TBL ! ISDVASS 04/30/2008
!        WHERE XLAT.FIELDNAME = FIELDNAME     ! ISDVASS 04/30/2008
         WHERE XLAT.ACTION = ACTION           ! ISDVASS 04/30/2008 
         AND XLAT.EFF_STATUS = EFF_STATUS     ! ISDVASS 04/30/2008 
  !        AND XLAT.LANGUAGE_CD = LANGUAGE_CD  
!          AND XLAT.FIELDVALUE = FIELDVALUE   ! ISDVASS 04/30/2008 
          AND EFFDT <= $X000_WHERE_SELECT_ASOFDATE)
!  AND XLAT.FIELDNAME = 'ACTION'             ! ISDVASS 04/30/2008
   AND XLAT.EFF_STATUS = 'A'                 ! ISDVASS 04/30/2008 
  AND XLAT.ACTION = HIST.ACTION              ! ISDVASS 04/30/2008

  AND  XLAT2.EFFDT =
        (SELECT MAX(EFFDT) FROM PSXLATITEM ! ISDVNPK 08/23/2007 Changed XLATTABLE to PSXLATITEM as part of 9.0 upgrade  
        WHERE XLAT2.FIELDNAME = FIELDNAME
 !         AND XLAT2.LANGUAGE_CD = LANGUAGE_CD
          AND XLAT2.FIELDVALUE = FIELDVALUE
          AND EFFDT <= $X000_WHERE_SELECT_ASOFDATE)
  AND XLAT2.FIELDNAME = 'EMPL_STATUS'
  AND XLAT2.FIELDVALUE = HIST.EMPL_STATUS

AND ACTN.ACTION = HIST.ACTION
AND ACTN.ACTION_REASON = HIST.ACTION_REASON
AND ACTN.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_ACTN_REASON_TBL
        WHERE ACTN.ACTION        = ACTION
          AND ACTN.ACTION_REASON = ACTION_REASON
          AND EFFDT             <= HIST.EFFDT)

ORDER by HIST.EMPLID, HIST.EFFDT 

end-select
end-procedure

!***********************************************************************
begin-procedure Extract-Pension-Plan-Activity
!***********************************************************************
Begin-Select

PPA.EMPLID
PD3.NAME
PPA.EFFDT
  ! Do Format-DateTime(&PPA.EFFDT,$ppa_effdt, {DEFMDY}, '', '') !vendrbc
  Let $ppa_effdt =edit(&PPA.EFFDT,'MM/DD/YY') !VENDRBC Added for upgarde 9.0 on
PPA.COVERAGE_ELECT_DT
PPA.COVERAGE_ELECT
PPA.BENEFIT_PLAN
XLAT3.XLATLONGNAME

  If $Interface-Flag <> 'I'
      Do Print-fields3
  End-If  
  If $Interface-Flag <> 'R'
      Do create-record3
  End-If

FROM   PS_PENSION_PLAN PPA,
       PS_PERSONAL_DATA PD3,
       PSXLATITEM XLAT3   ! ISDVNPK 08/23/2007 Changed XLATTABLE to PSXLATITEM as part of 9.0 upgrade  

WHERE  PPA.EMPLID           = &J.EMPLID
AND    PPA.EMPL_RCD         = &J.EMPL_RCD
 
AND    PPA.EMPLID           = PD3.EMPLID

AND   (PPA.COVERAGE_ELECT_DT BETWEEN $run_dd_mon_yyyy_begin AND $X000_WHERE_SELECT_ASOFDATE
	 OR
       PPA.EFFDT BETWEEN $run_dd_mon_yyyy_begin AND $X000_WHERE_SELECT_ASOFDATE)

 AND  XLAT3.EFFDT =
        (SELECT MAX(EFFDT) FROM PSXLATITEM
        WHERE XLAT3.FIELDNAME = FIELDNAME
       !   AND XLAT3.LANGUAGE_CD = LANGUAGE_CD
          AND XLAT3.FIELDVALUE = FIELDVALUE
          AND EFFDT <= $X000_WHERE_SELECT_ASOFDATE)
  AND XLAT3.FIELDNAME = 'COVERAGE_ELECT'
  AND XLAT3.FIELDVALUE = PPA.COVERAGE_ELECT

ORDER by PPA.EMPLID, PPA.EFFDT

end-select
end-procedure

!***********************************************************************
begin-procedure P800-print-fields
!***********************************************************************
#debug9 show 'P800-print-fields'
 
  !do Get-Gex-Mapp-EmpIid(&J.EMPLID , $EmplId_Out)	!GEX-TLL 04/16/2008 Added  !GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - Commented 
  !print &j.emplid		(+1,{#x000_col_emp#}) 	!GEX-TLL 04/16/2008 Commented
  !print $EmplId_Out		(+1,{#x000_col_emp#})	!GEX-TLL 04/16/2008 Added        !GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - Commented 
  print &J.EMPLID		(+1,{#x000_col_emp#})                                      !GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - Added 
  print &pd.name		(0,{#x000_col_name})
  print &PEN.BENEFIT_PLAN	(0,{#x000_col_benplan})
  print $plandt                 (0,{#x000_col_plan_dt})
  print $birthdt		(0,{#x000_col_birthdate})
  print $hiredt			(0,{#x000_col_hire})
  print $termdt			(0,{#x000_col_term})
  print $PARTICDT		(0,{#x000_col_cred_svc_dt})
  print	$VESTDT		 	(0,{#x000_col_vest_svc_dt})
  print #sum_HRS_YTD		(0,{#x000_col_pen_hrs})     Edit 9,999.99
  print #sum_grs_ytd		(0,{#x000_col_pen_gross})   Edit 999,999.99
  print &j.empl_status          (0,{#x000_col_status}) 
  print &j.empl_type	        (0,{#x000_col_empl_type})
  print #salary_amt		(0,{#x000_col_salary})      Edit 999,999.99
  print #hourly_rate		(0,{#x000_col_rate})        Edit 999.99

end-procedure 

!***********************************************************************
begin-procedure P820-create-record
!***********************************************************************
#debug9 show 'P820-create-record'

  let $pen_effdt_prt =  datetostr(&PEN.EFFDT,'MM/DD/YYYY') 
  let $birth_dt_prt  =  datetostr(&PD.BIRTHDATE,'MM/DD/YYYY') 
  let $hire_dt_prt   =  datetostr(&E.HIRE_DT,'MM/DD/YYYY') 
  let $term_dt_prt   =  datetostr(&E.TERMINATION_DT,'MM/DD/YYYY') 
  let $plan_partic_dt_prt =  datetostr(&GPD.PARTICIPATION_DATE,'MM/DD/YYYY') 
  let $vesting_dt_prt     =  datetostr(&GPD.VESTING_DT,'MM/DD/YYYY')  
  
  let $hourly_rate = edit(#hourly_rate,'0000.99')
  let $salary      = edit(#salary_amt,'000000.99')
  let $ytd_hrs     = edit(#sum_hrs_ytd,'00000.99')
  let $ytd_grs     = edit(#sum_grs_ytd,'0000000.99')

  let $MAR_STATUS  = ' '


  move 'N' to $sev-error 
  let #file-stat  =  0
!GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - Begin
  !do Get-Gex-Mapp-EmpIid(&J.EMPLID , $EmplId_Out)  !GEX-TLL 04/16/2008 Added
  !write 1 from $EmplId_Out:7			   !GEX-TLL 04/16/2008 Added
   write 1 from &J.EMPLID:7
!GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - End
  !write 1 from &J.EMPLID:9                        !GEX-TLL 04/16/2008 Commented
               &PD.NAME:35
	       &PD.SEX:1
	       $MAR_STATUS:1
               &PEN.BENEFIT_PLAN:6
	       $PEN_EFFDT_PRT:10
	       $birth_dt_prt:10
	       $hire_dt_prt:10
               $term_dt_prt:10
	       $plan_partic_dt_prt:10
               $vesting_dt_prt:10
	       &J.EMPL_TYPE:1
	       $ytd_hrs:8
               $ytd_grs:10
	       $salary:9
	       $hourly_rate:7
	       &pd.ADDRESS1:30            
               &pd.ADDRESS2:30            
               &pd.CITY:20                 
               &pd.STATE:2      
               &pd.postal:10          

    STATUS=#FILE-STAT

  let #inputtran = #inputtran + 1
  let #inputtran1 = #inputtran1 + 1

  if #file-stat <> 0
    move 'Y' to $sev-error
    show 'Error writing to the file:' (,30)
  end-if
end-procedure  

!***********************************************************************
begin-procedure write-ref-file              !GEX-TLL 04/16/2008 Added
!***********************************************************************

	 let #FILE-STAT4  =  0
!GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - Begin	
     !do Get-Gex-Mapp-EmpIid(&J.EMPLID , $EmplId_Out)
  do Get-Emp-Ssn (&J.EMPLID, $Ssn_Out)
   write 4 from $Ssn_Out:9
  !write 4 from &J.EMPLID:9
!GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - End
               ' ':4
!               $EmplId_Out:7                      !GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - Commented
                &J.EMPLID:7                        !GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - Added
               ' ':4
               &J.EMPL_RCD:1
               
        STATUS=#FILE-STAT4

  if #file-stat4 <> 0
    move 'Y' to $sev-error
    show 'Error writing to the file:' (,30)
  end-if
  
end-procedure  

!***********************************************************************
begin-procedure Print-fields2
!***********************************************************************
#debug9 show 'Print-fields2'
  use-report report-history
!GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - Begin
!  do Get-Gex-Mapp-EmpIid(&J.EMPLID , $EmplId_Out)	!GEX-TLL 04/16/2008 Added
!  print $EmplId_Out		(+1,{#x000_col_emp#})   !GEX-TLL 04/16/2008 Added
   print &J.EMPLID		(+1,{#x000_col_emp#})
!GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - End
  !print &j.emplid		(+1,{#x000_col_emp#})   !GEX-TLL 04/16/2008 Commented
  print &pd.name		(0,{#x000_col_name})
  print &j.empl_status          (0,{#rpt2_col_status}) 
  print $hist_effdt		(0,{#rpt2_col_efftdate}) 
  print &HIST.ACTION		(0,{#rpt2_col_actn}) 
  print &HIST.ACTION_REASON	(0,{#rpt2_col_actn_rsn}) 
 
  use-report report-demographics

end-procedure 

!***********************************************************************
begin-procedure create-record2
!***********************************************************************
#debug9 show 'create-record2'

  let $hist_effdt_prt =  datetostr(&HIST.EFFDT,'MM/DD/YYYY')

  move 'N' to $sev-error 
  let #file-stat2  =  0
!GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - Begin
!  do Get-Gex-Mapp-EmpIid(&HIST.EMPLID , $EmplId_Out)    !GEX-TLL 04/16/2008 Added
!  write 2 from $EmplId_Out:7     !GEX-TLL 04/16/2008 Added
  write 2 from &HIST.EMPLID:7
!GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - End
  !write 2 from &HIST.EMPLID:9   !GEX-TLL 04/16/2008 Commented
               &PD2.NAME:35   
               $HIST_EFFDT_PRT:10
	       &HIST.EMPL_STATUS:1
	       &HIST.ACTION:3
	       &HIST.ACTION_REASON:3
	       !&XLAT2.XLATLONGNAME:30	user changed their minds
	       !&XLAT.XLATLONGNAME:30	user changed their minds
	       !&ACTN.DESCR:30		user changed their minds

    STATUS=#FILE-STAT2

  let #inputtran = #inputtran + 1
  let #inputtran2 = #inputtran2 + 1

  if #file-stat2 <> 0
    move 'Y' to $sev-error
    show 'Error writing to the file:' (,30)
  end-if

end-procedure   

!***********************************************************************
begin-procedure Print-fields3
!***********************************************************************
#debug9 show 'Print-fields3'
  use-report Pension-Plan-History
!GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - Begin
!  do Get-Gex-Mapp-EmpIid(&J.EMPLID , $EmplId_Out)	!GEX-TLL 04/16/2008 Added	
!  print $EmplId_Out		(+1,{#x000_col_emp#})	!GEX-TLL 04/16/2008 Added
   print &J.EMPLID		(+1,{#x000_col_emp#})
!GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - End
  !print &j.emplid		(+1,{#x000_col_emp#})	!GEX-TLL 04/16/2008 Commented 
  print &pd.name		(0,{#x000_col_name})
  print $ppa_effdt		(0,{#rpt3_col_efftdate}) 
  print &XLAT3.XLATLONGNAME	(0,{#rpt3_col_covg}) 
  print &PPA.BENEFIT_PLAN	(0,{#rpt3_col_bnft_pln}) 
 
  use-report report-demographics

end-procedure 

!***********************************************************************
begin-procedure create-record3
!***********************************************************************
#debug9 show 'create-record3'

  let $ppa_effdt_prt =  datetostr(&PPA.EFFDT,'MM/DD/YYYY')

  move 'N' to $sev-error 
  let #file-stat3  =  0
!GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - Begin
!  do Get-Gex-Mapp-EmpIid(&PPA.EMPLID , $EmplId_Out) !GEX-TLL 04/16/2008 Added
!  write 3 from $EmplId_Out	!GEX-TLL 04/16/2008 Added
   write 3 from &PPA.EMPLID
!GEX_SEC_REENG 2017-01-04 - Jyotsna Negi - End
  !write 3 from &PPA.EMPLID:9	!GEX-TLL 04/16/2008 Commented
               &PD3.NAME:35
	       $PPA_EFFDT_PRT:10
	       &PPA.COVERAGE_ELECT:1
	       !&XLAT3.XLATLONGNAME:30  user changed their minds
	       &PPA.BENEFIT_PLAN:6              

    STATUS=#FILE-STAT3

  let #inputtran = #inputtran + 1
  let #inputtran3 = #inputtran3 + 1

  if #file-stat3 <> 0
    move 'Y' to $sev-error
    show 'Error writing to the file:' (,30)
  end-if

end-procedure   

!GBD 07/17/2003 Begin
!***********************************************************************
begin-procedure P850-email-file
!***********************************************************************
   do GEXXX951-Select-Oracle-Instance
   let $db_name = lower($GEXXX951_Oracle_Instance)
   Do GEXXX971-Select-Trans-Type-Parameters
   if ($GEXXX971_EMAIL_ADDR_CRITERIA = '') and ($GEXXX971_FTP_ADDR_CRITERIA = '')
      show 'Either no rows exist on GEX_INTFC_RULE/DATA for this Oprid/Run Control ID'
      show 'or the most current rows under this ID have been set to inactive. Data will'
      show 'not be sent.'
   else
      if $GEXXX971_GEX_TRANS_TYPE = 'E'
         show $GEXXX971_EMAIL_ADDR_CRITERIA
         show 'This is the email statement produced: '

         let $UNIX_MAIL_COMMAND = '/usr/local/bin/todos -v ' || $FileName ||
         ' &&/usr/local/bin/mailer.pl "'||$GEXXX971_EMAIL_ADDR_CRITERIA||'" "PENSION RENEWAL" '||
         '"$BINDIR/gexbn604_msg.sh" ' || $FileName || ' '
         show $UNIX_MAIL_COMMAND
      
         CALL SYSTEM USING $UNIX_MAIL_COMMAND #system_status
        
         if #system_status <> 0
            add 1 to #errorcount
            display 'eMail of ' noline
            display $FileName
            display ' failed'
            STOP
         else
            display $FileName
            display ' was emailed successfully'
         end-if

      end-if
      if $GEXXX971_GEX_TRANS_TYPE = 'F'
         show $GEXXX971_FTP_ADDR_CRITERIA
         show 'Need to insert a Call FTP shell script to run ftp'
      end-if
   end-if

end-procedure
!GBD 07/17/2003 End

!***********************************************************************
begin-procedure P900-SQL-Error-Found($Proc_Name)
!***********************************************************************
#debug9 show 'P900-SQL-Error-Found'
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
end-procedure
 
!***********************************************************************
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'reset.sqc'     !Reset printer procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'gexxx951.sqc'  !Select Oracle Instance
#Include 'gexxx912.sqc'  !Get Plan Type/Benefit Plan Multiples Run Controls
#Include 'gexxx920.sqc'  !Run Control parameters from GEX_RC_BEN record 
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'gexxx951.sqc'  !Oracle Database Name             !GBD 07/17/2003
#Include 'gexxx971.sqc'  !Email and FTP Parameters         !GBD 07/17/2003
#Include 'getgeid.sqc'					   !GEX-TLL  04/16/2008