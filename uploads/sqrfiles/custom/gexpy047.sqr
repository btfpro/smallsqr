!***********************************************************************
! GEXPY047: United Way Pledge List                                     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      * 
! GEXPY030:             UNITED WAY PLEDGE LIST                         *
!                                                                      *
! Narrative:            This program is run yearly to show all         *
!                       employees who have contributed in the past and *
!                       what their goal amount was.                    *
!                                                                      *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!		      	#debug8 key variable values                    * 
!		      	#debug7 data returned from sql calls           * 
!                                                                      *
! SQL Tables:           PS_GENL_DEDUCTION                              *
!                       PS_JOB                                         *
!                       PS_PERSONAL_DATA                               *
!                                                                      *
! Origianal Version						       *
! Written by:           Gene Davis                                     *
! Current Version 		        			       *
! Written by:           Tony Labra                                     *
!                                                                      *
! Normally run:         Monthly                                        *
!                                                                      *
! Entered Run                                                          *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                                                                      *
!                       Company Division Code                          *
!            		Company  	                               *
!                       Company/Paygroup                               *
!      			Deptid                                         *
!                       Acctcd                                         *
!     			Empl_Status	                               *
!                                                                      *
!                       FOR ORDER BY CLAUSE:                           *
!                       1)  JOB.COMPANY, JOB.PAYGROUP, JOB.DEPTID,     *
!                           JOB.ACCT_CD, PD.NAME                       *  
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  xxxx    GXD         02/12/1998     INITIAL CREATION                 *
!          JNB         04/19/1998     ADDED RUN CONTROL LOGIC          *
!  HR48x   AXL	       08/16/1999     Overhauled On-Break logic and    *
!				      added acct_cd to sort and breaks *
!          PSR         09/18/2002     PS_GENL_DEDUCTION had EMPL_RCD# 
!                                     removed as a part of the key
!                                     V8.3 Upgrade 
!  PY030   Manish      08/16/2007     HCM 9.0 Upgrade
!          GEX-MXT     09/26/2007     Replaced PS_ACCT_CD_TBL with     *
!                                     PS_GEX_ACCT_CD_TBL
!          GEX-MXT     09/27/2007     To format grand total of Total   *
!				      pledge column                    *
!***********************************************************************
!selection criteria
#define #x000_col_selection_criteria_a 	02
#define #x000_col_selection_criteria_b 	05

!line 1
#define #x000_col_name			51
#define #x000_col_emplid		83
#define #x000_col_weeklyamt		96
#define #x000_col_totalpledge		113	

#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 

!*********************************************************************
begin-report
!*********************************************************************
#debug9 show 'begin-report'

  do Initialization
  do Main-Process
  do Stdapi-Term
  do EOJ

end-report

!***********************************************************************
begin-heading 10
!***********************************************************************
#debug9 show 'begin-heading'

 #Include 'stdhdg01.sqc'

 Let #x000_temp_out = 'Sorted by ' || $x000_order_by
 print $x000_temp_out       (3,) center

  Do Company-Name
  print 'Company'          (+1,1)
  print $Company	   (0,13)
  print $CompanyName	   (0,18)

  do PayGroup-Name
  print 'Paygroup'         (+1,1)
  print $Paygroup          (0,13)
  print $PayGroupName      (0,18)
  
  do Deptid-Name
  print 'Deptid'           (+1,1)
  print $Deptid            (0,13)
  print $DeptName          (0,18)

  do Acct_cd-Name
  print 'Acct Code'        (+1,1)
  print $Acct_cd           (0,13)
  print $AcctCDName        (0,18)

  print '-' (+1,1,130) fill

  print  'EMPLOYEE NAME'     (+1,{#x000_col_name})          bold
  print  'EMP#'              (0,{#x000_col_emplid})        bold
  print  'WEEKLY AMOUNT'     (0,{#x000_col_weeklyamt})     bold
  print  'TOTAL PLEDGE'      (0,{#x000_col_totalpledge})   bold

  print '-' (+1,1,130) fill
   
end-heading

!***********************************************************************
begin-procedure Initialization
!***********************************************************************
#debug9 show 'Initialization'

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Get-Calendar-Year-Id
  do Stdapi-Init

  let #record_count = 0
  let $first_rec='Y'

  Let $GEXXX900_Company_Alias  = 'JOB.COMPANY'   
  Let $GEXXX901_Company_Alias  = 'JOB.COMPANY' 
  Let $GEXXX901_Paygroup_Alias = 'JOB.PAYGROUP'       
  Let $GEXXX902_Deptid_Alias   = 'JOB.DEPTID'     
  Let $GEXXX903_Emp_Stat_Alias = 'JOB.EMPL_STATUS'  
  Let $GEXXX907_Div_CD_Alias   = 'GEX_DEPT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias  = 'JOB.ACCT_CD'
  let $X000_ORDER_BY = 'JOB.COMPANY, JOB.PAYGROUP, JOB.DEPTID, JOB.ACCT_CD, PD.NAME'

  date-time () YYYY &curr_yy
  
  If $Prcs_process_instance = ''    
     do Process-SQRW-Input
     let $curr_yy = &curr_yy
  else
     do Process-Run-Control
  end-if

   let $begyear = '01/01/'||$curr_yy
   let $endyear = '12/31/'||$curr_yy

   let $X000_WHERE_SELECT_ASOFDATE = $endyear

   do Format-Datetime($begyear, $byear,{DEFMDY},'','native')
   do Format-Datetime($endyear, $eyear,{DEFMDY},'','native')

  date-time () hh:mi:ss &TimeBegan
  date-time () MM/DD/YYYY  &DateBegan
  show 'Report Began at ' &TimeBegan ' on '  &DateBegan
  

  let $ReportID           = 'GEXPY047'
  let $ReportTitle        = 'UNITED WAY PLEDGE LIST'
 
  show '$ReportID= '     $ReportID
  show '$ReportTitle = ' $ReportTitle   

  show '$GEXXX900_INCLUDE_COMPANY_CRITERIA          =' $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA
  show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA =' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA   
  show '$GEXXX902_INCLUDE_DEPTID_CRITERIA           =' $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA
  show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA         =' $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA
  show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA           =' $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA          =' $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA         
  show '$X000_WHERE_SELECT_ASOFDATE                 =' $X000_WHERE_SELECT_ASOFDATE 
  show '$X000_ORDER_BY                              =' $X000_ORDER_BY
 
  do Print-Cover-Page
  new-page

end-procedure

!***********************************************************************
begin-procedure Process-SQRW-Input
!***********************************************************************
#debug9 show 'Process-SQRW-Input'

  let $GEXXX900_INCLUDE_COMPANY_CRITERIA	  = '1=1'
  let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA  = 'ALL'

  do GEXXX950-Input-Parameters
   

end-procedure

!***********************************************************************
begin-procedure Process-Run-Control
!***********************************************************************
#debug9 show 'Process-Run-Control'

   do GEXXX922-Select-Parameters 
 
   if #GEX_RC_PAY.BALANCE_YEAR = 0
     let $curr_yy = &curr_yy
   else
     move #GEX_RC_PAY.BALANCE_YEAR to $curr_yy 9999
   end-if
 
   do GEXXX900-Select-Company-Parameters  
   do GEXXX901-Select-Company-Paygroup-Parameters    
   do GEXXX902-Select-Deptid-Parameters 
   do GEXXX903-Select-Emp-Stat-Parameters          
   do GEXXX907-Select-Div-CD-Parameters
   do GEXXX909-Select-Acct-CD-Parameters

end-procedure

!***********************************************************************
Begin-Procedure Print-Cover-Page
!***********************************************************************

   print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'          (+5,2)
   print '$Prcs_OPRID          ='                                (+2,6)
   print $Prcs_OPRID                                             (0,+2)
   print '$PRCS_RUN_CNTL_ID    ='                                (+1,6)
   print $PRCS_RUN_CNTL_ID                                       (0,+2)

   print 'SELECTION CRITERIA FOR THIS REPORT RUN:'               (+5,2)
    
   print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          =' (+1,6)
   print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA              (0,+2)

   print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA =' (+1,6)
   print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA     (0,+2)

   print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           =' (+1,6)
   print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	         (0,+2)

   print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         =' (+1,6)
   print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA             (0,+2)

   print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           =' (+1,6)
   print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA 		 (0,+2)
 
   print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          =' (+1,6)
   print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA              (0,+2)

   print '$X000_WHERE_SELECT_ASOFDATE                         =' (+1,6)
   print  $X000_WHERE_SELECT_ASOFDATE                            (0,+2)

   print '$X000_ORDER_BY                                      =' (+1,6)
   print $X000_ORDER_BY 					 (0,+2)

   let #page-count = 0
  
end-procedure

!*********************************************************************
begin-procedure Main-Process
!*********************************************************************
#debug9 show 'Main-Process'

 Let $x100_Get_Employees_Data_Flag = 'N'

begin-select ON-ERROR=SQL-Error-Found('Main-Process')
JOB.COMPANY	() 	on-break	level=1
					print=never
 					after=Company-Totals
					save=$prev_company
 					
JOB.PAYGROUP	() 	on-break	level=2
					print=never
		       			after=Paygroup-Totals     
					save=$prev_paygroup                               

JOB.DEPTID	() 	on-break	level=3
					print=never
					after=Deptid-Totals
					save=$prev_deptid

JOB.ACCT_CD	() 	on-break	level=4
					print=never
					before=Before-Acct_cd
					after=Acct_CD-Totals
					save=$prev_acct_cd

JOB.EMPLID	  
PD.NAME    
GD.DED_ADDL_AMT          &ded_addl_amt
  move &ded_addl_amt to #ded_addl_amt 
GD.GOAL_AMT              &goal_amt
  move &goal_amt     to #goal_amt

  
  Let $x100_Get_Employees_Data_Flag = 'Y'
  Let $Company	= &JOB.Company
  Let $Paygroup = &JOB.Paygroup
  Let $Deptid   = &JOB.Deptid
  Let $Acct_cd  = &JOB.Acct_cd
  add 1 to #record_count
  add #ded_addl_amt to #acct_cd_addl_amt
  add #goal_amt     to #acct_cd_goal_amt
  
  do Print-Detail
 
FROM PS_GENL_DEDUCTION GD, PS_JOB JOB,
     PS_PERSONAL_DATA PD,  PS_GEX_DEPT_TBL GEX_DEPT
WHERE GD.EMPLID = JOB.EMPLID
AND   JOB.EMPLID = PD.EMPLID
!PSR 09/18/2002 V8.3 Upgrade Begin
!AND   GD.EMPL_RCD = JOB.EMPL_RCD
AND   GD.COMPANY = JOB.COMPANY
!PSR 09/18/2002 V8.3 Upgrade End
AND   GD.DEDCD = 'UNWAY'
AND   GD.EFFDT = (SELECT MAX(EFFDT) FROM PS_GENL_DEDUCTION 
		 WHERE GD.EMPLID    = EMPLID
		 !PSR 09/18/2002 V8.3 Upgrade Begin
		 !AND   GD.EMPL_RCD = EMPL_RCD
		 AND   GD.COMPANY =  COMPANY
		 !PSR 09/18/2002 V8.3 Upgrade End
		 AND   DEDCD = 'UNWAY'
		 AND   EFFDT between $byear and $eyear)
AND  JOB.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB 
		 WHERE JOB.EMPLID    = EMPLID
		 AND   JOB.EMPL_RCD = EMPL_RCD
		 AND   EFFDT <= $eyear)
AND  JOB.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
		  WHERE JOB.EMPLID    = EMPLID
		  AND   JOB.EMPL_RCD = EMPL_RCD
		  AND   JOB.EFFDT     = EFFDT)
AND JOB.DEPTID = GEX_DEPT.DEPTID 
AND GEX_DEPT.EFFDT = (SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
		     WHERE GEX_DEPT.DEPTID = DEPTID AND
			   EFFDT <= $eyear)
AND GEX_DEPT.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM PS_GEX_DEPT_TBL
		     WHERE GEX_DEPT.DEPTID = DEPTID
                     AND   GEX_DEPT.EFFDT =  EFFDT)
AND [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
AND [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
ORDER BY  [$x000_order_by]

end-select
    
   do Print-All-Totals

end-procedure

!*********************************************************************
begin-procedure Before-Acct_cd
!*********************************************************************
  
  if $first_rec = 'Y'
    let $first_rec ='N'
  else
    new-page
  end-if

end-procedure

!*********************************************************************
begin-procedure Acct_cd-Totals
!*********************************************************************

    do Format-Number(#acct_cd_addl_amt, $acct_cd_addl_amt, '$,$$$,$$9.99')
    do Format-Number(#acct_cd_goal_amt, $acct_cd_goal_amt, '$,$$$,$$9.99')

    move $prev_acct_cd to $Acct_cd  		! For Header
    
    print 'TOTALS FOR ACCOUNT CODE'     (+1,1)
    print $prev_acct_cd                 (0,+1)
    print $acct_cd_addl_amt             (0,97)
    print $acct_cd_goal_amt             (0,113)
    position 				(+1)

  add #acct_cd_addl_amt to #deptid_addl_amt
  add #acct_cd_goal_amt to #deptid_goal_amt

  let #acct_cd_addl_amt = 0
  let #acct_cd_goal_amt = 0

end-procedure

!*********************************************************************
begin-procedure Deptid-Totals
!*********************************************************************

    do Format-Number(#deptid_addl_amt, $deptid_addl_amt, '$,$$$,$$9.99')
    do Format-Number(#deptid_goal_amt, $deptid_goal_amt, '$,$$$,$$9.99')

    move $prev_deptid to $deptid	!for header
   
    print 'TOTALS FOR DEPARTMENT'       (+1,1)
    print $prev_deptid                  (0,+1)
    print $deptid_addl_amt              (0,97)
    print $deptid_goal_amt              (0,113)
    position 				(+1)

  add #deptid_addl_amt to #paygroup_addl_amt
  add #deptid_goal_amt to #paygroup_goal_amt

  let #deptid_addl_amt = 0
  let #deptid_goal_amt = 0

end-procedure

!*********************************************************************
begin-procedure Paygroup-Totals
!*********************************************************************

    do Format-Number(#paygroup_addl_amt, $paygroup_addl_amt, '$,$$$,$$9.99')
    do Format-Number(#paygroup_goal_amt, $paygroup_goal_amt, '$,$$$,$$9.99')

    move $prev_paygroup to $paygroup		!for header
    
    print 'TOTALS FOR PAYGROUP' (+1,1)
    print $prev_paygroup        (0,+1)
    print $paygroup_addl_amt    (0,97)
    print $paygroup_goal_amt    (0,113)
    Position (+1)
   
  add #paygroup_addl_amt to #comp_addl_amt
  add #paygroup_goal_amt to #comp_goal_amt
  
  let #paygroup_addl_amt = 0
  let #paygroup_goal_amt = 0

end-procedure

!***********************************************************************
begin-procedure Company-Totals
!***********************************************************************
  do Format-Number(#comp_addl_amt, $comp_addl_amt, '$,$$$,$$9.99')
  do Format-Number(#comp_goal_amt, $comp_goal_amt, '$,$$$,$$9.99')

  move $prev_company to $company 
 
  print 'TOTALS FOR COMPANY'   (+1,1)
  print $prev_company          (0,+1)
  print $comp_addl_amt         (0,97)
  print $comp_goal_amt         (0,113)
  position (+1)

  add #comp_addl_amt to #grand_addl_amt
  add #comp_goal_amt to #grand_goal_amt
  
  let #comp_addl_amt =0	
  let #comp_goal_amt =0

End-Procedure

!***********************************************************************
begin-procedure Company-Name
!***********************************************************************
  
  if $AsOfDate = ''  !if no As-Of-Date is specified, default to Today
    move $AsOfToday to $AsOfDate
  end-if

begin-SELECT ON-ERROR=SQL-Error-Found('Company-Name')
CT.DESCR
  move &ct.descr to $companyname
FROM  PS_COMPANY_TBL CT
WHERE CT.COMPANY = $Company
  AND CT.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_COMPANY_TBL
       WHERE  CT.COMPANY = Company
         AND  EFFDT  <= $AsOfDate)
end-SELECT
 
end-procedure

!***********************************************************************
begin-procedure Paygroup-Name
!***********************************************************************
 
begin-SELECT ON-ERROR=SQL-Error-Found('Paygroup-Name')
PGT.DESCR
  move &PGT.Descr      to $PayGroupName
FROM  PS_PAYGROUP_TBL PGT
WHERE PGT.COMPANY  = $Company
  AND PGT.PAYGROUP = $PayGroup
  AND PGT.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_PAYGROUP_TBL
       WHERE  PGT.COMPANY  = Company
         AND  PGT.PAYGROUP = PayGroup
         AND  EFFDT   <= $AsOfDate)
end-SELECT
  
end-procedure

!***********************************************************************
begin-procedure Deptid-Name
!***********************************************************************
 
begin-SELECT ON-ERROR=SQL-Error-Found('Deptid-Name')
DPT.DESCR
  move  &DPT.Descr to $DeptName 
FROM  PS_DEPT_TBL DPT
WHERE DPT.DEPTID = $DeptID
  AND DPT.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_DEPT_TBL 
       WHERE  DPT.DEPTID = DeptID
         AND  EFFDT <= $AsOfDate)
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Acct_cd-Name
!***********************************************************************

begin-SELECT ON-ERROR=SQL-Error-Found('Acct_cd-Name')
ACC.DESCR
  move &ACC.Descr to $AcctCDName
!FROM  PS_acct_cd_TBL ACC		!GEX-MXT  COMMENTED ON 09/26/2007
FROM  PS_GEX_ACCT_CD_TBL ACC		!GEX-MXT  ADDED ON 09/26/2007
WHERE ACC.ACCT_CD = $Acct_cd
!GEX-MXT  UNCOMMENTED ON 09/26/2007-BEGIN
!*****************************************************************
! Manish,PY030 , 08/16/2007                                          
! PY030 - Giant Eagle Modification	                 	
! Modified the code for HCM 9.0 Upgrade		
! begin 								
!*****************************************************************
  AND ACC.EFFDT =
      (SELECT MAX(EFFDT)
       !FROM   PS_ACCT_CD_TBL 
       FROM   PS_GEX_ACCT_CD_TBL 
       WHERE  ACC.ACCT_CD = ACCT_CD
         AND  EFFDT <= $AsOfDate)
!******************************************************************
! PY030 - Giant Eagle Modification End	
!******************************************************************
!GEX-MXT  UNCOMMENTED ON 09/26/2007-END
end-SELECT

end-procedure

!*********************************************************************
begin-procedure Print-Detail
!*********************************************************************

      do Format-Number(#ded_addl_amt,$ded_addl_amt,'$,$$$,$$9.99')
      do Format-Number(#goal_amt,$goal_amt,'$,$$$,$$9.99')

      print &PD.name		(0,51)
      print &JOB.emplid        	(0,83)	edit xxx-xx-xxxx
      print $ded_addl_amt      	(0,97)
      print $goal_amt         	(0,113)
      position (+1) 

end-procedure

!*********************************************************************
begin-procedure Print-All-Totals
!*********************************************************************

do Format-Number(#grand_addl_amt,$grand_addl_amt,'$,$$$,$$9.99')
!do Format-Number(#grand_goal_amt,$grand_goal_amt,'$,$$$,$$9.99')	!GEX-MXT, Manish commented on 09/27/2007 for formatting
do Format-Number(#grand_goal_amt,$grand_goal_amt,'$$$,$$$,$$9.99')	!GEX-MXT, Manish added on 09/27/2007 for formatting

  print 'GRAND TOTALS FOR REPORT'  (+1,1)
  print $grand_addl_amt            (0,97)
  !print $grand_goal_amt           (0,113)				!GEX-MXT, Manish commented on 09/27/2007 for formatting
  print $grand_goal_amt           (0,111)				!GEX-MXT, Manish added on 09/27/2007 for formatting

end-procedure

!*********************************************************************
!Displays the error messages and stops execution
!*********************************************************************
begin-procedure SQL-Error-Found($Proc_Name) 
!*********************************************************************
  do Error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 

  STOP

end-procedure


!***********************************************************************
begin-procedure Error-Found
!***********************************************************************

  move 'Y' to $ErrorFound
  do Format-Number(#record_count, $out, '99999')
  print $out (+1,1)

  print &JOB.emplid        	(,8)	edit xxx-xx-xxxx


end-procedure

!***********************************************************************
Begin-Procedure EOJ
!***********************************************************************
 
  if #record_count = 0
    print 'No Data Selected This Run'   (25,) Center
  end-if
 
  Do Reset			
  
  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'

End-Procedure

#include 'askaod.sqc'    !Ask-Of-Date Proc
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get_Run_Control Procedure
#Include 'reset.sqc'     !Reset printer procedure
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 
#Include 'gexxx950.sqc'  !Select Oracle Instance
#Include 'gexxx951.sqc'  !Select Mutiple SQRW Run Control Info
