!***********************************************************************
!  GEXPY657:  ExpertPlan, Inc 401K Deduction File                      *  
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       * 
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY657:  	ExpertPlan, Inc Deduction File                         *
!		(Based on GEXPY651)                                    *
!                                                                      *
! Narrative:	Creates a report and file for the ExpertPlan, Inc      *
!                                                                      *
! #Debugx Used:	#debug9 paragraph trace                                *
!			#debug8 key variable values                    *
!			#debug7 data returned from sql calls           *
! 	                                                               *
! SQL Tables:           PS_JOB                                         *
!			PS_PERSONAL_DATA 	                       *
!			PS_EMPLOYMENT    	                       *
!			PS_GEX_DEPT_TBL  	                       *
!			PS_DEDUCTION_BAL 	                       *
! 	                                                               *
! Normally Run:	Monthly                                                *
! 	                                                               *
! Prerequisite: 	None                                           *
! 	                                                               *
! Entered Run                                                          *
! Control Parms:	FOR WHERE CLAUSE:                              *
! 	                                                               *
! 	                                                               *
!			Company  	 Franchise companies to be     *
!                                        entered and maintained by user*
! 	                                                               *
!			As Of Date	Allow for entry or default to  *
!                                       todays date.	               *
! 	                                                               *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! ID#       INITIALS  DATE              DESCRIPTION OF THE CHANGE      *
!***********************************************************************
!                                                                      *
! HR10710   CWB       05/05/2004        Cloned from GEXPY651.SQR       * 
!                                                                      *
!           CWB       07/01/2004        Changed the name of the file   *
!                                       being mailed to py657.txt,     * 
!                                       instead of py657.dat           * 
!                                                                      *
! GEX-AXG            08/17/2007	Upgrade 9.0		       *
! Ujwal Dyasani - PT852     11/25/2016	Replace todos - PT852UJ20161125*
!***********************************************************************

!selection criteria
#define #x000_col_selection_criteria_a 	2
#define #x000_col_selection_criteria_b 	5
!#Define OUTFILE /apps/hr/hrms90/hrdev90/outgoing/	!For Testing
!line 1
#define #x000_col_emplid                02
#define #x000_col_name                  13
#define #x000_col_company		44  !02
#define #x000_col_deptid		61  !06
#define #x000_col_empl_status		70  !17
#define #x000_col_hire_date     	80  !21  
#define #x000_col_termination_dt	96  !30
#define #x000_col_hourly_rt	       117  !88
#define #x000_col_empl_type            128  !95
#define #x000_col_dedcd                138
#define #x000_col_ded_mtd              148

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'  !Printer and page-size initialization

!***********************************************************************
begin-heading 7

#Include 'stdhdg01.sqc'

 let $x000_ped = 'Pay End Date: '|| $X000_REPORT_HEADING_PAY_END_DT
 print $x000_ped                    (4,1) 

 let $x000_temp_out =  'Report as of ' || $X000_REPORT_HEADING_ASOFDATE 
 print $x000_temp_out 	            (4,) center 

 
!line 1
 print 'Name'         	   (+1,{#x000_col_name})	
 print 'Emplid'	           (0,{#x000_col_emplid})
 print 'Company'	   (0,{#x000_col_company})
 print 'Deptid'        	   (0,{#x000_col_deptid})
 print 'Emp Stat'          (0,{#x000_col_empl_status})
 print 'Hire Date'         (0,{#x000_col_hire_date})
 print 'Term Date'         (0,{#x000_col_termination_dt})
 print 'Hourly Rt'         (0,{#x000_col_hourly_rt})
 print 'Emp Type'          (0,{#x000_col_empl_type})
 print 'Ded Code'          (0,{#x000_col_dedcd})
 print ' Deduction Amt'    (0,{#x000_col_ded_mtd})

end-heading


!***********************************************************************
begin-report
!***********************************************************************
#debug9 show 'begin-report'

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
 
  show '$asoftoday: ' $asoftoday
  date-time () mm/dd/yyyy &dayBegan
  date-time () hh:mi:ss &timeBegan
  show 'Report Began on ' &daybegan ' at '&timebegan
  show ' '

  do StdAPI-Init
  do P010-Init-Variables
  do P100-main-select
  do mail-the-file
  do StdAPI-Term
  do Reset

  date-time () mm/dd/yyyy &dayEnded
  date-time () hh:mi:ss &timeEnded
  show 'Report Ended on ' &dayended ' at '&timeended
  show ' '

  show 'Successful End of Report'

end-report


!***********************************************************************
begin-procedure P010-Init-Variables
!***********************************************************************
#debug9 show 'P010-Init-Variables'

  encode '<009>' into $delim   ! data file will be TAB delimited.

  do Get-Calendar-Year-Id
  show '$Calendar_Year_Id=' $Calendar_Year_Id

  let $x000_new_page_flag = 'N'

  let $ReportID    = 'GEXPY657'
  let $ReportTitle = 'ExpertPlan, Inc Deduction'
  let $Country     = 'USA'
  let $first_pass  = 'Y'

  show '$ReportID=' $ReportID 
  show '$ReportTitle=' $ReportTitle
  show '$ReportDate=' $ReportDate
  show '$ReportTime=' $ReportTime
 
  Let $GEXXX900_Company_Alias  = 'J.COMPANY'
  Let $GEXXX919_DEDCD_Alias    = 'DED.DEDCD'

!RUN CONTROL LOGIC
  if $Prcs_Process_Instance = ''
        display 'The Unix command logic requires this process to be run online.'
!        get parameters for testing using SQRW
      do get-input
      let $X000_WHERE_SELECT_ASOFDATE = $ASOFDATE
      do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')
  else
 
!	get parameters from single row run control record 
	Do GEXXX922-Select-Parameters
      let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
      if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
        let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
      end-if
      do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')

!	get parameters from multiples run control record
    	Let $GEXXX900_Company_Alias  = 'J.COMPANY'                           

    Do GEXXX900-Select-Company-Parameters 
    Do GEXXX919-Select-DEDCD-Parameters

      show '$Prcs_Process_Instance =' $Prcs_Process_Instance 

  end-if

  do P001-Select-Pay-End-Dt
  show 'Pay End Dt: ' $pay_end_dt

  let $year4 = '1'
  do Format-DateTime($pay_end_dt, $X000_PAY_DT,{DEFYMD}, '', '')
  show $X000_PAY_DT
  let $balance_year = substr($X000_PAY_DT,1,4)
  let $balance_period = substr($X000_PAY_DT,6,2)
!  let #balance_period = $balance_period
  let $bal_per1 = substr($balance_period,1,1)
  if $bal_per1 = '0'
     let $balance_period = substr($balance_period,2,1)
  end-if
  
  if $balance_period = '1' or $balance_period = '2' or $balance_period = '3'
       let $balance_qtr = '1'
  end-if
  if $balance_period = '4' or $balance_period = '5' or $balance_period = '6'
       let $balance_qtr = '2'
  end-if
  if $balance_period = '7' or $balance_period = '8' or $balance_period = '9'
       let $balance_qtr = '3'
  end-if
  if $balance_period = '10' or $balance_period = '11' or $balance_period = '12'
       let $balance_qtr = '4'
  end-if

  show $balance_year ' ' $balance_period ' ' $balance_qtr

  let $year4 = '1'
  do Format-DateTime($pay_end_dt, $X000_REPORT_HEADING_PAY_END_DT,{DEFYMD}, '', '')
!   show 'pay end date: ' $X000_REPORT_HEADING_PAY_END_DT
   let $ped_yy = substr($X000_REPORT_HEADING_PAY_END_DT,1,4)
   let $ped_mm = substr($X000_REPORT_HEADING_PAY_END_DT,6,2)
   let $ped_dd = substr($X000_REPORT_HEADING_PAY_END_DT,9,2)
   let $X000_REPORT_HEADING_PAY_END_DT = $ped_mm||'/'||$ped_dd||'/'||$ped_yy
!   show 'reformatted: ' $X000_REPORT_HEADING_PAY_END_DT

  let $X000_ORDER_BY_FILE   = 'J.EMPLID'

!default the selection date to today, if not entered by user
    if rtrim($X000_WHERE_SELECT_ASOFDATE, ' ' ) = ''
       let $X000_WHERE_SELECT_ASOFDATE = $asofdate
    end-if

   let $year4 = '1' 
   do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFYMD}, '', '')
!   show 'header date: ' $X000_REPORT_HEADING_ASOFDATE
   let $header_yy = substr($X000_REPORT_HEADING_ASOFDATE,1,4)
   let $header_mm = substr($X000_REPORT_HEADING_ASOFDATE,6,2)
   let $header_dd = substr($X000_REPORT_HEADING_ASOFDATE,9,2)
   let $X000_REPORT_HEADING_ASOFDATE = $header_mm||'/'||$header_dd||'/'||$header_yy
!   show 'reformatted: ' $X000_REPORT_HEADING_ASOFDATE

	show '$GEXXX900_INCLUDE_COMPANY_CRITERIA               =' $GEXXX900_INCLUDE_COMPANY_CRITERIA
 	show '$GEXXX919_INCLUDE_DEDCD_CRITERIA                 =' $GEXXX919_INCLUDE_DEDCD_CRITERIA         
        show '$X000_ORDER_BY_FILE                              =' $X000_ORDER_BY_FILE
        show '$X000_WHERE_SELECT_ASOFDATE                      =' $X000_WHERE_SELECT_ASOFDATE 

 	print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
	print '$Prcs_OPRID          ='                              (+1,{#x000_col_selection_criteria_b})
	print $Prcs_OPRID                                           (0,+2)
	print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
	print $PRCS_RUN_CNTL_ID                                     (0,+2)

 	print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,{#x000_col_selection_criteria_a})
 	print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
 	print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA            (0,+2)
	print '$GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA            ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA              (0,+2)

        print '$X000_WHERE_SELECT_ASOFDATE                         ='   (+1,{#x000_col_selection_criteria_b})
        print $X000_WHERE_SELECT_ASOFDATE                           (0,+2)
   
	print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,{#x000_col_selection_criteria_a})
        print '$X000_ORDER_BY_FILE                               ='   (+1,{#X000_col_selection_criteria_b})
        print $X000_ORDER_BY_FILE                                 (0,+2)

  let $filename = '{OUTFILE}'||'gexpy657.dat'
  open $filename as 1
     for-writing record=111

  if #writestat != 0
    display 'Error Opening output file.  Program terminating.'
    stop
  end-if

 LET #PAGE-COUNT = 0
 NEW-PAGE
 LET #PAGE-COUNT = 1

end-procedure

!***********************************************************************
begin-procedure get-input
!***********************************************************************
#debug9 show 'P015-get-input'

      do Ask-As-Of-Date
      Let $GEXXX900_Company_Alias = 'J.COMPANY'
      Let $CompanyString = ''''
      Display 'Enter Company or leave blank to exit.'
      While 1=1
        Input $In-Company Maxlen=3 'Company'
        Uppercase $In-Company
      If Rtrim($In-Company, ' ') = ''
        Concat '''' With $CompanyString
        Break
      End-If
      If $CompanyString <> ''''
        Concat ''',''' With $CompanyString
      End-If
      Concat $In-Company With $CompanyString
    End-While

    If $CompanyString = ''''''
      Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = '1=1'
      Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = $GEXXX900_Company_Alias || ' In (' || $CompanyString || ')'
      Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA = $GEXXX900_INCLUDE_COMPANY_CRITERIA
    End-If

  Let $GEXXX919_DEDCD_ALIAS = 'DED.DEDCD'
  Let $DedCdString = ''''
  Display 'Enter Deduction Code or leave blank to exit.'
  While 1=1
    Input $In-DedCd Maxlen=6 'Deduction Code'
    Uppercase $In-DedCd
    If Rtrim($In-dedCd, ' ') = ''
      Concat '''' With $dedCdString
      Break
    End-If
    If $DedcdString <> ''''
      Concat ''',''' With $DedcdString
    End-If
    Concat $In-Dedcd With $DedCdString
  End-While
  If $DedcdString = ''''''
    Let $GEXXX919_INCLUDE_DEDCD_CRITERIA = '1=1'
    Let $GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX919_INCLUDE_DEDCD_CRITERIA = $GEXXX919_DEDCD_Alias || ' In (' || $DedcdString || ')'
    Let $GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA = $GEXXX919_INCLUDE_DEDCD_CRITERIA
  End-If

      let $X000_WHERE_SELECT_ASOFDATE                 = $asoftoday
      let $X000_ORDER_BY_FILE = 'J.EMPLID'
 
end-procedure

!********************************************
begin-procedure P100-main-select
!********************************************
#debug9 show 'P100-main-select'

begin-SELECT 

J.COMPANY		 &j.company
J.paygroup
J.DEPTID	
J.UNION_CD	
J.EMPLID                 &j.emplid
J.EMPL_RCD               &j.empl_rcd
J.EFFDT
J.EFFSEQ
J.EMPL_STATUS
J.JOBCODE
J.HOURLY_RT
J.empl_type
P.NAME                   &p.name
!Modified for Upgrade 9.0 GEX-AXG - Begin
!P.ORIG_HIRE_DT
PERINST.ORIG_HIRE_DT
!Modified for Upgrade 9.0 GEX-AXG - End
EMP.HIRE_DT
EMP.TERMINATION_DT

  move &j.emplid to $emplid
  move &j.empl_rcd to $empl_rcd
  move &j.company to $company
  move &p.name    to $name
  let $name = RTRIM($name,' ')
  let $name = substr($name,1,30)
  move &j.empl_type to $empl_type
  
  do Get-Emp-Ssn (&j.emplid, $Ssn_Out) !GEX_SEC_REENG 2015-04-29 Vahini Katta  

  Do Get-Ded-Mtd

  if #ded_mtd = 0
     !Skip processing
  else

    if (&J.COMPANY = $hold_company) and (&J.EMPLID = $hold_emplid) 
    else
      add 1 to #tot_empl_count
    end-if

      do Write-Detail-Record
      let $rowfound = 'Y'
!    end-if

  end-if

  let $hold_company = &J.COMPANY
  let $hold_emplid  = &J.EMPLID

FROM  PS_JOB          	J,
      PS_PERSONAL_DATA 	P,
      PS_EMPLOYMENT 	EMP,
      !Modified for Upgrade 9.0 GEX-AXG - Begin
      !PS_GEX_DEPT_TBL   GEX_DEPT
      PS_GEX_DEPT_TBL   GEX_DEPT,
      PS_PER_ORG_INST PERINST
      !Modified for Upgrade 9.0 GEX-AXG - End
WHERE P.EMPLID = J.EMPLID
 AND J.EMPLID = PERINST.EMPLID 		!Added for Upgraed 9.0 GEX-AXG
 AND J.EMPL_RCD = PERINST.ORG_INSTANCE_ERN !Added for Upgraed 9.0 GEX-AXG on 02/14/2008
 AND [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
 AND J.EFFDT  =
   		(SELECT MAX(EFFDT)
       		FROM PS_JOB
      		WHERE EMPLID    = J.EMPLID
       		  AND EMPL_RCD  = J.EMPL_RCD
                  AND COMPANY   = J.COMPANY              
                  AND PAYGROUP  = J.PAYGROUP             
       		  AND EFFDT    <= $pay_end_dt)
 AND J.EFFSEQ =
    		(SELECT MAX(EFFSEQ)
       		FROM PS_JOB
      		WHERE EMPLID  = J.EMPLID
       		AND EMPL_RCD  = J.EMPL_RCD
                AND COMPANY   = J.COMPANY               
                AND PAYGROUP  = J.PAYGROUP              
      		AND EFFDT     = J.EFFDT)

 AND J.EMPLID	     = EMP.EMPLID
 AND J.EMPL_RCD      = EMP.EMPL_RCD
 AND GEX_DEPT.DEPTID = J.DEPTID
 AND GEX_DEPT.EFFDT = (SELECT MAX(GEX_DEPT1.EFFDT) 
                       FROM PS_GEX_DEPT_TBL GEX_DEPT1
	  	       WHERE GEX_DEPT1.DEPTID = GEX_DEPT.DEPTID 
                       AND   GEX_DEPT1.EFFDT <= $pay_end_dt) 
 AND GEX_DEPT.SEQUENCE_NUMBER = (SELECT MAX(GEX_DEPT2.SEQUENCE_NUMBER)
                                 FROM PS_GEX_DEPT_TBL GEX_DEPT2
                                 WHERE GEX_DEPT2.DEPTID = GEX_DEPT.DEPTID
                                 AND GEX_DEPT2.EFFDT = GEX_DEPT.EFFDT)

ORDER BY [$X000_ORDER_BY_FILE]
					
end-SELECT

  if $rowfound = 'N'
    show ' '
    show '** NO DATA SELECTED FOR THIS REPORT RUN **'  
    print '** NO DATA SELECTED FOR THIS REPORT RUN **'  (25,) center
  else
     close 1

     if #current-line > 55
        NEW-PAGE
     end-if

     print 'Report Totals:'  (+2,100)
     print #tot_empl_count    (0,123) EDIT 99,999
     print #ded_mtd_tot       (0,148) EDIT 999,999.99
  end-if

End-Procedure

!********************************************
Begin-Procedure Get-Ded-Mtd
!********************************************
#debug9 show 'Get-Ded-Mtd'

  let #ded_mtd = 0
  move 0 to $contrib 'B99,999.99'
  move 0 to $loan_1  'B99,999.99'
  move 0 to $loan_2  'B99,999.99'

begin-select
DED.DED_MTD
DED.DEDCD

  move &DED.DED_MTD to #ded_mtd

    if substr(&DED.DEDCD,1,1) = '4'
      move #ded_mtd to $contrib '999,999.99'
    else
    if &DED.DEDCD = 'LOAN01'
      move #ded_mtd to $LOAN_1 '999,999.99'
    else
    if &DED.DEDCD = 'LOAN02'
      move #ded_mtd to $LOAN_2 '999,999.99'
    end-if
    end-if
    end-if
 
    let $source = '2'
    add #ded_mtd to #ded_mtd_tot
    do print-Detail-Line    
  
FROM PS_DEDUCTION_BAL DED
WHERE DED.EMPLID         = &J.EMPLID
  AND DED.COMPANY        = &J.COMPANY
  AND DED.BALANCE_ID     = 'CY'
  AND DED.BALANCE_YEAR   = $balance_year
  AND DED.BALANCE_QTR    = $balance_qtr
  AND DED.BALANCE_PERIOD = $balance_period
  AND [$GEXXX919_INCLUDE_DEDCD_CRITERIA]
end-select

End-Procedure Get-Ded-Mtd

!*********************************************************************
! Write Record Information to a file
!*********************************************************************
begin-procedure Write-Detail-Record
#debug9 show 'Write-Detail-Record'

  add 1 to #write_recs

  let $sub_name = substr($name,1,25)

  move #ded_mtd    to $ded_mtd  999,999.99

  write 1 from $ssn_out:9 !$emplid:9 !GEX_SEC_REENG 2015-04-29 Vahini Katta
               $delim
               $source:2
               $delim
               $contrib:10
               $delim
               $loan_1:10
               $delim
               $loan_2:10 

end-procedure

!***********************************************************************
begin-procedure P001-Select-Pay-End-Dt
!***********************************************************************
begin-select loops=1
MAX(PC.PAY_END_DT)      &pay_end_dt
  move &pay_end_dt   to $pay_end_dt

FROM   PS_PAY_CALENDAR PC
WHERE  PC.PAY_END_DT <= $X000_WHERE_SELECT_ASOFDATE 
AND    PC.PAY_CONFIRM_RUN = 'Y'
end-select

begin-select
MIN(PC2.CHECK_DT)       &check_dt
  move &check_dt     to $check_dt

FROM PS_PAY_CALENDAR PC2
WHERE PC2.PAY_END_DT = $pay_end_dt
AND   PC2.PAY_CONFIRM_RUN = 'Y'
end-select

  display 'Last Confirmed Pay End Date: ' noline
  display $pay_end_dt
  display '                 Check Date: ' noline
  display $check_dt

!*********  convert $pay_end_dt (which looks like: 01-APR-2002) to look like:  01/04/2002
  Let $Year4 = '1'                                           !return 4 digit year
  Do Format-DateTime ($pay_end_dt, $paymmddyyyy, {DEFMDY}, '', '')
!  show 'Paymmddyyyy: ' $paymmddyyyy

  let $pay_end_mm = substr($paymmddyyyy,1,2)
  let $pay_end_dd = substr($paymmddyyyy,4,2)
  let $pay_end_yy = substr($paymmddyyyy,7,4)
  let $pay_end = $pay_end_yy||$pay_end_mm||$pay_end_dd
!  show 'Pay End: ' $pay_end

end-procedure

!*********************************************
begin-procedure Print-Detail-Line
!*********************************************
#debug9 show  'Print-Detail-Line'

 if #current_line >= 55
    NEW-PAGE
 end-if

 !print $EMPLID       (+0,{#x000_col_emplid}) !GEX_SEC_REENG 2015-04-29 Vahini Katta
 print $SSN_OUT       (+0,{#x000_col_emplid}) !GEX_SEC_REENG 2015-04-29 Vahini Katta
 print $name          (0,{#x000_col_name})
 print $COMPANY		    (0,{#x000_col_company})
 print &j.DEPTID		  (0,{#x000_col_deptid})
 print &j.EMPL_STATUS	(0,{#x000_col_empl_status})

 let $hire_dt = &EMP.HIRE_DT
 if rtrim($hire_dt,' ') = ''
 else
   let $year4 = '1' 
   do Format-DateTime(&EMP.HIRE_DT, $x600_emp_hire_dt,{DEFYMD}, '', '')
   let $hire_yy = substr($x600_emp_hire_dt,1,4)
   let $hire_mm = substr($x600_emp_hire_dt,6,2)
   let $hire_dd = substr($x600_emp_hire_dt,9,2)
   let $x600_emp_hire_dt = $hire_mm||'/'||$hire_dd||'/'||$hire_yy
   print $x600_emp_hire_dt 	(0,{#x000_col_hire_date})
 end-if

 let $termination_dt = &EMP.TERMINATION_DT
 if rtrim($termination_dt,' ') = ''
 else
   let $year4 = '1' 
   do Format-DateTime(&EMP.TERMINATION_DT, $x600_TERMINATION_DT,{DEFYMD}, '', '')
   let $term_yy = substr($x600_TERMINATION_DT,1,4)
   let $term_mm = substr($x600_TERMINATION_DT,6,2)
   let $term_dd = substr($x600_TERMINATION_DT,9,2)
   let $x600_TERMINATION_DT = $term_mm||'/'||$term_dd||'/'||$term_yy
   print $x600_TERMINATION_DT	(0,{#x000_col_termination_dt})
 end-if

  print &J.HOURLY_RT	         (0,{#x000_col_hourly_rt})     EDIT  990.00
  print &J.empl_type             (0,{#x000_col_empl_type})
  print &DED.DEDCD               (0,{#x000_col_dedcd})  
  print &DED.DED_MTD             (0,{#x000_col_ded_mtd})  EDIT 999,999.99

position (+1)

end-procedure

!*********************************************************************
begin-procedure mail-the-file
!*********************************************************************
   do copy-the-file
   do GEXXX951-Select-Oracle-Instance
   let $db_name = lower($GEXXX951_Oracle_Instance)
   Do GEXXX971-Select-Trans-Type-Parameters
   
   if ($GEXXX971_EMAIL_ADDR_CRITERIA = '') and ($GEXXX971_FTP_ADDR_CRITERIA = '')
      show 'Either no rows exist on GEX_INTFC_RULE/DATA for this Oprid/Run Control ID'
      show 'or the most current rows under this ID have been set to inactive. Data will'
      show 'not be sent.'
   else
      if $GEXXX971_GEX_TRANS_TYPE = 'E'
         show $GEXXX971_EMAIL_ADDR_CRITERIA
         show 'This is the email statement produced: '
		 
		 
	!Commented by Ujwal - PT852UJ20161125 - Begin
        !    let $UNIX_MAIL_COMMAND = '/usr/local/bin/todos -v $PS_HOME/outgoing/py657.txt &&/usr/local/bin/mailer.pl "'
		!||$GEXXX971_EMAIL_ADDR_CRITERIA||'" "GIANT EAGLE - EXPERTPLAN 401K FILE" '
		!||'"$BINDIR/gexpy657_msg.sh" $PS_HOME/outgoing/py657.txt'
	!Commented by Ujwal - PT852UJ20161125 - End
	!Added by Ujwal - PT852UJ20161125 - Begin
		let $subject = 'GIANT EAGLE - EXPERTPLAN 401K FILE'
        let $body_file = '$BINDIR/gexpy657_msg.sh'
		let $file_123 = '/apps/hr/hrms90/pshrprd/outgoing/py657.txt'
		let $UNIX_MAIL_COMMAND = '/bin/mailx -s "'||$subject||'" -a '|| $file_123 ||' '|| $GEXXX971_EMAIL_ADDR_CRITERIA 
		!|| ' < '|| $body_file
	!Added by Ujwal - PT852UJ20161125 - End
            show $UNIX_MAIL_COMMAND

            CALL SYSTEM USING $UNIX_MAIL_COMMAND #system_status
            
            if #system_status <> 0
               add 1 to #errorcount
               show 'eMail of py657.txt failed.'
               STOP
            else
               show 'py657.txt was emailed successfully'
               do remove-the-file 
            end-if

      end-if
      if $GEXXX971_GEX_TRANS_TYPE = 'F'
         show $GEXXX971_FTP_ADDR_CRITERIA
         show 'Need to insert a Call FTP shell script to run ftp'
      end-if
   end-if
End-Procedure

!*********************************************************************
begin-procedure copy-the-file
!*********************************************************************
! copies the file so that a DOS version can be created before mailing.

      let $copy_command = 'cp $PS_HOME/outgoing/gexpy657.dat $PS_HOME/outgoing/py657.txt' 
      show '$copy_command: ' $copy_command
      CALL SYSTEM USING $copy_command #sys_status
      if #sys_status <> 0
         let $copy_display_msg = 'ERROR - copy of gexpy657.dat to py657.txt did not work'
         display $copy_display_msg
	 display 'JOB failed'
	 stop
      end-if

end-procedure

!*********************************************************************
begin-procedure remove-the-file
!*********************************************************************

      let $rm_command = 'rm $PS_HOME/outgoing/py657.txt' 
      show '$rm_command: ' $rm_command
      CALL SYSTEM USING $rm_command #sys_status
      if #sys_status <> 0
         let $rm_display_msg = 'ERROR - removal of py657.txt did not work'
         display $rm_display_msg
	 display 'JOB failed'
	 stop
      end-if

end-procedure
!*********************************************************************
begin-procedure SQL-Error-Found($Proc_Name)
!***********************************************************************
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
end-procedure

!***********************************************************************

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdednm.sqc'  !Get-Deduction-Name procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'reset.sqc'     !Reset 
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx919.sqc'  !Get dedcd multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls
#include 'gexxx951.sqc'  !Oracle Database Name 
#include 'gexxx971.sqc'  !Email and FTP Parameters
#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'getgeid.sqc'   !Get SSN !GEX_SEC_REENG 2015-04-29 Vahini Katta