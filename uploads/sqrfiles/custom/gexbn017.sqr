!***********************************************************************
! GEXBN017:  Supplemental Life Insurance Deductions In Arrears         *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXBN017 :       Supplemental Life Insurance Deductions In Arrears   *
!                                                                      *
! Narrative:       This program produces a report of deductions        *
!                  in arrears.                                         *
!                                                                      *
! #Debugx Used:    #debug9 paragraph trace                             *
!                  #debug8 key variable values                         *
!                  #debug7 data returned from sql calls                *
!                                                                      *
! SQL Tables:      pay_calendar                                        *
!                  personal_data                                       *
!                  benef_plan_tbl                                      *
!                  ben_defn_optn                                       *
!                  pay_check                                           *
!                  pay_deduction                                       *
!                                                                      *
! Written by:      Jim Hutchison                                       *
!                                                                      *
! Normally Run:    Monthly                                             *
!                                                                      *
! Control Parms:   FOR WHERE CLAUSE:                                   *
!                    Multiple Plan Types                               *
!                    Multiple Vendor IDs                               *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! JDH       09/14/98    Initial Creation (Cloned PAY007)               *
!                          Modified to include only plan types         *
!                             (20 to 2Z) (30 to 3Z)                    *
!                                                                      *
! JDH       11/24/98    Modified to exclude plan type '00' only        *
!                                                                      *
! JDH       03/03/99    Modified according to new spec requirements.   *
!                                                                      *
! JNB       12/03/1999  Commented some lines so that program would run *
!                       if there are no values entered on the panel for*
!                       Vendor Ids.                                    *
!                                                                      *
! GBD       07/15/2002  Added Fieldvalue to effective dated selection  *
!                       of the Load-Lookup procedure.                  *
!           09/12/2002  v8.3 Upgrade - Provider replaced by Vendor ID  *
! ISDVNPK 08/23/2007 Changed XLATTABLE to PSXLATITEM as part of 9.0 upgrade 
! GEX_SEC_REENG 2015-11-27 Surya Sobha                                 *
! Changes related to gex_emplid_mapp/7 digit emplid                    * 
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Landscape)


#define #column1     1
#define #column2    17
#define #column3    37
#define #column4    54
#define #column5    73
#define #column6   113
#define #column7   137
#define #column8   161


Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report


Begin-Heading 8
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg01.sqc'

  Let $X000_temp_out = 'Month Ended:  ' || $payenddt
  Print $X000_temp_out         (3,)  Center

  Print 'Ben Pgm:'             (3,1)
  Print $Benefit_Program       (3,13)

  Print 'PLAN'                 (+3,{#column2})
  Print 'BENEFIT'              (+0,{#column3})
  Print 'EMPLOYEE'             (+0,{#column4})
  Print '      COVERAGE'       (+0,{#column6})
  Print '    DED AMOUNT'       (+0,{#column7})

  Print 'DEDCD'                (+1,{#column1})
  Print 'TYPE'                 (+0,{#column2})
  Print 'PLAN'                 (+0,{#column3})
  !GEX_SEC_REENG 2015-11-27 Surya Sobha Begins
  !Print 'SSN'                  (+0,{#column4})
   Print 'ID '                  (+0,{#column4})
  !GEX_SEC_REENG 2015-11-27 Surya Sobha Ends 
  Print 'EMPLOYEE NAME'        (+0,{#column5})
  Print '        AMOUNT'       (+0,{#column6})
  Print '    IN ARREARS'       (+0,{#column7})
  Print 'PAY END DATE'         (+0,{#column8})

  Print '-'                    (+1,{#column1},6)  Fill
  Print '-'                    (+0,{#column2},10) Fill
  Print '-'                    (+0,{#column3},7)  Fill
  Print '-'                    (+0,{#column4},9)  Fill
  Print '-'                    (+0,{#column5},30) Fill
  Print '-'                    (+0,{#column6},14) Fill
  Print '-'                    (+0,{#column7},14) Fill
  Print '-'                    (+0,{#column8},12) Fill
End-Heading


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
 ! Do P150-Set-Optimizer-Goal ! ISDVNPK 08/23/2007 

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXBN017'
  Let $ReportTitle   =   'Supplemental Life Insurance Deductions In Arrears'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  If $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
    Display 'At least one plan type parameter must be specified'
    Stop
  End-If

!  JNB 12/03/1999 Begin  
!  If $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = '1=1'
!    Display 'At least one vendor id parameter must be specified'
!    Stop
!  End-If
!  JNB 12/03/1999 End  

  Show '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA  = '   $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA
  Show '$GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA      = '   $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA

  Let $X000_Order_By = 'Benefit Program, Benefit Plan, Employee SSN, Pay End Date'

  Do P130-Print-Cover-Page
  Do P140-Get-Last-Confirmed-Pay
  Do P170-Get-Xlat-Lookup
End-Procedure


Begin-Procedure P110-SQRW-Run-Controls
#debug9 Show 'P110-SQRW-Run-Controls'
  Move '''' to $ProviderString
  Display 'Enter Vendor ID or leave blank to exit.'
  While 1=1
    Input $Provider maxlen=6 'Provider ID'
    if RTRIM($Provider, ' ') = ''
      concat '''' with $ProviderString
      break
    end-if
    if $ProviderString <> ''''
      concat ''',''' with $ProviderString
    end-if
    concat $Provider with $ProviderString
  End-While

  if $ProviderString = ''''''
    let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = '1=1'
    let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA = 'ALL'
  else
    let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = 'bpt.vendor_id In (' || $ProviderString || ')'
    let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA = $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA
  end-if

  Move '''' to $PlanTypeString
  Display 'Enter Plan Type or leave blank to exit.'
  While 1=1
    Input $PlanType Maxlen=2 'Plan Type'
    Uppercase $PlanType
    if RTRIM($PlanType, ' ') = ''
      concat '''' with $PlanTypeString
      break
    end-if
    if $PlanTypeString <> ''''
      concat ''',''' with $PlanTypeString
    end-if
    concat $PlanType with $PlanTypeString
  End-While

  if $PlanTypeString = ''''''
    let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
    let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
  else
    let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = 'bpt.plan_type In (' || $PlanTypeString || ')'
    let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
  end-if
End-Procedure


Begin-Procedure P120-Process-Scheduler-Run-Controls
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Let $GEXXX912_Plan_Type_Alias    = 'bpt.plan_type'
  Let $GEXXX912_Benefit_Plan_Alias = 'bpt.benefit_plan'
  Let $GEXXX927_Vendor_ID_Alias     = 'bpt.vendor_id'

  Do GEXXX912-Select-Benefit-Plan-Parameters
  Do GEXXX927-Select-Vendor-ID-Parameters
End-Procedure


begin-procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = '      (+2,5)
  Print $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA           (0,+2)
  Print '$GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA    = '      (+2,5)
  Print $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA              (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

  Let #PAGE-COUNT = 0
End-Procedure


Begin-Procedure P140-Get-Last-Confirmed-Pay
#debug9 Show 'P140-Get-Last-Confirmed-Pay'
Begin-Select Loops=1
pay_end_dt
To_Char(pay_end_dt,'Month DD, YYYY')  &payenddt
To_Number(To_Char(pay_end_dt,'MM'))   &balance_period
To_Number(To_Char(pay_end_dt,'YYYY')) &balance_year

  Let $pay_end_dt     = &pay_end_dt
  Let $payenddt       = &payenddt
  Let #balance_year   = &balance_year
  Let #balance_period = &balance_period

From   ps_pay_calendar

Where  pay_end_dt =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
      Where  pay_end_dt <= $AsOfToday
!      where pay_end_dt <= '06-NOV-1999'
      And    pay_confirm_run  = 'Y')

And    pay_confirm_run  = 'Y'
End-Select
End-Procedure

! ISDVNPK 08/23/2007 
!begin-procedure P150-Set-Optimizer-Goal
!#debug9 Show 'P150-Set-Optimizer-Goal'
!  Begin-SQL
!    Alter Session Set OPTIMIZER_GOAL=RULE;
!  End-SQL
!end-procedure


begin-procedure P170-Get-Xlat-Lookup
#debug9 Show 'P170-Get-Xlat-Lookup'

  Let $Where = '     x.fieldname   = ''PLAN_TYPE''' ||
	       ' And x.eff_status  = ''A''' ||
!	       ' And x.language_cd = ''ENG''' ||
	       ' And x.effdt       = (Select Max(x1.effdt)' ||
	       '                      From   PSxlatitem x1' ||
	       '                      Where  x1.fieldname    = x.fieldname' ||
!GBD 07/15/2002 Begin
!	       '                      And    x1.language_cd  = ''ENG''' ||
!	       '                      And    x1.language_cd  = x.language_cd' ||
	       '                      And    x1.fieldvalue   = x.fieldvalue' ||
!GBD 07/15/2002 End
	       '                      And    x1.effdt       <= ''' || $pay_end_dt || '''' ||
	       '                      And    x1.eff_status   = ''A'')'

  Load-Lookup
    Name=XlatLookup
    Rows=50
    Table='PSXLATITEM X'  ! ISDVNPK 08/23/2007 Changed XLATTABLE to PSXLATITEM as part of 9.0 upgrade 
    Key='X.FIELDVALUE'
    Return_Value='X.XLATSHORTNAME'
    Where=$Where
    Quiet
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
Begin-Select
bpp.benefit_program  ()  On-Break
                         Level=1
                         Print=Never
                         Save=$Save-Benefit-Program
                         Before=P270-Before-Benefit-Program-Break
                         After=P290-After-Benefit-Program-Break

pd.benefit_plan      ()  On-Break
                         Level=2
                         Print=Never
                         Save=$Save-Benefit-Plan
                         After=P280-After-Benefit-Plan-Break

pc.emplid
pd.plan_type
pd.dedcd
pd.ded_not_taken
pd.pay_end_dt
pd.calculated_base

per.name

  Let $Data-Found-Flag = 'Y'

  Let $Benefit_Program = &bpp.benefit_program

  Add &pd.ded_not_taken To #plan-arrears-bal

  Do P220-Print-Record

From   ps_personal_data   per,
       ps_benef_plan_tbl  bpt,
       ps_ben_prog_partic bpp,
       ps_pay_cal_bal_id  pcbi,
       ps_pay_check       pc,
       ps_pay_deduction   pd

Where  per.emplid              = pc.emplid

And    pd.plan_type            = bpt.plan_type
And    pd.benefit_plan         = bpt.benefit_plan

And    bpt.effdt               =
      (Select Max(effdt)
       From   ps_benef_plan_tbl
       Where  plan_type        = bpt.plan_type
       And    benefit_plan     = bpt.benefit_plan
       And    effdt           <= $pay_end_dt)

And    bpp.emplid              = pc.emplid
And    bpp.empl_rcd           = pc.empl_rcd

And    bpp.effdt               =
      (Select Max(effdt)
       From   ps_ben_prog_partic
       Where  emplid           = bpp.emplid
       And    empl_rcd        = bpp.empl_rcd
       And    effdt           <= $pay_end_dt)

And    pcbi.company            = pc.company
And    pcbi.paygroup           = pc.paygroup
And    pcbi.balance_id         = 'CY'
And    pcbi.balance_year       = #balance_year
And    pcbi.balance_period     = #balance_period

And    pc.pay_end_dt           = pcbi.pay_end_dt

And    pd.company              = pc.company
And    pd.paygroup             = pc.paygroup
And    pd.pay_end_dt           = pc.pay_end_dt
And    pd.off_cycle            = pc.off_cycle
And    pd.page_num                = pc.page_num
And    pd.line_num                = pc.line_num
And    pd.sepchk               = pc.sepchk

And    pd.ded_not_taken        > 0

And   [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]
And   [$GEXXX927_INCLUDE_VENDOR_ID_CRITERIA]

Order By bpp.benefit_program, pd.benefit_plan, pc.emplid, pd.pay_end_dt
End-Select
End-Procedure


Begin-Procedure P220-Print-Record
#debug9 Show 'P220-Print-Record'
  Do Format-DateTime(&pd.pay_end_dt, $payend, {DEFMDY}, '', '')
  Lookup XlatLookup &pd.plan_type $plan_type_xlat

  Print &pd.dedcd                (+1,{#column1})
  Print $plan_type_xlat          (+0,{#column2})
  Print &pd.benefit_plan         (+0,{#column3})
  Print &pc.emplid               (+0,{#column4})
  Print &per.name                (+0,{#column5})
  Print &pd.calculated_base      (+0,{#column6})  Edit 999,999,999.99
  Print &pd.ded_not_taken        (+0,{#column7})  Edit 999,999,999.99
  Print $payend                  (+0,{#column8})
End-Procedure


Begin-Procedure P270-Before-Benefit-Program-Break
#debug9 Show 'P270-Before-Benefit-Program-Break'
  New-Page
End-Procedure


Begin-Procedure P280-After-Benefit-Plan-Break
#debug9 Show 'P280-After-Benefit-Plan-Break'
  Print 'Benefit Plan'         (+2,{#column5})
  Print $Save-Benefit-Plan     (+0,+1)
  Print 'Total'                (+0,+1)
  Print #plan-arrears-bal      (+0,{#column7})  Edit 999,999,999.99
  Print ' '                    (+2,{#column1})

  Add #plan-arrears-bal To #program-arrears-bal
  Let #plan-arrears-bal = 0
End-Procedure


Begin-Procedure P290-After-Benefit-Program-Break
#debug9 Show 'P290-After-Benefit-Program-Break'
  Print 'Benefit Program'      (+1,{#column5})
  Print $Save-Benefit-Program  (+0,+1)
  Print 'Total'                (+0,+1)
  Print #program-arrears-bal   (+0,{#column7})  Edit 999,999,999.99

  Add #program-arrears-bal To #grand-arrears-bal
  Let #program-arrears-bal = 0
End-Procedure


Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    NEW-PAGE
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  Else
    Print 'Grand Total'         (+3,{#column5})
    Print #grand-arrears-bal    (+0,{#column7})  Edit 999,999,999.99
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'
End-Procedure


#include 'gexxx912.sqc'  !Get plan type multiple row table
#include 'gexxx927.sqc'  !Get vendor id multiple row table
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
