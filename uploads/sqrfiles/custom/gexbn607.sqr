!***********************************************************************
! GEXBN607:  Contribution Participant Details                          *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXBN607 :            Contribution Participant Details               *
!                                                                      *
! Narrative:            This program creates a report and a file for   *
!                        Dreyfus that contains the contribution        *
!                        amounts from the paycheck.                    *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           pay_calendar                                   *
!                       gex_dreyfus_map                                *
!                       pay_check                                      *
!                       pay_deduction                                  *
!                                                                      *
! Written by:           Jim Hutchison                                  *
!                                                                      *
! Normally Run:         Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         AsOfDate                                     *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! JDH       06/01/99    Initial Creation                               *
!                                                                      *
! CJH       12/06/2000  Break /Subtotal by Company for COD             *
!                                                                      *
! AXL       06/30/2005  Add logic to add Catch Up contributions rows   *
! ITG#32878             in the outgoing dat file                       *
! GEX_SEC_REENG 2016-04-10 Jyotsna Negi                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)

! CJH - 12/7/2000 - COD changes
#define #columna     1
#define #column1    10
#define #column2    25
#define #column3    45
#define #column4    65
#define #column5    85
#define #column6   105
#define #column7   125

! #define #column1     1
! #define #column2    15
! #define #column3    35
! #define #column4    55
! #define #column5    75
! #define #column6    95
! #define #column7   115
! CJH - 12/7/2000 - end

begin-heading 8
#debug9 Show 'begin-heading'
  #Include 'stdhdg01.sqc'

  print 'Pay End Dt:'        (3,1)
  print $payend               (,+2)

  print 'Dreyfus Plan:'      (4,1)
  print $dreyfus_plan         (,+2)

  print '     BEFORE TAX'   (+2,{#column2})
  print '     BEFORE TAX'     (,{#column3})
  print '      AFTER TAX'     (,{#column4})
  print '      AFTER TAX'     (,{#column5})
  print ' PROFIT SHARING'     (,{#column6})

! CJH - 12/7/2000 - COD Changes
  print 'COMPANY'           (+1,{#columna})
  print 'EMPLID'             (,{#column1})
!  print 'EMPLID'           (+1,{#column1})
! CJH - 12/7/2000 - end
  print 'EE CONTRIBUTION'     (,{#column2})
  print 'ER CONTRIBUTION'     (,{#column3})
  print 'EE CONTRIBUTION'     (,{#column4})
  print 'ER CONTRIBUTION'     (,{#column5})
  print 'ER CONTRIBUTION'     (,{#column6})

! CJH - 12/7/2000 - COD Changes
  print '-'                  (+1,{#columna},7) fill
!  print '-'                 (+1,{#column1},9)   fill
  print '-'                  (,{#column1},9)   fill
! CJH - 12/7/2000 - end
  print '-'                   (,{#column2},15)  fill
  print '-'                   (,{#column3},15)  fill
  print '-'                   (,{#column4},15)  fill
  print '-'                   (,{#column5},15)  fill
  print '-'                   (,{#column6},15)  fill
end-heading


Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      = 'GEXBN607'
  Let $ReportTitle   = 'CONTRIBUTION PARTICIPANT DETAILS'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show ' '
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  Do Format-DateTime($X000_Where_Select_AsOfDate, $X000_Report_Heading_AsOfDate, {DEFDATE}, '', '')
  Let $X000_Order_By = 'Dreyfus Plan, Emplid'

  Do P140-Open-File
  Do P150-Get-Last-Confirmed-Pay
  Do P160-Print-Cover-Page
End-Procedure


Begin-Procedure P110-SQRW-Run-Controls
#debug9 Show 'P110-SQRW-Run-Controls'
  Do Ask-As-Of-Date
  Let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate
End-Procedure


Begin-Procedure P120-Process-Scheduler-Run-Controls
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXRCBN1-SELECT-PARAMETERS

  Let $X000_Where_Select_AsOfDate = &GEX_RC_BEN.AsOfDate
  If Rtrim (&GEX_RC_BEN.AsOfDate, ' ') = ''
    Let $X000_Where_Select_AsOfDate = $AsOfToday
  End-If
End-Procedure


Begin-Procedure P140-Open-File
#debug9 Show 'P140-Open-File'
  Let $file1 = '{OUTFILE}' || Lower($ReportID) || '.dat'

  Open $file1
       As 1
       For-Writing
       Record=80:Fixed
       Status=#filestat

  If #filestat != 0
     Show 'Error opening output file.  Program terminating.'
     Stop
  End-If
End-Procedure


Begin-Procedure P150-Get-Last-Confirmed-Pay
#debug9 Show 'P150-Get-Last-Confirmed-Pay'
Begin-Select
MAX(PAY_END_DT) &PAY_END_DT

  Let $pay_end_dt = &PAY_END_DT

  Do Format-DateTime($pay_end_dt, $payend, {DEFMDY}, '', '')

  Let $Year4 = '1'
  Do Format-DateTime($pay_end_dt, $payenddt, {DEFMDY}, '', '')

  Let $pay_end_dt_MMDDYYYY = Substr($payenddt,1,2) || Substr($payenddt,4,2) || Substr($payenddt,7,4)
  Let $pay_end_dt_YYMMDD = Substr($payenddt,9,2) || Substr($payenddt,1,2) || Substr($payenddt,4,2)

  show ' '
  Show 'Last confirmed pay end date:  ' $pay_end_dt
  show ' '

FROM   PS_PAY_CALENDAR

WHERE  PAY_END_DT      <= $X000_WHERE_SELECT_ASOFDATE
AND    PAY_CONFIRM_RUN  = 'Y'
End-Select
End-Procedure


begin-procedure P160-Print-Cover-Page
#debug9 Show 'P160-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print 'As Of Date :'                                            (+2,5)
  Print $AsOfDate                                                 (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

  Let #PAGE-COUNT = 0
  New-Page
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
Begin-Select
gdm.gex_dreyfus_plan  ()  On-Break  Level=1
                                    Print=Never
                                    Before=P210-Write-Header-Record
                                    After=P250-After-Plan-Break
! CJH -12/06/2000 - Break after company for COD
pc.company            ()  On-Break  Level=2
                                    Print=Never
                                    After=P221-After-Company-Break
pc.emplid             ()  On-Break  Level=3
                                    Print=Never
                                    After=P220-After-Emplid-Break
!
!pc.emplid             ()  On-Break  Level=2
!                                    Print=Never
!                                    After=P220-After-Emplid-Break
! CJH - 12/06/2000 - end
gdm.gex_prof_shr
pd.ded_class
gdm.plan_type		!AXL 6/30/2005 Add
Sum(pd.ded_cur) &ded_cur

  Let $Data-Found-Flag = 'Y'

  Let $dreyfus_plan = &gdm.gex_dreyfus_plan
  Let $emplid = &pc.emplid
  Let $comp = &pc.company
 
  !show 'emplid /  &pd.ded_class / &gdm.plan_type ' &pc.emplid ' ' &pd.ded_class ' '&gdm.plan_type

  If &gdm.gex_prof_shr = 'Y'
    Add &ded_cur To #ps-contribution
  Else
    Evaluate &pd.ded_class
      !AXL 6/30/2005 New plan type processing - Begin 
      When = 'B'
        Evaluate &gdm.plan_type
	   when = '4V' 
             Add &ded_cur To #A-contribution4v
             Break
	   when-other
             Add &ded_cur To #A-contribution
	End-Evaluate
	Break
      !AXL 6/30/2005 New plan type processing - End
      When = 'P'
        Add &ded_cur To #P-contribution
        Break
      When = 'A'
        Add &ded_cur To #G-contribution
        Break
      When = 'N'
        Add &ded_cur To #V-contribution
        Break
    End-Evaluate
  End-If

From   ps_gex_dreyfus_map gdm,
       ps_pay_check       pc,
       ps_pay_deduction   pd

Where  pc.company        = pd.company
And    pc.paygroup       = pd.paygroup
And    pc.pay_end_dt     = pd.pay_end_dt
And    pc.off_cycle      = pd.off_cycle
And    pc.page_num          = pd.page_num
And    pc.line_num          = pd.line_num
And    pc.sepchk         = pd.sepchk

And    pd.pay_end_dt     = $pay_end_dt

And    pd.plan_type      = gdm.plan_type
And    pd.benefit_plan   = gdm.benefit_plan

! CJH - 12/06/2000 - COD changes - begin
! Group By gdm.gex_dreyfus_plan, pc.emplid, gdm.gex_prof_shr, pd.ded_class
Group By gdm.gex_dreyfus_plan, pc.company, pc.emplid, gdm.gex_prof_shr, pd.ded_class, gdm.plan_type

Having Sum(pd.ded_cur)  <> 0

Order By gdm.gex_dreyfus_plan, pc.company, pc.emplid
!Order By gdm.gex_dreyfus_plan, pc.emplid
! CJH - 12/06/2000 - end
End-Select
End-Procedure


Begin-Procedure P210-Write-Header-Record
#debug9 Show 'P210-Write-Header-Record'
  Write 1 From '002':3
               ' ':2
               &gdm.gex_dreyfus_plan:6
               ' ':12
               'DEFINE':6
               ' ':4
               $pay_end_dt_YYMMDD:6
               '.114':4
               ' ':37
    Status=#filestat

  If #filestat != 0
     Show 'Error writing header record to output file.  Program terminating.'
     Stop
  Else
    Add 1 To #benefit-plan-count
  End-If
End-Procedure


Begin-Procedure P220-After-Emplid-Break
#debug9 Show 'P220-After-Emplid-Break'
  Do P225-Print-Record
  Do P230-Format-Detail-Record

  Add 1 To #plan-count

! CJH - 12/07/2000 - COD Changes
  Add 1 To #company-count
  Add #A-contribution   To #A-contribution-total-co
  Add #A-contribution4v To #A-contribution-total-co		!AXL 6/30/2005
  Add #P-contribution   To #P-contribution-total-co
  Add #G-contribution   To #G-contribution-total-co
  Add #V-contribution   To #V-contribution-total-co
  Add #ps-contribution  To #ps-contribution-total-co
! CJH - 12/07/2000 -end

  Add #A-contribution   To #A-contribution-total
  Add #A-contribution4v To #A-contribution-total		!AXL 6/30/2005
  Add #P-contribution   To #P-contribution-total
  Add #G-contribution   To #G-contribution-total
  Add #V-contribution   To #V-contribution-total
  Add #ps-contribution  To #ps-contribution-total

  Let #A-contribution   = 0
  Let #A-contribution4v = 0					!AXL 6/30/2005
  Let #P-contribution   = 0
  Let #G-contribution   = 0
  Let #V-contribution   = 0
  Let #ps-contribution  = 0

  Let $wrk-fund   = ''
  Let $fund       = ''
  Let #fund-count = 0

  Let $wrk-fund2   = ''					!AXL 6/30/2005
  Let #fund-count2 = 0					!AXL 6/30/2005

End-Procedure
!*************************************************************************
! CJH - 12/7/2000 - COD changes
Begin-Procedure P221-After-Company-Break
#debug9 Show 'P221-After-Company-Break'
  print 'Company Count'               (+2,{#columna})
  print #company-count                (,{#column2})  Edit 9999,999,990
  print 'Company Totals'            (+1,{#columna})
  print #A-contribution-total-co      (,{#column2})  Edit 9999,999,990.00
  print #P-contribution-total-co      (,{#column3})  Edit 9999,999,990.00
  print #G-contribution-total-co      (,{#column4})  Edit 9999,999,990.00
  print #V-contribution-total-co      (,{#column5})  Edit 9999,999,990.00
  print #ps-contribution-total-co     (,{#column6})  Edit 9999,999,990.00

  let #company-count = 0

  let #A-contribution-total-co = 0
  let #P-contribution-total-co = 0
  let #G-contribution-total-co = 0
  let #V-contribution-total-co = 0
  let #ps-contribution-total-co = 0

  New-Page
end-procedure
! CJH - 12/7/2000 - end

!**************************************************************************
Begin-Procedure P225-Print-Record
#debug9 Show 'P225-Print-Record'

 
  if #A-contribution4v > 0 
     print $comp               (+1,{#columna})
     print $emplid             (,{#column1})
     print #A-contribution     (,{#column2})  Edit 9999,999,990.00		!AXL 6/30/2005
     print #P-contribution     (,{#column3})  Edit 9999,999,990.00
     print #G-contribution     (,{#column4})  Edit 9999,999,990.00
     print #V-contribution     (,{#column5})  Edit 9999,999,990.00
     print #ps-contribution    (,{#column6})  Edit 9999,999,990.00
     print $comp               (+1,{#columna})
     print $emplid             (,{#column1})
     print #A-contribution4v   (,{#column2})  Edit 9999,999,990.00		!AXL 6/30/2005
  else
     print $comp               (+1,{#columna})
     print $emplid             (,{#column1})
     print #A-contribution     (,{#column2})  Edit 9999,999,990.00		!AXL 6/30/2005
     print #P-contribution     (,{#column3})  Edit 9999,999,990.00
     print #G-contribution     (,{#column4})  Edit 9999,999,990.00
     print #V-contribution     (,{#column5})  Edit 9999,999,990.00
     print #ps-contribution    (,{#column6})  Edit 9999,999,990.00
   end-if
     
End-Procedure


Begin-Procedure P230-Format-Detail-Record
#debug9 Show 'P230-Format-Detail-Record'
  Let #num-in = #A-contribution
  Do P290-Convert-Sign
  Let $A-contribution = $num-out
  
  Let #num-in = #A-contribution4v		!AXL 6/30/2005
  Do P290-Convert-Sign				!AXL 6/30/2005
  Let $A-contribution4v = $num-out		!AXL 6/30/2005			

  Let #num-in = #P-contribution
  Do P290-Convert-Sign
  Let $P-contribution = $num-out

  Let #num-in = #G-contribution
  Do P290-Convert-Sign
  Let $G-contribution = $num-out

  Let #num-in = #V-contribution
  Do P290-Convert-Sign
  Let $V-contribution = $num-out

  Let #num-in = #ps-contribution
  Do P290-Convert-Sign
  Let $ps-contribution = $num-out

  If #A-contribution <> 0
    Let $wrk-fund = $wrk-fund || '**' || 'A' || $A-contribution
    Add 1 To #fund-count
  End-If
  !AXL 6/30/2005 - Begin
  If #A-contribution4v <> 0
    Let $wrk-fund2 = $wrk-fund2 || '**' || 'A' || $A-contribution4v
    Add 1 To #fund-count2
  End-If
  !AXL 6/30/2005 - End
  If #P-contribution <> 0
    Let $wrk-fund = $wrk-fund || '**' || 'P' || $P-contribution
    Add 1 To #fund-count
  End-If

  If #G-contribution <> 0
    Let $wrk-fund = $wrk-fund || '**' || 'G' || $G-contribution
    Add 1 To #fund-count
  End-If

  If #V-contribution <> 0
    Let $wrk-fund = $wrk-fund || '**' || 'V' || $V-contribution
    Add 1 To #fund-count
  End-If

  If #ps-contribution <> 0
    Let $wrk-fund = $wrk-fund || '**' || '1' || $ps-contribution
    Add 1 To #fund-count
  End-If

  Evaluate #fund-count

    When = 0		!AXL 6/30/2005
      Break		!AXL 6/30/2005
    When < 4
      Let $seq = '01'
      Let $fund = $pay_end_dt_YYMMDD || '      ' || $wrk-fund
      Do P240-Write-Detail-Record
      Break
    When = 4
      Let $seq = '01'
      Let $fund = $pay_end_dt_YYMMDD || '      ' || Substr($wrk-fund,1,36)
      Do P240-Write-Detail-Record
      Let $seq = '02'
      Let $fund = Substr($wrk-fund,37,12)
      Do P240-Write-Detail-Record
      Break
    When = 5
      Let $seq = '01'
      Let $fund = $pay_end_dt_YYMMDD || '      ' || Substr($wrk-fund,1,36)
      Do P240-Write-Detail-Record
      Let $seq = '02'
      Let $fund = Substr($wrk-fund,37,24)
      Do P240-Write-Detail-Record
      Break
  End-Evaluate
  
  !AXL 6/30/2005 Begin
  Evaluate #fund-count2
    When >= 1
      Let $seq = '01'
      Let $fund = $pay_end_dt_YYMMDD || '      ' || $wrk-fund2 || '                           4'
      Do P240-Write-Detail-Record
  End-Evaluate
  !AXL 6/30/2005 End

End-Procedure


Begin-Procedure P240-Write-Detail-Record
#debug9 Show 'P240-Write-Detail-Record'

  Do Get-Emp-Ssn ($emplid, $Ssn_Out)  !GEX_SEC_REENG 2016-04-10 Jyotsna Negi
  Write 1 From '114':3
               $seq:2
               $dreyfus_plan:6
               ' ':3
               !$emplid:9      !GEX_SEC_REENG 2016-04-10 Jyotsna Negi
                $Ssn_Out:9     !GEX_SEC_REENG 2016-04-10 Jyotsna Negi
               $fund:57
    Status=#filestat

  If #filestat != 0
     Show 'Error writing detail record to output file.  Program terminating.'
     Stop
  Else
    Add 1 To #benefit-plan-count
  End-If
End-Procedure


Begin-Procedure P250-After-Plan-Break
#debug9 Show 'P250-After-Plan-Break'
  print 'Plan Count'             (+2,{#column1})
  print #plan-count                (,{#column2})  Edit 9999,999,990
  print 'Plan Totals'            (+1,{#column1})
  print #A-contribution-total      (,{#column2})  Edit 9999,999,990.00
  print #P-contribution-total      (,{#column3})  Edit 9999,999,990.00
  print #G-contribution-total      (,{#column4})  Edit 9999,999,990.00
  print #V-contribution-total      (,{#column5})  Edit 9999,999,990.00
  print #ps-contribution-total     (,{#column6})  Edit 9999,999,990.00

  New-Page

  Do P260-Format-Summary-Record
  Do P280-Write-Trailer-Record

  Let #A-contribution-total  = 0
  Let #P-contribution-total  = 0
  Let #G-contribution-total  = 0
  Let #V-contribution-total  = 0
  Let #ps-contribution-total = 0

  Let $wrk-fund-total   = ''
  Let $fund-total       = ''
  Let #fund-count-total = 0

  Add #benefit-plan-count To #recs-written

  Let #benefit-plan-count = 0
  Let #plan-count = 0
End-Procedure


Begin-Procedure P260-Format-Summary-Record
#debug9 Show 'P260-Format-Summary-Record'
  Let #num-in = #A-contribution-total
  Do P290-Convert-Sign
  Let $A-contribution-total = $num-out

  Let #num-in = #P-contribution-total
  Do P290-Convert-Sign
  Let $P-contribution-total = $num-out

  Let #num-in = #G-contribution-total
  Do P290-Convert-Sign
  Let $G-contribution-total = $num-out

  Let #num-in = #V-contribution-total
  Do P290-Convert-Sign
  Let $V-contribution-total = $num-out

  Let #num-in = #ps-contribution-total
  Do P290-Convert-Sign
  Let $ps-contribution-total = $num-out

  If #A-contribution-total <> 0
    Let $wrk-fund-total = $wrk-fund-total || 'A  ' || $A-contribution-total
    Add 1 To #fund-count-total
  End-If

  If #P-contribution-total <> 0
    Let $wrk-fund-total = $wrk-fund-total || 'P  ' || $P-contribution-total
    Add 1 To #fund-count-total
  End-If

  If #G-contribution-total <> 0
    Let $wrk-fund-total = $wrk-fund-total || 'G  ' || $G-contribution-total
    Add 1 To #fund-count-total
  End-If

  If #V-contribution-total <> 0
    Let $wrk-fund-total = $wrk-fund-total || 'V  ' || $V-contribution-total
    Add 1 To #fund-count-total
  End-If

  If #ps-contribution-total <> 0
    Let $wrk-fund-total = $wrk-fund-total || '1  ' || $ps-contribution-total
    Add 1 To #fund-count-total
  End-If

  Evaluate #fund-count-total
    When < 4
      Let $seq-total = '01'
      Let $fund-total = $pay_end_dt_YYMMDD || '1     ' || $wrk-fund-total
      Do P270-Write-Summary-Record
      Break
    When = 4
      Let $seq-total = '01'
      Let $fund-total = $pay_end_dt_YYMMDD || '1     ' || Substr($wrk-fund-total,1,36)
      Do P270-Write-Summary-Record
      Let $seq-total = '02'
      Let $fund-total = Substr($wrk-fund-total,37,12)
      Do P270-Write-Summary-Record
      Break
    When = 5
      Let $seq-total = '01'
      Let $fund-total = $pay_end_dt_YYMMDD || '1     ' || Substr($wrk-fund-total,1,36)
      Do P270-Write-Summary-Record
      Let $seq-total = '02'
      Let $fund-total = Substr($wrk-fund-total,37,24)
      Do P270-Write-Summary-Record
      Break
  End-Evaluate
End-Procedure


Begin-Procedure P270-Write-Summary-Record
#debug9 Show 'P270-Write-Summary-Record'
  Write 1 From '104':3
               $seq-total:2
               $dreyfus_plan:6
               ' ':12
               $fund-total:57
    Status=#filestat

  If #filestat != 0
     Show 'Error writing summary record to output file.  Program terminating.'
     Stop
  Else
    Add 1 To #benefit-plan-count
  End-If
End-Procedure


Begin-Procedure P280-Write-Trailer-Record
#debug9 Show 'P280-Write-Trailer-Record'
  Move #benefit-plan-count To $benefit-plan-count 099999

  Write 1 From 'ZZZ':3
               ' ':2
               $dreyfus_plan:6
               'GIANT EAGLE INC':32
               $pay_end_dt_MMDDYYYY:8
               $benefit-plan-count:6
               ' ':23
    Status=#filestat

  If #filestat != 0
     Show 'Error writing trailer record to output file.  Program terminating.'
     Stop
  Else
    Add 1 To #recs-written
  End-If
End-Procedure


Begin-Procedure P290-Convert-Sign
#debug9 Show 'P290-Convert-Sign'
  If #num-in < 0
    Let #num-in = #num-in * -1
    Move #num-in To $num-in 0999999.99
    Let $num-in = Substr($num-in,1,7) || Substr($num-in,9,2)
    Let $num-wrk = '-' || Substr($num-in,9,1)
  Else
    Move #num-in To $num-in 0999999.99
    Let $num-in = Substr($num-in,1,7) || Substr($num-in,9,2)
    Let $num-wrk = '+' || Substr($num-in,9,1)
  End-If

  Evaluate $num-wrk
    When = '+0'
      Let $sign = '{'
      Break
    When = '+1'
      Let $sign = 'A'
      Break
    When = '+2'
      Let $sign = 'B'
      Break
    When = '+3'
      Let $sign = 'C'
      Break
    When = '+4'
      Let $sign = 'D'
      Break
    When = '+5'
      Let $sign = 'E'
      Break
    When = '+6'
      Let $sign = 'F'
      Break
    When = '+7'
      Let $sign = 'G'
      Break
    When = '+8'
      Let $sign = 'H'
      Break
    When = '+9'
      Let $sign = 'I'
      Break
    When = '-0'
      Let $sign = '}'
      Break
    When = '-1'
      Let $sign = 'J'
      Break
    When = '-2'
      Let $sign = 'K'
      Break
    When = '-3'
      Let $sign = 'L'
      Break
    When = '-4'
      Let $sign = 'M'
      Break
    When = '-5'
      Let $sign = 'N'
      Break
    When = '-6'
      Let $sign = 'O'
      Break
    When = '-7'
      Let $sign = 'P'
      Break
    When = '-8'
      Let $sign = 'Q'
      Break
    When = '-9'
      Let $sign = 'R'
      Break
    When-Other
      Show 'Invalid number'
      Stop
      Break
  End-Evaluate

  Let $num-out = Substr($num-in,1,8) || $sign
End-Procedure


Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    New-Page
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Do Format-Number(#recs-written,$recs-written,'888,888,888')
  Show $recs-written ' records written to ' $file1
  Show ''

  Do P310-Close-File

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Do Stdapi-Term             !stdapi.sqc
  Show ' '
  Show 'Successful end of report'
End-Procedure


Begin-Procedure P310-Close-File
#debug9 Show 'P310-Close-File'
  Close 1

  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop
  End-If
End-Procedure


#include 'askaod.sqc'    !Ask for AsOfDate
#include 'gexxx920.sqc'  !Get ben single row run control
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#Include 'getgeid.sqc'   !Get SSN !GEX_SEC_REENG 2016-04-10 Jyotsna Negi