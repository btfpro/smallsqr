!***********************************************************************
!  GEXPL021:  ANNIVERSARY REPORT IN 5 MONTH INCREMENTS                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPL021:             Annivesary report listing anniversaries in 5   *
!                       month increments.                              *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                              *
!			#debug8 key variable values                                      *
!			#debug7 data returned from sql calls                             *
!                                                                      *  
! SQL Tables:		employment                                             *
!                       job                                            *
!                       personal_data                                  *
!                                                                      *
! Written by:		Tony Labra 02/17/2001                                  *       
!                                                                      *
! Normally Run:		Weekly                                               *
!                                                                      *
! Control Parms:		FOR WHERE CLAUSE:                                  *
!				  Company Division Code                                        *
!				  Company  	                                                   *
!				  Paygroup  	                                                 *
!				  Deptid	                                                     *
!				  Employee Status	                                             *
!				  Account Code                                                 *
!                                 Employee Type                        *
!                                 Jobcode (Excludes)                   *
!				  As Of Date                                                   *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!	INITIALS	DATE		DESCRIPTION OF THE CHANGE                          *
!***********************************************************************
!	AXL		02/17/2001	Initial Creation                                   *
!                                                                      *
! GEX-MXT 03/24/2008     Fixed for REHIRE DT issue in 9.0              *
! ISDVASS 04/09/2008 	 Used $AsOfToday_dt instead of sysdate to pull   *
!                    	 rehire_dt from custom sqc                       *
! ISDVMXD 01/30/2009     ITG 56799 JT.Descr changes in SQRs	           *	
! GEX_SEC_REENG 2015-04-29 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'

!********************
Begin-Setup
!********************
  Declare-Variable
    Date     $Serv_Dt
    Date     $Serv_Dt2
    Date     $AsOfToday_Dt	
    Date     $last_week_dt
  End-Declare
  
 
  #define #col_1	02	!Name
  #define #col_2	27	!Emplid
  #define #col_3        42      !Job Code
  #define #col_4	52      !Job Title
  #define #col_5	85	!Service Date
  #define #col_6	100	!Months of Svc
  #define #col_7        110     !Flag for Transfers
  
End-Setup
 
!*********************************************************************
begin-report
!*********************************************************************
   
  do Init-Report
  do Main
  do Stdapi-Term
  do EOJ

end-report

!*********************************************************************
begin-heading 9
!*********************************************************************
#debug9 Show 'begin-heading'
#Include 'stdhdg01.sqc'

  Let $sub_title = 'For anniversaries reached between ' || $last_week_dt || ' and ' || $AsOfToday_Dt
  print $sub_title	(3,) center 

  #debug7 show 'cmpy ' $company
  #debug7 show 'save cmpy ' $save_company 
  Do Company-Name
  print 'Company'          (+1,1)
  print $Company	   (0,13)
  print $CompanyName	   (0,18)
  
  do Department-Name
  print 'Store'         (+1,1)
  print $deptid         (0,13)
  print $DeptName       (0,18)
    
  PRINT   'JOB'         (+2,{#col_3})
  PRINT   'SERVICE'	(,{#col_5})
  PRINT   'MONTHS'      (,{#col_6})
  
  PRINT   'NAME'        (+1,{#col_1})
  PRINT   'EMPLID'      (,{#col_2})
  PRINT   'CODE'        (,{#col_3})
  PRINT   'JOB TITLE'   (,{#col_4})
  PRINT   'DATE'        (,{#col_5})
  PRINT   'REACHED'     (,{#col_6})
  PRINT   'TRANSFER'    (,{#col_7})
  
  print '-'             (+1,1,120)  Fill
 
end-heading

!***********************************************************************
begin-procedure Init-Report
!***********************************************************************

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init     
  
  let $first='Y'
  
  Let $GEXXX900_Company_Alias  = 'j.company'
  Let $GEXXX901_Company_Alias  = 'j.company'
  Let $GEXXX901_Paygroup_Alias = 'j.paygroup'
  Let $GEXXX902_Deptid_Alias   = 'j.deptid'
  Let $GEXXX903_Emp_Stat_Alias = 'j.empl_status'
  Let $GEXXX907_Div_CD_Alias   = 'gdt.gex_company_div_cd'
  Let $GEXXX909_Acct_CD_Alias  = 'j.acct_cd'
  Let $GEXXX916_Jobcode_Alias  = 'j.jobcode'

  If $prcs_process_instance = ''
    Do SQRW-Run-Controls  
  Else
    Do Process-Scheduler-Run-Controls
  End-if
  
  #debug7 show '$AsOfDate ' $X000_WHERE_SELECT_ASOFDATE 
  Let $AsOfToday_Dt = strtodate($X000_WHERE_SELECT_ASOFDATE, 'DD-MON-YYYY')
  #debug7 show '$AsOfToday_Dt ' $AsOfToday_Dt
    
  let $last_week = dateadd($AsOfToday_Dt, 'Week',-1)
  #debug7 show '$last_week ' $last_week
  let $last_week_dt = strtodate($last_week, 'DD-MON-YYYY')

  let $ReportID		= 'GEXPL021'
  let $ReportTitle 	= 'Anniversary Report - 5 Month Increments'

  display $ReportID noline
  display ' - '     noline
  display $ReportTitle 

  date-time () hh:mi:ss &TimeBegan
  date-time () MM/DD/YYYY  &DateBegan
  show 'Report Began at ' &TimeBegan ' on '  &DateBegan
  
  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  
  Let $X000_ORDER_BY = 'Company, Deptid, Name'
 
  Show '$GEXXX900_Include_Company_Display_Criteria          = ' $GEXXX900_Include_Company_Display_Criteria
  Show '$GEXXX901_Include_Company_Paygroup_Display_Criteria = ' $GEXXX901_Include_Company_Paygroup_Display_Criteria
  Show '$GEXXX902_Include_Deptid_Display_Criteria           = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Display_Criteria         = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  Show '$GEXXX907_Include_Div_Cd_Display_Criteria           = ' $GEXXX907_Include_Div_Cd_Display_Criteria
  Show '$GEXXX909_Include_Acct_Cd_Display_Criteria          = ' $GEXXX909_Include_Acct_Cd_Display_Criteria
  Show '$GEXXX916_Exclude_Jobcode_Display_Criteria          = ' $GEXXX916_Exclude_Jobcode_Display_Criteria
  Show '$GEXPL021_Include_Empl_Type_Display_Criteria        = ' $GEXPL021_Include_Empl_Type_Display_Criteria
  Show '$X000_Where_Select_AsOfDate                         = ' $X000_Where_Select_AsOfDate
  
  Do Print-Cover-Page
  new-page
  
  
end-procedure

!***********************************************************************
Begin-Procedure SQRW-Run-Controls 
!***********************************************************************
#debug9 show 'SQRW-Run-Controls'

  Let $EmplTypeString = ''''
  Display 'Enter Employee Type or leave blank to exit.'
  While 1=1
    Input $EmplType Maxlen=1 'Employee Type'
    Uppercase $EmplType
    If Rtrim($EmplType, ' ') = ''
       Concat '''' With $EmplTypeString
       Break
    End-If
    If $EmplTypeString <> ''''
       Concat ''',''' With $EmplTypeString
    End-If
    Concat $EmplType With $EmplTypeString
  End-While

  If $EmplTypeString = ''''''
     Let $GEXPL021_Include_Empl_Type_Criteria = '1=1'
     Let $GEXPL021_Include_Empl_Type_Display_Criteria = 'ALL'
  Else
     Let $GEXPL021_Include_Empl_Type_Criteria = 'J.EMPL_TYPE  In (' || $EmplTypeString || ')'
     Let $GEXPL021_Include_Empl_Type_Display_Criteria = $GEXPL021_Include_Empl_Type_Criteria
  End-If
  
  Let $JobcodeString = ''''
  Display 'Enter Jobcodes to exclude or leave blank to exit.'
  While 1=1
    Input $Jobcode Maxlen=6 'Jobcode'
    Uppercase $Jobcode
    If Rtrim($Jobcode, ' ') = ''
       Concat '''' With $JobcodeString
       Break
    End-If
    If $JobcodeString <> ''''
       Concat ''',''' With $JobcodeString
    End-If
    Concat $Jobcode With $JobcodeString
  End-While

  If $JobcodeString = ''''''
     Let $GEXXX916_Exclude_Jobcode_Criteria = '1=1'
     Let $GEXXX916_Exclude_Jobcode_Display_Criteria = 'NONE'
  Else
     Let $GEXXX916_Exclude_Jobcode_Criteria = 'J.JOBCODE Not In (' || $JobcodeString || ')'
     Let $GEXXX916_Exclude_Jobcode_Display_Criteria = $GEXXX916_Exclude_Jobcode_Criteria
  End-If

  Do GEXXX950-Input-Parameters
  
end-procedure

!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls 
!***********************************************************************
#debug9 show 'Process-Scheduler-Run-Controls'

 !Get parameters from single row run control record 
  Do GEXRCHR1-SELECT-PARAMETERS

  If Rtrim ($GEX_RC_HR.AsOfDate, ' ') = ''
    Let $X000_Where_Select_AsOfDate = $AsOfToday
  Else
    Let $X000_Where_Select_AsOfDate = $GEX_RC_HR.AsOfDate
  End-If

  If Rtrim($GEX_RC_HR.EMPL_TYPE, ' ') = ''
    Let $GEXPL021_Include_Empl_Type_Criteria = '1=1'
    Let $GEXPL021_Include_Empl_Type_Display_Criteria = 'All'
  Else
    Let $GEXPL021_Include_Empl_Type_Criteria = 'J.EMPL_TYPE = ''' || $GEX_RC_HR.EMPL_TYPE || ''''
    Let $GEXPL021_Include_Empl_Type_Display_Criteria = $GEXPL021_Include_Empl_Type_Criteria
    Let $empltype = $GEX_RC_HR.EMPL_TYPE
  End-If

  Do GEXXX900-Select-Company-Parameters
  Do GEXXX901-Select-Company-Paygroup-Parameters
  Do GEXXX902-Select-Deptid-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters
  Do GEXXX907-Select-Div-CD-Parameters 
  Do GEXXX909-Select-Acct-CD-Parameters
  Do GEXXX916-Select-Jobcode-Parameters
  
End-Procedure

!***********************************************************************
begin-procedure Print-Cover-Page
!***********************************************************************
#debug9 Show 'Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX907_Include_Div_Cd_Display_Criteria           ='   (+2,5)
  Print $GEXXX907_Include_Div_Cd_Display_Criteria                 (0,+2)
  Print '$GEXXX900_Include_Company_Display_Criteria          ='   (+1,5)
  Print $GEXXX900_Include_Company_Display_Criteria                (0,+2)
  Print '$GEXXX901_Include_Company_paygroup_Display_Criteria ='   (+1,5)
  Print $GEXXX901_Include_Company_paygroup_Display_Criteria       (0,+2)
  Print '$GEXXX902_Include_Deptid_Display_Criteria           ='   (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria	          (0,+2)
  Print '$GEXXX903_Include_Emp_Stat_Display_Criteria         ='   (+1,5)
  Print $GEXXX903_Include_Emp_Stat_Display_Criteria               (0,+2)
  Print '$GEXXX909_Include_Acct_Cd_Display_Criteria          ='   (+1,5)
  Print $GEXXX909_Include_Acct_Cd_Display_Criteria                (0,+2)
  Print '$GEXXX916_Exclude_Jobcode_Display_Criteria          ='   (+1,5)
  Print $GEXXX916_Exclude_jobcode_Display_Criteria                (0,+2)
  Print '$GEXPL021_Include_Empl_Type_Display_Criteria        ='   (+1,5)
  Print $GEXPL021_Include_Empl_Type_Display_Criteria              (0,+2)

  Print 'As Of Date :'                                            (+2,5)
  Print $X000_Where_Select_AsOfDate                               (0,+2)

  Print 'Report showing monthly anniversaries reached between '   (+2,5)
  Print $last_week_dt                                             (0,+1)
  Print 'and'                                                     (0,+1)
  Print $asoftoday_dt                                             (0,+1)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (0,+2)
  
  Let #PAGE-COUNT = 0
   
End-Procedure

!***********************************************************************
Begin-Procedure Main
!***********************************************************************
#debug9 Show 'Process-Main'
   
   Let $rowfound = 'N'	

Begin-Select
J.Company       ()  on-break  	print=never
				level=1                              
                              	after=Cmpy-Change
                              	save=$save_company
                         
j.Deptid       ()  on-break  	print=never
				level=2
                             	before=New-Page
                             	after=After-Dept-Change
                             	save=$save_deptid
                    
j.paygroup                                        
J.Emplid		
J.Empl_rcd
J.Empl_type
J.Effdt		
J.JOBCODE
J.POSITION_NBR		!ISDVMXD added for ITG 56799 on 01/30/2009
JT.DESCR
E.Hire_Dt       
!E.Rehire_Dt		!GEX-MXT commented for rehire date logic in 9.0
P.Name
GDT.GEX_COMPANY_DIV_CD


SYSDATE       		 &GEXJOB_REH_ASOFDATE 	!GEX-MXT ADDED FOR REHIRE DATE LOGIC IN 9.0

   Let $Company  = &J.COMPANY
   Let $Paygroup = &J.PAYGROUP
   let $deptid   = &j.deptid
   Let $JobTitle = ltrim(rtrim(&JT.DESCR,' '),' ')	!ISDVMXD added for ITG 56799 on 01/30/2009
   Let $Position_Nbr = LTrim(RTrim(&J.POSITION_NBR,' '),' ')	!ISDVMXD added for ITG 56799 on 01/30/2009
   
   Do Get-Position-Title				!isdvmxd added for ITG 56799 on 01/30/2009
  ! GEX-MXT 03/24/2008 Fixed for REHIRE DT-begin
   let $GEXJOB_REH_EMPLID = &J.emplid
   let #GEXJOB_REH_EMPLRCD = &J.EMPL_RCD
!   let $GEXJOB_REH_ASOFDATE = &GEXJOB_REH_ASOFDATE ! ISDVASS used $AsOfToday_dt instead of sysdate
    Let $GEXJOB_REH_ASOFDATE = $AsOfToday_dt				! ISDVASS used $AsOfToday_dt instead of sysdate
   do Get-Job-Rehire-Dt
   
  ! GEX-MXT 03/24/2008 Fixed for REHIRE DT-end   
	
   !if &E.Hire_Dt > &E.Rehire_Dt		!GEX-MXT COMMENTED FOR REHIRE DATE LOGIC
   
   if &E.Hire_Dt > $GEXJOB_REH_REHIRE_DT		!GEX-MXT COMMENTED FOR REHIRE DATE LOGIC
   
      let $Serv_Dt=&E.Hire_Dt
   Else
      !Let $Serv_Dt=&E.ReHire_Dt	!GEX-MXT COMMENTED FOR REHIRE DATE LOGIC
      LET $Serv_Dt=$GEXJOB_REH_REHIRE_DT	!GEX-MXT ADDED FOR REHIRE DATE LOGIC
   End-If
   
   !show 'Emplid:' $GEXJOB_REH_EMPLID ' &E.Hire_Dt :' &E.Hire_Dt '  $GEXJOB_REH_REHIRE_DT:'  $GEXJOB_REH_REHIRE_DT ' $Serv_Dt:' $Serv_Dt
   
   let $prior_division = ' '
   Do Check-For-Transfers 
   if $Transfer = 'Y'
      let $transfer_flag = '*'
      Do Get-Prior-Division
      if isblank($prior_division) = 0
         if $prior_division <> &gdt.gex_company_div_cd
            let $serv_dt = &TRN.effdt
         else
            let $transfer_flag = ' '
         end-if
      end-if
   end-if
   
        #debug7 show ' '
        #debug7 show 'emplid ' &j.emplid
        #debug7 show 'cmpy ' &J.COMPANY
        #debug7 show 'paygrp ' &J.PAYGROUP
        #debug7 show 'deptid ' &j.deptid
   	#debug7 show 'service dt ' $serv_dt
   	#debug7 show 'prior div ' $prior_division
   	#debug7 show 'transfer flag ' $transfer_flag
        
   Let $Months_Worked = datediff($AsOfToday_Dt,$Serv_Dt,'month')
   	#debug7 show '$months worked ' $Months_Worked
                
   let #target=floor(to_number($Months_Worked))
   	#debug7 show '#target ' #target
   let $target = edit(#target, '9999')
        
   if #target > 4
      if mod(#target,5)=0	!If anni is divisible by 5 evenly
         let $anniv ='Y'
         do check-first-time
         if #Target > #Target_Last_Week  !1st time reaching milestone
            add 1 to #emp_count
            add 1 to #total_emp_count
            do Print-Detail
            Let $rowfound = 'Y'
         end-if
      end-if
   end-if
        
From PS_JOB J, 
     PS_Employment E,
     PS_Personal_Data P,
     PS_GEX_DEPT_TBL GDT,
     PS_JOBCODE_TBL JT
     
     
Where 	J.Effdt		= (Select Max(J1.Effdt)	From PS_JOB J1
       			Where J1.Emplid 	= J.Emplid
         		And J1.Empl_Rcd 	= J.Empl_Rcd
         		And J1.Effdt 		<= $AsOfToday_dt)
         		
And 	J.Effseq 	=(Select Max(J2.Effseq)	From PS_JOB J2
  		   	Where J2.Emplid 	= J.Emplid
         		And J2.Empl_Rcd 	= J.Empl_Rcd
         		And J2.Effdt 		= J.Effdt)
         		
And   	E.emplid	= J.Emplid
And 	E.Empl_Rcd	= J.Empl_Rcd	

And   	J.emplid	= P.Emplid

And     J.deptid        = GDT.deptid

AND     J.JOBCODE       = JT.JOBCODE

And    GDT.Effdt        = (Select Max(effdt) From   ps_gex_dept_tbl
       			Where  deptid          = gdt.deptid
       			And    effdt          <= $AsOfToday_dt)       			

And GDT.sequence_number = (Select Max(sequence_number) From   ps_gex_dept_tbl
       			Where  deptid          = gdt.deptid
       			And    effdt           = gdt.effdt)
       			
AND JT.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOBCODE_TBL
        WHERE JT.SETID = SETID
          AND JT.JOBCODE = JOBCODE
          AND EFFDT <= J.EFFDT)       			
And   [$GEXXX900_Include_Company_Criteria]
And   [$GEXXX901_Include_Company_Paygroup_Criteria] 
And   [$GEXXX902_Include_Deptid_Criteria]
And   [$GEXXX907_Include_Div_Cd_Criteria]
And   [$GEXXX903_Include_Emp_Stat_Criteria]
And   [$GEXXX909_Include_Acct_Cd_Criteria]
And   [$GEXXX916_Exclude_Jobcode_Criteria]
And   [$GEXPL021_Include_Empl_Type_Criteria]
       			
order by j.company, j.deptid, p.name

End-Select

End-Procedure

!******************************************************************
!This procedure checks if the current employee being processed, is
!a transfering from something other than a Columbus paygroup
!******************************************************************
Begin-Procedure Check-For-Transfers
!******************************************************************
#debug9 Show 'Check-For-Transfers'

  move 'N' to $Transfer
  move ' ' to $transfer_flag
  
begin-select
TRN.EFFDT
  
  move 'Y' to $Transfer
  
FROM   PS_JOB TRN

WHERE  TRN.EMPLID        = &J.EMPLID
AND    TRN.EMPL_RCD     = &J.EMPL_RCD
AND    TRN.COMPANY       = &J.COMPANY
AND    TRN.PAYGROUP      = &J.PAYGROUP
AND    TRN.EFFDT         =
      (SELECT Min(EFFDT) FROM   PS_JOB
       WHERE  EMPLID     = TRN.EMPLID
       AND    EMPL_RCD  = TRN.EMPL_RCD
       AND    paygroup = &J.PAYGROUP
       AND    EFFDT     >=
                         (Select Max(effdt)
                          From   ps_job
                          Where  emplid     = TRN.emplid
                          And    empl_rcd  = TRN.empl_rcd
                          And    effdt     <= $AsOfToday_dt
                          and    paygroup <> &J.PAYGROUP) )
 AND   TRN.EFFSEQ           =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB 
       WHERE  EMPLID      = TRN.EMPLID
       AND    EMPL_RCD   = TRN.EMPL_RCD
       AND    EFFDT       = TRN.EFFDT)

end-select

end-procedure

!******************************************************************
!This procedure checks the division code prior to the transfer
!******************************************************************
Begin-Procedure Get-Prior-Division
!******************************************************************
#debug9 Show 'Get-Prior-Division'
  
Begin-Select
     
PJ.Deptid 
PGDT.GEX_COMPANY_DIV_CD

   Let $prior_division = &PGDT.GEX_COMPANY_DIV_CD
         
From PS_JOB PJ,
     PS_GEX_DEPT_TBL PGDT
     
where  PJ.EMPLID        = &J.EMPLID
AND    PJ.EMPL_RCD     = &J.EMPL_RCD
	
AND    PJ.Effdt	= (Select Max(Effdt) From PS_JOB
       		   Where PJ.Emplid 	= Emplid
         	   And PJ.Empl_Rcd 	= Empl_Rcd
         	   And Effdt 		< &TRN.effdt)
And    PJ.Effseq =(Select Max(Effseq) From PS_JOB
  		   Where PJ.Emplid 	= Emplid
         	   And PJ.Empl_Rcd 	= Empl_Rcd
         	   And PJ.Effdt  	= Effdt)
         		 
And    PJ.deptid        = PGDT.deptid

And    PGDT.Effdt       = (Select Max(effdt) From  ps_gex_dept_tbl
       			Where  PGDT.deptid          = deptid
       			And    effdt          < &TRN.EFFDT)
And PGDT.sequence_number = (Select Max(sequence_number) From   ps_gex_dept_tbl
       			Where  PGDT.deptid     = deptid
       			And    PGDT.effdt           = effdt)
       			
end-select

end-procedure

!***********************************************************************
Begin-Procedure Check-First-Time
!***********************************************************************
#debug9 Show 'Check-First-Time'
	
   let $Months_Worked_Last_Week = datediff($last_week_dt,$Serv_Dt,'month')
   	#debug7 show '$Months_Worked_Last_Week ' $Months_Worked_Last_Week
   	
   let #Target_Last_Week = floor(to_number($Months_Worked_Last_Week))
	#debug7 show '#Target_Last_Week ' #Target_Last_Week
	
End-Procedure

!***********************************************************************
begin-procedure Cmpy-Change
!***********************************************************************
#debug9 Show 'Cmpy-Change'

  move $save_company to $company
 
end-procedure

!***********************************************************************
begin-procedure After-Dept-Change
!***********************************************************************
#debug9 Show 'After-Dept-Change'

  move $save_deptid to $deptid
 
  print 'EMPLOYEE COUNT:'         (+2,16)
  print #emp_count                (,+2)   edit 9,999,999
  print ''                        (+2,)
  move 0 to #emp_count
  
end-procedure

!***********************************************************************
begin-procedure New-Page
!***********************************************************************
#debug9 Show 'New-Page'

  if $first = 'Y'
     let $first='N'
  else
     new-page
  end-if
  
end-procedure


!*********************************************************************
begin-procedure Print-Detail
!********************************************************************* 
   Print &P.Name		(+1,{#col_1})	
   !Print &J.Emplid		(,{#col_2})	edit xxx-xx-xxxx !GEX_SEC_REENG 2015-04-29 Vahini Katta 
   Print &J.Emplid		(,{#col_2}) !GEX_SEC_REENG 2015-04-29 Vahini Katta 
   Print &J.Jobcode		(,{#col_3})	
   !ISDVMXD added for ITG 56799 on 01/30/2009 --- Begin
   If $PosName = ' '
   	Show 'Posname = ' ' So JobTitle = ' $JobTitle
   	Print $JobTitle		(,{#col_4})	
   Else
   	Show 'Posname <> ' ' So posname = ' $PosName
   	Print $PosName		(,{#col_4})	
   End-If
   !ISDVMXD added for ITG 56799 on 01/30/2009 --- End
   Print $serv_dt		(,{#col_5})
   Print $target		(,{#col_6})
   Print $transfer_flag 	(,{#col_7})
     
end-procedure

!***********************************************************************
begin-procedure Company-Name
!***********************************************************************
#debug9 Show 'Company-Name'
  
  if $AsOfDate = ''  !if no As-Of-Date is specified, default to Today
    move $AsOfToday to $AsOfDate
  end-if

begin-SELECT
CT.DESCR
  move &ct.descr to $companyname
   
FROM  PS_COMPANY_TBL CT
WHERE CT.COMPANY = $Company
  AND CT.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_COMPANY_TBL
       WHERE  CT.COMPANY = Company
         AND  EFFDT  <= $AsOfDate)
end-SELECT
 
end-procedure

!**********************************
begin-procedure Department-Name
!**********************************

  move '' to $DeptName
  
  if $AsOfDate = ''
    move $AsOfToday to $AsOfDate
  end-if

begin-SELECT
X.DESCR

  let $DeptName      = Rtrim(&X.DESCR,' ')
 
FROM  PS_DEPT_TBL X
WHERE X.DEPTID = $DeptID

  AND X.EFFDT <= $AsOfDate
  AND X.EFFDT  =
       (SELECT MAX(EFFDT)
        FROM   PS_DEPT_TBL
        WHERE  DEPTID = X.DEPTID
          AND  EFFDT <= $AsOfDate)
end-SELECT

end-procedure

!***********************************************************************
Begin-Procedure EOJ
!***********************************************************************

  If $rowfound = 'N'
     Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  Else
     print 'TOTAL EMPLOYEE COUNT:'   (+2,16)
     print #total_emp_count          (,+2)   edit 9,999,999
  End-If

  do reset

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'

End-Procedure

#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx916.sqc'  !Get jobcode multiple row table
#include 'gexxx921.sqc'  !Get hr single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls

#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date math
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#include 'gexrehdt.sqc'	 !GEX-MXT 03/24/2008 Fixed for REHIRE DT
#include 'getposnm.sqc'	 !Get-Position-Title procedure			!isdvmxd added for ITG 56799 on 01/28/2009
#Include 'getgeid.sqc'   !Get SSN !GEX_SEC_REENG 2015-04-29 Vahini Katta