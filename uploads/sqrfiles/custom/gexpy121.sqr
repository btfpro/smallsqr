!***********************************************************************
! GEXPY121:  PHARMACY INTERN JOB INSERTS REPORT                        *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY121:             PHARMACY INTERN JOB INSERTS REPORT             *
!                                                                      *
! Narrative:            This program creates job row inserts to place  *
!                       Pharmacy Interns on or off unpaid leave of     *
!                       absence based on the hours worked. Also        *
!                       produces a report.                             *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    * 
!                       #debug7 data returned from sql calls           * 
!                                                                      *
! SQL Tables:           PS_JOB                                         * 
!                       PS_PAY_EARNINGS                                *  
!                       PS_PAY_OTH_EARNS                               *
!                                                                      *
! Written by:           Carl Buckrop / Tony Labra                      *                                                           
!                                                                      *
! Normally run:                                                        *
!                                                                      *
! Entered Run                                                          *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                       AsOfDate                                       *
!                                                                      *
!                       FOR ORDER BY CLAUSE:                           *
!                       1)  JOB.COMPANY, JOB.PAYGROUP, JOB.DEPTID      *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE         DESCRIPTION OF THE CHANGE          *
!***********************************************************************
!            CWB       08/21/2000    Initial creation.                 *
!                                                                      *
!            AXL       10/11/2000    Slight modifications of main      *
!                                    select logic.  Add email notifi-  *
!                                    cation if future rows exist for   *
!                                    term inserts into job.            *
!                                                                      *
!            AXL       12/06/2000    Determine AsOfDate before date    *
!                                    processing begins.                *
!                                    Corrected a problem with job info *
!                                    being copied from wrong row.      *
!                                    Added logic to update future job  *
!                                    rows.                             *
!                                    Add check for action/action rsn = *
!                                    LOA/PER.                          *
!            SCM      01/09/2001     Added evaluation of reg vacation  *
!                                    erncd '519', '522' and '523' for  *
!                                    Cleveland processing.             *
!                                                                      *
!            AXL      01/24/2001     Added additional joins by Cmpy/   *
!                                    Paygroup to handle transferring   *
!                                    interns.  Adjusted logic that     *
!                                    checks for row in JOB prior to    *
!                                    LOA/PER row.                      *
!                                                                      *
!            AXL      02/06/2001     Added Trng ERNCD's that should    *
!                                    count toward productive hrs.      *
!                                                                      *
!            AXL      04/04/2001     Correction to effdt logic in Check*
!                                    Last Lv Type procedure.           *
!                                                                      *
!            AXL      5/11/2001      Use effseq from inserted JOB row  *
!                                    when checking for rows in BAS     *
!                                    ACTIVITY.                         *
!                                                                      *
!  HR70133   AXL      05/14/2001     Add new job field GEX_SEASONAL_EMP*
!                                                                      *
!            AXL      05/29/2001     Add new check for determining     *
!                                    term dates if applicable.         *
!                                                                      *
!            SCM      09/07/2001     Modified select in Get-Hrs para   *
!                                    to remove company and paygroup.   *
!                                    IF an ee transferred into a new   *
!                                    co/paygroup, the pgm was looking  *
!                                    at the old co and didn't see      *
!                                    activity, therefore inserted an   *
!                                    LOA record by mistake.            *
!                                                                      *
!            GBD      09/19/2002     v8.3 Upgrade:                     *
!                                    Added/Removed fields on Job table *
!                                    Added Insert Procedures for Job_Jr*
!                                    and Compensation tables.          *
!                                                                      *
!  HR10306   GBD      01/03/2003     Added BAS_SUPPRESS_FORMS field to *
!                                    Bas_Activity table insert.        *
!                                                                      *
!  HR10380   GBD      01/27/2003     Add code to select email parsm    *
!                                    from GEX_INTFC_RULE/DATA.         *
!                                                                      *
!  HR10716   AXL      05/18/2004     Correct flaw in sub-select logic  *
!                                    in                                *
!                                                                      *
!  HR10875   SRC      03/02/2005     Insert termination date on        *
!                                    PS_EMPLOYMENT table, when a term  *
!				     row is inserted into Job.         * 
!                                                                      *
!  VENDNYS   NYS      08/27/2007     Modified for Upgrade 9.0          *
!                                    changes made for ps_job, ps_job_jr*
!                                    ps_action_reason_tbl              *
!                                    included HR_STATUS logic          *
!  GEX-TLL   TLL      04/08/2008     HCM 9.0 Upgrade                   *
! VENDAXG    AXG      07/14/2008     VENDAXG ADDED FOR ITG 51358       *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 

#define #x000_col_selection_criteria_a  02
#define #x000_col_selection_criteria_b  05

!line 1
#define #x000_col_name                  01
#define #x000_col_emplid                30
#define #x000_col_company               41
#define #x000_col_paygroup              49
#define #x000_col_deptid                59
#define #x000_col_jobcode               70
#define #x000_col_totalhrs              84

!*********************************************************************
begin-report
!*********************************************************************
#debug9 show 'begin-report'

  do Initialization
  do Put-On-Leave
  do Return-From-Leave
  do Terminate-From-Leave
  do stdapi-term
  do EOJ

end-report

!***********************************************************************
begin-heading 09
!***********************************************************************

#debug9 show 'begin-heading'

 #Include 'stdhdg01.sqc'

  print $x000_header_1       (3,) center
  print $x000_header_2       (+1) center

  print '-' (+2,1,174) fill
  print 'Employee Name'       (+2,{#x000_col_name})     bold 
  print 'Emplid'              (0,{#x000_col_emplid})    bold 
  print 'Company'             (0,{#x000_col_company})   bold 
  print 'Paygroup'            (0,{#x000_col_paygroup})  bold 
  print 'Deptid'              (0,{#x000_col_deptid})    bold 
  print 'Job Code'            (0,{#x000_col_jobcode})   bold 
  print 'Total Hrs'           (0,{#x000_col_totalhrs})  bold 

  print '-' (+1,1,174) fill
 
end-heading  

!***********************************************************************
begin-procedure Initialization
!***********************************************************************
#debug9 show 'Initialization'

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
     show 'asoftoday=' $asoftoday
  do stdapi-init
  
  let #empl-count = 0

  let $X000_ORDER_BY = 'J.COMPANY, J.PAYGROUP, J.DEPTID, J.EMPLID'
  
  !AXL 12/6/2000 Determine AsOfDate before date processing begins - Begin 
  if $Prcs_process_instance = ''
     Do Ask-As-Of-Date
     Let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate
  else
     Do GEXXX922-Select-Parameters
     Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
  end-if

  if rtrim($X000_WHERE_SELECT_ASOFDATE, ' ' ) = ''
     let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
  end-if

  do Get-Last-Confirmed-Pay
  do Get-Date-3-Weeks-Ago
  do Get-Date-6-Months-Ago

  !AXL 12/6/2000 12/6/2000 Determine AsOfDate before date processing begins - End

  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  let $ReportID           = 'GEXPY121'
  let $ReportTitle        = 'PHARMACY INTERN INSERTS'                                     
  let $Country            = 'USA'

  show '$ReportID= '     $ReportID
  show '$ReportTitle = ' $ReportTitle   
    
  show '$X000_WHERE_SELECT_ASOFDATE        ='  $X000_WHERE_SELECT_ASOFDATE 

  do Print-Cover-Page
  new-page

end-procedure

!***********************************************************************
Begin-Procedure Print-Cover-Page
!***********************************************************************

   print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
   print '$Prcs_OPRID          ='                              (+2,{#x000_col_selection_criteria_b})
   print $Prcs_OPRID                                           (0,+2)
   print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
   print $PRCS_RUN_CNTL_ID                                     (0,+2)

   print 'SELECTION CRITERIA FOR THIS REPORT RUN:'           (+5,{#x000_col_selection_criteria_a})
   print '$X000_WHERE_SELECT_ASOFDATE                     ='   (+1,{#x000_col_selection_criteria_b})
   print  $X000_WHERE_SELECT_ASOFDATE                          (0,+2)
   
   print 'GROUP ONE: INTERNS WITH NO HRS BETWEEN'		(+2,{#x000_col_selection_criteria_b})
   print $pay_end_3_weeks_ago					(0,70)
   print 'AND'							(0,+2)
   print $pay_end_dt						(0,+2)

   print 'GROUP TWO: INTERNS ON LEAVE WITH HRS IN CURRENT PAY END DT OF' (+1,{#x000_col_selection_criteria_b})
   print $pay_end_dt						(0,70)

   print 'GROUP THREE: INTERNS ON LEAVE WITH NO HRS BETWEEN' 	(+1,{#x000_col_selection_criteria_b})
   print $pay_end_6_months_ago					(0,70)
   print 'AND'							(0,+2)
   print $pay_end_dt						(0,+2)

   
   print '$X000_ORDER_BY                                  =' (+2,{#x000_col_selection_criteria_b})
   print $X000_ORDER_BY    (0,+2)

   let #page-count=0 

end-procedure

!***********************************************************************
Begin-Procedure Get-Last-Confirmed-Pay
!***********************************************************************
#debug9 Show 'Get-Last-Confirmed-Pay'

Begin-Select Loops=1
pay_end_dt
pay_begin_dt

  Let $AsOfDate         = &pay_end_dt
  Let $pay_end_dt       = &pay_end_dt
  Let $pay_begin_dt     = &pay_begin_dt

  If Rtrim($pay_end_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  End-If

From   ps_pay_calendar
Where  pay_end_dt         = 
     (Select Max(pay_end_dt)
      From   ps_pay_calendar
       Where  pay_end_dt <= $X000_WHERE_SELECT_ASOFDATE 
       And    pay_confirm_run = 'Y')

And    pay_confirm_run = 'Y'

End-Select
End-Procedure

!***********************************************************************
Begin-Procedure Get-Date-3-Weeks-Ago
!***********************************************************************
#debug9 Show 'Get-Date-3-Weeks-Ago'

  let #days = 14
  do Convert-to-dtu-date($pay_end_dt,$pay_end_dtu)
  do dtu-subtract-days($pay_end_dtu, #days, $dtu_date_out) 
  do Convert-from-dtu-date($dtu_date_out,$pay_end_3_weeks_ago)
  show 'pay end dt:  ' $pay_end_dt
  show '3 weeks ago: ' $pay_end_3_weeks_ago
End-Procedure

!***********************************************************************
Begin-Procedure Get-Date-6-Months-Ago
!***********************************************************************
#debug9 Show 'Get-Date-6-Months-Ago'

  let #days = 182    !26 weeks
  do Convert-to-dtu-date($pay_end_dt,$pay_end_dtu)
  do dtu-subtract-days($pay_end_dtu, #days, $dtu_date_out) 
  do Convert-from-dtu-date($dtu_date_out,$pay_end_6_months_ago)
  show 'pay end dt:  ' $pay_end_dt
  show '6 months ago: ' $pay_end_6_months_ago
End-Procedure

!***********************************************************************
begin-procedure Put-on-leave
!***********************************************************************
#debug9 show 'put-on-leave'
  let $process_flag = '110'
  let $process_pay_end_criteria =  ' between ''' || $pay_end_3_weeks_ago || ''' and ''' || $pay_end_dt || ''''
  let $process_status_criteria  = '''A''' 
  let $JOB_ACTION = 'LOA'
  let $JOB_ACTION_DT = $asoftoday
  let $JOB_ACTION_REASON = 'PER'
  let $JOB_EMPL_STATUS = 'L'
  let $JOB_HR_STATUS   = 'A'     ! Upgrade 9.0 code change
  let $JOB_TERM_DT = ''          ! Upgrade 9.0 code change
  let $x000_header_1 = 'Interns placed on Leave of Absence'
  let $x000_header_2 = 'After 3 weeks with no hours'
  do  Find-Bas-Action
  do  Select-employees
  NEW-PAGE
end-procedure

!***********************************************************************
begin-procedure return-from-leave
!***********************************************************************
#debug9 show 'return-from-leave'
  let $process_flag = '111'
  let $JOB_LAST_DATE_WORKED = ''
  let $JOB_ACTION = 'RFL'
  let $JOB_ACTION_DT = $asoftoday
  let $JOB_ACTION_REASON = 'RFL'
  let $JOB_EMPL_STATUS = 'A'
  let $JOB_HR_STATUS   = 'A'     ! Upgrade 9.0 code change
  let $JOB_TERM_DT = ''          ! Upgrade 9.0 code change
  let $x000_header_1 = 'Interns returned from Leave of Absence'
  let $x000_header_2 = 'Because they had hours in the last pay period'
  let $process_pay_end_criteria = ' = ''' || $pay_end_dt || ''''
  let $process_status_criteria  = '''L'''
  do  Find-Bas-Action
  do  Select-employees
  NEW-PAGE
end-procedure

!***********************************************************************
begin-procedure terminate-from-leave
!***********************************************************************
#debug9 show 'terminate-from-leave'
 show 'Entered into  terminate-from-leave'
  let $process_flag = '112'
  let $JOB_ACTION = 'TER'
  let $JOB_ACTION_DT = $asoftoday
  let $JOB_ACTION_REASON = 'LVE'
  let $JOB_EMPL_STATUS = 'T'
  let $JOB_HR_STATUS   = 'I'     ! Upgrade 9.0 code change
  let $JOB_TERM_DT = ''          ! Upgrade 9.0 code change
  let $x000_header_1 = 'Interns terminated after 6 months on Leave of Absence'
  let $x000_header_2 = ' '
  let $process_pay_end_criteria = ' between ''' || $pay_end_6_months_ago || ''' and ''' || $pay_end_dt || ''''
  let $process_status_criteria  = '''L''' 
  do  Find-Bas-Action
  do  Select-employees
  NEW-PAGE
end-procedure

!********************************************************************
begin-procedure Find-Bas-Action
!********************************************************************

BEGIN-SELECT
AC.BAS_ACTION
AC.BEN_STATUS

  let $bas_action = &AC.BAS_ACTION
  let $ben_status = &AC.BEN_STATUS   
  
! FROM PS_ACTN_REASON_TBL AC                  ! Upgrade 8.3 - 9.0 code commented
FROM PS_ACT_RSN_TBL_NA AC                     ! Upgrade 8.3 - 9.0 changes
WHERE AC.ACTION        = $job_action and
      AC.ACTION_REASON = $job_action_reason and 
      AC.EFFDT =
        (SELECT MAX(A_ED.EFFDT) 
         ! FROM PS_ACTN_REASON_TBL A_ED       ! Upgrade 8.3 - 9.0 code commented
         FROM PS_ACT_RSN_TBL_NA  A_ED         ! Upgrade 8.3 - 9.0 changes
        WHERE AC.ACTION = A_ED.ACTION
          AND AC.ACTION_REASON = A_ED.ACTION_REASON
          AND A_ED.EFFDT <= $pay_end_dt)

END-SELECT

END-PROCEDURE

!********************************************************************
begin-procedure Select-employees
!********************************************************************
#debug9 show 'Select-employees'

  let $110_Process_Flag = 'N'
  let $111_Process_Flag = 'N'
  let $112_Process_Flag = 'N'

begin-select ON-ERROR=SQL-Error-Found('select-employees')

J.EMPLID                         
J.EMPL_RCD                                   
J.COMPANY                        
J.PAYGROUP                       
 
  do Get-Hrs
  #debug8 show 'emplid/flag , ttl hrs ' ' ' &j.emplid ' ' $process_flag  ' '#total_hours
  
  let $x100_Get_Employees_Data_Flag = 'Y'

  add 1 to #InputTran

  Evaluate $process_flag 
     when  = '110'
        if #total_hours < 1   
           let $110_Process_Flag = 'Y'
           show '$process_flag = 110'
           do Get-Insert-Effdt          
           let $JOB_EFFDT 		= &pc.pay_begin_dt
           let $JOB_LAST_DATE_WORKED 	= &poe2.PAY_END_DT
         !AXL - 12/6/2000 Select job info prior to insert date
           do get-job-info
           do get-job-jr-info                                 !GBD 09/19/2002
           do get-compensation-info                           !GBD 09/19/2002
           
         !Increment effseq by one if job row already exists
           if &j2.effdt <> $job_effdt
              let #job_effseq = 0
           else
              let #job_effseq = &J2.effseq + 1
           end-if
    #debug8 show ' ' &j.emplid ' $total_hours: ' #total_hours ' ' 'effdt ' $JOB_EFFDT ' ' 'last day worked ' $JOB_LAST_DATE_WORKED 
           if isblank($JOB_EFFDT) = 0   !Missing effdt usually means new hire
              add 1 to #110_count
              do Print-Employee
              do insert-into-job
              do insert-into-job-jr                           !GBD 09/19/2002
              do insert-into-compensation                     !GBD 09/19/2002

              If #sql-status = 0 
                 let $bas_activity_exists = 'N'
                 do select-bas-activity-row
                 if $bas_activity_exists = 'N'
                    do insert-bas-activity-row
                 end-if
                 do updt-future-job-rows
              end-if
           end-if
        end-if
        break

     when  = '111'
        if #total_hours > 0   
           let $111_Process_Flag = 'Y'
           show '$process_flag = 111'
           let $JOB_EFFDT 		= $pay_begin_dt
         ! Only react if curr leave a result of LOA/PER action/action_rsn
         ! & prior JOB row is a non-leave status with effdt less than
         ! curr pay_end_dt
           let $check_dt = $pay_end_dt 		!AXL - 01/24/2001
           do check-last-lv-type
           if $leave_typ='LOAPER'
         !AXL - 12/6/2000 Select job info prior to insert date
              do get-job-info
              do get-job-jr-info                              !GBD 09/19/2002
              do get-compensation-info                        !GBD 09/19/2002
              
         !Increment effseq by one if job row already exists
              if &j2.effdt <> $job_effdt
                 let #job_effseq = 0
              else
                 let #job_effseq = &J2.effseq + 1
              end-if
         #debug8 show ' ' &j.emplid ' $total_hours: ' #total_hours ' ' 'effdt ' $JOB_EFFDT ' ' 'last day worked ' $JOB_LAST_DATE_WORKED
	      add 1 to #111_count
              do Print-Employee
              do insert-into-job
              do insert-into-job-jr                           !GBD 09/19/2002
              do insert-into-compensation                     !GBD 09/19/2002

              If #sql-status = 0 
                 let $bas_activity_exists = 'N'
                 do select-bas-activity-row
                 if $bas_activity_exists = 'N'
                    do insert-bas-activity-row
                 end-if
                 do updt-future-job-rows
              end-if
           end-if
        end-if    
        break
    
     when  = '112'
        if #total_hours = 0   
           let $112_Process_Flag = 'Y'
           
           show '$process_flag = 112'
         ! Only react if curr leave a result of LOA/PER action/action_rsn
         ! & prior JOB row is a non-leave status with effdt less than
         ! 6 months ago
           let $check_dt = $pay_end_6_months_ago	!AXL - 01/24/2001
           do check-last-lv-type
           if $leave_typ='LOAPER'
         !Effdt of Term Insert is 180 days from LOA/PER row
         !5/29/2001 AXL New Term Date Logic - Begin
              let #diff_months =
                  datediff(strtodate($X000_Where_Select_AsOfDate,'DD-MON-YYYY'), &hist.effdt, 'DAY')
	      if #diff_months >= 180
         !5/29/2001 AXL New Term Date Logic - End
                 let $JOB_EFFDT 		= &Term_Effdt
                 let $JOB_LAST_DATE_WORKED	= &HIST.LAST_DATE_WORKED
                     
                 ! start : upgrade 9.0 changes    
                 let $Term_Effdt  = &Term_Effdt
		  
		 do Convert-To-DTU-Date($Term_Effdt, $dateout)
		 do dtu-subtract-days($dateout,1,$dateout_1) 
                 do Convert-from-dtu-date($dateout_1,$term_date)
                 let $JOB_TERM_DT = $term_date
                 ! end: upgrade 9.0 changes
                 
                 
             !AXL - 12/6/2000 Select job info prior to insert date
                 do get-job-info
                 do get-job-jr-info                              !GBD 09/19/2002
                 do get-compensation-info                        !GBD 09/19/2002
                ! the below code was commented for upgrade 9.0. The term date is now part of Job.
                ! do get-employment-info                          !ISDVSRC 03/02/2005   
                
             !Increment effseq by one if job row already exists
                 if &j2.effdt <> $job_effdt
                    let #job_effseq = 0
                 else
                    let #job_effseq = &J2.effseq + 1
                 end-if
   #debug8 show ' ' &j.emplid ' $total_hours: ' #total_hours ' ' 'effdt ' $JOB_EFFDT ' ' 'last day worked ' $JOB_LAST_DATE_WORKED
                 if isblank($JOB_EFFDT) = 0   !Missing effdt usually means new hire
                    add 1 to #112_count
                    do Print-Employee
                    
                    do insert-into-job
                    do insert-into-job-jr                           !GBD 09/19/2002
                    do insert-into-compensation                     !GBD 09/19/2002
                    ! the below code was commented for upgrade 9.0. The term date is now part of Job.
                    ! do insert-tdate-into-employment                 !ISDVSRC 03/02/2005
                    
                    If #sql-status = 0 
                     SHOW ''
                     
                       let $bas_activity_exists = 'N'
                       do select-bas-activity-row
                       if $bas_activity_exists = 'N'
                          do insert-bas-activity-row
                          do check-futr-rows
                          if $future_rows_exists ='Y'
                             do notify-ben-admin  
                          end-if
                       end-if
                       do updt-future-job-rows
                    end-if
                 end-if
              end-if
           end-if
        end-if
        SHOW ' '
        break
    
  end-evaluate

FROM   PS_JOB     J

WHERE  J.JOBCODE         = '30005'
AND    J.EMPL_STATUS     = [$process_status_criteria]

AND    J.EFFDT           =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID       = J.EMPLID
       AND    EMPL_RCD    = J.EMPL_RCD
       AND    EFFDT       <= $pay_end_dt)

AND    J.EFFSEQ          =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID       = J.EMPLID
       AND    EMPL_RCD    = J.EMPL_RCD
       AND    EFFDT        = J.EFFDT)

ORDER BY [$x000_order_by]

end-select

   Evaluate $process_flag 
     when  = '110'
       print 'Total Number of records processed'  (+2,10)
       print #110_count				(0,+5) Edit 9999
     break
    
     when  = '111'
       print 'Total Number of records processed'  (+2,10)
       print #111_count			     (0,+5) Edit 9999       
     break
    
     when  = '112'
       print 'Total Number of records processed'  (+2,10)
       print #112_count				(0,+5) Edit 9999
     break

   end-evaluate
   
   
   
  if $x100_Get_Employees_Data_Flag = 'N'
    print 'NO DATA SELECTED FOR THIS REPORT RUN'    (25,) CENTER
  end-if

end-procedure

!********************************************************************
begin-procedure Get-Hrs
!********************************************************************
#debug9 Show 'Get-Hrs'
  
  let #total_hours   = 0

begin-select ON-ERROR=SQL-Error-Found('Get-hrs')

poe.ERNCD          &erncd
SUM(poe.OTH_HRS)   &oth_hrs
SUM(poe.OTH_EARNS) &oth_earns
!********  SCM 1/9/2001  Added reg vacation codes '519', '522', '523' for Cleveland
  Evaluate &erncd
    When = 'REG'
    When = 'OTP' 
    When  ='173' !VENDAXG ADDED FOR ITG 51358
    When = '004'
    When = '008'                     !GEX-TLL 04/08/2008 HCM 9.0 Upgrade
    When = '167'
    When = '501'
    When = '513'
    When = '519'                     !SCM 1/9/01
    When = '522'                     !SCM 1/9/01
    When = '523'                     !SCM 1/9/01
      add &oth_hrs   to #total_hours
      Break
  End-Evaluate

  !AXL 2/7/2001  Added trng codes - Begin
  let $abrev_erncd = substr(&erncd,1,2)

  Evaluate $abrev_erncd
    When = '14'
    When = '15'
      add &oth_hrs   to #total_hours
      Break
  End-Evaluate
  !AXL 2/7/2001  Added trng codes - End

From   ps_pay_earnings           pe,
       ps_pay_oth_earns          poe
Where   poe.off_cycle ='N'        
 And    poe.company               = pe.company
 And    poe.paygroup              = pe.paygroup
 And    poe.pay_end_dt            = pe.pay_end_dt
 And    poe.off_cycle             = pe.off_cycle
 And    poe.page_num                 = pe.page_num
 And    poe.line_num                 = pe.line_num
 And    poe.addl_nbr                 = pe.addl_nbr
 And    pe.pay_end_dt             [$process_pay_end_criteria]
 And    pe.emplid                 = &j.emplid
 And    pe.empl_rcd              = &j.empl_rcd
! And    poe.COMPANY     	  = &j.company                 SCM 09/07/2001   REMOVED 
! AND    poe.PAYGROUP    	  = &j.paygroup                SCM 09/07/2001   REMOVED
Group By poe.erncd

end-select
end-procedure

!***********************************************************************
begin-procedure Get-Insert-Effdt
!***********************************************************************
#debug9 Show 'Get-Insert-Effdt'

Begin-SELECT ON-ERROR=SQL-Error-Found('Get-Insert-Effdt')

max(poe2.PAY_END_DT)  &poe2.pay_end_dt

	do get-first-pay-begin-dt

FROM PS_PAY_EARNINGS pe2, 
     PS_PAY_OTH_EARNS poe2
  WHERE  pe2.COMPANY 	= poe2.COMPANY
     AND pe2.PAYGROUP 	= poe2.PAYGROUP
     AND pe2.PAY_END_DT = poe2.PAY_END_DT
     AND pe2.OFF_CYCLE 	= poe2.OFF_CYCLE
     AND pe2.PAGE_NUM 	= poe2.PAGE_NUM
     AND pe2.LINE_NUM 	= poe2.LINE_NUM
     AND pe2.ADDL_NBR 	= poe2.ADDL_NBR
     AND pe2.EMPLID 	= &j.emplid
     AND pe2.COMPANY 	= &j.company	! AXL - 1/24/2001
     AND pe2.PAYGROUP   = &j.paygroup	! AXL - 1/24/2001
     AND poe2.pay_end_dt < $pay_end_3_weeks_ago
     AND poe2.oth_hrs > 0

end-select

end-procedure

!***********************************************************************
begin-procedure get-first-pay-begin-dt
!***********************************************************************

Begin-Select ON-ERROR=SQL-Error-Found('Get-first-pay-begin-dt')

pc.pay_begin_dt

From   ps_pay_calendar pc

Where  pc.company=	&j.company and
       pc.paygroup= 	&j.paygroup and 
       pc.pay_end_dt =
        (Select min(pay_end_dt) from  ps_pay_calendar
           Where  pay_end_dt > &poe2.PAY_END_DT and
                  pay_confirm_run = 'Y')

And   pc.pay_confirm_run = 'Y'

End-Select
End-Procedure

!********************************************************************
begin-procedure select-bas-activity-row
!********************************************************************

Begin-Select 
'BAC'
    let $bas_activity_exists = 'Y'

    display 'bas activity exists'
    display '$bas_action: ' noline
    display $bas_action
    display 'for bas effdt: ' noline
    display $JOB_EFFDT
    display 'and bas event effseq: ' noline
    display #job_effseq

FROM PS_BAS_ACTIVITY BAC1
WHERE BAC1.EMPLID 	= &j.emplid
 and bac1.empl_rcd 	= &j.empl_rcd
 and bac1.bas_action 	= $bas_action
 and bac1.event_dt 	= $JOB_EFFDT
 !AXL - 5/11/2001 Use correct effseq - Begin 
 !and bac1.event_effseq = 0
 and bac1.event_effseq 	= #job_effseq
 !AXL - 5/11/2001 Use correct effseq - End

end-select

end-procedure

!********************************************************************
begin-procedure Get-Job-Info
!********************************************************************
#debug9 show 'Get-Job-Info'
 
begin-select ON-ERROR=SQL-Error-Found('Get-Job-Info')
              
J2.EFFDT 
J2.EFFSEQ 
J2.PER_ORG 
J2.DEPTID 
J2.JOBCODE 
J2.POSITION_NBR 
J2.SUPERVISOR_ID 
J2.HR_STATUS 
J2.APPT_TYPE 
J2.MAIN_APPT_NUM_JPN 
J2.POSITION_OVERRIDE 
J2.POSN_CHANGE_RECORD 
J2.EMPL_STATUS 
J2.ACTION 
J2.ACTION_DT 
J2.ACTION_REASON 
J2.LOCATION 
J2.TAX_LOCATION_CD 
J2.JOB_ENTRY_DT 
J2.DEPT_ENTRY_DT 
J2.POSITION_ENTRY_DT 
J2.SHIFT 
J2.REG_TEMP 
J2.FULL_PART_TIME 
J2.COMPANY 
J2.PAYGROUP 
J2.BAS_GROUP_ID 
J2.ELIG_CONFIG1 
J2.ELIG_CONFIG2 
J2.ELIG_CONFIG3 
J2.ELIG_CONFIG4 
J2.ELIG_CONFIG5 
J2.ELIG_CONFIG6 
J2.ELIG_CONFIG7 
J2.ELIG_CONFIG8 
J2.ELIG_CONFIG9 
J2.BEN_STATUS 
J2.BAS_ACTION 
J2.COBRA_ACTION 
J2.EMPL_TYPE 
J2.HOLIDAY_SCHEDULE 
J2.STD_HOURS 
J2.STD_HRS_FREQUENCY 
J2.OFFICER_CD 
J2.EMPL_CLASS 
J2.SAL_ADMIN_PLAN 
J2.GRADE 
J2.GRADE_ENTRY_DT 
J2.STEP 
J2.STEP_ENTRY_DT 
J2.GL_PAY_TYPE 
J2.ACCT_CD 
J2.EARNS_DIST_TYPE 
J2.COMP_FREQUENCY 
J2.COMPRATE 
J2.CHANGE_AMT 
J2.CHANGE_PCT 
J2.ANNUAL_RT 
J2.MONTHLY_RT 
J2.DAILY_RT 
J2.HOURLY_RT 
J2.ANNL_BENEF_BASE_RT 
J2.SHIFT_RT 
J2.SHIFT_FACTOR 
J2.CURRENCY_CD 
J2.BUSINESS_UNIT 
J2.SETID_DEPT 
J2.SETID_JOBCODE 
J2.SETID_LOCATION 
J2.SETID_SALARY 
J2.REG_REGION 
J2.DIRECTLY_TIPPED 
J2.FLSA_STATUS 
J2.EEO_CLASS 
J2.FUNCTION_CD 
J2.TARIFF_GER 
J2.TARIFF_AREA_GER 
J2.PERFORM_GROUP_GER 
J2.LABOR_TYPE_GER 
J2.SPK_COMM_ID_GER 
J2.HOURLY_RT_FRA 
J2.ACCDNT_CD_FRA 
J2.VALUE_1_FRA 
J2.VALUE_2_FRA 
J2.VALUE_3_FRA 
J2.VALUE_4_FRA 
J2.VALUE_5_FRA 
J2.CTG_RATE 
J2.PAID_HOURS 
J2.PAID_FTE 
J2.PAID_HRS_FREQUENCY 
J2.UNION_FULL_PART 
J2.UNION_POS 
J2.MATRICULA_NBR 
J2.SOC_SEC_RISK_CODE 
J2.UNION_FEE_AMOUNT 
J2.UNION_FEE_START_DT 
J2.UNION_FEE_END_DT 
J2.EXEMPT_JOB_LBR 
J2.EXEMPT_HOURS_MONTH 
J2.WRKS_CNCL_FUNCTION 
J2.INTERCTR_WRKS_CNCL 
J2.CURRENCY_CD1 
J2.PAY_UNION_FEE 
J2.UNION_CD 
J2.BARG_UNIT 
J2.UNION_SENIORITY_DT 
J2.ENTRY_DATE 
J2.LABOR_AGREEMENT 
J2.EMPL_CTG 
J2.EMPL_CTG_L1 
J2.EMPL_CTG_L2 
J2.SETID_LBR_AGRMNT 
J2.WPP_STOP_FLAG 
J2.LABOR_FACILITY_ID 
J2.LBR_FAC_ENTRY_DT 
J2.LAYOFF_EXEMPT_FLAG 
J2.LAYOFF_EXEMPT_RSN 
J2.GP_PAYGROUP 
J2.GP_DFLT_ELIG_GRP 
J2.GP_ELIG_GRP 
J2.GP_DFLT_CURRTTYP 
J2.CUR_RT_TYPE 
J2.GP_DFLT_EXRTDT 
J2.GP_ASOF_DT_EXG_RT 
J2.ADDS_TO_FTE_ACTUAL 
J2.CLASS_INDC 
J2.ENCUMB_OVERRIDE 
J2.FICA_STATUS_EE 
J2.FTE 
J2.PRORATE_CNT_AMT 
J2.PAY_SYSTEM_FLG 
J2.BORDER_WALKER 
J2.LUMP_SUM_PAY 
J2.CONTRACT_NUM 
J2.JOB_INDICATOR 
J2.WRKS_CNCL_ROLE_CHE 
J2.BENEFIT_SYSTEM 
J2.WORK_DAY_HOURS 
J2.REPORTS_TO 
J2.FORCE_PUBLISH 
J2.JOB_DATA_SRC_CD 
J2.ESTABID 
J2.SUPV_LVL_ID 
J2.SETID_SUPV_LVL 
J2.ABSENCE_SYSTEM_CD 
J2.POI_TYPE 
J2.HIRE_DT 
J2.LAST_HIRE_DT 
J2.TERMINATION_DT 
J2.ASGN_START_DT 
J2.LST_ASGN_START_DT 
J2.ASGN_END_DT 
J2.LDW_OVR 
J2.LAST_DATE_WORKED 
J2.EXPECTED_RETURN_DT 
J2.EXPECTED_END_DATE 
J2.AUTO_END_FLG 
J2.LASTUPDDTTM 
J2.LASTUPDOPRID 
J2.GEX_LIGHT_DUTY 
J2.GEX_CHANGE_RECORD 
J2.GEX_VOLUN_LOW_HRS 
J2.GEX_STUDENT_IND 
J2.GEX_MOON_IND 
J2.GEX_DEPTID_OVR 
J2.GEX_ACCT_CD_OVR 
J2.GEX_GL_EXP_OVR 
J2.GEX_STEWARD 
J2.GEX_DUES_EXEMPT 
J2.GEX_FINAN_CORE 
J2.GEX_INFLATED_HRS 
J2.GEX_FP_CODE 
J2.GEX_SEASONAL_EMP
D.NAME
E.BENEFIT_RCD_NBR
 
 
FROM   PS_JOB     J2, 
       PS_EMPLOYMENT E, 
       PS_PERSONAL_DATA D

WHERE  J2.emplid	 = &j.emplid
AND    J2.empl_rcd      = &j.empl_rcd

AND    J2.COMPANY 	 = &j.company	! AXL - 1/24/2001
AND    J2.PAYGROUP       = &j.paygroup	! AXL - 1/24/2001

AND    J2.emplid	 = E.emplid
AND    J2.empl_rcd      = E.empl_rcd
And    E.emplid          = D.emplid

AND    J2.EFFDT           =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID       = J2.EMPLID
       AND    EMPL_RCD    = J2.EMPL_RCD
       AND    EFFDT       <= $job_effdt)

AND    J2.EFFSEQ          =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID       = J2.EMPLID
       AND    EMPL_RCD    = J2.EMPL_RCD
       AND    EFFDT        = J2.EFFDT)

end-select

end-procedure

!GBD 09/19/2002 Begin
!********************************************************************
begin-procedure Get-Job-Jr-Info
!********************************************************************
#debug9 show 'Get-Job-Jr-Info'
 
begin-select ON-ERROR=SQL-Error-Found('Get-Job-Jr-Info')
JJ.EMPLID 
JJ.EMPL_RCD 
JJ.EFFDT 
JJ.EFFSEQ 
JJ.LASTUPDDTTM 
JJ.LASTUPDOPRID 
JJ.TAXCODE_UK 
JJ.TAX_BASIS_UK 
JJ.WORKER_TYPE_MEX 
JJ.REDUCED_WEEK_MEX 
JJ.LOCATED_CD_MEX 
JJ.SALARY_TYPE_MEX 
JJ.IMS_TERM_DT_MEX 
JJ.BALANCE_GRP_NUM 
JJ.FP_ACTION_2 
JJ.CTG_RATE 
JJ.FP_LEGALSTAT_CD 
JJ.FP_SCNDMT_CD 
JJ.FP_SCND_TYP 
JJ.FP_CIVIL_PENSION 
JJ.FP_SOURCE_ORG 
JJ.FP_RECEP_ORG 
JJ.FP_RETURN_CD 
JJ.FP_PR_LEGSTA 
JJ.FP_FOREND_DT 
JJ.FP_END_DT 
JJ.FP_CAREFRZPCT 
JJ.FP_HIR_DOS_SIT 
JJ.FP_PT_PCT_DET 
JJ.FP_TITLE_NUM 
JJ.FP_DURATION_PCT 
JJ.FP_RATING_PRS_FLG 
JJ.FP_BUDGET_NBR 
JJ.FP_HDCNT_NBR 
JJ.FP_POTENT_NBR 
JJ.FP_RANK_CD 
JJ.FP_STEP_CD 
JJ.FP_RK_ENT_DT 
JJ.FP_CORPS_CD 
JJ.FP_CHG_COR_DT 
JJ.FP_CATG_FP 
JJ.FP_CATG_LEVEL 
JJ.FP_RK_TRIALPD 
JJ.FP_STEP_END_DT 
JJ.FP_FOR_PROM_DT 
JJ.FP_NOMINATION_DT 
JJ.FP_TRAINEE 
JJ.FP_TRNE_POSN 
JJ.FP_RK_PD_END_DT 
JJ.FP_SANCTION 
JJ.FP_DOWN_GRA 
JJ.FP_APPL_SAL_DT 
JJ.FP_CHG_IND 
JJ.FP_CLD_INST 
JJ.FP_SETID_RANK 
JJ.FP_INSTALL_DT 
JJ.FP_EQUIV_STEP 
JJ.FP_STEP_CD2 
JJ.FP_BUSINESS_CD 
JJ.FP_APPL_DT 
JJ.FP_CHG_SAL 
JJ.FP_POINTYP_CD 
JJ.FP_GROSS_IND 
JJ.FP_INCS_IND 
JJ.FP_INCS_IND2 
JJ.FP_PT_PCT 
JJ.FP_PT_END_DT 
JJ.FP_PT_FOREND_DT 
JJ.FP_COMPRATE 
JJ.FP_INST_STAT 
JJ.FP_RETROSPECT 
JJ.FP_ROW_END_DT 
JJ.LAST_UPDATE_DATE 
JJ.OTHER_ID_JPN 
JJ.INTCP_XFR_FLG 
JJ.INTCP_XFR_START_DT 
JJ.INTCP_XFR_END_DT 
JJ.INTCP_BUS_UNIT 
JJ.INTCP_DEPTID 
JJ.INTCP_DEPTID2 
JJ.INTCP_SETID_DEPT 
JJ.INTCP_COMPANY 
JJ.INTCP_COMPANY2 
JJ.INTCP_SUPV_LVL_ID 
JJ.INTCP_SUPV_LVL_ID2 
JJ.START_DATE_JPN 
JJ.EXP_END_DATE_JPN 
JJ.END_DATE_JPN 
JJ.DUTIES_TYPE 
JJ.ASSIGNMENT_ID 
JJ.TARGET_COMPRATE 
JJ.CMP_DONT_ABSORB 
JJ.SSN_EMPLOYER 
JJ.UNITA_PROD_CD 
JJ.ACTION_ITA 
JJ.ACTION_REASON_ITA 
JJ.SPECIAL_HIRCTG_ITA 
JJ.PART_TIME_TYPE_ITA 
JJ.PART_TIME_PERC_ITA 
JJ.PARTTIME_ENDDT_ITA 
JJ.WORKDAYS_NLD 
JJ.CONT_SAL_TYPE_BRA 
JJ.CBO_CD_BRA 
JJ.SEFIP_CATEGORY_BRA 
JJ.UNION_CD_ALT_BRA

from ps_job_jr JJ
where JJ.emplid = &J.EMPLID
and   JJ.empl_rcd = &J.EMPL_RCD
and   JJ.effdt = &J2.EFFDT
and   JJ.effseq = &J2.EFFSEQ
end-select

end-procedure

!********************************************************************
begin-procedure Get-Compensation-Info
!********************************************************************
#debug9 show 'Get-Compensation-Info'
 

begin-select ON-ERROR=SQL-Error-Found('Get-Compensation-Info')
C.EMPLID                 
C.EMPL_RCD               
C.EFFDT                  
C.EFFSEQ                 
C.COMP_EFFSEQ            
C.COMP_RATECD            
C.COMP_RATE_POINTS
C.COMPRATE               
C.COMP_PCT               
C.COMP_FREQUENCY         
C.CURRENCY_CD            
C.MANUAL_SW              
C.CONVERT_COMPRT         
C.RATE_CODE_GROUP        
C.CHANGE_AMT             
C.CHANGE_PCT             
C.CHANGE_PTS             
C.FTE_INDICATOR          
C.CMP_SRC_IND            

 SHOW 'C.EMPLID           :'   &C.EMPLID             
 SHOW 'C.EMPL_RCD         :'   &C.EMPL_RCD           
 SHOW 'C.EFFDT            :'   &C.EFFDT              
 SHOW 'C.EFFSEQ           :'   &C.EFFSEQ             
 SHOW 'C.COMP_EFFSEQ      :'   &C.COMP_EFFSEQ        
 SHOW 'C.COMP_RATECD      :'   &C.COMP_RATECD        
 SHOW 'C.COMP_RATE_POINTS :'   &C.COMP_RATE_POINTS   
 SHOW 'C.COMPRATE         :'   &C.COMPRATE           
 SHOW 'C.COMP_PCT         :'   &C.COMP_PCT           
 SHOW 'C.COMP_FREQUENCY   :'   &C.COMP_FREQUENCY     
 SHOW 'C.CURRENCY_CD      :'   &C.CURRENCY_CD        
 SHOW 'C.MANUAL_SW        :'   &C.MANUAL_SW          
 SHOW 'C.CONVERT_COMPRT   :'   &C.CONVERT_COMPRT     
 SHOW 'C.RATE_CODE_GROUP  :'   &C.RATE_CODE_GROUP    
 SHOW 'C.CHANGE_AMT       :'   &C.CHANGE_AMT         
 SHOW 'C.CHANGE_PCT       :'   &C.CHANGE_PCT         
 SHOW 'C.CHANGE_PTS       :'   &C.CHANGE_PTS         
 SHOW 'C.FTE_INDICATOR    :'   &C.FTE_INDICATOR      
 SHOW 'C.CMP_SRC_IND      :'   &C.CMP_SRC_IND      
                          
from ps_compensation C
where C.emplid   = &J.EMPLID
and   C.empl_rcd = &J.EMPL_RCD
and   C.effdt    = &J2.EFFDT
and   C.effseq   = &J2.EFFSEQ
end-select

end-procedure
!GBD 09/19/2002 End

!********************************************************************
!ISDVSRC 03/02/2005 begin
begin-procedure get-employment-info
!********************************************************************
 
begin-select ON-ERROR=SQL-Error-Found('get-employment-info')
EE.EMPLID             
EE.EMPL_RCD           
EE.BENEFIT_RCD_NBR    
! EE.HOME_HOST_CLASS    
! EE.HIRE_DT            
! EE.REHIRE_DT          
! EE.CMPNY_SENIORITY_DT 
! EE.SERVICE_DT         
! EE.PROF_EXPERIENCE_DT 
! EE.LAST_VERIFICATN_DT 
! EE.EXPECTED_RETURN_DT 
! EE.TERMINATION_DT     
! EE.LAST_DATE_WORKED   
! EE.LAST_INCREASE_DT   
! EE.OWN_5PERCENT_CO    
! EE.BUSINESS_TITLE     
! EE.REPORTS_TO         
! EE.SUPERVISOR_ID      
! EE.PROBATION_DT       
! EE.SECURITY_CLEARANCE 
! EE.COUNTRY_CODE       
! EE.PHONE              
! EE.TIME_RPT_LOC       
! EE.JOB_REPORTING      
! EE.DED_TAKEN          
! EE.DED_SUBSET_ID      
! EE.GVT_SCD_RETIRE     
! EE.GVT_SCD_TSP        
! EE.GVT_SCD_LEO        
! EE.GVT_SCD_SEVPAY     
! EE.GVT_SEVPAY_PRV_WKS 
! EE.GVT_MAND_RET_DT    
! EE.GVT_WGI_STATUS     
! EE.GVT_INTRM_DAYS_WGI 
! EE.GVT_NONPAY_NOA     
! EE.GVT_NONPAY_HRS_WGI 
! EE.GVT_NONPAY_HRS_SCD 
! EE.GVT_NONPAY_HRS_TNR 
! EE.GVT_NONPAY_HRS_PRB 
! EE.GVT_TEMP_PRO_EXPIR 
! EE.GVT_TEMP_PSN_EXPIR 
! EE.GVT_DETAIL_EXPIRES 
! EE.GVT_SABBATIC_EXPIR 
! EE.GVT_RTND_GRADE_BEG 
! EE.GVT_RTND_GRADE_EXP 
! EE.GVT_NOA_CODE       
! EE.GVT_CURR_APT_AUTH1 
! EE.GVT_CURR_APT_AUTH2 
! EE.GVT_APPT_EXPIR_DT  
! EE.GVT_CNV_BEGIN_DATE 
! EE.GVT_CAREER_CNV_DUE 
! EE.GVT_CAREER_COND_DT 
! EE.GVT_APPT_LIMIT_HRS 
! EE.GVT_APPT_LIMIT_DYS 
! EE.GVT_APPT_LIMIT_AMT 
! EE.GVT_SUPV_PROB_DT   
! EE.GVT_SES_PROB_DT    
! EE.GVT_SEC_CLR_STATUS 
! EE.GVT_CLRNCE_STAT_DT 
! EE.GVT_ERN_PGM_PERM   
! EE.GVT_OCC_SERS_PERM  
! EE.GVT_GRADE_PERM     
! EE.GVT_COMP_AREA_PERM 
! EE.GVT_COMP_LVL_PERM  
! EE.GVT_CHANGE_FLAG    
! EE.GVT_SPEP           
! EE.GVT_WGI_DUE_DATE   
! EE.GVT_DT_LEI         
! EE.GVT_FIN_DISCLOSURE 
! EE.GVT_FIN_DISCL_DATE 
! EE.GVT_TENURE         
! EE.GVT_DETL_BARG_UNIT 
! EE.GVT_DETL_UNION_CD  
! EE.NEXT_REVIEW_DT     
! EE.GVT_WELFARE_WK_CD  
! EE.TENURE_ACCR_FLG    
! EE.FTE_TENURE         
! EE.EG_GROUP           
! EE.FTE_FLX_SRVC       
! EE.CONTRACT_LENGTH    
! EE.APPOINT_END_DT     
! EE.NEE_PROVIDER_ID    
! EE.FA_PAY_PROGRAM     
! EE.FA_TYPE            
! EE.FA_ELIG_DT         
! EE.EDUC_LVL_AD_BTD    
! EE.OFFICIAL_LANG      
! EE.RELAT_TO_OWNER_NLD 
! EE.COUNTRY            
! EE.ADDRESS1           
! EE.ADDRESS2           
! EE.ADDRESS3           
! EE.ADDRESS4           
! EE.CITY               
! EE.NUM1               
! EE.NUM2               
! EE.HOUSE_TYPE         
! EE.ADDR_FIELD1        
! EE.ADDR_FIELD2        
! EE.ADDR_FIELD3        
! EE.COUNTY             
! EE.STATE              
! EE.POSTAL             
! EE.GEO_CODE           
! EE.IN_CITY_LIMIT      
! EE.GEX_VCN_SENIOR_DT  
! EE.GEX_PROF_EXP_HRS   
! EE.GEX_PROF_EXP_MTHS  

! SHOW ''
! show 'EE.EMPLID        :' &EE.EMPLID         
! show 'j.emplid         :' &j.emplid   
! show 'EE.EMPL_RCD      :' &EE.EMPL_RCD   
! show 'EE.HIRE_DT       :' &EE.HIRE_DT            
! show 'EE.REHIRE_DT     :' &EE.REHIRE_DT        
! show 'EE.TERMINATION_DT:' &EE.TERMINATION_DT   

          
 add 1 to #get-employment-info
 
FROM PS_EMPLOYMENT EE WHERE EE.EMPLID = &j.emplid
end-select
end-procedure
!ISDVSRC 03/02/2005 end
!********************************************************************

!********************************************************************
begin-procedure Check-Last-Lv-Type
!********************************************************************   
#debug9 show 'Check-Last-Lv-Type'
 
 SHOW 'Check-Last-Lv-Type'
 
  let $leave_typ =  ' '

begin-select ON-ERROR=SQL-Error-Found('Check-Last-Lv-Type')
HIST.EFFDT
HIST.EFFDT+180		&Term_Effdt
HIST.LAST_DATE_WORKED
HIST.ACTION
HIST.ACTION_REASON

  let $leave_typ =  &HIST.ACTION || &HIST.ACTION_REASON
  #debug8 show ' ' &j.emplid ' $leave_typ: ' $leave_typ
  SHOW '*******************************************'
  show ' ' &j.emplid ' $leave_typ: ' $leave_typ
  SHOW '*******************************************'
  Add 1 to #EFFDT-180

FROM PS_JOB HIST
  WHERE HIST.EFFDT =
        (SELECT MIN(EFFDT) FROM PS_JOB
        WHERE HIST.EMPLID = EMPLID
          AND HIST.EMPL_RCD = EMPL_RCD
          AND EMPL_STATUS ='L'
          AND EFFDT >=				!AXL 05/18/2004 Add '=' to '>'
                         (Select Max(effdt)
                          From   ps_job
                          Where  emplid     = HIST.emplid
                          And    empl_rcd  = HIST.empl_rcd
                          And    effdt     <= $check_dt		!AXL - 01/24/2001
                          AND    empl_status <> 'L') )
    AND HIST.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE HIST.EMPLID = EMPLID
          AND HIST.EMPL_RCD = EMPL_RCD
          AND HIST.EFFDT = EFFDT) 

    AND HIST.emplid	 = &j.emplid
    AND HIST.empl_rcd   = &j.empl_rcd

end-select

end-procedure

!********************************************************************
begin-procedure Insert-Into-Job
!******************************************************************** 
#debug9 show 'Insert-Into-Job'  
 show ' '
 

 !Show 'Entered into Insert-Into-Job'
 !show 'emplid     :' &j.emplid   
 !show 'EMPL_RCD   :' &j.EMPL_RCD           
 !show 'J2.STATUS  :' &J2.EMPL_STATUS
 !show '#job_effseq:' #job_effseq
! 
 !SHOW '$JOB_EFFDT :' $JOB_EFFDT
 !SHOW '&Term_Effdt:' &Term_Effdt
 
! show ' '
! show ' '
! 

   
   
begin-SQL ON-ERROR=SQL-Error-Found('Insert-Into-Job')
 
Insert into ps_job
       (EMPLID,
    EMPL_RCD,
    EFFDT,
    EFFSEQ,
    PER_ORG,
    DEPTID,
    JOBCODE,
    POSITION_NBR,
    SUPERVISOR_ID,
    HR_STATUS,
    APPT_TYPE,
    MAIN_APPT_NUM_JPN,
    POSITION_OVERRIDE,
    POSN_CHANGE_RECORD,
    EMPL_STATUS,
    ACTION,
    ACTION_DT,
    ACTION_REASON,
    LOCATION,
    TAX_LOCATION_CD,
    JOB_ENTRY_DT,
    DEPT_ENTRY_DT,
    POSITION_ENTRY_DT,
    SHIFT,
    REG_TEMP,
    FULL_PART_TIME,
    COMPANY,
    PAYGROUP,
    BAS_GROUP_ID,
    ELIG_CONFIG1,
    ELIG_CONFIG2,
    ELIG_CONFIG3,
    ELIG_CONFIG4,
    ELIG_CONFIG5,
    ELIG_CONFIG6,
    ELIG_CONFIG7,
    ELIG_CONFIG8,
    ELIG_CONFIG9,
    BEN_STATUS,
    BAS_ACTION,
    COBRA_ACTION,
    EMPL_TYPE,
    HOLIDAY_SCHEDULE,
    STD_HOURS,
    STD_HRS_FREQUENCY,
    OFFICER_CD,
    EMPL_CLASS,
    SAL_ADMIN_PLAN,
    GRADE,
    GRADE_ENTRY_DT,
    STEP,
    STEP_ENTRY_DT,
    GL_PAY_TYPE,
    ACCT_CD,
    EARNS_DIST_TYPE,
    COMP_FREQUENCY,
    COMPRATE,
    CHANGE_AMT,
    CHANGE_PCT,
    ANNUAL_RT,
    MONTHLY_RT,
    DAILY_RT,
    HOURLY_RT,
    ANNL_BENEF_BASE_RT,
    SHIFT_RT,
    SHIFT_FACTOR,
    CURRENCY_CD,
    BUSINESS_UNIT,
    SETID_DEPT,
    SETID_JOBCODE,
    SETID_LOCATION,
    SETID_SALARY,
    REG_REGION,
    DIRECTLY_TIPPED,
    FLSA_STATUS,
    EEO_CLASS,
    FUNCTION_CD,
    TARIFF_GER,
    TARIFF_AREA_GER,
    PERFORM_GROUP_GER,
    LABOR_TYPE_GER,
    SPK_COMM_ID_GER,
    HOURLY_RT_FRA,
    ACCDNT_CD_FRA,
    VALUE_1_FRA,
    VALUE_2_FRA,
    VALUE_3_FRA,
    VALUE_4_FRA,
    VALUE_5_FRA,
    CTG_RATE,
    PAID_HOURS,
    PAID_FTE,
    PAID_HRS_FREQUENCY,
    UNION_FULL_PART,
    UNION_POS,
    MATRICULA_NBR,
    SOC_SEC_RISK_CODE,
    UNION_FEE_AMOUNT,
    UNION_FEE_START_DT,
    UNION_FEE_END_DT,
    EXEMPT_JOB_LBR,
    EXEMPT_HOURS_MONTH,
    WRKS_CNCL_FUNCTION,
    INTERCTR_WRKS_CNCL,
    CURRENCY_CD1,
    PAY_UNION_FEE,
    UNION_CD,
    BARG_UNIT,
    UNION_SENIORITY_DT,
    ENTRY_DATE,
    LABOR_AGREEMENT,
    EMPL_CTG,
    EMPL_CTG_L1,
    EMPL_CTG_L2,
    SETID_LBR_AGRMNT,
    WPP_STOP_FLAG,
    LABOR_FACILITY_ID,
    LBR_FAC_ENTRY_DT,
    LAYOFF_EXEMPT_FLAG,
    LAYOFF_EXEMPT_RSN,
    GP_PAYGROUP,
    GP_DFLT_ELIG_GRP,
    GP_ELIG_GRP,
    GP_DFLT_CURRTTYP,
    CUR_RT_TYPE,
    GP_DFLT_EXRTDT,
    GP_ASOF_DT_EXG_RT,
    ADDS_TO_FTE_ACTUAL,
    CLASS_INDC,
    ENCUMB_OVERRIDE,
    FICA_STATUS_EE,
    FTE,
    PRORATE_CNT_AMT,
    PAY_SYSTEM_FLG,
    BORDER_WALKER,
    LUMP_SUM_PAY,
    CONTRACT_NUM,
    JOB_INDICATOR,
    WRKS_CNCL_ROLE_CHE,
    BENEFIT_SYSTEM,
    WORK_DAY_HOURS,
    REPORTS_TO,
    FORCE_PUBLISH,
    JOB_DATA_SRC_CD,
    ESTABID,
    SUPV_LVL_ID,
    SETID_SUPV_LVL,
    ABSENCE_SYSTEM_CD,
    POI_TYPE,
    HIRE_DT,
    LAST_HIRE_DT,
    TERMINATION_DT,
    ASGN_START_DT,
    LST_ASGN_START_DT,
    ASGN_END_DT,
    LDW_OVR,
    LAST_DATE_WORKED,
    EXPECTED_RETURN_DT,
    EXPECTED_END_DATE,
    AUTO_END_FLG,
    LASTUPDDTTM,
    LASTUPDOPRID,
    GEX_LIGHT_DUTY,
    GEX_CHANGE_RECORD,
    GEX_VOLUN_LOW_HRS,
    GEX_STUDENT_IND,
    GEX_MOON_IND,
    GEX_DEPTID_OVR,
    GEX_ACCT_CD_OVR,
    GEX_GL_EXP_OVR,
    GEX_STEWARD,
    GEX_DUES_EXEMPT,
    GEX_FINAN_CORE,
    GEX_INFLATED_HRS,
    GEX_FP_CODE,
    GEX_SEASONAL_EMP)
VALUES
        (&J.EMPLID,     ! 8.3 Customization retained
&J.EMPL_RCD,            ! 8.3 Customization retained
$JOB_EFFDT,             ! 8.3 Customization retained
#job_effseq,            ! 8.3 Customization retained
&J2.PER_ORG,
&J2.DEPTID,
&J2.JOBCODE,
&J2.POSITION_NBR,
&J2.SUPERVISOR_ID,
$JOB_HR_STATUS,    ! Upgrade 9.0 changes
&J2.APPT_TYPE,
&J2.MAIN_APPT_NUM_JPN,
&J2.POSITION_OVERRIDE,
'N',                    ! 8.3 Customization retained
$JOB_EMPL_STATUS,       ! 8.3 Customization retained
$JOB_ACTION,            ! 8.3 Customization retained
$JOB_ACTION_DT,         ! 8.3 Customization retained
$JOB_ACTION_REASON,     ! 8.3 Customization retained
&J2.LOCATION,
&J2.TAX_LOCATION_CD,
&J2.JOB_ENTRY_DT,
&J2.DEPT_ENTRY_DT,
&J2.POSITION_ENTRY_DT,
&J2.SHIFT,
&J2.REG_TEMP,
&J2.FULL_PART_TIME,
&J2.COMPANY,
&J2.PAYGROUP,
&J2.BAS_GROUP_ID,
&J2.ELIG_CONFIG1,
&J2.ELIG_CONFIG2,
&J2.ELIG_CONFIG3,
&J2.ELIG_CONFIG4,
&J2.ELIG_CONFIG5,
&J2.ELIG_CONFIG6,
&J2.ELIG_CONFIG7,
&J2.ELIG_CONFIG8,
&J2.ELIG_CONFIG9,
$ben_status,      ! 8.3 Customization retained
$bas_action,      ! 8.3 Customization retained
&J2.COBRA_ACTION,
&J2.EMPL_TYPE,
&J2.HOLIDAY_SCHEDULE,
&J2.STD_HOURS,
&J2.STD_HRS_FREQUENCY,
&J2.OFFICER_CD,
&J2.EMPL_CLASS,
&J2.SAL_ADMIN_PLAN,
&J2.GRADE,
&J2.GRADE_ENTRY_DT,
&J2.STEP,
&J2.STEP_ENTRY_DT,
&J2.GL_PAY_TYPE,
&J2.ACCT_CD,
&J2.EARNS_DIST_TYPE,
&J2.COMP_FREQUENCY,
&J2.COMPRATE,
&J2.CHANGE_AMT,
&J2.CHANGE_PCT,
&J2.ANNUAL_RT,
&J2.MONTHLY_RT,
&J2.DAILY_RT,
&J2.HOURLY_RT,
&J2.ANNL_BENEF_BASE_RT,
&J2.SHIFT_RT,
&J2.SHIFT_FACTOR,
&J2.CURRENCY_CD,
&J2.BUSINESS_UNIT,
&J2.SETID_DEPT,
&J2.SETID_JOBCODE,
&J2.SETID_LOCATION,
&J2.SETID_SALARY,
&J2.REG_REGION,
&J2.DIRECTLY_TIPPED,
&J2.FLSA_STATUS,
&J2.EEO_CLASS,
&J2.FUNCTION_CD,
&J2.TARIFF_GER,
&J2.TARIFF_AREA_GER,
&J2.PERFORM_GROUP_GER,
&J2.LABOR_TYPE_GER,
&J2.SPK_COMM_ID_GER,
&J2.HOURLY_RT_FRA,
&J2.ACCDNT_CD_FRA,
&J2.VALUE_1_FRA,
&J2.VALUE_2_FRA,
&J2.VALUE_3_FRA,
&J2.VALUE_4_FRA,
&J2.VALUE_5_FRA,
&J2.CTG_RATE,
&J2.PAID_HOURS,
&J2.PAID_FTE,
&J2.PAID_HRS_FREQUENCY,
&J2.UNION_FULL_PART,
&J2.UNION_POS,
&J2.MATRICULA_NBR,
&J2.SOC_SEC_RISK_CODE,
&J2.UNION_FEE_AMOUNT,
&J2.UNION_FEE_START_DT,
&J2.UNION_FEE_END_DT,
&J2.EXEMPT_JOB_LBR,
&J2.EXEMPT_HOURS_MONTH,
&J2.WRKS_CNCL_FUNCTION,
&J2.INTERCTR_WRKS_CNCL,
&J2.CURRENCY_CD1,
&J2.PAY_UNION_FEE,
&J2.UNION_CD,
&J2.BARG_UNIT,
&J2.UNION_SENIORITY_DT,
&J2.ENTRY_DATE,
&J2.LABOR_AGREEMENT,
&J2.EMPL_CTG,
&J2.EMPL_CTG_L1,
&J2.EMPL_CTG_L2,
&J2.SETID_LBR_AGRMNT,
&J2.WPP_STOP_FLAG,
&J2.LABOR_FACILITY_ID,
&J2.LBR_FAC_ENTRY_DT,
&J2.LAYOFF_EXEMPT_FLAG,
&J2.LAYOFF_EXEMPT_RSN,
&J2.GP_PAYGROUP,
&J2.GP_DFLT_ELIG_GRP,
&J2.GP_ELIG_GRP,
&J2.GP_DFLT_CURRTTYP,
&J2.CUR_RT_TYPE,
&J2.GP_DFLT_EXRTDT,
&J2.GP_ASOF_DT_EXG_RT,
&J2.ADDS_TO_FTE_ACTUAL,
&J2.CLASS_INDC,
&J2.ENCUMB_OVERRIDE,
&J2.FICA_STATUS_EE,
&J2.FTE,
&J2.PRORATE_CNT_AMT,
&J2.PAY_SYSTEM_FLG,
&J2.BORDER_WALKER,
&J2.LUMP_SUM_PAY,
&J2.CONTRACT_NUM,
&J2.JOB_INDICATOR,
&J2.WRKS_CNCL_ROLE_CHE,
&J2.BENEFIT_SYSTEM,
&J2.WORK_DAY_HOURS,
&J2.REPORTS_TO,
&J2.FORCE_PUBLISH,
&J2.JOB_DATA_SRC_CD,
&J2.ESTABID,
&J2.SUPV_LVL_ID,
&J2.SETID_SUPV_LVL,
&J2.ABSENCE_SYSTEM_CD,
&J2.POI_TYPE,
&J2.HIRE_DT,
&J2.LAST_HIRE_DT,
$JOB_TERM_DT,    !  Upgrade 9.0 changes
&J2.ASGN_START_DT,
&J2.LST_ASGN_START_DT,
&J2.ASGN_END_DT,
&J2.LDW_OVR,
$JOB_LAST_DATE_WORKED,    ! 8.3 Customization retained
&J2.EXPECTED_RETURN_DT,
&J2.EXPECTED_END_DATE,
&J2.AUTO_END_FLG,
&J2.LASTUPDDTTM,
&J2.LASTUPDOPRID,
&J2.GEX_LIGHT_DUTY,
'Y',         ! 8.3 Customization retained
&J2.GEX_VOLUN_LOW_HRS,
&J2.GEX_STUDENT_IND,
&J2.GEX_MOON_IND,
&J2.GEX_DEPTID_OVR,
&J2.GEX_ACCT_CD_OVR,
&J2.GEX_GL_EXP_OVR,
&J2.GEX_STEWARD,
&J2.GEX_DUES_EXEMPT,
&J2.GEX_FINAN_CORE,
&J2.GEX_INFLATED_HRS,
&J2.GEX_FP_CODE,
&J2.GEX_SEASONAL_EMP
)

end-sql
  
    If #sql-status = 0
      let #job_inserts = #job_inserts + #sql-count
    else
      Show 'Insert failed - ' $EMPLID
      let #invalid_insert = #invalid_insert + 1
    End-if

    
end-procedure

!GBD 09/19/2002 Begin
!********************************************************************
begin-procedure Insert-Into-Job-Jr
!******************************************************************** 
 show ' '
! Show 'Entered into Insert-Into-Job-Jr'
! show 'emplid   :' &JJ.emplid   
! show 'EMPL_RCD :' &JJ.EMPL_RCD           
! show 'J2.EFFDT :' &J2.EFFDT 

#debug9 show 'Insert-Into-Job-Jr'

begin-SQL ON-ERROR=SQL-Error-Found('Insert-Into-Job-Jr')
 
Insert into ps_job_jr
(
       EMPLID,
    EMPL_RCD,
    EFFDT,
    EFFSEQ,
    LASTUPDDTTM,
    LASTUPDOPRID,
    TAXCODE_UK,
    TAX_BASIS_UK,
    WORKER_TYPE_MEX,
    REDUCED_WEEK_MEX,
    LOCATED_CD_MEX,
    SALARY_TYPE_MEX,
    IMS_TERM_DT_MEX,
    BALANCE_GRP_NUM,
    FP_ACTION_2,
    CTG_RATE,
    FP_LEGALSTAT_CD,
    FP_SCNDMT_CD,
    FP_SCND_TYP,
    FP_CIVIL_PENSION,
    FP_SOURCE_ORG,
    FP_RECEP_ORG,
    FP_RETURN_CD,
    FP_PR_LEGSTA,
    FP_FOREND_DT,
    FP_END_DT,
    FP_CAREFRZPCT,
    FP_HIR_DOS_SIT,
    FP_PT_PCT_DET,
    FP_TITLE_NUM,
    FP_DURATION_PCT,
    FP_RATING_PRS_FLG,
    FP_BUDGET_NBR,
    FP_HDCNT_NBR,
    FP_POTENT_NBR,
    FP_RANK_CD,
    FP_STEP_CD,
    FP_RK_ENT_DT,
    FP_CORPS_CD,
    FP_CHG_COR_DT,
    FP_CATG_FP,
    FP_CATG_LEVEL,
    FP_RK_TRIALPD,
    FP_STEP_END_DT,
    FP_FOR_PROM_DT,
    FP_NOMINATION_DT,
    FP_TRAINEE,
    FP_TRNE_POSN,
    FP_RK_PD_END_DT,
    FP_SANCTION,
    FP_DOWN_GRA,
    FP_APPL_SAL_DT,
    FP_CHG_IND,
    FP_CLD_INST,
    FP_SETID_RANK,
    FP_INSTALL_DT,
    FP_EQUIV_STEP,
    FP_STEP_CD2,
    FP_BUSINESS_CD,
    FP_APPL_DT,
    FP_CHG_SAL,
    FP_POINTYP_CD,
    FP_GROSS_IND,
    FP_INCS_IND,
    FP_INCS_IND2,
    FP_PT_PCT,
    FP_PT_END_DT,
    FP_PT_FOREND_DT,
    FP_COMPRATE,
    FP_INST_STAT,
    FP_RETROSPECT,
    FP_ROW_END_DT,
    LAST_UPDATE_DATE,
    OTHER_ID_JPN,
    INTCP_XFR_FLG,
    INTCP_XFR_START_DT,
    INTCP_XFR_END_DT,
    INTCP_BUS_UNIT,
    INTCP_DEPTID,
    INTCP_DEPTID2,
    INTCP_SETID_DEPT,
    INTCP_COMPANY,
    INTCP_COMPANY2,
    INTCP_SUPV_LVL_ID,
    INTCP_SUPV_LVL_ID2,
    START_DATE_JPN,
    EXP_END_DATE_JPN,
    END_DATE_JPN,
    DUTIES_TYPE,
    ASSIGNMENT_ID,
    TARGET_COMPRATE,
    CMP_DONT_ABSORB,
    SSN_EMPLOYER,
    UNITA_PROD_CD,
    ACTION_ITA,
    ACTION_REASON_ITA,
    SPECIAL_HIRCTG_ITA,
    PART_TIME_TYPE_ITA,
    PART_TIME_PERC_ITA,
    PARTTIME_ENDDT_ITA,
    WORKDAYS_NLD,
    CONT_SAL_TYPE_BRA,
    CBO_CD_BRA,
    SEFIP_CATEGORY_BRA,
    UNION_CD_ALT_BRA
)
values
(
&J.EMPLID,           ! 8.3 Customization retained
&J.EMPL_RCD,         ! 8.3 Customization retained
$JOB_EFFDT,          ! 8.3 Customization retained
#job_effseq,         ! 8.3 Customization retained
 $AsOfToday,         ! 8.3 Customization retained
&JJ.LASTUPDOPRID,
&JJ.TAXCODE_UK,
&JJ.TAX_BASIS_UK,
&JJ.WORKER_TYPE_MEX,
&JJ.REDUCED_WEEK_MEX,
&JJ.LOCATED_CD_MEX,
&JJ.SALARY_TYPE_MEX,
&JJ.IMS_TERM_DT_MEX,
&JJ.BALANCE_GRP_NUM,
&JJ.FP_ACTION_2,
&JJ.CTG_RATE,
&JJ.FP_LEGALSTAT_CD,
&JJ.FP_SCNDMT_CD,
&JJ.FP_SCND_TYP,
&JJ.FP_CIVIL_PENSION,
&JJ.FP_SOURCE_ORG,
&JJ.FP_RECEP_ORG,
&JJ.FP_RETURN_CD,
&JJ.FP_PR_LEGSTA,
&JJ.FP_FOREND_DT,
&JJ.FP_END_DT,
&JJ.FP_CAREFRZPCT,
&JJ.FP_HIR_DOS_SIT,
&JJ.FP_PT_PCT_DET,
&JJ.FP_TITLE_NUM,
&JJ.FP_DURATION_PCT,
&JJ.FP_RATING_PRS_FLG,
&JJ.FP_BUDGET_NBR,
&JJ.FP_HDCNT_NBR,
&JJ.FP_POTENT_NBR,
&JJ.FP_RANK_CD,
&JJ.FP_STEP_CD,
&JJ.FP_RK_ENT_DT,
&JJ.FP_CORPS_CD,
&JJ.FP_CHG_COR_DT,
&JJ.FP_CATG_FP,
&JJ.FP_CATG_LEVEL,
&JJ.FP_RK_TRIALPD,
&JJ.FP_STEP_END_DT,
&JJ.FP_FOR_PROM_DT,
&JJ.FP_NOMINATION_DT,
&JJ.FP_TRAINEE,
&JJ.FP_TRNE_POSN,
&JJ.FP_RK_PD_END_DT,
&JJ.FP_SANCTION,
&JJ.FP_DOWN_GRA,
&JJ.FP_APPL_SAL_DT,
&JJ.FP_CHG_IND,
&JJ.FP_CLD_INST,
&JJ.FP_SETID_RANK,
&JJ.FP_INSTALL_DT,
&JJ.FP_EQUIV_STEP,
&JJ.FP_STEP_CD2,
&JJ.FP_BUSINESS_CD,
&JJ.FP_APPL_DT,
&JJ.FP_CHG_SAL,
&JJ.FP_POINTYP_CD,
&JJ.FP_GROSS_IND,
&JJ.FP_INCS_IND,
&JJ.FP_INCS_IND2,
&JJ.FP_PT_PCT,
&JJ.FP_PT_END_DT,
&JJ.FP_PT_FOREND_DT,
&JJ.FP_COMPRATE,
&JJ.FP_INST_STAT,
&JJ.FP_RETROSPECT,
&JJ.FP_ROW_END_DT,
&JJ.LAST_UPDATE_DATE,
&JJ.OTHER_ID_JPN,
&JJ.INTCP_XFR_FLG,
&JJ.INTCP_XFR_START_DT,
&JJ.INTCP_XFR_END_DT,
&JJ.INTCP_BUS_UNIT,
&JJ.INTCP_DEPTID,
&JJ.INTCP_DEPTID2,
&JJ.INTCP_SETID_DEPT,
&JJ.INTCP_COMPANY,
&JJ.INTCP_COMPANY2,
&JJ.INTCP_SUPV_LVL_ID,
&JJ.INTCP_SUPV_LVL_ID2,
&JJ.START_DATE_JPN,
&JJ.EXP_END_DATE_JPN,
&JJ.END_DATE_JPN,
&JJ.DUTIES_TYPE,
&JJ.ASSIGNMENT_ID,
&JJ.TARGET_COMPRATE,
&JJ.CMP_DONT_ABSORB,
&JJ.SSN_EMPLOYER,
&JJ.UNITA_PROD_CD,
&JJ.ACTION_ITA,
&JJ.ACTION_REASON_ITA,
&JJ.SPECIAL_HIRCTG_ITA,
&JJ.PART_TIME_TYPE_ITA,
&JJ.PART_TIME_PERC_ITA,
&JJ.PARTTIME_ENDDT_ITA,
&JJ.WORKDAYS_NLD,
&JJ.CONT_SAL_TYPE_BRA,
&JJ.CBO_CD_BRA,
&JJ.SEFIP_CATEGORY_BRA,
&JJ.UNION_CD_ALT_BRA
)
end-sql

end-procedure

!********************************************************************
begin-procedure Insert-Into-Compensation
!******************************************************************** 
#debug9 show 'Insert-Into-Compensation'

 show ' '
! Show 'Entered into Insert-Into-Compensation'
! show 'emplid   :' &C.emplid   
! show 'EMPL_RCD :' &C.EMPL_RCD           
! show 'J2.EFFDT :' &J2.EFFDT 
 
 Let $ED.EFFDT = &J2.EFFDT 

begin-SQL ON-ERROR=SQL-Error-Found('Insert-Into-Compensation')
Insert into ps_compensation
(
EMPLID,                 
EMPL_RCD,               
EFFDT,                  
EFFSEQ,                 
COMP_EFFSEQ,            
COMP_RATECD,            
COMP_RATE_POINTS,
COMPRATE,               
COMP_PCT,               
COMP_FREQUENCY,         
CURRENCY_CD,            
MANUAL_SW,              
CONVERT_COMPRT,         
RATE_CODE_GROUP,        
CHANGE_AMT,             
CHANGE_PCT,             
CHANGE_PTS,             
FTE_INDICATOR,          
CMP_SRC_IND            
)
values
(
&J.EMPLID,
&J.EMPL_RCD,
$JOB_EFFDT,	!$pay_end_dt
#job_effseq,
&C.COMP_EFFSEQ,            
&C.COMP_RATECD,            
&C.COMP_RATE_POINTS,
&C.COMPRATE,               
&C.COMP_PCT,               
&C.COMP_FREQUENCY,         
&C.CURRENCY_CD,            
&C.MANUAL_SW,              
&C.CONVERT_COMPRT,         
&C.RATE_CODE_GROUP,        
&C.CHANGE_AMT,             
&C.CHANGE_PCT,             
&C.CHANGE_PTS,             
&C.FTE_INDICATOR,          
&C.CMP_SRC_IND            
)
end-sql

end-procedure
!GBD 09/19/2002 End

!********************************************************************
begin-procedure insert-bas-activity-row
!********************************************************************
display 'insert-bas-activity'
begin-sql 
INSERT INTO PS_BAS_ACTIVITY
	(EMPLID,
	EMPL_RCD,
	BAS_ACTION_SOURCE,
	EVENT_DT,
	EVENT_EFFSEQ,
	BAS_ACTION,
	BENEFIT_RCD_NBR,
	COBRA_ACTION,
        BAS_ALL_JOBS,                       !GBD 09/19/2002
        BAS_SUPPRESS_FORMS)                 !GBD 01/03/2003
     VALUES
	(&J.EMPLID,
	&J.EMPL_RCD,
	'TJ',
	$JOB_EFFDT,
        !AXL - 5/11/2001 Use correct effseq - Begin 
        #job_effseq,
	!0,
        !AXL - 5/11/2001 Use correct effseq - End
	$bas_action,
	&E.BENEFIT_RCD_NBR,
	&J2.cobra_action,
        'Y',                                !GBD 09/19/2002
        ' ')                                !GBD 01/03/2003
end-sql
end-procedure


!********************************************************************
!ISDVSRC 03/02/2005 Begin
begin-procedure insert-tdate-into-employment
!******************************************************************** 

! show ' '
! Show 'Entered into insert-tdate-into-employment'
! SHOW '$JOB_EFFDT :' $JOB_EFFDT
! SHOW '&Term_Effdt:' &Term_Effdt
 
 Let $Term_Effdt  = &Term_Effdt
  
 do Convert-To-DTU-Date($Term_Effdt, $dateout)
 do dtu-subtract-days($dateout,1,$dateout_1) 
 do Convert-from-dtu-date($dateout_1,$term_date)
  

#debug9 show 'insert-tdate-into-employment'  

Begin-SQL
UPDATE PS_EMPLOYMENT EMP
SET EMP.TERMINATION_DT = $term_date 
WHERE  EMP.EMPLID  = &J.EMPLID
AND    EMP.EMPL_RCD= &J.EMPL_RCD
end-sql
       

  
    If #sql-status = 0
      let #emp_inserts = #emp_inserts + #sql-count
    else
      Show 'Insert failed - ' $EMPLID
      let #emp_invalid_insert = #emp_invalid_insert + 1
    End-if
end-procedure
!ISDVSRC 03/02/2005 end                         



!********************************************************************
begin-procedure Print-Employee
!********************************************************************
 
  print &d.name            (+1,1)
  print &j.emplid          (0,30)
  print &j.company         (0,42)
  print &j.paygroup        (0,51)
  print &j2.deptid         (0,62)  
  print &j2.jobcode        (0,71)
  print #total_hours       (0,84)  Edit 990.00

end-procedure

!********************************************************************
Begin-Procedure Check-Futr-Rows
!********************************************************************
  move 'N' to $future_rows_exists
  
begin-SELECT
'X'

  move 'Y' to $future_rows_exists
  
FROM PS_JOB FUT
WHERE FUT.EMPLID = 	&j.emplid
  AND FUT.EMPL_RCD = 	&j.EMPL_RCD
  AND FUT.EFFDT > $JOB_EFFDT
end-select

end-procedure

!********************************************************************
Begin-Procedure Updt-Future-Job-Rows
!********************************************************************
#ifdef debug8
   show 'entered into  Updt-Future-Job-Rows'
  show '$job_empl_status:' $job_empl_status
  show '$JOB_HR_STATUS : ' $JOB_HR_STATUS
  show '$ben_status     :' $ben_status
  show '&j.emplid       :' &j.emplid       
  show '&j.EMPL_RCD     :' &j.EMPL_RCD     
#end-if

Begin-SQL
Update PS_JOB
SET EMPL_STATUS	= $job_empl_status,
    HR_STATUS   = $JOB_HR_STATUS,       ! Upgrade 9.0 changes
    BEN_STATUS  = $ben_status
WHERE EMPLID 	= 	&j.emplid
  AND EMPL_RCD = 	&j.EMPL_RCD
  AND EFFDT > $JOB_EFFDT
end-sql

   If #sql-status = 0
      Let #update_count = #update_count + #sql-count
   else
      Show 'Record did not update - ' $EMPLID
   End-if

end-procedure

!***********************************************************************
begin-procedure Notify-Ben-Admin
!***********************************************************************

   display 'Notifying Ben Admin ' 
  
   let $ee_info = 'Warning: Term row inserted and future rows exists '
   let $ee_info =  $ee_info || 'for emplid ' || &J.EMPLID

! GBD 01/27/2003 Begin

   do GEXXX951-Select-Oracle-Instance
   let $db_name = lower($GEXXX951_Oracle_Instance)

   Do GEXXX971-Select-Trans-Type-Parameters
   if ($GEXXX971_EMAIL_ADDR_CRITERIA = '') and ($GEXXX971_FTP_ADDR_CRITERIA = '')
      show 'Either no rows exist on GEX_INTFC_RULE/DATA for this Oprid/Run Control ID'
      show 'or the most current rows under this ID have been set to inactive. Data will'
      show 'not be sent.'
   else
      if $GEXXX971_GEX_TRANS_TYPE = 'E'
         show $GEXXX971_EMAIL_ADDR_CRITERIA
         show 'This is the email statement produced: '

         let $UNIX_MAIL_COMMAND = 'echo ' || $ee_info || '|' || ' mailx -s"Pharmacy Intern Insert Process" '||$GEXXX971_EMAIL_ADDR_CRITERIA||' '

!         let $UNIX_MAIL_COMMAND = 'echo ' || $ee_info || '|' || ' mailx -s"Pharmacy Intern Insert Process" pdl_hris@eagle.com'

! GBD 01/27/2003 End
 
         display 'mail cmd  ' noline
         display $UNIX_MAIL_COMMAND

         CALL SYSTEM USING $UNIX_MAIL_COMMAND #system_status

         if #system_status <> 0
           add 1 to #errorcount
           display 'Email notification failed'
         end-if

         display 'Ben Admin Group notified'
      end-if
      if $GEXXX971_GEX_TRANS_TYPE = 'F'
         show $GEXXX971_FTP_ADDR_CRITERIA
         show 'Need to insert a Call FTP shell script to run ftp'
      end-if
   end-if

end-procedure

!********************************************************************
begin-procedure SQL-Error-Found($Proc_Name) 
!********************************************************************
  do error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
end-procedure

!********************************************************************
begin-procedure Error-Found
!********************************************************************
  move 'Y' to $ErrorFound
  do Format-Number(#InputTran, $out, '99999')
  print $out (+1,1)

  let $EmplId_1st3 = substr($EmplId,1,3)
  let $EmplId_mid2 = substr($EmplId,4,2)
  let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  print $EmplID11 (,8)
end-procedure

!***********************************************************************
Begin-Procedure EOJ
!***********************************************************************
 
  Do Reset			
  
  let #records_processed = #110_count + #111_count + #112_count
  date-time () hh:mi:ss &timeProcess
  display #records_processed 99999 noline
  display ' Transactions Processed: ' noline
  display &timeProcess

  Show 'Successful end of report'

end-procedure

#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions

#Include 'gexxx950.sqc'  !Get SQRW run controls
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 

#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#Include 'gexxx951.sqc'  !Oracle Database Parameters      ! GBD 01/27/2003
#Include 'gexxx971.sqc'  !Email and FTP Parameters        ! GBD 01/27/2003
