!***********************************************************************
! GEXHR300.SQR         LOAD THE GEX_EVP_TBL                            *                                           *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!            CWB       04/05/2007     To Load EVP Table with the data  *
!                                     that will be the basis for all   *
!                                     EVP metric reportings.           *
!                                                                      *
!ITG46636   VENDSXN    02/01/2008     Modified code to code Pharmacy   *  
!                                     Business area correctly          *
!ITG 53036  VENDKXY    02/25/2009     Market District, Valu King and   *
!				 	GEX Giant Eagle Express (GEX)  *
!ITG 70135  ISDVDZK    12/17/2009     Introduce two new Business Areas *
!                                     Fresh Food Manu and Freedom Rd   *
!ITG 93006  ISDVRKK    02/02/2011     Added $deptid = '6515' to Market *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup32.sqc'

begin-setup
  declare-report load-evl-Report
Printer-Type=LINEPRINTER       
    layout=DEFAULT
  end-declare

  declare-report Report-log
Printer-Type=LINEPRINTER       
    layout=DEFAULT
  end-declare
end-setup

!***********************************************************************
begin-report
!***********************************************************************
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  do Stdapi-Init

  If $prcs_process_instance = ''
    Do Ask-As-Of-Date		!askaod.sqc
  else
    do Get-Run-Control	     !gexrnctl.sqc  	
    let $AsOfDate = &asofdate
  end-if

  if $asofdate= ''
  show 'Date not keyed in. Running as of today'
  move $current-date to $asofdate 'DD-MON-YYYY'
  end-if

  show '$asofdate: ' $asofdate
  show ' '

  do delete-table
  do Select-values
  do Commit-Transaction
  do Stdapi-Term
end-report

!***********************************************************************
begin-procedure delete-table
#debug9 show 'delete-table'

begin-sql
delete from ps_gex_evp_tbl
end-sql

do commit-transaction

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure Select-values
#debug9 show 'select-values'

  !let $bus_area = ' '

begin-select DISTINCT ON-ERROR=SQL-Error-Found
B.DEPTID
A.ACCT_CD
A.PAYGROUP

  do Initialize-Variables
  
  let $deptid  = ltrim(rtrim(&B.deptid, ' '), ' ')
  #debug8 show '$deptid: '$deptid
  Let $Account_Cd = ltrim(rtrim(&A.ACCT_CD, ' '), ' ')
  #debug8 show '$Account_Cd: '$Account_Cd
  Let $Paygroup = ltrim(rtrim(&A.PAYGROUP, ' '), ' ')
  #debug8 show '$Paygroup: '$Paygroup

  do Get-Dept-Descr
  do Get-Fields
  do eval-div-cd
  do get-bus-area
  do insert-into-evp-tbl

    
FROM PS_JOB A, PS_DEPT_TBL B
WHERE A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        	 WHERE A.EMPLID = A_ED.EMPLID
          	 AND A.EMPL_RCD = A_ED.EMPL_RCD
          	 AND A_ED.EFFDT <= $AsOfDate)
 AND A.EFFSEQ = (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        	 WHERE A.EMPLID = A_ES.EMPLID
          	 AND A.EMPL_RCD = A_ES.EMPL_RCD
          	 AND A.EFFDT = A_ES.EFFDT)
 AND B.DEPTID = A.DEPTID
 AND B.EFF_STATUS = 'A'
 AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_DEPT_TBL B_ED
        	WHERE B.SETID = B_ED.SETID
          	AND B.DEPTID = B_ED.DEPTID
          	AND B_ED.EFFDT <= A.EFFDT)
 AND B.COMPANY > '999'

ORDER BY B.DEPTID
end-select
end-procedure
!***********************************************************************
!***********************************************************************
Begin-Procedure Get-Dept-Descr

Begin-Select
B1.DESCRSHORT
B1.COMPANY
B1.SI_ACCIDENT_NUM			
  let $Desc_Short = ltrim(rtrim(&B1.descrshort, ' '), ' ')

  let $sub_descr_4 = substr($Desc_Short,1,4)
  #debug8 show '$sub_descr_4: '$sub_descr_4
  let $sub_descr_2 = substr($Desc_Short,1,2)
  #debug8 show '$sub_descr_2: '$sub_descr_2
  let $company     = ltrim(rtrim(&B1.company, ' '), ' ')
  #debug8 show '$company: '$company
  Let $acc_num = ltrim(rtrim(&B1.SI_ACCIDENT_NUM, ' '), ' ')
FROM PS_DEPT_TBL B1
WHERE B1.DEPTID = $deptid
AND B1.EFF_STATUS = 'A'
AND B1.EFFDT = (SELECT MAX(B_ED1.EFFDT) FROM PS_DEPT_TBL B_ED1
        	WHERE B1.SETID = B_ED1.SETID
          	AND B1.DEPTID = B_ED1.DEPTID
          	AND B_ED1.EFFDT <= $AsOfDate)
End-Select
End-Procedure Get-Dept-Descr
!***********************************************************************
!***********************************************************************
Begin-Procedure Get-Fields

Begin-Select
C.GEX_COMPANY_DIV_CD
C.DEPARTMENT
C.BUSINESS_UNIT
C.GEX_RGN_CD
D.GEX_CEO
D.GEX_EVP
D.GEX_SVPVP
D.GEX_DIR
D.GEX_MGR
D.GEX_SUP

  let $company_div_cd = ltrim(rtrim(&C.gex_company_div_cd, ' '), ' ')
  #debug8 show '$company_div_cd: '$company_div_cd
  let $business_unit  = ltrim(rtrim(&C.business_unit, ' '), ' ')
  #debug8 show '$business_unit: '$business_unit
  let $department     = ltrim(rtrim(&C.department, ' '), ' ')
  #debug8 show '$department: '$department
  let #rgn_cd 	      = &C.gex_rgn_cd
  let $GEX_CEO        = nvl(&d.GEX_CEO,' ')       
  let $GEX_EVP        = nvl(&d.GEX_EVP,' ')        
  let $GEX_SVPVP      = nvl(&d.GEX_SVPVP,' ')      
  let $GEX_DIR        = nvl(&d.GEX_DIR,' ')        
  let $GEX_MGR        = nvl(&d.GEX_MGR,' ')        
  let $GEX_SUP        = nvl(&d.GEX_SUP,' ')

FROM PS_DEPT_TBL B11, PS_GEX_DEPT_TBL C, PS_GEX_MGMT_REPORT D
WHERE B11.DEPTID = $deptid
 AND B11.EFF_STATUS = 'A'
 AND B11.EFFDT = (SELECT MAX(B_ED11.EFFDT) FROM PS_DEPT_TBL B_ED11
        	WHERE B11.SETID = B_ED11.SETID
          	AND B11.DEPTID = B_ED11.DEPTID
          	AND B_ED11.EFFDT <= $AsOfDate)
 AND B11.SETID = C.SETID
 AND B11.DEPTID = C.DEPTID
 AND C.EFFDT = (SELECT MAX(C_ED.EFFDT) FROM PS_GEX_DEPT_TBL C_ED
        	WHERE C.SETID = C_ED.SETID
          	AND C.DEPTID = C_ED.DEPTID
          	AND C_ED.EFFDT <= B11.EFFDT)
 AND B11.DEPTID = D.DEPTID (+)
 AND B11.COMPANY > '999'
 
End-Select
End-Procedure Get-Fields
!***********************************************************************
!***********************************************************************
begin-procedure eval-div-cd
#debug9 show 'eval-div-cd'
  Evaluate $company_div_cd
	  when = 'WHS'
	  when = 'COR'
  	when = 'GEM'
	  when = 'GPH'
	  when = 'RMC'
	  when = 'RPH'
       let $division = 'POD'
	     break
	  when = 'CLC'
	  when = 'CP3'
  	when = 'CLE'
	  when = 'CLW'
       let $division = 'COD'
	     break
    when = 'RTL'
    when = 'GGO'
    when = 'VDO' 
       evaluate $company
         when = 'GEI'
         when = 'RTP'
         when = 'MCC'
         when = 'FCC'	!VENDSXN Added for ITG#40111
            let $division = 'POD'
            break
         when = 'RFI'
            let $division = 'COD'
            break
         when = 'TMK' 
              If (#rgn_cd >= 100 and #rgn_cd <=199) or
                 (#rgn_cd >= 300 and #rgn_cd <=399) or
                 $department = '3664'
                let $division = 'POD'
              else
                If (#rgn_cd >=200 and #rgn_cd <= 299) or
                   $department = '3703'
                  let $division = 'COD'
                end-if
              end-if
            break
          end-evaluate
	  when = 'MDR'
       let $division = 'POD'	
	     break
	  when = 'COL'
	  when = 'COC'
       let $division = 'COL'
       break 
    when = 'IND'
       let $division = 'IND'
       break
    when-other
         #debug8 show 'Unknown Division: ' $company_div_cd
       let $division = 'XXX'
       break
  End-evaluate
end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure get-bus-area
#debug9 show 'get-bus-area'

  if $company_div_cd = 'CLE'
  or $company_div_cd = 'COL'
  or $company_div_cd = 'GEM'
  or $company_div_cd = 'MDR'
  or $company_div_cd = 'RMC'
  and substr($department,1,1) <> '3' 
  and substr($business_unit,2,1) <> '5' 
  and $department <> '7503'
    let $bus_area = 'GE Retail'
  end-if

  if $company_div_cd = 'CLC'
  or $company_div_cd = 'COC'
  or $company_div_cd = 'COR'
  or $company_div_cd = 'MDC'
  and $deptid <> 'C017'
  and $deptid <> 'C098'
    let $bus_area = 'Corp Off'
  end-if 
  
  if substr($department,1,1) = '3'
  and ($Account_Cd = '041' or $Account_Cd = '044')
      let $bus_area = 'GetGo'
  end-if 

  if substr($department,1,1) = '3'
  and substr($business_unit,2,1) = '5' 
  and $business_unit <> '05300'
  and $business_unit <> '05301'
  and $business_unit <> '05435'
  and $business_unit <> '05436'
    let $bus_area = 'GetGo'
  end-if 

  if $sub_descr_4 = 'Fuel' or $department = '7503'
    let $bus_area = 'GetGo'
  end-if


  if $business_unit = '00004'
  or $business_unit = '00002'
  or $business_unit = '00007'
  or $business_unit = '00024'
  or $business_unit = '00023'
  or $business_unit = '05300'
  or $business_unit = '05301'
  or $business_unit = '00026'
    if $department = '8025'
     or $department = '8028'
     or $department = '8030'
     or $department = '8062'
     or $department = '8205'
       let $bus_area = 'Corp Off'
     else
       let $bus_area = 'RSC'
     end-if
  end-if 

  if $sub_descr_2 = 'Rx'
    let $bus_area = 'Pharmacy'
  end-if

  if $deptid = 'C017' or $deptid = 'C098' or $deptid = 'C770'
    let $bus_area = 'Pharmacy'
  End-If
  
  If $Account_Cd = '008' OR $Paygroup = 'PHM' OR $Paygroup = 'PH2' OR $Paygroup = 'PH3' OR $Paygroup = 'PH4'
        Let $bus_area = 'Pharmacy'
  End-If
  
  if substr($acc_num,1,2) = 'VK'
       let $bus_area = 'Valu King'
  End-If
  
  if substr($acc_num,1,2) = 'EX'
       let $bus_area = 'GEX'
  End-If
  
  if $deptid = '0040' or $deptid = '0014' or $deptid = '0047' or $deptid = '6515'
       let $bus_area = 'Market District'
       
  End-If     
  If $company= 'RTP' and ($deptid = 'C154' or $deptid ='W012')
  let $bus_area = 'Freedom Rd'
       
  End-If  
  If $company= 'RTP' and ($deptid = 'C149' or $deptid ='M003')
  let $bus_area = 'Fresh Food Manu'
       
  End-If  
  
  #debug8 show '$company' $company
  #debug8 show '$deptid' $deptid
  #debug8 show '$bus_area: '  $bus_area
  
end-procedure
!***********************************************************************************
!***********************************************************************************
begin-procedure insert-into-evp-tbl
#debug9 show 'insert-into-evp-tbl'
#debug8 show 'GEX_BUS_AREA' $bus_area
begin-sql on-error=SQL-Error-Found
insert into PS_GEX_EVP_TBL
(DEPTID,         
ACCT_CD,	
PAYGROUP,	
COMPANY,        
GEX_OPR_DIV,    
GEX_BUS_AREA,   
BUSINESS_UNIT,
GEX_CEO,        
GEX_EVP,        
GEX_SVPVP,      
GEX_DIR,        
GEX_MGR,        
GEX_SUP)
values
($deptid,
$Account_Cd,	
$Paygroup,	
$company,
$division,
$bus_area,                        
$business_unit,
$GEX_CEO,       
$GEX_EVP,        
$GEX_SVPVP,      
$GEX_DIR,        
$GEX_MGR,        
$GEX_SUP)
end-sql
end-procedure
!***********************************************************************
!***********************************************************************
Begin-Procedure Initialize-Variables
	Let $deptid         = ' '
	Let $Account_Cd     = ' '
	Let $Paygroup       = ' '
	Let $Desc_Short     = ' '
	Let $sub_descr_4    = ' '
	Let $sub_descr_2    = ' '
	Let $company        = ' '
	Let $company_div_cd = ' '
	Let $business_unit  = ' '
	Let $department     = ' '
	Let #rgn_cd 	    = 0
	Let $GEX_CEO        = ' '
	Let $GEX_EVP        = ' '
	Let $GEX_SVPVP      = ' '
	Let $GEX_DIR        = ' '
	Let $GEX_MGR        = ' '
	Let $GEX_SUP        = ' '
	Let $division       = ' '
	Let $bus_area       = ' '
End-Procedure Initialize-Variables
!***********************************************************************
!***********************************************************************
begin-procedure update-evp-tbl
#debug9 show 'update-evp-tbl'
#debug8 show 'Inside Procedure update-evp-tbl'
begin-sql on-error=SQL-Error-Found

 update ps_gex_evp_tbl e

 
  set e.gex_opr_div = $division,
      e.GEX_CEO   = $GEX_CEO,       
      e.GEX_EVP   = $GEX_EVP,        
      e.GEX_SVPVP = $GEX_SVPVP,      
      e.GEX_DIR   = $GEX_DIR,        
      e.GEX_MGR   = $GEX_MGR,        
      e.GEX_SUP   = $GEX_SUP

 WHERE  e.deptID     = $deptID

end-sql

end-procedure 
!***********************************************************************
!***********************************************************************
begin-procedure SQL-Error-Found
#debug9 Show 'SQL-Error-Found'
  move 'Y' to $ErrorFound
  do Format-Number(#InputTran, $out, '99999')

  move 'Y' to $Insert_Err  
  
  use-report report-log

  print $out         (+1,1)
  print $sql-error   (,18) 

  display $out noline 
  display '    ' noline 
  display $sql-error
  display 'Program stopped by user request.'
  STOP  

end-procedure
!***********************************************************************

#Include 'gexxx922.sqc'  !Get GEX_RC_PAY run control parameters
#include 'gexxx913.sqc'  !Get Union code multiple row table
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getdatcd.sqc'  !Retrieves the asofyear, asofmonth etc.,
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'askaod.sqc'    !Ask-As-Of-Date routine
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#include 'gexregtp.sqc'  !Translates the REG_TEMP to Full_Part_time
#include 'getdptnm.sqc'  !Get department name
#include 'getactnm.sqc'  !Get account name
#include 'getcodta.sqc'  !Get company data
#Include 'getempnm.sqc'  !Get-Employee-Name
#include 'gexxx900.sqc'  !Company
#include 'gexrnctl.sqc'
!***********************************************************************