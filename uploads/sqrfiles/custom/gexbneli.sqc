!***********************************************************************
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
! Narrative:                                                           *
! #debug9 - displays important values for debugging                    *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE	       *
!***********************************************************************
!  
! VENDKXY   KXY        02/11/2010     Intial creation. This is clone	 *
!																		 from existing sqc Gexbnahp.sqc		 *
!***********************************************************************



!*********************************************************************
!This procedure checks if any current dated job row exists. If so, 
!increments the sequence number and inserts a new job row with the
!calculated eligibility config3 value, otherwise, inserts a new job
!row with current date as the effdt and with new eligibility config3
!value. After inserting into job table, updates the personal table and
!deletes the employee from the clicker table.
!*********************************************************************
begin-procedure insert-procedure
#debug9 show 'gexbnahp.insert-procedure'

	    do select-job-row
            do select-comp-row
	    if $errorfound = 'N'

	       if $bas_action_retrieved <> 'Y'
		  			do get-bas-action
		  			  			
	       end-if
	       

	       if $effdt_row_exists = 'Y'

		  let $bac_emplid = &I.EMPLID
		  let #bac_empl_rcd = &I.EMPL_RCD
		  let $bac_bas_action_source = 'TJ'
		  let $bac_event_dt = &I.EFFDT
		  let #bac_event_effseq = #effseq
		  let $bac_cobra_action = &I.COBRA_ACTION

      		  			   
		  do insert-job-row-effdt-exists
                  do insert-job-jr-row-effdt-exists        
                  do insert-compensation-row-effdt-exists   
	       else

		  let $bac_emplid = &J.EMPLID
		  let #bac_empl_rcd = &J.EMPL_RCD
		  let $bac_bas_action_source = 'TJ'
		  let $bac_event_dt = $effdt_dbf
		  let #bac_event_effseq = 0
		  let $bac_cobra_action = &J.COBRA_ACTION


		  do insert-job-row
                  do insert-job-jr-row                      
                  do insert-compensation-row                
	       end-if

               do select-all-future-job-rows
	       let $bas_activity_exists = 'N'
	       do select-bas-activity-row
	       if $bas_activity_exists = 'N'
		  do insert-bas-activity-row
	       end-if

	    end-if

end-procedure

!*********************************************************************
!Selects the job table row with runcontrol effdt. If it does not exist
!calls the select to get the maximum effdt row for the employee
!*********************************************************************

begin-procedure select-job-row
#debug9 show 'gexbnahp.select-job-row'

        let $effdt_dbf = $Asofdate

display $effdt_dbf

move 'N' to $found
move 'N' to $effdt_row_exists
move 'N' to $errorfound

begin-select on-error=sql-error-found('select-job-row')
I.EMPLID 
I.EMPL_RCD 
I.EFFDT 
I.EFFSEQ 
I.PER_ORG 
I.DEPTID 
I.JOBCODE 
I.POSITION_NBR 
I.SUPERVISOR_ID 
I.HR_STATUS 
I.APPT_TYPE 
I.MAIN_APPT_NUM_JPN 
I.POSITION_OVERRIDE 
I.POSN_CHANGE_RECORD 
I.EMPL_STATUS 
I.ACTION 
I.ACTION_DT 
I.ACTION_REASON 
I.LOCATION 
I.TAX_LOCATION_CD 
I.JOB_ENTRY_DT 
I.DEPT_ENTRY_DT 
I.POSITION_ENTRY_DT 
I.SHIFT 
I.REG_TEMP 
I.FULL_PART_TIME 
I.COMPANY 
I.PAYGROUP 
I.BAS_GROUP_ID 
I.ELIG_CONFIG1 
I.ELIG_CONFIG2 
I.ELIG_CONFIG3 
I.ELIG_CONFIG4 
I.ELIG_CONFIG5 
I.ELIG_CONFIG6 
I.ELIG_CONFIG7 
I.ELIG_CONFIG8 
I.ELIG_CONFIG9 
I.BEN_STATUS 
I.BAS_ACTION 
I.COBRA_ACTION 
I.EMPL_TYPE 
I.HOLIDAY_SCHEDULE 
I.STD_HOURS 
I.STD_HRS_FREQUENCY 
I.OFFICER_CD 
I.EMPL_CLASS 
I.SAL_ADMIN_PLAN 
I.GRADE 
I.GRADE_ENTRY_DT 
I.STEP 
I.STEP_ENTRY_DT 
I.GL_PAY_TYPE 
I.ACCT_CD 
I.EARNS_DIST_TYPE 
I.COMP_FREQUENCY 
I.COMPRATE 
I.CHANGE_AMT 
I.CHANGE_PCT 
I.ANNUAL_RT 
I.MONTHLY_RT 
I.DAILY_RT 
I.HOURLY_RT 
I.ANNL_BENEF_BASE_RT 
I.SHIFT_RT 
I.SHIFT_FACTOR 
I.CURRENCY_CD 
I.BUSINESS_UNIT 
I.SETID_DEPT 
I.SETID_JOBCODE 
I.SETID_LOCATION 
I.SETID_SALARY 
I.REG_REGION 
I.DIRECTLY_TIPPED 
I.FLSA_STATUS 
I.EEO_CLASS 
I.FUNCTION_CD 
I.TARIFF_GER 
I.TARIFF_AREA_GER 
I.PERFORM_GROUP_GER 
I.LABOR_TYPE_GER 
I.SPK_COMM_ID_GER 
I.HOURLY_RT_FRA 
I.ACCDNT_CD_FRA 
I.VALUE_1_FRA 
I.VALUE_2_FRA 
I.VALUE_3_FRA 
I.VALUE_4_FRA 
I.VALUE_5_FRA 
I.CTG_RATE 
I.PAID_HOURS 
I.PAID_FTE 
I.PAID_HRS_FREQUENCY 
I.UNION_FULL_PART 
I.UNION_POS 
I.MATRICULA_NBR 
I.SOC_SEC_RISK_CODE 
I.UNION_FEE_AMOUNT 
I.UNION_FEE_START_DT 
I.UNION_FEE_END_DT 
I.EXEMPT_JOB_LBR 
I.EXEMPT_HOURS_MONTH 
I.WRKS_CNCL_FUNCTION 
I.INTERCTR_WRKS_CNCL 
I.CURRENCY_CD1 
I.PAY_UNION_FEE 
I.UNION_CD 
I.BARG_UNIT 
I.UNION_SENIORITY_DT 
I.ENTRY_DATE 
I.LABOR_AGREEMENT 
I.EMPL_CTG 
I.EMPL_CTG_L1 
I.EMPL_CTG_L2 
I.SETID_LBR_AGRMNT 
I.WPP_STOP_FLAG 
I.LABOR_FACILITY_ID 
I.LBR_FAC_ENTRY_DT 
I.LAYOFF_EXEMPT_FLAG 
I.LAYOFF_EXEMPT_RSN 
I.GP_PAYGROUP 
I.GP_DFLT_ELIG_GRP 
I.GP_ELIG_GRP 
I.GP_DFLT_CURRTTYP 
I.CUR_RT_TYPE 
I.GP_DFLT_EXRTDT 
I.GP_ASOF_DT_EXG_RT 
I.ADDS_TO_FTE_ACTUAL 
I.CLASS_INDC 
I.ENCUMB_OVERRIDE 
I.FICA_STATUS_EE 
I.FTE 
I.PRORATE_CNT_AMT 
I.PAY_SYSTEM_FLG 
I.BORDER_WALKER 
I.LUMP_SUM_PAY 
I.CONTRACT_NUM 
I.JOB_INDICATOR 
I.WRKS_CNCL_ROLE_CHE 
I.BENEFIT_SYSTEM 
I.WORK_DAY_HOURS 
I.REPORTS_TO 
I.FORCE_PUBLISH 
I.JOB_DATA_SRC_CD 
I.ESTABID 
I.SUPV_LVL_ID 
I.SETID_SUPV_LVL 
I.ABSENCE_SYSTEM_CD 
I.POI_TYPE 
I.HIRE_DT 
I.LAST_HIRE_DT 
I.TERMINATION_DT 
I.ASGN_START_DT 
I.LST_ASGN_START_DT 
I.ASGN_END_DT 
I.LDW_OVR 
I.LAST_DATE_WORKED 
I.EXPECTED_RETURN_DT 
I.EXPECTED_END_DATE 
I.AUTO_END_FLG 
I.LASTUPDDTTM 
I.LASTUPDOPRID 
I.GEX_LIGHT_DUTY 
I.GEX_CHANGE_RECORD 
I.GEX_VOLUN_LOW_HRS 
I.GEX_STUDENT_IND 
I.GEX_MOON_IND 
I.GEX_DEPTID_OVR 
I.GEX_ACCT_CD_OVR 
I.GEX_GL_EXP_OVR 
I.GEX_STEWARD 
I.GEX_DUES_EXEMPT 
I.GEX_FINAN_CORE 
I.GEX_INFLATED_HRS 
I.GEX_FP_CODE 
I.GEX_SEASONAL_EMP
    move 'Y' to $found
    move 'Y' to $effdt_row_exists
    let #effseq = &I.EFFSEQ + 1
    move &I.EMPL_RCD to #empl_rcd

           
      Let $reportdate_ccyy = $Asofdate
         
   
    Do select-job-jr-row

FROM PS_JOB I

WHERE I.EMPLID = $emplid
  AND I.EMPL_RCD = &D.empl_rcd
  AND I.EFFDT = $effdt_Dbf
  AND I.EFFSEQ = 
      (SELECT MAX(EFFSEQ)
	 FROM PS_JOB
	WHERE EMPLID = $emplid
	  AND EMPL_RCD = &D.EMPL_RCD
	  AND EFFDT = $effdt_dbf)

end-SELECT

if $found = 'N'
  do select-current-job-row
end-if

end-procedure


!*********************************************************************
!Selects the job_jr table row with runcontrol effdt. If it does not
!exist calls the select to get the maximum effdt row for the employee
!*********************************************************************
begin-procedure select-job-jr-row
#debug9 show 'gexbnahp.select-job-jr-row'

begin-select on-error=sql-error-found('select-job-jr-row')
I2.EMPLID 
I2.EMPL_RCD 
I2.EFFDT 
I2.EFFSEQ 
I2.LASTUPDDTTM 
I2.LASTUPDOPRID 
I2.TAXCODE_UK 
I2.TAX_BASIS_UK 
I2.WORKER_TYPE_MEX 
I2.REDUCED_WEEK_MEX 
I2.LOCATED_CD_MEX 
I2.SALARY_TYPE_MEX 
I2.IMS_TERM_DT_MEX 
I2.BALANCE_GRP_NUM 
I2.FP_ACTION_2 
I2.CTG_RATE 
I2.FP_LEGALSTAT_CD 
I2.FP_SCNDMT_CD 
I2.FP_SCND_TYP 
I2.FP_CIVIL_PENSION 
I2.FP_SOURCE_ORG 
I2.FP_RECEP_ORG 
I2.FP_RETURN_CD 
I2.FP_PR_LEGSTA 
I2.FP_FOREND_DT 
I2.FP_END_DT 
I2.FP_CAREFRZPCT 
I2.FP_HIR_DOS_SIT 
I2.FP_PT_PCT_DET 
I2.FP_TITLE_NUM 
I2.FP_DURATION_PCT 
I2.FP_RATING_PRS_FLG 
I2.FP_BUDGET_NBR 
I2.FP_HDCNT_NBR 
I2.FP_POTENT_NBR 
I2.FP_RANK_CD 
I2.FP_STEP_CD 
I2.FP_RK_ENT_DT 
I2.FP_CORPS_CD 
I2.FP_CHG_COR_DT 
I2.FP_CATG_FP 
I2.FP_CATG_LEVEL 
I2.FP_RK_TRIALPD 
I2.FP_STEP_END_DT 
I2.FP_FOR_PROM_DT 
I2.FP_NOMINATION_DT 
I2.FP_TRAINEE 
I2.FP_TRNE_POSN 
I2.FP_RK_PD_END_DT 
I2.FP_SANCTION 
I2.FP_DOWN_GRA 
I2.FP_APPL_SAL_DT 
I2.FP_CHG_IND 
I2.FP_CLD_INST 
I2.FP_SETID_RANK 
I2.FP_INSTALL_DT 
I2.FP_EQUIV_STEP 
I2.FP_STEP_CD2 
I2.FP_BUSINESS_CD 
I2.FP_APPL_DT 
I2.FP_CHG_SAL 
I2.FP_POINTYP_CD 
I2.FP_GROSS_IND 
I2.FP_INCS_IND 
I2.FP_INCS_IND2 
I2.FP_PT_PCT 
I2.FP_PT_END_DT 
I2.FP_PT_FOREND_DT 
I2.FP_COMPRATE 
I2.FP_INST_STAT 
I2.FP_RETROSPECT 
I2.FP_ROW_END_DT 
I2.LAST_UPDATE_DATE 
I2.OTHER_ID_JPN 
I2.INTCP_XFR_FLG 
I2.INTCP_XFR_START_DT 
I2.INTCP_XFR_END_DT 
I2.INTCP_BUS_UNIT 
I2.INTCP_DEPTID 
I2.INTCP_DEPTID2 
I2.INTCP_SETID_DEPT 
I2.INTCP_COMPANY 
I2.INTCP_COMPANY2 
I2.INTCP_SUPV_LVL_ID 
I2.INTCP_SUPV_LVL_ID2 
I2.START_DATE_JPN 
I2.EXP_END_DATE_JPN 
I2.END_DATE_JPN 
I2.DUTIES_TYPE 
I2.ASSIGNMENT_ID 
I2.TARGET_COMPRATE 
I2.CMP_DONT_ABSORB 
I2.SSN_EMPLOYER 
I2.UNITA_PROD_CD 
I2.ACTION_ITA 
I2.ACTION_REASON_ITA 
I2.SPECIAL_HIRCTG_ITA 
I2.PART_TIME_TYPE_ITA 
I2.PART_TIME_PERC_ITA 
I2.PARTTIME_ENDDT_ITA 
I2.WORKDAYS_NLD 
I2.CONT_SAL_TYPE_BRA 
I2.CBO_CD_BRA 
I2.SEFIP_CATEGORY_BRA 
I2.UNION_CD_ALT_BRA

FROM PS_JOB_JR I2

WHERE I2.EMPLID = $emplid
  AND I2.EMPL_RCD = &D.empl_rcd
  AND I2.EFFDT = $effdt_Dbf
  AND I2.EFFSEQ = 
      (SELECT MAX(EFFSEQ)
	 FROM PS_JOB_JR
	WHERE EMPLID = $emplid
	  AND EMPL_RCD = &D.EMPL_RCD
	  AND EFFDT = $effdt_dbf)
end-select

end-procedure



!*********************************************************************
!Select the corresponding Compensation Row
!*********************************************************************
begin-procedure select-comp-row
#debug9 show 'gexbnahp.select-comp-row'

        let $effdt_dbf = $Asofdate

  
  move 'N' to $found_comp
 
begin-select on-error=sql-error-found('select-comp-row')

I3.EMPLID                 
I3.EMPL_RCD               
I3.EFFDT                  
I3.EFFSEQ                 
I3.COMP_EFFSEQ            
I3.COMP_RATECD            
I3.COMP_RATE_POINTS       
I3.COMPRATE               
I3.COMP_PCT               
I3.COMP_FREQUENCY         
I3.CURRENCY_CD            
I3.MANUAL_SW              
I3.CONVERT_COMPRT         
I3.RATE_CODE_GROUP        
I3.CHANGE_AMT             
I3.CHANGE_PCT             
I3.CHANGE_PTS             
I3.FTE_INDICATOR          
I3.CMP_SRC_IND       

  move 'Y' to $found_comp
  let #effseq_comp = &I3.EFFSEQ + 1
  
FROM PS_COMPENSATION I3

  WHERE I3.EMPLID   = $emplid
  AND   I3.EMPL_RCD = &D.empl_rcd

  AND I3.EFFDT = $effdt_Dbf
  AND I3.EFFSEQ = 
      (SELECT MAX(EFFSEQ) FROM PS_COMPENSATION
       WHERE I3.EMPLID      = EMPLID
        AND I3.EMPL_RCD     = EMPL_RCD
        AND I3.COMP_EFFSEQ  = COMP_EFFSEQ
        AND I3.COMP_RATECD  = COMP_RATECD
        AND I3.EFFDT        = EFFDT)  

end-select

if $found_comp = 'N'
  do select-current-comp-row
end-if

end-procedure


!*********************************************************************
!Selects maximum effdt row for the employee
!*********************************************************************

begin-procedure select-current-job-row
#debug9 show 'gexbnahp.select-current-job-row'

move 'N' to $found
move 'N' to $errorfound
display 'Empl RCD#:' noline
display &d.empl_rcd

begin-select on-error=sql-error-found('select-current-job-row')
J.EMPLID 
J.EMPL_RCD 
J.EFFDT 
J.EFFSEQ      &effseq
J.PER_ORG 
J.DEPTID 
J.JOBCODE 
J.POSITION_NBR 
J.SUPERVISOR_ID 
J.HR_STATUS 
J.APPT_TYPE 
J.MAIN_APPT_NUM_JPN 
J.POSITION_OVERRIDE 
J.POSN_CHANGE_RECORD 
J.EMPL_STATUS 
J.ACTION 
J.ACTION_DT 
J.ACTION_REASON 
J.LOCATION 
J.TAX_LOCATION_CD 
J.JOB_ENTRY_DT 
J.DEPT_ENTRY_DT 
J.POSITION_ENTRY_DT 
J.SHIFT 
J.REG_TEMP 
J.FULL_PART_TIME 
J.COMPANY 
J.PAYGROUP 
J.BAS_GROUP_ID 
J.ELIG_CONFIG1 
J.ELIG_CONFIG2 
J.ELIG_CONFIG3 
J.ELIG_CONFIG4 
J.ELIG_CONFIG5 
J.ELIG_CONFIG6 
J.ELIG_CONFIG7 
J.ELIG_CONFIG8 
J.ELIG_CONFIG9 
J.BEN_STATUS 
J.BAS_ACTION 
J.COBRA_ACTION 
J.EMPL_TYPE 
J.HOLIDAY_SCHEDULE 
J.STD_HOURS 
J.STD_HRS_FREQUENCY 
J.OFFICER_CD 
J.EMPL_CLASS 
J.SAL_ADMIN_PLAN 
J.GRADE 
J.GRADE_ENTRY_DT 
J.STEP 
J.STEP_ENTRY_DT 
J.GL_PAY_TYPE 
J.ACCT_CD 
J.EARNS_DIST_TYPE 
J.COMP_FREQUENCY 
J.COMPRATE 
J.CHANGE_AMT 
J.CHANGE_PCT 
J.ANNUAL_RT 
J.MONTHLY_RT 
J.DAILY_RT 
J.HOURLY_RT 
J.ANNL_BENEF_BASE_RT 
J.SHIFT_RT 
J.SHIFT_FACTOR 
J.CURRENCY_CD 
J.BUSINESS_UNIT 
J.SETID_DEPT 
J.SETID_JOBCODE 
J.SETID_LOCATION 
J.SETID_SALARY 
J.REG_REGION 
J.DIRECTLY_TIPPED 
J.FLSA_STATUS 
J.EEO_CLASS 
J.FUNCTION_CD 
J.TARIFF_GER 
J.TARIFF_AREA_GER 
J.PERFORM_GROUP_GER 
J.LABOR_TYPE_GER 
J.SPK_COMM_ID_GER 
J.HOURLY_RT_FRA 
J.ACCDNT_CD_FRA 
J.VALUE_1_FRA 
J.VALUE_2_FRA 
J.VALUE_3_FRA 
J.VALUE_4_FRA 
J.VALUE_5_FRA 
J.CTG_RATE 
J.PAID_HOURS 
J.PAID_FTE 
J.PAID_HRS_FREQUENCY 
J.UNION_FULL_PART 
J.UNION_POS 
J.MATRICULA_NBR 
J.SOC_SEC_RISK_CODE 
J.UNION_FEE_AMOUNT 
J.UNION_FEE_START_DT 
J.UNION_FEE_END_DT 
J.EXEMPT_JOB_LBR 
J.EXEMPT_HOURS_MONTH 
J.WRKS_CNCL_FUNCTION 
J.INTERCTR_WRKS_CNCL 
J.CURRENCY_CD1 
J.PAY_UNION_FEE 
J.UNION_CD 
J.BARG_UNIT 
J.UNION_SENIORITY_DT 
J.ENTRY_DATE 
J.LABOR_AGREEMENT 
J.EMPL_CTG 
J.EMPL_CTG_L1 
J.EMPL_CTG_L2 
J.SETID_LBR_AGRMNT 
J.WPP_STOP_FLAG 
J.LABOR_FACILITY_ID 
J.LBR_FAC_ENTRY_DT 
J.LAYOFF_EXEMPT_FLAG 
J.LAYOFF_EXEMPT_RSN 
J.GP_PAYGROUP 
J.GP_DFLT_ELIG_GRP 
J.GP_ELIG_GRP 
J.GP_DFLT_CURRTTYP 
J.CUR_RT_TYPE 
J.GP_DFLT_EXRTDT 
J.GP_ASOF_DT_EXG_RT 
J.ADDS_TO_FTE_ACTUAL 
J.CLASS_INDC 
J.ENCUMB_OVERRIDE 
J.FICA_STATUS_EE 
J.FTE 
J.PRORATE_CNT_AMT 
J.PAY_SYSTEM_FLG 
J.BORDER_WALKER 
J.LUMP_SUM_PAY 
J.CONTRACT_NUM 
J.JOB_INDICATOR 
J.WRKS_CNCL_ROLE_CHE 
J.BENEFIT_SYSTEM 
J.WORK_DAY_HOURS 
J.REPORTS_TO 
J.FORCE_PUBLISH 
J.JOB_DATA_SRC_CD 
J.ESTABID 
J.SUPV_LVL_ID 
J.SETID_SUPV_LVL 
J.ABSENCE_SYSTEM_CD 
J.POI_TYPE 
J.HIRE_DT 
J.LAST_HIRE_DT 
J.TERMINATION_DT 
J.ASGN_START_DT 
J.LST_ASGN_START_DT 
J.ASGN_END_DT 
J.LDW_OVR 
J.LAST_DATE_WORKED 
J.EXPECTED_RETURN_DT 
J.EXPECTED_END_DATE 
J.AUTO_END_FLG 
J.LASTUPDDTTM 
J.LASTUPDOPRID 
J.GEX_LIGHT_DUTY 
J.GEX_CHANGE_RECORD 
J.GEX_VOLUN_LOW_HRS 
J.GEX_STUDENT_IND 
J.GEX_MOON_IND 
J.GEX_DEPTID_OVR 
J.GEX_ACCT_CD_OVR 
J.GEX_GL_EXP_OVR 
J.GEX_STEWARD 
J.GEX_DUES_EXEMPT 
J.GEX_FINAN_CORE 
J.GEX_INFLATED_HRS 
J.GEX_FP_CODE 
J.GEX_SEASONAL_EMP

   move 'Y' to $found
   move &effseq to #effseq
   move &J.EMPL_RCD to #empl_rcd
   
       Let $reportdate_ccyy = $Asofdate
       
       if $bp_found = 'Y'
        		 LET $elig_config3 = $elig_config3
   			 else 
       			 LET $elig_config3 = &J.ELIG_CONFIG3
   		 end-if
    

   Do select-current-job-jr-row

   
FROM PS_JOB J
WHERE J.EMPLID = $emplid
  AND J.EMPL_RCD = &D.EMPL_RCD
  AND J.EFFDT = 
       (SELECT MAX(EFFDT)
	  FROM PS_JOB 
	 WHERE EMPLID = $emplid
	   AND EMPL_RCD = &D.EMPL_RCD
	   AND EFFDT <= $effdt_dbf)
  AND J.EFFSEQ = 
       (SELECT MAX(EFFSEQ)
	  FROM PS_JOB
	 WHERE EMPLID = $emplid
	   AND EMPL_RCD = &D.EMPL_RCD         
	   AND EFFDT = J.EFFDT)
end-SELECT

if $found = 'N'
   do error-found
   print 'No Job information exists for the employee' (,34)
end-if
	   
end-procedure


!*********************************************************************
!Selects maximum effdt row for the employee
!*********************************************************************
begin-procedure select-current-job-jr-row
#debug9 show 'gexbnahp.select-current-job-jr-row'

begin-select on-error=sql-error-found('select-current-job-jr-row')
J2.EMPLID 
J2.EMPL_RCD 
J2.EFFDT 
J2.EFFSEQ 
J2.LASTUPDDTTM 
J2.LASTUPDOPRID 
J2.TAXCODE_UK 
J2.TAX_BASIS_UK 
J2.WORKER_TYPE_MEX 
J2.REDUCED_WEEK_MEX 
J2.LOCATED_CD_MEX 
J2.SALARY_TYPE_MEX 
J2.IMS_TERM_DT_MEX 
J2.BALANCE_GRP_NUM 
J2.FP_ACTION_2 
J2.CTG_RATE 
J2.FP_LEGALSTAT_CD 
J2.FP_SCNDMT_CD 
J2.FP_SCND_TYP 
J2.FP_CIVIL_PENSION 
J2.FP_SOURCE_ORG 
J2.FP_RECEP_ORG 
J2.FP_RETURN_CD 
J2.FP_PR_LEGSTA 
J2.FP_FOREND_DT 
J2.FP_END_DT 
J2.FP_CAREFRZPCT 
J2.FP_HIR_DOS_SIT 
J2.FP_PT_PCT_DET 
J2.FP_TITLE_NUM 
J2.FP_DURATION_PCT 
J2.FP_RATING_PRS_FLG 
J2.FP_BUDGET_NBR 
J2.FP_HDCNT_NBR 
J2.FP_POTENT_NBR 
J2.FP_RANK_CD 
J2.FP_STEP_CD 
J2.FP_RK_ENT_DT 
J2.FP_CORPS_CD 
J2.FP_CHG_COR_DT 
J2.FP_CATG_FP 
J2.FP_CATG_LEVEL 
J2.FP_RK_TRIALPD 
J2.FP_STEP_END_DT 
J2.FP_FOR_PROM_DT 
J2.FP_NOMINATION_DT 
J2.FP_TRAINEE 
J2.FP_TRNE_POSN 
J2.FP_RK_PD_END_DT 
J2.FP_SANCTION 
J2.FP_DOWN_GRA 
J2.FP_APPL_SAL_DT 
J2.FP_CHG_IND 
J2.FP_CLD_INST 
J2.FP_SETID_RANK 
J2.FP_INSTALL_DT 
J2.FP_EQUIV_STEP 
J2.FP_STEP_CD2 
J2.FP_BUSINESS_CD 
J2.FP_APPL_DT 
J2.FP_CHG_SAL 
J2.FP_POINTYP_CD 
J2.FP_GROSS_IND 
J2.FP_INCS_IND 
J2.FP_INCS_IND2 
J2.FP_PT_PCT 
J2.FP_PT_END_DT 
J2.FP_PT_FOREND_DT 
J2.FP_COMPRATE 
J2.FP_INST_STAT 
J2.FP_RETROSPECT 
J2.FP_ROW_END_DT 
J2.LAST_UPDATE_DATE 
J2.OTHER_ID_JPN 
J2.INTCP_XFR_FLG 
J2.INTCP_XFR_START_DT 
J2.INTCP_XFR_END_DT 
J2.INTCP_BUS_UNIT 
J2.INTCP_DEPTID 
J2.INTCP_DEPTID2 
J2.INTCP_SETID_DEPT 
J2.INTCP_COMPANY 
J2.INTCP_COMPANY2 
J2.INTCP_SUPV_LVL_ID 
J2.INTCP_SUPV_LVL_ID2 
J2.START_DATE_JPN 
J2.EXP_END_DATE_JPN 
J2.END_DATE_JPN 
J2.DUTIES_TYPE 
J2.ASSIGNMENT_ID 
J2.TARGET_COMPRATE 
J2.CMP_DONT_ABSORB 
J2.SSN_EMPLOYER 
J2.UNITA_PROD_CD 
J2.ACTION_ITA 
J2.ACTION_REASON_ITA 
J2.SPECIAL_HIRCTG_ITA 
J2.PART_TIME_TYPE_ITA 
J2.PART_TIME_PERC_ITA 
J2.PARTTIME_ENDDT_ITA 
J2.WORKDAYS_NLD 
J2.CONT_SAL_TYPE_BRA 
J2.CBO_CD_BRA 
J2.SEFIP_CATEGORY_BRA 
J2.UNION_CD_ALT_BRA

FROM PS_JOB_JR J2
WHERE J2.EMPLID = $emplid
  AND J2.EMPL_RCD = &D.EMPL_RCD
  AND J2.EFFDT = 
       (SELECT MAX(EFFDT)
	  FROM PS_JOB_JR
	 WHERE EMPLID = $emplid
	   AND EMPL_RCD = &D.EMPL_RCD
	   AND EFFDT <= $effdt_dbf)
  AND J2.EFFSEQ = 
       (SELECT MAX(EFFSEQ)
	  FROM PS_JOB_JR
	 WHERE EMPLID = $emplid
	   AND EMPL_RCD = &D.EMPL_RCD         
	   AND EFFDT = J2.EFFDT)
end-select

end-procedure



!*********************************************************************
!Select the corresponding Current Compensation Row
!*********************************************************************
begin-procedure select-current-comp-row
#debug9 show 'gexbnahp.select-current-comp-row'

   move 'N' to $found_comp
   move 'N' to $errorfound

begin-select on-error=sql-error-found('select-current-comp-row')

J3.EMPLID                 
J3.EMPL_RCD               
J3.EFFDT                  
J3.EFFSEQ                 
J3.COMP_EFFSEQ            
J3.COMP_RATECD            
J3.COMP_RATE_POINTS       
J3.COMPRATE               
J3.COMP_PCT               
J3.COMP_FREQUENCY         
J3.CURRENCY_CD            
J3.MANUAL_SW              
J3.CONVERT_COMPRT         
J3.RATE_CODE_GROUP        
J3.CHANGE_AMT             
J3.CHANGE_PCT             
J3.CHANGE_PTS             
J3.FTE_INDICATOR          
J3.CMP_SRC_IND          

   move 'Y' to $found_comp

FROM PS_COMPENSATION J3

  WHERE J3.EMPLID   = $emplid
  AND   J3.EMPL_RCD = &D.empl_rcd

  AND  J3.EFFDT =
       (SELECT MAX(EFFDT) FROM PS_COMPENSATION
       WHERE J3.EMPLID      = EMPLID
         AND J3.EMPL_RCD    = EMPL_RCD
         AND EFFDT <= $effdt_Dbf)
   AND J3.EFFSEQ = 
       (SELECT MAX(EFFSEQ) FROM PS_COMPENSATION
        WHERE J3.EMPLID      = EMPLID
         AND J3.EMPL_RCD    = EMPL_RCD
         AND J3.EFFDT = EFFDT)  

end-select

  if $found_comp = 'N'
     do error-found
     print 'No Compensation info exists for the employee' (,34)
  end-if

end-procedure


!*********************************************************************
!Inserts into the job table with new config3 value 
!*********************************************************************

begin-procedure insert-job-row
#debug9 show 'gexbnahp.insert-job-row'

display 'insert-job-row'
display 'config3 : ' noline
display $elig_config3
display 'effdt_dbf : ' noline
display $effdt_dbf
show '-------> modified sqc <------' $bas_action
begin-sql on-error=sql-error-found('insert-job-row')

insert into PS_JOB
(       EMPLID,
    EMPL_RCD,
    EFFDT,
    EFFSEQ,
    PER_ORG,
    DEPTID,
    JOBCODE,
    POSITION_NBR,
    SUPERVISOR_ID,
    HR_STATUS,
    APPT_TYPE,
    MAIN_APPT_NUM_JPN,
    POSITION_OVERRIDE,
    POSN_CHANGE_RECORD,
    EMPL_STATUS,
    ACTION,
    ACTION_DT,
    ACTION_REASON,
    LOCATION,
    TAX_LOCATION_CD,
    JOB_ENTRY_DT,
    DEPT_ENTRY_DT,
    POSITION_ENTRY_DT,
    SHIFT,
    REG_TEMP,
    FULL_PART_TIME,
    COMPANY,
    PAYGROUP,
    BAS_GROUP_ID,
    ELIG_CONFIG1,
    ELIG_CONFIG2,
    ELIG_CONFIG3,
    ELIG_CONFIG4,
    ELIG_CONFIG5,
    ELIG_CONFIG6,
    ELIG_CONFIG7,
    ELIG_CONFIG8,
    ELIG_CONFIG9,
    BEN_STATUS,
    BAS_ACTION,
    COBRA_ACTION,
    EMPL_TYPE,
    HOLIDAY_SCHEDULE,
    STD_HOURS,
    STD_HRS_FREQUENCY,
    OFFICER_CD,
    EMPL_CLASS,
    SAL_ADMIN_PLAN,
    GRADE,
    GRADE_ENTRY_DT,
    STEP,
    STEP_ENTRY_DT,
    GL_PAY_TYPE,
    ACCT_CD,
    EARNS_DIST_TYPE,
    COMP_FREQUENCY,
    COMPRATE,
    CHANGE_AMT,
    CHANGE_PCT,
    ANNUAL_RT,
    MONTHLY_RT,
    DAILY_RT,
    HOURLY_RT,
    ANNL_BENEF_BASE_RT,
    SHIFT_RT,
    SHIFT_FACTOR,
    CURRENCY_CD,
    BUSINESS_UNIT,
    SETID_DEPT,
    SETID_JOBCODE,
    SETID_LOCATION,
    SETID_SALARY,
    REG_REGION,
    DIRECTLY_TIPPED,
    FLSA_STATUS,
    EEO_CLASS,
    FUNCTION_CD,
    TARIFF_GER,
    TARIFF_AREA_GER,
    PERFORM_GROUP_GER,
    LABOR_TYPE_GER,
    SPK_COMM_ID_GER,
    HOURLY_RT_FRA,
    ACCDNT_CD_FRA,
    VALUE_1_FRA,
    VALUE_2_FRA,
    VALUE_3_FRA,
    VALUE_4_FRA,
    VALUE_5_FRA,
    CTG_RATE,
    PAID_HOURS,
    PAID_FTE,
    PAID_HRS_FREQUENCY,
    UNION_FULL_PART,
    UNION_POS,
    MATRICULA_NBR,
    SOC_SEC_RISK_CODE,
    UNION_FEE_AMOUNT,
    UNION_FEE_START_DT,
    UNION_FEE_END_DT,
    EXEMPT_JOB_LBR,
    EXEMPT_HOURS_MONTH,
    WRKS_CNCL_FUNCTION,
    INTERCTR_WRKS_CNCL,
    CURRENCY_CD1,
    PAY_UNION_FEE,
    UNION_CD,
    BARG_UNIT,
    UNION_SENIORITY_DT,
    ENTRY_DATE,
    LABOR_AGREEMENT,
    EMPL_CTG,
    EMPL_CTG_L1,
    EMPL_CTG_L2,
    SETID_LBR_AGRMNT,
    WPP_STOP_FLAG,
    LABOR_FACILITY_ID,
    LBR_FAC_ENTRY_DT,
    LAYOFF_EXEMPT_FLAG,
    LAYOFF_EXEMPT_RSN,
    GP_PAYGROUP,
    GP_DFLT_ELIG_GRP,
    GP_ELIG_GRP,
    GP_DFLT_CURRTTYP,
    CUR_RT_TYPE,
    GP_DFLT_EXRTDT,
    GP_ASOF_DT_EXG_RT,
    ADDS_TO_FTE_ACTUAL,
    CLASS_INDC,
    ENCUMB_OVERRIDE,
    FICA_STATUS_EE,
    FTE,
    PRORATE_CNT_AMT,
    PAY_SYSTEM_FLG,
    BORDER_WALKER,
    LUMP_SUM_PAY,
    CONTRACT_NUM,
    JOB_INDICATOR,
    WRKS_CNCL_ROLE_CHE,
    BENEFIT_SYSTEM,
    WORK_DAY_HOURS,
    REPORTS_TO,
    FORCE_PUBLISH,
    JOB_DATA_SRC_CD,
    ESTABID,
    SUPV_LVL_ID,
    SETID_SUPV_LVL,
    ABSENCE_SYSTEM_CD,
    POI_TYPE,
    HIRE_DT,
    LAST_HIRE_DT,
    TERMINATION_DT,
    ASGN_START_DT,
    LST_ASGN_START_DT,
    ASGN_END_DT,
    LDW_OVR,
    LAST_DATE_WORKED,
    EXPECTED_RETURN_DT,
    EXPECTED_END_DATE,
    AUTO_END_FLG,
    LASTUPDDTTM,
    LASTUPDOPRID,
    GEX_LIGHT_DUTY,
    GEX_CHANGE_RECORD,
    GEX_VOLUN_LOW_HRS,
    GEX_STUDENT_IND,
    GEX_MOON_IND,
    GEX_DEPTID_OVR,
    GEX_ACCT_CD_OVR,
    GEX_GL_EXP_OVR,
    GEX_STEWARD,
    GEX_DUES_EXEMPT,
    GEX_FINAN_CORE,
    GEX_INFLATED_HRS,
    GEX_FP_CODE,
    GEX_SEASONAL_EMP
)
VALUES
(&J.EMPLID,
&J.EMPL_RCD,
$effdt_dbf,
0,
&J.PER_ORG,
&J.DEPTID,
&J.JOBCODE,
&J.POSITION_NBR,
&J.SUPERVISOR_ID,
&J.HR_STATUS,
&J.APPT_TYPE,
&J.MAIN_APPT_NUM_JPN,
&J.POSITION_OVERRIDE,
&J.POSN_CHANGE_RECORD,
&J.EMPL_STATUS,
'DTA', 
$reportdate_ccyy, 
'CHG', 
&J.LOCATION,
&J.TAX_LOCATION_CD,
&J.JOB_ENTRY_DT,
&J.DEPT_ENTRY_DT,
&J.POSITION_ENTRY_DT,
&J.SHIFT,
&J.REG_TEMP,
&J.FULL_PART_TIME,
&J.COMPANY,
&J.PAYGROUP,
&J.BAS_GROUP_ID,
&J.ELIG_CONFIG1,
&J.ELIG_CONFIG2,
$elig_config3, 
&J.ELIG_CONFIG4,
&J.ELIG_CONFIG5,
&J.ELIG_CONFIG6,
&J.ELIG_CONFIG7,
&J.ELIG_CONFIG8,
&J.ELIG_CONFIG9,
&J.BEN_STATUS,
$bas_Action,    
&J.COBRA_ACTION,
&J.EMPL_TYPE,
&J.HOLIDAY_SCHEDULE,
&J.STD_HOURS,
&J.STD_HRS_FREQUENCY,
&J.OFFICER_CD,
&J.EMPL_CLASS,
&J.SAL_ADMIN_PLAN,
&J.GRADE,
&J.GRADE_ENTRY_DT,
&J.STEP,
&J.STEP_ENTRY_DT,
&J.GL_PAY_TYPE,
&J.ACCT_CD,
&J.EARNS_DIST_TYPE,
&J.COMP_FREQUENCY,
&J.COMPRATE,
&J.CHANGE_AMT,
&J.CHANGE_PCT,
&J.ANNUAL_RT,
&J.MONTHLY_RT,
&J.DAILY_RT,
&J.HOURLY_RT,
&J.ANNL_BENEF_BASE_RT,
&J.SHIFT_RT,
&J.SHIFT_FACTOR,
&J.CURRENCY_CD,
&J.BUSINESS_UNIT,
&J.SETID_DEPT,
&J.SETID_JOBCODE,
&J.SETID_LOCATION,
&J.SETID_SALARY,
&J.REG_REGION,
&J.DIRECTLY_TIPPED,
&J.FLSA_STATUS,
&J.EEO_CLASS,
&J.FUNCTION_CD,
&J.TARIFF_GER,
&J.TARIFF_AREA_GER,
&J.PERFORM_GROUP_GER,
&J.LABOR_TYPE_GER,
&J.SPK_COMM_ID_GER,
&J.HOURLY_RT_FRA,
&J.ACCDNT_CD_FRA,
&J.VALUE_1_FRA,
&J.VALUE_2_FRA,
&J.VALUE_3_FRA,
&J.VALUE_4_FRA,
&J.VALUE_5_FRA,
&J.CTG_RATE,
&J.PAID_HOURS,
&J.PAID_FTE,
&J.PAID_HRS_FREQUENCY,
&J.UNION_FULL_PART,
&J.UNION_POS,
&J.MATRICULA_NBR,
&J.SOC_SEC_RISK_CODE,
&J.UNION_FEE_AMOUNT,
&J.UNION_FEE_START_DT,
&J.UNION_FEE_END_DT,
&J.EXEMPT_JOB_LBR,
&J.EXEMPT_HOURS_MONTH,
&J.WRKS_CNCL_FUNCTION,
&J.INTERCTR_WRKS_CNCL,
&J.CURRENCY_CD1,
&J.PAY_UNION_FEE,
&J.UNION_CD,
&J.BARG_UNIT,
&J.UNION_SENIORITY_DT,
&J.ENTRY_DATE,
&J.LABOR_AGREEMENT,
&J.EMPL_CTG,
&J.EMPL_CTG_L1,
&J.EMPL_CTG_L2,
&J.SETID_LBR_AGRMNT,
&J.WPP_STOP_FLAG,
&J.LABOR_FACILITY_ID,
&J.LBR_FAC_ENTRY_DT,
&J.LAYOFF_EXEMPT_FLAG,
&J.LAYOFF_EXEMPT_RSN,
&J.GP_PAYGROUP,
&J.GP_DFLT_ELIG_GRP,
&J.GP_ELIG_GRP,
&J.GP_DFLT_CURRTTYP,
&J.CUR_RT_TYPE,
&J.GP_DFLT_EXRTDT,
&J.GP_ASOF_DT_EXG_RT,
&J.ADDS_TO_FTE_ACTUAL,
&J.CLASS_INDC,
&J.ENCUMB_OVERRIDE,
&J.FICA_STATUS_EE,
&J.FTE,
&J.PRORATE_CNT_AMT,
&J.PAY_SYSTEM_FLG,
&J.BORDER_WALKER,
&J.LUMP_SUM_PAY,
&J.CONTRACT_NUM,
&J.JOB_INDICATOR,
&J.WRKS_CNCL_ROLE_CHE,
&J.BENEFIT_SYSTEM,
&J.WORK_DAY_HOURS,
&J.REPORTS_TO,
&J.FORCE_PUBLISH,
&J.JOB_DATA_SRC_CD,
&J.ESTABID,
&J.SUPV_LVL_ID,
&J.SETID_SUPV_LVL,
&J.ABSENCE_SYSTEM_CD,
&J.POI_TYPE,
&J.HIRE_DT,
&J.LAST_HIRE_DT,
&J.TERMINATION_DT,
&J.ASGN_START_DT,
&J.LST_ASGN_START_DT,
&J.ASGN_END_DT,
&J.LDW_OVR,
'',   
&J.EXPECTED_RETURN_DT,
&J.EXPECTED_END_DATE,
&J.AUTO_END_FLG,
SYSDATE,
'SYSTEM', 
&J.GEX_LIGHT_DUTY,
'Y',
&J.GEX_VOLUN_LOW_HRS,
&J.GEX_STUDENT_IND,
&J.GEX_MOON_IND,
&J.GEX_DEPTID_OVR,
&J.GEX_ACCT_CD_OVR,
&J.GEX_GL_EXP_OVR,
&J.GEX_STEWARD,
&J.GEX_DUES_EXEMPT,
&J.GEX_FINAN_CORE,
&J.GEX_INFLATED_HRS,
&J.GEX_FP_CODE,
&J.GEX_SEASONAL_EMP
)
end-sql

end-procedure


!*********************************************************************
!Inserts into the job_jr table to match job row with new config3 value 
!*********************************************************************
begin-procedure insert-job-jr-row
#debug9 show 'gexbnahp.insert-job-jr-row'

 
begin-sql on-error=sql-error-found('insert-job-jr-row')

insert into PS_JOB_JR
(       EMPLID,
    EMPL_RCD,
    EFFDT,
    EFFSEQ,
    LASTUPDDTTM,
    LASTUPDOPRID,
    TAXCODE_UK,
    TAX_BASIS_UK,
    WORKER_TYPE_MEX,
    REDUCED_WEEK_MEX,
    LOCATED_CD_MEX,
    SALARY_TYPE_MEX,
    IMS_TERM_DT_MEX,
    BALANCE_GRP_NUM,
    FP_ACTION_2,
    CTG_RATE,
    FP_LEGALSTAT_CD,
    FP_SCNDMT_CD,
    FP_SCND_TYP,
    FP_CIVIL_PENSION,
    FP_SOURCE_ORG,
    FP_RECEP_ORG,
    FP_RETURN_CD,
    FP_PR_LEGSTA,
    FP_FOREND_DT,
    FP_END_DT,
    FP_CAREFRZPCT,
    FP_HIR_DOS_SIT,
    FP_PT_PCT_DET,
    FP_TITLE_NUM,
    FP_DURATION_PCT,
    FP_RATING_PRS_FLG,
    FP_BUDGET_NBR,
    FP_HDCNT_NBR,
    FP_POTENT_NBR,
    FP_RANK_CD,
    FP_STEP_CD,
    FP_RK_ENT_DT,
    FP_CORPS_CD,
    FP_CHG_COR_DT,
    FP_CATG_FP,
    FP_CATG_LEVEL,
    FP_RK_TRIALPD,
    FP_STEP_END_DT,
    FP_FOR_PROM_DT,
    FP_NOMINATION_DT,
    FP_TRAINEE,
    FP_TRNE_POSN,
    FP_RK_PD_END_DT,
    FP_SANCTION,
    FP_DOWN_GRA,
    FP_APPL_SAL_DT,
    FP_CHG_IND,
    FP_CLD_INST,
    FP_SETID_RANK,
    FP_INSTALL_DT,
    FP_EQUIV_STEP,
    FP_STEP_CD2,
    FP_BUSINESS_CD,
    FP_APPL_DT,
    FP_CHG_SAL,
    FP_POINTYP_CD,
    FP_GROSS_IND,
    FP_INCS_IND,
    FP_INCS_IND2,
    FP_PT_PCT,
    FP_PT_END_DT,
    FP_PT_FOREND_DT,
    FP_COMPRATE,
    FP_INST_STAT,
    FP_RETROSPECT,
    FP_ROW_END_DT,
    LAST_UPDATE_DATE,
    OTHER_ID_JPN,
    INTCP_XFR_FLG,
    INTCP_XFR_START_DT,
    INTCP_XFR_END_DT,
    INTCP_BUS_UNIT,
    INTCP_DEPTID,
    INTCP_DEPTID2,
    INTCP_SETID_DEPT,
    INTCP_COMPANY,
    INTCP_COMPANY2,
    INTCP_SUPV_LVL_ID,
    INTCP_SUPV_LVL_ID2,
    START_DATE_JPN,
    EXP_END_DATE_JPN,
    END_DATE_JPN,
    DUTIES_TYPE,
    ASSIGNMENT_ID,
    TARGET_COMPRATE,
    CMP_DONT_ABSORB,
    SSN_EMPLOYER,
    UNITA_PROD_CD,
    ACTION_ITA,
    ACTION_REASON_ITA,
    SPECIAL_HIRCTG_ITA,
    PART_TIME_TYPE_ITA,
    PART_TIME_PERC_ITA,
    PARTTIME_ENDDT_ITA,
    WORKDAYS_NLD,
    CONT_SAL_TYPE_BRA,
    CBO_CD_BRA,
    SEFIP_CATEGORY_BRA,
    UNION_CD_ALT_BRA
)
VALUES
(&J2.EMPLID,
&J2.EMPL_RCD,
$effdt_dbf,
0,
SYSDATE,
'SYSTEM', 
&J2.TAXCODE_UK,
&J2.TAX_BASIS_UK,
&J2.WORKER_TYPE_MEX,
&J2.REDUCED_WEEK_MEX,
&J2.LOCATED_CD_MEX,
&J2.SALARY_TYPE_MEX,
&J2.IMS_TERM_DT_MEX,
&J2.BALANCE_GRP_NUM,
&J2.FP_ACTION_2,
&J2.CTG_RATE,
&J2.FP_LEGALSTAT_CD,
&J2.FP_SCNDMT_CD,
&J2.FP_SCND_TYP,
&J2.FP_CIVIL_PENSION,
&J2.FP_SOURCE_ORG,
&J2.FP_RECEP_ORG,
&J2.FP_RETURN_CD,
&J2.FP_PR_LEGSTA,
&J2.FP_FOREND_DT,
&J2.FP_END_DT,
&J2.FP_CAREFRZPCT,
&J2.FP_HIR_DOS_SIT,
&J2.FP_PT_PCT_DET,
&J2.FP_TITLE_NUM,
&J2.FP_DURATION_PCT,
&J2.FP_RATING_PRS_FLG,
&J2.FP_BUDGET_NBR,
&J2.FP_HDCNT_NBR,
&J2.FP_POTENT_NBR,
&J2.FP_RANK_CD,
&J2.FP_STEP_CD,
&J2.FP_RK_ENT_DT,
&J2.FP_CORPS_CD,
&J2.FP_CHG_COR_DT,
&J2.FP_CATG_FP,
&J2.FP_CATG_LEVEL,
&J2.FP_RK_TRIALPD,
&J2.FP_STEP_END_DT,
&J2.FP_FOR_PROM_DT,
&J2.FP_NOMINATION_DT,
&J2.FP_TRAINEE,
&J2.FP_TRNE_POSN,
&J2.FP_RK_PD_END_DT,
&J2.FP_SANCTION,
&J2.FP_DOWN_GRA,
&J2.FP_APPL_SAL_DT,
&J2.FP_CHG_IND,
&J2.FP_CLD_INST,
&J2.FP_SETID_RANK,
&J2.FP_INSTALL_DT,
&J2.FP_EQUIV_STEP,
&J2.FP_STEP_CD2,
&J2.FP_BUSINESS_CD,
&J2.FP_APPL_DT,
&J2.FP_CHG_SAL,
&J2.FP_POINTYP_CD,
&J2.FP_GROSS_IND,
&J2.FP_INCS_IND,
&J2.FP_INCS_IND2,
&J2.FP_PT_PCT,
&J2.FP_PT_END_DT,
&J2.FP_PT_FOREND_DT,
&J2.FP_COMPRATE,
&J2.FP_INST_STAT,
&J2.FP_RETROSPECT,
&J2.FP_ROW_END_DT,
&J2.LAST_UPDATE_DATE,
&J2.OTHER_ID_JPN,
&J2.INTCP_XFR_FLG,
&J2.INTCP_XFR_START_DT,
&J2.INTCP_XFR_END_DT,
&J2.INTCP_BUS_UNIT,
&J2.INTCP_DEPTID,
&J2.INTCP_DEPTID2,
&J2.INTCP_SETID_DEPT,
&J2.INTCP_COMPANY,
&J2.INTCP_COMPANY2,
&J2.INTCP_SUPV_LVL_ID,
&J2.INTCP_SUPV_LVL_ID2,
&J2.START_DATE_JPN,
&J2.EXP_END_DATE_JPN,
&J2.END_DATE_JPN,
&J2.DUTIES_TYPE,
&J2.ASSIGNMENT_ID,
&J2.TARGET_COMPRATE,
&J2.CMP_DONT_ABSORB,
&J2.SSN_EMPLOYER,
&J2.UNITA_PROD_CD,
&J2.ACTION_ITA,
&J2.ACTION_REASON_ITA,
&J2.SPECIAL_HIRCTG_ITA,
&J2.PART_TIME_TYPE_ITA,
&J2.PART_TIME_PERC_ITA,
&J2.PARTTIME_ENDDT_ITA,
&J2.WORKDAYS_NLD,
&J2.CONT_SAL_TYPE_BRA,
&J2.CBO_CD_BRA,
&J2.SEFIP_CATEGORY_BRA,
&J2.UNION_CD_ALT_BRA
)
end-sql
end-procedure

!********************************************************************
begin-procedure insert-compensation-row
!********************************************************************
   #debug9 show 'gexbnahp.insert-compensation-row'
   

begin-SQL on-error=sql-error-found('insert-compensation-row')
Insert into ps_compensation
(EMPLID,
EMPL_RCD,
EFFDT,
EFFSEQ,
COMP_EFFSEQ,
COMP_RATECD,
COMP_RATE_POINTS,
COMPRATE,
COMP_PCT,
COMP_FREQUENCY,
CURRENCY_CD,
MANUAL_SW,
CONVERT_COMPRT,
RATE_CODE_GROUP,
CHANGE_AMT,
CHANGE_PCT,
CHANGE_PTS,
FTE_INDICATOR,
CMP_SRC_IND
)
values
(&J3.EMPLID,                 
&J3.EMPL_RCD,               
$effdt_dbf,
0,      
&J3.COMP_EFFSEQ,            
&J3.COMP_RATECD,            
&J3.COMP_RATE_POINTS,       
&J3.COMPRATE,               
&J3.COMP_PCT,               
&J3.COMP_FREQUENCY,         
&J3.CURRENCY_CD,            
&J3.MANUAL_SW,              
&J3.CONVERT_COMPRT,         
&J3.RATE_CODE_GROUP,        
&J3.CHANGE_AMT,             
&J3.CHANGE_PCT,             
&J3.CHANGE_PTS,             
&J3.FTE_INDICATOR,          
&J3.CMP_SRC_IND   
)

end-sql

end-procedure
!GBD 08/23/2002 End

!*********************************************************************
!Inserts into job table with new config3 value
!*********************************************************************

begin-procedure insert-job-row-effdt-exists
#debug9 show 'gexbnahp.insert-job-row-effdt-exists'

display 'insert=job-row-effdt-exists'
display 'config3 : ' noline
display $elig_config3
let $temp_4to10 = substr($elig_config3,4,7)
let $temp_1to3 = substr(&I.ELIG_CONFIG3,1,3)
let $elig_config3 = $temp_1to3||$temp_4to10
display 'config3:' noline
display $elig_config3

begin-sql on-error=sql-error-found('insert-job-row-effdt-exists')
INSERT INTO PS_JOB
(       EMPLID,
    EMPL_RCD,
    EFFDT,
    EFFSEQ,
    PER_ORG,
    DEPTID,
    JOBCODE,
    POSITION_NBR,
    SUPERVISOR_ID,
    HR_STATUS,
    APPT_TYPE,
    MAIN_APPT_NUM_JPN,
    POSITION_OVERRIDE,
    POSN_CHANGE_RECORD,
    EMPL_STATUS,
    ACTION,
    ACTION_DT,
    ACTION_REASON,
    LOCATION,
    TAX_LOCATION_CD,
    JOB_ENTRY_DT,
    DEPT_ENTRY_DT,
    POSITION_ENTRY_DT,
    SHIFT,
    REG_TEMP,
    FULL_PART_TIME,
    COMPANY,
    PAYGROUP,
    BAS_GROUP_ID,
    ELIG_CONFIG1,
    ELIG_CONFIG2,
    ELIG_CONFIG3,
    ELIG_CONFIG4,
    ELIG_CONFIG5,
    ELIG_CONFIG6,
    ELIG_CONFIG7,
    ELIG_CONFIG8,
    ELIG_CONFIG9,
    BEN_STATUS,
    BAS_ACTION,
    COBRA_ACTION,
    EMPL_TYPE,
    HOLIDAY_SCHEDULE,
    STD_HOURS,
    STD_HRS_FREQUENCY,
    OFFICER_CD,
    EMPL_CLASS,
    SAL_ADMIN_PLAN,
    GRADE,
    GRADE_ENTRY_DT,
    STEP,
    STEP_ENTRY_DT,
    GL_PAY_TYPE,
    ACCT_CD,
    EARNS_DIST_TYPE,
    COMP_FREQUENCY,
    COMPRATE,
    CHANGE_AMT,
    CHANGE_PCT,
    ANNUAL_RT,
    MONTHLY_RT,
    DAILY_RT,
    HOURLY_RT,
    ANNL_BENEF_BASE_RT,
    SHIFT_RT,
    SHIFT_FACTOR,
    CURRENCY_CD,
    BUSINESS_UNIT,
    SETID_DEPT,
    SETID_JOBCODE,
    SETID_LOCATION,
    SETID_SALARY,
    REG_REGION,
    DIRECTLY_TIPPED,
    FLSA_STATUS,
    EEO_CLASS,
    FUNCTION_CD,
    TARIFF_GER,
    TARIFF_AREA_GER,
    PERFORM_GROUP_GER,
    LABOR_TYPE_GER,
    SPK_COMM_ID_GER,
    HOURLY_RT_FRA,
    ACCDNT_CD_FRA,
    VALUE_1_FRA,
    VALUE_2_FRA,
    VALUE_3_FRA,
    VALUE_4_FRA,
    VALUE_5_FRA,
    CTG_RATE,
    PAID_HOURS,
    PAID_FTE,
    PAID_HRS_FREQUENCY,
    UNION_FULL_PART,
    UNION_POS,
    MATRICULA_NBR,
    SOC_SEC_RISK_CODE,
    UNION_FEE_AMOUNT,
    UNION_FEE_START_DT,
    UNION_FEE_END_DT,
    EXEMPT_JOB_LBR,
    EXEMPT_HOURS_MONTH,
    WRKS_CNCL_FUNCTION,
    INTERCTR_WRKS_CNCL,
    CURRENCY_CD1,
    PAY_UNION_FEE,
    UNION_CD,
    BARG_UNIT,
    UNION_SENIORITY_DT,
    ENTRY_DATE,
    LABOR_AGREEMENT,
    EMPL_CTG,
    EMPL_CTG_L1,
    EMPL_CTG_L2,
    SETID_LBR_AGRMNT,
    WPP_STOP_FLAG,
    LABOR_FACILITY_ID,
    LBR_FAC_ENTRY_DT,
    LAYOFF_EXEMPT_FLAG,
    LAYOFF_EXEMPT_RSN,
    GP_PAYGROUP,
    GP_DFLT_ELIG_GRP,
    GP_ELIG_GRP,
    GP_DFLT_CURRTTYP,
    CUR_RT_TYPE,
    GP_DFLT_EXRTDT,
    GP_ASOF_DT_EXG_RT,
    ADDS_TO_FTE_ACTUAL,
    CLASS_INDC,
    ENCUMB_OVERRIDE,
    FICA_STATUS_EE,
    FTE,
    PRORATE_CNT_AMT,
    PAY_SYSTEM_FLG,
    BORDER_WALKER,
    LUMP_SUM_PAY,
    CONTRACT_NUM,
    JOB_INDICATOR,
    WRKS_CNCL_ROLE_CHE,
    BENEFIT_SYSTEM,
    WORK_DAY_HOURS,
    REPORTS_TO,
    FORCE_PUBLISH,
    JOB_DATA_SRC_CD,
    ESTABID,
    SUPV_LVL_ID,
    SETID_SUPV_LVL,
    ABSENCE_SYSTEM_CD,
    POI_TYPE,
    HIRE_DT,
    LAST_HIRE_DT,
    TERMINATION_DT,
    ASGN_START_DT,
    LST_ASGN_START_DT,
    ASGN_END_DT,
    LDW_OVR,
    LAST_DATE_WORKED,
    EXPECTED_RETURN_DT,
    EXPECTED_END_DATE,
    AUTO_END_FLG,
    LASTUPDDTTM,
    LASTUPDOPRID,
    GEX_LIGHT_DUTY,
    GEX_CHANGE_RECORD,
    GEX_VOLUN_LOW_HRS,
    GEX_STUDENT_IND,
    GEX_MOON_IND,
    GEX_DEPTID_OVR,
    GEX_ACCT_CD_OVR,
    GEX_GL_EXP_OVR,
    GEX_STEWARD,
    GEX_DUES_EXEMPT,
    GEX_FINAN_CORE,
    GEX_INFLATED_HRS,
    GEX_FP_CODE,
    GEX_SEASONAL_EMP
)
VALUES
(&I.EMPLID,
&I.EMPL_RCD,
&I.EFFDT,
#effseq,
&I.PER_ORG,
&I.DEPTID,
&I.JOBCODE,
&I.POSITION_NBR,
&I.SUPERVISOR_ID,
&I.HR_STATUS,
&I.APPT_TYPE,
&I.MAIN_APPT_NUM_JPN,
&I.POSITION_OVERRIDE,
&I.POSN_CHANGE_RECORD,
&I.EMPL_STATUS,
'DTA', 
$reportdate_ccyy, 
'CHG', 
&I.LOCATION,
&I.TAX_LOCATION_CD,
&I.JOB_ENTRY_DT,
&I.DEPT_ENTRY_DT,
&I.POSITION_ENTRY_DT,
&I.SHIFT,
&I.REG_TEMP,
&I.FULL_PART_TIME,
&I.COMPANY,
&I.PAYGROUP,
&I.BAS_GROUP_ID,
&I.ELIG_CONFIG1,
&I.ELIG_CONFIG2,
$elig_config3, 
&I.ELIG_CONFIG4,
&I.ELIG_CONFIG5,
&I.ELIG_CONFIG6,
&I.ELIG_CONFIG7,
&I.ELIG_CONFIG8,
&I.ELIG_CONFIG9,
&I.BEN_STATUS,
$bas_action,            
&I.COBRA_ACTION,
&I.EMPL_TYPE,
&I.HOLIDAY_SCHEDULE,
&I.STD_HOURS,
&I.STD_HRS_FREQUENCY,
&I.OFFICER_CD,
&I.EMPL_CLASS,
&I.SAL_ADMIN_PLAN,
&I.GRADE,
&I.GRADE_ENTRY_DT,
&I.STEP,
&I.STEP_ENTRY_DT,
&I.GL_PAY_TYPE,
&I.ACCT_CD,
&I.EARNS_DIST_TYPE,
&I.COMP_FREQUENCY,
&I.COMPRATE,
&I.CHANGE_AMT,
&I.CHANGE_PCT,
&I.ANNUAL_RT,
&I.MONTHLY_RT,
&I.DAILY_RT,
&I.HOURLY_RT,
&I.ANNL_BENEF_BASE_RT,
&I.SHIFT_RT,
&I.SHIFT_FACTOR,
&I.CURRENCY_CD,
&I.BUSINESS_UNIT,
&I.SETID_DEPT,
&I.SETID_JOBCODE,
&I.SETID_LOCATION,
&I.SETID_SALARY,
&I.REG_REGION,
&I.DIRECTLY_TIPPED,
&I.FLSA_STATUS,
&I.EEO_CLASS,
&I.FUNCTION_CD,
&I.TARIFF_GER,
&I.TARIFF_AREA_GER,
&I.PERFORM_GROUP_GER,
&I.LABOR_TYPE_GER,
&I.SPK_COMM_ID_GER,
&I.HOURLY_RT_FRA,
&I.ACCDNT_CD_FRA,
&I.VALUE_1_FRA,
&I.VALUE_2_FRA,
&I.VALUE_3_FRA,
&I.VALUE_4_FRA,
&I.VALUE_5_FRA,
&I.CTG_RATE,
&I.PAID_HOURS,
&I.PAID_FTE,
&I.PAID_HRS_FREQUENCY,
&I.UNION_FULL_PART,
&I.UNION_POS,
&I.MATRICULA_NBR,
&I.SOC_SEC_RISK_CODE,
&I.UNION_FEE_AMOUNT,
&I.UNION_FEE_START_DT,
&I.UNION_FEE_END_DT,
&I.EXEMPT_JOB_LBR,
&I.EXEMPT_HOURS_MONTH,
&I.WRKS_CNCL_FUNCTION,
&I.INTERCTR_WRKS_CNCL,
&I.CURRENCY_CD1,
&I.PAY_UNION_FEE,
&I.UNION_CD,
&I.BARG_UNIT,
&I.UNION_SENIORITY_DT,
&I.ENTRY_DATE,
&I.LABOR_AGREEMENT,
&I.EMPL_CTG,
&I.EMPL_CTG_L1,
&I.EMPL_CTG_L2,
&I.SETID_LBR_AGRMNT,
&I.WPP_STOP_FLAG,
&I.LABOR_FACILITY_ID,
&I.LBR_FAC_ENTRY_DT,
&I.LAYOFF_EXEMPT_FLAG,
&I.LAYOFF_EXEMPT_RSN,
&I.GP_PAYGROUP,
&I.GP_DFLT_ELIG_GRP,
&I.GP_ELIG_GRP,
&I.GP_DFLT_CURRTTYP,
&I.CUR_RT_TYPE,
&I.GP_DFLT_EXRTDT,
&I.GP_ASOF_DT_EXG_RT,
&I.ADDS_TO_FTE_ACTUAL,
&I.CLASS_INDC,
&I.ENCUMB_OVERRIDE,
&I.FICA_STATUS_EE,
&I.FTE,
&I.PRORATE_CNT_AMT,
&I.PAY_SYSTEM_FLG,
&I.BORDER_WALKER,
&I.LUMP_SUM_PAY,
&I.CONTRACT_NUM,
&I.JOB_INDICATOR,
&I.WRKS_CNCL_ROLE_CHE,
&I.BENEFIT_SYSTEM,
&I.WORK_DAY_HOURS,
&I.REPORTS_TO,
&I.FORCE_PUBLISH,
&I.JOB_DATA_SRC_CD,
&I.ESTABID,
&I.SUPV_LVL_ID,
&I.SETID_SUPV_LVL,
&I.ABSENCE_SYSTEM_CD,
&I.POI_TYPE,
&I.HIRE_DT,
&I.LAST_HIRE_DT,
&I.TERMINATION_DT,
&I.ASGN_START_DT,
&I.LST_ASGN_START_DT,
&I.ASGN_END_DT,
&I.LDW_OVR,
'',
&I.EXPECTED_RETURN_DT,
&I.EXPECTED_END_DATE,
&I.AUTO_END_FLG,
SYSDATE,
'SYSTEM',
&I.GEX_LIGHT_DUTY,
'Y',
&I.GEX_VOLUN_LOW_HRS,
&I.GEX_STUDENT_IND,
&I.GEX_MOON_IND,
&I.GEX_DEPTID_OVR,
&I.GEX_ACCT_CD_OVR,
&I.GEX_GL_EXP_OVR,
&I.GEX_STEWARD,
&I.GEX_DUES_EXEMPT,
&I.GEX_FINAN_CORE,
&I.GEX_INFLATED_HRS,
&I.GEX_FP_CODE,
&I.GEX_SEASONAL_EMP
)
end-sql
end-procedure

!GBD 08/01/2002 Begin
!*********************************************************************
!Inserts into the job_jr table to match job row with new config value 
!*********************************************************************
begin-procedure insert-job-jr-row-effdt-exists
#debug9 show 'gexbnahp.insert-job-jr-row-effdt-exists'


begin-sql on-error=sql-error-found('insert-job-jr-row-effdt-exists')

insert into PS_JOB_JR
(       EMPLID,
    EMPL_RCD,
    EFFDT,
    EFFSEQ,
    LASTUPDDTTM,
    LASTUPDOPRID,
    TAXCODE_UK,
    TAX_BASIS_UK,
    WORKER_TYPE_MEX,
    REDUCED_WEEK_MEX,
    LOCATED_CD_MEX,
    SALARY_TYPE_MEX,
    IMS_TERM_DT_MEX,
    BALANCE_GRP_NUM,
    FP_ACTION_2,
    CTG_RATE,
    FP_LEGALSTAT_CD,
    FP_SCNDMT_CD,
    FP_SCND_TYP,
    FP_CIVIL_PENSION,
    FP_SOURCE_ORG,
    FP_RECEP_ORG,
    FP_RETURN_CD,
    FP_PR_LEGSTA,
    FP_FOREND_DT,
    FP_END_DT,
    FP_CAREFRZPCT,
    FP_HIR_DOS_SIT,
    FP_PT_PCT_DET,
    FP_TITLE_NUM,
    FP_DURATION_PCT,
    FP_RATING_PRS_FLG,
    FP_BUDGET_NBR,
    FP_HDCNT_NBR,
    FP_POTENT_NBR,
    FP_RANK_CD,
    FP_STEP_CD,
    FP_RK_ENT_DT,
    FP_CORPS_CD,
    FP_CHG_COR_DT,
    FP_CATG_FP,
    FP_CATG_LEVEL,
    FP_RK_TRIALPD,
    FP_STEP_END_DT,
    FP_FOR_PROM_DT,
    FP_NOMINATION_DT,
    FP_TRAINEE,
    FP_TRNE_POSN,
    FP_RK_PD_END_DT,
    FP_SANCTION,
    FP_DOWN_GRA,
    FP_APPL_SAL_DT,
    FP_CHG_IND,
    FP_CLD_INST,
    FP_SETID_RANK,
    FP_INSTALL_DT,
    FP_EQUIV_STEP,
    FP_STEP_CD2,
    FP_BUSINESS_CD,
    FP_APPL_DT,
    FP_CHG_SAL,
    FP_POINTYP_CD,
    FP_GROSS_IND,
    FP_INCS_IND,
    FP_INCS_IND2,
    FP_PT_PCT,
    FP_PT_END_DT,
    FP_PT_FOREND_DT,
    FP_COMPRATE,
    FP_INST_STAT,
    FP_RETROSPECT,
    FP_ROW_END_DT,
    LAST_UPDATE_DATE,
    OTHER_ID_JPN,
    INTCP_XFR_FLG,
    INTCP_XFR_START_DT,
    INTCP_XFR_END_DT,
    INTCP_BUS_UNIT,
    INTCP_DEPTID,
    INTCP_DEPTID2,
    INTCP_SETID_DEPT,
    INTCP_COMPANY,
    INTCP_COMPANY2,
    INTCP_SUPV_LVL_ID,
    INTCP_SUPV_LVL_ID2,
    START_DATE_JPN,
    EXP_END_DATE_JPN,
    END_DATE_JPN,
    DUTIES_TYPE,
    ASSIGNMENT_ID,
    TARGET_COMPRATE,
    CMP_DONT_ABSORB,
    SSN_EMPLOYER,
    UNITA_PROD_CD,
    ACTION_ITA,
    ACTION_REASON_ITA,
    SPECIAL_HIRCTG_ITA,
    PART_TIME_TYPE_ITA,
    PART_TIME_PERC_ITA,
    PARTTIME_ENDDT_ITA,
    WORKDAYS_NLD,
    CONT_SAL_TYPE_BRA,
    CBO_CD_BRA,
    SEFIP_CATEGORY_BRA,
    UNION_CD_ALT_BRA
)
VALUES
(&I2.EMPLID,
&I2.EMPL_RCD,
&I2.EFFDT,
#effseq,
SYSDATE,
'SYSTEM', 
&I2.TAXCODE_UK,
&I2.TAX_BASIS_UK,
&I2.WORKER_TYPE_MEX,
&I2.REDUCED_WEEK_MEX,
&I2.LOCATED_CD_MEX,
&I2.SALARY_TYPE_MEX,
&I2.IMS_TERM_DT_MEX,
&I2.BALANCE_GRP_NUM,
&I2.FP_ACTION_2,
&I2.CTG_RATE,
&I2.FP_LEGALSTAT_CD,
&I2.FP_SCNDMT_CD,
&I2.FP_SCND_TYP,
&I2.FP_CIVIL_PENSION,
&I2.FP_SOURCE_ORG,
&I2.FP_RECEP_ORG,
&I2.FP_RETURN_CD,
&I2.FP_PR_LEGSTA,
&I2.FP_FOREND_DT,
&I2.FP_END_DT,
&I2.FP_CAREFRZPCT,
&I2.FP_HIR_DOS_SIT,
&I2.FP_PT_PCT_DET,
&I2.FP_TITLE_NUM,
&I2.FP_DURATION_PCT,
&I2.FP_RATING_PRS_FLG,
&I2.FP_BUDGET_NBR,
&I2.FP_HDCNT_NBR,
&I2.FP_POTENT_NBR,
&I2.FP_RANK_CD,
&I2.FP_STEP_CD,
&I2.FP_RK_ENT_DT,
&I2.FP_CORPS_CD,
&I2.FP_CHG_COR_DT,
&I2.FP_CATG_FP,
&I2.FP_CATG_LEVEL,
&I2.FP_RK_TRIALPD,
&I2.FP_STEP_END_DT,
&I2.FP_FOR_PROM_DT,
&I2.FP_NOMINATION_DT,
&I2.FP_TRAINEE,
&I2.FP_TRNE_POSN,
&I2.FP_RK_PD_END_DT,
&I2.FP_SANCTION,
&I2.FP_DOWN_GRA,
&I2.FP_APPL_SAL_DT,
&I2.FP_CHG_IND,
&I2.FP_CLD_INST,
&I2.FP_SETID_RANK,
&I2.FP_INSTALL_DT,
&I2.FP_EQUIV_STEP,
&I2.FP_STEP_CD2,
&I2.FP_BUSINESS_CD,
&I2.FP_APPL_DT,
&I2.FP_CHG_SAL,
&I2.FP_POINTYP_CD,
&I2.FP_GROSS_IND,
&I2.FP_INCS_IND,
&I2.FP_INCS_IND2,
&I2.FP_PT_PCT,
&I2.FP_PT_END_DT,
&I2.FP_PT_FOREND_DT,
&I2.FP_COMPRATE,
&I2.FP_INST_STAT,
&I2.FP_RETROSPECT,
&I2.FP_ROW_END_DT,
&I2.LAST_UPDATE_DATE,
&I2.OTHER_ID_JPN,
&I2.INTCP_XFR_FLG,
&I2.INTCP_XFR_START_DT,
&I2.INTCP_XFR_END_DT,
&I2.INTCP_BUS_UNIT,
&I2.INTCP_DEPTID,
&I2.INTCP_DEPTID2,
&I2.INTCP_SETID_DEPT,
&I2.INTCP_COMPANY,
&I2.INTCP_COMPANY2,
&I2.INTCP_SUPV_LVL_ID,
&I2.INTCP_SUPV_LVL_ID2,
&I2.START_DATE_JPN,
&I2.EXP_END_DATE_JPN,
&I2.END_DATE_JPN,
&I2.DUTIES_TYPE,
&I2.ASSIGNMENT_ID,
&I2.TARGET_COMPRATE,
&I2.CMP_DONT_ABSORB,
&I2.SSN_EMPLOYER,
&I2.UNITA_PROD_CD,
&I2.ACTION_ITA,
&I2.ACTION_REASON_ITA,
&I2.SPECIAL_HIRCTG_ITA,
&I2.PART_TIME_TYPE_ITA,
&I2.PART_TIME_PERC_ITA,
&I2.PARTTIME_ENDDT_ITA,
&I2.WORKDAYS_NLD,
&I2.CONT_SAL_TYPE_BRA,
&I2.CBO_CD_BRA,
&I2.SEFIP_CATEGORY_BRA,
&I2.UNION_CD_ALT_BRA
)
end-sql
end-procedure


!********************************************************************
begin-procedure insert-compensation-row-effdt-exists
!********************************************************************
#debug9 show 'gexbnahp.insert-compensation-row-effdt-exists'

begin-SQL on-error=sql-error-found('insert-compensation-row-effdt-exists')
Insert into ps_compensation
(EMPLID,
EMPL_RCD,
EFFDT,
EFFSEQ,
COMP_EFFSEQ,
COMP_RATECD,
COMP_RATE_POINTS,
COMPRATE,
COMP_PCT,
COMP_FREQUENCY,
CURRENCY_CD,
MANUAL_SW,
CONVERT_COMPRT,
RATE_CODE_GROUP,
CHANGE_AMT,
CHANGE_PCT,
CHANGE_PTS,
FTE_INDICATOR,
CMP_SRC_IND)
values
(&I3.EMPLID,                 
&I3.EMPL_RCD,               
&I3.EFFDT,                  
#effseq_comp,                
&I3.COMP_EFFSEQ,            
&I3.COMP_RATECD,            
&I3.COMP_RATE_POINTS,       
&I3.COMPRATE,               
&I3.COMP_PCT,               
&I3.COMP_FREQUENCY,         
&I3.CURRENCY_CD,            
&I3.MANUAL_SW,              
&I3.CONVERT_COMPRT,         
&I3.RATE_CODE_GROUP,        
&I3.CHANGE_AMT,             
&I3.CHANGE_PCT,             
&I3.CHANGE_PTS,             
&I3.FTE_INDICATOR,          
&I3.CMP_SRC_IND            
)
end-sql
end-procedure


!*********************************************************************
!Writes the corresponding messages to report log
!*********************************************************************

begin-procedure write-report-log
#debug9 show 'gexbnahp.write-report-log'

  use-report report-log
  do Format-Number(#InputTran, $out, '99999')
  print $out (+1,1)

  let $EmplId_1st3 = substr($EmplId,1,3)
  let $EmplId_mid2 = substr($EmplId,4,2)
  let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  print $emplid11  (,16)

end-procedure

!*********************************************************************
!Updates future job rows
!*********************************************************************
Begin-Procedure select-all-future-job-rows
#debug9 show 'gexbnahp.select-all-future-job-rows'


begin-SELECT on-error=sql-error-found('select-all-future-job-rows')
JJJ.emplid
JJJ.empl_rcd
JJJ.effdt
JJJ.effseq
JJJ.elig_config3
JJJ.elig_config1

	let $new_elig_cfg3 = substr(&JJJ.elig_config3,1,3) || substr($elig_config3,4,7)
	do update-job2

from PS_JOB JJJ
where JJJ.emplid = $emplid
  AND JJJ.EMPL_RCD = #empl_rcd
  AND JJJ.EFFDT > $effdt_dbf

end-SELECT

end-procedure

begin-procedure update-job2
begin-sql on-error=sql-error-found('update-future-job-rows')
UPDATE PS_JOB
   SET ELIG_CONFIG3 = $new_elig_cfg3,
    LASTUPDDTTM     = SYSDATE,     
   LASTUPDOPRID    = 'SYSTEM'  
WHERE EMPLID = &JJJ.emplid
  AND EMPL_RCD = &JJJ.EMPL_RCD
  AND EFFDT = &JJJ.EFFDT
  AND EFFSEQ = &JJJ.effseq
end-sql
end-procedure

!*******************************************************************
!Retrieves Bas Action Value from Action Reason Table
!*******************************************************************
Begin-Procedure get-bas-action
  let $bas_action_tmp = ''							
begin-select on-error=sql-error-found('Get-Bas-Action')
BAC.BAS_ACTION
  let $bas_action_retrieved = 'Y'
  let $bas_action_tmp = &BAC.BAS_ACTION		
  
FROM PS_ACT_RSN_TBL_NA BAC    
WHERE BAC.ACTION = 'DTA'
AND BAC.ACTION_REASON = 'CHG'
AND BAC.EFFDT = (select max(effdt)
		FROM PS_ACT_RSN_TBL_NA      
		where action = bac.action
		and action_Reason = bac.action_reason
		and effdt <= $effdt_dbf)
end-select
      if $bas_action_retrieved = 'Y'		
          let $bas_action = $bas_action_tmp 
      else																			
          let $bas_action = &j.bas_action      
      end-if    
end-procedure

!********************************************************************
!Check to see if bas_activity already exists
!********************************************************************
begin-procedure select-bas-activity-row

Begin-Select on-error=sql-error-found('Select-Bas-Activity-Row')
'BAC'
    let $bas_activity_exists = 'Y'
FROM PS_BAS_ACTIVITY BAC1
WHERE BAC1.EMPLID = $bac_emplid
and bac1.empl_rcd = #bac_empl_rcd
and bac1.bas_action_source = $bac_bas_action_source
and bac1.event_dt = $bac_event_dt
and bac1.event_effseq = #bac_event_effseq
end-select
end-procedure

!*******************************************************************
!Inserts into BAS_ACTIVITY table
!*******************************************************************
begin-procedure insert-bas-activity-row


do select-benefit-rcdnum

begin-sql on-error=sql-error-found('Insert-Bas-Activity-Row')
INSERT INTO PS_BAS_ACTIVITY
(EMPLID,
EMPL_RCD,
BAS_ACTION_SOURCE,
EVENT_DT,
EVENT_EFFSEQ,
BAS_ACTION,
BENEFIT_RCD_NBR,
COBRA_ACTION,
BAS_ALL_JOBS,                             
BAS_SUPPRESS_FORMS)                      
VALUES(
$bac_emplid,
#bac_empl_rcd,
$bac_bas_action_source,
$bac_event_dt,
#bac_event_effseq,
&BAC.BAS_ACTION,
#bac_benefit_rcd,
$bac_cobra_action,
' ',                                       
' ')                                       
end-sql
end-procedure

!********************************************************************
!Selects Employment.benefit_rcd_nbr
!********************************************************************
Begin-Procedure Select-Benefit-RcdNum
#debug9 show 'Select-Benefit-RcdNum'
let #bac_benefit_rcd = 0
begin-select on-error=sql-error-found('Select-Benefit-RcdNum')
EBAC.BENEFIT_RCD_NBR
 move &EBAC.BENEFIT_RCD_NBR to #bac_benefit_rcd
FROM PS_EMPLOYMENT EBAC
WHERE EBAC.EMPLID = $bac_emplid
and ebac.empl_rcd = #bac_empl_rcd
end-select
end-procedure


!********************************************************************
!This procedure displays in the error report if there are any sql erros
!happened in the program
!********************************************************************

begin-procedure SQL-Error-Found($Proc_Name) 
#debug9 show 'gexbnahp.SQL-Error-Found'

  do error-found
  print 'SQL Error in ' (,34)
  print $Proc_Name ()  
  print $_sql-error () 
  print 'sql-status:' ()
  print #_sql-status () edit 99999 

end-procedure

!*********************************************************************
!This procedure displays the error message for the records that are in
!progress
!*********************************************************************

begin-procedure Error-Found
#debug9 show 'gexbnahp.Error-Found'

  move 'Y' to $ErrorFound
  use-report report-log
  move 'Y' to $log_printed

  do Format-Number(#InputTran, $out, '99999')
  print $out (+1,1)
  let $EmplId_1st3 = substr($EmplId,1,3)
  let $EmplId_mid2 = substr($EmplId,4,2)
  let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  print $EmplID11 (,16)
end-procedure