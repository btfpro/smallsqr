!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1988-2002 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! SourceSafe Information:                                              *
!                                                                      *
! $Header:: /PT81/SQR/TRANCTRL.SQC 1     3/11/02 9:37p Ptadm          $*
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------!
! TRANCTRL.SQC:  Common Transaction Control Procedures                 !
!----------------------------------------------------------------------!
! Description:                                                         !
!  The purpose of this SQC is to support COMMIT, ROLLBACK, etc.,       !
!  across platforms.  For example, it can be used in other SQRs by     !
!  performing a "do Commit-Transaction" rather than a "commit".        !
!----------------------------------------------------------------------!

!This guards against the SQC being #included twice...
#ifndef TRANCTRL-INCLUDED

#define TRANCTRL-INCLUDED

!----------------------------------------------------------------------!
!  Begin Transaction - required for                                    !
!----------------------------------------------------------------------!
Begin-Procedure Begin-Transaction
  #ifdef debugx
    display 'Entering TRANCTRL.SQC: Begin-Transaction'
  #endif

  #ifdef debugx
    display 'Exiting TRANCTRL.SQC: Begin-Transaction'
  #endif
End-Procedure ! Begin-Transaction

!----------------------------------------------------------------------!
!  Commit Transaction
!----------------------------------------------------------------------!
Begin-Procedure Commit-Transaction
  #ifdef debugx
    display 'Entering TRANCTRL.SQC: Commit-Transaction'
  #endif

  #ifdef SYBASE
    Begin-SQL On-Error=ErrCommit
      COMMIT TRANSACTION
    End-SQL

    Begin-SQL
      BEGIN TRANSACTION
    End-SQL

  #else
    #ifdef INFORMIX
      Begin-SQL
        COMMIT WORK
      End-SQL

      Begin-SQL
        BEGIN WORK
      End-SQL
    #else
      COMMIT
    #endif
  #endif

  #ifdef debugx
    display 'Exiting TRANCTRL.SQC: Commit-Transaction'
  #endif
End-Procedure ! Commit-Transaction

!----------------------------------------------------------------------!
!  ErrCommit (Special for Sybase)
!  - invoked on the second commit when 2 commits in a row are issued
!----------------------------------------------------------------------!
Begin-Procedure ErrCommit
  #ifdef debugx
    display 'Entering TRANCTRL.SQC: ErrCommit'
  #endif

  if #sql-status <> 155
    display $sql-error
  end-if

  #ifdef debugx
    display 'Exiting TRANCTRL.SQC: ErrCommit'
  #endif
End-Procedure ! ErrCommit

!----------------------------------------------------------------------!
!  Rollback Transaction
!----------------------------------------------------------------------!
Begin-Procedure Rollback-Transaction
  #ifdef debugx
    display 'Entering TRANCTRL.SQC: Rollback-Transaction'
  #endif

  #ifdef SYBASE
    Begin-SQL
      ROLLBACK TRANSACTION
    End-SQL

    Begin-SQL
      BEGIN TRANSACTION
    End-SQL

  #else
    #ifdef INFORMIX
      Begin-SQL
        ROLLBACK WORK
      End-SQL

      Begin-SQL
        BEGIN WORK
      End-SQL
    #else
      rollback
    #endif
  #endif

  #ifdef debugx
    display 'Exiting TRANCTRL.SQC: Rollback-Transaction'
  #endif
End-Procedure ! Rollback-Transaction

#endif ! TRANCTRL-INCLUDED
!*************************** End of Program ****************************
