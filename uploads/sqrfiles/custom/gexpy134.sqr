!***********************************************************************
! GEXPY134:  Salary Rate Change Report                                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY134 :            SALARY RATE CHANGE REPORT                      *
!                                                                      *
! Narrative:            This program will produce a listing of         *
!                       employees who have had a salary rate change    *
!                       in the previous week.                          *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           job                                            *
!                       personal_data                                  *
!                       gex_dept_Tbl                                   *
!                       pay_calendar                                   *
!                                                                      *
! Written by:           Susan Mahady                                   *
!                                                                      *
! Normally Run:         Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                          no run control parameters                   *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! CSR:  HR10351                                                        *
! SCM   10/17/2002      Initial Creation                               *
!       HR10306                                                        *
! GBD   11/11/2002      v8.3 Upgrade                                   *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization


#define #column1     1
#define #column2    31
#define #column3    42
#define #column4    50
#define #column5    58
#define #column6    71
#define #column7    84
#define #column8    95
#define #column9    105
#define #column10   115

Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P900-Finalization
End-Report


Begin-Heading 9
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg01.sqc'

  if $Deptid <> $priorDeptid
    do Get-Department-Name
    move $Deptid to $priorDeptid
  end-if
 
  print 'Reporting period from '     (3,40,22)
 
  print &GPP.PAY_BEGIN_DT  ()            
  print ' To ' ()
  print  &GPP.PAY_END_DT ()               

  print 'Paygroup '            (4,1)                  
  print $Paygroup              (0,13)                !secured through mobius by paygroup
  
  print 'Deptid '              (5,1)
  print $Deptid                (0,13)
  print $DeptName              (0,+2)

  Print 'EMPLOYEE'             (+2,{#column1})
  Print 'ACTION'               (+0,{#column4})
  Print '  OLD    '            (+0,{#column5})
  Print '  NEW    '            (+0,{#column6})
  Print '  OLD   '             (+0,{#column7})
  Print '  NEW   '             (+0,{#column8})
  Print 'ACTION'               (+0,{#column10})
 
  Print 'NAME'                 (+1,{#column1})
  Print 'SSN'                  (+0,{#column2})
  Print 'ACTION'               (+0,{#column3})
  Print 'REASON'               (+0,{#column4})
  Print 'COMP RATE'            (+0,{#column5})
  Print 'COMP RATE'            (+0,{#column6})
  Print 'SAL STEP'             (+0,{#column7})
  Print 'SAL STEP'             (+0,{#column8})
  Print 'EFFDT'                (+0,{#column9})
  Print ' DATE '               (+0,{#column10})

  Print '-'                    (+1,{#column1},28)  FILL
  Print '-'                    (+0,{#column2},9)   FILL
  Print '-'                    (+0,{#column3},6)   FILL
  Print '-'                    (+0,{#column4},6)   FILL
  Print '-'                    (+0,{#column5},9)   FILL
  Print '-'                    (+0,{#column6},9)   FILL
  Print '-'                    (+0,{#column7},8)   FILL
  Print '-'                    (+0,{#column8},8)   FILL
  Print '-'                    (+0,{#column9},8)   FILL
  Print '-'                    (+0,{#column10},8)   FILL
  
  Let #Line-Count = 9
End-Heading


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan
  
  Let $ReportID      = 'GEXPY134'
  Let $ReportTitle   = 'SALARY RATE CHANGE LISTING'
  Let $X000_Order_By = 'J.PAYGROUP, J.DEPTID, PD.NAME'
  Let $X000_Order_By_Display = 'Paygroup, Deptid, Name'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Do P220-Get-prev-pay-end
  show 'Prev confirmed pay begin date:  ' &GPP.PAY_BEGIN_DT      
  show 'Prev confirmed pay end   date:  ' &GPP.PAY_END_DT        

  Do P130-Print-Cover-Page
 
End-Procedure


begin-procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'
  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  
  Print 'No Run CNTL selection'                                   (+1,5)
  
  Print 'SORT ORDER FOR THIS REPORT RUN:'   (+5,2)
  Print $X000_Order_By_Display              (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
End-Procedure

Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
 
Begin-Select

J.DEPTID   ()  On-Break
               Level=1
               Print=Never
               After=P310-New-Page
 
J.PAYGROUP
  move &j.paygroup to $paygroup
J.EMPLID
J.EMPL_RCD
J.EFFDT
  move &j.effdt to $j.effdt
J.EMPL_STATUS
J.ACTION
J.ACTION_REASON
J.COMPRATE
  move &j.comprate to #j.comprate   
J.STEP
  move &j.step to #j.step      
J.ACTION_DT
  move &j.action_dt to $j.action_dt

PD.NAME

  Let $Data-Found-Flag = 'Y'
  Let $Deptid   = &J.DEPTID
 
  do Format-Number(#j.comprate, $j.comprate, '99,999.99')
  do Format-Number(#j.step, $j.step, '999')
  let $Year4 = '0'
  Do Format-DateTime ($J.ACTION_DT, $Reformat_action_dt, {DEFMDY}, '', '')
  let $Year4 = '0'
  Do Format-DateTime ($J.EFFDT, $Reformat_effdt, {DEFMDY}, '', '')

  Do P230-Get-Prior-Payrate

  Do P300-Print-Record

FROM   PS_JOB            J,
       PS_PERSONAL_DATA  PD,
       PS_GEX_DEPT_TBL   GDT

WHERE  PD.EMPLID              = J.EMPLID

AND    J.EFFDT                =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID          = J.EMPLID
       AND    EMPL_RCD        = J.EMPL_RCD
       AND    EFFDT          <= SYSDATE
       AND    ACTION          = 'PAY')    

AND    J.EFFSEQ               =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID          = J.EMPLID
       AND    EMPL_RCD        = J.EMPL_RCD
       AND    EFFDT           = J.EFFDT)

AND   J.EMPL_STATUS IN ('A', 'L', 'S', 'P')
AND   J.ACTION = 'PAY'                             !pay rate change row
AND   J.ACTION_DT between &GPP.PAY_BEGIN_DT and &GPP.PAY_END_DT   
 
And    gdt.deptid                = j.deptid

And    gdt.effdt                 =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid             = j.deptid
       And    effdt             <= &GPP.PAY_END_DT)

And    gdt.sequence_number       =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt              = gdt.effdt)

ORDER BY [$X000_ORDER_BY]
End-Select
End-Procedure


!**********************************************************
!  Retrieve previous pay begin/end date
!**********************************************************
begin-procedure P220-Get-prev-pay-end
#debug9 Show 'P220-Get-prev-pay-end'
begin-SELECT on-error=sql-error-found('P220-Get-prev-pay-end')
GPP.PAY_BEGIN_DT
GPP.PAY_END_DT

FROM PS_PAY_CALENDAR GPP

WHERE GPP.COMPANY = 'GEI'
AND  GPP.PAYGROUP = 'RET'
AND GPP.PAY_END_DT = (SELECT MAX(PAY_END_DT)
   		        FROM PS_PAY_CALENDAR GPP1
  		        WHERE GPP1.PAY_END_DT <= SYSDATE AND
                              GPP1.COMPANY = 'GEI' AND
                              GPP1.PAYGROUP = 'RET' AND                            
                              GPP1.PAY_OFF_CYCLE_CAL = 'N')     !Ignore OFF CYCLE calendars 
end-SELECT 

end-procedure

 
!*******************************************
begin-procedure P230-Get-Prior-Payrate
!*******************************************
#debug9 Show 'P230-Get-Prior-Payrate'
 
Begin-Select
  Let $Prior-Row-Found-Flag = 'N'

PJ.EMPLID
PJ.comprate
  move &PJ.comprate to #pj.comprate
PJ.STEP
  move &PJ.STEP      to #pj.step

  Let $Prior-Row-Found-Flag = 'Y'
  do Format-Number(#pj.comprate, $pj.comprate, '99,999.99')
  do Format-Number(#pj.step, $pj.step, '999')

FROM   PS_JOB            PJ
       
WHERE  PJ.EMPLID              = &J.EMPLID
AND    PJ.EMPL_RCD            = &J.EMPL_RCD

AND    PJ.EFFDT                =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB        PJ1
       WHERE  PJ1.EMPLID          = PJ.EMPLID
       AND    PJ1.EMPL_RCD        = PJ.EMPL_RCD
       AND    PJ1.EFFDT          < &J.EFFDT)           !prior job row

AND    PJ.EFFSEQ               =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB        PJ2
       WHERE  PJ2.EMPLID          = PJ.EMPLID
       AND    PJ2.EMPL_RCD        = PJ.EMPL_RCD
       AND    PJ2.EFFDT           = PJ.EFFDT)

End-Select
End-Procedure 

!***********************************
Begin-Procedure P300-Print-Record
!***********************************
#debug9 Show 'P300-Print-Record'

  If #Line-Count > 72
    New-Page
  End-If
  
  Print &pd.name               (+1,{#column1})
  Print &j.emplid              (+0,{#column2})
  Print &j.action              (+0,{#column3})
  Print &j.action_reason       (+0,{#column4})                  
  Print $pj.comprate           (+0,{#column5})
  Print $j.comprate            (+0,{#column6})              
  Print $pj.step               (+0,{#column7})
  Print $j.step                (+0,{#column8})
  Print $Reformat_effdt        (+0,{#column9})      
  Print $Reformat_action_dt    (+0,{#column10})
  
  Add 1 to #Line-Count

End-Procedure


Begin-Procedure P310-New-Page
#debug9 Show 'P310-New-Page'
  New-Page
End-Procedure

!*************************************
Begin-Procedure P900-Finalization
!*************************************
#debug9 Show 'P900-Finalization'
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'
End-Procedure

!************************************************** 
!Displays the error messages and stops execution
!************************************************** 
 
begin-procedure SQL-Error-Found($Proc_Name) 
!  do error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 

  STOP

end-procedure

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
