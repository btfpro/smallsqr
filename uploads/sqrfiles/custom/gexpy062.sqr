!***********************************************************************
!  GEXPY062  EMPLOYEE EARNINGS HISTORY                                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1988-1996 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
! GEXPY062:             EMPLOYEES EARNINGS HISTORY                     *
!                                                                      *
! Narrative:            The user enters beginnng pay end date and      * 
!                       ending pay end date and emplid's.              *
!                       This report is based on PAY002 - Pay Register. *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!			      #debug8 key variable values              * 
!			      #debug7 data returned from sql calls     * 
!                                                                      *
! SQL Tables:           PS_PAY_CALENDAR                                * 
!                       PS_PAY_CHECK                                   * 
!                       PS_PAYGROUP_TBL                                *
!                       PS_PAY_EARNINGS                                *
!                       PS_PAY_OTH_EARNS                               *
!                       PS_PAY_DISTRIBUTN                              *
!                       PS_PAY_TAX                                     *
!                       PS_PAY_DEDUCTION                               *
!                       PS_DEDUCTION_TBL                               *
!                       PS_PAY_GARNISH                                 *
!                                                                      *
! Written by:           Joe Besagar                                    *                                                           
!                                                                      *
! Normally run:         As needed                                      *
!                                                                      *
! Entered Run                                                          *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                       Company Division Code                          *
!            		Company  	                               *
!                       Company/Paygroup                               *
!      			Deptid                                         *
!                       Acctcd                                         *	                                   
!     			Empl_Status                                    *
!                                                                      *
!                       FROMDATE                                       *
!				THRUDATE			       *	    
!				EMPLID/EMPLID'S			       *		     
!                                                                      *
!                       FOR ORDER BY CLAUSE:                           *
!                       1)  BY COMPANY, PAYGROUP, EMPLID, PAY_END_DT   *  
!			         PAGE_NUM, LINE_NUM, SEPCHK		       *	
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  GEXPY030  JNB   04/02/1998    INITIAL CREATION                      *  
!				                                       * 
!            CWB   05/18/2000    Removed the procedure                 * 
!                                Get-CAN-Taxes because of problems     *
!                                encountered after HR7.51 conversion.  *
!                                                                      *
!            SCM   12/12/2001    Added security table logic so that it *
!                                would allow for more users to execute *
!                                this rpt instead of by payroll request*
!                                                                      *
!            SCM     3/7/2002    If ee had > 1 job record, the main    *
!                                select would return >1 row, therefore *
!                                the report would display duplicate    *
!                                rows.  Added criteria to check        *
!                                empl_rcd.                            *
!                                                                      *
!            SCM    04/22/2002   Added taxclasses for tips.            *
!                                G=OASDI Tips and T=MEDIcare tips.     *  
!
!            CJH    06/24/2003   Garnishments are indicated by
!                                Spcl_process= 'G' - garnprocess = G in 8.3
!                                rather than 'Y' in 7.6              
!            MXR    03/02/2007   ITG # 404055The checknumber has increased 
!                                up to include another digit and the mask 
!                                may need to be increased to display this 
!                                properly                              
!GEX_PY246  SXD     08/21/2007   Sqr from 8.3 is moved to 9.0 as it is. *
!           GEX-AXG 10/05/2007   Upgrade 9.0 Changes.
!ITG110270  ISDVAKG	10/10/2011   Replace the 9 emplid with 7 digit			*
!************************************************************************
!selection criteria
#define #x000_col_selection_criteria_a 	02
#define #x000_col_selection_criteria_b 	05

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'  !Printer and page-size initialization

!***********************************************************************
begin-heading 8
!***********************************************************************
#Debug9 show 'begin-heading'

 #Include 'stdhdg01.sqc'
 
 Let #x000_temp_out = 'Sorted by ' || $x000_order_by
 print $x000_temp_out       (3,) center

 print 'Employee Name/ID        Form ID      <----- REGULAR -----'    (+2,1)
  print '>  <--- OVERTIME --->  <-------- OTHER -------->'             ()

#ifdef USA
  print 'Dept. ID     Check Date   Check No.    Hours      Earning'    (+1,1)
#endif

#ifdef CANADA
  print 'Dept. ID     Cheque Date  Cheque No.   Hours      Earning'    (+1,1)
#endif

  print 's    Hours   Earnings  Type  Hours      Earnings     Gross P' ()
  print 'ay       Taxes  Type    Deductions Code            Net Pay'   ()
end-heading

!***********************************************************************
begin-report
!***********************************************************************
#debug9 show 'begin-report'

  do Init-Report
  do Stdapi-Term

end-report

!***********************************************************************
begin-procedure Init-Report
!***********************************************************************
#debug9 show 'Init-report'

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do p010-Init-Variables
  do P020-Get-Rowsecclass              !SCM  12/12/2001  This is the security for 'HRIS' 
  do Array-Initialization
  do Get-Current-DateTime

   show 'Successful end of report'

  do REPORT

end-procedure

!***********************************************************************
begin-procedure Array-Initialization
!***********************************************************************
#debug9 show 'Array-Initialization'

  create-array name=Totals               -
               size=6                    -
               field=TotalName:char      -
               field=total:number:13     -
               field=startCol:number:13

  put 'Grand Total'      into Totals(1) TotalName
  put 'Company Total'    into Totals(2) TotalName
  put 'Pay Period Total' into Totals(3) TotalName
  put 'Grand Total'      into Totals(4) TotalName
  put 'Employee Total'   into Totals(5) TotalName
  put  31 into Totals(0) startCol(0)
  put  45 into Totals(0) startCol(1)
  put  54 into Totals(0) startCol(2)
  put  65 into Totals(0) startCol(3)
  put  78 into Totals(0) startCol(4)
  put  92 into Totals(0) startCol(5)
  put 106 into Totals(0) startCol(6)
  put 119 into Totals(0) startCol(7)
  put 138 into Totals(0) startCol(8)
  put 161 into Totals(0) startCol(9)
  put 161 into Totals(0) startCol(10)
  put 161 into Totals(0) startCol(11)
  put 161 into Totals(0) startCol(12)

  create-array name=ETDarray          -
               size=100               -
               field=EarnType:char    -
               field=EarnHours:number -
               field=EarnGross:number -
               field=TaxAmt:number    -
               field=TaxType:char     -
               field=DedAmt:number    -
               field=DedCode:char

end-procedure

!***********************************************************************
begin-procedure p010-Init-Variables
!***********************************************************************
#debug9 show 'P010-Init-Variables'

  let $x000_new_page_flag = 'N'
  
  let $ReportID           = 'GEXPY062'
  let $ReportTitle        = 'EMPLOYEES EARNINGS HISTORY'
  let $Country            = 'USA'

  show '$ReportID= '     $ReportID
  show '$ReportTitle = ' $ReportTitle   

  Do GEXXX951-Select-Oracle-Instance

  if $Prcs_process_instance = ''     
     do P015-get-input
  else
!    get parameters from run control record

   !     Let $GEXXX910_Emplid_alias  =  'B.emplid'						!ISDVAKG - ITG110270
        Let $GEXXX910_Emplid_alias  =  'MAP.emplid'						!ISDVAKG - ITG110270
        Do GEXXX910-Select-Emplid-Parameters
        

!	get parameters from single row run control record 
	Do GEXXX922-Select-Parameters
      let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
	let $X000_WHERE_SELECT_FROMDATE = $GEX_RC_PAY.FROMDATE
      let $X000_WHERE_SELECT_THRUDATE = $GEX_RC_PAY.THRUDATE
	
      if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
        let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
      end-if
      do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')


!	get parameters from multiple row run control record
    	Let $GEXXX900_Company_Alias  = 'JOB.COMPANY'                           
	Do GEXXX900-Select-Company-Parameters 

        Let $GEXXX901_Company_Alias  = 'JOB.COMPANY' 
        Let $GEXXX901_Paygroup_Alias = 'JOB.PAYGROUP'    
        Do GEXXX901-Select-Company-Paygroup-Parameters    

 	Let $GEXXX902_Deptid_Alias = 'JOB.DEPTID'  
	Do GEXXX902-Select-Deptid-Parameters 

	Let $GEXXX903_Emp_Stat_Alias = 'JOB.EMPL_STATUS'  
	Do GEXXX903-Select-Emp-Stat-Parameters          

    	Let $GEXXX907_Div_CD_Alias = 'GEX_DEPT.GEX_COMPANY_DIV_CD'
	Do GEXXX907-Select-Div-CD-Parameters
	          
	Let $GEXXX909_Acct_CD_Alias = 'JOB.ACCT_CD'
	Do GEXXX909-Select-Acct-CD-Parameters

  end-if  


     let $X000_order_by = 'BY COMPANY, PAYGROUP, EMPLID, PAY_END_DT, PAGE_NUM, LINE_NUM, SEPCHK' 
     show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA                =' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
     show '$GEXXX900_INCLUDE_COMPANY_CRITERIA               =' $GEXXX900_INCLUDE_COMPANY_CRITERIA
     show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA      =' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA   
     Show '$GEXXX902_INCLUDE_DEPTID_CRITERIA                =' $GEXXX902_INCLUDE_DEPTID_CRITERIA
     show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA              =' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
     show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA               =' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA         
     show '$GEXXX910_INCLUDE_EMPLID_CRITERIA = ' $GEXXX910_INCLUDE_EMPLID_CRITERIA
     show '$X000_WHERE_SELECT_ASOFDATE                      =' $X000_WHERE_SELECT_ASOFDATE 
     show '$X000_WHERE_SELECT_FROMDATE        ='  $X000_WHERE_SELECT_FROMDATE 
     show '$X000_WHERE_SELECT_THRUDATE        ='  $X000_WHERE_SELECT_THRUDATE 

     print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
     print '$Prcs_OPRID          ='                              (+2,{#x000_col_selection_criteria_b})
     print $Prcs_OPRID                                           (0,+2)
     print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
     print $PRCS_RUN_CNTL_ID                                     (0,+2)

    	print 'SELECTION CRITERIA FOR THIS REPORT RUN:'           (+5,{#x000_col_selection_criteria_a})
 	print '$GEXXX910_INCLUDE_EMPLID_DISPLAY_CRITERIA           =' (+2,{#x000_col_selection_criteria_b})
 	print $GEXXX910_INCLUDE_EMPLID_DISPLAY_CRITERIA             (0,+2)
     
        print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA 		(0,+2)
 	print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
 	print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA            (0,+2)
 	print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})
 	print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA   (0,+2)
	print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)
	print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA           (0,+2)
	print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA            (0,+2)

      print '$X000_WHERE_SELECT_ASOFDATE                         ='   (+1,{#x000_col_selection_criteria_b})
      print $X000_WHERE_SELECT_ASOFDATE                           (0,+2)
 
      print '$X000_WHERE_SELECT_FROMDATE                         ='   (+1,{#x000_col_selection_criteria_b})
	print  $X000_WHERE_SELECT_FROMDATE                          (0,+2)

      print '$X000_WHERE_SELECT_THRUDATE                         ='   (+1,{#x000_col_selection_criteria_b})
	print  $X000_WHERE_SELECT_THRUDATE                          (0,+2)

	print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,{#x000_col_selection_criteria_a})
	print '$X000_ORDER_BY                                      =' (+1,{#x000_col_selection_criteria_b})
 	print $X000_ORDER_BY 	(0,+2)

 	let #page-count = 0
	NEW-PAGE
	LET #PAGE-COUNT = 1

end-procedure

!***********************************************************************
begin-procedure P015-get-input
!***********************************************************************
#debug9 show 'P015-get-input'

      show 'should not enter this procedure '
	let $GEXXX910_INCLUDE_EMPLID_CRITERIA 	      = '1=1'
      let $X000_WHERE_SELECT_FROMDATE                 = '1=1'
      let $X000_WHERE_SELECT_THRUDATE                 = '1=1'
      let $X000_WHERE_SELECT_ASOFDATE                 = $asoftoday

      let $GEXXX907_INCLUDE_DIV_CD_CRITERIA           = '1=1'           
      let $GEXXX900_INCLUDE_COMPANY_CRITERIA 	      = '1=1'
      let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1' 
      let $GEXXX902_INCLUDE_DEPTID_CRITERIA	      = '1=1'
      let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA 	      = '1=1'
      let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA          = '1=1'

!order by for GEXPY062 reports

	 let $X000_order_by = 'BY COMPANY, PAYGROUP, EMPLID, PAY_END_DT, PAGE_NUM, LINE_NUM, SEPCHK' 

end-procedure

!****************  SCM  12/12/2001    Added para     BEGIN     ***********
!***********************************************************************
begin-procedure P020-Get-Rowsecclass
!***********************************************************************
#debug9 show 'P020-Get-Rowsecclass'

begin-SELECT  
OPR.OPRID
OPR.ROWSECCLASS
 
    show 'oprid:        ' &OPR.OPRID
    show 'rowsecclass:  ' &OPR.ROWSECCLASS

from PSOPRDEFN OPR
where OPR.OPRID = $Prcs_oprid                   !this is from gexxx900.sqc

end-SELECT
End-procedure
!*************   SCM 12/12/2001                      END       ************


!***********************************************************************
begin-procedure Report
!***********************************************************************
#debug9 show 'Report'
Show '&OPR.ROWSECCLASS :'&OPR.ROWSECCLASS 
 Let $x100_Get_Employees_Data_Flag = 'N'

begin-SELECT
A.COMPANY     () on-break print=never  level=5 procedure=Company-Change
A.PAY_END_DT 
A.PAYGROUP   
B.DEPTID     
B.NAME
B.EMPLID      () ON-BREAK PRINT=NEVER  LEVEL=4 PROCEDURE=EMPLID-CHANGE
A.CHECK_DT
B.CHECK_DT
B.PAYCHECK_OPTION
B.PAYCHECK_STATUS
B.FORM_ID
B.PAYCHECK_NBR
B.TOTAL_GROSS
B.NET_PAY
B.TOTAL_TAXES
B.TOTAL_DEDUCTIONS
B.OFF_CYCLE
B.PAGE_NUM
B.LINE_NUM
B.SEPCHK
P.COUNTRY
B.PAY_SHEET_SRC

  move &A.Company     to $Company
  move &A.PayGroup    to $PayGroup
  move &A.Pay_End_Dt  to $PayEndDate
  move &A.Check_Dt    to $AsOfDate  !for included procedures
  Show 'Company : '&A.Company  '   Paygroup : ' &A.PayGroup ' Pay End date  : ' &A.Pay_End_Dt
  do Initialize-ETD-Array
  do Get-Pay-Earnings
  Do Get-Gex-Emplid-Mapp

  if $Pay_Status_OK = 'Y'
    let $Name = RTRIM(&B.Name, ' ')
    print $Name                   (2,1,23)
    print &B.Form_ID              (2,25) 
    print &MAPP.EmplID            (3,1)
    print &B.DeptID               (4,1)
    print &A.Company              (,7)
    print &A.paygroup             (,11) 

    if RTRIM(&B.Check_Dt, ' ') <> ''
      do Format-DateTime(&B.Check_Dt, $out, {DEFDATE}, '', '')
      print $out  (3,14)
    end-if

    evaluate &B.PayCheck_Option
      when = 'R'
      when = 'M'
      when = 'A'
        print &B.PayCheck_Option  (3,+2)
    end-evaluate

    if &B.PayCheck_Option = '&' or &B.PayCheck_Option = 'A'
      do Get-Pay-Distribution
    end-if

    if &B.PAYCHECK_NBR <> 0
      do Format-Number(&B.PAYCHECK_NBR, $out, '099999999')  !ISDVMXR 03/02/2007
      print $out         (3,28)
    end-if

    if &B.Pay_Sheet_Src = 'O'
       print &B.Pay_Sheet_Src   (3,36)
    end-if

    if &B.PayCheck_Option = '&'                      ! Advice and Check
      print 'A'          (4,26)
      do Format-Number(#Advice#, $out, '0999999')
      print $out         (4,28)
    end-if

    do Format-Number(&B.Total_Gross, $out, '99,999,999.99mi')
    print $out         (2,107)
    do Format-Number(&B.Net_Pay, $out, '99,999,999.99mi')
    print $out         (2,162)

    evaluate &B.PayCheck_Option
      when = 'C'
      when = 'M'

        if &B.PayCheck_Status = 'F'
                or &B.PayCheck_Status = 'A'
                or &B.PayCheck_Status = 'R'
            move &B.Net_Pay to #Check_Amount
            print 'C'            (+0,0)
        else
            move &B.Net_Pay to #UnConfirm_Total
            print 'U'            (+0,0)
        end-if

      when = 'A'
        print 'A'            (+0,0)
      when = '&'
        move 3 to #line_num

        if #Check_Amount <> 0
          do Format-Number(#Check_Amount, $out, '99,999,999.99mi')
          print $out  (#line_num,162)
          print 'C'            (+0,0)
          add 1 to #line_num
        end-if

        if #Deposit_Total <> 0
          do Format-Number(#Deposit_Total, $out, '99,999,999.99mi')
          print $out (#line_num,162)
          print 'A'            (+0,0)
          add 1 to #line_num
        end-if

      when = 'R'
        if &B.PayCheck_Status = 'F'
                or &B.PayCheck_Status = 'A'
            do Process-Reversal
        else
            move &B.Net_Pay to #UnConfirm_Total
        end-if
    end-evaluate

    ARRAY-ADD &B.Total_Gross      -
              &B.Total_Taxes      -
              &B.Total_Deductions -
              &B.Net_Pay          -
              #Check_Amount       -
              #Deposit_Total      -
              #UnConfirm_Total    -
      to Totals(5) total(6)       -
                   TOTAL(7)       -
                   TOTAL(8)       -
                   TOTAL(9)       -
                   TOTAL(10)      -
                   TOTAL(11)      -
                   TOTAL(12)

    if &P.Country = 'USA'
      do Get-USA-Taxes
    else
      if &P.Country = 'CAN'

!CWB 05/18/2000 Begin
!        do Get-CAN-Taxes
!CWB 05/18/2000 End

      end-if
    end-if

    do Get-Deductions
    do Print-Detail
  end-if

  move 0 to #Advice#
  move 0 to #UnConfirm_Total
  move 0 to #Deposit_Total
  move 0 to #Check_Amount
  move 0 to #Cash_Total
  NEXT-LISTING NEED=4

  Let $x100_Get_Employees_Data_Flag = 'Y'

FROM  PS_PAY_CALENDAR      A,
      PS_PAY_CHECK         B,
      PS_PAYGROUP_TBL      P,
      PS_JOB               JOB,
      PS_GEX_DEPT_TBL      GEX_DEPT,
      PS_EMPLMT_SRCH_GBL   ES                 !SCM  12/12/2001   Added to obtain security
 
where B.OFF_CYCLE IN ('Y','N')
 AND  B.PAY_END_DT BETWEEN $X000_WHERE_SELECT_FROMDATE AND $X000_WHERE_SELECT_THRUDATE   
 AND  B.EMPLID IN (SELECT MAP.EMPLID FROM PS_GEX_EMPLID_MAPP MAP WHERE [$GEXXX910_INCLUDE_EMPLID_CRITERIA]) !ISDVAKG - ITG110270
 AND [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
 AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
 AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
 AND [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
 AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
  AND B.PAGE_NUM BETWEEN 1 AND 9999
  AND B.EMPLID     = JOB.EMPLID
  AND B.EMPL_RCD  = JOB.EMPL_RCD  
  AND B.COMPANY    = A.COMPANY
  AND B.PAYGROUP   = A.PAYGROUP
  AND B.PAY_END_DT = A.PAY_END_DT
  AND P.COMPANY    = A.COMPANY
  AND P.PAYGROUP   = A.PAYGROUP
  AND P.EFFDT            =
      (SELECT MAX(EFFDT)
         FROM PS_PAYGROUP_TBL
        WHERE COMPANY    = A.COMPANY
          AND PAYGROUP   = A.PAYGROUP
          AND EFF_STATUS = 'A'
          AND EFFDT     <= A.PAY_END_DT)
  AND JOB.EFFDT        = (SELECT MAX(EFFDT)
                         FROM PS_JOB
                         WHERE EMPLID = JOB.EMPLID 
                        AND  EMPL_RCD = JOB.EMPL_RCD
                        AND  EFFDT <= A.PAY_END_DT)  
   AND JOB.EFFSEQ = (SELECT MAX(EFFSEQ)
                    FROM PS_JOB
                    WHERE EMPLID = JOB.EMPLID
                     AND  EMPL_RCD = JOB.EMPL_RCD
                     AND  EFFDT     = JOB.EFFDT)
   AND JOB.DEPTID = GEX_DEPT.DEPTID
   AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
   AND GEX_DEPT.EFFDT = (SELECT MAX(GEX_DEPT1.EFFDT) FROM PS_GEX_DEPT_TBL GEX_DEPT1
			WHERE GEX_DEPT1.DEPTID = GEX_DEPT.DEPTID AND
				GEX_DEPT1.EFFDT <= $X000_WHERE_SELECT_ASOFDATE) 
   AND GEX_DEPT.SEQUENCE_NUMBER = (SELECT MAX(GEX_DEPT2.SEQUENCE_NUMBER) FROM PS_GEX_DEPT_TBL GEX_DEPT2
			WHERE GEX_DEPT2.DEPTID = GEX_DEPT.DEPTID AND
				GEX_DEPT2.EFFDT = GEX_DEPT.EFFDT)
   AND JOB.EMPLID      = ES.EMPLID                  !SCM  12/12/2001
   AND ES.ROWSECCLASS  = &OPR.ROWSECCLASS           !SCM  12/12/2001
   AND JOB.EMPL_RCD    = ES.EMPL_RCD                !SCM   3/7/2002    Added to fix duplicate row pblm 
   AND ES.OPRID = $Prcs_oprid 			     !GEX-AXG Added for Upgrade 9.0 on 10/05/2007	

ORDER  [$x000_order_by]

end-SELECT

 if $x100_Get_Employees_Data_Flag = 'N'
	print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) CENTER
 end-if

  move 4 to #changeLevel
  move 'Y' to $End
  do Print-Totals

end-procedure

!***********************************************************************
begin-procedure Initialize-ETD-Array
!***********************************************************************
#debug show 'Initialize-ETD-Array'

  move 0 to #i

  while #i <= #ETDmax
    put                   ' '       -
                          0         -
                          0         -
                          0         -
                          ' '       -
                          0         -
                          ' '       -
        into ETDarray(#i) EarnType  -
                          EarnHours -
                          EarnGross -
                          TaxAmt    -
                          TaxType   -
                          DedAmt    -
                          DedCode
    add 1 to #i
  end-while

  move -1 to #ETDmax

end-procedure

!***********************************************************************
begin-procedure Get-Pay-Earnings
!***********************************************************************
#debug9 show 'Get-Pay-Earnings'
Show 'Entering Procedure Get-Pay-Earning'
Show 'Company : '$Company  '   Paygroup : '$paygroup ' Pay End date  : '$PayEndDate
Show 'Off Cycle : '&B.Off_Cycle ' Page Number '&B.PAGE_NUM ' Line Number : '&B.LINE_NUM ' Sep Check :'&B.SepChk
  position (1)
  move -1 to #i
  move 'N' to $Pay_Status_OK

begin-SELECT
C.REG_HRS+C.REG_EARN_HRS     &Hours    (+1,38) EDIT       B999.99MI
C.REG_EARNS+C.REG_HRLY_EARNS &Earnings (0,46)  EDIT B9,999,999.99MI
C.OT_HRS                               (0,61)  EDIT       B999.99MI
C.OT_HRLY_EARNS                        (0,69)  EDIT    B99,999.99MI
C.ADDL_NBR

  ARRAY-ADD &Hours           -
            &Earnings        -
            &C.OT_Hrs        -
            &C.OT_Hrly_Earns -
    to Totals(5) total(0)    -
                 TOTAL(1)    -
                 TOTAL(2)    -
                 TOTAL(3)
  Show 'Reg hours : ' &Hours ' Reg Earnings :' &Earnings ' Ot Hours : ' &C.OT_Hrs  ' PT HRL Earns : ' &C.OT_Hrly_Earns
  do Get-Other-Hours-Earnings
  move 'Y' to $Pay_Status_OK

FROM  PS_PAY_EARNINGS C
WHERE COMPANY         = $Company
  AND PAYGROUP        = $PayGroup
  AND PAY_END_DT      = $PayEndDate
  AND OFF_CYCLE       = &B.Off_Cycle
  AND PAGE_NUM           = &B.PAGE_NUM
  AND LINE_NUM           = &B.LINE_NUM
  AND SEPCHK          = &B.SepChk
  AND OK_TO_PAY       = 'Y'
  AND PAY_LINE_STATUS IN ('C','F')
  AND C.SINGLE_CHECK_USE IN ('C', 'N')
ORDER BY C.ADDL_NBR
end-SELECT

end-procedure

!***********************************************************************
BEGIN-PROCEDURE Get-Gex-Emplid-Mapp
!***********************************************************************
#debug9 show 'Get-Gex-Emplid-Mapp'
Show 'Entering Procedure Get-Gex-Emplid-Mapp'
Begin-select
MAPP.EMPLID			&MAPP.EMPLID

FROM PS_GEX_EMPLID_MAPP MAPP
WHERE MAPP.SSN = &B.EMPLID
END-SELECT

END-PROCEDURE

!***********************************************************************
begin-procedure Get-Other-Hours-Earnings
!***********************************************************************
#debug9 show 'Get-Other-Hours-Earnings'
Show 'Entering Procedure Get-Other-Hours-Earnings'

begin-SELECT
ERNCD,
OTH_HRS,
OTH_EARNS

  add 1 to #i
  PUT                 &ErnCd     -
                      &Oth_Hrs   -
                      &Oth_Earns -
    INTO ETDARRAY(#I)  EARNTYPE  -
                       EARNHOURS -
                       EARNGROSS

  ARRAY-ADD     &Oth_Hrs   -
                &Oth_Earns -
    to Totals(5) total(4)  -
                 TOTAL(5)

FROM  PS_PAY_OTH_EARNS
WHERE COMPANY    = $Company
  AND PAYGROUP   = $PayGroup
  AND PAY_END_DT = $PayEndDate
  AND OFF_CYCLE  = &B.Off_Cycle
  AND PAGE_NUM      = &B.PAGE_NUM
  AND LINE_NUM      = &B.LINE_NUM
  AND SEPCHK     = &B.SepChk
  AND ADDL_NBR      = &C.ADDL_NBR
ORDER BY ERNCD
end-SELECT

  if #i > #ETDmax
    move #i to #ETDmax
  end-if

end-procedure

!***********************************************************************
begin-procedure Process-Reversal
!***********************************************************************
#debug9 show 'Process-Reversal'

  do Get-Original-Check

  evaluate $PayCheck_Option
    when = 'C'
    when = 'M'
      print 'C'            (+0,0)
    when = 'A'
      print 'A'            (+0,0)
    when = '&'
      move 3 to #line_num

      if #CheckReversalAmount <> 0
        do Format-Number(#CheckReversalAmount, $out, '99,999,999.99mi')
        print $out  (#line_num,162)
        print 'C'            (+0,0)
        add 1 to #line_num
      end-if

      if #DepositReversalAmount <> 0
        do Format-Number(#DepositReversalAmount, $out, '99,999,999.99mi')
        print $out (#line_num,162)
        print 'A'            (+0,0)
        add 1 to #line_num
      end-if

  end-evaluate

  if #Advice# <> 0
    print 'A'          (4,25)
    do Format-Number(#Advice#, $out, '0999999')
    print $out     (4,27)
  end-if

end-procedure

!***********************************************************************
begin-procedure Get-Original-Check
!***********************************************************************
#debug9 show 'Get-Original-Check'

  move 0 to #DepositReversalAmount
  move 0 to #CheckReversalAmount

begin-SELECT
P1.COMPANY
P1.PAYGROUP
P1.PAY_END_DT
P1.PAYCHECK_OPTION
P1.PAYCHECK_STATUS
P1.NET_PAY
P1.OFF_CYCLE
P1.PAGE_NUM
P1.LINE_NUM
P1.SEPCHK

  move &P1.PayCheck_Option to $PayCheck_Option
  move &P1.PayCheck_Status to $PayCheck_Status

  evaluate &P1.PayCheck_Option
    when = 'C'
    when = 'M'
      subtract &P1.Net_Pay from #CheckReversalAmount

      if $PayCheck_Status <> 'A'
        subtract &P1.Net_Pay from #Check_Amount
      end-if

    when = 'A'
      subtract &P1.Net_Pay from #DepositReversalAmount

      if $PayCheck_Status <> 'A'
        subtract &P1.Net_Pay from #Deposit_Total
      end-if

    when = '&'
      do Get-Original-Distribution
  end-evaluate

FROM  PS_PAY_CHECK P1
WHERE P1.PAYCHECK_NBR          = &B.PAYCHECK_NBR
  AND P1.FORM_ID         = &B.Form_ID
  AND P1.CHECK_DT        = &B.Check_Dt
  AND P1.PAYCHECK_OPTION <> 'R'
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Get-Original-Distribution
!***********************************************************************
#debug9 show 'Get-Original-Distribution'

  move 0 to #Advice#

begin-SELECT
PAYCHECK_NBR
ACCOUNT_TYPE
DEPOSIT_AMOUNT

  if &Account_Type = '$'
    subtract &Deposit_Amount from #CheckReversalAmount

    if $PayCheck_Status <> 'A'
        subtract &Deposit_Amount from #Check_Amount
    end-if

  else
    subtract &Deposit_Amount from #DepositReversalAmount

    if $PayCheck_Status <> 'A'
        subtract &Deposit_Amount from #Deposit_Total
    end-if
  end-if

  move &PAYCHECK_NBR to #Advice#

FROM  PS_PAY_DISTRIBUTN
WHERE COMPANY    = &P1.Company
  AND PAYGROUP   = &P1.PayGroup
  AND PAY_END_DT = &P1.Pay_End_Dt
  AND OFF_CYCLE  = &P1.Off_Cycle
  AND PAGE_NUM      = &P1.PAGE_NUM
  AND LINE_NUM      = &P1.LINE_NUM
  AND SEPCHK     = &P1.SepChk
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Get-USA-Taxes
!***********************************************************************
#debug9 show 'Get-USA-Taxes'

  move -1 to #i

begin-SELECT
L.STATE,
L.LOCALITY,
L.TAX_CLASS,
L.TAX_CUR

  add 1 to #i


  if RTRIM(&L.State, ' ') = '$U'  !if U.S. federal

    evaluate &L.Tax_Class
      when = 'H'  !FWT
        move 'FWT' to $TaxType
      when = 'C'  !Earned Income Credit
        move 'EIC' to $TaxType
      when = 'D'  !FICA
        move 'OASDI' to $TaxType
      when = 'F'  !FICA Medicare
        move 'MEDI' to $TaxType
      when = 'G'     !OASDI Tips              SCM  04/22/2002
        move 'OASDT' to $TaxType              !SCM  04/22/2002
      when = 'T'     !Medicare Tips           SCM  04/22/2002
        move 'MEDIT' to $TaxType              !SCM  04/22/2002
    end-evaluate

  else

    if RTRIM(&L.Locality, ' ') = '' !if a State
     LET $TaxType = RTRIM(&L.State, ' ')
      evaluate &L.Tax_Class
        when = 'H'  !SWT
          concat 'SWT' with $TaxType
        when = 'D'  !Employee SDI
          concat 'SDI' with $TaxType
        when = 'M'  !New Jersey WFDP
          concat 'WFDP' with $TaxType
        when = 'N'  !New Jersey HCSF
          concat 'HCSF' with $TaxType
        when = 'V'  !Employee UI
          concat 'UI' with $TaxType
      end-evaluate

    else
      move &L.Locality to $TaxType
    end-if
  end-if

  PUT                &L.Tax_Cur -
                     $TaxType   -
    INTO ETDARRAY(#I) TAXAMT    -
                      TAXTYPE

FROM  PS_PAY_TAX L
WHERE COMPANY    = $Company
  AND PAYGROUP   = $PayGroup
  AND PAY_END_DT = $PayEndDate
  AND OFF_CYCLE  = &B.Off_Cycle
  AND PAGE_NUM      = &B.PAGE_NUM
  AND LINE_NUM      = &B.LINE_NUM
  AND SEPCHK     = &B.SepChk
  AND TAX_CLASS IN ('H','C','D','F','M','N','V','P','B','G','T')          !SCM 04/22/2002 added 'G', 'T'
  AND TAX_CUR   <> 0
end-SELECT

  if #i > #ETDmax
    move #i to #ETDmax
  end-if

end-procedure

!***********************************************************************

!***********************************************************************
!CWB 05/18/2000 Begin
! This is where Get-Can-Tax procedure was. It can be found in 
!   gexpy062_old.sqr, if needed.
!CWB 05/18/2000 End
!***********************************************************************

!***********************************************************************
begin-procedure Get-Deductions
!***********************************************************************
#debug9 show 'Get-Deductions'
  move -1 to #i

begin-SELECT
F.PLAN_TYPE
F.DEDCD
F.DED_CUR
G.SPCL_PROCESS

! CJH - 06/24/2003 - Spcl_Process = 'G' in HRMS 8.3 
!  if &G.SPCL_PROCESS = 'Y'
  if &G.SPCL_PROCESS = 'G'
! CJH - end

    do Get-Garnishment-Detail
  else
    let #DedAmt = &F.Ded_Cur
    move &F.Plan_Type to $DedCode xx
    concat &F.DedCd with $DedCode -xxxxxx
    add 1 to #i
    PUT #DedAmt $DedCode INTO ETDARRAY(#I) DEDAMT DEDCODE
  end-if

FROM  PS_PAY_DEDUCTION F,
      PS_DEDUCTION_TBL G
WHERE COMPANY    = $Company
  AND PAYGROUP   = $PayGroup
  AND PAY_END_DT = $PayEndDate
  AND OFF_CYCLE  = &B.Off_Cycle
  AND PAGE_NUM      = &B.PAGE_NUM
  AND LINE_NUM      = &B.LINE_NUM
  AND SEPCHK     = &B.SepChk
  AND DED_CLASS <= 'K'
  AND DED_CUR   <> 0
  AND G.DEDCD    = F.DEDCD
  AND G.EFFDT    =
      (SELECT MAX(EFFDT)
         FROM PS_DEDUCTION_TBL
        WHERE DEDCD    = F.DEDCD)
ORDER BY F.PLAN_TYPE,
         F.DEDCD
end-SELECT

  if #i > #ETDmax
    move #i to #ETDmax
  end-if

end-procedure

!**********************************************************************
begin-procedure Get-Garnishment-Detail
!**********************************************************************
#debug9 show 'Get-Garnishment-Detail'
begin-SELECT
GR.GARNID, GR.DEDUCT_AMT

  if &GR.DEDUCT_AMT <> 0
    move &GR.DEDUCT_AMT to #DedAmt

    let $DedCode = 'GR'
    let $Garn = RTRIM(&GR.GARNID, ' ')
    concat $Garn with $DedCode -xxxxxx
    add 1 to #i
    PUT #DedAmt $DedCode INTO ETDARRAY(#I) DEDAMT DEDCODE
  end-if

FROM PS_PAY_GARNISH GR
WHERE GR.COMPANY = &A.COMPANY
  AND GR.PAYGROUP = &A.PAYGROUP
  AND GR.PAY_END_DT = &A.PAY_END_DT
  AND GR.OFF_CYCLE = &B.OFF_CYCLE
  AND GR.PAGE_NUM = &B.PAGE_NUM
  AND GR.LINE_NUM = &B.LINE_NUM
ORDER BY GR.GARNID
end-SELECT
end-procedure

!***********************************************************************
begin-procedure Get-Pay-Distribution
!***********************************************************************
#debug9 show 'Get-Pay-Distribution'

begin-SELECT
PD.ACCOUNT_TYPE
PD.DEPOSIT_AMOUNT
PD.PAYCHECK_NBR

  if &PD.PAYCHECK_NBR = &B.PAYCHECK_NBR

    if &PD.Account_Type <> '$'
      add &PD.Deposit_Amount to #Deposit_Total
    else
      move &PD.Deposit_Amount to #Check_Amount
    end-if

  else

    if &PD.Account_Type <> '$'
      add &PD.Deposit_Amount to #Deposit_Total
    end-if

    move &PD.PAYCHECK_NBR to #Advice#
  end-if

FROM  PS_PAY_DISTRIBUTN PD
WHERE PD.COMPANY         = &A.Company
  AND PD.PAYGROUP        = &A.PayGroup
  AND PD.PAY_END_DT      = &A.Pay_End_Dt
  AND PD.OFF_CYCLE       = &B.Off_Cycle
  AND PD.PAGE_NUM           = &B.PAGE_NUM
  AND PD.LINE_NUM           = &B.LINE_NUM
  AND PD.SEPCHK          = &B.SepChk
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Print-Detail
!***********************************************************************
#debug9 show 'Print-Detail'

  position (1)
  move 0 to #i

  while #i <= #ETDmax

    get                $EarnType   -
                       #EarnHours  -
                       #EarnGross  -
                       #TaxAmt     -
                       $TaxType    -
                       #DedAmt     -
                       $DedCode    -
      from ETDarray(#i) EarnType   -
                        EarnHours  -
                        EarnGross  -
                        TaxAmt     -
                        TaxType    -
                        DedAmt     -
                        DedCode

    print $EarnType  (+1,81)
    do Format-Number(#EarnHours, $out, 'b999.99mi')
    print $out (0,85)
    do Format-Number(#EarnGross, $out, 'b9,999,999.99mi')
    print $out (0,93)
    do Format-Number(#TaxAmt, $out, 'b9999,999.99mi')
    print $out    (0,121)
    print $TaxType   (0,134)
    do Format-Number(#DedAmt, $out, 'b999,999.99mi')
    print $out    (0,141)
    print $DedCode   (0,153)
    add 1 to #i
  end-while

end-procedure

!***********************************************************************
begin-procedure Company-Change
!***********************************************************************
#debug9 show 'Company-Change'

  move 2 to #changeLevel
  do Print-Totals
end-procedure

!***********************************************************************
begin-procedure Emplid-Change
!***********************************************************************
#debug9 show 'Emplid-Change'

  move 5 to #changeLevel
  do Print-Totals
  new-page
end-procedure

!***********************************************************************
begin-procedure PayEndDate-Change
!***********************************************************************
#debug9 show 'PayEndDate-Change'

  move 3 to #changeLevel
  do Print-Totals
end-procedure

!***********************************************************************
begin-procedure PayGroup-Change
!***********************************************************************
#debug9 show 'Paygroup-Change'

  move 4 to #changeLevel
  do Print-Totals
end-procedure

!***********************************************************************
begin-procedure Department-Change
!***********************************************************************
#debug9 show 'Department-Change'

  move 5 to #changeLevel
  do Print-Totals
end-procedure

!***********************************************************************
begin-procedure Print-Totals
!***********************************************************************
#debug9 show 'Print-Totals'

  move 5 to #totalRow

  while #totalRow >= #changeLevel

    if #current-line > 53  !don't split a total series across pages
      new-page
    end-if

    move #totalRow to #rollRow
    subtract 1 from #rollRow
    get $TotalName from Totals(#totalRow) TotalName
    print $TotalName (+1,15)
    position (+1)
    move -1 to #posn
    move 0 to #i

    while #i <= 8
      get #total from Totals(#totalRow) total(#i)
      get #startCol from Totals(0) startCol(#i)
      do Format-Number(#total, $out, '999,999,999.99mi')
      print $out (+#posn,#startCol)
      multiply -1 times #posn
      array-add #total to Totals(#rollRow) total(#i)
      put 0 into Totals(#totalRow) total(#i)
      add 1 to #i
    end-while

    position (-1)

    while #i <= 12
      get #total from Totals(#totalRow) total(#i)
      get #startCol from Totals(0) startCol(#i)

      if #total <> 0
        do Format-Number(#total, $out, '999,999,999.99mi')
        print $out (+#posn,#startCol)

        evaluate #i
          when = 10
            print 'C' ()
          when = 11
            print 'A' ()
          when = 12
            print 'U' ()
        end-evaluate

        array-add #total to Totals(#rollRow) total(#i)

        put 0 into Totals(#totalRow) total(#i)

      else

        evaluate #i
          when = 9
          when = 10
            print 0.00 (+#posn,#startCol) edit 999,999,999.99mi
        end-evaluate

      end-if

      add 1 to #i
    end-while

    if #totalRow <> 1
      position (+1)
    end-if

    subtract 1 from #totalRow
  end-while

  if #changeLevel = 5  !skip page except on Department change
    position (+1)
    next-listing need=5
  else

    if $End = 'Y'
      do Reset
    end-if

    new-page

  end-if

end-procedure


#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure

#include 'gexxx910.sqc'  !Get Emplid 
#Include 'gexxx951.sqc'  !Select Oracle Instance
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 

!#include 'GEXXX900.sqc'  !Get company multiple row table
!#include 'GEXXX901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table

#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
