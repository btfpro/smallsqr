!***********************************************************************
!  GEXADP:  ADP Report -- Tax Credit Services                          *
!***********************************************************************
!  NOTE: ADP Tax Credit Services helps employers administer various    *
!        federal, state, and local programs.                           *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1988-1997 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
!  $Date::                                                             *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS	DATE		DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! VENDTKK	07/11/2008	Initial Creation 	                 	       *

!************************************************************************
begin-procedure Init-Report
!************************************************************************

 
  move 'ADP' to $ReportID
  move 'ADP REPORT Report' to $ReportTitle
  display $ReportId
  display $ReportTitle

  date-time () mm/dd/yyyy &dayBegan
  date-time () hh:mi:ss &timeBegan
  !show 'Report Began on ' &daybegan ' at '&timebegan
  show 'report began on' &daybegan

  
  EXTRACT $YYYY  FROM &dayBegan  6 4
  EXTRACT $MM  FROM &dayBegan  0 2
  EXTRACT $DD  FROM &dayBegan  3 2
  
  LET $DATE =  $YYYY || $MM || $DD
  
  EXTRACT $HH  FROM &timeBegan  0 2
  EXTRACT $MM  FROM &timeBegan  3 2
  EXTRACT $HH  FROM &timeBegan  6 2
  
  LET $TIME = $HH || $MM || $HH
  
  
  do Init-Array

  do Stdapi-Init

  
  if $prcs_process_instance = ''
    	let $Prcs_Run_Cntl_ID = 'adp'
		let $Prcs_OprID = 'HRBTACH'	
  end-if

    Do Print-Cover-Page

end-procedure

!***********************************************************************
begin-procedure Print-Cover-Page
!***********************************************************************

  
  print 'Oracle DB:'                (1,1)     !GEX001-add
  print $GEXXX951_Oracle_Instance   (1,13)    !GEX001-add

  print 'Giant Eagle'     ()          center
  print 'Report ID:  '    (+1,1)
  print $ReportID         ()
  uppercase $ReportTitle
  print $ReportTitle      ()          center
  page-number             (0,121)  'Page No.  '
  print 'Run Date '       (+1,121)
  print $ReportDate       ()
  print 'Run Time '       (+1,121)
  print $ReportTime       ()

  
  Let #PAGE-COUNT = 0
  NEW-PAGE
   
end-procedure

!***********************************************************************
begin-report
!***********************************************************************
  let $Payroll_ID = 'TRUPTI'
  let $PayDate = '01-01-1900'
  !let $reg_hrs = '10'
  !let $reg_FUTA = '20'
  !let $gross_wage = '30'
    
    let $Fed_ID = '101'
  	let $date_open = '1-Jan-2008'
  	let $date_close = '2-Jan-2008'
  	let $CalYear = '2007'
    !let $company = 'GEI'

!do Init-DateTime
  !do Init-Number
  !do Get-Current-DateTime
  !do Init-Report    

 
 ! Do GEXXX922-Select-Parameters

 !  Let $pay_end_dt = $GEX_RC_PAY.Pay_End_Dt

 ! If $pay_end_dt = ''
    do Get-Last-Confirmed-Pay
  ! End-If
  
       
do Open-File
do Main-Process1
do Main-Process2
do Close-File

  do Reset
  do Stdapi-Term


end-report



!***********************************************************************
Begin-Procedure Get-Last-Confirmed-Pay
!***********************************************************************
! #debug9 Show 'Get-Last-Confirmed-Pay'
      Show 'Get-Last-Confirmed-Pay'
Begin-Select 
PAY_END_DT
PAY_BEGIN_DT
!TO_CHAR(PAY_END_DT,'YYYY') &balance_year
!TO_CHAR(PAY_END_DT,'MM')   &balance_period

  Let $pay_end_dt     = &PAY_END_DT
  Let $pay_begin_dt   = &PAY_BEGIN_DT
  
  SHOW '$pay_end_dt  ' $pay_end_dt 
  SHOW ' $pay_begin_dt '  $pay_begin_dt

FROM   PS_PAY_CALENDAR

WHERE  PAY_END_DT              =
      (SELECT MAX(PAY_END_DT)
       FROM   PS_PAY_CALENDAR
       WHERE  PAY_END_DT      <=  '10-JUL-2008' !sysdate
       AND    PAY_CONFIRM_RUN  = 'Y')
  AND    PAY_CONFIRM_RUN         = 'Y'
End-Select

End-Procedure

!*********************************************************************
Begin-Procedure Main-Process1
!*********************************************************************
  Show 'Main-Process1'

Begin-Select
C.EMPLID
C.COMPANY
!C.LOCATION
C.PAYGROUP
C.DEPTID
A.LAST_NAME
A.FIRST_NAME
A.ADDRESS1
A.CITY
A.STATE
A.POSTAL
A.BIRTHDATE
B.HIRE_DT
B.TERMINATION_DT


	let $emplid  = &C.EMPLID
	!let $location = &C.LOCATION
	let $company = &C.COMPANY
	let $paygroup =  &C.PAYGROUP
	let $deptid  = &C.DEPTID
	let $last_name =&A.LAST_NAME
	let $first_name=&A.FIRST_NAME
	let $address = &A.ADDRESS1
	let $city = &A.CITY
	let $postal = &A.POSTAL
	let $state = &A.STATE
	let $birthday = &A.BIRTHDATE
	let $hire_dt = &B.HIRE_DT
	let $term_dt = &B.TERMINATION_DT

 do Get_Federal_EIN
 do Get-Reg-FUTA-Wages
 do Get-OT-FUTA-Wages
 do Get-OTHR-FUTA-Wages
 do Write_Payroll_File

  FROM PS_PERSONAL_DATA A, PS_EMPLOYMENT B,  PS_JOB C ,  PS_GEX_DEPT_TBL GDT
  WHERE  A.EMPLID = B.EMPLID
     AND A.EMPLID = C.EMPLID
     AND C.EFFDT =
        (SELECT MAX(C_ED.EFFDT) FROM PS_JOB C_ED
        WHERE C.EMPLID = C_ED.EMPLID
          AND C.EMPL_RCD = C_ED.EMPL_RCD
          AND C_ED.EFFDT <=  $pay_end_dt)
    AND C.EFFSEQ =
        (SELECT MAX(C_ES.EFFSEQ) FROM PS_JOB C_ES
        WHERE C.EMPLID = C_ES.EMPLID
          AND C.EMPL_RCD = C_ES.EMPL_RCD
          AND C.EFFDT = C_ES.EFFDT) 
    
   AND    C.DEPTID            = GDT.DEPTID
   AND    GDT.EFFDT           =
      (SELECT MAX(EFFDT)
       FROM   PS_GEX_DEPT_TBL
       WHERE  DEPTID       = GDT.DEPTID
       AND    EFFDT       <= $pay_end_dt)

   AND    GDT.SEQUENCE_NUMBER =
      (SELECT MAX(SEQUENCE_NUMBER)
       FROM   PS_GEX_DEPT_TBL
       WHERE  DEPTID       = GDT.DEPTID
       AND    EFFDT        = GDT.EFFDT)
  AND C.DEPTID NOT LIKE ('3%')
  AND GDT.GEX_RGN_CD  BETWEEN '100' AND '199'     
      
ORDER BY C.EMPLID

End-Select
     
End-Procedure


!*********************************************************************
Begin-Procedure Main-Process2
!*********************************************************************
  Show 'Main-Process2'
	
	let $location = ''
	let $effdt	  = ''
	let $descr	  = ''
	let $address  = ''
	let $city     = ''
	let $state    = ''
	let $postal   = ''
	let $phone    = ''
	
Begin-Select
L.LOCATION
L.EFFDT
L.DESCR
L.ADDRESS1
L.CITY
L.STATE
L.POSTAL
L.PHONE 


	let $location = &L.LOCATION
	let $effdt	  = &L.EFFDT
	let $descr	  = &L.DESCR
	let $address  = &L.ADDRESS1
	let $city     = &L.CITY
	let $state    = &L.STATE
	let $postal   = &L.POSTAL
	let $phone    = &L.PHONE 

	!do Get_Federal_EIN
    do Write_Location_File

from PS_LOCATION_TBL  L 
where L.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_LOCATION_TBL  L1
       WHERE  L1.LOCATION = L.LOCATION
         AND L1.SETID = L.SETID
         AND  L1.EFFDT   <= '10-JUL-2008') !sysdate)  
order by L.LOCATION


End-Select

End-Procedure

!*********************************************************************
Begin-Procedure Get-Reg-FUTA-Wages
!*********************************************************************
Begin-Select
sum(PO.OTH_PAY) &REG_OTH_PAY
 Let $reg_FUTA = &REG_OTH_PAY
from PS_PAY_EARNINGS PE , PS_OTH_EARNS PO
where PE.COMPANY = PO.COMPANY
     AND PE.PAYGROUP = PO.PAYGROUP
     AND PE.PAY_END_DT = PO.PAY_END_DT
     AND PE.OFF_CYCLE = PO.OFF_CYCLE
     AND PE.PAGE_NUM = PO.PAGE_NUM
     AND PE.LINE_NUM = PO.LINE_NUM
     AND PE.ADDL_NBR = PO.ADDL_NBR
     AND PO.PAYGROUP = $paygroup
     AND PO.COMPANY = $company
     AND PO.PAY_END_DT = $pay_end_dt
     AND (PO.ERNCD IN ('REG', '001', '004', '005', '006','008','175', '176', '177', '178','200') 
             OR PO.EARNCD BETWEEN '140' AND '170' )
     AND PE.EMPLID = $emplid        
End-Select
End-Procedure

!*********************************************************************
Begin-Procedure Get-OT-FUTA-Wages
!*********************************************************************
Begin-Select
sum(PO.OTH_PAY)   &OT_OTH_PAY
from PS_PAY_EARNINGS PE , PS_OTH_EARNS PO
where PE.COMPANY = PO.COMPANY
     AND PE.PAYGROUP = PO.PAYGROUP
     AND PE.PAY_END_DT = PO.PAY_END_DT
     AND PE.OFF_CYCLE = PO.OFF_CYCLE
     AND PE.PAGE_NUM = PO.PAGE_NUM
     AND PE.LINE_NUM = PO.LINE_NUM
     AND PE.ADDL_NBR = PO.ADDL_NBR
     AND PO.PAYGROUP = $paygroup
     AND PO.COMPANY = $company
     AND PO.PAY_END_DT = $pay_end_dt
     AND PO.ERNCD IN ( 'OTP', '002', '003', '171', '172', '173', '179', '180') 
     AND PE.EMPLID = $emplid       
End-Select
End-Procedure

!*********************************************************************
Begin-Procedure Get-OTHR-FUTA-Wages
!*********************************************************************
Begin-Select
sum(PO.OTH_PAY)  &OTHR_OTH_PAY
PE.REG_HRS                  
		Let $reg_hrs  = &PE.REG_HRS 
from PS_PAY_EARNINGS PE , PS_OTH_EARNS PO
where PE.COMPANY = PO.COMPANY
     AND PE.PAYGROUP = PO.PAYGROUP
     AND PE.PAY_END_DT = PO.PAY_END_DT
     AND PE.OFF_CYCLE = PO.OFF_CYCLE
     AND PE.PAGE_NUM = PO.PAGE_NUM
     AND PE.LINE_NUM = PO.LINE_NUM
     AND PE.ADDL_NBR = PO.ADDL_NBR
     AND PO.PAYGROUP = $paygroup
     AND PO.COMPANY = $company
     AND PO.PAY_END_DT = $pay_end_dt
     AND PO.ERNCD >= '501'
     AND PE.EMPLID = $emplid      
End-Select

	Let #gross_wage = &REG_OTH_PAY +  &OT_OTH_PAY + &OTHR_OTH_PAY
 
End-Procedure

!*********************************************************************
Begin-Procedure Get_Federal_EIN
!*********************************************************************
 SHOW 'IN Get_Federal_EIN'
 show '$company : ' $company
Begin-Select

X.COMPANY
X.FEDERAL_EIN
 
    let $federal_ein =  &X.FEDERAL_EIN
 
FROM PS_COMPANY_TBL X 
WHERE X.COMPANY = $company
  AND X.EFFDT =
        (SELECT MAX(EFFDT)
         FROM PS_COMPANY_TBL
         WHERE COMPANY = $company)
        !AND EFFDT <= sysdate)



!X.COMPANY
!X.FEDERAL_EIN

 !let $federal_ein =  &X.FEDERAL_EIN

!FROM  PS_W2_COMPANY  X 
!WHERE X.CALENDAR_YEAR   = '2007'			!$CalYear
 ! AND X.TAXFORM_ID       =  'W'
  !AND X.COMPANY          = $company

End-Select

End-Procedure

!*********************************************************************
Begin-Procedure  Write_Location_File
!*********************************************************************
 SHOW 'IN Write_location_File'
 show '$location '	 $location
 
  Write 2 From  $location:12
  		$descr:30
  		$address:50
  		$city:50
                $state:2
                $postal:5
                ' ':30
                ' ':50
                ' ':50
                ' ':2
                ' ':5
  		$phone:13
  		' ':13
  		$Fed_ID:10
  		$date_open:10
  		$date_close:10 
  		' ':25
  		' ':25
  		' ':25
  		' ':25
  	               
        Status=#filestat

  If #filestat != 0
     Show 'Error writing detail record to output file2.  Program terminating.'
     Stop
 End-If

End-Procedure

!*********************************************************************
Begin-Procedure  Write_Payroll_File
!*********************************************************************
  show 'Write_Payroll_File '     
  show ' $federal_ein  '  $federal_ein
	show ' $emplid '  $emplid
	
	 !do Get-Emp-Ssn ($emplid , $Ssn_Out)
       
  Write 1 From  $Payroll_ID:20
                $PayDate:10
                $pay_begin_dt:10
                $pay_end_dt:10
                ' ':1
                $federal_ein:10
                ' ':20
                $ssn:11
                $emplid:16
                $last_name:30
                $first_name:30
                ' ':1
                $address:50
                $city:50
                $state:2
                $postal:5
                $birthday:10
                $deptid:12
                ' ':25
                ' ':13
                ' ':1
                ' ':1
                ' ':1
                ' ':10
                $hire_dt:10
                $term_dt:10
                $reg_hrs:9
                ' ':9
                ' ':9
                $reg_FUTA:13
                ' ':13
                ' ':13
               ! $gross_wage:13
                #gross_wage:13
             
        Status=#filestat

  If #filestat != 0
     Show 'Error writing detail record to output file.  Program terminating.'
     Stop
 End-If
  
End-Procedure

!*********************************************************************
Begin-Procedure Open-File
!*********************************************************************
      Show 'Open-File'
  Let $file1 = '{OUTFILE}' || Lower($ReportID)||'_PAY' || '.dat'
  Let $file2 = '{OUTFILE}' || Lower($ReportID)||'_LOC' || '.dat'
  
  !let $file1 = $DATE || $TIME || 'COMPANY CODE' || 'PAYROLL_TCPAYROLL_001-000.txt'
  !LET $file2 =  $DATE || $TIME ||'_TX-9999_UNITLIST_TCUNITLIST_001-000.txt'
  
  !Let $file1 = '\\fcp11947\TEMP\NEW_PAY.TXT'
  !Let $file2 = '\\fcp11947\TEMP\LOC_PAY.txt'
  

  Open $file1
       As 1
       For-Writing
       Record=2000:Fixed
       Status=#filestat
       
  If #filestat != 0
     Show 'Error opening output file1.  Program terminating.'
     Stop
     else 
     Show 'Open-File success-'
  End-If
       
   Open $file2
      As 2
     For-Writing
     Record=1000:Fixed

  If #filestat != 0
    Show 'Error opening output file2.  Program terminating.'
   Stop
  End-If
End-Procedure

!*********************************************************************
Begin-Procedure Close-File
!*********************************************************************
Show 'Close-File'
  Close 1

  If #filestat != 0
     Show 'Error closing output file1.  Program terminating.'
     Stop
  End-If
  
  
  
 Close 2

  If #filestat != 0
     Show 'Error closing output file2.  Program terminating.'
     Stop
  End-If
  
End-Procedure





#Include 'getgeid.sqc'             
#Include 'setenv.sqc' 
#include 'stdapi.sqc'
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers

#Include 'gexxx922.sqc'  !Get gex_rc_pay run controls