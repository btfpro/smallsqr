!******************************************************************************************
!GEXPYUP3:   This program reads the Pay Data Input table and updates		          *
!             PaySheets.							          *
!             Cloned from GEXPYUP2.SQC to slect from table rather than		          *
!             reading from a file.						          *
!******************************************************************************************
!										          *
!               Confidentiality Information:					          *
!										          *
! This module is the confidential and proprietary information of		          *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted		          *
! in any form, by any means, in whole or in part, nor is it to be used		          *
! for any purpose other than that for which it is expressly provided		          *
! without the written permission of Giant Eagle.				          *
!										          *
!										          *
!******************************************************************************************
!                         MODIFICATION HISTORY					          *
!******************************************************************************************
!     ID#                   INITIALS    DATE         DESCRIPTION OF THE CHANGE            *
!******************************************************************************************
!  GEX_PY848_KRONOS_PROJECT ISDVAKG     11/07/2011	     INITIAL CREATION             *
!  GEXHR_E83371_KRONOS_INTGN ISDVMZA    05/27/2014   Modify program to separate the       *
!                                                    processing of ASF deptid.  This will *
!                                                    be controlled via run control id.    *
!GEX_SEC_REENG 2015-04-29 Vahini Katta                                 *
!Changes related to gex_emplid_mapp/7 digit emplid
!******************************************************************************************
! PROGRAM VALUES:  The following values are set explicitly in this pgm
!
! Holiday Earnings Codes: HOL, 502
! Vacation Earnings Codes: 513, 515
! Overtime Earnings Codes: OTP
! Regular Earnings Codes: REG
! Pharmacy Earnings Adjustment Code: REG
! Pharmacy Paygroups: PHM, PH2
! Pharmacy Premium Earnings Code: 167
! Sunday Management Earnings Code: 170
! Alternate Part-time rate Earnings Code: 176
! Part-time Vacation Earnings Code: 515
!
!********************************************************************************
begin-procedure Prepare-company-lookup
#debug9 show 'Prepare-company-lookup'

Load-Lookup

     Name=CompanyLookup
     Table='PS_COMPANY_TBL COM'
     Key='COM.COMPANY'
     Return_Value='COM.COMPANY'

end-procedure
!********************************************************************************
!********************************************************************************
begin-procedure Prepare-paygroup-lookup
#debug9 show 'Prepare-paygroup-lookup'

Load-Lookup
     Name=PaygroupLookup
     Table='PS_PAYGROUP_TBL PAY'
     Key='PAY.PAYGROUP'
     Return_Value='PAY.PAYGROUP'

end-procedure
!********************************************************************************
!********************************************************************************
begin-procedure Prepare-store-lookup
#debug9 show 'Prepare-store-lookup '

Load-Lookup
     Name=storeLookup
     Table='PS_DEPT_TBL DEPT'
     Key='DEPT.DEPTID'
     Return_Value='DEPT.DEPTID'
     Where='DEPT.EFF_STATUS = ''A'''

end-procedure

!********************************************************************************
!********************************************************************************
begin-procedure Prepare-Businessunit-lookup
#debug9 show 'Prepare-Businessunit-lookup '

Load-Lookup
     Name=BULookup
     Table='PS_BUS_UNIT_TBL_HR BU'
     Key='BU.DEFAULT_SETID'
     Return_Value='BU.BUSINESS_UNIT'
     Where='BU.ACTIVE_INACTIVE  = ''A'''

end-procedure
!********************************************************************************
!********************************************************************************
begin-procedure Prepare-jobcode-lookup
#debug9 show 'Prepare-jobcode-lookup '

Load-Lookup
     Name=jobcodeLookup
     Table='PS_JOBCODE_TBL JCD'
     Key='JCD.JOBCODE'
     Return_Value='JCD.JOBCODE'
     Where='JCD.EFF_STATUS = ''A'''

end-procedure
!********************************************************************************
!********************************************************************************
begin-procedure Prepare-Acctcode-lookup
#debug9 show 'Prepare-Acctcode-lookup '

Load-Lookup
     Name=acctcodeLookup
     Table='PS_GEX_ACCT_CD_TBL ACD'  !GEX-CXB 09/26/2007 Added for Upgrade 9.0
     Key='ACD.ACCT_CD'
     Return_Value='ACD.ACCT_CD'
     Where='ACD.EFF_STATUS = ''A'''	!GEX-CXB 09/26/2007 Added for Upgrade 9.0

end-procedure
!********************************************************************************
!********************************************************************************
begin-procedure Prepare-Shiftcode-lookup
#debug9 show 'Prepare-Shiftcode-lookup '

Load-Lookup
     Name=shiftcodeLookup
     Table='PS_SHIFT_TBL SHF'
     Key='SHF.SHIFT'
     Return_Value='SHF.SHIFT'
     Where='SHF.EFF_STATUS = ''A'''

end-procedure
!********************************************************************************
!********************************************************************************
begin-procedure Prepare-earncode-lookup
#debug9 show 'Prepare-earncode-lookup '

Load-Lookup
     Name=earncodeLookup
     Table='PS_EARNINGS_TBL ERN'
     Key='ERN.ERNCD'
     Return_Value='ERN.ERNCD'
     Where='ERN.EFF_STATUS = ''A'''

end-procedure
!********************************************************************************
!********************************************************************************
begin-procedure Report
#debug9 show 'Report '

use-report ERROR-REPORT

 #debug8 show 'in gexpyup3.sqc - procedure report'
 do edit-pay-calendar

 if $found = 'N'
    goto report-exit
 end-if

  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  #debug9 show 'Doing all Lookups'
   do prepare-company-lookup
   do prepare-paygroup-lookup
   do prepare-jobcode-lookup
   do prepare-acctcode-lookup
   do prepare-store-lookup
   do prepare-businessunit-lookup  !SXK 01/05/00
   do prepare-shiftcode-lookup
   do prepare-earncode-lookup

  #debug8 show $company
  #debug8 show $paygroup
  #debug8 show ' $pay_end_dt ' $pay_end_dt

  move 'N' to $key_change

  let $table_name = 'PS_GEX_R_GEXPYUP2'
  do drop-wrk-table
  do create-temp-table
  let $trans_processing = 'Y'
  let $first_trans = 'Y'
  let #trans_store_total = 0
  let #hrs_sent_total = 0
  let #hrs_rej_total = 0

!***  GEXHR_E83371_KRONOS_INTGN    ISDVMZA     05/27/2014   --  Begin     *****!
  Do Select-Department-ID
!****  GEXHR_E83371_KRONOS_INTGN    ISDVMZA     05/27/2014   --  Begin     *****!

  Do Select-From-Input-Table

  display 'Total transactions loaded: ' noline
  display $out

  display 'Total errors in transactions: ' noline
  display $out
  date-time () hh:mi:ss &timeEnded
  display 'Load Process Ended: ' noline
  display &timeEnded

  let $trans_processing = 'N'

  do Misc-Audits

  do insert-into-gexpycur  ! RKK 08/05/2009

  do print-audit-rpt
  do select-from-gexpyhst-current  ! RKK - 08/05/2009
  do print-paper-details   ! RKK - 08/05/2009
  use-column 0

  print 'Total Transactions=' (+2,1)
  do Format-Number(#InputTran, $out, '99999')
  print $out ()
  print '     Total Successful Transactions=' ()
  do Format-Number(#success-count, $out, '99999')
  print $out ()

 Report-Exit:

End-Procedure
!********************************************************************************

!********************************************************************************
!****  GEXHR_E83371_KRONOS_INTGN    ISDVMZA     05/27/2014   --  Begin      *****
!This procedure will Select the Department ID for exclusion during Sunday run   *
!   and for inclusion during Monday Run for ASF.  Include/Exclude indicator is  *
!   coming from PS_GEX_RC_DEPTID table.                                         *
!********************************************************************************
Begin-procedure Select-Department-ID
#debug9 show 'Select-Department-ID'

    Let $GEXXX902_Deptid_Alias = 'TA.DEPTID'
    Do GEXXX902-Select-Deptid-Parameters

    If rtrim(&GEX_RC_DEPTID.INCLUD_EXCLUDE_IND, ' ') = '+'
        Let $Deptid_Criteria = $GEXXX902_INCLUDE_DEPTID_CRITERIA
    Else
        Let $Deptid_Criteria = $GEXXX902_EXCLUDE_DEPTID_CRITERIA
    End-If

    #debug8 show '$Deptid_Criteria = ' $Deptid_Criteria

End-Procedure
!********************************************************************************
!****  GEXHR_E83371_KRONOS_INTGN   ISDVMZA     05/27/2014   --  End         *****
!********************************************************************************

!********************************************************************************
Begin-procedure Select-From-Input-Table
#debug9 show 'Select-From-Input-Table '

begin-select

ta.emplid
ta.deptid
ta.jobcode
ta.acct_cd
ta.sepchk
ta.pay_begin_dt,
   Do format-datetime (&ta.pay_begin_dt,$pay_begindt_str,{DEFCMP},'','')
ta.pay_end_dt,
   Do format-datetime (&ta.pay_end_dt,$pay_enddt_str,{DEFCMP},'','')
ta.rate_flag,
ta.erncd,
TA.HOURLY_RT &TA.HOURLY_RT,
ta.shift
sum(ta.REG_HRS)	&reg_hrs,
ta.deptid_home                             !isdvsxp 09292008

   !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
  let $emplid9 = '999999999'
  Do MAP-EMPLID 
  #debug8 show 'show empl_rcd:' #empl_rcdno
  if $mapping_id_found='Y'
     !let $emplid9		= &MAP.ssn   !GEX_SEC_REENG 2015-04-29 Vahini Katta
     let $emplid9		= &ta.emplid !GEX_SEC_REENG 2015-04-29 Vahini Katta
  end-if
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends

  show 'ta.emplid and  $emplid9	' &ta.emplid ' ' $emplid9

  let $store		= &ta.deptid
  let $erncd		= &ta.erncd
  let $work_job_cd	= &ta.jobcode
  let $work_dept	= &ta.acct_cd
  let #hours		= &reg_hrs
  let $hours		= ltrim(edit(#hours,'999999.99'), ' ')
  let #hrlyrt		= &ta.hourly_rt
  let $shiftcd		= &ta.shift
  let $pay_begindt	= &ta.pay_begin_dt
  let $pay_enddt	= &ta.pay_end_dt
  let #sepchk		= &ta.sepchk
  let $sepchk		= ltrim(edit(#sepchk,'9'), ' ')

  #ifdef debug8
  show '#hours ' #hours
  show '$hours ' $hours
  show '#hrlyrt ' #hrlyrt
  #endif

  do Get-Home-Jobcd
  let $home_job_cd	= &ghj.jobcode
  let $home_Dept        = &ghj.acct_cd
  let $home_deptid      = &ghj.deptid    !ISDVSXP ITG 40793 07-JAN-2009

  Do Get-Company-Paygroup 
  If $found-company-paygroup = 'N' 
    let $company =  &ghj.company
    let $paygroup = &ghj.paygroup
    let $empl_rcdno = ltrim(edit(#empl_rcdno,'9'), ' ')
  else 
    let $company =  &pe.company
    let $paygroup = &pe.paygroup
    let $empl_rcdno = ltrim(edit(#empl_rcdno,'9'), ' ')
  end-if

  if &ta.rate_flag = 'y'
     #debug9 show '&ta.rate_flag = y, so doing Get-Alt-Rate'
     Do Get-Alt-Rate
     if $alt_rt_found='Y'
       let #hrlyrt        = &APD.HOURLY_RT
     end-if
  end-if

  if &ghj.empl_type ='S'  and #Hours != 0   ! DXS, If Salaried Empl and sum(ta.REG_HRS) != 0 then hourly rate should be zero.
    #debug9 show ' hrly rate being changed to zero'
    let #hrlyrt = 0
  end-if

  let $hrlyrt		= ltrim(edit(#hrlyrt,'999999999999.999999'), ' ')

  #ifdef debug8
  show '#hours ' #hours
  show '$hours ' $hours
  show '#hrlyrt ' #hrlyrt
  #endif

  add 1 to #InputTran

  let $transaction = $company||' '||$paygroup||' '||$emplid9||' '||$empl_rcdno||' '||$store
		       ||' '||$home_job_cd||' '||$work_job_cd||' '||$home_dept||' '||$work_dept||
		       ' '||$erncd||' '||$hours||' '||$hrlyrt||' '||$shiftcd||' '||$pay_begindt||
		       ' '||$pay_endDt||' '||$sepchk
   #debug8 show '$transaction ' $transaction

  if $first_trans = 'Y'
         move 'N' to $first_trans
         move $store to $store_save
         move $company to $company_save
         move $paygroup to $paygroup_save
         #debug9 show 'Doing Get-Last-Page, $first_trans = Y'
         do Get-Last-Page
         move #Page# to #Page#Save
         add 1 to #Page#
         move 1 to #line#
  else
	#debug8 show '$first_trans != Y'

      if RTRIM($company, ' ') <> RTRIM($company_save, ' ')
         move 'Y' to $key_change
      end-if

      if RTRIM($paygroup, ' ') <> RTRIM($paygroup_save, ' ')
	      move 'Y' to $key_change
      end-if

	    #ifdef debug8
        show '$store <' $store '>'
	      show '$store_save <' $store_save '>'
	      show '$key_change <' $key_change '>'
      #endif

      if (RTRIM($store,' ') <> RTRIM($store_save, ' ')) or ($key_change = 'Y')
         move $company_save to $company_upd
         move $company to $company_save
         move $paygroup_save to $paygroup_upd
	 move $paygroup to $paygroup_save
         move $store_save to $store_upd
         move $store to $store_save
         #ifdef debug8
           show 'company_upd' $company_upd
           show 'company_save' $company_save
           show 'paygroup_upd' $paygroup_upd
           show 'paygroup_save' $paygroup_save
           show 'store_upd' $store_upd
           show 'store_save' $store_save
         #endif
         do process-temp-table
         let #trans_store_total = 0
         let #hrs_sent_total = 0
         let #hrs_rej_total = 0
      end-if
  end-if

  let #trans_store_total = #trans_store_total + 1
  let $skipped = 'N'

  move $hours to #hrs_in
  let #hrs_sent_total = #hrs_sent_total + #hrs_in

  if $key_change = 'Y'
     do Get-Last-Page
     move #Page# to #Page#Save
     add 1 to #Page#
     move 1 to #line#
     move 'N' to $key_change
  end-if

  Do Do-Validates

  #debug9 show 'After Validates'

  #ifdef debug8
   show '#hours ' #hours
   show '$hours ' $hours
   show '#hrlyrt ' #hrlyrt
  #endif

  move 'N' to $Errorfound

  do Get-Page-Line

  #debug9 show 'After Get-Page-Line'
  #ifdef debug8
    show '#hours ' #hours
    show '$hours ' $hours
    show '#hrlyrt ' #hrlyrt
  #endif

  move $EmplID to $EmplIDSave

  if $ErrorFound = 'N'
    add 1 to #success-count
  else
    add 1 to #ErrorCount
    do error-found
    move 'Y' to $skipped
    print 'Unsuccessful processing of the transaction' (,43)
    print '; Verify Transaction;' ()
    print $transaction (+1,21)
  end-if

  if $skipped = 'Y'
    let #hrs_rej_total = #hrs_rej_total + to_number($hours)
   #debug7 show '$rejected transaction ' $transaction
  end-if
  add 1 to #InputDisp
  if #InputDisp = 50
    move 0 to #InputDisp
    #ifdef debug8
      !date-time () hh:mi:ss &timeProcess
      show #InputTran 99999 noline
      show ' Transactions Processed: ' ! noline
      !display &timeProcess
    #endif
  end-if

  move $company_save to $company_upd
  move $company to $company_save
  move $paygroup_save to $paygroup_upd
  move $paygroup to $paygroup_save
  move $store_save to $store_upd
  move $store to $store_save
  #ifdef debug8
    show 'company_upd' $company_upd
    show 'company_save' $company_save
    show 'paygroup_upd' $paygroup_upd
    show 'paygroup_save' $paygroup_save
    show 'store_upd' $store_upd
    show 'store_save' $store_save
  #endif

	#debug8 show '$first_trans = Y'
  do process-temp-table

from PS_GEX_KRONOS_IN ta
WHERE ta.reg_hrs <> 0
  and [$Deptid_Criteria]                   !***  GEXHR_E83371_KRONOS_INTGN -- ISDVMZA 05/28/2014
group by ta.emplid,
         ta.deptid,
      	 ta.jobcode,
	       ta.acct_cd,
         ta.sepchk,
	       ta.pay_begin_dt,
	       ta.pay_end_dt,
	       ta.rate_flag,
	       ta.erncd,
	       ta.hourly_rt,
	       ta.shift,
         ta.deptid_home
UNION
SELECT
ta.emplid,
ta.deptid,
ta.jobcode,
ta.acct_cd,
ta.sepchk,
ta.pay_begin_dt,
ta.pay_end_dt,
ta.rate_flag,
ta.erncd,
SUM(TA.HOURLY_RT) ,
ta.shift,
ta.REG_HRS,
ta.deptid_home
from PS_GEX_KRONOS_IN ta
WHERE ta.reg_hrs = 0
  and [$Deptid_Criteria]                   !***  GEXHR_E83371_KRONOS_INTGN -- ISDVMZA 05/28/2014
group by ta.emplid,
         ta.deptid,
      	 ta.jobcode,
	       ta.acct_cd,
         ta.sepchk,
	       ta.pay_begin_dt,
	       ta.pay_end_dt,
	       ta.rate_flag,
	       ta.erncd,
	       ta.shift,
	       ta.reg_hrs,
         ta.deptid_home

end-select

end-procedure
!********************************************************************************
!********************************************************************************
Begin-Procedure Do-Validates
#debug9 show 'Do-Validates '

move 'N' to $Errorfound

!*******************************************
!****  EMPLOYEE RECORD NUMBER VALIDATION****
!*******************************************
   #debug8 show 'EMPLOYEE RECORD NUMBER validation'
    let $EmplId = RTRIM($EmplId9, ' ')
    if RTRIM($Empl_RcdNo, ' ') = ''
	     do Error-Found
       print 'No EmplRcdNo.  Defaulted to 0' (,43)
       add 1 to #ErrorCount
       use-report error-report
       move 0 to #Empl_RcdNo
    else
      move 'Empl Rcd#' to $FieldPrint
      move $Empl_RcdNo to $FieldValue
      move 1 to #FieldLength
      move 0 to #FieldDecimal
      move 'N' to $Negative
      do Edit-Numeric
	    if $Numerr = 'N'
	      let #Empl_RcdNo = RTRIM($Empl_RcdNo, ' ')
	    end-if
    end-if

!*************************************************
!****** EMPLOYEE ID VALIDATION********************
!*************************************************
   #debug8 show 'EMPLOYEE ID  validation'

    if RTRIM($EmplId9, ' ') = '999999999'
      do Error-Found
      print 'No EmplID for BLUE CUBE employee ' (,43)
      print &ta.emplid				(,+2)
      print '; Transaction is rejected;' ()
      print $transaction (+1,21)
      add 1 to #ErrorCount
      move 'Y' to $skipped
      goto Skip-Record
    else
      move 'Empl Id#' to $FieldPrint
      move $EmplId9 to $FieldValue
      move 9 to #FieldLength
      move 0 to #FieldDecimal
      move 'N' to $Negative
      do Edit-Numeric
      if $Numerr = 'N'
        let $EmplId = RTRIM($EmplId9, ' ')
      else
        move 'Y' to $skipped
        goto skip-record
      end-if
      if RTRIM($EmplId, ' ') <> ''
      	do Edit-EmplID
      end-if
    end-if

    if $errorfound = 'Y'
      move 'Y' to $skipped
      do format-datetime($pay_begin_dt, $pay_begin_dt_str, {DEFCMP}, '', '')
	    do format-datetime($pay_end_dt, $pay_end_dt_str, {DEFCMP}, '', '')
!Blue Cube may send over dates that don''t coincide with the current
!PAY_BEGIN or PAY_END
      let $pay_begin_dt_ins = $pay_begin_dt
    	if $Pay_BeginDt_str <> $Pay_Begin_Dt_Str
        do Find-Max-Sunday-Date
        let $pay_begin_dt_ins = &SUN.PAY_BEGIN_DT
      end-if
      let $pay_end_dt_ins = $pay_end_dt
	    if $Pay_EndDt_str <> $Pay_End_Dt_Str
        do Find-Min-Saturday-Date
        let $pay_end_dt_ins = &SAT.PAY_END_DT
      end-if
	    goto Skip-Record
    end-if

!*************************************************
!******   COMPANY VALIDATION  ********************
!*************************************************

   if RTRIM($Company, ' ') = ''
  	 do Error-Found
	   print 'No Company ID' (,43)
     print '; Transaction is rejected;' ()
     print $transaction (+1,21)
	   add 1 to #ErrorCount
     move 'Y' to $skipped
	   goto Skip-Record
   else
	   do Edit-Company
   end-if

   if $Found = 'N'
     move 'Y' to $skipped
	   goto Skip-Record
   end-if

!*************************************************
!******  Pay Group VALIDATION ********************
!*************************************************

   if RTRIM($PayGroup, ' ') = ''
	   do Error-Found
	   print 'No PayGroup' (,43)
     print '; Transaction is rejected;' ()
     print $transaction (+1,21)
	   add 1 to #ErrorCount
     move 'Y' to $skipped
	   goto Skip-Record
   else
	   do Edit-PayGroup
   end-if

   if $Found = 'N'
     move 'Y' to $skipped
	   goto Skip-Record
   end-if

!*************************************************
!****** Store Number VALIDATION ******************
!*************************************************

   if RTRIM($Store, ' ') = ''
	   do Error-Found
	   print 'No Store Number' (,43)
	   add 1 to #ErrorCount
	   do get-home-store
	   move $home_Store to $store
   else
	  do Edit-Store
   end-if

!isdvsxp ITG 40793 01/10/2009  -- start
   if substr($home_Store,4,1) = 'I'            !SXP
begin-SELECT
GDT.DEPTID
  let $STORE1 = &GDT.DEPTID
  !let $found = 'Y'

From PS_GEX_DEPT_TBL GDT
where GDT.department = $store
end-SELECT

let $store = $store1
   end-if                              !SXP
 !isdvsxp ITG 40793 01/10/2009 -- end

!*************************************************
!****** Home JobCode VALIDATION ******************
!*************************************************

   if RTRIM($Home_Job_Cd, ' ') = ''
	   do Error-Found
!	 print 'No Home Job Code' (,43)   ! RKK - 08/05/2009
	   add 1 to #ErrorCount
	   do get-home-job-cd
   else
	   let $Home_Job_Cd = RTRIM($Home_Job_Cd, ' ')  ! remove padded spaces
	   let $Home_Job_Cd = LTRIM($Home_Job_Cd, ' ')  ! from left or right
	   do Edit-Home-Job-Cd
   end-if

!*************************************************
!****** Work JobCode VALIDATION ******************
!*************************************************

   if RTRIM($Work_Job_Cd, ' ') = ''
!       use-report nonc-report  ! RKK - 08/05/2009
	   do Error-Found
	   print 'No Work Job Code' (,43)
	   add 1 to #ErrorCount
     use-report error-report
	   if RTRIM($home_job_cd, ' ') = ''
	     do get-home-job-cd
	     move $home_job_cd to $work_job_cd
	   else
	     move $home_job_cd to $work_job_cd
	   end-if
   else
	   let $Work_Job_Cd = RTRIM($Work_Job_Cd, ' ')  ! from left or right
	   let $Work_Job_Cd = LTRIM($Work_Job_Cd, ' ')  ! from left or right
	   do Edit-Work-Job-Cd
   end-if

!*************************************************
!******* Home Dept VALIDATION ********************
!*************************************************
   if RTRIM($Home_Dept, ' ') = ''
	   do Error-Found
	   print 'No Home Dept Code' (,43)
	   add 1 to #ErrorCount
	   do get-home-dept-cd
   else
	   do Edit-Home-Dept-Cd
   end-if

!*************************************************
!******* Work Dept VALIDATION ********************
!*************************************************



   if RTRIM($Work_Dept, ' ') = ''

!       use-report nonc-report  ! RKK - 08/05/2009

	   do Error-Found

	   print 'No Work Dept Code' (,43)

	   add 1 to #ErrorCount

     use-report error-report

	   if RTRIM($home_dept, ' ') = ''

	     do get-home-dept-cd

	     move $home_dept to $work_dept

	   else

	     move $home_dept to $work_dept

	   end-if

   else

	   do Edit-Work-Dept-Cd

   end-if



!*************************************************

!******* Hours Worked VALIDATION *****************

!*************************************************

  #debug8 show 'Hours Validation'



  if RTRIM($Hours, ' ') = '0.00'

	  move  0  to #Hours

  else

	  move 'Hours' to $FieldPrint

	  move $Hours to $FieldValue

	  move 9 to #FieldLength

	  move 2 to #FieldDecimal

	  move 'Y' to $Negative

	  do Edit-Numeric



  	if $Numerr = 'N'

	    let #Hours = RTRIM($Hours, ' ')

	  else

	    move  0  to #Hours

	  end-if

  end-if



!*************************************************

!******* Hourly Rate VALIDATION  *****************

!*************************************************



   #debug8 show 'Hrly Rate Validation'



  if RTRIM($HrlyRt, ' ') = '0.000000'

  	move 0 to #HrlyRt

    if #hours = 0

       use-report nonc-report

       do Error-Found

       add 1 to #ErrorCount

       print 'Hours and Hourly rate both are not passed' (,43)

       print '; Transaction is rejected;' ()

       print $transaction (+1,21)

       use-report error-report

       move 'Y' to $skipped

       goto skip-record

    end-if

  else

	  move 'Hourly Rate' to $FieldPrint

	  move $HrlyRt to $FieldValue

	  move 19 to #FieldLength

	  move 6 to #FieldDecimal

	  move 'N' to $Negative

	  do Edit-Numeric

  	if $Numerr = 'N'

	    let #HrlyRt = RTRIM($HrlyRt, ' ')

	  else

	    move 0 to #HrlyRt

	  end-if

  end-if



!*************************************************

!******* Earnings Code VALIDATION ****************

!*************************************************



   #debug8 show 'Earncode validation'



  if RTRIM($ErnCd, ' ') = ''

	  do Error-Found

	  print 'No Earnings Code' (,43)

	  add 1 to #Errorcount

	  move 'XXX' to $Erncd

  else

	  do Edit-ErnCd

    if $skip_record_tran = 'Y'

      print '; Transaction is rejected;' ()

      print $transaction (+1,21)

      move 'Y' to $skipped

      goto skip-record

    end-if

  end-if



!*************************************************

!******* Pay_Begin_Dt/Pay_End_Dt VALIDATION ******

!*************************************************

    #debug8 show 'Pay dates Validations'



   if RTRIM($Pay_BeginDt, ' ') = ''

	   do Error-Found

	   add 1 to #ErrorCount

	   print 'No Pay Begin Date' (,43)

   else

  	 do format-datetime($pay_begin_dt, $pay_begin_dt_str, {DEFCMP}, '', '')

	   #debug8 show '$Pay_BeginDt_str from ps_gex_smtrk_in table ' $Pay_BeginDt_str

	   #debug8 show '$Pay_Begin_Dt_Str from pay_calendar table ' $Pay_Begin_Dt_Str

	   #debug8 show '$sepchk ' $sepchk

		 if $Pay_BeginDt_str <> $Pay_Begin_Dt_Str

	     if $pay_begindt_Str < $pay_begin_dt_Str

          !AXL IF BLUE CUBE passes a sep chk = 0, it has to be current weeks scenario ,

          !otherwise, must be for a prior pay period

	       if to_number($sepchk) = 0

	       else

		       move 0 to $sepchk

	       end-if

	     end-if

	   end-if

   end-if



   if RTRIM($Pay_EndDt, ' ') = ''

  	 do Error-Found

	   add 1 to #ErrorCount

	   print 'No Pay End Date' (,43)

   else

	   do format-datetime($pay_end_dt, $pay_end_dt_str, {DEFCMP}, '', '')

     #debug8 show '$Pay_EndDt_str from ps_gex_smtrk_in table ' $Pay_EndDt_str

	   #debug8 show '$Pay_End_Dt_Str from pay_calendar table ' $Pay_End_Dt_Str

		 if $Pay_EndDt_Str <> $Pay_End_Dt_Str

	     if $pay_enddt_Str < $pay_begindt_Str

	     end-if

	   end-if

   end-if



!Blue Cube may send over dates that don''t coincide with the current

!PAY_BEGIN or PAY_END

  #debug8 show '$pay_begin_dt ' $pay_begin_dt

  let $pay_begin_dt_ins = $pay_begin_dt

  #debug8 show '$pay_begin_dt_ins, from ps_pay_calendar  ' $pay_begin_dt_ins

  #debug8 show '$Pay_BeginDt_str  ' $Pay_BeginDt_str

  #debug8 show '$Pay_Begin_Dt_Str ' $Pay_Begin_Dt_Str



  if $Pay_BeginDt_str <> $Pay_Begin_Dt_Str

    #debug9 show 'Doing Find-Max-Sunday-Date'

    do Find-Max-Sunday-Date

    !let $pay_begindt = &SUN.PAY_BEGIN_DT

    let $pay_begin_dt_ins = &SUN.PAY_BEGIN_DT

    #debug9 show '$pay_begin_dt_ins  ' $pay_begin_dt_ins

  end-if



  #debug8 show '$pay_end_dt ' $pay_end_dt

  let $pay_end_dt_ins = $pay_end_dt

  #ifdef debug8

    show '$pay_end_dt_ins ' $pay_end_dt_ins

    show '$Pay_EndDt_str ' $Pay_EndDt_str

    show '$Pay_End_Dt_Str ' $Pay_End_Dt_Str

  #endif



  if $Pay_EndDt_str <> $Pay_End_Dt_Str

    #debug9 show 'Doing Find-Min-Saturday-Date'

    do Find-Min-Saturday-Date

    let $pay_end_dt_ins = &SAT.PAY_END_DT

    #debug8 show '$pay_end_dt_ins ' $pay_end_dt_ins

  end-if



!*************************************************

!******* Separate Check Ind VALIDATION ***********

!*************************************************



	#debug8 show '$SepChk ' $SepChk



  Evaluate $SepChk

	  when = ''

	  when = '0'

	  when = '2'

	  when = '3'

	  when = '4'

	  when = '5'

	  when = '6'

	  when = '7'

	  when = '8'

	  when = '9'

	    break

	  when < '0'

	  when > '9'

  	  do Error-Found

	  	#ifdef USA

	      print 'Invalid Separate Check= ' (,43)

	    #endif

  	  #ifdef CANADA

	      print 'Invalid Separate Cheque=' (,43)

	    #endif

  	  add 1 to #ErrorCount

  	  print $Sepchk ()

	    break

  end-evaluate



  if RTRIM($SepChk, ' ') = ''

	  move  0  to #SepChk

  else

	  let   #SepChk  = RTRIM($SepChk, ' ')

  end-if



!*************************************************

!******* Shift Code VALIDATION         ***********

!*************************************************



	if RTRIM($ShiftCd, ' ') = ''

	   do get-home-shift-cd

	   move $Home_ShiftCd to $shiftCD

	else

		do edit-shift-cd

	end-if





Skip-Record:



!**********VALIDATIONS ARE OVER FOR EACH RECORD *******

!**********Loading Process starts from here************



end-procedure

!********************************************************************************

!********************************************************************************

!This is the Report Header section

!********************************************************************************

!********************************************************************************

begin-heading 12 FOR-REPORTS=(ERROR-REPORT)

#debug9 show 'ERROR-REPORT '



 let $ReportID = $Report_pre||'LOG'

 move 'Update Pay Sheets with Pay Input Data - ERROR REPORT' to $reporttitle

#Include 'stdhdg01.sqc'



  print 'Pay End Date=' (+1,1)

  print $pay_end_dt ()

  print '-' (+1,1,130) fill

!  print 'Tran#  EmplID       Company   Paygroup   Message' (+2,1)       ! RKK - 08/05/2009

  print '  Time          Pay      Employee       Company   Paygroup   Message' (+2,1)  ! RKK - 08/05/2009

  print 'Collection      Run         ID                                      ' (+1,1)  ! RKK - 08/05/2009

  print '  Type          ID                                                  ' (+1,1)  ! RKK - 08/05/2009

  print '-' (+1,1,130) fill



end-heading



!********************************************************************************

!This procedure prints miscellaneous audits

!********************************************************************************

begin-procedure Misc-Audits

#debug9 show 'Misc-Audits '



!added hint isdvmxr 07/28/2008

display 'Paysheet Audits - begin: ' noline

date-time () hh:mi:ss &timeEnded

display &timeEnded

new-page



move 'N' to $found

let #inputtran = 0

let $first = 'Y'

let #FT_Total_hours = 0

let #hrlyrt_exception = 0

let $Ft_total_hrs_exception = 'N'

let $FT_hrlyrt_exception = 'N'

let $vac_exception = 'N'

let #vac_hrs_aud = 0

let #ot_hrs_aud = 0

let $emplid_aud = ' '

let #sal_earns = 0

let #sal_reg_hrs = 0

let $sal_reg_exception = 'N'

let $ot_hrs_exception = 'N'

let #hol_hrs_aud = 0

let $hol_hrs_exception = 'N'



begin-select DISTINCT ON-ERROR=SQL-Error-Found('Misc-Audits')

/*+ ordered */

S.COMPANY

S.PAYGROUP

S.DEPTID

S.EMPLID

S.REG_HRS

S.REG_PAY

S.REG_PAY_HRS

S.REG_EARN_HRS

S.OT_HRS

R.ERNCD

R.OTH_HRS

R.oth_pay

S.HOURLY_RT

O.FULL_PART_TIME

O.EMPL_TYPE



     move 'Y' to $found



     if $first = 'Y'

        move &S.EMPLID to $emplid_aud

        move &O.EMPL_TYPE to $prev_empl_type

        move 'N' to $first

     else

        if &S.EMPLID <> $emplid_aud  ! EMPLID change

           do check-exceptions

           move &S.EMPLID to $emplid_aud

           move &O.EMPL_TYPE to $prev_empl_type

           move &S.COMPANY to $company

           move &S.PAYGROUP to $paygroup

        end-if

     end-if



     if &O.EMPL_TYPE = 'S'

        add &S.REG_HRS to #sal_reg_hrs

        add &S.REG_EARN_HRS to #sal_reg_hrs

        add &R.OTH_HRS to #sal_reg_hrs

        add &S.REG_PAY to #sal_earns

        add &R.OTH_PAY to #sal_earns

     end-if



     evaluate &R.ERNCD

       when = '519'

       when = '522'

       when = '523'         !End of vacation codes added    SCM 1/9/01

       when = '515'

       when = '513'

	       add &R.OTH_HRS      to #vac_hrs_aud

         if #vac_hrs_aud > 40

           if $Pay_EndDt = $pay_end_dt

             let $vac_exception = 'Y'

           end-if

         end-if

	       break

      when = 'OTP'

	       add &R.OTH_HRS      to #ot_hrs_aud

	       break

      when = 'REG'

         if &O.EMPL_TYPE = 'S'

           add &R.OTH_HRS to #sal_reg_hrs

         end-if

	       break

      when = 'HOL'

      when = '502'

	      add &R.OTH_HRS to #hol_hrs_aud

        if #hol_hrs_aud > 8

           let $hol_hrs_exception = 'Y'

        end-if

	      break

     end-evaluate



     if &O.FULL_PART_TIME = 'F'

        add &S.REG_PAY_HRS to #FT_total_hours

        add &R.OTH_HRS to #FT_total_hours

        add &S.OT_HRS  to #FT_total_hours

        add &S.OT_HRS  to #ot_hrs_aud



        if #FT_total_hours > 100 and &O.EMPL_TYPE <> 'S'

         if $Pay_EndDt = $pay_end_dt

           let $FT_total_hrs_exception = 'Y'

         end-if

        end-if



        if &S.HOURLY_RT > 30 and &O.EMPL_TYPE <> 'S'

           move &S.HOURLY_RT to #hrlyrt_exception

           let $FT_HRlyrt_exception = 'Y'

        end-if

     else

        add &S.OT_HRS       to #ot_hrs_aud

     end-if



FROM PS_PAY_EARNINGS S, 

     PS_PAY_OTH_EARNS R, 

     PS_JOB O,

     !PS_GEX_EMPLID_MAPP MAP, 

     PS_GEX_KRONOS_IN ST

WHERE S.PAY_END_DT = $pay_end_dt

  and S.COMPANY    = R.COMPANY(+)

  and S.PAYGROUP   = R.PAYGROUP(+)

  and S.PAY_END_DT = R.PAY_END_DT(+)

  and S.OFF_CYCLE  = R.OFF_CYCLE(+)

  and S.PAGE_NUM      = R.PAGE_NUM(+)

  and S.LINE_NUM      = R.LINE_NUM(+)

  and S.ADDL_NBR      = R.ADDL_NBR(+)

  and S.EMPLID     = O.EMPLID

  and S.EMPL_RCD  = O.EMPL_RCD

  !and O.EMPLID  = MAP.SSN

  !and ST.EMPLID = MAP.EMPLID

  and S.DEPTID  = ST.DEPTID

  and S.OFF_CYCLE  = 'N'

  and O.EFFDT      = (select max(effdt) from ps_job

                       where emplid = O.EMPLID

                         and EMPL_RCD = O.EMPL_RCD

                         and effdt <= $pay_end_dt)

  and O.EFFSEQ     = (select max(effseq) from ps_job

                       where emplid = O.EMPLID

                         and EMPL_RCD = O.EMPL_RCD

                         and effdt = O.EFFDT)

ORDER BY S.EMPLID



end-select



 do check-exceptions



 display 'Paysheet Audits - end: ' noline

 date-time () hh:mi:ss &timeEnded

 display &timeEnded



end-procedure

!********************************************************************************

!This procedure checks any exceptions and prints them

!********************************************************************************

begin-procedure Check-Exceptions

#debug9 show 'Check-Exceptions '



!display 'Emplid: ' noline

!display $empl_aud

!display 'Company: ' noline

!display $company

!display 'Paygroup: ' noline

!display $paygroup

!display 'full time hrs exception:' noline

!display $ft_total_hrs_exception

!display 'Full Time Hourly Rt exception:' noline

!display $ft_hrlyrt_exception

!display 'Vacation Exception:' noline

!display $vac_exception

!display 'REgular Salary hours exception:' noline

!display $sal_reg_exception

!display 'OT exception:' noline

!display $ot_hrs_exception

!display 'HOL exception:' noline

!display $hol_hrs_exception



use-report error-report



if $FT_total_hrs_exception = 'Y'

   move $emplid_aud to $emplid

   do error-found

   add 1 to #errorcount

   print 'FT HOURLY TOTAL HOURS GREATER THAN 100' (,43)     ! RKK - 08/05/2009

   print ';Hours calculated:' ()

   print #FT_total_hours ()

end-if



if $FT_hrlyrt_exception = 'Y'

   move $emplid_aud to $emplid

   do error-found

   add 1 to #errorcount

!   display 'FT rt > $30'

   print 'FT HOURLY RATE EXCEEDS $30' (,43)

   print ';Hourly Rate calculated:' ()

   print #hrlyrt_exception ()

end-if



if $vac_exception = 'Y'

   move $emplid_aud to $emplid

   do error-found

   add 1 to #errorcount

!   display 'Vac hours > 40'

   print 'VACATION HOURS EXCEEDS 40' (,43)

   print ';Hours calculated:' ()

   print #vac_hrs_aud ()

end-if



if $sal_reg_exception = 'Y'

   move $emplid_aud to $emplid

   do error-found

   add 1 to #errorcount

   print 'SALARIED EE WITH NO HOURS OR EARNINGS' (,43)

end-if



if $ot_hrs_exception = 'Y'

   move $emplid_aud to $emplid

   do error-found

   add 1 to #errorcount

!   display 'OT hrs > 40'

   print 'OT HOURS EXCEEDS 40' (,43)

   print ';Hours calculated:' ()

   print #ot_hrs_aud ()

end-if



if $hol_hrs_exception = 'Y'

   move $emplid_aud to $emplid

   do error-found

   add 1 to #errorcount

!   display 'HOL hrs > 8'

   print 'HOLIDAY HOURS GREATER THAN 8' (,43)

   print ';Hours calculated:' ()

   print #hol_hrs_aud ()

end-if



let #FT_total_hours = 0

let $Ft_total_hrs_exception = 'N'

let $FT_hrlyrt_exception = 'N'

let #vac_hrs_aud = 0

let #ot_hrs_aud = 0

let #sal_reg_hrs = 0

let #sal_earns = 0

let #hrlyrt_exception = 0

let $vac_exception = 'N'

let $sal_reg_exception = 'N'

let $ot_hrs_exception = 'N'

let #hol_hrs_aud = 0

let $hol_hrs_exception = 'N'



end-procedure

!********************************************************************************

!********************************************************************************

!This validates the pay-begin-date

!********************************************************************************

begin-procedure edit-pay-begin-dt

#debug9 show 'edit-pay-begin-dt '



move 'N' to $found



begin-select ON-ERROR=SQL-ERROR-FOUND('edit-pay-begin-dt')

'A3'



    move 'Y' to $Found



from PS_PAY_CALENDAR

where PAY_BEGIN_DT = $pay_begindt

end-select



end-procedure

!********************************************************************************

!********************************************************************************

!Validates the pay_end_Dt

!********************************************************************************

!********************************************************************************

begin-procedure edit-pay-end-dt

#debug9 show 'edit-pay-end-dt '



move 'N' to $found



begin-select ON-ERROR=SQL-ERROR-FOUND('edit-pay-end-dt')

'R4'



    move 'Y' to $Found



from PS_PAY_CALENDAR

where PAY_END_DT = $pay_enddt



end-select



end-procedure

!********************************************************************************

!********************************************************************************

!Validates the company information

!********************************************************************************

!********************************************************************************

begin-procedure Edit-Company

#debug9 show 'Edit-Company '



lookup companylookup $company $company_lkp



  if RTRIM($company,' ') <> RTRIM($company_lkp, ' ')

     do Error-Found

     print 'Invalid Company = ' (,43)

     print $company ()

     move ' ' to $Company

     add 1 to #ErrorCount

  end-if



end-procedure

!********************************************************************************

!********************************************************************************

!Validates the paygroup information

!********************************************************************************

!********************************************************************************

begin-procedure edit-paygroup

#debug9 show 'edit-paygroup '



lookup paygrouplookup $paygroup $paygroup_lkp



  if RTRIM($paygroup,' ') <> RTRIM($paygroup_lkp, ' ')

     do Error-Found

     print 'Invalid Paygroup = ' (,43)

     print $paygroup ()

     move ' ' to $PayGroup

     add 1 to #ErrorCount

  end-if



end-procedure

!********************************************************************************

!********************************************************************************

!Validates the store information

!********************************************************************************

begin-procedure Edit-Store

#debug9 show 'Edit-Store '



lookup storelookup $store $store_lkp



  if RTRIM($store,' ') <> RTRIM($store_lkp, ' ')

     use-report nonc-report

     do Error-Found

     print 'Invalid input store# = ' (,43)

     print $store ()

     add 1 to #ErrorCount



     do get-home-store

     move $Home_Store to $Store



     use-report error-report



  else

  	 do get-home-store

	   if $Found = 'N'

	     move $Store to $Home_Store

	   end-if

  end-if



end-procedure

!********************************************************************************

!********************************************************************************

!Retrieves the Home store for the employee

!********************************************************************************

!********************************************************************************

begin-procedure get-home-store

#debug9 show 'get-home-store '



  move 'N' to $Found



begin-SELECT ON-ERROR=SQL-Error-Found('Get-Home-Store')

!*** SCM 05/23/2002 ** added alias (j) to ps_job to eliminate unnecessary errors showing on rpt

J.DEPTID                                          !SCM 05/23/2002



	move &j.deptid to $Home_Store             !SCM 05/23/2002

	move 'Y' to $Found



FROM PS_JOB j                                     !SCM 05/23/2002

WHERE j.EMPLID   = $EmplId

  and j.EMPL_RCD = #empl_rcdno

  AND j.EFFDT =

	    (SELECT MAX(EFFDT) FROM PS_JOB

	     WHERE J.EMPLID = EMPLID

               and J.EMPL_RCD = EMPL_RCD

	       AND EFFDT <= $pay_end_dt)

  AND j.EFFSEQ =

	    (SELECT MAX(EFFSEQ) FROM PS_JOB

	     WHERE J.EMPLID   = EMPLID

               and J.EMPL_RCD = EMPL_RCD

	       AND J.EFFDT   = EFFDT)

end-SELECT



if $Found = 'N'

   do Error-Found

	 print 'Home Store Number Not Found' (,43)

	 move ' ' to $Home_Store

	 add 1 to #ErrorCount

   use-report error-report

end-if



end-procedure

!********************************************************************************

!********************************************************************************

!Retrieves the home jobcode for the employee

!********************************************************************************

!********************************************************************************

begin-procedure Edit-Home-Job-Cd

#debug9 show 'Edit-Home-Job-Cd '



  move 'N' to $Found



begin-SELECT ON-ERROR=SQL-Error-Found('Edit-Home-Job-Cd')

'N'

     move 'Y' to $Found



FROM PS_JOB A, PS_JOBCODE_TBL B

WHERE A.EMPLID = $EmplId

  and A.EMPL_RCD = #empl_rcdno

  AND A.JOBCODE = $Home_Job_Cd

  AND A.JOBCODE = B.JOBCODE

  AND B.EFF_STATUS = 'A'

  AND A.EFFDT =

	    (SELECT MAX(EFFDT)

	     FROM PS_JOB

	     WHERE EMPLID = $EmplID

         and EMPL_RCD = #empl_rcdno

	       AND EFFDT <= $Pay_End_Dt)

  AND  A.EFFSEQ =

       (SELECT MAX(EFFSEQ)

	      FROM   PS_JOB

	      WHERE  EMPLID    = $EmplID

        and  EMPL_RCD = #empl_rcdno

	      AND  EFFDT     = A.EFFDT)

end-SELECT



if $Found = 'N'

  do Error-Found

  add 1 to #ErrorCount

  print ' Invalid Home Job Code = ' (,43)

  print $Home_job_Cd ()

  use-report error-report

  do get-home-job-cd

end-if



end-procedure



!********************************************************************************

!Validates the Job code sent in the T&A

!********************************************************************************



begin-procedure Edit-Work-Job-Cd

#debug9 show 'Edit-Work-Job-Cd '



lookup jobcodelookup $work_job_cd $jobcode_lkp



  if RTRIM($work_job_cd,' ') <> RTRIM($jobcode_lkp, ' ')

    do error-found

    add 1 to #ErrorCount



    do get-home-job-cd

    move $Home_Job_Cd to $Work_Job_Cd

  else

    if RTRIM($home_job_cd, ' ') = ''

       do get-home-job-cd

       if $Found = 'N'

	       move $Work_Job_Cd to $Home_Job_Cd

       end-if

    end-if

  end-if



end-procedure



!********************************************************************************

!Retrieves the home jobcode for the employee

!********************************************************************************



begin-procedure get-Home-Job-Cd

#debug9 show 'get-Home-Job-Cd '



  move 'N' to $Found



begin-SELECT ON-ERROR=SQL-Error-Found('Get-Home-Job-Cd')

A.JOBCODE



     move 'Y' to $Found

     move &A.JOBCODE to $Home_Job_Cd



FROM PS_JOB A

WHERE A.EMPLID = $EmplId

  AND A.EFFDT =

	    (SELECT MAX(EFFDT)

	     FROM PS_JOB

	     WHERE EMPLID = $EmplID

         and EMPL_RCD = #empl_rcdno

	       AND EFFDT <= $Pay_End_Dt)

  AND  A.EFFSEQ =

       (SELECT MAX(EFFSEQ)

	      FROM   PS_JOB

	      WHERE  EMPLID    = $EmplID

        and EMPL_RCD = #empl_rcdno

	      AND  EFFDT     = A.EFFDT)

end-SELECT



if $Found = 'N'

  do Error-Found

  add 1 to #ErrorCount

  print 'Home Job Code is not found' (,43)

  move ' ' to $Home_Job_Cd

end-if



end-procedure



!********************************************************************************

!Validates the home store# sent in the T&A

!********************************************************************************



begin-procedure Edit-Home-Dept-Cd

#debug9 show 'Edit-Home-Dept-Cd '



  move 'N' to $Found



begin-SELECT ON-ERROR=SQL-Error-Found('Edit-Home-Dept-Cd')

'O'

     move 'Y' to $Found



FROM PS_JOB A, PS_GEX_ACCT_CD_TBL B   !GEX-CXB 09/26/2007 Added for Upgrade 9.0

WHERE A.EMPLID = $EmplId

  and a.EMPL_RCD = #empl_rcdno

  AND A.ACCT_CD = $Home_Dept

  AND A.ACCT_CD = B.ACCT_CD

  !AND B.EFF_STATUS = 'A'	!Commented for Upgrade 9.0 GEX-AXG

  AND B.EFF_STATUS = 'A'	!GEX-CXB 09/26/2007 Added for Upgrade 9.0

  AND A.EFFDT =

	    (SELECT MAX(EFFDT)

	     FROM PS_JOB

	     WHERE EMPLID = $EmplID

         and EMPL_RCD = #empl_rcdno

	       AND EFFDT <= $Pay_End_Dt)

  AND  A.EFFSEQ =

       (SELECT MAX(EFFSEQ)

	      FROM   PS_JOB

	      WHERE  EMPLID  = $EmplID

        and  EMPL_RCD = #empl_rcdno

	      AND  EFFDT   = A.EFFDT)

end-SELECT



if $Found = 'N'

  do Error-Found

  add 1 to #ErrorCount

  print 'Invalid Home Dept Code = ' (,43)

  print $home_dept ()

  use-report error-report

  do get-home-dept-cd

end-if



end-procedure



!********************************************************************************

!Validates the Store# sent in the T&A

!********************************************************************************



begin-procedure Edit-Work-Dept-Cd

#debug9 show 'Edit-Work-Dept-Cd '



lookup acctcodelookup $work_dept $acctcode_lkp



  if RTRIM($work_dept,' ') <> RTRIM($acctcode_lkp, ' ')



    do error-found

    add 1 to #ErrorCount

    print 'Invalid Work Department Code = ' (,43)

    print $work_dept ()

    use-report error-report

    do get-home-dept-cd

    move $Home_Dept to $Work_Dept

  else

    if RTRIM($home_dept,' ') = ''

	    do get-home-dept-cd

	    if $Found = 'N'

	      move $Work_Dept to $Home_Dept

	    end-if

    end-if

  end-if



end-procedure



!********************************************************************************

!Retrieves the home store# for the employee

!********************************************************************************



begin-procedure get-Home-dept-Cd

#debug9 show 'get-Home-dept-Cd '



  move 'N' to $Found



begin-SELECT ON-ERROR=SQL-Error-Found('Get-Home-Dept-Cd')

A.ACCT_CD



     move 'Y' to $Found

     move &A.ACCT_CD to $Home_Dept



FROM PS_JOB A

WHERE A.EMPLID = $EmplId

  and a.EMPL_RCD = #empl_rcdno

  AND A.EFFDT =

	    (SELECT MAX(EFFDT)

	     FROM PS_JOB

	     WHERE EMPLID = $EmplID

          and EMPL_RCD = #empl_rcdno

	       AND EFFDT <= $Pay_End_Dt)

  AND A.EFFSEQ =

       (SELECT MAX(EFFSEQ)

	      FROM   PS_JOB

	      WHERE  EMPLID    = $EmplID

          and  EMPL_RCD = #empl_rcdno

	        AND  EFFDT     = A.EFFDT)

end-SELECT



if $Found = 'N'

  do Error-Found

  add 1 to #ErrorCount

  print 'Home Dept Code is not found' (,43)

  move ' ' to $Home_Dept

end-if



end-procedure



!********************************************************************************

!Retrieves the home shift code for the employee

!********************************************************************************



begin-procedure get-Home-Shift-Cd

#debug9 show 'get-Home-Shift-Cd '



 move 'N' to $Found



begin-SELECT ON-ERROR=SQL-Error-Found('Get-Home-Shift-Cd')

A.SHIFT



     move 'Y' to $Found

     move &A.SHIFT to $Home_ShiftCd



FROM PS_JOB A

WHERE A.EMPLID = $EmplId

  and a.EMPL_RCD = #empl_rcdno

  AND A.EFFDT =

	    (SELECT MAX(EFFDT)

	     FROM PS_JOB

	     WHERE EMPLID = $EmplID

         and EMPL_RCD = #empl_rcdno

	       AND EFFDT <= $Pay_End_Dt)

  AND A.EFFSEQ =

       (SELECT MAX(EFFSEQ)

	      FROM   PS_JOB

	      WHERE  EMPLID    = $EmplID

          and  EMPL_RCD = #empl_rcdno

	        AND  EFFDT     = A.EFFDT)

end-SELECT



if $Found = 'N'

  do Error-Found

  add 1 to #ErrorCount

  print 'Home Shift Code is not found' (,43)

  move ' ' to $Home_ShiftCd

end-if



end-procedure



!********************************************************************************

!Validates the shift code sent in the T&A

!********************************************************************************



begin-procedure Edit-Shift-Cd

#debug9 show 'Edit-Shift-Cd '



lookup shiftcodelookup $shiftcd $shiftcode_lkp



  if RTRIM($shiftcd,' ') <> RTRIM($shiftcode_lkp, ' ')

    do error-found

    add 1 to #ErrorCount

    print 'Invalid Shift Code is found in the input' (,43)

    do get-home-Shift-cd

    move $home_shiftcd to $shiftcd

  else

    if RTRIM($home_shiftcd,' ') = ''

       do get-home-shift-cd

       if $Found = 'N'

	       move $shiftCd to $Home_ShiftCd

       end-if

    end-if

  end-if



end-procedure



!********************************************************************************

!Retrieves the last page in the pay_page table for current period

!********************************************************************************



begin-procedure Get-Last-Page

#debug9 show 'Get-Last-Page '



 !display 'Pay End date in last-page proc: ' noline

 !display $Pay_End_Dt

 !display 'Company in last-page proc: ' noline

 !display $Company

 !display 'Paygroup in last-page proc: ' noline

 !display $Paygroup



begin-select ON-ERROR=SQL-Error-Found('Get-Last-Page')

MAX(PAGE_NUM) &Page



  move &Page to #Page#

  !display 'Max Page : ' noline

  !display &Page



FROM PS_PAY_PAGE

WHERE COMPANY = $Company

  AND PAYGROUP = $PayGroup

  AND PAY_END_DT = $Pay_End_Dt

  AND OFF_CYCLE = 'N'

end-select



end-procedure



!********************************************************************************

!Retrives the pay page, line information and checks the earnings code.

!If the earnings code is either 170 or 515, does the special processing

!********************************************************************************



begin-procedure Get-Page-Line

#debug9 show 'Get-Page-Line '



move 'N' to $Found

move 'N' to $insert-oth-earns

move 'N' to $update-done



begin-SELECT ON-ERROR=SQL-Error-Found('Get-Page-Line')

K.PAGE_NUM

K.LINE_NUM

LL.ADDL_NBR

LL.HOURLY_RT



  move 'Y' to $Found

  EXIT-SELECT



FROM PS_PAY_LINE K, PS_PAY_EARNINGS LL

WHERE K.COMPANY    = $Company

  AND K.PAYGROUP   = $PayGroup

  AND K.PAY_END_DT = $Pay_End_Dt

  AND K.EMPLID     = $EmplID

  AND K.EMPL_RCD  = #Empl_RcdNo

  AND LL.COMPANY    = K.COMPANY

  AND LL.PAYGROUP   = K.PAYGROUP

  AND LL.PAY_END_DT = K.PAY_END_DT

  AND LL.OFF_CYCLE  = K.OFF_CYCLE

  AND LL.PAGE_NUM      = K.PAGE_NUM

  AND LL.LINE_NUM      = K.LINE_NUM

  AND K.MANUAL_CHECK = 'N'

  AND K.OFF_CYCLE = 'N'

end-select



 #debug8 show '$Found ' $Found

 #debug8 show '$Hours ' $Hours



 if (RTRIM($Hours,' ') = '0.00') or ($Hours = '000000.00')

   #debug8 show 'Before #oth_earns_ins ' #oth_earns_ins

   move #hrlyRt to #oth_earns_ins

   #debug8 show 'After #oth_earns_ins ' #oth_earns_ins

   move &LL.HOURLY_RT to #hrlyRt

   #debug8 show '#hrlyRt ' #hrlyRt

else

   move 0 to #oth_Earns_ins

  #debug8 show '#oth_earns_ins ' #oth_earns_ins

end-if



  #debug8 show '$erncd ' $erncd

  #debug8 show '$Found ' $Found



if $erncd = '515' and $Found = 'Y'

  do get-last-addl#

  do get-Employee-Data

  do get-Benefit-Program

  add +1 to #Addl#Oth

  do Add-Pay-Earnings

  if $ErrorFound = 'N'

     do Insert-Pay-Oth-Earns

     do Pay-Status-Update

  end-if

 else

   if $Found = 'Y'

      move &K.PAGE_NUM to #Page#Oth

      move &K.LINE_NUM to #Line#Oth

      #debug8 show '#Page#Oth ' #Page#Oth

      #debug8 show '#Line#Oth ' #Line#Oth



      evaluate $erncd

       when = '170'               ! Management Sunday Earnings  (170)

       when = '176'               ! Alternate PArt Time Rate (176)

       when = '167'               ! Pharmacy Premium earnings

         move 'N' to $Home_NE_Work         !PLO 6/30/2006

         do Process-170or176or167

        if $Home_NE_Work = 'Y'

      	  Do Get-Addl

        end-if

        break

     when-other

       do Get-Addl

       break

    end-evaluate



    if $update-done = 'N'

      if $ErrorFound = 'N'

      	do Insert-Pay-Oth-Earns

	      do Pay-Status-Update

      end-if

    end-if

  else

    if $ErrorFound = 'N'

      do Add-New-Line

      do Insert-Pay-Oth-Earns

    	do Pay-Status-Update

    end-if

  end-if

 end-if



end-procedure

!********************************************************************************



begin-procedure get-last-addl#

#debug9 show 'get-last-addl# '



begin-SELECT ON-ERROR=SQL-Error-Found('Get-Last-Addl#')

GLA.COMPANY

GLA.PAYGROUP

GLA.PAY_END_DT

GLA.OFF_CYCLE

GLA.PAGE_NUM

GLA.LINE_NUM

GLA.ADDL_NBR



      move &GLA.PAGE_NUM to #Page#Oth

      move &GLA.LINE_NUM to #Line#Oth

      move &GLA.ADDL_NBR to #Addl#Oth



      EXIT-SELECT



FROM PS_PAY_EARNINGS GLA

WHERE GLA.COMPANY  = $Company

  AND GLA.PAYGROUP   =  $PayGroup

  AND GLA.PAY_END_DT =  $Pay_End_Dt

  AND GLA.OFF_CYCLE = 'N'

  AND GLA.PAGE_NUM     = &K.PAGE_NUM

  AND GLA.LINE_NUM     = &K.LINE_NUM

ORDER BY GLA.COMPANY, GLA.PAYGROUP, GLA.PAY_END_DT,

GLA.OFF_CYCLE, GLA.PAGE_NUM, GLA.LINE_NUM, GLA.ADDL_NBR desc

end-select



end-procedure



!********************************************************************************

!For these earnings code there should be a row out there in the

!other earnings table for the employee. If there is no home row

!for this earnings code need to create one and report that instance

!as an error. If a row exists update the information against that row

!********************************************************************************



begin-procedure process-170or176or167

#debug9 show 'process-170or176or167 '



  move 'N' to $Found

  move 'N' to $insert-oth-earns

  move 'N' to $update-done



#ifdef debug8

  show '$Company ' $Company

  show '$PayGroup ' $PayGroup

  show '$Pay_End_Dt ' $Pay_End_Dt

  show '#Page#Oth ' #Page#Oth

  show '#Line#Oth ' #Line#Oth

  show '$EmplID ' $EmplID

  show '#Empl_Rcdno ' #Empl_Rcdno

  show '$Home_Store ' $Home_Store

  show '$Home_Dept ' $Home_Dept

  show '$Home_Job_Cd ' $Home_Job_Cd

  show '#SepChk ' #SepChk

  show '$pay_begin_dt_ins ' $pay_begin_dt_ins

  show '$pay_end_dt_ins ' $pay_end_dt_ins

  show '$ErnCd '  $ErnCd

#endif



begin-SELECT ON-ERROR=SQL-Error-Found('Process-170or176or167')

M.COMPANY

M.PAYGROUP

M.PAY_END_DT

M.EMPLID

M.PAGE_NUM

M.LINE_NUM

M.ADDL_NBR

M.HOURLY_RT



    move 'Y' to $Found



    EXIT-SELECT



FROM PS_PAY_EARNINGS M

where M.COMPANY    = $Company

  and M.PAYGROUP   = $PayGroup

  and M.PAY_END_DT = $Pay_End_Dt

  and M.OFF_CYCLE  = 'N'

  and M.PAGE_NUM   = #Page#Oth

  and M.LINE_NUM   = #Line#Oth

  and M.EMPLID     = $EmplID

  and M.EMPL_RCD   = #Empl_Rcdno

  and M.DEPTID     = $Home_Store

  and M.ACCT_CD    = $Home_Dept

  and M.JOBCODE    = $Home_Job_Cd

  and M.SEPCHK     = #SepChk

  and M.EARNS_BEGIN_DT = $pay_begin_dt_ins ! AXL - 10/31/2005

  and M.EARNS_END_DT  =  $pay_end_dt_ins   ! AXL - 10/31/2005

  and M.ADDL_NBR in

		(SELECT P.ADDL_NBR

		 from PS_PAY_OTH_EARNS P

		 where P.COMPANY    = $Company

		   and P.PAYGROUP   = $PayGroup

		   !and P.PAY_END_DT = $Pay_End_Dt

		   and P.PAY_END_DT = $pay_end_dt_ins ! AXL - 10/31/2005

		   and P.OFF_CYCLE  = 'N'

		   and P.PAGE_NUM      = #Page#Oth

		   and P.LINE_NUM      = #Line#Oth

		   and P.ADDL_NBR      = M.ADDL_NBR

		   and P.ERNCD      = $ErnCd)

ORDER BY M.COMPANY,

	 M.PAYGROUP,

	 M.PAY_END_DT,

	 M.PAGE_NUM,

	 M.LINE_NUM,

	 M.ADDL_NBR

end-select



#debug8 show '$Found ' $Found



if $Found = 'N'

  if $Erncd <> '167'

  	if $Erncd = '170'		! DXS, 11/28/06. Added this if condition to insert

					! erncd 170 rows which have old pay begin and end dts.

	  	let $ErrorFound = 'N'   ! This is needed for the else condition after the select

					! in procedure Get-Addl to work

  	else

	  	#debug9 Show '$Found is N and $Erncd is ' $Erncd

  		do get-addl-info

	    #debug8 show '&MX.ADDL_NBR ' &MX.ADDL_NBR

		  move &MX.ADDL_NBR to #Addl#Oth

  		do error-found

	  	add 1 to #ErrorCount

		  print 'Earnings Code is not found in the home payline' (,43)

		  print ':Code = ' ()

		  print $ErnCd ()

	  end-if

  end-if

  if $Erncd <> '515'

     move 'Y' to $Home_NE_Work   ! trigger new pay line

     move 'Y' to $insert-oth-earns

  else

     move 'N' to $insert-oth-earns

     print '; Transaction is rejected' ()

     print $transaction (+1,21)

  end-if

else		! Found is Y

  #ifdef debug8

  	show '$Home_Store ' $Home_Store

	  show '$Store ' $Store

	  show '$Home_Dept ' $Home_Dept

	  show '$Work_Dept ' $Work_Dept

	  show '$Home_Job_Cd ' $Home_Job_Cd

	  show '$Work_Job_Cd ' $Work_Job_Cd

  #endif



  if $Home_Store = $Store and

	 $Home_Dept  = $Work_Dept and

	  $Home_Job_Cd = $Work_Job_Cd

	 	 move &Addl#Oth to #Addl#Oth

     if $erncd = '167'

	     #debug9 show 'As $erncd = 167, doing select-oth-pay'

        do select-oth-pay

        if #pharm_count >= 1

          let $home_ne_work = 'Y'

        else

		      #debug9 show 'Doing update-oth-earnings 1'

        	do update-oth-earnings

        	move 'Y' to $update-done

        end-if

     else

		   #debug9 show 'Doing update-oth-earnings 2'

       do update-oth-earnings

       move 'Y' to $update-done

     end-if

  else

	  let $Home_NE_Work = 'Y'

  end-if

end-if



end-procedure

!********************************************************************************



begin-procedure get-addl-info

#debug9 show 'get-addl-info '



  move 'N' to $addl_info_found



begin-SELECT ON-ERROR=SQL-Error-Found('Get-Addl-Info')

MX.COMPANY

MX.PAYGROUP

MX.PAY_END_DT

MX.PAGE_NUM

MX.LINE_NUM

MX.ADDL_NBR

MX.HOURLY_RT



    move 'Y' to $addl_info_found

    EXIT-SELECT



FROM PS_PAY_EARNINGS MX

where MX.COMPANY    = $Company

  and MX.PAYGROUP   = $PayGroup

  and MX.PAY_END_DT = $Pay_End_Dt

  and MX.OFF_CYCLE  = 'N'

  and MX.PAGE_NUM      = #Page#Oth

  and MX.LINE_NUM      = #Line#Oth

  and MX.EMPLID     = $EmplID

  and MX.EMPL_RCD  = #Empl_Rcdno

  and MX.DEPTID     = $Home_Store

  and MX.ACCT_CD    = $Home_Dept

  and MX.JOBCODE    = $Home_Job_Cd

  and not EXISTS

		(SELECT 'x'

		 from PS_PAY_OTH_EARNS

		 where COMPANY    = $Company

		   and PAYGROUP   = $PayGroup

		   and PAY_END_DT = $Pay_End_Dt

		   and OFF_CYCLE  = 'N'

		   and PAGE_NUM      = #Page#Oth

		   and LINE_NUM      = #Line#Oth

		   and ADDL_NBR      = MX.ADDL_NBR

		   and ERNCD      = $ErnCd)

end-select



end-procedure



!********************************************************************************

!Checks if there is already an existing record out there for the

!employee with this earnings code. If found, updates the information,

!otherwise, inserts a new oth-earns row

!********************************************************************************



begin-procedure Get-Addl

#debug9 show 'Get-Addl '



  #debug8 show '#hrlyrt ' #hrlyrt



if #hrlyrt <= 0

	#debug9 show 'Doing Get-Employee-Data'

  do Get-Employee-Data

end-if



if $erncd = '170'

	#debug9 show '$erncd = 170, so doing select-addl-hrly-rt'

   do select-addl-hrly-rt

     if $addl_found = 'Y'

        move #job_hrlyrt to #temp

        move #addl_hrly_rt to #hrlyrt

     end-if

end-if



 move 'N' to $Found



begin-SELECT ON-ERROR=SQL-Error-Found('Get-Addl')

L.COMPANY

L.PAYGROUP

L.PAY_END_DT

L.PAGE_NUM

L.LINE_NUM

L.ADDL_NBR

L.HOURLY_RT

L.SHIFT

L.DEPTID

L.JOBCODE

L.ACCT_CD

L.EARNS_BEGIN_DT

L.EARNS_END_DT

L.SEPCHK



!  display #hrlyrt

!  display $shiftcd

!  display $store

!  display $work_dept

!  display $work_job_cd

!  display &L.HOURLY_RT

!  display &L.SHIFT

!  display &L.DEPTID

!  display &L.JOBCODE

!  display &L.ACCT_CD





   if (#hrlyrt = &L.HOURLY_RT) and

      ($shiftcd = &L.SHIFT) and

     ($store = &L.DEPTID) and

     ($work_job_cd = &L.JOBCODE) and

     ($work_Dept = &L.ACCT_CD)

     and (#sepchk = &L.sepchk) and

	 ($Pay_BeginDt = &L.EARNS_BEGIN_DT) and

         ($Pay_EndDt = &L.EARNS_END_DT)

       move 'Y' to $Found

    EXIT-SELECT

   end-if



FROM PS_PAY_EARNINGS L

where L.COMPANY    = $Company

  and L.PAYGROUP   = $PayGroup

  and L.PAY_END_DT = $Pay_End_Dt

  and L.OFF_CYCLE  = 'N'

  and L.PAGE_NUM      = #Page#Oth

  and L.LINE_NUM      = #Line#Oth

  and L.EMPLID     = $EmplID

  and L.EMPL_RCD  = #Empl_Rcdno

  and L.SEPCHK     = #SepChk

  and not EXISTS

		(SELECT 'x'

		 from PS_PAY_OTH_EARNS O

		 where O.COMPANY    = $Company

		   and O.PAYGROUP   = $PayGroup

		   and O.PAY_END_DT = $Pay_End_Dt

		   and O.OFF_CYCLE  = 'N'

		   and O.PAGE_NUM      = #Page#Oth

		   and O.LINE_NUM      = #Line#Oth

		   and O.ADDL_NBR      = L.ADDL_NBR

		   and O.ERNCD      = $ErnCd)

ORDER BY L.COMPANY,

	 L.PAYGROUP,

	 L.PAY_END_DT,

	 L.PAGE_NUM,

	 L.LINE_NUM,

	 L.ADDL_NBR

end-select





if $Found = 'Y'

  move &L.ADDL_NBR to #Addl#Oth

  do Ok-To-Pay-Update

else

  do Get-Employee-Data

  if $ErrorFound = 'N'

    do Get-Addl-Max

    move &Addl#Oth to #Addl#Oth

    add 1 to #Addl#Oth

    do Add-Pay-Earnings

  end-if

end-if



end-procedure



!********************************************************************************

!Retrieves the ADDl# maximum for this particular page and line in the

!pay sheet

!********************************************************************************



begin-procedure Get-Addl-Max

#debug9 show 'Get-Addl-Max '



begin-SELECT ON-ERROR=SQL-Error-Found('Get-Addl-Max')

MAX(U.ADDL_NBR) &Addl#Oth



FROM PS_PAY_EARNINGS U

where U.COMPANY    = $Company

  and U.PAYGROUP   = $PayGroup

  and U.PAY_END_DT = $Pay_End_Dt

  and U.OFF_CYCLE  = 'N'

  and U.PAGE_NUM      = #Page#Oth

  and U.LINE_NUM      = #Line#Oth

end-SELECT



end-procedure



!********************************************************************************

!Inserts into oth-earns table

!********************************************************************************



begin-procedure Insert-Pay-Oth-Earns

#debug9 show 'Insert-Pay-Oth-Earns '



if $erncd = '167'

	#debug9 show 'Doing select-addl-hrly-rt, as $erncd = 167'

   do select-addl-hrly-rt

   #debug8 show '$addl_found ' $addl_found

   if $addl_found = 'Y'

     add #hours to #rx_hrs_covrt

     move $store to $store_upd

     move $company to $company_upd

     move $paygroup to $paygroup_upd

     !ISDVVXK-Remove rounding for erncd 167 Begins

     !multiply #hours times #addl_hrly_rt round=0

     multiply #hours times #addl_hrly_rt round=2

     !ISDVVXK-Remove rounding for erncd 167 Ends

     move #addl_hrly_rt to #oth_earns_ins

     !move 0 to #hours  AXL 11/18/2004 - don''t hide the HOURS

   else

	   #debug9 show 'goto exit-insert'

     goto exit-insert

   end-if

end-if



#ifdef debug8

  display 'emplid ' noline

  display $emplid

  display $company

  display $paygroup

  display $pay_end_Dt

  display #page#oth

  display #line#oth

  display #addl#oth

  display $erncd

  display #Hours

  display #oth_earns_ins

#endif



begin-SQL ON-ERROR=SQL-Error-Found('Insert-Pay-Oth-Earns')



INSERT INTO PS_PAY_OTH_EARNS (COMPANY,

			      PAYGROUP,

			      PAY_END_DT,

			      OFF_CYCLE,

			      PAGE_NUM,

			      LINE_NUM,

			      ADDL_NBR,

			      ERNCD,

			      SEPCHK,

			      JOB_PAY,

			      OTH_HRS,

			      OTH_PAY,

			      OTH_EARNS,

			      ADD_GROSS,

			      TAX_METHOD,

			      ADDL_SEQ,

			      TL_SOURCE,

			      RATE_USED,

			      BAS_CREDIT_SW,

			      COMP_RATECD,

			      COMPRATE,

			      COMPRATE_USED,

            HRS_DIST_SW,

            XREF_NUM,

            EX_DOC_ID,

            EX_DOC_TYPE,

            EX_LINE_NBR,

            CURRENCY_CD,

            VC_PLAN_ID,

            VC_PAYOUT_PRD_ID,

            GB_GROUP_ID,

            APPLID,

            AWARD_DATE,

			      NOTIFY_STATUS,

			      EIM_KEY)

VALUES(     $Company,

			      $paygroup,

			      $pay_end_dt,

			      'N',                      !Off cycle

			      #Page#Oth,

			      #Line#Oth,

			      #Addl#Oth,

			      $ErnCd,

			      #Sepchk,

			      'N',                      !job_pay

			      #Hours,                   !oth_hrs

			      #oth_earns_ins,           !oth_pay

			      0,                        !oth_earns

			      'N',                      !add_gross

			      'A',                      !tax_method

			      01,                       !Addl_seq

			      'G',                      !TL_source

			      'H',                      !Rate_used

			      'N',                      !BAS_CREDIT_SW

			      ' ',          						!COMP_RATECD

			      0,												!COMPRATE

			      0,												!comprate_used

            'N',                      !hrs_dist_sw

            0,                        !GBD 11/13/02 - xref_num

            ' ',                      !GBD 11/13/02 - ex_doc_id

            ' ',                      !GBD 11/13/02 - ex_doc_type

            0,                        !GBD 11/13/02 - ex_line_nbr

            ' ',                      !GBD 11/13/02 - currency_cd

            ' ',                      !GBD 11/13/02 - vc_plan_id

            ' ',                      !GBD 11/13/02 - vc_payout_prd_id

            ' ',                      !GBD 11/13/02 - gb_group_id

            ' ',                      !GBD 11/13/02 - applid

            '',                       !GBD 11/13/02 - award_date

			      'N',              !notify_status

			      ' ')

end-SQL



evaluate $ErnCd

  when = '519'

  when = '522'

  when = '523'         !End of reg vacation codes added    SCM 1/9/2001

  when = '515'

  when = '513'    ! Vacation or Part-Time Vacation

    do get-sum-line-hrs

    move &hours_sum to #hours_sum

    if #Hours_sum > 40

      let #Tax_Periods = floor(#Hours_sum/40)

      do update-tax-periods-per-line

    end-if

    break

end-evaluate



exit-insert:



end-procedure



!********************************************************************************

!For earnings code 515, 513, if the total hours exceeds 40, need to

!prorate the tax_periods

!********************************************************************************



begin-procedure get-sum-line-hrs

#debug9 show 'get-sum-line-hrs '



begin-SELECT ON-ERROR=SQL-Error-Found('Get-Sum-Line-Hrs')

SUM(L1.OTH_HRS) &Hours_sum



FROM PS_PAY_EARNINGS V, PS_PAY_OTH_EARNS L1

where V.COMPANY    = $Company

  and V.PAYGROUP   = $PayGroup

  and V.PAY_END_DT = $Pay_End_Dt

  and V.OFF_CYCLE  = 'N'

  and V.PAGE_NUM      = #Page#Oth

  and V.LINE_NUM      = #Line#Oth

  and V.ADDL_NBR      = #Addl#Oth

  and V.COMPANY    = L1.COMPANY

  and V.PAYGROUP   = L1.PAYGROUP

  and V.PAY_END_DT = L1.PAY_END_DT

  and V.OFF_CYCLE  = L1.OFF_CYCLE

  and V.PAGE_NUM      = L1.PAGE_NUM

  and V.LINE_NUM      = L1.LINE_NUM

  and V.SEPCHK     = L1.SEPCHK

  and V.SEPCHK <> 0



end-SELECT



end-procedure



!********************************************************************************

!Updates the tax periods for earnings codes 515, 513 if the total

!hours exceeds 40

!********************************************************************************



begin-procedure Update-tax-periods-per-line

#debug9 show 'Update-tax-periods-per-line '



begin-SQL ON-ERROR=SQL-Error-Found('Update-Tax-Periods-per-line')

   UPDATE PS_PAY_EARNINGS

    SET   TAX_PERIODS  = #Tax_Periods

   where  COMPANY    = $Company

     and  PAYGROUP   = $PayGroup

     and  PAY_END_DT = $Pay_End_Dt

     and  OFF_CYCLE  = 'N'

     and  PAGE_NUM      = #Page#Oth

     and  LINE_NUM      = #Line#Oth

     and  SEPCHK     <> 0

end-SQL



end-procedure



!********************************************************************************

!updates the oth-earns information

!********************************************************************************



begin-procedure update-oth-Earnings

#debug9 show 'update-oth-Earnings '



if $erncd = '167'

   #debug9 show 'Doing select-addl-hrly-rt, as $erncd = 167'

   do select-addl-hrly-rt

   #debug9 show '$addl_found ' $addl_found

   if $addl_found = 'Y'

      add #hours to #rx_hrs_covrt

      move $store to $store_upd

      move $company to $company_upd

      move $paygroup to $paygroup_upd

      multiply #hours times #addl_hrly_rt round=2   !AXL 11/18/2004 Round to 2

      move #addl_hrly_rt to #hrlyrt

      !move 0 to #hours  AXL 11/18/200 - don''t hide the HOURS

   else

	   #debug9 show 'goto exit-update'

     goto exit-update

   end-if

end-if



if $erncd = '167'

  do get-167-line

end-if



if (RTRIM($Hours,' ') = '0.00') or (RTRIM($erncd,' ') = '167')

  !AXL 11/18/2004 Make INSERT conditional Begin

  if RTRIM($Hours,' ') = '0.00'

     do update1

  else

     do update2	!167 path

  end-if

  !AXL 11/18/2004 Make INSERT conditional End

else

  #debug9 show 'Update-Oth-Earns'

  #ifdef debug8

    show '$Company ' $Company

    show '$PayGroup ' $PayGroup

    show '$Pay_End_Dt ' $Pay_End_Dt

    show 'OTH_HRS set to: ' #Hours

    show 'tl_source set to G'

    show '#Page#Oth ' #Page#Oth

    show '#Line#Oth ' #Line#Oth

    show '&M.ADDL_NBR ' &M.ADDL_NBR

    show '$ErnCd ' $ErnCd

  #endif



begin-SQL ON-ERROR=SQL-Error-Found('Update-Oth-Earns')

   UPDATE PS_PAY_OTH_EARNS

    SET   OTH_HRS = #Hours,			! DXS, 12/06/06. Was set to oth_hrs by mistake

          tl_source = 'G'			! instead of #Hours

   where  COMPANY    = $Company

     and  PAYGROUP   = $PayGroup

     and  PAY_END_DT = $Pay_End_Dt

     and  OFF_CYCLE  = 'N'

     and  PAGE_NUM      = #Page#Oth

     and  LINE_NUM      = #Line#Oth

     and  ADDL_NBR      = &M.ADDL_NBR

     and  ERNCD      = $ErnCd



end-SQL



move &M.ADDL_NBR  to #ADDl#Oth



end-if



  do Ok-To-Pay-Update

  Do Check-Payment-Type                             !GBD 07/11/2003



evaluate $ErnCd

  when = '519'

  when = '522'

  when = '523'         !End of vacation codes added    SCM 1/9/2001

  when = '515'

  when = '513'    ! Vacation or Part-Time Vacation

   do get-sum-line-hrs

   move &hours_sum to #hours_sum

   if #Hours_sum > 40

     let #Tax_Periods = floor(#Hours_sum/40)

     do update-tax-periods-per-line

   end-if

end-evaluate



exit-update:



end-procedure



!********************************************************************************

!AXL 11/18/2004 New - Begin

Begin-Procedure Update1

#debug9 display 'Update1'



#debug8 show 'oth_pay set to: ' #HrlyRt

#debug8 show 'tl_source set to G'



begin-SQL ON-ERROR=SQL-Error-Found('Update-Oth-Earnings')

   UPDATE PS_PAY_OTH_EARNS

     SET   oth_pay    = #HrlyRt,

          tl_source  = 'G'

   where  COMPANY    = $Company

     and  PAYGROUP   = $PayGroup

     and  PAY_END_DT = $Pay_End_Dt

     and  OFF_CYCLE  = 'N'

     and  PAGE_NUM      = #Page#Oth

     and  LINE_NUM      = #Line#Oth

     and  ADDL_NBR      = #ADDL#Oth

     and  ERNCD      = $ErnCd

end-SQL



end-procedure



!********************************************************************************

Begin-Procedure Update2

#debug9 display 'Update2'



#debug8 show 'oth_pay set to 0'

#debug8 show 'OTH_HRS set to: ' #Hours

#debug8 show 'tl_source set to: G'



begin-SQL ON-ERROR=SQL-Error-Found('Update-Oth-Earnings')

   UPDATE PS_PAY_OTH_EARNS

    SET   oth_pay    = 0,

          OTH_HRS    = #Hours,

          tl_source  = 'G'

   where  COMPANY    = $Company

     and  PAYGROUP   = $PayGroup

     and  PAY_END_DT = $Pay_End_Dt

     and  OFF_CYCLE  = 'N'

     and  PAGE_NUM      = #Page#Oth

     and  LINE_NUM      = #Line#Oth

     and  ADDL_NBR      = #ADDL#Oth

     and  ERNCD      = $ErnCd

end-SQL



end-procedure



!********************************************************************************

! Check the Payment_Type value of the earnings code

!********************************************************************************



begin-procedure Check-Payment-Type

#debug9 show 'Check-Payment-Type '



let $check_payment_type = ' '



begin-select

CPT.PAYMENT_TYPE



  let $check_payment_type = &CPT.PAYMENT_TYPE



FROM PS_EARNINGS_TBL CPT

WHERE CPT.ERNCD = $ErnCd

AND   CPT.EFFDT = (SELECT MAX(EFFDT)

      FROM PS_EARNINGS_TBL

      WHERE ERNCD = CPT.ERNCD

      AND   EFFDT <= $Pay_End_Dt)



end-select



if $check_payment_type = 'B' and $ErnCd <> '167' !AXL 11/18/2004 Exclude 167



#debug9 display 'Check-Payment-Type'

#debug8 show 'comprate set to: 0'



begin-SQL ON-ERROR=SQL-Error-Found('Check-Payment-Type')

   UPDATE PS_PAY_OTH_EARNS

    SET   COMPRATE    = 0

   where  COMPANY    = $Company

     and  PAYGROUP   = $PayGroup

     and  PAY_END_DT = $Pay_End_Dt

     and  OFF_CYCLE  = 'N'

     and  PAGE_NUM      = #Page#Oth

     and  LINE_NUM      = #Line#Oth

     and  ADDL_NBR      = #ADDL#Oth

     and  ERNCD      = $ErnCd

end-SQL



end-if



end-procedure



!********************************************************************************

! Find Payline for EE that contains the 167 erncd from Addl PAy

!********************************************************************************



begin-procedure get-167-line

#debug9 show 'get-167-line '



begin-SELECT

RXO.Company

RXO.Paygroup

RXO.Pay_end_dt

RXO.Off_cycle

RXO.PAGE_NUM

RXO.LINE_NUM

RXO.ADDL_NBR



  move &RXO.Company to $Company

  move &RXO.Paygroup to $Paygroup

  move &RXO.Pay_end_dt to $pay_End_dt

  move &RXO.PAGE_NUM   to #Page#Oth

  move &RXO.LINE_NUM   to #Line#Oth

  move &RXO.ADDL_NBR   to #Addl#Oth



 from ps_pay_earnings RX,

      ps_pay_oth_earns RXO

 where   RX.COMPANY    = $Company

     and  RX.PAYGROUP   = $PayGroup

     and  RX.PAY_END_DT = $Pay_End_Dt

     and  RX.OFF_CYCLE  = 'N'

     and  RX.Company  = RXO.Company

     and  RX.Paygroup = RXO.Paygroup

     and  RX.Pay_end_dt = RXO.Pay_end_dt

     and  RX.OFF_CYCLE = RXO.Off_Cycle

     and  RX.PAGE_NUM =  RXO.PAGE_NUM

     and  RX.LINE_NUM =  RXO.LINE_NUM

     and  RX.ADDL_NBR =  RXO.ADDL_NBR

     and  RX.Emplid = $emplid

     and  RXO.ERNCD      = $ErnCd

end-SELECT



end-procedure



!********************************************************************************

!updates the ok_to_pay in earnings table

!********************************************************************************



begin-procedure Ok-To-Pay-Update

#debug9 show 'Ok-To-Pay-Update '



begin-SQL ON-ERROR=SQL-Error-Found('Ok-To-Pay-Update')

UPDATE PS_PAY_EARNINGS

SET OK_TO_PAY='Y'

WHERE COMPANY      = $company

  AND PAYGROUP     = $paygroup

  AND PAY_END_DT   = $Pay_End_Dt

  AND OFF_CYCLE    = 'N'

  AND PAGE_NUM        = #Page#Oth

  AND LINE_NUM        = #Line#Oth

  AND ADDL_NBR        = #Addl#Oth



end-SQL



end-procedure



!********************************************************************************

!Updates the pay-status informatin by using a temporary table

!********************************************************************************



begin-procedure Pay-Status-Update

#debug9 show 'Pay-Status-Update '



begin-SQL ON-ERROR=SQL-Error-Found('Pay-Status-Update')

DELETE FROM PS_WRK_EARNINGS

end-SQL



begin-sql ON-ERROR=SQL-Error-Found('Pay-Status-Update')

UPDATE PS_PAY_EARNINGS

SET PAY_LINE_STATUS='U',

    OK_TO_PAY = 'Y'

where COMPANY    = $company

  and PAYGROUP   = $paygroup

  and PAY_END_DT = $Pay_End_Dt

  and OFF_CYCLE  = 'N'

  and PAGE_NUM      = #Page#Oth

  and LINE_NUM      = #Line#Oth

end-sql



end-procedure



!********************************************************************************

!Adds a new line in the paysheet

!********************************************************************************



begin-procedure Add-New-Line

#debug9 show 'Add-New-Line '



do Get-Employee-Data



if $ErrorFound = 'N'

!    display #page#

!     display #page#save

  if #Page# <> #Page#Save

    move #Page# to #Page#Save

    do Add-Page

    move 1 to #line#

  end-if

  move #Line# to #Line#Save

  do Get-Benefit-Program

  do Add-Line

  move #Page#Save to #Page#Oth

  move #Line#Save to #Line#Oth

  move 0 to #Addl#Oth

  do Add-Pay-Earnings

  if #line# = 7

    add 1 to #Page#

    move 1 to #line#

  else

    add 1 to #line#

  end-if

end-if



end-procedure



!********************************************************************************

!Retrieves the employee information

!********************************************************************************



begin-procedure Get-Employee-Data

#debug9 show 'Get-Employee-Data '



  move 'N' to $Found



begin-select ON-ERROR=SQL-Error-Found('Get-Employee-Data')

A1.EMPLID

A1.NAME

D1.DED_TAKEN

D1.DED_SUBSET_ID

B1.BENEFIT_RCD_NBR

C1.JOBCODE

C1.DEPTID

C1.GL_PAY_TYPE

C1.POSITION_NBR

C1.SHIFT

C1.EMPL_TYPE

C1.LOCATION

C1.HOURLY_RT

C1.EFFDT

C1.FICA_STATUS_EE

C1.FLSA_STATUS



  move 'Y' to $Found



  FROM PS_PERSONAL_DATA A1,

       PS_EMPLOYMENT B1,

       PS_JOB C1,

       PS_DED_NA D1

 WHERE A1.EMPLID    = $EmplID

   AND B1.EMPLID    = A1.EMPLID

   !Added for Upgrade 9.0 GEX-AXG - Begin

   AND B1.EMPLID = D1.EMPLID

   AND B1.EMPL_RCD = D1.EMPL_RCD

   !Added for Upgrade 9.0 GEX-AXG - End

   AND C1.EMPLID    = A1.EMPLID

   AND B1.EMPL_RCD = C1.EMPL_RCD

   AND B1.EMPL_RCD = #Empl_RcdNo

   AND C1.EFFDT =

       (SELECT MAX(EFFDT)

	FROM   PS_JOB

	WHERE  EMPLID    = $EmplID

	  AND  EMPL_RCD = #Empl_RcdNo

	  AND  EFFDT    <= $Pay_End_Dt)

  AND  C1.EFFSEQ =

       (SELECT MAX(EFFSEQ)

	FROM   PS_JOB

	WHERE  EMPLID    = $EmplID

	  AND  EMPL_RCD = #Empl_RcdNo

	  AND  EFFDT     = C1.EFFDT)

end-select



  if isnull(&C1.position_nbr) = 1

     move '   ' to $position_nbr

  else

     move &C1.position_nbr to $position_nbr

  end-if



  if isnull(&C1.GL_PAY_TYPE) = 1

     move ' ' to $Gl_Pay_type

  else

     move &C1.Gl_Pay_type to $Gl_Pay_Type

  end-if



  if isnull(&B1.Benefit_rcd_nbr) = 1

     move 0 to #Benefit_Rcd#

  else

     move &B1.Benefit_Rcd_nbr to #Benefit_Rcd#

  end-if



  if isnull(&D1.Ded_Taken) = 1

    move 'D' to $DedTaken

  else

    move &D1.Ded_Taken to $DedTaken

  end-if



  if isnull(&D1.Ded_subset_id) = 1

    move '   ' to $DedSubsetId

  else

    move &D1.Ded_subset_id to $DedSubsetId

  end-if



  if #hrlyrt <= 0

    if isnull(&C1.Hourly_Rt) = 1

       move 0 to #job_hrlyrt

    else

       move &C1.Hourly_Rt to #job_HrlyRt

       move #job_hrlyrt to #hrlyrt



    end-if

  end-if



if $Found = 'N'

  do Error-Found

  add 1 to #ErrorCount

  print 'EmplID Not Found(Personal_Data, Employment and Job)' (,43)

  print '; Transaction is rejected;' ()

  print $transaction (+1,21)

end-if



end-procedure



!********************************************************************************

!Inserts a new page in the paysheet

!********************************************************************************



begin-procedure Add-Page

#debug9 show 'Add-Page '



#debug8 display $company

#debug8 display $paygroup

#debug8 display $pay_end_dt

!display #page_num

#debug8 display #page#





begin-SQL ON-ERROR=SQL-Error-Found('Add-Page')

INSERT INTO PS_PAY_PAGE ( COMPANY,

			  PAYGROUP,

			  PAY_END_DT,

			  OFF_CYCLE,

			  PAGE_NUM,

			  CONFIRMED,

			  BALNC_LINES,

			  BALNC_LINES_OK,

			  BALNC_REG_PAY_HRS,

			  BALNC_OT_HRS,

			  BALNC_OTH_HRS,

			  BALNC_REG_PAY,

			  BALNC_OTH_EARNS,

			  BALNC_HOURLY_RT,

			  SINGLE_CHECK_USE,

			  PAY_SHEET_SRC)

VALUES                  ( $Company,

			  $paygroup,

			  $pay_end_dt,

			  'N',

			  #page#,

			  'N',

			  0,

			  0,

			  0,

			  0,

			  0,

			  0,

			  0,

			  0,

			'N',

			'S')

end-SQL



end-procedure



!********************************************************************************

!Get Current Benefit Program of the Employee

!********************************************************************************



begin-procedure Get-Benefit-Program

#debug9 show 'Get-Benefit-Program '



move 'N' to $beninfo_found



begin-select ON-ERROR=SQL-Error-Found('Get-Benefit-Program')

BPP.BENEFIT_PROGRAM   &BPP.benefit_program



     move 'Y' to $beninfo_found



FROM PS_BEN_PROG_PARTIC BPP



WHERE BPP.EMPLID = $emplid

  AND BPP.EMPL_RCD = #Empl_RcdNo

  AND BPP.EFFDT = (SELECT MAX(EFFDT)

                FROM PS_BEN_PROG_PARTIC BPPA

                WHERE BPPA.EMPLID = $emplid

                AND BPPA.EMPL_RCD = #Empl_RcdNo

                AND BPPA.EFFDT <= $Pay_End_Dt)



end-select



if $beninfo_found = 'N'

   do error-found

   print 'No Benefit Program information found' (,43)

end-if



end-procedure



!********************************************************************************

!insets a new line in the pay sheet

!********************************************************************************



begin-procedure Add-Line

#debug9 show 'Add-Line '



let $bu_lkp = ' '



lookup bulookup 'COMMN' $bu_lkp



#debug8 show 'pay line '  $bu_lkp ' ' &c1.deptid

 !isdvsxp testing

 #ifdef debug8

                 show   $company

	           show  $paygroup

	           show  $Pay_End_Dt

	           show	  'N'

	           show   #page#

		   show	  #line#

		   show	  $emplid

		   show	  #Empl_RcdNo

		   show	  #Benefit_Rcd#

		   show	  &A1.name

		   show	  'N'

		   show   'N'

		   show	  'N'

		   show	  &C1.empl_type

		   show	  &C1.location

		   show	  &C1.deptid

		   show	  &BPP.benefit_program

		   show	  'N'

		   show	  '      '

		   show	  '0'

		   show	  'NULL'

		   show	  '0'

		   show	  '0'

		   show	  'N'

		   show	 'N'

		   show	 'G'

		   show	 'S'

		   show	 $bu_lkp

		   show	 '0'

                   show     'N'

  #endif

               !isdvsxp testing

begin-SQL ON-ERROR=SQL-Error-Found('Add-Line')

INSERT INTO PS_PAY_LINE ( COMPANY,

			  PAYGROUP,

			  PAY_END_DT,

			  OFF_CYCLE,

			  PAGE_NUM,

			  LINE_NUM,

			  EMPLID,

			  EMPL_RCD,

			  BENEFIT_RCD_NBR,

			  NAME,

			  JOB_CHANGE,

			  PARTIAL_PERIOD,

			  CONFIRMED,

			  EMPL_TYPE,

			  LOCATION,

			  DEPTID,

			  BENEFIT_PROGRAM,

			  MANUAL_CHECK,

			  FORM_ID,

			  PAYCHECK_NBR,

			  CHECK_DT,

			  TOTAL_GROSS,

			  NET_PAY,

			  PAYCHECK_ADJUST,

			  SINGLE_CHECK_USE,

			  TL_SOURCE,

			  PAY_SHEET_SRC,

			  BUSINESS_UNIT,        !SXK 01/05/00

        LOCKED_FOR_CONF)      !GBD 11/13/02

VALUES  ( $company,

			  $paygroup,

			  $Pay_End_Dt,

			  'N',

			  #page#,

			  #line#,

			  $emplid,

			  #Empl_RcdNo,

			  #Benefit_Rcd#,

			  &A1.name,

			  'N',

			  'N',

			  'N',

			  &C1.empl_type,

			  &C1.location,

			  &C1.deptid,

			  &BPP.benefit_program, !JNB 08/30/1999

			  'N',

			  '      ',

			  0,

			  NULL,

			  0,

			  0,

			  'N',

			 'N',

			 'G',

			 'S',

			 $bu_lkp,

          'N')                   !GBD 11/13/02 - locked_for_conf

end-SQL



end-procedure



!********************************************************************************

!Adds information to Earnings table

!********************************************************************************



begin-procedure Add-Pay-Earnings

#debug9 show 'Add-Pay-Earnings '



if #hrlyrt <= 0

   move &C1.HOURLY_RT to #job_hrlyRt

else

   move #hrlyRt to #job_hrlyRt

end-if



#debug8 show '$erncd ' $erncd



if ($erncd = '167' or $erncd = '170' or $erncd = '515' or $erncd = '176')

      #debug9 show 'Doing select-addl-hrly-rt'

     do select-addl-hrly-rt

     if $addl_found = 'Y'

       move #job_hrlyrt to #temp

       move #addl_hrly_rt to #job_hrlyrt

     end-if

end-if



let $bu_lkp = ' '



lookup bulookup 'COMMN' $bu_lkp



#debug8  show 'pay earnings ' $bu_lkp ' ' $work_dept



if $ErrorFound = 'Y'

 goto exit-insert-earnings

end-if



do get-state-locality



move 'Y' to $Addl_Taxes        ! default, take additional taxes

				 ! change to 'N' to not take addl taxes





#debug8 display 'EMPLID: ' noline

#debug8 display $emplid

!  display 'Pay Earnings rate: ' noline

!  display #job_HrlyRt



#debug9 show 'Inserting into PS_PAY_EARNINGS '

#ifdef debug8

  show $Company

  show $paygroup

  show $pay_End_dt

  show 'N'

  show #Page#Oth

  show #Line#Oth

  show #Addl#Oth

  show #SepChk

#endif



begin-SQL ON-ERROR=SQL-Error-Found('Add-Pay-Earnings')

INSERT INTO PS_PAY_EARNINGS ( COMPANY,

			      PAYGROUP,

			      PAY_END_DT,

			      OFF_CYCLE,

			      PAGE_NUM,

			      LINE_NUM,

			      ADDL_NBR,

			      SEPCHK,

			      EMPLID,

			      EMPL_RCD,

			      BENEFIT_RCD_NBR,

			      EARNS_BEGIN_DT,

			      EARNS_END_DT,

			      ADDLPAY_REASON,

			      DISABLE_DIR_DEP,

			      GROSSUP,

			      PAY_LINE_STATUS,

			      OK_TO_PAY,

			      JOB_PAY,

			      SINGLE_CHECK_USE,

			      ACCT_CD,

			      GL_PAY_TYPE,

			      DEPTID,

			      JOBCODE,

			      POSITION_NBR,

			      SHIFT,

			      SHIFT_RT,

			      HOURLY_RT,

			      FLSA_RT,

			      RATE_USED,

			      FLSA_REQUIRED,

			      ERNCD_REG_HRS,

			      ERNCD_OT_HRS,

			      REG_PAY_HRS,

			      REG_HRS,

			      OT_HRS,

			      REG_HRLY_EARNS,

			      OT_HRLY_EARNS,

			      ERNCD_REG_EARNS,

			      REG_PAY,

			      REG_EARNS,

			      REG_EARN_HRS,

			      DED_TAKEN,

			      DED_SUBSET_ID,

			      DED_TAKEN_GENL,

            DED_SUBSET_GENL,

			      STATE,

			      LOCALITY,

			      PAY_FREQUENCY,

			      TAX_PERIODS,

			      TAX_METHOD,

			      ADDL_TAXES,

			      OVERRIDE_HOURLY_RT,

			      TL_SOURCE,

			      PAY_SHEET_SRC,

			      BUSINESS_UNIT,

			      EI_PRIOR_PD_CORR,

			      COMP_RATECD_REG,

			      COMP_RATECD_OT,

			      COMPRATE_USED_REG,

			      COMPRATE_USED_OT,

            FICA_STATUS_EE,

            PAID_PRDS_PER_YEAR,

            FLSA_END_DT,

            ORIG_PAYGROUP,

            FLSA_STATUS,

            XREF_NUM,

            UNION_CD,

            BEN_DED_STATUS,

            GENL_DED_STATUS)

VALUES      (     $Company,

			      $paygroup,

			      $pay_End_dt,

			      'N',

			      #Page#Oth,

			      #Line#Oth,

			      #Addl#Oth,

			      #SepChk,

			      $emplid,

			      #Empl_RcdNo,

			      #Benefit_Rcd#,

			      $pay_begin_dt_ins,

			      $pay_end_dt_ins,

			      '   ',

			      'N',

			      'N',

			      'I',

			      'Y',

			      'N',

			      'N',

			      $Work_Dept,

			      $gl_pay_type,

			      $Store,

			      $Work_Job_Cd,

			      $Position_Nbr,

			      nvl($shiftCd,'N'),

			      0,

			      #job_HrlyRt,

			      0,

			      'H',

			      'Y',      ! FLSA Required

			      'REG',

			      'OTP',

			      0,

			      0,

			      0,

			      0,

			      0,

			      'REG',

			      0,

			      0,

			      0,

			      $DedTaken,

			      $DedSubsetId,

            'D',

            ' ',

			      $state,

			      $locality,

			      'W',

			      1,

			      'A',

			      $Addl_Taxes,

            'Y',

			      'G',

			      'S',

			      $bu_lkp,

			      'N',

			      ' ',

			      ' ',

			      0,

			      0,

            &C1.FICA_STATUS_EE,

            0,

            '',

            $paygroup,

            &C1.FLSA_STATUS,

            0,

            ' ',

            'I',

            'I')

end-sql



move #temp to #job_hrlyrt



exit-insert-earnings:



end-procedure



!********************************************************************************

! Get Correct Pay Begin Date

!********************************************************************************



begin-procedure Find-Max-Sunday-Date

#debug9 show 'Find-Max-Sunday-Date '



#debug9 display 'Correct Pay Begin Date'



begin-select LOOPS=1



SUN.PAY_BEGIN_DT



  move 'Y' to $Found

  #debug8 show '  Pay Begin date: ' &SUN.PAY_BEGIN_DT



FROM PS_PAY_CALENDAR SUN

where SUN.PAY_BEGIN_DT = (SELECT MAX(PAY_BEGIN_DT)

			 FROM PS_PAY_CALENDAR

			 WHERE PAY_BEGIN_DT <= &ta.pay_begin_dt

			 and PAY_OFF_CYCLE_CAL = 'N')   !ISDVSXP

end-select



end-procedure



!********************************************************************************

! Get Correct Pay End Date

!********************************************************************************



begin-procedure Find-Min-Saturday-Date

#debug9 show 'Find-Min-Saturday-Date '



#debug9 display 'Correct Pay End Date'



begin-select LOOPS=1



SAT.PAY_END_DT



  move 'Y' to $Found

  #debug8 show '  Pay End date: ' &SAT.PAY_END_DT



FROM PS_PAY_CALENDAR SAT

where SAT.PAY_END_DT = (SELECT MIN(PAY_END_DT)

			 FROM PS_PAY_CALENDAR

			 WHERE PAY_END_DT >= &ta.pay_end_dt

			 and PAY_OFF_CYCLE_CAL = 'N')   !ISDVSXP



end-select



end-procedure



!********************************************************************************

begin-procedure get-state-locality

#debug9 show 'get-state-locality '



  move '**' to $State

  move ' ' to $Locality



begin-select

D2.STATE

D2.LOCALITY

D2.DIST_PCT



  let $State = rtrim(&D2.State, ' ')



  if isnull(&D2.Locality) = 1

    let $Locality = '  '

  else

    let $Locality = &D2.Locality

  end-if

  exit-select



 FROM PS_TAX_DISTRIB D2

where D2.EMPLID = $Emplid

  and D2.EMPL_RCD = #Empl_RcdNo

  and D2.EFFDT =

	    (SELECT MAX(X31.EFFDT)

	     from PS_TAX_DISTRIB X31

	     where X31.EMPLID = $emplid

	       and X31.EMPL_RCD = #EMPL_RCDno

	       and X31.EFFDT <= $Pay_End_Dt)

end-select



end-procedure



!********************************************************************************

begin-procedure select-addl-hrly-rt

#debug9 show 'select-addl-hrly-rt '



move 'N' to $addl_found



begin-select ON-ERROR=SQL-Error-Found('select-addl-hrly-rt')

addl.hourly_rt



 move 'Y' to $addl_found

 move &addl.hourly_rt to #addl_hrly_rt



#debug8 show 'Addl pay rate found for ee/erncd: ' noline

#debug8 show $emplid noline

#debug8 show '/' noline

#debug8 show #empl_rcdno noline

#debug8 show '/' noline

#debug8 show $erncd noline

#debug8 show '/' noline

#debug8 show &addl.hourly_rt



from ps_addl_pay_data addl

where addl.emplid = $emplid

and addl.EMPL_RCD = #empl_rcdno

and addl.erncd = $erncd

and addl.effdt = (Select max(effdt) from ps_addl_pay_data

                   where emplid = $emplid

                     and EMPL_RCD = #empl_rcdno

                     and erncd = $erncd

                     and effdt <= $pay_end_Dt)

and addl.addl_seq = (select max(addl_Seq) from ps_addl_pay_data

                      where emplid = $emplid

                        and EMPL_RCD = #empl_rcdno

                        and erncd = $erncd

                        and effdt = addl.effdt)

and (addl.earnings_end_dt IS NULL OR $pay_begindt <= addl.earnings_end_dt)



end-select

if $addl_found = 'N' and $erncd = '167'

  do error-found

  add 1 to #ErrorCount

  if $erncd = '167'

    print 'Pharmacy premium is not defined for employee' (,43)

  end-if

end-if



end-procedure



!********************************************************************************

begin-procedure select-oth-pay

#debug9 show 'select-oth-pay '



move 0 to #pharm_count



begin-select

count(*) &pharm_count

  move &pharm_count to #pharm_count

FROM PS_PAY_EARNINGS add2,

     PS_PAY_OTH_EARNS add1

where ADD1.Company = Add2.company

  and ADD1.paygroup = Add2.paygroup

  and add1.pay_end_Dt = add2.pay_end_dt

  and add1.off_cycle = add2.off_cycle

  and add1.PAGE_NUM = add2.PAGE_NUM

  and add1.LINE_NUM = add2.LINE_NUM

  and add1.ADDL_NBR = add2.ADDL_NBR

  and add2.emplid  = &M.emplid

  and ADD1.COMPANY    = $Company

  and ADD1.PAYGROUP   = $PayGroup

  and ADD1.PAY_END_DT = $Pay_End_Dt

  and ADD1.OFF_CYCLE  = 'N'

  and ADD1.ERNCD      = $ErnCd

  and  add1.oth_pay > 0



end-select



end-procedure



!********************************************************************************

!Edits employee information

!********************************************************************************



begin-procedure Edit-EmplID

#debug9 show 'Edit-EmplID '



  move 'N' to $Found

!display #inputtran

!display $emplid

!display #empl_rcdno

!display $pay_end_dt



begin-select ON-ERROR=SQL-Error-Found('Edit-EmplId')

C.COMPANY

C.PAYGROUP

C.EMPL_STATUS



   if (&C.EMPL_STATUS <> 'A') AND (&C.EMPL_STATUS <> 'P')

     AND (&C.EMPL_STATUS <> 'Q') AND (&C.EMPL_STATUS <> 'U')

        do Error-Found

        move 'Y' to $ErrorFound

        print 'Employee Status is not one of (A,P,Q,U); ' (,43)

        print 'JOB Status: ' ()

        print &C.EMPL_STATUS ()

        print ';Transaction is rejected;' ()

        print $transaction (+1,21)

        add 1 to #ErrorCount

        use-report error-report

   end-if



  !10/18/2005 - AXL - Begin

  !do not validate any further if error condition already found.

  if $errorfound = 'N'

     if RTRIM(&C.COMPANY,' ') <> RTRIM($COMPANY,' ')

         do Error-Found

         print 'Company mismatch between transaction and JOB; ' (,43)

         print 'JOB Company : ' ()

         print &C.company ()

         print ';Transaction is rejected;' ()

         print $transaction (+1,21)

         add 1 to #ErrorCount

         use-report error-report

     end-if



     if RTRIM(&C.PAYGROUP,' ') <> RTRIM($PAYGROUP,' ')

         do Error-Found

         print 'Paygroup mismatch between transaction and JOB; ' (,43)

         print 'JOB Paygroup : ' ()

         print &C.paygroup ()

         print ';Transaction is rejected;' ()

         print $transaction (+1,21)

         add 1 to #ErrorCount

         use-report error-report

     end-if

  end-if

  !10/18/2005 - AXL - End



  move 'Y' to $Found

   FROM PS_EMPLOYMENT B, PS_JOB C

   WHERE B.EMPLID    = $EmplID

   AND B.EMPLID    = C.EMPLID

   AND B.EMPL_RCD = #Empl_RcdNo

   AND B.EMPL_RCD = C.EMPL_RCD

   AND C.EFFDT =

       (SELECT MAX(T.EFFDT)

	FROM   PS_JOB T

	WHERE  T.EMPLID    = $EmplID

	  AND  T.EMPL_RCD = #Empl_RcdNo

	  AND  T.EFFDT    <= $Pay_End_Dt)

  AND  C.EFFSEQ =

       (SELECT MAX(R.EFFSEQ)

	FROM   PS_JOB R

	WHERE  R.EMPLID    = $EmplID

	  AND  R.EMPL_RCD = #Empl_RcdNo

	  AND  R.EFFDT     = C.EFFDT)

end-select



if $Found = 'N'

   do Error-Found

   print 'EmplID Not Found(Personal_Data, Employment and Job)' (,43)

   print ';Transaction is rejected;' ()

   print $transaction (+1,21)

   add 1 to #ErrorCount

   use-report error-report

end-if



end-procedure



!********************************************************************************

!Validates the Earnings code

!********************************************************************************



begin-procedure Edit-ErnCd

#debug9 show 'Edit-ErnCd '

move 'N' to $skip_record_tran



lookup earncodelookup $erncd $erncd_lkp

  if RTRIM($erncd,' ') <> RTRIM($erncd_lkp,' ')

    do Error-Found

    print 'Invalid Earnings Code=' (,43)

    print $ErnCd ()

    add 1 to #ErrorCount

  else

    if $erncd = '167'

       !AXL 11/18/2004 Redo edits and error msg - Begin

       !evaluate #hours

       #debug8 show '$Work_Job_Cd ' $Work_Job_Cd

       evaluate $Work_Job_Cd

	      when = '20138'

	      when = '30170'

             break

        when-other

             do error-found

             !print 'Pharmacy Hours not (4,8,12,14):actual hours came in:' (,43)

	           let $print_msg = 'Job Code ' || $Work_Job_Cd

             let $print_msg = $print_msg || ' not a Full Time Pharmacy Job - ;'

	           let $print_msg = $print_msg || ' Transaction is rejected'

	           !print 'Not a Full Time Pharmacy Job:' (,43)

             print $print_msg (,43)

             !print #hours ()

	           !print $Work_Job_Cd ()

       !AXL 11/18/2004 Redo edits and error msg - End

             print $transaction (+1,21)

             add 1 to #errorcount

             move 'Y' to $skip_record_tran

      end-evaluate

    end-if



    if $erncd = 'OTP'

       do get-job-info

       if (&GJI.JOBCODE = '30170' or &GJI.JOBCODE = '20138') and

          (&GJI.EMPL_TYPE = 'S') and (&GJI.FULL_PART_TIME = 'F')

             do error-found

             print 'Pharmacy EE not eligible for OTP earnings. OTP hrs =' (,52)

             print #hours ()

             print $transaction (+1,21)

             add 1 to #errorcount

             move 'Y' to $skip_record_tran

       end-if

    end-if

  end-if



end-procedure



!********************************************************************************

begin-procedure get-job-info

#debug9 show 'get-job-info '



begin-select

GJI.JOBCODE

GJI.FULL_PART_TIME

GJI.EMPL_TYPE





FROM PS_JOB GJI

where GJI.EMPLID = $emplid

  and GJI.EMPL_RCD = #empl_rcd

  and GJI.EFFDT =

            (SELECT MAX(GJII.EFFDT)

             from ps_job GJII

             where gjii.emplid = gji.emplid

               and gjii.EMPL_RCD = gji.EMPL_RCD

               and gjii.effdt <= $Pay_End_Dt)

end-select



end-procedure



!********************************************************************************

!Validates the numeric values and finds the decimal points

!********************************************************************************



begin-procedure Edit-Numeric

#debug9 show 'Edit-Numeric '



  move 'N' to $already-errored-out

  move #FieldLength to #FieldInteger

  if #FieldDecimal <> 0

    subtract 1 from #FieldInteger

    subtract #FieldDecimal from #FieldInteger

  end-if

  move 'N' to $Numerr

  move 'N' to $DecFound

  move 'N' to $NumFound

  move 'N' to $SpcFound

  move 0 to #int

  move 0 to #dec

  move 0 to #loc



  while #loc < #FieldLength and $Numerr = 'N'

    extract $Numchar from $FieldValue #loc 1



    Evaluate $Numchar

      when = ''

	     if $NumFound = 'Y'

	       move 'Y' to $SpcFound

	     end-if

	     break

     when = ' '

	     if $NumFound = 'Y'

	       move 'Y' to $SpcFound

	     end-if

	     break

     when = '-'

	     if $NumFound = 'Y' or $Negative = 'N'

	      move 'Y' to $NumFound

	    end-if

	    break

    when = '.'

	   if $SpcFound = 'Y'

	    move 'Y' to $Numerr

	    move 'Y' to $already-errored-out

	    do Error-Found

	    print $FieldPrint (,43)

	    print ' Not Valid Numeric=' ()

	    print $FieldValue ()

	    print ' At Location:' ()

	    print #loc        ()

	   else

	    if $DecFound = 'Y' or #FieldDecimal = 0

	      move 'Y' to $Numerr

	      move 'Y' to $already-errored-out

	      do Error-Found

	      print $FieldPrint (,43)

	      print ' Not Valid Numeric=' ()

	      print $FieldValue ()

	      print ' At Location:' ()

	      print #loc        ()

	    else

	     move 'Y' to $DecFound

	     move 'Y' to $NumFound

	    end-if

	   end-if

	   break

    when < '0'

    when > '9'

	    move 'Y' to $Numerr

	    break

    when-other

	    if $SpcFound = 'Y'

	      move 'Y' to $Numerr

	    else

	      if $DecFound = 'Y'

	        if #FieldDecimal = #dec

	          move 'Y' to $Numerr

	          move 'Y' to $already-errored-out

	          do Error-Found

	          print $FieldPrint (,43)

	          print ' Not Valid Numeric=' ()

	          print $FieldValue ()

	          print ' At Location:' ()

	          print #loc        ()

	        else

	          add 1 to #dec

	          move 'Y' to $NumFound

	        end-if

	      else

	       if #FieldInteger = #int

	         do Error-Found

	         move 'Y' to $Numerr

	         move 'Y' to $already-errored-out

	         print $FieldPrint (,43)

	         print ' No Decimal Entered=' ()

	         print $FieldValue ()

	         print ' At Location:' ()

	         print #loc        ()

	       else

	         add 1 to #int

	         move 'Y' to $NumFound

	       end-if

	      end-if

	    end-if

	    break

    end-evaluate

    add 1 to #loc

  end-while



  if $DecFound = 'Y'

    if #int = 0 and #dec = 0

      move 'Y' to $Numerr

    end-if

  end-if



  if $already-errored-out = 'N'

    if $Numerr = 'Y'

      do Error-Found

	    print $FieldPrint (,43)

	    print ' Not Valid Numeric=' ()

	    print $FieldValue ()

    end-if

  end-if



end-procedure



!********************************************************************************



BEGIN-PROCEDURE MAP-EMPLID

#debug9 show 'MAP-EMPLID '



let $mapping_id_found='N'



BEGIN-Select distinct



MAP.SSN

MAP.EMPL_RCD



  let $mapping_id_found='Y'

  !isdvsxp itg 40793 10/01/2009 -- start

  if length(&ta.emplid)>7

    let #empl_rcdno=substr(&ta.emplid,8,1)

  else

    let #empl_rcdno=0

  end-if

!isdvsxp itg 40793 10/01/2009 -- end

FROM PS_GEX_EMPLID_MAPP MAP

Where MAP.emplid   = substr(&ta.EMPLID,1,7) !SXP FOR ITG 40793 09/04/2008

END-SELECT



END-PROCEDURE GET-USERID

!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends



!********************************************************************************

Begin-procedure Get-Company-Paygroup

#debug9 show 'Get-Company-Paygroup '



#debug8 show '$Pay_End_Dt ' $Pay_End_Dt

#debug8 show  '$emplid9     '   $emplid9

#debug8 show  ' &ta.deptid  '  &ta.deptid



let $found-company-paygroup = 'N'



begin-select distinct

pe.company

pe.paygroup

pe.empl_rcd



   let $found-company-paygroup = 'Y'



from ps_pay_earnings pe



where pe.pay_end_dt = $Pay_End_Dt

and  pe.emplid      =  $emplid9

and  pe.deptid in (&ta.deptid,&ta.deptid_home,$home_deptid)            !isdvsxp added 09292008

end-select



End-procedure



!********************************************************************************

Begin-procedure Get-Alt-Rate

#debug9 show 'Get-Alt-Rate '



#ifdef debug8

  show 'APD.HOURLY_RT '	&APD.HOURLY_RT

  show '$emplid9 '		$emplid9

  show '#empl_rcdno '		#empl_rcdno

  show '$erncd '		$erncd

#endif



let $alt_rt_found='N'



begin-select



APD.HOURLY_RT



     let $alt_rt_found='Y'



FROM PS_ADDL_PAY_DATA APD



  WHERE APD.EMPLID    = $emplid9

    AND APD.EMPL_RCD  = #empl_rcdno

    AND APD.ERNCD     = '176'

    AND APD.EFFDT   =  (SELECT MAX(EFFDT) FROM PS_ADDL_PAY_DATA

        WHERE APD.EMPLID   = EMPLID

          AND APD.EMPL_RCD = EMPL_RCD

          AND APD.ERNCD    = ERNCD

          AND EFFDT     <= $Pay_End_Dt)



end-select



End-procedure



!********************************************************************************

Begin-procedure Get-Home-Jobcd

#debug9 show 'Get-Home-Jobcd '



begin-select



GHJ.jobcode

GHJ.deptid

GHJ.acct_cd

GHJ.EMPL_TYPE

GHJ.COMPANY

GHJ.PAYGROUP



FROM PS_JOB GHJ



WHERE GHJ.EMPLID      = $emplid9

    AND GHJ.EMPL_RCD  = #empl_rcdno

    AND GHJ.EFFDT =

        (SELECT MAX(EFFDT) FROM PS_JOB

        WHERE GHJ.EMPLID   = EMPLID

          AND GHJ.EMPL_RCD = EMPL_RCD

          AND EFFDT       <= $pay_end_dt)

    AND GHJ.EFFSEQ =

        (SELECT MAX(EFFSEQ) FROM PS_JOB

        WHERE GHJ.EMPLID   = EMPLID

          AND GHJ.EMPL_RCD = EMPL_RCD

          AND GHJ.EFFDT    = EFFDT)



end-select



End-procedure

#Include 'gexpyhst.sqc'  ! Pay History Table procedures

#Include 'gexpyaud.sqc'  ! Audit Report procedures

