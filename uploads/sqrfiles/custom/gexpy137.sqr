!***********************************************************************
! GEXPY083:   EEs Having Invalid Earns Begin or End Dates              *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! CWB      06/12/2003    Initial creation                              *
!                                                                      * 
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)


Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P900-Finalization
End-Report

Begin-Heading 7
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg01.sqc'

  print 'Pay End Date  ' (4,1)
  do Format-DateTime($Pay_End_Dt, $out, {DEFDATE}, '', '')
  print $out ()

  Print 'CMP'              (+2,1)
  Print 'PYGRP'            (,5)
  Print 'PAGE'             (,13)
  Print 'LINE'             (,19)
  Print 'ADDL'             (,25) 
  Print 'SEPCHK'           (,31)
  Print 'EMPLID'           (,40)
  Print 'Earns Begin Dt'   (,50)
  Print 'Earns End Dt'     (,67)

End-Heading

Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXPY137'
  Let $ReportTitle   =   'Employees Having Invalid Earns Begin or End Dates'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan
  Do P150-Get-Last-Calced-Pay
  Do P151-Get-Pay-Begin

End-Procedure

Begin-Procedure P150-Get-Last-Calced-Pay
#debug9 Show 'P150-Get-Last-Calced-Pay'
Begin-Select
Max(pc.pay_end_dt) &pay_end_dt
  Let $pay_end_dt = &pay_end_dt
  Do Format-DateTime($pay_end_dt, $payenddt, {DEFMDY}, '', '')
  If Rtrim($pay_end_dt,' ') = ''
    Show 'No calced pay period found in calendar'
    Stop
  Else
    Show 'Last calced pay end date:  ' $pay_end_dt
  End-If
From   ps_pay_calendar pc
Where  pc.pay_end_dt <= $AsOfToday
!And    pc.pay_calc_run = 'Y'
And    pc.pay_precalc_run = 'Y'
End-Select
End-Procedure

Begin-Procedure P151-Get-Pay-begin
#debug9 Show 'P151-Get-Pay-Begin'
Begin-Select
distinct pc1.pay_begin_dt &pay_begin_dt
  Let $pay_begin_dt = &pay_begin_dt
  Do Format-DateTime($pay_begin_dt, $paybegindt, {DEFMDY}, '', '')
  Show 'Last calced pay begin date:  ' $pay_begin_dt
From   ps_pay_calendar pc1
Where  pc1.pay_end_dt = $Pay_end_dt
End-Select
End-Procedure

Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
Begin-Select 
pe.company    
pe.paygroup  
pe.page_num 
pe.line_num 
pe.addl_nbr  
pe.sepchk       
pe.emplid   
pe.earns_begin_dt
pe.earns_end_dt 

  let $emplid = &pe.emplid
  let $earns_begin_dt = &pe.earns_begin_dt
  let $earns_end_dt = &pe.earns_end_dt

  do P210-find-other-dates

From   ps_pay_earnings pe
Where  pe.pay_end_dt = $pay_end_dt
And    pe.off_cycle  = 'N'
And    pe.ok_to_pay  = 'Y'
and    pe.pay_line_status <> 'F'
and    not(pe.earns_begin_dt between $pay_begin_dt and $pay_end_dt)
and    not(pe.earns_end_dt between $pay_begin_dt and $pay_end_dt)
Order by pe.company,pe.paygroup,pe.emplid
End-Select
End-Procedure

Begin-Procedure P210-find-other-dates
#debug9 Show 'P210-find-other-dates'
  do P215-Get-Oth-Pay-end
  do P220-Get-Oth-Pay-begin
  do P221-convert-dates
  do P300-validate-earns-dates
End-Procedure

Begin-Procedure P215-Get-oth-Pay-end
#debug9 Show 'P215-Get-Oth-Pay-End'
Begin-Select
Min(pc2.pay_end_dt) &oth_pay_end_dt
  Let $oth_pay_end_dt = &oth_pay_end_dt
From   ps_pay_calendar pc2
Where  pc2.pay_end_dt >= $earns_end_dt
End-Select
End-Procedure

Begin-Procedure P220-Get-oth-Pay-begin
#debug9 Show 'P220-Get-Oth-Pay-Begin'
Begin-Select
distinct pc3.pay_begin_dt &oth_pay_begin_dt
  Let $oth_pay_begin_dt = &oth_pay_begin_dt
From   ps_pay_calendar pc3
Where  pc3.pay_end_dt = $oth_pay_end_dt
End-Select
End-Procedure

Begin-procedure P221-convert-dates
do convert-To-DTU-Date($earns_begin_dt,$earns_begin_dt_dtu)
do convert-To-DTU-Date($earns_end_dt,$earns_end_dt_dtu)
do convert-To-DTU-Date($oth_pay_begin_dt,$oth_pay_begin_dt_dtu)
do convert-To-DTU-Date($oth_pay_end_dt,$oth_pay_end_dt_dtu)
End-procedure

Begin-Procedure P300-validate-earns-dates
#debug9 Show 'P300-validate-earns-dates'
  If (($earns_begin_dt_dtu >= $oth_pay_begin_dt_dtu 
      and $earns_begin_dt_dtu <= $oth_pay_end_dt_dtu)
     and ($earns_end_dt_dtu >= $oth_pay_begin_dt_dtu 
          and $earns_end_dt_dtu <= $oth_pay_end_dt_dtu))
  else
!   show '#########################################'
!   show '$EMPLID:           ' $emplid 
!   show '$earns_begin_dt:   ' $earns_begin_dt
!   show '$earns_end_dt:     ' $earns_end_dt
!   show '$oth_pay_begin_dt: ' $oth_pay_begin_dt
!   show '$oth_pay_end_dt:   ' $oth_pay_end_dt
!   show '#########################################'
     do p400-write-report
     Let $Data-Found-Flag = 'Y'
  end-if
End-Procedure

Begin-Procedure P400-write-report
#debug9 Show 'P400-Write-Report'
  print &pe.company          (+1,1)
  print &pe.paygroup         (,6)
  print &pe.page_num         (,13)
  print &pe.line_num         (,20)
  print &pe.addl_nbr         (,26)
  print &pe.sepchk           (,33) 
  print &pe.emplid           (,38)
  print &pe.earns_begin_dt   (,50)
  print &pe.earns_end_dt     (,67)
End-Procedure

Begin-Procedure P900-Finalization
#debug9 Show 'P900-Finalization'
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'
End-Procedure

#include 'askaod.sqc'    !Get AsOfDate
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
