!***********************************************************************
!  GEXPY025:  Franchise Pension Legal Aid Report                       *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       * 
!                                                                      *
!***********************************************************************
!
! GEXPY025:  	Franchise Pension Legal Aid Report
!
! Narrative:	Prints the employees detail information. Excludes 
!			union codes of NON and SEC.	
!
! #Debugx Used:	#debug9 paragraph trace
!			#debug8 key variable values
!			#debug7 data returned from sql calls
!
! SQL Tables:	Personal_Data
!			Job
!			Employment
!			Pay_Earnings
!			Pay_Oth_Earns
!
! Written by:	Dave Herzog - Soft Link Inc.  02-04-98
!
! Normally Run:	Monthly
!
! Prerequisite: 	None
!
! Control Parms:	Company  	(Will need to be run control enabled later)
!               	
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!ID#	INITIALS  DATE       DESCRIPTION OF THE CHANGE         
!***********************************************************************
!	DAH		02/04/98   Initial Creation                  
! 	DAH		03/01/98   Changed select for earnings balance 
!				     to read EARNINGS_BAL. (GEX001)   
! 	JDH		10/15/98   Modified to use spec. accum. WK1   
!
!     DAH         01/15/99   Change to only show employee when 
!                             they have activity in the month being
!                             selected. Also fixed a potential problem 
!                             of empty pages being printed for CO/DEPT/UNION 
!                             code combinations when no data was selected.  
!                            (GEX003)
!       SXK      10/28/1999  Modified to have union from job_labor
!       PSR      08/06/2002  Modified to get UNION_CD FROM             *
!                            JOB - Upgrade 8.3                          *
!       PSR      08/27/2002  EMPL_RCD is now part of the key for 
!                                   PS_EARNINGS_BAL - Upgrade 8.3
!GEX_PY234 SXD   08/20/2007  No changes were made to sqr,sqr from 8.3 *
!                             is moved to 9.0 as it is.               *
!   GEX-MXT      03/27/2008  ORIG_HIRE_DT REPLACEMENT FROM PER_ORG_INST*
!***********************************************************************

!selection criteria
#define #x000_col_selection_criteria_a 	02
#define #x000_col_selection_criteria_b 	05

!line 1
#define #x000_col_company		02
#define #x000_col_deptid		10
#define #x000_col_emplid		20	
#define #x000_col_name			30
#define #x000_col_full_part_time	61
#define #x000_col_Union_Cd		68
#define #x000_col_orig_hire_dt	81
#define #x000_col_termination_dt	94
#define #x000_col_hrs_mtd		109	

!#define #x000_col_dept_descr	01
	
!line totals
#define #x000_col_grand_total            04
#define #x000_col_hrs_MTD_grand_total    109
#define #x000_col_totals_literal	     4
#define #x000_col_totals_literal2        20
#define #x000_col_totals_literal3	     30


#Include 'setenv.sqc'
#Include 'setup02.sqc'		!landscape

!***********************************************************************
begin-heading 9
!***********************************************************************
#debug9 show 'begin-heading'

 let $Company = rtrim($x000_Company,' ')

 #Include 'stdhdg02.sqc'

 print 'Balance Year' 		(0,60)
 print #x900_balance_year 	(0,+1)  edit 9999
 print 'Balance Qtr'		(0,+3)
 print #x900_balance_qtr 	(0,+1)  edit 999
 print 'Balance Period'		(0,+3)
 print #x900_balance_period 	(0,+1)  edit 999

 print 'Paygroup:'		(+1,1)
 print $x000_Paygroup		(0,13) 

 let $x000_temp_out =  'Sorted by ' || $X000_ORDER_BY 
 print $x000_temp_out 			(0,) center 

 print 'Deptid:'				(+1,1)
 print $x000_Deptid			(0,13)
 let $DeptID   = rtrim($x000_Deptid,' ')
 do Get-Department-Name
 print $DeptName 				(0,+1)
! print $DeptNameAbbrv			(0,+1)

 let $x000_temp_out =  'Report as of ' || $X000_REPORT_HEADING_ASOFDATE 
 print $x000_temp_out 	            (0,) center 

! let #x200_balance_year = &PCB.BALANCE_YEAR
! let #x200_balance_qtr = &PCB.BALANCE_QTR
! let #x200_balance_period = &PCB.BALANCE_PERIOD

!line 1
 print 'Full'		(+2,{#x000_col_full_part_time})

!line 2
 print 'Part'		(+1,{#x000_col_full_part_time})
 print 'Union'		(0,{#x000_col_Union_Cd})

 print 'Orig Hire'	(0,{#x000_col_orig_hire_dt})
 print 'Termination'	(0,{#x000_col_termination_dt})

!line 3
 print 'Company'		(+1,{#x000_col_company})
 print 'Deptid'		(0,{#x000_col_deptid})
 print 'Emplid'		(0,{#x000_col_emplid})
 print 'Name'		(0,{#x000_col_name})
 print 'Code'		(0,{#x000_col_Union_Cd})
 print 'Time'		(0,{#x000_col_full_part_time})
 print 'Date'		(0,{#x000_col_orig_hire_dt})
 print 'Date'		(0,{#x000_col_termination_dt})
 print '       Hrs MTD'	(0,{#x000_col_hrs_mtd})


end-heading


!***********************************************************************
begin-report
!***********************************************************************
#debug9 show 'begin-report'

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  show '$asoftoday=' $asoftoday 

  do Get-Calendar-Year-Id
  show '$Calendar_Year_Id=' $Calendar_Year_Id
  do StdAPI-Init
  do P010-Init-Variables
  do P200-Get-Job-Data
  do StdAPI-Term
  do Reset
 
  show 'Successful End of Report'

end-report

!***********************************************************************
begin-procedure P010-Init-Variables
!***********************************************************************
#debug9 show ' '
#debug9 show 'P010-Init-Variables'

  let $x000_new_page_flag = 'N'

  let $ReportID    = 'GEXPY025'
  let $ReportTitle = 'Franchise Pension Legal Aid Report'
  let $Country     = 'USA'

  show '$ReportID=' $ReportID 
  show '$ReportTitle=' $ReportTitle
  show '$ReportDate=' $ReportDate
  show '$ReportTime=' $ReportTime

!create the totals array
!	Occurence			Sub-Occurence
!					    (0)		
! (0)	Dept sub-totals		mtd_hrs 
! (1) Paygroup sub-totals	mtd_hrs		
! (2)	Company sub-totals	mtd_hrs 	
! (3)	Grand totals		mtd_hrs 		

  create-array name=total-array size=4
	field=A_hrs_mtd:number:1
	
  Let $GEXXX900_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Company_Alias  = 'J.COMPANY' 
  Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
  Let $GEXXX902_Deptid_Alias   = 'J.DEPTID'  
  Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'  
  Let $GEXXX907_Div_CD_Alias   = 'GEX_DEPT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias  = 'J.ACCT_CD'

  if $Prcs_Process_Instance = ''
	do GEXXX950-Input-Parameters
  else	
      !get parameters from single row run control record 
	Do GEXXX922-Select-Parameters
      let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
      if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
        let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
      end-if

!	get parameters from multiple row run control record
	Do GEXXX900-Select-Company-Parameters 
      Do GEXXX901-Select-Company-Paygroup-Parameters    
	Do GEXXX902-Select-Deptid-Parameters 
	Do GEXXX903-Select-Emp-Stat-Parameters          
	Do GEXXX907-Select-Div-CD-Parameters
	Do GEXXX909-Select-Acct-CD-Parameters
  end-if

      do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')

	let $X000_ORDER_BY = 'J.COMPANY, J.PAYGROUP, J.DEPTID, P.NAME'

	show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA                =' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
	show '$GEXXX900_INCLUDE_COMPANY_CRITERIA               =' $GEXXX900_INCLUDE_COMPANY_CRITERIA
	show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA      =' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA   
	show '$GEXXX902_INCLUDE_DEPTID_CRITERIA                =' $GEXXX902_INCLUDE_DEPTID_CRITERIA
	show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA              =' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
	show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA               =' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA         
      show '$X000_WHERE_SELECT_ASOFDATE                      =' $X000_WHERE_SELECT_ASOFDATE 

 	print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
	print '$Prcs_OPRID          ='                              (+1,{#x000_col_selection_criteria_b})
	print $Prcs_OPRID                                           (0,+2)
	print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
	print $PRCS_RUN_CNTL_ID                                     (0,+2)

 	print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,{#x000_col_selection_criteria_a})
	print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA 		(0,+2)
 	print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
 	print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA            (0,+2)
 	print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})
 	print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA   (0,+2)
	print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)
	print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA           (0,+2)
	print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA            (0,+2)

      print '$X000_WHERE_SELECT_ASOFDATE                         ='   (+1,{#x000_col_selection_criteria_b})
      print $X000_WHERE_SELECT_ASOFDATE                           (0,+2)
 
	print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,{#x000_col_selection_criteria_a})
 	print '$X000_ORDER_BY                                      ='   (+1,{#x000_col_selection_criteria_b})
 	print $X000_ORDER_BY 	(0,+2)

 	let #page-count = 0
	NEW-PAGE
	LET #PAGE-COUNT = 1

end-procedure


!***********************************************************************
begin-procedure P200-Get-Job-Data
!***********************************************************************
#debug9 show 'P200-Get-Job-Data'

  let $x200_Get_Job_Data_Flag = 'N'

begin-SELECT 

J.COMPANY		() on-break print=never after=Company-Change print=never
				before=Company-Before-Change
				level=01	
J.PAYGROUP 		() on-break print=never after=Paygroup-Change print=never
				before=Paygroup-Before-Change
				level=02	
J.DEPTID		() on-break print=never after=Deptid-Change print=never
				before=Deptid-Before-Change								
				level=03	
J.EMPLID
J.EMPL_RCD
J.EFFDT
J.EFFSEQ
J.JOBCODE
J.REG_TEMP
J.ACCT_CD
J.EMPL_STATUS

P.NAME
POI.ORIG_HIRE_DT		!GEX-MXT ADDED FOR ISSUE TRACKER ISSUE 375
!P.ORIG_HIRE_DT		
!PCB.PAY_END_DT         !GEX003-del
!PCB.BALANCE_YEAR       !GEX003-del
!PCB.BALANCE_QTR        !GEX003-del
!PCB.BALANCE_PERIOD     !GEX003-del
EMP.TERMINATION_DT
!SXK 10/28/1999 Begin
!EMP.UNION_CD
J.UNION_CD
!SXK 10/28/99 End
GEX_DEPT.DEPTID
GEX_DEPT.EFFDT
GEX_DEPT.SEQUENCE_NUMBER
GEX_DEPT.GEX_COMPANY_DIV_CD

  #debug7 show '*****************************'
  #debug7 show '&J.COMPANY=' &J.COMPANY
  #debug7 show '&J.DEPTID=' &J.DEPTID 
  #debug7 show '&J.PAYGROUP=' &J.PAYGROUP 
  #debug7 show '&J.EMPLID=' &J.EMPLID
  #debug7 show '&J.EMPL_RCD=' &J.EMPL_RCD
  #debug7 show '&J.EFFDT=' &J.EFFDT
  #debug7 show '&J.EFFSEQ=' &J.EFFSEQ
  #debug7 show '&J.JOBCODE=' &J.JOBCODE
  #debug7 show '&P.NAME=' &P.NAME
  !#debug7 show '&P.ORIG_HIRE_DT=' &P.ORIG_HIRE_DT
  #debug7 show '&POI.ORIG_HIRE_DT=' &POI.ORIG_HIRE_DT	!GEX-MXT ADDED FOR ISSUE TRACKER ISSUE 375
  #debug7 show '&EMP.TERMINATION_DT=' &EMP.TERMINATION_DT
  #debug7 show '&J.UNION_CD=' &J.UNION_CD  !SXK 10/28/1999 Changed from emp.union_cd

!  let #x200_balance_year = &PCB.BALANCE_YEAR         !gex003-DEL
!  let #x200_balance_qtr = &PCB.BALANCE_QTR           !gex003-DEL
!  let #x200_balance_period = &PCB.BALANCE_PERIOD     !gex003-DEL  

  let $GEXREGTP_ftpt_code = &J.REG_TEMP
  DO GEXREGTP_translate_code
  let $x000_full_part_time_code = $GEXREGTP_ftpt_code_return

!  let $x000_JobCode = &J.JOBCODE
!  do Get-Job-Code-Info

  let $Name = &P.Name
!  do Rotate-Name
!  move $Name to $HomeName

!  do P250-Get-Earnings_Detail		           !GEX001-del

  do P300-Get-Earnings-Balance

  if $x000_Get_Earnings_Bal_Flag = 'Y'             !GEX003-add
    do P800-Print-Detail-Line
    let $x200_Get_Job_Data_Flag = 'Y'
    let $x200_At_Least_One_Selected_For_CO_PAY_DEPT = 'Y'  !GEX003-add
  end-if                                           !GEX003-add

FROM  PS_JOB          	J,
      PS_PER_ORG_INST  POI,		!GEX-MXT ADDED FOR ISSUE TRACKER ISSUE 375
      PS_PERSONAL_DATA 	P,
! 	PS_PAY_CAL_BAL_ID	PCB,                !GEX003-del
	PS_EMPLOYMENT 	EMP, 
	PS_GEX_DEPT_TBL   GEX_DEPT

WHERE P.EMPLID = J.EMPLID

 	AND [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
	AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
	AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
 	AND [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
	AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]

  	AND J.EFFDT  =
    		(SELECT MAX(EFFDT)
       		FROM PS_JOB
      		WHERE EMPLID  = J.EMPLID
        		AND EMPL_RCD = J.EMPL_RCD
        		AND EFFDT    <= $X000_WHERE_SELECT_ASOFDATE)
  	AND J.EFFSEQ =
    		(SELECT MAX(EFFSEQ)
       		FROM PS_JOB
      		WHERE EMPLID  = J.EMPLID
        		AND EMPL_RCD = J.EMPL_RCD
        		AND EFFDT     = J.EFFDT)
!	AND J.COMPANY = PCB.COMPANY 
!	AND J.PAYGROUP = PCB.PAYGROUP
!	AND PCB.PAY_END_DT = (SELECT MAX(PCB1.PAY_END_DT) FROM PS_PAY_CAL_BAL_ID PCB1
!					WHERE PCB1.COMPANY = PCB.COMPANY AND 
!					PCB1.PAYGROUP = PCB.PAYGROUP AND
!					PCB1.PAY_END_DT <= $X000_WHERE_SELECT_ASOFDATE)
!	AND PCB.BALANCE_ID = $Calendar_Year_Id
        !GEX-MXT ADDED FOR ISSUE TRACKER ISSUE 375-BEGIN
        AND POI.EMPLID  = EMP.EMPLID
        AND POI.ORG_INSTANCE_ERN = EMP.EMPL_RCD
        !GEX-MXT ADDED FOR ISSUE TRACKER ISSUE 375-END
	AND J.EMPLID	= EMP.EMPLID
	AND J.EMPL_RCD	= EMP.EMPL_RCD
!SXK 10/28/1999 Begin - Modified from emp.union_cd
	AND J.UNION_CD NOT IN ('NON','SEC')

	AND J.DEPTID = GEX_DEPT.DEPTID 
	AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
	AND GEX_DEPT.EFFDT = (SELECT MAX(GEX_DEPT1.EFFDT) FROM PS_GEX_DEPT_TBL GEX_DEPT1
			WHERE GEX_DEPT1.DEPTID = GEX_DEPT.DEPTID AND
				GEX_DEPT1.EFFDT <= $X000_WHERE_SELECT_ASOFDATE) 
	AND GEX_DEPT.SEQUENCE_NUMBER = (SELECT MAX(GEX_DEPT2.SEQUENCE_NUMBER) FROM PS_GEX_DEPT_TBL GEX_DEPT2
			WHERE GEX_DEPT2.DEPTID = GEX_DEPT.DEPTID AND
				GEX_DEPT2.EFFDT = GEX_DEPT.EFFDT)

ORDER BY [$X000_ORDER_BY]
					
end-SELECT

  
 if $x200_Get_Job_Data_Flag = 'N'
	print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) CENTER
 else
	!get and print grand totals
 	get #x000_HRS_MTD from Total-Array(3) A_Hrs_Mtd(0) 

 	print 'Grand' 	  (+2,{#x000_col_totals_literal})
      let $x000_out = 'Total'
      print $x000_out  	  (0,{#x000_col_totals_literal3})		
		
 	let #x000_temp_col = {#x000_col_HRS_MTD_grand_total} - 0
 	print #x000_HRS_MTD (0,#x000_temp_col) EDIT 999,999,990.00
 end-if

end-procedure


!***********************************************************************
begin-procedure P250-Get-Earnings_Detail
!***********************************************************************
#debug9 show 'P250-Get-Earnings_Detail'

 let $x000_Get_Earnings_Detail = 'N'

 #debug8 show '$x000_SELECT_ERNCD=' $x000_SELECT_ERNCD

begin-SELECT
E.COMPANY
E.PAYGROUP
E.PAY_END_DT
E.OFF_CYCLE
E.PAGE_NUM
E.LINE_NUM
E.ADDL_NBR
OE.ERNCD

 #DEBUG7 SHOW '&E.COMPANY=' &E.COMPANY 
 #DEBUG7 SHOW '&E.PAYGROUP=' &E.PAYGROUP 
 #DEBUG7 SHOW '&E.PAY_END_DT=' &E.PAY_END_DT
 #DEBUG7 SHOW '&E.OFF_CYCLE=' &E.OFF_CYCLE
 #DEBUG7 SHOW '&E.PAGE_NUM=' &E.PAGE_NUM
 #DEBUG7 SHOW '&E.LINE_NUM=' &E.LINE_NUM
 #DEBUG7 SHOW '&E.ADDL_NBR=' &E.ADDL_NBR

 let $x000_Get_Earnings_Detail = 'Y'
			
SUM(OE.OTH_HRS) &OE_OTH_HRS
SUM(OE.OTH_PAY) &OE_OTH_PAY
!SUM(OE.OTH_EARNS) &OE_OTH_EARNS

FROM  PS_PAY_EARNINGS E,
	PS_PAY_OTH_EARNS OE

WHERE E.COMPANY    = &J.Company
  AND E.PAYGROUP   = &J.PayGroup
  AND E.PAY_END_DT = &PCB.Pay_End_Dt
  AND E.EMPLID	 = &J.EMPLID
  AND E.EMPL_RCD	 = &J.EMPL_RCD
  AND E.COMPANY    = OE.Company
  AND E.PAYGROUP   = OE.PayGroup
  AND E.PAY_END_DT = OE.Pay_End_Dt
  AND E.OFF_CYCLE  = OE.Off_Cycle
  AND E.PAGE_NUM      = OE.PAGE_NUM
  AND E.LINE_NUM      = OE.LINE_NUM
  AND E.ADDL_NBR      = OE.ADDL_NBR
  AND OE.ERNCD     = $x000_SELECT_ERNCD
!  AND E.SINGLE_CHECK_USE IN ('C', 'N')

GROUP BY 	E.COMPANY, E.PAYGROUP, E.PAY_END_DT, E.OFF_CYCLE,
		E.PAGE_NUM, E.LINE_NUM, E.ADDL_NBR, OE.ERNCD


end-SELECT

end-procedure


!***********************************************************************
begin-procedure P300-Get-Earnings-Balance
!***********************************************************************
#debug9 show 'P300-Get-Earnings-Balance'

!get the mtd balance maintained in the special accumulator

  let $x000_Get_Earnings_Bal_Flag = 'N'

begin-SELECT
EB.EMPLID
EB.COMPANY
EB.BALANCE_ID
EB.BALANCE_YEAR
EB.BALANCE_QTR
EB.BALANCE_PERIOD
EB.ERNCD

SUM(EB.HRS_MTD) &EB_HRS_MTD
 
 #DEBUG8 show '&EB.EMPLID=' &EB.EMPLID ' &EB.COMPANY=' &EB.COMPANY  ' &EB.BALANCE_ID=' &EB.BALANCE_ID
 #DEBUG8 show '&EB.BALANCE_YEAR=' &EB.BALANCE_YEAR ' &EB.BALANCE_QTR=' &EB.BALANCE_QTR 
 #DEBUG8 show '&EB.BALANCE_PERIOD=' &EB.BALANCE_PERIOD ' &EB.ERNCD=' &EB.ERNCD

  let $x000_Get_Earnings_Bal_Flag = 'Y' 

FROM  PS_EARNINGS_BAL EB
WHERE EB.EMPLID        = &J.EmplID
  AND EB.COMPANY       = &J.Company
  AND EB.BALANCE_ID    = $Calendar_Year_Id
  AND EB.SPCL_BALANCE  = 'Y'

  AND EB.ERNCD	     = 'WK1'
  And eb.empl_rcd	      = &j.empl_rcd
  AND EB.BALANCE_YEAR  = #x900_balance_year           !added GEX003

!  AND EB.BALANCE_YEAR  =                             !deleted GEX003
!	(SELECT MAX(EB1.BALANCE_YEAR)
!      FROM PS_EARNINGS_BAL EB1
!      WHERE EB1.EMPLID        = EB.EMPLID
!        AND EB1.COMPANY       = EB.COMPANY
!        AND EB1.BALANCE_ID    = EB.BALANCE_ID
!        AND EB1.SPCL_BALANCE  = EB.SPCL_BALANCE
!        AND EB1.ERNCD         = EB.ERNCD
!        AND EB1.BALANCE_YEAR  <= &PCB.BALANCE_YEAR)
!  AND EB.BALANCE_QTR 	=
!	(SELECT MAX(EB2.BALANCE_QTR)
!      FROM PS_EARNINGS_BAL EB2
!      WHERE EB2.EMPLID        = EB.EMPLID
!        AND EB2.COMPANY       = EB.COMPANY
!        AND EB2.BALANCE_ID    = EB.BALANCE_ID
!        AND EB2.BALANCE_YEAR  = EB.BALANCE_YEAR
!        AND EB2.SPCL_BALANCE  = EB.SPCL_BALANCE
!        AND EB2.ERNCD         = EB.ERNCD)

   AND EB.BALANCE_PERIOD       = #x900_balance_period    !added GEX003     

!  AND EB.BALANCE_PERIOD       =                         !deleted GEX003
!    	(SELECT MAX(EB3.BALANCE_PERIOD)
!      FROM PS_EARNINGS_BAL EB3
!      WHERE EB3.EMPLID        = EB.EMPLID
!        AND EB3.COMPANY       = EB.COMPANY
!        AND EB3.BALANCE_ID    = EB.BALANCE_ID
!        AND EB3.BALANCE_YEAR  = EB.BALANCE_YEAR
!        AND EB3.SPCL_BALANCE  = EB.SPCL_BALANCE
!        AND EB3.ERNCD         = EB.ERNCD
!        AND EB3.BALANCE_PERIOD = EB.BALANCE_PERIOD)

GROUP BY 	EB.EMPLID, EB.COMPANY, EB.BALANCE_ID, EB.BALANCE_YEAR, 
		EB.BALANCE_QTR, EB.BALANCE_PERIOD, EB.ERNCD


end-SELECT

end-procedure


!***********************************************************************
begin-procedure P800-Print-Detail-Line
!***********************************************************************
#debug9 show 'P800-Print-Detail-Line'

  	print &J.COMPANY			(+1,{#x000_col_company})
	print &J.DEPTID			(0,{#x000_col_deptid})
	print &J.EMPLID         	(0,{#x000_col_emplid})
 	print &P.NAME       		(0,{#x000_col_name},30)
 	print $x000_full_part_time_code (0,{#x000_col_full_part_time})
!SXK 10/28/99 Changed from emp.union_cd
 	print &J.UNION_CD		(0,{#x000_col_Union_Cd})	 
 	!print &P.ORIG_HIRE_DT		(0,{#x000_col_orig_hire_dt})	
 	print &POI.ORIG_HIRE_DT		(0,{#x000_col_orig_hire_dt})	!GEX-MXT added FOR ORIG_HIRE_DT ISSUE 375
 	print &EMP.TERMINATION_DT 	(0,{#x000_col_termination_dt})
 	print &EB_HRS_MTD			(0,{#x000_col_hrs_mtd}) EDIT 999,999,990.00

!add to dept totals
   array-add &EB_HRS_MTD to Total-Array(0) A_Hrs_Mtd(0) 
!add to paygroup totals
   array-add &EB_HRS_MTD to Total-Array(1) A_Hrs_Mtd(0) 
!add to company totals
   array-add &EB_HRS_MTD to Total-Array(2) A_Hrs_Mtd(0) 
!add to grand totals
   array-add &EB_HRS_MTD to Total-Array(3) A_Hrs_Mtd(0)

end-procedure


!*****************************************
begin-procedure Company-Before-Change
!*****************************************
#debug9 show 'Company-Before-Change'			
	
 if  $x000_new_page_flag = 'Y'
	new-page
	let $x000_new_page_flag = 'N'
 end-if		

 move &J.COMPANY  to $x000_Company 

 DO P900-Get-Balance-Period-And-Year                    !gex003-ADD

 let $x200_At_Least_One_Selected_For_CO_PAY_DEPT = 'N'  !GEX003-add

end-procedure


!*****************************************
begin-procedure Paygroup-Before-Change
!*****************************************
#debug9 show 'Paygroup-Before-Change'			
	
 if  $x000_new_page_flag = 'Y'
	new-page
	let $x000_new_page_flag = 'N'
 end-if		

 move &J.PAYGROUP  to $x000_Paygroup

 DO P900-Get-Balance-Period-And-Year                   !gex003-ADD

 let $x200_At_Least_One_Selected_For_CO_PAY_DEPT = 'N'  !GEX003-add

end-procedure


!*****************************************
begin-procedure Deptid-Before-Change
!*****************************************
#debug9 show 'Deptid-Before-Change'			
	
 if  $x000_new_page_flag = 'Y'
	new-page
	let $x000_new_page_flag = 'N'
 end-if

 move &J.DEPTID to $x000_Deptid

 let $x200_At_Least_One_Selected_For_CO_PAY_DEPT = 'N'  !GEX003-add

end-procedure


!*****************************************
begin-procedure Company-Change
!*****************************************
#debug9 show 'Company-Change'
#debug8 show '$x000_Company=' $x000_Company


 if $x200_At_Least_One_Selected_For_CO_PAY_DEPT = 'Y'  !GEX003-add

  !get and print company totals
   get #x000_HRS_MTD from Total-Array(2) A_Hrs_Mtd(0) 

   let $x000_out = 'Company' 
   print $x000_out  	(+2,{#x000_col_totals_literal})
   print $x000_Company 	(0,{#x000_col_totals_literal2})
   let $x000_out = 'Total'
   print $x000_out  	(0,{#x000_col_totals_literal3})		

   let #x000_temp_col = {#x000_col_HRS_MTD_grand_total} - 0
   print #x000_HRS_MTD (0,#x000_temp_col) EDIT 999,999,990.00  

   let $x000_new_page_flag = 'Y'

 end-if                                                 !GEX003-add

!reinitialize the company array totals
   put 0 into Total-Array(2) A_Hrs_Mtd(0) 
 


end-procedure


!*****************************************
begin-procedure Paygroup-Change
!*****************************************
#debug9 show 'Paygroup-Change'
#debug8 show '$x000_Paygroup=' $x000_Paygroup

 if $x200_At_Least_One_Selected_For_CO_PAY_DEPT = 'Y'  !GEX003-add

  !get and print paygroup totals
   get #x000_HRS_MTD from Total-Array(1) A_Hrs_Mtd(0) 

   let $x000_out = 'Paygroup'
   print $x000_out        (+2,{#x000_col_totals_literal})
   print $x000_Paygroup 	(0,{#x000_col_totals_literal2})
   let $x000_out = 'Total'
   print $x000_out  	(0,{#x000_col_totals_literal3})		

   let #x000_temp_col = {#x000_col_HRS_MTD_grand_total} - 0
   print #x000_HRS_MTD (0,#x000_temp_col) EDIT 999,999,990.00  

   let $x000_new_page_flag = 'Y'

 end-if                                                !GEX003-add

 !reinitialize the company array totals
  put 0 into Total-Array(1) A_Hrs_Mtd(0) 
 

end-procedure


!*****************************************
begin-procedure Deptid-Change
!*****************************************
#debug9 show 'Deptid-Change'
#debug8 show '$x000_Deptid=' $x000_Deptid

 if $x200_At_Least_One_Selected_For_CO_PAY_DEPT = 'Y'   !GEX003-add

  !get and print dept totals
   get #x000_HRS_MTD from Total-Array(0) A_Hrs_Mtd(0)

   let $x000_out = 'Dept'
   print $x000_out        (+2,{#x000_col_totals_literal})
   print $x000_Deptid 	(0,{#x000_col_totals_literal2})
   let $x000_out = 'Total'
   print $x000_out  	(0,{#x000_col_totals_literal3})		
	
   let #x000_temp_col = {#x000_col_HRS_MTD_grand_total} - 0
   print #x000_HRS_MTD (0,#x000_temp_col) EDIT 999,999,990.00

   let $x000_new_page_flag = 'Y'

 end-if                                                !GEX003-add

!reinitialize the dept array totals
 put 0 into Total-Array(0) A_Hrs_Mtd(0)


end-procedure

!*****************************************
begin-procedure Get-Job-Code-Info
!*****************************************
 #debug9 show 'Get-Job-Code-Info'
 #debug8 show '$x000_JobCode=' $x000_JobCode

    move '' to $JobTitle
    move '' to $JobTitleAbbrv
    move '' to $x000_Union_Cd

  if rtrim($x000_JobCode,' ') = ''
    show '$x000_JobCode is null, no row returned'
    goto Get-Job-Code-Info-Exit
  end-if   

begin-SELECT
JT.DESCR
JT.DESCRSHORT
JT.UNION_CD

  let $x000_JobTitle  = rtrim(&JT.Descr,' ')
  let $x000_JobTitleAbbrv  = rtrim(&JT.DescrShort,' ')
  let $x000_Union_Cd = rtrim(&JT.UNION_CD,' ')

FROM  PS_JOBCODE_TBL JT

WHERE JT.JOBCODE = $x000_JobCode
  AND JT.EFFDT =
      (SELECT MAX(JT1.EFFDT)
       FROM   PS_JOBCODE_TBL JT1
       WHERE  JT1.JOBCODE = JT.JOBCODE 
         AND  JT1.EFFDT  <= $X000_WHERE_SELECT_ASOFDATE)
end-SELECT

Get-Job-Code-Info-Exit:

end-procedure



!************************************ GEX003-add entire paragraph
begin-procedure P900-Get-Balance-Period-And-Year
!*****************************************
 #debug9 show 'P900-Get-Balance-Period-And-Year'

!This procedure will be read for every company, paygoup change
!to retrieve the BALANCE_YEAR and BALANCE_PERIOD.

Begin-Select 
PCB.PAY_END_DT         
PCB.BALANCE_YEAR
PCB.BALANCE_QTR              
PCB.BALANCE_PERIOD
   
  let #x900_balance_year = &PCB.BALANCE_YEAR         
  let #x900_balance_qtr = &PCB.BALANCE_QTR           
  let #x900_balance_period = &PCB.BALANCE_PERIOD       

FROM 	PS_PAY_CAL_BAL_ID	PCB             

WHERE  PCB.COMPANY = $x000_Company 
   AND PCB.PAYGROUP = $x000_Paygroup
   AND PCB.PAY_END_DT = (SELECT MAX(PCB1.PAY_END_DT) FROM PS_PAY_CAL_BAL_ID PCB1
					WHERE PCB1.COMPANY = PCB.COMPANY  AND 
					PCB1.PAYGROUP = PCB.PAYGROUP      AND
                                        PCB1.BALANCE_ID = PCB.BALANCE_ID  AND
					PCB1.PAY_END_DT <= $X000_WHERE_SELECT_ASOFDATE)
	AND PCB.BALANCE_ID = $Calendar_Year_Id

End-Select
end-procedure



#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'setenv.sqc'    !set database environment
#include 'getcodta.sqc'  !Get-Company_Data procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'readxlat.sqc'  !Read-Translate-Table procedure
#include 'datetime.sqc'  !general date and time formatting procedures
#include 'number.sqc'    !general number formatting procedures
#include 'stdapi.sqc'    !StdAPI-Init procedure
#include 'reset.sqc'     !Reset printer procedure
#include 'getbalid.sqc'  !Get-Calendar-Year-Id
#include 'gexregtp.sqc'	 !Get full-part time code

#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls




