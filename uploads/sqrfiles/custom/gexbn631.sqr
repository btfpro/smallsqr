!***********************************************************************
! GEXBN631:              UPMC Health Plan                              *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXBN631:              UPMC Health Plan                              *
!                                                                      *
! Narrative:            This program creates a file having data of     *
!                       employees and their dependents enrolled  in    *
!	                   Medical Plan with UPMC                      *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                                                                      *
! SQL Tables:           PS_JOB                                         *
!                       PS_HEALTH_BENEFIT                              *
!                       PS_PERSONAL_DATA                               *
!                       PS_PERS_NID                                    *
!			PS_BENEF_PLAN_TBL	                       *
!                       PS_DEPENDENT_BENEF                             *
!                       PS_DEP_BENEF_NID                               *
!                                                                      *
!                                                                      *
! Written by:           Manjiri Deo		                       *
!                                                                      *
! Normally Run:         Weekly                                         *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! VENDAXG   04/06/2009   Changes for the ITG#54210- Added logic to send*
!			 Termination date of the employees.            *
! VENDKXY   03/15/2010   Done the changes for Sct 13898046	       *
! ISDVMZA   03/19/2013   Fix the Term date of dependents. 	       *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)

Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  !Vendaxg Added For ITG#54210 on 04/06/2009 - Being
  Do Get-Input-Plan-Type	!Vendaxg Added For ITG#54210 on 04/06/2009
  Do Delete-Prior
  Do Move-Curr-To-Prior
  Do Delete-Current
  !Vendaxg Added For ITG#54210 on 04/06/2009 - End
  Do P200-Main-Process
  Do P250-Get-Cancelled-Record	!Vendaxg Added For ITG#54210 on 04/06/2009
  Do P260-Find-Header-Footer-Count	!Vendaxg Added For ITG#54210 on 04/06/2009
  Do P265-Write-Header-Record !Vendaxg Added For ITG#54210 on 04/06/2009
  Do P270-Write-Into-File !Vendaxg Added For ITG#54210 on 04/06/2009
  Do P300-Finalization

End-Report

!****************************************************************************
Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID    = 'GEXBN631'
  Let $ReportTitle  = 'INTERFACE FILE FOR UPMC HEALTH PLAN'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime
  Let $GEXXX912_Plan_Type_Alias_Hdr       = 'WHB.PLAN_TYPE'
  Let $GEXXX912_Benefit_Plan_Alias_Hdr    = 'WHB.BENEFIT_PLAN'
  !Vendaxg Modified For ITG#54210 on 04/06/2009 - Begin
  !Let $GEXXX912_Plan_Type_Alias       = 'HB.PLAN_TYPE'
  Let $GEXXX912_Plan_Type_Alias       = 'HLTHBEN.PLAN_TYPE'
  !Let $GEXXX912_Benefit_Plan_Alias    = 'HB.BENEFIT_PLAN'
  Let $GEXXX912_Benefit_Plan_Alias    = 'HLTHBEN.BENEFIT_PLAN'
  !Vendaxg Modified For ITG#54210 on 04/06/2009 - End

  Do Select-Benefit-Plan-Parameters_Hdr
  Show 'Call Select-Benefit-Plan-Parameters'

  !If $prcs_process_instance = ''
  !   Do P110-SQRW-Run-Controls
  !Else
     Do P120-Process-Scheduler-Run-Controls
  !End-if
    ! Do P130-Print-Cover-Page
  Show '$AsOfDate                                           = ' $AsOfDate
  Show '$GEXXX912_INCLUDE_BENEFIT_PROGRAM_CRITERIA :'    $GEXXX912_INCLUDE_BENEFIT_PROGRAM_CRITERIA
  Show '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA : '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA
  Show 'GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA ; '$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA

  Let $File_Dt = edit($AsOfDate,'YYYYMMDD')
  Do Open-File
  Show 'Call Open-File'
  !Do Init-Variables
  !Do Init-Dep-Variables
  Let #Total_Recs = 0
  !Do Write-Header-Record  !Vendaxg Commented For ITG#54210 on 04/06/2009
  !Show 'Call Write-Header-Record'

  Do Select-Benefit-Plan-Parameters
End-Procedure P100-Initialization

!****************************************************************************
Begin-Procedure P110-SQRW-Run-Controls
#debug9 Show 'P110-SQRW-Run-Controls'
  Do Ask-As-Of-Date
  Let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate

End-Procedure

!****************************************************************************
Begin-Procedure P120-Process-Scheduler-Run-Controls
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXRCBN1-SELECT-PARAMETERS
  Do GEXXX912-Select-Benefit-Plan-Parameters
  Let $AsOfDate = &GEX_RC_BEN.AsOfDate
  SHOW '&GEX_RC_BEN.AsOfDate: ' &GEX_RC_BEN.AsOfDate
  If ltrim(Rtrim(&GEX_RC_BEN.AsOfDate, ' '),' ') = ''
     Let $AsOfDate = $AsOfToday
     SHOW '$AsOfDate: ' $AsOfToday
  End-If
  Show '$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = ' $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
End-Procedure

!*********************************************************************

Begin-Procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'

	Let $X000_Order_By = 'NAME'


  Print $ReportTitle						(+2,)  center
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA           ='   (+2,5)
  Print $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA                 (0,+2)


  Print 'As Of Date :'                      (+2,5)
  Print $AsOfDate       		    (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'   (+5,2)
  Print $X000_Order_By                      (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE

End-Procedure P130-Print-Cover-Page

!*******************************************************************************************

Begin-Procedure P200-Main-Process
!Show 'Benefit_plan in main process =' $WHR_Benefit_Plan
Do Init-Variables

Begin-SELECT
PD.EMPLID
HB.EMPL_RCD
PD.FIRST_NAME
PD.LAST_NAME
PD.MIDDLE_NAME
PD.ADDRESS1
PD.ADDRESS2
PD.STATE
PD.CITY
PD.POSTAL
PD.SEX
PD.BIRTHDATE
HB.PLAN_TYPE
HB.BENEFIT_PLAN
HB.EFFDT
HB.COVERAGE_BEGIN_DT
HB.COVERAGE_END_DT
HB.COVERAGE_ELECT
!BP.GROUP_NBR	!Vendaxg Commented For ITG#54210 on 04/06/2009

	Do Init-Dep-Variables
	Let $Data-Found-Flag = 'Y'
	!Show 'In Main Process'
	Let $Emplid = &PD.EMPLID
	Let $Empl_Rcd = &HB.EMPL_RCD
	Let $First_Name1 = Ltrim(RTrim(&PD.FIRST_NAME,' '),' ')

	Let $Last_Name1 =  Ltrim(RTrim(&PD.LAST_NAME,' '),' ')
		Let $Last_Name = upper($Last_Name1)
	Let $Middle_Initial =  substr(&PD.MIDDLE_NAME,1,1)
		Let $First_Name = upper($First_Name1) || ' ' || upper($Middle_Initial)
	Let $City =  Ltrim(RTrim(&PD.CITY,' '),' ')
	Let $Address1 =  Ltrim(RTrim(&PD.ADDRESS1,' '),' ')
	Let $Address2 =  Ltrim(RTrim(&PD.ADDRESS2,' '),' ')
	Let $State =  Ltrim(RTrim(&PD.STATE,' '),' ')
	Let $Postal =  Ltrim(RTrim(&PD.POSTAL,' '),' ')
	Let $Gender = LTrim(RTrim(&PD.SEX,' '),' ')
	Let $Birthdate = Edit(&PD.BIRTHDATE,'YYYYMMDD')
	Let $Coverage_Begin_Dt = Edit(&HB.COVERAGE_BEGIN_DT,'YYYYMMDD')
	!Let $Division_Nbr = (&BP.GROUP_NBR)
	!Vendaxg Commented For ITG#54210 on 04/06/2009 - Begin
	! Need to move this code somewhere else
	!Let $Division_Nbr_underscore = Substr(&BP.GROUP_NBR,7,1)

	!If ($Division_Nbr_underscore = '-')
	!	Let $Division_Nbr_1 = Substr(&BP.GROUP_NBR,1,6)
	!	Let $Division_Nbr_2 = Substr(&BP.GROUP_NBR,8,3)
	!	String $Division_Nbr_1 $Division_Nbr_2 by '' into $Division_Nbr
	!Else
	!	Let $Division_Nbr = '000' || &BP.GROUP_NBR
	!End-If
	!Vendaxg Commented For ITG#54210 on 04/06/2009 - End

	Let $Effdt = Edit(&HB.EFFDT,'YYYYMMDD')
	Let $Plan_Type = LTrim(RTrim(&HB.PLAN_TYPE,' '),' ')
	Let $Benefit_Plan = LTrim(RTrim(&HB.BENEFIT_PLAN,' '),' ')
	Let $Coverage_End_Dt = Edit(&HB.COVERAGE_END_DT,'YYYYMMDD')

	Let $Coverage_Elect = Ltrim(Rtrim(&HB.COVERAGE_ELECT,' '),' ') 	!Vendaxg Added For ITG#54210 on 04/06/2009

	!Show 'Main-Process : EMPLID =' $Emplid
	!Show 'PLAN TYPE =' $Plan_Type
	!Show 'BENEFIT PLAN = '$Benefit_Plan
	!show 'Group number = ' &BP.GROUP_NBR
	!Show '$Division Number -- ' $Division_Nbr
	!Vendaxg Commented For ITG#54210 on 04/06/2009 - Begin
	!If (&HB.COVERAGE_ELECT = 'T')
	!	Let $Termination_Dt = $Coverage_End_Dt
	!End-If
	!Vendaxg Commented For ITG#54210 on 04/06/2009 - End
		!Show 'Call P210-Get-Emplid-NID'
		!Do P210-Get-Emplid-NID  !Vendaxg Commented For ITG#54210 on 04/06/2009
		!Show 'Call Write-Empl-Record'
		!Do Write-Empl-Record !Vendaxg Commented For ITG#54210 on 04/06/2009
		!Show 'Call P220-Check-Dependent'
		!Do P220-Check-Dependent  !Vendaxg Commented For ITG#54210 on 04/06/2009

		!Vendaxg Added For ITG#54210 on 04/06/2009 - Begin
		Show 'Emplid : '$Emplid ' Plan_Type : '$Plan_Type '  Benefit Plan : '$Benefit_Plan ' Coverage Elect :  '$Coverage_Elect
		If $Coverage_Elect = 'E'
			Let $GEXXX912_INCLUDE_EFFDT_CRITERIA = 'HLTHBEN.EFFDT = ' ||'''' ||&HB.EFFDT || ''''
			Show 'GEXXX912_INCLUDE_EFFDT_CRITERIA : '$GEXXX912_INCLUDE_EFFDT_CRITERIA
		Else
			Let $GEXXX912_INCLUDE_EFFDT_CRITERIA = 'HLTHBEN.EFFDT = (SELECT MAX(HB1.EFFDT) FROM PS_HEALTH_BENEFIT HB1 ' ||
		        ' WHERE HB1.EMPLID = HLTHBEN.EMPLID AND HB1.EMPL_RCD = HLTHBEN.EMPL_RCD ' ||
		        ' AND HB1.COBRA_EVENT_ID = HLTHBEN.COBRA_EVENT_ID AND HB1.PLAN_TYPE = HLTHBEN.PLAN_TYPE ' ||
			' AND HB1.BENEFIT_NBR = HLTHBEN.BENEFIT_NBR AND HB1.EFFDT    < ' || '''' ||&HB.EFFDT || '''' || ')'
		 	Show 'GEXXX912_INCLUDE_EFFDT_CRITERIA : '$GEXXX912_INCLUDE_EFFDT_CRITERIA
		End-if
		Do Check-Exist-in-Plan
		If $Correct_Ben_Plan = 'Y'
			If $Coverage_Elect <> 'E'
				Let $Termination_Dt = $Coverage_Begin_Dt
				Let $Coverage_Begin_Dt = $Terminate_Coverage_Begin_Dt
			Else
				Let $Termination_Dt = ''
			End-if
			Do P210-Get-Emplid-NID
			If $Plan_Type = '10'
			    show '$Termination_Dt' $Termination_Dt
				Do Write-Empl-Record
			End-if
			Do P220-Check-Dependent

		End-If
		!Vendaxg Added For ITG#54210 on 04/06/2009 - End
		Show '***********************************************************************************************'

!Vendaxg Commented For ITG#54210 on 04/06/2009 - Begin
!FROM PS_PERSONAL_DATA PD,PS_HEALTH_BENEFIT HB,PS_BENEF_PLAN_TBL BP
FROM PS_PERSONAL_DATA PD,PS_HEALTH_BENEFIT HB
!Vendaxg Commented For ITG#54210 on 04/06/2009 - End
WHERE PD.EMPLID = HB.EMPLID
AND HB.COBRA_EVENT_ID = '0'
AND HB.BENEFIT_NBR = '0'
!and pd.emplid='159427412'	!Vendkxy for testing
!AND HB.PLAN_TYPE = $WHR_Plan_Type
AND HB.EFFDT = (SELECT MAX(HB1.EFFDT) FROM PS_HEALTH_BENEFIT HB1
				WHERE HB1.EMPLID = HB.EMPLID
				AND HB1.EMPL_RCD = HB.EMPL_RCD
				AND HB1.COBRA_EVENT_ID = HB.COBRA_EVENT_ID
				AND HB1.PLAN_TYPE = HB.PLAN_TYPE
				AND HB1.BENEFIT_NBR = HB.BENEFIT_NBR
				AND HB1.EFFDT    <= $AsofDate)
!Vendaxg Commented For ITG#54210 on 04/06/2009 - Begin
!AND BP.PLAN_TYPE = HB.PLAN_TYPE
!AND BP.BENEFIT_PLAN = HB.BENEFIT_PLAN
!AND BP.EFFDT = (SELECT MAX(BP1.EFFDT) FROM PS_BENEF_PLAN_TBL BP1
!				WHERE BP1.PLAN_TYPE = BP.PLAN_TYPE
!				AND BP1.BENEFIT_PLAN = BP.BENEFAN
!				AND BP1.EFFDT <= $AsofDate)
!Vendaxg Commented For ITG#54210 on 04/06/2009 - End
!AND NEFIT_PLAN = $WHR_Benefit_Plan
!AND  [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]				!Vendaxg Commented For ITG#54210 on 04/06/2009
AND [$RC_Plan_Type]
ORDER BY PD.EMPLID,PD.NAME

End-Select

End-procedure P200-Main-Process

!*******************************************************************************************

Begin-Procedure P220-Check-Dependent

show '$Emplid' $Emplid
show '&HB.EMPL_RCD' &HB.EMPL_RCD
show '$Plan_Type' $Plan_Type
show '&HB.EFFDT' &HB.EFFDT

Begin-Select
HD.EMPLID
HD.PLAN_TYPE 		!Vendaxg Added For ITG#54210 on 04/06/2009
HD.DEPENDENT_BENEF

	Let $Dep_Ben = &HD.DEPENDENT_BENEF
	Let $Dependent_found = 'Y'
	Let $Dep_Plan_Type = Ltrim(Rtrim(&HD.PLAN_TYPE,' '),' ') !Vendaxg Added For ITG#54210 on 04/06/2009
	Let $SEQ_NUN = $Dep_Ben		!Vendaxg Added For ITG#54210 on 04/06/2009
	Do P221-Get-Dependent-NID
	!Do P222-Get-Dependent-Data
	!Show 'Call P222-Get-Dependent-Data'
	!Do Write-Dep-Record
	!Show 'Call Write-Dep-Record'

FROM PS_HEALTH_DEPENDNT HD
WHERE  HD.EMPLID = $Emplid
AND HD.EMPL_RCD = &HB.EMPL_RCD
AND HD.COBRA_EVENT_ID = '0'
AND HD.BENEFIT_NBR = '0'
AND HD.PLAN_TYPE = $Plan_Type
AND HD.EFFDT = (SELECT MAX(HD1.EFFDT) FROM PS_HEALTH_DEPENDNT HD1
		WHERE HD1.EMPLID = HD.EMPLID
		AND HD1.EMPL_RCD = HD.EMPL_RCD
		AND HD1.COBRA_EVENT_ID = HD.COBRA_EVENT_ID
		AND HD1.BENEFIT_NBR = HD.BENEFIT_NBR
		AND HD1.PLAN_TYPE = HD.PLAN_TYPE
		AND HD1.EFFDT >= &HB.EFFDT) !vendkxy
		! AND HD1.EFFDT <= &HB.EFFDT) !vendkxy
!AND PLAN_TYPE IN ('10','15')
End-Select

End-Procedure P220-Check-Dependent

!*******************************************************************************************

Begin-Procedure P222-Get-Dependent-Data
Begin-Select
DB.FIRST_NAME
DB.LAST_NAME
DB.MIDDLE_NAME
DB.RELATIONSHIP
DB.SEX
DB.BIRTHDATE
DB.ADDRESS1
DB.ADDRESS2
DB.STATE
DB.POSTAL
DB.CITY


	Let $Dep_First_Name1 = LTrim(RTrim(&DB.FIRST_NAME,' '),' ')
	Let $Dep_Last_Name1 = LTrim(RTrim(&DB.LAST_NAME,' '),' ')
		Let $Dep_Last_Name = upper($Dep_Last_Name1)
	Let $Dep_Middle_Initial = substr(&DB.MIDDLE_NAME,1,1)
		Let $Dep_First_Name = upper($Dep_First_Name1)||' '|| upper($Dep_Middle_Initial)
	Let $Dep_Relationship = &DB.RELATIONSHIP
	Let $Dep_Gender = &DB.SEX
	Let $Dep_Birthdate = Edit(&DB.BIRTHDATE,'YYYYMMDD')
	Let $Dep_Address1 = LTrim(RTrim(&DB.ADDRESS1,' '),' ')
	Let $Dep_Address2 = LTrim(RTrim(&DB.ADDRESS2,' '),' ')
	Let $Dep_State = LTrim(RTrim(&DB.STATE,' '),' ')
	Let $Dep_Postal = LTrim(RTrim(&DB.POSTAL,' '),' ')
	Let $Dep_City = LTrim(RTrim(&DB.CITY,' '),' ')


		If $Dep_Relationship = 'SB'
			Let $Dep_Relationship = 'SB'
			Add 1 to #Total_Contract_Holders

		Else
		   If $Dep_Relationship = 'SP'
		   	Let $Dep_Relationship = 'SP'
			Add 1 to #Total_Dependents

		   Else
		      If $Dep_Relationship = 'NA'
		      	Let $Dep_Relationship = 'DP'
			Add 1 to #Total_Dependents

		      Else
		      	Let $Dep_Relationship = 'DE'
			Add 1 to #Total_Dependents

		      End-If
		   End-If
		End-If


	Do Write-Dep-Record

FROM PS_DEPENDENT_BENEF DB
WHERE DB.EMPLID = $Emplid
AND DB.DEPENDENT_BENEF = $Dep_Ben
End-Select
End-Procedure P222-Get-Dependent-Data

!*******************************************************************************************

Begin-Procedure P210-Get-Emplid-NID

Begin-Select
PN.NATIONAL_ID

	Let $Emplid_NID = &PN.NATIONAL_ID

FROM PS_PERS_NID PN
WHERE PN.EMPLID = $Emplid

End-Select

End-Procedure P210-Get-Emplid-NID

!*******************************************************************************************

Begin-Procedure P221-Get-Dependent-NID
Let $Dependent_NID = ' '
Begin-Select
DBN.NATIONAL_ID

	Let $Dependent_NID = &DBN.NATIONAL_ID
	!If $Dependent_NID <> ''
	!	Show 'Call P222-Get-Dependent-Data FROM P221-Get-Dependent-NID'
		!Do P222-Get-Dependent-Data !Vendaxg Commented on 04/16/2009
	!End-If

FROM PS_DEP_BENEF_NID DBN
WHERE DBN.EMPLID = $Emplid
AND DBN.DEPENDENT_BENEF = $Dep_Ben
End-Select

   Do P222-Get-Dependent-Data !Added Commented on 04/16/2009

End-Procedure P221-Get-Dependent-NID

!*******************************************************************************************
!Vendaxg Commented For ITG#54210 on 04/06/2009 - Begin
!Begin-Procedure Write-Header-Record
!
!!Show 'in HEADER  [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA-HDR] ==' $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA_HDR
!
!BEGIN-SELECT
!WHB.EMPLID
!WHB.EMPL_RCD
!WHB.PLAN_TYPE
!WHB.BENEFIT_PLAN
!WHB.EFFDT
!
!	Let $WHR_Emplid = &WHB.EMPLID
!	Let $WHR_Empl_Rcd = &WHB.EMPL_RCD
!	Let $WHR_Plan_Type = &WHB.PLAN_TYPE
!	Let $WHR_Benefit_Plan = &WHB.BENEFIT_PLAN
!	Do Chk-Header-Deps
!	Let #Tot_Dependents = #Tot_Dependents + #Tot_Dep
!
!FROM PS_HEALTH_BENEFIT WHB
!WHERE WHB.COBRA_EVENT_ID = '0'
!AND WHB.BENEFIT_NBR = '0'
!AND WHB.EFFDT = (SELECT MAX(HB1.EFFDT) FROM PS_HEALTH_BENEFIT HB1
!				WHERE HB1.EMPLID = WHB.EMPLID
!				AND HB1.EMPL_RCD = WHB.EMPL_RCD
!				AND HB1.COBRA_EVENT_ID = WHB.COBRA_EVENT_ID
!				AND HB1.PLAN_TYPE = WHB.PLAN_TYPE
!				AND HB1.BENEFIT_NBR = WHB.BENEFIT_NBR
!				AND HB1.EFFDT    <= $AsofDate)
!AND  [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA_HDR]
!END-SELECT
!
!Show 'in write header #tot_dependents = ' #Tot_Dependents
!
!BEGIN-SELECT
!COUNT(*)  &TOT_EMP
!
!	Let #Tot_Emp = &TOT_EMP
!	Show 'in write header #Tot_Emp = ' #Tot_Emp
!
!FROM PS_HEALTH_BENEFIT WHB
!WHERE WHB.COBRA_EVENT_ID = '0'
!AND WHB.BENEFIT_NBR = '0'
!AND WHB.EFFDT = (SELECT MAX(HB1.EFFDT) FROM PS_HEALTH_BENEFIT HB1
!				WHERE HB1.EMPLID = WHB.EMPLID
!				AND HB1.EMPL_RCD = WHB.EMPL_RCD
!				AND HB1.COBRA_EVENT_ID = WHB.COBRA_EVENT_ID
!				AND HB1.PLAN_TYPE = WHB.PLAN_TYPE
!				AND HB1.BENEFIT_NBR = WHB.BENEFIT_NBR
!				AND HB1.EFFDT    <= $AsofDate)
!AND  [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA_HDR]
!END-SELECT
!
!	Let #Tot_Recs = #Tot_Emp + #Tot_Dependents + 2
!	Let $Tot_Recs = to_char(#Tot_Recs)
!	Show 'in write header - tot_recs = ' $Tot_Recs
!
!	Let $Record_Type = 'H'
!
!	Let $Create_Date = Edit($AsofDate,'YYYYMMDD')
!
!	Show 'In Write-Header-Record : $Record_Type = ' $Record_Type
!	Show '$Create_Date =' $Create_Date
!    	Add 1 to #Total_Recs
!	Let $Total_Recs = to_char(#Total_Recs)
!
!	Show '$Total Recs = ' $Total_Recs
!	Write 1 from
!			$Record_Type:2
!             		$Submitter_Id:20
!			$Submitter_Name:40
!			$Create_Date:8
!			$Tot_Recs:10
!
!End-Procedure Write-Header-Record
!Vendaxg Commented For ITG#54210 on 04/06/2009 - End
!*******************************************************************************************
!Vendaxg Commented For ITG#54210 on 04/06/2009 - Begin
!Begin-Procedure Chk-Header-Deps
!
!Begin-Select
!
!COUNT(*)  &TOT_DEP
!
!	Let #Tot_Dep = &TOT_DEP
!	!Show 'in chk header deps #Tot_Dep = ' #Tot_Dep
!
!FROM PS_HEALTH_DEPENDNT HD,PS_DEPENDENT_BENEF DB,PS_DEP_BENEF_NID DBN
!WHERE HD.EMPLID = DB.EMPLID
!AND HD.DEPENDENT_BENEF = DB.DEPENDENT_BENEF
!AND DB.EMPLID = DBN.EMPLID
!AND DB.DEPENDENT_BENEF = DBN.DEPENDENT_BENEF
!AND HD.EMPLID = &WHB.EMPLID
!AND HD.EMPL_RCD = &WHB.EMPL_RCD
!AND HD.COBRA_EVENT_ID = '0'
!AND HD.BENEFIT_NBR = '0'
!AND HD.PLAN_TYPE = $WHR_Plan_Type
!AND HD.EFFDT = (SELECT MAX(EFFDT) FROM PS_HEALTH_DEPENDNT
!		WHERE EMPLID = HD.EMPLID
!		AND EMPL_RCD = HD.EMPL_RCD
!		AND COBRA_EVENT_ID = HD.COBRA_EVENT_ID
!		AND BENEFIT_NBR = HD.BENEFIT_NBR
!		AND PLAN_TYPE = HD.PLAN_TYPE
!		AND HD.EFFDT >= &WHB.EFFDT)
!!AND HD.PLAN_TYPE IN ('10','15')
!End-Select

!End-Procedure Chk-Header-Deps
!Vendaxg Commented For ITG#54210 on 04/06/2009 - End
!*******************************************************************************************

Begin-Procedure Open-file

Let $filename = '{OUTFILE}'||'gexbn631_gianteagle_eligibility.dat'

Open $filename as 1 for-writing record=388
!Show 'In Open-FIle Proc --- FILE OPENED'
	If #writestat != 0
   		display 'Error Opening output file.  Program terminating.'
   		Stop
	End-If

End-Procedure

!*******************************************************************************************

Begin-Procedure Write-Trailer-Record

	Let $Record_Type = 'T'
    	!Add 1 to #Total_Recs !Vendaxg Commented For ITG#54210 on 04/06/2009
        Let $Total_Recs = to_char(#Total_Recs)
        !Let $Total_Contract_Holders = to_char(#Total_Contract_Holders)
        !Let $Total_Dependents = to_char(#Total_Dependents)
        Let $Dependent_Record_Count = To_Char(#Dependent_Record_Count)
        Let $Contract_Holder_Count = To_Char(#Contract_Holder_Count)
       ! Show 'in Trailer Record - $Total_Recs = ' $Total_Recs
       ! Show 'in Trailer Record - $Total_Contract_Holders = ' $Total_Contract_Holders
       ! Show 'in Trailer Record - $Total_Dependents = ' $Total_Dependents
	Write 1 from
			$Record_Type:2
             		$Submitter_Id:20
			$Submitter_Name:40
			$Create_Date:8
			$Total_Recs:10
			!Vendaxg Modified For ITG#54210 on 04/06/2009 - Begin
			!$Total_Contract_Holders:10
			!$Total_Dependents:10
			$Contract_Holder_Count:10
			$Dependent_Record_Count:10
			!Vendaxg Modified For ITG#54210 on 04/06/2009 - End

End-Procedure Write-Trailer-Record

!*******************************************************************************************

Begin-Procedure Write-Empl-Record

	Let $Record_Type = 'D'
	Let #Sal = '0'
	Let $Salary = to_char(#Sal)
	Let $Class = 'SB'
	Let $Dependent_NID = ' '
	Add 1 to #Total_Recs
	Add 1 to #Total_Contract_Holders
	!Show 'IN Write Empl Rec :: Add 1 to #Total_Recs = ' #Total_Recs
	!Show 'IN Write Empl Rec :: Add 1 to #Total_Contract_Holders = ' #Total_Contract_Holders
	!Vendaxg Commented For ITG#54210 on 04/06/2009 - Begin
	!Write 1 from

				!$Record_Type:2
				!$Emplid_NID:10
				!$Dependent_NID:10 !MXD Commented
				!$Emplid_NID:10			!ISDVMXD added on modified spec on 12/22/2008
				!$Last_Name:14
				!$First_Name:14
				!$Address1:36
				!$Address2:36
				!$Alternate_key:12
				!$Area:2
				!$Benefit_Package:2
				!$Bill_To:2
				!$Bill_To_Split:2
				!$Birthdate:8
				!$City:24
				!$Class:2
				!$Con_Ins_Cd:2
				!$Country_Cd:4
				!$Death_Date:8
				!$Division_Nbr:10
				!$Coverage_Begin_Dt:8
				!$Empl_Status:2
				!$Termination_Dt:8
				!$Former_Ins:2
				!$HCFA_Nbr:12
				!$Health_Status:2
				!$Hire_Date:8
				!$Language:2
				!$Marital_Status:2
				!$Alt_Provider_Nbr:12
				!$Alt_Provider_Prac_Nbr:4
				!$Primary_Cr_Physician_Provider_Nbr:12
				!$Primary_Cr_Physician_Prac_Nbr:4
				!$Prim_Sec_Payer_Flag:2
				!$Pre_Exist_Wait_Per:2
				!$Risk_Pop:2
				!$Salary:10
				!$Gender:2
				!$State:2
				!$Status:2
				!$Phone1:20
				!$Phone2:20
				!$Title:4
				!$Underwriting_Status:2
				!$Pre_Exist_Wait_Per_BeginDt:8
				!$Pre_Exist_Wait_Per_EndDt:8
				!$Postal:10
				!$Rec_Nbr:12
				!$Contract_Reason_Change_Cd:2
				!$Member_Reason_Change_Cd:2
		!Vendaxg Commented For ITG#54210 on 04/06/2009 - End

!Vendaxg Added For ITG#54210 on 04/06/2009 - Begin
Let $Record = Rpad(($Record_Type),2,' ')
Let $Record = Rpad(($Record || $Emplid_NID),12,' ')
Let $Record = Rpad(($Record || $Emplid_NID),22,' ')
Let $Record = Rpad(($Record || $Last_Name),36,' ')
Let $Record = Rpad(($Record || $First_Name),50,' ')
Let $Record = Rpad(($Record || $Address1),86,' ')
Let $Record = Rpad(($Record || $Address2),122,' ')
Let $Record = Rpad(($Record || $Space),142,' ')
Let $Record = Rpad(($Record || $Birthdate),150,' ')
Let $Record = Rpad(($Record || $City),174,' ')
Let $Record = Rpad(($Record || $Class),176,' ')
Let $Record = Rpad(($Record || $Space),190,' ')
Let $Record = Rpad(($Record || $Division_Nbr),200,' ')
Let $Record = Rpad(($Record || $Coverage_Begin_Dt),208,' ')
Let $Record = Rpad(($Record || $Space),210,' ')
Let $Record = Rpad(($Record || $Termination_Dt),218,' ')
Let $Record = Rpad(($Record || $Space),284,' ')
Let $Record = Rpad(($Record || $Salary),294,' ')
Let $Record = Rpad(($Record || $Gender),296,' ')
Let $Record = Rpad(($Record || $State),298,' ')
Let $Record = Rpad(($Record || $Space),362,' ')
Let $Record = Rpad(($Record || $Postal),372,' ')
Let $Record = Rpad(($Record || $Space),388,' ')
Let $SEQ_NUN = '00'

Do Insert-Record
!Vendaxg Added For ITG#54210 on 04/06/2009 - End
End-Procedure Write-Empl-Record

!*******************************************************************************************

Begin-Procedure Write-Dep-Record

	Let $Class = $Dep_Relationship
	Add 1 to #Total_Recs

	If $Dep_Address1 = ''
		Let $Dep_Address1 = $Address1
	End-If
	If $Dep_Address2 = ''
		Let $Dep_Address2 = $Address2
	End-If
	If $Dep_City = ''
		Let $Dep_City = $City
	End-If

	If $Dep_State = ''
		Let $Dep_State = $State
	End-If

	If $Dep_Postal = ''
		Let $Dep_Postal = $Postal
	End-If
	!Vendaxg Commented on 06/04/2009 - Begin
	!Write 1 from

				!$Record_Type:2
				!$Emplid_NID:10
				!$Dependent_NID:10
				!$Dep_Last_Name:14
				!$Dep_First_Name:14
				!$Dep_Address1:36
				!$Dep_Address2:36
				!$Alternate_key:12
				!$Area:2
				!$Benefit_Package:2
				!$Bill_To:2
				!$Bill_To_Split:2
				!$Dep_Birthdate:8
				!$Dep_City:24
				!$Class:2
				!$Con_Ins_Cd:2
				!$Country_Cd:4
				!$Death_Date:8
				!$Division_Nbr:10
				!$Coverage_Begin_Dt:8
				!$Empl_Status:2
				!$Termination_Dt:8
				!$Former_Ins:2
				!$HCFA_Nbr:12
				!$Health_Status:2
				!$Hire_Date:8
				!$Language:2
				!$Marital_Status:2
				!$Alt_Provider_Nbr:12
				!$Alt_Provider_Prac_Nbr:4
				!$Primary_Cr_Physician_Provider_Nbr:12
				!$Primary_Cr_Physician_Prac_Nbr:4
				!$Prim_Sec_Payer_Flag:2
				!$Pre_Exist_Wait_Per:2
				!$Risk_Pop:2
				!$Salary:10
				!$Dep_Gender:2
				!$Dep_State:2
				!$Status:2
				!$Phone1:20
				!$Phone2:20
				!$Title:4
				!$Underwriting_Status:2
				!$Pre_Exist_Wait_Per_BeginDt:8
				!$Pre_Exist_Wait_Per_EndDt:8
				!$Dep_Postal:10
				!$Rec_Nbr:12
				!$Contract_Reason_Change_Cd:2
				!$Member_Reason_Change_Cd:2
		!Vendaxg Commented on 06/04/2009 - End
!Vendaxg Added on 06/04/2009 - Begin
Let $Dep_Record = Rpad(($Record_Type),2,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Emplid_NID),12,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Dependent_NID),22,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Dep_Last_Name),36,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Dep_First_Name),50,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Dep_Address1),86,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Dep_Address2),122,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Space),142,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Dep_Birthdate),150,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Dep_City),174,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Class),176,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Space),190,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Division_Nbr),200,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Coverage_Begin_Dt),208,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Space),210,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Termination_Dt),218,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Space),284,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Salary),294,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Dep_Gender),296,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Dep_State),298,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Space),362,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Dep_Postal),372,' ')
Let $Dep_Record = Rpad(($Dep_Record || $Space),388,' ')


Let $Plan_Type =  $Dep_Plan_Type
Let $Record = $Dep_Record
Do Insert-Record
!Vendaxg Added on 06/04/2009 - End
End-Procedure Write-Dep-Record

!*******************************************************************************************

Begin-Procedure Init-Variables

	Let $Submitter_Id = 'GIANT EAGLE'
	Let $Submitter_Name = 'GIANT EAGLE'
	Let #Total_Contract_Holders = 0
	Let #Total_Dependents = 0
	Let $Emplid_NID = ' '
	Let $Last_Name = ' '
	Let $First_Name = ' '
	Let $Address1 = ' '
	Let $Address2 = ' '
	Let $Birthdate = ' '
	Let $City = ' '
	Let $Class = ' '
	Let $Division_Nbr = ' '
	Let $Effdt = ' '
	Let $Empl_Status = ' '
	Let $Termination_Dt = ' '
	Let $Hire_Date = ' '
	Let $Salary = ' '
	Let $Gender = ' '
	Let $State = ' '
	Let $Postal = ' '
	Let $Alternate_key = ' '
	Let $Area = ' '
	Let $Benefit_Package = ' '
	Let $Bill_To = ' '
	Let $Bill_To_Split = ' '
	Let $Con_Ins_Cd = ' '
	Let $Country_Cd = ' '
	Let $Death_Date = ' '
	Let $Former_Ins = ' '
	Let $HCFA_Nbr = ' '
	Let $Health_Status = ' '
	Let $Language = ' '
	Let $Marital_Status = ' '
	Let $Alt_Provider_Nbr = ' '
	Let $Alt_Provider_Prac_Nbr = ' '
	Let $Primary_Cr_Physician_Provider_Nbr = ' '
	Let $Primary_Cr_Physician_Prac_Nbr = ' '
	Let $Prim_Sec_Payer_Flag = ' '
	Let $Pre_Exist_Wait_Per = ' '
	Let $Risk_Pop = ' '
	Let $Status = ' '
	Let $Phone1 = ' '
	Let $Phone2 = ' '
	Let $Title = ' '
	Let $Underwriting_Status = ' '
	Let $Pre_Exist_Wait_Per_BeginDt = ' '
	Let $Pre_Exist_Wait_Per_EndDt = ' '
	Let $Rec_Nbr = ' '
	Let $Contract_Reason_Change_Cd = ' '
    Let $Member_Reason_Change_Cd = ' '

End-Procedure Init-Variables

!*******************************************************************************************

Begin-Procedure Init-Dep-Variables

	Let $Dependent_NID = ' '
	Let $Dependent_found = 'N'
	Let $Dep_Ben = ' '
	Let $Dep_First_Name = ' '
	Let $Dep_Last_Name = ' '
	Let $Dep_Middle_Name = ' '
	Let $Dep_Relationship = ' '
	Let $Dep_Gender = ' '
	Let $Dep_Birthdate = ' '

End-Procedure Init-Dep-Variables

!*******************************************************************************************

Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'

  !If $Data-Found-Flag <> 'Y'
  !  Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (5) center
  !End-If

  Do Write-Trailer-Record
  !Show 'Call Write-Trailer-Record'
  Do P310-Close-File
  !Show 'Call P310-Close-File'

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
End-Procedure

!*******************************************************************************************

Begin-Procedure P310-Close-File
#debug9 Show 'P310-Close-File'
  Close 1

  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop
  End-If

End-Procedure

!*******************************************************************************************

Begin-Procedure Select-Benefit-Plan-Parameters

  Let $OprID                = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_BENPLAN_ROWS = 0
  Let $Include_Condition    = ''
  Let $Exclude_Condition    = ''
  Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = ''
  Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA = ''
  Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
  Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'NONE'

Begin-Select

GEX_RC_BENPLAN.PLAN_TYPE
GEX_RC_BENPLAN.BENEFIT_PLAN

  Add 1 To #GEX_RC_BENPLAN_ROWS

  If Rtrim(&GEX_RC_BENPLAN.BENEFIT_PLAN, ' ') = ''
    Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || &GEX_RC_BENPLAN.PLAN_TYPE || ''')'
    Let $Exclude_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' != ''' || &GEX_RC_BENPLAN.PLAN_TYPE || ''')'
  Else
    Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || &GEX_RC_BENPLAN.PLAN_TYPE || ''' And ' || $GEXXX912_Benefit_Plan_Alias  || ' = '''  || &GEX_RC_BENPLAN.BENEFIT_PLAN || ''')'
    Let $Exclude_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' != ''' || &GEX_RC_BENPLAN.PLAN_TYPE || ''' Or '  || $GEXXX912_Benefit_Plan_Alias  || ' != ''' || &GEX_RC_BENPLAN.BENEFIT_PLAN || ''')'
  End-If

  If #GEX_RC_BENPLAN_ROWS = 1
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '(' || $Include_Condition
    Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA = '(' || $Exclude_Condition
  Else
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ' Or '  || $Include_Condition
    Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA || ' And ' || $Exclude_Condition
  End-If

From  PS_GEX_RC_BEN_PLAN GEX_RC_BENPLAN

Where GEX_RC_BENPLAN.OPRID                         = [$OprID]
And   GEX_RC_BENPLAN.RUN_CNTL_ID                   = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_BENPLAN.PLAN_TYPE, ' ')        != ' '


End-Select

  If #GEX_RC_BENPLAN_ROWS = 0
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_Plan_Type_Alias     || ' = ' || $GEXXX912_Plan_Type_Alias    || ' And ' ||
                                                  $GEXXX912_Benefit_Plan_Alias  || ' = ' || $GEXXX912_Benefit_Plan_Alias
    Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_Plan_Type_Alias     || ' = ' || $GEXXX912_Plan_Type_Alias    || ' And ' ||
                                                  $GEXXX912_Benefit_Plan_Alias  || ' = ' || $GEXXX912_Benefit_Plan_Alias
  Else
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA         = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ')'
    Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA         = $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA || ')'
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
    Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA
  End-If

End-Procedure Select-Benefit-Plan-Parameters
!*******************************************************************************************

Begin-Procedure Select-Benefit-Plan-Parameters_Hdr

  Let $OprID                = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_BENPLAN_ROWS = 0
  Let $Include_Condition_Hdr    = ''
  Let $Exclude_Condition_Hdr    = ''
  Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA_HDR = ''
  Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA_HDR = ''
  Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA_HDR = 'ALL'
  Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA_HDR = 'NONE'

Begin-Select

GEX_RC_BENPLAN_HDR.PLAN_TYPE
GEX_RC_BENPLAN_HDR.BENEFIT_PLAN

  Add 1 To #GEX_RC_BENPLAN_ROWS

  If Rtrim(&GEX_RC_BENPLAN_HDR.BENEFIT_PLAN, ' ') = ''
    Let $Include_Condition_Hdr = '(' || $GEXXX912_Plan_Type_Alias_Hdr || ' = '''  || &GEX_RC_BENPLAN_HDR.PLAN_TYPE || ''')'
    Let $Exclude_Condition_Hdr = '(' || $GEXXX912_Plan_Type_Alias_Hdr || ' != ''' || &GEX_RC_BENPLAN_HDR.PLAN_TYPE || ''')'
  Else
    Let $Include_Condition_Hdr = '(' || $GEXXX912_Plan_Type_Alias_Hdr || ' = '''  || &GEX_RC_BENPLAN_HDR.PLAN_TYPE || ''' And ' || $GEXXX912_Benefit_Plan_Alias_Hdr  || ' = '''  || &GEX_RC_BENPLAN_HDR.BENEFIT_PLAN || ''')'
    Let $Exclude_Condition_Hdr = '(' || $GEXXX912_Plan_Type_Alias_Hdr || ' != ''' || &GEX_RC_BENPLAN_HDR.PLAN_TYPE || ''' Or '  || $GEXXX912_Benefit_Plan_Alias_Hdr  || ' != ''' || &GEX_RC_BENPLAN_HDR.BENEFIT_PLAN || ''')'
  End-If

  If #GEX_RC_BENPLAN_ROWS = 1
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA_HDR = '(' || $Include_Condition_Hdr
    Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA_HDR = '(' || $Exclude_Condition_Hdr
  Else
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA_HDR = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA_HDR || ' Or '  || $Include_Condition_Hdr
    Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA_HDR = $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA_HDR || ' And ' || $Exclude_Condition_Hdr
  End-If

From  PS_GEX_RC_BEN_PLAN GEX_RC_BENPLAN_HDR

Where GEX_RC_BENPLAN_HDR.OPRID                         = [$OprID]
And   GEX_RC_BENPLAN_HDR.RUN_CNTL_ID                   = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_BENPLAN_HDR.PLAN_TYPE, ' ')        != ' '


End-Select

  If #GEX_RC_BENPLAN_ROWS = 0
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA_HDR = $GEXXX912_Plan_Type_Alias_Hdr     || ' = ' || $GEXXX912_Plan_Type_Alias_Hdr    || ' And ' ||
                                                  $GEXXX912_Benefit_Plan_Alias_Hdr  || ' = ' || $GEXXX912_Benefit_Plan_Alias_hdr
    Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA_HDR = $GEXXX912_Plan_Type_Alias_Hdr     || ' = ' || $GEXXX912_Plan_Type_Alias_Hdr    || ' And ' ||
                                                  $GEXXX912_Benefit_Plan_Alias_Hdr  || ' = ' || $GEXXX912_Benefit_Plan_Alias_Hdr
  Else
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA_HDR         = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA_HDR || ')'
    Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA_HDR         = $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA_HDR || ')'
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA_HDR
    Let $GEXXX912_EXCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_EXCLUDE_BENEFIT_PLAN_CRITERIA_HDR
  End-If

End-Procedure Select-Benefit-Plan-Parameters_Hdr
!*******************************************************************************************
!Vendaxg Added For ITG#54210 on 04/06/2009 - Begin
!*******************************************************************************************
!Checking if the picked employee is enrolled in the plan coming from Run control.
!*******************************************************************************************
Begin-Procedure Check-Exist-in-Plan

Let $Correct_Ben_Plan = 'N'

Begin-Select
HLTHBEN.PLAN_TYPE
HLTHBEN.BENEFIT_PLAN
HLTHBEN.COVERAGE_BEGIN_DT


	Let $Correct_Ben_Plan = 'Y'
	Let $Terminate_Coverage_Begin_Dt = Edit(&HLTHBEN.COVERAGE_BEGIN_DT,'YYYYMMDD')



FROM PS_HEALTH_BENEFIT HLTHBEN
WHERE HLTHBEN.EMPLID  = $Emplid
AND HLTHBEN.EMPL_RCD = $Empl_Rcd
AND HLTHBEN.COBRA_EVENT_ID = '0'
AND HLTHBEN.BENEFIT_NBR = '0'
!AND HLTHBEN.EFFDT =
AND HLTHBEN.BENEFIT_NBR = '0'
AND HLTHBEN.PLAN_TYPE = $Plan_Type
AND [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]
AND [$GEXXX912_INCLUDE_EFFDT_CRITERIA]
End-Select
Do Get-Group-Number
End-Procedure Check-Exist-in-Plan

!*******************************************************************************************
!Get the Plan Type only form the Run control record.
!*******************************************************************************************
Begin-Procedure Get-Input-Plan-Type
Let  $RC_Plan_Type = ' '
Let  $Cancelled_Plan_Type = ' '
Begin-Select
GEX_RC_BENPLAN1.PLAN_TYPE

	If $RC_Plan_Type = ' '
		Let $RC_Plan_Type = 'HB.PLAN_TYPE IN ( ' || '''' || &GEX_RC_BENPLAN1.PLAN_TYPE || ''''
		Let $Cancelled_Plan_Type = 'HLDT.PLAN_TYPE IN ( ' || '''' || &GEX_RC_BENPLAN1.PLAN_TYPE || ''''
	Else
		Let $RC_Plan_Type = $RC_Plan_Type || ',' || '''' || &GEX_RC_BENPLAN1.PLAN_TYPE || ''''
		Let $Cancelled_Plan_Type = $Cancelled_Plan_Type || ',' || '''' || &GEX_RC_BENPLAN1.PLAN_TYPE || ''''
	End-if

From  PS_GEX_RC_BEN_PLAN GEX_RC_BENPLAN1

Where GEX_RC_BENPLAN1.OPRID                         = [$OprID]
And   GEX_RC_BENPLAN1.RUN_CNTL_ID                   = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_BENPLAN1.PLAN_TYPE, ' ')        != ' '
End-Select
Let $RC_Plan_Type = $RC_Plan_Type || ')'
Let $Cancelled_Plan_Type = $Cancelled_Plan_Type || ')'

End-Procedure Get-Input-Plan-Type

!****************************************************************************************************
!Insert record into temp table. This procedure being called from 2 places for employee and dependents.
!****************************************************************************************************
Begin-Procedure Insert-Record

Begin-SQL
INSERT INTO PS_GEX_UPMC_CURR VALUES ($Emplid, $SEQ_NUN,$Plan_Type, $Record)
End-SQL
End-Procedure Insert-Record

!*******************************************************************************************
!Procedure to check if there is any cancellation in dependents since last run.
!*******************************************************************************************
Begin-Procedure P250-Get-Cancelled-Record

Begin-Select
PRIR.EMPLID
PRIR.SEQNUM
PRIR.PLAN_TYPE
PRIR.PORTAL_PATH

	Let $Cancelled_Emplid = &PRIR.EMPLID
	Let #Cancelled_Record_Seq = &PRIR.SEQNUM
	Let $Cancelled_Plan_Type = &PRIR.PLAN_TYPE
	Let $Cancelled_Record_Info = &PRIR.PORTAL_PATH
	let $Cancelled_Termination_Date = Ltrim(Rtrim(Substr($Cancelled_Record_Info,211,8),' '),' ')


	If $Cancelled_Termination_Date = ''
		Do Create-Revised-Record
		Do Insert-Revised-Record
	End-if

FROM PS_GEX_UPMC_PRIOR PRIR
WHERE NOT EXISTS
    (SELECT 'X'
     FROM PS_GEX_UPMC_CURR CURR
     WHERE PRIR.EMPLID = CURR.EMPLID
      AND PRIR.SEQNUM = CURR.SEQNUM)
   order by PRIR.EMPLID,PRIR.SEQNUM
End-Select
End-Procedure P250-Get-Cancelled-Record

!*******************************************************************************************
!Procedure to create a revised record for the cancelled record.
!*******************************************************************************************
Begin-Procedure Create-Revised-Record

!Do Get-Cancelled-Dep-Coverage-Dt
Do Get-Cancelled-Date

Let $Record1 = Substr($Cancelled_Record_Info,1,210)
Let $Record2 = Substr($Cancelled_Record_Info,219,388)
Let $Revised_Record = $Record1 || $Plan_Cancelled_Date || $Record2

End-Procedure Create-Revised-Record

!*******************************************************************************************
!Procedure to check the cancelled record belongs to which Plan Type.
!*******************************************************************************************
Begin-Procedure Get-Cancelled-Dep-Coverage-Dt

Begin-Select Distinct
HLDT.PLAN_TYPE

   Let $Cancelled_Plan_Type= Ltrim(Rtrim(&HLDT.PLAN_TYPE,' '),' ')

FROM PS_HEALTH_DEPENDNT HLDT
WHERE HLDT.EMPLID= $Cancelled_Emplid
AND HLDT.DEPENDENT_BENEF= #Cancelled_Record_Seq
AND [$Cancelled_Plan_Type]
AND HLDT.EFFDT =  (SELECT MAX(EFFDT)
                   FROM PS_HEALTH_DEPENDNT
                   WHERE HLDT.EMPLID = EMPLID
                   AND HLDT.EMPL_RCD = EMPL_RCD
                   AND HLDT.COBRA_EVENT_ID = COBRA_EVENT_ID
                   AND HLDT.PLAN_TYPE = PLAN_TYPE
                   AND HLDT.BENEFIT_NBR = BENEFIT_NBR
                   AND EFFDT  <= $asofdate )
End-Select
End-Procedure Get-Cancelled-Dep-Coverage-Dt
!*******************************************************************************************
!Procedure to get the cancellation date.
!*******************************************************************************************
Begin-Procedure Get-Cancelled-Date

Begin-Select
CD.EFFDT
CD.COVERAGE_BEGIN_DT
CD.COVERAGE_ELECT

   Let $Plan_Cancelled_Date = Edit(&CD.COVERAGE_BEGIN_DT,'YYYYMMDD')


FROM  PS_HEALTH_BENEFIT CD
WHERE CD.EMPLID       = $Cancelled_Emplid
AND   CD.PLAN_TYPE = $Cancelled_Plan_Type
AND   CD.COVERAGE_BEGIN_DT =  (SELECT MAX(COVERAGE_BEGIN_DT)
                   FROM PS_HEALTH_BENEFIT
                   WHERE CD.EMPLID = EMPLID
                   AND CD.EMPL_RCD = EMPL_RCD
                   AND CD.COBRA_EVENT_ID = COBRA_EVENT_ID
                   AND CD.PLAN_TYPE = PLAN_TYPE
                   AND CD.BENEFIT_NBR = BENEFIT_NBR
                   )                                                  !ISDVMZA
!                   AND COVERAGE_BEGIN_DT  <= $asofdate)              !ISDVMZA
End-Select
End-Procedure Get-Cancelled-Date

!*******************************************************************************************
!Procedure to Insert cancelled record to temp table.
!*******************************************************************************************
Begin-Procedure Insert-Revised-Record

Begin-SQL
INSERT INTO PS_GEX_UPMC_CURR VALUES ($Cancelled_Emplid, #Cancelled_Record_Seq,$Cancelled_Plan_Type, $Revised_Record)
End-SQL

End-Procedure Insert-Revised-Record
!*******************************************************************************************
!Procedure to get the group number of the benefit plan.
!*******************************************************************************************
Begin-Procedure Get-Group-Number
Begin-Select
BP.GROUP_NBR

	Let $Division_Nbr_underscore = Substr(&BP.GROUP_NBR,7,1)

	If ($Division_Nbr_underscore = '-')
		Let $Division_Nbr_1 = Substr(&BP.GROUP_NBR,1,6)
		Let $Division_Nbr_2 = Substr(&BP.GROUP_NBR,8,3)
		String $Division_Nbr_1 $Division_Nbr_2 by '' into $Division_Nbr
	Else
		Let $Division_Nbr = '000' || &BP.GROUP_NBR
	End-If

FROM PS_BENEF_PLAN_TBL BP
WHERE BP.PLAN_TYPE = &HLTHBEN.PLAN_TYPE
AND BP.BENEFIT_PLAN = &HLTHBEN.BENEFIT_PLAN
AND BP.EFFDT = (SELECT MAX(BP1.EFFDT) FROM PS_BENEF_PLAN_TBL BP1
				WHERE BP1.PLAN_TYPE = BP.PLAN_TYPE
				AND BP1.BENEFIT_PLAN = BP.BENEFIT_PLAN
				AND BP1.EFFDT <= $AsofDate)
End-Select

End-Procedure Get-Group-Number

!*******************************************************************************************
!Procedure to Prior temp Table
!*******************************************************************************************
Begin-Procedure Delete-Prior
Begin-SQL
DELETE  FROM PS_GEX_UPMC_PRIOR;
End-SQL
End-Procedure Delete-Prior

!*******************************************************************************************
!Procedure to Move Curr to Prior temp Table
!*******************************************************************************************
Begin-Procedure Move-Curr-To-Prior
Begin-SQL
INSERT INTO PS_GEX_UPMC_PRIOR  (SELECT * FROM PS_GEX_UPMC_CURR);
End-SQL
End-Procedure Move-Curr-To-Prior

!*******************************************************************************************
!Procedure to Current temp Table
!*******************************************************************************************
Begin-Procedure Delete-Current
Begin-SQL
DELETE FROM PS_GEX_UPMC_CURR;
End-SQL
End-Procedure Delete-Current

!*******************************************************************************************
!Procedure to write the record in to the file.
!*******************************************************************************************
Begin-Procedure P270-Write-Into-File
Begin-Select
FINAL.EMPLID
FINAL.SEQNUM
FINAL.PLAN_TYPE
FINAL.PORTAL_PATH


	Let $Final_Emplid = &FINAL.EMPLID
	Let #Final_SeqNum = &FINAL.SEQNUM
	Let $Final_Plan_Type = &FINAL.PLAN_TYPE
	Let $Final_Record = &FINAL.PORTAL_PATH

	If #Final_SeqNum = 0
		let $Term_Date = Ltrim(Rtrim(Substr($Final_Record,211,8),' '),' ')
		If $Term_Date = ''
			Do Write-Record
		Else
			Do Check-In-Prior
			If $Termination_Row_Sent = 'N'
				Do Write-Record
			End-if
		End-IF
	Else
		Do Write-Record
	End-if

FROM PS_GEX_UPMC_CURR FINAL
ORDER BY FINAL.EMPLID, FINAL.SEQNUM
End-Select
End-Procedure  P270-Write-Into-File
!*******************************************************************************************
!Procedure to write the record in to the file.
!*******************************************************************************************
Begin-Procedure Write-Record
	Write 1 from
	$Final_Record
End-Procedure write-Record

Begin-Procedure Check-In-Prior
Let $Termination_Row_Sent = 'N'
!*******************************************************************************************
!Procedure to check if record were sent last time or this is the first time.
!*******************************************************************************************
Begin-Select
PR.EMPLID
PR.PORTAL_PATH

	Let $Check_Termination_Date = Ltrim(Rtrim(Substr(&PR.PORTAL_PATH,211,8),' '),' ')
	If $Check_Termination_Date = ''
		Let $Termination_Row_Sent = 'N'
	Else
		Let $Termination_Row_Sent = 'Y'
	End-if


FROM PS_GEX_UPMC_PRIOR PR
WHERE PR.EMPLID  = $Final_Emplid
AND PR.SEQNUM = #Final_SeqNum
AND PR.PLAN_TYPE = $Final_Plan_Type

End-Select
End-PRocedure Check-In-Prior



!*******************************************************************************************
!Procedure to write the record in to the file.
!*******************************************************************************************
Begin-Procedure P260-Find-Header-Footer-Count
Let #Dependent_Record_Count = 0
Let #Contract_Holder_Count = 0
Begin-Select
COUNT.EMPLID
COUNT.SEQNUM
COUNT.PLAN_TYPE
COUNT.PORTAL_PATH


	Let $Count_Emplid = &COUNT.EMPLID
	Let #Count_SeqNum = &COUNT.SEQNUM
	Let $Count_Plan_Type = &COUNT.PLAN_TYPE
	Let $Count_Record = &COUNT.PORTAL_PATH

	If #Count_SeqNum = 0
		let $Term_Date = Ltrim(Rtrim(Substr($Count_Record,211,8),' '),' ')
		If $Term_Date = ''
			!Do Write-Record
			Let #Contract_Holder_Count = #Contract_Holder_Count + 1
		Else
			Let $Final_Emplid = $Count_Emplid
			Let #Final_SeqNum = #Count_SeqNum
			Let $Final_Plan_Type = $Count_Plan_Type
			Do Check-In-Prior
			If $Termination_Row_Sent = 'N'
				!Do Write-Record
				Let #Contract_Holder_Count = #Contract_Holder_Count + 1
			End-if
		End-IF
	Else
		!Do Write-Record
		Let #Dependent_Record_Count = #Dependent_Record_Count  + 1
	End-if

FROM PS_GEX_UPMC_CURR COUNT
ORDER BY COUNT.EMPLID, COUNT.SEQNUM
End-Select
End-Procedure P260-Find-Header-Footer-Count

Begin-Procedure P265-Write-Header-Record

	Let #Tot_Recs = #Contract_Holder_Count + #Dependent_Record_Count + 2
	Let $Tot_Recs = to_char(#Tot_Recs)

	Let $Submitter_Id = ''
	Let $Submitter_Name = ''
	Let $Record_Type = 'H'

	Let $Create_Date = Edit($AsofDate,'YYYYMMDD')


    	!Add 1 to #Total_Recs !Vendaxg Commented For ITG#54210 on 04/06/2009
	!Let $Total_Recs = to_char(#Total_Recs)
	Let #Total_Recs = #Tot_Recs


	Write 1 from
			$Record_Type:2
             		$Submitter_Id:20
			$Submitter_Name:40
			$Create_Date:8
			$Tot_Recs:10
End-Procedure P265-Write-Header-Record



!Vendaxg Added For ITG#54210 on 04/06/2009 - End

#Include 'gexxx912.sqc'  !Get Plan Type/Benefit Plan Multiples Run Controls
#include 'gexxx920.sqc'  !Get ben single row run control
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
