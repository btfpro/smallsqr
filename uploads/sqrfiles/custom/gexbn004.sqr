!***********************************************************************
! GEXBN004:  Plan Participants                                         *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1988-1996 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
!      $Date:: 11/15/96 5:58p   $                                      *
!  $Revision:: 8                $                                      *
!  $Workfile:: BEN001.SQR       $                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! JDH       06/13/98    Initial Creation                               *
! SXK       02/05/99    Added multiple plan type and benefit plan in   *
!                       run control, page breaks on benefit plan       *
!                       also made it run for all plan types            *
! SXK       02/15/99    Modified to have multiple benefit program in   *
!                       run control and added a summary report         *
! JDH       06/09/99    Fixed run control logic.                       *
!                       Added report type parameter.                   *
! SXK       06/29/1999  Modified to have birthdate as run control      *
!			and to pick Terms and Waives correctly         *
! SXK       09/14/1999  Modified to include date range logic           *
!			and pension plan selection criteria            *
! PSR	    07/24/2002  Modified BENEFIT# to BENEFIT_NBR               *
!                       EMPL_RCD# to EMPL_RCD                          *
!                       Commented out setup32a.sqc include file.       *
!                       Added ptpsl177.sqc include file                *     
! MXR       15/03/2010  ITG 73144 Changed field on temp table to 2 char*      
!***********************************************************************

#Include 'setenv.sqc'   !Set environment
!#Include 'setup02.sqc' !Printer and page-size initialization

!***********
Begin-Setup
!***********
!#include 'setup32a.sqc'
#include 'ptpsl177.sqc'
declare-report detail-report
Printer-Type=HPLASERJET
   layout=default
end-declare

declare-report summary-report
Printer-Type=HPLASERJET
   layout=default
end-declare
!#Include 'ldplntyp.sqc' !Load-Lookup Table with Plan Types
End-Setup

!************
Begin-Report
!************

  do Init-Report
#Include 'ldplntyp.sqc' !Load-Lookup Table with Plan Types
  do Process-Main
  !SXK 06/29/1999 End
  do drop-temp-table
  !SXK 06/29/1999 End
  do StdAPI-Term

End-Report

!******************************
Begin-Procedure Init-Report
!******************************

  do Init-DateTime
  do Init-Number
  move 'GEXBN004' to $ReportID
  move 'Plan Participants' to $ReportTitle
  show '$ReportID= '     $ReportID
  show '$ReportTitle = ' $ReportTitle   
  show ' '
  do Get-Current-DateTime
  do StdAPI-Init

  Let $GEXXX911_Benefit_Program_Alias = 'A1.BENEFIT_PROGRAM'
  Let $GEXXX911_Plan_Type_Alias       = '1'
  Let $GEXXX911_Benefit_Plan_Alias    = '1'
  Let $GEXXX912_Plan_Type_Alias       = 'B.PLAN_TYPE'
  Let $GEXXX912_Benefit_Plan_Alias    = 'B.BENEFIT_PLAN'
  Let $Coverage_Elect_Alias           = 'B.COVERAGE_ELECT'

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If
  !SXK 09/14/1999 Begin
  let $range_crit = 'D.COVERAGE_BEGIN_DT BETWEEN '||''''||$FromDate||
			''''||' AND '||''''||$ThruDate||''''
  !SXK 09/14/1999 End


  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  If $Rpt_Type = 'S' or
     $Rpt_Type = 'D'
  Else
    Let $Rpt_Type = ''
  End-If

  Show '$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = ' $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
  Show '$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = ' $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
  Show '$Coverage-Elect = ' $In-Coverage-Elect
  Show '$Rpt_Type = ' $Rpt_Type
  show '$birthdat_crit = ' $birthdate_crit
  Show '$ThruDate = ' $ThruDate
  !SXK 06/29/1999 Begin
  let $tablename = 'PS_GEX_R_GEXBN004'
  do drop-temp-table
  do create-temp-table
  !SXK 06/29/1999 End
End-Procedure

!***************
Begin-Heading 8 for-reports=(detail-report)
!***************
let $reportid = 'BN004DET'
let $reporttitle = 'Plan Participants Detail Report'

#Include 'stdhdg01.sqc'

  print 'Benefit Program:  ' (3,1)
  print $Benefit_Program     (0,+1)
  print 'FromDate:  '        (+1,1)
  print $FromDate            (0,+1)
  print 'ThruDate:  '        (0,+4)
  print $ThruDate            (0,+1)

  print 'Benefit'                                                   (+2,12)
  print 'Empl    Empl  Reg/  Full/  Pay    Covg.'                   (0,99)
  print 'Coverage    Coverage'                                      (0,152)

  print 'Plan Type  Plan       Dept. ID   Dept. Name Employee Name' (+1,1)
  print 'Employee ID  Status  Type  Temp  Part   Group  Elect. Coverage'   (0,86)
  print 'Begin       End'                                           (0,152)

  print '========== ========== ========== ========== '              (+1,1)
  print '======================================== ============ '    ()
  print '======= ===== ===== ====== ====== ====== =========== '     ()
  print '=========== ==========='                                   ()

End-Heading

!***************
Begin-Heading 8 for-reports=(summary-report)
!***************
let $reportid = 'BN004SUM'
let $reporttitle = 'Plan Participants Summary Report'
#Include 'stdhdg01.sqc'

  print 'Benefit Program:  ' (3,1)
  print $Benefit_Program     (0,+1)
  print 'FromDate:  '        (+1,1)
  print $FromDate            (0,+1)
  print 'ThruDate:  '        (0,+4)
  print $ThruDate            (0,+1)

  print '-'                  (+1,1,165) fill
  print 'TOTALS'             (+1,1)
  print '-'                  (+1,1,165) fill
End-Heading


begin-procedure P110-SQRW-Run-Controls
  Let $BenefitProgramString = ''''
  While 1=1
    Display 'Enter Benefit Program or leave blank to exit.'
      Input $In-Benefit-Program Maxlen=3 'Benefit Program'
      Uppercase $In-Benefit-Program
      If Rtrim($In-Benefit-Program, ' ') = ''
	Concat '''' With $BenefitProgramString
	Break
      End-If
      If $BenefitProgramString <> ''''
	Concat ''',''' With $BenefitProgramString
      End-If
      Concat $In-Benefit-Program With $BenefitProgramString
    End-While

    If $BenefitProgramString = ''''''
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = $GEXXX911_Benefit_Program_Alias || ' In (' || $BenefitProgramString || ')'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
    End-If

  Display 'Enter Plan Type/Benefit Plan or leave blank to exit.'
  While 1=1
    Input $In-Plan-Type Maxlen=2 'Plan Type'
    Uppercase $In-Plan-Type
    If Rtrim($In-Plan-Type, ' ') = ''
      Break
    Else
      Input $In-Benefit-Plan Maxlen=6 'Benefit Plan'
      Uppercase $In-Benefit-Plan
      If Rtrim($In-Benefit-Plan, ' ') = ''
	Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || $In-Plan-Type || ''')'
      Else
	Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || $In-Plan-Type || ''' And ' || $GEXXX912_Benefit_Plan_Alias || ' = '''  || $In-Benefit-Plan || ''')'
      End-If
      Add 1 To #GEX_RC_BEN_PLAN_ROWS
      If #GEX_RC_BEN_PLAN_ROWS = 1
	Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '(' || $Include_Condition
      Else
	Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While

  If #GEX_RC_BEN_PLAN_ROWS = 0
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ')'
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
  End-If

  display 'Enter Coverage Elect or leave blank to exit.'
  input $In-Coverage-Elect Maxlen=1 'Coverage Elect'
  Uppercase $In-Coverage-Elect
  if rtrim($In-Coverage-Elect,' ') = ''
     let $In-Coverage-Elect = '1=1'
  else
    let $In-Coverage-Elect = 'B.COVERAGE_ELECT = '||''''||$In-Coverage-Elect||''''     
  end-if

  display 'Enter Report Type (S)ummary or (D)etail'
  input $Rpt_Type Maxlen=1 'Report Type'
  Uppercase $Rpt_Type
  Let $Rpt_Type = rtrim($Rpt_Type,' ')

  display 'Enter relational operator(<,>,<=,>=) to use for birth date or leave blank to exit'
  input $operator Maxlen=2 'Operator'
  Let $operator = rtrim($operator,' ')
  if rtrim($operator,' ') <> ''
          display 'Enter the Birth Date ({Prompt-Date}) for this report'
	  input $birthdate Maxlen=10
	  Let $birthdate = rtrim($birthdate,' ')
          if rtrim($birthdate,' ') = ''
             let $birthdate_crit = '1=1'
          else            
             move {PDelimiter} to $DDelimiter
	     do Format-DateTime($birthdate,$birthdate,{Prompt-Mask},'','native')
             let $birthdate_crit = 'PD.BIRTHDATE '||$operator||' '||
					''''||$birthdate||''''
          end-if
  else
     let $birthdate_crit = '1=1'
   end-if


!SXK 09/14/1999 Begin
!  Do Ask-As-Of-Date
Do Ask-From-Thru-Date
!SXK 09/14/1999 End

end-procedure


begin-procedure P120-Process-Scheduler-Run-Controls
  Do GEXRCBN1-SELECT-PARAMETERS

!  Let $AsOfDate = &GEX_RC_BEN.AsOfDate
!  If Rtrim (&GEX_RC_BEN.AsOfDate, ' ') = ''
!    Let $AsOfDate = $AsOfToday
!  End-If

  Do GEXXX911-Select-Benefit-Program-Parameters
  Do GEXXX912-Select-Benefit-Plan-Parameters

  !SXK 09/14/1999 Begin
  if rtrim(&GEX_RC_BEN.FROMDATE,' ') = ''
     do Format-DateTime('19000101',$Century_Begin_Dt,{DEFCMP},'','native')

    let $Fromdate = $century_begin_dt
  else
     let $FromDate = &GEX_RC_BEN.FROMDATE
  end-if
  if rtrim(&GEX_RC_BEN.THRUDATE,' ') = ''
     let $ThruDate = $AsOfToday
  else
     let $ThruDate = &GEX_RC_BEN.THRUDATE
  end-if
  !SXK 09/14/1999 End


  If Rtrim(&GEX_RC_BEN.COVERAGE_ELECT, ' ') = ''
    let $In-Coverage-Elect  = '1=1'
  Else
    let $In-Coverage-Elect  = &GEX_RC_BEN.COVERAGE_ELECT
    let $In-Coverage-Elect = 'B.COVERAGE_ELECT = '||''''||$In-Coverage-Elect||''''
  End-If

  Let $Rpt_Type = Rtrim(&GEX_RC_BEN.GEX_SUMMARY_FLAG,' ')
  if rtrim(&GEX_RC_BEN.GEX_OPERATOR1,' ') = ''
     let $birthdate_crit = '1=1'
  else
     if rtrim(&GEX_RC_BEN.FROM_BIRTHDATE,' ') = ''
        let $birthdate_crit = '1=1'
     else
        let $birthdate_crit = 'PD.BIRTHDATE '||&GEX_RC_BEN.GEX_OPERATOR1||' '||
					''''||&GEX_RC_BEN.FROM_birthdate||''''
     end-if
  end-if

end-procedure

!***************************
Begin-Procedure Process-Main
!***************************

  do select-bprogram
  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

end-procedure

!***************************
begin-procedure select-bprogram
!***************************

begin-select 
distinct a1.benefit_program &a1.benefit_program

 move &a1.Benefit_Program to $Benefit_Program
 let $health_record = 'Y'
 let $column1 = 'B.COVRG_CD'
 let $column2 = 'B.COVERAGE_BEGIN_DT'
 let $column3 = 'B.COVERAGE_END_DT'


 let $record = 'PS_PERSONAL_DATA PD, PS_JOB J, PS_HEALTH_BENEFIT B, PS_BEN_PROG_PARTIC A'
 let $record_1 = 'PS_HEALTH_BENEFIT D'
 let $record_2 = 'PS_HEALTH_BENEFIT C'
 let $max_begin_dt_crit = ' B.COVERAGE_BEGIN_DT       ='||
      '(SELECT MAX(D.COVERAGE_BEGIN_DT)'||
       ' FROM  '||$record_1||
       ' WHERE D.EMPLID             = B.EMPLID'||
       ' AND   D.EMPL_RCD          = B.EMPL_RCD'||
       ' AND   D.PLAN_TYPE          = B.PLAN_TYPE'||
       ' AND '||$range_crit||
       ' AND   D.BENEFIT_NBR'||' = B.BENEFIT_NBR'||')'

 do select-participants
 let #check_total = 0

 let $health_record = 'N'
 let $column1 = 'B.COVERAGE_ELECT'

 let $record = 'PS_PERSONAL_DATA PD, PS_JOB J, PS_LIFE_ADD_BEN B, PS_BEN_PROG_PARTIC A'
 let $record_1 = 'PS_LIFE_ADD_BEN D'
 let $record_2 = 'PS_LIFE_ADD_BEN C'
 let $max_begin_dt_crit = ' B.COVERAGE_BEGIN_DT       ='||
      '(SELECT MAX(D.COVERAGE_BEGIN_DT)'||
       ' FROM  '||$record_1||
       ' WHERE D.EMPLID             = B.EMPLID'||
       ' AND   D.EMPL_RCD          = B.EMPL_RCD'||
       ' AND   D.PLAN_TYPE          = B.PLAN_TYPE'||
       ' AND '||$range_crit||
       ' AND   D.BENEFIT_NBR'||' = B.BENEFIT_NBR'||')'

 do select-participants
 let #check_total = 0

 let $record = 'PS_PERSONAL_DATA PD, PS_JOB J, PS_DISABILITY_BEN B, PS_BEN_PROG_PARTIC A'
 let $record_1 = 'PS_DISABILITY_BEN D'
 let $record_2 = 'PS_DISABILITY_BEN C'
 let $max_begin_dt_crit = ' B.COVERAGE_BEGIN_DT       ='||
      '(SELECT MAX(D.COVERAGE_BEGIN_DT)'||
       ' FROM  '||$record_1||
       ' WHERE D.EMPLID             = B.EMPLID'||
       ' AND   D.EMPL_RCD          = B.EMPL_RCD'||
       ' AND   D.PLAN_TYPE          = B.PLAN_TYPE'||
       ' AND '||$range_crit||
       ' AND   D.BENEFIT_NBR'||' = B.BENEFIT_NBR'||')'

 do select-participants
 let #check_total = 0

 let $record = 'PS_PERSONAL_DATA PD, PS_JOB J, PS_SAVINGS_PLAN B, PS_BEN_PROG_PARTIC A'
 let $record_1 = 'PS_SAVINGS_PLAN D'
 let $record_2 = 'PS_SAVINGS_PLAN C'
 let $max_begin_dt_crit = ' B.COVERAGE_BEGIN_DT       ='||
      '(SELECT MAX(D.COVERAGE_BEGIN_DT)'||
       ' FROM  '||$record_1||
       ' WHERE D.EMPLID             = B.EMPLID'||
       ' AND   D.EMPL_RCD          = B.EMPL_RCD'||
       ' AND   D.PLAN_TYPE          = B.PLAN_TYPE'||
       ' AND '||$range_crit||
       ' AND   D.BENEFIT_NBR'||' = B.BENEFIT_NBR'||')'

 do select-participants
 let #check_total = 0

 let $record = 'PS_PERSONAL_DATA PD, PS_JOB J, PS_FSA_BENEFIT B, PS_BEN_PROG_PARTIC A'
 let $record_1 = 'PS_FSA_BENEFIT D'
 let $record_2 = 'PS_FSA_BENEFIT C'
 let $max_begin_dt_crit = ' B.COVERAGE_BEGIN_DT       ='||
      '(SELECT MAX(D.COVERAGE_BEGIN_DT)'||
       ' FROM  '||$record_1||
       ' WHERE D.EMPLID             = B.EMPLID'||
       ' AND   D.EMPL_RCD          = B.EMPL_RCD'||
       ' AND   D.PLAN_TYPE          = B.PLAN_TYPE'||
       ' AND '||$range_crit||
       ' AND   D.BENEFIT_NBR'||' = B.BENEFIT_NBR'||')'

 do select-participants
 !SXK 09/14/1999 Begin
 let $record = 'PS_PERSONAL_DATA PD, PS_JOB J, PS_PENSION_PLAN B, PS_BEN_PROG_PARTIC A'
 let $range_crit = 'D.effdt BETWEEN '||''''||$FromDate||
			''''||' AND '||''''||$ThruDate||''''

 let $record_1 = 'PS_PENSION_PLAN D'
 let $record_2 = 'PS_PENSION_PLAN C'
 let $column2 = 'B.EFFDT'
 let $column3 = 'B.DEDUCTION_END_DT'

 let $max_begin_dt_crit = '    B.effdt       ='||
      '(SELECT MAX(D.effdt)'||
       'FROM  '||$record_1||
       ' WHERE D.EMPLID             = B.EMPLID'||
       ' AND   D.EMPL_RCD          = B.EMPL_RCD'||
       ' AND   D.PLAN_TYPE          = B.PLAN_TYPE'||
       ' AND '||$range_crit||
       ' AND   D.BENEFIT_NBR'||' = B.BENEFIT_NBR'||')'


 do select-participants
 #DEFINE pension N
 !SXK 09/14/1999 End


from   ps_ben_prog_partic a1
where [$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA]
and    A1.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_BEN_PROG_PARTIC
       WHERE  EMPLID          = A1.EMPLID
       AND    EMPL_RCD       = A1.EMPL_RCD
       AND    COBRA_EVENT_ID  = A1.COBRA_EVENT_ID
       AND    EFFDT          <= $ThruDate)
order by a1.benefit_program
end-select

do Reset

end-procedure

!SXK 06/29/1999 Begin 
!***************************
begin-procedure select-participants
!*************************** 
display 'In select partici'
!show $max_begin_dt_crit
Begin-SELECT
A.BENEFIT_PROGRAM 
B.PLAN_TYPE       
B.BENEFIT_PLAN    
  move &B.Benefit_Plan to $Benefit_Plan
J.DEPTID
PD.NAME
J.EMPLID
J.EMPL_RCD
J.EMPL_STATUS
J.EMPL_TYPE
J.REG_TEMP
J.FULL_PART_TIME
J.PAYGROUP
[$column1] &COVRG_CD=char
B.COVERAGE_ELECT
B.COVERAGE_ELECT_DT
[$column2] &b.coverage_begin_Dt=date
[$column3] &b.coverage_end_dt=date
B.BENEFIT_NBR
 if rtrim($column2,' ') = 'B.EFFDT'
    let $begin_dt_crit = 'D.effdt <= '||''''||&b.coverage_begin_dt||''''
 else
    let $begin_Dt_crit = 'D.coverage_begin_dt <= '||''''||&b.coverage_begin_dt||''''
 end-if
 !show &j.emplid
  if &b.coverage_elect = 'E'
  else
     do get-benefit-plan
  end-if

  do write-temp-table

FROM  [$record]

WHERE  A.BENEFIT_PROGRAM = $benefit_program

AND    A.EFFDT           =
      (SELECT MAX(EFFDT)
       FROM   PS_BEN_PROG_PARTIC
       WHERE  EMPLID     = A.EMPLID
       AND    EMPL_RCD  = A.EMPL_RCD
       AND    EFFDT     <= $ThruDate)

AND    PD.EMPLID = A.EMPLID

AND    J.EMPLID    = A.EMPLID
AND    J.EMPL_RCD = A.EMPL_RCD

AND    j.effdt           =
      (Select Max(effdt)
       From   ps_job
       Where  emplid     = j.emplid
       And    EMPL_RCD  = j.EMPL_RCD
       And    effdt     <= $ThruDate)

AND    j.effseq         =
      (Select Max(effseq)
       From   ps_job
       Where  emplid    = j.emplid
       And    EMPL_RCD = j.EMPL_RCD
       And    effdt     = j.effdt)

AND    B.EMPLID    = A.EMPLID
AND    B.EMPL_RCD = A.EMPL_RCD

AND [$In-Coverage-Elect]
AND [$birthdate_crit]
AND [$max_begin_dt_crit]
AND   [$GEXXX912_Include_Benefit_Plan_Criteria]

ORDER BY A.BENEFIT_PROGRAM,
         B.PLAN_TYPE,
	 B.BENEFIT_PLAN,
	 PD.NAME
End-SELECT
!SXK 06/29/1999 Begin
do select-from-temp-table
do delete-from-temp-table
!SXK 06/29/1999 End

End-Procedure


!********************************************
Begin-Procedure Get-Benefit-Plan
!********************************************
 !show $begin_dt_crit
begin-select 
c.benefit_plan
 move &c.benefit_plan to $benefit_plan
 !show &c.benefit_plan
from [$record_2]
where c.emplid = &j.emplid
and c.EMPL_RCD = &j.EMPL_RCD
and c.plan_type = &b.plan_type
and c.BENEFIT_NBR = &b.BENEFIT_NBR
and c.coverage_elect = 'E'
and c.effdt = (Select max(D.effdt)
		from [$record_1]
		where D.emplid = c.emplid
		and D.EMPL_RCD = c.EMPL_RCD
		and D.plan_type = c.plan_type
		and D.BENEFIT_NBR = c.BENEFIT_NBR
		and D.benefit_plan = c.benefit_plan
		and D.coverage_elect = 'E'
                and [$begin_Dt_crit])
end-select

end-procedure

!***************************************
Begin-Procedure Create-Temp-Table
!***************************************
!SXK 09/14/1999 Modified to have TE7TOOLS001 tablespace
begin-sql 
CREATE TABLE [$tablename](
	BENEFIT_PROGRAM   VARCHAR2(3) NOT NULL,
	PLAN_TYPE         VARCHAR2(2) NOT NULL,
	BENEFIT_PLAN      VARCHAR2(6) NOT NULL,
	DEPTID            VARCHAR2(10) NOT NULL,
	NAME              VARCHAR2(50) NOT NULL,
	EMPLID            VARCHAR2(11) NOT NULL,
	EMPL_STATUS       VARCHAR2(1) NOT NULL,
	EMPL_TYPE         VARCHAR2(1) NOT NULL,
	REG_TEMP          VARCHAR2(1) NOT NULL,
	FULL_PART_TIME    VARCHAR2(1) NOT NULL,
	PAYGROUP          VARCHAR2(3) NOT NULL,
	COVRG_CD          VARCHAR2(2) NOT NULL,                     !ITG # 73144 isdvmxr 15/03/2010
	COVERAGE_ELECT    VARCHAR2(1) NOT NULL,
	COVERAGE_ELECT_DT DATE,
	COVERAGE_BEGIN_DT DATE,
	COVERAGE_END_DT   DATE)
       TABLESPACE TE7TOOLS001 
end-sql
!begin-sql
!CREATE UNIQUE INDEX PS_GEX_R_GEXBN004_1 ON PS_GEX_R_GEXBN004
! (BENEFIT_PROGRAM ASC,
!	PLAN_TYPE ASC,
!	BENEFIT_PLAN ASC,
!	NAME ASC,
!	COVERAGE_ELECT,
!	COVERAGE_BEGIN_DT) TABLESPACE PYINDEX
!end-sql
end-procedure

!***************************
Begin-Procedure write-temp-table
!***************************
begin-sql
insert into [$tablename]
values
(&a.benefit_program,
&b.plan_type,
$benefit_plan,
&j.deptid,
&pd.name,
&j.emplid,
&j.empl_Status,
&j.empl_type,
&j.reg_temp,
&j.full_part_time,
&j.paygroup,
&covrg_cd,
&b.coverage_elect,
&b.coverage_elect_dt,
&b.coverage_begin_dt,
&b.coverage_end_Dt)
end-sql
end-procedure
!SXK 06/29/1999 End
!***************************
begin-procedure select-from-temp-table
!*************************** 
Begin-SELECT
T.BENEFIT_PROGRAM ()   On-Break  Level=1
	               PRINT=NEVER
		       SAVE=$PREV_BENEFIT_PROGRAM
		       after=Benefit-Program-Change
!                       after=new-page

T.PLAN_TYPE       ()   On-Break  Level=2
	               PRINT=NEVER
		       SAVE=$PREV_PLAN_TYPE
		       after=PLAN-TYPE-CHANGE

T.BENEFIT_PLAN    ()   On-Break  Level=3
		       PRINT=NEVER
		       SAVE=$PREV_BENEFIT_PLAN
		       after=BENEFIT-PLAN-CHANGE

#ifdef DB2ALL
  let $Plan_Type = Edit(&T.Plan_Type, 'XXXX')
#else
#ifdef MICROSOFT
  let $Plan_Type = Edit(&T.Plan_Type, 'XXXX')
#else
  let $Plan_Type = &T.Plan_Type
#endif
#endif
  LOOKUP PLAN-TYPES $Plan_Type $PlanDesc

  move &T.Benefit_Plan to $Benefit_Plan

  add 1 to #BenefitProgramTotal
  add 1 to #PlanTypeTotal
  add 1 to #BenefitPlanTotal

  let $Deptid = &T.DEPTID
  do Get-Department-Name

T.DEPTID
T.NAME
T.EMPLID
T.EMPL_STATUS
T.EMPL_TYPE
T.REG_TEMP
T.FULL_PART_TIME
T.PAYGROUP
T.COVRG_CD
T.COVERAGE_ELECT
T.COVERAGE_ELECT_DT
T.COVERAGE_BEGIN_DT
T.COVERAGE_END_DT

  if $rpt_type = 'D' Or
     $rpt_type = ''
    Do Print-Record
  end-if

FROM  [$tablename] T

ORDER BY T.BENEFIT_PROGRAM,
         T.PLAN_TYPE,
	 T.BENEFIT_PLAN,
	 T.NAME
End-SELECT

End-Procedure

!***************************************
Begin-Procedure Print-Record
!***************************************
  print $PlanDesc              (+1,1)
  print &T.BENEFIT_PLAN        (0,12)
  print &T.DEPTID              (0,23)
  print $DeptNameAbbrv         (0,34)
  print &T.NAME               (0,45)
  print &T.EMPLID              (0,86)
  print &T.EMPL_STATUS         (0,99)
  print &T.EMPL_TYPE           (0,107)
  print &T.REG_TEMP            (0,113)
  print &T.FULL_PART_TIME      (0,119)
  print &T.PAYGROUP            (0,126)
  print &T.COVERAGE_ELECT      (0,133)

  if &T.Coverage_Elect = 'W'
    print 'Waived'             (0,140)
    do Format-DateTime(&T.Coverage_Elect_Dt, $out, {DEFDATE}, '','')
    print $out                 (0,152)
  else
    if $health_record = 'Y'
       let $CovrgCd = &T.Covrg_Cd
       let $CovrgEffdt = $ThruDate
       do Get-Covrg-Code-Descr
       let $HealthCoverage = $CovrgDescrShort
       print $HealthCoverage   (0,140)
    end-if
    do Format-DateTime(&T.Coverage_Begin_Dt, $out, {DEFDATE}, '','')
    print $out                 (0,152)
  end-if

  do Format-DateTime(&T.Coverage_Elect_Dt, $out1, {DEFCMP}, '', '')
  do Format-DateTime($AsOfToday, $out2, {DEFCMP}, '', '')
  if $out1 > $out2
    print '*'                  ()  !signify future effective date
  end-if

  if RTRIM(&T.Coverage_End_Dt, ' ') <> ''
    do Format-DateTime(&T.Coverage_End_Dt, $out, {DEFDATE}, '','')
    print $out                 (0,164)
  end-if

End-Procedure

!***************************************
Begin-Procedure New-Page
!***************************************
  new-page
End-Procedure

!***************************************
Begin-Procedure Benefit-Program-Change
!***************************************
  do Format-Number(#BenefitProgramTotal, $out, '99,999')

  if $rpt_type = 'S' Or
     $rpt_type = ''
    if #BenefitProgramTotal > 0
      use-report summary-report
      print 'Benefit Program Total:' (+1,1)
      print $benefit_program (0,+1)
      print $out (0,50)
      print ' ' (+2,1)
    end-if
  end-if

  if $rpt_type = 'D' Or
     $rpt_type = ''
    if #BenefitProgramTotal > 0
      use-report detail-report
      print 'Benefit Program Total:' (+1,1)
      print $out (0,+1)
    end-if
  end-if

  move 0 to #BenefitProgramTotal

  if $rpt_type = 'S' Or
     $rpt_type = ''
    use-report summary-report
    new-page
  end-if

  if $rpt_type = 'D' Or
     $rpt_type = ''
    use-report detail-report
    new-page
  end-if
End-Procedure


!************************************
Begin-Procedure Plan-Type-Change
!************************************
  let $bplantype_change = 'Y'
  do Format-Number(#PlanTypeTotal, $out, '99,999')

  if $rpt_type = 'S' Or
     $rpt_type = ''
    use-report summary-report
    print '      Plan Type Total:' (+2,1)
    print $planDESC (0,+1)
    print $out (0,50) 
    print '' (+1,1)
  end-if

  if $rpt_type = 'D' Or
     $rpt_type = ''
    use-report detail-report
    print '      Plan Type Total:' (+1,1)
    print $out (0,+1)
    print '' (+1,1)
  end-if

  move #plantypetotal to #check_total
  move 0 to #PlanTypeTotal
  let $bplantype_change = 'N'

End-Procedure


!************************************
Begin-Procedure Benefit-Plan-Change
!************************************
  do Format-Number(#BenefitPlanTotal, $out, '99,999')

  if $rpt_type = 'S' Or
     $rpt_type = ''
    use-report summary-report
    print '   Benefit Plan Total:' (+1,1)
    print $prev_benefit_plan (0,+1)
    print $out (0,50)
  end-if

  if $rpt_type = 'D' Or
     $rpt_type = ''
    use-report detail-report
    print '   Benefit Plan Total:' (+2,1)
    print $out (0,+1)
    print '' (+1,1)
  end-if

  move 0 to #BenefitPlanTotal

End-Procedure

!*********************************************************************
!Drop temporary reporting table
!*********************************************************************
begin-procedure drop-temp-table
begin-sql on-error=skip 
DROP TABLE [$tablename]
end-sql
end-procedure
begin-procedure skip
end-procedure
!*********************************************************************
!DELETE temporary reporting table
!*********************************************************************
begin-procedure delete-from-temp-table
begin-sql 
DELETE from [$tablename]
end-sql
end-procedure

! *----------------------------------------------------------------------*
!SXK 09/14/1999 Begin
!#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'askftd.sqc'
!SXK 09/14/1999 End
#include 'gexxx920.sqc'  !Get ben single row run control
#Include 'gexxx912.sqc'  !Get gex_rc_ben_plan run controls
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getcvgcd.sqc'  !Get-Covrg-Code-Descr procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Format-DateTime procedures
#Include 'number.sqc'    !Format-Number procedure
#include 'gexxx911.sqc'
#Include 'stdapi.sqc'    !Update Process API
! *------------------------* End Of Report *-----------------------------*
