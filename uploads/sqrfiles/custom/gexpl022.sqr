!***********************************************************************
!  GEXPL022:  RMC Health & Welfare Report (Last Name [alpha] Sort)     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPL022:             RMC Health & Welfare Report - sorted by name   *
!                                                                      *
! Narrative:		This is a clone of GEXPL014.  This version is  *
!                       breaks and is sorted by name  The original pgm *
!                       creates a monthly report for RMC that contains *
!                       employee information required by the union to  *
!                       administer the Health & Welfare benefit.       *
!                       It had breaks on provider, deptid, employee    *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           pay_calendar                                   *
!                       ben_defn_optn                                  *
!                       ben_defn_pgm                                   *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                       benef_plan_tbl                                 *
!                       earnings_bal                                   *
!                       pay_line                                       *
!                       pay_check                                      *
!                       pay_deduction                                  *
!                       health_benefit                                 *
!                                                                      *
! Written by:           Susan Mahady                                   *
!                                                                      *
! Normally Run:	        Monthly                                        *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Plan Type(s)                                 *
!                         Vendor ID(s)                                 *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS   DATE       DESCRIPTION OF THE CHANGE                     *
!***********************************************************************
!  SCM     09/05/2001   Initial creation                               *
!                                                                      *
!  GBD     07/15/2002   Added Fieldvalue to effective dated selection  *
!                       of the Load-Lookup procedure.                  *
!                       Corrected spacing issue with report output.    *
!                                                                      *
!  AXC     08/01/2002   Changed Provider to Vendor ID  8.3 Upgrade     *
!                                                                      *
!  GBD     10/16/2002   Modified code to eliminate multiple row select.*
!  GEX-CXB  09/11/2007  XLATTABLE table has been renamed to PSXLATITEM *
!			Comment out the Language_cd field.             *
!			Comment out the procedure 'Set-Optimizer-Goal' * 
!  GEX-TLL 03/31/2008   Added deptid in order by clause		       *
!  DXS     04/10/2008   Changed sql in main procedure                  *
!  DXS     04/11/2008   Added procedure Get-Correct-Vendor to resolve  *
!                       sorting issues between 8.3 and 9.0             *
! GEX_SEC_REENG 2015-04-29 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************

#Include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

!GBD 07/15/2002 Begin
#define #column1     1
#define #column2    27
#define #column2a   38
#define #column3    46
#define #column4    58
!#define #column5    68 
#define #column5    69 
!#define #column6    80
#define #column6    81
!#define #column7    86
#define #column7    87
!#define #column8    94
#define #column8    95
!#define #column9   102
#define #column9   103
!#define #column10  112
#define #column10  114
!#define #column11  123
#define #column11  126
!#define #column12  134
#define #column12  138
!#define #column13  145
#define #column13  149
!#define #column14  162
#define #column14  164
#define #column15  168


Begin-Heading 9
#debug9 Show 'Begin-Heading'

#Include 'stdhdg01.sqc'

  Print $Reporting_Period      (3,) Center
  Position (+2) 

  Print 'IN STORE'             (+2,{#column3})
  Print 'SERVICE'              (+0,{#column4})
  Print 'REG'                  (+0,{#column5})
  Print 'EMPL'                 (+0,{#column6})
  Print 'ACTION'               (+0,{#column8})
  Print 'EFF'                  (+0,{#column9})
  Print 'BENEFIT'              (+0,{#column10})
!  Print ' PREVIOUS'            (+0,{#column12})
  Print '  PREVIOUS'           (+0,{#column12})
!  Print '  CURRENT'            (+0,{#column11})
  Print '   CURRENT'           (+0,{#column11})
!  Print '   MTD BENEFIT'       (+0,{#column13})
  Print '  MTD BENEFIT'        (+0,{#column13})

  Print 'EMPLOYEE NAME'        (+1,{#column1})
  Print 'SSN'                  (+0,{#column2})
  Print 'DEPTID'               (+0,{#column2A})         
  Print 'DEPARTMENT'           (+0,{#column3})
  Print 'DATE'                 (+0,{#column4})
  Print 'TEMP'                 (+0,{#column5})
  Print 'STAT'                 (+0,{#column6})
  Print 'ACTION'               (+0,{#column7})
  Print 'REASON'               (+0,{#column8})
  Print 'DATE'                 (+0,{#column9})
  Print 'TERM DATE'            (+0,{#column10})
!  Print '  MTD HRS'            (+0,{#column11})
  Print '   MTD HRS'           (+0,{#column11})
!  Print '  MTD HRS'            (+0,{#column12})
  Print '   MTD HRS'           (+0,{#column12})
!  Print '     PAID'            (+0,{#column13})
  Print '         PAID'        (+0,{#column13})
  Print 'VL'                   (+0,{#column14})
!  Print 'PROVIDER'             (+0,{#column15})
  Print 'VENDOR ID'             (+0,{#column15})

!  Print '-'                    (+1,{#column1},27)  Fill
  Print '-'                    (+1,{#column1},25)  Fill
  Print '-'                    (+0,{#column2},09)  Fill
  Print '-'                    (+0,{#column2A},06) Fill
  Print '-'                    (+0,{#column3},10)  Fill
!  Print '-'                    (+0,{#column4},08)  Fill
  Print '-'                    (+0,{#column4},10)  Fill
  Print '-'                    (+0,{#column5},10)  Fill
  Print '-'                    (+0,{#column6},04)  Fill
  Print '-'                    (+0,{#column7},06)  Fill
  Print '-'                    (+0,{#column8},06)  Fill
!  Print '-'                    (+0,{#column9},08)  Fill
  Print '-'                    (+0,{#column9},10)  Fill
!  Print '-'                    (+0,{#column10},09) Fill
  Print '-'                    (+0,{#column10},10) Fill
  Print '-'                    (+0,{#column11},10) Fill
  Print '-'                    (+0,{#column12},10) Fill
!  Print '-'                    (+0,{#column13},14) Fill
  Print '-'                    (+0,{#column13},13) Fill
  Print '-'                    (+0,{#column14},2)  Fill
  Print '-'                    (+0,{#column15},8)  Fill
!GBD 07/15/2002 End
End-Heading


Begin-Report
#debug9 Show 'Begin-Report'
!GEX-CXB    FCIL   09/11/07  commneted Begin
  !Do Set-Optimizer-Goal
!GEX-CXB    FCIL   09/11/07 Commented   End

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Do P100-Start
  Do P200-Main-Process
  Do P300-Finish

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
End-Report


Begin-Procedure Set-Optimizer-Goal
  Begin-SQL
  
    Alter Session Set OPTIMIZER_GOAL=RULE;
  
  End-SQL
End-Procedure


Begin-Procedure P100-Start
#debug9 Show 'P100-Start'

  Move 'GEXPL022'                    To $ReportID
  Move 'RMC HEALTH & WELFARE REPORT-SORTED BY LAST NAME' To $ReportTitle

  Show '$ReportID=' $ReportID
  Show '$ReportTitle=' $ReportTitle

  If $prcs_process_instance = ''

    Move '''' to $ProviderString
    Display 'Enter Vendor ID or leave blank to exit.'
    While 1=1
      Input $Provider maxlen=6 'Provider ID'
      if RTRIM($Provider, ' ') = ''
        concat '''' with $ProviderString
        break
      end-if
      if $ProviderString <> ''''
        concat ''',''' with $ProviderString
      end-if
      concat $Provider with $ProviderString
    End-While

    let $Vendor_ID = $Provider

    if $ProviderString = ''''''
      let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = '1=1'
      let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA = 'ALL'
    else
      let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = 'bpt.Vendor_id In (' || $ProviderString || ')'
      let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA = $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA
    end-if

    Move '''' to $PlanTypeString
    Display 'Enter Plan Type or leave blank to exit.'
    While 1=1
      Input $PlanType Maxlen=2 'Plan Type'
      Uppercase $PlanType
      if RTRIM($PlanType, ' ') = ''
        concat '''' with $PlanTypeString
        break
      end-if
      if $PlanTypeString <> ''''
        concat ''',''' with $PlanTypeString
      end-if
      concat $PlanType with $PlanTypeString
    End-While

    if $PlanTypeString = ''''''
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2 = '1=1'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
    else
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2 = 'hb1.plan_type In (' || $PlanTypeString || ')'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = 'bpt.plan_type In (' || $PlanTypeString || ')'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
    end-if

  Else

    Let $GEXXX912_Plan_Type_Alias = 'hb1.plan_type'
    Let $GEXXX912_Benefit_Plan_Alias = 'hb1.benefit_plan'
    Do GEXXX912-Select-Benefit-Plan-Parameters
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2 = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA

    Let $GEXXX912_Plan_Type_Alias = 'bpt.plan_type'
    Let $GEXXX912_Benefit_Plan_Alias = 'bpt.benefit_plan'
    Do GEXXX912-Select-Benefit-Plan-Parameters

    Let $GEXXX927_Vendor_ID_Alias = 'bpt.Vendor_id'
    Do GEXXX927-Select-Vendor-ID-Parameters

  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  If $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
    Display 'At least one plan type parameter must be specified'
    Stop
  End-If

  If $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = '1=1'
    Display 'At least one vendor id parameter must be specified'
    Stop
  End-If

  Let $X000_ORDER_BY = 'Employee Name'

  Show '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA  = '   $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA
  Show '$GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA      = '   $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA

  Do Get-Calendar-Year-Id    !getbalid.sqc

  Do P140-Get-Last-Confirmed-Pay
!**************************************************** TEMP for TESTING  REMOVE FOR PRODUCTION
!  let $pay_end_dt = '28-JUL-2001'
!  show 'temporary pay end date:  ' $pay_end_dt
!****************************************************
  Do P150-Print-Cover-Page
  Do P170-Get-Xlat-Lookup
End-Procedure


Begin-Procedure P140-Get-Last-Confirmed-Pay
#debug9 Show 'P140-Get-Last-Confirmed-Pay'

Begin-Select Loops=1
pay_end_dt
To_Number(To_Char(pay_end_dt,'MM'))                   &balance_period
To_Number(To_Char(pay_end_dt,'YYYY'))                 &balance_year
To_Char(Add_Months(pay_end_dt,1),'fmMonth YYYY')      &period
Last_Day(pay_end_dt)                                  &current_month_end
Last_Day(Add_Months(pay_end_dt,-1))                   &prev_month_end
Last_Day(Add_Months(pay_end_dt,1))                    &next_month_end
To_Number(To_Char(Add_Months(pay_end_dt,-1),'MM'))    &prev_month_balance_period
To_Number(To_Char(Add_Months(pay_end_dt,-1),'YYYY'))  &prev_month_balance_year

  Let $AsOfDate         = &pay_end_dt
  Let $pay_end_dt       = &pay_end_dt
  Let #balance_year     = &balance_year
  Let #balance_period   = &balance_period
  Let $Reporting_Period = &period

  Let $current_month_begin = '01-'||Substr($pay_end_dt,4,8)
  Let $current_month_end   = &current_month_end
  Let $next_month_end      = &next_month_end
  Let $prev_month_begin    = '01-'||Substr(&prev_month_end,4,8)

  let #balance_qtr = #balance_period
  let #balance_qtr = ((#balance_qtr - 1)/ 3) + 1
  do Format-Number(#balance_qtr, $balance_qtr, '9.99') !avoid rounding the integer portion
  move $balance_qtr to $balance_qtr x     !save the integer portion
  let #balance_qtr = $balance_qtr

  Let #prev_month_balance_year   = &prev_month_balance_year
  Let #prev_month_balance_period = &prev_month_balance_period

  Show 'Report will contain balances for the month of ' $Reporting_Period
  Show 'Last confirmed pay end date:  ' $pay_end_dt

  If Rtrim($pay_end_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  End-If

From   ps_pay_calendar

Where  pay_end_dt         =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  pay_end_dt <= $AsOfToday
       And    pay_confirm_run = 'Y')

And    pay_confirm_run = 'Y'
End-Select
End-Procedure


begin-procedure P150-Print-Cover-Page
#debug9 Show 'P150-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,1)
  Print '$Prcs_OPRID          = '                             (+2,5)
  Print $Prcs_OPRID                                           (0,+2)
  Print '$PRCS_RUN_CNTL_ID    = '                             (+1,5)
  Print $PRCS_RUN_CNTL_ID                                     (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,2)
  Print '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = '  (+2,5)
  Print $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA       (0,+2)
  Print '$GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA     = '  (+2,5)
  Print $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA           (0,+2)

  Print 'Report will contain balances for the month of'       (+2,5)
  Print $Reporting_Period                                     (0,+1)
  Print 'Last confirmed pay end date:'                        (+2,5)
  Print $pay_end_dt                                           (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $X000_ORDER_BY                                        (+0,+2)

  Let #PAGE-COUNT = 0
 
  New-Page
End-Procedure


begin-procedure P170-Get-Xlat-Lookup
#debug9 Show 'P170-Get-Xlat-Lookup'

  Let $Where = '     x.fieldname   = ''REG_TEMP''' ||
	       ' And x.eff_status  = ''A''' ||
	!GEX-CXB    FCIL   09/11/07  Commented Begin
	       !' And x.language_cd = ''ENG''' ||
	!GEX-CXB    FCIL   09/11/07  Commented End
	       ' And x.effdt       = (Select Max(effdt)' ||
	       !GEX-CXB    FCIL   09/11/07   Begin
	       !'                      From   xlattable x1' ||  ! CXB Commented
	       '                      From   PSXLATITEM x1' ||  ! CXB Added
	       !GEX-CXB    FCIL   09/11/07   End
	       '                      Where  x1.fieldname    = x.fieldname' ||
!GBD 07/15/2002 Begin
!	       '                      And    x1.language_cd  = ''ENG''' ||
	!GEX-CXB    FCIL   09/11/07  Commented Begin
	       !'                      And    x1.language_cd  = x.language_cd' ||
	!GEX-CXB    FCIL   09/11/07  Commented End
	       '                      And    x1.fieldvalue  = x.fieldvalue' ||
!GBD 07/15/2002 End
	       '                      And    x1.effdt       <= ''' || $pay_end_dt || '''' ||
	       '                      And    x1.eff_status   = ''A'')'

  Load-Lookup
    Name=XlatLookup
    Rows=10
 !GEX-CXB    FCIL   09/11/07   Begin
   ! Table='XLATTABLE X'  ! CXB Commented
    Table='PSXLATITEM X'  ! CXB Added
 !GEX-CXB    FCIL   09/11/07   End
    Key='X.FIELDVALUE'
    Return_Value='X.XLATSHORTNAME'
    Where=$Where
    Quiet
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
 
  Let $Data-Found-Flag = 'N'

Begin-Select

per.name            ()   On-Break    Level=1
                                     Print=Never 

j.emplid            ()   On-Break    Level=2
                                     Print=Never
              
j.empl_rcd         ()   On-Break    Level=3
                                     Print=Never
                                     After=P290-Employee-Break   
bpt.vendor_id
j.deptid                ! DXS, 04/10/08, pl changed to j 
bdp.gex_spcl_accum_cd
e.service_dt
per.birthdate
per.emplid  
j.company
j.effdt
j.acct_cd
j.empl_status
j.reg_temp
j.full_part_time
j.gex_volun_low_hrs
pd.ded_cur

bpt.plan_type		! DXS, 04/11/08. Added this to be used in the new procedure Get-Correct-Vendor

  Let $Data-Found-Flag = 'Y'

  Let $Provider              = &bpt.vendor_id
  Let $Vendor_ID             = &bpt.vendor_id
  Let $Deptid                = &j.deptid    ! DXS, 04/10/08, pl change to j
  Let $per.name              = &per.name
  Let $j.company             = &j.company
  Let $j.emplid              = &j.emplid
  Let #j.empl_rcd            = &j.empl_rcd
  Let $bdp.gex_spcl_accum_cd = &bdp.gex_spcl_accum_cd
  Let $e.service_dt          = &e.service_dt
  Let $per.birthdate         = &per.birthdate
  Let $per.ssn               = &per.emplid  
  Let $j.effdt               = &j.effdt
  Let $j.acct_cd             = &j.acct_cd
  Let $j.empl_status         = &j.empl_status
  Let $j.reg_temp            = &j.reg_temp
  Let $j.full_part_time      = &j.full_part_time
  Let $j.gex_volun_low_hrs   = &j.gex_volun_low_hrs
  Let #ded_cur               = &pd.ded_cur
  Let $bpt.plan_type	     = &bpt.plan_type ! DXS, 04/11/08. Added this to be used 
					      ! in the new procedure Get-Correct-Vendor

  Add #ded_cur To #grs_mtd

From   ps_personal_data          per,
       ps_employment             e,
       ps_job                    j,
       ps_ben_defn_pgm           bdp,
       ps_ben_defn_optn          bdo,
       ps_benef_plan_tbl         bpt,
       ps_pay_cal_bal_id         pcbi,
       ps_pay_line               pl,
       ps_pay_check              pc,
       ps_pay_deduction          pd

Where  per.emplid                = j.emplid

And    e.emplid                  = j.emplid
And    e.empl_rcd               = j.empl_rcd
And    j.effdt                   =
      (Select Max(effdt)
       From   ps_job
       Where  emplid             = j.emplid
       And    empl_rcd          = j.empl_rcd
       And    effdt             <= $pay_end_dt)

And    j.effseq                  =
      (Select Max(effseq)
       From   ps_job
       Where  emplid             = j.emplid
       And    empl_rcd          = j.empl_rcd
       And    effdt              = j.effdt)

And    bpt.effdt                 =
      (Select Max(effdt)
       From   ps_benef_plan_tbl
       Where  plan_type          = bpt.plan_type
       And    benefit_plan       = bpt.benefit_plan
       And    effdt             <= $pay_end_dt)

!GBD 10/16/2002 Begin
And    bdo.benefit_program       = bdp.benefit_program
And    bdo.effdt                 = bdp.effdt
And    bdo.plan_type             = bpt.plan_type
And    bdo.benefit_plan          = bpt.benefit_plan

!And    bdo.effdt                 =
!      (Select Max(effdt)
!       From   ps_ben_defn_optn
!       Where  benefit_program    = bdo.benefit_program
!       And    effdt             <= $pay_end_dt
!       And    plan_type          = bdo.plan_type
!       And    option_id          = bdo.option_id)

!And    bdp.benefit_program       = bdo.benefit_program
!GBD 10/16/2002 End

And    bdp.effdt                 =
      (Select Max(effdt)
       From   ps_ben_defn_pgm
       Where  benefit_program    = bdp.benefit_program
       And    effdt             <= $pay_end_dt)

And    pcbi.company              = pc.company
And    pcbi.paygroup             = pc.paygroup
And    pcbi.balance_id           = 'CY'
And    pcbi.balance_year         = #balance_year
And    pcbi.balance_period       = #balance_period

And    pc.emplid                 = j.emplid
And    pc.empl_rcd              = j.empl_rcd

And    pc.pay_end_dt             = pcbi.pay_end_dt

And    pd.company                = pc.company
And    pd.paygroup               = pc.paygroup
And    pd.pay_end_dt             = pc.pay_end_dt
And    pd.off_cycle              = pc.off_cycle
And    pd.page_num                  = pc.page_num
And    pd.line_num                  = pc.line_num
And    pd.sepchk                 = pc.sepchk

And    pl.company                = pc.company
And    pl.paygroup               = pc.paygroup
And    pl.pay_end_dt             = pc.pay_end_dt
And    pl.off_cycle              = pc.off_cycle
And    pl.page_num                  = pc.page_num
And    pl.line_num                  = pc.line_num

And    pd.plan_type              = bpt.plan_type
And    pd.benefit_plan           = bpt.benefit_plan
And    pd.ded_class              = 'N'

And   [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]
And   [$GEXXX927_INCLUDE_VENDOR_ID_CRITERIA]

!GEX-TLL 03/31/2008 HCM 9.0 Begin
!Order By per.name,j.emplid,j.empl_rcd  
Order By per.name,j.emplid,j.empl_rcd,pl.deptid
!GEX-TLL 03/31/2008 HCM 9.0 End

End-Select
End-Procedure


Begin-Procedure P220-Get-Benefit-Termination-Row
#debug9 Show 'P220-Get-Benefit-Termination-Row'
Begin-Select
Min(hb1.coverage_begin_dt) &hb1.coverage_begin_dt

From   ps_health_benefit hb1

Where  hb1.emplid         = $j.emplid
And    hb1.empl_rcd      = #j.empl_rcd

And   [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2]

And    hb1.effdt          =
      (Select Max(effdt)
       From   ps_health_benefit
       Where  emplid      = hb1.emplid
       And    empl_rcd   = hb1.empl_rcd
       And    plan_type   = hb1.plan_type)

And    hb1.coverage_begin_dt Between $prev_month_begin
                                 And $next_month_end

And    hb1.coverage_elect = 'T'
End-Select
End-Procedure


Begin-Procedure P230-Get-Leave-Begin-Date
#debug9 Show 'P230-Get-Leave-Begin-Date'
  Let $Status-Change = 'N'
Begin-Select
JOB.EFFDT
JOB.EMPL_STATUS
JOB.ACTION
JOB.ACTION_REASON

  If &JOB.EMPL_STATUS = $J.EMPL_STATUS And
      $Status-Change = 'N'
    Let $Effective-Date = &JOB.EFFDT
    Let $Action         = &JOB.ACTION
    Let $Action_Reason  = &JOB.ACTION_REASON
    Let $Status-Change = 'N'
  Else
    Let $Status-Change = 'Y'
  End-If

FROM   PS_JOB JOB

WHERE  EMPLID     = $J.EMPLID
AND    EMPL_RCD  = #J.EMPL_RCD
AND    EFFDT     <= $J.EFFDT
ORDER BY JOB.EFFDT DESC, JOB.EFFSEQ DESC
End-Select
End-Procedure


Begin-Procedure P235-Get-Status-Date
#debug9 Show 'P235-Get-Status-Date'
  Let $Reg-Temp-Change = 'N'
Begin-Select
J1.EFFDT
J1.REG_TEMP
J1.ACTION
J1.ACTION_REASON
J1.EMPL_STATUS

  If &J1.REG_TEMP = $J.REG_TEMP And
      $Reg-Temp-Change = 'N'
    Let $Reg-Temp-Change = 'N'
    If &J1.EMPL_STATUS <> 'T'
      Let $Effective-Date = &J1.EFFDT
      Let $Action         = &J1.ACTION
      Let $Action_Reason  = &J1.ACTION_REASON
    End-If
  Else
    Let $Reg-Temp-Change = 'Y'
  End-If

FROM   PS_JOB J1

WHERE  EMPLID     = $J.EMPLID
AND    EMPL_RCD  = #J.EMPL_RCD
AND    EFFDT     <= $J.EFFDT
ORDER BY J1.EFFDT DESC, J1.EFFSEQ DESC
End-Select
End-Procedure


Begin-Procedure P240-Get-Hours
#debug9 Show 'P240-Get-Hours'

  Let #hrs_mtd = 0

Begin-Select
eb.hrs_mtd

  Let #hrs_mtd = &eb.hrs_mtd

From   ps_earnings_bal eb

Where  eb.emplid              = $j.emplid
and    eb.empl_rcd	      = #j.empl_rcd
And    eb.company             = $j.company
And    eb.balance_id          = 'CY'
And    eb.balance_year        = #year
And    eb.balance_period      = #period
And    eb.spcl_balance        = 'Y'
And    eb.erncd               = $bdp.gex_spcl_accum_cd
End-Select
End-Procedure


Begin-Procedure P250-Format-Record
#debug9 Show 'P250-Format-Record'

  Lookup XlatLookup $j.reg_temp $reg_temp

  Let $acctcd = $j.acct_cd
  Do Get-Acct-cd-descr

  If $j.gex_volun_low_hrs = 'Y'
    Let $gex_volun_low_hrs = 'Y'
  Else
    Let $gex_volun_low_hrs = ''
  End-If

  Do Format-DateTime($e.service_dt, $Service_Dt, {DEFMDY}, '', '')
  Do Format-DateTime($per.birthdate, $Birth_Date, {DEFMDY}, '', '')
  Do Format-DateTime($Effective-Date, $eff_dt, {DEFMDY}, '', '')
  Do Format-DateTime(&hb1.coverage_begin_dt, $Term_Date, {DEFMDY}, '', '')
End-Procedure


Begin-Procedure P260-Print-Record
#debug9 Show 'P260-Print-Record'
 #debug9 show $per.name ' ' $per.ssn ' ' $Deptid 
  do Get-Emp-Ssn ($per.ssn, $Ssn_Out) !GEX_SEC_REENG 2015-04-29 Vahini Katta
  Print $per.name                  (+1,{#column1},27)
  !Print $per.ssn                   (+0,{#column2}) !GEX_SEC_REENG 2015-04-29 Vahini Katta
  Print $Ssn_Out                   (+0,{#column2})  !GEX_SEC_REENG 2015-04-29 Vahini Katta
  Print $Deptid                    (+0,{#column2A})
  Print $AcctNameAbbrv             (+0,{#column3})
  Print $Service_Dt                (+0,{#column4})
  Print $reg_temp                  (+0,{#column5})
  Print $j.empl_status             (+0,{#column6})
  Print $Action                    (+0,{#column7})
  Print $Action_Reason             (+0,{#column8})
  Print $eff_dt                    (+0,{#column9})
  Print $Term_Date                 (+0,{#column10})
  Print #prev_hrs_mtd              (+0,{#column11})  Edit 999,999.99
  Print #curr_hrs_mtd              (+0,{#column12})  Edit 999,999.99
!  Print #grs_mtd                   (+0,{#column13})  Edit 999,999.99
  Print #grs_mtd                   (+0,{#column13})  Edit 99,999,999.99
  Print $gex_volun_low_hrs         (+0,{#column14})
!  Print $Provider                  (+0,{#column15})
  Print $Vendor_ID                  (+0,{#column15})
End-Procedure


! DXS, 04/11/08
! This procedure was create to remove the sorting issues between 8.3 and 9.0
!
begin-procedure Get-Correct-Vendor
	#debug9 show $j.emplid ' ' #j.empl_rcd ' ' $bpt.plan_type ' ' $pay_end_dt ' ' $Vendor_ID
begin-select 
bpt1.vendor_id &bpt1.vendor_id

   Let $Provider              = &bpt1.vendor_id
   Let $Vendor_ID             = &bpt1.vendor_id
	#debug9 show 'Vendor : ' $Vendor_ID

from ps_health_benefit hb, ps_benef_plan_tbl bpt1
where hb.emplid = $j.emplid
and hb.empl_rcd = #j.empl_rcd
and hb.plan_type = $bpt.plan_type
and bpt1.plan_type = hb.plan_type
and bpt1.benefit_plan = hb.benefit_plan
AND hb.coverage_begin_dt = (SELECT MAX(hb_ed.coverage_begin_dt)
            from ps_health_benefit hb_ed
            where hb_ed.emplid = hb.emplid
            and hb_ed.empl_rcd = hb.EMPL_RCD
            and hb_ed.benefit_plan != ' '
	    and hb_ed.plan_type = hb.plan_type
            AND hb_ed.coverage_begin_dt <= $pay_end_dt)
And bpt1.effdt =
        (Select Max(bpt1_ed.effdt)
            From ps_benef_plan_tbl bpt1_ed
            Where bpt1_ed.plan_type = bpt1.plan_type
            And bpt1_ed.benefit_plan = bpt1.benefit_plan
            And bpt1_ed.effdt <= $pay_end_dt)
end-select
end-procedure 


Begin-Procedure P290-Employee-Break
#debug9 Show 'P290-Employee-Break'

  #debug9 Show 'Doing Get-Correct-Vendor'
  do Get-Correct-Vendor

  #debug9 show 'Doing P220-Get-Benefit-Termination-Row'
  Do P220-Get-Benefit-Termination-Row
  #debug9 show '$j.empl_status ' $j.empl_status
  Evaluate $j.empl_status
    When = 'L'
    When = 'P'
    When = 'R'
    When = 'T'
      #debug9 show 'Doing P230-Get-Leave-Begin-Date'
      Do P230-Get-Leave-Begin-Date
      Break
    When-Other
      #debug9 show 'Doing P235-Get-Status-Date'
      Do P235-Get-Status-Date
  End-Evaluate

  Let #prev_hrs_mtd = 0
  Let #year   = #balance_year
  Let #period = #balance_period
  #debug9 show 'Doing P240-Get-Hours'
  Do P240-Get-Hours
  Let #prev_hrs_mtd = #hrs_mtd

  Let #curr_hrs_mtd = 0
  Let #year   = #prev_month_balance_year
  Let #period = #prev_month_balance_period
  #debug9 show 'Doing P240-Get-Hours again'
  Do P240-Get-Hours
  Let #curr_hrs_mtd = #hrs_mtd
  #debug9 show 'Doing P250-Format-Record'
  Do P250-Format-Record
  #debug9 show 'Doing P260-Print-Record'
  Do P260-Print-Record

  Add 1             To #Deptid-HW-Count
  Add #prev_hrs_mtd To #Deptid-HW-Previous-Hrs
  Add #curr_hrs_mtd To #Deptid-HW-Current-Hrs
  Add #grs_mtd      To #Deptid-HW-Amount

  Let #prev_hrs_mtd = 0
  Let #curr_hrs_mtd = 0
  Let #grs_mtd      = 0
End-Procedure

  
Begin-Procedure P300-Finish
#debug9 Show 'P300-Finish'

  Do P310-Print-Report-Totals

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
End-Procedure


Begin-Procedure P310-Print-Report-Totals
#debug9 Show 'P310-Print-Report-Totals'

  If $Data-Found-Flag <> 'Y'
    New-Page
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If
End-Procedure


#include 'gexxx912.sqc'  !Get plan type multiple row table
#include 'gexxx927.sqc'  !Get vendor id multiple row table
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'getactnm.sqc'  !Get-Account-Name procedure
#include 'getprvnm.sqc'  !Get-Provider-Name procedure
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'reset.sqc'     !Reset printer Procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'getgeid.sqc'   !Get SSN !GEX_SEC_REENG 2015-04-29 Vahini Katta