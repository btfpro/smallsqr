!***********************************************************************
! GEXPL001: LIGHT DUTY HOURS WEEKLY REPORT                             *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
! GEXPL001:             LIGHT DUTY HOURS WEEKLY REPORT                 *
!                                                                      *
! Narrative:                                                           *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    * 
!                       #debug7 data returned from sql calls           * 
!                                                                      *
! SQL Tables:           PS_PERSONAL_DATA                               * 
!                       PS_JOB                                         * 
!                       PS_EARNINGS_BAL                                *
!                                                                      *
! Written by:           Gene Davis                                     *                                                           
!                                                                      *
! Normally run:                                                        *
!                                                                      *
! Control Parms:        Company Division Code                          *
!                       Company                                        *
!                       Company/Paygroup                               *
!                       Deptid                                         *
!                       Acctcd                                         *                                           
!                       Empl_Status                                    *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  xxxx    GXD         12/18/1997     INITIAL CREATION                 *
!          JNB         04/19/1998     ADDED RUN CONTROL                * 
!          JDH         11/05/1998     FIXED RUN CONTROLS               * 
!          JNB         12/11/1998     Changed to Rule Mode             *
!	   SXK         10/20/1999     Modified to have union from
!					job_labor
!	   SXK         03/06/2000     Modified to use asofdate
!					from run control panel
!	   AXC 	       08/02/2002     Remove job Labor from Join. Union
!					Code now on Job. 8.3 UPgrade
! HR10703  CWB         05/17/2004     Many cosmetic revisions to the   *
!                                     report. Changes to break logic.  *      
!                                                                      *    
! GEX_SEC_REENG 2015-04-29 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************
!selection criteria
#define #x000_col_selection_criteria_a  02
#define #x000_col_selection_criteria_b  05

!line 1
#define #x000_col_union                 08
#define #x000_col_name                  16
#define #x000_col_emplid                44
#define #x000_col_jobcode               55
#define #x000_col_deptidovr             65
#define #x000_col_acctcdovr             75
#define #x000_col_glexpovr              85
#define #x000_col_employdate            95
#define #x000_col_hourlyrate            112
#define #x000_col_totalhrs              128
#define #x000_col_totalearnings	        140
	

#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 

!***********************************************************************
begin-heading 9
!***********************************************************************

#debug9 show 'begin-heading'

 #Include 'stdhdg01.sqc'

  let $temp_out = 'Company: '||$hold_company||' '||$CompanyName 
  print $temp_out       (4,) center
  print $Deptname      (+1,) center
  print  'UNION'             (+2,{#x000_col_union})     bold 
  print  'NAME'              (0,{#x000_col_name})       bold  
  print  'EMP#'              (0,{#x000_col_emplid})     bold
  print  'EMPLOYEE NAME'     (0,{#x000_col_name})       bold
  print  'JOB CODE'          (0,{#x000_col_jobcode})    bold
  print  'DEPT OVR'          (0,{#x000_col_deptidovr})  bold
  print  'ACCT OVR'          (0,{#x000_col_acctcdovr})  bold
  print  'GL OVR'            (0,{#x000_col_glexpovr})   bold
  print  'EMPLOYMENT DATE'   (0,{#x000_col_employdate}) bold
  print  'HOURLY RATE'       (0,{#x000_col_hourlyrate}) bold
  Print  'TOTAL HRS'         (0,{#x000_col_totalhrs})   bold 
  Print  'TOTAL EARNINGS'    (0,{#x000_col_totalearnings})  bold
  
end-heading


!*********************************************************************
!Initial processing, retrieving current dates and calls the main 
!procedure to do the processing.                                     
!*********************************************************************
begin-report

! JNB 12/11/1998   Added alter session and associated sqc
!  do Alter-session
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  show 'asoftoday=' $asoftoday

  do stdapi-init
  do p010-Init-Variables 
  do Get-Calendar-Year-Id
  
  let $firstcomp = 'Y'
  let $firstrec = 'Y'
  let #pass1a = 0
  let #pass1 = 0
  let #empl-count = 0

  do Report
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term
  do Reset
end-report

!***********************************************************************
begin-procedure p010-Init-Variables
!***********************************************************************

#debug9 show 'P010-Init-Variables'

  let $x000_new_page_flag = 'N'
  
  let $ReportID           = 'GEXPL001'
  let $ReportTitle        = 'LIGHT DUTY HOURS WEEKLY REPORT'                         
  let $Country            = 'USA'

  show '$ReportID= '     $ReportID
  show '$ReportTitle = ' $ReportTitle   

  Do GEXXX951-Select-Oracle-Instance

  Let $GEXXX900_Company_Alias  = 'J.COMPANY'                           
  Let $GEXXX901_Company_Alias  = 'J.COMPANY' 
  Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'    
  Let $GEXXX902_Deptid_Alias   = 'J.DEPTID'  
  Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'  
  Let $GEXXX907_Div_CD_Alias   = 'GDT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias  = 'J.ACCT_CD'

  if $Prcs_process_instance = ''
	Do GEXXX950-Input-Parameters
  else
	Do GEXXX901-Select-Company-Paygroup-Parameters    
	Do GEXXX900-Select-Company-Parameters 
	Do GEXXX902-Select-Deptid-Parameters 
	Do GEXXX903-Select-Emp-Stat-Parameters          
	Do GEXXX907-Select-Div-CD-Parameters
	Do GEXXX909-Select-Acct-CD-Parameters

	Do GEXXX922-Select-Parameters
	let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
  end-if
 !SXK 10/20/1999 Modified c.union_cd to jl.union_cd
 !AXC 08/02/2002 Modified JL.UNION_CD to J.UNIONCODE 8.3 Upgrade
  let $X000_ORDER_BY = 'J.COMPANY, J.DEPTID, J.UNION_CD, J.JOBCODE, J.HOURLY_RT'

  if rtrim($X000_WHERE_SELECT_ASOFDATE, ' ' ) = ''
       let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
       LET $AsOfDate = $X000_WHERE_SELECT_ASOFDATE 
  else
       LET $AsOfDate = $X000_WHERE_SELECT_ASOFDATE 
  end-if

  do Get-Date-Codes
  let #AsOfYYYY = to_number($AsOfYYYY)
  let #AsOfMM   = to_number($AsOfMonth)

      show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA                =' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
	show '$GEXXX900_INCLUDE_COMPANY_CRITERIA               =' $GEXXX900_INCLUDE_COMPANY_CRITERIA
	show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA      =' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA   
	show '$GEXXX902_INCLUDE_DEPTID_CRITERIA                =' $GEXXX902_INCLUDE_DEPTID_CRITERIA
	show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA              =' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
	show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA               =' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA         
    
      show '$X000_WHERE_SELECT_ASOFDATE        ='  $X000_WHERE_SELECT_ASOFDATE 

	print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
	print '$Prcs_OPRID          ='                              (+2,{#x000_col_selection_criteria_b})
	print $Prcs_OPRID                                           (0,+2)
	print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
	print $PRCS_RUN_CNTL_ID                                     (0,+2)

	print 'SELECTION CRITERIA FOR THIS REPORT RUN:'           (+5,{#x000_col_selection_criteria_a})
	print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA                 (0,+2)
	print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA            (0,+2)
	print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA   (0,+2)
	print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA             (0,+2)
	print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA           (0,+2)
	print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA            (0,+2)
        print '$X000_WHERE_SELECT_ASOFDATE                     ='   (+1,{#x000_col_selection_criteria_b})
	print  $X000_WHERE_SELECT_ASOFDATE                          (0,+2)
        print 'Pay End Date                                    ='    (+1,{#x000_col_selection_criteria_b})
        print $pay_end_dt                                          (0,+2)
	print '$X000_ORDER_BY                                  =' (+1,{#x000_col_selection_criteria_b})
	print $X000_ORDER_BY    (0,+2)

	let #page-count = 0
	NEW-PAGE
	LET #PAGE-COUNT = 1

end-procedure


begin-procedure Report

date-time () hh:mi:ss &timeBegan
display 'Report Began: ' noline
display &timeBegan

 move 'N' to $Errorfound

 do process-employee-data

 if $sev-error = 'Y'
    goto report-exit
 end-if
  
Report-Exit:


  date-time () hh:mi:ss &timeProcess
  display #InputTran 99999 noline
  display ' Transactions Processed: ' noline
  display &timeProcess

end-procedure


begin-procedure process-employee-data


  Let $x100_Get_Employees_Data_Flag = 'N'
date-time () MM/DD/YYYY &curr_date

!move &curr_date to $curr_date
!SXK 03/06/00 Commented out the following as this does not
!use asoftoday populated on the run control panel
!do format-datetime($curr_date,$curr_Date_dbf_1,{DEFMDY},'','native')
!do Convert-To-DTU-Date($curr_Date_dbf_1,$curr_Date_1)

!let $curr_Date_mm = substr($curr_Date,1,2)
!let $curr_Date_dd = substr($curr_Date,4,2)
!let $curr_Date_yyyy = substr($curr_Date,7,4)

do convert-to-dtu-date($x000_where_select_asofdate,$asoftoday_dtu)
let #subtract_Days = 7
do dtu-subtract-days($asoftoday_Dtu, #subtract_Days, $curr_date_less7)
do Convert-From-DTU-Date($curr_date_less7, $curr_date_less7_dbf)

display $x000_where_select_asofdate

display $curr_date_less7_dbf

move 'N' to $rowfound

let #inputtran = 0

begin-select ON-ERROR=P900-SQL-Error-Found('Process-employee-data')
J.COMPANY               () on-break
			   procedure=Company-Change
			   print=never
			   if $firstcomp <> 'N'
			      move 'N' to $firstcomp
			      move &J.COMPANY to $hold_company
			      move &J.COMPANY to $company
                              do get-company-name
			   end-if




J.DEPTID            () on-break
			   procedure=Deptid-Change
			   print=never
			   if $firstrec <> 'N'
!			      do Initialize-Subheading
			      move 'N' to $firstrec
			      move &J.DEPTID to $hold_deptid
			      move &J.DEPTID to $deptid
			      do Get-Department-Name
!			      print $deptid   (+1,2)
!			      print $Deptname (0,+2)
!			      print ' '       (+1,1)
			   end-if
!SXK 10/20/1999 Begin - Modified from c.union_cd to jl.union_cd
!AXC 08/05/2002	Modified JL.Union_cd to j.union code 8.3 upgrade
J.UNION_CD           (0,9) on-break
			   After=Union-Change 
			   print=change/top-page

!J.JOBCODE            &jobcode
!
!  if #pass1a = 0
!     add 1 to #pass1a
!     move &jobcode to $jobcode
!     print $jobcode  (0,16)
!  end-if
!
!  if &jobcode <> $jobcode
!     move &jobcode to $jobcode
!     print $jobcode  (0,16)
!  end-if

A.NAME               &A.NAME
A.EMPLID             &Emplid

  if #pass1 = 0
     add 1 to #pass1
     move &Emplid   to $emplid
     move &A.NAME   to $name
     print $name     (0,16)
     print &emplid   (0,44)
  end-if

  if &Emplid <> $emplid
     move &A.NAME   to $name
     move &Emplid   to $emplid
     print $name     (0,16)
     print &emplid   (0,44)
  end-if

J.JOBCODE            (0,56)

C.SERVICE_DT       &service_dt      

  do Convert-To-DTU-Date(&service_dt, $serv_dt)
  let $serv_yy = substr($serv_dt,1,4)
  let $serv_mm = substr($serv_dt,6,2)
  let $serv_dd = substr($serv_dt,9,2)
  let $service_dt = $serv_mm||'/'||$serv_dd||'/'||$serv_yy
  print $service_dt (0,98)

j.gex_deptid_ovr
  move &j.gex_deptid_ovr to $Dept_ovr
  print $Dept_ovr     (0,67)
j.gex_acct_cd_ovr
  move &j.gex_acct_cd_ovr to $Acct_ovr
  print $Acct_ovr     (0,75)
j.gex_gl_exp_ovr
  move &j.gex_gl_exp_ovr to $Gl_ovr
  print $Gl_ovr     (0,85)
J.HOURLY_RT           (0,112)      EDIT 9,999.99

D.REG_HRS            &reg_hrs
D.OT_HRS             &ot_hrs

D.REG_EARNS          &reg_earns
D.OT_HRLY_EARNS      &ot_hrly_earns 

D.OFF_CYCLE          &off_cycle
  move &off_cycle to $off_cycle
D.PAGE_NUM              &page
  move &page to #page
D.LINE_NUM              &line
  move &line to #line
D.ADDL_NBR              &addl
  move &addl to #addl

J.PAYGROUP           &paygroup
  move &paygroup to $paygroup
D.PAY_END_DT         &pay_end_dt

  move 'Y' to $rowFound
  move 'N' to $errorfound
  add 1 to #inputtran
 
  move 0 to #total_hrs
  move 0 to #total_earns

  do Get-Other-Hours-Earnings
  
  move &Emplid         to $Emplid

  move &reg_hrs        to #reg_hrs
  move &ot_hrs         to #ot_hrs
  move &oth_hrs        to #oth_hrs

  move &reg_earns      to #reg_earns
  move &ot_hrly_earns  to #ot_hrly_earns
  move &oth_earns      to #oth_earns

  add #reg_hrs         to #total_hrs
  add #ot_hrs          to #total_hrs
  add #oth_hrs         to #total_hrs

  add #total_hrs       to #sub_tot_hrs
  add #total_hrs       to #grand_tot_hrs

  add #reg_earns       to #total_earns
  add #ot_hrly_earns   to #total_earns
  add #oth_earns       to #total_earns

  add #total_earns     to #sub_tot_earns
  add #total_earns     to #grand_tot_earns

  do Format-Number(#total_hrs, $tot_hrs, '999,999.99') 
  do Format-Number(#total_earns, $tot_earns, '999,999.99')
  print $tot_hrs       (0,127)
  print $tot_earns     (0,144)

  add 1 to #empl-count

!  display &Emplid noline
!  display ' ' noline
!  display &pay_end_dt

  if #current-line > 51
     new-page
  end-if
  print ' ' (+1,1)
  Let $x100_Get_Employees_Data_Flag = 'Y'

FROM PS_GEX_DEPT_TBL GDT,
     PS_PERSONAL_DATA A,
     PS_EMPLOYMENT C,
     PS_JOB j,
     PS_PAY_EARNINGS D
! AXC Remove Job_labor from Join 8.3 Upgrade ", ps_job_labor jl !SXK 10/20/1999 "

WHERE J.EMPLID = A.EMPLID

AND   J.EMPLID    = C.EMPLID
AND   J.EMPL_RCD = C.EMPL_RCD

AND   J.EMPLID    = D.EMPLID
AND   J.EMPL_RCD  = D.EMPL_RCD
AND   J.COMPANY   = D.COMPANY
AND   J.PAYGROUP  = D.PAYGROUP

AND   J.GEX_LIGHT_DUTY = 'Y'

AND  [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
AND  [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
AND  [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
AND  [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
AND  [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
AND  [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]

AND   J.EFFDT =
     (SELECT MAX(EFFDT)
	FROM   PS_JOB
	WHERE  EMPLID     = J.EMPLID
	AND    EMPL_RCD  = J.EMPL_RCD
	AND    EFFDT     <= $x000_where_select_asofdate)

AND   J.EFFSEQ =
     (SELECT MAX(EFFSEQ)
	FROM   PS_JOB
	WHERE  EMPLID     = J.EMPLID
	AND    EMPL_RCD  = J.EMPL_RCD
	AND    EFFDT      = J.EFFDT)
!AXC Remove JL join. 8.3 Upgrade
!SXK 10/20/1999 Begin
!And    jl.emplid              = j.emplid
!And    jl.empl_rcd           = j.empl_rcd

!And    jl.effdt                 =
!      (Select Max(effdt)
!       From   ps_job_labor
!       Where  emplid           = jl.emplid
!       And    empl_rcd        = jl.empl_rcd
!       And    effdt           <= $x000_where_select_asofdate)

!And    jl.effseq                =
!      (Select Max(effseq)
!       From   ps_job_labor
!       Where  emplid           = jl.emplid
!       And    empl_rcd        = jl.empl_rcd
!       And    effdt            = jl.effdt)

!SXK 10/20/99 End
!AXC 08/02/2002 End
AND   D.PAY_END_DT =
     (SELECT MAX(PAY_END_DT)
	FROM   PS_PAY_EARNINGS
	WHERE  COMPANY = D.COMPANY
	AND    PAYGROUP = D.PAYGROUP
!	AND    EMPLID = D.EMPLID
!	AND    OFF_CYCLE = D.OFF_CYCLE
!	AND    PAGE_NUM = D.PAGE_NUM
!	AND    LINE_NUM = D.LINE_NUM
!	AND    ADDL_NBR = D.ADDL_NBR
      AND    PAY_END_DT <= $x000_where_select_asofdate
	AND    PAY_END_DT >= $curr_Date_less7_dbf)

AND   J.DEPTID = GDT.DEPTID 

AND   GDT.EFFDT =
     (SELECT MAX(EFFDT)
      FROM   PS_GEX_DEPT_TBL
	WHERE  DEPTID = GDT.DEPTID
	AND    EFFDT <= $x000_where_select_asofdate) 

AND   GDT.SEQUENCE_NUMBER =
     (SELECT MAX(SEQUENCE_NUMBER)
      FROM   PS_GEX_DEPT_TBL
      WHERE  DEPTID = GDT.DEPTID
      AND    EFFDT  = GDT.EFFDT)

ORDER BY [$x000_order_by]

end-select

if $x100_Get_Employees_Data_Flag = 'N'
	print 'NO DATA SELECTED FOR THIS REPORT RUN'    (25,) CENTER
end-if

if $rowfound = 'N'
   display 'No Employees found for the Light Duty Weekly Report.' 
else

   move #empl-count to #sub-tot-empl-count
   add  #empl-count to #tot-empl-count
   do Print-Totals

   do Format-Number(#grand_tot_hrs, $grand_hrs, '999,999.99')
   do Format-Number(#grand_tot_earns, $grand_earns, '$,$$$,$$9.99')
   do Format-Number(#tot-empl-count, $tot-empl-count, '9,999')

   print 'Grand Totals:'  (+1,10)
   print $tot-empl-count  (0,95)
   print $grand_hrs       (0,127)
   print $grand_earns     (0,142)

end-if

end-procedure

!*********************************************************************
! Get Other Hours and Earnings
!*********************************************************************
begin-procedure Get-Other-Hours-Earnings
begin-select
SUM(PO.OTH_HRS)     &oth_hrs
SUM(PO.OTH_EARNS)   &oth_earns

FROM  PS_PAY_OTH_EARNS PO
WHERE PO.COMPANY    = $company
AND   PO.PAYGROUP   = $paygroup
AND   PO.PAY_END_DT = &pay_end_dt
AND   PO.OFF_CYCLE  = $off_cycle
AND   PO.PAGE_NUM      = #page
AND   PO.LINE_NUM      = #line
AND   PO.ADDL_NBR      = #addl
ORDER BY PO.ERNCD

end-select
end-procedure

!*********************************************************************
! Company Change
!*********************************************************************
begin-procedure Company-Change

      if #current-line > 51
	 new-page
      end-if

!      move #empl-count to #sub-tot-empl-count
!      add  #empl-count to #tot-empl-count
!      move 0           to #empl-count
!      do Print-Totals

!      let $hold_company = $company
      let $company-changed = 'Y'

!   new-page
!   do Initialize-Subheading

end-procedure

!*********************************************************************
! Department ID Change
!*********************************************************************
begin-procedure Deptid-Change

      if #current-line > 51
	 new-page
      end-if

      move #empl-count to #sub-tot-empl-count
      add  #empl-count to #tot-empl-count
      move 0           to #empl-count
      do Print-Totals

      let $hold_deptid = $deptid
      let $deptid-changed = 'Y'

   new-page
   if $company-changed = 'Y'
     move &j.COMPANY to $hold_company
     let $company-changed = 'N'
   else
     move $COMPANY to $hold_company
   end-if
   move &J.COMPANY to $company
   do Get-Company-Name
   move &J.DEPTID to $Deptid
   do Get-Department-Name
end-procedure

!*********************************************************************
! Union Code Change
!*********************************************************************
begin-procedure Union-Change

   if $deptid-changed = 'Y'
      let $deptid-changed = 'N'
   else
!       print ' '        (+1,1)
!      do Deptid-Change
      if #current-line > 51
	 new-page
      end-if
   end-if   

end-procedure

!*********************************************************************
! Print Totals when break occurs
!*********************************************************************
begin-procedure Print-Totals

  if #current-line > 51
     new-page
  end-if

  do Format-Number(#sub_tot_hrs, $sub_tot_hrs, '999,999.99')
  do Format-Number(#sub_tot_earns, $sub_tot_earns, '$,$$$,$$9.99')
  do Format-Number(#sub-tot-empl-count, $sub-tot-count, '9,999')

  print 'Subtotals for '            (+1,10)
  print $Deptname                   (0,+1)
  print $sub-tot-count              (0,95)
  print $sub_tot_hrs                (0,127)
  print $sub_tot_earns              (0,142)
  print ' '                         (+1,1)

  move 0 to #sub_tot_hrs
  move 0 to #sub_tot_earns
  move 0 to #sub-tot-empl-count
end-procedure

!*********************************************************************
begin-procedure Get-Company-Name
begin-select
ct.descr

   move &ct.descr to $CompanyName

from ps_company_tbl ct
where ct.company = $hold_company

end-select
end-procedure

!*********************************************************************
!Displays the error messages and stops execution
!*********************************************************************
 
begin-procedure P900-SQL-Error-Found($Proc_Name) 
  do P990-error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 

  STOP

end-procedure


!***********************************************************************
begin-procedure P990-Error-Found
!***********************************************************************

  move 'Y' to $ErrorFound
  do Format-Number(#Inputrec, $out, '99999')
  print $out (+1,1)
 !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
  !let $EmplId_1st3 = substr($EmplId,1,3)
  !let $EmplId_mid2 = substr($EmplId,4,2)
  !let $EmplId_last4 = substr($EmplId,6,4)
 
  !String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  !print $EmplID11 (,8)
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
  print $EmplId   (,8)
end-procedure


#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'askaod.sqc'    !Get the AsOfDate
#Include 'gexxx950.sqc'  !Input Parameters
#Include 'gexxx951.sqc'  !Select Oracle Instance
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexaltse.sqc'  !Alter Oracle Session   JNB 12/11/1998
