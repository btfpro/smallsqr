!***********************************************************************
! Interface Name: GEXBN649                                             *
! GEXBN649: This program creates a weekly interface to High Mark for   *
!           Associate Members data. This file consists of full file    *
!	    information of Associate Members to the vendor on a weekly basis*
!                                                                      *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!  $Date:: 05/06/2013				    $                  *
!  $Revision:: 01               $                                      *
!  $Workfile:: GEXBN649.SQR     $                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS    DATE           DESCRIPTION OF THE CHANGE                *
!***********************************************************************
!  GEX_ITG_144916 ISDVNPK     05/06/2013	     INITIAL CREATION  *
!                                                                      *
!GEX_SEC_REENG 2015-04-29 Vahini Katta                                 *
!Changes related to gex_emplid_mapp/7 digit emplid
!***********************************************************************


!selection criteria
#define #x000_col_selection_criteria_a  02
#define #x000_col_selection_criteria_b  05

#include 'setenv.sqc' !Set environment
begin-setup
!#include 'setup32a.sqc'
#include 'ptset02.sqc'
declare-report Term-Report
Printer-Type=HPLASERJET
  layout=default
end-declare

Declare-Variable
Date $rehire_dt
Date $rehire_dt_op
Date $Hire_Dt
End-Declare

end-setup

begin-report

  do Init-DateTime
  do Init-Number
  do stdapi-init

  do Get-Calendar-Year-Id
  move 'GEXBN649' to $ReportID
  move ' Highmark Associate Data '   to $ReportTitle     

  display $ReportTitle noline
  display '  ' noline

  do Get-Current-DateTime

  let $sev-error = 'N'

  let #tot_count = 0
  let #write_recs = 0

  do Report
  
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term
end-report

!***********************************************************************
begin-procedure Report
!***********************************************************************
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  move 'N' to $Errorfound

  do check_run_controls  
  do Select-Pay-End-Dt   
  
  do process-data
  do Process-Associate-TMs
  do Close-File
  do Commit-Transaction

  date-time () hh:mi:ss &timeProcess
  display #total_new_enrol 99999 noline
  display '  Total TMs Processed'
  display &timeProcess
end-procedure

!***********************************************************************
begin-procedure check_run_controls
!***********************************************************************
#debug8 display 'check_run_controls'

  Let $OprID                = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''

  if $Prcs_Process_Instance = ''
    Do Ask-As-Of-Date
    Let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate
    
    Let #GEX_RC_DEPTID_ROWS = 0

    Let $GEXXX902_EXCLUDE_DEPTID_CRITERIA = '1=1'
    Let $GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA = 'NONE'

    Let $DeptidString = ''''
    Display 'Enter Deptid to exclude or leave blank to exit.'
    While 1=1
      Input $In-deptid Maxlen=10 'deptid'
      Uppercase $In-deptid
      If Rtrim($In-deptid, ' ') = ''
        Concat '''' With $deptidString
        Break
      End-If
      If $deptidString <> ''''
        Concat ''',''' With $deptidString
      End-If
      Concat $In-deptid With $deptidString
    End-While

    If $deptidString = ''''''
       Let $GEXXX902_EXCLUDE_DEPTID_CRITERIA = '1=1'
       Let $GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA = 'NONE'
     Else
       Let $GEXXX902_EXCLUDE_DEPTID_CRITERIA = $GEXXX902_DEPTID_Alias || ' Not In (' || $deptidString || ')'
       Let $GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_EXCLUDE_DEPTID_CRITERIA
    End-If

  else
     
    DO GEXRCBN1-SELECT-PARAMETERS
    Let $GEXXX902_Deptid_Alias = 'C1.DEPTID'  
    Do GEXXX902-Select-Deptid-Parameters 	  
   
    Let $X000_WHERE_SELECT_ASOFDATE = &GEX_RC_BEN.ASOFDATE
    if rtrim($X000_WHERE_SELECT_ASOFDATE,' ') = ''
      let $X000_WHERE_SELECT_ASOFDATE = $AsOfToday
    end-if

  end-if

  Do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')

  show '$X000_WHERE_SELECT_ASOFDATE               = '   $X000_WHERE_SELECT_ASOFDATE 
  Show '$GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA = '   $GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA

  LET #PAGE-COUNT = 0
!***********************************************************************
end-procedure check_run_controls       
!***********************************************************************

begin-heading 6 for-reports=(Term-Report)
 move 'BN649ASC' to $ReportID
 move 'Associate TMs Report' to $ReportTitle
 #Include 'stdhdg01.sqc'

  PRINT 'SSN'               	 (+2,03)
  PRINT 'GE EMPLID'	         (0,15)
  PRINT 'NAME'                   (0,30)
  PRINT 'EMPL STATUS'            (0,60)
  PRINT 'GROUP #' 		 (0,75)
  PRINT 'BENEFIT START DATE'     (0,105)
  PRINT 'BENEFIT END DATE'       (0,135)

end-heading

!***********************************************************************
begin-procedure Select-Pay-End-Dt
!***********************************************************************
#debug8 display 'select-pay-end-dt'
begin-select
MAX(PC.PAY_END_DT)      &pay_end_dt
  
  move &pay_end_dt   to $pay_end_dt
  move &pay_end_dt   to $pay_end_dt_print
  Let $pay_end_dt_print = edit($pay_end_dt_print, 'MM/DD/YYYY')
  
FROM   PS_PAY_CALENDAR PC
WHERE  PC.PAY_END_DT <= $X000_WHERE_SELECT_ASOFDATE 
AND    PC.PAY_CONFIRM_RUN = 'Y'
end-select
  display 'Last Confirmed Pay End Date: ' noline
  display $pay_end_dt

if rtrim($pay_end_dt,' ') <> ''

   do convert-to-dtu-date($pay_end_dt,$pay_end_dt_dtu)
   do dtu-subtract-days($pay_end_dt_dtu,2,$range_begin_dt_dtu)
   do convert-from-dtu-date($range_begin_dt_dtu,$range_begin_dt)

   do dtu-add-days($pay_end_dt_dtu,4,$range_end_dt_dtu)
   do convert-from-dtu-date($range_end_dt_dtu,$range_end_dt)

   display 'Range Begin Dt: ' noline
   display $range_begin_dt
   display 'Range End Dt: ' noline
   display $range_end_dt

else

   display 'No Pay End Dt found prior to ' noline
   display $X000_WHERE_SELECT_ASOFDATE
   stop

end-if
!***********************************************************************
end-procedure Select-Pay-End-Dt
!***********************************************************************

!***********************************************************************
begin-procedure process-data
!***********************************************************************
#debug8 display 'process-data'
   
  let $filename = '{OUTFILE}'||'gexbn649.dat'
  !let $filename = 'T:'||'gexbn649.dat'
  open $filename as 1
     for-writing record=398 status=#writestat

  if #writestat != 0
    display 'Error Opening output file.  Program terminating.'
    stop
  end-if

  move 'N' to $rowfound
  
  let #inputtran = 0
  let $plan_type_String      = 'HB1.plan_type in ( '
  let $benefit_plan_string   = 'HB1.benefit_plan in ( '

  let $plan_type_String_1    = 'HB2.plan_type in ( '
  let $benefit_plan_string_1 = 'HB2.benefit_plan in ( '
  
  let $plan_type_String_2      = 'HB3.plan_type in ( '
  let $benefit_plan_string_2   = 'HB3.benefit_plan in ( '

  let $plan_type_String_3    = 'D1.plan_type in ( '
  let $benefit_plan_string_3 = 'D1.benefit_plan in ( '
  
  let #plan_count = 0
  let #total_new_enrol = 0
  
begin-select on-error=sql-error-found('Process-Data')
GEX_RC_BENPLAN.plan_type
GEX_RC_BENPLAN.benefit_plan

  add 1 to #plan_count
  if #plan_count = 1
     let $plan_type_string = $plan_type_string || ''''||&GEX_RC_BENPLAN.plan_type||''''
     let $benefit_plan_string = $benefit_plan_string || '''' ||&GEX_RC_BENPLAN.benefit_plan||''''

		 let $plan_type_string_1 = $plan_type_string_1 || ''''||&GEX_RC_BENPLAN.plan_type||''''
     let $benefit_plan_string_1 = $benefit_plan_string_1 || '''' ||&GEX_RC_BENPLAN.benefit_plan||''''
		
		 let $plan_type_string_2 = $plan_type_string_2 || ''''||&GEX_RC_BENPLAN.plan_type||''''
     let $benefit_plan_string_2 = $benefit_plan_string_2 || '''' ||&GEX_RC_BENPLAN.benefit_plan||''''

		 let $plan_type_string_3 = $plan_type_string_3 || ''''||&GEX_RC_BENPLAN.plan_type||''''
     let $benefit_plan_string_3 = $benefit_plan_string_3 || '''' ||&GEX_RC_BENPLAN.benefit_plan||''''
  
  else
     let $plan_type_string = $plan_type_string||','||''''||&GEX_RC_BENPLAN.plan_type||''''
     let $benefit_plan_string = $benefit_plan_String||','||''''||&GEX_RC_BENPLAN.benefit_plan||''''

     let $plan_type_string_1 = $plan_type_string_1 ||','||''''||&GEX_RC_BENPLAN.plan_type||''''
     let $benefit_plan_string_1 = $benefit_plan_string_1 ||','||'''' ||&GEX_RC_BENPLAN.benefit_plan||''''

     let $plan_type_string_2 = $plan_type_string_2 ||','||''''||&GEX_RC_BENPLAN.plan_type||''''
     let $benefit_plan_string_2 = $benefit_plan_string_2 ||','||'''' ||&GEX_RC_BENPLAN.benefit_plan||''''

     let $plan_type_string_3 = $plan_type_string_3 ||','||''''||&GEX_RC_BENPLAN.plan_type||''''
     let $benefit_plan_string_3 = $benefit_plan_string_3 ||','||'''' ||&GEX_RC_BENPLAN.benefit_plan||''''
  end-if

from PS_GEX_RC_BEN_PLAN GEX_RC_BENPLAN
Where GEX_RC_BENPLAN.OPRID                         = [$OprID]
And   GEX_RC_BENPLAN.RUN_CNTL_ID                   = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_BENPLAN.PLAN_TYPE, ' ')        != ' '
end-select
!***********************************************************************
end-procedure process-data
!***********************************************************************

!***********************************************************************
begin-procedure Process-Associate-TMs
!***********************************************************************
#debug8 display 'Process-Associate-TMs'

if #plan_count > 0
   let $plan_type_string = $plan_type_String||')'
   let $benefit_plan_string = $benefit_plan_string||')'

   let $plan_type_string_1 = $plan_type_String_1||')'
   let $benefit_plan_string_1 = $benefit_plan_string_1||')'
   
   let $plan_type_string_2 = $plan_type_String_2||')'
   let $benefit_plan_string_2 = $benefit_plan_string_2||')'

   let $plan_type_string_3 = $plan_type_String_3||')'
   let $benefit_plan_string_3 = $benefit_plan_string_3||')'

   display $plan_type_String
   display $benefit_plan_string
   display $plan_type_String_1
   display $benefit_plan_string_1
   display $plan_type_String_2
   display $benefit_plan_string_2
   display $plan_type_String_3
   display $benefit_plan_string_3

   Do Select-Max-SEQNUMBER
   Do Select-Seq-Number
   Let $seq_number = edit(#seq_number,'000000000')
   Let $seq_number1 = edit(#seq_number1,'000000000')
   Do Write-ISA-Record
   Do Write-GS-Record
   Do Write-ST-Record
   Do Write-BGN-Record
   Do Write-N1-Record
   do Write-N1A-Record
   Do process-active-enrollments
   Do Process-Job-Terms
   Do Process-HighmarkPlan-Enrollements
   Do Write-SE-Trailer-Record
   Do Write-GE-Trailer-Record
   Do Write-IEA-Trailer-Record
      
   let $plan_type_String      = 'HB1.plan_type in ( '
   let $benefit_plan_string   = 'HB1.benefit_plan in ( '

   let $plan_type_String_1    = 'HB2.plan_type in ( '
   let $benefit_plan_string_1 = 'HB2.benefit_plan in ( '
  
   let $plan_type_String_2    = 'HB3.plan_type in ( '
   let $benefit_plan_string_2 = 'HB3.benefit_plan in ( '

   let $plan_type_String_3    = 'D1.plan_type in ( '
   let $benefit_plan_string_3 = 'D1.benefit_plan in ( '

   let #plan_count = 0

end-if
!***********************************************************************
end-procedure Process-Associate-TMs
!***********************************************************************


!***********************************************************************
begin-procedure Process-Active-Enrollments
!***********************************************************************
#debug8 display 'Process-Active-Enrollments'
     display 'Process-Active-Enrollments'
	Let $emplid = ' '
	let $leave_code = ' '
	let $leave_begin_dt = ' '
	let $leave_end_dt = ' '
	Let $benefit_event_dt = ' '
	Let $benefit_event_type = ' '

begin-select ON-ERROR=SQL-Error-Found('Process-Active-Enrollments')
C1.EMPLID,
C1.EMPL_RCD,
B.NAME,
B.LAST_NAME,
B.FIRST_NAME,
B.MIDDLE_NAME,
B.NAME_SUFFIX,
replace(replace(B.PHONE, '/', ''),'-','')  &b.phone
!MAP.EMPLID, !GEX_SEC_REENG 2015-04-29 Vahini Katta
TO_CHAR(B.BIRTHDATE,'YYYYMMDD')		&b.birthdate
C1.HIRE_DT		&c1.hire_dt
B.SEX,
B.ADDRESS1,
B.ADDRESS2,
B.CITY,
B.STATE,
B.POSTAL,
C1.EMPL_STATUS,
TO_CHAR(C1.TERMINATION_DT,'MM/DD/YYYY')	&c1.term_date
C1.EFFDT,
C1.LAST_HIRE_DT  	&c1.rehire_dt
TO_CHAR(C1.LAST_HIRE_DT,'YYYYMMDD')  	&last_hire_dt_op
C1.DEPTID,
C1.UNION_CD,
C1.FULL_PART_TIME,
SUBSTR(C1.LOCATION,1,5)  &C1.LOCATION
  
  move &C1.emplid to $emplid
  move &C1.empl_rcd to $empl_rcd
  move &C1.EFFDT to $job_effdt
  move &c1.empl_status to $empl_status
  move &c1.deptid to $deptid
  move &b.name to $name
  move &B.LAST_NAME to $last_name
  move &B.FIRST_NAME to $FIRST_NAME
  move &B.MIDDLE_NAME to $MIDDLE_NAME
  move &B.NAME_SUFFIX to $Suffix
  move &b.phone to $phone
  !move &map.emplid to $map_emplid !GEX_SEC_REENG 2015-04-29 Vahini Katta
  move &c1.term_date to $benefit_event_dt
  move &B.SEX to $sex
  move &B.ADDRESS1 to $address1
  move &B.ADDRESS2 to $address2
  move &B.CITY to $city
  move &B.STATE to $state
  move &B.POSTAL to $postal
  move &B.BIRTHDATE to $birthdate
  move &C1.HIRE_DT to $hire_dt
  move &C1.REHIRE_DT to $rehire_dt
  move &C1.UNION_CD to $union_cd
  move &C1.FULL_PART_TIME to $FULL_PART_TIME 
  move &C1.LOCATION to $empl_location
  move &last_hire_dt_op to $last_hire_dt_op1
    
  do Get-Emp-Ssn ($emplid, $Ssn_Out) !GEX_SEC_REENG 2015-04-29 Vahini Katta  
    If $rehire_dt = ''  
     let $rehire_dt = $hire_dt
    End-If 
    show '$emplid          :' $emplid
    show '&&C1.HIRE_DT     :' &C1.HIRE_DT
    show '&C1.REHIRE_DT    :' &C1.REHIRE_DT
  Let $benefit_event_type = ' '  
  #debug8 Show 'As Of Date : '$range_end_dt 
  #debug8 Show 'Rehire Date : '$rehire_dt
    
  Let #Total_90_DAYS_CHECK = Datediff(strtodate($range_end_dt,'DD-MON-YYYY'),$rehire_dt,'DAY')
  #debug8 Show 'Total Duration : '#Total_90_DAYS_CHECK
  Show 'Total Duration : '#Total_90_DAYS_CHECK
  If #Total_90_DAYS_CHECK >= 90 
   Do Get-Benefit-Program
   
   Do Check-HighMark-Medical-Plan-Enrollment
   show '$health_row_exist :' $health_row_exist
   
   If  $health_row_exist = 'N'
     Let $rehire_dt_op = dateadd($rehire_dt, 'day', 90) 
     Let $file_begin_dt = $rehire_dt_op
     Let $file_end_dt = ''
    
    do Select-file-Begin-Dt
    show '$previous_row_exist :' $previous_row_exist
    If $previous_row_exist = 'Y'
    !show '$benefit_program :' $benefit_program
    !show '$previous_ben_pgm:' $previous_ben_pgm
                If $benefit_program <> $previous_ben_pgm
		       do current-ben-pgm
		       do Previous-ben-pgm
		          If ($current_ben_pgmfound = 'Y' and $Previous_ben_pgmfound ='Y')
		              do write-Record
		              do Insert-Associate-Member-Table
		            else
			      If ($current_ben_pgmfound <> 'Y' and $Previous_ben_pgmfound <> 'Y')
			           !show 'Check-if-union-code-changed 1'
				   do Check-if-union-code-changed
			       else
			            Let $file_begin_dt = $benefit_program_effdt
			            do write-Record
			            do Insert-Associate-Member-Table
		       	      End-If 
		       	  End-If 
		 else
		   !show 'Check-if-union-code-changed 2'
		   do Check-if-union-code-changed
		End-If 
	else
	   do write-Record
	   do Insert-Associate-Member-Table
      End-If  
   else
      !show '$file_write :' $file_write
      If $file_write ='Y'
        Let $file_end_dt = ''
        do Select-file-Begin-Dt
          !show '$previous_row_exist :' $previous_row_exist
  	  If $previous_row_exist = 'Y'
  	      !show '$benefit_program :' $benefit_program
  	      !show '$previous_ben_pgm:' $previous_ben_pgm
  	      If $benefit_program <> $previous_ben_pgm
		       do current-ben-pgm
		       do Previous-ben-pgm
		       !show '$current_ben_pgmfound :' $current_ben_pgmfound
		       !show '$Previous_ben_pgmfound:' $Previous_ben_pgmfound
		          If ($current_ben_pgmfound = 'Y' and $Previous_ben_pgmfound ='Y')
		              do write-Record
		              do Insert-Associate-Member-Table
		            else
			      If ($current_ben_pgmfound <> 'Y' and $Previous_ben_pgmfound <> 'Y')
			           !show 'Check-if-union-code-changed 3'
				   do Check-if-union-code-changed
			       else
			            Let $file_begin_dt = $benefit_program_effdt
			            do write-Record
			            do Insert-Associate-Member-Table
		       	      End-If 
		       	  End-If 
		 else
		   !show 'Check-if-union-code-changed 4'
		   do Check-if-union-code-changed
		End-If 
	   else
	     !show 'write-Record'
	     do write-Record
	     do Insert-Associate-Member-Table
  	  End-If 
      End-If
    End-If
  End-if
  
  move 'Y' to $rowfound
  add 1 to #inputtran
 
FROM  PS_JOB C1, PS_PERSONAL_DATA B!, PS_GEX_EMPLID_MAPP MAP !GEX_SEC_REENG 2015-04-29 Vahini Katta
WHERE  C1.EMPL_STATUS IN ('A','L','P','S')
AND C1.EMPLID = B.EMPLID
!GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
!AND C1.EMPLID = MAP.SSN
!AND C1.EMPL_RCD = MAP.EMPL_RCD 
!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
AND C1.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
		WHERE EMPLID = C1.EMPLID
		AND EMPL_RCD = C1.EMPL_RCD
		AND EFFDT <= $range_end_dt)
AND C1.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
		WHERE EMPLID = C1.EMPLID
		AND EMPL_RCD = C1.EMPL_RCD
		AND EFFDT = C1.EFFDT)
AND C1.COMPANY > '999'
AND [$GEXXX902_EXCLUDE_DEPTID_CRITERIA]
			
End-Select

  if $rowfound = 'N'
    display  '** No Active Associate members selected for this file. **'  noline
   else
    display 'Number of Active Associate members : ' noline
    display #inputtran
    move 'N' to $rowfound
    add #inputtran to #total_new_enrol 
    move 0 to #inputtran
  end-if
!***********************************************************************
end-procedure Process-Active-Enrollments
!***********************************************************************

!***********************************************************************
Begin-procedure Check-if-union-code-changed
!***********************************************************************
 !show 'Proc Check-if-union-code-changed'
 !show '$union_cd :' $union_cd
 !show '$previous_union_cd :' $previous_union_cd
If $union_cd <> $previous_union_cd
  do current-union
  do Previous-union
     !show '$current_union_rowfound :' $current_union_rowfound
     !show '$Previous_union_rowfound:' $Previous_union_rowfound
     If ($current_union_rowfound = 'Y' and $Previous_union_rowfound ='Y')
       do write-Record
       do Insert-Associate-Member-Table
      else
       Let $file_begin_dt = $job_effdt
       !show 'else $job_effdt:' $job_effdt
       do write-Record
       do Insert-Associate-Member-Table
     End-If 
 else
    do write-Record
    do Insert-Associate-Member-Table
End-If 

!***********************************************************************
end-procedure Check-if-union-code-changed
!***********************************************************************


!***********************************************************************
Begin-procedure Process-Job-Terms
!***********************************************************************
#debug8 display 'Process-Job-Terms'
 display 'Process-Job-Terms'
     
	move ' ' to $emplid
	move 'N' to $term_rowfound
	let $benefit_plan = ' '
	let $leave_code = ' '
	let $leave_begin_dt = ' '
	let $leave_end_dt = ' '
	Let $benefit_event_dt = ' '
	Let $benefit_event_type = ' '
	
        do Select-Max-SEQNUMBER
        
begin-select ON-ERROR=SQL-Error-Found('Process-Terms')
CC1.EMPLID,
CC1.EMPL_RCD,
BB.NAME,
BB.LAST_NAME,
BB.FIRST_NAME,
BB.MIDDLE_NAME,
BB.NAME_SUFFIX,
replace(replace(BB.PHONE, '/', ''),'-','')  &BB.phone
!MAP1.EMPLID, !GEX_SEC_REENG 2015-04-29 Vahini Katta
TO_CHAR(BB.BIRTHDATE,'YYYYMMDD')		&BB.BIRTHDATE
CC1.HIRE_DT		&CC1.HIRE_DT
BB.SEX,
BB.ADDRESS1,
BB.ADDRESS2,
BB.CITY,
BB.STATE,
BB.POSTAL,
CC1.EMPL_STATUS,
CC1.TERMINATION_DT,	
CC1.EFFDT,
CC1.LAST_HIRE_DT	&CC1.REHIRE_DT
TO_CHAR(CC1.LAST_HIRE_DT,'YYYYMMDD')  	&CC1_last_hire_dt_op
CC1.DEPTID,
CC1.UNION_CD,
CC1.FULL_PART_TIME,
SUBSTR(CC1.LOCATION,1,5)  &CC1.LOCATION

 
  move &CC1.EMPLID to $emplid
  move &CC1.EMPL_RCD to $empl_rcd
  move &CC1.EFFDT to $job_effdt
  move &CC1.EMPL_STATUS to $empl_status
  move &CC1.DEPTID to $deptid
  move &BB.NAME to $name
  move &BB.LAST_NAME to $last_name
  move &BB.FIRST_NAME to $FIRST_NAME
  move &BB.MIDDLE_NAME to $MIDDLE_NAME
  move &BB.NAME_SUFFIX to $Suffix
  move &BB.phone to $phone
  !move &MAP1.EMPLID to $map_emplid !GEX_SEC_REENG 2015-04-29 Vahini Katta
  move &BB.SEX to $sex
  move &BB.ADDRESS1 to $address1
  move &BB.ADDRESS2 to $address2
  move &BB.CITY to $city
  move &BB.STATE to $state
  move &BB.POSTAL to $postal
  move &CC1.TERMINATION_DT to $term_date
  move &BB.BIRTHDATE to $birthdate
  move &CC1.HIRE_DT to $hire_dt
  move &CC1.REHIRE_DT to $rehire_dt
  move &CC1.UNION_CD to $union_cd
  move &CC1.FULL_PART_TIME to $FULL_PART_TIME
  move &CC1.LOCATION to $empl_location
  move &cc1_last_hire_dt_op to $last_hire_dt_op1
  do Get-Benefit-Program
      move 'Y' to $term_rowfound
   show '$emplid :' $emplid
   do Select-file-Begin-Dt
   
    If $previous_row_exist = 'Y'
      Let $file_begin_dt = $file_begin_dt1
      Let $file_end_dt = $term_date
      
       do write-Record
       do Insert-Associate-Member-Table
    End-If
  
  move 'Y' to $rowfound

  add 1 to #inputtran
 
FROM  PS_JOB CC1, PS_PERSONAL_DATA BB!, PS_GEX_EMPLID_MAPP MAP1 !GEX_SEC_REENG 2015-04-29 Vahini Katta
WHERE CC1.EMPLID = BB.EMPLID
!GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
!AND CC1.EMPLID = MAP1.SSN 
!AND CC1.EMPL_RCD = MAP1.EMPL_RCD
!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
AND CC1.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
		WHERE EMPLID = CC1.EMPLID
		AND EMPL_RCD = CC1.EMPL_RCD
		AND EFFDT <= $range_end_dt)
AND CC1.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
		WHERE EMPLID = CC1.EMPLID
		AND EMPL_RCD = CC1.EMPL_RCD
		AND EFFDT = CC1.EFFDT)
AND CC1.ACTION_DT BETWEEN $range_begin_dt AND $range_end_dt
AND CC1.EMPL_STATUS in ('D','R','T')
End-Select

  if $rowfound = 'N'
    display  '** NO Job Termed rows found for this file. ** '  noline
   else
    display 'Total Number of Terms Processed:  ' noline
    display #inputtran
    move 'N' to $rowfound
    move 'N' to $term_rowfound
    add #inputtran to #total_new_enrol 
    move 0 to #inputtran
  end-if

!***********************************************************************
End-Procedure Process-Job-Terms
!***********************************************************************

!***********************************************************************
Begin-procedure Process-HighmarkPlan-Enrollements
!***********************************************************************
#debug8 display 'Process-HighmarkPlan-Enrollements'
     display 'Process-HighmarkPlan-Enrollements'
	move ' ' to $emplid
	move 'N' to $term_rowfound
	let $benefit_plan = ' '
	let $leave_code = ' '
	let $leave_begin_dt = ' '
	let $leave_end_dt = ' '
	Let $benefit_event_dt = ' '
	Let $benefit_event_type = ' '
	
	do Select-Max-SEQNUMBER

begin-select ON-ERROR=SQL-Error-Found('Process-Terms')
CC2.EMPLID,
CC2.EMPL_RCD,
BB2.NAME,
BB2.LAST_NAME,
BB2.FIRST_NAME,
BB2.MIDDLE_NAME,
BB2.NAME_SUFFIX,
replace(replace(BB2.PHONE, '/', ''),'-','')  &BB2.phone
!MAP2.EMPLID, !GEX_SEC_REENG 2015-04-29 Vahini Katta
TO_CHAR(BB2.BIRTHDATE,'YYYYMMDD')		&BB2.BIRTHDATE
CC2.HIRE_DT		&CC2.HIRE_DT
BB2.SEX,
BB2.ADDRESS1,
BB2.ADDRESS2,
BB2.CITY,
BB2.STATE,
BB2.POSTAL,
CC2.EMPL_STATUS,
CC2.TERMINATION_DT,
HB3.COVERAGE_BEGIN_DT,	
CC2.EFFDT,
CC2.LAST_HIRE_DT	&CC2.REHIRE_DT
TO_CHAR(CC2.LAST_HIRE_DT,'YYYYMMDD')  	&CC2_last_hire_dt_op
CC2.DEPTID,
CC2.UNION_CD,
CC2.FULL_PART_TIME,
SUBSTR(CC2.LOCATION,1,5)  &CC2.LOCATION
   
  move &CC2.EMPLID to $emplid
  move &CC2.EMPL_RCD to $empl_rcd
  move &CC2.EFFDT to $job_effdt
  move &CC2.EMPL_STATUS to $empl_status
  move &CC2.DEPTID to $deptid
  move &BB2.NAME to $name
  move &BB2.LAST_NAME to $last_name
  move &BB2.FIRST_NAME to $FIRST_NAME
  move &BB2.MIDDLE_NAME to $MIDDLE_NAME
  move &BB2.NAME_SUFFIX to $Suffix
  move &BB2.phone to $phone
  !move &MAP2.EMPLID to $map_emplid !GEX_SEC_REENG 2015-04-29 Vahini Katta
  move &BB2.SEX to $sex
  move &BB2.ADDRESS1 to $address1
  move &BB2.ADDRESS2 to $address2
  move &BB2.CITY to $city
  move &BB2.STATE to $state
  move &BB2.POSTAL to $postal
  !move &CC2.TERMINATION_DT to $term_date
  move &HB3.COVERAGE_BEGIN_DT to $term_date
  move &BB2.BIRTHDATE to $birthdate
  move &CC2.HIRE_DT to $hire_dt
  move &CC2.REHIRE_DT to $rehire_dt
  move &CC2.UNION_CD to $union_cd
  move &CC2.FULL_PART_TIME to $FULL_PART_TIME
  move &CC2.LOCATION to $empl_location
  move &cc2_last_hire_dt_op to $last_hire_dt_op1
  
    !SHOW '$emplid :' $emplid
    !show '&CC2.TERMINATION_DT :' &CC2.TERMINATION_DT
    !show '&HB3.COVERAGE_BEGIN_DT :' &HB3.COVERAGE_BEGIN_DT
    !show '$term_date :' $term_date
    
    move 'Y' to $term_rowfound  
    
  do Select-file-Begin-Dt
  
    If $previous_row_exist = 'Y'
      Let $file_begin_dt = $file_begin_dt1
      Let $file_end_dt = $term_date
       do write-Record
       do Insert-Associate-Member-Table
    End-If 
      
  move 'Y' to $rowfound

  add 1 to #inputtran
 
FROM  PS_JOB CC2, PS_PERSONAL_DATA BB2!, PS_GEX_EMPLID_MAPP MAP2 !GEX_SEC_REENG 2015-04-29 Vahini Katta
     , PS_HEALTH_BENEFIT HB3
WHERE CC2.EMPLID = BB2.EMPLID
!GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
!AND CC2.EMPLID = MAP2.SSN 
!AND CC2.EMPL_RCD = MAP2.EMPL_RCD
!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
AND CC2.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
		WHERE EMPLID = CC2.EMPLID
		AND EMPL_RCD = CC2.EMPL_RCD
		AND EFFDT <= $range_end_dt)
AND CC2.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
		WHERE EMPLID = CC2.EMPLID
		AND EMPL_RCD = CC2.EMPL_RCD
		AND EFFDT = CC2.EFFDT)
AND CC2.EMPL_STATUS IN ('A','L','P','S')
AND HB3.EMPLID = CC2.EMPLID
AND HB3.EMPL_RCD = CC2.EMPL_RCD
AND [$benefit_plan_string_2]
AND HB3.COVERAGE_ELECT_DT BETWEEN $range_begin_dt AND $range_end_dt
AND HB3.PLAN_TYPE = '10'
AND HB3.EFFDT = (SELECT MAX(EFFDT) FROM PS_HEALTH_BENEFIT
                  WHERE EMPLID = HB3.EMPLID
                    AND EMPL_RCD = HB3.EMPL_RCD
                    AND COBRA_EVENT_ID=HB3.COBRA_EVENT_ID
                    AND PLAN_TYPE = HB3.PLAN_TYPE
                    AND BENEFIT_NBR = HB3.BENEFIT_NBR
                    AND EFFDT <= $range_end_dt) 
End-Select

  if $rowfound = 'N'
    display  '** NO Change in Medical Plan enrollment - TM Enrolls in Highmark medical plan found for this file.**'  noline
  else
    display 'Total Number of Change in Medical Plan enrollment - TM Enrolls in Highmark medical plan Processed:  ' noline
    display #inputtran
    move 'N' to $rowfound
    move 'N' to $term_rowfound
    add #inputtran to #total_new_enrol 
    move 0 to #inputtran
    !new-page
  end-if

!***********************************************************************
End-Procedure Process-HighmarkPlan-Enrollements
!***********************************************************************


!***********************************************************************
Begin-Procedure Check-HighMark-Medical-Plan-Enrollment
!***********************************************************************

Move 'N' to $health_enroll_Found
Move 'N' to $health_row_exist
Move 'N' to $file_write
 
Begin-Select
hb1.emplid,
hb1.empl_rcd,
HB1.PLAN_TYPE, 
HB1.BENEFIT_NBR,
HB1.EFFDT,
HB1.DEDUCTION_END_DT,
HB1.COVERAGE_BEGIN_DT,
HB1.COVERAGE_ELECT_DT,
HB1.COVERAGE_ELECT

     Move &HB1.EFFDT to  $Effdt
     Move &HB1.COVERAGE_ELECT_DT to $Covrg_Elect_Dt
     Move &HB1.COVERAGE_BEGIN_DT to $COVERAGE_BEGIN_DT
          
     let $health_row_exist = 'Y'
     !Let $file_write ='Y'
     
  If &HB1.COVERAGE_ELECT='E'
  
  do Convert-To-DTU-Date($Covrg_Elect_Dt,$Covrg_Elect_Dt1)
  do Convert-To-DTU-Date($range_end_dt,$range_end_dt1)
  
     If $Covrg_Elect_Dt1 <= $range_end_dt1
    
        let $health_enroll_Found = 'Y'
        Let $file_write ='N'
        !Let $file_write ='Y'
   
       Else
   
        do Select-Prev-Health-plan
         Let $file_write ='Y'
   
          If $prev_enroll_Found = 'Y' 
             Let $file_begin_dt = $COVERAGE_BEGIN_DT
          Else
            Let $rehire_dt_op = dateadd($rehire_dt, 'day', 90) 
       	    Let $file_begin_dt = $rehire_dt_op
          End-If
      End-if
    Else
       	  do Select-Prev-Health-plan  
       	  Let $file_write ='Y'
   
	   If $prev_enroll_Found = 'Y' 
             Let $file_begin_dt = $COVERAGE_BEGIN_DT
           Else
             Let $rehire_dt_op = dateadd($rehire_dt, 'day', 90) 
       	     Let $file_begin_dt = $rehire_dt_op
          End-If
  End-if
		
FROM PS_HEALTH_BENEFIT HB1
WHERE HB1.EMPLID = $emplid
AND HB1.EMPL_RCD = $EMPL_RCD
AND [$benefit_plan_string]
AND HB1.PLAN_TYPE = '10'
AND HB1.EFFDT = (SELECT MAX(EFFDT) FROM PS_HEALTH_BENEFIT
                  WHERE EMPLID = HB1.EMPLID
                    AND EMPL_RCD = HB1.EMPL_RCD
                    AND COBRA_EVENT_ID=HB1.COBRA_EVENT_ID
                    AND PLAN_TYPE = HB1.PLAN_TYPE
                    AND BENEFIT_NBR = HB1.BENEFIT_NBR
                    AND EFFDT <= $range_end_dt) 
End-Select
!***********************************************************************
End-Procedure Check-HighMark-Medical-Plan-Enrollment
!***********************************************************************

!***********************************************************************
Begin-Procedure Select-Prev-Health-plan
!***********************************************************************

  Move 'N' to $prev_enroll_Found

Begin-Select
HB2.BENEFIT_PLAN
HB2.PLAN_TYPE
HB2.COVRG_CD
HB2.EFFDT
HB2.COVERAGE_BEGIN_DT
HB2.COVERAGE_ELECT_DT
HB2.COVERAGE_ELECT
HB2.BENEFIT_NBR

  let $prev_enroll_Found = 'Y' 
     
FROM PS_HEALTH_BENEFIT HB2
WHERE HB2.EMPLID = &HB1.EMPLID
AND HB2.EMPL_RCD = &HB1.EMPL_RCD
AND HB2.PLAN_TYPE = '10'
AND HB2.COVERAGE_ELECT = 'E'
AND [$benefit_plan_string_1]
AND HB2.EFFDT = (SELECT MAX(EFFDT) FROM PS_HEALTH_BENEFIT
                  WHERE EMPLID = HB2.EMPLID
                    AND EMPL_RCD = HB2.EMPL_RCD
                    AND COBRA_EVENT_ID=HB2.COBRA_EVENT_ID
                    AND PLAN_TYPE = HB2.PLAN_TYPE
                    AND BENEFIT_NBR = HB2.BENEFIT_NBR
                    AND EFFDT < &HB1.EFFDT)             
End-Select

!***********************************************************************
End-Procedure Select-Prev-Health-plan
!***********************************************************************


!********************************************************************************
!Get Current Benefit Program of the Employee
!********************************************************************************
begin-procedure Get-Benefit-Program
#debug9 show 'Get-Benefit-Program '

move 'N' to $beninfo_found
 Let $benefit_program = ' '
 Let $benefit_program_effdt =''

begin-select ON-ERROR=SQL-Error-Found('Get-Benefit-Program')
BPPR.BENEFIT_PROGRAM   &BPPR.benefit_program
BPPR.EFFDT   &BPPR.EFFDT

     move 'Y' to $beninfo_found
     Let $benefit_program = &BPPR.benefit_program
     Let $benefit_program_effdt = &BPPR.EFFDT

FROM PS_BEN_PROG_PARTIC BPPR
WHERE BPPR.EMPLID = $emplid
  AND BPPR.EMPL_RCD = $Empl_Rcd
  AND BPPR.EFFDT = (SELECT MAX(EFFDT)
                FROM PS_BEN_PROG_PARTIC BPPRA
                WHERE BPPRA.EMPLID = BPPR.EMPLID
                AND BPPRA.EMPL_RCD = BPPR.EMPL_RCD
                AND BPPRA.EFFDT <= $range_end_dt)
 
end-select 

!if $beninfo_found = 'N'
!   do error-found
!   print 'No Benefit Program information found' (,43)
!end-if

!***********************************************************************
end-procedure
!********************************************************************************

!***********************************************************************
Begin-Procedure Write-Record
!***********************************************************************
  let $grp_benefit_plan =''
  do current-ben-pgm
  
  !show '$current_ben_pgmfound :' $current_ben_pgmfound
  If $current_ben_pgmfound = 'Y'
    let $grp_benefit_plan =  $current_benefit_plan_pgm
    !show '$grp_benefit_plan :' $grp_benefit_plan
    !show 'Get-Group-Number 1'
    do Get-Group-Number
   else
     do current-union
     If $current_union_rowfound = 'Y'
       let $grp_benefit_plan = $current_benefit_plan
       !show 'Get-Group-Number 2'
       do Get-Group-Number
      else
       !show 'Get-Group-Number A'
       do Get-Group-NumberA
     End-If
  End-If
       	use-report Term-Report
    !GEX_SEC_REENG 2015-04-29 Vahini Katta
  	!print $emplid (+1,03)
  	!print $map_emplid (,15)
    !GEX_SEC_REENG 2015-04-29 Vahini Katta
  	print $name (,30)
  	print $empl_status (,60)
  	print $group (,75)
  	print $file_begin_dt (,105)
  	print $file_end_dt (,135)

     do Write-ISA-Member-Record
     do Write-REF-SSN-MEMBER-Record
     do Write-REF-23-MEMBER-Record
     do Write-REF-17-MEMBER-Record
     do Write-DTP-FileDate-Record
     do Write-DTP-HireDate-Record
     do Write-NM1-Record
     do Write-PER-Record
     do Write-N3-Record
     do Write-N4-Record
     do Write-DMG-Record
     
	If $group = '01669320'
	  !TM covering a Spouse to write in the file
	  let $dep_plan_type ='10'
	  let $dep_relation  ='SP'
	   do Get-Dependent
	   If $dep_covrg_cd <> '1' and rtrim($dep_covrg_cd, ' ') <> ''
	          do Write-HD-Record-SP
	      Else
		  !TM covering Domestic Partner to write in the file   
		  let $dep_plan_type ='15'
		  let $dep_relation  ='NA'
		   do Get-Dependent
		   If ($dep_covrg_cd =  '24'  or $dep_covrg_cd =  '25'  or $dep_covrg_cd =  '30' or $dep_covrg_cd =  '31'  or $covrg_cd =  '32' or
		       $dep_covrg_cd =  '33'  or $dep_covrg_cd =  '34'  or $dep_covrg_cd =  '35' or $dep_covrg_cd =  '36'  or $covrg_cd =  '37') 
		      do Write-HD-Record-DP
		    Else
		      do Write-HD-Record-IND   
		   End-If
	   End-If
	 Else
	   do Write-HD-Record-IND  
	End-If   
	 
     !show '$file_begin_dt :' $file_begin_dt
     let $file_begin_dtop = Datetostr(StrtoDate($file_begin_dt,'DD-MON-YYYY'),'YYYYMMDD')
     do Write-DTP-BeginDt-Record
     !SHOW '$term_rowfound :' $term_rowfound
     !show '$file_end_dt   :' $file_end_dt
     If $term_rowfound = 'Y' 
      let $file_end_dtop = Datetostr(StrtoDate($file_end_dt,'DD-MON-YYYY'),'YYYYMMDD')
      !show '$file_end_dtop :' $file_end_dtop
      do Write-DTP-EndDt-Record
     End-If    
     do Write-REF-GROUPNBR-Record

	If $group = '01669320'
	  !TM covering a Spouse to write in the file
	  let $dep_plan_type ='10'
	  let $dep_relation ='SP'
	   do Get-Dependent
	     If $dep_covrg_cd <> '1' and rtrim($dep_covrg_cd, ' ') <> ''
	        do Write-DEP-Record
	       else
	     	  !TM covering Domestic Partner to write in the file   
		  let $dep_plan_type ='15'
		  let $dep_relation ='NA'
		   do Get-Dependent
		   If ($dep_covrg_cd =  '24'  or $dep_covrg_cd =  '25'  or $dep_covrg_cd =  '30' or $dep_covrg_cd =  '31'  or $covrg_cd =  '32' or
		       $dep_covrg_cd =  '33'  or $dep_covrg_cd =  '34'  or $dep_covrg_cd =  '35' or $dep_covrg_cd =  '36'  or $covrg_cd =  '37') 
		      do Write-DEP-Record
		   End-If
	     End-If
	End-If   
	       			 
!***********************************************************************
End-Procedure Write-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-ISA-Record
!***********************************************************************

  let $date_string = datetostr(datenow(),'YYMMDD')
  let $time_string = datetostr(datenow(),'HH24MI')
  let $outISA = 'ISA*00*          *00*          *30*522067965      *33*54771          *' || $date_string ||'*' || $time_string || '*{*00501*' || $seq_number || '*0*P*:'
  
  write 1 from $outISA
      	       			 
!***********************************************************************
End-Procedure Write-ISA-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-GS-Record
!***********************************************************************

  let $date_string1 = datetostr(datenow(),'YYYYMMDD')
  let $time_string1 = datetostr(datenow(),'HH24MISS')
  let $outGS = 'GS*BE*GIANTA*54771ECS*' || $date_string1 ||'*' || $time_string1 || '*' || $seq_number || '*X*005010X220A1'
  
  write 1 from $outGS
      	       			 
!***********************************************************************
End-Procedure Write-GS-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-ST-Record
!***********************************************************************
  let #total_line_count = 0
  let $outST = 'ST*834*' || $seq_number1 || '*005010X220A1'
  
  add 1 to #total_line_count
  write 1 from $outST
      	       			 
!***********************************************************************
End-Procedure Write-ST-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-BGN-Record
!***********************************************************************

  let $outBGN = 'BGN*00*' || $seq_number || '*' || $date_string1 ||'*' || $time_string1 || '*ET***RX'
  
  add 1 to #total_line_count
  write 1 from $outBGN
      	       			 
!***********************************************************************
End-Procedure Write-BGN-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-N1-Record
!***********************************************************************

  let $outN1 = 'N1*P5*GIANTA*FI*522067965'
  add 1 to #total_line_count
  write 1 from $outN1
      	       			 
!***********************************************************************
End-Procedure Write-N1-Record
!***********************************************************************


!***********************************************************************
Begin-Procedure Write-N1A-Record
!***********************************************************************

  let $outN1A = 'N1*IN*HIGHMARK*FI*231294723'
  add 1 to #total_line_count
  write 1 from $outN1A
      	       			 
!***********************************************************************
End-Procedure Write-N1A-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-ISA-Member-Record
!***********************************************************************

  let $outISAMember = 'INS*Y*18*030*XN*A***' || $FULL_PART_TIME ||'T*N' 
  add 1 to #total_line_count
  write 1 from $outISAMember
      	       			 
!***********************************************************************
End-Procedure Write-ISA-Member-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-REF-SSN-MEMBER-Record
!***********************************************************************
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
  !let $outREF-SSN = 'REF*0F*' || $emplid
  let $outREF-SSN = 'REF*0F*' || $Ssn_Out
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
  add 1 to #total_line_count
  write 1 from $outREF-SSN
      	       			 
!***********************************************************************
End-Procedure Write-REF-SSN-MEMBER-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-REF-23-MEMBER-Record
!***********************************************************************
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
  !let $outREF-23 = 'REF*23*' || $map_emplid ||'@gianteagle.com' 
  let $outREF-23 = 'REF*23*' || $emplid ||'@gianteagle.com'
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
  add 1 to #total_line_count
  write 1 from $outREF-23
      	       			 
!***********************************************************************
End-Procedure Write-REF-23-MEMBER-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-REF-17-MEMBER-Record
!***********************************************************************

  ! Do get-gex-div-cd

  let $outREF-17 = 'REF*17*' || $empl_location
  add 1 to #total_line_count
  write 1 from $outREF-17
      	       			 
!***********************************************************************
End-Procedure Write-REF-17-MEMBER-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-DTP-FileDate-Record
!***********************************************************************

  let $outDTP-FileDate = 'DTP*303*D8*' || $date_string1
  add 1 to #total_line_count
  write 1 from $outDTP-FileDate
      	       			 
!***********************************************************************
End-Procedure Write-DTP-FileDate-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-DTP-HireDate-Record
!***********************************************************************

  let $outDTP-HireDate = 'DTP*336*D8*' || $last_hire_dt_op1
  add 1 to #total_line_count
  write 1 from $outDTP-HireDate
      	       			 
!***********************************************************************
End-Procedure Write-DTP-HireDate-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-NM1-Record
!***********************************************************************
  let $LAST_NAME = rtrim($LAST_NAME, ' ')
  let $FIRST_NAME = rtrim($FIRST_NAME, ' ')
  let $MIDDLE_NAME = rtrim($MIDDLE_NAME, ' ')
  let $prefix = rtrim($prefix, ' ')
  let $Suffix = rtrim($Suffix, ' ')
  let $outNM1 = 'NM1*IL*1*' || $LAST_NAME  || '*' || $FIRST_NAME ||'*' || $MIDDLE_NAME ||'*' || $prefix ||'*' || $Suffix || '*34*' || $emplid
  add 1 to #total_line_count
  write 1 from $outNM1
      	       			 
!***********************************************************************
End-Procedure Write-NM1-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-PER-Record
!***********************************************************************
 if ltrim($phone,' ') <> '' 
  let $outPER = 'PER*IP**HP*' || $phone
  add 1 to #total_line_count
  write 1 from $outPER
 End-if
      	       			 
!***********************************************************************
End-Procedure Write-PER-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-N3-Record
!***********************************************************************

  let $address1 = rtrim($address1, ' ')
  let $address2 = rtrim($address2, ' ')
  
  if ltrim($address1,' ') <> '' 
   Do SPL-REMOVE ($address1, $address1_out)
  End-if
  
  if ltrim($address2,' ') <> '' 
    Do SPL-REMOVE ($address2, $address2_out)
  else
    let $address2_out=''
  End-if
  
  let $address1_out = ltrim (rtrim($address1_out, ' '),' ')
  let $address2_out = ltrim (rtrim($address2_out, ' '),' ')
      
  if ltrim($address2_out,' ') <> ''  
      let $outN3 = 'N3*' || $address1_out || '*' || $address2_out 
      add 1 to #total_line_count
      write 1 from $outN3
    else
     if ltrim($address1_out,' ') <> ''  
       let $outN3 = 'N3*' || $address1_out 
       add 1 to #total_line_count
       write 1 from $outN3
     end-if
  end-if  
      	       			 
!***********************************************************************
End-Procedure Write-N3-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-N4-Record
!***********************************************************************

  let $city = rtrim($city, ' ')
  let $state = rtrim($state, ' ')
  let $postal = rtrim($postal, ' ')
  let $city_out = ''
  let $postal_out = ''
   
  if ltrim($city,' ') <> '' 
   Do SPL-REMOVE ($city, $city_out)
  End-if
  
  If ltrim($postal,' ') <> ''
   Do SPL-REMOVE-1($postal, $postal_out)
  End-If
    
  if ltrim($city_out,' ') <> '' and ltrim($state,' ') <> '' 
    let $outN4 = 'N4*' || $city_out || '*' || $state || '*' || $postal_out
    add 1 to #total_line_count
    write 1 from $outN4
  End-if
 
      	       			 
!***********************************************************************
End-Procedure Write-N4-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-DMG-Record
!***********************************************************************

  let $outDMG = 'DMG*D8*' || $birthdate || '*' || $sex
  add 1 to #total_line_count
  write 1 from $outDMG
      	       			 
!***********************************************************************
End-Procedure Write-DMG-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-HD-Record-IND
!***********************************************************************

  let $outHD = 'HD*030**HLT**IND'
  add 1 to #total_line_count
  write 1 from $outHD
      	       			 
!***********************************************************************
End-Procedure Write-HD-Record-IND
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-HD-Record-SP
!***********************************************************************

  let $outHD = 'HD*030**HLT**ESP'
  add 1 to #total_line_count
  write 1 from $outHD
      	       			 
!***********************************************************************
End-Procedure Write-HD-Record-SP
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-HD-Record-DP
!***********************************************************************

  let $outHD = 'HD*030**HLT**TWO'
  add 1 to #total_line_count
  write 1 from $outHD
      	       			 
!***********************************************************************
End-Procedure Write-HD-Record-DP
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-DTP-BeginDt-Record
!***********************************************************************
  !show '$file_begin_dtop:' $file_begin_dtop
  if $file_begin_dtop<'20130801'
    let $file_begin_dtop = '20130801'
  end-if
  !show 'After $file_begin_dtop :' $file_begin_dtop
  let $outDTPBeginDt = 'DTP*348*D8*' || $file_begin_dtop
  add 1 to #total_line_count
  write 1 from $outDTPBeginDt
      	       			 
!***********************************************************************
End-Procedure Write-DTP-BeginDt-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-DTP-EndDt-Record
!***********************************************************************
  if $file_end_dtop='' or $file_end_dtop=' '
     let $file_end_dtop = Datetostr(StrtoDate($AsofToday,'DD-MON-YYYY'),'YYYYMMDD')
  end-if
  let $outDTPEndDt = 'DTP*349*D8*' || $file_end_dtop
  add 1 to #total_line_count
  write 1 from $outDTPEndDt
      	       			 
!***********************************************************************
End-Procedure Write-DTP-EndDt-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-REF-GROUPNBR-Record
!***********************************************************************

  let $outREF-GROUPNBR = 'REF*1L*' || $group
  add 1 to #total_line_count
  write 1 from $outREF-GROUPNBR
      	       			 
!***********************************************************************
End-Procedure Write-REF-GROUPNBR-Record
!***********************************************************************

!*********************************************************************
begin-procedure Get-Dependent
!*********************************************************************
#debug9 show 'Get-Dependent'

   move '' to $834_dep_ssn
   move '' to $834_dep_birthdate
   move '' to $834_dep_fname
   move '' to $834_dep_mname
   move '' to $834_dep_lname
   move '' to $834_dep_suffix
   move '' to $834_dep_sex
   move '' to $834_dep_relationcd
   move '' to $dep_relationship
   move '' to $dep_covrg_cd

begin-select
HD.EMPLID
DB.DEPENDENT_BENEF
DB.FIRST_NAME
DB.MIDDLE_NAME
DB.LAST_NAME
DB.NAME_SUFFIX
DB.RELATIONSHIP
DB.MAR_STATUS
DB.STUDENT
DB.DISABLED
TO_CHAR(DB.BIRTHDATE,'YYYYMMDD')		&DB.BIRTHDATE
DB.SEX
NVL(DNID.NATIONAL_ID,' ')   &DNID.NATIONAL_ID
HBH.COVRG_CD		   


   move &DB.DEPENDENT_BENEF to $dependent_benef
   move &DB.FIRST_NAME      to $834_dep_fname
   move &DB.MIDDLE_NAME     to $834_dep_mname
   move &DB.LAST_NAME       to $834_dep_lname
   move &DB.NAME_SUFFIX     to $834_dep_suffix
   move &DB.RELATIONSHIP    to $dep_relationship
   move &DB.MAR_STATUS      to $dep_mar_status
   move &DB.STUDENT         to $dep_student
   move &DB.DISABLED        to $834_dep_disabled
   move &DB.BIRTHDATE       to $834_dep_birthdate
   move &DB.SEX             to $834_dep_sex
   move &DNID.NATIONAL_ID   to $834_dep_ssn
   move &HBH.COVRG_CD       to $dep_covrg_cd

      
FROM PS_DEPENDENT_BENEF DB,
     PS_HEALTH_DEPENDNT HD,
     PS_HEALTH_BENEFIT HBH,
     PS_DEP_BENEF_NID DNID
WHERE DB.EMPLID          = HD.EMPLID
AND   DB.EMPLID          = $emplid
AND   HD.EMPL_RCD        = $empl_rcd
AND   DB.DEPENDENT_BENEF = HD.DEPENDENT_BENEF
AND   HD.PLAN_TYPE       = $dep_plan_type
AND   DB.RELATIONSHIP    = $dep_relation              
AND   HBH.PLAN_TYPE      = HD.PLAN_TYPE
AND   HD.EMPLID          = HBH.EMPLID
AND   HD.EMPL_RCD        = HBH.EMPL_RCD
AND   HBH.COVERAGE_ELECT = 'E'        
AND   DB.EMPLID          = DNID.EMPLID(+)
AND   DB.DEPENDENT_BENEF = DNID.DEPENDENT_BENEF(+)      
AND   HD.EFFDT  =  HBH.EFFDT 
AND   HBH.EFFDT =  (SELECT MAX(EFFDT) FROM PS_HEALTH_BENEFIT
                   WHERE HBH.EMPLID = EMPLID
                   AND HBH.EMPL_RCD = EMPL_RCD
                   AND HBH.COBRA_EVENT_ID = COBRA_EVENT_ID
                   AND HBH.PLAN_TYPE   = PLAN_TYPE
                   AND HBH.BENEFIT_NBR = BENEFIT_NBR
		   AND EFFDT <= $range_end_dt) 
End-Select
!*********************************************************************
End-procedure Get-Dependent
!*********************************************************************

!***********************************************************************
Begin-Procedure Write-DEP-Record
!***********************************************************************
      
     do Write-ISA-Member-Record-Dep
     do Write-REF-SSN-MEMBER-Record-Dep
     do Write-NM1-Record-Dep
     do Write-DMG-Record-Dep
     do Write-HD-Record-Dep
     do Write-DTP-BeginDt-Record-Dep
       If $term_rowfound = 'Y' 
        do Write-DTP-EndDt-Record-Dep
       End-If   
     do Write-REF-GROUPNBR-Record-Dep
	       			 
!***********************************************************************
End-Procedure Write-DEP-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-ISA-Member-Record-Dep
!***********************************************************************

 evaluate $dep_relationship
    when = 'SP'
       let $834_dep_relationcd   = '01'
       let $834_dep_disabled = 'N'
       break
    when = 'NA'			
      let $834_dep_relationcd   = '53'
      let $834_dep_disabled = 'N'
       break
    when-other
          let $834_dep_relationcd   = '99'
     break
  end-evaluate     

 If $834_dep_disabled = 'Y' 
   let $outISAMember = 'INS*N*' || $834_dep_relationcd || '*030*XN*A****' || '*' || $834_dep_disabled 
  else 
   let $outISAMember = 'INS*N*' || $834_dep_relationcd || '*030*XN*A'
 End-if
  add 1 to #total_line_count
  write 1 from $outISAMember
      	       			 
!***********************************************************************
End-Procedure Write-ISA-Member-Record-Dep
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-REF-SSN-MEMBER-Record-Dep
!***********************************************************************
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
  !let $outREF-SSN = 'REF*0F*' || $emplid
  let $outREF-SSN = 'REF*0F*' || $ssn_out
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
  add 1 to #total_line_count
  write 1 from $outREF-SSN
      	       			 
!***********************************************************************
End-Procedure Write-REF-SSN-MEMBER-Record-Dep
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-NM1-Record-Dep
!***********************************************************************
  let $834_dep_fname = rtrim($834_dep_fname, ' ')
  let $834_dep_mname = rtrim($834_dep_mname, ' ')
  let $834_dep_lname = rtrim($834_dep_lname, ' ')
  let $834_dep_suffix = rtrim($834_dep_suffix, ' ')
  If ltrim($834_dep_ssn,' ') <> '' 
    let $outNM1 = 'NM1*IL*1*' || $834_dep_lname  || '*' || $834_dep_fname ||'*' || $834_dep_mname ||'**' || $834_dep_suffix || '*34*' || $834_dep_ssn 
   else
    If ltrim($834_dep_suffix,' ') <> '' 
       let $outNM1 = 'NM1*IL*1*' || $834_dep_lname  || '*' || $834_dep_fname ||'*' || $834_dep_mname ||'**' || $834_dep_suffix 
      else
       If ltrim($834_dep_mname,' ') <> '' 
         let $outNM1 = 'NM1*IL*1*' || $834_dep_lname  || '*' || $834_dep_fname ||'*' || $834_dep_mname 
        else
         let $outNM1 = 'NM1*IL*1*' || $834_dep_lname  || '*' || $834_dep_fname 
       End-If
     End-If
  End-if
  add 1 to #total_line_count
  write 1 from $outNM1
      	       			 
!***********************************************************************
End-Procedure Write-NM1-Record-Dep
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-DMG-Record-Dep
!***********************************************************************

  let $outDMG = 'DMG*D8*' || $834_dep_birthdate || '*' || $834_dep_sex 
  add 1 to #total_line_count
  write 1 from $outDMG
      	       			 
!***********************************************************************
End-Procedure Write-DMG-Record-Dep
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-HD-Record-Dep
!***********************************************************************

  evaluate $dep_relationship
    when = 'SP'
       let $834_dep_covrg_cd   = 'ESP'
       break
    when = 'NA'			
      let $834_dep_relationcd   = 'TWO'
       break
    when-other
          let $834_dep_covrg_cd   = 'IND'
     break
  end-evaluate  

  let $outHD = 'HD*030**HLT**' || $834_dep_covrg_cd 
  add 1 to #total_line_count
  write 1 from $outHD
      	       			 
!***********************************************************************
End-Procedure Write-HD-Record-Dep
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-DTP-BeginDt-Record-Dep
!***********************************************************************
  !show '$file_begin_dtop :' $file_begin_dtop
  if $file_begin_dtop<'20130801'
    let $file_begin_dtop = '20130801'
  end-if
  !show 'After $file_begin_dtop  :' $file_begin_dtop
  let $outDTPBeginDt = 'DTP*348*D8*' || $file_begin_dtop
  add 1 to #total_line_count
  write 1 from $outDTPBeginDt
      	       			 
!***********************************************************************
End-Procedure Write-DTP-BeginDt-Record-Dep
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-DTP-EndDt-Record-Dep
!***********************************************************************
  if $file_end_dtop='' or $file_end_dtop=' '
     let $file_end_dtop = Datetostr(StrtoDate($AsofToday,'DD-MON-YYYY'),'YYYYMMDD')
  end-if
  let $outDTPEndDt = 'DTP*349*D8*' || $file_end_dtop
  add 1 to #total_line_count
  write 1 from $outDTPEndDt
      	       			 
!***********************************************************************
End-Procedure Write-DTP-EndDt-Record-Dep
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-REF-GROUPNBR-Record-Dep
!***********************************************************************

  let $outREF-GROUPNBR = 'REF*1L*' || $group 
  add 1 to #total_line_count
  write 1 from $outREF-GROUPNBR
      	       			 
!***********************************************************************
End-Procedure Write-REF-GROUPNBR-Record-Dep
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-SE-Trailer-Record
!***********************************************************************

   add 1 to #total_line_count
  Let $total_line_count = edit(#total_line_count,'0000000')
  let $total_line_count = ltrim($total_line_count, '0')
  let $outSE = 'SE*' || $total_line_count || '*' || $seq_number1

  write 1 from $outSE
      	       			 
!***********************************************************************
End-Procedure Write-SE-Trailer-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-GE-Trailer-Record
!***********************************************************************

  let $outGE = 'GE*1*' || $seq_number

  write 1 from $outGE
      	       			 
!***********************************************************************
End-Procedure Write-GE-Trailer-Record
!***********************************************************************

!***********************************************************************
Begin-Procedure Write-IEA-Trailer-Record
!***********************************************************************

  let $outIEA = 'IEA*1*' || $seq_number

  write 1 from $outIEA
  Do Update-Seq-Number
      	       			 
!***********************************************************************
End-Procedure Write-IEA-Trailer-Record
!***********************************************************************

!***********************************************************************
!Procedure for removing special characters from a string
!Here we use the ideology that we have a finite set of
!valid charecters (alpha numeric) while the set of special
!characters is fairly big
!***********************************************************************!
! Procedure : 	SPL-REMOVE
! Desc: Removes special charecters from the source strign - $srcstr.
!	The out put will be stored in the $outputstr
!	To use this procedure use: Do SPL-REMOVE($Source, $outputstr)
!***********************************************************************!
BEGIN-PROCEDURE SPL-REMOVE($srcstr, :$outputstr)
 
LET $valid_chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz 0123456789'
LET $invalid_chars = translate($srcstr, $valid_chars, '')
LET #invalid = length($invalid_chars)
 IF #invalid
  LET $outputstr = translate($srcstr, $invalid_chars, '')
ELSE
 LET $outputstr = $srcstr
END-IF
 
END-PROCEDURE
!***********************************************************************!

!***********************************************************************
!Procedure for removing special characters from a string
!Here we use the ideology that we have a finite set of
!valid charecters (numeric) while the set of special
!characters is fairly big
!***********************************************************************!
! Procedure : 	SPL-REMOVE-1
! Desc: Removes special charecters from the source strign - $srcstr.
!	The out put will be stored in the $outputstr
!	To use this procedure use: Do SPL-REMOVE-1($Source1, $outputstr1)
!***********************************************************************!
BEGIN-PROCEDURE SPL-REMOVE-1($srcstr1, :$outputstr1)
 
LET $valid_chars1 = '0123456789'
LET $invalid_chars1 = translate($srcstr1, $valid_chars1, '')
LET #invalid1 = length($invalid_chars1)
 IF #invalid1
  LET $outputstr1 = translate($srcstr1, $invalid_chars1, '')
ELSE
 LET $outputstr1 = $srcstr1
END-IF
 
END-PROCEDURE
!***********************************************************************!

!***********************************************************************
begin-procedure Select-Seq-Number
!***********************************************************************
#debug9 Show 'Select-Seq-Number'

  let #seq_number = '100000001'
  let #seq_number1 = '999999999'

begin-select 
SEQ.SEQ_NBR
SEQ.SEQ_NBR1

  let #seq_number  = &SEQ.SEQ_NBR
  let #seq_number1 = &SEQ.SEQ_NBR1
  
from PS_GEX_ASSOCIAT_TM SEQ
   
end-select

!***********************************************************************
end-procedure Select-Seq-Number
!***********************************************************************

!***********************************************************************
Begin-Procedure Update-Seq-Number
!***********************************************************************
#debug9 Show  'Update-Seq-Number'

Begin-SQL
 Update PS_GEX_ASSOCIAT_TM
     Set SEQ_NBR = (SEQ_NBR +1), SEQ_NBR1 = (SEQ_NBR1 - 1)
       
End-SQL

!***********************************************************************
End-Procedure Update-Seq-Number
!***********************************************************************

!***********************************************************************
begin-procedure get-gex-div-cd
!***********************************************************************
#debug9 Show 'get-gex-div-cd'

  let $gex_div_cd = ''

begin-select 
gdt.gex_company_div_cd

  let $gex_div_cd = &gdt.gex_company_div_cd

from ps_gex_dept_tbl gdt
where gdt.deptid = $deptid
and gdt.setid = 'COMMN'
and gdt.effdt = 
   (select max(effdt)
    from ps_gex_dept_tbl
    where setid = gdt.setid
    and deptid = gdt.deptid
    and effdt <= $range_end_dt) 
    
end-select

!***********************************************************************
end-procedure get-gex-div-cd
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Group-Number
!***********************************************************************
#debug9 Show 'Get-Group-Number'
 
 Let $group = ' '

Begin-Select
BPLAN.GROUP_NBR
   move &BPLAN.GROUP_NBR  to $group
   
FROM PS_BENEF_PLAN_TBL BPLAN
WHERE BPLAN.PLAN_TYPE = '1L'
AND BPLAN.BENEFIT_PLAN = $grp_benefit_plan
AND BPLAN.EFFDT =  (SELECT MAX(EFFDT)
                   FROM PS_BENEF_PLAN_TBL
                   WHERE BPLAN.PLAN_TYPE = PLAN_TYPE
                   AND BPLAN.BENEFIT_PLAN = BENEFIT_PLAN
		   AND EFFDT    <= $range_end_dt)
  

End-Select
						 
!***********************************************************************
End-Procedure Get-Group-Number
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Group-NumberA
!***********************************************************************
#debug9 Show 'Get-Group-NumberA'
 
 Let $group = ' '
 
Begin-Select
BPLANA.GROUP_NBR
   move &BPLANA.GROUP_NBR  to $group
   
FROM PS_BENEF_PLAN_TBL BPLANA
WHERE BPLANA.PLAN_TYPE = '1L'
AND BPLANA.BENEFIT_PLAN NOT IN (select BENEFIT_PLAN from PS_GEX_RC_UNN_BENP 
                                Where OPRID = [$OprID] AND RUN_CNTL_ID = [$Run_Cntl_ID])
AND BPLANA.BENEFIT_PLAN NOT IN (select BENEFIT_PLAN from PS_GEX_RC_BEN_PRGM 
                                Where OPRID = [$OprID] AND RUN_CNTL_ID = [$Run_Cntl_ID])                                
AND BPLANA.EFFDT =  (SELECT MAX(EFFDT)
                   FROM PS_BENEF_PLAN_TBL
                   WHERE BPLANA.PLAN_TYPE = PLAN_TYPE
                   AND BPLANA.BENEFIT_PLAN = BENEFIT_PLAN
		   AND EFFDT    <= $range_end_dt)
End-Select
						 
!***********************************************************************
End-Procedure Get-Group-NumberA
!***********************************************************************

!***********************************************************************
Begin-Procedure Insert-Associate-Member-Table
!***********************************************************************
#debug9 Show 'Insert-Associate-Member-Table'
 
 if $benefit_program=''
   move ' ' to $benefit_program
 end-if  
 
 show '$Map_emplid :' $Map_emplid
 show '#SEQNUM     :' #SEQNUM
 show '$X000_WHERE_SELECT_ASOFDATE:' $X000_WHERE_SELECT_ASOFDATE
 show '$empl_rcd   :' $empl_rcd
Begin-SQL  On-Error=SQL-Error-Found('Insert-Associate-Member-Table')
  Insert Into PS_GEX_ASSOCIAT_TM
    !Values ($X000_WHERE_SELECT_ASOFDATE, #SEQNUM, $emplid, $Map_emplid,$empl_rcd, '510', $name, $union_cd, $benefit_program, $file_begin_dt, $file_end_dt, #seq_number, #seq_number1)
        Values ($X000_WHERE_SELECT_ASOFDATE, #SEQNUM, $ssn_out, $Map_emplid,$empl_rcd, '510', $name, $union_cd, $benefit_program, $file_begin_dt, $file_end_dt, #seq_number, #seq_number1)
End-SQL
!***********************************************************************
End-Procedure Insert-Associate-Member-Table
!***********************************************************************

!***********************************************************************
begin-procedure Select-file-Begin-Dt
!***********************************************************************
#debug8 display 'Select-file-Begin-Dt'

Let $file_begin_dt1 =  ''
let $previous_row_exist = 'N'
let $previous_union_cd = ''
let $previous_ben_pgm = ''
 
begin-select
ATM.BEGIN_DT 
ATM.UNION_CD     
ATM.BENEFIT_PROGRAM  

  Let $file_begin_dt1 =  &ATM.BEGIN_DT 
  let $previous_union_cd = &ATM.UNION_CD 
  let $previous_ben_pgm = &ATM.BENEFIT_PROGRAM
  let $previous_row_exist = 'Y'
  !show '$file_begin_dt1 :' $file_begin_dt1
    
FROM PS_GEX_ASSOCIAT_TM ATM
!WHERE ATM.SSN = $emplid
WHERE ATM.SSN = $ssn_out
AND ATM.EMPL_RCD = $empl_rcd
AND ATM.RUNDATE = (SELECT MAX(RUNDATE) FROM PS_GEX_ASSOCIAT_TM 
		WHERE SSN = ATM.SSN)
AND ATM.SEQNUM = (SELECT MAX(SEQNUM) FROM PS_GEX_ASSOCIAT_TM 
		WHERE SSN = ATM.SSN
		AND RUNDATE = ATM.RUNDATE)
end-select

!***********************************************************************
End-Procedure Select-file-Begin-Dt
!***********************************************************************

!***********************************************************************
begin-procedure current-union
!***********************************************************************
#debug8 display 'current-union'
   !display 'current-union'
   move 'N' to $current_union_rowfound
  Let $current_benefit_plan  = ''
 
begin-select on-error=sql-error-found('current-union')
GEX_RC_UNN_BENP.benefit_plan

 Let $current_union_rowfound ='Y'
 Let $current_benefit_plan  = &GEX_RC_UNN_BENP.benefit_plan
  
from PS_GEX_RC_UNN_BENP GEX_RC_UNN_BENP
Where GEX_RC_UNN_BENP.OPRID          = [$OprID]
And   GEX_RC_UNN_BENP.RUN_CNTL_ID    = [$Run_Cntl_ID]
And   GEX_RC_UNN_BENP.UNION_CD       = $union_cd
end-select
!***********************************************************************
end-procedure current-union
!***********************************************************************

!***********************************************************************
begin-procedure Previous-union
!***********************************************************************
#debug8 display 'Previous-union'
 
   move 'N' to $Previous_union_rowfound
  Let $Previous_benefit_plan  = ''

begin-select on-error=sql-error-found('Previous-union')
GEX_RC_UNN_BENP1.benefit_plan

 Let $Previous_union_rowfound ='Y'
 Let $Previous_benefit_plan  = &GEX_RC_UNN_BENP1.benefit_plan
  
from PS_GEX_RC_UNN_BENP GEX_RC_UNN_BENP1
Where GEX_RC_UNN_BENP1.OPRID          = [$OprID]
And   GEX_RC_UNN_BENP1.RUN_CNTL_ID    = [$Run_Cntl_ID]
And   GEX_RC_UNN_BENP1.UNION_CD       = $previous_union_cd
end-select
!***********************************************************************
end-procedure Previous-union
!***********************************************************************

!***********************************************************************
begin-procedure current-ben-pgm
!***********************************************************************
#debug8 display 'current-ben-pgm'
 
 move 'N' to $current_ben_pgmfound
 Let $current_benefit_plan_pgm  = ''
  
begin-select on-error=sql-error-found('current-ben-pgm')
GEX_RC_UNN_BENPGM.benefit_plan

 Let $current_ben_pgmfound ='Y'
 Let $current_benefit_plan_pgm  = &GEX_RC_UNN_BENPGM.benefit_plan
 
from PS_GEX_RC_BEN_PRGM GEX_RC_UNN_BENPGM
Where GEX_RC_UNN_BENPGM.OPRID             = [$OprID]
And   GEX_RC_UNN_BENPGM.RUN_CNTL_ID       = [$Run_Cntl_ID]
And   GEX_RC_UNN_BENPGM.BENEFIT_PROGRAM   = $benefit_program
end-select
!***********************************************************************
end-procedure current-ben-pgm
!***********************************************************************

!***********************************************************************
begin-procedure Previous-ben-pgm
!***********************************************************************
#debug8 display 'Previous-ben-pgm'
 
   move 'N' to $Previous_ben_pgmfound
  Let $Previous_benefit_plan_pgm  = ''

begin-select on-error=sql-error-found('Previous-ben-pgm')
GEX_RC_UNN_BENPGM1.benefit_plan

 Let $Previous_ben_pgmfound ='Y'
 Let $Previous_benefit_plan_pgm  = &GEX_RC_UNN_BENPGM1.benefit_plan
 
from PS_GEX_RC_BEN_PRGM GEX_RC_UNN_BENPGM1
Where GEX_RC_UNN_BENPGM1.OPRID            = [$OprID]
And   GEX_RC_UNN_BENPGM1.RUN_CNTL_ID      = [$Run_Cntl_ID]
And   GEX_RC_UNN_BENPGM1.BENEFIT_PROGRAM  = $previous_ben_pgm
end-select
!***********************************************************************
end-procedure Previous-ben-pgm
!***********************************************************************

!***********************************************************************
begin-procedure Select-Max-SEQNUMBER
!***********************************************************************
#debug8 display 'Select-Max-SEQNUMBER'

Let #SEQNUM =  '1'
begin-select
MAX(SEQNUM)      &SEQNUM

  Let #SEQNUM = &SEQNUM + 1
  
FROM   PS_GEX_ASSOCIAT_TM 
WHERE  RUNDATE = $X000_WHERE_SELECT_ASOFDATE 
end-select

!***********************************************************************
End-Procedure Select-Max-SEQNUMBER
!***********************************************************************

!***********************************************************************
Begin-Procedure Close-File
!***********************************************************************
#debug9 Show 'Close-File'
  Close 1

  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop
  End-If
!***********************************************************************  
End-Procedure
!***********************************************************************

!***********************************************************************
begin-procedure SQL-Error-Found($Proc_Name) 
!***********************************************************************
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
!***********************************************************************
End-Procedure
!***********************************************************************

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'rotname3.sqc'  !Rotate-Name
#Include 'askaod.sqc'    !Ask-As-Of-Date Routine
#include 'gexxx922.sqc'  !Get pay single row run control
#Include 'gexxx919.sqc'  !Get Dedcd multiple row table
#include 'gexrehdt.sqc'	 !GEX-MXT 03/24/2008 Fixed for REHIRE DT
#include 'gexxx920.sqc'  !Get ASOFDATE from Run Control
#include 'gexxx902.sqc'  !Get Deptids run control
#Include 'getgeid.sqc'   !Get SSN
