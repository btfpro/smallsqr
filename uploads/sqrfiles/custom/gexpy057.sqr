!***********************************************************************
!  GEXPY057:  Payroll Advice Print - USA                               *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1988-1996 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
!      $Date:: 6/19/97 1:58p    $                                      *
!  $Revision:: 19               $                                      *
!  $Workfile:: DDP003.SQR       $                                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
! Function: Generates advices and earnings statements for a given      *
!           RUN_ID or (partial) pay calendar.                          *
!                                                                      *
!***********************************************************************
! ID       INITIALS   DATE            DESCRIPTION                      *
!***********************************************************************
!            SXK      04/19/98        Modified to change the sort      *
!                                                                      *
! GEXPY056   SXK      12/09/98        Used Rule optimizer              *
!                                                                      *
!  GEXPY057   SXK      12/16/1998     Changed to include separator     *
!				      when department changes          *
!                                                                      *
!  GEXPY057   SXK      12/21/1998     Changed separator page logic     *
!				      and order by clause              *
!                                                                      *
!  GEXPY057   SXK      01/25/1999     Modified                         *
!				 1. Sorting order to original delivered*
!                                   one                                *
!				 2. Adjust the totals to print on right*
!                                   rows                               *
!				 3. Adjust location name to be same    *
!                                   everywhere                         *
!				 4. Moved Empl ID besides addrline 3   *
!				 5. Placed AcctCD in between deptid &  *
!                                   location                           *
!                                                                      *
!             SXK      02/23/1999   Modified to not to print 515 hours *
!                                                                      *
!	      SXK      04/06/1999    Added department and acctcd on the*
!			             address flap                      *
!                                                                      *
!             SXK      04/07/1999    Modified to suppress hourly rt and*
!				     hours for GEI/OFF and GEI/EXE for *
!				     REG erncd                         *
!                                                                      *
!	      SXK      04/08/1999    Modified to do separate sheet for *
!				     GEI/EXE or GEI/OFF based on mail  *
!                                    drop                              *
!                                                                      *
!             SXK      04/12/1999    Modified to accept multiple       *
!                                    individual check numbers to be    *
!                                    able to reprint                   *
!                                                                      *
!             CWB      07/19/1999    If dedcd=PAYADJ, set YTD to zero. *
!                                                                      *
!             CWB      08/25/1999    Added logic to trim the maildrop  *
!                                    field so separator sheets would   *
!                                    not occur within a maildrop for   *
!                                    GEI OFF & EXE.                    *
!                                                                      * 
!	      SXK      10/11/1999    Modified to print extra page when *
!				     any of earnings,taxes and         *
!                                    deductions exceed 13              *
!                                                                      *
!             AXL      11/02/1999    Removed main call for Rule        *
!                                    Optimizer and added Rule Hints to *
!                                    each sql statement                *
!                                                                      *
!             SXK      12/13/1999    Changed ssn to emplid, zip to     *
!                                    postal and &locality_abbrv to     *
!                                    $localabbr                        *
!                                                                      *
!             AXL      02/04/2000    Replaced references to            *
!                                    Check_No_Start & Check_No_Thru    *
!                                    with new 7.5 equivalents          *
!                                    Chkadv_No_Start & Chkadv_No_Thru  *
!                                                                      *
!             JNB      02/01/2000    Suppressed printing location on   *
!                                    the address flap                  *
!                                                                      * 
!             CJH      10/15/2000    Suppress printing Hours and Rate  *
!                                    for earnings 167 and 170          *
!                                                                      *
!             AXL      10/24/2000    Added displays showing beginning  *
!                                    and ending advice #'s.            *
!                                                                      *
!             MRP      01/11/2001     COD Modifications:               *
!                                     Added company 'RFI' and paygroup *
!                                     'OF4'                            *
!                                                                      *
!             AXL      01/26/2001    Incorporated Check-Override logic *
!                                    found in DDP003.SQR to print      *
!                                    correct hourly rate on adv stub.  *
!                                                                      * 
!             CWB      06/27/2001    Changed the advice number display *
!                                    to use &C.PAYCHECK_NBR instead of       * 
!                                    &B.PAYCHECK_NBR, correcting the log to  *
!                                    show the right numbers.           *   
!                                                                      * 
!             CWB      09/21/2001    Changed to use the xlatshortname  *
!                                    in the Deduction Description,     *
!                                    when the DEDCD is GARNSH, instead *
!                                    of 'Garnishment' (the DESCR from  *
!                                    PS_DEDUCTION_TBL). Replaced RULE  *  
!                                    hint with ALL_ROWS in main select *
!                                    to improve performance.           *  
!                                                                      * 
!                                                                      *
!             CJH      12/21/2001   Correct Get-Ee-Tax-Data select     *
!                                   layout                             *
!                                                                      *
!             SCM      04/18/2002   Added tax_class='G'  OASDI Tips    *
!                                   & tax_class='T'  FICA Medicare Tips*
!                                   for Bradley House acquisition.     *
!                                                                      *
!             GBD      07/12/2002   Modified code to identify Advices  *
!                                   separately from Checks.            *
!             AXL      09/16/2002   Changed the CHECK# that prints on  *
!                                   advices to address a problem for   *
!                                   people who split distributions     *
!                                   between checks and advices.        *
!             PSR      09/18/2002   Modified code to get MAIL_DROP from*
!                                   PS_PAYROLL_DATA - V8.3 Upgrade     *
!	      SRK      02/18/2003   Commented out benefit_rcd_nbr in   *
!					deduction_bal select           *
!                                                                      *
!             CJH      06/24/2003   $SpclProcess = G in 8.3, no longer *
!                                   'Y' for garnishments.              *
!                                                                      *
!             SCM  07/03/2003   Added processing for Team bonus checks.*
!                               Print 'TBP' in upper right hand corner *
!                               of address flap if EE had an erncd of  *
!                               '535' (TBP Bonus erncd).               *
!                  07/29/2003  Added rate to print if 'Team Bonus' erncd
!                  08/05/2003  If team bonus erncd and YTD amt = 0,    *
!                              do not print zero... but print a blank  *
!             CWB  10/28/2003  Changes based on DDP003.SQR from Tax    * 
!                              Tax Update03-F.                         *
!                                                                      * 
!CSR 10830    CWB  03/10/2005  Changes to the counters used to print   *
!                              a second page when more tha 13 entries  *
!                              in earnings or deductions.              *
!                              Also changes to separator page logic.   *
!                              Commented out the RULE hints for better *
!                              performance.                            *
!                                                                      * 
!ITG # 37593  ISDVMXR  09/01/2006 Change the check print and advice print  *
!                              to hide a portion of the SSN            *
!                                                                      * 
!CSR 11148    CWB  02/07/2007  Expand advice number edit from 7 digits *
!                              to 8.                                   *
!                                                                      *
! GEXPY057    MXT  09/06/2007  HCM 9.0 Upgrade                         *
!                                                                      * 
!         VENDAXG  03/05/2008  HCM Upgrade 9.0			                   *
!         Vendaxg  08/11/2008  ITG#42511			                         *
!S3#11600521 ISDVNPK 10/21/2008 Modified for the log to say the correct* 
!                               number of Advices sent to print shop   *
!         VENDTKK  02/12/2009   Added INCLUDE GETPOSNM.SQC to pull     *
!                  	           JOBTITLE from POSITION_DATA.DESCR   *
!				   field instead of JOBCODE_TBL.DESCR  *
!	 ISDVSXP 04/03/2009	 SSN to 7 digit emplid (ITG#59104)     *
!SCT 12657676 ISDVDZK 04/23/2009  Modified the code to take Fed_Tax_data *
!                                 depending upon the Check date as per   *
!                                 the SCT 12657676                       *    
!SCT 12770189 ISDV-DZK 05/07/2009 Modified the code as per the SCT 12770189 *
!                                 to take data from Direct Deposit as per   *
!                                 the Check Date  *
!SCT 12881948 ISDVSXP  06/04/2009 Masking the Accout Numbers
!ITG 71975   VENDKXY  01/18/2009 Done the changes in order to suppress *
!       earning codes 700 and 701				       *
!GEXPY_848_B00699208_01 Vahini Katta 08/05/2013                        *
! Added Tax class 7 Additional Medicare EE                             *
!GEX_SEC_REENG      Surya Sobha 06/19/2015                             *
!		    Changes related to gex_emplid_mapp/7 digit emplid  *
!                   Changes releated to Peopletools Upgrade 8.52       *
!  ISDVMZA    12/02/2015  Added logic to display company name as --    *
!                         Butler Refrigerated Meats Inc -- for those   *
!                         TMs who were transferred from BRM to TMK and *
!                         got assigned to paygroup 'W09'               *
!***********************************************************************

#include 'setenv.sqc'    !set database environment
#include 'setup07.sqc'
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'getdednm.sqc'  !Get-Deduction-Name procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'geternnm.sqc'  !Get-Earnings-Name procedure
#include 'getjobtl.sqc'  !Get-Job-Title procedure
#include 'getlcdta.sqc'  !Get-Local-Tax-Data
#include 'getlocnm.sqc'  !Get-Location-Name procedure
#include 'readxlat.sqc'  !Read-Translate-Table procedure
#include 'rotname1.sqc'  !Rotate-Name procedure
#include 'datetime.sqc'  !general date and time formatting procedures
#include 'number.sqc'    !general number formatting procedures
#include 'payinit.sqc'   !Payroll-Report-Initialization procedure
#include 'payrnctl.sqc'  !Get-Run-Control procedure
#include 'stdapi.sqc'    !StdAPI-Init procedure
#include 'reset.sqc'     !Reset printer procedure
#include 'getbalid.sqc'  !Get-Calendar-Year-Id
!#include 'gexaltse.sqc'  Alter session SQC
!SXK 01/25/99 Begin
#Include 'getactnm.sqc'  !Get-Acctcd-Name Procedure
!SXK 01/25/99 End
#Include 'getposnm.sqc'  !Get-Position-Title    VENDTKK ITG#56786   12-Feb-2009  
!VENDAXG Added for Upgrade 9.0 - Begin
!VENDKXY 01/31/2008 Begin
#Include 'gexpydt.sqc'  !VENDKXY FOR ITG 46924 ON 01/31/2008 modify the pay period begin and end dates
!VENDKXY 01/31/2008 End
!VENDAXG Added for Upgrade 9.0 - End


!***********************************************************************
begin-setup
!***********************************************************************

#ifndef MVS
  printer-init <27>E<27>&l0L
  !            |     --> Perforation Skip
  !             --> Reset

  declare procedure
    before-report = Init-Page-Size
#endif

  page-size 85 131

end-setup


!***********************************************************************
begin-procedure Init-Page-Size
!***********************************************************************
! This sends a 'Perforation Skip' command to disable any bottom
! margin and obtain the maximum PCL page.  This is required to
! print the "NON-NEGOTIABLE" line reasonably close to the bottom
! of the form.

  encode '<27>&l0L' into $perforation_skip
!SXK 12/16/98 Begin

  encode '<27>&l4H' into $chktray
  encode '<27>&l2H' into $septray
  print $chktray () code
!  print $perforation_skip () code

!SXK 12/16/1998 End


end-procedure


!***********************************************************************
begin-procedure Init-Variables
!***********************************************************************

  let $ReportID    = 'GEXPY057'
  let $ReportTitle = 'Payroll Advice Print'
  let $Country     = 'USA'

  let #StdFont     = 5                  !Times Roman proportional
  let #StmtPntSize = 7                  !statement point-size
  let #AdvPntSize  = 9                  !advice point-size

end-procedure


!***********************************************************************
begin-procedure Init-Arrays
!***********************************************************************

  #define m  7  !number of separate detail sections
  #define n 13  !maximum number of detail entries per section
                !used to be 14

  let #RatesRow       = 0
  let #HoursRow       = 1
  let #EarnsRow       = 2
  let #PreTaxDedsRow  = 3
  let #TaxesRow       = 4
!  let #PostTaxDedsRow = 5
  let #BenefitsRow    = 5

  let #lastRow  = {m}-1
!SXK 09/28/1999 Begin
  let #lastCol  = 2*({n}-1)  !SXK used to be n-1
  #define new_n 26

    create-array name  = ETDarray         -
               size  = {m}                -
               field = Code:char:{new_n}  -
               field = Name:char:{new_n}  -
               field = Cur:number:{new_n} -
               field = YTD:number:{new_n}

  !SXK 09/28/1999 End

  let $lastCode = '***'
  let $lastName = 'Other'
  let #lastRate = 0

!  create-array name  = ETDarray       -
!	       size  = {m}            -
!	       field = Code:char:{n}  -
!	       field = Name:char:{n}  -
!	       field = Cur:number:{n} -
!	       field = YTD:number:{n}

  #define p  8  !number of separate ddp account detail entries

  let #lastAcct = {p}-1

  create-array name  = DDParray           -
	       size  = {p}                -
	       field = AccountType:char   -
	       field = Account#:char      -
	       field = DepositAmount:number

end-procedure


!***********************************************************************
begin-report
!***********************************************************************
!SXK 12/09/98 Begin
!do Alter-Session    Set Session to RULE Optimizer  
  do Init-DateTime
!SXK 12/09/98 End
  do Init-Number
  do StdAPI-Init
  do Init-Variables
  do Init-Arrays
  do Get-Calendar-Year-Id
  do Payroll-Report-Initialization      !calls "Report" procedure
  do Get-Advices

  display 'Total Advices ' noline
  display #TotalAdvices 999,999,999
  ! GEX ISDVNPK 10/21/2008 BEGIN -Modified for the log to say the correct number of Advices sent to print shop
  display 'Total Advices Printed ' noline
  display #TotalAdvicesPrinted 999,999,999
  !display 'Total Net Pay ' noline
  display 'Total Net Pay for Advices Printed ' noline
  ! GEX ISDVNPK 10/21/2008 BEGIN -Modified for the log to say the correct number of Advices sent to print shop
  display #TotalNetPay  $$$,$$$,$$9.99mi

  do StdAPI-Term
  do Reset

end-report


!***********************************************************************
begin-procedure Report
!***********************************************************************

  if $Prcs_Process_Instance = ''
    display 'Enter a Beginning Advice No. if restarting the run; ' noline
    display 'otherwise leave blank'
    input $BeginAdvice# maxlen=8 'Enter Beginning Advice No.' type=integer
    move  $BeginAdvice# to #BeginAdvice#
!SXK 04/06/1999 Begin
    input $ThruAdvice# maxlen=8 'Enter Ending Advice No.' type=integer
    if rtrim($thruadvice#,' ') <> ''
       move  $ThruAdvice# to #ThruAdvice#
    else
       let $ThruAdvice = '9999999'
       move $ThruAdvice to #ThruAdvice#
    end-if
!SXK 04/06/1999 End
!SXK 04/12/1999 Begin - Allows to print multiple individual checks
    input $check_numbers maxlen=8 'Enter Individual Check#. or leave blank' type=integer
    while rtrim($check_numbers,' ') <> ''
!       move $check_numbers to #check_numbers
       add 1 to #check_count_1
       if #check_count_1 = 1
          let $check_string = $check_string|| ' AND '||'((B.PAYCHECK_NBR = '||$check_numbers||')'
       else
          let $check_string = $check_string|| ' OR '||'(B.PAYCHECK_NBR = '||$check_numbers||')'
       end-if
       input $check_numbers maxlen=8 'Enter Individual Check#. or leave blank' type=integer
    end-while
    if #check_count_1 = 0
       let $check_string = $check_string||')'
    else
       let $check_string = $check_string||'))'
    end-if
    move $check_String to $GEXXX932_INCLUDE_CHECK_CRITERIA

    input $AdviceMessage maxlen=110 'Enter Advice Message'
  else
     move #RC_PAYINIT.Chkadv_No_Start to #BeginAdvice#	!AXL 02/04/2000 
!SXK 04/06/1999 Begin
     move #RC_PAYINIT.Chkadv_No_Thru  to #ThruAdvice#	!AXL 02/04/2000 
!SXK 04/06/1999 End
!SXK 04/12/1999 Begin
     let $GEXXX932_Check_Alias = 'B.PAYCHECK_NBR'
     Do GEXXX932-Select-Check-Parameters
     let $GEXXX932_INCLUDE_CHECK_CRITERIA = 'AND '||$GEXXX932_INCLUDE_CHECK_CRITERIA||')'

     move $RC_PAYINIT.Message_Text    to $AdviceMessage
  end-if
  display '$GEXXX932_INCLUDE_CHECK_CRITERIA: ' noline
  display $GEXXX932_INCLUDE_CHECK_CRITERIA
 
end-procedure


!***********************************************************************
begin-procedure Get-Advices
!***********************************************************************
!SXK 12/13/1999 Changed from zip to postal

  let $first_chk_adv = 'Y'	!AXL 10/22/2000 - New flag
  
  ! GEX ISDVNPK 10/21/2008 Modified for the log to say the correct number of Advices sent to print shop
  let  #TotalAdvices   = 0
  let  #TotalAdvicesPrinted  = 0
  let  #EndingAdvice = 0
  ! GEX ISDVNPK 10/21/2008 Modified for the log to say the correct number of Advices sent to print shop

begin-SELECT

! CWB 09/21/2001 BEGIN
/*+ ALL_ROWS */
!/*+ RULE */
! CWB 09/21/2001 END

A.COMPANY,A.PAYGROUP,A.PAY_BEGIN_DT,A.PAY_END_DT
A1.BALANCE_YEAR,A1.BALANCE_PERIOD,A.CHECK_DT,A1.BALANCE_ID
B.OFF_CYCLE,B.PAGE_NUM,B.LINE_NUM,B.SEPCHK
B.FORM_ID,B.PAYCHECK_NBR,B.CHECK_DT
B.EMPLID,B.EMPL_RCD,B.NAME,B.PAYCHECK_NAME,B.ADDRESS1,B.ADDRESS2,B.CITY,
B.BENEFIT_RCD_NBR,
B.UPDATE_DT       !ISDVDZk Modified the code as per the SCT 12657676 on 04/23/2009
B.STATE,B.postal
B.PAYCHECK_OPTION,B.PAYCHECK_ADDR_OPTN
B.TOTAL_GROSS,B.TOTAL_TAXES,B.TOTAL_DEDUCTIONS,B.NET_PAY
B.PAY_SHEET_SRC,B.DEPTID
C.FORM_ID,C.PAYCHECK_NBR
G.EFFDT
Y.TOTAL_GROSS_YTD,Y.TOTAL_TAXES_YTD,Y.TOTAL_DEDNS_YTD,Y.NET_PAY_YTD
    
   add 1              to #TotalAdvices  ! GEX ISDVNPK 10/21/2008 Modified for the log to say the correct number of Advices sent to print shop
    
   !Vendaxg Added on 08/11/2008 for ITG#42511 - Begin
   Do Get-Suppr-Advice
   !VENDAXG Modified For S3#12006934 on 12112008 - Begin 
   !If $Skip_Record <> 'N'
   If $Skip_Record = 'Y'
   !VENDAXG Modified For S3#12006934 on 12112008 - End 
   	Goto Skip-Advice
   End-if
   !Vendaxg Added on 08/11/2008 for ITG#42511 - End
    
    !AXL 10/22/2000 - New display msg - Begin
    if $first_chk_adv = 'Y'
       display ' '
       display ' '
       display '***************************************************'
       display 'Beginning Advice # ' noline

! CWB 06/27/2001 BEGIN
!     display &B.PAYCHECK_NBR
       display &C.PAYCHECK_NBR
! CWB 06/27/2001 END

       display '***************************************************'
       display ' '
       display ' '
       let $first_chk_adv = 'N'
    end-if
    !AXL 10/22/2000 - New display msg - End

    if &A.Company <> $Company
      move &A.Company    to $Company
      move &A.Pay_End_Dt to $AsOfDate
      do Get-Company-Data
      move ''            to $PayGroup
    end-if
  
    if &A.PayGroup <> $PayGroup
      move &A.PayGroup   to $PayGroup
      move &A.Pay_End_Dt to $AsOfDate
      do Get-PayGroup-Data
    end-if

    do Reset-Variables
 
!SXK 04/08/1999 Begin

    do Get-Ee-Job-Data

!######################################################################
! CWB New logic added 03/10/2005. 
!  if (($Company = 'GEI' and $PayGroup = 'OFF') and ($mail_drop Not Like 'E1%'))
  if (($Company = 'GEI' and $PayGroup = 'EXE') and substr($mail_drop,1,2)<>'E1')
  or (($Company = 'GEI' and $PayGroup = 'OFF') and substr($mail_drop,1,2)<>'E1')
  or ($Company = 'KAP' and $PayGroup = 'KAP')
  if ($mail_drop <> $prev_mail_drop) and (rtrim($prev_mail_drop,' ') <> '')
    move $mail_drop to $Prev_mail_drop
    print $septray () code
    new-page
    print $chktray () code
  else
  if RTRIM($prev_mail_drop,' ') <> ''
    print $chktray () code
  end-if
    move $mail_drop to $Prev_mail_drop
  end-if
  else
  if &B.DEPTID <> $prev_deptid and (rtrim($prev_deptid,' ') <> '')
    and (substr($prev_mail_drop,1,2)<>'E1')
    move &B.Deptid to $Prev_Deptid
    print $septray () code
    new-page
    print $chktray () code
  else
  if RTRIM($prev_deptid,' ') <> ''
    print $chktray () code
  end-if
  end-if
  end-if
  move &B.Deptid to $Prev_Deptid
  move $mail_drop to $Prev_mail_drop
!###################################################################

!  do Get-Ee-Job-Data
!SXK 04/08/1999 End
    do Get-Ee-Tax-Data

    do Get-Earnings-Detail
    do Get-Taxes-Detail
    do Get-Deductions-Detail

    do Get-Net-Pay-Distribution

    do Get-Vacation-Balances
    !VENDAXG Added for Upgrade 9.0 - Begin
    move &A.PAY_BEGIN_DT to $A.PAY_BEGIN_DT !VENDKXY FOR ITG 46924 ON 01/31/2008 modify the pay period begin and end dates
    move &A.PAY_END_DT to $A.PAY_END_DT !VENDKXY FOR ITG 46924 ON 01/31/2008 modify the pay period begin and end dates
    
    do paydates    !VENDKXY FOR ITG 46924 ON 01/31/2008 modify the pay period begin and end dates
    !VENDAXG Added for Upgrade 9.0 - End  
        
    
    
    
    let $extra_page = 'N'
    do Print-Statement
  !SXK 09/28/1999 Begin
    if $extra_page = 'Y'
       do print-extra-page
    end-if
  
    Let $EE_Had_TBP_Erncd535 = 'N'          !SCM  07/03/2003 Reset printing bonus for next EE
 
    do print-Advice
  !SXK 09/28/1999 End

  !SXK 12/16/1998 Begin
  !  print $chktray () code
  !SXK 12/16/1998 End

    ! GEX ISDVNPK 10/21/2008 BEGIN -Modified for the log to say the correct number of Advices sent to print shop
    ! add 1              to #TotalAdvices  
    add 1              to #TotalAdvicesPrinted 
    let  #EndingAdvice = &C.PAYCHECK_NBR
    ! GEX ISDVNPK 10/21/2008 END- Modified for the log to say the correct number of Advices sent to print shop
    add #DepositNetPay to #TotalNetPay
Skip-Advice: !Vendaxg Added on 08/11/2008 for ITG#42511 
FROM  PS_PAY_CALENDAR   A, PS_PAY_CAL_BAL_ID A1,
      PS_PAY_CHECK      B,
      PS_PAY_DISTRIBUTN C,
      PS_PAYGROUP_TBL   G,
!SXK 01/25/99 Modified to have only paycheck_nbr as the sorting order
!and remove the change made on 04/19/98 and keep the delivered sorting order
      PS_CHECK_YTD      Y
!SXK 04/19/98 Added to be able to sort by Company, Paygroup,
!DeptID, ACCT_CD, Mail Drop and Name
!      PS_EMPLOYMENT     EMP1,
!      PS_JOB            JOB1
!SXK 01/25/99 End

WHERE [$SlctCalendar]
  AND A.COMPANY = A1.COMPANY AND A.PAYGROUP = A1.PAYGROUP
  AND A.PAY_END_DT = A1.PAY_END_DT AND A1.BALANCE_ID = $Calendar_Year_Id
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND B.COMPANY         = A.COMPANY
  AND B.PAYGROUP        = A.PAYGROUP
  AND B.PAY_END_DT      = A.PAY_END_DT
  AND B.PAYCHECK_NBR         <> 0

!GBD 07/12/2002 Begin
  AND ((B.PAYCHECK_OPTION IN ('A')
  AND (B.PAYCHECK_NBR        >= #BeginAdvice#
  AND   B.PAYCHECK_NBR        <= #ThruAdvice#)
[$GEXXX932_INCLUDE_CHECK_CRITERIA]
  OR  (B.PAYCHECK_OPTION IN ('&')
  AND (C.PAYCHECK_NBR        >= #BeginAdvice#
  AND   C.PAYCHECK_NBR        <= #ThruAdvice#))
[$GEXXX932_INCLUDE_CHECK_CRITERIA]

!  AND ((B.PAYCHECK_NBR         >= #BeginAdvice#
!SXK 04/06/1999 Begin
!  AND B.PAYCHECK_NBR         <= #ThruAdvice#)
!SXK 04/06/1999 End
!SXK 04/12/1999 Begin
!  [$GEXXX932_INCLUDE_CHECK_CRITERIA]
!SXK 04/12/1999 End
!  AND B.PAYCHECK_OPTION IN ('A','&')
!GBD 07/12/2002 End
  AND B.PAYCHECK_STATUS = 'F'
  AND C.COMPANY         = B.COMPANY
  AND C.PAYGROUP        = B.PAYGROUP
  AND C.PAY_END_DT      = B.PAY_END_DT
  AND C.OFF_CYCLE       = B.OFF_CYCLE
  AND C.PAGE_NUM           = B.PAGE_NUM
  AND C.LINE_NUM           = B.LINE_NUM
  AND C.SEPCHK          = B.SEPCHK
  AND G.COMPANY         = A.COMPANY
  AND G.PAYGROUP        = A.PAYGROUP
  AND G.COUNTRY         = $Country
  AND Y.COMPANY         = A.COMPANY
  AND Y.BALANCE_ID   =  A1.BALANCE_ID
  AND Y.BALANCE_YEAR   =  A1.BALANCE_YEAR
  AND Y.BALANCE_QTR    = A1.BALANCE_QTR
  AND Y.BALANCE_PERIOD  = A1.BALANCE_PERIOD
  AND Y.EMPLID          = B.EMPLID
  AND C.PRIORITY        =
    (SELECT MIN(PRIORITY)
       FROM PS_PAY_DISTRIBUTN
      WHERE COMPANY       = C.COMPANY
	AND PAYGROUP      = C.PAYGROUP
	AND PAY_END_DT    = C.PAY_END_DT
	AND OFF_CYCLE     = C.OFF_CYCLE
	AND PAGE_NUM         = C.PAGE_NUM
	AND LINE_NUM         = C.LINE_NUM
	AND SEPCHK        = C.SEPCHK
	AND PAYCHECK_NBR        = C.PAYCHECK_NBR
	AND ACCOUNT_TYPE <> '$')
  AND G.EFFDT           =
    (SELECT MAX(EFFDT)
       FROM PS_PAYGROUP_TBL
      WHERE COMPANY    = A.COMPANY
	AND PAYGROUP   = A.PAYGROUP
	AND EFF_STATUS = 'A'
	AND EFFDT     <= A.PAY_END_DT)
!SXK 04/19/98 
!  AND EMP1.EMPLID     = B.EMPLID
!  AND EMP1.EMPL_RCD  = B.EMPL_RCD
!  AND JOB1.EMPLID     = B.EMPLID
!  AND JOB1.EMPL_RCD  = B.EMPL_RCD
!  AND JOB1.EFFDT = 
!    (SELECT MAX(EFFDT)
!       FROM PS_JOB
!      WHERE EMPLID    = JOB1.EMPLID
!	AND EMPL_RCD   = JOB1.EMPL_RCD
!	AND EFFDT     <= A.PAY_END_DT)
!  AND JOB1.EFFSEQ = 
!    (SELECT MAX(EFFSEQ)
!       FROM PS_JOB
!      WHERE EMPLID    = JOB1.EMPLID
!	AND EMPL_RCD = JOB1.EMPL_RCD
!	AND EFFDT     = JOB1.EFFDT)

ORDER BY C.FORM_ID,
         C.PAYCHECK_NBR
!ORDER BY B.DEPTID, EMP1.MAIL_DROP, B.NAME
end-SELECT

  !AXL 10/22/2000 - New display msg - Begin
  display ' '
  display ' '
  display '***************************************************'
  display 'Ending Advice # ' noline

! CWB 06/27/2001 BEGIN
!  display &B.PAYCHECK_NBR
!  display &C.PAYCHECK_NBR  ! GEX ISDVNPK 10/21/2008 END- Modified for the log to say the correct number of Advices sent to print shop
  display #EndingAdvice  999999999 ! GEX ISDVNPK 10/21/2008  Modified for the log to say the correct number of Advices sent to print shop
! CWB 06/27/2001 END

  display '***************************************************'
  display ' '
  display ' '
  !AXL 10/22/2000 - New display msg - End

end-procedure


!***********************************************************************
begin-procedure Get-Company-Data
!***********************************************************************

begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
CT.DESCR,CT.ADDRESS1,CT.ADDRESS2,CT.CITY,CT.STATE,CT.postal

 !***********************************************************************
!ISDVMZA -- Begin -- added logic for BRM transfer to TMK
!***********************************************************************
	if &A.Company = 'TMK' and &A.Paygroup = 'W09'         
	  let $CompanyName      = 'Butler Refrigerated Meats Inc.'
	else
	  let $CompanyName      = &CT.Descr
	end-if
!***********************************************************************
!ISDVMZA -- End 
!***********************************************************************
!  let $CompanyName      = &CT.Descr

  let $State_out = rtrim(&CT.State, ' ')
  let $CompanyCityState =
      rtrim(&CT.City,' ') || edit($State_out,',bxxbb') || &CT.postal

  let $CompanyAddrLine1   = &CT.Address1
  let $CompanyAddrLine3   = ''
  if rtrim(&CT.Address2,' ') = ''
    let $CompanyAddrLine2 = $CompanyCityState
  else
    let $CompanyAddrLine2 = &CT.Address2
    let $CompanyAddrLine3 = $CompanyCityState
  end-if

FROM  PS_COMPANY_TBL CT
WHERE COMPANY = &A.Company
  AND EFFDT   =
    (SELECT MAX(EFFDT)
       FROM PS_COMPANY_TBL
      WHERE COMPANY = CT.COMPANY
	AND EFFDT  <= &A.Pay_End_Dt)
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-PayGroup-Data
!***********************************************************************

begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
PG.DESCR
PG.ERNCD_REG_HRS,PG.ERNCD_OT_HRS,PG.ERNCD_REG_EARNS

  let $PayGroupName = &PG.Descr

  let $ErnCd = &PG.ErnCd_Reg_Hrs
  do Get-Earnings-Name
  move $EarningsName to $EarnNameRegHrs
  let $ErnCd = &PG.ErnCd_OT_Hrs
  do Get-Earnings-Name
  move $EarningsName to $EarnNameOTHrs
  let $ErnCd = &PG.ErnCd_Reg_Earns
  do Get-Earnings-Name
  move $EarningsName to $EarnNameRegEarns

FROM  PS_PAYGROUP_TBL PG
WHERE PG.COMPANY  = &A.Company
  AND PG.PAYGROUP = &A.PayGroup
  AND PG.COUNTRY  = $Country
  AND PG.EFFDT    = &G.Effdt
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Ee-Job-Data
!***********************************************************************
!SXK 12/13/1999 Changed ssn to emplid, zip to postal
begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
J.DEPTID,J.JOBCODE,J.LOCATION,J.COMPRATE,J.COMP_FREQUENCY, J.ACCT_CD, J.EMPL_TYPE
!ISDVSXP Begins ITG#59104 03-Apr-2009
!P.NAME,P.emplid,P.ADDRESS1,P.ADDRESS2,P.CITY,P.STATE,P.Postal, EMP.MAIL_DROP
P.NAME,
!P1.emplid,!GEX_SEC_REENG 06/19/2015 Surya Sobha
P.EMPLID,  !GEX_SEC_REENG 06/19/2015 Surya Sobha
P.ADDRESS1,P.ADDRESS2,P.CITY,P.STATE,P.Postal, EMP.MAIL_DROP
!ISDVSXP Ends ITG#59104 03-Apr-2009

J.Position_nbr 			!VENDTKK ITG#56786   12-Feb-2009


 
  let $DeptID   = rtrim(&J.DeptID,' ')
  do Get-Department-Name
  let $AcctCD   = rtrim(&J.Acct_cd,' ')
  do Get-Acct-CD-Descr
  let $JobCode  = rtrim(&J.JobCode,' ')
  do Get-Job-Title
  
   !VENDTKK Begin   ITG#56786   12-Feb-2009
        Let $Position_Nbr = &J.Position_nbr
 	 Do Get-Position-Title			 !getposnm.sqc
  	 IF $PosName = '' 
  		Let $jobtitle = $jobtitle
	 Else
 		Let $jobtitle = $PosName
	 End-if
  !VENDTKK End   ITG#56786  12-Feb-2009
  
  let $Location = rtrim(&J.Location,' ')
  do Get-Location-Name

  let $FieldName  = 'COMP_FREQUENCY'
  let $FieldValue = &J.Comp_Frequency
  do Read-Translate-Table
  move $XLatLongName to $CompFrequency

  let $Name = &P.Name
  do Rotate-Name
  move $Name to $HomeName
  let $State_out = rtrim(&P.State, ' ')
  let $HomeCityState =
      rtrim(&P.City,' ') || edit($State_out,',bxxbb') || &P.postal

  let $HomeAddrLine1   = &P.Address1
  let $HomeAddrLine3   = ''
  if rtrim(&P.Address2,' ') = ''
    let $HomeAddrLine2 = $HomeCityState
  else
    let $HomeAddrLine2 = &P.Address2
    let $HomeAddrLine3 = $HomeCityState
  end-if

!CWB 08/25/1999 Begin
    let $mail_drop = rtrim(&emp.mail_drop,' ')
!CWB 08/25/1999 Begin

 !ISDVMXR 08/28/2006 Begin
          !show '&P.EMPLID  ' &P.EMPLID
          
          !ISDVSXP Begins ITG#59104 03-Apr-2009
         !let $Emplid_f = substr(&P.EMPLID,6,4)
	! let $Emplid = 'XXX-XX-' ||$Emplid_f
	!let $Emplid = &P1.EMPLID	!GEX_SEC_REENG 06/19/2015 Surya Sobha
	Let $Emplid  = &P.EMPLID	!GEX_SEC_REENG 06/19/2015 Surya Sobha
	!ISDVSXP Ends ITG#59104 03-Apr-2009	
	! show  '$Emplid AFTER FORMATTING  ' $Emplid
 !ISDVMXR 08/28/2006 END


FROM  PS_JOB           J,
      PS_PERSONAL_DATA P,
     !ISDVSXP Begins ITG#59104 03-Apr-2009
     !PS_GEX_EMPLID_MAPP P1,	!GEX_SEC_REENG 06/19/2015 Surya Sobha
      !ISDVSXP Ends ITG#59104 03-Apr-2009
      
!PSR 09/18/2002 V8.3 Upgrade Begin
      PS_PAYROLL_DATA EMP
!      PS_EMPLOYMENT EMP
!PSR 09/18/2002 V8.3 Upgrade End
WHERE  !P1.SSN = J.EMPLID !ISDVSXP added ITG#59104 03-Apr-2009	!GEX_SEC_REENG 06/19/2015 Surya Sobha
  !AND P1.EMPL_RCD = J.EMPL_RCD	!GEX_SEC_REENG 06/19/2015 Surya Sobha
   P.EMPLID = J.EMPLID
  !SXK 04/07/1999 Begin
  AND EMP.EMPLID = J.EMPLID
!PSR 09/18/2002 V8.3 Upgrade Begin
!  AND EMP.EMPL_RCD = J.EMPL_RCD
  AND EMP.COMPANY = J.COMPANY
!PSR 09/18/2002 V8.3 Upgrade Begin
  !SXK 04/07/1999 End
  AND J.EMPLID = &B.EmplID
  AND J.EMPL_RCD = &B.Empl_Rcd
  AND J.EFFDT  =
    (SELECT MAX(EFFDT)
       FROM PS_JOB
      WHERE EMPLID    = J.EMPLID
	AND EMPL_RCD = J.EMPL_RCD
	AND EFFDT    <= &A.Pay_End_Dt)
  AND J.EFFSEQ =
    (SELECT MAX(EFFSEQ)
       FROM PS_JOB
      WHERE EMPLID    = J.EMPLID
	AND EMPL_RCD = J.EMPL_RCD
	AND EFFDT     = J.EFFDT)
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Ee-Tax-Data
!***********************************************************************
! 12/21/2001 - CJH - correct select layout
begin-SELECT
FT.EFFDT
FT.FWT_MAR_STATUS
FT.FWT_ALLOWANCES
FT.FWT_ADDL_AMT
FT.FWT_ADDL_PCT
ST.STATE
ST.RESIDENT
ST.SWT_MAR_STATUS
ST.SWT_ALLOWANCES
ST.SWT_ADDL_ALLOWNCES
ST.SWT_ADDL_AMT
ST.SWT_ADDL_PCT

  let $FieldName    = 'FWT_MAR_STATUS'
  let $FieldValue   = &FT.FWT_Mar_Status
  do Read-Translate-Table
  let $FWTMarStatus = $XLatShortName

  do Get-SWT-Marital-Status

FROM  PS_FED_TAX_DATA   FT,
      PS_STATE_TAX_DATA ST
WHERE ST.EMPLID   = FT.EMPLID
  AND ST.COMPANY  = FT.COMPANY
  AND ST.EFFDT    = FT.EFFDT
  AND ST.RESIDENT = 'Y'
  AND FT.EMPLID   = &B.EmplID
  AND FT.COMPANY  = &A.Company
  AND FT.EFFDT    =
    (SELECT MAX(EFFDT)
       FROM PS_FED_TAX_DATA
      WHERE EMPLID  = FT.EMPLID
	AND COMPANY = FT.COMPANY
	 AND CREATION_DT <= &B.UPDATE_DT   !ISDVDZk Modified the code as per the SCT 12657676 on 04/23/2009
   AND EFFDT  <= &A.Check_Dt)        !ISDVDZk Modified the code as per the SCT 12657676 on 04/23/2009
	!AND EFFDT  <= &A.Pay_End_Dt)      !ISDVDZk Modified the code as per the SCT 12657676 on 04/23/2009
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-SWT-Marital-Status
!***********************************************************************

begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
SM.DESCRLONG

  let $SWTMarStatus = substr(&SM.DescrLong,1,25)

FROM  PS_SWT_MARSTAT_TBL SM
WHERE SM.STATE          = &ST.State
  AND SM.SWT_MAR_STATUS = &ST.SWT_Mar_Status
  AND SM.EFFDT          =
    (SELECT MAX(EFFDT)
       FROM PS_SWT_MARSTAT_TBL
      WHERE STATE          = SM.STATE
	AND SWT_MAR_STATUS = SM.SWT_MAR_STATUS
	AND EFFDT         <= &A.Pay_End_Dt)
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Earnings-Detail
!***********************************************************************

begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
E.HOURLY_RT,E.REG_HRS,E.REG_HRLY_EARNS
E.OT_HRS,E.OT_HRLY_EARNS
E.REG_EARNS
E.ADDL_NBR
  let #k = 1
  WHILE #k <= 3
    evaluate #k
      when = 1
	move &PG.ErnCd_Reg_Hrs   to $Code
	move $EarnNameRegHrs     to $Name
	    !SXK 04/07/99 Begin
! CWB 06/20/2000 -begin
!	    if &A.COMPANY = 'GEI' 
!           if &A.COMPANY = 'GEI' or &A.COMPANY = 'KAP'  !COD mod, MRP, 01/11/2001
            if &A.COMPANY = 'GEI' or                     !COD mod, MRP, 01/11/2001
               &A.COMPANY = 'KAP' or                     !COD mod, MRP, 01/11/2001
	       &A.COMPANY = 'RFI'                        !COD mod, MRP, 01/11/2001
	      if &A.PAYGROUP = 'OFF' or &A.PAYGROUP = 'EXE'
                 or &A.PAYGROUP = 'KAP'  ! CWB
                 or &A.PAYGROUP = 'OF4'                  !COD mod, MRP, 01/11/2001
! CWB 06/20/2000 - end

	        if &J.EMPL_TYPE = 'S'
	              move 0 to #hours
	              move 0 to #Rate
	        else
		        move &E.Hourly_Rt        to #Rate
		        move &E.Reg_Hrs          to #Hours
	        end-if
	      else
	        move &E.Hourly_Rt        to #Rate
	        move &E.Reg_Hrs          to #Hours
	      end-if
            else
	      move &E.Hourly_Rt        to #Rate
	      move &E.Reg_Hrs          to #Hours
	    end-if
	    !SXK 04/07/99 End

	move &E.Reg_Hrly_Earns   to #Earns
      when = 2
	move &PG.ErnCd_OT_Hrs    to $Code
	move $EarnNameOTHrs      to $Name
	move &E.OT_Hrs           to #Hours
	move &E.OT_Hrly_Earns    to #Earns
      when = 3
	move &PG.ErnCd_Reg_Earns to $Code
	move $EarnNameRegEarns   to $Name
	move 0                   to #Rate
	move 0                   to #Hours
	move &E.Reg_Earns        to #Earns
     end-evaluate
     move #RatesRow              to #i
     do Update-ETDarray-Current-Earnings
     add 1 to #k
  END-WHILE
  do Get-Other-Earnings-Detail
FROM  PS_PAY_EARNINGS E
WHERE E.COMPANY    = &A.Company
  AND E.PAYGROUP   = &A.PayGroup
  AND E.PAY_END_DT = &A.Pay_End_Dt
  AND E.OFF_CYCLE  = &B.Off_Cycle
  AND E.PAGE_NUM      = &B.Page_num
  AND E.LINE_NUM      = &B.Line_num
  AND E.SEPCHK     = &B.SepChk
  AND E.SINGLE_CHECK_USE IN ('C', 'N')
ORDER BY E.ADDL_NBR
end-SELECT
  do Get-Earning-Balances
end-procedure


!***********************************************************************
begin-procedure Get-Other-Earnings-Detail
!***********************************************************************

begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
OE.ERNCD
  let $ErnCd = &OE.ErnCd
  do Get-Earnings-Name
OE.OTH_HRS
OE.OTH_EARNS
  move $ErnCd        to $Code
  move $EarningsName to $Name
 
  if $erncd = '535'                      !SCM  07/03/2003  TBP Bonus Erncd
     let $EE_Had_TBP_Erncd535 = 'Y'      !SCM  07/03/2003
  end-if                                 !SCM  07/03/2003
 
  !SXK 02/23/99 begin
! 10/15/2000 - CJH - suppress printing rate and hours for 167 and 170
!VENDKXY  Done the changes for ITG 71975-- Begin
!  if $erncd = '515'
!   if ($erncd = '515') or ($erncd = '170') or ($erncd = '167')
   if ($erncd = '515') or ($erncd = '170') or ($erncd = '167') or ($erncd = '700') or ($erncd = '701')
     move 0 to #rate
     move 0 to #hours
! 10/15/2000 - CJH - suppress printing rate and hours for 167 and 170
!VENDKXY  Done the changes for ITG 71975-- End
  else
    !SXK 04/07/99 Begin
! CWB 06/20/2000 -begin
!	    if &A.COMPANY = 'GEI' 
!           if &A.COMPANY = 'GEI' or &A.COMPANY = 'KAP'  !COD mod, MRP, 01/11/2001
            if &A.COMPANY = 'GEI' or                     !COD mod, MRP, 01/11/2001
               &A.COMPANY = 'KAP' or                     !COD mod, MRP, 01/11/2001
	       &A.COMPANY = 'RFI'                        !COD mod, MRP, 01/11/2001
	      if &A.PAYGROUP = 'OFF' or &A.PAYGROUP = 'EXE'
                 or &A.PAYGROUP = 'KAP'  ! CWB
                 or &A.PAYGROUP = 'OF4'                  !COD mod, MRP, 01/11/2001
! CWB 06/20/2000 - end
        if &J.EMPL_TYPE = 'S'
           if $Erncd = 'REG'
              move 0 to #hours
              move 0 to #Rate
           else
              move &OE.Oth_Hrs   to #Hours
              !AXL 1/26/2001 New check for over-rides - Begin
              do Check-Override-Rate
              if $override-yes = 'Y'
                 move &OV.Perunit_Ovr_Rt to #Rate
              else
	         move &E.Hourly_Rt  to #Rate
              end-if
              !AXL 1/26/2001 New check for over-rides - End
           end-if
        else
           move &OE.Oth_Hrs   to #Hours
           !AXL 1/26/2001 New check for over-rides - Begin
           do Check-Override-Rate
           if $override-yes = 'Y'
              move &OV.Perunit_Ovr_Rt to #Rate
           else
	      move &E.Hourly_Rt  to #Rate
           end-if
           !AXL 1/26/2001 New check for over-rides - End
        end-if
      else
        move &OE.Oth_Hrs   to #Hours
        !AXL 1/26/2001 New check for over-rides - Begin
        do Check-Override-Rate
        if $override-yes = 'Y'
           move &OV.Perunit_Ovr_Rt to #Rate
        else
	   move &E.Hourly_Rt  to #Rate
        end-if
        !AXL 1/26/2001 New check for over-rides - End
      end-if
   else
     move &OE.Oth_Hrs   to #Hours
     !AXL 1/26/2001 New check for over-rides - Begin
     do Check-Override-Rate
     if $override-yes = 'Y'
        move &OV.Perunit_Ovr_Rt to #Rate
     else
        move &E.Hourly_Rt  to #Rate
     end-if
     !AXL 1/26/2001 New check for over-rides - End
   end-if
  !SXK 04/07/99 End
  end-if
  !SXK 02/23/99 End
  move &OE.Oth_Earns to #Earns
  move #RatesRow     to #i
  do Update-ETDarray-Current-Earnings
FROM  PS_PAY_OTH_EARNS OE
WHERE OE.COMPANY    = &A.Company
  AND OE.PAYGROUP   = &A.PayGroup
  AND OE.PAY_END_DT = &A.Pay_End_Dt
  AND OE.OFF_CYCLE  = &B.Off_Cycle
  AND OE.PAGE_NUM      = &B.Page_NUM
  AND OE.LINE_NUM      = &B.Line_NUM
  AND OE.SEPCHK     = &B.SepChk
  AND OE.ADDL_NBR      = &E.Addl_NBR
ORDER BY OE.ERNCD
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Check-Override-Rate
!***********************************************************************

  let $override-yes = 'N'

begin-SELECT
OV.PERUNIT_OVR_RT

  let $override-yes = 'Y'

FROM  PS_EARNINGS_TBL OV
WHERE OV.ERNCD        = &OE.ERNCD
  AND OV.EFF_STATUS   = 'A'
  AND OV.PAYMENT_TYPE = 'U'
  AND OV.EFFDT        =
     (SELECT MAX(EFFDT)
        FROM PS_EARNINGS_TBL
       WHERE ERNCD         = OV.ERNCD
         AND EFF_STATUS    = OV.EFF_STATUS
         AND EFFDT        <= &A.Pay_End_Dt)
end-SELECT

end-procedure

!***********************************************************************
begin-procedure Get-Earning-Balances
!***********************************************************************

  let #Cur = 0
 !SXK 10/25/1999 Begin

  let #ern_pre_count = 0

 !SXK 10/25/1999 End


begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
EB.ERNCD,EB.HRS_YTD,EB.GRS_YTD

  let $ErnCd = &EB.ErnCd
  do Get-Earnings-Name
  let $Code = $ErnCd
  let $Name = $EarningsName

  let #k = 1
  WHILE #k <= 3
    evaluate #k
      when = 1
	move 0           to #YTD
	move #RatesRow   to #i
      when = 2
        !SXK 02/23/99 Begin
! 16-OCT-2000 - CJH - suppress hours and rate for earnings 167 and 170
!VENDKXY  Done the changes for ITG 71975-- Begin
!        if $erncd = '515'
!        if ($erncd = '515') or ($erncd = '167') or ($erncd = '170')
      if ($erncd = '515') OR ($erncd = '170') or ($erncd = '167') or ($erncd = '700') or ($erncd = '701')
           move 0 to #ytd
! 16-OCT-2000 - CJH
!VENDKXY  Done the changes for ITG 71975-- End
        else
	  !SXK 04/07/99 Begin
! CWB 06/20/2000 -begin
!	    if &A.COMPANY = 'GEI' 
!           if &A.COMPANY = 'GEI' or &A.COMPANY = 'KAP'  !COD mod, MRP, 01/11/2001
            if &A.COMPANY = 'GEI' or                     !COD mod, MRP, 01/11/2001
               &A.COMPANY = 'KAP' or                     !COD mod, MRP, 01/11/2001
	       &A.COMPANY = 'RFI'                        !COD mod, MRP, 01/11/2001
	      if &A.PAYGROUP = 'OFF' or &A.PAYGROUP = 'EXE'
                 or &A.PAYGROUP = 'KAP'  ! CWB
                 or &A.PAYGROUP = 'OF4'                  !COD mod, MRP, 01/11/2001
! CWB 06/20/2000 - end
	        if &J.EMPL_TYPE = 'S'
	           if $Erncd = 'REG'
	              move 0 to #YTD
                   else
	              move &EB.Hrs_YTD to #YTD
	           end-if
                else
	           move &EB.Hrs_YTD to #YTD
	        end-if
             else
                 move &EB.Hrs_YTD to #YTD
	     end-if
          else
             move &EB.Hrs_YTD to #YTD
	  end-if
	  !SXK 04/07/99 End
        end-if

	move #HoursRow   to #i
      when = 3
	move &EB.Grs_YTD to #YTD
	move #EarnsRow   to #i
    end-evaluate
    do Update-ETDarray
    add 1 to #k
  END-WHILE
  !SXK 10/25/1999 Begin
  add 1 to #ern_pre_count
  !SXK 10/25/1999 End
FROM  PS_EARNINGS_BAL EB
WHERE EB.EMPLID        = &B.EmplID
  AND EB.COMPANY       = &A.Company
  AND EB.BALANCE_ID    = &A1.BALANCE_ID
  AND EB.BALANCE_YEAR  = &A1.BALANCE_YEAR
!PSR 09/19/2002 Begin
  AND EB.EMPL_RCD      = &B.EMPL_RCD
  AND ((EB.ERNCD <> '700') AND  (EB.ERNCD <> '701'))  !VENDKXY  Done the changes for ITG 71975
!PSR 09/19/2002 End
  AND EB.SPCL_BALANCE  = 'N'
  AND EB.BALANCE_PERIOD       =
    (SELECT MAX(BALANCE_PERIOD)
       FROM PS_EARNINGS_BAL
      WHERE EMPLID        = EB.EMPLID
	AND COMPANY       = EB.COMPANY
	AND BALANCE_ID    = EB.BALANCE_ID
	AND BALANCE_YEAR  = EB.BALANCE_YEAR
	AND SPCL_BALANCE  = EB.SPCL_BALANCE
	AND ERNCD         = EB.ERNCD
!PSR 09/19/2002 Begin
        AND EMPL_RCD      = EB.EMPL_RCD
!PSR 09/19/2002 End
	AND BALANCE_PERIOD      <= &A1.BALANCE_PERIOD)
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Taxes-Detail
!***********************************************************************

  let #YTD = 0
  let #i   = #TaxesRow

begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
T.STATE,T.LOCALITY,T.TAX_CLASS,T.TAX_CUR,T.TXGRS_CUR

  let $Code = rtrim(&T.State, ' ') || rtrim(&T.Locality,' ') || &T.Tax_Class

  if rtrim(&T.State, ' ') = '$U'
    let $Name = 'Fed'
    if &T.Tax_Class = 'H'               !withholding
      move &T.TxGrs_Cur to #FedTaxGrossCur
    end-if
  else
    let $Name = rtrim(&T.State, ' ')
    if rtrim(&T.Locality,' ') <> ''     !if a Locality
      let $State = rtrim(&T.State, ' ')
      move &T.Locality to $Locality
      do Get-Local-Tax-Data
      let $Name = $Name || ' ' || $LocalAbbr
    end-if
  end-if
  let $FieldName  = 'TAX_CLASS'
  let $FieldValue = &T.Tax_Class
  do Read-Translate-Table
  let $Name = $Name || ' ' || $XLatShortName

  move &T.Tax_Cur to #Cur
  do Update-ETDarray

FROM  PS_PAY_TAX T
WHERE T.COMPANY    = &A.Company
  AND T.PAYGROUP   = &A.PayGroup
  AND T.PAY_END_DT = &A.Pay_End_Dt
  AND T.OFF_CYCLE  = &B.Off_Cycle
  AND T.PAGE_NUM      = &B.Page_NUM
  AND T.LINE_NUM      = &B.Line_NUM
  AND T.SEPCHK     = &B.SepChk
  !GEXPY_848_B00699208_01 - Begins
  !AND T.TAX_CLASS IN ('B','C','D','F','G','H','M','N','P','T','V')   !SCM 04/18/2002 Add 'G' and 'T'
  AND T.TAX_CLASS IN ('B','C','D','F','G','H','M','N','P','T','V','7')
  !GEXPY_848_B00699208_01 - Ends
ORDER BY T.STATE,T.LOCALITY,T.TAX_CLASS DESC
end-SELECT
  do Get-Tax-Balances
end-procedure


!***********************************************************************
begin-procedure Get-Tax-Balances
!***********************************************************************

  let #Cur = 0
!SXK 10/25/1999 Begin
  let #tax_pre_count = 0
!SXk 10/25/1999 end
begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
TB.STATE,TB.LOCALITY,TB.TAX_CLASS,TB.TAX_YTD,TB.TXGRS_YTD

  let $Code = rtrim(&TB.State, ' ') || rtrim(&TB.Locality,' ') || &TB.Tax_Class

  if rtrim(&TB.State, ' ') = '$U'
    let $Name = 'Fed'
    if &TB.Tax_Class = 'H'               !withholding
      move &TB.TxGrs_YTD to #FedTaxGrossYTD
    end-if
  else
    let $Name = rtrim(&TB.State, ' ')
    if rtrim(&TB.Locality,' ') <> ''     !if a Locality
      let $State = rtrim(&TB.State, ' ')
      move &TB.Locality to $Locality
      do Get-Local-Tax-Data
      let $Name = $Name || ' ' || $LocalAbbr
    end-if
  end-if
  let $FieldName  = 'TAX_CLASS'
  let $FieldValue = &TB.Tax_Class
  do Read-Translate-Table
  let $Name = $Name || ' ' || $XLatShortName

  move &TB.Tax_YTD to #YTD
  do Update-ETDarray
!SXK 10/25/1999 Begin
!  add 1 to #tax_pre_count      ! CWB 03/10/2005

!SXk 10/25/1999 end
FROM  PS_TAX_BALANCE TB
WHERE TB.EMPLID        = &B.EmplID
  AND TB.COMPANY       = &A.Company
  AND TB.BALANCE_ID    = &A1.BALANCE_ID
  AND TB.BALANCE_YEAR  = &A1.BALANCE_YEAR
  !GEXPY_848_B00699208_01 - Begins
  !AND TB.TAX_CLASS IN ('B','C','D','F','G','H','M','N','P','T','V')    !SCM 04/22/2002  Add 'G' and 'T'
  AND TB.TAX_CLASS IN ('B','C','D','F','G','H','M','N','P','T','V','7')
  !GEXPY_848_B00699208_01 - Ends
  AND TB.BALANCE_PERIOD       =
    (SELECT MAX(BALANCE_PERIOD)
       FROM PS_TAX_BALANCE
      WHERE EMPLID        = TB.EMPLID
	AND COMPANY       = TB.COMPANY
	AND BALANCE_ID    = TB.BALANCE_ID
	AND BALANCE_YEAR  = TB.BALANCE_YEAR
	AND STATE         = TB.STATE
	AND (LOCALITY     = TB.LOCALITY
	 OR  LOCALITY = ' ' and TB.LOCALITY = ' ')
	AND TAX_CLASS     = TB.TAX_CLASS
	AND BALANCE_PERIOD   <= &A1.BALANCE_PERIOD)
  and not (tb.tax_class='P' and tb.state='PA' and tb.locality=' ')
! KMW 4/14/2000 added above row to exlude PA memo row
ORDER BY TB.STATE,TB.LOCALITY,TB.TAX_CLASS DESC
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Deductions-Detail
!***********************************************************************

  let #YTD = 0

begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
N.PLAN_TYPE,N.DEDCD,N.DED_CLASS,N.DED_CUR

! CWB 09/21/2001 BEGIN
!  let $Code = &N.Plan_Type || &N.DedCd || &N.Ded_Class
! CWB 09/21/2001 END

  let $PlanType = &N.Plan_Type
  let $DedCd    = &N.DedCd
  do Get-Deduction-Name

! CWB 09/21/2001 BEGIN
!  let $Name = $DeductionName
! CJH - 06/24/2003 - SpclProcess = 'G' in HRMS 8.3 
!  if $Garn_Process = 'Y'
  if $SpclProcess = 'G'
! CJH - end
     do get-garnishment-detail
  else 
     let $Name = $DeductionName
     let $Code = &N.Plan_Type || &N.DedCd || &N.Ded_Class
! CWB 09/21/2001 END

  evaluate &N.Ded_Class
    when = 'B'           !Before-tax deduction

!SXK 10/14/97 Begin
    when = 'A'           !After-tax deduction
!SXK End

      move #PreTaxDedsRow  to #i

!    when = 'A'           !After-tax deduction
!      move #PostTaxDedsRow to #i
 
   when = 'N'           !Non-taxable benefit
    when = 'P'
      move #BenefitsRow    to #i
    when = 'T'           !Taxable benefit
      move #BenefitsRow    to #i
      concat '*' with $Name
    when-other

!SXK 10/14/97 Begin
      move #PreTaxDedsRow to #i
!      move #PostTaxDedsRow to #i
!SXK End

  end-evaluate

  move &N.Ded_Cur to #Cur
  do Update-ETDarray

! CWB 09/21/2001 BEGIN
  end-if
! CWB 09/21/2001 END

FROM  PS_PAY_DEDUCTION N
WHERE N.COMPANY    = &A.Company
  AND N.PAYGROUP   = &A.PayGroup
  AND N.PAY_END_DT = &A.Pay_End_Dt
  AND N.OFF_CYCLE  = &B.Off_Cycle
  AND N.PAGE_NUM      = &B.Page_NUM
  AND N.LINE_NUM      = &B.Line_NUM
  AND N.SEPCHK     = &B.SepChk
end-SELECT
  do Get-Deduction-Balances
end-procedure


!***********************************************************************
begin-procedure Get-Deduction-Balances
!***********************************************************************

  let #Cur = 0
 !SXK 10/25/1999 Begin
  let #ded_pre_count_p = 0
  let #ded_pre_count_t = 0
 !SXK 10/25/1999 End
begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
NB.PLAN_TYPE,NB.DEDCD,NB.DED_CLASS,NB.DED_YTD

! CWB 09/21/2001 BEGIN
!  let $Code = &NB.Plan_Type || &NB.DedCd || &NB.Ded_Class
! CWB 09/21/2001 END

  let $PlanType = &NB.Plan_Type
  let $DedCd    = &NB.DedCd
  do Get-Deduction-Name

! CWB 09/21/2001 BEGIN
!  let $Name = $DeductionName
! CJH - 06/24/2003 - Garn_Process = 'G' in HRMS 8.3 
!  if $Garnprocess = 'Y'
  if $SpclProcess = 'G'
! CJH - end
     do get-garn-balances
  else 
     let $Name = $DeductionName
     let $Code = &NB.Plan_Type || &NB.DedCd || &NB.Ded_Class
! CWB 09/21/2001 END

  evaluate &NB.Ded_Class
    when = 'B'           !Before-tax deduction
  !SXK 10/25/1999 Begin
!    add 1 to #ded_pre_count_p       ! CWB 03/10/2005
 
  !SXK 10/25/1999 End
!SXK 10/14/97 Begin
      move #PreTaxDedsRow  to #i
!    when = 'A'           !After-tax deduction
!      move #PostTaxDedsRow to #i
!SXK End

    when = 'N'           !Non-taxable benefit
    when = 'P'
      move #BenefitsRow    to #i
  !SXK 10/25/1999 Begin
!    add 1 to #ded_pre_count_t      ! CWB 03/10/2005
 
  !SXK 10/25/1999 End
    when = 'T'           !Taxable benefit
      move #BenefitsRow    to #i
  !SXK 10/25/1999 Begin
!    add 1 to #ded_pre_count_t      ! CWB 03/10/2005
 
  !SXK 10/25/1999 End
      concat '*' with $Name
    when-other

!SXK 10/14/97 Begin
      move #PreTaxDedsRow to #i
  !SXK 10/25/1999 Begin
!    add 1 to #ded_pre_count_p      ! CWB 03/10/2005
 
  !SXK 10/25/1999 End
!      move #PostTaxDedsRow to #i
!SXK End

  end-evaluate
!CWB 07/19/99 Begin
    if $DedCd = 'PAYADJ'
      move 0 to #YTD
    else 
      move &NB.Ded_YTD to #YTD
    end-if
!CWB 07/19/99 End

  do Update-ETDarray

! CWB 09/21/2001 BEGIN
  end-if
! CWB 09/21/2001 END

FROM  PS_DEDUCTION_BAL NB
WHERE NB.EMPLID        = &B.EmplID
  AND NB.COMPANY       = &A.Company
  AND NB.BALANCE_ID    = &A1.BALANCE_ID
  AND NB.BALANCE_YEAR  = &A1.BALANCE_YEAR
!PSR 09/19/02 Begin
!SRK 02/18/03 commented out since we are adding individual
!entries to an array, it would not matter for multi job people
!  AND NB.BENEFIT_RCD_NBR = &B.BENEFIT_RCD_NBR
!PSR 09/19/02 End
  AND NB.BALANCE_PERIOD       =
    (SELECT MAX(BALANCE_PERIOD)
       FROM PS_DEDUCTION_BAL
      WHERE EMPLID        = NB.EMPLID
	AND COMPANY       = NB.COMPANY
	AND BALANCE_ID    = NB.BALANCE_ID
	AND BALANCE_YEAR  = NB.BALANCE_YEAR
	AND PLAN_TYPE     = NB.PLAN_TYPE

! CWB 10/28/2003 BEGIN - Changes from Tax Update 03-F
        AND BENEFIT_PLAN  = NB.BENEFIT_PLAN
! CWB 10/28/2003 END
	AND DEDCD         = NB.DEDCD
	AND DED_CLASS     = NB.DED_CLASS
        !PSR 09/19/02 Begin
        AND BENEFIT_RCD_NBR = NB.BENEFIT_RCD_NBR
        !PSR 09/19/02 End       
	AND BALANCE_PERIOD <= &A1.BALANCE_PERIOD)
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Net-Pay-Distribution
!***********************************************************************

let #i = 0

begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
PD.PAYCHECK_NBR,PD.ACCOUNT_TYPE,PD.DEPOSIT_AMOUNT
PD.ACCOUNT_NUM

  if &PD.Account_Type = '$'             !check
    add &PD.Deposit_Amount to #CheckNetPay
  else
    if #i > #lastAcct
      move #lastAcct to #i
      move $lastName to $AccountType
      move ' '       to $Account#
    else
      let $FieldName  = 'ACCOUNT_TYPE'
      let $FieldValue = &PD.Account_Type
      do Read-Translate-Table
      move $XLatShortName to $AccountType
      move &PD.Account_NUM   to $Account#
   !isdvsxp S3 12881948 06/04/2009 -- start
   let #actnumlen = length($Account#)-3
   let $Account_num = 'XXXXXXXXXXX'||substr($Account#,#actnumlen,4)
   move $Account_num to $Account#
   !isdvsxp S3 12881948 06/04/2009  -- END
    end-if

    PUT $AccountType $Account# INTO DDPARRAY(#I)
    ARRAY-ADD &PD.Deposit_Amount to DDPARRAY(#I) DEPOSITAMOUNT
    add 1 to #i

    add &PD.Deposit_Amount to #DepositNetPay
  end-if

FROM  PS_PAY_DISTRIBUTN PD
WHERE PD.COMPANY    = &A.Company
  AND PD.PAYGROUP   = &A.PayGroup
  AND PD.PAY_END_DT = &A.Pay_End_Dt
  AND PD.OFF_CYCLE  = &B.Off_Cycle
  AND PD.PAGE_NUM      = &B.Page_NUM
  AND PD.LINE_NUM      = &B.Line_NUM
  AND PD.SEPCHK     = &B.SepChk
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Get-Vacation-Balances
!***********************************************************************

begin-SELECT LOOPS=1
!/*+ RULE */                                 ! CWB 03/10/2005
V.HRS_CARRYOVER,V.HRS_EARNED_YTD,V.HRS_TAKEN_YTD
V.HRS_ADJUST_YTD,V.HRS_BOUGHT_YTD,V.HRS_SOLD_YTD
V.HRS_TAKEN_UNPROC,V.HRS_ADJUST_UNPROC
V.HRS_BOUGHT_UNPROC,V.HRS_SOLD_UNPROC
V.ACCRUAL_PROC_DT

  let #VacStartBal = &V.Hrs_Carryover
  let #VacEarned   = &V.Hrs_Earned_YTD
  let #VacBought   = &V.Hrs_Bought_YTD + &V.Hrs_Bought_Unproc
  let #VacTaken    = &V.Hrs_Taken_YTD  + &V.Hrs_Taken_Unproc
  let #VacSold     = &V.Hrs_Sold_YTD   + &V.Hrs_Sold_Unproc
  let #VacAdjust   = &V.Hrs_Adjust_YTD + &V.Hrs_Adjust_Unproc
  let #VacEndBal   = #VacStartBal + #VacEarned + #VacBought
		     - #VacTaken - #VacSold + #VacAdjust

FROM  PS_LEAVE_ACCRUAL V
WHERE V.EMPLID           = &B.Emplid
  AND V.COMPANY          = &A.Company
  AND V.PLAN_TYPE        = '51'                 !Vacation
  AND V.ACCRUAL_PROC_DT <= &B.Check_Dt
ORDER BY V.ACCRUAL_PROC_DT DESC
end-SELECT

end-procedure


!***********************************************************************
begin-procedure Reset-Variables
!***********************************************************************

!reset employee tax data
  move ' ' to $FWTMarStatus
  move ' ' to $SWTMarStatus

!reset current and YTD amounts
  move 0 to #Cur
  move 0 to #YTD

!reset ETDarray
  move 0 to #i
  while #i <= #lastRow
    move 0 to #j
    while #j <= #lastCol
      put ' ' ' ' 0 0 into ETDarray(#i) Code(#j) Name(#j) Cur(#j) YTD(#j)
      add 1 to #j
    end-while
    add 1 to #i
  end-while

!reset DDParray
  move 0 to #i
  while #i <= #lastAcct
    put ' ' ' ' 0 into DDParray(#i)
    add 1 to #i
  end-while

!reset vacation totals
  move 0 to #VacStartBal
  move 0 to #VacEarned
  move 0 to #VacBought
  move 0 to #VacTaken
  move 0 to #VacSold
  move 0 to #VacAdjust
  move 0 to #VacEndBal

!reset current and YTD recalc totals
  move 0 to #HourCurTotal
  move 0 to #HourYTDTotal
  move 0 to #PreTaxDedCurTotal
  move 0 to #PreTaxDedYTDTotal

!SXK 10/14/97 Begin
!  move 0 to #PostTaxDedCurTotal
!  move 0 to #PostTaxDedYTDTotal
!SXK End

  move 0 to #FedTaxGrossCur
  move 0 to #FedTaxGrossYTD

!reset net pay distribution totals
  move 0 to #CheckNetPay
  move 0 to #DepositNetPay

end-procedure


!***********************************************************************
begin-procedure Update-ETDarray-Current-Earnings
!***********************************************************************
!****** SCM 7/29/2003 just a comment:  If paysheet hours or earnings NOT 0, then  
!****** this code gets the erncd and rate from the array...If the erncd and rate
!****** match, it loads the earnings to the array with the same subscript (j).
!****** Then when the array is read to print on the check, if j is the
!****** same, it rolls up the earnings.  If j is different, it prints a separate 
!****** detail entry on the check stub.

  if #Hours <> 0 or #Earns <> 0

    move #RatesRow to #i
    move 0 to #j
    while #j <= #lastCol
      get $jCode #jRate from ETDarray(#i) Code(#j) Cur(#j)
      if rtrim($jCode,' ') = ''                 !if array entry is null
	break                                   !exit the "while"
      else
        if $Code = $jCode and #Rate = #jRate    !if array entry erncd-rate match, exit while, do not increase j.  
!         if $Code = $jCode                     !If erncd are equal, exit while, do not increase j.          
          break                                 !exit the "while"
	else
	  if #j = #lastCol
	    move $lastCode to $Code
	    move $lastName to $Name
	    move #lastRate to #Rate
	    break                               !exit the "while"
	  end-if
	end-if
      end-if
      add 1 to #j                               !increment the subscript inside the while
    end-while

    while #i <= #EarnsRow
      evaluate #i
	when = #RatesRow
	  move #Rate  to #Cur
	when = #HoursRow
	  move #Hours to #Cur
	when = #EarnsRow
	  move #Earns to #Cur
	when-other
	  move 0      to #Cur
      end-evaluate

      put $Code $Name into ETDarray(#i) Code(#j) Name(#j)

      if #i = #RatesRow
	put #Cur     into ETDarray(#i) Cur(#j)
      else
	array-add #Cur to ETDarray(#i) Cur(#j)
      end-if
      add 1 to #i
    end-while

  end-if
end-procedure


!***********************************************************************
begin-procedure Update-ETDarray
!***********************************************************************

  move 0 to #j
  while #j <= #lastCol

    get $jCode from ETDarray(#i) Code(#j)
    if rtrim($jCode,' ') = ''                   !if array entry is null
      put $Code $Name into ETDarray(#i) Code(#j) Name(#j)
      break                                     !exit the "while"
    else
      if $Code = $jCode                         !if array entry match
	break                                   !exit the "while"
      else
	if #j = #lastCol
	  put $lastCode $lastName into ETDarray(#i) Code(#j) Name(#j)
	  break                                 !exit the "while"
	end-if
      end-if
    end-if
    add 1 to #j

  end-while

  array-add #Cur #YTD to ETDarray(#i) Cur(#j) YTD(#j)

end-procedure


!***********************************************************************
begin-procedure Read-ETDarray
!***********************************************************************

  move 0 to #i
  while #i <= #lastRow
    get $Name #Cur #YTD from ETDarray(#i) Name(#j) Cur(#j) YTD(#j)
    evaluate #i
      when = #RatesRow
	move $Name to $EarnName
	move #Cur  to #EarnRate
      when = #HoursRow
	move #Cur  to #HourCur
	move #YTD  to #HourYTD
	add  #Cur  to #HourCurTotal
	add  #YTD  to #HourYTDTotal
      when = #EarnsRow
	move #Cur  to #EarnCur
	move #YTD  to #EarnYTD
      when = #PreTaxDedsRow
	move $Name to $PreTaxDedName
	move #Cur  to #PreTaxDedCur
	move #YTD  to #PreTaxDedYTD
	add  #Cur  to #PreTaxDedCurTotal
	add  #YTD  to #PreTaxDedYTDTotal
      when = #TaxesRow
	move $Name to $TaxName
	move #Cur  to #TaxCur
	move #YTD  to #TaxYTD

!SXK 10/14/97 Begin
!      when = #PostTaxDedsRow
!        move $Name to $PostTaxDedName
!        move #Cur  to #PostTaxDedCur
!        move #YTD  to #PostTaxDedYTD
!        add  #Cur  to #PostTaxDedCurTotal
!        add  #YTD  to #PostTaxDedYTDTotal
!SXK End

      when = #BenefitsRow
	move $Name to $BenefitName
	move #Cur  to #BenefitCur
	move #YTD  to #BenefitYTD
    end-evaluate
    add 1 to #i
  end-while
end-procedure

!***********************************************************************
begin-procedure Print-Statement
!***********************************************************************

 do Declare-Printer-Statement

!print the pay period information

!**********
!SXK 10/13/97 Begin
!**********

  let #row = 1

  move 11 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  print $CompanyName            (#row,3) bold

!********  SCM   begin  07/03/2003   Print 'TBP' on bonus advices addr front in big font
  if $EE_Had_TBP_Erncd535 = 'Y'                   !if ee had an erncd of 535, this is a
      let #row = 2                                !team bonus check.  Print 'TBP'                                 
      move 30 to #companypntsize                  !in upper right corner of addr flap 
      graphic () font :#StdFont :#CompanyPntSize  !move down a row to accomodate big font
      print 'TBP'            (#row,80) bold
  end-if
!********  SCM   end    07/03/2003
  
  position (+2)
  move 9 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
!SXK 01/25/99 Call this procedure before printing advice location
  do Format-Advice-Name-Address
!SXK 01/25/99 End
!  print $adviceLocation          (,3)  JNB 02/01/2000
!SXK 04/06/99 Begin
  print $advicedept (+1,3) bold
  print $adviceacct (+1,3)
  print 'Mail Drop: ' (+1,3)
  print &EMP.MAIL_DROP ()
!SXK 04/06/99 End

!print the ETD detail information

  let #row1 = 23  !Original value 11
  let #row2 = 40  !Original Value 28 

  columns 43

  graphic (#row1,1,81) box  1 10 12
  graphic (#row1,,81)  box  1 10

  columns 3 43 3 43 84

  graphic (+1,1,40)    box 2 10 
  graphic (+2,,40)     box 9 10
  graphic (+9,,40)     box 1 10
  graphic (+1,,40)     box 4 10
  graphic (+4,,81)     box 1 10
  next-column
  let #row3 = #row1 + 1
  graphic (#row3,1,81) box  2 10
  graphic (+2,,81)     box 13 10
  graphic (+13,,81)    box  1 10
  next-column
  graphic (#row2,1,40) box  1 10 12
  graphic (#row2,,40)  box  1 10
  graphic (+1,,40)     box  1 10
  graphic (+1,,40)     box 13 10   !Used to be 13 for the height SXK 02/18/98
  graphic (+13,,40)    box  1 10
  next-column
  graphic (#row2,1,41) box  1 10 12
  graphic (#row2,,41)  box  1 10
  graphic (+1,,41)     box  1 10
  graphic (+1,,41)     box 13 10   !Used to be 13 for the height SXK 02/18/98 
  graphic (+13,,41)    box  1 10
  next-column
  graphic (#row2,1,40) box  1 10 12
  graphic (#row2,,40)  box  1 10
  graphic (+1,,40)     box  1 10
  graphic (+1,,40)     box 13 10   !Used to be 13 for the height SXK 02/18/98
  graphic (+13,,40)    box  1 10

  use-column 0

  move 9 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  print $CompanyName            (#row1,4) bold
 
  graphic () font :#StdFont :#StmtPntSize
 
  print 'HOURS AND EARNINGS'    (#row1,71) bold

!print the employee information

  print 'Pay Begin Dt:'       (+1,4)
  
  !VENDAXG Modified for Upgrade 9.0 - Begin 
  !do Format-DateTime(&A.Pay_Begin_Dt, $out, {DEFDATE}, '', '')
  do Format-DateTime($A.Pay_Begin_Dt, $out, {DEFDATE}, '', '')!changed from &A.Pay_Begin_Dt to $A.Pay_Begin_Dt by VENDKXY for ITG 46924
  !VENDAXG Modified for Upgrade 9.0 - End
  print $out                    (,16)
  print 'Advice Dt:'            (,25)
  do Format-DateTime(&B.Check_Dt, $out, {DEFDATE}, '', '')
  print $out                    (,35)

  print '-'                     (,77,16) fill
  print 'Current'               (,87)
  print '-'                     (,93,16)   fill
  print '-'                     (,107,12)   fill
  print 'YTD'                   (,114)
  print '-'                     (,118,10)   fill

  print 'Pay End Dt:'       (+1,4)
  !VENDAXG Modified for Upgrade 9.0 - Begin 
  !do Format-DateTime(&A.Pay_End_Dt, $out, {DEFDATE}, '', '')
  do Format-DateTime($A.Pay_End_Dt, $out, {DEFDATE}, '', '') !changed from &A.Pay_end_Dt to $A.Pay_end_Dt by VENDKXY for ITG 46924
  !VENDAXG Modified for Upgrade 9.0 - End
  
  print $out                    (,16)
  print 'Advice #:'             (,25)
  !do Format-Number(&B.PAYCHECK_NBR, $out, '0999999') !AXL 9/16/2002 
!  do Format-Number(&C.PAYCHECK_NBR, $out, '0999999')	!AXL 9/16/2002 From PS_PAY_DISTRIBUTN
  do Format-Number(&C.PAYCHECK_NBR, $out, '09999999')	!CWB 02/07/2007 expand to 8 digits
  print $out                    (,35) bold

  print 'Description'           (,44)
  print 'Rate'                  (,77)
  print 'Hours'                 (,88)
  print 'Earnings'              (,96)
  print 'Hours'                 (,107)
  print 'Earnings'              (,117)

  print $HomeName               (+1,4) bold
  print $HomeAddrLine1          (+1,4)
  print $HomeAddrLine2          (+1,4)
  print $HomeAddrLine3          (+1,4)
!SXK 01/25/99 Moved emplid besides homeaddrline3 
  print 'Emp ID: '            (,25)
!  print 'Employee ID: '         (+1,4)
  !print &P.emplid                  (,33)     edit xxx-xx-xxxx
  print $Emplid                     (,33) ! ISDVMXR 09/01/2006
!SXK 01/25/99 End

  print 'Department:'           (+1,4) 
  let $out = $DeptID || '-' || $DeptName
  print $out                    (,16)  
!SXK 01/25/99 Begin
  print 'Acct CD:'              (+1,4)
  let $out = $AcctCD || '-' || $AcctCDName
  print $out                    (,16)
!SXK 01/25/99 End
  print 'Location:'             (+1,4)
  print $LocationName           (,16)
  print 'Job Title:'            (+1,4)
  print $JobTitle               (,16)
  print 'Pay Group:'            (+1,4)
  let $out = $PayGroup || '-' || $PayGroupName
  print $out                    (,16)

  let #row = 35
  columns 4 20 30

  print 'TAX DATA:'             (#row,1)
  print 'Marital Status:'       (+1,1)
  print 'Allowances:'           (+1,1)
  print 'Addl. Pct.:'           (+1,1)
  print 'Addl. Amt.:'           (+1,1)

  next-column
  print 'Federal'               (#row,1)
  print $FWTMarStatus           (+1,1)
  let   $out = ltrim(edit(&FT.FWT_Allowances,'999'),' ')
  print $out                    (+1,1)
  let   $out = ltrim(edit(&FT.FWT_Addl_Pct,'b9.999'),' ')
  print $out                    (+1,1)
  let   $out = ltrim(edit(&FT.FWT_Addl_Amt,'b9,999.99'),' ')
  print $out                    (+1,1)

  next-column
  let $ResidentState = rtrim(&ST.State, ' ') || ' State'
  print $ResidentState          (#row,1)
  print $SWTMarStatus           (+1,1)
  let   $out = ltrim(edit(&ST.SWT_Allowances,'999'),' ')
  print $out                    (+1,1)
  if &ST.SWT_Addl_Allownces > 0
    let   $out = '+' || ltrim(edit(&ST.SWT_Addl_Allownces,'999'),' ')
    print $out                  ()
  end-if
  let   $out = ltrim(edit(&ST.SWT_Addl_Pct,'b9.999'),' ')
  print $out                    (+1,1)
  let   $out = ltrim(edit(&ST.SWT_Addl_Amt,'b9,999.99'),' ')
  print $out                    (+1,1)

  use-column 0

  
  print 'TAXES'                 (#row2,16)      bold
  print 'Description'           (+1,4)
  print ' Current'              (,26)
  print ' YTD'                  (,38)

  print 'DEDUCTIONS' (#row2,59) bold
  print 'EMPLOYER PAID BENEFITS'(,95)      bold
  print 'Description'           (+1,44)
  print ' Current'              (,68)
  print ' YTD'                  (,79)
  print 'Description'           (,85)
  print ' Current'              (,109)
  print ' YTD'                  (,119)

  let #row1 = #row1 + 3
  let #row2 = #row2 + 2

  columns 44 75 87 94 106 113 4 24 33 44 66 74 85 107 114

  move 0 to #j
!SXK 02/18/98 Begin
!  move 'Y' to $Total_Earn_Print
!  move 'Y' to $Total_Print

  while #j <= {n}
     if #j = {n}
!    if #j = {n} - 1             !totals lines  SXK 02/18/98
    !SXK 0928/1999 Begin
    if #ern_pre_count <= {n}
      move 'Total:'             to $EarnName
      move 0                    to #EarnRate
      move #HourCurTotal        to #HourCur
      move #HourYTDTotal        to #HourYTD
      move &B.Total_Gross       to #EarnCur
      move &Y.Total_Gross_YTD   to #EarnYTD
      move 'N' to $Total_Print   !SXK 02/18/98
    else
      move '* Continued on next page' to $EarnName
      move 0 to #earnrate
      move 0 to #hourcur
      move 0 to #hourytd
      move 0 to #earncur
      move 0 to #earnytd
      let $extra_page = 'Y'
    end-if

!    else    !SXK 02/18/98
!      if #j = {n}                 !totals lines
      if #ded_pre_count_p <= {n}
         move 'Total:'             to $PreTaxDedName
         move #PreTaxDedCurTotal   to #PreTaxDedCur
         move #PreTaxDedYTDTotal   to #PreTaxDedYTD
      else
         move '* Continued on next page' to $pretaxdedname
         move 0 to #pretaxdedcur
         move 0 to #pretaxdedytd
         let $extra_page = 'Y'
      end-if
      if #tax_pre_count <= {n}
         move 'Total:'             to $TaxName
         move &B.Total_Taxes       to #TaxCur
         move &Y.Total_Taxes_YTD   to #TaxYTD
      else
         move '* Continued on next page' to $TaxName
         move 0 to #taxcur
         move 0 to #taxytd
         let $extra_page = 'Y'
      end-if

!        move 'Total:'             to $PostTaxDedName
!        move #PostTaxDedCurTotal  to #PostTaxDedCur
!        move #PostTaxDedYTDTotal  to #PostTaxDedYTD
      if #ded_pre_count_t <= {n}
	 move '* Taxable'          to $BenefitName
	 move 0                    to #BenefitCur
	 move 0                    to #BenefitYTD
      else
	 move '* Contined on next page'          to $BenefitName
	 move 0                    to #BenefitCur
	 move 0                    to #BenefitYTD
         let $extra_page = 'Y'
      end-if

      else
	 do Read-ETDarray
      end-if
!    end-if

!SXK 02/18/98 Begin
!    if $Total_Earn_Print = 'Y'
!SXK 02/18/98 End

       print $EarnName             (#row1,1)
     !SXK 09/29/1999 Begin
       if substr($EarnName,1,1) = '*'
          let $continue = 'Y'
       else
          let $continue = 'N'
       end-if
     !SXK 09/30/1999 end
       next-column
 
!***********  SCM  07/29/2003 Begin -Comment current code and Add code to print rate if TBP bonus
!       if #HourCur <> 0
!          print #EarnRate           () edit b999.9999mi ! change to 12,6 if needed
!       end-if

       if #HourCur <> 0
           print #EarnRate           () edit b999.9999mi ! change to 12,6 if needed
       else
          if $EarnName = 'Team Bonus Program'
             print #EarnRate           () edit b999.9999mi  
          end-if
       end-if
!************ SCM 07/29/2003  End
 
       next-column
       print #HourCur              () edit b999.99mi
       next-column
       if rtrim($EarnName,' ') <> '' and $continue = 'N'
	  print #EarnCur            () edit 9999,990.99mi
       end-if
       next-column
       print #HourYTD              () edit b9999.99mi
       next-column
 
!SCM 08/05/2003     begin
!       if rtrim($EarnName,' ') <> '' and $continue = 'N'                      
!          print #EarnYTD            () edit 999999,990.99mi
!       end-if
       if rtrim($EarnName,' ') <> '' and $continue = 'N'
          if $EarnName = 'Team Bonus Program' and #EarnYTD = 0             
          else            
             print #EarnYTD            () edit 999999,990.99mi
          end-if
       end-if
!SCM 08/05/2003     end


!SXK 02/18/98 Begin

!       if $Total_Print = 'N'
!          move 'N' to $Total_Earn_Print
!       end-if
!    else
!          next-column
!          next-column
!          next-column
!          next-column
!          next-column

!    end-if

!SXK 02/18/98 End

    next-column
    print $TaxName              (#row2,1)
    if substr($TaxName,1,1) = '*'
       let $continue = 'Y'
    else 
       let $continue = 'N'
    end-if
    next-column
    if rtrim($TaxName,' ') <> '' and $continue = 'N'
      print #TaxCur             () edit 9999,990.99mi
      next-column
      print #TaxYTD             () edit 99999,990.99mi
      add 1 to #tax_pre_count       ! CWB 03/10/2005
    else
      next-column
    end-if

    next-column
    print $PreTaxDedName        (#row2,1)
    if substr($PreTaxDedName,1,1) = '*'
       let $continue = 'Y'
    else
       let $continue = 'N'
    end-if
    next-column
    if rtrim($PreTaxDedName,' ') <> '' and $continue = 'N'
      print #PreTaxDedCur       () edit 9,999,990.99mi
      next-column
      print #PreTaxDedYTD       () edit 99,999,990.99mi
      add 1 to #ded_pre_count_p       ! CWB 03/10/2005
    else
      next-column
    end-if

!    next-column
!    print $PostTaxDedName       ()
!    next-column
!    if rtrim($PostTaxDedName,' ') <> ''
!      print #PostTaxDedCur      () edit 9,999,990.99mi
!      next-column
!      print #PostTaxDedYTD      () edit 99,999,990.99mi
!    else
!      next-column
!    end-if

    next-column
    print $BenefitName          ()
    if substr($BenefitName,1,1) = '*'
       let $continue = 'Y'
    else
       let $continue = 'N'
    end-if
    next-column
    if rtrim($BenefitName,' ') <> '' and $continue = 'N'
      if #j <= #lastCol         !not totals line
	print #BenefitCur       () edit 9,999,990.99mi
	next-column
	print #BenefitYTD       () edit 99,999,990.99mi
        add 1 to #ded_pre_count_t      ! CWB 03/10/2005
      end-if
    else
      next-column
    end-if

    add 1 to #row1
    add 1 to #row2
    next-column
    add 1 to #j

  end-while

!print the current and YTD summary totals

  let #row = 56  !Used to be 53 SXK 02/18/98

  columns 3

  graphic (#row,1,121) box 1 10 15
  graphic (#row,,121)  box 1 10
  graphic (+1,,121)    box 2 10

  columns 4 24 48 72 94 113

  print ''                      (#row,1)
  print 'Current:'              (+1,1)
  print 'YTD:'                  (+1,1)

  next-column
  print 'TOTAL GROSS'           (#row,-2) bold
  print &B.Total_Gross          (+1,1) edit 999,999,990.99mi
  print &Y.Total_Gross_YTD      (+1,1) edit 999,999,990.99mi

  next-column
  print 'FED TAXABLE GROSS'     (#row,-8) bold
  print #FedTaxGrossCur         (+1,1) edit 999,999,990.99mi
  print #FedTaxGrossYTD         (+1,1) edit 999,999,990.99mi

  next-column
  print ' TOTAL TAXES'          (#row,-3) bold
  print &B.Total_Taxes          (+1,1) edit 99,999,990.99mi
  print &Y.Total_Taxes_YTD      (+1,1) edit 99,999,990.99mi

  next-column
  print 'TOTAL DEDUCTIONS'      (#row,-8) bold
  print &B.Total_Deductions     (+1,1) edit 99,999,990.99mi
  print &Y.Total_Dedns_YTD      (+1,1) edit 99,999,990.99mi

  next-column
  print ' NET PAY'              (#row,+2) bold
  print &B.Net_Pay              (+1,1) edit 999,999,990.99mi
  print &Y.Net_Pay_YTD          (+1,1) edit 999,999,990.99mi

!print the vacation balance totals

!  let #row = 47

!  columns 1

!  graphic (#row,1,24) box  1 10 12
!  graphic (#row,,24)  box  1 10
!  graphic (+1,,24)    box  6 10
!  graphic (+6,,24)    box  1 10

!  columns 2 19

!  print 'PTO HOURS'             (#row,1) bold
!  print 'Start Balance:'        (+1,1)
!  print '+ Earned:'             (+1,1)
!  print '+ Bought:'             (+1,1)
!  print ' -  Taken:'            (+1,1)
!  print ' -  Sold:'             (+1,1)
!  print '+ Adjustments:'        (+1,1)
!  print 'End Balance:'          (+1,1)

!  next-column
!  print ' YTD'                  (#row,+1) bold
!  print #VacStartBal            (+1,1) edit 9,990.9mi
!  print #VacEarned              (+1,1) edit b,999.9mi
!  print #VacBought              (+1,1) edit b,999.9mi
!  print #VacTaken               (+1,1) edit b,999.9mi
!  print #VacSold                (+1,1) edit b,999.9mi
!  print #VacAdjust              (+1,1) edit b,999.9mi
!  print #VacEndBal              (+1,1) edit 9,990.9mi

!print the net pay distribution

!  let #row = 47

!  columns 92

!  graphic (#row,1,35) box  1 10 12
!  graphic (#row,,35)  box  1 10
!  graphic (+1,,35)    box  2 10
!  graphic (+2,,35)    box  1 10

!  columns 93 116

!  print 'NET PAY DISTRIBUTION'  (#row,1) bold

!  if #DepositNetPay <> 0
!    do Format-Number(#Advice#, $out, '0999999')
!    let $out = 'Advice #' || $out
!    print $out                  (+1,1)
!    next-column
!    print #DepositNetPay        () edit b99,999,999.99mi
!    next-column
!  end-if

!  if #CheckNetPay <> 0
!    do Format-Number(&B.PAYCHECK_NBR_num, $out, '0999999')
!    let $out = 'Check #' || $out
!    print $out                  (+1,1)
!    next-column
!    print #CheckNetPay          () edit b99,999,999.99mi
!    next-column
!  end-if

!  position                      (50,1)
!  print 'Total:'                ()
!  next-column
!  print &B.Net_Pay              () edit 999,999,990.99mi

!print the advice message

  let #row = 59

  columns 4

  print 'MESSAGE: '             (#row,1) bold
  print $AdviceMessage           ()
  !SXK 09/30/1999 Begin

if $extra_page = 'Y'
  print 'CONTINUED ON NEXT PAGE' (68) center bold

!Print the employee address on the flap

  do Declare-Printer-Advice
  
  let $h_name = upper($Advicename)  
  position (8)
  move 11 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  print $H_Name               (,50) bold

  move 9 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  position (+1) 
  print $AdviceAddrLine1          (,50)
  position (+1) 
  print $AdviceAddrLine2          (,50)
  position (+1) 
  print $AdviceAddrLine3          (,50) 

end-if
 !SXK 09/30/1999 End  
end-procedure

!***********************************************************************
begin-procedure Print-Advice
!***********************************************************************

 do Declare-Printer-Advice
!SXK 01/25/99 Moved this code upfront
!  do Format-Advice-Name-Address
!SXK 01/25/99 End
!print the company information and the advice date and number

  let #row = 62

  columns 4 71 114

  print $CompanyName            (#row,1) bold
  print $CompanyAddrLine1       (+1,1)
  print $CompanyAddrLine2       (+1,1)
  print $CompanyAddrLine3       (+1,1)

  next-column
  print 'Date'                  (#row,1) bold
  do Format-DateTime(&B.Check_Dt, $out, {DEFDATE}, '', '')
  print $out                    (+1,1)   bold

  next-column
  print 'Advice No.'            (#row,1) bold
!  do Format-Number(&C.PAYCheck_NBR, $out, '9999999')
  do Format-Number(&C.PAYCHECK_NBR, $out, '09999999')	!CWB 02/07/2007 expand to 8 digits
  let $out = ltrim($out,' ')
  print $out                    (+1,1)   bold

!print the deposit amount and the payee information

  let #row = 71

  columns 4 22

  print 'Deposit Amount:'       (#row,1) bold
  print 'To The'                (+2,1)   bold
  print 'Account(s) Of'         (+1,1)   bold

  next-column
  graphic                       (#row,1,17) horz-line 7
  do Format-Number(#DepositNetPay, $out, '$$$$,$$$,$$9.99mi')
  let $out = ltrim($out,' ')
  print $out                    (#row,1) bold

  print $AdviceName             (+4,1) bold
  print $AdviceAddrLine1        (+1,1)
  print $AdviceAddrLine2        (+1,1)
  print $AdviceAddrLine3        (+1,1)
  print $AdviceLocation         (+1,1)

!print the direct deposit distribution

  let #row = 68

  columns 74

  graphic (#row,1,50) box 1 10 15
  graphic (#row,,50)  box 1 10
  graphic (+1,,50)    box 1 10
  graphic (+1,,50)    box 8 10
  graphic (+8,,50)    box 1 10

  columns 75 90 112

  graphic () font :#StdFont :#StmtPntSize
  print 'DIRECT DEPOSIT DISTRIBUTION'   (#row,1) bold
  print 'Account Type'                  (+1,1)
  next-column
  print 'Account Number'                ()
  next-column
  print ' Deposit Amount'               (,-1)

  next-column
  move 0 to #i
  while #i <= #lastAcct
    get $AccountType $Account# #DepositAmount from DDParray(#i)
    print $AccountType          (+1,1)
    next-column
    print $Account#             ()
    next-column
    if #DepositAmount <> 0
      print #DepositAmount      () edit $$$$,$$$,$$9.99mi
    end-if
    next-column
    add 1 to #i
  end-while

  print 'Total:'                (+1,1)
  use-column 3
  print #DepositNetPay          () edit $$$$,$$$,$$9.99mi

!print the "Non-Negotiable" line

  use-column 0
  do Declare-Printer-Non-Negotiable
  print 'NON-NEGOTIABLE'        (81,50) bold  !USed to 83, SXK 02/19/98

!Print the employee address on the flap
  
  let $h_name = upper($advicename)  
  position (8)
  move 11 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  print $H_Name               (,50) bold

  move 9 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  position (+1) 
  print $adviceAddrLine1          (,50)
  position (+1) 
  print $adviceAddrLine2          (,50)
  position (+1) 
  print $adviceAddrLine3          (,50) 

  new-page

end-procedure

!SXK 09/28/1999 Begin
!***********************************************************************
begin-procedure Print-Extra-Page
!***********************************************************************
  new-page

 do Declare-Printer-Statement

!print the pay period information

  let #row = 1

  move 11 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  print $CompanyName            (#row,3) bold
 
!********  SCM   begin  07/03/2003   Print 'TBP' on advices addr front in big font
  if $EE_Had_TBP_Erncd535 = 'Y'                   !if ee had an erncd of 535, this is a
      let #row = 2                                !team bonus check.  Print 'TBP'                                 
      move 30 to #companypntsize                  !in upper right corner of addr flap 
      graphic () font :#StdFont :#CompanyPntSize  !move down a row to accomodate big font
      print 'TBP'            (#row,80) bold
  end-if
!********  SCM   end    07/03/2003
 
  move 9 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  position (+2)
  do Format-Advice-Name-Address
!  print $AdviceLocation          (,3)  JNB 02/01/2000
  print $Advicedept (+1,3)
  print $Adviceacct (+1,3)
  print 'Mail Drop: ' (+1,3)
  print &EMP.MAIL_DROP ()


!print the ETD detail information

  let #row1 = 23  !Original value 11
  let #row2 = 40  !Original Value 28 

  columns 43

  graphic (#row1,1,81) box  1 10 12
  graphic (#row1,,81)  box  1 10

  columns 3 43 3 43 84

  graphic (+1,1,40)    box 2 10 
  graphic (+2,,40)     box 9 10
  graphic (+9,,40)     box 1 10
  graphic (+1,,40)     box 4 10
  graphic (+4,,81)     box 1 10
  next-column
  let #row3 = #row1 + 1
  graphic (#row3,1,81) box  2 10
  graphic (+2,,81)     box 13 10
  graphic (+13,,81)    box  1 10
  next-column
  graphic (#row2,1,40) box  1 10 12
  graphic (#row2,,40)  box  1 10
  graphic (+1,,40)     box  1 10
  graphic (+1,,40)     box 13 10   !Used to be 13 for the height SXK 02/18/98
  graphic (+13,,40)    box  1 10
  next-column
  graphic (#row2,1,41) box  1 10 12
  graphic (#row2,,41)  box  1 10
  graphic (+1,,41)     box  1 10
  graphic (+1,,41)     box 13 10   !Used to be 13 for the height SXK 02/18/98 
  graphic (+13,,41)    box  1 10
  next-column
  graphic (#row2,1,40) box  1 10 12
  graphic (#row2,,40)  box  1 10
  graphic (+1,,40)     box  1 10
  graphic (+1,,40)     box 13 10   !Used to be 13 for the height SXK 02/18/98
  graphic (+13,,40)    box  1 10

  use-column 0

  move 9 to #companypntsize
  graphic () font :#StdFont :#CompanyPntSize
  print $CompanyName            (#row1,4) bold
 
  graphic () font :#StdFont :#StmtPntSize
 
  print 'HOURS AND EARNINGS'    (#row1,71) bold

!print the employee information

  print 'Pay Begin Dt:'       (+1,4)
  !VENDAXG Modified for Upgrade 9.0 - Begin
  !do Format-DateTime(&A.Pay_Begin_Dt, $out, {DEFDATE}, '', '')
  do Format-DateTime($A.Pay_Begin_Dt, $out, {DEFDATE}, '', '')!changed from &A.Pay_Begin_Dt to $A.Pay_Begin_Dt by VENDKXY for ITG 46924
  !VENDAXG Modified for Upgrade 9.0 - End
  print $out                    (,16)
  print 'Advice Dt:'        (,25)
  do Format-DateTime(&B.Check_Dt, $out, {DEFDATE}, '', '')
  print $out                    (,35)

  print '-'                     (,77,16) fill
  print 'Current'               (,87)
  print '-'                     (,93,16)   fill
  print '-'                     (,107,12)   fill
  print 'YTD'                   (,114)
  print '-'                     (,118,10)   fill

  print 'Pay End Dt:'       (+1,4)
  
  !VENDAXG Modified for Upgrade 9.0 - Begin
  !do Format-DateTime(&A.Pay_End_Dt, $out, {DEFDATE}, '', '')
  do Format-DateTime($A.Pay_End_Dt, $out, {DEFDATE}, '', '') !changed from &A.Pay_end_Dt to $A.Pay_end_Dt by VENDKXY for ITG 46924
  !VENDAXG Modified for Upgrade 9.0 - End
  print $out                    (,16)
  print 'Advice #:'              (,25)
  !do Format-Number(&B.PAYCHECK_NBR, $out, '0999999') !AXL 9/16/2002 
!  do Format-Number(&C.PAYCHECK_NBR, $out, '0999999')	!AXL 9/16/2002 From PS_PAY_DISTRIBUTN
  do Format-Number(&C.PAYCHECK_NBR, $out, '09999999')	!CWB 02/07/2007 expand to 8 digits
  print $out                    (,35) bold

  print 'Description'           (,44)
  print 'Rate'                  (,77)
  print 'Hours'                 (,88)
  print 'Earnings'              (,96)
  print 'Hours'                 (,107)
  print 'Earnings'              (,117)

  print $HomeName               (+1,4) bold
  print $HomeAddrLine1          (+1,4)
  print $HomeAddrLine2          (+1,4)
  print $HomeAddrLine3          (+1,4)

  print 'Emp ID: '            (,25)

  !print &P.emplid                  (,33)     edit xxx-xx-xxxx
  print $Emplid                    (,33) !isdvmxr 09/01/2006


  print 'Department:'           (+1,4)
  let $out = $DeptID || '-' || $DeptName
  print $out                    (,16)

  print 'Acct CD:'              (+1,4)
  let $out = $AcctCD || '-' || $AcctCDName
  print $out                    (,16)

  print 'Location:'             (+1,4)
  print $LocationName           (,16)
  print 'Job Title:'            (+1,4)
  print $JobTitle               (,16)
  print 'Pay Group:'            (+1,4)
  let $out = $PayGroup || '-' || $PayGroupName
  print $out                    (,16)

  let #row = 35
  columns 4 20 30

  print 'TAX DATA:'             (#row,1)
  print 'Marital Status:'       (+1,1)
  print 'Allowances:'           (+1,1)
  print 'Addl. Pct.:'           (+1,1)
  print 'Addl. Amt.:'           (+1,1)

  next-column
  print 'Federal'               (#row,1)
  print $FWTMarStatus           (+1,1)
  let   $out = ltrim(edit(&FT.FWT_Allowances,'999'),' ')
  print $out                    (+1,1)
  let   $out = ltrim(edit(&FT.FWT_Addl_Pct,'b9.999'),' ')
  print $out                    (+1,1)
  let   $out = ltrim(edit(&FT.FWT_Addl_Amt,'b9,999.99'),' ')
  print $out                    (+1,1)

  next-column
  let $ResidentState = rtrim(&ST.State, ' ') || ' State'
  print $ResidentState          (#row,1)
  print $SWTMarStatus           (+1,1)
  let   $out = ltrim(edit(&ST.SWT_Allowances,'999'),' ')
  print $out                    (+1,1)
  if &ST.SWT_Addl_Allownces > 0
    let   $out = '+' || ltrim(edit(&ST.SWT_Addl_Allownces,'999'),' ')
    print $out                  ()
  end-if
  let   $out = ltrim(edit(&ST.SWT_Addl_Pct,'b9.999'),' ')
  print $out                    (+1,1)
  let   $out = ltrim(edit(&ST.SWT_Addl_Amt,'b9,999.99'),' ')
  print $out                    (+1,1)

  use-column 0

  
  print 'TAXES'                 (#row2,16)      bold
  print 'Description'           (+1,4)
  print ' Current'              (,26)
  print ' YTD'                  (,38)

  print 'DEDUCTIONS' (#row2,59) bold
  print 'EMPLOYER PAID BENEFITS'(,95)      bold
  print 'Description'           (+1,44)
  print ' Current'              (,68)
  print ' YTD'                  (,79)
  print 'Description'           (,85)
  print ' Current'              (,109)
  print ' YTD'                  (,119)

  let #row1 = #row1 + 3
  let #row2 = #row2 + 2

  columns 44 75 87 94 106 113 4 24 33 44 66 74 85 107 114

  let #j = {n}

  while #j <= {new_n}
     if #j = {new_n}
     if #ern_pre_count > {n}
      move 'Total:'             to $EarnName
      move 0                    to #EarnRate
      move #HourCurTotal        to #HourCur
      move #HourYTDTotal        to #HourYTD
      move &B.Total_Gross       to #EarnCur
      move &Y.Total_Gross_YTD   to #EarnYTD
      move 'N' to $Total_Print   !SXK 02/18/98
     end-if
     if #ded_pre_count_p > {n}
         move 'Total:'             to $PreTaxDedName
         move #PreTaxDedCurTotal   to #PreTaxDedCur
         move #PreTaxDedYTDTotal   to #PreTaxDedYTD
     end-if
     if #tax_pre_count > {n}
         move 'Total:'             to $TaxName
         move &B.Total_Taxes       to #TaxCur
         move &Y.Total_Taxes_YTD   to #TaxYTD
     end-if
     if #ded_pre_count_t > {n}
         move '* Taxable'          to $BenefitName
         move 0                    to #BenefitCur
         move 0                    to #BenefitYTD
     end-if
      else
         do Read-ETDarray
      end-if


       print $EarnName             (#row1,1)
       next-column
       if #HourCur <> 0
          print #EarnRate           () edit b999.9999mi ! change to 12,6 if needed
       end-if
       next-column
       print #HourCur              () edit b999.99mi
       next-column
       if rtrim($EarnName,' ') <> ''
          print #EarnCur            () edit 9999,990.99mi
       end-if
       next-column
       print #HourYTD              () edit b9999.99mi
       next-column
       if rtrim($EarnName,' ') <> ''
          print #EarnYTD            () edit 999999,990.99mi
       end-if

!SXK 02/18/98 Begin

!       if $Total_Print = 'N'
!          move 'N' to $Total_Earn_Print
!       end-if
!    else
!          next-column
!          next-column
!          next-column
!          next-column
!          next-column

!    end-if

!SXK 02/18/98 End

    next-column
    print $TaxName              (#row2,1)
    next-column
    if rtrim($TaxName,' ') <> ''
      print #TaxCur             () edit 9999,990.99mi
      next-column
      print #TaxYTD             () edit 99999,990.99mi
    else
      next-column
    end-if

    next-column
    print $PreTaxDedName        (#row2,1)
    next-column
    if rtrim($PreTaxDedName,' ') <> ''
      print #PreTaxDedCur       () edit 9,999,990.99mi
      next-column
      print #PreTaxDedYTD       () edit 99,999,990.99mi
    else
      next-column
    end-if

!    next-column
!    print $PostTaxDedName       ()
!    next-column
!    if rtrim($PostTaxDedName,' ') <> ''
!      print #PostTaxDedCur      () edit 9,999,990.99mi
!      next-column
!      print #PostTaxDedYTD      () edit 99,999,990.99mi
!    else
!      next-column
!    end-if

    next-column
    print $BenefitName          ()
    next-column
    if rtrim($BenefitName,' ') <> ''
      if #j <= #lastCol         !not totals line
        print #BenefitCur       () edit 9,999,990.99mi
        next-column
        print #BenefitYTD       () edit 99,999,990.99mi
      end-if
    else
      next-column
    end-if

    add 1 to #row1
    add 1 to #row2
    next-column
    add 1 to #j

  end-while

end-procedure

!***********************************************************************
begin-procedure Declare-Printer-Statement
!***********************************************************************

  declare printer
    type          = HPLASERJET
    orientation   = portrait
    lines-inch    = 8
    chars-inch    = 16.6
    top-margin    = 0.30
    left-margin   = 0.25
    font          = 5
    point-size    = 7
    lines-inch    = 8

end-procedure


!***********************************************************************
begin-procedure Declare-Printer-Advice
!***********************************************************************

  declare printer
    type          = HPLASERJET
    orientation   = portrait
    lines-inch    = 8
    chars-inch    = 16.6
    top-margin    = 0.00
    left-margin   = 0.25
    font          = 5
    point-size    = 9

end-procedure


!***********************************************************************
begin-procedure Declare-Printer-Non-Negotiable
!***********************************************************************

  declare printer
    type          = HPLASERJET
    orientation   = portrait
    lines-inch    = 8
    chars-inch    = 16.6
    top-margin    = 0.00
    left-margin   = 0.00
    font          = 5
    point-size    = 18

end-procedure


!***********************************************************************
begin-procedure Format-Advice-Name-Address
!***********************************************************************

  if rtrim(&B.PayCheck_Name,' ') <> ''
    let $Name = &B.PayCheck_Name
    do Rotate-Name
    let $AdviceName = upper($Name)
  end-if

  let $AdviceAddrLine3 = ' '
  let $AdviceLocation =  ' '

  evaluate &B.PayCheck_Addr_Optn
    when = 'C'  !Mail to Check Address
    when = 'H'  !Mail to Home Address
    when = 'M'  !Mail to Mail Address
      let $State_out = rtrim(&B.State, ' ')
      let $AdviceCityState =
	rtrim(&B.City,' ') || edit($State_out,',bxxbb') || &B.postal

      let $AdviceAddrLine1   = &B.Address1
      if rtrim(&B.Address2,' ') = ''
	let $AdviceAddrLine2 = $AdviceCityState
      else
	let $AdviceAddrLine2 = &B.Address2
	let $AdviceAddrLine3 = $AdviceCityState
      end-if

      let $AdviceLocation = 'Location: ' || $LocationName

    when = 'D'  !Deliver to Home Department
      let $AdviceAddrLine1 = 'Department ID: ' || $DeptID
      let $AdviceAddrLine2 = $DeptName

    when = 'L'  !Deliver to Job Location
    when = 'P'  !Deliver to Check Location
      let $AdviceAddrLine1 = 'Location ID: ' || $Location
      let $AdviceAddrLine2 = $LocationName
  end-evaluate
!SXK 04/06/99 Begin
  let $advicedept = 'Department: ' || $deptid || '-' || $deptname
  let $adviceacct = 'Account CD: ' || $acctcd || '-' || $acctcdname
!SXK 04/06/99 End


end-procedure
!SXK 04/12/1999 Begin
#Include 'gexxx932.sqc'  !Get Multiple Individual Check Numbers
!SXK 04/12/1999 End

! CWB 09/21/2001 BEGIN    Added following 2 procedures
!**********************************************************************
begin-procedure Get-Garnishment-Detail
!**********************************************************************

begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
GR.GARNID, GR.DEDUCT_AMT

  let $GarnID = RTRIM(&GR.Garnid, ' ')
  do Get-Garn-Type
  let $FieldName = 'GARN_TYPE'
  let #GarnAmt = &GR.Deduct_Amt

  do Read-Translate-Table
  let $GarnName = $XlatShortName

  let $Name = $GarnID || ' ' || $GarnName
  let $Code = 'GG' || $GarnID || &N.Ded_Class

  move #PreTaxDedsRow to #i

  move #GarnAmt to #Cur
  do Update-ETDarray

FROM PS_PAY_GARNISH GR
WHERE GR.COMPANY = &A.COMPANY
  AND GR.PAYGROUP = &A.PAYGROUP
  AND GR.PAY_END_DT = &A.PAY_END_DT
  AND GR.OFF_CYCLE = &B.OFF_CYCLE
  AND GR.PAGE_NUM = &B.PAGE_NUM
  AND GR.LINE_NUM = &B.LINE_NUM
ORDER BY GR.GARNID
end-SELECT
end-procedure  !Get-Garnishment-Detail

!***********************************************************************
begin-procedure Get-Garn-Type
!***********************************************************************

begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
GS.GARN_TYPE

  let $FieldValue = &GS.Garn_Type

FROM PS_GARN_SPEC GS
WHERE GS.EMPLID = &B.EMPLID
  AND GS.COMPANY = &A.COMPANY
  AND GS.GARNID = $Garnid
end-SELECT

end-procedure  !Get-Garn-Type

!**********************************************************************
begin-procedure Get-Garn-Balances
!**********************************************************************

  let #Cur = 0

begin-SELECT
!/*+ RULE */                                 ! CWB 03/10/2005
NG.GARNID, NG.DED_CLASS, NG.DED_YTD

  let $GarnID = RTRIM(&NG.Garnid, ' ')
  let #YTD = &NG.Ded_YTD

  do Get-Garn-Type
  do Read-Translate-Table
  let $GarnName = $XlatShortName
!  let $Name = 'GARN' || ' ' || $GarnID || ' ' || $GarnName
  let $Name = $GarnID || ' ' || $GarnName
  let $Code = 'GG' || $GarnID || &NG.Ded_Class

!SXK 12/07/98 Begin
!  move #PostTaxDedsRow to #i
  move #PreTaxDedsRow to #i
!SXk End

  do Update-ETDarray

FROM  PS_GARN_BALANCE NG
WHERE NG.EMPLID = &B.EMPLID
  AND NG.COMPANY = &A.COMPANY
  AND NG.BALANCE_ID = &A1.BALANCE_ID
  AND NG.BALANCE_YEAR = &A1.BALANCE_YEAR
  AND NG.BALANCE_PERIOD =
      (SELECT MAX(BALANCE_PERIOD)
         FROM PS_GARN_BALANCE
        WHERE EMPLID = NG.EMPLID
          AND COMPANY = NG.COMPANY
          AND BALANCE_ID = NG.BALANCE_ID
          AND BALANCE_YEAR = NG.BALANCE_YEAR

! CWB 10/28/2003 BEGIN - Changes from Tax Update 03-F
          AND PLAN_TYPE = NG.PLAN_TYPE
          AND BENEFIT_PLAN = NG.BENEFIT_PLAN
          AND DEDCD = NG.DEDCD
          AND DED_CLASS = NG.DED_CLASS
          AND GARNID = NG.GARNID
! CWB 10/28/2003 END

          AND BALANCE_PERIOD <= &A1.BALANCE_PERIOD)
end-SELECT

end-procedure

! CWB 09/21/2001 END
! VENDAXG ADDED FOR ITG 42511(ISSUE-615) ON 14/07/2008 - Begin

Begin-Procedure Get-Suppr-Advice

Let $Skip_Record = 'N'
begin-select
DD.SUPPR_DDP_ADVICE 


 LET $Skip_Record = LTRIM(RTRIM(&DD.SUPPR_DDP_ADVICE,' '),' ')


From PS_DIRECT_DEPOSIT DD 
WHERE DD.EMPLID=&B.EMPLID 
AND DD.EFFDT = (SELECT MAX(EFFDT) FROM PS_DIRECT_DEPOSIT 
		WHERE EMPLID=DD.EMPLID  
		AND (EFFDT <= &A.PAY_END_DT OR
                         EFFDT<= &B.CHECK_DT))!ISDV-DZK Added the code as per the SCT 12770189  on 05072009                        
		
		!AND EFFDT<=SYSDATE)
AND EFF_STATUS='A'
END-SELECT
! Show 'Emplid  : '&B.EMPLID '  Skip advice : '$Skip_Record 
End-Procedure Get-Suppr-Advice
!VENDAXG ADDED FOR ITG 42511(ISSUE-615) ON 14/07/2008 - End