!***********************************************************************
! GEXBN061:   Incidental Day Report                                    *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXBN061:              Incidental Day Report                         *
!                                                                      *        
! Narrative:             This program creates a report of Incidental   *
!                        days available, used and remaining for all    *
!                        all available employees in Nonunion, Nonexempt*
!                        Class.  This gives managers the necessary data*
!                        on their employees to reimburse employees     *
!                        for unused sick days for the calendar year    * 
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!			      #debug7 data returned from sql calls     * 
!                                                                      *  
! SQL Tables:		PS_PERSONAL_DATA                               *
!                       PS_EMPLOYMENT                                  *
!                       PS_JOB                                         *
!                       PS_EARNINGS_BAL                                *
!                                                                      *
!                                                                      *
! Written by:		Joe Besagar                                    * 
! Modified by:		Tony Labra                                     *      
!                                                                      *
! Normally Run:		Yearly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS     DATE         DESCRIPTION OF THE CHANGE                  *
!***********************************************************************
! JNB          02/29/2000   Initial Creation                           *
!                                                                      *
! AXL          03/20/2001   Re-structure logic and made production     *
!                           ready                                      *
!                                                                      *
! AXL          09/18/2001   Remove hardcoded criteria that no longer   *
!                           applies.                                   *
!                                                                      *
! PSR          08/12/2002   Modified UNION_CD FROM JOB_LABOR TO JOB    * 
!                           - Upgrade 8.3                              *
!                                                                      *
! PSR          08/27/2002   EMPL_RCD is now part of the key for        *
!                           PS_EARNINGS_BAL - Upgrade 8.3              *
!                                                                      *
! GBD          09/25/2002   Benefit Program Criteria incorrect         *
!                           - Upgrade 8.3                              *
!                                                                      *
! AXL          02/19/2003   Added missing run control parameters that  *
!                           are needed if user omits a Benefit Pgm on  *
!                           the run cntl panel. This replaces code     *
!                           change done on 9/25/2003                   *
!                                                                      *
! AXL          03/11/2003   EMPL_RCD backed out of PS_EARNINGS_BAL.    *
! isdvnpk      03/25/2008 for rehire dt issue in 90                    *
! GEXPY_848_ITG119621 2012-02-13  ISDVMZA                              *
!                           Modify Exclude criteria to handle multiple *
!                           jobcodes beyond the character string limit *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup02.sqc'

#define #column1     1		!deptid
#define #column2    10		!name
#define #column3    40		!emplid	
#define #column4    55		!jobcode	
#define #column5    63		!hire_dt		
#define #column6    78		!ben_pgm_dt
#define #column7    93		!full_part_time
#define #column8    100		!std_hrs
#define #column9    110		!hrly_rt
#define #column10   120		!hrs_avail
#define #column11   135		!hrs_used
#define #column12   150		!hrs_rmng

!***********************************************************************
Begin-Report
!***********************************************************************
#debug9 Show 'Begin-Report'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc
  
  Do Initialization
  Do Main-Process
  Do Finalization

End-Report

!***********************************************************************
Begin-Heading 8 
!***********************************************************************
#debug9 Show 'Begin-Heading'

  Let $ReportId = 'GEXBN061'

#Include 'stdhdg01.sqc'

  Print 'Dept'             (+2,{#column1})
  print 'Name'             (,{#column2}) 
  Print 'Emplid'           (,{#column3})
  Print 'Job'              (,{#column4})
  Print 'Hire Date'        (,{#column5})
  Print 'Evaluation'       (,{#column6})
  Print 'F/P'              (,{#column7})
  Print 'Std'              (,{#column8})
  Print '  Hrly'           (,{#column9})
  Print '   Hours'         (,{#column10})
  Print '     Hours'       (,{#column11})
  Print ' Hours'           (,{#column12})
  
  Print 'Code'             (+1,{#column4})
  Print 'Date'		   (,{#column6})
  Print 'Sts'              (,{#column7})
  Print 'Hrs'              (,{#column8})
  Print '  Rate'           (,{#column9})
  Print '   Available'     (,{#column10})
  Print '     Used'        (,{#column11})
  Print ' Remaining'       (,{#column12})
  
  print '-'                (+1,{#column1},158)   fill
  
End-Heading

!***********************************************************************
Begin-Procedure Initialization
!***********************************************************************
#debug9 Show 'Initialization'

  Let $GEXXX902_Deptid_Alias   		= 'j.deptid'
  Let $GEXXX911_Benefit_Program_Alias 	= 'D.BENEFIT_PROGRAM'
  !AXL 2/19/2003 Begin
  Let $GEXXX911_Plan_Type_Alias        = '1'
  Let $GEXXX911_Benefit_Plan_Alias     = '1'
  !AXL 2/19/2003 End
  Let $GEXXX916_Jobcode_Alias  		= 'j.jobcode'
  
  If $prcs_process_instance = ''
    Do SQRW-Run-Controls
  Else
    Do Process-Scheduler-Run-Controls
  End-if
  
  Let $ReportID      = 'GEXBN061'
  Let $ReportTitle   = 'INCIDENTAL DAYS REPORT'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle


  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show ' '
  show 'Report Began at ' &timeBegan ' on ' &dateBegan
  
  show ' '
  Show '$X000_Where_Select_AsOfDate = ' $X000_Where_Select_AsOfDate
  Show '$GEXXX911_Include_Benefit_Program_Display_Criteria  = ' $GEXXX911_Include_Benefit_Program_Display_Criteria
  Show '$GEXXX902_Include_Deptid_Display_Criteria           = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA          = ' $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA
  Show '$GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA          = ' $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x
  Show ' '

  do Convert-To-DTU-Date($WHERE_SELECT_ASOFDATE, $AsOfDate_dtu)
  do Convert-From-DTU-Date($AsOfDate_dtu, $runctl_dbf)
  let $run_dd_mon = '31-DEC-'
  let $run_dd_mon_begin = '01-JAN-' 
  let $run_yyyy   = substr($runctl_dbf,8,4)
  let #balance_year = $run_yyyy
  #debug7 show '#balance_year ' #balance_year
  let $run_dd_mon_yyyy = $run_dd_mon ||$run_yyyy 
  #debug7 show '$run_dd_mon_yyyy '$run_dd_mon_yyyy

  let $run_dd_mon_yyyy_begin = $run_dd_mon_begin ||$run_yyyy 
  #debug7 show '$run_dd_mon_yyyy_begin '$run_dd_mon_yyyy_begin

  Let $Calc_date_dd_mon  = '01-JUL-'||$run_yyyy
  #debug7 show '$Calc_date_dd_mon '$Calc_date_dd_mon   

  do Convert-To-DTU-Date($Calc_date_dd_mon, $Calc_date_ymd_dtu)
  #debug7 show '$Calc_date_ymd_dtu ' $Calc_date_ymd_dtu

    let $calc_yyyy     = substr($Calc_date_ymd_dtu,1,4)
    let $calc_mm       = substr($Calc_date_ymd_dtu,6,2)
    let $calc_dd       = substr($Calc_date_ymd_dtu,9,2)
    let $calc_ymd      = $calc_yyyy||$calc_mm||$calc_dd
    #debug7 show '$calc_ymd '$calc_ymd 

    Let $calc_dec_1_dt  = '01-DEC-'||$run_yyyy
    #debug7 show '$calc_dec_1_dt ' $calc_dec_1_dt
 
    do Convert-To-DTU-Date($calc_dec_1_dt, $calc_dec_1_dt_dtu)
  
    let $calc_dec_1_yyyy     = substr($calc_dec_1_dt_dtu,1,4)
    let $calc_dec_1_mm       = substr($calc_dec_1_dt_dtu,6,2)
    let $calc_dec_1_dd       = substr($calc_dec_1_dt_dtu,9,2)
    let $calc_dec_1_ymd      = $calc_dec_1_yyyy||$calc_dec_1_mm||$calc_dec_1_dd
    #debug7 show '$calc_dec_1_ymd ' $calc_dec_1_ymd

    do Convert-To-DTU-Date($run_dd_mon_yyyy, $run_ymd_dtu)
    #debug7 show '$run_ymd_dtu ' $run_ymd_dtu

    let $yr_end      = substr($run_ymd_dtu,1,4)
    let $mm_end      = substr($run_ymd_dtu,6,2)
    let $dd_end      = substr($run_ymd_dtu,9,2)
    let $yr_ending   = $yr_end||$mm_end||$dd_end
    #debug7 show '$yr_ending '$yr_ending 

    do Convert-To-DTU-Date($run_dd_mon_yyyy_begin, $run_ymd_begin_dtu)
    #debug7 show '$run_ymd_begin_dtu ' $run_ymd_begin_dtu

    let $yr_begin      = substr($run_ymd_begin_dtu,1,4)
    let $mm_begin      = substr($run_ymd_begin_dtu,6,2)
    let $dd_begin      = substr($run_ymd_begin_dtu,9,2)
    let $yr_beginning  = $yr_begin||$mm_begin||$dd_begin
    #debug7 show '$yr_beginning '$yr_beginning 

    Do Print-Cover-Page
    
End-Procedure

!***********************************************************************
Begin-Procedure SQRW-Run-Controls 
!***********************************************************************
#debug9 show 'SQRW-Run-Controls'

  Do Ask-As-Of-Date
  Let $WHERE_SELECT_ASOFDATE = $AsOfDate
  
  Let $DeptIDString = ''''
  Display 'Enter DeptID or leave blank to exit.'
  While 1=1
    Input $In-DeptID Maxlen=10 'DeptID'
    Uppercase $In-DeptID
    If Rtrim($In-DeptID, ' ') = ''
      Concat '''' With $DeptIDString
      Break
    End-If
    If $DeptIDString <> ''''
      Concat ''',''' With $DeptIDString
    End-If
    Concat $In-DeptID With $DeptIDString
  End-While

  If $DeptIDString = ''''''
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' In (' || $DeptIDString || ')'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_INCLUDE_DEPTID_CRITERIA
  End-If

  Let $BenefitProgramString = ''''
  While 1=1
    Display 'Enter Benefit Program or leave blank to exit.'
    Input $In-Benefit-Program Maxlen=3 'Benefit Program'
    Uppercase $In-Benefit-Program
    If Rtrim($In-Benefit-Program, ' ') = ''
      Concat '''' With $BenefitProgramString
      Break
    End-If
    If $BenefitProgramString <> ''''
      Concat ''',''' With $BenefitProgramString
    End-If
    Concat $In-Benefit-Program With $BenefitProgramString
  End-While

  If $BenefitProgramString = ''''''
     Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
     Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = 'ALL'
  Else
     Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = $GEXXX911_Benefit_Program_Alias || ' In (' || $BenefitProgramString || ')'
     Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
  End-If
  
  While 1=1
    Input $Gex_Incl_Excl Maxlen=1 '(I)nclude Jobs / (E)xclude Jobs / (A)ll Jobs'
    Uppercase $Gex_Incl_Excl
    If $Gex_Incl_Excl = 'I' 
       Do Ask-For-Incl-Jobs
       Break
    Else
      If $Gex_Incl_Excl = 'E'
         Do Ask-For-Excl-Jobs
         Break
      Else
        Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '1=1'
        Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'
        Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = '1=1'
        Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = 'NONE'
        Break
      End-if
    End-If
  End-While
  
End-Procedure


!***********************************************************************
Begin-Procedure Ask-For-Incl-Jobs
!***********************************************************************
#debug9 show 'Ask-For-Incl-Jobs'

Let $JobcodeString = ''''
  Display 'Enter Jobcodes to INCLUDE or leave blank to exit.'
  While 1=1
    Input $In-Jobcode Maxlen=6 'Jobcode'
    Uppercase $In-Jobcode
    If Rtrim($In-Jobcode, ' ') = ''
      Concat '''' With $JobcodeString
      Break
    End-If
    If $JobcodeString <> ''''
      Concat ''',''' With $JobcodeString
    End-If
    Concat $In-Jobcode With $JobcodeString
  End-While

  If $JobcodeString = ''''''
    Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '1=1'
    Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = $GEXXX916_Jobcode_Alias || ' In (' || $JobcodeString || ')'
    Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = $GEXXX916_INCLUDE_JOBCODE_CRITERIA
  End-If
  
  Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = '1=1'
  Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = 'NONE'
  
End-Procedure

!***********************************************************************
Begin-Procedure Ask-For-Excl-Jobs
!***********************************************************************
#debug9 show 'Ask-For-Excl-Jobs'

  Let $JobcodeString = ''''
  Display 'Enter Jobcodes to EXCLUDE or leave blank to exit.'
  While 1=1
    Input $In-Jobcode Maxlen=6 'Jobcode'
    Uppercase $In-Jobcode
    If Rtrim($In-Jobcode, ' ') = ''
      Concat '''' With $JobcodeString
      Break
    End-If
    If $JobcodeString <> ''''
      Concat ''',''' With $JobcodeString
    End-If
    Concat $In-Jobcode With $JobcodeString
  End-While

  If $JobcodeString = ''''''
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = '1=1'
    Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = 'NONE'
  Else
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = $GEXXX916_Jobcode_Alias || ' Not In (' || $JobcodeString || ')'
    Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x
  End-If
  
  Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '1=1'
  Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'

End-Procedure

!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls 
!***********************************************************************
#debug9 show 'Process-Scheduler-Run-Controls'

  Do GEXRCBN1-SELECT-PARAMETERS

  Let $Where_Select_AsOfDate = &GEX_RC_BEN.AsOfDate
  If Rtrim (&GEX_RC_BEN.AsOfDate, ' ') = ''
     Let $Where_Select_AsOfDate = $AsOfToday
  End-If

  Do GEXXX902-Select-Deptid-Parameters
  Do GEXXX911-Select-Benefit-Program-Parameters  

!AXL 2/19/2003 Functionality replaced - Begin
!GBD 09/25/2002 Begin
!if $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = 'ALL'
!let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
! end-if
!GBD 09/25/2002 End  
!AXL 2/19/2003 Functionality replaced - End

  Evaluate &GEX_RC_BEN.Gex_Incl_Excl
  
     When = 'I'

        Do GEXXX916-Select-Jobcode-Parameters 
        Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = '1=1'
        Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = 'NONE'
        Break
        
     When = 'E'

        Do GEXXX916-Select-Jobcode-Parameters_x
        Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '1=1'
        Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'NONE'
        Break
        
     When-Other
     
        Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA   = '1=1'
        Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = '1=1'
        Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'
        Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = 'NONE'
   
  End-Evaluate

End-Procedure

!***********************************************************************
Begin-Procedure Print-Cover-Page
!***********************************************************************
#debug9 Show 'Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  
  Print '$GEXXX902_Include_Department_Display_Criteria ='         (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria                 (0,+2)
 
  Print '$GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA ='    (+1,5)
  Print $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA        (0,+2)
  
  Print '$GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA         ='    (+1,5)
  Print $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA                (0,+2)
  
  Print '$GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA         ='    (+1,5)
  Print $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x              (0,+2)
  
  Let #PAGE-COUNT = 0
  NEW-PAGE

End-Procedure

!***********************************************************************
Begin-Procedure Main-Process
!***********************************************************************
#debug9 Show 'Main-Process'

Begin-Select
J.DEPTID     ()  On-Break  Level=1
                 Print=Never
                 After=Deptid-Break 
J.COMPANY            	
J.PAYGROUP              
J.EMPLID             	
J.EMPL_RCD         
J.EMPL_STATUS
J.FULL_PART_TIME 
J.HOURLY_RT      
J.STD_HOURS     
J.JOBCODE   
D.BENEFIT_PROGRAM	
P.NAME
E.Hire_Dt       
!E.Rehire_Dt  ! gex isdvnpk 03/25/2008 for rehire dt issue in 90
(SELECT JREH.EFFDT FROM PS_JOB JREH WHERE JREH.EMPLID    = J.EMPLID AND JREH.EMPL_RCD  = J.EMPL_RCD  AND JREH.EFFDT =
        (SELECT MAX(JREH1.EFFDT) FROM PS_JOB JREH1 WHERE JREH.EMPLID = JREH1.EMPLID AND JREH.EMPL_RCD  = JREH1.EMPL_RCD
          AND JREH1.EFFDT <= $run_dd_mon_yyyy AND JREH1.ACTION = 'REH') 
    AND JREH.EFFSEQ = (SELECT MAX(JREH2.EFFSEQ) FROM PS_JOB JREH2 WHERE JREH.EMPLID = JREH2.EMPLID AND JREH.EMPL_RCD = JREH2.EMPL_RCD
          AND JREH.EFFDT     = JREH2.EFFDT AND JREH2.ACTION      = 'REH')
    AND JREH.EFFDT >=	NVL((SELECT JREHA.EFFDT FROM PS_JOB JREHA WHERE JREHA.EMPLID = JREH.EMPLID AND JREHA.EMPL_RCD  = JREH.EMPL_RCD
    	  AND JREHA.EFFDT = (SELECT MAX(JREHA1.EFFDT) FROM PS_JOB JREHA1 WHERE JREHA.EMPLID = JREHA1.EMPLID
          AND JREHA.EMPL_RCD  = JREHA1.EMPL_RCD AND JREHA1.EFFDT <= $run_dd_mon_yyyy AND JREHA1.ACTION = 'HIR') 
    	  AND JREHA.EFFSEQ = (SELECT MAX(JREHA2.EFFSEQ) FROM PS_JOB JREHA2 WHERE JREHA.EMPLID = JREHA2.EMPLID
          AND JREHA.EMPL_RCD  = JREHA2.EMPL_RCD AND JREHA.EFFDT = JREHA2.EFFDT AND JREHA2.ACTION = 'HIR')), '01-jan-1900')) &E_Rehire_Dt
! gex isdvnpk 03/25/2008 for rehire dt issue in 90     

    Let $Data-Found-Flag = 'Y'
    
    If &E.Hire_Dt > &E_Rehire_Dt  ! &E.Rehire_Dt  ! gex isdvnpk 03/25/2008 for rehire dt issue in 90
       let $Hire_Dt=&E.Hire_Dt
    Else
       Let $Hire_Dt=  &E_Rehire_Dt  ! &E.ReHire_Dt  ! gex isdvnpk 03/25/2008 for rehire dt issue in 90
    End-If
    let $hire_date_yyyymmdd =
        datetostr(strtodate($hire_dt,'DD-MON-YYYY'),'YYYYMMDD')
    #debug7 show '$hire_date_yyyymmdd :- '    $hire_date_yyyymmdd 
        
    Do Get-Std-Hrs	!As of 12/1 to see if transfers since hire date
  
    Do Get-Evaluation-Date
    
    let $eval_date_yyyymmdd =
        datetostr(&EVAL.EFFDT,'YYYYMMDD')
    #debug7 show '$eval_date_yyyymmdd :- '    $eval_date_yyyymmdd 

    !new compare 
    If $eval_date_yyyymmdd < $calc_dec_1_ymd
       If $eval_date_yyyymmdd > $hire_date_yyyymmdd
          Let $hire_date_yyyymmdd = $eval_date_yyyymmdd
       End-If
    End-if
        
    If &EVAL.EFFDT > $Hire_Dt
       let $Eval_Dt = &EVAL.EFFDT
    Else
       Let $Eval_Dt = $Hire_dt
    End-If
    
    !Show 12/1/YYYY if Evaluation date is less than 12/1/YYYY
    let $eval_date_yyyymmdd_prn =
        datetostr(strtodate($Eval_Dt,'DD-MON-YYYY'),'YYYYMMDD')
    If $eval_date_yyyymmdd_prn < $yr_beginning
       let $Eval_Dt = $run_dd_mon_yyyy_begin
    End-If

    !AXL - 09/18/2001 - ***** remove after 4/2001 - Begin
    !if &j.jobcode = '88016'
    !   If $eval_date_yyyymmdd_prn < $calc_ymd
    !      let $Eval_Dt = $Calc_date_dd_mon
    !   end-if				
    !end-if				
    !AXL - 09/18/2001 - ***** remove after 4/2001 - End
    
    #ifdef debug6
    show ''
    show '&j.emplid  :- '   &j.emplid
    show '&j.company :- '   &j.company
    show '&j.std_hrs :- '   &std.std_hours
    show '&J.FULL_PART_TIME  :- '   &J.FULL_PART_TIME 
    #endif
    
    Do Obtain-Hrs
    #debug7 show 'Total accumalated hrs :- ' #tot_hrs_ytd
    Do Calc-Hrs
    Do Print-Detail

From   PS_JOB             J,
       PS_BEN_PROG_PARTIC D,
       ps_personal_data   P,
       PS_EMPLOYMENT      E


WHERE J.EFFDT            =          
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID       = J.EMPLID
       AND    EMPL_RCD    = J.EMPL_RCD
       AND    EFFDT       <= $run_dd_mon_yyyy)
   AND J.EFFSEQ            =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID       = J.EMPLID
       AND    EMPL_RCD    = J.EMPL_RCD
       AND    EFFDT        = J.EFFDT)

AND J.emplid 	= P.emplid 

AND J.EMPLID 	= D.EMPLID
AND J.EMPL_RCD = D.EMPL_RCD

AND D.EMPLID 	= E.EMPLID
AND D.EMPL_RCD = E.EMPL_RCD

AND D.EFFDT = (SELECT MAX(EFFDT) FROM PS_BEN_PROG_PARTIC
        WHERE D.EMPLID         = EMPLID
          AND D.EMPL_RCD      = EMPL_RCD
          AND D.COBRA_EVENT_ID = COBRA_EVENT_ID
          AND EFFDT <= $run_dd_mon_yyyy)  !AXL Show Ben Pgm as of 12/31
         
         
AND ((J.STD_HOURS BETWEEN 10 and 39 and J.FULL_PART_TIME = 'P')
    OR (J.STD_HOURS = 40 and J.FULL_PART_TIME = 'F')   )
 		    
AND J.EMPL_STATUS IN ('A','L','P')
AND J.FLSA_STATUS = 'N'
!AND J.COMPANY <> 'RFI'  AXL***** remove after 4/2001
AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
AND [$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA]
And [$GEXXX916_Include_Jobcode_Criteria]
And [$GEXXX916_Exclude_Jobcode_Criteria_x]
AND J.UNION_CD = 'NON'
!and decode(E.rehire_dt,Null,E.hire_dt,E.rehire_dt) < = $calc_dec_1_dt  gex isdvnpk 03/25/2008 for rehire dt issue in 90
and decode((SELECT
JREHX.EFFDT
FROM PS_JOB JREHX
  WHERE JREHX.EMPLID    = J.EMPLID
    AND JREHX.EMPL_RCD  = J.EMPL_RCD
    AND JREHX.EFFDT =
        (SELECT MAX(JREHX1.EFFDT) FROM PS_JOB JREHX1
        WHERE JREHX.EMPLID    = JREHX1.EMPLID
          AND JREHX.EMPL_RCD  = JREHX1.EMPL_RCD
          AND JREHX1.EFFDT      <= $run_dd_mon_yyyy
          AND JREHX1.ACTION      = 'REH') 
    AND JREHX.EFFSEQ =
        (SELECT MAX(JREHX2.EFFSEQ) FROM PS_JOB JREHX2
        WHERE JREHX.EMPLID    = JREHX2.EMPLID
          AND JREHX.EMPL_RCD  = JREHX2.EMPL_RCD
          AND JREHX.EFFDT     = JREHX2.EFFDT
          AND JREHX2.ACTION      = 'REH')
    AND JREHX.EFFDT >=	NVL((SELECT JREHXA.EFFDT
		FROM PS_JOB JREHXA
  		WHERE JREHXA.EMPLID  = JREHX.EMPLID
    		AND JREHXA.EMPL_RCD  = JREHX.EMPL_RCD
    		AND JREHXA.EFFDT =
        		(SELECT MAX(JREHXA1.EFFDT) FROM PS_JOB JREHXA1
        		WHERE JREHXA.EMPLID    = JREHXA1.EMPLID
          		AND JREHXA.EMPL_RCD  = JREHXA1.EMPL_RCD
          		AND JREHXA1.EFFDT      <= $run_dd_mon_yyyy
          		AND JREHXA1.ACTION      = 'HIR') 
    		AND JREHXA.EFFSEQ =
        		(SELECT MAX(JREHXA2.EFFSEQ) FROM PS_JOB JREHXA2
        		WHERE JREHXA.EMPLID    = JREHXA2.EMPLID
          		AND JREHXA.EMPL_RCD  = JREHXA2.EMPL_RCD
          		AND JREHXA.EFFDT     = JREHXA2.EFFDT
          		AND JREHXA2.ACTION      = 'HIR')), '01-jan-1900')),Null,E.hire_dt,(SELECT
JREHY.EFFDT
FROM PS_JOB JREHY
  WHERE JREHY.EMPLID    = J.EMPLID
    AND JREHY.EMPL_RCD  = J.EMPL_RCD
    AND JREHY.EFFDT =
        (SELECT MAX(JREHY1.EFFDT) FROM PS_JOB JREHY1
        WHERE JREHY.EMPLID    = JREHY1.EMPLID
          AND JREHY.EMPL_RCD  = JREHY1.EMPL_RCD
          AND JREHY1.EFFDT      <= $run_dd_mon_yyyy
          AND JREHY1.ACTION      = 'REH') 
    AND JREHY.EFFSEQ =
        (SELECT MAX(JREHY2.EFFSEQ) FROM PS_JOB JREHY2
        WHERE JREHY.EMPLID    = JREHY2.EMPLID
          AND JREHY.EMPL_RCD  = JREHY2.EMPL_RCD
          AND JREHY.EFFDT     = JREHY2.EFFDT
          AND JREHY2.ACTION      = 'REH')
    AND JREHY.EFFDT >=	NVL((SELECT JREHYA.EFFDT
		FROM PS_JOB JREHYA
  		WHERE JREHYA.EMPLID  = JREHY.EMPLID
    		AND JREHYA.EMPL_RCD  = JREHY.EMPL_RCD
    		AND JREHYA.EFFDT =
        		(SELECT MAX(JREHYA1.EFFDT) FROM PS_JOB JREHYA1
        		WHERE JREHYA.EMPLID    = JREHYA1.EMPLID
          		AND JREHYA.EMPL_RCD  = JREHYA1.EMPL_RCD
          		AND JREHYA1.EFFDT      <= $run_dd_mon_yyyy
          		AND JREHYA1.ACTION      = 'HIR') 
    		AND JREHYA.EFFSEQ =
        		(SELECT MAX(JREHYA2.EFFSEQ) FROM PS_JOB JREHYA2
        		WHERE JREHYA.EMPLID    = JREHYA2.EMPLID
          		AND JREHYA.EMPL_RCD  = JREHYA2.EMPL_RCD
          		AND JREHYA.EFFDT     = JREHYA2.EFFDT
          		AND JREHYA2.ACTION      = 'HIR')), '01-jan-1900'))) < = $calc_dec_1_dt
! gex isdvnpk 03/25/2008 for rehire dt issue in 90     

!and j.emplid in ('182623717','173480403','171681909','167705815','159664653')

Order By J.Deptid, P.Name

End-Select

  If $Data-Found-Flag = 'N'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If
end-procedure

!***********************************************************************
Begin-Procedure Get-Std-Hrs 
!***********************************************************************
#debug9 Show 'Get-Std-Hrs'

Begin-Select

STD.STD_HOURS        

    Let $Hrs-Found-Flag = 'Y'

    #debug7 show &j.emplid ' STD.STD_HOURS: ' &STD.STD_HOURS
    
From   PS_JOB             STD
      
WHERE STD.EMPLID = 	&J.EMPLID
  AND STD.EMPL_RCD = 	&J.EMPL_RCD
  
  AND STD.EFFDT             =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID       = STD.EMPLID
       AND    EMPL_RCD    = STD.EMPL_RCD
       AND    EFFDT       < $calc_dec_1_dt)  !Must be less than 12/1
   AND STD.EFFSEQ            =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID       = STD.EMPLID
       AND    EMPL_RCD    = STD.EMPL_RCD
       AND    EFFDT        = STD.EFFDT)

End-Select

End-Procedure

!********************************************************************
begin-procedure Get-Evaluation-Date
!********************************************************************   
#debug9 show 'Get-Evaluation-Date'

begin-select
EVAL.EFFDT

  #debug7 show &j.emplid ' eval date: ' &EVAL.EFFDT

FROM PS_JOB EVAL

WHERE   EVAL.emplid	 = &j.emplid
    AND EVAL.empl_rcd   = &j.empl_rcd

    AND EVAL.EFFDT =
        (SELECT MIN(EFFDT) FROM PS_JOB
        WHERE EVAL.EMPLID = EMPLID
          AND EVAL.EMPL_RCD = EMPL_RCD
          AND STD_HOURS = &STD.STD_HOURS
          AND EFFDT >
			(Select Max(effdt)
                         From   ps_job
                         Where  emplid     = EVAL.emplid
                         And    empl_rcd  = EVAL.empl_rcd
                         And    effdt     <= $calc_dec_1_dt
                         And    std_hours <> &STD.STD_HOURS) )
    AND EVAL.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE EVAL.EMPLID = EMPLID
          AND EVAL.EMPL_RCD = EMPL_RCD
          AND EVAL.EFFDT = EFFDT) 

end-select

end-procedure

!***********************************************************************
Begin-Procedure Obtain-Hrs 
!***********************************************************************
#debug9 Show 'Obtain-Hrs'
 
 Let #tot_hrs_ytd = 0
 
Begin-Select
EB.EMPLID
EB.COMPANY  
EB.HRS_YTD  

  Do Check-Ben-Pgm-Ok	!AXL Check if hrs came from qualifying Ben_Pgm
  if $Ben_Pgm_Ok = 'Y'
     Let #tot_hrs_ytd = #tot_hrs_ytd + &eb.hrs_ytd 
  end-if
  
  !show 'emplid ' &eb.emplid ' cmpy ' &EB.COMPANY  ' hrs ' #tot_hrs_ytd ' flag ' $Ben_Pgm_Ok

FROM PS_EARNINGS_BAL  EB

WHERE  EB.EMPLID     	= &j.emplid      
!AND    EB.COMPANY 	= &j.company
!PSR 08/27/2002 Begin
!AND    EB.EMPL_RCD      = &J.EMPL_RCD	AXL 3/11/2003
!PSR 08/27/2002 End
AND    EB.BALANCE_ID    = 'CY'
AND    EB.BALANCE_YEAR  = #balance_year
AND    EB.SPCL_BALANCE  = 'N'
AND    EB.ERNCD         = '501'
AND    EB.BALANCE_PERIOD = 
      (SELECT MAX(EB1.BALANCE_PERIOD)
       FROM   PS_EARNINGS_BAL EB1
       WHERE  EB1.EMPLID        = EB.EmplID
         AND  EB1.COMPANY       = EB.Company
         !PSR 08/27/2002 Begin
         !AND  EB1.EMPL_RCD      = EB.EMPL_RCD	AXL 3/11/2003
         !PSR 08/27/2002 Begin
         AND  EB1.ERNCD         = EB.ERNCD
         AND  EB1.SPCL_BALANCE  = EB.SPCL_BALANCE
         AND  EB1.BALANCE_ID    = EB.BALANCE_ID
         AND  EB1.BALANCE_YEAR  = EB.BALANCE_YEAR
         AND  EB1.BALANCE_PERIOD <= 12)
      
End-Select

End-Procedure

!***********************************************************************
Begin-Procedure Check-Ben-Pgm-Ok
!***********************************************************************
#debug9 Show 'Check-Ben-Pgm-Ok'
  
   Let $Ben_Pgm_Ok = 'N'
  
Begin-Select
'X'

    Let $Ben_Pgm_Ok = 'Y'
    
From   PS_JOB             J2,
       PS_BEN_PROG_PARTIC D2
        
WHERE  J2.Emplid  = &EB.Emplid
   
   AND J2.Emplid  = D2.Emplid
   AND J2.EMPL_RCD = D2.Empl_Rcd
            
   AND J2.EFFDT             =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID       = J2.EMPLID
       AND    EMPL_RCD    = J2.EMPL_RCD
       AND    Company 	   = &EB.Company    !AXL Extra join condition to match history row
       AND    EFFDT       <= $run_dd_mon_yyyy)
   AND J2.EFFSEQ            =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID       = J2.EMPLID
       AND    EMPL_RCD    = J2.EMPL_RCD
       AND    EFFDT        = J2.EFFDT)

    AND D2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_BEN_PROG_PARTIC
        WHERE D2.EMPLID         = EMPLID
          AND D2.EMPL_RCD      = EMPL_RCD
          AND D2.COBRA_EVENT_ID = COBRA_EVENT_ID
          AND EFFDT <= j2.effdt)
 
AND D2.BENEFIT_PROGRAM IN (select distinct d.benefit_program from ps_ben_defn_pgm d
       where [$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA])

End-Select

End-procedure

!***********************************************************************
Begin-Procedure Calc-Hrs
!***********************************************************************
#debug9 Show 'Calc-Hrs'
	
	If &std.std_hours = 40
	
	  If $hire_date_yyyymmdd < $calc_ymd		!07/01/YYYY
	     let #hrs_available = 40
	  else
	     let #hrs_available = 16
	     if $hire_date_yyyymmd >= $calc_dec_1_ymd  !12/1/YYYY
	        let #hrs_available = 0
	     end-if
	  End-if

	Else
	
	  If (&std.std_hours >= 30 and &std.std_hours < 40)
	     if $hire_date_yyyymmdd < $calc_ymd		!07/01/YYYY
	        let #hrs_available = 30
	     else
	        let #hrs_available = 12
	        if $hire_date_yyyymmd >= $calc_dec_1_ymd  !12/1/YYYY
	           let #hrs_available = 0
	        end-if
	     end-if
	  
	  Else
	  
	    If (&std.std_hours >= 18 and &std.std_hours < 29) 
               if $hire_date_yyyymmdd < $calc_ymd	    !07/01/YYYY
                  !AXL - 09/18/2001 - ***** remove after 4/2001 - Begin
                  !if &j.jobcode = '88016'	
                  !   let #hrs_available = 8
                  !else			
	          let #hrs_available = 20
	          !end-if			
                  !AXL - 09/18/2001 - ***** remove after 4/2001 - End
	       else
	          let #hrs_available = 8
	          if $hire_date_yyyymmd >= $calc_dec_1_ymd  !12/1/YYYY
	             let #hrs_available = 0
	          end-if
	       end-if	  
            
            Else
               
              if (&std.std_hours >= 10 and &std.std_hours < 17)	  
	          if $hire_date_yyyymmdd < $calc_ymd	    !07/01/YYYY
                     !AXL - 09/18/2001 - ***** remove after 4/2001 - Begin
	             !if &j.jobcode = '88016'	
                     !   let #hrs_available = 4	
                     !else			
	             let #hrs_available = 10
	             !end-if			
                     !AXL - 09/18/2001 - ***** remove after 4/2001 - End
	          else
	             let #hrs_available = 4
	             if $hire_date_yyyymmd >= $calc_dec_1_ymd  !12/1/YYYY
	                let #hrs_available = 0
	             end-if
	          end-if
	       	
	      end-if
	      
	    End-if 	
  	  End-if
        End-if
        
        Let #hrs_remaining = #hrs_available - #tot_hrs_ytd
        
End-Procedure

!***********************************************************************
Begin-Procedure Print-Detail
!***********************************************************************
#debug9 Show 'Print-Detail'

  Print &j.deptid               (+1,{#column1})
  Print &p.name                 (,{#column2})
  Print &j.emplid               (,{#column3})
  Print &j.jobcode              (,{#column4})
  Print $hire_dt                (,{#column5})
  Print $eval_dt                (,{#column6})
  Print &j.full_part_time       (,{#column7})
  Print &std.std_hours          (,{#column8})
  Print &j.hourly_rt            (,{#column9})   Edit 999.99 
  Print #HRS_AVAILABLE          (,{#column10})  Edit 999,999.99
  Print #TOT_HRS_YTD            (,{#column11})  Edit 999,999.99
  Print #HRS_REMAINING          (,{#column12})  Edit 999,999.99 
  
End-Procedure

!***********************************************************************
Begin-Procedure Deptid-Break
!***********************************************************************
#debug9 Show 'Deptid-Break'
  New-Page
End-Procedure

!***********************************************************************
Begin-Procedure GEXXX916-Select-Jobcode-Parameters_x
!***********************************************************************

  Let $OprID               = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID         = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_JOBCODE_ROWS = 0
  Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = ''
  Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = 'NONE'

!Begin-Select   
Begin-Select loops = 1   !MVA 02/15/2012

GEX_RC_JOBCODE2.JOBCODE

  Add 1 To #GEX_RC_JOBCODE_ROWS

  !MVA 02/15/2012
  !If #GEX_RC_JOBCODE_ROWS = 1
  !  Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = '(' || $GEXXX916_Jobcode_Alias || ' Not In (''' || &GEX_RC_JOBCODE2.JOBCODE || ''''
  !Else
  !  Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x || ',''' || &GEX_RC_JOBCODE2.JOBCODE  || ''''
  !End-If

From  PS_GEX_RC_JOBCODE GEX_RC_JOBCODE2

Where GEX_RC_JOBCODE2.OPRID                = [$OprID]
And   GEX_RC_JOBCODE2.RUN_CNTL_ID          = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_JOBCODE2.JOBCODE, ' ') != ' '

End-Select

  If #GEX_RC_JOBCODE_ROWS = 0
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = $GEXXX916_Jobcode_Alias || ' = ' || $GEXXX916_Jobcode_Alias
  Else
! GEXPY_848_ITG119621 2012-02-13  ISDVMZA  --  Begin
    !Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x || '))'
    !Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = 'NOT EXISTS (SELECT 1 FROM PS_GEX_RC_JOBCODE RC WHERE RC.OPRID = '|| $OprID ||
                                               ' AND RC.RUN_CNTL_ID = ' || $Run_Cntl_ID ||' AND RC.JOBCODE = '||$GEXXX916_Jobcode_Alias || ')'
    Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = 'NOT EXISTS FROM PS_GEX_RC_JOBCODE'
! GEXPY_848_ITG119621 2012-02-13  ISDVMZA  --  End
  End-If

End-Procedure

!***********************************************************************
Begin-Procedure Finalization
!***********************************************************************
#debug9 Show 'Finalization'
  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
  show ' '

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc
  Show 'Successful end of report'
  
End-Procedure

!***********************************************************************

#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx911.sqc'  !Get benefit_program multiple row table
#include 'gexxx916.sqc'  !Get jobcode multiple row table
#include 'gexxx920.sqc'  !Get ben single row run control
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'reset.sqc'     !Reset printer procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#include 'askaod.sqc'    !Ask-As-Of-Date procedure
!***********************************************************************
