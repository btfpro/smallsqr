!***********************************************************************
!  GEXBN015:  BENEFIT PLAN PREMIUM BILLINGS                            *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXBN015:             BENEFIT PLAN PREMIUM BILLINGS                  *
!                                                                      *        
! Narrative:            This report lists employees who have           *
!                       deductions based on the benefit plan           *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           * 
!                                                                      *  
! SQL Tables:		gex_dept_tbl                                   *
!                       pay_line                                       *
!                       pay_check                                      *
!                       pay_deduction                                  *
!                       pay_cal_bal_id                                 *
!                       personal_data                                  *
!                       job                                            *
!                       employment                                     *
!                                                                      *
! Written by:		Joe Besagar 07/13/1998                         *       
!                                                                      *
! Normally Run:		Monthly                                        *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Plan Type                                    *
!                         Benefit Plan                                 *
!                         As Of Date                                   *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!       INITIALS        DATE            DESCRIPTION OF THE CHANGE      *
!***********************************************************************
!       JNB             07/13/98        Initial Creation               *
!       JDH             02/10/99        Added plan type description.   *
!                                       Added job effective date.      *
!                                       Removed deduction code.        *
!       JDH             02/26/99        Pull pay_check rows by the     *
!                                        check date of the pay end     *
!                                        rather than the check date of *
!                                        the pay_check row.            *
!       CWB             09/22/1999      Added logic to use the last    *
!                                        confirmed pay end date of the *
!                                        month being run for, rather   * 
!                                        than the month in which the   *            
!                                        job is being run. Added an    *
!                                        include for gexxx921 to get   * 
!                                        the correct as of date from   *
!                                        GEX_RC_HR.                    * 
!       CWB             09/07/2001       Comment out the call to the   *
!                                        optimizer procedure to improve*
!                                        performance by not using RULE.*    
!                                                                      *  
!       GBD             07/15/2002       Added Fieldvalue to effective *
!                                        dated selection of the        *
!                                        Load-Lookup procedure.        *
! ISDVNPK 08/23/2007 Changed XLATTABLE to PSXLATITEM as part of 9.0 upgrade  
! GEX_SEC_REENG 2015-06-24 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization


#define #column1     1
#define #column2    13
#define #column3    26
#define #column4    42
#define #column5    77
#define #column6    93
#define #column7   108 
#define #column8   121
#define #column9   130
#define #column10  144
#define #column11  163


begin-report
#debug9 Show 'begin-report'

! CWB 09/07/2001 BEGIN
!  do Set-Optimizer-Goal
! CWB 09/07/2001 END

  do Init-DateTime           !datetime.sqc
  do Init-Number             !number.sqc
  do Get-Current-DateTime    !curdttim.sqc
  do P000-Init-Report
  do P200-Process-Main
  do Reset                   !reset.sqc
  do Stdapi-Term             !stdapi.sqc
  do Get-Current-DateTime
  Let $ReportEnded = $ReportDate || ' ' || $ReportTime
  Show 'Report Ended: ' $ReportEnded
  Show 'Successful end of report'
end-report


begin-heading 7
#debug9 Show 'begin-heading'

  #Include 'stdhdg01.sqc'

  Lookup PlanXlatLookup $Plan_Type $plantypedescr

  Print 'Plan Type:'      (3,1)
  Print $Plan_Type        (,13)
  Print $plantypedescr    (,+2)

  Print 'Ben Plan:'       (4,1)
  Print $Benefit_Plan     (,13)

  Print $Reporting_Period (3,) Center 

  PRINT 'COMPANY'         (+3,{#column1})
  PRINT 'PAYGROUP'        (,{#column2})
  PRINT 'EMPLID'          (,{#column3})
  PRINT 'NAME'            (,{#column4})
  PRINT 'EMPL STATUS'     (,{#column5}) 
  PRINT 'REG TEMP'        (,{#column6})
  PRINT 'EFF DATE'        (,{#column7})
  PRINT 'DEPT'            (,{#column8})
  PRINT 'SERV DATE'       (,{#column9})
  PRINT 'LAST DATE WRKD'  (,{#column10}) 
  PRINT '  MTD AMOUNT'    (,{#column11})

  PRINT '-'        (+1,{#column1},7)    Fill
  PRINT '-'        (,{#column2},8)      Fill
  PRINT '-'        (,{#column3},11)     Fill
  PRINT '-'        (,{#column4},30)     Fill
  PRINT '-'        (,{#column5},11)     Fill
  PRINT '-'        (,{#column6},10)     Fill
  PRINT '-'        (,{#column7},8)      Fill
  PRINT '-'        (,{#column8},4)      Fill
  PRINT '-'        (,{#column9},9)      Fill
  PRINT '-'        (,{#column10},14)    Fill
  PRINT '-'        (,{#column11},12)    Fill
end-heading

! ISDVNPK 08/23/2007
!Begin-Procedure Set-Optimizer-Goal
!  Begin-SQL
!    Alter Session Set OPTIMIZER_GOAL=RULE;
!  End-SQL
!End-Procedure


Begin-Procedure Get-Last-Confirmed-Pay
#debug9 Show 'Get-Last-Confirmed-Pay'

Begin-Select Loops=1
pay_end_dt
To_Number(To_Char(pay_end_dt,'MM'))          &balance_period
To_Number(To_Char(pay_end_dt,'YYYY'))        &balance_year
To_Char(pay_end_dt,'fmMonth YYYY')           &period
Last_Day(pay_end_dt)                         &current_month_end

  Let $AsOfDate         = &pay_end_dt
  Let $pay_end_dt       = &pay_end_dt
  Let #balance_year     = &balance_year
  Let #balance_period   = &balance_period
  Let $Reporting_Period = &period

  Let $current_month_begin = '01-'||Substr($pay_end_dt,4,8)
  Let $current_month_end   = &current_month_end

  let #balance_qtr = #balance_period
  let #balance_qtr = ((#balance_qtr - 1)/ 3) + 1
  do Format-Number(#balance_qtr, $balance_qtr, '9.99') !avoid rounding the integer portion
  move $balance_qtr to $balance_qtr x     !save the integer portion
  let #balance_qtr = $balance_qtr

  Show 'Report will contain balances for the month of ' $Reporting_Period
  Show 'Last confirmed pay end date:  ' $pay_end_dt

  If Rtrim($pay_end_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  End-If

From   ps_pay_calendar

Where  pay_end_dt         =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  pay_end_dt <= $X000_WHERE_SELECT_ASOFDATE
       And    pay_confirm_run = 'Y')

And    pay_confirm_run = 'Y'
End-Select
End-Procedure


begin-procedure P130-Get-Xlat-Lookup
#debug9 Show 'P130-Get-Xlat-Lookup'

  Let $Where = '     x.fieldname   = ''REG_TEMP''' ||
               ' And x.eff_status  = ''A''' ||
!               ' And x.language_cd = ''ENG''' ||
               ' And x.effdt       = (Select Max(effdt)' ||
               '                      From   PSxlatitem x1' ||
               '                      Where  x1.fieldname    = x.fieldname' ||
!GBD 07/15/2002 Begin
!               '                      And    x1.language_cd  = ''ENG''' ||
!               '                      And    x1.language_cd  = x.language_cd' ||
               '                      And    x1.fieldvalue   = x.fieldvalue' ||
!GBD 07/15/2002 End
               '                      And    x1.effdt       <= ''' || $pay_end_dt || '''' ||
               '                      And    x1.eff_status   = ''A'')'

  Load-Lookup
    Name=XlatLookup
    Rows=10
    Table='PSXLATITEM X'  ! ISDVNPK 08/23/2007 Changed XLATTABLE to PSXLATITEM as part of 9.0 upgrade 
    Key='X.FIELDVALUE'
    Return_Value='X.XLATSHORTNAME'
    Where=$Where
    Quiet
End-Procedure


begin-procedure P170-Get-Xlat-Lookup
#debug9 Show 'P170-Get-Xlat-Lookup'

  Let $Where = '     x.fieldname   = ''PLAN_TYPE''' ||
	       ' And x.eff_status  = ''A''' ||
!	       ' And x.language_cd = ''ENG''' ||
	       ' And x.effdt       = (Select Max(effdt)' ||
	       '                      From   PSxlatitem x1' ||
	       '                      Where  x1.fieldname    = x.fieldname' ||
!GBD 07/15/2002 Begin
! 	        '                      And    x1.language_cd  = ''ENG''' ||
!	       '                      And    x1.language_cd  = x.language_cd' ||
	       '                      And    x1.fieldvalue   = x.fieldvalue' ||
!GBD 07/15/2002 End
	       '                      And    x1.effdt       <= ''' || $pay_end_dt || '''' ||
	       '                      And    x1.eff_status   = ''A'')'

  Load-Lookup
    Name=PlanXlatLookup
    Rows=50
    Table='PSXLATITEM X'  ! ISDVNPK 08/23/2007 Changed XLATTABLE to PSXLATITEM as part of 9.0 upgrade 
    Key='X.FIELDVALUE'
    Return_Value='X.XLATLONGNAME'
    Where=$Where
    Quiet
End-Procedure


begin-procedure P000-Init-Report
#debug9 Show 'P000-Init-Report'

  move 'GEXBN015'         to $ReportID
  move 'BENEFIT PLAN PREMIUM BILLINGS' to $ReportTitle

  do Stdapi-Init

  Show '$ReportID:    ' $ReportID
  Show '$ReportTitle: ' $ReportTitle
  Let $ReportBegan = $ReportDate || ' ' || $ReportTime
  Show 'Report Began: ' $ReportBegan
!  Show '$ReportDate='  $ReportDate
!  Show '$ReportTime='  $ReportTime

  Let $GEXXX912_Plan_Type_Alias       = 'PD.PLAN_TYPE'
  Let $GEXXX912_Benefit_Plan_Alias    = 'PD.BENEFIT_PLAN'

  if $prcs_process_instance = ''
  Display 'Enter Plan Type or leave blank to exit.'
  While 1=1
    Input $In-Plan-Type Maxlen=2 'Plan Type'
    Uppercase $In-Plan-Type
    If Rtrim($In-Plan-Type, ' ') = ''
      Break
    Else
      Input $In-Benefit-Plan Maxlen=6 'Benefit Plan'
      Uppercase $In-Benefit-Plan
      If Rtrim($In-Benefit-Plan, ' ') = ''
        Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || $In-Plan-Type || ''')'
      Else
        Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || $In-Plan-Type || ''' And ' || $GEXXX912_Benefit_Plan_Alias || ' = '''  || $In-Benefit-Plan || ''')'
      End-If
      Add 1 To #GEX_RC_BEN_PLAN_ROWS
      If #GEX_RC_BEN_PLAN_ROWS = 1
        Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While

  If #GEX_RC_BEN_PLAN_ROWS = 0
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA  = '1=1'
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA  = 'ALL'
  Else
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA  = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ')'
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
  End-If

    do Ask-As-Of-Date

    let $X000_WHERE_SELECT_ASOFDATE                 = $AsOfDate

!CWB 09/22/1999 Begin
    do test-run-date 
!CWB 09/22/1999 End

  else
         
    Do GEXXX912-Select-BENEFIT-PLAN-Parameters

!CWB 09/22/1999 Begin
    Do GEXRCHR1-SELECT-PARAMETERS
    Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_HR.ASOfDATE
!    Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.AsOfDate
!    If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
    If Rtrim ($GEX_RC_HR.ASOfDATE, ' ') = ''
!CWB 09/22/1999 End

      Let $X000_WHERE_SELECT_ASOFDATE = $AsOfToday
    End-If

!CWB 09/22/1999 Begin
    do test-run-date 
!CWB 09/22/1999 End

  End-If

  Do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')
  Let $X000_ORDER_BY = 'Plan Type, Benefit Plan, Employee Status, Name'

  Show '$X000_WHERE_SELECT_ASOFDATE ='   $X000_WHERE_SELECT_ASOFDATE
  show '$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA          =' $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA

  Do Get-Last-Confirmed-Pay
  Do P050-Print-Cover-Page
  Do P130-Get-Xlat-Lookup
  Do P170-Get-Xlat-Lookup


  Do Get-Calendar-Year-Id    !getbalid.sqc
end-procedure

!CWB 09/22/1999 Begin
begin-procedure test-run-date
  let #day = to_number(substr($X000_WHERE_SELECT_ASOFDATE 1 2))  
  if ((#day >= 5) and (#day <= 10)) 
      do Convert-to-dtu-date($X000_WHERE_SELECT_ASOFDATE,$today_dtu)
      let #dtu_days = #day 
      do dtu-subtract-days($today_dtu, #dtu_days, $dtu_date_out) 
      do Convert-from-dtu-date($dtu_date_out,$prev_pay_end_dt)
    Let $X000_WHERE_SELECT_ASOFDATE = $prev_pay_end_dt
  end-if
end-procedure
!CWB 09/22/1999 End

begin-procedure P050-Print-Cover-Page
#debug9 Show 'P050-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OPRID          ='                                  (+2,5)
  Print $Prcs_OPRID                                               (0,+2)
  Print '$PRCS_RUN_CNTL_ID    ='                                  (+1,5)
  Print $PRCS_RUN_CNTL_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)

  Print 'As Of Date :'                                        (+2,5)
  Print $X000_REPORT_HEADING_ASOFDATE                         (0,+2)

  print '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA     ='   (+2,5)
  print $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA 	    (0,+2)
  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $X000_ORDER_BY                                        (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
  Let #PAGE-COUNT = 1
End-Procedure


begin-procedure P200-Process-Main
#debug9 Show 'P200-Process-Main'

  Let $Data-Found-Flag = 'N'

begin-SELECT
PD.PLAN_TYPE       ()     ON-BREAK
                          LEVEL=1
                          PRINT=NEVER
                          SAVE=$PREV_PLAN_TYPE

PD.BENEFIT_PLAN    ()     ON-BREAK
                          LEVEL=2
                          PRINT=NEVER
                          SAVE=$PREV_BEN_PLAN
                          AFTER=P200-BEN-PLAN-CHANGE 

PL.COMPANY
PL.PAYGROUP
J.EMPLID
J.EFFDT
PR.NAME
J.EMPL_STATUS
J.REG_TEMP
EMP.SERVICE_DT
J.LAST_DATE_WORKED
PL.DEPTID
SUM(PD.DED_CUR) &employer_Contribution

  Let $Data-Found-Flag = 'Y'

  Let $Benefit_Plan = &pd.benefit_plan
  Let $Plan_Type    = &pd.plan_type

  Add &employer_Contribution To #ben_plan_grs_mtd

  Add 1 To #emp_counter_bp

  Do Print-Record

FROM   PS_GEX_DEPT_TBL     GDT,
       PS_PERSONAL_DATA    PR,
       PS_EMPLOYMENT       EMP,
       PS_JOB              J,
       ps_pay_cal_bal_id   pcbi,
       ps_pay_line         pl,
       ps_pay_check        pc,
       ps_pay_deduction    pd

WHERE  J.EFFDT             =
      (SELECT MAX(EFFDT)
         FROM PS_JOB
        WHERE EMPLID       = J.EMPLID
          AND EMPL_RCD     = J.EMPL_RCD
          AND EFFDT       <= $pay_end_dt)

AND    J.EFFSEQ            =
      (SELECT MAX(EFFSEQ)
         FROM PS_JOB
        WHERE EMPLID       = J.EMPLID
          AND EMPL_RCD     = J.EMPL_RCD
          AND EFFDT        = J.EFFDT)

AND    J.EMPLID            = PR.EMPLID 

AND    J.EMPLID            = EMP.EMPLID
AND    J.EMPL_RCD          = EMP.EMPL_RCD

And    pcbi.company        = pc.company
And    pcbi.paygroup       = pc.paygroup
And    pcbi.balance_id     = 'CY'
And    pcbi.balance_year   = #balance_year
And    pcbi.balance_period = #balance_period

And    pc.pay_end_dt       = pcbi.pay_end_dt

And    pc.emplid           = j.emplid
And    pc.empl_rcd         = j.empl_rcd 

And    pd.company          = pc.company
And    pd.paygroup         = pc.paygroup
And    pd.pay_end_dt       = pc.pay_end_dt
And    pd.off_cycle        = pc.off_cycle
And    pd.page_num         = pc.page_num
And    pd.line_num         = pc.line_num
And    pd.sepchk           = pc.sepchk

And    pl.company          = pc.company
And    pl.paygroup         = pc.paygroup
And    pl.pay_end_dt       = pc.pay_end_dt
And    pl.off_cycle        = pc.off_cycle
And    pl.page_num         = pc.page_num
And    pl.line_num         = pc.line_num

And    j.deptid            = gdt.deptid

And    gdt.effdt           =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid       = gdt.deptid
       And    effdt       <= $pay_end_dt)

And    gdt.sequence_number =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid       = gdt.deptid
       And    effdt        = gdt.effdt)

AND   [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]

GROUP BY PD.PLAN_TYPE,
       PD.BENEFIT_PLAN,
       PL.COMPANY,
       PL.PAYGROUP,
       J.EMPLID,
       J.EFFDT,
       PR.NAME,
       J.EMPL_STATUS,
       J.REG_TEMP,
       EMP.SERVICE_DT,
       J.LAST_DATE_WORKED,
       PL.DEPTID

ORDER BY PD.PLAN_TYPE, PD.BENEFIT_PLAN, J.EMPL_STATUS, PR.NAME
end-SELECT

  If $Data-Found-Flag = 'N'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Print 'Report Totals'     (+2,8)
  Print 'Total Emps'        (,30)
  Print #rpt_counter_bp     (,40)            edit 999,999
  Print #rpt_grs_mtd        (,{#column11})   edit 9,999,999.99
end-procedure


begin-procedure Print-Record
#debug9 Show 'Print-Record'
  Lookup XlatLookup &J.REG_TEMP $reg_temp

  Do Format-DateTime(&J.EFFDT, $effdt, {DEFDATE}, '', '')
  Do Format-DateTime(&EMP.SERVICE_DT, $svc_dt, {DEFDATE}, '', '')
  Do Format-DateTime(&J.LAST_DATE_WORKED, $last_date_worked, {DEFDATE}, '', '')

  Print &PL.COMPANY             (+1,{#column1})
  Print &PL.PAYGROUP            (,{#column2})
  Print &J.EMPLID               (,{#column3})   !edit xxx-xx-xxxx  ! GEX_SEC_REENG 2015-06-24 Vahini Katta
  Print &PR.NAME                (,{#column4},30)
  Print &J.EMPL_STATUS          (,{#column5}) 
  print $reg_temp               (,{#column6})
  print $effdt                  (,{#column7})
  Print &PL.DEPTID              (,{#column8})
  Print $svc_dt                 (,{#column9})
  Print $last_date_worked       (,{#column10})
  Print &employer_contribution  (,{#column11})  edit 9,999,999.99
end-procedure



!*********************************************************************
begin-procedure P200-BEN-PLAN-CHANGE
!*********************************************************************

  Print 'Benefit Plan Totals'   (+2,8)
  Print 'Total Emps'            (,30)
  Print #emp_counter_bp         (,40)   edit 999,999
  Print #ben_plan_grs_mtd       (,{#column11})  edit 9,999,999.99 

 
  Add #ben_plan_grs_mtd To #rpt_grs_mtd 
  Add #emp_counter_bp To #rpt_counter_bp 

  Let #ben_plan_grs_mtd = 0
  Let #emp_counter_bp   = 0
  new-page
end-procedure


#include 'askaod.sqc'
#include 'gexxx912.sqc'  !Get benefit_plan multiple row run control

!CWB 09/22/1999 Begin
#include 'gexxx921.sqc'  !get gex_rc_hr.asofdate 
!CWB 09/22/1999 End

#Include 'getbalid.sqc'  !Get Calendar Year ID
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date math
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
