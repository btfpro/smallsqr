!********************************************************************** 
! SQR Name:           adpstdnm.sqc  
! SQR Descr:          ADP Tax Service Transporter 
! Created by:         drmonroe 
! Create date:        03/04/2010 
! Last modified by:   drmonroe
! Last modified date: 03/04/2010 
!*********************************************************************** 

#define        PROGRAM_VERSION_ADPSTDNM     ADPSTDNM.SQC  - Aug 11, 2009
#define        adptaxfl_release             2008.02.16.1         ! yyyy.mm.dd.n

! -------------------------------------------------------------------------------------------------------
! Dan Monroe  ADP FACS
! adpstdnm.sqc,  implements all the current folder/name periodic and quarterly extract file/folder naming custom logic
!                included by pbzper.sqr, pbzqtr.sqr
!                This also implements the standard naming conventions.. all new custom logic should go into the adpcusnm.sqc
!  Feb 02, 2009  change Client_id's to Site_id's
!                need alcoa, convergys, KCTCS, progress energy site_id's
!                *** have NEW custom code for naming/folders added to proadp.sqc to remove it from the 
!                    mainstream, and keep this adptaxfl.sqc from being included at all
!  Apr 07, 2009  fix filename_prefix, filename_extension for standar naming
!  Apr 30, 2009  SITE_ID_OVERRIDE_IN_FILENAME
!  Aug 03, 2009  MDT1 - 23-Jul-2009 - B.Lind
!		- Added statements to set $FTP-Instruction-Set to 'P' for Production and 'T' for non-Production
!		  This enables to easily send test files to the non-production WebMethods environment.  This is
!		  in 2 separate locations. One is used by the periodic process and the other by the quarterly process.
!  Aug 11, 2009  CIB1 customizations added
!  Sep 08, 2009  CIB1 fix
! -------------------------------------------------------------------------------------------------------


#ifdef ADP_TAX_PERIODIC

!********************************************************************** !
!---------------------------------------------------------------------- !
! Procedure: Create-Interface-File                                      !
! Descr:     Create the ADP Interface file for Periodic filings         !
!---------------------------------------------------------------------- !
begin-procedure Create-Interface-File

    show 'Creating Interface File, using adpstdnm.sqc version = {PROGRAM_VERSION_ADPSTDNM}'
    let  $NewReportName = $sqr-report

! ---------------------------------------------------------------------
!                Test file naming conventions
!  9/13/07       ----------------------------
!                   c.site.tax.test.yyyymmddhhmiss.prl
!                   c.site.tax.test.yyyymmddhhmiss.qtrly 
!
!                Production file name conventions: 
!                ---------------------------------
!                   p.site.tax.yyyymmddhhmiss.prl
!                   p.site.tax.yyyymmddhhmiss.qtrly 
! ---------------------------------------------------------------------

  #ifdef STANDARD_EXTRACT_NAME_CONVENTION
    show 'STANDARD_EXTRACT_NAME_CONVENTION enabled'
  #endif

  !5/14/08 new defaults
  !--------------------
  #ifdef OUTPUT_FOLDER
    let $Folder = '{OUTPUT_FOLDER}'

    #ifdef PERIODIC_EXTRACT
      let $Filename = $Folder || '{PERIODIC_EXTRACT}'
    #else
      let $Filename = $Folder || 'periodic.dat'
    #endif

  #else
    #ifdef PERIODIC_EXTRACT
      let $Filename = $Folder || '{PERIODIC_EXTRACT}'
    #else
      let $Filename = $Folder || 'periodic.dat'
    #endif

  #endif
  
  show 'Create-Interface-File, Default Folder: ' $Folder ', Default Filename: ' $Filename
  !---------------------------------------------------------------------------------------

  #ifdef STANDARD_TTS_NAMING   ! TEST or PROD or name

     #ifdef OUTPUT_FOLDER
       let $Folder = '{OUTPUT_FOLDER}'
     #else
       let $Folder = '{FILEPREFIX}'
     #endif

     !Custom Folder specification goes here
     !--------------------------------------
     ! "Client specific folder code"...
     !--------------------------------------

    
     #if {SITE_ID} = 'LLN1'
       do get_database_name-lln1
       let $database_name = substr($database_name,1,5)
       If $SQR-PLATFORM = 'UNIX'
          let $Folder = getenv('PS_DAT')  || '/'
       else
          let $Folder = '{FILEPREFIX}'
       end-if
       show 'LLN1: $SQR-Platform = ' $SQR-Platform ', Folder = ' $Folder ', Database_name = ' $database_name
     #endif
     
  
     #if {SITE_ID} = 'MCK1'
       do Get-Path
       let $Folder = $pathint
       !let #flen = length($Folder) - 4
       !let $RepFolder = substr($Folder,1,#flen) || 'rpt\'
       !let $Repfilename = $RepFolder || 'pbzperau.lis'
       !new-report $Repfilename
     #endif
   
     #if {SITE_ID} = 'ACL1'
      do Get-DB-Name-ACL1
      let $database_name = $prcs_dbname
      let $xl_process_name = 'ADPTAX'
      let $xl_field_name   = 'GENERAL'
      let $xl_field_value  = 'FILE'
      let $AMC_INPUT1      = 'OUTPUT_FILE'
      do XLAT-Translate-To-External-Values
      let $folder	= 'D:\PSData\' ||  rtrim($prcs_dbname,' ')  || '\' || rtrim($AMC_OUTPUT1,' ')
      show 'ACL1 Folder: ' $Folder
     #endif


     #if {SITE_ID} = 'SWF1'
      #if {PeopleSoft_Version} = '8'
       let $Folder  =  getenv('CAGOUTPUTPRE')    !8.0
      #else
       !let  $Folder = '{FILEPREFIX}'             !8.9
       let $Folder = getenv('PS_HOME') || '/files/outbound/' !8.9   bpb01
      #endif
     #endif

     #if {SITE_ID} = 'PMI1'
       Get-DBName-PMI
       let $folder = '/interface/infpmipj/' || $dbname || '/outgoing/adp/'
     #endif

     #if {SITE_ID} = 'BID1'
       do get-dbname-BID1
     #endif
     
     !/data/7bn/hr88prd/output/, or /data/7bn/hr88tst3/output/
     #if {SITE_ID} = 'NXT1'
        do get-tts-standard-database-name
        show 'NXT1: $Database_name = ' $Database_name
        let $Database_name_lower = lower($Database_name)
        let $folder = '/data/7bn/' || $Database_name_lower || '/output/'
     #endif
     
     
     #if {SITE_ID} = 'LFG1'
       do get-db-name($dbname-out)
       let  $DataBase_Name = $dbname-out
       Do get-file-path-output ($dir)
       let $Folder = $dir|| 'Outbound\lxpyi014\'
     #endif

     #if {SITE_ID} = 'SGB1'
       do get-database-name-SGB1
       let $folder = $adp_tax_out
     #endif
     
     #if {SITE_ID} = 'GTI1'
      do Get-File-Path		! Output Directory Path
        let $folder = $ADPTAX_OUTPATH  !PYINT026/27 - CHANGED FOLDER PATH DEFINITION FOR B2B PROCESSING
     #endif

     #if {SITE_ID} = 'TFF1'
       !The function and it’s parameters are Get-Parameters($Program-Id, $Parm-Id, :$Char-Parm, :#Numeric-Parm, :$Date-Parm, :$Found)       
       do Get-Parameters($ReportID, 'OUTBOUND_DIR', $PathName, #Dummy, $Dummy, $Found)
       if $Found = 'N' or rtrim($PathName,' ') = ''
        let $prcs_message_parm2 = 'The Outbound Directory has not been setup.'
        let $prcs_message_parm3 = 'PARM ID : OUTBOUND_DIR'
        let $prcs_message_parm4 = ' '
        let $Procedure_Name = ‘Get-Parameters’
        do Process-Not-Successful      
       else
        let $folder = $PathName
       end-if
     #endif
     
     #if {SITE_ID} = 'FBI1'
       do Get-Database-Name-FBI1
       let $folder =   'D:\psoft\interfaces\ADPTAXGARN\data\' || $Database_name  || '\outbound\'
     #endif

     #ifdef TTS_AUTOMATION         !automation needs the 'dot'
       let $s = '.'
       show 'TTS_AUTOMATION enabled, sepchar  = ' $s
     #else
       let $s = '_'
       show 'TTS_AUTOMATION disabled, sepchar = ' $s
     #endif
     
     show 'TTS folder    : ' $Folder
   
     #ifdef FOUR_CHAR_YEAR_IN_REPORT_DATE ! $ReportDate in format: yyyy/mm/dd
       let  $FileDate = substr($ReportDate,1,4) || substr($ReportDate,6,2) || substr($ReportDate,9,2)
     #else ! $ReportDate in format: mm/dd/yyyy
       let  $FileDate = substr($ReportDate,7,4) || substr($ReportDate,1,2) || substr($ReportDate,4,2) 
     #endif
     let  $FileTime = substr($ReportTime,1,2) || substr($ReportTime,4,2) || substr($ReportTime,7,2)
     let  $FileDtTm = $FileDate || $FileTime

   #ifdef USE_PSOPTIONS
      do Get-PSOPTIONS-ADP
      Show 'Using PSOPTIONS Table to get SystemType = ' $SystemType ' Cert_Prod = ' $Cert_Prod
      if $Cert_Prod = 'p'
        let $TTS_Naming = 'PROD'
        #if {SITE_ID} = 'MDT1'
         let $FTP-Instruction-Set = 'P'		
         show 'set FTP Instruction Set to P'	
        #endif
       else
        let $TTS_Naming = 'TEST'
        #if {SITE_ID} = 'MDT1'
         let $FTP-Instruction-Set = 'T'		
         show 'set FTP Instruction Set to T'	
        #endif
      end-if
   #else
 
     show 'STANDARD_TTS_NAMING = {STANDARD_TTS_NAMING}'

     #ifdef PROD_DBNAME
       show 'PROD_DBNAME         = {PROD_DBNAME}'
       #ifdef DATABASE_NAME_PSDBOWNER_DBNAME
        show 'DATABASE_NAME_PSDBOWNER_DBNAME enabled'
       #endif
     #endif

     #if {SITE_ID} = 'RSI1'
         do get-database-name-RSI1
         show 'RSI1: Database_name = ' $database_name
     #endif
     
     #if {SITE_ID} = 'PRT1'
        do get_database_name-PRT1
        let $database_name = $database
     #endif

     #if {SITE_ID} = 'PMH1'
        do PMH1-filename
     #endif
     
     #if {SITE_ID} = 'TRO1'
       do get-dbname-TRO1 !returns $dbname
       let $database_name = $dbname
       #ifdef NT
        if rtrim($Database_name,' ') =  rtrim('{PROD_DBNAME}',' ')
         let $Folder = '\\BP212\SYST7\WORKGRP\PAYROLL\PSOFT\'
        else
         let $Folder = '\\BP212\SYST7\WORKGRP\PAYROLL\TestPSOFT\'
        end-if
       #endif
       show 'TRO1: $Folder = ' $Folder ', dbname = ' $dbname
     #endif

     let $TTS_Naming = rtrim('{STANDARD_TTS_NAMING}',' ')
     if $TTS_Naming = 'DB'
        #ifdef PROD_DBNAME

          if rtrim($Database_name,' ') = ''
             do get-tts-standard-database-name
          end-if
          #ifdef CUSTOM_DATABASE_NAME
            do get-dbname-Custom
          #endif
          show '$Database_name for comparison to Production database name = ' $Database_name
          if rtrim($Database_name,' ') =  rtrim('{PROD_DBNAME}',' ')
           let $TTS_Naming = 'PROD'
          else
           let $TTS_Naming = 'TEST'
          end-if
        #else
          show 'PROD_DBNAME needs to be defined in probiz.sqc'
          show 'Stopping.'
          stop
        #endif
        
     end-if

   #endif
   
   show 'TTS Naming = ' $TTS_Naming
  
   
   #ifdef SITE_ID_OVERRIDE_IN_FILENAME
      let $site_id_lower = lower('{SITE_ID_OVERRIDE_IN_FILENAME}')
      show 'TTS Naming convention, SITE_ID_OVERRIDE_IN_FILENAME = {SITE_ID_OVERRIDE_IN_FILENAME}'
   #else
      let $site_id_lower = lower('{SITE_ID}')
      show 'TTS Naming convention, SITE_ID = {SITE_ID}'
   #endif
      
   let $filename_extension = '.prl'
   
   if $TTS_Naming = 'TEST'
    let $Filename_prefix = 'c' || $s || $site_id_lower  || $s || 'tax' || $s || 'test' || $s || $FileDtTm
   else
    let $Filename_prefix = 'p' || $s || $site_id_lower  || $s || 'tax' || $s || $FileDtTm
   end-if
   
   let $filename = $Folder || $Filename_prefix || $filename_extension
           
   show 'TTS / Automation Naming convention used. Extract filename  : ' $Filename
   show '                                          Filename_prefix  : ' $Filename_prefix
   show '                                       filename_extension  : ' $filename_extension
   show '                                                   Folder  " ' $Folder

   #if {SITE_ID} = 'GTI1'
      let $RepFileName = $filename || '.PDF'
      new-report $RepFileName
   #endif


    goto tts_end
    
  #endif  !STANDARD_TTS_NAMING
  
  !New Default filenaming conventions
  !----------------------------------
  #ifdef STANDARD_EXTRACT_NAME_CONVENTION
     #ifdef FOUR_CHAR_YEAR_IN_REPORT_DATE
       let  $FileDate = substr($ReportDate,1,4) || substr($ReportDate,6,2) || substr($ReportDate,9,2)
     #else
       let  $FileDate = substr($ReportDate,1,2) || substr($ReportDate,4,2) || substr($ReportDate,7,4)
     #endif

     #if {SITE_ID} = 'ERK1'
      let $FileDate = ''
     #endif

     let  $FileTime = substr($ReportTime,1,2) || substr($ReportTime,4,2) || substr($ReportTime,7,2)
     let  $FileDtTm = $FileDate || '_' || $FileTime

     #ifdef OUTPUT_FOLDER
	   let  $Folder = '{OUTPUT_FOLDER}'
     #else

         let  $Folder = '{FILEPREFIX}'

         #if {SITE_ID} = 'LLN1'
           If $SQR-PLATFORM = 'UNIX'
              let $Folder = getenv('PS_DAT')  || '/'
           else
              let $Folder = '{FILEPREFIX}'
           end-if
           show 'LLN1: $SQR-Platform = ' $SQR-Platform ', Folder = ' $Folder
         #endif

         #if {SITE_ID} = 'JLL1'
          do get-lp-server-path('FS',$tlp_server_path)
          let $folder = ltrim(rtrim($tlp_server_path, ' '), ' ') || 'Outbox\payroll\adp\'
         #endif

         #if {SITE_ID} = 'CEI1'
          let  $Folder = {PRFILEOUT}           !LA001/OF001 - 11/3/05
         #endif

         #if {SITE_ID} = 'NGS1'
           do Bulid-path-NGS1
           show 'NGS1: output path = ' $FILEPREFIX_Natl_Geo
           let $Folder = $FILEPREFIX_Natl_Geo
         #endif

         #if {SITE_ID} = 'AMP1'
            #ifdef UNIX
              !*****Modify to Change UNIX File Paths.
              do Build-File-Paths
              Let $AXOUTFILEPATH = $PS_HOME || '/custom/data/output/'           !    (Files get generated here)
              Let $Folder = $AXOUTFILEPATH
            #endif
         #endif

         #if {SITE_ID} = 'BLB1'
           let $Folder = getenv('PS_HOME') || '/BB_CUSTOM/BB_ADP/output/'
         #endif

         #if {SITE_ID} = 'CGI1'
           let $Folder = getenv('PS_HOME') || '/data/interface/201/temp/'
           let $Dest_Fol = getenv('PS_HOME') || '/data/interface/201/out/'             
         #endif

         #if {SITE_ID} = 'CSA1'
           let $Folder = getenv('PS_HOME') || '/interfaces/adp/'
         #endif

         #if {SITE_ID} = 'WCH1'
           Do Set-SQR-Env
           let $Folder = $PS_OUT
         #endif

         #if {SITE_ID} = 'MLN1'
          let $Folder = $COMMONPREFIX
         #endif

         #if {SITE_ID} = 'PFG1'
          date-time () mmddyy &Create_Dt
          move &Create_Dt   to $Create_Dt
          do get-working-dir
          display 'After get-working-dir, folder = ' noline
          display $USG_UNIX_DIR
          let $Folder = $USG_UNIX_DIR
         #endif
   
     #endif  !not OUTPUT_FOLDER

     #if {SITE_ID} = 'CIB1'
      do ciber-filename
     #endif

     #if {SITE_ID} = 'MTC1'
      #ifdef UNIX
        let $Folder = getenv('PS_HOME') || '/securefile/export/'
      #endif
     #endif

     #if {SITE_ID} = 'FRB1'								!FRB 02/13/2006
       !Get output file location from unique Client values from PS_Z_SQR_CNTRL_TBL	!FRB 02/13/2006
       do GET-DISTRICT-UNIQUE-VALUES							!FRB 02/13/2006
       let $Folder = $Z_EDIT_BOX_1							!FRB 02/13/2006
     #endif										!FRB 02/13/2006

    #if {SITE_ID} = 'KEY1'
        let  $Folder = '{CONVPREFIX}'
    #endif

    #if {SITE_ID} = 'KCT1'
            let $WS=GETENV('PS_WORKSPACE')
            let $Folder = $WS || '/interface/hr/payroll/adp/periodictax/'
    #endif
    
    #if {SITE_ID} = 'SCP1'
      do get-database-name-sci1
      Let $Path = Substr($Database_Name, 6, 3)
      lowercase $Path
      Let $Folder = '/appl/psft/sci/' || $Path || '/hr900/datafiles/interfaceout/'
      Let $custom_filename_prefix = 'PY314_'
     #endif
     
     let $SlctRunID = ltrim($SlctRunID,' ')
     let $SlctRunID = rtrim($SlctRunID,' ')

     let  $Filename_prefix = 'periodic'
     #ifndef CUSTOM_RUN_SELECTION
      if (rtrim($SlctRunID,' ') <> '') AND (rtrim($SlctRunID,' ') <> '*')
       let  $Filename_prefix = 'periodic_' || rtrim($SlctRunID,' ') || '_' || $FileDtTm
      else
       let  $Filename_prefix = 'periodic_' || $FileDtTm
      end-if
     #else
      let  $Filename_prefix = 'periodic_' || $FileDtTm
     #endif

     #if {SITE_ID} = 'ERK1'
      let  $Filename_prefix = 'periodic' || $FileDtTm
     #endif

     #if {SITE_ID} = 'JCT1'
       show '** Changing File name for JCI conventions **'
       let $Filename_Prefix = 'jtl1001_periodic'                            !07192
     #endif

     if rtrim($Folder,' ') = 'DEFAULT'
	   let $Folder = ''
     end-if

     #if {SITE_ID} = 'GEC1'
       if (rtrim($SlctRunID,' ') <> '') AND (rtrim($SlctRunID,' ') <> '*')
         let  $Filename_prefix = 'periodic_' || $FileDtTm || '-' || $SlctRunID
       end-if
     #endif

     #if {SITE_ID} = 'ERK1'
      do Get-Database-Name
      Let $DataBase_Name = $DataBase
      let $Folder = '{IMPORTPREFIX}' || $DataBase_Name || '\Outbound\ADP_Tax\'
     #endif

     !For CHB1 - Modified to export the DAT file into UNIX BOX Specified Location,24th Jan 2007
     !------------------------------------------------------------------------------------------
     #if {SITE_ID} = 'CHB1'
       Do GET_FILE_PATH({tool_name},'USA',$dummy,$Folder)
     #endif
     
     #if {SITE_ID} = 'EQR1'
         let $Filename_prefix =  rtrim($SlctRunID,' ')
     #endif

     let $filename_extension = '.dat'
     #ifdef STANDARD_EXTRACT_NAMING_EXTENSION
            let $filename_extension = '.{STANDARD_EXTRACT_NAMING_EXTENSION}'
     #endif
     
     let $Filename = $Folder || $Filename_prefix || $filename_extension

     #if {Peoplesoft_Version} < '8'
        let  $NewReportExt = '.lis'
     #else
        let  $NewReportExt = '.pdf'
     #endif

     #if {SITE_ID} = 'MLN1'
        let $Filename = $COMMONPREFIX || 'ztxs022.dat'
     #endif

     #ifdef REDIRECT_REPORT_NAME
        let $NewReportName = $Folder || $Filename_prefix || $NewReportExt
        New-Report $NewReportName
     #endif

     let $FTP_Extract_Filename     = $Filename_prefix || '.dat'
     let $FTP_Report_Filename      =  $Filename_prefix || $NewReportExt

   #else !STANDARD_EXTRACT_NAME_CONVENTION

         #ifdef Periodic_Extract
            #if {SITE_ID} = 'PMT1'
              do Get_Path                                                      !wje - PS 89 Upgrade - naming standards
              show 'PPC Path   : ' $output_path
              let $Filename = $Output_Path || '{Periodic_Extract}'
              show 'PPC Filname: ' $Filename
            #else
              if rtrim($Filename,' ') = ''
                let $Filename   = '{Periodic_Extract}'
              end-if
            #endif
         #endif

   #endif

   #if {SITE_ID} = 'ALC1'
        let $Folder = getenv('PS_HOME')
        let $Folder = $Folder || '/alcoa/data/'
        let $Filename_prefix = 'periodic_' || $PgmProcessInstance
        let $Filename = $Folder || $Filename_prefix || '.dat'
   #endif

   #if {SITE_ID} = 'TGP1'
        let $Common_Path = substr($Sqr-Program,1,(length($Sqr-Program)
                      - (length($Sqr-Program) - instr($Sqr-Program,'user',0)) - 1))
        let $Folder = $Common_Path || 'HRP/seqfiles/edi/'
        let $Filename = $Folder || '{Periodic_Extract}'
   #endif

   #if {SITE_ID} = 'WCH1'
       Do Set-SQR-Env
       let $Filename = $PS_OUT || '{Periodic_Extract}'
   #endif

   #if {SITE_ID} = 'DOW1'
      let $Filename = '{FILEPREFIX}' || 'periodic_' || $SlctRunID || '.dat'
      let $RepFileName = '{FILEPREFIX}' || 'periodic_' || $SlctRunID || '.prn'
      new-report $RepFileName
   #endif


   #if {SITE_ID} = 'CBL1'							!FSH - Added for Cincinnati Bell
	let $FILEPREFIX = getenv('PACCE_DAT') || '/'				!FSH - Added for Cincinnati Bell
        let $Filename = $FILEPREFIX || '{Periodic_Extract}'			!FSH - Added for Cincinnati Bell
   #endif		
     
   ! #if {SITE_ID} = 'CONVERGYS'
   !
   ! let $Unix_command_dat = 'rm {FILEPREFIX}periodic.dat.* '
   ! let $Unix_command_lis = 'rm {FILEPREFIX}cbpbzper.lis.* '
   !
   ! Call System Using $Unix_command_dat #Status
   !
   ! If #Status <> 0
   !   show 'Error executing the command in Unix: ' $Unix_command_dat
   !   show 'Status = ' #Status
   ! End-if
   !
   ! Call System Using $Unix_command_lis #Status
   !
   ! If #Status <> 0
   !   show 'Error executing the command in Unix: ' $Unix_command_lis
   !   show 'Status = ' #Status
   ! End-if
   !
   ! let  $FileDate = substr($ReportDate,9,2)||substr($ReportDate,1,2)||substr($ReportDate,4,2)
   ! let  $FileTime = substr($ReportTime,1,2)||substr($ReportTime,4,2)||substr($ReportTime,7,2)
   ! let  $FileDtTm = '.'||$FileDate||$FileTime
   !
   ! let $filename    = '{FILEPREFIX}'||'periodic.dat'||$FileDtTm
   ! let $RepFileName = '{FILEPREFIX}'||'cbpbzper.lis'||$FileDtTm
   ! new-report $RepFileName
   !
   ! #endif

   #if {SITE_ID} = 'AXA1'
      Do Get-Run-Location
      Let $Filename = $WriteDir || '{Periodic_Extract}'
   #endif

   #if {SITE_ID} = 'PMC1'
        let $Filename = '{FILEPREFIX}' || 'pb' || $SlctRunID || '.dat'

        let $RepFileName = '{FILEPREFIX}' || 'pb' || $SlctRunID || '.lis'
        new-report $RepFileName
   #endif

   #if {SITE_ID} = 'BCD1'						!UXW033104
     do Format-DateTime($AsOfToday,$Out,{DEFYMD},'','')
     let $Process_Date   = EDIT($Out,'XXXX~XX~XX')
     let $Process_Time   = EDIT($AsOfNow,'XX~XX~XX')

     let $TimeStamp = $Process_Date || '.' || $Process_Time
     let $FileName = '{FILEPREFIXOUT}' || 'pbzpera.' || LOWER($SlctRunId) || '.asc.' || $TimeStamp
   #endif

   #if {SITE_ID} = 'ALB1'
      Do Get-Run-Location                                    ! Pete  5/10/99
      #ifdef RUNID_FILE_EXTENSION
        let $Filename   = Rtrim($ALBPrefix,' ') || 'periodic.' || substr($SlctRunID,length($SlctRunID)-2,3)
        show 'Interface File Name is ' $Filename              ! Pete 5/04/00
!       let $Filename   = '{Fileprefix}periodic.' || substr($SlctRunID,length($SlctRunID)-2,3)
      #endif
   #endif

   #if {SITE_ID}  = 'LIZ1'
       let  $Folder  = '{OUTPUT_FOLDER}'
       let $Filename = $Folder || '{Periodic_Extract}'
   #endif

   #if {SITE_ID} = 'BCD1'						!UXW033104
     do Format-DateTime($AsOfToday,$Out,{DEFYMD},'','')
     let $Process_Date   = EDIT($Out,'XXXX~XX~XX')
     let $Process_Time   = EDIT($AsOfNow,'XX~XX~XX')
     let $TimeStamp = $Process_Date || '.' || $Process_Time
     let $FileName = '{FILEPREFIXOUT}' || 'pbzpera.' || LOWER($SlctRunId) || '.asc.' || $TimeStamp
   #endif

   #if {SITE_ID} = 'LAN1'
      let $Filename   = '{FilePrefix}{Periodic_Extract}'                         ! DRL 19980623
   #endif

   #if {SITE_ID} = 'CSX1'
     show '$SlctRunID  =  ' $SlctRunID
     let $Filename   = {FILEPREFIXOUT}
     let $Filename   = $Filename || 'CSXPY070.F01.' || $SlctRunID
   #endif

!   Tribune change 12/11/03, per Lawrence
   #if {SITE_ID} = 'TBN1'
      #ifdef UNIX
       let $Fileprefix   = getenv('PSOUTPUT') || '/'
      #else
       let $Fileprefix   = '{FILEPREFIX}'
      #endif
      let $Filename   = $Fileprefix || '{Periodic_Extract}'
   #endif

   #if {SITE_ID} = 'PFZ1'
      let $Filename = getenv('PBZPERA')
   #endif

   #if {SITE_ID} = 'SOL1'
      let $Filename = getenv('PBZDAT')
   #endif

   #if {SITE_ID} = 'AMR'
      #ifdef NT   !Open files if run on NT
        move 'O:\amr_data\outbound\{Periodic_Extract}' to $filename
      #endif

      #ifdef OS400  !Open files if run on AS/400
        move 'amrcstdta/outbound({Periodic_Extract})' to $filename
      #endif
   #endif

   #if {SITE_ID} = 'HWL1'
    let $Filename = '{OutFileDir}' || '{Periodic_Extract}' || '.' || '{OutfileType}'
    let $Folder =  '{OutFileDir}'
    show 'Honeywell AZ: filename = ' $Filename
   #endif

   #if {SITE_ID} = 'BLK1'
    #ifndef MVS
     let #len = length($sqr-report)
     let #lenm3 = #len - 3
     let $Filename = substr($sqr-report,1,#lenm3) || 'dat'
     show 'BLK1 Filename ' $Filename
    #endif
   #endif

   #if {SITE_ID} = 'CZB1'
      do Get-Database-Name
      Let $File_Location = '/apps/psoft/hrms88/' || lower($DataBase_Name) || '/custom/data/outbound/pbzper.out'
   #endif

   #ifdef Use_Fileprefix
    #ifdef Fileprefix_Env_Var
      let $Fileprefix = getenv('{Fileprefix_Env_Var}')
    #endif
    show 'Fileprefix = ' $Fileprefix
    let $Filename   = $Fileprefix || '{Periodic_Extract}'
   #endif
  
   #if {SITE_ID} = 'ELR1'
    Do getpath
    let $FileName = $py_outbound_data_file_path || 'pbzper_' || rtrim($prcs_process_instance,' ') || '.dat'
   #endif
  

tts_end:

#if {SITE_ID} = 'WEYERHAEUSER'
begin-select
to_char(sysdate,'yyyymmddhhmiss') &sysdate_yyyymmddhhmiss

    let $Folder = '{FILEPREFIX_WIA_OUT}'
    let $work.wey_filename = 'HumanResources.adp001.PTP241.' || &sysdate_yyyymmddhhmiss   
    let $Filename = $Folder || $work.wey_filename  

from dual
end-select
#endif


end-procedure


#endif


!--------------------------------------------------------------------------------------

#ifdef ADP_TAX_QUARTERLY


!********************************************************************** !
!---------------------------------------------------------------------- !
! Procedure: Create-Interface-File                                      !
! Descr:     Create the ADP Interface file for quarterly filints        !
!---------------------------------------------------------------------- !
begin-procedure Create-Interface-File

    show 'Creating Interface File, using adpstdnm.sqc version = {PROGRAM_VERSION_ADPSTDNM}'

! ---------------------------------------------------------------------
!                Test file naming conventions
!  9/13/07       ----------------------------
!                   c.fhl1.tax.test.yyyymmddhhmiss.prl
!                   c.fhl1.tax.test.yyyymmddhhmiss.qtrly 
!
!                Production file name conventions: 
!                ---------------------------------
!                   p.fhl1.tax.yyyymmddhhmiss.prl
!                   p.fhl1.tax.yyyymmddhhmiss.qtrly 
! ---------------------------------------------------------------------

  #ifdef STANDARD_EXTRACT_NAME_CONVENTION
    show 'STANDARD_EXTRACT_NAME_CONVENTION enabled'
  #endif


  !5/14/08 new defaults
  !--------------------
  #ifdef OUTPUT_FOLDER
    let $Folder = '{OUTPUT_FOLDER}'

    #ifdef Quarterly_Extract_Filename
      let $Filename = $Folder || '{Quarterly_Extract_Filename}'
    #else
      let $Filename = $Folder || 'periodic.dat'
    #endif

  #else
    #ifdef Quarterly_Extract_Filename
      let $Filename = $Folder || '{Quarterly_Extract_Filename}'
    #else
      let $Filename = $Folder || 'quarter.dat'
    #endif

  #endif
  show 'Create-Interface-File, Default Folder: ' $Folder ', Default Filename: ' $Filename
  !---------------------------------------------------------------------------------------



  #ifdef STANDARD_TTS_NAMING   ! TEST or PROD or name

     #ifdef OUTPUT_FOLDER
       let $Folder = '{OUTPUT_FOLDER}'
     #else
       let $Folder = '{FILEPREFIX}'
     #endif

     !Custom Folder specification goes here
     !--------------------------------------
     ! "Client specific folder code"...
     !--------------------------------------
     #if {SITE_ID} = 'LLN1'
       do get_database_name-lln1
       let $database_name = substr($database_name,1,5)
       If $SQR-PLATFORM = 'UNIX'
          let $Folder = getenv('PS_DAT')  || '/'
       else
          let $Folder = '{FILEPREFIX}'
       end-if
       show 'LLN1: $SQR-Platform = ' $SQR-Platform ', Folder = ' $Folder ', Database_name = ' $database_name
     #endif

     #if {SITE_ID} = 'AVD1'
      do Set-Output-Directory
      let $FOLDER = $AVOUTDIR || '/pr/adp/'
     #endif
  
     #if {SITE_ID} = 'MCK1'
       do Get-Path
       let $Folder = $pathint
       !let #flen = length($Folder) - 4
       !let $RepFolder = substr($Folder,1,#flen) || 'rpt\'
       !let $Repfilename = $RepFolder || 'pbzqtr.lis'
       !new-report $Repfilename
     #endif


     #if {SITE_ID} = 'ACL1'
      do Get-DB-Name-ACL1
      let $database_name = $prcs_dbname
      let $xl_process_name = 'ADPTAX'
      let $xl_field_name   = 'GENERAL'
      let $xl_field_value  = 'FILE'
      let $AMC_INPUT1      = 'OUTPUT_FILE'
      do XLAT-Translate-To-External-Values
      let $folder	= 'D:\PSData\' ||  rtrim($prcs_dbname,' ')  || '\' || rtrim($AMC_OUTPUT1,' ')
      show 'ACL1 Folder: ' $Folder
     #endif
     
     #if {SITE_ID} = 'SWF1'
      #if {PeopleSoft_Version} = '8'
       let $Folder  =  getenv('CAGOUTPUTPRE')    !8.0
      #else
       !let  $Folder = '{FILEPREFIX}'             !8.9
       let $Folder = getenv('PS_HOME') || '/files/outbound/' !8.9   bpb01
      #endif
     #endif

     #if {SITE_ID} = 'PMI1'
       Get-DBName-PMI
       let $folder = '/interface/infpmipj/' || $dbname || '/outgoing/adp/'
     #endif

     #if {SITE_ID} = 'BID1'
       do get-dbname-BID1
     #endif
     
     !/data/7bn/hr88prd/output/, or /data/7bn/hr88tst3/output/
     #if {SITE_ID} = 'NXT1'
        do get-tts-standard-database-name
        show 'NXT1: $Database_name = ' $Database_name
        let $Database_name_lower = lower($Database_name)
        let $folder = '/data/7bn/' || $Database_name_lower || '/output/'
     #endif
     

     #if {SITE_ID} = 'LFG1'
        do get-db-name($dbname-out)
        let $DataBase_Name = $dbname-out	
        Do get-file-path-output ($dir)
        let $Folder = $dir|| 'Outbound\lxpyi014\'
     #endif

     #if {SITE_ID} = 'SGB1'
       do get-database-name-SGB1
       let $folder = $adp_tax_out
     #endif

     #if {SITE_ID} = 'GTI1'
      do Get-File-Path    ! Output Directory Path
      let $folder = $ADPTAX_OUTPATH  !PYINT026/27 - CHANGED FOLDER PATH DEFINITION FOR B2B PROCESSING
     #endif

     #if {SITE_ID} = 'TFF1'
       !The function and it’s parameters are Get-Parameters($Program-Id, $Parm-Id, :$Char-Parm, :#Numeric-Parm, :$Date-Parm, :$Found)       
       do Get-Parameters($ReportID, 'OUTBOUND_DIR', $PathName, #Dummy, $Dummy, $Found)
       if $Found = 'N' or rtrim($PathName,' ') = ''
        let $prcs_message_parm2 = 'The Outbound Directory has not been setup.'
        let $prcs_message_parm3 = 'PARM ID : OUTBOUND_DIR'
        let $prcs_message_parm4 = ' '
        let $Procedure_Name = ‘Get-Parameters’
        do Process-Not-Successful      
       else
        let $folder = $PathName
       end-if
     #endif

     #if {SITE_ID} = 'FBI1'
       do Get-Database-Name-FBI1
       let $folder =   'D:\psoft\interfaces\ADPTAXGARN\data\' || $Database_name  || '\outbound\'
     #endif
     
     #ifdef TTS_AUTOMATION         !automation needs the 'dot'
       let $s = '.'
       show 'TTS_AUTOMATION enabled, sepchar  = ' $s
     #else
       let $s = '_'
       show 'TTS_AUTOMATION disabled, sepchar = ' $s
     #endif
     
     show 'TTS folder    : ' $Folder
   
     #ifdef FOUR_CHAR_YEAR_IN_REPORT_DATE ! $ReportDate in format: yyyy/mm/dd
       let  $FileDate = substr($ReportDate,1,4) || substr($ReportDate,6,2) || substr($ReportDate,9,2)
     #else ! $ReportDate in format: mm/dd/yyyy
       let  $FileDate = substr($ReportDate,7,4) || substr($ReportDate,1,2) || substr($ReportDate,4,2) 
     #endif
     let  $FileTime = substr($ReportTime,1,2) || substr($ReportTime,4,2) || substr($ReportTime,7,2)
     let  $FileDtTm = $FileDate || $FileTime
  
    #ifdef USE_PSOPTIONS
      do Get-PSOPTIONS-ADP
      Show 'Using PSOPTIONS Table to get SystemType = ' $SystemType ' Cert_Prod = ' $Cert_Prod
      if $Cert_Prod = 'p'
        let $TTS_Naming = 'PROD'
        #if {SITE_ID} = 'MDT1'
         let $FTP-Instruction-Set = 'P'		
         show 'set FTP Instruction Set to P'	
        #endif
      else
        let $TTS_Naming = 'TEST'
        #if {SITE_ID} = 'MDT1'
         let $FTP-Instruction-Set = 'T'		
         show 'set FTP Instruction Set to T'	
        #endif
      end-if
    #else
 
     show 'STANDARD_TTS_NAMING = {STANDARD_TTS_NAMING}'

     #ifdef PROD_DBNAME
       show 'PROD_DBNAME         = {PROD_DBNAME}'
       #ifdef DATABASE_NAME_PSDBOWNER_DBNAME
        show 'DATABASE_NAME_PSDBOWNER_DBNAME enabled'
       #endif
     #endif

     #if {SITE_ID} = 'RSI1'
         do get-database-name-RSI1
         show 'RSI1: Database_name = ' $database_name
     #endif
     
     #if {SITE_ID} = 'PRT1'
        do get_database_name-PRT1
        let $database_name = $database
     #endif

     #if {SITE_ID} = 'PMH1'
        do PMH1-filename
     #endif

     #if {SITE_ID} = 'TRO1'
       do get-dbname-TRO1 !returns $dbname
       let $database_name = $dbname
       #ifdef NT
        if rtrim($Database_name,' ') =  rtrim('{PROD_DBNAME}',' ')
         let $Folder = '\\BP212\SYST7\WORKGRP\PAYROLL\PSOFT\'
        else
         let $Folder = '\\BP212\SYST7\WORKGRP\PAYROLL\TestPSOFT\'
        end-if
       #endif
       show 'TRO1: $Folder = ' $Folder ', dbname = ' $dbname
     #endif


     let $TTS_Naming = rtrim('{STANDARD_TTS_NAMING}',' ')
     if $TTS_Naming = 'DB'
        #ifdef PROD_DBNAME
         if rtrim($Database_name,' ') = ''
          do get-tts-standard-database-name  !moved from above this #ifdef, 2/26/08 DMonroe
         end-if
         #ifdef CUSTOM_DATABASE_NAME
           do get-dbname-Custom
         #endif
         show '$Database_name for comparison to Production database name = ' $Database_name
         if rtrim($Database_name,' ') =  rtrim('{PROD_DBNAME}',' ')
          let $TTS_Naming = 'PROD'
         else
          let $TTS_Naming = 'TEST'
         end-if
        #else
          show 'PROD_DBNAME needs to be defined in probiz.sqc'
          show 'Stopping.'
          stop
        #endif
        
     end-if

   #endif  !PS_OPTIONS
   
   show 'TTS Naming = ' $TTS_Naming

   
   #ifdef SITE_ID_OVERRIDE_IN_FILENAME
      let $site_id_lower = lower('{SITE_ID_OVERRIDE_IN_FILENAME}')
      show 'TTS Naming convention, SITE_ID_OVERRIDE_IN_FILENAME = {SITE_ID_OVERRIDE_IN_FILENAME}'
   #else
      let $site_id_lower = lower('{SITE_ID}')
      show 'TTS Naming convention, SITE_ID = {SITE_ID}'
   #endif

   let $filename_extension = '.qtrly'
   
   if $TTS_Naming = 'TEST'
    let $Filename_prefix = 'c' || $s || $site_id_lower  || $s || 'tax' || $s || 'test' || $s || $FileDtTm
   else
    let $Filename_prefix = 'p' || $s || $site_id_lower  || $s || 'tax' || $s || $FileDtTm
   end-if
   
   let $filename = $Folder || $Filename_prefix || $filename_extension
           
   show 'TTS / Automation Naming convention used. Extract filename  : ' $Filename
   show '                                          Filename_prefix  : ' $Filename_prefix
   show '                                       filename_extension  : ' $filename_extension
   show '                                                   Folder  " ' $Folder

   #if {SITE_ID} = 'GTI1'
      let $RepFileName = $filename || '.PDF'
      new-report $RepFileName
   #endif

   goto tts_end
    
  #endif ! STANDARD_TTS_NAMING
  
  #if {SITE_ID} = 'CSA1'									
     let $FolderCSA1 = getenv('PS_HOME') || '/interfaces/PGP/ADP/Quarterly/'
  #endif																										

  !New Default filenaming conventions
  !----------------------------------
  #ifdef STANDARD_EXTRACT_NAME_CONVENTION

     #ifdef OUTPUT_FOLDER
       let  $Folder = '{OUTPUT_FOLDER}'
     #else
      let  $Folder = '{FILEPREFIX}'

      #if {SITE_ID} = 'LLN1'
        If $SQR-PLATFORM = 'UNIX'
           let $Folder = getenv('PS_DAT')  || '/'
        else
           let $Folder = '{FILEPREFIX}'
        end-if
        show 'LLN1: $SQR-Platform = ' $SQR-Platform ', Folder = ' $Folder
      #endif

      #if {SITE_ID} = 'AVD1'
        do Set-Output-Directory
        let $FOLDER = $AVOUTDIR || '/pr/adp/'
      #endif
     
      #if {SITE_ID} = 'JLL1'
        do get-lp-server-path('FS',$tlp_server_path)
        let $folder = ltrim(rtrim($tlp_server_path, ' '), ' ') || 'Outbox\payroll\adp\'
      #endif
     
      #if {SITE_ID} = 'CEI1'
        let  $Folder = {PRFILEOUT}           !LA001/OF001 - 11/3/05
      #endif

      #if {SITE_ID} = 'GE01'
        LET $Folder = GetEnv('PAYROLL_OTB') 
      #endif

     #if {SITE_ID} = 'SCP1'
      do get-database-name-sci1
      Let $Path = Substr($Database_Name, 6, 3)
      lowercase $Path
      Let $Folder = '/appl/psft/sci/' || $Path || '/hr900/datafiles/interfaceout/'
      Let $custom_filename_prefix = 'PY314_'
     #endif

      #if {SITE_ID} = 'NGS1'
        do Bulid-path-NGS1
        show 'NGS1: output path = ' $FILEPREFIX_Natl_Geo
        let $Folder = $FILEPREFIX_Natl_Geo
      #endif

      #if {SITE_ID} = 'BLB1'
        let $Folder = getenv('PS_HOME') || '/BB_CUSTOM/BB_ADP/output/'
      #endif

      #if {SITE_ID} = 'CGI1'
        let $Folder = getenv('PS_HOME') || '/data/interface/200/temp/'
        let $Dest_Fol = getenv('PS_HOME') || '/data/interface/200/out/'           
      #endif
      
      #if {SITE_ID} = 'CSA1'
           let $Folder = getenv('PS_HOME') || '/interfaces/adp/'
      #endif

      #if {SITE_ID} = 'ALC1'
         let $Folder = getenv('PS_HOME')
         let $Folder = $Folder || '/alcoa/data/'
      #endif

      #if {SITE_ID} = 'AMP1'
            #ifdef UNIX
              !*****Modify to Change UNIX File Paths.
              do Build-File-Paths
              Let $AXOUTFILEPATH = $PS_HOME || '/custom/data/output/'           !    (Files get generated here)
              Let $Folder = $AXOUTFILEPATH
            #endif
      #endif



      #if {SITE_ID} = 'MLN1'
            let $Folder = $COMMONPREFIX
      #endif

      #if {SITE_ID} = 'PFG1'
          date-time () mmddyy &Create_Dt
          move &Create_Dt   to $Create_Dt
          do get-working-dir
          display 'After get-working-dir, folder = ' noline
          display $USG_UNIX_DIR
          let $Folder = $USG_UNIX_DIR
      #endif

    #endif  !endif output_folder is defined

    #if {SITE_ID} = 'CIB1'
        do Ciber-filename
    #endif

    #if {Client_ID} = 'FRB1'								!FRB 02/13/2006
       !Get output file location from unique Client values from PS_Z_SQR_CNTRL_TBL	!FRB 02/13/2006
       let $Reportid_Hold = $Reportid							!FRB 02/13/2006
       let $Reportid = '{QUARTERLY_REPORT_ID}'						!FRB 02/13/2006
       do GET-DISTRICT-UNIQUE-VALUES							!FRB 02/13/2006
       IF $SQR_CONTROL_REC_FOUND = 'N'							!FRB 02/13/2006
       OR RTRIM($Z_EDIT_BOX_1,'') = ''							!FRB 02/13/2006
       OR INSTR($Z_EDIT_BOX_1,'\',0) = 0						!FRB 02/13/2006
         PRINT '********************* ERROR ****************************'   (+10,5)	!FRB 02/13/2006
         PRINT '**'                                                         (+1,5)	!FRB 02/13/2006
         PRINT '** NO PATH SPECIFIED IN DISTRICT UNIQUE RUN CONTROL '       (+1,5)	!FRB 02/13/2006
         PRINT '**'                                                         (+1,5)	!FRB 02/13/2006
         PRINT '**********************************************************' (+1,5)	!FRB 02/13/2006
         SHOW  '********************* ERROR ******************************'		!FRB 02/13/2006
         SHOW  '**'									!FRB 02/13/2006
         SHOW  '** NO PATH SPECIFIED IN DISTRICT UNIQUE RUN CONTROL '			!FRB 02/13/2006
         SHOW  '**'									!FRB 02/13/2006
         SHOW  '**********************************************************'		!FRB 02/13/2006
         STOP QUIET									!FRB 02/13/2006
       END-IF										!FRB 02/13/2006
											!FRB 02/13/2006
       IF SUBSTR($Z_EDIT_BOX_1,LENGTH($Z_EDIT_BOX_1),1) <> '\'				!FRB 02/13/2006
         LET $Z_EDIT_BOX_1 = $Z_EDIT_BOX_1 || '\'					!FRB 02/13/2006
       END-IF										!FRB 02/13/2006
											!FRB 02/13/2006
       let $Folder = $Z_EDIT_BOX_1							!FRB 02/13/2006
       let $Reportid = $Reportid_Hold							!FRB 02/13/2006
    #endif										!FRB 02/13/2006

    #if {SITE_ID} = 'KEY1'
        let  $Folder = '{CONVPREFIX}'
    #endif

    if rtrim($Folder,' ') = 'DEFAULT'
       let $Folder = ''
    end-if

    #if {SITE_ID} = 'MLN1'
        let $Filename = $COMMONPREFIX || 'ztxs023.dat'
    #end-if

    #if {SITE_ID} = 'ERK1'  
      Let $DataBase_Name = $DataBase
      let $Folder = '{IMPORTPREFIX}' || $DataBase_Name || 'Outbound\ADP_Tax\'
    #endif


    let  $Filename = $Folder || 'quarter_' || $RptYear || '_' || $RptQtr || '.dat'
    #if {SITE_ID} = 'CSA1'
       let  $Filename = $FolderCSA1 || 'quarterly' || '.dat'    			
    #endif

    
    #if {SITE_ID} = 'KCT1'
            let $WS=GETENV('PS_WORKSPACE')
            let $Folder = $WS || '/interface/hr/payroll/adp/quarterlytax/'
    #endif

    !For CHB1 - Modified to export the DAT file into UNIX BOX Specified Location, 24th Jan 2007  
    !-------------------------------------------------------------------------------------------
    #if {SITE_ID} = 'CHB1'
       Do GET_FILE_PATH({tool_name},'USA',$dummy,$Folder)
    #endif


    #if {SITE_ID} = 'MTC1'
      #ifdef UNIX
        let $Folder = getenv('PS_HOME') || '/securefile/export/'
      #endif
    #endif

    let $Filename_prefix = 'quarter_' || $RptYear || '_' || $RptQtr
    let $filename_extension = '.dat'

    #ifdef STANDARD_EXTRACT_NAMING_EXTENSION
      let $filename_extension = '.{STANDARD_EXTRACT_NAMING_EXTENSION}'
    #endif

    #ifdef MONTHLY_BALANCING_ENABLED
       if #RptPeriod >= 1 and #RptPeriod <= 12
         if rtrim($SelectCompany,' ') <> ''
          #ifdef USE_COMPANY_SELECT_IN_FILENAME
            let $Filename_prefix = $SelectCompany || '_' || 'month_' || $RptPeriod || '_quarter_' || $RptYear || '_' || $RptQtr
          #endif
         else
          let  $Filename_prefix = 'month_' || $RptPeriod || '_quarter_' || $RptYear || '_' || $RptQtr
         end-if
       end-if
 
    #else
      if rtrim($SelectCompany,' ') <> ''
       #ifdef USE_COMPANY_SELECT_IN_FILENAME
          let  $Filename_prefix = $SelectCompany || '_' ||  'quarter_' || $RptYear || '_' || $RptQtr 
       #endif
      end-if
    #endif

    let  $Filename = $Folder || $Filename_prefix || $filename_extension

    #if {SITE_ID} = 'SRC1'
         let $File_date  = '.'                     ||
                    substr($AsofToday,1,4)  ||  
                    substr($AsofToday,6,2)  || 
                    substr($AsofToday,9,2)  || '_'  
         let $File_time  = substr($AsofNow,1,2) || substr($AsofNow,4,2) || substr($AsofNow,7,2)
         if rtrim($Emplid_Mask,' ') = ''
            let $Filename = $Filename || $File_date || $File_time
         else
            let $Filename = $Filename || '_' || $Emplid_Mask || $File_date || $File_time
         end-if
         if rtrim($SelectCompany,' ') <> ''
            if rtrim($Emplid_Mask,' ') = ''
               let $NewReportName = $Folder || $SelectCompany || '_' || 'quarter_' || $RptYear || '_' || $RptQtr || '.rpt' || $File_date || $File_time
            else
               let $NewReportName = $Folder || $SelectCompany || '_' || 'quarter_' || $RptYear || '_' || $RptQtr || '.rpt' || '_' || $Emplid_Mask || $File_date || $File_time
            end-if
         else
            if rtrim($Emplid_Mask,' ') = ''
               let $NewReportName = $Folder || 'quarter_' || $RptYear || '_' || $RptQtr || '.rpt' || $File_date || $File_time 
            else
               let $NewReportName = $Folder || 'quarter_' || $RptYear || '_' || $RptQtr || '.rpt' || '_' || $Emplid_Mask || $File_date || $File_time 
            end-if
         end-if
         display $NewReportName
         New-Report $NewReportName
    #endif

    #ifdef REDIRECT_REPORT_NAME
        display 'Redirecting Report to ' noline
        #if {Peoplesoft_Version} < '8'
          let  $NewReportName = $Folder || 'quarter_' || $RptYear || '_' || $RptQtr || '.lis'
        #else
          let  $NewReportName = $Folder || 'quarter_' || $RptYear || '_' || $RptQtr || '.pdf'
        #endif
        display $NewReportName
        New-Report $NewReportName
    #endif
   
  #else  !not the standard naming convention
    show 'Not standard naming convention'
    #ifdef Quarterly_Extract_Filename
      if rtrim($Filename,' ') = ''
        let $Filename =  '{Quarterly_Extract_Filename}'
      end-if
    #endif

  #endif !STANDARD_NAMING

  #if {SITE_ID} = 'CIB1'
        let $MDCOMP = &STD_MRC.{Client_Field_Prefix}SELECT_COMPANY{Client_Field_Suffix}     
        let  $Filename = $Folder || $MDCOMP ||'_' ||'quarter_' || $RptYear || '_' || $RptQtr || $filename_extension
  #endif
    
  #if {SITE_ID} = 'ALC1'
     let $Folder = getenv('PS_HOME')
     let $Folder = $Folder || '/alcoa/data/'
     let  $Filename = $Folder || 'quarter_' || $RptYear || '_' || $RptQtr || '.dat'
  #endif


  #if {SITE_ID} = 'TGP1'
    let $Common_Path = substr($Sqr-Program,1,(length($Sqr-Program)
                  - (length($Sqr-Program) - instr($Sqr-Program,'user',0)) - 1))
    let $Folder = $Common_Path || 'HRP/seqfiles/edi/'
    let $Filename = $Folder || '{Quarterly_Extract_Filename}'
  #endif

  #if {SITE_ID} = 'DOW1'
      let $Filename = '{FILEPREFIX}' || 'quarter_' || $RptYear || '_' || $RptQtr || '.dat'
      let $RepFileName = '{FILEPREFIX}' || 'quarter_' || $RptYear || '_' || $RptQtr || '.prn'
      new-report $RepFileName
  #endif


  #if {SITE_ID} = 'CBL1'             !FSH - Added for Cincinnati Bell
     let $Fileprefix = getenv('PACCE_DAT') || '/'       !FSH - Added for Cincinnati Bell
     let $Filename = $FilePrefix || '{Quarterly_Extract_Filename}'    !FSH - Added for Cincinnati Bell
  #endif                  !FSH - Added for Cincinnati Bell


!  #if {CLIENT_ID} = 'CONVERGYS'
!
!    let $Unix_command_dat = 'rm {FILEPREFIX}quarter.dat.* '
!    let $Unix_command_lis = 'rm {FILEPREFIX}cbpbzqtr.lis.* '
!
!    Call System Using $Unix_command_dat #Status
!
!    If #Status <> 0
!      show 'Error executing the command in Unix: ' $Unix_command_dat
!      show 'Status = ' #Status
!    End-if
!
!    Call System Using $Unix_command_lis #Status
!
!    If #Status <> 0
!      show 'Error executing the command in Unix: ' $Unix_command_lis
!      show 'Status = ' #Status
!    End-if
!
!    let  $FileDate = substr($ReportDate,9,2)||substr($ReportDate,1,2)||substr($ReportDate,4,2)
!    let  $FileTime = substr($ReportTime,1,2)||substr($ReportTime,4,2)||substr($ReportTime,7,2)
!    let  $FileDtTm = '.'||$FileDate||$FileTime
!
!    let $filename    = '{FILEPREFIX}'||'quarter.dat'||$FileDtTm
!    let $RepFileName = '{FILEPREFIX}'||'cbpbzqtr.lis'||$FileDtTm
!    new-report $RepFileName
!
!  #endif


  #if {SITE_ID} = 'CGI1'
     let  $FileDate = substr($ReportDate,9,2)||substr($ReportDate,1,2)||substr($ReportDate,4,2)
     let  $FileTime = substr($ReportTime,1,2)||substr($ReportTime,4,2)||substr($ReportTime,7,2)
     let  $CGFilename = 'quarter_' || $FileDate || '_' || $FileTime || '.dat'
     let  $Filename = $Folder || $CGFilename
  #endif
  

  #if {SITE_ID} = 'LAN1'                                                      ! DFB 20001003
     let $Fileprefix = getenv('vcDATA') || '/'                                 ! DFB 20001003
     let $Filename = $FilePrefix || '{Quarterly_Extract_Filename}'             ! DFB 20001003
  #endif                                                                       ! DFB 20001003

  #if {SITE_ID} = 'WCH1'
    Do Set-SQR-Env
    let $Filename = $PS_OUT || '{Quarterly_Extract_Filename}'
  #endif

  #if {SITE_ID} = 'ALB1'
    Do Get-Run-Location                                               ! Pete 5/05/00
    let $Filename = Rtrim($ALBPrefix,' ') || 'quarter.dat'            ! Pete 5/05/00
    show 'Creating Interface File ' $Filename                         ! Pete 5/05/00
  #endif

  #if {SITE_ID} = 'CSB1'
    do Get-Server-Dest
    let $Filename = $FILEPREFIX || '{Quarterly_Extract_Filename}'
  #endif

  #if {SITE_ID} = 'AXA1'
     Do Get-Run-Location
     Let $Filename = $WriteDir || '{Quarterly_Extract_Filename}'
  #endif

  #if {SITE_ID} = 'PFZ1'
     let $Filename = getenv('PBZQTR_EXTRACT')
  #endif

  #if {SITE_ID} = 'SOL1'
     let $Filename = getenv ('{Quarterly_Extract_Filename}')
  #endif

  #if {SITE_ID} = 'CZB1'  !12/19/6
    Do Get-Database-Name
    Let $Folder = '/apps/psoft/hrms88/' || lower($DataBase_Name) || '/custom/data/outbound/'
    let $Filename = $Folder || 'pbzqtr.out'
  #endif


  #if {SITE_ID}  = 'LIZ1'
       let $Folder  = '{OUTPUT_FOLDER}'
       let $Filename    = $Folder || '{Quarterly_Extract_Filename}'
  #endif


  #if {SITE_ID} = 'HWL1'
    let $Filename = '{OutFileDir}' || '{Quarterly_Extract_Filename}' || '.' || '{OutfileType}'
    let $Folder =  '{OutFileDir}'
  #endif

  ! TMW - OD6 - 11/17/1998 - define output file after calling get-dbname procedure
  ! ------------------------------------------------------------------------------
  #if {SITE_ID} = 'TMW1'
   #ifdef UNIX
     do Get-DBname
     let $Filename = $Input_PY || 'quarter.dat'
   #else
     let $Filename = 'c:\probiz\quarter.dat'
   #endif
  #endif

  #if {SITE_ID} = 'CSX1'                                               !03/18/99KWK
    display {FILEPREFIXOUT}                                             !03/18/99KWK
    let $Filename = {FILEPREFIXOUT} || '{Quarterly_Extract_Filename}'   !03/18/99KWK
  #endif                                                                !03/18/99KWK

  #if {SITE_ID} = 'PMT1'     !**** John King - use paramount procedure for output file ****
     do Get_Path
     show 'PPC Path   : ' $output_path
     let $Filename = $Output_Path || '{Quarterly_Extract_Filename}'
     show 'PPC Filname: ' $Filename
  #endif

  #if {SITE_ID} = 'JCT1'
      let $Filename = '{FILEPREFIX}' || 'jtl1002_quarter_' || $RptYear || '_' || $RptQtr || '.dat'
  #endif

  #if {SITE_ID} = 'BCD1'
    let $FileName = '{FILEPREFIXOUT}' || 'quarter_' || $RptYear || '_' || $RptQtr || '.dat'
  #endif

  !#if {SITE_ID} = 'SUN1'      !DMonroe 9/21/99
  !  let $Filename = 'OUTPUT1'
  !#endif

  #if {SITE_ID} = 'TBN1'
     let $Fileprefix = getenv('PSOUTPUT') || '/'
  #endif

  #if {SITE_ID} = 'STV1'
     Move $Paygroup to $temppaygroup
     Move '' to $paygroup
     Let $PEYR = $Rptyear
     Do Build-File-String
     Let #Loc = Instr($FILEOUT,$Rptyear,1) + 3
     Extract $filepath from $FILEOUT 0 #Loc
     Let $Filename = $filepath || Cond(&Runlocation = '2', '/quarter.dat', '\quarter.dat')
     Let $Lisfile  = $filepath || Cond(&Runlocation = '2', $LISFILE,'\txpbzqtr.lis')
     New-Report $LisFile
  #endif

  #if {SITE_ID} = 'RTG1'
       let $rtipath = 'transmitconfidential\ADP\quarterly\' || $RptYear || '-' || $RptQtr
       show '$rtipath: ' $rtipath
       let $Filename = '{QUARTERLY_REPORT_ID}_' || $RptYear || '_' || $RptQtr || '.pdf'
       show 'report $Filename: ' $Filename
       do Assign-RTI-FileName
       let $NewReportName = $Filename
       new-report $NewReportName

      ! Create data filename
      let $Filename = 'quarter_' || $RptYear || '_' || $RptQtr || '.dat'
      show 'data $Filename: ' $Filename
      do Assign-RTI-FileName
  #endif

  #if {SITE_ID} = 'BKR1'    !Begin Add 06/07/01 DWC
      let $Date-Prefix   = datetostr(datenow(),'YYYY-MM-DD')
      let $Common-Prefix = '{ADP_TAX_QRTRLY_RPT_PREFIX}' || $Date-Prefix || '.quarter_' || $RptYear || '_' || $RptQtr
      let $Filename    = $Common-Prefix || '.dat'
      let $RepFileName = $Common-Prefix || '.prn'
      show 'Full Report FileName =   ' $RepFileName
      new-report $RepFileName
  #endif                         !End Add 06/07/01 DWC

  #if {SITE_ID} = 'DBS1'
    DO NEW-FILE-NAME('{QUARTERLY_REPORT_ID}', ' ', 'I', ' ', $Filename)
  #endif

  #if {SITE_ID} = 'BLK1'
    #ifndef MVS
     let #len = length($sqr-report)
     let #lenm3 = #len - 3
     let $Filename = substr($sqr-report,1,#lenm3) || 'dat'
     show 'BLK1 Filename ' $Filename
    #endif
  #endif
  
  #if {SITE_ID} = 'ELR1'
    Do getpath
    let $Filename =$py_outbound_data_file_path || || 'pbzqtr_' || rtrim($prcs_process_instance,' ') || '.dat'
  #endif

  ! added 9/22/98 ver 005 to use fileprefix
  ! ---------------------------------------
  #ifdef Use_Fileprefix
     #ifdef Fileprefix_Env_Var
       let $Fileprefix = getenv('{Fileprefix_Env_Var}')
     #endif
     display 'Fileprefix = ' noline
     display $FilePrefix
     let $Filename = $FilePrefix || '{Quarterly_Extract_Filename}'
  #endif

tts_end:

#if {SITE_ID} = 'WEY1'
begin-select
to_char(sysdate,'yyyymmddhhmiss') &sysdate_yyyymmddhhmiss

    let $Folder = '{FILEPREFIX_WIA_OUT}'
    let $work.wey_filename = 'HumanResources.adp001.PTP242.' || &sysdate_yyyymmddhhmiss   
    let $Filename = $Folder || $work.wey_filename    

from dual
end-select
#endif

end-procedure


#endif  ! ADP_TAX_QUARTERLY


! ----------------------------------------------- Common routines -----------------------------------


#if {SITE_ID} = 'INT1'

begin-procedure Get-local-Settings
begin-select
G1.LOCAL_FILE_DIR
 FROM PS_IN_IBP_GLOBAL G1
#ifdef SELECT_WITH_UR
 {SELECT_WITH_UR} with ur
#endif
end-select
end-procedure Get-local-Settings

#endif


#if {SITE_ID} = 'PLP1'

!**********************************************************************
Begin-Procedure ftp-Files-PH       ! Added ftp of quarter.dat 1/12/00 BRB
!**********************************************************************

let $exe_path = getenv('PS_HOME') || '/bin/pbzqtr.ksh'

show ' '
show 'Command line: ' $exe_path

call system using $exe_path #com_status
show 'Status ' #com_status

!**********************************************************************
End-Procedure  ftp-Files
!**********************************************************************

#endif



#if {SITE_ID} = 'FBI1'
begin-PROCEDURE Get-Database-Name-FBI1

   let $Database_Name = ''
 
begin-SELECT
DB_NAME() &DBNAME

    let $Database_Name = rtrim(&DBNAME,' ')

  from PS_INSTALLATION DB
end-SELECT
    show 'Get-Database-Name-FBI1 = ' $Database_Name
end-PROCEDURE   Get-Database-Name
#endif


#if {SITE_ID} = 'PRT1'

begin-procedure get_database_name-PRT1
begin-select
name
   let $database = &name
   from v$database
#ifdef SELECT_WITH_UR
 with ur
#end-if
end-select
end-procedure
#endif

#if {SITE_ID} = 'SIE1'
begin-procedure get_database_name
begin-select
name
   let $database = &name
   from v$database
#ifdef SELECT_WITH_UR
 with ur
#end-if
end-select
end-procedure
#endif

#if {SITE_ID} = 'LLN1'
begin-procedure get_database_name-lln1

Begin-Select
GN.Global_Name

   let $database_name = &GN.Global_Name

 from SYS.Global_Name GN
End-Select

    show 'LLN1: Database_Name: ' $database_name

end-procedure
#endif


#if {SITE_ID} = 'SCR1'
begin-procedure get_database_name-scr1
begin-select
scr1.name

   let $database = &scr1.name

   from v$database scr1

#ifdef SELECT_WITH_UR
 with ur
#end-if
end-select

end-procedure
#endif

#if {SITE_ID} = 'CZB1'
!***********************************************************************
! PROCEDURE Get-DataBase-Name
!***********************************************************************
begin-procedure Get-DataBase-Name
    #ifdef debugp
       show 'PROCEDURE Get-DataBase-Name'
    #endif
    
   Let $DataBase_Name = 'Unknown'

Begin-select
db.dbname
    let $DataBase_Name = &db.dbname  
from psdbowner db
end-select
end-procedure   !Get-DataBase-Name
#endif



#if {SITE_ID} = 'NGS1'
Begin-Procedure Bulid-path-NGS1

  let $FILEPREFIX_Natl_Geo = '{FILEPREFIX}'

BEGIN-SELECT
NGZ.DBNAME

 LET $FILEPREFIX_Natl_Geo = 'K:\Benefit_Vendors\' || &NGZ.DBNAME || '\ADP_Taxes\'

FROM PSDBOWNER NGZ
END-SELECT
#ifdef SELECT_WITH_UR
 WITH UR
#endif
End-Procedure
#endif




#if {SITE_ID} = 'SCP1'
!***********************************************************************
! PROCEDURE Get-DataBase-Name
!***********************************************************************
begin-procedure Get-DataBase-Name-sci1
    
   Let $DataBase_Name = 'Unknown'

Begin-select
db.dbname
    let $DataBase_Name = &db.dbname  
 from psdbowner db
end-select

 show 'SCI1: database name = ' $database_name

end-procedure   !Get-DataBase-Name

#endif

#if {SITE_ID} = 'ACL1'
begin-procedure Get-DB-Name-ACL1

begin-SELECT
ACL1.DBNAME 
  let $prcs_dbname = ltrim(rtrim(&ACL1.DBNAME,' '),' ')
FROM PSPRCSRQST ACL1
WHERE PRCSINSTANCE = #prcs_process_instance
end-SELECT

  show 'Get-DB-Name-ACL1: Instance: ' #prcs_process_instance  ' dbname: ' $prcs_dbname

end-procedure Get-DB-Name
#endif


!------------------------------------------------------------------------------------

#ifdef PROD_DBNAME

#ifdef MICROSOFT
begin-PROCEDURE get-tts-standard-database-name

   let $Database_Name = ''
 
begin-SELECT
DB_NAME() &DBNAME

    let $Database_Name = rtrim(&DBNAME,' ')

  from PS_INSTALLATION DB
end-SELECT
    show 'Microsoft: get-tts-standard-database-name, db_name = ' $Database_Name
end-PROCEDURE   Get-Database-Name
#else

#ifdef DATABASE_NAME_PSDBOWNER_DBNAME

begin-procedure get-tts-standard-database-name

begin-select 
dbtts.dbname
  
    let $DataBase_Name = &dbtts.dbname  
    from psdbowner dbtts 
    
end-select
  
    show 'get-tts-standard-database-name: psdbowner.dbname = ' $Database_Name
end-procedure
 
 
 
 
#else

begin-procedure get-tts-standard-database-name

   Let $DataBase_Name = 'Unknown'

#ifdef ORACLE
Begin-select
dbtts.name

    let $DataBase_Name = &dbtts.name  
    from v$database dbtts

end-select

#else

begin-select
OWNERID
 
  let $DataBase_Name = &OWNERID

  #if {Peoplesoft_Version} >= '8'
    from PSSTATUS 
  #else
    from PSLOCK
  #endif

#ifdef SELECT_WITH_UR
 {SELECT_WITH_UR} with ur
#endif
end-select

#endif

  show 'get-tts-standard-database-name.  $Database_name = ' $Database_name

end-procedure   !get-tts-standard-database-name
#endif          !DATABASE_NAME_PSDBOWNER_DBNAME
#endif          !Microsoft
#endif          !PROD_DBNAME


#if {SITE_ID} = 'PMI1'
Begin-procedure Get-DBName-PMI

BEGIN-SELECT
PMI.DBNAME

  let $dbname = &PMI.DBNAME
  LOWERCASE $dbname

FROM PSDBOWNER PMI
END-SELECT

 SHOW 'Get-DBName-PMI: $DBName =' $dbname

End-procedure 
#endif

#if {SITE_ID} = 'SGB1'
Begin-Procedure Get-database-name-SGB1
 
Begin-Select  
DBNAME  &V_DBNAME
 
 let $DBNAME = &V_DBNAME 
 
FROM PSDBOWNER
End-Select
 
  let $adp_tax_out = '/apps/psoft/' || $DBNAME || '/user/datafiles/interfaces/payroll/outbound/adp/adp_tax/'
  show 'Get-database-name-SGB1: ' $adp_tax_out
  
End-Procedure
#endif

#if {SITE_ID} = 'RCC1'
#ifdef UNIX 
begin-procedure Convert-Files-RCC1

   let $cmd = '{UTILITYPATH}copy2dosfile ' || $Filename || ' ' || $Folder || 'tfqtrly.dos' 
   Call System Using $cmd #Cmd_status 

   If #Cmd_Status <> 0 
      Show 'Error executing UNIX command ' $cmd 
   end-if 

   let $ren = 'mv ' || $Folder || 'tfqtrly.dos ' || $Filename 
   Call System Using $ren #Ren_status 

   If #Ren_status <> 0 
     Show 'Error executing UNIX command ' $ren 
   end-if 

   show 'Convert-Files-RCC1:   $cmd ' $cmd
   show '                      $ren ' $ren
   show ' '


End-Procedure
#endif 
#endif


#ifdef USE_PSOPTIONS

!	SYSTEMTYPE       DESCRIPTION   
!	               
!	CNV      Conversion Database   
!	DEV      Development Database  
!	DMO      Demo Database 
!	INT      Integration Test Database     
!	PAR      Parallel Test Database
!	PRD      Production Database   
!	SND      Sandbox Database      
!	STG      Stage Database
!	STS      System Test Database  
!	TRN      Training Database     
!	UAT      User Acceptance Test Database 
!	UND      Undefined Database    

!***********************************************************************
! PROCEDURE Get-PSOPTIONS-ADP
!***********************************************************************
begin-procedure Get-PSOPTIONS-ADP

Begin-select
PSO.SYSTEMTYPE
    let $SystemType = &PSO.SYSTEMTYPE
FROM PSOPTIONS PSO
#ifdef SELECT_WITH_UR
 WITH UR
#endif
end-select

   if $SystemType = 'PRD'
     show '$SystemType = ' $SystemType
     let $Cert_Prod = 'p'
   else
     show '$SystemType = ' $SystemType
     let $Cert_Prod = 'c'
   end-if

end-procedure   !Get-PSOPTIONS-ADP
#endif

#if {SITE_ID} = 'TRO1'
begin-procedure get-dbname-TRO1
begin-select
global_name
 
    let #period = instr(&global_name,'.'1)
    let $dbname = substr(&global_name,1,#period - 1)
 
from global_name
end-select
end-procedure

#endif

#if {SITE_ID} = 'PMH1'
begin-procedure PMH1-filename
BEGIN-SELECT 
PMH1.SHORTNAME 

  let $Database_Name = &PMH1.SHORTNAME
  FROM PSOPTIONS PMH1

#ifdef SELECT_WITH_UR
 {SELECT_WITH_UR} with ur
#end-if
end-select

end-procedure
#endif

#if {SITE_ID} = 'CIB1'
begin-procedure Ciber-filename

 let $CIB1_Table  = 'PS_CB_IO_SETUP'

BEGIN-SELECT
CIB1.IOINPUTNAME
CIB1.IOOUTPUTNAME

  LET $Folder = &CIB1.IOOUTPUTNAME

  FROM [$CIB1_Table] CIB1
  WHERE CIB1.PRCSNAME = 'PBZQTR'
#ifdef SELECT_WITH_UR
 {SELECT_WITH_UR} with ur
#end-if
end-select
 
  #ifdef PERIODIC_EXTRACT
    let $Filename = $Folder || '{PERIODIC_EXTRACT}'
  #else
    #ifdef PBZPER_release !$renamefile flag is defind in pbzper sqr 
      let  $FileDate = substr($ReportDate,1,2) || substr($ReportDate,4,2) || substr($ReportDate,7,4) 
      let $prcs_inst = ltrim(edit(#prcs_process_instance,'9999999'),' ')
      let $fname = 'Periodic_'||$payrunid ||'_'||$FileDate||'_'||$prcs_inst||'.dat'
      let $Filename = $Folder || $fname     
    #endif
  #endif

end-procedure
#endif

