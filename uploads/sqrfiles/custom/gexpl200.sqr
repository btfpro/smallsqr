!***********************************************************************
!  GEXPL200:  Pension (not eligible) for COD Clerks                    *
!             Select those 'RFI' EE's with < 12 months service, NOT    *
!             enrolled in Pension plan.  If Officer Code = 'G' print   *
!             on report, if NOT, only print if service < 6 months.     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPL602:             Pension (not eligible) for COD Clerks          *
!                                                                      *
! Narrative:		This program creates a monthly report for      *
!                       COD clerks that contains employee              *
!                       information required by the union to           *
!                       administer the pension benefit.                *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!			#debug8 key variable values                    *
!			#debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:		pay_calendar                                   *
!                       ben_defn_pgm                                   *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                       ben_prog_partic                                *
!                       earnings_bal                                   *
!                       health_benefit                                 *
!                                                                      *
! Written by:		Susan Mahady                                   *
!                                                                      *
! Normally Run:		Monthly                                        *
!                                                                      *
! Control Parms:	FOR WHERE CLAUSE:                              *
!                         Plan Type(s)                                 *
!                         Benefit Program(s)                           *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIAL    DATE         DESCRIPTION OF THE CHANGE                    *
!***********************************************************************
!  SCM     03/14/2001     Initial Creation                             *
!                                                                      *
!  PSR     08/06/2002     Modified UNION_CD FROM JOB_LABOR TO JOB      * 
!                               - Upgrade 8.3                          * 
!  PSR     08/27/2002     EMPL_RCD is now part of the key for 
!                         PS_EARNINGS_BAL - Upgrade 8.3
!           GEX-CXB 10/05/2007   Upgrade 9.0 Changes.
! GEX_SEC_REENG 2015-04-29 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#include 'setup32.sqc'   !Printer and page-size initialization

#define #column1     1
#define #column2     35
#define #column3     48
#define #column4     58
#define #column5     72
#define #column6     85
#define #column7     99
#define #column8    106
#define #column9    116
#define #column10   127
#define #column10_Tot  122
#define #column11   144
#define #column12   153

Begin-Heading 8
#debug9 Show 'Begin-Heading'

#Include 'stdhdg01.sqc'

  Do P230-Get-Benefit-Program-Name

  Print 'Ben Pgm:'             (3,1)
  Print $Benefit_Program       (3,13)
  Print $BenefitProgramDescr   (3,) Center

  Print $Reporting_Period      (4,) Center 

  print 'EMPL'                 (+2,{#column3})
  print 'SERVICE'              (+0,{#column4})
  print 'LAST DATE'            (+0,{#column5})
  print 'BIRTH'                (+0,{#column6})
  print '    MTD'              (+0,{#column10})
  print 'UNION'                (+0,{#column11})
  
  print 'EMPLOYEE NAME'        (+1,{#column1}) 
  print 'SSN'                  (+0,{#column2})
  print 'STATUS'               (+0,{#column3})
  print 'DATE'                 (+0,{#column4})
  print 'WORKED'               (+0,{#column5})
  print 'DATE'                 (+0,{#column6})
  print 'SEX'                  (+0,{#column7})
  print 'DEPTID'               (+0,{#column8}) 
  print 'JOBCODE'              (+0,{#column9}) 
  print '    HOURS'            (+0,{#column10})
  print 'CODE'                 (+0,{#column11})
  print 'COMPANY'              (+0,{#column12})
  
  print '-'                    (+1,{#column1},30)  FILL
  print '-'                    (+0,{#column2},09)  FILL
  print '-'                    (+0,{#column3},06)  FILL
  print '-'                    (+0,{#column4},10)  FILL
  print '-'                    (+0,{#column5},09)  FILL
  print '-'                    (+0,{#column6},10)  FILL
  print '-'                    (+0,{#column7},03)  FILL
  print '-'                    (+0,{#column8},05)  FILL
  print '-'                    (+0,{#column9},07)  FILL
  print '-'                    (+0,{#column10},09) FILL
  print '-'                    (+0,{#column11},05) FILL
  print '-'                    (+0,{#column12},07) FILL
   
End-Heading

Begin-Report
#debug9 Show 'Begin-Report'

  !Do Set-Optimizer-Goal    !Jyotsna - 03/11/2016 - PTools Upgrade

  Do Init-DateTime
  Do Init-Number
  Do Get-Current-DateTime
  Do Stdapi-Init

  Do P100-Start
  Do P200-Main-Process
  Do P300-Finish

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
End-Report


Begin-Procedure Set-Optimizer-Goal
  Begin-SQL
    !Alter Session Set OPTIMIZER_GOAL=RULE;	!GEX-CXB Commented for Upgrade 9.0 on 10/23/2007	
    Alter Session Set OPTIMIZER_MODE=RULE;	!GEX-CXB Added for Upgrade 9.0 on 10/23/2007	
  End-SQL
End-Procedure


Begin-Procedure P100-Start
#debug9 Show 'P100-Start'

  move 'GEXPL200'                                To $ReportID
  move 'PENSION (NOT ELIGIBLE) FOR COD CLERKS'   To $ReportTitle

  Show '$ReportID=' $ReportID
  Show '$ReportTitle=' $ReportTitle

  Let $GEXXX912_Plan_Type_Alias       = 'hb.plan_type'
  Let $GEXXX911_Benefit_Program_Alias = 'bpp.benefit_program'

  If $prcs_process_instance = ''

    Move '''' to $PlanTypeString
    Display 'Enter Plan Type or leave blank to exit.'
    While 1=1
      Input $PlanType Maxlen=2 'Plan Type'
      Uppercase $PlanType
      if RTRIM($PlanType, ' ') = ''
        concat '''' with $PlanTypeString
        break
      end-if
      if $PlanTypeString <> ''''
        concat ''',''' with $PlanTypeString
      end-if
      concat $PlanType with $PlanTypeString
    End-While

    if $PlanTypeString = ''''''
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
    else
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_Plan_Type_Alias || ' In (' || $PlanTypeString || ')'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
    end-if
   
    Let $BenefitProgramString = ''''
    Display 'Enter Benefit Program or leave blank to exit.'
    While 1=1
      Input $In-Benefit-Program Maxlen=3 'Benefit Program'
      Uppercase $In-Benefit-Program
      If Rtrim($In-Benefit-Program, ' ') = ''
        Concat '''' With $BenefitProgramString
        Break
      End-If
      If $BenefitProgramString <> ''''
        Concat ''',''' With $BenefitProgramString
      End-If
      Concat $In-Benefit-Program With $BenefitProgramString
    End-While

    If $BenefitProgramString = ''''''
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = $GEXXX911_Benefit_Program_Alias || ' In (' || $BenefitProgramString || ')'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
    End-If

  else
     Do GEXXX912-Select-Benefit-Plan-Parameters
     Do GEXXX911-Select-Benefit-Program-Parameters
 
  end-if
    
  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  If $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
    Display 'At least one plan type parameter must be specified'
    Stop
  End-If

  If $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
    Display 'At least one benefit program parameter must be specified'
    Stop
  End-If

  Let $X000_ORDER_BY = 'Benefit Program, Employee Name'

  Show '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA    = '   $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA
  Show '$GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = '   $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA
  
  Do Get-Calendar-Year-Id    !getbalid.sqc

  Do P140-Get-Last-Confirmed-Pay
  Do P150-Print-Cover-Page

End-Procedure

!**********************************************
Begin-Procedure P140-Get-Last-Confirmed-Pay
!**********************************************
#debug9 Show 'P140-Get-Last-Confirmed-Pay'
 
Begin-Select
pay_period
pay_end_dt
To_Number(To_Char(pay_end_dt,'MM'))          &balance_period
To_Number(To_Char(pay_end_dt,'YYYY'))        &balance_year
To_Char(pay_end_dt,'fmMonth YYYY')           &period
Last_Day(pay_end_dt)                         &current_month_end

  Let $AsOfDate         = &pay_end_dt
  Let $pay_end_dt       = &pay_end_dt
  Let #balance_year     = &balance_year
  Let #balance_period   = &balance_period
  Let $Reporting_Period = &period

  let #balance_qtr = #balance_period
  let #balance_qtr = ((#balance_qtr - 1)/ 3) + 1
  do Format-Number(#balance_qtr, $balance_qtr, '9.99') !avoid rounding the integer portion
  move $balance_qtr to $balance_qtr x     !save the integer portion
  let #balance_qtr = $balance_qtr

  Show 'Report will contain balances for the month of ' $Reporting_Period
  Show 'Last confirmed pay end date:  ' $pay_end_dt

  Do P145-Get-First-Pay-Period

  If Rtrim($pay_end_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  End-If

From   ps_pay_calendar

Where  company                = 'GEI'
And    paygroup               = 'RET'

And    pay_end_dt             =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  company         = 'GEI'
       And    paygroup        = 'RET'
       And    pay_end_dt     <= $AsOfToday
       And    pay_confirm_run = 'Y')

And    pay_confirm_run = 'Y'
End-Select
End-Procedure

!******************************************
Begin-Procedure P145-Get-First-Pay-Period
!******************************************
#debug9 Show 'P145-Get-First-Pay-Period'
Begin-Select
pay_end_dt &first_pay_end_dt

  Let $first_pay_end_dt = &first_pay_end_dt
  display '$first_pay_end_dt ==> ' noline
  display $first_pay_end_dt

From   ps_pay_calendar

Where  company    = 'GEI'
And    paygroup   = 'RET'
And    To_Char(check_dt,'YYYYMM')
                  = To_Char(To_Date($pay_end_dt),'YYYYMM')
And    pay_period = 1
End-Select
End-Procedure

!*************************************
begin-procedure P150-Print-Cover-Page
!*************************************
#debug9 Show 'P150-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,1)
  Print '$Prcs_OPRID          = '                             (+2,5)
  Print $Prcs_OPRID                                           (0,+2)
  Print '$PRCS_RUN_CNTL_ID    = '                             (+1,5)
  Print $PRCS_RUN_CNTL_ID                                     (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                   (+5,2)
  Print '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA     = '    (+2,5)
  Print $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA             (0,+2)
  Print '$GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA  = '    (+2,5)
  Print $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA          (0,+2)
 
  Print 'Report will contain balances for the month of'       (+2,5)
  Print $Reporting_Period                                     (0,+1)
  Print 'Last confirmed pay end date:'                        (+2,5)
  Print $pay_end_dt                                           (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $X000_ORDER_BY                                        (+2,5)

  Let #PAGE-COUNT = 0
  New-Page
End-Procedure

!***********************************
Begin-Procedure P200-Main-Process
!***********************************
#debug9 Show 'P200-Main-Process'

Let #BP-MTD-Hours           = 0
Let #Deptid-MTD-Hours       = 0

Begin-Select
bpp.benefit_program  ()     On-Break   Level=1
                                       Print=Never
                                       Save=$Save_Benefit_Program
                                       After=P290-After-BP-Break
j.deptid             ()     On-Break   Level=2
                                       Print=Never
                                       Skiplines=2
                                       Save=$Save_Deptid
                                       After=P295-After-Deptid-Break
bpp.emplid
bpp.empl_rcd
bpp.cobra_event_id
J.UNION_CD
e.service_dt

pd.name
pd.birthdate
pd.emplid   
pd.sex
pd.address1
pd.address2
pd.city
pd.state
pd.postal   

j.emplid
j.empl_rcd
j.effdt
j.company
j.jobcode
j.empl_status
j.officer_cd
j.last_date_worked

  Let $Benefit_Program = &bpp.benefit_program
  Let $Health-Benefit-Row-Found = 'N'

  Do P210-Health-Benefit

  If ($Health-Benefit-Row-Found = 'N') Or
     (&hb.coverage_elect = 'T')
    Let $Data-Found-Flag = 'Y'

    Let $spcl_balance = '''Y'''
    Let $erncd = '(''WK2'')'
    Do P250-Get-Hours
 
    Do P205-Setup-Dates
 
    If &j.officer_cd = 'G'           !print if 'G' and service between 0 and 12 months
      Do P270-Print-Record
    else
      if #months_absval < 6          !print if NOT 'G' and service between 0 and 6 months
         Do P270-print-record
      end-if
    end-if
   
  End-If

From   ps_personal_data          pd,
       ps_employment             e,
       ps_job                    j,
       ps_ben_prog_partic        bpp 

Where [$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA]

And    bpp.effdt                 =
      (Select Max(effdt)
       From   ps_ben_prog_partic
       Where  emplid             = bpp.emplid
       And    empl_rcd          = bpp.empl_rcd
       And    cobra_event_id     = bpp.cobra_event_id
       And    effdt             <= $pay_end_dt)

And    j.emplid                  = bpp.emplid
And    j.empl_rcd               = bpp.empl_rcd
And    j.empl_status               In ('A', 'L', 'P', 'U')            !ONLY ACTIVES, NO Terms
!And    j.company                 = 'RFI'  !ISDVDZK  S3 11975610

And    pd.emplid                 = bpp.emplid
And    e.emplid                  = bpp.emplid
And    e.empl_rcd               = bpp.empl_rcd

And    j.effdt                   =
      (Select Max(effdt)
       From   ps_job
       Where  emplid             = bpp.emplid
       And    empl_rcd          = bpp.empl_rcd
       And    effdt             <= $pay_end_dt)

And    j.effseq                  =
      (Select Max(effseq)
       From   ps_job
       Where  emplid             = j.emplid
       And    empl_rcd          = j.empl_rcd
       And    effdt              = j.effdt)

And Months_Between($first_pay_end_dt,e.service_dt) Between 0 and 12   !only select those with < 12 months service

Order By bpp.benefit_program, j.deptid, pd.name

End-Select

End-Procedure

!*************************************
Begin-Procedure P205-Setup-Dates
!*************************************
#debug9 Show 'P205-Setup-Dates'

!******   $first_pay_end_dt and &e.service_dt are coming in like this:    30-DEC-2000
!******   format dates to look like this:  12/30/2000  (for converting date to native format)    
    
  Let $service_dt = &e.service_dt
  Let $Year4 = '1'                                                  !use this to return 4 digit year                   
  Do Format-DateTime ($service_dt, $begindate, {DEFMDY}, '', '')
  Let $Year4 = '1' 
  Do Format-DateTime ($first_pay_end_dt, $enddate, {DEFMDY}, '', '')

!*******  $begindate and $enddate look like 12/30/2000.  Convert to 30-Dec-2000 (native)for calc.

  do Format-DateTime($begindate,$begin_dt,{DEFMDY},'','native')
  do Format-DateTime($enddate,$end_dt,{DEFMDY},'','native')

  do Diff-Date($begin_dt,$end_dt,#years,#months,#days)
!  Diff-Date calc returns #months as negative number, use absolute value function to make positive
  let #months_absval = abs(#months) 

!************  setup dates for printing---reformat from 17-NOV-2001 to 11/17/2001
  Let $Year4 = '1' 
  Do Format-DateTime($Service_dt, $Service_dt_reformat, {DEFMDY}, '', '')
  let $Birthdate = &pd.birthdate
  Let $Year4 = '1'     
  Do Format-DateTime($Birthdate, $Birthdate_reformat, {DEFMDY}, '', '')
  Let $last_Date_Worked = &j.last_date_worked
  Let $Year4 = '1' 
  Do Format-DateTime($last_date_worked, $last_Date_Worked_reformat, {DEFMDY}, '', '')

end-procedure

!************************************** 
Begin-Procedure P210-Health-Benefit
!************************************** 
#debug9 Show 'P210-Health-Benefit'

Begin-Select
hb.coverage_elect

  Let $Health-Benefit-Row-Found = 'Y'

From   ps_health_benefit hb

Where  hb.emplid              = &bpp.emplid
And    hb.empl_rcd           = &bpp.empl_rcd
And    hb.cobra_event_id      = &bpp.cobra_event_id

And   [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]

And    hb.coverage_begin_dt   =
      (Select Max(coverage_begin_dt)
       From   ps_health_benefit
       Where  emplid          = hb.emplid
       And    empl_rcd       = hb.empl_rcd
       And    cobra_event_id  = hb.cobra_event_id
       And    plan_type       = hb.plan_type
       And    benefit_nbr        = hb.benefit_nbr
       And    effdt          <= $pay_end_dt)
End-Select
End-Procedure

!**********************************************
Begin-Procedure P230-Get-Benefit-Program-Name
!**********************************************
#debug9 Show 'P230-Get-Benefit-Program-Name'

Begin-Select
bdp.descr

  Let $BenefitProgramDescr = &bdp.descr

From   ps_ben_defn_pgm   bdp
Where  bdp.benefit_program    = $benefit_program
And    bdp.effdt              =
      (Select Max(effdt)
       From   ps_ben_defn_pgm
       Where  benefit_program = bdp.benefit_program
       And    effdt          <= $pay_end_dt)
End-Select
End-Procedure

!************************************ 
Begin-Procedure P250-Get-Hours
!************************************
#debug9 Show 'P250-Get-Hours'

  Let #hrs_mtd = 0

Begin-Select
eb.balance_period
eb.hrs_mtd

  If &eb.balance_period = #balance_period
    Add &eb.hrs_mtd To #hrs_mtd
  End-If

From   ps_earnings_bal eb

Where  eb.emplid              = &j.emplid
And    eb.company             = &j.company
And    eb.balance_id          = 'CY'
And    eb.balance_year        = #balance_year
And    eb.empl_rcd            = &j.empl_rcd

And    eb.balance_period      =
      (Select Max(balance_period)
       From   ps_earnings_bal
       Where  emplid          = eb.emplid
       And    company         = eb.company
       And    balance_id      = eb.balance_id
       And    balance_year    = eb.balance_year
       And    balance_period <= #balance_period
       And    spcl_balance    = eb.spcl_balance
       And    empl_rcd        = eb.empl_rcd
       And    erncd           = eb.erncd)

And    eb.spcl_balance        = [$spcl_balance]
And    eb.erncd              In [$erncd]
End-Select
End-Procedure

!*************************************
Begin-Procedure P270-Print-Record
!*************************************
#debug9 Show 'P270-Print-Record'

  Add 1 To #BP-Recs-Printed
  Add 1 To #Deptid-Recs-Printed
  do Get-Emp-Ssn (&pd.emplid, $Ssn_Out) !GEX_SEC_REENG 2015-04-29 Vahini Katta
  Print &pd.name                        (+1,{#column1},30)
  !Print &pd.emplid                      (+0,{#column2}) !GEX_SEC_REENG 2015-04-29 Vahini Katta
  Print $Ssn_Out                         (+0,{#column2})  !GEX_SEC_REENG 2015-04-29 Vahini Katta
  Print &j.empl_status                  (+0,{#column3})
  Print $Service_dt_reformat            (+0,{#column4})
  Print $last_Date_Worked_reformat      (+0,{#column5})
  Print $Birthdate_reformat             (+0,{#column6})
  Print &pd.sex                         (+0,{#column7})
  Print &j.deptid                       (+0,{#column8})
  Print &j.jobcode                      (+0,{#column9})
  Print #hrs_mtd                        (+0,{#column10})  Edit 99,999.99
  Print &J.UNION_CD                    (+0,{#column11}) 
  Print &j.company                      (+0,{#column12}) 

  Add #hrs_mtd to #BP-MTD-Hours
  Add #hrs_mtd to #Deptid-MTD-Hours
End-Procedure

!*************************************
Begin-Procedure P290-After-BP-Break
!*************************************
#debug9 Show 'P290-After-BP-Break'

  If #BP-Recs-Printed > 0
    Print '** Benefit Program'        (+3,{#column2})
    Print $Save_Benefit_Program      (0,+1)
    Print 'Totals'                   (0,+1)

    Print #BP-MTD-Hours              (+0,{#column10_Tot})   Edit 999,999,999.99

    Let #BP-MTD-Hours           = 0
    
    New-Page
    Let #BP-Recs-Printed = 0
  End-If
End-Procedure

!*****************************************
Begin-Procedure P295-After-Deptid-Break
!*****************************************
#debug9 Show 'P295-After-Deptid-Break'

  If #Deptid-Recs-Printed > 0
    Print '** Deptid'               (+3,{#column2})
    Print $Save_Deptid             (0,+1)
    Print 'Totals'                 (0,+1)

    Print #Deptid-MTD-Hours        (+0,{#column10_Tot})  Edit 999,999,999.99

    Let #Deptid-MTD-Hours           = 0
    
!    New-Page
    Let #Deptid-Recs-Printed = 0
  End-If
End-Procedure

!******************************
Begin-Procedure P300-Finish
!******************************
#debug9 Show 'P300-Finish'

  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
End-Procedure


#include 'gexxx912.sqc'  !Get plan type multiple row table
#include 'gexxx911.sqc'  !Get benefit program multiple row table
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'number.sqc'    !Routines to format numbers
#Include 'reset.sqc'     !Reset printer Procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'getgeid.sqc'   !Get SSN !GEX_SEC_REENG 2015-04-29 Vahini Katta
