!***********************************************************************
! GEXBN822: DELETE INVALID TERMINATION ROW                             *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!  NARRATIVE:  Invalid Termination Row                                 *
!                                                                      *
!  This sqr will correct a Ben Admin bug that exists with plans that   *
!  have grace periods defined.  It will find back-to-back  invalid     *
!  term rows in base benefit tables and associated child tables        * 
!                                                                      *
!  RUN FREQUENCY:                                                      *
!                                                                      *
!  Daily -                                                             *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *  
!***********************************************************************
!  GBNC078   SXK       11/25/1998     INITIAL CREATION                 *
!  GBCN078   SXK       04/19/1999     Modified to be able to delete    *
!				      future rows if employee gets     *
!				      terminated during the grace      *
!                                     period.                          *
!            SXC       04/27/2000     Program was validating that the  *
!                                     coverage_begin_dt that it was    *
!                                     going to delete was >= sysdate   *
!                                     Removed this condition.          *
!                                     Also checked to see if another row*
!                                     exists, where coverage_elect= 'T'*
!                                     and covg begin dt <= initial covg*
!                                     begin dt & covg elect dt >=      *
!                                     asofdt minus 1 day.              *
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-setup

#include 'setup32a.sqc'

declare-report Report-log
Printer-Type=HPLASERJET
  layout=DEFAULT
end-declare

end-setup


!*********************************************************************
!Initial processing, retrieving current dates, etc. 
!*********************************************************************
begin-report
#debug9 show 'GEXBN822.begin-report'

  use-report Report-log

  do Init-DateTime
  do Init-Number
  do stdapi-init
  
  move 'GEXBN822' to $ReportID
  move 'Delete Invalid Termination Row' to $ReportTitle
  show '$ReportID=' $ReportID
  show '$ReportTitle=' $ReportTitle 

  do Get-Current-DateTime
  show '$asoftoday=' $asoftoday 
  show '$reportdate=' $reportdate 
  
  do Report

!  do rollback-transaction                      !**debug**remove
  do Commit-Transaction                 

  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term

end-report

!*********************************************************************
!If this Program is being executed through process scheduler, 
!the run control parameters and calls the main processing procedure.
!Otherwise, interrogates the user for the run control parameters and 
!validates them. If the run control parameters are invalid, stops the
!execution.
!*********************************************************************
begin-procedure Report
#debug9 show 'GEXBN822.report'

date-time () hh:mi:ss &timeBegan
display 'Report Began: ' noline
display &timeBegan

  move 'N' to $Errorfound

  move $asoftoday to $where_select_date
  
  show '$where_select_date= ' $where_select_date

  do Main-Process

Report-Exit:

  date-time () hh:mi:ss &timeProcess

  display 'Records Deleted ' noline
  display 'From Health Benefit:     ' noline
  display #del_HB 999999
  display '    Records Deleted ' noline
  display 'From Health Dependents: ' noline
  display #del_HB_dep 999999
  display 'Records Deleted ' noline
  display 'From Life Add Ben:       ' noline
  display #del_LA 999999
  display '    Records Deleted ' noline
  display 'From Life Add Dependents:   ' noline
  display #del_LA_dep 999999
  display 'Records Deleted ' noline
  display 'From Savings Plan:       ' noline
  display #del_SP 999999
  display '    Records Deleted ' noline
  display 'From Savings Beneficiaries:   ' noline
  display #del_SP_dep 999999
  display '    Records Deleted ' noline
  display 'From Savings Investments:   ' noline
  display #del_SP_dep_1 999999
  display 'Records Deleted ' noline
  display 'From Disability Ben:     ' noline
  display #del_DB 999999
  display 'Records Deleted ' noline
  display 'From Fsa Benefit:        ' noline
  display #del_FB 999999

  display 'Total Rows Deleted:  ' noline 
  display #delete_count 999999

  print  'Records Deleted '           (+2,1)
  print 'From Health Benefit:     '       ()
  do Format-Number(#del_HB,$del_HB,'999999')
  print $del_HB                           ()
  print  'Records Deleted '           (+1,7)
  print 'From Health Dependents: '    ()
  do Format-Number(#del_HB_dep,$del_HB_dep,'999999')
  print $del_HB_dep                       ()
  print  'Records Deleted '           (+1,1)
  print 'From Life Add Ben:       '       ()
  do Format-Number(#del_LA,$del_LA,'999999')
  print $del_LA                           ()
  print  'Records Deleted '           (+1,7)
  print 'From Life Add Dependents: '  ()
  do Format-Number(#del_LA_dep,$del_LA_dep,'999999')
  print $del_LA_dep                       ()
  print  'Records Deleted '           (+1,1)
  print 'From Savings Plan:       '       ()
  do Format-Number(#del_SP,$del_SP,'999999')
  print $del_SP                           ()
  print  'Records Deleted '           (+1,7)
  print 'From Savings Beneficiaries:   '       ()
  do Format-Number(#del_SP_dep,$del_SP_dep,'999999')
  print $del_SP_dep                           ()
  print  'Records Deleted '           (+1,7)
  print 'From Savings Investments:   '       ()
  do Format-Number(#del_SP_dep_1,$del_SP_dep_1,'999999')
  print $del_SP_dep_1                           ()
  print  'Records Deleted '           (+1,1)
  print 'From Disability Ben:     '       ()
  do Format-Number(#del_DB,$del_DB,'999999')
  print $del_DB                           ()
  print  'Records Deleted '           (+1,1)
  print 'From Fsa Benefit:        '       ()
  do Format-Number(#del_FB,$del_FB,'999999')
  print $del_FB                           ()

  do Format-Number(#delete_count,$delete_count,'999999')
!  move #delete_count to $delete_count
  let $x000_temp_out =  'Total Rows Deleted:  ' || $delete_count
  print $x000_temp_out                (+1,1)

  Do Get-Current-DateTime
  Print 'End Time: ' (+2,1)
  Print $ReportDate      ()
  Print ' '              ()
  Print $ReportTime      ()

  display &timeProcess

end-procedure


!*********************************************************************
!Prints the header information in the report log.
!*********************************************************************

begin-heading 8 for-reports=(report-log)
#debug9 show 'GEXBN822.begin-heading'

if RTRIM($table_name,' ') <> ''
  concat '(From ' with $reporttitle
  concat $table_name with $reporttitle
  concat ')' with $reporttitle
end-if

 #Include 'stdhdg01.sqc'

!  date-time () DD-MON-YYYY &curr_Date 
!  print &curr_Date ()
  position (-1)
  print 'Report Log' () center bold

  position (+3)

  print '   Emplid   '            (,01) bold
  print 'Empl_Rcd'          (,13) bold
  print 'Plan Type'         (,25) bold
  print 'Coverage Begin Date'    (,39) bold
  print '   Effdt   ' (,62) bold
  print 'Coverage Elect Date' (,77) bold
!  print 'Deduction End Date' (,102) bold
!  print 'Benefit Plan'      (,57) bold
  print '-'             (+1,1,120) fill
 
end-heading


!*********************************************************************
!Prints the footer in the report log
!*********************************************************************

begin-footing 2 for-reports=(Report-log)
#debug9 show 'GEXBN822.begin-footing'

page-number (1,108) 'Page '  
last-page () ' of ' '.'

end-footing

!*******************************************************************
!Selects employees from base tables
!*******************************************************************
Begin-Procedure Main-Process
!Display 'GEXBN822.Main-Process'

 move 0 to #del_HB
 move 0 to #del_LA
 move 0 to #del_SP
 move 0 to #del_DB
 move 0 to #del_FB
 move 0 to #delete_count
 move 0 to #TotalInputTran

 do convert-to-dtu-date($asoftoday,$asoftoday_dtu)
 do dtu-add-days($asoftoday_dtu,-1,$yesterday_dtu)
 do convert-from-dtu-date($yesterday_dtu,$yesterday)
 display 'Yesterday:' noline
 display $yesterday

 display 'Processing Health Tables'
    Do Get-Health-Benefit
 display 'Processing Life Tables'
    Do Get-Life-Add-Ben
 display 'Processing Savings Tables'
    Do Get-Savings-Plan
 display 'Processing Disability Tables'
    Do Get-Disability-Ben
 display 'Processing FSA Tables'
    Do Get-Fsa-Benefit

end-procedure

!********************************************************************
begin-procedure Get-Health-Benefit
!********************************************************************

begin-select
HB.EMPLID
  move &HB.EMPLID to $emplid
HB.EMPL_RCD
  move &HB.EMPL_RCD to #empl_rcd
HB.PLAN_TYPE
   move &HB.PLAN_TYPE    to $plan_type
HB.EFFDT
   move &HB.EFFDT        to $effective_date
   add 1 to #totalinputtran

   Do Convert-to-dtu-date($effective_date, $effdt)
   let $effdt_yy = substr($effdt,1,4)
   let $effdt_mm = substr($effdt,6,2)
   let $effdt_dd = substr($effdt,9,2)
   
HB.BENEFIT_PLAN
   move &HB.BENEFIT_PLAN to $benefit_plan
HB.COBRA_EVENT_ID
HB.BENEFIT_NBR
HB.COVERAGE_BEGIN_DT
   move &HB.COVERAGE_BEGIN_DT to $coverage_begin_dt
HB.DEDUCTION_END_DT
   move &HB.DEDUCTION_END_DT to $deduction_end_dt
HB.COVERAGE_ELECT_DT
   move &HB.COVERAGE_ELECT_DT to $coverage_elect_dt

   move 'HEALTH BENEFIT TABLES' to $table_name

   Display $emplid
   Display #empl_rcd 
   Display &HB.PLAN_TYPE
   Display &HB.EFFDT
   Display &HB.BENEFIT_PLAN
   display &hb.coverage_begin_dt

   Do Print-Record
   Do Delete-HB-Record

FROM PS_HEALTH_BENEFIT HB
WHERE HB.COVERAGE_ELECT = 'T'
!SXK 04/16/1999 Begin
AND   ((HB.COVERAGE_ELECT_DT >= $yesterday
AND HB.COVERAGE_BEGIN_DT < (select max(coverage_begin_dt)
                                 from ps_health_benefit 
                                where coverage_elect = 'T'
                                  and plan_type = HB.PLAN_TYPE
                                  and emplid = HB.EMPLID
                                  and empl_rcd = HB.EMPL_RCD)
AND   NOT EXISTS(select 'x'
                   from ps_health_benefit
                  where emplid = HB.EMPLID
                    and empl_rcd = HB.EMPL_RCD
                    and plan_type = HB.PLAN_TYPE
                    and coverage_elect <> 'T'
                    and coverage_begin_dt >= HB.COVERAGE_BEGIN_DT)
!SXK 04/14/1999 Begin - EE should be in A,L, P status, if we are
!deleting the current term row and keeping the future term row
and   exists (select 'y'
                from ps_job j
		where j.emplid = hb.emplid
                  and j.empl_rcd = hb.empl_rcd
                  and j.empl_status in ('A','L','P')
		  and j.effdt = (select max(effdt)
				from ps_job 
				where emplid = j.emplid
				and empl_rcd = j.empl_rcd
				and effdt <= $AsOfToday)
		  and j.effseq = (select max(effseq)	
				from ps_job
				where emplid = j.emplid
				and empl_rcd = j.empl_rcd
				and effdt = j.effdt)))
OR
!SXK This part will be deleting the future term rows and keeps
!current term row. this has to happen only when EE status is not in
!A, L, P status.
(HB.COVERAGE_BEGIN_DT = (select max(coverage_begin_dt)
                                 from ps_health_benefit 
                                where coverage_elect = 'T'
                                  and plan_type = HB.PLAN_TYPE
                                  and emplid = HB.EMPLID
                                  and empl_rcd = HB.EMPL_RCD
                                  and 1 < (select count(*)
					from ps_health_benefit ex
					where ex.coverage_elect = 'T'
					and ex.plan_type = hb.plan_type
					and ex.emplid = hb.emplid
					and ex.empl_rcd = hb.empl_rcd))
! SXC 04/27/2000 begin
AND   EXISTS(select 'z'
                  from ps_health_benefit
                  where emplid = HB.EMPLID
                    and empl_rcd = HB.EMPL_RCD
                    and plan_type = HB.PLAN_TYPE
                    and coverage_elect = 'T'
                    and coverage_begin_dt <= HB.COVERAGE_BEGIN_DT
                    and COVERAGE_ELECT_DT >= $yesterday)
! SXC 04/27/2000 end
AND   NOT EXISTS(select 'x'
                   from ps_health_benefit
                  where emplid = HB.EMPLID
                    and empl_rcd = HB.EMPL_RCD
                    and plan_type = HB.PLAN_TYPE
                    and coverage_elect <> 'T'
                    and coverage_begin_dt <= HB.COVERAGE_BEGIN_DT
                    and coverage_begin_dt >= (select max(ex1.coverage_begin_dt)
						from ps_health_benefit ex1
						where ex1.coverage_elect = 'T'
						and ex1.plan_type = hb.plan_type
						and ex1.emplid = hb.emplid
						and ex1.empl_rcd = hb.empl_rcd
						and ex1.coverage_begin_dt < hb.coverage_begin_Dt))
and   exists (select 'y'
                from ps_job j
		where j.emplid = hb.emplid
                  and j.empl_rcd = hb.empl_rcd
                  and j.empl_status not in ('A','L','P')
		  and j.effdt = (select max(effdt)
				from ps_job 
				where emplid = j.emplid
				and empl_rcd = j.empl_rcd
				and effdt <= $AsOfToday)
		  and j.effseq = (select max(effseq)	
				from ps_job
				where emplid = j.emplid
				and empl_rcd = j.empl_rcd
				and effdt = j.effdt))))
!SXK 04/14/1999 End                  
!SXK 04/16/1999 End
ORDER BY HB.EMPLID, HB.EMPL_RCD, HB.PLAN_TYPE, HB.COVERAGE_BEGIN_DT                                  
end-select
end-procedure

!********************************************************************
begin-procedure Get-Life-Add-Ben
!********************************************************************
let $first_time = 'Y'
begin-select
LA.EMPLID
  move &LA.EMPLID to $emplid
LA.EMPL_RCD
  move &LA.EMPL_RCD to #empl_rcd
LA.PLAN_TYPE
   move &LA.PLAN_TYPE    to $plan_type
LA.EFFDT
   move &LA.EFFDT        to $effective_date

   Do Convert-to-dtu-date($effective_date, $effdt)
   let $effdt_yy = substr($effdt,1,4)
   let $effdt_mm = substr($effdt,6,2)
   let $effdt_dd = substr($effdt,9,2)

LA.BENEFIT_PLAN
LA.COVERAGE_BEGIN_DT
   move &LA.COVERAGE_BEGIN_DT to $coverage_begin_dt
LA.DEDUCTION_END_DT
   move &LA.DEDUCTION_END_DT to $deduction_end_dt
LA.COVERAGE_ELECT_DT
   move &LA.COVERAGE_ELECT_DT to $coverage_elect_dt

   move &LA.BENEFIT_PLAN to $benefit_plan
   add 1 to #totalinputtran
   if RTRIM($table_name,' ') <> '' and $first_time = 'Y'
      new-page
      let $first_time = 'N'
   end-if
   move 'LIFE TABLES' to $table_name
   unstring $reporttitle by '(' into $reporttitle $suffix

   Display $emplid
   Display #empl_rcd
   Display &LA.PLAN_TYPE
   Display &LA.EFFDT
   Display &LA.BENEFIT_PLAN
   Display &LA.COVERAGE_BEGIN_DT
   display &LA.COVERAGE_ELECT_DT
   

   Do Print-Record
   Do Delete-LA-Record

FROM PS_LIFE_ADD_BEN LA
WHERE LA.COVERAGE_ELECT = 'T'
AND   ((LA.COVERAGE_ELECT_DT >= $yesterday
AND   LA.COVERAGE_BEGIN_DT < (select max(coverage_begin_dt)
                                 from ps_life_add_ben
                                where coverage_elect = 'T'
                                  and plan_type = LA.PLAN_TYPE
                                  and emplid = LA.EMPLID
                                  and empl_rcd = LA.EMPL_RCD)
AND   NOT EXISTS(select 'x'
                   from ps_life_add_ben
                  where emplid = LA.EMPLID
                    and empl_rcd = LA.EMPL_RCD
                    and plan_type = LA.PLAN_TYPE
                    and coverage_elect <> 'T'
                    and coverage_begin_dt >= LA.COVERAGE_BEGIN_DT)
!SXK 04/14/1999 Begin - EE should be in A,L, P status, if we are
!deleting the current term row and keeping the future term row
and   exists (select 'y'
                from ps_job j1
		where j1.emplid = la.emplid
                  and j1.empl_rcd = la.empl_rcd
                  and j1.empl_status in ('A','L','P')
		  and j1.effdt = (select max(effdt)
				from ps_job 
				where emplid = j1.emplid
				and empl_rcd = j1.empl_rcd
				and effdt <= $AsOfToday)
		  and j1.effseq = (select max(effseq)	
				from ps_job
				where emplid = j1.emplid
				and empl_rcd = j1.empl_rcd
				and effdt = j1.effdt)))
OR
!SXK This part will be deleting the future term rows and keeps
!current term row. this has to happen only when EE status is not in
!A, L, P status.
(LA.COVERAGE_BEGIN_DT = (select max(coverage_begin_dt)
                                 from ps_life_add_ben 
                                where coverage_elect = 'T'
                                  and plan_type = LA.PLAN_TYPE
                                  and emplid = LA.EMPLID
                                  and empl_rcd = LA.EMPL_RCD
                                  and 1 < (select count(*)
					from ps_life_add_ben ex2
					where ex2.coverage_elect = 'T'
					and ex2.plan_type = la.plan_type
					and ex2.emplid = la.emplid
					and ex2.empl_rcd = la.empl_rcd))
! SXC 04/27/2000 begin
AND   EXISTS(select 'z'
                  from ps_life_add_ben
                  where emplid = LA.EMPLID
                    and empl_rcd = LA.EMPL_RCD
                    and plan_type = LA.PLAN_TYPE
                    and coverage_elect = 'T'
                    and coverage_begin_dt <= la.COVERAGE_BEGIN_DT
                    and coverage_elect_dt >= $yesterday)
! SXC 04/27/2000 end

AND   NOT EXISTS(select 'x'
                   from ps_life_add_ben
                  where emplid = LA.EMPLID
                    and empl_rcd = LA.EMPL_RCD
                    and plan_type = LA.PLAN_TYPE
                    and coverage_elect <> 'T'
                    and coverage_begin_dt <= la.COVERAGE_BEGIN_DT
                    and coverage_begin_dt >= (select max(ex3.coverage_begin_dt)
						from ps_life_add_ben ex3
						where ex3.coverage_elect = 'T'
						and ex3.plan_type = la.plan_type
						and ex3.emplid = la.emplid
						and ex3.empl_rcd = la.empl_rcd
						and ex3.coverage_begin_dt < la.coverage_begin_Dt))
and   exists (select 'y'
                from ps_job j3
		where j3.emplid = la.emplid
                  and j3.empl_rcd = la.empl_rcd
                  and j3.empl_status not in ('A','L','P')
		  and j3.effdt = (select max(effdt)
				from ps_job 
				where emplid = j3.emplid
				and empl_rcd = j3.empl_rcd
				and effdt <= $AsOfToday)
		  and j3.effseq = (select max(effseq)	
				from ps_job
				where emplid = j3.emplid
				and empl_rcd = j3.empl_rcd
				and effdt = j3.effdt))))
!SXK 04/14/1999 End                  
!SXK 04/16/1999 End

ORDER BY LA.EMPLID, LA.EMPL_RCD, LA.PLAN_TYPE, LA.COVERAGE_BEGIN_DT                                  
end-select
end-procedure

!********************************************************************
begin-procedure Get-Savings-Plan  
!********************************************************************
let $first_time = 'Y'
begin-select
SP.EMPLID
  move &SP.EMPLID to $emplid
SP.EMPL_RCD
  move &SP.EMPL_RCD to #empl_rcd
SP.PLAN_TYPE
   move &SP.PLAN_TYPE    to $plan_type
SP.EFFDT
   move &SP.EFFDT        to $effective_date
SP.COVERAGE_ELECT_DT
   move &SP.COVERAGE_ELECT_DT to $coverage_elect_dt
SP.DEDUCTION_END_DT 
   move &SP.DEDUCTION_END_DT to $deduction_end_dt

   Do Convert-to-dtu-date($effective_date, $effdt)
   let $effdt_yy = substr($effdt,1,4)
   let $effdt_mm = substr($effdt,6,2)
   let $effdt_dd = substr($effdt,9,2)

SP.BENEFIT_PLAN
   move &SP.BENEFIT_PLAN to $benefit_plan
SP.COVERAGE_BEGIN_DT
   move &SP.COVERAGE_BEGIN_DT to $coverage_begin_dt
   add 1 to #totalinputtran
   if RTRIM($table_name,' ') <> '' and $first_time = 'Y'
      new-page
      let $first_time = 'N'
   end-if
   move 'SAVINGS TABLES' to $table_name
   unstring $reporttitle by '(' into $reporttitle $suffix

   Display $emplid
   Display #empl_rcd
   Display &SP.PLAN_TYPE
   Display &SP.EFFDT
   Display &SP.BENEFIT_PLAN
   display &SP.COVERAGE_ELECT_DT
   DISPLAY &SP.COVERAGE_BEGIN_DT

   Do Print-Record
   Do Delete-SP-Record

FROM PS_SAVINGS_PLAN SP
WHERE SP.COVERAGE_ELECT = 'T'
AND   ((SP.COVERAGE_ELECT_DT >= $yesterday
AND   SP.COVERAGE_BEGIN_DT < (select max(coverage_begin_dt)
                                 from ps_savings_plan 
                                where coverage_elect = 'T'
                                  and plan_type = SP.PLAN_TYPE
                                  and emplid = SP.EMPLID
                                  and empl_rcd = SP.EMPL_RCD)
AND   NOT EXISTS(select 'x'
                   from ps_savings_plan
                  where emplid = SP.EMPLID
                    and empl_rcd = SP.EMPL_RCD
                    and plan_type = SP.PLAN_TYPE
                    and coverage_elect <> 'T'
                    and coverage_begin_dt >= SP.COVERAGE_BEGIN_DT)
!SXK 04/14/1999 Begin - EE should be in A,L, P status, if we are
!deleting the current term row and keeping the future term row
and   exists (select 'y'
                from ps_job j4
		where j4.emplid = sp.emplid
                  and j4.empl_rcd = sp.empl_rcd
                  and j4.empl_status in ('A','L','P')
		  and j4.effdt = (select max(effdt)
				from ps_job 
				where emplid = j4.emplid
				and empl_rcd = j4.empl_rcd
				and effdt <= $AsOfToday)
		  and j4.effseq = (select max(effseq)	
				from ps_job
				where emplid = j4.emplid
				and empl_rcd = j4.empl_rcd
				and effdt = j4.effdt)))
OR
!SXK This part will be deleting the future term rows and keeps
!current term row. this has to happen only when EE status is not in
!A, L, P status.
(SP.COVERAGE_BEGIN_DT = (select max(coverage_begin_dt)
                                 from ps_savings_plan 
                                where coverage_elect = 'T'
                                  and plan_type = SP.PLAN_TYPE
                                  and emplid = SP.EMPLID
                                  and empl_rcd = SP.EMPL_RCD
                                  and 1 < (select count(*)
					from ps_savings_plan ex4
					where ex4.coverage_elect = 'T'
					and ex4.plan_type = sp.plan_type
					and ex4.emplid = sp.emplid
					and ex4.empl_rcd = sp.empl_rcd))
! SXC 04/27/2000 begin
AND   EXISTS(select 'z'
                  from ps_savings_plan
                  where emplid = sp.EMPLID
                    and empl_rcd = sp.EMPL_RCD
                    and plan_type = sp.PLAN_TYPE
                    and coverage_elect = 'T'
                    and coverage_begin_dt <= sp.COVERAGE_BEGIN_DT
                    and coverage_elect_dt >= $yesterday)
!SXC 04/27/2000  end

AND   NOT EXISTS(select 'x'
                   from ps_savings_plan
                  where emplid = sp.EMPLID
                    and empl_rcd = sp.EMPL_RCD
                    and plan_type = sp.PLAN_TYPE
                    and coverage_elect <> 'T'
                    and coverage_begin_dt <= sp.COVERAGE_BEGIN_DT
                    and coverage_begin_dt >= (select max(ex5.coverage_begin_dt)
						from ps_savings_plan ex5
						where ex5.coverage_elect = 'T'
						and ex5.plan_type = sp.plan_type
						and ex5.emplid = sp.emplid
						and ex5.empl_rcd = sp.empl_rcd
						and ex5.coverage_begin_dt < sp.coverage_begin_Dt))
and   exists (select 'y'
                from ps_job j5
		where j5.emplid = sp.emplid
                  and j5.empl_rcd = sp.empl_rcd
                  and j5.empl_status not in ('A','L','P')
		  and j5.effdt = (select max(effdt)
				from ps_job 
				where emplid = j5.emplid
				and empl_rcd = j5.empl_rcd
				and effdt <= $AsOfToday)
		  and j5.effseq = (select max(effseq)	
				from ps_job
				where emplid = j5.emplid
				and empl_rcd = j5.empl_rcd
				and effdt = j5.effdt))))
!SXK 04/14/1999 End                  
!SXK 04/16/1999 End

ORDER BY SP.EMPLID, SP.EMPL_RCD, SP.PLAN_TYPE, SP.COVERAGE_BEGIN_DT                                  
end-select
end-procedure

!********************************************************************
begin-procedure Get-Disability-Ben
!********************************************************************
let $first_time = 'Y'
begin-select
DB.EMPLID
  move &DB.EMPLID to $emplid
DB.EMPL_RCD
  move &DB.EMPL_RCD to #empl_rcd
DB.PLAN_TYPE
   move &DB.PLAN_TYPE    to $plan_type

DB.EFFDT            
   move &DB.EFFDT        to $effective_date

   Do Convert-to-dtu-date($effective_date, $effdt)
   let $effdt_yy = substr($effdt,1,4)
   let $effdt_mm = substr($effdt,6,2)
   let $effdt_dd = substr($effdt,9,2)

DB.BENEFIT_PLAN
   move &DB.BENEFIT_PLAN to $benefit_plan
DB.COVERAGE_BEGIN_DT
   move &DB.COVERAGE_BEGIN_DT to $coverage_begin_dt
DB.COVERAGE_ELECT_DT
   move &DB.COVERAGE_ELECT_DT to $coverage_elect_dt
DB.DEDUCTION_END_DT
   move &DB.DEDUCTION_END_DT to $deduction_end_dt
   add 1 to #totalinputtran
   if RTRIM($table_name,' ') <> '' and $first_time = 'Y'
      new-page
      let $first_time = 'N'
   end-if
   move 'DISABILITY TABLES' to $table_name
   unstring $reporttitle by '(' into $reporttitle $suffix

   Display $emplid
   Display #empl_rcd 
   Display &DB.PLAN_TYPE
   Display &DB.EFFDT
   Display &DB.BENEFIT_PLAN
   display &DB.COVERAGE_ELECT_DT
   display &DB.DEDUCTION_END_DT

   Do Print-Record
   Do Delete-DB-Record

FROM PS_DISABILITY_BEN DB
WHERE DB.COVERAGE_ELECT = 'T'
AND   ((DB.COVERAGE_ELECT_DT >= $yesterday
AND   DB.COVERAGE_BEGIN_DT < (select max(coverage_begin_dt)
                                 from ps_disability_ben 
                                where coverage_elect = 'T'
                                  and plan_type = DB.PLAN_TYPE
                                  and emplid = DB.EMPLID
                                  and empl_rcd = DB.EMPL_RCD)
AND   NOT EXISTS(select 'x'
                   from ps_disability_ben
                  where emplid = DB.EMPLID
                    and empl_rcd = DB.EMPL_RCD
                    and plan_type = DB.PLAN_TYPE
                    and coverage_elect <> 'T'
                    and coverage_begin_dt >= DB.COVERAGE_BEGIN_DT)
!SXK 04/14/1999 Begin - EE should be in A,L, P status, if we are
!deleting the current term row and keeping the future term row
and   exists (select 'y'
                from ps_job j6
		where j6.emplid = db.emplid
                  and j6.empl_rcd = db.empl_rcd
                  and j6.empl_status in ('A','L','P')
		  and j6.effdt = (select max(effdt)
				from ps_job 
				where emplid = j6.emplid
				and empl_rcd = j6.empl_rcd
				and effdt <= $AsOfToday)
		  and j6.effseq = (select max(effseq)	
				from ps_job
				where emplid = j6.emplid
				and empl_rcd = j6.empl_rcd
				and effdt = j6.effdt)))
OR
!SXK This part will be deleting the future term rows and keeps
!current term row. this has to happen only when EE status is not in
!A, L, P status.
(DB.COVERAGE_BEGIN_DT = (select max(coverage_begin_dt)
                                 from ps_disability_ben
                                where coverage_elect = 'T'
                                  and plan_type = DB.PLAN_TYPE
                                  and emplid = DB.EMPLID
                                  and empl_rcd = DB.EMPL_RCD
                                  and 1 < (select count(*)
					from ps_disability_ben ex7
					where ex7.coverage_elect = 'T'
					and ex7.plan_type = db.plan_type
					and ex7.emplid = db.emplid
					and ex7.empl_rcd = db.empl_rcd))
! SXC 04/27/2000 begin
AND   EXISTS(select 'z'
                  from ps_disability_ben
                  where emplid = dB.EMPLID
                    and empl_rcd = dB.EMPL_RCD
                    and plan_type = dB.PLAN_TYPE
                    and coverage_elect = 'T'
                    and coverage_begin_dt <= dB.COVERAGE_BEGIN_DT
                    and coverage_elect_dt >= $yesterday)
! SXC 04/27/2000 end

AND   NOT EXISTS(select 'x'
                   from ps_disability_ben
                  where emplid = dB.EMPLID
                    and empl_rcd = dB.EMPL_RCD
                    and plan_type = dB.PLAN_TYPE
                    and coverage_elect <> 'T'
                    and coverage_begin_dt <= dB.COVERAGE_BEGIN_DT
                    and coverage_begin_dt >= (select max(ex8.coverage_begin_dt)
						from ps_disability_ben ex8
						where ex8.coverage_elect = 'T'
						and ex8.plan_type = db.plan_type
						and ex8.emplid = db.emplid
						and ex8.empl_rcd = db.empl_rcd
						and ex8.coverage_begin_dt < db.coverage_begin_Dt))
and   exists (select 'y'
                from ps_job j9
		where j9.emplid = db.emplid
                  and j9.empl_rcd = db.empl_rcd
                  and j9.empl_status not in ('A','L','P')
		  and j9.effdt = (select max(effdt)
				from ps_job 
				where emplid = j9.emplid
				and empl_rcd = j9.empl_rcd
				and effdt <= $AsOfToday)
		  and j9.effseq = (select max(effseq)	
				from ps_job
				where emplid = j9.emplid
				and empl_rcd = j9.empl_rcd
				and effdt = j9.effdt))))
!SXK 04/14/1999 End                  
!SXK 04/16/1999 End

ORDER BY DB.EMPLID, DB.EMPL_RCD, DB.PLAN_TYPE, DB.COVERAGE_BEGIN_DT                                  

end-select
end-procedure

!********************************************************************
begin-procedure Get-Fsa-Benefit
!********************************************************************
let $first_time = 'Y'
begin-select
FB.EMPLID
  move &FB.EMPLID to $emplid
FB.EMPL_RCD
  move &FB.EMPL_RCD to #empl_rcd
FB.PLAN_TYPE
   move &FB.PLAN_TYPE    to $plan_type

FB.EFFDT
   move &FB.EFFDT        to $effective_date

   Do Convert-to-dtu-date($effective_date, $effdt)
   let $effdt_yy = substr($effdt,1,4)
   let $effdt_mm = substr($effdt,6,2)
   let $effdt_dd = substr($effdt,9,2)

FB.BENEFIT_PLAN
   move &FB.BENEFIT_PLAN to $benefit_plan
FB.COVERAGE_BEGIN_DT
   move &FB.COVERAGE_BEGIN_DT to $coverage_begin_dt
FB.COVERAGE_ELECT_DT
   move &FB.COVERAGE_ELECT_DT to $coverage_elect_dt
FB.DEDUCTION_END_DT
   move &FB.DEDUCTION_END_DT to $deduction_end_dt
   add 1 to #totalinputtran
   if RTRIM($table_name,' ') <> '' and $first_time = 'Y'
      new-page
      let $first_time = 'N'
   end-if
   move 'FSA TABLES' to $table_name
   unstring $reporttitle by '(' into $reporttitle $suffix

   Display $emplid
   Display #empl_rcd
   Display &FB.PLAN_TYPE
   Display &FB.EFFDT
   Display &FB.BENEFIT_PLAN
   display &FB.COVERAGE_ELECT_DT
   display &FB.COVERAGE_BEGIN_DT

   Do Print-Record
   Do Delete-FB-Record

FROM PS_FSA_BENEFIT FB   
WHERE FB.COVERAGE_ELECT = 'T'
AND   ((FB.COVERAGE_ELECT_DT >= $yesterday
AND   FB.COVERAGE_BEGIN_DT < (select max(coverage_begin_dt)
                                 from ps_fsa_benefit
                                where coverage_elect = 'T'
                                  and plan_type = FB.PLAN_TYPE
                                  and emplid = FB.EMPLID
                                  and empl_rcd = FB.EMPL_RCD)
AND   NOT EXISTS(select 'x'
                   from ps_fsa_benefit
                  where emplid = FB.EMPLID
                    and empl_rcd = FB.EMPL_RCD
                    and plan_type = FB.PLAN_TYPE
                    and coverage_elect <> 'T'
                    and coverage_begin_dt >= FB.COVERAGE_BEGIN_DT)
!SXK 04/14/1999 Begin - EE should be in A,L, P status, if we are
!deleting the current term row and keeping the future term row
and   exists (select 'y'
                from ps_job ja
		where ja.emplid = fb.emplid
                  and ja.empl_rcd = fb.empl_rcd
                  and ja.empl_status in ('A','L','P')
		  and ja.effdt = (select max(effdt)
				from ps_job 
				where emplid = ja.emplid
				and empl_rcd = ja.empl_rcd
				and effdt <= $AsOfToday)
		  and ja.effseq = (select max(effseq)	
				from ps_job
				where emplid = ja.emplid
				and empl_rcd = ja.empl_rcd
				and effdt = ja.effdt)))
OR
!SXK This part will be deleting the future term rows and keeps
!current term row. this has to happen only when EE status is not in
!A, L, P status.
(FB.COVERAGE_BEGIN_DT = (select max(coverage_begin_dt)
                                 from ps_fsa_benefit 
                                where coverage_elect = 'T'
                                  and plan_type = fB.PLAN_TYPE
                                  and emplid = fB.EMPLID
                                  and empl_rcd = fB.EMPL_RCD
                                  and 1 < (select count(*)
					from ps_fsa_benefit exa
					where exa.coverage_elect = 'T'
					and exa.plan_type = fb.plan_type
					and exa.emplid = fb.emplid
					and exa.empl_rcd = fb.empl_rcd))
! SXC 04/27/2000 begin
AND   EXISTS(select 'z'
                  from ps_fsa_benefit
                  where emplid = fB.EMPLID
                    and empl_rcd = fB.EMPL_RCD
                    and plan_type = fB.PLAN_TYPE
                    and coverage_elect = 'T'
                    and coverage_begin_dt <= fB.COVERAGE_BEGIN_DT
                    and coverage_elect_dt >= $yesterday)
! SXC 04/27/2000 end

AND   NOT EXISTS(select 'x'
                   from ps_fsa_benefit
                  where emplid = fB.EMPLID
                    and empl_rcd = fB.EMPL_RCD
                    and plan_type = fB.PLAN_TYPE
                    and coverage_elect <> 'T'
                    and coverage_begin_dt <= fB.COVERAGE_BEGIN_DT
                    and coverage_begin_dt >= (select max(exb.coverage_begin_dt)
						from ps_fsa_benefit exb
						where exb.coverage_elect = 'T'
						and exb.plan_type = fb.plan_type
						and exb.emplid = fb.emplid
						and exb.empl_rcd = fb.empl_rcd
						and exb.coverage_begin_dt < fb.coverage_begin_Dt))
and   exists (select 'y'
                from ps_job jb
		where jb.emplid = fb.emplid
                  and jb.empl_rcd = fb.empl_rcd
                  and jb.empl_status not in ('A','L','P')
		  and jb.effdt = (select max(effdt)
				from ps_job 
				where emplid = jb.emplid
				and empl_rcd = jb.empl_rcd
				and effdt <= $AsOfToday)
		  and jb.effseq = (select max(effseq)	
				from ps_job
				where emplid = jb.emplid
				and empl_rcd = jb.empl_rcd
				and effdt = jb.effdt))))
!SXK 04/14/1999 End                  
!SXK 04/16/1999 End

ORDER BY FB.EMPLID, FB.EMPL_RCD, FB.PLAN_TYPE, FB.COVERAGE_BEGIN_DT                                  
end-select
end-procedure

!********************************************************************
begin-procedure Delete-HB-Record
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-HB-Record')
DELETE FROM PS_HEALTH_BENEFIT
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &HB.PLAN_TYPE
AND   EFFDT        = &HB.EFFDT
AND   BENEFIT_PLAN = &HB.BENEFIT_PLAN
end-sql

   Add #sql-count to #del_HB
   Add #sql-count to #delete_count

!do rollback-transaction
do delete-HB-Dependents

end-procedure

!********************************************************************
begin-procedure Delete-HB-Dependents
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-HB-Dependents')
DELETE FROM PS_HEALTH_DEPENDNT
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &HB.PLAN_TYPE
AND   EFFDT        = &HB.EFFDT
AND   COBRA_EVENT_ID = &HB.COBRA_EVENT_ID
AND   BENEFIT_NBR     = &HB.BENEFIT_NBR
end-sql

   Add #sql-count to #del_HB_dep
   Add #sql-count to #delete_count

!do rollback-transaction

end-procedure
!********************************************************************
begin-procedure Delete-LA-Record
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-LA-Record')
DELETE FROM PS_LIFE_ADD_BEN  
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &LA.PLAN_TYPE
AND   EFFDT        = &LA.EFFDT
AND   BENEFIT_PLAN = &LA.BENEFIT_PLAN
end-sql

!do rollback-transaction
   Add #sql-count to #del_LA
   Add #sql-count to #delete_count

do delete-la-dependents
end-procedure

!********************************************************************
begin-procedure Delete-LA-Dependents
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-LA-dependents')
DELETE FROM PS_LIFE_ADD_BENEFC  
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &LA.PLAN_TYPE
AND   EFFDT        = &LA.EFFDT
end-sql

!do rollback-transaction
   Add #sql-count to #del_LA_dep
   Add #sql-count to #delete_count

end-procedure
!********************************************************************
begin-procedure Delete-SP-Record
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-SP-Record')
DELETE FROM PS_SAVINGS_PLAN  
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &SP.PLAN_TYPE
AND   EFFDT        = &SP.EFFDT
AND   BENEFIT_PLAN = &SP.BENEFIT_PLAN
end-sql

   Add #sql-count to #del_SP
   Add #sql-count to #delete_count

!do rollback-transaction
do delete-SP-dependents
do delete-SP-dependents-1
end-procedure

!********************************************************************
begin-procedure Delete-SP-dependents
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-SP-dependents')
DELETE FROM PS_SAVINGS_BENEFIC  
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &SP.PLAN_TYPE
AND   EFFDT        = &SP.EFFDT
end-sql

   Add #sql-count to #del_SP_dep
   Add #sql-count to #delete_count

!do rollback-transaction

end-procedure
!********************************************************************
begin-procedure Delete-SP-dependents-1
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-SP-dependents-1')
DELETE FROM PS_SAVINGS_INVEST  
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &SP.PLAN_TYPE
AND   EFFDT        = &SP.EFFDT
end-sql

   Add #sql-count to #del_SP_dep_1
   Add #sql-count to #delete_count

!do rollback-transaction

end-procedure

!********************************************************************
begin-procedure Delete-DB-Record
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-DB-Record')
DELETE FROM PS_DISABILITY_BEN
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &DB.PLAN_TYPE
AND   EFFDT        = &DB.EFFDT
AND   BENEFIT_PLAN = &DB.BENEFIT_PLAN
end-sql

!do rollback-transaction
   Add #sql-count to #del_DB
   Add #sql-count to #delete_count

end-procedure

!********************************************************************
begin-procedure Delete-FB-Record
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-FB-Record')
DELETE FROM PS_FSA_BENEFIT   
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &FB.PLAN_TYPE
AND   EFFDT        = &FB.EFFDT
AND   BENEFIT_PLAN = &FB.BENEFIT_PLAN
end-sql

!do rollback-transaction
   Add #sql-count to #del_FB
   Add #sql-count to #delete_count

end-procedure

!********************************************************************
! Print Record
!********************************************************************
begin-procedure Print-Record

 do Format-Number(#empl_rcd,$empl_rcd,'9')

! do convert-to-dtu-date($coverage_begin_Dt,$coverage_begin_dt_dtu)


 print $emplid                (+1,1)
 print $empl_rcd              (0,16)
 print $plan_type             (0,28)
 print $coverage_begin_dt     (0,43)
 print $effective_date        (0,59)
 print $coverage_elect_dt     (0,82)
! print $deduction_end_dt      (0,106)

! print $benefit_plan          (0,63)

end-procedure

!********************************************************************
!This procedure displays in the error report if there are any sql errors
!happened in the program
!********************************************************************
begin-procedure SQL-Error-Found($Proc_Name) 
#debug9 show 'gexbn804.SQL-Error-Found'

  print 'SQL Error in ' (,34)
  print $Proc_Name         ()  
  print $_sql-error        () 
  print 'sql-status:'      ()
  print #_sql-status       () edit 99999 

end-procedure

!**************************************************************  
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
!#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'payrnctl.sqc'  !Select-Parameters
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'readxlat.sqc'  !Read xlattable
!**************************************************************
