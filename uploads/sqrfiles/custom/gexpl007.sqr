!***********************************************************************
!  GEXPL007:  RMC Pension Meat/Clerks                                  *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPL007:             RMC Pension Meat/Clerks                        *
!                                                                      *
! Narrative:            This program creates a monthly pension         *
!                       contribution report for RMC Meat/Clerks.       *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           acct_cd_tbl                                    *
!                       providr_tbl                                    *
!                       dept_tbl                                       *
!                       gex_rc_ben_plan                                *
!                       gex_rc_vendor                                  *
!                       xlattable                                      *
!                       gex_flat_rate                                  *
!                       flat_rate_tbl                                  *
!                       svc_rate_tbl                                   *
!                       svc_covg_tbl                                   *
!                       pay_calendar                                   *
!                       pay_cal_bal_id                                 *
!                       ben_defn_optn                                  *
!                       ben_defn_cost                                  *
!                       ben_defn_pgm                                   *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                       benef_plan_tbl                                 *
!                       pay_line                                       *
!                       pay_check                                      *
!                       pay_deduction                                  *
!                       earnings_bal                                   *
!                       health_benefit                                 *
!                                                                      *
! Written by:           Jim Hutchison                                  *
!                                                                      *
! Normally Run:         Monthly                                        *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Plan Type(s)                                 *
!                         Vendor ID(s)                                 *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS     DATE         DESCRIPTION OF THE CHANGE                 *
!***********************************************************************
!  JDH          01/29/98     Initial Creation.                         *
!                                                                      *
!  JDH          02/26/99     Pull pay_check rows by the check date of  *
!                            the pay end rather than the check date    *
!                            of the pay_check row. Add descending sort *
!                            on effseq.                                *
!                            $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA being*
!                            set incorrectly under process scheduler.  * 
!                                                                      *
!  JDH          03/12/99     Fixed problem with gex_hrs_bal select.    *
!                                                                      *
!  JDH          04/13/99     Get the effdt, action, action_reason from *
!                            the job row that originally set the       *
!                            empl_status to its current value for      *
!                            empl_status in ('L','P','R','T').         *
!                                                                      *
!  JNB          05/28/99     Added MAX(EFFDT) to the following stmt    *
!                            AND    BDP.EFFDT =                        *
!                            (SELECT MAX(EFFDT)                        *
!                             FROM   PS_BEN_DEFN_PGM                   *
!                             WHERE  BENEFIT_PROGRAM  =                *
!                                    BDP.BENEFIT_PROGRAM               *
!                             AND    EFFDT           <= $pay_end_dt)   *
!                                                                      *
!  JDH          06/29/99     Changed logic to get action,              *
!                            action_reason, effdt.                     *
!                                                                      *
!  SXK          10/21/1999   Modified to have union from JOB_LABOR     *
!                                                                      *
!  CWB          03/28/2001   Removed unneccessary select for union_cd  *
!                            and the join to JOB_LABOR.                *
!                                                                      *
!  AXL          04/27/2001   Increased PLAN ARRAY size to 150 from 100 *
!                                                                      *      
!  CWB          07/05/2001   Changed to use a temp table to be able to *
!                            sort by flat_rate and hourly_rate.        *       
!  AXC		08/01/2002   Added Empl_RCD to join for Earnings balance
!			     New key, via 8.3 Upgrade		       *
!                                                                      *      
!  GBD          07/15/2002   Added Fieldvalue to effective dated       *
!                            selection of the Load-Lookup procedure.   *
!                            Correct spacing issues with report output.*
!  GBD          09/12/2002   v8.3 Upgrade - Provider field changed to  *
!                            Vendor ID.                                *
!                                                                      *
!  GBD          10/16/2002   Modify code to eliminate multiple row     *
!                            selects.                                  *
!                                                                      *
!  CWB          06/26/2003   Increased PLAN-ARRAY size from 150 to 300 *
!           GEX-CXB 10/05/2007   Upgrade 9.0 Changes.
!GEX-RBC        11/19/2007      Made Changes to display the date in the 
!				format mm/dd/yy.
!VENDKXY     04/07/2009      Done Changes requested from S3 12643383   *
!VENDKXY     08/31/2009      Done Changes requested for ITG 65623      *
!VENDKXY     12/01/2009      Done the Changes for ITG 70265            *
!HRISRXK      02/22/2010    Made change to pro-rate Contribution Amount*
!                           when store changes in month being processed*
!ISDVAWD     04/22/2014     ITG# 827  - Changed file path  '\\nt5\' *
!			       with '\\corp.gianteagle.com\'`	       *
! GEX_SEC_REENG 2015-04-29 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!1289792     07/21/2016    Made change to correct the benefit plan sub-*
!                           query as incorrect row was getting selected*		
!***********************************************************************


#Include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

!Vendkxy done changes for ITG 65623-- Begin

#define #column1   1    !VendorID	   
#define #column2   12   !DeptID	           
#define #column3   17   !Employee Name      
#define #column4   49   !SSN                
#define #column5   59   !Birth Date         
#define #column6   68   !Service Date       
#define #column7   77   !Reg Temp           
#define #column8   88   !Job Title          
#define #column9   99  !Empl Stat          
#define #column10  104  !Action     	   
#define #column11  109  !Action Reason      
#define #column12  114  !Eff Date           
#define #column13  123  !Benefit Term Date  
#define #column14  132  !Hourly Rate        
#define #column15  141  !Flat Rate          
#define #column16  150  !MTD Hours          
#define #column17  164  !Contribution Amount

!Vendkxy done changes for ITG 65623-- End

!*********************************************************************
Begin-Heading 8
!*********************************************************************
#debug9 Show 'Begin-Heading'

#Include 'stdhdg01.sqc'
  Do Get-Provider-Name
  Print 'VendorID:'            (3,1)
  Print $Provider              (3,13)
  Print $ProviderName          (,+2)

  Print $Reporting_Period      (3,) Center 

  Do Get-Department-Name
  Print 'Deptid:'              (4,1)
  Print $Deptid                (4,13)
  Print $DeptName              (,+2)
  
!Vendkxy done changes for ITG 65623-- Begin

  Print 'DEPT'		       (+2,{#column2})
  Print 'BIRTH'                (+0,{#column5})
  Print 'SERVICE'              (+0,{#column6})
  Print 'EMPL'                 (+0,{#column9})
  Print 'ACT'                  (+0,{#column11})
  Print 'EFF'                  (+0,{#column12})
  Print 'BENEFIT'              (+0,{#column13})
  Print 'HOURLY'               (+0,{#column14})
  Print 'FLAT'                 (+0,{#column15})
  Print 'MTD'                  (+0,{#column16})
  Print 'CONTRIBUTION'         (+0,{#column17})
  
  Print 'VENDOR ID'	       (+1,{#column1})
  Print 'ID'                   (+0,{#column2})
  Print 'EMPL NAME'            (+0,{#column3})
  Print 'SSN'                  (+0,{#column4})
  Print 'DATE'                 (+0,{#column5})
  Print 'DATE'                 (+0,{#column6})
  Print 'REG TEMP'             (+0,{#column7})
  Print 'JOB TITLE'            (+0,{#column8})
  Print 'STAT'                 (+0,{#column9})
  Print 'ACT'                  (+0,{#column10})
  Print 'RSN'                  (+0,{#column11})
  Print 'DATE'                 (+0,{#column12})
  Print 'TERMDATE'             (+0,{#column13})
  Print 'RATE'                 (+0,{#column14})
  Print 'RATE'                 (+0,{#column15})
  Print 'HOURS'                (+0,{#column16})
  Print 'AMOUNT'               (+0,{#column17})
  
  Print '-'                    (+1,{#column1},10)  Fill
  Print '-'                    (+0,{#column2},4)  Fill
  Print '-'                    (+0,{#column3},30)  Fill
  Print '-'                    (+0,{#column4},09)  Fill
  Print '-'                    (+0,{#column5},08)  Fill
  Print '-'                    (+0,{#column6},08)  Fill
  Print '-'                    (+0,{#column7},10)  Fill
  Print '-'                    (+0,{#column8},30)  Fill
  Print '-'                    (+0,{#column9},04)  Fill
  Print '-'                    (+0,{#column10},03)  Fill
  Print '-'                    (+0,{#column11},03)  Fill
  Print '-'                    (+0,{#column12},08) Fill
  Print '-'                    (+0,{#column13},08) Fill
  Print '-'                    (+0,{#column14},08) Fill
  Print '-'                    (+0,{#column15},08) Fill
  Print '-'                    (+0,{#column16},13) Fill
  Print '-'                    (+0,{#column17},14) Fill
  
!Vendkxy done changes for ITG 65623-- End  
End-Heading

!*********************************************************************
Begin-Report
!*********************************************************************
#debug9 Show 'Begin-Report'

  MOVE $CURRENT-DATE TO $CURRDT 'MMDDYY'   !VENDKXY Done the Changes for ITG 70265
  !let $report-name = '\\corp.gianteagle.com\mobius\hrreports\' ||'PL007PDF.pdf'  !VENDKXY Done the changes for ITG 65623
!  Let $report-name = '{OUTFILE}' ||'PL007PDF_' || $CURRDT ||'.pdf'

!*****************************************************************
! ISDVAWD ITG# 827- 4/22/2014 - Begin - - Changed Report name 
!*****************************************************************
!  let $report-name = '\\nt5\ftproot\benefits\Local 880_GEXPL007\' ||'PL007PDF_' || $CURRDT ||'.pdf'   !VENDKXY Done the Changes for ITG 70265
  let $report-name = '\\corp.gianteagle.com\common\HR\HRPS\secure\benefitsk\Local 880_GEXPL007\' ||'PL007PDF_' || $CURRDT ||'.pdf'   
!******************************************************************
! ISDVAWD ITG# 827- 4/22/2014 - End  
!******************************************************************

  new-report  $report-name   !VENDKXY Done the changes for ITG 65623

  Do Set-Optimizer-Goal

 Let $tablename = 'PS_WT_GEXPL007'    

  do P900-drop-work-table
  
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc
  
  Do P100-Start
  Do Openfile			!VENDKXY Done the changes for ITG 65623
  Do P200-Main-Process
  Do P400-Select-From-Work-Table
!  Do P900-Drop-Work-Table
  Do P300-Finish

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
  
End-Report

!*********************************************************************
Begin-Procedure Set-Optimizer-Goal
!*********************************************************************
#debug9 Show 'Set-Optimizer-Goal'

  Begin-SQL
!Jyotsna    Alter Session Set OPTIMIZER_MODE=RULE;    !GEX-CXB Added for Upgrade 9.0 on 10/23/2007
  End-SQL
End-Procedure

!VENDKXY Done the changes for ITG 65623-- Begin
!*********************************************************************
Begin-Procedure Openfile
!*********************************************************************

    encode '<009>' into $delim
    !Let $file009 = '\\corp.gianteagle.com\mobius\hrreports\' || 'PL007XLS' || '.xls'  !VENDKXY Done the Changes for ITG 70265
!    Let $file009 = '{OUTFILE}' ||'PL007XLS_' || $CURRDT ||'.xls'
!*****************************************************************
! ISDVAWD ITG# 827- 4/22/2014 - Begin - Updated File path   
!*****************************************************************
!    let $file009  = '\\nt5\ftproot\benefits\Local 880_GEXPL007\' ||'PL007XLS_' || $CURRDT ||'.xls'   !VENDKXY Done the Changes for ITG 70265
    let $file009  = '\\corp.gianteagle.com\common\HR\HRPS\secure\benefitsk\Local 880_GEXPL007\' ||'PL007XLS_' || $CURRDT ||'.xls'   
!******************************************************************
! ISDVAWD ITG# 827- 4/22/2014 - End  
!******************************************************************

    Open $file009 As 1 For-Writing Record=1000:Vary
   !VENDKXY Done the changes for ITG 70265-- Begin
   Move 'PL007XLS'			To $Report  
   encode '<012>' into $newline 
   String 'Report ID:' $Report  ' ' ' ' ' ' ' ' ' ' $ReportTitle by $delim into $gexpl007
   Write 1 from $gexpl007
   Write 1 from $newline 
   !VENDKXY Done the changes for ITG 70265-- End 
    
 String 'VENDORID' 'DEPTID' 'EMPLOYEE NAME' 'SSN' 'BIRTH DATE' 'SERVICE DATE' 'REG TEMP' 'JOB TITLE' 'EMPL STAT' 'ACTION' 'ACTION REASON'
  'EFF DATE' 'BENEFIT TERM DATE' 'HOURLY RATE' 'FLAT RATE' 'MTD HOURS' 'CONTRIBUTION AMOUNT' by $delim into $gexpl007
  Write 1 from $gexpl007
    
End-Procedure

!VENDKXY Done the changes for ITG 65623-- End

!*********************************************************************
Begin-Procedure P100-Start
!*********************************************************************
#debug9 Show 'P100-Start'

  !Move 'GEXPL007'                    To $ReportID  !VENDKXY Done the changes for ITG 70265
  Move 'PL007PDF'			To $ReportID    !VENDKXY Done the changes for ITG 70265
  Move 'RMC PENSION MEAT/CLERKS' To $ReportTitle

  Show '$ReportID=' $ReportID
  Show '$ReportTitle=' $ReportTitle

  Create-Array Name=Plan-Array Size=300         ! CWB - 06/26/2003 
    Field=plantype:Char:2
    Field=benefitplan:Char:6
    Field=gexspclaccumcd:Char:3
    Field=serviceintervals:Number
    Field=hourlyrate:Number
    Field=flatrate:Number

  Clear-Array Name=Plan-Array

  If $prcs_process_instance = ''
    Move '''' to $ProviderString
    Display 'Enter Vendor ID or leave blank to exit.'
    While 1=1
      Input $Provider maxlen=6 'Provider ID'
      Uppercase $Provider
      if RTRIM($Provider, ' ') = ''
      	concat '''' with $ProviderString
	      break
      end-if
      if $ProviderString <> ''''
	      concat ''',''' with $ProviderString
      end-if
      concat $Provider with $ProviderString
    End-While

    let $Vendor_ID = $Provider

    if $ProviderString = ''''''
      let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = '1=1'
      let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA = 'ALL'
      let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA2 = '1=1'
      let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA2 = 'ALL'
    else
      let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = 'bpt.vendor_id In (' || $ProviderString || ')'
      let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA = $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA
      let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA2 = 'bpt2.vendor_id In (' || $ProviderString || ')'
      let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA2 = $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA
    end-if

    Move '''' to $PlanTypeString
    Display 'Enter Plan Type or leave blank to exit.'
    While 1=1
      Input $PlanType Maxlen=2 'Plan Type'
      Uppercase $PlanType
      if RTRIM($PlanType, ' ') = ''
	      concat '''' with $PlanTypeString
	      break
      end-if
      if $PlanTypeString <> ''''
	      concat ''',''' with $PlanTypeString
      end-if
      concat $PlanType with $PlanTypeString
    End-While

    if $PlanTypeString = ''''''
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2 = '1=1'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA2 = 'ALL'
    else
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = 'bpt.plan_type In (' || $PlanTypeString || ')'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2 = 'bpt2.plan_type In (' || $PlanTypeString || ')'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA2 = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
    end-if

  Else

    Let $GEXXX912_Plan_Type_Alias = 'bpt2.plan_type'
    Let $GEXXX912_Benefit_Plan_Alias = 'bpt2.benefit_plan'
    
    Do GEXXX912-Select-Benefit-Plan-Parameters
    
    #debug8 Show $gexxx912_include_benefit_plan_criteria
    #debug8 Show #gex_rc_ben_plan_rows
    
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2 = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA2 = $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA

    Let $GEXXX912_Plan_Type_Alias = 'bpt.plan_type'
    Let $GEXXX912_Benefit_Plan_Alias = 'bpt.benefit_plan'
    
    Do GEXXX912-Select-Benefit-Plan-Parameters

    Let $GEXXX927_Vendor_ID_Alias = 'bpt2.vendor_id'
    
    Do GEXXX927-Select-Vendor-ID-Parameters
    
    Let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA2 = $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA
    Let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA2 = $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA

    Let $GEXXX927_Vendor_ID_Alias = 'bpt.vendor_id'
    
    Do GEXXX927-Select-Vendor-ID-Parameters

  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  If $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
    Display 'At least one plan type parameter must be specified'
    Stop
  End-If

  If $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = '1=1'
    Display 'At least one vendor parameter must be specified'
    Stop
  End-If

  Let $X000_ORDER_BY = 'Vendor ID, Deptid, Employee Name'

  #debug8 Show '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA  = '   $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA
  #debug8 Show '$GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA      = '   $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA

  Do Get-Calendar-Year-Id    !getbalid.sqc

  Do P140-Get-Last-Confirmed-Pay
  Do P150-Print-Cover-Page
  Do P160-Get-Xlat-Lookup
  Do P170-Load-Plan-Array
  Do P180-Create-Work-Table

  #debug9 Show 'Plan-Array successfully loaded'
End-Procedure

!*********************************************************************
Begin-Procedure P140-Get-Last-Confirmed-Pay
!*********************************************************************
#debug9 Show 'P140-Get-Last-Confirmed-Pay'
#debug8 Show '$AsOfToday: '$AsOfToday

let $AsOfToday = '27-Jan-2011'  !TEST

Begin-Select
pay_period
pay_end_dt
To_Number(To_Char(pay_end_dt,'MM'))          &balance_period
To_Number(To_Char(pay_end_dt,'YYYY'))        &balance_year
To_Char(pay_end_dt,'fmMonth YYYY')           &period
Last_Day(pay_end_dt)                         &current_month_end
Last_Day(Add_Months(pay_end_dt,-1))          &prev_month_end
Last_Day(Add_Months(pay_end_dt,1))           &next_month_end

  Let #weeks-in-month   = &pay_period
  Let $AsOfDate         = &pay_end_dt
  Let $pay_end_dt       = &pay_end_dt
  Let #balance_year     = &balance_year
  Let #balance_period   = &balance_period
  Let $Reporting_Period = &period

  Let $current_month_begin = '01-'||Substr($pay_end_dt,4,8)
  Let $current_month_end   = &current_month_end
  Let $next_month_end      = &next_month_end
  Let $prev_month_begin    = '01-'||Substr(&prev_month_end,4,8)

  let #balance_qtr = #balance_period
  let #balance_qtr = ((#balance_qtr - 1)/ 3) + 1
  do Format-Number(#balance_qtr, $balance_qtr, '9.99') !avoid rounding the integer portion
  move $balance_qtr to $balance_qtr x     !save the integer portion
  let #balance_qtr = $balance_qtr

  #debug8 Show 'Report will contain balances for the month of ' $Reporting_Period
  #debug8 Show 'Last confirmed pay end date:  ' $pay_end_dt

  Do P145-Get-First-Pay-Period

  If Rtrim($pay_end_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  End-If

From   ps_pay_calendar
Where  company                = 'GEI'
And    paygroup               = 'RET'
And    pay_end_dt             =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  company         = 'GEI'
       And    paygroup        = 'RET'
       And    pay_end_dt     <= $AsOfToday  
       And    pay_confirm_run = 'Y')
And    pay_confirm_run = 'Y'

End-Select

End-Procedure

!*********************************************************************
Begin-Procedure P145-Get-First-Pay-Period
!*********************************************************************
#debug9 Show 'P145-Get-First-Pay-Period'
#debug8 Show '$pay_end_dt: '$pay_end_dt

Begin-Select
pay_end_dt &first_pay_end_dt

  Let $first_pay_end_dt = &first_pay_end_dt
  Do Convert-to-DTU-Date($first_pay_end_dt, $first_pay_end_dt_dtu)

From   ps_pay_calendar

Where  company    = 'GEI'
And    paygroup   = 'RET'
And    To_Char(check_dt,'YYYYMM')
		  = To_Char(To_Date($pay_end_dt),'YYYYMM')
And    pay_period = 1

End-Select

End-Procedure

!*********************************************************************
begin-procedure P150-Print-Cover-Page
!*********************************************************************
#debug9 Show 'P150-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,1)
  Print '$Prcs_OPRID          = '                             (+2,5)
  Print $Prcs_OPRID                                           (0,+2)
  Print '$PRCS_RUN_CNTL_ID    = '                             (+1,5)
  Print $PRCS_RUN_CNTL_ID                                     (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,2)
  Print '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = '  (+2,5)
  Print $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA       (0,+2)
  Print '$GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA    = '  (+2,5)
  Print $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA          (0,+2)

  Print 'Report will contain balances for the month of'       (+2,5)
  Print $Reporting_Period                                     (0,+1)
  Print 'Last confirmed pay end date:'                        (+2,5)
  Print $pay_end_dt                                           (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $X000_ORDER_BY                                        (+2,5)

  Let #PAGE-COUNT = 0
End-Procedure

!*********************************************************************
begin-procedure P160-Get-Xlat-Lookup
!*********************************************************************
#debug9 Show 'P160-Get-Xlat-Lookup'

  Let $Where = '     x.fieldname   = ''REG_TEMP''' ||
	       ' And x.eff_status  = ''A''' ||
	       ' And x.effdt       = (Select Max(effdt)' ||
	       '                      From   PSXLATITEM x1' ||	!GEX-CXB Added for Upgrade 9.0 on 10/23/2007
	       '                      Where  x1.fieldname    = x.fieldname' ||
	       '                      And    x1.fieldvalue  = x.fieldvalue' ||
	       '                      And    x1.effdt       <= ''' || $pay_end_dt || '''' ||
	       '                      And    x1.eff_status   = ''A'')'

  Load-Lookup
    Name=Xlat-Lookup
    Rows=10
    Table='PSXLATITEM X'	!GEX-CXB Commented for Upgrade 9.0 on 10/23/2007
    Key='X.FIELDVALUE'		!GEX-CXB Added for Upgrade 9.0 on 10/23/2007
    Return_Value='X.XLATSHORTNAME'
    Where=$Where
    Quiet

  Show 'Xlat-Lookup successfully loaded'

End-Procedure

!*********************************************************************
Begin-Procedure P170-Load-Plan-Array
!*********************************************************************
#debug9 Show 'P170-Load-Plan-Array'
#debug7 Show 'Benefit Plan: '$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2
#debug7 Show 'Vendor_id: '$GEXXX927_INCLUDE_VENDOR_ID_CRITERIA2
#debug7 Show '$pay_end_dt: '$pay_end_dt

Begin-Select
BDP.BENEFIT_PROGRAM
BPT2.PLAN_TYPE
BPT2.BENEFIT_PLAN
BDP.GEX_SPCL_ACCUM_CD
BDC.RATE_TYPE
BDC.RATE_TBL_ID

  If &BDC.RATE_TYPE = '2'
    Do P180-Flat-Rate
  Else
    If &BDC.RATE_TYPE = '4'
      Do P190-Service-Rate
    Else
      Display 'Unexpected rate type found.'
      Display 'Code to handle rate type ' Noline
      Display &BDC.RATE_TYPE Noline
      Display ' needs to be added.'
      !Stop
    End-If
  End-If

FROM   PS_BEN_DEFN_PGM    BDP,
       PS_BEN_DEFN_COST   BDC,
       PS_BEN_DEFN_OPTN   BDO,
       PS_BENEF_PLAN_TBL  BPT2
WHERE [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2]
AND   [$GEXXX927_INCLUDE_VENDOR_ID_CRITERIA2]
AND    BPT2.EFFDT              =
      (SELECT MAX(EFFDT)
       FROM   PS_BENEF_PLAN_TBL
       WHERE  PLAN_TYPE        = BPT2.PLAN_TYPE
       AND    BENEFIT_PLAN     = BPT2.BENEFIT_PLAN
       AND    EFFDT           <= $pay_end_dt)
AND    BDP.EFFDT               =
      (SELECT MAX(EFFDT)
       FROM   PS_BEN_DEFN_PGM
       WHERE  BENEFIT_PROGRAM  = BDP.BENEFIT_PROGRAM
       AND    EFFDT           <= $pay_end_dt)
AND    BDO.BENEFIT_PROGRAM     = BDP.BENEFIT_PROGRAM
AND    BDO.EFFDT               = BDP.EFFDT
AND    BDO.PLAN_TYPE           = BPT2.PLAN_TYPE
AND    BDO.BENEFIT_PLAN        = BPT2.BENEFIT_PLAN
AND    BDC.BENEFIT_PROGRAM     = BDO.BENEFIT_PROGRAM 
AND    BDC.EFFDT               = BDP.EFFDT
AND    BDC.PLAN_TYPE           = BDO.PLAN_TYPE
AND    BDC.OPTION_ID           = BDO.OPTION_ID

ORDER BY BDP.BENEFIT_PROGRAM, BPT2.PLAN_TYPE, BPT2.BENEFIT_PLAN

End-Select

End-Procedure

!*********************************************************************
Begin-Procedure P180-Flat-Rate
!*********************************************************************
#debug9 Show 'P180-Flat-Rate'
#debug7 Show '$pay_end_dt: '$pay_end_dt
#debug7 Show '&BDC.RATE_TBL_ID	: '&BDC.RATE_TBL_ID	

 Let $flat_rate_found = 'N'					!Vendkxy changed for the S3 12643383

Begin-Select
FRT.BN_EMPLR_RATE											!Vendkxy changed for the S3 12643383

  Let $flat_rate_found = 'Y'				!Vendkxy changed for the S3 12643383
  If &FRT.BN_EMPLR_RATE = 0							!Vendkxy changed for the S3 12643383
    Do P185-GEX-Flat-Rate
  Else
    Add 1 To #i
    If Rtrim(&BDP.GEX_SPCL_ACCUM_CD, ' ') = ''
      If &BDP.BENEFIT_PROGRAM = 'R02'
	      Let $accum_cd = 'RAB'
      Else
	      #debug8 Show 'Special accumulator not found for benefit program ' &BDP.BENEFIT_PROGRAM &BDC.RATE_TBL_ID
	     ! Stop
      End-If
    Else
      Let $accum_cd = &BDP.GEX_SPCL_ACCUM_CD
    End-If
    Put &BPT2.PLAN_TYPE &BPT2.BENEFIT_PLAN $accum_cd 0 0 &FRT.BN_EMPLR_RATE Into Plan-Array(#i) 				!Vendkxy changed for the S3 12643383
  End-If

FROM PS_BN_RATE_DATA  FRT							!Vendkxy changed for the S3 12643383 
WHERE  FRT.RATE_TBL_ID     = &BDC.RATE_TBL_ID					!Vendkxy changed for the S3 12643383 
AND    FRT.EFFDT            =
      (SELECT MAX(EFFDT)
       FROM PS_BN_RATE_DATA												!Vendkxy changed for the S3 12643383 
       WHERE RATE_TBL_ID = FRT.RATE_TBL_ID				!Vendkxy changed for the S3 12643383 
       AND    EFFDT        <= $pay_end_dt)
       
End-Select

!Vendkxy changed for the S3 12643383
	if  $flat_rate_found = 'N'
	 Do P185-GEX-Flat-Rate
	end-if
	!Vendkxy changed for the S3 12643383
End-Procedure

!*********************************************************************
Begin-Procedure P185-GEX-Flat-Rate
!*********************************************************************
#debug9 Show 'P185-GEX-Flat-Rate'
#debug7 Show '$pay_end_dt: '$pay_end_dt
#debug7 Show '&BDC.RATE_TBL_ID	: '&BDC.RATE_TBL_ID	

Begin-Select
GFR.GEX_RATE_AMT

  Add 1 To #i
  Put &BPT2.PLAN_TYPE &BPT2.BENEFIT_PLAN '' 0 &GFR.GEX_RATE_AMT 0 Into Plan-Array(#i)

FROM   PS_GEX_FLAT_RATE GFR

WHERE  GFR.RATE_TBL_ID    = &BDC.RATE_TBL_ID	!GEX-CXB Added for Upgrade 9.0 on 10/23/2007

AND    GFR.EFFDT            =
      (SELECT MAX(EFFDT)
       FROM   PS_GEX_FLAT_RATE
       WHERE  RATE_TBL_ID  = GFR.RATE_TBL_ID	!GEX-CXB Added for Upgrade 9.0 on 10/23/2007
       AND    EFFDT        <= $pay_end_dt)
End-Select

End-Procedure

!*********************************************************************
Begin-Procedure P190-Service-Rate
!*********************************************************************
#debug9 Show 'P190-Service-Rate'
#debug7 Show '$pay_end_dt: '$pay_end_dt
#debug7 Show '&BDC.RATE_TBL_ID	: '&BDC.RATE_TBL_ID	

Begin-Select
SCT.EMPLR_RATE
SCT.SERVICE_INTERVALS

  Add 1 To #i
  If Rtrim(&BDP.GEX_SPCL_ACCUM_CD, ' ') = ''
    If &BDP.BENEFIT_PROGRAM = 'R02'
      Let $accum_cd = 'RAB'
    Else
      #debug8 Show 'Special accumulator not found for benefit program ' &BDP.BENEFIT_PROGRAM
      Stop
    End-If
  Else
    Let $accum_cd = &BDP.GEX_SPCL_ACCUM_CD
  End-If
  Put &BPT2.PLAN_TYPE &BPT2.BENEFIT_PLAN $accum_cd &SCT.SERVICE_INTERVALS 0 &SCT.EMPLR_RATE Into Plan-Array(#i)

FROM   PS_SVC_RATE_TBL SRT,
       PS_SVC_COVG_TBL SCT
WHERE  SRT.SVC_RATE_TBL_ID     = &BDC.RATE_TBL_ID
AND    SRT.EFFDT               =
      (SELECT MAX(EFFDT)
       FROM   PS_SVC_RATE_TBL
       WHERE  SVC_RATE_TBL_ID  = SRT.SVC_RATE_TBL_ID
       AND    EFFDT           <= $pay_end_dt)
AND    SCT.SVC_RATE_TBL_ID     = SRT.SVC_RATE_TBL_ID
AND    SCT.EFFDT               =
      (SELECT MAX(EFFDT)
       FROM   PS_SVC_COVG_TBL
       WHERE  SVC_RATE_TBL_ID  = SCT.SVC_RATE_TBL_ID
       AND    EFFDT           <= $pay_end_dt)

ORDER BY SERVICE_INTERVALS DESC

End-Select

End-Procedure

!*********************************************************************
Begin-Procedure P200-Main-Process
!*********************************************************************
#debug9 Show 'P200-Main-Process'
#debug8 Show '$pay_end_dt: '$pay_end_dt
#debug8 Show '#balance_year: '#balance_year
#debug8 Show '#balance_period: '#balance_period

  Let $Data-Found-Flag = 'N'

Begin-Select
bpt.vendor_id 
pl.deptid 
bpt.plan_type
bpt.benefit_plan
e.service_dt
per.name
per.birthdate
j.emplid
j.empl_rcd
j.effdt
j.company
j.paygroup
j.reg_temp
j.empl_status
j.acct_cd
j.position_nbr   !Vendkxy done changes for ITG 65623
Sum(pd.ded_cur) &pd.ded_cur

  !VENDKXY Done the changes for ITG 65623-- Begin
  Let $Position_Nbr          = &j.position_nbr  
  Let $AsOfDate = $pay_end_dt
  do Get-Position-Title
  	
  !VENDKXY Done the changes for ITG 65623--End

  Let $Data-Found-Flag = 'Y'

  Let $p200_Deptid = &PL.DEPTID

  Let $p200_Vendor_ID = &BPT.Vendor_id

  Let #contribution_amt = &pd.ded_cur

  Do P220-Get-Benefit-Termination-Row

  Evaluate &j.empl_status
    When = 'L'
    When = 'P'
    When = 'R'
    When = 'T'
      Do P230-Get-Leave-Begin-Date
      Break
    When-Other
      Do P235-Get-Status-Date
  End-Evaluate

  Do Convert-to-DTU-Date(&e.service_dt, $service_dt_dtu)
  Do dtu-diff-months($service_dt_dtu, $first_pay_end_dt_dtu, #months_service)

  Let #j = 1
  While #j <= #i
    Get $PLANTYPE $BENEFITPLAN $GEXSPCLACCUMCD #MONTHSSERVICE #HOURLYRATE #FLATRATE From Plan-Array(#j)
      If &BPT.PLAN_TYPE     = $PLANTYPE      And
	   &BPT.BENEFIT_PLAN  = $BENEFITPLAN   And
	 #months_service   >= #MONTHSSERVICE
	Let $spcl_accum_cd = $GEXSPCLACCUMCD
	Let #hourly_rate = #HOURLYRATE
	Let #flat_rate   = #FLATRATE
	Break
      Else
	Add 1 To #j
      End-If
  End-While

  If $GEXSPCLACCUMCD = ''
    Do P240-GEX-HRS-BAL
  Else
    Do P245-EARNINGS-BAL
  End-If

  Do P250-Format-Record

  Do P255-Insert-Into-Work-Table

From   ps_personal_data          per,
       ps_employment             e,
       ps_job                    j,
       ps_benef_plan_tbl         bpt,
       ps_pay_cal_bal_id         pcbi,
       ps_pay_line               pl,
       ps_pay_check              pc,
       ps_pay_deduction          pd 
Where  per.emplid                = j.emplid
And    e.emplid                  = j.emplid
And    e.empl_rcd               = j.empl_rcd
And    j.effdt                   =
      (Select Max(effdt)
       From   ps_job
       Where  emplid             = j.emplid
       And    empl_rcd          = j.empl_rcd
       And    effdt             <= $pay_end_dt)
And    j.effseq                  =
      (Select Max(effseq)
       From   ps_job
       Where  emplid             = j.emplid
       And    empl_rcd          = j.empl_rcd
       And    effdt              = j.effdt)
And    bpt.effdt                 =
      (Select Max(effdt)
       From   ps_benef_plan_tbl
       Where  plan_type          = bpt.plan_type
       And    benefit_plan       = bpt.benefit_plan
       And    effdt             <= $pay_end_dt
       !And    vendor_id           = bpt.vendor_id)   !GEX_848 Jyotsna Negi - To correct the subquery
       )                                              !GEX_848 Jyotsna Negi - To correct the subquery
And    pcbi.company              = pc.company
And    pcbi.paygroup             = pc.paygroup
And    pcbi.balance_id           = 'CY'
And    pcbi.balance_year         = #balance_year
And    pcbi.balance_period       = #balance_period
And    pc.pay_end_dt             = pcbi.pay_end_dt
And    j.emplid                  = pc.emplid
And    j.empl_rcd               = pc.empl_rcd
And    pd.company                = pc.company
And    pd.paygroup               = pc.paygroup
And    pd.pay_end_dt             = pc.pay_end_dt
And    pd.off_cycle              = pc.off_cycle
And    pd.page_num                  = pc.page_num
And    pd.line_num                  = pc.line_num
And    pd.sepchk                 = pc.sepchk
And    pl.company                = pc.company
And    pl.paygroup               = pc.paygroup
And    pl.pay_end_dt             = pc.pay_end_dt
And    pl.off_cycle              = pc.off_cycle
And    pl.page_num                  = pc.page_num
And    pl.line_num                  = pc.line_num
And    pd.plan_type              = bpt.plan_type
And    pd.benefit_plan           = bpt.benefit_plan
And    pd.ded_class              = 'N'
And   [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]
And   [$GEXXX927_INCLUDE_VENDOR_ID_CRITERIA]

Group By bpt.Vendor_id,
       pl.deptid,
       bpt.plan_type,
       bpt.benefit_plan,
       e.service_dt,
       per.name,
       per.birthdate,
       j.emplid,
       j.empl_rcd,
       j.effdt,
       j.company,
       j.paygroup,
       j.reg_temp,
       j.empl_status,
       j.acct_cd,         !VENDKXY Done the changes for ITG 65623
       j.position_nbr     !VENDKXY Done the changes for ITG 65623

End-Select

End-Procedure

!*********************************************************************
Begin-Procedure P220-Get-Benefit-Termination-Row
!*********************************************************************
#debug9 Show 'P220-Get-Benefit-Termination-Row'
Begin-Select
hb.coverage_begin_dt

From   ps_health_benefit hb

Where  hb.emplid         = &j.emplid
And    hb.empl_rcd      = &j.empl_rcd
And    hb.plan_type      = &bpt.plan_type

And    hb.effdt          =
      (Select Max(effdt)
       From   ps_health_benefit
       Where  emplid     = &j.emplid
       And    empl_rcd  = &j.empl_rcd
       And    plan_type  = &bpt.plan_type)

And    hb.coverage_begin_dt Between $prev_month_begin
				And $next_month_end

And    hb.coverage_elect = 'T'
End-Select

End-Procedure

!*********************************************************************
Begin-Procedure P230-Get-Leave-Begin-Date
!*********************************************************************
#debug9 Show 'P230-Get-Leave-Begin-Date'
#debug8 Show '&J.EMPLID: '&J.EMPLID
#debug8 Show '&J.EMPL_RCD: '&J.EMPL_RCD
#debug8 Show '&J.EFFDT: '&J.EFFDT
#debug8 Show '&J.EFFDT: '&J.EMPL_STATUS

  Let $Status-Change = 'N'
Begin-Select
JOB.EFFDT
JOB.EMPL_STATUS
JOB.ACTION
JOB.ACTION_REASON

  If &JOB.EMPL_STATUS = &J.EMPL_STATUS And
      $Status-Change = 'N'
    Let $Effective-Date = &JOB.EFFDT
    Let $Action         = &JOB.ACTION
    Let $Action_Reason  = &JOB.ACTION_REASON
    Let $Status-Change = 'N'
  Else
    Let $Status-Change = 'Y'
  End-If

FROM   PS_JOB JOB

WHERE  EMPLID     = &J.EMPLID
AND    EMPL_RCD  = &J.EMPL_RCD
AND    EFFDT     <= &J.EFFDT
ORDER BY JOB.EFFDT DESC, JOB.EFFSEQ DESC
End-Select

End-Procedure

!*********************************************************************
Begin-Procedure P235-Get-Status-Date
!*********************************************************************
#debug9 Show 'P235-Get-Status-Date'
#debug8 Show '&J.EMPLID: '&J.EMPLID
#debug8 Show '&J.EMPL_RCD: '&J.EMPL_RCD
#debug8 Show '&J.EFFDT: '&J.EFFDT
#debug8 Show '&J.EFFDT: '&J.REG_TEMP

  Let $Reg-Temp-Change = 'N'
  
Begin-Select
J1.EFFDT
J1.REG_TEMP
J1.ACTION
J1.ACTION_REASON
J1.EMPL_STATUS

  If &J1.REG_TEMP = &J.REG_TEMP And
      $Reg-Temp-Change = 'N'
    Let $Reg-Temp-Change = 'N'
    If &J1.EMPL_STATUS  <> 'T'
      Let $Effective-Date = &J1.EFFDT
      Let $Action         = &J1.ACTION
      Let $Action_Reason  = &J1.ACTION_REASON
    End-If
  Else
    Let $Reg-Temp-Change = 'Y'
  End-If

FROM   PS_JOB J1

WHERE  EMPLID     = &J.EMPLID
AND    EMPL_RCD  = &J.EMPL_RCD
AND    EFFDT     <= &J.EFFDT
ORDER BY J1.EFFDT DESC, J1.EFFSEQ DESC
End-Select

End-Procedure

!*********************************************************************
Begin-Procedure P240-GEX-HRS-BAL
!*********************************************************************
#debug9 Show 'P240-GEX-HRS-BAL'
#debug8 Show '&J.EMPLID: '&J.EMPLID
#debug8 Show '&J.EMPL_RCD: '&J.EMPL_RCD
#debug8 Show '&j.company: '&j.company
#debug8 Show '&j.paygroup: '&j.paygroup
#debug8 Show '&bpt.plan_type: '&bpt.plan_type
#debug8 Show '&bpt.benefit_plan: '&bpt.benefit_plan
#debug8 Show '&j.paygroup: '$current_month_begin
#debug8 Show '&j.paygroup: '$current_month_end

  Let #hrs_mtd = 0

Begin-Select
Sum(ghb.total_hrs) &ghb.total_hrs

  Let #hrs_mtd = &ghb.total_hrs

From   sysadm.PS_GEX_HRS_BAL_DPT ghb
Where  ghb.company            = &j.company
And    ghb.paygroup           = &j.paygroup
And    ghb.deptid           = &pl.deptid
And    ghb.emplid             = &j.emplid
And    ghb.empl_rcd          = &j.empl_rcd
And    ghb.plan_type          = &bpt.plan_type
And    ghb.benefit_plan       = &bpt.benefit_plan
And    ghb.check_dt     Between $current_month_begin
			    And $current_month_end
End-Select

End-Procedure
!*********************************************************************
Begin-Procedure P245-EARNINGS-BAL
!*********************************************************************
#debug9 Show 'P245-EARNINGS-BAL'
#debug8 Show '&J.EMPLID: '&J.EMPLID
#debug8 Show '&J.EMPL_RCD: '&J.EMPL_RCD
#debug8 Show '&j.company: '&j.company
#debug8 Show '#balance_year: '#balance_year
#debug8 Show '#balance_qtr: '#balance_qtr
#debug8 Show '#balance_period: '#balance_period
#debug8 Show '$spcl_accum_cd: '$spcl_accum_cd

  Let #hrs_mtd = 0

Begin-Select
eb.hrs_mtd

  Let #hrs_mtd = &eb.hrs_mtd

From   ps_earnings_bal eb

Where  eb.emplid             = &j.emplid
And    eb.empl_rcd	     = &j.empl_rcd
And    eb.company            = &j.company
And    eb.balance_id         = 'CY'
And    eb.balance_year       = #balance_year
And    eb.balance_qtr        = #balance_qtr
And    eb.balance_period     = #balance_period
And    eb.spcl_balance       = 'Y'
And    eb.erncd              = $spcl_accum_cd
End-Select

End-Procedure

!*********************************************************************
Begin-Procedure P250-Format-Record
!*********************************************************************
#debug9 Show 'P250-Format-Record'
#debug8 Show '&j.acct_cd: '&j.acct_cd

  Lookup Xlat-Lookup &j.reg_temp $reg_temp

  Let $acctcd = &j.acct_cd
  Do Get-Acct-cd-descr

#debug8 Show '&e.service_dt: '&e.service_dt
#debug8 Show '&per.birthdate: '&per.birthdate
#debug8 Show '$Effective-Date: '$Effective-Date
#debug8 Show '&hb.coverage_begin_dt: '&hb.coverage_begin_dt

  Let $Service_Dt=edit(&e.service_dt,'mm/dd/yy') ! VENDRBC Added for upgarde 9.0 on
  Let $Birthdate=edit(&per.birthdate,'mm/dd/yy') ! VENDRBC Added for upgarde 9.0 on
  Let $eff_dt =edit($Effective-Date,'mm/dd/yy') ! VENDRBC Added for upgarde 9.0 on
  Let $Term_Date=edit(&hb.coverage_begin_dt,'mm/dd/yy') ! VENDRBC Added for upgarde 9.0 on

End-Procedure

!*********************************************************************
Begin-Procedure P600-Print-Record
!*********************************************************************
#debug9 Show 'P600-Print-Record'


#debug8 Show '$vendor_id: '$vendor_id
#debug8 Show '$Deptid: '$Deptid
#debug8 Show '&wt.name: '&wt.name
#debug8 Show '&wt.emplid: '&wt.emplid
#debug8 Show '&wt.Birthdate: '&wt.Birthdate
#debug8 Show '&wt.Service_Dt: '&wt.Service_Dt
#debug8 Show '&wt.reg_temp: '&wt.reg_temp
#debug8 Show '&wt.DESCRSHORT: '&wt.DESCRSHORT
#debug8 Show '&wt.empl_status: '&wt.empl_status
#debug8 Show '&wt.Action: '&wt.Action
#debug8 Show '&wt.Action_Reason: '&wt.Action_Reason
#debug8 Show '&wt.Eff_dt: '&wt.Eff_dt
#debug8 Show '&wt.Term_Dt: '&wt.Term_Dt
#debug8 Show '&wt.hourly_rate: '&wt.hourly_rate
#debug8 Show '&wt.flat_rate: '&wt.flat_rate
#debug8 Show '&wt.hrs_mtd: '&wt.hrs_mtd
#debug8 Show '&wt.contrib_amt: '&wt.contrib_amt

  !Vendkxy done changes for ITG 65623-- Begin
  do Get-Emp-Ssn (&wt.emplid, $Ssn_Out) !GEX_SEC_REENG 2015-04-29 Vahini Katta 
  Print $vendor_id	       (+1,{#column1})				
  Print $Deptid		       (+0,{#column2})				
  Print &wt.name               (+0,{#column3},30)
  !Print &wt.emplid             (+0,{#column4})
  Print $Ssn_Out               (+0,{#column4})
  Print &wt.Birthdate          (+0,{#column5})
  Print &wt.Service_Dt         (+0,{#column6})
  Print &wt.reg_temp           (+0,{#column7})
  Print &wt.DESCRSHORT	       (+0,{#column8},30)			
  Print &wt.empl_status        (+0,{#column9})
  Print &wt.Action             (+0,{#column10})
  Print &wt.Action_Reason      (+0,{#column11})
  Print &wt.Eff_dt             (+0,{#column12})
  Print &wt.Term_Dt            (+0,{#column13})
  Print &wt.hourly_rate        (+0,{#column14})  Edit 999.9999
  Print &wt.flat_rate          (+0,{#column15})  Edit 999.9999
  Print &wt.hrs_mtd            (+0,{#column16})  Edit 99,999,999.99
  Print &wt.contrib_amt        (+0,{#column17})  Edit 999,999,999.99
 
!STRING $vendor_id $Deptid &wt.name &wt.emplid &wt.Birthdate &wt.Service_Dt &wt.reg_temp &WT.DESCRSHORT &wt.empl_status 
STRING $vendor_id $Deptid &wt.name $Ssn_Out &wt.Birthdate &wt.Service_Dt &wt.reg_temp &WT.DESCRSHORT &wt.empl_status
&wt.Action &wt.Action_Reason &wt.Eff_dt &wt.Term_Dt &wt.hourly_rate &wt.flat_rate &wt.hrs_mtd &wt.contrib_amt BY $DELIM INTO $GEXPL007

WRITE 1 FROM $GEXPL007
 
  !Vendkxy done changes for ITG 65623--End
End-Procedure

!*********************************************************************
Begin-Procedure P270-Before-Deptid-Break
!*********************************************************************
#debug9 Show 'P270-Before-Deptid-Break'

  New-Page
  
End-Procedure

!*********************************************************************
Begin-Procedure P280-After-Deptid-Break
!*********************************************************************
#debug9 Show 'P280-After-Deptid-Break'

  Print 'Deptid'                   (+2,{#column9})    !Vendkxy done changes for ITG 65623
  Print $Save_Deptid               (0,+1)
  Print 'Totals'                   (0,+1)
  Print #Deptid-Hours              (0,{#column16})        Edit 99,999,999.99     !Vendkxy done changes for ITG 65623   
  Print #Deptid-Amount             (0,{#column17})        Edit 999,999,999.99    !Vendkxy done changes for ITG 65623
  Add #Deptid-Hours  To #Vendor-ID-Hours
  Add #Deptid-Amount To #Vendor-ID-Amount
  Let #Deptid-Hours  = 0
  Let #Deptid-Amount = 0
  
End-Procedure

!*********************************************************************
Begin-Procedure P290-After-Vendor-ID-Break
!*********************************************************************
#debug9 Show 'P290-After-Vendor-ID-Break'

  Print  'VendorID'                (+2,{#column9})    !Vendkxy done changes for ITG 65623
  Print $Save_Vendor_ID            (0,+1)
  Print 'Totals'                   (0,+1)
  Print #Vendor-ID-Hours           (0,{#column16})        Edit 99,999,999.99	!Vendkxy done changes for ITG 65623
  Print #Vendor-ID-Amount          (0,{#column17})        Edit 999,999,999.99	!Vendkxy done changes for ITG 65623

  Let #Vendor-ID-Hours  = 0
  Let #Vendor-ID-Amount = 0
  
End-Procedure

!*********************************************************************
begin-procedure P180-create-work-table
!*********************************************************************
#debug9 show 'P180-create-work-table'

 Let $tablename = 'PS_WT_GEXPL007'    

begin-sql 
CREATE TABLE [$tablename] 
       (vendor_id	VARCHAR2(6)		NOT NULL,			
	DEPTID		VARCHAR2(10)		NOT NULL,
	NAME		VARCHAR2(50)		NOT NULL,
	EMPLID		VARCHAR2(11)		NOT NULL,
	BIRTHDATE	VARCHAR2(10)		NOT NULL,
	SERVICE_DT	VARCHAR2(10),
	REG_TEMP	VARCHAR2(10)		NOT NULL,
  DESCRSHORT      VARCHAR2(10)            NOT NULL,  !Vendkxy done changes for ITG 65623
	EMPL_STATUS	VARCHAR2(1)		NOT NULL,
	ACTION		VARCHAR2(3)		NOT NULL,
	ACTION_REASON	VARCHAR2(3)		NOT NULL,
	EFF_DT 		VARCHAR2(10)		NOT NULL,
	TERM_DT		VARCHAR2(10),
  HOURLY_RATE     NUMBER(18,6)		NOT NULL,
  FLAT_RATE       NUMBER(18,6)		NOT NULL,
  HRS_MTD         NUMBER(18,6)		NOT NULL,
  CONTRIB_AMT     NUMBER(18,6)		NOT NULL)

TABLESPACE TE7TOOLS001

End-Sql

End-Procedure

!*********************************************************************
begin-procedure P255-insert-into-work-table
!*********************************************************************
#debug9 show 'P255-insert-into-work-table'

#debug8 Show '$tablename: '$tablename
#debug8 Show '$P200_VENDOR_ID: '$P200_VENDOR_ID
#debug8 Show '$P200_DEPTID: '$P200_DEPTID
#debug8 Show '&PER.NAME: '&PER.NAME
#debug8 Show '&J.EMPLID: '&J.EMPLID
#debug8 Show '$BIRTHDATE: '$BIRTHDATE
#debug8 Show '$SERVICE_DT: '$SERVICE_DT
#debug8 Show '$REG_TEMP: '$REG_TEMP
#debug8 Show '$PosNameAbbrv: '$PosNameAbbrv
#debug8 Show '&J.EMPL_STATUS: '&J.EMPL_STATUS
#debug8 Show '$ACTION: '$ACTION
#debug8 Show '$ACTION_REASON: '$ACTION_REASON
#debug8 Show '$EFF_DT: '$EFF_DT
#debug8 Show '$TERM_DATE: '$TERM_DATE
#debug8 Show '#HOURLY_RATE: '#HOURLY_RATE
#debug8 Show '#FLAT_RATE: '#FLAT_RATE
#debug8 Show '#HRS_MTD: ' #HRS_MTD
#debug8 Show '#CONTRIBUTION_AMT: '#CONTRIBUTION_AMT

Begin-SQL

Insert Into [$tablename]
   Values ($P200_VENDOR_ID,
	$P200_DEPTID,	
	&PER.NAME,
	&J.EMPLID,
	$BIRTHDATE,
  $SERVICE_DT,
	$REG_TEMP,
  $PosNameAbbrv,	 !Vendkxy done changes for ITG 65623	
	&J.EMPL_STATUS,
	$ACTION,
	$ACTION_REASON,
	$EFF_DT,
	$TERM_DATE,
	#HOURLY_RATE,
	#FLAT_RATE,
  #HRS_MTD,
  #CONTRIBUTION_AMT)
End-SQL

End-Procedure

!*********************************************************************
begin-procedure P400-Select-from-work-table
!*********************************************************************
#debug9 show 'P400-Select-from-work-table'
#debug8 Show '$tablename: '$tablename

begin-SELECT 

WT.VENDOR_ID      ()        On-Break
			    Level=1
			    Print=Never
			    Save=$Save_Vendor_ID
			    After=P290-After-Vendor-ID-Break
	
WT.DEPTID         ()        On-Break
			    Level=2
			    Print=Never
			    Save=$Save_Deptid
			    Before=P270-Before-Deptid-Break
			    After=P280-After-Deptid-Break
WT.NAME
WT.EMPLID
WT.BIRTHDATE
WT.SERVICE_DT
WT.REG_TEMP
WT.DESCRSHORT      !Vendkxy done changes for ITG 65623
WT.EMPL_STATUS
WT.ACTION
WT.ACTION_REASON
WT.EFF_DT
WT.TERM_DT
WT.HOURLY_RATE
WT.FLAT_RATE
WT.HRS_MTD
WT.CONTRIB_AMT

  Let $provider = &wt.vendor_ID
  Let $vendor_id = &wt.vendor_ID
  Let $deptid = &wt.deptid

  Do P600-print-record
  move &wt.hrs_mtd      to #wt-hrs-mtd
  Add  #wt-hrs-mtd      To #Deptid-Hours
  move &wt.contrib_amt  to #wt-contrib-amt
  Add  #wt-contrib-amt  To #Deptid-Amount

FROM  [$tablename] WT

ORDER BY WT.VENDOR_ID, WT.DEPTID, WT.FLAT_RATE, WT.HOURLY_RATE, WT.NAME
					
end-SELECT

end-procedure

!*********************************************************************
begin-procedure P900-drop-work-table
!*********************************************************************
#debug9 show 'P900-drop-work-table' 
#debug8 Show '$tablename: '$tablename

begin-sql 
DROP TABLE [$tablename]
end-sql

end-procedure

!*********************************************************************
Begin-Procedure P300-Finish
!*********************************************************************
#debug9 Show 'P300-Finish'

  If $Data-Found-Flag <> 'Y'
    New-Page
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (25,) Center
  End-If
  
End-Procedure
!*********************************************************************
!*********************************************************************
#include 'gexxx912.sqc'  !Get plan type multiple row table
#include 'gexxx927.sqc'  !Get vendor id multiple row table
#include 'getdptnm.sqc'  !Get department name
#include 'getprvnm.sqc'  !Get vendor id name
#include 'getactnm.sqc'  !Get account code name
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'number.sqc'    !Routines to format numbers
#Include 'reset.sqc'     !Reset printer Procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'getposnm.sqc'  !Get-Position-Title procedure !VENDKXY Done the changes for ITG 65623
#Include 'getgeid.sqc'   !Get SSN !GEX_SEC_REENG 2015-04-29 Vahini Katta