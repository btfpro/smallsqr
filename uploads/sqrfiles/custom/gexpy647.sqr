!**********************************************************************
!  GEXPY647:  401K Interface for Guardian Group Pensions              *  
!**********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       * 
!                                                                      *
!***********************************************************************
!
! GEXPY647:  	401K & Census for Guardian Group Pensions
!			(Based on GEXPY641)
!
! Narrative:	Creates a 401K report and file for the third-party pension
!               administrator for store 0694.
!
! #Debugx Used:	#debug9 paragraph trace
!			#debug8 key variable values
!			#debug7 data returned from sql calls
!
! 	 
! SQL Tables:     PS_JOB  
!			PS_PERSONAL_DATA 	
!			PS_PAY_CAL_BAL_ID	 
!			PS_EMPLOYMENT 
!			PS_GEX_DEPT_TBL 
!			PS_BEN_PROG_PARTIC 
!			PS_BENEFIT_PARTIC 
!			PS_SAVINGS_PLAN 
!			PS_EARNINGS_BAL 
!			PS_DEDUCTION_BAL
!			PS_JOBCODE_TBL 
!
! Normally Run:	Monthly, and at Yearend
!
! Prerequisite: 	None
!
! Entered Run 
! Control Parms:	FOR WHERE CLAUSE:
!
!			Co/Div Code	 Company Division code grouping
!
!			Company  	 Franchise companies to be entered and maintained
!					 by user)
!
!			MonthEnd/
!			YearEnd_Flag User to enter parm to indicate if run is a monthend
!					 or a yearend run. SQR will then print/create MTD or 
!					 YTD balances.
!
!			As Of Date	Allow for entry or default to todays date.	 
!
!               	
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!ID#	INITIALS	DATE	DESCRIPTION OF THE CHANGE              *
!***********************************************************************
!                                                                      *
!	    CWB     11/06/2001  Cloned from GEXPY643.SQR               * 
!                               Initial Creation  based on             *
!                               GEXPY610.SQR                           *
!                                                                      *
!           CWB     09/05/2002  At the request of Guardian,            *
!                               discontinue eMailing the file.         *
!                               Send diskette instead.                 *
!                                                                      *
!           AXL     02/13/2003  Minor mods to 8.3 table changes        *
!                                                                      *
!           SRK     02/25/2003  Added logic to print detail always on  *
!	                        active status otherwise check ytd bal>0*
!                               Also, get the right termination date   *
!                               by adding 1 to job.last_date_worked    *
!                               if empl_Status is terminated but       *
!                               employment.termination_Dt is blank     *
!                               since employee got rehired             *
!	    SRK	    02/27/2003  As per users empl_rcd is needed for    *
!                               balances.                              *
!                                                                      *
!           GBD     07/11/2003  Added code to send file as an email    *
!                               attachment instead of sending a disk.  *
!                                                                      *
!  08/29/2003   CJH	Correct temp table create statement to define
!                       number columns with the correct precision as the
!                       source table
!                                                                      *
!           CWB     01/15/2004  Changed #include from gexernc2.sqc     *
!                                   to gexerncd.sqc                    * 
!                                                                      *
!       CWB     06/07/2004      Expanded ADDRESS1 and ADDRESS2 from    *
!                               35 characters to 55 in the work-table. *
!                                                                      *
!  GEX-AXG     08/17/2007      Upgrade 9.0
!  GEX-MXT     03/31/2007      Position CHANGES REVERTED BACK          *
!  GEX-MXT     04/02/2008      ADDED THE join condition for PER_ORG_INST*
!   SXR        07/08/2008      Added uncontrollable overtime to the    *   
!                              Earn code                               *
!                                                                      *
!                                                                      *
!***********************************************************************

!selection criteria
#define #x000_col_selection_criteria_a 	2
#define #x000_col_selection_criteria_b 	5
!#define OUTFILE /apps/hr/hrms90/hrdev90/outgoing/	!For Testing 
!line 1
#define #x000_col_company		02
#define #x000_col_deptid		06
#define #x000_col_union_cd		11
#define #x000_col_empl_status		17
#define #x000_col_hire_date     	21  !24
!GEX-MXT COMMENTED THE COORDINATES NOT AS IN 83-BEGIN
!#define #x000_col_termination_dt	31  !33
!#define #x000_col_birth_dt		42  !42
!#define #x000_col_name			55  !51
!#define #x000_col_emplid		81  !81
!#define #x000_col_hourly_rt		92  !92
!GEX-MXT COMMENTED THE COORDINATES NOT AS IN 83-END
!GEX-MXT PUT THE SAME COORDINATES AS IN 83-BEGIN
#define #x000_col_termination_dt	30  !33
#define #x000_col_birth_dt		39  !42
#define #x000_col_name			48  !51
#define #x000_col_emplid		77  !81
#define #x000_col_hourly_rt		88  !92
!GEX-MXT PUT THE SAME COORDINATES AS IN 83-END
#define #x000_col_empl_type             95


#define #x000_col_MTD_401K	      098       !GEX003-add
#define #x000_col_MTD_Gross	      111       !GEX003-add
#define #x000_col_MTD_Hours	      124       !GEX003-add
#define #x000_col_YTD_401K	      137       !GEX003-add
#define #x000_col_YTD_Gross	      150       !GEX003-add
#define #x000_col_YTD_Hours	      165       !GEX003-add

!line totals
#define #x000_col_totals_literal	4
#define #x000_col_totals_literal2	20
#define #x000_col_totals_literal3	30

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'  !Printer and page-size initialization

begin-heading 10

#Include 'stdhdg01.sqc'

 let $Company = rtrim($x000_Company,' ')

 do get-company-desc 
 let $x000_company_hdr = 'Company:    '|| $company || '  ' || $company_desc
 print $x000_company_hdr                (3,1) 

 let $deptid = rtrim($x000_deptid,' ') 
 let $x000_deptid_hdr = 'Deptid:     '|| $deptid
 print $x000_deptid_hdr                 (4,1) 

 let $x000_temp_out =  'Report as of ' || $X000_REPORT_HEADING_ASOFDATE 
 print $x000_temp_out 	            (4,) center 
 
!line 1
 print 'Co'	            (+2,{#x000_col_company})
 print 'Dept'       	(0,{#x000_col_deptid})
 print 'Union' 	      (0,{#x000_col_union_cd})
 print 'Emp'	      (0,{#x000_col_empl_status})
 print 'Hire'	      (0,{#x000_col_hire_date})
 print 'Term'	      (0,{#x000_col_termination_dt})
 print 'Birth'	      (0,{#x000_col_birth_dt})
 print 'Name'      	(0,{#x000_col_name})	
 print 'Emplid'	      (0,{#x000_col_emplid})
 print 'Hourly'         (0,{#x000_col_hourly_rt})
 print 'Emp'            (0,{#x000_col_empl_type})

   print   '     MTD'    (0,{#x000_col_MTD_401K})       
   print   '     MTD'         (0,{#x000_col_MTD_Gross})         
   print   '     MTD'    (0,{#x000_col_MTD_Hours})     
     print '     YTD'    (0,{#x000_col_YTD_401K})
     print '     YTD'         (0,{#x000_col_YTD_Gross})
     print '     YTD'    (0,{#x000_col_YTD_Hours})

!line 2 
 print 'Code'	       (+1,{#x000_col_union_cd})
 print 'Sta'	       (0,{#x000_col_empl_status})
 print 'Date'	       (0,{#x000_col_hire_date})
 print 'Date'	       (0,{#x000_col_termination_dt})
 print 'Date'	       (0,{#x000_col_birth_dt})
 print '    Rt'        (0,{#x000_col_hourly_rt})
 print 'Typ'           (0,{#x000_col_empl_type})
 print '   401K/'      (0,{#x000_col_MTD_401K})               !GEX003-chg
 print '   Gross'      (0,{#x000_col_MTD_Gross})              !GEX003-chg
 print '   Hours'      (0,{#x000_col_MTD_Hours})              !GEX003-chg
 print '   401K/'      (0,{#x000_col_YTD_401K})               !GEX003-add
 print '   Gross'      (0,{#x000_col_YTD_Gross})              !GEX003-add
 print '   Hours'      (0,{#x000_col_YTD_Hours})              !GEX003-add

!line 3 
 print '  401KPB'      (+1,{#x000_col_MTD_401K})
 print '    Wage'      (0,{#x000_col_MTD_Gross})             !GEX003-add
 print '  401KPB'      (0,{#x000_col_YTD_401K}) 
 print '    Wage'      (0,{#x000_col_YTD_Gross})             !GEX003-add

end-heading


!***********************************************************************
begin-report
!***********************************************************************
#debug9 show 'begin-report'

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
 
 ! show '$asoftoday=' $asoftoday 
 
  do StdAPI-Init
  do P010-Init-Variables
  do WT100-create-work-table
  do WT200-select-for-work-table
  do P100-Get-Job-Data
  do WT900-drop-work-table
  do P910-finalize
  do StdAPI-Term
  do Reset

  show 'Successful End of Report'

end-report


!***********************************************************************
begin-procedure P010-Init-Variables
!***********************************************************************
#debug9 show 'P010-Init-Variables'

  do P012-Array-Initialization

  do Get-Calendar-Year-Id
  show '$Calendar_Year_Id=' $Calendar_Year_Id

  let $x000_new_page_flag = 'N'

  let $ReportID    = 'GEXPY647'
  let $ReportTitle = '401K & Census for Guardian Group Pensions'
  let $Country     = 'USA'
  let $contract_nbr = '601107'
  let $first_pass  = 'Y'

  show '$ReportID=' $ReportID 
  show '$ReportTitle=' $ReportTitle
  show '$ReportDate=' $ReportDate
  show '$ReportTime=' $ReportTime
 
! move $AsofToday to $AsofDate
! show '$AsofDate=' $AsofDate

  Let $GEXXX901_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
  Let $GEXXX902_Deptid_Alias   = 'J.DEPTID'
  Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'
  Let $GEXXX907_Div_CD_Alias   = 'GEX_DEPT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias  = 'J.ACCT_CD'

!RUN CONTROL LOGIC
  if $Prcs_Process_Instance = ''
	do GEXXX950-Input-Parameters
  else
 
!	get parameters from single row run control record 
	Do GEXXX922-Select-Parameters
 	let $X000_WHERE_SELECT_MONTHEND_YEAREND_FLAG = $GEX_RC_PAY.GEX_MTH_YR_END_CD
      let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
      if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
        let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
      end-if
      do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')
!	get parameters from multiples run control record
    	Let $GEXXX900_Company_Alias  = 'J.COMPANY'                           

    Do GEXXX900-Select-Company-Parameters 
    Do GEXXX901-Select-Company-Paygroup-Parameters
    Do GEXXX902-Select-Deptid-Parameters 
    Do GEXXX903-Select-Emp-Stat-Parameters
    Do GEXXX907-Select-Div-CD-Parameters
    Do GEXXX909-Select-Acct-CD-Parameters

      let $X000_ORDER_BY = 'J.COMPANY, J.DEPTID, J.UNION_CD, P.NAME'

      show '$Prcs_Process_Instance =' $Prcs_Process_Instance 

  end-if

!default the selection date to today, if not entered by user
    if rtrim($X000_WHERE_SELECT_ASOFDATE, ' ' ) = ''
       let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
    end-if

    do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')

	show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA                =' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
	show '$GEXXX900_INCLUDE_COMPANY_CRITERIA               =' $GEXXX900_INCLUDE_COMPANY_CRITERIA
	show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA      =' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA   
	show '$GEXXX902_INCLUDE_DEPTID_CRITERIA                =' $GEXXX902_INCLUDE_DEPTID_CRITERIA
	show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA              =' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
 	show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA               =' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA         
      show '$X000_ORDER_BY                                   =' $X000_ORDER_BY
      show '$X000_WHERE_SELECT_ASOFDATE                      =' $X000_WHERE_SELECT_ASOFDATE 
	show '$X000_WHERE_SELECT_MONTHEND_YEAREND_FLAG         =' $X000_WHERE_SELECT_MONTHEND_YEAREND_FLAG

 	print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
	print '$Prcs_OPRID          ='                              (+1,{#x000_col_selection_criteria_b})
	print $Prcs_OPRID                                           (0,+2)
	print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
	print $PRCS_RUN_CNTL_ID                                     (0,+2)

 	print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,{#x000_col_selection_criteria_a})
	print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA 	    (0,+2)
 	print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
 	print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA            (0,+2)
 	print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})
 	print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA   (0,+2)
	print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)
	print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA           (0,+2)
	print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA            (0,+2)

      print '$X000_WHERE_SELECT_ASOFDATE                         ='   (+1,{#x000_col_selection_criteria_b})
      print $X000_WHERE_SELECT_ASOFDATE                           (0,+2)
	print '$X000_WHERE_SELECT_MONTHEND_YEAREND_FLAG            =' (+1,{#x000_col_selection_criteria_b})
	print $X000_WHERE_SELECT_MONTHEND_YEAREND_FLAG              (0,+2) 
   
	print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,{#x000_col_selection_criteria_a})
 	print '$X000_ORDER_BY                                      ='   (+1,{#x000_col_selection_criteria_b})
 	print $X000_ORDER_BY 	(0,+2)

  Let $GEXERNCD_Erncd_Alias = 'ERNCD'
  Do Get-Non-Productive-Erncds

  let $x000_ASCII_UNIX_Filename = '{OUTFILE}'||'gexpy647'||substr($prcs_run_cntl_id,9,2)||'.dat' !GEX003-add
  let $x000_ASCII_DOS_Filename = 'C:\temp\gexpy647' ||'.dat'        !GEX003-add

  do P020-Open-ASCII-File

  print 'ASCII OUTPUT FILE CREATED FOR THIS REPORT RUN: ' (+5,{#x000_col_selection_criteria_a})
  print $x020_display_filename (+1,{#x000_col_selection_criteria_b})

 LET #PAGE-COUNT = 0
 NEW-PAGE
 LET #PAGE-COUNT = 1

end-procedure

!******************************************
begin-procedure P012-Array-Initialization
!******************************************
#debug9 show 'P012-Array-Initialization'

!TOTALS ARRAY *****************  Total Type *****************************
!                     (0)                  (1)                   (2)	
!Level
!(0) Grand Total	MTD/YTD 401K	MTD/YTD Gross Wage	MTD/YTD Hours
!(1) Company	MTD/YTD 401K	MTD/YTD Gross Wage	MTD/YTD Hours
!(2) Deptid		MTD/YTD 401K	MTD/YTD Gross Wage	MTD/YTD Hours
!(3) Union Cd	MTD/YTD 401K	MTD/YTD Gross Wage	MTD/YTD Hours
	 
  create-array name=Total-Array size=4 -
    field=TotalName:char 
    field=total:number:4
    field=total_ytd:number:4	                                  !**GEX003-add

  put 'Grand Total'      into Total-Array(0) TotalName
  put 'Company Total'    into Total-Array(1) TotalName
  put 'Deptid'		 into Total-Array(2) TotalName
  put 'Union Cd'         into Total-Array(3) TotalName
 
end-procedure


!***********************************************************************
begin-procedure P015-get-input
!***********************************************************************
#debug9 show 'P015-get-input'

!must have been submitted via SQRW
      let $GEXXX907_INCLUDE_DIV_CD_CRITERIA           = '1=1'           
	let $GEXXX900_INCLUDE_COMPANY_CRITERIA 		= '1=1'
	let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1' 
	let $GEXXX902_INCLUDE_DEPTID_CRITERIA		= '1=1'
	let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA 		= '1=1'
	let $GEXXX904_INCLUDE_GRADE_CRITERIA 		= '1=1'		  
	let $GEXXX905_INCLUDE_HRLY_RT_CRITERIA 		= '1=1'
	let $GEXXX906_INCLUDE_WKLY_SAL_CRITERIA         = '1=1'
	let $GEXXX908_INCLUDE_SAL_ADMIN_PLAN_CRITERIA 	= '1=1'
	let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA          = '1=1'
      let $GEXXX952_INCLUDE_DIV_CD_DEPTID_DISPLAY_CRITERIA = '1=1'
      let $X000_WHERE_SELECT_ASOFDATE                 = $asoftoday
      let $X000_WHERE_SELECT_MONTHEND_YEAREND_FLAG = 'M' 
      let $X000_ORDER_BY = 'J.COMPANY, J.DEPTID, J.UNION_CD, P.NAME'
 
end-procedure

!***********************************************************************
begin-procedure P020-Open-ASCII-File
!***********************************************************************
#debug9 show 'P020-ASCII-File'

 #ifdef UNIX
 	#debug8 show 'In UNIX, open file ' $x000_ASCII_UNIX_Filename 
	open $x000_ASCII_UNIX_Filename as 1 for-writing record=131:fixed status=#filestat  !GEX003-add !used to be 330
      let $x020_display_filename = $x000_ASCII_UNIX_Filename 
	show 'open #filestat=' #filestat
 #end-if
 
 #ifdef NT
 	#debug8 show 'In NT, open file ' $x000_ASCII_DOS_Filename 
	open $x000_ASCII_DOS_Filename as 1 for-writing record=131:fixed status=#filestat   !GEX003-add
      let $x020_display_filename = $x000_ASCII_DOS_Filename 
	show 'open #filestat=' #filestat
 #end-if 

 #ifndef UNIX
  #ifndef NT
	show '**ERROR** During ASCII file open in P020. Incorrect operating system type.'
	print '**ERROR** During ASCII file open in P020. Incorrect operating system type.' (+10,10)
	show '** Stopping SQR.' 
	print '** Stopping SQR.' (+1,10) 
	STOP
  #end-if
 #end-if

 if #filestat <> 0
   show '**ERROR** During ASCII file open in P020. Non zero status code.'
   print '**ERROR** During ASCII file open in P020. Non zero status code.'  (+10,10)
 end-if
end-procedure

!******************************************
begin-procedure WT100-create-work-table
!******************************************
#debug9 show 'WT100-create-work-table'

 Let $tablename = 'PS_WT_GEXPY647'

begin-sql 
CREATE TABLE [$tablename] 
       (COMPANY		VARCHAR2(3)		NOT NULL,			
	DEPTID		VARCHAR2(10)		NOT NULL,
	UNION_CD	VARCHAR2(3)		NOT NULL,
	EMPLID		VARCHAR2(11)		NOT NULL,
	EMPL_RCD 	NUMBER(38)		NOT NULL,
	EFFDT		DATE 			NOT NULL,
	EFFSEQ		NUMBER(38)		NOT NULL,
	EMPL_STATUS	VARCHAR2(1)		NOT NULL,
	ACTION		VARCHAR2(3)		NOT NULL,
	ACTION_REASON	VARCHAR2(3)		NOT NULL,
	JOBCODE		VARCHAR2(6)		NOT NULL,
	REG_TEMP	VARCHAR2(1)		NOT NULL,
	paygroup	VARCHAR2(3)		NOT NULL,
	cobra_action	VARCHAR2(3)		NOT NULL,
	HOURLY_RT	NUMBER(18,6)		NOT NULL,
        empl_type	VARCHAR2(1)		NOT NULL,
	NAME		VARCHAR2(50)		NOT NULL,
	ORIG_HIRE_DT	DATE,
	BIRTHDATE	DATE			NOT NULL,
	SEX		VARCHAR2(1)		NOT NULL,
	ADDRESS1	VARCHAR2(55)		NOT NULL,	
	ADDRESS2	VARCHAR2(55)		NOT NULL,		
	CITY		VARCHAR2(30)		NOT NULL,
	STATE		VARCHAR2(6)		NOT NULL,
	ZIP		VARCHAR2(10)		NOT NULL,
	PAY_END_DT	DATE			NOT NULL,
	BALANCE_YEAR	NUMBER(38)		NOT NULL,
	BALANCE_QTR	NUMBER(38)		NOT NULL,
	BALANCE_PERIOD	NUMBER(38)		NOT NULL,
	HIRE_DT		DATE,
	TERMINATION_DT	DATE,
	BENEFIT_NBR	NUMBER(38)		NOT NULL,
	GEX_DEPTID	VARCHAR2(10)		NOT NULL,
	GEX_EFFDT	DATE			NOT NULL,
	GEX_SEQUENCE_NUMBER NUMBER(38)		NOT NULL,
	GEX_COMPANY_DIV_CD	VARCHAR2(3)	NOT NULL)
 
        TABLESPACE TE7TOOLS001

End-Sql
End-Procedure

!********************************************
begin-procedure WT200-select-for-work-table
!********************************************
#debug9 show 'WT200-select-for-work-table'


begin-SELECT 

J.COMPANY		
J.DEPTID	
J.UNION_CD	!AXL 2/13/2003 Comes from JOB in 8
J.EMPLID
J.EMPL_RCD
J.EFFDT
J.EFFSEQ
J.EMPL_STATUS
J.ACTION
J.ACTION_REASON
J.JOBCODE
J.REG_TEMP
J.paygroup
J.cobra_action
J.HOURLY_RT
J.empl_type
to_char(J.LAST_DATE_WORKED,'YYYY-MM-DD') &j.last_date_worked        !SRK 02/25/2003 Add
P.NAME
!Modified for Upgrade 9.0 GEX-AXG - Begin
!P.ORIG_HIRE_DT
PERINST.ORIG_HIRE_DT
!Modified for Upgrade 9.0 GEX-AXG - End
P.BIRTHDATE
P.SEX
P.ADDRESS1
P.ADDRESS2
P.CITY
P.STATE
P.POSTAL

PCB.PAY_END_DT
PCB.BALANCE_YEAR
PCB.BALANCE_QTR
PCB.BALANCE_PERIOD
EMP.HIRE_DT
EMP.TERMINATION_DT
EMP.BENEFIT_RCD_NBR

GEX_DEPT.DEPTID
GEX_DEPT.EFFDT
GEX_DEPT.SEQUENCE_NUMBER
GEX_DEPT.GEX_COMPANY_DIV_CD
  
  if $first_pass = 'Y'
     let $pay_end_dt = &PCB.PAY_END_DT 
     do create-filename-date
     let $first_pass = 'N'
     show '$x500_pay_end_dt: ' $x500_pay_end_dt
  end-if

  if (&J.COMPANY = $hold_company) and (&J.EMPLID = $hold_emplid) 
  else
    !SRK 02/25/2003 Added this logic so when employee gets rehired but this report still has to print
    !the previous term row, it will get the correct termination_dt since employment will not hold
    !termination date any more since the employee is active
  
    let $term_date = ''
    let $hire_date = ''
    if (&j.empl_status = 'A') or (&j.empl_Status = 'L') or (&j.empl_status = 'P') or (&j.empl_Status = 'S')
       let $term_date = &emp.termination_dt
       let $hire_date = &emp.hire_dt
    else
          let $latest_job = 'Y'
          do check-if-this-is-latest-job
          if $latest_job = 'Y'
             let $term_date = &emp.termination_dt
             let $hire_date = &emp.hire_dt
          else
             do dtu-add-days(&j.last_date_worked,1,$term_date_dtu)
             do convert-from-dtu-date($term_date_Dtu,$term_date)
             do select-this-term-hire-date
             let $hire_date = &tx.effdt
          end-if
    end-if

    do WT250-insert-into-work-table
  end-if

  let $hold_company = &J.COMPANY
  let $hold_emplid  = &J.EMPLID

FROM  PS_JOB          	J,
      !PS_JOB_LABOR      JL,
      PS_PERSONAL_DATA 	P,
      PS_PAY_CAL_BAL_ID	PCB,
      PS_EMPLOYMENT 	EMP,
      !Modified for Upgrade 9.0 GEX-AXG - Begin
      !PS_GEX_DEPT_TBL   GEX_DEPT
      PS_GEX_DEPT_TBL   GEX_DEPT,
      PS_PER_ORG_INST PERINST
      !Modified for Upgrade 9.0 GEX-AXG - End

WHERE P.EMPLID = J.EMPLID
 AND P.EMPLID = PERINST.EMPLID 	!Added for Upgrade 9.0 GEX-AXG
 AND PERINST.ORG_INSTANCE_ERN  = J.EMPL_RCD	!GEX-MXT added for PER_ORG_INST join
 AND [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
 AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
 AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
 AND [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
 AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]

  	AND J.EFFDT  =
    		(SELECT MAX(EFFDT)
       		FROM PS_JOB
      		WHERE EMPLID  = J.EMPLID
        		AND EMPL_RCD = J.EMPL_RCD
                        AND COMPANY = J.COMPANY 
                        AND DEPTID = J.DEPTID   
        		AND EFFDT    <= $X000_WHERE_SELECT_ASOFDATE)
  	AND J.EFFSEQ =
    		(SELECT MAX(EFFSEQ)
       		FROM PS_JOB
      		WHERE EMPLID  = J.EMPLID
        		AND EMPL_RCD = J.EMPL_RCD
                        AND COMPANY = J.COMPANY 
                        AND DEPTID = J.DEPTID    
        		AND EFFDT     = J.EFFDT)

        !AND    JL.EMPLID              = J.EMPLID 
        !AND    JL.EMPL_RCD#           = J.EMPL_RCD# 
	!AND    JL.EFFDT               =
	!      (SELECT MAX(EFFDT)
	!       FROM   PS_JOB_LABOR
	!       WHERE  EMPLID          = JL.EMPLID
	!       AND    EMPL_RCD#       = JL.EMPL_RCD#
	!       AND    EFFDT          <= $X000_WHERE_SELECT_ASOFDATE)
	!AND    JL.EFFSEQ              =
	!      (SELECT MAX(EFFSEQ)
	!       FROM   PS_JOB_LABOR
	!       WHERE  EMPLID          = JL.EMPLID
	!       AND    EMPL_RCD#       = JL.EMPL_RCD#
	!       AND    EFFDT           = JL.EFFDT)

	AND J.COMPANY = PCB.COMPANY 
	AND J.PAYGROUP = PCB.PAYGROUP
	AND PCB.PAY_END_DT = (SELECT MAX(PCB1.PAY_END_DT) FROM PS_PAY_CAL_BAL_ID PCB1
					WHERE PCB1.COMPANY = PCB.COMPANY  AND 
					PCB1.PAYGROUP = PCB.PAYGROUP      AND
                              PCB1.BALANCE_ID = PCB.BALANCE_ID  AND              !GEX003-add
					PCB1.PAY_END_DT <= $X000_WHERE_SELECT_ASOFDATE)
	AND PCB.BALANCE_ID = $Calendar_Year_Id
	AND J.EMPLID	= EMP.EMPLID
	AND J.EMPL_RCD	= EMP.EMPL_RCD
	AND J.EMPL_RCD = PERINST.ORG_INSTANCE_ERN	!GEX-MXT ADDED 
	AND J.DEPTID = GEX_DEPT.DEPTID 

	AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]

	AND GEX_DEPT.EFFDT = (SELECT MAX(GEX_DEPT1.EFFDT) FROM PS_GEX_DEPT_TBL GEX_DEPT1
			WHERE GEX_DEPT1.DEPTID = GEX_DEPT.DEPTID AND
				GEX_DEPT1.EFFDT <= $X000_WHERE_SELECT_ASOFDATE) 
	AND GEX_DEPT.SEQUENCE_NUMBER = (SELECT MAX(GEX_DEPT2.SEQUENCE_NUMBER) FROM PS_GEX_DEPT_TBL GEX_DEPT2
			WHERE GEX_DEPT2.DEPTID = GEX_DEPT.DEPTID AND
				GEX_DEPT2.EFFDT = GEX_DEPT.EFFDT)
			
ORDER BY J.COMPANY, J.EMPLID, J.EFFDT desc
					
end-SELECT

End-Procedure

!*********************************************
begin-procedure WT250-insert-into-work-table
!*********************************************
#debug9 show 'WT250-insert-into-work-table'

Begin-SQL

Insert Into [$tablename]
   Values (&J.COMPANY,		
	&J.DEPTID,	
	&J.UNION_CD,	!AXL 2/13/2003
	&J.EMPLID,
	&J.EMPL_RCD,
	&J.EFFDT,
	&J.EFFSEQ,
	&J.EMPL_STATUS,
	&J.ACTION,
	&J.ACTION_REASON,
	&J.JOBCODE,
	&J.REG_TEMP,
	&j.paygroup,
	&j.cobra_action,
	&J.HOURLY_RT,
	&j.empl_type,
	&P.NAME,
	!Modified for Upgrade 9.0 GEX-AXG - Begin
	!&P.ORIG_HIRE_DT,
	&PERINST.ORIG_HIRE_DT,
	!Modified for Upgrade 9.0 GEX-AXG - End
	&P.BIRTHDATE,
	&P.SEX,
	&P.ADDRESS1,
	&P.ADDRESS2,
	&P.CITY,
	&P.STATE,
	&P.POSTAL,
	&PCB.PAY_END_DT,
	&PCB.BALANCE_YEAR,
	&PCB.BALANCE_QTR,
	&PCB.BALANCE_PERIOD,
!	&EMP.HIRE_DT,
        $hire_date,
!	&EMP.TERMINATION_DT,              SRK 02/25/2003
        $term_date,                       !SRK 02/25/2003 added this
	&EMP.BENEFIT_RCD_NBR,
	&GEX_DEPT.DEPTID,
	&GEX_DEPT.EFFDT,
	&GEX_DEPT.SEQUENCE_NUMBER,
	&GEX_DEPT.GEX_COMPANY_DIV_CD)

End-SQL
End-Procedure
!SRK 02/25/2003 Begin - To get this termination's corresponding
!hire row since employment has already lost this hire date because
!employee after this termination got hired again.
!***********************************************************************
Begin-Procedure select-this-term-hire-date
!***********************************************************************
#debug9 show 'Select-this-term-hire-date'
begin-select
tx.effdt

from ps_job tx
where tx.emplid = &j.emplid
and tx.empl_rcd = &j.empl_rcd
and tx.effdt = (select max(effdt)
                  from ps_job
                 where emplid = tx.emplid
                   and empl_Rcd = tx.empl_rcd
                   and action in ('HIR','REH')
                   and effdt <= &j.effdt)
and tx.effseq = (select max(effseq)
                   from ps_job
                  where emplid = tx.emplid
                    and empl_rcd = tx.empl_rcd
                    and effdt = tx.effdt)
end-select

end-procedure
!***********************************************************************
begin-procedure check-if-this-is-latest-job
!***********************************************************************
#debug9 show 'Check-if-this-is-latest-job'
begin-select
'x'
   let $latest_job = 'N'
from ps_job tx1
where tx1.emplid = &j.emplid
and tx1.empl_rcd = &j.empl_rcd
and ((tx1.effdt > &j.effdt) or
     (tx1.effdt = &j.effdt and tx1.effseq > &j.effseq))
end-select
end-procedure
!SRK 02/25/2003 End

!******************************************
begin-procedure P100-Get-Job-Data
!******************************************
#debug9 show 'P100-Get-Job-Data'

  let $x100_Get_Job_Data_Flag = 'N'

begin-SELECT 

WT.COMPANY		() on-break print=never after=P800-Company-After-Change print=never
				before=P700-Company-Before-Change
				level=01	
WT.DEPTID		() on-break print=never after=P850-Deptid-After-Change print=never
				before=P750-Deptid-Before-Change								
				level=02	
WT.UNION_CD	() on-break print=never after=P875-Union-Cd-After-Change print=never
				before=P775-Union-Cd-Before-Change								
				level=03
WT.EMPLID
WT.EMPL_RCD
WT.EFFDT
WT.EFFSEQ
WT.EMPL_STATUS
WT.ACTION
WT.ACTION_REASON
WT.JOBCODE
WT.REG_TEMP
WT.paygroup
WT.cobra_action
WT.HOURLY_RT
WT.empl_type

WT.NAME
WT.ORIG_HIRE_DT
WT.BIRTHDATE
WT.SEX
WT.ADDRESS1
WT.ADDRESS2
WT.CITY
WT.STATE
WT.ZIP

WT.PAY_END_DT
WT.BALANCE_YEAR
WT.BALANCE_QTR
WT.BALANCE_PERIOD
WT.HIRE_DT
WT.TERMINATION_DT
WT.BENEFIT_NBR

  
  #debug7 show '******* JOB DATA **************'
  #debug7 show '&WT.COMPANY=' &WT.COMPANY
  #debug7 show '&WT.DEPTID=' &WT.DEPTID 
  #debug7 show '&WT.PAYGROUP=' &WT.PAYGROUP 
  #debug7 show '&WT.EMPLID=' &WT.EMPLID
  #debug7 show '&WT.EMPL_RCD=' &WT.EMPL_RCD
  #debug7 show '&WT.EFFDT=' &WT.EFFDT
  #debug7 show '&WT.EFFSEQ=' &WT.EFFSEQ
  #debug7 show '&WT.JOBCODE=' &WT.JOBCODE
  #debug7 show '&WT.cobra_action=' &WT.cobra_action
  #debug7 show '&WT.REG_TEMP=' &WT.REG_TEMP
  #debug7 show '&WT.HOURLY_RT=' &WT.HOURLY_RT
  #debug7 show '&WT.EMPL_STATUS=' &WT.EMPL_STATUS
  #debug7 show '&WT.ACTION_REASON=' &WT.ACTION_REASON
  #debug7 show '&WT.NAME=' &WT.NAME
  #debug7 show '&WT.ORIG_HIRE_DT=' &WT.ORIG_HIRE_DT
  #debug7 show 'WT.TERMINATION_DT=' &WT.TERMINATION_DT
  #debug7 show 'WT.UNION_CD=' &WT.UNION_CD
  #debug7 show 'WT.BENEFIT_NBR=' &WT.BENEFIT_NBR

 let #x200_balance_year = &WT.BALANCE_YEAR
 let #x200_balance_qtr = &WT.BALANCE_QTR
 let #x200_balance_period = &WT.BALANCE_PERIOD 
 let $x200_deptid = &WT.DEPTID
 let $x200_Union_Cd = &WT.UNION_CD
 let $x200_Name = &WT.NAME
 let $x200_Empl_Status = &WT.EMPL_STATUS
 let $x200_Action_Reason = &WT.ACTION_REASON
 let $x200_hire_date = &WT.HIRE_DT
 let $x200_Termination_Dt = &WT.TERMINATION_DT
 let $x200_Birthdate = &WT.BIRTHDATE
 let $x200_Orig_Hire_Dt = &WT.ORIG_HIRE_DT
 let $x200_Sex = &WT.SEX
 let $x200_Address1 = &WT.ADDRESS1
 let $x200_Address2 = &WT.ADDRESS2
 let $x200_Address3 = &WT.CITY || &WT.STATE
 let $x200_Zip = &WT.ZIP
 let $x200_Emplid = &WT.EMPLID
 let $x100_JobCode = &WT.JOBCODE

 do P150-Get-Benefit-Participation
!when you find a savings plan record, whether waived or elected
 
	do P200-Get-Deduction-Bal
      do P205-Get-Deduction-Bal-YTD                                      !GEX003-add
  	do P300-Get-Earnings-Bal
      do P300-Get-Hours-Bal     ! JNB 02/17/99
      do P305-Get-Earnings-Bal-YTD                                   !GEX003-add
      do P305-Get-Hours-Bal-YTD     ! JNB 02/17/99      

!only print the detail if a balance row was found for the employee   !GEX003-add
 if $P200_Get_Deduction_Bal_Flag = 'Y' or                            !GEX003-add
    $P300_Get_Earnings_Bal_Flag = 'Y' or                             !GEX003-add
    $P305_Get_Earnings_Bal_YTD_Flag = 'Y' or                         !GEX003-add
    $P300_Get_Hours_Bal_flag = 'Y' or    ! JNB 02/17/99
    $P305_Get_Hours_Bal_YTD_Flag = 'Y'       ! JNB 02/17/99

      Let $one_row_found = 'Y'  ! SXC 05/15/2000


      let $x100_Get_Job_Data_Flag = 'Y'                              !GEX003-moved
      do P900-Get-Job-Code-Info

      let $name = &WT.NAME
      do rotate-name 
      let $name_out = $lastname || ', ' || $firstname || ' ' || $MidInitial
!SRK 02/25/2003 Added this to print always if empl is active otherwise
!check ytd balances 

    evaluate &WT.EMPL_STATUS
      when = 'A'
      when = 'L'
      when = 'P'
      when = 'S'
           do P500-Build-Detail-Record
           do P600-Write-Detail-Report-Line

      when-other
	if (#x205_ded_ytd > 0) or
	   (#x205_ded_401kpb_ytd > 0) or
           (#x305_grs_ytd > 0) or
	   (#x305_hrs_ytd > 0)
              do P500-Build-Detail-Record
              do P600-Write-Detail-Report-Line

        end-if
     end-evaluate
 end-if                                                              !GEX003-add

 if $one_row_found = 'Y'
    let $x100_At_Least_One_Selected_For_CO_DEPT_UNION_Flag = 'Y'
 end-if

FROM  [$tablename] WT

ORDER BY WT.COMPANY, WT.DEPTID, WT.UNION_CD, WT.NAME
					
end-SELECT

  
 if $x100_Get_Job_Data_Flag = 'N'
	print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) CENTER
 else

 	print 'Grand' 	  (+2,{#x000_col_totals_literal})
      let $x000_out = 'Total'
      print $x000_out  	  (0,{#x000_col_totals_literal3})
		
      !get and print grand  401K totals
	get #x000_MTD_xxx from Total-Array(0) Total(0)                !GEX003-chg
        get #x000_mtd_401kpb_xxx from total-array(0) total(1)
	get #x000_YTD_xxx from Total-Array(0) Total_YTD(0)            !GEX003-add
        get #x000_ytd_401kpb_xxx from total-array(0) Total_YTD(1)     !AXL 5/27/99

 	let #x000_temp_col = {#x000_col_MTD_401K} - 1                 !GEX003-chg
 	print #x000_MTD_xxx (0,#x000_temp_col) EDIT 9,999,990.00      !GEX003-chg
        print #x000_mtd_401kpb_xxx (+1,#x000_temp_col) edit 9,999,990.00
 	let #x000_temp_col = {#x000_col_YTD_401K} - 1                 !GEX003-add
 	print #x000_YTD_xxx (-1,#x000_temp_col) EDIT 9,999,990.00      !GEX003-add
        print #x000_ytd_401kpb_xxx (+1,#x000_temp_col) edit 9,999,990.00
     

	!get and print Grand  GROSS totals
 	get #x000_MTD_xxx from Total-Array(0) Total(2)                !GEX003-chg
 	get #x000_YTD_xxx from Total-Array(0) Total_YTD(2)            !GEX003-add

 	let #x000_temp_col = {#x000_col_MTD_Gross} - 1                !GEX003-chg
 	print #x000_MTD_xxx (-1,#x000_temp_col) EDIT 9,999,990.00      !GEX003-chg
 	let #x000_temp_col = {#x000_col_YTD_Gross} - 1                !GEX003-add
 	print #x000_YTD_xxx (0,#x000_temp_col) EDIT 9,999,990.00      !GEX003-add

	!get and print Grand  HOURS totals
 	get #x000_MTD_xxx from Total-Array(0) Total(3)                !GEX003-chg
 	get #x000_YTD_xxx from Total-Array(0) Total_YTD(3)            !gex003-add      

 	let #x000_temp_col = {#x000_col_MTD_Hours} - 1                !GEX003-chg
 	print #x000_MTD_xxx (0,#x000_temp_col) EDIT 9,999,990.00      !GEX003-chg
 	let #x000_temp_col = {#x000_col_YTD_Hours} - 1                !GEX003-add
 	print #x000_YTD_xxx (0,#x000_temp_col) EDIT 9,999,990.00      !GEX003-add

	!reinitialize the company array totals
 	put 0 0 into Total-Array(0) Total(0) total_ytd(0)              !GEX003-chg
 	put 0 0 into Total-Array(0) Total(1) total_ytd(1)              !GEX003-chg
 	put 0 0 into Total-Array(0) Total(2) total_ytd(2)              !GEX003-chg
  	put 0 0 into Total-Array(0) Total(3) total_ytd(3)
 end-if

end-procedure

!***********************************************
begin-procedure P150-Get-Benefit-Participation
!***********************************************
#debug9 show 'P150-Get-Benefit-Participation'

 let $x150_coverage_elect = ''
 let $x150_Get_Savings_Data_Flag = 'N'

begin-SELECT
SP.EMPLID
SP.EMPL_RCD
SP.PLAN_TYPE
SP.BENEFIT_NBR
SP.EFFDT
SP.COVERAGE_ELECT
 let $x150_coverage_elect = &SP.COVERAGE_ELECT
 let $x150_Get_Savings_Data_Flag = 'Y'

 #DEBUG7 show '******** BENEFIT PARTICIPATION DATA ******************'
 #DEBUG7 show 'SP.EMPLID=' &SP.EMPLID
 #DEBUG7 show 'SP.EMPL_RCD=' &SP.EMPL_RCD
 #DEBUG7 show 'SP.PLAN_TYPE=' &SP.PLAN_TYPE
 #DEBUG7 show 'SP.BENEFIT_NBR=' &SP.BENEFIT_NBR
 #DEBUG7 show 'SP.EFFDT=' &SP.EFFDT
 #DEBUG7 show 'SP.COVERAGE_ELECT=' &SP.COVERAGE_ELECT

FROM  PS_BEN_PROG_PARTIC BPP,
      PS_BENEFIT_PARTIC BP,
      PS_SAVINGS_PLAN SP

WHERE	BPP.EMPLID = &WT.EMPLID AND 
	BPP.EMPL_RCD = &WT.EMPL_RCD AND 
	BPP.COBRA_EVENT_ID =  0 AND
	BPP.EFFDT = (SELECT MAX(BPP1.EFFDT) FROM PS_BEN_PROG_PARTIC BPP1
			WHERE BPP.EMPLID = BPP1.EMPLID AND 
				BPP.EMPL_RCD = BPP1.EMPL_RCD AND 
				BPP.COBRA_EVENT_ID = BPP1.COBRA_EVENT_ID AND  
				BPP.EFFDT <= $X000_WHERE_SELECT_ASOFDATE)  AND
	BPP.EMPLID = BP.EMPLID AND 
	BPP.EMPL_RCD = BP.EMPL_RCD AND 
	BPP.COBRA_EVENT_ID = BP.COBRA_EVENT_ID  AND
	BP.PLAN_TYPE = '40' AND 
	BP.BENEFIT_NBR = &WT.BENEFIT_NBR AND 
	BP.EMPLID = SP.EMPLID AND 
	BP.EMPL_RCD = SP.EMPL_RCD AND 
	BP.PLAN_TYPE = SP.PLAN_TYPE  AND 
	BP.BENEFIT_NBR = SP.BENEFIT_NBR  AND
	SP.EFFDT = (SELECT MAX(SP1.EFFDT) FROM PS_SAVINGS_PLAN SP1
			WHERE SP.EMPLID = SP1.EMPLID AND 
				SP.EMPL_RCD = SP1.EMPL_RCD AND 
				SP.PLAN_TYPE = SP1.PLAN_TYPE  AND 
				SP.BENEFIT_NBR = SP1.BENEFIT_NBR AND 
				SP.EFFDT <= $X000_WHERE_SELECT_ASOFDATE)


end-SELECT

end-procedure

!***********************************************************************
begin-procedure P200-Get-Deduction-Bal
!***********************************************************************
#debug9 show 'P200-Get-Deduction-Bal'

 let $P200_Get_Deduction_Bal_Flag = 'N'
 let #x200_ded_mtd = 0
 let #x200_ded_401kpb_mtd = 0
 let #x200_ded_ytd = 0

begin-SELECT

DEDBAL.EMPLID
DEDBAL.COMPANY 
DEDBAL.BALANCE_ID
DEDBAL.BALANCE_YEAR  
DEDBAL.BALANCE_QTR  
DEDBAL.BALANCE_PERIOD
DEDBAL.PLAN_TYPE   
DEDBAL.BENEFIT_PLAN    
DEDBAL.DEDCD    
DEDBAL.DED_CLASS     
        
DEDBAL.DED_MTD
DEDBAL.DED_YTD

 !10/18/2000 - AXL - Begin
 if   ((&DEDBAL.DEDCD =  '401KPB') or
       (&DEDBAL.DEDCD =  'LOAN01') or
       (&DEDBAL.DEDCD =  'LOAN02') or
       (&DEDBAL.DEDCD =  'LOAN03'))
    let #x200_ded_401kpb_mtd = #x200_ded_401kpb_mtd + &DEDBAL.DED_MTD
 else
    let #x200_ded_mtd = #x200_ded_mtd + &DEDBAL.DED_MTD
 end-if
 !10/18/2000 - AXL - End

 let $P200_Get_Deduction_Bal_Flag = 'Y'

#DEBUG7 show '********** DEDUCTION MTD BALANCE DATA ****************'

 #DEBUG7 show 'DEDBAL.EMPLID           =' &DEDBAL.EMPLID
 #DEBUG7 show 'DEDBAL.COMPANY          =' &DEDBAL.COMPANY 
 #DEBUG7 show 'DEDBAL.BALANCE_ID       =' &DEDBAL.BALANCE_ID
 #DEBUG7 show 'DEDBAL.BALANCE_YEAR     =' &DEDBAL.BALANCE_YEAR  
 #DEBUG7 show 'DEDBAL.BALANCE_YEAR     =' &DEDBAL.BALANCE_QTR  
 #DEBUG7 show 'DEDBAL.BALANCE_PERIOD   =' &DEDBAL.BALANCE_PERIOD  
 #DEBUG7 show 'DEDBAL.PLAN_TYPE        =' &DEDBAL.PLAN_TYPE  
 #DEBUG7 show 'DEDBAL.BENEFIT_PLAN     =' &DEDBAL.BENEFIT_PLAN     
 #DEBUG7 show 'DEDBAL.DEDCD            =' &DEDBAL.DEDCD     
 #DEBUG7 show 'DEDBAL.DED_CLASS        =' &DEDBAL.DED_CLASS     
 #DEBUG7 show 'DEDBAL.DED_MTD          =' &DEDBAL.DED_MTD
 #DEBUG7 show 'DEDBAL.DED_YTD          =' &DEDBAL.DED_YTD

FROM  PS_DEDUCTION_BAL DEDBAL

WHERE DEDBAL.EMPLID         = &WT.EmplID
  AND DEDBAL.COMPANY        = &WT.Company
  AND DEDBAL.BALANCE_ID     = $Calendar_Year_Id 
  AND DEDBAL.BALANCE_YEAR   = &WT.BALANCE_YEAR  
  AND DEDBAL.BALANCE_PERIOD = &WT.BALANCE_PERIOD        !GEX003-add


  AND DEDBAL.PLAN_TYPE     = '00'                        !GEX003-add
 !10/18/2000 - AXL - Begin
 !AND DEDBAL.DEDCD     LIKE   '4%'                       !GEX003-add
  AND (DEDBAL.DEDCD LIKE   '4%' or DEDBAL.DEDCD LIKE   'LOAN0%')
 !10/18/2000 - AXL - End

end-SELECT 

end-procedure

!**************************************** GEX003-added entire paragraph
begin-procedure P205-Get-Deduction-Bal-YTD
!***********************************************************************
#debug9 show 'P205-Get-Deduction-Bal-YTD'

 let $P205_Get_Deduction_Bal_Flag = 'N'
 let #x205_ded_ytd = 0
 let #x205_ded_401kpb_ytd = 0
begin-SELECT

P205DEDBAL.EMPLID
P205DEDBAL.COMPANY 
P205DEDBAL.BALANCE_ID
P205DEDBAL.BALANCE_YEAR  
P205DEDBAL.BALANCE_QTR  
P205DEDBAL.BALANCE_PERIOD
P205DEDBAL.PLAN_TYPE   
P205DEDBAL.BENEFIT_PLAN    
P205DEDBAL.DEDCD    
P205DEDBAL.DED_CLASS     
        
P205DEDBAL.DED_MTD
P205DEDBAL.DED_YTD

 if   ((&P205DEDBAL.DEDCD =  '401KPB') or
       (&P205DEDBAL.DEDCD =  'LOAN01') or
       (&P205DEDBAL.DEDCD =  'LOAN02') or
       (&P205DEDBAL.DEDCD =  'LOAN03'))
    let #x205_ded_401kpb_ytd = #x205_ded_401kpb_ytd + &P205DEDBAL.DED_YTD
 else
    let #x205_ded_ytd = #x205_ded_ytd + &P205DEDBAL.DED_YTD
 end-if

 let $P205_Get_Deduction_Bal_Flag = 'Y'

#DEBUG7 show '********** DEDUCTION YTD BALANCE DATA ****************'

 #DEBUG7 show 'P205DEDBAL.EMPLID         =' &P205DEDBAL.EMPLID
 #DEBUG7 show 'P205DEDBAL.COMPANY        =' &P205DEDBAL.COMPANY 
 #DEBUG7 show 'P205DEDBAL.BALANCE_ID     =' &P205DEDBAL.BALANCE_ID
 #DEBUG7 show 'P205DEDBAL.BALANCE_YEAR   =' &P205DEDBAL.BALANCE_YEAR  
 #DEBUG7 show 'P205DEDBAL.BALANCE_YEAR   =' &P205DEDBAL.BALANCE_QTR  
 #DEBUG7 show 'P205DEDBAL.BALANCE_PERIOD =' &P205DEDBAL.BALANCE_PERIOD  
 #DEBUG7 show 'P205DEDBAL.PLAN_TYPE      =' &P205DEDBAL.PLAN_TYPE  
 #DEBUG7 show 'P205DEDBAL.BENEFIT_PLAN   =' &P205DEDBAL.BENEFIT_PLAN     
 #DEBUG7 show 'P205DEDBAL.DEDCD          =' &P205DEDBAL.DEDCD     
 #DEBUG7 show 'P205DEDBAL.DED_CLASS      =' &P205DEDBAL.DED_CLASS     
   
 #DEBUG7 show 'P205DEDBAL.DED_MTD        =' &P205DEDBAL.DED_MTD
 #DEBUG7 show 'P205DEDBAL.DED_YTD        =' &P205DEDBAL.DED_YTD


FROM  PS_DEDUCTION_BAL P205DEDBAL

WHERE P205DEDBAL.EMPLID         = &WT.EmplID
  AND P205DEDBAL.COMPANY        = &WT.Company
  AND P205DEDBAL.BALANCE_ID     = $Calendar_Year_Id 
  AND P205DEDBAL.BALANCE_YEAR   = &WT.BALANCE_YEAR  

  AND P205DEDBAL.BALANCE_PERIOD =                           
      (SELECT MAX(P205DEDBAL1.BALANCE_PERIOD)
       FROM PS_DEDUCTION_BAL P205DEDBAL1
       WHERE P205DEDBAL1.EMPLID        = P205DEDBAL.EMPLID
        AND P205DEDBAL1.COMPANY        = P205DEDBAL.COMPANY
        AND P205DEDBAL1.BALANCE_ID     = P205DEDBAL.BALANCE_ID
        AND P205DEDBAL1.BALANCE_YEAR   = P205DEDBAL.BALANCE_YEAR
        AND P205DEDBAL1.PLAN_TYPE      = P205DEDBAL.PLAN_TYPE
        AND P205DEDBAL1.DEDCD          = P205DEDBAL.DEDCD
        AND P205DEDBAL1.DED_CLASS      = P205DEDBAL.DED_CLASS
        AND P205DEDBAL1.BALANCE_PERIOD <= &WT.BALANCE_PERIOD) 

  AND P205DEDBAL.PLAN_TYPE     = '00'   
  !10/18/2000 - AXL - Begin                      
  !AND P205DEDBAL.DEDCD   LIKE    '4%'            
  AND (P205DEDBAL.DEDCD LIKE   '4%' or P205DEDBAL.DEDCD LIKE   'LOAN0%')
  !10/18/2000 - AXL - End
             
end-SELECT 

end-procedure

!***************************************
begin-procedure P300-Get-Earnings-Bal
!***************************************
#debug9 show 'P300-Get-Earnings-Bal'

 let $P300_Get_Earnings_Bal_Flag = 'N' 

 let #x300_grs_mtd = 0

begin-SELECT
EB.EMPLID
EB.COMPANY
EB.BALANCE_ID 
EB.BALANCE_YEAR 
EB.BALANCE_QTR 
EB.BALANCE_PERIOD 
EB.SPCL_BALANCE
EB.ERNCD   
EB.GRS_MTD

#DEBUG7 show '********** EARNINGS BALANCE DATA ****************'

 #DEBUG7 show 'EB.EMPLID=' &EB.EMPLID
 #DEBUG7 show 'EB.COMPANY=' &EB.COMPANY
 #DEBUG7 show 'EB.BALANCE_ID=' &EB.BALANCE_ID 
 #DEBUG7 show 'EB.BALANCE_YEAR=' &EB.BALANCE_YEAR 
 #DEBUG7 show 'EB.BALANCE_YEAR=' &EB.BALANCE_QTR  
 #DEBUG7 show 'EB.BALANCE_PERIOD=' &EB.BALANCE_PERIOD 
 #DEBUG7 show 'EB.SPCL_BALANCE=' &EB.SPCL_BALANCE
 #DEBUG7 show 'EB.ERNCD=' &EB.ERNCD   
 #DEBUG7 show 'EB.BALANCE_PERIOD=' &EB.BALANCE_PERIOD
 #DEBUG7 show 'EB.GRS_MTD=' &EB.GRS_MTD   
 
 let #x300_grs_mtd = #x300_grs_mtd + &EB.GRS_MTD            
 
 let $P300_Get_Earnings_Bal_Flag = 'Y'

FROM  PS_EARNINGS_BAL EB

WHERE EB.EMPLID         = &WT.EmplID
  AND EB.COMPANY        = &WT.Company
  AND EB.EMPL_RCD       = &WT.EMPL_RCD		!SRK 02/27/2003 Added
  AND EB.SPCL_BALANCE   = 'N'
  AND EB.BALANCE_ID     = $Calendar_Year_Id
  AND EB.BALANCE_YEAR   = &WT.BALANCE_YEAR 
  AND EB.BALANCE_PERIOD = &WT.BALANCE_PERIOD           !GEX003-add
  AND [$GEXERNCD_EXCLUDE_ERNCD_CRITERIA]

end-SELECT
end-procedure 

!***************************************
begin-procedure P300-Get-Hours-Bal
!***************************************
#debug9 show 'P300-Get-Hours-Bal'

 let $P300_Get_Hours_Bal_Flag = 'N' 
      
 let #x300_hrs_mtd = 0

begin-SELECT
EBH.EMPLID
EBH.COMPANY
EBH.BALANCE_ID 
EBH.BALANCE_YEAR 
EBH.BALANCE_QTR 
EBH.BALANCE_PERIOD 
EBH.SPCL_BALANCE
EBH.ERNCD   
EBH.HRS_MTD

#DEBUG7 show '********** EARNINGS BALANCE DATA ****************'

 #DEBUG7 show 'EBH.EMPLID=' &EBH.EMPLID
 #DEBUG7 show 'EBH.COMPANY=' &EBH.COMPANY
 #DEBUG7 show 'EBH.BALANCE_ID=' &EBH.BALANCE_ID 
 #DEBUG7 show 'EBH.BALANCE_YEAR=' &EBH.BALANCE_YEAR 
 #DEBUG7 show 'EBH.BALANCE_YEAR=' &EBH.BALANCE_QTR  
 #DEBUG7 show 'EBH.BALANCE_PERIOD=' &EBH.BALANCE_PERIOD 
 #DEBUG7 show 'EBH.SPCL_BALANCE=' &EBH.SPCL_BALANCE
 #DEBUG7 show 'EBH.ERNCD=' &EBH.ERNCD   
 #DEBUG7 show 'EBH.BALANCE_PERIOD=' &EBH.BALANCE_PERIOD
 #DEBUG7 show 'EBH.HRS_MTD=' &EBH.HRS_MTD
 
 let #x300_hrs_mtd = #x300_hrs_mtd + &EBH.HRS_MTD            

 
 let $P300_Get_Hours_Bal_Flag = 'Y'

FROM  PS_EARNINGS_BAL EBH

WHERE EBH.EMPLID         = &WT.EmplID
  AND EBH.COMPANY        = &WT.Company
  AND EBH.EMPL_RCD       = &WT.EMPL_RCD		!SRK 02/27/2003 Added
  AND EBH.SPCL_BALANCE   = 'N'
  AND EBH.BALANCE_ID     = $Calendar_Year_Id
  AND EBH.BALANCE_YEAR   = &WT.BALANCE_YEAR 
  AND ((EBH.ERNCD BETWEEN '001' AND '499') or
        EBH.ERNCD IN ('REG' , 'OTP' ,'173')) !ISDVSXR added 07/08/2008 ITG-51358
        !EBH.ERNCD IN ('REG' , 'OTP'))!ISDVSXR commented 07/08/2008 ITG-51358
  AND EBH.BALANCE_PERIOD =  &WT.BALANCE_PERIOD                   

end-SELECT
end-procedure 

!**************************************** 
begin-procedure P305-Get-Earnings-Bal-YTD
!*****************************************
#debug9 show 'P305-Get-Earnings-Bal-YTD'

 let $P305_Get_Earnings_Bal_YTD_Flag = 'N'
 
 let #x305_grs_ytd = 0

begin-SELECT
P305EB.EMPLID
P305EB.COMPANY
P305EB.BALANCE_ID 
P305EB.BALANCE_YEAR 
P305EB.BALANCE_QTR 
P305EB.BALANCE_PERIOD 
P305EB.SPCL_BALANCE
P305EB.ERNCD   
P305EB.GRS_YTD 

#DEBUG7 show '********** EARNINGS YTD BALANCE DATA ****************'

 #DEBUG7 show 'P305EB.EMPLID        =' &P305EB.EMPLID
 #DEBUG7 show 'P305EB.COMPANY       =' &P305EB.COMPANY
 #DEBUG7 show 'P305EB.BALANCE_ID    =' &P305EB.BALANCE_ID 
 #DEBUG7 show 'P305EB.BALANCE_YEAR  =' &P305EB.BALANCE_YEAR 
 #DEBUG7 show 'P305EB.BALANCE_YEAR  =' &P305EB.BALANCE_QTR  
 #DEBUG7 show 'P305EB.BALANCE_PERIOD=' &P305EB.BALANCE_PERIOD 
 #DEBUG7 show 'P305EB.SPCL_BALANCE  =' &P305EB.SPCL_BALANCE
 #DEBUG7 show 'P305EB.ERNCD         =' &P305EB.ERNCD   
 #DEBUG7 show 'P305EB.BALANCE_PERIOD=' &P305EB.BALANCE_PERIOD
 #DEBUG7 show 'P305EB.GRS_YTD       =' &P305EB.GRS_YTD 
 
 let #x305_grs_ytd = #x305_grs_ytd + &P305EB.GRS_YTD 

 let $P305_Get_Earnings_Bal_YTD_Flag = 'Y'


FROM  PS_EARNINGS_BAL P305EB

WHERE P305EB.EMPLID         = &WT.EmplID
  AND P305EB.COMPANY        = &WT.Company
  AND P305EB.EMPL_RCD       = &WT.EMPL_RCD		!SRK 02/27/2003 Added
  AND P305EB.SPCL_BALANCE   = 'N'
  AND P305EB.BALANCE_ID     = $Calendar_Year_Id
  AND P305EB.BALANCE_YEAR   = &WT.BALANCE_YEAR
  AND P305EB.BALANCE_PERIOD = 
      (SELECT MAX(P305EB1.BALANCE_PERIOD)
       FROM   PS_EARNINGS_BAL P305EB1
       WHERE  P305EB1.EMPLID        = P305EB.EmplID
         AND  P305EB1.COMPANY       = P305EB.Company
	 AND  P305EB1.EMPL_RCD      = P305EB.EMPL_RCD		!SRK 02/27/2003 Added
         AND  P305EB1.ERNCD         = P305EB.ERNCD
         AND  P305EB1.SPCL_BALANCE  = P305EB.SPCL_BALANCE
         AND  P305EB1.BALANCE_ID    = P305EB.BALANCE_ID
         AND  P305EB1.BALANCE_YEAR  = P305EB.BALANCE_YEAR
         AND  P305EB1.BALANCE_PERIOD <= &WT.BALANCE_PERIOD)
  AND [$GEXERNCD_EXCLUDE_ERNCD_CRITERIA]

end-SELECT

end-procedure 

!**************************************** 
begin-procedure P305-Get-Hours-Bal-YTD
!*****************************************
#debug9 show 'P305-Get-Hours-Bal-YTD'

 let $P305_Get_Hours_Bal_YTD_Flag = 'N'
 
 let #x305_hrs_ytd = 0

begin-SELECT
P305EBH.EMPLID
P305EBH.COMPANY
P305EBH.BALANCE_ID 
P305EBH.BALANCE_YEAR 
P305EBH.BALANCE_QTR 
P305EBH.BALANCE_PERIOD 
P305EBH.SPCL_BALANCE
P305EBH.ERNCD   
P305EBH.HRS_YTD 

#DEBUG7 show '********** EARNINGS YTD BALANCE DATA ****************'

 #DEBUG7 show 'P305EBH.EMPLID        =' &P305EBH.EMPLID
 #DEBUG7 show 'P305EBH.COMPANY       =' &P305EBH.COMPANY
 #DEBUG7 show 'P305EBH.BALANCE_ID    =' &P305EBH.BALANCE_ID 
 #DEBUG7 show 'P305EBH.BALANCE_YEAR  =' &P305EBH.BALANCE_YEAR 
 #DEBUG7 show 'P305EBH.BALANCE_YEAR  =' &P305EBH.BALANCE_QTR  
 #DEBUG7 show 'P305EBH.BALANCE_PERIOD=' &P305EBH.BALANCE_PERIOD 
 #DEBUG7 show 'P305EBH.SPCL_BALANCE  =' &P305EBH.SPCL_BALANCE
 #DEBUG7 show 'P305EBH.ERNCD         =' &P305EBH.ERNCD   
 #DEBUG7 show 'P305EBH.BALANCE_PERIOD=' &P305EBH.BALANCE_PERIOD
 #DEBUG7 show 'P305EBH.HRS_YTD       =' &P305EBH.HRS_YTD 
 
 let #x305_hrs_ytd = #x305_hrs_ytd + &P305EBH.HRS_YTD 

 let $P305_Get_Hours_Bal_YTD_Flag = 'Y'

FROM  PS_EARNINGS_BAL P305EBH

WHERE P305EBH.EMPLID         = &WT.EmplID
  AND P305EBH.COMPANY        = &WT.Company
  AND P305EBH.EMPL_RCD       = &WT.EMPL_RCD		!SRK 02/27/2003 Added
  AND P305EBH.SPCL_BALANCE   = 'N'
  AND P305EBH.BALANCE_ID     = $Calendar_Year_Id
  AND P305EBH.BALANCE_YEAR   = &WT.BALANCE_YEAR
  AND ((P305EBH.ERNCD BETWEEN '001' AND '499') OR
        P305EBH.ERNCD IN ('REG', 'OTP','173'))   !ISDVSXR added 07/08/2008 ITG-51358
        !P305EBH.ERNCD IN ('REG', 'OTP'))!ISDVSXR commented 07/08/2008 ITG-51358
  AND P305EBH.BALANCE_PERIOD =                     
      (SELECT MAX(P305EBH1.BALANCE_PERIOD)
       FROM   PS_EARNINGS_BAL P305EBH1
       WHERE  P305EBH1.EMPLID        = P305EBH.EmplID
         AND  P305EBH1.COMPANY       = P305EBH.Company
         AND  P305EBH1.EMPL_RCD      = P305EBH.EMPL_RCD		!SRK 02/27/2003 Added
         AND  P305EBH1.ERNCD         = P305EBH.ERNCD
         AND  P305EBH1.SPCL_BALANCE  = P305EBH.SPCL_BALANCE
         AND  P305EBH1.BALANCE_ID    = P305EBH.BALANCE_ID
         AND  P305EBH1.BALANCE_YEAR  = P305EBH.BALANCE_YEAR
         AND  ((P305EBH1.ERNCD BETWEEN '001' AND '499') OR
                P305EBH1.ERNCD IN ('REG' , 'OTP',173)) !ISDVSXR added 07/08/2008 ITG-51358
                !P305EBH1.ERNCD IN ('REG' , 'OTP')) ISDVSXR commented 07/08/2008 ITG-51358
         AND  P305EBH1.BALANCE_PERIOD <= &WT.BALANCE_PERIOD)

end-SELECT

end-procedure 

!***************************************************
begin-procedure P500-Build-Detail-Record
!***************************************************
#debug9 show 'P500-Build-Detail-Record'

   move &wt.emplid to $x500_emplid xxxxxxxxx
   let $accrual = 'N'

   do P501-zero-amounts 

   if #x200_ded_mtd <> 0
!     show $name_out ' #x200_ded_mtd ' #x200_ded_mtd
     move 'C' to $contrib_type
     let  #amount1 = (#x200_ded_mtd * 100)
     move #amount1 to $amount1 000000000
     if #x200_ded_mtd < 0
       let substr($amount1,1,1) = '-'
     end-if
     do P505-write-record
   end-if

   if #x200_ded_401kpb_mtd <> 0
!     show $name_out ' #x200_ded_401kpb_mtd ' #x200_ded_401kpb_mtd
     move 'L' to $contrib_type
     let  #amount1 = (#x200_ded_401kpb_mtd * 100)
     move #amount1 to $amount1 000000000
     if #x200_ded_401kpb_mtd < 0
       let substr($amount1,1,1) = '-'
     end-if
     do P505-write-record
   end-if

end-procedure  !P500-Build-Detail-Record

!***************************************************
begin-procedure P501-Zero-Amounts
!***************************************************
#debug9 show 'P501-Zero-Amounts'
 
  move 0 to $amount1 000000000 
  move 0 to $amount2 000000000
  move 0 to $amount3 000000000
  move 0 to $amount4 000000000
  move 0 to $amount5 000000000
  move 0 to $amount6 000000000
  move 0 to $amount7 000000000
  move 0 to $amount8 000000000

end-procedure  !P501-Zero_amounts

!***************************************************
begin-procedure P505-Write-Record
!***************************************************
#debug9 show 'P505-Write-Record'
 do Get-Emp-Ssn ($x500_emplid , $Ssn_Out)  !GEX-TLL added on 04/04/2008 HCM 9.0 Upgrade
  write 1 from  'CNT':03
     		$accrual:01
                'X':01
                $contrib_type:01 
                $contract_nbr:6 
                !$x500_emplid:09  !GEX-TLL Commented on 04/04/2008 HCM 9.0 Upgrade
                $Ssn_Out:09	  !GEX-TLL added on 04/04/2008 HCM 9.0 Upgrade
                'A':01
		$amount1:09
                'D':01
		$amount2:09
                'C':01
		$amount3:09
                'F':01
		$amount4:09
                'K':01
		$amount5:09
                'R':01
		$amount6:09
                'P':01
		$amount7:09
                'T':01
		$amount8:09
                $name_out:30 

end-procedure  !P505-Write-Record

!*********************************************
begin-procedure P600-Write-Detail-Report-Line
!*********************************************
#debug9 show  'P600-Write-Detail-Report-Line'

 print &WT.COMPANY			(+1,{#x000_col_company})
 print &WT.DEPTID			(0,{#x000_col_deptid})
 print &WT.UNION_CD		(0,{#x000_col_union_cd})
 print &WT.EMPL_STATUS		(0,{#x000_col_empl_status})

 let $year4 = '0' 
 do Format-DateTime(&WT.HIRE_DT, $x600_emp_hire_dt,{DEFDATE}, '', '')
 print $x600_emp_hire_dt (0,{#x000_col_hire_date})


 do Format-DateTime(&WT.TERMINATION_DT, $x600_TERMINATION_DT,{DEFDATE}, '', '')
 print $x600_TERMINATION_DT	(0,{#x000_col_termination_dt})
 do Format-DateTime(&WT.BIRTHDATE, $x600_BIRTHDATE,{DEFDATE}, '', '')
 print $x600_BIRTHDATE		(0,{#x000_col_birth_dt})
 print &WT.NAME       		(0,{#x000_col_name},30)
 !GEX-TLL 04/04/2008 HCM 9.0 Upgrade Begin
 do Get-Emp-Ssn (&WT.EMPLID  , $Ssn_Out)
 !print &WT.EMPLID         	(0,{#x000_col_emplid})
 print $Ssn_Out          	(0,{#x000_col_emplid}) 
 !GEX-TLL 04/04/2008 HCM 9.0 Upgrade End
 print &WT.HOURLY_RT		(0,{#x000_col_hourly_rt})     EDIT  990.00    !GEX003-chg
 print &WT.empl_type             (0,{#x000_col_empl_type})

   print  #x200_ded_mtd   	(0,{#x000_col_MTD_401K})  EDIT 9999,990.00    !GEX003-chg
   print  #x200_ded_401kpb_mtd  (+1,{#x000_col_mtd_401k})  EDIT 9999,990.00  
   print  #x300_grs_mtd 	(-1,{#x000_col_MTD_Gross}) EDIT 9999,990.00    !GEX003-chg
   print  #x300_hrs_mtd 	(0,{#x000_col_MTD_Hours}) EDIT 9999,990.00    !GEX003-chg

   print  #x205_ded_ytd   	(0,{#x000_col_YTD_401K})  EDIT 9999,990.00    !GEX003-add
   print  #x205_ded_401kpb_ytd  (+1,{#x000_col_ytd_401k})  EDIT 9999,990.00    
   print  #x305_grs_ytd 	(-1,{#x000_col_YTD_Gross}) EDIT 9999,990.00    !GEX003-add
   print  #x305_hrs_ytd 	(0,{#x000_col_YTD_Hours}) EDIT 9999,990.00    !GEX003-add

   !add to Union_Cd totals
   array-add #x200_ded_mtd to Total-Array(3) Total(0) 
   array-add #x200_ded_401kpb_mtd to total-array(3) total(1)
   array-add #x300_grs_mtd to Total-Array(3) Total(2)         
   array-add #x300_hrs_mtd to Total-Array(3) Total(3)         
   array-add #x205_ded_ytd to Total-Array(3) Total_YTD(0)          !GEX003-add 
   array-add #x205_ded_401kpb_ytd to total-array(3) total_ytd(1)
   array-add #x305_grs_ytd to Total-Array(3) Total_YTD(2)          !GEX003-add 
   array-add #x305_hrs_ytd to Total-Array(3) Total_YTD(3)          !GEX003-add
 
   !add to Deptid totals
   array-add #x200_ded_mtd to Total-Array(2) Total(0) 
   array-add #x200_ded_401kpb_mtd to total-array(2) total(1)
   array-add #x300_grs_mtd to Total-Array(2) Total(2)         
   array-add #x300_hrs_mtd to Total-Array(2) Total(3) 
   array-add #x205_ded_ytd to Total-Array(2) Total_YTD(0)          !GEX003-add 
   array-add #x205_ded_401kpb_ytd to total-array(2) total_ytd(1)
   array-add #x305_grs_ytd to Total-Array(2) Total_YTD(2)          !GEX003-add
   array-add #x305_hrs_ytd to Total-Array(2) Total_YTD(3)          !GEX003-add
 
   !add to Company totals
   array-add #x200_ded_mtd to Total-Array(1) Total(0)
   array-add #x200_ded_401kpb_mtd to total-array(1) total(1) 
   array-add #x300_grs_mtd to Total-Array(1) Total(2)        
   array-add #x300_hrs_mtd to Total-Array(1) Total(3)         
   array-add #x205_ded_ytd to Total-Array(1) Total_YTD(0)          !GEX003-add 
   array-add #x205_ded_401kpb_ytd to total-array(1) total_ytd(1) 
   array-add #x305_grs_ytd to Total-Array(1) Total_YTD(2)          !GEX003-add
   array-add #x305_hrs_ytd to Total-Array(1) Total_YTD(3)          !GEX003-add

   !add to Grand totals
   array-add #x200_ded_mtd to Total-Array(0) Total(0) 
   array-add #x200_ded_401kpb_mtd to Total-Array(0) Total(1) 
   array-add #x300_grs_mtd to Total-Array(0) Total(2)        
   array-add #x300_hrs_mtd to Total-Array(0) Total(3)         
   array-add #x205_ded_ytd to Total-Array(0) Total_YTD(0)          !GEX003-add
   array-add #x205_ded_401kpb_ytd to Total-Array(0) Total_YTD(1)
   array-add #x305_grs_ytd to Total-Array(0) Total_YTD(2)          !GEX003-add
   array-add #x305_hrs_ytd to Total-Array(0) Total_YTD(3)          !GEX003-add

position (+1)

end-procedure

!*****************************************
begin-procedure P700-Company-Before-Change
!*****************************************
#debug9 show 'P700-Company-Before-Change'			
	
 if  $x000_new_page_flag = 'Y'
	new-page
	let $x000_new_page_flag = 'N'
 end-if		

 move &WT.COMPANY  to $x000_Company 
 #debug8 show '$x000_Company =' $x000_Company 

 let $x100_At_Least_One_Selected_For_CO_DEPT_UNION_Flag = 'N'     !GEX003-add

end-procedure


!*****************************************
begin-procedure P750-Deptid-Before-Change
!*****************************************
#debug9 show 'P750-Deptid-Before-Change'	
			
 if  $x000_new_page_flag = 'Y'
	new-page
	let $x000_new_page_flag = 'N'
 end-if

 move &WT.DEPTID to $x000_Deptid
 #debug8 show '$x000_Deptid=' $x000_Deptid

 let $x100_At_Least_One_Selected_For_CO_DEPT_UNION_Flag = 'N'     !GEX003-add

end-procedure


!*****************************************
begin-procedure P775-Union-Cd-Before-Change
!*****************************************
#debug9 show 'P775-Union-Cd-Before-Change'
				
 if  $x000_new_page_flag = 'Y'
	new-page
	let $x000_new_page_flag = 'N'
 end-if

 move &WT.Union_Cd to $x000_Union_Cd
 #debug8 show '$x000_Union_Cd=' $x000_Union_Cd

 let $x100_At_Least_One_Selected_For_CO_DEPT_UNION_Flag = 'N'     !GEX003-add

end-procedure


!*****************************************
begin-procedure P800-Company-After-Change
!*****************************************
#debug9 show 'P800-Company-Change'
#debug8 show '$x000_Company=' $x000_Company

if $x100_At_Least_One_Selected_For_CO_DEPT_UNION_Flag = 'Y'     !GEX003-add

!get and print company 401K totals
 get #x000_MTD_xxx from Total-Array(1) Total(0)                 !GEX003-chg
 get #x000_mtd_401kpb_xxx from total-array(1) total(1)
 get #x000_YTD_xxx from Total-Array(1) Total_YTD(0)             !GEX003-add
 get #x000_ytd_401kpb_xxx from total-array(1) total_ytd(1)

 let $x000_out = 'Company' 
 print $x000_out  	(+2,{#x000_col_totals_literal})
 print $x000_Company 	(0,{#x000_col_totals_literal2})
 let $x000_out = 'Total'
 print $x000_out  	(0,{#x000_col_totals_literal3})		

!get and print the 401K totals
 let #x000_temp_col = {#x000_col_MTD_401K} - 1                  !GEX003-chg
 print #x000_MTD_xxx (0,#x000_temp_col) EDIT 9,999,990.00       !GEX003-chg
 print #x000_mtd_401kpb_xxx (+1,#x000_temp_col) edit 9,999,990.00
 let #x000_temp_col = {#x000_col_YTD_401K} - 1                  !GEX003-add
 print #x000_YTD_xxx (-1,#x000_temp_col) EDIT 9,999,990.00       !GEX003-add
 print #x000_ytd_401kpb_xxx (+1,#x000_temp_col) edit 9,999,990.00

!get and print Company Gross totals
 get #x000_MTD_xxx from Total-Array(1) Total(2)                 !GEX003-chg
 get #x000_YTD_xxx from Total-Array(1) Total_YTD(2)             !GEX003-add

 let #x000_temp_col = {#x000_col_MTD_Gross} - 1                 !GEX003-chg
 print #x000_MTD_xxx (-1,#x000_temp_col) EDIT  9,999,990.00      !GEX003-chg
 let #x000_temp_col = {#x000_col_YTD_Gross} - 1                 !GEX003-add
 print #x000_YTD_xxx (0,#x000_temp_col) EDIT  9,999,990.00      !GEX003-add

!get and print Company Hours totals
 get #x000_MTD_xxx from Total-Array(1) Total(3)                 !GEX003-add
 get #x000_YTD_xxx from Total-Array(1) Total_YTD(3)             !GEX003-add

 let #x000_temp_col = {#x000_col_MTD_Hours} - 1                 !GEX003-chg
 print #x000_MTD_xxx (0,#x000_temp_col) EDIT  9,999,990.00      !GEX003-chg
 let #x000_temp_col = {#x000_col_YTD_Hours} - 1                 !GEX003-add
 print #x000_YTD_xxx (0,#x000_temp_col) EDIT  9,999,990.00      !GEX003-add


!reinitialize the company array totals
 put 0 0 into Total-Array(1) Total(0) Total_YTD(0)                !GEX003-chg
 put 0 0 into Total-Array(1) Total(1) Total_YTD(1)                !GEX003-chg
 put 0 0 into Total-Array(1) Total(2) Total_YTD(2)                !GEX003-chg
  put 0 0 into Total-Array(1) Total(3) Total_YTD(3)    
 position (+1)
 let $x000_new_page_flag = 'Y'

end-if                                                 !GEX003-add

end-procedure

!*****************************************
begin-procedure P850-Deptid-After-Change
!*****************************************
#debug9 show 'P850-Deptid-Change'
#debug8 show '$x000_Deptid =' $x000_Deptid 

if $x100_At_Least_One_Selected_For_CO_DEPT_UNION_Flag = 'Y'     !GEX003-add

 let $x000_out = 'Dept'
 print $x000_out        (+2,{#x000_col_totals_literal})
 print $x000_Deptid 	(0,{#x000_col_totals_literal2})
 let $x000_out = 'Total'
 print $x000_out  	(0,{#x000_col_totals_literal3})		

!get and print Deptid  401K totals
 get #x000_MTD_xxx from Total-Array(2) Total(0)                 !GEX003-chg
 get #x000_mtd_401kpb_xxx from total-array(2) total(1)
 get #x000_YTD_xxx from Total-Array(2) Total_YTD(0)             !GEX003-add
 get #x000_ytd_401kpb_xxx from total-array(2) total_ytd(1)

 let #x000_temp_col = {#x000_col_MTD_401K} - 1                  !GEX003-chg
 print #x000_MTD_xxx (0,#x000_temp_col) EDIT  9,999,990.00      !GEX003-chg
 print #x000_mtd_401kpb_xxx (+1,#x000_temp_col) edit 9,999,990.00
 let #x000_temp_col = {#x000_col_YTD_401K} - 1                  !GEX003-add
 print #x000_YTD_xxx (-1,#x000_temp_col) EDIT  9,999,990.00      !GEX003-add
 print #x000_ytd_401kpb_xxx (+1,#x000_temp_col) edit 9,999,990.00

!get and print Deptid  Gross totals
 get #x000_MTD_xxx from Total-Array(2) Total(2)                 !GEX003-chg
 get #x000_YTD_xxx from Total-Array(2) Total_YTD(2)             !GEX003-add

 let #x000_temp_col = {#x000_col_MTD_Gross} - 1                 !GEX003-chg
 print #x000_MTD_xxx (-1,#x000_temp_col) EDIT  9,999,990.00      !GEX003-chg
 let #x000_temp_col = {#x000_col_YTD_Gross} - 1                 !GEX003-add
 print #x000_YTD_xxx (0,#x000_temp_col) EDIT  9,999,990.00      !GEX003-add

!get and print Deptid  Hours totals
 get #x000_MTD_xxx from Total-Array(2) Total(3)                 !GEX003-chg
 get #x000_YTD_xxx from Total-Array(2) Total_YTD(3)             !GEX003-add

 let #x000_temp_col = {#x000_col_MTD_Hours} - 1                 !GEX003-chg
 print #x000_MTD_xxx (0,#x000_temp_col) EDIT  9,999,990.00      !GEX003-chg
 let #x000_temp_col = {#x000_col_YTD_Hours} - 1                 !GEX003-add
 print #x000_YTD_xxx (0,#x000_temp_col) EDIT  9,999,990.00      !GEX003-add

!reinitialize the dept array totals
 put 0 0 into Total-Array(2) Total(0) Total_YTD(0)                !GEX003-chg
 put 0 0 into Total-Array(2) Total(1) Total_YTD(1)                !GEX003-chg
 put 0 0 into Total-Array(2) Total(2) Total_YTD(2)                !GEX003-chg
 put 0 0 into Total-Array(2) Total(3) Total_YTD(3)                

 let $x000_new_page_flag = 'Y'
 position (+1)
end-if                                                 !GEX003-add

end-procedure

!*****************************************
begin-procedure P875-Union-Cd-After-Change
!*****************************************
#debug9 show 'P875-Union-Cd-After-Change'
#debug8 show '$x000_Union_Cd=' $x000_Union_Cd

if $x100_At_Least_One_Selected_For_CO_DEPT_UNION_Flag = 'Y'     !GEX003-add 

 let $x000_out = 'Union Code'
 print $x000_out         (+2,{#x000_col_totals_literal})
 print $x000_Union_Cd   (0,{#x000_col_totals_literal2})
 let $x000_out = 'Total'
 print $x000_out  	(0,{#x000_col_totals_literal3})
	
!get and print Union Code  410K totals
 get #x000_MTD_xxx from Total-Array(3) Total(0)                  !GEX003-chg
 get #x000_mtd_401kpb_xxx from total-array(3) total(1)
 get #x000_YTD_xxx from Total-Array(3) Total_YTD(0)              !GEX003-add
 get #x000_ytd_401kpb_xxx from total-array(3) total_ytd(1)
	
 let #x000_temp_col = {#x000_col_MTD_401K} - 1                   !GEX003-chg
 print #x000_MTD_xxx (0,#x000_temp_col) EDIT  9,999,990.00       !GEX003-chg
 print #x000_mtd_401kpb_xxx (+1,#x000_temp_col) edit 9,999,990.00
 let #x000_temp_col = {#x000_col_YTD_401K} - 1                   !GEX003-add
 print #x000_YTD_xxx (-1,#x000_temp_col) EDIT  9,999,990.00       !GEX003-add
 print #x000_ytd_401kpb_xxx (+1,#x000_temp_col) edit 9,999,990.00

!get and print Union Code  Gross totals
 get #x000_MTD_xxx from Total-Array(3) Total(2)                  !GEX003-chg
 get #x000_YTD_xxx from Total-Array(3) Total_YTD(2)              !GEX003-add

 let #x000_temp_col = {#x000_col_MTD_Gross} - 1                  !GEX003-chg
 print #x000_MTD_xxx (-1,#x000_temp_col) EDIT  9,999,990.00       !GEX003-chg
 let #x000_temp_col = {#x000_col_YTD_Gross} - 1                  !GEX003-add
 print #x000_YTD_xxx (0,#x000_temp_col) EDIT  9,999,990.00       !GEX003-add

!get and print Union Code  Hours totals
 get #x000_MTD_xxx from Total-Array(3) Total(3)                  !GEX003-chg
 get #x000_YTD_xxx from Total-Array(3) Total_YTD(3)              !GEX003-add

 let #x000_temp_col = {#x000_col_MTD_Hours} - 1                  !GEX003-chg
 print #x000_MTD_xxx (0,#x000_temp_col) EDIT  9,999,990.00       !GEX003-chg
 let #x000_temp_col = {#x000_col_YTD_Hours} - 1                  !GEX003-add
 print #x000_YTD_xxx (0,#x000_temp_col) EDIT  9,999,990.00       !GEX003-add

!reinitialize the Union Code array totals
 put 0 0 into Total-Array(3) Total(0) Total_YTD(0)                 !GEX003-chg
 put 0 0 into Total-Array(3) Total(1) Total_YTD(1)                 !GEX003-chg
 put 0 0 into Total-Array(3) Total(2) Total_YTD(2)                 !GEX003-chg
 put 0 0 into Total-Array(3) Total(3) Total_YTD(3)                 !GEX003-chg

 let $x000_new_page_flag = 'Y'
 position (+1)
end-if                                                           !GEX003-add

end-procedure

!****************************************
begin-procedure P900-Get-Job-Code-Info
!****************************************
#debug9 show 'P900-Get-Job-Code-Info'

  if rtrim($x100_JobCode,' ') = ''
    move '' to $$x900_JobTitle       
    move '' to $$x900_JobTitleAbbrv  
    move '' to $x900_Union_Cd  
    goto GetJobTlExit
  end-if

begin-SELECT
JT.DESCR
JT.DESCRSHORT
JT.UNION_CD

  let $x900_JobTitle       = rtrim(&JT.Descr,' ')
  let $x900_JobTitleAbbrv  = rtrim(&JT.DescrShort,' ')
  let $x900_Union_Cd       = rtrim(&JT.UNION_CD,' ')

FROM  PS_JOBCODE_TBL JT
WHERE JT.JOBCODE = $x100_JobCode
  AND JT.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_JOBCODE_TBL
       WHERE  JOBCODE = $JobCode
         AND  EFFDT  <= $X000_WHERE_SELECT_ASOFDATE)

end-SELECT

GetJobTlExit:

end-procedure

!************************************
begin-procedure WT900-drop-work-table
!************************************
#debug9 show 'WT900-drop-work-table' 

begin-sql 
DROP TABLE [$tablename]
end-sql
end-procedure

!*********************************************************************
!Retrieves the Company Description from the database
!*********************************************************************
begin-procedure get-company-desc

move ' ' to $company_desc
begin-select 
CMP.DESCR
  move &CMP.DESCR to $company_Desc
from PS_COMPANY_TBL CMP
WHERE CMP.COMPANY = $COMPANY
  AND CMP.EFFDT =
      (SELECT MAX(EFFDT)
	 FROM PS_COMPANY_TBL
	WHERE COMPANY = $COMPANY)
end-select
end-procedure
!*********************************************************************

Begin-procedure create-filename-date

!convert the native dates to yyyymmdd format for the ASCII output file name
 let $year4 = '1' 
 do Format-DateTime($pay_end_dt, $x500_pay_end_dt,{DEFYMD}, '', '')

end-procedure

!*********************************************************************
begin-procedure P910-finalize
  close 1
  do GEXXX951-Select-Oracle-Instance
  let $db_name = lower($GEXXX951_Oracle_Instance)
  do P922-new-filename

! CWB 09/05/2002 BEGIN - File no longer to be mailed.
  do P920-cd-bindir
  do P921-mail-the-file
! CWB 09/05/2002 END

end-procedure

!***********************************************************************
begin-procedure P920-cd-bindir
!***********************************************************************
      let $cd_command_bindir = 'cd '||'$BINDIR'
      CALL SYSTEM USING $cd_command_bindir #sys_status
      if #sys_status <> 0
         let $cd_display_msg = 'Changing directory to /apps/hr/hrms83//'||$db_name||'/bin did not work'
         display $cd_display_msg
	 display 'JOB failed'
	 stop
      end-if

end-procedure

!***********************************************************************
!***********************************************************************
begin-procedure P921-mail-the-file
!***********************************************************************
   do GEXXX951-Select-Oracle-Instance
   let $db_name = lower($GEXXX951_Oracle_Instance)
   Do GEXXX971-Select-Trans-Type-Parameters
   if ($GEXXX971_EMAIL_ADDR_CRITERIA = '') and ($GEXXX971_FTP_ADDR_CRITERIA = '')
      show 'Either no rows exist on GEX_INTFC_RULE/DATA for this Oprid/Run Control ID'
      show 'or the most current rows under this ID have been set to inactive. Data will'
      show 'not be sent.'
   else
      if $GEXXX971_GEX_TRANS_TYPE = 'E'
         show $GEXXX971_EMAIL_ADDR_CRITERIA
         show 'This is the email statement produced: '

         if $GEXXX971_INT_EXT = 'E'

            let $UNIX_MAIL_COMMAND = '/usr/local/bin/todos -v $PS_HOME/outgoing/'||$new_filename||' '||
            '&&/usr/local/bin/mailer.pl "'||$GEXXX971_EMAIL_ADDR_CRITERIA||'" "Guardian Life" '||
            '"$BINDIR/gexpy647_msg.sh" $PS_HOME/outgoing/'||$new_filename||' '
            show $UNIX_MAIL_COMMAND
      
            !   let $UNIX_MAIL_COMMAND = 'cat $PS_HOME/outgoing/' || $new_filename  || ' |'
            !|| ' mailx -s "' || $new_filename || '" gpcontrib@glic.com cbuckrop@gianteagle.com 
            !droenigk@gianteagle.com' 

            CALL SYSTEM USING $UNIX_MAIL_COMMAND #system_status
           
            if #system_status <> 0
               add 1 to #errorcount
               display 'eMail of ' noline
               display $new_filename noline
               display ' failed'
               STOP
            else
               display $new_filename noline
               display ' was emailed successfully'
            end-if
         else
              let $jobname = 'gexpy647'||substr($prcs_run_cntl_id,9,2)
              Let $emailtext =  $jobname || ' is complete.   Please create diskette.'

              let $UNIX_MAIL_COMMAND = 'echo ' || $emailtext || '|' || ' mailx 
                                       -s"Create offsite diskette" ' || $GEXXX971_EMAIL_ADDR_CRITERIA ||' '  

              show $UNIX_MAIL_COMMAND

              CALL SYSTEM USING $UNIX_MAIL_COMMAND #system_status

              if #system_status <> 0                              
                 add 1 to #errorcount                             
                 display 'Email notification to OPS failed'       
              else                                                
                 display 'Email sent to OPS for diskette creation'
              end-if                                              
         end-if

      end-if
      if $GEXXX971_GEX_TRANS_TYPE = 'F'
         show $GEXXX971_FTP_ADDR_CRITERIA
         show 'Need to insert a Call FTP shell script to run ftp'
      end-if
   end-if

end-procedure
!***********************************************************************
begin-procedure P922-new-filename
!***********************************************************************
      let $cd_command_outgoing = 'cd '||'$PS_HOME/outgoing'
      CALL SYSTEM USING $cd_command_outgoing #sys_status
      if #sys_status <> 0
         let $cd_display_msg = 'ERROR - Changing directory to /apps/hr/hrms83/'||$db_name||'/outgoing did not work'
         display $cd_display_msg
	 display 'JOB failed'
	 stop
      end-if

      let $file_pay_end_dt = substr($x500_pay_end_dt,1,4) || substr($x500_pay_end_dt,6,2) || substr($x500_pay_end_dt,9,2)
      let $new_filename = $contract_nbr || '-' || $file_pay_end_dt || '.txt'
      show '$new_filename: ' $new_filename
      let $copy_command = 'cp '|| $x000_ASCII_UNIX_Filename || ' ' 
      || '$PS_HOME/outgoing/' || $new_filename
      show '$copy_command: ' $copy_command
      CALL SYSTEM USING $copy_command #sys_status
      if #sys_status <> 0
         let $copy_display_msg = 'ERROR - copy to new filename did not work'
         display $copy_display_msg
	 display 'JOB failed'
	 stop
      end-if

end-procedure

!***********************************************************************
 
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
#Include 'getdednm.sqc'  !Get-Deduction-Name procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
!#Include 'getdedbl.sqc'  !Get-Deduction-Balances procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date and time math  !SRK 02/25/2003
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'reset.sqc'     !Reset 
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls
#include 'gexxx951.sqc'  
#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'gexdept.sqc'   !Get Original dept
!#include 'gexernc2.sqc'
#include 'gexerncd.sqc'  !Build erncd exclude list.        !CWB 01/15/2004
#include 'rotname3.sqc'  !Split name into its components.
#Include 'gexxx951.sqc'  !Oracle Database Name             !GBD 07/11/2003
#Include 'gexxx971.sqc'  !Email and FTP Parameters         !GBD 07/11/2003
#Include 'getgeid.sqc'   !To Get 7 Digit Emplid    !GEX-TLL  04/04/1008 HCM 9.0 Upgrade