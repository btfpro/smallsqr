!**************************************************************************************************
! GEXPY668 : 		ELECTRONIC REMITTANCE FILE & REPORT TO LOCAL 1776                         *
!**************************************************************************************************
!                                                                                                 *
!               	Confidentiality Information:                                              *
!                                                                                                 *
! 	This module is the confidential and proprietary information of                            *
! 	Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted                      *
! 	in any form, by any means, in whole or in part, nor is it to be used                      *
! 	for any purpose other than that for which it is expressly provided                        *
! 	without the written permission of Giant Eagle.                                            *
!                                                                                                 *
! 	Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved                              *
!                                                                                                 *
!**************************************************************************************************
!                                                                                                 *        
! GEXPY668 :    	ELECTRONIC REMITTANCE FILE & REPORT TO LOCAL 1776                         *
!                                                                                                 *        
! Narrative:            This program creates a electronic remittance file to send union           *
!			dues,initiation fees, and PAC deduction amounts to Local 1776.            *                *
!                                                                                                 *
!                                                                                                 *  
! SQL Tables:           PS_JOB                                                                    *
!                       PS_EMPLOYMENT                                                             *
!                       PS_PERSONAL_DATA                                                          *
!                       PS_PAY_DEDUCTION							  *
!			PS_PAY_LINE                                                               *
!                       PS_GEX_EMPL_MAPP                                                          *
!		        PS_ADDRESSESS								  *
!			PS_PERSON_ADDRESS							  *
!                                                                                                 *                      
!                                                                                                 *
! Written by:           Manjiri Deo                                                               *       
!                                                                                                 *
! Normally Run:         Weekly                                                                    *
!                                                                                                 *
!GEX_SEC_REENG 2015-04-29 Vahini Katta
! Changes related to gex_emplid_mapp/7 digit emplid  
!**************************************************************************************************


#include 'setenv.sqc' !Set environment
#include 'setup02.sqc'

#define #column1 2
#define #column2 8
#define #column3 29
#define #column4 47
#define #column5 52
#define #column6 62
#define #column7 70
#define #column8 79
#define #column9 88
#define #column10 92
#define #column11 103
#define #column12 114
#define #column13 127
#define #column14 132

!**************************************************************************************************
Begin-Program

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  
  Do STDAPI-INIT
	Do Initialization
	Do Write-File-Header
	Do Main-Process
  Do STDAPI-TERM
	
End-Program
!**************************************************************************************************
Begin-Procedure Process-Scheduler-Run-Controls	
!**************************************************************************************************

  	Do GEXXX922-Select-Parameters

  	Let $Pay_End_Dt = $GEX_RC_PAY.Pay_End_Dt
	
  	If $Pay_End_Dt = ''
    		Do Select-Pay-End-Dt
  	End-If
	
BEGIN-SELECT
MAX(PCAL.PAY_END_DT)	&PCAL.PAY_END_DT

	Let $Last_Pay_End_Dt = &PCAL.PAY_END_DT

FROM PS_PAY_CALENDAR PCAL
WHERE PCAL.PAY_CONFIRM_RUN = 'Y' 
AND PCAL.PAY_END_DT < $Pay_End_Dt
END-SELECT


End-Procedure Process-Scheduler-Run-Controls

!**************************************************************************************************
!	Open-File = Open the File to be generated with the required data
!**************************************************************************************************
Begin-Procedure Open-File

   Let $File_Date = Edit($Pay_End_Dt,'MMDDYYYY')
   Let $Member_File = '{OUTFILE}'|| Lower($ReportID) || '_' ||$File_Date || '.csv'
      Show '$Member_File: '   $Member_File	
   OPEN $Member_File as 1 for-writing record=600:vary status = #Open_mem
   
   If (#Open_mem <> 0)
      Let $Error-Message = 'PROGRAM ABORTED - Problem opening file : ' || $Member_File
      Show $Error-Message
      STOP
   End-If
End-Procedure


!**************************************************************************************************
Begin-Procedure Initialization
!**************************************************************************************************

  Let $ReportID      = 'GEXPY668'
  Let $ReportTitle   = 'ELECTRONIC REMITTANCE TO LOCAL 1776'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

	If $prcs_process_instance = ''
		let $Prcs_OprID = 'HRBATCH'
		let $Prcs_Run_Cntl_ID = 'gexpy668'
  	End-If
    
  Do Process-Scheduler-Run-Controls
  Do Open-File
  Do Print-Cover-Page

End-Procedure Initialization
!***************************************************************************************************
!	Select-Pay-End-Dt = Procedure to select the Most Recent Pay End Date if no parameters are
!				given in the run control
!***************************************************************************************************
Begin-Procedure Select-Pay-End-Dt
BEGIN-SELECT
MAX(PC.PAY_END_DT)	&PC.PAY_END_DT

	Let $Pay_End_Dt = &PC.PAY_END_DT
FROM PS_PAY_CALENDAR PC
WHERE PC.PAY_CONFIRM_RUN = 'Y' 
AND PC.PAY_END_DT <= SYSDATE 
END-SELECT
End-Procedure Select-Pay-End-Dt

!***********************************************************************
Begin-Procedure Print-Cover-Page
!***********************************************************************


  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,6)
  Print '$Prcs_OPRID          ='                              (+1,6)
  Print $Prcs_OPRID                                           (0,+2)
  Print '$PRCS_RUN_CNTL_ID    ='                              (+1,6)
  Print $PRCS_RUN_CNTL_ID                                     (0,+2)

  Print 'Pay End Date                     ='   (+1,6)
  Print $Pay_End_Dt                           (0,+2)
	 
  LET #PAGE-COUNT = 0
  NEW-PAGE

End-Procedure Print-Cover-Page


!**************************************************************************************************
Begin-Heading 8
!**************************************************************************************************

	Print $ReportTitle	(2,)		center
	Print 'Pay End Date :'	(4,1)
	Print $Pay_End_Dt	(4,20) Edit 'DD-Mon-YYYY'

	Print 'STORE'			(6,2)
	Print 'NUMBER'			(7,1)
	Print 'LAST NAME'		(6,8)
	Print 'FIRST NAME'		(6,29)
	Print 'MIDDLE'			(6,45)
	Print 'NAME'			(7,46)
	Print 'EMPLOYEE'		(6,52)
	Print 'ID'			(7,55)
	Print 'DUES'			(6,62)
	Print 'AMOUNT'			(7,61)
	Print 'INITIATION'		(6,68)
	Print 'AMOUNT'			(7,70)
	Print 'PAC'			(6,80)
	Print 'AMOUNT'			(7,79)
	Print 'TERM'			(6,87)
	Print 'CODE'			(7,87)
	Print 'TERM DATE'		(6,92)
	Print 'HIRE DATE'		(6,103)
	Print 'BIRTH DATE'		(6,114)
	Print 'GENDER'			(6,125)
	Print 'HOURLY'			(6,132)
	Print 'RATE'			(7,133)
	Print '-'			(8,1,138)		fill

End-Heading

!**************************************************************************************************
!	Main-Process = Procedure with the Basic SQL which picks the EMPLID based on the 
!			Run Control Parameter :Pay_End_Dt
!**************************************************************************************************
Begin-Procedure Main-Process
#debug Show 'In Main-Process'

BEGIN-SELECT
L.EMPLID	() On-Break Print = Never After = Call-Procedures
L.EMPL_RCD
PDED.PAY_END_DT
PDED.DEDCD
PDED.DED_CUR
JOB.DEPTID
JOB.ACTION_REASON
JOB.ACTION
JOB.COMPRATE
JOB.EFFDT
JOB.EFFSEQ
!GEX.EMPLID !GEX_SEC_REENG 2015-04-29 Vahini Katta
P.LAST_NAME
P.FIRST_NAME
P.MIDDLE_NAME
P.BIRTHDATE
P.SEX
P.PHONE
N.NATIONAL_ID

	
	!Let $Emplid_9 = LTrim(RTrim(&L.EMPLID,' '),' ')     !GEX_SEC_REENG 2015-04-29 Vahini Katta
  Let $Emplid_9 = LTrim(RTrim(&N.NATIONAL_ID,' '),' ') !GEX_SEC_REENG 2015-04-29 Vahini Katta
	Let #Empl_Rcd = &L.EMPL_RCD
	Let $Store_No = LTrim(RTrim(&JOB.DEPTID,' '),' ')
	Let $Action_Reason = LTrim(RTrim(&JOB.ACTION_REASON,' '),' ')
	Let $Action = LTrim(RTrim(&JOB.ACTION,' '),' ')
	Let $Effdt = &JOB.EFFDT
	Let $PayRate = &JOB.COMPRATE
	Let $Dedcd = LTrim(RTrim(&PDED.DEDCD,' '),' ')
  Let #Ded_Cur_Amount= &PDED.DED_CUR
  Let $Ded_Amount = to_char(#Ded_Cur_Amount)
  Let $Ded_Cur_Sign = substr ($Ded_Amount,1,1)
  !Let $Emplid = LTrim(RTrim(&GEX.EMPLID,' '),' ')     !GEX_SEC_REENG 2015-04-29 Vahini Katta
  Let $Emplid = LTrim(RTrim(&L.EMPLID,' '),' ')        !GEX_SEC_REENG 2015-04-29 Vahini Katta
	Let $Last_Name = LTrim(RTrim(&P.LAST_NAME,' '),' ')
  Let $First_Name =  LTrim(RTrim(&P.FIRST_NAME,' '),' ')
 	Let $Middle_Name = LTrim(RTrim(&P.MIDDLE_NAME,' '),' ')
 	Let $Sex = LTrim(RTrim(&P.SEX,' '),' ')
 	Let $BirthDate = edit(&P.BIRTHDATE,'MMDDYYYY')
 	Let $Phone = LTrim(RTrim(&P.PHONE,' '),' ')

      	    	Do Get-Employment-Data																		
      		Do Check-Data-Change																		
      		Do Calc-Amount																			
      		Do Validate-Term-Code																		
      		Do Payrate-Date																						
																																															

FROM PS_PAY_LINE L,PS_PAY_DEDUCTION PDED,PS_JOB JOB,PS_PERS_NID N,!PS_GEX_EMPLID_MAPP GEX, !GEX_SEC_REENG 2015-04-29 Vahini Katta
	PS_PERSONAL_DATA P
!GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
!WHERE GEX.SSN = JOB.EMPLID
!AND GEX.EMPL_RCD = JOB.EMPL_RCD
!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
WHERE P.EMPLID = JOB.EMPLID
AND JOB.EMPLID = L.EMPLID
AND JOB.EMPL_RCD = L.EMPL_RCD
!GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
AND N.EMPLID=P.EMPLID
AND N.PRIMARY_NID = 'Y'
!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
AND JOB.EFFDT = (SELECT MAX(JOB1.EFFDT) FROM PS_JOB JOB1
        WHERE JOB.EMPLID=JOB1.EMPLID
        AND JOB.EMPL_RCD=JOB1.EMPL_RCD
        AND JOB1.EFFDT <= PDED.PAY_END_DT)
AND JOB.EFFSEQ = (SELECT MAX(JOB2.EFFSEQ) FROM PS_JOB JOB2
        WHERE JOB.EMPLID=JOB2.EMPLID
        AND JOB.EMPL_RCD=JOB2.EMPL_RCD
        AND JOB.EFFDT=JOB2.EFFDT)
AND PDED.COMPANY = L.COMPANY
AND PDED.PAYGROUP = L.PAYGROUP
AND PDED.PAY_END_DT = L.PAY_END_DT
AND PDED.OFF_CYCLE = L.OFF_CYCLE
AND PDED.PAGE_NUM = L.PAGE_NUM
AND PDED.LINE_NUM = L.LINE_NUM
AND PDED.PAY_END_DT = $Pay_End_Dt
AND PDED.DEDCD IN ('UN1776','IN1776','PA1776')   
!GEX_SEC_REENG 2015-04-29 Vahini Katta Begins     
!ORDER BY JOB.DEPTID,P.LAST_NAME,GEX.EMPLID   
ORDER BY JOB.DEPTID,P.LAST_NAME    
!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
END-SELECT

End-Procedure Main-Process

!**************************************************************************************************
!	Call-Procedures = Procedure to write record whenever the emplid changes.
!**************************************************************************************************
Begin-Procedure Call-Procedures
	
	Do Print-Report																								
	Do Write-File
	Do Initialize-Variables
	
End-Procedure Call-Procedures

!**************************************************************************************************
!	Get-Employment-Data = Procedure to retrieve the Termination, Hire and Rehire Dates for
!				the EMPLID from the table PS_EMPLOYMENT
!**************************************************************************************************
Begin-Procedure Get-Employment-Data
#debug Show 'In Get-Employment-Data'

BEGIN-SELECT
E.TERMINATION_DT
E.REHIRE_DT
E.HIRE_DT
	
		Let $Term_Date = &E.TERMINATION_DT
		Let $Rehire_Dt = &E.REHIRE_DT
		Let $Hire_Dt_Emp = &E.HIRE_DT     
		Let $Term_Date = edit($Term_Date,'MMDDYYYY')
		Do Check-Hire-Date
		
FROM PS_EMPLOYMENT E
WHERE E.EMPLID=$Emplid !$Emplid_9 !GEX_SEC_REENG 2015-04-29 Vahini Katta
AND E.EMPL_RCD=#Empl_Rcd
	
END-SELECT
End-Procedure Get-Employment-Data

!**************************************************************************************************
!	Check-Data-Change = Procedure to check for new hires or address change.If found, then write 
!			    new data, else keep those fields blank.
!**************************************************************************************************
Begin-Procedure Check-Data-Change
#Debug Show 'In Check-Data-Change'

BEGIN-SELECT
ADDR.ADDRESS1
ADDR.ADDRESS2
ADDR.CITY
ADDR.STATE
ADDR.POSTAL

	Let $Address1 = LTrim(RTrim(&ADDR.ADDRESS1,' '),' ') 
	Let $Address2 = LTrim(RTrim(&ADDR.ADDRESS2,' '),' ') 
	Let $City = LTrim(RTrim(&ADDR.CITY,' '),' ')         
	Let $State = LTrim(RTrim(&ADDR.STATE,' '),' ')       
	Let $Zip = LTrim(RTrim(&ADDR.POSTAL,' '),' ')        

FROM PS_ADDRESSES ADDR
WHERE ADDR.EMPLID = $Emplid !$Emplid_9 !GEX_SEC_REENG 2015-04-29 Vahini Katta
AND ADDR.EFFDT = ( SELECT MAX(AD_ED.EFFDT) FROM PS_ADDRESSES AD_ED 
                    WHERE AD_ED.EMPLID = ADDR.EMPLID
                    AND AD_ED.ADDRESS_TYPE = ADDR.ADDRESS_TYPE
                    AND AD_ED.EFFDT <= $Pay_End_Dt)
END-SELECT


BEGIN-SELECT
ADDR_LAST.ADDRESS1
ADDR_LAST.ADDRESS2
ADDR_LAST.CITY
ADDR_LAST.STATE
ADDR_LAST.POSTAL


	Let $Address1_Last = LTrim(RTrim(&ADDR_LAST.ADDRESS1,' '),' ')
      	Let $Address2_Last = LTrim(RTrim(&ADDR_LAST.ADDRESS2,' '),' ')
      	Let $City_Last = LTrim(RTrim(&ADDR_LAST.CITY,' '),' ')
      	Let $State_Last = LTrim(RTrim(&ADDR_LAST.STATE,' '),' ')
      	Let $Zip_Last = LTrim(RTrim(&ADDR_LAST.POSTAL,' '),' ')
      	

FROM PS_ADDRESSES ADDR_LAST
WHERE ADDR_LAST.EMPLID = $Emplid !$Emplid_9  !GEX_SEC_REENG 2015-04-29 Vahini Katta
AND ADDR_LAST.EFFDT = ( SELECT MAX(AD_ED.EFFDT) FROM PS_ADDRESSES AD_ED 
                    WHERE AD_ED.EMPLID = ADDR_LAST.EMPLID
                    AND AD_ED.ADDRESS_TYPE = ADDR_LAST.ADDRESS_TYPE
                    AND AD_ED.EFFDT <= $Last_Pay_End_Dt)
END-SELECT

	If (($Address1_Last <> $Address1) OR ($Address2_Last <> $Address2) OR 
		($City_Last <> $City) OR ($State_Last <> $State) OR ($Zip_Last <> $Zip))

		 
	Else

		Let $Address1 = ' '
      		Let $Address2 = ' '
      		Let $City = ' '
      		Let $State = ' '
      		Let $Zip = ' '
	End-If	


End-Procedure Check-Data-Change
!**************************************************************************************************
!	Calc-Amount = Procedure to calculate amount as per deduction code.
!**************************************************************************************************
Begin-Procedure Calc-Amount
#debug Show 'In Calc-Amount'	

	Evaluate $Dedcd
		
		When = 'UN1776'
		Let #Dues_Amount = #Ded_Cur_Amount
		Let $Dues_Amount_Date = edit($Pay_End_Dt,'MMDDYYYY')		
		
			If $Ded_Cur_Sign = '-'
				Let $Dues_Amount_Sign = $Ded_Cur_Sign
			Else
				Let $Dues_Amount_Sign = '+'
			End-If
			
		Let #Total_Dues_Amount = #Total_Dues_Amount + #Ded_Cur_Amount
		break

		When = 'IN1776'
		Let #Init_Amount = #Ded_Cur_Amount
		Let $Init_Amount_Date = edit($Pay_End_Dt,'MMDDYYYY')
		
			If $Ded_Cur_Sign = '-'
				Let $Init_Amount_Sign = $Ded_Cur_Sign
			Else
				Let $Init_Amount_Sign = '+'
			End-If
			
		Let #Total_Init_Amount = #Total_Init_Amount + #Ded_Cur_Amount
		break
	
		When = 'PA1776'
		Let #PAC_Amount =#Ded_Cur_Amount
		Let $PAC_Amount_Date = edit($Pay_End_Dt,'MMDDYYYY')
		
			If $Ded_Cur_Sign = '-'
				Let $PAC_Amount_Sign = $Ded_Cur_Sign
			Else
				Let $PAC_Amount_Sign = '+'
			End-If
			
		Let #Total_PAC_Amount = #Total_PAC_Amount + #Ded_Cur_Amount
	End-evaluate	
        
        
        
        Let #BELS_Amount_Value = Edit(0,'999.99')
        Let #BELS_Hours_Value = Edit(0,'999.99')
        
        Let $BELS_Amount = to_char(#BELS_Amount_Value)
        Let $BELS_Hours = to_char(#BELS_Hours_Value)
        Let $BELS_Amount_Sign = '+'
        Let $BELS_Amount_Date = '00000000'

End-Procedure Calc-Amount

!**************************************************************************************************
!	Validate-Term-Code = Procedure to get the Termination Code(Action_Reason from PS_JOB table)
!				 only when Action is 'TER' i.e. Terminated or 'RET' i.e. Retired
!**************************************************************************************************
Begin-Procedure Validate-Term-Code
#debug Show 'In Validate-Term-Code'

If ($Action = 'TER')  

	Evaluate $Action_Reason
	
	when = 'DEA'
		Let $Term_Code = 'D'
	when = 'UPP'
		Let $Term_Code = 'DNP'
	when = 'PTD'
	 	Let $Term_Code = 'DB'
	when = 'RSG'
		Let $Term_Code = 'GRV'				
	when = 'LOF'
		Let $Term_Code = 'L'		
	when = 'VSP'
		Let $Term_Code = 'Q'
	when = 'QWN'
		Let $Term_Code = 'Q'				
	when = 'DE2'
		Let $Term_Code = 'R'		
	when = 'ERT'
		Let $Term_Code = 'R'		
	when = 'STC'
		Let $Term_Code = 'SC'		
	when = 'RET'
		Let $Term_Code = 'STU'		
	when = 'SSN'
		Let $Term_Code = 'WSS'		
	End-Evaluate
Else
	If ($Action = 'RET')
		Evaluate $Action_Reason
		
		when = 'DIS'
			Let $Term_Code = 'DB'
		when = 'ERT'
        	when = 'RAT'
		when = 'RET'
		when = 'RMT'
		when = 'CRE'
		when = 'VRE'
			Let $Term_Code = 'R'				
		End-Evaluate
		
	Else 
		If ($Action = 'RWP')
			Evaluate $Action_Reason
		
			when = 'PAY'
        		when = 'RWP'
			when = 'ERW'
			when = 'BTH'
			when = 'RWB'
				Let $Term_Code = 'R'				
			End-Evaluate
		Else
			If ($Action = 'RWP') AND ($Action_Reason = 'LOF')
				Let $Term_Code = 'L'
			Else
				Let $Term_Code = ' '				
			End-If
		End-If		
	End-If
End-If
Let $Term_Code = rpad($Term_Code,3,' ')	
End-Procedure Validate-Term-Code

!**************************************************************************************************
!	Payrate-Date = Procedure to get the latest Effdt from PS_JOB table as the PayRate Date
!			depending on the Action value of PS_JOB table
!			PayRate Date is the Effdt only when Action is 'PAY', 'HIR' i.e. Hire
!			or 'REH' i.e. Rehire
!**************************************************************************************************
Begin-Procedure Payrate-Date
#debug Show 'In Payrate-Date'

If ($Action = 'PAY') or ($Action = 'HIR') or ($Action = 'REH')	
	Let $PayRate_Date = edit($Effdt,'MMDDYYYY')
End-If	
End-Procedure Payrate-Date

!**************************************************************************************************
!	Check-Hire-Date = Procedure to get the most recently updated date for the EMPLID 
!			  depending on the Hire Date & Rehire Date picked from PS_EMPLOYMENT table
!**************************************************************************************************
Begin-Procedure Check-Hire-Date
#debug Show 'In Check-Hire-Date'

	If $Rehire_Dt > $Hire_Dt_Emp
		Let $Hire_Date = edit($Rehire_Dt,'MMDDYYYY')
	Else		
		Let $Hire_Date = edit($Hire_Dt_Emp,'MMDDYYYY')
	End-If

End-Procedure Check-Hire-Date
!**************************************************************************************************
!	Write-File = Procedure to Write Data in the File
!**************************************************************************************************
Begin-Procedure Write-File

	Let $Dues_Amount = to_char(#Dues_Amount)
	Let $Init_Amount = to_char(#Init_Amount)
	Let $PAC_Amount = to_char(#PAC_Amount)
	Let $PayRate = to_char(#PayRate)

Let  $Record = $Emplid_9 || ',' ||$Last_Name || ',' || $First_Name || ','|| $Middle_Initial || ','||
		$Store_No || ','|| $Dues_Amount || ','||$Dues_Amount_Sign ||','||$Dues_Amount_Date
		||','||$Init_Amount||','||$Init_Amount_Sign ||','||$Init_Amount_Date ||','||
		$PAC_Amount||','||$PAC_Amount_Sign||','||$PAC_Amount_Date||','||$BELS_Amount||','||
		$BELS_Amount_Sign||','||$BELS_Amount_Date||','||$BELS_Hours||','||$Term_Code||','||
		$Term_Date||','|| $Hire_Date||','||$BirthDate||','||$Sex||','||$PayRate||','||$PayRate_Date
		||','||$New_Classification||','||$New_Classification_Date||','|| $Address1 ||','||
		$Address2 ||','||$City||','||$State||','||$Zip||','||$Phone||','||$Email_Address||
		','||$BELS_Increase

write 1 from $Record

End-Procedure Write-File

!**************************************************************************************************
!	Print-Report = Procedure to Print the report with the data as in the file
!**************************************************************************************************
Begin-Procedure Print-Report
 
Let #Dues_Amount = Edit(#Dues_Amount,'999.99') 
Let #Init_Amount = Edit(#Init_Amount,'999.99')
Let #PAC_Amount = Edit(#PAC_Amount,'999.99')
Let #PayRate1=To_Number($PayRate)
Let #PayRate = Edit(#PayRate1,'999.99')
Let $Middle_Initial = substr($Middle_Name,1,1)

	
	
	Print $Store_No		(+1,{#column1})
	Print $Last_Name	(,{#column2})
	Print $First_Name	(,{#column3})
	Print $Middle_Initial	(,{#column4})
	Print $Emplid		(,{#column5})
	Print #Dues_Amount	(,{#column6}) 
	Print #Init_Amount	(,{#column7}) 
	Print #PAC_Amount	(,{#column8}) 
	Print $Term_Code	(,{#column9})
	Print $Term_Date	(,{#column10}) 
      	Print $Hire_Date	(,{#column11})
      	Print $BirthDate	(,{#column12})
      	Print $Sex		(,{#column13})
      	Print #PayRate		(,{#column14}) 

	position (+1)
End-Procedure Print-Report

!**************************************************************************************************
!	Write-File-Header = Procedure to Calculate Total  amount & write it as header in the file
!**************************************************************************************************
Begin-Procedure Write-File-Header

Begin-Select
SUM(DED.DED_CUR)	&TOTAL_AMOUNT
DED.DEDCD

	Let $DedCd = &DED.DEDCD
	If $DedCd = 'UN1776'
	!	Let $Total_Dues_Remitted = edit(&TOTAL_AMOUNT,'999999.99')   !Jyotsna - 11/17/2016 - PTools Upgrade852
   move &TOTAL_AMOUNT to $Total_Dues_Remitted '999999.99'        !Jyotsna - 11/17/2016 - PTools Upgrade852
	Else
		If $DedCd = 'IN1776'
			! Let $Total_Initiation_Remitted = edit(&TOTAL_AMOUNT,'999999.99')   !Jyotsna - 11/17/2016 - PTools Upgrade852
   move &TOTAL_AMOUNT to $Total_Initiation_Remitted '999999.99'            !Jyotsna - 11/17/2016 - PTools Upgrade852
		Else
			If $DedCd = 'PA1776'
				! Let $Total_PAC_Remitted = edit(&TOTAL_AMOUNT,'999999.99')   !Jyotsna - 11/17/2016 - PTools Upgrade852
     move &TOTAL_AMOUNT to $Total_PAC_Remitted '999999.99'            !Jyotsna - 11/17/2016 - PTools Upgrade852
			End-If
		End-If
	End-If
	
FROM PS_PAY_DEDUCTION DED
WHERE DED.PAY_END_DT =$Pay_End_Dt
AND DED.DEDCD IN ('UN1776','IN1776','PA1776')
GROUP BY DED.DEDCD
End-Select	

	Let $HeaderCode = 'H'
	Let $EmployerCode = '304'

	Let $ThruDate=edit($Pay_End_Dt,'MMDDYYYY')		

Let $Header_Record = $HeaderCode ||','||$EmployerCode || ',' || $ThruDate || ',' ||$Total_Dues_Remitted ||
	',' || $Total_Initiation_Remitted || ',' ||$Total_PAC_Remitted ||','||$Total_BELS_Remitted

write 1 from  $Header_Record
	

End-Procedure Write-File-Header

!**************************************************************************************************
!	Initialize-Variables = Procedure which initializes all the variables of this program to   *
!				zero or null value						  *
!**************************************************************************************************
Begin-Procedure Initialize-Variables

	Let $Emplid_9	= ' ' 	                
	Let #Empl_Rcd   = 0
	Let $Store_No	= ' '                 
	Let $Action_Reason  = ' '            
	Let $Action	= ' '                   
	Let $Effdt	= ' '                    
	Let $PayRate	= ' '                  
	Let $Term_Date	= ' '                
	Let $Rehire_Dt	= ' '                
	Let $Hire_Dt_Emp  = ' '              
	Let $Dedcd	= ' '                    
	Let #Ded_Cur_Amount = 0 
	Let #Dues_Amount = 0
	Let #Init_Amount = 0
	Let #PAC_Amount = 0          
	Let $Ded_Amount	= ' '               
	Let $Ded_Cur_Sign = ' '             
	Let $Emplid	= ' '                   
	Let $Address1 	= ' '                
	Let $Address2 	= ' '                
	Let $City	= ' '                     
	Let $State 	= ' '                  
	Let $Zip 	= ' '                     
	Let $Address1_Last  = ' '            
	Let $Address2_Last  = ' '           
	Let $City_Last	= ' '                
	Let $State_Last	= ' '               
	Let $Zip_Last	= ' '                 
	Let $Dues_Amount_Date  = ' '        
	Let $PAC_Amount_Date   = ' '
	Let #Total_PAC_Amount  = 0       
	Let #Total_Init_Amount = 0       
	Let #Total_Dues_Amount = 0       
	Let $Last_Name	= ' '                
	Let $First_Name = ' '              
	Let $Middle_Name = ' '             
	Let $Sex	= ' '                      
	Let $BirthDate 	= ' '               
	Let $Phone	= ' '                    
	Let $Term_Code	= ' '                
	Let $PayRate_Date = ' '            
	Let $Hire_Date 	= ' '               
	Let $New_Classification_Date = ' ' 
	Let $New_Classification   = ' '      
	Let $Email_Address = ' '           
	Let $BELS_Increase = ' '           
	Let $BELS_Amount_Date = ' '         
	Let $BELS_Amount_Sign = ' '        
	Let $BELS_Amount = ' '              
	Let $Total_Dues_Remitted = ' '      
	Let $Total_Initiation_Remitted = ' '
	Let $Total_PAC_Remitted = ' '       
	Let $ThruDate = ' '                
		
End-Procedure Initialize-Variables
!**************************************************************************************************
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'gexxx922.sqc'  !Get gex_rc_pay run controls
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API		
!**************************************************************************************************