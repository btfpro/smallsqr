!***********************************************************************
! GEXBN601:  POST RETIREMENT WELFARE                                   *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXBN601 :            POST RETIREMENT WELFARE                        *
!                                                                      *        
! Narrative:            This program creates a report and a file that  *
!                       will provide the actuaries census data for all *
!                       employees who are entitled to post-retirement  *
!                       welfare benefits.                              *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           * 
!                                                                      *  
! SQL Tables:           benef_plan_tbl                                 *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                       ben_prog_partic                                *
!                       health_benefit                                 *
!                                                                      *
! Written by:           Jim Hutchison                                  *
!                                                                      *
! Normally Run:         Semi-Annually                                  *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Benefit Program(s)                           *
!                         Plan Types(s)                                *
!                         Benefit Plan(s)                              *
!                         Report/Interface Flag                        *
!                         As Of Date                                   *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! JDH       07/08/98    Initial Creation                               *
!                                                                      *
! SXK       09/08/98    Added OUTFILE variable                         *
!                                                                      *
! JDH       09/15/99    Added report/interface run control parameter.  *
!                       Updated program according to updated program   *
!                        specifications.                               *
!                                                                      *
! SXK       10/20/99    Modified to get union_cd from job_labor        *
!                                                                      *
! AXL       02/17/2000  Enabled Drop Table statement. Modified show    *
!                       statement logic in P300-Finalization step      *
! PSR      08/12/2002   Modified to get union_cd from job              * 
!                       - Upgrade 8.3                                  *
!                                                                      *
! GBD      07/17/2003   Added code to email dat file when produced.    *
!                                                                      *
! CXA      10/11/2005   New output file requirements added             *
!
! ISDVNPK   08/23/2007 Upgrade 8.3 - 9.0 Added PS_PER_ORG_INST for ORIG_HIRE_DT
! GEX-MXT  04/02/2008  ADDED THE join condition for PER_ORG_INST       *
! DXS      04/21/2008  Initialized $spouse_birthdate variable in       *
!                      procedure  P240-Get-Spouse-Birthdate            *
! VENDKXY 07/27/2009   Done the changes for  the S3 # 13086081	       *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
!#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Portrait)
!Cloned ptpsl215.sqc and added lineprinter support AXL 10/11/2005
Begin-Setup
#Include 'gexpt215.sqc'   !Printer and Page-Size Initialization (Landscape)
End-Setup

!#define #column1     1 
!#define #column2    12
!#define #column3    24
!#define #column4    37
!#define #column5    71
!#define #column6    78
!#define #column7    91
!#define #column8   104
!#define #column9   114
!#define #column10  122
!#define #column11  135
!#define #column12  144
!#define #column13  158

#define #column1     1 
#define #column2     9
#define #column3    18
#define #column4    28
#define #column5    59
#define #column6    63
#define #column7    74
#define #column8    85
#define #column9    92
#define #column10   97
#define #column11  108
#define #column12  114
#define #column13  125
#define #column14  136
#define #column15  147
#define #column16  168
#define #column17  179

Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report


Begin-Heading 9
#debug9 Show 'Begin-Heading'
  If $Interface-Flag <> 'I'
    #Include 'stdhdg01.sqc'

    Let $X000_temp_out = 'Report as of ' || $X000_Report_Heading_AsOfDate
    Print $X000_temp_out         (3,)  Center

    Print 'Ben Prgm:'            (3,1)
    Print $Benefit_Program       (0,13)

    Print 'Plan Type:'           (4,1)
    Print $Plan_Type             (0,13)

    Print 'Ben Plan:'            (5,1)
    Print $Benefit_Plan          (0,13)

!         1         2         3         4         5         6         7         8         9         0         1         2         3         4         5         6         7         8         9
!1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
!                                                              SERVICE               EMPL   F/P  BEN PROG   UNION GROUP      SPOUSE     EXEMPT/    MEDICAL              MEDICAL
!COMPANY PAYGROUP EMPLID    NAME                           SEX DATE       BIRTHDATE  STATUS TIME EFFDT      CODE  NUMBER     BIRTHDATE  NON-EXEMPT COVERAGE             PLAN       SERVICE
!------- -------- --------- ------------------------------ --- ---------- ---------- ------ ---- ---------- ----- ---------- ---------- ---------- -------------------- ---------- -------
!xxx     xxx      xxxxxxxxx xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx x   xx/xx/xxxx xx/xx/xxxx x      x    xx/xx/xxxx xxx   xxxxx-xx   xx/xx/xxxx x          xxxxxxxxxxxxxxxxxxxx xxxxxxxxxx xx

    Print 'SERVICE'              (+2,{#column6})
    Print 'EMPL'                 (+0,{#column8})
    Print 'F/P'                  (+0,{#column9})
    Print 'BEN PROG'             (+0,{#column10})
    Print 'UNION'                (+0,{#column11})
    Print 'GROUP'                (+0,{#column12})
    Print 'SPOUSE'               (+0,{#column13})
    Print 'EXEMPT/'              (+0,{#column14})
    Print 'MEDICAL'              (+0,{#column15})
    Print 'MEDICAL'              (+0,{#column16})

    Print 'COMPANY'              (+1,{#column1})
    Print 'PAYGROUP'             (+0,{#column2})
    Print 'EMPLID'               (+0,{#column3})
    Print 'NAME'                 (+0,{#column4})
    Print 'SEX'                  (+0,{#column5})
    Print 'DATE'                 (+0,{#column6})
    Print 'BIRTHDATE'            (+0,{#column7})
    Print 'STATUS'               (+0,{#column8})
    Print 'TIME'                 (+0,{#column9})
    Print 'EFFDT'                (+0,{#column10})
    Print 'CODE'                 (+0,{#column11})
    Print 'NUMBER'               (+0,{#column12})
    Print 'BIRTHDATE'            (+0,{#column13})
    Print 'NON-EXEMPT'           (+0,{#column14})
    Print 'COVERAGE'             (+0,{#column15})
    Print 'PLAN'                 (+0,{#column16})
    Print 'SERVICE'              (+0,{#column17})

    Print '-'                    (+1,{#column1},6)   Fill
    Print '-'                    (+0,{#column1},7)   Fill
    Print '-'                    (+0,{#column2},8)   Fill
    Print '-'                    (+0,{#column3},9)   Fill
    Print '-'                    (+0,{#column4},30)  Fill
    Print '-'                    (+0,{#column5},3)   Fill
    Print '-'                    (+0,{#column6},10)  Fill
    Print '-'                    (+0,{#column7},10)  Fill
    Print '-'                    (+0,{#column8},6)   Fill
    Print '-'                    (+0,{#column9},4)   Fill
    Print '-'                    (+0,{#column10},10) Fill
    Print '-'                    (+0,{#column11},5)  Fill
    Print '-'                    (+0,{#column12},10) Fill
    Print '-'                    (+0,{#column13},10) Fill
    Print '-'                    (+0,{#column14},10) Fill
    Print '-'                    (+0,{#column15},20) Fill
    Print '-'                    (+0,{#column16},10) Fill
    Print '-'                    (+0,{#column17},7)  Fill

  End-If
End-Heading


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      = 'GEXBN601'
  Let $ReportTitle   = 'POST RETIREMENT WELFARE'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  Let $GEXXX911_Benefit_Program_Alias = 'BPP.BENEFIT_PROGRAM'
  Let $GEXXX911_Plan_Type_Alias       = 'HB.PLAN_TYPE'
  Let $GEXXX911_Benefit_Plan_Alias    = 'HB.BENEFIT_PLAN'

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show ' '
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  Do Format-DateTime($X000_Where_Select_AsOfDate, $X000_Report_Heading_AsOfDate, {DEFDATE}, '', '')
  Let $X000_Order_By = 'Benefit Program, Benefit Plan, Name'

  Show ' '
  Show '$GEXXX911_Include_Benefit_Program_Display_Criteria  = ' $GEXXX911_Include_Benefit_Program_Display_Criteria
  Show '$X000_Where_Select_AsOfDate = ' $X000_Where_Select_AsOfDate
  Show ' '

  If $Interface-Flag <> 'I'
    Do P130-Print-Cover-Page
  End-If

  If $Interface-Flag <> 'R'
    Do P140-Open-File
  End-If

  Let $tablename = 'PS_GEX_R_GEXBN601'

  Do P150-Drop-Table
  Do P160-Create-Table
End-Procedure


Begin-Procedure P110-SQRW-Run-Controls
#debug9 Show 'P110-SQRW-Run-Controls'
  Display 'Enter Benefit Program/Plan Type/Benefit Program or leave blank to exit.'
  While 1=1
    Input $In-Benefit-Program Maxlen=3 'Benefit Program'
    Uppercase $In-Benefit-Program
    If Rtrim($In-Benefit-Program, ' ') = ''
      Break
    Else
      Input $In-Plan-Type Maxlen=2 'Plan Type'
      Uppercase $In-Plan-Type
      If Rtrim($In-Plan-Type, ' ') = ''
        Let $Include_Condition =   '(' || $GEXXX911_Benefit_Program_Alias || ' = ''' || $In-Benefit-Program || ''')'
      Else
        Input $In-Benefit-Plan Maxlen=6 'Benefit Plan'
        Uppercase $In-Benefit-Plan
        If Rtrim($In-Benefit-Plan, ' ') = ''
          Let $Include_Condition = '(' || $GEXXX911_Benefit_Program_Alias || ' = ''' || $In-Benefit-Program || ''' And '
                                       || $GEXXX911_Plan_Type_Alias       || ' = ''' || $In-Plan-Type       || ''')'
        Else
          Let $Include_Condition = '(' || $GEXXX911_Benefit_Program_Alias || ' = ''' || $In-Benefit-Program || ''' And '
                                       || $GEXXX911_Plan_Type_Alias       || ' = ''' || $In-Plan-Type       || ''' And '
                                       || $GEXXX911_Benefit_Plan_Alias    || ' = ''' || $In-Benefit-Plan    || ''')'
        End-If
        Add 1 To #GEX_RC_BEN_PRGM_ROWS
        If #GEX_RC_BEN_PRGM_ROWS = 1
          Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '(' || $Include_Condition
        Else
          Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA || ' Or '  || $Include_Condition
        End-If
      End-If
    End-If
  End-While

  If #GEX_RC_BEN_PRGM_ROWS = 0
    Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
    Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA || ')'
    Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
  End-If

  Do Ask-As-Of-Date
  Let $X000_Where_Select_AsOfDate = $AsOfDate

  While 1=1
    Input $Interface-Flag Maxlen=1 '(R)eport / (I)nterface / (B)oth'
    Uppercase $Interface-Flag
    If $Interface-Flag = 'R' Or
       $Interface-Flag = 'I' Or
       $Interface-Flag = 'B'
      Break
    End-If
  End-While
End-Procedure


Begin-Procedure P120-Process-Scheduler-Run-Controls
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXRCBN1-SELECT-PARAMETERS

  Let $X000_Where_Select_AsOfDate = &GEX_RC_BEN.AsOfDate
  If Rtrim (&GEX_RC_BEN.AsOfDate, ' ') = ''
    Let $X000_Where_Select_AsOfDate = $AsOfToday
  End-If

  Do GEXXX911-Select-Benefit-Program-Parameters     

  Let $Interface-Flag = &GEX_RC_BEN.GEX_RPT_INTERFACE

  If Rtrim($Interface-Flag, ' ') = ''
    Let $Interface-Flag = 'B'
  End-If
End-Procedure


begin-procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX911_Include_Benefit_Program_Display_Criteria  = '  (+2,5)
  Print $GEXXX911_Include_Benefit_Program_Display_Criteria        (0,+2)
  Print '$AsOfDate :'                                             (+2,5)
  Print $X000_Report_Heading_AsOfDate                             (0,+2)

  Print '$Interface-Flag:'                                        (+2,5)
  Evaluate $Interface-Flag
    When = 'R'
      Print '(R)eport'                                            (0,+2)
    When = 'I'
      Print '(I)nterface'                                         (0,+2)
    When = 'B'
      Print '(B)oth'                                              (0,+2)
  End-Evaluate

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
  Let #PAGE-COUNT = 1
End-Procedure


begin-procedure P140-Open-File
#debug9 Show 'P140-Open-File'
  Let $file1 = '{OUTFILE}' || Lower($ReportID) || '.dat'

  Open $file1
       As 1
       For-Writing
!       Record=105:Fixed
       Record=138:Fixed
       Status=#filestat

  If #filestat != 0
     Show 'Error opening output file.  Program terminating.'
     Stop
  End-If
End-Procedure


Begin-Procedure P150-Drop-Table
#debug9 Show 'P150-Drop-Table'
Begin-Sql on-error=skip 
  DROP TABLE [$tablename]
End-Sql
End-Procedure


Begin-Procedure Skip
!
End-Procedure


Begin-Procedure P160-Create-Table
#debug9 Show 'P160-Create-Table'
Begin-Sql 
  CREATE TABLE [$tablename]
	(BENEFIT_PROGRAM   VARCHAR2(3)  NOT NULL,
	 PLAN_TYPE         VARCHAR2(2)  NOT NULL,
	 BENEFIT_PLAN      VARCHAR2(6)  NOT NULL,
	 COMPANY           VARCHAR2(3)  NOT NULL,
	 PAYGROUP          VARCHAR2(3)  NOT NULL,
	 EMPLID            VARCHAR2(11) NOT NULL,
	 NAME              VARCHAR2(50) NOT NULL,
         SEX               VARCHAR2(1)  NOT NULL,
	 ORIG_HIRE_DT      DATE,
	 BIRTHDATE         DATE,
	 EMPL_STATUS       VARCHAR2(1)  NOT NULL,
	 FULL_PART_TIME    VARCHAR2(1)  NOT NULL,
	 EFFDT             DATE,
	 UNION_CD          VARCHAR2(3)  NOT NULL,
	 GROUP_NBR         VARCHAR2(10),
	 BIRTHDATE2        DATE,
         EMPL_TYPE	   VARCHAR2(1)  NOT NULL,	
         CC_DESCR          VARCHAR2(50),		
         BPT_DESCRSHORT    VARCHAR2(10),
         SERVICE_DT        DATE
)
	TABLESPACE TE7TOOLS001
End-Sql
End-Procedure

Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
Begin-Select
bpp.benefit_program
hb.plan_type
hb.benefit_plan
j.company
j.paygroup
j.emplid
j.empl_rcd
j.empl_status
j.full_part_time
!CXA 10/11/05 Begin
J.empl_type
e.service_dt
!CXA 10/11/05 End
!SXK 10/20/99 Begin
!e.union_cd
J.UNION_CD
!SXK 10/20/99 End
pd.name
pd.sex
INST.ORIG_HIRE_DT   ! pd.ORIG_HIRE_DT  !ISDVNPK 8/23/2007 Modified for Upgrade 9.0 
pd.birthdate
bpp.effdt
hb.coverage_elect
hb.covrg_cd
hb.effdt

  #debug9 show '=================='
  #debug9 show 'j.emplid ' &j.emplid

  Let $ben_plan = &hb.benefit_plan
  Let $covrg_cd = &hb.covrg_cd

! vendkxy Done the changes for  the S3 # 13086081
 ! If &hb.coverage_elect = 'W'
 !  #debug9 show 'Doing P220-Get-Elect-Row'
 !   Do P220-Get-Elect-Row
 ! End-If
! vendkxy Done the changes for  the S3 # 13086081

  Do P230-Group-Number

  #debug9 show '$covrg_cd ' $covrg_cd
  If $covrg_cd = '4'
    #debug9 show 'Doing P240-Get-Spouse-Birthdate'
    Do P240-Get-Spouse-Birthdate
  Else
    Let $spouse_birthdate = ''
  End-if

!CXA 10/11/2005 Begin
  If $covrg_cd = ' '
    let $covrg_cd_descr = 'WAIVED'
    let $Benef_Plan_Descr = ' '
  Else
    Do P245-Get-CovrgCode-Descr  
  End-if
!CXA 10/11/2005 End
  Do P250-Insert-Record

From   ps_personal_data        pd,
!SXK 10/20/1999 Begin
      ps_employment           e,
!       ps_job_labor            jl,
!SXK 10/20/1999 End
       ps_job                  j,
       ps_ben_prog_partic      bpp,
       ps_health_benefit       hb,
        PS_PER_ORG_INST INST  !ISDVNPK 8/23/2007 Modified for Upgrade 9.0 

Where  pd.emplid               = j.emplid
 AND INST.EMPLID = j.EMPLID  !ISDVNPK 8/23/2007 Modified for Upgrade 9.0 
 AND INST.ORG_INSTANCE_ERN  = J.EMPL_RCD	!GEX-MXT added for PER_ORG_INST join
!SXK 10/20/1999 Begin
And    j.emplid                = e.emplid
And    j.empl_rcd             = e.empl_rcd
!And    jl.emplid              = j.emplid
!And    jl.empl_rcd           = j.empl_rcd

!And    jl.effdt                 =
!      (Select Max(effdt)
!       From   ps_job_labor
!       Where  emplid           = jl.emplid
!       And    empl_rcd        = jl.empl_rcd
!       And    effdt           <= $X000_Where_Select_AsOfDate)

!And    jl.effseq                =
!      (Select Max(effseq)
!       From   ps_job_labor
!       Where  emplid           = jl.emplid
!       And    empl_rcd        = jl.empl_rcd
!       And    effdt            = jl.effdt)
!SXK 10/20/99 End

And    j.effdt                 =
      (Select Max(effdt)
       From   ps_job
       Where  emplid           = j.emplid
       And    empl_rcd        = j.empl_rcd
       And    effdt           <= $X000_Where_Select_AsOfDate)

And    j.effseq                =
      (Select Max(effseq)
       From   ps_job
       Where  emplid           = j.emplid
       And    empl_rcd        = j.empl_rcd
       And    effdt            = j.effdt)

And    bpp.emplid              = j.emplid
And    bpp.empl_rcd           = j.empl_rcd

And    bpp.effdt               =
      (Select Max(effdt)
       From   ps_ben_prog_partic
       Where  emplid           = bpp.emplid
       And    empl_rcd        = bpp.empl_rcd
       And    effdt           <= $X000_Where_Select_AsOfDate)

And    hb.emplid               = bpp.emplid
And    hb.empl_rcd            = bpp.empl_rcd

And    hb.effdt                =
      (Select Max(effdt)
       From   ps_health_benefit
       Where  emplid           = hb.emplid
       And    empl_rcd        = hb.empl_rcd
       And    plan_type        = hb.plan_type
       And    effdt           <= $X000_Where_Select_AsOfDate)

And    hb.coverage_elect      <> 'T'

And   [$GEXXX911_Include_Benefit_Program_Criteria]
End-Select
End-Procedure

Begin-Procedure P220-Get-Elect-Row
#debug9 Show 'P220-Get-Elect-Row'
    #debug9 show '<' &j.emplid '><' &j.empl_rcd '><' &hb.effdt '><' &hb.plan_type '>'
Begin-Select
hb2.benefit_plan
hb2.covrg_cd

  Let $ben_plan = &hb2.benefit_plan
  Let $covrg_cd = &hb2.covrg_cd
   #debug9 show '$covrg_cd ' $covrg_cd

From   ps_health_benefit hb2

Where  hb2.emplid              = &j.emplid
And    hb2.empl_rcd           = &j.empl_rcd

And    hb2.effdt               =
      (Select Max(effdt)
       From   ps_health_benefit
       Where  emplid           = hb2.emplid
       And    empl_rcd        = hb2.empl_rcd
       And    plan_type        = hb2.plan_type
       And    effdt           <= &hb.effdt
       And    coverage_elect   = hb2.coverage_elect)

And    hb2.plan_type           = &hb.plan_type
And    hb2.coverage_elect      = 'E'
End-Select
End-Procedure

Begin-Procedure P230-Group-Number
#debug9 Show 'P230-Group-Number'
Begin-Select
BPT.GROUP_NBR
BPT.DESCRSHORT
  Let $Benef_Plan_Descr = &BPT.DESCRSHORT   !CXA 10/11/05
FROM   ps_benef_plan_tbl bpt
WHERE  BPT.Plan_Type          = &hb.plan_type
AND    BPT.Benefit_Plan       = $ben_plan
AND    BPT.EffDt              =
      (SELECT MAX(EffDt)
       FROM   PS_Benef_Plan_Tbl
       WHERE  Plan_Type       = BPT.Plan_Type
       And    Benefit_Plan    = BPT.Benefit_Plan
       And    EffDt          <= $X000_Where_Select_AsOfDate)
End-Select
End-Procedure

Begin-Procedure P240-Get-Spouse-Birthdate
#debug9 Show 'P240-Get-Spouse-Birthdate'
   Let $spouse_birthdate = ''  ! DXS, 04/21/08, added this
                               ! else previous non-blank value is being 
                               ! reported
Begin-Select
db.birthdate
  Let $spouse_birthdate = &db.birthdate
  #debug9 show '$spouse_birthdate ' $spouse_birthdate

From   ps_dependent_benef db
Where  db.emplid       = &j.emplid
And    db.relationship = 'SP'
End-Select
End-Procedure

!CXA 10/11/05 Begin
Begin-Procedure P245-Get-CovrgCode-Descr
#debug9 Show 'P245-Get-CovrgCode-Descr'
Begin-Select
CC.DESCR
  let $covrg_cd_descr = &CC.DESCR
FROM	PS_COVRG_CD_TBL CC
WHERE	CC.COVRG_CD	= $covrg_cd
AND 	CC.EFFDT =
        (SELECT	MAX(CC_ED.EFFDT) 
	 FROM	PS_COVRG_CD_TBL CC_ED
	 WHERE	CC.COVRG_CD	 = CC_ED.COVRG_CD
	 AND	CC_ED.EFFDT	<= $X000_Where_Select_AsOfDate)
End-Select
End-Procedure
!CXA 10/11/05 End

Begin-Procedure P250-Insert-Record
#debug9 Show 'P250-Insert-Record'
Begin-SQL
  Insert Into [$tablename]
   Values (&bpp.benefit_program,
           &hb.plan_type,
           $ben_plan,
           &j.company,
           &j.paygroup,
           &j.emplid,
           &pd.name,
           &pd.sex,
           &INST.orig_hire_dt,   !ISDVNPK 08/23/2007
           &pd.birthdate,
           &j.empl_status,
           &j.full_part_time,
           &bpp.effdt,
!SXK 10/20/99 Begin
!          &e.union_cd
           &J.UNION_CD,
!SXK 10/20/99 End
           &bpt.group_nbr,
           $spouse_birthdate,
!CXA 10/11/05 Begin
           &J.empl_type,
           $covrg_cd_descr,
           $Benef_Plan_Descr,
           &e.service_dt)
!CXA 10/11/05 End
End-SQL
End-Procedure

Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'
  Do P380-Create-Index
  Do P320-Select-Record

  ! AXL - 2/17/2000 Re-arranged show statement - Begin
  If $Data-Found-Flag <> 'Y'
    If $Interface-Flag <> 'I'
      Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
    End-If
  Else
    If $Interface-Flag <> 'R'
      Do Format-Number(#recs-written,$recs-written,'888,888,880')

      Show ''
      Show $recs-written ' records written to ' $file1
      Show ''
    End-if
  ! AXL - 2/17/2000 Re-arranged show statement - End
  End-If

  If $Interface-Flag <> 'R'
    Do P310-Close-File
    Do P400-email-file                                         !GBD 07/17/2003
  End-If

  Do P150-Drop-Table

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'
End-Procedure

Begin-Procedure P310-Close-File
#debug9 Show 'P310-Close-File'
  Close 1

  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop
  End-If
End-Procedure

Begin-Procedure P320-Select-Record
#debug9 Show 'P320-Select-Record'
Begin-Select
t.benefit_program              ()  On-Break  Level=1
                                   Print=Never

t.plan_type                    ()  On-Break  Level=2
                                   Print=Never

t.benefit_plan                 ()  On-Break  Level=3
                                   Print=Never
                                   After=P370-Print-Benefit-Plan-Totals
t.company
t.paygroup
t.emplid
t.name
t.sex
t.orig_hire_dt
t.birthdate
t.empl_status
t.full_part_time
t.effdt
t.union_cd
t.group_nbr
t.birthdate2
!CXA 10/11/05 Begin
t.empl_type
t.cc_descr
t.bpt_descrshort
t.service_dt
!CXA 10/11/05 End

  Let $Data-Found-Flag = 'Y'

  Let $benefit_program = &t.benefit_program
  Let $plan_type       = &t.plan_type
  Let $benefit_plan    = &t.benefit_plan
  
  !CXA 10/11/05 Begin
  Show &t.emplid ' ' &t.name
  show '&t.service_dt ' &t.service_dt
  Let #Mnths_of_Service = datediff(strtodate($X000_Where_Select_AsOfDate), strtodate(&t.service_dt), 'MONTH')
  Let #Yrs_of_Service = TRUNC(#Mnths_of_Service/12, 0)
  Let $Yrs_of_Service = edit(#Yrs_of_Service, '99')
  show '$Yrs_of_Service ' $Yrs_of_Service
 ! Let $Yrs_of_Service = '11'

  !While 1=1
  !  Input $Finish-Flag Maxlen=1 '(F)inish'
  !  Uppercase $Finish-Flag
  !  If $Interface-Flag = 'F'
  !    Break
  !  End-If
  !End-While

  !CXA 10/11/05 End

  Add 1 To #plan-employee-count

  Do P330-Initialize-Record

  Do P340-Format-Record

  If $Interface-Flag <> 'I'
    Do P350-Print-Record
  End-If

  If $Interface-Flag <> 'R'
    Do P360-Write-Record
  End-If

From   [$tablename] t
Order by t.benefit_program, t.plan_type, t.benefit_plan, t.name
End-Select
End-Procedure

Begin-Procedure P330-Initialize-Record
#debug9 Show 'P330-Initialize-Record'
  Let $Birthdate         = ''
  Let $Birthdate2        = ''
  let $Orig_Hire_Dt      = ''
  Let $Orig_Hire_Dt2     = ''
  Let $BP-effdt          = ''
  Let $BP-effdt2         = ''
  Let $Spouse_Birthdate  = ''
  Let $Spouse_Birthdate2 = ''
  let $Service_Dt      = ''
  Let $Service_Dt2     = ''
End-Procedure

Begin-Procedure P340-Format-Record
#debug9 Show 'P340-Format-Record'
  Let $Year4 = '1'
  Do Format-DateTime(&t.birthdate, $dateout, {DEFMDY}, '', '')
  Let $Birthdate  = Substr($dateout,1,2) || '/' ||
                    Substr($dateout,4,2) || '/' ||
                    Substr($dateout,7,4)
  Let $Birthdate2 = Substr($dateout,1,2) ||
                    Substr($dateout,4,2) ||
                    Substr($dateout,7,4)

  Let $Year4 = '1'
  Do Format-DateTime(&t.orig_hire_dt, $dateout, {DEFMDY}, '', '')
  Let $Orig_Hire_Dt  = Substr($dateout,1,2) || '/' ||
                       Substr($dateout,4,2) || '/' ||
                       Substr($dateout,7,4)
  Let $Orig_Hire_Dt2 = Substr($dateout,1,2) ||
                       Substr($dateout,4,2) ||
                       Substr($dateout,7,4)

  Let $Year4 = '1'
  Do Format-DateTime(&t.service_dt, $dateout, {DEFMDY}, '', '')
  Let $Service_Dt  = Substr($dateout,1,2) || '/' ||
                       Substr($dateout,4,2) || '/' ||
                       Substr($dateout,7,4)
  Let $Service_Dt2 = Substr($dateout,1,2) ||
                       Substr($dateout,4,2) ||
                       Substr($dateout,7,4)

  Let $Year4 = '1'
  Do Format-DateTime(&t.effdt, $dateout, {DEFMDY}, '', '')
  Let $BP-effdt  = Substr($dateout,1,2) || '/' ||
                   Substr($dateout,4,2) || '/' ||
                   Substr($dateout,7,4)
  Let $BP-effdt2 = Substr($dateout,1,2) ||
                   Substr($dateout,4,2) ||
                   Substr($dateout,7,4)

  If Rtrim(&t.birthdate2,' ') <> ''
    Let $Year4 = '1'
    Do Format-DateTime(&t.birthdate2, $dateout, {DEFMDY}, '', '')
    Let $Spouse_Birthdate  = Substr($dateout,1,2) || '/' ||
                             Substr($dateout,4,2) || '/' ||
                             Substr($dateout,7,4)
    Let $Spouse_Birthdate2 = Substr($dateout,1,2) ||
                             Substr($dateout,4,2) ||
                             Substr($dateout,7,4)
  End-If
End-Procedure

Begin-Procedure P350-Print-Record
#debug9 Show 'P350-Print-Record'
  Print &t.company             (+1,{#column1})
  Print &t.paygroup            (+0,{#column2})
  Print &t.emplid              (+0,{#column3})
  Print &t.name                (+0,{#column4},30)
  Print &t.sex                 (+0,{#column5})
!CXA 10/11/05 Begin
  Print $Service_Dt            (+0,{#column6})
!CXA 10/11/05 End
  Print $Birthdate             (+0,{#column7})
  Print &t.empl_status         (+0,{#column8})
  Print &t.full_part_time      (+0,{#column9})
  Print $BP-effdt              (+0,{#column10})
  Print &t.union_cd            (+0,{#column11})
  Print &t.group_nbr           (+0,{#column12})
  Print $Spouse_Birthdate      (+0,{#column13})
!CXA 10/11/05 Begin
  Print &t.empl_type           (+0,{#column14})
  Print &t.cc_descr            (+0,{#column15})
  Print &t.bpt_descrshort      (+0,{#column16})
  Print $Yrs_of_Service        (+0,{#column17})
!CXA 10/11/05 End
end-procedure

Begin-Procedure P360-Write-Record
#debug9 Show 'P360-Write-Record'
  Add 1 To #recs-written

  Write 1 From &t.benefit_program:3
               &t.company:3
               &t.paygroup:3
               &t.emplid:9
               &t.name:35
               &t.sex:1
               $Service_Dt2:8		!CXA 10/11/05
               $Birthdate2:8
               &t.empl_status:1
               &t.full_part_time:1
               $BP-effdt2:8
               &t.union_cd:3
               &t.benefit_plan:6
               &t.group_nbr:8
               $Spouse_Birthdate2:8
               &t.empl_type:1		!CXA 10/11/05
               &t.cc_descr:20		!CXA 10/11/05
               &t.bpt_descrshort:10	!CXA 10/11/05
               $Yrs_of_Service:2	!CXA 10/11/05
    Status=#filestat

  If #filestat != 0
     Show 'Error writing output file.  Program terminating.'
     Stop
  End-If
End-Procedure

Begin-Procedure P370-Print-Benefit-Plan-Totals
#debug9 Show 'P370-Print-Benefit-Plan-Totals'
  If #plan-employee-count > 0
    Print 'Total number of employees in benefit plan' (+2,1)
    Print $benefit_plan          (+0,43)
    Print #plan-employee-count   (+0,50)  Edit 9,999,999,999
    New-Page
    Let #plan-employee-count = 0
  End-If
End-Procedure

Begin-Procedure P380-Create-Index
#debug9 Show 'P380-Create-Index'
Begin-Sql
  CREATE INDEX PS_GEX_R_GEXBN601_1 ON [$tablename]
	(BENEFIT_PROGRAM,
	 PLAN_TYPE,
	 BENEFIT_PLAN,
	 NAME)
	TABLESPACE TE7TOOLS001
End-Sql
End-Procedure

!GBD 07/17/2003 Begin
!***********************************************************************
begin-procedure P400-email-file
!***********************************************************************
   do GEXXX951-Select-Oracle-Instance
   let $db_name = lower($GEXXX951_Oracle_Instance)
   Do GEXXX971-Select-Trans-Type-Parameters
   if ($GEXXX971_EMAIL_ADDR_CRITERIA = '') and ($GEXXX971_FTP_ADDR_CRITERIA = '')
      show 'Either no rows exist on GEX_INTFC_RULE/DATA for this Oprid/Run Control ID'
      show 'or the most current rows under this ID have been set to inactive. Data will'
      show 'not be sent.'
   else
      if $GEXXX971_GEX_TRANS_TYPE = 'E'
         show $GEXXX971_EMAIL_ADDR_CRITERIA
         show 'This is the email statement produced: '

         let $UNIX_MAIL_COMMAND = '/usr/local/bin/todos -v ' || $file1 ||
         ' &&/usr/local/bin/mailer.pl "'||$GEXXX971_EMAIL_ADDR_CRITERIA||'" "POST RETIREMENT WELFARE" '||
         '"$BINDIR/gexbn601_msg.sh" ' || $file1 || ' '
         show $UNIX_MAIL_COMMAND
      
         CALL SYSTEM USING $UNIX_MAIL_COMMAND #system_status
        
         if #system_status <> 0
            add 1 to #errorcount
            display 'eMail of ' noline
            display $file1 noline
            display ' failed'
            STOP
         else
            display $file1
            display ' was emailed successfully'
         end-if

      end-if
      if $GEXXX971_GEX_TRANS_TYPE = 'F'
         show $GEXXX971_FTP_ADDR_CRITERIA
         show 'Need to insert a Call FTP shell script to run ftp'
      end-if
   end-if

end-procedure
!GBD 07/17/2003 End

!**********************************************************************
#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'gexxx911.sqc'  !Get benefit_program multiple row table
#include 'gexxx920.sqc'  !Get ben single row run control
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#Include 'gexxx951.sqc'  !Oracle Database Name             !GBD 07/17/2003
#Include 'gexxx971.sqc'  !Email and FTP Parameters         !GBD 07/17/2003
