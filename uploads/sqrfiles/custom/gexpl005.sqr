!***********************************************************************

!  GEXPL005:  RETAIL THRIFT PLAN                                       *

!***********************************************************************

!                                                                      *

!                                                                      *

!               Confidentiality Information:                           *

!                                                                      *

! This module is the confidential and proprietary information of       *

! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*

! in any form, by any means, in whole or in part, nor is it to be used *

! for any purpose other than that for which it is expressly provided   *

! without the written permission of Giant Eagle.                       *

!                                                                      *

!***********************************************************************

!                                                                      *

! GEXPL005:  		Retail Thrift Plan                             *

!                                                                      *

! Narrative:		Creates a weekly report of employee thrift     *

!                       plan deductions and employer matching          *

!                       contributions.                                 *

!                                                                      *

! #Debugx Used:		#debug9 paragraph trace                        *

!			#debug8 key variable values                    *

!			#debug7 data returned from sql calls           *

!                                                                      *

! SQL Tables:    	PAY_CAL_BAL_ID                                 *

!			EMPLOYMENT                                     *

!			PAY_CHECK                                      *

!			PAY_DEDUCTION                                  *

!			GEX_HRS_BAL                                    *

!                                                                      *

! Written by:		John Dorsey-SoftLink Inc.                      *

!                                                                      *

! Normally Run:		Weekly                                         *

!                                                                      *

! Prerequisite: 	None                                           *

!                                                                      *

! Control Parms:	FOR WHERE CLAUSE:                              *

!                         As Of Date                                   *

!			  Multiple Plan Types                          *

!			  Multiple Benefit Plans                       *

!                                                                      *

!***********************************************************************

!                         MODIFICATION HISTORY                         *

!***********************************************************************

!  INITIALS	DATE		DESCRIPTION OF THE CHANGE              *

!***********************************************************************

!                                                                      *

!  DAH		02/18/98	Initial Creation of GEXPY610           *

!                                                                      *

!  JWD		06/08/98	Clone GEXPY610 and create GEXPL005     *

!                                                                      *

!  JDH          11/10/98        Modified SQRW run control logic        *

!                                                                      *

!  JDH          12/11/98        Performance Tuning                     *

!                                                                      *

!  JDH          01/22/99        Get hours from gex_hrs_bal instead     *

!                               of from pay_spcl_earns.                *

!                                                                      *

!  JDH          02/26/99        Pull gex_hrs_bal rows by the check date*

!                               of the pay end rather than the check   *

!                               date of the pay_check row.             *

!                                                                      *

!  SXK          10/21/99        Modified to have union from job_labor  *

!                               plan.                                  *

!                                                                      *

!  AXC          08/21/2002	Modified to have union on Job, not     *

!				job_labor			       *

!                                                                      *

!  AXL  10852   02/04/2005      Modify GEXPL005 for new Local 1 401k   *

!                               plan.                                  *

!  AMS					09/05/2007			8.3 to 9.0 upgrade retrofit changes

!GEX-PL126202 Kundan kumar Yeedibilli 05/14/2012 Changed the dollar amt

!			and added the code to pick from run control

! TCSXKWK       04/06/15     New changes for printing in excel format  *

!***********************************************************************





#include 'setenv.sqc'   !Set environment

#Include 'setup02.sqc'  !Printer and page-size initialization





!selection criteria

#define #x000_col_selection_criteria_a 	2

#define #x000_col_selection_criteria_b 	5



#define #x000_col_company		02



!line 1

#define #x000_col_deptid		02

#define #x000_col_union_cd		12

#define #x000_col_name			20

#define #x000_col_emplid		55

#define #x000_col_ee_deduction		70

#define #x000_col_er_match		87

#define #x000_col_hours			104

#define #x000_col_total			121



!line totals

#define #x000_col_totals_literal	4

#define #x000_col_totals_literal2	20

#define #x000_col_totals_literal3	30





begin-heading 7

#debug9 Show 'begin-heading'

 do Get-Department-Name



 #Include 'stdhdg02.sqc'



 print ':'					(3,8)



 do Format-DateTime($pay_end_dt, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')



 let $x000_temp_out =  'Pay end date: ' || $X000_REPORT_HEADING_ASOFDATE 

 print $x000_temp_out 	            (3,) center 



 print 'Department:'			(4,1)

 print $deptid				(4,13)

 print $deptname				(4,19)



!line 1

 print 'Union'		(+2,{#x000_col_union_cd})

 print '     Weekly EE'	(0,{#x000_col_EE_deduction})

 print '     Weekly ER' (0,{#x000_col_ER_match})	

 print '        Weekly'	(0,{#x000_col_hours})

 print '         Total'	(0,{#x000_col_total})



!line 2 

 print 'Store'		(+1,{#x000_col_deptid})

 print 'Code'	     	(0,{#x000_col_union_cd})

 print 'Name'      	(0,{#x000_col_name})	

 print 'Emplid'	      (0,{#x000_col_emplid})

 print '     Deduction'	(0,{#x000_col_EE_deduction})

 print '         Match' (0,{#x000_col_ER_match})	

 print '   Total Hours'	(0,{#x000_col_hours})

 print '  Contribution'	(0,{#x000_col_total})

end-heading





begin-report

#debug9 show 'begin-report'

  do Set-Optimizer-Goal

  do Init-DateTime

  do Init-Number

  do Get-Current-DateTime

  

  ! TCSXKWK 05/13/2015 code add to append date to file 

   date-time () MMDDYY &Filedate

  let $Filedate = &Filedate

  ! TCSXKWK 05/13/2015 code add to append date to file 

  do StdAPI-Init

  do P010-Init-Variables

  do P160-Open-File !TCSXKWK code to write to excel

  do P100-Main-Routine



  do StdAPI-Term

  do Reset



  date-time () HH:MI:SS &timeEnded

  date-time () MM/DD/YYYY &dateEnded

  show 'Report Ended at ' &timeEnded ' on ' &dateEnded



  show 'Successful End of Report'

end-report





begin-procedure Set-Optimizer-Goal

#debug9 Show 'Set-Optimizer-Goal'

  Begin-SQL

!    Alter Session Set OPTIMIZER_GOAL=RULE;			!AMS 09/05/2007

  End-SQL

end-procedure





begin-procedure P010-Init-Variables

#debug9 show 'P010-Init-Variables'

  do Get-Calendar-Year-Id

  show '$Calendar_Year_Id=' $Calendar_Year_Id



  let $ReportID    = 'GEXPL005'

  let $ReportTitle = 'Retail Thrift Plan'

  let $Country     = 'USA'



  show '$ReportID=' $ReportID 

  show '$ReportTitle=' $ReportTitle

  show 'Filedate' $Filedate

!RUN CONTROL LOGIC

  Let $GEXXX912_PLAN_TYPE_Alias    = 'PD.PLAN_TYPE'

  Let $GEXXX912_BENEFIT_PLAN_Alias = 'PD.BENEFIT_PLAN'



  if $Prcs_Process_Instance = ''

	do P015-get-input

  else

	Do GEXXX922-Select-Parameters

      let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE

      if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''

        let $X000_WHERE_SELECT_ASOFDATE = $asoftoday

      end-if

	Do GEXXX912-Select-BENEFIT-PLAN-Parameters

	

!GEX-PL126202 Kundan kumar Yeedibilli -- Begin	

	

Begin-Select



GEX_RC_MATCH.GEX_MATCH_AMT



	Let $GEX_RC_MATCH.GEX_MATCH_AMT = &GEX_RC_MATCH.GEX_MATCH_AMT



From  PS_GEX_RC_MATCH GEX_RC_MATCH



Where Rtrim(GEX_RC_MATCH.GEX_MATCH_AMT, ' ') != ' ' 

End-Select



!GEX-PL126202 Kundan kumar Yeedibilli-- End

  end-if



  date-time () HH:MI:SS &timeBegan

  date-time () MM/DD/YYYY &dateBegan

  show 'Report Began at ' &timeBegan ' on ' &dateBegan



  Do P140-Get-Last-Confirmed-Pay



  let $X000_ORDER_BY = 'Company, DeptID, EmplID'



  do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')



  show '$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA          =' $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA

  show '$X000_ORDER_BY                                   =' $X000_ORDER_BY

  show '$X000_WHERE_SELECT_ASOFDATE                      =' $X000_WHERE_SELECT_ASOFDATE 

  show 'MATCH AMOUNT					 =' $GEX_RC_MATCH.GEX_MATCH_AMT	!GEX-PL126202 Kundan kumar Yeedibilli



  print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})

  print '$Prcs_OPRID          ='                              (+1,{#x000_col_selection_criteria_b})

  print $Prcs_OPRID                                           (0,+2)

  print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})

  print $PRCS_RUN_CNTL_ID                                     (0,+2)



  print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,{#x000_col_selection_criteria_a})

  print '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})

  print $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA            (0,+2)



  print '$X000_WHERE_SELECT_ASOFDATE                     ='   (+1,{#x000_col_selection_criteria_b})

  print $X000_WHERE_SELECT_ASOFDATE                           (0,+2)

   

  print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,{#x000_col_selection_criteria_a})

  print '$X000_ORDER_BY                                  ='   (+1,{#x000_col_selection_criteria_b})

  print $X000_ORDER_BY 	(0,+2)



  LET #PAGE-COUNT = 0

end-procedure





begin-procedure P015-get-input

#debug9 show 'P015-get-input'

  Do Ask-As-Of-Date

  Let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate



  Display 'Enter Plan Type or leave blank to exit.'

  While 1=1

    Input $In-Plan-Type Maxlen=2 'Plan Type'

    Uppercase $In-Plan-Type

    If Rtrim($In-Plan-Type, ' ') = ''

      Break

    Else

      Input $In-Benefit-Plan Maxlen=6 'Benefit Plan'

      Uppercase $In-Benefit-Plan

      If Rtrim($In-Benefit-Plan, ' ') = ''

        Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || $In-Plan-Type || ''')'

      Else

        Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || $In-Plan-Type || ''' And ' || $GEXXX912_Benefit_Plan_Alias || ' = '''  || $In-Benefit-Plan || ''')'

      End-If

      Add 1 To #GEX_RC_BEN_PLAN_ROWS

      If #GEX_RC_BEN_PLAN_ROWS = 1

        Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '(' || $Include_Condition

      Else

        Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ' Or '  || $Include_Condition

      End-If

    End-If

  End-While



  If #GEX_RC_BEN_PLAN_ROWS = 0

    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA  = '1=1'

    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA  = 'ALL'

  Else

    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA  = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ')'

    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA

  End-If

end-procedure





Begin-Procedure P140-Get-Last-Confirmed-Pay

#debug9 Show 'P140-Get-Last-Confirmed-Pay'



Begin-Select

Max(pay_end_dt) &pay_end_dt



  Let $pay_end_dt = &pay_end_dt



  Display 'Last Confirmed Pay End Date: ' Noline

  Display &pay_end_dt



From   ps_pay_calendar



Where  pay_end_dt <= $X000_WHERE_SELECT_ASOFDATE

And    pay_confirm_run = 'Y'

End-Select

End-Procedure





begin-procedure P100-Main-Routine

#debug9 Show 'P100-Main-Routine'

begin-SELECT

PC.COMPANY	() ON-BREAK  PRINT=NEVER

                               LEVEL=1



PC.DEPTID	() ON-BREAK  PRINT=NEVER

                               LEVEL=2

                               BEFORE=P240-Deptid-Before-Change

                               AFTER=P250-Deptid-After-Change



PC.EMPLID	() ON-BREAK  PRINT=NEVER

                               LEVEL=3



PC.EMPL_RCD	() ON-BREAK  PRINT=NEVER

                               LEVEL=4



PD.PLAN_TYPE	() ON-BREAK  PRINT=NEVER

                               LEVEL=5



PD.BENEFIT_PLAN	() ON-BREAK  PRINT=NEVER

                               LEVEL=6

                               AFTER=P260-BP-After-Change

!SXK 10/2199 Changed from EMP.UNION_CD

! AXC 8.3 Upgrade Union Cd now on Job

J.UNION_CD

PC.PAYGROUP

PC.NAME

PD.DED_CLASS



SUM(PD.DED_CUR) &PD.DED_CUR



  let $Data-Found-Flag = 'Y'



  let $Company     = &PC.COMPANY

  let $Deptid      = &PC.DEPTID

  let $Union       = &J.UNION_CD !AXC now on job. 8.3 Upgrade

  let $Paygroup    = &PC.PAYGROUP

  let $Name        = &PC.NAME

  let $emplid      = &PC.EMPLID

  let #emplrcd     = &PC.EMPL_RCD

  let $plantype    = &PD.PLAN_TYPE

  let $benefitplan = &PD.BENEFIT_PLAN



  !AXL 2/5/2005 New - Begin

  !if &pd.ded_class <= 'M'                  ! EE deductions

  !  Add &PD.DED_CUR To #DEDUCTION

  !else                                     ! ER deductions

  !  Add &PD.DED_CUR To #MATCH

  !end-if



  if &pd.ded_class <= 'M'		! EE deductions

     !if &PD.DED_CUR < 10						!GEX-PL126202 Kundan kumar Yeedibilli

      if &PD.DED_CUR < &GEX_RC_MATCH.GEX_MATCH_AMT			!GEX-PL126202 Kundan kumar Yeedibilli

        Add &PD.DED_CUR To #DEDUCTION	

        Add &PD.DED_CUR To #MATCH	

     else

        Add &PD.DED_CUR To #DEDUCTION	

        !Add 10 To #MATCH				! Match top off at 10 !GEX-PL126202 Kundan kumar Yeedibilli

        Add &GEX_RC_MATCH.GEX_MATCH_AMT	 To #MATCH	!GEX-PL126202 Kundan kumar Yeedibilli Match top off is defined in run control

     end-if

  else

    !do nothing	

  end-if



  !Add &PD.DED_CUR To #TOTAL

  let #TOTAL = #DEDUCTION +  #MATCH

  !AXL 2/5/2005 New - End

  

FROM   PS_JOB       J,  !AXC Joined on Job, not job_labor

       PS_PAY_CHECK       PC,

       PS_PAY_DEDUCTION   PD



WHERE  PC.PAY_END_DT      = $pay_end_dt

!SXK 10/21/1999 Begin

!  AND  EMP.EMPLID         = PC.EMPLID

!  AND  EMP.EMPL_RCD      = PC.EMPL_RCD

!SXK 10/21/1999 begin

!AXC 8.3 Upgrade changed join conditions to join on Job, not job_labor

AND    J.EMPLID    = PC.EMPLID

AND    J.EMPL_RCD = PC.EMPL_RCD



AND    J.EFFDT                =

      (SELECT MAX(EFFDT)

       FROM   PS_JOB

       WHERE  EMPLID          = J.EMPLID

       AND    EMPL_RCD       = J.EMPL_RCD

       AND    EFFDT          <= $pay_end_dt)



AND    J.EFFSEQ               =

      (SELECT MAX(EFFSEQ)

       FROM   PS_JOB

       WHERE  EMPLID          = J.EMPLID

       AND    EMPL_RCD       = J.EMPL_RCD

       AND    EFFDT           = J.EFFDT)

!SXK 10/21/1999 end



  AND  PC.COMPANY         = PD.COMPANY

  AND  PC.PAYGROUP        = PD.PAYGROUP

  AND  PC.PAY_END_DT      = PD.PAY_END_DT

  AND  PC.OFF_CYCLE       = PD.OFF_CYCLE

  AND  PC.PAGE_NUM           = PD.PAGE_NUM

  AND  PC.LINE_NUM           = PD.LINE_NUM

  AND  PC.SEPCHK          = PD.SEPCHK



  AND [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]



GROUP BY PC.COMPANY,

         PC.DEPTID,

         PC.EMPLID,

         PC.EMPL_RCD,

         PD.PLAN_TYPE,

         PD.BENEFIT_PLAN,

         J.UNION_CD,  ! AXC now on Job. 8.3 Upgrade

         PC.PAYGROUP,

         PC.NAME,

         PD.DED_CLASS



ORDER BY PC.COMPANY,

         PC.DEPTID,

         PC.EMPLID,

         PC.EMPL_RCD,

         PD.PLAN_TYPE,

         PD.BENEFIT_PLAN



end-SELECT



  if $Data-Found-Flag <> 'Y'

      new-page

	print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) CENTER

  else

 	print 'Grand Total'  		(+2,{#x000_col_totals_literal})

 	print #report_deduction 	(0,{#x000_col_ee_deduction}) EDIT 999,999,990.00  

 	print #report_match		(0,{#x000_col_er_match}) EDIT 999,999,990.00

 	print #report_hours		(0,{#x000_col_hours}) EDIT 999,999,990.00

 	print #report_total		(0,{#x000_col_total}) EDIT 999,999,990.00

  end-if

end-procedure





begin-procedure P220-Get-Hours

#debug9 show 'P220-Get-Hours'



Begin-Select

Sum(ghb.total_hrs) &ghb.total_hrs



  Let #HOURS = &ghb.total_hrs



From   ps_pay_calendar pcal,

       ps_gex_hrs_bal  ghb



Where  ghb.company            = $Company

And    ghb.paygroup           = $Paygroup

And    ghb.emplid             = $emplid

And    ghb.empl_rcd          = #emplrcd

And    ghb.plan_type          = $plantype

And    ghb.benefit_plan       = $benefitplan

And    ghb.check_dt           = pcal.check_dt



And    pcal.company           = ghb.company

And    pcal.paygroup          = ghb.paygroup

And    pcal.pay_end_dt        = $pay_end_dt

End-Select

End-Procedure





begin-procedure P230-Print-Detail-Report

#debug9 show 'P230-Print-Detail-Report'

  print $Deptid			(+1,{#x000_col_deptid})

  print $Union	 		(0,{#x000_col_union_cd})

  print $Name       		(0,{#x000_col_name},30)

  print $Emplid         	(0,{#x000_col_emplid})        !EDIT xxx-xx-xxxx

  print #deduction		(0,{#x000_col_ee_deduction})  EDIT 999,999,990.00

  print #match 			(0,{#x000_col_er_match})      EDIT 999,999,990.00

  print #hours 			(0,{#x000_col_hours})         EDIT 999,999,990.00

  print #total 			(0,{#x000_col_total})         EDIT 999,999,990.00

 

end-procedure  



begin-procedure P240-Deptid-Before-Change

#debug9 Show 'P240-Deptid-Before-Change'

  new-page

end-procedure





begin-procedure P250-Deptid-After-Change

#debug9 show 'P250-Deptid-After-Change'

  Add #DEPTID_DEDUCTION  To #Report_Deduction

  Add #DEPTID_MATCH      To #Report_Match

  Add #DEPTID_TOTAL      To #Report_Total

  Add #DEPTID_HOURS      To #Report_Hours



  print 'Store Totals' 	  	(+2,{#x000_col_totals_literal})

  print #deptid_deduction 	(0,{#x000_col_ee_deduction}) EDIT 999,999,990.00  

  print #deptid_match		(0,{#x000_col_er_match}) EDIT 999,999,990.00

  print #deptid_hours		(0,{#x000_col_hours}) EDIT 999,999,990.00

  print #deptid_total		(0,{#x000_col_total}) EDIT 999,999,990.00



  let #DEPTID_DEDUCTION = 0

  let #DEPTID_MATCH     = 0

  let #DEPTID_TOTAL     = 0

  let #DEPTID_HOURS     = 0

end-procedure





begin-procedure P260-BP-After-Change

#debug9 Show 'P260-BP-After-Change'

!TCSXKWK Code change Begins

  Move #deduction to $deduction

  Move  #match to $match

  Move #hours to $hours

  Move #total to $total

  

  !TCSXKWK Code change Ends

  Do P220-GET-HOURS

  Do P230-PRINT-DETAIL-REPORT

  Do P270-Write-Record    !TCSXKWK code for writing to excel



  Add #DEDUCTION To #DEPTID_DEDUCTION

  Add #MATCH     To #DEPTID_MATCH

  Add #TOTAL     To #DEPTID_TOTAL

  Add #HOURS     To #DEPTID_HOURS



  Let #DEDUCTION = 0

  Let #MATCH     = 0

  Let #TOTAL     = 0

  Let #HOURS     = 0

end-procedure



! tcsxkwk - code change begin to write to excel

Begin-Procedure P160-Open-File

#debug9 Show 'P160-Open-File'



 

  Let $File1 = '\\corp.gianteagle.com\common\HR\HRPS\secure\benefitsk\GEXPL005\'|| Lower($ReportID) ||'_' ||$Filedate|| '.xls'

  !Let $File1 = '\\corp.gianteagle.com\peoplesoft\PSHR\Kokila\'|| Lower($ReportID) ||'_' ||$Filedate|| '.xls'

 

  Open $File1

    As 1

    For-Writing

    Record=147:Fixed

    Status=#Filestat



  If #Filestat != 0

    Display 'Error Opening output file.  Program terminating.'

    Stop

  End-If

  Do P269-Write-Record

End-Procedure







Begin-Procedure P269-Write-Record

#debug9 Show 'P269-Write-Record'

  let $tab = chr(9)  

let $header = 'Pay End Date'|| $tab ||'Store'|| $tab || 'Union Code' || $tab || 'Name' || $tab || 'Emplid' || $tab || 'Weekly EE Deduction' || $tab || 'Weekly ER Match' || $tab || 'Weekly Total Hours' || $tab || 'Total Contribution'

   

Write 1 from $header

    Status=#Filestat



  If #Filestat != 0

    Display 'Error Writing output file.  Program terminating.'

    Stop

  End-If

  

End-Procedure



Begin-Procedure P270-Write-Record

#debug9 Show 'P270-Write-Record'

                                                      

  

  let $line = $pay_end_dt ||$tab ||$Deptid	|| $tab || $Union	|| $tab ||	$name  || $tab ||  $Emplid  || $tab ||  $deduction	 ||$tab ||$match || $tab || $hours ||$tab ||  $total 

               

               !Edit($Legal_Hours ,'9,999,999.99') || $tab ||  Edit($Legal_Contribution , '999,999,999.99')

	

  Write 1 From $line

  

 

    Status=#Filestat



  If #Filestat != 0

    Display 'Error Writing output file.  Program terminating.'

    Stop

  End-If

End-Procedure



! tcsxkwk - code change end





#include 'getcodta.sqc'  !Get-Company-Data procedure

#include 'getdptnm.sqc'  !Get-Department-Name procedure

#Include 'getdatcd.sqc'  !Get-Date-Codes procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure

#Include 'datetime.sqc'  !Routines for date and time formatting

#Include 'number.sqc'    !Routines to format numbers

#Include 'stdapi.sqc'    !Update Process API

#Include 'payrnctl.sqc'  !Get-Run-Control procedure

#Include 'getbalid.sqc'  !Get-Calendar-Year-Id

#Include 'reset.sqc'     !Reset

#include 'askaod.sqc'    !Get AsOfDate

#include 'gexxx912.sqc'  !Get plan_type, benefit_plan multiple row table

#include 'gexxx922.sqc'  !Get pay single row run control

