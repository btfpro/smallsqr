!***********************************************************************
!  GEXBN826:  Leave Employees Need to be Terminated Audit              *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXBN826 :            Leave Employees Need to be Terminated Audit    *
!                                                                      *
! Narrative:            This audit reports any employees that are in   *
!                       leave status and been out on leave for many    *
!                       days.  This report helps to terminate them.    *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           BEN_PROG_PARTIC                                *
!                       PERSONAL_DATA                                  *
!                       EMPLOYMENT                                     *
!                       JOB                                            *
!                                                                      *
! Written by:           Jim Hutchison                                  *
!                                                                      *
! Normally Run:         Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         As Of Date                                   *
!                         Multiple Benefit Programs                    *
!                         Multiple Action Reasons / #Months on Leave   *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! JDH       12/22/98    Initial Creation                               *
!                                                                      *
! JDH       12/31/98    Modified run control parameters                *
!                                                                      *
! JDH       01/18/99    Changed program to include setup01.sqc instead *
!                        of setup31.sqc                                *
!                                                                      *
! JDH       02/15/99    Fixed problem with SQRW run control logic.     *
!                                                                      *
! JDH       09/10/99    Moved $GEXBN826_INCLUDE_CRITERIA selection     *
!                        criteria to P220-Get-Leave-Begin-Row.         *
!                                                                      *
! AXL       05/08/2002  Added logic to determine the correct effdt     *
!                       for the start of the non-active empl status    *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)

#define #column1     1
#define #column2    17 
#define #column3    52
#define #column4    63
#define #column5    73
#define #column6    82
#define #column7    95
#define #column8   106
#define #column9   115

!***********************************************************************
Begin-Heading 8
!***********************************************************************
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg01.sqc'

  Do Get-Benefit-Program-Name
  Print 'Benefit Program:'     (3,1)
  Print $Benefit_Program       (+0,+1)
  Print $BenefitProgramName    (+0,+1)

  Print 'JOB'                  (+3,{#column4})
  Print 'ACCT'                 (+0,{#column5})
  Print 'LEAVE'                (+0,{#column6})
  Print 'ACTION'               (+0,{#column7})
  Print 'REG'                  (+0,{#column8})
  Print 'F/P'                  (+0,{#column9})

  Print 'EMPLID'               (+1,{#column1})
  Print 'NAME'                 (+0,{#column2})
  Print 'DEPTID'               (+0,{#column3})
  Print 'CODE'                 (+0,{#column4})
  Print 'CODE'                 (+0,{#column5})
  Print 'BEGIN DT'             (+0,{#column6})
  Print 'REASON'               (+0,{#column7})
  Print 'TEMP'                 (+0,{#column8})
  Print 'TIME'                 (+0,{#column9})

  Print '-'                    (+1,{#column1},11)    Fill
  Print '-'                    (+0,{#column2},30)    Fill
  Print '-'                    (+0,{#column3},06)    Fill
  Print '-'                    (+0,{#column4},05)    Fill
  Print '-'                    (+0,{#column5},04)    Fill
  Print '-'                    (+0,{#column6},08)    Fill
  Print '-'                    (+0,{#column7},06)    Fill
  Print '-'                    (+0,{#column8},04)    Fill
  Print '-'                    (+0,{#column9},04)    Fill
End-Heading

!***********************************************************************
Begin-Report
!***********************************************************************
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report

!***********************************************************************
Begin-Procedure P100-Initialization
!***********************************************************************
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXBN826'
  Let $ReportTitle   =   'Leave Employees Need to be Terminated'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  Let $GEXBN826_Action_Alias          = 'ACTION'		!AXL 5/8/02
  Let $GEXBN826_Action_Reason_Alias   = 'ACTION_REASON'		!AXL 5/8/02
  Let $GEXBN826_Num_Months_Alias      = 'EFFDT'			!AXL 5/8/02
  Let $GEXXX911_Benefit_Program_Alias = 'BPP.BENEFIT_PROGRAM'

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  Date-time () HH:MI:SS &timeBegan
  Date-time () MM/DD/YYYY &dateBegan
  Show 'Process Began at ' &timeBegan ' on ' &dateBegan
  Show ' '

  Do Format-DateTime($AsOfDate, $X000_Report_Heading_AsOfDate, {DEFDATE}, '', '')
  Let $X000_Order_By = 'Benefit Program, EmplID'

  Do P140-Print-Cover-Page
End-Procedure

!***********************************************************************
Begin-Procedure P110-SQRW-Run-Controls
!***********************************************************************
#debug9 Show 'P110-SQRW-Run-Controls'
  Do Ask-As-Of-Date
   
  Let $BenefitProgramString = ''''
  Display 'Enter Benefit Program or leave blank to exit.'
  While 1=1
    Input $In-Benefit-Program Maxlen=3 'Benefit Program'
    Uppercase $In-Benefit-Program
    If Rtrim($In-Benefit-Program, ' ') = ''
      Concat '''' With $BenefitProgramString
      Break
    End-If
    If $BenefitProgramString <> ''''
      Concat ''',''' With $BenefitProgramString
    End-If
    Concat $In-Benefit-Program With $BenefitProgramString
  End-While

  If $BenefitProgramString = ''''''
    Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
    Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = $GEXXX911_Benefit_Program_Alias || ' In (' || $BenefitProgramString || ')'
    Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
  End-If


  Display 'Enter Months on Leave / Action / Action Reason or leave blank to exit.'
  While 1=1
    Input $In-Leave-Months Maxlen=4 'Months on Leave'
    Let #Leave-Months = $In-Leave-Months
    Let #Leave-Months = #Leave-Months * -1 
    Move #Leave-Months To $Leave-Months 8880
    If #Leave-Months = 0
      Break
    Else
      Add 1 To #GEX_RC_GEXBN826_ROWS
      Input $In-Action Maxlen=3 'Action'
      Uppercase $In-Action
      If Rtrim($In-Action, ' ') = ''
        Let $Include_Condition = '(' || $GEXBN826_Num_Months_Alias || ' <= ADD_MONTHS(''' || $AsOfDate || ''',' || $Leave-Months  || '))'
        If #GEX_RC_GEXBN826_ROWS = 1
          Let $GEXBN826_INCLUDE_CRITERIA = '(' || $Include_Condition
        Else
          Let $GEXBN826_INCLUDE_CRITERIA = $GEXBN826_INCLUDE_CRITERIA || ' Or '  || $Include_Condition
        End-If
        Break
      Else
        Input $In-Action-Reason Maxlen=3 'Action Reason'
        Uppercase $In-Action-Reason
        If Rtrim($In-Action-Reason, ' ') = ''
          Let $Include_Condition = '(' || $GEXBN826_Action_Alias || ' = ''' || $In-Action || ''' And '
                                       || $GEXBN826_Num_Months_Alias || ' <= ADD_MONTHS(''' || $AsOfDate || ''',' || $Leave-Months  || '))'
        Else
          Let $Include_Condition = '(' || $GEXBN826_Action_Alias || ' = ''' || $In-Action || ''' And '
                                       || $GEXBN826_Action_Reason_Alias || ' = ''' || $In-Action-Reason || ''' And '
                                       || $GEXBN826_Num_Months_Alias || ' <= ADD_MONTHS(''' || $AsOfDate || ''',' || $Leave-Months  || '))'
        End-If
        If #GEX_RC_GEXBN826_ROWS = 1
          Let $GEXBN826_INCLUDE_CRITERIA = '(' || $Include_Condition
        Else
          Let $GEXBN826_INCLUDE_CRITERIA = $GEXBN826_INCLUDE_CRITERIA || ' Or '  || $Include_Condition
        End-If
      End-If
    End-If
  End-While

  If #GEX_RC_GEXBN826_ROWS = 0
    Let $GEXBN826_INCLUDE_CRITERIA = '1=1'
    Let $GEXBN826_INCLUDE_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXBN826_INCLUDE_CRITERIA = $GEXBN826_INCLUDE_CRITERIA || ')'
    Let $GEXBN826_INCLUDE_DISPLAY_CRITERIA = $GEXBN826_INCLUDE_CRITERIA
  End-If
End-Procedure

!***********************************************************************
Begin-Procedure P120-Process-Scheduler-Run-Controls
!***********************************************************************
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXRCBN1-SELECT-PARAMETERS
  Let $AsOfDate = &GEX_RC_BEN.ASOFDATE
  If Rtrim(&GEX_RC_BEN.ASOFDATE,' ') = ''
    Let $AsOfDate = $AsOfToday
  End-If

  Do GEXXX911-Select-Benefit-Program-Parameters
  Do Get-GEXBN826-Parameters
End-Procedure

!***********************************************************************
Begin-Procedure P140-Print-Cover-Page
!***********************************************************************
#debug9 Show 'P140-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = '   (+2,5)
  Print $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA        (0,+2)
  Print '$GEXBN826_INCLUDE_DISPLAY_CRITERIA = '                   (+2,5)
  Print $GEXBN826_INCLUDE_DISPLAY_CRITERIA                        (0,+2)
  Print 'As Of Date  :'                                           (+2,5)
  Print $X000_Report_Heading_AsOfDate                             (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

  Let #PAGE-COUNT = 0
  New-Page
  Let #PAGE-COUNT = 1
End-Procedure

!***********************************************************************
Begin-Procedure P200-Main-Process
!***********************************************************************
#debug9 Show 'P200-Main-Process'
Begin-Select On-Error=P290-SQL-Error-Found('P200-Main-Process')
BPP.BENEFIT_PROGRAM  ()  On-Break
                         Level=1
                         Print=Never
                         After=P240-After-BP-Break

JOB.EMPLID
JOB.EMPL_RCD
PD.NAME
JOB.DEPTID
JOB.JOBCODE
JOB.ACCT_CD
JOB.EFFDT
JOB.REG_TEMP
JOB.FULL_PART_TIME
JOB.EMPL_STATUS		!AXL 5/8/2002 Add

  Let $Benefit_Program  = &BPP.BENEFIT_PROGRAM

  Do P220-Get-Leave-Begin-Row

  If $found = 'Y'
    Let $Data-Found-Flag = 'Y'
    Add 1 To #bp_employees
    Do P230-Print-Record
  End-If

FROM   PS_PERSONAL_DATA    PD,
       PS_EMPLOYMENT       E,
       PS_JOB              JOB,
       PS_BEN_PROG_PARTIC  BPP

WHERE  BPP.EMPLID        = JOB.EMPLID
AND    BPP.EMPL_RCD     = JOB.EMPL_RCD

AND    BPP.EFFDT         =
      (SELECT MAX(EFFDT)
       FROM   PS_BEN_PROG_PARTIC
       WHERE  EMPLID     = BPP.EMPLID
       AND    EMPL_RCD  = BPP.EMPL_RCD
       AND    EFFDT     <= $AsOfDate)

AND    PD.EMPLID         = JOB.EMPLID

AND    E.EMPLID          = JOB.EMPLID
AND    E.EMPL_RCD       = JOB.EMPL_RCD

AND    JOB.EFFDT         =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID     = JOB.EMPLID
       AND    EMPL_RCD  = JOB.EMPL_RCD
       AND    EFFDT     <= $AsOfDate)

AND    JOB.EFFSEQ        =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID     = JOB.EMPLID
       AND    EMPL_RCD  = JOB.EMPL_RCD
       AND    EFFDT      = JOB.EFFDT)

AND    JOB.EMPL_STATUS  In ('L','P')

AND   [$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA]

ORDER BY BPP.BENEFIT_PROGRAM, JOB.EMPLID
End-Select
End-Procedure

!***********************************************************************
Begin-Procedure P220-Get-Leave-Begin-Row
!***********************************************************************
#debug9 Show 'P220-Get-Leave-Begin-Row'
  Let $Status-Change = 'N'
  Let $found = 'N'
Begin-Select
J.EFFDT
J.ACTION_REASON
J.EMPL_STATUS

  If (&J.EMPL_STATUS = 'L'  Or
      &J.EMPL_STATUS = 'P') And
     $Status-Change = 'N'
    Let $found = 'Y'
    Let $Leave-Begin-Date = &J.EFFDT
    Let $Action_Reason = &J.ACTION_REASON
    Let $Status-Change = 'N'
   
  Else
    Let $Status-Change = 'Y'
  End-If

FROM   PS_JOB J
!AXL 5/8/2002 - Change logic to select 1st JOB row for current leave - Begin
WHERE  J.EMPLID       = &JOB.EMPLID
AND    J.EMPL_RCD    = &JOB.EMPL_RCD
AND    J.EFFDT        = (SELECT MIN(EFFDT) FROM   PS_JOB
       		WHERE  EMPLID     = J.EMPLID
       		AND    EMPL_RCD  = J.EMPL_RCD
                AND    EMPL_STATUS = &JOB.EMPL_STATUS
	   	AND    [$GEXBN826_INCLUDE_CRITERIA]  
                AND EFFDT >				
                         (Select Max(effdt)
                          From   ps_job
                          Where  emplid     = j.emplid
                          And    empl_rcd  = j.empl_rcd
                          And    effdt     <= &JOB.EFFDT
                          AND    empl_status <> &JOB.EMPL_STATUS ) )
!AXL 5/8/2002 - Change logic to select 1st JOB row for current leave - End
AND    J.EFFSEQ       = (SELECT MAX(EFFSEQ)  FROM   PS_JOB
       		WHERE  EMPLID     = J.EMPLID
       		AND    EMPL_RCD  = J.EMPL_RCD
      		AND    EFFDT      = J.EFFDT)

End-Select
End-Procedure

!***********************************************************************
Begin-Procedure P230-Print-Record
!***********************************************************************
#debug9 Show 'P230-Print-Record'
  Do Format-DateTime($Leave-Begin-Date, $effdt, {DEFDATE}, '', '')

  Print &JOB.EMPLID             (+1,{#column1})   
  Print &PD.NAME                (+0,{#column2})
  Print &JOB.DEPTID             (+0,{#column3})
  Print &JOB.JOBCODE            (+0,{#column4})
  Print &JOB.ACCT_CD            (+0,{#column5})
  Print $effdt                  (+0,{#column6})
  Print $Action_Reason          (+0,{#column7})
  Print &JOB.REG_TEMP           (+0,{#column8})
  Print &JOB.FULL_PART_TIME     (+0,{#column9})
End-Procedure

!***********************************************************************
Begin-Procedure P240-After-BP-Break
!***********************************************************************
#debug9 Show 'P240-After-BP-Break'
  If #bp_employees > 0
    Print 'Number of Employees in Benefit Program'   (+2,{#column1})
    Print $Benefit_Program      (,+2)
    Print ':'                   (,+1)
    Print #bp_employees         (,+1) Edit 999,999,999
    Let #bp_employees = 0
    New-Page
  End-If
End-Procedure

!***********************************************************************
Begin-Procedure P290-SQL-Error-Found($Proc_Name)
!***********************************************************************
#debug9 Show 'P290-SQL-Error-Found'
  Show ' '
  Show 'SQL Error in ' $Proc_Name 
  Show 'SQL Error:  ' $_sql-error
  Stop
End-Procedure

!***********************************************************************
Begin-Procedure P300-Finalization
!***********************************************************************
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Date-time () HH:MI:SS &timeEnded
  Date-time () MM/DD/YYYY &dateEnded
  Show 'Process Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of process'
End-Procedure


#include 'askaod.sqc'    !Ask user for $AsOfDate
#include 'getcodta.sqc'  !Get-Company-Data
#include 'getpgdta.sqc'  !Get-Paygroup-Data
#include 'gexxx920.sqc'  !Get ben single row run control
#include 'gexxx911.sqc'  !Get multiple benefit program parameters
#include 'gexbn826.sqc'  !Get multiple action reasons / months parameters
#include 'getpgmnm.sqc'  !Get-Benefit-Program-Name
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
