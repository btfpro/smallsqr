!***********************************************************************
!  GEXPL026:  STORE DEMOGRAPHIC REPORT                                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 2000 Giant Eagle,Inc. All Rights Reserved              *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPL026:  		STORE DEMOGRAPHIC REPORT                       * 
!                                                                      *        
! Narrative:		This report will help Hr managers manage       *
!                       multiple stores, getgos, pharmacies, etc.      *
!                       The data listed will represent key employee    *
!                       demographic information - job, account code,   *
!                       status, rate of pay, race, birthday,           *
!                       full/part time, etc for a point of reference.  *

! #Debugx Used:	        #debug9 paragraph trace                        *
!                       #debug8,7 data returned from sql calls         *
!                                                                      *  
! SQL Tables:		gex_dept_tbl                                   *
!                       employment                                     *
!                       personal_data                                  *
!                       job                                            *
!                                                                      *  
! Written by:	        Tony Labra                                     *       
!                                                                      *
! Normally Run:	        Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!			  Company Division Code                        *
!			  Company  	                               *
!			  Paygroup  	                               *
!			  Deptid	                               *
!			  Employee Status	                       *
!			  Account Code                                 *
!			  As Of Date                                   *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS	DATE		DESCRIPTION OF THE CHANGE              *
!***********************************************************************
!  SAXL		08/03/2005	Initial Creation  		       *
!  GEX-CXB	09/19/2007	RETROFIT Removed Table PS_JOB_LABOR            *
!                    Replaced table PS_DIVERSITY with PS_DIVERS_ETHNIC *
!									Replace table PS_acct_cd_TBL with ps_gex_acct_cd_tbl *
! GEX-MXT   03/24/2008      Fixed for REHIRE DT issue in 9.0  		     *
! GEX-MXT   03/31/2008      Ethnicity changes                			     *
! ISDVASS   04/09/2008   Used $WHERE_SELECT_ASOFDATE instead of sysdate*
!                           to pull rehire_dt from the custom SQC      *
! VENDTKK   02/05/2009      Added INCLUDE GETPOSNM.SQC to pull 			   *
!                  	        		JOBTITLE from POSITION_DATA.DESCR      *
!																field instead of JOBCODE_TBL.DESCR     *
! VENDKXY   12/02/2009   Done the Changes for ITG 70470  
! HRISRXK   01/12/2010   Added code to send XLS via EMAIL		           *
! 1289792   09/26/2016   Modified code to add end quotes for psmail    *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'

!*********************************************************************
begin-report
!*********************************************************************

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  do Init-Report
  Do Openfile1     
  Do Openfile2     
  do Main

  do EOJ
  close 2
  do Stdapi-Term

end-report

!***********************************************************************
Begin-Procedure Openfile1
!***********************************************************************

   encode '<009>' into $delim
   Let $fileout = '{OUTFILE}' || 'GEXPL026.xls'   
   Open $fileout As 1 For-Writing Record=1000:Vary
   Move 'GEXPL026'			To $Report  
   encode '<012>' into $newline 
   String 'Report ID:' $Report  ' ' ' ' ' ' ' ' ' ' $ReportTitle by $delim into $gexpl026
   Write 1 from $gexpl026
   
End-Procedure
!***********************************************************************
Begin-Procedure Openfile2
!***********************************************************************

   encode '<009>' into $delim
   Let $fileout2 = '{OUTFILE}' || $PRCS_Process_Instance || 'GEXPL026.xls'   
   Open $fileout2 As 2 For-Writing Record=1000:Vary
   Move 'GEXPL026'			To $Report  
   encode '<012>' into $newline 
   String 'Report ID:' $Report  ' ' ' ' ' ' ' ' ' ' $ReportTitle by $delim into $gexpl026
   Write 2 from $gexpl026
   
End-Procedure

!***********************************************************************
begin-procedure Init-Report
!***********************************************************************
#debug9 show 'Init-Report'

  Let $GEXXX900_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
  Let $GEXXX902_Deptid_Alias   = 'J.DEPTID'
  Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'
  Let $GEXXX907_Div_CD_Alias   = 'GDT.GEX_COMPANY_DIV_CD'                    
  Let $GEXXX909_Acct_CD_Alias  = 'J.ACCT_CD'

  If $prcs_process_instance = ''
    Do SQRW-Run-Controls  
  Else
    Do Process-Scheduler-Run-Controls
  End-if

  let $ReportID = 'GEXPL026'
  let $ReportTitle = 'Store Demographic Report'
  Let $Order_By      = 'Company, DeptID, Acct Cd, Name'

  display $ReportID noline
  display ' - '     noline
  display $ReportTitle 

  date-time () hh:mi:ss &TimeBegan
  date-time () MM/DD/YYYY  &DateBegan
  show 'Report Began at ' &TimeBegan ' on '  &DateBegan

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
 
  Show '$GEXXX900_Include_Company_Criteria 	    = ' $GEXXX900_Include_Company_Display_Criteria
  Show '$GEXXX901_Include_Company_Paygroup_Criteria = ' $GEXXX901_Include_Company_Paygroup_Display_Criteria
  Show '$GEXXX902_Include_Deptid_Criteria           = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA         = ' $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA
  Show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA           = ' $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  Show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA          = ' $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA
  Show '$WHERE_SELECT_ASOFDATE                      = ' $WHERE_SELECT_ASOFDATE 
  Show '$ORDER_BY                                   = ' $ORDER_BY  

  Let #PAGE-COUNT = 0

end-procedure

!***********************************************************************
Begin-Procedure SQRW-Run-Controls 
!***********************************************************************
#debug9 show 'SQRW-Run-Controls'

  Do GEXXX950-Input-Parameters
  Let $WHERE_SELECT_ASOFDATE = $X000_WHERE_SELECT_ASOFDATE
 
End-Procedure

!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls 
!***********************************************************************
#debug9 show 'Process-Scheduler-Run-Controls'

  Do GEXRCHR1-SELECT-PARAMETERS
  Do GEXXX900-Select-Company-Parameters
  Do GEXXX901-Select-Company-Paygroup-Parameters
  Do GEXXX902-Select-Deptid-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters
  Do GEXXX907-Select-Div-CD-Parameters 
  Do GEXXX909-Select-Acct-CD-Parameters
!  Do GEXXX922-Select-Parameters

!  Let $WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.AsOfDate
 
!  If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
    Let $WHERE_SELECT_ASOFDATE = $asoftoday
!  End-If

  show '$WHERE_SELECT_ASOFDATE ' $WHERE_SELECT_ASOFDATE

End-Procedure
 
!*********************************************************************
begin-procedure Main
!*********************************************************************
#debug9 show 'Main'

  let $sql-statement = 'Main'

begin-select 
J.COMPANY	(,) On-Break
	            Print=Never
                    Level=1        
J.PAYGROUP
J.DEPTID	(,) On-Break
	            Print=Never
                    Level=2
		          After=mail-weekly-roster
		          Save=$prev_dept
                  
J.JOBCODE
J.ACCT_CD
J.EMPLID 
J.EMPL_RCD
j.empl_status
J.HOURLY_RT
J.FULL_PART_TIME
J.REG_TEMP
J.STD_HOURS
J.GEX_STUDENT_IND
J.GEX_INFLATED_HRS
J.GEX_SEASONAL_EMP
J.GEX_VOLUN_LOW_HRS
J.GRADE
J.Position_nbr		
substr(J.ELIG_CONFIG2,4,1)	&bnftlvl
j.union_cd, 		
E.HIRE_DT
E.REHIRE_DT		
E.SERVICE_DT
PD.NAME
PD.BIRTHDATE
PD.SEX
DW.ETHNIC_GROUP     
Z.DESCRSHORT
SYSDATE        		&GEXJOB_REH_ASOFDATE 	
E.CMPNY_SENIORITY_DT
E.GEX_VCN_SENIOR_DT
J.UNION_SENIORITY_DT

  !Do MAP-EMPLID !GEX_SEC_REENG 2015-04-29 Vahini Katta
  do VACATION_HOURS
  !let $emplid   =  &MAP.EMPLID !GEX_SEC_REENG 2015-04-29 Vahini Katta
  let $emplid   =  &J.EMPLID    !GEX_SEC_REENG 2015-04-29 Vahini Katta
  Let $Company 	=  &J.COMPANY
  Let $DeptID  	=  &J.Deptid
  Let $jobcode	=  &J.JOBCODE
  Let $acctcd   =  &j.acct_cd
  let $reg_temp =   &j.reg_temp

  evaluate &DW.ETHNIC_GROUP 
    when = '1'  !White
      let $race     ='W'
    when = '2'  !Black
      let $race     ='B'
    when = '3'  !Hispanic
      let $race     ='H'
    when = '4'  !Asian/Pacific Islander
      let $race     ='AS'
    when = '5'  !American Indian/Alaskan Native
      let $race     ='AI'
    when-other	
      let $race     ='NA'
  end-evaluate
	
  do get-job-title
  Let $Position_Nbr = &J.Position_nbr
  Do Get-Position-Title			 !getposnm.sqc
  	 IF $PosNameAbbrv = '' 
  		Let $JobTitleabbrv = $JobTitleabbrv
  		Let $JobTitle = $JobTitle   				
	 Else
 		Let $JobTitleabbrv = $PosNameAbbrv
 		Let $JobTitle = $PosName								
	 End-if

   If &j.full_part_time ='F'
      Let $Work_Sts ='FT'
   Else
      Let $Work_sts ='PT'
   End-If

   let $GEXJOB_REH_EMPLID = &J.emplid
   let #GEXJOB_REH_EMPLRCD = &J.EMPL_RCD
    Let $GEXJOB_REH_ASOFDATE = $WHERE_SELECT_ASOFDATE	
   do Get-Job-Rehire-Dt
   
  if isblank($GEXJOB_REH_REHIRE_DT) = 0
     let $start_dt     = $GEXJOB_REH_REHIRE_DT
  else 
     let $start_dt     = &e.hire_dt
  end-if
    
  let $start_dt_print = datetostr(strtodate($start_dt,'DD-MON-YYYY'),'MM/DD/YYYY')

  let $svcdt_print	=  datetostr(&E.SERVICE_DT,'MM/DD/YYYY')
  let $birthdt_print	=  datetostr(&PD.BIRTHDATE,'MM/DD/YYYY')

  move 'REG_TEMP' to $FieldName
  move &J.reg_temp to $Plan_Type
  move $reg_temp to $FieldValue
  do Read-Translate-Table
  let $regtemp_title = RTRIM($XlatShortName,' ')

  Add 1 to #record_count
  Add 1 to #dpt_count
  
  if $Deptid <> $priorDeptid1
    do print-header
  end-if
  
  do GET-APPOINT_DT
  
  Do Print-Detail
 
 FROM PS_JOB J,
      PS_EMPLOYMENT E,
      PS_DIVERS_ETHNIC EI,	
      PS_ETHNIC_GRP_TBL DW,	
      PS_PERSONAL_DATA PD,
      ps_gex_dept_tbl GDT,
      ps_gex_acct_cd_tbl z,	
      PS_JOBCODE_TBL JC  
  WHERE J.EMPLID    = E.EMPLID
    AND J.EMPL_RCD  = E.EMPL_RCD
    AND E.EMPLID    = PD.EMPLID
    AND JC.MANAGER_LEVEL = '99'        
    AND JC.JOBCODE = J.JOBCODE
  AND JC.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_JOBCODE_TBL
       WHERE  JOBCODE = J.JOBCODE
       AND  EFFDT  <= $WHERE_SELECT_ASOFDATE)
    AND PD.EMPLID   = EI.EMPLID 	
    AND EI.PRIMARY_INDICATOR = 'Y' 	
    AND EI.ETHNIC_GRP_CD = DW.ETHNIC_GRP_CD 
    AND EI.REG_REGION = 'USA' 
    AND J.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB
        WHERE J.EMPLID    = EMPLID
          AND J.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $WHERE_SELECT_ASOFDATE)
    AND J.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE J.EMPLID    = EMPLID
          AND J.EMPL_RCD = EMPL_RCD
          AND J.EFFDT     = EFFDT)    
    AND gdt.deptid                = j.deptid
    And   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
    AND gdt.effdt                 =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid             = j.deptid
       And    effdt             <= $WHERE_SELECT_ASOFDATE)
    AND gdt.sequence_number       =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt              = gdt.effdt)
    AND j.UNION_CD <> ' '   
    AND  Z.ACCT_CD = J.acct_cd
    AND z.acct_cd = j.acct_cd
    AND z.effdt = (SELECT MAX(z_ed.effdt) 
                     FROM ps_gex_acct_cd_tbl z_ed
                     WHERE z_ed.acct_cd = z.acct_cd
                     AND z_ed.effdt <= SYSDATE)
     AND z.eff_status = 'A'
     And   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
     And   [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
     And   [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
     And   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
     And   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
     AND dw.effdt =
            (SELECT MAX (b_ed.effdt)
               FROM ps_ethnic_grp_tbl b_ed
              WHERE dw.setid = b_ed.setid
                AND dw.ethnic_grp_cd = b_ed.ethnic_grp_cd
                AND b_ed.effdt <= SYSDATE)
 
Order by j.company, j.deptid, Z.DESCRSHORT, pd.name
  
end-select
  
end-procedure

!************************************************************************
!BEGIN-PROCEDURE MAP-EMPLID
!************************************************************************
!#debug9 show 'MAP-EMPLID'

!BEGIN-Select

!MAP.SSN
!MAP.EMPLID
!MAP.EMPL_RCD

!FROM PS_GEX_EMPLID_MAPP MAP
!Where MAP.ssn	   = &j.EMPLID
!  and MAP.empl_rcd = &j.EMPL_RCD

!END-SELECT

!END-PROCEDURE GET-USERID

!************************************************************************
BEGIN-PROCEDURE GET-APPOINT_DT
!************************************************************************
#debug9 show 'GET-APPOINT_DT'

let $HP.APPOINT_END_DT = ''

BEGIN-Select

HP.APPOINT_END_DT

   let $HP.APPOINT_END_DT = &HP.APPOINT_END_DT

FROM PS_PER_ORG_ASG_HP HP
Where HP.EMPL_RCD = &j.EMPL_RCD
    and HP.EMPLID = &j.EMPLID

END-SELECT

END-PROCEDURE GET-USERID

!************************************************************************
BEGIN-PROCEDURE VACATION_HOURS
!************************************************************************
#debug9 show 'VACATION_HOURS'

let $found_hours = 'N'

BEGIN-Select

vachr.GEX_ENTITLE_HOURS
vachr.GEX_TAKEN_HOURS
vachr.GEX_REMAIN_HOURS
vachr.GEX_PERS_HOURS
vachr.GEX_PREV_HOURS  !isdvsyh added for itg 83887

   let $found_hours = 'Y'

FROM sysadm.PS_GEX_VACATION_HR VACHR
Where VACHR.EMPLID   = &j.EMPLID
  and VACHR.EMPL_RCD = &j.EMPL_RCD

END-SELECT

If $found_hours = 'Y'
  let $GEX_ENTITLE_HOURS = &vachr.GEX_ENTITLE_HOURS
  !let $GEX_TAKEN_HOURS = &vachr.GEX_TAKEN_HOURS  commented by isdvsyh for itg 83887
  let $GEX_TAKEN_HOURS =(&vachr.GEX_TAKEN_HOURS + &vachr.GEX_PREV_HOURS) !isdvsyh added for itg 83887
  let $GEX_REMAIN_HOURS = &vachr.GEX_REMAIN_HOURS
  let $GEX_PERS_HOURS = &vachr.GEX_PERS_HOURS
else
  let $GEX_ENTITLE_HOURS = 0 
  let $GEX_TAKEN_HOURS = 0 
  let $GEX_REMAIN_HOURS = 0 
  let $GEX_PERS_HOURS = 0 
end-if

END-PROCEDURE VACATION_HOURS

!***********************************************************************
begin-procedure Print-Header
!***********************************************************************
#debug9 show 'Print-Header'
 
  do Get-Department-Name
  Let $deptid1= $deptid
  Write 1 from $newline
  Write 2 from $newline
  let $Deptid1 = '="' || edit($Deptid1,'0000') || '"'
  string 'Deptid :' $Deptid1 BY $DELIM INTO $dept
  WRITE 1 FROM $dept
  WRITE 2 FROM $dept
  move $Deptid to $priorDeptid1
  String  'EMPLOYEE NAME' 'EMPLID' 'SRV DATE' 'EMPL STS' 'ACCT CD NAME' 'JOB TITLE' 'REG TEMP' 'WRK STS' 'STD HRS' 
  'BNF LVL' 'SAL GRADE' 'HOURL RT' 'STU IND' 'INFL HRS' 'SNL EMP' 'VOL LOW HRS' 'UNION CD' 'BIRTH DATE' 'RACE' 'SEX'
  'FIRST HIRE DATE' 'LAST HIRE DATE' 'BENEFITS SENIORITY DATE' 'COMPANY SENIORITY DATE' 'VACATION SENIORITY DATE'
  'UNION SENIORITY DATE' 'PAYROLL ELIGIBILITY DATE' 'ENTITLEMENT VAC HOURS' 'TAKEN VAC HOURS' 'REMAINING VAC HOURS' 'PERSONAL HOURS' by $delim into $gexpl026  
  Write 1 from $gexpl026
  Write 1 from $newline
  Write 2 from $gexpl026
  Write 2 from $newline

End-Procedure
!***********************************************************************
begin-procedure Print-Detail
!***********************************************************************
#debug9 show 'Print-Detail'
 
  STRING &pd.name $emplid &E.SERVICE_DT &j.empl_status &Z.DESCRSHORT	$JobTitle $regtemp_title $work_Sts &j.std_hours &bnftlvl 
  &j.grade &j.hourly_rt	&j.gex_student_ind &J.GEX_INFLATED_HRS &J.GEX_SEASONAL_EMP &J.GEX_VOLUN_LOW_HRS &j.union_cd &PD.BIRTHDATE	
  $race &pd.sex	&E.HIRE_DT &E.REHIRE_DT	&E.SERVICE_DT &E.CMPNY_SENIORITY_DT &E.GEX_VCN_SENIOR_DT $HP.APPOINT_END_DT &J.UNION_SENIORITY_DT $GEX_ENTITLE_HOURS $GEX_TAKEN_HOURS $GEX_REMAIN_HOURS $GEX_PERS_HOURS BY $DELIM INTO $GEXPL026
   WRITE 1 FROM $GEXPL026
   WRITE 2 FROM $GEXPL026

End-Procedure

!***********************************************************************
!***********************************************************************
begin-procedure  mail-weekly-roster
#debug9 display 'mail-weekly-roster'

close 1

let $to_list = ' '

Begin-Select

GEX_EMAIL_ADDR1.DEPTID
GEX_EMAIL_ADDR1.EMAILID

   do create-to-list

From  SYSADM.PS_GEX_EMAIL_ADDR GEX_EMAIL_ADDR1
Where GEX_EMAIL_ADDR1.DEPTID      = $prev_dept
And  RTRIM(GEX_EMAIL_ADDR1.GEX_EMAILTYPE, ' ') in ('VCTN','ALL')

End-Select

do send-it 

do openfile1
let #dpt_count = 0 

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure  create-to-list
#debug9 display 'create-to-list'

let $to_list = $to_list || &GEX_EMAIL_ADDR1.EMAILID || ';'

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure  send-it
#debug9 display 'send-it'

let $TEXT_ID = $ReportID || '_SUBJ' 
do weekly-roster-verbiage
let $subject = &A.HR_SSTEXT_TEXT || $DEPTID

let $enter = chr(10)

let $TEXT_ID = $ReportID || '_BODY' 
do weekly-roster-verbiage

let $body_txt = &A.HR_SSTEXT_TEXT 

     !1289792 - 9/29/2016 - Ptools and OS Upgrade - Begin
     !let $mail-cmd = 'psmail -TO"'||$to_list||'" -SUBJECT"'||$subject||'" -BODY"'||$body_txt||'" -FILE"'||$fileout
     let $mail-cmd = 'psmail -TO"'||$to_list||'" -SUBJECT"'||$subject||'" -BODY"'||$body_txt||'" -FILE"'||$fileout||'"'
     !1289792 - 9/29/2016 - Ptools and OS Upgrade - End

CALL SYSTEM USING $mail-cmd #Status

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure  weekly-roster-verbiage
#debug9 display 'weekly-roster-verbiage'

Begin-Select
A.HR_SSTEXT_TEXT

 from ps_HR_SSTEXT_TEXT A 
 WHERE A.OBJECTOWNERID = 'HHR' 
 AND A.HR_SSTEXT_SUB_ID = 'GEX' 
 AND A.TEXT_ID = $TEXT_ID 
 AND A.EFFDT = (SELECT MAX(B.EFFDT) FROM PS_HR_SSTEXT_EFFDT B 
 WHERE B.OBJECTOWNERID = A.OBJECTOWNERID 
 AND B.HR_SSTEXT_SUB_ID = A.HR_SSTEXT_SUB_ID 
 AND B.TEXT_ID = A.TEXT_ID AND B.EFFDT <= SYSDATE)

End-Select
 
end-procedure

!***********************************************************************
Begin-Procedure EOJ
!***********************************************************************

  if #record_count = 0
    print 'No Data Selected This Run'   (25,) Center
  end-if
 
  Do Reset			

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'

End-Procedure

!***********************************************************************
begin-procedure Reset
!***********************************************************************
  move 'Y' to $End_of_Report
  if #MsgFlagW
     print $MsgTextW (+2,1)
  end-if
end-procedure

#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API

#include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'getjobtl.sqc'  !Get Job Title
#Include 'readxlat.sqc'  !Get translate Values

#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx921.sqc'  !Get HR single row run control
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 
#include 'gexxx950.sqc'  !Get SQRW run controls
#include 'gexrehdt.sqc'	 !GEX-MXT 03/24/2008 Fixed for REHIRE DT
#include 'getposnm.sqc'  !Get-Position-Title    VENDTKK ITG#56786   5-Feb-2009  


