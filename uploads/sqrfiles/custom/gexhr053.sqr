!***********************************************************************
! gexhr053:   UPDATE MANAGEMENT HIERARCHY TABLE REPORT                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
! gexhr053:             UPDATE MANAGEMENT HIERARCHY TABLE REPORT       *
!                                                                      *
! Narrative:            This program prompts for emplid that will be   *
!                       replaced and emplid that replaces and update   *
!                       the management hierarchy in all the departments*
!                       (Table GEX_MGMT_REPORT)                        *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!		      	#debug8 key variable values                    *
!			      #debug7 data returned from sql calls     *
!                                                                      *
! SQL Tables:           PS_PERSONAL_DATA                               *
!                       PS_GEX_MGMT_REPORT                             *
!                                                                      *
! Written by:           SXK                                            *
!                                                                      *
! Normally run:                                                        *
!                                                                      *
! Entered Run                                                          *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                                                                      *
!                                                                      *
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *
!***********************************************************************
!  gexhr053  SXK      10/27/1997     INITIAL CREATION                  *
!                                                                      *
!            JNB      04/19/1998     ADDED RUN CONTROL LOGIC           *
!                                                                      *
!            SXK      06/22/1998     Deleted Run Control Logic         *
!                                                                      *
!            AXL      01/25/2001     Updated column names from         *
!                                    PS_GEX_MGMT_REPORT table.         *
!***********************************************************************
!selection criteria
#define #x000_col_selection_criteria_a 	02
#define #x000_col_selection_criteria_b 	05

!line 1
#define #x000_col_tran#  		01
#define #x000_col_ssn   		13
#define #x000_col_message		21


#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 

!#Include 'setup07.sqc'
!***********************************************************************
begin-heading 15
!***********************************************************************

#debug9 show 'begin-heading'

 #Include 'stdhdg01.sqc'

  print '-' (+2,1,160) fill

  print  'TRAN #'       (+3,{#x000_col_tran#})   bold 
  print  'SSN'          (0,{#x000_col_ssn})      bold  
  print  'MESSAGE'      (0,{#x000_col_message})  bold

  print '-' (+1,1,160) fill
   
end-heading

begin-report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  show 'asoftoday=' $asoftoday  
  do stdapi-init
  do p010-Init-Variables 
  do Get-Calendar-Year-Id
 

  do Report
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term
  do Reset
end-report

!***********************************************************************
begin-procedure p010-Init-Variables
!***********************************************************************

#debug9 show 'P010-Init-Variables'

  let $x000_new_page_flag = 'N'
  
  let $ReportID           = 'gexhr053'
  let $ReportTitle        = 'MANAGEMENT HIERARCHY TABLE REPORT'
  let $Country            = 'USA'

  show '$ReportID= '     $ReportID
  show '$ReportTitle = ' $ReportTitle   

  Do GEXXX951-Select-Oracle-Instance

  if $Prcs_process_instance = ''
     do P015-get-input
  else

!get parameters from single row run control record 
      Do GEXXX922-Select-Parameters

      let $X000_WHERE_SELECT_FROM_EMPLID = $GEX_RC_PAY.FROM_EMPLID
      let $X000_WHERE_SELECT_THRU_EMPLID = $GEX_RC_PAY.THRU_EMPLID

  end-if

     show 'OLD EMPLID                                        ='  $X000_WHERE_SELECT_FROM_EMPLID 
     show 'NEW EMPLID                                        ='  $X000_WHERE_SELECT_THRU_EMPLID 

	print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
	print '$Prcs_OPRID          ='                              (+2,{#x000_col_selection_criteria_b})
	print $Prcs_OPRID                                           (0,+2)
	print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
	print $PRCS_RUN_CNTL_ID                                     (0,+2)

      print 'OLD EMPLID                                      ='   (+1,{#x000_col_selection_criteria_b})
	print  $X000_WHERE_SELECT_FROM_EMPLID                          (0,+2)
      print 'NEW EMPLID                                      ='   (+1,{#x000_col_selection_criteria_b})
	print  $X000_WHERE_SELECT_THRU_EMPLID                          (0,+2)

 	let #page-count = 0
	NEW-PAGE
	LET #PAGE-COUNT = 1

end-procedure

!***********************************************************************
begin-procedure P015-get-input
!***********************************************************************
#debug9 show 'P015-get-input'

   input $X000_WHERE_SELECT_FROM_EMPLID 'Enter Old Emplid to update' type=char
   input $X000_WHERE_SELECT_THRU_EMPLID 'Enter New Emplid to update' type=char

end-procedure

begin-procedure Report

date-time () hh:mi:ss &timeBegan
display 'Report Began: ' noline
display &timeBegan

 move 'N' to $Errorfound


 do process-employee-data

 if $sev-error = 'Y'
    goto report-exit
 end-if
  
Report-Exit:


  date-time () hh:mi:ss &timeProcess
  display #InputTran 99999 noline
  if #inputtran > 1
     display ' Departmets got updated: ' noline
  else
     display ' Department got updated: ' noline
  end-if
  display &timeProcess

end-procedure


begin-procedure process-employee-data

move 'N' to $found
move 'N' to $empl_found

let #inputtran = 0
let #i = 1

while #i <= 6
 evaluate #i
   when = 1
      move 'GEX_CEO' to $column
   when = 2
     ! AXL 1/25/2001 - New column names - Begin
      !move 'GEX_SVP' to $column
      move 'GEX_EVP' to $column
   when = 3
      !move 'GEX_VP'  to $column
      move 'GEX_SVPVP'  to $column
     ! AXL 1/25/2001 - New column names - End
   when = 4
      move 'GEX_DIR' to $column
   when = 5
      move 'GEX_MGR' to $column
   when = 6
      move 'GEX_SUP' to $column
 end-evaluate

 do find-column-matches-emplid
  
 add 1 to #i

end-while
if $empl_found = 'N'
   display 'EmplID that will be overwritten is not found'
end-if

end-procedure

begin-procedure find-column-matches-emplid

move 'N' to $found

!display $column
!display $old_emplid
!display $new_emplid

begin-select on-error=P900-SQL-Error-Found('find-column-matches-emplid')
'A'
   move 'Y' to $found
   move 'Y' to $empl_found
   do update-all-dept

FROM PS_GEX_MGMT_REPORT 
WHERE [$column] = $X000_WHERE_SELECT_FROM_EMPLID
end-select

end-procedure

begin-procedure update-all-dept

move 'N' to $errorfound

begin-sql ON-ERROR=P900-SQL-Error-Found('Update-all-dept')
UPDATE PS_GEX_MGMT_REPORT 
   SET [$column] =  $X000_WHERE_SELECT_THRU_EMPLID 
WHERE [$column] =   $X000_WHERE_SELECT_FROM_EMPLID     
END-sql

add #sql-count to #inputtran

end-procedure

begin-procedure validate-emplid

move 'Y' to $error-found

begin-select on-error=P900-SQL-Error-Found('validate-emplid')
'B'

   move 'N' to $error-found
from ps_personal_data
where emplid =  $X000_WHERE_SELECT_THRU_EMPLID 
end-select

end-procedure

!*********************************************************************
!Displays the error messages and stops execution
!*********************************************************************
 
begin-procedure P900-SQL-Error-Found($Proc_Name) 
  do P990-error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 

  STOP

end-procedure


!***********************************************************************
begin-procedure P990-Error-Found
!***********************************************************************

  move 'Y' to $ErrorFound
  do Format-Number(#Inputrec, $out, '99999')
  print $out (+1,1)

  let $EmplId_1st3 = substr($EmplId,1,3)
  let $EmplId_mid2 = substr($EmplId,4,2)
  let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  print $EmplID11 (,8)
end-procedure

#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'gexxx951.sqc'  !Select Oracle Instance
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 
