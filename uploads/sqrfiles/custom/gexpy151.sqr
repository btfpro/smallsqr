!***********************************************************************
!  GEXPY151:    Annual Actuary Study SQR for Workers Comp              *
!***********************************************************************
!This SQR will create a report of dollar totals for all locations using*
!the date inputed. This will total BY LOCATION, not by employee.       *
!                           MIDWEST REPORT                             *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1988-1997 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
!  $Date::                                                             *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS	DATE		DESCRIPTION OF THE CHANGE              *
!***********************************************************************
! ISDVNPK	03/11/2011	Initial Creation 	               *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup01.sqc'

#define #column1     1
#define #column2    29
#define #column3    42
#define #column4    66
#define #column5    90

!***********************************************************************
begin-heading 7
!***********************************************************************
#Include 'stdhdg01.sqc'

  print ' CURRENT WAGES'        (+2,{#column3})
  print ' CURRENT HOURS'        (0,{#column4})
  print 'EMPLOYEE COUNT'        (0,{#column5})
  print '-'                     (+1,{#column3},14)  FILL
  print '-'                     (0,{#column4},14)   FILL
  print '-'                     (0,{#column5},14)   FILL
  
end-heading
!***********************************************************************
!***********************************************************************
begin-report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime  
  do P100-Init-Report
  do Open-File			
  do P200-Process-Header


  let $Include_Department_Criteria = 'PE.DEPTID LIKE ''C%'''
  let $Include_Business_Unit_Criteria = 'AND PE.BUSINESS_UNIT NOT IN (''00004'',''00002'',''00007'',''00024'',''00023'',''05300'',''05301'',''00026'')'
  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD NOT IN (''IND'')'
  let $Div_Name = 'Office'

  do P200-Process
  
  do Print-AllState-Totals
  
  let $Include_Department_Criteria = 'PE.DEPTID NOT LIKE ''3%'''
  let $Include_Business_Unit_Criteria = ' '
  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD IN (''CLE'',''COL'',''GEM'',''MDR'',''RMC'',''MIS'',''CP3'')'
  let $Div_Name = 'Retail'

  do P200-Process
  
  do Print-AllState-Totals
  
  let $Include_Department_Criteria = 'PE.DEPTID LIKE ''3%'''
  let $Include_Business_Unit_Criteria = ' '
  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD NOT IN (''IND'')'
  let $Div_Name = 'GetGo'

  do P200-Process
  
  do Print-AllState-Totals
  
  let $Include_Department_Criteria = 'PE.DEPTID IN (''059'',''W003'')'
  let $Include_Business_Unit_Criteria = ' '
  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD NOT IN (''IND'')'
  let $Div_Name = 'HBC'

  do P200-Process
  
  do Print-AllState-Totals

  let $Include_Department_Criteria = 'PE.DEPTID = ''W001'''
!  let $Include_Department_Criteria = '( PE.DEPTID = ''W001'' AND PE.ACCT_CD NOT IN (''805'',''806''))'
!  let $Include_Department_Criteria = '(( PE.DEPTID = ''W001'' AND PE.ACCT_CD NOT IN (''805'',''806'')) OR PE.DEPTID IN (''C070'',''C101'',''C103'',''C109'',''C505'',''C508'',''C509''))'
  let $Include_Business_Unit_Criteria = ' '
  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD NOT IN (''IND'')'
  let $Div_Name = 'BRM'

  do P200-Process
  
  do Print-AllState-Totals

!  let $Include_Department_Criteria = '(PE.DEPTID = ''W001'' AND PE.ACCT_CD IN (''805'',''806''))'
!  let $Include_Department_Criteria = '( PE.DEPTID = ''C106'' OR (PE.DEPTID = ''W001'' AND PE.ACCT_CD IN (''805'',''806'')))'
!  let $Include_Business_Unit_Criteria = ' '
!  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD NOT IN (''IND'')'
!  let $Div_Name = 'BRM Drivers'

!  do P200-Process
  
!  do Print-AllState-Totals

  let $Include_Department_Criteria = 'PE.DEPTID = ''W002'''
!  let $Include_Department_Criteria = '( PE.DEPTID = ''W002'' AND PE.ACCT_CD NOT IN (''805'',''806'')) '
!  let $Include_Department_Criteria = '( PE.DEPTID IN (''C046'',''C048'',''C060'',''C067'',''C083'') OR ( PE.DEPTID = ''W002'' AND PE.ACCT_CD NOT IN (''805'',''806''))) '
  let $Include_Business_Unit_Criteria = ' '
  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD NOT IN (''IND'')'
  let $Div_Name = 'OK Grocery Dry'

  do P200-Process
  
  do Print-AllState-Totals

!  let $Include_Department_Criteria = '( PE.DEPTID IN (''W002'',''W007'') AND PE.ACCT_CD IN (''805'',''806''))'
!  let $Include_Department_Criteria = '(( PE.DEPTID IN (''W002'',''W007'') AND PE.ACCT_CD IN (''805'',''806'')) OR PE.DEPTID IN (''C129'',''C143'',''C121'',''C062''))'
!  let $Include_Business_Unit_Criteria = ' '
!  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD NOT IN (''IND'')'
!  let $Div_Name = 'OK Grocery Drivers'

!  do P200-Process
  
!  do Print-AllState-Totals

  let $Include_Department_Criteria = 'PE.DEPTID = ''W007'''
!  let $Include_Department_Criteria = '(PE.DEPTID IN (''W007'') AND PE.ACCT_CD IN (''805'',''806''))'
!  let $Include_Department_Criteria = '(( PE.ACCT_CD NOT IN (''805'',''806'') AND PE.DEPTID = ''W007'') OR PE.DEPTID IN (''C042'',''C045'',''C065'',''C102''))'
  let $Include_Business_Unit_Criteria = ' '
  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD NOT IN (''IND'')'
  let $Div_Name = 'OK Grocery Perishable'

  do P200-Process
  
  do Print-AllState-Totals

  let $Include_Department_Criteria = 'PE.DEPTID = ''W009'''
!  let $Include_Department_Criteria = 'PE.DEPTID IN (''W009'',''C490'',''C550'',''C507'') '
  let $Include_Business_Unit_Criteria = ' '
  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD NOT IN (''IND'')'
  let $Div_Name = 'Richmond Road Perishable'

  do P200-Process
  
  do Print-AllState-Totals

  let $Include_Department_Criteria = 'PE.DEPTID = ''W010'''
!  let $Include_Department_Criteria = 'PE.DEPTID IN (''W010'',''C755'',''C510'',''C506'',''C410'',''C409'')'
  let $Include_Business_Unit_Criteria = ' '
  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD NOT IN (''IND'')'
  let $Div_Name = 'Richmond Road Grocery'

  do P200-Process
  
  do Print-AllState-Totals

  let $Include_Department_Criteria = 'PE.DEPTID = ''W011'''
!  let $Include_Department_Criteria = '(PE.DEPTID IN (''W011'') AND PE.ACCT_CD IN (''805'',''806''))'
!  let $Include_Department_Criteria = '(PE.DEPTID IN (''W011'',''C811'') AND PE.ACCT_CD IN (''805'',''806''))'
  let $Include_Business_Unit_Criteria = ' '
  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD NOT IN (''IND'')'
  let $Div_Name = 'Richmond Road Drivers'

  do P200-Process
  
  do Print-AllState-Totals

  let $Include_Department_Criteria ='PE.DEPTID = ''W004'''
!  let $Include_Department_Criteria ='( PE.DEPTID = ''W004'' AND PE.ACCT_CD NOT IN (''805'',''806'')) '
!  let $Include_Department_Criteria = '(( PE.ACCT_CD NOT IN (''805'',''806'') AND PE.DEPTID = ''W004'') OR PE.DEPTID = ''C066'') '
  let $Include_Business_Unit_Criteria = ' '
  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD NOT IN (''IND'')'
  let $Div_Name = 'Tamarkin Warehouse'

  do P200-Process
  
  do Print-AllState-Totals

!  let $Include_Department_Criteria = '( PE.DEPTID = ''W004'' AND PE.ACCT_CD IN (''805'',''806'')) '
!  let $Include_Department_Criteria = '( PE.DEPTID = ''C105'' OR ( PE.DEPTID = ''W004'' AND PE.ACCT_CD IN (''805'',''806''))) '
!  let $Include_Business_Unit_Criteria = ' '
!  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD NOT IN (''IND'')'
!  let $Div_Name = 'Tamarkin Drivers'

!  do P200-Process
  
!  do Print-AllState-Totals

!  let $Include_Department_Criteria = '( PE.DEPTID IN (''C017'',''C098'') OR ( PE.PAYGROUP IN (''PHM'',''PH2'',''PH3'',''PH4'') AND PE.ACCT_CD IN (''008''))) '
  let $Include_Department_Criteria = 'PE.PAYGROUP IN (''PHM'',''PH2'',''PH3'',''PH4'') AND PE.ACCT_CD IN (''008'')'
  let $Include_Business_Unit_Criteria = ' '
  let $INCLUDE_DIV_CD_CRITERIA = 'GDT.GEX_COMPANY_DIV_CD IN (''GPH'',''RPH'')'
  let $Div_Name = 'Ind Pharmacy'

  do P200-Process
  
  do Print-AllState-Totals

  do P200-Process-End
  
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do EOJ-Process
  do Reset
  do Stdapi-Term
  
end-report
!***********************************************************************
begin-procedure P100-Init-Report
!***********************************************************************
#debug9 Show 'P100-Init-Report'

  do Stdapi-Init

  Let $GEXERNC3_Erncd_Alias    = 'POE.ERNCD'
  do Get-Productive-Erncds 
  
 If isnull($prcs_process_instance)
   Do SQRW-Run-Controls
  else
   Do Process-Scheduler-Run-Controls
  #debugx show '<' $fromdate '><' $thrudate '>'
 end-if

  show '$Prcs_Run_Cntl_ID ' $Prcs_Run_Cntl_ID
  
  let $ReportID = 'MIDWEST REPORT'
  
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  move 'MIDWEST REPORT' to $ReportTitle

  Do Format-DateTime($FromDate, $From_Date, {DEFDATE}, '', '')
  Do Format-DateTime($ThruDate, $Thru_Date, {DEFDATE}, '', '')

  Do P130-Print-Cover-Page

end-procedure


!***********************************************************************
Begin-Procedure SQRW-Run-Controls
!***********************************************************************
#debug9 Show 'SQRW-Run-Controls'

! let $file_path = '\\riva\hrdev\psoft\working\'
  Display 'Enter File Path  (\\nt5\directory\subdir\)'
  While 1=1
    Input $file_path Maxlen=50 'File Path'
    If Rtrim($file_path, ' ') = ''
      Break
    End-If
  End-While
  
  input $Answer maxlen=1 'Include State Totals?'
  uppercase $Answer

  Do Ask-From-Thru-Date

End-Procedure

!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls
!***********************************************************************
#debug9 Show 'Process-Scheduler-Run-Controls'
 
  Do GEXXX922-Select-Parameters

  Let $FromDate  = $GEX_RC_PAY.FromDate
  Let $ThruDate  = $GEX_RC_PAY.ThruDate
  let $file_path = lower($GEX_RC_PAY.GEX_FILE_LOCATION)		
  
  let $Answer    =  $GEX_RC_PAY.YES_NO_FLAG
  
   if $Answer <> 'N'
    let $Answer ='Y'
   end-if

End-Procedure


!***********************************************************************
begin-procedure Open-File
!***********************************************************************

  !let $file_path = '\\riva\hrdev\psoft\working\'
  
  let $file1 = $file_path || lower($ReportID) || $FromDate || 'thru'|| $ThruDate  || '.csv'
  display 'file1 <' noline
  display $file1 noline

  open $file1 as 1 for-writing
        record=120:fixed	
        status=#filestat
  if #filestat < 0
     display 'Open failed for file <' noline
     display $file1 noline
     display '>'
     stop
  end-if

end-procedure
!***********************************************************************
begin-procedure P130-Print-Cover-Page
!***********************************************************************
#debug9 Show 'P130-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)
  Print 'From Date:'                        (+2,5)
  Print $From_Date                          (0,+2)
  Print 'Thru Date:'                        (+1,5)
  Print $Thru_Date                          (0,+2)

  Let #PAGE-COUNT = 0
  NEW-PAGE
  
End-Procedure
!***********************************************************************
Begin-Procedure P200-Process
!***********************************************************************
#debug9 Show 'P200-Process'
#debug9 Show 'Processing: '$Include_Department_Criteria
#debug9 Show 'Processing: '$Include_Business_Unit_Criteria
#debug9 Show 'Processing: '$INCLUDE_DIV_CD_CRITERIA
#debug9 Show 'Processing: '$Div_Name
  move 'N' to $rowfound
  
Begin-Select ON-ERROR=SQL-Error-Found('P200-Process')
                      
LOC.STATE          ()  on-break
                      level=1
                      after=Print-State-Totals
                      save=$save_state
                      print=never
GDT.GEX_COMPANY_DIV_CD         ()  on-break
                      level=2
                      after=Print-DIVISION-Totals
                      save=$save_Division
                      print=never
PE.DEPTID         ()  on-break
                      level=3
                      after=Print-Deptid-Totals
                      save=$save_deptid
                      print=never
PE.COMPANY
PE.PAYGROUP
PE.PAY_END_DT
PE.OFF_CYCLE
PE.PAGE_NUM
PE.LINE_NUM
PE.ADDL_NBR
PE.SEPCHK
PE.ACCT_CD        ()  on-break
                      level=4
                      after=P230-Print-Acct-Cd-Totals
                      save=$save_acct_cd
                      print=never
                      
SUM(PE.REG_HRS   + PE.OT_HRS         + PE.REG_EARN_HRS)  &hours
SUM(PE.REG_EARNS + PE.REG_HRLY_EARNS + PE.OT_HRLY_EARNS) &earnings

  move 'Y' to $rowfound
  Add &hours          To #state_tot_hrs
  Add &earnings       To #state_tot_earns
  
  let $COMPANY    = &PE.COMPANY
  let $PAYGROUP   = &PE.PAYGROUP
  let $PAY_END_DT = &PE.PAY_END_DT
  let $OFF_CYCLE  = &PE.OFF_CYCLE
  let $PAGE_NUM   = &PE.PAGE_NUM
  let $LINE_NUM   = &PE.LINE_NUM
  let $ADDL_NBR   = &PE.ADDL_NBR
  let $SEPCHK     = &PE.SEPCHK   
  let $ACCT_CD    = &PE.ACCT_CD                   

  do P210-Get-Other-Earnings

  Add &other_hours    To #state_tot_hrs
  Add &other_earnings To #state_tot_earns

  Add &hours          To #acct_tot_hrs
  Add &earnings       To #acct_tot_earns
  Add &other_hours    To #acct_tot_hrs
  Add &other_earnings To #acct_tot_earns

  
  Evaluate &PE.PAYGROUP
    When = 'RET'
    When = 'PHM'
    When = 'RE2'
    When = 'PH2'
    When = 'RE3'
    When = 'PH3'
    When = 'RE4'
    When = 'PH4'
         let $Non_Retail_Flag='N'
         break
    When-Other
         let $Non_Retail_Flag='Y'
  End-Evaluate

FROM   PS_PAY_EARNINGS PE ,
       PS_GEX_DEPT_TBL  GDT,
       PS_DEPT_TBL DPT,
       PS_LOCATION_TBL LOC
WHERE  PE.PAY_END_DT  BETWEEN $FromDate AND $ThruDate
AND    PE.OK_TO_PAY         = 'Y'
AND    PE.SINGLE_CHECK_USE IN ('C','N')
AND    PE.PAY_LINE_STATUS  IN ('C','F')

And   [$Include_Department_Criteria]
[$Include_Business_Unit_Criteria]

AND    PE.DEPTID  = GDT.DEPTID
AND    GDT.EFFDT =
      (Select Max(effdt) From  ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt             <= $ThruDate)
AND    GDT.sequence_number       =
      (Select Max(sequence_number) From ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt              = gdt.effdt)
AND [$INCLUDE_DIV_CD_CRITERIA]
AND DPT.DEPTID = GDT.DEPTID 
AND DPT.EFFDT = 
   (SELECT MAX(D_ED.EFFDT) FROM PS_DEPT_TBL D_ED 
    WHERE DPT.SETID = D_ED.SETID 
     AND DPT.DEPTID = D_ED.DEPTID 
     AND D_ED.EFFDT <= SYSDATE) 
AND DPT.SETID = LOC.SETID 
AND LOC.LOCATION = DPT.LOCATION 
AND LOC.EFFDT = 
        (SELECT MAX(E_ED.EFFDT) FROM PS_LOCATION_TBL E_ED 
        WHERE LOC.SETID = E_ED.SETID 
          AND LOC.LOCATION = E_ED.LOCATION 
          AND E_ED.EFFDT <= SYSDATE) 
!AND GDT.GEX_COMPANY_DIV_CD = 'COC'

GROUP BY LOC.STATE,
         GDT.GEX_COMPANY_DIV_CD,
         PE.DEPTID,
         PE.ACCT_CD,
         PE.COMPANY,
         PE.PAYGROUP,
         PE.PAY_END_DT,
         PE.OFF_CYCLE,
         PE.PAGE_NUM,
         PE.LINE_NUM,
         PE.ADDL_NBR,
         PE.SEPCHK
ORDER BY LOC.STATE,
         GDT.GEX_COMPANY_DIV_CD,
         PE.DEPTID,
         PE.ACCT_CD

End-Select

end-procedure

!***********************************************************************
Begin-Procedure P200-Process-Header
!***********************************************************************
#debug9 Show 'P200-Process-Header'

  
    write 1 from         '"':1
                         'Division':8
                         '","':3
                         'Store':5
                         '","':3
                         'Store Name':30		
                         '","':3
                         'Dept#':5		
                         '","':3
                         'Total Earns':12
                         '","':3
                         'Total Hours':12
                         '","':3
                         'TM Count':8
                         '"':1	


end-procedure

!***********************************************************************
Begin-Procedure P200-Process-End
!***********************************************************************
#debug9 Show 'P200-Process-End'

  if $rowfound = 'N'
    display 'No Employees found for the Workers Comp Report.' 
  else
    print '* * * * *      GRAND TOTALS'  (+2,{#column1})
    print #grand_tot_earns            (0,{#column3})  Edit 999,999,990.00
    print #grand_tot_hrs              (0,{#column4})  Edit 999,999,990.00

    let $row_id = 'Grand Totals '
    let $filler5 = '     '
    let $filler4 = '****'
    let $filler3 = '***'
    let $filler30 = '                              '

    do format-number(#grand_tot_earns,$grand_tot_earns,'999999999.99')
    do format-number(#grand_tot_hrs,$grand_tot_hrs,'999999999.99')

    write 1 from         '"':1
                         $filler3:3
                         '","':3
                         $filler4:4
                         '","':3
                         $filler30:30		
                         '","':3
                         $filler5:5		
                         '","':3
                         $grand_tot_earns:12
                         '","':3
                         $grand_tot_hrs:12
                         '"':1	
                         

  end-if
  
end-procedure
!***********************************************************************
begin-procedure P210-Get-Other-Earnings
!***********************************************************************
#debug9 Show 'P210-Get-Other-Earnings'

begin-select ON-ERROR=SQL-Error-Found('P210-Get-Other-Earnings')

SUM(POE.OTH_HRS) &other_hours
SUM(POE.OTH_EARNS) &other_earnings

FROM   PS_PAY_OTH_EARNS POE

WHERE  POE.COMPANY    = $company
AND    POE.PAYGROUP   = $paygroup
AND    POE.PAY_END_DT = $pay_end_dt
AND    POE.OFF_CYCLE  = $off_cycle
AND    POE.PAGE_NUM      = $page_num
AND    POE.LINE_NUM      = $line_num
AND    POE.ADDL_NBR      = $addl_nbr
AND    POE.SEPCHK        = $sepchk
AND    [$GEXERNC3_INCLUDE_ERNCD_CRITERIA]

end-select

end-procedure
!***********************************************************************
Begin-Procedure P230-Print-Acct-Cd-Totals
!***********************************************************************
#debug9 Show 'P230-Print-Acct-Cd-Totals'

  If $Non_Retail_Flag = 'Y'
     If #acct_tot_hrs   > 0 Or
        #acct_tot_earns > 0
        if $save_division = 'CLW' or $save_division = 'WHS'

           print '* * TOTALS FOR ACCOUNT CODE' (+1,{#column1})
           print $save_acct_cd                 (0,{#column2})
  
           print #acct_tot_earns               (0,{#column3})  Edit 999,999,990.00
           print #acct_tot_hrs                 (0,{#column4})  Edit 999,999,990.00
           print #acct_empl_count              (0,{#column5})  Edit 99,999,999,990

           let $row_id = 'Totals for ' || $save_division || '/' || $save_deptid || '/' ||$save_acct_cd

           do format-number(#acct_tot_earns,$acct_tot_earns,'999999999.99')
           do format-number(#acct_tot_hrs,$acct_tot_hrs,'999999999.99')
           do format-number(#acct_empl_count,$acct_empl_count,'9999')

           write 1 from 
                             '"':1
                             $save_division:3
                             '","':3
                             $save_deptid:4
                             '","':3
                             $save_acct_cd:3
                             '","':3
                             $acct_tot_earns:12
                             '","':3
                    	     $acct_tot_hrs:12
                             '","':3
                             $acct_empl_count:8
                             '"':1	       
        End-If
     End-If
  End-if

  add #acct_tot_hrs      to #dept_tot_hrs
  add #acct_tot_earns    to #dept_tot_earns
  add #acct_empl_count   to #dept_empl_count

  move 0 to #acct_tot_hrs
  move 0 to #acct_tot_earns
  move 0 to #acct_empl_count
  
End-Procedure
!***********************************************************************
begin-procedure Print-Deptid-Totals
!***********************************************************************
#debug9 Show 'Print-Deptid-Totals'

  If #dept_tot_hrs   > 0 Or
     #dept_tot_earns > 0
     
    Do Get-Head-Count
    
    let $Deptid = $save_deptid
    Do Get-Department-Name
    
    print '* * * TOTALS FOR DEPARTMENT'(+2,{#column1})
    print $save_deptid                 (0,{#column2})
   
    print #dept_tot_earns              (0,{#column3})  Edit 999,999,990.00
    print #dept_tot_hrs                (0,{#column4})  Edit 999,999,990.00
    print #dept_empl_count             (0,{#column5})  Edit 99,999,999,990
    print ' '                          (+1,1)
    print $DeptName                    (0,{#column2})
    print ' '                          (+1,1)
    print $ACCT_CD                    (0,{#column2})

    do format-number(#dept_tot_earns,$dept_tot_earns,'999999999.99')
    do format-number(#dept_tot_hrs,$dept_tot_hrs,'999999999.99')
    do format-number(#dept_empl_count,$dept_empl_count,'9999')

    write 1 from         '"':1
                         $save_division:3
                         '","':3
                         $save_deptid:4
                         '","':3
                         $DeptName:30		
                         '","':3
                         $ACCT_CD:5		
                         '","':3
                         $dept_tot_earns:12
                         '","':3
                         $dept_tot_hrs:12
                         '","':3
                         $dept_empl_count:8
                         '"':1	

    add #dept_tot_hrs      to #div_tot_hrs
    add #dept_tot_earns    to #div_tot_earns
    add #dept_empl_count   to #div_empl_count

    add #dept_empl_count   to #state_empl_count

    move 0 to #dept_tot_hrs
    move 0 to #dept_tot_earns
    move 0 to #dept_empl_count

  End-If
end-procedure
!***********************************************************************
begin-procedure Print-DIVISION-Totals
!***********************************************************************
#debug9 Show 'Print-DIVISION-Totals'
     
    do Get-Div-Name
    
  If #div_tot_hrs   > 0 Or
     #div_tot_earns > 0
    print '* * * TOTALS FOR DIVISION'(+2,{#column1})
    print $save_Division   (0,{#column2})
   
    print #div_tot_earns              (0,{#column3})  Edit 999,999,990.00
    print #div_tot_hrs                (0,{#column4})  Edit 999,999,990.00
    print #div_empl_count             (0,{#column5})  Edit 99,999,999,990
    print ' '                          (+1,1)
    print $Div_Name                    (0,0)

    let $filler3 = '***'
    let $filler30 = ' '
    let $filler5 = ' '

    do format-number(#div_tot_earns,$div_tot_earns,'999999999.99')
    do format-number(#div_tot_hrs,$div_tot_hrs,'999999999.99')
    do format-number(#div_empl_count,$div_empl_count,'9999')

    write 1 from         '"':1
                         $save_division:3
                         '","':3
                         $filler4:4
                         '","':3
                         $filler30:30		
                         '","':3
                         $filler5:5		
                         '","':3
                         $div_tot_earns:12
                         '","':3
                         $div_tot_hrs:12
                         '","':3
                         $div_empl_count:8
                         '"':1	

    add #div_tot_hrs      to #grand_tot_hrs
    add #div_tot_earns    to #grand_tot_earns
    add #div_empl_count   to #grand_empl_count

    move 0 to #div_tot_hrs
    move 0 to #div_tot_earns
    move 0 to #div_empl_count
   end-if

end-procedure
!***********************************************************************
begin-procedure Print-State-Totals
!***********************************************************************
#debug9 Show 'Print-State-Totals'

  If #state_tot_hrs   <> 0 Or
     #state_tot_earns <> 0
     
    If $ANSWER = 'Y'
    print '* * * *TOTALS FOR STATE-'  (+2,{#column1})
    print $save_state                  (0,{#column2})

    print #state_tot_earns                (0,{#column3})  Edit 999,999,990.00
    print #state_tot_hrs                  (0,{#column4})  Edit 999,999,990.00
    print #state_empl_count             (0,{#column5})  Edit 99,999,999,990
    print ' '                            (+3,1)

    let $filler4 = '****'
    let $filler3 = '***'
    let $filler30 = ' '
    let $filler5 = ' '

    do format-number(#state_tot_earns,$comp_tot_earns,'999999999.99')
    do format-number(#state_tot_hrs,$comp_tot_hrs,'999999999.99')
    do format-number(#state_empl_count,$state_empl_count,'9999')

     write 1 from         '"':1
                         $save_state:3
                         '","':3
                         $filler4:4
                         '","':3
                         $filler30:30		
                         '","':3
                         $filler5:5		
                         '","':3
                         $comp_tot_earns:12	
                         '","':3
                         $comp_tot_hrs:12	
                         '","':3	
                         $state_empl_count:8
                         '"':1
    end-if

    add #state_tot_hrs     to #allstate_tot_hrs
    add #state_tot_earns   to #allstate_tot_earns
    add #state_empl_count   to #allstate_empl_count

    move 0 to #state_tot_hrs
    move 0 to #state_tot_earns
    move 0 to #state_empl_count
    
  End-If
  
end-procedure
!***********************************************************************
begin-procedure Print-AllState-Totals
!***********************************************************************
#debug9 Show 'Print-AllState-Totals'

  If #allstate_tot_hrs   <> 0 Or
     #allstate_tot_earns <> 0
     
    If $ANSWER = 'Y'
    print '* * * *TOTALS FOR ALL STATE-'  (+2,{#column1})
    print $Div_Name                  (0,{#column2})

    print #allstate_tot_earns                (0,{#column3})  Edit 999,999,990.00
    print #allstate_tot_hrs                  (0,{#column4})  Edit 999,999,990.00
    print #allstate_empl_count             (0,{#column5})  Edit 99,999,999,990
    print ' '                            (+3,1)

    let $filler4 = '****'
    let $filler3 = '***'

    do format-number(#allstate_tot_earns,$allstate_tot_earns,'999999999.99')
    do format-number(#allstate_tot_hrs,$allstate_tot_hrs,'999999999.99')
    do format-number(#allstate_empl_count,$allstate_empl_count,'99999999')

    write 1 from 
                         '"':1
                         $Div_Name:20
                         '","':3
                         $filler4:4
                         '","':3
                         $filler3:3		
                         '","':3
                         $allstate_tot_earns:12	
                         '","':3
                         $allstate_tot_hrs:12	
                         '","':3	
                         $allstate_empl_count:8
                         '"':1

    end-if


    move 0 to #allstate_tot_hrs
    move 0 to #allstate_tot_earns
    move 0 to #allstate_empl_count
    
  End-If
  
end-procedure
!***********************************************************************
begin-procedure Get-Head-Count
!***********************************************************************
#debug9 Show 'Get-Head-Count'

begin-select

COUNT(*) &dept_empl_count

   Let #dept_empl_count = &dept_empl_count

  FROM PS_JOB A
  WHERE A.EFFDT = 
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED 
        WHERE A.EMPLID = A_ED.EMPLID 
          AND A.EMPL_RCD = A_ED.EMPL_RCD 
          AND A_ED.EFFDT <= $ThruDate) 
    AND A.EFFSEQ = 
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES 
        WHERE A.EMPLID = A_ES.EMPLID 
          AND A.EMPL_RCD = A_ES.EMPL_RCD 
          AND A.EFFDT = A_ES.EFFDT) 
     AND A.EMPL_STATUS IN ('A','L','P','S')  
     AND A.DEPTID = $save_deptid


end-select

end-procedure
!***********************************************************************
begin-procedure Get-Div-Name 
!***********************************************************************
#debug9 Show 'Get-Div-Name'

begin-select
X1.XLATLONGNAME

	let $Div_Name = &X1.XLATLONGNAME
From  PSXLATITEM X1
Where X1.EFFDT = (SELECT MAX(EFFDT) FROM PSXLATITEM
        WHERE x1.FIELDNAME = FIELDNAME
          AND x1.FIELDVALUE = FIELDVALUE
          AND EFFDT <= SYSDATE)
  AND X1.FIELDNAME  = 'GEX_COMPANY_DIV_CD'
  AND X1.fieldvalue = $save_division
end-select
end-procedure

!***********************************************************************
begin-procedure SQL-Error-Found($Proc_Name) 
!***********************************************************************
#debug9 Show 'SQL-Error-Found'
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  stop
end-procedure
!***********************************************************************
Begin-Procedure EOJ-Process
!***********************************************************************

  close 1

end-procedure
!***********************************************************************
!***********************************************************************
#include 'gexernc3.sqc'  !Set up Erncd exclude code
#Include 'askftd.sqc'    !From Thru Date input
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'gexxx922.sqc'  !Get gex_rc_pay run controls