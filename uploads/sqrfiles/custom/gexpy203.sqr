!***********************************************************************
! GEXPY203:  COD - Local 880 Holiday Pay Process / Report              *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY203 :            COD - Local 880 Holiday Pay Process / Report   *
!                                                                      *
! Narrative:            This SQR is designed to update paysheets for   *
!                       Local 880 EEs to generate the correct holiday  *
!                       pay.  The program will determine how many hours*
!                       to pay for holiday based on the avg hours      *
!                       worked over the last four weeks.               *
!                                                                      *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           pay_earnings                                   *
!                       pay_oth_earns                                  *
!                       job                                            *
!                       job_labor                                      *
!                                                                      *
! Written by:           C. Haver                                       *
!                                                                      *
! Normally Run:         Weekly - prior to final calc                   *
!                                                                      *
!                                                                      *
! Control Parms:        NONE                                           *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE       DESCRIPTION OF THE CHANGE                       *
!***********************************************************************
! CJH    10/24/2000  Initial Creation                                  *
!                                                                      *
! SCM    12/15/2001  Added Holiday Earnings Scroll bar to panel and    *
!        selection criteria because all types of holiday earns are     *
!        subject to avg of 4wks workd calc (not just legal holiday)    * 
!        Added sqr logic to handle multiple earnings codes for holidays*
!                                                                      *
! SCM    3/13/2001   Put a cap on holiday earns of 8 hours per union   *
!                    contract.                                         *
!                                                                      *
! SCM    7/16/2001   Added Holiday Hours Earn Cd column to report to   *
!                    identify ee's with duplicate rows.                *
!                                                                      *
! PSR    7/31/2002   Modified to have UNION_CD from JOB - 8.3 Upgrade  * 
!                                                                      *
! AXL    2/05/2003   Fix joins in main select.                         *
!                                                                      *
! CWB   08/26/2004   Added logic to look for hours worked < 12.        *
!                                                                      * 
! CXA   07/08/2005   Retrieve hours worked for Erncd 505               *
!                                                                      * 
! CXA   08/26/2005   Retrieve hours worked for ALL vacation Erncd      *
!                    Added outer join logic and null check             *
!                    Added avg hrs column                              *
!                    Modified logic to calc using weeks used from      * 
!                     run control panel				       *
! DXS   12/19/2006   Made change in procedure P200-Main-Process. Added *
!		     where clause to Ignore Tops employees - pay what  *
!		     is sent				               *
! DXS   01/25/2007   Removed this condition from the procedure         *
!		     P200-Main-Processand.			       *
!		     and d.elig_config4 <> '000T000000'                *
!GEX-TLL 04/10/2008  HCM 9.0 Upgrade added order by clause             *
!GEX ISDVNPK 05/01/2008 Modified to UPDATE ALL THE ADDL NBRS when HOURS IS CHANGED
!GEX ISDVRKK 07/05/2010 Modified to clear hours for TM with no previous hours
!                       logic added for negative amounts
!***********************************************************************
                                                            
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#include 'setup32.sqc'

  #define #x000_col_selection_criteria_a   2
  #define #x000_col_selection_criteria_b   5

  #define #col_emplid			1
  #define #col_name			  13
  #define #col_deptid			40
  #define #col_vac_paid		52
  #define #col_erncd      60            
  #define #col_week_1			73
  #define #col_week_2    	91
  #define #col_week_3			109
  #define #col_week_4			127
  #define #col_avg_hrs		144            
  #define #col_sub_hrs		158         !RKK 07/05/2010   

begin-heading 8
#debug9 show 'begin-heading  for-reports=(Holiday-Hours)'
  move 'Local 880 Holiday Pay' to $ReportTitle
  #Include 'stdhdg01.sqc'
!         1         2         3         4         5         6         7         8         9         0         1         2         3         4         5         6         7
!12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
!Emplid      Name                       Deptid      Holiday Paid         Hrs - Week 1      Hrs - Week 2      Hrs - Week 3      Hrs - Week 4     Avg - Hrs
!                                                   Hrs     Erncd
!--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------  

  Print 'Emplid'               (5,{#col_emplid})
  Print 'Name'                 (,{#col_name})
  Print 'Deptid'               (,{#col_deptid})
  Print 'Holiday Paid'         (,{#col_vac_paid})                
  Print 'Hrs - Week 1'         (,{#col_week_1})
  Print 'Hrs - Week 2'         (,{#col_week_2})     
  Print 'Hrs - Week 3'         (,{#col_week_3})
  Print 'Hrs - Week 4'         (,{#col_week_4})
  Print 'Avg - Hrs'            (,{#col_avg_hrs})                 
  Print 'Submitted - Hrs'      (,{#col_sub_hrs})          !RKK 07/05/2010       
  Print 'Hrs'                  (6,{#col_vac_paid})               
  Print 'Erncd'                (,{#col_erncd})                   
  Print '-'                    (7,1,176) fill  

end-heading
!***********************************************************************
!***********************************************************************
Begin-Report
#debug9 Show 'Begin-Report'

  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
  
End-Report
!***********************************************************************
!***********************************************************************
Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXPY203'
  Let $ReportTitle   =   'COD - Local 880 Holiday Pay Process'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show ' '
  show 'Report Began at ' &timeBegan ' on ' &dateBegan
  show ' '

  Let $GEXXX901_Company_Alias  = 'A.COMPANY' 
  Let $GEXXX901_Paygroup_Alias = 'A.PAYGROUP'    
  Let $GEXXX913_Union_cd_Alias = 'D.UNION_CD'
  Let $GEXXX924_Erncd_Alias    = 'O.ERNCD'
  Let $GEXXX956_ERNCD_Alias    = 'B.ERNCD'           !Holiday earnings codes
  Let $GEXXX956B1_ERNCD_Alias   = 'B1.ERNCD'         !used for Holiday earnings codes to be excluded.

  If $prcs_process_instance = ''

    let $Prcs_OPRID = 'SQRW/pssqr'
    let $PRCS_RUN_CNTL_ID = 'manual'

  Display 'Enter Company/Paygroup or leave blank to exit.'
  While 1=1
    Input $In-Company Maxlen=3 'Company'
    Uppercase $In-Company
    If Rtrim($In-Company, ' ') = ''
      Break
    Else
      Input $In-Paygroup Maxlen=3 'Paygroup'
      Uppercase $In-Paygroup
      If Rtrim($In-Paygroup, ' ') = ''
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''')'
      Else
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''' And ' || $GEXXX901_Paygroup_Alias || ' = '''  || $In-Paygroup || ''')'
      End-If
      Add 1 To #GEX_RC_PAYGROUP_ROWS
      If #GEX_RC_PAYGROUP_ROWS = 1
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While 

 If #GEX_RC_PAYGROUP_ROWS = 0
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ')'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
  End-If


 Display 'Enter Union Code or leave blank to exit.'
  While 1=1
    Input $In-Union-Cd Maxlen=3 'Union Code'
    Uppercase $In-Union-Cd
    If Rtrim($In-Union-Cd, ' ') = ''
      Break
    Else
        Let $Include_Condition = '(' || $GEXXX913_Union_cd_Alias || ' = '''  || $In-Union-cd || ''')'
      Add 1 To #GEX_RC_UNION_CD_ROWS
      If #GEX_RC_UNION_CD_ROWS = 1
        Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = $GEXXX913_INCLUDE_UNION_CD_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While 

 If #GEX_RC_UNION_CD_ROWS = 0
    Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = '1=1'
    Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = $GEXXX913_INCLUDE_UNION_CD_CRITERIA || ')'
    Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = $GEXXX913_INCLUDE_UNION_CD_CRITERIA
  End-If

  Display 'Enter Earnings Codes(s) or leave blank to exit.'
  While 1=1
    Input $In-Erncd Maxlen=3 'Earnings Code'
    Uppercase $In-Erncd
    If Rtrim($In-Erncd, ' ') = ''
      Break
    Else
        Let $Include_Condition = '(' || $GEXXX924_Erncd_Alias || ' = '''  || $In-Erncd || ''')'
        Add 1 To #GEX_RC_ERNCD_ROWS
      If #GEX_RC_ERNCD_ROWS = 1
        Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = $GEXXX924_INCLUDE_ERNCD_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While 

   If #GEX_RC_ERNCD_ROWS = 0
      Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = '1=1'
      Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'ALL'
   Else
      Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = $GEXXX924_INCLUDE_ERNCD_CRITERIA || ')'
      Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = $GEXXX924_INCLUDE_ERNCD_CRITERIA
   End-If

Display 'Enter Holiday Earnings Codes(s) or leave blank to exit.'
  While 1=1
    Input $In-Erncd-Hl Maxlen=3 'Holiday Earnings Code'
    Uppercase $In-Erncd-Hl
    If Rtrim($In-Erncd-Hl, ' ') = ''
      Break
    Else
        Let $Include_Condition = '(' || $GEXXX956_Erncd_Alias || ' = '''  || $In-Erncd-Hl || ''')'
        Let $Exclude_Condition = '(' || $GEXXX956B1_Erncd_Alias || ' <> '''  || $In-Erncd-Hl || ''')'
      Add 1 To #GEX_RC_ERNCD_HL_ROWS
      If #GEX_RC_ERNCD_HL_ROWS = 1
        Let $GEXXX956_INCLUDE_ERNCD_CRITERIA = '(' || $Include_Condition
        Let $GEXXX956_EXCLUDE_ERNCD_CRITERIA = '(' || $Exclude_Condition
      Else
        Let $GEXXX956_INCLUDE_ERNCD_CRITERIA = $GEXXX956_INCLUDE_ERNCD_CRITERIA || ' Or '  || $Include_Condition
        Let $GEXXX956_EXCLUDE_ERNCD_CRITERIA = $GEXXX956_EXCLUDE_ERNCD_CRITERIA || ' Or '  || $Exclude_Condition
      End-If
    End-If
  End-While 

   If #GEX_RC_ERNCD_HL_ROWS = 0
      Let $GEXXX956_INCLUDE_ERNCD_CRITERIA = '1=1'
      Let $GEXXX956_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'ALL'
      Let $GEXXX956_EXCLUDE_ERNCD_DISPLAY_CRITERIA = 'NONE'
   Else
      Let $GEXXX956_INCLUDE_ERNCD_CRITERIA = $GEXXX956_INCLUDE_ERNCD_CRITERIA || ')'
      Let $GEXXX956_INCLUDE_ERNCD_DISPLAY_CRITERIA = $GEXXX956_INCLUDE_ERNCD_CRITERIA
      Let $GEXXX956_EXCLUDE_ERNCD_CRITERIA = $GEXXX956_EXCLUDE_ERNCD_CRITERIA || ')'
      Let $GEXXX956_EXCLUDE_ERNCD_DISPLAY_CRITERIA = $GEXXX956_EXCLUDE_ERNCD_CRITERIA
   End-If

    Input #In-weeks-req Maxlen=1 '# Weeks used for holiday calculation'
    let #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA = #In-weeks-req
  
    Input $In-partfull-req Maxlen=1 'Part time (P) or Full Time (F)'          
    let $GEXXX922_INCLUDE_FULL_PART_TIME_CRITERIA = $In-partfull-req          

  Else
   Do GEXXX922-Select-Parameters
   Do GEXXX901-Select-Company-Paygroup-Parameters    
   Do GEXXX913-Select-UNION-CD-Parameters
   Do GEXXX924-Select-ERNCD-Parameters
   Do GEXXX956-Select-ERNCD-Parameters                    !SCM  Holiday Earns 2/15/2001
   let $GEXXX956_INCLUDE_ERNCD_CRITERIA_Save = $GEXXX956_INCLUDE_ERNCD_CRITERIA 
   let $GEXXX956_INCLUDE_ERNCD_DISPLAY_CRITERIA_Save = $GEXXX956_INCLUDE_ERNCD_DISPLAY_CRITERIA      
!SCM  2/15/2001 Save the include values
!          because you need to get the exclude values using a different alias (B1).  The sqr 
!          does another call to the same table using a different table identifier.
!          When you get the exclude values move the saved values back to the include data field.
!   
   Let $GEXXX956_ERNCD_Alias    = 'B1.ERNCD'           
   Do GEXXX956-Select-ERNCD-Parameters                 

   let $GEXXX956_INCLUDE_ERNCD_DISPLAY_CRITERIA = $GEXXX956_INCLUDE_ERNCD_DISPLAY_CRITERIA_Save  
   let $GEXXX956_INCLUDE_ERNCD_CRITERIA = $GEXXX956_INCLUDE_ERNCD_CRITERIA_Save                  
  
   let #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA = #GEX_RC_PAY.GEX_VAC_WKS
   let $GEXXX922_INCLUDE_FULL_PART_TIME_CRITERIA = $GEX_RC_PAY.FULL_PART_TIME     
   
  End-If

  let $GEXXX922_INCLUDE_WEEKS_USED_DISPLAY_CRITERIA = #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA
   
  let $GEXXX956_INCLUDE_ERNCD_DISPLAY_CRITERIA     = $GEXXX956_INCLUDE_ERNCD_CRITERIA
  
  let $X000_ORDER_BY = 'DEPTID, EMPLID'

  show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA      = ' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA   
  show '$GEXXX913_INCLUDE_UNION_CD_CRITERIA              = ' $GEXXX913_INCLUDE_UNION_CD_CRITERIA
  show '$GEXXX924_INCLUDE_ERNCD_CRITERIA                 = ' $GEXXX924_INCLUDE_ERNCD_CRITERIA
  show '$GEXXX922_INCLUDE_WEEKS_USED_CRITERIA            = ' #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA
  show '$GEXXX956_INCLUDE_ERNCD_CRITERIA-Holiday         = ' $GEXXX956_INCLUDE_ERNCD_CRITERIA 
  show '$GEXXX956_EXCLUDE_ERNCD_CRITERIA-Holiday         = ' $GEXXX956_EXCLUDE_ERNCD_CRITERIA
  Show '$GEXXX922_INCLUDE_FULL_PART_TIME_CRITERIA        = ' $GEXXX922_INCLUDE_FULL_PART_TIME_CRITERIA   !SCM 2/15/2001

  print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,{#x000_col_selection_criteria_a})
  print '$Prcs_OPRID          ='                                  (+1,{#x000_col_selection_criteria_b})
  print $Prcs_OPRID                                               (0,+2)
  print '$PRCS_RUN_CNTL_ID    ='                                  (+1,{#x000_col_selection_criteria_b})
  print $PRCS_RUN_CNTL_ID                                         (0,+2)

  print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,{#x000_col_selection_criteria_a})
  print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA       (0,+2)
  print '$GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA	          (0,+2)
  print '$GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA            ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA                  (0,+2)
  print '$GEXXX922_INCLUDE_WEEKS_USED_DISPLAY_CRITERIA       ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX922_INCLUDE_WEEKS_USED_DISPLAY_CRITERIA             (0,+2)
 
  print '$GEXXX922_INCLUDE_FULL_PART_TIME_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX922_INCLUDE_FULL_PART_TIME_CRITERIA                 (0,+2)

  Print '$GEXXX956_INCLUDE_ERNCD_DISPLAY_CRITERIA-Holiday    ='   (+1,{#x000_col_selection_criteria_b})
  Print $GEXXX956_INCLUDE_ERNCD_DISPLAY_CRITERIA                (0,+2)

  Print '$GEXXX956_EXCLUDE_ERNCD_DISPLAY_CRITERIA-Holiday    ='   (+1,{#x000_col_selection_criteria_b})
  Print $GEXXX956_EXCLUDE_ERNCD_DISPLAY_CRITERIA                (0,+2)

  print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,{#x000_col_selection_criteria_a})
  print '$X000_ORDER_BY                                      ='   (+1,{#x000_col_selection_criteria_b})
  print $X000_ORDER_BY 	(0,+2)
  
  let #page-count = 0
  NEW-PAGE

End-Procedure
!***********************************************************************
!***********************************************************************
Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'

 do get-pay-end

Begin-SELECT On-Error=P290-SQL-Error('P200-main-process')
B.COMPANY
B.PAYGROUP
B.PAY_END_DT
B.OFF_CYCLE
B.PAGE_NUM
B.LINE_NUM
B.ADDL_NBR
A.DEPTID
A.EMPLID
B.ERNCD
B.OTH_HRS
B.OTH_EARNS
B.SEPCHK
B.JOB_PAY
B.ADD_GROSS
B.TAX_METHOD
B.ADDL_SEQ
B.TL_SOURCE
B.RATE_USED
B.BAS_CREDIT_SW
B.COMP_RATECD
B.COMPRATE
B.COMPRATE_USED
B.HRS_DIST_SW
D.FULL_PART_TIME &full_part
PER.NAME &name

#debug9 Show 'P200-Main-Process pay end dt: '&b.pay_end_dt
#debug9 Show 'P200-Main-Process OTH_HRS: '&b.OTH_HRS

  let $full_part = &full_part
  let $name = &name
  let $erncd = &B.ERNCD                           

  print &A.EMPLID (+1,{#col_emplid})
  print $name (,{#col_name})
  print &A.DEPTID (,{#col_deptid})
  
  move &B.OTH_HRS to #weeks_requested
  
  Print #weeks_requested (,{#col_sub_hrs}) edit 999.99	!RKK 07/05/2010

  if #weeks_requested > 0
    do get-hours-worked
    if $error = 'N'
      do update-pay-oth-earns
      do update-pay-earnings                   
    else                                   !RKK 07/05/2010
      do update-pay-oth-earns-error        !RKK 07/05/2010
      do update-pay-earnings               !RKK 07/05/2010                  
    end-if
  else
    let #hrs_paid = #weeks_requested
    do update-pay-oth-earns-negative     !RKK 07/05/2010
    do update-pay-earnings               !RKK 07/05/2010                  
  end-if

FROM PS_PAY_EARNINGS A,
     PS_PAY_OTH_EARNS B,
     PS_JOB D,
     PS_PERSONAL_DATA PER
WHERE A.COMPANY = B.COMPANY
  AND A.PAYGROUP = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND A.OFF_CYCLE = B.OFF_CYCLE
  AND A.PAGE_NUM = B.PAGE_NUM
  AND A.LINE_NUM = B.LINE_NUM
  AND A.ADDL_NBR = B.ADDL_NBR
  AND A.OFF_CYCLE = 'N'
  AND A.PAY_END_DT = $pay_end_dt
  AND A.EMPLID   = D.EMPLID		
  AND A.EMPL_RCD = D.EMPL_RCD		
  AND D.EMPLID = PER.EMPLID
  AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA]
  AND [$GEXXX956_INCLUDE_ERNCD_CRITERIA]                
  AND D.FULL_PART_TIME = $GEXXX922_INCLUDE_FULL_PART_TIME_CRITERIA    
  AND D.EFFDT = (select max(effdt) from ps_job
                 where emplid   = d.emplid
                   and empl_rcd = d.empl_rcd
                   and effdt   <= $pay_end_dt)
  AND D.EFFSEQ =(SELECT MAX(EFFSEQ) FROM PS_JOB 
                WHERE d.EMPLID   = EMPLID		
                  AND d.EMPL_RCD = EMPL_RCD	
                  AND d.EFFDT    = EFFDT)
  AND [$GEXXX913_INCLUDE_UNION_CD_CRITERIA]
  order by A.DEPTID, A.EMPLID  
  
End-SELECT

End-Procedure
!*********************************************************************
begin-procedure get-hours-worked
!*********************************************************************
#debug9 Show 'get-hours-worked'

 let #weeks_retrieved = 0
 let #total_hrs = 0
 Let #avg_hrs = 0	 	

begin-SELECT On-Error=P290-SQL-Error('get-hours-worked')

P.COMPANY
P.PAYGROUP
P.PAY_END_DT () On-Break Print=Never Level=1 After=Prn-Weekly-Sum_Hrs 
O.ERNCD
O.OTH_HRS

     if #weeks_retrieved > #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA
        exit-select
     end-if
     
#debug9 Show 'get-hours-worked pay end dt: '&p.pay_end_dt
#debug9 Show 'get-hours-worked OTH_HRS: '&o.OTH_HRS
#debug9 Show 'get-hours-worked weeks_retrieved: '#weeks_retrieved

     if isnull(&O.OTH_HRS)	! Retrieve hours worked for All vacation Erncd
       let #sum_hrs = #sum_hrs + 0
     else
       Let #Pos = 0
       Let #Pos = Instr($GEXXX924_INCLUDE_ERNCD_CRITERIA, &O.ERNCD, 1)
       if #Pos > 0
         let #sum_hrs = #sum_hrs + &O.OTH_HRS
       end-if   
     end-if			 

FROM PS_PAY_EARNINGS P,
     PS_PAY_OTH_EARNS O
WHERE P.COMPANY = O.COMPANY (+)
  AND P.PAYGROUP = O.PAYGROUP (+)
  AND P.PAY_END_DT = O.PAY_END_DT (+)
  AND P.OFF_CYCLE = O.OFF_CYCLE (+)
  AND P.PAGE_NUM = O.PAGE_NUM (+)
  AND P.LINE_NUM = O.LINE_NUM (+)
  AND P.ADDL_NBR = O.ADDL_NBR (+)
  AND P.PAY_END_DT < $pay_end_dt
  AND P.EMPLID = &A.EMPLID
!  AND ROWNUM < 5 !waiting to be tested by Heidi
ORDER BY P.PAY_END_DT desc
end-SELECT

 if #weeks_retrieved = 0 
    display &A.EMPLID noline
    display ' : ' noline
    display #weeks_retrieved noline 
    display ' weeks retrieved...not enough for Holiday calculation'

    print #weeks_retrieved  (,{#col_week_1})
    print ' weeks retrieved...not enough for Holiday calculation'    (,{#col_week_2})
    move 'Y' to $error
 else
    ! Reset weeks retrieved due to looping
    if #weeks_retrieved > #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA		
      Let #weeks_retrieved = #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA
    end-if
    display #weeks_retrieved noline
    display ' Weeks of valid earnings found for the Employee: ' noline
    display &A.EMPLID

    Let #avg_hrs = #total_hrs / #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA 	
    Print #avg_hrs (,{#col_avg_hrs}) edit 999.99	
    move 'N' to $error
 end-if

end-procedure

!*********************************************************************
!Print Weekly Sum Hours		
!*********************************************************************
begin-procedure Prn-Weekly-Sum_Hrs 
#debug9 Show 'Prn-Weekly-Sum_Hrs'

     let #weeks_retrieved = #weeks_retrieved + 1

     evaluate #weeks_retrieved
     when = 1
        Print #sum_hrs (,{#col_week_1}) edit 999.99
        break
     when = 2
        Print #sum_hrs (,{#col_week_2}) edit 999.99
        break
     when = 3
        Print #sum_hrs (,{#col_week_3}) edit 999.99
        break
     when = 4
        Print #sum_hrs (,{#col_week_4}) edit 999.99
        break
     end-evaluate

     if #weeks_retrieved <= #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA
       let #total_hrs = #total_hrs + #sum_hrs
     end-if
     let #sum_hrs = 0

end-procedure

!*********************************************************************
!Gets the Pay End Date to process for
!*********************************************************************
begin-procedure Get-Pay-End 
#debug9 Show 'Get-Pay-End'

 let $Found = 'N'

begin-select loops=1 On-Error=P290-SQL-Error('get-pay-end')

Y1.PAY_END_DT 
Y1.pay_begin_dt 

  move 'Y' to $Found
  move &Y1.PAY_END_DT to $pay_end_dt
  move &Y1.PAY_BEGIN_DT TO $pay_begin_dt

FROM PS_PAY_CALENDAR Y1
WHERE Y1.PAY_SHEETS_RUN = 'Y'
  AND Y1.PAY_CONFIRM_RUN = 'N'
  AND Y1.PAY_END_DT = (SELECT MAX(PAY_END_DT)
                         FROM PS_PAY_CALENDAR
                        WHERE PAY_SHEETS_RUN = 'Y'
                          AND PAY_CONFIRM_RUN = 'N'                  
                          AND PAY_END_DT <= $AsOfToday
                          AND (COMPANY, PAYGROUP) in (
                        select distinct a.company, a.paygroup
                        from ps_pay_calendar a where [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA]))
  AND Y1.RUN_ID > ' '

end-select

  if $Found = 'N'
    display 'Error --  Pay Calendar not found or not setup for the Run ID.'
    print 'Error --  Pay Calendar not found or not setup for the Run ID.' (+1,1,60)
  else
    display 'Processing for Pay End Date: ' noline
    display $pay_end_dt
  end-if

end-procedure
!***********************************************************************
!***********************************************************************
Begin-Procedure update-pay-oth-earns
#debug9 Show 'Update-pay-oth-earns'
#debug9 Show 'Update-pay-oth-earns hrs-paid: '#hrs_paid

   let #hrs_paid = (#total_hrs/#GEXXX922_INCLUDE_WEEKS_USED_CRITERIA)    
   if #hrs_paid = 28       ! correct schedule so that the floor function will return the correct hours
     let #hrs_paid = 27
   end-if
   let #hrs_paid = (floor(#hrs_paid/4))     !largest integer <=x
 
!RKK 07/05/2010 Begin
 evaluate #hrs_paid
   when < 0  
     break
   when < 3
     let #hrs_paid = 0 
     break
   When > 8   
      let #hrs_paid = 8      !Local 880 contract is capped at 8.              
      display ' Holiday Hrs Paid capped at 8 for employee:  ' noline      
      display &A.EMPLID
      break
   when-other
      break
 end-evaluate
!RKK 07/05/2010 End

 print #hrs_paid (,{#col_vac_paid})
 print $erncd    (,{#col_erncd})         !add holiday earnings code

 Begin-SQL On-Error=P290-SQL-Error('Update-pay-oth-earns')
     Update ps_pay_oth_earns uoe
        Set uoe.oth_hrs = #hrs_paid
            Where uoe.company = &B.COMPANY
             and uoe.paygroup = &B.PAYGROUP
             and uoe.pay_end_dt = &B.PAY_END_DT
             and uoe.off_cycle = &B.OFF_CYCLE
             and uoe.page_num = &B.PAGE_NUM
             and uoe.line_num = &B.LINE_NUM
             and uoe.addl_nbr = &B.ADDL_NBR
             and uoe.erncd = &B.ERNCD
 End-SQL

end-procedure
!***********************************************************************
!RKK 07/05/2010 BEGIN
!***********************************************************************
Begin-Procedure update-pay-oth-earns-negative
#debug9 Show 'Update-pay-oth-earns-negative'
#debug9 Show 'Update-pay-oth-earns-negative hrs-paid: '#hrs_paid

 print #hrs_paid (,{#col_vac_paid})
 print $erncd    (,{#col_erncd})         !add holiday earnings code

 Begin-SQL On-Error=P290-SQL-Error('Update-pay-oth-earns')
     Update ps_pay_oth_earns uoe
        Set uoe.oth_hrs = #hrs_paid
            Where uoe.company = &B.COMPANY
             and uoe.paygroup = &B.PAYGROUP
             and uoe.pay_end_dt = &B.PAY_END_DT
             and uoe.off_cycle = &B.OFF_CYCLE
             and uoe.page_num = &B.PAGE_NUM
             and uoe.line_num = &B.LINE_NUM
             and uoe.addl_nbr = &B.ADDL_NBR
             and uoe.erncd = &B.ERNCD
 End-SQL

end-procedure
!***********************************************************************
!***********************************************************************
Begin-Procedure update-pay-oth-earns-error
#debug9 Show 'Update-pay-oth-earns-error'

 let #hrs_paid = 0                    

 print #hrs_paid (,{#col_vac_paid})
 print $erncd    (,{#col_erncd})         !add holiday earnings code

 Begin-SQL On-Error=P290-SQL-Error('Update-pay-oth-earns-error')
     Update ps_pay_oth_earns uoe
        Set uoe.oth_hrs = #hrs_paid
            Where uoe.company = &B.COMPANY
             and uoe.paygroup = &B.PAYGROUP
             and uoe.pay_end_dt = &B.PAY_END_DT
             and uoe.off_cycle = &B.OFF_CYCLE
             and uoe.page_num = &B.PAGE_NUM
             and uoe.line_num = &B.LINE_NUM
             and uoe.addl_nbr = &B.ADDL_NBR
             and uoe.erncd = &B.ERNCD
 End-SQL

end-procedure
!RKK 07/05/2010 END
!***********************************************************************
!***********************************************************************
begin-procedure update-pay-earnings
#debug9 Show 'update-pay-earnings'

! Update pay earnings to set the pay line status to 'Updated' so that a recalc occurs. 

begin-sql On-Error=P290-SQL-Error('Update-pay-earnings')
UPDATE ps_pay_earnings ue
       set ue.pay_line_status = 'U'
 WHERE ue.company = &B.COMPANY
   AND ue.paygroup = &B.PAYGROUP
   AND ue.pay_end_dt = &B.pay_end_dt
   AND ue.off_cycle = &B.off_cycle
   AND ue.page_num = &B.page_num
   AND ue.line_num = &B.line_num   
end-sql

end-procedure
!***********************************************************************
!***********************************************************************
Begin-Procedure P290-SQL-Error($Action)
#debug9 Show 'P290-SQL-Error'

  Show $Action ' failed'
  Show 'SQL Error:  '  $_sql-error
  Stop

End-Procedure
!***********************************************************************
!***********************************************************************
Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show ' '
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'

End-Procedure
!***********************************************************************
!***********************************************************************
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx901.sqc'  !
#include 'gexxx950.sqc'  !
#include 'gexxx913.sqc'  !
#include 'gexxx924.sqc'  !
#include 'gexxx956.sqc'  !Get erncd multiple row table (for holiday earnings codes)
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
