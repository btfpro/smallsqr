!***********************************************************************
! GEXPY210:  This SQR process calculates vacation hours for employees  *
!            in the Akron Stores who have attained 1 year of service.  *
!            Vacation pay is either calc'd using AVG hours * rate of   *
!            pay or for some benefit plans, if AVG hours > 37/week,    *
!            40 is awarded and used for the AVG hrs.                   *
!            AVG Hours (Vacation hours earned) are based on the average*
!            number of hours worked in the last 12 months of employment*
!            Runcntl parameters are Benefit plans.
!                                                                      *
!            This SQR process awards vacation hours to employees on    *
!            their anniversary date only. Therefore, this process MUST *
!            RUN DAILY in order to process employees attaining one year*
!            of service.                                               *
!                                                                      *
!***********************************************************************
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE      DESCRIPTION OF THE CHANGE             *        
!***********************************************************************
! HR10461   SCM     08/13/2003   INITIAL CREATION                      *
!                                                                      * 
! HR10604   AXL     04/05/2004   Automate vacation rules for BMC &     *
!                                Louisville/Alliance stors.            *
! ITG93005  ISDVNPK 02/21/2011   Modifed this to select based on       *
!                                VACATION SENIOR DT                    *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup32.sqc'

begin-setup
  declare-report Vacation-Detail-Report
Printer-Type=HPLASERJET        ! COMMENT FOR TESTING... BUT YOU NEED THIS FOR PRODUCTION MOBIUS
!Printer-Type=LINEPRINTER
    layout=DEFAULT
  end-declare

  declare-report Report-log
Printer-Type=HPLASERJET        ! COMMENT FOR TESTING... BUT YOU NEED THIS FOR PRODUCTION MOBIUS
!Printer-Type=LINEPRINTER
    layout=DEFAULT
  end-declare
end-setup


begin-heading 6 for-reports=(report-log)
  LET $REPORTID = 'PY210LOG'
  move 'Vacation Calculation for Akron - Report Log' to $ReportTitle

 #Include 'stdhdg01.sqc'

  position          (+2)
  print 'Trans#'    (,1)
  print 'Emplid'    (,18)
  print 'Message'   (,50)
  print '-'         (+1,1,174) fill
end-heading


begin-heading 7 for-reports=(Vacation-Detail-Report)
  move 'GEXPY210' to $ReportID
  move 'Vacation Calculation for Akron - Daily Update' to $ReportTitle

 #Include 'stdhdg02.sqc'
  Let $X000_temp_out = 'Report as of ' || $X000_REPORT_HEADING_ASOFDATE

  Print $X000_temp_out            (3,)  center
  print 'Dept'                    (6,1)
  print 'Acct'                    (,7)
  print 'Pay'                     (,84)
  print 'Job'                     (,98)
  print 'Awarded'                 (,168)
  print 'Full/Part'               (,105)
  print 'Service'                 (,116)
  print 'Hrs Worked'              (,146)

  print 'Code'                    (+1,1)
  print 'Description'             (,7)
  print 'Name'                    (,24)
  print 'Emplid'                  (,61)
  print 'Union'                   (,74)
  print 'Group'                   (,84)
  print 'Code'                    (,98)
  print 'Time Ind'                (,105)
  print 'Date'                    (,116)
  print 'Hire Date'               (,129)
  print '   YTD   '               (,146)
  print 'Vacation Hrs'            (,163)
  print '-'                       (+1,1,174) fill
end-heading


begin-report
  use-report Vacation-Detail-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  Let $GEXXX902_Deptid_Alias   = 'a.deptid'
  Let $GEXXX913_UNION_CD_Alias = 'A.UNION_CD'
  Let $X000_Order_By =  'A.COMPANY, A.DEPTID, P.NAME'

  If $prcs_process_instance = ''
    Do Ask-As-Of-Date

    Display 'Enter DeptID or leave blank to exit.'
    Let #deptcount = 1                                     
    While 1=1
      Input $In-DeptID Maxlen=10 'DeptID'
      Uppercase $In-DeptID

      If Rtrim($In-DeptID, ' ') = ''
        Concat '''' With $DeptIDString
        Break
      End-If
 
      If $DeptIDString <> ''''
        if #deptcount = 1
           Concat '''' With $DeptIDString
        else
           Concat ''',''' With $DeptIDString
        end-if
        add 1 to #deptcount
      End-If
      Concat $In-DeptID With $DeptIDString

    End-While

    If $DeptIDString = '''''' or $DeptIDString = ''''
      Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
      Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' In (' || $DeptIDString || ')'
      Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_INCLUDE_DEPTID_CRITERIA
    End-If

    Let $UnionCdString = ''''
    Display 'Enter Union Code or leave blank to exit.'
    While 1=1
      Input $In-UnionCd Maxlen=3 'Union Code'
      Uppercase $In-UnionCd
      If Rtrim($In-UnionCd, ' ') = ''
        Concat '''' With $UnionCdString
        Break
      End-If
      If $UnionCdString <> ''''
        Concat ''',''' With $UnionCdString
      End-If
      Concat $In-UnionCd With $UnionCdString
    End-While
    If $UnionCdString = ''''''
      Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = '1=1'
      Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = $GEXXX913_Union_CD_Alias || ' In (' || $UnionCdString || ')'
      Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = $GEXXX913_INCLUDE_UNION_CD_CRITERIA
    End-If
 
  Else
    Do GEXXX922-Select-Parameters
    Let $AsOfDate = $GEX_RC_PAY.ASOFDATE
    If Rtrim($AsOfDate,' ') = ''
      Let $AsOfDate = $AsOfToday
    End-If

    Do GEXXX902-Select-Deptid-Parameters
    Do GEXXX913-Select-UNION-CD-Parameters

  End-If
  
  let $Year4   = '1'
  Do Format-DateTime($AsOfDate, $X000_REPORT_HEADING_ASOFDATE, {DEFMDY}, '', '')

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan
  show ' '

  Do Convert-To-DTU-Date($AsOfDate,$AsofDate_dtu)
  Do dtu-add-days($AsOfDate_dtu,-1, $AsOfDateMinus1_dtu)
  Do Convert-From-DTU-Date($AsOfDateMinus1_dtu,$AsOfDateMinus1)
 
  Show '$GEXXX902_Include_Deptid_Display_Criteria          = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$X000_Where_Select_AsOfDate = ' $X000_Where_Select_AsOfDate 
  show '$GEXXX913_INCLUDE_UNION_CD_CRITERIA ' $GEXXX913_INCLUDE_UNION_CD_CRITERIA
  show '$AsOfDate ' $AsOfDate
  move 'GEXPY210' to $ReportID
  move 'Vacation Calculation for Akron - Daily Update' to $ReportTitle
  Do P130-Print-Cover-Page

  do Gexregtp_Init_Strings
  do Get-Date-Codes
  do Convert-To-DTU-Date($AsOfDate, $AsOfDate_dtu)

  move $AsOfYYYY to #AsOfYYYY
  let #prev_year = #AsOfYYYY - 1
  let $prev_year = to_char(floor(#prev_year))

  do GEXREGTP_Init_Strings

  move 'N' to $found
  let #inputtran = 0
  do find-max-pay-end
  do P200-Select-Employees
  
Report-Exit:

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded

  show ' '
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
  show ' '

  display #InputTran 999,999 noline
  display ' Transactions Processed'

  do Commit-Transaction

  do Stdapi-Term
end-report


begin-procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                (+5,2)
  Print '$GEXXX902_Include_Deptid_Display_Criteria  ='           (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria                (0,+2)

  Print '$GEXXX913_INCLUDE_UNION_CD_CRITERIA       ='            (+1,5)
  Print $GEXXX913_INCLUDE_UNION_CD_CRITERIA                      (0,+2)

  Print 'As Of Date :'                      (+2,5)
  Print $X000_Report_Heading_AsOfDate       (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'   (+5,2)
  Print $X000_Order_By                      (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
End-Procedure


begin-procedure P200-Select-Employees
#debug9 Show 'P200-Select-Employees'
  move 'N' to $found
  move 'N' to $Empl_found

begin-select ON-ERROR=SQL-Error-Found
A.COMPANY   ()  ON-BREAK  LEVEL=1  PRINT=NEVER

A.DEPTID    ()  ON-BREAK  LEVEL=2  PRINT=NEVER
                                   SAVE=$previous_deptid
                                   BEFORE=P230-Before-Deptid-Change
                                   AFTER=P240-After-Deptid-Change
A.JOBCODE
A.PAYGROUP
A.EMPLID
A.EMPL_RCD
A.REG_TEMP
A.HOURLY_RT
A.ACCT_CD
A.UNION_CD
B.GEX_VCN_SENIOR_DT
B.HIRE_DT
B.REHIRE_DT
B.SERVICE_DT
P.NAME 

  let $Company = &A.company
  move &A.EMPLID to $emplid
  ! ISDVNPK 02/21/2011 ITG93005 Modifed this to select based on VACATION SENIOR DT
  If rtrim(datetostr(&B.GEX_VCN_SENIOR_DT,'dd-mon-yyyy'),' ') = ''
   move &B.SERVICE_DT to $service_dt
  else
   move &B.GEX_VCN_SENIOR_DT to $service_dt
  end-if
  ! ISDVNPK 02/21/2011 ITG93005 Modifed this to select based on VACATION SENIOR DT
  move 'Y' to $Empl_found
  move 'N' to $skip_record
  move 0 to #hrs_worked
  move 0 to #vac_hrs_awarded
  
  #ifdef debug8 
    show 'emplid: ' $emplid
    show '  Company:                  ' $Company
  #endif
  
  let $balance_year_criteria = 'AND    J.BALANCE_YEAR     IN (' || $prev_year || ',' || $AsOfYYYY || ')'
  do P300-Hours-Worked-New  

  if #hrs_worked <= 0
    move 'Y' to $skip_record
  end-if

  if $skip_record = 'N'
    add 1 to #inputtran
    let #avg_weekly_hrs_worked = #hrs_worked / 52

    if &A.DEPTID = '6378' or &A.DEPTID = '4060' or &A.DEPTID = '1611' or &A.DEPTID = '1605'
       let #vac_hrs_awarded = #avg_weekly_hrs_worked
    else
       evaluate #avg_weekly_hrs_worked
          when >= 37
            let #vac_hrs_awarded = 40
            break
          when < 37
            let #vac_hrs_awarded = #avg_weekly_hrs_worked
            break
        end-evaluate
     end-if

    #debug7 show ' '
    #debug7 show '  emplid  =                  ' $emplid
    #debug7 show '  deptid  =                  ' &a.deptid
    #debug7 show '  Svc Dt  =                  ' $service_dt
    #debug7 show '  hours worked =             ' #hrs_worked
    #debug7 show '  avg weekly hours worked =  ' #avg_weekly_hrs_worked
    #debug7 show '  vacation hours awarded  =  ' #vac_hrs_awarded
    #debug7 show ' '

    do P400-Check-Existing-Vac-Erncd
    do P550-Insert-Addl-Pay-Data
    do P600-Print-Detail-Report
  end-if
    
FROM  PS_JOB A,
      PS_EMPLOYMENT B,
      PS_PERSONAL_DATA P 
WHERE  A.EMPLID          = B.EMPLID
   AND A.EMPL_RCD        = B.EMPL_RCD
   AND A.EMPLID          = P.EMPLID  
   And  [$GEXXX902_Include_Deptid_Criteria]
   AND  [$GEXXX913_INCLUDE_UNION_CD_CRITERIA] 
   AND A.EMPL_STATUS NOT IN ('T','R','U','Q')
   AND A.EFFDT            =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID     = A.EMPLID
          AND EMPL_RCD  = A.EMPL_RCD
          AND EFFDT     <= $AsOfDate)
   AND A.EFFSEQ           =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB 
       WHERE  EMPLID      = A.EMPLID
          AND EMPL_RCD   = A.EMPL_RCD
          AND EFFDT       = A.EFFDT)
   ! ISDVNPK 02/21/2011 ITG93005 Modifed this to select based on VACATION SENIOR DT
   AND ((add_months(B.SERVICE_DT,12) = $AsOfDate and B.gex_vcn_senior_dt is Null) 
       or (add_months(B.gex_vcn_senior_dt,12) = $AsOfDate and B.gex_vcn_senior_dt is not Null))
   ! AND add_months(B.SERVICE_DT,12) = $AsOfDate    
   ! ISDVNPK 02/21/2011 ITG93005 Modifed this to select based on VACATION SENIOR DT

ORDER BY A.COMPANY, A.DEPTID, P.NAME
end-select

   if $Empl_found = 'N'
      Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
   end-if
end-procedure

begin-procedure P230-Before-Deptid-Change
#debug9 Show 'P230-Before-Deptid-Change'
  let $DeptID = &A.DEPTID
  do Get-Department-Name
end-procedure

begin-procedure P240-After-Deptid-Change
#debug9 Show 'P240-After-Deptid-Change'
  if #detail_count > 0
    new-page
    move 0 to #detail_count
  end-if
  let $DeptName = ''
end-procedure

!*********************************************************************
Begin-Procedure find-max-pay-end
!*********************************************************************

move 'N' to $max_found

begin-select loops = 1 
PAY.PAY_END_DT

  move 'Y' to $max_found
  move &PAY.PAY_END_DT to $max_pay_end_Dt
  show '$max_pay_end_Dt ' $max_pay_end_Dt
  
FROM PS_PAY_CALENDAR PAY

WHERE PAY.PAY_END_DT = (SELECT DISTINCT(max(PAY_END_DT))
   		      FROM PS_PAY_CALENDAR
		     WHERE PAY_END_DT <= $asofdate
                     AND PAY_SHEETS_RUN = 'Y')
end-select

   if $max_found = 'N'
      display 'No Pay Cycle as of:' noline
      display $service_dt_plus_one
      move $AsOfToday to $max_pay_end_Dt
      show 'Using ' $AsOfToday ' for max pay end dt for ' $emplid
   end-if
end-procedure

begin-procedure P300-Hours-Worked
#debug9 Show 'P300-Hours-Worked'
begin-select on-error=SQL-Error-Found
SUM(J.HRS_YTD) &J.HRS_YTD

  add &J.HRS_YTD To #hrs_worked

FROM   PS_EARNINGS_BAL J
WHERE  J.EMPLID            = &A.EMPLID
   AND J.COMPANY > '900'
   AND J.BALANCE_ID        = 'CY'
   AND J.EMPL_RCD          = &A.EMPL_RCD
   [$balance_year_criteria]
   AND J.BALANCE_PERIOD    =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_EARNINGS_BAL
       WHERE  EMPLID       = J.EMPLID
          AND COMPANY      = J.COMPANY
          AND BALANCE_ID   = J.BALANCE_ID
          AND BALANCE_YEAR = J.BALANCE_YEAR
          AND SPCL_BALANCE = J.SPCL_BALANCE
          AND EMPL_RCD     = J.EMPL_RCD 
          AND ERNCD        = J.ERNCD)
   AND J.SPCL_BALANCE      = 'Y'
   AND J.ERNCD             = 'TOT'
end-select
end-procedure

!*********************************************************************
begin-procedure P300-Hours-Worked-New
!*********************************************************************
#debug9 Show '-- In P300-Hours-Worked-New --'

Begin-SELECT distinct 
CC.pay_end_dt 
CC.OFF_CYCLE
DD.SPCL_HRS

   add &DD.SPCL_HRS to #hrs_worked
   
FROM PS_PAY_EARNINGS CC, PS_PAY_SPCL_EARNS DD
  WHERE  CC.EMPLID     = &A.EMPLID
     AND CC.EMPL_RCD  =  &A.EMPL_RCD
     AND CC.COMPANY    = DD.COMPANY
     AND (CC.COMPANY   ='335' or CC.COMPANY > '999')  !ignore indys xcept for 335
     AND CC.PAYGROUP   = DD.PAYGROUP
     AND CC.PAY_END_DT = DD.PAY_END_DT
     AND CC.OFF_CYCLE  = DD.OFF_CYCLE
     AND CC.PAGE_NUM      = DD.PAGE_NUM
     AND CC.LINE_NUM      = DD.LINE_NUM
     AND CC.SEPCHK     = DD.SEPCHK	
     AND DD.ERNCD_SPCL = 'TOT'
     AND CC.PAY_END_DT BETWEEN $service_dt AND $max_pay_end_Dt

end-select
end-procedure

!*********************************************************************
!This procedure tries to find if the Vacation Earnings Code (513) is
!defined in ADDL_PAY_ERNCD table. If there is, inserts a row in 
!ADDL_PAY_EFFDT with AsofDate as the effective date. Otherwise,
!inserts the earning code 513 in the ADDL_PAY_ERNCD and also a row with
!effective date equal to AsofDate in ADDL_PAY_EFFDT.
!*********************************************************************
   
begin-procedure P400-Check-Existing-Vac-Erncd
#debug9 Show 'P400-Check-Existing-Vac-Erncd'
  move 'N' to $found

begin-select on-error=SQL-Error-Found
'K'
  move 'Y' to $found
  do P520-Insert-New-Effdt

FROM   PS_ADDL_PAY_ERNCD K
WHERE  K.EMPLID    = &A.EMPLID
   AND K.EMPL_RCD = &A.EMPL_RCD
   AND K.ERNCD     = '513'
end-select

  if $found = 'N'
    do P500-Insert-Vac-Erncd
    do P520-Insert-New-Effdt
  end-if
end-procedure


begin-procedure P500-Insert-Vac-Erncd
#debug9 Show 'P500-Insert-Vac-Erncd for Emplid: ' &a.emplid
  begin-sql on-error=SQL-Error-Found
    INSERT INTO PS_ADDL_PAY_ERNCD
               (EMPLID,
                EMPL_RCD,
                ERNCD,
                RECORD_SOURCE)                      
        VALUES (&A.EMPLID,
                &A.EMPL_RCD,
                '513',
                'O')                                
  end-sql
end-procedure


begin-procedure P520-Insert-New-Effdt
#debug9 Show 'P520-Insert-New-Effdt for Emplid: ' &a.emplid
 begin-sql on-error=SQL-Error-Found
    INSERT INTO PS_ADDL_PAY_EFFDT
               (EMPLID,
                EMPL_RCD,
                ERNCD,
                EFFDT,
                RECORD_SOURCE)                       
        VALUES (&A.EMPLID,
                &A.EMPL_RCD,
                '513',
                $AsOfDate,
                'O')                                 
  end-sql
end-procedure


begin-procedure P550-Insert-Addl-Pay-Data
#debug9 Show 'P550-Insert-Addl-Pay-Data for Emplid: ' &a.emplid
 begin-sql on-error=SQL-Error-Found
    INSERT INTO PS_ADDL_PAY_DATA
               (EMPLID,
                EMPL_RCD,
                ERNCD,
                EFFDT,
                ADDL_SEQ,
                DEPTID,
                JOBCODE,
                POSITION_NBR,
                ACCT_CD,
                GL_PAY_TYPE,
                ADDL_PAY_SHIFT,
                OTH_HRS,
                HOURLY_RT,
                OTH_PAY,
                ADDLPAY_REASON,
                SEPCHK,
                EARNINGS_END_DT,
                GOAL_AMT,
                GOAL_BAL,
                OK_TO_PAY,
                DISABLE_DIR_DEP,
                PRORATE_ADDL_PAY,
                PRORATE_CUI_WEEKS,
                PAY_PERIOD1,
                PAY_PERIOD2,
                PAY_PERIOD3,
                PAY_PERIOD4,
                PAY_PERIOD5,
                STATE,
                LOCALITY,
                TAX_PERIODS,
                TAX_METHOD,
                ADDL_PAY_FREQUENCY,
                DED_TAKEN,
                DED_SUBSET_ID,
                DED_TAKEN_GENL,
                DED_SUBSET_GENL,
                PLAN_TYPE,
                BUSINESS_UNIT,
                COMP_RATECD,
                RECORD_SOURCE)             
        VALUES (&A.EMPLID,
                &A.EMPL_RCD,
                '513',
                $AsOfDate,
                1,
                ' ',
                ' ',
                ' ',
                ' ',
                ' ',
                ' ',
                #vac_hrs_awarded,
                0,
                0,
                ' ',
                0,
                '',
                0,
                0,
                'N',
                ' ',
                ' ',
                ' ',
                'N',
                'N',
                'N',
                'N',
                'N',
                ' ',
                ' ',
                0,
                ' ',
                ' ',
                ' ',
                ' ',
                ' ',
                ' ',
                ' ',
                'STDBU',                  !default value
                ' ',
                'O')                       
  end-sql
end-procedure


begin-procedure P600-Print-Detail-Report
#debug9 Show 'P600-Print-Detail-Report'
use-report Vacation-Detail-Report

  add 1 to #detail_count

  let $Acctcd = &A.ACCT_CD
  Do Get-Acct-cd-descr
!  Do Get-Employee-Name

  print &A.DEPTID                   (+1,1)
  print $AcctNameAbbrv              (,7)
  print &P.NAME                     (,24)
  print &A.EMPLID                   (,61)
  print &A.UNION_CD                 (,75)
  print &A.PAYGROUP                 (,85)
  print &A.JOBCODE                  (,98)

  move &A.REG_TEMP to $GEXREGTP_ftpt_code
  do GEXREGTP_translate_code
  print $GEXREGTP_ftpt_code_return  (,109)
 
  let $Year4   = '1'
  ! ISDVNPK 02/21/2011 ITG93005 Modifed this to select based on VACATION SENIOR DT
  If rtrim(datetostr(&B.GEX_VCN_SENIOR_DT,'dd-mon-yyyy'),' ') = ''
   do Format-DateTime(&B.SERVICE_DT,$ServiceDate,{DEFMDY},'','')
  else
   do Format-DateTime(&B.GEX_VCN_SENIOR_DT,$ServiceDate,{DEFMDY},'','')
  end-if
  ! ISDVNPK 02/21/2011 ITG93005 Modifed this to select based on VACATION SENIOR DT
  print $ServiceDate                (,116) 

  let $Year4   = '1'
  do Format-DateTime(&B.HIRE_DT,$HireDate,{DEFMDY},'','')
  print $HireDate                   (,129)

  print #hrs_worked                 (,145)   edit 99,999.99
  print #vac_hrs_awarded            (,166)   edit 99,999.99
end-procedure


begin-procedure SQL-Error-Found
#debug9 Show 'SQL-Error-Found'
  move $EmplId to $Format_EmplId xxx-xx-xxxx
  move 'Y' to $ErrorFound
  do Format-Number(#InputTran, $out, '99999')
  
  use-report report-log

  print $out              (+1,1)
  print $Format_EmplId    (,18)
  print $sql-error        (,35) 

 
  display $out noline 
  display '    ' noline 
  display $Format_EmplId
  display $sql-error
  display 'Program stopped by user request.'
  STOP
 
end-procedure


#Include 'gexxx922.sqc'  !Get GEX_RC_PAY run control parameters
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx913.sqc'  !Get Union code multiple row table
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getdatcd.sqc'  !Retrieves the asofyear, asofmonth etc.,
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'askaod.sqc'    !Ask-As-Of-Date routine
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#include 'gexregtp.sqc'  !Translates the REG_TEMP to Full_Part_time
#include 'getdptnm.sqc'  !Get department name
#include 'getactnm.sqc'  !Get account name
#include 'getcodta.sqc'  !Get company data
#Include 'getempnm.sqc'  !Get-Employee-Name
