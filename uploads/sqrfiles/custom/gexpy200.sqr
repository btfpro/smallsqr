!***********************************************************************
! GEXPY200:  COD - Local 507 Vacation Process / Report                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY200 :            COD - Local 507 Vacation Process / Report      *
!                                                                      *
! Narrative:            This SQR is designed to update paysheets for   *
!                       Local 507 EEs who request vacation.  The       *
!                       program will determine how many hours to pay   *
!                       vacation for based on the avg hours worked over*
!                       the last four weeks.  Vacation is requested as *
!                       an advance and FT/PT are both included         *
!                                                                      *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           pay_earnings                                   *
!                       pay_oth_earns                                  *
!                       job                                            *
!                       job_labor                                      *
!                                                                      *
! Written by:           C. Haver                                       *
!                                                                      *
! Normally Run:         Weekly - prior to final calc for B run only    *
!                       Add to the "Audit B Box" - the final calc will *
!                       need to run after this job completes in order  *
!                       to calc the new vacation hrs.
!                                                                      *
! Control Parms:        NONE                                           *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS   DATE       DESCRIPTION OF THE CHANGE                       *
!************************************************************************
! CJH        10/13/2000 Initial Creation                                *
! CJH        06/07/2001 Correct run control variable                    *
!                                                                       *
! AXL        04/09/2002 Added max effseq logic to main select.          *
!                                                                       *
! AXL        05/14/2002 Added max effseq logic to JOB_LABOR join in     *
!                       main select.                                    *
! PSR        07/31/2002 Modification for 8.3 Upgrade - UNION_CD from    *
!                       PS_JOB                                          *
!                                                                       *
! CWB        03/01/2003 Restore the join between PAY_EARNINGS and JOB.  *
! 									*
! ISDVSRC                                                               *
! CSR 10919  06/07/2005 Modified to incorporate language negotiated in  *
! ITG 32583             in 2003 labor agreement with local 507 and      *
!                       affecting employees hired on and after 10/06/03 *
!		        will receive: 1 Week - 40 Hrs  	                *
! CXA        08/19/2005 Modify to look at service date instead of       *
!                       hire date and rehire date.  Add service date    *
!                       column to report.  Fix date parameters          *
! VENDRBC    08/16/2007 HCM 9.0 Upgrade                                 *
! GEX-MXT    03/24/2008 Fixed for REHIRE DT issue in 9.0                *
! VENDKXY    10/08/2008 Added Premium Rate field for ITG 53712		*
!!VENDKXY    11/26/2008 Added the code for picking missing weeks hours  *
!			having bonus checks                             *
! ISDVMZA    05/21/2014 Exclude processing of post-2003 hire/rehire     *
!GEXPY_848_E3799_01 2016-01-27 Vahini Katta                            *
! ASF Contract Ratification                                             *
! Old version of the program is called gexpy200_old which is at Ruchi   *
!************************************************************************


#include 'setenv.sqc'    !Set environment
#include 'setup32.sqc'

  #define #x000_col_selection_criteria_a   2
  #define #x000_col_selection_criteria_b   5

  #define #col_emplid			1
  #define #col_name			13
  #define #col_servicedt		40
  #define #col_deptid			52
  #define #col_vac_paid			59
  #define #col_vac_earns                80
  #define #col_prem_paid		90
  #define #col_cur_wk			106
  #define #col_week_1    		124
  #define #col_week_2			142
  #define #col_week_3			160

  #define Post_2003       '06-OCT-2003'     !ISDVMZA --  05/21/2014

begin-heading 8
#debug9 show 'begin-heading  for-reports=(Vacation-Hours)'
  move 'Vacation Paid = Local 507' to $ReportTitle
  #Include 'stdhdg01.sqc'

!Emplid      Name                       Service Dt  Deptid Vacation  Hrs Paid   Vac Earns Premium Paid    Hrs - Cur Week    Hrs - Week 1      Hrs - Week 2      Hrs - Week 3
!         1         2         3         4         5         6         7         8         9         0         1         2         3         4         5         6         7
!123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890

  Print 'Emplid'               (5,{#col_emplid})
  Print 'Name'                 (,{#col_name})
  Print 'Service Dt'           (,{#col_servicedt})
  Print 'Deptid'               (,{#col_deptid})
  Print 'Vacation Hrs Paid'    (,{#col_vac_paid})
  Print 'Vac Earns'            (,{#col_vac_earns})
  Print 'Premium Paid'         (,{#col_prem_paid})
  Print 'Hrs - Cur Week'       (,{#col_cur_wk})
  Print 'Hrs - Week 1'         (,{#col_week_1})
  Print 'Hrs - Week 2'         (,{#col_week_2})
  Print 'Hrs - Week 3'         (,{#col_week_3})
  Print '-'                    (7,1,176) fill

end-heading


Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXPY200'
  Let $ReportTitle   =   'COD - Local 507 Vacation'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  display ' '
  show 'Report Began at ' &timeBegan ' on ' &dateBegan
  display ' '


  Let $GEXXX901_Company_Alias  = 'A.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'A.PAYGROUP'
  Let $GEXXX913_Union_cd_Alias = 'D.UNION_CD'
  Let $GEXXX916_Jobcode_Alias  = 'J.JOBCODE'
  Let $GEXXX924_Erncd_Alias = 'O.ERNCD'
  Let $GEXXX956_Erncd_Alias = 'B.ERNCD'

  If $prcs_process_instance = ''

    let $Prcs_OPRID = 'SQRW/pssqr'
    let $PRCS_RUN_CNTL_ID = 'manual'

  Display 'Enter Company/Paygroup or leave blank to exit.'
  While 1=1
    Input $In-Company Maxlen=3 'Company'
    Uppercase $In-Company
    If Rtrim($In-Company, ' ') = ''
      Break
    Else
      Input $In-Paygroup Maxlen=3 'Paygroup'
      Uppercase $In-Paygroup
      If Rtrim($In-Paygroup, ' ') = ''
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''')'
      Else
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''' And ' || $GEXXX901_Paygroup_Alias || ' = '''  || $In-Paygroup || ''')'
      End-If
      Add 1 To #GEX_RC_PAYGROUP_ROWS
      If #GEX_RC_PAYGROUP_ROWS = 1
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While

 If #GEX_RC_PAYGROUP_ROWS = 0
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ')'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
  End-If


 Display 'Enter Union Code or leave blank to exit.'
  While 1=1
    Input $In-Union-Cd Maxlen=3 'Union Code'
    Uppercase $In-Union-Cd
    If Rtrim($In-Union-Cd, ' ') = ''
      Break
    Else
        Let $Include_Condition = '(' || $GEXXX913_Union_cd_Alias || ' = '''  || $In-Union-cd || ''')'
      Add 1 To #GEX_RC_UNION_CD_ROWS
      If #GEX_RC_UNION_CD_ROWS = 1
        Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = $GEXXX913_INCLUDE_UNION_CD_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While

 If #GEX_RC_UNION_CD_ROWS = 0
    Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = '1=1'
    Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = $GEXXX913_INCLUDE_UNION_CD_CRITERIA || ')'
    Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = $GEXXX913_INCLUDE_UNION_CD_CRITERIA
  End-If

  Display 'Enter Truck Driver Jobcode(s) or leave blank to exit.'
  While 1=1
    Input $In-Jobcode Maxlen=6 'Jobcode'
    Uppercase $In-Jobcode
    If Rtrim($In-Jobcode, ' ') = ''
      Break
    Else
        Let $Include_Condition = '(' || $GEXXX916_Jobcode_Alias || ' = '''  || $In-Jobcode || ''')'
      Add 1 To #GEX_RC_JOBCODE_ROWS
      If #GEX_RC_JOBCODE_ROWS = 1
        Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = $GEXXX916_INCLUDE_JOBCODE_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While

  If #GEX_RC_JOBCODE_ROWS = 0
    Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '1=1'
    Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = $GEXXX916_INCLUDE_JOBCODE_CRITERIA || ')'
    Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = $GEXXX916_INCLUDE_JOBCODE_CRITERIA
  End-If


    Input #In-weeks-req Maxlen=1 '# Weeks used for calculation'
    let #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA = #In-weeks-req

    Input #In-max-weeks Maxlen=2 'Max # vac weeks allowed'
    let #GEXXX922_INCLUDE_MAX_WEEKS_CRITERIA = #In-max-weeks

    Input #In-Guaran-FT Maxlen=2 'Guaranteed Vac Hrs (FT)'
    let #GEXXX922_INCLUDE_GUARAN_FT_CRITERIA = #In-guaran-FT

    Input #In-truck Maxlen=2 'Guaranteed Vac Hrs for Truck Drivers'
    let #GEXXX922_INCLUDE_GUARAN_TRUCK_CRITERIA = #In-truck

    Input #In-Guaran-PT Maxlen=2 'Guaranteed Vac Hrs (PT)'
    let #GEXXX922_INCLUDE_GUARAN_PT_CRITERIA = #In-guaran-PT

    Input #In-elig-wk-FT Maxlen=2 'Hrs Req for Eligible Week (FT)'
    let #GEXXX922_INCLUDE_ELIG_WK_FT_CRITERIA = #In-elig-wk-FT

    Input #In-elig-wk-PT Maxlen=2 'Hrs Req for Eligible Week (PT)'
    let #GEXXX922_INCLUDE_ELIG_WK_PT_CRITERIA = #In-elig-wk-PT

     Display 'Enter Vacation Earnings Codes(s) or leave blank to exit.'
      While 1=1
       Input $In-VAC-Erncd Maxlen=3 'Vacation Earnings Code'
       Uppercase $In-VAC-Erncd
       If Rtrim($In-VAC-Erncd, ' ') = ''
         Break
       Else
         Let $Include_Condition = '(' || $GEXXX956_Erncd_Alias || ' = '''  || $In-VAC-Erncd || ''')'
         Add 1 To #GEX_RC_ERNCD_ROWS_HL
          If #GEX_RC_ERNCD_ROWS_HL = 1
            Let $GEXXX956_INCLUDE_ERNCD_CRITERIA = '(' || $Include_Condition
           Else
            Let $GEXXX956_INCLUDE_ERNCD_CRITERIA = $GEXXX956_INCLUDE_ERNCD_CRITERIA || ' Or '  || $Include_Condition
          End-If
       End-If
     End-While

 If #GEX_RC_ERNCD_ROWS_HL = 0
    Let $GEXXX956_INCLUDE_ERNCD_CRITERIA = '1=1'
    Let $GEXXX956_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'ALL'
 Else
    Let $GEXXX956_INCLUDE_ERNCD_CRITERIA = $GEXXX956_INCLUDE_ERNCD_CRITERIA || ')'
    Let $GEXXX956_INCLUDE_ERNCD_DISPLAY_CRITERIA = $GEXXX956_INCLUDE_ERNCD_CRITERIA
  End-If
    Input $In-erncd-prem Maxlen=3 'Earnings Code used for Night Premium'
    let $GEXXX922_INCLUDE_ERNCD_PREMIUM_CRITERIA = $In-erncd-prem

    Input $In-erncd-prem-ot Maxlen=3 'Earnings Code used for Night Premium OT'
    let $GEXXX922_INCLUDE_ERNCD_OT_PREMIUM_CRITERIA = $In-erncd-prem-ot

    Input $In-erncd-prem-dbl Maxlen=3 'Earnings Code used for Night Premium DBL'
    let $GEXXX922_INCLUDE_ERNCD_DBL_PREMIUM_CRITERIA = $In-erncd-prem-dbl

  Else
   Do GEXXX922-Select-Parameters
   Do GEXXX901-Select-Company-Paygroup-Parameters
   Do GEXXX913-Select-UNION-CD-Parameters
   Do GEXXX924-Select-ERNCD-Parameters
   Do GEXXX956-Select-ERNCD-Parameters
   Do GEXXX916-Select-Jobcode-Parameters


   let #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA = #GEX_RC_PAY.GEX_VAC_WKS
   let #GEXXX922_INCLUDE_MAX_WEEKS_CRITERIA = #GEX_RC_PAY.GEX_MAX_WKS_ALLOW
   let #GEXXX922_INCLUDE_GUARAN_FT_CRITERIA = #GEX_RC_PAY.GEX_GUARAN_HRS_FT
   let #GEXXX922_INCLUDE_GUARAN_TRUCK_CRITERIA = #GEX_RC_PAY.GEX_GUAR_HRS_TRUCK
   let #GEXXX922_INCLUDE_GUARAN_PT_CRITERIA = #GEX_RC_PAY.GEX_GUARAN_HRS_PT
   let #GEXXX922_INCLUDE_ELIG_WK_FT_CRITERIA = #GEX_RC_PAY.GEX_HRS_REQ_FT
   let #GEXXX922_INCLUDE_ELIG_WK_PT_CRITERIA = #GEX_RC_PAY.GEX_HRS_REQ_PT
   let $GEXXX922_INCLUDE_ERNCD_PREMIUM_CRITERIA = $GEX_RC_PAY.ERNCD_SPCL
   let $GEXXX922_INCLUDE_ERNCD_OT_PREMIUM_CRITERIA = $GEX_RC_PAY.ERNCD_OT_HRS
   let $GEXXX922_INCLUDE_ERNCD_DBL_PREMIUM_CRITERIA = $GEX_RC_PAY.ERNCD_ORD_INCOME
  End-If

  let $GEXXX922_INCLUDE_WEEKS_USED_DISPLAY_CRITERIA = #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA
  let $GEXXX922_INCLUDE_MAX_WEEKS_DISPLAY_CRITERIA = #GEXXX922_INCLUDE_MAX_WEEKS_CRITERIA
  let $GEXXX922_INCLUDE_GUARAN_FT_DISPLAY_CRITERIA = #GEXXX922_INCLUDE_GUARAN_FT_CRITERIA
  let $GEXXX922_INCLUDE_GUARAN_TRUCK_DISPLAY_CRITERIA = #GEXXX922_INCLUDE_GUARAN_TRUCK_CRITERIA
  let $GEXXX922_INCLUDE_GUARAN_PT_DISPLAY_CRITERIA = #GEXXX922_INCLUDE_GUARAN_PT_CRITERIA
  let $GEXXX922_INCLUDE_ELIG_WK_FT_DISPLAY_CRITERIA = #GEXXX922_INCLUDE_ELIG_WK_FT_CRITERIA
  let $GEXXX922_INCLUDE_ELIG_WK_PT_DISPLAY_CRITERIA = #GEXXX922_INCLUDE_ELIG_WK_PT_CRITERIA
  let $GEXXX922_INCLUDE_ERNCD_PREMIUM_DISPLAY_CRITERIA = $GEXXX922_INCLUDE_ERNCD_PREMIUM_CRITERIA
  let $GEXXX922_INCLUDE_ERNCD_OT_PREMIUM_DISPLAY_CRITERIA = $GEXXX922_INCLUDE_ERNCD_OT_PREMIUM_CRITERIA
  let $GEXXX922_INCLUDE_ERNCD_DBL_PREMIUM_DISPLAY_CRITERIA = $GEXXX922_INCLUDE_ERNCD_DBL_PREMIUM_CRITERIA
  let $X000_ORDER_BY = 'DEPTID, EMPLID'



  show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA      = ' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
  show '$GEXXX913_INCLUDE_UNION_CD_CRITERIA              = ' $GEXXX913_INCLUDE_UNION_CD_CRITERIA
  show '$GEXXX922_INCLUDE_WEEKS_USED_CRITERIA            = ' #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA
  show '$GEXXX922_INCLUDE_MAX_WEEKS_CRITERIA             = ' #GEXXX922_INCLUDE_MAX_WEEKS_CRITERIA
  show '$GEXXX922_INCLUDE_GUARAN_FT_CRITERIA             = ' #GEXXX922_INCLUDE_GUARAN_FT_CRITERIA
  show '$GEXXX916_INCLUDE_GUARAN_JOBCODE_CRITERIA        = ' $GEXXX916_INCLUDE_JOBCODE_CRITERIA
  show '$GEXXX922_INCLUDE_GUARAN_TRUCK_CRITERIA          = ' #GEXXX922_INCLUDE_GUARAN_TRUCK_CRITERIA
  show '$GEXXX922_INCLUDE_GUARAN_PT_CRITERIA             = ' #GEXXX922_INCLUDE_GUARAN_PT_CRITERIA
  show '$GEXXX922_INCLUDE_ELIG_WK_FT_CRITERIA            = ' #GEXXX922_INCLUDE_ELIG_WK_FT_CRITERIA
  show '$GEXXX922_INCLUDE_ELIG_WK_PT_CRITERIA            = ' #GEXXX922_INCLUDE_ELIG_WK_PT_CRITERIA
  show '$GEXXX956_INCLUDE_ERNCD_CRITERIA                 = ' $GEXXX956_INCLUDE_ERNCD_CRITERIA
  show '$GEXXX922_INCLUDE_ERNCD_PREMIUM_CRITERIA         = ' $GEXXX922_INCLUDE_ERNCD_PREMIUM_CRITERIA
  show '$GEXXX922_INCLUDE_ERNCD_OT_PREMIUM_CRITERIA      = ' $GEXXX922_INCLUDE_ERNCD_OT_PREMIUM_CRITERIA
  show '$GEXXX922_INCLUDE_ERNCD_DBL_PREMIUM_CRITERIA     = ' $GEXXX922_INCLUDE_ERNCD_DBL_PREMIUM_CRITERIA
  show '#GEX_RC_PAY.GEX_PREMIUM_RATE  									 = ' $GEX_RC_PAY.GEX_PREMIUM_RATE  					!VENDKXY added it for ITG 53712



  print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,{#x000_col_selection_criteria_a})
  print '$Prcs_OPRID          ='                                  (+1,{#x000_col_selection_criteria_b})
  print $Prcs_OPRID                                               (0,+2)
  print '$PRCS_RUN_CNTL_ID    ='                                  (+1,{#x000_col_selection_criteria_b})
  print $PRCS_RUN_CNTL_ID                                         (0,+2)

  print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,{#x000_col_selection_criteria_a})
  print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA       (0,+2)
  print '$GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA	          (0,+2)
  print '$GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA            ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA                  (0,+2)
  print '$GEXXX922_INCLUDE_WEEKS_USED_DISPLAY_CRITERIA       ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX922_INCLUDE_WEEKS_USED_DISPLAY_CRITERIA             (0,+2)
  print '$GEXXX922_INCLUDE_MAX_WEEKS_DISPLAY_CRITERIA        ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX922_INCLUDE_MAX_WEEKS_DISPLAY_CRITERIA              (0,+2)
  print '$GEXXX922_INCLUDE_GUARAN_FT_DISPLAY_CRITERIA        ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX922_INCLUDE_GUARAN_FT_DISPLAY_CRITERIA              (0,+2)
  print '$GEXXX916_INCLUDE_GUARAN_JOBCODE_DISPLAY_CRITERIA   ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA                (0,+2)
  print '$GEXXX922_INCLUDE_GUARAN_TRUCK_DISPLAY_CRITERIA     ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX922_INCLUDE_GUARAN_TRUCK_DISPLAY_CRITERIA           (0,+2)
  print '$GEXXX922_INCLUDE_GUARAN_PT_DISPLAY_CRITERIA        ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX922_INCLUDE_GUARAN_PT_DISPLAY_CRITERIA              (0,+2)
  print '$GEXXX922_INCLUDE_ELIG_WK_FT_DISPLAY_CRITERIA       ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX922_INCLUDE_ELIG_WK_FT_DISPLAY_CRITERIA             (0,+2)
  print '$GEXXX922_INCLUDE_ELIG_WK_PT_DISPLAY_CRITERIA       ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX922_INCLUDE_ELIG_WK_PT_DISPLAY_CRITERIA             (0,+2)
  print '$GEXXX956_INCLUDE_ERNCD_DISPLAY_CRITERIA            ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX956_INCLUDE_ERNCD_DISPLAY_CRITERIA                  (0,+2)
  print '$GEXXX922_INCLUDE_ERNCD_PREMIUM_DISPLAY_CRITERIA    ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX922_INCLUDE_ERNCD_PREMIUM_DISPLAY_CRITERIA          (0,+2)
  print '$GEXXX922_INCLUDE_ERNCD_OT_PREMIUM_DISPLAY_CRITERIA  ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX922_INCLUDE_ERNCD_OT_PREMIUM_DISPLAY_CRITERIA        (0,+2)
  print '$GEXXX922_INCLUDE_ERNCD_DBL_PREMIUM_DISPLAY_CRITERIA  ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX922_INCLUDE_ERNCD_DBL_PREMIUM_DISPLAY_CRITERIA      (0,+2)
  PRINT '#GEX_RC_PAY.GEX_PREMIUM_RATE  ='         									(+1,{#x000_col_selection_criteria_b}) 
  print $GEX_RC_PAY.GEX_PREMIUM_RATE      												(0,+2)						

  print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,{#x000_col_selection_criteria_a})
  print '$X000_ORDER_BY                                      ='   (+1,{#x000_col_selection_criteria_b})
  print $X000_ORDER_BY 	(0,+2)

  let #page-count = 0
  NEW-PAGE



End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'

 do get-pay-end

Begin-SELECT On-Error=P290-SQL-Error('P200-Main-Process')
B.COMPANY
B.PAYGROUP
B.PAY_END_DT
B.OFF_CYCLE
B.PAGE_NUM
B.LINE_NUM
B.ADDL_NBR
A.DEPTID
A.EMPLID
A.EMPL_RCD
A.JOBCODE
B.ERNCD
B.OTH_HRS
B.OTH_EARNS
B.SEPCHK
B.JOB_PAY
B.ADD_GROSS
B.TAX_METHOD
B.ADDL_SEQ
B.TL_SOURCE
B.RATE_USED
B.BAS_CREDIT_SW
B.COMP_RATECD
B.COMPRATE
B.COMPRATE_USED
B.EIM_KEY		
B.HRS_DIST_SW
B.XREF_NUM
B.EX_DOC_ID
B.EX_DOC_TYPE
B.EX_LINE_NBR
B.CURRENCY_CD
B.VC_PLAN_ID
B.VC_PAYOUT_PRD_ID
B.GB_GROUP_ID
B.APPLID
B.AWARD_DATE
B.NOTIFY_STATUS
D.FULL_PART_TIME &full_part
PER.NAME &name
A.EARNS_BEGIN_DT
A.EARNS_END_DT
EMP1.SERVICE_DT
  Do Format-DateTime(&EMP1.SERVICE_DT, $service_date, {DEFDATE}, '', '')

  let $ee_eligible = 'Y'
  let $ok_to_pay = 'Y'
  let $error = 'N'
  let $full_part = &full_part
  let $name = &name
  
 show 'A.EMPLID :' &A.EMPLID
 show '$name    :' $name
 show '&B.ERNCD :' &B.ERNCD
 
  print &A.EMPLID (+1,{#col_emplid})
  print $name (,{#col_name})
  print $service_date (,{#col_servicedt})
  print &A.DEPTID (,{#col_deptid})
  print &B.ERNCD (,{#col_vac_earns})

  move &B.OTH_HRS to #weeks_requested
  show '#weeks_requested :' #weeks_requested

  if #weeks_requested > #GEXXX922_INCLUDE_MAX_WEEKS_CRITERIA

     display 'ERROR: Employee has requested *** ' noline
     display &A.EMPLID  noline
     display '**'
     display #weeks_requested noline
     display ' *** weeks of vacation.'
     print 'ERROR: Employee has requested *** ' (+1,1,35)
     print #weeks_requested (0,+1,5)
     print ' *** weeks of vacation.' (0,+1,25)
     move 'Y' to $error
  end-if

  if &B.SEPCHK = 0
     display 'ERROR: Vacation must be requested in a Separate Check. Please re-enter the vacation request ' noline
     print 'ERROR: Vacation must be requested in a Separate Check. Please re-enter the vacation request ' (+1,1,80)
     move 'Y' to $error
  end-if

  if $error = 'N'
    let $ee_eligible = 'Y'
    do get-hours-worked

! if the current hours are shifted (PS_PAY_EARNINGS.SHIFT > 0), then
!  all of the vacation hours should be shifted as well
       do get-applicable-premium
       do update-pay-oth-earns
       if $premium_found = 'Y'
       !GEXPY_848_E3799_01 2016-01-27 Vahini Katta Begins
          do check-night-premium
          show '$Prem_Exists :' $Prem_Exists
          if $Prem_Exists='N'
             do Insert-Premium-Pay
          else
             do Update-Premium-Pay
          end-if   
       !GEXPY_848_E3799_01 2016-01-27 Vahini Katta Ends   
       end-if
       do update-pay-earnings
  end-if

FROM PS_PAY_EARNINGS A,
     PS_PAY_OTH_EARNS B,
     PS_JOB D,
     PS_PERSONAL_DATA PER,
     PS_EMPLOYMENT EMP1
WHERE A.COMPANY = B.COMPANY
  AND A.PAYGROUP = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND A.OFF_CYCLE = B.OFF_CYCLE
  AND A.PAGE_NUM = B.PAGE_NUM
  AND A.LINE_NUM = B.LINE_NUM
  AND A.ADDL_NBR = B.ADDL_NBR
  AND A.OFF_CYCLE = 'N'
  AND A.PAY_END_DT = $pay_end_dt
  AND D.EMPLID = PER.EMPLID
  and d.emplid = a.emplid
  and d.empl_rcd = a.empl_rcd
  AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA]
  AND [$GEXXX956_INCLUDE_ERNCD_CRITERIA] 
  AND D.EFFDT = (select max(effdt) from ps_job
                 where d.emplid    = emplid
                   and d.empl_rcd = empl_rcd
                   and effdt    <= $pay_end_dt)
  AND D.EFFSEQ =(SELECT MAX(EFFSEQ) FROM PS_JOB 	
                 WHERE d.EMPLID =    EMPLID	
                   AND d.EMPL_RCD = EMPL_RCD
                   AND d.EFFDT = EFFDT)		
  AND [$GEXXX913_INCLUDE_UNION_CD_CRITERIA]
  AND D.EMPLID = EMP1.EMPLID
  AND D.EMPL_RCD = EMP1.EMPL_RCD
  and B.SEPCHK <> 0
  and emp1.service_dt <  {Post_2003}  
End-SELECT
End-Procedure

!*********************************************************************
begin-procedure get-hours-worked
 let #weeks_retrieved = 0
 let $valid_week = 'N'
 let #total_hrs = 0
 let $done = 'N'

begin-SELECT On-Error=P290-SQL-Error('get-hours-worked')
P.COMPANY
P.PAYGROUP
P.PAY_END_DT
sum(O.OTH_HRS) &sum_hrs

 ! Full-time EEs must work a minimum of 40 hours to have that week eligible
 ! for vacation calculations.  Part-time EEs must work a minimum of 20 hours
 ! to have that week eligible for vacation calculations.
 
   let #sum_hrs = &sum_hrs
         let #weeks_retrieved = #weeks_retrieved + 1
	       show 'W/E              :' &P.PAY_END_DT
	       show '#weeks_retrieved :' #weeks_retrieved
	       show '#sum_hrs         :' #sum_hrs

	       evaluate #weeks_retrieved
	       when = 1
	          Print #sum_hrs (,{#col_cur_wk})
	          break
	       when = 2
	          Print #sum_hrs (,{#col_week_1})
	          break
	       when = 3
	          Print #sum_hrs (,{#col_week_2})
	          break
	       when = 4
	          Print #sum_hrs (,{#col_week_3})
	          break
	       end-evaluate

	       let #total_hrs = #total_hrs + #sum_hrs
	       show '#total_hrs :' #total_hrs
        
FROM PS_PAY_EARNINGS P,
     PS_PAY_OTH_EARNS O
WHERE P.COMPANY = O.COMPANY
  AND P.PAYGROUP = O.PAYGROUP
  AND P.PAY_END_DT = O.PAY_END_DT
  AND P.OFF_CYCLE = O.OFF_CYCLE
  AND P.PAGE_NUM = O.PAGE_NUM
  AND P.LINE_NUM = O.LINE_NUM
  AND P.ADDL_NBR = O.ADDL_NBR
  AND P.OFF_CYCLE = 'N'
  AND (P.PAY_END_DT>=$4weeks_dt AND P.PAY_END_DT <= $pay_end_dt)
  AND O.ERNCD not in ('513','522')
  AND P.EMPLID = &A.EMPLID
GROUP BY P.COMPANY, P.PAYGROUP, P.PAY_END_DT
ORDER BY P.PAY_END_DT desc
end-SELECT

 !GEXPY_848_E3799_01 2016-01-27 Vahini Katta Begins
 if #total_hrs=0
    let $ee_eligible = 'N'
    display 'Could not find ' noline
    display ' valid weeks of earnings for employee: ' noline
    display &A.EMPLID
    print 'Could not find ' (+1,1,16)
    print #GEXXX922_INCLUDE_WEEKS_USED_CRITERIA (,21)
    print ' valid weeks of earnings for employee: ' (,40)
    print &A.EMPLID (,80)
 end-if
 !GEXPY_848_E3799_01 2016-01-27 Vahini Katta Ends
 
end-procedure

!*********************************************************************
!Gets the Pay End Date to process for
!*********************************************************************
begin-procedure Get-Pay-End
 let $Found = 'N'
begin-select loops=1 On-Error=P290-SQL-Error('get-pay-end')

Y1.PAY_END_DT
Y1.pay_begin_dt
next_day(trunc(Y1.PAY_END_DT-22),'Sat')  &4weeks_dt

  move 'Y' to $Found
  move &Y1.PAY_END_DT to $pay_end_dt
  move &Y1.PAY_BEGIN_DT TO $pay_begin_dt
  move &4weeks_dt to $4weeks_dt

FROM PS_PAY_CALENDAR Y1
WHERE Y1.PAY_SHEETS_RUN = 'Y'
  AND Y1.PAY_CONFIRM_RUN = 'Y'
  AND Y1.PAY_END_DT = (SELECT MAX(PAY_END_DT)
                         FROM PS_PAY_CALENDAR
                        WHERE PAY_SHEETS_RUN = 'Y'
                          AND PAY_CONFIRM_RUN = 'Y'
                         AND PAY_END_DT <= $AsOfToday)
  AND Y1.RUN_ID > ' '

end-select

  if $Found = 'N'
    display 'Error --  Pay Calendar not found or not setup for the Run ID.'
    print 'Error --  Pay Calendar not found or not setup for the Run ID.' (+1,1,60)
  else
    display 'Processing for Pay End Date: ' noline
    display $pay_end_dt
    display '4 Weeks Dt: ' noline
    display $4weeks_dt
  end-if
  
end-procedure

!***************************************************************************
Begin-Procedure update-pay-oth-earns
#debug9 Show 'Update-pay-oth-earns'

! Truck Drivers jobcodes receive different guaranteed vacation hrs than other jobs
  if #GEX_RC_JOBCODE_ROWS <> 0
     do check-jobcode
      if $job_found = 'Y'
        let #GEXXX922_INCLUDE_GUARAN_FT_CRITERIA = #GEXXX922_INCLUDE_GUARAN_TRUCK_CRITERIA
        let #GEXXX922_INCLUDE_GUARAN_PT_CRITERIA = #GEXXX922_INCLUDE_GUARAN_TRUCK_CRITERIA
        let $job_found = 'N'
      end-if
  end-if

  if #total_hrs>0
     let $ee_eligible = 'Y'
     let #hrs_paid = ((#total_hrs/#GEXXX922_INCLUDE_WEEKS_USED_CRITERIA) * (#weeks_requested))

     display 'calculated hours paid: ' noline
     display #hrs_paid

      Let $hire_dt    = &EMP1.SERVICE_DT
      Let $hire_date_yyyymmdd   = datetostr(strtodate($hire_dt,'DD-MON-YYYY'),'YYYYMMDD')
     
       if $full_part = 'F' and #hrs_paid < #GEXXX922_INCLUDE_GUARAN_FT_CRITERIA  ! 43
         #debug8 show 'entered into $full_part = F and hiredate is  < 20031006 '
         let #hrs_paid = #GEXXX922_INCLUDE_GUARAN_FT_CRITERIA  ! 43
       else
         if $full_part = 'P' and #hrs_paid < #GEXXX922_INCLUDE_GUARAN_FT_CRITERIA   !20
            let #hrs_paid = #GEXXX922_INCLUDE_GUARAN_PT_CRITERIA  !20
          end-if
       end-if

  else
     let #hrs_paid = #weeks_requested
     let $ee_eligible = 'N'
  end-if


! round hours paid to the nearest whole hour
 let #hrs_paid = round(#hrs_paid,0)

 if $ee_eligible = 'N'
    let $ok_to_pay = 'N'
 else
    print #hrs_paid (,{#col_vac_paid})
 end-if
 SHOW 'ENTERING INTO UPDATE PAY_OTH_EARNS'
 show '&B.ERNCD :' &B.ERNCD
 show '#hrs_paid:' #hrs_paid

Begin-SQL On-Error=P290-SQL-Error('Update-pay-oth-earns')
    Update ps_pay_oth_earns uoe
       Set uoe.oth_hrs = #hrs_paid
           Where uoe.company = &B.COMPANY
             and uoe.paygroup = &B.PAYGROUP
             and uoe.pay_end_dt = &B.PAY_END_DT
             and uoe.off_cycle = &B.OFF_CYCLE
             and uoe.page_num = &B.PAGE_NUM
             and uoe.line_num = &B.LINE_NUM
             and uoe.addl_nbr = &B.ADDL_NBR
             and uoe.erncd = &B.ERNCD
End-SQL

end-procedure

!GEXPY_848_E3799_01 2016-01-27 Vahini Katta Begins
!**********************************************************************
begin-procedure Check-Night-Premium
#debug9 SHOW 'ENTERING INTO Check-Night-Premium '
 Move 'N' to $Prem_Exists
 Move 0 to #Night_Prem
begin-select
oth_pay &oth_pay

   Move 'Y' to $Prem_Exists
   Move &oth_pay to #Night_Prem
   show '#Night_Prem :' #Night_Prem
   
from ps_pay_oth_earns
where company=&B.COMPANY
and paygroup=&B.PAYGROUP
and pay_end_dt=&B.PAY_END_DT
and off_cycle=&B.OFF_CYCLE
and page_num=&B.PAGE_NUM
and line_num=&B.LINE_NUM
and addl_nbr=&B.ADDL_NBR
and erncd=$GEXXX922_INCLUDE_ERNCD_PREMIUM_CRITERIA
end-select
end-procedure

!**********************************************************************
begin-procedure Update-Premium-Pay
#debug9 SHOW 'ENTERING INTO Check-Night-Premium '
!**********************************************************************
    move $GEX_RC_PAY.GEX_PREMIUM_RATE to #GEX_RC_PAY.GEX_PREMIUM_RATE
    SHOW 'ENTERING INTO Check-Night-Premium '
    show '#hrs_paid                    :' #hrs_paid
    show '#GEX_RC_PAY.GEX_PREMIUM_RATE :' #GEX_RC_PAY.GEX_PREMIUM_RATE
    show '#Night_Prem                  :' #Night_Prem
    show '$GEXXX922_INCLUDE_ERNCD_PREMIUM_CRITERIA:' $GEXXX922_INCLUDE_ERNCD_PREMIUM_CRITERIA
        
    let #update_oth_pay = (#hrs_paid * #GEX_RC_PAY.GEX_PREMIUM_RATE) + #Night_Prem
    
    show '#update_oth_pay              :' #update_oth_pay
    show '&B.COMPANY                   :' &B.COMPANY
    show '&B.PAYGROUP                  :' &B.PAYGROUP
    show '&B.PAY_END_DT                :' &B.PAY_END_DT
    show '&B.OFF_CYCLE                 :' &B.OFF_CYCLE
    show '&B.PAGE_NUM                  :' &B.PAGE_NUM
    show '&B.LINE_NUM                  :' &B.LINE_NUM
    show '&B.ADDL_NBR                  :' &B.ADDL_NBR
    
begin-sql
Update PS_PAY_OTH_EARNS
set oth_pay=#update_oth_pay
where company=&B.COMPANY
and paygroup=&B.PAYGROUP
and pay_end_dt=&B.PAY_END_DT
and off_cycle=&B.OFF_CYCLE
and page_num=&B.PAGE_NUM
and line_num=&B.LINE_NUM
and addl_nbr=&B.ADDL_NBR
and erncd=$GEXXX922_INCLUDE_ERNCD_PREMIUM_CRITERIA
end-sql
end-procedure

!GEXPY_848_E3799_01 2016-01-27 Vahini Katta Ends

begin-procedure insert-premium-pay
#debug9 SHOW 'ENTERING INTO insert-premium-pay '
    show 'ENTERING INTO insert-premium-pay'
    show 'emplid '		&a.emplid
    show '&B.COMPANY '		&B.COMPANY
    show '&B.PAYGROUP '		&B.PAYGROUP
    show '&B.PAY_END_DT '	&B.PAY_END_DT
    show '&B.OFF_CYCLE '	&B.OFF_CYCLE
    show '&B.PAGE_NUM '		&B.PAGE_NUM
    show '&B.LINE_NUM '		&B.LINE_NUM
    show '&B.ADDL_NBR '		&B.ADDL_NBR
    show '$GEXXX922_INCLUDE_ERNCD_PREMIUM_CRITERIA ' $GEXXX922_INCLUDE_ERNCD_PREMIUM_CRITERIA

    move $GEX_RC_PAY.GEX_PREMIUM_RATE to #GEX_RC_PAY.GEX_PREMIUM_RATE
    show '#GEX_RC_PAY.GEX_PREMIUM_RATE' #GEX_RC_PAY.GEX_PREMIUM_RATE 

    let #temp_show = #hrs_paid * #GEX_RC_PAY.GEX_PREMIUM_RATE
    show ' #hrs_paid * #GEX_RC_PAY.GEX_PREMIUM_RATE' #temp_show  

begin-sql On-Error=P290-SQL-Error('insert-premium-pay')
    insert into ps_pay_oth_earns poe values (
        &B.COMPANY,
        &B.PAYGROUP,
        &B.PAY_END_DT,
        &B.OFF_CYCLE,
        &B.PAGE_NUM,
        &B.LINE_NUM,
        &B.ADDL_NBR,
        $GEXXX922_INCLUDE_ERNCD_PREMIUM_CRITERIA,    ! Night Premium COD Warehouse
        &B.SEPCHK,
        &B.JOB_PAY,
        0,                             ! Avg Vacation Hours paid
        #temp_show,                    ! OTH_PAY !VENDKXY Added Premium Rate field for ITG 53712
        0,                             ! OTH_EARNS
        &B.ADD_GROSS,
        &B.TAX_METHOD,
        &B.ADDL_SEQ,
        &B.TL_SOURCE,
        &B.RATE_USED,
        &B.BAS_CREDIT_SW,
        &B.COMP_RATECD,
        &B.COMPRATE,
        &B.COMPRATE_USED,
        &B.HRS_DIST_SW,
        &B.XREF_NUM,
	      &B.EX_DOC_ID,
	      &B.EX_DOC_TYPE,
	      &B.EX_LINE_NBR,
	      &B.CURRENCY_CD,
	      &B.VC_PLAN_ID,
	      &B.VC_PAYOUT_PRD_ID,
	      &B.GB_GROUP_ID,
	      &B.APPLID,
	      &B.AWARD_DATE,
        &B.NOTIFY_STATUS,
	      &B.EIM_KEY)
	!******************************************************************

end-sql
end-procedure


!**********************************************************************
begin-procedure update-pay-earnings

! Update pay earnings to set the pay line status to 'Updated' so that a recalc occurs.

#debug9 SHOW 'ENTERED INTO UPDATE PAY_EARNS'

begin-sql On-Error=P290-SQL-Error('Update-pay-earnings')
UPDATE ps_pay_earnings ue
       set ue.pay_line_status = 'U',
           ue.ok_to_pay = $ok_to_pay,
           ue.tax_periods = #weeks_requested
 WHERE ue.company = &B.COMPANY
   AND ue.paygroup = &B.PAYGROUP
   AND ue.pay_end_dt = &B.pay_end_dt
   AND ue.off_cycle = &B.off_cycle
   AND ue.page_num = &B.page_num
   AND ue.line_num = &B.line_num
   AND ue.addl_nbr = &B.addl_nbr
end-sql

end-procedure

!**********************************************************************
begin-procedure get-applicable-premium

! Check if premium earnings (178 - Night Premium COD Warehouse) (if any) were paid on the worked hours.
! This same premium earnings should be added to the payline that contains the 513 vacation earnings.

let $premium_found = 'N'

begin-SELECT On-Error=P290-SQL-Error('Get-applicable-premium')
S.COMPANY
S.PAYGROUP
S.PAY_END_DT
S.OFF_CYCLE
S.PAGE_NUM
S.LINE_NUM
S.ADDL_NBR
S.EMPLID
S.SHIFT

  move 'Y' to $premium_found

FROM PS_PAY_EARNINGS S,
     PS_PAY_OTH_EARNS T
WHERE S.COMPANY = T.COMPANY
  AND S.PAYGROUP = T.PAYGROUP
  AND S.PAY_END_DT = T.PAY_END_DT
  AND S.OFF_CYCLE = T.OFF_CYCLE
  AND S.PAGE_NUM = T.PAGE_NUM
  AND S.LINE_NUM = T.LINE_NUM
  AND S.ADDL_NBR = T.ADDL_NBR
  AND S.COMPANY = &B.COMPANY
  AND S.PAYGROUP = &B.PAYGROUP
  AND S.PAY_END_DT = &B.PAY_END_DT
  AND S.OFF_CYCLE = &B.OFF_CYCLE
  AND S.PAGE_NUM = &B.PAGE_NUM
  AND S.EMPLID = &A.EMPLID
  AND (T.ERNCD = $GEXXX922_INCLUDE_ERNCD_PREMIUM_CRITERIA     ! 178 = Night Premium COD Warehouse
   OR T.ERNCD = $GEXXX922_INCLUDE_ERNCD_OT_PREMIUM_CRITERIA   ! 179 = Night Premium OT COD Warehouse
   OR T.ERNCD = $GEXXX922_INCLUDE_ERNCD_DBL_PREMIUM_CRITERIA) ! 180 = Night Premium DBL COD Warehouse
end-SELECT

 if $premium_found = 'Y'
    print 'Y' (,{#col_prem_paid})
 else
    print 'N' (,{#col_prem_paid})
 end-if

end-procedure
!**********************************************************************
begin-procedure check-jobcode
  let $job_found = 'N'

Begin-SELECT On-Error=P290-SQL-Error('check-jobcode')
J.EMPLID

 let $job_found = 'Y'

FROM PS_JOB J
WHERE J.EMPLID = &A.EMPLID
  AND J.EMPL_RCD = &A.EMPL_RCD
  AND J.EFFDT = (select max(jj.effdt) from ps_job jj
                 where jj.emplid = j.emplid
                   and jj.empl_rcd = j.empl_rcd
                   and jj.effdt <= $pay_end_dt)
  AND J.EFFSEQ = (select max(jjj.effseq) from ps_job jjj
                 where jjj.emplid = j.emplid
                   and jjj.empl_rcd = j.empl_rcd
                   and jjj.effdt = j.effdt)
  AND [$GEXXX916_INCLUDE_JOBCODE_CRITERIA]
End-SELECT
End-Procedure

!**********************************************************************
!BEGIN - ISDVSRC 06/07/05:  ITG32583
!**********************************************************************
Begin-Procedure Check-Hire-Date

Begin-SELECT On-Error=P290-SQL-Error('Check-Hire-Date')
EMP.REHIRE_DT
EMP.HIRE_DT
EMP.SERVICE_DT

 Let $Rehire_Date  = &EMP.REHIRE_DT
 Let $Hire_Date    = &EMP.HIRE_DT

  If rtrim($Rehire_Date,' ') <> ''
    move $Rehire_Date to $hire_dt
  Else
    move $Hire_Date to $hire_dt
  End-If

 let $hire_date_yyyymmdd   = datetostr(strtodate($hire_dt,'DD-MON-YYYY'),'YYYYMMDD')
 !show '$hire_date_yyyymmdd   :' $hire_date_yyyymmdd

FROM ps_employment EMP
where EMP.EMPLID =&A.EMPLID
End-SELECT
End-Procedure
!END - ISDVSRC 06/07/05:  ITG32583
!**********************************************************************


!**********************************************************************
Begin-Procedure P290-SQL-Error($Action)
#debug9 Show 'P290-SQL-Error'
  Show $Action ' failed'
  Show 'SQL Error:  '  $_sql-error

  Stop
End-Procedure

!*********************************************************************
Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  display ' '
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'
End-Procedure

!********************************************************************
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx901.sqc'
#include 'gexxx913.sqc'
#include 'gexxx924.sqc'
#include 'gexxx956.sqc'
#include 'gexxx916.sqc'
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
