!***********************************************************************
! GEXPY663.SQR:                                                        *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-2006 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY663.SQR :                                                       *
!                                                                      *
! Narrative:            Create a program that will report employee tax *
!			information from a list of employee id's       *
!			supplied by the Tax Department on a Quarterly  *
!			basis.   				       *
!			ITG-35693.				       *
!								       *
! #Debug Used:          x                                              *
!								       *
! SQL Tables:           PS_TAX_BALANCE, PS_JOB                         *
!								       *
! Written by:           Rapidigm, Deepak. S, 04/20/06                  *
!                                                                      *
! Normally Run:         Run on ad-hoc basis			       *
!                                                                      *
! Control Parms:        Reads the run control table PS_GEX_RUN_CNTL    *
!			and input file Emplid_Layout.txt	       *
!                                                                      *
!***********************************************************************

!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)

#define #column1  001
#define #column2  010
#define #column3  018
#define #column4  025
#define #column5  039
#define #column6  052
#define #column7  062
#define #column8  073
#define #column9  084
#define #column10  095
#define #column11  106

!***********************************************************************
! Defines Heading of the report
!***********************************************************************
Begin-Heading 5
  let $ReportID = 'GEXPY663'
  #include 'stdhdg01.sqc'

  Print '3rd Party Sick Pay Information for Tax Department'     (3,1) center
  Print $rpt-subtitle (+1,1) center

  Print 'COMPANY'		(+2,{#column1})	underline
  Print 'DEPTID'		(0,{#column2})	underline
  Print 'STATE'			(0,{#column3})	underline
  Print 'BALANCE_YEAR'		(0,{#column4})	underline
  Print 'EMPLID'		(0,{#column5})	underline
  Print 'TAX_QTD'		(0,{#column6})	underline
  Print 'TXGRS_QTD'		(0,{#column7})	underline
  Print 'NLGRS_QTD'		(0,{#column8})	underline
  Print 'TAX_YTD'		(0,{#column9})	underline
  Print 'TXGRS_YTD'		(0,{#column10})	underline
  Print 'NLGRS_YTD'		(0,{#column11})	underline

End-Heading


!***********************************************************************
! Start of Program
!***********************************************************************
Begin-Report

  do Init-DateTime           !datetime.sqc
  do Init-Number             !number.sqc
  do Get-Current-DateTime    !curdttim.sqc
  do Stdapi-Init             !stdapi.sqc
  if isnull($prcs_process_instance)
	let $Prcs_OprID = 'ISDVDXS'
	let $Prcs_Run_Cntl_ID = '1'
  end-if

  do Get-Run-Control	     !gexrnctl.sqc  
 
  #debugx show '<' &bal_year '><' &bal_qtr '>'
  #debugx show '<'  &filepath '>'
  
  move &bal_year to $bal_year
  move &bal_qtr to $bal_qtr

  let $rpt-subtitle = 'Qtr: ' || $bal_qtr || '  Year: ' || $bal_year

  let #GEX_EMPLID_ROWS = 1
  let $Emplid_Alias = 'A.EMPLID'
  do Open-Input-File
  do Read-Input-File
  do Select-Data
  do stdapi-term

End-Report


!***********************************************************************
! Opens the Input file which has the EMPLIDs
!***********************************************************************
Begin-Procedure Open-Input-File

	! 'F:\GE_Work\HRMS\Emplid_layout.txt'
	move &filepath to $filepath
	
	open $filepath as 1  for-reading record=10 status=#filestat
	if #filestat != 0
		show 'Error Opening File: ' $filepath
		stop
	end-if

End-Procedure


!***********************************************************************
! Reads the EMPLIDs from the input file.
!***********************************************************************
Begin-Procedure Read-Input-File

   while 1
	read 1 into $emplid:10
	
	if #end-file
		break
	end-if

	let $emplid = rtrim($emplid,' ')

        if $emplid != ''
		If #GEX_EMPLID_ROWS = 1
			Let $EMPLID_CRITERIA = '(' || $Emplid_Alias || ' In ('''     || $emplid || ''''
			let #GEX_EMPLID_ROWS = #GEX_EMPLID_ROWS + 1
		Else
			Let $EMPLID_CRITERIA = $EMPLID_CRITERIA || ',''' || $emplid  || ''''
		End-If
	end-if
   end-while
	
	Let $EMPLID_CRITERIA = $EMPLID_CRITERIA || '))'
   #debugx show $EMPLID_CRITERIA 
End-Procedure 

!***********************************************************************
! Main Procedure which selects the data.
!***********************************************************************
Begin-Procedure Select-Data
Begin-Select 
A.COMPANY		(+2,{#column1})
B.DEPTID		(0,{#column2})
A.STATE			(0,{#column3})
A.BALANCE_YEAR		(0,{#column4})
A.EMPLID		(0,{#column5})
A.TAX_QTD		(0,{#column6}) edit 999.99
A.TXGRS_QTD		(0,{#column7}) edit 99999.99
A.NLGRS_QTD		(0,{#column8}) edit 99999.99
A.TAX_YTD		(0,{#column9}) edit 999.99
A.TXGRS_YTD		(0,{#column10}) edit 99999.99
A.NLGRS_YTD		(0,{#column11}) edit 99999.99

FROM PS_TAX_BALANCE A, PS_JOB B
 WHERE A.BALANCE_YEAR = &bal_year
   AND A.BALANCE_QTR = &bal_qtr
   AND A.BALANCE_PERIOD = 
    (SELECT MAX( C.BALANCE_PERIOD)
       FROM PS_TAX_BALANCE C
      WHERE C.EMPLID = A.EMPLID
        AND C.COMPANY = A.COMPANY
        AND C.BALANCE_ID = A.BALANCE_ID
        AND C.BALANCE_YEAR = A.BALANCE_YEAR
        AND C.BALANCE_QTR = A.BALANCE_QTR
        AND C.STATE = A.STATE
        AND C.LOCALITY = A.LOCALITY
        AND C.TAX_CLASS = A.TAX_CLASS)
   AND A.TAX_CLASS = 'U'
   AND A.STATE <> '$U'
   AND A.EMPLID = B.EMPLID
   AND A.COMPANY = B.COMPANY
   AND B.EFFDT =
      (SELECT MAX(B_ED.EFFDT) FROM PS_JOB B_ED
        WHERE B.EMPLID = B_ED.EMPLID
          AND B.EMPL_RCD = B_ED.EMPL_RCD
          AND B_ED.EFFDT <= SYSDATE)
   AND B.EFFSEQ =
      (SELECT MAX(B_ES.EFFSEQ) FROM PS_JOB B_ES
        WHERE B.EMPLID = B_ES.EMPLID
          AND B.EMPL_RCD = B_ES.EMPL_RCD
          AND B.EFFDT = B_ES.EFFDT)
   AND [$EMPLID_CRITERIA] 
ORDER BY A.COMPANY,  B.DEPTID,  A.STATE,  A.EMPLID
End-Select
End-Procedure


#include 'stdapi.sqc'    !Process Scheduler Interface
#include 'reset.sqc'     !Reset Printer Procedure
#include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'  !Routines for date math
#include 'gexrnctl.sqc'  !Routine for Get-Run-Control
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
