!***********************************************************************
! GEXHR058:  Automated Merit Increase Load                             *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXHR058 :            Merit Increase Load                            *
!                                                                      *
! Narrative:            This SQR is designed to read a text file       *
!                       containing merit amounts from HR               *
!                                                                      *
!                       Input File Specs:                              *
!                       1) Remove extra columns from spreadsheet       *
!                       2) Column A should be left-justified, have a   *
!                          width of 10, and contain the emplid.        *
!                       3) Column B should be left-justified, have a   *
!                          width of 1, and contain the empl_rcd.       *
!                       4) Column C should be have a width of 9 and    *
!                          contain the merit increase amt.             *
!                                                                      *
!                       LIS destination has been hard-coded to go to   *
!                       \\mickey\psdev\temp\                           *
!                                                                      *
! SQL Tables:           PS_GEX_SALINC_EMPL                             *
!                                                                      *
! Written by:           Tony Labra                                     *
!                                                                      *
! Normally Run:         Yearly Merit Increase Process                  *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         None                                         *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! AXL       08/27/2004  Initial Creation                               *
! KXY       11/15/2010  Done the changes for INC 801673
! Ujwal Dyasani       PT852 	12/02/2016  Change length of the emplid to be read from 9 to 7
!					  Comments String: UJPT85220161202
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup01.sqc'

!*****************************************************************
begin-report
!*****************************************************************
  do Init-DateTime
  do Init-Number
  Do Get-Current-DateTime    !curdttim.sqc
  do Init-Report
  do Open-Files
  do Process-Data
  do End-of-Job-Routine
  do Stdapi-Term

end-report

!*****************************************************************
begin-procedure Init-Report
!*****************************************************************

  let $ReportID = 'GEXHR058'
  let $ReportTitle = 'Merit Increase Amts'

  display $ReportID noline
  display ' - '     noline
  display $ReportTitle
  do Stdapi-Init

  date-time () hh:mi:ss &TimeBegan
  date-time () MM/DD/YYYY  &DateBegan
  show 'Report Began at ' &TimeBegan ' on '  &DateBegan

  Let $AsOfDate = $AsOfToday
  do get-date-codes
  let $year = $AsOfYYYY
 
  if $prcs_process_instance = ''
     display 'Need to run this program thru process scheduler'
     stop
  else

     do GEXXX922-Select-Parameters
     let $select_file = lower($GEX_RC_PAY.GEX_FILE_LOCATION)

  end-if

end-procedure

!*****************************************************************
begin-procedure Open-Files
!*****************************************************************

  !open $file1 as 1 for-reading
  open $select_file as 1 for-reading
       record=23:vary
     status=#open1
  if #open1 = -1
     display 'Open failed for file <' noline
     display $select_file noline
     display '>'
     stop 
  end-if

   let $filenm= '{OUTFILE}' || lower($ReportId) || '.lis' ! 11/15/2010 vendkxy
  !let $filenm= '\\goofey\psprod\temp\' || lower($ReportId) || '.lis'  ! 11/15/2010 vendkxy
 
  

  show '$filenm ' $filenm
  open $filenm as 10 for-writing
      record=150:fixed
      status=#open10
  if #open10 = -1
     display 'Open failed for file <' noline
     display $filenm noline
     display '>'
     stop
  end-if
  
  write 10 from $ReportTitle
  write 10 from ' '
  write 10 from $ReportID
  write 10 from ' '
  write 10 from 'Update Began:' $ReportDate ' ' $ReportTime
  write 10 from ' '
  write 10 from ' '
  write 10 from 'FIELD':15     'REASON':40
  write 10 from '---------':15 '-------------------------':40 

end-procedure

!********************************************************************
begin-procedure End-of-Job-Routine
!********************************************************************
     
      Let $missing_emplid = to_char(#missing_emplid)
      Let $missing_deptid = to_char(#missing_deptid)
      Let $missing_amt    = to_char(#missing_amt)
 
      Let $invalid_emplid = to_char(#invalid_emplid)

      Let $not_updated    = to_char(#not_updated)

      Let #error_nbr = #missing_emplid + #missing_deptid + #missing_amt +
                       #not_updated + #invalid_emplid

      Let $error_nbr = to_char(#error_nbr)

      Let $record_count = to_char(#record_count)
      Let $invalid_recs = to_char(#invalid_recs)
      Let $update_count = to_char(#update_count)
      
      write 10 from ' '
      write 10 from 'ERROR SUMMARY INFORMATION'
      write 10 from ' '
      write 10 from ' '
      write 10 from 'Records processed: ' $record_count
      write 10 from ' Total errors    : ' $error_nbr
      write 10 from ' '
      write 10 from 'Total Errors Breakdown'
      write 10 from ' Blank EMPLID               : ' $missing_emplid
      write 10 from ' Invalid EMPLID             : ' $invalid_emplid
      write 10 from ' '
      write 10 from 'SQL REVIEW'
      write 10 from ' '
      write 10 from 'Valid records updated       : ' $Update_count
      write 10 from ' '
      write 10 from 'Merit Amounts Update Ended:' $ReportDate ' ' $ReportTime
      
      close 1
      close 10

      date-time () HH:MI:SS &timeEnded
      date-time () MM/DD/YYYY &dateEnded
      show 'Report Ended at ' &timeEnded ' on ' &dateEnded

end-procedure

!*********************************************************************
begin-procedure Process-Data
!*********************************************************************

   while 1
    !Commented by Ujwal - UJPT85220161202 - Begin
	!read 1 into $EMPLID:9
	!Commented by Ujwal - UJPT85220161202 - End
	!Added by Ujwal - UJPT85220161202 - Begin
	read 1 into $EMPLID:7
	!Added by Ujwal - UJPT85220161202 - End
                $filler:1
		$EMPL_RCD:1
                $filler:1
                $AMT:11
                
    if #end-file                ! Check for EOF in Input Data File
       break
    end-if

    Let #NEW_COMPRATE = to_number($amt)
    let #EMPL_RCD     = to_number($EMPL_RCD)

    show '$EMPLID ' $EMPLID ' $EMPL_RCD: ' #EMPL_RCD ' #NEW_COMPRATE ' #NEW_COMPRATE
  
    Let #Record_count = #Record_count + 1
    let #temp_count = #temp_count + 1
    if #temp_count = 1000
       display #Record_count 999,999,999 noline
       display ' rows processed'
       let #temp_count = 0
    end-if
    Let $Record_error = 'N'

    !** Check required fields = nulls, write to conversion report 
    If isblank($EMPLID) = 1
       let $temp_cnt = to_char(#Record_count)
       let $Error_Field = 'Emplid'
       let $Reason = 'Is null for record # '     
       let $Reason = $Reason  || $temp_cnt
       do Print-error($Error_Field,$Reason)
       let #missing_emplid = #missing_emplid + 1
       let $Record_error = 'Y'
    else
       let $employee_exists = 'N'
       do Verify-Personal-Data
          if $employee_exists = 'N'  
             let $Error_Field = $emplid          
             let $Reason = 'Invalid Emplid in Psoft'
             do Print-error($Error_Field,$Reason)
             let #invalid_emplid = #invalid_emplid + 1
             let $Record_error = 'Y'
          else
            If isblank($amt) = 1
               let $temp_cnt = to_char(#Record_count)
               let $Error_Field = 'Merit Amt'
               let $Reason = 'Is null for record # '     
               let $Reason = $Reason  || $temp_cnt
               do Print-error($Error_Field,$Reason)
               let #missing_amt = #missing_amt + 1
               let $Record_error = 'Y'
            end-if
          end-if
    end-if
    show '$Record_error  b4 load ' $Record_error 
    !** Prep for load                            
    If $Record_error = 'N'
       Do Update-Row
       If #sql-error = 0
          show 'emplid ' $emplid  ' #sql-count ' #sql-count
          if #sql-count > 0 
             Let #Update_count = #Update_count + #sql-count
          end-if
       else
          Show 'Record did not Update - ' $EMPLID
       End-if
    else
       let #invalid_recs = #invalid_recs + 1
    End-if

   End-while

end-procedure

!********************************************************************
begin-procedure Verify-Personal-Data
!********************************************************************
     !show 'emplid before ' $emplid
Begin-Select
PD.Emplid

    let $employee_exists = 'Y'
    !show 'emplid after ' $emplid

From PS_PERSONAL_DATA PD
Where PD.Emplid = $Emplid 

End-Select

end-procedure

!********************************************************************
begin-procedure Update-Row
!********************************************************************
let $sql-statement = 'Update PS_GEX_SALINC_EMPL'

begin-SQL on-error = SQL-Error-E
UPDATE PS_GEX_SALINC_EMPL
SET GEX_NEW_COMPRATE = #NEW_COMPRATE
 where 	emplid 		= $emplid 
      and empl_rcd      = #empl_rcd
	
end-SQL

end-procedure

!********************************************************************
begin-procedure Validate-Info
!********************************************************************
let $sql-statement = 'Validate-Info'

  show 'asofdate ' $asoftoday
  show 'emplid ' $emplid

Begin-Select
pd.name    
j.empl_type

from ps_job j,
     ps_personal_data pd


where j.emplid= pd.emplid 


 and  j.emplid=$emplid 

 And   j.effdt             =
      (Select Max(effdt)
       From   ps_job
       Where  emplid       = j.emplid
       And    empl_rcd    = j.empl_rcd
       And    effdt       <= $AsOfToday)

 And   j.effseq            =
      (Select Max(effseq)
       From   ps_job
       Where  emplid       = j.emplid
       And    empl_rcd    = j.empl_rcd
       And    effdt        = j.effdt)

end-select

end-procedure

!********************************************************************
begin-procedure SQL-Error-E
!********************************************************************

   Let $Error_message= $Error_message || ', SSN=' || $EMPLID || ' Did not update.'
   Let $SQL_Error_Msg1 = 'SQL Status: ' || to_char(#sql-status)
   Let $SQL_Error_Msg2 = 'SQL Error: ' || $sql-error
   Let $Error_Field = 'SQL-ERR '
   Let $Reason = $sql-error
   Let #not_updated = #not_updated + 1
   show $SQL_Error_Msg1
   show $SQL_Error_Msg2
   do Print-error($Error_Field,$Reason)

end-procedure


!********************************************************************
begin-procedure Print-error($Error_Field, $Reason)
!********************************************************************

   write 10 from $Error_Field:15 $Reason:40 

end-procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'getdatcd.sqc'  !Retrieves the asofyear, asofmonth etc.,
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'gexxx922.sqc'
