!***********************************************************************
! GEXBNWLA:  Wellness Incentive Load                                  *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXbnwlsn : Wellness Incentive Load                                  *
!                                                                      *
! Narrative:  As part of the 2013 Benefits Open Enrollment we need to  *
!             load the Wellness Incentives pay for Team Members that   *
!             will be paid in their pay check. Team Members & Spouses  *
!             that pass 3 out of 5 medical tests will be sent in       *
!             Highmark file that will needed to be loaded in the payroll
!                                                                      *
!                                                                      *
! SQL Tables:           PS_GEX_WELLNS_LOAD                             *
!                       PS_GEX_WLNS_SP_DP                              *
!                       PS_JOB                                         *
!                       PS_HEALTH_BENEFIT                              *
!                       PS_BEN_PROG_PARTIC                             *
!                       PS_BENEF_PLAN_TBL                              *
!                       PS_PERSONAL_DATA                               *
!                                                                      *
! Written by:           Vahini Katta                                   *
!                                                                      *
! Normally Run:         December, July                                 *
!                                                                      *
! Control Parms:        AsOfDate                                       *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! GEX Modifications                                                    *
! GEXBN_848_P143186_01 2013-11-12 Vahini Katta                         *
! Initial Creation                                                     *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Landscape)


#define #column1     2
#define #column2    13
#define #column3    45



Begin-Report
#debug9 Show 'Begin-Report'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc
  
  show ' '
  display 'Start Run Time: ' noline
  show $AsofNow
  Do Initialization
  Do Open-File
  Do Write_Header
  Do Main-Process
 
  Do Close-File
    
  show ' '
  display 'End Run Time: ' noline
  show $AsofNow
  do Stdapi-Term
    
End-Report

Begin-Heading 3 
    
  #Include 'stdhdg01.sqc'
  
  Print 'EMPLID'           (+0,{#column1}) bold
  Print 'NAME'             (+0,{#column2}) bold
  Print 'MESSAGE'          (+0,{#column3}) bold
  
End-Heading

!-----------------------------------------------------------------------
! Function:    Initialization                                          -
! Description: Initialization                                          -
! Called By:   Report-Lost-Covrg                                       -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Initialization
#debug9 Show 'Initialization'
   
  Let $ReportID      = 'GEXBNWLA'
  Let $ReportTitle   = 'Wellness Incentive Load'
  Let $delim = ','
    
  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime
    
  If $prcs_process_instance = ''
    Do SQRW-Run-Controls
  Else
    Do Process-Scheduler-Run-Controls
  End-if
 
  If isnull($AsofDate)
     Let $AsofDate = $AsOfToday
  End-If
  
  if $AsofDate >= '01-JAN-2014'
    Move 52 to #Weeks
  end-if
    
   if $AsofDate > '01-JUL-2014'
    Move 26 to #Weeks
  end-if    
  
  show '#Weeks :' #Weeks
  
  show '$SlctPlanCriteria   :' $SlctPlanCriteria
  show '$SlctPlanCriteria1  :' $SlctPlanCriteria1
  show '$SlctPlanCriteria2  :' $SlctPlanCriteria2
  show '$SlctBenCriteria    :' $SlctBenCriteria
  show '$SlctBenCriteria1   :' $SlctBenCriteria1
  show '$SlctBenCriteria2   :' $SlctBenCriteria2
  show '$AsofDate           :' $AsofDate
  
End-Procedure

!-----------------------------------------------------------------------
! Function:    SQRW-Run-Controls                                       -
! Description: SQRW-Run-Controls                                       -
! Called By:   Initialization                                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure SQRW-Run-Controls
#debug9 Show 'SQRW-Run-Controls'

  Do Ask-As-Of-Date
 
  input $Erncd maxlen=4 type=char 'Enter Erncd'
  input $File_Path maxlen=100 type=char 'Enter File Path'
  input $BenCriteria maxlen=100 type=char 'Enter the Benefit Program enclosed in quotes. Multiple Ben Program should be separated by commas'
  input $PlanCriteria maxlen=100 type=char 'Enter the  Plan type enclosed in quotes. Multiple Ben Program should be separated by commas'
  
  show '$BenCriteria :' $BenCriteria
  show '$PlanCriteria:' $PlanCriteria
  
  if isnull($BenCriteria)
    move '' to $SlctBenCriteria
  else
    let $SlctBenCriteria  = 'AND BAS.BENEFIT_PROGRAM IN (' || $BenCriteria || ')' 
  end-if 
  
  if isnull($PlanCriteria)
    move '' to $SlctPlanCriteria
  else
    let $SlctPlanCriteria  = 'AND HB1.PLAN_TYPE IN (' || $PlanCriteria || ')'
  end-if 
  
End-Procedure

!-----------------------------------------------------------------------
! Function:    Process-Scheduler-Run-Controls                          -
! Description: Select Values from Run Control                          -
! Called By:   Initialization                                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Process-Scheduler-Run-Controls
#debugd show 'Process-Scheduler-Run-Controls'

 show '$prcs_run_cntl_id = ' $prcs_run_cntl_id
 show '$prcs_oprid       = ' $prcs_oprid
 Do GEXRCBN1-SELECT-PARAMETERS

 Let $AsOfDate = &GEX_RC_BEN.AsOfDate
 Let $Erncd    = &GEX_RC_BEN.ERNCD
 let $File_Path = &GEX_RC_BEN.FILENAME
 let $Addl_Pay_Effdt = &GEX_RC_BEN.CHECK_DT
 show '$AsOfDate :' $AsOfDate
 show '$Erncd    :' $Erncd
 show '$File_Path:' $File_Path

 move '' to $BenCriteria
 move '' to $PlanCriteria
 
BEGIN-SELECT
RB.BENEFIT_PROGRAM

    if isnull($BenCriteria)
       let $BenCriteria = $BenCriteria ||''''|| &RB.BENEFIT_PROGRAM || ''''
    else
       let $BenCriteria = $BenCriteria ||','||''''|| &RB.BENEFIT_PROGRAM || ''''
    end-if

FROM PS_GEX_RUN_BENPROG RB
WHERE RB.oprid       = $prcs_oprid
  AND RB.run_cntl_id = $prcs_run_cntl_id
END-SELECT

BEGIN-SELECT
RP.PLAN_TYPE

    if isnull($PlanCriteria)
       let $PlanCriteria = $PlanCriteria ||''''|| &RP.PLAN_TYPE || ''''
    else
       let $PlanCriteria = $PlanCriteria ||','||''''|| &RP.PLAN_TYPE || ''''
    end-if

FROM PS_GEX_RUN_PLNTYPE RP
WHERE RP.oprid       = $prcs_oprid
  AND RP.run_cntl_id = $prcs_run_cntl_id
END-SELECT

  if isnull($BenCriteria)
    move '' to $SlctBenCriteria
  else
    let $SlctBenCriteria  = 'AND B.BENEFIT_PROGRAM IN (' || $BenCriteria || ')' 
    
  end-if 
  
  if isnull($PlanCriteria)
    move '' to $SlctPlanCriteria
  else
    let $SlctPlanCriteria  = 'AND H.PLAN_TYPE IN (' || $PlanCriteria || ')'
  end-if 
  
  show '$SlctBenCriteria :' $SlctBenCriteria
  show '$SlctPlanCriteria:' $SlctPlanCriteria
  show ' '
  show '*** Run Control Parameters ***'
 
end-procedure Process-Scheduler-Run-Controls

!-----------------------------------------------------------------------
! Function:    Open-File                                               -
! Description: Opens Files                                             -
! Called By:   Begin_report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Open-File

  #ifdef NT   
   show '$prcs_run_cntl_id :' $prcs_run_cntl_id
    !Let $File       = '\\nt5\ftproot\benefits\'  || Lower($ReportID) ||  '.csv'
    Let $File       = $File_Path  || Lower($ReportID) ||  '.csv'
    Let $Exception_File = $File_Path  || Lower($ReportID) ||  '_exceptions.csv'
  #else
    Let $File = '{INFILE}' || Lower($ReportID) || '.csv'
    Let $Exception_File = '{INFILE}' || Lower($ReportID) || '_exceptions.csv'
  #end-if 
   
   Show '$File :' $File
   Open $File As 1 For-Reading Record=40:Vary Status=#filestat
   
   if (#filestat <> 0)
      let $Error-Message = 'PROGRAM ABORTED - Problem opening file : ' || $File
      show $Error-Message
      STOP
   end-if
   
   Open $Exception_File As 2 For-Writing Record=1600:Vary Status=#filestat1
   
   if (#filestat1 <> 0)
      let $Error-Message = 'PROGRAM ABORTED - Problem opening file : ' || $Exception_File
      show $Error-Message
      STOP
   end-if
   
End-Procedure Open-File

!-----------------------------------------------------------------------
! Function:    Write_Header                                            -
! Description: Writes the header row for both the files                -
! Called By:   Begin_report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Write_Header
        
 Write 2 from 'Emplid'		$delim 
             'Name'		$delim
             'Message'        

End-Procedure

!-----------------------------------------------------------------------
! Function:    Main-Process                                            -
! Description: Main-Process                                            -
! Called By:   Begin_report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Main-Process

  While 1=1
    read 1 into $input:40
    If #end-file 
      Break
    Else
      unstring $input by ',' into 
      $Emp_SSN
      $Spouse_SSN
      $Relationship
      
      Add 1 To #recs-read
            if $Spouse_SSN=''
              let $Spouse_SSN=' '
            end-if  
        
      if $Emp_SSN='' !or $Spouse_SSN=''
          show 'Employee SSN is null'
          show '$Emp_SSN :' $Emp_SSN
          add 1 to #Error_Recs
      else
            Do Load-File
      end-if      
    End-If
  End-While
  do Process-Employee
  do Process-SP-OR-DP
  
  show 'Records Read :' #recs-read
  show 'Error Records:' #Error_Recs
End-Procedure

!-----------------------------------------------------------------------
! Function:    Load-File                                               -
! Description: Load the file to the table                              -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Load-File
Begin-sql
INSERT INTO PS_GEX_WELLNS_LOAD
VALUES
($Emp_SSN,
$Spouse_SSN,
$Relationship)
End-sql
End-Procedure

!-----------------------------------------------------------------------
! Function:    Process-Employee                                        -
! Description: Process employees from table                            -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Process-Employee   
Begin-Select 
!GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
!TM.EMPLID,
M.EMPLID,
!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
COUNT(*) &TM_Count

   Move ' ' to $Name
   Move 0 to #Wellness_Amt
   !Move &TM.EMPLID to $Emplid !GEX_SEC_REENG 2015-04-29 Vahini Katta
   Move &M.EMPLID to $Emplid  !GEX_SEC_REENG 2015-04-29 Vahini Katta
   
   do Check-Empl-Status
   do Get-Name
   Move &name to $Name
   if $Active_Emp='Y'
      Move '' to $Coverage_Codes
      do Verify-Ben-Prog
      if $Corp_Ben_Prog = 'Y'
         do Check-Addl-Pay
         if $Addl_Pay_Found = 'N'        
            If &TM_Count > 1
              let #Wellness_Amt = 400/#Weeks
            else
              let #Wellness_Amt = 200/#Weeks 
            end-if  
            do Insert-Addl-Pay-Erncd
            do Insert-Addl-Pay-Effdt
            do Insert-Addl-Pay-Data
         else
           If &A.EARNINGS_END_DT=''
             let #Wellness_Amt = &A.OTH_PAY + 200/#Weeks 
             do Update-Addl-Pay-Data
           else
             show 'Addl Pay Found'
             Move 'Addl Pay Found' to $Message
             do Write-Exception-Report
           End-if
         End-if
      else
        Move 'Employee is not enrolled in Corp Ben Plan' to $Message
        do Write-Exception-Report
      end-if  
   else
      Move 'Employee is not Active' to $Message
      do Write-Exception-Report
   end-if
   
FROM PS_GEX_WELLNS_LOAD TM
!GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
     ,PS_GEX_EMPLID_MAPP M
WHERE UPPER(TM.RELATION_DESCR)='EMPLOYEE'
AND M.SSN=TM.EMPLID
!GROUP BY TM.EMPLID
GROUP BY M.EMPLID
!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
End-Select
End-Procedure

!-----------------------------------------------------------------------
! Function:    Process-SP-OR-DP                                        -
! Description: Process Spouse/Domestic Partner from table              -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Process-SP-OR-DP
!  let $Coverage_Codes =' and h.covrg_cd in ('''||'8'||''''||','''|| '9'||'''' || ')'||' and (h.covrg_cd>='''||'15'||''''||' and h.covrg_cd<='''|| '37'||'''' || ')'
    Let $GEXXX977_COVRG_CD_Alias = 'H.COVRG_CD'
    Do GEXXX977-Select-COVRG-CD-Parameters
  let $Coverage_Codes = ' and '||$GEXXX977_Include_Covrg_CD_Criteria
  show '$Coverage_Codes :' $Coverage_Codes
  
Begin-Select
!SP.EMPLID, !GEX_SEC_REENG 2015-04-29 Vahini Katta
MP.EMPLID,  !GEX_SEC_REENG 2015-04-29 Vahini Katta 
SP.DEP_BENEF_NID,
COUNT(*) &SP_Count

   Move ' ' to $Name
   Move 0 to #Wellness_Amt
   !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
   !Move &SP.EMPLID to $Emplid
   Move &MP.EMPLID to $Emplid
   !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
   do Check-Empl-Status
   do Get-Name
   Move &name to $Name
   if $Active_Emp='Y'
      do Verify-Ben-Prog
      if $Corp_Ben_Prog = 'Y'
            If &SP_Count > 1
              !let #Wellness_Amt = 400/#Weeks
              let #Wellness_Amt = 400
            else
              !let #Wellness_Amt = 200/#Weeks 
              let #Wellness_Amt = 200
            end-if  
            do Insert-SP-DP-Record
      else
        Move 'Employee is not enrolled in Corp Ben Plan for the SP/DP' to $Message
        do Write-Exception-Report
      end-if  
   else
      Move 'Employee is not Active for Spouse/DP' to $Message
      do Write-Exception-Report
   end-if

FROM PS_GEX_WELLNS_LOAD SP
!GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
    ,PS_GEX_EMPLID_MAPP MP
WHERE upper(SP.RELATION_DESCR)='SPOUSE/LIFE PARTNER'
AND SP.EMPLID=MP.SSN
!GROUP BY SP.EMPLID,SP.DEP_BENEF_NID
GROUP BY MP.EMPLID,SP.DEP_BENEF_NID
!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
End-Select
End-Procedure

!-----------------------------------------------------------------------
! Function:    Check-Empl-Status                                       -
! Description: Check Employee Status                                   -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Check-Empl-Status
 Move 'N' to $Active_Emp
Begin-SELECT
EMPL_RCD

  Move 'Y' to $Active_Emp
  
FROM PS_JOB J
WHERE J.EFFDT=(SELECT MAX(J1.EFFDT) FROM PS_JOB J1
               WHERE J1.EMPLID=J.EMPLID
               AND J1.EMPL_RCD=J.EMPL_RCD
               AND J1.EFFDT<=SYSDATE)
AND J.EFFSEQ=(SELECT MAX(J2.EFFSEQ) FROM PS_JOB J2
               WHERE J2.EMPLID=J.EMPLID
               AND J2.EMPL_RCD=J.EMPL_RCD
               AND J2.EFFDT=J.EFFDT)
AND J.EMPL_STATUS IN ('A','L','P','S')   
AND J.EMPLID=$Emplid          
End-Select
End-Procedure

!-----------------------------------------------------------------------
! Function:    Verify-Ben-Prog                                         -
! Description: Check for the Corporate Benefit Program                 -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Verify-Ben-Prog
 Move 'N' to $Corp_Ben_Prog
Begin-SELECT
B.BENEFIT_PROGRAM
  
  Move 'Y' to $Corp_Ben_Prog
  
FROM PS_HEALTH_BENEFIT H, 
     PS_BEN_PROG_PARTIC B,
     PS_BENEF_PLAN_TBL P
WHERE H.EMPLID=$Emplid
AND H.COVERAGE_ELECT='E' 
AND H.BENEFIT_PLAN=P.BENEFIT_PLAN
AND H.EMPLID=B.EMPLID
AND H.PLAN_TYPE=P.PLAN_TYPE            
AND P.EFFDT=(SELECT MAX(P1.EFFDT) FROM PS_BENEF_PLAN_TBL P1
             WHERE P1.PLAN_TYPE=P.PLAN_TYPE
             AND P1.BENEFIT_PLAN=P.BENEFIT_PLAN
             AND P1.EFFDT<=$AsofDate)
AND H.EFFDT=(SELECT MAX(H1.EFFDT) FROM PS_HEALTH_BENEFIT H1
             WHERE H1.EMPLID=H.EMPLID
             AND H1.EMPL_RCD=H.EMPL_RCD
             AND H1.COBRA_EVENT_ID=H.COBRA_EVENT_ID
             AND H1.PLAN_TYPE=H.PLAN_TYPE
             AND H1.BENEFIT_NBR=H.BENEFIT_NBR
             AND H1.EFFDT<=$AsofDate)
AND B.EFFDT=(SELECT MAX(B1.EFFDT) FROM PS_BEN_PROG_PARTIC B1
              WHERE B1.EMPLID=B.EMPLID
              AND B1.EMPL_RCD=B.EMPL_RCD
              AND B1.COBRA_EVENT_ID=B.COBRA_EVENT_ID
              AND B1.EFFDT<=$AsofDate)
[$SlctBenCriteria]
[$SlctPlanCriteria]
[$Coverage_Codes]
End-Select
End-Procedure

!-----------------------------------------------------------------------
! Function:    Check-Addl-Pay                                          -
! Description: Check Additional Pay                                    -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Check-Addl-Pay
 Move 'N' to $Addl_Pay_Found
Begin-Select
A.EMPLID,
A.EMPL_RCD,
A.ERNCD,
A.EFFDT,
A.ADDL_SEQ,
A.EARNINGS_END_DT,
A.OTH_PAY

  Move 'Y' to $Addl_Pay_Found
  
FROM PS_ADDL_PAY_DATA A
WHERE A.EMPLID=$Emplid
and A.ERNCD=$Erncd
AND A.EFFDT=(SELECT MAX(A1.EFFDT) FROM PS_ADDL_PAY_DATA A1
             WHERE A1.EMPLID=A.EMPLID
             AND A1.EMPL_RCD=A.EMPL_RCD
             AND A1.ERNCD=A.ERNCD
             AND A1.EFFDT<=$AsofDate)
End-Select
End-Procedure

!-----------------------------------------------------------------------
! Function:    Insert-Addl-Pay-Erncd                                   -
! Description: Insert into PS_ADDL_PAY_ERNCD                           -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Insert-Addl-Pay-Erncd
begin-sql on-error=sql-error-found
    INSERT INTO PS_ADDL_PAY_ERNCD
               (EMPLID,
                EMPL_RCD,
                ERNCD,
                RECORD_SOURCE)                   
        VALUES ($Emplid,
                &EMPL_RCD,
                $Erncd,
                'O')
end-sql
end-procedure

!-----------------------------------------------------------------------
! Function:    Insert-Addl-Pay-Effdt                                   -
! Description: Insert into PS_ADDL_PAY_EFFDT                           -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Insert-Addl-Pay-Effdt
begin-sql on-error=sql-error-found
    INSERT INTO PS_ADDL_PAY_EFFDT
               (EMPLID,
                EMPL_RCD,
                ERNCD,
                EFFDT,
                RECORD_SOURCE)                   
        VALUES ($Emplid,
                &EMPL_RCD,
                $Erncd,
                $Addl_Pay_Effdt,		
                'O')
end-sql
end-procedure

!-----------------------------------------------------------------------
! Function:    Insert-Addl-Pay-Data                                    -
! Description: Insert into PS_ADDL_PAY_DATA                            -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Insert-Addl-Pay-Data
begin-sql on-error=sql-error-found
    INSERT INTO PS_ADDL_PAY_DATA
               (EMPLID,                                  
                EMPL_RCD,                                
                ERNCD,                                   
                EFFDT,                                   
                ADDL_SEQ,                                
                DEPTID,                                  
                JOBCODE,                                 
                POSITION_NBR,                            
                ACCT_CD,                                 
                GL_PAY_TYPE,                             
                ADDL_PAY_SHIFT,                          
                OTH_HRS,                                 
                HOURLY_RT,                               
                OTH_PAY,                                 
                ADDLPAY_REASON,                          
                SEPCHK,                                  
                EARNINGS_END_DT,                         
                GOAL_AMT,                                
                GOAL_BAL,                                
                OK_TO_PAY,                               
                DISABLE_DIR_DEP,                         
                PRORATE_ADDL_PAY,                        
                PRORATE_CUI_WEEKS,                       
                PAY_PERIOD1,                             
                PAY_PERIOD2,                             
                PAY_PERIOD3,                             
                PAY_PERIOD4,                             
                PAY_PERIOD5,                             
                STATE,                                   
                LOCALITY,                                
                TAX_PERIODS,                             
                TAX_METHOD,                              
                ADDL_PAY_FREQUENCY,                      
                DED_TAKEN,                               
                DED_SUBSET_ID,                           
                DED_TAKEN_GENL,                          
                DED_SUBSET_GENL,                         
                PLAN_TYPE,                               
		BUSINESS_UNIT,                           
		COMP_RATECD,                             
                RECORD_SOURCE)                           
        VALUES ($Emplid,                         !EMPLID                           
                &EMPL_RCD,                       !EMPL_RCD                         
                $Erncd,                          !ERNCD                            
                $Addl_Pay_Effdt,	         !EFFDT                            
                1,                               !ADDL_SEQ                         
                ' ',                             !DEPTID                           
                ' ',                             !JOBCODE                          
                ' ',                             !POSITION_NBR                     
                ' ',                             !ACCT_CD                          
                ' ',                             !GL_PAY_TYPE                      
                'J',                             !ADDL_PAY_SHIFT                   
                0,		                 !OTH_HRS                             
                0,			         !HOURLY_RT                           
                #Wellness_Amt,                   !OTH_PAY                          
                ' ',                             !ADDLPAY_REASON                   
                0,                               !SEPCHK                           
                '',                              !EARNINGS_END_DT                  
                0,			         !GOAL_AMT                         
                0,                               !GOAL_BAL                         
                'Y',			         !OK_TO_PAY                        
                'N',                             !DISABLE_DIR_DEP                  
                'N',                             !PRORATE_ADDL_PAY                 
                'Y',                             !PRORATE_CUI_WEEKS                
                'Y',                             !PAY_PERIOD1                      
                'Y',                             !PAY_PERIOD2                      
                'Y',                             !PAY_PERIOD3                      
                'Y',                             !PAY_PERIOD4                      
                'Y',                             !PAY_PERIOD5                      
                ' ',                             !STATE                            
                ' ',                             !LOCALITY                         
                1,                               !TAX_PERIODS                      
                'A',                             !TAX_METHOD                       
                'P',                             !ADDL_PAY_FREQUENCY               
                'R',                             !DED_TAKEN                        
                ' ',                             !DED_SUBSET_ID                    
                'R',                             !DED_TAKEN_GENL                   
                ' ',                             !DED_SUBSET_GENL                  
                ' ',                             !PLAN_TYPE                        
	        'STDBU',                         !BUSINESS_UNIT                    
		' ',                             !COMP_RATECD                      
                'O')                             !RECORD_SOURCE                    
  end-sql
  add 1 to #Records_Inserted
end-procedure

!-----------------------------------------------------------------------
! Function:    Update-Addl-Pay-Data                                    -
! Description: Insert into PS_ADDL_PAY_DATA                            -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Update-Addl-Pay-Data
begin-sql on-error=sql-error-found
UPDATE PS_ADDL_PAY_DATA
SET OTH_PAY=#Wellness_Amt
WHERE EMPLID=&A.EMPLID
AND EMPL_RCD=&A.EMPL_RCD
AND ERNCD=$Erncd
AND EFFDT=&A.EFFDT
AND ADDL_SEQ=&A.ADDL_SEQ
end-sql
End-Procedure 

!-----------------------------------------------------------------------
! Function:    Insert-SP-DP-Record                                     -
! Description: Insert into PS_GEX_WELNS_SP_DP                          -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Insert-SP-DP-Record
begin-sql on-error=sql-error-found
INSERT INTO PS_GEX_WELNS_SP_DP
VALUES
(&SP.EMPLID,
&SP.DEP_BENEF_NID,
$AsofToday,
#Wellness_Amt
)
end-sql
end-procedure

!-----------------------------------------------------------------------
! Function:    SQL-Error-Found                                         -
! Description: SQL-Error-Found                                         -
! Called By:   Insert-SP-DP-Record                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure SQL-Error-Found
  show 'In SQL-Error-Found '  $EmplId
  show $sql-error
end-procedure

!-----------------------------------------------------------------------
! Function:    Get-Name                                                -
! Description: Fetch Name                                              -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Name
Begin-Select
NAME

FROM PS_PERSONAL_DATA
WHERE EMPLID=$Emplid
End-Select
End-Procedure Get-Name

!-----------------------------------------------------------------------
! Function:    Write-Exception-Report                                  -
! Description: Print Exceptions                                        -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Write-Exception-Report

  Let $Name = translate($Name,',',' ')
  
  Write 2 from $Emplid  $delim
               $Name    $delim
               $Message $delim
               
End-Procedure

!-----------------------------------------------------------------------
! Function:    Close-File                                              -
! Description: Close File                                              -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Close-File
#debug9 Show 'Close-File'
  Close 1
  Close 2
  If #filestat != 0
     Show 'Error closing input file.  Program terminating.'
     Stop
  End-If
End-Procedure


!#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'gexxx911.sqc'  !Get Benefit Program Multiples Run Controls
#include 'gexxx920.sqc'  !Get ben single row run control
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#include 'gexxx977.sqc'  !Get Multiple Coverage Code Run Control