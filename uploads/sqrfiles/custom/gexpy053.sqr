!***********************************************************************
!  GEXPY053:  YTD HOURS FOR FT/PT VACATION AVERAGE                     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY053:             YTD Hours for FT/PT Vacation Average           *
!                                                                      *
! Narrative:            This program will generate a report containing *
!                       the vacation average hours depending on YTD    *
!                       hours worked for each employee for a selected  *
!                       company.                                       *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           gex_dept_tbl                                   *
!                       earnings_bal                                   *
!                       pay_check                                      *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                                                                      *
! Written by:           Jim Hutchison                                  *
!                                                                      *
! Normally Run:         On Demand                                      *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Company Division Code                        *
!                         Company                                      *
!                         Paygroup                                     *
!                         Deptid                                       *
!                         Employee Status                              *
!                         Account Code                                 *
!                         As Of Date                                   *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!     INITIALS     DATE         DESCRIPTION OF THE CHANGE              *
!***********************************************************************
!     JDH          02/16/98     Initial Creation                       *
!     SXK          10/26/98     Added Spcl_balance                     *
!     JDH          10/26/98     Added acct_cd short description        *
!                               Changed hours precision to .99         *
!     JDH          01/23/99     Added logic to get the maximum         *
!                                balance period per earnings code      *
!                                from the earnings balance table.      *
!                               Added SQRW run control logic.          *
!     SXK          02/09/99     Modified to do page break by deptid    *
!                                and consider the hrs_ytd from april   *
!                                to December for year 1999.            *
!     JDH          11/02/99     Added union specific logic.            *
!                               Modified weeks worked and YTD hours.   *
!     SXK          01/19/00     Modified to get union from job_labor   *
!                                                                      *       
!     CWB          11/08/2001   Changed pay_end_dt to check_dt in      *
!                               count of weeks worked.                 *
!     PSR          08/06/2002   Modified to get UNION_CD FROM JOB      * 
!                               - Upgrade 8.3                          * 
!     PSR          08/27/2002   EMPL_RCD is now part of the key for 
!                               PS_EARNINGS_BAL - Upgrade 8.3
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization


begin-report
#debug9 Show 'begin-report'

  do Init-DateTime           !datetime.sqc
  do Init-Number             !number.sqc
  do Get-Current-DateTime    !curdttim.sqc
  do P000-Init-Report
  do P100-Process-Main
  do Reset                   !reset.sqc
  do Stdapi-Term             !stdapi.sqc
  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
  Show 'Successful end of report'
end-report


begin-heading 7
#debug9 Show 'begin-heading'

  #Include 'stdhdg02.sqc'

  Let $X000_temp_out = 'Report as of ' || $X000_REPORT_HEADING_ASOFDATE
  Print $X000_temp_out            (3,)  center

  PRINT 'DEPT'                    (6,1)
  PRINT 'ACCT'                    (,15)
  PRINT 'AVG'                     (,172)
  PRINT 'FULL/PART'               (,114)
  PRINT 'HRS WORKED'              (,146)

  PRINT 'CODE'                    (+1,1)
  PRINT 'DESCRIPTION'             (,15)
  PRINT 'NAME'                    (,32)
  PRINT 'EMPLID'                  (,69)
  PRINT 'UNION CD'                (,84)
  PRINT 'JOB CODE'                (,98)
  PRINT 'TIME IND'                (,114)
  PRINT 'HIRE DATE'               (,129)
  PRINT '   YTD   '               (,146)
  PRINT 'VACATION HRS'            (,163)
end-heading


begin-procedure P000-Init-Report
#debug9 Show 'P000-Init-Report'
  move 'GEXPY053' to $ReportID
  move 'YTD HOURS FOR FT/PT VACATION AVERAGE' to $ReportTitle

  do Stdapi-Init

  Show '$ReportID='    $ReportID
  Show '$ReportTitle=' $ReportTitle

  Let $GEXXX900_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
  Let $GEXXX902_Deptid_Alias   = 'J.DEPTID'
  Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'
  Let $GEXXX907_Div_CD_Alias   = 'GDT.GEX_COMPANY_DIV_CD'                    
  Let $GEXXX909_Acct_CD_Alias  = 'J.ACCT_CD'

  If $prcs_process_instance = ''
    Do GEXXX950-Input-Parameters
  Else
    Do GEXXX922-Select-Parameters
    Do GEXXX900-Select-Company-Parameters
    Do GEXXX901-Select-Company-Paygroup-Parameters
    Do GEXXX902-Select-Deptid-Parameters
    Do GEXXX903-Select-Emp-Stat-Parameters
    Do GEXXX907-Select-Div-CD-Parameters 
    Do GEXXX909-Select-Acct-CD-Parameters

    Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.AsOfDate
    If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
      Let $X000_WHERE_SELECT_ASOFDATE = $AsOfToday
    End-If
  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  Do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE, {DEFMDY}, '', '')
  Let $X000_ORDER_BY = 'Company, Deptid, Full Part Time, Name'

  Show '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  Show '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA
  Show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA
  Show '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA
  Show '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA
  Show '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA
  Show '$X000_WHERE_SELECT_ASOFDATE ='                           $X000_WHERE_SELECT_ASOFDATE


  let $CurrentMonth = Substr($X000_REPORT_HEADING_ASOFDATE,1,2)
  move $CurrentMonth to #CurrentMonth
  if #currentmonth > 1
     let $CurrentYear = Substr($X000_WHERE_SELECT_ASOFDATE,8,4)
     move $CurrentYear to #CurrentYear
     let #previousyear = #currentyear
     do Format-Number(#PreviousYear, $PreviousYear, '9999')
  else
     let $CurrentYear = Substr($X000_WHERE_SELECT_ASOFDATE,8,4)
     move $CurrentYear to #CurrentYear
     let #PreviousYear = #CurrentYear - 1
     do Format-Number(#PreviousYear, $PreviousYear, '9999')
  end-if
  let $PreviousYearBegin = '01-JAN-'||$PreviousYear
  let $PreviousYearEnd = '31-DEC-'||$PreviousYear
  let $X000_REPORT_HEADING_ASOFDATE = substr($X000_REPORT_HEADING_ASOFDATE,1,6)||$currentyear
  do P050-Print-Cover-Page
!#########################################################
  show '$PreviousYearBegin: ' $PreviousYearBegin
  show '$PreviousYearend:   ' $PreviousYearend
!#########################################################
end-procedure



begin-procedure P050-Print-Cover-Page
#debug9 Show 'P050-Print-Cover-Page'
  If $prcs_process_instance <> ''
    Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'          (+5,1)
    Print '$Prcs_OPRID          ='                                (+2,5)
    Print $Prcs_OPRID                                             (0,+2)
    Print '$PRCS_RUN_CNTL_ID    ='                                (+1,5)
    Print $PRCS_RUN_CNTL_ID                                       (0,+2)
  End-If

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+2,5)
  Print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA                 (0,+2)
  Print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA                (0,+2)
  Print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,5)
  Print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA       (0,+2)
  Print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,5)
  Print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	          (0,+2)
  Print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,5)
  Print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA               (0,+2)
  Print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA                (0,+2)

  Print 'As Of Date :'                                            (+2,5)
  Print $X000_REPORT_HEADING_ASOFDATE                             (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_ORDER_BY                                            (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
End-Procedure


begin-procedure P100-Process-Main
#debug9 Show 'P100-Process-Main'
  Let $Data-Found-Flag = 'N'

begin-SELECT
J.COMPANY   ()  ON-BREAK  LEVEL=1  PRINT=NEVER

J.DEPTID    ()  ON-BREAK  LEVEL=2  PRINT=NEVER
                                   SAVE=$previous_deptid
                                   BEFORE=P500-Before-Deptid-Change
                                   AFTER=P600-After-Deptid-Change

GDT.GEX_COMPANY_DIV_CD
J.FULL_PART_TIME
PD.NAME
J.ACCT_CD
J.EMPLID
J.EMPL_RCD
J.PAYGROUP
J.JOBCODE
J.REG_TEMP
E.HIRE_DT
J.UNION_CD

  Let $Company = &j.company

  Let $skip = 'N'

  If &j.company = 'TMK'
    If &j.full_part_time = 'F'   Or
       &J.UNION_CD       = 'NON' Or
       &J.UNION_CD       = 'SEC'
      Let $skip = 'Y'
    End-If
  End-If

  If &J.UNION_CD = 'R02'
    Let $skip = 'Y'
  End-If

  If $skip = 'N'
    If &GDT.GEX_COMPANY_DIV_CD = 'IND'
      Let $erncd = 'WK1'
      Do P200-YTD-Hours
      Do P210-Weeks-Worked
      If $previousyear = '1999'
        Do P220-Addl-Weeks-Worked
      End-If
    Else
      Evaluate &J.UNION_CD
        When = 'R10'
        When = 'R13'
        When = 'R15'
        When = 'R16'
        When = 'R17'
        When = 'R18'
        When = 'R19'
        When = 'R20'
        When = 'R21'
        When = 'R31'
        When = 'R35'
          Let $erncd = 'WK1'
          Do P200-YTD-Hours
          Do P210-Weeks-Worked
          If $previousyear = '1999'
            Do P220-Addl-Weeks-Worked
          End-If
        When-Other
          Let $erncd = 'TOT'
          Do P200-YTD-Hours
          Let #weeks_worked = 52
      End-Evaluate
    End-If
    Do P300-Create-Detail
  End-If

FROM   PS_GEX_DEPT_TBL     GDT,
       PS_PERSONAL_DATA    PD,
       PS_EMPLOYMENT       E, 
       PS_JOB              J

WHERE  PD.EMPLID            = J.EMPLID

AND    E.EMPLID             = J.EMPLID
AND    E.EMPL_RCD          = J.EMPL_RCD

AND    J.EFFDT              =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID        = J.EMPLID
       AND    EMPL_RCD     = J.EMPL_RCD
       AND    EFFDT        <= $X000_WHERE_SELECT_ASOFDATE)

AND    J.EFFSEQ             =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID        = J.EMPLID
       AND    EMPL_RCD     = J.EMPL_RCD
       AND    EFFDT         = J.EFFDT)

And    gdt.deptid           = j.deptid

And    gdt.effdt            =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid        = gdt.deptid
       And    effdt        <= $X000_WHERE_SELECT_ASOFDATE)

And    gdt.sequence_number  =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid        = gdt.deptid
       And    effdt         = gdt.effdt)

AND   [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
AND   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
AND   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
AND   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
AND   [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
AND   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]

ORDER BY J.COMPANY, J.DEPTID, J.FULL_PART_TIME, PD.NAME
end-SELECT

  If $Data-Found-Flag = 'N'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If
end-procedure


begin-procedure P200-YTD-Hours
#debug9 Show 'P200-YTD-Hours'
  let #hrs_ytd = 0
begin-SELECT
SUM(EB.HRS_YTD) &hrs_ytd
  let #hrs_ytd = &hrs_ytd
FROM   PS_EARNINGS_BAL EB
WHERE  EB.EMPLID              = &J.EMPLID
AND    EB.COMPANY             = &J.COMPANY
AND    EB.BALANCE_ID          = 'CY'
AND    EB.BALANCE_YEAR        = $previousyear
And    eb.empl_rcd	      = &j.empl_rcd
AND    EB.BALANCE_PERIOD      =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_EARNINGS_BAL
       WHERE  EMPLID          = EB.EMPLID
       AND    COMPANY         = EB.COMPANY
       AND    BALANCE_ID      = EB.BALANCE_ID
       AND    BALANCE_YEAR    = EB.BALANCE_YEAR
       AND    SPCL_BALANCE    = EB.SPCL_BALANCE
       And    empl_rcd        = eb.empl_rcd
       AND    ERNCD           = EB.ERNCD)
AND    EB.SPCL_BALANCE        = 'Y'
AND    EB.ERNCD               = $erncd
end-SELECT
end-procedure


begin-procedure P210-Weeks-Worked
#debug9 Show 'P210-Weeks-Worked'
  Let #weeks_worked = 0
Begin-SELECT

! CWB 11/08/2001 BEGIN
!COUNT(DISTINCT PC.PAY_END_DT) &weeks_worked
COUNT(DISTINCT PC.CHECK_DT) &weeks_worked
! CWB 11/08/2001 END

  Let #weeks_worked = &weeks_worked
From   ps_pay_check   pc
Where  pc.emplid            = &j.emplid
And    pc.empl_rcd         = &j.empl_rcd
And    pc.company           = &j.company
And    pc.net_pay           > 0
And    pc.paycheck_status   = 'F'

! CWB 11/08/2001 BEGIN
and    pc.off_cycle         = 'N'
!And    pc.pay_end_dt between $PreviousYearBegin And $PreviousYearEnd
And    pc.check_dt between $PreviousYearBegin And $PreviousYearEnd
! CWB 11/08/2001 BEGIN

end-SELECT
end-procedure


begin-procedure P220-Addl-Weeks-Worked
#debug9 Show 'P220-Addl-Weeks-Worked'
begin-select
Sum(gex_weeks_worked) &gex_weeks_worked
  Add &gex_weeks_worked To #weeks_worked
From   ps_gex_r_company   grc,
       ps_gex_weeks_workd gww
Where  gww.emplid     = &j.emplid
And    grc.company    = &j.company
And    gww.gex_level1 = grc.gex_level1
And    gww.gex_level2 = grc.gex_level2
end-select
end-procedure


begin-procedure P300-Create-Detail
#debug9 Show 'P300-Create-Detail'
  let $Data-Found-Flag = 'Y'

  add 1 to #detail_count

  if #weeks_worked = 0
    let #avg_vacation_hrs = 0
  else
    let #avg_vacation_hrs = #hrs_ytd / #weeks_worked
  end-if

  let $Acctcd = &J.ACCT_CD
  Do Get-Acct-cd-descr

  print &J.DEPTID                  (+1,1)
  print $AcctNameAbbrv              (,15)
  print &PD.NAME                    (,32)
  print &J.EMPLID                   (,69)
  print &J.UNION_CD                 (,84)
  print &J.JOBCODE                  (,98)

  move &J.REG_TEMP to $GEXREGTP_ftpt_code
  do GEXREGTP_translate_code
  print $GEXREGTP_ftpt_code_return  (,118)

  do Format-DateTime(&E.HIRE_DT,$HireDate,{DEFMDY},'','')
  print $HireDate                   (,129)

  print #hrs_ytd                    (,145)   edit 99,999.99
  print #avg_vacation_hrs           (,166)   edit 99,999.99
end-procedure


begin-procedure P500-Before-Deptid-Change
#debug9 Show 'P500-Before-Deptid-Change'
  let $DeptID = &J.DEPTID
  do Get-Department-Name
end-procedure


begin-procedure P600-After-Deptid-Change
#debug9 Show 'P600-After-Deptid-Change'
  if #detail_count > 0
    new-page
    move 0 to #detail_count
  end-if
  let $DeptName = ''
end-procedure


#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx904.sqc'  !Get grade multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls

#include 'askaod.sqc'    !Ask As Of Date input
#include 'getactnm.sqc'  !Get account name
#include 'getcodta.sqc'  !Get company data
#include 'getdptnm.sqc'  !Get department name
#include 'gexregtp.sqc'  !Full/part time routines
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date math
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
