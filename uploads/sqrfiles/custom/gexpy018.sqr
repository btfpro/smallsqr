!***********************************************************************
! GEXPY018:  UPDATE GEX_EARNS_BAL                                      *                                                                   *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *                                                                  *
!***********************************************************************
! GEXPY018:             UPDATE GEX_EARNS_BAL                           *
!                                                                      *
! Narrative:            This program updates GEX_EARNS_BAL with the    *
!                       information from earnings tables on the basis  *
!	                  of plan_type  = 82 and special accumulator = *
!                       'CPN' (earnings) and 'TOT' (hours)             * 
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!		      	#debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           PS_JOB                                         *
!                       PS_PAY_EARNINGS                                *
!                       PS_PAY_OTH_EARNS                               *
!                       PS_PENSION_PLAN                                *
!                       PS_GEX_EARNS_BAL                               *
!                       PS_PAY_CAL_BAL_ID                              *
!                                                                      *
! Written by:           SXK                                            *
! Modified by:          AXL
!                                                                      *
! Normally run:         Weekly                                         *
!                                                                      *
! Entered Run                                                          *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                       ASOFDATE                                       *
!                                                                      *
!                       FOR ORDER BY CLAUSE:                           *
!                       1)  EMPLID                                     *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *
!***********************************************************************
!  GEXPY018  SXK    10/20/1997         INITIAL CREATION                *
!                                                                      *
!            JNB    03/26/1998         STANDARDIZING RUN CONTROL       *
!                                                                      *
!            SXK    07/08/1998         Removed Standard Run Control    *
!                                                                      *
!            SXK    07/23/1998         Added capability to get hours   *
!                                      from TOT and earnings from CPN  *
!                                                                      *
!            JDH    09/29/1998         Commented out some code to fix  *
!                                      duplicate insert problem        *
!                                                                      *
!            SXK    09/30/1998         Runs as of latest pay end date  *
!                                      rather than through run         *
!                                      control entered runid.          *
!                                                                      *
!	     SXK    11/10/1998         Modified to avoid duplicate     *
!				       inserts                         *
!                                                                      *
!            CJH    02/02/1999         Correct following issues:       *
!                                      - multi-job code added          *
!                                      - spcl accum cd change          *
!                                      - chgs to remove enrollment in  *
!                                          pension                     *
!                                                                      *
!            KMW    03/03/99           - changed select to pull for    *           
!                                        both special accums.	       *
!				       - changed select to look at     *
!				       - pay earnings for the salary   *
!                                        amt                           *
!                                                                      *
!	     SXK    09/15/1999         - Modified to include CBT union *
!                                        code                          *
!                                                                      *
!            AXL    02/17/2000         Shifted main select to POSITION_*
!                                      DATA and changed the Get-Sum-of-*
!                                      Earns procedure to use a        *
!                                      distinct instead of a loops=2   * 
!                                      Discarded much of the original  *
!                                      code no longer needed due to    *
!                                      new strategy.                   *
!                                                                      *
!            AXL    07/31/2000         Added COL to list of non-union  *
!                                      groups in main select.          *
!                                                                      *
!            AXL    01/16/2001         Add logic to determine correct  *
!                                      balance yr for pay_end_dt.      *
!                                                                      *
!            AXL    06/06/2001         Added TOL to list of non-union  *
!                                      groups in main select.          *
!                                                                      *
!            AXL    07/20/2001         New join in Get-Sum-of-Earns    *
!                                      procedure to ensure proper sep  *
!                                      check processing.               *
!                                                                      *
!            AXL    09/12/2001         Alter to GET-SUM-OF-EARNS proc  *
!                                      to accomodate Bonus process     *
!                                                                      *
!            AXL    12/20/2001         Variuos enhancements to handle  *
!                                      multi-company employees. Add HGN*
!                                      union code.                     *
!                                                                      *
!            AXL    12/31/2001         Have pension balances build from*
!                                      CPN only.                       *
!                                                                      *
!            SCM    02/04/2002         Added new union code 'MOD' for  *
!                                      County Markets.                 *
!                                                                      *
!            AXL    02/11/2002         Removed hard-coded union code   *
!                                      values and added run control    *
!                                      logic to pass union codes from  *
!                                      panel. Union codes: 'NON','SEC',*
!                                      'CBT','COL','TOL','HGN','MOD'   *
!                                      should be maintained on panel   *
!                                      under HRBATCH id.               *
!                                      Added PAGE_NUM & LINE_NUM to    *
!                                      GET-SUM-OF-EARNS proc to p/u    *
!                                      multiple off-cycle entries      *
!                                      previously thought of as dups.  *
!             PSR    08/06/2002        Modified UNION_CD FROM JOB_LABOR* 
!                                      TO JOB   - Upgrade 8.3          *
!                                                                      *
!  HR10443   GBD    02/05/2003         Moved and modified procedure to *
!                                      Balance_Year for split year end.*
!                                      Added code to store and use pay *
!                                      end year for inserts/updates.   *
! GEX_PY233      SXD    08/17/2007     No changes .sqr from 8.3 is as  * 
!                                       it is moved to 9.0             *
! GEX_SEC_REENG 2015-06-24 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************

!selection criteria
#define #x000_col_selection_criteria_a 	02
#define #x000_col_selection_criteria_b 	05

!line 1
#define #x000_col_tran# 		01
#define #x000_col_ssn   		13  	
#define #x000_col_message		21


#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 

!***********************************************************************
begin-heading 10
!***********************************************************************

#debug9 show 'begin-heading'

 #Include 'stdhdg01.sqc'

 Let #x000_temp_out = 'Sorted by ' || $x000_order_by
 print $x000_temp_out       (3,) center

  date-time () DD-MON-YYYY &curr_Date 
  position (+1)
  print '-' (+2,1,160) fill

  print  'TRAN #'        (+3,{#x000_col_tran#})     bold 
  !GEX_SEC_REENG 2015-06-24 Vahini Katta Begins
  !print  'SSN'           (0,{#x000_col_ssn})        bold  
  print  'EMPLID'        (0,{#x000_col_ssn})        bold
  !GEX_SEC_REENG 2015-06-24 Vahini Katta Ends  
  print  'MESSAGE'       (0,{#x000_col_message})    bold

  print '-' (+1,1,160) fill
   
end-heading


!*********************************************************************
begin-report
!*********************************************************************

#debug9 show 'begin-report'

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do stdapi-init
  do p010-Init-Variables  
  !do Get-Calendar-Year-Id
  do Report
  do Insert-Temp-Table
  !AXL - 12/20/2001 Force processing on last emplid selected - Begin
  do P140-check-current-balance-records	
  !AXL - 12/20/2001 Force processing on last emplid selected - End

  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term
  do Reset
 
 show 'Successful end of report'

end-report

!***********************************************************************
begin-procedure p010-Init-Variables
!***********************************************************************

#debug9 show 'P010-Init-Variables'

  let $x000_new_page_flag = 'N'
  let $first='Y'		!AXL - 12/20/2001
  
  let $ReportID           = 'GEXPY018'
  let $ReportTitle        = 'Update GEX_EARNS_BAL'
  let $Country            = 'USA'

  show '$ReportID= '     $ReportID
  show '$ReportTitle = ' $ReportTitle 

  display '$AsOfToday:' noline
  display $AsOfToday

  Let $GEXXX913_UNION_CD_Alias = 'P.UNION_CD'  !AXL 02/13/2002

  if $Prcs_process_instance = ''
      Do Ask-As-Of-Date
      Let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate
      display 'Pay End Date:' noline
      display $X000_WHERE_SELECT_ASOFDATE
      
      !AXL 2/11/2002 New (Begin)
      Let $UnionCdString = ''''
      Display 'Enter Union Code or leave blank to exit.'
      While 1=1
        Input $In-UnionCd Maxlen=3 'Union Code'
        Uppercase $In-UnionCd
        If Rtrim($In-UnionCd, ' ') = ''
          Concat '''' With $UnionCdString
          Break
        End-If
        If $UnionCdString <> ''''
          Concat ''',''' With $UnionCdString
        End-If
        Concat $In-UnionCd With $UnionCdString
      End-While

      If $UnionCdString = ''''''
        Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = '1=1'
        Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = 'ALL'
      Else
        Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = $GEXXX913_Union_CD_Alias || ' In (' || $UnionCdString || ')'
        Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = $GEXXX913_INCLUDE_UNION_CD_CRITERIA
      End-If
      !AXL 2/11/2002 New (end)
      Show 'GEXXX913_INCLUDE_UNION_CD_CRITERIA : '$GEXXX913_INCLUDE_UNION_CD_CRITERIA
  else

      Do GEXRCBN1-SELECT-PARAMETERS

      if rtrim(&GEX_RC_BEN.ASOFDATE,' ') = ''
         do get-pay-end-dt
         Let $X000_WHERE_SELECT_ASOFDATE = $pay_end_Dt
      else
         let $X000_WHERE_SELECT_ASOFDATE = &GEX_RC_BEN.ASOFDATE
      end-if
      display '$X000_WHERE_SELECT_ASOFDATE: ' noline
      display $X000_WHERE_SELECT_ASOFDATE

      Do GEXXX913-Select-UNION-CD-Parameters

  end-if

  Do format-datetime($X000_WHERE_SELECT_ASOFDATE,$ped,{DEFCMP},'','')   
  
  do Check-Temp-File

! GBD 02/03/2003 Begin - Balance Year lookup moved in program
  !AXL - 01/16/2001 New logic to determine correct balance year - Begin
!  do Get-Pay-Balance-Year
  
  !do Convert-To-DTU-Date($X000_WHERE_SELECT_ASOFDATE,$pay_end_dt_yyyy)
  !let #yyyy_pay_end_dt = to_number(substr($pay_end_dt_yyyy,1,4))
!  let #yyyy_pay_end_dt = &YR.BALANCE_YEAR
  !AXL - 01/16/2001 New logic to determine correct balance year - End

!  display '#yyyy_pay_end_dt ' noline
!  display #yyyy_pay_end_dt 
! GBD 02/03/2003 End

  !do Get-Date-Codes
   
  print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
  print '$Prcs_OPRID          ='                              (+2,{#x000_col_selection_criteria_b})
  print $Prcs_OPRID                                           (0,+2)
  print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
  print $PRCS_RUN_CNTL_ID                                     (0,+2)

  print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,{#x000_col_selection_criteria_a})
  print '$X000_WHERE_SELECT_ASOFDATE ='                       (+1,{#x000_col_selection_criteria_b})
  print  $X000_WHERE_SELECT_ASOFDATE                          (0,+2)

  Print '$GEXXX913_INCLUDE_UNION_CD_CRITERIA:'                (+2,5)
  Print $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA           (0,+2)

  let #page-count = 0
  NEW-PAGE
  LET #PAGE-COUNT = 1

end-procedure

!*********************************************************************
Begin-Procedure get-pay-end-dt
!*********************************************************************
!Gets the pay end date of the previous pay cycle.
!*********************************************************************

move 'N' to $found

begin-select loops = 1 on-error=P900-sql-error-found('Get-Pay-End-Dt')
PAY.PAY_END_DT

  move 'Y' to $found
  move &PAY.PAY_END_DT to $pay_end_Dt
  
FROM PS_PAY_CALENDAR PAY

WHERE PAY.PAY_END_DT = (SELECT DISTINCT(MAX(PAY_END_DT))
   		      FROM PS_PAY_CALENDAR
		     WHERE PAY_END_DT <= $AsOfToday
                     AND PAY_SHEETS_RUN = 'Y')
end-select

if $found = 'N'
   display 'No Previous Pay Cycle as of:' noline
   display $AsOfToday
   stop
end-if

end-procedure

!*********************************************************************
begin-procedure Check-Temp-File
!*********************************************************************
let $sql-statement = 'Check date in PS_GEX_PENS_BAL'
begin-Select
max(tmp.pay_end_dt) &tmpdt
 Do format-datetime (&tmpdt,$tempdt,{DEFCMP},'','')  

from ps_gex_r_pens_bal tmp

end-select

  if $ped <= $tempdt

    Show ' '
    Show 'ERROR:  Process already run for pay_end_dt: ' noline
    Show $X000_WHERE_SELECT_ASOFDATE
    Show ' '
    Do End-SQR 
  end-if

end-procedure

!AXL - 01/16/2001 New proc to determine correct balance year - Begin
!*********************************************************************
Begin-Procedure Get-Pay-Balance-Year
!*********************************************************************

begin-select loops = 1 on-error=P900-sql-error-found('Get-Pay-Balance-Year')

YR.BALANCE_YEAR

! GBD 02/03/2003 Begin
FROM PS_PAY_CAL_BAL_ID YR
  WHERE  YR.COMPANY    = $Company
     AND YR.PAYGROUP   = $PayGroup
     AND YR.BALANCE_ID = 'CY'
     AND YR.PAY_END_DT = (Select Max(PAY_END_DT)
         From PS_PAY_CAL_BAL_ID
	 Where COMPANY     = YR.COMPANY
	 And   PAYGROUP    = YR.PAYGROUP
	 And   BALANCE_ID  = YR.BALANCE_ID
	 And   PAY_END_DT <= $X000_WHERE_SELECT_ASOFDATE)

!**Replaced this code**
!FROM PS_PAY_CAL_BAL_ID YR
!  WHERE YR.PAY_END_DT = $X000_WHERE_SELECT_ASOFDATE
!     AND YR.BALANCE_ID = 'CY'
! GBD 02/03/2003 End
     
end-select

end-procedure
!AXL - 01/16/2001 New proc to determine correct balance year - End

!*********************************************************************
begin-procedure Report
!*********************************************************************

date-time () hh:mi:ss &timeBegan
display 'Report Began: ' noline
display &timeBegan

 move 'N' to $Errorfound

 do P090-process-position-data

 date-time () hh:mi:ss &timeProcess
 display #InputTran 99999 noline
 display ' Transactions Processed: ' noline
 display &timeProcess

end-procedure

!*********************************************************************
begin-procedure P090-process-position-data
!*********************************************************************
! AXL - 02/17/2000 - Add new procedure - Begin
! Select UNION Codes associated with DEPTID's as of the PAY_END_DT

#debug9 show 'P090-process-position-data'

   move 'N' to $rowfound
   Let $x100_Get_Employees_Data_Flag = 'N'
   let #inputtran = 0

begin-select ON-ERROR=P900-SQL-Error-Found('P090-process-position-data')

P.POSITION_NBR
P.DEPTID
P.JOBCODE
P.UNION_CD
    
   do P100-process-employee-data
    
FROM PS_POSITION_DATA P
   WHERE P.DEPTID not in (select deptid from ps_gex_dept_Tbl where gex_company_div_cd = 'IND')
   AND  P.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_POSITION_DATA
        WHERE P.POSITION_NBR = POSITION_NBR
          AND EFFDT <= $X000_WHERE_SELECT_ASOFDATE)
   !AXL 02/11/2002 Union Codes now supplied via panel - Begin
   AND   [$GEXXX913_INCLUDE_UNION_CD_CRITERIA]
   !AXL 02/11/2002 Union Codes now supplied via panel - End
  
end-select

   if $x100_Get_Employees_Data_Flag = 'N'
      print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) CENTER
   end-if

   if $rowfound = 'N'
     display 'No Employees found to update the earnings balance by pension plan = 82' 
   end-if


end-procedure

!*********************************************************************
!This is the logic to determine the current pay end date depending on
!current date. Selects the total number of hours and earnings for each
!employee by the company, plan_type and earnings code. 
!*********************************************************************
!*********************************************************************
begin-procedure P100-process-employee-data
!*********************************************************************
#debug9 show 'P100-process-employee-data'

begin-select ON-ERROR=P900-SQL-Error-Found('P100-Process-employee-data')

j.COMPANY
j.PAYGROUP        
j.EMPLID       
j.EMPL_RCD

  move 'Y' to $rowFound
  move 'N' to $errorfound
  add 1 to #inputtran
  move 0 to #total_hrs
  move 0 to #total_earns
  move &j.COMPANY       to $Company
  move &j.PAYGROUP      to $PayGroup
  move &j.EMPLID        to $emplid
! CJH
  move &j.EMPL_RCD     to #empl_rcd 
! CJH

! GBD 02/05/2003 Begin - Moved and modified logic to get Balance Year
!                        for split year processing
  do Get-Pay-Balance-Year
  
  let #yyyy_pay_end_dt = &YR.BALANCE_YEAR

!  display '#yyyy_pay_end_dt ' noline
!  display #yyyy_pay_end_dt 
! GBD 02/05/2003 End
!CJH - 02/18/1999 - begin
  #debug8   display 'Emplid/rcd#:' noline
  #debug8   display $emplid noline
  #debug8   display '/ ' noline
  #debug8   display #empl_rcd 
  #debug8   display '/ '
  #debug8   display '#yyyy_pay_end_dt: ' noline
  #debug8   display #yyyy_pay_end_dt
!CJH - 02/18/1999 - end

  !AXL - 02/17/2000 - Add new show stmt for debuging - Begin
  #debug8 show $emplid ' pos # ' &p.position_nbr ' &p.deptid ' &p.deptid  
  !AXL - 02/17/2000 - Add new show stmt for debuging - End

  Do P101-Get-Sum-of-Earns

  !AXL - 12/20/2001 - Disable this section - Begin
  !AXL - 09/12/2001 - New flag - Begin
  !if $sum_of_earns_flag='Y'
  !   if $errorfound = 'N'
  !     do P140-check-current-balance-records
  !  end-if
  !end-if
  !AXL 09/12/2001 - New flag - End
  !AXL - 12/20/2001 - Disable this section - End

  Let $x100_Get_Employees_Data_Flag = 'Y'

!AXL - 02/17/2000 - Add join to JOB for new strategy - Begin
FROM  PS_JOB J
    WHERE J.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB
        WHERE J.EMPLID = EMPLID
          AND J.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $X000_WHERE_SELECT_ASOFDATE)
    AND J.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB    !AXL 12/20/2001 Previously MIN
        WHERE J.EMPLID = EMPLID
          AND J.EMPL_RCD = EMPL_RCD
          AND J.EFFDT = EFFDT)
    AND j.POSITION_NBR=&P.POSITION_NBR 
    AND j.DEPTID      =&P.DEPTID
    AND j.JOBCODE     =&P.JOBCODE

!AXL - 02/17/2000 - Add join to JOB for new strategy - End
      
ORDER BY j.EMPLID, j.EMPL_RCD

end-select

end-procedure

!*********************************************************************
!Retrieves employee's total earnings for special accumulator CPN for
!the current period for earnings and total hours for special accum TOT
!*********************************************************************
!AXL 12/31/2001 TOT no longer being used

Begin-Procedure P101-Get-Sum-of-Earns 
!only execute once to pick up a single row off of 
! the special accum tables.  Multiple rows per payline, same totals
  
  let $sum_of_earns_flag='N'  !AXL 09/12/2001 - New flag

!AXL - 02/17/2000 - Replaced loops=2 with distinct - Begin
begin-select distinct ON-ERROR=P900-SQL-Error-Found('P101-Get-Sum-of-Earns')
!AXL - 02/17/2000 - Replaced loops=2 with distinct - End
B2.EMPLID	!AXL 12/20/2001 
B2.EMPL_RCD	!AXL 12/20/2001 
C2.ERNCD_SPCL
C2.SPCL_EARNS
C2.SPCL_HRS 
C2.SEPCHK	!AXL 07/20/2001 
C2.OFF_CYCLE	!AXL - 02/17/2000 - Added OFF_CYCLE 
C2.COMPANY      !AXL - 09/12/2001 - New 
C2.PAGE_NUM	!AXL - 02/12/2002 - New 
C2.LINE_NUM	!AXL - 02/12/2002 - New 

  if $first='Y'
   let $hold_emplid      =  &B2.emplid
   let #hold_empl_rcd    =  &B2.EMPL_RCD
   let $hold_company     =  &c2.company

   let #hold_yyyy_pay_end_dt = #yyyy_pay_end_dt         !GBD 02/05/2003

   let $first='N'
  end-if

  #debug8 show $emplid &c2.erncd_spcl ' ' &c2.spcl_earns ' ' &c2.spcl_hrs ' ' &C2.COMPANY 

  !if &C2.ERNCD_SPCL='CPN' and &C2.SPCL_EARNS <> 0
  !   add &C2.spcl_earns  to #total_Earns
  !end-if
  !if &C2.ERNCD_SPCL='TOT' and &C2.SPCL_HRS <> 0
  !   add &C2.spcl_hrs to #total_hrs
  !end-if

  #debug8 show '$emplid ' $emplid ' &B2.emplid ' $hold_emplid ' &c2.company ' &c2.company ' $hold_company ' $hold_company
  if &B2.emplid <> $hold_emplid or &c2.company <> $hold_company 
     #debug8 show '<> exists '
     let #total_Earns = 0
     let #total_hrs   = 0
     if &C2.ERNCD_SPCL='CPN' and &C2.SPCL_EARNS <> 0
        add &C2.spcl_earns  to #total_Earns
     end-if
     !if &C2.ERNCD_SPCL='TOT' and &C2.SPCL_HRS <> 0	!AXL 12/31/2001
     if &C2.ERNCD_SPCL='CPN' and &C2.SPCL_HRS <> 0	!AXL 12/31/2001
        add &C2.spcl_hrs to #total_hrs
     end-if
     do P140-check-current-balance-records
  else
     #debug8 show 'same ee same cmpy'
     if &C2.ERNCD_SPCL='CPN' and &C2.SPCL_EARNS <> 0
        add &C2.spcl_earns  to #total_Earns
     end-if
     !if &C2.ERNCD_SPCL='TOT' and &C2.SPCL_HRS <> 0	!AXL 12/31/2001
     if &C2.ERNCD_SPCL='CPN' and &C2.SPCL_HRS <> 0	!AXL 12/31/2001
        add &C2.spcl_hrs to #total_hrs
     end-if
  end-if

  let $hold_emplid  	= &B2.emplid
  let #hold_empl_rcd    = &B2.EMPL_RCD
  let $hold_company 	= &C2.company
  let #hold_Earns       = #total_Earns
  let #hold_hrs         = #total_hrs

  let #hold_yyyy_pay_end_dt = #yyyy_pay_end_dt          !GBD 02/05/2003

    
! KMW - changed to use ps_pay_spcl_earns
FROM  PS_PAY_EARNINGS B2,
      PS_PAY_SPCL_EARNS C2	

WHERE  B2.EMPLID   = $emplid
!CJH
   and B2.EMPL_RCD = #empl_rcd
!CJH
   !AND B2.COMPANY = $company    -  AXL 09/12/2001 Causing sqr to ignore prev cmpys
   !AND B2.PAYGROUP = $paygroup	 -  AXL 07/20/2001 Causing sqr to ignore prev paygroups
   AND B2.PAY_END_DT = $X000_WHERE_SELECT_ASOFDATE
   AND B2.COMPANY   = C2.COMPANY
   AND B2.PAYGROUP  = C2.PAYGROUP
   AND B2.PAY_END_DT = C2.PAY_END_DT
   AND B2.OFF_CYCLE  = C2.OFF_CYCLE
   AND B2.PAGE_NUM   = C2.PAGE_NUM
   AND B2.LINE_NUM   = C2.LINE_NUM
   !AXL 07/20/2001 New join to ensure proper sep check processing - Begin
   AND B2.SEPCHK  = C2.SEPCHK	
   !AXL 07/20/2001 New join to ensure proper sep check processing - End	
   !AND C2.ERNCD_SPCL in ('TOT','CPN')		!AXL 12/31/2001
   AND C2.ERNCD_SPCL = 'CPN'			!AXL 12/31/2001

order by B2.EMPLID,c2.company,C2.ERNCD_SPCL
end-select

end-procedure

!*********************************************************************
!Checks the existing rows in GEX_EARNS_BAL table for the employee. If
!any rows are found, compares the latest year, quarter and month with
!current pay period and determines how to update/insert the table.
!*********************************************************************
!*********************************************************************
begin-procedure P140-check-current-balance-records
!*********************************************************************
#debug9 show ' P140-check-current-balance-records'

move 'N' to $balance_found_1
move 'N' to $errorfound

begin-select on-error=P900-sql-error-found('P140-check-current-balance-records')

E.BALANCE_YEAR   &max_balance_year

   move 'Y' to $balance_found_1
   
!   show $emplid ' yr & yyyy yr  '  &max_balance_year ' ' #yyyy_pay_end_Dt
   !Employee has a record for current year

! GBD 02/05/2003 Begin
!   if &max_balance_year = #yyyy_pay_end_Dt
   if &max_balance_year = #hold_yyyy_pay_end_Dt
! GBD 02/05/2003 End

     do P200-update-balance-hrs
   else
    !Employee has a record from prior year
     !move #total_hrs to #hrs_ytd_1	
     !move #total_earns to #grs_ytd
     move #hold_hrs to #hrs_ytd_1	
     move #hold_earns to #grs_ytd
     if $hold_emplid <> ''  !PSR 09/06/2002 Added to Check for NULL Values - Upgrade 8.3
       do P260-insert-balance-hrs
     end-if
   end-if
      
from PS_GEX_EARNS_BAL E
 
WHERE E.EMPLID = $hold_emplid
!CJH - 02/18/1999 - begin
  AND E.EMPL_RCD = #hold_empl_rcd
  AND E.COMPANY = $hold_company	!AXL 09/12/2001
  AND E.BALANCE_ID = 'CY'
! GBD 02/05/2003 Begin
  AND E.BALANCE_YEAR = #hold_yyyy_pay_end_dt

!  AND E.BALANCE_YEAR = (SELECT MAX(BALANCE_YEAR)
!                          FROM PS_GEX_EARNS_BAL
!                         WHERE e.EMPLID = emplid
!                           and E.EMPL_RCD# = empl_rcd#)
! GBD 02/05/2003 End

end-select

   !Employee being processed for 1st time
   if $balance_found_1 = 'N'
      !move #total_hrs to #hrs_ytd_1
      !move #total_earns to #grs_ytd
      move #hold_hrs to #hrs_ytd_1
      move #hold_earns to #grs_ytd
     if $hold_emplid <> ''
       do P260-insert-balance-hrs!PSR 09/06/2002 Added to Check for NULL Values - Upgrade 8.3
     end-if
   end-if

end-procedure

!*********************************************************************
!Selects the latest row from the table and adds the current pay period
!hours and earnings to that total and update the existing row
!*********************************************************************
!*********************************************************************
begin-procedure P200-update-balance-hrs
!*********************************************************************
#debug9 show 'P200-update-balance-hrs'

!   show #hold_hrs
!   show #hold_earns

   do P190-get-balance-hrs
 
!   show #hrs_ytd_1,
!   show #grs_ytd

begin-sql on-error=P900-sql-error-found('P200-update-balance-hrs')
UPDATE PS_GEX_EARNS_BAL F
   SET F.HRS_YTD = #hrs_ytd_1,
       F.GRS_YTD = #grs_ytd
  
WHERE F.EMPLID = $hold_emplid
  AND F.EMPL_RCD = #hold_empl_rcd
  AND F.COMPANY = $hold_company	!AXL 09/12/2001
  AND F.BALANCE_ID = 'CY'
  AND F.BALANCE_YEAR = #yyyy_pay_end_dt
  
end-sql

end-procedure

!*********************************************************************
!Selects the latest total hours and total earnings from the table for
!the employee
!*********************************************************************
!*********************************************************************
begin-procedure P190-get-balance-hrs
!*********************************************************************
   #debug9 show 'P190-get-balance-hrs'

   move 0 to #hrs_ytd_1
   move 0 to #grs_ytd

begin-select on-error=P900-sql-error-found('P190-get-balance-hrs')

H.HRS_YTD
H.GRS_YTD
 
   move &H.HRS_YTD to #hrs_ytd_1
   move &H.grs_ytd to #grs_ytd
   
   !add #total_hrs to #hrs_ytd_1
   !add #total_earns to #grs_ytd
   add #hold_hrs to #hrs_ytd_1
   add #hold_earns to #grs_ytd
  
from PS_GEX_EARNS_BAL H
 
WHERE H.EMPLID = $hold_emplid
  AND H.EMPL_RCD = #hold_empl_rcd
  AND H.COMPANY = $hold_company	!AXL 09/12/2001
  AND H.BALANCE_ID = 'CY'
! GBD 02/05/2003 Begin
!  AND H.BALANCE_YEAR = #yyyy_pay_end_dt
  AND H.BALANCE_YEAR = #hold_yyyy_pay_end_dt
! GBD 02/05/2003 End
 
end-select
end-procedure

!*********************************************************************
!Inserts a new row in GEX_EARNS_BAL table
!*********************************************************************

begin-procedure p260-insert-balance-hrs

   #debug9 show 'p260-insert-balance-hrs'

   display 'Insert Emplid/rcd#:' noline
   display $hold_emplid noline
   display '/ ' noline
   display #hold_empl_rcd 
   display '$hold_company ' noline
   display $hold_company
   display '#yyyy_pay_end_dt ' noline
   display #yyyy_pay_end_dt
   display '#hrs_ytd_1 ' noline
    display #hrs_ytd_1
  display '#grs_ytd ' noline
  display #grs_ytd

begin-sql on-error=P900-sql-error-found('P260-insert-balance-hrs')
! CJH - 02/18/1999 - begin

INSERT INTO PS_GEX_EARNS_BAL
(EMPLID,
EMPL_RCD,
COMPANY,
BALANCE_ID,
BALANCE_YEAR,
HRS_YTD,
GRS_YTD)
VALUES
(
$hold_emplid,
#hold_empl_rcd,
$hold_company,
'CY',
#yyyy_pay_end_dt,
#hrs_ytd_1,
#grs_ytd)

end-sql

end-procedure

!*********************************************************************
!Displays the error messages and stops execution
!********************************************************************* 
begin-procedure P900-SQL-Error-Found($Proc_Name) 
!*********************************************************************
   do P990-error-found
   display 'SQL Error in ' 
   display $Proc_Name 
   display $_sql-error
   display 'sql-status:' 
   display #_sql-status 

   STOP

end-procedure

!***********************************************************************
begin-procedure P990-Error-Found
!***********************************************************************

   move 'Y' to $ErrorFound
   do Format-Number(#Inputrec, $out, '99999')
   print $out (+1,1)

   let $Emplid_prt = edit($Emplid,'xxx-xx-xxxx') !GEX_SEC_REENG 2015-06-24 Vahini Katta
   let $Emplid_prt = $Emplid                     !GEX_SEC_REENG 2015-06-24 Vahini Katta
   print $Emplid_prt (,8)

end-procedure

!*********************************************************************
begin-procedure insert-temp-table
!*********************************************************************

begin-sql on-error=P900-sql-error-found('insert-temp-table')

INSERT INTO PS_GEX_R_PENS_BAL
(PAY_END_DT,
EFFDT)
VALUES
($X000_WHERE_SELECT_ASOFDATE,
$AsOfToday)

end-sql

end-procedure

!***********************************************************************
Begin-procedure End-SQR 
!***********************************************************************
  let $tbl_name = 'GEXPY018_ABORT'
begin-select              ! on-error=SQL-Error-Found('end-sqr')
x
from [$tbl_name]
End-select

End-procedure

#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
!#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'gexxx951.sqc'  !Select Oracle Instance
#include 'gexxx913.sqc'  !Get Union code multiple row table
#Include 'gexxx920.sqc'  !Run Control parameters from GEX_RC_BEN record
