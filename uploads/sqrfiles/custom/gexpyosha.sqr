!***********************************************************************
!  GEXPY026:  OSHA - WORKERS COMP SUMMARY REPORT                       *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY026:             OSHA - Workers Comp Summary Report             *
!                                                                      *
! Narrative:		This program will produce a workers comp       *
!                       summary report for OSHA.  Employees working    *
!                       in either PA or OH are selected.  The report   *
!                       will be sorted by company, paygroup, store.    *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:		tax_balance                                    *
!                       gex_dept_tbl                                   *
!                       tax_location2                                  *
!                       dept_tbl                                       *
!                       job                                            *
!                                                                      *
! Written by:		Jim Hutchison                                  *
!                                                                      *
! Normally Run:		Quarterly                                      *
!                                                                      *
! Control Parms:	Company Division Code                          *
!                       Company                                        *
!                       Paygroup                                       *
!                       Deptid                                         *
!                       Employee Status                                *
!                       Account Code                                   *
!                       As Of Date                                     *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS	DATE         DESCRIPTION OF THE CHANGE                 *
!***********************************************************************
!  JDH          01/27/98     Initial Creation                          *
!  JDH          10/28/98     Added paygroup to control break           *
!  SXK          02/18/99     Modified state = $u                       *
!  JDH          09/03/99     Added MTD, QTD columns and counts by each *
!                            Join to dept_tbl and tax_location2        *
!                             instead of personal_data.                *
!                            Added subselect to get max empl_rcd.     *
!  CJH          03/26/2002   Rewrite main select for performance chgs  *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization


#define #column1     1
#define #column2    16
#define #column3    29
#define #column4    50
#define #column5    71
#define #column6    92
#define #column7   113 
#define #column8   134 


Begin-Setup
!  Begin-SQL
!    Alter Session Set OPTIMIZER_GOAL=RULE;
!  End-SQL
End-Setup


begin-heading 7
#debug9 Show 'begin-heading'
  #Include 'stdhdg02.sqc'

  Let $X000_temp_out = 'Report as of ' || $X000_REPORT_HEADING_ASOFDATE
  Print $X000_temp_out     (3,)  center

  if $PayGroup <> $priorPayGroup
    do Get-PayGroup-Data
    move $PayGroup to $priorPayGroup
  end-if
  print 'Pay Group'        (4,1)
  print $PayGroup          (0,13)
  print $PayGroupName      (0,17)

  PRINT 'STORE/'           (+2,{#column1})
  PRINT '        PA MTD'   (,{#column3})
  PRINT '        PA QTD'   (,{#column4})
  PRINT '        PA YTD'   (,{#column5})
  PRINT '        OH MTD'   (,{#column6})
  PRINT '        OH QTD'   (,{#column7})
  PRINT '        OH YTD'   (,{#column8})

  PRINT 'LOCATION'         (+1,{#column1})
  PRINT ' FEDERAL WAGES'   (,{#column3})
  PRINT ' FEDERAL WAGES'   (,{#column4})
  PRINT ' FEDERAL WAGES'   (,{#column5})
  PRINT ' FEDERAL WAGES'   (,{#column6})
  PRINT ' FEDERAL WAGES'   (,{#column7})
  PRINT ' FEDERAL WAGES'   (,{#column8})

  PRINT '-'                (+1,{#column1},8)  Fill
  PRINT '-'                (,{#column3},14)   Fill
  PRINT '-'                (,{#column4},14)   Fill
  PRINT '-'                (,{#column5},14)   Fill
  PRINT '-'                (,{#column6},14)   Fill
  PRINT '-'                (,{#column7},14)   Fill
  PRINT '-'                (,{#column8},14)   Fill
end-heading


begin-report
#debug9 Show 'begin-report'
  do Init-DateTime           !datetime.sqc
  do Init-Number             !number.sqc
  do Get-Current-DateTime    !curdttim.sqc
  do P000-Init-Report
  do P100-Process-Main
  do Reset                   !reset.sqc
  do Stdapi-Term             !stdapi.sqc
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  Show 'Successful end of report'
end-report


begin-procedure P000-Init-Report
#debug9 Show 'P000-Init-Report'
  move 'GEXPY026' to $ReportID
  move 'OSHA - WORKERS COMP SUMMARY REPORT' to $ReportTitle
  do Stdapi-Init

  Show '$ReportID=' $ReportID
  Show '$ReportTitle=' $ReportTitle

  Let $GEXXX900_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
  Let $GEXXX902_Deptid_Alias   = 'J.DEPTID'
  Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'
  Let $GEXXX907_Div_CD_Alias   = 'GDT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias  = 'J.ACCT_CD'

  if $prcs_process_instance = ''
    Do GEXXX950-Input-Parameters
  else
    Do GEXXX922-Select-Parameters

    Do GEXXX900-Select-Company-Parameters
    Do GEXXX901-Select-Company-Paygroup-Parameters
    Do GEXXX902-Select-Deptid-Parameters
    Do GEXXX903-Select-Emp-Stat-Parameters
    Do GEXXX907-Select-Div-CD-Parameters 
    Do GEXXX909-Select-Acct-CD-Parameters

    Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.AsOfDate
    If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
      Let $X000_WHERE_SELECT_ASOFDATE = $AsOfToday
    End-If
  End-If

  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  Do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')

  Let #Balance_Year = Substr($X000_WHERE_SELECT_ASOFDATE,8,4)
  Let #Balance_Period = Substr($X000_REPORT_HEADING_ASOFDATE,1,2)

  Let #balance_qtr = #balance_period
  Let #balance_qtr = ((#balance_qtr - 1)/ 3) + 1
  do Format-Number(#balance_qtr, $balance_qtr, '9.99') !avoid rounding the integer portion
  move $balance_qtr to $balance_qtr x     !save the integer portion
  let #balance_qtr = $balance_qtr

  Let $X000_ORDER_BY = 'Company, Paygroup, Store'

  Show '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           = '  $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  Show '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          = '  $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA
  Show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = '  $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA
  Show '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           = '  $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA
  Show '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         = '  $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA
  Show '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          = '  $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA
  Show '$X000_WHERE_SELECT_ASOFDATE                         = '  $X000_WHERE_SELECT_ASOFDATE

  do P050-Print-Cover-Page

  Do Get-Calendar-Year-Id    !getbalid.sqc
end-procedure


begin-procedure P050-Print-Cover-Page
#debug9 Show 'P050-Print-Cover-Page'
  If $prcs_process_instance <> ''
    Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'      (+5,1)
    Print '$Prcs_OPRID          ='                            (+2,5)
    Print $Prcs_OPRID                                         (0,+2)
    Print '$PRCS_RUN_CNTL_ID    ='                            (+1,5)
    Print $PRCS_RUN_CNTL_ID                                   (0,+2)
  End-If

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+2,5)
  Print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA                 (0,+2)
  Print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA                (0,+2)
  Print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,5)
  Print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA       (0,+2)
  Print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,5)
  Print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	          (0,+2)
  Print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,5)
  Print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA               (0,+2)
  Print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA                (0,+2)

  Print 'As Of Date :'                                            (+2,5)
  Print $X000_REPORT_HEADING_ASOFDATE                             (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_ORDER_BY                                            (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
End-Procedure


begin-procedure P100-Process-Main
#debug9 Show 'P100-Process-Main'
begin-SELECT
!/*+ USE_MERGE(tb,j1,j2,j3,v2,j,tl,dt,gdt) */ 
/*+ USE_MERGE(tb,j1,j2,j3,v2,j,tl,dt,gdt) index(tb ps_tax_balance) */
J.COMPANY  ()     on-break level=1
                           print=never

J.PAYGROUP ()     on-break level=2
                           print=never
                           after=P200-Paygroup-Change

J.DEPTID   ()     on-break level=3
                           print=never
                           save=$previous_dept
                           after=P300-Dept-Change

TL.STATE
TB.BALANCE_QTR
TB.BALANCE_PERIOD
TB.TXGRS_MTD
TB.TXGRS_QTD
TB.TXGRS_YTD

  Let $Data-Found-Flag = 'Y'

  Let $Company  = &J.COMPANY
  Let $Paygroup = &J.PAYGROUP

  if &TL.STATE = 'PA'
    add 1 to #total_pa_employee_count

    if &TB.BALANCE_PERIOD = #balance_period
      add 1 to #pa_mtd_employee_count
      add &TB.TXGRS_MTD to #pa_mtd_federal_wages
      add &TB.TXGRS_MTD to #total_pa_mtd_federal_wages
    end-if

    if &TB.BALANCE_QTR = #balance_qtr
      add 1 to #pa_qtd_employee_count
      add &TB.TXGRS_QTD to #pa_qtd_federal_wages
      add &TB.TXGRS_QTD to #total_pa_qtd_federal_wages
    end-if

    add 1 to #pa_ytd_employee_count
    add &TB.TXGRS_YTD to #pa_ytd_federal_wages
    add &TB.TXGRS_YTD to #total_pa_ytd_federal_wages

  else
    if &TL.STATE = 'OH'
      add 1 to #total_oh_employee_count

      if &TB.BALANCE_PERIOD = #balance_period
        add 1 to #oh_mtd_employee_count
        add &TB.TXGRS_MTD to #oh_mtd_federal_wages
        add &TB.TXGRS_MTD to #total_oh_mtd_federal_wages
      end-if

      if &TB.BALANCE_QTR = #balance_qtr
        add 1 to #oh_qtd_employee_count
        add &TB.TXGRS_QTD to #oh_qtd_federal_wages
        add &TB.TXGRS_QTD to #total_oh_qtd_federal_wages
      end-if

      add 1 to #oh_ytd_employee_count
      add &TB.TXGRS_YTD to #oh_ytd_federal_wages
      add &TB.TXGRS_YTD to #total_oh_ytd_federal_wages
    end-if
  end-if

FROM   PS_GEX_DEPT_TBL   GDT,
       PS_TAX_LOCATION2  TL,
       PS_DEPT_TBL       DT,
       PS_JOB            J,
       PS_TAX_BALANCE    TB
       ,
       (SELECT  EMPLID ,COMPANY , MAX(EMPL_RCD)  EMPL_RCD FROM PS_JOB GROUP BY EMPLID, COMPANY) J1 
       ,
       (SELECT EMPLID ,EMPL_RCD ,COMPANY, MAX(EFFDT) EFFDT FROM PS_JOB WHERE EFFDT <= $X000_WHERE_SELECT_ASOFDATE
        GROUP BY  EMPLID ,EMPL_RCD ,COMPANY) J2
       ,
       (SELECT EMPLID,EMPL_RCD ,EFFDT ,COMPANY , MAX(EFFSEQ)  EFFSEQ FROM PS_JOB 
        GROUP BY  EMPLID,EMPL_RCD ,EFFDT ,COMPANY ) J3
       ,
       (SELECT EMPLID,COMPANY,BALANCE_ID,BALANCE_YEAR,STATE,LOCALITY,TAX_CLASS , MAX(BALANCE_PERIOD) MAX_BALANCE_PERIOD 
        FROM PS_TAX_BALANCE WHERE BALANCE_PERIOD <= #Balance_Period and BALANCE_ID = $Calendar_Year_Id AND BALANCE_YEAR = #Balance_Year 
        GROUP BY EMPLID,COMPANY,BALANCE_ID,BALANCE_YEAR,STATE,LOCALITY,TAX_CLASS ) V2

WHERE  j.emplid = j1.emplid
and    j.empl_rcd = j1.empl_rcd
and    j.company = j1.company

and    j.emplid = j2.emplid
and    j.empl_rcd = j2.empl_rcd
and    j.company = j2.company
and    j.effdt = j2.effdt

and    j.emplid = j3.emplid
and    j.empl_rcd = j3.empl_rcd
and    j.effdt = j3.effdt
and    j.company = j3.company
and    j.effseq = j3.effseq

And    j.deptid                = gdt.deptid

And    gdt.effdt               =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid           = gdt.deptid
       And    effdt           <= $X000_WHERE_SELECT_ASOFDATE)

And    gdt.sequence_number     =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid           = gdt.deptid
       And    effdt            = gdt.effdt)

And    j.deptid                = dt.deptid

And    dt.effdt                =
      (Select Max(effdt)
       From   ps_dept_tbl
       Where  deptid           = dt.deptid
       And    effdt           <= $X000_WHERE_SELECT_ASOFDATE)

AND    TB.EMPLID               = J.EMPLID
AND    TB.COMPANY              = J.COMPANY
AND    TB.BALANCE_ID           = $Calendar_Year_Id
AND    TB.BALANCE_YEAR         = #Balance_Year
AND    TB.BALANCE_PERIOD       = V2.MAX_BALANCE_PERIOD 
AND    tb.emplid               = v2.emplid 
AND    tb.company              = v2.company 
AND    tb.balance_id           = v2.balance_id 
AND    tb.balance_year         = v2.balance_year 
AND    tb.state                = v2.state 
AND    tb.locality             = v2.locality 
AND    tb.tax_class            = v2.tax_class 

AND    TB.STATE                = '$U'
AND    TB.LOCALITY             = ' '
AND    TB.TAX_CLASS            = 'H'

AND    TL.TAX_LOCATION_CD      = DT.TAX_LOCATION_CD
AND    TL.LOCALITY_LINK        = ' '

AND   [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
AND   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
AND   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
AND   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
AND   [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
AND   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]

ORDER BY J.COMPANY, J.PAYGROUP, J.DEPTID

end-SELECT

  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  Else
    Print 'REPORT'                       (+3,{#column1})
    Print 'TOTALS'                       (,{#column2})
    Print #total_pa_mtd_federal_wages    (,{#column3})   edit 999,999,999.99
    Print #total_pa_qtd_federal_wages    (,{#column4})   edit 999,999,999.99
    Print #total_pa_ytd_federal_wages    (,{#column5})   edit 999,999,999.99
    Print #total_oh_mtd_federal_wages    (,{#column6})   edit 999,999,999.99
    Print #total_oh_qtd_federal_wages    (,{#column7})   edit 999,999,999.99
    Print #total_oh_ytd_federal_wages    (,{#column8})   edit 999,999,999.99

    Print 'COUNTS'                       (+1,{#column2})
    Print #total_mtd_pa_employee_count   (,{#column3})   edit 999,999,999
    Print #total_qtd_pa_employee_count   (,{#column4})   edit 999,999,999
    Print #total_ytd_pa_employee_count   (,{#column5})   edit 999,999,999
    Print #total_mtd_oh_employee_count   (,{#column6})   edit 999,999,999
    Print #total_qtd_oh_employee_count   (,{#column7})   edit 999,999,999
    Print #total_ytd_oh_employee_count   (,{#column8})   edit 999,999,999
  End-If
end-procedure


begin-procedure P200-Paygroup-Change
#debug9 Show 'P200-Paygroup-Change'
  new-page
end-procedure


begin-procedure P300-Dept-Change
#debug9 Show 'P300-Dept-Change'
  print $previous_dept               (+2,{#column1})
  print 'TOTALS'                     (,{#column2})
  print #pa_mtd_federal_wages        (,{#column3})    edit 999,999,999.99
  print #pa_qtd_federal_wages        (,{#column4})    edit 999,999,999.99
  print #pa_ytd_federal_wages        (,{#column5})    edit 999,999,999.99
  print #oh_mtd_federal_wages        (,{#column6})    edit 999,999,999.99
  print #oh_qtd_federal_wages        (,{#column7})    edit 999,999,999.99
  print #oh_ytd_federal_wages        (,{#column8})    edit 999,999,999.99

  print 'COUNTS'                     (+1,{#column2})
  print #pa_mtd_employee_count       (,{#column3})    edit 999,999,999
  print #pa_qtd_employee_count       (,{#column4})    edit 999,999,999
  print #pa_ytd_employee_count       (,{#column5})    edit 999,999,999
  print #oh_mtd_employee_count       (,{#column6})    edit 999,999,999
  print #oh_qtd_employee_count       (,{#column7})    edit 999,999,999
  print #oh_ytd_employee_count       (,{#column8})    edit 999,999,999

  move 0 to #pa_mtd_federal_wages
  move 0 to #pa_qtd_federal_wages
  move 0 to #pa_ytd_federal_wages

  move 0 to #oh_mtd_federal_wages
  move 0 to #oh_qtd_federal_wages
  move 0 to #oh_ytd_federal_wages

  move 0 to #pa_mtd_employee_count
  move 0 to #pa_qtd_employee_count
  move 0 to #pa_ytd_employee_count

  move 0 to #oh_mtd_employee_count
  move 0 to #oh_qtd_employee_count
  move 0 to #oh_ytd_employee_count
end-procedure


#Include 'getbalid.sqc'  !Get Calendar Year ID
#Include 'getcodta.sqc'  !Get Company Data
#Include 'getpgdta.sqc'  !Get Paygroup Data

#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx904.sqc'  !Get grade multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls

#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date math
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
