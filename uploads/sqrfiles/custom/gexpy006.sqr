!***********************************************************************
! GEXPY006: Payroll Summary Report                                     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!   INITIALS	DATE	      DESCRIPTION OF THE CHANGE                *
!***********************************************************************
!	JDH	05/05/98      Initial Creation (Cloned PAY018)         *
!                             Modified PAY018 to summarize by          *
!                             company and paygroup.                    *
!	JDH	10/15/98      Fixed heading.                           *
!	SXK	03/22/99      Fixed total net pay                      *
!	SXK	04/14/1999    Added C tax class to place Earned Income * 
!			      Credit in Employee Tax Summary           *
!			                                               *       
!       SXK     03/29/2000    Modified to not to print ER pieces in    * 
!		              EE tax summary and EE pieces in          *
!			      ER Tax summary.                          *
!                                                                      *
!       SCM     04/05/2002    Added tax classes for Tips.              *
!                             G=OASDI Tips and T=MEDI Tips             *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#include 'setup01.sqc' !Init printer and page size


#Define Pay018a_C_Company               1
#Define Pay018a_C_Paygroup              9
#Define Pay018a_C_Count                18
#Define Pay018a_C_Total_gross          24
#Define Pay018a_C_Total_taxes          38
#Define Pay018a_C_Total_deductions     52
#Define Pay018a_C_Net_pay              69

#Define Pay018b_C_Company               1
#Define Pay018b_C_Paygroup              9
#Define Pay018b_C_Count                18
#Define Pay018b_C_Reg_earns            24
#Define Pay018b_C_Reg_earn_hrs         38
#Define Pay018b_C_Reg_hrs              48
#Define Pay018b_C_Reg_hrly_earns       59
#Define Pay018b_C_Ot_hrs               74
#Define Pay018b_C_Ot_hrly_earns        86

#Define Pay018c_C_Company               1
#Define Pay018c_C_Paygroup              9
#Define Pay018c_C_Erncd                18
#Define Pay018c_C_Count                26
#Define Pay018c_C_Oth_hrs              32
#Define Pay018c_C_Oth_earns            43

#Define Pay018d_C_Company               1
#Define Pay018d_C_Paygroup              9
#Define Pay018d_C_Erncd_spcl           18
#Define Pay018d_C_Count                29
#Define Pay018d_C_Spcl_earns           35

#Define Pay018e_C_Company               1
#Define Pay018e_C_Paygroup              9
#Define Pay018e_C_Plan_type            18
#Define Pay018e_C_Dedcd                28
#Define Pay018e_C_Ded_class            35
#Define Pay018e_C_Count                45
#Define Pay018e_C_Ded_cur              51
#Define Pay018e_C_Ded_not_taken        65
#Define Pay018e_C_Reason_not_taken     79
#Define Pay018e_C_Ded_cur_paybk        93
#Define Pay018e_C_Ded_cur_refund      107

#Define Pay018f_C_Company               1
#Define Pay018f_C_Paygroup              9
#Define Pay018f_C_Plan_type            18
#Define Pay018f_C_Dedcd                28
#Define Pay018f_C_Ded_class            35
#Define Pay018f_C_Count                45
#Define Pay018f_C_Ded_cur              51
#Define Pay018f_C_Ded_not_taken        65
#Define Pay018f_C_Reason_not_taken     79
#Define Pay018f_C_Ded_cur_paybk        93
#Define Pay018f_C_Ded_cur_refund      107

#Define Pay018g_C_Company               1
#Define Pay018g_C_Paygroup              9
#Define Pay018g_C_State                18
#Define Pay018g_C_Locality             24
#Define Pay018g_C_Resident             33
#Define Pay018g_C_Tax_class            42
#Define Pay018g_C_Count                53
#Define Pay018g_C_Tax_cur              59
#Define Pay018g_C_Txgrs_cur            73
#Define Pay018g_C_Nlgrs_cur            87
#Define Pay018g_C_Tax_not_taken       104

#Define Pay018h_C_Company               1
#Define Pay018h_C_Paygroup              9
#Define Pay018h_C_State                18
#Define Pay018h_C_Locality             24
#Define Pay018h_C_Resident             33
#Define Pay018h_C_Tax_class            42
#Define Pay018h_C_Count                53
#Define Pay018h_C_Tax_cur              59
#Define Pay018h_C_Txgrs_cur            73
#Define Pay018h_C_Nlgrs_cur            87
#Define Pay018h_C_Tax_not_taken       104

begin-report
#Debug9 Show 'begin-report'

  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
#Debug9 Show 'Init-Report'

    move 'GEXPY006' to $ReportID

#ifdef USA
    move 'US Payroll Summary Report' to $ReportTitle
#endif

#ifdef CANADA
    move 'Canadian Payroll Summary Report' to $ReportTitle
#endif

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  do Payroll-Report-Initialization
  do Reset
end-procedure

begin-heading 8
#Debug9 Show 'begin-heading'

#include 'stdhdgpi.sqc'
#include 'stdhdg04.sqc'

    print  'Run ID: '                      (3,1)
    print  $Report_RunID                   (0,13)

if $rptcde = 'C'
    print 'Other Earnings Summary'         (5,1)

    print 'Earnings'                       (7,{Pay018c_C_Erncd})
    print ' '                              (7,{Pay018c_C_Count})
    print 'Other'                          (7,{Pay018c_C_Oth_hrs})
    print 'Other'                          (7,{Pay018c_C_Oth_earns})

    print 'Company'                        (8,{Pay018c_C_Company})
    print 'Paygroup'                       (8,{Pay018c_C_Paygroup})
    print 'Code'                           (8,{Pay018c_C_Erncd})
    print 'Count'                          (8,{Pay018c_C_Count})
    print 'Hours'                          (8,{Pay018c_C_Oth_hrs})
    print 'Earnings'                       (8,{Pay018c_C_Oth_earns})

    print '-------'                        (9,{Pay018c_C_Company})
    print '--------'                       (9,{Pay018c_C_Paygroup})
    print '--------'                       (9,{Pay018c_C_Erncd})
    print '-----'                          (9,{Pay018c_C_Count})
    print '----------'                     (9,{Pay018c_C_Oth_hrs})
    print '------------'                   (9,{Pay018c_C_Oth_earns})
end-if

if $rptcde = 'D'
    print 'Special Accumulator Summary'         (5,1)

    print 'Special'                        (7,{Pay018d_C_Erncd_spcl})
    print ' '                              (7,{Pay018d_C_Count})
    print ' '                              (7,{Pay018d_C_Spcl_earns})

    print 'Earnings'                       (8,{Pay018d_C_Erncd_spcl})
    print ' '                              (8,{Pay018d_C_Count})
    print 'Special'                        (8,{Pay018d_C_Spcl_earns})

    print 'Company'                        (9,{Pay018d_C_Company})
    print 'Paygroup'                       (9,{Pay018d_C_Paygroup})
    print 'Count'                          (9,{Pay018d_C_Count})
    print 'Earnings'                       (9,{Pay018d_C_Spcl_earns})

    print '-------'                        (10,{Pay018d_C_Company})
    print '--------'                       (10,{Pay018d_C_Paygroup})
    print '----------'                     (10,{Pay018d_C_Erncd_spcl})
    print '-----'                          (10,{Pay018d_C_Count})
    print '------------'                   (10,{Pay018d_C_Spcl_earns})
end-if

if $rptcde = 'E'
    print 'Employee Deduction Summary'         (5,1)

    print ' '                              (7,{Pay018e_C_Plan_type})
    print 'Deduction'                      (7,{Pay018e_C_Dedcd})
    print ' '                              (7,{Pay018e_C_Count})
    print 'Current'                        (7,{Pay018e_C_Ded_cur})
    print 'Deduction'                      (7,{Pay018e_C_Ded_not_taken})
    print 'Reason'                         (7,{Pay018e_C_Reason_not_taken})
    print 'Arrears'                        (7,{Pay018e_C_Ded_cur_paybk})
    print 'Deduction'                      (7,{Pay018e_C_Ded_cur_refund})

    print 'Company'                        (8,{Pay018e_C_Company})
    print 'Paygroup'                       (8,{Pay018e_C_Paygroup})
    print 'Plan Type'                      (8,{Pay018e_C_Plan_type})
    print 'Code/Class'                     (8,{Pay018e_C_Dedcd})
    print 'Count'                          (8,{Pay018e_C_Count})
    print 'Deduction'                      (8,{Pay018e_C_Ded_cur})
    print 'Not Taken'                      (8,{Pay018e_C_Ded_not_taken})
    print 'Not Taken'                      (8,{Pay018e_C_Reason_not_taken})
    print 'Payback'                        (8,{Pay018e_C_Ded_cur_paybk})
    print 'Refund'                         (8,{Pay018e_C_Ded_cur_refund})

    print '-------'                        (9,{Pay018e_C_Company})
    print '--------'                       (9,{Pay018e_C_Paygroup})
    print '---------'                      (9,{Pay018e_C_Plan_type})
    print '-------'                        (9,{Pay018e_C_Dedcd})
    print '---------'                      (9,{Pay018e_C_Ded_class})
    print '-----'                          (9,{Pay018e_C_Count})
    print '-------------'                  (9,{Pay018e_C_Ded_cur})
    print '-------------'                  (9,{Pay018e_C_Ded_not_taken})
    print '-------------'                  (9,{Pay018e_C_Reason_not_taken})
    print '-------------'                  (9,{Pay018e_C_Ded_cur_paybk})
    print '-------------'                  (9,{Pay018e_C_Ded_cur_refund})
end-if

if $rptcde = 'F'
    print 'Employer Contribution Summary'           (5,1)

    print ' '                              (7,{Pay018f_C_Plan_type})
    print 'Deduction'                      (7,{Pay018f_C_Dedcd})
    print ' '                              (7,{Pay018f_C_Count})
    print 'Current'                        (7,{Pay018f_C_Ded_cur})
    print 'Deduction'                      (7,{Pay018f_C_Ded_not_taken})
    print 'Reason'                         (7,{Pay018f_C_Reason_not_taken})
    print 'Arrears'                        (7,{Pay018f_C_Ded_cur_paybk})
    print 'Deduction'                      (7,{Pay018f_C_Ded_cur_refund})

    print 'Company'                        (8,{Pay018f_C_Company})
    print 'Paygroup'                       (8,{Pay018f_C_Paygroup})
    print 'Plan Type'                      (8,{Pay018f_C_Plan_type})
    print 'Code/Class'                     (8,{Pay018f_C_Dedcd})
    print 'Count'                          (8,{Pay018f_C_Count})
    print 'Deduction'                      (8,{Pay018f_C_Ded_cur})
    print 'Not Taken'                      (8,{Pay018f_C_Ded_not_taken})
    print 'Not Taken'                      (8,{Pay018f_C_Reason_not_taken})
    print 'Payback'                        (8,{Pay018f_C_Ded_cur_paybk})
    print 'Refund'                         (8,{Pay018f_C_Ded_cur_refund})

    print '-------'                        (9,{Pay018f_C_Company})
    print '--------'                       (9,{Pay018f_C_Paygroup})
    print '---------'                      (9,{Pay018f_C_Plan_type})
    print '-------'                        (9,{Pay018f_C_Dedcd})
    print '---------'                      (9,{Pay018f_C_Ded_class})
    print '-----'                          (9,{Pay018f_C_Count})
    print '-------------'                  (9,{Pay018f_C_Ded_cur})
    print '-------------'                  (9,{Pay018f_C_Ded_not_taken})
    print '-------------'                  (9,{Pay018f_C_Reason_not_taken})
    print '-------------'                  (9,{Pay018f_C_Ded_cur_paybk})
    print '-------------'                  (9,{Pay018f_C_Ded_cur_refund})
end-if

if $rptcde = 'G'
    print 'Employee Tax Summary'           (5,1)

    print ' '                              (7,{Pay018g_C_State})
    print ' '                              (7,{Pay018g_C_Locality})
    print ' '                              (7,{Pay018g_C_Resident})
    print ' '                              (7,{Pay018g_C_Tax_class})
    print ' '                              (7,{Pay018g_C_Count})
    print 'Current'                        (7,{Pay018g_C_Tax_cur})
    print 'Current'                        (7,{Pay018g_C_Txgrs_cur})
    print 'Current No-Limit'               (7,{Pay018g_C_Nlgrs_cur})
    print 'Tax Not'                        (7,{Pay018g_C_Tax_not_taken})

    print 'Company'                        (8,{Pay018g_C_Company})
    print 'Paygroup'                       (8,{Pay018g_C_Paygroup})

#ifdef USA
    print 'State'                          (8,{Pay018g_C_State})
#endif

#ifdef CANADA
    print 'Prov '                          (8,{Pay018g_C_State})
#endif

    print 'Locality'                       (8,{Pay018g_C_Locality})
    print 'Resident'                       (8,{Pay018g_C_Resident})
    print 'Tax Class'                      (8,{Pay018g_C_Tax_class})
    print 'Count'                          (8,{Pay018g_C_Count})
    print 'Tax'                            (8,{Pay018g_C_Tax_cur})
    print 'Taxable Gross'                  (8,{Pay018g_C_Txgrs_cur})
    print 'Taxable Gross'                  (8,{Pay018g_C_Nlgrs_cur})
    print 'Taken'                          (8,{Pay018g_C_Tax_not_taken})

    print '-------'                        (9,{Pay018g_C_Company})
    print '--------'                       (9,{Pay018g_C_Paygroup})
    print '-----'                          (9,{Pay018g_C_State})
    print '--------'                       (9,{Pay018g_C_Locality})
    print '--------'                       (9,{Pay018g_C_Resident})
    print '----------'                     (9,{Pay018g_C_Tax_class})
    print '-----'                          (9,{Pay018g_C_Count})
    print '-------------'                  (9,{Pay018g_C_Tax_cur})
    print '-------------'                  (9,{Pay018g_C_Txgrs_cur})
    print '----------------'               (9,{Pay018g_C_Nlgrs_cur})
    print '-------------'                  (9,{Pay018g_C_Tax_not_taken})
end-if

if $rptcde = 'H'
    print 'Employer Tax Summary'           (5,1)

    print ' '                              (7,{Pay018h_C_State})
    print ' '                              (7,{Pay018h_C_Locality})
    print ' '                              (7,{Pay018h_C_Resident})
    print ' '                              (7,{Pay018h_C_Tax_class})
    print ' '                              (7,{Pay018h_C_Count})
    print 'Current'                        (7,{Pay018h_C_Tax_cur})
    print 'Current'                        (7,{Pay018h_C_Txgrs_cur})
    print 'Current No-Limit'               (7,{Pay018h_C_Nlgrs_cur})
    print 'Tax Not'                        (7,{Pay018h_C_Tax_not_taken})

    print 'Company'                        (8,{Pay018h_C_Company})
    print 'Paygroup'                       (8,{Pay018h_C_Paygroup})

#ifdef USA
    print 'State'                          (8,{Pay018h_C_State})
#endif

#ifdef CANADA
    print 'Prov '                          (8,{Pay018h_C_State})
#endif

    print 'Locality'                       (8,{Pay018h_C_Locality})
    print 'Resident'                       (8,{Pay018h_C_Resident})
    print 'Tax Class'                      (8,{Pay018h_C_Tax_class})
    print 'Count'                          (8,{Pay018h_C_Count})
    print 'Tax'                            (8,{Pay018h_C_Tax_cur})
    print 'Taxable Gross'                  (8,{Pay018h_C_Txgrs_cur})
    print 'Taxable Gross'                  (8,{Pay018h_C_Nlgrs_cur})
    print 'Taken'                          (8,{Pay018h_C_Tax_not_taken})

    print '-------'                        (9,{Pay018h_C_Company})
    print '--------'                       (9,{Pay018h_C_Paygroup})
    print '-----'                          (9,{Pay018h_C_State})
    print '--------'                       (9,{Pay018h_C_Locality})
    print '--------'                       (9,{Pay018h_C_Resident})
    print '----------'                     (9,{Pay018h_C_Tax_class})
    print '-----'                          (9,{Pay018h_C_Count})
    print '-------------'                  (9,{Pay018h_C_Tax_cur})
    print '-------------'                  (9,{Pay018h_C_Txgrs_cur})
    print '----------------'               (9,{Pay018h_C_Nlgrs_cur})
    print '-------------'                  (9,{Pay018h_C_Tax_not_taken})
end-if
end-heading

begin-procedure Report         ! Main report processing
#Debug9 Show 'Report'

  let $Report_RunID = $SlctRunID
  do Select-PayEndDate
  do Pay018a-select
  move 'B' to $rptcde
  do Pay018b-select
  do page_break
  move 'C' to $rptcde
  do Pay018c-select
  do page_break
  move 'D' to $rptcde
  do Pay018d-select
  do page_break
  move 'E' to $rptcde
  do Pay018e-select
  do page_break
  move 'F' to $rptcde
  do Pay018f-select
  do page_break
  move 'G' to $rptcde
  do Pay018g-select
  do page_break
  move 'H' to $rptcde
  do Pay018h-select
end-procedure


begin-procedure Select-PayEndDate
#Debug9 Show 'Select-PayEndDate'

begin-SELECT
A.PAY_END_DT

  move &A.Pay_End_Dt to $PayEndDate

from PS_PAY_CALENDAR A,
     PS_PAY_CHECK B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = B.COMPANY
  AND A.PAYGROUP   = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              where C.COMPANY    = B.COMPANY
                    AND C.PAYGROUP   = B.PAYGROUP
                    AND C.PAY_END_DT = B.PAY_END_DT
                    AND C.OFF_CYCLE  = B.OFF_CYCLE
                    AND C.PAGE_NUM      = B.PAGE_NUM
                    AND C.LINE_NUM      = B.LINE_NUM
                    AND C.SEPCHK     = B.SEPCHK
                    AND C.PAY_LINE_STATUS IN ('C','F')
                    AND C.SINGLE_CHECK_USE IN ('C', 'N'))
end-SELECT

end-procedure


begin-procedure Pay018a-select
#Debug9 Show 'Pay018a-select'

#ifdef USA
print 'Pay Check Summary '              (4,1)
#endif

#ifdef CANADA
print 'Pay Cheque Summary'              (4,1)
#endif

print 'All Checks (Including On-line)'  (5,1)

print 'Company'                        (7,{Pay018a_C_Company})
print 'Paygroup'                       (7,{Pay018a_C_Paygroup})
print 'Count'                          (7,{Pay018a_C_Count})
print 'Total Gross'                    (7,{Pay018a_C_Total_gross})
print 'Total Taxes'                    (7,{Pay018a_C_Total_taxes})
print 'Total Deductions'               (7,{Pay018a_C_Total_deductions})
print 'Net Pay'                        (7,{Pay018a_C_Net_pay})
print '-------'                        (8,{Pay018a_C_Company})
print '--------'                       (8,{Pay018a_C_Paygroup})
print '-----'                          (8,{Pay018a_C_Count})
print '-------------'                  (8,{Pay018a_C_Total_gross})
print '-------------'                  (8,{Pay018a_C_Total_taxes})
print '----------------'               (8,{Pay018a_C_Total_deductions})
print '-------------'                  (8,{Pay018a_C_Net_pay})

begin-SELECT
A.COMPANY &company1       (+1,{PAY018A_C_Company})
A.PAYGROUP &paygroup1     (0,{PAY018A_C_Paygroup})
COUNT(*)    &count1       (0,{PAY018A_C_COUNT})           EDIT 99999

  Add &count1 to #tot_count1

#ifdef DB2ALL
DECIMAL(SUM(B.TOTAL_GROSS), 15, 3)       &total_gross1       (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_TAXES), 15, 3)       &total_taxes1       (0,{PAY018A_C_TOTAL_TAXES}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_DEDUCTIONS), 15, 3)  &total_deductions1  (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
DECIMAL(SUM(B.NET_PAY), 15, 3)           &total_net_pay1     (0,{PAY018A_C_NET_PAY}) EDIT 9999999999.99
#else
SUM(B.TOTAL_GROSS)       &total_gross1       (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
SUM(B.TOTAL_TAXES)       &total_taxes1       (0,{PAY018A_C_TOTAL_TAXES})    EDIT 9999999999.99
SUM(B.TOTAL_DEDUCTIONS)  &total_deductions1  (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
SUM(B.NET_PAY)           &total_net_pay1     (0,{PAY018A_C_NET_PAY})          EDIT 9999999999.99
#end-if

  Add &total_gross1      to #tot_total_gross1
  Add &total_taxes1      to #tot_total_taxes1
  Add &total_deductions1 to #tot_total_deductions1
  Add &total_net_pay1    to #tot_total_net_pay1

from PS_PAY_CALENDAR A,
     PS_PAY_CHECK B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = B.COMPANY
  AND A.PAYGROUP   = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              where C.COMPANY    = B.COMPANY
                    AND C.PAYGROUP   = B.PAYGROUP
                    AND C.PAY_END_DT = B.PAY_END_DT
                    AND C.OFF_CYCLE  = B.OFF_CYCLE
                    AND C.PAGE_NUM      = B.PAGE_NUM
                    AND C.LINE_NUM      = B.LINE_NUM
                    AND C.SEPCHK     = B.SEPCHK
                    AND C.PAY_LINE_STATUS IN ('C','F')
                    AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by A.COMPANY,
         A.PAYGROUP
ORDER by A.COMPANY,
         A.PAYGROUP
end-SELECT

print 'Total'        (+2,1)
do Format-Number(#tot_count1, $out, '99999')
print $out   (0,{Pay018a_C_Count})
do Format-Number(#tot_total_gross1, $out, '9999999999.99')
print $out   (0,{Pay018a_C_Total_Gross})
do Format-Number(#tot_total_taxes1, $out, '9999999999.99')
print $out   (0,{Pay018a_C_Total_Taxes})
do Format-Number(#tot_total_deductions1, $out, '9999999999999.99')
print $out   (0,{Pay018a_C_Total_Deductions})
do Format-Number(#tot_total_net_pay1, $out, '9999999999.99')
print $out   (0,{Pay018a_C_Net_Pay})

print 'On-line Checks'                 (+5,1)

print 'Company'                        (+2,{Pay018a_C_Company})
print 'Paygroup'                       (0,{Pay018a_C_Paygroup})
print 'Count'                          (0,{Pay018a_C_Count})
print 'Total Gross'                    (0,{Pay018a_C_Total_gross})
print 'Total Taxes'                    (0,{Pay018a_C_Total_taxes})
print 'Total Deductions'               (0,{Pay018a_C_Total_deductions})
print 'Net Pay'                        (0,{Pay018a_C_Net_pay})
print '-------'                        (+1,{Pay018a_C_Company})
print '--------'                       (0,{Pay018a_C_Paygroup})
print '-----'                          (0,{Pay018a_C_Count})
print '-------------'                  (0,{Pay018a_C_Total_gross})
print '-------------'                  (0,{Pay018a_C_Total_taxes})
print '----------------'               (0,{Pay018a_C_Total_deductions})
print '-------------'                  (0,{Pay018a_C_Net_pay})

begin-SELECT
A.COMPANY &ocompany        (+1,{PAY018A_C_Company})
A.PAYGROUP &opaygroup      (0,{PAY018A_C_Paygroup})
COUNT(*)    &ocount1       (0,{PAY018A_C_COUNT})           EDIT 99999

  add &ocount1 to #tot_ocount1

#ifdef DB2ALL
DECIMAL(SUM(B.TOTAL_GROSS), 15, 3)  &ototal_gross      (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_TAXES), 15, 3)  &ototal_taxes      (0,{PAY018A_C_TOTAL_TAXES}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_DEDUCTIONS), 15, 3) &ototal_dedns  (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
DECIMAL(SUM(B.NET_PAY), 15, 3)  &ototal_netpay         (0,{PAY018A_C_NET_PAY}) EDIT 9999999999.99
#else
SUM(B.TOTAL_GROSS)  &ototal_gross       (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
SUM(B.TOTAL_TAXES)  &ototal_taxes       (0,{PAY018A_C_TOTAL_TAXES})    EDIT 9999999999.99
SUM(B.TOTAL_DEDUCTIONS) &ototal_dedns   (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
SUM(B.NET_PAY) &ototal_netpay           (0,{PAY018A_C_NET_PAY})          EDIT 9999999999.99
#end-if

  add &ototal_gross  to #tot_ototal_gross
  add &ototal_taxes  to #tot_ototal_taxes
  add &ototal_dedns  to #tot_ototal_dedns
  add &ototal_netpay to #tot_ototal_netpay

from PS_PAY_CALENDAR A,
     PS_PAY_CHECK B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = B.COMPANY
  AND A.PAYGROUP   = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND B.PAY_SHEET_SRC = 'O'
  AND EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              where C.COMPANY    = B.COMPANY
                    AND C.PAYGROUP   = B.PAYGROUP
                    AND C.PAY_END_DT = B.PAY_END_DT
                    AND C.OFF_CYCLE  = B.OFF_CYCLE
                    AND C.PAGE_NUM      = B.PAGE_NUM
                    AND C.LINE_NUM      = B.LINE_NUM
                    AND C.SEPCHK     = B.SEPCHK
                    AND C.PAY_LINE_STATUS IN ('C','F')
                    AND C.SINGLE_CHECK_USE IN ('C', 'N'))

GROUP by A.COMPANY,
         A.PAYGROUP
ORDER by A.COMPANY,
         A.PAYGROUP
end-SELECT

print 'Total'        (+2,1)
do Format-Number(#tot_ocount1, $out, '99999')
print $out   (0,{Pay018a_C_Count})
do Format-Number(#tot_ototal_gross, $out, '9999999999.99')
print $out   (0,{Pay018a_C_Total_Gross})
do Format-Number(#tot_ototal_taxes, $out, '9999999999.99')
print $out   (0,{Pay018a_C_Total_Taxes})
do Format-Number(#tot_ototal_dedns, $out, '9999999999999.99')
print $out   (0,{Pay018a_C_Total_Deductions})
do Format-Number(#tot_ototal_netpay, $out, '9999999999.99')
print $out   (0,{Pay018a_C_Net_Pay})

end-procedure


begin-procedure Pay018b-select
#Debug9 Show 'Pay018b-select'

print 'Pay Earnings Summary'         (+5,1)

print ' '                              (+3,{Pay018b_C_Count})
print ' '                              (0,{Pay018b_C_Reg_earns})
print 'Hours For'                      (0,{Pay018b_C_Reg_earn_hrs})
print ' '                              (0,{Pay018b_C_Reg_hrs})
print 'Earnings For'                   (0,{Pay018b_C_Reg_hrly_earns})
print ' '                              (0,{Pay018b_C_Ot_hrs})
print 'Earnings For'                   (0,{Pay018b_C_Ot_hrly_earns})

print ' '                              (+1,{Pay018b_C_Count})
print 'Regular'                        (0,{Pay018b_C_Reg_earns})
print 'Regular'                        (0,{Pay018b_C_Reg_earn_hrs})
print 'Regular'                        (0,{Pay018b_C_Reg_hrs})
print 'Regular'                        (0,{Pay018b_C_Reg_hrly_earns})
print 'Overtime'                       (0,{Pay018b_C_Ot_hrs})
print 'Overtime'                       (0,{Pay018b_C_Ot_hrly_earns})

print 'Company'                        (+1,{Pay018b_C_Company})
print 'Paygroup'                       (0,{Pay018b_C_Paygroup})
print 'Count'                          (0,{Pay018b_C_Count})
print 'Earnings'                       (0,{Pay018b_C_Reg_earns})
print 'Earnings'                       (0,{Pay018b_C_Reg_earn_hrs})
print 'Hours'                          (0,{Pay018b_C_Reg_hrs})
print 'Hours'                          (0,{Pay018b_C_Reg_hrly_earns})
print 'Hours'                          (0,{Pay018b_C_Ot_hrs})
print 'Hours'                          (0,{Pay018b_C_Ot_hrly_earns})

print '-------'                        (+1,{Pay018b_C_Company})
print '--------'                       (0,{Pay018b_C_Paygroup})
print '-----'                          (0,{Pay018b_C_Count})
print '------------'                   (0,{Pay018b_C_Reg_earns})
print '--------'                       (0,{Pay018b_C_Reg_earn_hrs})
print '----------'                     (0,{Pay018b_C_Reg_hrs})
print '--------------'                 (0,{Pay018b_C_Reg_hrly_earns})
print '-----------'                    (0,{Pay018b_C_Ot_hrs})
print '-------------'                  (0,{Pay018b_C_Ot_hrly_earns})

begin-SELECT
A.COMPANY &company2        (+1,{PAY018B_C_Company})
A.PAYGROUP &paygroup2      (0,{PAY018B_C_Paygroup})
COUNT(*) &count2           (0,{PAY018B_C_COUNT})          EDIT 99999

  Add &count2 to #tot_count2

#ifdef DB2ALL
DECIMAL(SUM(B.REG_EARNS), 15, 3)       &tot_reg_earns2       (0,{PAY018B_C_REG_EARNS})      EDIT 999999999.99
DECIMAL(SUM(B.REG_EARN_HRS), 15, 3)    &tot_reg_earn_hrs2    (0,{PAY018B_C_REG_EARN_HRS})   EDIT 999999999
DECIMAL(SUM(B.REG_HRS * 1), 15, 3)     &tot_reg_hrs2         (0,{PAY018B_C_REG_HRS})        EDIT 9999999.99
DECIMAL(SUM(B.REG_HRLY_EARNS), 15, 3)  &tot_reg_hrly_earns2  (0,{PAY018B_C_REG_HRLY_EARNS}) EDIT 99999999999.99
DECIMAL(SUM(B.OT_HRS), 15, 3)          &tot_ot_hrs2          (0,{PAY018B_C_OT_HRS})         EDIT 99999999.99
DECIMAL(SUM(B.OT_HRLY_EARNS), 15, 3)   &tot_ot_hrly_earns2   (0,{PAY018B_C_OT_HRLY_EARNS})  EDIT 9999999999.99
#else
SUM(B.REG_EARNS)        &tot_reg_earns2        (0,{PAY018B_C_REG_EARNS})      EDIT 999999999.99
SUM(B.REG_EARN_HRS)     &tot_reg_earn_hrs2     (0,{PAY018B_C_REG_EARN_HRS})   EDIT 999999999
SUM(B.REG_HRS * 1)      &tot_reg_hrs2          (0,{PAY018B_C_REG_HRS})        EDIT 9999999.99
SUM(B.REG_HRLY_EARNS)   &tot_reg_hrly_earns2   (0,{PAY018B_C_REG_HRLY_EARNS}) EDIT 99999999999.99
SUM(B.OT_HRS)           &tot_ot_hrs2           (0,{PAY018B_C_OT_HRS})         EDIT 99999999.99
SUM(B.OT_HRLY_EARNS)    &tot_ot_hrly_earns2    (0,{PAY018B_C_OT_HRLY_EARNS})  EDIT 9999999999.99
#end-if

  Add &tot_reg_earns2      to #tot_tot_reg_earns2
  Add &tot_reg_earn_hrs2   to #tot_tot_reg_earn_hrs2
  Add &tot_reg_hrs2        to #tot_tot_reg_hrs2
  Add &tot_reg_hrly_earns2 to #tot_tot_reg_hrly_earns2
  Add &tot_ot_hrs2         to #tot_tot_ot_hrs2
  Add &tot_ot_hrly_earns2  to #tot_tot_ot_hrly_earns2

from PS_PAY_CALENDAR A,
     PS_PAY_EARNINGS B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and B.PAY_LINE_STATUS IN ('C','F')
  AND B.SINGLE_CHECK_USE IN ('C', 'N')
GROUP by A.COMPANY,
         A.PAYGROUP
ORDER by A.COMPANY,
         A.PAYGROUP
end-SELECT

print 'Total'        (+2,1)
do Format-Number(#tot_count2, $out, '99999')
print $out   (0,{Pay018b_C_Count})
do Format-Number(#tot_tot_reg_earns2, $out, '999999999.99')
print $out   (0,{Pay018b_C_Reg_Earns})
do Format-Number(#tot_tot_reg_earn_hrs2, $out, '999999999')
print $out   (0,{Pay018b_C_Reg_Earn_Hrs})
do Format-Number(#tot_tot_reg_hrs2, $out, '9999999.99')
print $out   (0,{Pay018b_C_Reg_Hrs})
do Format-Number(#tot_tot_reg_hrly_earns2, $out, '99999999999.99')
print $out   (0,{Pay018b_C_Reg_Hrly_Earns})
do Format-Number(#tot_tot_ot_hrs2, $out, '99999999.99')
print $out   (0,{Pay018b_C_Ot_Hrs})
do Format-Number(#tot_tot_ot_hrly_earns2, $out, '9999999999.99')
print $out   (0,{Pay018b_C_Ot_Hrly_Earns})

end-procedure


begin-procedure Pay018c-select
#Debug9 Show 'Pay018c-select'

move 0 to #tot_count3
move 0 to #tot_oth_hrs
move 0 to #tot_oth_earns

begin-SELECT
A.COMPANY &company3            (+1,{PAY018C_C_COMPANY}) 
A.PAYGROUP &paygroup3          (0,{PAY018C_C_PAYGROUP})
B.ERNCD          &Erncd        (0,{PAY018C_C_ERNCD})
COUNT(*)         &count3       (0,{PAY018C_C_COUNT})     EDIT 99999

  add &count3 to #tot_count3

#ifdef DB2ALL
DECIMAL(SUM(B.OTH_HRS), 15, 3)   &oth_hrs      (0,{PAY018C_C_OTH_HRS})   EDIT 9999999.99
DECIMAL(SUM(B.OTH_EARNS), 15, 3) &oth_earns    (0,{PAY018C_C_OTH_EARNS}) EDIT 999999999.99
#else
SUM(B.OTH_HRS)           &oth_hrs      (0,{PAY018C_C_OTH_HRS})   EDIT 9999999.99
SUM(B.OTH_EARNS)         &oth_earns    (0,{PAY018C_C_OTH_EARNS}) EDIT 999999999.99
#end-if

  add &oth_hrs to #tot_oth_hrs
  add &oth_earns to #tot_oth_earns

from PS_PAY_CALENDAR A,
     PS_PAY_OTH_EARNS B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and EXISTS (SELECT 'x'
              FROM PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.ADDL_NBR = B.ADDL_NBR
                AND C.PAY_LINE_STATUS IN ('C','F')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by A.COMPANY,
         A.PAYGROUP,
         B.ERNCD
ORDER by A.COMPANY,
         A.PAYGROUP,
         B.ERNCD
end-select

print 'Total'        (+2,1)
do Format-Number(#tot_count3, $out, '99999')
print $out    (0,{Pay018c_C_Count})
do Format-Number(#tot_oth_hrs, $out, '9999999.99')
print $out   (0,{Pay018c_C_Oth_hrs})
do Format-Number(#tot_oth_earns, $out, '999999999.99')
print $out (0,{Pay018c_C_Oth_earns})
end-procedure


begin-procedure Pay018d-select
#Debug9 Show 'Pay018d-select'

move 0 to #tot_count4
move 0 to #tot_spcl_earns
print ' '                     (+1,1)

begin-SELECT
A.COMPANY &company4           (+1,{PAY018D_C_COMPANY})
A.PAYGROUP &paygroup4         (0,{PAY018D_C_PAYGROUP})
B.ERNCD_SPCL  &Erncd_spcl     (0,{PAY018D_C_ERNCD_SPCL})
COUNT(*) &count4              (0,{PAY018D_C_COUNT})      EDIT 99999

  add &count4 to #tot_count4

#ifdef DB2ALL
DECIMAL(SUM(B.SPCL_EARNS), 15, 3) &spcl_earns (0,{PAY018D_C_SPCL_EARNS}) EDIT 999999999.99
#else
SUM(B.SPCL_EARNS)    &spcl_earns (0,{PAY018D_C_SPCL_EARNS}) EDIT 999999999.99
#end-if

  add &spcl_earns to #tot_spcl_earns

from PS_PAY_CALENDAR A,
     PS_PAY_SPCL_EARNS B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and EXISTS (SELECT 'x'
              FROM PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by A.COMPANY,
         A.PAYGROUP,
         B.ERNCD_SPCL
ORDER by A.COMPANY,
         A.PAYGROUP,
         B.ERNCD_SPCL
end-SELECT

print 'Total'         (+2,1)
do Format-Number(#tot_count4, $out, '99999')
print $out     (0,{Pay018d_C_Count})
do Format-Number(#tot_spcl_earns, $out, '999999999.99')
print $out (0,{Pay018d_C_Spcl_earns})
end-procedure


begin-procedure Pay018e-select
#Debug9 Show 'Pay018e-select'

move 0 to #tot_count5
move 0 to #tot_ded_cur
move 0 to #tot_ded_not_taken
move 0 to #tot_ded_cur_paybk
move 0 to #tot_ded_cur_refund

begin-SELECT
A.COMPANY &company5              (+1,{PAY018E_C_COMPANY})
A.PAYGROUP &paygroup5            (0,{PAY018E_C_PAYGROUP})
B.PLAN_TYPE                      (0,{PAY018E_C_PLAN_TYPE})
B.DEDCD                          (0,{PAY018E_C_DEDCD})
B.DED_CLASS                      (0,{PAY018E_C_DED_CLASS})
B.REASON_NOT_TAKEN
COUNT(*) &count5                 (0,{PAY018E_C_COUNT})         EDIT 99999

  add &count5 to #tot_count5

#ifdef DB2ALL
DECIMAL(SUM(B.DED_CUR), 15, 3) &ded_cur (0,{PAY018E_C_DED_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.DED_NOT_TAKEN), 15, 3) &ded_not_taken (0,{PAY018E_C_DED_NOT_TAKEN}) EDIT 9999999999.99
DECIMAL(SUM(B.DED_CUR_PAYBK), 15, 3) &ded_cur_paybk (0,{PAY018E_C_DED_CUR_PAYBK}) EDIT 9999999999.99
DECIMAL(SUM(B.DED_CUR_REFUND), 15, 3) &ded_cur_refund (0,{PAY018E_C_DED_CUR_REFUND}) EDIT 9999999999.99
#else
SUM(B.DED_CUR)         &ded_cur          (0,{PAY018E_C_DED_CUR})    EDIT 9999999999.99
SUM(B.DED_NOT_TAKEN)   &ded_not_taken (0,{PAY018E_C_DED_NOT_TAKEN}) EDIT 9999999999.99
SUM(B.DED_CUR_PAYBK)   &ded_cur_paybk (0,{PAY018E_C_DED_CUR_PAYBK}) EDIT 9999999999.99
SUM(B.DED_CUR_REFUND)  &ded_cur_refund (0,{PAY018E_C_DED_CUR_REFUND}) EDIT 9999999999.99
#end-if

  if &Ded_Not_Taken > 0
    move 'REASON_NOT_TAKEN' to $FieldName
    move &B.Reason_Not_Taken to $FieldValue
    do Read-Translate-Table
    let $Reason_Not_Taken = &B.Reason_Not_Taken || ' ' || $XlatShortName
    print $Reason_Not_Taken  (0,{Pay018e_C_Reason_not_taken})
  end-if

  add &ded_cur to #tot_ded_cur
  add &ded_not_taken to #tot_ded_not_taken
  add &ded_cur_paybk to #tot_ded_cur_paybk
  add &ded_cur_refund to #tot_ded_cur_refund

from PS_PAY_CALENDAR A,
     PS_PAY_DEDUCTION B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and B.DED_CLASS <= 'K'
  and EXISTS (SELECT 'x'
              FROM PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by A.COMPANY,
         A.PAYGROUP,
         B.PLAN_TYPE,
         B.DEDCD,
         B.DED_CLASS,
         B.REASON_NOT_TAKEN
ORDER by A.COMPANY,
         A.PAYGROUP,
         B.PLAN_TYPE,
         B.DEDCD,
         B.DED_CLASS,
         B.REASON_NOT_TAKEN
end-SELECT

print 'Total'               (+2,1)
do Format-Number(#tot_count5, $out, '99999')
print $out          (0,{Pay018e_C_Count})
do Format-Number(#tot_Ded_cur, $out, '9999999999.99')
print $out          (0,{Pay018e_C_Ded_cur})
do Format-Number(#tot_Ded_not_taken, $out, '9999999999.99')
print $out    (0,{Pay018e_C_Ded_not_taken})
do Format-Number(#tot_Ded_cur_paybk, $out, '9999999999.99')
print $out    (0,{Pay018e_C_Ded_cur_paybk})
do Format-Number(#tot_Ded_cur_refund, $out, '9999999999.99')
print $out   (0,{Pay018e_C_Ded_cur_refund})
end-procedure


begin-procedure Pay018f-select
#Debug9 Show 'Pay018f-select'

move 0 to #tot_count6
move 0 to #tot_ded_cur
move 0 to #tot_ded_not_taken
move 0 to #tot_ded_cur_paybk
move 0 to #tot_ded_cur_refund

begin-SELECT
A.COMPANY &company6              (+1,{PAY018F_C_COMPANY})
A.PAYGROUP &paygroup6            (+1,{PAY018F_C_PAYGROUP})
F.PLAN_TYPE &plan_type2          (0,{PAY018F_C_PLAN_TYPE})
F.DEDCD     &dedcd2              (0,{PAY018F_C_DEDCD})
F.DED_CLASS &ded_class2          (0,{PAY018F_C_DED_CLASS})
F.REASON_NOT_TAKEN
COUNT(*) &count6                 (0,{PAY018F_C_COUNT})  EDIT 99999

  add &count6 to #tot_count6

#ifdef DB2ALL
DECIMAL(SUM(F.DED_CUR), 15, 3) &ded_cur2    (0,{PAY018F_C_DED_CUR}) EDIT 9999999999.99
DECIMAL(SUM(F.DED_NOT_TAKEN), 15, 3) &ded_not_taken2 (0,{PAY018F_C_DED_NOT_TAKEN}) EDIT 9999999999.99
DECIMAL(SUM(F.DED_CUR_PAYBK), 15, 3) &ded_cur_paybk2 (0,{PAY018F_C_DED_CUR_PAYBK}) EDIT 9999999999.99
DECIMAL(SUM(F.DED_CUR_REFUND), 15, 3) &ded_cur_refund2  (0,{PAY018F_C_DED_CUR_REFUND}) EDIT 9999999999.99
#else
SUM(F.DED_CUR)        &ded_cur2       (0,{PAY018F_C_DED_CUR}) EDIT 9999999999.99
SUM(F.DED_NOT_TAKEN)  &ded_not_taken2 (0,{PAY018F_C_DED_NOT_TAKEN}) EDIT 9999999999.99
SUM(F.DED_CUR_PAYBK)  &ded_cur_paybk2 (0,{PAY018F_C_DED_CUR_PAYBK}) EDIT 9999999999.99
SUM(F.DED_CUR_REFUND) &ded_cur_refund2 (0,{PAY018F_C_DED_CUR_REFUND}) EDIT 9999999999.99
#end-if

  if &ded_not_taken2 > 0
    move 'REASON_NOT_TAKEN' to $FieldName
    move &F.Reason_Not_Taken to $FieldValue
    do Read-Translate-Table
    let $Reason_Not_Taken = &F.Reason_Not_Taken || ' ' || $XlatShortName
    print $Reason_Not_Taken  (0,{Pay018f_C_Reason_not_taken})
  end-if

  add &ded_cur2 to #tot_ded_cur
  add &ded_not_taken2 to #tot_ded_not_taken
  add &ded_cur_paybk2 to #tot_ded_cur_paybk
  add &ded_cur_refund2 to #tot_ded_cur_refund

from PS_PAY_CALENDAR A,
     PS_PAY_DEDUCTION F
where [$SlctCalendar]
  AND F.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND F.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = F.COMPANY
  and A.PAY_END_DT = F.PAY_END_DT
  and A.PAYGROUP   = F.PAYGROUP
  and F.DED_CLASS >= 'L'
  and EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              WHERE C.COMPANY = F.COMPANY
                AND C.PAYGROUP = F.PAYGROUP
                AND C.PAY_END_DT = F.PAY_END_DT
                AND C.OFF_CYCLE = F.OFF_CYCLE
                AND C.PAGE_NUM = F.PAGE_NUM
                AND C.LINE_NUM = F.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by A.COMPANY,
         A.PAYGROUP,
         F.PLAN_TYPE,
         F.DEDCD,
         F.DED_CLASS,
         F.REASON_NOT_TAKEN
ORDER by A.COMPANY,
         A.PAYGROUP,
         F.PLAN_TYPE,
         F.DEDCD,
         F.DED_CLASS,
         F.REASON_NOT_TAKEN
end-SELECT

print 'Total'               (+2,1)
do Format-Number(#tot_count6, $out, '99999')
print $out          (0,{Pay018f_C_Count})
do Format-Number(#tot_Ded_cur, $out, '9999999999.99')
print $out          (0,{Pay018f_C_Ded_cur})
do Format-Number(#tot_Ded_not_taken, $out, '9999999999.99')
print $out    (0,{Pay018f_C_Ded_not_taken})
do Format-Number(#tot_Ded_cur_paybk, $out, '9999999999.99')
print $out    (0,{Pay018f_C_Ded_cur_paybk})
do Format-Number(#tot_Ded_cur_refund, $out, '9999999999.99')
print $out   (0,{Pay018f_C_Ded_cur_refund})
end-procedure


begin-procedure Pay018g-select
#Debug9 Show 'Pay018g-select'

move 0 to #tot_count7
move 0 to #tot_tax_cur
move 0 to #tot_txgrs_cur
move 0 to #tot_nlgrs_cur
move 0 to #tot_tax_not_taken

begin-SELECT
A.COMPANY &company7              (+1,{Pay018g_C_COMPANY})
A.PAYGROUP &paygroup7            (0,{Pay018g_C_PAYGROUP})
B.STATE

  if RTRIM(&B.State,' ') = '$U'
    let $State = 'USA'
  else
    let $State = RTRIM(&B.State,' ')
  end-if

  print $State                   (0,{Pay018g_C_State})

B.LOCALITY                       (0,{PAY018G_C_LOCALITY})
B.RESIDENT                       (0,{PAY018G_C_RESIDENT})
B.TAX_CLASS

  move 'TAX_CLASS' to $FieldName
  move &B.Tax_Class to $FieldValue
  do Read-Translate-Table
  let $Tax_Class_Name = $XlatShortName
  print $Tax_Class_Name        (0,{Pay018g_C_Tax_class})

COUNT(*)   &count7               (0,{PAY018G_C_COUNT})   EDIT 99999

#ifdef DB2ALL
DECIMAL(SUM(B.TAX_CUR), 15, 3) &tax_cur2 (0,{PAY018G_C_TAX_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.TXGRS_CUR), 15, 3) &txgrs_cur (0,{PAY018G_C_TXGRS_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.NLGRS_CUR), 15, 3) &nlgrs_cur (0,{PAY018G_C_NLGRS_CUR}) EDIT 9999999999999.99
DECIMAL(SUM(B.TAX_NOT_TAKEN), 15, 3) &tax_not_taken (0,{PAY018G_C_TAX_NOT_TAKEN}) EDIT 9999999999.99
#else
SUM(B.TAX_CUR)       &tax_cur2         (0,{PAY018G_C_TAX_CUR}) EDIT 9999999999.99
SUM(B.TXGRS_CUR)     &txgrs_cur      (0,{PAY018G_C_TXGRS_CUR}) EDIT 9999999999.99
SUM(B.NLGRS_CUR)     &nlgrs_cur      (0,{PAY018G_C_NLGRS_CUR}) EDIT 9999999999999.99
SUM(B.TAX_NOT_TAKEN) &tax_not_taken  (0,{PAY018G_C_TAX_NOT_TAKEN}) EDIT 9999999999.99
#end-if

  add &tax_cur2 to #tot_tax_cur
  add &tax_not_taken to #tot_tax_not_taken

from PS_PAY_CALENDAR A,
     PS_PAY_TAX B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
!SXK 04/14/1999 Begin - Added C (Earned Income Credit)
!SXK 03/29/2000 Deleted OASDI/ER tax_class (E)
!SCM   04/05/2002     Added tax_classes for tips:  G=OASDI tips and T=MEDI tips
  and B.TAX_CLASS IN ('D', 'H', 'F', 'M', 'N', 'V', 'P', 'B', 'C', 'G', 'T')
!SXK 03/29/2000 End
!SXK 04/14/1999 End
  and EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by A.COMPANY,
         A.PAYGROUP,
         B.STATE,
         B.LOCALITY,
         B.RESIDENT,
         B.TAX_CLASS
ORDER by A.COMPANY,
         A.PAYGROUP,
         B.STATE,
         B.LOCALITY,
         B.RESIDENT,
         B.TAX_CLASS
end-SELECT

print 'Total'         (+2,1)
do Format-Number(#tot_tax_cur, $out, '9999999999.99')
print $out    (0,{Pay018g_C_Tax_cur})
do Format-Number(#tot_tax_not_taken, $out, '9999999999.99')
print $out (0,{Pay018g_C_Tax_not_taken})
end-procedure


begin-procedure Pay018h-select
#Debug9 Show 'Pay018h-select'

move 0 to #tot_count8
move 0 to #tot_tax_cur
move 0 to #tot_txgrs_cur
move 0 to #tot_nlgrs_cur
move 0 to #tot_tax_not_taken

begin-SELECT
A.COMPANY &company8               (+1,{Pay018h_C_COMPANY})
A.PAYGROUP &paygroup8             (0,{Pay018h_C_PAYGROUP})
B.STATE         &state2

  if &state2  = '$U'
    let $State = 'USA'
  else
    let $State = RTRIM(&state2,' ')
  end-if

  print $State                   (0,{Pay018h_C_State})

B.LOCALITY      &locality2       (0,{PAY018H_C_LOCALITY})
B.RESIDENT      &resident2       (0,{PAY018H_C_RESIDENT})
B.TAX_CLASS     &tax_class2

    move 'TAX_CLASS' to $FieldName
    move &tax_class2  to $FieldValue
    do Read-Translate-Table
    let $Tax_Class_Name = $XlatShortName
    print $Tax_Class_Name        (0,{Pay018h_C_Tax_class})

COUNT(*)   &count8               (0,{PAY018H_C_COUNT})   EDIT 99999

#ifdef DB2ALL
DECIMAL(SUM(B.TAX_CUR), 15, 3) &tax_cur3     (0,{PAY018H_C_TAX_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.TXGRS_CUR), 15, 3) &txgrs_cur2 (0,{PAY018H_C_TXGRS_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.NLGRS_CUR), 15, 3) &nlgrs_cur2 (0,{PAY018H_C_NLGRS_CUR}) EDIT 9999999999999.99
DECIMAL(SUM(B.TAX_NOT_TAKEN), 15, 3) &tax_not_taken2  (0,{PAY018H_C_TAX_NOT_TAKEN}) EDIT 9999999999.99
#else
SUM(B.TAX_CUR)         &tax_cur3         (0,{PAY018H_C_TAX_CUR}) EDIT 9999999999.99
SUM(B.TXGRS_CUR)       &txgrs_cur2     (0,{PAY018H_C_TXGRS_CUR}) EDIT 9999999999.99
SUM(B.NLGRS_CUR)       &nlgrs_cur2      (0,{PAY018H_C_NLGRS_CUR}) EDIT 9999999999999.99
SUM(B.TAX_NOT_TAKEN)   &tax_not_taken2  (0,{PAY018H_C_TAX_NOT_TAKEN}) EDIT 9999999999.99
#end-if

  add &tax_cur3 to #tot_tax_cur
  add &tax_not_taken2 to #tot_tax_not_taken

from PS_PAY_CALENDAR A,
     PS_PAY_TAX B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
!SCM   04/05/2002     Added tax_classes for tips:  G=OASDI tips and T=MEDI tips
!SXK 04/14/1999 Begin - Added C (Earned Income Credit)
!SXK 03/29/2000 Begin - Added MED/EE, OASDI/EE in the not in condition
!and removed OASDI/ER 
  and
  (
     (B.STATE      = '$U'
  and B.TAX_CLASS not IN ('H', 'D', 'F', 'M', 'N', 'V', 'P', 'B', 'C', 'G', 'T') )    !04/05/2002
       OR
     (B.STATE     <> '$U'
  and B.TAX_CLASS not IN ('H', 'D', 'F', 'M', 'N', 'V', 'P', 'B', 'C', 'G', 'T') )    !04/05/2002
  )
  and EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by A.COMPANY,
         A.PAYGROUP,
         B.STATE,
         B.LOCALITY,
         B.RESIDENT,
         B.TAX_CLASS
ORDER by A.COMPANY,
         A.PAYGROUP,
         B.STATE,
         B.LOCALITY,
         B.RESIDENT,
         B.TAX_CLASS
end-SELECT

print 'Total'         (+2,1)
do Format-Number(#tot_tax_cur, $out, '9999999999.99')
print $out    (0,{Pay018h_C_Tax_cur})
do Format-Number(#tot_tax_not_taken, $out, '9999999999.99')
print $out (0,{Pay018h_C_Tax_not_taken})
end-procedure


begin-procedure page_break
#Debug9 Show 'page_break'

    if $End = 'Y'
      do Reset
    end-if

    new-page
end-procedure


#Include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'curdttim.sqc'  !Current Date and Time
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#include 'reset.sqc'     !Reset Printer
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#include 'payinit.sqc'
