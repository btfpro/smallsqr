!***********************************************************************
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE	     *	
!***********************************************************************
! GBNC058    JNB       07/21/1998     INITIAL CREATION                 *
!                                                                      *
!  This sqr inserts a row to 'PS_BAS_ENR_RUNCTL' after PSPBARUN is run *
!  in the daily schedule. After COBOL SQL is run the run control infor *
!  mation is cleared from the panel. As PSPBARUN is run twice in the   *
!  daily schedule, we are repopulating the run control data by inserting
!  this row. 							       *
!           PLN       2/22/1999      CHANGES DUE TO 7.5x               *
!                                                                      *
!           GBD       9/18/2002      v8.3 Upgrade - Added BAS_EM_MODE  *
!                                    field to PS_BAS_ENR_RUNCTL table. *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 


!*********************************************************************
begin-report
!*********************************************************************
#debug9 show 'begin-report' 

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  do stdapi-init

  let $reportdate_mm = substr($reportdate,1,2)
  let $reportdate_dd = substr($reportdate,4,2)
  let $reportdate_yy = substr($reportdate,7,2)
  do MakeYear4Digits ($reportdate_yy)

  let $reportdate_ccyyyy = $reportdate_mm||'/'||$reportdate_dd||'/'||$reportdate_yy

  do format-datetime($reportdate_ccyyyy,$reportdate_ccyy,{DEFMDY},'','NATIVE') 
  show '$reportdate_ccyy ' $reportdate_ccyy
  do check-if-row-exists
  do stdapi-term
  do Reset

end-report

!****************************************************************************************
!Checks PS_BAS_ENR_RUNCTL if row exits for OPRID = "HRBATCH and run_cntl_id = pspbarun  *
!****************************************************************************************
!*********************************************************************
begin-procedure check-if-row-exists
!*********************************************************************

#debug9 show 'check-if-row-exists'

 move 'N' to $rowfound

begin-SELECT on-error=P900-sql-error-found('check-if-row-exists')

A.OPRID
A.RUN_CNTL_ID
A.SCHED_ID
A.BAS_EM_MODE                              !GBD 09/18/2002 v8.3 Added
A.PROCESS_DT
!PLN 02/22/2000 Begin
A.DEBUG_ELIG 
A.PARTIC_LIST_IND
A.PARTIC_NEW_IND
A.PASSIVE_EVENT_IND
A.REPROCESS_IND
A.FINALIZE_ENROLL
A.PLAN_LIST_IND
A.CHKPT_INTERVAL
A.PROCESS_PHASE
A.BENEFIT_PROGRAM
A.EVENT_DT
A.EMPLID
A.BENEFIT_RCD_NBR
A.EVENT_ID
A.PASSIVE_EVENT_ID
A.BAS_PROCESS_STATUS
A.PROCESS_IND
!PLN 02/22/2000 End

  move 'Y' to $rowFound
  show 'row found ' $rowfound
 
FROM 

    PS_BAS_ENR_RUNCTL A

WHERE    A.OPRID = 'HRBATCH' 
 AND     A.RUN_CNTL_ID = 'pspbarun'
   
end-SELECT

 if $rowFound = 'Y'
    do update-row
 else
    do insert-row
 end-if 

end-procedure

!*************************************************************************
!Update PS_BAS_ENR_RUNCTL table with run control for PSPBARUN            *
!*************************************************************************
begin-procedure update-row
 
show 'inside update row '
begin-sql on-error=P900-SQL-Error-Found('update-row')
UPDATE PS_BAS_ENR_RUNCTL 
   SET SCHED_ID           =   'EM',
       PROCESS_DT         =   $reportdate_ccyy,
!PLN 02/22/2000 Begin
       DEBUG_ELIG	  =   'N',
       PARTIC_LIST_IND    =   'N',
       PARTIC_NEW_IND     =   'N',
       PASSIVE_EVENT_IND  =   'N',
       REPROCESS_IND      =   'N',
       FINALIZE_ENROLL    =   'N',
       PLAN_LIST_IND      =   'E',
       CHKPT_INTERVAL     =   0,
       PROCESS_PHASE      =   'R',
       BENEFIT_PROGRAM    =   ' ',
       EVENT_DT           =   '', 
       EMPLID             =   ' ',
       BENEFIT_RCD_NBR       =   0,
       EVENT_ID           =   0,
       PASSIVE_EVENT_ID   =   ' ',
       BAS_PROCESS_STATUS =   ' ',
       PROCESS_IND        =   ' '
!PLN 02/22/2000 End

WHERE OPRID = 'HRBATCH'
  AND RUN_CNTL_ID = 'pspbarun'

end-sql

show 'successfully updated '
end-procedure

!*************************************************************************
!Inserts into the PS_BAS_ENR_RUNCTL table with run control for PSPBARUN  *
!*************************************************************************

begin-procedure insert-row

show 'inside insert row '

begin-sql on-error=P900-SQL-Error-Found('insert-row') 

insert into PS_BAS_ENR_RUNCTL
(OPRID,
RUN_CNTL_ID,
SCHED_ID,
BAS_EM_MODE,                              !GBD 09/18/2002 v8.3 Added
PROCESS_DT,
!PLN 02/22/2000 Begin
DEBUG_ELIG,    
PARTIC_LIST_IND,
PARTIC_NEW_IND,
PASSIVE_EVENT_IND,
REPROCESS_IND,
FINALIZE_ENROLL,
PLAN_LIST_IND,
CHKPT_INTERVAL,
PROCESS_PHASE,
BENEFIT_PROGRAM,
EVENT_DT,
EMPLID,
BENEFIT_RCD_NBR,
EVENT_ID,
PASSIVE_EVENT_ID,
BAS_PROCESS_STATUS,
PROCESS_IND)
!PLN 02/22/2000 End
VALUES
('HRBATCH',
'pspbarun',
'EM',
'N',
$reportdate_ccyy,
!PLN 02/22/2000 Begin
'N',
'N',
'N',
'N',
'N',
'N',
'E',
0,
'R',
' ',
'',
' ',
0,
0,
' ',
' ',
' ')
!PLN 02/22/2000 End

end-sql

show 'successfully inserted row '
end-procedure

!*********************************************************************
!Displays the error messages and stops execution
!*********************************************************************
 
begin-procedure P900-SQL-Error-Found($Proc_Name) 
  
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 

  STOP

end-procedure

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
