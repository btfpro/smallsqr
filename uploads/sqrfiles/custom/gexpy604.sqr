!***********************************************************************

! Interface ID:   GPYI010 - National City Recon                        *

! Interface Name: GEXPY604                                             *

! GEXPY604: This program creates two separate files ('A' run and       *

!           'B' run payrolls) to be sent to the bank.                  *

!           These files will contain Checks, Prepays, and Voids.       *

!                                                                      *

!***********************************************************************

!***********************************************************************

!                                                                      *

!               Confidentiality Information:                           *

!                                                                      *

! This module is the confidential and proprietary information of       *

! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*

! in any form, by any means, in whole or in part, nor is it to be used *

! for any purpose other than that for which it is expressly provided   *

! without the written permission of Giant Eagle.                       *

!                                                                      *

!                                                                      *

!***********************************************************************

!                                                                      *

!  $Date:: 02/10/98 10:00a      $                                      *

!  $Revision:: 01               $                                      *

!  $Workfile:: GEXPY604.SQR     $                                      *

!                                                                      *

!***********************************************************************

!                         MODIFICATION HISTORY                         *

!************************************************************************

!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE         *

!************************************************************************

!  xxxx    GXD         02/10/1998     INITIAL CREATION                  *

!	   SXK	       09/08/1998     Added OUTFILE variable            *

!          JNB         11/19/1998     zero filled the check# and        *

!                                     removed decimal from net pay      *

!          JNB         01/06/1999     Changing source code to create a  *

!                                     report to Mobius. The report      *

!                                     contains total check count, total *

!                                     net pay, beginning check # and    *

!                                     ending check # for file 1 and     *

!                                     file 2. File 1 is for confidential*

!                                     and file 2 is for retail.         *

!          JNB         01/26/1999     Eliminated decimal position on    *

!                                     beginning and ending check # and  *

!                                     descr to read retail/whse         *

!          JNB         06/30/1999     Increased field width of beginning*

!                                     and ending check numbers as they  *

!                                     displayed stars.                  *

!          JNB         07/09/1999     Included negative and zero net pay*

!          CWB         07/14/1999     Added OPTION and ADJUST to the    *

!                                     SELECT and FORM_ID to the WHERE.  *

!                                     Added logic to process the        *

!                                     negative numbers and only those   *

!                                     zero net checks that are not      *

!                                     adjustments.                      *

!          JNB         09/29/1999     Subtract deposit amt from net pay *

!                                     so that the report totals will    *

!                                     match with gexpy016 check register*

!          SCM         09/13/2000     Added 1 extra digit to the output *

!                                     edit for #conf_net_pay and #retl_ *

!                                     net pay and spaced over so there  *

!                                     was enough room to print on rpt.  *

!          CWB         03/12/2001     Changed to use only one account#  *

!                                     instead of 2 and write only 1     *

!                                     output file to the bank.          *

!                                     Changed subselect for paygroup_tbl*

!                                     in main select to use check date  *

!                                     in order to get correct account   *

!                                     number for adjusted checks from   *

!                                     the old account numbers.          *

!                                                                       *

!                                                                       *

!	CWB 03/01/2003                                                  *

!	In order to use 'Positive Pay' at National City, this SQR was   *

!	to be modified to create 2 files. One for Monday's run, one for *

!	Tuesday's. Panel GEX_RC_GEXPY604 was changed to allow a         *

!	run_id and cycle_select (for possible future use).              *

!       These fields are on RC_PAYINIT (PAYRNCTL.SQC)                   *

!	The file name will be a result of the run control id - either   *

!	'gexpy604_a', or 'gexpy604_b'. The off-cycle select will default*

!	to 'both'. The paygroups can then be gotten from PAY_CALENDAR,  *

!	based on the run_id from the panel. The run_id would be updated *

!	each week by GEXPY070.                                          *

!                                                                       *

! HR-10718  CWB  05/17/2004     Added logic to handle the reversal of   *

!                               mixed distribution checks, so that only *

!                               the amount of the check is voided, not  *

!                               the entire net pay.                     *

!                                                                       *

!                                                                       *

! HR-10961  AXL  11/02/2005     Process to get files to Natl City       *

!                               switched to FTP which no longer requires*

!                               a LOGDX record.                         *

! HR-1116  AKG   04/06/2011	Record Length change from 50 to 53 because*

!				of the Bank code change			*

!                                                                       *

! GEX_HR848_B763_01   ISDVMZA   04/03/2014 -  Fix calculation and log.  *
!                               Set the reversal of partial check to    *

!                               negative (-) sign to fix the transmittal*

!				report                                  *

!************************************************************************



#include 'setenv.sqc' !Set environment

#include 'setup02.sqc'

!*********************************************************************

!Initial processing, retrieving current dates and calls the main

!procedure to do the processing.

!*********************************************************************

begin-report



  do Init-DateTime

  do Init-Number

  do stdapi-init

  do Get-Calendar-Year-Id

  move 'GEXPY604' to $ReportID

!  move 'National City Check Reconciliation File' to $ReportTitle
  move 'PNC Bank Reconciliation File' to $ReportTitle     !GEX_HR848_B763_01   ISDVMZA
  display $ReportTitle noline

  display '  ' noline



  do Get-Current-DateTime



  show ' isdvmxr ===================================='



  let #write_rec1 = 0

!  let #write_rec2 = 0



  If $prcs_process_instance = ''

    Do P110-SQRW-Run-Controls

  Else

    Do P120-Process-Scheduler-Run-Controls

  End-If



  do Report

  do Commit-Transaction

  date-time () hh:mi:ss &timeEnded

  display 'Report Ended: ' noline

  display &timeEnded

  do stdapi-term

  !*do Reset

end-report





Begin-Procedure P110-SQRW-Run-Controls

#debug9 Show 'P110-SQRW-Run-Controls'

  do Select-Pay-End-Dt

  Show 'Pay End Date:  ' $pay_end_dt

  Let $X000_Where_Select_AsOfDate = $AsOfToday

End-Procedure





Begin-Procedure P120-Process-Scheduler-Run-Controls

#debug9 Show 'P120-Process-Scheduler-Run-Controls'

  Do GEXXX922-Select-Parameters



  Let $pay_end_dt = $GEX_RC_PAY.Pay_End_Dt



  If $pay_end_dt = ''

    do Select-Pay-End-Dt

  End-If

! CWB 03/01/2003 BEGIN

  Do select-Parameters

    Let $Run_id = $RC_PAYINIT.Run_ID

    Let $cycle_sel = $RC_PAYINIT.Cycle_select

    show ' '

    show '#####################################'

    show 'Pay End Date:  ' $pay_end_dt

    show '$Run_id = ' $Run_id

    show '$cycle_sel = ' $Cycle_Sel

    show '#####################################'

    show ' '

! CWB 03/01/2003 END





  Let $X000_Where_Select_AsOfDate = $AsOfToday

  Let $X000_ORDER_BY = 'B.ACCOUNT#, A.paycheck_nbr, A.NAME'



  Do P150-Print-Cover-page



End-Procedure



begin-procedure P150-Print-Cover-Page

#debug9 Show 'P150-Print-Cover-Page'



  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,1)

  Print '$Prcs_OPRID          = '                             (+2,5)

  Print $Prcs_OPRID                                           (0,+2)

  Print '$PRCS_RUN_CNTL_ID    = '                             (+1,5)

  Print $PRCS_RUN_CNTL_ID                                     (0,+2)



 Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,2)



  Print 'Last confirmed pay end date:'                        (+2,5)

  Print $pay_end_dt                                           (0,+2)



  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)

  Print $X000_ORDER_BY                                        (+2,5)



  Let #PAGE-COUNT = 0

  NEW-PAGE

  Let #PAGE-COUNT = 1

End-Procedure





begin-procedure Report



date-time () hh:mi:ss &timeBegan

display 'Report Began: ' noline

display &timeBegan



 move 'N' to $Errorfound



 date-time () MM/DD/YYYY &curr_date



 move &curr_date to $curr_date



  do Format-datetime($curr_date,$curr_Date_dbf_1,{DEFMDY},'','native')

  do Convert-To-DTU-Date($curr_Date_dbf_1,$curr_Date_1)



!  let #subtract_Days = 7

!  do dtu-subtract-days($curr_date_1, #subtract_Days, $curr_date_less7)

!  do Convert-From-DTU-Date($curr_date_less7,$curr_date_less7_dbf)

!  display $curr_Date_dbf_1

!  display $curr_date_less7_dbf



 if $sev-error = 'Y'

    goto Report-exit

 end-if



 do process-data



Report-Exit:





  date-time () hh:mi:ss &timeProcess

  display #InputTran 99999 noline

  display ' Transactions Processed: ' noline

  display &timeProcess



end-procedure



!*********************************************************************

!Prints the header information in the report.

!*********************************************************************

!

Begin-Heading 5

#debug9 Show 'Begin-Heading'



#Include 'stdhdg01.sqc'

!

!  print 'Report ID:  '    (1,1)

!  print $ReportID         ()

!

!  uppercase $ReportTitle

!  print $ReportTitle      (0,60)

!

!  print 'Run Date:'       (0,142)

!  date-time () DD-MON-YYYY &curr_Date

!  print &curr_Date ()

!

!  page-number (0,142) 'Page '

!  last-page () ' of ' '.'

!

!  position (+1)

!

end-heading

!

!*******************************************************

! Prints the footer in the report

!*******************************************************

!begin-footing 2

!page-number (+1,110) 'Page '

!last-page () ' of ' '.'

!end-footing



!*********************************************************************

! Select all valid Employee Types for a specific company

!*********************************************************************



begin-procedure process-data



!display 'Begin process'



! CWB 03/01/2003 BEGIN



!let $filename1 = '{OUTFILE}'||'gexpy604.dat'

  if $prcs_run_cntl_id = 'gexpy604_a'

    show ' '

    show 'Run_cntl_id: ' $prcs_run_cntl_id

    show ' '

    let $filename1 = '{OUTFILE}'||'gexpy604.001'

  else

  if $prcs_run_cntl_id = 'gexpy604_b'

    show ' '

    show 'Run_cntl_id: ' $prcs_run_cntl_id

    show ' '

    let $filename1 = '{OUTFILE}'||'gexpy604.002'

  else

    let $invalid_id_msg = 'INVALID RUNCTL_ID: ' || $prcs_run_cntl_id ||

    ' , program terminating'

    show $invalid_id_msg

    show 'Runcntl_id must be either gexpy604_a or gexpy604_b'

    STOP

  end-if

  end-if

! CWB 03/01/2003 END

!let $filename1 = '{OUTFILE}'||'gexpy604.001'    ! CWB 03/12/2001

!let $filename2 = '{OUTFILE}'||'gexpy604.002'    ! CWB 03/12/2001



open $filename1 as 1

!open 'c:\temp\gexpy604.con' as 1

     for-writing record=53			 !AKG 04/06/2011



!open $filename2 as 2                            ! CWB 03/12/2001

!open 'c:\temp\gexpy604.oth' as 2

!     for-writing record=50



if #writestat != 0

   display 'Error Opening output file.  Program terminating.'

   stop

end-if

! AXL 11/02/2005 BEGIN LOGDX record no longer needed as a result of FTP

!  do write-dx-record

! AXL 11/02/2005 END



move 'N' to $rowfound



   let #Total_void = 0       !ISDVMZA

   let #Total_net  = 0       !ISDVMZA

let #inputtran = 0

let $first_check_c = 'Y'

let $first_check_r = 'Y'

! CWB 03/20/2003 BEGIN

let $ok_to_write = 'N'

! CWB 03/20/2003 END



begin-select ON-ERROR=SQL-Error-Found('Process-data')

A.COMPANY            &company

  move &company   to $company

A.PAYGROUP           &paygroup

  move &paygroup  to $paygroup

A.EMPLID             &emplid

  move &emplid    to $emplid



  do Get-Empl-Name



A.CHECK_DT           &check_dt

  move &check_dt  to $check_dt

!  show '$check_dt: ' $check_dt

A.NET_PAY            &net_pay

  move &net_pay   to #net_pay

A.Page_num                                !JNB 09/29/1999

A.Line_num                               !JNB 09/29/1999

A.SepChk                               !JNB 09/29/1999

A.Off_Cycle                            !JNB 09/29/1999

  move &a.off_cycle to $off_cycle      !CWB 03/20/2003



A.paycheck_nbr

!  display 'Check # ' noline

!  display &A.paycheck_nbr

  move &A.paycheck_nbr to #check



A.PAYCHECK_STATUS    &status

  move &status    to $status



!CWB  07/14/99 Begin

A.PAYCHECK_OPTION    &option

  move &option    to $option



A.PAYCHECK_ADJUST    &adjust

  move &adjust    to $adjust



!   if $status = 'R'

   if ($option = 'R'

     and $adjust = 'N')

       let $indicator = 'V '

!CWB  07/14/99 End

!CWB  05/17/2004 BEGIN

      do Get-Pay-Distribution-rev

        if #Deposit_Total_R = 0

        else

!ISDVMZA -- 04/03/2014  --  Begin

!          move #Deposit_Total_R to #Net_Pay

           let #Net_Pay = #Deposit_Total_R * -1

!ISDVMZA -- 04/03/2014  --  End

        end-if

!CWB  05/17/2004 END

! CWB 03/20/2003 BEGIN

       let $ok_to_write = 'Y'

!   else

!       let $indicator = '17'

   else

   if $off_cycle = 'N'		!ISDVMXR!AXL 9/9/2004 switch to Y for Bonus Run only Flip back to "N" after its run.

   !if $off_cycle = 'Y'		!Bonus run 2013

       let $indicator = '17'

       let $ok_to_write = 'Y'

   else

       let $ok_to_write = 'N'

   end-if

! CWB 03/20/2003 END

   end-if



!GBD 09/24/2002 Begin

!B.ACCOUNT#  ()  on-break print=never level=1 procedure=Account-Change

!B.ACCOUNT#

SB.ACCOUNT_EC_ID

  let $account = translate(rtrim(&SB.ACCOUNT_EC_ID,' '),'-','D')



!  display 'Account # ' noline

!  display &B.account#

!  move &B.account#   to $account

!  let $account = RTRIM($account,' ')

!GBD 09/24/2002 End





! JNB 09/29/1999  begin



   if $Option = '&'

    do Get-Pay-Distribution

    subtract #Deposit_Total from #Net_Pay

  end-if

! JNB 09/29/1999  end



!CWB  07/14/99 Begin

  if #net_pay < 0

     let #net_pay_1 = #net_pay * -1

  else

     let #net_pay_1 = #net_pay

  end-if

!CWB  07/14/99 End



!  if #net_pay > 0    JNB 07/09/1999

   if (#net_pay = 0 and $adjust = 'Y')  !CWB  07/14/1999

   else

!    if $account = '0115860'             ! CWB 03/12/2001 New account# 0161074

! CWB 03/20/2003 BEGIN

!       do Write-Record-1

  if $ok_to_write = 'Y'

     do Write-Record-1

     let $ok_to_write = 'N'

  end-if

! CWB 03/20/2003 END

!    else

!       if $account = '0115668'    ! CWB 03/12/2001

!	    do Write-Record-2      !Other Payroll - 0115668

!       end-if                     ! CWB 03/12/2001

!    end-if

    end-if           !CWB  07/14/1999

!  end-if             JNB  07/09/1999

!  display 'Processing.'



  move 'Y' to $rowfound

  add 1 to #inputtran



FROM PS_PAY_CHECK A, PS_PAYGROUP_TBL B,

     PS_SRC_BANK SB, PS_BANK_EC_TBL BT

WHERE A.COMPANY = B.COMPANY

AND   A.PAYGROUP = B.PAYGROUP

!GBD 09/24/2002 Begin

AND   B.SRC_BANK_ID = SB.SRC_BANK_ID

AND   BT.BANK_CD    = SB.BANK_CD

!GBD 09/24/2002 End

!AND A.OFF_CYCLE = 'Y'		!isdvmxr 09/07/2006 AXL 9/9/2004 Enable for BONUS RUN-ONLY comment out after bonus run.

!AND A.OFF_CYCLE = 'Y' !Bonus run 2013

! CWB 03/01/2003 BEGIN

AND   A.PAYGROUP in

	(select cal.paygroup

	 from ps_pay_calendar cal

	 where cal.run_id = $run_id)

! CWB 03/01/2003 END

AND   A.PAY_END_DT = $pay_end_dt

!**

AND   A.PAYCHECK_OPTION <> 'A'

!CWB  07/14/99 Begin

AND   A.FORM_ID in ('GE001','GE002')

!CWB  07/14/99 End

!**

AND   B.EFFDT = (SELECT MAX(EFFDT)

		 FROM PS_PAYGROUP_TBL

		 WHERE COMPANY = B.COMPANY

		 AND   PAYGROUP = B.PAYGROUP

		 AND   EFF_STATUS = 'A'

!		 AND   EFFDT <= $X000_Where_Select_AsOfDate)

		 AND   EFFDT <= a.check_dt)     ! CWB 03/12/2001



!ORDER BY B.ACCOUNT#, A.NAME
!ORDER BY B.ACCOUNT#, A.paycheck_nbr, A.NAME

ORDER BY SB.ACCOUNT_EC_ID, A.PAYCHECK_NBR, A.NAME



end-select



if $rowfound = 'N'

   display 'No Employees found for the National City Recon File.'

else



   close 1

!   close 2



   move #write_rec1 to $rec1  999,999

!   move #write_rec2 to $rec2  999,999



   display 'Recon Records Written to File: ' noline

   display $rec1



   Do P250-Print-Report



end-if



end-procedure



! JNB 09/29/1999 Begin



begin-procedure Get-Pay-Distribution

  move 0 to #Deposit_Total

begin-SELECT



PD.DEPOSIT_AMOUNT

PD.ACCOUNT_TYPE

  add &PD.Deposit_Amount to #Deposit_Total



FROM  PS_PAY_DISTRIBUTN PD

WHERE PD.COMPANY         = $Company

  AND PD.PAYGROUP        = $PayGroup

  AND PD.PAY_END_DT      = $pay_end_dt

  AND PD.OFF_CYCLE       = &A.Off_Cycle

  AND PD.PAGE_NUM        = &A.Page_num

  AND PD.LINE_NUM        = &A.Line_num

  AND PD.SEPCHK          = &A.SepChk

  AND PD.ACCOUNT_TYPE   <> '$'

end-SELECT



end-procedure



! JNB 09/29/1999  End



!CWB 05/17/2004 BEGIN

begin-procedure Get-Pay-Distribution-Rev

  move 0 to #Deposit_Total_R

begin-SELECT



PDR.DEPOSIT_AMOUNT



  add &PDR.Deposit_Amount to #Deposit_Total_R



FROM  PS_PAY_DISTRIBUTN PDR

WHERE PDR.PAYCHECK_NBR   = &A.PAYCHECK_NBR

  AND PDR.FORM_ID        = 'GE001'

  AND PDR.ACCOUNT_TYPE   = '$'

end-SELECT



end-procedure

!CWB 05/17/2004 END



begin-procedure P250-Print-report

! JNB 01/26/1999  Made changes to descr 'Retail/WHSE'  and eliminated decimal from paycheck_nbr field

! SCM 09/13/2000  Added 1 digit to output edit of #conf_net_pay and #retl_net_pay and changed

!     the spacing of all output to ensure that they would fit on report (changed from 42 to 50)



  Print '******  Report Totals  ****** '                 (+4,10)



  Print 'Total Checks Written to File '                  (+2,10)

  Print #write_rec1                                      (,50)    Edit 999,999



!  GEX_HR848_B763_01   ISDVMZA   04/03/2014  --  Begin

  Print 'Total Positive Amount'                          (+2,10)

  Print #Total_net                                       (,43)    Edit 999,999,999.99

  Print 'Total Void Amount'                              (+2,10)

  Print #Total_void                                      (,43)    Edit 999,999,999.99

!  GEX_HR848_B763_01   ISDVMZA   04/03/2014  --  End



  Print 'Total Check Amount'                             (+2,10)

  Print #conf_net_pay                                    (,43)    Edit 999,999,999.99

  Print 'Beginning Check #'                              (+2,10)

  Print #beginning_check_no_c                            (,48)    Edit B99999999

  Print 'Ending Check #'                                 (+2,10)

  Print #ending_check_no_c                               (,48)    Edit B99999999



!  GEX_HR848_B763_01   ISDVMZA   04/03/2014  --  Begin

  Print 'Call In Total Amount: '                         (+3,40)

  Print #conf_net_pay                                    (,+4)    Edit 999,999,999.99 !bold box

!  GEX_HR848_B763_01   ISDVMZA   04/03/2014  --  End



!  Print 'Total Checks for Retail/WHSE '                  (+2,10)

!  Print #write_rec2                                      (,50)    Edit 999,999

!  Print 'Total Check Amt for Retail/WHSE'                (+2,10)

!  Print #retl_net_pay                                    (,50)    Edit 99,999,999.99

!  Print 'Beginning Check #'                              (+2,10)

!  Print #beginning_check_no_r                            (,50)    Edit B999999

!  Print 'Ending Check #'                                 (+2,10)

!  Print #ending_check_no_r                               (,50)    Edit B999999

end-procedure





!*********************************************************************

begin-procedure Write-DX-Record

  let $dx-rec = 'LOGDXNC46      DX003952  *ARPA000000000        C00'

  write 1 from $dx-rec:50

end-procedure

!*********************************************************************

! Write Record Information for Confidential Payroll File

!*********************************************************************

begin-procedure Write-Record-1



   if $first_check_c = 'Y'

      move #check  to #beginning_check_no_c

      let $first_check_c = ' '

   end-if



  add 1 to #write_rec1

  add #net_pay to #conf_net_pay



!  move #net_pay         to $net_pay        9999999.99

!  move #check           to $check          9999999999



!  GEX_HR848_B763_01   ISDVMZA   04/03/2014  --  Begin

   if rtrim($indicator,' ') = 'V'

      add #net_pay to #Total_void

   else

      add #net_pay to #Total_net

   end-if

!  GEX_HR848_B763_01   ISDVMZA   04/03/2014  --  End



   move #net_pay_1       to $net_pay_1      00000000.00

   Let  $net_pay_num = Substr($net_pay_1,1,8) || Substr($net_pay_1,10,2)



   move &A.paycheck_nbr           to $check          0000000000

   Let #ending_check_no_c = &A.paycheck_nbr



  do Format-DateTime($check_dt,$checkdate,{DEFMDY},'','')

  let $check_mm = substr($checkdate,1,2)

  let $check_dd = substr($checkdate,4,2)

  let $check_yy = substr($checkdate,7,2)



  let $check_all = $check_mm||$check_dd||$check_yy



  uppercase $lname



!  display '00115860' noline

!  display $check     noline

!  display $indicator noline

!  display $net_pay   noline

!  display $check_all noline

!  display $lname     noline

!  display $company   noline

!  display $paygroup



!  write 1 from '00115860' 	! CWB 03/12/2001



  write 1 from '0'         	! CWB 03/12/2001

         $account:10  		 	! CWB 03/12/2001 and AKG 04/06/2011

	       $check:10

	       $indicator:2

	       $net_pay_num:10

	       $check_all:6

	       $lname:8

	       $company:3

	       $paygroup:3



! CWB 03/20/2003 BEGIN

     let $ok_to_write = 'N'

! CWB 03/20/2003 END



end-procedure



!*********************************************************************

! Write Record Information for Other Payrolls File

!*********************************************************************

begin-procedure Write-Record-2



   if $first_check_r = 'Y'

      move #check  to #beginning_check_no_r

      let $first_check_r = ' '

   end-if









  add 1 to #write_rec2

  add #net_pay to #retl_net_pay



!  display '#write_rec2 ' noline

!  display #write_rec2

!  display '#net_pay ' noline

!  display #net_pay

!  display '#retl_net_pay ' noline

!  display #retl_net_pay

!  move #net_pay         to $net_pay        9999999.99

!  move #check           to $check          9999999999



   move #net_pay_1       to $net_pay_1      00000000.00

   Let  $net_pay_num = Substr($net_pay_1,1,8) || Substr($net_pay_1,10,2)



   move &A.paycheck_nbr           to $check          0000000000

   Let #ending_check_no_r = &A.paycheck_nbr









  do Format-DateTime($check_dt,$checkdate,{DEFMDY},'','')

  let $check_mm = substr($checkdate,1,2)

  let $check_dd = substr($checkdate,4,2)

  let $check_yy = substr($checkdate,7,2)



  let $check_all = $check_mm||$check_dd||$check_yy



  uppercase $lname



!  display '00115668' noline

!  display $check     noline

!  display $indicator noline

!  display $net_pay   noline

!  display $check_all noline

!  display $lname     noline

!  display $company   noline

!  display $paygroup



  write 2 from '00115668'

	       $check:10

       $indicator:2

	       $net_pay_num:10

	       $check_all:6

	       $lname:8

	       $company:3

	       $paygroup:3



end-procedure





!begin-procedure Account-Change

! Let #beginning_check_no_r = #check

!end-procedure



!*********************************************************************

begin-procedure Select-Pay-End-Dt

begin-select

MAX(PC.PAY_END_DT)      &pay_end_dt

  move &pay_end_dt   to $pay_end_dt



FROM PS_PAY_CHECK PC



end-select



!display $pay_end_dt



end-procedure



!*********************************************************************

begin-procedure Get-Empl-Name

begin-select

PD.LAST_NAME_SRCH



  move &PD.LAST_NAME_SRCH to $last_name



FROM PS_PERSONAL_DATA PD

WHERE PD.EMPLID = $emplid



end-select



  let $lname = substr($last_name,1,8)



end-procedure



!*********************************************************************

!Displays the error messages and stops execution

!*********************************************************************



begin-procedure SQL-Error-Found($Proc_Name)

!  do error-found

  display 'SQL Error in '

  display $Proc_Name

  display $_sql-error

  display 'sql-status:'

  display #_sql-status



  STOP



end-procedure



#Include 'gexxx922.sqc'  !Get gex_rc_pay run controls

! CWB 03/01/2003 BEGIN

#include 'gexpyrcl.sqc'  !Get GEX_RC_PAYINIT run controls

! CWB 03/01/2003 END

#Include 'tranctrl.sqc'  !Common Transaction Control Procedures

!*#Include 'reset.sqc'     !Reset printer procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure

#Include 'datetime.sqc'  !Routines for date and time formatting

#Include 'number.sqc'    !Routines to format numbers

#Include 'stdapi.sqc'    !Update Process API

#Include 'datemath.sqc'  !Does the date-math functions

#Include 'getdatcd.sqc'  !Get-Date-Codes procedure

#Include 'getbalid.sqc'  !Get-Calendar-Year-Id

