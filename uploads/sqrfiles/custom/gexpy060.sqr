!***********************************************************************
!  GEXPY060:  Employee Store Worked List                               *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY060:             Employee Store Worked List                     *
!                                                                      *
! Narrative:            This program creates a weekly report of all    *
!                       employees who have worked in a store other     *
!                       than their home store.                         *
!                                                                      *
! #Debugx Used:	        #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           pay_oth_earns                                  *
!                       pay_earnings                                   *
!                       gex_dept_tbl                                   *
!                       personal_data                                  *
!                       job                                            *
!                                                                      *
! Written by:           Jim Hutchison                                  *
!                                                                      *
! Normally Run:	        Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Company Division Code                        *
!                         Company                                      *
!                         Paygroup                                     *
!                         Deptid                                       *
!                         Employee Status                              *
!                         Account Code                                 *
!                         As Of Date                                   *
!                                                                      *
!                       FOR ORDER BY CLAUSE:                           *
!                         1) by Company, Paygroup, Work Store, EmplID  *
!                         2) by Company, Paygroup, Home Store, EmplID  *
!                         3) by EmplID                                 *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS     DATE         DESCRIPTION OF THE CHANGE                 *
!***********************************************************************
!  JDH          03/23/98     Initial Creation                          *
!  JDH          01/21/98     Modified logic to sum hours and earnings  *
!                              for each store worked per employee.     *
!                            Performance Tuning.                       *
!  JDH          03/19/99     Added logic to exclude non-productive     *
!                              earnings codes.                         *
!GEX_PY244  SXD 08/21/2007   Set optimizer goal procedure is commented *       
!***********************************************************************


#Include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and page-size initialization


Begin-Heading 8
#debug9 Show 'Begin-Heading'

#Include 'stdhdg02.sqc'

  If $PayGroup <> $priorPayGroup
    Do Get-PayGroup-Data
    Let $priorPayGroup = $PayGroup
  End-If

  Let $X000_temp_out = 'Sorted by ' || $Sort_Display
  Print $X000_temp_out         (3,)  center

  Let $X000_temp_out = 'Report as of ' || $X000_REPORT_HEADING_ASOFDATE
  Print $X000_temp_out         (4,)  center

  Print 'Pay Group'            ( 4,001)
  Print $PayGroup              (+0,013)
  Print $PayGroupName          (+0,+1)

  Print 'EMPLOYEE'             (+2,001)
  Print 'HOURS'                (+0,052)
  Print 'WORK'                 (+0,064)
  Print 'WORK'                 (+0,075)
  Print 'HOME'                 (+0,088)
  Print 'HOME'                 (+0,099)
  Print 'GROSS'                (+0,118)

  Print 'ID'                   (+1,001)
  Print 'NAME'                 (+0,014)
  Print 'WORKED'               (+0,051)
  Print 'STORE'                (+0,064)
  Print 'ACCT CD'              (+0,075)
  Print 'STORE'                (+0,088)
  Print 'ACCT CD'              (+0,099)
  Print 'WAGES'                (+0,118)

  Print '-'                    (+1,001,09)  Fill
  Print '-'                    (+0,014,30)  Fill
  Print '-'                    (+0,048,09)  Fill
  Print '-'                    (+0,064,05)  Fill
  Print '-'                    (+0,075,07)  Fill
  Print '-'                    (+0,088,05)  Fill
  Print '-'                    (+0,099,07)  Fill
  Print '-'                    (+0,110,13)  Fill
End-Heading


Begin-Report
#debug9 Show 'Begin-Report'
!GEX_PY244 SXD     08/21/2007    Begin
  !Do Set-Optimizer-Goal
!GEX_PY244 SXD     08/21/2007    End

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Do P100-Start
  Do P200-Main-Process
  Do P300-Finish

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
End-Report

!SXD     08/21/2007      Begin
!Begin-Procedure Set-Optimizer-Goal
  !Begin-SQL
    !Alter Session Set OPTIMIZER_GOAL=RULE;
  !End-SQL
!End-Procedure
!                       End


Begin-Procedure P100-Start
#debug9 Show 'P100-Start'

  Let $ReportID    = 'GEXPY060'
  Let $ReportTitle = 'EMPLOYEE STORE WORKED LIST'

  Show '$ReportID='    $ReportID
  Show '$ReportTitle=' $ReportTitle
          
  Let $GEXXX900_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
  Let $GEXXX902_Deptid_Alias   = 'J.DEPTID'
  Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'
  Let $GEXXX907_Div_CD_Alias   = 'GDT.GEX_COMPANY_DIV_CD'                    
  Let $GEXXX909_Acct_CD_Alias  = 'J.ACCT_CD'

  If $prcs_process_instance = ''
    do P110-Get-Parms
  Else
    Do GEXXX922-Select-Parameters
    Do GEXXX900-Select-Company-Parameters
    Do GEXXX901-Select-Company-Paygroup-Parameters
    Do GEXXX902-Select-Deptid-Parameters
    Do GEXXX903-Select-Emp-Stat-Parameters
    Do GEXXX907-Select-Div-CD-Parameters 
    Do GEXXX909-Select-Acct-CD-Parameters

    Let $AsOfDate = $GEX_RC_PAY.AsOfDate
    Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.AsOfDate
    If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
      Let $X000_WHERE_SELECT_ASOFDATE = $AsOfToday
    End-If
    Let $Sort = $GEX_RC_PAY.GEXPY060_Sort
  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  Do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')

  If $Sort = '1'
    Let $Sort_Store   = 'pe.deptid'
    Let $Order_Clause = 'j.company, j.paygroup, pe.deptid, pe.acct_cd, j.emplid'
  Else
    If $Sort = '2'
      Let $Sort_Store   = 'j.deptid'
      Let $Order_Clause = 'j.company, j.paygroup, j.deptid, j.acct_cd, j.emplid'
    Else
      Let $Sort = '3'
      Let $Sort_Store   = ''
      Let $Order_Clause = 'j.emplid'
    End-If
  End-If

  Let $X000_ORDER_BY = $Order_Clause

  Show '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  Show '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA
  Show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA
  Show '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA
  Show '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA
  Show '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA
  Show '$X000_WHERE_SELECT_ASOFDATE ='   $X000_WHERE_SELECT_ASOFDATE

  Do P130-Get-Last-Confirmed-Pay
  Do P150-Print-Cover-Page

  Do Get-Calendar-Year-Id    !getbalid.sqc

  Let $GEXERNCD_Erncd_Alias = 'poe.erncd'
  Do Get-Non-Productive-Erncds
End-Procedure


Begin-Procedure P110-Get-Parms
#debug9 Show 'P110-Get-Parms'

  Do GEXXX950-Input-Parameters

  Show 'Valid Sort Orders (1,2,3)'
  Show '   1) by Company, Paygroup, Work Store, EmplID'
  Show '   2) by Company, Paygroup, Home Store, EmplID'
  Show '   3) by EmplID'

  While 1=1
    Input $Sort Maxlen=1 'Enter sort order'
    If $Sort = '1' Or $Sort = '2' Or $Sort = '3'
      Break
    End-If
  End-While
End-Procedure


Begin-Procedure P130-Get-Last-Confirmed-Pay
#debug9 Show 'P130-Get-Last-Confirmed-Pay'
Begin-Select
MAX(PAY_END_DT) &PAY_END_DT

  Let $pay_end_dt = &PAY_END_DT
  Show 'Last confirmed pay end date:  ' $pay_end_dt

FROM   PS_PAY_CALENDAR

WHERE  PAY_END_DT <= $X000_WHERE_SELECT_ASOFDATE
AND    PAY_CONFIRM_RUN = 'Y'
End-Select
End-Procedure


begin-procedure P150-Print-Cover-Page
#debug9 Show 'P150-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OPRID          ='                                  (+2,5)
  Print $Prcs_OPRID                                               (0,+2)
  Print '$PRCS_RUN_CNTL_ID    ='                                  (+1,5)
  Print $PRCS_RUN_CNTL_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+2,5)
  Print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA                 (0,+2)
  Print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA                (0,+2)
  Print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,5)
  Print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA       (0,+2)
  Print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,5)
  Print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)
  Print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,5)
  Print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA               (0,+2)
  Print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA                (0,+2)

  Print 'As Of Date :'                                        (+2,5)
  Print $X000_REPORT_HEADING_ASOFDATE                         (0,+2)
 
  Evaluate $Sort
    When = '1'
      Let $Sort_Display = 'Work Store, Work Acct_Cd, Employee ID'
    When = '2'
      Let $Sort_Display = 'Home Store, Home Acct_Cd, Employee ID'
    When = '3'
      Let $Sort_Display = 'Employee ID'
  End-Evaluate

  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $Sort_Display                                         (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
  Let #PAGE-COUNT = 1
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'

  Let $Data-Found-Flag = 'N'
 
Begin-Select
j.company  ()                        On-Break  Level=1  Print=Never
j.paygroup ()                        On-Break  Level=2  Print=Never  After=P216-After-Paygroup-Break
[$Sort_Store]  &Sort_Store=Char  ()  On-Break  Level=3  Print=Never  Save=$Previous_Deptid  After=P220-After-Deptid-Break
j.deptid
j.acct_cd
j.emplid
pd.name
pe.deptid
pe.acct_cd
Sum(poe.oth_hrs)   &poe.oth_hrs
Sum(poe.oth_earns) &poe.oth_earns

  Let $Data-Found-Flag = 'Y'

  Let $Company  = &j.company
  Let $Paygroup = &j.paygroup

  Let #poe.oth_hrs   = &poe.oth_hrs
  Let #poe.oth_earns = &poe.oth_earns

  Do P212-Accumulate-Totals
  Do P214-Print-Record

From   ps_gex_dept_tbl           gdt,
       ps_personal_data          pd,
       ps_job                    j,
       ps_pay_earnings           pe,
       ps_pay_oth_earns          poe

Where  poe.company               = pe.company
And    poe.paygroup              = pe.paygroup
And    poe.pay_end_dt            = pe.pay_end_dt
And    poe.off_cycle             = pe.off_cycle
And    poe.page_num                 = pe.page_num
And    poe.line_num                 = pe.line_num
And    poe.addl_nbr                 = pe.addl_nbr

And    pe.pay_end_dt             = $pay_end_dt

And    pe.emplid                 = j.emplid
And    pe.empl_rcd              = j.empl_rcd

And    pe.deptid                <> j.deptid

And    pd.emplid                 = pe.emplid

And    j.effdt                   =
      (Select Max(effdt)
       From   ps_job
       Where  emplid             = pe.emplid
       And    empl_rcd          = pe.empl_rcd
       And    effdt             <= $pay_end_dt)

And    j.effseq                  =
      (Select Max(effseq)
       From   ps_job
       Where  emplid             = j.emplid
       And    empl_rcd          = j.empl_rcd
       And    effdt              = j.effdt)

And    gdt.deptid                = j.deptid

And    gdt.effdt                 =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid             = j.deptid
       And    effdt             <= $pay_end_dt)

And    gdt.sequence_number       =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt              = gdt.effdt)

And   [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
And   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
And   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
And   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
And   [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
And   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]

And   [$GEXERNCD_EXCLUDE_ERNCD_CRITERIA]

Group By j.company,
         j.paygroup,
        [$Sort_Store],
         j.deptid,
         j.acct_cd,
         j.emplid,
         pd.name,
         pe.deptid,
         pe.acct_cd

Order By [$X000_ORDER_BY]

End-Select

  If $Data-Found-Flag = 'N'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If
End-Procedure


Begin-Procedure P212-Accumulate-Totals
#debug9 Show 'P212-Accumulate-Totals'

  Add #poe.oth_hrs      To #Deptid-Hours
  Add #poe.oth_earns    To #Deptid-Amount
End-Procedure


Begin-Procedure P214-Print-Record
#debug9 Show 'P214-Print-Record'

  Let $Record-Printed = 'Y'

  Print &j.emplid                  (+1,001)
  Print &pd.name                   (+0,014,030)
  Print #poe.oth_hrs               (+0,048)  Edit 99,999.99
  Print &pe.deptid                 (+0,064)
  Print &pe.acct_cd                (+0,075)
  Print &j.deptid                  (+0,088)
  Print &j.acct_cd                 (+0,099)
  Print #poe.oth_earns             (+0,110)  Edit 99,999,999.99
End-Procedure


Begin-Procedure P216-After-Paygroup-Break
#debug9 Show 'P216-After-Paygroup-Break'

  New-Page
End-Procedure


Begin-Procedure P220-After-Deptid-Break
#debug9 Show 'P220-After-Deptid-Break'

  If $Record-Printed = 'Y'

    If $Sort_Store = 'j.deptid'
      Let $Deptid_Subtotal_Text = 'Home'
    Else
      If $Sort_Store = 'pe.deptid'
        Let $Deptid_Subtotal_Text = 'Work'
      End-If
    End-If

    If $Deptid_Subtotal_Text <> ''
      Let $Deptid_Subtotal_Text = $Deptid_Subtotal_Text || ' Store ' || $Previous_Deptid || ' Totals'
      Print '-'                      (+1,048,009)  Fill
      Print '-'                      (+0,110,013)  Fill
      Print $Deptid_Subtotal_Text    (+1,14)
      Print #Deptid-Hours            (+0,048)      Edit 99,999.99
      Print #Deptid-Amount           (+0,110)      Edit 99,999,999.99
      Print ' '                      (+2,001)
      Let #Deptid-Hours  = 0
      Let #Deptid-Amount = 0
    End-If

  End-If

  Let $Deptid_Subtotal_Text = ''
  Let $Record-Printed = 'N'
End-Procedure


Begin-Procedure P300-Finish
#debug9 Show 'P300-Finish'

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
End-Procedure


#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'askaod.sqc'    !Ask for As-Of-Date parameter
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'reset.sqc'     !Reset printer Procedure
#Include 'getbalid.sqc'  !Get Calendar Year ID
#Include 'getcodta.sqc'  !Get Company Data
#Include 'getpgdta.sqc'  !Get Paygroup Data

#include 'gexxx950.sqc'  !Get SQRW run controls
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx904.sqc'  !Get grade multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexerncd.sqc'
