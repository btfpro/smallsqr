!***********************************************************************
! GEXHR067   : Optical Headcount Report                                *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXHR067 :            Optical Headcount Report                       *
!                                                                      *
! Narrative:                                                           *
!                                                                      *
! SQL Tables:           JOB                                            *
!                       GEX_DEPT_TBL                                   *
! Written by:           VENDTKK                                        *
!                                                                      *
! Normally Run:         Monthly                                        *
!                                                                      *
! Control Parms:		FOR WHERE CLAUSE:                      * 
!				  Company Division Code                *
!				  Company  	                       *
!				  Paygroup  	                       *
!				  Deptid	                       *
!				  Employee Status	               *
!				  Account Code                         *
!				  As Of Date                           *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! GEX-TLL   05/15/2008  Carried over from 8.3 Prod                     *
!***********************************************************************


#include 'setenv.sqc' 		!Set environment

begin-setup
#Include 'setup32a.sqc'
end-setup

!*********************************************************************
begin-report
!*********************************************************************
  do Initialization
  do Process-Main
  do Stdapi-Term
  !do EOJ

end-report

!***********************************************************************
begin-procedure Initialization
!***********************************************************************

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init
  
  Let $GEXXX900_Company_Alias  = 'JOB.COMPANY'
  Let $GEXXX901_Company_Alias  = 'JOB.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'JOB.PAYGROUP'
  Let $GEXXX902_Deptid_Alias   = 'JOB.DEPTID'
  Let $GEXXX903_Emp_Stat_Alias = 'JOB.EMPL_STATUS'
  Let $GEXXX907_Div_CD_Alias   = 'GEXDEPT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias  = 'JOB.ACCT_CD'
  Let $GEXXX924_ERNCD_Alias    = 'D.ERNCD'    !vendtkk
  
  
   if $prcs_process_instance = ''
    do SQRW-Run-Controls
  else
    do Process-Scheduler-Run-Controls
  end-if

  date-time () hh:mi:ss &TimeBegan
  date-time () MM/DD/YYYY  &DateBegan
  show 'Report Began at ' &TimeBegan ' on '  &DateBegan

  Let $ReportID    = 'GEXHR067'
  Let $ReportTitle = 'Optical Headcount Report'
  
  Show '$ReportID='    $ReportID
  Show '$ReportTitle=' $ReportTitle

  Do Format-DateTime($WHERE_SELECT_ASOFDATE, $REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')
  Show '$WHERE_SELECT_ASOFDATE = '   $REPORT_HEADING_ASOFDATE
  
  
  Do Print-Cover-Page

end-procedure Initialization

!******************************************************************
begin-heading 6
!******************************************************************
  #Include 'stdhdg01.sqc'
  
  Print $Reporting_Period      (3,) Center 
  print 'Deptid'        (+2,10)
  Print 'Dept Name'	(0,25)
  Print 'Count'		(0,68)
  print 'Wages '        (0,80)

  print '-'              (+1,10,145) fill
  
end-heading



!***********************************************************************
Begin-Procedure SQRW-Run-Controls 
!***********************************************************************
  Do Ask-As-Of-Date
 Let $WHERE_SELECT_ASOFDATE = $AsOfDate
 
 
  Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = '1=1'
  Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA = 'ALL'
    
  Display 'Enter Company/Paygroup or leave blank to exit.'
  While 1=1
    Input $In-Company Maxlen=3 'Company'
    Uppercase $In-Company
    If Rtrim($In-Company, ' ') = ''
      Break
    Else
      Input $In-Paygroup Maxlen=3 'Paygroup'
      Uppercase $In-Paygroup
      If Rtrim($In-Paygroup, ' ') = ''
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''')'
        
      Else
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''' And ' || $GEXXX901_Paygroup_Alias || ' = '''  || $In-Paygroup || ''')'
        
      End-If
      Add 1 To #GEX_RC_PAYGROUP_ROWS
      If #GEX_RC_PAYGROUP_ROWS = 1
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '(' || $Include_Condition
        
      Else
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ' Or '  || $Include_Condition
        
      End-If
    End-If
  End-While

  If #GEX_RC_PAYGROUP_ROWS = 0
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ')'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
  End-If


   Let $DeptIDString = ''''
  Display 'Enter DeptID or leave blank to exit.'
  While 1=1
    Input $In-DeptID Maxlen=10 'DeptID'
    Uppercase $In-DeptID
    If Rtrim($In-DeptID, ' ') = ''
      Concat '''' With $DeptIDString
      Break
    End-If
    If $DeptIDString <> ''''
      Concat ''',''' With $DeptIDString
    End-If
    Concat $In-DeptID With $DeptIDString
  End-While

  If $DeptIDString = ''''''
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' In (' || $DeptIDString || ')'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_INCLUDE_DEPTID_CRITERIA
  End-If
  
   Let $EmplStatusString = ''''
  Display 'Enter Employee Status or leave blank to exit.'
  While 1=1
    Input $In-EmplStatus Maxlen=1 'Employee Status'
    Uppercase $In-EmplStatus
    If Rtrim($In-EmplStatus, ' ') = ''
      Concat '''' With $EmplStatusString
      Break
    End-If
    If $EmplStatusString <> ''''
      Concat ''',''' With $EmplStatusString
    End-If
    Concat $In-EmplStatus With $EmplStatusString
  End-While

  If $EmplStatusString = ''''''
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = '1=1'
    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = $GEXXX903_Emp_Stat_Alias || ' In (' || $EmplStatusString || ')'
    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
  End-If


  Let $DivCdString = ''''
  Display 'Enter Company Division Code or leave blank to exit.'
  While 1=1
    Input $In-DivCd Maxlen=3 'Company Division Code'
    Uppercase $In-DivCd
    If Rtrim($In-DivCd, ' ') = ''
      Concat '''' With $DivCdString
      Break
    End-If
    If $DivCdString <> ''''
      Concat ''',''' With $DivCdString
    End-If
    Concat $In-DivCd With $DivCdString
  End-While

  If $DivCdString = ''''''
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = '1=1'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = $GEXXX907_Div_CD_Alias || ' In (' || $DivCdString || ')'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  End-If


  Let $AcctCdString = ''''
  Display 'Enter Account Code or leave blank to exit.'
  While 1=1
    Input $In-AcctCd Maxlen=25 'Account Code'
    Uppercase $In-AcctCd
    If Rtrim($In-AcctCd, ' ') = ''
      Concat '''' With $AcctCdString
      Break
    End-If
    If $AcctCdString <> ''''
      Concat ''',''' With $AcctCdString
    End-If
    Concat $In-AcctCd With $AcctCdString
  End-While

  If $AcctCdString = ''''''
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA = '1=1'
    Let $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA = $GEXXX909_Acct_CD_Alias || ' In (' || $AcctCdString || ')'
    Let $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA = $GEXXX909_INCLUDE_ACCT_CD_CRITERIA
    
  End-If
  
 ! ~~~~~~~~~~~~~~~~~~~~ EARNINGS CODE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    While 1=1 
	    Input $Gex_Incl_Excl Maxlen=1 '(I)nclude Earn_cd / (E)xclude Earn_cd / (A)ll Earn_cds'
	    Uppercase $Gex_Incl_Excl
	    
	    If $Gex_Incl_Excl = 'I' 
	       Do Ask-For-Incl-Earn-cd
	       Break
	    Else
	      If $Gex_Incl_Excl = 'E'
	         Do Ask-For-Excl-Earn-cd
	         Break
	      Else
	        Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = '1=1'
	        Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'ALL'
	        Let $GEXXX924_EXCLUDE_ERNCD_CRITERIA = '1=1'
	        Let $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA = 'NONE'
	        Break
	      End-If
	    End-If
	    
	  End-While

End-Procedure SQRW-Run-Controls 


!***********************************************************************
Begin-Procedure Ask-For-Incl-Earn-cd
!***********************************************************************
#debug9 show 'Ask-For-Incl-Earn_cd'

  Let $Earn_Cdstring = ''''
  Display 'Enter Company Earn Cds to INCLUDE or leave blank to exit.'
  
  While 1=1
    Input $In-Earn_Cd Maxlen=6 'Earn_Cd'
    Uppercase $In-Earn_Cd
    
    If Rtrim($In-Earn_Cd, ' ') = ''
      Concat '''' With $Earn_CdString
      Break
    End-If
    
    If $Earn_CdString <> ''''
      Concat ''',''' With $Earn_CdString
    End-If

    Concat $In-Earn_Cd With $Earn_CdString
  End-While
  

  If $Earn_CdString = ''''''
    Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = '1=1'
    Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = $GEXXX924_ERNCD_Alias || ' In (' || $Earn_CdString || ')'
    Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = $GEXXX924_INCLUDE_ERNCD_CRITERIA
  End-If
  
  Let $GEXXX924_EXCLUDE_ERNCD_CRITERIA = '1=1'
  Let $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA = 'NONE'
  
End-Procedure

!***********************************************************************
Begin-Procedure Ask-For-Excl-Earn-cd
!***********************************************************************
#debug9 show 'Ask-For-Excl-Earn_cd'

  Let $Earn_CdString = ''''
  Display 'Enter Company Earn Cds to EXCLUDE or leave blank to exit.'
  While 1=1
    Input $In-Earn_Cd Maxlen=6 'Earn_Cd'
    Uppercase $In-Earn_Cd
    If Rtrim($In-Earn_Cd, ' ') = ''
      Concat '''' With $Earn_CdString
      Break
    End-If
    If $Earn_CdString <> ''''
      Concat ''',''' With $Earn_CdString
    End-If
    Concat $In-Earn_Cd With $Earn_CdString
  End-While

  show '$Earn_CdString = ' $Earn_CdString 
  If $Earn_CdString = ''''''
    Let $GEXXX924_EXCLUDE_ERNCD_CRITERIA = '1=1'
    Let $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA = 'NONE'
  Else
    Let $GEXXX924_EXCLUDE_ERNCD_CRITERIA = $GEXXX924_ERNCD_Alias || ' Not In (' || $Earn_CdString || ')'
    Let $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA = $GEXXX924_EXCLUDE_ERNCD_CRITERIA
  End-If
  
  Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = '1=1'
  Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'ALL'

End-Procedure





!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls 
!***********************************************************************
 
  
    Do GEXRCHR1-SELECT-PARAMETERS
    Do GEXXX900-Select-Company-Parameters
    Do GEXXX901-Select-Company-Paygroup-Parameters
    Do GEXXX902-Select-Deptid-Parameters
    Do GEXXX903-Select-Emp-Stat-Parameters
    Do GEXXX907-Select-Div-CD-Parameters 
    Do GEXXX909-Select-Acct-CD-Parameters
     Do GEXXX922-Select-Parameters
    
   Let $WHERE_SELECT_ASOFDATE = $GEX_RC_HR.ASOFDATE
   
    If Rtrim($WHERE_SELECT_ASOFDATE, ' ') = ''
      Let $WHERE_SELECT_ASOFDATE = $AsOfToday
    End-If
   
    Do Get-From-Pay-End
     Show 'from date: ' &From_Pay_End
  Do Get-Thru-Pay-End
     Show 'thru date: ' &Thru_Pay_End
    
      
     show '&GEX_RC_PAY.Gex_Incl_Excl $GEX_RC_PAY.GEX_INCL_EXCL : ' &GEX_RC_PAY.Gex_Incl_Excl '   '  $GEX_RC_PAY.GEX_INCL_EXCL 
   	  Evaluate &GEX_RC_PAY.Gex_Incl_Excl
	     When = 'I'
	        Do GEXXX924-Select-ERNCD-Parameters 
	        Let $GEXXX924_EXCLUDE_ERNCD_CRITERIA = '1=1'
	        Let $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA = 'NONE'
	        Break
	     When = 'E'
	        Do GEXXX924-Select-ERNCD-Parameters
	        Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = '1=1'
	        Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'NONE'
	        Break
	     When-Other
	        Let $GEXXX924_INCLUDE_ERNCD_CRITERIA   = '1=1'
	        Let $GEXXX924_EXCLUDE_ERNCD_CRITERIA = '1=1'
	        Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'ALL'
	        Let $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA = 'NONE'
	  End-Evaluate
  
  End-Procedure Process-Scheduler-Run-Controls 

!***********************************************************************
begin-procedure Print-Cover-Page
!***********************************************************************

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OPRID          ='                                  (+2,5)
  Print $Prcs_OPRID                                               (0,+2)
  Print '$PRCS_RUN_CNTL_ID    ='                                  (+1,5)
  Print $PRCS_RUN_CNTL_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+2,5)
  Print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA                 (0,+2)
  Print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA                (0,+2)
  Print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,5)
  Print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA       (0,+2)
  Print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,5)
  Print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	          (0,+2)
  Print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,5)
  Print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA               (0,+2)
  Print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA                (0,+2)
  
  Print '$GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA            ='   (+1,5)       
  Print $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA                   (0,+2)    
  Print '$GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA            ='   (+1,5)      
  Print $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA                    (0,+2)            
  

  Print 'As Of Date :'                                            (+2,5)
  Print $WHERE_SELECT_ASOFDATE                                    (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+3,2)
  Print '$Order_By                                            ='  (+1,5)
  Print 'JOB.DEPTID'                                              (0,+2)

  Let #PAGE-COUNT = 0
  NEW-PAGE

End-Procedure Print-Cover-Page


!***********************************************************************
Begin-Procedure Get-From-Pay-End
!***********************************************************************
#debug9 show 'Get-From-Pay-End'

Begin-select

PC.pay_end_dt	&From_Pay_End

From   PS_PAY_CALENDAR  PC
Where  To_Char(pc.check_dt,'YYYYMM') =
      (Select To_Char(Add_Months(check_dt,-1),'YYYYMM')
       From   ps_pay_calendar 
       !Use Date from panel
       Where  $WHERE_SELECT_ASOFDATE Between pay_begin_dt And pay_end_dt
       And    company  = pc.company
       And    paygroup = pc.paygroup
       And    pay_off_cycle_cal = 'N')	
And    pc.pay_period = 1
And    pc.company  = 'GEI'
And    pc.paygroup = 'RET'
And    pc.pay_off_cycle_cal = 'N'	!Ignore OFF CYCLES

end-select
end-procedure

!***********************************************************************
Begin-Procedure Get-Thru-Pay-End
!***********************************************************************
#debug9 show 'Get-Thru-Pay-End'

Begin-select

PC2.pay_end_dt  &Thru_Pay_End
To_Char( PC2.pay_end_dt,'fmMonth YYYY')  &period  
    
    Let $Reporting_Period = &period
    
     show '$Reporting_Period ' $Reporting_Period
     show '&period ' &period


From   ps_pay_calendar  pc2
Where  To_Char(pc2.check_dt,'YYYYMM') =
      (Select To_Char(Add_Months(check_dt,-1),'YYYYMM')
       From   ps_pay_calendar 
       !Use Date from panel
       Where  $WHERE_SELECT_ASOFDATE Between pay_begin_dt And pay_end_dt
       And    company  = pc2.company
       And    paygroup = pc2.paygroup
       And    pay_off_cycle_cal = 'N')	
And    pc2.pay_period =
      (Select Max(pay_period)
       From   ps_pay_calendar 
       Where  To_Char(check_dt,'YYYYMM') =
             (Select To_Char(Add_Months(check_dt,-1),'YYYYMM')
              From   ps_pay_calendar 
              !Use Date from panel
              Where  $WHERE_SELECT_ASOFDATE Between pay_begin_dt And pay_end_dt
              And    company  = pc2.company
              And    paygroup = pc2.paygroup
              And    pay_off_cycle_cal = 'N')
       And    company  = pc2.company
       And    paygroup = pc2.paygroup)
And    pc2.company  = 'GEI'
And    pc2.paygroup = 'RET'
And    pc2.pay_off_cycle_cal = 'N' 	!Ignore OFF CYCLES

end-select
end-procedure


!*********************************************************************
Begin-Procedure Process-Main
!*********************************************************************
let $sql-statement = 'GEXHR067.SQR,Main'
  
  show '$WHERE_SELECT_ASOFDATE : '$WHERE_SELECT_ASOFDATE
  show '$_WHERE_SELECT_ASOFDATE : '$_WHERE_SELECT_ASOFDATE
  show '$GEXXX900_INCLUDE_COMPANY_CRITERIA ' $GEXXX900_INCLUDE_COMPANY_CRITERIA
  show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
  show '$GEXXX902_INCLUDE_DEPTID_CRITERIA '  $GEXXX902_INCLUDE_DEPTID_CRITERIA
  show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA ' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA ' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
  show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA ' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA

begin-select
JOB.DEPTID
COUNT(*) &COUNT 

   let #count = &count 
   let $count = edit(#count,'9999')

   let #tot_count = #tot_count + #count

   let $tot_count = edit(#tot_count,'999999')
   Let $Gex_Deptid = Ltrim(Rtrim(&JOB.DEPTID, ' '), ' ')
   Do Get-Dept-Descr
   do get-wages
   print $Gex_Deptid	(+1,10)
   print $Dept_Descr	(0,25)
   print $count  	(0,70)
   print $wages         (0,80)
   
     	
FROM PS_JOB  JOB, 
     PS_GEX_DEPT_TBL  GEXDEPT
      

WHERE JOB.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_JOB  B_ED 
   		     WHERE JOB.EMPLID = B_ED.EMPLID 
	             AND JOB.EMPL_RCD = B_ED.EMPL_RCD 
	            AND B_ED.EFFDT <= $WHERE_SELECT_ASOFDATE)
AND JOB.EFFSEQ = (SELECT MAX(B_ES.EFFSEQ) FROM PS_JOB  B_ES 
	        WHERE JOB.EMPLID = B_ES.EMPLID 
        	AND JOB.EMPL_RCD = B_ES.EMPL_RCD 
	        AND JOB.EFFDT = B_ES.EFFDT) 

AND GEXDEPT.DEPTID = JOB.DEPTID 
AND GEXDEPT.EFFDT = (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL  E_ED 
	        WHERE GEXDEPT.SETID = E_ED.SETID 
        	AND GEXDEPT.DEPTID = E_ED.DEPTID 
	        AND E_ED.EFFDT <= $WHERE_SELECT_ASOFDATE) 
and GEXDEPT.SEQUENCE_NUMBER = (sELECT MAX(GEXDEPT1.SEQUENCE_NUMBER) FROM PS_GEX_DEPT_TBL  GEXDEPT1
				WHERE GEXDEPT.DEPTID = GEXDEPT1.DEPTID
				AND GEXDEPT.EFFDT = GEXDEPT1.EFFDT
				AND GEXDEPT.SETID = GEXDEPT1.SETID)


!AND JOB.acct_cd='700' 
AND   [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
AND   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
AND   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
AND   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
AND   [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
AND   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
GROUP BY JOB.DEPTID
ORDER BY JOB.DEPTID

end-select

print '-'              (+1,10,145) fill
   Print 'Total: '  	  (+2,55)
   print $tot_count  	  (0,70)


End-Procedure Process-Main

!********************************************************************************************
 Begin-Procedure Get-Dept-Descr
!******************************************************************************************** 

Begin-Select 
DEPT.DESCR
		
		Let $Dept_Descr = Ltrim(Rtrim(&DEPT.DESCR, ' '), ' ')

FROM PS_DEPT_TBL  DEPT
WHERE DEPT.DEPTID  = $Gex_Deptid
AND DEPT.EFFDT = (SELECT MAX(DEPT1.EFFDT) FROM PS_DEPT_TBL  DEPT1 
			WHERE DEPT1.DEPTID = DEPT.DEPTID
			AND DEPT1.SETID = DEPT.SETID
			AND DEPT1.EFFDT <= $WHERE_SELECT_ASOFDATE)
End-Select

End-Procedure Get-Dept-Descr
!********************************************************************************************

!******************************************************************
begin-procedure get-wages
!******************************************************************
    
Begin-Select

sum(d.oth_earns) &wages

  let #wages = &wages 
  let $wages = edit(#wages,'999,999.99')
  
  !SHOW 'vendtkk : $Gex_Deptid  &wages $wages ' $Gex_Deptid ' ' &wages '   ' $wages
  !show 'vendtkk : $GEXXX924_EXCLUDE_ERNCD_CRITERIA ' $GEXXX924_EXCLUDE_ERNCD_CRITERIA
  !show 'vendtkk : $GEXXX924_INCLUDE_ERNCD_CRITERIA '$GEXXX924_INCLUDE_ERNCD_CRITERIA
  !show 'vendtkk : &From_Pay_End '&From_Pay_End
  !show 'vendtkk : &Thru_Pay_End ' &Thru_Pay_End

FROM PS_PAY_EARNINGS  C, PS_PAY_OTH_EARNS  D
  WHERE  C.COMPANY = D.COMPANY
     AND C.PAYGROUP = D.PAYGROUP
     AND C.PAY_END_DT = D.PAY_END_DT
     AND C.OFF_CYCLE = D.OFF_CYCLE
     AND C.PAGE_NUM = D.PAGE_NUM
     AND C.LINE_NUM = D.LINE_NUM
     AND C.ADDL_NBR = D.ADDL_NBR
     AND C.PAY_END_DT Between &From_Pay_End And &Thru_Pay_End
     AND C.EARNS_END_DT BETWEEN &From_Pay_End And &Thru_Pay_End
     AND [$GEXXX924_EXCLUDE_ERNCD_CRITERIA]
     and [$GEXXX924_INCLUDE_ERNCD_CRITERIA]
     AND C.DEPTID = $Gex_Deptid
     !AND D.ERNCD NOT IN ('002','003','171','172','OTP')
     !AND C.PAY_END_DT BETWEEN '01-MAR-2008' and '22-MAR-2008'
     !AND C.EARNS_END_DT BETWEEN '01-MAR-2008' and '22-MAR-2008'
     !AND D.ERNCD NOT IN ('002','003','171','172','OTP')

end-select
end-procedure
!***********************************************************************

#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx921.sqc'  !Get hr single row run control
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getcodta.sqc'  !Get-Company-Data Procedure
#include 'gexxx924.sqc'  !Get erncd multiple row table (for reg earnings codes)
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'askaod.sqc'    !Ask As Of Date input




