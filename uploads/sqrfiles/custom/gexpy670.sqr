!***********************************************************************
! GEXPY670: This program creates an interface file for the United Way  *
!           New hire.                                         *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *
!***********************************************************************
! VENDAXG  AXG       08/09/2010       INITIAL CREATION(Clone of GEXPY642*
! GEXHR_848_E106783   2011-05-17      Vahini Katta                     *
! Added email_addr to dat and xls files and excluded security officers *
! GEXHR_848_E107873  08/29/2011       Kundan kumar Yeedibilli	       *
! Change the end date in order to take sunday's date.		       *
! GEXHR_848_E156436_01  09/10/2013       Vahini Katta                  *
! Send the ouput file in the email                                     *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'

Begin-setup

Declare-variable

Date $Asoftoday
Date $from_date
Date $Thru_Date

End-Declare
End-Setup

Begin-Report

Do Init-DateTime
Do Init-Number
Do stdapi-init
Move 'GEXPY670' to $ReportID
Move 'United Way New Hire  Interface' to $ReportTitle
display $ReportTitle

Do Get-Current-DateTime
Do Report
Do Commit-Transaction
date-time () hh:mi:ss &timeEnded
display 'Report Ended: ' noline
display &timeEnded
Do stdapi-term

End-Report

!************************************************************************

Begin-Procedure Report

Do Open-File

Do Print-Header-Hire
 
 date-time () hh:mi:ss &timeBegan
 display 'Report Began: ' noline
 display &timeBegan

 Move 'N' to $Errorfound
 Move '0' to $filler

 Do Get-From-Thru-Date
 Do Process-Employee-Data
 
  If $sev-error = 'Y'
    goto report-exit
 End-if
  
Report-Exit:

  Print 'Total Transactions=' (+2,1)
  Do Format-Number(#InputTran, $out, '99999')
  Print $out ()
  Print '     Total Errors in Transactions=' ()
  Do Format-Number(#ErrorCount, $out, '99999')
  Print $out ()
  !GEXHR_848_E156436_01 09/10/2013 Vahini Katta Begins
  close 1
 
  do Get-Email-Details  
   
  !let $mail-cmd = 'psmail -TO"'||'vahini.katta@gianteagle.com'||'" -SUBJECT"'||'United Way New Hires file'||'" -BODY"'||'Test'||'" -FILE"'||$FileName||'" -ALIAS"'||'gexpy670.xls'
  let $mail-cmd = 'psmail -TO"'||&emailid||'" -SUBJECT"'||&email_subject||'" -BODY"'||&email_textlong||'" -FILE"'||$FileName||'" -ALIAS"'||$ReportID||'.xls'
  CALL SYSTEM USING $mail-cmd #Status 
    show '#Status :' #Status
  !GEXHR_848_E156436_01 09/10/2013 Vahini Katta Ends 
  date-time () hh:mi:ss &timeProcess
  display #InputTran 99999 noline
  display ' Transactions Processed: ' noline
  display &timeProcess

End-Procedure
  !GEXHR_848_E156436_01 09/10/2013 Vahini Katta Begins
begin-procedure Get-Email-Details
begin-select
emailid,
email_subject,
email_textlong 
from ps_gex_email_setup
where gex_emailtype='UNWY'
end-select
end-procedure Get-Email-Details
 !GEXHR_848_E156436_01 09/10/2013 Vahini Katta Ends 

begin-heading 7
  Move 'United Way New Hire and Term Interface - ERROR REPORT' to $ReportTitle
  #Include 'stdhdg01.sqc'

  date-time () DD-MON-YYYY &curr_Date

   Print 'EMPLID' (+2,1)
   Print 'ERROR MESSAGE' (,15)
 
End-heading

!******************************************************************
!This procedure selects all the employees that satisfy the criteria
!and depending on the action taken upon thier job records, writes 
!the necessary records into the output file
!******************************************************************

Begin-Procedure Process-Employee-Data

Move 'N' to $found
Let #inputtran = 0
display $reportdate_dbf
Begin-Select ON-ERROR=SQL-Error-Found('Process-employee-data')
A.EMPLID 
A.NAME_PREFIX 
A.NAME 
A.ADDRESS1 &addr1
A.ADDRESS2 &addr2
A.ADDRESS3 &addr3
A.ADDRESS4 &addr4
A.CITY 
A.STATE 
A.POSTAL	
A.SEX
A.FIRST_NAME 
A.LAST_NAME 
A.NAME_SUFFIX 
TO_CHAR(A.BIRTHDATE,'MM/DD/YY') &birthdate
TO_CHAR(A.BIRTHDATE,'MM/DD/YYYY') &birthdate_MMDDDYYYY
C.EMPLID &ee
C.COMPANY
C.PAYGROUP
C.DEPTID
C.ACCT_CD
C.EMPL_RCD &rcd
C.JOBCODE 
TO_CHAR(C.TERMINATION_DT,'MM/DD/YY') &Terminationdate
D.LOCATION
D.DESCR	
GD.GEX_COMPANY_DIV_CD
GD.GEX_RGN_CD 
GD.GEX_RMGR_LST_NME 


  	Let $sev-error = 'N'
  	Move 'Y' to $Found
  	Move 'N' to $errorfound
  	Move 'N' to $trans_error
  	add 1 to #inputtran
	
	
  	Let $prefix = ' '
  	Let $First_Name_xls = ' '
  	Let $Last_Name_xls = ' '
  	Let $Name_Suffix_xls = ' '
  	Let $first_prefix = ' '
  	Let $end_prefix = ' '
  	Let #length_prefix = 0
  	Let $suffix = ' '
  	Let $first_suffix = ' '
  	Let $end_suffix = ' '
  	Let #length_suffix = 0
  	Let $middle_name = ' '
  	Let $first_name = ' '
  	Let $last_name = ' '
  	Let $gender = ' '
  	Let $address_type = 'H'
  	Let $street_address = ' '
  	Let $city = ' '
  	Let $state = ' '
  	Let $zip = ' '
  	Let $country = 'US'
  	Let $email_type = ' '
  	Let $email_addr = ' '
  	Let $ref_id = ' '
  	Let $phone_type = ' '
  	Let $area_cd = ' ' 
  	Let $phone_nbr = ' '
  	Let $phone_ext = ' '
  	Let $emplid = ' '
  	Let $ssn = ' '
  	Let $pays = '52'
  	Let $grp_cd1 = ' '      !Company
  	Let $grp_cd2 = ' '      !Deptid
  	Let $grp_cd3 = ' '      !Acct_cd 
  	Let $grp_cd4 = ' '      !Paygroup
  	Let $grp_cd5 = 'UNWAY'  ! DEDCD
  	Let $grp_cd6 = ' '
  	Let $grp_cd7 = ' '
  	Let $grp_cd8 = ' '
  	Let $grp_cd9 = ' '
  	Let $grp_cd10 = ' '     !Location
  	Let $grp_cd11 = ' '
  	Let $grp_cd12 = ' '
  	Let $grp_cd13 = ' '
  	Let $gift_pay = '0.00'
  	Let $total_gift = '0.00'
  	Let $py_total_gift = '0.00'
  	Let $pct_pay = '0.00'
  	Let $annual_sal = '0.00'
  	Let $grp_cd1_desc = 'Company'
  	Let $grp_cd2_desc = 'Department id (Store)'
  	Let $grp_cd3_desc = 'Acct code (POS Dept)'
  	Let $grp_cd4_desc = 'Paygroup'
  	Let $grp_cd5_desc = 'Deduction code'
  	Let $grp_cd6_desc = ' '
  	Let $grp_cd7_desc = ' '
  	Let $grp_cd8_desc = ' '
  	Let $grp_cd9_desc = ' '
  	Let $grp_cd10_desc = 'Location'
  	Let $grp_cd11_desc = ' '
  	Let $grp_cd12_desc = ' '
  	Let $grp_cd13_desc = ' '  
  	Let $pin_code = ' '
  	Let $pin_lname = ' '
  	Let $bday = ' '
  	Let $Termination_Dt = ' '
  	Let $First_Name_xls =  ' '
  	Let $Last_Name_xls =  ' '
  	Let $Name_Suffix_xls = ' '
	
  	Let $Department_Description = &D.DESCR
  	Let $Gex_Region_Cd =  &GD.GEX_RGN_CD
  	Let $Gex_Rmgr_lst_Name = &GD.GEX_RMGR_LST_NME
  	Let $First_Name_xls = Ltrim(Rtrim(&A.FIRST_NAME,' '),' ')
  	Let $Last_Name_xls = Ltrim(Rtrim(&A.LAST_NAME,' '),' ')
  	Let $Name_Suffix_xls = Ltrim(Rtrim(&A.NAME_SUFFIX,' '),' ')
  	Let $Termination_Dt = &Terminationdate
       Show   $First_Name_xls  '  ' $Last_Name_xls 
	
  	unstring &A.NAME by ',' into $last_name $first_name
	
  	Move &A.NAME_PREFIX    to    $prefix
  	Let #length_prefix = (length(rtrim($prefix,' '))-1)
  	Let $first_prefix = substr($prefix,1,1)
  	Uppercase $first_prefix
  	Let $end_prefix = substr($prefix,2,#length_prefix)
  	Lowercase $end_prefix
  	Let $prefix = $first_prefix||$end_prefix
  	
  	If rtrim($first_name,' ') = ''
  	   Move 'Y' to $trans_error
  	   Print &A.EMPLID (+1,1)
  	   Print 'First Name not found on Personal Data.  Field is required.  Employee skipped' (,15)
  	End-if

  	If rtrim($last_name,' ') = ''
  	   Move 'Y' to $trans_error
  	   Print &A.EMPLID (+1,1)
  	   Print 'Last Name not found on Personal Data.  Field is required.  Employee skipped' (,15)
  	End-if
	
  	Let $first_name = rtrim($first_name,' ')
  	Let $last_name = rtrim($last_name,' ')
	
	
  	Let $suffix_exists = 'N'
  	Do Check-Last-Name
  	If $suffix_exists = 'N'
  	   Do Check-First-Name
  	End-if
  	
  	If $suffix_exists = 'N'
  	   Let $suffix = ' '
  	End-if
	
  	Let #length_suffix = (length(rtrim($suffix,' '))-1)
  	Let $first_suffix = substr($suffix,1,1)
  	If $first_suffix = 'J' or $first_suffix = 'S' or
  	   $first_suffix = 'j' or $first_suffix = 's'
  	   Uppercase $first_suffix
  	   Let $end_suffix = substr($suffix,2,#length_suffix)
  	   Lowercase $end_suffix
  	   Let $suffix = $first_suffix||$end_suffix
	
  	else
  	   Uppercase $suffix
  	End-if

  	Let $middle_exists = 'N'
  	Do Check-Middle-Name
  	If $middle_exists = 'N'
  	   Let $middle_name = ' '
  	End-if
     !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
  	 !Let $ssn_no = &A.EMPLID     
     do Get-Emp-Ssn (&A.EMPLID, $ssn_no)
     !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
  	 Show  ' Checking SSN ' $ssn_no 
 	
  	If rtrim(&A.SEX,' ') = ''
  	   Move 'Y' to $trans_error
  	   Print &A.EMPLID (+1,1)
  	   Print 'Gender not fsound on Personal Data.  Field is required.  Employee skipped' (,15)
  	else
  	   Move &A.SEX         to    $gender
  	End-if


	
  	If rtrim(&addr1,' ') = ''
  	   Move 'Y' to $trans_error
  	   Print &A.EMPLID (+1,1)
  	   Print 'Address 1 not found on Personal Data.  Field is required.  Employee skipped' (,15)
  	else
  	   Let $address1 = rtrim(&addr1,' ')
  	End-If    
   
  	If rtrim(&A.CITY,' ') = ''
  	   Move 'Y' to $trans_error
  	   Print &A.EMPLID (+1,1)
  	   Print 'City not found on Personal Data.  Field is required.  Employee skipped' (,15)
  	else
  	   Let $city = rtrim(&A.CITY,' ')
  	End-If    

  	If rtrim(&A.STATE,' ') = ''
  	   Move 'Y' to $trans_error
  	   Print &A.EMPLID (+1,1)
  	   Print 'State not found on Personal Data.  Field is required.  Employee skipped' (,15)
  	else
  	   Move &A.STATE           to    $state
  	End-If    

  	If rtrim(&A.POSTAL,' ') = ''
  	   Move 'Y' to $trans_error
  	   Print &A.EMPLID (+1,1)
  	   Print 'Postal not found on Personal Data.  Field is required.  Employee skipped' (,15)
  	else
  	   Move &A.POSTAL           to   $zip
  	End-If    
	
	! Country code defaulted

  	If rtrim(&ee,' ') = ''
  	   Move 'Y' to $trans_error
  	   Print &ee (+1,1)
  	   Print 'EMPLID not found on Job.  Field is required.  Employee skipped' (,15)
  	else
  	   Move &ee to $ee
  	   Move &rcd to $rcd
  	   Let $emplid = $ee || $rcd
  	End-If    

 	
    !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
    !move &ee to $ssn 
     move $ssn_no to $ssn
    !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
	
  	Let $Mail-Drop = ' '
  	Do Get-Mail-Drop


	! Number of Pays defaulted


	  Move &C.COMPANY    to  $grp_cd1
	  Move &C.ACCT_CD    to  $grp_cd3
	  Move &C.PAYGROUP   to  $grp_cd4
	
	! Deduction code defaulted
	
	  Move &D.LOCATION    to  $grp_cd10
	
	
	
	! Convert I departments back to the original deptid
	  If substr(&C.DEPTID,4,1) = 'I'
	     Do convert-deptid(&C.DEPTID,$new_deptid)
	  else
	     Let $new_deptid = &C.DEPTID
	  End-if
	
	  Move $new_deptid     to  $grp_cd2
	
	! Generate street address field  
	
	  Let $street_address = $address1
	  Move &addr2 to $addr2
	  Move &addr3 to $addr3
	  Move &addr4 to $addr4
	
	  If rtrim(&addr2,' ') <> ''
	     Let $street_address = $street_address || '//' || rtrim($addr2,' ')
	  End-if
	
	  If rtrim(&addr3,' ') <> ''
	     Let $street_address = $street_address || '//' || rtrim($addr3,' ')
	  End-if
	
	  If rtrim(&addr4,' ') <> ''
	     Let $street_address = $street_address || '//' || rtrim($addr4,' ')
	  End-if
	
	
	  Let $birthdate = &birthdate
	  Let $bday = substr($birthdate,1,2)|| substr($birthdate,4,2)|| substr($birthdate,7,2)
	  Let $birthdate_MMDDYYYY = &birthdate_MMDDDYYYY
	  Let $bday = substr($birthdate_MMDDYYYY,1,2)|| substr($birthdate_MMDDYYYY,4,2)|| substr($birthdate_MMDDYYYY,7,4)
	
	  Let $lname = rtrim($last_name,' ')
	  Let #lname_length = length($lname)
	  Evaluate #lname_length
	     when = 0
	        Let $lname = '0000'
	        Let #lname_length = 4
	        break
	     when = 1
	        Let $lname = substr($lname,1,1)||'000'
	        Let #lname_length = 4
	        break
	     when = 2
	        Let $lname = substr($lname,1,2)||'00'
	        Let #lname_length = 4
	        break
	     when = 3
	        Let $lname = substr($lname,1,3)||'0'
	        Let #lname_length = 4
	     when >= 4
	        break
	  End-Evaluate
	
	  If #lname_length = 0
	     Let $pin_code = $lname||$bday
	  else
	     Do Create-Pin-Code
	     Let $pin_code = $pin_lname||$bday
	  End-if
	
	  Do Get-Job-Title 
	  Do Get-Work-Location 
	
	  Let $found = 'N'
	  
	    Do Add-Employee-Info   
	    Do Get-Emplid-Mapp
	    !GEXHR_848_E106783 2011-08-09 Vahini Katta Begins
      Do Get-Email-Addr
      !GEXHR_848_E106783 2011-08-09 Vahini Katta Ends
	  
	  If $found = 'N'
	     Move 'Y' to $trans_error
	     Print &ee (+1,1)
	     Print 'EMPLID not found on EMPLID MAPP Table.  Field is required.  Employee skipped' (,15)
	  else
	     Let $emplid = &GEM.EMPLID  	
	     Move &GEM.EMPLID to $ssn 		
	     Let $pin_code = &GEM.EMPLID	
	     
	  End-If 
	
	  Show  ' GE EMPLID : '$pin_code
  
	  If $trans_error = 'N'
	  
	  	Do Print-Record-Hire 
	     
	  End-if
  
FROM PS_PERSONAL_DATA A,
      PS_JOB C,
      PS_DEPT_TBL D,
      PS_GEX_DEPT_TBL GD
WHERE A.EMPLID    = C.EMPLID
AND C.DEPTID = D.DEPTID
AND C.EMPL_STATUS in ('A','L','P','S')
AND D.SETID = 'COMMN'
AND D.EFF_STATUS = 'A'
AND C.EFFDT =
       (SELECT MAX(EFFDT)
  	FROM   PS_JOB
	WHERE EMPLID    = C.EMPLID
	  AND EMPL_RCD = C.EMPL_RCD
	  AND EFFDT <= SYSDATE)
    AND C.EFFSEQ =
       (SELECT MAX(EFFSEQ)
	FROM   PS_JOB 
	WHERE EMPLID    = C.EMPLID
	  AND EMPL_RCD = C.EMPL_RCD
	  AND EFFDT    = C.EFFDT)
AND D.EFFDT = (select max(dd.effdt) from ps_dept_tbl dd
                  where dd.deptid = d.deptid
                    and dd.eff_status = 'A'
                    and dd.effdt <= SYSDATE)
AND GD.SETID = D.SETID
AND GD.DEPTID = D.DEPTID
AND GD.EFFDT = (select max(gdd.effdt) from ps_gex_dept_tbl gdd
                  where gdd.deptid = gd.deptid
                    and gdd.effdt <= SYSDATE)
!GEXHR_848_E106783 2011-08-09 Vahini Katta Begins
AND ((C.LAST_HIRE_DT BETWEEN $From_Date and $Thru_Date) or 
((C.ACTION_DT BETWEEN $From_Date and $Thru_Date) and (C.LAST_HIRE_DT < $From_Date) and (C.ACTION IN ('HIR','REH'))))
AND C.JOBCODE<>'90000'
!GEXHR_848_E106783 2011-08-09 Vahini Katta Ends
End-Select

If $found = 'N'
   add #1 to #errorcount
   Do error-found
   Print 'No employees found for interface file' (,132)
End-if

End-Procedure Process-Employee-Data

 
!********************************************************************
!This procedure adds new fields to the Interface file 
!******************************************************************** 

Begin-Procedure Add-Employee-Info
Let $Dir_svp_Svpvp_emplid = ''
Let $EVP = ''
Let $Dir_svp_Svpvp_emplid = ''
Let $SVP = ''
Let $Dir_svp_Svpvp_emplid = ''
Let $DIR = ''
Let $JOBCODE = ''
Let $GRADE = ''
Let $REGION = ''
Let $BUSINESS_AREA = ''
  
Begin-Select 
JB.EMPLID,
ETBL.DEPTID,
EVP.GEX_DIR,
EVP.GEX_EVP,
EVP.GEX_SVPVP, 
JB.JOBCODE,
JB.GRADE,
ETBL.GEX_OPR_DIV ,
ETBL.GEX_BUS_AREA

  
  Let $EMPL_ID = &JB.EMPLID
  Let $DEPT_ID = substr(&ETBL.DEPTID,1,1)
  
  Let $Dir_svp_Svpvp_emplid = &EVP.GEX_EVP
  Do Get-Name
  Let $EVP = $Dir_svp_Svpvp_Name
  Let $Dir_svp_Svpvp_emplid = &EVP.GEX_SVPVP
  Do Get-Name
  Let $SVP = $Dir_svp_Svpvp_Name
  Let $Dir_svp_Svpvp_emplid = &EVP.GEX_DIR
  Do Get-Name
  Let $DIR = $Dir_svp_Svpvp_Name
  Let $JOBCODE = &JB.JOBCODE
  Let $GRADE = &JB.GRADE
  Let $REGION = &ETBL.GEX_OPR_DIV
  Let $BUSINESS_AREA = &ETBL.GEX_BUS_AREA
 !Do Print-Form
 
  #debug7 Show  ' Employee no: ' $EMPL_ID
  #debug7 Show  ' Designation: ' $EVP
  #debug7 Show  ' SVP= ' $SVP
  #debug7 Show  ' DIR= ' $DIR
  #debug7 Show  ' JOBCODE= ' $JOBCODE
  #debug7 Show  ' GRADE= ' $GRADE
  #debug7 Show  '$DEPT_ID : '$DEPT_ID

From ps_job JB,
     ps_gex_evp_tbl ETBL,
     ps_gex_mgmt_report EVP 
WHERE  JB.EMPLID = &A.EMPLID !$ssn_no !GEX_SEC_REENG 2015-04-29 Vahini Katta
AND JB.EMPL_RCD = &rcd
AND JB.DEPTID = EVP.DEPTID 
AND  JB.EFFDT=
        (select max (EFFDT)  
         from PS_JOB JB1
         where JB1.EMPLID = JB.EMPLID
            and  JB1.EMPL_RCD = JB.EMPL_RCD
            and  JB1.EFFDT<=SYSDATE)
AND JB.EFFSEQ=
         (select max(EFFSEQ)
         from PS_JOB JB2
         where JB2.EMPLID=JB.EMPLID
            and JB2.EMPL_RCD=JB.EMPL_RCD
            and JB2.EFFDT=JB.EFFDT)
AND JB.DEPTID = ETBL.DEPTID
AND JB.ACCT_CD = ETBL.ACCT_CD
AND JB.PAYGROUP = ETBL.PAYGROUP
AND JB.COMPANY = ETBL.COMPANY
End-Select

End-Procedure Add-Employee-Info


!******************************************************************
! Get GE Employee Id from Employee ID table based on SSN
!***********************************************************************
Begin-Procedure Get-Emplid-Mapp
 Let $found = 'N'
Begin-Select
GEM.SSN, 
GEM.EMPLID, 
GEM.EMPL_RCD

   Let $found = 'Y'

FROM PS_GEX_EMPLID_MAPP GEM
!GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
!WHERE GEM.SSN = &A.EMPLID
WHERE GEM.EMPLID = &A.EMPLID
!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
End-Select

End-Procedure

!GEXHR_848_E106783 2011-08-09 Vahini Katta Begins
!******************************************************************
! Get Email Address
!******************************************************************
Begin-procedure Get-Email-Addr
begin-select 
EM.EMAIL_ADDR 

FROM PS_EMAIL_ADDRESSES EM
WHERE EM.PREF_EMAIL_FLAG='Y' 
AND EM.EMPLID=&A.EMPLID
end-select
End-procedure Get-Email-Addr
!GEXHR_848_E106783 2011-08-09 Vahini Katta Ends

!********************************************************************
!This procedure pulls the Mail Drop
!********************************************************************
Begin-Procedure Get-Mail-Drop
 Let $found = 'N'
Begin-Select
GMD.MAIL_DROP

  Let $Mail-Drop = &GMD.MAIL_DROP
  Let $found = 'Y'

FROM	PS_PAYROLL_DATA GMD
WHERE	GMD.EMPLID = &A.EMPLID
  AND	GMD.COMPANY = &C.COMPANY

End-Select

End-Procedure


!***********************************************************************
! Convert DEPT ids that end in 'I' to the original deptid
!***********************************************************************
Begin-Procedure convert-deptid($deptid_in, :$deptid_out)
 Let $found = 'N'
Begin-Select
GDT.DEPARTMENT
 
   Let $deptid_out = &GDT.DEPARTMENT
   Let $found = 'Y'

From PS_GEX_DEPT_TBL GDT
where GDT.deptid = $deptid_in
End-Select

If $found = 'N'
  display 'Department ID unable to be converted: ' noline
  display $deptid_in
  Do error-found
End-if
 
End-Procedure


!********************************************************************
Begin-Procedure Create-Pin-Code
!********************************************************************
  LOWERCASE $lname

  Let #pin_length = 1
  Let $temp_pin = ''

  While #pin_length <= #lname_length
    Let $char_check = substr($lname,#pin_length,1)
    If $char_check = '.' or $char_check = ',' or
       $char_check = '-' or $char_check = '_' or
       $char_check = ' ' or $char_check = ''''
       !Skip character
    else
       Let $temp_pin = $temp_pin||substr($lname,#pin_length,1)
    End-if
    Add +1 to #pin_length
  End-While

  Let $pin_lname = substr($temp_pin,1,4)

End-Procedure Create-Pin-Code

!********************************************************************
!This procedure checks the last name field for a suffix
!********************************************************************
Begin-Procedure Check-Last-Name
  Let $suffix = ' '
  Let #ln_length = 1
  Let #ln2_length = 0
  Let #ln_max_length = length(rtrim($last_name,' '))

  While #ln_length <= #ln_max_length
    Let $char_check = substr($last_name,#ln_length,3)
    If $char_check = 'jr.' or $char_check = 'Jr.' or $char_check = 'JR.' or
       $char_check = 'sr.' or $char_check = 'Sr.' or $char_check = 'SR.' or
       $char_check = 'iii' or $char_check = 'Iii' or $char_check = 'IIi' or
       $char_check = 'III' or $char_check = 'iII' or $char_check = 'iiI'
       Let #ln2_length = #ln_length - 1
       Let $last_name = substr($last_name,1,#ln2_length)
       Let $last_name = rtrim($last_name,' ')
       Let $suffix = $char_check
       Let #ln_length = #ln_max_length+1
       Let $suffix_exists = 'Y'
    else
       Add +1 to #ln_length
    End-if
    If (#ln_length + 2) > #ln_max_length
       Let #ln_length = #ln_max_length +1
    End-If    
  End-While

  If $suffix_exists = 'N'
     Let #ln_length = 1
     Let #ln2_length = 0
     Let #ln_max_length = length($last_name)

     While #ln_length <= #ln_max_length
      Let $char_check = substr($last_name,#ln_length,2)
       If $char_check = 'jr' or $char_check = 'Jr' or $char_check = 'JR' or
          $char_check = 'sr' or $char_check = 'Sr' or $char_check = 'SR' or
          $char_check = 'ii' or $char_check = 'Ii' or $char_check = 'iI' or $char_check = 'II' or
          $char_check = 'IV' or $char_check = 'iV' or
!          $char_check = ' v' or $char_check = ' V' or
          $char_check = 'VI'
          Let #ln2_length = #ln_length - 1
          Let $last_name = substr($last_name,1,#ln2_length)
          Let $last_name = rtrim($last_name,' ')
          Let $suffix = $char_check
          Let #ln_length = #ln_max_length+1
          Let $suffix_exists = 'Y'
       else
          Add +1 to #ln_length
       End-if
       If (#ln_length + 1) > #ln_max_length
          Let #ln_length = #ln_max_length +1
       End-If    
     End-While
  End-if

  If $suffix_exists = 'N'
     Let #ln_length = 1
     Let #ln2_length = 0
     Let #ln_max_length = (length($last_name) - 1)

     Let $char_check = substr($last_name,#ln_max_length,2)
     If $char_check = ' v' or $char_check = ' V'
          Let #ln2_length = #ln_max_length - 1
          Let $last_name = substr($last_name,1,#ln2_length)
          Let $last_name = rtrim($last_name,' ')
          Let $suffix = rtrim($char_check,' ')
          Let $suffix_exists = 'Y'
     End-if
  End-if

End-Procedure Check-Last-Name

!********************************************************************
!This procedure checks the first name field for a suffix
!********************************************************************
Begin-Procedure Check-First-Name
  Let $suffix = ' '
  Let #fn_length = 1
  Let #fn2_length = 0
  Let #fn_max_length = length($first_name)

  While #fn_length <= #fn_max_length
    Let $char_check = substr($first_name,#fn_length,3)
    If $char_check = 'jr.' or $char_check = 'Jr.' or $char_check = 'JR.' or
       $char_check = 'sr.' or $char_check = 'Sr.' or $char_check = 'SR.' or
       $char_check = 'iii' or $char_check = 'Iii' or $char_check = 'IIi' or
       $char_check = 'III' or $char_check = 'iII' or $char_check = 'iiI'
       Let #fn2_length = #fn_length - 1
       Let $first_name = substr($first_name,1,#fn2_length)
       Let $first_name = rtrim($first_name,' ')
       Let $suffix = $char_check
       Let #fn_length = #fn_max_length+1
       Let $suffix_exists = 'Y'
    else
       Add +1 to #fn_length
    End-if
    If (#ln_length + 2) > #ln_max_length
       Let #ln_length = #ln_max_length
    End-If    
  End-While

  If $suffix_exists = 'N'
     Let #fn_length = 1
     Let #fn2_length = 0
     Let #fn_max_length = length($first_name)

     While #fn_length <= #fn_max_length
      Let $char_check = substr($first_name,#fn_length,2)
       If $char_check = 'jr' or $char_check = 'Jr' or $char_check = 'JR' or
          $char_check = 'sr' or $char_check = 'Sr' or $char_check = 'SR' or
          $char_check = 'ii' or $char_check = 'Ii' or $char_check = 'iI' or $char_check = 'II' or
          $char_check = 'IV' or $char_check = 'iV' or
          $char_check = 'VI'
          Let #fn2_length = #fn_length - 1
          Let $first_name = substr($first_name,1,#fn2_length)
          Let $first_name = rtrim($first_name,' ')
          Let $suffix = $char_check
          Let #fn_length = #fn_max_length+1
          Let $suffix_exists = 'Y'
       else
          Add +1 to #fn_length
       End-if
       If (#ln_length + 1) > #ln_max_length
          Let #ln_length = #ln_max_length
       End-If    
     End-While
  End-if

End-Procedure Check-First-Name

!********************************************************************
!This procedure pulls the middle initial/name from first name
!********************************************************************
Begin-Procedure Check-Middle-Name
  Let $middle_name = ' '
  Let $first_name = rtrim($first_name,' ')
  Let #fn_length = 1
  Let #fn2_length = 0
  Let #fn3_length = 0
  Let #fn4_length = 0
  Let #fn_max_length = length($first_name)


     While #fn_length <= #fn_max_length
      Let $char_check = substr($first_name,#fn_length,1)
       If $char_check = ' '
          Let #fn2_length = #fn_length - 1
          Let #fn3_length = #fn_length + 1
          Let #fn4_length = #fn_max_length - #fn_length
          Let $middle_name = rtrim(substr($first_name,#fn3_length,#fn4_length),' ')
          Let $first_name = rtrim(substr($first_name,1,#fn2_length),' ')
          Let #fn_length = #fn_max_length + 1
          Let $middle_exists = 'Y'
       else
          Add +1 to #fn_length
       End-if
     End-While  

End-Procedure Check-Middle-Name


!********************************************************************
!This procedure displays in the error report If there are any sql erros
!happened in the program
!********************************************************************

Begin-Procedure SQL-Error-Found($Proc_Name) 
  Do error-found
  Print 'SQL Error in ' (,21)
  Print $Proc_Name (,35)  
  Print $_sql-error (+1,1) 
  Print 'sql-status:' (+1,1)
  Print #_sql-status () edit 99999 

End-Procedure

!*********************************************************************
!This procedure displays the error message for the records that are in
!progress
!*********************************************************************

Begin-Procedure Error-Found
  Move 'Y' to $ErrorFound
  Do Format-Number(#InputTran, $out, '99999')
  Print $out (+1,1)
  Print &C.DEPTID (,11)
  Move &A.EMPLID to $emplid

  Let $EmplId_1st3 = substr($EmplId,1,3)
  Let $EmplId_mid2 = substr($EmplId,4,2)
  Let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  Print $EmplID11 (,24)
  Print &C.ACCT_CD (,66)
 
End-Procedure

!*********************************************************************
Begin-Procedure Print-Header-Hire
!*********************************************************************
encode '<009>' into $tab
Let $delim = $tab
string 'CAMPAIGN YEAR' ' PREFIX' ' FIRST NAME' ' MIDDLE NAME' ' LAST NAME' ' SUFFIX' ' EMPLID' ' SEX' ' JOBTITLE1' ' ADDRESSTYPE' ' ADDRESSLINE1' ' ADDRESSLINE2' ' CITY' ' STATEORPROV' ' ZIPPOSTALCODE' ' WORKLOCATION' ' WORKADDRESSLINE1' ' WORKADDRESSLINE2'  by $delim into $actives
!GEXHR_848_E106783 2011-08-09 Vahini Katta Begins
!string $actives   ' WORKCITY' ' WORKSTATE' ' WORKZIP' ' DEPARTMENT' ' MAIL DROP' ' PAY PERIODS' ' EVP' ' RVP' ' RBM' ' GRADE' ' DEPT ID' ' USER DEFINED 1' ' USER DEFINED 2' ' USER DEFINED 3' ' USER DEFINED 4' ' USER DEFINED 5' ' WORKLOCATIONCODE' ' WEB USER LOGIN' ' WEB PSWD' by $delim into $actives
string $actives   ' WORKCITY' ' WORKSTATE' ' WORKZIP' ' DEPARTMENT' ' MAIL DROP' ' PAY PERIODS' ' EVP' ' RVP' ' RBM' ' GRADE' ' DEPT ID' ' USER DEFINED 1' ' USER DEFINED 2' ' USER DEFINED 3' ' USER DEFINED 4' ' USER DEFINED 5' ' WORKLOCATIONCODE' ' WEB USER LOGIN' ' WEB PSWD' ' EMAIL ADDRESS' by $delim into $actives
!GEXHR_848_E106783 2011-08-09 Vahini Katta Ends
write 1 from $actives
!*********************************************************************
End-Procedure Print-Header-Hire
!*********************************************************************


!*********************************************************************
Begin-Procedure Get-Job-Title
!*********************************************************************

Begin-Select
JBCD.DESCR

	Let $Jobcode_Descr = &JBCD.DESCR
	
FROM PS_JOBCODE_TBL JBCD 
WHERE JBCD.SETID ='COMMN'
AND JBCD.JOBCODE = &C.JOBCODE
AND JBCD.EFFDT = (SELECT MAX(JBCD1.EFFDT) FROM PS_JOBCODE_TBL JBCD1 WHERE JBCD.SETID = JBCD1.SETID AND JBCD.JOBCODE = JBCD1.JOBCODE AND JBCD1.EFFDT<=SYSDATE)
End-Select 
!*********************************************************************
End-Procedure Get-Job-Title
!*********************************************************************

!*********************************************************************
Begin-Procedure Get-Work-Location
!*********************************************************************
Begin-Select
LCD.DESCR
LCD.ADDRESS1
LCD.ADDRESS2
LCD.CITY
LCD.STATE
LCD.POSTAL

	Let $Location_Descr = &LCD.DESCR
	Let $Work_Address1 = &LCD.ADDRESS1
	Let $Work_Address2 = &LCD.ADDRESS2
	Let $Work_City = &LCD.CITY
	Let $Work_State = &LCD.STATE
	Let $Work_Postal = &LCD.POSTAL
	
	
FROM PS_LOCATION_TBL LCD 
WHERE LCD.SETID ='COMMN'
AND LCD.LOCATION = $grp_cd10
AND LCD.EFFDT = (SELECT MAX(LCD1.EFFDT) FROM PS_LOCATION_TBL LCD1 WHERE LCD.SETID = LCD1.SETID AND LCD.LOCATION = LCD1.LOCATION AND LCD1.EFFDT<=SYSDATE)
End-Select 
!*********************************************************************
End-Procedure Get-Work-Location
!*********************************************************************

!*********************************************************************
Begin-Procedure Print-Record-Hire
!*********************************************************************

Let $Campaign_Year 	     =  '="' ||'2011' || '"'
Let $prefix_write 		     = '="' || $prefix || '"'
Let $first_name_write              = '="' || $First_Name_xls  || '"'
Let $middle_name_write             = '="' || $middle_name || '"'
Let $last_name_write               = '="' || $Last_Name_xls || '"'
Let $suffix_write                  = '="' || $Name_Suffix_Xls || '"'
Let $emplid_write                  = '="' || $emplid || '"'
Let $gender_write                  = '="' || $gender || '"'
Let $Jobcode_Descr_write           = '="' || $Jobcode_Descr || '"'
Let $address_type_write           = '="' || 'HOME' || '"'
Let $address1_write                = '="' || $address1  || '"'
Let $addr2_write                   = '="' || $addr2 || '"'
Let $city_write                    = '="' || $city|| '"'
Let $state_write                   = '="' || $state || '"'
Let $zip_write                     = '="' || $zip || '"'
Let $Location_Descr_write          = '="' || $Location_Descr || '"'
Let $Work_Address1_write           = '="' || $Work_Address1 || '"'
Let $Work_Address2_write           = '="' || $Work_Address2 || '"'
Let $Work_City_write               = '="' || $Work_City  || '"'
Let $Work_State_write              = '="' || $Work_State || '"'
Let $Work_Postal_write             = '="' || $Work_Postal || '"'
Let $Department_Description_write = '="' || $Department_Description || '"'
Let $Mail-Drop_write               = '="' || $Mail-Drop || '"'
Let $pays_write                    = '="' || $pays  || '"'
Let $EVP_write                     = '="' || $EVP   || '"'
Let $SVP_write                     = '="' || $SVP   || '"'
Let $DIR_write                     = '="' || $DIR || '"'
Let $GRADE_write                   = '="' || $GRADE || '"'
Let $grp_cd2_write                 = '="' || $grp_cd2 || '"'
Let $Gex_Region_Cd_write           = '="' || $Gex_Region_Cd || '"'
Let $Gex_Rmgr_lst_Name_write       = '="' || $Gex_Rmgr_lst_Name || '"'
Let $grp_cd2_write                = '="' || $grp_cd2 || '"'
Let $REGION_write                  = '="' || $REGION   || '"'
Let $BUSINESS_AREA_write           = '="' || $BUSINESS_AREA || '"'
Let $Jobcode_Write_write           = '="' ||  &D.LOCATION || '"'
Let $UserLogin_write 		     = '="' || 'GE'|| $emplid || '"'
Let $Password_write                = '="' || $bday || substr($ssn_no,6,4) || '"'
!GEXHR_848_E106783 2011-08-09 Vahini Katta Begins
Let $Email_Address                 = '="' ||  &EM.EMAIL_ADDR || '"'
!GEXHR_848_E106783 2011-08-09 Vahini Katta Ends

String $Campaign_Year $prefix_write $first_name_write $middle_name_write $last_name_write $suffix_write by $delim into $actives
String $actives  $emplid_write $gender_write $Jobcode_Descr_write $address_type_write $address1_write $addr2_write $city_write by $delim into $actives
String $actives  $state_write $zip_write $Location_Descr_write $Work_Address1_write $Work_Address2_write $Work_City_write $Work_State_write by $delim into $actives
String $actives  $Work_Postal_write $Department_Description_write $Mail-Drop_write $pays_write $EVP_write $SVP_write $DIR_write $GRADE_write by $delim into $actives
String $actives  $grp_cd2_write $Gex_Region_Cd_write $Gex_Rmgr_lst_Name_write $grp_cd2_write $REGION_write $BUSINESS_AREA_write $Jobcode_Write_write by $delim into $actives
!GEXHR_848_E106783 2011-08-09 Vahini Katta Begins
!string $actives  $UserLogin_write $Password_write by $delim into $actives
string $actives  $UserLogin_write $Password_write $Email_Address by $delim into $actives
!GEXHR_848_E106783 2011-08-09 Vahini Katta Ends
Write 1 from $actives 

!*********************************************************************
End-Procedure Print-Record-Hire
!*********************************************************************

!*********************************************************************
Begin-Procedure Get-Name
!*********************************************************************
Let $Dir_svp_Svpvp_Name  = ''

Begin-Select
NM.NAME
	
	Let $Dir_svp_Svpvp_Name = Ltrim(Rtrim(&NM.NAME,' '),' ')

FROM PS_PERSONAL_DATA NM
WHERE NM.EMPLID = $Dir_svp_Svpvp_emplid
End-Select
!*********************************************************************
End-Procedure Get-Name
!*********************************************************************


!*********************************************************************
Begin-Procedure Open-File
!*********************************************************************

Let $FileName = '{OUTFILE}'||'gexpy670.xls'
 
open $FileName as 1 for-writing record=1000 status=#filestat
 

 If #filestat < 0
	display 'File Open error occured;  Cannot proceed'
	!goto Report-Exit
 End-If        

!*********************************************************************
End-Procedure Open-File
!*********************************************************************



!*********************************************************************
Begin-Procedure Get-From-Thru-Date
!*********************************************************************
Begin-Select
GEX_DATE.FROMDATE
GEX_DATE.THRUDATE
	
	Let $From_Date = &GEX_DATE.FROMDATE
	Let $Thru_Date = &GEX_DATE.THRUDATE
	#debug7 Show  'From Date : '$From_Date ' Thru Date : '$Thru_Date 
From  PS_GEX_RC_HR GEX_DATE
Where GEX_DATE.OPRID                 = $Prcs_OprID
And   GEX_DATE.RUN_CNTL_ID           = $Prcs_Run_Cntl_ID
End-Select

Show '$From_Date :'$From_Date '  $asofdate :' $asofdate
If $From_Date = ''
	Let $From_Date = dateadd($asoftoday,'day', -7)
	Show '$From_Date :'$From_Date
End-if

Show '$Thru_Date :'$Thru_Date
If $Thru_Date = ''
	!Let $Thru_Date = $asoftoday   !GEXHR_848_E107873 08/29/2011 kundan kumar yeedibilli
	Let $Thru_Date = dateadd($asoftoday,'day', -1)  !GEXHR_848_E107873 08/29/2011 kundan kumar yeedibilli
	Show '$Thru_Date :'$Thru_Date
End-if
!*********************************************************************
End-Procedure Get-From-Thru-Date
!*********************************************************************


#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
!*#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'payrnctl.sqc'  !Select-Parameters
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getgeid.sqc'   !Get 7 digit Emplid