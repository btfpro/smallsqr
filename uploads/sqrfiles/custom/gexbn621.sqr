!***********************************************************************
! Interface Name: GEXBN621 (Clone from GEXBN620)                       *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
! GEXBN621:     Highmark Interface File for Wellness Plan '1L'         *
!                                                                      *
! Narrative:    This program creates a file for the TMs which are 
!			enrolled in a Wellness Plan and report of              *
!               employees enrolled in Highmark.                        *
!***********************************************************************
!                                                                      *
! SQL Tables:   PS_PERSONAL_DATA                                       *
!               PS_JOB                                                 *
!               PS_HEALTH_BENEFIT                                      *
!               PS_BENEF_PLAN_TBL                                      *
!								PS_EMPLOYMENT																					 *
!								PS_PERS_NID																						 *
!								PS_VENDOR_POLICY																			 * 	
!								PS_BEN_PROG_PARTIC																		 *
!								PS_GEX_BN_HMWEL_PR																		 *
!								PS_GEX_BN_HMWEL_CR																		 *
!                                                                      *
!#debugxyz  : 	#debug9 Paragraph & Variable values										 *
!																																			 *
! Written by:   Anil Gajavelly                                         *
!                                                                      *
! Normally Run: Weekly                                                 *
!                                                                      *
!***********************************************************************
! Tables Referenced:						       																 *
!----------------------------------------------------------------------*
! TABLE                  SEL     UPD     INS     DEL                   *
!----------------------------------------------------------------------*
!PS_PERSONAL_DATA        Y       -       -       -                     *
!PS_JOB						       Y       -       -       -                     * 
!PS_HEALTH_BENEFIT       Y       -       -       -                     *
!PS_BENEF_PLAN_TBL       Y       -       -       -                     *
!PS_EMPLOYMENT			     Y       -       -       -                     *
!PS_PERS_NID			       Y       -       -       -                     * 
!PS_VENDOR_POLICY        Y       -       -       -                     *
!PS_BEN_PROG_PARTIC      Y       -       -       -                     *
!PS_GEX_BN_HMWEL_PR      Y       -       Y       Y                     *
!PS_GEX_BN_HMWEL_CR      Y       -       Y       Y                     *
!***********************************************************************
! Program Flow:                                                        *
!***********************************************************************
!BEGIN-PROGRAM																													*
!		Init-DateTime                                                  			*
! 	Init-Number                                                  				*
! 	Stdapi-Init                                                    			*
! 	Initialization																											*
!				Delete-Prior-Table																							*
!		  	Insert-Prior-Table																							*
!				Delete-Curr-Table                                         			*
!				Create-Header-Rec																								*
! 	Get-Current-DateTime                                                *
! 	Open-File                                         									*
! 	Report                              																*
!				Ask-As-Of-Date																									*
!				GEXRCBN1-SELECT-PARAMETERS																			*
!				Process-Data																										*
!					before-group-nbr																							*
!					after-group-nbr																								*
!					before-emplid																									*
!					after-emplid																									*
!						Create-Rec-100																							*
!						Create-Seq-Nbr																							*	
!						Check-for-Existing-Row																			*
!						Insert-Rec																									*
!						Create-Rec-110																							*
!							Get-Addr-Effdt																						*
!						Create-Seq-Nbr																							*
!						Check-for-Existing-Row																			*
!						Insert-Rec																									*
!						Create-Rec-130																							*
!							Get-Gex-Div-CD																						*
!						Create-Seq-Nbr																							*	
!						Check-for-Existing-Row																			*
!						Insert-Rec																									*
!					before-plan-type																							*
!					after-plan-type																								*	
!						Create-Rec-135																							*
!						Create-Seq-Nbr																							*
!						Check-for-Existing-Row																			*
!						Insert-Rec																									*		
!					Create-Contract-ID																						*
!					Evaluate-Covrg-CD																							*
!					Check-for-Cancels																							*		
!						Get-Cancel-Date																							*
!						Get-Rev-Name																								*
!						Check-Contract-Change																				*
!						Revised-Rec-Rtn																							*
!							Create-Revised-Rec-100																		*
!								Insert-Revised-Rec																			*
!							Create-Revised-Rec-110																		*
!								Insert-Revised-Rec																			*
!							Create-Revised-Rec-115																		*
!								Insert-Revised-Rec																			*
!							Create-Revised-Rec-130																		*
!								Insert-Revised-Rec																			*
!							Create-Revised-rec-135																		*
!								Check-Deceased																					*
!								Insert-Revised-Rec																			*	
!					Create-Trailer-Rec																						*
!						Insert-Rec																									*
!					Select-from-Curr																							*
!						Write-Record																								*
! 	Finalization                                          							*
!			Close-File																												*
! 	Stdapi-Term                                													*
!END-PROGRAM																														*
!************************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#         INITIALS    DATE           DESCRIPTION OF THE CHANGE    *
!***********************************************************************
!CSR HR-101613  ISDVAKG   07/19/2011     INITIAL CREATION              *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup02.sqc'

!*********************************************************************
!Initial processing, retrieving current dates and calls the main 
!procedure to do the processing.                                     
!*********************************************************************
BEGIN-PROGRAM

  DO Init-DateTime
  DO Init-Number
  DO stdapi-init
  DO Initialization
  MOVE 'GEXBN621' to $ReportID
  MOVE 'Highmark Wellness Interface' to $ReportTitle
  show $ReportTitle 
  show '  ' 
  DO Get-Current-DateTime

  date-time () mm/dd/yyyy &daybegan
  date-time () hh:mi:ss &timebegan
  show ' '
  show 'Report began on ' &daybegan ' at ' &timebegan
  show ' '
 
  DO Open-File 

  DO Report
  DO Finalization
  DO Stdapi-Term
END-PROGRAM

!*********************************************************************
!Procedure for Initialization
!*********************************************************************
BEGIN-PROCEDURE Initialization
#debug9 Show 'Initialization'

  DO Delete-Prior-Table
  DO Insert-Prior-Table
  DO Delete-Curr-Table

  Let $3_spaces   = rpad($3_spaces,3,' ')
  Let $5_spaces   = rpad($5_spaces,5,' ')
  Let $7_spaces   = rpad($7_spaces,7,' ')
  Let $9_spaces   = rpad($9_spaces,9,' ')
  Let $10_spaces  = rpad($10_spaces,10,' ')
  Let $18_spaces  = rpad($18_spaces,18,' ')
  Let $35_spaces  = rpad($35_spaces,35,' ')
  Let $37_spaces  = rpad($37_spaces,37,' ')
  Let $40_spaces  = rpad($40_spaces,40,' ')
  Let $55_spaces  = rpad($55_spaces,55,' ')
  Let $139_spaces = rpad($139_spaces,139,' ')
  Let $100_spaces = rpad($100_spaces,100,' ') 
  Let $153_spaces = rpad($153_spaces,153,' ')
  Let $158_spaces = rpad($158_spaces,158,' ')
  Let $246_spaces = rpad($246_spaces,246,' ')
  Let $251_spaces = rpad($251_spaces,251,' ')
  Let $benef_id = '00'
  Let $rec_seq_nbr = $7_spaces
  Let $dashes = rpad($dashes,95,'-')
  
  date-time () mm/dd/yyyy &rptdt
  date-time () hh:mi:ss &rpttime
  MOVE &rptdt to $report_date 
  MOVE &rpttime to $report_time 
  !Show 'Report Date and Time: ' $report_date  ' '  $report_time	 	
  !show '$report_time: ' $report_time
  
  DO Create-Header-Rec
  
  Let $first_ee = 'Y'
  
END-PROCEDURE Initialization

!**********************************************************
!  DeLete the prior week's data from PS_GEX_BN_HMWEL_PR
!**********************************************************
BEGIN-PROCEDURE Delete-Prior-Table
#debug9 Show 'Delete-Prior-Table'

BEGIN-SQL ON-ERROR=SQL-Error-Found('Delete-Prior-Table')
    DELETE FROM PS_GEX_BN_HMWEL_PR
END-SQL

END-PROCEDURE Delete-Prior-Table 

!*******************************************************************
!  Insert the data from PS_GEX_BN_HMWEL_CR into PS_GEX_BN_HMWEL_PR
!*******************************************************************
BEGIN-PROCEDURE Insert-Prior-Table
#debug9 Show 'Insert-Prior-Table'

BEGIN-SQL ON-ERROR=SQL-Error-Found('Insert-Prior-Table')

INSERT INTO PS_GEX_BN_HMWEL_PR
(SELECT AGREEMENT_ID,  	
GEX_REC_TYPE,  
SEQ_NBR     ,  
TEXT254     ,  
DESCR254    
FROM PS_GEX_BN_HMWEL_CR)

END-SQL

END-PROCEDURE	Insert-Prior-Table

!**********************************************************
!  DeLete the prior week's data from PS_GEX_BN_HMWEL_CR
!**********************************************************
BEGIN-PROCEDURE Delete-Curr-Table
#debug9 Show 'Delete-Curr-Table'

  BEGIN-SQL ON-ERROR=SQL-Error-Found('DeLete-Curr-Table')
    DELETE FROM PS_GEX_BN_HMWEL_CR
  END-SQL
  
END-PROCEDURE Delete-Curr-Table

!**********************************************************
!  Header Record
!**********************************************************
BEGIN-PROCEDURE Create-Header-Rec
#debug9 Show 'Create-Header-Rec'

  Let $agreement_nbr = '0000000000'
  Let $rec_type = '000'
  MOVE 0 to #seq_nbr   
  Let $purpose_cd = '00'
  Let $sender_id = 'Giant Eagle '
  Let $out1 = $40_spaces||$rec_type||$7_spaces||$report_date||$report_time||
	$purpose_cd||$report_date||$report_date||$7_spaces||$40_spaces||$sender_id
  Let $out1 = rpad($out1,254,' ')
  Let $out2 = $246_spaces
  DO Insert-Rec
  
END-PROCEDURE Create-Header-Rec

!*********************************************************************
!Procedure Report
!*********************************************************************
BEGIN-PROCEDURE Report
  MOVE 'N' to $Errorfound

  date-time () MM/DD/YYYY &curr_date
  date-time () hh:mi:ss &curr_time

  MOVE &curr_date to $curr_date

  DO Format-datetime($curr_date,$curr_Date_dbf_1,{DEFMDY},'','native')
  DO Convert-To-DTU-Date($curr_Date_dbf_1,$curr_Date_1)

  Let $curr_yy = substr($curr_Date_1,1,4)
  Let $curr_mm = substr($curr_Date_1,6,2)
  Let $curr_dd = substr($curr_Date_1,9,2)

  IF $prcs_process_instance = ''
     DO Ask-As-Of-Date
  ELSE
     DO GEXRCBN1-SELECT-PARAMETERS
     Let $AsOfDate = &GEX_RC_BEN.AsOfDate
  END-IF

  IF rtrim($asofdate,' ') = ''
    Let $run_dt = $curr_yy||$curr_mm||$curr_dd
    DO Format-datetime($run_dt, $run_date, {DEFCMP},'','native')
    DO Format-datetime($run_dt, $asofdate, {DEFCMP},'','native')
  END-IF
  
  DO convert-to-dtu-date($asofdate,$asofdate_dtu)
  Let $hdg_yy = substr($asofdate_dtu,1,4)
  Let $hdg_mm = substr($asofdate_dtu,6,2)
  Let $hdg_dd = substr($asofdate_dtu,9,2)
  Let $hdg_asofdate = $hdg_mm||'/'||$hdg_dd||'/'||$hdg_yy
  DO dtu-add-days($asofdate_dtu,30,$plus30_date_dtu)
  DO convert-from-dtu-date($plus30_date_dtu,$plus30_date)
  show 'Asofdate: ' $asofdate
  show 'Plus30_date: ' $plus30_date
  
 	IF $sev-error = 'Y'
    	   goto Report-Exit
 	END-IF

 	DO Process-Data

Report-Exit:

  show ' '
END-PROCEDURE Report

!*********************************************************************
!PRINTs the header information in the report.
!*********************************************************************
BEGIN-HEADING 5

  #Include 'stdhdg01.sqc'
  PRINT 'EXCEPTION REPORT' (+0) center 
  Let $hdg_tmp = 'As of: ' || $hdg_asofdate 
  PRINT $hdg_tmp           (+1) center 
  PRINT '-'                (+1,1,174) FILL

END-HEADING

!*********************************************************************
! Select all valid Employee Types for a specific company
!*********************************************************************
BEGIN-PROCEDURE Process-Data
#debug9 Show 'Process-Data'
!display 'Begin process'
MOVE 'N' to $rowfound
Let $end_process = 'N'
Let #inputtran = 0
Let $contract_id   = rpad($contract_id,30,' ')

BEGIN-SELECT ON-ERROR=SQL-Error-Found('Process-Data')
BP.GROUP_NBR                () 	on-break PRINT=never level=02
                                save=$save_group_nbr  
			        									before=before-group-nbr	
                                after=after-group-nbr  
BP.VENDOR_ID
   MOVE &BP.VENDOR_ID      to $provider 
VP.POLICY_NBR
   MOVE &VP.POLICY_NBR     to $policy
HB.EMPLID                   () 	on-break PRINT=never level=01
                               	save=$save_emplid
                               	before=before-emplid  
                               	after=after-emplid 
HB.EMPL_RCD
   MOVE &HB.EMPL_RCD       to 	#empl_rcd
PN.NATIONAL_ID
   MOVE &PN.NATIONAL_ID    to 	$national_id
   Let $agreement_nbr       = 	$national_id||'0'
PD.FIRST_NAME
   MOVE &PD.FIRST_NAME     to 	$first_name
PD.MIDDLE_NAME
   MOVE &PD.MIDDLE_NAME    to 	$middle_name
PD.LAST_NAME
   MOVE &PD.LAST_NAME      to 	$last_name
PD.NAME_PREFIX
   MOVE &PD.NAME_PREFIX    to 	$prefix
PD.NAME_SUFFIX
   MOVE &PD.NAME_SUFFIX    to 	$suffix
PD.ADDRESS1
   MOVE &PD.ADDRESS1       to 	$address1
PD.ADDRESS2
   MOVE &PD.ADDRESS2       to 	$address2
PD.ADDRESS3
   MOVE &PD.ADDRESS3       to 	$address3
PD.CITY
   MOVE &PD.CITY           to 	$city
PD.STATE
   MOVE &PD.STATE          to 	$state
PD.POSTAL 
   MOVE &PD.POSTAL         to 	$postal
PD.COUNTRY
   MOVE &PD.COUNTRY        to 	$country
PD.BIRTHDATE
   MOVE &PD.BIRTHDATE      to 	$birthdate
PD.SEX
   MOVE &PD.SEX            to 	$sex
PD.MAR_STATUS
   MOVE &PD.MAR_STATUS     to 	$mar_status
JB.FULL_PART_TIME
   MOVE &JB.FULL_PART_TIME to 	$full_part_time
JB.EMPL_TYPE
   MOVE &JB.EMPL_TYPE      to 	$empl_type
JB.DEPTID
   MOVE &JB.DEPTID         to 	$deptid
JB.EFFDT
   MOVE &JB.EFFDT          to 	$job_effdt
EM.HIRE_DT
   MOVE &EM.HIRE_DT        to 	$hire_dt
HB.COVRG_CD			
HB.EFFDT
HB.COVERAGE_BEGIN_DT
HB.PLAN_TYPE                () on-break PRINT=never level=03 
                                save=$save_plan_type
                                before=before-plan-type   
                               	after=after-plan-type
HB.COVERAGE_ELECT 
HB.BENEFIT_PLAN         
PP.BENEFIT_PROGRAM     
   Let #emp = #emp+1
   #debug9 show 'empno:' #emp
      
   MOVE &HB.BENEFIT_PLAN     to $benefit_plan

   MOVE &hb.coverage_elect   to $coverage_elect
   #debug9 show 'coverage elect:' $coverage_elect
   MOVE &HB.PLAN_TYPE        to $plan_type
   #debug9 show 'plantype:' $plan_type
   
   DO Create-Contract-ID
   
   MOVE &BP.GROUP_NBR        to $group_nbr
   MOVE &HB.EMPLID           to $emplid
   MOVE &HB.EFFDT            to $hb_effdt
   MOVE &HB.COVERAGE_BEGIN_DT to $hb_coverage_begin_dt
   MOVE &HB.COVRG_CD         to $covrg_cd
   #debug9 show 'Coverage code:' $covrg_cd
   
   DO Evaluate-Covrg-CD		
    
   MOVE &PP.BENEFIT_PROGRAM  to $benefit_program
  	IF &hb.coverage_elect = 'E'
    		MOVE 'Y' to $rowfound
    		add 1 to #inputtran
  	ELSE
    		add 1 to #no_elect_ctr
    		#debug9 show '===>> Coverage_elect not Equal to E: ' $emplid
  	END-IF

FROM PS_JOB JB,
     PS_EMPLOYMENT EM,
     PS_PERS_NID PN, 
     PS_PERSONAL_DATA PD,
     PS_VENDOR_POLICY VP,
     PS_HEALTH_BENEFIT HB,
     PS_BENEF_PLAN_TBL BP,
     PS_BEN_PROG_PARTIC PP
WHERE JB.EMPLID       = PD.EMPLID
AND   JB.EMPLID       = HB.EMPLID
AND   JB.EMPL_RCD     = HB.EMPL_RCD
AND   EM.EMPLID       = JB.EMPLID
AND   EM.EMPL_RCD     = JB.EMPL_RCD 
AND   PD.EMPLID       = EM.EMPLID
AND   PN.EMPLID       = PD.EMPLID
AND   PP.EMPLID       = HB.EMPLID
AND   PP.EMPL_RCD     = HB.EMPL_RCD
AND   HB.PLAN_TYPE    = '1L'
AND   HB.PLAN_TYPE    = BP.PLAN_TYPE
AND   HB.BENEFIT_PLAN = BP.BENEFIT_PLAN
AND   BP.VENDOR_ID    IN ('0001','0005')
AND   BP.VENDOR_ID    = VP.VENDOR_ID
AND   BP.GROUP_NBR    = VP.GROUP_NBR
AND   VP.SETID        = 'COMMN'  
AND   JB.EFFDT = (SELECT MAX(EFFDT)
		  FROM PS_JOB
		  WHERE EMPLID    = JB.EMPLID
		  AND   EMPL_RCD = JB.EMPL_RCD
		  AND   EFFDT    <= $asofdate)
AND   JB.EFFSEQ = (SELECT MAX(EFFSEQ)
		   FROM PS_JOB
		   WHERE EMPLID    = JB.EMPLID
		   AND   EMPL_RCD = JB.EMPL_RCD
		   AND   EFFDT    = JB.EFFDT)
AND   HB.COVERAGE_BEGIN_DT =  (SELECT MAX(COVERAGE_BEGIN_DT) 
                   FROM PS_HEALTH_BENEFIT
                   WHERE HB.EMPLID = EMPLID
                   AND HB.EMPL_RCD = EMPL_RCD
                   AND HB.COBRA_EVENT_ID = COBRA_EVENT_ID
                   AND HB.PLAN_TYPE = PLAN_TYPE
                   AND HB.BENEFIT_NBR = BENEFIT_NBR
                   AND COVERAGE_BEGIN_DT  <= $asofdate)
AND   BP.EFFDT =  (SELECT MAX(EFFDT)
                   FROM PS_BENEF_PLAN_TBL
                   WHERE BP.PLAN_TYPE = PLAN_TYPE
                   AND BP.BENEFIT_PLAN = BENEFIT_PLAN
                   AND EFFDT <= $asofdate)  
AND   PP.EFFDT =  (SELECT MAX(EFFDT) 
                   FROM PS_BEN_PROG_PARTIC
                   WHERE PP.EMPLID = EMPLID
                   AND PP.EMPL_RCD = EMPL_RCD
                   AND PP.COBRA_EVENT_ID = COBRA_EVENT_ID
                   AND   EFFDT    <= $asofdate)
!AND JB.EMPLID IN ('168348011','169643288','171640984','181545321','182326462','187422663','194423540','208686459','460691954')
ORDER BY  HB.EMPLID, HB.PLAN_TYPE desc
END-SELECT

	DO Before-Emplid
	IF $rowfound = 'N'
   		display 'No Employees found for the Highmark Wellness File' 
	ELSE
  		DO Check-for-Cancels
  		DO Create-Trailer-Rec  
  		DO Select-from-Curr
  	END-IF
  
END-PROCEDURE Process-Data

!*********************************************************************
! Before EmplID Procedure
!*********************************************************************
BEGIN-PROCEDURE Before-Emplid
#debug9 Show 'before-emplid ' $emplid
END-PROCEDURE Before-Emplid

!*********************************************************************
! After EmplID Procedure
!*********************************************************************
BEGIN-PROCEDURE After-Emplid
#debug9 Show 'After-Emplid ' $emplid
  IF $coverage_elect = 'E'
    	MOVE $emplid to $prev_emplid
    	Let $benef_id = '00'
    	Do Create-Rec-100
    	DO Create-Seq-Nbr
      IF rtrim($emplid,' ') <> ''
        	DO Check-for-Existing-Row
        	IF $row_exists = 'N'
          		DO Insert-Rec
        	END-IF
      END-IF
    	DO Create-Rec-110
    	DO Create-Seq-Nbr
      IF rtrim($emplid,' ') <> ''
        	DO Check-for-Existing-Row
        	IF $row_exists = 'N'
          		DO Insert-Rec
        	END-IF
      END-IF
    	DO Create-Rec-130
    	DO Create-Seq-Nbr
      IF rtrim($emplid,' ') <> ''
        	DO Check-for-Existing-Row
        	IF $row_exists = 'N'
          		DO Insert-Rec
        	END-IF 
      END-IF
  ELSE
    	add 1 to #no_elect_ctr
    	show '===>> Coverage_elect not Equal to E: ' $emplid
  END-IF
END-PROCEDURE After-Emplid

!*********************************************************************
!Create Conract ID Procedure
!*********************************************************************
BEGIN-PROCEDURE Create-Contract-ID
#debug9 Show 'Create-Contract-ID - $group_nbr: ' $group_nbr

  IF rtrim($save_group_nbr,' ') <> ''
    Let $contract_id   = '0' || substr($save_group_nbr,1,5) || substr($save_group_nbr,7,2)
  END-IF
   Let $contract_id   = rpad($contract_id,30,' ')
   
END-PROCEDURE Create-Contract-ID

!*********************************************************************
!Before Group Number Procedure
!*********************************************************************
BEGIN-PROCEDURE Before-Group-Nbr
#debug9 Show 'Before-Group-Nbr  $group_nbr = ' $group_nbr ';  $save_group_nbr = ' $save_group_nbr
END-PROCEDURE Before-Group-Nbr

!*********************************************************************
!After Group Number Procedure                                        
!*********************************************************************
BEGIN-PROCEDURE After-Group-Nbr
#debug9 Show 'After-Group-Nbr  $group_nbr: ' $group_nbr
END-PROCEDURE After-Group-Nbr

!*********************************************************************
!Before Plan Type Procedure                                         
!*********************************************************************
BEGIN-PROCEDURE Before-Plan-Type
#debug9 Show 'Before-Plan-Type ' $plan_type

    Let $prev_plantype			=	$plan_type
    Let $prev_covrg_cat_cd	=	$covrg_cat_cd
    Let $prev_covrg_cd			=	$covrg_cd
    Let $prev_relation_cd		=	$relation_cd
    
END-PROCEDURE Before-Plan-Type

!*********************************************************************
!After Plan Type Procedure                                           
!*********************************************************************
BEGIN-PROCEDURE After-Plan-Type
#debug9 Show 'After-Plan-Type ' $plan_type ', $save_plan_type = ' $save_plan_type
#debug9 do after-plan-display

  IF $coverage_elect = 'E'
  IF $agreement_nbr <> '0000000000'
  
      	Let $benef_id = '00' 
     	DO Create-Rec-135
     	DO Create-Seq-Nbr
     	Let $curr_out1 = $out1
        DO Check-for-Existing-Row
        IF $row_exists = 'N'
          DO Insert-Rec
       	END-IF									
   
   !  MOVE 'N' to $dep_found 
   !  DO Get-Dependent
     
  END-IF
  END-IF
  
END-PROCEDURE After-Plan-Type                                      

!*********************************************************************
!After Plan Display Procedure                                           
!*********************************************************************
BEGIN-PROCEDURE After-Plan-Display
     show '$emplid: ' $emplid
     show '$benef_id: ' $benef_id
     show '&hb.plan_type: ' &hb.plan_type
     show '&HB.COVRG_CD:' &HB.COVRG_CD
     show '&hb.effdt: ' &hb.effdt
     show '$hb_effdt: ' $hb_effdt
     show '$save_plan_type: ' $save_plan_type
     show '$plan_type: ' $plan_type
     show '$hb_coverage_begin_dt: ' $hb_coverage_begin_dt

END-PROCEDURE After-Plan-Display              

!*********************************************************************
!Create Sequence Number Procedure                                           
!*********************************************************************
BEGIN-PROCEDURE Create-Seq-Nbr
#debug9 show 'Create-Seq-Nbr'     
#debug9 show '$emplid: ' $emplid
#debug9 show '$benef_id: ' $benef_id
#debug9 show '$plan_type: ' $plan_type
     
     Let $seq_nbr = $benef_id || $plan_type
     MOVE $seq_nbr to #seq_nbr 

END-PROCEDURE Create-Seq-Nbr

!*********************************************************************
!Evaluate Coverage Code Procedure                                           
!*********************************************************************
BEGIN-PROCEDURE Evaluate-Covrg-Cd
  Let $covrg_cat_cd = 'IND'
  #debug9 show 'Coverage Cat Code:'$covrg_cat_cd
END-PROCEDURE Evaluate-Covrg-Cd

!*********************************************************************
! Create record 100 variables to be inserted into PS_GEX_BN_HMWEL_CR
!*********************************************************************
BEGIN-PROCEDURE Create-Rec-100
#debug9 Show 'create-rec-100'

  Let $rec_type = '100'
  Let $marital_status = ' '
  Let $relation_cd    = '20'
  Let $subscriber     = 'Y'
  Let $ssn = rpad($national_id,17,' ')
  Let $f_name = rpad($first_name,25,' ')
  Let $m_name = rpad($middle_name,25,' ')
  Let $l_name = rpad($last_name,35,' ')
  Let $EE_name = rtrim($f_name,' ')||' '||rtrim($m_name,' ')||' '||rtrim($l_name,' ')
  Let $p_fix = rpad($prefix,10,' ')
  Let $s_fix = rpad($suffix,10,' ')
  Let $year4 = '1'
  DO Format-datetime($hire_dt,$Hire_Date,{DEFMDY},'','')
  Let $year4 = '1'
  DO Format-datetime($birthdate,$birth_Date,{DEFMDY},'','')
  
  Let $out1 = $agreement_nbr||$contract_id||$rec_type||$rec_seq_nbr||' '||$ssn||
      $birth_date||$f_name||$m_name||$l_name||
      $p_fix||$s_fix||$sex||'      '||$marital_status||$relation_cd||$35_spaces||
      $subscriber||$hire_date
  Let $out1 = rpad($out1,254,' ')
  Let $out2 = $246_spaces         

END-PROCEDURE Create-Rec-100

!*********************************************************************
! Create record 110 variables to be inserted into PS_GEX_BN_HMWEL_CR
!*********************************************************************
BEGIN-PROCEDURE Create-Rec-110
#debug9 Show 'Create-Rec-110'

  Let $add_qual = 'C9'
  Let $address1 = rpad($address1,55,' ')
  Let $address2 = rpad($address2,55,' ')
  Let $address3 = rpad($address3,55,' ')
  Let $city     = rpad($city,30,' ')
  Let $zip      = rpad($postal,15,' ')
  
  DO  Get-Addr-Effdt
  
  Let $addr_effdt = rpad($addr_effdt,10,' ')
  Let $addr_cancel_dt = $10_spaces
  Let $rec_type = '110'
  Let $out1 = $agreement_nbr||$contract_id||'110'||$rec_seq_nbr||$add_qual||
	$address1||$address2||$address3
  Let $out1 = rpad($out1,254,' ')
  Let $out2 = $18_spaces||$city||$state||$zip||$country||
	$addr_effdt||$addr_cancel_dt
  Let $out2 = rpad($out2,246,' ')
  Let $curr_rec_110 = $out1||$out2
	
END-PROCEDURE Create-Rec-110

!*********************************************************************
! Get 110 Prior Record 
!*********************************************************************
BEGIN-PROCEDURE Get-Prior-Rec-110
#debug9 Show 'Get-Prior-Rec-110'

BEGIN-SELECT ON-ERROR=SQL-Error-Found('get-prior-rec-110')
P110.AGREEMENT_ID
P110.GEX_REC_TYPE
P110.SEQ_NBR
P110.TEXT254
P110.DESCR254

   Let $p110_agreement_id = &P110.AGREEMENT_ID
   Let $p110_gex_rec_type = &P110.GEX_REC_TYPE
   MOVE &P110.SEQ_NBR     to $p110_seq_nbr 0999
   Let $p110_text254      = &P110.TEXT254
   Let $p110_descr254     = &P110.DESCR254
   
FROM PS_GEX_BN_HMWEL_PR P110
where P110.AGREEMENT_ID = $agreement_nbr
and P110.GEX_REC_TYPE = $rec_type
END-SELECT
   Let $prior_rec_110 = $p110_text254||$p110_descr254

END-PROCEDURE Get-Prior-Rec-110

!*********************************************************************
! Get Address
!*********************************************************************
BEGIN-PROCEDURE Get-Addr-Effdt
#debug9 Show 'Get-Addr-Effdt'
BEGIN-SELECT 
MAX(ADDR.EFFDT) &ADDR_EFFDT

  Let $year4 = '1'
  DO Format-datetime(&addr_effdt,$addr_effdt,{DEFMDY},'','')
  
FROM PS_ADDRESSES ADDR
WHERE ADDR.EMPLID = $emplid
AND ADDR.ADDRESS_TYPE = 'HOME'
END-SELECT

END-PROCEDURE Get-Addr-Effdt

!*********************************************************************
! Create record 130 variables to be inserted into PS_GEX_BN_HMWEL_CR
!*********************************************************************
BEGIN-PROCEDURE Create-Rec-130
#debug9 Show 'create-rec-130'

  Let $rec_type = '130'
  Let $qual_cd = 'AP'
  Let $year4 = '1'
  
  DO Format-datetime($asofdate,$qual_effdt,{DEFMDY},'','')
  
  Let $qual_cancel_date = $10_spaces
  
  DO Get-Gex-Div-CD
  
  Let $130_rpt_id = $gex_div_cd
  Let $130_rpt_id = rpad($130_rpt_id,30,' ') 
  Let $out1 = $agreement_nbr||$contract_id||$rec_type||$rec_seq_nbr||
		'01'||$qual_cd||$qual_effdt||$130_rpt_id||$qual_cancel_date||
		$40_spaces||$10_spaces 
  Let $out2 = $246_spaces
  Let $curr_rec_130 = $out1||$out2

END-PROCEDURE Create-Rec-130

!*********************************************************************
! Get Gex Division Code
!*********************************************************************
BEGIN-PROCEDURE Get-Gex-Div-CD
#debug9 Show 'Get-Gex-Div-CD'
BEGIN-SELECT 
GDT.GEX_COMPANY_DIV_CD
  
  Let $gex_div_cd = &GDT.GEX_COMPANY_DIV_CD
  
FROM PS_GEX_DEPT_TBL GDT
WHERE GDT.DEPTID = $deptid
AND GDT.SETID = 'COMMN'
AND GDT.EFFDT = 
   (SELECT MAX(EFFDT)
    FROM PS_GEX_DEPT_TBL
    WHERE SETID = GDT.SETID
    AND DEPTID = GDT.DEPTID
    AND EFFDT <= $ASOFDATE) 
END-SELECT
END-PROCEDURE Get-Gex-Div-CD

!*********************************************************************
! Create record 135 variables to be inserted into PS_GEX_HRMRK_CURR
!*********************************************************************
BEGIN-PROCEDURE Create-Rec-135
#debug9 Show 'Create-Rec-135'

  Let $rec_type = '135'
  
  IF rtrim($contract_id,' ') = ''
    Let $temp1 = &bp.group_nbr 
    Let $contract_id   = '0' || substr($temp1,1,5) || substr($temp1,7,2)
    Let $contract_id   = rpad($contract_id,30,' ')
  END-IF
  
  Let $policy = 'BA '
  
  Let $ins_line_cd = $policy   
  Let $year4 = '1'
  
  IF $dep_bday_flag = 'Y'
    Let $covrg_begin_Date = $dep_covrg_begin_Date
  ELSE
    DO Format-datetime($hb_coverage_begin_dt,$covrg_begin_Date,{DEFMDY},'','')
  END-IF
  
  Let $dep_bday_flag = 'N'
  Let $plan_area = rpad($plan_area,17,' ') 
  Let $covrg_cancel_date = $10_spaces
  Let $covrg_cancel_cd = '  '
  Let $covrg_count = '01'

  Let $out1 = $agreement_nbr||$contract_id||$rec_type||$rec_seq_nbr||
		$covrg_count||$ins_line_cd||$covrg_begin_date||$3_spaces||
		$covrg_cat_cd||$3_spaces||$plan_area||'  '||$covrg_cancel_date||
		$covrg_cancel_cd||$report_date 
  Let $out1 = rpad($out1,254,' ')
  Let $out2 = $246_spaces
  Let $curr_rec_135 = $out1||$out2

END-PROCEDURE Create-Rec-135

!###########################################################
!Procedure for Checking existing row
!###########################################################
BEGIN-PROCEDURE Check-for-Existing-Row
#debug9 show 'Check-for-Existing-Row'
#debug9  show '$Agreement_nbr: ' $agreement_nbr
#debug9  show '$rec_type: '  $rec_type
#debug9  show '#seq_nbr: ' #seq_nbr 

Let $row_exists = 'N'
BEGIN-SELECT
'X'

  Let $row_exists = 'Y'

FROM PS_GEX_BN_HMWEL_CR HC
WHERE HC.AGREEMENT_ID = $agreement_nbr
AND   HC.GEX_REC_TYPE = $rec_type
AND   HC.SEQ_NBR      = #seq_nbr
END-SELECT

#debug9  show '$row_exists: '$row_exists

END-PROCEDURE Check-for-Existing-Row

!*********************************************************************
!  Insert rows into PS_GEX_BN_HMWEL_CR
!*********************************************************************
BEGIN-PROCEDURE Insert-Rec
#debug9 Show 'Insert-Rec'
#debug9  show 'values: ' $agreement_nbr ', ' $rec_type ', ' #seq_nbr

BEGIN-SQL ON-ERROR=SQL-Error-Found('Insert-Rec')
INSERT INTO PS_GEX_BN_HMWEL_CR 
VALUES($agreement_nbr,
       $rec_type,
       #seq_nbr,
       $out1,
       $out2)
END-SQL

  ADD 1 to #total_recs
  IF $rec_type = '100'
    ADD 1 to #total_100_recs
  END-IF
  
  Let $prior_out1 = $out1
  
END-PROCEDURE  Insert-Rec

!*********************************************************************
!  Procedure to Check for Cancels
!*********************************************************************
BEGIN-PROCEDURE Check-for-Cancels
#debug9 Show 'Check-for-Cancels'

BEGIN-SELECT
GHP.AGREEMENT_ID
GHP.GEX_REC_TYPE
GHP.SEQ_NBR
GHP.TEXT254
GHP.DESCR254
	
  Let $rev_agreement_id = &ghp.agreement_id
  Let $rev_gex_rec_type = &ghp.gex_rec_type
  MOVE &ghp.seq_nbr to #rev_seq_nbr 
  MOVE &ghp.seq_nbr to $rev_seq_nbr 9999			
  Let $rev_text254      = &ghp.text254
  Let $rev_descr254     = &ghp.descr254
  Let $rev_contract_id = substr($rev_text254,11,8)
  Let $rev_group_nbr = substr($rev_contract_id,2,7)
  Let $cancel_emplid = substr($rev_agreement_id,1,9)

  !DO Check-Seq-Nbr
  
  
  IF &ghp.gex_rec_type = '135'
    Let $rev_policy = substr($rev_text254,53,3)
   ! DO eval-prev-policy
    DO Get-Cancel-Date 
  END-IF
  
  Let $year4 = '1'
  DO Format-datetime($cd_coverage_begin_dt,$rev_cancel_dt,{DEFMDY},'','')
  !if $already_cancelled = 'N' 
      DO Get-Rev-Name
      DO Check-Contract-Change
      IF $curr_contract_found = 'Y'
        IF $gcc_contract_id = $rev_contract_id
          DO Revised-Rec-Rtn
        END-IF
      ELSE
        DO Revised-Rec-Rtn
      END-IF
   ! END-IF
  
FROM PS_GEX_BN_HMWEL_PR GHP
WHERE NOT EXISTS (SELECT 'X'
			FROM PS_GEX_BN_HMWEL_CR GHC
			WHERE GHC.AGREEMENT_ID = GHP.AGREEMENT_ID
			AND GHC.GEX_REC_TYPE = GHP.GEX_REC_TYPE
			AND GHC.SEQ_NBR = GHP.SEQ_NBR)
ORDER BY GHP.AGREEMENT_ID,GHP.SEQ_NBR,GHP.GEX_REC_TYPE DESC
END-SELECT

END-PROCEDURE

!*********************************************************************
!  Procedure to Check Sequence Number
!*********************************************************************
BEGIN-PROCEDURE Check-Seq-Nbr
#debug9 SHOW 'Check-Seq-Nbr'
  Let $compare_nbr = substr($rev_seq_nbr,3,2)
  Let #compare_nbr = $compare_nbr
  IF #compare_nbr > 14
    Let $already_cancelled = 'Y'
  ELSE
    Let $already_cancelled = 'N'
  END-IF
END-PROCEDURE Check-Seq-Nbr

!*********************************************************************
!  Procedure to Check Conract Change
!*********************************************************************
BEGIN-PROCEDURE Check-Contract-Change
#debug9 show 'do Check-Contract-Change'

  Let $curr_contract_found = 'N'

BEGIN-SELECT
GCC.AGREEMENT_ID
GCC.GEX_REC_TYPE
SUBSTR(GCC.TEXT254,11,8) &CONTRACT_ID


  Let $gcc_contract_id = &CONTRACT_ID
  Let $curr_contract_found = 'Y'
	
FROM PS_GEX_BN_HMWEL_CR GCC
WHERE GCC.AGREEMENT_ID = $rev_agreement_id
AND GCC.GEX_REC_TYPE = '110'
END-SELECT

END-PROCEDURE Check-Contract-Change

!*********************************************************************
!  Procedure to Get Cancel Date
!*********************************************************************
BEGIN-PROCEDURE Get-Cancel-Date
#debug9 Show 'Get-Cancel-Date'

BEGIN-SELECT ON-ERROR=SQL-Error-Found('Get-Cancel-Date')
CD.EFFDT
CD.COVERAGE_BEGIN_DT
CD.COVERAGE_ELECT
CD.PLAN_TYPE

   MOVE &CD.COVERAGE_BEGIN_DT to $CD_coverage_begin_dt
   MOVE &CD.COVERAGE_ELECT    to $CD_coverage_elect
   MOVE &CD.PLAN_TYPE         to $CD_plan_type
   
FROM  PS_HEALTH_BENEFIT CD
WHERE CD.EMPLID       = $cancel_EMPLID
AND   CD.PLAN_TYPE    = '10'
AND   CD.COVERAGE_BEGIN_DT =  (SELECT MAX(COVERAGE_BEGIN_DT) 
                   FROM PS_HEALTH_BENEFIT
                   WHERE CD.EMPLID = EMPLID
                   AND CD.EMPL_RCD = EMPL_RCD
                   AND CD.COBRA_EVENT_ID = COBRA_EVENT_ID
                   AND CD.PLAN_TYPE = PLAN_TYPE
                   AND CD.BENEFIT_NBR = BENEFIT_NBR
                   AND COVERAGE_BEGIN_DT  <= $asofdate)
END-SELECT

END-PROCEDURE Get-Cancel-Date

!*********************************************************************
!  Procedure to Get Revision Name
!*********************************************************************
BEGIN-PROCEDURE Get-Rev-Name
#debug9 show 'Get-Rev-Name'

BEGIN-SELECT
GHPP.TEXT254

  Let $rev_f_name = rtrim(substr(&GHPP.TEXT254,79,25),' ')
  Let $rev_l_name = rtrim(substr(&GHPP.TEXT254,129,35),' ')
  Let $rev_name = $rev_f_name||' '||$rev_l_name

FROM PS_GEX_BN_HMWEL_PR GHPP
WHERE GHPP.AGREEMENT_ID = $rev_agreement_id  
AND GHPP.SEQ_NBR       = #rev_seq_nbr
AND GHPP.GEX_REC_TYPE  = '100'
END-SELECT

END-PROCEDURE Get-Rev-Name

!*********************************************************************
!  Procedure to Revised Record Retain
!*********************************************************************
BEGIN-PROCEDURE Revised-Rec-Rtn
#debug9 show 'revised-rec-rtn'

    IF $rev_gex_rec_type = '100' 
      ADD 1 to #cancelled_ctr
      DO Create-Revised-Rec-100
    END-IF
    IF $rev_gex_rec_type = '110' 
      DO Create-Revised-Rec-110
    END-IF
    IF $rev_gex_rec_type = '115' 
      DO Create-Revised-Rec-115
    END-IF
    IF $rev_gex_rec_type = '130' 
      DO Create-Revised-Rec-130
    END-IF
    IF $rev_gex_rec_type = '135' 
      DO create-revised-rec-135
    END-IF

END-PROCEDURE Revised-Rec-Rtn

!*********************************************************************
!  Procedure to Create Revised Record 100
!*********************************************************************
BEGIN-PROCEDURE Create-Revised-Rec-100
#debug9 show 'Create-revised-rec-100'

  Move #rev_seq_nbr to $rev_seq_nbr
  Let $new_seq_nbr = '5' || $rev_seq_nbr
  Move $new_seq_nbr to #new_seq_nbr
  Let $rev_out1 = $rev_text254
  Let $rev_out2 = rpad($rev_out2,246,' ')   
  
  IF $hold_agreement_id <> $rev_agreement_id
    show $dashes
  END-IF
  IF substr($rev_seq_nbr,1,2) = '00'
    Let $rev_100_msg = 'Cancelled 100 rec for emp: '||
			 $rev_agreement_id||', group: '||$rev_group_nbr||
			',     name: '||$rev_name 
  ELSE
    Let $rev_100_msg = 'Cancelled 100 rec for emp: '||
			 $rev_agreement_id||', group: '||$rev_group_nbr||
			', dep name: '||$rev_name 
  END-IF
  DO Insert-Revised-Rec
  Let $hold_agreement_id = $rev_agreement_id

END-PROCEDURE Create-Revised-Rec-100

!*********************************************************************
!  Procedure to Create Revised Record 110
!*********************************************************************
BEGIN-PROCEDURE Create-Revised-Rec-110
#debug9 show 'Create-Revised-Rec-110'

  !Let #new_seq_nbr = 5 || #rev_seq_nbr
  Move #rev_seq_nbr to $rev_seq_nbr
  Let $new_seq_nbr = '5' || $rev_seq_nbr
  Move $new_seq_nbr to #new_seq_nbr
  Let $addr_cancel_dt = $rev_cancel_dt
  Let $rev_out1 = $rev_text254
  Let $rev_out2 = substr($rev_descr254,1,78)||$addr_cancel_dt
  Let $rev_out2 = rpad($rev_out2,246,' ')   
  
  IF $hold_agreement_id <> $rev_agreement_id
    show $dashes
  END-IF
  Let $rev_110_msg = 'Cancelled 110 rec for emp: '||
		 $rev_agreement_id||', group: '||$rev_group_nbr||
		',     name: '||$rev_name 
  DO Insert-Revised-Rec
  Let $hold_agreement_id = $rev_agreement_id

END-PROCEDURE Create-Revised-Rec-110

!*********************************************************************
!  Procedure to Create Revised Record 115
!*********************************************************************
BEGIN-PROCEDURE Create-Revised-Rec-115
#debug9 show 'Create-Revised-Rec-115'

  !Let #new_seq_nbr = 5 || #rev_seq_nbr 
  Move #rev_seq_nbr to $rev_seq_nbr
  Let $new_seq_nbr = '5' || $rev_seq_nbr
  Move $new_seq_nbr to #new_seq_nbr
  Let $elig_cancel_dt = $rev_cancel_dt
  Let $elig_cancel_code = '01' 
  Let $rev_out1 = substr($rev_text254,1,108)||$elig_cancel_dt||
		$elig_cancel_code||substr($rev_text254,121,15)||
		$report_date||substr($rev_text254,146,109)
  Let $rev_out2 = $rev_descr254
  Let $rev_out2 = rpad($rev_out2,246,' ')   
  
  IF $hold_agreement_id <> $rev_agreement_id
    show $dashes
  END-IF
  
  IF substr($rev_seq_nbr,1,2) = '00'
    Let $rev_115_msg = 'Cancelled 115 rec for emp: '||
			 $rev_agreement_id||', group: '||$rev_group_nbr||
			',     name: '||$rev_name 
  ELSE 
    Let $rev_115_msg = 'Cancelled 115 rec for emp: '||
		  	 $rev_agreement_id||', group: '||$rev_group_nbr||
			', dep name: '||$rev_name 
  END-IF
  DO Insert-Revised-Rec
  Let $hold_agreement_id = $rev_agreement_id

END-PROCEDURE Create-Revised-Rec-115

!*********************************************************************
!  Procedure to Create Revised Record 130
!*********************************************************************
BEGIN-PROCEDURE Create-Revised-Rec-130
#debug9 show 'Create-Revised-Rec-130'

  !Let #new_seq_nbr = 5 || #rev_seq_nbr
  Move #rev_seq_nbr to $rev_seq_nbr
  Let $new_seq_nbr = '5' || $rev_seq_nbr
  Move $new_seq_nbr to #new_seq_nbr
  Let $qual_cancel_dt = $rev_cancel_dt
  Let $rev_out1 = substr($rev_text254,1,94)||$qual_cancel_dt||
		substr($rev_text254,105,150)
  Let $rev_out2 = $rev_descr254
  
  IF $hold_agreement_id <> $rev_agreement_id
    show $dashes
  END-IF
  
  IF substr($rev_seq_nbr,1,2) = '00'
    Let $rev_130_msg = 'Cancelled 130 rec for emp: '||
			 $rev_agreement_id||', group: '||$rev_group_nbr||
			',     name: '||$rev_name 
  ELSE
    Let $rev_130_msg = 'Cancelled 130 rec for emp: '||
			 $rev_agreement_id||', group: '||$rev_group_nbr||
			', dep name: '||$rev_name 
  END-IF
  
  DO Insert-Revised-Rec
  Let $hold_agreement_id = $rev_agreement_id

END-PROCEDURE Create-Revised-Rec-130

!*********************************************************************
!  Procedure to Create Revised Record 135
!*********************************************************************
BEGIN-PROCEDURE Create-Revised-Rec-135
#debug9 show 'Create-Revised-Rec-135'

  IF $rev_seq_nbr = '0010'
    IF $cd_coverage_elect = 'W'
      Let $covrg_cancel_cd = '29'
    END-IF
    IF $cd_coverage_elect = 'T'
      Let $covrg_cancel_cd = '01'
      DO check-deceased
      IF $jj_empl_status = 'D'
        Let $covrg_cancel_cd = '06'
      END-IF
    END-IF
  ELSE
    IF $cd_coverage_elect = 'W'
      Let $covrg_cancel_cd = '29'
    ELSE
      Let $covrg_cancel_cd = '01'
    END-IF
  END-IF    

  !Let #new_seq_nbr = 5 || #rev_seq_nbr
  Move #rev_seq_nbr to $rev_seq_nbr
  Let $new_seq_nbr = '5' || $rev_seq_nbr
  Move $new_seq_nbr to #new_seq_nbr
  Let $covrg_cancel_dt = $rev_cancel_dt
  Let $rev_out1 = substr($rev_text254,1,93)||$covrg_cancel_dt||$covrg_cancel_cd||
		$report_date||substr($rev_text254,116,149)
  Let $rev_out2 = $rev_descr254
  
  IF $hold_agreement_id <> $rev_agreement_id
    show $dashes
  END-IF
  IF substr($rev_seq_nbr,1,2) = '00'
    Let $rev_135_msg = 'Cancelled 135 rec for emp: '||
			 $rev_agreement_id||', group: '||$rev_group_nbr||
			',     name: '||$rev_name 
  ELSE
    Let $rev_135_msg = 'Cancelled 135 rec for emp: '||
			 $rev_agreement_id||', group: '||$rev_group_nbr||
			', dep name: '||$rev_name 
  END-IF
  
  DO Insert-Revised-Rec
  Let $hold_agreement_id = $rev_agreement_id
  
END-PROCEDURE Create-Revised-Rec-135

!*********************************************************************
!  Procedure to Check Deceased
!*********************************************************************
BEGIN-PROCEDURE Check-Deceased
BEGIN-SELECT  
JJ.EMPL_STATUS

  Let $jj_empl_status = &JJ.EMPL_STATUS
  
FROM PS_JOB JJ
WHERE JJ.EMPLID = $cancel_emplid
AND JJ.EFFDT = (SELECT MAX(EFFDT)
		FROM PS_JOB
		WHERE EMPLID    = JJ.EMPLID
		AND   EMPL_RCD = JJ.EMPL_RCD
		AND   EFFDT    <= $asofdate)
END-SELECT

END-PROCEDURE Check-Deceased

!*********************************************************************
!  Insert revised rows into PS_GEX_BN_HMWEL_CR
!*********************************************************************
BEGIN-PROCEDURE Insert-Revised-Rec
#debug9 Show 'Insert-Revised-Rec'

BEGIN-SQL ON-ERROR=SQL-Error-Found('Insert-Revised-Rec')
INSERT INTO PS_GEX_BN_HMWEL_CR 
VALUES($rev_agreement_id,
       $rev_gex_rec_type,
       #new_seq_nbr,
       $rev_out1,
       $rev_out2)
END-SQL
  
  ADD 1 to #total_recs
  
  IF $rec_type = '100'
    ADD 1 to #total_100_recs
  END-IF
  
END-PROCEDURE  Insert-Revised-Rec

!*********************************************************************
!  Procedure to Select from PS_GEX_BN_HMWEL_CR
!*********************************************************************
BEGIN-PROCEDURE Select-From-Curr
#debug9 Show 'Select-From-Curr'
BEGIN-SELECT
CURR.GEX_REC_TYPE
CURR.TEXT254
CURR.DESCR254

  Let $field1 = &CURR.TEXT254
  Let $field2 = &CURR.DESCR254
  DO Write-Record
  
FROM PS_GEX_BN_HMWEL_CR CURR
ORDER BY AGREEMENT_ID,SEQ_NBR,GEX_REC_TYPE
END-SELECT

END-PROCEDURE Select-From-Curr

!*********************************************************************
! Write Record Information for High Mark File
!*********************************************************************
BEGIN-PROCEDURE Write-Record
#debug9 Show 'Write-Record'

write 1 from 
  $field1
  $field2 

END-PROCEDURE Write-Record

!*********************************************************************
! Open the file for writing              
!*********************************************************************
BEGIN-PROCEDURE Open-File
#debug9 Show 'Open-File'

Let $filename = '{OUTFILE}'||'gexbn621.dat'
open $filename as 1 for-writing record=500

IF #writestat != 0
   DISPLAY 'Error Opening output file.  Program terminating.'
   STOP
END-IF

END-PROCEDURE Open-File

!*********************************************************************
! Close the file               
!*********************************************************************
BEGIN-PROCEDURE Close-File
#debug9 Show 'Close-File'
  CLOSE 1

END-PROCEDURE Close-File

!*********************************************************************
!Displays the error messages and stops execution
!*********************************************************************
 
BEGIN-PROCEDURE SQL-Error-Found($Proc_Name) 

  show 'SQL Error in ' $Proc_Name 
  show '$_sql-error: ' $_sql-error
  show 'sql-status:  '  #_sql-status 

  STOP

END-PROCEDURE SQL-Error-Found

!*********************************************************************
!Procedure for Trailer Record
!*********************************************************************
BEGIN-PROCEDURE Create-Trailer-Rec
#debug9 Show 'Create-Trailer-Rec'
  
  ADD 1 to #total_recs		
  MOVE #total_recs to $total_recs 099999999
  MOVE #total_100_recs to $total_100_recs 099999999
  Let $agreement_nbr = '9999999990'
  Let $rec_type = '900'
  Let #seq_nbr = 0  
  Let $sender_id = 'Giant Eagle '
  Let $out1 = $40_spaces||$rec_type||$7_spaces||$total_recs||$9_spaces||
	$total_100_recs
  Let $out1 = rpad($out1,254,' ')
  Let $out2 = $246_spaces
  SUBTRACT 1 from #total_recs  

  DO Insert-Rec

END-PROCEDURE Create-Trailer-Rec

!*********************************************************************
! Procedure for Finalization               
!*********************************************************************
BEGIN-PROCEDURE Finalization
  
  MOVE #no_elect_ctr to $no_elect_display 99,999
  show ' Number of EEs with coverage_elect not Equal to E:  ' $no_elect_display
  show ' '    
  MOVE #cancelled_ctr to $cancelled_display 99,999
  show ' Number of employees and/or dependents cancelled:  ' $cancelled_display 
  show ' '
  MOVE #total_recs to $total_rec_display 99,999
  show ' Total records written to the file:  ' $Total_Rec_Display 
  show ' '
  date-time () MM/DD/YYYY &dayEnded
  date-time () hh:mi:ss &timeEnded

  show 'Report Ended on ' &dayEnded ' at ' &timeEnded
  DO Close-File
  
END-PROCEDURE Finalization
!*********************************************************************

#include 'askaod.sqc'    !Ask as of date
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#include 'gexxx920.sqc'  !Get ben single row run control