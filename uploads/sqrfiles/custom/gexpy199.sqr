!***********************************************************************
! GEXPY199:  General Deduction Inserts                                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY199 :            
!                                                                      *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Table             genl_deduction                                 *
!                                                                      *
! Written by:           Carl Buckrop                                   *
!                                                                      *
! Normally Run:         Manually, as needed                            *
!                                                                      *
!  This SQR is designed to copy specified general deductions from a    *
!  store when it changes companies. e.g. Independent to corporate.     *
!                                                                      *
! Control Parms:        AsOfDate                                       *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! CWB       08/01/2004  Initial creation                               *
!                                                                      *
! NRR       01/21/2007  Copy general deductions when company changes   *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup31.sqc'   !Printer and Page-Size Initialization (portrait)

#define #col_selection_criteria_a 	2
#define #col_selection_criteria_b 	5

#define #column1     5
#define #column2    17
#define #column3    26
#define #column4    34

!***********************************************************************
begin-heading 7

#Include 'stdhdg01.sqc'

 let $temp_out =  'Report as of ' || $asofdate_rpt 
 print $temp_out 	            (4,) center 
 
 Print 'General Deduction inserts:' (+2,) center

 print 'Emplid'	           (+2,{#column1})
 print 'Company'	   (0,{#column2})
 print 'Dedcd'             (0,{#column3})
 print 'Effdt'             (0,{#column4})

end-heading


!***********************************************************************

Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P400-Finalization
End-Report

Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXP199'
  Let $ReportTitle   =   'General Deduction Inserts'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  Let $GEXXX919_DEDCD_ALIAS   = 'GD.DEDCD'
  Let $GEXXX910_Emplid_alias  = 'j.emplid'                      !vendnrr  ITG - 43299 01/21/2008

 if $prcs_process_instance = ''
  Do Ask-As-Of-Date
 if rtrim($asofdate, ' ') = ''
    let $asofdate = $asoftoday
 else
    let $asofdate = rtrim($asofdate,' ')
 end-if

 display ' '
 input $old_company maxlen=10  type=char 'Enter the old company '
 if rtrim($old_company, ' ') = ''
    display ' '
    display 'Old company required.'
 else
    let $old_company = rtrim($old_company, ' ')
 end-if

 input $new_company maxlen=10  type=char 'Enter the new company '
 if rtrim($old_company, ' ') = ''
    display ' '
    display 'New company required.'
 else
    let $new_company = rtrim($new_company, ' ')
 end-if

 input $old_deptid maxlen=10  type=char 'Enter the old deptid '
 if rtrim($old_deptid, ' ') = ''
    display ' '
    display 'Old deptid required.'
 else
    let $old_deptid = rtrim($old_deptid, ' ')
 end-if

 input $new_deptid maxlen=10  type=char 'Enter the new deptid '
 if rtrim($new_deptid, ' ') = ''
    display ' '
    display 'New deptid required.'
 else
    let $new_deptid = rtrim($new_deptid, ' ')
 end-if

 input $new_effdt maxlen=10 type=char 'Enter the Effective date for the new rows (mm/dd/yyyy). If left blank, will default to the as of date.'
 if rtrim($new_effdt, ' ') = ''
    let $new_effdt = $asofdate 
    display ' '
 else
    let $new_effdt = rtrim($new_effdt,' ')
  Let $Year4 = '1'
   do Format-DateTime($new_effdt,$new_effdt,{Prompt-Mask},'','native')
 end-if

 input $update_date maxlen=10 type=char 'Enter the Update date for the new rows (mm/dd/yyyy). If left blank, will default to the as of date. '
 if rtrim($update_date, ' ') = ''
    let $update_date = $asofdate 
    display ' '
 else
    let $update_date = rtrim($update_date,' ')
  Let $Year4 = '1'
   do Format-DateTime($update_date,$update_date,{Prompt-Mask},'','native')
 end-if
  Let $DedCdString = ''''
  Display 'Enter Deduction Code or leave blank to exit.'
  While 1=1
    Input $In-DedCd Maxlen=6 'Deduction Code'
    Uppercase $In-DedCd
    If Rtrim($In-dedCd, ' ') = ''
      Concat '''' With $dedCdString
      Break
    End-If
    If $DedcdString <> ''''
      Concat ''',''' With $DedcdString
    End-If
    Concat $In-Dedcd With $DedCdString
  End-While
  If $DedcdString = ''''''
    Let $GEXXX919_INCLUDE_DEDCD_CRITERIA = '1=1'
    Let $GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX919_INCLUDE_DEDCD_CRITERIA = $GEXXX919_DEDCD_Alias || ' In (' || $DedcdString || ')'
    Let $GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA = $GEXXX919_INCLUDE_DEDCD_CRITERIA
  End-If
  
  !vendnrr  ITG - 43299 01/21/2008  start
  Let $EmplidString = ''''
  Display 'Enter Emplid or leave blank to exit.'
  While 1=1
    Input $In-Emplid Maxlen=6 'Deduction Code'
    Uppercase $In-Emplid
    If Rtrim($In-emplid, ' ') = ''
      Concat '''' With $emplidString
      Break
    End-If
    If $EmplidString <> ''''
      Concat ''',''' With $EmplidString
    End-If
    Concat $In-Emplid With $EmplidString
  End-While
  If $EmplidString = ''''''
    Let $GEXXX910_INCLUDE_EMPLID_CRITERIA = '1=1'
    Let $GEXXX910_INCLUDE_EMPLID_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX910_INCLUDE_EMPLID_CRITERIA = $GEXXX910_EMPLID_Alias || ' In (' || $EmplidString || ')'
    Let $GEXXX910_INCLUDE_EMPLID_DISPLAY_CRITERIA = $GEXXX910_INCLUDE_EMPLID_CRITERIA
  End-If
 
 !vendnrr  ITG - 43299 01/21/2008 end
 
else
  Do GEXXX922-Select-Parameters
  Let $AsOfDate = $GEX_RC_PAY.AsOfDate
  If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
    Let $AsOfDate = $AsOfToday
  End-If

  Let $old_company = $GEX_RC_PAY.from_company
  Let $old_deptid  = $GEX_RC_PAY.deptid_from

  Let $new_company = $GEX_RC_PAY.thru_company
  Let $new_deptid  = $GEX_RC_PAY.deptid_thru

  Let $new_effdt   = $GEX_RC_PAY.FromDate
    if rtrim($new_effdt, ' ') = ''
       let $new_effdt = $asofdate 
    else
       let $new_effdt = rtrim($new_effdt,' ')
    end-if
  Let $update_date = $GEX_RC_PAY.ThruDate
    if rtrim($update_date, ' ') = ''
      let $update_date = $asofdate 
    else
      let $update_date = rtrim($update_date,' ')
    end-if
    Do GEXXX919-Select-DEDCD-Parameters
    Do GEXXX910-Select-Emplid-Parameters                             !vendnrr  ITG - 43299 01/21/2008
end-if
  let $year4 = '1'
  do Format-DateTime($asofdate, $asofdate_rpt ,{DEFDATE}, '', '')
  let $year4 = '1'
  do Format-DateTime($new_effdt, $new_effdt_rpt ,{DEFDATE}, '', '')

  show ' ' 
  show 'As of Date: ' $asofdate
  show 'Old Company: ' $old_company
  show 'New Company: ' $new_company
  show 'Old deptid: '  $old_deptid
  show 'New deptid: '  $new_deptid
  show 'New effdt: '   $new_effdt
  show 'Update date: ' $update_date    
  show 'Dedcd Criteria: ' $GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA
  show '$GEXXX910_INCLUDE_EMPLID_CRITERIA = ' $GEXXX910_INCLUDE_EMPLID_CRITERIA      !vendnrr  ITG - 43299 01/21/2008
  show ' '
  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan
  show ' '
  print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'  (+5,{#col_selection_criteria_a})
  print '$Prcs_OPRID          = '                       (+1,{#col_selection_criteria_b})
  print $Prcs_OPRID                                     (0,+2)
  print '$PRCS_RUN_CNTL_ID    = '                       (+1,{#col_selection_criteria_b})
  print $PRCS_RUN_CNTL_ID                               (0,+2)

  print 'SELECTION CRITERIA FOR THIS REPORT RUN:'       (+5,{#col_selection_criteria_a})
  print 'As of Date: '                                  (+1,{#col_selection_criteria_b})
  print $asofdate                                       (0,+2)
  print 'Old Company: '                                 (+1,{#col_selection_criteria_b}) 
  print $old_company                                    (0,+2) 
  print 'New Company: '                                 (+1,{#col_selection_criteria_b})  
  print $new_company                                    (0,+2)
  print 'Old deptid: '                                  (+1,{#col_selection_criteria_b})
  print $old_deptid                                     (0,+2)    
  print 'New deptid: '                                  (+1,{#col_selection_criteria_b})
  print $new_deptid                                     (0,+2) 
  print 'New effdt: '                                   (+1,{#col_selection_criteria_b})
  print $new_effdt                                      (0,+2)
  print 'Update date: '                                 (+1,{#col_selection_criteria_b}) 
  print $update_date                                    (0,+2)  
  print 'Dedcd Criteria: '                              (+1,{#col_selection_criteria_b})
  print $GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA        (0,+2) 
  print 'Emplid Criteria: '                             (+1,{#col_selection_criteria_b})        !vendnrr  ITG - 43299 01/21/2008
  print $GEXXX910_INCLUDE_EMPLID_DISPLAY_CRITERIA       (0,+2)                                  !vendnrr  ITG - 43299 01/21/2008
  show ' '

 LET #PAGE-COUNT = 0
 NEW-PAGE
 LET #PAGE-COUNT = 1

end-procedure  

Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'          
Begin-Select On-Error=P290-SQL-Error('P200-Main-Process')
gd.EMPLID
gd.DEDCD                  
gd.EFFDT                  
gd.DED_CALC
gd.DEDUCTION_END_DT
gd.DED_ADDL_AMT        
gd.DED_RATE_PCT           
gd.GOAL_AMT               
gd.GOAL_BAL               
gd.LOAN_INT_PCT           
gd.BAS_TAXABLE_BEN        
gd.DED_STOPPED            
gd.LAST_ACTION            
gd.LAST_UPDATE_DATE       
gd.COMPANY                
gd.PROCESS_DEDN           
gd.GVT_DED_DIST_CD        
gd.GVT_PYMNT_METHOD       
gd.GVT_CHK_NAME           
gd.GVT_ADDRESS1           
gd.GVT_ADDRESS2           
gd.GVT_ADDRESS_CITY       
gd.GVT_ADDRESS_STATE
gd.GVT_ADDRESS_ZIP        
gd.GVT_ADDRESS_CNTRY
gd.BANK_CD                
gd.ACCOUNT_NUM            
gd.ACCOUNT_TYPE           
gd.GVT_PAYEE_ID_NO        
gd.GVT_PAYEE_NAME         
gd.GVT_ALLOT_PB
j.emplid
j.empl_rcd
j.empl_status
j.company

    let $Data-Found-Flag = 'Y'
    add 1 to #rows-selected
    do check-genl-ded-cd
    if $genl_ded_cd_found = 'N'
      do genl-ded-cd-insert
    end-if
    do insert-genl-deduction               
    do print-report-line

From   ps_genl_deduction gd, ps_job j

Where  j.emplid          = gd.emplid

And    j.effdt           =
      (Select Max(effdt)
       From   ps_job
       Where  emplid     = j.emplid
       And    empl_rcd   = j.empl_rcd
       and    company    = $old_company
       And    effdt     <= $AsOfDate)

And    j.effseq          =
      (Select Max(effseq)
       From   ps_job
       Where  emplid     = j.emplid
       And    empl_rcd   = j.empl_rcd
       and    company    = $old_company
       And    effdt      = j.effdt)

And    gd.effdt           =
      (Select Max(effdt)
       From   ps_genl_deduction
       Where  emplid     = gd.emplid
       and    dedcd      = gd.dedcd
       and    company    = $old_company
       And    effdt     <= $AsOfDate)

And    j.deptid  = $old_deptid

!And    j.empl_status in ('A','L','P','S')                  !vendnrr

And    [$GEXXX919_INCLUDE_DEDCD_CRITERIA]
And    [$GEXXX910_INCLUDE_EMPLID_CRITERIA]                  !vendnrr  ITG - 43299 01/21/2008
      
And ((rtrim(gd.deduction_end_dt,' ') is null)  or (gd.deduction_end_dt > $AsOfDate))
And ((gd.goal_amt = 0 and gd.goal_bal = 0) or (gd.goal_amt <> gd.goal_bal))

and exists(
select 'X'
from ps_job jj
where jj.company = $new_company
and jj.emplid = j.emplid
and jj.deptid = $new_deptid
And    jj.effdt           =
      (Select Max(effdt)
       From   ps_job
       Where  emplid     = jj.emplid
       And    empl_rcd   = jj.empl_rcd
       And    effdt     <= $AsOfDate)
And    jj.effseq          =
      (Select Max(effseq)
       From   ps_job
       Where  emplid     = jj.emplid
       And    empl_rcd   = jj.empl_rcd
       And    effdt      = jj.effdt))

End-Select
End-Procedure

Begin-Procedure Check-Genl-Ded-Cd
#debug9 Show 'Check-Genl-Ded-Cd'

let $genl_ded_cd_found = 'N'

begin-select On-Error=P290-SQL-Error('Check-Genl-Ded-Cd')
'Z'
  let $genl_ded_cd_found = 'Y'

from ps_genl_ded_cd
where emplid =	&gd.emplid
and dedcd = &gd.dedcd
and company = $new_company
end-select

end-procedure

Begin-Procedure Genl-Ded-Cd-Insert
#debug9 Show 'Genl-Ded-Cd-Insert'
  Begin-SQL On-Error=P290-SQL-Error('Insert into ps_genl_ded_cd')
    Insert Into ps_genl_ded_cd
	Values (&gd.emplid,
		&gd.dedcd,
                $new_company)
  End-SQL

  Add 1 To #gdc-rows-inserted
End-Procedure


Begin-Procedure Insert-Genl-Deduction
#debug9 Show 'Insert-Genl-Deduction'

  Begin-SQL On-Error=P290-SQL-Error('Insert into ps_genl_deduction')
    Insert Into ps_genl_deduction
	(EMPLID,                 
	 DEDCD,                  
	 EFFDT,                  
	 DED_CALC,               
	 DEDUCTION_END_DT,       
	 DED_ADDL_AMT,           
	 DED_RATE_PCT,           
	 GOAL_AMT,               
	 GOAL_BAL,               
	 LOAN_INT_PCT,           
	 BAS_TAXABLE_BEN,        
	 DED_STOPPED,            
	 LAST_ACTION,            
	 LAST_UPDATE_DATE,       
	 COMPANY,                
	 PROCESS_DEDN,           
	 GVT_DED_DIST_CD,        
	 GVT_PYMNT_METHOD,       
	 GVT_CHK_NAME,           
	 GVT_ADDRESS1,           
	 GVT_ADDRESS2,           
	 GVT_ADDRESS_CITY,       
	 GVT_ADDRESS_STATE,
	 GVT_ADDRESS_ZIP,        
	 GVT_ADDRESS_CNTRY,
	 BANK_CD,                
	 ACCOUNT_NUM,            
	 ACCOUNT_TYPE,           
	 GVT_PAYEE_ID_NO,        
	 GVT_PAYEE_NAME,         
         GVT_ALLOT_PB)
         values
 	 (&gd.EMPLID,                 
	 &gd.DEDCD,                  
	 $new_effdt,                  
	 &gd.DED_CALC,               
	 &gd.DEDUCTION_END_DT,       
	 &gd.DED_ADDL_AMT,           
	 &gd.DED_RATE_PCT,           
	 &gd.GOAL_AMT,               
	 &gd.GOAL_BAL,               
	 &gd.LOAN_INT_PCT,           
	 &gd.BAS_TAXABLE_BEN,        
	 &gd.DED_STOPPED,            
	 'C',            
         $update_date,
	 $new_company,                
	 &gd.PROCESS_DEDN,           
	 &gd.GVT_DED_DIST_CD,        
	 &gd.GVT_PYMNT_METHOD,       
	 &gd.GVT_CHK_NAME,           
	 &gd.GVT_ADDRESS1,           
	 &gd.GVT_ADDRESS2,           
	 &gd.GVT_ADDRESS_CITY,       
	 &gd.GVT_ADDRESS_STATE,
	 &gd.GVT_ADDRESS_ZIP,        
	 &gd.GVT_ADDRESS_CNTRY,
	 &gd.BANK_CD,                
	 &gd.ACCOUNT_NUM,            
	 &gd.ACCOUNT_TYPE,           
	 &gd.GVT_PAYEE_ID_NO,        
	 &gd.GVT_PAYEE_NAME,         
	 &gd.GVT_ALLOT_PB)
  End-SQL

  Add 1 To #gd-rows-inserted
End-Procedure

begin-procedure Print-Report-Line
#debug9 Show 'Print-Report-Line'

  print &gd.emplid      (+1,{#column1})
  print $new_company    (0,{#column2})
  print &gd.dedcd       (0,{#column3})
  print $new_effdt_rpt  (0,{#column4})  

end-procedure

Begin-Procedure P290-SQL-Error($Action)
#debug9 Show 'P290-SQL-Error'
  Show $Action ' failed'
  Show 'SQL Error:  '  $_sql-error
  Stop
End-Procedure

Begin-Procedure P400-Finalization
#debug9 Show 'P400-Finalization'
  
  show '&gd.EMPLID:' &gd.EMPLID
  show '&gd.DEDCD :' &gd.DEDCD
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (25,) Center
  End-If

  Show ' '

  Move #rows-selected To $rows-selected 888,888,888
  Show $rows-selected ' rows selected from ps_genl_ded_cd table'

  Show ' '

  Move #gdc-rows-inserted To $gdc-rows-inserted 888,888,888
  Show $gdc-rows-inserted ' rows inserted into ps_genl_ded_cd'

  Show ' '

  Move #gd-rows-inserted To $gd-rows-inserted 888,888,888
  Show $gd-rows-inserted ' rows inserted into ps_genl_deduction table'

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show ' '
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'
End-Procedure

#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record
#include 'gexxx919.sqc'  !Get dedcd multiple rows from GEX_RC_DEDCD
#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#include 'gexxx910.sqc'  !Get Emplid                                    !vendnrr
