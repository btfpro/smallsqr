!***********************************************************************
! GEXPY136:  RESET FLSA STATUS ON PS_JOB                               *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY136:             RESET FLSA STATUS ON PS_JOB REPORT             *
!                                                                      *
! Narrative:            This program updates FLSA_STATUS on the        *
!                       max effective dated job row. It sets the status*
!                       to 'N' - non exempt for thos EEs who are now   * 
!                       exempt, but have a compensation frequency of   *
!                       'H' - hourly. 
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    * 
!                       #debug7 data returned from sql calls           * 
!                                                                      *
! SQL Tables:           PS_JOB                                         * 
!                       PS_PERSONAL_DATA                               *
!                       PS_JOBCODE_TBL                                 *
!                                                                      *
! Written by:           Carl Buckrop                                   *                                                           
!                                                                      *
! Normally run:                                                        *
!                                                                      *
! Entered Run                                                          *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                       AsOfDate                                       *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE         DESCRIPTION OF THE CHANGE          *
!***********************************************************************
!            CWB       04/04/2003    Initial creation.                 *
!                                                                      *
!            CWB       04/23/2003    Mods to EMPL_RCD for 8.3          *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 

#define #x000_col_selection_criteria_a  02
#define #x000_col_selection_criteria_b  05

!line 1
#define #x000_col_name                  01
#define #x000_col_emplid                30
#define #x000_col_company               41
#define #x000_col_paygroup              49
#define #x000_col_deptid                59
#define #x000_col_compfreq              70
#define #x000_col_jobcode               84
#define #x000_col_jobdescr              96

!*********************************************************************
begin-report
!*********************************************************************
#debug9 show 'begin-report'

  do Initialization
  do select-employees
  do EOJ

end-report

!***********************************************************************
begin-heading 09
!***********************************************************************

#debug9 show 'begin-heading'

 #Include 'stdhdg01.sqc'

  let $x000_header_1 = 'Employees who have had their FLSA Status Reset to ''N'''
  print $x000_header_1       (3,) center
!  print $x000_header_2       (+1) center

  print '-' (+2,1,174) fill
  print 'Employee Name'       (+2,{#x000_col_name})     bold 
  print 'Emplid'              (0,{#x000_col_emplid})    bold 
  print 'Company'             (0,{#x000_col_company})   bold 
  print 'Paygroup'            (0,{#x000_col_paygroup})  bold 
  print 'Deptid'              (0,{#x000_col_deptid})    bold 
  print 'Comp Freq'           (0,{#x000_col_compfreq})  bold 
  print 'Job Code'            (0,{#x000_col_jobcode})   bold 
  print 'Job Description'     (0,{#x000_col_jobdescr})  bold 

  print '-' (+1,1,174) fill
 
end-heading  

!***********************************************************************
begin-procedure Initialization
!***********************************************************************
#debug9 show 'Initialization'

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
     show 'asoftoday=' $asoftoday
  do stdapi-init
  
  let #empl-count = 0

  let $X000_ORDER_BY = 'J.COMPANY, J.PAYGROUP, J.DEPTID, J.EMPLID'
  
  !AXL 12/6/2000 Determine AsOfDate before date processing begins - Begin 
  if $Prcs_process_instance = ''
     Do Ask-As-Of-Date
     Let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate
  else
     Do GEXXX922-Select-Parameters
     Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
  end-if

  if rtrim($X000_WHERE_SELECT_ASOFDATE, ' ' ) = ''
     let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
  end-if

  Let $asofdate = $X000_WHERE_SELECT_ASOFDATE

  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  let $ReportID           = 'GEXPY136'
  let $ReportTitle        = 'RESET FLSA STATUS'                                     
  let $Country            = 'USA'

  show '$ReportID= '     $ReportID
  show '$ReportTitle = ' $ReportTitle   
    
  show '$X000_WHERE_SELECT_ASOFDATE        ='  $X000_WHERE_SELECT_ASOFDATE 

  do Print-Cover-Page
  new-page

end-procedure

!***********************************************************************
Begin-Procedure Print-Cover-Page
!***********************************************************************

   print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
   print '$Prcs_OPRID          ='                              (+2,{#x000_col_selection_criteria_b})
   print $Prcs_OPRID                                           (0,+2)
   print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
   print $PRCS_RUN_CNTL_ID                                     (0,+2)

   print 'SELECTION CRITERIA FOR THIS REPORT RUN:'           (+5,{#x000_col_selection_criteria_a})
   print '$X000_WHERE_SELECT_ASOFDATE                     ='   (+1,{#x000_col_selection_criteria_b})
   print  $X000_WHERE_SELECT_ASOFDATE                          (0,+2)
   print '$X000_ORDER_BY                                  =' (+2,{#x000_col_selection_criteria_b})
   print $X000_ORDER_BY    (0,+2)

   let #page-count=0 

end-procedure

!********************************************************************
begin-procedure Select-employees
!********************************************************************
#debug9 show 'Select-employees'

begin-select ON-ERROR=SQL-Error-Found('select-employees')

P.NAME
J.EMPLID                         
J.EMPL_RCD                                   
J.EFFSEQ
J.EFFDT
J.EMPL_STATUS
J.COMPANY                        
J.PAYGROUP                       
J.DEPTID
J.JOBCODE
C.DESCR
J.FLSA_STATUS 
J.COMP_FREQUENCY
J.POSITION_NBR

  #debug8 show 'emplid/flag , ttl hrs ' ' ' &j.emplid ' ' $process_flag  ' '#total_hours
  
  let $x100_Get_Employees_Data_Flag = 'Y'

  add 1 to #ee_count
  do  update-job-row
  do  print-employee

FROM   PS_JOB     J,
       PS_JOBCODE_TBL C,
       PS_PERSONAL_DATA P

WHERE  J.FLSA_STATUS      IN ('A','E','M','O','P')
AND    J.COMP_FREQUENCY   = 'H'
and    j.empl_status in ('A','L','P','S')
and    substr(j.deptid,1,1) <> 'C'
AND    J.EFFDT           =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID       = J.EMPLID
       AND    EMPL_RCD     = J.EMPL_RCD
       AND    EFFDT       <= $ASOFDATE)

AND    J.EFFSEQ          =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID       = J.EMPLID
       AND    EMPL_RCD     = J.EMPL_RCD
       AND    EFFDT        = J.EFFDT)

AND    P.EMPLID     = J.EMPLID

AND    C.SETID      = 'COMMN'
AND    C.JOBCODE    = J.JOBCODE
AND    C.EFF_STATUS = 'A'
AND    C.EFFDT    =
       (SELECT MAX(C1.EFFDT)	
       FROM PS_JOBCODE_TBL C1
       WHERE C.SETID = C1.SETID
       AND C.JOBCODE = C1.JOBCODE
       AND C.EFF_STATUS = C1.EFF_STATUS
       AND C1.EFFDT <= $ASOFDATE) 
ORDER BY J.COMPANY,J.PAYGROUP,J.DEPTID,J.EMPLID
end-select


  if $x100_Get_Employees_Data_Flag = 'N'
    print 'NO DATA SELECTED FOR THIS REPORT RUN'    (25,) CENTER
  end-if

end-procedure

!********************************************************************
Begin-Procedure Update-Job-Row
!********************************************************************
  
Begin-SQL
Update PS_JOB
SET FLSA_STATUS	=       'N'
WHERE EMPLID 	= 	&j.emplid
  AND EMPL_RCD  = 	&j.EMPL_RCD
  AND EFFSEQ    =       &j.effseq
  AND EFFDT     =       &j.effdt
end-sql

   If #sql-status = 0
      Let #update_count = #update_count + #sql-count
   else
      Show 'Record did not update - ' $EMPLID
   End-if

end-procedure

!********************************************************************
begin-procedure Print-Employee
!********************************************************************
 
  print &p.name            (+1,1)
  print &j.emplid          (0,30)
  print &j.company         (0,42)
  print &j.paygroup        (0,51)
  print &j.deptid          (0,62)  
  print &j.comp_frequency  (0,74)
  print &j.jobcode         (0,84)
  print &c.descr           (0,96)  

end-procedure

!********************************************************************
begin-procedure SQL-Error-Found($Proc_Name) 
!********************************************************************
  do error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
end-procedure

!********************************************************************
begin-procedure Error-Found
!********************************************************************
  move 'Y' to $ErrorFound
  do Format-Number(#InputTran, $out, '99999')
  print $out (+1,1)
  !GEX_SEC_REENG Vahini Katta 09/18/2016 Begins
  !let $EmplId_1st3 = substr($EmplId,1,3)
  !let $EmplId_mid2 = substr($EmplId,4,2)
  !let $EmplId_last4 = substr($EmplId,6,4)
 
  !String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  !print $EmplID11 (,8)
  print $EmplId (,8)
  !GEX_SEC_REENG Vahini Katta 09/18/2016 Ends
end-procedure

!***********************************************************************
Begin-Procedure EOJ
!***********************************************************************
 
  do stdapi-term
  Do Reset			
  
  let #records_processed = #ee_count 
  date-time () hh:mi:ss &timeProcess
  display #records_processed 99999 noline
  display ' Transactions Processed: ' noline
  display &timeProcess

  Show 'Successful end of report'

end-procedure

#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions

#Include 'gexxx950.sqc'  !Get SQRW run controls
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 

