!***********************************************************************
!  GEXPY016 - Giant Eagle-Check Writer Control Listing(Checks)
!  (Previously PAY004:  Payroll Check Register)
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1988-1996 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!  (Previously PAY004.sqr)                                             *
!  $Date:: 11/15/96 6:01p   $                                          * 
!  $Revision:: 11               $                                      *
!  $Workfile:: PAY004.SQR       $                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!  GEXPY17A - Giant Eagle-Check Writer Control Listing                 *
!                                                                      *
! Entered Run                                                          *
! Control Parm:		Uses the Payroll-Report-Initialization sqc     *
!                                                                      *
! SQL Tables:		PS_PAY_CALENDAR A                              *
!				PS_PAY_CHECK    B                      *
!				PS_PAY_DISTRIBUTN PD		       *
!                                                                      *
! Written by:		Dave Herzog-SoftLink Inc.  02-12-98            *
!                                                                      *
! Normally Run:		After each confirmed pay period.               *
!***********************************************************************
!  				MODIFICATION LOG                       *
!                                                                      *
!  12-29-97 Dave Herzog-Soft Link Inc.  Modified the delivered sqr as  *
!                                     per specification supplied by    *
!                                     Giant Eagle.  Tagged lines with  *
!                                     modified lines with GEX001.      *
!                                                                      *
!  01/21/99   JDH                     Removed Department column        *
!                                     Removed Location column          *
!                                     Removed Locn Code column         *
!                                     Added Acct Cd column             *
!                                                                      *
!  06/05/2000 SXC                     Fixed a problem when an empl who *
!                                     has a check advice when an       *
!                                     adjustment is processed, its     *
!                                     showing up on the Payroll/Check  *
!                                     register.                        *
!                                                                      *
!  11/06/2000 CWB                     Added summary report of beginning*
!                                     and ending Deposit Advice numbers*
!  08/10/2002			      changed field names Page#, line# *
!				      check# . Upgrade 8.3             *
!                                                                      * 
!  08/08/2007  SXD                       Addded the code for calling   *   
!                                      read-translate table procedure  * 
!***********************************************************************

#include 'setenv.sqc'  !Set environment
! SXD   PY187       08/08/2007   start
#include 'readxlat.sqc'  !Read-Translate-Table procedure 
!                                end  
! #include 'ptset02.sqc' !Printer and page-size initialization
!CWB 11/04/2000 Begin
!#include 'setup02.sqc' !Printer and page-size initialization
!CWB 11/04/2000 End

begin-setup
#include 'ptset02.sqc' !Printer and page-size initialization
!
!
!#Include 'ldadropt.sqc'  !Load-LookUp Table with PayCheck Address Options

!CWB 11/04/2000 Begin


declare-report detail-report
Printer-Type=HPLASERJET
  layout=default
end-declare

declare-report summary-report
Printer-Type=HPLASERJET
  layout=default
end-declare
!CWB 11/04/2000 End

end-setup

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
!  move 'PAY004' to $ReportID				!GEX001-del
!  move 'GEXPY016' to $ReportID			        !GEX001-add;  CWB - 10/12/2000 move
  show $ReportID					!GEX001-add

  let $000-skip-line-flag = 'Y' 			!GEX001-add

#ifdef USA
  move 'Payroll Check Register' to $ReportTitle
  show $ReportTitle					!GEX001-ADD

#endif

#ifdef CANADA
  move 'Payroll Cheque Register' to $ReportTitle
#endif

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Payroll-Report-Initialization
 
!GEX001-add #DEBUG statements 
  #debug7 show '#SlctPageFrom=' #SlctPageFrom ' #SlctPageThru=' #SlctPageThru
  #debug7 show '$SlctOffCycleA=' $SlctOffCycleA ' $SlctOffCycleB=' $SlctOffCycleB
  #debug7 show '$SlctRunID=' $SlctOffCycleB ' $SlctCompany=' $SlctCompany ' $SlctPayGroup=' $SlctPayGroup
  #debug7 show '$SlctCalendar=' $SlctCalendar
   

end-procedure

!begin-heading 7

!CWB 11/06/2000 Begin							
begin-heading 8 for-reports=(detail-report)
!CWB 11/06/2000 End

  move 'GEXPY016' to $ReportID			!GEX001-add
  #Include 'stdhdgpi.sqc'
  #Include 'stdhdg02.sqc'
  print 'Paygroup:'				(+1,1)	!GEX001-add			
  print $x000_paygroup				(0,13)	!GEX001-add
!  print 'Deptid:'				(+1,1)	!GEX001-add/del
!  print $deptid					(0,13)	!GEX001-add/del
!  print 'Form ID: '                     	(+1,1)	!GEX001-del
!  print $Form_ID                          (0,13)	!GEX001-del
  print '                                                Sep                 ' (+2,1)
  print '                                                     ' ()
  print 'Pay   Address'                           ()

#ifdef USA
  print 'Check No.           Check Date   Check Amount   Chk  Employee Name  ' (+1,1)
#endif

#ifdef CANADA
  print 'Cheque No.          Cheque Date  Cheque Amount  Chk  Employee Name  ' (+1,1)
#endif

  print '                Employee ID  Dept. ID    Acct Cd' ()
  print '   Group  Option      '                               ()
end-heading

!CWB 11/06/2000 Begin
begin-heading 5 for-reports=(summary-report)
  move 'PY016CKS' to $ReportID			
  #Include 'stdhdgpi.sqc'
  #Include 'stdhdg02.sqc'
  print 'Beginning Nbr'      (+2,10)
  print 'Ending Nbr'         (+0,30)
  print 'Number of Forms'    (+0,50)
end-heading
!CWB 11/06/2000 End

begin-procedure Report

 let $x100_Get_Employees_Data_Flag = 'N'

!CWB 11/06/2000 Begin
 let $deptid_begin_nbr_flag = 'N' 
 let $paygroup_begin_nbr_flag = 'N' 
 let $company_begin_nbr_flag = 'N' 
!CWB 11/06/2000 End
show '$SlctOffCycleA=' $SlctOffCycleA   ' $SlctOffCycleB='  $SlctOffCycleB
   show '$SlctCalendar=' $SlctCalendar
begin-SELECT
A.COMPANY () on-break print=never after=Company-Change 
					before=Company-Before-Change			!GEX001-add
					level=01						!GEX001-add
                                        save=$prev_company 
B.PAYGROUP () on-break print=never after=Paygroup-Change			!GEX001-add
					before=Paygroup-Before-Change			!GEX001-add
					level=02						!GEX001-add
                                        save=$prev_paygroup 
B.DEPTID ()	 on-break print=never after=Deptid-Change				!GEX001-add
					before=Deptid-Before-Change			!GEX001-add
					level=03						!GEX001-add
B.FORM_ID () on-break print=never after=FormID-Change
					before=FormID-Before-Change			!GEX001-add
					level=04						!GEX001-add
B.PAYCHECK_NBR
B.CHECK_DT
B.NET_PAY
B.SEPCHK
B.NAME
B.EMPLID
B.EMPL_RCD
!B.DEPTID				!GEX001-move
B.LOCATION
!B.PAYGROUP				!GEX001-move
B.PAY_END_DT
B.PAYCHECK_OPTION
B.OFF_CYCLE,B.PAGE_NUM,B.LINE_NUM
B.PAYCHECK_ADDR_OPTN
B.PAY_SHEET_SRC

!  move &B.Form_ID to $Form_ID				!GEX001-move
  move &B.PayCheck_Option to $PayCheck_Option

#ifdef DB2ALL
  move &B.PayCheck_Addr_Optn to $PayCheck_Addr_Optn xxxx
#else
#ifdef MICROSOFT
  move &B.PayCheck_Addr_Optn to $PayCheck_Addr_Optn xxxx
#else
  move &B.PayCheck_Addr_Optn to $PayCheck_Addr_Optn
#endif
#endif

  move &B.Net_Pay to #NetPay

  do Get-Job-Data

  if &B.PayCheck_Option = '&'
    do Get-Pay-Distribution
    subtract #Deposit_Total from #NetPay
  end-if

  if &B.PayCheck_Option = 'R'
        do Get-Original-Check

  ! SXC 06/05/2000 Begin   Commented the following 2 lines
    !if $PayCheck_Option = '&'               
    !  move #Check_Amount to #NetPay
    !end-if
  ! SXC 06/05/2000 End

  end-if

  if $PayCheck_Option <> 'A'
    do Print-Line
  end-if

 let $x100_Get_Employees_Data_Flag = 'Y'

FROM  PS_PAY_CALENDAR A,
      PS_PAY_CHECK    B
WHERE [$SlctCalendar]

  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND B.COMPANY          = A.COMPANY
  AND B.PAYGROUP         = A.PAYGROUP
  AND B.PAY_END_DT       = A.PAY_END_DT
  AND B.PAYCHECK_OPTION <> 'A'
ORDER BY A.COMPANY,
         B.PAYGROUP,			!GEX001-add
	 B.DEPTID,			!GEX001-add
         B.FORM_ID,
         B.PAYCHECK_NBR
end-SELECT

!  move 1 to #level			!GEX001-add
!  do Company-Change			!GEX001-add
!  new-page					!GEX001-add/del

 if $x100_Get_Employees_Data_Flag = 'N'
  print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) CENTER
 else

  print 'Grand Totals:  ' (+2,1)	
  do Format-Number(#GrandNetPay, $out, '$,$$$,$$$,$$9.99')
  print $out      (0,28)
  do Format-Number(#GrandChecks, $out, '999,999')
  print $out      (0,+2)
  if #GrandChecks <> 1

#ifdef USA
    print 'Checks '        (0,+1)
#endif

#ifdef CANADA
    print 'Cheques'        (0,+1)
#endif

  else

#ifdef USA
    print 'Check  '        (0,+1)
#endif

#ifdef CANADA
    print 'Cheque '        (0,+1)
#endif

  end-if

  do Format-Number(#GrandReversals, $out, '999,999')
  print $out   (0,+2)

  if #GrandReversals <> 1
    print 'Reversals'     (0,+1)
  else
    print 'Reversal '     (0,+1)
  end-if

 end-if

  do Reset

end-procedure

begin-procedure Get-Job-Data
begin-select
j.acct_cd

From   ps_job j

Where  j.emplid    = &b.emplid
And    j.empl_rcd = &b.empl_rcd

And    j.effdt                   =
      (Select Max(effdt)
       From   ps_job
       Where  emplid             = j.emplid
       And    empl_rcd          = j.empl_rcd
       And    effdt             <= &b.pay_end_dt)

And    j.effseq                  =
      (Select Max(effseq)
       From   ps_job
       Where  emplid             = j.emplid
       And    empl_rcd          = j.empl_rcd
       And    effdt              = j.effdt)
end-select
end-procedure

begin-procedure Print-Line

  if $000-skip-line-flag = 'Y' 	 		!GEX001-add
  	let $000-skip-line-flag = 'N' 		!GEX001-add
	print ' '				(+1,1)	!GEX001-add
  end-if							!GEX001-add

!CWB 11/04/2000 Begin
  if $deptid_begin_nbr_flag = 'N'
     if &b.paycheck_nbr <> 0
       move &b.paycheck_nbr to $deptid_begin_nbr  999999999 
       let $deptid_begin_nbr_flag = 'Y'
     end-if
  end-if
  if &b.paycheck_nbr <> 0
     move &b.paycheck_nbr to $deptid_end_nbr  999999999 
     add 1 to #deptid_tot_checks
  end-if
  
  if $paygroup_begin_nbr_flag = 'N'
     if &b.paycheck_nbr <> 0
       move &b.paycheck_nbr to $paygroup_begin_nbr  999999999 
       let $paygroup_begin_nbr_flag = 'Y'
     end-if
  end-if
  if &b.paycheck_nbr <> 0
     move &b.paycheck_nbr to $paygroup_end_nbr  999999999 
     add 1 to #paygroup_tot_checks
  end-if

  if $company_begin_nbr_flag = 'N'
     if &b.paycheck_nbr <> 0
       move &b.paycheck_nbr to $company_begin_nbr  999999999 
       let $company_begin_nbr_flag = 'Y'
     end-if 
  end-if
  if &b.paycheck_nbr <> 0
     move &b.paycheck_nbr to $company_end_nbr  999999999 
     add 1 to #company_tot_checks
  end-if
!CWB 11/04/2000 End
     
  print &B.paycheck_nbr          (+1,2)  edit 09999999
  if &B.Pay_Sheet_Src = 'O'
     print 'On-line'       (0,12)
  end-if
  do Format-DateTime(&B.Check_Dt, $out, {DEFDATE}, '', '')
  print $out               (0,21)

  if &B.SepChk <> 0
    print &B.SepChk        (0,47)
  end-if

  print &B.Name            (0,54,30)
  print &B.EmplID          (0,85)
  print &B.DeptID          (0,98)
  print &J.Acct_Cd         (0,112)

  print &B.PayGroup        (0,121)

!  move &A.Company  to $Company				!GEX001-move
  move &B.Check_Dt to $AsOfDate  !for included procedures
!  move &B.DeptID   to $DeptID				!GEX001-move

#ifdef DB2ALL
  move &B.PayCheck_Addr_Optn to $PayCheck_Addr_Optn xxxx
#endif
#ifdef MICROSOFT
  move &B.PayCheck_Addr_Optn to $PayCheck_Addr_Optn xxxx
#endif

!  LookUp Address-Options $PayCheck_Addr_Optn $AddressOption
!PY187    SXD      08/08/2007      start 
let $FieldName  = 'PAYCHECK_ADDR_OPTN'  
let $FieldValue = $PayCheck_Addr_Optn  
do Read-Translate-Table  
move $XLatShortName to $AddressOption
!                                end    

  print $AddressOption            (0,127)

  do Format-Number(#NetPay, $out, '99,999,999.99')
  print $out              (0,31)
  add #NetPay    to #TotalNetPay
  add #NetPay    to #x000_Paygroup_TotalNetPay			!GEX001-add
  add #NetPay    to #x000_Deptid_TotalNetPay			!GEX001-add
  add #NetPay    to #x000_FormID_TotalNetPay			!GEX001-add

  if &B.PayCheck_Option = 'R'
    add 1           to #TotalReversals
    add 1	        to #x000_Paygroup_TotalReversals		!GEX001-add
    add 1           to #x000_Deptid_TotalReversals		!GEX001-add
    add 1           to #x000_FormID_TotalReversals		!GEX001-add
  else
    add 1           to #TotalChecks
    add 1	    to #x000_Paygroup_TotalChecks		!GEX001-add
    add 1           to #x000_Deptid_TotalChecks			!GEX001-add
    add 1           to #x000_FormID_TotalChecks			!GEX001-add
  end-if
end-procedure

begin-procedure Get-Pay-Distribution
  move 0 to #Deposit_Total
begin-SELECT

PD.DEPOSIT_AMOUNT
PD.ACCOUNT_TYPE
  add &PD.Deposit_Amount to #Deposit_Total

FROM  PS_PAY_DISTRIBUTN PD
WHERE PD.COMPANY         = &A.Company
  AND PD.PAYGROUP        = &B.PayGroup
  AND PD.PAY_END_DT      = &B.Pay_End_Dt
  AND PD.OFF_CYCLE       = &B.Off_Cycle
  AND PD.PAGE_NUM           = &B.Page_num
  AND PD.LINE_NUM           = &B.Line_num
  AND PD.SEPCHK          = &B.SepChk
  AND PD.ACCOUNT_TYPE   <> '$'
end-SELECT

end-procedure


begin-procedure Get-Original-Check

begin-SELECT
P1.COMPANY
P1.PAYGROUP
P1.PAY_END_DT
P1.PAYCHECK_OPTION
P1.OFF_CYCLE
P1.PAGE_NUM
P1.LINE_NUM
P1.SEPCHK

  move &P1.PayCheck_Option to $PayCheck_Option

! SXC 06/05/2000 Begin   Commented the following 2 lines
!  if $PayCheck_Option = '&'
!    do Get-Original-Distribution
!  end-if
! SXC 06/05/2000 End

FROM  PS_PAY_CHECK P1
WHERE P1.FORM_ID         = &B.Form_ID
  AND P1.PAYCHECK_NBR          = &B.paycheck_nbr
  AND P1.CHECK_DT        = &B.Check_Dt
  AND P1.PAYCHECK_OPTION <> 'R'
end-SELECT

end-procedure


begin-procedure Get-Original-Distribution

  move 0 to #Check_Amount
begin-SELECT
DEPOSIT_AMOUNT
  subtract &Deposit_Amount from #Check_Amount
FROM  PS_PAY_DISTRIBUTN
WHERE COMPANY    = &P1.Company
  AND PAYGROUP   = &P1.PayGroup
  AND PAY_END_DT = &P1.Pay_End_Dt
  AND OFF_CYCLE  = &P1.Off_Cycle
  AND PAGE_NUM      = &P1.Page_num
  AND LINE_NUM      = &P1.Line_num
  AND SEPCHK     = &P1.SepChk
  AND ACCOUNT_TYPE      = '$'
end-SELECT

end-procedure


!begin-procedure FormID-Change		!GEX001-replace entire paragraph
!  new-page
!end-procedure


begin-procedure Company-Change

use-report detail-report

  let $000-skip-line-flag = 'Y' 		!GEX001-add

!  print 'Company Totals:' 		(+2,1)		!GEX001-del
  let $000-temp-out = 'Company ' || $Company || ' Totals:' !GEX001-add 
  print $000-temp-out			(+1,1)		!GEX002-add
  do Format-Number(#TotalNetPay, $out, '$,$$$,$$$,$$9.99')
  print $out      (0,28)
  do Format-Number(#TotalChecks, $out, '999,999')
  print $out      (0,+2)
  if #TotalChecks <> 1

#ifdef USA
    print 'Checks '          (0,+1)
#endif

#ifdef CANADA
    print 'Cheques'          (0,+1)
#endif

  else

#ifdef USA
    print 'Check  '          (0,+1)
#endif

#ifdef CANADA
    print 'Cheque '          (0,+1)
#endif

  end-if

  do Format-Number(#TotalReversals, $out, '999,999')
  print $out   (0,+2)

  if #TotalReversals <> 1
    print 'Reversals'       (0,+1)
  else
    print 'Reversal '       (0,+1)
  end-if

!  add #TotalChecks to #GrandChecks		!GEX001-moved
!  add #TotalReversals  to #GrandReversals !GEX001-moved
!  add #TotalNetPay to #GrandNetPay		!GEX001-moved

!CWB 11/04/2000 Begin
use-report summary-report
  print $prev_company      (+1,1)
  print $company_begin_nbr (+0,12) 
  print $company_end_nbr   (+0,30) 
  move #company_tot_Checks to $company_nbr_forms 99999
  print $company_nbr_forms (+0,50)
  print ' '                (+1,1)
  move 'N' to $company_begin_nbr_flag 
  move ' ' to $company_begin_nbr
  move ' ' to $company_end_nbr
  move ' ' to $company_nbr_forms
  move 0 to #company_tot_Checks 
use-report detail-report
!CWB 11/04/2000 End

  move 0 to #TotalChecks
  move 0 to #TotalReversals
  move 0 to #TotalNetPay

  let $000-new-page-flag = 'Y' 		!GEX001-add

  if #level = 0
    new-page
  end-if

end-procedure


begin-procedure Paygroup-Change		!GEX001-add entire paragraph

use-report detail-report

  let $000-skip-line-flag = 'Y' 		!GEX001-add
  let $000-temp-out = 'Paygroup ' || $x000_paygroup || ' Totals:' 
  print $000-temp-out 			(+1,1)
  do Format-Number(#x000_Paygroup_TotalNetPay, $out, '$,$$$,$$$,$$9.99')
  print $out      (0,28)
  do Format-Number(#x000_Paygroup_TotalChecks, $out, '999,999')
  print $out      (0,+2)

  if #x000_Paygroup_TotalChecks <> 1

#ifdef USA
    print 'Checks '          (0,+1)
#endif

#ifdef CANADA
    print 'Cheques'          (0,+1)
#endif
  else
#ifdef USA
    print 'Check  '          (0,+1)
#endif

#ifdef CANADA
    print 'Cheque '          (0,+1)
#endif

  end-if

  do Format-Number(#x000_Paygroup_TotalReversals, $out, '999,999')
  print $out   (0,+2)

  if #x000_Paygroup_TotalReversals <> 1
    print 'Reversals'       (0,+1)
  else
    print 'Reversal '       (0,+1)
  end-if

!CWB 11/04/2000 Begin
use-report summary-report
  if #paygroup_tot_checks <> 0
    print $prev_paygroup      (+2,1)
    print $paygroup_begin_nbr (+0,12) 
    print $paygroup_end_nbr   (+0,30) 
    move #paygroup_Tot_Checks to $paygroup_nbr_forms 99999
    print $paygroup_nbr_forms (+0,50)
    print ' '                 (+1,1)
  end-if
  move 'N' to $paygroup_begin_nbr_flag 
  move 'Y' to $company_begin_nbr_flag 
  move ' ' to $paygroup_begin_nbr
  move ' ' to $paygroup_end_nbr
  move ' ' to $paygroup_nbr_forms
  move 0 to #paygroup_tot_Checks 
use-report detail-report
!CWB 11/04/2000 End
  move 0 to #x000_Paygroup_TotalChecks	
  move 0 to #x000_Paygroup_TotalReversals
  move 0 to #x000_Paygroup_TotalNetPay

!  new-page
  let $000-new-page-flag = 'Y' 		!GEX001-add

end-procedure


begin-procedure Deptid-Change				!GEX001-add entire paragraph
use-report detail-report
  let $000-skip-line-flag = 'Y' 		!GEX001-add
  let $000-temp-out = 'Deptid ' || $deptid || ' Totals:' 
  print $000-temp-out			(+1,1)
  do Format-Number(#x000_Deptid_TotalNetPay, $out, '$,$$$,$$$,$$9.99')
  print $out      (0,28)
  do Format-Number(#x000_Deptid_TotalChecks, $out, '999,999')
  print $out      (0,+2)

  if #x000_Deptid_TotalChecks <> 1

#ifdef USA
    print 'Checks '          (0,+1)
#endif

#ifdef CANADA
    print 'Cheques'          (0,+1)
#endif

  else

#ifdef USA
    print 'Check  '          (0,+1)
#endif

#ifdef CANADA
    print 'Cheque '          (0,+1)
#endif

  end-if

  do Format-Number(#x000_Deptid_TotalReversals, $out, '999,999')
  print $out   (0,+2)

  if #x000_Deptid_TotalReversals <> 1
    print 'Reversals'       (0,+1)
  else
    print 'Reversal '       (0,+1)
  end-if
!CWB 11/04/2000 Begin
use-report summary-report
  if #deptid_tot_checks <> 0
    print $deptid           (+1,1)
    print $deptid_begin_nbr (+0,12) 
    print $deptid_end_nbr   (+0,30) 
    move #deptid_Tot_Checks to $deptid_nbr_forms 99999
    print $deptid_nbr_forms (+0,50)
  end-if
  move 'N' to $deptid_begin_nbr_flag 
  move 'Y' to $paygroup_begin_nbr_flag 
  move 'Y' to $company_begin_nbr_flag 
  move ' ' to $deptid_begin_nbr
  move ' ' to $deptid_end_nbr
  move ' ' to $deptid_nbr_forms
  move 0 to #deptid_tot_Checks 
use-report detail-report
!CWB 11/04/2000 End

  move 0 to #x000_Deptid_TotalChecks
  move 0 to #x000_Deptid_TotalReversals
  move 0 to #x000_Deptid_TotalNetPay

!  new-page
  let $000-new-page-flag = 'Y' 		!GEX001-add
  
end-procedure


begin-procedure FormID-Change			!GEX001-add entire paragraph

  let $000-skip-line-flag = 'Y' 		!GEX001-add
  let $000-temp-out = 'FormID ' || $Form_ID || ' Totals:' 
  print $000-temp-out 				(+1,1)
  do Format-Number(#x000_FormID_TotalNetPay, $out, '$,$$$,$$$,$$9.99')
  print $out      (0,28)
  do Format-Number(#x000_FormID_TotalChecks, $out, '999,999')
  print $out      (0,+2)

  if #x000_FormID_TotalChecks <> 1

#ifdef USA
    print 'Checks '          (0,+1)
#endif

#ifdef CANADA
    print 'Cheques'          (0,+1)
#endif

  else

#ifdef USA
    print 'Check  '          (0,+1)
#endif

#ifdef CANADA
    print 'Cheque '          (0,+1)
#endif

  end-if

  do Format-Number(#x000_FormID_TotalReversals, $out, '999,999')
  print $out   (0,+2)

  if #x000_FormID_TotalReversals <> 1
    print 'Reversals'       (0,+1)
  else
    print 'Reversal '       (0,+1)
  end-if

  let $000-new-page-flag = 'Y' 		!GEX001-add

  add #x000_FormID_TotalChecks to #GrandChecks
  add #x000_FormID_TotalReversals  to #GrandReversals
  add #x000_FormID_TotalNetPay to #GrandNetPay
  move 0 to #x000_FormID_TotalChecks
  move 0 to #x000_FormID_TotalReversals
  move 0 to #x000_FormID_TotalNetPay

end-procedure


begin-procedure Company-Before-Change			!GEX001-add entire paragraph
	
   if $000-new-page-flag = 'Y'
      let $000-new-page-flag = 'N'
      new-page
   end-if
   move &A.Company  to $Company				!GEX001-move

end-procedure


begin-procedure Paygroup-Before-Change			!GEX001-add entire paragraph
		
   if $000-new-page-flag = 'Y'
      let $000-new-page-flag = 'N'
      new-page
   end-if
   move &B.PayGroup to $x000_paygroup

end-procedure


begin-procedure Deptid-Before-Change			!GEX001-add entire paragraph	
	
   if $000-new-page-flag = 'Y'
      let $000-new-page-flag = 'N'
!      new-page
   end-if
   move &B.DeptID to $deptid

end-procedure


begin-procedure FormID-Before-Change			!GEX001-add entire paragraph

  if $000-new-page-flag = 'Y'
      let $000-new-page-flag = 'N'
!      new-page
  end-if
  move &B.Form_ID to $Form_ID					!GEX001-move

end-procedure

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getlocnm.sqc'  !Get-Location-Name procedure
#Include 'payinit.sqc'   !Report Initialization and Timing
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
