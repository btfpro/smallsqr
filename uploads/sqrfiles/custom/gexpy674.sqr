!***********************************************************************
! GEXPY674:  PA Local Tax - Monthly File to Upload to Keystone         *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!------------------------------------------------------------------------
! Report Name: GEXBN645.SQR - SQR Template
!-----------------------------------------------------------------------
! An electronic file will be required for the Tax Department to upload to 
! Keystone Collections Group at the end of each month for PA local withholding 
! tax with a listing of EE's per the new PA Act 32 requirements.
!-----------------------------------------------------------------------
! GEX Modifications
!-----------------------------------------------------------------------
! GEXPY_848_E107767_01 2011-10-13 Vahini Katta
! New Development
!************************************************************************
! GEXPY_848_E119599_01 2012-02-17 Mel Abuyo                             *
!           Provide a selection field for Year and Period (month) in    *
!              Run Control to run report. The report currently picks up *
!              only the amounts for the date when the report is ran.    *
!************************************************************************
! GEXPY_848_E123200_01 2012-04-03 Mel Abuyo                             *
!       Total re-design of the program due to Keystone requirements.    *
!       The old version is called GEXPY674_old if you need to view the  *
!           previous code since its been removed, it is easier to read  *
!           the program this way rather than commenting out blocks/lines*
!           of codes that were affected by the huge change.             *
!       Group TMs by Locality (PSD code) and create RE record per       *
!           PA Tax Location Locality (PSD) as per Keystone instruction. *
!       Modifications were made to also handle out-of-state locations   *
!           that have PA residents TM and vice-versa.                   *
!       One RE record per out-of-state locations i.e, all OH locations  *
!           grouped together into SOH99 based on Job.Tax_location_cd    *
! GEX_SEC_REENG 2015-04-29 Vahini Katta                                 *
! Changes related to gex_emplid_mapp/7 digit emplid                     *
!************************************************************************

#Include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Portrait)

#define out_of_state 'SMD99', 'SOH99', 'SWV99'

Begin-Report

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc
  
  show ' '
  display 'Start Run Time: ' noline
  show $AsofNow
  Do Initialization
  Do Open-File
    
  Do Submitter-Record
  Do Employer-Record
  Do Write-RF-Record
  Do Close-File
    
  show ' '
  display 'End Run Time: ' noline
  show $AsofNow
  do Stdapi-Term
    
End-Report

!-----------------------------------------------------------------------
! Function:    Initialization                                          -
! Description: Initialization                                          -
! Called By:   Report-Lost-Covrg                                       -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Initialization
    
   Move 'GEXPY674'     to $ReportID
   Move 'PA LOCAL TAX' to $ReportTitle
   Move ' ' to $Filler

   Do GEXXX922-Select-Parameters
   move $GEX_RC_PAY.AsOfDate       to $CURRDT    'YYYYMMDD'
   let $curr_year = substr($CURRDT,1,4)
   let $curr_mon = substr($CURRDT,5,2)
   let $begin_date = '01'||substr($GEX_RC_PAY.AsOfDate,3,9)

   show '$AsOfDate :' $GEX_RC_PAY.AsOfDate ', Begin Date :' $begin_date
   show '$curr_year :' $curr_year
   SHOW '$curr_mon  :' $curr_mon
  
   Show '$ReportID    = ' $ReportID
   Show '$ReportTitle = ' $ReportTitle
   Show '$ReportDate  = ' $ReportDate
   Show '$ReportTime  = ' $ReportTime
  
  Evaluate $Curr_Mon
  when = '01'
  when = '02'
  when = '03'
    Move '03' to $Rep_Mon
    break
  when = '04'
  when = '05'
  when = '06'
    Move '06' to $Rep_Mon
    break
  when = '07'
  when = '08'
  when = '09'
    Move '09' to $Rep_Mon
    break
  when = '10'
  when = '11'
  when = '12'
    Move '12' to $Rep_Mon
    break        
  End-Evaluate
  
  let $Rep_Period=  $Rep_Mon||$curr_year
   
  If $prcs_process_instance = ''
    Do SQRW-Run-Controls
  Else
    Do Process-Scheduler-Run-Controls
  End-if
 
  do Select-Balance-Qtr
  do Get-Setup-Info
  
  If isnull($AsofDate)
     Let $AsofDate = $AsOfToday
  End-If
  
End-Procedure

!-----------------------------------------------------------------------
! Function:    SQRW-Run-Controls                                       -
! Description: SQRW-Run-Controls                                       -
! Called By:   Initialization                                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure SQRW-Run-Controls
#debug1 Show 'SQRW-Run-Controls'

  Do Ask-As-Of-Date
 
End-Procedure

!-----------------------------------------------------------------------
! Function:    Process-Scheduler-Run-Controls                          -
! Description: Select Values from Run Control                          -
! Called By:   Initialization                                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Process-Scheduler-Run-Controls
#debug1 show 'Process-Scheduler-Run-Controls'

 	Let $OprID               = '''' || $Prcs_OprID       || ''''
 	Let $Run_Cntl_ID         = '''' || $Prcs_Run_Cntl_ID || ''''
 	show '$prcs_oprid        = ' $OprID
 	show '$prcs_run_cntl_id  = ' $Run_Cntl_ID
 	Let $GEX_Company_Alias	= 'C.COMPANY'
 	Let $AsOfDate = $AsofToday
 	show 'Run Date: ' $AsofToday
 	Let #GEX_RC_COMPANY_ROWS = 0
 	Let $GEX_INCLUDE_COMPANY_CRITERIA = ''
 	Let $GEX_INCLUDE_COMPANY_DISPLAY_CRITERIA = 'ALL'
 	
Begin-Select

GEX_RC_COMPANY.COMPANY

  Add 1 To #GEX_RC_COMPANY_ROWS

  If #GEX_RC_COMPANY_ROWS = 1
    Let $GEX_INCLUDE_COMPANY_CRITERIA = '(' || $GEX_Company_Alias || ' In ('''     || &GEX_RC_COMPANY.COMPANY || ''''
    
  Else
    Let $GEX_INCLUDE_COMPANY_CRITERIA = $GEX_INCLUDE_COMPANY_CRITERIA || ',''' || &GEX_RC_COMPANY.COMPANY  || ''''
    
  End-If

  If #GEX_RC_COMPANY_ROWS > 10
     exit-select
  End-if

From  PS_GEX_RC_COMPANY GEX_RC_COMPANY

Where GEX_RC_COMPANY.OPRID                = [$OprID]
And   GEX_RC_COMPANY.RUN_CNTL_ID          = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_COMPANY.COMPANY, ' ') <> ' '

End-Select

  If #GEX_RC_COMPANY_ROWS = 0
    Let  $GEX_INCLUDE_COMPANY_CRITERIA = $GEX_Company_Alias || ' < ' || '''999'''
    Let $GEX_INCLUDE_COMPANY_DISPLAY_CRITERIA = $GEX_INCLUDE_COMPANY_CRITERIA
  Else
    Let $GEX_INCLUDE_COMPANY_CRITERIA = $GEX_INCLUDE_COMPANY_CRITERIA || '))'
    If #GEX_RC_COMPANY_ROWS > 10
       Let $GEX_INCLUDE_COMPANY_CRITERIA = ' EXISTS (SELECT 1 FROM PS_GEX_RC_COMPANY GC WHERE GC.OPRID = '||$OprID ||
           ' AND GC.RUN_CNTL_ID = ' || $Run_Cntl_ID || ' AND GC.COMPANY = C.COMPANY)'
    End-if

    Let $GEX_INCLUDE_COMPANY_DISPLAY_CRITERIA = $GEX_INCLUDE_COMPANY_CRITERIA

  End-If
   
  show ' '
  show '*** Run Control Parameters ***'
  Show  'Company Criteria: ' $GEX_INCLUDE_COMPANY_DISPLAY_CRITERIA
 
end-procedure Process-Scheduler-Run-Controls

!-----------------------------------------------------------------------
! Function:    Open-File                                               -
! Description: Opens Files                                             -
! Called By:   Begin_report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Open-File

    !Let $folder = '\\nt5\people\Psoft\lttax\Keystone Act32 Files\'              ! ISDVMZA
     Let $folder = '\\corp.gianteagle.com\peoplesoft\psfin\Psoft\lttax\Keystone Act32 Files\'     ! ISDVMZA
   
#debug Let $folder = '\\nt5\peopledev\temp\'                     ! ISDVMZA for Testing only

  #ifdef NT
   If #GEX_RC_COMPANY_ROWS = 0
      Let $File = $folder ||Lower($ReportID) || '_IND_' || $AsofToday ||  '.txt'
   Else
      Let $File = $folder ||Lower($ReportID) || '_' || $AsofToday ||  '.txt'
   End-if
 
   OPEN $File as 1 for-writing record=1600 status = #open1
  
    If #open1 <> 0
        Let $Open-Msg = 'Open '||$File   ||' 1 failed' || ' status =' || to_char(#open1)
        Display $Open-Msg
        stop quiet
    Else 
        Let $Open-Msg = $File    ||' Opened' || ' status = ' || to_char(#open1)
        Display $Open-Msg
    End-if
    
    encode '<009>' into $delim
     If #GEX_RC_COMPANY_ROWS = 0 
   	Let $file2 = $folder ||Lower($ReportID) || '_IND_' || $AsofToday || '.xls' 
     Else
        Let $file2 = $folder ||Lower($ReportID) || '_' || $AsofToday || '.xls'	
     End-If	

     Open $file2 As 2 For-Writing Record=1000:Vary status = #open2
   
     If #open2 <> 0
        Let $Open-Msg = 'Open '||$file2   ||' 2 failed '|| ' status =' || to_char(#open2)
        Display $Open-Msg
        stop quiet
     Else 
        Let $Open-Msg = $file2   ||' Opened'|| ' status = ' || to_char(#open2)
        Display $Open-Msg
     End-if
    
     encode '<012>' into $newline 
     String 'Report ID:' $ReportID  ' ' ' ' ' ' ' ' ' ' $ReportTitle by $delim into $gexpy674
     Write 2 from $gexpy674
     Write 2 from $newline 
       
     String 'EMPLID' 'FIRST NAME' 'LAST NAME' 'ADDRESS' 'CITY' 'STATE'  'POSTAL' 'TAX MTD' 'TAX GROSS MTD' 'LOCALITY PSD' by $delim into $gexpy674
     Write 2 from $gexpy674  

  #Else
     Display 'Program is designed to run on NT Server only, please re-submit.'
     stop quiet
  #End-if 

End-Procedure Open-File

!-----------------------------------------------------------------------
! Function:    Get-Setup-Info                                          -
! Description: Get Setup Information                                   -
! Called By:   Initialization                                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Setup-Info
Begin-Select
UPPER(COMPANY) &Company,
UPPER(CONTACT_NAME) &Contact_name,
LPAD(REPLACE(REPLACE(CONTACT_PHONE,'/',''),'-',''),15,0) &Contact_Phone,
UPPER(CONTACTEMAIL) &Contact_Email,
CONTACT_FAX &Contact_Fax,
LPAD(ACCOUNT_NBR,7,'0') &Acct_nbr

 Move &Contact_Phone to $Phone_num
 
FROM PS_GEX_PA_LOCALTAX
WHERE COMPANY='GEI'
End-Select
End-Procedure 

!-----------------------------------------------------------------------
! Function:    Submitter-Record                                        -
! Description: Submitter-Record                                        -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Submitter-Record
Begin-Select
CT.FEDERAL_EIN,
UPPER(CT.DESCR) &Company_Name,
UPPER(CT.ADDRESS1) &Loc_Addr,
UPPER(CT.ADDRESS2),
UPPER(CT.CITY) &City,
UPPER(CT.STATE) &State,
SUBSTR(CT.POSTAL,1,5) &Postal, 
SUBSTR(CT.POSTAL,7,4) &Extn

  do Write-RA-Record
     
FROM PS_COMPANY_TBL CT
WHERE CT.EFFDT=(SELECT MAX(CT1.EFFDT) FROM PS_COMPANY_TBL CT1
                WHERE CT.COMPANY=CT1.COMPANY
                AND CT1.EFFDT<=SYSDATE)
AND CT.COMPANY='GEI'    
End-Select
End-Procedure Submitter-Record

!-----------------------------------------------------------------------
! Function:    Employer-Record                                         -
! Description: Employer-Record                                         -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Employer-Record
 move ' ' to $RE_Loc_Addr
Begin-Select 
C.FEDERAL_EIN,
C.COMPANY,
UPPER(C.DESCR) &RE_Company_Name,
UPPER(C.ADDRESS1) &RE_Addr1,
UPPER(C.ADDRESS2) &RE_Addr2,
UPPER(C.CITY) &RE_City,
UPPER(C.STATE) &RE_State,
SUBSTR(C.POSTAL,1,5) &RE_Postal,
SUBSTR(C.POSTAL,7,4) &RE_Postal_Extn

  let $RE_Loc_Addr=&RE_Addr1||' '||&RE_Addr2
  move &RE_Company_Name to $RE_Company_Name
  move &RE_City         to $RE_City
  move &RE_State        to $RE_State
  move &RE_Postal       to $RE_Postal
  move &RE_Postal_Extn  to $RE_Postal_Extn
  do P200-Get-RE-Records

FROM PS_COMPANY_TBL C
WHERE C.EFFDT=(SELECT MAX(C1.EFFDT) FROM PS_COMPANY_TBL C1
                WHERE C.COMPANY=C1.COMPANY
                AND C1.EFFDT<=SYSDATE)
AND C.EFF_STATUS='A'   
AND [$GEX_INCLUDE_COMPANY_CRITERIA] 
AND EXISTS (SELECT 'X' FROM PS_TAX_BALANCE T
		   WHERE T.COMPANY=C.COMPANY
	   		AND T.STATE=C.STATE
			AND T.TAX_CLASS='H'
			AND T.BALANCE_YEAR=$curr_year
			AND T.BALANCE_PERIOD=$curr_mon)  
ORDER BY C.COMPANY
End-Select
End-Procedure


!************************************************************************
! Description: This procedure will select all PA Tax Location records   *
!              by Locality as per Keystone requirements.                *
!************************************************************************
Begin-Procedure P200-Get-RE-Records

#debug1   show 'Procedure = P200-Get-RE-Records'

   move 0 to #Tot_Tax_MTD_Orig
   move 0 to #Tot_Taxgrs_MTD_orig
   move 0 to #RE_Count
   move ' ' to $tax_location_cd
   
Begin-Select
'1' &grp_ind
T2.TAX_LOCATION_CD,
T1.DESCR, 
T1.ADDRESS1,
T1.ADDRESS2,
T1.CITY,
T1.COUNTY,
T1.STATE,
T1.POSTAL,
T2.LOCALITY,
T2.LOCALITY_LINK

   if &T2.TAX_LOCATION_CD <> $tax_location_cd
      add 1 to #RE_Count
      move &T2.TAX_LOCATION_CD to $tax_location_cd  
      move &T2.LOCALITY   to $PSD_Code '0000009'
      move &T1.DESCR      to $RE_Company_Name
      let $RE_Loc_Addr    = &T1.ADDRESS1 || &T1.ADDRESS2
      let $RE_City        = &T1.CITY
      let $RE_State       = &T1.STATE
      let $RE_Postal      = SUBSTR(&T1.POSTAL,1,5)
      let $RE_Postal_Extn = SUBSTR(&T1.POSTAL,7,4)

#debug9   show 'Processing Tax Location = ' $tax_location_cd ' PSD = ' $PSD_Code
      
      evaluate $tax_location_cd
         when = 'SMD99'
         when = 'SOH99'
         when = 'SWV99'
            let $state = substr($tax_location_cd,2,2) 
            do P210-Out-of-State-RE-Records
            break
         when-other
            do P300-Get-RS-Records
      end-evaluate
   
      if #RS_Count > 0
         move #RS_Count to $RS_Count 0000009
         do Write-RT-Record
         Let #Tot_Tax_MTD_Orig = 0
         Let #Tot_Taxgrs_MTD_orig = 0
      end-if 
      
   end-if 

FROM PS_TAX_LOCATION1 T1,
     PS_TAX_LOCATION2 T2
 WHERE T1.STATE = 'PA'
   AND T1.STATE = T2.STATE
   AND T1.TAX_LOCATION_CD  = T2.TAX_LOCATION_CD
   AND T1.EFF_STATUS = 'A'
   AND T2.LOCALITY_LINK <> ' '
UNION
SELECT 
'2',
T3.TAX_LOCATION_CD,
T3.DESCR,
T3.ADDRESS1,
T3.ADDRESS2,
T3.CITY,
T3.COUNTY,
T3.STATE,
T3.POSTAL,
'880000',
' '
FROM PS_TAX_LOCATION1 T3 
WHERE T3.EFF_STATUS = 'A'
  AND T3.TAX_LOCATION_CD IN ('SPA99', {out_of_state})
ORDER BY 1,2

End-Select

End-Procedure P200-Get-RE-Records

!************************************************************************
! Description: This procedure will select all non-PA Tax Location       *
!              records by State/Locality as per Keystone requirements   *
!************************************************************************
Begin-Procedure P210-Out-of-State-RE-Records

   move 0 to #Tot_Tax_MTD_Orig
   move 0 to #Tot_Taxgrs_MTD_orig
   move 0 to #RS_Count
   
#debug9   show 'RE - ' $state ' - ' $tax_location_cd ' - ' #RS_Count
   
Begin-Select
TL1.TAX_LOCATION_CD,
TA.EMPLID,
TA.LOCALITY,
TA.WORK_PSD_CD,
TA.RES_PSD_CD,
TA.TXGRS_YTD,
TA.TXGRS_MTD,
TA.TAX_YTD,
TA.TAX_MTD

   move &TA.EMPLID    to $Emplid
   move &TA.TXGRS_MTD to #TXGRS_MTD
   move &TA.TAX_MTD   to #TAX_MTD
   move &TA.TXGRS_MTD to $TXGRS_MTD 000000009v99
   move &TA.TAX_MTD   to $TAX_MTD   000000009v99
   move &TA.LOCALITY  to $Locality  0000009
  
   add 1 to #RS_Count
   add #TAX_MTD   to #Tot_Tax_MTD_Orig
   add #TXGRS_MTD to #Tot_Taxgrs_MTD_orig
   
   if #RS_Count = 1
      do Write-RE-Record
   end-if

#debug9   show 'Emplid - ' $Emplid ' - ' $tax_location_cd ' - ' $Locality
   
   do Get-Personal-Info
   do Write-RS-Record

FROM PS_TAX_LOCATION1 TL1,
     PS_TAX_BALANCE TA,
     PS_JOB J2    
WHERE TL1.EFF_STATUS = 'A'
  AND ((TL1.STATE = $state) OR
      (TL1.STATE = 'PA' AND 
       TL1.TAX_LOCATION_CD = $tax_location_cd))
  AND TL1.TAX_LOCATION_CD = J2.TAX_LOCATION_CD
  AND TA.TAX_CLASS       = 'H'
  AND TA.STATE           = 'PA'
  AND TA.BALANCE_ID      = 'CY'
  AND TA.COMPANY         = &C.COMPANY
  AND TA.COMPANY         = J2.COMPANY
  AND TA.BALANCE_YEAR    = $curr_year
  AND TA.BALANCE_PERIOD  = $curr_mon
  AND TA.EMPLID          = J2.EMPLID
  AND TA.TAX_MTD > 0
  AND TA.LOCALITY <> ' '
  AND J2.EFFDT = (SELECT MAX(EFFDT)
                     FROM PS_JOB JB1
                    WHERE JB1.EMPLID   = J2.EMPLID
                      AND JB1.EFFDT   <= $GEX_RC_PAY.AsOfDate)
  AND J2.EFFSEQ =(SELECT MAX(EFFSEQ)
                     FROM PS_JOB JB2
                    WHERE JB2.EMPLID   = J2.EMPLID
                      AND JB2.EFFDT    = J2.EFFDT)
ORDER BY 1
End-Select

End-Procedure P210-Out-of-State-RE-Records


!************************************************************************
! Description: This procedure will verify the Tax Balance information   *
!              records if the TM transfers mid-month.                   *
!************************************************************************
Begin-Procedure P300-Get-RS-Records

#debug1   show 'Procedure = P300-Get-RS-Records'

   Move 0 to #RS_Count
   
Begin-Select
TAX.EMPLID,
TAX.STATE,
TAX.LOCALITY,
TAX.BALANCE_YEAR,
TAX.BALANCE_QTR,
TAX.BALANCE_PERIOD,
TAX.WORK_PSD_CD,
TAX.RES_PSD_CD,
TAX.TXGRS_YTD,
TAX.TXGRS_MTD,
TAX.TAX_YTD,
TAX.TAX_MTD
JOB.TAX_LOCATION_CD
JOB.EMPL_RCD
JOB.EMPL_STATUS

#debug9   show 'Emplid - ' &TAX.EMPLID ' - ' &JOB.TAX_LOCATION_CD ' - PSD: ' &TAX.RES_PSD_CD ' - ' &TAX.LOCALITY

   move 0 to #RS_Verify

   if &JOB.EMPL_RCD > 0 and
      (&JOB.EMPL_STATUS = 'T' or 
       &JOB.EMPL_STATUS = 'R' or
       &JOB.EMPL_STATUS = 'D' or
       &JOB.EMPL_STATUS = 'Q' or
       &JOB.EMPL_STATUS = 'U')
      do P350-Verify-RS-Records
   end-if
   
   if #RS_Verify = 0

      move &TAX.EMPLID    to $Emplid
      move &TAX.TXGRS_MTD to #TXGRS_MTD
      move &TAX.TAX_MTD   to #TAX_MTD
      move &TAX.TXGRS_MTD to $TXGRS_MTD 000000009v99
      move &TAX.TAX_MTD   to $TAX_MTD   000000009v99
      move &TAX.LOCALITY  to $Locality 0000009
     
      add 1 to #RS_Count
   
      if #RS_Count = 1
         do Write-RE-Record
      end-if
      
      add #TAX_MTD   to #Tot_Tax_MTD_Orig
      add #TXGRS_MTD to #Tot_Taxgrs_MTD_orig
      
      do Get-Personal-Info
      do Write-RS-Record

   end-if

FROM PS_TAX_BALANCE TAX,
     PS_JOB JOB
WHERE TAX.TAX_CLASS       = 'H'
  AND TAX.STATE           = 'PA'
  AND TAX.BALANCE_ID      = 'CY'
  AND TAX.COMPANY         = &C.COMPANY
  AND TAX.COMPANY         = JOB.COMPANY
  AND TAX.BALANCE_YEAR    = $curr_year
  AND TAX.BALANCE_PERIOD  = $curr_mon
  AND TAX.EMPLID          = JOB.EMPLID
  AND JOB.TAX_LOCATION_CD = $tax_location_cd
  AND TAX.TAX_MTD > 0
  AND TAX.LOCALITY <> ' '
  AND JOB.EFFDT = (SELECT MAX(EFFDT)
                     FROM PS_JOB JOB1
                    WHERE JOB1.EMPLID   = JOB.EMPLID
                      AND JOB1.EMPL_RCD = JOB.EMPL_RCD
                      AND JOB1.EFFDT   <= $GEX_RC_PAY.AsOfDate)
  AND JOB.EFFSEQ =(SELECT MAX(EFFSEQ)
                     FROM PS_JOB JOB2
                    WHERE JOB2.EMPLID   = JOB.EMPLID
                      AND JOB2.EMPL_RCD = JOB.EMPL_RCD
                      AND JOB2.EFFDT    = JOB.EFFDT)
End-Select

End-Procedure P300-Get-RS-Records


!************************************************************************
! Description: This procedure will select all Tax Location records by   *
!              Locality as per Keystone requirements.                   *
!************************************************************************
Begin-Procedure P350-Verify-RS-Records

#debug1   show 'P350-Verify-RS-Records '
#debug9   show 'Emplid   = ' $Emplid
#debug9   show 'Empl_rcd = ' &JOB.EMPL_RCD 
#debug9   show 'Empl_Sts = ' '***' &JOB.EMPL_STATUS '***'
#debug9   show 'Locality = ' &TAX.LOCALITY
#debug9   show 'Tax Locn = ' $tax_location_cd

Begin-Select
'X'

   Move 1 to #RS_Verify

FROM PS_TAX_BALANCE T1,
     PS_JOB J1
WHERE T1.TAX_CLASS       = 'H'
  AND T1.STATE           = 'PA'
  AND T1.BALANCE_ID      = 'CY'
  AND T1.COMPANY         = &C.COMPANY 
  AND T1.COMPANY         = J1.COMPANY                   !  ISDVMZA 
  AND T1.BALANCE_YEAR    = $curr_year
  AND T1.BALANCE_PERIOD  = $curr_mon
  AND T1.EMPLID          = J1.EMPLID
  AND T1.EMPLID          = $Emplid
  AND J1.EMPL_RCD        <> &JOB.EMPL_RCD 
  AND T1.TAX_MTD         > 0
  AND T1.LOCALITY        = &TAX.LOCALITY
  AND J1.EFFDT = (SELECT MAX(EFFDT)
                     FROM PS_JOB JB1
                    WHERE JB1.EMPLID   = J1.EMPLID
                      AND JB1.EMPL_RCD = J1.EMPL_RCD
                      AND JB1.EFFDT   <= $GEX_RC_PAY.AsOfDate)
  AND J1.EFFSEQ =(SELECT MAX(EFFSEQ)
                     FROM PS_JOB JB2
                    WHERE JB2.EMPLID   = J1.EMPLID
                      AND JB2.EMPL_RCD = J1.EMPL_RCD
                      AND JB2.EFFDT    = J1.EFFDT)
End-Select

End-Procedure P350-Verify-RS-Records


!************************************************************************
! Function:    Select-Balance-Qtr                                       *
! Description: Select-Balance-Qtr                                       *
! Called By:   Initialization                                           *
! Calls:       None                                                     *
!************************************************************************
Begin-Procedure Select-Balance-Qtr
Begin-Select
MAX(B.BALANCE_QTR) &BAL_QTR

FROM PS_PAY_CAL_BAL_ID B
WHERE B.BALANCE_YEAR=$curr_year
End-Select
End-Procedure


!************************************************************************
! Function:    Get-Personal-Info                                        *
! Description: Retrieve the TM personal record                          *
! Calls:       None                                                     *
!************************************************************************
Begin-Procedure Get-Personal-Info
Begin-Select

UPPER(FIRST_NAME) &First_name,
UPPER(MIDDLE_NAME) &Middle_Name,
UPPER(LAST_NAME) &Last_Name,
UPPER(NAME_SUFFIX) &Name_Suffix,
UPPER(ADDRESS1) &Addr1,
UPPER(CITY) &RS_City,
UPPER(STATE) &RS_State,
SUBSTR(POSTAL,1,5) &RS_Postal, 
SUBSTR(POSTAL,7,4) &RS_Postal_Extn

   move &First_name   to $First_name
   move &Middle_Name  to $Middle_Name
   move &Last_Name    to $Last_Name
   move &Name_Suffix  to $Name_Suffix
   move &Addr1        to $Addr1
   move &RS_City      to $RS_City
   move &RS_State     to $RS_State
   move &RS_Postal    to $RS_Postal
   move &RS_Postal_Extn to $RS_Postal_Extn

FROM PS_PERSONAL_DATA 
WHERE EMPLID = $Emplid
End-Select
End-Procedure Get-Personal-Info


!************************************************************************
! Function:    Write-RA-Record                                          *
! Description: Write-RA-Record                                          *
! Calls:       None                                                     *
!************************************************************************
Begin-Procedure Write-RA-Record
    
  Write 1 from 'RA':2                     !  1-2
               &CT.FEDERAL_EIN:9          !  3-11
               $Filler:26                 ! 12-37 
               &Company_Name:57           ! 38-94
               $Filler:22                 ! 95-116
               &Loc_Addr:22               !117-138
               &City:22                   !139-160
               &State:2                   !161-162
               &Postal:5                  !163-167
               &Extn:4                    !168-171
               $Filler:224                !172-395
               &Contact_name:27           !396-422
               $Phone_num:15              !423-437
               $Filler:5                  !438-442
               $Filler:3                  !443-445
               &Contact_Email:40          !446-485
               $Filler:3                  !486-488
               &Contact_Fax:10            !489-498
               $Filler:14                 !499-512

End-Procedure Write-RA-Record

!************************************************************************
! Function:    Write-RE-Record                                          *
! Description: Write-RE-Record                                          *
! Calls:       None                                                     *
!************************************************************************
Begin-Procedure Write-RE-Record
	
 Write 1 from       'RE':2                !  1-2
              $curr_year:4                !  3-6  
                &BAL_QTR:1                !    7  
          &C.FEDERAL_EIN:9                !  8-16 
                 $Filler:23               ! 17-39 
        &RE_Company_Name:57               ! 40-96 
                 $Filler:22               ! 97-118
            $RE_Loc_Addr:22               !119-140
                &RE_City:22               !141-162
               &RE_State:2                !163-164
              &RE_Postal:5                !165-169
         &RE_Postal_Extn:4                !170-173
                     '0':1                !    174
                 $Filler:4                !175-178
               &Acct_nbr:7                !179-185
               $PSD_Code:7                !186-192
                 $Filler:319              !193-512
              
End-Procedure

!************************************************************************
! Function:    Write-RS-Record                                          *
! Description: Write-RS-Record                                          *
! Calls:       None                                                     *
!************************************************************************
Begin-Procedure Write-RS-Record
  do Get-Emp-Ssn ($emplid, $Ssn_Out) !GEX_SEC_REENG 2015-04-29 Vahini Katta
 Write 1 from  'RS':2                     !  1-2   
            $Filler:7                     !  3-9   
           !$Emplid:9                     ! 10-18   !GEX_SEC_REENG 2015-04-29 Vahini Katta
           $Ssn_Out:9                     ! 10-18   !GEX_SEC_REENG 2015-04-29 Vahini Katta
        $First_name:15                    ! 19-33  
       $Middle_Name:15                    ! 34-48  
         $Last_Name:20                    ! 49-68  
       $Name_Suffix:4                     ! 69-72  
            $Filler:22                    ! 73-94 
             $Addr1:22                    ! 95-116
           $RS_City:22                    !117-138
          $RS_State:2                     !139-140
         $RS_Postal:5                     !141-145 
    $RS_Postal_Extn:4                     !146-149 
            $Filler:46                    !150-195 
                '0':1                     !    196 
        $Rep_Period:6                     !197-202 
            $Filler:106                   !203-308 
         $TXGRS_MTD:11                    !309-319
           $TAX_MTD:11                    !320-330
          $Locality:7                     !331-337
            $Filler:174                   !338-512
                                          
    !STRING $emplid $First_name $Last_Name $Addr1 $RS_City $RS_State $RS_Postal #TAX_MTD  #TXGRS_MTD  $locality !GEX_SEC_REENG 2015-04-29 Vahini Katta
    STRING $Ssn_Out $First_name $Last_Name $Addr1 $RS_City $RS_State $RS_Postal #TAX_MTD  #TXGRS_MTD  $locality !GEX_SEC_REENG 2015-04-29 Vahini Katta
        BY $DELIM INTO $gexpy674 
        
    WRITE 2 FROM $gexpy674              
              
End-Procedure Write-RS-Record     

!************************************************************************
! Function:    Write-RT-Record                                          *
! Description: Write-RT-Record                                          *
! Calls:       None                                                     *
!************************************************************************
Begin-Procedure Write-RT-Record      

   Let $Tot_Tax_MTD    = Edit((#Tot_Tax_MTD_Orig * 100), '099999999999999')
   Let $Tot_Taxgrs_MTD = Edit((#Tot_Taxgrs_MTD_orig * 100), '099999999999999')
    
  Write 1 from 'RT':2
               $RS_Count:7 
               $Tot_Taxgrs_MTD:15
               $Tot_Tax_MTD:15
               $Filler:473
  
  let #Grand_Emp_Count=#Grand_Emp_Count+#RS_Count
  let $Grand_Emp_Count=edit(#Grand_Emp_Count,'099999999')
  let $Grand_Emp_Count=lpad($Grand_Emp_Count,9,'0')
   
   encode '<012>' into $newline 
   Write 2 from $newline 
       
   String 'Company'  'Employee Count' 'TOTAL TAX MTD' 'TOTAL TAX GROSS MTD' by $delim into $gexpy674
   Write 2 from $gexpy674
   String &RE_Company_Name $RS_Count #Tot_Tax_MTD_Orig #Tot_Taxgrs_MTD_orig by $delim into $gexpy674
   Write 2 from $gexpy674  
   Write 2 from $newline
  
End-Procedure Write-RT-Record   

!************************************************************************
! Function:    Write-RF-Record                                          *
! Description: Write-RF-Record                                          *
! Calls:       None                                                     *
!************************************************************************
Begin-Procedure Write-RF-Record  
  Write 1 from 'RF':2
               $Filler:5
               $Grand_Emp_Count:9
               $Filler:496
               
	String 'Grand Employee Count' by $delim into $gexpy674
   	Write 2 from $gexpy674
   	String $Grand_Emp_Count by $delim into $gexpy674
   	Write 2 from $gexpy674                 
               
End-Procedure Write-RF-Record
  
!-----------------------------------------------------------------------
! Function:    Close-File                                              -
! Description: Closes the File                                         -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Close-File
  Close 1
  Let $Close-Msg1    =  $File    ||' Closed'
 
  Display  $Close-Msg1
  
  Close 2
  Let $Close-Msg2    =  $file2    ||' Closed'
 
  Display  $Close-Msg2

  If #filestat <> 0
     Show 'Error closing output file.  Program terminating.'
     Stop 
  End-If
End-Procedure


#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#Include 'gexxx922.sqc'  !Get pay single row run control