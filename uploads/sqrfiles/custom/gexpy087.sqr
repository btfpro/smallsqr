!***********************************************************************
!  GEXPY087:  Mailing Labels on Pin Feed Printer
!		This will be creating a file that will be FTPed to 
!		mainframe and from there this file will be directed to
!		to this pin feed printer
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!
! GEXPY019 Giant Eagle - Mailing Labels
!
! Narrative:	Produce Mailing Labels based on run control
! #Debugx Used:	#debug9 paragraph trace
!
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!	ID#	INITIALS	DATE		DESCRIPTION OF THE CHANGE          *
!***********************************************************************
!GEXPY087     	SXK 		04/25/99 	INITIAL CREATION       *
!	        SXK             09/07/1999      Modified to print ssn
!					whenever user selects the flag
!					on the run control panel
!               SXK             12/01/1999  Modified to have emplid/name
!					sort, full/part time sort and 
!					full/part time criteria
!		SXK 		01/17/00   Modified to improve performance
!
!               7.51 changes follow:
!		SXKM		01/20/00   Modified zip to postal
!               CWB             02/22/00   Added logic to select union_cd
!                                            from PS_JOB_LABOR instead of
!                                            PS_EMPLOYMENT.   
!               CWB             03/15/00   Modified logic to select 
!                                            benefit plan.
!               SXC             04/04/2000   12 test labels will be printed at 
!                                             the start of the dat file.
!               PSR             09/20/2002 Modified logic to select union_cd
!                                          from PS_JOB table
!***********************************************************************

#include 'setenv.sqc'    !Set environment
begin-setup
#include 'setupdb.sqc'
end-setup

begin-report
#debug9 show 'Begin-Report'
  do Init-DateTime
  do Init-Number

  do Get-Current-DateTime
  show '$SysDateTime=' $SysDateTime 
  show '$AsOfToday=' $AsOfToday    
 
  do Init-Report
  do P100-Open-File
  do Process-Main
!  do Reset
  do Stdapi-Term
  show 'Successful End of Report'

end-report

begin-procedure P100-Open-File
#debug9 Show 'P100-Open-File'

  let $file1 = '{OUTFILE}' || lower($ReportID) || '.dat'

  open $file1
        as 1
        for-writing
        record=215:fixed  !Includes six lines each 35 characters long
        status=#filestat  !and five separator characters

  if #filestat != 0
     display 'Error Opening output file.  Program terminating.'
     stop
  else
     let $x_fill = 'XXX XXX XXX XXX XXX XXX'
     Let #i = 1      ! SXC 04/04/2000. 12 test labels will be printed at the beginning of file
     while #i <= 12
         write 1 from $X_fill:35
         write 1 from $x_fill:35
         write 1 from $X_fill:35
         write 1 from ' ':35
         write 1 from ' ':35
         write 1 from ' ':35
         add 1 to #i
     end-while       
     
!     write 1 from $X_fill:35
!     write 1 from $x_fill:35
!     write 1 from $X_fill:35
!     write 1 from ' ':35
!     write 1 from ' ':35
!     write 1 from ' ':35
!     write 1 from $X_fill:35
!     write 1 from $x_fill:35
!     write 1 from $X_fill:35
!     write 1 from ' ':35
!     write 1 from ' ':35
!     write 1 from ' ':35
  end-if 
end-procedure

begin-procedure Init-Report
#debug9 show 'Init-Report'

  move 'GEXPY087' to $ReportID
  move 'Mailing Labels' to $ReportTitle

  show '$ReportID=' $ReportID 
  show '$ReportTitle=' $ReportTitle
  show '$ReportDate=' $ReportDate
  show '$ReportTime=' $ReportTime

  do Stdapi-Init

  if $prcs_process_instance = ''
!must have been submitted via SQRW

	let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1' 
	let $GEXXX902_INCLUDE_DEPTID_CRITERIA		= '1=1'
	let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA 	= '1=1'
	let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA          = '1=1'
        let $GEXXX928_INCLUDE_BENEFIT_PROGRAM_CRITERIA  = '1=1'
        let $GEXXX913_INCLUDE_UNION_CD_CRITERIA         = '1=1'
	let $GEXXX916_INCLUDE_JOBCODE_CRITERIA          = '1=1'
        let $GEXXX907_INCLUDE_DIV_CD_CRITERIA           = '1=1'
        let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA     = '1=1'
  else
	Do GEXXX922-Select-Parameters

      Let $GEXXX901_Company_Alias  = 'C.COMPANY' 
      Let $GEXXX901_Paygroup_Alias = 'C.PAYGROUP'    
      Do GEXXX901-Select-Company-Paygroup-Parameters    

 	Let $GEXXX902_Deptid_Alias = 'C.DEPTID'  
	Do GEXXX902-Select-Deptid-Parameters 

	Let $GEXXX903_Emp_Stat_Alias = 'C.EMPL_STATUS'  
	Do GEXXX903-Select-Emp-Stat-Parameters          

	Let $GEXXX909_Acct_CD_Alias = 'C.ACCT_CD'
	Do GEXXX909-Select-Acct-CD-Parameters

	Let $GEXXX928_Benefit_program_Alias = 'D.BENEFIT_PROGRAM'
	Do GEXXX928-Select-Benefit-Program-Parameters
        show 'gexxx928: ' $GEXXX928_INCLUDE_BENEFIT_PROGRAM_CRITERIA
	Let $GEXXX913_Union_cd_Alias = 'C.UNION_CD'
	Do GEXXX913-Select-Union-Cd-Parameters

	Let $GEXXX916_Jobcode_Alias = 'C.JOBCODE'
	Do GEXXX916-Select-Jobcode-Parameters

	Let $GEXXX907_Div_CD_Alias = 'GEX_DEPT.GEX_COMPANY_DIV_CD'
	Do GEXXX907-Select-Div-CD-Parameters

        Let $GEXXX912_Plan_Type_Alias    = 'PL.PLAN_TYPE'
        Let $GEXXX912_Benefit_Plan_Alias = '1'
        Do GEXXX912-Select-Benefit-Plan-Parameters
        if #GEX_RC_BEN_PLAN_ROWS = 0
      !SXK 01/17/00 Begin Changed from AND 1=1 to )
!           let $where_1 = ')'
      !CWB 02/22/00 changed ) back to AND 1=1 to correct runtime error.
            let $where_1 = 'AND 1=1'
        else
!SXK 01/17/00 Commented out
!           let $where_1 =  'AND C.EMPLID IN (SELECT pl.EMPLID FROM PS_BAS_PARTIC_PLAN PL '||
!                   'WHERE '||$GEXXX912_Include_Benefit_Plan_Criteria||
!                     ' AND pl.EMPLID '||'='||' C.EMPLID'||
!                     ' AND pl.BENEFIT_PROGRAM '||'='||' D.BENEFIT_PROGRAM'||
!                     ' AND pl.CUR_ELECT_IND = '||'''Y'''||
!                     ' AND pl.BENEFIT_RCD_NBR = '||'(select max(mb.benefit_rcd_nbr)'||
!                                           ' from ps_bas_partic_plan mb'||
!                                          ' where mb.emplid'||' = pl.emplid'||
!                                            ' and mb.benefit_program = '||
!                                                   ' pl.benefit_program'||
!                                            ' and mb.plan_type ='||' pl.plan_type'||
!                                            ' and mb.cur_elect_ind = '||'''Y'''||
!                                            ' and mb.event_id = '||'pl.event_id)'||
!                    ' AND pl.event_id ='||' (select max(me.event_id)'||
!                                   ' from ps_bas_partic_plan me'||
!                                  ' where me.emplid ='||' pl.emplid'||
!                                    ' and me.benefit_program = '||
!                                        ' pl.benefit_program'||
!                                    ' and me.cur_elect_ind = '||'''Y'''||
!                                    ' and me.plan_type = '||'pl.plan_type'||
!                                    ' and me.benefit_rcd_nbr = '||'pl.benefit_rcd_nbr))'
!SXK added the following code
	if #GEX_RC_BEN_PRGM_ROWS = 0
		let $where_1 = ' and exists (select '||'''x'''||' from ps_bas_partic_plan pl' ||
				' where (pl.sched_id like '||'''EM%'''||' or pl.sched_id like'|| '''OE%'''||')'|| 
				' and pl.plan_type = '||'''82'''||
				' and pl.cur_elect_ind = '||'''Y'''||
				' AND pl.event_id = '||'('||'select max(me.event_id)'||
					' from ps_bas_partic_plan me'||
					' where me.sched_id ='||' pl.sched_id'||
					' and me.emplid = '||'pl.emplid'||
					' and me.benefit_program = '||'pl.benefit_program'||
					' and me.plan_type = '||'pl.plan_type'||
					' and me.benefit_rcd_nbr = '||'pl.benefit_rcd_nbr'||'))'
        else
	  unstring $GEXXX928_INCLUDE_BENEFIT_PROGRAM_CRITERIA by 'D.' into $benpgm_1 $benpgm_2
          let $benpgm_string = '(PL.'||$benpgm_2
		let $where_1 = ' and exists (select '||'''x'''||' from ps_bas_partic_plan pl' ||
				' where '||'('||'pl.sched_id like '||'''EM%'''||' or pl.sched_id like'|| '''OE%'''||')'||
				' and '||$benpgm_string||
!CWB 03/15/2000 Begin
!				' and pl.plan_type = '||'''82'''||
	                        ' and [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]' ||
!CWB 03/15/2000 End
             			' and pl.cur_elect_ind = '||'''Y'''||
				' AND pl.event_id = '||'('||'select max(me.event_id)'||
					' from ps_bas_partic_plan me'||
					' where me.sched_id = '||'pl.sched_id'||
					' and me.emplid = '||'pl.emplid'||
					' and me.benefit_program = '||'pl.benefit_program'||
					' and me.plan_type = '||'pl.plan_type'||
					' and me.benefit_rcd_nbr = '||'pl.benefit_rcd_nbr'||'))'
  	end-if
!SXK 01/17/00 end
       end-if
     end-if
display '$where_1: ' $where_1
end-procedure

begin-procedure Get-Values
#debug9 show 'Get-Values'
    !do nothing
end-procedure


begin-procedure Process-Main
#debug9 show 'Process-Main'

  let $where = ' '
  let $x100_Get_Employees_Data_Flag = 'N'
  if RTRIM($GEX_RC_PAY.BIRTHDATE,' ') <> ''
     let $where = 'AND B.BIRTHDATE '||$GEX_RC_PAY.GEX_OPERATOR1||''''||$GEX_RC_PAY.BIRTHDATE||''''
  end-if
  if RTRIM($GEX_RC_PAY.HIRE_DT,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'E.HIRE_DT '||$GEX_RC_PAY.GEX_OPERATOR2||''''||$GEX_RC_PAY.HIRE_DT||''''
     else
        let $where = 'AND E.HIRE_DT '||$GEX_RC_PAY.GEX_OPERATOR2||''''||$GEX_RC_PAY.HIRE_DT||''''
     end-if
  end-if
  if RTRIM($GEX_RC_PAY.postal,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'B.postal = '||''''||$GEX_RC_PAY.postal||''''
     else
        let $where = 'AND B.postal = '||''''||$GEX_RC_PAY.postal||''''         
     end-if
  end-if
  if RTRIM($GEX_RC_PAY.LOCATION,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'C.LOCATION = '||''''||$GEX_RC_PAY.LOCATION||''''
     else
        let $where = 'AND C.LOCATION = '||''''||$GEX_RC_PAY.LOCATION||''''
     end-if
  end-if
  if RTRIM($GEX_RC_PAY.EMPL_TYPE,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'C.EMPL_TYPE = '||''''||$GEX_RC_PAY.EMPL_TYPE||''''
     else
        let $where = 'AND C.EMPL_TYPE = '||''''||$GEX_RC_PAY.EMPL_TYPE||''''
     end-if
  end-if
!SXK 12/01/1999 Begin
  if RTRIM($GEX_RC_PAY.FULL_PART_TIME,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'C.FULL_PART_TIME = '||''''||$GEX_RC_PAY.FULL_PART_TIME||''''
     else
        let $where = 'AND C.FULL_PART_TIME = '||''''||$GEX_RC_PAY.FULL_PART_TIME||''''
     end-if
  end-if
!SXK 12/01/1999 End

display 'Where:'
display $where


  let $order_by_complete = 'N'
  let #i = 1
  let $match_found = 'N'
  let $order_by = ' '

  while $order_by_complete = 'N'
     display #i noline
     display ' time(s)'

     if #GEX_RC_PAY.COMPANY_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.COMPANY, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.PAYGROUP_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.PAYGROUP, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.DEPTID_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.DEPTID, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.ACCT_CD_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.ACCT_CD, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.JOBCODE_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.JOBCODE, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.ZIP_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' B.postal, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.BENEFIT_PGM_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' D.BENEFIT_PROGRAM, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.LOCATION_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.LOCATION, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.BIRTHDATE_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' B.BIRTHDATE, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.HIRE_DT_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' E.HIRE_DT, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.UNION_CD_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.UNION_CD, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.EMPL_TYPE_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.EMPL_TYPE, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.EMPL_STATUS_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.EMPL_STATUS, '
        goto endwhile
     end-if
!SXK 12/01/1999 Begin
     if #GEX_RC_PAY.FULL_PART_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.FULL_PART_TIME, '
        goto endwhile
     end-if
!SXK 12/01/1999 End
endwhile:
     if $match_found = 'Y'
        add 1 to #i
        let $match_found = 'N'
     else
        let $order_by_complete = 'Y'

!SXK 12/01/1999 Begin
        if $GEX_RC_PAY.YES_NO_FLAG = 'N'
           let $order_by = $order_by ||'B.NAME'
        else
           let $order_by = $order_by ||'B.EMPLID'
        end-if
!SXK 12/01/1999 End

!        let #len = length($order_by)
!        if #len > 2
!          let #last_pos = #len - 2
!          let $order_by = substr($order_by,1,#last_pos)
!        end-if
     end-if
   end-while

   if RTRIM($order_by,' ') = ''
      let $order_by = 'ORDER BY C.COMPANY,C.PAYGROUP,C.DEPTID,B.NAME'
   else
      let $order_by = 'ORDER BY '||$order_by
   end-if

display 'Order by:'
display $order_by        

let #rowcount = 0
let #inputtran = 0

show 'a: ' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
show 'b: ' $GEXXX902_INCLUDE_DEPTID_CRITERIA
show 'c: ' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
show 'd: ' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA
show 'e: ' $GEXXX928_INCLUDE_BENEFIT_PROGRAM_CRITERIA
show 'f: ' $GEXXX913_INCLUDE_UNION_CD_CRITERIA
show 'g: ' $GEXXX916_INCLUDE_JOBCODE_CRITERIA
show 'h: ' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
show 'i: ' $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
show '$where: ' $where
show '$where_1: ' $where_1
show '$order_by: ' $order_by
show $asoftoday

begin-SELECT
/*+ RULE */ 
C.COMPANY 	
C.PAYGROUP
C.DEPTID  
C.ACCT_CD
C.EMPLID
C.LOCATION
C.JOBCODE
C.UNION_CD
B.NAME
B.ADDRESS1
B.ADDRESS2
B.ADDRESS3
B.CITY
B.STATE
B.POSTAL

  move ' ' to $first_line
  move ' ' to $second_line
  move ' ' to $third_line
  move ' ' to $fourth_line
  move ' ' to $fifth_line
  move ' ' to $sixth_line

  if $GEX_RC_PAY.GEX_INTERNAL = 'Y'
     let $first_line = &C.COMPANY||' '||&C.PAYGROUP||' '||&C.DEPTID

     !SXK 09/07/1999 Begin
     if $GEX_RC_PAY.GEX_SSN_OR_JOB = 'Y'
       let $first_line = $first_line||' '||&C.EMPLID
     else
       let $first_line = $first_line||' '||&C.JOBCODE||' '||&C.ACCT_CD
     end-if
     !SXK 09/07/1999 End

     move &B.NAME to $second_line

     if $GEX_RC_PAY.GEX_LOCATION = 'Y'
        move &C.LOCATION to $third_line

     else

       if RTRIM(&B.ADDRESS1,' ') <> ''
          move &B.ADDRESS1 to $third_line
       end-if
       if RTRIM(&B.ADDRESS2,' ') <> ''
          move &B.ADDRESS2 to $fourth_line
       end-if
       if RTRIM(&B.ADDRESS3,' ') <> ''
          move &B.ADDRESS3 to $fifth_line
       end-if
       let #len = length(rtrim(&B.CITY,' '))
       let $city = substr(&B.CITY,1,#len)
       let $string = $city||', '||&B.STATE||'  '||&B.postal
   
       move $string to $sixth_line

     end-if

   else
    !SXK 09/07/1999 Begin     
     if $GEX_RC_PAY.GEX_SSN_OR_JOB = 'Y'
        move &C.EMPLID to $first_line
        move &B.NAME to $second_line
        if RTRIM(&B.ADDRESS1,' ') <> ''
           move &B.ADDRESS1 to $third_line
        end-if

        if RTRIM(&B.ADDRESS2,' ') <> ''
           move &B.ADDRESS2 to $fourth_line
        end-if
        if RTRIM(&B.ADDRESS3,' ') <> ''
           move &B.ADDRESS3 to $fifth_line
        end-if
        let #len = length(RTRIM(&B.CITY,' '))
        let $city = substr(&B.CITY,1,#len)
        let $string = $city||', '||&B.STATE||'  '||&B.postal
 
        move $string to $sixth_line
     else

        move &B.NAME to $first_line

        if RTRIM(&B.ADDRESS1,' ') <> ''
           move &B.ADDRESS1 to $second_line
        end-if

        if RTRIM(&B.ADDRESS2,' ') <> ''
           move &B.ADDRESS2 to $third_line
        end-if
        if RTRIM(&B.ADDRESS3,' ') <> ''
           move &B.ADDRESS3 to $fourth_line
        end-if
        let #len = length(RTRIM(&B.CITY,' '))
        let $city = substr(&B.CITY,1,#len)
        let $string = $city||', '||&B.STATE||'  '||&B.postal
 
        move $string to $fifth_line
     end-if
    !SXK 09/07/1999 End
   end-if     

   do write-file

   let $x100_Get_Employees_Data_Flag = 'Y'

FROM 	PS_JOB C, PS_EMPLOYMENT E,
        PS_PERSONAL_DATA B

WHERE [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
 AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
 AND [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
 AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
 AND [$GEXXX913_INCLUDE_UNION_CD_CRITERIA]
 AND [$GEXXX916_INCLUDE_JOBCODE_CRITERIA]
 [$where]
 and exists (Select 'x' from ps_ben_prog_partic d
		where d.emplid = c.emplid
		and d.empl_Rcd = c.empl_rcd
                AND [$GEXXX928_INCLUDE_BENEFIT_PROGRAM_CRITERIA]
		 AND D.EFFDT = (SELECT MAX(PT.EFFDT)
		                  FROM PS_BEN_PROG_PARTIC PT
		                 WHERE PT.EMPLID = D.EMPLID
		                   AND PT.EMPL_RCD = D.EMPL_RCD
               		   AND PT.EFFDT <= $AsOfToday))
!SXK 01/17/00 Commented out
! AND C.DEPTID = GEX_DEPT.DEPTID 
 and exists (select 'x' from ps_gex_dept_tbl gex_dept
		 where C.DEPTID = GEX_DEPT.DEPTID
		 AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
		 AND GEX_DEPT.EFFDT = (SELECT MAX(GEX_DEPT1.EFFDT)
					FROM PS_GEX_DEPT_TBL GEX_DEPT1
					WHERE GEX_DEPT1.DEPTID = GEX_DEPT.DEPTID AND
					GEX_DEPT1.EFFDT <= $AsOfToday)
		 AND GEX_DEPT.SEQUENCE_NUMBER = (SELECT MAX(GEX_DEPT2.SEQUENCE_NUMBER)
					 FROM PS_GEX_DEPT_TBL GEX_DEPT2
					WHERE GEX_DEPT2.DEPTID = GEX_DEPT.DEPTID AND
					GEX_DEPT2.EFFDT = GEX_DEPT.EFFDT))
 AND C.EMPLID = B.EMPLID
 AND C.EMPLID = E.EMPLID
 AND C.EMPL_RCD = E.EMPL_RCD


!SXK 01/17/00 Commented out here
! AND C.EMPLID = D.EMPLID
! AND C.EMPL_RCD = D.EMPL_RCD
!SXK 01/17/00 Commented here
! AND D.EFFDT = (SELECT MAX(PT.EFFDT)
!                  FROM PS_BEN_PROG_PARTIC PT
!                 WHERE PT.EMPLID = D.EMPLID
!                   AND PT.EMPL_RCD = D.EMPL_RCD
!                   AND PT.EFFDT <= $AsOfToday)
 AND C.EFFDT =
      (SELECT MAX(H.EFFDT)
      FROM PS_JOB H
      WHERE H.EMPLID = C.EMPLID
       AND H.EMPL_RCD = C.EMPL_RCD
       AND H.EFFDT <= $AsOfToday)
 AND C.EFFSEQ =
     (SELECT MAX(I.EFFSEQ)
      FROM PS_JOB I
      WHERE I.EMPLID = C.EMPLID
        AND I.EMPL_RCD = C.EMPL_RCD
        AND I.EFFDT = C.EFFDT)


[$where_1]
! AND C.EMPLID IN (SELECT pl.EMPLID FROM PS_BAS_PARTIC_PLAN PL
!                   WHERE [$GEXXX912_Include_Benefit_Plan_Criteria]
!                     AND pl.EMPLID = C.EMPLID
!                     AND pl.BENEFIT_PROGRAM = D.BENEFIT_PROGRAM
!                     AND pl.CUR_ELECT_IND = 'Y'
!                     AND pl.BENEFIT_RCD_NBR = (select max(mb.benefit_rcd_nbr)
!                                           from ps_bas_partic_plan mb
!                                          where mb.emplid = pl.emplid
!                                            and mb.benefit_program = 
!                                                   pl.benefit_program
!                                            and mb.plan_type = pl.plan_type
!                                            and mb.cur_elect_ind = 'Y'
!                                            and mb.event_id = pl.event_id)
!                    AND pl.event_id = (select max(me.event_id)
!                                   from ps_bas_partic_plan me
!                                  where me.emplid = pl.emplid
!                                    and me.benefit_program = 
!                                        pl.benefit_program
!                                    and me.cur_elect_ind = 'Y'
!                                    and me.plan_type = pl.plan_type
!                                    and me.benefit_rcd_nbr = pl.benefit_rcd_nbr))
[$order_by]
end-SELECT

 if $x100_Get_Employees_Data_Flag = 'N'
	display 'NO DATA SELECTED FOR THIS REPORT RUN'	
 else
 
  display 'Total labels printed: '	noline
  display #inputtran 

 end-if
	
end-procedure

begin-procedure Write-File
#debug9 Show 'Write-File'
  let #blank_line = 0
  write 1 from $First_Line:35
    status=#filestat

  if #filestat != 0
     display 'Error Writing output file.  Program terminating.'
     stop
  else
    if rtrim($second_line,' ') <> ''
    write 1 from $second_line:35
      status=#filestat
    else
      add 1 to #blank_line
    end-if
     if #filestat != 0
        display 'Error Writing output file.  Program terminating.'
        stop
     else
       if rtrim($third_line,' ') <> ''
        write 1 from $third_line:35
          status=#filestat
       else
         add 1 to #blank_line
       end-if
          if #filestat != 0
             display 'Error Writing output file.  Program terminating.'
             stop
          else
 	     if rtrim($fourth_line,' ') <> ''
             write 1 from $fourth_line:35
               status=#filestat
             else
              add 1 to #blank_line

	     end-if
	       if #filestat != 0
		     display 'Error Writing output file.  Program terminating.'
		     stop
	       else
		if rtrim($fifth_line,' ') <> ''
	          write 1 from $fifth_line:35
		      status=#filestat
		else
		      add 1 to #blank_line

		end-if
                  if #filestat != 0
		     display 'Error Writing output file.  Program terminating.'
		     stop
		  else
		    if rtrim($sixth_line,' ') <> ''
		    write 1 from $sixth_line:35
		      status=#filestat
		    else
		      add 1 to #blank_line

		    end-if
			  if #filestat != 0
			     display 'Error Writing output file.  Program terminating.'
			     stop
			  else
			   add 1 to #inputtran
			   add 1 to #rowcount
			  end-if
                  end-if
              end-if
          end-if
      end-if
  end-if
  let $spaces_line = ' '
  let #i = 1
  while #i <= #blank_line
    write 1 from $spaces_line:35
    add 1 to #i
  end-while
end-procedure



#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'gexregtp.sqc'	 !Translates REG_TEMP code into full/part time code
 
!#include 'GEXXX900.sqc'  !Get company multiple row table
!#include 'GEXXX901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table

#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#Include 'gexxx912.sqc'
#include 'gexxx913.sqc'
#include 'gexxx916.sqc'
#include 'gexxx928.sqc'
#include 'gexxx922.sqc'  !Get pay single row run control

