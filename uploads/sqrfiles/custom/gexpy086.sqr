!***********************************************************************
! GEXPY086:  Store Hours-Gross-Net Report                              *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY086:             Store Hours-Gross-Net Report                   *
!                                                                      *
! Narrative:            This report will be distributed to the stores  *
!                       for them to verify their employees total       *
!                       hours, check gross amount, and check net       *
!                       amount.                                        *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           gex_dept_tbl                                   *
!                       personal_data                                  *
!                       job                                            *
!                       pay_check                                      *
!                       pay_earnings                                   *
!                       pay_oth_earnings                               *
!                                                                      *
! Written by:           Jim Hutchison                                  *
!                                                                      *
! Normally Run:         Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Company Division Code(s)                     *
!                         Company(s)                                   *
!                         Paygroup(s)                                  *
!                         Deptid(s)                                    *
!                         Employee Status(S)                           *
!                         Account Code(s)                              *
!                         Employee Type(s)                             *
!                         As Of Date                                   *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! JDH       04/13/99    Initial Creation                               *
! JDH       05/26/99    Add sepchk to join between check and earnings. *
! SCM      06/22/00     Add Hourly/Salary column to report. Order by   *
!                       and break on empl_type.  Provide separate      *
!                       totals by each empl_type (hourly and salaried) *
!GEX_PY255 SXD 08/22/2007   Commented optimizer goal rule              *
!GEX-TLL   07/08/2008   ITG #51358 (Added erncd 173)		       *
!ISDVSXP   10/21/2008  	S3 11373179
!GEX_SEC_REENG 09/16/2016 Vahini Katta 
!Changes related to SSN Conversion
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization


#define #column1     1
#define #column2     8
#define #column3    41
#define #column4    55
#define #column5    62      !SCM 6-22-00  changed from 64    
#define #column6    70      !SCM 6-22-00  changed from 72  
#define #column6A   68      !SCM 6-22-00  ADDED for totals             
#define #column7    82      !SCM 6-22-00  changed from 89 
#define #column8    98      !SCM 6-22-00  changed from 106 
#define #column9   115      !SCM 6-22-00  ADDED
#define #column9A  117      !SCM 6-22-00  ADDED

!SXD    08/22/2007   Begin
!Begin-Setup
!  Begin-SQL
!    Alter Session Set OPTIMIZER_GOAL=RULE;
!  End-SQL
!End-Setup
!                    End
       

Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report


Begin-Heading 9
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg04.sqc'

  If $Deptid <> $priorDeptid
    Do Get-Department-Name
    Let $priorDeptid = $Deptid
  End-If

  Print 'Deptid'           (5,1)
  Print $Deptid            (5,13)
  Print $DeptName          (5,+1)

  Print 'ACCT'             (+2,{#column1})
  Print 'JOB'              (+0,{#column4})
  Print 'OFF'              (+0,{#column5})
  Print '    HOURS'        (+0,{#column6})
  Print 'HRLY/'            (+0,{#column9})          !SCM 6-22-00  Added

  Print 'CODE'             (+1,{#column1})
  Print 'NAME'             (+0,{#column2})
  Print 'EMPLID'           (+0,{#column3})
  Print 'CODE'             (+0,{#column4})
  Print 'CYCLE'            (+0,{#column5})
  Print '     PAID'        (+0,{#column6})
  Print '  GROSS AMOUNT'   (+0,{#column7})
  Print '    NET AMOUNT'   (+0,{#column8})
  Print 'SALRD'            (+0,{#column9})         !SCM 6-22-00  Added

  Print '-'                (+1,{#column1},4)   Fill
  Print '-'                (+0,{#column2},30)  Fill
  Print '-'                (+0,{#column3},11)  Fill
  Print '-'                (+0,{#column4},6)   Fill
  Print '-'                (+0,{#column5},5)   Fill
  Print '-----'            (+0,74)
  !Print '-'                (+0,{#column6},7)   Fill
  Print '-'                (+0,{#column7},13)  Fill
  Print '-'                (+0,{#column8},13)  Fill
  Print '-'                (+0,{#column9},5)   Fill   !SCM 6-22-00  Added
End-Heading


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      = 'GEXPY086'
  Let $ReportTitle   = 'STORE HOURS-GROSS-NET REPORT'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  Let $GEXXX900_Company_Alias  = 'j.company'
  Let $GEXXX901_Company_Alias  = 'j.company'
  Let $GEXXX901_Paygroup_Alias = 'j.paygroup'
  Let $GEXXX902_Deptid_Alias   = 'j.deptid'
  Let $GEXXX903_Emp_Stat_Alias = 'j.empl_status'
  Let $GEXXX907_Div_CD_Alias   = 'gdt.gex_company_div_cd'
  Let $GEXXX909_Acct_CD_Alias  = 'j.acct_cd'
  Let $GEXXX930_Emp_Type_Alias = 'j.empl_type'

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  Do Format-DateTime($X000_Where_Select_AsOfDate, $X000_Report_Heading_AsOfDate, {DEFDATE}, '', '')
  Let $X000_Order_By = 'Company, Deptid, Account Code, Name'

  Show '$GEXXX907_Include_Div_Cd_Display_Criteria           = ' $GEXXX907_Include_Div_Cd_Display_Criteria
  Show '$GEXXX900_Include_Company_Display_Criteria          = ' $GEXXX900_Include_Company_Display_Criteria
  Show '$GEXXX901_Include_Company_Paygroup_Display_Criteria = ' $GEXXX901_Include_Company_Paygroup_Display_Criteria
  Show '$GEXXX902_Include_Deptid_Display_Criteria           = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Display_Criteria         = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  Show '$GEXXX909_Include_Acct_Cd_Display_Criteria          = ' $GEXXX909_Include_Acct_Cd_Display_Criteria
  Show '$GEXXX930_Include_Emp_Type_Display_Criteria         = ' $GEXXX930_Include_Emp_Type_Display_Criteria
  Show '$X000_Where_Select_AsOfDate = '                         $X000_Where_Select_AsOfDate

  Do P130-Print-Cover-Page
  Do P140-Get-Last-Confirmed-Pay
End-Procedure


Begin-Procedure P110-SQRW-Run-Controls
#debug9 Show 'P110-SQRW-Run-Controls'
  Let $EmplTypeString = ''''
  Display 'Enter Employee Type or leave blank to exit.'
  While 1=1
    Input $In-EmplType Maxlen=1 'Employee Type'
    Uppercase $In-EmplType
    If Rtrim($In-EmplType, ' ') = ''
      Concat '''' With $EmplTypeString
      Break
    End-If
    If $EmplTypeString <> ''''
      Concat ''',''' With $EmplTypeString
    End-If
    Concat $In-EmplType With $EmplTypeString
  End-While

  If $EmplTypeString = ''''''
    Let $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA = '1=1'
    Let $GEXXX930_INCLUDE_EMP_TYPE_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA = $GEXXX930_Emp_Type_Alias || ' In (' || $EmplTypeString || ')'
    Let $GEXXX930_INCLUDE_EMP_TYPE_DISPLAY_CRITERIA = $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA
  End-If

  Do GEXXX950-Input-Parameters
End-Procedure


Begin-Procedure P120-Process-Scheduler-Run-Controls
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXXX922-Select-Parameters

  Let $X000_Where_Select_AsOfDate = $GEX_RC_PAY.AsOfDate
  If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
    Let $X000_Where_Select_AsOfDate = $AsOfToday
  End-If

  Do GEXXX900-Select-Company-Parameters
  Do GEXXX901-Select-Company-Paygroup-Parameters
  Do GEXXX902-Select-Deptid-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters
  Do GEXXX907-Select-Div-CD-Parameters 
  Do GEXXX909-Select-Acct-CD-Parameters
  Do GEXXX930-Select-Emp-Type-Parameters
End-Procedure


begin-procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX907_Include_Div_Cd_Display_Criteria           ='   (+2,5)
  Print $GEXXX907_Include_Div_Cd_Display_Criteria                 (0,+2)
  Print '$GEXXX900_Include_Company_Display_Criteria          ='   (+1,5)
  Print $GEXXX900_Include_Company_Display_Criteria                (0,+2)
  Print '$GEXXX901_Include_Company_paygroup_Display_Criteria ='   (+1,5)
  Print $GEXXX901_Include_Company_paygroup_Display_Criteria       (0,+2)
  Print '$GEXXX902_Include_Deptid_Display_Criteria           ='   (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria	          (0,+2)
  Print '$GEXXX903_Include_Emp_Stat_Display_Criteria         ='   (+1,5)
  Print $GEXXX903_Include_Emp_Stat_Display_Criteria               (0,+2)
  Print '$GEXXX909_Include_Acct_Cd_Display_Criteria          ='   (+1,5)
  Print $GEXXX909_Include_Acct_Cd_Display_Criteria                (0,+2)
  Print '$GEXXX930_Include_Emp_Type_Display_Criteria         ='   (+1,5)
  Print $GEXXX930_Include_Emp_Type_Display_Criteria               (0,+2)

  Print 'As Of Date :'                      (+2,5)
  Print $X000_Report_Heading_AsOfDate       (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'   (+5,2)
  Print $X000_Order_By                      (+2,5)

  Let #PAGE-COUNT = 0
End-Procedure


Begin-Procedure P140-Get-Last-Confirmed-Pay
#debug9 Show 'P140-Get-Last-Confirmed-Pay'
Begin-Select
Max(pay_end_dt) &pay_end_dt

  Let $pay_end_dt = &pay_end_dt
  Let $PayEndDate = $pay_end_dt

  If Rtrim($pay_end_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  Else
    Show 'Last confirmed pay end date:  ' $pay_end_dt
  End-If

From   ps_pay_calendar

Where  pay_end_dt              =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  pay_end_dt      <= $X000_Where_Select_AsOfDate
       And    pay_confirm_run  = 'Y')

And    pay_confirm_run         = 'Y'
End-Select
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
Begin-Select
j.company  ()  On-Break  Level=1
                         Print=Never
                         After=P230-After-Company-Break

j.deptid   ()  On-Break  Level=2
                         Print=Never
!                         Before=P240-Before-Deptid-Break           !SCM 6-22-00 commented
                         After=P250-After-Deptid-Break

j.empl_type  () On-Break Level=3                          !SCM 6-22-00 added break on empl_type
                         Print=Never
                         Before=P245-Before-Empltype-Break
                         After=P255-After-Empltype-Break
pd.name
j.acct_cd
j.emplid
j.empl_rcd
j.jobcode
pc.paygroup
pc.off_cycle
pc.page_num
pc.line_num
pc.sepchk
pc.total_gross
pc.net_pay

  Let $save_empl_type = &j.empl_type                !SCM 6-22-00  Added     
  Let $company = &j.company
  Let $deptid  = &j.deptid

  Let #gross = &pc.total_gross
  Let #net   = &pc.net_pay
  Let #hours = 0

  Do P210-Pay-Earnings

  If #gross <> 0 Or
     #net   <> 0 Or
     #hours <> 0
    Let $Data-Found-Flag = 'Y'
    Do P220-Print-Record
  End-If

  Add #gross To #deptid_gross  
  Add #net   To #deptid_net  
  Add #hours to #deptid_hours
 
  Add #gross to #deptid_gross_bytype           !SCM 6-22-00  Added           
  Add #net   to #deptid_net_bytype             !SCM 6-22-00
  Add #hours To #deptid_hours_bytype           !SCM 6-22-00

From   ps_gex_dept_tbl  gdt,
       ps_personal_data pd,
       ps_job           j,
       ps_pay_check     pc,
       ps_gex_person gex                       !sxp added for s3 11373179

Where  pc.pay_end_dt       = $pay_end_dt

And    j.company           = pc.company
And    j.paygroup          = pc.paygroup
And    j.emplid            = pc.emplid
And    j.empl_rcd         = pc.empl_rcd

And    j.effdt             =
      (Select Max(effdt)
       From   ps_job
       Where  emplid       = j.emplid
       And    empl_rcd    = j.empl_rcd
       And    effdt       <= $pay_end_dt)

And    j.effseq            =
      (Select Max(effseq)
       From   ps_job
       Where  emplid       = j.emplid
       And    empl_rcd    = j.empl_rcd
       And    effdt        = j.effdt)

And    pd.emplid           = j.emplid
AND    PD.EMPLID           = GEX.EMPLID	      !SXP Added for S3 #11373179 
!AND    PD.EMPLID='261925817'     !SXP FOR TESTING
And    gdt.deptid          = j.deptid

And    gdt.effdt           =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid       = gdt.deptid
       And    effdt       <= $pay_end_dt)

And    gdt.sequence_number =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid       = gdt.deptid
       And    effdt        = gdt.effdt)

!And    pd.gex_family_mbr Not In ('OWN','SPO','FAM')    SXP COMMENTED FOR S3 11373179
And    GEX.gex_family_mbr Not In ('OWN','SPO','FAM')    !SXP FOR S3 11373179
And   [$GEXXX900_Include_Company_Criteria]
And   [$GEXXX901_Include_Company_Paygroup_Criteria] 
And   [$GEXXX902_Include_Deptid_Criteria]
And   [$GEXXX907_Include_Div_Cd_Criteria]
And   [$GEXXX903_Include_Emp_Stat_Criteria]
And   [$GEXXX909_Include_Acct_Cd_Criteria]
And   [$GEXXX930_Include_Emp_Type_Criteria]

Order By j.company, j.deptid, j.empl_type, j.acct_cd, pd.name       !SCM 6-22-00  Added j.empl_type
End-Select
End-Procedure


Begin-Procedure P210-Pay-Earnings
#debug9 Show 'P210-Pay-Earnings'
Begin-Select
pe.addl_nbr
pe.reg_hrs
pe.reg_earn_hrs
pe.ot_hrs

  Add &pe.reg_hrs      To #hours
  Add &pe.reg_earn_hrs To #hours
  Add &pe.ot_hrs       To #hours

  Do P215-Pay-Oth-Earns

From   ps_pay_earnings  pe

Where  pe.company    = &j.company
And    pe.paygroup   = &pc.paygroup
And    pe.pay_end_dt = $pay_end_dt
And    pe.off_cycle  = &pc.off_cycle
And    pe.page_num      = &pc.page_num
And    pe.line_num      = &pc.line_num
And    pe.sepchk     = &pc.sepchk
End-Select
End-Procedure


Begin-Procedure P215-Pay-Oth-Earns
#debug9 Show 'P215-Pay-Oth-Earns'
Begin-Select
poe.oth_hrs

  Add &poe.oth_hrs To #hours

From   ps_pay_oth_earns  poe

Where  poe.company    = &j.company
And    poe.paygroup   = &pc.paygroup
And    poe.pay_end_dt = $pay_end_dt
And    poe.off_cycle  = &pc.off_cycle
And    poe.page_num      = &pc.page_num
And    poe.line_num      = &pc.line_num
And    poe.addl_nbr      = &pe.addl_nbr

!And  (erncd          In ('REG','OTP')
!And  (erncd          In ('REG','OTP')
And  (erncd          In ('REG','OTP','173') !GEX-TLL 07/08/2008 Added Erncd=173 ITG #51358
Or    erncd     Between '001' And '600')
End-Select
End-Procedure


Begin-Procedure P220-Print-Record
#debug9 Show 'P220-Print-Record'
  Print &j.acct_cd       (+1,{#column1})
  Print &pd.name         (+0,{#column2},30)
  Print &j.emplid        (+0,{#column3})  !Edit xxx-xx-xxxx !GEX_SEC_REENG Vahini Katta
  Print &j.jobcode       (+0,{#column4})

  If &pc.off_cycle = 'Y'
    Print 'Y'            (+0,{#column5})
  End-If

  Print #hours           (+0,{#column6})  Edit 999,990.00
  Print #gross           (+0,{#column7})  Edit 999,999,990.00
  Print #net             (+0,{#column8})  Edit 999,999,990.00
  Print &j.empl_type     (+0,{#column9A})                          !SCM Added 6-22-00
End-Procedure


Begin-Procedure P230-After-Company-Break
#debug9 Show 'P230-After-Company-Break'
  Print 'Company'        (+2,{#column2})
  Print $Company         (+0,+1)
  Print 'Total'          (+0,+1)

  Print #company_hours   (+0,{#column6A})  Edit 9,999,990.00
  Print #company_gross   (+0,{#column7})  Edit 999,999,990.00
  Print #company_net     (+0,{#column8})  Edit 999,999,990.00

  Let #company_hours = 0
  Let #company_gross = 0
  Let #company_net   = 0
End-Procedure


Begin-Procedure P240-Before-Deptid-Break
#debug9 Show 'P240-Before-Deptid-Break'
  New-Page
End-Procedure

Begin-Procedure P245-Before-Empltype-Break                !SCM 6-22-00  Added new para
#debug9 Show 'P245-Before-Empltype-Break'
  New-Page
End-Procedure


Begin-Procedure P250-After-Deptid-Break
#debug9 Show 'P250-After-Deptid-Break'
  Print 'Deptid'         (+2,{#column2})
  Print $Deptid          (+0,+1)
  Print 'Report Total'          (+0,+1)

  Print #deptid_hours    (+0,{#column6A})  Edit 9,999,990.00
  Print #deptid_gross    (+0,{#column7})  Edit 999,999,990.00
  Print #deptid_net      (+0,{#column8})  Edit 999,999,990.00

  Add #deptid_hours To #company_hours
  Add #deptid_gross To #company_gross
  Add #deptid_net   To #company_net

  Let #deptid_hours = 0
  Let #deptid_gross = 0
  Let #deptid_net   = 0
End-Procedure

Begin-Procedure P255-After-Empltype-Break            !SCM 6-22-00  Added new para
#debug9 Show 'P255-After-Empltype-Break'
  Print 'Deptid'         (+2,{#column2})
  Print $Deptid          (+0,+1)
  Print 'Total for'      (+0,+1)
  if $save_empl_type = 'S'
        print 'Salaried' (+0,+1)
  else
      if $save_empl_type = 'H'
        print 'Hourly'   (+0,+1)
      else
         print 'Empltype NOT H or S'   (+0,+1)
      end-if
  end-if

  Print #deptid_hours_bytype    (+0,{#column6A})  Edit 9,999,990.00
  Print #deptid_gross_bytype    (+0,{#column7})  Edit 999,999,990.00
  Print #deptid_net_bytype      (+0,{#column8})  Edit 999,999,990.00

  Let #deptid_hours_bytype = 0
  Let #deptid_gross_bytype = 0
  Let #deptid_net_bytype   = 0
End-Procedure                                      !SCM 6-22-00  END of new paragraph added

Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    New-Page
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'
End-Procedure


#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx930.sqc'  !Get empl_type multiple row table
#include 'gexxx950.sqc'  !Get SQRW run controls

#include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'askaod.sqc'    !Get AsOfDate
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
