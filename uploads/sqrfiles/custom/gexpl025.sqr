!***********************************************************************
!  GEXPL025:  Bakers and Teamsters EE Contributions-Local 19           *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPL025:      Bakers and Teamsters EE Contributions-Local 19 Report *
!                                                                      *
! Narrative      This program creates a report Baker Local 19 that     *
!                shows EE Health and Welfare contributions separately. *
!                It sums deductions from paycheck data for the month   *
!                where the deduction class = 'B'                       *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           pay_calendar                                   *
!                       ben_defn_optn                                  *
!                       ben_defn_pgm                                   *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                       benef_plan_tbl                                 *
!                       earnings_bal                                   *
!                       pay_line                                       *
!                       pay_check                                      *
!                       pay_deduction                                  *
!                       health_benefit                                 *
!                                                                      *
! Written by:           Susan Mahady (cloned after gexpl014)           *
!                                                                      *
! Normally Run:	        Monthly                                        *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Plan Type(s)                                 *
!                         Vendor ID(s)                                 *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS   DATE      DESCRIPTION OF THE CHANGE                       *
!***********************************************************************
!  SCM    09/25/2003   Initial Creation                                *
!                                                                      *
!         11/10/2003   Changed order by to make sure most current job  *
!                      act/reason was put on report.  Added last day   *
!                      worked to report and adjusted columns to fit.   *
!                      Commented code in the get-status para to ensure *
!                      the last action/reason code is retrieved and    *
!                      displayed on the report.                        *

!GEX SXD  09/10/2007   Renamed XLATTABLE to PSXLATITEM and removed     *
!                      optimizer goal rule and commented the field     * 
!                      Language_cd                                     *
! GEX_SEC_REENG 2015-04-29 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************

#Include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

#define #column1     1
#define #column2    28
#define #column3    39
#define #column4    51
#define #column5    62 
#define #column6    74
#define #column7    80
#define #column8    88
#define #column9    96
#define #column10  108
#define #column10b 118                 !SCM 11/10/2003 added
#define #column11  130
#define #column12  142
#define #column13  147

Begin-Heading 8
#debug9 Show 'Begin-Heading'

#Include 'stdhdg01.sqc'

  Do Get-Provider-Name
  
  Print 'Provider:'            (3,1)
  Print $Provider              (3,13)
  Print $ProviderName          (3,+2)
   
  Print $Reporting_Period      (3,) Center 

  Print 'Benefit Program:'     (4,1)
  Print $Benefit_Program       (4,18)

  Print 'IN STORE'             (+2,{#column3})
  Print 'SERVICE'              (+0,{#column4})
  Print 'REG'                  (+0,{#column5})
  Print 'EMPL'                 (+0,{#column6})
  Print 'ACTION'               (+0,{#column8})
  Print 'EFF'                  (+0,{#column9})
  Print 'BENEFIT'              (+0,{#column10})
  Print 'LAST'                 (+0,{#column10b})               !SCM  11/10/2003     
  Print 'MTD EE'               (+0,{#column11})
 

  Print 'EMPLOYEE NAME'        (+1,{#column1})
  Print 'SSN'                  (+0,{#column2})
  Print 'DEPARTMENT'           (+0,{#column3})
  Print 'DATE'                 (+0,{#column4})
  Print 'TEMP'                 (+0,{#column5})
  Print 'STAT'                 (+0,{#column6})
  Print 'ACTION'               (+0,{#column7})
  Print 'REASON'               (+0,{#column8})
  Print 'DATE'                 (+0,{#column9})
  Print 'TERMDATE'             (+0,{#column10})
  print 'WORKED'               (+0,{#column10b})               !SCM  11/10/2003
  Print 'CONTRIBS'             (+0,{#column11})
  Print 'DEPARTMENT'           (+0,{#column12})
 
  

  Print '-'                    (+1,{#column1},25)  Fill
  Print '-'                    (+0,{#column2},09)  Fill
  Print '-'                    (+0,{#column3},10)  Fill
  Print '-'                    (+0,{#column4},10)  Fill
  Print '-'                    (+0,{#column5},10)  Fill
  Print '-'                    (+0,{#column6},04)  Fill
  Print '-'                    (+0,{#column7},06)  Fill
  Print '-'                    (+0,{#column8},06)  Fill
  Print '-'                    (+0,{#column9},10)  Fill
  Print '-'                    (+0,{#column10},9)  Fill
 
  Print '-'                    (+0,{#column10b},8) Fill   !SCM  11/10/2003      
  Print '-'                    (+0,{#column11},10)   Fill
  Print '-'                    (+0,{#column12},35) Fill
  
 
End-Heading


Begin-Report
#debug9 Show 'Begin-Report'
!GEX  SXD 09/07/2007    Begin
  !Do Set-Optimizer-Goal    
!GEX  SXD 09/07/2007    End
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Do P100-Start
  Do P200-Main-Process
  Do P300-Finish

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
End-Report


Begin-Procedure Set-Optimizer-Goal
  Begin-SQL
    Alter Session Set OPTIMIZER_GOAL=RULE;
  End-SQL
End-Procedure


Begin-Procedure P100-Start
#debug9 Show 'P100-Start'

  Move 'GEXPL025'                    To $ReportID
  Move 'BAKERS and TEAMSTERS H&W EMPLOYEE CONTRIBUTIONS - LOCAL 19' To $ReportTitle

  Show '$ReportID=' $ReportID
  Show '$ReportTitle=' $ReportTitle

  If $prcs_process_instance = ''

    Move '''' to $ProviderString
    Display 'Enter Vendor ID or leave blank to exit.'
    While 1=1
      Input $Provider maxlen=6 'Provider ID'
      if RTRIM($Provider, ' ') = ''
        concat '''' with $ProviderString
        break
      end-if
      if $ProviderString <> ''''
        concat ''',''' with $ProviderString
      end-if
      concat $Provider with $ProviderString
    End-While

    Let $Vendor_ID = $Provider

    if $ProviderString = ''''''
      let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = '1=1'
      let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA = 'ALL'
    else
      let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = 'bpt.vendor_id In (' || $ProviderString || ')'   !GBD 09/06/2002
      let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA = $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA
    end-if

    Move '''' to $PlanTypeString
    Display 'Enter Plan Type or leave blank to exit.'
    While 1=1
      Input $PlanType Maxlen=2 'Plan Type'
      Uppercase $PlanType
      if RTRIM($PlanType, ' ') = ''
        concat '''' with $PlanTypeString
        break
      end-if
      if $PlanTypeString <> ''''
        concat ''',''' with $PlanTypeString
      end-if
      concat $PlanType with $PlanTypeString
    End-While

    if $PlanTypeString = ''''''
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2 = '1=1'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
    else
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2 = 'hb1.plan_type In (' || $PlanTypeString || ')'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = 'bpt.plan_type In (' || $PlanTypeString || ')'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
    end-if

  Else

    Let $GEXXX912_Plan_Type_Alias = 'hb1.plan_type'
    Let $GEXXX912_Benefit_Plan_Alias = 'hb1.benefit_plan'
    Do GEXXX912-Select-Benefit-Plan-Parameters
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2 = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA

    Let $GEXXX912_Plan_Type_Alias = 'bpt.plan_type'
    Let $GEXXX912_Benefit_Plan_Alias = 'bpt.benefit_plan'
    Do GEXXX912-Select-Benefit-Plan-Parameters

    Let $GEXXX927_Vendor_ID_Alias = 'bpt.vendor_id'        
    Do GEXXX927-Select-Vendor-ID-Parameters

  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  If $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
    Display 'At least one plan type parameter must be specified'
    Stop
  End-If

  If $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = '1=1'
    Display 'At least one Vendor ID parameter must be specified'
    Stop
  End-If

  Let $X000_ORDER_BY = 'Vendor_ID (Provider), Benefit Program, Employee Name'

  Show '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA  = '   $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA
  Show '$GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA     = '   $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA

  Do Get-Calendar-Year-Id    !getbalid.sqc

  Do P140-Get-Last-Confirmed-Pay
  Do P150-Print-Cover-Page
  Do P170-Get-Xlat-Lookup
End-Procedure


Begin-Procedure P140-Get-Last-Confirmed-Pay
#debug9 Show 'P140-Get-Last-Confirmed-Pay'

Begin-Select Loops=1
pay_end_dt
To_Number(To_Char(pay_end_dt,'MM'))                   &balance_period
To_Number(To_Char(pay_end_dt,'YYYY'))                 &balance_year
To_Char(Add_Months(pay_end_dt,0),'fmMonth YYYY')      &period
Last_Day(pay_end_dt)                                  &current_month_end
Last_Day(Add_Months(pay_end_dt,-1))                   &prev_month_end
Last_Day(Add_Months(pay_end_dt,1))                    &next_month_end
To_Number(To_Char(Add_Months(pay_end_dt,-1),'MM'))    &prev_month_balance_period
To_Number(To_Char(Add_Months(pay_end_dt,-1),'YYYY'))  &prev_month_balance_year

  Let $AsOfDate         = &pay_end_dt
  Let $pay_end_dt       = &pay_end_dt
  Let #balance_year     = &balance_year
  Let #balance_period   = &balance_period
  Let $Reporting_Period = &period

  Let $current_month_begin = '01-'||Substr($pay_end_dt,4,8)
  Let $current_month_end   = &current_month_end
  Let $next_month_end      = &next_month_end
  Let $prev_month_begin    = '01-'||Substr(&prev_month_end,4,8)

  let #balance_qtr = #balance_period
  let #balance_qtr = ((#balance_qtr - 1)/ 3) + 1
  do Format-Number(#balance_qtr, $balance_qtr, '9.99') !avoid rounding the integer portion
  move $balance_qtr to $balance_qtr x     !save the integer portion
  let #balance_qtr = $balance_qtr

  Let #prev_month_balance_year   = &prev_month_balance_year
  Let #prev_month_balance_period = &prev_month_balance_period

  Show 'Report will contain balances for the month of ' $Reporting_Period
  Show 'Last confirmed pay end date:  ' $pay_end_dt
  Show 'Balance Year                  ' #balance_year
  Show 'Balance Period                ' #balance_period

  If Rtrim($pay_end_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  End-If

From   ps_pay_calendar

Where  pay_end_dt         =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  pay_end_dt <= $AsOfToday              
       And    pay_confirm_run = 'Y')

And    pay_confirm_run = 'Y'
End-Select
End-Procedure


begin-procedure P150-Print-Cover-Page
#debug9 Show 'P150-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,1)
  Print '$Prcs_OPRID          = '                             (+2,5)
  Print $Prcs_OPRID                                           (0,+2)
  Print '$PRCS_RUN_CNTL_ID    = '                             (+1,5)
  Print $PRCS_RUN_CNTL_ID                                     (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,2)
  Print '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = '  (+2,5)
  Print $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA       (0,+2)
  Print '$GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA    = '  (+2,5)
  Print $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA          (0,+2)

  Print 'Report will contain balances for the month of'       (+2,5)
  Print $Reporting_Period                                     (0,+1)
  Print 'Last confirmed pay end date:'                        (+2,5)
  Print $pay_end_dt                                           (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $X000_ORDER_BY                                        (+2,5)

  Let #PAGE-COUNT = 0
End-Procedure


begin-procedure P170-Get-Xlat-Lookup
#debug9 Show 'P170-Get-Xlat-Lookup'

  Let $Where = '     x.fieldname   = ''REG_TEMP''' ||
	       ' And x.eff_status  = ''A''' ||
	       !' And x.language_cd = ''ENG''' ||  !GEX SXD 09/10/2007 
	       ' And x.effdt       = (Select Max(effdt)' ||
	       !'                      !From   xlattable x1' ||    !GEX SXD 09/07/2007  
	       '                      From PSXLATITEM x1' ||
	       '                      Where  x1.fieldname    = x.fieldname' ||
	       !'                      And    x1.language_cd  = x.language_cd' || !GEX SXD 09/07/2007 
	       '                      And    x1.fieldvalue  = x.fieldvalue' ||
	       '                      And    x1.effdt       <= ''' || $pay_end_dt || '''' ||
	       '                      And    x1.eff_status   = ''A'')'

  Load-Lookup
    Name=XlatLookup
    Rows=10
  !GEX  SXD 09/10/2007  Begin
    !Table='XLATTABLE X' 
    Table = 'PSXLATITEM X'
  !GEX  SXD 09/10/2007  End
    Key='X.FIELDVALUE'
    Return_Value='X.XLATSHORTNAME'
    Where=$Where
    Quiet
End-Procedure

!************************************************************************
!****   An explanation:  The Select Distinct process in the main sql  
!****   was necessary to bring back ONLY 1 row.
!****   Benefits started using the same benefit_program and plan_type
!****   on ben_defn_optn and then used option_cd/covrg_cd (single or  
!****   family) to make the row unique.  There is no way for this  
!****   piece of sql to only pick up one row except to use the select 
!****   distinct.  Which meant a paragraph for summing current deductions
!****   had to be executed outside the main sql.
!*************************************************************************
 
Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
 
  Let $Data-Found-Flag = 'N'
  Let #rpt_grand_tl_grs = 0

Begin-Select Distinct

bpt.vendor_id        ()     On-Break   Level=1
                                       Print=Never
                                       Save=$Save_Vendor                 
                                       After=P270-After-Vendor-ID-Break
bpt.plan_type
bpt.benefit_plan     
 
bdp.benefit_program        ()     On-Break   Level=2
                                       Print=Never
                                       Save=$Save_Benefit_Program                 
                                       After=P280-Before-Benefit-Program-Break
                                       Before=P285-After-Benefit-Program-Break  
           
per.name             ()     On-Break   Level=3
                                       Print=Never

j.emplid             ()     On-Break   Level=4
                                       Print=Never

j.empl_rcd           ()     On-Break   Level=5
                                       Print=Never
                                       After=P290-Employee-Break
 
bdp.gex_spcl_accum_cd   

e.service_dt

per.birthdate
per.emplid  

j.company
j.effdt
j.acct_cd
j.empl_status
j.reg_temp
j.full_part_time
j.last_date_worked                ! SCM 11/10/2003 - add  

  Let $Data-Found-Flag = 'Y'

  Let $Provider              = &bpt.vendor_id
  Let $Vendor_ID             = &bpt.vendor_id
  Let $Benefit_Program       = &bdp.benefit_program
  Let $per.name              = &per.name
  Let $j.company             = &j.company
  Let $j.emplid              = &j.emplid
  Let #j.empl_rcd            = &j.empl_rcd
  Let $bdp.gex_spcl_accum_cd = &bdp.gex_spcl_accum_cd
  Let $e.service_dt          = &e.service_dt
  Let $per.birthdate         = &per.birthdate
  Let $per.ssn               = &per.emplid  
  Let $j.effdt               = &j.effdt
  Let $j.acct_cd             = &j.acct_cd
  Let $j.empl_status         = &j.empl_status
  Let $j.reg_temp            = &j.reg_temp
  Let $j.full_part_time      = &j.full_part_time
  let $last_date_worked      = &j.last_date_worked           !SCM 11/10/2003

  Let $bpt.plan_type          = &bpt.plan_type
  Let $bpt.benefit_plan       = &bpt.benefit_plan

  Do P210-Sum-Cur-Deduction  

From   ps_personal_data          per,
       ps_employment             e,
       ps_job                    j,
       ps_ben_defn_pgm           bdp,
       ps_ben_defn_optn          bdo,
       ps_benef_plan_tbl         bpt,
       ps_pay_cal_bal_id         pcbi,
       ps_pay_line               pl,
       ps_pay_check              pc,
       ps_pay_deduction          pd

Where  per.emplid                = j.emplid

And    e.emplid                  = j.emplid
And    e.empl_rcd                = j.empl_rcd
!And j.emplid in ('297687633', '268606405', '279768671', '281605371', '282400378', '276645759')
And    j.effdt                   =
      (Select Max(effdt)
       From   ps_job
       Where  emplid             = j.emplid
       And    empl_rcd          = j.empl_rcd
       And    effdt             <= $pay_end_dt)

And    j.effseq                  =
      (Select Max(effseq)
       From   ps_job
       Where  emplid             = j.emplid
       And    empl_rcd          = j.empl_rcd
       And    effdt              = j.effdt)

And    bpt.effdt                 =
      (Select Max(effdt)
       From   ps_benef_plan_tbl
       Where  plan_type          = bpt.plan_type
       And    benefit_plan       = bpt.benefit_plan
       And    effdt             <= $pay_end_dt)

And    bdo.benefit_program       = bdp.benefit_program
And    bdo.effdt                 = bdp.effdt
And    bdo.plan_type             = bpt.plan_type
And    bdo.benefit_plan          = bpt.benefit_plan

And    bdp.effdt                 =
      (Select Max(effdt)
       From   ps_ben_defn_pgm
       Where  benefit_program    = bdp.benefit_program
       And    effdt             <= $pay_end_dt)

And    pcbi.company              = pc.company
And    pcbi.paygroup             = pc.paygroup
And    pcbi.balance_id           = 'CY'
And    pcbi.balance_year         = #balance_year
And    pcbi.balance_period       = #balance_period

And    pc.emplid                 = j.emplid
And    pc.empl_rcd               = j.empl_rcd

And    pc.pay_end_dt             = pcbi.pay_end_dt

And    pd.company                = pc.company
And    pd.paygroup               = pc.paygroup
And    pd.pay_end_dt             = pc.pay_end_dt
And    pd.off_cycle              = pc.off_cycle
And    pd.page_num               = pc.page_num
And    pd.line_num               = pc.line_num
And    pd.sepchk                 = pc.sepchk

And    pl.company                = pc.company
And    pl.paygroup               = pc.paygroup
And    pl.pay_end_dt             = pc.pay_end_dt
And    pl.off_cycle              = pc.off_cycle
And    pl.page_num               = pc.page_num
And    pl.line_num               = pc.line_num

And    pd.plan_type              = bpt.plan_type
And    pd.benefit_plan           = bpt.benefit_plan
And    pd.ded_class              = 'B'                    !B=Before-Tax

And   [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]
And   [$GEXXX927_INCLUDE_VENDOR_ID_CRITERIA]

Order By bpt.vendor_id,
       bdp.benefit_program,
       per.name,
       j.emplid,
       j.empl_rcd

End-Select
End-Procedure

Begin-Procedure P210-Sum-Cur-Deduction
#debug9 Show 'P210-Sum-Cur-Deduction'

Begin-Select
 
pl2.deptid
pd2.ded_cur

  Let #ded_cur               = &pd2.ded_cur
  Let $Deptid                = &pl2.deptid
!  show '#ded_cur =        ' #ded_cur
!  show 'emplid =          ' $j.emplid

  Add #ded_cur To #grs_mtd

from   ps_pay_cal_bal_id         pcb2,
       ps_pay_line               pl2,
       ps_pay_check              pc2,
       ps_pay_deduction          pd2  
     
Where  pcb2.company              = pc2.company
And    pcb2.paygroup             = pc2.paygroup
And    pcb2.balance_id           = 'CY'
And    pcb2.balance_year         = #balance_year
And    pcb2.balance_period       = #balance_period

And    pc2.emplid                 = $j.emplid               
And    pc2.empl_rcd               = #j.empl_rcd

And    pc2.pay_end_dt             = pcb2.pay_end_dt

And    pd2.company                = pc2.company
And    pd2.paygroup               = pc2.paygroup
And    pd2.pay_end_dt             = pc2.pay_end_dt
And    pd2.off_cycle              = pc2.off_cycle
And    pd2.page_num               = pc2.page_num
And    pd2.line_num               = pc2.line_num
And    pd2.sepchk                 = pc2.sepchk

And    pl2.company                = pc2.company
And    pl2.paygroup               = pc2.paygroup
And    pl2.pay_end_dt             = pc2.pay_end_dt
And    pl2.off_cycle              = pc2.off_cycle
And    pl2.page_num               = pc2.page_num
And    pl2.line_num               = pc2.line_num

And    pd2.plan_type              = $bpt.plan_type
And    pd2.benefit_plan           = $bpt.benefit_plan
And    pd2.ded_class              = 'B'                    !B=Before-Tax

Order by pc2.emplid,
         pc2.empl_rcd

End-Select
End-Procedure


Begin-Procedure P220-Get-Benefit-Termination-Row
#debug9 Show 'P220-Get-Benefit-Termination-Row'
Begin-Select
Min(hb1.coverage_begin_dt) &hb1.coverage_begin_dt

From   ps_health_benefit hb1

Where  hb1.emplid         = $j.emplid
And    hb1.empl_rcd       = #j.empl_rcd

And   [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2]

And    hb1.effdt          =
      (Select Max(effdt)
       From   ps_health_benefit
       Where  emplid      = hb1.emplid
       And    empl_rcd   = hb1.empl_rcd
       And    plan_type   = hb1.plan_type)

And    hb1.coverage_begin_dt Between $prev_month_begin
                                 And $next_month_end

And    hb1.coverage_elect = 'T'
End-Select
End-Procedure


Begin-Procedure P230-Get-Leave-Begin-Date
#debug9 Show 'P230-Get-Leave-Begin-Date'
  Let $Status-Change = 'N'
Begin-Select
JOB.EFFDT
JOB.EMPL_STATUS
JOB.ACTION
JOB.ACTION_REASON
JOB.LAST_DATE_WORKED                                      !SCM 11/10/2003

  If &JOB.EMPL_STATUS = $J.EMPL_STATUS And
      $Status-Change = 'N'
    Let $Effective-Date   = &JOB.EFFDT
    Let $Action           = &JOB.ACTION
    Let $Action_Reason    = &JOB.ACTION_REASON
    let $last_date_worked = &JOB.LAST_DATE_WORKED         !SCM 11/10/2003
    Let $Status-Change    = 'N'
  Else
    Let $Status-Change = 'Y'
  End-If

FROM   PS_JOB JOB

WHERE  EMPLID     = $J.EMPLID
AND    EMPL_RCD  = #J.EMPL_RCD
AND    EFFDT     <= $J.EFFDT
ORDER BY JOB.EFFDT DESC, JOB.EFFSEQ DESC 
End-Select
End-Procedure


Begin-Procedure P235-Get-Status-Date
#debug9 Show 'P235-Get-Status-Date'
  Let $Reg-Temp-Change = 'N'
Begin-Select
J1.EFFDT
J1.REG_TEMP
J1.ACTION
J1.ACTION_REASON
J1.EMPL_STATUS

!**  11/10/2003  SCM  commented this code so that it always
!**  gets the last action/actionreason code to print on the report.
!  If &J1.REG_TEMP = $J.REG_TEMP And
!      $Reg-Temp-Change = 'N'
!    Let $Reg-Temp-Change = 'N'
!    If &J1.EMPL_STATUS <> 'T'
      Let $Effective-Date = &J1.EFFDT
      Let $Action         = &J1.ACTION
      Let $Action_Reason  = &J1.ACTION_REASON
!    End-If
!  Else
!    Let $Reg-Temp-Change = 'Y'
!  End-If

FROM   PS_JOB J1

WHERE  EMPLID     = $J.EMPLID
AND    EMPL_RCD  = #J.EMPL_RCD
AND    EFFDT     <= $J.EFFDT
!  SCM  11/10/2003
! order ascending date so retrieve most current row out of select
! ORDER BY J1.EFFDT DESC, J1.EFFSEQ DESC
ORDER BY J1.EFFDT, J1.EFFSEQ  

End-Select
End-Procedure



Begin-Procedure P250-Format-Record
#debug9 Show 'P250-Format-Record'

  Lookup XlatLookup $j.reg_temp $reg_temp

  Let $acctcd = $j.acct_cd
  Do Get-Acct-cd-descr

  !Do Format-DateTime($e.service_dt, $Service_Dt, {DEFMDY}, '', '')
  !Do Format-DateTime($per.birthdate, $Birth_Date, {DEFMDY}, '', '')
  !Do Format-DateTime($Effective-Date, $eff_dt, {DEFMDY}, '', '')
  !Do Format-DateTime(&hb1.coverage_begin_dt, $Term_Date, {DEFMDY}, '', '')
  !Do Format-DateTime($last_date_worked, $last_date_worked_ref, {DEFMDY}, '', '')
  
!GEX-MXR Added for upgarde 9.0 on 15/10/2007  - Begin
Let $Service_Dt = Edit($e.service_dt,'mm/dd/yy')
Let $Birthdate = Edit($per.birthdate,'mm/dd/yy')
Let $eff_dt = Edit($Effective-Date,'mm/dd/yy')
Let $Term_Date = Edit(&hb1.coverage_begin_dt,'mm/dd/yy')
Let $last_date_worked_ref = Edit($last_date_worked,'mm/dd/yy')
!GEX-MXR Added for upgarde 9.0 on 15/10/2007  - End
End-Procedure


Begin-Procedure P260-Print-Record
#debug9 Show 'P260-Print-Record'

  Do Get-Department-Name
  do Get-Emp-Ssn ($per.ssn, $Ssn_Out) !GEX_SEC_REENG 2015-04-29 Vahini Katta  
  Print $per.name                  (+1,{#column1},30) 
  !Print $per.ssn                   (+0,{#column2})   !GEX_SEC_REENG 2015-04-29 Vahini Katta  
  Print $Ssn_Out                   (+0,{#column2})    !GEX_SEC_REENG 2015-04-29 Vahini Katta  
  Print $AcctNameAbbrv             (+0,{#column3})
  Print $Service_Dt                (+0,{#column4})
  Print $reg_temp                  (+0,{#column5})
  Print $j.empl_status             (+0,{#column6})
  Print $Action                    (+0,{#column7})
  Print $Action_Reason             (+0,{#column8})
  Print $eff_dt                    (+0,{#column9})
  Print $Term_Date                 (+0,{#column10})
  Print $last_date_worked_ref      (+0,{#column10b})         !SCM  11/10/2003   
  Print #grs_mtd                   (+0,{#column11})  Edit 999,999.99
  Print $Deptid                    (+0,{#column12})                     
  Print $DeptName                  (+0,{#column13},29)
  
End-Procedure

Begin-Procedure P270-After-Vendor-ID-Break
#debug9 Show 'P270-After-Vendor-ID-Break'

  Print '-'                        (+2,{#column11},014)   Fill 
  Print 'Vendor ID'                (+1,{#column7})        
  Print $Save_Vendor               (0,+1)                 
  Print 'Totals'                   (0,+1) 
  Print #Vendorid-HW-Amount        (0,{#column11})        Edit 999,999,999.99
  Let #Vendorid-HW-Amount       = 0
End-Procedure


Begin-Procedure P280-Before-Benefit-Program-Break
#debug9 Show 'P280-Before-Benefit-Program-Break'

  Print '-'                                 (+2,{#column11},014)   Fill  
  Print 'Benefit Program'                   (+1,{#column4})
  Print $Save_Benefit_Program               (0,+1)
  Print 'Count'                             (0,+1)
  Print #Benefit-Program-HW-Count           (0,+1)                 Edit 999,999,999
  Print #Benefit-Program-HW-Amount          (0,{#column11})        Edit 999,999,999.99

  Add #Benefit-Program-HW-Amount       To #Vendorid-HW-Amount

  Let #Benefit-Program-HW-Count        = 0
  Let #Benefit-Program-HW-Amount       = 0
End-Procedure


Begin-Procedure P285-After-Benefit-Program-Break
#debug9 Show 'P285-After-Benefit-Program-Break'

  New-Page
End-Procedure


Begin-Procedure P290-Employee-Break
#debug9 Show 'P290-Employee-Break'

  Do P220-Get-Benefit-Termination-Row

  Evaluate $j.empl_status
    When = 'L'
    When = 'P'
    When = 'R'
    When = 'T'
      Do P230-Get-Leave-Begin-Date
      Break
    When-Other
      Do P235-Get-Status-Date
  End-Evaluate

  Let #prev_hrs_mtd = 0
  Let #year   = #balance_year
  Let #period = #balance_period
  
  Let #year   = #prev_month_balance_year
  Let #period = #prev_month_balance_period

  Do P250-Format-Record
  Do P260-Print-Record

  Add 1             To #Benefit-Program-HW-Count			 
  Add #grs_mtd      To #Benefit-Program-HW-Amount
  Add #grs_mtd      To #rpt_grand_tl_grs
  Let #grs_mtd      = 0
End-Procedure


Begin-Procedure P300-Finish
#debug9 Show 'P300-Finish'

  Do P310-Print-Report-Totals

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
End-Procedure


Begin-Procedure P310-Print-Report-Totals
#debug9 Show 'P310-Print-Report-Totals'

  If $Data-Found-Flag <> 'Y'
    New-Page
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  else
     Print '*** Report Grand Total ***'        (+3,{#column7})  
     Print #rpt_grand_tl_grs                   (0,{#column11})      Edit 999,999,999.99
  End-If
End-Procedure


#include 'gexxx912.sqc'  !Get plan type multiple row table
#include 'gexxx927.sqc'  !Get vendor id multiple row table
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'getactnm.sqc'  !Get-Account-Name procedure
#include 'getprvnm.sqc'  !Get-Provider-Name procedure
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'reset.sqc'     !Reset printer Procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'getgeid.sqc'   !Get SSN !GEX_SEC_REENG 2015-04-29 Vahini Katta