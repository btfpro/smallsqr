!***********************************************************************
! GEXPYDUE:  This program creates appropriate general deductions for   *
!            union dues, assessment dues and initiation fees. This     *
!            process will need to execute after paysheets are created  *
!            and prior to the beginning of the pay calculation cycle.  *
!            The purpose of the SQR is to calculate the correct        *
!            general deductions related to union dues for employees.   *
!***********************************************************************
! #Debugx Used:	#debug9 paragraph trace                                *
!		#debug8 key variable values                            *
!	        #debug7 data returned from sql calls                   *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! ID/CSR#  INITIALS    DATE           DESCRIPTION OF THE CHANGE        *
! ITG#                                                                 *
!***********************************************************************
!GPYC017    SXK         01/04/1998     INITIAL CREATION                *
!           JDH         10/08/1998     Modified method of determining  *
!                                      union dues deduction codes.     *
!                                                                      *
!           SXK         10/27/1998     Added code to select employees  *
!                                      whose pay_line_status either I  *
!                                      or U or E.                      *
!                                                                      *
!           CJH         12/22/1998     Remove erroneous comment - see  *
!                                      date-stamp below                *
!                                                                      *
!           CJH         01/25/1999     Change rounding of factor*amt   *
!                                      dues to round to nearest dollar.*
!                                      EFFDT for new genl_ded row chg'd*
!                                      to be pay_begin_dt rather than  *
!                                      pay_end_dt (see dt-stamps below)*
!                                                                      *
!           CJH         02/02/1999     Union dues for Steelworkers union
!                                      that has 2 dedcds for union dues.
!                                      2nd dedcd placed in assessment  *
!                                      dedcd column.                   *
!                                                                      *
!           CJH         04/14/1999     Correct logic for Defaulting to *
!                                      deduction table.Also, add logic *
!                                      for OK Grocery Assessment fee.  *
!                                                                      *
!           JNB         05/26/1999     Calculation of Union dues is    *
!                                      changed based on 'benefits lvl' *
!                                      GEX_EC1_BYTE_VAL is added to the*
!                                      GEX_UNION_DUES table & compared *
!                                      to JOB.ELIG_CONFIG2. If the ee  *
!                                      evaluates to the benefits       *
!                                      level field and other populated *
!                                      fields on that union dues row,  *
!                                      then the program should create/ *
!                                      update general deduction row.   *
!                                      Otherwise should use full/part  *
!                                      time value in the union dues    *
!                                      table                           *
!                                                                      *
!           SXK         11/03/1999     Modified to have union from     *
!                                      from job labor                  *
!                                                                      *
!           SXK         11/16/1999     Changed move statements with mask
!                                       to to_number, to_char          *
!                                                                      *
!           SXK         02/17/2000     Modified to have new columns in *
!                                       the insert statement of genl-  *
!                                       deduction table                *
!                                                                      *
!           JNB         04/17/2000     Changed displays to print at the*
!                                      end of the report so that .lis  *
!                                      is generated for MOBIUS each    *
!                                      time the report is run.         *
!                                                                      *
!           SXC/AXL     10/12/2000     Use the re-hire dt for an empl  *
!                                      if one exists, instead of the   *
!                                      orig hire dt.  Added COL to     *
!                                      UNION CD selection criteria.    *
!                                                                      *
!           CWB         05/15/2001     Added logic to insert row in    *
!                                      PS_GENL_DEDUCTION with new dues *
!                                      amount using $pay_begin_dt as   *
!                                      the new EFFDT.                  *    
!                                      Excluded union code 'WC5'.      *
!                                                                      *              
!           AXL         06/07/2001     Add TOL non-union union code    *
!                                                                      *     
!           CWB         07/18/2001     Change to the print position of *
!                                      SQL errors to stop overlays.    *
!                                                                      * 
!           AXL         02/07/2002     Add HGN,MOD union codes.        *    
!           PSR         08/06/2002     Modified to have UNION_CD FROM  *
!                                      JOB - Upgrade 8.3               *
!                                                                      *
!           GBD         09/16/2002     v8.3 Upgrade - added fields to  *
!                                      Genl Deduction table insert.    *
!                                                                      *   
!           CWB         04/01/2003     Added INDEX hints for better    *
!                                      performance in 8.3              *
!                                                                      *   
!           AXL         02/26/2004     Fix problem with assessment dues*
!                                      and no end date creation.       *
!                                                                      *
!           AXL         03/18/2004     Undo previous modification that *
!                                      is causing problems for stores  *
!                                      that process dues manually      *
!                                                                      *
!  10652    AXL         03/30/2004     Enable debugging to show logic  *
!                                      processing.  Disable logic that *
!                                      skips union code WC5 because sqr*
!                                      needs to process this group now.*
!                                      Undo 10/12/00 rehire logic. Orig*
!                                      Hire Date to be used in all     *
!                                      cases.                          *
!                                                                      *
!  10721    AXL         07/13/2005     Modifications to address a bug  *
!  32455                               with the updating of END DATES. *
!                                      Exclude new non-union codes SFD *
!                                      and GGO.                        *
!                                      New rounding logic for R01 & F09*
!                                      Added numerous show & debug show*
!                                      statements to help troubleshoot *
!                                      Disabled RESET END DT logic     *
!                                                                      *
!  34843    CXA         01/27/2006     Modifications to calculate union*
!                                      code UNWA04 in Assessment Field *
!                                      Exclude new non-union codes MAS *
!                                                                      *
!  35909    AXL         04/01/2006     Added run control logic to allow*
!                                      UNION CODE exclusion mgmt by    *
!                                      HRIS.                           *
!  38935    CXA         11/29/2006     Modify R01 cap per contract     *
!  PY026    Manish      08/14/2007     HCM 9.0 Upgrade                 *
!          Vendaxg      09/26/2008     Modified code for S3#11364295   * 
!	   VENDKXY 	12/10/2008     Added the code for S3 11882518            *
!	   VENDKXY	12/17/2008     Added the code for R01	                   *
! VENDKXY     02/25/2009     Added the union code F04 for S3 12470474  * 
! GEXPY_848_E160596_01  Vahini Katta   10/24/2013                      *     
! Update weekly cap for R01 union code from $11.61 go $12.30           *
! GEX_SEC_REENG 2016-05-27 Vahini Katta                                *                              
! Changes related to gex_emplid_mapp/7 digit emplid                    *
! GEXPY_852_BUnionDuesF09  Vahini Katta   01/26/2017                   *
! Union Dues for TM in independent store 0682 and union code F09 is not*
! being calculated correctly                                           *
! GEXPY_852_BUnionDues  Vahini Katta   03/08/2017                      *
! Revert back the changes done for rounding                            *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'

begin-report

  do Init-DateTime
  do Init-Number
  do stdapi-init
  move 'GEXPYDUE' to $ReportID
  move 'Employee Union Dues Calculation' to $ReportTitle
  display $ReportTitle
  date-time () hh:mi:ss &timeProcess
  display 'Begin Time:  ' Noline
  display &timeProcess

  do Get-Current-DateTime
  SHOW '$reportdate : ' $reportdate
  let $reportdate_mm = substr($reportdate,1,2)
  let $reportdate_dd = substr($reportdate,4,2)
  let $reportdate_yy = substr($reportdate,7,2)
  do MakeYear4Digits ($reportdate_yy)
  let $reportdate_ccyy = $reportdate_yy||'-'||$reportdate_mm||'-'||$reportdate_dd
  SHOW '$reportdate_ccyy : ' $reportdate_ccyy
  do Convert-From-DTU-Date($reportdate_ccyy, $reportdate_dbf)
  move $reportdate_dbf to $rnctl_date
!SXK 09/30/98 Begin 
!  do Payroll-Report-Initialization   
  do report
!SXK End
  do Commit-Transaction
  do stdapi-term
  !*do Reset
!**********************************************************************************
end-report

!************************************************************************

begin-procedure Report

 move 'N' to $Errorfound
 move 'N' to $cal_error
 let #inputtran = 0
 let #recs_inserted = 0
 let #dues_recs_inserted = 0
 let #recs_updated = 0
 let #comp_count = 0

  

 Let $GEXXX913_Union_cd_Alias = 'E.UNION_CD'

 If $prcs_process_instance = ''

    Display 'Enter Union Code to exclude or leave blank to exit.'
    While 1=1
      Input $In-Union-Cd Maxlen=3 'Union Code'
      Uppercase $In-Union-Cd
      If Rtrim($In-Union-Cd, ' ') = ''
        Break
      Else
          Let $Exclude_Condition = '(' || $GEXXX913_Union_cd_Alias || ' <> '''  || $In-Union-cd || ''')'
        Add 1 To #GEX_RC_UNION_CD_ROWS
        If #GEX_RC_UNION_CD_ROWS = 1
          Let $GEXXX913_EXCLUDE_UNION_CD_CRITERIA = '(' || $Exclude_Condition
        Else
          Let $GEXXX913_EXCLUDE_UNION_CD_CRITERIA = $GEXXX913_EXCLUDE_UNION_CD_CRITERIA || ' And '  || $Exclude_Condition
        End-If
      End-If
    End-While 

    If #GEX_RC_UNION_CD_ROWS = 0
       Let $GEXXX913_EXCLUDE_UNION_CD_CRITERIA = '1=1'
       Let $GEXXX913_EXCLUDE_UNION_CD_DISPLAY_CRITERIA = 'ALL'
    Else
       Let $GEXXX913_EXCLUDE_UNION_CD_CRITERIA = $GEXXX913_EXCLUDE_UNION_CD_CRITERIA || ')'
       Let $GEXXX913_EXCLUDE_UNION_CD_DISPLAY_CRITERIA = $GEXXX913_EXCLUDE_UNION_CD_CRITERIA
    End-If

 Else

    Do GEXXX913-Select-UNION-CD-Parameters

 end-if
 show '$GEXXX913_EXCLUDE_UNION_CD_CRITERIA ' $GEXXX913_EXCLUDE_UNION_CD_CRITERIA
 do select-pay-calendar 

Report-Exit:

  date-time () hh:mi:ss &timeProcess
  Print #recs_inserted  (+4,5) edit 99999            !JNB 04/18/2000
  Print ' New General Deductions Inserted' (,12)     !JNB 04/18/2000
!  Print #recs_updated   (+1,5) edit 99999            !JNB 04/18/2000
!  Print ' General Deductions Updated'      (,12)     !JNB 04/18/2000
  Print #dues_recs_inserted   (+1,5) edit 99999       !CWB 05/15/2001
  Print ' General Deductions Dues Amt Inserted' (,12) !CWB 05/15/2001
  Print #InputTran      (+1,5) edit 99999            !JNB 04/18/2000
  Print ' Total Employees Processed'       (,12)     !JNB 04/18/2000

  display 'Comp_count: ' noline
  display #comp_count
  display 'End Time:  ' Noline
  display &timeProcess

end-procedure

! begin-heading 6 for-reports=(report-log)
begin-heading 6 

 move 'Employee Union Dues Calculation - Report Log' to $ReportTitle
 #Include 'stdhdg01.sqc'

  position (+2)
  print 'Trans#' (,1) bold
  print 'Emplid' (,18) bold
  print 'Message' (,50) bold
  print '-' (+1,1,176) fill
 
end-heading

!******************************************************************
!This procedure selects pay calendar details
!******************************************************************

begin-procedure select-pay-calendar

! NOTES
!
! 04/14/1998 - this select will retrieve multiple rows from
!    the pay calendar for each Company/Paygroup combination
!    that is assigned the selected run_id.  There is only a 
!    need to retrieve the current Pay End Date once to use
!    in determining the Previous Pay End Date from the calendar
!
let $first = 'Y'

begin-select on-error=sql-error-found('Select-Pay-Calendar')
A1.COMPANY
A1.PAYGROUP
A1.PAY_END_DT
! CJH - 01/25/1999 - begin
! Add PAY_BEGIN_DT to select to use for EFFDT of GENL_DED row
A1.PAY_BEGIN_DT
! CJH - 01/25/1999 - end

   move 0 to #comp_count

   display 'Company/Paygroup : ' noline
   display &A1.company noline
   display ' / ' noline
   display &A1.Paygroup

   move &A1.PAY_END_DT to $pay_end_dt
! CJH - 01/25/1999 - begin
   move &A1.PAY_BEGIN_DT to $pay_begin_dt
! CJH - 01/25/1999 - end
   
   if $first = 'Y'
     display $pay_end_dt
     do get-prev-pay-end-date
     move 'N' to $first
   end-if

   if $cal_error = 'N'
     do process-employee-data
   end-if

   display #comp_count 888888 noline
   display ' Employees Processed'
FROM PS_PAY_CALENDAR A1
WHERE A1.PAY_END_DT = (SELECT MAX(PAY_END_DT)
			 FROM PS_PAY_CALENDAR
			WHERE PAY_END_DT <= $AsOfToday
    			AND PAY_SHEETS_RUN = 'Y' 
! 01/02/2001 - add criteria to ignore the off-cycle calendar entries
			  AND PAY_OFF_CYCLE_CAL = 'N')
AND A1.PAY_OFF_CYCLE_CAL = 'N'
end-select

end-procedure

!******************************************************************
!This procedure selects previous pay end date
!******************************************************************

begin-procedure get-prev-pay-end-date

! NOTES
!
! 04/14/1998 - the where clause - add a <= criteria
!    with the current pay end date to ensure that no future calendar
!    rows are accidentally retrieved.
!
!
move 'N' to $cal_error
move 'N' to $found

begin-select on-error=sql-error-found('Get-Prev-Pay-End-Date')
A.PAY_END_DT

   move &A.PAY_END_DT to $prev_pay_end_dt
   move 'Y' to $found

FROM PS_PAY_CALENDAR A
WHERE A.COMPANY = &A1.COMPANY
  AND A.PAYGROUP = &A1.PAYGROUP
  AND A.PAY_CONFIRM_RUN = 'Y'
  AND A.PAY_END_DT = (SELECT MAX(PAY_END_DT)
			FROM PS_PAY_CALENDAR 
		      WHERE COMPANY = &A1.COMPANY
			AND PAYGROUP = &A1.PAYGROUP
			AND PAY_CONFIRM_RUN = 'Y'
			AND PAY_END_DT <= $pay_end_dt
                	AND PAY_OFF_CYCLE_CAL = 'N')
  AND A.PAY_OFF_CYCLE_CAL = 'N'
end-select

if $found = 'N' 
  let $cal_error = 'Y'
  add #1 to #errorcount
  do error-found
  print 'No Previous confirmed Pay End Date' (,34)
end-if

end-procedure

!******************************************************************
!This procedure selects all the employees that satisfy the criteria
!and depending on the action taken upon their job records, writes 
!the necessary records into the output file
!******************************************************************

begin-procedure process-employee-data

 move 'N' to $found

 do update-ded-end-dt1
 do select-employees1

end-procedure

!*********************************************************************

begin-procedure select-employees1

! added ELIG_CONFIG2    JNB 05/26/1999

move 'N' to $found
! CWB 04/01/2003 Added INDEX hint for performance
begin-select  on-error=sql-error-found('Select-Employees1')
/*+ INDEX (e PSAJOB) */
E.EMPLID
   move &E.EMPLID to $emplid
E.EMPL_RCD
   move &E.EMPL_RCD to #empl_rcd
   move 'Y' to $found
E.COMPANY                            !GBD 09/16/2002
   move &E.COMPANY to $company       !GBD 09/16/2002
E.DEPTID
E.ACCT_CD
E.JOBCODE
E.EFFDT
E.FULL_PART_TIME
E.ELIG_CONFIG2
E.REG_TEMP
E.GEX_DUES_EXEMPT
E.GEX_STUDENT_IND
E.GEX_STEWARD
E.GEX_FINAN_CORE
!SXK 11/03/99 Begin
!F.UNION_CD
E.UNION_CD
!SXK 11/03/99 End

! SXC 05/25/2000 Begin...to select rehire dt
F.REHIRE_DT 
! SXC 05/25/2000 End

E.HOURLY_RT
!F1.ORIG_HIRE_DT	! Manish, PY115, 08/14/2007  - Giant Eagle Modification   
I1.ORIG_HIRE_DT		! Manish, PY115, 08/14/2007  - Giant Eagle Modification
  display &e.emplid noline
! CJH - 04/16/1999
!  do update-ded-end-dt1
! CJH - 04/16/1999
!SXK 11/03/99 Changed from f.union_cd
! AXL 10/12/2000 Begin - Add COL to criteria
! CJH - 01/09/2001 - add COL as non-union union code
! CWB - 05/15/2001 - add WC5 union code.
! AXL - 06/06/2001 - add TOL as non-union union code
! AXL - 02/07/2002 - add HGN & MOD non-union union codes
! AXL - 04/01/2006 - Disable hard-coding. Comes from run cntl - Begin
! If (&E.UNION_CD <> 'NON' and &E.UNION_CD <> 'SEC' and &E.UNION_CD <> 'COL' and &E.UNION_CD <> 'TBD' and substr(&E.UNION_CD,1,1) <>'A')
! If (&E.UNION_CD <> 'TOL' and 
!     &E.UNION_CD <> 'COL' and
!     &E.UNION_CD <> 'NON' and
!     &E.UNION_CD <> 'SEC' and
!     &E.UNION_CD <> 'TBD' and
!     !AXL 03/30/2004 WC5 employees will now be set up in the union dues table to process  
!     !&E.UNION_CD <> 'WC5' and  
!     &E.UNION_CD <> 'HGN' and
!     &E.UNION_CD <> 'MOD' and
!     &E.UNION_CD <> 'SFD' and		!AXL 7/2005  New
!     &E.UNION_CD <> 'GGO' and		!AXL 7/2005  New
!     &E.UNION_CD <> 'MAS' and		!CXA 1/2006  New
!     &E.UNION_CD <> 'MUR' and		!AXL 4/2006  New
!     substr(&E.UNION_CD,1,1) <>'A')
! AXL - 04/01/2006 - Disable hard-coding. Comes from run cntl - End
   If &E.GEX_DUES_EXEMPT = 'N'
      add 1 to #inputtran
      add 1 to #comp_count
      do select-union-dues1
      if $match_found = 'Y'
	 display '-dues processed...' noline
	 do evaluate-dues-assessment
	 do evaluate-init-fee
      end-if
   end-if
  !end-if

  display ''
!GBD
  show &E.EMPLID ' ' &E.EMPL_RCD ' ' &E.COMPANY
  show '==========================================='
!GBD

FROM  PS_PERSONAL_DATA F1,

! SXC 05/25/2000 Begin
      PS_EMPLOYMENT F,
! SXC 05/25/2000 end
      PS_JOB E
      ,PS_PER_ORG_INST 	I1	! Manish, PY115, 08/14/2007  - Giant Eagle Modification

WHERE E.COMPANY = &A1.COMPANY
  AND E.PAYGROUP = &A1.PAYGROUP
!SXK 11/03/99 Begin

! SXC 05/25/2000 begin....uncommented the following 3 joins for ps_employment to select rehire dt
! SXK had commented these for union cd retrofit.
  AND E.EMPLID = F.EMPLID
  AND E.EMPL_RCD = F.EMPL_RCD
  AND F.EMPLID    = F1.EMPLID
! SXC 05/25/2000 end

!*****************************************************************
! Manish,PY115 , 08/14/2007                                          
! PY026 - Giant Eagle Modification	                 	
! Modified the code for HCM 9.0 Upgrade		
! begin 								
!*****************************************************************
   AND I1.EMPLID = F1.EMPLID
   AND I1.ORG_INSTANCE_ERN = E.EMPL_RCD


!******************************************************************
! PY026 - Giant Eagle Modification End	
!******************************************************************
  AND E.EFFDT = (select max(xx.effdt) from ps_job xx
		 where E.emplid = xx.emplid 
		   and E.empl_rcd = xx.empl_rcd
		   and xx.effdt <= $pay_end_dt)
  AND E.EFFSEQ =
       (SELECT MAX(EFFSEQ)
	FROM   PS_JOB 
	WHERE EMPLID    = E.EMPLID
	  AND EMPL_RCD = E.EMPL_RCD
	  AND EFFDT    = E.EFFDT)
!SXK 10/27/1998 Begin
  AND E.EMPLID in (select emplid
		   from ps_pay_earnings
		  where company = &A1.COMPANY
		    and paygroup = &A1.PAYGROUP
		    and pay_end_dt = $pay_end_dt
		    and pay_line_status in ('I','U','E'))

  AND [$GEXXX913_EXCLUDE_UNION_CD_CRITERIA]  !AXL 4/2006
!SXK 10/27/1998 End
 !GEXPY_852_BUnionDues Vahini Katta 03/08/2017 Begins
 AND E.EMPL_STATUS IN ('A','L','P','S')
 !AND E.EMPLID IN ('1182763','1041181','1004145','1044086','1011848','1100540')
 !GEXPY_852_BUnionDues Vahini Katta 03/08/2017 Ends
  ORDER BY E.DEPTID, E.UNION_CD  !SXK 11/03/99 Changed from f.union_cd

end-select
end-procedure

!*********************************************************************
begin-procedure update-ded-end-dt1

display 'Updating Deduction end date with date: ' noline
display 'Pay Begin Date: ' noline  ! AXL 10/12 Changed text to match sqr variable
display $pay_begin_dt
display 'Pay End Date: ' noline
display $pay_end_dt

begin-sql on-error=sql-error-found('Update-Ded-End-Dt1')
UPDATE PS_GENL_DEDUCTION D
   SET D.DEDUCTION_END_DT = $pay_begin_dt
WHERE
!D.DEDUCTION_END_DT IS NULL
!PSR 08/07/02 8 Upgrade
!  AND (D.EMPLID, D.EMPL_RCD) in (select dd.emplid, dd.empl_rcd from ps_job dd,
! CWB 04/01/2003 Added INDEX hint for performance
       (D.EMPLID, D.COMPANY) in (select /*+ INDEX (dd PSBJOB) */
                                 dd.emplid, dd.company 
                                    from ps_job dd,
                                         ps_pay_earnings pe
                                 where pe.company = &A1.COMPANY
                                   and pe.paygroup = &A1.PAYGROUP
                                   and pe.pay_end_dt = $pay_end_dt
                                   and pe.off_cycle = 'N'
                                   and pe.pay_line_status in ('I','U','E')
                                   and dd.emplid = pe.emplid
                                   and dd.empl_rcd = pe.empl_rcd
                                   and dd.company = &A1.COMPANY
                                   and dd.paygroup = &A1.PAYGROUP
                                   and dd.effdt = (select max(ddd.effdt) from ps_job ddd
                                                  where  ddd.emplid = dd.emplid
                                                    and  ddd.empl_rcd = dd.empl_rcd
                                                    and  ddd.effdt <= $pay_end_dt))
   AND D.DEDCD IN
    (SELECT GEX_DEDCD_DUES FROM PS_GEX_UNION_DUES
       UNION
      SELECT GEX_DEDCD_ASSESS FROM PS_GEX_UNION_DUES
       UNION
      SELECT GEX_DEDCD_INIT FROM PS_GEX_UNION_DUES)

   AND (D.GOAL_AMT <> D.GOAL_BAL OR D.GOAL_AMT = 0)

   !AND SUBSTR(D.DEDCD,1,2) in ('UN','IN','AS')	AXL 3/18/2004 - Disable
   !AND SUBSTR(D.DEDCD,1,3) <> 'UNW'		AXL 2/26/2004 - Disable

   !AXL 7/2005 New select logic - Begin
   AND d.effdt =(SELECT MAX(EFFDT) FROM PS_GENL_DEDUCTION
        WHERE  d.EMPLID = EMPLID
           and d.COMPANY =COMPANY
           and d.DEDCD = DEDCD
	   and EFFDT <= $pay_end_dt)

   AND D.DEDUCTION_END_DT IS NULL
   !AXL 7/2005 New select logic - End

!CJH - 04/16/1999
!WHERE D.EMPLID = $emplid
!  AND D.EMPL_RCD = #empl_rcd
!  AND D.DEDUCTION_END_DT IS NULL
! CJH - 04/16/1999

! CJH - 02/19/1999 - begin
!  AND (D.GOAL_AMT <> D.GOAL_BAL AND D.GOAL_AMT <> 0)
! CJH - 02/19/1999 - end

end-sql
end-procedure
!*********************************************************************
Begin-Procedure Select-Union-Dues1

! added GEX_EC1_BYTE_VAL   JNB 05/26/1999

move 'N' to $found
move 'N' to $match_found


Begin-Select on-error=sql-error-found('Select-Union-Dues')
H.GEX_SEQ_NUM
H.ACCT_CD
H.FULL_PART_TIME
H.GEX_EC1_BYTE_VAL
H.REG_TEMP
H.GEX_STUDENT_IND
H.GEX_STEWARD
H.GEX_FINAN_CORE
H.JOBCODE
H.SERVICE_DAYS_GBL
H.GEX_DEDCD_DUES
H.GEX_DUES_AMT
H.FACTOR
H.GEX_DEDCD_ASSESS
H.GEX_DEDCD_INIT
H.GEX_INIT_FEE
H.GEX_INIT_FEE_LMT

  move 'Y' to $found
 
  if $match_found = 'N'
      do find-union-dues-match
  end-if
   
  if $match_found = 'Y'
     exit-select
  end-if
  
FROM PS_GEX_UNION_DUES H
WHERE H.DEPTID = &E.DEPTID
  AND H.UNION_CD = &E.UNION_CD  !SXK 11/03/99 Changed from f.union_cd
  AND H.EFFDT = (SELECT MAX(EFFDT)
		   FROM PS_GEX_UNION_DUES
		  WHERE DEPTID = &E.DEPTID
		    AND UNION_CD = &E.UNION_CD  !SXK 11/03/99 
		    AND EFFDT <= $pay_end_Dt)

ORDER BY H.SERVICE_DAYS_GBL desc, H.GEX_SEQ_NUM desc
end-select

if $found = 'N'
   add 1 to #errorcount
   do error-found
   print 'No Union Dues rows found in GEX_UNION_DUES table for Dept:' (,34)
   print &E.DEPTID ()
   print ' ,Union Code:' ()
   print &E.UNION_CD () !SXK 11/03/99
end-if
 
end-procedure


!*********************************************************************
!This procedure tries to match every non-null column with the source
!values and if everything matches, passes that row's dues codes and 
!amounts as the employees general deductions
!  JNB 05/26/1999  
!  If the employee doesn't have a value in byte 4 of JOB.ELIG_CONFIG2,
!  The process uses the FULL/PART time value in the union dues table
!  to evaluate the employee.    
!*********************************************************************
   
begin-procedure find-union-dues-match

if RTRIM(&H.ACCT_CD,' ') <> ''
   if &H.ACCT_CD <> &E.ACCT_CD
      #debug8 show 'No match for Acct code'  ' ' &e.emplid
      !print 'No match for Acct code' ()
      move 'N' to $match_found
      goto skip-match
   end-if
end-if

!  JNB 05/26/1999 
if RTRIM(&H.GEX_EC1_BYTE_VAL,' ') <> ''
   if &H.GEX_EC1_BYTE_VAL <> substr(&E.ELIG_CONFIG2,4,1)
      !print 'No match for Elig Config2' ()
      #debug8 show 'No match for Elig Config2'  ' ' &e.emplid
      move 'N' to $match_found
      goto skip-match              !JNB 07/17/1999 Minor change - goto was misspelled
   end-if
Else 
   if RTRIM(&H.FULL_PART_TIME,' ') <> ''
    if &H.FULL_PART_TIME <> &E.FULL_PART_TIME
      !print 'No match for Full/Part' ()      
      #debug8 show  'No match for Full/Part'     ' ' &e.emplid   
      move 'N' to $match_found
      goto skip-match
    end-if
   end-if
end-if


if RTRIM(&H.REG_TEMP,' ') <> ''
   if &H.REG_TEMP <> &E.REG_TEMP
      !print 'No match for Reg/Temp' ()  
      #debug8 show  'No match for Reg/Temp'  ' ' &e.emplid
      move 'N' to $match_found
      goto skip-match
   end-if
end-if
! CWB 06/06/2001 BEGIN
!if RTRIM(&H.GEX_STUDENT_IND,' ') <> ''
if RTRIM(&H.GEX_STUDENT_IND,' ') = 'Y'
! CWB 06/06/2001 END

   if &H.GEX_STUDENT_IND <> &E.GEX_STUDENT_IND
      !print 'No match for Student Indicator' ()     
      #debug8 show 'No match for Student Indicator'       ' ' &e.emplid
      move 'N' to $match_found
      goto skip-match
   end-if
end-if

! CWB 06/06/2001 BEGIN
!if RTRIM(&H.GEX_STEWARD,' ') <> ''
if RTRIM(&H.GEX_STEWARD,' ') = 'Y'
! CWB 06/06/2001 END

   if &H.GEX_STEWARD <> &E.GEX_STEWARD
      !print 'No match for Steward' ()
      #debug8 show 'No match for Steward'  ' ' &e.emplid
      move 'N' to $match_found
      goto skip-match
   end-if
end-if

! CWB 06/06/2001 BEGIN
!if RTRIM(&H.GEX_FINAN_CORE,' ') <> ''
if RTRIM(&H.GEX_FINAN_CORE,' ') = 'Y'
! CWB 06/06/2001 END

   if &H.GEX_FINAN_CORE <> &E.GEX_FINAN_CORE
      !print 'No match for Finan Core ' ()
      #debug8 show 'No match for Finan Core '  ' ' &e.emplid
      move 'N' to $match_found
      goto skip-match
   end-if
end-if

if RTRIM(&H.JOBCODE,' ') <> ''
   if &H.JOBCODE <> &E.JOBCODE
      !print 'No match for Jobcode ' ()
      #debug8 show 'No match for Jobcode '  &e.emplid
      move 'N' to $match_found
      goto skip-match
   end-if
end-if

 #debug8 show '&H.SERVICE_DAYS_GBL '  &H.SERVICE_DAYS_GBL
 if &H.SERVICE_DAYS_GBL > 0
! CJH - 02/02/1999 - begin
   move &H.SERVICE_DAYS_GBL to #service_Days   
   
   do get-the-difference
!SXK 11/16/1999 Used to_number instead of move with mask 99999
   let #diff_days = to_number($diff_days)
!   move $diff_days to #diff_days 99999
!SXK 11/16/1999 End
   #debug8 show #diff_days ' ' #service_days ' ' &e.emplid
   if #diff_days < #SERVICE_DAYS
       move 'N' to $match_found
       goto skip-match
   end-if
 end-if

  
  move 'Y' to $match_found
  #debug8 show '$match_found ' $match_found ' &e.emplid ' &e.emplid
skip-match:

end-procedure


!*********************************************************************
!This procedure evaluates the dues deduction code and assessment codes
!and processes them accordingly.
!*********************************************************************
Begin-Procedure Evaluate-Dues-Assessment
#debug9 show 'In Evaluate-Dues-Assessment step'

move 0 to #init_Fee_lmt

! CJH - 02/02/1999 - begin
#debug8 show '&H.GEX_DEDCD_DUES ' &H.GEX_DEDCD_DUES
if RTRIM(&H.GEX_DEDCD_DUES,' ') <> ''
   if &E.HOURLY_RT = 0
      print 'Hourly Rate is 0 for the following employee.  Verify the Union Dues deductions' (,34)
      print &E.EMPLID ()
   end-if
   #debug8 show '&H.GEX_DUES_amt ' &H.GEX_DUES_AMT
   if &H.GEX_DUES_AMT > 0
      #debug8 show '&H.FACTOR' &H.FACTOR
      if &H.FACTOR > 0
         move &E.HOURLY_RT to #dues_amt
	 !AXL 7/2005 - Begin
      	 Evaluate &E.UNION_CD
	     when = 'R01'
       !GEXPY_852_BUnionDuesF09  Vahini Katta  01/26/2017 Begins
	     When = 'F09'
	     !When = 'F04'             !VENDKXY done changes for S3 12470474
       !GEXPY_852_BUnionDuesF09  Vahini Katta  01/26/2017 Ends
	     !vendaxg Added for S3#11364295  - Begin
	        !multiply &H.FACTOR times #dues_amt
	        multiply &H.FACTOR times #dues_amt  round=2 
	     !vendaxg Added for S3#11364295  - End
                #debug7 show 'R01/F09 &H.FACTOR times #dues_amt' &H.FACTOR ' '  #dues_amt
		add &H.GEX_DUES_AMT to #dues_amt
		#debug8 show 'results of add &H.GEX_DUES_AMT to #dues_amt ' #dues_amt
	     When-Other        
	        multiply &H.FACTOR times #dues_amt round=2
		#debug7 show 'new &H.FACTOR times #dues_amt round=2 ' &H.FACTOR ' '  #dues_amt
		add &H.GEX_DUES_AMT to #dues_amt
                #debug8 show 'results of add &H.GEX_DUES_AMT to #dues_amt ' #dues_amt
		multiply 1 times #dues_amt round=0
		#debug8 show 'results of multiply 1 times #dues_amt round=0 ' #dues_amt
	 End-Evaluate
!Vendkxy added  the code on 12/17/2008 for R01, to change amount from 10.61 to 11.61
	 if &E.UNION_CD = 'R01'
	 ! GEXPY_848_E160596_01  Vahini Katta   10/24/2013   Begins
	    !if  #dues_amt > 11.61
	    !    let #dues_amt = 11.61
            !end-if
            if  #dues_amt > 12.30
             show '#dues_amt > 12.30'
	        let #dues_amt = 12.30
            end-if
         ! GEXPY_848_E160596_01  Vahini Katta   10/24/2013   Ends   
	 end-if
!Vendkxy added  the code on 12/17/2008 for R01, to change amount from 10.61 to 11.61	 
	 !AXL 7/2005 - End
      else
      !GEXPY_852_BUnionDuesF09  Vahini Katta  01/26/2017 Begins 
	     If &E.UNION_CD = 'F09'
            If &E.HOURLY_RT > &H.GEX_DUES_AMT
                if &E.HOURLY_RT > 17.97
                   let #dues_amt = 17.97
                else
                   move &E.HOURLY_RT to #dues_amt
                end-if
            Else
                move &H.GEX_DUES_AMT to #dues_amt 
            End-if
       Else
         move &H.GEX_DUES_AMT to #dues_amt
       end-if
     !GEXPY_852_BUnionDuesF09  Vahini Katta  01/26/2017 Ends
      end-if
      move &H.GEX_DEDCD_DUES to $dedcd
      move 'A' to $ded_calc
      do check-the-dedcd-existence
      if $found = 'Y' 
! CWB 05/15/2001 BEGIN 
!        do update-dues-amt
         do compare-records
	 #debug8 show '$insert_needed ' $insert_needed
         if $insert_needed = 'Y'
           !do reset-end-date	AXL 7/2005
	   do insert-dues-amt
           do init-amounts  
         else  
           do update-dues-amt
         end-if 
! CWB 05/15/2001 END   
      else
!        move #dues_amt to #goal_bal
	 move 0 to #goal_bal
	 do insert-genl-ded
      end-if
   else  !dues amt =0
          #debug8 show 'dues = 0' 
	  #debug8 show '&H.FACTOR ' &H.FACTOR
      if &H.FACTOR > 0

         #debug8 show '&E.HOURLY_RT ' &E.HOURLY_RT 
	 move &E.HOURLY_RT to #dues_amt
         !AXL 7/2005 - Begin
	 Evaluate &E.UNION_CD
	 
	     when = 'R01'
       !GEXPY_852_BUnionDuesF09  Vahini Katta  01/26/2017 Begins 
	     When = 'F09'
       !GEXPY_852_BUnionDues  Vahini Katta  03/08/2017 Begins
	     !When = 'F04'             !VENDKXY done changes for S3 12470474
       !GEXPY_852_BUnionDues  Vahini Katta  03/08/2017 Ends
       !GEXPY_852_BUnionDuesF09  Vahini Katta  01/26/2017 Ends
	        multiply &H.FACTOR times #dues_amt
		#debug8 show '#dues_amt ' #dues_amt
		add &H.GEX_DUES_AMT to #dues_amt
		show '#dues_amt1 ' #dues_amt
	     When-Other     
       show 'when-other'
       show '&H.FACTOR:' &H.FACTOR
       show '#dues_amt2:' #dues_amt   
	        multiply &H.FACTOR times #dues_amt round=2
		#debug8 show '#dues_amt ' #dues_amt
		add &H.GEX_DUES_AMT to #dues_amt
    show '#dues_amt3:' #dues_amt
    !GEXPY_852_BUnionDuesF09  Vahini Katta  01/26/2017 Begins
     !GEXPY_852_BUnionDues  Vahini Katta  03/08/2017 Begins
		multiply 1 times #dues_amt round=0
    !multiply 1 times #dues_amt round=2
     !GEXPY_852_BUnionDues  Vahini Katta  03/08/2017 Ends
    !GEXPY_852_BUnionDuesF09  Vahini Katta  01/26/2017 Ends
		#debug8 show '#dues_amt2 ' #dues_amt
	 End-Evaluate

	 if &E.UNION_CD = 'R01'
	    if  #dues_amt > 10.61
	        let #dues_amt = 10.61
            end-if
	 end-if
         !AXL 7/2005 - End
! CJH - 04/15/1999 - begin
	 move 'A' to $ded_calc
! CJH - 04/15/1999 - end
      else
! CJH - 04/15/1999 - begin
	 move 'D' to $ded_calc
! CJH - 04/15/1999 - end
	 move 0 to #dues_amt
      end-if
    
!      move #dues_amt to #goal_bal
      move &H.GEX_DEDCD_DUES to $dedcd
      do check-the-dedcd-existence
      if $found = 'Y' 
! CWB 05/15/2001 BEGIN 
!        do update-dues-amt
         do compare-records
         #debug8 show '$insert_needed after $found #2 '  $insert_needed 
         if $insert_needed = 'Y'
	   !do reset-end-date		AXL 7/2005
           do insert-dues-amt
           do init-amounts 
         else    
	   #debug8 show 'doing update because check-the-dedcd-existence row not found'
           do update-dues-amt
         end-if 
! CWB 05/15/2001 END   
      else
!        move #dues_amt to #goal_bal
	 move 0 to #goal_bal
! CJH - 04/15/1999 - begin
!        move 'D' to $ded_calc
! CJH - 04/15/1999 - end
	 do insert-genl-ded
      end-if
   end-if
end-if
#debug8 show '&H.GEX_DEDCD_ASSESS' &H.GEX_DEDCD_ASSESS
if RTRIM(&H.GEX_DEDCD_ASSESS,' ') <> ''
!CJH - 02/02/1999
! rig job for stores that have 2 valid union deduction codes
! where the 2nd dedcd amount is dictated by the deduction table setup
!
! CJH - 04/14/1999 - rig job 2 to default to deduction table
!                    for OK Grocery assessment deduction code as flat amount

! CJH - 11/08/2000 test for ANNUAL ded frequency
!    if (substr(&H.GEX_DEDCD_ASSESS,1,2) = 'UN') or (&H.GEX_DEDCD_ASSESS = 'AS0636')
    if (substr(&H.GEX_DEDCD_ASSESS,1,2) = 'UN') or (&H.GEX_DEDCD_ASSESS = 'AS0636')
						or (&H.GEX_DEDCD_ASSESS = 'AS0249')
						or (&H.GEX_DEDCD_ASSESS = 'AS0377')!VENDKXY Added the code for S3 11882518

! CJH - 11/08/2000
	 

!    if substr(&H.GEX_DEDCD_ASSESS,1,2) = 'UN'
! CJH - 04/14/1999 - end

! CXA - 01/27/2006 - Begin
       if &H.GEX_DEDCD_ASSESS = 'UNWA04'
         move &E.HOURLY_RT to #dues_amt
         multiply 2 times #dues_amt round=2
	 move 'A' to $ded_calc
         Show 'Hourly Rate: ' &E.HOURLY_RT
         Show 'New Dues Amount: ' #dues_amt
       else
         move 0 to #dues_amt
         move 'D' to $ded_calc
       end-if
! CXA - 01/27/2006 - End
    else
        move &E.HOURLY_RT to #dues_amt
! CJH - 04/15/1999 - begin
	 move 'A' to $ded_calc
! CJH - 04/15/1999 - end
    end-if
      move &H.GEX_DEDCD_ASSESS to $dedcd

      do check-the-dedcd-existence
      #debug8 show '$found #3 ' $found
      if $found = 'Y'
! CWB 05/15/2001 BEGIN 
!        do update-dues-amt
         do compare-records
         if $insert_needed = 'Y'
           !do reset-end-date		AXL 7/2005
	   do insert-dues-amt
           do init-amounts  
         else
           do update-dues-amt  
         end-if 
! CWB 05/15/2001 END   
      else
!cjh     move #dues_amt to #goal_bal
	 move 0 to #goal_bal
! CJH - 04/15/1999 - begin
!        move 'A' to $ded_calc
! CJH - 04/15/1999 - end
	 do insert-genl-ded
      end-if
end-if

! CJH - 02/02/1999 - end

end-procedure

!*********************************************************************
!This procedure evaluates the Initiation fee ded field from UNION_DUES table 
!and processes it accordingly.
!*********************************************************************

Begin-Procedure Evaluate-Init-Fee

move 'A' to $ded_calc
#debug8 show '&H.GEX_DEDCD_INIT' &H.GEX_DEDCD_INIT

if RTRIM(&H.GEX_DEDCD_INIT,' ') <> ''
      move &H.GEX_DEDCD_INIT to $dedcd
      do Check-the-Dedcd-existence    

      if $found = 'Y' 
        #debug8 show '&i.goal_bal' &I.goal_bal
        #debug8 show '&i.goal.amt' &i.goal_amt

	 if &I.GOAL_BAL < &I.GOAL_AMT     
	    move &H.GEX_INIT_FEE to #dues_amt
        do update-dues-amt
 end-if
      else
	 do get-the-years
	 if #total_ded = 0
	    move &H.GEX_INIT_FEE to #dues_amt
	    move &H.GEX_INIT_FEE_LMT to #init_fee_lmt
!cjh        move #dues_amt to #goal_bal
	    move 0 to #goal_bal
	    do insert-genl-ded
	 else
	    if #total_ded < &H.GEX_INIT_FEE_LMT
	      move &H.GEX_INIT_FEE to #dues_amt
	      move &H.GEX_INIT_FEE_LMT to #init_fee_lmt
	      move #total_ded to #goal_bal
	      do insert-genl-ded
! CWB 05/15/2001 BEGIN   
              do init-amounts  
! CWB 05/15/2001 END   
	    end-if
	 end-if
      end-if
end-if

end-procedure

!*********************************************************************
!This procedure checks the GENL_DEDUCTION table for the deduction for 
!the employee
!*********************************************************************

Begin-Procedure Check-the-Dedcd-existence

move 'N' to $found

Begin-Select on-error=sql-error-found('Check-the-Dedcd-existence')
I.EFFDT         
I.GOAL_AMT
I.GOAL_BAL
I.DED_CALC            ! CWB 05/15/2001 added     
I.DED_ADDL_AMT        ! CWB 03/15/2001 added
I.DEDUCTION_END_DT    ! AXL 7/2005 added
  move 'Y' to $found

 #ifdef debug789
  show 'I.EFFDT ' &I.EFFDT 
  show 'I.GOAL_AMT ' &I.GOAL_AMT 
  show 'I.GOAL_bal ' &I.GOAL_bal 
  show 'I.DED_CALC ' &I.DED_CALC 
  show 'I.DED_ADDL_AMT ' &I.DED_ADDL_AMT 
  show 'I.DEDUCTION_END_DT ' &I.DEDUCTION_END_DT
 #endif

  let $ded_ded_calc = &i.ded_calc
  move &i.goal_amt to #ded_goal_amt
  move &i.goal_bal to #ded_goal_bal
  move &i.ded_addl_amt to #ded_addl_amt  ! CWB 03/15/2001 added

FROM PS_GENL_DEDUCTION I

WHERE I.EMPLID = &E.EMPLID
!  AND I.EMPL_RCD = &E.EMPL_RCD PSR 08/07/02 8 Upgrade 
! CJH - 12/22/1998 remove commented line - comment is incorrect
 ! AND I.DEDCD = $dedcd
  AND I.COMPANY = $company               ! GBD 09/16/2002 added
  AND I.DEDCD = $dedcd
! CJH - 12/22/1998 - end
  AND I.EFFDT = (SELECT MAX(EFFDT)
		   FROM PS_GENL_DEDUCTION
		  WHERE EMPLID = &E.EMPLID
		    !AND EMPL_RCD = &E.EMPL_RCD PSR 08/07/02 8 Upgrade 
                    AND COMPANY = $company               !GBD 09/16/2002 added
		    AND DEDCD = $dedcd
		    AND EFFDT <= $pay_end_Dt)

end-select

end-procedure

! CWB 05/15/2001 BEGIN
!************************************************************************
!This procedure compares fields from GEX_UNION_DUES against 
!the GENL_DEDUCTION table. If values are not the same, it sets the flag  
!to allow an insert into GENL_DEDUCTION.
!************************************************************************

Begin-Procedure Compare-records

#ifdef debug789
  show '$ded_calc ' '$ded_ded_calc'
  show $ded_calc  ' ' $ded_ded_calc

  show '#dues_amt' '#ded_addl_amt'
  show #dues_amt ' '#ded_addl_amt

  show '#init_fee_lmt ' '#ded_goal_amt'
  show #init_fee_lmt ' ' #ded_goal_amt

  show '#goal_bal ' '#ded_goal_bal'
  show #goal_bal ' ' #ded_goal_bal
#endif

show '$ded_calc ' '$ded_ded_calc'
  show $ded_calc  ' ' $ded_ded_calc

  show '#dues_amt' '#ded_addl_amt'
  show #dues_amt ' '#ded_addl_amt

  show '#init_fee_lmt ' '#ded_goal_amt'
  show #init_fee_lmt ' ' #ded_goal_amt

  show '#goal_bal ' '#ded_goal_bal'
  show #goal_bal ' ' #ded_goal_bal
	
	     SHOW '$ded_calc     '  $ded_calc    
	     SHOW '#dues_amt     '  #dues_amt    
	     SHOW '#init_fee_lmt '  #init_fee_lmt
	     SHOW '#goal_bal     '  #goal_bal    
	
             
move 'N' to $insert_needed
if (($ded_calc     = $ded_ded_calc)
and (#dues_amt     = #ded_addl_amt)    ! CWB 03/15/2001 added
and (#init_fee_lmt = #ded_goal_amt)
and (#goal_bal     = #ded_goal_bal)) 
  move 'N' to $insert_needed
else
  move 'Y' to $insert_needed
end-if
show '$insert_needed' $insert_needed
end-procedure
! CWB 05/15/2001 END

!*********************************************************************
!This procedure checks the DEDUCTION_BAL table for the deduction for 
!the employee
!*********************************************************************

Begin-Procedure get-the-years

move 'N' to $found

move 0 to #total_Ded

Begin-Select on-error=sql-error-found('Get-the-Years')
distinct(K1.BALANCE_YEAR) &K1.BALANCE_YEAR


     move 'Y' to $found
     do check-the-init-dedcd
    
FROM PS_DEDUCTION_BAL K1

WHERE K1.EMPLID = &E.EMPLID
AND   K1.COMPANY = &E.COMPANY                !GBD 09/16/2002 added
!JDH 10/08/98 Begin
!  AND K1.DEDCD like 'IN%'
  AND EXISTS
     (SELECT NULL
	FROM PS_GEX_UNION_DUES
       WHERE GEX_DEDCD_INIT = K1.DEDCD)
!JDH 10/08/98 End

end-select

end-procedure

!*********************************************************************
!This procedure checks the DEDUCTION_BAL table for the deduction for 
!the employee
!*********************************************************************

Begin-Procedure Check-the-Init-Dedcd

move 'N' to $found

Begin-Select on-error=sql-error-found('Check-the-Init-Dedcd')
K.DED_YTD 

     move 'Y' to $found
     add &K.DED_YTD to #total_ded

FROM PS_DEDUCTION_BAL K

WHERE K.EMPLID = &E.EMPLID
!JDH 10/08/98 Begin
!  AND K.DEDCD like 'IN%'
  AND K.COMPANY = &E.COMPANY                       !GBD 09/16/2002 added
  AND EXISTS
     (SELECT NULL
	FROM PS_GEX_UNION_DUES
       WHERE GEX_DEDCD_INIT = K.DEDCD)
!JDH 10/08/98 End
  AND K.BALANCE_YEAR = &K1.BALANCE_YEAR
  AND K.BALANCE_PERIOD =
     (SELECT MAX(BALANCE_PERIOD)
	  FROM PS_DEDUCTION_BAL
	 WHERE EMPLID = K.EMPLID
         AND   COMPANY = K.COMPANY                 !GBD 09/16/2002 added
!JDH 10/08/98 Begin
!          AND DEDCD LIKE 'IN%'
	 AND EXISTS
	    (SELECT NULL
	       FROM PS_GEX_UNION_DUES
	      WHERE GEX_DEDCD_INIT = DEDCD)
!JDH 10/08/98 End
	   AND BALANCE_YEAR = &K1.BALANCE_YEAR)

end-select

end-procedure

!*********************************************************************
!This procedure updates the dues amount in the GENL_DEDUCTION table
!for the selected employee
!*********************************************************************

Begin-Procedure Update-Dues-Amt
#debug9 Show 'Update-Dues-Amt'
  add +1 to #recs_updated

  let $dues_amt = to_char(#dues_amt)
!AXL - 03/30/2004 - Extra displays for debugging - Begin
#ifdef debug8
 display 'emplid:'     noline
 display &e.emplid     noline
 display '/'           noline
 display 'empl_rcd:'  noline
 display &e.empl_rcd  noline
 display '/'           noline
 display 'upd:'        noline
 display $dedcd        noline
 display '/'           noline
 display $ded_calc     noline
 display '/'           noline
 display '#dues_amt:'  noline
 display $dues_amt     noline
 display '... '         
#endif
!AXL - 03/30/2004 - Extra displays for debugging - End

Begin-Sql on-error=sql-error-found('Update-Dues-Amt')

UPDATE PS_GENL_DEDUCTION J
   SET J.DED_ADDL_AMT = #dues_amt,
       J.DEDUCTION_END_DT = '',
! CJH - 04/15/1999 - begin
       J.DED_CALC = $ded_calc
! CJH - 04/15/1999 - end
WHERE J.EMPLID = &E.EMPLID
!  AND J.EMPL_RCD = &E.EMPL_RCD PSR 08/07/02 8 Upgrade
  AND J.COMPANY = $company                !GBD 09/16/2002 added
  AND J.DEDCD = $dedcd
  AND J.EFFDT = &I.EFFDT
end-sql
end-procedure

! CWB 05/15/2001 BEGIN 
!************************************************************************
!This procedure resets the deduction_end_dt in the GENL_DEDUCTION table
!for an employee who is getting an insert.
!************************************************************************

Begin-Procedure Reset-End-date

#debug9 show 'Entering procedure Reset-End-date for emplid: ' &e.emplid
#debug8 show 'cmpy:	' &E.COMPANY
#debug8 show 'dedcd:	' $dedcd
#debug8 show 'effdt:	' &i.effdt
#debug8 show 'reset flag '  $reset_flag

Begin-Sql on-error=sql-error-found('Reset-end-date')
UPDATE PS_GENL_DEDUCTION JJ
   SET JJ.DEDUCTION_END_DT = ''
WHERE JJ.EMPLID = &E.EMPLID
!  AND JJ.EMPL_RCD = &E.EMPL_RCD PSR 08/07/02 8 Upgrade 
  AND JJ.COMPANY = &E.COMPANY
  AND JJ.DEDCD = $dedcd
  AND JJ.EFFDT = &I.EFFDT
end-sql
end-procedure

!*********************************************************************
!This procedure inserts a row for the selected employee in the 
!GENL_DEDUCTION table when the dues amt changes.
!*********************************************************************

Begin-Procedure Insert-Dues-Amt
  #debug9 show 'Entering procedure Insert-dues-amt for emplid: ' &e.emplid

  add +1 to #dues_recs_inserted
  show '#dues_recs_inserted ' #dues_recs_inserted

  show '&E.EMPLID ' &E.EMPLID
  show 'cmpy ' $company
  show '$dedcd '    $dedcd
  show '$pay_begin_dt ' $pay_begin_dt
 
Begin-Sql on-error=sql-error-found('Insert-Dues-Amt')
INSERT INTO PS_GENL_DEDUCTION 
(EMPLID,
!EMPL_RCD, PSR 08/07/02 8 Upgrade
DEDCD,
EFFDT,
DED_CALC,
DEDUCTION_END_DT,
DED_ADDL_AMT,
DED_RATE_PCT,
GOAL_AMT,
GOAL_BAL,
LOAN_INT_PCT,
BAS_TAXABLE_BEN,
DED_STOPPED,
LAST_ACTION,
LAST_UPDATE_DATE,
!GBD 09/16/2002 Begin - v8.3 added fields
COMPANY,
PROCESS_DEDN,
GVT_DED_DIST_CD,
GVT_PYMNT_METHOD,
GVT_CHK_NAME,
GVT_ADDRESS1,
GVT_ADDRESS2,
GVT_ADDRESS_CITY,
GVT_ADDRESS_STATE,
GVT_ADDRESS_ZIP,
GVT_ADDRESS_CNTRY,
BANK_CD,
ACCOUNT_NUM,
ACCOUNT_TYPE,
GVT_PAYEE_ID_NO,
GVT_PAYEE_NAME,
GVT_ALLOT_PB
!GBD 09/16/2002 End
)
VALUES
(&E.EMPLID,
!&E.EMPL_RCD,PSR 08/07/02 8 Upgrade
$dedcd,
$pay_begin_dt,
$ded_calc,
'',
#dues_amt,
0,
#init_fee_lmt,
#goal_bal,
0,
'N',
'N',
' ',
sysdate,
!GBD 09/16/2002 Begin - v8.3 added fields
$company,
'Y',
' ',
'E',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' '
!GBD 09/16/2002 End
)
end-sql

end-procedure

!*********************************************************************
!This procedure initializes numeric variables after inserts.
!*********************************************************************

Begin-Procedure Init-Amounts

  move 0 to #dues_amt
  move 0 to #init_fee_lmt
  move 0 to #goal_bal

end-procedure

! CWB 05/15/2001 END   

!*********************************************************************
!This procedure inserts a row for the selected employee in the 
!GENL_DEDUCTION table for the non-exist deduction code
!*********************************************************************
Begin-Procedure Insert-Genl-Ded
#debug9 Show 'Insert-Genl-Ded'

  do Insert-Genl-Ded-Cd
  add +1 to #recs_inserted
#ifdef debug8
 display 'ins:' noline
 display $dedcd noline
 display '/' noline
 display $ded_calc noline
 display '...' noline
#endif

Begin-Sql on-error=sql-error-found('Insert-Genl-Ded')
INSERT INTO PS_GENL_DEDUCTION 
(EMPLID,
!EMPL_RCD, PSR 08/07/02 8 Upgrade 
DEDCD,
EFFDT,
DED_CALC,
DEDUCTION_END_DT,
DED_ADDL_AMT,
DED_RATE_PCT,
GOAL_AMT,
GOAL_BAL,
LOAN_INT_PCT,
BAS_TAXABLE_BEN,
DED_STOPPED,
LAST_ACTION,
LAST_UPDATE_DATE,
!GBD 09/16/2002 Begin - v8.3 added fields
COMPANY,
PROCESS_DEDN,
GVT_DED_DIST_CD,
GVT_PYMNT_METHOD,
GVT_CHK_NAME,
GVT_ADDRESS1,
GVT_ADDRESS2,
GVT_ADDRESS_CITY,
GVT_ADDRESS_STATE,
GVT_ADDRESS_ZIP,
GVT_ADDRESS_CNTRY,
BANK_CD,
ACCOUNT_NUM,
ACCOUNT_TYPE,
GVT_PAYEE_ID_NO,
GVT_PAYEE_NAME,
GVT_ALLOT_PB
!GBD 09/16/2002 End
)
VALUES
(&E.EMPLID,
!&E.EMPL_RCD, PSR 08/07/02 8 Upgrade 
$dedcd,
! CJH - 01/25/1999 - begin
! use $pay_Begin_dt as EFFDT of GENL_DED row
!$pay_end_Dt,
$pay_begin_dt,
! CJH - 01/25/1999 - end
$ded_calc,
'',
#dues_amt,
0,
#init_fee_lmt,
#goal_bal,
0,
'N',
!SXK 02/17/2000 Added extra fields
'N',
' ',
sysdate,
!GBD 09/16/2002 Begin - v8.3 added fields
$company,
'Y',
' ',
'E',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' '
!GBD 09/16/2002 End
)
end-sql

end-procedure
!*********************************************************************
!This procedure inserts Genl Ded Code rows for EEs
!*********************************************************************

Begin-Procedure Insert-Genl-Ded-Cd

Begin-Sql on-error=sql-error-found('Insert-Genl-Ded-Cd')
INSERT INTO PS_GENL_DED_CD 
(EMPLID,
!EMPL_RCD, PSR 08/07/02 8 Upgrade 
DEDCD,
COMPANY                               !GBD 09/16/2002 Added
)
VALUES
(&E.EMPLID,
!&E.EMPL_RCD, PSR 08/07/02 8 Upgrade 
$dedcd,
$company                              !GBD 09/16/2002 Added
)
end-sql

end-procedure

!*********************************************************************
!This procedure retrieves the days difference between two dates
!*********************************************************************

begin-procedure get-the-difference

!AXL 03/30/2004 Always use ORIG HIRE per HRIS - Begin
  !SXC 05/25/2000 Begin
  !if &F.REHIRE_DT = ''
  !do convert-to-dtu-date(&F1.ORIG_HIRE_DT, $Orig_Hire_Dt_dtu)
  !else
  !do convert-to-dtu-date(&F.REHIRE_DT, $Orig_Hire_Dt_dtu)
  !end-if
  !AXC 05/25/2000 End
! Manish, PY115, 08/14/2007  - Giant Eagle Modification   -Begin
  !do convert-to-dtu-date(&F1.ORIG_HIRE_DT, $Orig_Hire_Dt_dtu)		
  do convert-to-dtu-date(&I1.ORIG_HIRE_DT, $Orig_Hire_Dt_dtu)	
! Manish, PY115, 08/14/2007  - Giant Eagle Modification   -End  
!AXL 03/30/2004 Always use ORIG HIRE per HRIS - End

do dtu-diff-days($Orig_Hire_Dt_dtu, $reportdate_ccyy, #diff_Days)
!SXK 11/16/1999 Begin
!move #diff_days to $diff_Days

let $diff_days = to_char(#diff_days)

end-procedure

!********************************************************************
!This procedure displays in the error report if there are any sql erros
!happened in the program
!********************************************************************

begin-procedure SQL-Error-Found($Proc_Name) 
  do error-found

! CWB 07/18/2001 BEGIN
!  print 'SQL Error in ' (,21)
  print 'SQL Error in ' (,28)
!  print $Proc_Name (,35)  
  print $Proc_Name (,42)  
! CWB 07/18/2001 END

  print $_sql-error (+1,1) 
  print 'sql-status:' (+1,1)
  print #_sql-status () edit 99999 
  show $emplid $DEPTID $company $paygroup noline
  display ' : SQL error ' noline
  display #_sql-status

end-procedure

!*********************************************************************
!This procedure displays the error message for the records that are in
!progress
!*********************************************************************

begin-procedure Error-Found
  move 'Y' to $ErrorFound
  do Format-Number(#InputTran, $out, '99999')
  print $out (+1,1)
  move &E.EMPLID to $emplid
  ! GEX_SEC_REENG 2016-06-07 Vahini Katta Begins
  !let $EmplId_1st3 = substr($EmplId,1,3)
  !let $EmplId_mid2 = substr($EmplId,4,2)
  !let $EmplId_last4 = substr($EmplId,6,4)
 
  !String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  !print $EmplID11 (,16)
  print $emplid (,16)
  ! GEX_SEC_REENG 2016-06-07 Vahini Katta Ends
end-procedure

#Include 'tranctrl.sqc' !Common Transaction Control Procedures
!#Include 'reset.sqc'   !Reset printer procedure
#Include 'curdttim.sqc' !Get-Current-DateTime procedure
#Include 'datetime.sqc' !Routines for date and time formatting
#Include 'number.sqc'   !Routines to format numbers
!#Include 'payrnctl.sqc'  !Select-Parameters
#Include 'stdapi.sqc'   !Get_Run_Control Procedure
!#Include 'payinit.sqc'	!Payroll Initializatin routines
#Include 'datemath.sqc'	!Does the date-math functions
#include 'gexxx913.sqc'	!Get union_cd code multiple row table