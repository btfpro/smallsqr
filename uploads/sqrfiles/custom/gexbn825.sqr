!***********************************************************************
!  GEXBN825:  Paid Status and Benefits Termed Audit                    *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXBN825 :            Paid Status and Benefits Termed Audit          *
!                                                                      *
! Narrative:            This audit reports any employees that are in   *
!                       paid leave status and all of their benefits    *
!                       are terminated.  This report helps Benefits to *
!                       put these employees in unpaid leave status.    *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           PAY_CALENDAR                                   *
!                       DISABILITY_BEN                                 *
!                       FSA_BENEFIT                                    *
!                       HEALTH_BENEFIT                                 *
!                       LIFE_ADD_BEN                                   *
!                       PERSONAL_DATA                                  *
!                       JOB                                            *
!                                                                      *
! Written by:           Jim Hutchison                                  *
!                                                                      *
! Normally Run:         Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         As Of Date                                   *
!                         Multiple Company/Paygroup                    *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! JDH       12/22/98    Initial Creation                               *
! JDH       12/30/98    Modified logic to include only those EEs that  *
!                        have no current or future benefits and are in *
!                        paid leave status.                            *
! JDH       01/18/99    Changed program to include setup01.sqc instead *
!                        of setup31.sqc                                *
! SXK	    07/06/99	Fixed coverage_begin_dt			       *
! GEX_SEC_REENG 2016-06-10 Vahini Katta                                 
! Changes related to gex_emplid_mapp/7 digit emplid                     
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)


#define #column1     1
#define #column2    19 
#define #column3    57
#define #column4    70
#define #column5    82
#define #column6    93
#define #column7   108
#define #column8   119


Begin-Heading 8
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg02.sqc'

  if $PayGroup <> $priorPayGroup
    do Get-PayGroup-Data
    move $PayGroup to $priorPayGroup
  end-if

  print 'Pay Group'            (4,1)
  print $PayGroup              (0,13)
  print $PayGroupName          (0,17)

  Print 'JOB'                  (+2,{#column4})
  Print 'ACCT'                 (+0,{#column5})
  Print 'LEAVE'                (+0,{#column6})
  Print 'REG'                  (+0,{#column7})
  Print 'F/P'                  (+0,{#column8})

  Print 'EMPLID'               (+1,{#column1})
  Print 'NAME'                 (+0,{#column2})
  Print 'DEPTID'               (+0,{#column3})
  Print 'CODE'                 (+0,{#column4})
  Print 'CODE'                 (+0,{#column5})
  Print 'BEGIN DT'             (+0,{#column6})
  Print 'TEMP'                 (+0,{#column7})
  Print 'TIME'                 (+0,{#column8})

  Print '-'                    (+1,{#column1},11)    Fill
  Print '-'                    (+0,{#column2},30)    Fill
  Print '-'                    (+0,{#column3},06)    Fill
  Print '-'                    (+0,{#column4},05)    Fill
  Print '-'                    (+0,{#column5},04)    Fill
  Print '-'                    (+0,{#column6},08)    Fill
  Print '-'                    (+0,{#column7},04)    Fill
  Print '-'                    (+0,{#column8},04)    Fill
End-Heading


Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXBN825'
  Let $ReportTitle   =   'Paid Status and Benefits Terminated'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  Let $GEXXX901_Company_Alias  = 'JOB.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'JOB.PAYGROUP'

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  Date-time () HH:MI:SS &timeBegan
  Date-time () MM/DD/YYYY &dateBegan
  Show 'Process Began at ' &timeBegan ' on ' &dateBegan
  Show ' '

  Do Format-DateTime($AsOfDate, $X000_Report_Heading_AsOfDate, {DEFDATE}, '', '')
  Let $X000_Order_By = 'Company, Paygroup, EmplID'

  Do P130-Get-Pay-End-Dt
  Do Format-DateTime($pay_end_dt, $X000_Pay_End_Dt, {DEFDATE}, '', '')

  Do P140-Print-Cover-Page
End-Procedure


Begin-Procedure P110-SQRW-Run-Controls
#debug9 Show 'P110-SQRW-Run-Controls'
  Do Ask-As-Of-Date

  Display 'Enter Company/Paygroup or leave blank to exit.'
  While 1=1
    Input $In-Company Maxlen=3 'Company'
    Uppercase $In-Company
    If Rtrim($In-Company, ' ') = ''
      Break
    Else
      Input $In-Paygroup Maxlen=3 'Paygroup'
      Uppercase $In-Paygroup
      If Rtrim($In-Paygroup, ' ') = ''
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''')'
      Else
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''' And ' || $GEXXX901_Paygroup_Alias || ' = '''  || $In-Paygroup || ''')'
      End-If
      Add 1 To #GEX_RC_PAYGROUP_ROWS
      If #GEX_RC_PAYGROUP_ROWS = 1
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While

  If #GEX_RC_PAYGROUP_ROWS = 0
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ')'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
  End-If
End-Procedure


Begin-Procedure P120-Process-Scheduler-Run-Controls
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXRCBN1-SELECT-PARAMETERS
  Let $AsOfDate = &GEX_RC_BEN.ASOFDATE
  If Rtrim(&GEX_RC_BEN.ASOFDATE,' ') = ''
    Let $AsOfDate = $AsOfToday
  End-If
  Do GEXXX901-Select-Company-Paygroup-Parameters
End-Procedure


Begin-Procedure P130-Get-Pay-End-Dt
#debug9 Show 'P130-Get-Pay-End-Dt'
  move 'N' to $found

Begin-Select  On-Error=P290-SQL-Error-Found('P130-Get-Pay-End-Dt')
MAX(PAY.PAY_END_DT) &PAY.PAY_END_DT

  move &PAY.PAY_END_DT to $pay_end_Dt
  move 'Y' to $found

FROM   PS_PAY_CALENDAR PAY

WHERE  PAY.PAY_END_DT     <= $AsOfDate
AND    PAY.PAY_SHEETS_RUN  = 'Y'
End-Select

  if $found = 'N'
    display 'No Previous Pay Cycle as of:' noline
    display $AsOfDate
    stop
  end-if
End-Procedure


Begin-Procedure P140-Print-Cover-Page
#debug9 Show 'P140-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = '  (+2,5)
  Print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA       (0,+2)
  Print 'As Of Date  :'                                           (+2,5)
  Print $X000_Report_Heading_AsOfDate                             (0,+2)
  Print 'Pay End Date:'                                           (+2,5)
  Print $X000_Pay_End_Dt                                          (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

  Let #PAGE-COUNT = 0
  New-Page
  Let #PAGE-COUNT = 1
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
Begin-Select On-Error=P290-SQL-Error-Found('P200-Main-Process')
JOB.COMPANY   ()  On-Break  Level=1
                            Print=Never
                            After=P260-After-Company-Break

JOB.PAYGROUP  ()  On-Break  Level=2
                            Print=Never
                            Before=P240-Before-Paygroup-Break
                            After=P250-After-Paygroup-Break

JOB.EMPLID
JOB.EMPL_RCD
JOB.DEPTID
JOB.JOBCODE
JOB.ACCT_CD
JOB.EFFDT
JOB.REG_TEMP
JOB.FULL_PART_TIME
PD.NAME

  Let $Benefits-Found = 'N'

  Let $Company  = &JOB.COMPANY
  Let $Paygroup = &JOB.PAYGROUP

  Let $Table = 'PS_DISABILITY_BEN'
  Do P210-Base-Benefits

  If $Benefits-Found = 'N'
    Let $Table = 'PS_FSA_BENEFIT'
    Do P210-Base-Benefits
  End-If

  If $Benefits-Found = 'N'
    Let $Table = 'PS_HEALTH_BENEFIT'
    Do P210-Base-Benefits
  End-If

  If $Benefits-Found = 'N'
    Let $Table = 'PS_LIFE_ADD_BEN'
    Do P210-Base-Benefits
  End-If

  If $Benefits-Found = 'N'
    Let $Data-Found-Flag = 'Y'
    Add 1 To #paygroup_employees
    Add 1 To #company_employees
    Do P220-Get-Leave-Begin-Date
    Do P230-Print-Record
  End-If

FROM   PS_PERSONAL_DATA  PD,
       PS_JOB            JOB

WHERE  PD.EMPLID         = JOB.EMPLID

AND    JOB.EMPL_STATUS   = 'P'

AND    JOB.EFFDT         =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID     = JOB.EMPLID
       AND    EMPL_RCD  = JOB.EMPL_RCD
       AND    EFFDT     <= $pay_end_dt)

AND    JOB.EFFSEQ        =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID     = JOB.EMPLID
       AND    EMPL_RCD  = JOB.EMPL_RCD
       AND    EFFDT      = JOB.EFFDT)

AND   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA]

ORDER BY JOB.COMPANY, JOB.PAYGROUP, JOB.EMPLID
End-Select
End-Procedure


Begin-Procedure P210-Base-Benefits
#debug9 Show 'P210-Base-Benefits'
Begin-Select
BB.PLAN_TYPE
BB.COVERAGE_ELECT
BB.COVERAGE_BEGIN_DT

  If &BB.COVERAGE_ELECT = 'T'
!SXK 7/6/1999 begin 
!    If &BB.COVERAGE_ELECT > $pay_end_dt
     do convert-to-dtu-date(&bb.coverage_begin_dt,$coverage_dtu_date)
     do convert-to-dtu-date($pay_end_Dt,$pay_end_Dt_dtu)
     If $COVERAGE_dtu_date > $pay_end_dt_dtu
!PLN 7/6/99 end
      Let $Benefits-Found = 'Y'
    End-If
  Else
    Let $Benefits-Found = 'Y'
  End-If

FROM  [$Table] BB

WHERE  BB.EMPLID            = &JOB.EMPLID
AND    BB.EMPL_RCD         = &JOB.EMPL_RCD
AND    BB.COVERAGE_BEGIN_DT =
      (SELECT MAX(COVERAGE_BEGIN_DT)
       FROM   [$Table]
       WHERE  EMPLID        = BB.EMPLID
       AND    EMPL_RCD     = BB.EMPL_RCD
       AND    PLAN_TYPE     = BB.PLAN_TYPE)
End-Select
End-Procedure


Begin-Procedure P220-Get-Leave-Begin-Date
#debug9 Show 'P220-Get-Leave-Begin-Date'
  Let $Status-Change = 'N'
Begin-Select
J.EFFDT
J.EMPL_STATUS

  If &J.EMPL_STATUS = 'P' And
     $Status-Change = 'N'
    Let $Leave-Begin-Date = &J.EFFDT
    Let $Status-Change = 'N'
  Else
    Let $Status-Change = 'Y'
  End-If

FROM   PS_JOB J

WHERE  J.EMPLID       = &JOB.EMPLID
AND    J.EMPL_RCD    = &JOB.EMPL_RCD
AND    J.EFFDT       <= &JOB.EFFDT
ORDER BY J.EFFDT DESC
End-Select
End-Procedure


Begin-Procedure P230-Print-Record
#debug9 Show 'P230-Print-Record'
  Do Format-DateTime($Leave-Begin-Date, $effdt, {DEFDATE}, '', '')

  Print &JOB.EMPLID             (+1,{#column1})   !Edit xxx-xx-xxxx ! GEX_SEC_REENG 2016-06-10 Vahini Katta 
  Print &PD.NAME                (+0,{#column2})
  Print &JOB.DEPTID             (+0,{#column3})
  Print &JOB.JOBCODE            (+0,{#column4})
  Print &JOB.ACCT_CD            (+0,{#column5})
  Print $effdt                  (+0,{#column6})
  Print &JOB.REG_TEMP           (+0,{#column7})
  Print &JOB.FULL_PART_TIME     (+0,{#column8})
End-Procedure


Begin-Procedure P240-Before-Paygroup-Break
#debug9 Show 'P240-Before-Paygroup-Break'
  If $OK-To-Advance-Page = 'Y'
    New-Page
    Let $OK-To-Advance-Page = 'N'
  End-If
End-Procedure


Begin-Procedure P250-After-Paygroup-Break
#debug9 Show 'P250-After-Paygroup-Break'
  If #paygroup_employees > 0
    Print 'Number of Employees in Paygroup'   (+2,{#column1})
    Print $Paygroup             (,+1)
    Print ':'                   (,+1)
    Print #paygroup_employees   (,+1) Edit 999,999,999
    Let #paygroup_employees = 0
    Let $OK-To-Advance-Page = 'Y'
  End-If
End-Procedure


Begin-Procedure P260-After-Company-Break
#debug9 Show 'P260-After-Company-Break'
  If #company_employees > 0
    Print 'Number of Employees in Company'   (+2,{#column1})
    Print $Company              (,+2)
    Print ':'                   (,+1)
    Print #company_employees    (,+1) Edit 999,999,999
    Let #company_employees = 0
    Let $OK-To-Advance-Page = 'Y'
  End-If
End-Procedure


Begin-Procedure P290-SQL-Error-Found($Proc_Name)
#debug9 Show 'P290-SQL-Error-Found'
  Show ' '
  Show 'SQL Error in ' $Proc_Name 
  Show 'SQL Error:  ' $_sql-error
  Stop
End-Procedure


Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Date-time () HH:MI:SS &timeEnded
  Date-time () MM/DD/YYYY &dateEnded
  Show 'Process Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of process'
End-Procedure


#include 'askaod.sqc'    !Ask user for $AsOfDate
#include 'getcodta.sqc'  !Get-Company-Data
#include 'getpgdta.sqc'  !Get-Paygroup-Data
#include 'gexxx920.sqc'  !Get ben single row run control
#include 'gexxx901.sqc'  !Get multiple paygroup parameters
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
