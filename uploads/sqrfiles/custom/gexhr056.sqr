!***********************************************************************
! GEXHR056:  Yearly Merit Increase                                     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXHR056 :            Yearly Merit Increase Process                  *
!                                                                      *
! Narrative:            Process to administer the yearly merit         *
!                       increase.                                      *
!                                                                      *
! SQL Tables:           gex_salinc_empl				       *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                                                                      *
! Written by:           Tony Labra                                     *
!                                                                      *
! Normally Run:         Yearly                                         *
!                                                                      *
! Control Parms:        None                                           *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS      DATE            DESCRIPTION OF THE CHANGE              *
!***********************************************************************
! AXL           09/13/1999      Initial Creation                       *
!                                                                      *
! AXL           01/20/2000      Satisfy 7.5 requirements with changes  *
!                               to PS_JOB procedures and retreiving    *
!                               union cd from PS_JOB_LABOR.  Also dis- *
!                               abled Update to BAS DATA CHG and re-   *
!                               treive BAS_ACTION from ACTION_RSN tbl. *
!                                                                      *
! AXL / HR70133 05/14/2001      Add new job field GEX_SEASONAL_EMP.    *
!                                                                      *
! CJH           11/07/2001      Add insert into ps_compensation when rt*
!                               change inserted into job               *
! AXC		08/20/2002	Added insert into job_jr               *
!				modified insert into Job               *
!				modified insert into compensation      *
!                                                                      *
! GBD / HR10345 10/10/2002      Add code to revise Union Code Exclusion*
!                                                                      *
! GBD / HR10345 10/24/2002      Revised Job insert-missing fields      *
!                                                                      *
! AXL / HR10302 02/28/2003      Revised code for compensation inserts. *
!                                                                      *
! CWB           03/25/2003      Revised columns used in  compensation  *
!                               inserts - v 8.3.                       *
!                                                                      *
! AXL   HR10560 12/4/2003       Add code for PS_COMPENSATION. Add code *
!                               to have LAST_INCREASE_DT populated on  *
!                               PS_EMPLOYMENT.                         *
!                                                                      *
! AXL   HR10951 09/16/2005      Multiple enhnancements as per csr/itg  *
!                                                                      *
! AXL           03/10/2006      Add Get-Go union code.                 *
! MXR           03/23/2007      ITG # 40842 - Process all union codes  *
! MXT		    10/03/2007	Made modfication in the sqr accroing to  *
!                               cahnges in JOb and job_jr table in 9.0 *
!											     *
! DXS           12/31/2007      Update-Employment, changed record to   *
!                               PS_PER_ORG_ASGN                        *
!GEX-TLL  	03/19/08 	HCM 9.0 Upgrade 		       *
! ISDVMZA       05/14/2014      Added logic to insert rows to the table *
!			          PS_GEX_JOB_EXTRAS			*
! GEX_SEC_REENG 2015-06-24 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************

#include 'setenv.sqc' 		!Set environment

begin-setup
#Include 'setup32a.sqc'


#define #col_emp       1
#define #col_rec      13
#define #col_name     20
#define #col_pgp      45
#define #col_frq      52
#define #col_sal      60
#define #col_nsal     72
#define #col_ann_rt   85
#define #col_nann_rt 100
#define #col_dt      115
#define #col_seq     127
#define #col_field   130	!AXL 09/16/2005

   declare-report report1
Printer-Type=HPLASERJET
     layout=DEFAULT
   end-declare

   declare-report report2
Printer-Type=HPLASERJET
     layout=DEFAULT
   end-declare

   declare-report report3
Printer-Type=HPLASERJET
    layout=DEFAULT
   end-declare

end-setup

!*********************************************************************
begin-report
!*********************************************************************

  do Initialization
  do Main
  do Stdapi-Term
  do EOJ

end-report

!***********************************************************************
begin-procedure Initialization
!***********************************************************************

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  Let $GEXXX902_Deptid_Alias   = 'GEX.DEPTID'

  if $prcs_process_instance = ''
    do SQRW-Run-COntrols
  else
    do Process-Scheduler-Run-Controls
  end-if

  date-time () hh:mi:ss &TimeBegan
  date-time () MM/DD/YYYY  &DateBegan
  show 'Report Began at ' &TimeBegan ' on '  &DateBegan

  Let $ReportID    = 'GEXHR056'
  Let $ReportTitle = 'Yearly Merit Increase Process'

  Show '$ReportID='    $ReportID
  Show '$ReportTitle=' $ReportTitle

  Do Format-DateTime($WHERE_SELECT_ASOFDATE, $REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')
  Show '$WHERE_SELECT_ASOFDATE = '   $REPORT_HEADING_ASOFDATE

  Do Find-Bas-Action	!AXL 1/21/2000 Get correct bas_action for JOB insert

  let $first_rec='Y'

  Do Print-Cover-Page

end-procedure

!***********************************************************************
Begin-Procedure SQRW-Run-Controls
!***********************************************************************

  Do Ask-As-Of-Date
  Let $WHERE_SELECT_ASOFDATE = $AsOfDate
!AXC UPGRADE 8.3. GET OPRID FOR INSERT INTO JOB_JR
  LET $OPRID = 'SQRW'

  While 1=1
    Input $job_action Maxlen=3 'Input JOB Action'
    Uppercase $job_action
    If isblank($job_action) = 0
      Break
    End-If
  End-While
  display $job_action


  While 1=1
    Input $job_action_reason Maxlen=3 'Input JOB Action Reason'
    Uppercase $job_action_reason
    If isblank($job_action_reason) = 0
      Break
    End-If
  End-While
    display $job_action_reason

   Let $DeptIDString = ''''
  Display 'Enter DeptID or leave blank to exit.'
  While 1=1
    Input $In-DeptID Maxlen=10 'DeptID'
    Uppercase $In-DeptID
    If Rtrim($In-DeptID, ' ') = ''
      Concat '''' With $DeptIDString
      Break
    End-If
    If $DeptIDString <> ''''
      Concat ''',''' With $DeptIDString
    End-If
    Concat $In-DeptID With $DeptIDString
  End-While

  If $DeptIDString = ''''''
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' In (' || $DeptIDString || ')'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_INCLUDE_DEPTID_CRITERIA
  End-If


  While 1=1
     Input $Gex_Process_Optn Maxlen=1 'Input Preview of Final (P or E)'
     Uppercase $Gex_Process_Optn
     If Rtrim($Gex_Process_Optn, ' ') ='P' or
        Rtrim($Gex_Process_Optn, ' ') ='E'
        Break
     End-if
    End-While
    display $Gex_Process_Optn

End-Procedure

!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls
!***********************************************************************

  do GEXRCHR1-Select-Parameters
  Do GEXXX902-Select-Deptid-Parameters

  Let $WHERE_SELECT_ASOFDATE = $GEX_RC_HR.ASOFDATE
!AXC UPGRADE 8.3. GET OPRID FOR INSERT INTO JOB_JR
  LET $OPRID = $GEX_RC_HR.OPRID

  If Rtrim($GEX_RC_HR.ASOFDATE, ' ') = ''
    Let $WHERE_SELECT_ASOFDATE = $AsOfToday
  End-If

  Let $Gex_Process_Optn  = $GEX_RC_HR.Gex_Process_Optn
  Let $job_action        = $GEX_RC_HR.Action
  Let $job_action_reason = $GEX_RC_HR.Action_Reason
  let #Change_pct        = $GEX_RC_HR.percentchg

  show '  #Change_pct        = $GEX_RC_HR.percentchg *********** ' #Change_pct

End-Procedure

!***********************************************************************
begin-procedure Print-Cover-Page
!***********************************************************************

  use-report Report1
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)

  Print '$Gex_Process_Optn                                    ='  (+1,5)
  Print $Gex_Process_Optn                 			  (0,+2)

  Print '$EFFECTIVE DATE                                      ='  (+1,5)
  Print  $WHERE_SELECT_ASOFDATE                                   (0,+2)

  Print '$job_action                                          ='  (+1,5)
  Print $job_action                 		         	  (0,+2)

  Print '$job_action_reason                                   ='  (+1,5)
  Print $job_action_reason             		         	  (0,+2)

  Print '$GEXXX902_Include_Deptid_Criteria                    ='  (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria                 (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+3,2)
  Print '$Order_By                                            ='  (+1,5)
  Print 'GEX.COMPANY, GEX.DEPTID, GEX.PAYGROUP, GEX.COMP_FREQUENCY, GEX.NAME'   (0,+2)

  Let #PAGE-COUNT = 0
  New-Page

End-Procedure

!*********************************************************************
Begin-Heading 8 for-reports=(report1)
!*********************************************************************

  move 'Yearly Merit Increase Process' to $ReportTitle
#Include 'stdhdg02.sqc'

  if $gex_process_optn = 'P'
    let $SubTitle = 'Preview of Increase Rows'
  else
    let $SubTitle = 'Audit of Increase Row'
  end-if

  print $SubTitle 	()  	center

  position (+1)

  if $Deptid <> $priorDeptid
    Do Get-Department-Name
    move $Deptid to $priorDeptid
  end-if

  Print 'Deptid'                (4,1)
  Print $Deptid                 (0,13)
  Print $DeptName               (0,+2)

  do Detail-Header-Current

end-heading

!*********************************************************************
Begin-Heading 8 for-reports=(report2)
!*********************************************************************

  move 'Yearly Merit Increase Process' to $ReportTitle
#Include 'stdhdg02.sqc'

  if $gex_process_optn = 'P'
    let $SubTitle = 'Preview Future Row(s) After Increase'
  else
    let $SubTitle = 'Audit of Future Row(s) After Increase'
  end-if

  print $SubTitle 	()  	center

  position (+1)

  if $Deptid <> $priorDeptid
    Do Get-Department-Name
    move $Deptid to $priorDeptid
  end-if

  Print 'Deptid'                (4,1)
  Print $Deptid                 (0,13)
  Print $DeptName               (0,+2)

  do Detail-Header-Future

end-heading

!*********************************************************************
Begin-Heading 8 for-reports=(report3)
!*********************************************************************

  move 'Yearly Merit Increase Process' to $ReportTitle
#Include 'stdhdg02.sqc'

  if $gex_process_optn = 'P'
    let $SubTitle = 'Preview Errors'
  else
    let $SubTitle = 'Audit of Errors'
  end-if

  print $SubTitle 	()  	center

  position (+1)

  if $Deptid <> $priorDeptid
    Do Get-Department-Name
    move $Deptid to $priorDeptid
  end-if

  Print 'Deptid'                (4,1)
  Print $Deptid                 (0,13)
  Print $DeptName               (0,+2)

  position (+2)

  print 'Empl'	        (+1,{#col_rec})
  print 'Emplid'	(+1,{#col_emp})
  print 'Rcd #'		(0,{#col_rec})
  print 'Name'		(0,{#col_name})
  print 'Condition'	(0,{#col_pgp})
  print 'Field'         (0,{#col_nann_rt})
  Print 'Value'		(0,{#col_field})	!AXL 09/16/2005
  print '-'           	(+1,01,155) fill	!AXL 09/16/2005

end-heading

!*********************************************************************
Begin-Procedure Detail-Header-Current
!*********************************************************************

  position (+2)

  print 'Empl' 	        (+1,{#col_rec})
  print 'Pay' 	        (0,{#col_pgp})
  print 'Comp'          (0,{#col_frq})
  print 'Current'	(0,{#col_sal})
  print 'New'  		(0,{#col_nsal})
  print 'Current'	(0,{#col_ann_rt})
  print 'New'  		(0,{#col_nann_rt})

  print 'Emplid'	(+1,{#col_emp})
  print 'Rcd #'         (0,{#col_rec})
  Print 'Name'		(0,{#col_name})
  print 'Group'         (0,{#col_pgp})
  print 'Freq'          (0,{#col_frq})
  print 'Comprate'      (0,{#col_sal})
  print 'Comprate'      (0,{#col_nsal})
  print 'Salary'        (0,{#col_ann_rt})
  print 'Salary'        (0,{#col_nann_rt})
  print 'Effdt'		(0,{#col_dt})
  print 'Effseq'	(0,{#col_seq})
  print '-'           	(+1,01,132) fill

end-procedure

!*********************************************************************
Begin-Procedure Detail-Header-Future
!*********************************************************************

  position (+2)

  print 'Empl' 	        (+1,{#col_rec})
  print 'Pay' 	        (0,{#col_pgp})
  print 'Comp'          (0,{#col_frq})

  print 'Emplid'	(+1,{#col_emp})
  print 'Rcd #'         (0,{#col_rec})
  Print 'Name'		(0,{#col_name})
  print 'Group'         (0,{#col_pgp})
  print 'Freq'          (0,{#col_frq})
  print 'Comprate'      (0,{#col_sal})
  print 'Effdt'		(0,{#col_nsal})
  print 'Effseq'	(0,{#col_ann_rt})
  print '-'           	(+1,01,90) fill

end-procedure

!*********************************************************************
begin-procedure Main
!*********************************************************************
let $sql-statement = 'GEXHR056.SQR,Main'
begin-SELECT On-Error=Sql-Diagnostic
GEX.COMPANY		()	On-Break Level = 1
				Print=Never
GEX.DEPTID		()	On-Break Level = 2
				Print=Never
                                Before=Before-Deptid
				After=Deptid-Totals
GEX.EMPLID
GEX.EMPL_RCD
GEX.PAYGROUP
GEX.COMP_FREQUENCY
GEX.NAME
GEX.GEX_OLD_COMPRATE
GEX.GEX_NEW_COMPRATE

  let $emplid		= &gex.emplid
  let #EMPL_RCD_nbr 	= &GEX.EMPL_RCD
  let $company 		= &GEX.COMPANY
  let $deptid		= &GEX.DEPTID
  let #comprate 	= &gex.gex_old_comprate
  let #new_comprate 	= &gex.gex_new_comprate
  let $comp_frequency   = &gex.comp_frequency

  add 1 to #record_count

  do Select-Job-Baseline

  let $error='N'
  let $future_rows_exists='N'

  do Validate-Current
  do Validate-Future

  if $error='N'
    do Process-Salary-Inc
  end-if

FROM PS_GEX_SALINC_EMPL GEX
WHERE GEX.GEX_NEW_COMPRATE > 0
and [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
ORDER BY GEX.COMPANY, GEX.DEPTID, GEX.PAYGROUP, GEX.COMP_FREQUENCY, GEX.NAME

end-select

  use-report Report1
  let $old_annual_rt_gr_tot  = ltrim(edit(#old_annual_rt_gr_tot,'$,$$$,$$$,$$9.99'), ' ')
  let $new_annual_rt_gr_tot  = ltrim(edit(#new_annual_rt_gr_tot,'$,$$$,$$$,$$9.99'), ' ')

  new-page
  !let $company=' '
  !let $deptid=' '
  Print 'Grand Total: Employees'	(+2,13)
  Print #total_count		        (,35)  Edit 999,999
  Print $old_annual_rt_gr_tot		(0,{#col_ann_rt})
  Print $new_annual_rt_gr_tot	       	(0,{#col_nann_rt})

end-procedure

!************************************************************************
! This procedure selects all data from one row of the JOB table         *
! as the max effective date <=  a specified date. This is to evaluate   *
! current data values                                                   *
!************************************************************************
begin-procedure Select-Job-Baseline
!************************************************************************
!AXC modified statement to include new 8.3 fields
let $sql-statement = 'GEXHR056.SQR,Select-Job-Baseline'
begin-SELECT On-Error=Sql-Diagnostic
J.EMPLID
J.EMPL_RCD
J.EFFDT
  Do Format-DateTime(&J.EFFDT, $REPORT_EFFDT, {DEFDATE}, '', '')
J.EFFSEQ
J.PER_ORG																											!AMS 09/18/2007
J.DEPTID
J.JOBCODE
J.POSITION_NBR
J.SUPERVISOR_ID
J.POSITION_OVERRIDE
J.POSN_CHANGE_RECORD
J.EMPL_STATUS
J.ACTION
J.ACTION_DT																											!AMS 09/18/2007
J.ACTION_REASON
J.LOCATION
J.TAX_LOCATION_CD
J.JOB_ENTRY_DT
J.DEPT_ENTRY_DT
J.POSITION_ENTRY_DT
J.SHIFT
J.REG_TEMP
J.FULL_PART_TIME
J.COMPANY
J.PAYGROUP
!J.PIN_NUM		!AXL 1/21/2000 7.5 Change ! AXC remove pin. 8.3 UPgrade
!J.PAY_BASIS_NUM		!AXL 1/21/2000 7.5 Change
J.BAS_GROUP_ID
J.ELIG_CONFIG1
J.ELIG_CONFIG2
J.ELIG_CONFIG3
J.ELIG_CONFIG4
J.ELIG_CONFIG5
J.ELIG_CONFIG6
J.ELIG_CONFIG7
J.ELIG_CONFIG8
J.ELIG_CONFIG9
J.BEN_STATUS
J.BAS_ACTION																																	!AMS 09/18/2007
J.COBRA_ACTION
J.EMPL_TYPE
J.HOLIDAY_SCHEDULE
J.STD_HOURS
J.STD_HRS_FREQUENCY    !GBD 10/24/2002
J.OFFICER_CD
J.EMPL_CLASS
J.SAL_ADMIN_PLAN
J.GRADE
J.GRADE_ENTRY_DT
J.STEP
J.STEP_ENTRY_DT
J.GL_PAY_TYPE
J.ACCT_CD
J.EARNS_DIST_TYPE
!J.SALARY_MATRIX_CD 	!GEX-MXT added for HCM 9.0 Upgrade																												!AMS 09/18/2007
!J.RATING_SCALE 	!GEX-MXT added for HCM 9.0 Upgrade																														!AMS 09/18/2007
!J.REVIEW_RATING 	!GEX-MXT added for HCM 9.0 Upgrade																														!AMS 09/18/2007
!J.REVIEW_DT 		!GEX-MXT added for HCM 9.0 Upgrade																															!AMS 09/18/2007
J.COMP_FREQUENCY
J.COMPRATE
J.CHANGE_AMT
J.CHANGE_PCT
J.ANNUAL_RT
J.MONTHLY_RT
J.DAILY_RT
J.HOURLY_RT
J.ANNL_BENEF_BASE_RT
J.SHIFT_RT
J.SHIFT_FACTOR
J.CURRENCY_CD
J.BUSINESS_UNIT  	!AXL 1/21/2000 7.5 Change
J.SETID_DEPT     	!AXL 1/21/2000 7.5 Change
J.SETID_JOBCODE  	!AXL 1/21/2000 7.5 Change
J.SETID_LOCATION	!AXC 08/20/2002 8.3 UPGRADE
J.SETID_SALARY		!AXC 08/20/2002 8.3 UPGRADE
J.REG_REGION     	!AXL 1/21/2000 7.5 Change
J.DIRECTLY_TIPPED	!AXL 1/21/2000 7.5 Change
J.FLSA_STATUS
J.EEO_CLASS
J.FUNCTION_CD
J.TARIFF_GER		!AXC 08/20/2002 8.3 UPGRADE
J.TARIFF_AREA_GER	!AXC 08/20/2002 8.3 UPGRADE
J.PERFORM_GROUP_GER	!AXC 08/20/2002 8.3 UPGRADE
J.LABOR_TYPE_GER	!AXC 08/20/2002 8.3 UPGRADE
J.SPK_COMM_ID_GER	!AXC 08/20/2002 8.3 UPGRADE
!J.WRKS_CNCL_MEM_GER	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade										!AMS 09/18/2007
J.HOURLY_RT_FRA
J.ACCDNT_CD_FRA
J.VALUE_1_FRA		!AXC 08/20/2002 8.3 UPGRADE
J.VALUE_2_FRA		!AXC 08/20/2002 8.3 UPGRADE
J.VALUE_3_FRA		!AXC 08/20/2002 8.3 UPGRADE
J.VALUE_4_FRA		!AXC 08/20/2002 8.3 UPGRADE
J.VALUE_5_FRA		!AXC 08/20/2002 8.3 UPGRADE
J.CTG_RATE		!AXC 08/20/2002 8.3 UPGRADE
J.PAID_HOURS		!AXC 08/20/2002 8.3 UPGRADE
J.PAID_FTE		!AXC 08/20/2002 8.3 UPGRADE
J.PAID_HRS_FREQUENCY	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_EFFDT		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade														!AMS 09/18/2007
!J.GVT_EFFDT_PROPOSED	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_TRANS_NBR		!AXC 08/20/2002 8.3 UPGRADE !GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_TRANS_NBR_SEQ	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_WIP_STATUS	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_STATUS_TYPE	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_NOA_CODE		!AXC 08/20/2002 8.3 UPGRADE 	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_LEG_AUTH_1	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_PAR_AUTH_D1	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_PAR_AUTH_D1_2	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_LEG_AUTH_2	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_PAR_AUTH_D2	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_PAR_AUTH_D2_2	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_PAR_NTE_DATE	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_WORK_SCHED	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_SUB_AGENCY	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_ELIG_FEHB		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_FEHB_DT		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_PAY_RATE_DETER	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_STEP		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_RTND_PAY_PLAN	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_RTND_SAL_PLAN	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_RTND_GRADE	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_RTND_STEP		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_RTND_GVT_STEP	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_PAY_BASIS		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_COMPRATE		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_LOCALITY_ADJ	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_BIWEEKLY_RT	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_DAILY_RT		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_HRLY_RT_NO_LOC	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_DLY_RT_NO_LOC	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_BW_RT_NO_LOC	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_MNLY_RT_NO_LOC	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_ANNL_RT_NO_LOC	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_XFER_FROM_AGCY	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_XFER_TO_AGCY	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_RETIRE_PLAN	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_ANN_IND		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_FEGLI		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_FEGLI_LIVING	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_LIVING_AMT	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_ANNUITY_OFFSET	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_CSRS_FROZN_SVC	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_PREV_RET_COVRG	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_FERS_COVERAGE	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_TYPE_OF_APPT	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_POI		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_POSN_OCCUPIED	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_CONT_EMPLID	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_ROUTE_NEXT	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_CHANGE_FLAG	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_TSP_UPD_IND	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_PI_UPD_IND	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_SF52_NBR		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_S113G_CEILING	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_LEO_POSITION	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_ANNUIT_COM_DT	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_BASIC_LIFE_RED	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_DED_PRORT_DT	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_FEGLI_BASC_PCT	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_FEGLI_OPT_PCT	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_FEHB_PCT		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_RETRO_FLAG	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_RETRO_DED_FLAG	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_RETRO_JOB_FLAG	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade													!AMS 09/18/2007
!J.GVT_RETRO_BSE_FLAG	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade													!AMS 09/18/2007
!J.GVT_OTH_PAY_CHG	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade														!AMS 09/18/2007
!J.GVT_DETL_POSN_NBR	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade													!AMS 09/18/2007
!J.UNION_FULL_PASS					!GEX-MXT added for HCM 9.0 Upgrade																									!AMS 09/18/2007
!J.ANNL_BEN_BASE_OVRD	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.BENEFIT_PROGRAM	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.UPDATE_PAYROLL	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_PAY_PLAN		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_PAY_FLAG		!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
!J.GVT_NID_CHANGE	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
J.UNION_FULL_PART	!AXC 08/20/2002 8.3 UPGRADE
J.UNION_POS		!AXC 08/20/2002 8.3 UPGRADE
J.MATRICULA_NBR		!AXC 08/20/2002 8.3 UPGRADE
J.SOC_SEC_RISK_CODE	!AXC 08/20/2002 8.3 UPGRADE
J.UNION_FEE_AMOUNT	!AXC 08/20/2002 8.3 UPGRADE
J.UNION_FEE_START_DT	!AXC 08/20/2002 8.3 UPGRADE
J.UNION_FEE_END_DT	!AXC 08/20/2002 8.3 UPGRADE
J.EXEMPT_JOB_LBR	!AXC 08/20/2002 8.3 UPGRADE
J.EXEMPT_HouRS_MONTH	!AXC 08/20/2002 8.3 UPGRADE
J.WRKS_CNCL_FUNCTION	!AXC 08/20/2002 8.3 UPGRADE
J.INTERCTR_WRKS_CNCL	!AXC 08/20/2002 8.3 UPGRADE
J.CURRENCY_CD1		!AXC 08/20/2002 8.3 UPGRADE
J.PAY_UNION_FEE		!AXC 08/20/2002 8.3 UPGRADE
J.UNION_CD		!AXC 08/20/2002 8.3 UPGRADE
J.BARG_UNIT		!AXC 08/20/2002 8.3 UPGRADE
J.UNION_SENIORITY_DT	!AXC 08/20/2002 8.3 UPGRADE
J.ENTRY_DATE		!AXC 08/20/2002 8.3 UPGRADE
J.LABOR_AGREEMENT	!AXC 08/20/2002 8.3 UPGRADE
J.EMPL_CTG		!AXC 08/20/2002 8.3 UPGRADE
J.EMPL_CTG_L1		!AXC 08/20/2002 8.3 UPGRADE
J.EMPL_CTG_L2		!AXC 08/20/2002 8.3 UPGRADE
J.SETID_LBR_AGRMNT	!AXC 08/20/2002 8.3 UPGRADE
J.WPP_STOP_FLAG																							!AMS 09/18/2007
J.LABOR_FACILITY_ID																					!AMS 09/18/2007
J.LBR_FAC_ENTRY_DT																					!AMS 09/18/2007
J.LAYOFF_EXEMPT_FLAG																				!AMS 09/18/2007
J.LAYOFF_EXEMPT_RSN																					!AMS 09/18/2007
J.GP_PAYGROUP		!AXC 08/20/2002 8.3 UPGRADE
J.GP_DFLT_ELIG_GRP	!AXC 08/20/2002 8.3 UPGRADE
J.GP_ELIG_GRP		!AXC 08/20/2002 8.3 UPGRADE
J.GP_DFLT_CURRTTYP	!AXC 08/20/2002 8.3 UPGRADE
J.CUR_RT_TYPE		!AXC 08/20/2002 8.3 UPGRADE
J.GP_DFLT_EXRTDT	!AXC 08/20/2002 8.3 UPGRADE
J.GP_ASOF_DT_EXG_RT	!AXC 08/20/2002 8.3 UPGRADE
J.ADDS_TO_FTE_ACTUAL	!AXC 08/20/2002 8.3 UPGRADE
J.CLASS_INDC		!AXC 08/20/2002 8.3 UPGRADE
J.ENCUMB_OVERRIDE	!AXC 08/20/2002 8.3 UPGRADE
J.FICA_STATUS_EE	!AXC 08/20/2002 8.3 UPGRADE
J.FTE			!AXC 08/20/2002 8.3 UPGRADE
J.PRORATE_CNT_AMT	!AXC 08/20/2002 8.3 UPGRADE
J.PAY_SYSTEM_FLG	!AXC 08/20/2002 8.3 UPGRADE
J.BORDER_WALKER		!AXC 08/20/2002 8.3 UPGRADE
J.LUMP_SUM_PAY		!AXC 08/20/2002 8.3 UPGRADE
J.CONTRACT_NUM		!AXC 08/20/2002 8.3 UPGRADE
J.JOB_INDICATOR		!AXC 08/20/2002 8.3 UPGRADE
J.WRKS_CNCL_ROLE_CHE    !GBD 10/24/2002
!J.WRKS_CNCL_ID_LCL	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade													!AMS 09/18/2007
J.BENEFIT_SYSTEM	!AXC 08/20/2002 8.3 UPGRADE
J.WORK_DAY_HOURS	!AXC 08/20/2002 8.3 UPGRADE
!J.SUPERVISOR_ID	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT added for HCM 9.0 Upgrade
J.HR_STATUS																															!AMS 09/18/2007
J.APPT_TYPE																															!AMS 09/18/2007
J.MAIN_APPT_NUM_JPN																											!AMS 09/18/2007
J.REPORTS_TO		!AXC 08/20/2002 8.3 UPGRADE
J.FORCE_PUBLISH		!AXC 08/20/2002 8.3 UPGRADE
J.JOB_DATA_SRC_CD	!AXC 08/20/2002 8.3 UPGRADE
J.ESTABID
J.SUPV_LVL_ID																							!AMS 09/18/2007
J.SETID_SUPV_LVL																					!AMS 09/18/2007
J.ABSENCE_SYSTEM_CD																				!AMS 09/18/2007
J.POI_TYPE																								!AMS 09/18/2007
J.HIRE_DT																									!AMS 09/18/2007
J.LAST_HIRE_DT																						!AMS 09/18/2007
J.TERMINATION_DT																					!AMS 09/18/2007
J.ASGN_START_DT																						!AMS 09/18/2007
J.LST_ASGN_START_DT																				!AMS 09/18/2007
J.ASGN_END_DT																							!AMS 09/18/2007
!J.LDW_OVER					!GEX-MXT added for HCM 9.0 Upgrade																						!AMS 09/18/2007
J.LDW_OVR		!GEX-MXT added for HCM 9.0 Upgrade
J.LAST_DATE_WORKED
J.EXPECTED_RETURN_DT																			!AMS 09/18/2007
!J.EXPECTED_END_DT				!GEX-MXT added for HCM 9.0 Upgrade																		!AMS 09/18/2007
J.EXPECTED_END_DATE	!GEX-MXT added for HCM 9.0 Upgrade
J.AUTO_END_FLG
J.LASTUPDDTTM		!GEX-MXT added for HCM 9.0 Upgrade
J.LASTUPDOPRID 		!GEX-MXT added for HCM 9.0 Upgrade																				!AMS 09/18/2007
J.GEX_LIGHT_DUTY
J.GEX_CHANGE_RECORD
J.GEX_VOLUN_LOW_HRS
J.GEX_STUDENT_IND
J.GEX_MOON_IND
J.GEX_DEPTID_OVR
J.GEX_ACCT_CD_OVR
J.GEX_GL_EXP_OVR
J.GEX_STEWARD
J.GEX_DUES_EXEMPT
J.GEX_FINAN_CORE
J.GEX_INFLATED_HRS
J.GEX_FP_CODE
J.GEX_SEASONAL_EMP	!AXL 5/14/2001 New job field
!JL.UNION_CD 		!AXL 1/21/2000 7.5 Change	! UNION CODE OF JOB. 8.3 UPGRADE

FROM PS_JOB J, PS_EMPLOYMENT E	!AXC JOIN NOT NEEDED. UNION CODE ON JOB. 8.3 UPGRADE, PS_JOB_LABOR JL
WHERE J.EMPLID  = $emplid
AND J.EMPL_RCD = #empl_rcd_nbr
AND J.EMPLID	= E.EMPLID
AND J.EMPL_RCD	= E.EMPL_RCD
!AXC 8.3 UPGRADE AND E.EMPLID    = JL.EMPLID	AXL 1/21/2000 7.5 Change
!AXC 8.3 UPGRADE AND E.empl_rcd = JL.EMPL_RCD	AXL 1/21/2000 7.5 Change
!AND J.EMPL_STATUS in ('A','L','P','S')		!AXL 09/16/2005
AND J.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB
          WHERE EMPLID    = J.EMPLID
            AND EMPL_RCD = J.EMPL_RCD
            AND EFFDT    <= $WHERE_SELECT_ASOFDATE)
AND J.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
          WHERE EMPLID    = J.EMPLID
            AND EMPL_RCD = J.EMPL_RCD
            AND EFFDT    =  J.EFFDT)
!AXL 1/21/2000 7.5 Change - Begin
!AXC 08/20/2002 8.3 UPGRADE REMOVE JOB LABOR JOIN.
!AND jl.effdt                   =
!      (Select Max(effdt)
!       From   ps_job_labor
!       Where  emplid             = jl.emplid
!       And    empl_rcd          = jl.empl_rcd
!       And    effdt             <= $WHERE_SELECT_ASOFDATE)
!AND jl.effseq                  =
!      (Select Max(effseq)
!       From   ps_job_labor
!       Where  emplid             = jl.emplid
!       And    empl_rcd          = jl.empl_rcd
!       And    effdt              = jl.effdt)
!AXL 1/21/2000 7.5 Change - End
End-Select
end-procedure


!*********************************************************************
begin-procedure Validate-Current
!*********************************************************************
  !AXL 09/16/2005 New - Begin
  move 'N' to $e_error
  Evaluate &j.empl_status
    When = 'A'
    When = 'L'
    When = 'P'
    When = 'S'
      move 'N' to $e_error
      break
    When-Other
      move 'Y' to $e_error
  End-Evaluate

  if $e_error = 'Y'
     let $error='Y'
     let $error_rsn   = 'Error-EE not active in Psoft'
     let $error_field = 'Current Empl Status'
     let $error_value = &j.empl_status
     do Print-Error-Log
     goto skip-match
   end-if
!AXL 09/16/2005 New - End

!#####################################################  ! MXR           03/23/2007      ITG # 40842 - Process all union codes  *
! CWB 01/08/2007 Comment out the code below
!GBD 10/10/2002 Begin
!  move 'N' to $u_error

!    when = 'NON'
!      move 'N' to $u_error
!      break
!    when = 'CBT'
!      move 'N' to $u_error
!      break
!    when = 'COL'
!      move 'N' to $u_error
!      break
!    when = 'TOL'
!      move 'N' to $u_error
!      break
!    when = 'MOD'
!      move 'N' to $u_error
!      break
!    when = 'GGO'		!AXL 03/10/2006
!      move 'N' to $u_error	!AXL 03/10/2006
!      break			!AXL 03/10/2006
!    when-other
!      move 'Y' to $u_error
!      break
!  End-Evaluate

!   if &j.union_cd <> 'NON'
!   if $u_error = 'Y'
!     let $error='Y'
!     let $error_rsn   = 'Error-Rejected for unioncd <> CBT,NON,COL,TOL,MOD,GGO'
!     let $error_field = 'Union_cd'
!     let $error_value = &j.union_cd
!     do Print-Error-Log
!   end-if
!GBD 10/10/2002 End
!CWB 01/08/2007 End
!#####################################################  ! MXR           03/23/2007      ITG # 40842 - Process all union codes  *

   !AXL 09/16/2005 New - Begin
   if &gex.company <> &j.company
     let $error='Y'
     let $error_rsn    = 'Error-Rejected for Cmpy not matched'
     let $error_field  = 'Merit Cmpy vs Job Cmpy'
     let $error_value  = &gex.company||' vs '||&j.company
     do Print-Error-Log
   end-if

   if &gex.comp_frequency <> &j.comp_frequency
      let $error='Y'
      let $error_rsn    = 'Error-Rejected for Comp Freq not matched'
      let $error_field  = 'Merit Freq vs Job Freq'
      let $error_value  = &gex.comp_frequency||' vs '||&j.comp_frequency
      do Print-Error-Log
   end-if

   if &gex.deptid <> &j.deptid
      let $error='Y'
      let $error_rsn    = 'Error-Rejected for Deptid not matched'
      let $error_field  = 'Merit Dpt vs Job Dpt'
      let $error_value  = &gex.deptid||' vs '||&j.deptid
      do Print-Error-Log
   end-if

   if &gex.gex_old_comprate <> &j.comprate
     let $error='Y'
     let $error_rsn   = 'Error-Rejected for Comprate not matched'
     let $error_field = 'Merit Rate vs Curr Rate'
     let $error_value = edit(&gex.gex_old_comprate,'$$$,$$9.99')||' vs '||edit(&j.comprate,'$$$,$$9.99')
     do Print-Error-Log
   end-if

   if &j.comprate > 0
      let #audit_job_change_amt  = &GEX.GEX_NEW_COMPRATE - &j.comprate
      let #audit_job_change_pct  = (#audit_job_change_amt / &j.comprate) * 100


      if &gex.gex_new_comprate < &j.comprate
        let $error='Y'
        let $error_rsn   = 'Error-Rejected new rate < existing rate'
        let $error_field = 'New Rate vs Curr Rate'
        let $error_value = edit(&GEX.GEX_NEW_COMPRATE,'$$$,$$9.99')||' vs '||edit(&j.comprate,'$$$,$$9.99')
        do Print-Error-Log
      end-if
   end-if

!###################################################
! CWB 01/08/2007 Comment out the code below.
  show  ' ******************************** #audit_job_change_pct ' #audit_job_change_pct   ' EMPLID =  '$emplid
  show  ' ******************************** $Change_pct ' #Change_pct

   if #audit_job_change_pct  > #Change_pct
     let $error='Y'
     let $error_rsn   = 'Error-Rejected Increase Amount > '
     SHOW $error_rsn   '='  #Change_pct
     let $error_field = 'Percent Increase'
     let $error_value =  edit(#audit_job_change_pct ,'9,999.99')||'%'
     do Print-Error-Log
   end-if
!###################################################

   skip-match:
   !AXL 09/16/2005 New - End

end-procedure

!********************************************************************
Begin-Procedure Validate-Future
!********************************************************************
  !move 'N' to $future_rows_exists
  let $sql-statement = 'GEXHR056.SQR,Validate-Future'

begin-SELECT On-Error=Sql-Diagnostic
FUT.COMPANY
FUT.COMP_FREQUENCY
FUT.EFFDT
FUT.EFFSEQ
FUT.COMPRATE
FUT.DEPTID

  move 'Y' to $future_rows_exists

  if &gex.company <> &fut.company
     let $error='Y'
     let $error_rsn   = 'Error-Rejected for Futr Cmpy not matched'
     let $error_field = 'Cmpy'
     let $error_value = &fut.company
     do Print-Error-Log
  end-if

  if &gex.comp_frequency <> &fut.comp_frequency
     let $error='Y'
     let $error_rsn    = 'Error-Rejected for Futr Comp Freq not matched'
     let $error_field  = 'Comp_freq'
     let $error_value  = &fut.comp_frequency
     do Print-Error-Log
  end-if

  if &gex.deptid <> &fut.deptid
     let $error='Y'
     let $error_rsn    = 'Error-Rejected for Futr Deptid not matched'
     let $error_field  = 'Deptid'
     let $error_value  = &fut.deptid
     do Print-Error-Log
  end-if

  if &gex.gex_old_comprate <> &fut.comprate
    let $error='Y'
    let $error_rsn   = 'Error-Rejected for Futr Comprate not matched'
    let $error_field = 'Comprate'
    let $error_value = &fut.comprate
    do Print-Error-Log
  end-if

FROM PS_JOB FUT
WHERE FUT.EMPLID = $emplid
  AND FUT.EMPL_RCD = #EMPL_RCD_NBR
  AND FUT.EFFDT > $WHERE_SELECT_ASOFDATE
end-select

end-procedure

!*********************************************************************
begin-procedure Process-Salary-Inc
!*********************************************************************

  if $REPORT_HEADING_ASOFDATE <> $REPORT_EFFDT
    let #job_effseq = 0
  else
    let #job_effseq = &J.effseq + 1
  end-if

  let $job_action_dt = $AsOfToday

  let #job_change_amt  = &GEX.GEX_NEW_COMPRATE - &j.comprate
  let #job_change_pct  = (#job_change_amt / &j.comprate) * 100

   if &GEX.COMP_FREQUENCY = 'H'
     let #job_annual_rt  = &GEX.GEX_NEW_COMPRATE * &J.STD_HOURS * 52
     let #job_monthly_rt = #job_annual_rt / 12
! AXC determine Daily Rt. Upgrade 8.3
     let #job_daily_rt   = #job_annual_rt / 260
     let #job_hourly_rt  = &GEX.GEX_NEW_COMPRATE
   else
     let #job_annual_rt  = &GEX.GEX_NEW_COMPRATE * 52
     let #job_monthly_rt = #job_annual_rt / 12
!AXC Determine Daily Rt . Upgrade 8.3
     let #job_daily_rt   = #job_annual_rt / 260
     if &J.STD_HOURS <> 0
       let #job_hourly_rt = (#job_annual_rt / 52) / &J.STD_HOURS
     else
       let #job_hourly_rt = 0
     end-if
   end-if

   add #job_annual_rt to #new_annual_rt_tot
   add &j.annual_rt   to #old_annual_rt_tot

  if $gex_process_optn = 'P'
    add 1 to #deptid_count
    do Print-Curr-Rpt
    if $future_rows_exists = 'Y'
      do Process-Future-Rpt
    end-if
  else
    do Insert-To-Job
    do proc-job-junior
    If #sql-status = 0
      add 1 to #deptid_count
      !do Update-Personal-Data	!AXL 1/21/2000 7.5 Change
      do Update-Employment  	!AXL 12/4/2003
  ! 11/7/2001 - CJH - insert ps_compensation row for EE
      do process-compensation-rows
  ! 11/7/2001 - CJH - end
      do Print-Curr-Rpt
      if $future_rows_exists = 'Y'
        do Update-Future-Rows
        do Process-Future-Rpt
      end-if
    end-if
  end-if

end-procedure

!********************************************************************
begin-procedure Insert-To-Job
!********************************************************************
  let $sql-statement = 'GEXHR056.SQR,Insert-To-Job,PS_JOB'
begin-SQL On-Error=Sql-Diagnostic
Insert into ps_job
       (EMPLID,
	EMPL_RCD,
	EFFDT,
	EFFSEQ,
	PER_ORG,														!AMS 09/18/2007
	DEPTID,
	JOBCODE,
	POSITION_NBR,
	SUPERVISOR_ID,
	POSITION_OVERRIDE,
	POSN_CHANGE_RECORD,
	EMPL_STATUS,
	ACTION,
	ACTION_DT,
	ACTION_REASON,
	LOCATION,
	TAX_LOCATION_CD,
	JOB_ENTRY_DT,
	DEPT_ENTRY_DT,
	POSITION_ENTRY_DT,
	SHIFT,
	REG_TEMP,
	FULL_PART_TIME,
	COMPANY,
	PAYGROUP,
    !    PIN_NUM	,		!AXL 1/21/2000 7.5 Change
    !    PAY_BASIS_NUM,		!AXL 1/21/2000 7.5 Change
	BAS_GROUP_ID,
	ELIG_CONFIG1,
	ELIG_CONFIG2,
	ELIG_CONFIG3,
	ELIG_CONFIG4,
	ELIG_CONFIG5,
	ELIG_CONFIG6,
	ELIG_CONFIG7,
	ELIG_CONFIG8,
	ELIG_CONFIG9,
	BEN_STATUS,
        BAS_ACTION,		!AXL 1/21/2000 7.5 Change
	COBRA_ACTION,
	EMPL_TYPE,
	HOLIDAY_SCHEDULE,
	STD_HOURS,
        STD_HRS_FREQUENCY,      !GBD 10/24/2002
        OFFICER_CD,
	EMPL_CLASS,
	SAL_ADMIN_PLAN,
	GRADE,
	GRADE_ENTRY_DT,
	STEP,
	STEP_ENTRY_DT,
	GL_PAY_TYPE,
	ACCT_CD,
	EARNS_DIST_TYPE,
!	SALARY_MATRIX_CD,								!AMS 09/18/2007
!	RATING_SCALE,										!AMS 09/18/2007
!	REVIEW_RATING,									!AMS 09/18/2007
!	REVIEW_DT,											!AMS 09/18/2007
	COMP_FREQUENCY,
	COMPRATE,
	CHANGE_AMT,
	CHANGE_PCT,
	ANNUAL_RT,
	MONTHLY_RT,
	DAILY_RT,		! AXC NEW DAILY RATE ADDED. 8.3 UPGRADE
	HOURLY_RT,
	ANNL_BENEF_BASE_RT,
	SHIFT_RT,
	SHIFT_FACTOR,
	CURRENCY_CD,
        BUSINESS_UNIT,  	!AXL 1/21/2000 7.5 Change
        SETID_DEPT,     	!AXL 1/21/2000 7.5 Change
        SETID_JOBCODE,  	!AXL 1/21/2000 7.5 Change
	SETID_LOCATION,		!AXC 08/20/2002 8.3 UPGRADE
	SETID_SALARY,		!AXC 08/20/2002 8.3 UPGRADE
        REG_REGION,     	!AXL 1/21/2000 7.5 Change
	DIRECTLY_TIPPED,	!AXL 1/21/2000 7.5 Change
	FLSA_STATUS,
	EEO_CLASS,
	FUNCTION_CD,
	TARIFF_GER,		!AXC 08/20/2002 8.3 UPGRADE
	TARIFF_AREA_GER,	!AXC 08/20/2002 8.3 UPGRADE
	PERFORM_GROUP_GER,	!AXC 08/20/2002 8.3 UPGRADE
	LABOR_TYPE_GER,		!AXC 08/20/2002 8.3 UPGRADE
	SPK_COMM_ID_GER,	!AXC 08/20/2002 8.3 UPGRADE
!	WRKS_CNCL_MEM_GER,	!AXC 08/20/2002 8.3 UPGRADE						!AMS 09/18/2007
	HOURLY_RT_FRA,
	ACCDNT_CD_FRA,
	VALUE_1_FRA,		!AXC 08/20/2002 8.3 UPGRADE
	VALUE_2_FRA,		!AXC 08/20/2002 8.3 UPGRADE
	VALUE_3_FRA,		!AXC 08/20/2002 8.3 UPGRADE
	VALUE_4_FRA,		!AXC 08/20/2002 8.3 UPGRADE
	VALUE_5_FRA,		!AXC 08/20/2002 8.3 UPGRADE
	CTG_RATE,		!AXC 08/20/2002 8.3 UPGRADE
	PAID_HOURS,		!AXC 08/20/2002 8.3 UPGRADE
	PAID_FTE,		!AXC 08/20/2002 8.3 UPGRADE
	PAID_HRS_FREQUENCY,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_EFFDT,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_EFFDT_PROPOSED,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_TRANS_NBR,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_TRANS_NBR_SEQ,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_WIP_STATUS,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_STATUS_TYPE,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_NOA_CODE,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_LEG_AUTH_1,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_PAR_AUTH_D1,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_PAR_AUTH_D1_2,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_LEG_AUTH_2,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_PAR_AUTH_D2,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_PAR_AUTH_D2_2,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_PAR_NTE_DATE,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_WORK_SCHED,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_SUB_AGENCY,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_ELIG_FEHB,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_FEHB_DT,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_PAY_RATE_DETER,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_STEP,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_RTND_PAY_PLAN,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_RTND_SAL_PLAN,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_RTND_GRADE,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_RTND_STEP,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_RTND_GVT_STEP,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_PAY_BASIS,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_COMPRATE,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_LOCALITY_ADJ,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_BIWEEKLY_RT,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_DAILY_RT,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_HRLY_RT_NO_LOC,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_DLY_RT_NO_LOC,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_BW_RT_NO_LOC,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_MNLY_RT_NO_LOC,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_ANNL_RT_NO_LOC,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_XFER_FROM_AGCY,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_XFER_TO_AGCY,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_RETIRE_PLAN,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_ANN_IND,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_FEGLI,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_FEGLI_LIVING,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_LIVING_AMT,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_ANNUITY_OFFSET,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_CSRS_FROZN_SVC,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_PREV_RET_COVRG,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_FERS_COVERAGE,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_TYPE_OF_APPT,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_POI,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_POSN_OCCUPIED,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_CONT_EMPLID,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_ROUTE_NEXT,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_CHANGE_FLAG,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_TSP_UPD_IND,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_PI_UPD_IND,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_SF52_NBR,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_S113G_CEILING,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_LEO_POSITION,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_ANNUIT_COM_DT,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_BASIC_LIFE_RED,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_DED_PRORT_DT,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_FEGLI_BASC_PCT,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_FEGLI_OPT_PCT,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_FEHB_PCT,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_RETRO_FLAG,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_RETRO_DED_FLAG,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_RETRO_JOB_FLAG,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_RETRO_BSE_FLAG,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_OTH_PAY_CHG,	!AXC 08/20/2002 8.3 UPGRADE
!	GVT_DETL_POSN_NBR,	!AXC 08/20/2002 8.3 UPGRADE
!	ANNL_BEN_BASE_OVRD,	!AXC 08/20/2002 8.3 UPGRADE
!	BENEFIT_PROGRAM,	!AXC 08/20/2002 8.3 UPGRADE
!	UPDATE_PAYROLL,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_PAY_PLAN,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_PAY_FLAG,		!AXC 08/20/2002 8.3 UPGRADE
!	GVT_NID_CHANGE,		!AXC 08/20/2002 8.3 UPGRADE
	UNION_FULL_PART,	!AXC 08/20/2002 8.3 UPGRADE
	UNION_POS,		!AXC 08/20/2002 8.3 UPGRADE
	MATRICULA_NBR,		!AXC 08/20/2002 8.3 UPGRADE
	SOC_SEC_RISK_CODE,	!AXC 08/20/2002 8.3 UPGRADE
	UNION_FEE_AMOUNT,	!AXC 08/20/2002 8.3 UPGRADE
	UNION_FEE_START_DT,	!AXC 08/20/2002 8.3 UPGRADE
	UNION_FEE_END_DT,	!AXC 08/20/2002 8.3 UPGRADE
	EXEMPT_JOB_LBR,		!AXC 08/20/2002 8.3 UPGRADE
	EXEMPT_HOURS_MONTH,	!AXC 08/20/2002 8.3 UPGRADE
	WRKS_CNCL_FUNCTION,	!AXC 08/20/2002 8.3 UPGRADE
	INTERCTR_WRKS_CNCL,	!AXC 08/20/2002 8.3 UPGRADE
	CURRENCY_CD1,		!AXC 08/20/2002 8.3 UPGRADE
	PAY_UNION_FEE,		!AXC 08/20/2002 8.3 UPGRADE
	UNION_CD,		!AXC 08/20/2002 8.3 UPGRADE
	BARG_UNIT,		!AXC 08/20/2002 8.3 UPGRADE
	UNION_SENIORITY_DT,	!AXC 08/20/2002 8.3 UPGRADE
	ENTRY_DATE,		!AXC 08/20/2002 8.3 UPGRADE
	LABOR_AGREEMENT,	!AXC 08/20/2002 8.3 UPGRADE
	EMPL_CTG,		!AXC 08/20/2002 8.3 UPGRADE
	EMPL_CTG_L1,		!AXC 08/20/2002 8.3 UPGRADE
	EMPL_CTG_L2,		!AXC 08/20/2002 8.3 UPGRADE
	SETID_LBR_AGRMNT,	!AXC 08/20/2002 8.3 UPGRADE
	WPP_STOP_FLAG,																			!AMS 09/18/2007
	LABOR_FACILITY_ID,																	!AMS 09/18/2007
	LBR_FAC_ENTRY_DT,																		!AMS 09/18/2007
	LAYOFF_EXEMPT_FLAG,																	!AMS 09/18/2007
	LAYOFF_EXEMPT_RSN,																	!AMS 09/18/2007
	GP_PAYGROUP,		!AXC 08/20/2002 8.3 UPGRADE
	GP_DFLT_ELIG_GRP,	!AXC 08/20/2002 8.3 UPGRADE
	GP_ELIG_GRP,		!AXC 08/20/2002 8.3 UPGRADE
	GP_DFLT_CURRTTYP,	!AXC 08/20/2002 8.3 UPGRADE
	CUR_RT_TYPE,		!AXC 08/20/2002 8.3 UPGRADE
	GP_DFLT_EXRTDT,		!AXC 08/20/2002 8.3 UPGRADE
	GP_ASOF_DT_EXG_RT,	!AXC 08/20/2002 8.3 UPGRADE
	ADDS_TO_FTE_ACTUAL,	!AXC 08/20/2002 8.3 UPGRADE
	CLASS_INDC,		!AXC 08/20/2002 8.3 UPGRADE
	ENCUMB_OVERRIDE,	!AXC 08/20/2002 8.3 UPGRADE
	FICA_STATUS_EE,		!AXC 08/20/2002 8.3 UPGRADE
	FTE,			!AXC 08/20/2002 8.3 UPGRADE
	PRORATE_CNT_AMT,	!AXC 08/20/2002 8.3 UPGRADE
	PAY_SYSTEM_FLG,		!AXC 08/20/2002 8.3 UPGRADE
	BORDER_WALKER,		!AXC 08/20/2002 8.3 UPGRADE
	LUMP_SUM_PAY,		!AXC 08/20/2002 8.3 UPGRADE
	CONTRACT_NUM,		!AXC 08/20/2002 8.3 UPGRADE
	JOB_INDICATOR,		!AXC 08/20/2002 8.3 UPGRADE
        WRKS_CNCL_ROLE_CHE,     !GBD 10/24/2002
!	WRKS_CNCL_ID_LCL,	!AXC 08/20/2002 8.3 UPGRADE						!AMS 09/18/2007
	BENEFIT_SYSTEM,		!AXC 08/20/2002 8.3 UPGRADE
	WORK_DAY_HOURS,		!AXC 08/20/2002 8.3 UPGRADE
	HR_STATUS,																						!AMS 09/18/2007
	APPT_TYPE,																						!AMS 09/18/2007
	MAIN_APPT_NUM_JPN,																		!AMS 09/18/2007
	REPORTS_TO,		!AXC 08/20/2002 8.3 UPGRADE
	FORCE_PUBLISH,		!AXC 08/20/2002 8.3 UPGRADE
	JOB_DATA_SRC_CD,	!AXC 08/20/2002 8.3 UPGRADE
	ESTABID,
	SUPV_LVL_ID,																					!AMS 09/18/2007
	SETID_SUPV_LVL,																				!AMS 09/18/2007
	ABSENCE_SYSTEM_CD,																		!AMS 09/18/2007
	POI_TYPE,																							!AMS 09/18/2007
	HIRE_DT,																							!AMS 09/18/2007
	LAST_HIRE_DT,																					!AMS 09/18/2007
	TERMINATION_DT,																				!AMS 09/18/2007
	ASGN_START_DT,																				!AMS 09/18/2007
	LST_ASGN_START_DT,																		!AMS 09/18/2007
	ASGN_END_DT,																					!AMS 09/18/2007
	LDW_OVR,																							!AMS 09/18/2007
	LAST_DATE_WORKED,
	EXPECTED_RETURN_DT,																		!AMS 09/18/2007
	!EXPECTED_END_DT,																			!AMS 09/18/2007
	EXPECTED_END_DATE,	!GEX-MXT added for HCM 9.0 upgrade
	AUTO_END_FLG,																				!AMS 09/18/2007
	LASTUPDDTTM,																					!AMS 09/18/2007
	LASTUPDOPRID,																					!AMS 09/18/2007
	GEX_LIGHT_DUTY,
	GEX_CHANGE_RECORD,
	GEX_VOLUN_LOW_HRS,
	GEX_STUDENT_IND,
	GEX_MOON_IND,
	GEX_DEPTID_OVR,
	GEX_ACCT_CD_OVR,
	GEX_GL_EXP_OVR,
	GEX_STEWARD,
	GEX_DUES_EXEMPT,
	GEX_FINAN_CORE,
	GEX_INFLATED_HRS,
	GEX_FP_CODE,
	GEX_SEASONAL_EMP)	!AXL 5/14/2001 New job field
VALUES
        ($EMPLID,
	#EMPL_RCD_nbr,
	$WHERE_SELECT_ASOFDATE,
	#JOB_EFFSEQ,
	&J.PER_ORG,		!GEX-MXT added for HCM 9.0 upgrade
	&J.DEPTID,
	&J.JOBCODE,
	&J.POSITION_NBR,
	&J.SUPERVISOR_ID,	!GEX-MXT ADDed for HCM 9.0 Upgrade
	&J.POSITION_OVERRIDE,
	'N',
	&J.EMPL_STATUS,
	$JOB_ACTION,
	$JOB_ACTION_DT,
	$JOB_ACTION_REASON,
	&J.LOCATION,
	&J.TAX_LOCATION_CD,
	&J.JOB_ENTRY_DT,
	&J.DEPT_ENTRY_DT,
	&J.POSITION_ENTRY_DT,
	&J.SHIFT,
	&J.REG_TEMP,
	&J.FULL_PART_TIME,
	&J.COMPANY,
	&J.PAYGROUP,
        !&J.PIN_NUM,		!AXL 1/21/2000 7.5 Change ! AXC REMOVE PIN NUM 8.3 UPGRADE
  !      &J.PAY_BASIS_NUM,	!AXL 1/21/2000 7.5 Change
	&J.BAS_GROUP_ID,
	&J.ELIG_CONFIG1,
	&J.ELIG_CONFIG2,
	&J.ELIG_CONFIG3,
	&J.ELIG_CONFIG4,
	&J.ELIG_CONFIG5,
	&J.ELIG_CONFIG6,
	&J.ELIG_CONFIG7,
	&J.ELIG_CONFIG8,
	&J.ELIG_CONFIG9,
	&J.BEN_STATUS,
        $bas_action,		!AXL 1/21/2000 7.5 Change
	&J.COBRA_ACTION,
	&J.EMPL_TYPE,
	&J.HOLIDAY_SCHEDULE,
	&J.STD_HOURS,
        &J.STD_HRS_FREQUENCY,   !GBD 10/24/2002
	&J.OFFICER_CD,
	&J.EMPL_CLASS,
	&J.SAL_ADMIN_PLAN,
	&J.GRADE,
	&J.GRADE_ENTRY_DT,
	&J.STEP,
	&J.STEP_ENTRY_DT,
	&J.GL_PAY_TYPE,
	&J.ACCT_CD,
	&J.EARNS_DIST_TYPE,
	!&J.SALARY_MATRIX_CD,
	!&J.RATING_SCALE,
	!&J.REVIEW_RATING,
	!&J.REVIEW_DT,
	&J.COMP_FREQUENCY,
	&GEX.GEX_NEW_COMPRATE,
	#JOB_CHANGE_AMT,
	#JOB_CHANGE_PCT,
	#JOB_ANNUAL_RT,
	#JOB_MONTHLY_RT,
	#JOB_DAILY_RT,		! NEW DAILY RATE ADDED. 8.3 UPGRADE
	#JOB_HOURLY_RT,
	&J.ANNL_BENEF_BASE_RT,
	&J.SHIFT_RT,
	&J.SHIFT_FACTOR,
	&J.CURRENCY_CD,
	&J.BUSINESS_UNIT,  	!AXL 1/21/2000 7.5 Change
	&J.SETID_DEPT,     	!AXL 1/21/2000 7.5 Change
	&J.SETID_JOBCODE,  	!AXL 1/21/2000 7.5 Change
	&J.SETID_LOCATION,	!AXC 08/20/2002	8.3 UPGRADE
	&J.SETID_SALARY,	!AXC 08/20/2002	8.3 UPGRADE
	&J.REG_REGION,     	!AXL 1/21/2000 7.5 Change
	&J.DIRECTLY_TIPPED,	!AXL 1/21/2000 7.5 Change
	&J.FLSA_STATUS,
	&J.EEO_CLASS,
	&J.FUNCTION_CD,
	&J.TARIFF_GER,		!AXC 08/20/2002 8.3 UPGRADE
	&J.TARIFF_AREA_GER,	!AXC 08/20/2002 8.3 UPGRADE
	&J.PERFORM_GROUP_GER,	!AXC 08/20/2002 8.3 UPGRADE
	&J.LABOR_TYPE_GER,	!AXC 08/20/2002 8.3 UPGRADE
	&J.SPK_COMM_ID_GER,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.WRKS_CNCL_MEM_GER,	!AXC 08/20/2002 8.3 UPGRADE
	&J.HOURLY_RT_FRA,
	&J.ACCDNT_CD_FRA,
	&J.VALUE_1_FRA,		!AXC 08/20/2002 8.3 UPGRADE
	&J.VALUE_2_FRA,		!AXC 08/20/2002 8.3 UPGRADE
	&J.VALUE_3_FRA,		!AXC 08/20/2002 8.3 UPGRADE
	&J.VALUE_4_FRA,		!AXC 08/20/2002 8.3 UPGRADE
	&J.VALUE_5_FRA,		!AXC 08/20/2002 8.3 UPGRADE
	&J.CTG_RATE,		!AXC 08/20/2002 8.3 UPGRADE
	&J.PAID_HOURS,		!AXC 08/20/2002 8.3 UPGRADE
	&J.PAID_FTE,		!AXC 08/20/2002 8.3 UPGRADE
	&J.PAID_HRS_FREQUENCY,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_EFFDT,		!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_EFFDT_PROPOSED,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_TRANS_NBR,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_TRANS_NBR_SEQ,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_WIP_STATUS,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_STATUS_TYPE,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_NOA_CODE,		!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_LEG_AUTH_1,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_PAR_AUTH_D1,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_PAR_AUTH_D1_2,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_LEG_AUTH_2,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_PAR_AUTH_D2,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_PAR_AUTH_D2_2,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_PAR_NTE_DATE,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_WORK_SCHED,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_SUB_AGENCY,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_ELIG_FEHB,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_FEHB_DT,		!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_PAY_RATE_DETER,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_STEP,		!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_RTND_PAY_PLAN,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_RTND_SAL_PLAN,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_RTND_GRADE,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_RTND_STEP,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_RTND_GVT_STEP,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_PAY_BASIS,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_COMPRATE,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_LOCALITY_ADJ,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_BIWEEKLY_RT,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_DAILY_RT,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_HRLY_RT_NO_LOC,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_DLY_RT_NO_LOC,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_BW_RT_NO_LOC,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_MNLY_RT_NO_LOC,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_ANNL_RT_NO_LOC,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_XFER_FROM_AGCY,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_XFER_TO_AGCY,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_RETIRE_PLAN,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_ANN_IND,		!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_FEGLI,		!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_FEGLI_LIVING,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_LIVING_AMT,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_ANNUITY_OFFSET,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_CSRS_FROZN_SVC,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_PREV_RET_COVRG,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_FERS_COVERAGE,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_TYPE_OF_APPT,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_POI,		!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_POSN_OCCUPIED,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_CONT_EMPLID,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_ROUTE_NEXT,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_CHANGE_FLAG,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_TSP_UPD_IND,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_PI_UPD_IND,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_SF52_NBR,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_S113G_CEILING,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_LEO_POSITION,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_ANNUIT_COM_DT,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_BASIC_LIFE_RED,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_DED_PRORT_DT,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_FEGLI_BASC_PCT,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_FEGLI_OPT_PCT,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_FEHB_PCT,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_RETRO_FLAG,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_RETRO_DED_FLAG,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_RETRO_JOB_FLAG,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_RETRO_BSE_FLAG,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_OTH_PAY_CHG,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_DETL_POSN_NBR,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.ANNL_BEN_BASE_OVRD,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.BENEFIT_PROGRAM,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.UPDATE_PAYROLL,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_PAY_PLAN,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_PAY_FLAG,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.GVT_NID_CHANGE,	!AXC 08/20/2002 8.3 UPGRADE
	&J.UNION_FULL_PART,	!AXC 08/20/2002 8.3 UPGRADE
	&J.UNION_POS,		!AXC 08/20/2002 8.3 UPGRADE
	&J.MATRICULA_NBR,	!AXC 08/20/2002 8.3 UPGRADE
	&J.SOC_SEC_RISK_CODE,	!AXC 08/20/2002 8.3 UPGRADE
	&J.UNION_FEE_AMOUNT,	!AXC 08/20/2002 8.3 UPGRADE
	&J.UNION_FEE_START_DT,	!AXC 08/20/2002 8.3 UPGRADE
	&J.UNION_FEE_END_DT,	!AXC 08/20/2002 8.3 UPGRADE
	&J.EXEMPT_JOB_LBR,	!AXC 08/20/2002 8.3 UPGRADE
	&J.EXEMPT_HOURS_MONTH,	!AXC 08/20/2002 8.3 UPGRADE
	&J.WRKS_CNCL_FUNCTION,	!AXC 08/20/2002 8.3 UPGRADE
	&J.INTERCTR_WRKS_CNCL,	!AXC 08/20/2002 8.3 UPGRADE
	&J.CURRENCY_CD1,	!AXC 08/20/2002 8.3 UPGRADE
	&J.PAY_UNION_FEE,	!AXC 08/20/2002 8.3 UPGRADE
	&J.UNION_CD,		!AXC 08/20/2002 8.3 UPGRADE
	&J.BARG_UNIT,		!AXC 08/20/2002 8.3 UPGRADE
	&J.UNION_SENIORITY_DT,	!AXC 08/20/2002 8.3 UPGRADE
	&J.ENTRY_DATE,		!AXC 08/20/2002 8.3 UPGRADE
	&J.LABOR_AGREEMENT,	!AXC 08/20/2002 8.3 UPGRADE
	&J.EMPL_CTG,		!AXC 08/20/2002 8.3 UPGRADE
	&J.EMPL_CTG_L1,		!AXC 08/20/2002 8.3 UPGRADE
	&J.EMPL_CTG_L2,		!AXC 08/20/2002 8.3 UPGRADE
	&J.SETID_LBR_AGRMNT,	!AXC 08/20/2002 8.3 UPGRADE
!GEX-MXT added for HCM 9.0 Upgrade-Begin
	&J.WPP_STOP_FLAG,
	&J.LABOR_FACILITY_ID,
	&J.LBR_FAC_ENTRY_DT,
	&J.LAYOFF_EXEMPT_FLAG,
	&J.LAYOFF_EXEMPT_RSN,
!GEX-MXT added for HCM 9.0 Upgrade-End
	&J.GP_PAYGROUP,		!AXC 08/20/2002 8.3 UPGRADE
	&J.GP_DFLT_ELIG_GRP,	!AXC 08/20/2002 8.3 UPGRADE
	&J.GP_ELIG_GRP,		!AXC 08/20/2002 8.3 UPGRADE
	&J.GP_DFLT_CURRTTYP,	!AXC 08/20/2002 8.3 UPGRADE
	&J.CUR_RT_TYPE,		!AXC 08/20/2002 8.3 UPGRADE
	&J.GP_DFLT_EXRTDT,	!AXC 08/20/2002 8.3 UPGRADE
	&J.GP_ASOF_DT_EXG_RT,	!AXC 08/20/2002 8.3 UPGRADE
	&J.ADDS_TO_FTE_ACTUAL,	!AXC 08/20/2002 8.3 UPGRADE
	&J.CLASS_INDC,		!AXC 08/20/2002 8.3 UPGRADE
	&J.ENCUMB_OVERRIDE,	!AXC 08/20/2002 8.3 UPGRADE
	&J.FICA_STATUS_EE,	!AXC 08/20/2002 8.3 UPGRADE
	&J.FTE,			!AXC 08/20/2002 8.3 UPGRADE
	&J.PRORATE_CNT_AMT,	!AXC 08/20/2002 8.3 UPGRADE
	&J.PAY_SYSTEM_FLG,	!AXC 08/20/2002 8.3 UPGRADE
	&J.BORDER_WALKER,	!AXC 08/20/2002 8.3 UPGRADE
	&J.LUMP_SUM_PAY,	!AXC 08/20/2002 8.3 UPGRADE
	&J.CONTRACT_NUM,	!AXC 08/20/2002 8.3 UPGRADE
	&J.JOB_INDICATOR,	!AXC 08/20/2002 8.3 UPGRADE
        &J.WRKS_CNCL_ROLE_CHE,  !GBD 10/24/2002
	!&J.WRKS_CNCL_ID_LCL,	!AXC 08/20/2002 8.3 UPGRADE
	&J.BENEFIT_SYSTEM,	!AXC 08/20/2002 8.3 UPGRADE
	&J.WORK_DAY_HOURS,	!AXC 08/20/2002 8.3 UPGRADE
	!&J.SUPERVISOR_ID,	!AXC 08/20/2002 8.3 UPGRADE	!GEX-MXT COMMENTED for HCM 9.0 Upgrade
!GEX-MXT added for HCM 9.0 Upgrade-Begin
	&J.HR_STATUS,
	&J.APPT_TYPE,
	&J.MAIN_APPT_NUM_JPN ,
!GEX-MXT added for HCM 9.0 Upgrade-End
	&J.REPORTS_TO,		!AXC 08/20/2002 8.3 UPGRADE
	&J.FORCE_PUBLISH,	!AXC 08/20/2002 8.3 UPGRADE
	&J.JOB_DATA_SRC_CD,	!AXC 08/20/2002 8.3 UPGRADE
	&J.ESTABID,
!GEX-MXT added for HCM 9.0 Upgrade-Begin
      &J.SUPV_LVL_ID,
	&J.SETID_SUPV_LVL,
	&J.ABSENCE_SYSTEM_CD,
	&J.POI_TYPE,
	&J.HIRE_DT ,
	&J.LAST_HIRE_DT,
	&J.TERMINATION_DT ,
	&J.ASGN_START_DT,
	&J.LST_ASGN_START_DT ,
	&J.ASGN_END_DT ,
	&J.LDW_OVR,
      &J.LAST_DATE_WORKED,
	&J.EXPECTED_RETURN_DT,
	&J.EXPECTED_END_DATE,
	&J.AUTO_END_FLG ,
	&J.LASTUPDDTTM ,
	&J.LASTUPDOPRID ,
!GEX-MXT added for HCM 9.0 Upgrade-End
	&J.GEX_LIGHT_DUTY,
	'Y',
	&J.GEX_VOLUN_LOW_HRS,
	&J.GEX_STUDENT_IND,
	&J.GEX_MOON_IND,
	&J.GEX_DEPTID_OVR,
	&J.GEX_ACCT_CD_OVR,
	&J.GEX_GL_EXP_OVR,
	&J.GEX_STEWARD,
	&J.GEX_DUES_EXEMPT,
	&J.GEX_FINAN_CORE,
	&J.GEX_INFLATED_HRS,
	&J.GEX_FP_CODE,
	&J.GEX_SEASONAL_EMP)	!AXL 5/14/2001 New job field

end-sql

    If #sql-status = 0
      let #job_inserts = #job_inserts + #sql-count
    else
      Show 'Insert failed - ' $EMPLID
      let #invalid_insert = #invalid_insert + 1
    End-if

end-procedure

!AXC upgrade 8.3. Need to insert JOB_JR record whenever there is an insert
!into Job.

!***********************************************************************
! Procedure: PROC-JOB-JUNIOR                                           *
! Descr:     Reads the PS_JOB_JUNIOR rows associated with a PS_JOB row *
!            Inserts rows into PS_JOB_JUNIOR for new PS_JOB record.    *
!                                                                      *
! Called by: PROCESS-EMPS                                              *
!***********************************************************************
begin-procedure Proc-Job-Junior

begin-SELECT
JJR.EMPLID
JJR.EMPL_RCD
JJR.EFFDT
JJR.EFFSEQ
JJR.LASTUPDDTTM
JJR.LASTUPDOPRID
JJR.TAXCODE_UK
JJR.TAX_BASIS_UK
JJR.WORKER_TYPE_MEX
JJR.REDUCED_WEEK_MEX
JJR.LOCATED_CD_MEX
JJR.SALARY_TYPE_MEX
JJR.IMS_TERM_DT_MEX
!JJR.CASUAL_IND
!JJR.SALARY_PACKAGED
!JJR.PAYROLL_STATE_AUS
!JJR.CLASSN_CURRENT_AUS
!JJR.WORK_SECTOR_AUS
!JJR.FUNCTION_AUS
!JJR.ANN_CNTACT_HRS_AUS
!JJR.TEACH_WEEKS_AUS
!JJR.CASUAL_TYPE_AUS
!JJR.TERM_TYPE_AUS
!JJR.TERM_LTD_AUS
JJR.BALANCE_GRP_NUM
JJR.FP_ACTION_2
JJR.CTG_RATE
JJR.FP_LEGALSTAT_CD
JJR.FP_SCNDMT_CD
JJR.FP_SCND_TYP
JJR.FP_CIVIL_PENSION
JJR.FP_SOURCE_ORG
JJR.FP_RECEP_ORG
JJR.FP_RETURN_CD
JJR.FP_PR_LEGSTA
JJR.FP_FOREND_DT
JJR.FP_END_DT
JJR.FP_CAREFRZPCT
JJR.FP_HIR_DOS_SIT
JJR.FP_PT_PCT_DET
JJR.FP_TITLE_NUM
JJR.FP_DURATION_PCT
JJR.FP_RATING_PRS_FLG
JJR.FP_BUDGET_NBR
JJR.FP_HDCNT_NBR
JJR.FP_POTENT_NBR
JJR.FP_RANK_CD
JJR.FP_STEP_CD
JJR.FP_RK_ENT_DT
JJR.FP_CORPS_CD
JJR.FP_CHG_COR_DT
JJR.FP_CATG_FP
JJR.FP_CATG_LEVEL
JJR.FP_RK_TRIALPD
JJR.FP_STEP_END_DT
JJR.FP_FOR_PROM_DT
JJR.FP_NOMINATION_DT
JJR.FP_TRAINEE
JJR.FP_TRNE_POSN
JJR.FP_RK_PD_END_DT
JJR.FP_SANCTION
JJR.FP_DOWN_GRA
JJR.FP_APPL_SAL_DT
JJR.FP_CHG_IND
JJR.FP_CLD_INST
JJR.FP_SETID_RANK
JJR.FP_INSTALL_DT
JJR.FP_EQUIV_STEP
JJR.FP_STEP_CD2
JJR.FP_BUSINESS_CD
JJR.FP_APPL_DT
JJR.FP_CHG_SAL
JJR.FP_POINTYP_CD
JJR.FP_GROSS_IND
JJR.FP_INCS_IND
JJR.FP_INCS_IND2
JJR.FP_PT_PCT
JJR.FP_PT_END_DT
JJR.FP_PT_FOREND_DT
JJR.FP_COMPRATE
JJR.FP_INST_STAT
JJR.FP_RETROSPECT
JJR.FP_ROW_END_DT
JJR.LAST_UPDATE_DATE
JJR.OTHER_ID_JPN
JJR.INTCP_XFR_FLG
JJR.INTCP_XFR_START_DT
JJR.INTCP_XFR_END_DT
JJR.INTCP_BUS_UNIT
JJR.INTCP_DEPTID
JJR.INTCP_DEPTID2
JJR.INTCP_SETID_DEPT
JJR.INTCP_COMPANY
JJR.INTCP_COMPANY2
JJR.INTCP_SUPV_LVL_ID
JJR.INTCP_SUPV_LVL_ID2
 !GEX-MXT added for HCM 9.0 Upgrade-Begin
JJR.START_DATE_JPN
JJR.EXP_END_DATE_JPN
JJR.END_DATE_JPN
 !GEX-MXT added HCM 9.0 Upgrade-End
!JJR.SUPV_LVL_ID
!JJR.EXPECTED_END_DATE
!JJR.AUTO_END_FLG	!GEX-MXT added for HCM 9.0 Upgrade
JJR.DUTIES_TYPE
JJR.ASSIGNMENT_ID
JJR.TARGET_COMPRATE
JJR.CMP_DONT_ABSORB
JJR.SSN_EMPLOYER
JJR.UNITA_PROD_CD
JJR.ACTION_ITA
JJR.ACTION_REASON_ITA
JJR.SPECIAL_HIRCTG_ITA
JJR.PART_TIME_TYPE_ITA
JJR.PART_TIME_PERC_ITA
JJR.PARTTIME_ENDDT_ITA
 !GEX-MXT added for HCM 9.0 Upgrade-Begin
JJR.WORKDAYS_NLD
JJR.CONT_SAL_TYPE_BRA
JJR.CBO_CD_BRA
JJR.SEFIP_CATEGORY_BRA
JJR.UNION_CD_ALT_BRA
 !GEX-MXT added for HCM 9.0 Upgrade-End

  do Insert-New-JobJr-Rec

FROM PS_JOB_JR JJR
WHERE JJR.EMPLID    = &J.EMPLID
  AND JJR.EMPL_RCD  = &J.EMPL_RCD
  AND JJR.EFFDT     = &J.EFFDT
  AND JJR.EFFSEQ    = &J.EFFSEQ

end-SELECT

end-procedure

!***********************************************************************
! Procedure: INSERT-NEW-JOBJR-REC                                      *
! Descr:     Use insert a copy of the original JOB JR only the  one    *
!            is related to the JOB row we just inserted                *
!                                                                      *
! Called by: PROCESS-EMPS                                              *
!***********************************************************************
begin-procedure Insert-New-JobJr-Rec

 let $sql-statement = 'GEXHR056.SQR,Insert-To-Job-Jr,PS_JOB_JR'

!*** Oracle database requires {DatetimeIn-Prefix} on insert statement

begin-SQL On-Error=Sql-Diagnostic

INSERT INTO PS_JOB_JR
(EMPLID,
 EMPL_RCD,
 EFFDT,
 EFFSEQ,
 LASTUPDDTTM,
 LASTUPDOPRID,
 TAXCODE_UK,
 TAX_BASIS_UK,
 WORKER_TYPE_MEX,
 REDUCED_WEEK_MEX,
 LOCATED_CD_MEX,
 SALARY_TYPE_MEX,
 IMS_TERM_DT_MEX,
 !CASUAL_IND,			!GEX-MXT commented for HCM 9.0 Upgrade
 !SALARY_PACKAGED,		!GEX-MXT commented for HCM 9.0 Upgrade
 !PAYROLL_STATE_AUS,
 !CLASSN_CURRENT_AUS,
 !WORK_SECTOR_AUS,
 !FUNCTION_AUS,
 !ANN_CNTACT_HRS_AUS,
 !TEACH_WEEKS_AUS,
 !CASUAL_TYPE_AUS,
 !TERM_TYPE_AUS,
 !TERM_LTD_AUS,
 BALANCE_GRP_NUM,
 FP_ACTION_2,
 CTG_RATE,
 FP_LEGALSTAT_CD,
 FP_SCNDMT_CD,
 FP_SCND_TYP,
 FP_CIVIL_PENSION,
 FP_SOURCE_ORG,
 FP_RECEP_ORG,
 FP_RETURN_CD,
 FP_PR_LEGSTA,
 FP_FOREND_DT,
 FP_END_DT,
 FP_CAREFRZPCT,
 FP_HIR_DOS_SIT,
 FP_PT_PCT_DET,
 FP_TITLE_NUM,
 FP_DURATION_PCT,
 FP_RATING_PRS_FLG,
 FP_BUDGET_NBR,
 FP_HDCNT_NBR,
 FP_POTENT_NBR,
 FP_RANK_CD,
 FP_STEP_CD,
 FP_RK_ENT_DT,
 FP_CORPS_CD,
 FP_CHG_COR_DT,
 FP_CATG_FP,
 FP_CATG_LEVEL,
 FP_RK_TRIALPD,
 FP_STEP_END_DT,
 FP_FOR_PROM_DT,
 FP_NOMINATION_DT,
 FP_TRAINEE,
 FP_TRNE_POSN,
 FP_RK_PD_END_DT,
 FP_SANCTION,
 FP_DOWN_GRA,
 FP_APPL_SAL_DT,
 FP_CHG_IND,
 FP_CLD_INST,
 FP_SETID_RANK,
 FP_INSTALL_DT,
 FP_EQUIV_STEP,
 FP_STEP_CD2,
 FP_BUSINESS_CD,
 FP_APPL_DT,
 FP_CHG_SAL,
 FP_POINTYP_CD,
 FP_GROSS_IND,
 FP_INCS_IND,
 FP_INCS_IND2,
 FP_PT_PCT,
 FP_PT_END_DT,
 FP_PT_FOREND_DT,
 FP_COMPRATE,
 FP_INST_STAT,
 FP_RETROSPECT,
 FP_ROW_END_DT,
 LAST_UPDATE_DATE,
 OTHER_ID_JPN,
 INTCP_XFR_FLG,
 INTCP_XFR_START_DT,
 INTCP_XFR_END_DT,
 INTCP_BUS_UNIT,
 INTCP_DEPTID,
 INTCP_DEPTID2,
 INTCP_SETID_DEPT,
 INTCP_COMPANY,
 INTCP_COMPANY2,
 INTCP_SUPV_LVL_ID,
 INTCP_SUPV_LVL_ID2,
 !GEX-MXT added for HCM 9.0 Upgrade-Begin
 START_DATE_JPN,
 EXP_END_DATE_JPN,
 END_DATE_JPN,
!GEX-MXT added for HCM 9.0 Upgrade-End
 !SUPV_LVL_ID,			!GEX-MXT commented for HCM 9.0 Upgrade
 !EXPECTED_END_DATE,		!GEX-MXT commented for HCM 9.0 Upgrade
 !AUTO_END_FLG,			!GEX-MXT commented for HCM 9.0 Upgrade
 DUTIES_TYPE,
 ASSIGNMENT_ID,
 TARGET_COMPRATE,
 CMP_DONT_ABSORB,
 SSN_EMPLOYER,
 UNITA_PROD_CD,
 ACTION_ITA,
 ACTION_REASON_ITA,
 SPECIAL_HIRCTG_ITA,
 PART_TIME_TYPE_ITA,
 PART_TIME_PERC_ITA,
 PARTTIME_ENDDT_ITA
 !GEX-MXT added for HCM 9.0 Upgrade-Begin
 ,WORKDAYS_NLD,
 CONT_SAL_TYPE_BRA ,
 CBO_CD_BRA,
 SEFIP_CATEGORY_BRA,
 UNION_CD_ALT_BRA
!GEX-MXT added for HCM 9.0 Upgrade-End
 )
VALUES
($EMPLID,
 #EMPL_RCD_nbr,
 $WHERE_SELECT_ASOFDATE,
 #JOB_EFFSEQ,
 {DatetimeIn-Prefix}$SysDateTime{DatetimeIn-Suffix},!From Curdttim routines
 $OPRID,
 &JJR.TaxCode_UK,
 &JJR.Tax_Basis_UK,
 &JJR.WORKER_TYPE_MEX,
 &JJR.REDUCED_WEEK_MEX,
 &JJR.LOCATED_CD_MEX,
 &JJR.SALARY_TYPE_MEX,
 &JJR.IMS_TERM_DT_MEX,
 !&JJR.CASUAL_IND,
 !&JJR.SALARY_PACKAGED,
 !&JJR.PAYROLL_STATE_AUS,
 !&JJR.CLASSN_CURRENT_AUS,
 !&JJR.WORK_SECTOR_AUS,
 !&JJR.FUNCTION_AUS,
 !&JJR.ANN_CNTACT_HRS_AUS,
 !&JJR.TEACH_WEEKS_AUS,
 !&JJR.CASUAL_TYPE_AUS,
 !&JJR.TERM_TYPE_AUS,
! &JJR.TERM_LTD_AUS,
 &JJR.BALANCE_GRP_NUM,
 &JJR.FP_ACTION_2,
 &JJR.CTG_RATE,
 &JJR.FP_LEGALSTAT_CD,
 &JJR.FP_SCNDMT_CD,
 &JJR.FP_SCND_TYP,
 &JJR.FP_CIVIL_PENSION,
 &JJR.FP_SOURCE_ORG,
 &JJR.FP_RECEP_ORG,
 &JJR.FP_RETURN_CD,
 &JJR.FP_PR_LEGSTA,
 &JJR.FP_FOREND_DT,
 &JJR.FP_END_DT,
 &JJR.FP_CAREFRZPCT,
 &JJR.FP_HIR_DOS_SIT,
 &JJR.FP_PT_PCT_DET,
 &JJR.FP_TITLE_NUM,
 &JJR.FP_DURATION_PCT,
 &JJR.FP_RATING_PRS_FLG,
 &JJR.FP_BUDGET_NBR,
 &JJR.FP_HDCNT_NBR,
 &JJR.FP_POTENT_NBR,
 &JJR.FP_RANK_CD,
 &JJR.FP_STEP_CD,
 &JJR.FP_RK_ENT_DT,
 &JJR.FP_CORPS_CD,
 &JJR.FP_CHG_COR_DT,
 &JJR.FP_CATG_FP,
 &JJR.FP_CATG_LEVEL,
 &JJR.FP_RK_TRIALPD,
 &JJR.FP_STEP_END_DT,
 &JJR.FP_FOR_PROM_DT,
 &JJR.FP_NOMINATION_DT,
 &JJR.FP_TRAINEE,
 &JJR.FP_TRNE_POSN,
 &JJR.FP_RK_PD_END_DT,
 &JJR.FP_SANCTION,
 &JJR.FP_DOWN_GRA,
 &JJR.FP_APPL_SAL_DT,
 &JJR.FP_CHG_IND,
 &JJR.FP_CLD_INST,
 &JJR.FP_SETID_RANK,
 &JJR.FP_INSTALL_DT,
 &JJR.FP_EQUIV_STEP,
 &JJR.FP_STEP_CD2,
 &JJR.FP_BUSINESS_CD,
 &JJR.FP_APPL_DT,
 &JJR.FP_CHG_SAL,
 &JJR.FP_POINTYP_CD,
 &JJR.FP_GROSS_IND,
 &JJR.FP_INCS_IND,
 &JJR.FP_INCS_IND2,
 &JJR.FP_PT_PCT,
 &JJR.FP_PT_END_DT,
 &JJR.FP_PT_FOREND_DT,
 &JJR.FP_COMPRATE,
 &JJR.FP_INST_STAT,
 &JJR.FP_RETROSPECT,
 &JJR.FP_ROW_END_DT,
 &JJR.LAST_UPDATE_DATE,
 &JJR.OTHER_ID_JPN,
 &JJR.INTCP_XFR_FLG,
 &JJR.INTCP_XFR_START_DT,
 &JJR.INTCP_XFR_END_DT,
 &JJR.INTCP_BUS_UNIT,
 &JJR.INTCP_DEPTID,
 &JJR.INTCP_DEPTID2,
 &JJR.INTCP_SETID_DEPT,
 &JJR.INTCP_COMPANY,
 &JJR.INTCP_COMPANY2,
 &JJR.INTCP_SUPV_LVL_ID,
 &JJR.INTCP_SUPV_LVL_ID2,
 !GEX-MXT added for HCM 9.0 Upgrade-Begin
 &JJR.START_DATE_JPN,
 &JJR.EXP_END_DATE_JPN,
 &JJR.END_DATE_JPN,
!GEX-MXT added for HCM 9.0 Upgrade-End
 !&JJR.SUPV_LVL_ID,
 !&JJR.EXPECTED_END_DATE,
 !&JJR.AUTO_END_FLG,	!GEX-MXT added for HCM 9.0 Upgrade
 &JJR.DUTIES_TYPE,
 &JJR.ASSIGNMENT_ID,
 &JJR.TARGET_COMPRATE,
 &JJR.CMP_DONT_ABSORB,
 &JJR.SSN_EMPLOYER,
 &JJR.UNITA_PROD_CD,
 &JJR.ACTION_ITA,
 &JJR.ACTION_REASON_ITA,
 &JJR.SPECIAL_HIRCTG_ITA,
 &JJR.PART_TIME_TYPE_ITA,
 &JJR.PART_TIME_PERC_ITA,
 &JJR.PARTTIME_ENDDT_ITA
 !GEX-MXT added for HCM 9.0 Upgrade-Begin
 ,&JJR.WORKDAYS_NLD,
 &JJR.CONT_SAL_TYPE_BRA,
 &JJR.CBO_CD_BRA,
 &JJR.SEFIP_CATEGORY_BRA,
 &JJR.UNION_CD_ALT_BRA
 !GEX-MXT added for HCM 9.0 Upgrade-End
 )
end-SQL

  !ISDVMZA --  05/14/2014  -- Begin
   let $gextras_emplid   = $EMPLID
   let #gextras_empl_rcd = #EMPL_RCD_nbr
   let $gextras_effdt    = $WHERE_SELECT_ASOFDATE
   let #gextras_effseq   = #JOB_EFFSEQ
   do Insert-GEX-JOB-EXTRAS
  !ISDVMZA --  05/14/2014  -- End

end-procedure  Insert-New-JobJr-Rec

!********************************************************************
begin-procedure process-compensation-rows
!********************************************************************
let $sql-statement = 'GEXHR056.SQR,process-compensation-rows'
begin-SELECT On-Error=Sql-Diagnostic

SC.EMPLID
SC.EMPL_RCD
SC.EFFDT
SC.EFFSEQ
SC.COMP_EFFSEQ
SC.COMP_RATECD
SC.COMP_RATE_POINTS
SC.COMPRATE
SC.COMP_PCT
SC.COMP_FREQUENCY
SC.CURRENCY_CD
SC.MANUAL_SW
SC.CONVERT_COMPRT
SC.RATE_CODE_GROUP
SC.CHANGE_AMT
SC.CHANGE_PCT
SC.CHANGE_PTS
SC.FTE_INDICATOR
SC.CMP_SRC_IND

   do insert-compensation

from ps_compensation SC
where SC.emplid   = &J.EMPLID
and   SC.empl_rcd = &J.EMPL_RCD
and   SC.effdt    = &J.EFFDT
and   SC.EFFSEQ   = &J.EFFSEQ

end-SELECT

end-procedure

!********************************************************************
begin-procedure insert-compensation
!********************************************************************
  let $sql-statement = 'GEXHR056.SQR,Insert-compensation,PS_COMPENSATION'
begin-SQL On-Error=Sql-Diagnostic
Insert into ps_compensation
(EMPLID,
EMPL_RCD,
EFFDT,
EFFSEQ,
COMP_EFFSEQ,
COMP_RATECD,
COMP_RATE_POINTS,
COMPRATE,
COMP_PCT,
COMP_FREQUENCY,
CURRENCY_CD,
MANUAL_SW,
!PIN_NUM, AXC removed from record. 8.3 Upgrade
CONVERT_COMPRT,
RATE_CODE_GROUP,
CHANGE_AMT,
CHANGE_PCT,
CHANGE_PTS,
FTE_INDICATOR,
CMP_SRC_IND)
values
(&SC.EMPLID,
&SC.EMPL_RCD,
$WHERE_SELECT_ASOFDATE,
#job_effseq,
&SC.COMP_EFFSEQ,
&SC.COMP_RATECD,
&SC.COMP_RATE_POINTS,
!&SC.COMPRATE,
&GEX.GEX_NEW_COMPRATE,     ! CWB 03/25/2003
&SC.COMP_PCT,
&SC.COMP_FREQUENCY,
&SC.CURRENCY_CD,
&SC.MANUAL_SW,
&SC.CONVERT_COMPRT,
&SC.RATE_CODE_GROUP,
!&SC.CHANGE_AMT,
#JOB_CHANGE_AMT,          ! CWB 03/25/2003
!&SC.CHANGE_PCT,
#JOB_CHANGE_PCT,          ! CWB 03/25/2003
&SC.CHANGE_PTS,
&SC.FTE_INDICATOR,
&SC.CMP_SRC_IND
)

end-sql
end-procedure

!AXL 1/21/2000 7.5 Change - Begin
!********************************************************************
begin-procedure Find-Bas-Action
!********************************************************************

  let $sql-statement = 'GEXHR056.SQR,Find-Bas-Action'

BEGIN-SELECT
AC.BAS_ACTION

  let $bas_action = &AC.BAS_ACTION

!FROM PS_ACTN_REASON_TBL AC	!GEX-MXT added for HCM 9.0 Upgrade
FROM PS_ACT_RSN_TBL_NA AC	!GEX-MXT added for HCM 9.0 Upgrade
WHERE AC.ACTION        = $job_action and
      AC.ACTION_REASON = $job_action_reason and
      AC.EFFDT =
        !(SELECT MAX(A_ED.EFFDT) FROM PS_ACTN_REASON_TBL A_ED 	!GEX-MXT added for HCM 9.0 Upgrade
        (SELECT MAX(A_ED.EFFDT) FROM PS_ACT_RSN_TBL_NA A_ED	!GEX-MXT added for HCM 9.0 Upgrade
        WHERE AC.ACTION = A_ED.ACTION
          AND AC.ACTION_REASON = A_ED.ACTION_REASON
          AND A_ED.EFFDT <= $WHERE_SELECT_ASOFDATE)

END-SELECT

END-PROCEDURE
!AXL 1/21/2000 7.5 Change - End

!********************************************************************
!begin-procedure Update-Personal-Data
!********************************************************************
! AXL 1/21/2000 Procedure invalid under 7.5

!  let $sql-statement = 'GEXHR056.SQR,Update-Personal-Data'

!begin-sql On-Error=Sql-Diagnostic
!update ps_personal_data
!set bas_data_chg = 'Y'
!where emplid = $emplid

!end-sql
!end-procedure

!AXL 12/4/2003 New Procedure - Begin
!********************************************************************
begin-procedure Update-Employment
!********************************************************************
  let $sql-statement = 'GEXHR056.SQR,Update-Employment,PS_PER_ORG_ASGN'

begin-sql On-Error=Sql-Diagnostic

 !update ps_employment
update PS_PER_ORG_ASGN			! DXS, 12/31/07, last_increase_dt is now in ps_per_org_asgn (9.0)
 set last_increase_dt = $WHERE_SELECT_ASOFDATE
 where emplid   = &J.EMPLID
   and empl_rcd = &J.EMPL_RCD

end-sql
end-procedure
!AXL 12/4/2003 New Procedure - End

!***********************************************************************
Begin-Procedure Print-Curr-Rpt
!***********************************************************************

  use-report Report1
 !GEX-TLL 03/19/08 HCM 9.0 Upgrade ecimal places extended to four Begin
  !let $curr_comprate  = ltrim(edit(#comprate,'$,$$$,$$$,$$9.99'), ' ')
  !let $new_comprate   = ltrim(edit(#new_comprate,'$,$$$,$$$,$$9.99'), ' ')
  let $curr_comprate  = ltrim(edit(#comprate,'$,$$$,$$$,$$9.9999'), ' ')
  let $new_comprate   = ltrim(edit(#new_comprate,'$,$$$,$$$,$$9.9999'), ' ')
 !GEX-TLL 03/19/08 HCM 9.0 Upgrade ecimal places extended to four End
  let $curr_salary    = ltrim(edit(&j.annual_rt,'$,$$$,$$$,$$9.99'), ' ')
  let $new_salary     = ltrim(edit(#job_annual_rt,'$,$$$,$$$,$$9.99'), ' ')
  let $empl_rcd_nbr   = ltrim(edit(#Empl_Rcd_Nbr,'9'), ' ')
  let $Year4 = '1'
  do format-datetime ($WHERE_SELECT_ASOFDATE,$Job_Insert_Dt_Prt,{DEFMDY},'','')
  let $job_effseq   = ltrim(edit(#Job_Effseq,'9'), ' ')

  print $Emplid		(+1,{#col_emp}) !edit xxx-xx-xxxx !GEX_SEC_REENG 2015-06-24 Vahini Katta
  print $empl_rcd_nbr   (0,{#col_rec})
  Print &Gex.Name	(0,{#col_name})
  print &Gex.PayGroup   (0,{#col_pgp})
  print $Comp_Frequency (0,{#col_frq})
  print $curr_comprate  (0,{#col_sal})
  print $new_comprate   (0,{#col_nsal})
  print $curr_salary    (0,{#col_ann_rt})
  print $new_salary     (0,{#col_nann_rt})
  print $Job_Insert_Dt_Prt	(0,{#col_dt})
  print $Job_Effseq	(0,{#col_seq})

  add 1 to #rpt1_count

end-procedure

!********************************************************************
begin-procedure Update-Future-Rows
!********************************************************************
  let $sql-statement = 'GEXHR056.SQR,Update-Future-Rows'

begin-sql On-Error=Sql-Diagnostic
Update PS_JOB
	SET comprate 	= &GEX.GEX_NEW_COMPRATE,
	change_pct 	= 0.000000,
	change_amt 	= 0.000000,
	annual_rt 	= #JOB_ANNUAL_RT,
	monthly_rt 	= #JOB_MONTHLY_RT,
	DAILY_RT	= #JOB_DAILY_RT,	! AXC NEW DAILY RATE ADDED. 8.3 UPGRADE
	hourly_rt 	= #JOB_HOURLY_RT
 Where emplid = $emplid
       and empl_rcd 	= #EMPL_RCD_nbr
       and effdt 	> $WHERE_SELECT_ASOFDATE
End-SQL
         If #sql-status = 0
            Let #update_count = #update_count + #sql-count
         else
             Show 'Record did not update - ' $EMPLID
             let #invalid_updts = #invalid_updts + 1
         End-if

!AXL 12/4/2003 Add code for PS_COMPENSATION - Begin
begin-sql On-Error=Sql-Diagnostic
Update PS_COMPENSATION
	SET COMPRATE 	= &GEX.GEX_NEW_COMPRATE,
	CONVERT_COMPRT	= &GEX.GEX_NEW_COMPRATE
 Where emplid = $emplid
       and empl_rcd 	= #EMPL_RCD_nbr
       and effdt 	> $WHERE_SELECT_ASOFDATE
End-SQL
!AXL 12/4/2003 Add code for PS_COMPENSATION - End

end-procedure

!*********************************************************************
begin-procedure Process-Future-Rpt
!*********************************************************************
  let $sql-statement = 'GEXHR056.SQR,Process-Future-Rpt'

begin-select On-Error=Sql-Diagnostic
FUTR.EMPLID
FUTR.EMPL_RCD
FUTR.EFFDT
FUTR.EFFSEQ
FUTR.COMPANY
FUTR.PAYGROUP
FUTR.DEPTID
FUTR.COMP_FREQUENCY
FUTR.COMPRATE
PD.NAME

  do Print-Future-Rpt

FROM PS_JOB FUTR, PS_PERSONAL_DATA PD
WHERE FUTR.EMPLID    = $EMPLID
AND   FUTR.EMPL_RCD = #EMPL_RCD_NBR
AND   FUTR.EMPLID    = PD.EMPLID
AND   FUTR.EFFDT > $WHERE_SELECT_ASOFDATE
end-select
end-procedure

!***********************************************************************
Begin-Procedure Print-Future-Rpt
!***********************************************************************

  use-report Report2

  let $futr_salary  = ltrim(edit(&gex.gex_new_comprate,'$,$$$,$$$,$$9.99'), ' ')
  let $empl_rcd_nbr = ltrim(edit(&Futr.Empl_Rcd,'9'), ' ')

  print $Emplid			(+1,{#col_emp}) edit xxx-xx-xxxx
  print $empl_rcd_nbr	 	(0,{#col_rec})
  Print &Pd.Name		(0,{#col_name})
  print &Futr.PayGroup 		(0,{#col_pgp})
  print &Futr.Comp_Frequency 	(0,{#col_frq})
  print $futr_salary	   	(0,{#col_sal})
  print &Futr.Effdt		(0,{#col_nsal})
  print &Futr.Effseq		(0,{#col_ann_rt})

  add 1 to #rpt2_count

end-procedure

!*********************************************************************
begin-procedure Before-Deptid
!*********************************************************************

  if $first_rec = 'Y'
    let $first_rec ='N'
  else
     use-report Report1   ! Lis
     new-page

     if #rpt2_count > 0
        use-report Report2   ! l01
        new-page
        let #rpt2_count = 0
     end-if

     if #rpt3_count > 0
         use-report Report3   ! l02
         new-page
         let #rpt3_count = 0
     end-if
  end-if

end-procedure

!***********************************************************************
Begin-Procedure Deptid-Totals
!***********************************************************************

  use-report Report1

  let $old_annual_rt_tot  = ltrim(edit(#old_annual_rt_tot,'$,$$$,$$$,$$9.99'), ' ')
  let $new_annual_rt_tot  = ltrim(edit(#new_annual_rt_tot,'$,$$$,$$$,$$9.99'), ' ')

  Print 'Total Employees'		(+2,20)
  Print #deptid_count		        (,35)  Edit 999,999
  Print $old_annual_rt_tot		(0,{#col_ann_rt})
  Print $new_annual_rt_tot	       	(0,{#col_nann_rt})

  add #deptid_count      to #total_count
  add #old_annual_rt_tot to #old_annual_rt_gr_tot
  add #new_annual_rt_tot to #new_annual_rt_gr_tot

  Let #deptid_count = 0
  Let #new_annual_rt_tot = 0
  Let #old_annual_rt_tot = 0

End-Procedure

!***********************************************************************
Begin-Procedure Print-Error-Log
!***********************************************************************

  use-report Report3

  let $empl_rcd_nbr = ltrim(edit(#EMPL_RCD_nbr,'9'), ' ')

  print $Emplid		(+1,{#col_emp}) !edit xxx-xx-xxxx PITA for edit/copy
  print $empl_rcd_nbr	(0,{#col_rec})
  print &gex.Name	(0,{#col_name})
  print $Error_Rsn      (0,{#col_pgp})
  print $Error_Field    (0,{#col_nann_rt})
  print $Error_Value    (0,{#col_field})	!AXL 09/16/2005

  add 1 to #rpt3_count

end-procedure

!*********************************************************************
begin-procedure Sql-Diagnostic
!*********************************************************************
  display $sqr-program noline
  display ': ' noline
  display $ReportID noline
  display ' - SQL Statement = '
  display $SQL-STATEMENT
  display 'SQL Status =' noline
  display #sql-status 99999 noline
  display ' ' noline
  display 'SQL Error  = ' noline
  display $sql-error
end-procedure

!***********************************************************************
Begin-Procedure EOJ
!***********************************************************************

  if #record_count = 0
    use-report Report1
    print 'No Data Selected This Run'   (25,) Center
  end-if

  if $gex_process_optn = 'E'
   let $Job_inserts     = ltrim(edit(#job_inserts,'999,999'), ' ')
   let $invalid_inserts = ltrim(edit(#invalid_insert,'999,999'), ' ')
   let $Job_updates     = ltrim(edit(#update_count,'999,999'), ' ')
   let $invalid_updates = ltrim(edit(#invalid_updts,'999,999'), ' ')

   show 'SUMMARY INFORMATION'
   show ' '
   show '# job rows inserted successfully: 	' $job_inserts
   show '# employees with insert errors: 	' $invalid_inserts
   show ' '
   show '# future job rows updated successfully: ' $job_updates
   show '# future job row update errors:         ' $invalid_updates
  end-if

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'

  do Reset

End-Procedure

#Include 'askaod.sqc'    !Ask for As-Of-Date parameter
#include 'getcodta.sqc'  !Get-Company-Data
#include 'getdptnm.sqc'  !Get-Department-Name
#include 'gexxx902.sqc'  !Get deptid multiple row table
#Include 'gexxx921.sqc'  !Get hr single row run control
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'reset.sqc'     !Reset Printer procedure
#Include 'stdapi.sqc'    !Update Process API
#include 'gexjobext.sqc' !GEX-PY120027 Kundan Yeedibilli