!***********************************************************************
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE	       *	
!***********************************************************************
! ********   CWB       06/01/2001     INITIAL CREATION                 *
!                                     Cloned from GEXBNBAR             *
!                                                                      *
!            PSR       09/17/2002     New column PROC_ERR086 added to  *
!                                     PS_PAY_CALC_RUNCTL V8.3 Upgrade  * 
! This sqr inserts a row to 'PS_PAY_CALC_RUNCTL' so that PSPPYRUN can  *
! run in the PH7_PY_ALL_CALC_BOX in Autosys on Sundays.                *
! After COBOL SQL is run the run control information is cleared from   *
! the panel. This SQR will populate the run control with values for    * 
! the 'A' calc.                                                        *        
!            SXD       08/08/2007     No Changes                       *           
!                                     sqr from 8.3 is saved in 9.0     *   
!                                     with no changes                  *      
!                                                                      *                                             
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 


!*********************************************************************
begin-report
!*********************************************************************
#debug9 show 'begin-report' 

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  do stdapi-init

  let $reportdate_mm = substr($reportdate,1,2)
  let $reportdate_dd = substr($reportdate,4,2)
  let $reportdate_yy = substr($reportdate,7,2)
  do MakeYear4Digits ($reportdate_yy)

  let $reportdate_ccyyyy = $reportdate_mm||'/'||$reportdate_dd||'/'||$reportdate_yy

  do format-datetime($reportdate_ccyyyy,$reportdate_ccyy,{DEFMDY},'','NATIVE') 
  show '$reportdate_ccyy ' $reportdate_ccyy
  do Get-Run-Id
  do check-if-row-exists
  do stdapi-term
  do Reset

end-report

!*********************************************************************
begin-procedure Get-Run-Id 
!*********************************************************************
 let $Found = 'N'
begin-select on-error=P900-SQL-Error-Found('get-run-id') 

C1.RUN_ID
C1.PAY_END_DT 

  move 'Y' to $Found
  move &C1.RUN_ID to $run_id
  move &C1.PAY_END_DT to $pay_end_dt

FROM PS_PAY_CALENDAR C1
WHERE C1.PAY_SHEETS_RUN = 'Y'
  !AND C1.PAY_CONFIRM_RUN = 'Y'                                         !SXD PY177 08/13/2007 MOdified for test
  AND C1.PAY_CONFIRM_RUN = 'N' 
  AND C1.PAY_OFF_CYCLE = 'N'
  AND C1.PAYGROUP = 'EXE'
  AND C1.PAY_END_DT = (SELECT MAX(PAY_END_DT)
                         FROM PS_PAY_CALENDAR
                        WHERE PAY_SHEETS_RUN = 'Y'
                           !AND C1.PAY_CONFIRM_RUN = 'Y'                !SXD PY177 08/13/2007 MOdified for test
                           AND PAY_CONFIRM_RUN = 'N' 
                          AND PAY_OFF_CYCLE = 'N'
                          AND PAYGROUP = 'EXE'
                          !AND PAY_END_DT <= sysdate)                  !SXD PY177 08/13/2007
                           AND PAY_END_DT <= $AsOfToday)


end-select

  if $Found = 'N'
    show  'Error --  Pay Calendar not found or not setup for the Run ID.'
    print 'Error --  Pay Calendar not found or not setup for the Run ID.' (+1,1,60)
  else
    show 'Processing for Pay End Date: ' $pay_end_dt
    show 'Run ID: ' $run_id
  end-if
end-procedure

!******************************************************************************************
!Checks PS_PAY_CALC_RUNCTL if row exits for OPRID = "HRBATCH and run_cntl_id = psppyrun_a *
!******************************************************************************************
!*********************************************************************
begin-procedure check-if-row-exists
!*********************************************************************

#debug9 show 'check-if-row-exists'

 move 'N' to $rowfound

begin-SELECT on-error=P900-sql-error-found('check-if-row-exists')

A.OPRID
A.RUN_CNTL_ID
A.RUN_ID,                 
A.PROCESS_ON_OFF,         
A.PRELIMINARY_CALC,
A.COMPANY,                
A.PAYGROUP,               
A.PAY_END_DT,             
A.OFF_CYCLE,              
A.PAGE_NUM,                  
A.PAGE_NUM_THRU,             
A.CALC_SELECT,            
A.XFER_CALC_ERRS         

  move 'Y' to $rowFound
  show 'row found ' $rowfound
 
FROM 

    PS_PAY_CALC_RUNCTL A

WHERE    A.OPRID = 'HRBATCH' 
 AND     A.RUN_CNTL_ID = 'psppyrun_a'
   
end-SELECT

 if $rowFound = 'Y'
    do update-row
 else
    do insert-row
 end-if 

end-procedure

!*************************************************************************
!Update PS_PAY_CALC_RUNCTL table with run control for PSPPYRUN           *
!*************************************************************************
begin-procedure update-row
 
show 'inside update row '
begin-sql on-error=P900-SQL-Error-Found('update-row')
UPDATE PS_PAY_CALC_RUNCTL 
	SET OPRID	  = 'HRBATCH',                  
	RUN_CNTL_ID	  = 'psppyrun_a',            
	RUN_ID		  = $run_id,                 
	PROCESS_ON_OFF    = 'O',         
	PRELIMINARY_CALC  = 'Y', 
	COMPANY		  = ' ',                
	PAYGROUP          = ' ',               
	PAY_END_DT	  = '',             
	OFF_CYCLE	  = 'N' ,              
	PAGE_NUM	 	  = 0,                  
	PAGE_NUM_THRU	  = 0,             
	CALC_SELECT	  = 'A',            
	XFER_CALC_ERRS    = 'N',
       !PSR 09/17/2002 - Begin
        PROC_ERR086       = 'Y'
       !PSR 09/17/2002 - End
WHERE OPRID = 'HRBATCH'
  AND RUN_CNTL_ID = 'psppyrun_a'

end-sql

show 'successfully updated '
end-procedure

!*************************************************************************
!Inserts into the PS_PAY_CALC_RUNCTL table with run control for PSPPYRUN *
!*************************************************************************

begin-procedure insert-row

show 'inside insert row '

begin-sql on-error=P900-SQL-Error-Found('insert-row') 

insert into PS_PAY_CALC_RUNCTL
(OPRID,                  
RUN_CNTL_ID,            
RUN_ID,                 
PROCESS_ON_OFF,         
PRELIMINARY_CALC,
COMPANY,                
PAYGROUP,               
PAY_END_DT,             
OFF_CYCLE,              
PAGE_NUM,                  
PAGE_NUM_THRU,             
CALC_SELECT,            
XFER_CALC_ERRS,
!PSR 09/17/2002 Begin
PROC_ERR086)         
!PSR 09/17/2002 End
VALUES
('HRBATCH',
'psppyrun_a',
$run_id,
'O',
'Y',
' ',
' ',
'',
'N',
 0,
 0,
'A',
'N',
!PSR 09/17/2002 Begin
'Y')         
!PSR 09/17/2002 End
end-sql

show 'successfully inserted row '
end-procedure

!*********************************************************************
!Displays the error messages and stops execution
!*********************************************************************
 
begin-procedure P900-SQL-Error-Found($Proc_Name) 
  
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 

  STOP

end-procedure

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
