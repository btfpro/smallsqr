!**************************************************************************************************
! GEXPY223 : 		Creation of GEX_VACATION_HR record                     	                          *
!**************************************************************************************************
!                                                                                                 *
!               	Confidentiality Information:                                                    *
!                                                                                                 *
! 	This module is the confidential and proprietary information of                                *
! 	Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted                          *
! 	in any form, by any means, in whole or in part, nor is it to be used                          *
! 	for any purpose other than that for which it is expressly provided                            *
! 	without the written permission of Giant Eagle.                                                *
!                                                                                                 *
! 	Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved                                  *
!                                                                                                 *
!**************************************************************************************************
!                                                                                                 *        
! GEXPY223 :    	Creation of Vacation Hours for reporting using GEX_VACATION_HR                  *
!                                                                                                 *        
! Narrative: This program reads the run control to determine Earn Code for determining vacation   *			              !              hours for reporting to Store Personnel.                                            *
!                                                                                                 *
!                                                                                                 *  
! SQL Tables:           PS_JOB                                                                    *
!                       PS_ADDL_PAY_DATA                                                          *
!                       PS_EARNINGS_BAL                                                           *
!                       PS_GEX_RC_PREVHR                                                          *
!                       PS_EARNINGS_BAL                                                           *
!                       PS_HEALTH_BENEFIT                                                         *
!                       PS_GEX_RC_VACHR                                                           *
!                       PS_GEX_VACATION_HR                                                        *
!                       PS_GEX_VAC_HR_HST                                                         *
!                                                   	                                              *
! Written by:           Randy Kepner                                                              *       
!                                                                                                 *
! Normally Run:         Weekly                                                                    *
!                                                                                                 *
!ISDVDZK Added the code as per SCT 13856152 
!ISDVRKK Correction to Remaining Hours -- ITG #87132 
!ISDVNPK Correction to PT logic to calculate based on 513 if 515 not exists -- ITG #88465 
!**************************************************************************************************
#include 'setenv.sqc' !Set environment

Begin-Report
#debug9 Show 'Begin-Report'

  Do P100-Initialization
  do Select-gex_vacation_hr
  do delete-prior-entries
  Do P200-Main-Process
  Do Stdapi-Term             !stdapi.sqc
  
End-Report
!****************************************************************************
Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Let $AsOfDate = $AsOfToday
  Do Stdapi-Init             !stdapi.sqc
  
  Do P110-Process-Scheduler-Run-Controls
  
End-Procedure P100-Initialization
!****************************************************************************
Begin-Procedure P110-Process-Scheduler-Run-Controls
#debug9 Show 'P110-Process-Scheduler-Run-Controls'

  Let $GEXXX924_ERNCD_Alias = 'APD.ERNCD'
  Do GEXXX924-Select-ERNCD-Parameters 
  #debug8 show '$GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA=' $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA
  show '$GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA=' $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA
  
  Let $GEXXX903_Emp_Stat_Alias = 'j.empl_status'
  Do GEXXX903-Select-Emp-Stat-Parameters
  #debug8 Show '$GEXXX903_Include_Emp_Stat_Display_Criteria = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Display_Criteria = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  
  Do GEXXX922-Select-Parameters

  Let $WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.AsOfDate
 
  If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
    Let $WHERE_SELECT_ASOFDATE = $asoftoday
    Let #Current_Year  = To_Number(Substr($AsOfDate,8,4))
    Let #Current_Year  =#Current_Year 
  else
    Let #Current_Year  = To_Number(Substr($GEX_RC_PAY.AsOfDate,8,4))
    Let #Current_Year  =#Current_Year 
  End-If
  
  !ISDVDZK Added the code as per SCT 13856152 
  
  let $CURR_YEAR = to_char(floor(#Current_Year))
  let $start_date = '01-JAN-' || $CURR_YEAR


  #debug8 show '$WHERE_SELECT_ASOFDATE ' $WHERE_SELECT_ASOFDATE
  show '$WHERE_SELECT_ASOFDATE ' $WHERE_SELECT_ASOFDATE


End-Procedure P110-Process-Scheduler-Run-Controls  
!*******************************************************************************************
Begin-Procedure P200-Main-Process
#debug9 show 'P200-Main-Process'

BEGIN-SELECT
J.DEPTID
J.EMPLID
J.EMPL_RCD
J.UNION_CD
J.full_part_time

	Let $DEPTID  = Ltrim(RTrim(&J.DEPTID,' '),' ')
	Let $Emplid  = Ltrim(RTrim(&J.EMPLID,' '),' ')
	Let $EMPL_RCD  = &J.EMPL_RCD
	let $FULL_PART_TIME = &J.full_part_time
	
	Let $Union_Cd = LTrim(RTrim(&J.UNION_CD,' '),' ')
	
       !ISDVDZK Added the code as per SCT 13856152 
	If $FULL_PART_TIME ='F'
	do get-addl-pay_513
	else
	IF $FULL_PART_TIME ='P'
	do get-addl-pay_515
	end-if
	end-if
	

FROM PS_JOB J
WHERE  J.EFFDT = (SELECT MAX(J_ED.EFFDT) FROM PS_JOB J_ED
		 WHERE J_ED.EMPLID = J.EMPLID
		 AND J_ED.EMPL_RCD = J.EMPL_RCD
		 AND J_ED.EFFDT <= $WHERE_SELECT_ASOFDATE)
AND J.EFFSEQ = (SELECT MAX(J_ES.EFFSEQ) FROM PS_JOB J_ES
		WHERE J_ES.EMPLID = J.EMPLID
		AND J_ES.EMPL_RCD = J.EMPL_RCD
		AND J_ES.EFFDT = J.EFFDT)
And   [$GEXXX903_Include_Emp_Stat_Criteria]	
order by J.DEPTID
END-SELECT
         
End-Procedure P200-Main-Process
!**************************************************************************** 
!**************************************************************************** 
begin-procedure Insert-gex_vacation_hr
#debug9 show 'Insert-gex_vacation_hr'
#debug8 show 'Insert-gex_vacation_hr $emplid: '$emplid
 show 'Insert-gex_vacation_hr $emplid: '$emplid

if $union_cd = ''
   let $union_cd = ' '
end-if

Let #VAC_gex_entitle_hours = #HOURS_ENTITLED
Let #VAC_gex_taken_hours   = #HOURS_TAKEN
Let #VAC_gex_remain_hours  = #HOURS_REMAINING
Let #VAC_gex_pers_hours    = #PERS_HOURS
Let #VAC_gex_prev_hours    = #PREV_HOURS
Let #VAC_gex_buysell_hours = #BUYSELL_HOURS
 
begin-sql
 
insert into ps_gex_vacation_hr
       (emplid,
        empl_rcd,
        deptid,
        union_cd,
        gex_entitle_hours,
        gex_taken_hours,
        gex_remain_hours,
        gex_pers_hours,
        gex_prev_hours,
        gex_buysell_hours)
values ($emplid,                             !   EMPLID
        $empl_rcd,                           !   EMPL_RCD
        $deptid,                             !   DEPTID
        $union_cd,                           !   UNION_CD
        #VAC_gex_entitle_hours,              !   GEX_ENTITLE_HOURS
        #VAC_gex_taken_hours,                !   GEX_TAKEN_HOURS
        #VAC_gex_remain_hours,               !   GEX_REMAIN_HOURS
        #VAC_gex_pers_hours,                 !   GEX_PERS_HOURS
        #VAC_gex_prev_hours,                 !   GEX_PREV_HOURS
        #VAC_gex_buysell_hours);             !   GEX_BUYSELL_HOURS
 
end-sql
 
end-procedure
!**********************************************************************
begin-procedure delete-prior-entries
!**********************************************************************
#debug9 show 'delete-prior-entries'

begin-sql
delete from sysadm.PS_GEX_VACATION_HR 
end-sql

end-procedure

  !ISDVDZK Added the code as per SCT 13856152 
!*********************************************************************
!This procedure gets addl pay data
!*********************************************************************
begin-procedure get-addl-pay_515
#debug9 show 'get-addl-pay'
#debug8 show 'get-addl-pay emplid:'$Emplid
show 'get-addl-pay emplid:'$Emplid

Let $FOUND-ADDL_PAY = 'N'

BEGIN-SELECT

APD.ERNCD
APD.OTH_PAY
APD.GOAL_AMT
APD.GOAL_BAL
APD.OTH_HRS

  Let $FOUND-ADDL_PAY = 'Y'
	Let $Erncd = LTrim(RTrim(&APD.ERNCD,' '),' ') 

  let #HOURS_ENTITLED = 0
  let #HOURS_TAKEN = 0
  let #HOURS_REMAINING = 0
  Let #PERS_HOURS    = 0
  Let #PREV_HOURS    = 0
  Let #BUYSELL_HOURS = 0
	
  IF &APD.ERNCD='515'
!    and $FULL_PART_TIME ='P'             ! --ITG #87132
	
    If &APD.OTH_PAY <> 0 And
      &APD.GOAL_AMT <> 0 
       let #HOURS_ENTITLED = (((&APD.GOAL_AMT/&APD.OTH_PAY)) * &APD.OTH_HRS)
       do Get-Hrs-YTD
       let #HOURS_REMAINING = #HOURS_ENTITLED - #HOURS_TAKEN
    end-if
    let $ERNCD = '505'
    do Get-Hrs-YTD
	  do process-519-erncd

	  If #PREV_HOURS <> 0                        
       let #HOURS_REMAINING = #HOURS_ENTITLED - (#HOURS_TAKEN + #PREV_HOURS)         ! --ITG #87132
    end-if

	  do process-524-erncd
	  do Insert-gex_vacation_hr
  end-if	
	
  IF &APD.ERNCD='513'
     and $FULL_PART_TIME ='F'   ! --ITG #87132 
	   If &APD.OTH_HRS <> 0
       let #HOURS_ENTITLED = &APD.OTH_HRS
       do Get-Hrs-YTD
     end-if
     let $ERNCD = '505'
     do Get-Hrs-YTD
	   do process-519-erncd
	   If #PREV_HOURS <> 0                        
       let #HOURS_REMAINING = #HOURS_ENTITLED - (#HOURS_TAKEN + #PREV_HOURS)         ! --ITG #87132
     else
       let #HOURS_REMAINING = #HOURS_ENTITLED - #HOURS_TAKEN
     end-if
	   do process-524-erncd
	   do Insert-gex_vacation_hr
	end-if
 	 
FROM PS_ADDL_PAY_DATA APD 
WHERE APD.EMPLID = $Emplid
AND APD.EMPL_RCD = $Empl_rcd
AND APD.EFFDT = (SELECT MAX(APD_ED.EFFDT) FROM PS_ADDL_PAY_DATA APD_ED
		  WHERE APD_ED.EMPLID = APD.EMPLID
		  AND APD_ED.EMPL_RCD = APD.EMPL_RCD
		  AND APD_ED.ADDL_SEQ = APD.ADDL_SEQ
		     AND APD_ED.ERNCD = APD.ERNCD
		  AND APD_ED.EFFDT <= $WHERE_SELECT_ASOFDATE)
AND APD.ADDL_SEQ = (SELECT MAX(APD_AS.ADDL_SEQ) FROM PS_ADDL_PAY_DATA APD_AS
		     WHERE APD_AS.EMPLID = APD.EMPLID
		     AND APD_AS.EMPL_RCD = APD.EMPL_RCD
		     AND APD_AS.ERNCD = APD.ERNCD
		     AND APD_AS.EFFDT = APD.EFFDT)		
AND  APD.ERNCD IN ('515')
!AND  APD.ERNCD IN ('513','515')
and  APD.EFFDT >= $start_date
!AND [$GEXXX924_INCLUDE_ERNCD_CRITERIA]  ! GEX ISDVNPK 12/15/2010 Commented this ITG #88465


END-SELECT

if $FOUND-ADDL_PAY = 'N'
! GEX ISDVNPK 12/15/2010 Commented below & added the 523 erncd procedure -- ITG #88465
 do get-addl-pay_513
  !let #HOURS_ENTITLED = 0
  !let #HOURS_TAKEN = 0
  !let #HOURS_REMAINING = 0
  !Let #PERS_HOURS    = 0
  !Let #PREV_HOURS    = 0
  !Let #BUYSELL_HOURS = 0
  !do Insert-gex_vacation_hr
! GEX ISDVNPK 12/15/2010 Commented below & added the 523 erncd procedure -- ITG #88465
end-if

end-procedure
  !ISDVDZK Added the code as per SCT 13856152 end 

  !ISDVDZK Added the code as per SCT 13856152 start
!*********************************************************************
!This procedure gets addl pay data
!*********************************************************************
begin-procedure get-addl-pay_513
#debug9 show 'get-addl-pay'

Let $FOUND-ADDL_PAY = 'N'

BEGIN-SELECT

APD513.ERNCD
APD513.OTH_PAY
APD513.GOAL_AMT
APD513.GOAL_BAL
APD513.OTH_HRS

  Let $FOUND-ADDL_PAY = 'Y'
	Let $Erncd = LTrim(RTrim(&APD513.ERNCD,' '),' ') 

  let #HOURS_ENTITLED = 0
  let #HOURS_TAKEN = 0
  let #HOURS_REMAINING = 0
  Let #PERS_HOURS    = 0
  Let #PREV_HOURS    = 0
  Let #BUYSELL_HOURS = 0
	
    If &APD513.OTH_HRS <> 0
      let #HOURS_ENTITLED = &APD513.OTH_HRS
      do Get-Hrs-YTD
      let #HOURS_REMAINING = #HOURS_ENTITLED - #HOURS_TAKEN
    end-if
    let $ERNCD = '505'
    do Get-Hrs-YTD
	  do process-519-erncd
	  If #PREV_HOURS <> 0                        
       let #HOURS_REMAINING = #HOURS_ENTITLED - (#HOURS_TAKEN + #PREV_HOURS)         ! --ITG #87132
    end-if

	  do process-524-erncd
	  do Insert-gex_vacation_hr
	
	
FROM PS_ADDL_PAY_DATA APD513 
WHERE APD513.EMPLID = $Emplid
AND APD513.EMPL_RCD = $Empl_rcd
AND APD513.EFFDT = (SELECT MAX(APD513_ED.EFFDT) FROM PS_ADDL_PAY_DATA APD513_ED
		  WHERE APD513_ED.EMPLID = APD513.EMPLID
		  AND APD513_ED.EMPL_RCD = APD513.EMPL_RCD
		  AND APD513_ED.ADDL_SEQ = APD513.ADDL_SEQ
		     AND APD513_ED.ERNCD = APD513.ERNCD
		  AND APD513_ED.EFFDT <= $WHERE_SELECT_ASOFDATE)
AND APD513.ADDL_SEQ = (SELECT MAX(APD513_AS.ADDL_SEQ) FROM PS_ADDL_PAY_DATA APD513_AS
		     WHERE APD513_AS.EMPLID = APD513.EMPLID
		     AND APD513_AS.EMPL_RCD = APD513.EMPL_RCD
		     AND APD513_AS.ERNCD = APD513.ERNCD
		     AND APD513_AS.EFFDT = APD513.EFFDT)
		     AND  APD513.ERNCD='513'
and  APD513.EFFDT >=  $start_date	  
And  APD513.ERNCD IN (select distinct APD.ERNCD from PS_EARNINGS_TBL APD
           where [$GEXXX924_INCLUDE_ERNCD_CRITERIA])

END-SELECT

if $FOUND-ADDL_PAY = 'N'
  let #HOURS_ENTITLED = 0
  let #HOURS_TAKEN = 0
  let #HOURS_REMAINING = 0
  Let #PERS_HOURS    = 0
  Let #PREV_HOURS    = 0
  Let #BUYSELL_HOURS = 0
  do Insert-gex_vacation_hr
end-if

end-procedure
  !ISDVDZK Added the code as per SCT 13856152 End
!*********************************************************************
!This procedure processes 519 Earnings Code
!*********************************************************************
begin-procedure process-519-erncd
#debug9 show 'process-519-erncd'

Let #PREV_HOURS =0

BEGIN-SELECT

PREV.HRS_YTD

    Let #PREV_HOURS    = &PREV.HRS_YTD
	
FROM PS_EARNINGS_BAL PREV, 
     PS_GEX_RC_PREVHR PREVCD
  WHERE PREV.EMPLID = $EMPLID		  				      
  AND PREV.EMPL_RCD = $EMPL_RCD
  AND PREV.BALANCE_YEAR = #Current_Year               
  AND PREV.BALANCE_QTR = (SELECT MAX(BALANCE_QTR) FROM PS_EARNINGS_BAL PREV_BQ
                       WHERE PREV_BQ.EMPLID = PREV.EMPLID
                        AND PREV_BQ.EMPL_RCD = PREV.EMPL_RCD
                        AND PREV_BQ.ERNCD = PREV.ERNCD
                        AND PREV_BQ.BALANCE_ID = PREV.BALANCE_ID
                        AND PREV_BQ.BALANCE_YEAR = PREV.BALANCE_YEAR)   
   AND PREV.BALANCE_PERIOD = (SELECT MAX(BALANCE_PERIOD) FROM PS_EARNINGS_BAL PREV_BP
                        WHERE PREV_BP.EMPLID = PREV.EMPLID
                        AND PREV_BP.EMPL_RCD = PREV.EMPL_RCD
                        AND PREV_BP.ERNCD = PREV.ERNCD
                       AND PREV_BP.BALANCE_ID = PREV.BALANCE_ID
                       AND PREV_BP.BALANCE_YEAR = PREV.BALANCE_YEAR
                       AND PREV_BP.BALANCE_QTR = PREV.BALANCE_QTR) 
   AND PREVCD.OPRID                = [$OprID]
   And PREVCD.RUN_CNTL_ID          = [$Run_Cntl_ID]
   AND PREV.ERNCD = PREVCD.ERNCD
 
END-SELECT
end-procedure
!*********************************************************************
!This procedure processes 524 Earnings Code
!*********************************************************************
begin-procedure process-524-erncd
#debug9 show 'process-524-erncd'

move 'N' to $found

begin-select ON-ERROR=SQL-Error-Found('process-524-erncd')

HB.BENEFIT_PLAN

  do get-524-hours
    
FROM PS_HEALTH_BENEFIT HB 
  WHERE HB.EMPLID = $EMPLID 
    AND HB.EMPL_RCD = $EMPL_RCD 
    AND HB.EFFDT = 
        (SELECT MAX(HB_ED.EFFDT) FROM PS_HEALTH_BENEFIT HB_ED 
        WHERE HB.EMPLID = HB_ED.EMPLID 
          AND HB.EMPL_RCD = HB_ED.EMPL_RCD 
          AND HB.COBRA_EVENT_ID = HB_ED.COBRA_EVENT_ID 
          AND HB.PLAN_TYPE = HB_ED.PLAN_TYPE 
          AND HB.BENEFIT_NBR = HB_ED.BENEFIT_NBR 
          AND HB_ED.EFFDT <= $WHERE_SELECT_ASOFDATE) 
     AND HB.PLAN_TYPE = '1M' 

end-select

end-procedure
!*********************************************************************
!This procedure gets 524 Hours
!*********************************************************************
begin-procedure get-524-hours
#debug9 show 'get-524-hours'


begin-select ON-ERROR=SQL-Error-Found('get-524-hours')

GEX_RC_VACHR.HOURS_PER_YEAR

     Let #BUYSELL_HOURS = &GEX_RC_VACHR.HOURS_PER_YEAR
    
From  PS_GEX_RC_VACHR GEX_RC_VACHR

Where GEX_RC_VACHR.OPRID                = [$OprID]
And   GEX_RC_VACHR.RUN_CNTL_ID          = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_VACHR.PLAN_TYPE, ' ') != ' '
And   Rtrim(GEX_RC_VACHR.BENEFIT_PLAN, ' ') = &HB.BENEFIT_PLAN

end-select

end-procedure
!**************************************************************************** 
!**************************************************************************** 
Begin-Procedure Get-Hrs-YTD
#debug9 show 'Get-Hrs-YTD'

BEGIN-SELECT
EB.HRS_YTD  &TOTAL_HRS_YTD

    if $ERNCD = '505'
      Let #PERS_HOURS    = &TOTAL_HRS_YTD
    else
      let #HOURS_TAKEN = &TOTAL_HRS_YTD
    end-if
	
FROM PS_EARNINGS_BAL EB
  WHERE EB.EMPLID = $EMPLID		  				      
  AND EB.EMPL_RCD = $EMPL_RCD
  AND EB.BALANCE_YEAR = #Current_Year               
  AND EB.ERNCD = $ERNCD 
  AND EB.BALANCE_QTR = (SELECT MAX(BALANCE_QTR) FROM PS_EARNINGS_BAL EB_BQ
                       WHERE EB_BQ.EMPLID = EB.EMPLID
                        AND EB_BQ.EMPL_RCD = EB.EMPL_RCD
                        AND EB_BQ.ERNCD = EB.ERNCD
                        AND EB_BQ.BALANCE_ID = EB.BALANCE_ID
                        AND EB_BQ.BALANCE_YEAR = EB.BALANCE_YEAR)   
   AND EB.BALANCE_PERIOD = (SELECT MAX(BALANCE_PERIOD) FROM PS_EARNINGS_BAL EB_BP
                        WHERE EB_BP.EMPLID = EB.EMPLID
                        AND EB_BP.EMPL_RCD = EB.EMPL_RCD
                        AND EB_BP.ERNCD = EB.ERNCD
                       AND EB_BP.BALANCE_ID = EB.BALANCE_ID
                       AND EB_BP.BALANCE_YEAR = EB.BALANCE_YEAR
                       AND EB_BP.BALANCE_QTR = EB.BALANCE_QTR)  
END-SELECT

End-Procedure Get-Hrs-YTD
!**************************************************************************** 
!**************************************************************************** 
begin-procedure Select-gex_vacation_hr
#debug9 show 'Select-gex_vacation_hr'
 
begin-select
 
vaccur.emplid
vaccur.empl_rcd
vaccur.deptid
vaccur.union_cd
vaccur.gex_entitle_hours
vaccur.gex_taken_hours
vaccur.gex_remain_hours
vaccur.gex_pers_hours
vaccur.gex_prev_hours
vaccur.gex_buysell_hours
  
  show '&vaccur.emplid :' &vaccur.emplid
  let $VACHST_emplid             = &vaccur.emplid
  show '$VACHST_emplid :' $VACHST_emplid
  let #VACHST_empl_rcd           = &vaccur.empl_rcd
  let $VACHST_deptid             = &vaccur.deptid
  let $VACHST_union_cd           = &vaccur.union_cd
  let #VACHST_gex_entitle_hours  = &vaccur.gex_entitle_hours
  let #VACHST_gex_taken_hours    = &vaccur.gex_taken_hours
  let #VACHST_gex_remain_hours   = &vaccur.gex_remain_hours
  let #VACHST_gex_pers_hours     = &vaccur.gex_pers_hours
  let #VACHST_gex_prev_hours     = &vaccur.gex_prev_hours
  let #VACHST_gex_buysell_hours  = &vaccur.gex_buysell_hours
  if $VACHST_emplid<>' '
     do Insert-gex_vac_hr_hst
  end-if
 
 from ps_gex_vacation_hr   vaccur
 
end-select
 
end-procedure
!**************************************************************************** 
!**************************************************************************** 
begin-procedure Insert-gex_vac_hr_hst
#debug9 show 'Insert-gex_vac_hr_hst'

#debug8 show 'Insert-gex_vac_hr_hst emplid: '$VACHST_emplid
show 'Insert-gex_vac_hr_hst emplid: '$VACHST_emplid
 
begin-sql
 
insert into ps_gex_vac_hr_hst
       (emplid,
        empl_rcd,
        deptid,
        union_cd,
        effdt,
        gex_entitle_hours,
        gex_taken_hours,
        gex_remain_hours,
        gex_pers_hours,
        gex_prev_hours,
        gex_buysell_hours)
values ($VACHST_emplid,                      !   EMPLID
        #VACHST_empl_rcd,                    !   EMPL_RCD
        $VACHST_deptid,                      !   DEPTID
        $VACHST_union_cd,                    !   UNION_CD
        $AsOfToday,                          !   EFFDT
        #VACHST_gex_entitle_hours,           !   GEX_ENTITLE_HOURS
        #VACHST_gex_taken_hours,             !   GEX_TAKEN_HOURS
        #VACHST_gex_remain_hours,            !   GEX_REMAIN_HOURS
        #VACHST_gex_pers_hours,              !   GEX_PERS_HOURS
        #VACHST_gex_prev_hours,              !   GEX_PREV_HOURS
        #VACHST_gex_buysell_hours);          !   GEX_BUYSELL_HOURS
 
end-sql
 
end-procedure
!*********************************************************************
!This displays all the sql errors occurred in the program
!*********************************************************************
begin-procedure SQL-Error-Found($Proc_Name) 

  show 'SQL Error in '$Proc_Name
  show 'sql-status:'#_sql-status

end-procedure

!****************************************************************************    
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#include 'gexxx903.sqc'  !Get employee status multiple row table
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 
#Include 'gexxx924.sqc'  !Get GEX_RC_ERNCD run control parameters
#Include 'getdatcd.sqc'

