!***********************************************************************
! GEXPY002:  This program prints out a report of current deductions.   *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *
!***********************************************************************
!  RD011   SXK         10/07/1997     INITIAL CREATION                 *
!          CJH         11/20/1998     Add Alter Session procedure to   *
!                                     force session into Rule Optimizer*
!          SXK         12/17/1998     Performace tuning                *
!          JDH         12/28/1998     Changed sort order               *
!          JDH         01/25/1999     Removed hire date.               *
!                                     Removed action date.             *
!                                     Added effective date.            *
!          JDH         01/29/1999     Fixed page break problem.        *
!          JDH         02/08/1999     Performance Tuning.              *
!          JDH         02/23/1999     Display century on dates.        *
!          JDH         05/13/1999     Modified logic to allow report   *
!                                      to run weekly or monthly.       *
!          JDH         05/25/1999     Select records even if DED_MTD   *
!                                      is less than or equal to zero.  *
!          JDH         06/17/1999     Modified to only pull current    *
!                                      deductions.                     *
!          JDH         06/29/1999     Added A/P voucher logic.         *
!          SXK         10/11/1999     Modified to have error report    *
!					even if no errors are produced *
!          SXK         10/13/1999     Modified to look at $prev_dedcd  *
!				      instead of dedcd and not to      *
!				      process vouchers where dedcd     *
!				      is SAVBON                        *
!                                                                      *
!          SXK         10/28/1999     Modified to have union from      *
!				      from job labor.                  *
!                                                                      *
!          SXK         01/07/2000     Modified evaluate of month to get* 
!				      quarter end date for quarterly   *
!                                     due AP checks.                   *
!                                                                      *
!          KMW         04/24/2000     Changed due date to be 7th for   *
!                                     month and quarter.               *
!                                                                      *
!          AXL         04/30/2001     Include DEDCD's starting with 5's*
!                                     in Before-DEDCD-Change procedure.*
!                                                                      *
!          AXL         05/01/2001     Capture DEDCD to pass on to      *
!                                     Voucher process.                 *
!                                                                      *
!          AXL         05/14/2002     Added an OR stmt to capture a    *
!                                     new range of DEDCD's being missed* 
!                                                                      *
!          PSR         08/06/2002     Modified UNION_CD FROM JOB_LABOR * 
!                                     TO JOB   - Upgrade 8.3           *
!                                                                      *
!          AXL         01/11/2005     Added a new output that prints in*
!                                     a new sort order                 *
!                                                                      *
!          AXL         03/07/2006     Add to the list of CB Tracy      *
!                                     weekly 401k payments             *
!GEX_PY229 SXD         08/16/2007     No chnages were made to Sqr      * 
!      ISDVNPK         11/12/2007     Deleted the calling AP interface *
!      ISDVVXK         08/12/2016     Print last 4 digits of SSN       *
! GEX_SEC_REENG 2016-09-14 Vahini Katta                                 
! Changes related to gex_emplid_mapp/7 digit emplid                     
!     Ujwal Dyasani	   2016-11-03     PT852 - to show SSN instead of   *
!									  Emplid                           *
!***********************************************************************

#include 'setenv.sqc' !Set environment

#define #column1     1
#define #column2    13
#define #column3    46
#define #column4    59
#define #column5    66
#define #column6    75
#define #column7    88
#define #column8    96
#define #column9   109
!AXL 1/11/2005 New columns to shift output
!********************
#define #column4b    55
#define #column5b    68
#define #column6b    75
#define #column7b    84
#define #column8b    97
#define #column9b   105
#define #column10   118

begin-setup
!#include 'setup32a.sqc' PSR 08/09/02 8 Upgrade
#include 'ptpsl177.sqc'
  !Begin-SQL
   !Alter Session Set OPTIMIZER_GOAL=RULE;
  !End-SQL
  
  declare-report deduction-report
    Printer-Type=HPLASERJET
    layout=default
  end-declare


  !AXL 01/11/2005 New report
  declare-report alternate-report
    Printer-Type=HPLASERJET
    layout=default
  end-declare

end-setup


begin-heading 8 for-reports=(deduction-report)
#debug9 Show 'begin-heading'
  move 'PY002DED' to $ReportID
  let $ReportTitle = 'Generic Deduction Report'
  #Include 'stdhdg02.sqc'

  do Get-Department-Name
  do Get-Deduction-Name

  print ':'                 (3,8)

  print 'Pay End Date:'     (3,77)
  print $PayEndDt           (,+2)

  print 'DeptID:'           (4,1)
  print $DeptID             (,13)
  print $DeptName           (,+1)

  print 'Deduction Code:'   (4,77)
  print $Dedcd              (,+2)
  print $DeductionName      (,+2)

  print 'BIRTH'          (+2,{#column3})
  print 'FULL'           (,{#column4})
  print 'EFF'            (,{#column6})
  print 'ACCOUNT'        (,{#column8})
  print '      CURRENT'  (,{#column9})

  print 'SSN'            (+1,{#column1})
  print 'NAME'           (,{#column2})
  print 'DATE'           (,{#column3})
  print 'PART'           (,{#column4})
  print 'ACTION'         (,{#column5})
  print 'DATE'           (,{#column6})
  print 'UNION'          (,{#column7})
  print 'CODE'           (,{#column8})
  print '    DEDUCTION'  (,{#column9})

  print '-'              (+1,{#column1},9) fill
  print '-'              (,{#column2},30)  fill
  print '-'              (,{#column3},10)  fill
  print '-'              (,{#column4},4)   fill
  print '-'              (,{#column5},6)   fill
  print '-'              (,{#column6},10)  fill
  print '-'              (,{#column7},5)   fill
  print '-'              (,{#column8},10)  fill
  print '-'              (,{#column9},13)  fill
end-heading

!AXL 01/11/2005 New Heading
!***********************************************************************
begin-heading 8 for-reports=(alternate-report)
!***********************************************************************
#debug9 Show 'begin-heading'
  move 'PY002D1R' to $ReportID
  let $ReportTitle = 'Generic Deduction Report'
  #Include 'stdhdg02.sqc'

  do Get-Department-Name
  do Get-Deduction-Name

  print ':'                 (3,8)

  print 'Pay End Date:'     (3,77)
  print $PayEndDt           (,+2)

  print 'Ded Cd:'           (4,1)
  print $Dedcd              (,13)
  print $DeductionName      (,+2)

  print 'BIRTH'          (+2,{#column4b})
  print 'FULL'           (,{#column5b})
  print 'EFF'            (,{#column7b})
  print 'ACCOUNT'        (,{#column9b})
  print '      CURRENT'  (,{#column10})

  print 'SSN'            (+1,{#column1})
  print 'NAME'           (,{#column2})
  print 'DEPTID'         (,{#column3})
  print 'DATE'           (,{#column4b})
  print 'PART'           (,{#column5b})
  print 'ACTION'         (,{#column6b})
  print 'DATE'           (,{#column7b})
  print 'UNION'          (,{#column8b})
  print 'CODE'           (,{#column9b})
  print '    DEDUCTION'  (,{#column10})

  print '-'              (+1,{#column1},9) fill
  print '-'              (,{#column2},30)  fill
  print '-'              (,{#column3},8)   fill
  print '-'              (,{#column4b},10)  fill
  print '-'              (,{#column5b},4)   fill
  print '-'              (,{#column6b},6)   fill
  print '-'              (,{#column7b},10)  fill
  print '-'              (,{#column8b},5)   fill
  print '-'              (,{#column9b},10)  fill
  print '-'              (,{#column10},13)  fill
end-heading

begin-report
#debug9 Show 'begin-report'
  use-report deduction-report
  do Init-DateTime
  do Init-Number
  do stdapi-init
  do Get-Calendar-Year-Id
  move 'GEXPY002' to $ReportID
  move 'Generic Deduction Report ' to $ReportTitle
  display $ReportTitle

  do Get-Current-DateTime
  let $orig_source = 'DED'
  let #error_Count = 0
  do Report
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term
end-report


begin-procedure Report
#debug9 Show 'Report'
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  
  move 'N' to $Errorfound

  if $prcs_process_instance = ''
    do Ask-As-Of-Date
  else
    Do GEXXX922-Select-Parameters
    let $asofdate = $GEX_RC_PAY.ASOFDATE
    if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
      let $asofdate = $asoftoday
    end-if
  end-if
 
  do Get-Last-Confirmed-Pay

  Let $X000_Order_By = 'Company, DeptID, Deduction Code, Name'
  Do Format-DateTime($Pay_End_Dt, $PayEndDt, {DEFDATE}, '', '')

  do Print-Cover-Page
  do Main-Process
  do Main-Process-2	!AXL 01/11/2005 New section
end-procedure


begin-procedure Print-Cover-Page
#debug9 Show 'Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print 'As Of Date :'                                            (+2,5)
  Print $AsOfDate                                                 (0,+2)
  Print 'Last Confirmed Pay End Date:'                            (+2,5)
  Print $pay_end_dt                                               (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

  Let #PAGE-COUNT = 0
End-Procedure


Begin-Procedure Get-Last-Confirmed-Pay
#debug9 Show 'Get-Last-Confirmed-Pay'
Begin-Select
Max(pay_end_dt) &pay_end_dt

  Let $AsOfDate         = &pay_end_dt
  Let $pay_end_dt       = &pay_end_dt

  Show 'Last confirmed pay end date:  ' $pay_end_dt

  If Rtrim($pay_end_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  End-If

From   ps_pay_calendar

Where  pay_end_dt      <= $AsOfDate
And    pay_confirm_run  = 'Y'
End-Select
End-Procedure

begin-procedure Main-Process
#debug9 Show 'Main-Process'

  let $process_ap = 'Y'

begin-select ON-ERROR=SQL-Error-Found('Main-Process')
C1.COMPANY   ()  on-break  level=1
			   print=never
			   save=$prev_company
			   after=after-company-change

C1.DEPTID    ()  on-break  level=2
			   print=never
			   save=$prev_dept
			   after=after-dept-change 

DE.DEDCD     ()  on-break  level=3
			   print=never
			   save=$prev_dedcd

DE.PLAN_TYPE ()  on-break  level=4
			   print=never
			   save=$prev_plan_type
			   before=before-dedcd-change
			   after=after-dedcd-change

PD.NAME
J.UNION_CD   !SXK 10/28/99 Changed from e.union_cd
CC.CHECK_DT !SXK 10/09/1999 
J.PAYGROUP
J.ACCT_CD
J.EMPLID
J.FULL_PART_TIME
J.ACTION
J.EFFDT
PD.BIRTHDATE &birthdate
SUM(DE.DED_CUR) &DE.Ded_CUR

  let $Data-Found-Flag = 'Y'

  move 'N' to $errorfound

  let $Company        = &C1.COMPANY
  let $DeptID         = &C1.DEPTID
  let $PlanType       = &DE.PLAN_TYPE
  let $Dedcd          = &DE.DEDCD
  let $emplid         = &J.EMPLID
  let $full_part_time = &J.FULL_PART_TIME
  let $action         = &J.ACTION
  let $acct_cd        = &J.ACCT_CD
  let $union_cd       = &J.UNION_CD !SXK 10/28/99 Changed from e.union_Cd
  let $check_dt       = &CC.CHECK_DT
  let $paygroup       = &J.PAYGROUP
  let $name           = &PD.NAME
 
  let $ap_dedcd       = &de.dedcd 		!AXL 5/1/2001
  let $AcctCd         = &J.ACCT_CD
      do Get-Acct-cd-descr

  move &DE.Ded_CUR to #DedCUR

  add #dedCUR to #tot_dedCUR

  Let $Year4 = '1'
  Do Format-DateTime(&birthdate, $birthdate, {DEFMDY}, '', '')

  Let $Year4 = '1'
  Do Format-DateTime(&j.effdt, $effdate, {DEFMDY}, '', '')

  use-report deduction-report
  do Print-Record

FROM   PS_PERSONAL_DATA  PD,
!SXK 10/28/1999 Begin
!       PS_EMPLOYMENT     E,
!sxK 10/28/99 End
       PS_JOB            J,
       ps_pay_check      C1,
       ps_pay_Calendar   cc,
       ps_pay_deduction  DE

WHERE  PD.EMPLID         = C1.EMPLID

AND    J.EFFDT           =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID     = J.EMPLID
       AND    EMPL_RCD  = J.EMPL_RCD
       AND    EFFDT     <= $pay_end_dt)

AND    J.EFFSEQ          =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB 
       WHERE  EMPLID     = J.EMPLID
       AND    EMPL_RCD  = J.EMPL_RCD
       AND    EFFDT      = J.EFFDT)

And    C1.PAY_END_DT     = $pay_end_dt

And    C1.EMPLID         = j.emplid
And    C1.EMPL_RCD      = j.empl_rcd

And    DE.COMPANY        = C1.COMPANY
And    DE.PAYGROUP       = C1.PAYGROUP
And    DE.PAY_END_DT     = C1.PAY_END_DT
And    DE.OFF_CYCLE      = C1.OFF_CYCLE
And    DE.PAGE_NUM          = C1.PAGE_NUM
And    DE.LINE_NUM          = C1.LINE_NUM
And    DE.SEPCHK         = C1.SEPCHK
!SXK 10/09/1999 Begin
And    cc.company = c1.company
and    cc.paygroup = c1.paygroup
and    cc.pay_end_dt = c1.pay_end_Dt
!SXK 10/09/1999 End

GROUP BY C1.COMPANY,
	 C1.DEPTID,
	 DE.DEDCD,
	 DE.PLAN_TYPE,
	 PD.NAME,
	 J.UNION_CD,
	 CC.CHECK_DT,
	 J.PAYGROUP,
	 J.ACCT_CD,
	 J.EMPLID,
	 J.FULL_PART_TIME,
	 J.ACTION,
	 J.EFFDT,
	 PD.BIRTHDATE

ORDER BY C1.COMPANY,
	 C1.DEPTID,
	 DE.DEDCD,
	 DE.PLAN_TYPE,
	 PD.NAME

end-select

  If $Data-Found-Flag = 'Y'
    use-report deduction-report
    print 'Grand Totals: ' (+2,1)
    print #grand_total_CUR (,{#column9})  edit 99,999,990.99
  Else
    use-report deduction-report
    New-Page
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (25,) Center
  End-If
end-procedure

!AXL 01/11/2005 New Section - Begin
!***********************************************************************
begin-procedure Main-Process-2
!***********************************************************************
#debug9 Show 'Main-Process-2'

   move 0 to #grand_total_CUR
   move 0 to #grand_dept_CUR
   move 0 to #grand_company_CUR
   let $process_ap = 'N'

begin-select ON-ERROR=SQL-Error-Found('Main-Process-2')
C2.COMPANY   ()  on-break  level=1
			   print=never
			   save=$prev_company
			   after=after-company-change2

D2.DEDCD     ()  on-break  level=2
			   print=never
			   save=$prev_dedcd
			   before=before-dedcd-change
			   after=after-dedcd-change2

C2.DEPTID    
P2.NAME
J2.UNION_CD   
CC2.CHECK_DT
J2.PAYGROUP
J2.ACCT_CD	
J2.EMPLID
J2.FULL_PART_TIME
J2.ACTION
J2.EFFDT
P2.BIRTHDATE &birthdate2
SUM(D2.DED_CUR) &D2.Ded_CUR

  let $Data-Found-Flag = 'Y'

  move 'N' to $errorfound

  let $Company        = &C2.COMPANY
  let $DeptID         = &C2.DEPTID
  let $Dedcd          = &D2.DEDCD
  let $emplid         = &J2.EMPLID
  let $full_part_time = &J2.FULL_PART_TIME
  let $action         = &J2.ACTION
  let $acct_cd        = &J2.ACCT_CD
  let $union_cd       = &J2.UNION_CD
  let $check_dt       = &CC2.CHECK_DT
  let $paygroup       = &J2.PAYGROUP
  let $name           = &P2.name
  let $ap_dedcd       = &d2.dedcd 		
  let $AcctCd         = &J2.ACCT_CD
      do Get-Acct-cd-descr

      move &D2.Ded_CUR to #DedCUR

      add #dedCUR to #tot_dedCUR

      Let $Year4 = '1'
      Do Format-DateTime(&birthdate2, $birthdate, {DEFMDY}, '', '')

      Let $Year4 = '1'
      Do Format-DateTime(&j2.effdt, $effdate, {DEFMDY}, '', '')

      use-report alternate-report
      do Print-Record

FROM   PS_PERSONAL_DATA  P2,
       PS_JOB            J2,
       ps_pay_check      C2,
       ps_pay_Calendar   CC2,
       ps_pay_deduction  D2

WHERE  P2.EMPLID         = C2.EMPLID

AND    J2.EFFDT           =
      (SELECT MAX(EFFDT) FROM PS_JOB
       WHERE  EMPLID    = J2.EMPLID
       AND    EMPL_RCD  = J2.EMPL_RCD
       AND    EFFDT     <= $pay_end_dt)

AND    J2.EFFSEQ          =
      (SELECT MAX(EFFSEQ) FROM   PS_JOB 
       WHERE  EMPLID    = J2.EMPLID
       AND    EMPL_RCD  = J2.EMPL_RCD
       AND    EFFDT     = J2.EFFDT)

And    C2.PAY_END_DT    = $pay_end_dt

And    C2.EMPLID        = j2.emplid
And    C2.EMPL_RCD      = j2.empl_rcd

And    D2.COMPANY        = C2.COMPANY
And    D2.PAYGROUP       = C2.PAYGROUP
And    D2.PAY_END_DT     = C2.PAY_END_DT
And    D2.OFF_CYCLE      = C2.OFF_CYCLE
And    D2.PAGE_NUM       = C2.PAGE_NUM
And    D2.LINE_NUM       = C2.LINE_NUM
And    D2.SEPCHK         = C2.SEPCHK
And    cc2.company       = c2.company
and    cc2.paygroup      = c2.paygroup
and    cc2.pay_end_dt    = c2.pay_end_Dt

GROUP BY C2.COMPANY,
         D2.DEDCD,
	 C2.DEPTID,
	! DE.PLAN_TYPE,
	 P2.NAME,
	 J2.UNION_CD,
	 CC2.CHECK_DT,
	 J2.PAYGROUP,
	 J2.ACCT_CD,
	 J2.EMPLID,
	 J2.FULL_PART_TIME,
	 J2.ACTION,
	 J2.EFFDT,
	 P2.BIRTHDATE

ORDER BY C2.COMPANY,
         D2.DEDCD,
	 C2.DEPTID,
	 P2.NAME

end-select
  use-report alternate-report
  If $Data-Found-Flag = 'Y'
    print 'Grand Totals: ' (+2,1)
    print #grand_total_CUR (,{#column9})  edit 99,999,990.99
  Else
    use-report alternate-report
    New-Page
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (25,) Center
  End-If
end-procedure
!AXL 01/11/2005 New Section - End

! PT852 - 2016-11-02 Ujwal Dyasani - Added - Begin
begin-procedure Fetch_SSN

begin-select
NATIONAL_ID 		&SSN
	MOVE &SSN to $SSN
FROM PS_PERS_NID 
WHERE PRIMARY_NID = 'Y' 
and emplid = $EMPLID
end-select

End-procedure Fetch_SSN
! PT852 - 2016-11-02 Ujwal Dyasani - Added - End

!AXL 01/11/2005 New Code to accommodate a new output - Begin
begin-procedure Print-Record
#debug9 Show 'Print-Record'
  ! ISDVVXK 08/12/2016 Begins
  ! PT852 - 2016-11-02 Ujwal Dyasani - Added - Begin
  Do Fetch_SSN
  let $SSN_Last4 = substr($SSN,6,4)
  ! PT852 - 2016-11-02 Ujwal Dyasani - Added - End
  ! PT852 - 2016-11-02 Ujwal Dyasani - Commented - Begin
  !let $SSN_Last4 = substr($EMPLID,6,4)
  ! PT852 - 2016-11-02 Ujwal Dyasani - Commented - End
  let $EMPLID = 'xxxxx'||$SSN_Last4
  ! ISDVVXK 08/12/2016 Ends
  print $EMPLID            (+1,{#column1})
  print $NAME              (,{#column2},30)

  if $process_ap = 'Y'  
    print $birthdate         (,{#column3})
    print $full_part_time    (,{#column4})
    print $action            (,{#column5})
    print $effdate           (,{#column6})
    print $union_cd          (,{#column7})  !SXK 10/28/99 Changed from e.union_cd
    print $AcctNameAbbrv     (,{#column8})
    print #dedCUR            (,{#column9})   edit 99,999,990.99
  else
    print $deptid            (,{#column3})
    print $birthdate         (,{#column4b})
    print $full_part_time    (,{#column5b})
    print $action            (,{#column6b})
    print $effdate           (,{#column7b})
    print $union_cd          (,{#column8b})  !SXK 10/28/99 Changed from e.union_cd
    print $AcctNameAbbrv     (,{#column9b})
    print #dedCUR            (,{#column10})   edit 99,999,990.99
  end-if
end-procedure
!AXL 01/11/2005 New Code to accommodate a new output - End

begin-procedure Before-Dedcd-Change
#debug9 Show 'Before-Dedcd-Change'
  new-page
end-procedure

begin-procedure After-Dedcd-Change
#debug9 Show 'After-Dedcd-Change'
 
  Print 'Totals for Deduction Code'  (+2,1)
  print $prev_dedcd    (,+1)
  print #tot_dedCUR    (,{#column9})  edit 99,999,990.99

  add #tot_dedCUR to #grand_dept_CUR

  move 0 to #tot_dedCUR
end-procedure

begin-procedure After-Dept-Change
#debug9 Show 'After-Dept-Change'
  print 'Totals for Department'  (+2,1)
  print $prev_dept               (,+1)
  print #grand_dept_CUR          (,{#column9})  edit 99,999,990.99

  add #grand_dept_CUR to #grand_company_CUR

  move 0 to #grand_dept_CUR
end-procedure

begin-procedure After-Company-Change
#debug9 Show 'After-Company-Change'
  print 'Totals for Company'  (+2,1)
  print $prev_company         (,+1)
  print #grand_company_CUR    (,{#column9})  edit 99,999,990.99

  add #grand_company_CUR to #grand_total_CUR

  move 0 to #grand_company_CUR
end-procedure

!AXL 01/11/2005 New Section - Begin
begin-procedure After-Dedcd-Change2
#debug9 Show 'After-Dedcd-Change2'
  
  Print 'Totals for Deduction Code'	(+2,1)
  print $prev_dedcd			(,+1)
  print #tot_dedCUR     		(,{#column10})  edit 99,999,990.99

  add #tot_dedCUR to #grand_company_CUR

   move 0 to #tot_dedCUR

end-procedure


begin-procedure After-Company-Change2
#debug9 Show 'After-Company-Change2'
  print 'Totals for Company'  (+2,1)
  print $prev_company         (,+1)
  print #grand_company_CUR    (,{#column10})  edit 99,999,990.99

  add #grand_company_CUR to #grand_total_CUR

  move 0 to #grand_company_CUR
end-procedure
!AXL 01/11/2005 New Section - Begin


begin-procedure SQL-Error-Found($Proc_Name) 
#debug9 Show 'SQL-Error-Found'
  do error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
end-procedure


begin-procedure Error-Found
#debug9 Show 'Error-Found'
  move 'Y' to $ErrorFound
  add 1 to #error_count
  ! GEX_SEC_REENG 2016-09-14 Vahini Katta Begins 
  !let $EmplId_1st3  = substr($EmplId,1,3)
  !let $EmplId_mid2  = substr($EmplId,4,2)
  !let $EmplId_last4 = substr($EmplId,6,4)
 
  !String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  !display $EmplID11 
  display $EmplID 
  ! GEX_SEC_REENG 2016-09-14 Vahini Katta Ends
end-procedure


#include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'getactnm.sqc'  !Get-Acct-cd-descr procedure
#include 'getdednm.sqc'  !Get-Deduction-Name procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#include 'gexxx922.sqc'  !Get pay single row run control
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
