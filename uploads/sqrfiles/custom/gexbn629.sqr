!***********************************************************************
! GEXBN629:           HEALTH MANAGEMENT CORPORATION TERMINATION FILE   *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXBN629 :            HEALTH MANAGEMENT CORPORATION TERMINATION FILE *
!                                                                      *        
! Narrative:            This program creates a file having data of     *
!                       Team members who  have terminated employment   *
!                       in a particular period.                        *
!			                                               *  
!                                                                      *
!                                                                      *  
! SQL Tables:           PS_JOB                                         *
!                       PS_HEALTH_BENEFIT                              *
!                       PS_PERSONAL_DATA                               *
!                       PS_BEN_PROG_PARTIC                             *
!                       PS_DEPENDENT_BENEF                             *
!                       PS_DEP_BENEF_NID                               *
!                                                                      *                      
!                                                                      *
! Written by:           SHEETAL RAINA                                  *       
!                                                                      *
! Normally Run:         ONLY ONCE                                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS      DATE            DESCRIPTION OF THE CHANGE              *
!***********************************************************************
! isdvdzk    18-sept-2008     changed the code to get all the from hlth* 
!                               benefits according to the requirement  *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)

Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report

!****************************************************************************
Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc
  
  Let $ReportID      = 'GEXBN629'
  Let $ReportTitle   = 'HEALTH MANAGEMENT CORPORATION(Termination File)'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime
  
  Let $File_Dt = edit($AsOfDate,'mmddyy')
  Do P140-Open-File
  Let $File_Hdr = 'GiantEagleMembership' || $File_Dt
  Do Write-Header
End-Procedure

!****************************************************************************
Begin-Procedure P140-Open-File
#debug9 Show 'P140-Open-File'
   Let $Member_File = '{OUTFILE}' || Lower($ReportID) || '.dat'
   show '$Member_File: '   $Member_File   !added by isdvdzk 
   OPEN $Member_File as 1 for-writing record=480:vary status = #Open_mem
   
   if (#Open_mem <> 0)
      let $Error-Message = 'PROGRAM ABORTED - Problem opening file : ' || $Member_File
      show $Error-Message
      STOP
   end-if
End-Procedure

!****************************************************************************
Begin-Procedure Write-Header
   
   write 1 from 
         ' ':33
         $File_Hdr:30
         
   write 1 from ' '
            
End-Procedure Write-Header

!****************************************************************************
Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
	Let $Data-Found-Flag = 'N'
	Let #Tot_Rec_Cnt = 0
	Let #Member_Cnt = 0
Begin-Select DISTINCT
A.EMPLID
A.EMPL_RCD
A.EFFSEQ
A.TERMINATION_DT!sxr
   
   Let $Data-Found-Flag = 'Y'
   
   Do Initialize-Variables
   
   Let $Emplid 		=  &A.EMPLID

   Let $Empl_Rcd 	=  &A.EMPL_RCD
   Let $Effseq 	 	=  &A.EFFSEQ
   let $term_dt        =    &A.TERMINATION_dt
   Let $Hlth_Ben_Found = 'N'
   Let #Hlth_Row_Cnt = 0
    
   Let $PT_E_10 = 'N'
   Let $PT_E_1Y = 'N'
   Let $PT_W_10 = 'N'
   Let $PT_W_1Y = 'N'
   !show 'emplid ' $emplid
   !show 'Termination_dt '  $term_dt
   Do Chk-Hlth-Benefit
   !Do Chk-DP-Hlth
   If $Hlth_Ben_Found = 'N'
      Do Get-Employee-Data
      Do Write-File
   End-If
   
FROM PS_JOB A
WHERE A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        	WHERE A.EMPLID = A_ED.EMPLID
          	AND A.EMPL_RCD = A_ED.EMPL_RCD
          	AND A_ED.EFFDT <= sysdate)!sxr
AND A.EFFSEQ = (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        	WHERE A.EMPLID = A_ES.EMPLID
          	AND A.EMPL_RCD = A_ES.EMPL_RCD
          	AND A.EFFDT = A_ES.EFFDT)
AND A.COMPANY > '999' !Excluding Independents
AND (A.Termination_dt between'01-JAN-2006' AND '31-MAR-2008')
!and A.EMPLID='192604463'
ORDER BY A.EMPLID
End-Select
End-Procedure

!**************************************************************************
Begin-Procedure Chk-Hlth-Benefit
Begin-Select
B.COBRA_EVENT_ID
B.PLAN_TYPE
B.BENEFIT_NBR
B.EFFDT
B.COVERAGE_BEGIN_DT
B.COVERAGE_ELECT


   Do Get-Employee-Data
   Let $Hlth_Ben_Found = 'Y'
   Let #Hlth_Row_Cnt = #Hlth_Row_Cnt + 1
   
   Let #Cobra_Event_ID  =  &B.COBRA_EVENT_ID
   Let $Plan_Type 	=  ltrim(rtrim(&B.PLAN_TYPE,' '),' ')

   Let #Benefit_Nbr 	=  &B.BENEFIT_NBR
   Let $Hlth_Cvrg_Effdt = edit(&B.EFFDT,'YYYYMMDD')

   Let $Hlth_Ben_Effdt 	=  edit(&B.COVERAGE_BEGIN_DT,'YYYYMMDD')
   Let $Cvrg_Elect 	=  ltrim(rtrim(&B.COVERAGE_ELECT,' '),' ')
   
  ! let $Term_Dt=edit(&B.EFFDT,'YYYYMMDD')
  
   If $Cvrg_Elect <> 'E' AND $Cvrg_Elect <> 'T' 
      Let $Hlth_Ben_Effdt = $Hire_Dt
   End-If
  
   If $Plan_Type = '10' or $Plan_Type = '1Y'   !isdvdzk changed on 18-sept-2008 according to the requirement start 
    If $Cvrg_Elect = 'T' 
    Let $Hlth_Ben_Effdt=$Hlth_Cvrg_Effdt
     Do Write-File
    End-If
   End-if                                      !isdvdzk changed on 18-sept-2008 according to the requirement end 
   If $Plan_Type = '10' AND $Cvrg_Elect = 'E'
      Let $PT_E_10 = 'Y'
      Do Write-File
         
   Else
      If $Plan_Type = '1Y' AND $Cvrg_Elect = 'E'  ! AND $PT_E_10 = 'N'
         Let $PT_E_1Y = 'Y'
         Do Write-File
         
      Else
         If $Plan_Type = '10' AND $Cvrg_Elect = 'W' !AND $PT_W_1Y = 'N'
            Let $PT_W_10 = 'Y'
            Do Write-File	
         Else
            If $Plan_Type = '1Y' AND $Cvrg_Elect = 'W' !AND $PT_W_10 = 'N'
               Let $PT_W_1Y = 'Y'
               Do Write-File
            End-If
         End-if      
      End-If  
   End-If
   
         
FROM PS_HEALTH_BENEFIT B
WHERE B.EMPLID = $Emplid
AND B.EMPL_RCD = $Empl_Rcd
AND B.PLAN_TYPE IN ('10','1Y')
AND B.COVERAGE_ELECT IN ('E','W','T')                                   !isdvdzk changed on 18-sept-2008 according to the requirement start 
!AND B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_HEALTH_BENEFIT B_ED   
!        	WHERE B.EMPLID = B_ED.EMPLID                        
!          	AND B.EMPL_RCD = B_ED.EMPL_RCD
!          	AND B.COBRA_EVENT_ID = B_ED.COBRA_EVENT_ID
!          	AND B.PLAN_TYPE = B_ED.PLAN_TYPE
!          	AND B.BENEFIT_NBR = B_ED.BENEFIT_NBR
!          	AND B_ED.EFFDT <= Sysdate)               !isdvdzk changed on 18-sept-2008 according to the requirement end 
!ORDER BY B.PLAN_TYPE ASC
order by COVERAGE_BEGIN_DT desc
End-Select
End-Procedure Chk-Hlth-Benefit
!**************************************************************************

Begin-Procedure Get-Employee-Data
   Let $Member_No = '000'	!Policy Holder
      Let $Relation_Print = 'S'

Begin-Select
E.SERVICE_DT
E.HIRE_DT

!   Let $Srvc_Dt = edit(&E.SERVICE_DT,'YYYYMMDD')
  Let $Hire_Dt = edit(&E.HIRE_DT,'YYYYMMDD')
   
FROM PS_EMPLOYMENT E
WHERE E.EMPLID = $Emplid
End-Select

   Do Get-Benef-Prog

Begin-Select
P.LAST_NAME
P.FIRST_NAME
P.MIDDLE_NAME
P.ADDRESS1
P.ADDRESS2
P.CITY
P.STATE
P.POSTAL
P.PHONE
P.SEX
P.BIRTHDATE

   Let $Last_Name   = &P.LAST_NAME
   Let $First_Name  = &P.FIRST_NAME
   Let $Middle_Name = &P.MIDDLE_NAME
   Let $Addr1 	    = &P.ADDRESS1
   Let $Addr2 	    = &P.ADDRESS2
   Let $City 	    = &P.CITY
   Let $State 	    = &P.STATE
   Let $Postal 	    = &P.POSTAL
   Let $Phone 	    = &P.PHONE
   
   Unstring $Phone by '/' into $ph1 $ph2 $ph3
   Unstring $ph2 by '-' into $ph4 $ph5
   
   Let $Phone = $ph1||$ph4||$ph5
   
   Let $Sex 	    = &P.SEX
   Let $Birth_Dt = edit(&P.BIRTHDATE,'YYYYMMDD')

FROM PS_PERSONAL_DATA P
WHERE P.EMPLID = $Emplid
End-Select

Begin-Select
ET.ETHNIC_GROUP

   Let $Ethnic_Grp  = &ET.ETHNIC_GROUP
 
From PS_ETHNIC_GRP_TBL ET,
     PS_DIVERS_ETHNIC D
WHERE D.EMPLID = $Emplid
AND   D.REG_REGION = 'USA'  	
AND   D.PRIMARY_INDICATOR = 'Y' 
and D.REG_REGION = ET.SETID
and D.ETHNIC_GRP_CD = ET.ETHNIC_GRP_CD
and ET.EFFDT = (SELECT MAX(ETHNA.EFFDT)
		 FROM PS_ETHNIC_GRP_TBL ETHNA
		 WHERE ET.SETID    = ETHNA.SETID
		 AND   ET.ETHNIC_GRP_CD = ETHNA.ETHNIC_GRP_CD
		 AND   ETHNA.EFFDT    <= Sysdate)

End-Select

   do Get-Gex-Mapp-EmpIid ($Emplid,$emplid_out)	
   Do Get-Emp-Ssn ($Emplid, $Ssn_out)
End-Procedure Get-Employee-Data
!**************************************************************************

Begin-Procedure Get-Benef-Prog
Begin-Select
BP.BENEFIT_PROGRAM

   Let $Benefit_Prog = &BP.BENEFIT_PROGRAM
FROM PS_BEN_PROG_PARTIC BP
WHERE BP.EMPLID = $Emplid
AND BP.EMPL_RCD = $Empl_Rcd
AND BP.EFFDT = (SELECT MAX(BP1.EFFDT) 
		FROM PS_BEN_PROG_PARTIC BP1
        	WHERE BP.EMPLID = BP1.EMPLID
          	AND BP.EMPL_RCD = BP1.EMPL_RCD
          	AND BP.COBRA_EVENT_ID = BP1.COBRA_EVENT_ID
          	AND BP1.EFFDT <= &B.COVERAGE_BEGIN_DT)
End-Select
End-Procedure Get-Benef-Prog

!**************************************************************************

Begin-Procedure Write-File

   Let #Tot_Rec_Cnt = #Tot_Rec_Cnt + 1
   If $Member_No = '000'
      Let #Member_Cnt = #Member_Cnt + 1
   End-If
   
write 1 from
      ' ':5	!Network Code
      ' ':5	!Contract Code
      $Member_No:3	!Member No
      $Emplid:20	!Insured ID (SSN)
      $Ssn_out:9	!Policy Holder SSN / Insured ID
      $Birth_Dt:8	!Date of Birth
      $Sex:1		!Gender
     ! $term_dt:15
      $Dep_NID:9	!Member SSN (Dependent's SSN)
      $Last_Name:20
      $First_Name:15
      $Middle_Name:1
      $Addr1:30
      $Addr2:30
      $City:20
      $State:2
      $Postal:10
      $Phone:10
      $Relation_Print:1
      $Hlth_Ben_Effdt:8	!Effective Date of Policy
      $Benefit_Prog:15	!Employee Group Number
      $Ethnic_Grp:2	!Ethnicity
      ' ':50		!EMPI
      $emplid_out:30	!Card ID (7-Digit Emplid)

End-Procedure Write-File

!**************************************************************************
Begin-Procedure Chk-DP-Hlth
Begin-Select
B1.COBRA_EVENT_ID
B1.PLAN_TYPE
B1.BENEFIT_NBR
B1.EFFDT
B1.COVERAGE_BEGIN_DT
B1.COVERAGE_ELECT

   Do Get-Employee-Data
       
   Let #Cobra_Event_ID  =  &B1.COBRA_EVENT_ID
   Let $Plan_Type 	=  ltrim(rtrim(&B1.PLAN_TYPE,' '),' ')
   Let #Benefit_Nbr 	=  &B1.BENEFIT_NBR
   Let $Hlth_Cvrg_Effdt =  &B1.EFFDT
   Let $Hlth_Ben_Effdt 	=  edit(&B1.COVERAGE_BEGIN_DT,'YYYYMMDD')
   
   Let $Cvrg_Elect 	=  ltrim(rtrim(&B1.COVERAGE_ELECT,' '),' ')
        
FROM PS_HEALTH_BENEFIT B1
WHERE B1.EMPLID = $Emplid
AND B1.EMPL_RCD = $Empl_Rcd
AND B1.PLAN_TYPE = '15'
AND B1.COVERAGE_ELECT = 'E'
AND B1.EFFDT = (SELECT MAX(B_ED1.EFFDT) FROM PS_HEALTH_BENEFIT B_ED1
        	WHERE B1.EMPLID = B_ED1.EMPLID
          	AND B1.EMPL_RCD = B_ED1.EMPL_RCD
          	AND B1.COBRA_EVENT_ID = B_ED1.COBRA_EVENT_ID
          	AND B1.PLAN_TYPE = B_ED1.PLAN_TYPE
          	AND B1.BENEFIT_NBR = B_ED1.BENEFIT_NBR
          	AND B_ED1.EFFDT <= Sysdate)
End-Select
End-Procedure Chk-DP-Hlth
!**************************************************************************

Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'

  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (5) center
  End-If

  Do Write-Footer
  Do P310-Close-File
  
  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc
         
  Show 'Successful end of report'
End-Procedure

!****************************************************************************
Begin-Procedure Write-Footer
   Let $Tot_Rec_Cnt = to_char(#Tot_Rec_Cnt)
   Let $Member_Cnt = to_char(#Member_Cnt)
   
   write 1 from ' '

   write 1 from 
         ' ':10
         'TOTAL MEMBER COUNT: ':21
         $Member_Cnt:5
         ' ':10
         'TOTAL RECORD COUNT: ':21
         $Tot_Rec_Cnt:5
                     
End-Procedure Write-Footer
!****************************************************************************

Begin-Procedure P310-Close-File
#debug9 Show 'P310-Close-File'
  Close 1

  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop
  End-If
End-Procedure

!****************************************************************************
Begin-Procedure Initialize-Variables
   
   Let $Emplid 		= ' '
   Let $Empl_Rcd 	= ' '
   Let $Ssn_out         = ' '
   Let $Effseq 	 	= 0
   Let #Cobra_Event_ID  = 0
   Let $Plan_Type 	= ' '
   Let #Benefit_Nbr 	= 0
   Let $Hlth_Ben_Effdt 	= ''
   Let $Hlth_Cvrg_Effdt = ''
   Let $Cvrg_Elect 	= ' '
  
   Let $Srvc_Dt     = ''
   Let $Hire_Dt     = ''
   Let $Last_Name   = ' '
   Let $First_Name  = ' '
   Let $Middle_Name = ' '
   Let $Addr1 	    = ' '
   Let $Addr2 	    = ' '
   Let $City 	    = ' '
   Let $State 	    = ' '
   Let $Postal 	    = ' '
   Let $Phone 	    = ' '
   Let $Sex 	    = ' '
   Let $Ethnic_Grp  = ' '
   Let $Benefit_Prog = ' '
   Let $emplid_out  = ' '
   Let $Relation    = ' '
   Let $Relation_Print = ' '
   Let $Birth_Dt    = ''

End-Procedure Initialize-Variables

!****************************************************************************

#Include 'gexxx919.sqc'  !Get Dedcd multiple row table  
#Include 'gexxx912.sqc'  !Get Plan Type/Benefit Plan Multiples Run Controls
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx920.sqc'  !Get ben single row run control
#include 'gexxx940.sqc'  !Get Coverage Elect multiple row table
#include 'gexxx951.sqc'
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'getgeid.sqc'   !Get 7 digit Emplid
