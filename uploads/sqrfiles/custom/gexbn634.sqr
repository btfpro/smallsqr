!***********************************************************************
! GEXBN634: Email Notification for Benefit Enrollment                  *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1988-1997 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
!  $Date:: 1/11/08 6:47p    $                                          *
!  $Revision:: 1                $                                      *
!  $Workfile:: GEXBN634.SQR       $                                    *
!                                                                      *
!***********************************************************************
!                                                                      *
! Function: Send Benefits Enrollment Email Notification                 *
! Input:   PS_BAS_PARTIC     -  Participant Level Record               *
!          PS_JOB        - Person JOB                                  *
!          PS_EMAIL_ADDRESSES - Person Email Address                   *
! Output: Sends Email to Employee and Reports TO Copied                *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#    INIT	DATE     	DESCRIPTION OF THE CHANGE              *
!***********************************************************************
! VENDAXG      07/06/2009 Initial Creation.
!***********************************************************************

#include 'setenv.sqc'
#Include 'setup02.sqc'   !Printer and page-size initialization



!*********************************
Begin-Heading 8 
#Include 'stdhdg01.sqc'
Print 'Deptid:' (-1,1)
Print $Deptid   (, 8
Print 'Enrolment Email Notification Report'(,1) Center
Print 'DeptID' (+3,1)
Print 'Name' (,10)
Print 'SSN ' (,45)
Print 'EmplID'  (,55)
Print 'TM Email Address '   (,65)
Print 'Reports To Email Address'  (,95)

Print '-'	(+1,1,120)	Fill

End-Heading


!******************************
Begin-Report
!******************************

  Do Init-Report
  Do Print-Cover-Page
  Do Get-Subject-Body-Msg
  Do Select-Data
  Do StdAPI-Term

End-Report


!************************************************************************!
!Description: Print Cover Page
!************************************************************************!
Begin-Procedure Print-Cover-Page


  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX928_EXCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = '   (+2,5)
  Print $GEXXX928_EXCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA        (0,+2)
  Print '$GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA  = '           (+2,5)
  Print $GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA                  (0,+2)
  Print '$GEXXX901_EXCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA  = '           (+2,5)
  Print $GEXXX901_EXCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA                  (0,+2)
  Print 'As Of Date :'                                            (+2,5)
  Print $RunDate                             (0,+2)

  NEW-PAGE
  
End-Procedure Print-Cover-Page
!************************************************************************!

!************************************************************************!
!Description: Init Report
!************************************************************************!
Begin-Procedure Init-Report

  Let $ReportID    = 'GEXBN634'
  do Init-Datetime
  do Init-Number
  do Get-Current-DateTime

  display ''
  display 'GEXBN634: Email Notification'

  do StdAPI-Init

  if $prcs_process_instance = ''
   let $prcs_oprid = 'ISDVDXS'
   let $prcs_run_cntl_id = '1'
  end-if

  Do Get-Run-Control-Parameters

End-Procedure
!************************************************************************!



!************************************************************************!
!Description: Get Run Control parameter.
!************************************************************************!
Begin-Procedure Get-Run-Control-Parameters

Do GEXRCBN1-SELECT-PARAMETERS
If &GEX_RC_BEN.ASOFDATE <> ''
   let $RunDate = &GEX_RC_BEN.ASOFDATE
   !Show '$RunDate :'$RunDate
Else
 let $RunDate = $Asoftoday
 !Show 'As of today : '$RunDate
End-If
Let $GEXXX928_Benefit_Program_Alias = 'A.BENEFIT_PROGRAM'
Do GEXXX928-Select-Benefit-Program-Parameters
!Show $GEXXX928_EXCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA
!Show $GEXXX911_EXCLUDE_BENEFIT_PROGRAM_CRITERIA
Let $GEXXX902_Deptid_Alias = 'JOB.DEPTID'
Do GEXXX902-Select-Deptid-Parameters 
!Show $GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA				
!Show $GEXXX902_EXCLUDE_DEPTID_CRITERIA
Let $GEXXX901_Company_Alias = 'JOB.COMPANY'
Let $GEXXX901_Paygroup_Alias = 'JOB.PAYGROUP'
Do GEXXX901-Select-Company-Paygroup-Parameters
!Show $GEXXX901_EXCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA
!Show $GEXXX901_EXCLUDE_COMPANY_PAYGROUP_CRITERIA

End-Procedure Get-Run-Control-Parameters
!************************************************************************!


!************************************************************************!
!Description: Main Procedure to Select the data.
!************************************************************************!
Begin-Procedure Select-Data
Let $FromEmailID = 'Myhrconnection@gianteagle.com'
Let $Body = $Email_Body
  
Begin-Select
SYSDATE		&Today
SYSDATE - 1	&Yesterday

	!Let $Today = &Today
	!Let $Yesterday = &Yesterday
  Let $Today      = Ltrim(Rtrim(&Today,' '),' ')
  Let $Yesterday  = ltrim(rtrim(&Yesterday,' '),' ')

FROM DUAL
End-Select

!Show 'Inside Select Data..' &Today '  ' &Yesterday
!show 'GEXXX928_EXCLUDE_BENEFIT_PROGRAM_CRITERIA : '$GEXXX928_EXCLUDE_BENEFIT_PROGRAM_CRITERIA      

Begin-SELECT
JOB.DEPTID	() On-Break Print=Never Level = 1 After = Page-Break-New-Deptid
B.NAME_DISPLAY
B.NAME		
A.BENEFIT_RCD_NBR
A.EVENT_ID
A.SCHED_ID
A.EMPLID
A.BENEFIT_PROGRAM
A.BAS_PROCESS_STATUS
A.EVENT_DT
A.EVENT_CLASS
A.STATUS_DT
JOB.REPORTS_TO

   
  
  Let $Deptid =Ltrim(Rtrim(&JOB.DEPTID,' '),' ')
  Let $EmployeeID  = ltrim(rtrim(&A.EmplId,' '),' ')
  Let $Name_Report = ltrim(rtrim(&B.NAME,' '),' ')
  Let $Benefit_Program = ltrim(rtrim(&A.BENEFIT_PROGRAM,' '),' ')
  Let $Emplid = ltrim(rtrim(&A.EMPLID,' '),' ')
  Let $Event_Class = ltrim(rtrim(&A.EVENT_CLASS,' '),' ')
  Let $Process_Status = ltrim(rtrim(&A.BAS_PROCESS_STATUS,' '),' ')
  Let $Status_Date = &A.STATUS_DT	
  Let $Event_Date = &A.EVENT_DT		
  Let $Reports_TO =  Ltrim(Rtrim(&JOB.REPORTS_TO,' '),' ')
  
  Do Get-7digit-Emplid
  Do Get-Email-Address
  DO Get-Reports-To-Emplid
  
  If ($Employee_EmailID = '') And ($ReportsTO_Employee_EmailID = '')
  	Show 'Both Employee and Reports To Email Address not there.'
  Else
  	Show 'Both Employee and Reports To Email Address are there.'
  End-if
  
  Let $Tolist = $Employee_EmailID
  Let $CCList = $ReportsTO_Employee_EmailID
  Let $Subject = $Email_Subject  || '  ' || $Name_Report  || '  '  || $Seven_digit_Emplid
   
  Show '$Tolist : '$Tolist ' $CCList : '$CCList ' $FromEmailID:  ' $FromEmailID ' $Subject : '$Subject ' $Body : '$Body
	
	If Ltrim(RTrim($CCList,' '),' ') = ''
	
	End-if
		
	If Ltrim(RTrim($Tolist,' '),' ') = ''
		Let $Tolist = $CCList
	  Let $CCList = ''
	End-if
  
  
  Do Send-Email-NT($Tolist,$CCList,$FromEmailID,$Subject,$Body)
  
  Do Insert-Into-Notification-Tbl
  
  Do Print-Report
  !Show '------------------------------------------------------'
    
    
    
    
FROM  PS_BAS_PARTIC A,
      PS_PERSONAL_DATA B,
      PS_JOB JOB
WHERE A.GEX_EBEN_IND = 'Y'	
AND (A.STATUS_DT = $Today or A.STATUS_DT = $Yesterday)
AND A.BAS_PROCESS_STATUS = 'NT'
AND   A.BENEFIT_RCD_NBR    =
      (SELECT MAX(BENEFIT_RCD_NBR)
       FROM   PS_BAS_PARTIC
       WHERE  SCHED_ID     = A.SCHED_ID
       AND    EMPLID       = A.EMPLID
       AND    BENEFIT_RCD_NBR = A.BENEFIT_RCD_NBR
       AND    EVENT_ID     = A.EVENT_ID)
AND B.EMPLID     = A.EMPLID
AND B.EMPLID     = JOB.EMPLID
AND B.EMPLID     = JOB.EMPLID
AND JOB.EMPL_RCD = A.EMPL_RCD
AND JOB.EFFDT         = (SELECT MAX(J.EFFDT) from ps_job J 
			    where j.emPlid = JOB.emplid
			    and J.EMPL_RCD = JOB.EMPL_RCD
			    and J.EFFDT <= $RunDate)
AND JOB.EFFSEQ         = (SELECT MAX(J1.EFFSEQ) from ps_job J1
			    where J1.EMPLID = JOB.emplid
			    and J1.EMPL_RCD = JOB.EMPL_RCD
			    and J1.EFFDT = JOB.EFFDT)
AND [$GEXXX928_EXCLUDE_BENEFIT_PROGRAM_CRITERIA]
AND [$GEXXX902_EXCLUDE_DEPTID_CRITERIA]
AND [$GEXXX901_EXCLUDE_COMPANY_PAYGROUP_CRITERIA]
ORDER BY JOB.DEPTID

End-SELECT

End-Procedure Select-Data

!************************************************************************!
!Description: Get the Email address of the Team Member from PS Addresses.
!************************************************************************!
Begin-Procedure Get-Email-Address
Let $EmailID_Found ='N'
let $Employee_EmailID = ''
Begin-Select 
EMAIL.EMAIL_ADDR

				Let $Employee_EmailID =  Ltrim(RTrim(&EMAIL.EMAIL_ADDR,' '),' ')
				Let $EmailID_Found ='Y'
				
FROM PS_EMAIL_ADDRESSES EMAIL
WHERE EMAIL.EMPLID = $EmployeeID
AND EMAIL.PREF_EMAIL_FLAG = 'Y'
End-Select
!Show 'Email Address Employee : ' $EmployeeID  '  '  $Employee_EmailID
End-Procedure Get-Email-Address
!************************************************************************!

!************************************************************************!
!Description: Get the REPROTS TO Emplid for the Team Member.
!************************************************************************!
Begin-Procedure  Get-Reports-To-Emplid
let $Prev_Reports_Employee_EmailID = ''
let $Display_Reports_EmailID = ''
Begin-Select
REPORT_TO.EMPLID 

			Let $Reports_TO_Emplid = Ltrim(Rtrim(&REPORT_TO.EMPLID,' '),' ')
			Do Get-Reports-To-EmailAddress

FROM PS_JOB REPORT_TO 
WHERE REPORT_TO.EFFDT  = (SELECT MAX(REPORT_TO1.EFFDT) FROM PS_JOB REPORT_TO1
			   									 WHERE REPORT_TO1.EMPLID = REPORT_TO.EMPLID
			   									 AND REPORT_TO1.EMPL_RCD = REPORT_TO.EMPL_RCD
			   									 AND REPORT_TO1.EFFDT <= $RunDate)
AND REPORT_TO.EFFSEQ  = (SELECT MAX(REPORT_TO2.EFFSEQ) from ps_job REPORT_TO2
			    								WHERE REPORT_TO2.EMPLID = REPORT_TO.EMPLID
			    								AND REPORT_TO2.EMPL_RCD = REPORT_TO.EMPL_RCD
			    								AND REPORT_TO2.EFFDT = REPORT_TO.EFFDT)
AND REPORT_TO.POSITION_NBR = 	$Reports_TO	   									 
			   									 
End-Select
let $ReportsTO_Employee_EmailID = $Prev_Reports_Employee_EmailID 
!Show 'ReportsTO_Employee_EmailID : '$ReportsTO_Employee_EmailID
End-Procedure  Get-Reports-To-Emplid
!************************************************************************!

!************************************************************************!
!Description: Get the REPROTS TO Email Address from PS ADDRESSES.
!************************************************************************!
Begin-Procedure Get-Reports-To-EmailAddress
Let $Reports_Employee_EmailID = ''
Begin-Select 
REMAIL.EMAIL_ADDR

				Let $Reports_Employee_EmailID =  Ltrim(RTrim(&REMAIL.EMAIL_ADDR,' '),' ')
				!Show 'Reports TO Emplid : '$Reports_TO_Emplid ' Email Address : '$Reports_Employee_EmailID
				Let $EmailID_Found ='Y'
				
FROM PS_EMAIL_ADDRESSES REMAIL
WHERE REMAIL.EMPLID = $Reports_TO_Emplid
AND REMAIL.PREF_EMAIL_FLAG = 'Y'
End-Select

If $Prev_Reports_Employee_EmailID = ''
    If $Reports_Employee_EmailID <> ''
				!Let $Prev_Reports_Employee_EmailID = '''' || $Reports_Employee_EmailID || ''''
				Let $Prev_Reports_Employee_EmailID =  $Reports_Employee_EmailID 
				Let $Display_Reports_EmailID = $Reports_Employee_EmailID
		Else
				Let $Prev_Reports_Employee_EmailID = $Prev_Reports_Employee_EmailID
		End-If
Else
		If $Reports_Employee_EmailID <> ''
				!Let $Prev_Reports_Employee_EmailID = $Prev_Reports_Employee_EmailID || ';'|| '''' || $Reports_Employee_EmailID || ''''
				Let $Prev_Reports_Employee_EmailID = $Prev_Reports_Employee_EmailID || ';'|| $Reports_Employee_EmailID 
				let $Display_Reports_EmailID =$Display_Reports_EmailID || ',' || $Reports_Employee_EmailID
		Else
				Let $Prev_Reports_Employee_EmailID = $Prev_Reports_Employee_EmailID
				let $Display_Reports_EmailID = $Display_Reports_EmailID
		End-if
End-If

End-Procedure Get-Reports-To-EmailAddress
!************************************************************************!

!************************************************************************!
!Description: Insert into Notification table.
!************************************************************************!
Begin-Procedure Insert-Into-Notification-Tbl

If $Employee_EmailID = ''
		Let $Employee_EmailID = ' '
End-If

If $ReportsTO_Employee_EmailID = ''
		Let $ReportsTO_Employee_EmailID = ' '
End-If


Begin-SQL

INSERT INTO PS_GEX_EMAIL_NOTFY VALUES 
($Emplid,SYSDATE,'A',$subject, $body, $Employee_EmailID,$ReportsTO_Employee_EmailID, ' ',' ',' ',' ')

End-SQL
End-Procedure Insert-Into-Notification-Tbl
!************************************************************************!

!************************************************************************!
!Description: Print Report
!************************************************************************!
Begin-Procedure Print-Report
If $Employee_EmailID = ' '
		Let $Employee_EmailID = 'Email Address not found.'
End-If

If $Display_Reports_EmailID = ''
		Let $Display_Reports_EmailID = 'Email Address not found.'
End-If

Print $Deptid 											(+1,1)
Print $Name_Report       						(,10)
Print $EmployeeID         					(,45)
Print $Seven_digit_Emplid  					(,55)
Print $Employee_EmailID   					(,65) 
Print $Display_Reports_EmailID   (,95)

End-Procedure Print-Report
!************************************************************************!

!************************************************************************!
!Description: Get 7 Digit Employee ID for the Team Member
!************************************************************************!
Begin-Procedure Get-7digit-Emplid
Begin-Select 
MAP.EMPLID 

	Let $Seven_digit_Emplid = Ltrim(Rtrim(&MAP.EMPLID,' '),' ')

FROM PS_GEX_EMPLID_MAPP MAP 
WHERE MAP.SSN =$EmployeeID
End-Select
End-Procedure Get-7digit-Emplid
!************************************************************************!

!************************************************************************!
!Description: New Page After DeptID breaks.
!************************************************************************!
Begin-Procedure Page-Break-New-Deptid
New-Page
End-Procedure Page-Break-New-Deptid
!************************************************************************!

!************************************************************************!
!Description: Get Email Contents from Message catalogue
!************************************************************************!
Begin-Procedure Get-Subject-Body-Msg
Begin-Select
MESSAGE_TEXT
DESCRLONG 
	
		Let $Email_Subject =  Ltrim(Rtrim(&MESSAGE_TEXT,' '),' ')
		Let $Email_Body =  Ltrim(Rtrim(&DESCRLONG,' '),' ')

FROM PSMSGCATDEFN 
WHERE MESSAGE_SET_NBR = '21000' 
AND MESSAGE_NBR = '100'

End-Select
End-Procedure Get-Subject-Body-Msg
!************************************************************************!

#Include 'readxlat.sqc' !Get translate Values
#include 'datemath.sqc'
#Include 'number.sqc'   !Number formatting routines
#Include 'datetime.sqc' !Date formatting routines
#Include 'curdttim.sqc' !Get-Current-DateTime procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines
#include 'gexxx928.sqc'  !Fetch Benefit Program from run control page
#include 'gexxx902.sqc'  !Fetch Deptid from run control page
#include 'gexxx901.sqc'  !Fetch Company and PayGroup from run control page
#include 'gexxx920.sqc'  !Fetch As of date
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'gexemail.sqc'  !SQC to send email
!**************************** End of Report ********************************