#include 'setenv.sqc' !Set environment#Include 'setup01.sqc'#define  max_gsuffix_size 14 !*********************************************************************begin-report!*********************************************************************  do Init-DateTime  do Init-Number  do Init-Report  do Process-Main  do EOJ  do Stdapi-Termend-report!***********************************************************************begin-procedure Init-Report!***********************************************************************  do Get-Current-DateTime  do Stdapi-Init  do Create-gSuffix-Array  date-time () hh:mi:ss &TimeBegan  date-time () MM/DD/YYYY  &DateBegan  show 'Report Began at ' &TimeBegan ' on '  &DateBeganend-procedure!*********************************************************************begin-procedure Process-Main!*********************************************************************  let $sql-statement = 'Main'begin-SELECT On-Error=SQL-Error-Ep.emplidp.name    let $name = &p.name    let $pd_name = &p.name    Do Rotate-Name        #ifdef debugx    show ' Details after rotation : emplid ' $emplid   noline     show ' name ' $name noline    show ' $FirstName ' $LastName noline    show ' $Middle_Name ' $Middle_Name  noline    show ' $LastName ' $LastName noline    show ' $Suffix ' $Suffix     #end-if    let $middle_name2 = rtrim($middle_name,' ')    if isblank($middle_name2) = 1        let $middle_name2 = ' '    end-if      !show '"' &p.emplid '","' &p.name '","' $FirstName '","' $middle_name2 '","' $LastName '","' $suffix     Do Find-Max-Names-Row        if isblank(&n.name_suffix) = 1 and isblank($suffix) = 0       let $update_suffix = 'Y'    end-if    if isblank(&n.middle_name) = 1 and isblank($middle_name2) = 0       let $update_middle = 'Y'    end-if    !show 'Emplid : '&p.emplid ' name : ' &p.name ' update_middle :'  $update_middle ' update_suffix : '  $update_suffix     if ($update_middle = 'Y' or $update_suffix = 'Y')              if substr($suffix,1,2)  = 'Jr'          let $suffix = 'JR'       end-if       if substr($suffix,1,2)  = 'jr'          let $suffix = 'JR'       end-if       if substr($suffix,1,2)  = 'Sr'          let $suffix = 'SR'       end-if       if substr($suffix,1,2)  = 'sr'          let $suffix = 'SR'       end-if       Do Redo-Name       Do Update-Names       Do Update-Names-PD    end-if    let $update_suffix = 'N'     let $update_suffix = 'N'   FROM PS_personal_data p, ps_job j,     PS_employment e  where  p.EMPLID = j.EMPLID     AND j.emplid = e.emplid     AND j.empl_rcd = e.empl_rcd     AND j.EFFDT =        (SELECT MAX(EFFDT) FROM PS_JOB         WHERE j.EMPLID = EMPLID          AND j.EMPL_RCD = EMPL_RCD          AND EFFDT <= SYSDATE)    AND j.EFFSEQ =        (SELECT MAX(EFFSEQ) FROM PS_JOB        WHERE j.EMPLID = EMPLID          AND j.EMPL_RCD = EMPL_RCD          AND j.EFFDT = EFFDT)     and (j.empl_status in ('A','L','P','S') or         (j.empl_status in ('T','R') and e.termination_dt > '01-JAN-2003'))     !and j.deptid = 'C084'    !and p.emplid = '287581764'    !and p.emplid in ('206609946','164268846','193465251','274723630')    ! and p.emplid in ('181666227','281625158','547730337','198685562')    !and j.empl_status in ('A','L','P','S')!and p.emplid in ('110366034','110624653','110646238','110666580','110689611','112421399','112460337')!vendaxg added for testingorder by p.nameEnd-Selectend-procedurebegin-procedure Rotate-Name  let $FName        = ' '  let $LName        = ' '  let $LastName = ''  let $FirstName = ''  !find last name  let $field = rtrim($Name,' ')  find ',' in $Name  0 #locn  extract $LastName from $Name 0 #locn  !find first name   add 2 to #locn  let $FirstName = {ps-substr}($Name,#locn,51 - #locn)  let #FNlen = length($FirstName)!find middle initial  let $Middle_Name  = ' '  find ' ' in $FirstName 0 #locn  if #locn <> -1    add 1 to #locn    find ' ' in $FirstName #locn #locn1    if #locn1 <> -1       add 1 to #locn1       find ' ' in $FirstName #locn1 #locn2       if #locn2 <> #locn1         extract $Middle_Name from $FirstName #locn1 #FNlen         let $FirstName = substr($FirstName,1,#locn1 - 1)       else         extract $Middle_Name from $FirstName #locn #FNlen         let $FirstName = substr($FirstName,1,#locn - 1)      end-if    else       extract $Middle_Name from $FirstName #locn #FNlen       let $FirstName = substr($FirstName,1,#locn - 1)    end-if  end-if  let $FirstName      = translate($FirstName, '.', '')  let $Middle_Name = translate($Middle_Name, '.', '')  move $LastName      to $Name  do Get-Suffix  let $Suffix = substr($Suffix,1,5)  move $Name       to $LastName  let $FName = {ps-substr}($FirstName, 1, 30)  let $LName = {ps-substr}($LastName, 1, 46)  if RTRIM($Middle_Name, ' ') = ''     let $Middle_Name  = ' '  end-ifend-procedurebegin-procedure Get-Suffix  #debugx show 'IN Get-Suffix'  move ' ' to $Suffix    let #instr_var  = instr($Name, ' ', 0)  #debugx show '#instr_var ' #instr_var  if instr($Name, ' ', 0) > 0    move $Name to $sfxname    #debugx show '$sfxname 1 ' $sfxname    let #len = length($sfxname)    #debugx show '#len ' #len    move 0 to #sfxcount    while #sfxcount < {max_gsuffix_size}      get $sfxsuf from sfxarray(#sfxcount) suffix      #debugx show '$sfxsuf ' $sfxsuf      let #sfxlen = length($sfxsuf)         #debugx show '#sfxlen ' #sfxlen           let #sfxpoint = instr($sfxname,$sfxsuf,#len - #sfxlen + 1)      #debugx show '#sfxpoint ' #sfxpoint      if #sfxpoint > 1        let $sfxnamex = substr($sfxname,1,#sfxpoint - 1)        #debugx show '$sfxnamex ' $sfxnamex        let $sfxname = $sfxnamex        #debugx show '$sfxname ' $sfxname        let #len = length($sfxname)        let $Suffix = substr($sfxsuf,2,#sfxlen)      end-if      let #sfxcount = #sfxcount + 1    end-while    move $sfxname to $Name  end-ifend-procedurebegin-procedure Create-gSuffix-Array  !#define max_gsuffix_size 13  create-array name=sfxarray size = {max_gsuffix_size}    field=suffix:char=' '  put ' JR'    into sfxarray(0) suffix  put ' SR'    into sfxarray(1) suffix  put ' III'   into sfxarray(2) suffix  put ' II'    into sfxarray(3) suffix  put ' IV'    into sfxarray(4) suffix  put ' ESQ'   into sfxarray(5) suffix  put ' MD'    into sfxarray(6) suffix  put ' M.D.'  into sfxarray(7) suffix  put ' PHD'   into sfxarray(8) suffix  put ' PH.D.' into sfxarray(9) suffix  put ' Jr'    into sfxarray(10) suffix  put ' Jr.'   into sfxarray(11) suffix  put ''       into sfxarray(12) suffix  put ''       into sfxarray(13) suffixend-procedure!*********************************************************************begin-procedure Find-Max-Names-Row!*********************************************************************  let $sql-statement = 'Find-Max-Names-Row'begin-SELECT On-Error=SQL-Error-En.effdtn.name_suffixn.middle_namen.last_namen.first_nameFROM PS_NAMES N WHERE N.EMPLID = &P.EMPLID   AND N.NAME_TYPE = 'PRI'   AND N.EFFDT =        (SELECT MAX(EFFDT) FROM PS_NAMES        WHERE N.EMPLID    = EMPLID          AND N.NAME_TYPE = NAME_TYPE          AND EFFDT <= SYSDATE) end-selectend-procedure!********************************************************************begin-procedure Redo-Name!********************************************************************  let $sql-statement = 'Redo-name'  if isblank($suffix) = 0 	!not null     let $name_last  = $LastName  || ' ' || $suffix   else     let $name_last  = $LastName   end-if  if isblank($middle_name2) = 0 	!not null     let $name_first = $FirstName || ' ' || $middle_name2  else     let $name_first = $FirstName  end-if  let $name_final = $name_last || ',' || $name_first  show 'name Fial :'$name_final  do Update-Name-Fieldend-procedure!********************************************************************begin-procedure Update-Names!********************************************************************  let $sql-statement = 'Update-names'Show 'Update Names for Emplid : '&P.emplidbegin-sql On-Error=SQL-Error-EUpdate PS_NAMES     SET name_suffix	= upper($suffix),	middle_name 	= $middle_name2,        last_name       = $LastName,        first_name      = $FirstName,        last_name_srch  = upper($LastName),        first_name_srch = upper($FirstName)    Where  emplid = &P.emplid and       effdt  = &n.effdt      End-SQL         If #sql-status = 0            Let #update_count = #update_count + #sql-count         else             Show 'PS_NAMES did not update - ' $EMPLID         End-ifend-procedure!********************************************************************begin-procedure Update-Names-PD!********************************************************************  let $sql-statement = 'Update-names-PD'Show 'Update Names on Personal Data : '&P.emplidbegin-sql On-Error=SQL-Error-EUpdate PS_PERSONAL_DATA     SET name_suffix	= upper($suffix),	middle_name 	= $middle_name2,        last_name       = $LastName,        first_name      = $FirstName,        last_name_srch  = upper($LastName),        first_name_srch = upper($FirstName)               Where  emplid = &P.emplid      End-SQL         If #sql-status = 0            Let #update_count = #update_count + #sql-count         else             Show 'PS_PERSONAL_DATA did not update - ' $EMPLID         End-ifend-procedure!********************************************************************begin-procedure Update-Name-Field!********************************************************************  let $sql-statement = 'Update-Name-Field'   Show 'Update Names : '&P.emplidbegin-sql On-Error=SQL-Error-EUpdate PS_NAMES     SET name = $name_final   Where  emplid = &P.emplid and       effdt  = &n.effdt      End-SQLbegin-sql On-Error=SQL-Error-EUpdate PS_PERSONAL_DATA     SET name = $name_final             Where  emplid = &P.emplid      End-SQL        end-procedure!************************************************************************begin-procedure SQL-Error-E!************************************************************************Let $Error_message= $sql-statement || ', EMPLOYEE=' || $EMPLID || ' Did not update.'Let $SQL_Error_Msg1 = 'SQL Status: ' || to_char(#sql-status)Let $SQL_Error_Msg2 = 'SQL Error: ' || $sql-errorLet $Reason = $sql-errorshow $Error_messageshow $SQL_Error_Msg1show $SQL_Error_Msg2do Print-error('Sql Error',$Reason)end-procedure!********************************************************************begin-procedure Print-error($Err_Field, $Err_Value)!******************************************************************** write 10 from $Err_Field:30 $Err_Value:15 $_emplid 	end-procedure!***********************************************************************Begin-Procedure EOJ!***********************************************************************        date-time () HH:MI:SS &timeEnded  date-time () MM/DD/YYYY &dateEnded  show 'Report Ended at ' &timeEnded ' on ' &dateEnded  Show 'Successful end of report'End-Procedure#Include 'curdttim.sqc'  !Get-Current-DateTime procedure#Include 'datemath.sqc'  !Does the date-math functions#Include 'datetime.sqc'  !Routines for date and time formatting#Include 'number.sqc'    !Routines to format numbers#Include 'stdapi.sqc'    !Update Process API