!***********************************************************************
! GEXPY209:  This SQR Report clears Assessment Goal Balances for       *
!            Local 507.  For each Local 507 employee (Union_CD - WC5), *
!            the GENL_DEDUCTION Table is read to locate an existing    *
!            Local 507 Assessment row, i.e. DEDCD='AS0507'.            *
!                                                                      *
!            If an Assessment row is found, a new row is inserted with *
!            an Effective Date set to AsOfDate and the Goal Balance    *
!            field (GOAL_BAL) set to 0.  All other fields in the       *
!            existing row are copied forward to the new record.        *
!                                                                      *
!            If no Local 507 Assessment Deduction row exists, the      *
!            employee is written to an Exception Report and processing *
!            for the employee ends.                                    *
!                                                                      *
!            This SQR process runs annually to clear Assessment Goal   *
!            Balances for Local 507.                                   *
!                                                                      *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  COD011    MRP       01/15/2001     INITIAL CREATION                 * 
!            PSR       08/21/2002     Modified to get UNION_CD from JOB*
!            GBD       09/25/2002     v8.3 Upgrade: added fields to    *
!                                     PS_GENL_DEDUCTION select & insert*
!***********************************************************************


#include 'setenv.sqc' !Set environment
#include 'setup32.sqc'

begin-setup
  declare-report Update-Listing
Printer-Type=HPLASERJET
    layout=DEFAULT
  end-declare

  declare-report Report-log
Printer-Type=HPLASERJET
    layout=DEFAULT
  end-declare

  declare-report Summary-report
Printer-Type=HPLASERJET
    layout=DEFAULT
  end-declare

  declare-report Exception-Listing
Printer-Type=HPLASERJET
    layout=DEFAULT
  end-declare
end-setup


!*********************************************************************
begin-heading 6 for-reports=(report-log)
!*********************************************************************
  LET $REPORTID = 'PY209LOG'
  move 'Clear Assessment Balances for Local 507 - Report Log' to $ReportTitle

 #Include 'stdhdg01.sqc'
  Let $X000_temp_out = 'Report as of ' || $X000_REPORT_HEADING_ASOFDATE

  Print $X000_temp_out            (3,)  center
  print 'Trans#'                  (,1)
  print 'Emplid'                  (,18)
  print 'Message'                 (,50)
  print '-'                       (+1,1,174) fill
end-heading


!*********************************************************************
begin-heading 8 for-reports=(Update-Listing)
!*********************************************************************
  move 'GEXPY209' to $ReportID
  move 'Clear Assessment Balances for Local 507 - Annual Update' to $ReportTitle

 #Include 'stdhdg02.sqc'
  Let $X000_temp_out = 'Report as of ' || $X000_REPORT_HEADING_ASOFDATE
  Let $Sub_Hdr_Update = 'Employees Receiving New Assessment Deduction'

  Print $X000_temp_out            (3,)  center
  Print $Sub_Hdr_Update           (+1,) center
  print 'Dept'                    (+2,1)
  print 'Acct'                    (,15)

  print 'Code'                    (+1,1)
  print 'Description'             (,15)
  print 'Name'                    (,32)
  print 'Emplid'                  (,69)
  print '-'                       (+1,1,174) fill
end-heading


!*********************************************************************
begin-heading 9 for-reports=(Exception-Listing)
!*********************************************************************
  move 'GEXPY209' to $ReportID
  move 'Exception Listing for Local 507 Assessment Deduction Update' to $ReportTitle

 #Include 'stdhdg02.sqc'
  Let $X000_temp_out = 'Report as of ' || $X000_REPORT_HEADING_ASOFDATE
  Let $Sub_Hdr1_Bypass = 'Employees Without Existing Assessment Deduction'
  Let $Sub_Hdr2_Bypass = 'NO UPDATE PERFORMED'

  Print $X000_temp_out            (3,)  center
  Print $Sub_Hdr1_Bypass          (+1,) center
  Print $Sub_Hdr2_Bypass          (+1,) center
  print 'Dept'                    (+2,1)
  print 'Acct'                    (,15)

  print 'Code'                    (+1,1)
  print 'Description'             (,15)
  print 'Name'                    (,32)
  print 'Emplid'                  (,69)
  print '-'                       (+1,1,174) fill
end-heading


!*********************************************************************
begin-heading 5 for-reports=(Summary-report)
!*********************************************************************
  LET $REPORTID = 'PY209SUM'
  move 'Clear Assessment Balances for Local 507 - Summary Report' to $ReportTitle

 #Include 'stdhdg01.sqc'
  Let $X000_temp_out = 'Report as of ' || $X000_REPORT_HEADING_ASOFDATE

  Print $X000_temp_out            (3,)  center
  print '-'                       (+1,1,174) fill
end-heading


!*********************************************************************
begin-report
!*********************************************************************
  use-report Update-Listing

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  If $prcs_process_instance = ''
    Do Ask-As-Of-Date
  Else
    Do GEXXX922-Select-Parameters
    Let $AsOfDate = $GEX_RC_PAY.ASOFDATE
    If Rtrim($AsOfDate,' ') = ''
      Let $AsOfDate = $AsOfToday
    End-If
  End-If
  
  let $Year4   = '1'
  Do Format-DateTime($AsOfDate, $X000_REPORT_HEADING_ASOFDATE, {DEFMDY}, '', '')

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan
  show ' '

  do Gexregtp_Init_Strings
  do Get-Date-Codes

  move 0   to #inputtran
  move 'N' to $Empl_found
  move 0   to #recs_read
  move 0   to #recs_inserted
  move 0   to #recs_bypassed

  do Select-Employees
 
  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded

  show ' '
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
  show ' '

  display #InputTran 999,999 noline
  display ' Transactions Processed'

  do Commit-Transaction
  do Create-Summary-Report
  do Stdapi-Term
end-report


!*********************************************************************
begin-procedure Select-Employees
!*********************************************************************
#debug9 Show 'Select-Employees'
begin-select ON-ERROR=SQL-Error-Found
A.COMPANY   ()  ON-BREAK  LEVEL=1  PRINT=NEVER
A.DEPTID   
A.EMPLID
A.EMPL_RCD
A.ACCT_CD
!PSR 08/04/02 
!JL.UNION_CD
!PSR 08/04/02 
PER.NAME

  let $Company = &A.company
  move &A.EMPLID to $emplid
  move 'Y' to $Empl_found
  move 0 to #Assessment_found
  add 1 to #recs_read
  
  let $Name = &PER.NAME
  
  #ifdef debug8 
    show ' '
    show 'emplid  = ' $emplid
    show '   DEPTID  = ' &a.DEPTID
  #endif
  
  do Find-Assessment-Rec

  if #Assessment_found
    add 1 to #inputtran
    do Insert-Assess-Deduction

    if #sql-count
      do Print-Update-Detail
    end-if

  else
    add 1 to #recs_bypassed
    do Print-Exception-Detail
  end-if  

FROM  PS_JOB A,
      PS_PERSONAL_DATA PER
WHERE PER.EMPLID       = A.EMPLID
!PSR 08/02/2002
!  and JL.UNION_CD       IN ('WC5')
  and A.UNION_CD       IN ('WC5')
!PSR 08/02/2002
  and A.EMPL_STATUS NOT IN ('T','R','U','Q')
  and A.EFFDT            =
       (SELECT MAX(EFFDT)
        FROM   PS_JOB
        WHERE EMPLID     = A.EMPLID
          and EMPL_RCD  = A.EMPL_RCD
          and EFFDT     <= $AsOfDate)
  and A.EFFSEQ           =
       (SELECT MAX(EFFSEQ)
        FROM   PS_JOB 
        WHERE EMPLID      = A.EMPLID
          and EMPL_RCD   = A.EMPL_RCD
          and EFFDT       = A.EFFDT)
 ORDER BY A.COMPANY, A.DEPTID, PER.NAME
end-select

   if $Empl_found = 'N'
      Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
   end-if
end-procedure Select-Employees


!*********************************************************************
begin-procedure Find-Assessment-Rec
!  Locate existing Assessment Deduction.
!*********************************************************************
#debug9 Show 'Find-Assessment-Rec'
begin-select on-error=SQL-Error-Found
gen.emplid
gen.dedcd
gen.effdt
gen.ded_calc
gen.deduction_end_dt
gen.ded_addl_amt
gen.ded_rate_pct
gen.GOAL_AMT
gen.GOAL_BAL
gen.loan_int_pct
gen.bas_taxable_ben
gen.ded_stopped
gen.LAST_ACTION
gen.LAST_UPDATE_DATE
GEN.COMPANY
GEN.PROCESS_DEDN
GEN.GVT_DED_DIST_CD
GEN.GVT_PYMNT_METHOD
GEN.GVT_CHK_NAME
GEN.GVT_ADDRESS1
GEN.GVT_ADDRESS2
GEN.GVT_ADDRESS_CITY
GEN.GVT_ADDRESS_STATE
GEN.GVT_ADDRESS_ZIP
GEN.GVT_ADDRESS_CNTRY
GEN.BANK_CD
GEN.ACCOUNT_NUM
GEN.ACCOUNT_TYPE
GEN.GVT_PAYEE_ID_NO
GEN.GVT_PAYEE_NAME
GEN.GVT_ALLOT_PB

  move 1 to #Assessment_found

FROM ps_genl_deduction gen
WHERE gen.emplid    = &a.emplid
  and gen.company   = &a.company                          !GBD 09/25/2002
  and gen.dedcd     = 'AS0507'
  and gen.effdt     = 
         (select max(gen1.effdt) 
          FROM PS_GENL_DEDUCTION gen1
          WHERE gen1.emplid    = gen.emplid
            and gen1.company   = gen.company              !GBD 09/25/2002
            and gen1.dedcd     = gen.dedcd
            and gen1.effdt     < $AsOfDate)
  and gen.deduction_end_dt is null
end-select
end-procedure Find-Assessment-Rec


!*********************************************************************
begin-procedure Insert-Assess-Deduction
!*********************************************************************
#debug9 Show 'Insert-Assess-Deduction for Emplid: ' &a.emplid

  begin-sql on-error=SQL-Error-Found
    Insert into PS_GENL_DEDUCTION
            (EMPLID,
            DEDCD,
            EFFDT,
            DED_CALC,
            DEDUCTION_END_DT,
            DED_ADDL_AMT,
            DED_RATE_PCT,
            GOAL_AMT,
            GOAL_BAL,
            LOAN_INT_PCT,
            BAS_TAXABLE_BEN,
            DED_STOPPED,
            LAST_ACTION,
            LAST_UPDATE_DATE,
            COMPANY,                                      !GBD 09/25/2002 Begin
            PROCESS_DEDN,           
            GVT_DED_DIST_CD,        
            GVT_PYMNT_METHOD,       
            GVT_CHK_NAME,           
            GVT_ADDRESS1,           
            GVT_ADDRESS2,           
            GVT_ADDRESS_CITY,       
            GVT_ADDRESS_STATE,
            GVT_ADDRESS_ZIP,        
            GVT_ADDRESS_CNTRY,
            BANK_CD,                
            ACCOUNT_NUM,            
            ACCOUNT_TYPE,           
            GVT_PAYEE_ID_NO,        
            GVT_PAYEE_NAME,         
            GVT_ALLOT_PB)                                 !GBD 09/25/2002 End
    VALUES
           (&GEN.EMPLID,
            &GEN.DEDCD,
            $AsOfDate,
            &GEN.DED_CALC,
            &GEN.DEDUCTION_END_DT,
            &GEN.DED_ADDL_AMT,
            &GEN.DED_RATE_PCT,
            &GEN.GOAL_AMT,
            0,
            &GEN.LOAN_INT_PCT,
            &GEN.BAS_TAXABLE_BEN,
            &GEN.DED_STOPPED,
            'C',
            $AsOfDate,
            &GEN.COMPANY,                                      !GBD 09/25/2002 Begin
            &GEN.PROCESS_DEDN,           
            &GEN.GVT_DED_DIST_CD,        
            &GEN.GVT_PYMNT_METHOD,       
            &GEN.GVT_CHK_NAME,           
            &GEN.GVT_ADDRESS1,           
            &GEN.GVT_ADDRESS2,           
            &GEN.GVT_ADDRESS_CITY,       
            &GEN.GVT_ADDRESS_STATE,
            &GEN.GVT_ADDRESS_ZIP,        
            &GEN.GVT_ADDRESS_CNTRY,
            &GEN.BANK_CD,                
            &GEN.ACCOUNT_NUM,            
            &GEN.ACCOUNT_TYPE,           
            &GEN.GVT_PAYEE_ID_NO,        
            &GEN.GVT_PAYEE_NAME,         
            &GEN.GVT_ALLOT_PB)                            !GBD 09/25/2002 End
  end-sql

  add #sql-count to #recs_inserted
end-procedure Insert-Assess-Deduction


!*********************************************************************
begin-procedure Print-Update-Detail
!*********************************************************************
#debug9 Show 'Print-Update-Detail'
use-report Update-Listing

  add 1 to #detail_count

  let $Acctcd = &A.ACCT_CD
  Do Get-Acct-cd-descr
  
  print &A.DEPTID                   (+1,1)
  print $AcctNameAbbrv              (,15)
  print $Name                       (,32)
  print &A.EMPLID                   (,69)
end-procedure Print-Update-Detail


!*********************************************************************
begin-procedure Print-Exception-Detail
!*********************************************************************
#debug9 Show 'Print-Exception-Detail'
use-report Exception-Listing

  add 1 to #detail_count

  let $Acctcd = &A.ACCT_CD
  Do Get-Acct-cd-descr
  
  print &A.DEPTID                   (+1,1)
  print $AcctNameAbbrv              (,15)
  print $Name                       (,32)
  print &A.EMPLID                   (,69)
end-procedure Print-Exception-Detail


!*********************************************************************
begin-procedure Create-Summary-Report
!*********************************************************************
#debug9 Show 'Create-Summary-Report'
  use-report Summary-report

  print 'Total Employees Processed:          '         (+1,5)
  print #recs_read                                     (,+2)  edit 99,999
  print 'Total Employees Bypassed:           '         (+1,5)
  print #recs_bypassed                                 (,+2)  edit 99,999
  print 'Total Assessment Records Inserted:  '         (+1,5)
  print #recs_inserted                                 (,+2)  edit 99,999
  print 'Total SQL Errors Encountered:       '         (+1,5)
  print #sql_error_count                               (,+2)  edit 99,999
end-procedure Create-Summary-Report


!*********************************************************************
begin-procedure SQL-Error-Found
!*********************************************************************
#debug9 Show 'SQL-Error-Found'
  move $EmplId to $Format_EmplId xxx-xx-xxxx
  move 'Y' to $ErrorFound
  do Format-Number(#InputTran, $out, '99999')
  
  use-report report-log

  print $out         (+1,1)
  print $EmplID      (,18)
  print $sql-error   (,35) 
  
  add 1 to #sql_error_count
end-procedure SQL-Error-Found


#Include 'gexxx922.sqc'  !Get GEX_RC_PAY run control parameters
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getdatcd.sqc'  !Retrieves the asofyear, asofmonth etc.,
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'askaod.sqc'    !Ask-As-Of-Date routine
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#include 'gexregtp.sqc'  !Translates the REG_TEMP to Full_Part_time
#include 'getdptnm.sqc'  !Get department name
#include 'getactnm.sqc'  !Get account name
#include 'getcodta.sqc'  !Get company data
#Include 'getempnm.sqc'  !Get-Employee-Name
