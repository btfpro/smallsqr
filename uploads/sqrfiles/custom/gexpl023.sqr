!***********************************************************************
! GEXPL023:  Union Contract Costing File                               *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPL023 :            Union Contract Costing File                    *
!                                                                      *
! Narrative:            This SQR is designed to create a file based on *
!                       run control parms.  The file will include      *
!                       head counts & corresponding earnings hrs for   *
!                       active & termed employees for a given time     *
!                       period.  Data will be categorized by length    *
!                       of service levels.                             *                                                                      *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                                                                      *
! SQL Tables:           pay_earnings                                   *
!                       pay_oth_earns                                  *
!                       job                                            *
!                       job_labor                                      *
!                                                                      *
! Written by:           Tony Labra                                     *
!                                                                      *
! Normally Run:         On Demand                                      *
!                                                                      *
! Control Parms:        NONE                                           *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE       DESCRIPTION OF THE CHANGE                       *
!***********************************************************************
! AXL       11/08/2001 Initial Creation                                *
!                                                                      *
! PSR       08/12/2002  Modified UNION_CD FROM JOB_LABOR TO JOB        * 
!                       - Upgrade 8.3                                  *
!***********************************************************************

#include 'setenv.sqc'    !Set environment

!***********************************************************************
Begin-Report
!***********************************************************************
#debug9 Show 'Begin-Report'

  Do Initialization
  Do Open-File
  Do Truncate-Temp-Tbl
  Do Main
  Do Create-Out-File

  Do Finalization

End-Report

!***********************************************************************
Begin-Procedure Initialization
!***********************************************************************
#debug9 Show 'Initialization'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXPL023'
  Let $ReportTitle   =   'Union Contract Costing'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  display ' '
  show 'Report Began at ' &timeBegan ' on ' &dateBegan
  display ' '

  Let $GEXXX902_Deptid_Alias         	= 'J.DEPTID' 
  Let $GEXXX904_Grade_Alias          	= 'J.GRADE'
  Let $GEXXX904_Sal_Admin_Plan_Alias 	= 'J.SAL_ADMIN_PLAN'        
  Let $GEXXX913_Union_cd_Alias 		= 'J.UNION_CD'
  Let $GEXXX916_Jobcode_Alias  		= 'J.JOBCODE'
  Let $GEXXX924_Erncd_Alias    		= 'B.ERNCD'
 
  if $prcs_process_instance = ''
    do Ask-From-Thru-Date
    do SQRW-Run-Controls
  else
    do Process-Scheduler-Run-Controls
  End-if

  Show 'FROM DATE                                   = ' $FromDate
  Show 'THRU DATE                                   = ' $ThruDate
  Show '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA   = ' $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA
  Show '$GEXXX904_INCLUDE_GRADE_DISPLAY_CRITERIA    = ' $GEXXX904_INCLUDE_GRADE_DISPLAY_CRITERIA
  Show '$GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = ' $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA  
  Show '$GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA  = ' $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA
  Show '$GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA  = ' $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x
  show '$GEXXX924_INCLUDE_ERNCD_CRITERIA            = ' $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA

End-Procedure

!***********************************************************************
Begin-Procedure SQRW-Run-Controls 
!***********************************************************************
  
  Let $UnionCdString = ''''
  Display 'Enter Union Code or leave blank to exit.'
  While 1=1
    Input $In-UnionCd Maxlen=3 'Union Code'
    Uppercase $In-UnionCd
    If Rtrim($In-UnionCd, ' ') = ''
      Concat '''' With $UnionCdString
      Break
    End-If
    If $UnionCdString <> ''''
      Concat ''',''' With $UnionCdString
    End-If
    Concat $In-UnionCd With $UnionCdString
  End-While

  If $UnionCdString = ''''''
    Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = '1=1'
    Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = $GEXXX913_Union_CD_Alias || ' In (' || $UnionCdString || ')'
    Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = $GEXXX913_INCLUDE_UNION_CD_CRITERIA
  End-If

  Let $DeptIDString = ''''
  Display 'Enter DeptID or leave blank to exit.'
  While 1=1
    Input $In-DeptID Maxlen=10 'DeptID'
    Uppercase $In-DeptID
    If Rtrim($In-DeptID, ' ') = ''
      Concat '''' With $DeptIDString
      Break
    End-If
    If $DeptIDString <> ''''
      Concat ''',''' With $DeptIDString
    End-If
    Concat $In-DeptID With $DeptIDString
  End-While

  If $DeptIDString = ''''''
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' In (' || $DeptIDString || ')'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_INCLUDE_DEPTID_CRITERIA
  End-If

  While 1=1
    Input $Gex_Incl_Excl Maxlen=1 '(I)nclude Jobs / (E)xclude Jobs / (A)ll Jobs'
    Uppercase $Gex_Incl_Excl
    If $Gex_Incl_Excl = 'I' 
       Do Ask-For-Incl-Jobs
       Break
    Else
      If $Gex_Incl_Excl = 'E'
         Do Ask-For-Excl-Jobs
         Break
      Else
        Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '1=1'
        Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'
        Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = '1=1'
        Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = 'NONE'
        Break
      End-if
    End-If
  End-While

  Display 'Enter Grade/Sal Admin Plan or leave blank to exit.'
  While 1=1
    Input $In-Grade Maxlen=3 'Grade'
    Uppercase $In-Grade
    If Rtrim($In-Grade, ' ') = ''
      Break
    Else
      Input $In-SalPlan Maxlen=3 'Sal Admin Plan'
      Uppercase $In-SalPlan
      If Rtrim($In-SalPlan, ' ') = ''
        Let $Include_Condition = '(' || $GEXXX904_Grade_Alias || ' = '''  || $In-Grade || ''')'
      Else
        Let $Include_Condition = '(' || $GEXXX904_Grade_Alias || ' = '''  || $In-Grade || ''' And ' || $GEXXX904_Sal_Admin_Plan_Alias || ' = '''  || $In-SalPlan || ''')'
      End-If
      Add 1 To #GEX_RC_GRADE_ROWS
      If #GEX_RC_GRADE_ROWS = 1
        Let $GEXXX904_INCLUDE_GRADE_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX904_INCLUDE_GRADE_CRITERIA = $GEXXX904_INCLUDE_GRADE_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While

  If #GEX_RC_GRADE_ROWS = 0
    Let $GEXXX904_INCLUDE_GRADE_CRITERIA = '1=1'
    Let $GEXXX904_INCLUDE_GRADE_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX904_INCLUDE_GRADE_CRITERIA = $GEXXX904_INCLUDE_GRADE_CRITERIA || ')'
    Let $GEXXX904_INCLUDE_GRADE_DISPLAY_CRITERIA = $GEXXX904_INCLUDE_GRADE_CRITERIA
  End-If

  Display 'Enter Earnings Codes(s) or leave blank to exit.'
  While 1=1
    Input $In-Erncd Maxlen=3 'Earnings Code'
    Uppercase $In-Erncd
    If Rtrim($In-Erncd, ' ') = ''
      Break
    Else
        Let $Include_Condition = '(' || $GEXXX924_Erncd_Alias || ' = '''  || $In-Erncd || ''')'
      Add 1 To #GEX_RC_ERNCD_ROWS
      If #GEX_RC_ERNCD_ROWS = 1
        Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = $GEXXX924_INCLUDE_ERNCD_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While 

 If #GEX_RC_ERNCD_ROWS = 0
    Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = '1=1'
    Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'ALL'
 Else
    Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = $GEXXX924_INCLUDE_ERNCD_CRITERIA || ')'
    Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = $GEXXX924_INCLUDE_ERNCD_CRITERIA
  End-If
  
End-Procedure

!***********************************************************************
Begin-Procedure Ask-For-Incl-Jobs
!***********************************************************************
#debug9 show 'Ask-For-Incl-Jobs'

Let $JobcodeString = ''''
  Display 'Enter Jobcodes to INCLUDE or leave blank to exit.'
  While 1=1
    Input $In-Jobcode Maxlen=6 'Jobcode'
    Uppercase $In-Jobcode
    If Rtrim($In-Jobcode, ' ') = ''
      Concat '''' With $JobcodeString
      Break
    End-If
    If $JobcodeString <> ''''
      Concat ''',''' With $JobcodeString
    End-If
    Concat $In-Jobcode With $JobcodeString
  End-While

  If $JobcodeString = ''''''
    Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '1=1'
    Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = $GEXXX916_Jobcode_Alias || ' In (' || $JobcodeString || ')'
    Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = $GEXXX916_INCLUDE_JOBCODE_CRITERIA
  End-If
  
  Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = '1=1'
  Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = 'NONE'
  
End-Procedure

!***********************************************************************
Begin-Procedure Ask-For-Excl-Jobs
!***********************************************************************
#debug9 show 'Ask-For-Excl-Jobs'

  Let $JobcodeString = ''''
  Display 'Enter Jobcodes to EXCLUDE or leave blank to exit.'
  While 1=1
    Input $In-Jobcode Maxlen=6 'Jobcode'
    Uppercase $In-Jobcode
    If Rtrim($In-Jobcode, ' ') = ''
      Concat '''' With $JobcodeString
      Break
    End-If
    If $JobcodeString <> ''''
      Concat ''',''' With $JobcodeString
    End-If
    Concat $In-Jobcode With $JobcodeString
  End-While

  If $JobcodeString = ''''''
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = '1=1'
    Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = 'NONE'
  Else
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = $GEXXX916_Jobcode_Alias || ' Not In (' || $JobcodeString || ')'
    Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x
  End-If
  
  Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '1=1'
  Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'

End-Procedure

!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls 
!***********************************************************************

  Do GEXXX922-Select-Parameters
  let  $FromDate = $GEX_RC_PAY.FromDate
  let  $ThruDate = $GEX_RC_PAY.ThruDate
  
  Evaluate &GEX_RC_PAY.Gex_Incl_Excl
  
     When = 'I'

        Do GEXXX916-Select-Jobcode-Parameters 
        Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = '1=1'
        Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = 'NONE'
        Break
        
     When = 'E'

        Do GEXXX916-Select-Jobcode-Parameters
        Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '1=1'
        Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'NONE'
        Break
        
     When-Other
     
        Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA   = '1=1'
        Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = '1=1'
        Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'
        Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = 'NONE'
   
  End-Evaluate

  Do GEXXX902-Select-Deptid-Parameters
  Do GEXXX904-Select-Grade-Parameters
  Do GEXXX913-Select-UNION-CD-Parameters
  Do GEXXX924-Select-ERNCD-Parameters
  
End-Procedure

!***********************************************************************
begin-procedure Open-File
!***********************************************************************

  let $file1 = '{OUTFILE}' || lower($ReportID) || '.dat'

  open $file1 as 1 for-writing
        record=100:fixed	
        status=#filestat
  if #filestat < 0
     display 'Open failed for file <' noline
     display $file1 noline
     display '>'
     stop
  end-if

  write 1 from ' ':20      ! line 1
               'Active':10
               'Active':15
               'Term':10      
               'Term':15              

  write 1 from 'Category':20      ! line 2
               'Head Cnt':10
               'Hours':15
               'Head Cnt':10
               'Hours':15
               
end-procedure

!*********************************************************************
begin-procedure Truncate-Temp-Tbl
!*********************************************************************

begin-sql 

delete from sysadm.ps_gex_r_gexpl023

end-sql

end-procedure

!*********************************************************************
Begin-Procedure Main
!*********************************************************************
#debug9 Show 'Main'

  #debug8 show $GEXXX902_INCLUDE_DEPTID_CRITERIA
  #debug8 show $GEXXX904_INCLUDE_GRADE_CRITERIA
  #debug8 show $GEXXX913_INCLUDE_UNION_CD_CRITERIA
  #debug8 show $GEXXX916_Include_Jobcode_Criteria
  #debug8 show $GEXXX916_Exclude_Jobcode_Criteria_x

Begin-SELECT

J.EMPLID
J.EMPL_STATUS

E.SERVICE_DT
E.TERMINATION_DT

     Evaluate &J.Empl_status
        When = 'A'
        When = 'L'
        When = 'P'
        When = 'S'
           let $sts = 'A'
           break
        When-other 
	   let $sts = 'T'
           break
     End-Evaluate
         
     let #mths = datediff(strtodate($fromdate,'DD-MON-YYYY'), &e.service_dt, 'MONTH')

     Do Get-Hrs
     Do Evaluate-Emps
     #debug8 show 'emplid sts svc dt termdt categ actv_cnt term_cnt ' &J.EMPLID ' ' &J.EMPL_STATUS ' ' &E.SERVICE_DT ' ' &E.TERMINATION_DT ' ' $category ' ' $sts
     Do Insert-Temp-Table

FROM PS_JOB J,
     PS_EMPLOYMENT E

WHERE   J.EMPLID     =  E.EMPLID
    AND J.EMPL_RCD   =  E.EMPL_RCD
    AND J.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB
        WHERE J.EMPLID    = EMPLID
          AND J.EMPL_RCD = EMPL_RCD
          AND EFFDT       <= $THRUDATE)
    AND J.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE J.EMPLID    = EMPLID
          AND J.EMPL_RCD = EMPL_RCD
          AND J.EFFDT     = EFFDT)
    
    AND (E.TERMINATION_DT IS NULL OR
        (E.TERMINATION_DT between $FROMDATE and $THRUDATE) )
   
    AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
    AND [$GEXXX904_INCLUDE_GRADE_CRITERIA]
    AND [$GEXXX913_INCLUDE_UNION_CD_CRITERIA]
    And [$GEXXX916_Include_Jobcode_Criteria]
    And [$GEXXX916_Exclude_Jobcode_Criteria_x]
    
End-SELECT
  
End-Procedure

!*********************************************************************
begin-procedure Get-Hrs
!*********************************************************************

    let #hrs = 0

begin-SELECT

sum(B.OTH_HRS) &sum_hrs
 
    let #hrs = &sum_hrs

    #debug8 show 'oth erns ' &j.emplid  ' ' #hrs

FROM PS_PAY_EARNINGS A, PS_PAY_OTH_EARNS B
  WHERE B.COMPANY    = A.COMPANY
    AND B.PAYGROUP   = A.PAYGROUP
    AND B.PAY_END_DT = A.PAY_END_DT
    AND B.OFF_CYCLE  = A.OFF_CYCLE
    AND B.PAGE_NUM      = A.PAGE_NUM
    AND B.LINE_NUM      = A.LINE_NUM
    AND B.ADDL_NBR      = A.ADDL_NBR
    !??AND P.OFF_CYCLE = 'N' 
    AND A.EMPLID     = &j.emplid
    AND A.PAY_END_DT BETWEEN $fromdate and $thrudate
    AND B.OTH_HRS <> 0 
    AND [$GEXXX924_INCLUDE_ERNCD_CRITERIA]
 
end-SELECT

end-procedure

!*********************************************************************
begin-procedure Evaluate-Emps
!*********************************************************************

     let #actv_hrs = 0
     let #actv_cnt = 0
     let #term_hrs = 0
     let #term_cnt = 0

     ! 1st 30 Days
     if #mths <=1
        let $category = '1: 1st 30'
        if $sts = 'A'
           let #actv_hrs = #hrs
           let #actv_cnt = 1
        else
           let #term_hrs = #hrs
           let #term_cnt = 1
        end-if
     end-if

     ! 31 Days - 6 Mos
     if #mths > 1 and #mths <= 6
        let $category = '2: 2 - 6'
        if $sts = 'A'
           let #actv_hrs = #hrs
           let #actv_cnt = 1
        else
           let #term_hrs = #hrs
           let #term_cnt = 1
        end-if
     end-if

     ! 7 - 12 Mos
     if #mths > 6 and #mths <= 12
        let $category = '3: 6 - 12'
        if $sts = 'A'
           let #actv_hrs = #hrs
           let #actv_cnt = 1
        else
           let #term_hrs = #hrs
           let #term_cnt = 1
        end-if
     end-if

     ! 13 - 18 Mos
     if #mths > 12 and #mths <= 18
        let $category = '4: 12 - 18'
        if $sts = 'A'
           let #actv_hrs = #hrs
           let #actv_cnt = 1
        else
           let #term_hrs = #hrs
           let #term_cnt = 1
        end-if
     end-if

     ! 19 - 24 Mos
     if #mths > 18 and #mths <= 24
        let $category = '5: 18 - 24'
        if $sts = 'A'
           let #actv_hrs = #hrs
           let #actv_cnt = 1
        else
           let #term_hrs = #hrs
           let #term_cnt = 1
        end-if
     end-if

     ! 25 - 30 Mos
     if #mths > 24 and #mths <= 30
        let $category = '6: 24 - 30'
        if $sts = 'A'
           let #actv_hrs = #hrs
           let #actv_cnt = 1
        else
           let #term_hrs = #hrs
           let #term_cnt = 1
        end-if
     end-if

     ! 31 - 36 Mos
     if #mths > 30 and #mths <= 36
        let $category = '7: 30 - 36'
        if $sts = 'A'
           let #actv_hrs = #hrs
           let #actv_cnt = 1
        else
           let #term_hrs = #hrs
           let #term_cnt = 1
        end-if
     end-if

     ! 37 - 42 Mos
     if #mths > 36 and #mths <= 42
        let $category = '8: 37 - 42'
        if $sts = 'A'
           let #actv_hrs = #hrs
           let #actv_cnt = 1
        else
           let #term_hrs = #hrs
           let #term_cnt = 1
        end-if
     end-if

     ! > 42 Mos
     if #mths > 42
        let $category = '9: > 42'
        if $sts = 'A'
           let #actv_hrs = #hrs
           let #actv_cnt = 1        
        else
           let #term_hrs = #hrs
           let #term_cnt = 1  
        end-if
     end-if
   
end-procedure

!***********************************************************************
Begin-Procedure Insert-Temp-Table
!***********************************************************************

   let $actv_cnt_ins = edit(#actv_cnt,'999999')
   let $actv_hrs_ins = edit(#actv_hrs,'999999999.99')
   let $term_cnt_ins = edit(#term_cnt,'99999')
   let $term_hrs_ins = edit(#term_hrs,'999999999.99')

Begin-SQL  
  Insert Into sysadm.ps_gex_r_gexpl023
    Values ($category,
            $actv_cnt_ins,
            $actv_hrs_ins,
            $term_cnt_ins,
            $term_hrs_ins)

End-SQL

End-Procedure

!*********************************************************************
begin-procedure Create-Out-File
!*********************************************************************
  let $sql-statement = 'Create-Out-File'

begin-select

tmp.category
sum(tmp.head_count)  	&acnt
sum(tmp.gex_actv_hrs)  	&ahrs
sum(tmp.term)  		&tcnt
sum(tmp.gex_term_hrs)	&thrs

   Do Write-Record

FROM sysadm.PS_GEX_R_GEXPL023 TMP

group by TMP.CATEGORY
order by TMP.CATEGORY
  

End-Select

End-Procedure

!***********************************************************************
Begin-Procedure Write-Record
!***********************************************************************
  
  write 1 from &tmp.category:20
               &acnt:10
               &ahrs:15
               &TCNT:10        
               &thrs:15
                          
End-Procedure

!***********************************************************************
Begin-Procedure GEXXX916-Select-Jobcode-Parameters_x
!***********************************************************************

  Let $OprID               = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID         = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_JOBCODE_ROWS = 0
  Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = ''
  Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = 'NONE'

Begin-Select

GEX_RC_JOBCODE2.JOBCODE

  Add 1 To #GEX_RC_JOBCODE_ROWS

  If #GEX_RC_JOBCODE_ROWS = 1
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = '(' || $GEXXX916_Jobcode_Alias || ' Not In (''' || &GEX_RC_JOBCODE2.JOBCODE || ''''
  Else
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x || ',''' || &GEX_RC_JOBCODE2.JOBCODE  || ''''
  End-If

From  PS_GEX_RC_JOBCODE GEX_RC_JOBCODE2

Where GEX_RC_JOBCODE2.OPRID                = [$OprID]
And   GEX_RC_JOBCODE2.RUN_CNTL_ID          = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_JOBCODE2.JOBCODE, ' ') != ' '

End-Select

  If #GEX_RC_JOBCODE_ROWS = 0
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = $GEXXX916_Jobcode_Alias || ' = ' || $GEXXX916_Jobcode_Alias
  Else
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x || '))'
    Let $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA_x = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA_x
  End-If

End-Procedure

!*********************************************************************
Begin-Procedure Finalization
#debug9 Show 'Finalization'

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  display ' '
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
  Show 'Successful end of report'

  Close 1

End-Procedure

!********************************************************************
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx902.sqc'  !Get Deptid
#include 'gexxx904.sqc'	 !Get Grade/Plan -Parameters
#Include 'askftd.sqc'    !Ask-From-Thru-Date procedu
#include 'gexxx913.sqc'  !Get Job code
#include 'gexxx916.sqc'  !Get jobcode multiple row table
#include 'gexxx924.sqc'  !Get Earn cd
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
