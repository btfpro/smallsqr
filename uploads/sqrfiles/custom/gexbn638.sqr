!********************************************************************!
!XXXBAS.SQR - XXX BAS_PARTIC DATA EXTRACT                            !
!********************************************************************!
!         !!!!!  This version is for HR 9.0 PeopleSoft !!!!!         !
!********************************************************************!
!                                                                    !
!Description - This program is designed to export data from Ben      ! 
!              Admin prepared data only.  Any employee outside the   !
!              Ben Admin schedule will not be included in the files. !
!              (PeopleSoft to Univers)                               !
!                                                                    !
!Database Tables:                                                    !
!                 PS_BAS_PARTIC           SELECT                     !
!                 PS_BAS_PARTIC_COST      SELECT                     !
!                 PS_BAS_PARTIC_PLAN      SELECT                     !
!                 PS_BAS_PARTIC_DPND      SELECT                     !
!                 PS_BAS_PARTIC_OPTN      SELECT                     !
!                 PS_CBP_RUN_XXXBAS       SELECT                     !
!                 PS_COVRG_CD_TBL         SELECT                     !
!                 PS_DEP_BEN              SELECT                     !
!                 PS_DEP_BEN_EFF          SELECT                     !
!                 PS_DEP_BEN_NAME         SELECT                     !
!                 PS_DEP_BENEF_NID        SELECT                     !
!                 PS_PERSON               SELECT                     !
!                 PS_PERSON_NAME          SELECT                     !
!                 PS_PERS_DATA_EFFDT      SELECT                     !
!                 PS_PERS_NID             SELECT                     !
!                 PS_BEN_DEFN_OPTN        SELECT                     !
!                 PS_BENEF_PLAN_TBL       SELECT                     !
!                                                                    !
!                                                                    !
!Runtime Prompts: Run Mode (by Schedule ID, then by Status Date, or  !
!                           by Emplid)                               !
!                 Output File location                               !
!                                                                    !
!Output: 2 files; Current Enrollment and Benefit Options             !
!                                                                    !
!********************************************************************!
!Author    Setree,Sandy    Crestone International, Inc.              !
!Created                                                             !
!********************************************************************!
!
! Date       programmer                    Modification
! ----       ----------     --------------------------------------------
!
!***********************************************************************

!-----------------------------------------------------------------------
!   Set Environment                                                    -
!-----------------------------------------------------------------------
#include 'setenv.sqc'    !Set environment
#include 'setup01.sqc'   !Printer and page-size initialization


!-----------------------------------------------------------------------
!  Report Calls                                                        -
!-----------------------------------------------------------------------
begin-report

        do init-number
        do init-datetime
        do get-current-datetime
        do Init-Report
        show ' '
        display 'Start Run Time: ' noline
        do display-time
        
        do Clear-Variables
        do Clear-Dependent-Variables
        
        display 'Extracting Data From PeopleSoft Benefits Administration ' noline
        do display-time

        do open-files
        !do Create-Current-Enrollment-File !GEX001
        do Create-Benefit-Options-File
        do close-files
        
        show ' '
        display 'End Run Time: ' noline
        do display-time
        do Stdapi-Term

end-report


!-----------------------------------------------------------------------
! Function:    display-time                                            -
! Description: gets current date time and displays it                  -
! Called By:   Report                                                  -
! Calls:       get-current-datetime                                    -
!-----------------------------------------------------------------------
begin-procedure display-time

        do get-current-datetime
        display $asofnow
        show ' '
        
end-procedure


!-----------------------------------------------------------------------
! Function:    Init-Report                                             -
! Description: this section initializes all the variables              -
! Called By:   Report                                                  -
! Calls:       Select-Parameters, Ask-Values                           -
!-----------------------------------------------------------------------
begin-procedure Init-Report

  move 'XXX Bas Partic'   to $ReportID
  move 'Benefits Enrollment Outbound Process File Creation ' to $ReportTitle
  display $ReportTitle

  do Stdapi-Init

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-prcsoutputdir !procedure to get the output destination
    do Select-Parameters
  end-if

   Let $Quote = '"'
   Let $Comma = ','

end-procedure Init-Report


!-----------------------------------------------------------------------
! Function:    ASK-VALUES                                              -
! Description: Obtain input values upon execution using SQRW.          -
! Called By:   Init-Report                                             -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure ask-values
#debugd show 'Ask-Values'

  input $IN_Sched_Id    maxlen=6  'Enter the Schedule ID to process: MUST BE ENTERED ' type=char
  input $IN_Status_Dt   maxlen=11 'Enter the Status Date to Process, MM-DD-YYYY or leave blank for all' type=date
  input $IN_Emplid      maxlen=11 'Enter the Emplid process or leave blank for all: ' type=char
  input $File_Path      maxlen=127 'Enter the File Path for the output files: ex: c:\temp\' type=char  

 !File Path Default 
  If $File_Path = ' ' or $File_Path = ''
     Let $File_Path = 'C:\Temp\'
  End-If

  Let $Current_Enrollment_File = $File_Path || 'bas_curenrl_file.csv' !GEX001
  Let $Benefit_Options_File    = $File_Path || 'bas_benoptns_file.csv'

 !Sched_ID is Required.
  If $IN_Sched_ID = ' ' or $IN_Sched_ID = ''
     Display 'Schedule ID MUST BE Entered'
     input $IN_Sched_Id    maxlen=6  'Enter the Schedule ID to process: ' type=char
  End-If

  If $IN_Sched_ID = ' ' or $IN_Sched_ID = ''
     Display 'Schedule ID was not entered, stopping program'
     stop quiet
  End-If

  If $IN_Sched_ID <> '' and $In_Sched_ID <> ' '
     Let $Where  = 'WHERE B.SCHED_ID = ' || $IN_Sched_ID
     Let $Where2 = 'WHERE O.SCHED_ID = ' || $IN_Sched_ID
  End-If
  
  If $IN_Status_Dt <> '' and $In_Status_Dt <> ' '
     Let $Where  = $Where  || ' AND B.STATUS_DT = ' || $IN_Status_Dt
     Let $Where2 = $Where2 || ' AND O.STATUS_DT = ' || $IN_Status_Dt
  End-If

  If $IN_Emplid <> '' and $In_Emplid <> ' '
     Let $Where  = $Where  || ' AND B.EMPLID = ' || $IN_Emplid
     Let $Where2 = $Where2 || ' AND O.EMPLID = ' || $IN_Emplid
  End-If

  show ' '
  show '*** Input Parameters ***'
  show '$In_Sched_Id  = ' $In_Sched_ID
  show '$In_Status_Dt = ' $In_Status_Dt
  show '$In_Empid     = ' $In_Emplid
  show '$File_Path    = ' $File_Path
  show ' '
  show '*** File Locations ***'
  show $Current_Enrollment_File 
  show $Benefit_Options_File 
  show ' '
  show '*** Dynamic Where Clauses ***'
  show '$Where  = ' $Where 
  show '$Where2 = ' $Where2
  show ' '

end-procedure


!-----------------------------------------------------------------------
! Function:    Select-Parameters                                       -
! Description: Select Values from Run Control                          -
! Called By:   Init-Report                                             -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Select-Parameters
#debugd show 'Select-Parameters'

 show '$prcs_run_cntl_id = ' $prcs_run_cntl_id
 show '$prcs_oprid       = ' $prcs_oprid

BEGIN-SELECT
RC.SCHED_ID
RC.STATUS_DT
RC.EMPLID
RC.FILE_PATH
RC.RUNDATE

   let $IN_Sched_Id  = &RC.SCHED_ID
   let $IN_Status_Dt = &RC.STATUS_DT
   let $IN_Emplid    = &RC.EMPLID
   let $File_Path    = &RC.FILE_PATH

   !let $Current_Enrollment_File = &RC.FILE_PATH || 'bas_curenrl_file.csv'       !Bas Partic Current Enrollment File
   let $Benefit_Options_File    = $origoutdest || 'bas_benoptns_file.csv'      !Bas Partic Benefit Options File
   
    if ISNULL(&RC.RUNDATE)
      MOVE $ASOFTODAY TO $RUNDATE
    ELSE  
      MOVE &RC.RUNDATE TO $RUNDATE
    END-IF  
    show '&RC.RUNDATE :' &RC.RUNDATE
    show '$RUNDATE    :' $RUNDATE
   
FROM PS_CBP_RUN_XXXBAS RC
WHERE RC.oprid       = $prcs_oprid
  AND RC.run_cntl_id = $prcs_run_cntl_id
END-SELECT

  If $IN_Sched_ID <> '' and $In_Sched_ID <> ' '
     Let $Where  = 'WHERE B.SCHED_ID = ' || '''' || $IN_Sched_ID || ''''
     Let $Where2 = 'WHERE O.SCHED_ID = ' || '''' || $IN_Sched_ID || ''''
  End-If
  
  If $IN_Status_Dt <> '' and $In_Status_Dt <> ' '
     Let $Where  = $Where  || ' AND B.STATUS_DT = ' || '''' || $IN_Status_Dt || ''''
     Let $Where2 = $Where2 || ' AND O.STATUS_DT = ' || '''' || $IN_Status_Dt || ''''
  End-If

  If $IN_Emplid <> '' and $In_Emplid <> ' '
     Let $Where  = $Where  || ' AND B.EMPLID = ' || '''' || $IN_Emplid || ''''
     Let $Where2 = $Where2 || ' AND O.EMPLID = ' || '''' || $IN_Emplid || ''''
  End-If

  show ' '
  show '*** Run Control Parameters ***'
  show '$In_Sched_Id  = ' $In_Sched_ID
  show '$In_Status_Dt = ' $In_Status_Dt
  show '$In_Empid     = ' $In_Emplid
  show '$File_Path    = ' $File_Path
  show ' '
  show '*** File Locations ***'
  show $Current_Enrollment_File 
  show $Benefit_Options_File 
  show ' '
  show '*** Dynamic Where Clauses ***'
  show '$Where  = ' $Where 
  show '$Where2 = ' $Where2
  show ' '

end-procedure !Select-Parameters


!-----------------------------------------------------------------------
! Function:    Open-Files                                              -
! Description: Opens Files for Writing                                 -
! Called By:   Report                                                  -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure open-files

 !Open the Current Enrollment File
   !open $Current_Enrollment_File as 1 for-writing record=1100:fixed status=#filestatus1

     !if #filestatus1 = -1
     !  show ' '
     !  show ' '
     !  show ' ***** WARNING ***** Open for ' $Current_Enrollment_File ' in program ' $report_name ' failed.'
     !  show ' '
     !  show ' '
     !  stop quiet
     !else
     !  let $error_flag = 'N'
     !  show ' '
     !  show 'File Opened for Writing: ' $Current_Enrollment_File
     !end-if

 !Open the Benefit Options file
   open $Benefit_Options_File as 2 for-writing record=1100:fixed status=#filestatus2

     if #filestatus2 = -1
       show ' '
       show ' '
       show ' ***** WARNING ***** Open for ' $Benefit_Options_File ' in program ' $report_name ' failed.'
       show ' '
       show ' '
       stop quiet
     else
       let $error_flag = 'N'
       show ' '
       show 'File Opened for Writing: ' $Benefit_Options_File
       show ' '
     end-if

end-procedure open-files


!-----------------------------------------------------------------------
! Function:    Close-Files                                             -
! Description: Closes Files                                            -
! Called By:   Report                                                  -
! Calls:       None                                                    -
! Parameters:  #file_num                                               - 
!-----------------------------------------------------------------------
begin-procedure close-files

!close 1
close 2

end-procedure close-files


!-----------------------------------------------------------------------
! Function:    Create-Current-Enrollment-File                          -
! Description: select current enrollment data and create the file      -
! Called By:   Report                                                  -
! Calls:       Write-Current-Enrollment-File-Header                    -
!              Get-PersNid                                             -
!              Get-Per1                                                -
!              Get-Per2                                                -
!              Get-Per3                                                -
!              Get-Dependent-Data                                      -
!              Write-Current-Enrollment-File                           -
!              Clear-Variables                                         -
!              Clear-Dependent-Variables                               -
!-----------------------------------------------------------------------
begin-procedure Create-Current-Enrollment-File
#debugd show 'Create-Current-Enrollment-File'
Do Write-Current-Enrollment-File-Header

BEGIN-SELECT
B.SCHED_ID
B.EMPLID
B.BENEFIT_RCD_NBR
B.EVENT_ID
B.STATUS_DT
B.EVENT_CLASS
B.BAS_PROCESS_STATUS
BP.PLAN_TYPE
BP.BENEFIT_PROGRAM
BP.EVENT_DT
BP.COVERAGE_ELECT
BP.ELECT_ALLOWED
BP.OPTION_CD
BP.EMPL_CONTRBUTN_AMT
BP.ANNUAL_PLEDGE
BP.GOAL_AMT
BP.IGNORE_PLAN
BP.HLTH_PROVIDER_ID
BP.PREVIOUSLY_SEEN

   LET $SCHED_ID           = &B.SCHED_ID
   LET $EMPLID             = &B.EMPLID
   LET $BENEFIT_RCD_NBR    = &B.BENEFIT_RCD_NBR
   LET $EVENT_ID           = &B.EVENT_ID
   LET $STATUS_DT          = &B.STATUS_DT
   LET $EVENT_CLASS        = &B.EVENT_CLASS
   LET $BAS_PROCESS_STATUS = &B.BAS_PROCESS_STATUS
   LET $PLAN_TYPE          = &BP.PLAN_TYPE
   LET $BENEFIT_PROGRAM    = &BP.BENEFIT_PROGRAM
   LET $EVENT_DT           = &BP.EVENT_DT
   LET $COVERAGE_ELECT     = &BP.COVERAGE_ELECT
   LET $ELECT_ALLOWED      = &BP.ELECT_ALLOWED
   LET $OPTION_CD          = &BP.OPTION_CD
   LET #EMPL_CONTRBUTN_AMT = &BP.EMPL_CONTRBUTN_AMT
   LET #ANNUAL_PLEDGE      = &BP.ANNUAL_PLEDGE
   LET #GOAL_AMT           = &BP.GOAL_AMT
   LET $IGNORE_PLAN        = &BP.IGNORE_PLAN
   LET $HLTH_PROVIDER_ID   = &BP.HLTH_PROVIDER_ID
   LET $PREVIOUSLY_SEEN    = &BP.PREVIOUSLY_SEEN

   Do Get-PersNid
   Do Get-Per1
   Do Get-Per2
   Do Get-Per3
   
   DO GET-GEX-EMPLID

   Let $Dependent-Found = 'N'
   Do Get-Dependent-Data
   If $Dependent-Found = 'N'
      Do Write-Current-Enrollment-File
   End-If

   Do Clear-Variables
   Do Clear-Dependent-Variables

FROM PS_BAS_PARTIC B,
     PS_BAS_PARTIC_PLAN BP
[$WHERE]
AND B.SCHED_ID        = BP.SCHED_ID
AND B.EMPLID          = BP.EMPLID
AND B.BENEFIT_RCD_NBR = BP.BENEFIT_RCD_NBR
AND B.EVENT_ID        = BP.EVENT_ID
!AND B.EMPLID in ('005621194','167483802','177543232','192505706','197404306','195582797','172342415','176542317','227537802','289806103','297902317','269549702','115706345','277362764','278665458','283942994','165584726','212687898','199602840','163667211','197565350','268645921','292462341','272661037','274728494','183544410','177547669','185304384','207369004','291905736','174647939','187648365','184568223','196600325','160426133','205460905')
ORDER BY B.SCHED_ID, B.EMPLID, B.BENEFIT_RCD_NBR, B.EVENT_ID, BP.PLAN_TYPE
END-SELECT
end-procedure Create-Current-Enrollment-File
!-----------------------------------------------------------------------
! Function:    get-gex-emplid                                          -
! Description: Get Giant Eagles 7 digit emplid                         -
! Called By:   Create-Current-Enrollment-File                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-gex-emplid
#debugd show '...get-gex-emplid'

        let $GEX-EMPLID = ' '
        
BEGIN-SELECT
GEX.EMPLID

        LET $GEX-EMPLID = &GEX.EMPLID

FROM PS_GEX_EMPLID_MAPP@hrprd90 GEX
WHERE GEX.SSN      = $EMPLID
!  AND GEX.EMPL_RCD = $EMPL_RCD
END-SELECT

end-procedure get-gex-emplid


!-----------------------------------------------------------------------
! Function:    get-persnid                                             -
! Description: Get persnid information                                 -
! Called By:   Create-Current-Enrollment-File                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-persnid
#debugd show '...get-persnid'
let $NATIONAL_ID = ' '
begin-select
PNPD.NATIONAL_ID 

   let $NATIONAL_ID = &PNPD.NATIONAL_ID  

FROM PS_PERS_NID PNPD
WHERE PNPD.EMPLID = $Emplid
end-select

end-procedure get-persnid


!-----------------------------------------------------------------------
! Function:    get-per1                                                -
! Description: Get personal information                                -
! Called By:   Create-Current-Enrollment-File                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-per1
#debugd show '...get-per1'
let $BIRTHDATE = ' '      
begin-select
PER1.BIRTHDATE                   

   let $BIRTHDATE = &PER1.BIRTHDATE      
        
FROM PS_PERSON PER1
WHERE PER1.EMPLID   = $Emplid
end-select

end-procedure get-per1


!-----------------------------------------------------------------------
! Function:    get-per2                                                -
! Description: Get Name information                                    -
! Called By:   Create-Current-Enrollment-File                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-per2
#debugd show '...get-per2'

let $NAME = ' '           
begin-select
PER2.NAME        

   let $NAME = &PER2.NAME           
        
FROM PS_PERSON_NAME PER2
WHERE PER2.EMPLID = $Emplid
end-select

end-procedure get-per2


!-----------------------------------------------------------------------
! Function:    get-per3                                                -
! Description: Get marital Status and sex                              -
! Called By:   Create-Current-Enrollment-File                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-per3
#debugd show '...get-per3'

let $Martial_Status = ' '           
let $Sex = ' '
begin-select
PER3.MAR_STATUS
PER3.SEX       

   let $Marital_Status = &PER3.MAR_STATUS
   let $Sex            = &PER3.SEX
        
FROM PS_PERS_DATA_EFFDT PER3
WHERE PER3.EMPLID = $Emplid
  AND PER3.EFFDT = (SELECT MAX(PER3_A.EFFDT) FROM PS_PERS_DATA_EFFDT PER3_A
                    WHERE PER3_A.EMPLID = PER3.EMPLID
                      AND PER3_A.EFFDT <= $RUNDATE)
end-select

end-procedure get-per3


!-----------------------------------------------------------------------
! Function:    Get-Dependent-Data                                      -
! Description: Select from ps_bas_partic_dpnd                          -
! Called By:   Create-Current-Enrollment-File                          -
! Calls:       Get-PersNid-Dep, Get-Dep1-Data, Get-Dep2-Data           -
!              Get-Dep3-Data, Write-Current-Enrollment-File,           -
!              Clear-Dependent-Variables                               -
!-----------------------------------------------------------------------
begin-procedure Get-Dependent-Data
#debugd show '...Get-Dependent-Data'
Let $Dependent-Found = 'N'
begin-select
DB.DEPENDENT_BENEF
DB.ENROLL_ACTION
DB.BAS_ERROR
DB.BENEF_PCT
DB.FLAT_AMOUNT
DB.EXCESS
DB.CONTINGENT
DB.HLTH_PROVIDER_ID
DB.PREVIOUSLY_SEEN
DB.OTH_INSURANCE_IND
DB.OTH_INSURANCE_NAME

   Let $Dependent-Found        = 'Y'
   Let $DEP_DEPENDENT_BENEF    = &DB.DEPENDENT_BENEF
   Let $DEP_ENROLL_ACTION      = &DB.ENROLL_ACTION
   Let $DEP_BAS_ERROR          = &DB.BAS_ERROR
   Let $DEP_BENEF_PCT          = &DB.BENEF_PCT
   Let $DEP_FLAT_AMOUNT        = &DB.FLAT_AMOUNT
   Let $DEP_EXCESS             = &DB.EXCESS
   Let $DEP_CONTINGENT         = &DB.CONTINGENT
   Let $DEP_HLTH_PROVIDER_ID   = &DB.HLTH_PROVIDER_ID
   Let $DEP_PREVIOUSLY_SEEN    = &DB.PREVIOUSLY_SEEN
   Let $DEP_OTH_INSURANCE_IND  = &DB.OTH_INSURANCE_IND
   Let $DEP_OTH_INSURANCE_NAME = &DB.OTH_INSURANCE_NAME

   Do Get-PersNid-Dep
   Do Get-Dep1-Data
   Do Get-Dep2-Data
   Do Get-Dep3-Data
   Do Write-Current-Enrollment-File
   Do Clear-Dependent-Variables

FROM PS_BAS_PARTIC_DPND DB
WHERE DB.SCHED_ID        = $Sched_ID
  AND DB.EMPLID          = $Emplid
  AND DB.BENEFIT_RCD_NBR = $Benefit_Rcd_Nbr
  AND DB.EVENT_ID        = $Event_Id
  AND DB.PLAN_TYPE       = $Plan_Type
ORDER BY DB.SCHED_ID, DB.EMPLID, DB.BENEFIT_RCD_NBR, DB.EVENT_ID, DB.PLAN_TYPE, DB.DEPENDENT_BENEF
end-select

end-procedure Get-Dependent-Data


!-----------------------------------------------------------------------
! Function:    get-persnid-dep                                         -
! Description: Get dependent national id                               -
! Called By:   Get-Dependent-Data                                      -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-persnid-dep
#debugd show '...get-persnid-dep'

let $DEP_NATIONAL_ID = ' '
begin-select
DBN.NATIONAL_ID 

        let $DEP_NATIONAL_ID = &DBN.NATIONAL_ID  

FROM PS_DEP_BENEF_NID DBN
WHERE DBN.EMPLID          = $EMPLID 
  AND DBN.DEPENDENT_BENEF = $DEP_DEPENDENT_BENEF
end-select

end-procedure get-persnid-dep


!-----------------------------------------------------------------------
! Function:    get-dep1-data                                           -
! Description: Get name                                                -
! Called By:   Get-Dependent-Data                                      -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-dep1-data
#debugd show '...get-dep1-data'

let $DEP_NAME = ' '
begin-select
DBNM.NAME

        let $DEP_NAME = &DBNM.NAME  

FROM PS_DEP_BEN_NAME DBNM
WHERE DBNM.EMPLID          = $Emplid
  AND DBNM.DEPENDENT_BENEF = $DEP_DEPENDENT_BENEF
  AND DBNM.EFFDT = (SELECT MAX(DBNM1.EFFDT) FROM PS_DEP_BEN_NAME DBNM1
                     WHERE DBNM1.EMPLID = DBNM.EMPLID
                       AND DBNM1.DEPENDENT_BENEF = DBNM.DEPENDENT_BENEF
                       AND DBNM1.EFFDT <= $RUNDATE)
end-select

end-procedure get-dep1-data


!-----------------------------------------------------------------------
! Function:    get-dep2-data                                           -
! Description: Get dep effective dated info                            -
! Called By:   get-dependent-data                                      -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-dep2-data
#debugd show '...get-dep2-data'

let $DEP_RELATIONSHIP = ' '
let $DEP_BENEF_TYPE   = ' '
let $DEP_MAR_STATUS   = ' '
let $DEP_SEX          = ' '
let $DEP_STUDENT      = ' '
let $DEP_DISABLED     = ' '
begin-select
DE.RELATIONSHIP
DE.DEP_BENEF_TYPE
DE.MAR_STATUS
DE.SEX
DE.STUDENT
DE.DISABLED

   let $DEP_RELATIONSHIP = &DE.RELATIONSHIP
   let $DEP_BENEF_TYPE   = &DE.DEP_BENEF_TYPE
   let $DEP_MAR_STATUS   = &DE.MAR_STATUS
   let $DEP_SEX          = &DE.SEX
   let $DEP_STUDENT      = &DE.STUDENT
   let $DEP_DISABLED     = &DE.DISABLED

FROM PS_DEP_BEN_EFF DE
WHERE DE.EMPLID          = $EMPLID
  AND DE.DEPENDENT_BENEF = $DEP_DEPENDENT_BENEF
  AND DE.EFFDT = (SELECT MAX(DE1.EFFDT) FROM PS_DEP_BEN_EFF DE1
                  WHERE DE1.EMPLID = DE.EMPLID
                    AND DE1.DEPENDENT_BENEF = DE.DEPENDENT_BENEF)
end-select

end-procedure get-dep2-data


!-----------------------------------------------------------------------
! Function:    get-dep3-data                                           -
! Description: Get dep birthdate                                       -
! Called By:   get-dependent-data                                      -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-dep3-data
#debugd show '...get-dep3-data'

let $DEP_BIRTHDATE = ' '
begin-select
DBIR.BIRTHDATE

   let $DEP_BIRTHDATE = &DBIR.BIRTHDATE

FROM PS_DEP_BEN DBIR
WHERE DBIR.EMPLID          = $EMPLID
  AND DBIR.DEPENDENT_BENEF = $DEP_DEPENDENT_BENEF
end-select

end-procedure get-dep3-data


!-----------------------------------------------------------------------
! Function:    Write-Current-Enrollment-File-Header                    -
! Description: Write header record for output file 1                   -
! Called By:   Create-Current-Enrollment-File                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Write-Current-Enrollment-File-Header
#debugd show '...Write-Current-Enrollment-File-Header'
  
        write 1 from    $Quote 'NATIONAL_ID'        $Quote $Comma
                        $Quote 'SCHED_ID'           $Quote $Comma
                        $Quote 'EMPLID'             $Quote $Comma
                        $Quote 'STATUS_DT'          $Quote $Comma
                        $Quote 'EVENT_CLASS'        $Quote $Comma
                        $Quote 'BAS_PROCESS_STATUS' $Quote $Comma
                        $Quote 'BENEFIT_RCD_NBR'    $Quote $Comma
                        $Quote 'NAME'               $Quote $Comma
                        $Quote 'BIRTHDATE'          $Quote $Comma
                        $Quote 'MAR_STATUS'         $Quote $Comma
                        $Quote 'SEX'                $Quote $Comma
                        $Quote 'EVENT_ID'           $Quote $Comma
                        $Quote 'PLAN_TYPE'          $Quote $Comma
                        $Quote 'BENEFIT_PROGRAM'    $Quote $Comma
                        $Quote 'EVENT_DT'           $Quote $Comma
                        $Quote 'COVERAGE_ELECT'     $Quote $Comma
                        $Quote 'ELECT_ALLOWED'      $Quote $Comma
                        $Quote 'OPTION_CD'          $Quote $Comma
                        $Quote 'EMPL_CONTRBUTN_AMT' $Quote $Comma
                        $Quote 'ANNUAL_PLEDGE'      $Quote $Comma
                        $Quote 'GOAL_AMT'           $Quote $Comma
                        $Quote 'IGNORE_PLAN'        $Quote $Comma
                        $Quote 'HLTH_PROVIDER_ID'   $Quote $Comma
                        $Quote 'PREVIOUSLY_SEEN'    $Quote $Comma
                        $Quote 'SCHED_ID'           $Quote $Comma
                        $Quote 'NATIONAL_ID'        $Quote $Comma
                        $Quote 'EMPLID'             $Quote $Comma
                        $Quote 'BENEFIT_RCD_NBR'    $Quote $Comma
                        $Quote 'EVENT_ID'           $Quote $Comma
                        $Quote 'PLAN_TYPE'          $Quote $Comma
                        $Quote 'DEPENDENT_BENEF'    $Quote $Comma
                        $Quote 'BIRTHDATE'          $Quote $Comma
                        $Quote 'NAME'               $Quote $Comma
                        $Quote 'RELATIONSHIP'       $Quote $Comma
                        $Quote 'DEP_BENEF_TYPE'     $Quote $Comma
                        $Quote 'MAR_STATUS'         $Quote $Comma
                        $Quote 'SEX'                $Quote $Comma
                        $Quote 'STUDENT'            $Quote $Comma
                        $Quote 'DISABLED'           $Quote $Comma
                        $Quote 'ENROLL_ACTION'      $Quote $Comma
                        $Quote 'BAS_ERROR'          $Quote $Comma
                        $Quote 'BENEF_PCT'          $Quote $Comma
                        $Quote 'FLAT_AMOUNT'        $Quote $Comma
                        $Quote 'EXCESS'             $Quote $Comma
                        $Quote 'CONTINGENT'         $Quote $Comma
                        $Quote 'HLTH_PROVIDER_ID'   $Quote $Comma
                        $Quote 'PREVIOUSLY_SEEN'    $Quote $Comma
                        $Quote 'OTH_INSURANCE_IND'  $Quote $Comma
                        $Quote 'OTH_INSURANCE_NAME' $Quote       
                  
end-procedure !Write-Current-Enrollment-File-Header

                                              
!-----------------------------------------------------------------------
! Function:    Write-Current-Enrollment-File                           -
! Description: Write Data to output file 1                             -
! Called By:                                                           -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Write-Current-Enrollment-File
#debugd show '...Write-Current-Enrollment-File'

        let $EMPL_CONTRBUTN_AMT = edit(#EMPL_CONTRBUTN_AMT, '999999.99')
        let $ANNUAL_PLEDGE      = edit(#ANNUAL_PLEDGE, '999999.99')   
        LET $GOAL_AMT           = edit(#GOAL_AMT, '999999.99')
        let $BENEF_PCT          = edit(#BENEF_PCT, '999.99')       
 
        write 1 from    $Quote $NATIONAL_ID            $Quote $Comma
                        $Quote $SCHED_ID               $Quote $Comma
                        $Quote $GEX-EMPLID             $Quote $Comma
                        $Quote $STATUS_DT              $Quote $Comma
                        $Quote $EVENT_CLASS            $Quote $Comma
                        $Quote $BAS_PROCESS_STATUS     $Quote $Comma
                        $Quote $BENEFIT_RCD_NBR        $Quote $Comma
                        $Quote $NAME                   $Quote $Comma
                        $Quote $BIRTHDATE              $Quote $Comma
                        $Quote $MARITAL_STATUS         $Quote $Comma
                        $Quote $SEX                    $Quote $Comma
                        $Quote $EVENT_ID               $Quote $Comma
                        $Quote $PLAN_TYPE              $Quote $Comma
                        $Quote $BENEFIT_PROGRAM        $Quote $Comma
                        $Quote $EVENT_DT               $Quote $Comma
                        $Quote $COVERAGE_ELECT         $Quote $Comma
                        $Quote $ELECT_ALLOWED          $Quote $Comma
                        $Quote $OPTION_CD              $Quote $Comma
                        $Quote $EMPL_CONTRBUTN_AMT     $Quote $Comma
                        $Quote $ANNUAL_PLEDGE          $Quote $Comma
                        $Quote $GOAL_AMT               $Quote $Comma
                        $Quote $IGNORE_PLAN            $Quote $Comma
                        $Quote $HLTH_PROVIDER_ID       $Quote $Comma
                        $Quote $PREVIOUSLY_SEEN        $Quote $Comma
                        $Quote $SCHED_ID               $Quote $Comma
                        $Quote $NATIONAL_ID            $Quote $Comma
                        $Quote $GEX-EMPLID             $Quote $Comma
                        $Quote $BENEFIT_RCD_NBR        $Quote $Comma
                        $Quote $EVENT_ID               $Quote $Comma
                        $Quote $PLAN_TYPE              $Quote $Comma
                        $Quote $DEP_DEPENDENT_BENEF    $Quote $Comma
                        $Quote $DEP_BIRTHDATE          $Quote $Comma
                        $Quote $DEP_NAME               $Quote $Comma
                        $Quote $DEP_RELATIONSHIP       $Quote $Comma
                        $Quote $DEP_BENEF_TYPE         $Quote $Comma
                        $Quote $DEP_MAR_STATUS         $Quote $Comma
                        $Quote $DEP_SEX                $Quote $Comma
                        $Quote $DEP_STUDENT            $Quote $Comma
                        $Quote $DEP_DISABLED           $Quote $Comma
                        $Quote $DEP_ENROLL_ACTION      $Quote $Comma
                        $Quote $DEP_BAS_ERROR          $Quote $Comma
                        $Quote $DEP_BENEF_PCT          $Quote $Comma
                        $Quote $DEP_FLAT_AMOUNT        $Quote $Comma
                        $Quote $DEP_EXCESS             $Quote $Comma
                        $Quote $DEP_CONTINGENT         $Quote $Comma
                        $Quote $DEP_HLTH_PROVIDER_ID   $Quote $Comma
                        $Quote $DEP_PREVIOUSLY_SEEN    $Quote $Comma
                        $Quote $DEP_OTH_INSURANCE_IND  $Quote $Comma
                        $Quote $DEP_OTH_INSURANCE_NAME $Quote       
                        
end-procedure !Write-Current-Enrollment-File


!-----------------------------------------------------------------------
! Function:    Clear-Variables                                         -
! Description: clears values                                           -
! Called By:   Create-Current-Enrollment-File                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Clear-Variables
#debugd show '...Clear-Variables'
  
   LET $SCHED_ID           = ' '
   LET $EMPLID             = ' '
   LET $BENEFIT_RCD_NBR    = ' '
   LET $EVENT_ID           = ' '
   LET $STATUS_DT          = ' '
   LET $EVENT_CLASS        = ' '
   LET $BAS_PROCESS_STATUS = ' '
   LET $PLAN_TYPE          = ' '
   LET $BENEFIT_PROGRAM    = ' '
   LET $EVENT_DT           = ' '
   LET $COVERAGE_ELECT     = ' '
   LET $ELECT_ALLOWED      = ' '
   LET $OPTION_CD          = ' '
   LET $EMPL_CONTRBUTN_AMT = ' '
   LET $ANNUAL_PLEDGE      = ' '
   LET $GOAL_AMT           = ' '
   LET $IGNORE_PLAN        = ' '
   LET $HLTH_PROVIDER_ID   = ' '
   LET $PREVIOUSLY_SEEN    = ' '

end-procedure Clear-Variables


!-----------------------------------------------------------------------
! Function:    Clear-Dependent-Variables                               -
! Description: clears values for writing to file 1                     -
! Called By:   Create-Current-Enrollment-File                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Clear-Dependent-Variables
#debugd show '...Clear-Dependent-Variables'

   Let $DEP_DEPENDENT_BENEF    = ' '
   Let $DEP_NATIONAL_ID        = ' '
   Let $DEP_BIRTHDATE          = ' '
   Let $DEP_NAME               = ' '
   Let $DEP_RELATIONSHIP       = ' '
   Let $DEP_BENEF_TYPE         = ' '
   Let $DEP_MAR_STATUS         = ' '
   Let $DEP_SEX                = ' '
   Let $DEP_STUDENT            = ' '
   Let $DEP_DISABLED           = ' '
   Let $DEP_ENROLL_ACTION      = ' '
   Let $DEP_BAS_ERROR          = ' '
   Let $DEP_BENEF_PCT          = ' '
   Let $DEP_FLAT_AMOUNT        = ' '
   Let $DEP_EXCESS             = ' '
   Let $DEP_CONTINGENT         = ' '
   Let $DEP_HLTH_PROVIDER_ID   = ' '
   Let $DEP_PREVIOUSLY_SEEN    = ' '
   Let $DEP_OTH_INSURANCE_IND  = ' '
   Let $DEP_OTH_INSURANCE_NAME = ' '
  
end-procedure Clear-Dependent-Variables


!-----------------------------------------------------------------------
! Function:    Create-Benefit-Options-File                             -
! Description: select Benefit Options Data and create the file         -
! Called By:   Report                                                  -
! Calls:       Write-Benefit-Options-File-Header                       -
!              Get-PersNid                                             -
!              Get-Ben-Defn-Optn-Data                                  -
!              Get-Benefit-Plan-Tbl-Data                               -
!              Clear-Variables                                         -
!              Clear-Dependent-Variables                               -
!-----------------------------------------------------------------------
begin-procedure Create-Benefit-Options-File
#debugd show 'Create-Benefit-Options-File'
Do Write-Benefit-Options-File-Header
Do Clear-Benefits-Variables

BEGIN-SELECT
O.SCHED_ID
O.EMPLID
O.BENEFIT_RCD_NBR
O.EVENT_ID
PO.PLAN_TYPE
PO.OPTION_ID
PO.BENEFIT_PROGRAM
PO.EVENT_DT
PO.DISPLAY_PLN_SEQ
PO.DISPLAY_OPT_SEQ
PO.OPTION_TYPE
PO.BENEFIT_PLAN
PO.COVRG_CD
PO.OPTION_CD
PO.OPTION_LVL
PO.DEFAULT_IND
PO.PROOF_REQ_IND
PO.HISTORY_ONLY
PO.CALCULATED_BASE
PO.PREMIUM_BASE
PO.DED_CLASS

   LET $SCHED_ID        = &O.SCHED_ID
   LET $EMPLID          = &O.EMPLID
   LET $BENEFIT_RCD_NBR = &O.BENEFIT_RCD_NBR
   LET $EVENT_ID        = &O.EVENT_ID
   LET $PLAN_TYPE       = &PO.PLAN_TYPE
   LET $OPTION_ID       = &PO.OPTION_ID
   LET $BENEFIT_PROGRAM = &PO.BENEFIT_PROGRAM
   LET $EVENT_DT        = &PO.EVENT_DT
   LET $DISPLAY_PLN_SEQ = &PO.DISPLAY_PLN_SEQ
   LET $DISPLAY_OPT_SEQ = &PO.DISPLAY_OPT_SEQ
   LET $OPTION_TYPE     = &PO.OPTION_TYPE
   LET $BENEFIT_PLAN    = &PO.BENEFIT_PLAN
   LET $COVRG_CD        = &PO.COVRG_CD
   LET $OPTION_CD       = &PO.OPTION_CD
#debugd show 'Create-Benefit-Options-File'$OPTION_TYPE
   LET $OPTION_LVL      = &PO.OPTION_LVL
   LET $DEFAULT_IND     = &PO.DEFAULT_IND
   LET $PROOF_REQ_IND   = &PO.PROOF_REQ_IND
   LET $HISTORY_ONLY    = &PO.HISTORY_ONLY
   LET $CALCULATED_BASE = &PO.CALCULATED_BASE
   LET $PREMIUM_BASE    = &PO.PREMIUM_BASE
   LET $DED_CLASS       = &PO.DED_CLASS
   LET $Selected        = 'N'                       !Defaulting for Giant Eagle

  !Set the Pre-Tax value (1 = True, 0 = False)
   EVALUATE $DED_CLASS
   WHEN = 'A'             !After Tax
      Let $Pre-Tax = '0'
   WHEN = 'B'             !Before Tax
      Let $Pre-Tax = '1'
   WHEN = 'L'             !QC Taxable Benefit
      Let $Pre-Tax = '0'
   WHEN = 'N'             !Non-Taxable Benefit
      Let $Pre-Tax = '0'
   WHEN = 'P'             !Non-Taxable BTax Benefit
      Let $Pre-Tax = '1'
   WHEN = 'T'             !Taxable Benefit
      Let $Pre-Tax = '0'
   END-EVALUATE

   DO GET-GEX-EMPLID

   Do Get-PersNid
   Do Get-Ben-Defn-Optn-Data
   Do Get-Coverage-Code-Description
   Do Get-Benefit-Plan-Tbl-Data
  
   Do Get-Bas-Partic-Cost-Data
   if $Cost_Found='N'
     Do Write-Benefit-Options-File
   end-if
   
   Do Clear-Benefits-Variables

FROM PS_BAS_PARTIC O, PS_BAS_PARTIC_PLAN PL, PS_BAS_PARTIC_OPTN PO
[$WHERE2]
AND O.SCHED_ID        = PO.SCHED_ID
AND O.EMPLID          = PO.EMPLID
AND O.BENEFIT_RCD_NBR = PO.BENEFIT_RCD_NBR
AND O.EVENT_ID        = PO.EVENT_ID
AND O.SCHED_ID        = PL.SCHED_ID
AND O.EMPLID          = PL.EMPLID
AND O.BENEFIT_RCD_NBR = PL.BENEFIT_RCD_NBR
AND O.EVENT_ID        = PL.EVENT_ID
AND PL.PLAN_TYPE      = PO.PLAN_TYPE
AND PO.OPTION_TYPE    in ('O', 'W')
ORDER BY O.SCHED_ID, O.EMPLID, O.BENEFIT_RCD_NBR, O.EVENT_ID, PO.PLAN_TYPE, PO.OPTION_ID
END-SELECT

end-procedure !Create-Benefit-Options-File


!-----------------------------------------------------------------------
! Function:    Get-Ben-Defn-Optn-Data                                  -
! Description: gets benefit Option Definition data                     -
! Called By:   Create-Benefit-Options-File                             -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Get-Ben-Defn-Optn-Data
#debugd show '...Get-Ben-Defn-Optn-Data: '
#debugd show '...Get-Ben-Defn-Optn-Data: '$BENEFIT_PROGRAM
#debugd show '...Get-Ben-Defn-Optn-Data: '$PLAN_TYPE
#debugd show '...Get-Ben-Defn-Optn-Data: '$OPTION_ID

LET $BO_OPTION_CD      = ' '
LET $BO_BENEFIT_PLAN   = ' '
LET $BO_COVRG_CD       = ' '

BEGIN-SELECT
BO.OPTION_CD
BO.BENEFIT_PLAN
BO.COVRG_CD

   MOVE &BO.OPTION_CD    TO $BO_OPTION_CD
   MOVE &BO.BENEFIT_PLAN TO $BO_BENEFIT_PLAN
   MOVE &BO.COVRG_CD     TO $BO_COVRG_CD
  
FROM PS_BEN_DEFN_OPTN BO
WHERE BO.BENEFIT_PROGRAM = $BENEFIT_PROGRAM
  AND BO.PLAN_TYPE       = $PLAN_TYPE
  AND BO.OPTION_ID       = $OPTION_ID
  AND BO.EFFDT = (SELECT MAX(BO1.EFFDT) FROM PS_BEN_DEFN_OPTN BO1
                   WHERE BO1.BENEFIT_PROGRAM = BO.BENEFIT_PROGRAM
                     AND BO1.PLAN_TYPE       = BO.PLAN_TYPE
                     AND BO1.OPTION_ID       = BO.OPTION_ID
                     AND BO1.EFFDT          <= $RUNDATE)
END-SELECT

end-procedure Get-Ben-Defn-Optn-Data


!-----------------------------------------------------------------------
! Function:    Get-Bas-Partic-Cost-Data                                -
! Description: gets bas partic cost data & writes the file             -
! Called By:   Create-Benefit-Options-File                             -
! Calls:       Write-Benefits-Options-File                             -
!-----------------------------------------------------------------------
begin-procedure Get-Bas-Partic-Cost-Data
#debugd show '...Get-Bas-Partic-Cost-Data'
#debugd show '...Get-Bas-Partic-Cost-Data'$SCHED_ID
#debugd show '...Get-Bas-Partic-Cost-Data'$EMPLID
#debugd show '...Get-Bas-Partic-Cost-Data'$BENEFIT_RCD_NBR
#debugd show '...Get-Bas-Partic-Cost-Data'$EVENT_ID
#debugd show '...Get-Bas-Partic-Cost-Data'$PLAN_TYPE
#debugd show '...Get-Bas-Partic-Cost-Data'$OPTION_ID

  Let #EE_Annual_Cost = 0
  Let #ER_Annual_Cost = 0
  Let #Credit         = 0
  Move 'N' to $Cost_Found
begin-select
BPC.COST_ID        
BPC.BENEFIT_PROGRAM
BPC.EVENT_DT       
BPC.DISPLAY_PLN_SEQ
BPC.DISPLAY_OPT_SEQ
BPC.COST_TYPE                   !P = PRICE, C = CREDIT
BPC.ERNCD          
BPC.ANNL_AMT_A_TAX 
BPC.ANNL_AMT_B_TAX 
BPC.ANNL_AMT_NT_TAX
BPC.DEDN_AMT_A_TAX 
BPC.DEDN_AMT_B_TAX 
BPC.DEDN_AMT_NT_TAX
BPC.PROVINCE       
BPC.CNSLSTX_AMT    
BPC.CNSLSTX_ANN_AMT

  Move 'Y' to $Cost_Found
  Let #EE_Annual_Cost = &BPC.ANNL_AMT_A_TAX + &BPC.ANNL_AMT_B_TAX
  Let #ER_Annual_Cost = &BPC.ANNL_AMT_NT_TAX

  If &BPC.COST_TYPE = 'C'
     Let #Credit = &BPC.ANNL_AMT_A_TAX + &BPC.ANNL_AMT_B_TAX
  End-If

  Do Write-Benefit-Options-File

FROM PS_BAS_PARTIC_COST BPC
WHERE BPC.SCHED_ID        = $SCHED_ID
  AND BPC.EMPLID          = $EMPLID
  AND BPC.BENEFIT_RCD_NBR = $BENEFIT_RCD_NBR
  AND BPC.EVENT_ID        = $EVENT_ID
  AND BPC.PLAN_TYPE       = $PLAN_TYPE
  AND BPC.OPTION_ID       = $OPTION_ID
end-select

end-procedure Get-Bas-Partic-Cost-Data


!-----------------------------------------------------------------------
! Function:    Get-Benefit-Plan-Tbl-Data                               -
! Description: gets benefit plan table data                            -
! Called By:   Create-Benefit-Options-File                             -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Get-Benefit-Plan-Tbl-Data
#debugd show '...Get-Benefit-Plan-Tbl-Data'
#debugd show '...Get-Benefit-Plan-Tbl-Data'$PLAN_TYPE
#debugd show '...Get-Benefit-Plan-Tbl-Data'$BENEFIT_PLAN

LET $BEN_PLAN_DESCR      = ' '
LET $BEN_PLAN_DESCRSHORT = ' '
LET $DEDCD               = ' '
LET $VENDOR_ID           = ' '

BEGIN-SELECT
B1.DESCR
B1.DESCRSHORT
B1.DEDCD
B1.VENDOR_ID

  MOVE &B1.DESCR      TO $BEN_PLAN_DESCR
  MOVE &B1.DESCRSHORT TO $BEN_PLAN_DESCRSHORT
  MOVE &B1.DEDCD      TO $DEDCD
  MOVE &B1.VENDOR_ID  TO $VENDOR_ID
  
FROM PS_BENEF_PLAN_TBL B1
WHERE B1.PLAN_TYPE    = $PLAN_TYPE
  AND B1.BENEFIT_PLAN = $BENEFIT_PLAN
  AND B1.EFFDT = (SELECT MAX(B2.EFFDT) FROM PS_BENEF_PLAN_TBL B2
                   WHERE B2.PLAN_TYPE    = B1.PLAN_TYPE
                     AND B2.BENEFIT_PLAN = B1.BENEFIT_PLAN
                     AND B2.EFFDT       <= $RUNDATE)
END-SELECT

end-procedure get-benefit-plan-tbl-data


!-----------------------------------------------------------------------
! Function:    Get-Coverage-Code-Description                           -
! Description: gets the coverage code description                      -
! Called By:   Create-Benefit-Options-File                             -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Get-Coverage-Code-Description
#debugd show '...Get-Coverage-Code-Description'
#debugd show '...Get-Coverage-Code-Description'$COVRG_CD
LET $COVRG_CD_DESCR      = ' '
LET $COVRG_CD_DESCRSHORT = ' '

BEGIN-SELECT
C1.DESCR
C1.DESCRSHORT

  MOVE &C1.DESCR      TO $COVRG_CD_DESCR
  MOVE &C1.DESCRSHORT TO $COVRG_CD_DESCRSHORT
  
FROM PS_COVRG_CD_TBL C1
WHERE C1.COVRG_CD = $COVRG_CD 
  AND C1.EFFDT    = (SELECT MAX(C2.EFFDT) FROM PS_COVRG_CD_TBL C2
                      WHERE C2.COVRG_CD = C1.COVRG_CD 
                        AND C2.EFFDT   <= $RUNDATE)
END-SELECT

end-procedure get-coverage-code-description


!-----------------------------------------------------------------------
! Function:    Write-Benefit-Options-File-Header                       -
! Description: Write header record for output file, {pre_dep_file}     -
! Called By:   Create-Benefit-Options-File                             -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Write-Benefit-Options-File-Header
#debugd show '...Write-Benefit-Options-File-Header'
  
        write 2 from    $Quote 'Plan Description     ' $Quote $Comma
                        $Quote 'Coverage Description ' $Quote $Comma
                        $Quote 'EE SSN               ' $Quote $Comma
                        $Quote 'Emplid               ' $Quote $Comma
                        $Quote 'EE Annual Cost       ' $Quote $Comma
                        $Quote 'Org Annual Cost      ' $Quote $Comma
                        $Quote 'Pre-Tax              ' $Quote $Comma
                        $Quote 'Credit               ' $Quote $Comma  
                        $Quote 'Selected             ' $Quote $Comma
                        $Quote 'BEN_PROGRAM          ' $Quote $Comma
                        $Quote 'PLAN_TYPE            ' $Quote $Comma
                        $Quote 'BENEFIT_PLAN         ' $Quote $Comma
                        $Quote 'COVRG_CD             ' $Quote $Comma
                        $Quote 'OPTION_CD            ' $Quote $Comma
                        $Quote 'Sched_ID             ' $Quote $Comma
                        $Quote 'Benefit_Rcd_Nbr      ' $Quote $Comma
                        $Quote 'Event ID             ' $Quote $Comma
                        $Quote 'Option ID            ' $Quote $Comma
                        $Quote 'Event Date           ' $Quote $Comma
                        $Quote 'Display Pln Seq      ' $Quote $Comma
                        $Quote 'Display Opt Seq      ' $Quote $Comma
                        $Quote 'Option Type          ' $Quote $Comma
                        $Quote 'Option Lvl           ' $Quote $Comma
                        $Quote 'Default Ind          ' $Quote $Comma
                        $Quote 'Proof Req Ind        ' $Quote $Comma
                        $Quote 'History Only         ' $Quote $Comma
                        $Quote 'Calculated Base      ' $Quote $Comma
                        $Quote 'Premium Base         ' $Quote $Comma
                        $Quote 'Ded Class            ' $Quote $Comma
                        $Quote 'Ben Plan Descrshort  ' $Quote $Comma
                        $Quote 'Dedcd                ' $Quote $Comma
                        $Quote 'Vendor ID            ' $Quote 

end-procedure !Write-Benefit-Options-File-Header

                                              
!-----------------------------------------------------------------------
! Function:    Write-Benefit-Options-File                              -
! Description: Write Data to output file, {pre_dep_file}               -
! Called By:   Create-Benefit-Options-File                             -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Write-Benefit-Options-File
#debugd show '...Write-Benefit-Options-File'
#debugd show '...Write-Benefit-Options-File'$EMPLID
#debugd show '...Write-Benefit-Options-File'$OPTION_TYPE

        let $EE_Annual_Cost = edit(#EE_Annual_Cost, '999999.99')
        let $ER_Annual_Cost = edit(#ER_Annual_Cost,'999999.99')
        let $Credit         = edit(#Credit,'999999.99')


        write 2 from    $Quote $BEN_PLAN_DESCR         $Quote $Comma
                        $Quote $COVRG_CD_DESCR         $Quote $Comma
                        $Quote $NATIONAL_ID            $Quote $Comma
                        $Quote $GEX-EMPLID             $Quote $Comma
                        $Quote $EE_Annual_Cost         $Quote $Comma
                        $Quote $ER_Annual_Cost         $Quote $Comma
                        $Quote $PRE-TAX                $Quote $Comma
                        $Quote $Credit                 $Quote $Comma  
                        $Quote $Selected               $Quote $Comma
                        $Quote $BENEFIT_PROGRAM        $Quote $Comma
                        $Quote $PLAN_TYPE              $Quote $Comma
                        $Quote $BENEFIT_PLAN           $Quote $Comma
                        $Quote $COVRG_CD               $Quote $Comma
                        $Quote $OPTION_CD              $Quote $Comma
                        $Quote $SCHED_ID               $Quote $Comma
                        $Quote $BENEFIT_RCD_NBR        $Quote $Comma
                        $Quote $EVENT_ID               $Quote $Comma
                        $Quote $OPTION_ID              $Quote $Comma
                        $Quote $EVENT_DT               $Quote $Comma
                        $Quote $DISPLAY_PLN_SEQ        $Quote $Comma
                        $Quote $DISPLAY_OPT_SEQ        $Quote $Comma
                        $Quote $OPTION_TYPE            $Quote $Comma
                        $Quote $OPTION_LVL             $Quote $Comma
                        $Quote $DEFAULT_IND            $Quote $Comma
                        $Quote $PROOF_REQ_IND          $Quote $Comma
                        $Quote $HISTORY_ONLY           $Quote $Comma
                        $Quote $CALCULATED_BASE        $Quote $Comma
                        $Quote $PREMIUM_BASE           $Quote $Comma
                        $Quote $DED_CLASS              $Quote $Comma
                        $Quote $BEN_PLAN_DESCRSHORT    $Quote $Comma
                        $Quote $DEDCD                  $Quote $Comma
                        $Quote $VENDOR_ID              $Quote 
                                                   
end-procedure !Write-Benefit-Options-File


!-----------------------------------------------------------------------
! Function:    Clear-Benefits-Variables                                -
! Description: Clear the variables for the next employee               -
! Called By:   Create-Benefit-Options-File                             -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Clear-Benefits-Variables
#debugd show '...Clear-Benefits-Variables'      

   let #EE_Annual_Cost       = 0
   let #ER_Annual_Cost       = 0
   let #Credit               = 0
   let $BEN_PLAN_DESCR       = ' '
   let $COVRG_CD_DESCR       = ' '
   let $NATIONAL_ID          = ' '
   let $EMPLID               = ' '
   let $EE_Annual_Cost       = ' '
   let $ER_Annual_Cost       = ' '
   let $PRE-TAX              = ' '
   let $Credit               = ' '
   let $Selected             = ' '
   let $BENEFIT_PROGRAM      = ' '
   let $PLAN_TYPE            = ' '
   let $BENEFIT_PLAN         = ' '
   let $COVRG_CD             = ' '
   let $OPTION_CD            = ' '
   let $SCHED_ID             = ' '
   let $BENEFIT_RCD_NBR      = ' '
   let $EVENT_ID             = ' '
   let $OPTION_ID            = ' '
   let $EVENT_DT             = ' '
   let $DISPLAY_PLN_SEQ      = ' '
   let $DISPLAY_OPT_SEQ      = ' '
   let $OPTION_TYPE          = ' '
   let $OPTION_LVL           = ' '
   let $DEFAULT_IND          = ' '
   let $PROOF_REQ_IND        = ' '
   let $HISTORY_ONLY         = ' '
   let $CALCULATED_BASE      = ' '
   let $PREMIUM_BASE         = ' '
   let $DED_CLASS            = ' '
   let $BEN_PLAN_DESCRSHORT  = ' '
   let $DEDCD                = ' '
   let $VENDOR_ID      = ' '

end-procedure !Clear-Benefits-Variables


!-----------------------------------------------------------------------
! SQC Files for called procedures                                      -
!-----------------------------------------------------------------------
#include 'stdapi.sqc'
#include 'reset.sqc'     !Reset printer procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'  !Routines to calculate with dates
#include 'getlogou.sqc'  !Routine process run control parameters 
! -------------------  END OF FILE   ---------------------------------
