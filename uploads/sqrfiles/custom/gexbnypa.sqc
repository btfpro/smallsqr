!***********************************************************************
!*   gexbnypa.sqc - elig rules for config 7 -Youngstown/Canfield Clerks*
!*   for those hired after Contract Ratification Date (9/12/2002)      *      
!***********************************************************************
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Narrative:                                                           *
! #debug6 - displays important values for debugging                    *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE	       *
!***********************************************************************
!CSR HR10312  SCM      11/12/2003     INITIAL CREATION                 *
!                                     CLONED FROM gexbnypy.sqc         *
!                                                                      *
!CSR HR10764  AXL      07/27/2004     Fixed the JOB_Jr insert logic.   *
! ISDVNPK  03/07/2008 Modified for 9.0 upgrade with JOB and JOB_JR changes
!VENDKXY   11/20/2008 Removed the Extra comma(,) which is restricting the code to insert job row
!***********************************************************************
!************************************************************************
!  Calculate BEGIN RANGE         
!  Need to determine the pay end date that contains the anniversary
!  date for the prev year for the BP's Company and paygroup specifically. 
!************************************************************************
begin-procedure Determine-payend-dt-for-begin-range
#debug9 show 'gexbnypy.Determine-payend-dt-for-begin-range'
    move 'N' to $found_prevyr
 
Begin-select on-error=sql-error-found('Determine-payend-dt-for-begin-range')
A2.PAY_END_DT

    move &A2.PAY_END_DT to $begin_range
    
    move 'Y' to $found_prevyr
    show 'Begin Range:  ' $begin_range
!    do format-datetime($begin_range,$begin_range_dbf,{DEFMDY},'','native')
  
FROM PS_PAY_CALENDAR A2

WHERE A2.PAY_END_DT >=  $ratif_anniv_dt_yrago_dbf 
  AND A2.PAY_BEGIN_DT <= $ratif_anniv_dt_yrago_dbf
  AND A2.PAY_OFF_CYCLE_CAL = 'N'
  AND A2.COMPANY = $Co_Name
  AND A2.PAYGROUP in $Pay_Name
end-select

if $found_prevyr = 'N'
!   do error-found
   print 'No Pay End Date for prev yr anniv dt (begin range) found in pay_calendar table' (+2,34)
   print '$ratif_anniv_dt_yrago_dbf: ' (,115)
   print $ratif_anniv_dt_yrago_dbf     (,145)
   show 'No Pay End Date for prev yr anniv dt (begin range) found in pay_calendar table'
   STOP
end-if   

end-procedure
 
!***************************************************************************
!  Calculate END RANGE
!  Need to determine the pay end date that contains the anniversary
!  date for the prev year for the BP's Company and paygroup specifically. 
!***************************************************************************
begin-procedure Determine-payend-dt-for-end-range
#debug9 show 'gexbnypy.Determine-payend-dt-for-end-range'
    move 'N' to $found_curyr
 
Begin-select on-error=sql-error-found('Determine-payend-dt-for-end-range')
A1.PAY_END_DT

    move &A1.PAY_END_DT to $end_range
    
    move 'Y' to $found_curyr
    show 'End   Range:  ' $end_range
!    do format-datetime($end_range,$end_range_dbf,{DEFMDY},'','native')
  
FROM PS_PAY_CALENDAR A1

WHERE A1.PAY_END_DT >=  $ratif_anniv_dt_dbf 
  AND A1.PAY_BEGIN_DT <= $ratif_anniv_dt_dbf
  AND A1.PAY_OFF_CYCLE_CAL = 'N'
  AND A1.COMPANY = $Co_Name
  AND A1.PAYGROUP in $Pay_Name
end-select

if $found_curyr = 'N'
!   do error-found
   print 'No Pay End Date for curr yr anniv date (end range) found in pay_calendar table' (+2,34)
   print 'End Range: ' (,115)
   print $end_range    (,130)
   show 'No Pay End Date for curr yr anniv date (end range) found in pay_calendar table'
   STOP
end-if   

end-procedure


!*********************************************************************
!This procedure calculates any absences the ee may have had. It finds each
!Leave of absence start date and end date during the year and adds
!them together. It sums all the days the ee was in Leave
! of Absence during the begin-end ranges and converts to weeks.
!*********************************************************************
begin-procedure Calc-total-absence-period
#debug9 Show 'gexbnypy.calc-total-absence-period'
  move $End_Range to $RFL_date                      !Return from Leave
  move $Begin_Range to $start_date
  show 'start_date: ' $Begin_Range 
  show '$RFL_date:  ' $End_Range
   
  let #total_absence = 0                            !will be in days
    
  let $Found_Absences = 'N' 
  do select-starting-absence-date    

!if no absences were found ($found_absences='Y'),  that means they were
!not out on leave during the begin-end range. You then have to get the eff
!dated job row asof begin range.  If empl_status = 'P', then go find the 1st
!row prior to begin range with a valid action_reason (check-for-leave-prior-begin-range)
! 
  if $Found_Absences = 'N'
     do Get-jobrow-asof-beginrange
     if $jobrow_beginrange_found = 'Y'                                             
        if &BR.empl_status = 'P'                 
           do check-for-leave-prior-begin-range
        end-if
     end-if           !no absences fnd, and ee wasnt a 'P', then ee wked entire begin-end rnge          
  end-if              !found absences and days absent were calc'd                
        
end-procedure

!**********************************************************************
!This procedure selects each of the Leave of Absence period's start date
!**********************************************************************

begin-procedure select-starting-absence-date
#debug9 Show 'gexbnypy.select-starting-absence-date'
  move 'N' to $found

Begin-Select on-error=sql-error-found('select-starting-absence-date')
ABS.EFFDT
  move 'Y' to $found
  move 'Y' to $Found_Absences
 
  show 'Found absence date    &ABS.EFFDT=  ' &ABS.EFFDT
  move &ABS.EFFDT to $Begin_Absence_date
  do convert-to-dtu-date($Begin_Absence_date,$Start_dt_dtu)        !&ABS.EFFDT
  do select-RFL-date

   if $RFL_date_found = 'Y'
      Show 'Found return date:    &RFL.EFFDT= ' &RFL.EFFDT
      do Convert-To-Dtu-date(&RFL.EFFDT,$RFL_dt_dtu)
   else
      Show 'NO Return Date, using End Range Date= ' $RFL_date
      do convert-to-dtu-date($RFL_date,$RFL_dt_dtu)  !if no return date, use end range date($RFL_date)
 
   end-if

   do dtu-diff-days($Start_dt_dtu,$RFL_dt_dtu,#diff_days)
   add #diff_days to #total_absence
 
FROM   PS_JOB ABS

WHERE  ABS.EMPLID           = $emplid
AND    ABS.EMPL_RCD         = $empl_rcd#

AND    ABS.EFFDT            =
      (SELECT MIN(EFFDT)
       FROM   PS_JOB ABS1
       WHERE  ABS1.EMPLID      = ABS.EMPLID
       AND    ABS1.EMPL_RCD   = ABS.EMPL_RCD
       AND    ABS1.EMPL_STATUS = ABS.EMPL_STATUS
       AND    ABS1.EFFDT       > $Start_date
       AND    ABS1.EFFDT      <= $RFL_date)

AND    ABS.EFFSEQ           =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB ABS2
       WHERE  ABS2.EMPLID      = ABS.EMPLID
       AND    ABS2.EMPL_RCD   = ABS.EMPL_RCD
       AND    ABS2.EMPL_STATUS = ABS.EMPL_STATUS
       AND    ABS2.EFFDT       = ABS.EFFDT)

AND    ABS.EMPL_STATUS      = 'P'                      !Leave of absence paid
AND    ABS.ACTION_REASON IN ('WC2', 'ST2', 'FML')
end-select

  if $found = 'N'
    move 'N' to $Found_Absences
  end-if
end-procedure   


!*****************************************************************
!This procedure selects each Leave of Absence period's end date
!*****************************************************************

begin-procedure select-RFL-date
#debug9 Show 'gexbnypy.select-RFL-date'
  move 'N' to $RFL_date_found

Begin-Select on-error=sql-error-found('select-RFL-date')
RFL.EFFDT
  move 'Y' to $RFL_date_found
FROM   PS_JOB RFL

WHERE  RFL.EMPLID           = $emplid
AND    RFL.EMPL_RCD        = $empl_rcd# 

AND    RFL.EFFDT            =
      (SELECT MIN(EFFDT)
       FROM   PS_JOB RFL1
       WHERE  RFL1.EMPLID      = RFL.EMPLID
       AND    RFL1.EMPL_RCD   = RFL.EMPL_RCD
       AND    RFL1.EMPL_STATUS = RFL.EMPL_STATUS
       AND    RFL1.EFFDT       > $Begin_Absence_date       !moved from &ABS.EFFDT or $start_date
       AND    RFL1.EFFDT      <= $RFL_date)

AND    RFL.EFFSEQ           =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB RFL2
       WHERE  RFL2.EMPLID      = RFL.EMPLID
       AND    RFL2.EMPL_RCD   = RFL.EMPL_RCD
       AND    RFL2.EMPL_STATUS = RFL.EMPL_STATUS
       AND    RFL2.EFFDT       = RFL.EFFDT)

AND    RFL.EMPL_STATUS    <> 'P'  !Leave of absence paid

end-select
end-procedure
 
 
!**********************************************************************
!This procedure checks for a leave prior to the begin range.
!**********************************************************************
begin-procedure check-for-leave-prior-begin-range
#debug9 Show 'gexbnypy.check-for-leave-prior-begin-range'
 
       show '++empl_status=P logic for finding absence date prior begin-range++'
 
!      if ee is currently on leave and went out on leave before the $start_date, then
!      they wouldn't have been selected with the above logic.
!      If empl_status is 'P', Must look to see if ee has a jobrow prior to the 
!      begin range.  (If that row is a valid leave ('WC2', 'ST2', 'FML'), then
!      just use the $start_date as the begin range (leave of absence start date) and
!      convert to dtu date for calculations. 
!      Then go find the &RFL date and if not found, use the end range ($RFL_DATE)
!      for the end date.  Calculate days like above. 
  
       do check-for-leaves 
       if $valid-leave = 'Y'
         let  $Begin_Absence_date = $start_date
         show '***ee was out on leave before the $begin range*** ' $emplid
         show '***Use $begin_range as LOA Begin date :           ' $Begin_Absence_date
         do convert-to-dtu-date($Begin_Absence_date,$Start_dt_dtu)  
!                           !(use $start_date as LOA begin date) 
         do select-RFL-date
         if $RFL_date_found = 'Y'
             do Convert-To-Dtu-date(&RFL.EFFDT,$RFL_dt_dtu)
             show '***Found RFL date :                           ' &RFL.EFFDT
         else
              
              do convert-to-dtu-date($RFL_date,$RFL_dt_dtu)  
!                                        !if no return date, just use end date($RFL_date)
              show '***ee was still out on leave at $end range*** ' $emplid
              show '***Use $end_range as RFL date for emplid:     ' $RFL_date 
         end-if

         do dtu-diff-days($Start_dt_dtu,$RFL_dt_dtu,#diff_days)
         move #diff_days to #total_absence

!         do convert-from-dtu-date($RFL_dt_dtu,$start_date)
        end-if
  
       
end-procedure

!**********************************************************************
!This procedure checks for a leave starting date prior to begin range
!**********************************************************************
begin-procedure check-for-leaves
#debug9 Show 'gexbnypy.check-for-leaves'
 
Begin-Select on-error=sql-error-found('check-for-leaves')
ABSL.emplid
 
    show 'check-for-leaves, emplid= ' $emplid
    do check-leave-type
 
FROM PS_JOB ABSL
WHERE ABSL.EMPLID = $emplid
     and ABSL.EMPL_RCD = $empl_rcd# 
     and ABSL.EFFDT = (Select MAX(EFFDT)
                     FROM PS_JOB MN
                     WHERE MN.EMPLID    = $emplid
                     AND MN.EMPL_RCD = $empl_rcd# 
                     AND MN.EFFDT <= $start_date)                  !begin range


end-select

end-procedure check-for-leaves


!**********************************************************************
!This procedure checks for a valid leave type prior to the begin range
!**********************************************************************
begin-procedure check-leave-type
#debug9 Show 'gexbnypy.check-leave-type'
let $valid-leave = 'N'
 
Begin-Select on-error=sql-error-found('check-leave-type')

ABSV.EMPLID
ABSV.EMPL_RCD
ABSV.EFFDT
ABSV.ACTION_REASON

     show 'check-leave-type for emplid= ' $emplid
     show '&ABSV.ACTION_REASON:  ' &ABSV.ACTION_REASON
     if (&ABSV.ACTION_REASON = 'WC2') or (&ABSV.ACTION_REASON = 'ST2') or 
          (&ABSV.ACTION_REASON = 'FML')                   !personal leaves or fmla 
         let $valid-leave = 'Y'
     else
         let $valid-leave = 'N'
     end-if
     show '$valid-leave = ' $valid-leave
 
FROM PS_JOB ABSV
WHERE ABSV.EFFDT = (SELECT MIN(EFFDT)  
                    FROM PS_JOB MN1
                    where MN1.EMPLID      = $emplid                    
                    and   MN1.EMPL_RCD = $empl_rcd# 
     		    and   MN1.EFFDT > (Select MAX(EFFDT)
                     			FROM PS_JOB MX
                     			WHERE MX.EMPLID    = $emplid
                     			AND MX.EMPL_RCD   = $empl_rcd# 
                     			AND MX.EFFDT <= $start_date       !begin range 
					AND MX.EMPL_STATUS <> 'P'))

And ABSV.EMPLID = $emplid
And ABSV.EMPL_RCD = $empl_rcd# 
    
end-select

end-procedure check-leave-type

Begin-Procedure Get-jobrow-asof-beginrange
let $jobrow_beginrange_found = 'N'             
#debug9 show 'gexbnypy.Get-jobrow-asof-beginrange'
begin-select on-error=sql-error-found('Get-jobrow-asof-beginrange')
BR.EMPLID
BR.EFFDT
BR.EMPL_STATUS
 
         let $jobrow_beginrange_found = 'Y'
 
FROM PS_JOB BR
WHERE BR.EMPLID = $emplid
  AND BR.EMPL_RCD = $EMPL_RCD#
  AND BR.EFFDT = 
       (SELECT MAX(EFFDT)
	  FROM PS_JOB BR1 
	 WHERE BR1.EMPLID = $emplid
	   AND BR1.EMPL_RCD = $EMPL_RCD#
	   AND EFFDT <= $Begin_range)
  AND BR.EFFSEQ = 
       (SELECT MAX(EFFSEQ)
	  FROM PS_JOB BR2
	 WHERE BR2.EMPLID = $emplid
	   AND BR2.EMPL_RCD = $EMPL_RCD#       
	   AND BR2.EFFDT = BR.EFFDT)
 
end-SELECT

end-procedure Get-jobrow-asof-beginrange
 

!*********************************************************************
!Retrieves all the benefit programs for this SQR program and
!process them one by one
!*********************************************************************

Begin-Procedure Retrieve-benefit-pgms
#debug9 show 'gexbnypy.Retrieve-benefit-pgms'

move 'N' to $ben_pgm_found
begin-select on-error=sql-error-found('Retrieve-Benefit-Pgms')
SQR.BENEFIT_PROGRAM
SQR.GEX_OPERATOR1
SQR.GEX_CONTRACT_DT1
SQR.GEX_OPERATOR2
SQR.GEX_CONTRACT_DT2
SQR.GEX_UP_COUNT
SQR.GEX_DOWN_COUNT
SQR.GEX_INIT_BYTE
SQR.GEX_YEAR_BYTE

    move &SQR.BENEFIT_PROGRAM to $BP_Name    
    if $ben_pgm_found = 'N'
       move $bp_name to $prev_bp_name
    end-if
    move 'Y' to $ben_pgm_found
    
    let $service_dt_crit = ' '
    if rtrim(&SQR.GEX_OPERATOR1,' ') <> ''

       let $service_dt_crit = 'AND SQRE.SERVICE_DT '||&SQR.GEX_OPERATOR1||' '
	 concat '''' with $service_dt_crit 
	 concat &SQR.GEX_CONTRACT_DT1 with $service_dt_crit
	 concat '''' with $service_dt_crit

    end-if
    if rtrim(&SQR.GEX_OPERATOR2,' ') <> ''

       let $service_dt_crit = $service_dt_crit||' AND '||'SQRE.SERVICE_DT '||
			&SQR.GEX_OPERATOR2||' '
	 concat '''' with $service_dt_crit 
	 concat &SQR.GEX_CONTRACT_DT2 with $service_dt_crit
	 concat '''' with $service_dt_crit

    end-if
    show 'Benefit Program:       ' $BP_Name
    show 'Service Date Criteria: ' $service_dt_crit
    
    do process-benefit-partic
  
FROM PS_GEX_SQR_PROCESS SQR

WHERE PGM_NAME = $ReportID_Srch
ORDER BY BENEFIT_PROGRAM
end-SELECT

end-procedure

!*****************************************************************
!Calculates yearly hours for ee's (sum of weekly spcl hours
!  between begin range and end range previously calculated.)
!*****************************************************************
begin-procedure Calculate-sum-yrly-spcl-hrs
#debug9 show 'gexbnypy.Calculate-sum-yrly-spcl-hrs'

move 0 to #yrly_spcl_hrs

begin-select on-error=sql-error-found('calculate-sum-yrly-spcl-hrs')
SUM(C5.SPCL_HRS) &yrly_spcl_hrs
   move &yrly_spcl_hrs to #yrly_spcl_hrs

 FROM PS_PAY_LINE PL,
      PS_PAY_SPCL_EARNS C5

WHERE PL.EMPLID     = $emplid
  AND PL.COMPANY    = C5.COMPANY
  AND PL.PAYGROUP   = C5.PAYGROUP
  AND PL.PAGE_NUM   = C5.PAGE_NUM
  AND PL.LINE_NUM   = C5.LINE_NUM
  AND PL.OFF_CYCLE  = C5.OFF_CYCLE
  AND PL.PAY_END_DT = C5.PAY_END_DT
  AND (C5.PAY_END_DT >= $begin_range            
      AND C5.PAY_END_DT <= $end_range)                       
!  AND (C5.PAY_END_DT between $begin_range AND $end_range)  !revised to help performance
  AND C5.ERNCD_SPCL = $GEX_SPCL_ACCUM_CD2  
                  
end-select

end-procedure

!*********************************************************************
!Converts the begin and end ranges to days, then to weeks.
!   First find the # of days between begin range and end range
!   Then  divide those # of days by 7 to get # of weeks  
!*********************************************************************
begin-procedure Convert-begin-end-range-to-weeks
#debug9 show 'gexbnypy.Convert-begin-end-range-to-weeks'
 
 do convert-to-dtu-date($begin_range,$begin_range_dtu)
 do convert-to-dtu-date($end_range,$end_range_dtu)
 show '-------------------------------------------------'
 show '$begin_range_dtu: ' $begin_range_dtu
 show '$end_range_dtu:  ' $end_range_dtu
 do dtu-diff-days($begin_range_dtu,$end_range_dtu,#days_betw_ranges)
 show '# days between Begin Range and End Range:  ' #days_betw_ranges
 let #weeks_peryr = #days_betw_ranges/7

 show '# weeks between Begin Range and End Range:  ' #weeks_peryr
 show '-----------------------------------------------------'

end-procedure


!*********************************************************************
!Determines the benefits eligibility configuration byte value for each
!employee who participated in the Benefit Program to be able to compare
!with the existing job table field 
!*********************************************************************

begin-procedure process-elig-rules
#debug9 show 'gexbnypy.process-elig-rules'

move 'N' to $rules_found
move 'N' to $rules_found_1
move 'N' to $byte_found
move 'N' to $errorfound
move &D.ELIG_CONFIG7 to $EE_config_val
move 'N' to $update-is-done
move 'N' to $rel_found

!SXK 05/11/1998 Begin
!Added code to select specific seq# from the selection, in case of 
!warehouse processing

move #whse_seq to $whse_seq

if substr($ReportID,6,1) = 'W' and ($reportid <> 'GEXBNWW8')
   let $whse_string = 'AND ' || 'G.GEX_SEQ# = ' || $whse_seq
else
   let $whse_string = ' '
end-if

display $whse_string
display $effdt_newrow_dbf                        !GBD 05/21/2003
!display $effdt_dbf

!SXK 05/11/1998 End

begin-select 
F.GEX_SEQ       &seq#
F.GEX_OPERATOR1
F.GEX_CONTRACT_HRS1
F.GEX_OPERATOR2
F.GEX_CONTRACT_HRS2
F.GEX_EC2_BYTE_VAL &byte_val
F.GEX_REL_VALUE
F.GEX_REL_VALUE2

    display 'Operator 2:' noline
    display &f.gex_operator2

    display 'GEX_REL_VALUE2 ' noline
    display &f.gex_rel_value2  
   move 'N' to $rules_found


    do compare-related-field
!    if $rules_found = 'Y' and (rtrim(&f.gex_rel_value,' ') <> '')
   display '$rules found ' noline
   display $rules_found 
   display '$RelatedTo2 ' noline
   display $RelatedTo2   
   if $rules_found = 'Y' and  $RelatedTo2 = 'Y' 
      do prepare-comparision-string2
      do get-ec2-byte-value
    else 
	if $rules_found = 'Y' 
	   do prepare-comparision-string 
	   do get-ec2-byte-value
	end-if
   end-if  

      
FROM PS_GEX_CONFG7_PGM G, PS_GEX_CONFG7_RULE F,

     PS_BEN_DEFN_PGM FF
WHERE G.BENEFIT_PROGRAM = $bp_name
  AND G.BENEFIT_PROGRAM = F.BENEFIT_PROGRAM
  [$whse_string]
  AND G.GEX_SEQ = F.GEX_SEQ
  AND FF.BENEFIT_PROGRAM = F.BENEFIT_PROGRAM
  AND FF.EFF_STATUS = 'A'
  AND FF.EFFDT = F.EFFDT
  AND FF.EFFDT = (select max(zz.effdt) from ps_ben_defn_pgm zz
		  where zz.benefit_program = ff.benefit_program
		  and zz.eff_status = ff.eff_Status
		  AND zz.effdt <= SYSDATE)              !setup tables check current effdt

end-SELECT

if $rules_found_1 = 'N'
!  display &d.elig_config7
   do error-found
   print 'Employee not evaluated for benefit program:' (+,34)
   print $bp_name ()
   print ' in GEX_CONFG7_RULE table' ()
 
else
!SXK 06/15/98 No need to report, if they don't meet the eligibility'
  if $byte_found = 'N'
      move 'Y' to $errorfound
!     do error-found
!     print 'Eligible Config byte 7 rules not satisfied. #HOURS = ' (,34) 
!     print #week_hrs ()

 end-if
end-if

end-procedure

!*********************************************************************
!Compares the related to field value with the related value in Rule
!table and sets the switch
!*********************************************************************

begin-procedure compare-related-field
#debug9 show 'gexbnypy.compare-related-field'

if ($rel_found = 'N') and (rtrim(&f.gex_rel_value,' ') <> '')
   do select-relfield
end-if
if $RelatedTo2 = 'Y'
   do select-relfield2
end-if
if (rtrim(&f.gex_rel_value,' ') <> '') and ($errorfound = 'N')
DISPLAY 'IN COMPARE RELATED FIELD '
display &f.gex_rel_value
display &column_val
   if &C1.FIELDNAME_L1 = 'ELIG_CONFIG1'
       if (substr(&column_val,4,7) <> &f.gex_rel_value) 
	   move 'N' to $rules_found
       else
	   move 'Y' to $rules_found
	   move 'Y' to $rules_found_1
       end-if
   else
      if (&column_val <> &f.gex_rel_value) 
	 move 'N' to $rules_found
      else
	 move 'Y' to $rules_found
	 move 'Y' to $rules_found_1
      end-if      
   end-if
else
  if $errorfound = 'N' and (rtrim(&f.gex_operator1,' ') <> '')
    move 'Y' to $rules_found
    move 'Y' to $rules_found_1
  end-if
end-if

!display 'rules found: ' noline
!display $rules_found

end-procedure
   
!*********************************************************************
!Prepares the comparision string to use in retrieving the config byte
!value for the employee
!*********************************************************************

begin-procedure prepare-comparision-string
#debug show 'gexbnypy.prepare-comparision-string'

move #week_hrs to $week_hrs
move &F.gex_CONTRACT_HRS1 to $contract_hrs1
move &F.gex_CONTRACT_HRS2 to $contract_hrs2

if RTRIM(&F.gex_OPERATOR1,' ') <> ''
   if &F.gex_CONTRACT_HRS1 > 0
      if RTRIM(&F.gex_OPERATOR2,' ') <> ''
	  let $comp1_def = $week_hrs||' '||&F.gex_OPERATOR1||' '||$CONTRACT_HRS1||' AND '||$week_hrs||' '||&F.gex_OPERATOR2||' '||$CONTRACT_HRS2
      else
	  let $comp1_def = $week_hrs||' '||&F.gex_OPERATOR1||' '||$CONTRACT_HRS1
      end-if
   end-if
end-if

end-procedure

begin-procedure prepare-comparision-string2
move #week_hrs to $week_hrs
move &F.gex_CONTRACT_HRS1 to $contract_hrs1
move &F.gex_CONTRACT_HRS2 to $contract_hrs2

if RTRIM(&F.gex_OPERATOR1,' ') <> ''
   if &F.gex_CONTRACT_HRS1 > 0
      if RTRIM(&F.gex_OPERATOR2,' ') <> ''
	  let $comp1_def = $week_hrs||' '||&F.gex_OPERATOR1||' '||$CONTRACT_HRS1||' AND '||$week_hrs||'
		  '||&F.gex_OPERATOR2||' '||$CONTRACT_HRS2||'AND '||&COLUMN_VAL2 ||' = ' ||&F.GEX_REL_VALUE2
      else
	  let $comp1_def = $week_hrs||' '||&F.gex_OPERATOR1||' '||$CONTRACT_HRS1||'AND '||&COLUMN_VAL2 ||' = ' ||&F.GEX_REL_VALUE2
      end-if
   end-if
end-if

end-procedure

!*********************************************************************
!Retrieves related field information
!*********************************************************************

Begin-procedure select-relfield 
#debug9 show 'gexbnypy.select-relfield'

move 'N' to $found
move &C1.FIELDNAME_L1 to $column_var
let $column = 'X1.'||$column_var
!display $column
!display $column_var
begin-select on-error=sql-error-found('select-relfield')
[$column] &Column_val=char
    move 'Y' to $found
    move 'Y' to $rel_found
!move &column_val to $column_Val
!display $column_val
from ps_job X1
where X1.EMPLID = $emplid
  and X1.EMPL_RCD = &D.EMPL_RCD
  and X1.EFFDT = &D.EFFDT
  and X1.EFFSEQ = &D.EFFSEQ
end-select

if $found = 'N'
     do error-found
     print 'Eligibility field value not found in JOB table; Field = ' (,34) 
     print &C1.FIELDNAME_L1 ()

end-if 

end-procedure

Begin-procedure select-relfield2 
#debug9 show 'gexbnypy.select-relfield2'

move 'N' to $found
move &C1.FIELDNAME_L2 to $column_var2
let $column = 'X1.'||$column_var2
!display $column
!display $column_var2
begin-select on-error=sql-error-found('select-relfield2')
[$column] &Column_val2=char
    move 'Y' to $found
    move 'Y' to $rel2_found
from ps_job X1
where X1.EMPLID = $emplid
  and X1.EMPL_RCD = &D.EMPL_RCD
  and X1.EFFDT = &D.EFFDT
  and X1.EFFSEQ = &D.EFFSEQ
end-select

if $found = 'N'
     do error-found
     print 'Eligibility field value not found in JOB table; Field = ' (,34) 
     print &C1.FIELDNAME_L2 ()

end-if 

end-procedure


!*********************************************************************
!Retrives the rows from the Config7 Rules table to determine the byte
!value and adjusts the config7 field accordingly
!*********************************************************************

begin-procedure get-ec2-byte-value
#debug9 show 'gexbnypy.get-ec2-byte-value'

move 'N' to $found
move 'N' to $errorfound
display 'Comparison string: ' noline
display $comp1_Def

begin-select on-error=sql-error-found('get-EC2-byte-value')
!H.GEX_EC2_BYTE_VAL &byte_Val
'X'

! if $byte_found = 'N'
   move 'Y' to $found
   move &seq# to #seq#
   let $ee_config7_val = substr($ee_config_val,1,(#seq# - 1))||&byte_Val||substr('0000000000',(#seq# + 1),(10 - #seq#))   
!06/10/1998 - CJH - keep bytes to the right of &byte_Val zeros
!   let $ee_config7_val = substr($ee_config_val,1,(#seq# - 1))||&byte_Val||substr($ee_config_val,(#seq# + 1),(10 - #seq#))
!06/10/1998 - CJH
   move 'Y' to $byte_found

!SXK 06/15/1998 Start
   move &byte_val to $byte_val
!SXK End

   display 'byte val = ' noline
   display $ee_config7_val
! end-if
     
FROM PS_GEX_CONFG7_RULE H
WHERE H.BENEFIT_PROGRAM = $bp_name
  AND H.GEX_SEQ = &seq#
!  AND H.GEX_REL_VALUE = &column_val
  AND [$comp1_Def]
end-select

Let $comp1_def = ' '
end-procedure


!*********************************************************************
!This procedure checks the job row exists with effdt=Sunday before run
!date If so, increments the sequence number and inserts a new job 
!row with the calculated eligibility config7 value.  If job row doesn't
!exist, it inserts a new job row with effdt=prior Sunday before run date
!and with new eligibility config7 value.
!*********************************************************************
begin-procedure insert-procedure
#debug9 show 'gexbnypa.insert-procedure'

	    do select-job-row
            do select-comp-row
	    if $errorfound = 'N'

	       if $bas_action_retrieved <> 'Y'
		  do get-bas-action
	       end-if

	       if $effdt_row_exists = 'Y'

		  let $bac_emplid = &I.EMPLID
		  let #bac_empl_rcd = &I.EMPL_RCD
		  let $bac_bas_action_source = 'TJ'
		  let $bac_event_dt = &I.EFFDT
		  let #bac_event_effseq = #effseq
		  let $bac_cobra_action = &I.COBRA_ACTION
                  show '********* effdt row exists-do inserts for job row, jobjr, comp'
		  do insert-job-row-effdt-exists                
                  do insert-job-jr-row-effdt-exists         !GBD 11/14/2002
                  do insert-compensation-row-effdt-exists   !GBD 11/14/2002

	       else
		  let $bac_emplid = &J.EMPLID
		  let #bac_empl_rcd = &J.EMPL_RCD
		  let $bac_bas_action_source = 'TJ'
		  let $bac_event_dt = $effdt_newrow_dbf      !effdt same as new job row insert
		  let #bac_event_effseq = 0
		  let $bac_cobra_action = &J.COBRA_ACTION
                  
                  show '********* effdt row DOESNOT exist-do inserts for job row, jobjr, comp'
		  do insert-job-row
                  do insert-job-jr-row                       
                  do insert-compensation-row                 
	           
	       end-if

               do select-all-future-job-rows
	       let $bas_activity_exists = 'N'
	       do select-bas-activity-row
	       if $bas_activity_exists = 'N'
		  do insert-bas-activity-row
	       end-if

	    end-if

end-procedure

!*********************************************************************
!Selects the job table row with effdt set as the Sunday before run date.
!If it does not exist it gets the max job row to prepare for the insert.
!If it does find it, it adds +1 to the effseq in prep for the insert.
!*********************************************************************

begin-procedure select-job-row
#debug9 show 'gexbnypa.select-job-row'

move 'N' to $found
move 'N' to $effdt_row_exists
move 'N' to $errorfound

begin-select on-error=sql-error-found('select-job-row')
I.EMPLID
I.EMPL_RCD
I.EFFDT
I.EFFSEQ
I.PER_ORG           ! GEX ISDVNPK 08/27/2007                     
I.DEPTID
I.JOBCODE
I.POSITION_NBR
I.SUPERVISOR_ID                 ! GEX ISDVNPK 08/27/2007                    
I.POSITION_OVERRIDE
I.POSN_CHANGE_RECORD
I.EMPL_STATUS
I.ACTION
I.ACTION_dT
I.ACTION_REASON
I.LOCATION
I.TAX_LOCATION_cD
I.JOB_ENTRY_DT
I.DEPT_ENTRY_DT
I.POSITION_ENTRY_DT
I.SHIFT
I.REG_TEMP
I.FULL_PART_TIME
I.COMPANY
I.PAYGROUP
!SXK 11/09/1999 Begin
!I.PIN_NUM
!I.PAY_BASIS_NUM
!SXK 11/09/1999 End
I.BAS_GROUP_ID
I.ELIG_CONFIG1
I.ELIG_CONFIG2
I.ELIG_CONFIG3
I.ELIG_CONFIG4
I.ELIG_CONFIG5
I.ELIG_CONFIG6
I.ELIG_CONFIG7
I.ELIG_CONFIG8
I.ELIG_CONFIG9
I.BEN_STATUS
!SXK 11/09/1999 Begin
I.BAS_ACTION
!SXK 11/09/1999 End
I.COBRA_aCTION
I.EMPL_TYPE
I.HOLIDAY_SCHEDULE
I.STD_HOURS
I.STD_HRS_FREQUENCY                                  !GBD 09/20/2002
I.OFFICER_CD
I.EMPL_CLASS
I.SAL_ADMIN_PLAN
I.GRADE
I.GRADE_ENTRY_dT
I.STEP
I.STEP_ENTRY_DT
I.GL_PAY_TYPE
I.ACCT_cD
I.EARNS_DIST_TYPE
! GEX ISDVNPK 08/27/2007          
!I.SALARY_MATRIX_CD
!I.RATING_SCALE
!I.REVIEW_RATING
!I.REVIEW_DT
! GEX ISDVNPK 08/27/2007          
I.COMP_FREQUENCY
I.COMPRATE
I.CHANGE_AMT
I.CHANGE_PCT
I.ANNUAL_RT
I.MONTHLY_RT
I.DAILY_RT
I.HOURLY_RT
I.ANNL_BENEF_BASE_RT
I.SHIFT_RT
I.SHIFT_FACTOR
I.CURRENCY_CD
!sxk 11/09/1999 Begin
I.BUSINESS_UNIT
I.SETID_DEPT
I.SETID_JOBCODE
I.SETID_LOCATION                                     !GBD 09/20/2002
I.SETID_SALARY                                       !GBD 09/20/2002
I.REG_REGION
I.DIRECTLY_TIPPED
!SXK 11/09/1999 End
I.FLSA_STATUS
I.EEO_CLASS
I.FUNCTION_CD
I.TARIFF_GER                                         !GBD 09/20/2002 Begin
I.TARIFF_AREA_GER        
I.PERFORM_GROUP_GER
I.LABOR_TYPE_GER         
I.SPK_COMM_ID_GER        
!I.WRKS_CNCL_MEM_GER     ! GEX ISDVNPK 08/27/2007                                       !GBD 09/20/2002 End
I.HOURLY_RT_FRA
I.ACCDNT_CD_FRA
I.VALUE_1_FRA                                        !GBD 09/20/2002 Begin
I.VALUE_2_FRA            
I.VALUE_3_FRA            
I.VALUE_4_FRA            
I.VALUE_5_FRA            
I.CTG_RATE               
I.PAID_HOURS             
I.PAID_FTE               
I.PAID_HRS_FREQUENCY
! GEX ISDVNPK 08/27/2007               
!I.GVT_EFFDT              
!I.GVT_EFFDT_PROPOSED     
!I.GVT_TRANS_NBR          
!I.GVT_TRANS_NBR_SEQ      
!I.GVT_WIP_STATUS         
!I.GVT_STATUS_TYPE        
!I.GVT_NOA_CODE           
!I.GVT_LEG_AUTH_1         
!I.GVT_PAR_AUTH_D1        
!I.GVT_PAR_AUTH_D1_2      
!I.GVT_LEG_AUTH_2         
!I.GVT_PAR_AUTH_D2        
!I.GVT_PAR_AUTH_D2_2      
!I.GVT_PAR_NTE_DATE       
!I.GVT_WORK_SCHED         
!I.GVT_SUB_AGENCY         
!I.GVT_ELIG_FEHB          
!I.GVT_FEHB_DT            
!I.GVT_PAY_RATE_DETER     
!I.GVT_STEP               
!I.GVT_RTND_PAY_PLAN      
!I.GVT_RTND_SAL_PLAN      
!I.GVT_RTND_GRADE         
!I.GVT_RTND_STEP          
!I.GVT_RTND_GVT_STEP      
!I.GVT_PAY_BASIS          
!I.GVT_COMPRATE           
!I.GVT_LOCALITY_ADJ       
!I.GVT_BIWEEKLY_RT        
!I.GVT_DAILY_RT           
!I.GVT_HRLY_RT_NO_LOC     
!I.GVT_DLY_RT_NO_LOC      
!I.GVT_BW_RT_NO_LOC       
!I.GVT_MNLY_RT_NO_LOC     
!I.GVT_ANNL_RT_NO_LOC     
!I.GVT_XFER_FROM_AGCY     
!I.GVT_XFER_TO_AGCY       
!I.GVT_RETIRE_PLAN        
!I.GVT_ANN_IND            
!I.GVT_FEGLI              
!I.GVT_FEGLI_LIVING       
!I.GVT_LIVING_AMT         
!I.GVT_ANNUITY_OFFSET     
!I.GVT_CSRS_FROZN_SVC     
!I.GVT_PREV_RET_COVRG     
!I.GVT_FERS_COVERAGE      
!I.GVT_TYPE_OF_APPT       
!I.GVT_POI                
!I.GVT_POSN_OCCUPIED      
!I.GVT_CONT_EMPLID        
!I.GVT_ROUTE_NEXT         
!I.GVT_CHANGE_FLAG        
!I.GVT_TSP_UPD_IND        
!I.GVT_PI_UPD_IND         
!I.GVT_SF52_NBR           
!I.GVT_S113G_CEILING      
!I.GVT_LEO_POSITION       
!I.GVT_ANNUIT_COM_DT      
!I.GVT_BASIC_LIFE_RED     
!I.GVT_DED_PRORT_DT       
!I.GVT_FEGLI_BASC_PCT     
!I.GVT_FEGLI_OPT_PCT      
!I.GVT_FEHB_PCT           
!I.GVT_RETRO_FLAG         
!I.GVT_RETRO_DED_FLAG     
!I.GVT_RETRO_JOB_FLAG     
!I.GVT_RETRO_BSE_FLAG     
!I.GVT_OTH_PAY_CHG        
!I.GVT_DETL_POSN_NBR      
!I.ANNL_BEN_BASE_OVRD     
!I.BENEFIT_PROGRAM        
!I.UPDATE_PAYROLL         
!I.GVT_PAY_PLAN           
!I.GVT_PAY_FLAG           
!I.GVT_NID_CHANGE
! GEX ISDVNPK 08/27/2007                  
I.UNION_FULL_PART        
I.UNION_POS              
I.MATRICULA_NBR          
I.SOC_SEC_RISK_CODE      
I.UNION_FEE_AMOUNT       
I.UNION_FEE_START_DT     
I.UNION_FEE_END_DT       
I.EXEMPT_JOB_LBR         
I.EXEMPT_HOURS_MONTH     
I.WRKS_CNCL_FUNCTION     
I.INTERCTR_WRKS_CNCL     
I.CURRENCY_CD1           
I.PAY_UNION_FEE          
I.UNION_CD               
I.BARG_UNIT              
I.UNION_SENIORITY_DT     
I.ENTRY_DATE             
I.LABOR_AGREEMENT        
I.EMPL_CTG               
I.EMPL_CTG_L1            
I.EMPL_CTG_L2            
I.SETID_LBR_AGRMNT  
! GEX ISDVNPK 08/27/2007
I.WPP_STOP_FLAG                          
I.LABOR_FACILITY_ID                      
I.LBR_FAC_ENTRY_DT                       
I.LAYOFF_EXEMPT_FLAG                     
I.LAYOFF_EXEMPT_RSN                      
! GEX ISDVNPK 08/27/2007    
I.GP_PAYGROUP            
I.GP_DFLT_ELIG_GRP       
I.GP_ELIG_GRP            
I.GP_DFLT_CURRTTYP       
I.CUR_RT_TYPE            
I.GP_DFLT_EXRTDT         
I.GP_ASOF_DT_EXG_RT      
I.ADDS_TO_FTE_ACTUAL     
I.CLASS_INDC             
I.ENCUMB_OVERRIDE        
I.FICA_STATUS_EE         
I.FTE                    
I.PRORATE_CNT_AMT        
I.PAY_SYSTEM_FLG         
I.BORDER_WALKER          
I.LUMP_SUM_PAY           
I.CONTRACT_NUM           
I.JOB_INDICATOR          
I.WRKS_CNCL_ROLE_CHE     
!I.WRKS_CNCL_ID_LCL     ! GEX ISDVNPK 08/27/2007   
I.BENEFIT_SYSTEM         
I.WORK_DAY_HOURS         
!I.SUPERVISOR_ID    ! GEX ISDVNPK 08/27/2007     
! GEX ISDVNPK 08/27/2007     
I.HR_STATUS                              
I.APPT_TYPE                              
I.MAIN_APPT_NUM_JPN  
! GEX ISDVNPK 08/27/2007                         
I.REPORTS_TO             
I.FORCE_PUBLISH          
I.JOB_DATA_SRC_CD                                    !GBD 09/20/2002 End
I.ESTABID
! GEX ISDVNPK 08/27/2007     
I.SUPV_LVL_ID                            
I.SETID_SUPV_LVL                         
I.ABSENCE_SYSTEM_CD                      
I.POI_TYPE                               
I.HIRE_DT                                
I.LAST_HIRE_DT                           
I.TERMINATION_DT                         
I.ASGN_START_DT                          
I.LST_ASGN_START_DT                      
I.ASGN_END_DT                            
I.LDW_OVR                                
I.LAST_DATE_WORKED                       
I.EXPECTED_RETURN_DT                     
I.EXPECTED_END_DATE                      
I.AUTO_END_FLG                           
I.LASTUPDDTTM                            
I.LASTUPDOPRID   
! GEX ISDVNPK 08/27/2007                             
I.GEX_LIGHT_DUTY
I.GEX_CHANGE_RECORD
I.GEX_VOLUN_LOW_HRS
I.GEX_STUDENT_IND
I.GEX_MOON_IND
I.GEX_DEPTID_OVR
I.GEX_ACCT_CD_OVR
I.GEX_GL_EXP_OVR
I.GEX_STEWARD
I.GEX_DUES_EXEMPT
I.GEX_FINAN_CORE
I.GEX_INFLATED_HRS
i.GEX_FP_CODE
I.GEX_SEASONAL_EMP	!AXL 5/14/2001 New job field 
    move 'Y' to $found
    move 'Y' to $effdt_row_exists
    let #effseq = &I.EFFSEQ + 1
    move &I.EMPL_RCD to #empl_rcd#

!GBD 11/14/2002 Begin
    Do select-job-jr-row
!GBD 11/14/2002 End

FROM PS_JOB I

WHERE I.EMPLID = $emplid
  AND I.EMPL_RCD = &D.EMPL_RCD
  AND I.EFFDT = $effdt_newrow_dbf            
  AND I.EFFSEQ = 
      (SELECT MAX(EFFSEQ)
	 FROM PS_JOB I1
	WHERE I1.EMPLID = $emplid
	  AND I1.EMPL_RCD = &D.EMPL_RCD
	  AND I1.EFFDT = I.EFFDT)            

end-SELECT

if $found = 'N'
  do select-current-job-row          !to get all the information for the insert
end-if

end-procedure

!GBD 11/14/2002 Begin
!*********************************************************************
!Selects the job_jr table row with runcontrol effdt. If it does not
!exist calls the select to get the maximum effdt row for the employee
!*********************************************************************
begin-procedure select-job-jr-row
#debug9 show 'gexbnypy.select-job-jr-row'

begin-select on-error=sql-error-found('select-job-jr-row')
I2.EMPLID                 
I2.EMPL_RCD               
I2.EFFDT                  
I2.EFFSEQ                 
I2.LASTUPDDTTM            
I2.LASTUPDOPRID           
I2.TAXCODE_UK             
I2.TAX_BASIS_UK           
I2.WORKER_TYPE_MEX        
I2.REDUCED_WEEK_MEX       
I2.LOCATED_CD_MEX         
I2.SALARY_TYPE_MEX        
I2.IMS_TERM_DT_MEX 
!GEX ISDVNPK 08/27/2007       
!I2.CASUAL_IND             
!I2.SALARY_PACKAGED        
!I2.PAYROLL_STATE_AUS      
!I2.CLASSN_CURRENT_AUS     
!I2.WORK_SECTOR_AUS        
!I2.FUNCTION_AUS           
!I2.ANN_CNTACT_HRS_AUS     
!I2.TEACH_WEEKS_AUS        
!I2.CASUAL_TYPE_AUS        
!I2.TERM_TYPE_AUS          
!I2.TERM_LTD_AUS   
!GEX ISDVNPK 08/27/2007               
I2.BALANCE_GRP_NUM        
I2.FP_ACTION_2            
I2.CTG_RATE               
I2.FP_LEGALSTAT_CD        
I2.FP_SCNDMT_CD           
I2.FP_SCND_TYP            
I2.FP_CIVIL_PENSION       
I2.FP_SOURCE_ORG          
I2.FP_RECEP_ORG           
I2.FP_RETURN_CD           
I2.FP_PR_LEGSTA           
I2.FP_FOREND_DT           
I2.FP_END_DT              
I2.FP_CAREFRZPCT          
I2.FP_HIR_DOS_SIT         
I2.FP_PT_PCT_DET          
I2.FP_TITLE_NUM           
I2.FP_DURATION_PCT        
I2.FP_RATING_PRS_FLG      
I2.FP_BUDGET_NBR          
I2.FP_HDCNT_NBR           
I2.FP_POTENT_NBR          
I2.FP_RANK_CD             
I2.FP_STEP_CD             
I2.FP_RK_ENT_DT           
I2.FP_CORPS_CD            
I2.FP_CHG_COR_DT          
I2.FP_CATG_FP             
I2.FP_CATG_LEVEL          
I2.FP_RK_TRIALPD          
I2.FP_STEP_END_DT         
I2.FP_FOR_PROM_DT         
I2.FP_NOMINATION_DT       
I2.FP_TRAINEE             
I2.FP_TRNE_POSN           
I2.FP_RK_PD_END_DT        
I2.FP_SANCTION            
I2.FP_DOWN_GRA            
I2.FP_APPL_SAL_DT         
I2.FP_CHG_IND             
I2.FP_CLD_INST            
I2.FP_SETID_RANK          
I2.FP_INSTALL_DT          
I2.FP_EQUIV_STEP          
I2.FP_STEP_CD2            
I2.FP_BUSINESS_CD         
I2.FP_APPL_DT             
I2.FP_CHG_SAL             
I2.FP_POINTYP_CD          
I2.FP_GROSS_IND           
I2.FP_INCS_IND            
I2.FP_INCS_IND2           
I2.FP_PT_PCT              
I2.FP_PT_END_DT           
I2.FP_PT_FOREND_DT        
I2.FP_COMPRATE            
I2.FP_INST_STAT           
I2.FP_RETROSPECT          
I2.FP_ROW_END_DT          
I2.LAST_UPDATE_DATE       
I2.OTHER_ID_JPN           
I2.INTCP_XFR_FLG          
I2.INTCP_XFR_START_DT     
I2.INTCP_XFR_END_DT       
I2.INTCP_BUS_UNIT         
I2.INTCP_DEPTID           
I2.INTCP_DEPTID2          
I2.INTCP_SETID_DEPT       
I2.INTCP_COMPANY          
I2.INTCP_COMPANY2         
I2.INTCP_SUPV_LVL_ID      
I2.INTCP_SUPV_LVL_ID2
!GEX ISDVNPK 08/27/2007  
I2.START_DATE_JPN                          
I2.EXP_END_DATE_JPN                        
I2.END_DATE_JPN                            
!I2.SUPV_LVL_ID            
!I2.EXPECTED_END_DATE      
!I2.AUTO_END_FLG  
!GEX ISDVNPK 08/27/2007           
I2.DUTIES_TYPE            
I2.ASSIGNMENT_ID          
I2.TARGET_COMPRATE        
I2.CMP_DONT_ABSORB        
I2.SSN_EMPLOYER           
I2.UNITA_PROD_CD          
I2.ACTION_ITA             
I2.ACTION_REASON_ITA      
I2.SPECIAL_HIRCTG_ITA     
I2.PART_TIME_TYPE_ITA     
I2.PART_TIME_PERC_ITA     
I2.PARTTIME_ENDDT_ITA   
!GEX ISDVNPK 08/27/2007   
I2.WORKDAYS_NLD                            
I2.CONT_SAL_TYPE_BRA                       
I2.CBO_CD_BRA                              
I2.SEFIP_CATEGORY_BRA                      
I2.UNION_CD_ALT_BRA   
!GEX ISDVNPK 08/27/2007 

FROM PS_JOB_JR I2

WHERE I2.EMPLID = $emplid
  AND I2.EMPL_RCD = &D.EMPL_RCD
  AND I2.EFFDT = $effdt_newrow_dbf
  AND I2.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB_JR
	WHERE EMPLID = $emplid
	  AND EMPL_RCD = &D.EMPL_RCD
	  AND EFFDT = I2.EFFDT)		!AXL 07/27/2004 Modify from SYSDATE
end-select

end-procedure
!GBD 11/14/2002 End

!AXL 02/28/2003 Begin
!*********************************************************************
!Select the corresponding Compensation Row
!*********************************************************************
begin-procedure select-comp-row
#debug9 show 'gexbnypy.select-comp-row'

  move 'N' to $found_comp
 
begin-select on-error=sql-error-found('select-comp-row')

I3.EMPLID                 
I3.EMPL_RCD               
I3.EFFDT                  
I3.EFFSEQ                 
I3.COMP_EFFSEQ            
I3.COMP_RATECD            
I3.COMP_RATE_POINTS       
I3.COMPRATE               
I3.COMP_PCT               
I3.COMP_FREQUENCY         
I3.CURRENCY_CD            
I3.MANUAL_SW              
I3.CONVERT_COMPRT         
I3.RATE_CODE_GROUP        
I3.CHANGE_AMT             
I3.CHANGE_PCT             
I3.CHANGE_PTS             
I3.FTE_INDICATOR          
I3.CMP_SRC_IND       

  move 'Y' to $found_comp
  let #effseq_comp = &I3.EFFSEQ + 1
  
FROM PS_COMPENSATION I3

  WHERE I3.EMPLID   = $emplid
  AND   I3.EMPL_RCD = &D.empl_rcd

  AND I3.EFFDT = $effdt_newrow_dbf
  AND I3.EFFSEQ = 
      (SELECT MAX(EFFSEQ) FROM PS_COMPENSATION
       WHERE I3.EMPLID      = EMPLID
        AND I3.EMPL_RCD     = EMPL_RCD
        AND I3.COMP_EFFSEQ  = COMP_EFFSEQ
        AND I3.COMP_RATECD  = COMP_RATECD
        AND I3.EFFDT        = EFFDT)  

end-select

if $found_comp = 'N'
  do select-current-comp-row
end-if

end-procedure
!AXL 02/28/2003 End

!*********************************************************************
!Selects maximum effdt row for the employee
!*********************************************************************

begin-procedure select-current-job-row
#debug9 show 'gexbnypy.select-current-job-row'

move 'N' to $found
move 'N' to $errorfound
display '-------select current job row---------'
display 'Empl RCD#:' noline
display &D.EMPL_RCD

begin-select on-error=sql-error-found('select-current-job-row')
J.EMPLID
J.EMPL_RCD 
J.EFFDT
J.EFFSEQ    
J.PER_ORG     ! GEX ISDVNPK 08/27/2007                               
J.DEPTID
J.JOBCODE
J.POSITION_NBR 
J.SUPERVISOR_ID                   ! GEX ISDVNPK 08/27/2007               
J.POSITION_OVERRIDE
J.POSN_CHANGE_RECORD
J.EMPL_STATUS
J.ACTION
J.ACTION_dT
J.ACTION_REASON
J.LOCATION
J.TAX_LOCATION_cD
J.JOB_ENTRY_DT
J.DEPT_ENTRY_DT
J.POSITION_ENTRY_DT
J.SHIFT
J.REG_TEMP
J.FULL_PART_TIME
J.COMPANY
J.PAYGROUP
!SXK 11/09/1999 Begin
!J.PIN_NUM                                           !GBD 09/20/2002
!J.PAY_BASIS_NUM                                     !GBD 09/20/2002
!SXK 11/09/1999 End
J.BAS_GROUP_ID
J.ELIG_CONFIG1
J.ELIG_CONFIG2
J.ELIG_CONFIG3
J.ELIG_CONFIG4
J.ELIG_CONFIG5
J.ELIG_CONFIG6
J.ELIG_CONFIG7
J.ELIG_CONFIG8
J.ELIG_CONFIG9
J.BEN_STATUS
!SXK 11/09/1999 Begin
J.BAS_ACTION
!SXK 11/09/1999 End
J.COBRA_aCTION
J.EMPL_TYPE
J.HOLIDAY_SCHEDULE
J.STD_HOURS
J.STD_HRS_FREQUENCY                                  !GBD 09/20/2002
J.OFFICER_CD
J.EMPL_CLASS
J.SAL_ADMIN_PLAN
J.GRADE
J.GRADE_ENTRY_dT
J.STEP
J.STEP_ENTRY_DT
J.GL_PAY_TYPE
J.ACCT_cD
J.EARNS_DIST_TYPE
! GEX ISDVNPK 08/27/2007      
!J.SALARY_MATRIX_CD
!J.RATING_SCALE
!J.REVIEW_RATING
!J.REVIEW_DT
! GEX ISDVNPK 08/27/2007      
J.COMP_FREQUENCY
J.COMPRATE
J.CHANGE_AMT
J.CHANGE_PCT
J.ANNUAL_RT
J.MONTHLY_RT
J.DAILY_RT                                           !GBD 09/20/2002
J.HOURLY_RT
J.ANNL_BENEF_BASE_RT
J.SHIFT_RT
J.SHIFT_FACTOR
J.CURRENCY_CD
!sxk 11/09/1999 Begin
J.BUSINESS_UNIT
J.SETID_DEPT
J.SETID_JOBCODE
J.SETID_LOCATION                                     !GBD 09/20/2002
J.SETID_SALARY                                       !GBD 09/20/2002
J.REG_REGION
J.DIRECTLY_TIPPED
!SXK 11/09/1999 End
J.FLSA_STATUS
J.EEO_CLASS
J.FUNCTION_CD
J.TARIFF_GER                                         !GBD 09/20/2002
J.TARIFF_AREA_GER
J.PERFORM_GROUP_GER
J.LABOR_TYPE_GER
J.SPK_COMM_ID_GER
!J.WRKS_CNCL_MEM_GER    ! GEX ISDVNPK 08/27/2007                                       !GBD 09/20/2002
J.HOURLY_RT_FRA
J.ACCDNT_CD_FRA
J.VALUE_1_FRA                                        !GBD 09/20/2002 Begin      
J.VALUE_2_FRA            
J.VALUE_3_FRA            
J.VALUE_4_FRA            
J.VALUE_5_FRA            
J.CTG_RATE               
J.PAID_HOURS             
J.PAID_FTE               
J.PAID_HRS_FREQUENCY   
! GEX ISDVNPK 08/27/2007        
!J.GVT_EFFDT              
!J.GVT_EFFDT_PROPOSED     
!J.GVT_TRANS_NBR          
!J.GVT_TRANS_NBR_SEQ      
!J.GVT_WIP_STATUS         
!J.GVT_STATUS_TYPE        
!J.GVT_NOA_CODE           
!J.GVT_LEG_AUTH_1         
!J.GVT_PAR_AUTH_D1        
!J.GVT_PAR_AUTH_D1_2      
!J.GVT_LEG_AUTH_2         
!J.GVT_PAR_AUTH_D2        
!J.GVT_PAR_AUTH_D2_2      
!J.GVT_PAR_NTE_DATE       
!J.GVT_WORK_SCHED         
!J.GVT_SUB_AGENCY         
!J.GVT_ELIG_FEHB          
!J.GVT_FEHB_DT            
!J.GVT_PAY_RATE_DETER     
!J.GVT_STEP               
!J.GVT_RTND_PAY_PLAN      
!J.GVT_RTND_SAL_PLAN      
!J.GVT_RTND_GRADE         
!J.GVT_RTND_STEP          
!J.GVT_RTND_GVT_STEP      
!J.GVT_PAY_BASIS          
!J.GVT_COMPRATE           
!J.GVT_LOCALITY_ADJ       
!J.GVT_BIWEEKLY_RT        
!J.GVT_DAILY_RT           
!J.GVT_HRLY_RT_NO_LOC     
!J.GVT_DLY_RT_NO_LOC      
!J.GVT_BW_RT_NO_LOC       
!J.GVT_MNLY_RT_NO_LOC     
!J.GVT_ANNL_RT_NO_LOC     
!J.GVT_XFER_FROM_AGCY     
!J.GVT_XFER_TO_AGCY       
!J.GVT_RETIRE_PLAN        
!J.GVT_ANN_IND            
!J.GVT_FEGLI              
!J.GVT_FEGLI_LIVING       
!J.GVT_LIVING_AMT         
!J.GVT_ANNUITY_OFFSET     
!J.GVT_CSRS_FROZN_SVC     
!J.GVT_PREV_RET_COVRG     
!J.GVT_FERS_COVERAGE      
!J.GVT_TYPE_OF_APPT       
!J.GVT_POI                
!J.GVT_POSN_OCCUPIED      
!J.GVT_CONT_EMPLID        
!J.GVT_ROUTE_NEXT         
!J.GVT_CHANGE_FLAG        
!J.GVT_TSP_UPD_IND        
!J.GVT_PI_UPD_IND         
!J.GVT_SF52_NBR           
!J.GVT_S113G_CEILING      
!J.GVT_LEO_POSITION       
!J.GVT_ANNUIT_COM_DT      
!J.GVT_BASIC_LIFE_RED     
!J.GVT_DED_PRORT_DT       
!J.GVT_FEGLI_BASC_PCT     
!J.GVT_FEGLI_OPT_PCT      
!J.GVT_FEHB_PCT           
!J.GVT_RETRO_FLAG         
!J.GVT_RETRO_DED_FLAG     
!J.GVT_RETRO_JOB_FLAG     
!J.GVT_RETRO_BSE_FLAG     
!J.GVT_OTH_PAY_CHG        
!J.GVT_DETL_POSN_NBR      
!J.ANNL_BEN_BASE_OVRD     
!J.BENEFIT_PROGRAM        
!J.UPDATE_PAYROLL         
!J.GVT_PAY_PLAN           
!J.GVT_PAY_FLAG           
!J.GVT_NID_CHANGE 
! GEX ISDVNPK 08/27/2007              
J.UNION_FULL_PART        
J.UNION_POS              
J.MATRICULA_NBR          
J.SOC_SEC_RISK_CODE      
J.UNION_FEE_AMOUNT       
J.UNION_FEE_START_DT     
J.UNION_FEE_END_DT       
J.EXEMPT_JOB_LBR         
J.EXEMPT_HOURS_MONTH     
J.WRKS_CNCL_FUNCTION     
J.INTERCTR_WRKS_CNCL     
J.CURRENCY_CD1           
J.PAY_UNION_FEE          
J.UNION_CD               
J.BARG_UNIT              
J.UNION_SENIORITY_DT     
J.ENTRY_DATE             
J.LABOR_AGREEMENT        
J.EMPL_CTG               
J.EMPL_CTG_L1            
J.EMPL_CTG_L2            
J.SETID_LBR_AGRMNT 
! GEX ISDVNPK 08/27/2007     
J.WPP_STOP_FLAG                          
J.LABOR_FACILITY_ID                      
J.LBR_FAC_ENTRY_DT                       
J.LAYOFF_EXEMPT_FLAG                     
J.LAYOFF_EXEMPT_RSN                      
! GEX ISDVNPK 08/27/2007     
J.GP_PAYGROUP            
J.GP_DFLT_ELIG_GRP       
J.GP_ELIG_GRP            
J.GP_DFLT_CURRTTYP       
J.CUR_RT_TYPE            
J.GP_DFLT_EXRTDT         
J.GP_ASOF_DT_EXG_RT      
J.ADDS_TO_FTE_ACTUAL     
J.CLASS_INDC             
J.ENCUMB_OVERRIDE        
J.FICA_STATUS_EE         
J.FTE                    
J.PRORATE_CNT_AMT        
J.PAY_SYSTEM_FLG         
J.BORDER_WALKER          
J.LUMP_SUM_PAY           
J.CONTRACT_NUM           
J.JOB_INDICATOR          
J.WRKS_CNCL_ROLE_CHE     
!J.WRKS_CNCL_ID_LCL       
J.BENEFIT_SYSTEM         
J.WORK_DAY_HOURS      
! GEX ISDVNPK 08/27/2007 
J.HR_STATUS                              
J.APPT_TYPE                              
J.MAIN_APPT_NUM_JPN                      
! GEX ISDVNPK 08/27/2007 
J.REPORTS_TO             
J.FORCE_PUBLISH          
J.JOB_DATA_SRC_CD                                    !GBD 09/20/2002 nd
J.ESTABID
! GEX ISDVNPK 08/27/2007 
J.SUPV_LVL_ID                            
J.SETID_SUPV_LVL                         
J.ABSENCE_SYSTEM_CD                      
J.POI_TYPE                               
J.HIRE_DT                                
J.LAST_HIRE_DT                           
J.TERMINATION_DT                         
J.ASGN_START_DT                          
J.LST_ASGN_START_DT                      
J.ASGN_END_DT                            
J.LDW_OVR                                
J.LAST_DATE_WORKED                       
J.EXPECTED_RETURN_DT                     
J.EXPECTED_END_DATE                      
J.AUTO_END_FLG                           
J.LASTUPDDTTM                            
J.LASTUPDOPRID                           
! GEX ISDVNPK 08/27/2007 
J.GEX_LIGHT_DUTY
J.GEX_CHANGE_RECORD
J.GEX_VOLUN_LOW_HRS
J.GEX_STUDENT_IND
J.GEX_MOON_IND
J.GEX_DEPTID_OVR
J.GEX_ACCT_CD_OVR
J.GEX_GL_EXP_OVR
J.GEX_STEWARD
J.GEX_DUES_EXEMPT
J.GEX_FINAN_CORE
J.GEX_INFLATED_HRS
J.GEX_FP_CODE
J.GEX_SEASONAL_EMP	!AXL 5/14/2001 New job field
   move 'Y' to $found
   show 'found max job row for employee'
   move &J.EFFSEQ to #effseq
   move &J.EMPL_RCD to #empl_rcd#

!GBD 11/14/2002 Begin
   Do select-current-job-jr-row
!GBD 11/14/2002 End
   
FROM PS_JOB J
WHERE J.EMPLID = $emplid
  AND J.EMPL_RCD = &D.EMPL_RCD
  AND J.EFFDT = 
       (SELECT MAX(EFFDT)
	  FROM PS_JOB J1 
	 WHERE J1.EMPLID = $emplid
	   AND J1.EMPL_RCD = &D.EMPL_RCD
! added 06/09/1998 - CJH
	   AND EFFDT <= SYSDATE)          !SCM  09/27/2002
! added 06/09/1998 - CJH
  AND J.EFFSEQ = 
       (SELECT MAX(EFFSEQ)
	  FROM PS_JOB J2
	 WHERE J2.EMPLID = $emplid
	   AND J2.EMPL_RCD = &D.EMPL_RCD
	   AND J2.EFFDT = J.EFFDT)
end-SELECT

if $found = 'N'
   do error-found
   print 'No Job information exists for the employee' (,34)
end-if
	   
end-procedure

!GBD 11/14/2002 Begin
!*********************************************************************
!Selects maximum effdt row for the employee
!*********************************************************************
begin-procedure select-current-job-jr-row
#debug9 show 'gexbnpyp.select-current-job-jr-row'

begin-select on-error=sql-error-found('select-current-job-jr-row')
J2.EMPLID                 
J2.EMPL_RCD               
J2.EFFDT                  
J2.EFFSEQ                 
J2.LASTUPDDTTM            
J2.LASTUPDOPRID           
J2.TAXCODE_UK             
J2.TAX_BASIS_UK           
J2.WORKER_TYPE_MEX        
J2.REDUCED_WEEK_MEX       
J2.LOCATED_CD_MEX         
J2.SALARY_TYPE_MEX        
J2.IMS_TERM_DT_MEX 
!GEX ISDVNPK 08/27/2007       
!J2.CASUAL_IND             
!J2.SALARY_PACKAGED        
!J2.PAYROLL_STATE_AUS      
!J2.CLASSN_CURRENT_AUS     
!J2.WORK_SECTOR_AUS        
!J2.FUNCTION_AUS           
!J2.ANN_CNTACT_HRS_AUS     
!J2.TEACH_WEEKS_AUS        
!J2.CASUAL_TYPE_AUS        
!J2.TERM_TYPE_AUS          
!J2.TERM_LTD_AUS   
!GEX ISDVNPK 08/27/2007               
J2.BALANCE_GRP_NUM        
J2.FP_ACTION_2            
J2.CTG_RATE               
J2.FP_LEGALSTAT_CD        
J2.FP_SCNDMT_CD           
J2.FP_SCND_TYP            
J2.FP_CIVIL_PENSION       
J2.FP_SOURCE_ORG          
J2.FP_RECEP_ORG           
J2.FP_RETURN_CD           
J2.FP_PR_LEGSTA           
J2.FP_FOREND_DT           
J2.FP_END_DT              
J2.FP_CAREFRZPCT          
J2.FP_HIR_DOS_SIT         
J2.FP_PT_PCT_DET          
J2.FP_TITLE_NUM           
J2.FP_DURATION_PCT        
J2.FP_RATING_PRS_FLG      
J2.FP_BUDGET_NBR          
J2.FP_HDCNT_NBR           
J2.FP_POTENT_NBR          
J2.FP_RANK_CD             
J2.FP_STEP_CD             
J2.FP_RK_ENT_DT           
J2.FP_CORPS_CD            
J2.FP_CHG_COR_DT          
J2.FP_CATG_FP             
J2.FP_CATG_LEVEL          
J2.FP_RK_TRIALPD          
J2.FP_STEP_END_DT         
J2.FP_FOR_PROM_DT         
J2.FP_NOMINATION_DT       
J2.FP_TRAINEE             
J2.FP_TRNE_POSN           
J2.FP_RK_PD_END_DT        
J2.FP_SANCTION            
J2.FP_DOWN_GRA            
J2.FP_APPL_SAL_DT         
J2.FP_CHG_IND             
J2.FP_CLD_INST            
J2.FP_SETID_RANK          
J2.FP_INSTALL_DT          
J2.FP_EQUIV_STEP          
J2.FP_STEP_CD2            
J2.FP_BUSINESS_CD         
J2.FP_APPL_DT             
J2.FP_CHG_SAL             
J2.FP_POINTYP_CD          
J2.FP_GROSS_IND           
J2.FP_INCS_IND            
J2.FP_INCS_IND2           
J2.FP_PT_PCT              
J2.FP_PT_END_DT           
J2.FP_PT_FOREND_DT        
J2.FP_COMPRATE            
J2.FP_INST_STAT           
J2.FP_RETROSPECT          
J2.FP_ROW_END_DT          
J2.LAST_UPDATE_DATE       
J2.OTHER_ID_JPN           
J2.INTCP_XFR_FLG          
J2.INTCP_XFR_START_DT     
J2.INTCP_XFR_END_DT       
J2.INTCP_BUS_UNIT         
J2.INTCP_DEPTID           
J2.INTCP_DEPTID2          
J2.INTCP_SETID_DEPT       
J2.INTCP_COMPANY          
J2.INTCP_COMPANY2         
J2.INTCP_SUPV_LVL_ID      
J2.INTCP_SUPV_LVL_ID2
!GEX ISDVNPK 08/27/2007  
J2.START_DATE_JPN                          
J2.EXP_END_DATE_JPN                        
J2.END_DATE_JPN                            
!J2.SUPV_LVL_ID            
!J2.EXPECTED_END_DATE      
!J2.AUTO_END_FLG  
!GEX ISDVNPK 08/27/2007           
J2.DUTIES_TYPE            
J2.ASSIGNMENT_ID          
J2.TARGET_COMPRATE        
J2.CMP_DONT_ABSORB        
J2.SSN_EMPLOYER           
J2.UNITA_PROD_CD          
J2.ACTION_ITA             
J2.ACTION_REASON_ITA      
J2.SPECIAL_HIRCTG_ITA     
J2.PART_TIME_TYPE_ITA     
J2.PART_TIME_PERC_ITA     
J2.PARTTIME_ENDDT_ITA   
!GEX ISDVNPK 08/27/2007   
J2.WORKDAYS_NLD                            
J2.CONT_SAL_TYPE_BRA                       
J2.CBO_CD_BRA                              
J2.SEFIP_CATEGORY_BRA                      
J2.UNION_CD_ALT_BRA   
!GEX ISDVNPK 08/27/2007 


FROM PS_JOB_JR J2
WHERE J2.EMPLID = $emplid
  AND J2.EMPL_RCD = &D.EMPL_RCD
  AND J2.EFFDT = 
       (SELECT MAX(EFFDT)
	  FROM PS_JOB_JR
	 WHERE EMPLID = $emplid
	   AND EMPL_RCD = &D.EMPL_RCD
! added 06/09/1998 - CJH
	   AND EFFDT <= SYSDATE)
! added 06/09/1998 - CJH
  AND J2.EFFSEQ = 
       (SELECT MAX(EFFSEQ)
	  FROM PS_JOB_JR
	 WHERE EMPLID = $emplid
	   AND EMPL_RCD = &D.EMPL_RCD         
	   AND EFFDT = J2.EFFDT)
end-select

end-procedure
!GBD 11/14/2002 End

!AXL 02/28/2003 Begin
!*********************************************************************
!Select the corresponding Current Compensation Row
!*********************************************************************
begin-procedure select-current-comp-row
#debug9 show 'gexbnypy.select-current-comp-row'

   move 'N' to $found_comp
   move 'N' to $errorfound

begin-select on-error=sql-error-found('select-current-comp-row')

J3.EMPLID                 
J3.EMPL_RCD               
J3.EFFDT                  
J3.EFFSEQ                 
J3.COMP_EFFSEQ            
J3.COMP_RATECD            
J3.COMP_RATE_POINTS       
J3.COMPRATE               
J3.COMP_PCT               
J3.COMP_FREQUENCY         
J3.CURRENCY_CD            
J3.MANUAL_SW              
J3.CONVERT_COMPRT         
J3.RATE_CODE_GROUP        
J3.CHANGE_AMT             
J3.CHANGE_PCT             
J3.CHANGE_PTS             
J3.FTE_INDICATOR          
J3.CMP_SRC_IND          

   move 'Y' to $found_comp
   show 'found max comp row with effdt <= prior sunday'

FROM PS_COMPENSATION J3

  WHERE J3.EMPLID   = $emplid
  AND   J3.EMPL_RCD = &D.empl_rcd

  AND  J3.EFFDT =
       (SELECT MAX(EFFDT) FROM PS_COMPENSATION
       WHERE J3.EMPLID      = EMPLID
         AND J3.EMPL_RCD    = EMPL_RCD
         !AND J3.COMP_EFFSEQ = COMP_EFFSEQ	AXL 3/10/2003 Max row not returned
         !AND J3.COMP_RATECD = COMP_RATECD	AXL 3/10/2003 Max row not returned
         AND EFFDT <= SYSDATE)
   AND J3.EFFSEQ = 
       (SELECT MAX(EFFSEQ) FROM PS_COMPENSATION
        WHERE J3.EMPLID      = EMPLID
         AND J3.EMPL_RCD    = EMPL_RCD
         !AND J3.COMP_EFFSEQ = COMP_EFFSEQ	AXL 3/10/2003 Max row not returned
         !AND J3.COMP_RATECD = COMP_RATECD	AXL 3/10/2003 Max row not returned
         AND J3.EFFDT = EFFDT)  

end-select

  if $found_comp = 'N'
     do error-found
     print 'No Compensation info exists for the employee' (,34)
  end-if

end-procedure
!AXL 02/28/2003 End

!*********************************************************************

begin-procedure insert-job-row
#debug9 show 'gexbnypy.insert-job-row'

display '#######  insert-job-row  #######'
show 'new config7 : ' noline
display $elig_config7
display 'effdt_newrow_dbf : ' noline
display $effdt_newrow_dbf
begin-sql on-error=sql-error-found('insert-job-row')

insert into PS_JOB
(EMPLID                                 
,EMPL_RCD                               
,EFFDT                                  
,EFFSEQ                                 
,PER_ORG                                
,DEPTID                                 
,JOBCODE                                
,POSITION_NBR                           
,SUPERVISOR_ID                          
,POSITION_OVERRIDE                      
,POSN_CHANGE_RECORD                     
,EMPL_STATUS                            
,ACTION                                 
,ACTION_DT                              
,ACTION_REASON                          
,LOCATION                               
,TAX_LOCATION_CD                        
,JOB_ENTRY_DT                           
,DEPT_ENTRY_DT                          
,POSITION_ENTRY_DT                      
,SHIFT                                  
,REG_TEMP                               
,FULL_PART_TIME                         
,COMPANY                                
,PAYGROUP                               
,BAS_GROUP_ID                           
,ELIG_CONFIG1                           
,ELIG_CONFIG2                           
,ELIG_CONFIG3                           
,ELIG_CONFIG4                           
,ELIG_CONFIG5                           
,ELIG_CONFIG6                           
,ELIG_CONFIG7                           
,ELIG_CONFIG8                           
,ELIG_CONFIG9                           
,BEN_STATUS                             
,BAS_ACTION                             
,COBRA_ACTION                           
,EMPL_TYPE                              
,HOLIDAY_SCHEDULE                       
,STD_HOURS                              
,STD_HRS_FREQUENCY                      
,OFFICER_CD                             
,EMPL_CLASS                             
,SAL_ADMIN_PLAN                         
,GRADE                                  
,GRADE_ENTRY_DT                         
,STEP                                   
,STEP_ENTRY_DT                          
,GL_PAY_TYPE                            
,ACCT_CD                                
,EARNS_DIST_TYPE                        
,COMP_FREQUENCY                         
,COMPRATE                               
,CHANGE_AMT                             
,CHANGE_PCT                             
,ANNUAL_RT                              
,MONTHLY_RT                             
,DAILY_RT                               
,HOURLY_RT                              
,ANNL_BENEF_BASE_RT                     
,SHIFT_RT                               
,SHIFT_FACTOR                           
,CURRENCY_CD                            
,BUSINESS_UNIT                          
,SETID_DEPT                             
,SETID_JOBCODE                          
,SETID_LOCATION                         
,SETID_SALARY                           
,REG_REGION                             
,DIRECTLY_TIPPED                        
,FLSA_STATUS                            
,EEO_CLASS                              
,FUNCTION_CD                            
,TARIFF_GER                             
,TARIFF_AREA_GER                        
,PERFORM_GROUP_GER                      
,LABOR_TYPE_GER                         
,SPK_COMM_ID_GER                        
,HOURLY_RT_FRA                          
,ACCDNT_CD_FRA                          
,VALUE_1_FRA                            
,VALUE_2_FRA                            
,VALUE_3_FRA                            
,VALUE_4_FRA                            
,VALUE_5_FRA                            
,CTG_RATE                               
,PAID_HOURS                             
,PAID_FTE                               
,PAID_HRS_FREQUENCY                     
,UNION_FULL_PART                        
,UNION_POS                              
,MATRICULA_NBR                          
,SOC_SEC_RISK_CODE                      
,UNION_FEE_AMOUNT                       
,UNION_FEE_START_DT                     
,UNION_FEE_END_DT                       
,EXEMPT_JOB_LBR                         
,EXEMPT_HOURS_MONTH                     
,WRKS_CNCL_FUNCTION                     
,INTERCTR_WRKS_CNCL                     
,CURRENCY_CD1                           
,PAY_UNION_FEE                          
,UNION_CD                               
,BARG_UNIT                              
,UNION_SENIORITY_DT                     
,ENTRY_DATE                             
,LABOR_AGREEMENT                        
,EMPL_CTG                               
,EMPL_CTG_L1                            
,EMPL_CTG_L2                            
,SETID_LBR_AGRMNT                       
,WPP_STOP_FLAG                          
,LABOR_FACILITY_ID                      
,LBR_FAC_ENTRY_DT                       
,LAYOFF_EXEMPT_FLAG                     
,LAYOFF_EXEMPT_RSN                      
,GP_PAYGROUP                            
,GP_DFLT_ELIG_GRP                       
,GP_ELIG_GRP                            
,GP_DFLT_CURRTTYP                       
,CUR_RT_TYPE                            
,GP_DFLT_EXRTDT                         
,GP_ASOF_DT_EXG_RT                      
,ADDS_TO_FTE_ACTUAL                     
,CLASS_INDC                             
,ENCUMB_OVERRIDE                        
,FICA_STATUS_EE                         
,FTE                                    
,PRORATE_CNT_AMT                        
,PAY_SYSTEM_FLG                         
,BORDER_WALKER                          
,LUMP_SUM_PAY                           
,CONTRACT_NUM                           
,JOB_INDICATOR                          
,WRKS_CNCL_ROLE_CHE                     
,BENEFIT_SYSTEM                         
,WORK_DAY_HOURS                         
,HR_STATUS                              
,APPT_TYPE                              
,MAIN_APPT_NUM_JPN                      
,REPORTS_TO                             
,FORCE_PUBLISH                          
,JOB_DATA_SRC_CD                        
,ESTABID                                
,SUPV_LVL_ID                            
,SETID_SUPV_LVL                         
,ABSENCE_SYSTEM_CD                      
,POI_TYPE                               
,HIRE_DT                                
,LAST_HIRE_DT                           
,TERMINATION_DT                         
,ASGN_START_DT                          
,LST_ASGN_START_DT                      
,ASGN_END_DT                            
,LDW_OVR                                
,LAST_DATE_WORKED                       
,EXPECTED_RETURN_DT                     
,EXPECTED_END_DATE                      
,AUTO_END_FLG                           
,LASTUPDDTTM                            
,LASTUPDOPRID                           
,GEX_LIGHT_DUTY                         
,GEX_CHANGE_RECORD                      
,GEX_VOLUN_LOW_HRS                      
,GEX_STUDENT_IND                        
,GEX_MOON_IND                           
,GEX_DEPTID_OVR                         
,GEX_ACCT_CD_OVR                        
,GEX_GL_EXP_OVR                         
,GEX_STEWARD                            
,GEX_DUES_EXEMPT                        
,GEX_FINAN_CORE                         
,GEX_INFLATED_HRS                       
,GEX_FP_CODE                            
,GEX_SEASONAL_EMP)	!AXL 5/14/2001 New job field)
VALUES
(&J.EMPLID,
&J.EMPL_RCD,
$effdt_newrow_dbf,
0,
&J.PER_ORG, 
&J.DEPTID,
&J.JOBCODE,
&J.POSITION_NBR,
&J.SUPERVISOR_ID,
&J.POSITION_OVERRIDE,
&J.POSN_CHANGE_RECORD,
&J.EMPL_STATUS,
'ATO',
$reportdate_ccyy,
'BLC',
&J.LOCATION,
&J.TAX_LOCATION_cD,
&J.JOB_ENTRY_DT,
&J.DEPT_ENTRY_DT,
&J.POSITION_ENTRY_DT,
&J.SHIFT,
&J.REG_TEMP,
&J.FULL_PART_TIME,
&J.COMPANY,
&J.PAYGROUP,
!GBD 08/01/2002 Begin - removed in v8
!SXK 11/09/1999 Begin
!&J.PIN_NUM,
!&J.PAY_BASIS_NUM,
!SXK 11/09/1999 End
!GBD 08/01/2002 End
&J.BAS_GROUP_ID,
&J.ELIG_CONFIG1,
&J.ELIG_CONFIG2,
&J.ELIG_CONFIG3,
&J.ELIG_CONFIG4,
&J.ELIG_CONFIG5,
&J.ELIG_CONFIG6,
$elig_config7,
&J.ELIG_CONFIG8,
&J.ELIG_CONFIG9,
&J.BEN_STATUS,
!SXK 11/09/1999 Begin
&BAC.BAS_ACTION,
!SXK 11/09/1999 End
&J.COBRA_aCTION,
&J.EMPL_TYPE,
&J.HOLIDAY_SCHEDULE,
&J.STD_HOURS,
&J.STD_HRS_FREQUENCY,         !GBD 08/01/2002 Field Added
&J.OFFICER_CD,
&J.EMPL_CLASS,
&J.SAL_ADMIN_PLAN,
&J.GRADE,
&J.GRADE_ENTRY_dT,
&J.STEP,
&J.STEP_ENTRY_DT,
&J.GL_PAY_TYPE,
&J.ACCT_cD,
&J.EARNS_DIST_TYPE,
!&J.SALARY_MATRIX_CD,
!&J.RATING_SCALE,
!&J.REVIEW_RATING,
!&J.REVIEW_DT,
&J.COMP_FREQUENCY,
&J.COMPRATE,
&J.CHANGE_AMT,
&J.CHANGE_PCT,
&J.ANNUAL_RT,
&J.MONTHLY_RT,
&J.DAILY_RT,                 !GBD 08/01/2002 Field Added
&J.HOURLY_RT,
&J.ANNL_BENEF_BASE_RT,
&J.SHIFT_RT,
&J.SHIFT_FACTOR,
&J.CURRENCY_CD,
!sxk 11/09/1999 Begin
&J.BUSINESS_UNIT,
&J.SETID_DEPT,
&J.SETID_JOBCODE,
&J.SETID_LOCATION,           !GBD 08/01/2002 Field Added
&J.SETID_SALARY,             !GBD 08/01/2002 Field Added
&J.REG_REGION,
&J.DIRECTLY_TIPPED,
!SXK 11/09/1999 End
&J.FLSA_STATUS,
&J.EEO_CLASS,
&J.FUNCTION_CD,
!GBD 08/01/2002 Begin - Fields Added
&J.TARIFF_GER,
&J.TARIFF_AREA_GER,
&J.PERFORM_GROUP_GER,
&J.LABOR_TYPE_GER,
&J.SPK_COMM_ID_GER,
!&J.WRKS_CNCL_MEM_GER,
!GBD 08/01/2002 End - Fields Added
&J.HOURLY_RT_FRA,
&J.ACCDNT_CD_FRA,
!GBD 08/01/2002 Begin -  Fields Added
&J.VALUE_1_FRA,
&J.VALUE_2_FRA,
&J.VALUE_3_FRA,
&J.VALUE_4_FRA,
&J.VALUE_5_FRA,
&J.CTG_RATE,
&J.PAID_HOURS,
&J.PAID_FTE,
&J.PAID_HRS_FREQUENCY,
!&J.GVT_EFFDT,              
!&J.GVT_EFFDT_PROPOSED,     
!&J.GVT_TRANS_NBR,          
!&J.GVT_TRANS_NBR_SEQ,      
!&J.GVT_WIP_STATUS,         
!&J.GVT_STATUS_TYPE,        
!&J.GVT_NOA_CODE,           
!&J.GVT_LEG_AUTH_1,         
!&J.GVT_PAR_AUTH_D1,        
!&J.GVT_PAR_AUTH_D1_2,     
!&J.GVT_LEG_AUTH_2,      
!&J.GVT_PAR_AUTH_D2,        
!&J.GVT_PAR_AUTH_D2_2,      
!&J.GVT_PAR_NTE_DATE,       
!&J.GVT_WORK_SCHED,        
!&J.GVT_SUB_AGENCY,         
!&J.GVT_ELIG_FEHB,          
!&J.GVT_FEHB_DT,            
!&J.GVT_PAY_RATE_DETER,     
!&J.GVT_STEP,               
!&J.GVT_RTND_PAY_PLAN,      
!&J.GVT_RTND_SAL_PLAN,      
!&J.GVT_RTND_GRADE,         
!&J.GVT_RTND_STEP,          
!&J.GVT_RTND_GVT_STEP,      
!&J.GVT_PAY_BASIS,          
!&J.GVT_COMPRATE,           
!&J.GVT_LOCALITY_ADJ,       
!&J.GVT_BIWEEKLY_RT,        
!&J.GVT_DAILY_RT,           
!&J.GVT_HRLY_RT_NO_LOC,     
!&J.GVT_DLY_RT_NO_LOC,      
!&J.GVT_BW_RT_NO_LOC,       
!&J.GVT_MNLY_RT_NO_LOC,     
!&J.GVT_ANNL_RT_NO_LOC,     
!&J.GVT_XFER_FROM_AGCY,     
!&J.GVT_XFER_TO_AGCY,       
!&J.GVT_RETIRE_PLAN,        
!&J.GVT_ANN_IND,            
!&J.GVT_FEGLI,              
!&J.GVT_FEGLI_LIVING,       
!&J.GVT_LIVING_AMT,         
!&J.GVT_ANNUITY_OFFSET,     
!&J.GVT_CSRS_FROZN_SVC,     
!&J.GVT_PREV_RET_COVRG,     
!&J.GVT_FERS_COVERAGE,      
!&J.GVT_TYPE_OF_APPT,       
!&J.GVT_POI,                
!&J.GVT_POSN_OCCUPIED,      
!&J.GVT_CONT_EMPLID,        
!&J.GVT_ROUTE_NEXT,         
!&J.GVT_CHANGE_FLAG,       
!&J.GVT_TSP_UPD_IND,        
!&J.GVT_PI_UPD_IND,         
!&J.GVT_SF52_NBR,           
!&J.GVT_S113G_CEILING,      
!&J.GVT_LEO_POSITION,      
!&J.GVT_ANNUIT_COM_DT,      
!&J.GVT_BASIC_LIFE_RED,     
!&J.GVT_DED_PRORT_DT,       
!&J.GVT_FEGLI_BASC_PCT,     
!&J.GVT_FEGLI_OPT_PCT,      
!&J.GVT_FEHB_PCT,           
!&J.GVT_RETRO_FLAG,         
!&J.GVT_RETRO_DED_FLAG,     
!&J.GVT_RETRO_JOB_FLAG,     
!&J.GVT_RETRO_BSE_FLAG,     
!&J.GVT_OTH_PAY_CHG,        
!&J.GVT_DETL_POSN_NBR,      
!&J.ANNL_BEN_BASE_OVRD,     
!&J.BENEFIT_PROGRAM,        
!&J.UPDATE_PAYROLL,         
!&J.GVT_PAY_PLAN,           
!&J.GVT_PAY_FLAG,           
!&J.GVT_NID_CHANGE, 
&J.UNION_FULL_PART,
&J.UNION_POS,
&J.MATRICULA_NBR,
&J.SOC_SEC_RISK_CODE,
&J.UNION_FEE_AMOUNT,
&J.UNION_FEE_START_DT,
&J.UNION_FEE_END_DT,
&J.EXEMPT_JOB_LBR,
&J.EXEMPT_HOURS_MONTH,
&J.WRKS_CNCL_FUNCTION,
&J.INTERCTR_WRKS_CNCL,
&J.CURRENCY_CD1,
&J.PAY_UNION_FEE,
&J.UNION_CD,
&J.BARG_UNIT,
&J.UNION_SENIORITY_DT,
&J.ENTRY_DATE,
&J.LABOR_AGREEMENT,
&J.EMPL_CTG,
&J.EMPL_CTG_L1,
&J.EMPL_CTG_L2,
&J.SETID_LBR_AGRMNT,
&J.WPP_STOP_FLAG,                          
&J.LABOR_FACILITY_ID,                      
&J.LBR_FAC_ENTRY_DT,                       
&J.LAYOFF_EXEMPT_FLAG,                   
&J.LAYOFF_EXEMPT_RSN,
&J.GP_PAYGROUP,
&J.GP_DFLT_ELIG_GRP,
&J.GP_ELIG_GRP,
&J.GP_DFLT_CURRTTYP,
&J.CUR_RT_TYPE,
&J.GP_DFLT_EXRTDT,
&J.GP_ASOF_DT_EXG_RT,
&J.ADDS_TO_FTE_ACTUAL,
&J.CLASS_INDC,
&J.ENCUMB_OVERRIDE,
&J.FICA_STATUS_EE,
&J.FTE,
&J.PRORATE_CNT_AMT,
&J.PAY_SYSTEM_FLG,
&J.BORDER_WALKER,
&J.LUMP_SUM_PAY,
&J.CONTRACT_NUM,
&J.JOB_INDICATOR,
&J.WRKS_CNCL_ROLE_CHE,
!&J.WRKS_CNCL_ID_LCL,
&J.BENEFIT_SYSTEM,
&J.WORK_DAY_HOURS,
&J.HR_STATUS,                             
&J.APPT_TYPE,                              
&J.MAIN_APPT_NUM_JPN, 
&J.REPORTS_TO,
&J.FORCE_PUBLISH,
&J.JOB_DATA_SRC_CD,
!GBD 08/01/2002 End
&J.ESTABID,
&J.SUPV_LVL_ID                            
,&J.SETID_SUPV_LVL                         
,&J.ABSENCE_SYSTEM_CD                      
,&J.POI_TYPE                               
,&J.HIRE_DT                                
,&J.LAST_HIRE_DT                           
,&J.TERMINATION_DT                         
,&J.ASGN_START_DT                          
,&J.LST_ASGN_START_DT                      
,&J.ASGN_END_DT                            
,&J.LDW_OVR                                
!&J.LAST_dATE_WORKED
,''                     
,&J.EXPECTED_RETURN_DT                     
,&J.EXPECTED_END_DATE                      
,&J.AUTO_END_FLG                           
,&J.LASTUPDDTTM                            
,&J.LASTUPDOPRID,    
&J.GEX_LIGHT_DUTY,
'Y',
&J.GEX_VOLUN_LOW_HRS,
&J.GEX_STUDENT_IND,
&J.GEX_MOON_IND,
&J.GEX_DEPTID_OVR,
&J.GEX_ACCT_CD_OVR,
&J.GEX_GL_EXP_OVR,
&J.GEX_STEWARD,
&J.GEX_DUES_EXEMPT,
&J.GEX_FINAN_CORE,
&J.GEX_INFLATED_HRS,
&J.GEX_FP_CODE,
&J.GEX_SEASONAL_EMP)	  !AXL 5/14/2001 New job field
end-sql

end-procedure

!GBD 11/14/2002 Begin
!*********************************************************************
!Inserts into the job_jr table to match job row with new config2 value 
!*********************************************************************
begin-procedure insert-job-jr-row
#debug9 show 'gexbnpyp.insert-job-jr-row'

!display 'insert-job-jr-row'
!display 'config2 : ' noline
!display $elig_config2
begin-sql on-error=sql-error-found('insert-job-jr-row')

insert into PS_JOB_JR
(EMPLID                                  
,EMPL_RCD                                
,EFFDT                                   
,EFFSEQ                                  
,LASTUPDDTTM                             
,LASTUPDOPRID                            
,TAXCODE_UK                              
,TAX_BASIS_UK                            
,WORKER_TYPE_MEX                         
,REDUCED_WEEK_MEX                        
,LOCATED_CD_MEX                          
,SALARY_TYPE_MEX                         
,IMS_TERM_DT_MEX                         
,BALANCE_GRP_NUM                         
,FP_ACTION_2                             
,CTG_RATE                                
,FP_LEGALSTAT_CD                         
,FP_SCNDMT_CD                            
,FP_SCND_TYP                             
,FP_CIVIL_PENSION                        
,FP_SOURCE_ORG                           
,FP_RECEP_ORG                            
,FP_RETURN_CD                            
,FP_PR_LEGSTA                            
,FP_FOREND_DT                            
,FP_END_DT                               
,FP_CAREFRZPCT                           
,FP_HIR_DOS_SIT                          
,FP_PT_PCT_DET                           
,FP_TITLE_NUM                            
,FP_DURATION_PCT                         
,FP_RATING_PRS_FLG                       
,FP_BUDGET_NBR                           
,FP_HDCNT_NBR                            
,FP_POTENT_NBR                           
,FP_RANK_CD                              
,FP_STEP_CD                              
,FP_RK_ENT_DT                            
,FP_CORPS_CD                             
,FP_CHG_COR_DT                           
,FP_CATG_FP                              
,FP_CATG_LEVEL                           
,FP_RK_TRIALPD                           
,FP_STEP_END_DT                          
,FP_FOR_PROM_DT                          
,FP_NOMINATION_DT                        
,FP_TRAINEE                              
,FP_TRNE_POSN                            
,FP_RK_PD_END_DT                         
,FP_SANCTION                             
,FP_DOWN_GRA                             
,FP_APPL_SAL_DT                          
,FP_CHG_IND                              
,FP_CLD_INST                             
,FP_SETID_RANK                           
,FP_INSTALL_DT                           
,FP_EQUIV_STEP                           
,FP_STEP_CD2                             
,FP_BUSINESS_CD                          
,FP_APPL_DT                              
,FP_CHG_SAL                              
,FP_POINTYP_CD                           
,FP_GROSS_IND                            
,FP_INCS_IND                             
,FP_INCS_IND2                            
,FP_PT_PCT                               
,FP_PT_END_DT                            
,FP_PT_FOREND_DT                         
,FP_COMPRATE                             
,FP_INST_STAT                            
,FP_RETROSPECT                           
,FP_ROW_END_DT                           
,LAST_UPDATE_DATE                        
,OTHER_ID_JPN                            
,INTCP_XFR_FLG                           
,INTCP_XFR_START_DT                      
,INTCP_XFR_END_DT                        
,INTCP_BUS_UNIT                          
,INTCP_DEPTID                            
,INTCP_DEPTID2                           
,INTCP_SETID_DEPT                        
,INTCP_COMPANY                           
,INTCP_COMPANY2                          
,INTCP_SUPV_LVL_ID                       
,INTCP_SUPV_LVL_ID2                      
,START_DATE_JPN                          
,EXP_END_DATE_JPN                        
,END_DATE_JPN                            
,DUTIES_TYPE                             
,ASSIGNMENT_ID                           
,TARGET_COMPRATE                         
,CMP_DONT_ABSORB                         
,SSN_EMPLOYER                            
,UNITA_PROD_CD                           
,ACTION_ITA                              
,ACTION_REASON_ITA                       
,SPECIAL_HIRCTG_ITA                      
,PART_TIME_TYPE_ITA                      
,PART_TIME_PERC_ITA                      
,PARTTIME_ENDDT_ITA                      
,WORKDAYS_NLD                            
,CONT_SAL_TYPE_BRA                       
,CBO_CD_BRA                              
,SEFIP_CATEGORY_BRA                      
,UNION_CD_ALT_BRA
)
VALUES
(&J2.EMPLID,
&J2.EMPL_RCD,
$effdt_newrow_dbf,
0,
&J2.LASTUPDDTTM                             
,&J2.LASTUPDOPRID                            
,&J2.TAXCODE_UK                              
,&J2.TAX_BASIS_UK                            
,&J2.WORKER_TYPE_MEX                         
,&J2.REDUCED_WEEK_MEX                        
,&J2.LOCATED_CD_MEX                          
,&J2.SALARY_TYPE_MEX                         
,&J2.IMS_TERM_DT_MEX                         
,&J2.BALANCE_GRP_NUM                         
,&J2.FP_ACTION_2                             
,&J2.CTG_RATE                                
,&J2.FP_LEGALSTAT_CD                         
,&J2.FP_SCNDMT_CD                            
,&J2.FP_SCND_TYP                             
,&J2.FP_CIVIL_PENSION                        
,&J2.FP_SOURCE_ORG                           
,&J2.FP_RECEP_ORG                            
,&J2.FP_RETURN_CD                            
,&J2.FP_PR_LEGSTA                            
,&J2.FP_FOREND_DT                            
,&J2.FP_END_DT                               
,&J2.FP_CAREFRZPCT                           
,&J2.FP_HIR_DOS_SIT                          
,&J2.FP_PT_PCT_DET                           
,&J2.FP_TITLE_NUM                            
,&J2.FP_DURATION_PCT                         
,&J2.FP_RATING_PRS_FLG                       
,&J2.FP_BUDGET_NBR                           
,&J2.FP_HDCNT_NBR                            
,&J2.FP_POTENT_NBR                           
,&J2.FP_RANK_CD                              
,&J2.FP_STEP_CD                              
,&J2.FP_RK_ENT_DT                            
,&J2.FP_CORPS_CD                             
,&J2.FP_CHG_COR_DT                           
,&J2.FP_CATG_FP                              
,&J2.FP_CATG_LEVEL                           
,&J2.FP_RK_TRIALPD                           
,&J2.FP_STEP_END_DT                          
,&J2.FP_FOR_PROM_DT                          
,&J2.FP_NOMINATION_DT                        
,&J2.FP_TRAINEE                              
,&J2.FP_TRNE_POSN                            
,&J2.FP_RK_PD_END_DT                         
,&J2.FP_SANCTION                             
,&J2.FP_DOWN_GRA                             
,&J2.FP_APPL_SAL_DT                          
,&J2.FP_CHG_IND                              
,&J2.FP_CLD_INST                             
,&J2.FP_SETID_RANK                           
,&J2.FP_INSTALL_DT                           
,&J2.FP_EQUIV_STEP                           
,&J2.FP_STEP_CD2                             
,&J2.FP_BUSINESS_CD                          
,&J2.FP_APPL_DT                              
,&J2.FP_CHG_SAL                              
,&J2.FP_POINTYP_CD                           
,&J2.FP_GROSS_IND                            
,&J2.FP_INCS_IND                             
,&J2.FP_INCS_IND2                            
,&J2.FP_PT_PCT                               
,&J2.FP_PT_END_DT                            
,&J2.FP_PT_FOREND_DT                         
,&J2.FP_COMPRATE                             
,&J2.FP_INST_STAT                            
,&J2.FP_RETROSPECT                           
,&J2.FP_ROW_END_DT                           
,&J2.LAST_UPDATE_DATE                        
,&J2.OTHER_ID_JPN                            
,&J2.INTCP_XFR_FLG                           
,&J2.INTCP_XFR_START_DT                      
,&J2.INTCP_XFR_END_DT                        
,&J2.INTCP_BUS_UNIT                          
,&J2.INTCP_DEPTID                            
,&J2.INTCP_DEPTID2                           
,&J2.INTCP_SETID_DEPT                        
,&J2.INTCP_COMPANY                           
,&J2.INTCP_COMPANY2                          
,&J2.INTCP_SUPV_LVL_ID                       
,&J2.INTCP_SUPV_LVL_ID2                      
,&J2.START_DATE_JPN                          
,&J2.EXP_END_DATE_JPN                        
,&J2.END_DATE_JPN                            
,&J2.DUTIES_TYPE                             
,&J2.ASSIGNMENT_ID                           
,&J2.TARGET_COMPRATE                         
,&J2.CMP_DONT_ABSORB                         
,&J2.SSN_EMPLOYER                            
,&J2.UNITA_PROD_CD                           
,&J2.ACTION_ITA                              
,&J2.ACTION_REASON_ITA                       
,&J2.SPECIAL_HIRCTG_ITA                      
,&J2.PART_TIME_TYPE_ITA                      
,&J2.PART_TIME_PERC_ITA                      
,&J2.PARTTIME_ENDDT_ITA                      
,&J2.WORKDAYS_NLD                            
,&J2.CONT_SAL_TYPE_BRA                       
,&J2.CBO_CD_BRA                              
,&J2.SEFIP_CATEGORY_BRA                      
,&J2.UNION_CD_ALT_BRA
)
end-sql
end-procedure
!GBD 11/14/2002 End

!GBD 11/14/2002 Begin
!********************************************************************
begin-procedure insert-compensation-row
!********************************************************************
   #debug9 show 'gexbnpyp.insert-compensation-row'
begin-SQL on-error=sql-error-found('insert-compensation-row')
Insert into ps_compensation
(EMPLID,
EMPL_RCD,
EFFDT,
EFFSEQ,
COMP_EFFSEQ,
COMP_RATECD,
COMP_RATE_POINTS,
COMPRATE,
COMP_PCT,
COMP_FREQUENCY,
CURRENCY_CD,
MANUAL_SW,
CONVERT_COMPRT,
RATE_CODE_GROUP,
CHANGE_AMT,
CHANGE_PCT,
CHANGE_PTS,
FTE_INDICATOR,
CMP_SRC_IND
)
values
(&J3.EMPLID,                 
&J3.EMPL_RCD,               
$effdt_newrow_dbf,
0,
&J3.COMP_EFFSEQ,            
&J3.COMP_RATECD,            
&J3.COMP_RATE_POINTS,       
&J3.COMPRATE,               
&J3.COMP_PCT,               
&J3.COMP_FREQUENCY,         
&J3.CURRENCY_CD,            
&J3.MANUAL_SW,              
&J3.CONVERT_COMPRT,         
&J3.RATE_CODE_GROUP,        
&J3.CHANGE_AMT,             
&J3.CHANGE_PCT,             
&J3.CHANGE_PTS,             
&J3.FTE_INDICATOR,          
&J3.CMP_SRC_IND   
)

end-sql

end-procedure
!GBD 11/14/2002 End

!*********************************************************************
!Inserts into job table with new config7 value
!*********************************************************************

begin-procedure insert-job-row-effdt-exists
#debug9 show 'gexbnypy.insert-job-row-effdt-exists'

display 'insert=job-row-effdt-exists'
let $temp_4to10 = substr($elig_config7,4,7)
let $temp_1to3 = substr(&I.ELIG_CONFIG7,1,3)
let $elig_config7= $temp_1to3||$temp_4to10
display 'new config7: ' noline
display $elig_config7

begin-sql on-error=sql-error-found('insert-job-row-effdt-exists')
INSERT INTO PS_JOB
(EMPLID                                 
,EMPL_RCD                               
,EFFDT                                  
,EFFSEQ                                 
,PER_ORG                                
,DEPTID                                 
,JOBCODE                                
,POSITION_NBR                           
,SUPERVISOR_ID                          
,POSITION_OVERRIDE                      
,POSN_CHANGE_RECORD                     
,EMPL_STATUS                            
,ACTION                                 
,ACTION_DT                              
,ACTION_REASON                          
,LOCATION                               
,TAX_LOCATION_CD                        
,JOB_ENTRY_DT                           
,DEPT_ENTRY_DT                          
,POSITION_ENTRY_DT                      
,SHIFT                                  
,REG_TEMP                               
,FULL_PART_TIME                         
,COMPANY                                
,PAYGROUP                               
,BAS_GROUP_ID                           
,ELIG_CONFIG1                           
,ELIG_CONFIG2                           
,ELIG_CONFIG3                           
,ELIG_CONFIG4                           
,ELIG_CONFIG5                           
,ELIG_CONFIG6                           
,ELIG_CONFIG7                           
,ELIG_CONFIG8                           
,ELIG_CONFIG9                           
,BEN_STATUS                             
,BAS_ACTION                             
,COBRA_ACTION                           
,EMPL_TYPE                              
,HOLIDAY_SCHEDULE                       
,STD_HOURS                              
,STD_HRS_FREQUENCY                      
,OFFICER_CD                             
,EMPL_CLASS                             
,SAL_ADMIN_PLAN                         
,GRADE                                  
,GRADE_ENTRY_DT                         
,STEP                                   
,STEP_ENTRY_DT                          
,GL_PAY_TYPE                            
,ACCT_CD                                
,EARNS_DIST_TYPE                        
,COMP_FREQUENCY                         
,COMPRATE                               
,CHANGE_AMT                             
,CHANGE_PCT                             
,ANNUAL_RT                              
,MONTHLY_RT                             
,DAILY_RT                               
,HOURLY_RT                              
,ANNL_BENEF_BASE_RT                     
,SHIFT_RT                               
,SHIFT_FACTOR                           
,CURRENCY_CD                            
,BUSINESS_UNIT                          
,SETID_DEPT                             
,SETID_JOBCODE                          
,SETID_LOCATION                         
,SETID_SALARY                           
,REG_REGION                             
,DIRECTLY_TIPPED                        
,FLSA_STATUS                            
,EEO_CLASS                              
,FUNCTION_CD                            
,TARIFF_GER                             
,TARIFF_AREA_GER                        
,PERFORM_GROUP_GER                      
,LABOR_TYPE_GER                         
,SPK_COMM_ID_GER                        
,HOURLY_RT_FRA                          
,ACCDNT_CD_FRA                          
,VALUE_1_FRA                            
,VALUE_2_FRA                            
,VALUE_3_FRA                            
,VALUE_4_FRA                            
,VALUE_5_FRA                            
,CTG_RATE                               
,PAID_HOURS                             
,PAID_FTE                               
,PAID_HRS_FREQUENCY                     
,UNION_FULL_PART                        
,UNION_POS                              
,MATRICULA_NBR                          
,SOC_SEC_RISK_CODE                      
,UNION_FEE_AMOUNT                       
,UNION_FEE_START_DT                     
,UNION_FEE_END_DT                       
,EXEMPT_JOB_LBR                         
,EXEMPT_HOURS_MONTH                     
,WRKS_CNCL_FUNCTION                     
,INTERCTR_WRKS_CNCL                     
,CURRENCY_CD1                           
,PAY_UNION_FEE                          
,UNION_CD                               
,BARG_UNIT                              
,UNION_SENIORITY_DT                     
,ENTRY_DATE                             
,LABOR_AGREEMENT                        
,EMPL_CTG                               
,EMPL_CTG_L1                            
,EMPL_CTG_L2                            
,SETID_LBR_AGRMNT                       
,WPP_STOP_FLAG                          
,LABOR_FACILITY_ID                      
,LBR_FAC_ENTRY_DT                       
,LAYOFF_EXEMPT_FLAG                     
,LAYOFF_EXEMPT_RSN                      
,GP_PAYGROUP                            
,GP_DFLT_ELIG_GRP                       
,GP_ELIG_GRP                            
,GP_DFLT_CURRTTYP                       
,CUR_RT_TYPE                            
,GP_DFLT_EXRTDT                         
,GP_ASOF_DT_EXG_RT                      
,ADDS_TO_FTE_ACTUAL                     
,CLASS_INDC                             
,ENCUMB_OVERRIDE                        
,FICA_STATUS_EE                         
,FTE                                    
,PRORATE_CNT_AMT                        
,PAY_SYSTEM_FLG                         
,BORDER_WALKER                          
,LUMP_SUM_PAY                           
,CONTRACT_NUM                           
,JOB_INDICATOR                          
,WRKS_CNCL_ROLE_CHE                     
,BENEFIT_SYSTEM                         
,WORK_DAY_HOURS                         
,HR_STATUS                              
,APPT_TYPE                              
,MAIN_APPT_NUM_JPN                      
,REPORTS_TO                             
,FORCE_PUBLISH                          
,JOB_DATA_SRC_CD                        
,ESTABID                                
,SUPV_LVL_ID                            
,SETID_SUPV_LVL                         
,ABSENCE_SYSTEM_CD                      
,POI_TYPE                               
,HIRE_DT                                
,LAST_HIRE_DT                           
,TERMINATION_DT                         
,ASGN_START_DT                          
,LST_ASGN_START_DT                      
,ASGN_END_DT                            
,LDW_OVR                                
,LAST_DATE_WORKED                       
,EXPECTED_RETURN_DT                     
,EXPECTED_END_DATE                      
,AUTO_END_FLG                           
,LASTUPDDTTM                            
,LASTUPDOPRID                           
,GEX_LIGHT_DUTY                         
,GEX_CHANGE_RECORD                      
,GEX_VOLUN_LOW_HRS                      
,GEX_STUDENT_IND                        
,GEX_MOON_IND                           
,GEX_DEPTID_OVR                         
,GEX_ACCT_CD_OVR                        
,GEX_GL_EXP_OVR                         
,GEX_STEWARD                            
,GEX_DUES_EXEMPT                        
,GEX_FINAN_CORE                         
,GEX_INFLATED_HRS                       
,GEX_FP_CODE                            
,GEX_SEASONAL_EMP)	!AXL 5/14/2001 New job field
VALUES
(&I.EMPLID,
&I.EMPL_RCD,
&I.EFFDT,
#effseq,
&I.PER_ORG,
&I.DEPTID,
&I.JOBCODE,
&I.POSITION_NBR,
&I.SUPERVISOR_ID,
&I.POSITION_OVERRIDE,
&I.POSN_CHANGE_RECORD,
&I.EMPL_STATUS,
'ATO',
$reportdate_ccyy,
'BLC',
&I.LOCATION,
&I.TAX_LOCATION_cD,
&I.JOB_ENTRY_DT,
&I.DEPT_ENTRY_DT,
&I.POSITION_ENTRY_DT,
&I.SHIFT,
&I.REG_TEMP,
&I.FULL_PART_TIME,
&I.COMPANY,
&I.PAYGROUP,
!GBD 08/01/2002 Begin - removed in v8
!SXK 11/09/1999 Begin
!&I.PIN_NUM,
!&I.PAY_BASIS_NUM,
!SXK 11/09/1999 End
!GBD 08/01/2002 End
&I.BAS_GROUP_ID,
&I.ELIG_CONFIG1,
&I.ELIG_CONFIG2,
&I.ELIG_CONFIG3,
&I.ELIG_CONFIG4,
&I.ELIG_CONFIG5,
&I.ELIG_CONFIG6,
$elig_config7,
&I.ELIG_CONFIG8,
&I.ELIG_CONFIG9,
&I.BEN_STATUS,
!SXK 11/09/1999 Begin
&BAC.BAS_ACTION,
!SXK 11/09/1999 End
&I.COBRA_aCTION,
&I.EMPL_TYPE,
&I.HOLIDAY_SCHEDULE,
&I.STD_HOURS,
&I.STD_HRS_FREQUENCY,         !GBD 08/01/2002 Field Added
&I.OFFICER_CD,
&I.EMPL_CLASS,
&I.SAL_ADMIN_PLAN,
&I.GRADE,
&I.GRADE_ENTRY_dT,
&I.STEP,
&I.STEP_ENTRY_DT,
&I.GL_PAY_TYPE,
&I.ACCT_cD,
&I.EARNS_DIST_TYPE,
!&I.SALARY_MATRIX_CD,
!&I.RATING_SCALE,
!&I.REVIEW_RATING,
!&I.REVIEW_DT,
&I.COMP_FREQUENCY,
&I.COMPRATE,
&I.CHANGE_AMT,
&I.CHANGE_PCT,
&I.ANNUAL_RT,
&I.MONTHLY_RT,
&I.DAILY_RT,                 !GBD 08/01/2002 Field Added
&I.HOURLY_RT,
&I.ANNL_BENEF_BASE_RT,
&I.SHIFT_RT,
&I.SHIFT_FACTOR,
&I.CURRENCY_CD,
!sxk 11/09/1999 Begin
&I.BUSINESS_UNIT,
&I.SETID_DEPT,
&I.SETID_JOBCODE,
&I.SETID_LOCATION,           !GBD 08/01/2002 Field Added
&I.SETID_SALARY,             !GBD 08/01/2002 Field Added
&I.REG_REGION,
&I.DIRECTLY_TIPPED,
!SXK 11/09/1999 End
&I.FLSA_STATUS,
&I.EEO_CLASS,
&I.FUNCTION_CD,
!GBD 08/01/2002 Begin - Fields Added
&I.TARIFF_GER,
&I.TARIFF_AREA_GER,
&I.PERFORM_GROUP_GER,
&I.LABOR_TYPE_GER,
&I.SPK_COMM_ID_GER,
!&I.WRKS_CNCL_MEM_GER,
!GBD 08/01/2002 End - Fields Added
&I.HOURLY_RT_FRA,
&I.ACCDNT_CD_FRA,
!GBD 08/01/2002 Begin -  Fields Added
&I.VALUE_1_FRA,
&I.VALUE_2_FRA,
&I.VALUE_3_FRA,
&I.VALUE_4_FRA,
&I.VALUE_5_FRA,
&I.CTG_RATE,
&I.PAID_HOURS,
&I.PAID_FTE,
&I.PAID_HRS_FREQUENCY,
!&I.GVT_EFFDT,              
!&I.GVT_EFFDT_PROPOSED,     
!&I.GVT_TRANS_NBR,          
!&I.GVT_TRANS_NBR_SEQ,      
!&I.GVT_WIP_STATUS,         
!&I.GVT_STATUS_TYPE,        
!&I.GVT_NOA_CODE,           
!&I.GVT_LEG_AUTH_1,        
!&I.GVT_PAR_AUTH_D1,        
!&I.GVT_PAR_AUTH_D1_2,      
!&I.GVT_LEG_AUTH_2,         
!&I.GVT_PAR_AUTH_D2,        
!&I.GVT_PAR_AUTH_D2_2,      
!&I.GVT_PAR_NTE_DATE,       
!&I.GVT_WORK_SCHED,        
!&I.GVT_SUB_AGENCY,         
!&I.GVT_ELIG_FEHB,          
!&I.GVT_FEHB_DT,            
!&I.GVT_PAY_RATE_DETER,     
!&I.GVT_STEP,               
!&I.GVT_RTND_PAY_PLAN,      
!&I.GVT_RTND_SAL_PLAN,     
!&I.GVT_RTND_GRADE,         
!&I.GVT_RTND_STEP,          
!&I.GVT_RTND_GVT_STEP,      
!&I.GVT_PAY_BASIS,          
!&I.GVT_COMPRATE,          
!&I.GVT_LOCALITY_ADJ,       
!&I.GVT_BIWEEKLY_RT,        
!&I.GVT_DAILY_RT,           
!&I.GVT_HRLY_RT_NO_LOC,     
!&I.GVT_DLY_RT_NO_LOC,      
!&I.GVT_BW_RT_NO_LOC,       
!&I.GVT_MNLY_RT_NO_LOC,     
!&I.GVT_ANNL_RT_NO_LOC,     
!&I.GVT_XFER_FROM_AGCY,     
!&I.GVT_XFER_TO_AGCY,       
!&I.GVT_RETIRE_PLAN,       
!&I.GVT_ANN_IND,            
!&I.GVT_FEGLI,              
!&I.GVT_FEGLI_LIVING,       
!&I.GVT_LIVING_AMT,         
!&I.GVT_ANNUITY_OFFSET,     
!&I.GVT_CSRS_FROZN_SVC,     
!&I.GVT_PREV_RET_COVRG,     
!&I.GVT_FERS_COVERAGE,      
!&I.GVT_TYPE_OF_APPT,      
!&I.GVT_POI,                
!&I.GVT_POSN_OCCUPIED,      
!&I.GVT_CONT_EMPLID,        
!&I.GVT_ROUTE_NEXT,         
!&I.GVT_CHANGE_FLAG,        
!&I.GVT_TSP_UPD_IND,       
!&I.GVT_PI_UPD_IND,         
!&I.GVT_SF52_NBR,           
!&I.GVT_S113G_CEILING,      
!&I.GVT_LEO_POSITION,       
!&I.GVT_ANNUIT_COM_DT,      
!&I.GVT_BASIC_LIFE_RED,     
!&I.GVT_DED_PRORT_DT,       
!&I.GVT_FEGLI_BASC_PCT,     
!&I.GVT_FEGLI_OPT_PCT,      
!&I.GVT_FEHB_PCT,           
!&I.GVT_RETRO_FLAG,         
!&I.GVT_RETRO_DED_FLAG,     
!&I.GVT_RETRO_JOB_FLAG,     
!&I.GVT_RETRO_BSE_FLAG,     
!&I.GVT_OTH_PAY_CHG,        
!&I.GVT_DETL_POSN_NBR,      
!&I.ANNL_BEN_BASE_OVRD,     
!&I.BENEFIT_PROGRAM,        
!&I.UPDATE_PAYROLL,         
!&I.GVT_PAY_PLAN,           
!&I.GVT_PAY_FLAG,           
!&I.GVT_NID_CHANGE,
&I.UNION_FULL_PART,
&I.UNION_POS,
&I.MATRICULA_NBR,
&I.SOC_SEC_RISK_CODE,
&I.UNION_FEE_AMOUNT,
&I.UNION_FEE_START_DT,
&I.UNION_FEE_END_DT,
&I.EXEMPT_JOB_LBR,
&I.EXEMPT_HOURS_MONTH,
&I.WRKS_CNCL_FUNCTION,
&I.INTERCTR_WRKS_CNCL,
&I.CURRENCY_CD1,
&I.PAY_UNION_FEE,
&I.UNION_CD,
&I.BARG_UNIT,
&I.UNION_SENIORITY_DT,
&I.ENTRY_DATE,
&I.LABOR_AGREEMENT,
&I.EMPL_CTG,
&I.EMPL_CTG_L1,
&I.EMPL_CTG_L2,
&I.SETID_LBR_AGRMNT,
&I.WPP_STOP_FLAG,                         
&I.LABOR_FACILITY_ID,                      
&I.LBR_FAC_ENTRY_DT,                      
&I.LAYOFF_EXEMPT_FLAG,                     
&I.LAYOFF_EXEMPT_RSN, 
&I.GP_PAYGROUP,
&I.GP_DFLT_ELIG_GRP,
&I.GP_ELIG_GRP,
&I.GP_DFLT_CURRTTYP,
&I.CUR_RT_TYPE,
&I.GP_DFLT_EXRTDT,
&I.GP_ASOF_DT_EXG_RT,
&I.ADDS_TO_FTE_ACTUAL,
&I.CLASS_INDC,
&I.ENCUMB_OVERRIDE,
&I.FICA_STATUS_EE,
&I.FTE,
&I.PRORATE_CNT_AMT,
&I.PAY_SYSTEM_FLG,
&I.BORDER_WALKER,
&I.LUMP_SUM_PAY,
&I.CONTRACT_NUM,
&I.JOB_INDICATOR,
&I.WRKS_CNCL_ROLE_CHE,
!&I.WRKS_CNCL_ID_LCL,
&I.BENEFIT_SYSTEM,
&I.WORK_DAY_HOURS,
&I.HR_STATUS,                              
&I.APPT_TYPE,                             
&I.MAIN_APPT_NUM_JPN,    
&I.REPORTS_TO,
&I.FORCE_PUBLISH,
&I.JOB_DATA_SRC_CD,
!GBD 08/01/2002 End
&I.ESTABID,
!&I.SUPV_LVL_ID,
&I.SUPV_LVL_ID		   !VENDKXY removed the Extra comma(,) which is restricting the code to insert job row                              
,&I.SETID_SUPV_LVL                         
,&I.ABSENCE_SYSTEM_CD                      
,&I.POI_TYPE                               
,&I.HIRE_DT                                
,&I.LAST_HIRE_DT                           
,&I.TERMINATION_DT                         
,&I.ASGN_START_DT                          
,&I.LST_ASGN_START_DT                      
,&I.ASGN_END_DT                            
,&I.LDW_OVR                                
!,&I.LAST_DATE_WORKED
,''                       
,&I.EXPECTED_RETURN_DT                     
,&I.EXPECTED_END_DATE                      
,&I.AUTO_END_FLG                           
,&I.LASTUPDDTTM    
,&I.LASTUPDOPRID,                        
&I.GEX_LIGHT_DUTY,
'Y',
&I.GEX_VOLUN_LOW_HRS,
&I.GEX_STUDENT_IND,
&I.GEX_MOON_IND,
&I.GEX_DEPTID_OVR,
&I.GEX_ACCT_CD_OVR,
&I.GEX_GL_EXP_OVR,
&I.GEX_STEWARD,
&I.GEX_DUES_EXEMPT,
&I.GEX_FINAN_CORE,
&I.GEX_INFLATED_HRS,
&I.GEX_FP_CODE,
&I.GEX_SEASONAL_EMP)	!AXL 5/14/2001 New job field
end-sql

end-procedure

!GBD 11/14/2002 Begin
!*********************************************************************
!Inserts into the job_jr table to match job row with new config2 value 
!*********************************************************************
begin-procedure insert-job-jr-row-effdt-exists
#debug9 show 'gexbnpyp.insert-job-jr-row-effdt-exists'

!display 'insert-job-jr-row'
!display 'config2 : ' noline
!display $elig_config2
begin-sql on-error=sql-error-found('insert-job-jr-row-effdt-exists')

insert into PS_JOB_JR
(EMPLID                                  
,EMPL_RCD                                
,EFFDT                                   
,EFFSEQ                                  
,LASTUPDDTTM                             
,LASTUPDOPRID                            
,TAXCODE_UK                              
,TAX_BASIS_UK                            
,WORKER_TYPE_MEX                         
,REDUCED_WEEK_MEX                        
,LOCATED_CD_MEX                          
,SALARY_TYPE_MEX                         
,IMS_TERM_DT_MEX                         
,BALANCE_GRP_NUM                         
,FP_ACTION_2                             
,CTG_RATE                                
,FP_LEGALSTAT_CD                         
,FP_SCNDMT_CD                            
,FP_SCND_TYP                             
,FP_CIVIL_PENSION                        
,FP_SOURCE_ORG                           
,FP_RECEP_ORG                            
,FP_RETURN_CD                            
,FP_PR_LEGSTA                            
,FP_FOREND_DT                            
,FP_END_DT                               
,FP_CAREFRZPCT                           
,FP_HIR_DOS_SIT                          
,FP_PT_PCT_DET                           
,FP_TITLE_NUM                            
,FP_DURATION_PCT                         
,FP_RATING_PRS_FLG                       
,FP_BUDGET_NBR                           
,FP_HDCNT_NBR                            
,FP_POTENT_NBR                           
,FP_RANK_CD                              
,FP_STEP_CD                              
,FP_RK_ENT_DT                            
,FP_CORPS_CD                             
,FP_CHG_COR_DT                           
,FP_CATG_FP                              
,FP_CATG_LEVEL                           
,FP_RK_TRIALPD                           
,FP_STEP_END_DT                          
,FP_FOR_PROM_DT                          
,FP_NOMINATION_DT                        
,FP_TRAINEE                              
,FP_TRNE_POSN                            
,FP_RK_PD_END_DT                         
,FP_SANCTION                             
,FP_DOWN_GRA                             
,FP_APPL_SAL_DT                          
,FP_CHG_IND                              
,FP_CLD_INST                             
,FP_SETID_RANK                           
,FP_INSTALL_DT                           
,FP_EQUIV_STEP                           
,FP_STEP_CD2                             
,FP_BUSINESS_CD                          
,FP_APPL_DT                              
,FP_CHG_SAL                              
,FP_POINTYP_CD                           
,FP_GROSS_IND                            
,FP_INCS_IND                             
,FP_INCS_IND2                            
,FP_PT_PCT                               
,FP_PT_END_DT                            
,FP_PT_FOREND_DT                         
,FP_COMPRATE                             
,FP_INST_STAT                            
,FP_RETROSPECT                           
,FP_ROW_END_DT                           
,LAST_UPDATE_DATE                        
,OTHER_ID_JPN                            
,INTCP_XFR_FLG                           
,INTCP_XFR_START_DT                      
,INTCP_XFR_END_DT                        
,INTCP_BUS_UNIT                          
,INTCP_DEPTID                            
,INTCP_DEPTID2                           
,INTCP_SETID_DEPT                        
,INTCP_COMPANY                           
,INTCP_COMPANY2                          
,INTCP_SUPV_LVL_ID                       
,INTCP_SUPV_LVL_ID2                      
,START_DATE_JPN                          
,EXP_END_DATE_JPN                        
,END_DATE_JPN                            
,DUTIES_TYPE                             
,ASSIGNMENT_ID                           
,TARGET_COMPRATE                         
,CMP_DONT_ABSORB                         
,SSN_EMPLOYER                            
,UNITA_PROD_CD                           
,ACTION_ITA                              
,ACTION_REASON_ITA                       
,SPECIAL_HIRCTG_ITA                      
,PART_TIME_TYPE_ITA                      
,PART_TIME_PERC_ITA                      
,PARTTIME_ENDDT_ITA                      
,WORKDAYS_NLD                            
,CONT_SAL_TYPE_BRA                       
,CBO_CD_BRA                              
,SEFIP_CATEGORY_BRA                      
,UNION_CD_ALT_BRA
)
VALUES
(&I2.EMPLID,
&I2.EMPL_RCD,
$effdt_newrow_dbf,
#effseq,
&I2.LASTUPDDTTM                             
,&I2.LASTUPDOPRID                            
,&I2.TAXCODE_UK                              
,&I2.TAX_BASIS_UK                            
,&I2.WORKER_TYPE_MEX                         
,&I2.REDUCED_WEEK_MEX                        
,&I2.LOCATED_CD_MEX                          
,&I2.SALARY_TYPE_MEX                         
,&I2.IMS_TERM_DT_MEX                         
,&I2.BALANCE_GRP_NUM                         
,&I2.FP_ACTION_2                             
,&I2.CTG_RATE                                
,&I2.FP_LEGALSTAT_CD                         
,&I2.FP_SCNDMT_CD                            
,&I2.FP_SCND_TYP                             
,&I2.FP_CIVIL_PENSION                        
,&I2.FP_SOURCE_ORG                           
,&I2.FP_RECEP_ORG                            
,&I2.FP_RETURN_CD                            
,&I2.FP_PR_LEGSTA                            
,&I2.FP_FOREND_DT                            
,&I2.FP_END_DT                               
,&I2.FP_CAREFRZPCT                           
,&I2.FP_HIR_DOS_SIT                          
,&I2.FP_PT_PCT_DET                           
,&I2.FP_TITLE_NUM                            
,&I2.FP_DURATION_PCT                         
,&I2.FP_RATING_PRS_FLG                       
,&I2.FP_BUDGET_NBR                           
,&I2.FP_HDCNT_NBR                            
,&I2.FP_POTENT_NBR                           
,&I2.FP_RANK_CD                              
,&I2.FP_STEP_CD                              
,&I2.FP_RK_ENT_DT                            
,&I2.FP_CORPS_CD                             
,&I2.FP_CHG_COR_DT                           
,&I2.FP_CATG_FP                              
,&I2.FP_CATG_LEVEL                           
,&I2.FP_RK_TRIALPD                           
,&I2.FP_STEP_END_DT                          
,&I2.FP_FOR_PROM_DT                          
,&I2.FP_NOMINATION_DT                        
,&I2.FP_TRAINEE                              
,&I2.FP_TRNE_POSN                            
,&I2.FP_RK_PD_END_DT                         
,&I2.FP_SANCTION                             
,&I2.FP_DOWN_GRA                             
,&I2.FP_APPL_SAL_DT                          
,&I2.FP_CHG_IND                              
,&I2.FP_CLD_INST                             
,&I2.FP_SETID_RANK                           
,&I2.FP_INSTALL_DT                           
,&I2.FP_EQUIV_STEP                           
,&I2.FP_STEP_CD2                             
,&I2.FP_BUSINESS_CD                          
,&I2.FP_APPL_DT                              
,&I2.FP_CHG_SAL                              
,&I2.FP_POINTYP_CD                           
,&I2.FP_GROSS_IND                            
,&I2.FP_INCS_IND                             
,&I2.FP_INCS_IND2                            
,&I2.FP_PT_PCT                               
,&I2.FP_PT_END_DT                            
,&I2.FP_PT_FOREND_DT                         
,&I2.FP_COMPRATE                             
,&I2.FP_INST_STAT                            
,&I2.FP_RETROSPECT                           
,&I2.FP_ROW_END_DT                           
,&I2.LAST_UPDATE_DATE                        
,&I2.OTHER_ID_JPN                            
,&I2.INTCP_XFR_FLG                           
,&I2.INTCP_XFR_START_DT                      
,&I2.INTCP_XFR_END_DT                        
,&I2.INTCP_BUS_UNIT                          
,&I2.INTCP_DEPTID                            
,&I2.INTCP_DEPTID2                           
,&I2.INTCP_SETID_DEPT                        
,&I2.INTCP_COMPANY                           
,&I2.INTCP_COMPANY2                          
,&I2.INTCP_SUPV_LVL_ID                       
,&I2.INTCP_SUPV_LVL_ID2                      
,&I2.START_DATE_JPN                          
,&I2.EXP_END_DATE_JPN                        
,&I2.END_DATE_JPN                            
,&I2.DUTIES_TYPE                             
,&I2.ASSIGNMENT_ID                           
,&I2.TARGET_COMPRATE                         
,&I2.CMP_DONT_ABSORB                         
,&I2.SSN_EMPLOYER                            
,&I2.UNITA_PROD_CD                           
,&I2.ACTION_ITA                              
,&I2.ACTION_REASON_ITA                       
,&I2.SPECIAL_HIRCTG_ITA                      
,&I2.PART_TIME_TYPE_ITA                      
,&I2.PART_TIME_PERC_ITA                      
,&I2.PARTTIME_ENDDT_ITA                      
,&I2.WORKDAYS_NLD                            
,&I2.CONT_SAL_TYPE_BRA                       
,&I2.CBO_CD_BRA                              
,&I2.SEFIP_CATEGORY_BRA                      
,&I2.UNION_CD_ALT_BRA
)
end-sql
end-procedure
!GBD 11/14/2002 End

!GBD 11/14/2002 Begin
!********************************************************************
begin-procedure insert-compensation-row-effdt-exists
!********************************************************************
#debug9 show 'gexbnpyp.insert-compensation-row-effdt-exists'

begin-SQL on-error=sql-error-found('insert-compensation-row-effdt-exists')
Insert into ps_compensation
(EMPLID,
EMPL_RCD,
EFFDT,
EFFSEQ,
COMP_EFFSEQ,
COMP_RATECD,
COMP_RATE_POINTS,
COMPRATE,
COMP_PCT,
COMP_FREQUENCY,
CURRENCY_CD,
MANUAL_SW,
CONVERT_COMPRT,
RATE_CODE_GROUP,
CHANGE_AMT,
CHANGE_PCT,
CHANGE_PTS,
FTE_INDICATOR,
CMP_SRC_IND)
values
(&I3.EMPLID,                 
&I3.EMPL_RCD,               
$effdt_newrow_dbf,                  
#effseq_comp,                
&I3.COMP_EFFSEQ,            
&I3.COMP_RATECD,            
&I3.COMP_RATE_POINTS,       
&I3.COMPRATE,               
&I3.COMP_PCT,               
&I3.COMP_FREQUENCY,         
&I3.CURRENCY_CD,            
&I3.MANUAL_SW,              
&I3.CONVERT_COMPRT,         
&I3.RATE_CODE_GROUP,        
&I3.CHANGE_AMT,             
&I3.CHANGE_PCT,             
&I3.CHANGE_PTS,             
&I3.FTE_INDICATOR,          
&I3.CMP_SRC_IND            
)
end-sql
end-procedure
!GBD 11/14/2002 End


!*********************************************************************
!Updates future job rows
!*********************************************************************
Begin-Procedure select-all-future-job-rows
#debug9 show 'gexbnypy.select-all-future-job-rows'

!SXK 11/09/1999 End
begin-SELECT on-error=sql-error-found('select-all-future-job-rows')
JJJ.emplid
JJJ.empl_rcd
JJJ.effdt
JJJ.effseq
JJJ.elig_config7
JJJ.elig_config1

	let $new_elig_cfg7 = substr(&JJJ.elig_config7,1,3) || substr($elig_config7,4,7)
	do update-job2

from PS_JOB JJJ
where JJJ.emplid = $emplid
  AND JJJ.EMPL_RCD = #empl_rcd#
  AND JJJ.EFFDT > $effdt_newrow_dbf

end-SELECT
!SXK 11/09/1999 Begin
!move 'Y' to $update-is-done
!SXK 11/09/1999 End
end-procedure

begin-procedure update-job2
begin-sql on-error=sql-error-found('update-future-job-rows')
UPDATE PS_JOB
   SET ELIG_CONFIG7 = $new_elig_cfg7
WHERE EMPLID = &JJJ.emplid
  AND EMPL_RCD = &JJJ.EMPL_RCD
  AND EFFDT = &JJJ.EFFDT
  AND EFFSEQ = &JJJ.effseq
end-sql
end-procedure

!*********************************************************************
!Gets the Benefit Program Description
!*********************************************************************
Begin-Procedure Get-BP-Description
Begin-Select on-error=sql-error-found('Get-BP-Description')
DES.DESCR
FROM PS_BEN_DEFN_PGM DES
WHERE DES.BENEFIT_PROGRAM = $prev_bp_name
  AND DES.EFF_STATUS = 'A'
  AND DES.EFFDT = (SELECT MAX(EFFDT)
		     FROM PS_BEN_DEFN_PGM
		    WHERE BENEFIT_PROGRAM = $prev_bp_name
		       AND EFFDT <= SYSDATE)      !setup tables check current effdt

end-select
end-procedure

!SXK 11/09/1999 Begin
!*******************************************************************
!Retrieves Bas Action Value from Action Reason Table
!*******************************************************************
Begin-Procedure get-bas-action

begin-select on-error=sql-error-found('Get-Bas-Action')
BAC.BAS_ACTION
  let $bas_action_retrieved = 'Y'
FROM PS_ACT_RSN_TBL_NA BAC ! PS_ACTN_REASON_TBL BAC  ! GEX ISDVNPK 03/07/2008
WHERE BAC.ACTION = 'ATO'
AND BAC.ACTION_REASON = 'BLC'
AND BAC.EFFDT = (select max(effdt)
		from PS_ACT_RSN_TBL_NA   !ps_actn_reason_tbl    ! GEX ISDVNPK 03/07/2008
		where action = bac.action
		and action_Reason = bac.action_reason
		and effdt <= $effdt_newrow_dbf)
end-select
end-procedure

!********************************************************************
!Check to see if bas_activity already exists
!********************************************************************
begin-procedure select-bas-activity-row

Begin-Select on-error=sql-error-found('Select-Bas-Activity-Row')
'BAC'
    let $bas_activity_exists = 'Y'
FROM PS_BAS_ACTIVITY BAC1
WHERE BAC1.EMPLID = $bac_emplid
and bac1.EMPL_RCD = #bac_empl_rcd
and bac1.bas_action_source = $bac_bas_action_source
and bac1.event_dt = $bac_event_dt
and bac1.event_effseq = #bac_event_effseq
end-select
end-procedure

!*******************************************************************
!Inserts into BAS_ACTIVITY table
!*******************************************************************
begin-procedure insert-bas-activity-row


do select-benefit-rcdnum

begin-sql on-error=sql-error-found('Insert-Bas-Activity-Row')
INSERT INTO PS_BAS_ACTIVITY
(EMPLID,
EMPL_RCD,
BAS_ACTION_SOURCE,
EVENT_DT,
EVENT_EFFSEQ,
BAS_ACTION,
BENEFIT_RCD_NBR,
COBRA_ACTION,
BAS_ALL_JOBS,
BAS_SUPPRESS_FORMS)                                     !GBD 01/03/2003
VALUES(
$bac_emplid,
#bac_empl_rcd,
$bac_bas_action_source,
$bac_event_dt,
#bac_event_effseq,
&BAC.BAS_ACTION,         ! GEX ISDVNPK 03/07/2008
#bac_benefit_rcd_nbr,
$bac_cobra_action,
'Y',
' ')                                                    !GBD 01/03/2003
end-sql
end-procedure

!********************************************************************
!Selects Employment.benefit_rcd#
!********************************************************************
Begin-Procedure Select-Benefit-RcdNum
#debug9 show 'Select-Benefit-RcdNum'
let #bac_benefit_rcd = 0
begin-select on-error=sql-error-found('Select-Benefit-RcdNum')
EBAC.BENEFIT_RCD_NBR
 move &EBAC.BENEFIT_RCD_NBR to #bac_benefit_rcd
FROM PS_EMPLOYMENT EBAC
WHERE EBAC.EMPLID = $bac_emplid
and ebac.EMPL_RCD = #bac_empl_rcd
end-select
end-procedure

!SXK 11/09/1999 End

!********************************************************************
!This procedure displays in the error report if there are any sql erros
!happened in the program
!********************************************************************

begin-procedure SQL-Error-Found($Proc_Name) 
#debug9 show 'gexbnypy.SQL-Error-Found'

  do error-found
  print 'SQL Error in ' (,34)
  print $Proc_Name ()  
  print $_sql-error () 
  print 'sql-status:' ()
  print #_sql-status () edit 99999 

end-procedure

!*********************************************************************
!This procedure displays the error message for the records that are in
!progress
!*********************************************************************

begin-procedure Error-Found
#debug9 show 'gexbnpyp.Error-Found'

  move 'Y' to $ErrorFound
  use-report report-log

 !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
  !let $EmplId_1st3 = substr($EmplId,1,3)
  !let $EmplId_mid2 = substr($EmplId,4,2)
  !let $EmplId_last4 = substr($EmplId,6,4)
 
  !String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  !print $EmplID11 (+2,16)
  print $EmplID (+2,16)
 !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
 
end-procedure

