!***********************************************************************
!  GEXBN836:  DETERMINE TM's  ELIGIBLE FOR PLAN                        *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXBN836:             Determine TM's  eligible for the plan          *
!                                                                      *
! Narrative:             This program will evaluate all TM's under     *
!                        plan_type = ‘1M’ and within the pay period    * 
!                        and determine if they are eligible for        *
!                        coverage or not.  All general deductions      *
!                        whose are still active employees but whose    *
!                        eligibility has ended end date updated on     *
!                        these rows corresponding to the pay end date  *
!                        of the prior row.                             *
!                                                                      *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           JOB                                            *
!                       GENL_DEDUCTION                                 *
!                       PAY_CALENDAR                                   *
!                       HEALTH_BENEFIT                                 *
!                                                                      *
! Written by:           Sandeep Himgire                                *
!                                                                      *
! Normally Run:         Sunday,after GEXBN805                          *
!                                                                      *
! Control Parms:        None                                           *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS     DATE         DESCRIPTION OF THE CHANGE                 *
!***********************************************************************
! ISDVSYH       07/09/2010   Initial Creation                          *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Portrait)


#define #column1     1
#define #column2    11
#define #column3    22
#define #column4    31
#define #column5    43
#define #column6    57
#define #column7    67
#define #column8    75
#define #column9    88
#define #column10  100
#define #column11  116
#define #column12  130
#define #column13  135


Begin-Heading 8 
#debug9 Show 'Begin-Heading (DedEnd-Report)'

  Let $ReportID      =   'PY101A'
  Let $ReportTitle   =   'GENERAL DEDUCTION/DIR DEP STOPS FOR PLANS'
  Let $ReportTitle2  =   'DedEnd-Report'

  #Include 'stdhdg01.sqc'
 
  Print $rpt-hdr                   (3,)  Center 
  Print $ReportTitle2              (4,)  Center

  print 'PREVIOUS'             (6,{#column8})
  print 'NEW'                  ( ,{#column9})


  print 'TERM'                (7,{#column5})
  print 'DEDCD'               ( ,{#column7})
  print 'DEDUCTION'           ( ,{#column8})
  print 'DEDUCTION'           ( ,{#column9})
  print '      GOAL'          ( ,{#column10})
  print '      GOAL'          ( ,{#column11})

  print 'COMPANY'             (8,{#column1})
  print 'PAYGROUP'            ( ,{#column2})
  print 'DEPTID'              ( ,{#column3})
  print 'EMPLID'              ( ,{#column4})
  print 'DATE'                ( ,{#column5})
  print 'DEDCD'               ( ,{#column6})
  print 'EFFDT'               ( ,{#column7})
  print 'END DATE'            ( ,{#column8})
  print 'END DATE'            ( ,{#column9})
  print '   BALANCE'          ( ,{#column10})
  print '    AMOUNT'          ( ,{#column11})

  print '-'                   (9,{#column1},7)   Fill
  print '-'                   ( ,{#column2},8)   Fill
  print '-'                   ( ,{#column3},6)   Fill
  print '-'                   ( ,{#column4},9)   Fill
  print '-'                   ( ,{#column5},8)   Fill
  print '-'                   ( ,{#column6},8)   Fill
  print '-'                   ( ,{#column7},6)   Fill
  print '-'                   ( ,{#column8},8)   Fill
  print '-'                   ( ,{#column9},9)   Fill
  print '-'                   ( ,{#column10},10) Fill
  print '-'                   ( ,{#column11},10) Fill

End-Heading




Begin-Report

MOVE $CURRENT-DATE TO $CURRDT 'MMDDYY'
 !let $prcs=#prcs_process_instance
 !Let $report-name = '{OUTFILE}' ||'gexbn836_' || $CURRDT ||'.pdf'
 !let $report-name = '{OUTFILE}' || 'gexbn836_' || 'san2' || '.pdf'
! show 'report-name' $report-name 
 !new-report  $report-name

#debug9 Show 'Begin-Report'
  Do Openfile
  Do P100-Initialization
  Do P200-Main-Process 
  Do P250-Main-Process
  ! Do P300-Finalization
  show '$send_mail'  $send_mail
  if $send_mail='Y'
  Do send-it
  end-if
  Do Stdapi-Term
End-Report

!***********************************************************************
Begin-Procedure Openfile
!***********************************************************************

   encode '<009>' into $delim
   Let $fileout = '{OUTFILE}' || 'gexbn836.xls'
   open $fileout as 1
     for-writing record=239 status=#filestat   
   
   Move 'GEXBN836'			To $Report  
   let $ReportTitle = 'GENERAL DEDUCTION/DIR DEP STOPS FOR PLANS'
   encode '<012>' into $newline 
   String 'Report ID:' $Report  ' ' ' ' ' ' ' ' ' ' $ReportTitle by $delim into $gexbn836
   Write 1 from $gexbn836
   
string 'COMPANY'  'PAYGROUP'  'DEPTID'  'EMPLID' 'TERM DATE'  'DEDCD' 'DEDCD EFFDT' 'PRE DED END DT'
        'NEW DED END DT' 'GOAL BAL'  'GOAL AMT' by $delim into $gexbn836
        
        Write 1 from $gexbn836
   
   
End-Procedure

Begin-procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'

Begin-select
J.EMPLID
J.EMPL_RCD
J.EFFDT
J.COMPANY
J.PAYGROUP
J.HOURLY_RT
BN.PLAN_TYPE
BN.COVERAGE_BEGIN_DT
BN.COVERAGE_END_DT
BN.COVERAGE_ELECT
BN.COVERAGE_ELECT_DT
BN.BENEFIT_PLAN


  Let $emplid   = &J.EMPLID
  Let #empl_rcd = &J.EMPL_RCD
  Let $effdt    = &J.EFFDT
  Let $company  = &J.COMPANY
  Let $paygroup = &J.PAYGROUP
  Let #hourly_rt=&J.HOURLY_RT
  Let $plan_type =&BN.PLAN_TYPE
  Let $coverage_begin_dt=&BN.COVERAGE_END_DT
  Let $coverage_end_dt=&BN.COVERAGE_END_DT
  Let $coverage_elect=&BN.COVERAGE_ELECT
  Let $coverage_elect_dt=&BN.COVERAGE_ELECT_DT
  LET $benefit_plan=&BN.BENEFIT_PLAN
  
  
  show '$emplid' $emplid
  show '$company' $company
  
 if $benefit_plan='VBUY1'
 Let #Goal_amt=#hourly_rt*8
 end-if
 if $benefit_plan='VBUY2'
 Let #Goal_amt=#hourly_rt*16
 end-if
 if $benefit_plan='VBUY3'
 Let #Goal_amt=#hourly_rt*24
 end-if
 if $benefit_plan='VBUY4'
 Let #Goal_amt=#hourly_rt*32
 end-if
 if $benefit_plan='VBUY5'
 Let #Goal_amt=#hourly_rt*40
 end-if

 Do P210_get_flat_rate_amount
 Do P230-insert-Genl-Deduction
 

 
 

FROM PS_HEALTH_BENEFIT BN,PS_JOB J

WHERE BN.EMPLID=J.EMPLID 
AND BN.EMPL_RCD=J.EMPL_RCD
AND J.EFFDT=(SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID          = J.EMPLID
       AND    EMPL_RCD       = J.EMPL_RCD)
AND J.EFFSEQ               =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID          = J.EMPLID
       AND    EMPL_RCD        = J.EMPL_RCD
       AND    EFFDT           = J.EFFDT)
AND BN.EFFDT=
      (SELECT MAX(EFFDT) 
       FROM ps_health_benefit 
       WHERE emplid=bn.emplid 
       AND EMPL_RCD=BN.EMPL_RCD 
       AND COBRA_EVENT_ID=BN.COBRA_EVENT_ID 
       AND PLAN_TYPE=BN.PLAN_TYPE 
       AND BENEFIT_NBR=BN.BENEFIT_NBR
       AND EFFDT >=J.EFFDT)
AND PLAN_TYPE='1M'  
AND COVERAGE_ELECT ='E'  
AND COVERAGE_ELECT_DT BETWEEN 
      (SELECT MAX(PAY_BEGIN_DT) 
       FROM PS_PAY_CALENDAR 
       WHERE COMPANY=J.COMPANY
       AND PAYGROUP =J.PAYGROUP
       AND  PAY_CONFIRM_RUN='Y') 
       AND (SELECT MAX(PAY_END_DT) 
       FROM PS_PAY_CALENDAR
       WHERE COMPANY=J.COMPANY
       AND PAYGROUP =J.PAYGROUP
       AND  PAY_CONFIRM_RUN='Y')
AND BN.BENEFIT_PLAN in ('VBUY1','VBUY2','VBUY3','VBUY4','VBUY5')
ORDER BY J.COMPANY, J.PAYGROUP
End-select
End-procedure


Begin-procedure P210_get_flat_rate_amount
show '#Goal_amt' #Goal_amt

Begin-select
count(PAY_PERIOD) &PAY_PERIOD

 Let #pay_period=&PAY_PERIOD
 Let #Flat_rate_amount=#Goal_amt/#pay_period
 show 'Flat rate ammount '  #Flat_rate_amount
 
FROM PS_PAY_CALENDAR
WHERE COMPANY=$company
AND PAYGROUP =$paygroup
AND PAY_CONFIRM_RUN='N'
AND PAY_END_DT >=sysdate
AND PAY_OFF_CYCLE_CAL='N'
End-select
end-procedure


Begin-Procedure P230-insert-Genl-Deduction
#debug9 Show 'P241-insert-Genl-Deduction'


 show 'insert genl ded1 for: ' $emplid #empl_rcd 'VACBUY'
show 'select prior to insert'
 show '$emplid' $emplid
 show '$company' $company
 show '#Flat_rate_amount' #Flat_rate_amount 
 show '#Goal_amt'  #Goal_amt
 show &gd.DED_CALC 


begin-select
gd.EMPLID
gd.COMPANY
gd.DEDCD 
gd.EFFDT
gd.DED_CALC 
gd.DEDUCTION_END_DT
gd.DED_ADDL_AMT
gd.DED_RATE_PCT
gd.GOAL_AMT
gd.GOAL_BAL
gd.LOAN_INT_PCT
gd.BAS_TAXABLE_BEN
gd.DED_STOPPED
gd.LAST_ACTION
gd.LAST_UPDATE_DATE
gd.PROCESS_DEDN
gd.GVT_DED_DIST_CD
gd.GVT_PYMNT_METHOD
gd.GVT_CHK_NAME
gd.GVT_ADDRESS1
gd.GVT_ADDRESS2
gd.GVT_ADDRESS_CITY
gd.GVT_ADDRESS_STATE
gd.GVT_ADDRESS_ZIP
gd.GVT_ADDRESS_CNTRY
gd.BANK_CD
gd.ACCOUNT_NUM
gd.ACCOUNT_TYPE
gd.GVT_PAYEE_ID_NO
gd.GVT_PAYEE_NAME
gd.GVT_ALLOT_PB

 show 'select prior to insert'
 show &gd.emplid
 show &gd.company
 show &gd.DEDCD 
 show $pay_begin_dt
 show &gd.DED_CALC 
 show $next_pay_end_dt
 show &gd.DED_ADDL_AMT
 show &gd.DED_RATE_PCT
 show &gd.GOAL_AMT
 show &gd.GOAL_BAL
 
FROM   PS_GENL_DEDUCTION GD
WHERE  GD.EMPLID            = $emplid
and    GD.company           = $company 
and    GD.DEDCD             = 'VACBUY'
AND    GD.EFFDT   = 
       (SELECT MAX(EFFDT)
       FROM PS_GENL_DEDUCTION GDD 
       WHERE GDD.EMPLID    =  $EMPLID1
       AND   GDD.company = &GD.company
       AND   GDD.DEDCD   = GD.DEDCD  )
End-Select


Begin-SQL
insert into ps_genl_deduction (
EMPLID
,COMPANY
,DEDCD 
,EFFDT
,DED_CALC 
,DEDUCTION_END_DT
,DED_ADDL_AMT
,DED_RATE_PCT
,GOAL_AMT
,GOAL_BAL
,LOAN_INT_PCT
,BAS_TAXABLE_BEN
,DED_STOPPED
,LAST_ACTION
,LAST_UPDATE_DATE
,PROCESS_DEDN
,GVT_DED_DIST_CD
,GVT_PYMNT_METHOD
,GVT_CHK_NAME
,GVT_ADDRESS1
,GVT_ADDRESS2
,GVT_ADDRESS_CITY
,GVT_ADDRESS_STATE
,GVT_ADDRESS_ZIP
,GVT_ADDRESS_CNTRY
,BANK_CD
,ACCOUNT_NUM
,ACCOUNT_TYPE
,GVT_PAYEE_ID_NO
,GVT_PAYEE_NAME
,GVT_ALLOT_PB)
values (
$emplid,
$company,
'VACBUY', 
sysdate ,        
'A', 
&gd.DEDUCTION_END_DT ,        
#Flat_rate_amount,
0,
#Goal_amt,
#Goal_amt,
0,
'N',
'N',
'C',
sysdate,
'Y',
' ',	
'E',
' ',   
' ',    
' ',    
' ',    
' ',    
' ',     
'USA',
' ',     
' ',     
' ',      
' ',       
' ', 
' ') 

End-SQL
End-Procedure


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc
  

  Let $ReportID      = 'GEXBN836'
  Let $ReportTitle   = 'DedEnd-Report'
  Do P150-Get-Last-Sheeted-Pay
  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle 
   Let $send_mail= 'N'                         
  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show ' '
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

 
End-Procedure



Begin-Procedure P150-Get-Last-Sheeted-Pay
#debug9 Show 'P150-Get-Last-Sheeted-Pay'
Begin-Select Distinct
PC.PAY_BEGIN_DT
PC.PAY_BEGIN_DT-1 &prior_pay_end_dt
PC.PAY_END_DT
PC.PAY_END_DT+7 &next_pay_end_dt
PC.PAY_CALC_RUN

  Let $pay_begin_dt     = &PC.PAY_BEGIN_DT
  Let $pay_end_dt       = &PC.PAY_END_DT
  Let $prior_pay_end_dt = &prior_pay_end_dt
  Let $pay_calc_run     = &PC.PAY_CALC_RUN
  let $next_pay_end_dt = &next_pay_end_dt


FROM   PS_PAY_CALENDAR PC

WHERE  PC.COMPANY            = 'GEI'
AND    PC.PAYGROUP           = 'OFF'
AND    PC.PAY_SHEETS_RUN     = 'Y'

AND    PC.PAY_END_DT         =
      (SELECT MAX(PAY_END_DT)
       FROM   PS_PAY_CALENDAR
       WHERE  COMPANY        = 'GEI'
       AND    PAYGROUP       = 'OFF'
       AND    PAY_SHEETS_RUN = 'Y')
End-Select
End-Procedure




Begin-procedure P250-Main-Process

Begin-Select
JJ.EMPLID
JJ.EMPL_RCD
JJ.EFFDT
JJ.EMPL_STATUS
JJ.COMPANY
JJ.PAYGROUP
JJ.DEPTID
BN1.PLAN_TYPE
BN1.COVERAGE_BEGIN_DT
BN1.COVERAGE_END_DT
BN1.COVERAGE_ELECT
BN1.COVERAGE_ELECT_DT 
		
  Let $emplid1   = &JJ.EMPLID
  Let #empl_rcd1 = &JJ.EMPL_RCD
  Let $effdt1    = &JJ.EFFDT
  Let $company1  = &JJ.COMPANY
  Let $paygroup1 = &JJ.PAYGROUP
  Let $plan_type1 =&BN1.PLAN_TYPE
  Let $coverage_begin_dt1=&BN1.COVERAGE_END_DT
  Let $coverage_end_dt1=&BN1.COVERAGE_END_DT
  Let $coverage_elect1=&BN1.COVERAGE_ELECT
  Let $coverage_elect_dt1=&BN1.COVERAGE_ELECT_DT
  Let $deptid =&JJ.DEPTID
  		
     Let $term_dt = &JJ.EFFDT
     Do P190-get-new-paybegin-end-date
 			
 
FROM   PS_HEALTH_BENEFIT BN1,
       PS_JOB           JJ


WHERE JJ.EMPL_STATUS            = 'A'     
AND    BN1.EMPLID=JJ.EMPLID 
AND    BN1.EMPL_RCD=JJ.EMPL_RCD   
AND   BN1.EFFDT=
      (SELECT MAX(EFFDT) 
       FROM PS_HEALTH_BENEFIT 
       WHERE EMPLID=BN1.EMPLID 
       AND EMPL_RCD=BN1.EMPL_RCD 
       AND COBRA_EVENT_ID=BN1.COBRA_EVENT_ID 
       AND PLAN_TYPE=BN1.PLAN_TYPE 
       AND BENEFIT_NBR=BN1.BENEFIT_NBR )				        
AND    JJ.EFFDT                =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID          = JJ.EMPLID
       AND    EMPL_RCD       = JJ.EMPL_RCD
       AND    EFFDT<= BN1.EFFDT)

AND    JJ.EFFSEQ               =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID          = JJ.EMPLID
       AND    EMPL_RCD       = JJ.EMPL_RCD
       AND    EFFDT           = JJ.EFFDT)

AND    BN1.PLAN_TYPE='1M'
AND    BN1.COVERAGE_ELECT='T' 

End-Select

end-procedure


Begin-Procedure P190-get-new-paybegin-end-date
#debug9 Show 'P190-get-new-paybegin-end-date'
show 'emplid' $emplid1
show 'calculating pay begindate'
Begin-Select Distinct
PC1.COMPANY
PC1.PAYGROUP
PC1.PAY_BEGIN_DT &PC1.PAY_BEGIN_DT
PC1.PAY_BEGIN_DT-1 &new_prior_pay_end_dt
PC1.PAY_END_DT
PC1.PAY_CALC_RUN

  Let $new_pay_begin_dt     = &PC1.PAY_BEGIN_DT
  Let $new_pay_end_dt       = &PC1.PAY_END_DT
  Let $new_prior_pay_end_dt = &new_prior_pay_end_dt

  SHOW 'EMPL ID......' $EMPLID1
  SHOW 'EFFDT........' $EFFDT1
  SHOW 'NEW PAY BEGIN DT ' $NEW_PAY_BEGIN_dT
  SHOW 'NEW PAY END DT   ' $NEW_PAY_END_DT
  
  Do P230-Genl-Deduction
  
FROM   PS_PAY_CALENDAR PC1

WHERE  PC1.COMPANY            = $company1
AND    PC1.PAYGROUP           = $paygroup1

AND    PC1.PAY_BEGIN_DT         =
      (SELECT MAX(PAY_BEGIN_DT)
       FROM   PS_PAY_CALENDAR
       WHERE  COMPANY        = $company1
       AND    PAYGROUP       = $paygroup1
       AND    PAY_BEGIN_DT   <= $coverage_elect_dt1)



End-Select
End-Procedure


Begin-Procedure P230-Genl-Deduction
#debug9 Show 'P230-Genl-Deduction'

show 'emplid' $emplid1
show 'calculating general deduction'
Begin-Select

gd_A.EMPLID
gd_A.COMPANY
gd_A.DEDCD 
gd_A.EFFDT
gd_A.DED_CALC 
gd_A.DEDUCTION_END_DT
gd_A.DED_ADDL_AMT
gd_A.DED_RATE_PCT
gd_A.GOAL_AMT
gd_A.GOAL_BAL
gd_A.LOAN_INT_PCT
gd_A.BAS_TAXABLE_BEN
gd_A.DED_STOPPED
gd_A.LAST_ACTION
gd_A.LAST_UPDATE_DATE
gd_A.PROCESS_DEDN
gd_A.GVT_DED_DIST_CD
gd_A.GVT_PYMNT_METHOD
gd_A.GVT_CHK_NAME
gd_A.GVT_ADDRESS1
gd_A.GVT_ADDRESS2
gd_A.GVT_ADDRESS_CITY
gd_A.GVT_ADDRESS_STATE
gd_A.GVT_ADDRESS_ZIP
gd_A.GVT_ADDRESS_CNTRY
gd_A.BANK_CD
gd_A.ACCOUNT_NUM
gd_A.ACCOUNT_TYPE
gd_A.GVT_PAYEE_ID_NO
gd_A.GVT_PAYEE_NAME
gd_A.GVT_ALLOT_PB    

 let $dedcd = &gd_a.dedcd
 do process-deds

FROM   PS_GENL_DEDUCTION GD_A
WHERE  EMPLID            = $emplid1
AND    COMPANY = $company1
and    GD_A.DEDCD     = 'VACBUY'
AND    EFFDT   = 
       (SELECT MAX(EFFDT)
       FROM PS_GENL_DEDUCTION 
       WHERE EMPLID    =  $EMPLID1
        AND COMPANY = $company1
       AND   DEDCD     =  GD_A.DEDCD) 
AND  (GD_A.DEDUCTION_END_DT is null                 
 OR   GD_A.DEDUCTION_END_DT > $next_pay_end_dt)     
End-Select
End-Procedure
!*************************************************************************



begin-procedure process-deds
show 'emplid' $emplid1
show 'process-deds' 

       Let $ded_end_dt = $pay_end_dt
show 'Processing Genl Deductions for emplid ' $EMPLID
SHOW 'DEDCD             ' &gd_A.DEDCD
SHOW 'EFFDT             ' $pay_begin_dt
SHOW 'DED END DT        ' $next_pay_end_dt
SHOW '--------------------------------- ' 
let $ded-row-found = 'N'
Begin-Select

gd1.EMPLID
gd1.COMPANY
gd1.DEDCD 
gd1.EFFDT
gd1.DED_CALC 
gd1.DEDUCTION_END_DT
gd1.goal_amt
gd1.goal_bal


       Let $ded-row-found = 'Y'
       Let $dedcd      = &GD1.DEDCD
	 Let $ded_effdt  = &GD1.EFFDT
	 Let #goal_bal1   = &GD1.GOAL_BAL
	 Let #goal_amt1   = &GD1.GOAL_AMT
	 Let $prev_ded_end_dt = &GD1.DEDUCTION_END_DT

	   show '$dedcd      ' $dedcd 
    Add 1 To #genl-deductions-found 
	   show '$effdt      ' $effdt

    

          show 'DEDUCTION END DT UPDATED FOR THE EMPLOYEE ' $EMPLID
          SHOW 'DEDCD             ' $DEDCD
          SHOW 'DEDUCTION EFFDT  '  $pay_begin_dt
          SHOW 'DEDUCTION END DT  ' $next_pay_end_dt
          SHOW ' ' 

        Do P240-Update-Genl-Deduction
        

FROM   PS_GENL_DEDUCTION GD1
WHERE  GD1.EMPLID            = $emplid1
  AND  GD1.COMPANY = $Company1
  AND  GD1.DEDCD = $DEDCD
  and  GD1.EFFDT = $pay_begin_dt
End-Select
! add a genl deduction row to turn off deds
if $ded-row-found = 'N'
          show 'DEDUCTION END DT INSERTED FOR THE EMPLOYEE ' $EMPLID
          SHOW 'DEDCD             ' $DEDCD
          SHOW 'DEDUCTION BEGIN DT (effdt) ' $pay_begin_dt
          SHOW 'DEDUCTION END DT  ' $next_pay_end_dt

          Do P241-Insert-Genl-Deduction 
end-if
show 'data is printing'
Do Write-Record 
Do P250-Print-DedEnd-Report
  
End-Procedure




Begin-Procedure P240-Update-Genl-Deduction
#debug9 Show 'P240-Update-Genl-Deduction'

Begin-SQL
UPDATE ps_genl_deduction
SET    deduction_end_dt = $next_pay_end_dt
WHERE  emplid           = $emplid1
  AND    company        = &GD_A.company
  AND    dedcd          = $dedcd
  AND    effdt          = $pay_begin_dt
End-SQL
  Add 1 to #genl-deductions-updated
  show 'updated'
End-Procedure

Begin-Procedure P241-insert-Genl-Deduction
#debug9 Show 'P241-insert-Genl-Deduction'

 show 'insert genl2 ded for: ' $emplid #empl_rcd $dedcd
 
begin-select
gd2.EMPLID
gd2.COMPANY
gd2.DEDCD 
gd2.EFFDT
gd2.DED_CALC 
gd2.DEDUCTION_END_DT
gd2.DED_ADDL_AMT
gd2.DED_RATE_PCT
gd2.GOAL_AMT
gd2.GOAL_BAL
gd2.LOAN_INT_PCT
gd2.BAS_TAXABLE_BEN
gd2.DED_STOPPED
gd2.LAST_ACTION
gd2.LAST_UPDATE_DATE
gd2.PROCESS_DEDN
gd2.GVT_DED_DIST_CD
gd2.GVT_PYMNT_METHOD
gd2.GVT_CHK_NAME
gd2.GVT_ADDRESS1
gd2.GVT_ADDRESS2
gd2.GVT_ADDRESS_CITY
gd2.GVT_ADDRESS_STATE
gd2.GVT_ADDRESS_ZIP
gd2.GVT_ADDRESS_CNTRY
gd2.BANK_CD
gd2.ACCOUNT_NUM
gd2.ACCOUNT_TYPE
gd2.GVT_PAYEE_ID_NO
gd2.GVT_PAYEE_NAME
gd2.GVT_ALLOT_PB

 show 'select prior to insert'
 show &gd2.emplid
 show &gd2.company
 show &gd2.DEDCD 
 show $pay_begin_dt
 show &gd2.DED_CALC 
 show $next_pay_end_dt
 show &gd2.DED_ADDL_AMT
 show &gd2.DED_RATE_PCT
 show &gd2.GOAL_AMT
 show &gd2.GOAL_BAL
 
FROM   PS_GENL_DEDUCTION GD2
WHERE  GD2.EMPLID            = $emplid1
and    GD2.company           = &gd_a.company 
AND    GD2.DEDCD = $DEDCD
AND    GD2.EFFDT   = 
       (SELECT MAX(EFFDT)
       FROM PS_GENL_DEDUCTION GDD 
       WHERE GDD.EMPLID    =  $EMPLID1
       AND   GDD.company = &gd_a.company
       AND   GDD.DEDCD   = $DEDCD  )
End-Select


Begin-SQL
insert into ps_genl_deduction (
EMPLID
,COMPANY
,DEDCD 
,EFFDT
,DED_CALC 
,DEDUCTION_END_DT
,DED_ADDL_AMT
,DED_RATE_PCT
,GOAL_AMT
,GOAL_BAL
,LOAN_INT_PCT
,BAS_TAXABLE_BEN
,DED_STOPPED
,LAST_ACTION
,LAST_UPDATE_DATE
,PROCESS_DEDN
,GVT_DED_DIST_CD
,GVT_PYMNT_METHOD
,GVT_CHK_NAME
,GVT_ADDRESS1
,GVT_ADDRESS2
,GVT_ADDRESS_CITY
,GVT_ADDRESS_STATE
,GVT_ADDRESS_ZIP
,GVT_ADDRESS_CNTRY
,BANK_CD
,ACCOUNT_NUM
,ACCOUNT_TYPE
,GVT_PAYEE_ID_NO
,GVT_PAYEE_NAME
,GVT_ALLOT_PB)
values (
&gd2.EMPLID,
&gd2.COMPANY,
&gd2.DEDCD ,
$pay_begin_dt,         !gd.EFFDT
&gd2.DED_CALC ,
$next_pay_end_dt,           !gd.DEDUCTION_END_DT
&gd2.DED_ADDL_AMT,
&gd2.DED_RATE_PCT,
&gd2.GOAL_AMT,
&gd2.GOAL_BAL,
&gd2.LOAN_INT_PCT,
&gd2.BAS_TAXABLE_BEN,
&gd2.DED_STOPPED,
&gd2.LAST_ACTION,
&gd2.LAST_UPDATE_DATE,
&gd2.PROCESS_DEDN,
&gd2.GVT_DED_DIST_CD,
&gd2.GVT_PYMNT_METHOD,
&gd2.GVT_CHK_NAME,
&gd2.GVT_ADDRESS1,
&gd2.GVT_ADDRESS2,
&gd2.GVT_ADDRESS_CITY,
&gd2.GVT_ADDRESS_STATE,
&gd2.GVT_ADDRESS_ZIP,
&gd2.GVT_ADDRESS_CNTRY,
&gd2.BANK_CD,
&gd2.ACCOUNT_NUM,
&gd2.ACCOUNT_TYPE,
&gd2.GVT_PAYEE_ID_NO,
&gd2.GVT_PAYEE_NAME,
&gd2.GVT_ALLOT_PB) 

End-SQL
  Add 1 to #genl-deductions-inserted
End-Procedure





Begin-Procedure P250-Print-DedEnd-Report
#debug9 Show 'P250-Print-DedEnd-Report'
   
  !Use-Report DedEnd-Report
  Let $DedEnd-Data-Found-Flag = 'Y'

  Do Format-DateTime($term_dt, $term_date, {DEFDATE}, '', '')
  !Do Format-DateTime($effdt, $rehire_date, {DEFDATE}, '', '')
  Do Format-DateTime($ded_effdt, $deduct_effdt, {DEFDATE}, '', '')
  Do Format-DateTime($ded_end_dt, $deduct_end_dt, {DEFDATE}, '', '')
  Do Format-DateTime($prev_ded_end_dt, $prev_ded_end_date, {DEFDATE}, '', '')
  Do Format-DateTime($pay_begin_dt, $pay_begin_date, {DEFDATE}, '', '')

  Print $company1              (+1,{#column1})
  Print $paygroup1             (  ,{#column2})
  Print $deptid               (  ,{#column3})
  Print $emplid1               (  ,{#column4})
  Print $term_date            (  ,{#column5})
  Print $dedcd                (  ,{#column6})
  Print $deduct_effdt         (  ,{#column7})
  Print $prev_ded_end_date    (  ,{#column8})
  Print $pay_begin_date       (  ,{#column9})
  Print #goal_bal1             (  ,{#column10})  Edit 999,999.99
  Print #goal_amt1             (  ,{#column11})  Edit 999,999.99
 
 End-Procedure
 
 !*********************************************************************** 
!*********************************************************************** 
Begin-procedure Write-Record
#debug9 show 'Write-Record'
 
   string  &JJ.COMPANY &JJ.PAYGROUP $deptid $emplid1 $term_date $dedcd $deduct_effdt $prev_ded_end_date $pay_begin_date #goal_bal1 #goal_amt1  by $delim into $gexbn836   
   write 1 from $gexbn836 
   
   let $send_mail='Y'      
              
   
   

end-procedure
!***********************************************************************
!***********************************************************************

begin-procedure  send-it

close 1
#debug9 display 'send-it'
let $to_list='david.tyer@gianteagle.com'
let $subject = 'DedEnd-Report'
let $body_txt='Please find attached document containing new participants or Team Members who are no longer eligible for the plan' 
 show '$report-name' $report-name
let $mail-cmd = 'psmail -TO"'||$to_list||'" -SUBJECT"'||$subject||'" -BODY"'||$body_txt||'" -FILE"'||$fileout

CALL SYSTEM USING $mail-cmd #Status
if #Status = 0
show 'email sucessful'
end-if

end-procedure
!***********************************************************************





#Include 'setenv.sqc'
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date math
#Include 'number.sqc'    !Routines to format numbers
!#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record
#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'getlogou.sqc'
