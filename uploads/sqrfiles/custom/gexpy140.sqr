!***********************************************************************
! GEXPY140.SQR:                                                        *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-2006 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY140.SQR :                                                       *
!                                                                      *
! Narrative:            Create a program that will report all pharmacy *
!			hours on a weekly basis by dept id and another *
!			file that will report filtered pharmacy hours  *
!			(specific earnings codes).                     *
!			ITG-35744				       *
!								       *
! #Debug Used:          x                                              *
!								       *
! SQL Tables:           PS_PAY_CHECK, PS_PAY_EARNINGS, PS_PAY_OTH_EARNS*
!			,PS_EARNINGS_TBL, PS_JOB, PS_EMPLMT_SRCH_QRY,  *
!			PS_JOBCODE_TBL                                 *
!								       *
! Written by:           Rapidigm, Deepak. S, 04/20/06                  *
!                                                                      *
! Normally Run:         This report needs to run every Wednesday (if   *
!			payroll processing is pushed back a day,       *
!			should run on Thursday). The output (excel)    *
!			needs to be sent to Joshua Shapira in Pharmacy *
!			Operations.                                    *
!                                                                      *
! Control Parms:        Reads the run control table PS_GEX_RUN_CNTL    *
!								       *
!                                                                      *
!***********************************************************************

!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
!                                                                      *
!                                                                      *
! Manish    08/21/2007  HCM 9.0 Upgrade                                *
! ISDVMXD   02/12/2009  ITG-56881 JobTitle Change		       *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
! #include 'setup02.sqc'   !Printer and Page-Size Initialization (Landscape)

#define #column1  001
#define #column2  010
#define #column3  020
#define #column4  030
#define #column5  040
#define #column6  050
#define #column7  060
#define #column8  070
#define #column9  080
#define #column10  090
#define #column11  100
#define #column12 110

!***********************************************************************
! Defines Heading of the report
!***********************************************************************
Begin-Heading 2
  
  Print $report-heading      (1,1)

  Print 'DEPTID'                (+1,{#column1})
  Print 'PHARMACY SPECIALIST'   (+0,{#column2})
  Print 'PAY_END_DT'            (+0,{#column3})
  Print 'NAME'			(+0,{#column4})
  print 'JOBTITLE'		(+0,{#column5})
  print 'FULL_PART_TIME'        (+0,{#column6})       	
  print 'ERNCD'			(+0,{#column7})	
  print 'DESCR'			(+0,{#column8})
  print 'OTH_HRS'		(+0,{#column9})	
  print 'OTH_EARNS'		(+0,{#column10})	
  print 'STD_HOURS'		(+0,{#column11})
  print 'DEPTID'		(+0,{#column12})

End-Heading


!***********************************************************************
! Start of Program
!***********************************************************************
Begin-Report
  let $ReportID = 'GEXPY140'
  do Init-DateTime           !datetime.sqc
  do Init-Number             !number.sqc
  do Get-Current-DateTime    !curdttim.sqc
  do Stdapi-Init             !stdapi.sqc
  if isnull($prcs_process_instance)
	let $Prcs_OprID = 'ISDVDXS'
	let $Prcs_Run_Cntl_ID = 'gexpy140'
  end-if

  do Get-Run-Control	     !gexrnctl.sqc  

  if ltrim(rtrim(&thrudate,' '),' ') = ''
	do Select-Pay-End-Date
	let $thrudate = $xxx_pay_end_dt
  else
	let $thrudate = &thrudate
  end-if

  #debugx  show '<' $thrudate '>'
  let #grand-total = 0
  
  do Get-FilePath
  do Get-Data
  do stdapi-term
End-Report



!********************************************************
! Procedure used to select current pay_end_dt 
! if none specified on the run control page
!********************************************************
begin-procedure Select-Pay-End-Date
begin-select distinct
max(xxx.pay_end_dt) &xxx.pay_end_dt
  
   move &xxx.pay_end_dt to $xxx_pay_end_dt
  
from ps_pay_calendar xxx
where xxx.pay_confirm_run = 'Y'
and xxx.company <= '999'
and xxx.pay_end_dt <= sysdate

end-select
end-procedure 



!********************************************************
! Procedure used for getting the filepath from the 
! process scheduler table.
!********************************************************
begin-procedure Get-FilePath
	let $filepath = ''
begin-select
origoutdest	&origoutdest
prcsoutputdir	&prcsoutputdir

	move &origoutdest to $origoutdest
	move &prcsoutputdir to $prcsoutputdir
	

	if rtrim(ltrim($origoutdest,' '),' ') = ''    
	! Process run to web, will not have trailing slash, so add it
	
		let $first_char = substr($prcsoutputdir,1,1)

		if $first_char = '/'
			let $prcsoutputdir = $prcsoutputdir || '/'
		else
			let $prcsoutputdir = $prcsoutputdir || '\'
		end-if
	else
		! Process run to file, so first check if trailing slash is present, if not then add it
		let #len = length($origoutdest)
		let #start = #len - 1
		let $last_char = substr($origoutdest,#start,1)
		if $last_char != '/' or $last_char != '\' 
			let $first_char = substr($origoutdest,1,1)
			if $first_char = '/'
				let $origoutdest = $origoutdest || '/'
			else
				let $origoutdest = $origoutdest || '\'
			end-if
		end-if
	end-if

	if isblank($origoutdest)
		let $filepath = $prcsoutputdir
	else
		let $filepath = $origoutdest
	end-if

	#debugx
	 show $filepath

from psprcsparms
where prcsinstance = #prcs_process_instance
end-select

	if $filepath = ''
		let $filepath = 'c:\temp\'
	end-if

end-procedure 



!***********************************************************************
! This procedure controls the where clause for the 2 reports.
!***********************************************************************
Begin-Procedure Get-Data

	let #report_num = 1
	let $Where = '1 = 1'

	while 1
		move #report_num to $report_num
		let $report_num = edit($report_num,'9')
		let $report-name = $ReportID || '-RX_Weekly_Audit' || $report_num || '.csv'	
		let $report-heading = $ReportID || '-RX_Weekly_Audit' || $report_num

		#debugx show $report-name 
		#debugx show $report-heading

		let $report-name = $filepath || $report-name  ! 'c:\temp\' 

		#debugx show $report-name

		new-report  $report-name

		#debugx show $Where
		show $Where

		do Select-Data

		add 1 to #report_num

		if #report_num > 2
			break
		end-if

		do Build-Dynamic-Where
		! let $Where = 'C.ERNCD IN (''170'',''171'',''172'',''177'',''502'',''REG'',''OTP'',''HOL'',''140'',''141'',''142'',''143'',''144'',''145'',''146'',''147'',''148'',''149'',''14A'',''150'',''151'',''152'',''153'',''154'',''155'',''156'',''164'',''165'',''166'',''167'')'
		let $where = $GEXXX924_INCLUDE_ERNCD_CRITERIA
		
	end-while
End-Procedure


!***********************************************************************
! Builds the where clause for ERNCD
!***********************************************************************
begin-procedure Build-Dynamic-Where

	Let $GEXXX924_ERNCD_Alias = 'C.ERNCD'
	Do GEXXX924-Select-ERNCD-Parameters 

end-procedure 


!***********************************************************************
! Main Procedure which selects the data.
!***********************************************************************
Begin-Procedure Select-Data

 show ' starting select data' $Where 
 
Begin-Select
B.DEPTID				&deptid 
G.DESCR					&pharm_sp
TO_CHAR(A.PAY_END_DT,'YYYY-MM-DD')	&pay_end_dt
A.NAME					&name
F.DESCR					&jobtitle
E.FULL_PART_TIME			&full_part_time
C.ERNCD					&erncd
D.DESCR					&descr
SUM(C.OTH_HRS)				&oth_hrs
SUM(C.OTH_EARNS)			&oth_earns
E.STD_HOURS				&std_hours
A.DEPTID				&deptid1
D.ERNCD					
TO_CHAR(D.EFFDT,'YYYY-MM-DD')		
F.SETID					
F.JOBCODE				
TO_CHAR(F.EFFDT,'YYYY-MM-DD')	
E.POSITION_NBR			!ISDVMXD added for ITG 56881 on 02/12/2009	
PDT.DESCR				&position_descr		!ISDVMXD added for ITG 56881 on 02/12/2009
	move &deptid to $deptid
	let $deptid = '="' || $deptid || '"'

	move &deptid1 to $deptid1
	let $deptid1 = '="' || $deptid1 || '"'

	!isdvmxd added for ITg 56881 on 02/12/2009
	If &position_descr = ' '
		Let $JobTitle = LTrim(RTrim(&jobtitle,' '),' ')
	Else
		Let $JobTitle = LTrim(RTrim(&position_descr,' '),' ')
	End-If
	!isdvmxd added for ITg 56881 on 02/12/2009
	
  if &oth_hrs <> 0 or &oth_earns <> 0
	print $deptid		(+1,{#column1})
	print &pharm_sp		(0,{#column2})
	print &pay_end_dt	(0,{#column3})
	print &name		(0,{#column4})
	!print &jobtitle	(0,{#column5})
	print $JobTitle		(0,{#column5})		!isdvmxd added for ITg 56881 on 02/12/2009
	print &full_part_time	(0,{#column6})
	print &erncd		(0,{#column7})	
	print &descr		(0,{#column8})
	print &oth_hrs		(0,{#column9})
	print &oth_earns	(0,{#column10})
	print &std_hours	(0,{#column11})	
	print $deptid1		(0,{#column12})
  end-if

	NEXT-LISTING

FROM PS_PAY_CHECK A, PS_PAY_EARNINGS B, PS_PAY_OTH_EARNS C, PS_EARNINGS_TBL D, 
	PS_JOB E, PS_EMPLMT_SRCH_QRY E1, PS_JOBCODE_TBL F, PS_DEPT_NODE_TBL G,PS_POSITION_DATA PDT
  WHERE E.EMPLID = E1.EMPLID
    AND E.EMPL_RCD = E1.EMPL_RCD
    !AND E1.ROWSECCLASS = 'DPALL'	!Manish, PY206, Giant Eagle Modification
    AND  E1.OPRID = $Prcs_OprID 	!Manish,08/17/2007,PY227-Giant Eagle added on 08/08/2007 for HCM 9.0 Upgrade
    AND A.COMPANY = B.COMPANY
     AND A.PAYGROUP = B.PAYGROUP
     AND A.PAY_END_DT = B.PAY_END_DT
     AND A.OFF_CYCLE = B.OFF_CYCLE
     AND A.PAGE_NUM = B.PAGE_NUM
     AND A.LINE_NUM = B.LINE_NUM
     AND A.SEPCHK = B.SEPCHK
     AND B.COMPANY = C.COMPANY
     AND B.PAYGROUP = C.PAYGROUP
     AND B.PAY_END_DT = C.PAY_END_DT
     AND B.OFF_CYCLE = C.OFF_CYCLE
     AND B.PAGE_NUM = C.PAGE_NUM
     AND B.LINE_NUM = C.LINE_NUM
     AND B.ADDL_NBR = C.ADDL_NBR
     AND C.ERNCD = D.ERNCD
     AND E.POSITION_NBR = PDT.POSITION_NBR	!ISDVMXD added for ITG 56881 on 02/12/2009
     AND PDT.EFF_STATUS = 'A'	!ISDVMXD added for ITG 56881 on 02/12/2009
     AND D.EFFDT =
        (SELECT MAX(D_ED.EFFDT) FROM PS_EARNINGS_TBL D_ED
        WHERE D.ERNCD = D_ED.ERNCD
          AND D_ED.EFFDT <= SYSDATE)
     AND E.EMPLID = A.EMPLID
     AND E.EMPL_RCD = A.EMPL_RCD
     AND E.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_JOB E_ED
        WHERE E.EMPLID = E_ED.EMPLID
          AND E.EMPL_RCD = E_ED.EMPL_RCD
          AND E_ED.EFFDT <= SYSDATE)
    AND E.EFFSEQ =
        (SELECT MAX(E_ES.EFFSEQ) FROM PS_JOB E_ES
        WHERE E.EMPLID = E_ES.EMPLID
          AND E.EMPL_RCD = E_ES.EMPL_RCD
          AND E.EFFDT = E_ES.EFFDT)
     AND F.SETID = E.SETID_JOBCODE
     AND F.JOBCODE = E.JOBCODE
     AND F.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_JOBCODE_TBL F_ED
        WHERE F.SETID = F_ED.SETID
          AND F.JOBCODE = F_ED.JOBCODE
          AND F_ED.EFFDT <= SYSDATE)
     AND A.PAY_END_DT = $thrudate
     AND B.ACCT_CD = '008'
     and G.SETID = 'COMMN'
     AND G.TREE_NODE = 
	(SELECT node.parent_node_name FROM pstreenode node
	WHERE node.tree_name = 'RX_REPORTING_TREE'
	AND node.TREE_NODE = B.DEPTID
	AND node.effdt = 
		(SELECT MAX(tree.effdt) FROM pstreedefn tree
		WHERE tree.setid = 'COMMN'
		AND tree.tree_name = 'RX_REPORTING_TREE'))
     AND G.EFFDT = 
	(SELECT MAX(G_ED.EFFDT) FROM PS_DEPT_NODE_TBL G_ED
	 WHERE G_ED.SETID = G.SETID
	 AND G_ED.TREE_NODE = G.TREE_NODE
	 AND G_ED.EFFDT <= SYSDATE
	 AND G_ED.EFF_STATUS = 'A')
     AND PDT.EFFDT = (SELECT MAX(P_ED.EFFDT) from PS_POSITION_DATA P_ED 	!ISDVMXD added for ITG 56881 on 02/12/2009
     			WHERE P_ED.POSITION_NBR = PDT.POSITION_NBR
     			AND P_ED.EFF_STATUS = 'A'
     			AND P_ED.EFFDT <= SYSDATE)	 
     AND [$Where]
  GROUP BY  B.DEPTID, G.DESCR,  TO_CHAR(A.PAY_END_DT,'YYYY-MM-DD'),  A.NAME,  F.DESCR,  E.FULL_PART_TIME,  
  C.ERNCD,  D.DESCR,  E.STD_HOURS,  A.DEPTID,D.ERNCD,TO_CHAR(D.EFFDT,'YYYY-MM-DD'),
  F.SETID,F.JOBCODE,TO_CHAR(F.EFFDT,'YYYY-MM-DD'),
  E.POSITION_NBR,PDT.DESCR	!added by isdvmxd for ITG 56881 on 02/12/2009
  ORDER BY B.DEPTID, A.NAME, C.ERNCD
End-Select
End-Procedure


#include 'stdapi.sqc'    !Process Scheduler Interface
#include 'reset.sqc'     !Reset Printer Procedure
#include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'  !Routines for date math
#include 'gexrnctl.sqc'  !Routine for Get-Run-Control
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#include 'gexxx924.sqc'  !Get ERNCD from Run Control Page
