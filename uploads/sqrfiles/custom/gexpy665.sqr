!***********************************************************************
! GEXPY665.SQR:                                                        *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-2006 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY665.SQR :                                                       *
!                                                                      *
! Narrative:            This program was cloned from the Query         *
!			Support_Fee_AR. ITG # 35592                    *
!			Create a program that will report the total    *
!			support fees deducted per independent dept id  *
!			on a weekly basis and email the results to     *
!			independent accounting via an excel spreadsheet*
!								       *
! #Debug Used:          x                                              *
!								       *
! SQL Tables:           PS_PAY_CHECK , PS_PAY_GARNISH                  *
!								       *
! Written by:           Rapidigm, Deepak. S, 04/11/06                  *
!                                                                      *
! Normally Run:         This report needs to run every Wednesday,      *
!		        unless there is a holiday processing that has  *
!			pushed the payroll processing back a day, in   *
!			that case, it will run on a Thursday. The      *
!			output (excel file) needs to be sent to the    *
!			following people in independent accounting:    *
!			Nancy Fouse, Bethann Heakins, Jarryd Schwarts  *
!			and Judy Schweppe                              *
!                                                                      *
! Control Parms:        Reads the run control table PS_GEX_RUN_CNTL    *
!								       *
!                                                                      *
!***********************************************************************

!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! DXS       01/24/07    Changed file path location from S:\ to UNC path*
!		        Added logic for 683I in Build-data procedure   *
!GEX_PY289 SXD 09/04/2007  When hardcoded value of thrudate in the     * 
!                          query, it generates report.                 * 
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)

#define #column1  001
#define #column2  026
#define #column3  055
#define #column4  085



!***********************************************************************
! Start of Program
!***********************************************************************
Begin-Report

  do Init-DateTime           !datetime.sqc
  do Init-Number             !number.sqc
  do Get-Current-DateTime    !curdttim.sqc
  do Stdapi-Init             !stdapi.sqc
  if isnull($prcs_process_instance)
	let $Prcs_OprID = 'HRBATCH'
	let $Prcs_Run_Cntl_ID = 'gexpy665'
  end-if

  let $sep = ','

  do Get-Run-Control	     !gexrnctl.sqc  

  if ltrim(rtrim(&thrudate,' '),' ') = ''
	do Select-Pay-End-Date
	let $thrudate = $xxx_pay_end_dt
  else
	let $thrudate = &thrudate
  end-if

  #debugx  show '<' $thrudate '>'

  let #grand-total = 0
  let $temp_table = 'PS_GEXPY665' !Pass the table name as dynamic variable
                                    !else SQRW gives compilation error      

  do Build-Dynamic-Where
  do Create-Temp-Table
  do Build-Data
  do Commit-Data
  do Select-Data

  move #grand-total to $grand-total   $99999.99
  write 1 from 'Grand Total':12
		$sep:1
		$sep:1
		$grand-total:10

  do Drop-Temp-Table
  close 1
  do stdapi-term
End-Report


!********************************************************
! Procedure used to select current pay_end_dt 
! if none specified on the run control page
!********************************************************
begin-procedure Select-Pay-End-Date
begin-select distinct
max(xxx.pay_end_dt) &xxx.pay_end_dt
  
   move &xxx.pay_end_dt to $xxx_pay_end_dt
  
from ps_pay_calendar xxx
where xxx.pay_confirm_run = 'Y'
and xxx.company <= '999'
and xxx.pay_end_dt <= sysdate

end-select
end-procedure 


!********************************************************
! Procedure which builds the where clause for COMPANY
!********************************************************
begin-procedure Build-Dynamic-Where
	Let $GEXXX900_Company_Alias = 'B.COMPANY'
	Do GEXXX900-Select-Company-Parameters
	
	#debugx show $GEXXX900_EXCLUDE_COMPANY_CRITERIA

end-procedure 

!***********************************************************************
! Builds Temporary Table to store the data.
!***********************************************************************
Begin-Procedure Create-Temp-Table
    #debugx show 'In Create-Temp-Table'
Begin-SQL
Create Table PS_GEXPY665 (
	DEPTID VARCHAR2(10) NOT NULL,
	PAY_END_DT DATE NOT NULL,
	DEDUCT_CMPNY_FEE DECIMAL(10, 2) NOT NULL)
 TABLESPACE HRAPP STORAGE
 (INITIAL 40000 NEXT 100000 MAXEXTENTS UNLIMITED PCTINCREASE 0)
 PCTFREE 10 PCTUSED 80
End-SQL
End-Procedure 

!***********************************************************************
! Main Procedure which selects the data and inserts into temporary table
!***********************************************************************
Begin-Procedure Build-Data
Begin-Select
A.DEPTID			&deptid
A.PAY_END_DT			&pay_end_dt
SUM( B.DEDUCT_CMPNY_FEE)	&deduct_cmpny_fee
  
	move &deptid to $deptid
	evaluate $deptid 
		when = '161I'
			let $deptid = '1615'
			break
		when = '182I'
			let $deptid = '0182'
			break
		when = '613I'
			let $deptid = '0613'
			break
		when = '643I'
			let $deptid = '0643'
			break
		when = '683I'			! DXS, 01/24/07. Added this
			let $deptid = '0683'
			break
	end-evaluate		
        #debugx show 'Doing Insert Data'
	do Insert-Data

  FROM PS_PAY_CHECK A, PS_PAY_GARNISH B 
  WHERE A.COMPANY = B.COMPANY 
     AND A.PAYGROUP = B.PAYGROUP 
     AND A.PAY_END_DT = B.PAY_END_DT 
     AND A.OFF_CYCLE = B.OFF_CYCLE 
     AND A.PAGE_NUM = B.PAGE_NUM 
     AND A.LINE_NUM = B.LINE_NUM 
     AND A.SEPCHK = B.SEPCHK 
    ! AND B.COMPANY NOT IN ('GEI','VEC','335','TMK','BRM','RTP','KAP','RFI') 
     AND [$GEXXX900_EXCLUDE_COMPANY_CRITERIA]
    !SXD  09/04/2007  Begin
     AND A.PAY_END_DT = $thrudate
     !AND A.PAY_END_DT = '12-MAY-2007' 
    !SXD  09/04/2007  End
  GROUP BY  A.DEPTID, A.PAY_END_DT
  having SUM( B.DEDUCT_CMPNY_FEE) != 0
  order by  A.DEPTID 
End-Select
End-Procedure


!***********************************************************************
! Inserts data into the temporary table
!***********************************************************************
Begin-Procedure Insert-Data
  #debugx show 'In Insert-Data'
Begin-SQL
Insert into [$temp_table] (
DEPTID,
PAY_END_DT,
DEDUCT_CMPNY_FEE)
values
(
 $deptid,
 &pay_end_dt,
 &deduct_cmpny_fee
 )
End-SQL
End-Procedure 


!***********************************************************************
! Perform SQL Commit
!***********************************************************************
Begin-Procedure Commit-Data
   #debugx show 'In Commit-Data'
Begin-SQL
commit
End-SQL
End-Procedure 


!***********************************************************************
! Selects data from the temporary table for printing
!***********************************************************************
Begin-Procedure Select-Data
   #debugx show 'In Select-Data'

   #debugx show 'Doing Open-File'
   do Open-File

Begin-Select
TMP.DEPTID			&tmp_deptid
TMP.PAY_END_DT			&tmp_pay_end_dt
SUM(TMP.DEDUCT_CMPNY_FEE)	&tmp_deduct_cmpny_fee


	move &tmp_deptid to $deptid
	let $deptid = '="' || edit($deptid,'0000') || '"'
	move &tmp_pay_end_dt to $pay_end_dt MM/DD/YYYY
	move &tmp_deduct_cmpny_fee to #deduct_cmpny_fee
	let #grand-total = #grand-total + #deduct_cmpny_fee
        #debugx show 'Doing Print Data'	
	do Print-Data

FROM [$temp_table]  TMP ! PS_GEXPY665 TMP
GROUP BY TMP.DEPTID, TMP.PAY_END_DT
ORDER BY TMP.DEPTID
End-Select
End-Procedure 


!***********************************************************************
! Prints Data
!***********************************************************************
Begin-Procedure Print-Data
        #debugx show 'In Print Data'
	#debugx show $deptid		
	!print $deptid		(+1,{#column1})
	!print $pay_end_dt	(+0,{#column2})
	#debugx show '#deduct_cmpny_fee ' #deduct_cmpny_fee
	!print #deduct_cmpny_fee (+0,{#column3}) edit 999.99
	move #deduct_cmpny_fee to $deduct_cmpny_fee  $999.99
	#debugx show '$deduct_cmpny_fee ' $deduct_cmpny_fee
	
	write 1 from $deptid:10
		     $sep:1
		     $pay_end_dt:12
		     $sep:1
		     $deduct_cmpny_fee:10
		     $sep:1
End-Procedure 


!***********************************************************************
! Opens Output File
!***********************************************************************
begin-procedure Open-File

 move $thrudate to $filedate MMDDYY
 
 let $filename1 = '\\corp.gianteagle.com\common\Finance\Corporate\Private\AR\Wsale\CHILD SUPPORT FEES REPORT\CSF' || $filedate || '.csv'
 ! let $filename1 = '/apps/hr/hrms90/hrdev90/outgoing/'|| $filedate || '.csv' !temporarily added for testing
! let $filename1 = 'c:\isdvdxs\CSF'|| $filedate || '.csv'
! let $filename1 = 'c:\isdvdxs\CSF'|| $filedate || '.csv'

 show $filename1
open $filename1 as 1 for-writing record=400

if #writestat != 0
   show 'Error Opening output file ' $filename1 ' Program terminating.'
   stop
end-if

	write 1 from 'GEXPY665':10
		     $sep:1
		     'Support Fee AR':16
		     $sep:1

	write 1 from 'DEPTID':10
		     $sep:1
		     'PAY_END_DT':12
		     $sep:1
		     'DEDUCT_CMPNY_FEE':10
		     $sep:1
		     'TYPE CSF':10
	     	     $sep:1
end-procedure 


!***********************************************************************
! Drops the temporary table
!***********************************************************************
Begin-Procedure Drop-Temp-Table
   #debugx show 'In Drop-Temp-Table'
Begin-SQL
DROP TABLE [$temp_table]
End-SQL
End-Procedure


#include 'stdapi.sqc'    !Process Scheduler Interface
#include 'reset.sqc'     !Reset Printer Procedure
#include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'  !Routines for date math
#include 'gexrnctl.sqc'  !Routine for Get-Run-Control
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#include 'gexxx900.sqc'  !Get Company from Run Control Page

