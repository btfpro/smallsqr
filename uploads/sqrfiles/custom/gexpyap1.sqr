!***********************************************************************
! GEXPYAP1:  This program populates GEX VOUCHER and DISTRIB table for  *
!            AP Interface for Genl Deduction                           *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *
!***********************************************************************
!  9.0 Upgrade    ISDVNPK   11/12/2007     INITIAL CREATION            *
!
!  9.0 GEX ISDVNPK 01/15/2008 Changed to fetch the overide DEPTID & Pay check COMPANY
!
!  9.0 GEX ISDVNPK 06/26/2008  Carried fwd from 8.3 Add two new dedcd '401JHL','401KJH'*
!  ISDVMXR 11/06/2009  S3 13492116 - added 3 new dedcd to allow them to be processed*
! GEXHR_848_E109327  09/22/2011       Kundan kumar Yeedibilli	       *
! Done the changes for deduction code to remove hard codes and get data *
! from run control
!***********************************************************************
!GEXPY_848_E109329 2011-12-12 --  Mel Abuyo
!Modify the 'While' condition to process all DEDCD from the Run Control List
!***********************************************************************

#include 'setenv.sqc' !Set environment

!***************************************************************************
begin-setup
!#include 'setup32a.sqc' PSR 08/09/02 8 Upgrade
#include 'ptpsl177.sqc'

  declare-report report-log
    Printer-Type=HPLASERJET
    layout=default
  end-declare
!GEXHR_848_E109327 09/22/2011 kundan kumar yeedibilli - Begin
 create-array name=checkdedcd  size=100	
    Field=dedcode:char
!GEXHR_848_E109327 09/22/2011 kundan kumar yeedibilli - End 
end-setup
!***************************************************************************

!***************************************************************************
begin-heading 8 for-reports=(report-log)
#debug9 show 'Begin-Heading'
move 'GEXPYAP1' to $ReportID
move 'Report Log' to $ReportTitle
#include 'stdhdg02.sqc'
  do Get-Department-Name
  do Get-Deduction-Name

  print ':'                 (3,8)

  print 'Pay End Date:'     (3,77)
  print $PayEndDt           (,+2)

  print 'DeptID:'           (4,1)
  print $DeptID             (,13)
  print $DeptName           (,+1)

  print 'Deduction Code:'   (4,77)
  print $Dedcd              (,+2)
  print $DeductionName      (,+2)

  print 'Message'           (+2,1)
  print '-' (+1,1,160) fill

end-heading
!***************************************************************************

!***************************************************************************
begin-report
#debug9 Show 'begin-report'
  do Init-DateTime
  do Init-Number
  do stdapi-init
  do Get-Calendar-Year-Id
  move 'GEXPYAP1' to $ReportID
  move 'Report Log' to $ReportTitle
  display $ReportTitle

  do Get-Current-DateTime
  let $orig_source = 'DED'
  let #error_Count = 0
  do Report
  ! Vendkxy, for testing
  do Commit-Transaction
  ! do Rollback-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  if #error_count = 0
     use-report report-log
     print 'NO ERRORS FOUND' (+1,1)
  end-if
  do stdapi-term
end-report
!***************************************************************************

!***************************************************************************
begin-procedure Report
#debug9 Show 'Report'
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  
  move 'N' to $Errorfound

  if $prcs_process_instance = ''
    do Ask-As-Of-Date
  else
    Do GEXXX922-Select-Parameters
    let $asofdate = $GEX_RC_PAY.ASOFDATE
    if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
      let $asofdate = $asoftoday
    end-if
  end-if
 
  do Get-Last-Confirmed-Pay
  do Format-DateTime($Pay_End_Dt, $PayEndDt, {DEFDATE}, '', '')
  do Getdedcodes		!GEXHR_848_E109327 09/22/2011 kundan kumar yeedibilli
  do Main-Process
  
end-procedure
!***************************************************************************


!***************************************************************************
Begin-Procedure Get-Last-Confirmed-Pay
#debug9 Show 'Get-Last-Confirmed-Pay'
Begin-Select
Max(pay_end_dt) &pay_end_dt

  Let $AsOfDate         = &pay_end_dt
  Let $pay_end_dt       = &pay_end_dt

  Show 'Last confirmed pay end date:  ' $pay_end_dt

  If Rtrim($pay_end_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  End-If

From   ps_pay_calendar
Where  pay_end_dt      <= $AsOfDate
!Where  pay_end_dt      <= '23-oct-2010' !vendkxy for testing
And    pay_confirm_run  = 'Y'
End-Select
End-Procedure
!***************************************************************************

!***************************************************************************
begin-procedure Main-Process
#debug9 Show 'Main-Process'
!***************************************************************************

  let $process_ap = 'Y'

begin-select ON-ERROR=SQL-Error-Found('Main-Process')
C1.COMPANY    ()  on-break  level=1
			   print=never
DECODE((LTRIM(OVJ.GEX_DEPTID_OVR, ' ')),'',PAYERN3.DEPTID ,OVJ.GEX_DEPTID_OVR) &PC1.DEPTID   ()  on-break  level=2
			   print=never
DE.DEDCD     ()  on-break  level=3
			   print=never
			   save=$prev_dedcd 
DE.PLAN_TYPE ()  on-break  level=4
			   print=never
			   after=after-dedcd-change
CC.CHECK_DT 			   
SUM(DE.DED_CUR) &DE.Ded_CUR

  move 'N' to $errorfound
  
  
  let $Company        = &C1.COMPANY
  let $DeptID         = &PC1.DEPTID
  let $PlanType       = &DE.PLAN_TYPE
  let $Dedcd          = &DE.DEDCD
  let $check_dt       = &CC.CHECK_DT
  
  let $ap_dedcd       = &de.dedcd 
    
       
  move &DE.Ded_CUR to #DedCUR
  add #dedCUR to #tot_dedCUR

FROM   ps_pay_check      C1,
       ps_pay_Calendar   cc,
       PS_PAY_NA_DED_LIAB  DE,
       PS_PAY_EARNINGS     PAYERN3, !  9.0 GEX ISDVNPK 01/15/2008
       PS_JOB             OVJ       !  9.0 GEX ISDVNPK 01/15/2008
WHERE  C1.PAY_END_DT     = $pay_end_dt
And    DE.COMPANY        = C1.COMPANY
And    DE.PAYGROUP       = C1.PAYGROUP
And    DE.PAY_END_DT     = C1.PAY_END_DT
And    DE.OFF_CYCLE      = C1.OFF_CYCLE
And    DE.PAGE_NUM       = C1.PAGE_NUM
And    DE.LINE_NUM       = C1.LINE_NUM
And    DE.SEPCHK         = C1.SEPCHK
And    cc.company        = c1.company
and    cc.paygroup       = c1.paygroup
and    cc.pay_end_dt     = c1.pay_end_Dt
!  9.0 GEX ISDVNPK 01/15/2008
AND   PAYERN3.COMPANY    = DE.COMPANY
AND   PAYERN3.PAYGROUP   = DE.PAYGROUP
AND   PAYERN3.PAY_END_DT = DE.PAY_END_DT
AND   PAYERN3.OFF_CYCLE  = DE.OFF_CYCLE
AND   PAYERN3.PAGE_NUM   = DE.PAGE_NUM
AND   PAYERN3.LINE_NUM   = DE.LINE_NUM
AND   PAYERN3.ADDL_NBR   = DE.ADDL_NBR
AND   PAYERN3.SEPCHK     = DE.SEPCHK
AND OVJ.EMPLID   = C1.Emplid
AND OVJ.EMPL_RCD = C1.Empl_Rcd
AND OVJ.EFFDT = (SELECT MAX(OVJ1.EFFDT) FROM PS_JOB OVJ1
      								WHERE OVJ1.EMPLID    = OVJ.EMPLID
												AND OVJ1.EMPL_RCD  = OVJ.EMPL_RCD
												AND OVJ1.EFFDT    <= $pay_end_dt)
AND OVJ.EFFSEQ = (SELECT MAX(OVJ2.EFFSEQ) FROM PS_JOB OVJ2
                      WHERE OVJ2.EMPLID    = OVJ.EMPLID
                        AND OVJ2.EMPL_RCD  = OVJ.EMPL_RCD
                        AND OVJ2.EFFDT     = OVJ.EFFDT)
!AND  C1.Emplid in ( '166447976','202625264') ! VENDKXY for testing                        
! 9.0 GEX ISDVNPK 01/15/2008
GROUP BY C1.COMPANY,
	 DECODE((LTRIM(OVJ.GEX_DEPTID_OVR, ' ')),'',PAYERN3.DEPTID ,OVJ.GEX_DEPTID_OVR),
	 DE.DEDCD,
	 DE.PLAN_TYPE,
	 CC.CHECK_DT 
ORDER BY C1.COMPANY,
	 DECODE((LTRIM(OVJ.GEX_DEPTID_OVR, ' ')),'',PAYERN3.DEPTID ,OVJ.GEX_DEPTID_OVR),
	 DE.DEDCD,
	 DE.PLAN_TYPE
	 
end-select
end-procedure
!***************************************************************************

!GEXHR_848_E109327 09/22/2011 kundan kumar yeedibilli - Begin
!***************************************************************************
begin-procedure Getdedcodes
  Let $OprID               = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID         = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_DEDCD_ROWS = 0
  
Begin-Select
  
GEX_RC_DEDCD.DEDCD

  Let $check_dedcd = &GEX_RC_DEDCD.DEDCD

  Add 1 To #GEX_RC_DEDCD_ROWS
  put $check_dedcd into checkdedcd(#GEX_RC_DEDCD_ROWS) dedcode

From PS_GEX_RC_DEDCD GEX_RC_DEDCD

Where GEX_RC_DEDCD.OPRID                = [$OprID]
And   GEX_RC_DEDCD.RUN_CNTL_ID          = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_DEDCD.DEDCD, ' ') != ' '

End-Select
end-procedure
!***************************************************************************
!GEXHR_848_E109327 09/22/2011 kundan kumar yeedibilli - End

!***************************************************************************
begin-procedure After-Dedcd-Change
#debug9 Show 'After-Dedcd-Change'
  If $plantype = '00' and
     #tot_dedCUR <> 0
     if substr($prev_dedcd,1,1) = '4'
     
!GEXHR_848_E109327 09/22/2011 kundan kumar yeedibilli - Begin    
        !evaluate $prev_dedcd
        !    when = '401KPB'
        !    when = '4CBTRA'
	!    when = '4MANUL'
	!    when = '401KCB'
	!    when = '401JHL'              !GEX NPK 06/26/2008 carried forward from 8.3 MXR 03/20/2008
	!    when = '401KJH'              !GEX NPK 06/26/2008 carried forward from 8.3 MXR 03/20/2008
	!    when = '4AGEDW'              ! MXR 11/06/2009  S3 13492116
	!    when = '4BBRUN'              ! MXR 11/06/2009  S3 13492116
	!    when = '4INGAE'              ! MXR 11/06/2009  S3 13492116 
	!    break
	!      Do Genl-Ded-Tbl			 
        !    when-other
	      		!Do Nothing
        !end-evaluate
        
	Let #mm = 1
!GEXPY_848_E109329 2011-12-12 --  Mel Abuyo --  BEGIN	
!	while #mm < #GEX_RC_DEDCD_ROWS
	while #mm <= #GEX_RC_DEDCD_ROWS
!GEXPY_848_E109329 2011-12-12 --  Mel Abuyo --  END

	get $check_dedcd1 from checkdedcd(#mm)
	
	!show '$prev_dedcd===' $prev_dedcd '   $check_dedcd1 =====' $check_dedcd1   !vendkxy testing
	
	if $prev_dedcd = $check_dedcd1  
		Do Genl-Ded-Tbl
		break
	end-if	
	
	add 1 to #mm	
	end-while 
   	
!GEXHR_848_E109327 09/22/2011 kundan kumar yeedibilli - End					
	   else
         if (substr($prev_dedcd,1,1) > '4' and rtrim($prev_dedcd,' ') <> 'SAVBON'  ) or
            (substr($prev_dedcd,1,1) < '4' )  
           Do Genl-Ded-Tbl
				 end-if
     end-if
  End-If
  move 0 to #tot_dedCUR
end-procedure
!***************************************************************************

!***************************************************************************
Begin-Procedure Genl-Ded-Tbl
#debug9 Show 'Genl-Ded-Tbl'
 move ' ' to $ap_frequency
Begin-Select
ap_vendor_id_10
address_seq_num
gex_ap_freq

  if rtrim(&AP_VENDOR_ID_10,' ') = ''
    use-report report-log
    add 1 to #error_count
    print 'AP Vendor Id is blank for Dedcd :' (+1,1)
    print $dedcd ()
    print '; No Voucher is created, please create it manually' ()
   else
    Do Deduction-Class

    Let $v_ap_vendor_id = &ap_vendor_id_10 || Substr(To_Char(&address_seq_num),1,3)
    Let $V_COMPANY      = $COMPANY   ! GEX ISDVNPK 01/15/2008
    Let $v_deptid       = $deptid
    Let $v_invoice_dt   = $pay_end_dt
    Let #v_gross_amt    = #tot_dedCUR
    Let $v_entered_dt   = $AsOfToday
    Let $v_account      = &GL_liability
    let $v_Dedcd        = $dedcd
    move &gex_ap_freq to $ap_frequency
   
     evaluate &gex_ap_freq
      when = 'W'
				do convert-to-dtu-date($pay_end_Dt,$friday_dtu)
				do dtu-add-days($friday_Dtu,6,$friday_dtu_dt)
				do convert-from-dtu-date($friday_dtu_dt,$v_due_dt)
      when = 'S'
        do convert-to-dtu-date($check_dt,$friday_dtu)
        let #date_string = substr($friday_dtu,9,2)
				if #date_string <= 15
 	  		 		let $friday_dtu_dt = substr($friday_dtu,1,8)||'15'
        	else
          	 do dtu-add-months($friday_dtu,1,$friday_dtu)                     
	  				 let $friday_dtu_dt = substr($friday_dtu,1,8)||'01'
        end-if
        do convert-from-dtu-date($friday_dtu_dt,$v_due_dt)
     when = 'M'
				do convert-to-dtu-date($check_dt,$check_Dt_dtu)
				do dtu-add-months($check_Dt_dtu,1,$due_dt)                     
				let $due_month_begin = substr($due_dt,1,8)||'07'
				do convert-from-dtu-date($due_month_begin,$v_due_dt)
     when = 'Q'
        do convert-to-dtu-date($CHECK_DT,$check_Dt)
        let #month_dtu = substr($check_dt,6,2)
        evaluate #month_dtu
            when <= 3
         			let $due_month_begin = substr($check_dt,1,5)||'04-07'
						break
            when <= 6
   						let $due_month_begin = substr($check_dt,1,5)||'07-07'
						break
            when <= 9
							let $due_month_begin = substr($check_dt,1,5)||'10-07'		
						break
            when-other
							do dtu-add-months($check_dt,4,$due_dt)
							let $due_month_begin = substr($due_dt,1,5)||'01-07'
        end-evaluate							
					do convert-from-dtu-date($due_month_begin,$v_due_dt)
    end-evaluate
   

    Do Create-AP-Voucher
     if $bu_found = 'N' and #V_gROSS_AMT <> 0
      use-report report-log
      add 1 to #error_Count
      print 'AP Voucher Creation failed:' (+1,1)
      print '$V_AP_VENDOR_ID ' (+1,5)
      print $V_AP_VENDOR_ID    ()
      print '$V_DEPTID '       (+1,5)
      print $V_DEPTID          ()
      print '$V_ACCOUNT '      (+1,5)
      print $V_ACCOUNT         ()
      print '#V_GROSS_AMT '    (+1,5) 
      print #V_GROSS_AMT       ()
      print '$V_ENTERED_DT '   (+1,5)
      print $V_ENTERED_DT      ()
      print '$V_INVOICE_DT '   (+1,5)
      print $V_INVOICE_DT      ()
      print '$V_DUE_DT '       (+1,5)
      print $V_DUE_DT          ()
      print '$V_DEDCD'         (+1,5)
      print $V_DEDCD           ()
    end-if
   let $V_AP_VENDOR_ID = ' '
   Let $V_COMPANY = ' ' ! GEX ISDVNPK 01/15/2008
   let $V_DEPTID = ' '
   let $V_INVOICE_DT = ' '
   let #GROSS_AMT = 0
   let $V_ENTERED_DT = ' '
   let $V_ACCOUNT = ' '
   let $V_DUE_DT = ' '
   let $v_dedcd = ' '
  end-if

From   ps_genl_ded_tbl
Where  dedcd         = $prev_dedcd
And    effdt         =
      (Select Max(effdt)
       From   ps_genl_ded_tbl
       Where  dedcd  = $prev_dedcd
       And    effdt <= $pay_end_dt)
And    rtrim(gex_ap_freq,' ') is not null
End-Select
End-Procedure
!***************************************************************************

!***************************************************************************
Begin-Procedure Deduction-Class
#debug9 Show 'Deduction-Class'
Begin-Select
GL_liability

From   ps_deduction_class dc
Where  plan_type        = $plantype
And    dedcd            = $dedcd
And    effdt            =
      (Select Max(effdt)
       From   ps_deduction_class
       Where  plan_type = $plantype
       And    dedcd     = $dedcd
       And    effdt    <= $pay_end_dt)
End-Select
End-Procedure
!***************************************************************************

!***************************************************************************
begin-procedure SQL-Error-Found($Proc_Name) 
#debug9 Show 'SQL-Error-Found'
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
end-procedure
!***************************************************************************


#include 'gexpyvhu.sqc'  !Process-Vouchers procedure
#include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'getactnm.sqc'  !Get-Acct-cd-descr procedure
#include 'getdednm.sqc'  !Get-Deduction-Name procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#include 'gexxx922.sqc'  !Get pay single row run control
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
