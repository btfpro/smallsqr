!***********************************************************************
!  GEXPYACT:  EMPLOYEES TAX DATA ONE TIME LOAD ACT32 RCF               *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 2011-2012 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPYACT:  Employees Tax Data One Time Load - Act32 RCF              *
!                                                                      *
! Narrative: This program will Load Employees Tax Data in              *
!            PeopleSoft Employee Tax Data Information Page             *
!            based on the information that Employees had               *
!            submitted for their Act 32 Resident Cert Form             *
!            for the State of PA.                                      *
!                                                                      *
! SQL Tables:GEX_ACT32_TBL                                             *
!            JOB                                                       *
!            FED_TAX_DATA                                              *
!            STATE_TAX_DATA                                            *
!            LOCAL_TAX_DATA                                            *
!            TAX_DISTRIB                                               *
!            TAX_DIST_EFFDT                                            *
!            TAX_LOCATION2                                             *
!                                                                      *
! Written by: Krish Balasubramanian  11/09/2011                        *
!                                                                      *
! Normally Run: One Time Process                                       *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!INITIALS        DATE           DESCRIPTION OF THE CHANGE              *
!***********************************************************************
!SB              11/09/2011     Initial Creation                       *
!SB              11/15/2011     Changes to Non-Resident and Tax        *
!                               Distribution Localities Logic.         *
!SB              11/15/2011     Exception Cases handling for employees *
!                               in Tax Location Codes 00072 or 00023.  *
!***********************************************************************

#include 'setenv.sqc'        !Set environment
#include 'setup02.sqc'       !Printer and page-size initialization

!***********************************************************************
begin-report
!***********************************************************************
  display 'begin-report'

  do Init-Report
  do Act32-Process-Main
 
  do Stdapi-Term             !stdapi.sqc
  display 'Successful end of report'
!***********************************************************************
end-report
!***********************************************************************

!***********************************************************************
begin-procedure Init-Report
!***********************************************************************

  move 'GEXPYACT' to $ReportID
  move 'One Time Employee Tax Data Load - Act32 RCF Form' to $ReportTitle
  do Stdapi-Init
  show $ReportID
  show $ReportTitle
  show ''

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Process-Main
!***********************************************************************

  do GEXXX922-Select-Parameters
  Let $Load-Date = $GEX_RC_PAY.ASOFDATE
  Let $AsOfDate = $GEX_RC_PAY.ASOFDATE

  Print 'RUN CONTROL INFORMATION FOR THIS PROCESS RUN'            (+5,1)
  Print 'Operator ID: '                                           (+2,5)
  Print $Prcs_OPRID                                               (0,+2)
  Print 'Run control ID: '                                        (+1,5)
  Print $PRCS_RUN_CNTL_ID                                         (0,+2)

  Print 'As Of Date :'                                            (+2,5)
  Print $AsOfDate                                                 (0,+2)
  Print 'Employee ID'                                             (+2,12)
  Print 'New Locality'                                            (0,+12)
  Print 'Effective Date'                                          (0,+14)
  Print 'Error Message'                                           (0,+40)
  do Act32-Select-Population
  Print 'Total Employees to Process: '                            (+2,1)  
  Print #total-employees-to-process                               (0,+7)
  Print 'Total Processed Employees: '                             (+2,1)
  Print #total-success                                            (0,+8)
  Print 'Total Employees in Error: '                              (+2,1)
  Print #total-errors                                             (0,+9)
  
!***********************************************************************
End-Procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Select-Population
!***********************************************************************
! This section selects all employees who have data in the Act32 RCF Form
! from the PS_GEX_ACT32_TBL Record.
!***********************************************************************

  do Act32-Initialize-Counters

begin-select on-error=SQL-Error
PA1.EMPLID
PA1.STATE
PA1.LOCALITY

  Let $Emplid = &PA1.EMPLID
  Let $State = &PA1.STATE
  Let $New-Locality = &PA1.LOCALITY
  Let $Locality-Load-Date = $Load-Date
  do Act32-Validate-Local-Tax-Data
  Let #total-employees-to-process = #total-employees-to-process + 1

FROM  PS_GEX_ACT32_TBL  PA1
Order By PA1.EMPLID
End-Select
!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Initialize-Counters
!***********************************************************************
! This section Initializes counters for Successfuly Processed and 
! Errored employees.
!***********************************************************************

  Let #total-employees-to-process = 0
  Let #total-errors = 0
  Let #total-success = 0

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Validate-Local-Tax-Data
!***********************************************************************
! This section validates that all PA Employees have a Locality defined
! Similarly if State is not PA, there is no Locality defined in the 
! Act 32 RCF Form.
!***********************************************************************

  Let $Validate-Local = 'N'

  if $State = 'PA' 
    if $New-Locality <> ' '
      Let $Validate-Local = 'Y'
    else
      Let $Validate-Local = 'N'
      Let $Error-Msg = 'State is PA and NO Locality found in RCF'
    end-if
  else
    if $New-Locality <> ' '
      Let $Validate-Local = 'N'
      Let $Error-Msg = 'State is ' || $State ||' and Locality IS found in RCF'
    else
      Let $Validate-Local = 'Y'
    end-if
  end-if  

  if $Validate-Local = 'Y'
    do Act32-Process-Emp-Tax-Data
  else 
    do Act32-Process-Error-Emp
    Let #total-errors = #total-errors + 1
  end-if 

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Process-Emp-Tax-Data
!***********************************************************************
! This section prepares the Record Fields that are required for load
! into the Fed, State, Local and Tax Distribution Pages.
! The Data is collected from PS_JOB record.
!***********************************************************************

  Let $Empl-Active = 'N'

begin-select on-error=SQL-Error
JOB1.EMPLID
JOB1.EMPL_RCD
JOB1.EFFDT
JOB1.EFFSEQ
JOB1.COMPANY
JOB1.TAX_LOCATION_CD

  Let $Empl-Active = 'Y'
    do Act32-Process-Fed-Tax-Data
  if $Fed-Data-Present = 'Y'
    do Act32-Process-State-Tax-Data

    Let #total-success = #total-success + 1

  else
    Let $Error-Msg = 'Employee Tax Data has Future Dated Rows / No Tax Data present'
    do Act32-Process-Error-Emp
    Let #total-errors = #total-errors + 1
  end-if

From PS_JOB JOB1
Where JOB1.EMPLID = $Emplid
    And JOB1.EFFDT = (Select 
                       MAX (JOB2.EFFDT) 
                       From PS_JOB JOB2
                       Where JOB2.EMPLID = JOB1.EMPLID 
                         And JOB2.EMPL_RCD = JOB1.EMPL_RCD 
                         And JOB2.EFFDT <= $Load-Date) 
                         And JOB1.EFFSEQ = ( 
                                 Select MAX(JOB3.EFFSEQ) 
                                   From PS_JOB JOB3 
                                   Where JOB3.EMPLID = JOB1.EMPLID 
                                     And JOB3.EMPL_RCD = JOB1.EMPL_RCD 
                                     And JOB3.EFFDT = JOB1.EFFDT) 
!    And JOB1.HR_STATUS in ('A','L','P','S')
Order By JOB1.EMPLID, JOB1.EMPL_RCD, JOB1.EFFDT, JOB1.EFFSEQ
End-Select


!  If $Empl-Active = 'N'
!      Let $Error-Msg = 'Employee currently NOT Active in Job'
!      do Act32-Process-Error-Emp
!      Let #total-errors = #total-errors + 1
!  End-if

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Process-Fed-Tax-Data
!***********************************************************************
! This section prepares the Record Fields that are required for load
! into the Fed Tax Data Record.
!***********************************************************************

        Let $Fed-Data-Present = 'N'

begin-select on-error=SQL-Error
FTD1.EMPLID
FTD1.COMPANY
FTD1.EFFDT
FTD1.SPECIAL_FWT_STATUS
FTD1.FWT_MAR_STATUS
FTD1.FWT_ALLOWANCES
FTD1.FWT_ADDL_AMT
FTD1.FWT_ADDL_PCT
FTD1.FUT_EXEMPT
FTD1.EIC_STATUS
FTD1.STATUTORY_EE
FTD1.DECEASED
FTD1.PENSION_PLAN
FTD1.LEGAL_REP
FTD1.DEFERRED_COMP
FTD1.USE_TOTAL_WAGE
FTD1.LAST_ACTION
FTD1.W4_PRCSS
FTD1.W5_PRCSS
FTD1.LOCK_IN_RECVD
FTD1.LOCK_IN_LIMIT
FTD1.LAST_UPDATE_DATE
FTD1.DATE_OF_ENTRY
FTD1.COUNTRY
FTD1.FORM_1001_RECD
FTD1.FORM_1001_SUBMT_DT
FTD1.FORM_1001_EXP_DT
FTD1.FORM_8233_RECD
FTD1.FORM_8233_SUBMT_DT
FTD1.FORM_8233_EXP_DT
FTD1.TAXPAYER_ID_NO
FTD1.TREATY_EXP_DT
FTD1.TREATY_ID
FTD1.FORM_1078_RECD
FTD1.FORM_1078_SUBMT_DT
FTD1.THIRDPARTY_SICKPAY
FTD1.W4_NAME_CHECK
FTD1.PY_FLAG_FOR_IRS
FTD1.PY_FLAG_FOR_IRS_DT
FTD1.CREATION_DT
FTD1.MARRIED_FILE_SINGL
FTD1.NRA_EXEMPT_WHRULE
FTD1.NQDC_W2_RPTG

    Let $Fed-Data-Present = 'Y'
  if $Load-Date = &FTD1.EFFDT
    Let $Fed-Data-Present = 'N'
  else
        do Act32-Insert-Fed-Tax-Data
  end-if

From PS_FED_TAX_DATA FTD1
Where FTD1.EMPLID = $Emplid
            And FTD1.COMPANY = &JOB1.COMPANY
            And FTD1.EFFDT = (Select MAX(FTD2.EFFDT) 
                                From PS_FED_TAX_DATA FTD2 
                                  Where FTD1.EMPLID = FTD2.EMPLID 
                                    And FTD1.EFFDT <= $Load-Date)
Order By FTD1.EMPLID, FTD1.COMPANY
End-Select

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Insert-Fed-Tax-Data
!***********************************************************************
! This section Inserts the Record Fields that are pulled out from 
! Act32-Process-Fed-Tax-Data.
!***********************************************************************

let $sql-statement = 'gexpyact.sqr,Act32-Insert-Fed-Tax-Data,FED_TAX_DATA,Insert'
begin-SQL on-error=SQL-Error
INSERT INTO PS_FED_TAX_DATA
         (EMPLID, 
          COMPANY, 
          EFFDT, 
          SPECIAL_FWT_STATUS, 
          FWT_MAR_STATUS, 
          FWT_ALLOWANCES,
          FWT_ADDL_AMT, 
          FWT_ADDL_PCT, 
          FUT_EXEMPT, 
          EIC_STATUS, 
          STATUTORY_EE, 
          DECEASED,
          PENSION_PLAN, 
          LEGAL_REP, 
          DEFERRED_COMP, 
          USE_TOTAL_WAGE, 
          LAST_ACTION,
          W4_PRCSS, 
          W5_PRCSS, 
          LOCK_IN_RECVD, 
          LOCK_IN_LIMIT, 
          LAST_UPDATE_DATE, 
          DATE_OF_ENTRY, 
          COUNTRY, 
          FORM_1001_RECD, 
          FORM_1001_SUBMT_DT, 
          FORM_1001_EXP_DT, 
          FORM_8233_RECD, 
          FORM_8233_SUBMT_DT, 
          FORM_8233_EXP_DT,
          TAXPAYER_ID_NO, 
          TREATY_EXP_DT, 
          TREATY_ID, 
          FORM_1078_RECD, 
          FORM_1078_SUBMT_DT,
          THIRDPARTY_SICKPAY, 
          W4_NAME_CHECK, 
          PY_FLAG_FOR_IRS, 
          PY_FLAG_FOR_IRS_DT,
          CREATION_DT, 
          MARRIED_FILE_SINGL, 
          NRA_EXEMPT_WHRULE, 
          NQDC_W2_RPTG)
VALUES   ($Emplid, 
          &FTD1.COMPANY, 
          $Load-Date, 
          &FTD1.SPECIAL_FWT_STATUS, 
          &FTD1.FWT_MAR_STATUS, 
          &FTD1.FWT_ALLOWANCES, 
          &FTD1.FWT_ADDL_AMT, 
          &FTD1.FWT_ADDL_PCT, 
          &FTD1.FUT_EXEMPT, 
          &FTD1.EIC_STATUS, 
          &FTD1.STATUTORY_EE, 
          &FTD1.DECEASED, 
          &FTD1.PENSION_PLAN, 
          &FTD1.LEGAL_REP, 
          &FTD1.DEFERRED_COMP, 
          &FTD1.USE_TOTAL_WAGE, 
          'C', 
          &FTD1.W4_PRCSS, 
          &FTD1.W5_PRCSS, 
          &FTD1.LOCK_IN_RECVD, 
          &FTD1.LOCK_IN_LIMIT, 
          $AsOfToday, 
          $AsOfToday, 
          &FTD1.COUNTRY, 
          &FTD1.FORM_1001_RECD, 
          &FTD1.FORM_1001_SUBMT_DT, 
          &FTD1.FORM_1001_EXP_DT, 
          &FTD1.FORM_8233_RECD, 
          &FTD1.FORM_8233_SUBMT_DT, 
          &FTD1.FORM_8233_EXP_DT,
          &FTD1.TAXPAYER_ID_NO, 
          &FTD1.TREATY_EXP_DT, 
          &FTD1.TREATY_ID, 
          &FTD1.FORM_1078_RECD, 
          &FTD1.FORM_1078_SUBMT_DT,
          &FTD1.THIRDPARTY_SICKPAY, 
          &FTD1.W4_NAME_CHECK, 
          &FTD1.PY_FLAG_FOR_IRS, 
          &FTD1.PY_FLAG_FOR_IRS_DT,
          &FTD1.CREATION_DT, 
          &FTD1.MARRIED_FILE_SINGL, 
          &FTD1.NRA_EXEMPT_WHRULE, 
          &FTD1.NQDC_W2_RPTG
         )
end-SQL

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Process-State-Tax-Data
!***********************************************************************
! This section prepares the Record Fields that are required for load
! into the State Tax Data Record.
! This section also triggers the main chain of Procedure calls for load
! into the Local Tax Data Record and the Tax Distribution Records.
!***********************************************************************

begin-select on-error=SQL-Error 
STD1.EMPLID
STD1.COMPANY
STD1.EFFDT
STD1.STATE
STD1.RESIDENT
STD1.NON_RES_DECLARED
STD1.SPECIAL_SWT_STATUS
STD1.SWT_MAR_STATUS
STD1.SWT_ALLOWANCES
STD1.SWT_ADDL_ALLOWNCES
STD1.WAGE_PLAN_CD
STD1.ANNL_EXEMPTION_AMT
STD1.PERCENT_OF_FWT
STD1.SWT_ADDL_AMT
STD1.SWT_ADDL_PCT
STD1.SDI_STATUS
STD1.SUT_EXEMPT
STD1.UI_JURISDICTION
STD1.ADDL_AMT_ADJ
STD1.WT4A_FILED
STD1.LOCK_IN_RECVD
STD1.LOCK_IN_LIMIT
STD1.RETIREMENT_PLAN
STD1.EIC_STATUS_ST
STD1.HLTH_COV_IND 
STD1.CREATION_DT 
STD1.PNA_FLI_STATUS
STD1.RES_ADDL_ALLOW

  do Act32-Insert-State-Tax-Data

  do Act32-Process-Local-Tax-Data
  
  if $Resident-Locality <> 'Y' and $New-Locality <> $Base-Locality
      and $New-Locality <> $Locality-Link and &STD1.STATE = 'PA'
      and $New-Locality <> ' '
     do Act32-Process-Local-Tax-Data-Default
  end-if

From PS_STATE_TAX_DATA STD1
Where STD1.EMPLID = $Emplid
    And STD1.COMPANY = &FTD1.COMPANY
    And STD1.EFFDT = (SELECT 
                      MAX(STD2.EFFDT) 
                      FROM PS_STATE_TAX_DATA STD2
                        WHERE STD1.EMPLID = STD2.EMPLID 
                          AND STD1.COMPANY = STD2.COMPANY
                          AND STD2.EFFDT <= $Load-Date)
End-Select

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Insert-State-Tax-Data
!***********************************************************************
! This section Inserts the Record Fields that are pulled out from 
! Act32-Process-State-Tax-Data.
!***********************************************************************

let $sql-statement = 'gexpyact.sqr,Act32-Insert-State-Tax-Data,STATE_TAX_DATA,Insert'
begin-SQL on-error=SQL-Error
INSERT INTO PS_STATE_TAX_DATA
         (EMPLID, 
          COMPANY, 
          EFFDT, 
          STATE,  
          RESIDENT, 
          NON_RES_DECLARED, 
          SPECIAL_SWT_STATUS,
          SWT_MAR_STATUS, 
          SWT_ALLOWANCES, 
          SWT_ADDL_ALLOWNCES, 
          WAGE_PLAN_CD, 
          ANNL_EXEMPTION_AMT,
          PERCENT_OF_FWT, 
          SWT_ADDL_AMT, 
          SWT_ADDL_PCT, 
          SDI_STATUS, 
          SUT_EXEMPT, 
          UI_JURISDICTION, 
          ADDL_AMT_ADJ, 
          WT4A_FILED, 
          LOCK_IN_RECVD, 
          LOCK_IN_LIMIT, 
          RETIREMENT_PLAN, 
          EIC_STATUS_ST,
          HLTH_COV_IND, 
          CREATION_DT, 
          PNA_FLI_STATUS, 
          RES_ADDL_ALLOW)
VALUES (  $Emplid, 
          &STD1.COMPANY, 
          $Load-Date, 
          &STD1.STATE, 
          &STD1.RESIDENT, 
          &STD1.NON_RES_DECLARED, 
          &STD1.SPECIAL_SWT_STATUS,
          &STD1.SWT_MAR_STATUS, 
          &STD1.SWT_ALLOWANCES, 
          &STD1.SWT_ADDL_ALLOWNCES, 
          &STD1.WAGE_PLAN_CD, 
          &STD1.ANNL_EXEMPTION_AMT,
          &STD1.PERCENT_OF_FWT, 
          &STD1.SWT_ADDL_AMT, 
          &STD1.SWT_ADDL_PCT, 
          &STD1.SDI_STATUS, 
          &STD1.SUT_EXEMPT, 
          &STD1.UI_JURISDICTION, 
          &STD1.ADDL_AMT_ADJ, 
          &STD1.WT4A_FILED, 
          &STD1.LOCK_IN_RECVD, 
          &STD1.LOCK_IN_LIMIT, 
          &STD1.RETIREMENT_PLAN, 
          &STD1.EIC_STATUS_ST,
          &STD1.HLTH_COV_IND, 
          $AsOfToday, 
          &STD1.PNA_FLI_STATUS, 
          &STD1.RES_ADDL_ALLOW)
end-SQL

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Process-Local-Tax-Data
!***********************************************************************
! This section prepares the Record Fields that are required for load
! into the Local Tax Data Record.
! This section also calls the procedure that checks for the Tax 
! Distribution Record Data that is present as is and ensures that the 
! correct data is either maintained or a new insert is done for the 
! distribution percentages.
!***********************************************************************

  Let $Resident-Locality = 'N'

begin-select on-error=SQL-Error
LTD1.EMPLID
LTD1.COMPANY
LTD1.EFFDT
LTD1.STATE
LTD1.LOCALITY
LTD1.RESIDENT
LTD1.LWT_ALLOWANCES
LTD1.LWT_AMT
LTD1.LWT_PCT
LTD1.LOCALITY_LINK
LTD1.SPECIAL_LWT_STATUS
LTD1.LWT_MAR_STATUS
LTD1.CREATION_DT

  if &LTD1.STATE <> 'PA'
     do Act32-Insert-Local-Tax-Data-Not-PA
  else
      if substr(&LTD1.LOCALITY, 1, 1) = 'O'
        Let $New-Tax-Locality = &LTD1.LOCALITY
        do Act32-Process-Locality-Code
        do Act32-Insert-Local-Tax-Data-Loc-Link
        do Act32-Check-Tax-Distrib
      else
        if &LTD1.RESIDENT = 'Y' 
          and $Resident-Locality = 'N'
            Let $New-Tax-Locality = &LTD1.LOCALITY
            do Act32-Insert-Local-Income-Tax-Cd
            do Act32-Check-Tax-Distrib
        else
          Let $New-Tax-Locality = &LTD1.LOCALITY
          do Act32-Process-Locality-Code-I
          do Act32-Check-Tax-Distrib
        end-if
      end-if
  End-if

From PS_LOCAL_TAX_DATA LTD1
Where LTD1.EMPLID = $Emplid
    And LTD1.STATE = &STD1.STATE
    And LTD1.COMPANY = &STD1.COMPANY
    And LTD1.EFFDT = (Select 
               MAX(LTD2.EFFDT) 
                 From PS_LOCAL_TAX_DATA LTD2 
                  Where LTD1.EMPLID = LTD2.EMPLID 
                    And LTD1.COMPANY = LTD2.COMPANY
                    And LTD2.EFFDT <= $Load-Date)
Order By LTD1.STATE
End-Select

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Process-Locality-Code
!***********************************************************************
! This section determines the new Locality Link for the PA Locality from
! the Tax Location Code Record.
!***********************************************************************

  Let $Locality-Link = ''
  Let $Base-Locality = ''

if $New-Tax-Locality = 'O201355C' or $New-Tax-Locality = 'O022612C1'
begin-select on-error=SQL-Error
TLL1.TAX_LOCATION_CD
TLL1.STATE
TLL1.LOCALITY
TLL1.LOCALITY_LINK

    Let $Locality-Link = &TLL1.LOCALITY_LINK
    Let $Base-Locality = &TLL1.LOCALITY

From PS_TAX_LOCATION2 TLL1
Where TLL1.TAX_LOCATION_CD = &JOB1.TAX_LOCATION_CD
    And TLL1.STATE = &LTD1.STATE
    And TLL1.LOCALITY = $New-Tax-Locality
End-Select
else
begin-select on-error=SQL-Error
TLL.TAX_LOCATION_CD
TLL.STATE
TLL.LOCALITY
TLL.LOCALITY_LINK

    Let $Locality-Link = &TLL.LOCALITY_LINK
    Let $Base-Locality = &TLL.LOCALITY

From PS_TAX_LOCATION2 TLL
Where TLL.TAX_LOCATION_CD = &JOB1.TAX_LOCATION_CD
    And TLL.STATE = &LTD1.STATE
    And TLL.LOCALITY_LINK = $New-Tax-Locality
End-Select
end-if

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Process-Locality-Code-I
!***********************************************************************
! This section determines the new Locality Link for the PA Locality from
! the Tax Location Code Record.
!***********************************************************************

  Let $Locality-Link = ''
  Let $Base-Locality = ''

begin-select on-error=SQL-Error
TLLI.TAX_LOCATION_CD
TLLI.STATE
TLLI.LOCALITY
TLLI.LOCALITY_LINK

    Let $Locality-Link = &TLLI.LOCALITY_LINK
    Let $Base-Locality = &TLLI.LOCALITY

From PS_TAX_LOCATION2 TLLI
Where TLLI.TAX_LOCATION_CD = &JOB1.TAX_LOCATION_CD
    And TLLI.STATE = &LTD1.STATE
    And TLLI.LOCALITY_LINK <> ' '
End-Select

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Insert-Local-Tax-Data-Not-PA
!***********************************************************************
! This section Inserts the Record Fields that are pulled out from 
! Act32-Process-Local-Tax-Data where the State is not PA.
!***********************************************************************

  if &LTD1.STATE <> 'PA'
    let $sql-statement = 'gexpyact.sqr,Act32-Insert-Local-Tax-Data-Not-PA,LOCAL_TAX_DATA,Insert'
    let $Locality-Link = &LTD1.LOCALITY_LINK
        if $Locality-Link = ''
           Let $Locality-Link = ' '
        end-if
  else
    let $sql-statement = 'gexpyact.sqr,Act32-Insert-Local-Tax-Data-Not-I%,LOCAL_TAX_DATA,Insert'
        if $Locality-Link = ''
           Let $Locality-Link = ' '
        end-if
  end-if

  if &LTD1.STATE <> 'PA'
begin-SQL on-error=SQL-Error
INSERT INTO PS_LOCAL_TAX_DATA
         (EMPLID,
          COMPANY,
          EFFDT,
          STATE,
          LOCALITY,
          RESIDENT,
          LWT_ALLOWANCES,
          LWT_AMT,
          LWT_PCT,
          LOCALITY_LINK,
          SPECIAL_LWT_STATUS,
          LWT_MAR_STATUS,
          CREATION_DT)
values   ($Emplid,
          &STD1.COMPANY,
          $Load-Date,
          &STD1.STATE,
          &LTD1.LOCALITY,
          &LTD1.RESIDENT,
          &LTD1.LWT_ALLOWANCES,
          &LTD1.LWT_AMT,
          &LTD1.LWT_PCT,
          $Locality-Link,
          &LTD1.SPECIAL_LWT_STATUS,
          &LTD1.LWT_MAR_STATUS,
          $AsOfToday)
End-SQL
  end-if

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Insert-Local-Tax-Data-Loc-Link
!***********************************************************************
! This section Inserts the Record Fields that are pulled out from 
! Act32-Process-Local-Tax-Data for the Locality which is identified from
! the Tax Location Code Setup Table and for the Locality that is not 
! the Income Tax Locality Code for the State of PA.
!***********************************************************************

  if &LTD1.LOCALITY = $Locality-Link 
    let $sql-statement = 'gexpyact.sqr,Act32-Insert-Local-Tax-Data-Loc-Link,Locality-Link,LOCAL_TAX_DATA,Insert'
    let $Locality-Link = &LTD1.LOCALITY_LINK
  end-if
if $New-Tax-Locality = 'O201355C' or $New-Tax-Locality = 'O022612C1'
if $Locality-Link = $New-Locality
  Let $Resident-Loc = 'Y'
else
  Let $Resident-Loc = 'N'
end-if

begin-SQL on-error=SQL-Error
INSERT INTO PS_LOCAL_TAX_DATA
         (EMPLID,
          COMPANY,
          EFFDT,
          STATE,
          LOCALITY,
          RESIDENT,
          LWT_ALLOWANCES,
          LWT_AMT,
          LWT_PCT,
          LOCALITY_LINK,
          SPECIAL_LWT_STATUS,
          LWT_MAR_STATUS,
          CREATION_DT)
values   ($Emplid,
          &STD1.COMPANY,
          $Load-Date,
          &STD1.STATE,
          $Locality-Link,
          $Resident-Loc,
          &LTD1.LWT_ALLOWANCES,
          &LTD1.LWT_AMT,
          &LTD1.LWT_PCT,
          ' ',
          &LTD1.SPECIAL_LWT_STATUS,
          &LTD1.LWT_MAR_STATUS,
          $AsOfToday)
End-SQL
else
if $Base-Locality <> ''
begin-SQL on-error=SQL-Error
INSERT INTO PS_LOCAL_TAX_DATA
         (EMPLID,
          COMPANY,
          EFFDT,
          STATE,
          LOCALITY,
          RESIDENT,
          LWT_ALLOWANCES,
          LWT_AMT,
          LWT_PCT,
          LOCALITY_LINK,
          SPECIAL_LWT_STATUS,
          LWT_MAR_STATUS,
          CREATION_DT)
values   ($Emplid,
          &STD1.COMPANY,
          $Load-Date,
          &STD1.STATE,
          $Base-Locality,
          'N',
          &LTD1.LWT_ALLOWANCES,
          &LTD1.LWT_AMT,
          &LTD1.LWT_PCT,
          &LTD1.LOCALITY,
          &LTD1.SPECIAL_LWT_STATUS,
          &LTD1.LWT_MAR_STATUS,
          $AsOfToday)
End-SQL
end-if
end-if
if &LTD1.LOCALITY = 'O201355C' or &LTD1.LOCALITY = 'O022612C1'
begin-SQL on-error=SQL-Error
INSERT INTO PS_LOCAL_TAX_DATA
         (EMPLID,
          COMPANY,
          EFFDT,
          STATE,
          LOCALITY,
          RESIDENT,
          LWT_ALLOWANCES,
          LWT_AMT,
          LWT_PCT,
          LOCALITY_LINK,
          SPECIAL_LWT_STATUS,
          LWT_MAR_STATUS,
          CREATION_DT)
values   ($Emplid,
          &STD1.COMPANY,
          $Load-Date,
          &STD1.STATE,
          &LTD1.LOCALITY,
          'N',
          &LTD1.LWT_ALLOWANCES,
          &LTD1.LWT_AMT,
          &LTD1.LWT_PCT,
          $Locality-Link,
          &LTD1.SPECIAL_LWT_STATUS,
          &LTD1.LWT_MAR_STATUS,
          $AsOfToday)
End-SQL
else
begin-SQL on-error=SQL-Error
INSERT INTO PS_LOCAL_TAX_DATA
         (EMPLID,
          COMPANY,
          EFFDT,
          STATE,
          LOCALITY,
          RESIDENT,
          LWT_ALLOWANCES,
          LWT_AMT,
          LWT_PCT,
          LOCALITY_LINK,
          SPECIAL_LWT_STATUS,
          LWT_MAR_STATUS,
          CREATION_DT)
values   ($Emplid,
          &STD1.COMPANY,
          $Load-Date,
          &STD1.STATE,
          &LTD1.LOCALITY,
          'N',
          &LTD1.LWT_ALLOWANCES,
          &LTD1.LWT_AMT,
          &LTD1.LWT_PCT,
          &LTD1.LOCALITY_LINK,
          &LTD1.SPECIAL_LWT_STATUS,
          &LTD1.LWT_MAR_STATUS,
          $AsOfToday)
End-SQL

end-if

!***********************************************************************
end-procedure
!***********************************************************************


!***********************************************************************
begin-procedure Act32-Insert-Local-Income-Tax-Cd
!***********************************************************************
! This section Inserts the Record Fields that are pulled out from 
! Act32-Process-Local-Tax-Data for the Resident Income Tax Code from the 
! Act32 RCF Form submitted by the Employee who also happens to have an 
! existing Resident Locality on the Local Tax Data.
!***********************************************************************

  let $sql-statement = 'gexpyact.sqr,Act32-Insert-Local-Income-Tax-Cd,LOCAL_TAX_DATA,Insert'

        if $Locality-Link = ''
           Let $Locality-Link = ' '
        end-if
begin-SQL on-error=SQL-Error
INSERT INTO PS_LOCAL_TAX_DATA
         (EMPLID,
          COMPANY,
          EFFDT,
          STATE,
          LOCALITY,
          RESIDENT,
          LWT_ALLOWANCES,
          LWT_AMT,
          LWT_PCT,
          LOCALITY_LINK,
          SPECIAL_LWT_STATUS,
          LWT_MAR_STATUS,
          CREATION_DT)
values   ($Emplid,
          &STD1.COMPANY,
          $Load-Date,
          &STD1.STATE,
          $New-Locality,
          'Y',
          &LTD1.LWT_ALLOWANCES,
          &LTD1.LWT_AMT,
          &LTD1.LWT_PCT,
          ' ',
          &LTD1.SPECIAL_LWT_STATUS,
          &LTD1.LWT_MAR_STATUS,
          $AsOfToday)
End-SQL

          Let $Resident-Locality = 'Y'

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Process-Local-Tax-Data-Default
!***********************************************************************
! This section Inserts the Record Fields that are pulled out from 
! Act32-Process-Local-Tax-Data for the Resident Locality in case if the 
! Employee does not have a Resident Locality and all the information has
! to be defaulted based on the information provided in the Act 32 RCF 
! Form.
!***********************************************************************

  let $sql-statement = 'gexpyact.sqr,Act32-Process-Local-Tax-Data-Default,LOCAL_TAX_DATA,Insert'

        if $Locality-Link = ''
           Let $Locality-Link = ' '
        end-if

begin-SQL on-error=SQL-Error
INSERT INTO PS_LOCAL_TAX_DATA
         (EMPLID,
          COMPANY,
          EFFDT,
          STATE,
          LOCALITY,
          RESIDENT,
          LWT_ALLOWANCES,
          LWT_AMT,
          LWT_PCT,
          LOCALITY_LINK,
          SPECIAL_LWT_STATUS,
          LWT_MAR_STATUS,
          CREATION_DT)
values   ($Emplid,
          &STD1.COMPANY,
          $Load-Date,
          'PA',
          $New-Locality,
          'Y',
          0,
          0,
          0,
          ' ',
          'N',
          'N',
          $AsOfToday)
End-SQL

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Check-Tax-Distrib
!***********************************************************************
! This section prepares for the Tax Distribution Inserts based on the 
! Locality Link, Resident Locality or Distribution Percentage that are
! existing in the current data for the employee.
!***********************************************************************

  Let $No-Tax-Distrib-Reqd = 'N'

begin-select on-error=SQL-Error
TDCHK.EMPLID
TDCHK.EMPL_RCD
TDCHK.EFFDT
TDCHK.STATE
TDCHK.LOCALITY
TDCHK.DIST_PCT

  if &TDCHK.DIST_PCT = 100 and substr(&LTD1.LOCALITY,1,1) = 'O'
    Let $No-Tax-Distrib-Reqd = 'Y'
  else
    do Act32-Process-Tax-Distrib-Effdt
    if &JOB1.TAX_LOCATION_CD = '00072' or &JOB1.TAX_LOCATION_CD = '00023'
      if &TDCHK.DIST_PCT = 100
        if &LTD1.RESIDENT = 'N'
           Let $No-Tax-Distrib-Reqd = 'N'
           Let $Tax-Dist-Locality = $New-Tax-Locality
           Let #Dist-Pct = &TDCHK.DIST_PCT
           do Act32-Process-Tax-Distribution
        end-if
      end-if
    else
      if &TDCHK.DIST_PCT = 100 and (substr(&LTD1.LOCALITY,1,1) = 'I')
        if &LTD1.RESIDENT = 'N'
           Let $No-Tax-Distrib-Reqd = 'N'
           Let $Tax-Dist-Locality = $Base-Locality
           Let #Dist-Pct = &TDCHK.DIST_PCT
           do Act32-Process-Tax-Distribution
        else
           Let $No-Tax-Distrib-Reqd = 'N'
           Let $Tax-Dist-Locality = $New-Locality
           Let #Dist-Pct = &TDCHK.DIST_PCT
           do Act32-Process-Tax-Distribution
        end-if
      else
        if &TDCHK.DIST_PCT < 100 and substr(&LTD1.LOCALITY,1,1) = 'O' 
          Let $No-Tax-Distrib-Reqd = 'N'
          Let $Tax-Dist-Locality = &LTD1.LOCALITY
          Let #Dist-Pct = &TDCHK.DIST_PCT
          do Act32-Process-Tax-Distribution
          do Act32-Process-Tax-Distribution-Link
        end-if
      end-if
    end-if
  end-if

From PS_TAX_DISTRIB TDCHK
Where TDCHK.EMPLID = &LTD1.EMPLID
    And TDCHK.STATE = &LTD1.STATE
    And TDCHK.LOCALITY = &LTD1.LOCALITY
    And TDCHK.EFFDT = (Select MAX(TDCHK1.EFFDT)
                         From PS_TAX_DISTRIB TDCHK1
                         where TDCHK.EMPLID = TDCHK1.EMPLID
                           and TDCHK.EMPL_RCD = TDCHK1.EMPL_RCD
                           and TDCHK.STATE = TDCHK1.STATE
                           and TDCHK.LOCALITY = TDCHK1.LOCALITY
                           and TDCHK1.EFFDT <= $Load-Date)
End-Select

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Process-Tax-Distrib-Effdt
!***********************************************************************
! This section prepares the Record Fields that are required for load
! into the Tax Distribution Page.
!***********************************************************************

begin-select on-error=SQL-Error
TDE.EMPLID
TDE.EMPL_RCD
TDE.EFFDT
TDE.COUNTRY
TDE.INSERT_PRE_FILLED
TDE.UNIQUE_DIST

  do Act32-Insert-Tax-Distrib-Effdt

From PS_TAX_DIST_EFFDT TDE
Where TDE.EMPLID = &JOB1.EMPLID
    And TDE.EMPL_RCD = &JOB1.EMPL_RCD
    And TDE.EFFDT = (SELECT 
                MAX(TDE1.EFFDT) 
              FROM PS_TAX_DIST_EFFDT TDE1 
               WHERE TDE1.EMPLID = TDE.EMPLID
                         AND TDE1.EMPL_RCD = TDE.EMPL_RCD
                         AND TDE1.EFFDT <= $Load-Date)
End-Select

!***********************************************************************
end-procedure
!***********************************************************************


!***********************************************************************
begin-procedure Act32-Insert-Tax-Distrib-Effdt
!***********************************************************************
! This section Inserts the Record Fields that are pulled out from 
! Act32-Process-Tax-Distrib-Effdt.
!***********************************************************************

  let $sql-statement = 'gexpyact.sqr,Act32-Insert-Tax-Distrib-Effdt,TAX_DIST_EFFDT,Insert'

if &TDE.EFFDT <> $Load-Date
begin-SQL on-error=SQL-Error
INSERT INTO PS_TAX_DIST_EFFDT
         (EMPLID,
          EMPL_RCD,
          EFFDT,
          COUNTRY,
          INSERT_PRE_FILLED,
          UNIQUE_DIST)
values   (&TDE.EMPLID,
          &TDE.EMPL_RCD,
          $Load-Date,
          'USA',
          &TDE.INSERT_PRE_FILLED,
          &TDE.UNIQUE_DIST)
End-SQL
End-if

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Process-Tax-Distribution
!***********************************************************************
! This section prepares the Record Fields that are required for load
! into the Tax Distribution Page.
!***********************************************************************

begin-select on-error=SQL-Error
TDIST.EMPLID
TDIST.EMPL_RCD
TDIST.EFFDT
TDIST.STATE
TDIST.LOCALITY
TDIST.DIST_PCT

  do Act32-Insert-Tax-Distribution

From PS_TAX_DISTRIB TDIST
Where TDIST.EMPLID = &TDE.EMPLID
    And TDIST.EMPL_RCD = &TDE.EMPL_RCD
    And TDIST.EFFDT = &TDE.EFFDT
End-Select

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Insert-Tax-Distribution
!***********************************************************************
! This section Inserts the Record Fields that are pulled out from 
! Act32-Process-Tax-Distribution.
!***********************************************************************

  let $sql-statement = 'gexpyact.sqr,Act32-Insert-Tax-Distribution,TAX_DISTRIB,Insert'

if $Tax-Dist-Locality <> ''

begin-SQL on-error=SQL-Error
  INSERT INTO PS_TAX_DISTRIB
         (EMPLID,
          EMPL_RCD,
          EFFDT,
          STATE,
          LOCALITY,
          DIST_PCT)
  values (&TDE.EMPLID,
          &TDE.EMPL_RCD,
          $Load-Date,
          &TDIST.STATE,
          $Tax-Dist-Locality,
          #Dist-Pct)
End-SQL

End-if

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Process-Tax-Distribution-Link
!***********************************************************************
! This section Inserts the Record Fields that are pulled out from 
! Act32-Process-Tax-Distribution.
! This insert is specific to the Locality Link from the Tax Location
! Setup Record which has a distribution percentage for the employee.
!***********************************************************************

  let $sql-statement = 'gexpyact.sqr,Act32-Insert-Tax-Distrib-Link,TAX_DISTRIB,Insert'

  Let #Dist-Pct = 100 - #Dist-Pct

if $New-Tax-Locality <> ''

begin-SQL on-error=SQL-Error
  INSERT INTO PS_TAX_DISTRIB
         (EMPLID,
          EMPL_RCD,
          EFFDT,
          STATE,
          LOCALITY,
          DIST_PCT)
  values (&TDE.EMPLID,
          &TDE.EMPL_RCD,
          $Load-Date,
          &LTD1.STATE,
          $New-Tax-Locality,
          #Dist-Pct)
End-SQL

End-if

!***********************************************************************
end-procedure
!***********************************************************************

!***********************************************************************
begin-procedure Act32-Process-Error-Emp
!***********************************************************************
! This section prints the employees in error with basic decription of 
! the error type and employee information, for those who are caught as 
! exceptions during the processing of the one time load.
!***********************************************************************

  Print $Emplid                            (+1,12)  
  if $New-Locality <> ' '
  Print $New-Locality                      (0,+14)
  else
  Print $New-Locality                      (0,+19)
  end-if
  Print $Load-Date                         (0,+20)
  Print $Error-Msg                         (0,+41)

!***********************************************************************
end-procedure
!***********************************************************************

#include 'gexxx922.sqc'  !Read GEXXX922-Select-Parameters procedure for As Of Date
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'stdapi.sqc'    !Routines to Update Run Status
