
!***************************************************************************************
! GEXTRNG:            Traning Report	                               * 
!                                                                                      *
!***************************************************************************************
!                                                                                      *
!               Confidentiality Information:                                           *
!                                                                                      *
! This module is the confidential and proprietary information of                       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted                 *
! in any form, by any means, in whole or in part, nor is it to be used                 *
! for any purpose other than that for which it is expressly provided                   *
! without the written permission of Giant Eagle.                                       *
!                                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved                         *
!                                                                                      *
!***************************************************************************************
!                                                                                      *        
!       				
!											*
!***************************************************************************************
!                       
!****************************************************************************************

#include 'setenv.sqc'    !set environment
#include 'setup32.sqc'   !printer and page-size initialization




!**************************************************************************************************************************
!        REPORT
!**************************************************************************************************************************
begin-Report
! Processing RunControl Parameters

 Do Init-DateTime           !datetime.sqc
 Do Init-Number             !number.sqc
 Do Get-Current-DateTime    !curdttim.sqc
 Do Stdapi-Init             !stdapi.sqc
 Do getinput
 Do deletedata
 Do getcourse1 
 Do getcourse2
 Do getcourse3
 Do getcourse4
 Do getcourse5
 Do getcourse6
 Do getcourse7   
 Do Stdapi-Term             !stdapi.sqc
end-Report

!*********************************************************************

begin-procedure getinput
  show 'get input'
begin-select
EMPLID_TO1 
EMPLID_TO2 
EMPLID_TO3 
EMPLID_TO4 
EMPLID_TO5 
EMPLID_TO6 
EMPLID_TO7

   move &EMPLID_TO1  to $EMPLID_TO1 
   move  &EMPLID_TO2 to $EMPLID_TO2 
   move  &EMPLID_TO3 to $EMPLID_TO3 
   move  &EMPLID_TO4 to $EMPLID_TO4 
   move  &EMPLID_TO5 to $EMPLID_TO5 
   move  &EMPLID_TO6 to $EMPLID_TO6 
   move  &EMPLID_TO7 to $EMPLID_TO7 
FROM PS_GEX_TRN_CMP_CRS 
WHERE YEAR = '2010' 
      AND EFFDT = ( 
      SELECT MAX(A.EFFDT) 
      FROM PS_GEX_TRN_CMP_CRS A 
      WHERE YEAR = A.YEAR 
      AND A.EFFDT <= SYSDATE)
end-select   
end-procedure 


!*********************************************************************

begin-procedure getcourse1
  show 'get course1'
begin-select  
A.DEPTID 
ROUND((COUNT(B.EMPLID)/COUNT(A.EMPLID))*100 ,0)  &cnt
              let #count=&cnt
              move &A.DEPTID to $A.DEPTID      
              do execsql1      

FROM PS_JOB A 
  ,PS_TRAINING B 
 WHERE A.EMPLID = B.EMPLID(+) 
   AND B.COURSE(+)= $EMPLID_TO1 
   AND A.EFFDT = ( 
 SELECT MAX(TJOB1.EFFDT) 
  FROM PS_JOB TJOB1 
 WHERE A.EMPLID = TJOB1.EMPLID 
   AND A.EMPL_rCD = TJOB1.EMPL_rCD 
   AND TJOB1.EFFDT <=SYSDATE) 
   AND A.EFFSEQ = ( 
 SELECT MAX(TJOB2.EFFSEQ) 
  FROM PS_JOB TJOB2 
 WHERE A.EMPLID = TJOB2.EMPLID 
   AND A.EMPL_rCD = TJOB2.EMPL_rCD 
   AND A.EFFDT = TJOB2.EFFDT) 
   AND A.ACCT_CD = '008' 
   AND A.EMPL_STATUS ='A' 
  GROUP BY A.DEPTID 
  HAVING COUNT(A.EMPLID)>=1 
  ORDER BY A.DEPTID       
end-select
end-procedure


!*********************************************************************

begin-procedure execsql1

begin-sql
INSERT INTO PS_GEX_TRN_REC VALUES($A.DEPTID,#count,0 
  ,0 
  ,0 
  ,0 
  ,0 
  ,0)
end-sql

end-procedure

!*********************************************************************

begin-procedure getcourse2
  show 'get course2'
begin-select  
A.DEPTID &A.DEPTID2
ROUND((COUNT(B.EMPLID)/COUNT(A.EMPLID))*100 ,0)  &cnt2
              let #count2=&cnt2
              move &A.DEPTID2 to $DEPTID2      
              do execsql2      

FROM PS_JOB A 
  ,PS_TRAINING B 
 WHERE A.EMPLID = B.EMPLID(+) 
   AND B.COURSE(+)= $EMPLID_TO2 
   AND A.EFFDT = ( 
 SELECT MAX(TJOB1.EFFDT) 
  FROM PS_JOB TJOB1 
 WHERE A.EMPLID = TJOB1.EMPLID 
   AND A.EMPL_rCD = TJOB1.EMPL_rCD 
   AND TJOB1.EFFDT <=SYSDATE) 
   AND A.EFFSEQ = ( 
 SELECT MAX(TJOB2.EFFSEQ) 
  FROM PS_JOB TJOB2 
 WHERE A.EMPLID = TJOB2.EMPLID 
   AND A.EMPL_rCD = TJOB2.EMPL_rCD 
   AND A.EFFDT = TJOB2.EFFDT) 
   AND A.ACCT_CD = '008' 
   AND A.EMPL_STATUS ='A' 
  GROUP BY A.DEPTID 
  HAVING COUNT(A.EMPLID)>=1 
  ORDER BY A.DEPTID       
end-select
end-procedure


!*********************************************************************

begin-procedure execsql2

begin-sql
UPDATE PS_GEX_TRN_REC 
  SET ABSENCE_CAL_POS_02 = #count2 
 WHERE DEPTID= $DEPTID2
end-sql

end-procedure

!*********************************************************************

!*********************************************************************

begin-procedure getcourse3
  show 'get course3'
begin-select  
A.DEPTID    &A.DEPTID3
ROUND((COUNT(B.EMPLID)/COUNT(A.EMPLID))*100 ,0)  &cnt3
              let #count3=&cnt3
              move &A.DEPTID3 to $DEPTID3      
              do execsql3      

FROM PS_JOB A 
  ,PS_TRAINING B 
 WHERE A.EMPLID = B.EMPLID(+) 
   AND B.COURSE(+)= $EMPLID_TO3 
   AND A.EFFDT = ( 
 SELECT MAX(TJOB1.EFFDT) 
  FROM PS_JOB TJOB1 
 WHERE A.EMPLID = TJOB1.EMPLID 
   AND A.EMPL_rCD = TJOB1.EMPL_rCD 
   AND TJOB1.EFFDT <=SYSDATE) 
   AND A.EFFSEQ = ( 
 SELECT MAX(TJOB2.EFFSEQ) 
  FROM PS_JOB TJOB2 
 WHERE A.EMPLID = TJOB2.EMPLID 
   AND A.EMPL_rCD = TJOB2.EMPL_rCD 
   AND A.EFFDT = TJOB2.EFFDT) 
   AND A.ACCT_CD = '008' 
   AND A.EMPL_STATUS ='A' 
  GROUP BY A.DEPTID 
  HAVING COUNT(A.EMPLID)>=1 
  ORDER BY A.DEPTID       
end-select
end-procedure


!*********************************************************************

begin-procedure execsql3

begin-sql
UPDATE PS_GEX_TRN_REC 
  SET ABSENCE_CAL_POS_03 = #count3 
 WHERE DEPTID= $DEPTID3
end-sql

end-procedure

!*********************************************************************


!*********************************************************************

begin-procedure getcourse4
  show 'get course4'
begin-select  
A.DEPTID     &A.DEPTID4
ROUND((COUNT(B.EMPLID)/COUNT(A.EMPLID))*100 ,0)  &cnt4
              let #count4=&cnt4
              move &A.DEPTID4 to $DEPTID4      
              do execsql4      

FROM PS_JOB A 
  ,PS_TRAINING B 
 WHERE A.EMPLID = B.EMPLID(+) 
   AND B.COURSE(+)= $EMPLID_TO4 
   AND A.EFFDT = ( 
 SELECT MAX(TJOB1.EFFDT) 
  FROM PS_JOB TJOB1 
 WHERE A.EMPLID = TJOB1.EMPLID 
   AND A.EMPL_rCD = TJOB1.EMPL_rCD 
   AND TJOB1.EFFDT <=SYSDATE) 
   AND A.EFFSEQ = ( 
 SELECT MAX(TJOB2.EFFSEQ) 
  FROM PS_JOB TJOB2 
 WHERE A.EMPLID = TJOB2.EMPLID 
   AND A.EMPL_rCD = TJOB2.EMPL_rCD 
   AND A.EFFDT = TJOB2.EFFDT) 
   AND A.ACCT_CD = '008' 
   AND A.EMPL_STATUS ='A' 
  GROUP BY A.DEPTID 
  HAVING COUNT(A.EMPLID)>=1 
  ORDER BY A.DEPTID       
end-select
end-procedure


!*********************************************************************

begin-procedure execsql4

begin-sql
UPDATE PS_GEX_TRN_REC 
  SET ABSENCE_CAL_POS_04 = #count4 
 WHERE DEPTID= $DEPTID4
end-sql

end-procedure

!*********************************************************************


!*********************************************************************

begin-procedure getcourse5
  show 'get course5'
begin-select  
A.DEPTID         &A.DEPTID5
ROUND((COUNT(B.EMPLID)/COUNT(A.EMPLID))*100 ,0)  &cnt5
              let #count5=&cnt5
              move &A.DEPTID5 to $DEPTID5      
              do execsql5      

FROM PS_JOB A 
  ,PS_TRAINING B 
 WHERE A.EMPLID = B.EMPLID(+) 
   AND B.COURSE(+)= $EMPLID_TO5 
   AND A.EFFDT = ( 
 SELECT MAX(TJOB1.EFFDT) 
  FROM PS_JOB TJOB1 
 WHERE A.EMPLID = TJOB1.EMPLID 
   AND A.EMPL_rCD = TJOB1.EMPL_rCD 
   AND TJOB1.EFFDT <=SYSDATE) 
   AND A.EFFSEQ = ( 
 SELECT MAX(TJOB2.EFFSEQ) 
  FROM PS_JOB TJOB2 
 WHERE A.EMPLID = TJOB2.EMPLID 
   AND A.EMPL_rCD = TJOB2.EMPL_rCD 
   AND A.EFFDT = TJOB2.EFFDT) 
   AND A.ACCT_CD = '008' 
   AND A.EMPL_STATUS ='A' 
  GROUP BY A.DEPTID 
  HAVING COUNT(A.EMPLID)>=1 
  ORDER BY A.DEPTID       
end-select
end-procedure


!*********************************************************************

begin-procedure execsql5

begin-sql
UPDATE PS_GEX_TRN_REC 
  SET ABSENCE_CAL_POS_05 = #count5 
 WHERE DEPTID= $DEPTID5
end-sql

end-procedure

!*********************************************************************


!*********************************************************************

begin-procedure getcourse6
  show 'get course6'
begin-select  
A.DEPTID              &A.DEPTID6
ROUND((COUNT(B.EMPLID)/COUNT(A.EMPLID))*100 ,0)  &cnt6
              let #count6=&cnt6
              move &A.DEPTID6 to $DEPTID6      
              do execsql6      

FROM PS_JOB A 
  ,PS_TRAINING B 
 WHERE A.EMPLID = B.EMPLID(+) 
   AND B.COURSE(+)= $EMPLID_TO6 
   AND A.EFFDT = ( 
 SELECT MAX(TJOB1.EFFDT) 
  FROM PS_JOB TJOB1 
 WHERE A.EMPLID = TJOB1.EMPLID 
   AND A.EMPL_rCD = TJOB1.EMPL_rCD 
   AND TJOB1.EFFDT <=SYSDATE) 
   AND A.EFFSEQ = ( 
 SELECT MAX(TJOB2.EFFSEQ) 
  FROM PS_JOB TJOB2 
 WHERE A.EMPLID = TJOB2.EMPLID 
   AND A.EMPL_rCD = TJOB2.EMPL_rCD 
   AND A.EFFDT = TJOB2.EFFDT) 
   AND A.ACCT_CD = '008' 
   AND A.EMPL_STATUS ='A' 
  GROUP BY A.DEPTID 
  HAVING COUNT(A.EMPLID)>=1 
  ORDER BY A.DEPTID       
end-select
end-procedure


!*********************************************************************

begin-procedure execsql6

begin-sql
UPDATE PS_GEX_TRN_REC 
  SET ABSENCE_CAL_POS_06 = #count6 
 WHERE DEPTID= $DEPTID6
end-sql

end-procedure

!*********************************************************************


!*********************************************************************

begin-procedure getcourse7
  show 'get course7'
begin-select  
A.DEPTID                     &A.DEPTID7
ROUND((COUNT(B.EMPLID)/COUNT(A.EMPLID))*100 ,0)  &cnt7
              let #count7=&cnt7
              move &A.DEPTID7 to $DEPTID7      
              do execsql7      

FROM PS_JOB A 
  ,PS_TRAINING B 
 WHERE A.EMPLID = B.EMPLID(+) 
   AND B.COURSE(+)= $EMPLID_TO7 
   AND A.EFFDT = ( 
 SELECT MAX(TJOB1.EFFDT) 
  FROM PS_JOB TJOB1 
 WHERE A.EMPLID = TJOB1.EMPLID 
   AND A.EMPL_rCD = TJOB1.EMPL_rCD 
   AND TJOB1.EFFDT <=SYSDATE) 
   AND A.EFFSEQ = ( 
 SELECT MAX(TJOB2.EFFSEQ) 
  FROM PS_JOB TJOB2 
 WHERE A.EMPLID = TJOB2.EMPLID 
   AND A.EMPL_rCD = TJOB2.EMPL_rCD 
   AND A.EFFDT = TJOB2.EFFDT) 
   AND A.ACCT_CD = '008' 
   AND A.EMPL_STATUS ='A' 
  GROUP BY A.DEPTID 
  HAVING COUNT(A.EMPLID)>=1 
  ORDER BY A.DEPTID       
end-select
end-procedure


!*********************************************************************

begin-procedure execsql7

begin-sql
UPDATE PS_GEX_TRN_REC 
  SET ABSENCE_CAL_POS_07 = #count7 
 WHERE DEPTID= $DEPTID7
end-sql

end-procedure

!*********************************************************************



begin-procedure deletedata

begin-sql
delete  from PS_GEX_TRN_REC 
  
end-sql

end-procedure

!*********************************************************************
#include 'stdapi.sqc'
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#include 'gexrnctl.sqc'  !for Run-Cntrl-Parameters

