!***********************************************************************
! GEXPY609:  LOW INCOME REPORT - WEEKLY EARNINGS                       *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY609:             LOW INCOME REPORT - WEEKLY EARNINGS            *
!                                                                      *
! Narrative:            This program produces a report and a disk file.*
!                       It lists Company, dept, acct_cd, emplid, name, *
!                       orig_hire_dt, full_part_time, empl_status,     *
!                       action, action_dt, empl_type, hourly_rt,       *
!                       current productive hours and current employee  *
!                       unemployment wages. At present productive hours*
!                       are set to 40 hours. At a later date, a        *
!                       decision will be made whether to use a special *
!                       accumulator or to sum up in the program.       *
!                       The disk file is sent to Dennis Pasparage      *
!                       (vendor for workers Comp. 271-6905 or 271-6903)*
!                                                                      *
! #Debugx Used:    	#debug9 paragraph trace                        *
!		      	#debug8 key variable values                    *
!		      	#debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           PAY_EARNINGS                                   *
!                       PAY_OTH_EARNS                                  *
!                       PAY_CHECK                                      *
!                       PAY_TAX                                        *
!                       PERSONAL_DATA                                  *
!                       JOB                                            *
!                                                                      *
! Written by:           Joe Besagar                                    *
!                                                                      *
! Normally run:         Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Company Division Code                        *
!                         Company                                      *
!                         Company/Paygroup                             *
!                         Deptid                                       *
!                         Acctcd                                       *
!                         Empl_Status                                  *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS     DATE           DESCRIPTION OF THE CHANGE               *
!***********************************************************************
!  JNB          01/22/1998     INITIAL CREATION                        *
!  JNB          04/10/1998     ADDED RUN CONTROL TABLE                 *
!  SXK          09/08/1998     Added OUTFILE variable                  *
!  SXK          12/14/1998     If pay end date is not entered,         *
!                               gets latest confirmed pay end dt       *
!  JNB          01/22/1999     Modified source after interface         *
!                               validation, changes hilighted by       *
!                               Debbie Roenigk                         *
!  JNB          02/05/1999     Changed the action date to effdt        *
!  JDH          03/16/1999     Removed outer join between pay_earnings *
!                               and pay_oth_earns and made a separate  *
!                               select for pay_oth_earns.              *
!  JNB          05/12/1999     Changed the sort order as requested by  *
!                              Dennis Pasparage.                       *  
!  NYS          08/20/2007     Upgrade 9.0 changes                     *
!                              modified references of ORIG_HIRE_DT     *
! KXY           07/22/2008     Added Code for Earn code 173
!***********************************************************************

!selection criteria
#define #x000_col_selection_criteria_a 	 02
#define #x000_col_selection_criteria_b   05

#define #x000_col_fullpart  		 92 !86
#define #x000_col_rate  		145
#define #x000_col_cur   		155
#define #x000_col_gross  		166

#define #x000_col_company		 01
#define #x000_col_dept   		 10
#define #x000_col_emp#  		 17
#define #x000_col_name  		 28
#define #x000_col_acctcd                 60
#define #x000_col_hire  		 77
#define #x000_col_date  		 77
#define #x000_col_time  		 94
#define #x000_col_status  		105 !97
! JNB 02/05/1999 Changed action date to effdt
#define #x000_col_effdt                 115  
#define #x000_col_date1  		116 
#define #x000_col_action  		129
#define #x000_col_type  		138
#define #x000_col_salary  		145
#define #x000_col_hrswkd  		155
#define #x000_col_wages  		166

 
#include 'setenv.sqc'   !Set environment
#Include 'setup02.sqc'  !Printer and page-size initialization


begin-heading 8
#debug9 show 'begin-heading'
  #Include 'stdhdg01.sqc'

  Let #x000_temp_out = 'Sorted by ' || $x000_order_by
  print $x000_temp_out   (3,) center

  print 'ACCT'           (+3,{#x000_col_acctcd})
  print 'FULL/PART'      (0,{#x000_col_fullpart})
  print '  RATE/'        (0,{#x000_col_rate})
  print ' CURRENT'       (0,{#x000_col_cur})
  print '    GROSS'      (0,{#x000_col_wages})

  print 'COMPANY'        (+1,{#x000_col_company})
  print 'DEPT'           (0,{#x000_col_dept})
  print 'EMP#'           (0,{#x000_col_emp#})
  print 'EMPLOYEE NAME'  (0,{#x000_col_name})
  print 'CODE'           (0,{#x000_col_acctcd})
  print ' HIRE DATE'     (0,{#x000_col_hire})
  print 'TIME'           (0,{#x000_col_time})
  print 'STATUS'         (0,{#x000_col_status})
  print '   EFFDT'       (0,{#x000_col_effdt})
  print 'ACTION'         (0,{#x000_col_action})
  print 'TYPE'           (0,{#x000_col_type})
  print ' SALARY'        (0,{#x000_col_salary})
  print ' HRS-WKD'       (0,{#x000_col_hrswkd})
  print '    WAGES'      (0,{#x000_col_wages})

  print '-' (+1,1,174) fill           
end-heading


begin-report
#debug9 show 'begin-report'
! JNB 01/22/1999
  ! DO ALTER-SESSION              ! upgrade 9.0 changes                       
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do stdapi-init
  do p010-Init-Variables
  do p100-Get-Employees-Data
  do stdapi-term
  do reset
  show 'Successful end of report'
end-report


begin-procedure P010-Init-Variables
#debug9 show 'P010-Init-Variables'
  let $x000_new_page_flag = 'N'
  
  let $ReportID    = 'GEXPY609'
  let $ReportTitle = 'LOW INCOME REPORT - WEEKLY EARNINGS'
  let $Country     = 'USA'

  show '$ReportID= '    $ReportID
  show '$ReportTitle= ' $ReportTitle 
  show '$ReportDate='   $ReportDate
  show '$ReportTime='   $ReportTime

  Do GEXXX951-Select-Oracle-Instance
  
  Let $GEXXX900_Company_Alias  = 'JOB.COMPANY'
  Let $GEXXX901_Company_Alias  = 'JOB.COMPANY' 
  Let $GEXXX901_Paygroup_Alias = 'JOB.PAYGROUP'   
  Let $GEXXX902_Deptid_Alias   = 'JOB.DEPTID'
  Let $GEXXX903_Emp_Stat_Alias = 'JOB.EMPL_STATUS'  
  Let $GEXXX907_Div_CD_Alias   = 'GDT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias  = 'JOB.ACCT_CD'  
                         
  if $Prcs_Process_Instance = ''
    Do GEXXX950-Input-Parameters
  else

    Do GEXXX922-Select-Parameters
    Do GEXXX900-Select-Company-Parameters 
    Do GEXXX901-Select-Company-Paygroup-Parameters    
    Do GEXXX902-Select-Deptid-Parameters 
    Do GEXXX903-Select-Emp-Stat-Parameters          
    Do GEXXX907-Select-Div-CD-Parameters
    Do GEXXX909-Select-Acct-CD-Parameters

    let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
    if rtrim($X000_WHERE_SELECT_ASOFDATE,' ') = ''
      let $X000_WHERE_SELECT_ASOFDATE = $AsOfToday
    end-if
  end-if  

  Do select-pay-calendar        

!SXK 12/14/1998 Begin
      
  do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')

!  let $X000_ORDER_BY = 'TX.COMPANY, TX.PAYGROUP ,TX.PAY_END_DT, CK.DEPTID,CK.EMPLID'
!  JNB 05/12/1999
let $X000_ORDER_BY = 'TX.COMPANY, PR.NAME'

  show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA                =' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  show '$GEXXX900_INCLUDE_COMPANY_CRITERIA               =' $GEXXX900_INCLUDE_COMPANY_CRITERIA
  show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA      =' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA   
  show '$GEXXX902_INCLUDE_DEPTID_CRITERIA                =' $GEXXX902_INCLUDE_DEPTID_CRITERIA
  show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA              =' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
  show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA               =' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA         
  show '$X000_WHERE_SELECT_ASOFDATE                    =' $X000_WHERE_SELECT_ASOFDATE 
 
  print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
  print '$Prcs_OPRID          ='                              (+1,{#x000_col_selection_criteria_b})
  print $Prcs_OPRID                                           (0,+2)
  print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
  print $PRCS_RUN_CNTL_ID                                     (0,+2)

  print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,{#x000_col_selection_criteria_a})
  print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA 		(0,+2)
  print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA            (0,+2)
  print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA   (0,+2)
  print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)
  print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA           (0,+2)
  print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA            (0,+2)

  print '$X000_WHERE_SELECT_ASOFDATE                        ='   (+1,{#x000_col_selection_criteria_b})
  print $X000_WHERE_SELECT_ASOFDATE                           (0,+2)
 
  print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,{#x000_col_selection_criteria_a})
  print '$X000_ORDER_BY                                      ='   (+1,{#x000_col_selection_criteria_b})
  print $X000_ORDER_BY 	(0,+2)

  let #page-count = 0
  NEW-PAGE
end-procedure


begin-procedure p100-Get-Employees-Data
#debug9 show 'p100-Get-Employees-Data'
  let $FileName = '{OUTFILE}'||'gexpy609.dat'

  open $FileName as 1 for-writing record=130 status=#filestat

  if #filestat < 0
   display 'File Open error occured;  Cannot proceed'
   goto Report-Exit
  end-if  
        
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  date-time () MM/DD/YYYY &curr_date
  display '&curr_date'  noline
  display &curr_date

  move &curr_date to $curr_date

  display '$curr_date'  noline
  display $curr_date
  do format-datetime($curr_date,$curr_Date_dbf_1,{DEFMDY},'','native')
  display $curr_Date_dbf_1
  move 'N' to $Errorfound

  do P115-process-employee-data

  if $sev-error = 'Y'
    goto report-exit
  end-if
  
Report-Exit:

  print 'Total Transactions=' (+2,1)
  do Format-Number(#InputTran, $out, '99999')
  print $out ()
  
  close 1
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded

end-procedure


begin-procedure Select-pay-calendar
#debug9 Show 'Select-pay-calendar'

  let $found = 'N'

begin-select on-error=P900-sql-error-found('Select-Pay-Calendar')
cl.company  
cl.paygroup
cl.pay_end_dt
 
  let $found = 'Y'
  move &cl.pay_end_dt to $pay_end_dt
 
From   ps_pay_calendar cl

Where  cl.pay_end_dt          =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  pay_end_dt     <= $X000_WHERE_SELECT_ASOFDATE
       And    pay_confirm_run = 'Y')
And    cl.pay_confirm_run     = 'Y' 
End-Select

  if $found = 'N'
    display 'No pay end date is confirmed as of ' noline
    display $X000_WHERE_SELECT_ASOFDATE
    stop
  end-if
End-Procedure  
                             

Begin-Procedure P115-process-employee-data
#debug9 Show 'p115-process-employee-data'

  let $x100_Get_Employees_Data_Flag = 'N'
 
Begin-Select ON-ERROR=P900-SQL-Error-Found('p115-Process-employee-data')
JOB.COMPANY
JOB.PAYGROUP             
JOB.DEPTID
JOB.EMPLID 
JOB.EMPL_RCD
PR.NAME 
! PR.ORIG_HIRE_DT       ! upgrade 9.0 changes
OVW.ORIG_HIRE_DT        ! upgrade 9.0 changes
JOB.ACCT_CD
JOB.FULL_PART_TIME
JOB.EMPL_STATUS
JOB.ACTION
JOB.EFFDT
JOB.EMPL_TYPE
JOB.HOURLY_RT
TX1.COMPANY
TX1.PAYGROUP
TX1.PAY_END_DT
TX1.OFF_CYCLE
TX1.PAGE_NUM
TX1.LINE_NUM
SUM(TX1.TXGRS_CUR)  &TX.TXGRS_CUR

  let $x100_Get_Employees_Data_Flag = 'Y'

  move &job.emplid    to $emplid
  move &JOB.hourly_rt to #hourly_rt  
  move &tx.txgrs_cur  to #txgrs_cur

  Do pay-earnings
  Do P800-print-fields   
  Do P820-create-record

From   PS_GEX_DEPT_TBL   GDT,
       PS_PERSONAL_DATA  PR,
       PS_JOB            JOB,
       PS_PAY_CHECK      CK1,
       PS_PAY_TAX        TX1,
       PS_ORIG_HIRE_VW   OVW      ! upgrade 9.0 changes

Where  ck1.emplid          = job.emplid
And    ck1.empl_rcd       = job.empl_rcd 

And    ck1.pay_end_dt      = $pay_end_dt

And    ck1.company         = tx1.company
And    ck1.paygroup        = tx1.paygroup
And    ck1.pay_end_dt      = tx1.pay_end_dt 
And    ck1.off_cycle       = tx1.off_cycle
And    ck1.page_num           = tx1.page_num
And    ck1.line_num           = tx1.line_num
And    ck1.sepchk          = tx1.sepchk 

And    tx1.tax_class       = 'V'

And    JOB.EMPLID          = PR.EMPLID

And    JOB.EFFDT           =
      (SELECT MAX(EFFDT)
       From   PS_JOB
       Where  EMPLID       = JOB.EMPLID 
       And    EMPL_RCD    = JOB.EMPL_RCD
       And    EFFDT       <= $pay_end_dt)

And    JOB.EFFSEQ          =
      (Select Max(EFFSEQ)
       From   PS_JOB
       Where  EMPLID       = JOB.EMPLID
       And    EMPL_RCD    = JOB.EMPL_RCD
       And    EFFDT        = JOB.EFFDT)

And    JOB.DEPTID          = GDT.DEPTID 

And    GDT.EFFDT           =
      (Select Max(EFFDT)
       From   PS_GEX_DEPT_TBL
       Where  DEPTID       = GDT.DEPTID
       And    EFFDT       <= $pay_end_dt)

And    GDT.SEQUENCE_NUMBER =
      (Select Max(SEQUENCE_NUMBER)
       From   PS_GEX_DEPT_TBL
       Where  DEPTID       = GDT.DEPTID
       And    EFFDT        = GDT.EFFDT)
And    PR.EMPLID           = OVW.EMPLID    ! upgrade 9.0 changes
And    OVW.PER_ORG         = 'EMP'         ! upgrade 9.0 changes

And   [$GEXXX900_INCLUDE_COMPANY_CRITERIA] 
And   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
And   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
And   [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
And   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
And   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]

Group By JOB.COMPANY,
         JOB.PAYGROUP,             
         JOB.DEPTID,
         JOB.EMPLID,
         JOB.EMPL_RCD,
         PR.NAME, 
         ! PR.ORIG_HIRE_DT,     ! upgrade 9.0 changes
         OVW.ORIG_HIRE_DT,      ! upgrade 9.0 changes
         JOB.ACCT_CD,
         JOB.FULL_PART_TIME,
         JOB.EMPL_STATUS,
         JOB.ACTION,
         JOB.EFFDT,
         JOB.EMPL_TYPE,
         JOB.HOURLY_RT,
         TX1.COMPANY,
         TX1.PAYGROUP,
         TX1.PAY_END_DT,
         TX1.OFF_CYCLE,
         TX1.PAGE_NUM,
         TX1.LINE_NUM

Order By JOB.COMPANY,
!         JOB.PAYGROUP,   JNB 05/12/1999
!         JOB.DEPTID,     JNB 05/12/1999
!         JOB.EMPLID      JNB 05/12/1999
         PR.NAME

End-Select

  if $x100_Get_Employees_Data_Flag = 'N'
    print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) CENTER
  end-if

End-Procedure


begin-procedure P800-print-fields
#debug9 show 'P800-print-fields'
! JNB 02/05/1999 changed action date to effdt
  print &job.company         (+1,{#x000_col_company})
  print $emplid              (0,{#x000_col_emp#}) 
  print &pr.name             (0,{#x000_col_name},30)
 ! print &pr.orig_hire_dt     (0,{#x000_col_hire})      ! upgrade 9.0 changes
  print &ovw.orig_hire_dt     (0,{#x000_col_hire})      ! upgrade 9.0 changes
  print &job.deptid          (0,{#x000_col_dept})
  print &JOB.acct_cd         (0,{#x000_col_acctcd})
  print &JOB.full_part_time  (0,96)
  print &JOB.empl_status     (0,107)
  print &JOB.action          (0,130)
  print &JOB.effdt           (0,{#x000_col_effdt})
  print &JOB.empl_type       (0,139)
  print &JOB.hourly_rt       (0,143)  edit 9,990.999
  print #total_hrs           (0,{#x000_col_hrswkd}) edit 9,990.99
  print #txgrs_Cur           (0,{#x000_col_wages})  edit 99,990.99
end-procedure 


Begin-Procedure pay-earnings
#debug9 Show 'pay-earnings'

  let #total_hrs = 0

Begin-Select 
x.addl_nbr
x.reg_hrs
x.reg_earn_hrs
x.ot_hrs

  Add &x.reg_hrs      To #total_hrs
  Add &x.reg_earn_hrs To #total_hrs
  Add &x.ot_hrs       To #total_hrs
  Do pay-oth-earns

From   ps_pay_earnings x

Where  x.company    = &tx1.company
And    x.paygroup   = &tx1.paygroup
And    x.pay_end_dt = &tx1.pay_end_dt
And    x.off_cycle  = &tx1.off_cycle
And    x.page_num      = &tx1.page_num
And    x.line_num      = &tx1.line_num
End-Select
End-Procedure 


Begin-Procedure pay-oth-earns
#debug9 Show 'pay-oth-earns'

Begin-Select 
y.oth_hrs

  Add &y.oth_hrs To #total_hrs

From ps_pay_oth_earns y

Where  y.company    = &tx1.company
And    y.paygroup   = &tx1.paygroup
And    y.pay_end_dt = &tx1.pay_end_dt
And    y.off_cycle  = &tx1.off_cycle
And    y.page_num      = &tx1.page_num
And    y.line_num      = &tx1.line_num
And    y.addl_nbr      = &x.addl_nbr
And   (y.erncd     In ('REG','OTP','173') !VENDKXY Added Code for Earn code 173
Or     y.erncd      < '500')          
End-Select
End-Procedure 


begin-procedure P820-create-record
#debug9 show 'P820-create-record'
  move #hourly_rt to $hourly_rt

  MOVE &TX.TXGRS_CUR TO #TXGRS_CUR
  move #txgrs_cur to $txgrs_cur

  UNSTRING $hourly_rt BY '.' INTO $string_int $string_after_Dec
  move $string_int to $string_int_ed 099999999999
  move $string_after_dec to $string_after_Dec_ed 888888
  Concat $string_after_dec_ed with $string_int_ed
  move $string_int_ed to $hourly_rt_prefix

  UNSTRING $txgrs_cur BY '.' INTO $txgrs_cur_bf $txgrs_cur_af
  move $txgrs_cur_bf to $txgrs_cur_bf_ed 09999999
  Concat $txgrs_cur_af with $txgrs_cur_bf_ed 
  move $txgrs_cur_bf_ed to $taxgrs_cur_prefix

  move #total_hrs to $total_hrs

! JNB 01/22/1999
  unstring $total_hrs by '.' into $hours_worked_a $after_dec
  move $hours_worked_a to $hours_worked_a_ed 09
  let $after_dec_a = substr($after_dec,1,2)
  move $after_dec_a  to $after_dec_ed      09
 
 
 ! do get-string-date(&PR.ORIG_HIRE_DT, $HIRE_DT_STR, $HIRE_DT_YMD)   ! upgrade 9.0 changes
  do get-string-date(&OVW.ORIG_HIRE_DT, $HIRE_DT_STR, $HIRE_DT_YMD)   ! upgrade 9.0 changes
  
  
  do get-string-date(&JOB.EFFDT, $EFFDT_STR, $EFFDT_YMD)

  move 'N' to $sev-error
  let #file-stat = 0

! JNB 01/22/1999
  write 1 from &JOB.company:3 &JOB.DEPTID:10 &JOB.EMPLID:11 &PR.NAME:30 &JOB.ACCT_CD:3  -
             $HIRE_DT_STR:10 &JOB.FULL_PART_TIME:1 &JOB.EMPL_STATUS:1 &JOB.ACTION:3   -
             $EFFDT_STR:10 &JOB.EMPL_TYPE:1 $HOURLY_RT_prefix:18 $hours_worked_a_ed:2 -
             $AFTER_DEC_ed:2 $TAXGRS_CUR_PREFIX:10 -
             $FILLER:11
    STATUS=#file-stat       

  Let #inputtran = #inputtran + 1

  if #file-stat <> 0 
    move 'Y' to $sev-error
    print 'Error writing to the file:' (,30)
  end-if
end-procedure
 
 
begin-procedure get-string-date($date, :$str_date_mdy, :$str_Date_ymd)
#debug9 show 'get-string-date'

  do format-datetime($date,$str_date_mdy,{DEFMDY},'','')

  let $date_dd_mm = substr($str_Date_mdy,1,2)
  let $date_dd_yyyy = substr($str_Date_mdy,7,2)
  let $date_dd_dd = substr($str_date_mdy,4,2)

  do MakeYear4Digits($date_Dd_yyyy)

  let $str_Date_mdy = $date_dd_mm||'/'||$date_dd_dd||'/'||$date_dd_yyyy

  let $str_Date_ymd = $date_dd_yyyy||$date_dd_mm||$date_dd_dd
end-procedure

  
begin-procedure P900-SQL-Error-Found($Proc_Name) 
#debug9 show 'P900-SQL-Error-Found'
  do P990-error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
end-procedure


begin-procedure P990-Error-Found
#debug9 show 'P990-Error-Found'
  move 'Y' to $ErrorFound
  do Format-Number(#Inputrec, $out, '99999')
  print $out (+1,1)

  let $EmplId_1st3 = substr($EmplId,1,3)
  let $EmplId_mid2 = substr($EmplId,4,2)
  let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  print $EmplID11 (,8)
end-procedure


begin-procedure ALTER-SESSION
#debug9 Show 'ALTER-SESSION'
  BEGIN-SQL
    Alter session set optimizer_goal = Rule
  End-SQL 
end-procedure


#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'reset.sqc'     !Reset printer procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'askaod.sqc'    !Get As of Date 
#Include 'gexxx951.sqc'  !Select Oracle Instance
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx950.sqc'  !Get sqrw run controls
