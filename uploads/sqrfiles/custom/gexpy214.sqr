!***********************************************************************
! GEXPY214: Retail Bonus Report                                        *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle .                      *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY214 :            Retail Bonus Report                            *
!                                                                      *
! Narrative:            This report has 3 different processing modes.  *
!                         (1) Projection                               *
!                         (2) Preview Calculation                      *
!                         (3) Final Calculation                        *
!                                                                      *
!                       In projection mode, a report will be created   *
!                        showing current and previous year bonus       *
!                        amounts and percentages as well as calculated *
!                        bonus for verification.  This is the same as  *
!                        the preview report except that new rows will  *
!                        not be inserted into the bonus table.         *
!                                                                      *
!                       In preview calc mode, a report will be created *
!                        showing current and previous year bonus       *
!                        amounts and percentages as well as calculated *
!                        bonus for verification.  Responsible officers *
!                        can make any necessary changes for employees  *
!                        in their department for the current year.     *
!                        Worksheets can be recreated in preview mode   *
!                        until all information is correct.             *
!                                                                      *
!                       In final calc mode, a report will be created   *
!                        showing current and previous year bonus       *
!                        amounts and percentages, as well as current   *
!                        year bonus.  PS_ADDL_PAY_DATA table will be   *
!                        updated accordingly.                          *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       data returned from sql calls           *
!                                                                      *
! SQL Tables:           addl_pay_data                                  *
!                       addl_pay_effdt                                 *
!                       addl_pay_erncd                                 *
!                       gex_empl_bonus                                 *
!                       gex_dept_tbl                                   *
!                       gex_mgmt_report                                *
!                       personal_data                                  *
!                       employment                                     *
!                       job   					       *
!			gex_rtl_kicker		                       *
!                                                                      *
! Written by:           Abhishek Gupta                                 *
!                                                                      *
! Normally Run:         Annually                                       *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Company Division Code(s)                     *
!                         Company(s)                                   *
!                         Paygroup(s)                                  *
!                         Deptid(s)                                    *
!                         Employee Status(es)                          *
!                         Account Code(s)                              *
!                         Union Code(s)                                *
!                         Employee Type(s)                             *
!                         Jobcode(s)                                   *
!                                                                      *
!                         As Of Date                                   *
!                         Hire Date                                    *
!                         Salary Date                                  *
!                         Bonus Award Date 			       *
!			  Fiscal Year From Date                        *
!			  Fiscal Year Thru Date                        *
!			  Term CutOff Date  	                       *
!                         Bonus Percent to Use                         *
!                         Run Type                                     *
!			  Company Component                            *
!			  Store Financial Component                    *
!			  Retail Performance Modifiers                 *
!                                                                      *
!----------------------------------------------------------------------*
! Tables Referenced:						       *
!----------------------------------------------------------------------*
! TABLE                  SEL     UPD     INS     DEL                   *
!----------------------------------------------------------------------*
! PS_ADDL_PAY_DATA        Y       -       Y       -                    *
! PS_ADDL_PAY_EFFDT       Y       -       Y       -                    * 
! PS_ADDL_PAY_ERNCD       Y       -       Y       -                    *
! PS_DEPT_TBL             Y       -       -       -                    *
! PS_GEX_ACCT_CD_TBL      Y       -       -       -                    *
! PS_GEX_DEPT_TBL         Y       -       -       -                    * 
! PS_GEX_EMPL_BONUS       Y       Y       Y       -                    *
! PS_GEX_RC_BON_EMPL      Y       -       -       -                    *
! PS_GEX_R_GEXPY214A      Y       -       Y       -                    *
! PS_GEX_RC_GEXPY214      Y       -       -       -                    *
! PS_GEX_TM_BON_EXCP      Y       -       -       -                    *
! PS_JOB                  Y       -       -       -                    *    
! PS_JOBCODE_TBL          Y       -       -       -                    * 
! PS_PERSONAL_DATA        Y       -       -       -                    *
! PS_POSITION_DATA        Y       -       -       -                    *
! PS_GEX_RC_GXPY214B      Y       -       -       -                    *
! PS_UNION_TBL	          Y       -       -       -                    *
! PS_PER_ORG_INST         Y       -       -       -                    *
! PS_PAYGROUP_TBL         Y       -       -       -                    *
! PS_GEX_RC_RX_BONUS      Y       -       -       -                    *
! PS_PAY_CALENDAR         Y       -       -       -                    *
! PS_GEX_RC_PAY           Y       -       -       -                    *
! PS_GEX_RTL_KICKER       Y       -       -       -                    *
!----------------------------------------------------------------------*
! Program Flow:                                                        *
!                                                                      *
! P100-INITIALIZATION                                                  *
! 	INIT-DATETIME                                                  *
! 	INIT-NUMBER                                                    *
! 	GET-CURRENT-DATETIME                                           *
! 	STDAPI-INIT                                                    *
! 	P110-SQRW-RUN-CONTROLS                                         *
! 		GEXXX950-INPUT-PARAMETERS                              *
! 		ASK-HIRE-DATE                                          *
! 			FORMAT-DATETIME                                *
! 			VALIDATE-NATIVE-DATE                           *
! 		ASK-SALARY-DATE                                        *
! 			FORMAT-DATETIME                                *
! 			VALIDATE-NATIVE-DATE                           *
! 		ASK-BONUS-AWARD-DATE                                   *
! 			FORMAT-DATETIME                                *
! 			VALIDATE-NATIVE-DATE                           *
! 	P120-PROCESS-SCHEDULER-RUN-CONTROLS                            *
! 		GEXXX922-SELECT-PARAMETERS                             *
! 		GEXPY214-SELECT-PARAMETERS                             *
! 		SELECT-PARAMETERS                                      *
! 		SELECT-PAY-BEGIN_DT                                    *
! 		SELECT-PAY-END_DT                                      *
! 		GEXXX900-SELECT-COMPANY-PARAMETERS                     *
! 		GEXXX901-SELECT-COMPANY-PAYGROUP-PARAMETERS            *
! 		GEXXX902-SELECT-DEPTID-PARAMETERS                      *
! 		GEXXX903-SELECT-EMP-STAT-PARAMETERS                    *
! 		GEXXX907-SELECT-DIV-CD-PARAMETERS                      *
! 		GEXXX909-SELECT-ACCT-CD-PARAMETERS                     *
! 		GEXXX913-SELECT-UNION-CD-PARAMETERS                    *
! 		GEXXX930-SELECT-EMP-TYPE-PARAMETERS                    *
! 	FORMAT-DATETIME                                                *
! 	CONVERT-TO-DTU-DATE                                            *
! 	DTU-ADD-DAYS                                                   *
! 	CONVERT-FROM-DTU-DATE                                          *
! OPEN-FILE                                                            *
! PRINT-HEADER                                                         *
! DELETE-EMPLID                                                        *
! GET-RC-EMPLID                                                        *
! SELECT-RC-EMPLID                                                     *
! 	INSERT-EMPLID                                                  *
! GET-EMPLID                                                           *
! 	SELECT-BONUS-GROUP-PARAMETERS                                  *
! 	INSERT-EMPLID                                                  *
! 	GET-EMPLID-2                                                   *
! 		GEXXX900-SELECT-COMPANY-PARAMETERS                     *
! 		GEXXX901-SELECT-COMPANY-PAYGROUP-PARAMETERS            *
! 		GEXXX902-SELECT-DEPTID-PARAMETERS                      *
! 		GEXXX903-SELECT-EMP-STAT-PARAMETERS                    *
! 		GEXXX907-SELECT-DIV-CD-PARAMETERS                      *
! 		GEXXX909-SELECT-ACCT-CD-PARAMETERS                     *
! 		GEXXX913-SELECT-UNION-CD-PARAMETERS                    *
! 		GEXXX930-SELECT-EMP-TYPE-PARAMETERS                    *
! 		INSERT-EMPLID                                          *
! SELECT-EMPLID-JOBCODE                                                *
! 	P200-MAIN-PROCESS                                              *
! 		GET-JOBCODE                                            *
! 		GET-HIREDT                                             *
! 		CALCULATE_MAX_DURATION_DEPTID                          *
! 			GET-ALL-DEPTID                                 *
! 				GET-PREV-DEPTID                        *
! 				GET-PREV-DEPTID                        *
! 			GET-MAX-DURATION-DEPTID                        *
! 				CHECK-VALID-JOBCODE-IN-DEPT            *
! 					GET-DEPT-BONUS-GROUP           *
! 		GET-BONUS-GROUP                                        *
! 		SELECT-MAXDURATIONJOBCODE                              *
! 			JOBCODEDESCR                                   *
! 		P220-BONUS-TABLE-CURRENT-YEAR                          *
! 		CHECK-LEAVE-DURATION                                   *
! 			GET-LEAVE-VALIDATE                             *
! 		GET-BONUS-RUNCONTROL                                   *
! 		CHECK-BONUS-GROUP-RUNCONTROL                           *
! 		P220-BONUS-TABLE-SELECT                                *
! 		GET-EE-SALARY                                          *
! 			GET-FUTURE-DT-HIR                              *
! 			GET-FUTURE-DT-REH                              *
! 			GET-SALARY-ASOF-SALARYDATE                     *
! 			GET-SALARY-ELIG-JOBCODE                        *
! 		GETEEPCTFROMRUNCNTL                                    *
! 		GET-ALL-JOBCODE                                        *
! 			GET-PREV-JOBCODE                               *
! 				CHECK-QUALIFYING-JOBCODE               *
! 					GETEEPCTFROMRUNCNTL            *
! 			GET-PREV-JOBCODE                               *
! 				CHECK-QUALIFYING-JOBCODE               *
! 					GETEEPCTFROMRUNCNTL            *
! 			CHECK-IF-PRORATION-DONE                        *
! 			SUM-DISTINCT-JOBCODES                          *
! 		GEX-EE-EXCEPTION-PCT                                   *
! 		GETEEPCTFROMRUNCNTL                                    *
! 		SELECT-REATIL-KICKERS                                  *
! 		SELECT-REATIL-KICKERS                                  *
! 		CHECK-VALID-REPORTS-TO                                 *
! 		GET-POSITION-REPORTS-TO                                *
! 		CHECK-VALID-REPORTS-TO                                 *
! 		CHECK-BONUS-ALREADY-CALCULATED                         *
! 		UPDATE-BONUS-AMOUNT                                    *
! 		P270-INSERT-GEX-EMPL-BONUS-PCT                         *
! 		WRITE-FILE                                             *
! 			FORMAT-DATETIME                                *
! 			GET-ACCOUNTCD-DESCR                            *
! 			GET-JOBCODE-DESCR                              *
! 			FORMAT-DATETIME                                *
! 			GET-ACCOUNTCD-DESCR                            *
! 			GET-JOBCODE-DESCR                              *
! 	PRINT-REPORT-MODE2                                             *
! 		P290-PRINT-RECORD                                      *
! 			GET-ACCT-CD-DESCR                              *
! 			FORMAT-DATETIME                                *
! P200-MAIN-PROCESS2                                                   *
! 	BONUS-TABLE-LAST-YEAR                                          *
! 	CHECK-EXISTING-510                                             *
! 	P240-INSERT-ADDL-PAY-ERNCD                                     *
! 	CHECK-EXISTING-510-EFFDT                                       *
! 	P250-INSERT-ADDL-PAY-EFFDT                                     *
! 	CHECK-EXISTING-510-DATA                                        *
! 	P260-INSERT-ADDL-PAY-DATA                                      *
! 	P260-INSERT-ADDL-PAY-DATA                                      *
! 	P290-PRINT-RECORD                                              *
! 		GET-ACCT-CD-DESCR                                      *
! 		FORMAT-DATETIME                                        *
! 	WRITE-FILE                                                     *
! 		FORMAT-DATETIME                                        *
! 		GET-ACCOUNTCD-DESCR                                    *
! 		GET-JOBCODE-DESCR                                      *
! 		FORMAT-DATETIME                                        *
! 		GET-ACCOUNTCD-DESCR                                    *
! 		GET-JOBCODE-DESCR                                      *
! 	P240-UPDATE-BONUS-TABLE                                        *
! P300-FINALIZATION                                                    *
! 	RESET                                                          *
! 	STDAPI-TERM                                                    *
!                                                                      *
!----------------------------------------------------------------------*
! Debugging:                                                           **
!       Syntax:   -DebugUFDCS   Place on command line after db name.   *
!       Options:        F       FLOW    Procedure names.               *
!       Options:        D       DATA    Selected information.          *
!       Options:        C       CALC    Calculated information.        *
!       Options:        S       SQLS    Dynamic SQL values.            *
!       Options:        U       USER    Values for Users.              *
!       Notes:          You may use one, some or all of the letter optn*
!                                                                      *
! Errors:                                                              *
!       Description:    Prints whenever a database error occurs.       *
!       Value:          M       MESG    Error Messages.                *
!----------------------------------------------------------------------*
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS     DATE        DESCRIPTION OF THE CHANGE                   *
!***********************************************************************
!VENDAXG    06/08/2010    Initial Creadtion.			       *
!VENDAXG  09/03/2010  Modified for S3#14562544, Changed add'l pay Deptid
!VENDAXG  06/15/2011  Modified for Bonus Processing 2011.              *
!ISDVNPK  08/11/2011  Modified for S3#2060842 ,Changed to pull end date* 
!                     greater than sysdate from PS_GEX_APPR_DELG table *
!VENDAXG  05/22/2012  Modifications for Bonus 2012 Requirements.       *
! 1221434 06/06/2012  Modified Leave Logic for Bonus Changes 2012.     *
! ISDVNPK 05/02/2013  GEXHR_848_PRJ95045_BONUS_2013                    *
!		      Changed the leave logic to 4 from 3 months for Full Bonus    *  
!ISDVVXK  07/20/2014  GEXHR_848_E161362_BONUS2014                      *
!                     Modified the code to insert the process name and *
!                     also to select the active jobcodes               * 
!ISDVVXK 07/17/2015  ISDVVXK - GEXHR_848_E1944_BONUS2015               *
!                    Added Profit and Store to Store sales percentages *
!                    Fix the annual rt for rehires                     *
!1289792 06/07/2017  GEXHR_BONUS2017                                   *
!                    Change the calculation for the midpoint-one       *
!                    midpoint-two and midpoint-three                   *
!1306266(MM) 08/21/17 Modification to incorporate Dept changes     *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx913.sqc'  !Get union code multiple row table
#include 'gexxx930.sqc'  !Get empl type multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls





#define PRINTER_TYPE JDH
#define PAGE_LEFT_MARG 0
#define PAGE_TOP_MARG 0.125
#define CHAR_WIDTH 4.32

#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Landscape)
#include 'prcsapi.sqc'
#define #column1     1
#define #column2    23
#define #column3    33
#define #column4    44
#define #column5    53
#define #column6    63
#define #column7    74
#define #column8    92
#define #column9    98
#define #column10  115
#define #column11  130
#define #column12  136
#define #column13  149
#define #column14  164
#define #column15  170  
#define #column16  108  




Begin-Setup


create-array name=Employee  size=500000	
Field=EMPLID:Char
Field=Flag:Char



create-array name=Jobcode  size=100	
Field=Jobcode:Char
Field=Position_Nbr:Char
Field=Grade:Char
Field=Deptid:Char		!GEXPY_848_E95094_02 2012-05-22 VENDAXG 
Field=Annual_Rt:Number	!GEXPY_848_E95094_02 2012-05-22 VENDAXG 
Field=Promotion:Char !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
Field=Duration:Number

create-array name=Deptid  size=100	
Field=Deptid:Char
Field=Duration:Number
Field=Effdt:date
Field=Effseq:Number

create-array name=Sum-Bonus-Amount  size=100
Field=Bonus_Amount:Number

create-array name=Final-Jobcode-List  size=100
Field=Jobcode:Char
Field=Position_Nbr:Char
Field=Grade:Char
Field=Deptid:Char		!GEXPY_848_E95094_02 2012-05-22 VENDAXG 
Field=Duration:Number

!GEXPY_848_E95094_02 2012-05-22 VENDAXG  - Begin
create-array name=Employee_All_Bonus  size=100	
Field=Emplid:Char
Field=Empl_Rcd:Number
Field=Gex_Bonus_Year:Number
Field=Deptid:Char
Field=Empl_Type:Char
Field=Budget_Deptid:Char
Field=Jobcode:Char
Field=Annual_rt:Number	!GEXPY_848_E95094_02 2012-06-28
Field=Position_Nbr:Char
Field=Gex_Min_Bonus_Pct:Number
Field=Gex_Target_Bonus_Pct:Number
Field=Gex_Max_Bonus_Pct:Number
Field=Gex_Bonus_Pct_Used:Number
Field=Gex_Bonus_Amt:Number
Field=Gex_Final_Bonus_Amt:Number
Field=Gex_Bonus_Group:Char
Field=Reports_To:Char
Field=Std_hours:Number
Field=Grade:Char


create-array name=Final_Employee_All_Bonus  size=100	
Field=Emplid:Char
Field=Empl_Rcd:Number
Field=Gex_Bonus_Year:Number
Field=Deptid:Char
Field=Empl_Type:Char
Field=Budget_Deptid:Char
Field=Jobcode:Char
Field=Annual_rt:Number	!GEXPY_848_E95094_02 2012-06-28
Field=Position_Nbr:Char
Field=Gex_Min_Bonus_Pct:Number
Field=Gex_Target_Bonus_Pct:Number
Field=Gex_Max_Bonus_Pct:Number
Field=Gex_Bonus_Pct_Used:Number
Field=Gex_Bonus_Amt:Number
Field=Gex_Final_Bonus_Amt:Number
Field=Gex_Bonus_Group:Char
Field=Reports_To:Char
Field=Std_hours:Number
Field=Grade:Char

!GEXPY_848_E95094_02 2012-05-22 VENDAXG  - End

Declare-Variable
Date $Leave_Effdt
Date $Curr_Effdt
Date $Prior-Effdt
DATE $Prev_Dept_Entry_Dt
DATE $Prevdept_Entrydt
DATE $Curr_Dt
Date $Cutoff_Dt
Date $Date_Cutoff
Date $Termination_Dt
Date $Fiscal_Start_Dt
Date $Fiscal_End_Dt

Date $Prior-Jobcode-Effdt
Date $Curr_Jobcode_Effdt
Date $Current-Jobcd-Effdt

Date $All_Effdt 
Date $End_Date
Date $Start_Date
Date $Old_Effdt
Date $All_Effdt_Deptid
Date $End_Date_Deptid
Date $Start_Date_Deptid
Date $Old_Effdt_Deptid
date $Thru_Date       
date $From_Date 
Date $Last_hire_Dt      
end-declare 

End-Setup


Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do Open-File 
  Do Print-header 
  
  Let #DurfromRctl=0 
  Let #DurfromRctl= datediff($Thru_Date,$From_Date,'DAY')
  If #DurfromRctl=0
      Let #DurfromRctl=365
  End-if
  #debug8 Show '#DurfromRctl : ' #DurfromRctl
  
  Let #M=0
  If $Run_Type = '1' or 
    $Run_Type = '2'
                        
    	Let #EmplidCount=0 
    	Do Delete-Emplid
    	!Vendaxg Added for Bonus Processing 2011 on 05/26/2011 - Start
    	Do Get-RC-Emplid	
    	If $RC_EmplID_Found = 'Y'
    		Do Select-RC-EmplID
    	Else
    	!Vendaxg Added for Bonus Processing 2011 on 05/26/2011 - End
    		Do Get-emplid
    	   	
    	End-if 
    	Do Select-Emplid-Jobcode
    	!Vendaxg Added for Bonus Processing 2011 on 05/26/2011 - Start
     
  Else
     	Let #EmplidCount=0 
     	Do P200-Main-Process2 
  End-If
  
  Do P300-Finalization
End-Report


Begin-Heading 10		
#debug9 Show 'Begin-Heading'
  !#Include 'stdhdg02.sqc'
#Include 'stdhdg01.sqc'
  !Print ':'                    (3,8)

  Print $ReportTitle2          (3,)  Center

  If Rtrim($Officer, ' ') <> ''
    Let $Officer_Hdg = 'Responsible Officer - ' || Rtrim($Officer, ' ')
    Print $Officer_Hdg         (4,)  Center
  End-If

  if $Deptid <> $priorDeptid
    Do Get-Department-Name
    move $Deptid to $priorDeptid
  end-if
  
  Print 'Deptid:'               (3,1)
  Print $Deptid                 (0,13)
  Print $DeptName               (0,+2)
  
  Print 'JobCode:'                    (4,1)
  Print $Calculate_JobCode                    (4,13)
  Print ' ' (+1,1)
  !If $Empl_Type = 'S' Or
!     $Empl_Type = ''
   ! Print '<---------- '        (+2,{#column7})
  !  Print $Previous_Year        (,)
  !  Print 'YEAR ---------->'    (,+1)
   ! Print '<-------------- '        (,{#column16})
   ! Print $Current_Year             (,)
   ! Print 'YEAR ------------->'    (,+1)
   
    If $Run_Type = '2' Or $Run_Type = '3'	
      
     ! Print '<------- '       (,{#column13})
     ! Print $Current_Year       (,)
     ! Print 'CHANGES ----->' (,+1)
      
    End-if
 ! Else
    
   ! Print ' '                   (+2,{#column7})
    !Print '1.5'                 (,+5)
    !Print ' 2'                  (,{#column8})   
    !Print ' '                   (,{#column9})
    
     !Print $Current_Year         (,+7)
    !Print $Previous_Year        (,+7)
    !Print ' '                   (,{#column12})
    !Print $Current_Year         (,+7)

    !If $Run_Type = '2' Or $Run_Type = '3'	
      !Print ' '                 (,{#column15})
      !Print 'CHANGE'            (,)
      
    !End-if
 ! End-If

  Print 'IN STORE'              (+1,{#column3})
  Print 'HIRE'                  (+0,{#column4})

  If $Empl_Type = 'S' Or
     $Empl_Type = ''
    Print '   WEEKLY'           (+0,{#column5})
    Print '    ANNUAL'          (+0,{#column6})
  Else
    Print '   HOURLY'           (+0,{#column5})
    Print '    WEEKLY'          (+0,{#column6})
    !Print '    WEEKS'           (+0,{#column7})	 
    !Print '    WEEKS'           (,+1)     	 
  End-If

 ! If $Empl_Type = 'S' Or
  !   $Empl_Type = ''
    Print 'MIN/TARGET/MAX'      (+0,{#column7})
    Print ' BONUS'               (+0,{#column8})
    !Print 'MIN/TARGET/MAX'      (+0,{#column10})
    !Print '  CSI'               (+0,{#column11})
    If $Run_Type = '2'
      !Print 'MIN/TARGET/MAX'    (+0,{#column13})
      !Print '  CSI'             (+0,{#column14})
      !Print '  BONUS'           (+0,{#column15})
    End-If
  !Else
   ! If $Run_Type = '2' Or $Run_Type = '3'	
      ! Print ' BONUS'      (+0,{#column15})
    !End-If
  !End-If

  Print '       BONUS'          (+0,{#column9})
  !Print '       BONUS'          (+0,{#column12})

  Print 'NAME'                  (+1,{#column1})
  Print 'SSN'                   (+0,{#column2})
  Print 'DEPARTMENT'            (+0,{#column3})
  Print 'DATE'                  (+0,{#column4})
  Print '     RATE'             (+0,{#column5})
  Print '    SALARY'            (+0,{#column6})
  If $Empl_Type = 'S' Or
     $Empl_Type = ''
  !Print 'DEPTID'                (+0,{#column16})  
  Else
  !Print '                  DEPTID'                (+0,{#column16})  
  End-if
  
  !If $Empl_Type = 'H'
   !   Print  '   SALARY'         (+0,{#column7})
    !  Print  '   SALARY'         (,+1)
  !End-If     
  
 ! If $Empl_Type = 'S' Or
  !   $Empl_Type = ''
    Print 'PERCENT BONUS'       (+0,{#column7})
    Print '% USED'               (+0,{#column8})
    !Print 'PERCENT BONUS'       (+0,{#column10})
    !Print '  ADJ'               (+0,{#column11})
   ! If $Run_Type = '2' Or $Run_Type = '3'	
     ! Print 'PERCENT BONUS'     (+0,{#column13})
      !Print '  ADJ'             (+0,{#column14})
     ! Print ' AMOUNT'            (+0,{#column15})
    !End-If
  !Else
   ! If $Run_Type = '2' Or $Run_Type = '3'	
      !Print ' AMOUNT'      (+0,{#column15})
    !End-If
 ! End-If

  Print '      AMOUNT'          (+0,{#column9})
  !Print '      AMOUNT'          (+0,{#column12})

  Print '-'                     (+2,{#column1},21)   Fill
  Print '-'                     (+0,{#column2},9)    Fill
  Print '-'                     (+0,{#column3},10)   Fill
  Print '-'                     (+0,{#column4},8)    Fill
  Print '-'                     (+0,{#column5},9)    Fill
  Print '-'                     (+0,{#column6},10)   Fill
  !Print '-'                     (+0,{#column12},12)  Fill 
  Print '-'                     (+0,{#column9},12)   Fill 
  
  If $Empl_Type = 'S' Or
     $Empl_Type = ''
  !Print '-'                     (+0,{#column16},6)   Fill
  End-If
  
 ! If $Empl_Type = 'H' 
    ! Print '-'                  (+0,{#column7},9)    Fill
   !  Print '-'                  (,+1,9)              Fill
    ! Print '-'                  (+0,+33,6)   Fill
  !End-If
  
 ! If $Empl_Type = 'S' Or
     !$Empl_Type = ''
    Print '-'                   (+0,{#column7},14)   Fill
    Print '-'                   (+0,{#column8},5)    Fill
   ! Print '-'                   (+0,{#column10},14)  Fill
   ! Print '-'                   (+0,{#column11},5)   Fill
    !If $Run_Type = '2' Or $Run_Type = '3'	
      !Print '-'                 (+0,{#column13},14)  Fill
     ! Print '-'                 (+0,{#column14},5)   Fill
    !  Print '-'                 (+0,{#column15},8)  Fill
   ! End-If
 ! Else
   ! If $Run_Type = '2' Or $Run_Type = '3'	
      !Print '-'                 (+0,{#column15},8)  Fill
   ! End-If
 ! End-If

  
End-Heading

!***********************************************************************
Begin-Procedure P100-Initialization
!***********************************************************************
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXPY214'
  Let $ReportTitle   =   'Retail Bonus Report'

  #debug8 Show '$ReportID    = ' $ReportID
  #debug8 Show '$ReportTitle = ' $ReportTitle

  Let $GEXXX900_Company_Alias  = 'job.company'
  Let $GEXXX901_Company_Alias  = 'job.company'
  Let $GEXXX901_Paygroup_Alias = 'job.paygroup'
  Let $GEXXX902_Deptid_Alias   = 'job.deptid'
  Let $GEXXX903_Emp_Stat_Alias = 'job.empl_status'
  Let $GEXXX907_Div_CD_Alias   = 'GEXDT.gex_company_div_cd'
  Let $GEXXX909_Acct_CD_Alias  = 'job.acct_cd'
  Let $GEXXX913_Union_Cd_Alias = 'job.union_cd'
  Let $Jobcode_Alias  = 'job.jobcode'
  Let $GEXXX930_Emp_Type_Alias = 'job.empl_type'
  Let $GEXXX214_Bonus_Group_Alias = 'BN.gex_bonus_group'


  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
    
  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  #debug8 Show 'Report Began at ' &timeBegan ' on ' &dateBegan

  Do Format-DateTime($AsOfDate, $Heading_AsOfDate, {DEFDATE}, '', '')
  Let #Current_Year  = To_Number(Substr($AsOfDate,8,4))
  Let #Previous_Year = To_Number(Substr($AsOfDate,8,4))-1
  Move #Current_Year  To $Current_Year  9999
  Move #Previous_Year To $Previous_Year 9999

  Evaluate $Run_Type
    When = '1'
      Let $ReportTitle2 = '(Projection Report)'
    When = '2'
      Let $ReportTitle2 = '(Preview Calculation)'
    
    When = '3'		 
      Let $ReportTitle2 = '(Review Bonus Activity)'
    When = '4'		 
      Let $ReportTitle2 = '(Final Calculation)'
    
  End-Evaluate

  Let $X000_Order_By = 'Responsible Officer, Company, Deptid, Employee Type, Name'

  Show '$GEXXX907_Include_Div_Cd_Display_Criteria           = ' $GEXXX907_Include_Div_Cd_Display_Criteria
  Show '$GEXXX900_Include_Company_Display_Criteria          = ' $GEXXX900_Include_Company_Display_Criteria
  Show '$GEXXX901_Include_Company_Paygroup_Display_Criteria = ' $GEXXX901_Include_Company_Paygroup_Display_Criteria
  Show '$GEXXX902_Include_Deptid_Display_Criteria           = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Display_Criteria         = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  Show '$GEXXX909_Include_Acct_Cd_Display_Criteria          = ' $GEXXX909_Include_Acct_Cd_Display_Criteria
  Show '$GEXXX913_Include_Union_Cd_Display_Criteria         = ' $GEXXX913_Include_Union_Cd_Display_Criteria
  Show '$Include_Jobcode_Display_Criteria          = ' $Include_Jobcode_Display_Criteria                   
  Show '$GEXXX930_Include_Emp_Type_Display_Criteria         = ' $GEXXX930_Include_Emp_Type_Display_Criteria
  Show '$GEXXX214_INCLUDE_BONUS_GROUP_CRITERIA  = '	$GEXXX214_EXCLUDE_BONUS_GROUP_DISPLAY_CRITERIA
  Show '$AsOfDate         = ' $AsOfDate
  Show '$Hire_Dt          = ' $Hire_Dt
  Show '$Salary_Dt        = ' $Salary_Dt
  Show '$Bonus_Award_Dt   = ' $Bonus_Award_Dt
  Show '$Run_Type         = ' $Run_Type '  ' $ReportTitle2
  Show '$Bonus_Pct_to_Use = ' $Bonus_Pct_to_Use '  ' $Bonus_Pct

  
  Do Convert-To-DTU-Date($Bonus_Award_Dt, $Bonus_Award_Dt_dtu)  
  Do dtu-add-days($Bonus_Award_Dt_dtu,1, $Bonus_Award_Dt_Plus1_dtu)
  Do Convert-From-DTU-Date($Bonus_Award_Dt_Plus1_dtu,$Bonus_Award_Dt_Plus1)
  Show '$Bonus_Award_Dt_Plus_One = ' $Bonus_Award_Dt_Plus1
  

  
End-Procedure


!***********************************************************************
Begin-Procedure P110-SQRW-Run-Controls
!***********************************************************************
#debug9 Show 'P110-SQRW-Run-Controls'

  
  Display 'Enter Run Type  (1=Projection, 2=Preview Calc, 3=Bonus Activity Review, 4=Final Calc)'
  While 1=1
    Input $Run_Type Maxlen=1 'Run Type'
    If $Run_Type = '1' Or
       $Run_Type = '2' Or
       $Run_Type = '3' Or
       $Run_Type = '4'		
      Break
    End-If
  End-While

  
  
  Let $GEXXX903_Emp_Stat_Alias = 'j.fieldvalue' 
  Let $GEXXX930_Emp_Type_Alias = 'j.fieldvalue' 
  
  

  Do GEXXX950-Input-Parameters

  Let $DateOK = 'N'
  While $DateOK <> 'Y'
    Do Ask-Hire-Date
  End-While

  Let $DateOK = 'N'
  While $DateOK <> 'Y'
    Do Ask-Salary-Date
  End-While

  Let $DateOK = 'N'
  While $DateOK <> 'Y'
    Do Ask-Bonus-Award-Date
  End-While

  Let $UnionCdString = ''''
  Display 'Enter Union Code or leave blank to exit.'
  While 1=1
    Input $In-UnionCd Maxlen=3 'Union Code'
    Uppercase $In-UnionCd
    If Rtrim($In-UnionCd, ' ') = ''
      Concat '''' With $UnionCdString
      Break
    End-If
    If $UnionCdString <> ''''
      Concat ''',''' With $UnionCdString
    End-If
    Concat $In-UnionCd With $UnionCdString
  End-While

  If $UnionCdString = ''''''
    Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = '1=1'
    Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = $GEXXX913_Union_CD_Alias || ' In (' || $UnionCdString || ')'
    Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = $GEXXX913_INCLUDE_UNION_CD_CRITERIA
  End-If

  Let $EmplTypeString = ''''
  Display 'Enter Employee Type or leave blank to exit.'
  While 1=1
    Input $In-EmplType Maxlen=1 'Employee Type'
    Uppercase $In-EmplType
    If Rtrim($In-EmplType, ' ') = ''
      Concat '''' With $EmplTypeString
      Break
    End-If
    If $EmplTypeString <> ''''
      Concat ''',''' With $EmplTypeString
    End-If
    Concat $In-EmplType With $EmplTypeString
  End-While

  If $EmplTypeString = ''''''
    Let $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA = '1=1'
    Let $GEXXX930_INCLUDE_EMP_TYPE_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA = $GEXXX930_Emp_Type_Alias || ' In (' || $EmplTypeString || ')'
    Let $GEXXX930_INCLUDE_EMP_TYPE_DISPLAY_CRITERIA = $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA
  End-If

  Move '''' to $JobcodeString
  Display 'Enter Jobcode or leave blank to exit.'
  While 1=1
    Input $Jobcode maxlen=6 'Jobcode'
    Uppercase $Jobcode
    if RTRIM($Jobcode, ' ') = ''
      concat '''' with $JobcodeString
      break
    end-if
    if $JobcodeString <> ''''
      concat ''',''' with $JobcodeString
    end-if
    concat $Jobcode with $JobcodeString
  End-While


  if $JobcodeString = ''''''
    Let $INCLUDE_JOBCODE_CRITERIA = '1=1'
    Let $INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'
  else
    Let $INCLUDE_JOBCODE_CRITERIA = 'j.jobcode In (' || $JobcodeString || ')'
    Let $INCLUDE_JOBCODE_DISPLAY_CRITERIA = $INCLUDE_JOBCODE_CRITERIA
  end-if


  
 !1289792 - GEXHR_BONUS2017  - Begin
  !Display 'Enter Bonus Percent to Use  (1=Minimum, 2=Mid One, 3=Target, 4=Mid Two, 5=Maximum)'
   Display 'Enter Bonus Percent to Use  (1=Minimum, 2=Mid One, 3=Target, 4=Mid Two, 5=Maximum, 6=Mid Three)'
 !1289792 - GEXHR_BONUS2017 - End
  While 1=1
    Input $Bonus_Pct_to_Use Maxlen=1 'Bonus Percent to Use'
    If $Bonus_Pct_to_Use = '1'
      Let $Bonus_Pct = '(Minimum)'
      Break
     Else
       If $Bonus_Pct_to_Use = '2'
       Let $Bonus_Pct = '(Mid One)'
         Break
        Else
          If $Bonus_Pct_to_Use = '3'
          Let $Bonus_Pct = '(Target)'
            Break
         Else
           If $Bonus_Pct_to_Use = '4'
           Let $Bonus_Pct = '(Mid Two)'
             Break
          Else
            If $Bonus_Pct_to_Use = '5'
            Let $Bonus_Pct = '(Maximum)'
              Break
              !1289792 - GEXHR_BONUS2017  - Begin
           Else
             If $Bonus_Pct_to_Use = '6'
             Let $Bonus_Pct = '(Mid Three)'
               Break
              !1289792 - GEXHR_BONUS2017  - End
             End-If
            End-If
           End-If
          End-if
       End-if
    End-if
  End-While
End-Procedure


Begin-Procedure Ask-Hire-Date
#debug9 Show 'Ask-Hire-Date'
  move 'Y' to $DateOK
  display ''
  display 'Enter the ''Hired As Of'' Date ({Prompt-Date}) for this report or press'
  input $Hire_Dt 'enter to default today''s date as the ''Hired As Of'' date'
  if Rtrim($Hire_Dt, ' ') = ''
    move $AsOfToday to $Hire_Dt
  else
    move {PDelimiter} to $DDelimiter
    do Format-DateTime($Hire_Dt,$Hire_Dt,{Prompt-Mask},'','native')
  end-if
  do Validate-Native-Date($Hire_Dt,$DateOK)
  if $DateOK = 'N'
    display '**** This is an invalid date, please reenter ****'
  end-if
End-Procedure


Begin-Procedure Ask-Salary-Date
#debug9 Show 'Ask-Salary-Date'
  move 'Y' to $DateOK
  display ''
  display 'Enter the ''Salary As Of'' Date ({Prompt-Date}) for this report or press'
  input $Salary_Dt 'enter to default today''s date as the ''Salary As Of'' date'
  if $Salary_Dt = ''
    move $AsOfToday to $Salary_Dt
  else
    move {PDelimiter} to $DDelimiter
    do Format-DateTime($Salary_Dt,$Salary_Dt,{Prompt-Mask},'','native')
  end-if
  do Validate-Native-Date($Salary_Dt,$DateOK)
  if $DateOK = 'N'
    display '**** This is an invalid date, please reenter ****'
  end-if
End-Procedure


Begin-Procedure Ask-Bonus-Award-Date
#debug9 Show 'Ask-Bonus-Award-Date'
  move 'Y' to $DateOK
  display ''
  display 'Enter the Bonus Award Date ({Prompt-Date}) for this report or press'
  input $Bonus_Award_Dt 'enter to default today''s date as the Bonus Award Date'
  if $Bonus_Award_Dt = ''
    move $AsOfToday to $Bonus_Award_Dt
  else
    move {PDelimiter} to $DDelimiter
    do Format-DateTime($Bonus_Award_Dt,$Bonus_Award_Dt,{Prompt-Mask},'','native')
  end-if
  do Validate-Native-Date($Bonus_Award_Dt,$DateOK)
  if $DateOK = 'N'
    display '**** This is an invalid date, please reenter ****'
  end-if
End-Procedure


!**********************************************************************
Begin-Procedure Select-Emplid-Jobcode
!**********************************************************************
Begin-Select Distinct
PRC.EMPLID 

	Let $EmplidFromArray = Ltrim(Rtrim(&PRC.EMPLID,' '),' ')
	Do P200-Main-Process

FROM PS_GEX_R_GEXPY214A PRC

End-Select
Do Print-Report-Mode2 !Vendaxg added for Bonus Processing 2011 on 06/08/2011
Close 1
!***********************************************************************
End-Procedure
!***********************************************************************

!***********************************************************************
Begin-Procedure P120-Process-Scheduler-Run-Controls
!***********************************************************************
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
 
  Do GEXXX922-Select-Parameters
  Do GEXPY214-Select-Parameters
  Do Select-Parameters    !hrrnctl1.sqc
     
  Let $From_Date        = &RUN_CNTL_HR.FROMDATE 
  Let $Thru_Date        = &RUN_CNTL_HR.THRUDATE 
  Let $Fiscal_Start_Dt  = &RUN_CNTL_HR.FROMDATE
  Let $Fiscal_End_Dt    = &RUN_CNTL_HR.THRUDATE
  Let $Term_CutOff_Date = &rc.gex_term_cutoff_dt 
  Let $AsOfDate         = $GEX_RC_PAY.AsOfDate
  Let $Hire_Dt          = $GEX_RC_PAY.Hire_Dt
  Let $Salary_Dt        = $GEX_RC_PAY.FromDate
  Let $Run_Type         = $GEX_RC_PAY.GEXPY091_Rpt_Type
  Let $Bonus_Pct_to_Use = $GEX_RC_PAY.GEXPY091_Bonus_Pct
  Let $Bonus_Award_Dt   = $GEX_RC_PAY.ThruDate
  Let #Profit_Pct       = #GEX_RC_PAY.GEX_PROFIT_BON_PCT     ! ISDVVXK - GEXHR_848_E1944_BONUS2015
  Let #Pct_of_Pct_Used = #GEX_RC_PAY.Min_OT_Hrs	!GEXPY_848_E95094_02 2012-05-22 VENDAXG 
  
  Let #cmp_comp         = &rc.gex_rc_cmp_comp
  Let #SFC1-MCP         = &rc.GEX_RC_SFC1_MCP	
  Let #SFC2-TSR         = &rc.gex_rc_sfc2_tsr
  Let #RPM1-TSS         = &rc.gex_Rc_rpm1_tss	
  Let #RMP2-TSSCI       = &rc.gex_rc_rpm2_ci
  Let #RPM3-CSS         = &rc.gex_rc_rpm3_css
  
  
  If ISNULL(Ltrim(Rtrim($From_Date, ' '),' '))
  
  Let #Previous_Year = To_Number(Substr($AsOfToday,8,4))-1
    
    Let $From_yr = #Previous_Year 
    extract $year1 from  $From_yr  0  4
    Let $from_Year='1-July-' 
    concat $year1 with $from_Year
   
    Do Select-pay-Begin_Dt 
      End-If
  
  If ISNULL(Ltrim(Rtrim($Thru_Date, ' '),' ' ))  
  Let #Current_Year  = To_Number(Substr($AsOfToday,8,4))
   
    Let $Thru_yr = #Current_Year 
    Extract $year2 from $Thru_yr  0  4
    Let $Thru_year='30-Jun-'
    Concat $Year2 with $Thru_Year
  
 Do Select-pay-end_Dt
  End-If
  
  If ISNULL(Ltrim(Rtrim($Term_CutOff_Date,' '),' '))
       Let $Term_CutOff_Date   =  $Thru_Date
    End-If
    
    Let $date_cutoff      = $Term_CutOff_Date
    Let $cutoff_dt        = dateadd($date_cutoff,'day',-1)
    Let $Fiscal_Start_Dt   =  $From_Date
    Let $Fiscal_End_Dt   =  $Thru_Date
   
  
  If Rtrim($AsOfDate, ' ') = ''
    Let $AsOfDate = $AsOfToday
  End-If

  If Rtrim($Hire_Dt, ' ') = ''
    Let $Hire_Dt = $AsOfToday
  End-If

  If Rtrim($Salary_Dt, ' ') = ''
    Let $Salary_Dt = $AsOfToday
  End-If

  If Rtrim($Run_Type, ' ') = ''
    Let $Run_Type = '1'
  End-If

  If Rtrim($Bonus_Pct_to_Use, ' ') = ''
    Let $Bonus_Pct_to_Use = '2'
  End-If

  If Rtrim($Bonus_Award_Dt, ' ') = ''
    Let $Bonus_Award_Dt = $AsOfToday
  End-If

  
  
  

  Do GEXXX900-Select-Company-Parameters
 
  Do GEXXX901-Select-Company-Paygroup-Parameters
 
  Do GEXXX902-Select-Deptid-Parameters
 
  Do GEXXX903-Select-Emp-Stat-Parameters
 
  Do GEXXX907-Select-Div-Cd-Parameters 
 
  Do GEXXX909-Select-Acct-Cd-Parameters
 
  Do GEXXX913-Select-Union-Cd-Parameters
 
  
  
  Do GEXXX930-Select-Emp-Type-Parameters
  
   
 If  $GEXXX903_Include_Emp_Stat_Criteria = 'j.empl_status = j.empl_status' 
     Let $include_Termination_Crieteria = $GEXXX903_Include_Emp_Stat_Criteria 
    
 End-If
  

 If $GEXXX903_Include_Emp_Stat_Criteria <> 'j.empl_status = j.empl_status'
  
 	   Find 'A' in $GEXXX903_Include_Emp_Stat_Criteria  0  #A_Loc
  	     IF #A_Loc <> -1

          
          Let $include_Termination_Crieteria = '(j.fieldvalue in (''T'',''R''))'

             Else 
                Let $include_Termination_Crieteria = $GEXXX903_Include_Emp_Stat_Criteria  
             End-If
          
 End-If
 
 
 
End-Procedure

!***********************************************************************
Begin-Procedure GEXPY214-Select-Parameters
!***********************************************************************

Begin-Select
rc.gex_rc_cmp_comp
rc.GEX_RC_SFC1_MCP
rc.gex_rc_sfc2_tsr
rc.gex_Rc_rpm1_tss
rc.gex_rc_rpm2_ci
rc.gex_rc_rpm3_css
rc.gex_term_cutoff_dt

  
  
From ps_gex_rc_gexpy214 rc
Where rc.OPRID = $prcs_oprid
And rc.RUN_CNTL_ID = $prcs_run_cntl_id

End-Select
End-Procedure

!***********************************************************************
Begin-Procedure Get-Values
!***********************************************************************
   Let $language_cd = $PRCS_LANGUAGE_CD
   !do Get-From-Thru-Date
   
End-Procedure

!***********************************************************************
Begin-Procedure Select-pay-Begin_Dt 
!***********************************************************************
Begin-Select
min(pay_begin_dt)  &pay_begin_dt
  Let $From_Date=&pay_begin_dt
from ps_pay_calendar
where pay_begin_dt>=$from_Year
End-Select
End-Procedure

!***********************************************************************
Begin-Procedure Select-pay-End_Dt 
!***********************************************************************
Begin-Select
max(pay_end_dt) &pay_end_dt
  Let $Thru_Date=&pay_end_dt
from ps_pay_calendar
where pay_end_dt<=$Thru_year
End-Select
End-Procedure


!***********************************************************************************
Begin-Procedure Open-File
!***********************************************************************************

MOVE $CURRENT-DATE TO $CURRDT 'MMDDYY'
	ENCODE '<012>' INTO $NEXT
	encode '<009>' into $delim
      
   

  
   IF $sqr-platform='UNIX'
   	Let $path='{OUTFILE}'
   else
   	Let $path = '\\corp.gianteagle.com\common\HR\HRPS\Secure\Annual_Bonus\' 
   End-if 
    
   move #prcs_process_instance to $Process_instance 
   Let $File_Name = 'gexpy214'
   Let $file = $path ||Lower($File_Name)||'_'|| $Prcs_Process_instance || '.xls' 
   
   #debug8 Show '$filename:' $file_name
   #debug8 Show '$file:' $file
     
  Open $file
       As 1
       For-Writing
       Record=1000:Vary

End-Procedure


!***********************************************************************************
Begin-Procedure Print-header
!***********************************************************************************
 encode '<009>' into $tab

 
  Let $delim = $tab

string '' '' '' '' 'RETAIL BONUS ACTIVITY' '' '' '' '' '' '' '' '' by $delim into $string_col1
write 1 from $string_col1

string 'GEXPY214' '' '' '' 'REVIEW BONUS ACTIVITY' '' '' '' '' '' '' '' '' by $delim into $string_col2
write 1 from $string_col2
 


STRING 'Name ' 'Emplid ' ' Empl_Rcd '  ' Store Dept '  ' Job Code' ' Job Title ' ' Hire Date ' ' Salary ' ' Home Deptid ' ' Bonus Deptid' ' Bonus Amount '  ' Mode ' ' TimeStamp ' ' Comments ' by $delim into $string_cols

write 1 from $string_cols

end-Procedure


!***********************************************************************
Begin-Procedure P130-Print-Cover-Page
!***********************************************************************
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX907_Include_Div_Cd_Display_Criteria           ='   (+2,5)
  Print $GEXXX907_Include_Div_Cd_Display_Criteria                 (0,+2)
  Print '$GEXXX900_Include_Company_Display_Criteria          ='   (+1,5)
  Print $GEXXX900_Include_Company_Display_Criteria                (0,+2)
  Print '$GEXXX901_Include_Company_paygroup_Display_Criteria ='   (+1,5)
  Print $GEXXX901_Include_Company_paygroup_Display_Criteria       (0,+2)
  Print '$GEXXX902_Include_Deptid_Display_Criteria           ='   (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria	          (0,+2)
  Print '$GEXXX903_Include_Emp_Stat_Display_Criteria         ='   (+1,5)
  Print $GEXXX903_Include_Emp_Stat_Display_Criteria               (0,+2)
  Print '$GEXXX909_Include_Acct_Cd_Display_Criteria          ='   (+1,5)
  Print $GEXXX909_Include_Acct_Cd_Display_Criteria                (0,+2)
  Print '$GEXXX913_Include_Union_Cd_Display_Criteria         ='   (+1,5)
  Print $GEXXX913_Include_Union_Cd_Display_Criteria               (0,+2)
  Print '$Include_Jobcode_Display_Criteria          ='   	  (+1,5) 
  Print $Include_Jobcode_Display_Criteria                	  (0,+2) 
  
  Print '$GEXXX930_Include_Emp_Type_Display_Criteria         ='   (+1,5)
  Print $GEXXX930_Include_Emp_Type_Display_Criteria               (0,+2)

  Print 'As Of Date         ='              (+2,5)
  Print $AsOfDate                           (0,+2)
  Print 'Hire Date          ='              (+1,5)
  Print $Hire_Dt                            (0,+2)
  Print 'Salary Date        ='              (+1,5)
  Print $Salary_Dt                          (0,+2)
  Print 'From Date	    ='		    (+1,5)
  Print $From_Date                          (0,+2)
  Print 'End Date	    ='		    (+1,5)
  Print $Thru_Date			    (0,+2)
  print 'Term CutOff Date   ='		    (+1,5)
  Print $Term_CutOff_Date		    (0,+2)
  Print 'Bonus Award Date   ='              (+1,5)
  Print $Bonus_Award_Dt                     (0,+2)
  Print 'Run Type           ='              (+1,5)
  Print $Run_Type                           (0,+2)
  Print $ReportTitle2                       (0,+2)
  Print 'Bonus Pct to Use   ='              (+1,5)
  Print $Bonus_Pct_to_Use                   (0,+2)
  Print $Bonus_Pct                          (0,+2)
  Print 'Company Component  =' 		    (+1,5)
  Print #cmp_comp           		    (0,+2)
  Print 'Store Financial Component  ='      (+1,5)
  Print #SFC1-MCP           		    (0,+2)
  Print #SFC2-TSR			    (0,+2)
  Print 'Retail Performance Modifiers  ='   (+1,5)
  Print #RPM1-TSS			    (0,+2)
  Print #RMP2-TSSCI			    (0,+2)
  Print #RPM3-CSS			    (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'   (+5,2)
  Print $X000_Order_By                      (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
End-Procedure

!***********************************************************************
Begin-Procedure P150-Set-Optimizer-Goal
!***********************************************************************
#debug9 Show 'P150-Set-Optimizer-Goal'
  Begin-SQL
  !  Alter Session Set OPTIMIZER_GOAL=RULE;  !1289792 - GEXHR_BONUS2017
  End-SQL

!***********************************************************************
End-Procedure
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Emplid
!***********************************************************************
Let #Distinct_Employee_Count = 1
Do Select-Bonus-Group-Parameters

#debug8 SHOW $GEXXX900_Include_Company_Criteria
#debug8 SHOW $GEXXX901_Include_Company_Paygroup_Criteria
#debug8 SHOW $GEXXX902_Include_Deptid_Criteria
#debug8 SHOW $GEXXX903_Include_Emp_Stat_Criteria
#debug8 SHOW $GEXXX907_Include_Div_Cd_Criteria
#debug8 SHOW $GEXXX909_Include_Acct_Cd_Criteria
#debug8 SHOW $GEXXX913_Include_Union_Cd_Criteria
#debug8 SHOW $GEXXX930_Include_Emp_Type_Criteria
#debug8 SHOW $GEXXX214_Include_Bonus_Group_Criteria
#debug8 SHOW $Fromdate
#debug8 SHOW $ThruDate
#debug8 SHOW $Hire_Dt

Begin-Select DISTINCT
JOB.EMPLID 

	Let $Emplid = Ltrim(Rtrim(&JOB.EMPLID,' '),' ')
	
	Let #Distinct_Employee_Count = #Distinct_Employee_Count  + 1
	
	Do Insert-Emplid

FROM PS_JOB JOB, ps_gex_dept_tbl     GEXDT
WHERE JOB.EFFDT BETWEEN $From_date and $Thru_Date
AND JOB.DEPTID = GEXDT.DEPTID
AND  GEXDT.EFFDT = (SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
      			WHERE  DEPTID       = GEXDT.DEPTID
       			AND    EFFDT       <= $AsOfDate)
AND  GEXDT.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM   PS_GEX_DEPT_TBL
       					WHERE  DEPTID       = GEXDT.DEPTID
       					AND    EFFDT        = GEXDT.EFFDT)
       					
AND  [$GEXXX900_Include_Company_Criteria]
AND  [$GEXXX901_Include_Company_Paygroup_Criteria] 
AND  [$GEXXX902_Include_Deptid_Criteria]
AND  [$GEXXX903_Include_Emp_Stat_Criteria]
AND  [$GEXXX907_Include_Div_Cd_Criteria]
AND  [$GEXXX909_Include_Acct_Cd_Criteria]
AND  [$GEXXX913_Include_Union_Cd_Criteria]
AND  [$GEXXX930_Include_Emp_Type_Criteria]
!ISDVVXK  GEXHR_848_E161362_BONUS2014-Begins
!And  JOB.JOBCODE in (SELECT DISTINCT BN.JOBCODE FROM PS_GEX_JOBCODE_TBL BN WHERE [$GEXXX214_Include_Bonus_Group_Criteria])
And  JOB.jobcode in (SELECT DISTINCT BN.JOBCODE FROM PS_GEX_JOBCODE_TBL BN 
                     WHERE [$GEXXX214_Include_Bonus_Group_Criteria]
                     AND BN.EFFDT = (SELECT MAX(BN1.EFFDT) FROM PS_GEX_JOBCODE_TBL BN1 
		   		         WHERE BN1.SETID = BN.SETID
		   		           AND BN1.GEX_BONUS_GROUP = BN.GEX_BONUS_GROUP
		   		           AND BN1.JOBCODE = BN.JOBCODE
		   		           AND BN1.EFFDT<=SYSDATE)
		     AND BN.STATUS='A'	 )
!ISDVVXK  GEXHR_848_E161362_BONUS2014-Ends		     
AND  JOB.LAST_HIRE_DT <= $Hire_Dt
End-Select
#debug8 Show 'Distinct_Employee_Count :'#Distinct_Employee_Count
Do Get-Emplid-2
#debug8 Show 'Distinct_Employee_Count :'#Distinct_Employee_Count
!***********************************************************************
End-Procedure Get-Emplid
!***********************************************************************
!***********************************************************************
Begin-Procedure Get-Emplid-2
!***********************************************************************
Let $GEXXX900_Company_Alias  = 'JM2.company'
Let $GEXXX901_Company_Alias  = 'JM2.company'
Let $GEXXX901_Paygroup_Alias = 'JM2.paygroup'
Let $GEXXX902_Deptid_Alias   = 'JM2.deptid'
Let $GEXXX903_Emp_Stat_Alias = 'JM2.empl_status'
Let $GEXXX907_Div_CD_Alias   = 'GEXNXT.gex_company_div_cd'
Let $GEXXX909_Acct_CD_Alias  = 'JM2.acct_cd'
Let $GEXXX913_Union_Cd_Alias = 'JM2.union_cd'
Let $GEXXX916_Jobcode_Alias  = 'JM2.jobcode'
Let $GEXXX930_Emp_Type_Alias = 'JM2.empl_type'


Do GEXXX900-Select-Company-Parameters
Do GEXXX901-Select-Company-Paygroup-Parameters
Do GEXXX902-Select-Deptid-Parameters
Do GEXXX903-Select-Emp-Stat-Parameters
Do GEXXX907-Select-Div-Cd-Parameters 
Do GEXXX909-Select-Acct-Cd-Parameters
Do GEXXX913-Select-Union-Cd-Parameters

Do GEXXX930-Select-Emp-Type-Parameters

#debug8 SHOW $GEXXX900_Include_Company_Criteria
#debug8 SHOW $GEXXX901_Include_Company_Paygroup_Criteria
#debug8 SHOW $GEXXX902_Include_Deptid_Criteria
#debug8 SHOW $GEXXX903_Include_Emp_Stat_Criteria
#debug8 SHOW $GEXXX907_Include_Div_Cd_Criteria
#debug8 SHOW $GEXXX909_Include_Acct_Cd_Criteria
#debug8 SHOW $GEXXX913_Include_Union_Cd_Criteria
#debug8 SHOW $GEXXX930_Include_Emp_Type_Criteria
#debug8 SHOW $GEXXX214_Include_Bonus_Group_Criteria
#debug8 SHOW $Fromdate
#debug8 SHOW $ThruDate
#debug8 SHOW $Hire_Dt

 
 
Begin-Select DISTINCT
JM2.EMPLID 

	Let $Emplid = Ltrim(Rtrim(&JM2.EMPLID,' '),' ')
	
	Let #Distinct_Employee_Count = #Distinct_Employee_Count  + 1
	
	Do Insert-Emplid
	
FROM PS_JOB JM2, PS_GEX_DEPT_TBL  GEXNXT
WHERE JM2.DEPTID = GEXNXT.DEPTID
AND  GEXNXT.EFFDT = (SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
      			WHERE  DEPTID       = GEXNXT.DEPTID
       			AND    EFFDT       <= $AsOfDate)
AND  GEXNXT.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM   PS_GEX_DEPT_TBL
       					WHERE  DEPTID       = GEXNXT.DEPTID
       					AND    EFFDT        = GEXNXT.EFFDT)
And    JM2.EFFDT            = (SELECT MAX(JM21.EFFDT) fROM   PS_JOB JM21 WHERE  JM21.EMPLID       = JM2.EMPLID
       					AND    JM21.EMPL_RCD    = JM2.EMPL_RCD
       					AND    JM21.EFFDT       < $From_Date)
And    JM2.EFFSEQ           = (SELECT MAX(jm22.EFFSEQ) FROM   PS_JOB JM22 WHERE  JM22.EMPLID       = JM2.EMPLID
       				AND    JM22.EMPL_RCD    = JM2.EMPL_RCD
       				AND    JM22.EFFDT        = JM2.EFFDT)

AND  [$GEXXX900_Include_Company_Criteria]
AND  [$GEXXX901_Include_Company_Paygroup_Criteria] 
AND  [$GEXXX902_Include_Deptid_Criteria]
AND  [$GEXXX903_Include_Emp_Stat_Criteria]
AND  [$GEXXX907_Include_Div_Cd_Criteria]
AND  [$GEXXX909_Include_Acct_Cd_Criteria]
AND  [$GEXXX913_Include_Union_Cd_Criteria]
AND  [$GEXXX930_Include_Emp_Type_Criteria]
!ISDVVXK  GEXHR_848_E161362_BONUS2014-Begins
!And  JM2.jobcode in (SELECT DISTINCT BN.JOBCODE FROM PS_GEX_JOBCODE_TBL BN WHERE [$GEXXX214_Include_Bonus_Group_Criteria])
And  JM2.jobcode in (SELECT DISTINCT BN.JOBCODE FROM PS_GEX_JOBCODE_TBL BN 
                     WHERE [$GEXXX214_Include_Bonus_Group_Criteria]
                     AND BN.EFFDT = (SELECT MAX(BN1.EFFDT) FROM PS_GEX_JOBCODE_TBL BN1 
		   		         WHERE BN1.SETID = BN.SETID
		   		           AND BN1.GEX_BONUS_GROUP = BN.GEX_BONUS_GROUP
		   		           AND BN1.JOBCODE = BN.JOBCODE
		   		           AND BN1.EFFDT<=SYSDATE)
		     AND BN.STATUS='A'	 )
!ISDVVXK  GEXHR_848_E161362_BONUS2014-Ends		     
AND  JM2.LAST_HIRE_DT <= $Hire_Dt
AND JM2.EMPLID NOT IN (SELECT DISTINCT TMP.EMPLID FROM PS_GEX_R_GEXPY214A TMP)
End-Select
!***********************************************************************
End-Procedure Get-Emplid-2
!***********************************************************************

!***********************************************************************   
Begin-Procedure Insert-Emplid
!***********************************************************************
Begin-Sql 
Insert Into PS_GEX_R_GEXPY214A
(EMPLID
 )
Values
($Emplid)
End-Sql
!***********************************************************************
End-Procedure Insert-Emplid
!***********************************************************************

!***********************************************************************
Begin-Procedure P200-Main-Process
!***********************************************************************
  Let $JOBCD = ''         
  Let $Jobcode1 =''       
  Let $Curr_Jobcode = ''  
  Let $Jobcodedescr=''    
  Let $max_duration_deptid='' 
  Let #MAX_DURA = 0   
   Let $Gex_Non_Max_Dept_bonus_Group = ''    !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
  Clear-array  Name=Employee_All_Bonus
  Clear-array  Name=Final_Employee_All_Bonus    
  Let #AllBonus = 1 !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
#debug9 Show 'P200-Main-Process'
Begin-Select
!Vendaxg Modified for Bonus Processing 2011 on 06/15/2011 - Begin
PD2.NAME     !()  On-Break  Level=1
              !             Print=Never

J.COMPANY    !()  On-Break  Level=2
             !              Print=Never

J.DEPTID     !()  On-Break  Level=3
             !              Print=Never
                           

J.EMPL_TYPE  !()  On-Break  Level=4
             !              Print=Never
              !             Before=New-Page
              !             After=P280-Empl-Type-Totals
!Vendaxg Modified for Bonus Processing 2011 on 06/15/2011 - End
J.EMPL_STATUS
J.JOBCODE
PD.NAME
J.EMPLID
J.EMPL_RCD
J.ACCT_CD
E.HIRE_DT
J.TERMINATION_DT
J.REPORTS_TO
J.LAST_HIRE_DT

  Let $Emplid    	= &J.EMPLID
  Let #Empl_Rcd_Nbr 	= &J.EMPL_RCD
  Let $Empl_Rcd 	= &J.EMPL_RCD  
  Let $Officer   	= &PD2.NAME
  Let $Company   	= &J.COMPANY
  Let $Deptid    	= &J.DEPTID
  Let $Acctcd    	= &J.ACCT_CD
  Let $Empl_Type 	= &J.EMPL_TYPE
  Let $Empl_Status 	= &J.EMPL_STATUS
  Let $Curr_Jobcode 	= &J.JOBCODE
  Let $Jobcd 		= &J.JOBCODE
  Let $Reports_to 	= &J.REPORTS_TO
  Let $Hire_Dt_File	= &E.HIRE_DT
  Let $Last_hire_Dt	= &J.LAST_HIRE_DT
  
  #debug8 Show '**********************************************************************************'
  #debug8 Show 'Last Hire Date : '$Last_hire_Dt
  Do Get-Jobcode
  Let $EmployeeFound='Y' 
   
  
  If $EmployeeFound='Y'            
  
  	!Do Get-HireDt
   
  	Let $Name      = &pd.Name
  	Let $Termination_Dt= &j.Termination_Dt

  	Let $Current_Found = 'N'
  	
  	Do Calculate_Max_Duration_Deptid
  	#debug8 Show 'Maximum Duration Deptid : '$Max_Dept
        Let $Max_Duration_Deptid = $Max_Dept
        Do Get-Bonus-group
        #debug8 Show ' $Max_Duration_Deptid: '  $Max_Duration_Deptid ' Bonnus Group : '$Gex_Dept_bonus_Group  
        Do Select-MaxDurationJobcode 
  	
  	
  	Let $Jobcode1    = $Max_Dept_Jobcode
  	Let $Jobcodedescr = $Maxjobcodedescr
   
  	Let #Year = #Current_Year
  	
    	Do P220-Bonus-Table-Current-Year

  	Let #Current_Min_Pct     = &Bonus.Gex_Min_Bonus_Pct
  	Let #Current_Tar_Pct     = &Bonus.Gex_Tar_Bonus_Pct
  	Let #Current_Max_Pct     = &Bonus.Gex_Max_Bonus_Pct
  	Let #Current_Csi_Adj_Pct = &Bonus.Gex_Csi_Adj_Pct
  	Let #Current_Bonus_Amt   = &Bonus.Gex_Bonus_Amt

    !1289792 - GEXHR_BONUS2017 Begin  
  	!Let #Current_Mid_One     = (#Current_Min_Pct + #Current_Tar_Pct) / 2
  	!Let #Current_Mid_Two     = (#Current_Tar_Pct + #Current_Max_Pct) / 2
    Let #current_mid_one     = (#current_tar_pct - #current_min_pct )
    Let #current_mid_two     = (#current_max_pct - #current_tar_pct )
    !1289792 - GEXHR_BONUS2017 Ends

    !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
    !1289792 - GEXHR_BONUS2017 Begins
    !Let #current_mid_three   = (#current_tar_pct - #current_min_pct)
    Let #current_mid_three   = #current_max_pct
    !1289792 - GEXHR_BONUS2017 Ends
    !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends

  	Let $Skip = 'Y'

  
  	If $Run_Type = '1'
  	  	Let $Skip = 'N'
  	Else
  	  	If $Run_Type = '2'
     			#debug8 Show '&Bonus.Gex_Bonus_Status ' &Bonus.Gex_Bonus_Status
  			If &Bonus.Gex_Bonus_Status <> '4'
  			      Let $Skip = 'N'
  			End-If
  		End-if
  	End-If
  
  
   
  	Do Check-Leave-Duration
  
  	#debug8 Show '#Leave-Duration: ' #Leave-Duration
  	! Commentd by sitansh for bonus year 2012    		  	
  	!If #Leave-Duration > 6
  	!	#debug8 Show ' ********** Leave Crietria : Skipping Employee (Leave-Duration > 6 Months)  '
  	!	Let $Skip = 'Y'
  	!End-If
        Let $Leave_Duration_prorate = 'N'
 	If #Leave-Duration > 9 ! Changed by sitansh for bonus year 2012
 		#debug8 Show ' ********** Leave Crietria : Skipping Employee (Leave-Duration > 6 Months)  '
   		Let $Skip = 'Y'
   	Else
   		!GEXHR_848_PRJ95045_BONUS_2013 2013-05-02 ISDVNPK 
   	    		!if #Leave-Duration < 9 and #Leave-Duration > 3
   	    		if #Leave-Duration <= 9 and #Leave-Duration > 4 ! Changed by ISDVNPK for bonus year 2013
		!GEXHR_848_PRJ95045_BONUS_2013 2013-05-02 ISDVNPK 
   	      		Let $Leave_Duration_prorate = 'Y'
		End-if
	 End-If ! Changed by sitansh End  
   
  	#debug8 Show 'After leave compare logic ' $Skip 
   	
	IF  ((($Empl_Status='T') or ($Empl_Status='Q') or ($Empl_Status='R') or ($Empl_Status='U') )
		And (($Termination_Dt <= $cutoff_dt)or ($Termination_Dt > $Fiscal_Start_Dt)))
       
  		Let $Skip = 'Y'
  		#debug8 Show ' ********** Term Crietria : Skipping Employee ' 'Emplid: ' $emplid  '$Empl_Status: ' $Empl_Status ' $termination_Dt: ' $termination_Dt ' ,'' $Fiscal_Start_Dt: '  $Fiscal_Start_Dt ' , $cutoff_dt: '  $cutoff_dt
  		
  	End-If
   
  
  	
  	Do Get-Bonus-RunControl
  	If $Gex_Dept_bonus_Group <> ''
  		If $Bonus_Group_Found = 'Y'
  			
  			#debug8 Show 'Bonus Group Criteria Satisfied :'$Gex_Dept_bonus_Group
  		Else
  			Do Check-Bonus-Group-Runcontrol
  			If $Bonus_Group_In_Runcontrol = 'N'
  			
  				#debug8 Show 'No Bonus group IN the runcontrol :'$Gex_Dept_bonus_Group
  			Else
  				Let $Skip = 'Y'
  				#debug8 Show 'Bonus Group Criteria Not Satisfied :'$Gex_Dept_bonus_Group
  			End-if
  		End-if
  	Else
  		Let $Skip = 'Y'
  		#debug8 Show 'Bonus Group Blank Skip Employee'
  	End-if
  	If $Skip = 'N'
  		Let $OK-To-Advance-Page = 'Y'
  		Let $Data-Found-Flag = 'Y'
  	  
  		Let #Year = #Previous_Year
  		Do P220-Bonus-Table-Select
      

  		  Let #Annual_Rt            = &Annual_Rt
    		Let #Hourly_Rt            = 0
    		Let #Weekly_Rt            = &Annual_Rt / 52
    		Let #Previous_Min_Pct     = &Gex_Min_Bonus_Pct
    		Let #Previous_Tar_Pct     = &Gex_Tar_Bonus_Pct
    		Let #Previous_Max_Pct     = &Gex_Max_Bonus_Pct
    		Let #Previous_Csi_Adj_Pct = &Gex_Csi_Adj_Pct
    		Let #Previous_Bonus_Amt   = &Gex_Bonus_Amt
        !1289792 - GEXHR_BONUS2017 Begins    		
    		!Let #Previous_Mid_One     = (#Previous_Min_Pct + #Previous_Tar_Pct) / 2
    		!Let #Previous_Mid_Two     = (#Previous_Tar_Pct + #Previous_Max_Pct) / 2
    		Let #previous_mid_one     = (#previous_tar_pct - #previous_min_pct )
    		Let #previous_mid_two     = (#previous_max_pct - #previous_tar_pct )
        !1289792 - GEXHR_BONUS2017 Ends
        !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
        !1289792 - GEXHR_BONUS2017 Begins 
        !Let #previous_mid_three   = (#previous_tar_pct - #previous_min_pct)
        Let #previous_mid_three   = #previous_max_pct
        !1289792 - GEXHR_BONUS2017 Ends
        !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
		Let $Salary_Effdt = $Salary_Dt
	        
   		!Do Get-EE-Salary	!GEXPY_848_E95094_02 2012-05-22 VENDAXG 
    		#debug8 Show 'After Gex-EE-Salary : '#Annual_Rt
    		Evaluate $Run_Type
    		When = '1'
        		Let $Update_Status = '1'
      		When = '2'
      	  		Let $Update_Status = '2'
    		End-Evaluate
    
    
    		
     		Do GetEEPctFromRuncntl  
     		#debug8  Show 'After GetEEPctFromRuncntl in Main Procedure : '#Annual_Rt
     		#debug8 Show '$Current_Found :' $Current_Found ' $Pctfound :' $Pctfound
     
    
   		If $Current_Found = 'N'  AND  $PCTFOUND ='N'
   			Let #Current_Min_Pct     = #Previous_Min_Pct
      			Let #Current_Tar_Pct     = #Previous_Tar_Pct
      			Let #Current_Max_Pct     = #Previous_Max_Pct
      			Let #Current_Csi_Adj_Pct = #Previous_Csi_Adj_Pct
      			Let #Current_Bonus_Amt   = 0
      		
      			Let #Current_Mid_One     = #Previous_Mid_One
      			Let #Current_Mid_Two     = #Previous_Mid_Two
            !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
            Let #current_mid_three   = #previous_mid_three
            !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
      			If $Run_Type = '2'
      				
      			End-If
      
    		ELSE
    
    			If $Current_Found = 'N'  AND  $Pctfound ='Y'
     				Let #Current_Csi_Adj_Pct = #Previous_Csi_Adj_Pct
     	 			Let #Current_Bonus_Amt   = 0
     	 			If $Run_Type = '2'
      					
      				End-If
    		
    			End-If
    		End-If
    
  		!Do Find-Salary-AsofRuncontrol	!GEXPY_848_E95094_02 2012-05-22 VENDAXG 
  		Do Get-EE-Salary	!GEXPY_848_E95094_02 2012-05-22 VENDAXG 
  		Do Get-All-Jobcode 
  		#debug8  Show 'After Get-All-Jobcode in Main Procedure : '#Annual_Rt
    		Let  #XY=0
    		Let #Amount = 1
    		Let #Final_Bonus_Amount = 0
    		Let $Promotion_Found_Flag = 'N'
    		!While #XY <#Final_Jobcode_Row_Count
		While #XY < #Row_Count
          
    			!Let #XY=#XY+1
    			!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start
    			!Get $All_Jobcode $All_Position_Nbr $All_Grade #Duration from Final-Jobcode-List(#XY) !Vendaxg Modified for Bonus Processing 2011 on 06/15/2011 
    			!Vendaxg Modified 2012 Testing Start
    			!Get $All_Jobcode $All_Position_Nbr $All_Grade $All_DeptID #Duration from Final-Jobcode-List(#XY) !Vendaxg Modified for Bonus Processing 2011 on 06/15/2011 
    			Get $All_Jobcode $All_Position_Nbr $All_Grade $All_DeptID #All_Annual_Rt $All_Promotion_found #Duration from Jobcode(#Row_Count)
          
          If substr($All_DeptID,1,1)  <> 'C' And substr($All_DeptID,1,1)  <> 'W'   !MM 08/21/2017 GEXPY214 should process only retail department
    
            			If $All_Promotion_found = 'Y'
            				Let #Pro_Annual_Rt = #All_Annual_Rt
            				Let $Promotion_Found_Flag = 'Y'
            			Else
            				!Let #Annual_Rt = #Annual_Rt_Asof_runcontrol
            			End-if
            			If $Promotion_Found_Flag = 'Y'
            				Let #Annual_Rt = #Pro_Annual_Rt
            			Else
            			End-if
            			!Let #Row_Count = #Row_Count - 1    !MM 08/21/2017
            			!Vendaxg Modified 2012 Testing End
            			!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
            		#debug8 Show '****************** Processing  Jobcode ' $All_Jobcode ' ********************'
           			#debug8 Show 'Main Get $All_Jobcode :'$All_Jobcode ' $All_Position_Nbr :' $All_Position_Nbr ' All_DeptID :' $All_DeptID ' #Duration :'#Duration
           		 	Let $Jobcd = $All_Jobcode
           		 	Let $Gex_Position_Nbr = $All_Position_Nbr !Vendaxg Added for Bonus Processing 2011 on 06/15/2011 
           			Let #Ee_Pct = 0   
           			Let #Current_Bonus_Amt = 0
           			!Vendaxg Added for Bonus Processing 2011 on 06/15/2011 - Begin
           			Let $Non_Max_DeptID = $All_DeptID
           			Do Get-Non-Max-Bonus-group
           			Do Gex-EE-Exception-Pct
           			If $Exception_Found = 'Y'
           			Else
            				Do GetEEPctFromRuncntl 
            			End-if
            			!Vendaxg Added for Bonus Processing 2011 on 06/15/2011 - End
            			
            			If $Pctfound= 'Y' 
           	
           				Evaluate $Bonus_Pct_to_Use
              				When = '1'
              					Let #Ee_Pct = #Current_Min_Pct
              				When = '2'
                        !1289792 - GEXHR_BONUS2017 Begins
                				!Let #Ee_Pct = #Current_Mid_One
                				Let #Ee_Pct = #current_min_pct + (#current_mid_one * #profit_pct)	
                        !1289792 - GEXHR_BONUS2017 Ends
              				When = '3'
                				Let #Ee_Pct = #Current_Tar_Pct
              				When = '4'
                        !1289792 - GEXHR_BONUS2017 Begins
                				!Let #Ee_Pct = #Current_Mid_Two	
                				Let #Ee_Pct = #current_tar_pct + (#current_mid_two * #profit_pct)
                        !1289792 - GEXHR_BONUS2017 Ends
              				When = '5'
                				Let #Ee_Pct = #Current_Max_Pct
                        !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins                         
                      When = '6'
                          Show '#profit_pct :' #profit_pct
                          !1289792 - GEXHR_BONUS2017 Begins
                          !Let #Ee_pct = #current_min_pct + (#current_mid_three * #profit_pct)  
                          Let #Ee_pct = #current_max_pct + (#current_mid_three * #profit_pct)
                          Show '#current_mid_three :' #current_mid_three
                          !1289792 - GEXHR_BONUS2017 Ends
                          Show '#ee_pct :' #ee_pct  
                        !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends 
            				End-Evaluate
            
            				Let #Ee_Csi = #Current_Csi_Adj_Pct
           				Let #Gex_Bonus_Pct_Used = #Ee_Pct !Vendaxg Modified for Bonus Processing 2011 on 06/15/2011
           				Let #Ee_Pct = #Ee_Pct * (#Pct_of_Pct_Used / 100)	!GEXPY_848_E95094_02 2012-05-22 VENDAXG 
            				If #Current_Bonus_Amt = 0
            
               					If $Empl_Type = 'S'
               	
               						
               						Let #Calc_Bonus = #Annual_Rt * #Ee_Pct
                	
                					#debug8 Show '#Annual_Rt :' #Annual_Rt ' #Calc_Bonus :'#Calc_Bonus ' #Current_Bonus_Amt' #Current_Bonus_Amt
                					#debug8 Show ' #Annual_Rt , #Ee_Pct,#Cmp_Comp, Bonus: ' #Annual_Rt ' ,' #Ee_Pct ' ,' #Cmp_Comp ' ,' #current_bonus_amt
                					Do Select-Reatil-Kickers
                					
                					#debug8 Show 'Kicker flags: '  '$sfc1-mcp-flg: ' #sfc1-mcp-flg  '$sfc2-tsr-flg: ' #sfc2-tsr-flg '$rpm1-tss-flg: ' #rpm1-tss-flg  '#rpm2-tssci-flg: ' #rpm2-tssci-flg  '$rpm3-css-flg: '  #rpm3-css-flg '$Gex_Company_Comp: '  #Gex_Company_Comp 
        						Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #Ee_Pct) * #Sfc1-Mcp-Flg
        						Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #Ee_Pct) * #Sfc2-Tsr-Flg
        						Let #Current_Bonus_Amt = #Current_Bonus_Amt + #Annual_Rt * #Rpm1-Tss-Flg
        						Let #Current_Bonus_Amt = #Current_Bonus_Amt + #Annual_Rt * #Rpm2-Tssci-Flg
        						Let #Current_Bonus_Amt = #Current_Bonus_Amt + #Annual_Rt * #Rpm3-Css-Flg 
        						Let #Current_Bonus_Amt = #Current_Bonus_Amt + #Annual_Rt * #Stretch_css_flg 	!GEXPY_848_E95094_02 2012-05-22 VENDAXG 
        						Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #Ee_Pct) * #Gex_Company_Comp
        						! Commented by sitansh for 2012
        						!#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For Bonus Duration : '#DurfromRctl
        						!Let #current_bonus_amt = (#current_bonus_amt * #Duration) / #DurfromRctl
        						!#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For :' #Duration ' Days'
        						! Added by sitansh for 2012 - Begin
               					#debug8 Show 'Total Salary Leave Duration: '#Total_Leave_S  
               					#debug8 Show 'Pro-rate Leave: '$Leave_Duration_prorate  
        						if $Leave_Duration_prorate = 'Y'
        							#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For Bonus Duration : '#DurfromRctl
        							Let #current_bonus_amt = (#current_bonus_amt * (#Duration / #DurfromRctl) * ((#DurfromRctl - #Total_Leave_S) / #DurfromRctl))
        							#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For :' #Duration ' Days'
        						Else
        							#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For Bonus Duration : '#DurfromRctl
        							Let #current_bonus_amt = (#current_bonus_amt * #Duration) / #DurfromRctl
        							#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For :' #Duration ' Days'
        						End-if
        						! Added by sitansh for 2012 - End														
        						Let #Final_Bonus_Amount = #Final_Bonus_Amount + #current_bonus_amt
                   					#debug8 Show '******  Final_bonus_amt  ******' #Final_Bonus_Amount
                   					Let #Annual_Rt_Bonus_Cal = #Annual_Rt
                	
              					Else !$Empl_Type = 'H'
               						!Vendaxg Added for Bonus Processing 2011 on 06/15/2011 - Start
                					!Let #annualized_sal = #weekly_rt * 52
                					Let #annualized_sal = #Annual_Rt
                					!Vendaxg Added for Bonus Processing 2011 on 06/15/2011 - End            
                					Let #calc_bonus = #annualized_sal * #ee_pct
                					
               						#debug8 Show '****** Hourly Emplid #annualized_sal , #ee_pct,#cmp_comp, bonus: ' #annualized_sal ' ,' #ee_pct ' ,' #cmp_comp ' ,' #current_bonus_amt ' #Std_hours :'#Std_hours
               			 			Do Select-Reatil-Kickers
                	
                					#debug8 Show 'Kicker flags: '  '$sfc1-mcp-flg: ' #sfc1-mcp-flg  '$sfc2-tsr-flg: ' #sfc2-tsr-flg '$rpm1-tss-flg: ' #rpm1-tss-flg  '#rpm2-tssci-flg: ' #rpm2-tssci-flg  '$rpm3-css-flg: '  #rpm3-css-flg '$Gex_Company_Comp: '  #Gex_Company_Comp 
                	
                					Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annualized_Sal * #Ee_Pct) * #Sfc1-Mcp-Flg
                					Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annualized_Sal * #Ee_Pct) * #Sfc2-Tsr-Flg
                					Let #Current_Bonus_Amt = #Current_Bonus_Amt + #Annualized_Sal * #Rpm1-Tss-Flg
                					Let #Current_Bonus_Amt = #Current_Bonus_Amt + #Annualized_Sal * #Rpm2-Tssci-Flg
                					Let #Current_Bonus_Amt = #Current_Bonus_Amt + #Annualized_Sal * #Rpm3-Css-Flg 
                					Let #Current_Bonus_Amt = #Current_Bonus_Amt + #Annualized_Sal * #Stretch_css_flg	!GEXPY_848_E95094_02 2012-05-22 VENDAXG 
                					Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annualized_Sal * #Ee_Pct) * #Gex_Company_Comp
                					!#debug8 Show 'current Bonus Amount : '#Current_Bonus_Amt ' For Job Code: ' $Jobcd ' For Bonus Duration :'#DurfromRctl
        						! Commented by sitansh for 2012        					
                					!Let #Current_Bonus_Amt = (#Current_Bonus_Amt * #Duration) / #DurfromRctl
                					!#debug8 Show 'current Bonus Amount : '#Current_Bonus_Amt ' For Job Code: ' $Jobcd ' For :' #Duration ' Days'
        						! Added by sitansh for 2012 - Begin
               					#debug8 Show 'Total Hourly Leave Duration: '#Total_Leave_H
               					#debug8 Show 'Pro-rate Leave: '$Leave_Duration_prorate  
        						if $Leave_Duration_prorate = 'Y'								
                						#debug8 Show 'current Bonus Amount : '#Current_Bonus_Amt ' For Job Code: ' $Jobcd ' For Bonus Duration :'#DurfromRctl
                						Let #Current_Bonus_Amt = (#current_bonus_amt * (#Duration / #DurfromRctl) * ((#DurfromRctl - #Total_Leave_H) / #DurfromRctl))
                						#debug8 Show 'current Bonus Amount : '#Current_Bonus_Amt ' For Job Code: ' $Jobcd ' For :' #Duration ' Days'								
                					Else
                						#debug8 Show 'current Bonus Amount : '#Current_Bonus_Amt ' For Job Code: ' $Jobcd ' For Bonus Duration :'#DurfromRctl
                						Let #Current_Bonus_Amt = (#Current_Bonus_Amt * #Duration) / #DurfromRctl
                						#debug8 Show 'current Bonus Amount : '#Current_Bonus_Amt ' For Job Code: ' $Jobcd ' For :' #Duration ' Days'								
        						End-if
        						! Added by sitansh for 2012 - End																						
                   					Let #Final_Bonus_Amount = #Final_Bonus_Amount + #Current_Bonus_Amt
                   					#debug8 Show '******  Final_Bonus_Amt  ******' #Final_Bonus_Amount
              						Let #Annual_Rt_Bonus_Cal = #Annualized_Sal
              	
              					End-If !Empl_Type='S'
            				End-if 
            			        
            			        
            			        !Vendaxg Added for Bonus Processing 2011 on 06/13/2011 - Begin
        				Do Check-Delegation
        				If $Delegation_Found = 'Y'
        					Let $Reports_to = $New_Reports_to
        				Else
        				
        					Do Check-Valid-Reports-To
        					Show 'Employee Reports to : '$Reports_to
        						If $Employee_Found_in_Position = 'Y'
        							Show 'First No Reports To position found for Position Number: '$Reports_to
        						Else
        							Let #k = 1
        							while #k < 5 
        								Do Get-Position-Reports-To
        								Let $Reports_to = $Reports_to_Position
        								Do Check-Valid-Reports-To
        								If $Employee_Found_in_Position = 'Y'
        									!Let $Reports_to = $Reports_to_Position
        									Show 'Reports To position found for Position Number: '$Reports_to ' #k :' #k
        									Break
        								Else
        									!Let $Reports_to = $Reports_to_Position
        									Show 'No Reports To position found for Position Number: '$Reports_to ' #k :'#k
        								End-if
        								Let #k = #k + 1
        							End-while
        						End-if
        						
            			        End-if
            			        !Vendaxg Added for Bonus Processing 2011 on 06/13/2011 - End
            				!Do Check-Bonus-Already-Calculated !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
            				If $Empl_Type = 'S'
            					Let #Annual_Rt_Bonus_Cal = #Annual_Rt
            				Else
            					Let #Annual_Rt_Bonus_Cal = #weekly_rt * 52
            				End-if
            				!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start
            				Put &j.Emplid &j.Empl_Rcd #Current_Year $Deptid $Empl_Type $Max_Duration_Deptid $Jobcd #Annual_Rt $Gex_Position_Nbr #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Gex_Bonus_Pct_Used #Current_Bonus_Amt #Current_Bonus_Amt $Gex_Dept_bonus_Group $Reports_to #Std_hours $All_grade Into Employee_All_Bonus(#AllBonus)
            				Let #AllBonus = #AllBonus + 1
            				!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
            				!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
            				!If $Bonus_Calculated = 'Y'
            				!	!Do Update-Bonus-Amount !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
            				!Else
            				!	!Do P270-Insert-GEX-Empl-Bonus-PCT !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
            				!	
            				!End-if
            				!Do write-file
            				!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
            			End-If
            		
            		Let #Amount = #Amount + 1
            	End-If	!MM 08/21/2017
              Let #Row_Count = #Row_Count - 1    !MM 08/21/2017
    		End-while 
    	
    
    	Let #BAmount = 0 
    	While #BAmount < #Amount
    		Let #BAmount= #BAmount + 1
    	
       	End-While
    	
    	Let #Current_Bonus_Amt = #Current_Bonus_Amt1
    	Let #Current_Bonus_Amt1 = 0
    	!Vendaxg Modified for Bonus Processing 2011 on 06/15/2011 - Begin 
    	!Add 1                   To #Type-Count
    	!Add 1                   To #Deptid-Count
	
    	!Add #Previous_Bonus_Amt To #Type_Previous_Bonus
    	!Add #Current_Bonus_Amt  To #Type_Current_Bonus
	
    	!Add #Previous_Bonus_Amt To #Deptid_Previous_Bonus
    	!Add #Current_Bonus_Amt  To #Deptid_Current_Bonus
	
    	
    	
    	!Add #Previous_Bonus_Amt To #Report_Previous_Bonus
    	!Add #Current_Bonus_Amt  To #Report_Current_Bonus
	
    	!Do P290-Print-Record
    	!Vendaxg Modified for Bonus Processing 2011 on 06/15/2011 - End
  	End-If
  End-if
  #debug8 Show '**********************************************************************************'
FROM   PS_GEX_DEPT_TBL     GDT,
       PS_GEX_MGMT_REPORT  GMR,
       PS_PERSONAL_DATA    PD2,
       PS_PERSONAL_DATA    PD,
       PS_EMPLOYMENT       E,
       PS_JOB              J

WHERE  PD.EMPLID	= J.EMPLID
AND    J.EMPLID 	= $EmplidFromArray        	
AND    PD2.EMPLID 	= Nvl(Nvl(Rtrim(gmr.gex_svpvp,' '),Rtrim(gmr.gex_evp,' ')),gmr.gex_ceo)
AND    E.EMPLID         = J.EMPLID
AND    E.EMPL_RCD       = J.EMPL_RCD
AND    J.EFFDT          = (SELECT Max(EFFDT) FROM PS_JOB WHERE EMPLID = J.EMPLID
       			   AND EMPL_RCD = J.EMPL_RCD
       			   AND EFFDT     <= $AsOfDate)
AND    J.EFFSEQ         = (SELECT Max(EFFSEQ) FROM PS_JOB WHERE  EMPLID  = J.EMPLID
       			   AND EMPL_RCD  = J.EMPL_RCD
       			   AND EFFDT     = J.EFFDT)
AND    GMR.DEPTID       = J.DEPTID
AND    GDT.DEPTID       = J.DEPTID
AND    GDT.EFFDT        = (SELECT Max(EFFDT) FROM PS_GEX_DEPT_TBL WHERE  DEPTID = J.DEPTID
       			   AND EFFDT <= $AsOfDate)
AND    GDT.SEQUENCE_NUMBER = (SELECT Max(SEQUENCE_NUMBER) FROM PS_GEX_DEPT_TBL WHERE  DEPTID = GDT.DEPTID
       			      AND EFFDT  = GDT.EFFDT)
AND    J.LAST_HIRE_DT <= $Hire_Dt
!and j.emplid='178586571'
ORDER bY PD2.NAME, J.COMPANY, J.DEPTID, J.EMPL_TYPE, PD.NAME
End-Select
 
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
Let #All_Bonus_Counter = 1
#debug8 Show '*************************** Total Jobcode Bonus Row ***********************'
While #All_Bonus_Counter < #AllBonus
	Get $Allbonus_Emplid #AllBonus_Empl_Rcd #Current_Year $Deptid $Empl_Type $Max_Duration_Deptid $Jobcd #Annual_Rt $Gex_Position_Nbr #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Gex_Bonus_Pct_Used #Current_Bonus_Amt #Current_Bonus_Amt $Gex_Dept_bonus_Group $Reports_to #Std_hours $All_grade From Employee_All_Bonus(#All_Bonus_Counter)
	Show $Allbonus_Emplid ':' #AllBonus_Empl_Rcd ':' #Current_Year ':' $Deptid ':' $Empl_Type ':' $Max_Duration_Deptid ':' $Jobcd ':' #Annual_Rt ':' $Gex_Position_Nbr ':' #Current_Min_Pct ':' #Current_Tar_Pct ':' #Current_Max_Pct ':' #Gex_Bonus_Pct_Used ':' #Current_Bonus_Amt ':' #Current_Bonus_Amt ':' $Gex_Dept_bonus_Group ':' $Reports_to ':' #Std_hours ':'  $All_grade 
	Let #All_Bonus_Counter = #All_Bonus_Counter + 1
End-While
#debug8 Show '*************************** Total Jobcode Bonus Row ***********************'
Do Sum-Distinct-Bonus-Jobcodes
Do Process-EE-Bonus-Rows
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
!***********************************************************************
End-Procedure P200-Main-Process
!***********************************************************************

!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
!***********************************************************************
Begin-Procedure Process-EE-Bonus-Rows
!***********************************************************************
Let #Counter_Insert = 1
While #Counter_Insert < #Final_Bonus_Jobcode_Row_Count
	
	Get $Final_Emplid #Final_Empl_Rcd #Current_Year $Deptid $Empl_Type $Max_Duration_Deptid $Jobcd #Annual_Rt $Gex_Position_Nbr #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Gex_Bonus_Pct_Used #Current_Bonus_Amt #Final_Bonus_Amt $Gex_Dept_bonus_Group $Reports_to #Std_hours $All_grade From Final_Employee_All_Bonus(#Counter_Insert)
	
  !MM 08/21/2017 BEGIN
  Let $Retail_Dept = $Deptid
  If translate($Deptid, '0123456789','') <> '' !Not a Retail Dept
        Do Get-Retail_Department
  End-if
  !MM 08/21/2017 END

	Do Check-Bonus-Already-Calculated 
	If $Bonus_Calculated = 'Y'
    		Do Update-Bonus-Amount 
    	Else
    		Do P270-Insert-GEX-Empl-Bonus-PCT 
    	End-if
    	Do write-file
	#debug8 Show $Final_Emplid ':' #Final_Empl_Rcd  ':' #Current_Year  ':' $Deptid  ':' $Empl_Type ':'  $Max_Duration_Deptid  ':' $Jobcd  ':' #Annual_Rt ':' $Gex_Position_Nbr  ':' #Current_Min_Pct ':'  #Current_Tar_Pct ':' #Current_Max_Pct  ':' #Gex_Bonus_Pct_Used ':'  #Current_Bonus_Amt  ':' #Final_Bonus_Amt  ':' $Gex_Dept_bonus_Group  ':' $Reports_to  ':' #Std_hours  ':' $All_grade
	Let #Counter_Insert = #Counter_Insert + 1
End-while
!***********************************************************************
End-Procedure Process-EE-Bonus-Rows
!***********************************************************************


!***********************************************************************
Begin-Procedure Sum-Distinct-Bonus-Jobcodes
!***********************************************************************
Let #Counter_Bonus_Jobcodes =0
Let $Prev_Distinct_Bonus_Jobcode = ''
Let #Distinct_Bonus_Jobcode_Count = 0
Let #Sum_Distinct_Bonus_JobCode_Duration = 0
Let #Final_Bonus_Jobcode_Row_Count = 0 
Let #Counter_Bonus_Jobcodes = #All_Bonus_Counter
!While #Counter_Bonus_Jobcodes < #All_Bonus_Counter
While #Counter_Bonus_Jobcodes > 0

   Let #Counter_Bonus_Jobcodes = #Counter_Bonus_Jobcodes - 1	
   Get $A_Emplid #A_Empl_Rcd #A_Year $Allbonus_Deptid $Allbonus_Empl_Type $Allbonus_Max_Duration_Deptid $Allbonus_Jobcd #All_Annual_Rt $Allbonus_Gex_Position_Nbr #Allbonus_Current_Min_Pct #Allbonus_Current_Tar_Pct #Allbonus_Current_Max_Pct #Allbonus_Gex_Bonus_Pct_Used #Allbonus_Current_Bonus_Amt #Allbonus_Current_Bonus_Amt $Allbonus_Gex_Dept_bonus_Group $Allbonus_Reports_to #Allbonus_Std_hours $Allbonus_All_grade From Employee_All_Bonus(#Counter_Bonus_Jobcodes)
   
   	Let $Bonus_JobCode_Found_Final_List = 'N'
   	Let #Counter_Bonus_Jobcodes2 = 0
   	While #Counter_Bonus_Jobcodes2 < #Final_Bonus_Jobcode_Row_Count
   		Let #Counter_Bonus_Jobcodes2 = #Counter_Bonus_Jobcodes2 + 1
   		Get $D_Emplid #D_Empl_Rcd #D_Current_Year $Dist_Bon_Deptid $Dist_Bon_Empl_Type $Dist_Bon_Max_Duration_Deptid $Dist_Bon_Jobcd #D_Annual_Rt $Dist_Bon_Gex_Position_Nbr #Dist_Bon_Current_Min_Pct #Dist_Bon_Current_Tar_Pct #Dist_Bon_Current_Max_Pct #Dist_Bon_Gex_Bonus_Pct_Used #Dist_Bon_Current_Bonus_Amt #Dist_Bon_Current_Bonus_Amt $Dist_Bon_Gex_Dept_bonus_Group $Dist_Bon_Reports_to #Dist_Bon_Std_hours $Dist_Bon_All_grade From Final_Employee_All_Bonus(#Counter_Bonus_Jobcodes2)
   		
   		If ($Dist_Bon_Deptid = $Allbonus_Deptid) AND  ($Dist_Bon_Max_Duration_Deptid = $Allbonus_Max_Duration_Deptid ) AND ( $Dist_Bon_Jobcd  = $Allbonus_Jobcd) 
   		
   			Let $Bonus_JobCode_Found_Final_List = 'Y' 
   		End-if
   	End-While
   	
   	If $Bonus_JobCode_Found_Final_List = 'N'
   		Let #Counter_Bonus_Jobcodes1 = 0
   		Let $Prev_All_Bonus_Jobcode = ''
   		Let #Sum_Distinct_Bonus_JobCode_Amount = 0 
   		While #Counter_Bonus_Jobcodes1 < #All_Bonus_Counter
   			Let #Counter_Bonus_Jobcodes1 = #Counter_Bonus_Jobcodes1 + 1
   			Get $F_Emplid #F_Empl_Rcd #F_Current_Year $Find_Bon_Deptid $Find_Bon_Empl_Type $Find_Bon_Max_Duration_Deptid $Find_Bon_Jobcd #F_Annual_rt $Find_Bon_Gex_Position_Nbr #Find_Bon_Current_Min_Pct #Find_Bon_Current_Tar_Pct #Find_Bon_Current_Max_Pct #Find_Bon_Gex_Bonus_Pct_Used #Find_Bon_Current_Bonus_Amt #Find_Bon_Current_Bonus_Amt $Find_Bon_Gex_Dept_bonus_Group $Find_Bon_Reports_to #Find_Bon_Std_hours $Find_Bon_All_grade From Employee_All_Bonus(#Counter_Bonus_Jobcodes1)
   			If ($Find_Bon_Deptid = $Allbonus_Deptid) AND  ($Find_Bon_Max_Duration_Deptid = $Allbonus_Max_Duration_Deptid ) AND ( $Find_Bon_Jobcd  = $Allbonus_Jobcd) 
   				Let #Sum_Distinct_Bonus_JobCode_Amount = #Sum_Distinct_Bonus_JobCode_Amount + #Find_Bon_Current_Bonus_Amt
   				
   			End-if
   		End-While
   		Let #Final_Bonus_Jobcode_Row_Count =  #Final_Bonus_Jobcode_Row_Count + 1
   		Put $A_Emplid #A_Empl_Rcd #A_Year $Allbonus_Deptid $Allbonus_Empl_Type $Allbonus_Max_Duration_Deptid $Allbonus_Jobcd #All_Annual_Rt $Allbonus_Gex_Position_Nbr #Allbonus_Current_Min_Pct #Allbonus_Current_Tar_Pct #Allbonus_Current_Max_Pct #Allbonus_Gex_Bonus_Pct_Used #Sum_Distinct_Bonus_JobCode_Amount #Sum_Distinct_Bonus_JobCode_Amount $Allbonus_Gex_Dept_bonus_Group $Allbonus_Reports_to #Allbonus_Std_hours $Allbonus_All_grade Into Final_Employee_All_Bonus(#Final_Bonus_Jobcode_Row_Count)
   	
        End-if
  
End-While

Let #Counter_Bonus_Jobcodes_testing = 1
#debug8 Show '*************************** Distinct Jobcode Bonus Row ***********************'
While #Counter_Bonus_Jobcodes_testing < #Final_Bonus_Jobcode_Row_Count
	
	Get $Test_Emplid #Test_Empl_Rcd #Test_Current_Year $Test_Deptid $Test_Empl_Type $Test_Max_Duration_Deptid $Test_Jobcd #Test_Annual_rt $Test_Gex_Position_Nbr #Test_Current_Min_Pct #Test_Current_Tar_Pct #Test_Current_Max_Pct #Test_Gex_Bonus_Pct_Used #Sum_Distinct_Bonus_JobCode_Amount #Sum_Distinct_Bonus_JobCode_Amount $Test_Gex_Dept_bonus_Group $Test_Reports_to #Test_Std_hours $Test_All_grade From Final_Employee_All_Bonus(#Counter_Bonus_Jobcodes_testing)
	#debug8 Show $Test_Emplid ':' #Test_Empl_Rcd  ':' #Test_Current_Year ':'  $Test_Deptid  ':' $Test_Empl_Type  ':' $Test_Max_Duration_Deptid  ':' $Test_Jobcd  ':' #Test_Annual_rt ':' $Test_Gex_Position_Nbr ':'  #Test_Current_Min_Pct  ':'  #Test_Current_Tar_Pct ':'  #Test_Current_Max_Pct  ':' #Test_Gex_Bonus_Pct_Used  ':' #Sum_Distinct_Bonus_JobCode_Amount  ':' #Sum_Distinct_Bonus_JobCode_Amount  ':' $Test_Gex_Dept_bonus_Group ':'  $Test_Reports_to  ':' #Test_Std_hours  ':' $Test_All_grade
	Let #Counter_Bonus_Jobcodes_testing = #Counter_Bonus_Jobcodes_testing + 1
End-while
#debug8 Show '***************************  Distinct Jobcode Bonus Row ***********************'
!***********************************************************************
End-Procedure Sum-Distinct-Bonus-Jobcodes
!***********************************************************************
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End

!***********************************************************************
Begin-Procedure P200-Main-Process2
!***********************************************************************
 Let $JOBCD = ''
 Let $Jobcode1 =''
 Let $Jobcodedescr=''
 Let $max_duration_deptid=''
  Let $Curr_Jobcode =''
#debug9 Show 'P200-Main-Process2'
Begin-Select
!PD3.NAME     ()  On-Break  Level=1 
!                           Print=Never

!J2.COMPANY    ()  On-Break  Level=2
!                           Print=Never

!B.DEPTID     ()  On-Break  Level=3
!                           Print=Never
                           

!B.EMPL_TYPE  ()  On-Break  Level=4
!                           Print=Never
!                           Before=New-Page
!                           After=P280-Empl-Type-Totals
B.DEPTID     ()  On-Break  Level=1
                             Print=Never 
B.JOBCODE    ()  On-Break  Level=2
                           Print=Never
                           Before= JobCode-new-page
                           !After=New-Page
J2.COMPANY 
B.EMPL_TYPE 
PD3.NAME                         
B.EMPLID
B.EMPL_RCD
B.GEX_MIN_BONUS_PCT
B.GEX_TAR_BONUS_PCT
B.GEX_MAX_BONUS_PCT
B.GEX_CSI_ADJ_PCT
B.GEX_BONUS_AMT
B.GEX_BONUS_STATUS
B.BUDGET_DEPTID
B.GEX_FNAL_BONUS_AMT
B.ANNUAL_RT
J2.ACCT_CD
J2.DEPTID
J2.EMPL_STATUS 
E2.HIRE_DT
J2.JOBCODE
JC2.DESCRSHORT
J2.TERMINATION_DT
J2.LAST_HIRE_DT
B.GEX_BONUS_PCT_USED
    
  Let $emplid    		= &B.EMPLID
  Let #empl_rcd_nbr 		= &B.EMPL_RCD
  Let $empl_rcd                 = &B.EMPL_RCD   
  Let $Officer   		= &PD3.NAME
  Let $Company   		= &J2.COMPANY
  Let $Deptid    		= &B.DEPTID
  Let $Jobcode1                 = &J2.JOBCODE
  Let $Jobcodedescr             = &JC2.DESCRSHORT
  Let $JOBCD                     =&J2.JOBCODE
  Let $Acctcd    		= &J2.ACCT_CD
  Let $job_deptid    		= &J2.DEPTID
  Let $Empl_Status 		= &J2.EMPL_STATUS  
  Let $Curr_Jobcode 		= &J2.JOBCODE
  Let $Budget_Deptid 		= &B.BUDGET_DEPTID
  Let $Jobcode			= &B.JOBCODE
  Let #Final_Bonus_Amount	= &B.GEX_FNAL_BONUS_AMT
  Let $Name      		= &pd3.name
  Let #current_min_pct   	= &b.gex_min_bonus_pct
  Let #current_tar_pct   	= &b.gex_tar_bonus_pct
  Let #current_max_pct   	= &b.gex_max_bonus_pct
  Let #current_csi_adj_pct	= &b.gex_csi_adj_pct
  Let #Calculated_Annual_Rt     = &B.ANNUAL_RT
  Let #current_bonus_amt  	= &b.gex_bonus_amt
  Let $Calculate_JobCode        = &B.JOBCODE
  lET $Last_hire_Dt 		= &J2.LAST_HIRE_DT
  Let $Hire_Dt_Print		= &J2.LAST_HIRE_DT
  Let #Bonus_Pct_Used 		= &B.GEX_BONUS_PCT_USED
  
      
  
  Let $EmployeeFound='Y' 
  
  If $EmployeeFound='Y'  
  
 
 
  	Let $Skip = 'Y'
 	
  	If $Run_Type = '3'
  	   Let $Skip = 'N'
  	Else
  	   If $Run_Type = '4'
  	      If &b.gex_bonus_status = '3' or &b.gex_bonus_status = '2'
  	         Let $Skip = 'N'
  	      End-If
  	   End-If
  	End-If
        Show '$Skip : '$Skip
  	If $Skip = 'N'
  		Let $OK-To-Advance-Page = 'Y'
  	  	Let $Data-Found-Flag = 'Y'
  	  	Let #Year = #Previous_Year
  	  	Do Bonus-Table-Last-Year	
  	  	!Vendaxg Added for Bonus Processing 2011 on 07/15/2011 
  	  	!Let #annual_rt            = &bx.annual_rt
  	  	Let #annual_rt            = &b.annual_rt
  	  	!Vendaxg Added for Bonus Processing 2011 on 07/15/2011 
  	  	Let #hourly_rt            = 0
  	  	Let #weekly_rt            = &bx.annual_rt / 52
  	  	Let #previous_min_pct     = &bx.gex_min_bonus_pct
  	  	Let #previous_tar_pct     = &bx.gex_tar_bonus_pct
  	  	Let #previous_max_pct     = &bx.gex_max_bonus_pct
  	  	Let #previous_csi_adj_pct = &bx.gex_csi_adj_pct
  	  	Let #previous_bonus_amt   = &bx.gex_bonus_amt

        !1289792 - GEXHR_BONUS2017 Begins  	  	
  	  	!Let #previous_mid_one     = (#previous_min_pct + #previous_tar_pct) / 2
  	  	!Let #previous_mid_two     = (#previous_tar_pct + #previous_max_pct) / 2
  	  	Let #previous_mid_one     = (#previous_tar_pct - #previous_min_pct )
  	  	Let #previous_mid_two     = (#previous_max_pct - #previous_tar_pct )
        !1289792 - GEXHR_BONUS2017 Ends
		    !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
        !1289792 - GEXHR_BONUS2017 Begins
        !Let #previous_mid_three   = (#previous_tar_pct - #previous_min_pct)
        Let #previous_mid_three   = #previous_max_pct
        !1289792 - GEXHR_BONUS2017 Ends
        !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
  	 	
  	  	Let $salary_effdt = $Salary_Dt
  	 	
  	  	
    
    	  	Evaluate $Run_Type
    	  	When = '3'
    			Let $Update_Status = '3'
    	  	When = '4'
  			Let $Update_Status = '4'
    		End-Evaluate
  		!**********************************************************************  
   	
  

    		Evaluate $Bonus_Pct_to_Use
    		When = '1'
    			Let #ee_pct = #current_min_pct
      		When = '2'
        		!1289792 - GEXHR_BONUS2017 Begins
        		!Let #ee_pct = #current_mid_one
        		Let #ee_pct = #current_min_pct + (#current_mid_one * #profit_pct)
        		!1289792 - GEXHR_BONUS2017 Ends	
      		When = '3'
        		Let #ee_pct = #current_tar_pct
      		When = '4'
        		!1289792 - GEXHR_BONUS2017 Begins
        	  !Let #ee_pct = #current_mid_two	
            Let #ee_pct = #current_tar_pct + (#current_mid_two * #profit_pct)
        		!1289792 - GEXHR_BONUS2017 Ends
          When = '5'
            Let #ee_pct = #current_max_pct
          !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins                         
          When = '6'
            Show '#profit_pct :' #profit_pct
        		!1289792 - GEXHR_BONUS2017 Begins
            !Let #ee_pct = #current_min_pct + (#current_mid_three * #profit_pct) 
            Let #ee_pct = #current_max_pct + (#current_mid_three * #profit_pct)
         		!1289792 - GEXHR_BONUS2017 Ends  
            Show '#current_mid_three :' #current_mid_three
            Show '#ee_pct :' #ee_pct  
            !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends     
    		End-Evaluate
	
    		Let #ee_csi = #current_csi_adj_pct
     	
        	
    		If #Final_Bonus_Amount <= 0
  			
    		end-if
    		#debug8 Show 'emplid ' $emplid ' b.deptid ' &b.deptid ' job_deptid ' $job_deptid 
    		If $Run_Type = '4' 
    			If #Final_Bonus_Amount > 0		
      				Do Check-Existing-510
     			
      				If $Exists_510 ='N'		
       					Do P240-Insert-Addl-Pay-Erncd
      				End-if				
        	   
      				Do Check-Existing-510-Effdt
     			
      				If $Exists_510_Effdt ='N'
        	 			Do P250-Insert-Addl-Pay-Effdt
      				End-If
	
        	    		Do Check-Existing-510-Data
     				#debug8 Show 'emplid ' $emplid ' b.deptid ' &b.deptid ' job_deptid ' $job_deptid ' $Exists_510_Data ' $Exists_510_Data ' #addl_seq ' #addl_seq
      				If $Exists_510_Data ='N'
      				!Vendaxg Modified for S3#14562544 on 09/03/2010 - Begin
        	 			!If &b.deptid = $job_deptid
        	 			If &b.BUDGET_DEPTID = $job_deptid
        	 		!Vendaxg Modified for S3#14562544 on 09/03/2010 - End
        	    				Let $deptid_ins = ' '  
        	 			Else
        	 		!Vendaxg Modified for S3#14562544 on 09/03/2010 - Begin
        	    				!Let $deptid_ins = &b.deptid
        	    				Let $deptid_ins = &b.BUDGET_DEPTID
        	    		!Vendaxg Modified for S3#14562544 on 09/03/2010 - End
        	 			End-If
        	 			
        	 			Let #addl_seq = 1
        	 			Do P260-Insert-Addl-Pay-Data
      				Else  
     				#debug9  show 'emplid ' $emplid ' b.deptid ' &b.deptid ' job_deptid ' $job_deptid ' $Exists_510_Data ' $Exists_510_Data ' #addl_seq ' #addl_seq
     				!Vendaxg Modified for S3#14562544 on 09/03/2010 - Begin
        	 			!If &b.deptid = $job_deptid
        	 			If &b.BUDGET_DEPTID = $job_deptid
        	 		!Vendaxg Modified for S3#14562544 on 09/03/2010 - End
        	    				Let $deptid_ins = ' '  
        	 			Else
        	 		!Vendaxg Modified for S3#14562544 on 09/03/2010 - Begin
        	    				!Let $deptid_ins = &b.deptid
        	    				Let $deptid_ins = &b.BUDGET_DEPTID
        	    		!Vendaxg Modified for S3#14562544 on 09/03/2010 - End
        	 			End-If
        	 			
        	 			Let #addl_seq = &z.addl_seq + 1
        	 			Do P260-Insert-Addl-Pay-Data
      				End-If
      			End-if				
    		End-if !$Run_Type = '4'
		
    		Add 1                   To #type-count
    		Add 1                   To #deptid-count
	
    		Add #previous_bonus_amt To #type_previous_bonus
    		Add #current_bonus_amt  To #type_current_bonus
		
    		Add #previous_bonus_amt To #deptid_previous_bonus
    		Add #current_bonus_amt  To #deptid_current_bonus
		
    		Add #previous_bonus_amt To #report_previous_bonus
    		Add #current_bonus_amt  To #report_current_bonus
		
    		Do P290-Print-Record
    		Do write-file
    		Do P240-Update-Bonus-Table
    		
  	End-If
  End-If

From   ps_gex_empl_bonus   b,
       ps_personal_data    pd3,
       ps_employment       e2,
       ps_job              j2,
       ps_jobcode_tbl          jc2 

Where  pd3.emplid           = b.emplid
And    e2.emplid            = b.emplid
And    e2.empl_rcd         = b.empl_rcd
And    b.gex_bonus_year = #current_year
and    b.emplid             = j2.emplid
and    b.empl_rcd          = j2.empl_rcd
and    b.gex_bonus_ind = 'C' 
And j2.effdt  = (Select Max(effdt) from ps_job
       		  Where j2.emplid    = emplid
       		   And  j2.empl_rcd = empl_rcd
       		   And  effdt     <= $AsOfDate)
And j2.effseq = (Select Max(effseq) From ps_job
                  Where j2.emplid    = emplid
                  And   j2.empl_rcd = empl_rcd
                  And   j2.effdt     = effdt)

and jc2.jobcode=j2.jobcode
and jc2.effdt             =
      (Select Max(effdt)
       From   ps_jobcode_tbl  jb2  
       Where  jb2.jobcode       = jc2.jobcode
       And    jb2.effdt       <= $AsOfDate)

!Order By pd3.name, j2.company, b.deptid, b.empl_type
ORDER BY B.DEPTID, B.JOBCODE,B.EMPL_TYPE, B.NAME
End-Select
End-Procedure

!GEXPY_848_E95094_02 2012-05-22 VENDAXG  Mod#8 - Begin
!***********************************************************************
Begin-Procedure Find-Salary-AsofRuncontrol
!***********************************************************************
Let $Promotion_Found  = 'N'
Let #Prom_Annual_Rt 	= 0
Let #annual_rt = 0
Let #hourly_rt = 0
Let #weekly_rt = 0
	
Begin-Select
PROM.EMPLID
PROM.EMPL_RCD
PROM.EFFDT
PROM.EFFSEQ
PROM.ANNUAL_RT
PROM.HOURLY_RT
PROM.STD_HOURS
PROM.EMPL_TYPE

	Let $Prom_Empl_Type 	= &PROM.EMPL_TYPE
	!Let #Annual_Rt_Asof_runcontrol = &PROM.ANNUAL_RT
	!Let #Prom_Hourly_rt = &PROM.HOURLY_RT
	!Let #Prom_Std_Hours = &PROM.STD_HOURS
	Let #annual_rt = &PROM.ANNUAL_RT
	Let #hourly_rt = &PROM.HOURLY_RT
	Let #weekly_rt = #hourly_rt * &PROM.STD_HOURS
	Let #Std_hours = &PROM.STD_HOURS 
	If $Prom_Empl_Type = 'H'
		Let #annual_rt = #hourly_rt * #Std_hours * 52
		
	End-If
	Show 'Salary As of Runcontrol date : '#annual_rt
	
FROM PS_JOB PROM
Where PROM.emplid = $emplid
And PROM.empl_rcd = #empl_rcd_nbr
AND PROM.EFFDT = (Select Max(PROM1.effdt)
                       From   ps_job  PROM1
                       Where   PROM.emplid       = PROM1.emplid
       And     PROM.empl_rcd    =  PROM1.empl_rcd
       And     PROM1.effdt       <= $Salary_Dt )
AND  PROM.EFFSEQ =   (Select Max(PROM2.EFFSEQ)
                     From   ps_job  PROM2
       Where   PROM.emplid       = PROM2.emplid
       And     PROM.empl_rcd    =  PROM2.empl_rcd
       And     PROM2.effdt       = PROM.effdt )    

ORDER BY PROM.EFFDT DESC
End-Select
!***********************************************************************
End-Procedure Find-Salary-AsofRuncontrol
!***********************************************************************
!GEXPY_848_E95094_02 2012-05-22 VENDAXG  Mod#8 - End

!***********************************************************************
Begin-Procedure Get-All-Jobcode
!***********************************************************************
Let #Row_Count =1 
!Let #Row_Count =0
Let #Curr = 1
Let $Pre_Jobcode = ''
Let $Proration_Done = 'N'
Let $Promotion_Found = 'N' !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
Let #Promoted_Salary = 0
Clear-array  Name=Jobcode
#debug8 Show 'Entering Procedur Get all jobcode *************************'
Begin-Select
AL.Jobcode
AL.Effdt
AL.Deptid
AL.Position_Nbr !Vendaxg Added for Bonus Processing 2011
AL.Grade !Vendaxg Added for Bonus Processing 2011
AL.Annual_rt !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
AL.Action !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
AL.Action_Reason !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
AL.std_hours !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
AL.hourly_rt !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
AL.empl_type !GEXPY_848_E95094_02 2012-05-22 VENDAXG 


	Let $All_Jobcode = Ltrim(Rtrim(&AL.Jobcode,' '),' ')
	Let $All_Deptid = Ltrim(Rtrim(&AL.Deptid,' '),' ')
	Let $All_Effdt = &AL.Effdt
	Let $All_Position_Nbr = &AL.Position_Nbr !Vendaxg Added for Bonus Processing 2011
	Let $All_Grade = &AL.Grade !Vendaxg Added for Bonus Processing 2011
	Let $End_Date = $Thru_Date
	Let $Start_Date = $From_Date
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG  - Begin
	Let #All_Annual_Rt = &AL.Annual_rt
	Let $All_Action = &AL.Action
	Let $All_Action_Reason = &AL.Action_Reason
	Let $All_Empl_Type = &AL.empl_type
	Let #All_Std_Hours = &AL.std_hours
	Let #All_Hourly_Rt = &AL.hourly_rt
	
	If ($All_Action = 'PRO' and $All_Action_Reason = 'NCP') 
		Let $Promotion_Found = 'Y'
		Let #Promoted_Salary = #All_Annual_Rt
	Else
		Let $Promotion_Found = 'N'
	End-if
	If $All_Empl_Type = 'H'
		Let #All_Annual_Rt = #All_Hourly_Rt  * #All_Std_Hours * 52
	End-if
	!If $Promotion_Found = 'Y' 
	!	Let #Annual_Rt_to_Use  = #Promoted_Salary
	!Else
	
	!	Let #Annual_Rt_to_Use = #All_Annual_Rt
	!End-if
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG  - End
	   
	If $Pre_Jobcode = '' 
	   Let #Duration = datediff($End_Date,$All_Effdt,'DAY')
	   #debug8 Show 'Duration : '#Duration ' Job Code : '$All_Jobcode ' Grade :'$All_Grade ' Department: '$All_Deptid ' Annual Rt: '#All_Annual_Rt ' Action : '$All_Action ' Action Reason: '$All_Action_Reason ' Promotion_Found: '$Promotion_Found
	   !GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start 
	   !Put $All_Jobcode $All_Position_Nbr $All_Grade #Duration Into Jobcode(#Curr)
	   
	   Put $All_Jobcode $All_Position_Nbr $All_Grade $All_Deptid #All_Annual_Rt $Promotion_Found #Duration Into Jobcode(#Curr)
	   !GEXPY_848_E95094_02 2012-05-22 VENDAXG - End 
	   Let $Old_Effdt = $All_Effdt
	   Let $Pre_Jobcode = $All_Jobcode
	   Let #Curr = #Curr + 1
	Else
	  
	   Let #Duration = datediff($Old_Effdt,$All_Effdt,'DAY')
	   !GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start 
	   !Put $All_Jobcode $All_Position_Nbr $All_Grade  #Duration Into Jobcode(#Curr)
	   Put $All_Jobcode $All_Position_Nbr $All_Grade $All_Deptid #All_Annual_Rt $Promotion_Found #Duration Into Jobcode(#Curr)
	   !GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
	   Let $Old_Effdt = $All_Effdt
	   Let $Pre_Jobcode = $All_Jobcode
	   Let #Curr = #Curr + 1
	  #debug8 Show 'Duration : '#Duration ' Job Code : '$All_Jobcode 'Grade :' $All_Grade ' Department: '$All_Deptid ' Annual Rt: '#All_Annual_Rt ' Action : '$All_Action ' Action Reason: '$All_Action_Reason ' Promotion_Found: '$Promotion_Found
	  
	End-If
	Let #Row_Count = #Row_Count + 1
	
From PS_JOB AL
Where AL.emplid = $emplid
And AL.empl_rcd = #empl_rcd_nbr
And AL.effdt between $From_Date and $Thru_Date
order by AL.EFFDT desc


End-Select
 show '#Row_Count:' #Row_Count
 show '$All_Action :' $All_Action
 if $All_Action<>'REH'
If #Row_Count =1 
 Do Get-Prev-JobCode
 Let #Duration = #DurfromRctl  
 !GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start         
 !Put $Prev_Jobcode $prev_Position_Nbr $prev_Grade #Duration Into Jobcode(#Curr)
 Put $Prev_Jobcode $prev_Position_Nbr $prev_Grade $Prev_Deptid #Annual_Rt_prev $Promotion_Found #Duration Into Jobcode(#Curr)
 !GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
 Let $Proration_Done = 'N'
Else
 Do Get-Prev-JobCode
 If $prev_jobcode <> ''
 	Let #Duration = datediff($All_Effdt,$Start_Date,'DAY')
 	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start         
 	!Put $Prev_Jobcode $prev_Position_Nbr $prev_Grade #Duration Into Jobcode(#Curr)
 	Put $Prev_Jobcode $prev_Position_Nbr $prev_Grade $Prev_Deptid #Annual_Rt_prev $Promotion_Found #Duration Into Jobcode(#Curr)
 	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
 	#debug8 Show 'Duration : '#Duration 'Prev Job Code : '$Prev_Jobcode ' Grade :' $prev_Grade
 End-if
 Let $Proration_Done = 'Y'
 #debug8 Show '$Proration_Done  : '$Proration_Done 
 
End-If
END-IF
If $Proration_Done = 'Y'
   Do Check-If-Proration-Done
End-if
#debug8 Show '*************************** All Jobcode Start***********************'
Let #Counter_Jobcodes_Count = 0
While #Counter_Jobcodes_Count < #Row_Count
	Let #Counter_Jobcodes_Count = #Counter_Jobcodes_Count + 1
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start
	!Get $Find_Jobcode_Testing $Find_Position_Testing $Find_Grade #Duration from Jobcode(#Counter_Jobcodes_Count)
	Get $Find_Jobcode_Testing $Find_Position_Testing $Find_Grade $Find_Deptid #Find_Annual_Rt $Find_Promotion_Found #Duration from Jobcode(#Counter_Jobcodes_Count)
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
	#debug8 Show 'Distinct Jobcode : '$Find_Jobcode_Testing ' $Find_Position_Testing : '$Find_Position_Testing ' $Find_Grade :'$Find_Grade ' Department: '$Find_Deptid ' Find_Annual_Rt: '#Find_Annual_Rt ' Find_Promotion_Found :' $Find_Promotion_Found '  Duration : '#Duration
End-while
#debug8 Show '*************************** All Jobcode End***********************'
!Do Sum-Distinct-Jobcodes
#debug8 Show 'Exiting Procedur Get all jobcode *************************'
!***********************************************************************
End-Procedure Get-All-Jobcode
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-If-Proration-Done
!***********************************************************************
#debug8 Show 'Entering Procedure Check Proration Done'
Let #Counter =0
Let $Prev_All_Jobcode = ''
Let #Jobcode_Count = 0
Let #Sum_JobCode_Duration = 0

While #Counter < #Row_Count
   Let #Counter=#Counter+1
   !GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start         
   !Get $All_Jobcode $All_Position_Nbr $All_Grade #Duration from JobCode(#Counter)
   Get $All_Jobcode $All_Position_Nbr $All_Grade $All_DeptID #All_Annual_Rt $Promotion_found #Duration from JobCode(#Counter)
   !GEXPY_848_E95094_02 2012-05-22 VENDAXG - End         
  #debug8 Show 'Under Proration Found : ' $All_Jobcode '  Duration : '#Duration
   If $Prev_All_Jobcode = ''
      Let $Prev_All_Jobcode = $All_Jobcode
      Let #Jobcode_Count = 1
      Let #Sum_JobCode_Duration = #Duration
   Else 
      If $Prev_All_Jobcode <> $All_Jobcode
         Let #Jobcode_Count =  #Jobcode_Count + 1
         Let $Prev_All_Jobcode = $All_Jobcode
      Else 
      	Let #Sum_JobCode_Duration = #Sum_JobCode_Duration + #Duration
      	Let $Prev_All_Jobcode = $All_Jobcode
      End-if
   End-If
  
End-While
 #debug8 Show 'JobCOde Cound : '  #Jobcode_Count 

If #Jobcode_Count = 1  
	If #Sum_JobCode_Duration > 360
		Let  $Proration_Done = 'N'
        Else
        	Let  $Proration_Done = 'Y'
	End-If		
Else
	Let  $Proration_Done = 'Y'
End-if

#debug8 Show '$Proration_Done : '$Proration_Done
!***********************************************************************
End-Procedure Check-If-Proration-Done
!***********************************************************************

!***********************************************************************
Begin-Procedure Sum-Distinct-Jobcodes
!***********************************************************************
Let #Counter_Jobcodes =0
Let $Prev_Distinct_Jobcode = ''
Let #Distinct_Jobcode_Count = 0
Let #Sum_Distinct_JobCode_Duration = 0
Let #Final_Jobcode_Row_Count = 0 
While #Counter_Jobcodes < #Row_Count

   Let #Counter_Jobcodes = #Counter_Jobcodes + 1
   !GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start
   !Get $All_Jobcode $All_Position_Nbr $All_Grade #Duration from JobCode(#Counter_Jobcodes)
   Get $All_Jobcode $All_Position_Nbr $All_Grade $All_DeptID #Duration from JobCode(#Counter_Jobcodes)
   !GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
   	Let $JobCode_Found_Final_List = 'N'
   	Let #Counter_Jobcodes2 = 0
   	While #Counter_Jobcodes2 < #Final_Jobcode_Row_Count
   		Let #Counter_Jobcodes2 = #Counter_Jobcodes2 + 1
   		!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start
   		!Get $Distinct_Jobcode $Distinct_Position_Nbr $Distinct_Grade #Duration from Final-Jobcode-List(#Counter_Jobcodes2)
   		Get $Distinct_Jobcode $Distinct_Position_Nbr $Distinct_Grade $Distinct_DeptID #Duration from Final-Jobcode-List(#Counter_Jobcodes2)
   		
   		!If $Distinct_Jobcode = $All_Jobcode
   		If ($Distinct_Jobcode = $All_Jobcode) And ($Distinct_DeptID = $All_DeptID)
   		!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
   			Let $JobCode_Found_Final_List = 'Y'
   		End-if
   	
   	End-While
   	
   	If $JobCode_Found_Final_List = 'N'
   		Let #Counter_Jobcodes1 = 0
   		Let $Prev_All_Jobcode = ''
   		Let #Sum_Distinct_JobCode_Duration = 0 
   		While #Counter_Jobcodes1 < #Row_Count
   			Let #Counter_Jobcodes1 = #Counter_Jobcodes1 + 1
   			!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start
   			!Get $Find_Jobcode $Find_Position_Nbr $Find_Grade #Duration from JobCode(#Counter_Jobcodes1)
   			Get $Find_Jobcode $Find_Position_Nbr $Find_Grade $Find_Deptid #Duration from JobCode(#Counter_Jobcodes1)
   			
   			!If $Find_Jobcode  = $All_Jobcode
   			If ($Find_Jobcode  = $All_Jobcode) and ($Find_DeptID  = $All_DeptID)
   			!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
   			
   				Let #Sum_Distinct_JobCode_Duration = #Sum_Distinct_JobCode_Duration + #Duration
   				
   			End-if
   			   		
   		End-While
   		Let #Final_Jobcode_Row_Count =  #Final_Jobcode_Row_Count + 1
   		!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start
   		!Put $All_Jobcode $All_Position_Nbr $All_Grade #Sum_Distinct_JobCode_Duration into Final-Jobcode-List(#Final_Jobcode_Row_Count)
   		Put $All_Jobcode $All_Position_Nbr $All_Grade $All_Deptid #Sum_Distinct_JobCode_Duration into Final-Jobcode-List(#Final_Jobcode_Row_Count)
   		!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
        End-if
  
End-While

Let #Counter_Jobcodes_testing = 0
#debug8 Show '*************************** Distinct Jobcode***********************'
While #Counter_Jobcodes_testing < #Final_Jobcode_Row_Count
	Let #Counter_Jobcodes_Testing = #Counter_Jobcodes_Testing + 1
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start
	!Get $Find_Jobcode_Testing $Find_Position_Testing $Find_Grade #Duration from Final-Jobcode-List(#Counter_Jobcodes_testing)
	Get $Find_Jobcode_Testing $Find_Position_Testing $Find_Grade $Find_Deptid #Duration from Final-Jobcode-List(#Counter_Jobcodes_testing)
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
	#debug8 Show 'Distinct Jobcode : '$Find_Jobcode_Testing ' $Find_Position_Testing : '$Find_Position_Testing ' $Find_Grade :'$Find_Grade ' Department: '$Find_Deptid '  Duration : '#Duration 
End-while
#debug8 Show '*************************** Distinct Jobcode***********************'
!***********************************************************************
End-Procedure Sum-Distinct-Jobcodes
!***********************************************************************

!***********************************************************************
Begin-Procedure  Get-Prev-JobCode
!***********************************************************************
Let $prev_jobcode = ''
Let $Promotion_Found = 'N' !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
Begin-Select
PREV.JOBCODE
PREV.ANNUAL_RT
PREV.HOURLY_RT
PREV.STD_HOURS
PREV.POSITION_NBR !VENDAXG Added for Bonus Processing 2011
PREV.GRADE !VENDAXG Added for Bonus Processing 2011
PREV.DEPTID !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
PREV.EMPL_TYPE !GEXPY_848_E95094_02 2012-05-22 VENDAXG 

	Let $prev_jobcode = &PREV.JOBCODE
	Let $prev_Position_Nbr = &PREV.POSITION_NBR !VENDAXG Added for Bonus Processing 2011
	Let $prev_Grade = &PREV.GRADE !VENDAXG Added for Bonus Processing 2011
	Let #Annual_Rt_prev = &PREV.ANNUAL_RT
	Let #Hourly_Rt_prev = &PREV.HOURLY_RT
	 !GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
	Let $Prev_Deptid = &PREV.DEPTID 
	Let $Prev_Empl_Type = &PREV.EMPL_TYPE
	Let #Prev_Std_Hours = &PREV.STD_HOURS
	If $Prev_Empl_Type = 'H'
		Let #Annual_Rt_prev = #Hourly_Rt_prev * #Prev_Std_Hours * 52
	End-if
	 !GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
	Do Check-Qualifying-Jobcode
	#debug8 Show 'Prev JobCode in Loop :'$prev_jobcode
  #debug8 Show '$prev_jobcode :' $prev_jobcode
  #debug8 Show '#Annual_Rt_prev :'  #Annual_Rt_prev
FROM PS_JOB PREV
Where PREV.emplid = $emplid
And PREV.empl_rcd = #empl_rcd_nbr
AND PREV.EFFDT = (Select Max(PREV1.effdt)
                       From   ps_job  PREV1
                       Where   PREV.emplid       = PREV1.emplid
       And     PREV.empl_rcd    =  PREV1.empl_rcd
       And     PREV1.effdt       <= $From_Date )
AND  PREV.EFFSEQ =   (Select Max(PREV2.EFFSEQ)
                     From   ps_job  PREV2
       Where   PREV.emplid       = PREV2.emplid
       And     PREV.empl_rcd    =  PREV2.empl_rcd
       And     PREV2.effdt       = PREV.effdt )    

ORDER BY PREV.EFFDT DESC


End-Select
!***********************************************************************
End-Procedure Get-Prev-JobCode
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-Qualifying-Jobcode
!***********************************************************************
 show 'Check-Qualifying-Jobcode'
Let $JOBCD = $prev_jobcode
Do GetEEPctFromRuncntl
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
If $PCTFOUND= 'Y'

	Let #Annual_Rt = #Annual_Rt_prev
	Let #weekly_rt = #Hourly_Rt_prev * &PREV.STD_HOURS
	#debug8 Show 'Prev jobcode found annual rate '#Annual_Rt ' hourly rate '#weekly_rt
End-if
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
!***********************************************************************
End-Procedure Check-Qualifying-Jobcode
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-Leave-Duration
!***********************************************************************
Let $Prior-Effdt=''
Let $Prior-status=''
Let $leave_found='N'
Let $First_Row ='N'
Let #Leave-Duration1 = 0
Let #Leave-Duration = 0
Let #Total_Leave_H = 0 ! GEXPY_848_E95094_02 2012-06-06 1221434
Let #Total_Leave_S = 0 ! GEXPY_848_E95094_02 2012-06-06 1221434
Let #Total_Leave_SH = 0 ! GEXPY_848_E95094_02 2012-06-06 1221434
Let $curr_empl_status=''
Let $curr_effdt=''
Let $PREV.empl_status=''
Let $Empl_Type_lv = '' ! GEXPY_848_E95094_02 2012-06-06 1221434

Begin-Select
leave.effdt		
leave.empl_status	
leave.empl_type ! GEXPY_848_E95094_02 2012-06-06 1221434

  Let $curr_effdt = &leave.effdt
  Let $curr_empl_status=&leave.empl_status
  Let $leave_found='Y'
  Let $Empl_Type_lv = &leave.empl_type  ! GEXPY_848_E95094_02 2012-06-06 1221434
  
  If $Prior-Effdt<>''
    Let $First_Row ='N'
    
     IF ($curr_empl_status = 'L' or $curr_empl_status='P') 
        Let $leave_found='Y'
        Let #Leave-Duration1=DateDiff($Prior-Effdt,$curr_effdt,'month')
        Let #Leave-Duration = #Leave-Duration+#Leave-Duration1
        ! GEXPY_848_E95094_02 2012-06-06 1221434 begin	
        Let #Total_Leave_SH =DateDiff($Prior-Effdt,$curr_effdt,'DAY') 
	if $Empl_Type_lv = 'S' ! Added by sitansh
		Let #Total_Leave_S = #Total_Leave_S + #Total_Leave_SH	
	else
		if $Empl_Type_lv = 'H' 
			Let #Total_Leave_H = #Total_Leave_H + #Total_Leave_SH			
		End-if
	End-if
	! GEXPY_848_E95094_02 2012-06-06 1221434 end	        
     End-if 
     
   Else  
     Let $First_Row ='Y'
  End-IF 
 

   If  $First_Row ='Y' And ($curr_empl_status = 'L' or $curr_empl_status='P') 
    Let  #Leave-Duration1 = DateDiff($Fiscal_End_Dt,$curr_effdt,'month')
     Let #Leave-Duration = #Leave-Duration+#Leave-Duration1   
	! GEXPY_848_E95094_02 2012-06-06 1221434 begin		
        !Let #Total_Leave_SH =DateDiff($Prior-Effdt,$curr_effdt,'DAY') 		
	  Let #Total_Leave_SH =DateDiff($Fiscal_End_Dt,$curr_effdt,'DAY') 		

	if $Empl_Type_lv = 'S' ! Added by sitansh
		Let #Total_Leave_S = #Total_Leave_S + #Total_Leave_SH	
	else
		if $Empl_Type_lv = 'H' 
			Let #Total_Leave_H = #Total_Leave_H + #Total_Leave_SH		
		End-if
	End-if
	! GEXPY_848_E95094_02 2012-06-06 1221434 end	     
    End-If    

   
  Let $Prior-Effdt=&leave.effdt
  Let $Prior-status=&leave.empl_status
  
  
 

From ps_job leave   
Where leave.emplid = $emplid
And leave.empl_rcd = #empl_rcd_nbr
And leave.effdt between $From_Date and $Thru_Date
 
End-Select

  do Get-leave-Validate
  If $leave_found='N'
  if  ($PREV.empl_status ='L') or ($PREV.empl_status ='P')
   Let $Skip = 'Y'
  End-if
  else
   if  ($PREV.empl_status ='L') or ($PREV.empl_status ='P')
     Let  #Leave-Duration1 = DateDiff($Prior-Effdt,$Fiscal_Start_Dt,'month') 
     Let #Leave-Duration=#Leave-Duration+#Leave-Duration1 
	! GEXPY_848_E95094_02 2012-06-06 1221434 begin	
        !Let #Total_Leave_SH =DateDiff($Prior-Effdt,$curr_effdt,'DAY') 		
	Let #Total_Leave_SH =DateDiff($Prior-Effdt,$Fiscal_Start_Dt,'DAY') 		
	if $prev_Empl_Type_lv = 'S' ! Added by sitansh
		Let #Total_Leave_S = #Total_Leave_S + #Total_Leave_SH	
	else
		if $prev_Empl_Type_lv = 'H' 
			Let #Total_Leave_H = #Total_Leave_H + #Total_Leave_SH		
		End-if
	End-if
	! GEXPY_848_E95094_02 2012-06-06 1221434 end	     
  End-if
  End-if 

 #debug8 Show '#Leave-Duration' #Leave-Duration
!***********************************************************************   
End-Procedure
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-leave-Validate
!***********************************************************************
Let $prev_Empl_Type_lv  = ''  ! GEXPY_848_E95094_02 2012-06-06 1221434
Begin-select
LEAVEPREV.effdt		
LEAVEPREV.empl_status
LEAVEPREV.empl_type ! GEXPY_848_E95094_02 2012-06-06 1221434

   Let  $PREV.empl_status = &LEAVEPREV.empl_status
   Let $prev_Empl_Type_lv  = &LEAVEPREV.empl_type ! GEXPY_848_E95094_02 2012-06-06 1221434     

FROM PS_JOB LEAVEPREV
Where LEAVEPREV.emplid = $emplid
And LEAVEPREV.empl_rcd = #empl_rcd_nbr
AND LEAVEPREV.EFFDT = (Select Max(LEAVEPREV1.effdt)
                       From   ps_job  LEAVEPREV1
                       Where   LEAVEPREV.emplid       = LEAVEPREV1.emplid
       And     LEAVEPREV.empl_rcd    =  LEAVEPREV1.empl_rcd
       And     LEAVEPREV1.effdt       <= $From_Date )
AND  LEAVEPREV.EFFSEQ =   (Select Max(LEAVEPREV2.EFFSEQ)
                     From   ps_job  LEAVEPREV2
       Where   LEAVEPREV.emplid       = LEAVEPREV2.emplid
       And     LEAVEPREV.empl_rcd    =  LEAVEPREV2.empl_rcd
       And     LEAVEPREV2.effdt       = LEAVEPREV.effdt )    

ORDER BY LEAVEPREV.EFFDT DESC

end-select
End-Procedure


!***********************************************************************
Begin-Procedure GET-HIREDT
!***********************************************************************
Begin-select

INST.ORG_INST_SRV_DT

  Let $Hire_Dt_Print   = &INST.ORG_INST_SRV_DT	
  

 from PS_PER_ORG_INST INST where INST.EMPLID=$emplid and INST.ORG_INSTANCE_ERN=#empl_rcd_nbr

end-select
End-Procedure

!***********************************************************************
Begin-Procedure GetEEPctFromRuncntl
!***********************************************************************
 
 Let $PCTFOUND='N'
 
  Let $OprID               = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID         = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #current_min_pct = 0
  Let #current_tar_pct = 0
  Let #current_max_pct = 0
  Let #current_mid_one = 0
  Let #current_mid_two = 0
  Let #current_mid_three = 0 !ISDVVXK - GEXHR_848_E1944_BONUS2015
Begin-Select
JBCD.GEX_MIN_BONUS_PCT 
JBCD.GEX_TAR_BONUS_PCT
JBCD.GEX_MAX_BONUS_PCT
 
 Let $PCTFOUND='Y'
      #debug8 Show '% Found for the Jobcode: ' $JOBCD ' and Max Bonus Group : '$Gex_Dept_bonus_Group
      Let #current_min_pct   = &JBCD.GEX_MIN_BONUS_PCT  
      
      
      Let #current_tar_pct   = &JBCD.GEX_TAR_BONUS_PCT
      
      
      Let #current_max_pct   = &JBCD.GEX_MAX_BONUS_PCT
      
      !1289792 - GEXHR_BONUS2017 Begins       
      !Let #current_mid_one     = (#current_min_pct + #current_tar_pct) / 2
      !Let #current_mid_two     = (#current_tar_pct + #current_max_pct) / 2
    	Let #current_mid_one     = (#current_tar_pct - #current_min_pct )
     	Let #current_mid_two     = (#current_max_pct - #current_tar_pct )
      !1289792 - GEXHR_BONUS2017 Ends
      !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
      !1289792 - GEXHR_BONUS2017 Begins 
      !Let #current_mid_three   = (#current_tar_pct - #current_min_pct)
      Let #current_mid_three   = #current_max_pct
      !1289792 - GEXHR_BONUS2017 Ends
      !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
 
FROM PS_GEX_JOBCODE_TBL JBCD 
WHERE JBCD.EFFDT =(SELECT MAX(JBCD1.EFFDT) FROM PS_GEX_JOBCODE_TBL JBCD1 
		   WHERE JBCD.SETID = JBCD1.SETID 
		   AND JBCD.GEX_BONUS_GROUP = JBCD1.GEX_BONUS_GROUP 
		   AND JBCD.JOBCODE = JBCD1.JOBCODE 
		   AND JBCD1.EFFDT <= SYSDATE)
AND JBCD.STATUS='A'		   
AND JBCD.JOBCODE = $Jobcd
AND JBCD.GEX_BONUS_GROUP = $Gex_Dept_bonus_Group
end-select

!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start
If $PCTFOUND='N'
 #debug8 Show '% not found for Jobcode '$JOBCD ' and Max Bonus Group : '$Gex_Dept_bonus_Group
 Do Gex-Get-PCT-Non-Max-BGroup
End-if
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End

!***********************************************************************
End-Procedure GetEEPctFromRuncntl
!***********************************************************************
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start
!***********************************************************************
Begin-Procedure Gex-Get-PCT-Non-Max-BGroup
!***********************************************************************
Let $PCTFOUND='N'
Let $OprID               = '''' || $Prcs_OprID       || ''''
Let $Run_Cntl_ID         = '''' || $Prcs_Run_Cntl_ID || ''''
Let #current_min_pct = 0
Let #current_tar_pct = 0
Let #current_max_pct = 0
Let #current_mid_one = 0
Let #current_mid_two = 0
Let #current_mid_three = 0 !ISDVVXK - GEXHR_848_E1944_BONUS2015

Begin-Select
NBGJBCD.GEX_MIN_BONUS_PCT 
NBGJBCD.GEX_TAR_BONUS_PCT
NBGJBCD.GEX_MAX_BONUS_PCT
 
 Let $PCTFOUND='Y'
      #debug8 Show '% found for Jobcode '$JOBCD ' and Non Max Bonus Group : '$Gex_Non_Max_Dept_bonus_Group
      Let #current_min_pct   = &NBGJBCD.GEX_MIN_BONUS_PCT  
      Let #current_tar_pct   = &NBGJBCD.GEX_TAR_BONUS_PCT
      Let #current_max_pct   = &NBGJBCD.GEX_MAX_BONUS_PCT
      !1289792 - GEXHR_BONUS2017 Begins
      !Let #current_mid_one     = (#current_min_pct + #current_tar_pct) / 2
      !Let #current_mid_two     = (#current_tar_pct + #current_max_pct) / 2
      Let #current_mid_one     = (#current_tar_pct - #current_min_pct )
      Let #current_mid_two     = (#current_max_pct - #current_tar_pct )
      !1289792 - GEXHR_BONUS2017 Ends
      !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
      !1289792 - GEXHR_BONUS2017 Begins 
      !Let #current_mid_three   = (#current_tar_pct - #current_min_pct)
      Let #current_mid_three   = #current_max_pct
      !1289792 - GEXHR_BONUS2017 Ends
      !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
 
FROM PS_GEX_JOBCODE_TBL NBGJBCD 
WHERE NBGJBCD.EFFDT =(SELECT MAX(NBGJBCD1.EFFDT) FROM PS_GEX_JOBCODE_TBL NBGJBCD1 
		   WHERE NBGJBCD.SETID = NBGJBCD1.SETID 
		   AND NBGJBCD.GEX_BONUS_GROUP = NBGJBCD1.GEX_BONUS_GROUP 
		   AND NBGJBCD.JOBCODE = NBGJBCD1.JOBCODE 
		   AND NBGJBCD1.EFFDT <= SYSDATE)
AND NBGJBCD.STATUS='A'		   
AND NBGJBCD.JOBCODE = $Jobcd
AND NBGJBCD.GEX_BONUS_GROUP = $Gex_Non_Max_Dept_bonus_Group

End-select

!***********************************************************************
End-Procedure Gex-Get-PCT-Non-Max-BGroup
!***********************************************************************
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End

!***********************************************************************
Begin-Procedure Select-Reatil-Kickers
!***********************************************************************
Let #sfc1-mcp-flg    =  0
Let #sfc2-tsr-flg    =  0
Let #rpm1-tss-flg    =  0
Let #rpm2-tssci-flg  =  0
Let #rpm3-css-flg    =  0
Let #Gex_Company_Comp = 0
Let #rpm3-css-flg    =  0
Let #Stretch_css_flg = 0 !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
 
Begin-select
Kickers.gex_sfc1_mcp
Kickers.gex_sfc2_tsr
Kickers.gex_rpm1_tss
Kickers.gex_rpm2_ci
Kickers.gex_rpm3_css
Kickers.gex_cmp_comp
Kickers.gex_stretch_css !GEXPY_848_E95094_02 2012-05-22 VENDAXG 

  Let #sfc1-mcp-flg    =  &Kickers.gex_sfc1_mcp	
  Let #sfc2-tsr-flg    =  &Kickers.gex_sfc2_tsr
  Let #rpm1-tss-flg    =  &Kickers.gex_rpm1_tss	
  Let #rpm2-tssci-flg  =  &Kickers.gex_rpm2_ci
  Let #rpm3-css-flg    =  &Kickers.gex_rpm3_css
  Let #Gex_Company_Comp    =  &Kickers.gex_cmp_comp
  Let #Stretch_css_flg = &Kickers.gex_stretch_css !GEXPY_848_E95094_02 2012-05-22 VENDAXG 
  
from ps_gex_rtl_kicker kickers
where 	Kickers.deptid	= $max_duration_deptid
and kickers.effdt = (select max(k1.effdt) from ps_gex_rtl_kicker k1 
		     where kickers.deptid = k1.deptid and k1.effdt <= sysdate)

end-select
End-Procedure


!***********************************************************************
Begin-Procedure P210-Get-Salary
!***********************************************************************
#debug9 Show 'P210-Get-Salary'
  Let $job-found = 'N'
  
Begin-Select
job.annual_rt
job.hourly_rt
job.std_hours

  Let $job-found = 'Y'

  Let #annual_rt = &job.annual_rt
  Let #hourly_rt = &job.hourly_rt
  Let #weekly_rt = #hourly_rt * &job.std_hours
  Let #Std_hours = &job.std_hours !Vendaxg Added for Bonus Processing 2011 on 05/25/2011
  #debug8 Show '#annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt '  Job Code : '$JOBCD

From   ps_job job

Where  job.emplid            = $emplid
And    job.empl_rcd         = #empl_rcd_nbr

And   job.effdt             = 
      (Select Max(effdt)
       From   ps_job
       Where  emplid     = job.emplid
       And    empl_rcd  = job.empl_rcd
       And    effdt     <= $salary_effdt)

And    job.effseq            =
      (Select Max(effseq)
       From   ps_job
       Where  emplid     = job.emplid
       And    empl_rcd  = job.empl_rcd
       And    effdt      = job.effdt)
and   job.jobcode = $JOBCD
End-Select
End-Procedure


!***********************************************************************
Begin-Procedure Get-SalaryEffdt
!***********************************************************************
#debug9 Show 'Get-SalaryEffdt'

Begin-Select
js.effdt 

     Let $salary_effdt = &js.effdt
 
 
From   ps_job js

Where  js.emplid            = $emplid
And    js.empl_rcd         = #empl_rcd_nbr
and    js.JOBCODE     =  $max_dept_jobcode 
And   js.effdt             = 
      (Select Min(effdt)
       From   ps_job
       Where  emplid     = js.emplid
       And    empl_rcd  = js.empl_rcd
       and    jobcode  = js.jobcode
       And    effdt     <= $AsOfDate and EFFDT>$From_Date)

And    js.effseq            =
      (Select Max(effseq)
       From   ps_job
       Where  emplid     = js.emplid
       And    empl_rcd  = js.empl_rcd
       And    effdt      = js.effdt)
       
End-Select
End-Procedure

!***********************************************************************
Begin-Procedure get-gexcompanydivcd
!***********************************************************************
#debug9 Show 'get-gexcompanydivcd'
 Let $Divcdfound='N'
Begin-Select distinct
GEXD.GEX_COMPANY_DIV_CD 

     Find &GEXD.GEX_COMPANY_DIV_CD in  $GEXXX907_Include_Div_Cd_Criteria  0  #DIV_CD_Loc
  	     IF #DIV_CD_Loc <> -1
                Let $Divcdfound='Y'
              end-if
              
              if $GEXXX907_Include_Div_Cd_Criteria= 'gdt.gex_company_div_cd = gdt.gex_company_div_cd'
              Let $Divcdfound='Y'
             end-if
  
From   PS_GEX_DEPT_TBL GEXD
Where  [$DEPTID_CRITERIA]
End-Select
 !show $Divcdfound 

End-Procedure

!***********************************************************************
Begin-Procedure Do-Employee-validation 
!***********************************************************************
 Let $EmployeeFound ='N'
 Let $Comp-Pay-found ='N'
 Let $Comp-found='N'
 Let $Department-found ='N'
 Let $Union-cd-found = 'N'
 Let $Acct-found='N'
 Let $Employee-type-found='N'
 Let $Employee-status-found='N'
 
  Do get-Dept
 
  
  if ($GEXXX901_Include_Company_Paygroup_Criteria= 'ALL') or($GEXXX901_Include_Company_Paygroup_Criteria='j.company = j.company And j.paygroup = j.paygroup')  
              Let $Comp-Pay-found ='Y'
    
  Else
     Do get-Company-Paygroup    
  end-if
 
  if ($GEXXX900_Include_Company_Criteria= 'ALL') or ($GEXXX900_Include_Company_Criteria= 'j.company = j.company')
              Let $Comp-found ='Y'
    
  Else
     Do get-Company
  end-if
  
  if ($GEXXX909_Include_Acct_Cd_Criteria= 'ALL') or ($GEXXX909_Include_Acct_Cd_Criteria= 'j.acct_cd = j.acct_cd')
              Let $Acct-found ='Y'
    
    
  Else
     Do get-ACCT_CD       
  end-if            
  
  if ($GEXXX913_Include_Union_Cd_Criteria= 'ALL') or ($GEXXX913_Include_Union_Cd_Criteria= 'j.union_cd = j.union_cd')
              Let $Union-cd-found ='Y'
    
  Else
     Do get-union-cd        
  end-if
  
  if ($GEXXX902_INCLUDE_DEPTID_CRITERIA= 'ALL') or ($GEXXX902_INCLUDE_DEPTID_CRITERIA= 'j.deptid = j.deptid')
              Let $Department-found ='Y'
    
  Else
   
     Do get-Department 
   
  end-if
  
  
  if ($GEXXX930_Include_Emp_Type_Criteria = 'ALL') or ($GEXXX930_Include_Emp_Type_Criteria ='j.empl_type = j.empl_type') or ($GEXXX930_Include_Emp_Type_Criteria ='j.fieldvalue = j.fieldvalue')
              Let $Employee-type-found ='Y'
  
  Else
  
     Do get-employee-type        
  end-if
  
   if ($GEXXX903_Include_Emp_Stat_Display_Criteria = 'ALL') or ($GEXXX903_Include_Emp_Stat_Display_Criteria ='j.fieldvalue = j.fieldvalue Or j.fieldvalue = j.fieldvalue')
              Let $Employee-status-found ='Y'
  
  Else
     Do get-employee-status        
  end-if
  
 #debug9 SHOW $EmployeeFound        
 #debug9 SHOW  $Comp-Pay-found      
 #debug9 SHOW $Comp-found           
 #debug9 SHOW $Department-found     
 #debug9 SHOW $Union-cd-found       
 #debug9 SHOW $Acct-found           
 #debug9 SHOW $Employee-type-found  
 #debug9 SHOW $Employee-status-found
 #debug9 SHOW $Divcdfound

  
  If  $Comp-Pay-found ='Y' and $Comp-found='Y' and  $Department-found ='Y' and  $Union-cd-found = 'Y' and  $Acct-found='Y' and  $Employee-type-found='Y' and $Divcdfound='Y' and $Employee-status-found='Y'
     
     Let $EmployeeFound ='Y'
    
  End-if 
     
End-Procedure


!***********************************************************************
Begin-Procedure get-Company-Paygroup 
!***********************************************************************
#debug9 Show 'get-Company-Paygroup'
 
 
Begin-Select distinct
JCP.Company
JCP.paygroup  

  Let $Comp-Pay-found ='Y'
  
              
From   ps_job jcp

Where  jcp.emplid            = $emplid
And    jcp.empl_rcd         = #empl_rcd_nbr
and jcp.effdt between   $From_Date AND  $Thru_Date
And   jcp.company||jcp.paygroup in (select distinct j.company||j.paygroup from ps_paygroup_tbl j
                                   where [$GEXXX901_Include_Company_Paygroup_Criteria])

End-Select
End-Procedure

!***********************************************************************
Begin-Procedure get-Company 
!***********************************************************************
!--------------------------------------------------------------------------------------------
#debug9 Show 'get-Company'

Begin-Select distinct
JCY.COMPANY

  Let $Comp-found ='Y'
  
  
From   ps_job JCY

Where  JCY.emplid            = $emplid
And    JCY.empl_rcd         = #empl_rcd_nbr
and JCY.effdt between   $From_Date AND  $Thru_Date
And   JCY.company in (select distinct j.company from ps_company_tbl j
                                    where [$GEXXX900_Include_Company_Criteria])

End-Select
End-Procedure
!----------------------------------------------------------------------------------------------

Begin-Procedure get-ACCT_CD 
!--------------------------------------------------------------------------------------------
#debug9 Show 'get-ACCT_CD'

Begin-Select distinct
JCA.ACCT_CD

  Let $Acct-found ='Y'
  
 
              
From   ps_job JCA

Where  JCA.emplid            = $emplid
And    JCA.empl_rcd         = #empl_rcd_nbr
and JCA.effdt between   $From_Date AND  $Thru_Date
and JCA.ACCT_CD in (select distinct j.acct_cd from PS_GEX_ACCT_CD_TBL  j
                     where [$GEXXX909_Include_Acct_Cd_Criteria])
                     
End-Select
End-Procedure
!----------------------------------------------------------------------------------------------                     
          
Begin-Procedure get-union-cd 
!--------------------------------------------------------------------------------------------
#debug9 Show 'get-union-cd'

Begin-Select distinct
JUC.UNION_CD

  Let $Union-cd-found ='Y'
  
  
              
From   ps_job JUC
Where  JUC.emplid            =$emplid
And    JUC.empl_rcd         =#empl_rcd_nbr
and   JUC.effdt between   $From_Date AND  $Thru_Date
And   JUC.UNION_CD IN (select distinct j.UNION_CD from PS_UNION_TBL j
                     where [$GEXXX913_Include_Union_Cd_Criteria])                     
                     
End-Select
End-Procedure

!----------------------------------------------------------------------------------------------                     
          
Begin-Procedure get-Department 
#debug9 Show 'get-Department'

Begin-Select distinct
JCD.Deptid


  Let $Department-found ='Y'
  
  
              
From   ps_job JCD

Where  JCD.emplid            = $emplid
And    JCD.empl_rcd         = #empl_rcd_nbr
and   JCD.effdt between   $From_Date AND  $Thru_Date
And   JCD.deptid IN (select distinct j.deptid from ps_dept_tbl j
                     where [$GEXXX902_INCLUDE_DEPTID_CRITERIA])

End-Select
End-Procedure
!-----------------------------------------------------------------------------------------------

!----------------------------------------------------------------------------------------------                     
          
Begin-Procedure get-Department2 
#debug9 Show 'get-Department2'

Begin-Select distinct
JCD1.Deptid


  Let $Department-found ='Y'
  
  
              
From  ps_gex_empl_bonus JCD1
Where  JCD1.emplid            = $emplid
And    JCD1.empl_rcd         = #empl_rcd_nbr
and   JCD1.GEX_BONUS_YEAR = #Current_Year
And   JCD1.deptid IN (select distinct j.deptid from ps_dept_tbl j
                     where [$GEXXX902_INCLUDE_DEPTID_CRITERIA])

End-Select
End-Procedure
!-----------------------------------------------------------------------------------------------


Begin-Procedure get-employee-type           
#debug9 Show 'get-employee-type'
 
Begin-Select distinct
JET.EMPL_TYPE


  Let $Employee-type-found ='Y'
 
  
              
From   ps_job JET

Where  JET.emplid            = $emplid
And    JET.empl_rcd         = #empl_rcd_nbr
and   JET.effdt between   $From_Date AND  $Thru_Date
And   JET.empl_type in (select distinct j.fieldvalue from PSXLATITEM j where [$GEXXX930_Include_Emp_Type_Criteria]  and j.FIELDNAME = 'EMPL_TYPE')
End-Select
End-Procedure
!-----------------------------------------------------------------------------------------------


Begin-Procedure get-employee-status  

Begin-Select distinct
JES.EMPL_STATUS


  Let $Employee-status-found ='Y'
  
  
              
From   ps_job JES

Where  JES.emplid            = $emplid
And    JES.empl_rcd         = #empl_rcd_nbr
and   JES.effdt between   $From_Date AND  $Thru_Date
And   JES.empl_status in (select distinct j.fieldvalue from PSXLATITEM j where ([$GEXXX903_Include_Emp_Stat_Criteria] Or [$include_Termination_Crieteria])
                              and j.FIELDNAME = 'EMPL_STATUS')
End-Select
End-Procedure
!-----------------------------------------------------------------------------------------------

!***********************************************************************
Begin-Procedure get-Jobcode 
!***********************************************************************


Begin-Select distinct
jobcd.JOBCODE 


  Find &jobcd.JOBCODE  in  $INCLUDE_JOBCODE_CRITERIA  0  #Jobcode_Loc
  	     IF #Jobcode_Loc <> -1
                Let $Jobcodefound='Y'
                Let $JOBCD =&jobcd.JOBCODE 
                
              end-if
  
  
From   ps_job jobcd

Where  jobcd.emplid            = $emplid
And    jobcd.empl_rcd         = #empl_rcd_nbr
And    jobcd.effdt between  $From_Date AND  $Thru_Date

End-Select
!***********************************************************************
End-Procedure
!***********************************************************************

!***********************************************************************
Begin-Procedure get-Dept 
!***********************************************************************
#debug9 Show 'Get-SalaryEffdt'
 Let #GEX_DEPTID=0
 Let $DEPTID_CRITERIA=''
Begin-Select distinct
jd.DEPTID 


  Add 1 To #GEX_DEPTID

  If #GEX_DEPTID = 1
    Let $DEPTID_CRITERIA = '(' || 'GEXD.DEPTID' || ' In ('''     || &jd.DEPTID   || ''''
    
  Else
    Let $DEPTID_CRITERIA = $DEPTID_CRITERIA|| ',''' || &jd.DEPTID   || ''''
    
  End-If 
  
From   ps_job jd

Where  jd.emplid            = $emplid
And    jd.empl_rcd         = #empl_rcd_nbr
and jd.effdt between   $From_Date AND  $Thru_Date
End-Select
Let  $DEPTID_CRITERIA = $DEPTID_CRITERIA  || '))'
 

 if ($GEXXX907_Include_Div_Cd_Criteria= 'gdt.gex_company_div_cd = gdt.gex_company_div_cd') or  ($GEXXX907_Include_Div_Cd_Criteria= 'ALL') or ($DEPTID_CRITERIA = '))' )
    Let $Divcdfound='Y'
  else 
  do get-gexcompanydivcd
 end-if
 
End-Procedure

!***********************************************************************
Begin-Procedure Calculate_Max_Duration_Deptid			      !*
!***********************************************************************
Do Get-All-DeptID
Do Get-Max-Duration-Deptid
Let $MAX_DEPT = $Max_Duration_Deptid
END-Procedure


!***********************************************************************
Begin-Procedure Select-MaxDurationJobcode
!***********************************************************************
Let $max_dept_jobcode=''
Begin-select Distinct 
JobC.jobcode
   
   Let $max_dept_jobcode = &JobC.jobcode
   Do JobCodeDescr
   
from ps_job JobC
Where JobC.emplid=$Emplid
And JobC.empl_rcd=#empl_rcd_nbr
and JobC.DEPTID = $max_duration_deptid
And JobC.effdt=(select max(JobC1.effdt) from ps_job JobC1
		Where JobC1.emplid=JobC.emplid
		And JobC1.empl_rcd=JobC.empl_rcd
		and JobC1.DEPTID = $max_duration_deptid
		And JobC1.effdt between $From_Date and $Thru_Date)
And    JobC.effseq            =
      (Select Max(effseq)
       From   ps_job
       Where  emplid       = JobC.emplid
       And    empl_rcd    = JobC.empl_rcd
       And    effdt        = JobC.effdt)		

End-select
End-Procedure

!***********************************************************************
Begin-Procedure JobCodeDescr
!***********************************************************************
Let $MaxJobcodedescr=''
Begin-select Distinct 
JC.descr
 Let $MaxJobcodedescr = &JC.descr
 
from ps_jobcode_tbl          JC
      where JC.jobcode = $max_dept_jobcode
      and JC.effdt             =
      (Select Max(effdt)
       From   ps_jobcode_tbl  jb2  
       Where  jb2.jobcode       = JC.jobcode
       And    jb2.effdt       <= $AsOfDate)
       
End-select
End-Procedure


!***********************************************************************
Begin-Procedure P220-Bonus-Table-Select
!***********************************************************************
#debug9 Show 'P220-Bonus-Table-Select'

Begin-Select
annual_rt
gex_min_bonus_pct
gex_tar_bonus_pct
gex_max_bonus_pct
gex_csi_adj_pct
gex_bonus_status
gex_bonus_amt
deptid

  If #Year = #Current_Year
    Let $current_found = 'Y'
  End-If


From   ps_gex_empl_bonus

Where  emplid         = $emplid
And    empl_rcd      = #empl_rcd_nbr
And    gex_bonus_year = #Year
And    deptid         = &j.deptid


End-Select
End-Procedure

!***********************************************************************
Begin-Procedure P220-Bonus-Table-Current-Year
!***********************************************************************
#debug9 Show 'P220-Bonus-Table-Current-Year'
#debug8 Show '$emplid: ' $emplid ' #empl_rcd_nbr: ' #empl_rcd_nbr ' #Year : ' #Year ' $max_duration_deptid : ' $max_duration_deptid

Let $current_found = 'N' 
Begin-Select
bonus.annual_rt
bonus.gex_min_bonus_pct
bonus.gex_tar_bonus_pct
bonus.gex_max_bonus_pct
bonus.gex_csi_adj_pct
bonus.gex_bonus_status
bonus.gex_bonus_amt
bonus.deptid
   
  If #Year = #Current_Year
    Let $current_found = 'Y'
  End-If

From   ps_gex_empl_bonus    bonus

Where  bonus.emplid         	= $emplid
And    bonus.empl_rcd      	= #empl_rcd_nbr
And    bonus.gex_bonus_year 	= #Year
And    bonus.deptid         	= $max_duration_deptid


End-Select
End-Procedure

!***********************************************************************
Begin-Procedure Bonus-Table-Last-Year
!***********************************************************************
#debug9 Show 'Bonus-Table-Last-Year'

Begin-Select

bx.annual_rt
bx.gex_min_bonus_pct
bx.gex_tar_bonus_pct
bx.gex_max_bonus_pct
bx.gex_csi_adj_pct
bx.gex_bonus_status
bx.gex_bonus_amt
bx.deptid

From   ps_gex_empl_bonus bx

Where  bx.emplid         = $emplid
And    bx.empl_rcd      = #empl_rcd_nbr
And    bx.gex_bonus_year = #Year
And    bx.deptid         = &b.deptid
	
End-Select
End-Procedure

!***********************************************************************
Begin-Procedure P230-Update-Bonus-Table
!***********************************************************************
#debug9 Show 'P230-Update-Bonus-Table'


Let $Current_Year = To_Char(#Current_Year)
#debug9 Show 'Udapte Bonus amount $emplid : '$emplid ' #Current_Year : '$Current_Year ' $max_duration_deptid : '$max_duration_deptid
If $Proration_Done = 'N'
	Let $Prorated_Or_Not = ' '
Else 
   Let $Prorated_Or_Not = 'Prorated* '
End-If
Begin-SQL
  Update ps_gex_empl_bonus
     Set gex_bonus_status = $Update_Status,
         name	          = $name,	
         Comments_by_name = $Prorated_Or_Not
     Where emplid           = $emplid
       And empl_rcd        = #empl_rcd_nbr
       And gex_bonus_year   = $Current_Year
       and deptid  =$max_duration_deptid
       
       
End-SQL

End-Procedure





!***********************************************************************
Begin-Procedure P240-Update-Bonus-Table
!***********************************************************************
#debug9 Show 'P240-Update-Bonus-Table'
!*************************************************************************
Let $Current_Year = To_Char(#Current_Year)

Begin-SQL
Update ps_gex_empl_bonus FINUPD
Set FINUPD.gex_bonus_status = $Update_Status
WHERE FINUPD.EMPLID		= $emplid
AND FINUPD.EMPL_RCD		= #empl_rcd_nbr
AND FINUPD.GEX_BONUS_YEAR	= #Current_Year
AND FINUPD.DEPTID		= &B.DEPTID
AND FINUPD.EMPL_TYPE		= &B.EMPL_TYPE
AND FINUPD.BUDGET_DEPTID	= &B.BUDGET_DEPTID
AND FINUPD.JOBCODE 		= &B.JOBCODE
and FINUPD.gex_bonus_ind 	= 'C' 
End-SQL

End-Procedure

!***********************************************************************
Begin-Procedure Check-Existing-510
!***********************************************************************
#debug9 Show 'Check-Existing-510'
    Let $exists_510 = 'N'
Begin-Select
'X'
    Let $exists_510 = 'Y'

From   ps_addl_pay_erncd

Where  emplid         = &b.emplid
And    empl_rcd      = &b.empl_rcd
And    erncd          = '510'

End-Select
End-Procedure



!***********************************************************************
Begin-Procedure Check-Existing-510-Effdt
!***********************************************************************
#debug9 Show 'Check-Existing-510-Effdt'
    Let $exists_510_Effdt = 'N'
Begin-Select
'Y'
    Let $exists_510_Effdt = 'Y'

From   ps_addl_pay_effdt

Where  emplid         = &b.emplid
And    empl_rcd      = &b.empl_rcd
And    erncd          = '510'
And    effdt          = $Bonus_Award_Dt

End-Select
End-Procedure

!***********************************************************************
Begin-Procedure Check-Existing-510-Data
!***********************************************************************
#debug9 Show 'Check-Existing-510-Data'
    Let $exists_510_Data = 'N'
Begin-Select
!'Z'
Z.addl_seq 

    Let $exists_510_Data = 'Y'

From   ps_addl_pay_data z

Where  z.emplid         = &b.emplid
And    z.empl_rcd      = &b.empl_rcd
And    z.erncd          = '510'
And    z.effdt          = $Bonus_Award_Dt


End-Select
End-Procedure


!***********************************************************************
Begin-Procedure P240-Insert-Addl-Pay-Erncd
!***********************************************************************
#debug9 Show 'P240-Insert-Addl-Pay-Erncd'
Begin-SQL  On-Error=P299-Error('P240-Insert-Addl-Pay-Erncd')
  Insert Into ps_addl_pay_erncd
    Values (&b.emplid, &b.empl_rcd, '510', 'B')
End-SQL
End-Procedure

!***********************************************************************
Begin-Procedure P250-Insert-Addl-Pay-Effdt
!***********************************************************************
#debug9 Show 'P250-Insert-Addl-Pay-Effdt'
Begin-SQL  On-Error=P299-Error('P250-Insert-Addl-Pay-Effdt')
  Insert Into ps_addl_pay_effdt
    Values (&b.emplid, &b.empl_rcd, '510', $Bonus_Award_Dt, 'B')
End-SQL
End-Procedure

!***********************************************************************
Begin-Procedure P260-Insert-Addl-Pay-Data
!***********************************************************************
Show 'P260-Insert-Addl-Pay-Data :'&b.emplid
  
Begin-SQL  On-Error=P299-Error('P260-Insert-Addl-Pay-Data')
!***********************************************************************
  Insert Into ps_addl_pay_data
    Values
	(&b.emplid, 
	&b.empl_rcd,
	'510',
	$Bonus_Award_Dt,
	#addl_seq,	
	$deptid_ins,	
	' ',
	' ',
	' ',
	' ',
	'J',
	0,
	0,
        #Final_Bonus_Amount,
	'N',
	0,
	$Bonus_Award_Dt_Plus1,		
	#Final_Bonus_Amount,
	0,
	'Y', 				
	'Y',
	'N',
	'N',
	'Y',
	'Y',
	'Y',
	'Y',
	'Y',
	' ',
	' ',
	1,
	'S',
	'A',
	'S',
	'BON',
        'R',                            
        ' ',                            
	' ',
	'STDBU',                        
	' ',
        'B')

End-SQL
End-Procedure



!***********************************************************************
Begin-Procedure P270-Insert-GEX-Empl-Bonus-PCT
!***********************************************************************
#debug8 Show 'P270-Insert-GEX-Empl-Bonus : ' &j.emplid '  ' &j.empl_rcd '  ' #Current_Year '  '$max_duration_deptid '  '$empl_type '  ' $max_duration_deptid '  '$JOBCD '   '#current_bonus_amt ' #Std_hours: '#Std_hours
If $max_duration_deptid = ''
Let $max_duration_deptid = 'Dumy'
End-if
If $Reports_to = ''
	Let $Reports_to = '00019333'
End-if
If $All_grade = ''
	Let $All_grade  = ' '
End-if

!Begin-SQL  
!Insert Into ps_gex_empl_bonus 
!  (EMPLID,EMPL_RCD,GEX_BONUS_YEAR,DEPTID,
! EMPL_TYPE,BUDGET_DEPTID,JOBCODE,POSITION_NBR,NAME,ANNUAL_RT,GEX_MIN_BONUS_PCT,GEX_TAR_BONUS_PCT,GEX_MAX_BONUS_PCT,
! GEX_EMPL_OVERRIDE,GEX_CSI_ADJ_PCT,GEX_BONUS_PCT_USED,GEX_BONUS_STATUS,GEX_BONUS_AMT,GEX_FNAL_BONUS_AMT,GEX_BONUS_GROUP,
! GEX_BONUS_AWARD_DT,GEX_BONUS_IND,REPORTS_TO,COMMENTS_BY_NAME,STD_HOURS,GRADE,HOURLY_RT,GEX_WEEKLY_RT,GEX_WEEKLY_RT_1_5,GEX_WEEKLY_RT_2,SUBMITTED,SUBMITTED_DT,APPROVER_ID,	
!APPROVED,APPROVEDTTM,PROCESSED,PROCESS_DT,COMPLETE_FLAG,COMMENTS)
!    Values (&j.Emplid,&j.Empl_Rcd,#Current_Year,$Deptid,$Empl_Type,$Max_Duration_Deptid,$Jobcd,$Gex_Position_Nbr,$Name,#Annual_Rt_Bonus_Cal,#Current_Min_Pct,
!            #Current_Tar_Pct,#Current_Max_Pct ,'N',0,#Gex_Bonus_Pct_Used,'2',#Current_Bonus_Amt,#Current_Bonus_Amt,$Gex_Dept_bonus_Group,null,'C',$Reports_to, ' ',#Std_hours,$All_grade,0,0,0,0,' ',sysdate,' ',' ',sysdate,' ',sysdate,' ',' ') 
!End-SQL

Begin-SQL  
!ISDVVXK -- GEXHR_848_E161362_BONUS2014 -Begins
!Insert Into ps_gex_empl_bonus 
!  (EMPLID,EMPL_RCD,GEX_BONUS_YEAR,DEPTID,
! EMPL_TYPE,BUDGET_DEPTID,JOBCODE,POSITION_NBR,NAME,ANNUAL_RT,GEX_MIN_BONUS_PCT,GEX_TAR_BONUS_PCT,GEX_MAX_BONUS_PCT,
! GEX_EMPL_OVERRIDE,GEX_CSI_ADJ_PCT,GEX_BONUS_PCT_USED,GEX_BONUS_STATUS,GEX_BONUS_AMT,GEX_FNAL_BONUS_AMT,GEX_BONUS_GROUP,
! GEX_BONUS_AWARD_DT,GEX_BONUS_IND,REPORTS_TO,COMMENTS_BY_NAME,STD_HOURS,GRADE,HOURLY_RT,GEX_WEEKLY_RT,GEX_WEEKLY_RT_1_5,GEX_WEEKLY_RT_2,SUBMITTED,SUBMITTED_DT,APPROVER_ID,	
!APPROVED,APPROVEDTTM,PROCESSED,PROCESS_DT,COMPLETE_FLAG,COMMENTS)
!    Values ($Final_Emplid,#Final_Empl_Rcd,#Current_Year,$Deptid,$Empl_Type,$Max_Duration_Deptid,$Jobcd,$Gex_Position_Nbr,$Name,#Annual_Rt,#Current_Min_Pct,
!            #Current_Tar_Pct,#Current_Max_Pct ,'N',0,#Gex_Bonus_Pct_Used,'2',#Current_Bonus_Amt,#Current_Bonus_Amt,$Gex_Dept_bonus_Group,null,'C',$Reports_to, ' ',#Std_hours,$All_grade,0,0,0,0,' ',sysdate,' ',' ',sysdate,' ',sysdate,' ',' ') 
!
!MM 08/21/2017 BEGIN
!Insert Into ps_gex_empl_bonus 
!  (EMPLID,EMPL_RCD,GEX_BONUS_YEAR,DEPTID,
! EMPL_TYPE,BUDGET_DEPTID,JOBCODE,POSITION_NBR,NAME,ANNUAL_RT,GEX_MIN_BONUS_PCT,GEX_TAR_BONUS_PCT,GEX_MAX_BONUS_PCT,
! GEX_EMPL_OVERRIDE,GEX_CSI_ADJ_PCT,GEX_BONUS_PCT_USED,GEX_BONUS_PCT2_USE,GEX_BONUS_STATUS,GEX_BONUS_AMT,GEX_BONUS_AMT2,GEX_FNAL_BONUS_AMT,GEX_BONUS_GROUP,
! GEX_BONUS_AWARD_DT,GEX_BONUS_IND,REPORTS_TO,COMMENTS_BY_NAME,STD_HOURS,GRADE,HOURLY_RT,GEX_WEEKLY_RT,GEX_WEEKLY_RT_1_5,GEX_WEEKLY_RT_2,SUBMITTED,SUBMITTED_DT,APPROVER_ID,	
!APPROVED,APPROVEDTTM,PROCESSED,PROCESS_DT,COMPLETE_FLAG,PROCESS_NAME,COMMENTS)
!    Values ($Final_Emplid,#Final_Empl_Rcd,#Current_Year,$Deptid,$Empl_Type,$Max_Duration_Deptid,$Jobcd,$Gex_Position_Nbr,$Name,#Annual_Rt,#Current_Min_Pct,
!            #Current_Tar_Pct,#Current_Max_Pct ,'N',0,#Gex_Bonus_Pct_Used,0,'2',#Current_Bonus_Amt,0,#Current_Bonus_Amt,$Gex_Dept_bonus_Group,null,'C',$Reports_to, ' ',#Std_hours,$All_grade,0,0,0,0,' ',sysdate,' ',' ',sysdate,' ',sysdate,' ','GEXPY214',' ')

Insert Into ps_gex_empl_bonus 
  (EMPLID,EMPL_RCD,GEX_BONUS_YEAR,DEPTID,
 EMPL_TYPE,BUDGET_DEPTID,JOBCODE,POSITION_NBR,NAME,ANNUAL_RT,GEX_MIN_BONUS_PCT,GEX_TAR_BONUS_PCT,GEX_MAX_BONUS_PCT,
 GEX_EMPL_OVERRIDE,GEX_CSI_ADJ_PCT,GEX_BONUS_PCT_USED,GEX_BONUS_PCT2_USE,GEX_BONUS_STATUS,GEX_BONUS_AMT,GEX_BONUS_AMT2,GEX_FNAL_BONUS_AMT,GEX_BONUS_GROUP,
 GEX_BONUS_AWARD_DT,GEX_BONUS_IND,REPORTS_TO,COMMENTS_BY_NAME,STD_HOURS,GRADE,HOURLY_RT,GEX_WEEKLY_RT,GEX_WEEKLY_RT_1_5,GEX_WEEKLY_RT_2,SUBMITTED,SUBMITTED_DT,APPROVER_ID,	
APPROVED,APPROVEDTTM,PROCESSED,PROCESS_DT,COMPLETE_FLAG,PROCESS_NAME,COMMENTS)
    Values ($Final_Emplid,#Final_Empl_Rcd,#Current_Year,$Retail_Dept,$Empl_Type,$Max_Duration_Deptid,$Jobcd,$Gex_Position_Nbr,$Name,#Annual_Rt,#Current_Min_Pct,
            #Current_Tar_Pct,#Current_Max_Pct ,'N',0,#Gex_Bonus_Pct_Used,0,'2',#Current_Bonus_Amt,0,#Current_Bonus_Amt,$Gex_Dept_bonus_Group,null,'C',$Reports_to, ' ',#Std_hours,$All_grade,0,0,0,0,' ',sysdate,' ',' ',sysdate,' ',sysdate,' ','GEXPY214',' ')             

!MM 08/21/2017 END
          
!ISDVVXK -- GEXHR_848_E161362_BONUS2014 - Ends            
End-SQL
End-Procedure
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-Bonus-Already-Calculated
!***********************************************************************
Let $Bonus_Calculated = 'N'
Begin-Select
BON.EMPLID

	Let $Bonus_Calculated = 'Y'

FROM PS_GEX_EMPL_BONUS BON 
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
!WHERE BON.EMPLID	= &j.emplid
!AND BON.EMPL_RCD	= &j.empl_rcd
WHERE BON.EMPLID	= $Final_Emplid
AND BON.EMPL_RCD	= #Final_Empl_Rcd
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
AND BON.GEX_BONUS_YEAR	= #Current_Year
!AND BON.DEPTID		= $Deptid            !MM 08/21/2017
AND BON.DEPTID		= $Retail_Dept       !MM 08/21/2017
AND BON.EMPL_TYPE	= $empl_type
AND BON.BUDGET_DEPTID	= $max_duration_deptid
AND BON.JOBCODE 	= $JOBCD

End-Select
End-Procedure Check-Bonus-Already-Calculated
!***********************************************************************

!***********************************************************************
Begin-Procedure Update-Bonus-Amount
!***********************************************************************
Begin-Sql

UPDATE PS_GEX_EMPL_BONUS BONUPD
SET BONUPD.GEX_MIN_BONUS_PCT = #current_min_pct,
    BONUPD.GEX_TAR_BONUS_PCT = #current_tar_pct,
    BONUPD.GEX_MAX_BONUS_PCT = #current_max_pct,
    BONUPD.GEX_BONUS_AMT     = #current_bonus_amt,
    BONUPD.POSITION_NBR      = $Gex_Position_Nbr,
    BONUPD.GEX_BONUS_GROUP   = $Gex_Dept_bonus_Group,
    BONUPD.GEX_BONUS_PCT_USED= #Gex_Bonus_Pct_Used,
    BONUPD.STD_HOURS         = #Std_hours,
    BONUPD.ANNUAL_RT         =#Annual_Rt,
    BONUPD.GEX_FNAL_BONUS_AMT=#current_bonus_amt

    
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin    
!WHERE BONUPD.EMPLID		= &j.emplid
!AND BONUPD.EMPL_RCD		= &j.empl_rcd
WHERE BONUPD.EMPLID		= $Final_Emplid
AND BONUPD.EMPL_RCD		= #Final_Empl_Rcd
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
AND BONUPD.GEX_BONUS_YEAR	= #Current_Year
!AND BONUPD.DEPTID		= $Deptid          !MM 08/21/2017
AND BONUPD.DEPTID		= $Retail_Dept       !MM 08/21/2017
AND BONUPD.EMPL_TYPE		= $empl_type
AND BONUPD.BUDGET_DEPTID	= $max_duration_deptid
AND BONUPD.JOBCODE 		= $JOBCD

End-Sql
!***********************************************************************
End-Procedure Update-Bonus-Amount
!***********************************************************************



!***********************************************************************
Begin-Procedure New-Page
!***********************************************************************
#debug9 Show 'New-Page'
  If $OK-To-Advance-Page = 'Y'
    Let $OK-To-Advance-Page = 'N'
    New-Page
  End-If
End-Procedure

!***********************************************************************
Begin-Procedure P280-Empl-Type-Totals
!***********************************************************************
#debug9 Show 'P280-Empl-Type-Totals'
  If #type-count > 0
    Evaluate $empl_type
      When = 'H'
        Print 'Hourly Employee Totals'            (+2,{#column6})
      When = 'S'
        Print 'Salaried Employee Totals'          (+2,{#column6})
    End-Evaluate
    Print #type_previous_bonus          (,{#column8})  Edit 999,999,999,990.00
    Print #type_current_bonus           (,{#column11}) Edit 999,999,999,990.00  Bold
  End-If

  Let #type-count          = 0
  Let #type_previous_bonus = 0
  Let #type_current_bonus  = 0
End-Procedure

!***********************************************************************
Begin-Procedure P285-Deptid-Totals
!***********************************************************************
#debug9 Show 'P285-Deptid-Totals'
  If #deptid-count > 0
    Print 'Deptid Totals'                 (+2,{#column6})
    Print #deptid_previous_bonus          (,{#column8})  Edit 999,999,999,990.00
    Print #deptid_current_bonus           (,{#column11}) Edit 999,999,999,990.00  Bold
  End-If

  Let #deptid-count          = 0
  Let #deptid_previous_bonus = 0
  Let #deptid_current_bonus  = 0
End-Procedure

!***********************************************************************
Begin-Procedure P290-Print-Record
!***********************************************************************
#debug9 Show 'P290-Print-Record'

  Let #weekly_rt_1 = #weekly_rt * 1.5	
  Let #weekly_rt_2 = #weekly_rt * 2	

  Do Get-Acct-cd-descr

  Print $name                   (+2,{#column1},21) 
  Print $emplid                 (,{#column2})
  Print $AcctNameAbbrv          (,{#column3})

  Do Format-DateTime($Hire_Dt_Print, $Hire_Date, {DEFMDY}, '', '')
  Print $Hire_Date              (,{#column4})

  !If $Empl_Type = 'S'
    Print #weekly_rt            (,{#column5})   Edit 99,990.99
    Print #annual_rt            (,{#column6})   Edit 999,990.99
 ! Else
   ! Print #hourly_rt            (,{#column5})   Edit 99,990.99
   ! Print #weekly_rt            (,{#column6})   Edit 999,990.99
    
   ! Print #weekly_rt_1          (,73)           Edit 999,990.99
   ! Print #weekly_rt_2          (,83)           Edit 999,990.99
    
  !End-If

  !If $Empl_Type = 'S'
    	Move #previous_min_pct To $temp 0.000
    	Let $previous_min_pct = Substr($temp,2,4)
    	!Print $previous_min_pct     (,{#column7})

	    !Print '/'                   (,)

    	Move #previous_tar_pct To $temp 0.000
    	Let $previous_tar_pct = Substr($temp,2,4)
    	!Print $previous_tar_pct     (,)

    	!Print '/'                   (,)

    	Move #previous_max_pct To $temp 0.000
    	If #previous_max_pct >= 1
      		Let $previous_max_pct = Substr($temp,1,4)
    	Else
      		Let $previous_max_pct = Substr($temp,2,4)
    	End-If
    	!Print $previous_max_pct     (,)

    	Move #previous_csi_adj_pct To $temp 00.000

    	If #previous_csi_adj_pct = 1
      		Let $previous_csi_adj_pct = ' 1.00'
    	Else
      		If #previous_csi_adj_pct = -1
        		Let $previous_csi_adj_pct = '-1.00'
      		Else
        		If Substr($temp,1,1) = '-'
          			Let $previous_csi_adj_pct = '-' || Substr($temp,3,4)
        		Else
          			Let $previous_csi_adj_pct = ' ' || Substr($temp,3,4)
        		End-If
      		End-If
    	End-If

    	Print #Bonus_Pct_Used (,{#column8})
	Move #current_min_pct To $temp 0.000
    	Let $current_min_pct = Substr($temp,2,4)
 	! Print $current_min_pct      (,{#column10})
 	Print $current_min_pct      (,{#column7})
    	Print '/'                   (,)

    	Move #current_tar_pct To $temp 0.000
    	Let $current_tar_pct = Substr($temp,2,4)
    	Print $current_tar_pct      (,)

    	Print '/'                   (,)

    	Move #current_max_pct To $temp 0.000
    	If #current_max_pct >= 1
      		Let $current_max_pct = Substr($temp,1,4)
    	Else
      		Let $current_max_pct = Substr($temp,2,4)
    	End-If
    	Print $current_max_pct      (,)

    	Move #current_csi_adj_pct To $temp 00.000

    	If #current_csi_adj_pct = 1
      		Let $current_csi_adj_pct = ' 1.00'
    	Else
      		If #current_csi_adj_pct = -1
        		Let $current_csi_adj_pct = '-1.00'
      		Else
        		If Substr($temp,1,1) = '-'
          			Let $current_csi_adj_pct = '-' || Substr($temp,3,4)
        		Else
          			Let $current_csi_adj_pct = ' ' || Substr($temp,3,4)
        		End-If
      		End-If
    	End-If

    	!Print $current_csi_adj_pct  (,{#column11})
  !End-If

  !Print #previous_bonus_amt     (,{#column9})   Edit 9,999,990.00
  !Print #current_bonus_amt      (,{#column12})  Edit 9,999,990.00  Bold
  Print #current_bonus_amt      (,{#column9})  Edit 9,999,990.00  Bold
  
  
  If $Run_Type = '1' or $Run_Type = '2'
  	If $Empl_Type = 'S'
    		!Print $max_duration_deptid    (,{#column16})
  	Else
    		Print ' '                     (,{#column16})
    		!Print $max_duration_deptid    (,+17)
  	End-if
  End-if
  
  If $Run_Type = '3' or $Run_Type = '4'
  	If $Empl_Type = 'S'
    		!Print $Deptid    (,{#column16})
  	Else
    		!Print ' '                     (,{#column16})
    		!Print $Deptid    (,+17)
  	End-if
  
  End-if
  
  
End-Procedure
!**************************************************************************************************************************
Begin-Procedure Get-AccountCd-Descr
!**************************************************************************************************************************
Begin-Select
ACCT.DESCRSHORT

	Let $Account_Code_Descr = &ACCT.DESCRSHORT

FROM PS_GEX_ACCT_CD_TBL ACCT 
WHERE ACCT.EFFDT = (SELECT MAX(ACCT1.EFFDT) FROM PS_GEX_ACCT_CD_TBL ACCT1 
		    WHERE ACCT.ACCT_CD = ACCT1.ACCT_CD
		    AND ACCT.EFFDT<=SYSDATE)
AND ACCT.ACCT_CD = $Acctcd 
End-Select

End-Procedure Get-AccountCd-Descr
!**************************************************************************************************************************


Begin-Procedure Get-Jobcode-Descr
Begin-Select
JBCDDES.DESCR

	Let $Jobcode_Descr = &JBCDDES.DESCR
	
FROM PS_JOBCODE_TBL JBCDDES 
WHERE JBCDDES.EFFDT = (SELECT MAX(JDSR.EFFDT) FROM PS_JOBCODE_TBL JDSR 
			WHERE JDSR.SETID = JBCDDES.SETID 
			AND JDSR.JOBCODE = JBCDDES.JOBCODE 
			AND JDSR.EFFDT <= SYSDATE)

AND JBCDDES.JOBCODE = $Jobcd
AND JBCDDES.SETID = 'COMMN'

End-Select 

End-Procedure Get-Jobcode-Descr

!**************************************************************************************************************************
Begin-Procedure write-file
!**************************************************************************************************************************
!show 'writing file'
move #annual_rt to $annual_rt
move &dateBegan to $date 
move  &timeBegan to $time 

    Move #current_min_pct To $temp 0.000
    Let $current_min_pct = Substr($temp,2,4)
   

    Move #current_tar_pct To $temp 0.000
    Let $current_tar_pct = Substr($temp,2,4)
   

    Move #current_max_pct To $temp 0.000
    If #current_max_pct >= 1
      Let $current_max_pct = Substr($temp,1,4)
    Else
      Let $current_max_pct = Substr($temp,2,4)
    End-if
    Move #current_csi_adj_pct To $temp 00.000

    If #current_csi_adj_pct = 1
      Let $current_csi_adj_pct = ' 1.00'
    Else
      If #current_csi_adj_pct = -1
        Let $current_csi_adj_pct = '-1.00'
      Else
        If Substr($temp,1,1) = '-'
          Let $current_csi_adj_pct = '-' || Substr($temp,3,4)
        Else
          Let $current_csi_adj_pct = ' ' || Substr($temp,3,4)
        End-If
      End-If
    End-If
  If $Empl_Type = 'H'
  

  
  End-if
Do Format-DateTime($Last_hire_Dt, $Last_hire_Dt_Write, {DEFMDY}, '', '')  

Let $datetime = $date ||  $time
If $Run_Type = '1' or 
    $Run_Type = '2'
  
  Let $Emplid_Write ='="' || $Emplid || '"'
  Let $Empl_Rcd_Write ='="' || $Empl_Rcd || '"'
  Do Get-AccountCd-Descr
  Let $Account_Code_Descr_Write = '="' || $Account_Code_Descr || '"'
  Let $Jobcode1_write  ='="' || $Jobcd  || '"'
  Do Get-Jobcode-Descr
  Let $Jobcode_Descr_write  ='="' || $Jobcode_Descr  || '"'
  
  Let $Max_duration_deptid_write ='="' || $max_duration_deptid || '"'
  Let $Deptid_write  ='="' || $Deptid  || '"'
  
string $name  by $delim into $actives

string $emplid_Write  by $delim into $actives
string $empl_rcd by $delim into $actives 

string $Jobcode1_write  by $delim into $actives 
string $Jobcode_Descr_write  by $delim into $actives 
string $Last_hire_Dt_Write #annual_rt by $delim into $actives

string  $Deptid_write by $delim into $actives 
string  $Max_duration_deptid_write by $delim into $actives 
string  #Current_Bonus_Amt by $delim into $actives 
If $Proration_Done = 'N'
	Let $Space = ' '
Else
	Let $Space = 'Prorated*'
End-If
string $name $emplid_Write $empl_rcd $Account_Code_Descr_Write $Jobcode1_write $Jobcode_Descr_write $Last_hire_Dt_Write #annual_rt $Deptid_write $Max_duration_deptid_write #Current_Bonus_Amt $ReportTitle2  $datetime by $delim into $actives

	

else
	Do Format-DateTime($Last_hire_Dt, $Last_hire_Dt_Write, {DEFMDY}, '', '')  
	Let $Emplid_Write ='="' || $Emplid || '"'
    	Let $Empl_Rcd_Write ='="' || $Empl_Rcd || '"'
    	Do Get-AccountCd-Descr
    	Let $Account_Code_Descr_Write = '="' || $Account_Code_Descr || '"'
    	Let $Jobcode1_write  ='="' || $Jobcode  || '"'
    	Do Get-Jobcode-Descr
    	Let $Jobcode_Descr_write  ='="' || $Jobcode_Descr  || '"'
    	
    	Let $Max_duration_deptid_write ='="' || $Budget_Deptid || '"'
    	Let $Deptid_write  ='="' || $Deptid  || '"'
  	string $name  by $delim into $actives
  
  	string $emplid_Write  by $delim into $actives
  	string $empl_rcd by $delim into $actives 
  
  	string $Jobcode1_write  by $delim into $actives 
  	string $Jobcode_Descr_write  by $delim into $actives 
  	string $Hire_Date #Calculated_Annual_Rt by $delim into $actives
  	
  	string  $Deptid_write by $delim into $actives 
  	string  $Max_duration_deptid_write by $delim into $actives 
  	string  #Current_Bonus_Amt by $delim into $actives 
  	If $Proration_Done = 'N'
  		Let $Space = ' '
  	Else
  		Let $Space = 'Prorated*'
  	End-If
  	
  	string $name $emplid_Write $empl_rcd $Account_Code_Descr_Write $Jobcode1_write $Jobcode_Descr_write $Last_hire_Dt_Write #Calculated_Annual_Rt $Deptid_write $Max_duration_deptid_write #Final_Bonus_Amount $ReportTitle2  $datetime by $delim into $actives
  
End-if

write 1 from $actives 



End-Procedure

!**********************************************************************
Begin-Procedure  select-jobcode-parameters

  Let $OprID               = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID         = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_GXPY214B_ROWS = 0
  Let $INCLUDE_JOBCODE_CRITERIA = ''
  Let $EXCLUDE_JOBCODE_CRITERIA = ''
  Let $INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'
  Let $EXCLUDE_JOBCODE_DISPLAY_CRITERIA = 'NONE'

Begin-Select

GEX_RC_GXPY214B.JOBCODE

  Add 1 To #GEX_RC_GXPY214B_ROWS

  If #GEX_RC_GXPY214B_ROWS = 1
    Let $INCLUDE_JOBCODE_CRITERIA = '(' || $Jobcode_Alias || ' In ('''     || &GEX_RC_GXPY214B.JOBCODE || ''''
    Let $EXCLUDE_JOBCODE_CRITERIA = '(' || $Jobcode_Alias || ' Not In (''' || &GEX_RC_GXPY214B.JOBCODE || ''''
  Else
    Let $INCLUDE_JOBCODE_CRITERIA = $INCLUDE_JOBCODE_CRITERIA || ',''' || &GEX_RC_GXPY214B.JOBCODE  || ''''
    Let $EXCLUDE_JOBCODE_CRITERIA = $EXCLUDE_JOBCODE_CRITERIA || ',''' || &GEX_RC_GXPY214B.JOBCODE  || ''''
  End-If

From  PS_GEX_RC_GXPY214B GEX_RC_GXPY214B

Where GEX_RC_GXPY214B.OPRID                = [$OprID]
And   GEX_RC_GXPY214B.RUN_CNTL_ID          = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_GXPY214B.JOBCODE, ' ') != ' '

End-Select

  If #GEX_RC_GXPY214B_ROWS = 0
    Let $INCLUDE_JOBCODE_CRITERIA = $Jobcode_Alias || ' = ' || $Jobcode_Alias
    Let $EXCLUDE_JOBCODE_CRITERIA = $Jobcode_Alias || ' = ' || $Jobcode_Alias
  Else
    Let $INCLUDE_JOBCODE_CRITERIA = $INCLUDE_JOBCODE_CRITERIA || '))'
    Let $EXCLUDE_JOBCODE_CRITERIA = $EXCLUDE_JOBCODE_CRITERIA || '))'
    Let $INCLUDE_JOBCODE_DISPLAY_CRITERIA = $INCLUDE_JOBCODE_CRITERIA
    Let $EXCLUDE_JOBCODE_DISPLAY_CRITERIA = $EXCLUDE_JOBCODE_CRITERIA
  End-If


End-Procedure
!**************************************************************************


!***********************************************************************
Begin-Procedure P299-Error($msg)
!***********************************************************************
#debug9 Show 'P299-Error'
  If Substr($_sql-error,1,9) <> 'ORA-00001'
    Show 'SQL Error in ' $msg
    Show 'SQL Error:  '  $_sql-error
    Stop
  End-If
End-Procedure

!***********************************************************************
Begin-Procedure Get-All-DeptID
!***********************************************************************
Let #Row_Count_DeptID =1 
Let #Curr_DeptID = 1
Let $Pre_DeptID = ''
Clear-array  Name=Deptid
Begin-Select
ALD.Jobcode
ALD.Effdt
ALD.Deptid
ALD.EffSeq

	Let $All_Jobcode = Ltrim(Rtrim(&ALD.Jobcode,' '),' ')
	Let $All_Deptid = Ltrim(Rtrim(&ALD.Deptid,' '),' ')
	Let $All_Effdt_Deptid = &ALD.Effdt
	Let #All_EffSeq_Deptid = &ALD.EffSeq
	Let $End_Date_Deptid = $Thru_Date
	Let $Start_Date_Deptid = $From_Date
	If $Pre_DeptID = '' 
	   Let #Duration_Deptid = datediff($End_Date_Deptid,$All_Effdt_Deptid,'DAY')
	   #debug8 Show 'First Duration DeptID: '#Duration_Deptid ' Deptid : '$All_Deptid
	   Put $All_Deptid #Duration_Deptid $All_Effdt_Deptid #All_EffSeq_Deptid Into Deptid(#Curr_DeptID)
	   Let $Old_Effdt_Deptid = $All_Effdt_Deptid
	   Let $Pre_Deptid = $All_Deptid
	   Let #Curr_DeptID = #Curr_DeptID + 1
	Else
	  
	   Let #Duration_Deptid = datediff($Old_Effdt_Deptid,$All_Effdt_Deptid,'DAY')
	   Put $All_Deptid #Duration_Deptid $All_Effdt_Deptid #All_EffSeq_Deptid  Into Deptid(#Curr_DeptID)
	   Let $Old_Effdt_Deptid = $All_Effdt_Deptid
	   Let $Pre_Deptid = $All_Deptid
	   Let #Curr_DeptID = #Curr_DeptID + 1
	   #debug8 Show 'Duration Deptid : '#Duration_Deptid ' Deptid : '$All_Deptid
	  
	End-If
	Let #Row_Count_Deptid = #Row_Count_Deptid + 1
	
From PS_JOB ALD
Where ALD.emplid = $emplid
And ALD.empl_rcd = #empl_rcd_nbr
And ALD.effdt between $From_Date and $Thru_Date
order by ALD.EFFDT desc
End-Select
If #Row_Count_Deptid =1 
 Do Get-Prev-Deptid
 Let #Duration_Deptid = #DurfromRctl       
 Put $prevd_Deptid #Duration_Deptid $Prevd_Deptid_Effdt #Prevd_Deptid_EffSeq Into Deptid(#Curr_DeptID)
 Let #Row_Count_Deptid = #Row_Count_Deptid + 1
 #debug8 Show 'Duration DeptID : '#Duration_Deptid 'Prev Deptid : '$prevd_Deptid

Else
 Do Get-Prev-Deptid
 Let #Duration_Deptid = datediff($All_Effdt_Deptid,$Start_Date_Deptid,'DAY')
 If $prevd_Deptid <> ''
 Put $prevd_Deptid #Duration_Deptid $Prevd_Deptid_Effdt #Prevd_Deptid_EffSeq  Into Deptid(#Curr_DeptID)
 Let #Row_Count_Deptid = #Row_Count_Deptid + 1
 
 End-If
 #debug8 Show 'Duration DeptID : '#Duration_Deptid 'Prev Deptide : '$prevd_Deptid

End-If
!***********************************************************************
End-Procedure Get-All-Deptid
!***********************************************************************

!***********************************************************************
Begin-Procedure  Get-Prev-Deptid
!***********************************************************************
#debug9 show 'entering procedure Get-Prev-Deptid'
Let $prevd_Deptid = ''
Begin-Select
PREVD.DEPTID
PREVD.ANNUAL_RT
PREVD.HOURLY_RT
PREVD.STD_HOURS
PREVD.EFFDT
PREVD.EFFSEQ

	Let $Prevd_Deptid = &PREVD.DEPTID
	Let $Prevd_Deptid_Effdt = &PREVD.EFFDT
	Let #Prevd_Deptid_EffSeq = &PREVD.EFFSEQ
	
	#debug9 Show 'Prev Deptid in Loop :'$prevd_Deptid
FROM PS_JOB PREVD
Where PREVD.emplid = $emplid
And PREVD.empl_rcd = #empl_rcd_nbr
AND PREVD.EFFDT = (Select Max(PREVD1.effdt)
                       From   ps_job  PREVD1
                       Where   PREVD.emplid       = PREVD1.emplid
       And     PREVD.empl_rcd    =  PREVD1.empl_rcd
       And     PREVD1.effdt       <= $From_Date )
AND  PREVD.EFFSEQ =   (Select Max(PREVD2.EFFSEQ)
                     From   ps_job  PREVD2
       Where   PREVD.emplid       = PREVD2.emplid
       And     PREVD.empl_rcd    =  PREVD2.empl_rcd
       And     PREVD.effdt       = PREVD2.effdt )    

ORDER BY PREVD.EFFDT DESC


End-Select
!***********************************************************************
End-Procedure Get-Prev-Deptid
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Max-Duration-Deptid
!***********************************************************************
Let #Deptid_Tra = 1
Let #compute_max_duration = 0
Let $prev_deptid_proc = ''
Let $Max_Duration_Deptid = ''
While #Deptid_Tra < #Row_Count_Deptid
   Get $Prevd_Deptid #Duration_Deptid $Stored_Deptid_Effdt #Store_Dept_Effseq From Deptid(#Deptid_Tra)
   
   Let #Deptid_Tra = #Deptid_Tra + 1
   Let #Deptid_Tra1 = 1
   Do Check-Valid-Jobcode-In-Dept
   If $Eligible_Dept_Jobcode = 'YY'
   	If $prev_deptid_proc <> $prevd_Deptid
   		Let #Deptid_Duration_Days = 0
   		While #Deptid_Tra1 < #Row_Count_Deptid
   		
   			Get $prevd_Deptid1 #Duration_Deptid1 From Deptid(#Deptid_Tra1)
   
   				If $prevd_Deptid1 = $prevd_Deptid	
   					Let #Deptid_Duration_Days = #Deptid_Duration_Days + #Duration_Deptid1
   
   				End-IF
   				
   			Let #Deptid_Tra1 = #Deptid_Tra1 + 1
   		End-While
   
		if #compute_max_duration < #Deptid_Duration_Days
			Let #compute_max_duration = #Deptid_Duration_Days
			Let $Max_Duration_Deptid = $prevd_Deptid
			#debug8 Show '$Max_Duration_Deptid :'$Max_Duration_Deptid ' #compute_max_duration : '#compute_max_duration
		End-if
		Let $prev_deptid_proc = $prevd_Deptid
   	End-if
   End-if
   	
End-While

!***********************************************************************
End-Procedure Get-Max-Duration-Deptid
!***********************************************************************

!***********************************************************************
Begin-Procedure P300-Finalization
!***********************************************************************
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  Else
    New-Page
    Print 'Report Totals'             (+1,{#column6})
    Print #report_previous_bonus      (,{#column8})  Edit 999,999,999,990.00
    Print #report_current_bonus       (,{#column11}) Edit 999,999,999,990.00  Bold
  End-If

  !rollback

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'
End-Procedure
!***********************************************************************
Begin-Procedure Check-Jobcode-Eligibility
!***********************************************************************
Let $Eligible_Jobcode = 'N'
Begin-Select 
'YB'


	Let $Eligible_Jobcode = 'YB'
	
FROM PS_JOB JB
WHERE JB.EMPLID = $Emplid
AND JB.EMPL_RCD = #Empl_Rcd_Nbr
AND JB.EFFDT BETWEEN $From_Date and $Thru_Date
AND JB.JOBCODE IN (SELECT Distinct GJB.JOBCODE FROM PS_GEX_JOBCODE_TBL GJB WHERE 
		   GJB.EFFDT = (SELECT MAX(GJB1.EFFDT) FROM PS_GEX_JOBCODE_TBL GJB1 
		   		WHERE GJB1.SETID = GJB.SETID
		   		AND GJB.GEX_BONUS_GROUP = GJB1.GEX_BONUS_GROUP
		   		AND GJB.JOBCODE = GJB1.JOBCODE
		   		AND GJB1.EFFDT<=SYSDATE)
                   AND GJB.STATUS='A'		   !ISDVVXK  GEXHR_848_E161362_BONUS2014		
		   AND GJB.GEX_BONUS_GROUP = $Gex_Dept_bonus_Group )
End-Select
!***********************************************************************
End-Procedure Check-Jobcode-Eligibility
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-Valid-Jobcode-In-Dept
!***********************************************************************
Let $Eligible_Dept_Jobcode = 'N'
Do Get-Dept-Bonus-group
Begin-Select 
'YY'

	Let $Eligible_Dept_Jobcode = 'YY'
	
	
FROM PS_JOB JB
WHERE JB.EMPLID = $Emplid
AND JB.EMPL_RCD = #Empl_Rcd_Nbr
AND JB.DEPTID   = $Prevd_Deptid
AND JB.EFFDT 	= $Stored_Deptid_Effdt
AND JB.EFFSEQ 	= #Store_Dept_Effseq
AND JB.JOBCODE IN (SELECT DISTINCT GJB.JOBCODE FROM PS_GEX_JOBCODE_TBL GJB WHERE 
		   GJB.EFFDT = (SELECT MAX(GJB1.EFFDT) FROM PS_GEX_JOBCODE_TBL GJB1 
		   		WHERE GJB1.SETID = GJB.SETID
		   		AND GJB.GEX_BONUS_GROUP = GJB1.GEX_BONUS_GROUP
		   		AND GJB.JOBCODE = GJB1.JOBCODE
		   		AND GJB1.EFFDT<=SYSDATE)
		   AND GJB.GEX_BONUS_GROUP = $Gex_valid_Dept_bonus_Group)
End-Select
!***********************************************************************
End-Procedure Check-Valid-Jobcode-In-Dept
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Dept-Bonus-group
!***********************************************************************
Let $Gex_valid_Dept_bonus_Group = ''
Begin-Select
GDPTBL.GEX_BONUS_GROUP

	Let $Gex_valid_Dept_bonus_Group = &GDPTBL.GEX_BONUS_GROUP
	
FROM PS_GEX_DEPT_TBL GDPTBL 
WHERE GDPTBL.EFFDT = (SELECT MAX(GDPTBL1.EFFDT) FROM PS_GEX_DEPT_TBL GDPTBL1 
			WHERE GDPTBL.SETID = GDPTBL1.SETID
			AND GDPTBL1.DEPTID = GDPTBL.DEPTID
			AND GDPTBL1.EFFDT<=SYSDATE)
AND GDPTBL.SETID = 'COMMN'			
AND GDPTBL.DEPTID = $Prevd_Deptid
			
End-Select
!***********************************************************************
End-Procedure Get-Dept-Bonus-group
!***********************************************************************


!***********************************************************************
Begin-Procedure Get-Bonus-group
!***********************************************************************
 Let $Gex_Dept_bonus_Group = ''
Begin-Select
DPTBL.GEX_BONUS_GROUP

	Let $Gex_Dept_bonus_Group = &DPTBL.GEX_BONUS_GROUP
	
FROM PS_GEX_DEPT_TBL DPTBL 
WHERE DPTBL.EFFDT = (SELECT MAX(DPTBL1.EFFDT) FROM PS_GEX_DEPT_TBL DPTBL1 
			WHERE DPTBL.SETID = DPTBL1.SETID
			AND DPTBL1.DEPTID = DPTBL.DEPTID
			AND DPTBL1.EFFDT<=SYSDATE)
AND DPTBL.SETID = 'COMMN'			
AND DPTBL.DEPTID = $Max_Duration_Deptid
			
End-Select
!***********************************************************************
End-Procedure Get-Bonus-group
!***********************************************************************
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start
!***********************************************************************
Begin-Procedure Get-Non-Max-Bonus-group
!***********************************************************************
 Let $Gex_Non_Max_Dept_bonus_Group = ''
Begin-Select
NONDPTBL.GEX_BONUS_GROUP
	
	Let $Gex_Non_Max_Dept_bonus_Group = &NONDPTBL.GEX_BONUS_GROUP
	#debug8 Show 'Non Max deptarment Bonus Group :'$Gex_Non_Max_Dept_bonus_Group
	
FROM PS_GEX_DEPT_TBL NONDPTBL 
WHERE NONDPTBL.EFFDT = (SELECT MAX(NONDPTBL1.EFFDT) FROM PS_GEX_DEPT_TBL NONDPTBL1 
			WHERE NONDPTBL.SETID = NONDPTBL1.SETID
			AND NONDPTBL1.DEPTID = NONDPTBL.DEPTID
			AND NONDPTBL1.EFFDT<=SYSDATE)
AND NONDPTBL.SETID = 'COMMN'			
AND NONDPTBL.DEPTID = $Non_Max_DeptID
			
End-Select
!***********************************************************************
End-Procedure Get-Non-Max-Bonus-group
!***********************************************************************
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
!***********************************************************************
Begin-Procedure Get-EE-Salary
!***********************************************************************
Do Get-Future-Dt-HIR
If $Future_dt_hir = 'N'
	Do Get-Future-Dt-REH
  show '$Future_dt_reh:' $Future_dt_reh
	If $Future_dt_reh = 'N'
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
		Do Find-Salary-AsofRuncontrol
		!Do Get-Salary-ASOF-SalaryDate
		!If $Salary_asof_date = 'N'
		!	Do Get-Salary-Elig-Jobcode
		!	If $Salary_Elig_Jobcode = 'N'
		!		#debug8 Show 'Salary Not found for Valid Jobcode after  salary date from Run control'				
		!	Else
		!		#debug8 Show 'Salary found for Valid Jobcode after  salary date from Run control'				
		!	End-if
		!Else
		!	#debug8 Show 'Salary found for Valid Jobcode as of salary date from Run control'
		!End-if
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
	Else
		#debug8 Show 'Future dated REHIRE row found'
	End-if
Else
	#debug8 Show 'Futured dated HIRE Row found'
End-if


!***********************************************************************
End-Procedure Get-EE-Salary
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Future-Dt-HIR
!***********************************************************************
Let $Future_dt_hir = 'N'

Begin-Select
SALHIR.ACTION
SALHIR.EFFDT
SALHIR.ANNUAL_RT
SALHIR.HOURLY_RT
SALHIR.STD_HOURS
SALHIR.EMPL_TYPE	!GEXPY_848_E95094_02 2012-05-22 VENDAXG

	Let $Future_dt_hir = 'Y'
	Let #annual_rt = &SALHIR.ANNUAL_RT
	Let #hourly_rt = &SALHIR.HOURLY_RT
	Let #weekly_rt = #hourly_rt * &SALHIR.STD_HOURS
	Let #Std_hours = &SALHIR.STD_HOURS !Vendaxg Added for Bonus Processing 2011 on 05/25/2011
	
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
	Let $SalHire_Empl_Type = &SALHIR.EMPL_TYPE
	If $SalHire_Empl_Type = 'H'
		Let #annual_rt = #hourly_rt * #Std_hours * 52
	End-If
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
        #debug8 Show '#annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt ' #Std_hours :'#Std_hours '  Job Code : '$JOBCD
	
	
FROM PS_JOB SALHIR 
WHERE SALHIR.EMPLID = $Emplid
AND SALHIR.EMPL_RCD = #Empl_Rcd_Nbr
AND SALHIR.EFFDT    > $Salary_Effdt
AND SALHIR.ACTION = 'HIR'
AND SALHIR.EFFDT BETWEEN $From_Date AND  $Thru_Date 
End-Select
!***********************************************************************
End-Procedure Get-Future-Dt-HIR
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Future-Dt-REH
!***********************************************************************
Let $Future_dt_reh = 'N'
  show 'Get-Future-Dt-REH'
  show '$Salary_Effdt :' $Salary_Effdt
  show '$Emplid       :' $Emplid
  show '#Empl_Rcd_Nbr :' #Empl_Rcd_Nbr
  show '$From_Date    :' $From_Date
  show '$Thru_Date    :' $Thru_Date
Begin-Select
SALREH.ACTION
SALREH.EFFDT
SALREH.ANNUAL_RT
SALREH.HOURLY_RT
SALREH.STD_HOURS
SALREH.EMPL_TYPE	!GEXPY_848_E95094_02 2012-05-22 VENDAXG 

	Let $Future_dt_reh = 'Y'
	Let #annual_rt = &SALREH.ANNUAL_RT
	Let #hourly_rt = &SALREH.HOURLY_RT
	Let #weekly_rt = #hourly_rt * &SALREH.STD_HOURS
	Let #Std_hours = &SALREH.STD_HOURS !Vendaxg Added for Bonus Processing 2011 on 05/25/2011
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
	Let $SalReHire_Empl_Type = &SALREH.EMPL_TYPE
	If $SalReHire_Empl_Type = 'H'
		Let #annual_rt = #hourly_rt * #Std_hours * 52
	End-If
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
        #debug8 Show 'Rehire : #annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt ' #Std_hours :'#Std_hours '  Job Code : '$JOBCD
        Show 'Rehire : #annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt ' #Std_hours :'#Std_hours '  Job Code : '$JOBCD
	
	
FROM PS_JOB SALREH 
WHERE SALREH.EMPLID = $Emplid
AND SALREH.EMPL_RCD = #Empl_Rcd_Nbr
AND SALREH.EFFDT    > $Salary_Effdt
! ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
!AND SALREH.ACTION = 'HIR'
AND SALREH.ACTION = 'REH' 
! ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
AND SALREH.EFFDT BETWEEN $From_Date AND  $Thru_Date 
End-Select
!***********************************************************************
End-Procedure Get-Future-Dt-REH
!***********************************************************************
!***********************************************************************
Begin-Procedure Get-Salary-ASOF-SalaryDate
!***********************************************************************
Let $Salary_asof_date = 'N'

Begin-Select
SALASDT.ACTION
SALASDT.EFFDT
SALASDT.ANNUAL_RT
SALASDT.HOURLY_RT
SALASDT.STD_HOURS


	Let $Salary_asof_date = 'Y'
	Let #annual_rt = &SALASDT.ANNUAL_RT
	Let #hourly_rt = &SALASDT.HOURLY_RT
	Let #weekly_rt = #hourly_rt * &SALASDT.STD_HOURS
	Let #Std_hours = &SALASDT.STD_HOURS !Vendaxg Added for Bonus Processing 2011 on 05/25/2011
	
	
        #debug8 Show '#annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt ' #Std_hours : '#Std_hours '  Job Code : '$JOBCD
	
	
FROM PS_JOB SALASDT 
WHERE SALASDT.EMPLID = $Emplid
AND SALASDT.EMPL_RCD = #Empl_Rcd_Nbr
AND SALASDT.EFFDT    = (SELECT MAX(SALASDT1.EFFDT) FROM PS_JOB SALASDT1
			WHERE SALASDT.EMPLID = SALASDT1.EMPLID 
			AND SALASDT.EMPL_RCD = SALASDT1.EMPL_RCD
			AND SALASDT1.EFFDT <= $Salary_Effdt)
AND SALASDT.EFFSEQ = (SELECT MAX(SALASDT2.EFFSEQ) FROM PS_JOB SALASDT2
			WHERE SALASDT.EMPLID = SALASDT2.EMPLID
			AND SALASDT.EMPL_RCD = SALASDT2.EMPL_RCD
			AND SALASDT.EFFDT = SALASDT2.EFFDT)
			
AND SALASDT.JOBCODE IN (SELECT DISTINCT VLDJB.JOBCODE FROM PS_GEX_JOBCODE_TBL VLDJB 
			WHERE VLDJB.EFFDT = (SELECT MAX(VLDJB1.EFFDT) FROM PS_GEX_JOBCODE_TBL VLDJB1
						WHERE VLDJB1.GEX_BONUS_GROUP = VLDJB.GEX_BONUS_GROUP
						AND VLDJB1.JOBCODE = VLDJB.JOBCODE
						AND VLDJB1.EFFDT <= SYSDATE)
			AND VLDJB.GEX_BONUS_GROUP = $Gex_Dept_bonus_Group )

End-Select
!***********************************************************************
End-Procedure Get-Salary-ASOF-SalaryDate
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Salary-Elig-Jobcode
!***********************************************************************
Let $Salary_Elig_Jobcode = 'N'
Begin-Select
SALEJBCD.ACTION
SALEJBCD.EFFDT
SALEJBCD.ANNUAL_RT
SALEJBCD.HOURLY_RT
SALEJBCD.STD_HOURS
	
	
	
	Let $Salary_Elig_Jobcode = 'Y'
	Let #annual_rt = &SALEJBCD.ANNUAL_RT
	Let #hourly_rt = &SALEJBCD.HOURLY_RT
	Let #weekly_rt = #hourly_rt * &SALEJBCD.STD_HOURS
	Let #Std_hours = &SALEJBCD.STD_HOURS !Vendaxg Added for Bonus Processing 2011 on 05/25/2011	
        #debug8 Show '#annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt ' #Std_hours : '#Std_hours '  Job Code : '$JOBCD


FROM PS_JOB SALEJBCD 
WHERE SALEJBCD.EMPLID = $Emplid
AND SALEJBCD.EMPL_RCD = #Empl_Rcd_Nbr
AND SALEJBCD.EFFDT    = (SELECT MIN(SALEJBCD1.EFFDT) FROM PS_JOB SALEJBCD1
            WHERE SALEJBCD.EMPLID = SALEJBCD1.EMPLID 
            AND SALEJBCD.EMPL_RCD = SALEJBCD1.EMPL_RCD
            AND SALEJBCD1.JOBCODE IN (SELECT DISTINCT SALVLDJB.JOBCODE FROM PS_GEX_JOBCODE_TBL SALVLDJB 
                                    WHERE SALVLDJB.EFFDT = (SELECT MAX(SALVLDJB1.EFFDT) FROM PS_GEX_JOBCODE_TBL SALVLDJB1
                                                        WHERE SALVLDJB1.GEX_BONUS_GROUP = SALVLDJB.GEX_BONUS_GROUP
                                                        AND SALVLDJB1.JOBCODE = SALVLDJB.JOBCODE
                                                        AND SALVLDJB1.EFFDT <= SYSDATE)
                                    AND SALVLDJB.GEX_BONUS_GROUP = $Gex_Dept_bonus_Group)
            AND SALEJBCD1.EFFDT >= $Salary_Effdt)
AND SALEJBCD.EFFSEQ = (SELECT MAX(SALEJBCD2.EFFSEQ) FROM PS_JOB SALEJBCD2
            WHERE SALEJBCD.EMPLID 	= SALEJBCD2.EMPLID
            AND SALEJBCD.EMPL_RCD 	= SALEJBCD2.EMPL_RCD
            AND SALEJBCD.EFFDT 		= SALEJBCD2.EFFDT
            AND SALEJBCD.JOBCODE 	= SALEJBCD2.JOBCODE)
End-Select
!***********************************************************************
End-Procedure Get-Salary-Elig-Jobcode
!***********************************************************************
!***********************************************************************
Begin-Procedure Get-Bonus-RunControl
!***********************************************************************
Let $Bonus_Group_Found = 'N'
Begin-Select
GEXBNGRP.GEX_BONUS_GROUP

	Let $Bonus_Group_Found = 'Y'

FROM PS_GEX_RC_BONS_GRP GEXBNGRP
WHERE GEXBNGRP.OPRID		= $Prcs_Oprid
AND GEXBNGRP.RUN_CNTL_ID	= $Prcs_Run_Cntl_Id
AND GEXBNGRP.GEX_BONUS_GROUP 	= $Gex_Dept_bonus_Group
End-Select
!***********************************************************************
End-Procedure Get-Bonus-RunControl
!***********************************************************************


!***********************************************************************
Begin-Procedure Check-Bonus-Group-Runcontrol
!***********************************************************************
Let $Bonus_Group_In_Runcontrol = 'N'
Begin-Select
GEXBOSNGRP.GEX_BONUS_GROUP

	Let $Bonus_Group_In_Runcontrol = 'Y'

FROM PS_GEX_RC_BONS_GRP GEXBOSNGRP
WHERE GEXBOSNGRP.OPRID		= $Prcs_Oprid
AND GEXBOSNGRP.RUN_CNTL_ID	= $Prcs_Run_Cntl_Id
End-Select
!***********************************************************************
End-Procedure Check-Bonus-Group-Runcontrol
!***********************************************************************

!***********************************************************************
Begin-Procedure Delete-Emplid
!***********************************************************************
Begin-Sql
DELETE FROM PS_GEX_R_GEXPY214A;
End-Sql
!***********************************************************************
End-Procedure Delete-Emplid
!***********************************************************************

!***********************************************************************
Begin-Procedure Select-Bonus-Group-Parameters
!***********************************************************************
  Let $OprID                = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_BONUS_GROUP_ROWS = 0
  Let $GEXXX214_INCLUDE_BONUS_GROUP_CRITERIA = ''
  Let $GEXXX214_EXCLUDE_BONUS_GROUP_CRITERIA = ''
  Let $GEXXX214_INCLUDE_BONUS_GROUP_DISPLAY_CRITERIA = 'ALL'
  Let $GEXXX214_EXCLUDE_BONUS_GROUP_DISPLAY_CRITERIA = 'NONE'

Begin-Select

GEX_RC_BONUS_GRP.GEX_BONUS_GROUP

  Add 1 To #GEX_RC_BONUS_GROUP_ROWS

  If #GEX_RC_BONUS_GROUP_ROWS = 1
    Let $GEXXX214_INCLUDE_BONUS_GROUP_CRITERIA = '(' || $GEXXX214_Bonus_Group_Alias || ' In ('''     || &GEX_RC_BONUS_GRP.GEX_BONUS_GROUP || ''''
    Let $GEXXX214_EXCLUDE_BONUS_GROUP_CRITERIA = '(' || $GEXXX214_Bonus_Group_Alias || ' Not In (''' || &GEX_RC_BONUS_GRP.GEX_BONUS_GROUP || ''''
  Else
    Let $GEXXX214_INCLUDE_BONUS_GROUP_CRITERIA = $GEXXX214_INCLUDE_BONUS_GROUP_CRITERIA || ',''' || &GEX_RC_BONUS_GRP.GEX_BONUS_GROUP || ''''
    Let $GEXXX214_EXCLUDE_BONUS_GROUP_CRITERIA = $GEXXX214_EXCLUDE_BONUS_GROUP_CRITERIA || ',''' || &GEX_RC_BONUS_GRP.GEX_BONUS_GROUP || ''''
  End-If

From  PS_GEX_RC_BONS_GRP GEX_RC_BONUS_GRP

Where GEX_RC_BONUS_GRP.OPRID                    = [$OprID]
And   GEX_RC_BONUS_GRP.RUN_CNTL_ID              = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_BONUS_GRP.GEX_BONUS_GROUP, ' ') != ' '

End-Select

  If #GEX_RC_BONUS_GROUP_ROWS = 0
    Let $GEXXX214_INCLUDE_BONUS_GROUP_CRITERIA = $GEXXX214_Bonus_Group_Alias || ' = ' || $GEXXX214_Bonus_Group_Alias
    Let $GEXXX214_EXCLUDE_BONUS_GROUP_CRITERIA = $GEXXX214_Bonus_Group_Alias || ' = ' || $GEXXX214_Bonus_Group_Alias
  Else
    Let $GEXXX214_INCLUDE_BONUS_GROUP_CRITERIA = $GEXXX214_INCLUDE_BONUS_GROUP_CRITERIA || '))'
    Let $GEXXX214_EXCLUDE_BONUS_GROUP_CRITERIA = $GEXXX214_EXCLUDE_BONUS_GROUP_CRITERIA || '))'
    Let $GEXXX214_INCLUDE_BONUS_GROUP_DISPLAY_CRITERIA = $GEXXX214_INCLUDE_BONUS_GROUP_CRITERIA
    Let $GEXXX214_EXCLUDE_BONUS_GROUP_DISPLAY_CRITERIA = $GEXXX214_EXCLUDE_BONUS_GROUP_CRITERIA
  End-If
!***********************************************************************
End-Procedure Select-Bonus-Group-Parameters
!***********************************************************************

!Vendaxg Added for Bonus Processing 2011 on 05/26/2011
!***********************************************************************
Begin-Procedure Get-RC-Emplid
!***********************************************************************
Let $OprID                = '''' || $Prcs_OprID       || ''''
Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
Let $RC_EmplID_Found = 'N'
 
Begin-Select
GEX_RC_EMPLID.EMPLID

  Let $Run_Emplid = Ltrim(Rtrim(&GEX_RC_EMPLID.EMPLID,' '),' ')
  If $Run_Emplid <> ''
  	Let $RC_EmplID_Found = 'Y'
  End-if

From  PS_GEX_RC_BON_EMPL GEX_RC_EMPLID

Where GEX_RC_EMPLID.OPRID                    = [$OprID]
And   GEX_RC_EMPLID.RUN_CNTL_ID              = [$Run_Cntl_ID]

End-Select

!***********************************************************************
End-Procedure Get-RC-Emplid
!***********************************************************************

!***********************************************************************
Begin-Procedure Select-RC-EmplID
!***********************************************************************
Let $OprID                = '''' || $Prcs_OprID       || ''''
Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
Let $RC_EmplID_Found = 'N'
 
Begin-Select
GEX_RC_EMPLID1.EMPLID

 	Let $Emplid = Ltrim(Rtrim(&GEX_RC_EMPLID1.EMPLID,' '),' ')
 	If $Emplid <> ''
		Do Insert-Emplid
	End-if
	
From  PS_GEX_RC_BON_EMPL GEX_RC_EMPLID1

Where GEX_RC_EMPLID1.OPRID                    = [$OprID]
And   GEX_RC_EMPLID1.RUN_CNTL_ID              = [$Run_Cntl_ID]

End-Select
!Close 1
!***********************************************************************
End-Procedure Select-RC-EmplID
!***********************************************************************
!***********************************************************************
Begin-Procedure Gex-EE-Exception-Pct
!***********************************************************************
Let $Exception_Found = 'N' 
Let $PCTFOUND='N'
Let #current_min_pct = 0
Let #current_tar_pct = 0
Let #current_max_pct = 0
Let #current_mid_one = 0
Let #current_mid_two = 0
Let #current_mid_three = 0 !ISDVVXK - GEXHR_848_E1944_BONUS2015
  
Begin-Select
EXCP.GEX_MIN_BONUS_PCT 
EXCP.GEX_TAR_BONUS_PCT
EXCP.GEX_MAX_BONUS_PCT
 
      Let $PCTFOUND='Y'
      Let $Exception_Found = 'Y' 
      #debug8 Show 'Exception Bonus Percentage found : '$Exception_Found
      Let #current_min_pct   = &EXCP.GEX_MIN_BONUS_PCT  
      Let #current_tar_pct   = &EXCP.GEX_TAR_BONUS_PCT
      Let #current_max_pct   = &EXCP.GEX_MAX_BONUS_PCT

      !1289792 - GEXHR_BONUS2017 Begins      
      !Let #current_mid_one     = (#current_min_pct + #current_tar_pct) / 2
      !Let #current_mid_two     = (#current_tar_pct + #current_max_pct) / 2
      Let #current_mid_one     = (#current_tar_pct - #current_min_pct )
      Let #current_mid_two     = (#current_max_pct - #current_tar_pct )
      !1289792 - GEXHR_BONUS2017 Ends

      !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
      !1289792 - GEXHR_BONUS2017 Begins
      !Let #current_mid_three   = (#current_tar_pct - #current_min_pct)
      Let #current_mid_three   = #current_max_pct
      !1289792 - GEXHR_BONUS2017 Ends
      !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
 
FROM PS_GEX_TM_BON_EXCP EXCP 
WHERE  EXCP.EMPLID = $EmplidFromArray
AND EXCP.YEAR = #Current_Year
AND EXCP.GEX_BONUS_GROUP = $Gex_Dept_bonus_Group
AND EXCP.EMPL_RCD = #Empl_Rcd_Nbr

end-select
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start
If $Exception_Found = 'N' 
 #debug9 Show 'Exception % not Found for Max duration Bonus Group :'$Gex_Dept_bonus_Group
 Do Gex-EE-Exception-Pct-New-Group
End-if
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
!***********************************************************************
End-Procedure Gex-EE-Exception-Pct
!***********************************************************************


!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Start
!***********************************************************************
Begin-Procedure Gex-EE-Exception-Pct-New-Group
!***********************************************************************
Let $Exception_Found = 'N' 
Let $PCTFOUND='N'
Let #current_min_pct = 0
Let #current_tar_pct = 0
Let #current_max_pct = 0
Let #current_mid_one = 0
Let #current_mid_two = 0
Let #current_mid_three = 0  !ISDVVXK - GEXHR_848_E1944_BONUS2015
Begin-Select
NEWEXCP.GEX_MIN_BONUS_PCT 
NEWEXCP.GEX_TAR_BONUS_PCT
NEWEXCP.GEX_MAX_BONUS_PCT
 
      Let $PCTFOUND='Y'
      Let $Exception_Found = 'Y' 
      #debug8 Show 'Exception Bonus Percentage found for NonMax Bonus Group: ' $Gex_Non_Max_Dept_bonus_Group
      Let #current_min_pct   = &NEWEXCP.GEX_MIN_BONUS_PCT  
      Let #current_tar_pct   = &NEWEXCP.GEX_TAR_BONUS_PCT
      Let #current_max_pct   = &NEWEXCP.GEX_MAX_BONUS_PCT

      !1289792 - GEXHR_BONUS2017 Begins      
      !Let #current_mid_one     = (#current_min_pct + #current_tar_pct) / 2
      !Let #current_mid_two     = (#current_tar_pct + #current_max_pct) / 2
      Let #current_mid_one     = (#current_tar_pct - #current_min_pct )
      Let #current_mid_two     = (#current_max_pct - #current_tar_pct )
      !1289792 - GEXHR_BONUS2017 Ends

      !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
      !1289792 - GEXHR_BONUS2017 Begins
      !Let #current_mid_three   = (#current_tar_pct - #current_min_pct)
      Let #current_mid_three   = #current_max_pct
      !1289792 - GEXHR_BONUS2017 Ends
      !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
 
FROM PS_GEX_TM_BON_EXCP NEWEXCP 
WHERE  NEWEXCP.EMPLID = $EmplidFromArray
AND NEWEXCP.YEAR = #Current_Year
AND NEWEXCP.GEX_BONUS_GROUP = $Gex_Non_Max_Dept_bonus_Group
AND NEWEXCP.EMPL_RCD = #Empl_Rcd_Nbr

end-select
!***********************************************************************
End-Procedure Gex-EE-Exception-Pct-New-Group
!***********************************************************************
!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End

!***********************************************************************
Begin-Procedure Print-Report-Mode2
!***********************************************************************
Let #type_previous_bonus = 0
Let #type_current_bonus = 0
Let #deptid_previous_bonus = 0
Let #deptid_current_bonus = 0
Let #report_previous_bonus = 0
Let #report_current_bonus = 0
Let #type-count = 0
Let #deptid-count = 0

Begin-Select
REPORT.DEPTID     ()  On-Break  Level=1
                             Print=Never 
REPORT.JOBCODE    ()  On-Break  Level=2
                           Print=Never
                           Before= JobCode-new-page
                           !After=New-Page
REPORT.EMPL_TYPE 

REPORT.NAME
REPORT.EMPLID
REPORT.EMPL_RCD
REPORT.ANNUAL_RT
REPORT.GEX_MIN_BONUS_PCT                           
REPORT.GEX_TAR_BONUS_PCT
REPORT.GEX_MAX_BONUS_PCT
REPORT.GEX_BONUS_PCT_USED
REPORT.GEX_BONUS_AMT
REPORT.BUDGET_DEPTID
REPORT.GEX_FNAL_BONUS_AMT
REPORT.GEX_WEEKLY_RT_1_5
REPORT.GEX_WEEKLY_RT_2
REPORT.HOURLY_RT
REPORT.GEX_WEEKLY_RT
JOBREP.LAST_HIRE_DT

	Let $Emplid    		= &REPORT.EMPLID
  	Let #empl_rcd_nbr 	= &REPORT.EMPL_RCD
  	Let $Deptid    		= &REPORT.DEPTID
	!Let $Last_hire_Dt	= &J2.LAST_HIRE_DT
  	Let $Empl_Type 		= &REPORT.EMPL_TYPE
  	Let $Hire_Dt_Print	= &JOBREP.LAST_HIRE_DT
  	Let $Name      		= &REPORT.NAME
  	Let #Current_Min_Pct    = &REPORT.GEX_MIN_BONUS_PCT
  	Let #Current_Tar_Pct    = &REPORT.GEX_TAR_BONUS_PCT
  	Let #Current_Max_Pct    = &REPORT.GEX_MAX_BONUS_PCT
  	
  	Let #Current_Bonus_Amt  = &REPORT.GEX_BONUS_AMT
	Let $Budget_Deptid 	= &REPORT.BUDGET_DEPTID
	Let $Calculate_JobCode	= &REPORT.JOBCODE
	Let #Annual_rt 		= &REPORT.ANNUAL_RT
  	Let #Final_Bonus_Amount	= &REPORT.GEX_FNAL_BONUS_AMT
  	Let #weekly_rt_1	= &REPORT.GEX_WEEKLY_RT_1_5
  	Let #weekly_rt_2 	= &REPORT.GEX_WEEKLY_RT_2
  	Let #hourly_rt 		= &REPORT.HOURLY_RT
  	Let #weekly_rt 		= &REPORT.GEX_WEEKLY_RT
  	Let #Bonus_Pct_Used     = &REPORT.GEX_BONUS_PCT_USED
  	
  	Add 1                   To #type-count
    	Add 1                   To #deptid-count
  	Add #previous_bonus_amt To #type_previous_bonus
    	Add #Final_Bonus_Amount  To #type_current_bonus
		
    	Add #previous_bonus_amt To #deptid_previous_bonus
    	Add #Final_Bonus_Amount  To #deptid_current_bonus

    	Add #previous_bonus_amt To #report_previous_bonus
       	Add #Final_Bonus_Amount  To #report_current_bonus
       	
  	Do P290-Print-Record
                           
FROM PS_GEX_EMPL_BONUS REPORT, PS_JOB JOBREP
WHERE REPORT.GEX_BONUS_YEAR = #Current_Year
AND REPORT.EMPLID = JOBREP.EMPLID
AND REPORT.EMPL_RCD = JOBREP.EMPL_RCD
AND JOBREP.EFFDT = (SELECT MAX(JOBREP1.EFFDT) FROM PS_JOB JOBREP1 
			WHERE JOBREP.EMPLID = JOBREP1.EMPLID 
			AND JOBREP.EMPL_RCD = JOBREP1.EMPL_RCD
			AND JOBREP1.EFFDT<$asofdate)
AND JOBREP.EFFSEQ = (SELECT MAX(JOBREP2.EFFSEQ) FROM PS_JOB JOBREP2
			WHERE JOBREP.EMPLID = JOBREP2.EMPLID
			AND JOBREP.EMPL_RCD = JOBREP2.EMPL_RCD
			AND JOBREP.EFFDT = JOBREP2.EFFDT)
AND REPORT.GEX_BONUS_IND = 'C'
AND REPORT.EMPLID IN ( SELECT DISTINCT(T.EMPLID) FROM PS_GEX_R_GEXPY214A T )
ORDER BY REPORT.DEPTID, REPORT.JOBCODE,REPORT.EMPL_TYPE, REPORT.NAME
End-Select
!***********************************************************************
End-Procedure Print-Report-Mode2
!***********************************************************************
!***********************************************************************
Begin-Procedure Check-Valid-Reports-To
!***********************************************************************
Let $Employee_Found_in_Position = 'N'
Begin-Select
POS.EMPLID

	Let $Employee_Found_in_Position = 'Y'

FROM PS_JOB POS 
WHERE POS.EFFDT = (SELECT MAX(POS1.EFFDT) FROM PS_JOB POS1 
			WHERE POS.EMPLID = POS1.EMPLID 
			AND   POS.EMPL_RCD = POS1.EMPL_RCD
			AND   POS1.EFFDT <=SYSDATE)
AND POS.EFFSEQ  = (SELECT MAX(POS2.EFFSEQ) FROM PS_JOB POS2
			WHERE POS.EMPLID = POS2.EMPLID
			AND   POS.EMPL_RCD = POS2.EMPL_RCD
			AND   POS.EFFDT = POS2.EFFDT)
AND POS.EMPL_STATUS IN ('A','L','P','S')			
AND POS.POSITION_NBR = $Reports_to
End-Select
!***********************************************************************
End-Procedure Check-Valid-Reports-To
!***********************************************************************
!***********************************************************************
Begin-Procedure Get-Position-Reports-To
!***********************************************************************
Let $Reports_to_Position = ''
Begin-Select
REP.REPORTS_TO

	Let $Reports_to_Position = &REP.REPORTS_TO
	
FROM PS_POSITION_DATA REP
WHERE REP.EFFDT = (SELECT MAX(REP1.EFFDT) FROM PS_POSITION_DATA REP1 	
			WHERE REP.POSITION_NBR = REP1.POSITION_NBR
			AND REP1.EFFDT <= SYSDATE)
AND REP.POSITION_NBR = $Reports_to			

End-Select

!***********************************************************************
End-Procedure Get-Position-Reports-To
!***********************************************************************
!***********************************************************************
Begin-Procedure Check-Delegation
!***********************************************************************
Let $Delegation_Found = 'N'
Begin-Select
DELE.ORIGINATOR_ID

	Let $Delegation_Found = 'Y'
	Let $New_Reports_to = &DELE.ORIGINATOR_ID
	
FROM PS_GEX_APPR_DELG DELE
WHERE DELE.MANAGER_ID = $Reports_to
AND   DELE.DEPTID     = $Deptid
AND   DELE.GEX_PROCESSNAME = '002'
!GEX ISDVNPK  08/11/2011  Modified for S3#2060842 ,Changed to pull end date greater than sysdate from PS_GEX_APPR_DELG table 
!AND   DELE.END_DATE <= sysdate
AND   DELE.END_DATE >= sysdate
!GEX ISDVNPK  08/11/2011  Modified for S3#2060842 ,Changed to pull end date greater than sysdate from PS_GEX_APPR_DELG table 
End-Select
!***********************************************************************
End-Procedure Check-Delegation
!***********************************************************************
!***********************************************************************
Begin-Procedure JobCode-new-page
!***********************************************************************
New-page

!***********************************************************************
End-Procedure JobCode-new-page
!***********************************************************************
!***********************************************************************
Begin-Procedure Get-Retail_Department
!***********************************************************************
Begin-SELECT 
JR.DEPTID

	Let $Retail_Dept = &JR.DEPTID
 
FROM PS_JOB JR 
WHERE JR.EFFDT = ( SELECT MAX(JR1.EFFDT) 
                 FROM PS_JOB JR1 
                 WHERE JR1.EMPLID = JR.EMPLID  
                 AND JR1.EMPL_RCD = JR.EMPL_RCD 
                 AND JR1.EFFDT <= SYSDATE
                 AND JR1.EFFDT >= $Fiscal_Start_Dt
                 AND substr(JR1.DEPTID,1,1)  IN ('1','2','3','4','5','6','7','8','9','0')) 
AND JR.EFFSEQ = ( SELECT MAX(JR2.EFFSEQ) 
                FROM PS_JOB JR2 
                WHERE JR2.EMPLID = JR.EMPLID 
                AND JR2.EMPL_RCD = JR.EMPL_RCD 
                AND JR2.EFFDT = JR.EFFDT) 
AND  JR.EMPLID = $Final_Emplid
End-Select
!***********************************************************************
End-Procedure Get-Retail_Department
!***********************************************************************


#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'getcodta.sqc'  !Get-Company-Data
#include 'getdptnm.sqc'  !Get-Department-Name
#include 'getactnm.sqc'  !Get-Acct-cd-descr procedure
#include 'askaod.sqc'    !Get AsOfDate
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
