
!***************************************************************************************
! GEXHR307:             EVP Metrics - Retention rates for employees within             * 
!                       the first year of service	                               *
!***************************************************************************************
!                                                                                      *
!               Confidentiality Information:                                           *
!                                                                                      *
! This module is the confidential and proprietary information of                       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted                 *
! in any form, by any means, in whole or in part, nor is it to be used                 *
! for any purpose other than that for which it is expressly provided                   *
! without the written permission of Giant Eagle.                                       *
!                                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved                         *
!                                                                                      *
!***************************************************************************************
!                                                                                      *        
! GEXHR305s :           ANALYSIS ON EMPLOYEE MOVEMENT ACROSS                           *
!                                                                                      *        
! Narrative:                                                                           * 
!                                                                                      *  
! SQL Tables:           					       *
!                                                                                      *
! Written by:           Kundan Kumar Y	                                               *       
!                                                                                      *
! Normally Run:									       *
!                                                                                      *
! Control Parms:									*
!											*
!***************************************************************************************
!                         MODIFICATION HISTORY                                          *
!****************************************************************************************
! CSR    INITIALS     DATE         DESCRIPTION OF THE CHANGE                            *
!****************************************************************************************
!                                                                                       *
!        VENDKXY      11/23/2007   New program                                          *
!	 VENDKXY      03/18/2008   Added Header for the output file			*
!	 GEX-TLL      04/14/2008   HCM 9.0 Upgrade			                *
!											*
!	 GEX-TLL      04/25/2008   HCM 9.0 Upgrade			                *
!****************************************************************************************

!**************************************************************************************************************************
!VENDKXY FOR Less than 1 year service
!**************************************************************************************************************************


#include 'setenv.sqc'    !set environment
#include 'setup32.sqc'   !printer and page-size initialization
#include 'prcsapi.sqc'   
#include 'sqrtrans.sqc'  ! set translation
#include 'datemath.sqc'
!GEX-TLL , 04/25/2008 HCM 9.0 Upgrade - Begin
!**************************************************************************************************************************
!        SETUP
!**************************************************************************************************************************
Begin-Setup
!VENDKXY on 04/02/2008 Modifications done as suggested by vicki
declare-variable
date $AsOfDate1
end-declare
End-Setup

!GEX-TLL , 04/25/2008 HCM 9.0 Upgrade - End
!**************************************************************************************************************************
!        REPORT
!**************************************************************************************************************************
begin-Report
Do Init-DateTime           !datetime.sqc
Do Init-Number             !number.sqc
Do Get-Current-DateTime    !curdttim.sqc
Do Stdapi-Init             !stdapi.sqc

If $prcs_process_instance = ''
    Do Ask-As-Of-Date		!askaod.sqc
   !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin  
    Let $AsOfDate1 = $AsOfDate 
    !Let $from_date = dateadd(strtodate($AsOfDate1),'YEAR',-1)	!GEX-TLL , 04/25/2008 Commented
    Let $from_date = dateadd($AsOfDate1,'YEAR',-1)		!GEX-TLL , 04/25/2008 Added
    !Let $thru_date = dateadd(strtodate($AsOfDate1),'DAY',-1) 	!GEX-TLL , 04/25/2008 Commented
    Let $thru_date = dateadd($AsOfDate1,'DAY',-1) 		!GEX-TLL , 04/25/2008 Added
   !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End     
else
    do Get-Run-Control	     !gexrnctl.sqc 
   !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin 
    If Rtrim (&asofdate, ' ') = ''
    Let $AsOfDate = $AsOfToday
    Let $AsOfDate1 = $AsOfDate
    !Let $from_date = dateadd(strtodate($AsOfDate1),'YEAR',-1)	!GEX-TLL , 04/25/2008 Commented
    Let $from_date = dateadd($AsOfDate1,'YEAR',-1)		!GEX-TLL , 04/25/2008 Added
   !Let $thru_date = dateadd(strtodate($AsOfDate1),'DAY',-1)	!GEX-TLL , 04/25/2008 Commented
    Let $thru_date = dateadd($AsOfDate1,'DAY',-1)		!GEX-TLL , 04/25/2008 Added
   
   else
   !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End    	
    let $AsOfDate = &asofdate
    let $from_date = &fromdate
    let $thru_date = &thrudate
end-if
!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin
If Rtrim (&fromdate, ' ') = '' or Rtrim (&thrudate, ' ') = ''
   Let $AsOfDate1 = $AsOfDate
   !Let $from_date = dateadd(strtodate($AsOfDate1),'YEAR',-1)	!GEX-TLL , 04/25/2008 Commented
   Let $from_date = dateadd($AsOfDate1,'YEAR',-1)		!GEX-TLL , 04/25/2008 Added
   !Let $thru_date = dateadd(strtodate($AsOfDate1),'DAY',-1)	!GEX-TLL , 04/25/2008 Commented
   Let $thru_date = dateadd($AsOfDate1,'DAY',-1)		!GEX-TLL , 04/25/2008 Added
    end-if
    
end-if
!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End

show '$from_date:' $from_date
show '$thru_date:' $thru_date

Let $ReportID      =   'gexhr307'
Let $ReportTitle   =   'Retention rates for employees within the first year of service'
  
Show '$ReportID    = ' $ReportID
Show '$ReportTitle = ' $ReportTitle
Show '$ReportDate  = ' $ReportDate
Show '$ReportTime  = ' $ReportTime
Let $Report_title = 'Actives are As Of : ' || $thru_date ||' Terms are from :' || $from_date || ' To: ' || $thru_date !GEX-TLL on 03/24/2008 Added Header for the output file Retrofitting
do Open-File
DO Get-Active-Employees
DO Get-Terminate-Employees
do CALCLOSANDTIMEINPOS
Do Stdapi-Term             !stdapi.sqc
end-Report



!**************************************************************************************************************************
!		Get-Active-Employees
!**************************************************************************************************************************
Begin-procedure Get-Active-Employees
show 'active employee processing started'
Begin-SELECT DISTINCT
A.EMPLID
C.NAME
A.COMPANY
A.PAYGROUP
A.DEPTID
E.DESCR
G.GEX_OPR_DIV
F.GEX_COMPANY_DIV_CD
G.GEX_BUS_AREA
F.BUSINESS_UNIT
A.ACCT_CD
F.DEPARTMENT
A.EMPL_STATUS
A.UNION_CD
A.FULL_PART_TIME
A.EMPL_TYPE
C.SEX
B.EEO1CODE
A.JOBCODE
B.DESCR
B.FLSA_STATUS
A.GRADE
A.STD_HOURS
TO_CHAR(D.HIRE_DT,'YYYY-MM-DD')
TO_CHAR(D.REHIRE_DT,'YYYY-MM-DD')
G.GEX_EVP
G.GEX_SVPVP
TO_CHAR(B.EFFDT,'YYYY-MM-DD')
B.SETID
B.JOBCODE
E.SETID
E.DEPTID
TO_CHAR(E.EFFDT,'YYYY-MM-DD')

   
 	if &G.GEX_BUS_AREA='GE Retail' 
 	lET $BUS_AREA='GE Retail'
    		Let #act_geretail = #act_geretail+1
 	
 	end-if
 	
 	if (&G.GEX_BUS_AREA='GetGo')
 	lET $BUS_AREA='GetGo'
 	Let #act_getgo = #act_getgo+1
 	
  	end-if
 	
 FROM PS_JOB A,PS_JOBCODE_TBL B, PS_PERSONAL_DATA C, PS_EMPLOYMENT D, PS_DEPT_TBL E, PS_GEX_DEPT_TBL F, PS_GEX_EVP_TBL G
  WHERE  G.GEX_BUS_AREA in ('GE Retail','GetGo')
  and substr(a.paygroup,1,2) <> 'PH' 
  and a.acct_cd <> '008'
     AND ( A.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE A.EMPLID = A_ED.EMPLID
          AND A.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= $thru_date)
    AND A.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE A.EMPLID = A_ES.EMPLID
          AND A.EMPL_RCD = A_ES.EMPL_RCD
          AND A.EFFDT = A_ES.EFFDT)
     AND B.SETID = A.SETID_JOBCODE
     AND B.JOBCODE = A.JOBCODE
     AND B.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B.SETID = B_ED.SETID
          AND B.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= A.EFFDT)
     AND A.EMPLID = C.EMPLID
     AND A.EMPLID = D.EMPLID
     AND A.EMPL_RCD = D.EMPL_RCD
     AND E.SETID = A.SETID_DEPT
     AND E.DEPTID = A.DEPTID
     AND E.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E.SETID = E_ED.SETID
          AND E.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= A.EFFDT)
     AND E.SETID = F.SETID
     AND E.DEPTID = F.DEPTID
     AND F.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F.SETID = F_ED.SETID
          AND F.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= E.EFFDT)
     AND A.DEPTID =  G.DEPTID (+)
     AND ( A.EMPL_STATUS IN ('A','L','P','S')
     AND A.COMPANY NOT BETWEEN '005' AND '999'
     AND A.COMPANY NOT IN ('KAP','VEC')
     AND A.JOBCODE <> '90000'
     AND A.GEX_SEASONAL_EMP = 'N') )
  ORDER BY C.NAME

END-SELECT
show 'active employee processing ended'
end-procedure


!**************************************************************************************************************************
!		Get-Terminate-Employees
!**************************************************************************************************************************
Begin-procedure Get-Terminate-Employees
show 'Terminate employee processing started'
begin-SELECT DISTINCT
AA.EMPLID,
CC.NAME,
AA.COMPANY,
AA.PAYGROUP,
AA.DEPTID,
EE.DESCR,
GG.GEX_OPR_DIV,
FF.GEX_COMPANY_DIV_CD,
GG.GEX_BUS_AREA,
AA.ACCT_CD,
FF.DEPARTMENT,
FF.BUSINESS_UNIT,
AA.UNION_CD,
CC.SEX,
AA.FULL_PART_TIME,
AA.EMPL_TYPE,
TO_CHAR(AA.JOB_ENTRY_DT,'YYYY-MM-DD'),
AA.JOBCODE,
AA.GRADE,
BB.DESCR,
BB.EEO1CODE,
BB.MANAGER_LEVEL,
BB.STD_HOURS,
TO_CHAR(DD.SERVICE_DT,'YYYY-MM-DD'),
!GEX-TLL Added the Alias  03/19/2008 Begin 
!(TRUNC(MONTHS_BETWEEN(TERMINATION_DT,TO_DATE( TO_CHAR(DD.SERVICE_DT,'YYYY-MM-DD'),'YYYY-MM-DD'))/1)) &LOS
(TRUNC(MONTHS_BETWEEN(DD.TERMINATION_DT,TO_DATE( TO_CHAR(DD.SERVICE_DT,'YYYY-MM-DD'),'YYYY-MM-DD'))/1)) &LOS  
!GEX-TLL Added the Alias  03/19/2008 End
JJ.DESCR,
TO_CHAR(DD.HIRE_DT,'YYYY-MM-DD'),
TO_CHAR(DD.REHIRE_DT,'YYYY-MM-DD'),
TO_CHAR(DD.TERMINATION_DT,'YYYY-MM-DD'),
TO_CHAR(AA.EFFDT,'YYYY-MM-DD'),
GG.GEX_SVPVP,
GG.GEX_EVP,
TO_CHAR(CC.BIRTHDATE,'YYYY-MM-DD'),
BB.SETID,
BB.JOBCODE,
TO_CHAR(BB.EFFDT,'YYYY-MM-DD'),
EE.SETID,
EE.DEPTID,
TO_CHAR(EE.EFFDT,'YYYY-MM-DD'),
JJ.ACTION,
JJ.ACTION_REASON,
TO_CHAR(JJ.EFFDT,'YYYY-MM-DD')

 move &los to #los
   if #los <= 12
	
 	if (&GG.GEX_BUS_AREA='GE Retail')
 	  	   
 	Let #ter_geretail = #ter_geretail+1
	Let $BUS_AREA='GE Retail'
		if (#los<1)
 		 	Let #count_lessthan1 = #count_lessthan1+1
 		end-if 		 		
 		if (#los >=1 and  #los<=3)
 		 	Let #count_lessthan3_los = #count_lessthan3_los+1
 		end-if
 		if (#los>3 and #los<=6)
 			Let #count_lessthan6 = #count_lessthan6+1
 		end-if
 		if (#los >6 and #los<=9)
 			Let #count_lessthan9 = #count_lessthan9+1
 		end-if
 		if (#los>9 and #los<=12)
 			Let #count_lessthan12 = #count_lessthan12+1
 		end-if
        end-if	 		
 	 	  	  	
 	 	
 	if (&GG.GEX_BUS_AREA='GetGo')
 	
 	Let $BUS_AREA='GetGo'
 	Let #ter_getgo = #ter_getgo+1
 		if (#los<1)
 		 	Let #count_lessthan1_go = #count_lessthan1_go+1
 		end-if 
 		if (#los >=1 and  #los<=3)
 		 	Let #count_lessthan3_los_go = #count_lessthan3_los_go+1
 		end-if
 		if (#los>3 and #los<=6)
 			Let #count_lessthan6_go = #count_lessthan6_go+1
 		end-if
 		if (#los >6 and #los<=9)
 			Let #count_lessthan9_go = #count_lessthan9_go+1
 		end-if
 		if (#los>9 and #los<=12)
 			Let #count_lessthan12_go = #count_lessthan12_go+1
 		end-if	  	
 	
 	end-if		
 		 		 		
 	
   end-if
		
FROM PS_JOB AA, PS_JOBCODE_TBL BB, PS_PERSONAL_DATA CC, PS_EMPLOYMENT DD, PS_DEPT_TBL EE, PS_GEX_DEPT_TBL FF, PS_GEX_EVP_TBL GG, PS_ACTN_REASON_TBL JJ, PS_JOB II
  WHERE GG.GEX_BUS_AREA in ('GE Retail','GetGo')
  and substr(aa.paygroup,1,2) <> 'PH' 
  and aa.acct_cd <> '008'
    AND ( ( AA.EFFDT >= $from_date
     AND AA.EFFDT <= $thru_date)
     AND AA.ACTION IN ('RET','RWP','TER','TWB','TWP')
     AND BB.SETID = AA.SETID_JOBCODE
     AND BB.JOBCODE = AA.JOBCODE
     AND BB.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE BB.SETID = B_ED.SETID
          AND BB.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= AA.EFFDT)
     AND AA.EMPLID = CC.EMPLID
     AND AA.EMPLID = DD.EMPLID
     AND AA.EMPL_RCD = DD.EMPL_RCD
     AND EE.SETID = AA.SETID_DEPT
     AND EE.DEPTID = AA.DEPTID
     !GEX-TLL 03/24/2008 HCM 9.0 Upgrade Retrofitting Begin
     AND AA.PAYGROUP = GG.PAYGROUP
     AND AA.ACCT_CD = GG.ACCT_CD
     !GEX-TLL 03/24/2008 HCM 9.0 Upgrade Retrofitting End
     AND EE.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE EE.SETID = E_ED.SETID
          AND EE.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= AA.EFFDT)
     AND EE.SETID = FF.SETID
     AND EE.DEPTID = FF.DEPTID
     AND FF.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE FF.SETID = F_ED.SETID
          AND FF.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= EE.EFFDT)
     AND AA.DEPTID =  GG.DEPTID (+)
     AND DD.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( AA.COMPANY NOT BETWEEN '005' AND '999'
     AND AA.COMPANY NOT IN ('KAP','VEC')
     AND AA.GEX_SEASONAL_EMP = 'N'
     AND AA.JOBCODE <> '90000')
     AND JJ.ACTION = AA.ACTION
     AND JJ.ACTION_REASON = AA.ACTION_REASON
     AND JJ.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE JJ.ACTION = J_ED.ACTION
          AND JJ.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND II.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE II.EMPLID = I_ED.EMPLID
          AND II.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < AA.EFFDT)
    AND II.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE II.EMPLID = I_ES.EMPLID
          AND II.EMPL_RCD = I_ES.EMPL_RCD
          AND II.EFFDT = I_ES.EFFDT)
     AND AA.EMPLID = II.EMPLID
     AND AA.EMPL_RCD = II.EMPL_RCD
     AND II.EMPL_STATUS IN ('A','L','P','S') )

     
END-SELECT 
show 'Terminate employee processing ended'    
end-procedure



!**************************************************************************************************************************
!		Calculation of Length of Service
!**************************************************************************************************************************
BEGIN-PROCEDURE CALCLOSANDTIMEINPOS
      !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin  	
	!encode '<009>' into $delim
	!ENCODE '<012>' INTO $NEXT
      !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - end	
!GEX-TLL 03/24/2008 HCM 9.0 Upgarde Retrofitting begin	
	write 1 from $Report_title	!VENDKXY on 03/18/2008 Added Header for the output file 
	write 1 from $NEXT		!VENDKXY on 03/18/2008 Added Header for the output file 
!GEX-TLL 03/24/2008 HCM 9.0 Upgarde Retrofitting End
	string 'BUS AREA' ' ' '<1mo' '1+ to 3 mos' '3+ to 6 mos' '6+ to 9 mos' '9+ to 12 mos' 'Grand Total' by $delim into $loss
	write 1 from $loss
	move #count_lessthan1 to $count_lessthan1 999,999
	move #count_lessthan3_los to $count_lessthan3_los 999,999
	move #count_lessthan6 to $count_lessthan6 999,999
	move #count_lessthan9 to $count_lessthan9 999,999
	move #count_lessthan12 to $count_lessthan12 999,999
	move #ter_geretail to $ter_geretail 999,999
	
	move #count_lessthan1_go to $count_lessthan1_go 999,999
	move #count_lessthan3_los_go to $count_lessthan3_los_go 999,999
	move #count_lessthan6_go to $count_lessthan6_go 999,999
	move #count_lessthan9_go to $count_lessthan9_go 999,999
	move #count_lessthan12_go to $count_lessthan12_go 999,999
	move #ter_getgo to $ter_getgo 999,999
	
	string 'GE Retail' ' ' $count_lessthan1 $count_lessthan3_los $count_lessthan6 $count_lessthan9 $count_lessthan12 $ter_geretail by $delim into $loss
	write 1 from $loss
	string 'GetGo' ' ' $count_lessthan1_go $count_lessthan3_los_go $count_lessthan6_go $count_lessthan9_go $count_lessthan12_go $ter_getgo by $delim into $loss
	write 1 from $loss
	Let #count0 = #count_lessthan1+#count_lessthan1_go
	Let #count1 = #count_lessthan3_los+#count_lessthan3_los_go
	Let #count2 = #count_lessthan6+#count_lessthan6_go
	Let #count3 = #count_lessthan9+#count_lessthan9_go
	Let #count4 = #count_lessthan12+#count_lessthan12_go
	Let #count5 = #ter_geretail+#ter_getgo
	
	move #count0 to $count0 999,999
	move #count1 to $count1 999,999
	move #count2 to $count2 999,999
	move #count3 to $count3 999,999
	move #count4 to $count4 999,999
	move #count5 to $count5 999,999
	
	string 'Totals' ' ' $count0 $count1 $count2 $count3 $count4 $count5 by $delim into $loss
	write 1 from $loss
	write 1 from $next
	write 1 from $next
	string ' ' ' ' 'Turnover%-<1 Year of Service- Overall' by $delim into $loss
	write 1 from $loss
	write 1 from $next
	string 'BUS AREA' 'Active' '<1mo' '1+ to 3 mos' '3+ to 6 mos' '6+ to 9 mos' '9+ to 12 mos' 'Grand Total' by $delim into $loss
	write 1 from $loss
	Let #count_lessthan1_per = round(((#count_lessthan1/#act_geretail)*100),0)
	Let #count_lessthan3_per_los = round(((#count_lessthan3_los/#act_geretail)*100),0)
	Let #count_lessthan6_per = round(((#count_lessthan6/#act_geretail)*100),0)
	Let #count_lessthan9_per = round(((#count_lessthan9/#act_geretail)*100),0)
	Let #count_lessthan12_per = round(((#count_lessthan12/#act_geretail)*100),0)
	Let #grand_per_ret = round(((#ter_geretail/#act_geretail)*100),0)
	
	move #count_lessthan1_per to $count_lessthan1_per 9999
	Let $count_lessthan1_per = $count_lessthan1_per||'%'
	move #count_lessthan3_per_los to $count_lessthan3_per_los 9999
	Let $count_lessthan3_per_los = $count_lessthan3_per_los||'%'
	move #count_lessthan6_per to $count_lessthan6_per 9999
	Let $count_lessthan6_per = $count_lessthan6_per||'%'
	move #count_lessthan9_per to $count_lessthan9_per 9999
	Let $count_lessthan9_per = $count_lessthan9_per||'%'
	move #count_lessthan12_per to $count_lessthan12_per 9999
	Let $count_lessthan12_per = $count_lessthan12_per||'%'
	move #grand_per_ret to $grand_per_ret 9999
	Let $grand_per_ret = $grand_per_ret||'%'
	
	move #act_geretail to $act_geretail 999,999
	
	string 'GE Retail' $act_geretail $count_lessthan1_per $count_lessthan3_per_los $count_lessthan6_per $count_lessthan9_per $count_lessthan12_per $grand_per_ret by $delim into $loss
	write 1 from $loss
	Let #count_lessthan1_per_go = round(((#count_lessthan1_go/#act_getgo)*100),0)
	Let #count_lessthan3_per_los_go = round(((#count_lessthan3_los_go/#act_getgo)*100),0)
	Let #count_lessthan6_per_go = round(((#count_lessthan6_go/#act_getgo)*100),0)
	Let #count_lessthan9_per_go = round(((#count_lessthan9_go/#act_getgo)*100),0)
	Let #count_lessthan12_per_go = round(((#count_lessthan12_go/#act_getgo)*100),0)
	Let #grand_per_go = round(((#ter_getgo/#act_getgo)*100),0)
	
	move #count_lessthan1_per_go to $count_lessthan1_per_go 9999
	Let $count_lessthan1_per_go = $count_lessthan1_per_go||'%'
	move #count_lessthan3_per_los_go to $count_lessthan3_per_los_go 9999
	Let $count_lessthan3_per_los_go = $count_lessthan3_per_los_go||'%'
	move #count_lessthan6_per_go to $count_lessthan6_per_go 9999
	Let $count_lessthan6_per_go = $count_lessthan6_per_go||'%'
	move #count_lessthan9_per_go to $count_lessthan9_per_go 9999
	Let $count_lessthan9_per_go = $count_lessthan9_per_go||'%'
	move #count_lessthan12_per_go to $count_lessthan12_per_go 9999
	Let $count_lessthan12_per_go = $count_lessthan12_per_go||'%'
	move #grand_per_go to $grand_per_go 9999
	Let $grand_per_go = $grand_per_go||'%'
	
	move #act_getgo to $act_getgo 999,999
	
	string 'GetGo' $act_getgo $count_lessthan1_per_go $count_lessthan3_per_los_go $count_lessthan6_per_go $count_lessthan9_per_go $count_lessthan12_per_go $grand_per_go by $delim into $loss
	write 1 from $loss
	Let #count6 = #act_geretail+#act_getgo	
	Let #per = round(((#count0/#count6)*100),0)
	Let #per1 = round(((#count1/#count6)*100),0)
	Let #per2 = round(((#count2/#count6)*100),0)
	Let #per3 = round(((#count3/#count6)*100),0)
	Let #per4 = round(((#count4/#count6)*100),0)
	Let #per5 = round(((#count5/#count6)*100),0)
	
	move #per to $per 9999
	Let $per = $per||'%'
	move #per1 to $per1 9999
	Let $per1 = $per1||'%'
	move #per2 to $per2 9999
	Let $per2 = $per2||'%'
	move #per3 to $per3 9999
	Let $per3 = $per3||'%'
	move #per4 to $per4 9999
	Let $per4 = $per4||'%'
	move #per5 to $per5 9999
	Let $per5 = $per5||'%'
	
	move #count6 to $count6 999,999
	
	string 'Totals' $count6 $per $per1 $per2 $per3 $per4 $per5 by $delim into $loss
	write 1 from $loss
	write 1 from $next
	write 1 from $next
	write 1 from $next
	string ' ' 'Turnover % by LOS to Business Area Totals' by $delim into $loss
	write 1 from $loss
	write 1 from $next
	string 'BUS AREA' ' ' '<1mo' '1+ to 3 mos' '3+ to 6 mos' '6+ to 9 mos' '9+ to 12 mos' by $delim into $loss
	write 1 from $loss
	Let #count_lessthan1_per = round(((#count_lessthan1/#ter_geretail)*100),0)
	Let #count_lessthan3_per_los = round(((#count_lessthan3_los/#ter_geretail)*100),0)
	Let #count_lessthan6_per = round(((#count_lessthan6/#ter_geretail)*100),0)
	Let #count_lessthan9_per = round(((#count_lessthan9/#ter_geretail)*100),0)
	Let #count_lessthan12_per = round(((#count_lessthan12/#ter_geretail)*100),0)
	move #count_lessthan1_per to $count_lessthan1_per 9999
	Let $count_lessthan1_per = $count_lessthan1_per||'%'
	move #count_lessthan3_per_los to $count_lessthan3_per_los 9999
	Let $count_lessthan3_per_los = $count_lessthan3_per_los||'%'
	move #count_lessthan6_per to $count_lessthan6_per 9999
	Let $count_lessthan6_per = $count_lessthan6_per||'%'
	move #count_lessthan9_per to $count_lessthan9_per 9999
	Let $count_lessthan9_per = $count_lessthan9_per||'%'
	move #count_lessthan12_per to $count_lessthan12_per 9999
	Let $count_lessthan12_per = $count_lessthan12_per||'%'
	
	string 'GE Retail' ' ' $count_lessthan1_per $count_lessthan3_per_los $count_lessthan6_per $count_lessthan9_per $count_lessthan12_per by $delim into $loss
	write 1 from $loss
	Let #count_lessthan1_per_go = round(((#count_lessthan1_go/#ter_getgo)*100),0)
	Let #count_lessthan3_per_los_go = round(((#count_lessthan3_los_go/#ter_getgo)*100),0)
	Let #count_lessthan6_per_go = round(((#count_lessthan6_go/#ter_getgo)*100),0)
	Let #count_lessthan9_per_go = round(((#count_lessthan9_go/#ter_getgo)*100),0)
	Let #count_lessthan12_per_go = round(((#count_lessthan12_go/#ter_getgo)*100),0)
	
	move #count_lessthan1_per_go to $count_lessthan1_per_go 9999
	Let $count_lessthan1_per_go = $count_lessthan1_per_go||'%'
	move #count_lessthan3_per_los_go to $count_lessthan3_per_los_go 9999
	Let $count_lessthan3_per_los_go = $count_lessthan3_per_los_go||'%'
	move #count_lessthan6_per_go to $count_lessthan6_per_go 9999
	Let $count_lessthan6_per_go = $count_lessthan6_per_go||'%'
	move #count_lessthan9_per_go to $count_lessthan9_per_go 9999
	Let $count_lessthan9_per_go = $count_lessthan9_per_go||'%'
	move #count_lessthan12_per_go to $count_lessthan12_per_go 9999
	Let $count_lessthan12_per_go = $count_lessthan12_per_go||'%'
	
	string 'GetGo'  ' '$count_lessthan1_per_go $count_lessthan3_per_los_go $count_lessthan6_per_go $count_lessthan9_per_go $count_lessthan12_per_go by $delim into $loss
	write 1 from $loss
	Let #count6 = #ter_geretail+#ter_getgo	
	Let #per = round(((#count0/#count6)*100),0)
	Let #per1 = round(((#count1/#count6)*100),0)
	Let #per2 = round(((#count2/#count6)*100),0)
	Let #per3 = round(((#count3/#count6)*100),0)
	Let #per4 = round(((#count4/#count6)*100),0)
	
	move #per to $per 9999
	Let $per = $per||'%'
	move #per1 to $per1 9999
	Let $per1 = $per1||'%'
	move #per2 to $per2 9999
	Let $per2 = $per2||'%'
	move #per3 to $per3 9999
	Let $per3 = $per3||'%'
	move #per4 to $per4 9999
	Let $per4 = $per4||'%'
	string 'Totals' ' ' $per $per1 $per2 $per3 $per4 by $delim into $loss
	write 1 from $loss
	
End-Procedure	


!***********************************************************************************
!procedure Open-File
!***********************************************************************************
begin-procedure Open-File
   encode '<009>' into $delim
   ENCODE '<012>' INTO $NEXT  !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes 
   move $current-date to $currdt 'MMDDYYYYHHMMSS'
   !this is prod -> Let $output_destination = '\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\Retail TO - Less than 1 yr of Svc\'  !GEX-TLL COMMENTED FOR TESTING
   Let $output_destination = '\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\Retail TO - Less than 1 yr of Svc\'
   Let $File_Name = 'Los_GERetail_GetGo'
   Let $file = $output_destination || Lower($File_Name) || $currdt ||  '.xls'
!   show '$filename:' $file_name
!   show '$file:' $file
   
   Open $file
       As 1
       For-Writing
       Record=1000:Vary
       
End-Procedure




#include 'curdttim.sqc'  !get-current-datetime procedure
#include 'datetime.sqc'  !routines for date and time formatting
#include 'number.sqc'    !routines to format numbers
#include 'stdapi.sqc'    !routines to update run status
#include 'useprntr.sqc'
#include 'gexrnctl.sqc'  !for Run-Cntrl-Parameters
#include 'askaod.sqc'
