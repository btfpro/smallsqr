!***********************************************************************
! GEXPY064: Key Performance Indicator Project                          *
!           This program creates a weekly subtotal report by store/    *
!           department of the total current wages and total current    *
!           hours.                                                     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!  $Date:: 01/19/98 04:00p      $                                      *
!  $Revision:: 01               $                                      *
!  $Workfile:: GEXPY064.SQR     $                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INIT  CSR     DATE         DESCRIPTION OF THE CHANGE                *        
!***********************************************************************
!  AXL  10859  03/10/2005     INITIAL CREATION                         *
!                             Cloned from gexpy606                     *
!                                                                      *
!  AXL         03/09/2006     Use Productive Earnings instead of Non   *
!                             Productive Earnings like PY608 is doing  *
!GEX_PY251 SXD 08/21/2007     Removed reference of Effdt from the      *
!                             Where clause of  ps_acct_cd_tbl and      *
!                             changed the  XLATTABLE to PSXLATITEM     *
! GEX-MXT      09/26/2007     Replaced PS_ACCT_CD_TBL with             *
!                             PS_GEX_ACCT_CD_TBL
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup01.sqc'

!***********************************************************************
begin-report
!***********************************************************************
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime  
  do P100-Init-Report
  do Trunc-work-table
  do P200-Process-Data
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do EOJ-Process
  do Reset
  do Stdapi-Term
end-report

!***********************************************************************
begin-procedure P100-Init-Report
!***********************************************************************
#debug9 Show 'P100-Init-Report'

  do Stdapi-Init

  Let $GEXXX901_Company_Alias  = 'PE.company'
  Let $GEXXX901_Paygroup_Alias = 'PE.paygroup'
  Let $GEXXX907_Div_CD_Alias   = 'GDT.GEX_COMPANY_DIV_CD'
  let $GEXXX909_Acct_Cd_Alias  = 'PE.ACCT_CD'

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  show '$Prcs_Run_Cntl_ID ' $Prcs_Run_Cntl_ID
  
  let $ReportID = 'GEXPY064'
  
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  If Rtrim($FromDate,' ') = '' Or
     Rtrim($ThruDate,' ') = ''
    Do P125-Get-Date-Range
  End-If

  move 'KPI Project' to $ReportTitle
  
  display 'From Date: ' noline
  display $FromDate

  display 'Thru Date: ' noline
  display $ThruDate
 
  display $ReportTitle

  !AXL 6/11/2003 New focus by Division and not Company 
  !Let $X000_Order_By = 'Company, DeptID, Account Code'
  Let $X000_Order_By = 'Division, DeptID, Account Code'

  Do Format-DateTime($FromDate, $From_Date, {DEFDATE}, '', '')
  Do Format-DateTime($ThruDate, $Thru_Date, {DEFDATE}, '', '')

  !Let $GEXERNCD_Erncd_Alias = 'POE.ERNCD'
  !Do Get-Non-Productive-Erncds
  Let $GEXERNC3_Erncd_Alias    = 'POE.ERNCD'
  do Get-Productive-Erncds 

end-procedure

!***********************************************************************
Begin-Procedure P110-SQRW-Run-Controls
!***********************************************************************
#debug9 Show 'P110-SQRW-Run-Controls'

  Do Ask-From-Thru-Date

  Display 'Enter Company/Paygroup to include or leave blank to exit.'
  While 1=1
    Input $In-Company Maxlen=3 'Company'
    Uppercase $In-Company
    If Rtrim($In-Company, ' ') = ''
      Break
    Else
      Input $In-Paygroup Maxlen=3 'Paygroup'
      Uppercase $In-Paygroup
      If Rtrim($In-Paygroup, ' ') = ''
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' != '''  || $In-Company || ''')'
      Else
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' != '''  || $In-Company || ''' Or ' || $GEXXX901_Paygroup_Alias || ' != '''  || $In-Paygroup || ''')'
      End-If
      Add 1 To #GEX_RC_PAYGROUP_ROWS
      If #GEX_RC_PAYGROUP_ROWS = 1
        Let $GEXXX901_Include_COMPANY_PAYGROUP_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX901_Include_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_Include_COMPANY_PAYGROUP_CRITERIA || ' And '  || $Include_Condition
      End-If
    End-If
  End-While

  If #GEX_RC_PAYGROUP_ROWS = 0
    Let $GEXXX901_Include_COMPANY_PAYGROUP_CRITERIA = '1=1'
    Let $GEXXX901_Include_COMPANY_PAYGROUP_DISPLAY_CRITERIA = 'NONE'
  Else
    Let $GEXXX901_Include_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_Include_COMPANY_PAYGROUP_CRITERIA || ')'
    Let $GEXXX901_Include_COMPANY_PAYGROUP_DISPLAY_CRITERIA = $GEXXX901_Include_COMPANY_PAYGROUP_CRITERIA
  End-If

  Let $DivCdString = ''''
  Display 'Enter Company Division Code or leave blank to exit.'
  While 1=1
    Input $In-DivCd Maxlen=3 'Company Division Code'
    Uppercase $In-DivCd
    If Rtrim($In-DivCd, ' ') = ''
      Concat '''' With $DivCdString
      Break
    End-If
    If $DivCdString <> ''''
      Concat ''',''' With $DivCdString
    End-If
    Concat $In-DivCd With $DivCdString
  End-While

  If $DivCdString = ''''''
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = '1=1'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = $GEXXX907_Div_CD_Alias || ' In (' || $DivCdString || ')'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  End-If

  Let $AcctCdString = ''''
  Display 'Enter Account Code or leave blank to exit.'
  While 1=1
    Input $In-AcctCd Maxlen=25 'Account Code'
    Uppercase $In-AcctCd
    If Rtrim($In-AcctCd, ' ') = ''
      Concat '''' With $AcctCdString
      Break
    End-If
    If $AcctCdString <> ''''
      Concat ''',''' With $AcctCdString
    End-If
    Concat $In-AcctCd With $AcctCdString
  End-While

  If $AcctCdString = ''''''
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA = '1=1'
    Let $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA = $GEXXX909_Acct_CD_Alias || ' In (' || $AcctCdString || ')'
    Let $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA = $GEXXX909_INCLUDE_ACCT_CD_CRITERIA
  End-If


End-Procedure

!***********************************************************************
Begin-Procedure P120-Process-Scheduler-Run-Controls
!***********************************************************************
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXXX922-Select-Parameters
  Do GEXXX901-Select-Company-Paygroup-Parameters
  Do GEXXX907-Select-DIV-CD-Parameters		!AXL 6/11/2003 New Run Ctl
  Do GEXXX909-Select-Acct-CD-Parameters		!AXL 6/11/2003 New Run Ctl

  Let $FromDate  = $GEX_RC_PAY.FromDate
  Let $ThruDate  = $GEX_RC_PAY.ThruDate
  
End-Procedure

!***********************************************************************
Begin-Procedure P125-Get-Date-Range
!***********************************************************************
#debug9 Show 'P125-Get-Date-Range'
 
Begin-Select

max(pay_begin_dt) &pay_begin_dt
Max(pay_end_dt)   &pay_end_dt

  Let $FromDate  = &pay_begin_dt
  Let $ThruDate  = &pay_end_dt


  If Rtrim($ThruDate,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  End-If

From   ps_pay_calendar

Where  pay_end_dt         =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  pay_end_dt <= $AsOfToday
       And    pay_confirm_run = 'Y')

And    pay_confirm_run = 'Y'
End-Select
End-Procedure

!***********************************************************************
Begin-Procedure P200-Process-Data
!***********************************************************************
#debug9 Show 'P200-Process-Data'
  move 'N' to $rowfound

  show $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
  show $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  show $GEXXX909_INCLUDE_ACCT_CD_CRITERIA
  
Begin-Select ON-ERROR=SQL-Error-Found('P200-Process-data')

PE.PAY_END_DT   ()  on-break
                      level=1
                      save=$save_division
                      print=never

GDT.GEX_COMPANY_DIV_CD ()  on-break
                      level=2
                      save=$save_division
                      print=never

PE.DEPTID         ()  on-break
                      level=3
                      save=$save_deptid
                      print=never

PE.ACCT_CD        ()  on-break
                      level=4
                      after=P230-Print-Acct-Cd-Totals
                      save=$save_acct_cd
                      print=never

PE.EMPLID         ()  on-break
                      level=5
                      print=never

PE.EMPL_RCD      ()  on-break
                      level=6
                      after=P220-Employee-Count
                      print=never
PE.COMPANY
PE.PAYGROUP
PE.OFF_CYCLE
PE.PAGE_NUM
PE.LINE_NUM
PE.ADDL_NBR
PE.SEPCHK
!AXL 04/14/2004  Streamline hours and earnings select and summing - Begin
SUM(PE.REG_HRS   + PE.OT_HRS         + PE.REG_EARN_HRS)  &hours
SUM(PE.REG_EARNS + PE.REG_HRLY_EARNS + PE.OT_HRLY_EARNS) &earnings
!AXL 04/14/2004  Streamline hours and earnings select and summing - End

  move 'Y' to $rowfound
  Add &hours          To #acct_tot_hrs

  Add &earnings       To #acct_tot_earns

  do P210-Get-Other-Earnings

  Add &other_hours    To #acct_tot_hrs
  Add &other_earnings To #acct_tot_earns
  
  !AXL 6/11/2003 Sub-total displays depend on retail classification
  Evaluate &PE.PAYGROUP
    When = 'RET'
    When = 'PHM'
    When = 'RE2'
    When = 'PH2'
    When = 'RE3'
    When = 'PH3'
    When = 'RE4'
    When = 'PH4'
         let $Non_Retail_Flag='N'
         break
    When-Other
         let $Non_Retail_Flag='Y'
  End-Evaluate
  !AXL 6/11/2003 Sub-total displays depend on retail classification - End

  Do Get-Div-Name
  Do Get-Deptid-Name
  Do Get-Acctcd-Name
   
FROM   PS_PAY_EARNINGS PE ,
       PS_GEX_DEPT_TBL  GDT

WHERE  PE.PAY_END_DT  BETWEEN $FromDate AND $ThruDate

AND    PE.OK_TO_PAY         = 'Y'

AND    PE.SINGLE_CHECK_USE IN ('C','N')
AND    PE.PAY_LINE_STATUS  IN ('C','F')

AND    PE.DEPTID  = GDT.DEPTID

AND    GDT.EFFDT =
      (Select Max(effdt) From  ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt             <= $ThruDate)
AND    GDT.sequence_number       =
      (Select Max(sequence_number) From ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt              = gdt.effdt)

AND   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA]
AND   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
AND   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]

GROUP BY PE.PAY_END_DT,
         GDT.GEX_COMPANY_DIV_CD,
         !PE.COMPANY,
         PE.DEPTID,
         PE.ACCT_CD,
         PE.EMPLID,
         PE.EMPL_RCD,
         PE.COMPANY,
         PE.PAYGROUP,
         PE.OFF_CYCLE,
         PE.PAGE_NUM,
         PE.LINE_NUM,
         PE.ADDL_NBR,
         PE.SEPCHK

ORDER BY PE.PAY_END_DT,
         GDT.GEX_COMPANY_DIV_CD,
         !PE.COMPANY,
         PE.DEPTID,
         PE.ACCT_CD,
         PE.EMPLID,
         PE.EMPL_RCD

End-Select

  if $rowfound = 'N'
    display 'No Employees found for the Workers Comp Report.' 
  end-if
end-procedure

!***********************************************************************
begin-procedure P210-Get-Other-Earnings
!***********************************************************************
#debug9 Show 'P210-Get-Other-Earnings'
begin-select ON-ERROR=SQL-Error-Found('P210-Get-Other-Earnings')

SUM(POE.OTH_HRS) &other_hours

!AXL 12/3/2003 Drop OTH_PAY from calculation - Begin
!SUM(POE.OTH_PAY+POE.OTH_EARNS) &other_earnings
SUM(POE.OTH_EARNS) &other_earnings
!AXL 12/3/2003 Drop OTH_PAY from calculation - End

FROM   PS_PAY_OTH_EARNS POE

WHERE  POE.COMPANY    = &pe.company
AND    POE.PAYGROUP   = &pe.paygroup
AND    POE.PAY_END_DT = &pe.pay_end_dt
AND    POE.OFF_CYCLE  = &pe.off_cycle
AND    POE.PAGE_NUM      = &pe.page_num
AND    POE.LINE_NUM      = &pe.line_num
AND    POE.ADDL_NBR      = &pe.addl_nbr
AND    POE.SEPCHK        = &pe.sepchk

!AND [$GEXERNCD_EXCLUDE_ERNCD_CRITERIA]
AND  [$GEXERNC3_INCLUDE_ERNCD_CRITERIA]

end-select
end-procedure

!***********************************************************************
Begin-Procedure P220-Employee-Count
!***********************************************************************
#debug9 Show 'P220-Employee-Count'
  Add 1 To #acct_empl_count
End-Procedure

!***********************************************************************
Begin-Procedure P230-Print-Acct-Cd-Totals
!***********************************************************************
#debug9 Show 'P230-Print-Acct-Cd-Totals'

  
     If #acct_tot_hrs   > 0 Or
        #acct_tot_earns > 0
        !AXL 6/11/2003 New print routines
        do insert-into-temp
     End-If
 
  move 0 to #acct_tot_hrs
  move 0 to #acct_tot_earns
  move 0 to #acct_empl_count
End-Procedure


!***********************************************************************
begin-procedure Get-Div-Name 
!***********************************************************************
#debug9 Show 'Get-Div-Name'

begin-select
!GEX_PY251 SXD    08/21/2007      Begin
X1.XLATLONGNAME

	let $Div_Name = &X1.XLATLONGNAME
!From XLATTABLE X1
From  PSXLATITEM X1
!Where X1.EFFDT = (SELECT MAX(EFFDT) FROM XLATTABLE
Where X1.EFFDT = (SELECT MAX(EFFDT) FROM PSXLATITEM
        WHERE x1.FIELDNAME = FIELDNAME
         !AND x1.LANGUAGE_CD = LANGUAGE_CD
          AND x1.FIELDVALUE = FIELDVALUE
          AND EFFDT <= SYSDATE)
  AND X1.FIELDNAME  = 'GEX_COMPANY_DIV_CD'
  AND X1.fieldvalue = $save_division
!GEX_PY251 SXD    08/21/2007      End
end-select
end-procedure

!***********************************************************************
begin-procedure Get-Deptid-Name 
!***********************************************************************
  #debug9 Show 'Get-Deptid-Name'
  if $AsOfDate = ''  !if no As-Of-Date is specified, default to Today
    move $AsOfToday to $AsOfDate
  end-if
begin-select

X.DESCR

  let $DeptName      = Rtrim(&X.DESCR,' ')
  
FROM  PS_DEPT_TBL X
WHERE X.DEPTID = $save_deptid
  AND X.EFFDT <= $AsOfDate
  AND X.EFFDT  =
       (SELECT MAX(EFFDT)
        FROM   PS_DEPT_TBL
        WHERE  DEPTID = X.DEPTID
          AND  EFFDT <= $AsOfDate)
end-select

end-procedure

!***********************************************************************
begin-procedure Get-Acctcd-Name 
!***********************************************************************
  #debug9 Show 'Get-Acctcd-Name'

 if rtrim($save_acct_cd,' ') = ''
    move '' to $AcctCdName
    goto GetActNmExit
  end-if
  if $AsOfDate = ''  !if no As-Of-Date is specified, default to Today
    move $AsOfToday to $AsOfDate
  end-if
begin-SELECT
Z.DESCR,Z.DESCRSHORT
!FROM  PS_acct_cd_TBL Z			!GEX-MXT  COMMENTED ON 09/26/2007
FROM  PS_GEX_ACCT_CD_TBL Z		!GEX-MXT  ADDED ON 09/26/2007
WHERE Z.ACCT_CD = $save_acct_cd
!GEX-MXT  UNCOMMENTED ON 09/26/2007-BEGIN
  AND Z.EFFDT =
      (SELECT MAX(Z1.EFFDT)
       !FROM   PS_ACCT_CD_TBL Z1
       FROM   PS_GEX_ACCT_CD_TBL Z1
       WHERE  Z1.ACCT_CD = $save_acct_cd
        AND  Z1.EFFDT <= $AsOfDate)
!GEX-MXT  UNCOMMENTED ON 09/26/2007  -END
end-SELECT

  let $AcctCDName = rtrim(&Z.Descr,' ')
  
GetActNmExit:

end-procedure

!************************************************************************
Begin-Procedure Insert-Into-Temp
!************************************************************************
 
#ifdef debuga
   show '$ThruDate '	 $ThruDate
   show '$save_division	' $save_division
   show '$Div_Name ' $Div_Name
   show '$save_deptid '	 $save_deptid
   show '$DeptName '	 $DeptName
   show '$save_acct_cd '	  $save_acct_cd	
   show	'$AcctCDName '	  $AcctCDName
   show '#acct_tot_earns '	 #acct_tot_earns
   show '#acct_tot_hrs '	 #acct_tot_hrs
   show '#acct_empl_count ' #acct_empl_count
#endif

  #debug9 Show 'Insert-Into-Temp'
  begin-sql 
    INSERT INTO PS_GEX_R_GEXPY064
               (EFFDT,
	        GEX_DIVISION_CD,
		DESCR,
	        DEPTID,
		DESCR1,
                ACCT_CD,
		DESCR2,
                ACCUM_AMT,
                GEX_SERVICE_HRS,
                ACTUAL_HEAD_COUNT)
        VALUES (&PE.PAY_END_DT,
	        $save_division,
                nvl($Div_Name,' '),
		$save_deptid,
                nvl($DeptName,' '),
                $save_acct_cd,
		nvl($AcctCDName,' '), 
                #acct_tot_earns,
                #acct_tot_hrs,
                #acct_empl_count)

  end-sql
end-procedure

!************************************
begin-procedure Trunc-work-table
!************************************
#debug9 show 'Trunc-work-table' 

begin-sql 
truncate TABLE ps_gex_r_gexpy064
end-sql
end-procedure

!***********************************************************************
begin-procedure SQL-Error-Found($Proc_Name) 
!***********************************************************************
#debug9 Show 'SQL-Error-Found'
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  stop
end-procedure

!***********************************************************************
Begin-Procedure EOJ-Process
!***********************************************************************

end-procedure

#Include 'gexxx922.sqc'  !Get gex_rc_pay run controls
#Include 'gexxx901.sqc'  !Get multiple company/paygroup run controls
#Include 'askftd.sqc'    !From Thru Date input
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
!#include 'gexerncd.sqc'  No longer desired
#include 'gexernc3.sqc'  !Set up Erncd exclude code
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#Include 'gexxx907.sqc'  !Retrieve multiple company division run controls
