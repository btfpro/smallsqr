!***********************************************************************
!  GEXPY603:  LOCAL 23 CREDIT UNION DEDUCTION EXTRACT FILE AND REPORT. *
!***********************************************************************
!                                                                      * 
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
! GEXPY603:    LOCAL 23 CREDIT UNION DEDUCTION EXTRACT FILE AND REPORT *
!                                                                      *
! Narrative:   This program creates an extract file and a report that  *
!              contains all employees who have a Local 23 credit union *
!              deduction for the current pay end date.                 *
!                                                                      *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!		      	#debug8 key variable values                    * 
!		      	#debug7 data returned from sql calls           * 
!                                                                      *
! SQL Tables:           PS_PAY_CALENDAR                                * 
!                       PS_PAY_CHECK                                   *
!                       PS_PAY_DEDUCTION                               *  
!                       PS_EMPLOYMENT                                  *
!                       PS_JOB                                         * 
!                                                                      *
! Written by:           Michael Jones                                  *                                                   
!                                                                      *
! Normally run:                                                        *
!                                                                      *
! Entered Run                                                          *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                                                                      *
!                       Company Division Code                          *
!            		Company  	                                   *
!                       Company/Paygroup                               *
!      			Deptid                                         *
!                       Acctcd                                         *	                                   
!     			Empl_Status	                                   *
!                                                                      *
!                       FOR ORDER BY CLAUSE:                           *
!                       1)  COMPANY, PAYGROUP, UNION_CD, SSN           *
!                                                                      *  
!                                                                      *
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  xxxx    MDJ         02/20/1998     INITIAL CREATION                 *
!	     SXK	     09/08/1998     Added OUTFILE variable           *
!          SXK         09/22/1998     Added New Mobius ReportID        *
!          JDH         10/28/1998     Added union code(s) and deduction*
!                                       code(s) parameters             *
!          SXK         01/27/1999     modified to not to print negatives
!				      Adjusted alignment of decimals
!				      not to print duplicates
!				      added grand totals at the end
!	   SXK         01/29/1999     Changed file format to match EDS
!				      Do not print employee info if
!				      deduction amount is 0
!          SXK         02/01/1999     Included all the checks for an
!				      EE to calculate dues
!	   SXK         10/28/1999    Modified to have union from       
!					job labor 
!	   SXK         11/23/1999    Changed from ssn to emplid        *
!          PSR         08/04/2002     Modified to have union_cd from PS_JOB    *
!                                     for UPGRADE 8
!	   VENDAPP     10/12/2007     ITG 44337, SSN to emplid conversion*
!	   VENDAPP     11/01/2007     ITG 44337, Creation of cross reference file *
!	   GEX-TLL     06/03/2008     HCM 9.0 Upgrade Retorfitting 
!				      (Modified to only print companies with a grand total <> zero *
!      Surya Sobha     02/19/2016     Added the Moveit Procedure 
!GEX_SEC_REENG 2015-04-29 Vahini Katta                                 *
!Changes related to gex_emplid_mapp/7 digit emplid
!***********************************************************************

#define #x000_col_selection_criteria_a 	02
#define #x000_col_selection_criteria_b 	05

#include 'setenv.sqc' !Set environment

begin-setup

#include 'setup32a.sqc'

declare-report Cred-Union-report
Printer-Type=HPLASERJET
  layout=DEFAULT
end-declare

declare-report Report-log
Printer-Type=HPLASERJET
  layout=DEFAULT
end-declare

end-setup

!*********************************************************************
!Prints the header information in the report log.
!*********************************************************************
begin-heading 6 for-reports=(report-log)
LET $REPORTID = 'PY603LOG'
 move 'Report Log' to $ReportTitle
 #Include 'stdhdg01.sqc'

  position (+2)
  print 'Trans#' (,1) bold
  print 'Emplid' (,18) bold
  print 'Message' (,50) bold
  print '-' (+1,1,176) fill
 
end-heading

!*********************************************************************
!Prints the header information in the Cred-Union-Report
!*********************************************************************

begin-heading 7 for-reports=(Cred-Union-Report)
LET $REPORTID = 'PY603CRD'
 #Include 'stdhdg01.sqc'

! position (-1)
 
  position (+1)
  
  move $company to $save_company
  move $paygroup to $save_paygroup
  move $prev_company to $company
  move $prev_paygroup to $paygroup
  
  string $company_Desc $paygroup_Desc by '/' into $sub_desc
  print $sub_desc (,1)
  
  move $save_company to $company
  move $save_paygroup to $paygroup

  position (+2)

  print 'Company' (,1) bold
  print 'Paygroup' (,15) bold
  print 'Union'  (,30) bold
  print 'Prefix'  (,45) bold 
  print 'EMPLID' (,60) bold		!VENDAPP, ITG 44337, SSN to emplid conversion
  print 'SSN' (,75) bold		!VENDAPP, ITG 44337, SSN to emplid conversion (,60)
  print 'Suffix' (,90) bold		!(,75)
  print 'Cred Union Amt' (,110) bold	!(,95)
  print '-' (+1,1,176) fill
 
end-heading

!*********************************************************************
begin-report
!*********************************************************************
  use-report Cred-Union-Report

  do Init-datetime
  do Init-number
  do Get-current-datetime
  let $reportdate_mm = substr($reportdate,1,2)
  let $reportdate_dd = substr($reportdate,4,2)
  let $reportdate_yy = substr($reportdate,7,2)
  do MakeYear4Digits ($reportdate_yy)

  let $reportdate_ccyyyy = $reportdate_mm||'/'||$reportdate_dd||'/'||$reportdate_yy

  do Format-datetime($reportdate_ccyyyy,$reportdate_ccyy,{DEFMDY},'','NATIVE') 
  do Stdapi-init
  do P010-Init-Variables 
  do Report
  do Commit-transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do Stdapi-term
  do Reset

end-report

!***********************************************************************
begin-procedure p010-Init-Variables
!***********************************************************************

#debug9 show 'P010-Init-Variables'

  let $x000_new_page_flag = 'N'
  
  let $ReportID           = 'GEXPY603'
  let $ReportTitle        = 'Local 23 Credit Union Deduction Report'                                     
  let $Country            = 'USA'

  show '$ReportID= '     $ReportID
  show '$ReportTitle = ' $ReportTitle   

  Do GEXXX951-Select-Oracle-Instance

  if $Prcs_process_instance = ''
     do P015-get-input
  else

   !	get parameters from multiple row run control record
    	Let $GEXXX900_Company_Alias  = 'JOB.COMPANY'                           
	Do GEXXX900-Select-Company-Parameters 

      Let $GEXXX901_Company_Alias  = 'JOB.COMPANY' 
      Let $GEXXX901_Paygroup_Alias = 'JOB.PAYGROUP'    
      Do GEXXX901-Select-Company-Paygroup-Parameters    

 	Let $GEXXX902_Deptid_Alias = 'JOB.DEPTID'  
	Do GEXXX902-Select-Deptid-Parameters 

	Let $GEXXX903_Emp_Stat_Alias = 'JOB.EMPL_STATUS'  
	Do GEXXX903-Select-Emp-Stat-Parameters          

    	Let $GEXXX907_Div_CD_Alias = 'GEX_DEPT.GEX_COMPANY_DIV_CD'
	Do GEXXX907-Select-Div-CD-Parameters
	          
	Let $GEXXX909_Acct_CD_Alias = 'JOB.ACCT_CD'
	Do GEXXX909-Select-Acct-CD-Parameters

      Let $GEXXX913_Union_Cd_Alias = 'JOB.UNION_CD' !SXK 10/28/99 Changed from c.union_Cd
      Do GEXXX913-Select-Union-Cd-Parameters

      Let $GEXXX919_DEDCD_Alias = 'A.DEDCD'
      Do GEXXX919-Select-DEDCD-Parameters

!	get parameters from single row run control record 
	Do GEXXX922-Select-Parameters
	let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
	
  end-if

  if rtrim($X000_WHERE_SELECT_ASOFDATE, ' ' ) = ''
       let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
       LET $AsOfDate = $X000_WHERE_SELECT_ASOFDATE 
  else
       LET $AsOfDate = $X000_WHERE_SELECT_ASOFDATE 
  end-if

  do Get-Date-Codes
  let #AsOfYYYY = to_number($AsOfYYYY)
  let #AsOfMM   = to_number($AsOfMonth)
!SXK 10/28/99 Changed from c.union_cd
     let $X000_order_by = 'JOB.COMPANY, JOB.PAYGROUP, JOB.UNION_CD, JOB.EMPLID'

      show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA                =' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
	show '$GEXXX900_INCLUDE_COMPANY_CRITERIA               =' $GEXXX900_INCLUDE_COMPANY_CRITERIA
	show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA      =' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA   
	show '$GEXXX902_INCLUDE_DEPTID_CRITERIA                =' $GEXXX902_INCLUDE_DEPTID_CRITERIA
	show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA              =' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
	show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA               =' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA         
    
      show '$X000_WHERE_SELECT_ASOFDATE        ='  $X000_WHERE_SELECT_ASOFDATE 

	print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
	print '$Prcs_OPRID          ='                              (+2,{#x000_col_selection_criteria_b})
	print $Prcs_OPRID                                           (0,+2)
	print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
	print $PRCS_RUN_CNTL_ID                                     (0,+2)

    	print 'SELECTION CRITERIA FOR THIS REPORT RUN:'           (+5,{#x000_col_selection_criteria_a})
 	print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA 		(0,+2)
 	print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
 	print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA            (0,+2)
 	print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})
 	print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA   (0,+2)
	print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)
	print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA           (0,+2)
	print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA            (0,+2)
      Print '$GEXXX913_Include_Union_Cd_Display_Criteria         ='   (+1,{#x000_col_selection_criteria_b})
      Print $GEXXX913_Include_Union_Cd_Display_Criteria           (0,+2)
      Print '$GEXXX919_Include_Dedcd_Display_Criteria            ='   (+1,{#x000_col_selection_criteria_b})
      Print $GEXXX919_Include_Dedcd_Display_Criteria              (0,+2)
      print '$X000_WHERE_SELECT_ASOFDATE                     ='   (+1,{#x000_col_selection_criteria_b})
	print  $X000_WHERE_SELECT_ASOFDATE                          (0,+2)

	print '$X000_ORDER_BY                                  =' (+1,{#x000_col_selection_criteria_b})
 	print $X000_ORDER_BY 	(0,+2)

 	let #page-count = 0
	NEW-PAGE
	LET #PAGE-COUNT = 1

end-procedure

!***********************************************************************
begin-procedure P015-get-input
!***********************************************************************
#debug9 show 'P015-get-input'

	                       
      let $GEXXX907_INCLUDE_DIV_CD_CRITERIA           = '1=1'           
	let $GEXXX900_INCLUDE_COMPANY_CRITERIA 		= '1=1'
	let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1' 
	let $GEXXX902_INCLUDE_DEPTID_CRITERIA		= '1=1'
	let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA    	= '1=1'
	let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA          = '1=1'
      let $GEXXX913_Include_Union_Cd_Criteria         = '1=1'
      let $GEXXX919_Include_Dedcd_Criteria            = '1=1'
!SXK 10/28/99 Changed from c.union_cd
	let $X000_ORDER_BY = 'JOB.COMPANY, JOB.PAYGROUP, JOB.UNION_CD, B.EMPLID'

end-procedure

begin-procedure Report

date-time () hh:mi:ss &timeBegan
display 'Report Started: ' noline
display &timeBegan

do Get-curr-pay-end-date

do Open-output-file

move 0 to #tot_cu_amt
move 0 to #company_cu_amt
move '019804369010' to $prefix
move '010      23' to $suffix

do Process-employee-data

let $rnctl_Date = $reportdate_ccyy

let $rnctl_mm = substr($rnctl_Date,1,2)
let $rnctl_dd = substr($rnctl_Date,4,2)
let $rnctl_yyyy = substr($rnctl_Date,7,4)       
let $rnctl_yy  = substr($rnctl_date,9,2)
move $rnctl_yyyy to #rnctl_yyyy
move $rnctl_yy to #rnctl_yy

do Close-output-file  ! Surya Sobha  02/19/2016 

Report-Exit:

! want to print the grand total fields here
  
  date-time () hh:mi:ss &timeProcess
  
  display 'Employees Selected: ' noline
  display #selectrow 999,999 

  display 'Records written to output file: ' noline
  display #recs-written 999,999

end-procedure


!*************************************************************** 
!Retrieve the current confirmed pay end date from Pay Calendar *
!***************************************************************

begin-procedure get-curr-pay-end-date

move 'N' to $found-pay-end-date

begin-select on-error=sql-error-found('Get-Curr-Pay-End-Date')
A.PAY_END_DT

   move &A.PAY_END_DT to $pay_end_dt
   move 'Y' to $found-pay-end-date

FROM PS_PAY_CALENDAR A
WHERE A.PAY_CONFIRM_RUN = 'Y'
  AND A.PAY_END_DT = (SELECT MAX(PAY_END_DT)
                      FROM PS_PAY_CALENDAR
                        WHERE PAY_CONFIRM_RUN = 'Y'
                          AND PAY_END_DT <= $X000_WHERE_SELECT_ASOFDATE)
end-select

if $found-pay-end-date = 'N'
   add #1 to #errorcount
   do Error-found
   print 'No Current Confirmed Pay End Date' (,30)
   use-report cred-union-report
!  probably want to stop processing here    
end-if

end-procedure


!*********************************************************************
!Open the output file for employees with a Local 23 Credit Union 
!deduction.  
!*********************************************************************

begin-procedure Open-output-file
 !let $filename = '{OUTFILE}'||'gexpy603.dat'  ! Surya Sobha  02/19/2016 
 let $filename = '{OUTFILE}'||'412967618_P_gexpy603.dat.pgp'   ! Surya Sobha  02/19/2016 
  open $filename as 1 for-writing record=80:fixed
       status=#filestat

  if #filestat = 0
     display $filename		!vendapp testing
     display 'File C:\temp\gexpy603.dat opened successfully - Filestat: ' noline
     display #filestat 9999 
  else
     display 'Error opening File C:\temp\gexpy603.dat - Filestat: ' noline
     display #filestat 9999
  end-if

!VENDAPP, creation of cross reference file, ITG 44337
let $filename = '{OUTFILE}'||'gexpy603_emplidssn_map.dat'
  open $filename as 2 for-writing record=80:fixed
       status=#filestat

  if #filestat = 0
     display $filename		!vendapp testing
     display 'File C:\temp\gexpy603_emplidssn_map.dat opened successfully - Filestat: ' noline
     display #filestat 9999 
  else
     display 'Error opening File C:\temp\gexpy603_emplidssn_map.dat - Filestat: ' noline
     display #filestat 9999
  end-if
!VENDAPP, creation of cross reference file, ITG 44337
end-procedure

!*********************************************************************
!Close the output file for employees with a Local 23 Credit Union 
!deduction.  
!*********************************************************************

begin-procedure Close-output-file

  close 1 
  
  ! Surya Sobha added for Moveit changes - 02/19/2016 */
  let $Prcs_OPRID = 'HRBATCH'
  let $PRCS_RUN_CNTL_ID = 'gexpy603'
  let $ReportID = 'GEXPY603'
  let $FILENAMEMOV = '412967618_P_gexpy603.dat.pgp'
  
  Do Call_MovIt_Commands($Prcs_OPRID,$PRCS_RUN_CNTL_ID,$ReportID,$FILENAMEMOV, $comments ) !gexmovit.sqc      
  ! Surya Sobha added for Moveit changes - 02/19/2016 */
        
end-procedure


!*********************************************************************
!Retrieves employees with a Local 23 Credit Union deduction for the
!current pay end date.  
!*********************************************************************

begin-procedure process-employee-data

move 'N' to $errorfound
move 'N' to $found-employee
move 'N' to $new_page
move  0  to #selectrow 

LET $x100_Get_Employees_Data_Flag = 'N'

begin-SELECT
!**A.COMPANY  () on-break print=never level=1 save=$prev_company after=company-change
job.COMPANY  
  if #selectrow = 0
     move &job.company to $prev_company
     move &job.company to $company
  else
     if &job.company <> $prev_company
     if(#company_cu_amt <> 0)	!GEX-TLL 06/03/2008 Added
        do company-change
           new-page
     end-if			!GEX-TLL 06/03/2008 Added
        move &job.company to $company
        move $company to $prev_company
     else
        move &job.company to $company
     end-if
  end-if
JOB.PAYGROUP 
!SXK 10/28/99 Changed from c.union_cd
JOB.UNION_CD 
JOB.EMPLID
JOB.EMPL_RCD
  move &JOB.EMPLID to $emplid     

  LET $x100_Get_Employees_Data_Flag = 'Y'
  let $ded_found = 'N'
  do select-page-line
!  do select-deduction
  if $ded_found = 'Y'
     add 1 to #selectrow
     add #ded_cur to #company_cu_amt
     move 'Y' to $found-employee
     print $company (+1,3)
     print &job.paygroup (,17)
!SXK 10/28/99 Changed from c.union_cd
     print &JOB.UNION_CD (,31)
     print $prefix (,45)
     ! GEX_SEC_REENG 2015-06-24 Vahini Katta Begins
     !do Get-Gex-Mapp-EmpIid (&job.emplid,$emplid_out)	!ITG 44337 VENDAPP 10/15/2007
     !print $emplid_out (,60)				!ITG 44337 VENDAPP 10/15/2007
     !print &JOB.EMPLID (,75) !edit XXX-XX-XXXX		!(,60)! GEX_SEC_REENG 2015-06-24 Vahini Katta 
     print &JOB.EMPLID (,60)
     do Get-Emp-Ssn (&JOB.EMPLID, $Ssn_Out)
     print $Ssn_Out (,75) edit  XXX-XX-XXXX
     ! GEX_SEC_REENG 2015-06-24 Vahini Katta Ends
     print $suffix (,90)				!(,75)
     print #ded_cur (,110) edit 999,999.99		!(,95)

     do Write-output-record  

     move 'N' to $new_page
  end-if
  move 0 to #ded_cur
FROM  PS_JOB JOB
!SXK 10/28/1999 Begin
!      PS_EMPLOYMENT    C
!SXK 10/28/1999 End

!SXK 10/28/99 Begin
!JOB.EMPLID        = C.EMPLID 
!  AND JOB.EMPL_RCD       = C.EMPL_RCD
!SXK 10/28/1999 begin
WHERE  [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
  AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
  AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
  AND [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
  AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
  AND [$GEXXX913_Include_Union_Cd_Criteria]
  AND   JOB.EFFDT = (SELECT MAX(EFFDT)
		 FROM PS_JOB
		 WHERE EMPLID = JOB.EMPLID
		 AND   EMPL_RCD = JOB.EMPL_RCD
		 AND   EFFDT <= $pay_end_dt) 
  AND   JOB.EFFSEQ = (SELECT MAX(EFFSEQ)
		  FROM PS_JOB
		  WHERE EMPLID = JOB.EMPLID
		  AND   EMPL_RCD = JOB.EMPL_RCD
		  AND   EFFDT = JOB.EFFDT)
!  AND Job.DEPTID = GEX_DEPT.DEPTID 
!  AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
!  AND GEX_DEPT.EFFDT = (SELECT MAX(GEX_DEPT1.EFFDT) FROM PS_GEX_DEPT_TBL GEX_DEPT1
!		WHERE GEX_DEPT1.DEPTID = GEX_DEPT.DEPTID AND
!			GEX_DEPT1.EFFDT <= $ASOFTODAY) 
!  AND GEX_DEPT.SEQUENCE_NUMBER = (SELECT MAX(GEX_DEPT2.SEQUENCE_NUMBER) FROM PS_GEX_DEPT_TBL GEX_DEPT2
!		WHERE GEX_DEPT2.DEPTID = GEX_DEPT.DEPTID AND
!			GEX_DEPT2.EFFDT = GEX_DEPT.EFFDT)
!SXK 10/28/99 Changed from c.union_cd
ORDER BY JOB.COMPANY, JOB.PAYGROUP, JOB.UNION_CD, job.EMPLID 
end-SELECT

 if $x100_Get_Employees_Data_Flag = 'N'
	print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) CENTER
 end-if


if $found-employee = 'N'
   do Error-found
   print 'No Cred Union Deduct found for the latest payroll run'(,34)
   use-report Cred-Union-Report
else
   if(#company_cu_amt <> 0)	!GEX-TLL 06/03/2008 Added
     do company-change
   end-if			!GEX-TLL 06/03/2008 Added
   print 'Grand Total '  (+2,1)
   print #tot_cu_amt (,92) edit 99,999,999.99
end-if

end-procedure

Begin-procedure select-deduction

begin-select on-error=sql-error-found('Select-Deduction')
sum(a.ded_cur) &ded_cur

  add &ded_cur to #ded_cur
!  if #ded_cur > 0
!     move 'Y' to $ded_found
!  end-if

from  ps_pay_deduction a
where a.company = $company
  and a.paygroup = &job.paygroup
  and a.pay_end_Dt = $pay_end_Dt
  and a.page_num = #page_num
  and a.line_num = #line_num
  and a.off_cycle = $off_cycle
  and a.sepchk = $sepchk
  AND [$GEXXX919_Include_Dedcd_Criteria]
end-select
exit-sel:

end-procedure

begin-procedure select-page-line
move 'N' to $off_cycle
move 0 to #page_num
move 0 to #line_num
move 'N' to $sepchk
  move 'N' to $page-line-selected
begin-select
cud.off_cycle
cud.page_num
cud.line_num
cud.sepchk
  move &cud.off_cycle to $off_cycle
  move &cud.page_num to #page_num
  move &cud.line_num to #line_num
  move &cud.sepchk to $sepchk
  move 'Y' to $page-line-selected
  do select-deduction

from ps_pay_check cud

WHERE  CUD.COMPANY = $COMPANY
AND    CUD.PAYGROUP = &job.PAYGROUP
AND    CUD.PAY_END_DT = $PAY_END_DT
AND    CUD.EMPLID     = &job.emplid
AND    CUD.EMPL_RCD = &JOB.empl_rcd
end-select
  if #ded_cur > 0
     move 'Y' to $ded_found
  end-if
  
end-procedure
!*********************************************************************
!Write each employee credit union deduction to the output file	  
!and increment the file record count by 1.   
!*********************************************************************

begin-procedure Write-output-record
 
  move #ded_cur to $ded_cur 999999.99
  let $ded_Cur_prefix = substr($ded_cur,1,6)
  let $ded_Cur_suffix = substr($ded_cur,8,2)
  let $ded_cur = $ded_cur_prefix||$ded_cur_suffix
  
  move &job.emplid to $emplid_file
  !let $emplid_file = '0'||$emplid_file			!ITG 44337 VENDAPP 10/15/2007
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
  !do Get-Gex-Mapp-EmpIid (&job.emplid,$emplid_out)	!ITG 44337 VENDAPP 10/15/2007 
  !let $emplid_ee='000'||$emplid_out			!ITG 44337 VENDAPP 10/15/2007 
  let $emplid_ee='000'||&job.emplid
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
  let $ded_Cur = ltrim($ded_cur,' ')
  let #len = length($ded_cur)
  let #r_len = 8 - #len
  let #i = 1 
  while #i <= #r_len
      let $ded_Cur = '0'||$ded_Cur
      add 1 to #i
  end-while
  
  move '01980' to $fix_string
  move '436901' to $cuin
  write 1 from $fix_string:5         -
               $cuin:6               -
               !$emplid_file:10       -			!ITG 44337 VENDAPP 10/15/2007
               $emplid_ee:10       -			!ITG 44337 VENDAPP 10/15/2007
               $suffix:11            -
!*******       #ded-cur:9            
               $ded_cur:8         
               status=#filestatus

  if #filestat = 0
  else
     display 'Error writing to File C:\temp\gexpy603.dat - Filestat=' noline
     display #filestat
  end-if
       
!VENDAPP, creation of cross reference file, ITG 44337
let $empl_rcd = &JOB.EMPL_RCD
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
 do Get-Emp-Ssn ($emplid_file, $Ssn_Out)
 !write 2 from $emplid_file:9
  write 2 from $Ssn_Out:9
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
	     ' ':1
	     $emplid_out:7
	     ' ':1
	     $empl_rcd:3
!VENDAPP, creation of cross reference file, ITG 44337

add 1 to #recs-written

end-procedure


!*********************************************************************
!If there is a change in the Company Codes of the employees, prints 
!the running totals of the balances and starts calculating for the 
!newly read Company Code
!*********************************************************************

begin-procedure company-change

!  if RTRIM(&B.COMPANY,' ') <> ''
!     if &B.COMPANY = $prev_company
!	goto proc-exit
!     else
!        move 'Y' to $company_change
!       move &B.COMPANY to $company
!       do Get-company-desc
!     end-if
!  end-if

print 'Total for Company: '  (+2,1)
print $prev_company ()
print #company_cu_amt (,93) edit 9,999,999.99
add   #company_cu_amt to #tot_cu_amt

move 0 to #company_cu_amt

proc-exit:

end-procedure

!********************************************************************
!This procedure displays a message in the error report when any SQL * 
!errors are encountered in the program                              * 
!********************************************************************

begin-procedure SQL-Error-Found($Proc_Name) 
  do Error-found
  print 'SQL Error in ' (,34)
  print $Proc_Name ()  
  print $_sql-error () 
  print 'sql-status:' ()
  print #_sql-status () edit 99999 
  use-report Cred-Union-Report
end-procedure

!*********************************************************************
!This procedure displays the error message for the records that are in
!progress
!*********************************************************************

begin-procedure Error-Found
  move 'Y' to $ErrorFound
  use-report report-log
  do Format-number(#selectrow, $out, '99999')
  print $out (+1,1)
  !GEX_SEC_REENG 2015-06-24 Vahini Katta Begins
  !let $EmplId_1st3 = substr($EmplId,1,3)
  !let $EmplId_mid2 = substr($EmplId,4,2)
  !let $EmplId_last4 = substr($EmplId,6,4)
 
  !String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  !print $EmplID11 (,16)
  print $EmplID (,16)
  ! GEX_SEC_REENG 2015-06-24 Vahini Katta Ends
end-procedure

#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'payrnctl.sqc'  !Select-Parameters
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions

#Include 'gexxx951.sqc'  !Select Oracle Instance
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#Include 'gexxx913.sqc'  !Get gex_rc_union_cd run controls
#Include 'gexxx919.sqc'  !Get gex_rc_dedcd run controls
#Include 'getgeid.sqc'	 !ITG 44337 VENDAPP 10/15/2007
#include 'gexmovit.sqc'  !Move the files to MoveIt Folder  ! Surya Sobha  02/19/2016      