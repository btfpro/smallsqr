!***********************************************************************
! GEXBN801:  HEALTH & WELFARE CONTINUANCE FOR DEMOTED EMPLOYEES IN R02 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXBN801:  HEALTH & WELFARE CONTINUANCE FOR DEMOTED EMPLOYEES IN R02 *
!                                                                      *        
! Narrative:        This customization processes employees in benefit  *
!                      program R02 who get demoted  from FT to PT and  *
!                      gives them a continuance of 3 months on their   *
!                      FT Health & Welfare Benefits.                   *
!                                                                      *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                             #debug8 key variable values              *
!                             #debug7 data returned from sql calls     * 
!                                                                      *  
! SQL Tables:           job                                            *
!                       ben_prog_partic                                *
!                       health_benefit                                 *
!                       pay_calendar                                   *
!                                                                      *
! Written by:           Gene Davis  07/29/1998                         *       
!                                                                      *
! Normally Run:         Monthly                                        *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!       INITIALS        DATE            DESCRIPTION OF THE CHANGE      *
!***********************************************************************
!       GXD             07/29/98        Initial Creation               *
!                                                                      *
!       SXK             03/09/99        Modified to report EEs that    *
!                                       were demoted via IVD reason    *
!                                       from FT to PT and with FT      *
!                                       enrollment                     *
!                                                                      *
!       AXL             03/08/2000      Moved the call for LDPLNTYP.SQC*
!                                       out of the Begin-Setup section.*
!                                       Psoft added If-Then logic that *
!                                       can't reside there anymore.    *
! GEX_SEC_REENG 2015-06-24 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

!AXL 03/08/2000 Chg - Begin
!begin-setup
!#Include 'ldplntyp.sqc'  !Load-Lookup Table with Plan Types
!end-setup
!AXL 03/08/2000 Chg - End

begin-report
#debug9 Show 'begin-report'

  do Init-DateTime           !datetime.sqc
  do Init-Number             !number.sqc
  do Get-Current-DateTime    !curdttim.sqc
  do P000-Init-Report
  do edit-pay-calendar
  do P200-Process-Main
  do Get-Current-DateTime
  do End-Report
  do Reset                   !reset.sqc
  do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
end-report


begin-heading 10
#debug9 Show 'begin-heading'
 #Include 'stdhdg01.sqc'
  position (-1)
  PRINT 'Note: Employees demoted from REG FT to REG PT due to DEM/IVD action.'  () center

  PRINT 'Emplid'            (+2,1)
  print 'Name'              (0,14)
  print 'Deptid'            (0,50)
  print 'Action Date'       (0,60)
  print 'Effective Dt'      (0,75)

end-heading

!**************************************************************************
begin-procedure P000-Init-Report
#debug9 Show 'P000-Init-Report'

!AXL 03/08/2000 Chg - Begin
#Include 'ldplntyp.sqc'  !Load-Lookup Table with Plan Types
!AXL 03/08/2000 Chg - End

  move 0 to #emp_count

  move 'GEXBN801'         to $ReportID
  move 'Health & Welfare Continuance for Demoted Employees in R02' to $ReportTitle

  do Stdapi-Init

  Show '$ReportID=' $ReportID
  Show '$ReportTitle=' $ReportTitle
  Show '$ReportDate=' $ReportDate
  Show '$ReportTime=' $ReportTime

  let $X000_ORDER_BY                               = 'EMPLID'  

  if $prcs_process_instance = ''
    let $X000_WHERE_SELECT_ASOFDATE                  = $AsOfToday
  else
!    Do GEXRCBN1-SELECT-PARAMETERS

!    Let $X000_Where_Select_AsofDate = &GEX_RC_BEN.ASOFDATE
!    If Rtrim(&GEX_RC_BEN.ASOFDATE,' ') = ''
       Let $X000_Where_Select_AsofDate = $AsOfToday
!    End-If
   
  End-If

  Do Convert-to-dtu-date($AsofToday,$Today)

  do dtu-add-months($today,-3,$prev_dt_dtu)
  do convert-from-dtu-date($prev_dt_dtu,$prev_dt)


!  Do P050-Print-Cover-Page

end-procedure

!************************************************************************
begin-procedure P050-Print-Cover-Page
#debug9 Show 'P050-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OPRID          ='                                  (+2,5)
  Print $Prcs_OPRID                                               (0,+2)
  Print '$PRCS_RUN_CNTL_ID    ='                                  (+1,5)
  Print $PRCS_RUN_CNTL_ID                                         (0,+2)

  Print 'As Of Date :'                                            (+1,5)
  Print $X000_REPORT_HEADING_ASOFDATE                             (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_ORDER_BY                                            (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
  Let #PAGE-COUNT = 1
End-Procedure


Begin-Procedure Edit-pay-calendar
let #pay_period = 0

Begin-Select 
pay_period
   move &pay_period to #pay_period

From  ps_pay_calendar

Where company  = 'GEI'
And   paygroup = 'RET'
and   pay_confirm_run = 'Y'
and   pay_end_dt = (select max(pe.pay_end_dt)
                      from ps_pay_calendar pe
		     where pe.company = 'GEI'
		       and pe.paygroup = 'RET'
		       and pe.pay_confirm_run = 'Y'
		       and pe.pay_end_dt <= $asoftoday)
End-Select

if #pay_period <> 1
   display '***** Error *** This program should be run after the first pay period is confirmed.*******'
   stop
end-if

End-Procedure

!***********************************************************************
begin-procedure P200-Process-Main
#debug9 Show 'P200-Process-Main'

  Let $Data-Found-Flag = 'N'


begin-SELECT

BPP.BENEFIT_PROGRAM         &benefit_program
   move &benefit_program to $benefit_program

JB.EMPLID                   &emplid
   move &emplid          to $emplid

JB.EMPL_RCD                &empl_rcd
   move &empl_rcd        to #empl_rcd

BPP.COBRA_EVENT_ID          &cobra_event_id
   move &cobra_event_id  to #cobra_event_id

JB.COMPANY                  &company
   move &company         to $company

JB.PAYGROUP                 &paygroup
   move &paygroup        to $paygroup
JB.DEPTID
   move &JB.DEPTID TO $deptid
JB.ACTION_DT
   move &JB.ACTION_DT to $action_dt
P.NAME
   move &P.NAME to $name
  display $benefit_program noline
  display ' ' noline
  display $emplid noline
  display ' ' noline
  display #empl_rcd noline
  display $company noline
  display ' ' noline
  display $paygroup


  Do Get-Health-Benefit

  if $prev_FT_enroll_Exists = 'Y'
     Let $Data-Found-Flag = 'Y'
     do print-record
  end-if


FROM   PS_BEN_PROG_PARTIC BPP,
       PS_JOB JB,
       PS_PERSONAL_DATA P

WHERE  BPP.EMPLID          = JB.EMPLID
AND    BPP.EMPL_RCD       = JB.EMPL_RCD
AND    JB.EMPLID = P.EMPLID
AND    JB.EFFDT = (SELECT MAX(EFFDT)
		   FROM PS_JOB 
		   WHERE EMPLID     = JB.EMPLID
		   AND   EMPL_RCD  = JB.EMPL_RCD
                   AND   EFFDT <= $AsOfToday)

AND    JB.EFFSEQ = (SELECT MAX(EFFSEQ)
		    FROM PS_JOB 
		    WHERE EMPLID     = JB.EMPLID
		    AND   EMPL_RCD  = JB.EMPL_RCD
		    AND   EFFDT      = JB.EFFDT)

AND    BPP.EFFDT = (SELECT MAX(EFFDT)
		    FROM PS_BEN_PROG_PARTIC
		    WHERE EMPLID                     = BPP.EMPLID
		    AND   EMPL_RCD                  = BPP.EMPL_RCD
		    AND   COBRA_EVENT_ID             = BPP.COBRA_EVENT_ID
		    AND   EFFDT <= $AsOfToday)

AND     BPP.BENEFIT_PROGRAM = 'R02'
AND     JB.REG_TEMP         = 'E'
AND    0 <
      (SELECT count(*)
       FROM PS_JOB JB2
       WHERE JB2.EMPLID    = JB.EMPLID
       AND   JB2.EMPL_RCD = JB.EMPL_RCD
       AND   JB2.EFFDT     = (SELECT MAX(EFFDT)
			      FROM PS_JOB
			      WHERE EMPLID     = JB2.EMPLID
			      AND   EMPL_RCD  = JB2.EMPL_RCD
			      AND   REG_TEMP  = 'E'
			      AND   ACTION           = 'DEM'
			      AND   ACTION_REASON    = 'IVD'
			      AND   ACTION_DT BETWEEN $prev_dt and $AsOfToday
			      AND   EFFDT     <= $AsOfToday)
       AND   JB2.EFFDT > (select max(effdt)
			from ps_job
			where emplid = jb2.emplid
			and empl_rcd = jb2.empl_rcd
			and reg_temp = 'R'))
ORDER BY JB.DEPTID, P.NAME

end-SELECT

  If $Data-Found-Flag = 'N'
     Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (25,) Center
  Else
     do Format-Number(#emp_count,$emp_count,'9999')

     Print 'Total Employees Processed: '  (+2,1)
     Print $emp_count                     (0,+2)
  End-If

end-procedure

!*************************************************************************
begin-procedure Get-Health-Benefit
#debug9 Show 'Get-Health-Benefit'

   let $prev_FT_enroll_Exists = 'N'

begin-SELECT

HB.PLAN_TYPE
   move &HB.PLAN_TYPE     to $plan_type

   let $prev_FT_enroll_Exists = 'Y'

FROM   PS_HEALTH_BENEFIT HB

WHERE  HB.EMPLID            = $emplid
AND    HB.EMPL_RCD         = #empl_rcd
AND    HB.COBRA_EVENT_ID    = #cobra_event_id
AND    HB.EFFDT = (SELECT MAX(EFFDT)
		   FROM PS_HEALTH_BENEFIT
		   WHERE EMPLID         = HB.EMPLID
		   AND   EMPL_RCD      = HB.EMPL_RCD
		   AND   COBRA_EVENT_ID = HB.COBRA_EVENT_ID
		   AND   PLAN_TYPE      = '1Y'
		   AND   COVERAGE_ELECT = 'E'
		   AND   BENEFIT_PLAN = 'WRM01A'   !FT benefit plan
		   AND   EFFDT <= $AsOfToday)

end-SELECT

end-procedure

!*********************************************************************
begin-procedure Print-Record
#debug9 Show 'Print-Record'

   if #current-line > 51
      new-page
   end-if

   Let #emp_count = #emp_count + 1

  do select-status-dt

print $emplid             (+1,1)  !edit xxx-xx-xxxx ! GEX_SEC_REENG 2015-06-24 Vahini Katta 
print $name               (0,14)
print $deptid             (0,50)
print $action_dt          (0,60)
print $effdt              (0,75)

print ' '                 (+1,1)

end-procedure

Begin-procedure select-status-dt
let $effdt = ' '
begin-select
JB3.EFFDT
  move &jb3.effdt to $effdt

FROM PS_JOB JB3
WHERE JB3.EMPLID    = $EMPLID
  AND   JB3.EMPL_RCD = #EMPL_RCD
  AND   JB3.EFFDT     = (SELECT MAX(EFFDT)
			      FROM PS_JOB
			      WHERE EMPLID     = JB3.EMPLID
			      AND   EMPL_RCD  = JB3.EMPL_RCD
			      AND   REG_TEMP  = 'E'
			      AND   ACTION           = 'DEM'
			      AND   ACTION_REASON    = 'IVD'
			      AND   ACTION_DT BETWEEN $prev_dt and $AsOfToday
			      AND   EFFDT     <= $AsOfToday)
       AND   JB3.EFFDT > (select max(effdt)
			from ps_job
			where emplid = jb3.emplid
			and empl_rcd = jb3.empl_rcd
			and reg_temp = 'R')
end-select

end-procedure


!*********************************************************************
begin-procedure End-Report
  
!  Do Get-Current-DateTime
!  Print 'SQR End Time '    (+2,1)
!  Print $ReportDate            ()
!  Print $ReportTime        (0,+2)

end-procedure

!**************************************************************
#include 'gexxx951.sqc'  !Get Oracle Database ID 
#include 'askftd.sqc'    !Ask-From-Thru-Date procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date math
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
!**************************************************************
