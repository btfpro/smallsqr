!************************************************************************
!GEXBNMDT:   This SQC returns the pay end dt, check dt for the 
!            last pay period that is confirmed
!************************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  P090    SXK         08/07/1998     INITIAL CREATION                 *
!	   sxk         10/14/1998     Modified SQL                     *
!          JNB         01/18/1999     Chamged co capture $end_yyyymm   *
!                                                                      * 
!          CWB         12/28/2001     Added PAY_OFF_CYCLE_CAL logic.   *   
!                                                                      * 
!***********************************************************************

begin-procedure Edit-Pay-Calendar
  move 'N' to $Found
  do convert-to-dtu-date($asoftoday,$asoftoday_dtu)
  let $asofyyyy = substr($asoftoday_dtu,1,4)
  let $asofmonth = substr($asoftoday_dtu,6,2)
  
begin-select LOOPS=1
Y1.PAY_END_DT 
Y1.pay_begin_dt
Y1.CHECK_DT
Y1.PAY_PERIOD

  move 'Y' to $Found
  move &Y1.PAY_END_DT to $pay_end_dt
  move &Y1.PAY_BEGIN_DT TO $pay_begin_dt
  move &Y1.CHECK_DT to $check_dt
  move &Y1.PAY_PERIOD to #pay_period

FROM PS_PAY_CALENDAR Y1
where Y1.COMPANY = 'GEI'
  and Y1.PAYGROUP = 'RET'
! CWB 12/28/2001 BEGIN
  AND Y1.PAY_OFF_CYCLE_CAL = 'N'     
! CWB 12/28/2001 ENd
  and Y1.PAY_END_DT = (SELECT MAX(PAY_END_DT)
			 FROM PS_PAY_CALENDAR
			WHERE COMPANY = 'GEI'
                          AND PAYGROUP = 'RET'
                          AND PAY_CONFIRM_RUN = 'Y'
! CWB 12/28/2001 BEGIN
                          AND PAY_OFF_CYCLE_CAL = 'N'     
! CWB 12/28/2001 ENd
		          AND PAY_END_DT <= $AsOfToday)
!		          AND PAY_END_DT = '22-MAY-1999')
  AND Y1.PAY_PERIOD = (SELECT MAX(PAY_PERIOD)
             FROM PS_PAY_CALENDAR
            WHERE company = 'GEI'
              and paygroup = 'RET'
! CWB 12/28/2001 BEGIN
              AND PAY_OFF_CYCLE_CAL = 'N'     
! CWB 12/28/2001 ENd
              and to_char(PAY_END_DT,'YYYYMM') = 
                  to_char(Y1.PAY_END_DT,'YYYYMM'))
end-select

  if $Found = 'N'
    display '****Error -- This program needs to be run after the last pay period is confirmed for the month***'
    stop
  else
    do convert-to-dtu-date($check_dt,$check_dt_dtu)
    let $end_month = substr($check_dt_dtu,6,2)
    let $end_yy    = substr($check_dt_dtu,1,4)
! JNB 01/18/1999 added the follwoing line of code
    let $end_yyyymm = $end_yy||$end_month 
    let #end_month = to_number($end_month)
    let #end_yy    = to_number($end_yy)
! JNB 01/18/1999 added the following line of code
    let #end_yyyymm = to_number($end_yyyymm)
    let #prev_mm   = #end_month
    let $checkdt_yy = #end_yy
    let $check_dt_min_dtu = $end_yy||'-'||$end_month||'-'||'01'
    do dtu-add-months($check_dt_min_dtu,1,$check_dt_max_dtu)
    do dtu-add-days($check_dt_max_dtu,-1,$check_dt_max_dtu)
    do convert-from-dtu-date($check_dt_min_dtu,$check_dt_min_dbf)
    do convert-from-dtu-date($check_dt_max_dtu,$check_dt_max_dbf)
    display 'Program will run for ' noline
    display 'month ' noline
    display $end_month noline
    display ' and for ' noline
    display 'year ' noline
    display $end_yy 
    if $AsOfMonth = substr($check_dt_dtu,6,2)
       display 'As of month = Check month'
       do dtu-add-months($check_Dt_dtu,1,$curr_mm_dt)
       let $curr_mm_dt = substr($curr_mm_dt,1,4)||'-'||substr($curr_mm_dt,6,2)||'-'||'01'
        display $curr_mm_Dt
       do convert-from-dtu-date($curr_mm_dt,$curr_mm_dt_dbf)
       let $effdt_dbf = $curr_mm_dt_dbf
     else
     !  let $curr_mm_dt = substr($check_dt_dtu,1,4)||'-'||substr($check_dt_Dtu,6,2)||'-'||'01'
     !  do convert-from-dtu-date($curr_mm_dt,$curr_mm_dt_dbf)
     !  let $effdt_dbf = $curr_mm_dt_dbf
        display 'As of month <> check month'
        let $curr_mm_dt = $AsOfYYYY||'-'||$AsOfMonth||'-'||'01'
        display $curr_mm_Dt
        do convert-from-dtu-date($curr_mm_dt,$curr_mm_dt_dbf)
        let $effdt_dbf = $curr_mm_dt_dbf
     end-if       
     display 'Effdt of JOB insert will be:' noline
     display $effdt_dbf
  end-if
end-procedure


