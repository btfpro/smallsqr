!***********************************************************************
! GEXPY625:  EMPLOYEE EXTRACT                                          *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY625 :            EMPLOYEE EXTRACT FILE                          *
!                                                                      *
! Narrative:            Depending on the run control parameters, this  *
!                       program will produce a file:                   *
!                       1) of all employees                            *
!                       2) of employees who have a birthday            *
!                          falling within the dates supplied           *
!                       3) of employees with orig hire date            *
!                          falling within the dates supplied           *
!                                                                      *
! SQL Tables:           gex_dept_tbl                                   *
!                       personal_data                                  *
!                       job                                            *
!                                                                      *
! Written by:           Tony Labra                                     *
!                                                                      *
! Normally Run:         Monthly                                        *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Multiple Company Division Codes              *
!                         Multiple Company/Paygroups                   *
!                         Multiple Deptids                             *
!                         Multiple Jobcodes                            *
!                         Multiple Employee Statuses                   *
!                         Month                                        *
!                         Birthday/Anniversary Indicator               *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! AXL       02/17/99    Initial Creation                               *
! SXK       11/29/99    Modified from zip to postal                    *
! VENDNYS   08/21/2007  Upgrade 8.3 - 9.0                              *
!                       - References of xlattable changed to psxlatitem*
!                       - References of ORIG_HIRE_DT changes           *
! VENDTKK   01/28/2009  Added INCLUDE GETPOSNM.SQC to pull             *
!                  	     JOBTITLE from POSITION_DATA.DESCR field   *
!			     instead of JOBCODE_TBL.DESCR  	       *	
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)

!***********************************************************************
Begin-Report
!***********************************************************************
 
  Do Initialization
  Do Open-File
  Do Process-Main
  Do Stdapi-Term
  Do EOJ
End-Report

!***********************************************************************
Begin-Procedure Initialization
!***********************************************************************

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $GEXXX901_Company_Alias  = 'j.company'
  Let $GEXXX901_Paygroup_Alias = 'j.paygroup'
  Let $GEXXX902_Deptid_Alias   = 'j.deptid'
  Let $GEXXX903_Emp_Stat_Alias = 'j.empl_status'
  Let $GEXXX907_Div_Cd_Alias   = 'gdt.gex_company_div_cd'
  Let $GEXXX916_Jobcode_Alias  = 'j.jobcode'
  Let $GEXPY625_Emplid_Alias   = 'j.emplid'
 
  If $prcs_process_instance = ''
    Do SQRW-Run-Controls
  Else
    Do Process-Scheduler-Run-Controls
  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  
  Let $Where_Clause_Display_Criteria = $WHERE_CLAUSE_CRITERIA

  Let $fieldname  = 'GEXPY625_RPT_TYPE'
  Let $fieldvalue = $report_type
  Do Xlat-Select
  Let $report_type_xlat = &xlatlongname

  Let $fieldname  = 'MONTHCD'
  Let $fieldvalue = $report_month
  Do  Xlat-Select
  Let $report_month_xlat = &xlatlongname
  Let $month_heading = 'for the month of ' || $report_month_xlat


  Evaluate $Report_Type
   When = 'A'
     Let $ReportID      = 'GEXPY625'
     Let $ReportTitle   = 'EMPLOYEE EXTRACT'
     Let $month_heading     = ' '
     Let $ORDERBY =     'J.DEPTID,PD.NAME'
     break
   When = 'B'
     Let $ReportID      = 'GEXPY625'
     Let $ReportTitle   = 'EMPLOYEE BIRTHDAY EXTRACT'
     Let $ORDERBY =     'SUBSTR(PD.BIRTHDATE,1,2), PD.BIRTHDATE'
     break
   When = 'V'
     Let $ReportID      = 'GEXPY625'
     Let $ReportTitle   = 'EMPLOYEE ANNIVERSARY EXTRACT'
     ! Let $ORDERBY =     'SUBSTR(PD.ORIG_HIRE_DT,1,2),PD.ORIG_HIRE_DT'   ! Upgrade 8.3 code commented
     Let $ORDERBY =     'SUBSTR(OVW.ORIG_HIRE_DT,1,2),OVW.ORIG_HIRE_DT'   ! Upgrade 9.0 code changes
     break
   End-evaluate
   
  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  If $Report_Type <> 'A'
     Show $month_heading
  End-if
  
  Show '$GEXXX901_Include_Company_Paygroup_Display_Criteria  = ' $GEXXX901_Include_Company_Paygroup_Display_Criteria
  Show '$GEXXX902_Include_Deptid_Display_Criteria            = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Criteria                  = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  Show '$GEXXX907_Include_Div_Cd_Display_Criteria            = ' $GEXXX907_Include_Div_Cd_Display_Criteria
  Show '$GEXXX916_Include_Jobcode_Display_Criteria           = ' $GEXXX916_Include_Jobcode_Display_Criteria
  Show '$Where_Clause_Display_Criteria                       = ' $Where_Clause_Display_Criteria
  Show '$Order By                                            = ' $ORDERBY                                 
   
End-Procedure

!***********************************************************************
Begin-Procedure SQRW-Run-Controls
!***********************************************************************

  While 1=1
    Input $Report_Type Maxlen=1 'Extract Type (A for All, B for Birthday, or V for Anniversary)'
    Uppercase $Report_type
    If Rtrim($Report_Type,' ') = 'A' Or
       Rtrim($Report_Type,' ') = 'B' Or
       Rtrim($Report_Type,' ') = 'V'
      Break
    End-If
  End-While

  Evaluate $Report_type
    When = 'A'
     Let $WHERE_CLAUSE_CRITERIA =  $GEXPY625_Emplid_Alias  || ' IS NOT NULL'
     break
    When ='B'
      Do Ask-Month
      Let $WHERE_CLAUSE_CRITERIA =  'TO_NUMBER(TO_CHAR(PD.BIRTHDATE, ' ||
                                    ''''    ||
                                    'MM'    ||
                                    ''''    ||
                                    ')) ='  ||
                                    $report_month
      break
    When ='V'
      Do Ask-Month
      ! Let $WHERE_CLAUSE_CRITERIA =  'TO_NUMBER(TO_CHAR(PD.ORIG_HIRE_DT, ' ||    !Upgrade 8.3 code commented
        Let $WHERE_CLAUSE_CRITERIA =  'TO_NUMBER(TO_CHAR(OVW.ORIG_HIRE_DT, ' ||   !Upgrade 9.0 code changes
				    ''''    ||
				    'MM'    ||
			            ''''    ||
			            ')) ='  ||
                                    $report_month
      break
   End-Evaluate

  !**** Handle Company/Paygroup 
  Display 'Enter Company/Paygroup or leave blank to exit.'
  While 1=1
    Input $In-Company Maxlen=3 'Company'
    Uppercase $In-Company
    If Rtrim($In-Company, ' ') = ''
      Break
    Else
      Input $In-Paygroup Maxlen=3 'Paygroup'
      Uppercase $In-Paygroup
      If Rtrim($In-Paygroup, ' ') = ''
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''')'
      Else
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''' And ' || $GEXXX901_Paygroup_Alias || ' = '''  || $In-Paygroup || ''')'
      End-If
      Add 1 To #GEX_RC_PAYGROUP_ROWS
      If #GEX_RC_PAYGROUP_ROWS = 1
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While

  If #GEX_RC_PAYGROUP_ROWS = 0
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ')'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
  End-If  

  !**** Handle Dept 
  Let $DeptIDString = ''''
  Display 'Enter DeptID or leave blank to exit.'
  While 1=1
    Input $In-DeptID Maxlen=10 'DeptID'
    Uppercase $In-DeptID
    If Rtrim($In-DeptID, ' ') = ''
      Concat '''' With $DeptIDString
      Break
    End-If
    If $DeptIDString <> ''''
      Concat ''',''' With $DeptIDString
    End-If
    Concat $In-DeptID With $DeptIDString
  End-While

  If $DeptIDString = ''''''
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' In (' || $DeptIDString || ')'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_INCLUDE_DEPTID_CRITERIA
  End-If

  !**** Handle Emp Status
  Let $EmplStatusString = ''''
  Display 'Enter Employee Status or leave blank to exit.'
  While 1=1
    Input $In-EmplStatus Maxlen=1 'Employee Status'
    Uppercase $In-EmplStatus
    If Rtrim($In-EmplStatus, ' ') = ''
      Concat '''' With $EmplStatusString
      Break
    End-If
    If $EmplStatusString <> ''''
      Concat ''',''' With $EmplStatusString
    End-If
    Concat $In-EmplStatus With $EmplStatusString
  End-While

  If $EmplStatusString = ''''''
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = '1=1'
    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = $GEXXX903_Emp_Stat_Alias || ' In (' || $EmplStatusString || ')'
    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
  End-If

  !**** Handle Div CD
  Let $DivCdString = ''''
  Display 'Enter Company Division Code or leave blank to exit.'
  While 1=1
    Input $In-DivCd Maxlen=3 'Company Division Code'
    Uppercase $In-DivCd
    If Rtrim($In-DivCd, ' ') = ''
      Concat '''' With $DivCdString
      Break
    End-If
    If $DivCdString <> ''''
      Concat ''',''' With $DivCdString
    End-If
    Concat $In-DivCd With $DivCdString
  End-While

  If $DivCdString = ''''''
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = '1=1'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = $GEXXX907_Div_CD_Alias || ' In (' || $DivCdString || ')'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  End-If


  !**** Handle jobcodes
  Let $JobcodeString = ''''
  Display 'Enter Jobcode or leave blank to exit.'
  While 1=1
    Input $In-Jobcode Maxlen=6 'Jobcode'
    Uppercase $In-Jobcode
    If Rtrim($In-Jobcode, ' ') = ''
      Concat '''' With $JobcodeString
      Break
    End-If
    If $JobcodeString <> ''''
      Concat ''',''' With $JobcodeString
    End-If
    Concat $In-Jobcode With $JobcodeString
  End-While

  If $JobcodeString = ''''''
    Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '1=1'
    Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = $GEXXX916_Jobcode_Alias || ' In (' || $JobcodeString || ')'
    Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = $GEXXX916_INCLUDE_JOBCODE_CRITERIA
  End-If

End-Procedure

!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls
!***********************************************************************
  Do GEXXX922-Select-Parameters
  Do GEXXX901-Select-Company-Paygroup-Parameters
  Do GEXXX902-Select-Deptid-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters
  Do GEXXX907-Select-DIV-CD-Parameters
  Do GEXXX916-Select-Jobcode-Parameters
  
  Let $report_type  = $GEX_RC_PAY.GEXPY625_RPT_TYPE
  Let $report_month = $GEX_RC_PAY.MONTHCD

 
  Do Convert-to-dtu-date($Asoftoday,$today_dtu) 
  let $date_yy = substr($today_dtu,1,4)
  let $date_mm = substr($today_dtu,6,2)
  let $date_dtu = $date_yy||'-'||$date_mm||'-01'
  Do dtu-add-months($today_dtu,1,$next_month)
 
  If $Report_Type <> 'A'
     If isblank($Report_Month) = 1
       Let $report_month=substr($next_month,6,2)
     End-If
  End-if

  Evaluate $Report_type
    When = 'A'
     Let $WHERE_CLAUSE_CRITERIA =  $GEXPY625_Emplid_Alias  || ' IS NOT NULL'
     break
    When ='B'
     Let $WHERE_CLAUSE_CRITERIA =  'TO_NUMBER(TO_CHAR(PD.BIRTHDATE, ' ||
                                    ''''    ||
                                    'MM'    ||
                                    ''''    ||
                                    ')) ='  ||
                                    $report_month
      break
    When ='V'
     ! Let $WHERE_CLAUSE_CRITERIA =  'TO_NUMBER(TO_CHAR(PD.ORIG_HIRE_DT, ' ||   !Upgrade 8.3 code commented
       Let $WHERE_CLAUSE_CRITERIA =  'TO_NUMBER(TO_CHAR(OVW.ORIG_HIRE_DT, ' ||   !Upgrade 9.0 code changes
				    ''''    ||
				    'MM'    ||
			            ''''    ||
			            ')) ='  ||
                                    $report_month
      break
  End-Evaluate

End-Procedure

!***********************************************************************
begin-procedure Open-File
!***********************************************************************

  let $file1 = '{OUTFILE}' || lower($ReportID) || '.dat'

  open $file1 as 1 for-writing
        record=300:fixed
        status=#filestat
  if #filestat < 0
     display 'Open failed for file <' noline
     display $file1 noline
     display '>'
     stop
  end-if
end-procedure

!***********************************************************************
Begin-Procedure Process-Main
!***********************************************************************
  
Begin-Select
J.COMPANY
J.PAYGROUP
J.EMPLID
J.DEPTID
  let $Deptid = &J.Deptid
  Do Get-Department-Name
J.JOBCODE
  Let $Jobcode  = &J.Jobcode
  Do Get-Job-Title
 
!VENDTKK Begin   ITG#56786   28-Jan-2009
J.Position_nbr 
  Let $Position_Nbr = &J.Position_nbr
  Do Get-Position-Title			 !getposnm.sqc
  	 IF $PosName = '' 
  		Let $jobtitle = $jobtitle
	 Else
 		Let $jobtitle = $PosName
	 End-if
!VENDTKK End   ITG#56786   28-Jan-2009

!PD.ORIG_HIRE_DT   ! Upgrade 8.3 Code commented
OVW.ORIG_HIRE_DT   ! Upgrade 9.0 Code changes
PD.BIRTHDATE
PD.NAME
 Move &PD.name to $Name
  do Rotate-Name
PD.ADDRESS1
PD.ADDRESS2
PD.ADDRESS3
PD.ADDRESS4
PD.CITY
PD.STATE
!SXK 11/29/99 Changed from zip to postal
PD.POSTAL

  Add 1 to #record_count

  Let $Company  = &J.COMPANY
  Let $Paygroup = &J.PAYGROUP
  Let $Deptid   = &J.DEPTID

  Do Write-Record
  
FROM   PS_PERSONAL_DATA  PD,
       PS_JOB            J,
       PS_GEX_DEPT_TBL   GDT,
       PS_ORIG_HIRE_VW   OVW    ! Upgrade 9.0 code changes
WHERE  PD.EMPLID              = J.EMPLID AND
       J.EFFDT                =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID          = J.EMPLID
       AND    EMPL_RCD       = J.EMPL_RCD
       AND    EFFDT          <= SYSDATE) AND
       J.EFFSEQ               =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID          = J.EMPLID
       AND    EMPL_RCD       = J.EMPL_RCD
       AND    EFFDT           = J.EFFDT)
And    gdt.deptid             = j.deptid
And    gdt.effdt              =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid          = gdt.deptid
       And    effdt          <= sysdate)
And    gdt.sequence_number    =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid          = gdt.deptid
       And    effdt           = gdt.effdt)
And   PD.EMPLID = OVW.EMPLID    !Upgrade 9.0 code changes
And   OVW.PER_ORG = 'EMP'       !Upgrade 9.0 code changes
AND   [$Where_Clause_Criteria]
AND   [$GEXXX901_Include_Company_Paygroup_Criteria]
AND   [$GEXXX902_Include_Deptid_Criteria]
AND   [$GEXXX903_Include_Emp_Stat_Criteria]
AND   [$GEXXX907_Include_Div_Cd_Criteria]
AND   [$GEXXX916_Include_Jobcode_Criteria]
ORDER BY [$ORDERBY]

End-Select

End-Procedure

!***********************************************************************
Begin-Procedure Write-Record
!***********************************************************************
  
  let $Year4 = '1'
  ! do Format-DateTime(&PD.ORIG_HIRE_DT, $ORIG_HIRE_DT, {DEFMDY}, '', '')  !Upgrade 8.3 code commented
    do Format-DateTime(&OVW.ORIG_HIRE_DT, $ORIG_HIRE_DT, {DEFMDY}, '', '')  !Upgrade 8.3 code commented

  let $Year4 = '1'
  do Format-DateTime(&PD.BIRTHDATE, $BIRTHDATE, {DEFMDY}, '', '')
  
  write 1 from &J.EMPLID:9
               $FirstName:15
               $MidInitial:2
               $LastName:15
               $Orig_Hire_Dt:10
	       $Birthdate:10
               &J.DEPTID:5
               $DeptName:20
               &J.Jobcode:6
               $JobTitle:35
               &PD.ADDRESS1:35
               &PD.ADDRESS2:35
               &PD.ADDRESS3:35
               &PD.CITY:30
               &PD.STATE:6
               &PD.Postal:10
               
End-Procedure

!***********************************************************************
Begin-Procedure Ask-Month
!***********************************************************************
 
  While 1=1
    Input $Report_Month Maxlen=2 'Report Month (01 thru 12)'
    Let #report_month = $report_month
    Move $report_month To $report_month 09
    If #Report_Month >= 1 And
       #Report_Month <= 12
      Break
    End-If
  End-While

End-Procedure

!***********************************************************************
Begin-Procedure Xlat-Select
!***********************************************************************

Begin-Select
xlatlongname
!  From   xlattable x   !Upgrade 8.3 Code
   From   psxlatitem x   !Upgrade 9.0 code changes
Where  fieldname           = $fieldname
! And    language_cd         = 'ENG'    ! Upgrade 9.0 commented existing code
And    fieldvalue          = $fieldvalue
And    effdt               =
      (Select Max(effdt)
 !      From xlattable   !Upgrade 8.3 code
       From psxlatitem   !Upgrade 9.0 code changes
       Where  fieldname    = x.fieldname
 !      And    language_cd  = x.language_cd    ! Upgrade 9.0 commented existing code
       And    fieldvalue   = x.fieldvalue
       And    effdt       <= SYSDATE)
End-Select

End-Procedure

!***********************************************************************
Begin-Procedure EOJ
!***********************************************************************
 
  if #record_count = 0
    write 1 from 'No Data Selected This Run'
  end-if
 
  close 1
  
  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'

End-Procedure

#include 'gexxx901.sqc'  !Get company paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company division code multiple row table
#include 'gexxx916.sqc'  !Get jobcode multiple row table
#include 'gexxx922.sqc'  !Get GE payroll run controls
#include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'getpgdta.sqc'  !Get-Paygroup-Data procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#include 'rotname3.sqc'  !Routines for name
#include 'getjobtl.sqc'  !Get Job Title
#Include 'getposnm.sqc'  !Get-Position-Title    VENDTKK ITG#56786   28-Jan-2009  