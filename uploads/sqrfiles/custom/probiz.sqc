!  ----------------------------------------------------------------------  !
!  probiz.sqc - header / configuration file for ADP Tax Extract            !
!                                                                          !
!  Author: Dan Monroe                                                      !
!  Date  : Jan 18, 2011                                                    !
!  Property of ADP, Client Integration Services                            !
!                                                                          !
!  This is invoked by both the Periodic and Quarterly SQR's provided by    !
!  ADP.  The purpose of this file is to configure both tax extract         !
!  programs.                                                               !
!                                                                          !
!  Existing clients who receive this file will be required to pull the     !
!  setup information out of their existing extracts, setting up this       !
!  header file with their current configuration.  This will only need      !
!  to occur the initial time.  Updates from ADP will always                !
!  utilize this probiz.sqc setup file.  This will allow ADP to more        !
!  effectively flow compliance changes and program fixes out to the        !
!  client base.                                                            !
!                                                                          !
!  Note,   The definitions ADP_TAX_PERIODIC or ADP_TAX_QUARTERLY in the    !
!              SQRs allow for dependent definitions for periodic and       !
!              quarterly  (pbzper, pbzqtr, adptaxbl, pbzpur, and adpismap  !
!              SQRs all include this SQC for basic definitions             !
!--------------------------------------------------------------------------!
#include 'setenv.sqc'

! #define ADP_TAX_DEV                  ! <---- enable this for our ADP DEV database
#define RIMINI

#ifdef RIMINI
   !#define IGNORE_PSD_CD
   !#define Skip_Rimini_Medicare_Surcharge
   #define STATE_FUTA_TAX_CLASS             4
#endif

! -------------------------------
! Core ADP Extract Parameters...
! -------------------------------
#define CORPORATE_NAME                 Giant Eagle
#define SITE_ID                        GIE1  ! this is the 4 character (UPPERCASE) ADP SiteID unique to this client
#define Peoplesoft_Version             9.0     ! <-- DOUBLE CHECK  (8, 8.8, 8.9, 9.0, and 9.1 are options that are valiid           
#define Client_ID                      {SITE_ID}
#define Client_Setup_Version           {SITE_ID}.Feb 1, 2016
#define OUTPUT_FOLDER                  {OUTFILE}
#define LAST_EXTRACT_UPDATE            20151016      !last date of SQC updates

#define PAYGROUP_ROLLUP                                    !to report at a company level 
#define Client_Table_Prefix            TF_         
#define Client_Table_Suffix
#define Client_Field_Prefix            TF_         
#define Client_Field_Suffix
#define Process_Scheduler_Enabled

!Option to define where extract updates should be sent (leave blank if no email address should be included in X rec
!******************************************************************************************************************
#define CLIENT_EMAIL_ADDRESS_FOR_UPDATES
!#define CLIENT_EMAIL_ADDRESS_FOR_UPDATES  hrpayrollsupport@client.com ! (limited to 47 characters long)

!Options to exclude or include specific companies
!***********************************************
!#define COMPANIES_TO_EXCLUDE         COMPANY IN ('DIS')  !definitions to include / exclude specific companies
!#define COMPANY_TO_PROCESS           250      

!#define SUBTOTAL_FEIN                         ! Totals and extract by FEIN
#ifdef SUBTOTAL_FEIN
  #define SUBTOTAL_COMPANY
  #define USE_TEMP_TABLE_FOR_OUTPUT
#endif

#ifdef ADP_TAX_PERIODIC
  #define USE_TEMP_TABLE_FOR_OUTPUT   !<-- TF_PBZPOUT_D will have the rows after SQR finishes always
  #define PAY_END_DT_IN_PBZPOUT_D     ! add this to avoid dups, standard in 2010-2011 91 project PAY_END_DT in table
#endif


#define CUSTOM_DATABASE_NAME  ! see code example at end of this probiz.sqc)
#define SFTP_NAMING
!#define OUTPUT_FOLDER {FILEPREFIX}

!file/folder naming (change adpcusnm.sqc to customize)
!******************************************************                
#ifdef MVS
  #define Periodic_Extract            PBZPER  !Periodic logical filename, 250 chars long + CR,LF
                                              !open $Filename as 1 for-writing record=250:vary status=#filestat  !ADP
  #define Quarterly_Extract_Filename  PBZQTR  !Quarterly logical filename, 700 chars long + CR,LF
#else
 #ifdef SFTP_NAMING
  !Test file naming conventions
  !----------------------------
  !c.xxx1.tax.test.yyyymmddhhmmss.prl   !where xxx is the SITE_ID
  !c.xxx1.tax.test.yyyymmddhhmmss.qtrly 
  !
  !Production file name conventions: 
  !---------------------------------
  !p.xxx1.tax.yyyymmddhhmmss.prl
  !p.xxx1.tax.yyyymmddhhmmss.qtrly 

  #define STANDARD_TTS_NAMING                 DB                        !DB or TEST or PROD
!Jyotsna - 10/12/2016 - PTools 8.52 Upgrade - Begin
!  #define PROD_DBNAME                         HRPRD90
   #define PROD_DBNAME                         PSPRD90C
!Jyotsna - 10/12/2016 - PTools 8.52 Upgrade - End
  #define TTS_AUTOMATION                                                !this causes the '.' chars within the filenames... not the '_' chars
  #define DATABASE_NAME_PSDBOWNER_DBNAME
 #else
  !Perioidic_run_date_time.dat & Quarter_year_qtr.dat
  #define STANDARD_EXTRACT_NAME_CONVENTION            
 #endif
#endif

! --------------------
! Periodic Parameters
! --------------------

!Liabiilty date options
!**********************
#define USE_CHECK_DATE_FROM_CALENDAR_ALWAYS    !Off-cycles use check date from pay calendar always
#define LOG_SENT_PAYLINES                      !Enable this to log paylines for off cycle processing
!#define FORCE_OLD_CHECK_DATES_TO_FUTURE       !For off cycles in the past...
!#define DAYS_INTO_FUTURE         1            !force old liabilities to one day from sysdate

#ifdef CUSTOM_PERIODIC_CHECK_DATE_LOGIC_ENABLED
#ifdef ADP_TAX_PERIODIC

begin-procedure custom-check-date-logic   !called from pbzper.sqr:  Process-US-Run-Taxes, sets $Check_Date_real liability date
end-procedure

#endif
#endif

!Generic custom periodic logic (routines provided in probiz.sqc)
!***************************************************************
!#define CUSTOM_PERIODIC_LOGIC_ENABLED
!#define CUSTOM_PERIODIC_CHECK_DATE_LOGIC_ENABLED
#ifdef CUSTOM_PERIODIC_LOGIC_ENABLED
#ifdef ADP_TAX_PERIODIC

begin-procedure custom-company-level-logic-periodic             !adp303.sqc,  called from Write-Company-Header-Rec
end-procedure

begin-procedure custom-associate-level-logic-periodic-D-rec     !adp303p.sqc, called from Out-d-rec (right before 'D' record is output)
end-procedure

#endif
#endif


!Bypassing Taxes  (adpbypas.sqc has all the bypass logic)
!********************************************************
#ifndef MASTER_TAX_HEADER
  !#define IGNORE_QUARTERLY_TAXES         !Bypass SUI, FUI, NJ quarterly SUI taxes... Spcl UI...
  #define IGNORE_TAXES_PRO_DOESNT_FILE    !Always bypass the ones ADP can't process
#endif
!#define BYPASS_DETAILS_ON_REPORT_OFF   !Enable this to BYPASS the details of bypassed taxes on report

#define GENERATE_HISTORY_TABLE                 !Log History of Periodic runs in TF_PBZ_HISTORY Table
#define GENERATE_BYPASSED_TABLE
#define GENERATE_TRANSMIT_TABLE
#ifdef INCLUDE_BUSINESS_UNIT_IN_HISTORY
  #define HISTORY_TABLE                           PS_{Client_Table_Prefix}PBZ_HIST_BU{Client_Table_Suffix} !business unit version
#else
  #define HISTORY_TABLE                           PS_{Client_Table_Prefix}PBZ_HISTORY{Client_Table_Suffix} !normal version
#endif
!TBA Logic in periodic
!*********************
#define GET_BALANCE_ADJUSTMENTS                      						!High level definition to turn on this feature: ie. To include TBA's in Periodic

#define LOG_ADJ_HISTORY_TABLE        PS_{Client_Table_Prefix}ADP_BALADJ{Client_Table_Suffix}	!Name of TBA history table
#define SWEEP_BALANCE_ADJUSTMENTS   								!Sweeping ALL TBA's (not just those for companies in the current cycle
#define USE_CALENDAR_CHECK_DATE_FOR_TBAs							!Uses the Pay Calendar’s check date for liability date (same logic for on-cycle checks)
#define SWEEP_CHECKDATE_QUARTER									!Sweeps TBA’s for the quarter that the check date falls in

!TBA options
!*************
!#define TBA_FORCE_CHECK_DATES_TO_TODAY
!#define SWEEP_CURRENT_QUARTER                !if neither of these enabled... the sweep will be for the Tax reporting year/quarter
!#define TBA_LIVE_YEAR               2009
!#define TBA_LIVE_QTR                1

!Misc Periodic parameters
!***************************
!#define EXCEL_FIXED_PERIODIC_FILENAME
!#define THIRD_PARTY_SICK_PERIODIC EARNDTL.ERNCD in (''SCK'')   !added 5/9/05
!#define SUBTOTAL_TAXCODES_BY_CHECK_DATE

!Auto Push the Periodic via SFTP (adpsftp.sqc)
!***********************************************
!#define AUTO_SFTP_PUSH                 !auto-push Periodic file to ADP via the SFTP Transmissions, from the pbzper.sqr and pbzperau.sqr

!pre-sort the output prior to writing to extract file (pbzqout.sqc)
!******************************************************************
#ifdef ADP_TAX_PERIODIC
  #define PAY_END_DT_IN_PBZPOUT_D     ! add this to avoid dups, standard in 2010-2011 91 project PAY_END_DT in table
#endif

!Custom procedure to execute client specific code after extract file is closed (adpcusnm.sqc)
!**********************************************************************************************
!#define ADPCUSNM_PERIODIC_CLOSE        !add this, and code up custom-periodic-close for any custom periodic close procedure


! --------------------
! Quarterly parameters
! --------------------

!IA/MA/MN/MI Location code: choose one of the three, if none, 400-404 of the W recs will be blank
!************************************************************************************************
!#define USE_DEPTID_FOR_MN_MI_LOCATION                     !           PS_JOB.DEPTID
!#define USE_LOCATION_FOR_MN_MI_LOCATION                   !           PS_JOB.LOCATION
!#define USE_TAX_LOCATION_CD_FOR_MN_MI_LOCATION            !           PS_JOB.TAX_LOCATION_CD
!#define USE_PAYGROUP_FOR_MN_MI_LOCATION                   !           PS_JOB.PAYGROUP
#define USE_UI_RPT_CD_FOR_MN_MI_LOCATION                   !default:   PS_CO_UI_RPTCD_TBL.UI_RPT_CODE

!3PSP Definitions
!******************    
!#define THIRD_PARTY_SICK_PERIODIC EARNDTL.ERNCD in (''STX'')   !Periodic    
!#define THIRD_PARTY_SICK_DED      EARNDTL.ERNCD in (''STX'')   !quarterly   

!Test Emplid on Run control record
!************************************
#define TEST_EMPLID_IN_RUN_CONTROL     ! Needs EMPLID in Run control table and Page (labeled "Test Emplid)

!option to split locals into RES and NON-RES based on Pay check details  (adprecip.sqc)
!**************************************************************************************
!#define LOCAL_RECIPROCITY
!#define SPLIT_LOCALS_WITH_DIFFERENT_RATES

!Alaska Occupational code
!*************************
!1. 
   #define USE_US_SOC_CD_for_AK_OCCUP_CODE      !PS_JOBCODE_TBL.US_SOC_CD
!2.
   !#define USE_OTH_LOCALITY_FOR_AK_OCCUP_CODE    !PS_LOCAL_TAX_TBL.OTH_LOCALITY_NAME
!3.
   !default is PS_JOBCODE_TBL.JOBCODE (if neither options 1 or 2 are defined)


!Alaska AREA code
!*****************
!1.
    !#define USE_GEO_CODE_FOR_AK_AREA_CODE         !PS_TAX_LOCATION1.GEO_CODE
!2.
    !default is PS_TAX_LOCATION1.AK_AREA_CD if #1 is not defined


!Wyoming workers comp code 3 options
!***************************************
!1.
    !#define USE_OTH_LOCALITY_FOR_WY_CLASS_CODE      !PS_LOCAL_TAX_TBL.OTH_LOCALITY_NAME
!2.
    #define USE_US_SOC_CD                           !PS_JOBCODE_TBL.US_SOC_CD
!3.
    !default is PS_JOBCODE_TBL.WORKERS_COMP_CD (if neither options 1 or 2 are defined)
!#define WY_WORKERS_COMP_RATE_OVERRIDE   .0216   - WY Comp rate override X 10000 = 0000000216  (.0216%)
!#define WY_WORKERS_COMP_CODE_OVERRIDE    448210 - WY Comp code override


!Hours worked Default (estimating hours from weeks worked via getweeks.sqc)
!**************************************************************************
#define USE_TEMP_TABLE_FOR_MONTHLY_COUNTS  
#define STD_WEEKS_CALC 
#define ADP_STANDARD_HOURS_WEEKS_CALC       2009  !for 2009 and beyond

!Hours options
!*************
!1. ACCUMULATOR for Hours Paid
!#define HOURS_ACCUMULATOR  
!#define HOURS_WORKED_SELECTION  F.ERNCD in (''ADP'')  ! where ADP is the ERNCD accumulator for hours
!2. EARNINGS PROGRAM for Paid Hours
!#define EARNINGS_PROGRAM
!#define EARNINGS_PROGRAM_CODE  ADP                    ! where ADP is the EARNINGS PROGRAM with the hours erncd's
!3. LIST of EARNINGS CODES with hours paid
!#define HOURS_WORKED_SELECTION      F.ERNCD in (''REG'',''OVT'',''OV2'')  ! List of specific earnings codes
!4. AG Conversion Clients
!#define HOURS_AG                                      ! Uses adpgetag.sqc, and the AG run control table for Hours

!Hours options from tables for these states (MA, MN...) from Run control tables RC_TAX810MA, RC_TAX810MN,...
!************************************************************************************************************
!#define MA_HOURS_from_RC_TAX810MA
!#define MN_HOURS_from_RC_TAX810MN
!#define MO_HOURS_from_RC_TAX810MO
!#define NV_HOURS_from_RC_TAX810NV
!#define NY_HOURS_from_RC_TAX810NY
!#define OR_HOURS_from_RC_TAX810OR
!#define RI_HOURS_from_RC_TAX810RI
!#define WA_HOURS_from_RC_TAX810WA
!#define VT_HOURS_from_RC_TAX810VT   !this has optoinal definition to specificy specific codes:
                                     !  eg. #define VT_HOURS_from_RC_TAX810VT VTF.ERNCD in (''ORE'') 

!Weeks option (adpweeks.sqc)
!***************************
#define GET_WEEKS_ADP  


!FLI (NJ) Status
!****************
#define 08F_PNA_FLI_STATUS  !enable this if the PNA_FLI_STATUS is in the PS_STATE_TAX_DATA table (08-F Tax update) 
#ifdef 08F_PNA_FLI_STATUS  
  #define PNA_FLI_STATUS_CRITERIA                ($PNA_FLI_STATUS = 'Y')
#else !Tax classes to use to set the subject to FLI flag  (default to just 'I' - FLI-EE)
  #define FLI_STATUS_SUBJECT_TAX_CLASS_CRITERIA    ($class_trimmed = 'I')
#endif


!Misc Quarterly Definitions
!****************************
!#define Severence_pay_selection   EARNDTL.ERNCD in (''SEV'',''SV7'',''SV8'',''SV9'')  !SEV, SV7, SV8, SV9
!#define STOCK_OPTION_SELECTION    EARNDTL.ERNCD in (''SCK'')
!#define THIRD_PARTY_NON_TAXABLE   EARNDTL.ERNCD in (''SCK'')
!#define SEVERENCE_PAY_SELECTION   EARNDTL.ERNCD in (''TSP'',''TLS'')
!#define USE_US_SOC_CD                                   !Wy workers comp code switch 9/23/04
!#define EXCEL_FIXED_QUARTERLY_FILENAME
!#define ADD_GL_CODE                     !addes a G/L column to the Excel optional data files if either
                                         !#define EXCEL_FIXED_PERIODIC_FILENAME or #define EXCEL_FIXED_QUARTERLY_FILENAME are enabled
                                         !needs adptaxgl.sqc
!#define UPDATE_STATISTICS               !speeds up pbzqtr.sqr if we're using the pre-sort Temp tables
!#define NOLOCK_SQL {NOLOCK}             !speeds up (ODBC) pbzqtr.sqr queries on SQL server / ODBC (only testing so far)
!#define ZIP_EXTENSION_SUPPRESION        !always suppress last 4 chars of zipcode, replacing with '    '
!#define NLGRS_FROM_CHECK_YTD_AMOUNT     !Withholding NLGRS will be calced from CHECK_YTD table
!#define AG_MIGRATION                    !Along with previous definition, NLGRS will be calculated like AG (from Earnings Balances)
!#define HLTH_COV_IND_DEFAULT_COVERED    !causes extract to flag the 'N' Hlth_cov_ind values with a Covered (3)

!VT Health Coverage options defaults to:
!****************************************
#define VT_HEALTH_INSURANCE_INDICATOR     !set VT coverage flag to covered or not 
#define VT_HEALTH_INSURANCE_07C

!Report PA localities in custom manner by Work location (adppaloc.sqc)
!*********************************************************************
!#define PA_WORKSITE_EXTRACT             !converts PA for Penn locals to a 2 character worksite, needs adppaloc.sqc and probiz.sqc config

!PA Worksite reporting enable this if we have the Q1, 2011 Table driven setup (all but ATE1 and PFZ1)
!****************************************************************************************************
#define PA_WORKSITE_TABLE  {Client_Table_Prefix}ADP_PA_WSITE{Client_Table_Suffix}  


!W-2 Summary options (adp303b.sqc)                                         
!***********************************
!#define LIMITED_BOX_SUMMARY_W2          !limited box summary (see adp303q.sqc)
!#define FULL_BOX_SUMMARY_W2             !full (ITE1) Box summary (see adp303q.sqc)
!#define BOX_01_03_05_SUMMARY


!Custom procedure to execute client specific code after extract file is closed (adpcusnm.sqc)
!**********************************************************************************************
!  #define ADPCUSNM_QUARTERLY_CLOSE       !add this, and code up custom-quarterly-close for any custom quarterly close procedure
 
 
!Handling of Locals with no reason to report the data (adpbploc.sqc)
!********************************************************************
!  Purpose:      To bypass Locals which have either no rows in PS_LOCAL_TAX_TBL, or zero rates
!                To make this work in quarterly add: BYPASS_QUARTERLY_TAXES, BYPASS_ZERO_LOCALS_QUARTERLY
!                To make this work in periodic add : BYPASS_ZERO_LOCALS_PERIODIC
!                to make this work in both programs (CZB1)
! #define BYPASS_QUARTERLY_TAXES
! #define BYPASS_ZERO_LOCALS_QUARTERLY
! #define BYPASS_ZERO_LOCALS_PERIODIC
   
!Multiple Worksite Reporting (adpmwr.sqc)
!*****************************************
!  #define WORKSITE_REPORTING
!  #define CLIENT_CONTACT_NAME     FirstName LastName
!  #define CLIENT_CONTACT_PHONE    1234567890
!  #define TRADENAME               {CORPORATE_NAME}
!  #define USE_LOCATION_CD                               !uses LOCATION instead of TAX_LOCATION_CD for worksites
!  #define USE_ESTABID                                   !uses ESTABID instead of TAX_LOCATION_CD for worksites
!  #define USE_DEPTID_FOR_WORKSITE                       !uses USE_DEPTID_FOR_WORKSITE instead of TAX_LOCATION_CD for worksites
!  #define AUTO_WORKSITE_FILENAME                        !auto-generation of MWR csv filename  ("extractfilename".mwr)
!  #define Worksite_Setup_Filename adp_mwr_setup.dat     !Expicit filename for MWR csv file


! Multi-SITE_ID  added Oct, 2009
!*******************************************
!#define MULTIPLE_SITES                                                                    !TF_WGPS_SITE added to TF_PBZ_QTR, and pre-populated
!#define MULTI_SITE_ID_TABLE    {Client_Table_Prefix}ALT_SITES_CO{Client_Table_Suffix}     !TF_ALT_SITES_CO  (TF_WGPS_SITE, COMPANY)



#ifdef ADP_TAX_QUARTERLY
 #define ADP_COMPID_EXTRACT_STRIPPED_REPORT  !strip out extract stuff from both periodic and quarterly interface reports
#endif

#ifdef ADP_COMPID_EXTRACT_STRIPPED_REPORT
  #define SKIP_TAX_AND_WAGE_AUDITS
  #define SKIP_ZERO_LOCALS
  #define SKIP_RESIDENT_AUDIT
#endif


!#define SECURE_DATA_MASKING    ! this masks the SSN to xxxxx-1234, Lastname to 'Testing', and Address1 to 'Disney Dr'
!#define SKIP_FILTER            ! option to bypass the adpfilt.sqc name/address warning/fix logic

!Nevada ER healthcare contrib options
!************************************
!#define BYPASS_QUARTERLY_NEVADA_ER_HEALTHCARE_CONTRIB
!#define ER_HEALTHCARE_CONTRIBUTIONS_CRITERIA  NV3.PLAN_TYPE in (''10'',''11'',''14'')
!#define ER_HEALTHCARE_DED_CLASS_CRITERIA      NVCC.DED_CLASS in (''N'')
!#define ER_HEALTHCARE_BUSINESS_CLASS          G                                        !F (Financial) or G (General/Default

!New Mexico W/C Assessment fee flag
!**********************************
!#define OVERRIDE_NM_WC_FLAG_TABLE_NM0001     !set to 'Y' if the associate has locality NM0001
!#define OVERRIDE_NM_WC_FLAG_TABLE            !allow the override table (emplid level) override default logic
!#define NM_Workers_comp_coverage_override Y  !set to 'Y' or 'N' for all NM associates

!#define OHIO_COURTESY_WITHHOLDING
#ifdef OHIO_COURTESY_WITHHOLDING
#include 'adpohio.sqc'
#endif
!**********************************************************************************************************
!Generic Custom logic routines - Routines in probiz.sqc to handle last minute logic for D, E, and W records 
!**********************************************************************************************************
!#define CUSTOM_QUARTERLY_LOGIC_ENABLED
#ifdef CUSTOM_QUARTERLY_LOGIC_ENABLED
#ifdef ADP_TAX_QUARTERLY

begin-procedure custom-company-level-logic-quarterly               !adp303.sqc,  called from Write-Company-Header-Rec
end-procedure

begin-procedure custom-associate-level-logic-quarterly-E-rec       !adp303q.sqc, called from Write-employee-rec (right before 'E' record is output)
end-procedure

begin-procedure custom-associate-level-logic-quarterly-W-rec       !adp303q.sqc, called from Out-w-rec (right before 'W' record is output)

    #ifdef OHIO_COURTESY_WITHHOLDING
     do Ohio-Courtesy-withholding  !in adpohio.sqc
    #endif
    
end-procedure

#endif
#endif



#ifdef CUSTOM_NY_WAGES_YEAR_END
begin-procedure custom-set-ny-wages   !called from pbzqtr.sqr if we don't have any W-2C's for this person

  !  set #TaxBalance_Txgrs_Ytd to #amount (from W-2 table) 
  !  or leave it alone                    (from YTD Taxable NY-SIT via tax balance table)

  if #RptYear >= 2009
    let #TaxBalance_Txgrs_Ytd = #amount  !(prior to 2009, the NY-SIT wages were from balances for BAE)
  end-if

  if $SelectEmplid <> ''
    show 'custom-set-ny-wages: #TaxBalance_Txgrs_Ytd = ' #TaxBalance_Txgrs_Ytd
  end-if

end-procedure
#endif

!year-end 2010 - just in case we need custom Box recs for NJ74 and/or US74 (in adp303b.sqc)
!-----------------------------------------------------------------------------------------
#ifdef custom_BUS74_private_sdi_acct
begin-procedure  custom_BUS74_private_sdi_acct_procedure !probiz.sqc...... set $private_sdi_acct
end-procedure
#endif
  
  
#ifdef custom_BNJ74_FLI_Plan_Text
begin-procedure custom_BNJ74_FLI_Plan_Text_procedure !probiz.sqc...... set $FLI_Plan_Text
end-procedure
#endif


!4/8/2011 needs to be enabled for clients with TF_TAXCODE in the history table
#define TAXCODE_IN_HISTORY_TABLE

!standard configuration in probiz.sqc required for this:
!#define WA_WORKERS_COMP_ENABLE                                    !enables the WA L&I logic starting Q3, 2011
!#define CALC_WA_LI_HOURS                                          !enables the WA L&I hours calc (QTD Taxes / Rate)
!#define WC_RATE_FACTOR 10000                                      !multiplier to format the rate

!additional optional configuration in probiz.sqc for this:            
!    #define WA_WORKERS_COMP_LOCALITY_OVERRIDE        LI001            !if WA0001 is NOT the EE L&I Locality
!    #define WA_WORKERS_COMP_LOCALITY_OVERRIDE_ER     LI001ER          !if there is a ER L&I Locality add this to specify the Locality


!#define WORKERS_COMP_ENABLE_TABLE   ! requires table PS_TF_ADP_WC_TBL STATE (key), LOCALITY (key),  RESIDENT_TAX_RT, WORKERS_COMP_CD, EFFDT
                                     ! code in new pbzqtr.sqr

#define START_PA_WORK_EXTRACT_YYYYQ     20121 

#ifdef CUSTOM_DATABASE_NAME
begin-procedure get-dbname-Custom  !in adpcusnm.sqc or probiz.sqc, returns the $database_name

Begin-select
ADPDB.name
    let $database_name = &ADPDB.name
from v$database ADPDB

#ifdef SET_DB2_SQL
 WITH UR
#endif
end-select

  show 'get-dbname-Custom: ' $database_name

end-procedure
#endif

#ifdef ADP_TAX_QUARTERLY
#define CUSTOM_CORP_OFFICER
#ifdef CUSTOM_CORP_OFFICER
begin-procedure  custom-corp-officer   !set the $Corp_Officer to Y/N, based on the PS_JOB.OFFICER_CD ($officer_cd) translate value

end-procedure    
#endif
#endif

#ifdef CUSTOM_PERIODIC_CHECK_DATE_LOGIC_ENABLED
begin-procedure custom-check-date-logic          ! invoked by all periodic SQR's to allow clients to define custom logic to set $Check_Date_Real as liability date
end-procedure
#endif


#define CUSTOM_EMPLOYMENT_TYPE PEN

#ifdef ADP_TAX_QUARTERLY
 #ifdef CUSTOM_EMPLOYMENT_TYPE
  #define USE_TEMP_TABLE_FOR_OUTPUT   
 #endif
#endif

#ifdef CUSTOM_EMPLOYMENT_TYPE
#ifdef ADP_TAX_PERIODIC
begin-procedure Get-Custom-Employment_type
 
   let $Paygroup_LLC_Field = ''
 
 ! show 'Get-Custom-Employment_type, Emplid: ' $payline_emplid ' ' $Payline_Company ' ' $Payline_Paygroup ' ' $Payline_Pay_end_dt ' ' $Payline_off_cycle ' ' #Payline_pagen edit 99999 ' ' #Payline_linen edit 99999
 
Begin-SELECT on-error=SQL-Error
/*+ RULE */
GBR.COMPANY,

    Let  $Com-Company           =  &GBR.COMPANY
    let $Paygroup_LLC_Field = '{CUSTOM_EMPLOYMENT_TYPE}'          

    show '  Get-Custom-Employment_type retrieved: ' $payline_emplid ' is a retiree, moved to {CUSTOM_EMPLOYMENT_TYPE} in company ' $Com-Company

 FROM     PS_PAY_TAX              GBR,
          PS_PAY_EARNINGS         GCR
 WHERE    GBR.COMPANY            =  $Payline_Company                               and
          GBR.PAYGROUP           =  $Payline_Paygroup                              and
          GBR.PAY_END_DT         =  $Payline_Pay_end_dt                            and
          GBR.OFF_CYCLE          =  $Payline_off_cycle                             and
          GBR.PAGE_NUM           =  #Payline_pagen                                 and
          GBR.LINE_NUM           =  #Payline_linen                                 and

          GCR.ADDL_NBR           = (SELECT  MAX(C11.ADDL_NBR)
                                  FROM    PS_PAY_EARNINGS       C11
                                  WHERE   C11.COMPANY    =       GCR.COMPANY       and
                                          C11.PAYGROUP   =       GCR.PAYGROUP      and
                                          C11.PAY_END_DT =       GCR.PAY_END_DT    and
                                          C11.OFF_CYCLE  =       GCR.OFF_CYCLE     and
                                          C11.PAGE_NUM   =       GCR.PAGE_NUM      and
                                          C11.LINE_NUM   =       GCR.LINE_NUM)     and
          GBR.COMPANY            =  GCR.COMPANY                                     and
          GBR.PAYGROUP           =  GCR.PAYGROUP                                    and
          GBR.PAY_END_DT         =  GCR.PAY_END_DT                                  and
          GBR.OFF_CYCLE          =  GCR.OFF_CYCLE                                   and
          GBR.PAGE_NUM           =  GCR.PAGE_NUM                                    and
          GBR.LINE_NUM           =  GCR.LINE_NUM                                    and
          GCR.DEPTID             =  'C909'					  and
          GBR.COMPANY       Not In  ('BNX', 'FMS')                                 and
          NOT EXISTS (SELECT 'X' FROM PS_PAY_TAX GT
          	       WHERE GT.COMPANY    = GBR.COMPANY
          	         AND GT.PAY_END_DT = GBR.PAY_END_DT
          	         AND GT.PAYGROUP   = GBR.PAYGROUP
          	         AND GT.OFF_CYCLE  = GBR.OFF_CYCLE
          	         AND GT.PAGE_NUM   = GBR.PAGE_NUM
          	         AND GT.LINE_NUM   = GBR.LINE_NUM
          	         AND GT.SEPCHK     = GBR.SEPCHK
          	         AND GT.WORK_PSD_CD = GBR.WORK_PSD_CD
          	         AND GT.STATE       = 'PA'
          	         AND GT.TAX_CLASS   = 'H'
          	         AND GT.LOCALITY BETWEEN '000000' AND '999999')

End-SELECT
 
end-procedure
#endif

#ifdef ADP_TAX_QUARTERLY
begin-procedure Get-Custom-Employment_type   !8/17/16 added for quarterly, called from pbzqtr.sqr in new_master_release
 
 let $Pension_remap = ''
 
   if $SelectEmplid <> ''
     show 'Get-Custom-Employment_type, Emplid: ' $Current_Emplid ' Company_in_extract: ' $Company_in_extract ' Deptid: ' $JOB_Deptid 
   end-if
   
   if $JOB_Deptid = 'C909' and ($Company_in_extract <> 'BNX' and $Company_in_extract <> 'FMS')
    let $Extract_compid = $Company_in_extract || ' ' || rtrim('{CUSTOM_EMPLOYMENT_TYPE}',' ')
    show '  Get-Custom-Employment_type retrieved: ' $Current_emplid ' is a retiree, moved to {CUSTOM_EMPLOYMENT_TYPE} in Extract_compid ' $Extract_compid ', dept ' $JOB_Deptid
    let $Pension_remap = 't'
   end-if
   
   
end-procedure

begin-procedure Get-Custom-Employment-set-pension-flag   !8/17/16 added for quarterly, called from pbzqtr.sqr in new_master_release
   let $Pension_remap = ''
   if $JOB_Deptid = 'C909' and ($Current_COMPANY <> 'BNX' and $Current_COMPANY <> 'FMS')
    if $SelectEmplid <> ''
      show 'Get-Custom-Employment-set-pension-flag is a retiree.  Emplid: ' $Current_Emplid ' Current_COMPANY: ' $Current_COMPANY ' Deptid: ' $JOB_Deptid 
    end-if
    let $Pension_remap = 't'
   end-if
end-procedure
#endif
#endif
 

#define Skip_Rimini_Medicare_Surcharge

#define CUSTOM_PA_EIT_GIE1   !to handle the two custom GIE requirements for PA EIT's 3/1/2017

#define CUSTOM_QUARTERLY_LOGIC_ENABLED
#ifdef CUSTOM_QUARTERLY_LOGIC_ENABLED
#ifdef ADP_TAX_QUARTERLY

begin-procedure custom-company-level-logic-quarterly               !adp303.sqc,  called from Write-Company-Header-Rec
end-procedure

begin-procedure custom-associate-level-logic-quarterly-E-rec       !adp303q.sqc, called from Write-employee-rec (right before 'E' record is output)
end-procedure

begin-procedure custom-associate-level-logic-quarterly-W-rec       !adp303q.sqc, called from Out-w-rec (right before 'W' record is output)

 if $state_trimmed = 'PA' and $class_trimmed = 'H' and $Local_trimmed <> '' and $Employee_Residential_State <> 'PA'
  let $PA_PSD_Locality = '880000'
  show 'Out of state emplid ' $Current_Emplid ' due to resident state ' $Employee_Residential_State ' PA_PSD_Locality = ' $PA_PSD_Locality
 end-if
 
end-procedure

#endif
#endif

! ---------------------------------------- end of probiz.sqc -------------------------------
