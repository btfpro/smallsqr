!***********************************************************************
! GEXPY001:  This program prints out a report for all the employees    *
!            depending on the operator department security in the tree *
!            with their Deduction Balances.                            *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!  $Date:: 9/10/97 07:00A       $                                      *
!  $Revision:: 01               $                                      *
!  $Workfile:: GEXPY001.SQR     $                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  xxxx    SXK         09/11/1997     INITIAL CREATION                 *
!                                                                      *
!  xxxx    SXK         12/09/1998     Modified to rule optimizer       *
!                                                                      *
!  XXXX    SXK         06/04/1999     Modified to take out page breaks *
!                                     for OMEGA Credit Union           *
!                                                                      *
!  SXXX    SXK         07/09/1999     Modified to pick current pay end *
!                                     date deduction information only. *
!                                     If no current pay period         *
!                                     deduction, even though employee  *	
!                                     has MTD deduction will not show  *
!                                     on the report                    *
!                                                                      *
!          JNB         08/12/1999     Changed the program so that      *
!                                     payroll can be run after "A" or  *
!                                     "B" run. The pay end dt was      *
!                                     replaced by run_id which is added*
!                                     to the run control panel and is  *
!                                     a required field.                *
!                                                                      *
!	  SXK 		08/17/1999    Modified to base selection on    *
!                                     pay_deduction table rather than  *
!                                     on ps_job and also avoided to    *
!                                     print multiple instances per     *
!                                     employee.                        *
!                                                                      *
!         SXK           10/28/1999    Modified to have union from      *
!			              job_labor.                       *
!                                                                      *
!         AXL           10/30/2000    Added a run control page that    *
!                                     summarizes panel selection       *
!                                     criteria.                        *
!                                                                      *
!         PSR           08/06/2002    Modified UNION_CD FROM JOB_LABOR * 
!                                     TO JOB   - Upgrade 8.3           *
!                                                                      *
!	  PSR           08/29/2002    BENEFIT_RCD_NBR now part of      *
!                                     PS_DEDUCTION_BAL key - Upgrade 8.3
!                                                                      *
!         CWB           02/03/2003    Modified the assignment of the   *
!                                     #benefit_rcd_nbr variable.       *
!                                                                      *
!         SRK           02/18/2003    Modified deduction_bal select    *
!                                     to have benefit_rcd_nbr =        *
!                                     #empl_rcd since in 8.3 pay       *
!                                     confirm always creates 0 as the  *
!                                     benefit_rcd_nbr.                 *
!                                                                      *
!         AXL           09/02/2004    Determine NAME from PS_NAMES to  *
!                                     overcome name changes which would*
!                                     lead to duplicate entries on     *
!                                     output.                          *
!	GEX-AXG	08/20/2007    Upgrade 9.0
! GEX_SEC_REENG 2015-06-24 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-setup

!#include 'setup32a.sqc' PSR 08/09/02 8 Upgrade
#include 'ptpsl177.sqc'
declare-report deduction-report
Printer-Type=LINEPRINTER
  layout=DEFAULT
end-declare

end-setup

!*********************************************************************
!Initial processing, retrieving current dates and calls the main 
!procedure to do the processing.                                     
!*********************************************************************
begin-report
  !SXK 12/09/98 Begin
  !do Alter-Session   ! Set Session to RULE Optimizer		!Commented for Upgrade 9.0 GEX-AXG
!SXK 12/09/98 End

  use-report deduction-report

  do Init-DateTime
  do Init-Number
  do stdapi-init
  do Get-Calendar-Year-Id
  move 'GEXPY001' to $ReportID
  move 'General Deduction Report' to $ReportTitle
  display $ReportTitle

  do Get-Current-DateTime
  do Report
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term
  !*do Reset
end-report

!*********************************************************************
!If this Program is being executed through process scheduler, 
!the run control parameters and calls the main processing procedure.
!Otherwise, interrogates the user for the run control parameters and 
!validates them. If the run control parameters are invalid, stops the
!execution.
!*********************************************************************
begin-procedure Report

 date-time () hh:mi:ss &timeBegan
 display 'Report Began: ' noline
 display &timeBegan

 move 'N' to $Errorfound

  if $prcs_process_instance = ''
      input $rnctl_date 'Enter Run Control Date({Prompt-Date}): ' type=char
      do format-datetime($rnctl_date,$rnctl_date,{prompt-mask},'','native')
      if rtrim($rnctl_Date,' ') = ''
         let $rnctl_date = $asoftoday
      end-if

      input $In_Ded 'Enter Deduction Type: ' type=char
       uppercase $In_Ded
       do Edit-Ded

!       if $found = 'Y'
!          input $In_company 'Enter the Company Name (Optional)' type=char
!          uppercase $In_company
!          if length($In_company) > 0
!             do Edit-company
!          else
!             let $GEXXX900_INCLUDE_COMPANY_CRITERIA = ''
!          end-if
!          if $found = 'Y'
!             input $In_deptcd 'Enter the Dept Cd (Optional)' type=char
!             uppercase $In_deptcd
!             if length($in_deptcd) > 0
!                do Edit-deptcd
!             else
!                let $GEXXX902_INCLUDE_DEPTID_CRITERIA = ''
!             end-if
	     if $found = 'Y'

	       display '**************************************'
	       display '*     1.Account Code and Name        *'
	       display '*     2.Union and Name               *'
	       display '*     3.Name                         *'
	       display '**************************************'     
	       input $Option 'Select the Sorting Option:' type=integer
	       move $option to #option
	       do Edit-Option            
	       if $found = 'N'
		 display 'Error found -- Invalid Option Code'
		 goto report-exit
	       end-if 
! JNB 08/12/1999 Begin

             input $Run_ID 'Enter Run ID ' type=char
             uppercase $Run_ID 
             do edit-runid
             if $found = 'N'
             display 'Error found -- Invalid Run ID'
             goto report-exit
             end-if
! JNB 08/12/1999 End 
              
!            end-if
!             else
!               display 'Cannot proceed with invalid Dept Code'
!               goto report-exit
!             end-if
!          else
!             display 'Cannot proceed further with invalid company name'
!             goto report-exit
!          end-if
       else 
	  display 'Cannot proceed further without the Deduction Code'
	  goto report-exit
       end-if

   !AXL 10/30/2000 - New cover sheet info - Begin 
       !let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1'
       !let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'

       Evaluate #option
         When = 1
           let $order_by = 'C.COMPANY, C.PAYGROUP, C.DEPTID, A.ACCT_CD, B.NAME' !AXL 9/2/2004
           Let $GEXXX901_Company_Alias  = 'C.COMPANY'
           Let $GEXXX901_Paygroup_Alias = 'C.PAYGROUP'
           Let $GEXXX902_Deptid_Alias   = 'C.DEPTID'
           break
         When = 2
           let $order_by = 'C1.COMPANY, C1.PAYGROUP, C1.DEPTID, JL.UNION_CD, B2.NAME'	!AXL 9/2/2004
           Let $GEXXX901_Company_Alias  = 'C1.COMPANY'
           Let $GEXXX901_Paygroup_Alias = 'C1.PAYGROUP'
           Let $GEXXX902_Deptid_Alias   = 'C1.DEPTID'
           break
         When-Other
           let $order_by = 'B3.NAME'	!AXL 9/2/2004
           Let $GEXXX901_Company_Alias  = 'C2.COMPANY'
           Let $GEXXX901_Paygroup_Alias = 'C2.PAYGROUP'
           Let $GEXXX902_Deptid_Alias   = 'C2.DEPTID'
           break
       End-Evaluate

       Display 'Enter Company/Paygroup or leave blank to exit.'
       While 1=1
         Input $In-Company Maxlen=3 'Company'
         Uppercase $In-Company
         If Rtrim($In-Company, ' ') = ''
            Break
         Else
            Input $In-Paygroup Maxlen=3 'Paygroup'
            Uppercase $In-Paygroup
            If Rtrim($In-Paygroup, ' ') = ''
               Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''')'
            Else
               Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''' And ' || $GEXXX901_Paygroup_Alias || ' = '''  || $In-Paygroup || ''')'
            End-If
            Add 1 To #GEX_RC_PAYGROUP_ROWS
            If #GEX_RC_PAYGROUP_ROWS = 1
               Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '(' || $Include_Condition
            Else
               Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ' Or '  || $Include_Condition
            End-If
         End-If
       End-While

       If #GEX_RC_PAYGROUP_ROWS = 0
          Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1'
          Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = 'ALL'
       Else
          Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ')'
          Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
       End-If

       Let $DeptIDString = ''''
       Display 'Enter DeptID or leave blank to exit.'
       While 1=1
          Input $In-DeptID Maxlen=10 'DeptID'
          Uppercase $In-DeptID
          If Rtrim($In-DeptID, ' ') = ''
             Concat '''' With $DeptIDString
             Break
          End-If
          If $DeptIDString <> ''''
             Concat ''',''' With $DeptIDString
          End-If
          Concat $In-DeptID With $DeptIDString
       End-While

       If $DeptIDString = ''''''
          Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
          Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
       Else
          Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' In (' || $DeptIDString || ')'
          Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_INCLUDE_DEPTID_CRITERIA
       End-If
   !AXL 10/30/2000 - New cover sheet info - Begin 

  else
   !get parameters from single row run control record 
       Do GEXXX922-Select-Parameters
       let $rnctl_date = $GEX_RC_PAY.ASOFDATE
       if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
          let $rnctl_date = $asoftoday
       end-if
   !JNB 08/12/1999 Begin
       let $Run_ID = $GEX_RC_PAY.RUN_ID
   !JNB 08/12/1999 End  

       let #option = $GEX_RC_PAY.OPTION_ID
       let $In_Ded = $GEX_RC_PAY.DEDCD
       do edit-ded
   !get parameters from multiple row run control record

       if #Option = 1
         !AXL 10/30/2000 - New cover sheet info - Begin 
          let $order_by = 'C.COMPANY, C.PAYGROUP, C.DEPTID, A.ACCT_CD, B.NAME'	!AXL 9/2/2004
         !AXL 10/30/2000 - New cover sheet info - End
	  Let $GEXXX901_Company_Alias  = 'C.COMPANY'
	  Let $GEXXX901_Paygroup_Alias = 'C.PAYGROUP'        
	  Do GEXXX901-Select-Company-Paygroup-Parameters 
!         if #GEX_RC_PAYGROUP_ROWS = 0
!            LET $GEXXX901_INCLUDE_COMPANY__PAYGROUP_CRITERIA = 'AND '||'A.COMPANY||'>'||'' '''
!         end-if
      
	  Let $GEXXX902_Deptid_Alias = 'C.DEPTID'
	  Do GEXXX902-Select-Deptid-Parameters 
!         if #GEX_RC_DEPTID_ROWS = 0
!            LET $GEXXX902_INCLUDE_DEPTID_CRITERIA = 'AND '||'A.DEPTID||'>'||'' '''
!         end-if
       else
          if #Option = 2
            !AXL 10/30/2000 - New cover sheet info - Begin 
             let $order_by = 'C1.COMPANY, C1.PAYGROUP, C1.DEPTID, JL.UNION_CD, B2.name'	!AXL 9/2/2004
            !AXL 10/30/2000 - New cover sheet info - End
	     Let $GEXXX901_Company_Alias  = 'C1.COMPANY'
	     Let $GEXXX901_Paygroup_Alias = 'C1.PAYGROUP'        
	     Do GEXXX901-Select-Company-Paygroup-Parameters 
      
	     Let $GEXXX902_Deptid_Alias = 'C1.DEPTID'
	     Do GEXXX902-Select-Deptid-Parameters 
!            if #GEX_RC_DEPTID_ROWS = 0
!               LET $GEXXX902_INCLUDE_DEPTID_CRITERIA = 'AND '||'A1.DEPTID||'>'||'' '''
!            end-if
          else
            !AXL 10/30/2000 - New cover sheet info - Begin 
             let $order_by = 'B2.NAME'	!AXL 9/2/2004
            !AXL 10/30/2000 - New cover sheet info - End
	     Let $GEXXX901_Company_Alias  = 'C2.COMPANY'
	     Let $GEXXX901_Paygroup_Alias = 'C2.PAYGROUP'        
	     Do GEXXX901-Select-Company-Paygroup-Parameters 

!            if #GEX_RC_COMPANY_ROWS = 0
!               LET $GEXXX900_INCLUDE_COMPANY_CRITERIA = 'AND '||'A2.COMPANY||'>'||'' '''
!            end-if
      
	     Let $GEXXX902_Deptid_Alias = 'C2.DEPTID'
	     Do GEXXX902-Select-Deptid-Parameters 
!            if #GEX_RC_DEPTID_ROWS = 0
!               LET $GEXXX902_INCLUDE_DEPTID_CRITERIA = 'AND '||'A2.DEPTID||'>'||'' '''
!            end-if
          end-if
       end-if
  end-if

!SXK 06/14/1999 Begin
if $in_ded = '6OMFCU' and #option > 2
   let $order_by_1 = 'ORDER BY B2.NAME'		!AXL 9/2/2004
else 
   let $order_by_1 = 'ORDER BY C2.COMPANY, C2.PAYGROUP, C2.DEPTID, B2.NAME'	!AXL 9/2/2004
end-if
   !display $order_by_1
!SXK 06/14/1999 End
 do get-pay-end-dt  !SXK 07/09/1999 

 do Print-Cover-Page !AXL 10/30/2000 - New cover sheet procedure 

 do process-employee-data
  
 if $sev-error = 'Y'
    goto report-exit
 end-if
  
Report-Exit:


  date-time () hh:mi:ss &timeProcess
  display #InputTran 99999 noline
  display ' Transactions Processed: ' noline
  display &timeProcess

end-procedure

!AXL 10/30/2000 - AXL - Run cntl info - BEGIN
!***********************************************************************
begin-procedure Print-Cover-Page
!***********************************************************************
#debug9 show 'Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print 'Pay Run ID           ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)

  Print 'Pay Run ID                                           ='   (+1,5)
  Print  $Run_ID                                                  (0,+2)

  Print '$As Of Date                                          ='   (+1,5)
  Print  $rnctl_date                                               (0,+2)

  Print 'Deduction Code                                       ='   (+1,5)
  Print $IN_DED                                                    (0,+2)

  Print '$GEXXX901_Include_Company_Paygroup_Criteria          ='   (+1,5)
  Print  $GEXXX901_Include_Company_Paygroup_Display_Criteria       (0,+2)

  Print '$GEXXX902_Include_Deptid_Criteria                    ='   (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria                  (0,+2)

  Print 'SORTING OPTION:                '                          (+3,2)
  Print 'Option Code                                          ='   (+1,5)
  Print $order_by                                                  (0,+2)

  Let #PAGE-COUNT = 0

  new-page
 
End-Procedure
!AXL 10/30/2000 - AXL - Run cntl info - END

!SXK 07/09/1999 Begin
!*********************************************************************
!Gets latest pay end date confirmed
!*********************************************************************
begin-procedure get-pay-end-dt
begin-select loops=1
x.pay_end_dt
   display &x.pay_end_dt
from ps_pay_Calendar x
where x.pay_confirm_run = 'Y'
and x.run_id = $Run_ID    !JNB 08/12/1999
!  and x.pay_end_dt = (Select max(pay_end_dt)       JNB 08/12/1999
!			from ps_pay_Calendar              JNB 08/12/1999 
!			where company = x.company         JNB 08/12/1999 
!			and paygroup = x.paygroup         JNB 08/12/1999
! 			and pay_confirm_run = 'Y'         JNB 08/12/1999
!			and pay_end_dt <= $rnctl_date)    JNB 08/12/1999
end-select
 if rtrim(&x.pay_end_Dt,' ') = ''
    show 'The latest pay end date is not confirmed yet'
    stop
end-if

end-procedure
!SXK 07/09/1999 End

!JNB 08/12/1999 Begin
!*********************************************************************
!Edit Run ID
!*********************************************************************
begin-procedure edit-runid
begin-select loops=1
x1.run_id

   display &x1.run_id

from ps_pay_Calendar x1
where x1.run_id = $Run_ID 

end-select
 if rtrim(&x1.run_id,' ') = ''
    show 'Invalid Run ID is entered.'
    stop
end-if

end-procedure
!JNB 08/12/1999 End

!*********************************************************************
!Prints the header information in the report.
!*********************************************************************

begin-heading 13 for-reports=(deduction-report)

#Include 'stdhdg01.sqc'

!  print 'Report ID:  '    (1,1)
!  print $ReportID         ()

!  uppercase $ReportTitle
!  print $ReportTitle      ()          center


!********************************
!SXK 06/14/1999 Begin
if $in_ded = '6OMFCU' and #option > 2
else
position (-1)

move $prev_company to $company
do get-company-desc
if rtrim($company_desc,' ') <> ''
  string $company_desc $company by '-' into $company_hdr
  print $company_hdr () center bold
end-if

!  let #RptCol = {ColR} - 2
!  page-number             (0,#RptCol)  'Page No.  '

!  print 'Run Date:'       (0,116)
!  date-time () DD-MON-YYYY &curr_Date 
!  print &curr_Date ()

  position (+1)
  move $prev_paygroup to $paygroup
  do get-paygroup-desc
  if rtrim($paygroup_desc,' ') <> ''
    string $paygroup_desc $paygroup by '-' into $paygroup_hdr
    print $paygroup_hdr () center bold
  end-if
  position (+1)

  move $prev_dept to $deptid
  do get-dept-desc
  if rtrim($dept_desc,' ') <> '' 
    string $dept_Desc $deptid by '-' into $dept_hdr
    print $dept_hdr () center bold
  end-if
end-if
!SXK 06/14/1999 End
!****************************

  position (+1)
  move 'Deduction Report for: ' to $ded_prefix
  let $ded_hdr = $ded_prefix||$ded_Desc
  print $ded_hdr ()  center bold

  position (+1)
  print $option_Desc () center bold

  position (+1)
  if rtrim($pay_end_dt, ' ') <> ''
     move 'Pay End Date : ' to $pay_end_Dt_prefix
     let $pay_end_dt_hdr = $pay_end_dt_prefix||$pay_end_dt
     print $pay_end_dt_hdr () center bold
  end-if

 
!  print $company_Desc (+2) center bold
!  date-time () MM-DD-YYYY &curr_Date 
!  print &curr_Date (,80)
!  print $dept_desc (+1) center bold
!  print ' - ' ()
!  print $deptid () bold
!  print 'Deduction Report for:' (+1) center bold
!  print $ded_desc ()  
!  print 'Pay End Date : ' (+1) center bold
!  print &pay_end_dt_ccyy ()

  print 'Deduction Amounts' (+2,108) bold
  print '-' (+1,88,58) fill
  print 'FULL/PART'    (,45) BOLD
 
  !print 'SSN' (+1,4) bold   !GEX_SEC_REENG 2015-06-24 Vahini Katta
  print 'EMPLID' (+1,4) bold !GEX_SEC_REENG 2015-06-24 Vahini Katta
  print 'NAME' (,21) BOLD
  print 'TIME' (,47) BOLD
  print 'HIRE DATE'(,57) BOLD
  print 'UNION' (,69) bold
  print 'ACCT CD' (,78) bold
  print 'CURRENT' (,91) bold
!SXK 06/15/1999 Begin - No need to send MTD,QTD and YTD
  if $in_ded = '6OMFCU' and #option > 2
  else
  print 'MTD'     (,106) bold
  print 'QTD'  (,121) bold
  print 'YTD'  (,136) bold
  end-if
  print '-' (+1,1,145) fill

end-heading

!*********************************************************************
!Prints the footer in the report
!*********************************************************************

begin-footing 1 for-reports=(deduction-report)
page-number (1,123) 'Page '  
last-page () ' of ' '.'

end-footing

!*********************************************************************
!This is the main processing control procedure. Depending on the 
!sorting option, calls the corresponding procedure to process.
!********************************************************************* 

begin-procedure process-employee-data

move 'N' to $found
move 'N' to $acct_Change
move 'N' to $union_change
move 'N' to $dept_change
move 'N' to $company_change
let #inputtran = 0
!if length($in_company) > 0
!   let $w_company_rel = 'IN'
!else
!   let $w_company_Rel = '>'
!   let $in_company = ' '
!end-if

!if length($in_deptcd) > 0
!   let $w_deptcd_rel = 'IN'
!else
!   let $w_deptcd_rel = '>'
!   let $in_deptcd = ' '
!end-if

display '#option : ' noline
display #option
display '$In_ded : ' noline
display $In_ded
display '$rnctl_date : ' noline
display $rnctl_date

Evaluate #option

  when = 1
    do process-option-1
    break
  when = 2
    do process-option-2
    break
  when = 3
    do process-option-3
    break
End-Evaluate

end-procedure

!*********************************************************************
!This is the logic to process option of sorting by Account Code. As 
!each employee read from the database, gets the current deduction, MTD
!QTD and YTD balances and prints them in the report body.
!*********************************************************************

begin-procedure process-option-1

position (+2)

begin-select ON-ERROR=SQL-Error-Found('Process-option-1')
C.COMPANY   () on-break print=never level=1 save=$prev_company after=company-change
C.PAYGROUP  () on-break print=never level=2 save=$prev_paygroup after=paygroup-change
C.DEPTID    () on-break print=never level=3 save=$prev_dept after=dept-change 
A.ACCT_CD   (,80) on-break print=change/top-page level=4 after=acct-change save=$prev_Acct
C.CHECK_DT 
c.emplid
c.empl_rcd
B.name		!AXL 9/2/2004
! CWB 02/03/2003 BEGIN
!C.BENEFIT_RCD_NBR
D.BENEFIT_RCD_NBR
! CWB 02/03/2003 END

  move 'Y' to $Found
  move 'N' to $errorfound
  add 1 to #inputtran
  move &C.check_dt to $AsOfDate
  move &x.pay_end_dt to $pay_end_dt
 
  if #inputtran = 1
     do get-company-desc
     do get-dept-desc
  end-if

  if &c.emplid <> $prev_emplid
     move &c.emplid to $prev_emplid
     move &c.empl_rcd to #prev_empl_rcd

	  move &c.company to $company
	  move &c.paygroup to $paygroup
	  move &c.emplid to $emplid
	  move &C.empl_rcd to #empl_rcd
	  move &b.name to $name	!AXL 9/2/2004
! CWB 02/03/2003 BEGIN
!          move &c.benefit_rcd_nbr to #benefit_rcd_nbr
          move &d.benefit_rcd_nbr to #benefit_rcd_nbr
! CWB 02/03/2003 END
     do emplid-change
  else
     move &c.emplid to $prev_emplid
     if &C.empl_rcd <> #prev_empl_rcd
         move &c.empl_rcd to #prev_empl_rcd

	  move &c.company to $company
	  move &c.paygroup to $paygroup
	  move &c.emplid to $emplid
	  move &C.empl_rcd to #empl_rcd
	  move &b.name to $name	!AXL 9/2/2004
! CWB 02/03/2003 BEGIN
!          move &c.benefit_rcd_nbr to #benefit_rcd_nbr
          move &d.benefit_rcd_nbr to #benefit_rcd_nbr
! CWB 02/03/2003 END
	 do emplid-change
     else
         move &c.EMPL_RCD to #prev_empl_Rcd#
     end-if
  end-if

FROM  PS_JOB A,
      PS_NAMES B,	!AXL 9/2/2004
      PS_PAY_CHECK C,                          
      PS_PAY_DEDUCTION D
where  A.EMPLID    = C.EMPLID
   AND A.EMPL_RCD  = C.EMPL_RCD
   AND C.EMPLID    = B.EMPLID	!AXL 9/2/2004
   AND    [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA]
   AND    [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
   AND A.ACCT_CD > ' '
   AND C.COMPANY = D.COMPANY
   AND C.PAYGROUP = D.PAYGROUP
   AND D.DEDCD = $In_Ded
   AND C.PAY_END_DT = &x.pay_end_Dt
   AND C.PAY_END_DT = D.PAY_END_DT
   AND C.OFF_CYCLE = D.OFF_CYCLE
   AND C.PAGE_NUM     = D.PAGE_NUM
   AND C.LINE_NUM     = D.LINE_NUM
   AND C.SEPCHK    = D.SEPCHK
! CWB 02/03/2003 BEGIN
!   and c.benefit_rcd_nbr = d.benefit_rcd_nbr
! CWB 02/03/2003 END
   AND A.EFFDT =
       (SELECT MAX(EFFDT)
	FROM   PS_JOB
	WHERE EMPLID    = A.EMPLID
	  AND EMPL_RCD = A.EMPL_RCD
	  AND EFFDT <= $rnctl_date)
   AND A.EFFSEQ =
       (SELECT MAX(EFFSEQ)
	FROM   PS_JOB 
	WHERE EMPLID    = A.EMPLID
	  AND EMPL_RCD = A.EMPL_RCD
	  AND EFFDT    = A.EFFDT)
   !AXL 9/2/2004 - Begin
   AND  B.EFFDT = (SELECT MAX(EFFDT) FROM PS_NAMES
        WHERE B.EMPLID    = EMPLID
          AND B.NAME_TYPE = NAME_TYPE
	  AND NAME_TYPE    ='PRI'
          AND EFFDT      <= $rnctl_date)
   !AXL 9/2/2004 - End
!  AND 0 < (SELECT SUM(DED_MTD)
!	     FROM PS_DEDUCTION_BAL 
!	    WHERE EMPLID = A.EMPLID
!	      AND COMPANY = A.COMPANY
!	      AND DEDCD = $In_Ded
!	      AND BALANCE_YEAR = substr(to_char(C.CHECK_DT,'MM/DD/YYYY'),7,4)
!	      AND BALANCE_ID = $Calendar_Year_Id
!	      AND BALANCE_PERIOD =
!		   (SELECT MAX(BALANCE_PERIOD)
!		      FROM   PS_DEDUCTION_BAL
!		     WHERE  EMPLID        = A.EMPLID
!		       AND  COMPANY       = A.COMPANY
!		       AND  DEDCD         = $In_Ded
!		       AND  BALANCE_YEAR  = substr(to_char(C.CHECK_DT,'MM/DD/YYYY'),7,4)
!		       AND  BALANCE_ID    = $Calendar_Year_Id
!		       AND  BALANCE_PERIOD  <= substr(to_char(C.CHECK_DT,'MM/DD/YYYY'),1,2)))
ORDER BY C.COMPANY,
	 C.PAYGROUP,
	 C.DEPTID,
	 A.ACCT_CD,
	 B.NAME		!AXL 9/2/2004
end-select

If #inputtran > 0
!if $acct_change = 'Y'
!   if $dept_change = 'Y'
!     if $paygroup_change = 'Y'
!      if $company_change = 'Y'
	print 'Grand totals: ' (+2,1)
	print #grand_total_CUR (,86)  edit 99999990.99
	print #grand_total_MTD (,99) edit 99999990.99
	print #grand_total_QTD (,114) edit 999999990.99
	print #grand_total_YTD (,129) edit 999999990.99

!      else
!       print 'Grand Totals for Departments:'  (+2,1)
!       print #grand_company_CUR (,73)
!       print #grand_company_MTD (,86)
!       print #grand_company_QTD (,107)
!       print #grand_company_YTD (,129)
!      end-if
!   else
!       print 'Totals for Department:'  (+2,1)
!       print $prev_dept     (,24)
!       print #grand_dept_CUR (,73)
!       print #grand_dept_MTD (,86)
!       print #grand_dept_QTD (,107)
!       print #grand_dept_YTD (,129)
!   end-if      
! end-if
!end-if
end-if

end-procedure

!*********************************************************************
!This is the logic to process option of sorting by Union Code. As 
!each employee read from the database, gets the current deduction, MTD
!QTD and YTD balances and prints them in the report body.
!*********************************************************************

begin-procedure process-option-2

position (+2)

move ' ' to $prev_Emplid

begin-select ON-ERROR=SQL-Error-Found('Process-option-2')
C1.COMPANY    () on-break print=never level=1 save=$prev_company after=company-change
C1.PAYGROUP   () on-break print=never level=2 save=$prev_paygroup after=paygroup-change
C1.DEPTID    () on-break print=never level=3 save=$prev_dept after=dept-change 
!SXK 10/28/99
JL.UNION_CD   (,70) on-break print=change/top-page level=4 after=union-change save=$prev_union
!SXK 10/28/99 
C1.EMPLID
C1.EMPL_RCD
B1.NAME		!AXL 9/2/2004
C1.CHECK_DT 
! CWB 02/03/2003 BEGIN
!C1.BENEFIT_RCD_NBR
D1.BENEFIT_RCD_NBR
! CWB 02/03/2003 END
  move 'Y' to $Found
  move 'N' to $errorfound
  add 1 to #inputtran

  move &C1.check_dt to $AsOfDate
  move &x.pay_end_dt to $pay_end_dt
 
  if #inputtran = 1
     do get-company-desc
     do get-dept-desc
  end-if

  if &c1.emplid <> $prev_emplid
     move &c1.emplid to $prev_emplid
     move &c1.empl_rcd to #prev_empl_rcd

	  move &c1.company to $company
	  move &c1.paygroup to $paygroup
	  move &c1.emplid to $emplid
	  move &C1.empl_rcd to #empl_rcd
	  move &b1.name to $name	!AXL 9/2/2004
! CWB 02/03/2003 BEGIN
!          move &c1.benefit_rcd_nbr to #benefit_rcd_nbr
          move &d1.benefit_rcd_nbr to #benefit_rcd_nbr
! CWB 02/03/2003 END
     do emplid-change
  else
     move &c1.emplid to $prev_emplid
     if &C1.empl_rcd <> #prev_empl_rcd
         move &c1.empl_rcd to #prev_empl_rcd

	  move &c1.company to $company
	  move &c1.paygroup to $paygroup
	  move &c1.emplid to $emplid
	  move &C1.empl_rcd to #empl_rcd
	  move &b1.name to $name	!AXL 9/2/2004
! CWB 02/03/2003 BEGIN
!          move &c1.benefit_rcd_nbr to #benefit_rcd_nbr
          move &d1.benefit_rcd_nbr to #benefit_rcd_nbr
! CWB 02/03/2003 END
	 do emplid-change
     else
         move &c1.EMPL_RCD to #prev_empl_Rcd#
     end-if
  end-if



FROM   PS_PAY_CHECK C1,
       PS_NAMES B1,	!AXL 9/2/2004
       PS_PAY_DEDUCTION D1,
!SXK 10/28/99 Begin
!       PS_EMPLOYMENT F1
       ps_job_labor jl
!SXK 10/28/99 End
where 
!SXK 10/28/1999 
!F1.EMPLID    = C1.EMPLID
!   AND C1.EMPL_RCD = F1.EMPL_RCD
!SXK 10/28/1999 End
      [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA]
   AND   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
!SXK 10/28/1999 Begin
!   AND F1.UNION_CD > ' '
   and jl.union_cd > ' '
!SXK 10/28/1999 End
!SXK 10/28/1999 begin
AND    JL.EMPLID    = C1.EMPLID
AND    JL.EMPL_RCD  = C1.EMPL_RCD
AND    C1.EMPLID    = B1.EMPLID		!AXL 9/2/2004
AND    JL.EFFDT                =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB_LABOR
       WHERE  EMPLID          = JL.EMPLID
       AND    EMPL_RCD       = JL.EMPL_RCD
       AND    EFFDT          <= $rnctl_date)

AND    Jl.EFFSEQ               =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB_LABOR
       WHERE  EMPLID          = JL.EMPLID
       AND    EMPL_RCD       = JL.EMPL_RCD
       AND    EFFDT           = JL.EFFDT)
!SXK 10/28/1999 end
!AXL 9/2/2004 - Begin
AND  B1.EFFDT = (SELECT MAX(EFFDT) FROM PS_NAMES
        WHERE B1.EMPLID    = EMPLID
          AND B1.NAME_TYPE = NAME_TYPE
	  AND NAME_TYPE    ='PRI'
          AND EFFDT      <= $rnctl_date)
!AXL 9/2/2004 - End
   AND C1.COMPANY = D1.COMPANY
   AND C1.PAYGROUP = D1.PAYGROUP
   AND D1.DEDCD = $In_Ded
   AND C1.PAY_END_DT = &x.pay_end_dt
   AND C1.PAY_END_DT = D1.PAY_END_DT
   AND C1.OFF_CYCLE = D1.OFF_CYCLE
   AND C1.PAGE_NUM     = D1.PAGE_NUM
   AND C1.LINE_NUM     = D1.LINE_NUM
   AND C1.SEPCHK    = D1.SEPCHK
! CWB 02/03/2003 BEGIN
!   and c1.benefit_rcd_nbr = d1.benefit_rcd_nbr
! CWB 02/03/2003 END
ORDER BY C1.COMPANY,
	 C1.PAYGROUP,
	 C1.DEPTID,
	 JL.UNION_CD,	!SXK 10/28/1999 Changed from f1.union_cd
	 B1.name	!AXL 9/2/2004
end-select

if #inputtran > 0
!if $union_change = 'Y'
!   if $dept_change = 'Y'
!     if $paygroup_change = 'Y'
!      if $company_change = 'Y'
	print 'Grand totals: ' (+2,1)
	print #grand_total_CUR (,86)  edit 99999990.99
	print #grand_total_MTD (,99) edit 99999990.99
	print #grand_total_QTD (,114) edit 999999990.99
	print #grand_total_YTD (,129) edit 999999990.99
!      else
!       print 'Grand Totals for Departments:'  (+2,1)
!       print #grand_company_CUR (,73)
!       print #grand_company_MTD (,86)
!       print #grand_company_QTD (,107)
!       print #grand_company_YTD (,129)
!      end-if
!   else
!       print 'Totals for Department:'  (+2,1)
!       print $prev_dept     (,24)
!       print #grand_dept_CUR (,73)
!       print #grand_dept_MTD (,86)
!       print #grand_dept_QTD (,107)
!       print #grand_dept_YTD (,129)
!   end-if      
!  end-if
!end-if
end-if
end-procedure

!*********************************************************************
!This is the logic to process option of sorting by Name. As each
!employee read from the database, gets the current deduction, MTD
!QTD and YTD balances and prints them in the report body.
!*********************************************************************

begin-procedure process-option-3

position (+2)

move ' ' to $prev_emplid

begin-select ON-ERROR=SQL-Error-Found('Process-option-3')
C2.COMPANY   () on-break print=never level=1 save=$prev_company after=company-change
C2.PAYGROUP  () on-break print=never level=2 save=$prev_paygroup after=paygroup-change
C2.DEPTID    () on-break print=never level=3 save=$prev_dept after=dept-change 
C2.EMPLID   
C2.EMPL_RCD
B2.NAME		!AXL 9/2/2004
C2.CHECK_DT     
! CWB 02/03/2003 BEGIN
!C2.BENEFIT_RCD_NBR
D2.BENEFIT_RCD_NBR
! CWB 02/03/2003 END
  move 'Y' to $Found
  move 'N' to $errorfound
  add 1 to #inputtran
  move &C2.check_dt to $AsOfDate
  move &x.pay_end_Dt to $pay_end_Dt

  if #inputtran = 1
     do get-company-desc
     do get-dept-desc
  end-if

  if &c2.emplid <> $prev_emplid
     move &c2.emplid to $prev_emplid
     move &c2.empl_rcd to #prev_empl_rcd
	  move &c2.company to $company
	  move &c2.paygroup to $paygroup
	  move &c2.emplid to $emplid
	  move &C2.empl_rcd to #empl_rcd
          move &B2.name to $name	!AXL 9/2/2004
! CWB 02/03/2003 BEGIN
!          move &c2.benefit_rcd_nbr to #benefit_rcd_nbr
          move &d2.benefit_rcd_nbr to #benefit_rcd_nbr
! CWB 02/03/2003 END
     do emplid-change
  else
     move &c2.emplid to $prev_emplid
     if &C2.empl_rcd <> #prev_empl_rcd
         move &c2.empl_rcd to #prev_empl_rcd

	  move &c2.company to $company
	  move &c2.paygroup to $paygroup
	  move &c2.emplid to $emplid
	  move &C2.empl_rcd to #empl_rcd
	  move &B2.name to $name	!AXL 9/2/2004
! CWB 02/03/2003 BEGIN
!          move &c2.benefit_rcd_nbr to #benefit_rcd_nbr
          move &d2.benefit_rcd_nbr to #benefit_rcd_nbr
! CWB 02/03/2003 END
	 do emplid-change
     else
         move &c2.EMPL_RCD to #prev_empl_Rcd#
     end-if
  end-if

FROM   PS_PAY_CHECK C2,
       PS_NAMES B2,	!AXL 9/2/2004
       PS_PAY_DEDUCTION D2
where  [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA]
   AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
   AND C2.COMPANY   = D2.COMPANY
   AND C2.PAYGROUP  = D2.PAYGROUP
   AND C2.EMPLID    = B2.EMPLID		!AXL 9/2/2004
   AND D2.DEDCD = $In_Ded
   AND C2.PAY_END_DT = &x.pay_end_Dt
   AND C2.PAY_END_DT = D2.PAY_END_DT
   AND C2.OFF_CYCLE = D2.OFF_CYCLE
   AND C2.PAGE_NUM     = D2.PAGE_NUM
   AND C2.LINE_NUM     = D2.LINE_NUM
   AND C2.SEPCHK    = D2.SEPCHK
   !AXL 9/2/2004 - Begin
   AND B2.EFFDT = (SELECT MAX(EFFDT) FROM PS_NAMES
        WHERE B2.EMPLID    = EMPLID
          AND B2.NAME_TYPE = NAME_TYPE
	  AND NAME_TYPE    ='PRI'
          AND EFFDT      <= $rnctl_date)
   !AXL 9/2/2004 - End
! CWB 02/03/2003 BEGIN
!   and c2.benefit_rcd_nbr = d2.benefit_rcd_nbr
! CWB 02/03/2003 END
[$order_by_1]
end-select

if #inputtran > 0
!   if $dept_change = 'Y'
!     if $paygroup_change = 'Y'
!      if $company_change = 'Y'
	print 'Grand totals: ' (+2,1)
	print #grand_total_CUR (,86)  edit 99999990.99
        if $in_ded = '6OMFCU' 
        else
	print #grand_total_MTD (,99) edit 99999990.99
	print #grand_total_QTD (,114) edit 999999990.99
	print #grand_total_YTD (,129) edit 999999990.99
        end-if
!      else
!      print 'Grand Totals for Departments:'  (+2,1)
!      print #grand_company_CUR (,73)
!      print #grand_company_MTD (,86)
!      print #grand_company_QTD (,107)
!      print #grand_company_YTD (,129)
!      end-if
!    end-if
!   end-if      
end-if
end-procedure

Begin-Procedure emplid-change

  do select-job-info

  do sum-cur-ded

  move &dedCUR to #dedCUR
  add  #dedCUR to #tot_dedCUR
  
  do Get-Date-Codes

  do Get-Deduction-Balances

  print #dedCUR (,86)  edit 99999990.99
  !SXK 06/15/1999 begin
  if $in_ded = '6OMFCU'
  else
  print #dedMTD (,99) edit 99999990.99
  print #dedQTD (,114) edit 999999990.99
  print #dedYTD (,129) edit 999999990.99
  end-if
  !SXK 06/14/1999 Begin
  if $in_ded = '6OMFCU'
     add #dedCUR to #grand_total_CUR
  end-if
  !SXK 06/14/1999 end
!  position (+1)

end-procedure

begin-procedure select-job-info
print $prev_emplid (+1,1) !edit XXX-XX-XXXX !GEX_SEC_REENG 2015-06-24 Vahini Katta
print $name (,15) 

begin-select
A2.FULL_PART_TIME (,49)
F2.HIRE_DT (,57)
!SXK 10/28/99 - Changed from f2.union_Cd
A2.UNION_CD 
!SXK 10/28/99 End
A2.ACCT_CD 
  if #option <> 2
     print &A2.UNION_CD (,70)  !SXK 10/28/99 - Changed from f2.union_cd
  end-if
  if #option <> 1
     print &a2.acct_cd (,80)
  end-if

FROM ps_job a2, ps_employment f2
where a2.emplid = $emplid
and a2.empl_rcd = #Empl_rcd#
and a2.emplid = f2.emplid
and a2.empl_rcd = f2.empl_rcd

and a2.effdt = (select max(effdt)
		from ps_job 
		where emplid = a2.emplid
		and empl_Rcd = a2.empl_rcd
		and effdt <= $rnctl_Date)
and a2.effseq = (select max(effseq)
		from ps_job
		where emplid = a2.emplid
		and empl_rcd = a2.EMPL_RCD
		and effdt = a2.effdt)
end-select

end-procedure

!*********************************************************************
!Gets the deduction balances for the employee
!*********************************************************************

begin-procedure Get-Deduction-Balances

  move $AsOfYYYY  to #AsOfYYYY
  move $AsOfMonth to #AsOfMonth
  move $AsOfQtr   to #AsOfQtr
  move 'N' to $found

begin-SELECT on-error=sql-error-found('Get-Deduction-Balances')
DB.DED_MTD,DB.DED_QTD,DB.DED_YTD

  move &DB.Ded_MTD to #DedMTD
  move &DB.Ded_QTD to #DedQTD
  move &DB.Ded_YTD to #DedYTD

  move 'Y' to $found

  add #dedMTD to #tot_dedMTD
  add #dedQTD to #tot_dedQTD
  add #dedYTD to #tot_dedYTD

FROM  PS_DEDUCTION_BAL DB
WHERE DB.EMPLID        = $EmplID
  AND DB.COMPANY       = $Company
  AND DB.DEDCD         = $In_Ded
  AND DB.BALANCE_YEAR = #AsOfYYYY
  AND DB.BALANCE_ID   = $Calendar_Year_Id
!  AND DB.BENEFIT_RCD_NBR = #benefit_rcd_nbr     !SRK 02/18/03 in 8.3 this benefit_rcd_nbr from pay_check
! not reflecting empl_rcd from job. all of them are set to 0. Since in GiantEagle, empl_rcd is equal to 
! the benefit_rcd_nbr, we are going to use that one going forward
 AND ((DB.BENEFIT_RCD_NBR = #empl_rcd AND DB.PLAN_TYPE <> '00')
   OR (DB.BENEFIT_RCD_NBR = 999 AND DB.PLAN_TYPE = '00'))
  AND DB.BALANCE_PERIOD =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_DEDUCTION_BAL
       WHERE  EMPLID        = $EmplID
	 AND  COMPANY       = $Company
	 AND  DEDCD         = $In_Ded
	 AND  BALANCE_YEAR  = #AsOfYYYY
	 AND  BALANCE_ID    = $Calendar_Year_Id
         AND  BENEFIT_RCD_NBR = DB.BENEFIT_RCD_NBR     !SRK 02/18/2003
	 AND  BALANCE_PERIOD  <= #AsOfMonth)
end-SELECT

if $found = 'N'
  move 0 to #DedMTD
  move 0 to #DedQTD
  move 0 to #DedYTD
end-if

!Use of this procedure presumes that "Get-Quarter-Month-Codes" and
! "Get-Calendar-Year-Id" are also used
!  if #AsOfMonth <> &DB.Balance_Period
!    move 0 to #DedMTD
!  end-if
!  if #AsOfQtr <> &DB.Balance_Qtr
!    move 0 to #DedQTD
!  end-if

end-procedure

!*********************************************************************
!If there is a change in the Account Codes of the employees, prints 
!the running totals of the balances and starts calculating for the 
!newly read Account Code
!*********************************************************************

begin-procedure Acct-change

let $acct_change = 'N'

print 'Totals for:'  (+3,1)
print $prev_acct     (,80)

print #tot_dedCUR    (,86)  edit 99999990.99
print #tot_dedMTD    (,99) edit 99999990.99
print #tot_dedQTD    (,114) edit 999999990.99
print #tot_dedYTD    (,129) edit 999999990.99

add #tot_dedCUR to #grand_dept_CUR
add #tot_dedMTD to #grand_dept_MTD
add #tot_dedQTD to #grand_dept_QTD
add #tot_dedYTD to #grand_dept_YTD

move 0 to #tot_dedCUR
move 0 to #tot_dedMTD
move 0 to #tot_dedQTD
move 0 to #tot_dedYTD

  if RTRIM(&A.ACCT_CD,' ') <> ''   !1
    if &A.ACCT_CD <> $prev_acct    !2
      move 'Y' to $acct_change     
      if rtrim($prev_dept,' ') <> '' !3
	 if &C.DEPTID <> $prev_dept  !4
	 else
	    if rtrim($prev_paygroup,' ') <> ''  !5
	       if &C.PAYGROUP <> $prev_paygroup !6 
	       else
		  if rtrim($prev_company,' ') <> '' !7
		    if &C.COMPANY <> $prev_company  !8
		    else
		       new-page
		    end-if  !8
		  else
		    new-page
		  end-if !7
	       end-if !6
	    end-if!5
	 end-if!4
      end-if!3
      position (+2)
    end-if!2
  end-if!1

end-procedure

!*********************************************************************
!If there is a change in the Union Codes of the employees, prints 
!the running totals of the balances and starts calculating for the 
!newly read Union Code
!*********************************************************************

begin-procedure Union-change

let $union_change = 'N'

display 'Union After'

print 'Totals for:'  (+3,1)
print $prev_union     (,70)
print #tot_dedCUR    (,86)  edit 99999990.99
print #tot_dedMTD    (,99) edit 99999990.99
print #tot_dedQTD    (,114) edit 999999990.99
print #tot_dedYTD    (,129) edit 999999990.99

add #tot_dedCUR to #grand_dept_CUR
add #tot_dedMTD to #grand_dept_MTD
add #tot_dedQTD to #grand_dept_QTD
add #tot_dedYTD to #grand_dept_YTD

move 0 to #tot_dedCUR
move 0 to #tot_dedMTD
move 0 to #tot_dedQTD
move 0 to #tot_dedYTD

!SXK 10/28/1999 Begin - Changed from f1.union_cd
  if RTRIM(&JL.UNION_CD,' ') <> '' !1
    if &JL.UNION_CD <> $prev_union !2
!SXK 10/28/1999 End
      move 'Y' to $union_change
      if rtrim($prev_dept,' ') <> ''  !3
	 if &C1.DEPTID <> $prev_dept  !4
	 else
	    if rtrim($prev_paygroup,' ') <> '' !5
	       if &C1.PAYGROUP <> $prev_paygroup !6
	       else
		  if rtrim($prev_company,' ') <> '' !7
		     if &C1.COMPANY <> $prev_company !8
		     else
			new-page
		     end-if !8
		  else
		     new-page
		  end-if !7
	       end-if!6
	    end-if!5
	 end-if!4
      end-if!3
      position (+2)
    end-if!2
  end-if!1

end-procedure

!*********************************************************************
!If there is a change in the Dept of the employees, prints 
!the running totals of the balances and starts calculating for the 
!newly read Dept Code
!*********************************************************************

begin-procedure dept-change
let $dept_change = 'N'
!SXK 06/14/1999 Begin
if $in_ded = '6OMFCU' and #option > 2
else
display 'Dept After'
print 'Totals for Department:'  (+2,1)
print $prev_dept     (,24)

if #option = 3

  add #tot_dedCUR to #grand_dept_CUR
  add #tot_dedMTD to #grand_dept_MTD
  add #tot_dedQTD to #grand_dept_QTD
  add #tot_dedYTD to #grand_dept_YTD

  move 0 to #tot_dedCUR
  move 0 to #tot_dedMTD
  move 0 to #tot_dedQTD
  move 0 to #tot_dedYTD

end-if

print #grand_dept_CUR (,86)  edit 99999990.99
print #grand_dept_MTD (,99) edit 99999990.99
print #grand_dept_QTD (,114) edit 999999990.99
print #grand_dept_YTD (,129) edit 999999990.99

add #grand_dept_CUR to #grand_paygroup_CUR
add #grand_dept_MTD to #grand_paygroup_MTD
add #grand_dept_QTD to #grand_paygroup_QTD
add #grand_dept_YTD to #grand_paygroup_YTD

move 0 to #grand_dept_CUR
move 0 to #grand_dept_MTD
move 0 to #grand_dept_QTD
move 0 to #grand_dept_YTD

Evaluate #option

when = 1

  if RTRIM(&C.DEPTID,' ') <> ''
    if &C.DEPTID <> $prev_dept
      move 'Y' to $dept_change
      move &C.DEPTID to $deptid
      do get-dept-desc
      if rtrim($prev_paygroup,' ') <> ''
	 if &C.PAYGROUP <> $prev_paygroup
	 else
	    if rtrim($prev_company,' ') <> ''
	      if &C.COMPANY <> $prev_company
	      else
		 new-page
	      end-if
	    end-if
	 end-if
      end-if
      position (+2)
    end-if
  end-if
  break

when = 2

  if RTRIM(&C1.DEPTID,' ') <> ''
    if &C1.DEPTID <> $prev_dept
      move 'Y' to $dept_change
      move &C1.DEPTID to $deptid
      do get-dept-desc
      if rtrim($prev_paygroup,' ') <> ''
	 if &C1.PAYGROUP <> $prev_paygroup
	 else
	    if rtrim($prev_company,' ') <> ''
	      if &C1.COMPANY <> $prev_company
	      else
		 new-page
	      end-if
	    end-if
	 end-if
      end-if
      position (+2)
    end-if
  end-if
  break

when = 3

  if RTRIM(&C2.DEPTID,' ') <> ''
    if &C2.DEPTID <> $prev_dept
      move 'Y' to $dept_change
      move &C2.DEPTID to $deptid
      do get-dept-desc
      if rtrim($prev_paygroup,' ') <> ''
	 if &C2.PAYGROUP <> $prev_paygroup
	 else
	    if rtrim($prev_company,' ') <> ''
	      if &C2.COMPANY <> $prev_company
	      else
			!SXK 06/14/1999 Begin
			if $in_ded = '6OMFCU'
			else
			       new-page
			end-if
			!SXK 06/14/1999 End

	      end-if
	    end-if
	 end-if
      end-if


      position (+2)
    end-if
  end-if
  break

end-evaluate

end-if
!SXK 06/14/1999 End
end-procedure

!*********************************************************************
!If there is a change in the Company Codes of the employees, prints 
!the running totals of the balances and starts calculating for the 
!newly read Company Code
!*********************************************************************

begin-procedure paygroup-change

let $paygroup_change = 'N'
!SXK 06/14/1999 Begin
!if $dept_change = 'N'
!   goto proc-exit
!end-if
if $in_ded = '6OMFCU' and #option > 2
else
print 'Totals for Paygroup:'  (+2,1)
print $prev_paygroup ()

print #grand_paygroup_CUR (,86)  edit 99999990.99
print #grand_paygroup_MTD (,99) edit 99999990.99
print #grand_paygroup_QTD (,114) edit 999999990.99
print #grand_paygroup_YTD (,129) edit 999999990.99

add #grand_paygroup_CUR to #grand_company_CUR
add #grand_paygroup_MTD to #grand_company_MTD
add #grand_paygroup_QTD to #grand_company_QTD
add #grand_paygroup_YTD to #grand_company_YTD

move 0 to #grand_paygroup_CUR
move 0 to #grand_paygroup_MTD
move 0 to #grand_paygroup_QTD
move 0 to #grand_paygroup_YTD

Evaluate #option 

when = 1

  if RTRIM(&C.PAYGROUP,' ') <> ''
     if &C.PAYGROUP <> $prev_paygroup
       move 'Y' to $paygroup_change
       move &C.paygroup to $paygroup
       do get-paygroup-desc
       if rtrim($prev_company,' ') <> ''
	  if &C.COMPANY <> $prev_company
	  else
	     new-page
	  end-if
       end-if
       position (+2)
     end-if
  end-if
  break

when = 2

  if RTRIM(&C1.PAYGROUP,' ') <> ''
     if &C1.PAYGROUP <> $prev_paygroup
       move 'Y' to $paygroup_change
       move &C1.paygroup to $paygroup
       do get-paygroup-desc
       if rtrim($prev_company,' ') <> ''
	  if &C1.COMPANY <> $prev_company
	  else
	     new-page
	  end-if
       end-if
       position (+2)
     end-if
  end-if
  break
when = 3

  if RTRIM(&C2.PAYGROUP,' ') <> ''
     if &C2.PAYGROUP <> $prev_paygroup
       move 'Y' to $paygroup_change
       move &C2.paygroup to $paygroup
       do get-paygroup-desc
       if rtrim($prev_company,' ') <> ''
	  if &C2.COMPANY <> $prev_company
	  else
			!SXK 06/14/1999 Begin
			if $in_ded = '6OMFCU'
			else
			       new-page
			end-if
			!SXK 06/14/1999 End

	  end-if
       end-if
       position (+2)
     end-if
  end-if
  break

end-evaluate

proc-exit:
end-if
!SXK 06/14/1999 End
end-procedure



!*********************************************************************
!If there is a change in the Company Codes of the employees, prints 
!the running totals of the balances and starts calculating for the 
!newly read Company Code
!*********************************************************************

begin-procedure company-change

let $Company_change = 'N'

!if $dept_change = 'N' or $paygroup_change = 'N'
!   goto proc-exit
!end-if
!SXK 06/14/1999 Begin
if $in_ded = '6OMFCU' and #option > 2
else
print 'Totals for Company:'  (+2,1)
print $prev_company ()

print #grand_company_CUR (,86)  edit 99999990.99
print #grand_company_MTD (,99) edit 99999990.99
print #grand_company_QTD (,114) edit 999999990.99
print #grand_company_YTD (,129) edit 999999990.99

add #grand_company_CUR to #grand_total_CUR
add #grand_company_MTD to #grand_total_MTD
add #grand_company_QTD to #grand_total_QTD
add #grand_company_YTD to #grand_total_YTD

move 0 to #grand_company_CUR
move 0 to #grand_company_MTD
move 0 to #grand_company_QTD
move 0 to #grand_company_YTD

Evaluate #option 

when = 1

  if RTRIM(&C.COMPANY,' ') <> ''
     if &C.COMPANY <> $prev_company
       move 'Y' to $company_change
       move &C.COMPANY to $company
       do get-company-desc
       new-page
       position (+2)
     end-if
  end-if
  break

when = 2

  if RTRIM(&c1.company,' ') <> ''
     if &C1.COMPANY <> $prev_company
       move 'Y' to $company_change
       move &C1.COMPANY to $company
       do get-company-desc
       new-page
       position (+2)

     end-if
  end-if
  break

when = 3

  if RTRIM(&C2.COMPANY,' ') <> ''
     if &C2.COMPANY <> $prev_company
       move 'Y' to $company_change
       move &C2.COMPANY to $company
       do get-company-desc
			!SXK 06/14/1999 Begin
			if $in_ded = '6OMFCU'
			else
			       new-page
			end-if
			!SXK 06/14/1999 End

       position (+2)

     end-if
  end-if
  break

end-evaluate

proc-exit:
end-if
!SXK 06/14/1999 End
end-procedure

!*********************************************************************
!Retrieves the Company Description from the database
!*********************************************************************

begin-procedure get-company-desc

move ' ' to $company_desc

begin-select on-error=sql-error-found('get-company-desc')
J.DESCR

  move &J.DESCR to $company_Desc

from PS_COMPANY_TBL J

WHERE J.COMPANY = $COMPANY
  AND J.EFFDT =
      (SELECT MAX(EFFDT)
	 FROM PS_COMPANY_TBL
	WHERE COMPANY = $COMPANY)
end-select

end-procedure

!*********************************************************************
!Retrieves the Company Description from the database
!*********************************************************************

begin-procedure get-paygroup-desc

move ' ' to $paygroup_desc

begin-select on-error=sql-error-found('get-paygroup-desc')
JJ.DESCR

  move &JJ.DESCR to $paygroup_Desc

from PS_PAYGROUP_TBL JJ

WHERE JJ.PAYGROUP = $PAYGROUP
  AND JJ.EFFDT =
      (SELECT MAX(EFFDT)
	 FROM PS_PAYGROUP_TBL
	WHERE PAYGROUP = $paygroup)
end-select

end-procedure

!*********************************************************************
!Retrieves the Department Description from the database
!*********************************************************************

begin-procedure get-dept-desc

move ' ' to $dept_Desc
DISPLAY 'Department:'
display $deptid
begin-select on-error=sql-error-found('get-dept-desc')
K.DESCR

   move &K.DESCR to $dept_desc
   display $dept_Desc
FROM PS_DEPT_TBL K

WHERE K.DEPTID = $DEPTID
  AND K.EFFDT =
       (SELECT MAX(EFFDT)
	  FROM PS_DEPT_TBL 
	 WHERE DEPTID = $DEPTID)
end-select

end-procedure

!*********************************************************************
!Validates the Deduction code against the database
!*********************************************************************

begin-procedure edit-ded
move 'N' to $found

begin-select on-error=sql-error-found('Edit-Ded')
L.DESCR
  move &L.DESCR to $ded_desc
  move 'Y' to $found
FROM PS_DEDUCTION_TBL L
WHERE L.DEDCD = $In_Ded
  AND L.EFFDT = 
      (SELECT MAX(EFFDT)
	 FROM PS_DEDUCTION_TBL 
	WHERE DEDCD = $In_Ded)
end-select

end-procedure

!*********************************************************************
!Validates the Sorting Option 
!*********************************************************************

begin-procedure edit-option
move 'N' to $found

Evaluate #Option
   when = 1
       move 'Y' to $found
       move 'Order By Account Code' to $option_desc 
       break
   when = 2
       move 'Y' to $found
       move 'Order By Union Code' to $option_desc 
       break
   when = 3
       move 'Y' to $found
       move 'Order By Name' to $option_desc 
       break
   when-other
       break
End-Evaluate

end-procedure

!*********************************************************************
!Calculates the current deductions for the employee
!*********************************************************************

begin-procedure sum-cur-ded

move 'N' to $found

begin-select on-error=sql-error-found('sum-cur-ded')

SUM(DE.DED_CUR) &dedCUR
 
     move 'Y' to $found

from PS_PAY_DEDUCTION DE, PS_PAY_CHECK DC

WHERE  DE.COMPANY = $COMPANY
   AND DE.PAYGROUP = $PAYGROUP
   AND DE.PAY_END_DT = &x.pay_end_dt
   and dc.emplid = $emplid
   and dc.EMPL_RCD = #empl_rcd
   AND DE.COMPANY = DC.COMPANY
   AND DE.PAYGROUP = DC.PAYGROUP
   AND DE.PAY_END_DT = DC.PAY_eND_DT
   AND DE.OFF_CYCLE = DC.OFF_CYCLE
   AND DE.PAGE_NUM     = DC.PAGE_NUM
   AND DE.LINE_NUM     = DC.LINE_NUM
   AND DE.SEPCHK    = DC.sepchk
   AND DE.DEDCD = $In_Ded
end-select

end-procedure

!*********************************************************************
!Retrieves the run control parameters from the database
!*********************************************************************

begin-procedure select-parameters

!move 'N' to $found

!begin-select on-error=sql-error-found('select-parameters')
!RC.DEDCD
!RC.OPTION
!      move 'Y' to $found

!from PS_xxxxxx RC

!WHERE RC.OPRID          = $Prcs_OprID
!AND   RC.RUN_CNTL_ID    = $Prcs_Run_Cntl_ID

!end-select

!if $found = 'N'
!   display 'No rows found in Run control table'
!end-if

end-procedure

!*********************************************************************
!Validates the company information
!*********************************************************************

begin-procedure Edit-Company
  move 'N' to $Found

begin-select ON-ERROR=SQL-Error-Found('Edit-Company')

'f'
  move 'Y' to $Found

FROM PS_COMPANY_TBL com, PS_JOB J 
WHERE com.COMPANY = $In_Company
  AND com.EFFDT =
	    (SELECT MAX(EFFDT)
	     FROM PS_COMPANY_TBL
	     WHERE COMPANY = $In_Company)
end-SELECT

end-procedure

!*********************************************************************
!Validates the store information
!*********************************************************************

begin-procedure Edit-Deptcd

  move 'N' to $Found

begin-SELECT ON-ERROR=SQL-Error-Found('Edit-Deptcd')
'S' 
	move 'Y' to $Found
	
FROM PS_DEPT_TBL DEPT
WHERE DEPT.DEPTID = $In_deptcd
  AND DEPT.EFF_STATUS = 'A'
  AND DEPT.EFFDT =
	    (SELECT MAX(EFFDT)
	     FROM PS_DEPT_TBL
	     WHERE DEPTID = $In_deptcd
	       AND EFF_STATUS = 'A')
end-SELECT

end-procedure

!*********************************************************************
!Displays the error messages and stops execution
!*********************************************************************
 
begin-procedure SQL-Error-Found($Proc_Name) 
  do error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 

  STOP

end-procedure

!*********************************************************************
!Displays the employee id that failed 
!*********************************************************************

begin-procedure Error-Found
  move 'Y' to $ErrorFound
  do Format-Number(#InputTran, $out, '99999')
  display $out 

  let $EmplId_1st3 = substr($EmplId,1,3)
  let $EmplId_mid2 = substr($EmplId,4,2)
  let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  display $EmplID11 
end-procedure

#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
!*#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
  
!#include 'GEXXX900.sqc'  !Get company multiple row table
!#include 'GEXXX901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table

#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexaltse.sqc'  ! Alter session SQC
