!***********************************************************************
!  GEXPL012:  Local 19 CER Contributions                               *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPL012:             Local 19 CER Contributions                     *
!                                                                      *
! Narrative:            This program creates a monthly report for      *
!                       Local 19 that contains employee information    *
!                       required by the union to administer the        *
!                       CER benefit.                                   *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           xlattable                                      *
!                       pay_calendar                                   *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                       benef_plan_tbl                                 *
!                       pay_line                                       *
!                       pay_check                                      *
!                       pay_deduction                                  *
!                       earnings_bal                                   *
!                       health_benefit                                 *
!                                                                      *
! Written by:           Jim Hutchison                                  *
!                                                                      *
! Normally Run:         Monthly                                        *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Plan Type(s)                                 *
!                         Vendor ID(s)                                 *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS   DATE       DESCRIPTION OF THE CHANGE                     *
!***********************************************************************
!  JDH        02/05/99   Initial Creation                              *
!  JDH        02/26/99   Pull pay_check rows by the check date of the  *
!                          pay end rather than the check date of the   *
!                          pay_check row.                              *
!                        Add descending sort on effseq.                *
!  JDH        03/01/99   Added missing line to select.                 *
!  JDH        04/13/99   Get the effdt, action, action_reason from     *
!                          the job row that originally set the         *
!                          empl_status to its current value for        *
!                          empl_status in ('L','P','R','T').           *
!  JDH        06/29/99   Changed logic to get action, action_reason,   *
!                          effdt.                                      *
!  SXK        10/21/99   Modified to have union from job_labor         *
!                                                                      *
!  AXL        03/09/2000 Made minor changes to emplid joins in main    *
!                        select.                                       *
!                                                                      *
!  CJH        12/11/2000 Changes to sort order & totaling for COD proj.*
!                                                                      *
!  CWB        02/27/2001 Added logic to correct page break when        *
!                        vendor id changes.                            *
!                                                                      *  
!  CWB        03/28/2001 Removed unneccessary select for union_cd and  * 
!                        the join to JOB_LABOR.                        *        
!                                                                      *  
!  GBD        07/15/2002 Added Fieldvalue to effective dated selection *
!                        of the Load-Lookup procedure.                 *
!                                                                      *  
!  PSR        08/12/02   Column name change from Provider to Vendor_ID *
!                        8 Upgrade                                     *
!                                                                      *  
!  AXL        02/16/2004 Change sort order in Get-Status-Date procedure*
!                        to retrieve most current status.  Add last-dt-*
!                        worked to report.                             *
!
!	AMS					09/10/2007	8.3 TO 9.0 UPGRADE RETROFIT CHANGES						*
!***********************************************************************


#Include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization


#define #column1     1
#define #column2    35
#define #column3    47
#define #column4    58
#define #column5    69
#define #column6    81
#define #column7    87
#define #column8    95
#define #column9   103
#define #column10  114
#define #column10a 126
#define #column11  139
#define #column11a 142
#define #column12  154


Begin-Heading 9
#debug9 Show 'Begin-Heading'

#Include 'stdhdg02.sqc'

  print ':'                    (3,8)

  if $PayGroup <> $priorPayGroup
    do Get-PayGroup-Data
    move $PayGroup to $priorPayGroup
  end-if

  print 'Pay Group:'           (4,1)
  print $PayGroup              (0,13)
  print $PayGroupName          (0,17)

  Print 'Deptid:'              (5,1)
  Print $Deptid                (0,13)
  Print $DeptName              (0,+2)

  Print $Reporting_Period      (3,) Center 

  Move #weeks-in-month To $weeks-in-month 9
  Let $weeks-in-month-head = '(' || $weeks-in-month || ' pay periods this month)'
  Print $weeks-in-month-head   (4,) Center

  Print 'BIRTH'                (+3,{#column3})
  Print 'SERVICE'              (+0,{#column4})
  Print 'REG'                  (+0,{#column5})
  Print 'EMPL'                 (+0,{#column6})
  Print 'ACTION'               (+0,{#column8})
  Print 'EFF'                  (+0,{#column9})
  Print 'BENEFIT'              (+0,{#column10})
  Print 'LAST DT'              (+0,{#column10a})	!AXL 2/16/2004 -Add  
  Print 'WEEKS'                (+0,{#column11})
  Print '           MTD'       (+0,{#column12})

  Print 'EMPLOYEE NAME'        (+1,{#column1})
  Print 'SSN'                  (+0,{#column2})
  Print 'DATE'                 (+0,{#column3})
  Print 'DATE'                 (+0,{#column4})
  Print 'TEMP'                 (+0,{#column5})
  Print 'STAT'                 (+0,{#column6})
  Print 'ACTION'               (+0,{#column7})
  Print 'REASON'               (+0,{#column8})
  Print 'DATE'                 (+0,{#column9})
  Print 'TERM DATE'            (+0,{#column10})
  Print 'WORKED'               (+0,{#column10a})	!AXL 2/16/2004 - Add
  Print 'CONTRIBUTED'          (+0,{#column11})
  Print '  CONTRIBUTION'       (+0,{#column12})

  Print '-'                    (+1,{#column1},30)  Fill
  Print '-'                    (+0,{#column2},09)  Fill
  Print '-'                    (+0,{#column3},08)  Fill
  Print '-'                    (+0,{#column4},08)  Fill
  Print '-'                    (+0,{#column5},10)  Fill
  Print '-'                    (+0,{#column6},04)  Fill
  Print '-'                    (+0,{#column7},06)  Fill
  Print '-'                    (+0,{#column8},06)  Fill
  Print '-'                    (+0,{#column9},08)  Fill
  Print '-'                    (+0,{#column10},09) Fill
  Print '-'                    (+0,{#column10a},09) Fill	!AXL 2/16/2004 - Add
  Print '-'                    (+0,{#column11},11) Fill
  Print '-'                    (+0,{#column12},14) Fill
End-Heading


Begin-Report
#debug9 Show 'Begin-Report'

  Do Set-Optimizer-Goal

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Do P100-Start
  Do P200-Main-Process
  Do P300-Finish

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
End-Report


Begin-Procedure Set-Optimizer-Goal
#debug9 Show 'Set-Optimizer-Goal'
  Begin-SQL

!    Alter Session Set OPTIMIZER_GOAL=RULE;				!AMS 09/10/2007 !Jyotsna - PTools Upgrade- Commented as Rule mode is obsolete 
  End-SQL
End-Procedure


Begin-Procedure P100-Start
#debug9 Show 'P100-Start'

  Move 'GEXPL012'                   To $ReportID
  Move 'LOCAL 19 CER CONTRIBUTIONS' To $ReportTitle

  Show '$ReportID=' $ReportID
  Show '$ReportTitle=' $ReportTitle

  If $prcs_process_instance = ''

    Move '''' to $ProviderString
    Display 'Enter Vendor ID or leave blank to exit.'
    While 1=1
      Input $Provider maxlen=6 'Provider ID'
      if RTRIM($Provider, ' ') = ''
	concat '''' with $ProviderString
	break
      end-if
      if $ProviderString <> ''''
	concat ''',''' with $ProviderString
      end-if
      concat $Provider with $ProviderString
    End-While

    if $ProviderString = ''''''
      let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = '1=1'
      let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA = 'ALL'
      let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA2 = '1=1'
      let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA2 = 'ALL'
    else
      let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = 'BPT.VENDOR_ID In (' || $ProviderString || ')'
      let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA = $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA
      let $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA2 = 'bpt2.vendor_id In (' || $ProviderString || ')'
      let $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA2 = $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA
    end-if

    Move '''' to $PlanTypeString
    Display 'Enter Plan Type or leave blank to exit.'
    While 1=1
      Input $PlanType Maxlen=2 'Plan Type'
      Uppercase $PlanType
      if RTRIM($PlanType, ' ') = ''
	concat '''' with $PlanTypeString
	break
      end-if
      if $PlanTypeString <> ''''
	concat ''',''' with $PlanTypeString
      end-if
      concat $PlanType with $PlanTypeString
    End-While

    if $PlanTypeString = ''''''
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2 = '1=1'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA2 = 'ALL'
    else
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = 'bpt.plan_type In (' || $PlanTypeString || ')'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA2 = 'bpt2.plan_type In (' || $PlanTypeString || ')'
      let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA2 = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
    end-if

  Else

    Let $GEXXX912_Plan_Type_Alias = 'bpt.plan_type'
    Let $GEXXX912_Benefit_Plan_Alias = 'bpt.benefit_plan'
    Do GEXXX912-Select-Benefit-Plan-Parameters

    Let $GEXXX927_Vendor_ID_Alias = 'BPT.VENDOR_ID'
    Do GEXXX927-Select-Vendor-ID-Parameters

  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  If $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
    Display 'At least one plan type parameter must be specified'
    Stop
  End-If

  If $GEXXX927_INCLUDE_VENDOR_ID_CRITERIA = '1=1'
    Display 'At least one vendor id parameter must be specified'
    Stop
  End-If

  Let $X000_ORDER_BY = 'Company, Paygroup, Deptid, Employee Name'

  Show '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA  = '   $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA
  Show '$GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA      = '   $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA

  Do Get-Calendar-Year-Id    !getbalid.sqc

  Do P140-Get-Last-Confirmed-Pay
  Do P150-Print-Cover-Page
  Do P170-Get-Xlat-Lookup
End-Procedure


Begin-Procedure P140-Get-Last-Confirmed-Pay
#debug9 Show 'P140-Get-Last-Confirmed-Pay'

Begin-Select Loops=1
pay_end_dt
To_Number(To_Char(pay_end_dt,'MM'))          &balance_period
To_Number(To_Char(pay_end_dt,'YYYY'))        &balance_year
To_Char(pay_end_dt,'fmMonth YYYY')           &period
Last_Day(pay_end_dt)                         &current_month_end
Last_Day(Add_Months(pay_end_dt,-1))          &prev_month_end
Last_Day(Add_Months(pay_end_dt,1))           &next_month_end

  Let $AsOfDate         = &pay_end_dt
  Let $pay_end_dt       = &pay_end_dt
  Let #balance_year     = &balance_year
  Let #balance_period   = &balance_period
  Let $Reporting_Period = &period

  Let $current_month_begin = '01-'||Substr($pay_end_dt,4,8)
  Let $current_month_end   = &current_month_end
  Let $next_month_end      = &next_month_end
  Let $prev_month_begin    = '01-'||Substr(&prev_month_end,4,8)

  let #balance_qtr = #balance_period
  let #balance_qtr = ((#balance_qtr - 1)/ 3) + 1
  do Format-Number(#balance_qtr, $balance_qtr, '9.99') !avoid rounding the integer portion
  move $balance_qtr to $balance_qtr x     !save the integer portion
  let #balance_qtr = $balance_qtr

  Show 'Report will contain balances for the month of ' $Reporting_Period
  Show 'Last confirmed pay end date:  ' $pay_end_dt
  Show 'Balance Period Used        :  ' &balance_period

  Do P145-Get-Num-Pay-Periods

  If Rtrim($pay_end_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  End-If

From   ps_pay_calendar

Where  company                 = 'GEI'
And    paygroup                = 'RET'

And    pay_end_dt              =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  company          = 'GEI'
       And    paygroup         = 'RET'
       And    pay_end_dt      <= $AsOfToday 
       And    pay_confirm_run  = 'Y')

And    pay_confirm_run         = 'Y'
End-Select
End-Procedure


Begin-Procedure P145-Get-Num-Pay-Periods
#debug9 Show 'P145-Get-Num-Pay-Periods'
Begin-Select
Max(pay_period) &pay_period

  Let #weeks-in-month   = &pay_period

From   ps_pay_calendar

Where  company    = 'GEI'
And    paygroup   = 'RET'
And    To_Char(check_dt,'YYYYMM')
                  = To_Char(To_Date($pay_end_dt),'YYYYMM')
End-Select
End-Procedure


begin-procedure P150-Print-Cover-Page
#debug9 Show 'P150-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,1)
  Print '$Prcs_OPRID          = '                             (+2,5)
  Print $Prcs_OPRID                                           (0,+2)
  Print '$PRCS_RUN_CNTL_ID    = '                             (+1,5)
  Print $PRCS_RUN_CNTL_ID                                     (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,2)
  Print '$GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = '  (+2,5)
  Print $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA       (0,+2)
  Print '$GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA     = '  (+2,5)
  Print $GEXXX927_INCLUDE_VENDOR_ID_DISPLAY_CRITERIA           (0,+2)

  Print 'Report will contain balances for the month of'       (+2,5)
  Print $Reporting_Period                                     (0,+1)
  Print 'Last confirmed pay end date:'                        (+2,5)
  Print $pay_end_dt                                           (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $X000_ORDER_BY                                        (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
End-Procedure


begin-procedure P170-Get-Xlat-Lookup
#debug9 Show 'P170-Get-Xlat-Lookup'

  Let $Where = '     x.fieldname   = ''REG_TEMP''' ||
	       ' And x.eff_status  = ''A''' ||
!	       ' And x.language_cd = ''ENG''' ||																				!AMS 09/10/07
	       ' And x.effdt       = (Select Max(effdt)' ||
!	       '                      From   xlattable x1' ||														!AMS 09/10/07	
	       '                      From   psxlatitem x1' ||													!AMS 09/10/07
	       '                      Where  x1.fieldname    = x.fieldname' ||
!GBD 07/15/2002 Begin
!	       '                      And    x1.language_cd  = ''ENG''' ||
!	       '                      And    x1.language_cd  = x.language_cd' ||				!AMS 09/10/07
	       '                      And    x1.fieldvalue  = x.fieldvalue' ||
!GBD 07/15/2002 End
	       '                      And    x1.effdt       <= ''' || $pay_end_dt || '''' ||
	       '                      And    x1.eff_status   = ''A'')'

  Load-Lookup
    Name=XlatLookup
    Rows=10
!    Table='XLATTABLE X'								!AMS 09/10/07
		Table='PSXLATITEM X'								!AMS 09/10/07	
    Key='X.FIELDVALUE'
    Return_Value='X.XLATSHORTNAME'
    Where=$Where
    Quiet
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
 
  Let $Data-Found-Flag = 'N'

Begin-Select
! 12/8/2000 - CJH - COD Changes - add vendor id to select and assign level 1 - move all other levels

BPT.VENDOR_ID      ()        On-Break
                            Level=1
			    Print=Never
                            After=BPT-After-Vendor-ID-Break
			    Save=$Save_Vendor_ID

pl.company        ()        On-Break
                            Level=2
			    Print=Never
			    Save=$Save_Company

pl.paygroup       ()        On-Break
                            Level=3
			    Print=Never
			    Save=$Save_Paygroup

pl.deptid         ()        On-Break
                            Level=4
			    Print=Never
			    Save=$Save_Deptid
			    After=P290-After-Deptid-Break

bpt.plan_type
bpt.benefit_plan
!SXK 10/21/99 Begin
!e.union_cd

! CWB 03/28/2001 BEGIN
!###jl.union_cd
! CWB 03/28/2001 END

e.service_dt

per.name
per.birthdate

j.emplid
j.empl_rcd
j.effdt
j.reg_temp
j.empl_status
j.acct_cd
j.last_date_worked	!AXL 2/16/2004 - Add

Count(pd.ded_cur) &num_periods
Sum(pd.ded_cur) &pd.ded_cur

  Let $Data-Found-Flag = 'Y'

  Let $Company  = &pl.company
  Let $Paygroup = &pl.paygroup
  Let $Deptid   = &pl.deptid

  Let #contribution_amt = &pd.ded_cur
  Let #num_periods = &num_periods

  Do P220-Get-Benefit-Termination-Row

  Evaluate &j.empl_status
    When = 'L'
    When = 'P'
    When = 'R'
    When = 'T'
      Do P230-Get-Leave-Begin-Date
      Break
    When-Other
      Do P235-Get-Status-Date
  End-Evaluate

  Do P250-Format-Record
  Do Get-Emp-Ssn (&j.emplid, $Ssn_Out) !GEX_SEC_REENG 2016-10-18 Jyotsna  Negi
  Do P260-Print-Record

  Add #contribution_amt To #Deptid-Amount

! CJH - 12/11/2000 - COD Changes
  Add #contribution_amt to #Vendor-ID-Amount
! CJH - end

From   ps_personal_data          per,
       ps_employment             e,
       ps_job                    j,
       ps_benef_plan_tbl         bpt,
       ps_pay_cal_bal_id         pcbi,
       ps_pay_line               pl,
       ps_pay_check              pc,
       ps_pay_deduction          pd

! CWB 03/28/2001 BEGIN
!       ps_job_labor jl !SXK 10/21/99 
! CWB 03/28/2001 END

Where  per.emplid         = pl.emplid 
AND    pl.EMPLID 	  = pc.EMPLID
AND    pl.EMPL_RCD 	  = pc.EMPL_RCD
AND    pc.EMPLID 	  = e.EMPLID
AND    pc.EMPL_RCD 	  = e.EMPL_RCD
AND    E.EMPLID 	  = j.EMPLID
AND    E.EMPL_RCD 	  = j.EMPL_RCD

! CWB 03/28/2001 BEGIN
!SXK 10/21/1999 Begin
!AND    j.EMPLID 	  = jl.EMPLID
!AND    j.EMPL_RCD 	  = jl.EMPL_RCD

!AND    JL.EFFDT                =
!      (SELECT MAX(EFFDT)
!       FROM   PS_JOB_LABOR
!       WHERE  EMPLID          = JL.EMPLID
!       AND    EMPL_RCD       = JL.EMPL_RCD
!       AND    EFFDT          <= $pay_end_dt)

!AND    Jl.EFFSEQ               =
!      (SELECT MAX(EFFSEQ)
!       FROM   PS_JOB_LABOR
!       WHERE  EMPLID          = JL.EMPLID
!       AND    EMPL_RCD       = JL.EMPL_RCD
!       AND    EFFDT           = JL.EFFDT)
!SXK 10/21/1999 end
! CWB 03/28/2001 END
And    j.effdt                   =
      (Select Max(effdt)
       From   ps_job
       Where  emplid             = j.emplid
       And    empl_rcd          = j.empl_rcd
       And    effdt             <= $pay_end_dt)

And    j.effseq                  =
      (Select Max(effseq)
       From   ps_job
       Where  emplid             = j.emplid
       And    empl_rcd          = j.empl_rcd
       And    effdt              = j.effdt)

And    bpt.effdt                 =
      (Select Max(effdt)
       From   ps_benef_plan_tbl
       Where  plan_type          = bpt.plan_type
       And    benefit_plan       = bpt.benefit_plan
       And    effdt             <= $pay_end_dt)

And    pcbi.company              = pc.company
And    pcbi.paygroup             = pc.paygroup
And    pcbi.balance_id           = 'CY'
And    pcbi.balance_year         = #balance_year
And    pcbi.balance_period       = #balance_period

And    pc.pay_end_dt             = pcbi.pay_end_dt

And    pd.company                = pc.company
And    pd.paygroup               = pc.paygroup
And    pd.pay_end_dt             = pc.pay_end_dt
And    pd.off_cycle              = pc.off_cycle
And    pd.page_num                  = pc.page_num
And    pd.line_num                  = pc.line_num
And    pd.sepchk                 = pc.sepchk

And    pl.company                = pc.company
And    pl.paygroup               = pc.paygroup
And    pl.pay_end_dt             = pc.pay_end_dt
And    pl.off_cycle              = pc.off_cycle
And    pl.page_num                  = pc.page_num
And    pl.line_num                  = pc.line_num

And    pd.plan_type              = bpt.plan_type
And    pd.benefit_plan           = bpt.benefit_plan
And    pd.ded_class              = 'N'

And   [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]
And   [$GEXXX927_INCLUDE_VENDOR_ID_CRITERIA]

! 12/8/2000 - CJH - add vendor id to group by
Group By BPT.VENDOR_ID,
       pl.company,
       pl.paygroup,
       pl.deptid,
       bpt.plan_type,
       bpt.benefit_plan,

! CWB 03/28/2001 BEGIN
!       jl.union_cd,     !SXK 10/21/99 Changed from e.union_cd
! CWB 03/28/2001 END

       e.service_dt,
       per.name,
       per.birthdate,
       j.emplid,
       j.empl_rcd,
       j.effdt,
       j.reg_temp,
       j.empl_status,
       j.acct_cd,
       j.last_date_worked	!AXL 2/16/2004 - Add

! CJH - 12/8/2000 - COD changes
!Order By pl.company, pl.paygroup, pl.deptid, per.name
Order By BPT.VENDOR_ID, pl.company, pl.paygroup, pl.deptid, per.name

End-Select
End-Procedure

Begin-Procedure BPT-After-Vendor-ID-Break
#debug9 Show 'BPT-After-Vendor-ID-Break'
!  Print 'Provider'                 (+1,{#column1})
  Print 'VendorID'                 (+1,{#column1})
  Print $Save_Vendor_ID            (0,+1)
  Print 'Totals'                   (0,+1)

  Print #Vendor-ID-Amount          (0,{#column12})        Edit 999,999,999.99

  Let #Vendor-ID-Amount = 0

! CWB 02/27/2001 BEGIN
  new-page
! CWB 02/27/2001 END

End-Procedure


Begin-Procedure P220-Get-Benefit-Termination-Row
#debug9 Show 'P220-Get-Benefit-Termination-Row'
Begin-Select
hb.coverage_begin_dt

From   ps_health_benefit hb

Where  hb.emplid         = &j.emplid
And    hb.empl_rcd      = &j.empl_rcd
And    hb.plan_type      = &bpt.plan_type

And    hb.effdt          =
      (Select Max(effdt)
       From   ps_health_benefit
       Where  emplid     = &j.emplid
       And    empl_rcd  = &j.empl_rcd
       And    plan_type  = &bpt.plan_type)

And    hb.coverage_begin_dt Between $prev_month_begin
                                And $next_month_end

And    hb.coverage_elect = 'T'
End-Select
End-Procedure


Begin-Procedure P230-Get-Leave-Begin-Date
#debug9 Show 'P230-Get-Leave-Begin-Date'
  Let $Status-Change = 'N'
Begin-Select
/*+ RULE */
JOB.EFFDT
JOB.EMPL_STATUS
JOB.ACTION
JOB.ACTION_REASON
JOB.LAST_DATE_WORKED	!AXL 2/16/2004 - Add

  If &JOB.EMPL_STATUS = &J.EMPL_STATUS And
      $Status-Change = 'N'
    Let $Effective-Date = &JOB.EFFDT
    Let $Action         = &JOB.ACTION
    Let $Action_Reason  = &JOB.ACTION_REASON
    !AXL - Begin
    Do Format-DateTime(&job.last_date_worked, $last_date_worked , {DEFMDY}, '', '')
    !AXL - End
    Let $Status-Change = 'N'
  Else
    Let $Status-Change = 'Y'
  End-If

FROM   PS_JOB JOB

WHERE  EMPLID     = &J.EMPLID
AND    EMPL_RCD  = &J.EMPL_RCD
AND    EFFDT     <= &J.EFFDT
ORDER BY JOB.EFFDT DESC, JOB.EFFSEQ DESC
End-Select
End-Procedure


Begin-Procedure P235-Get-Status-Date
#debug9 Show 'P235-Get-Status-Date'
  Let $Reg-Temp-Change = 'N'
Begin-Select
/*+ RULE */
J1.EFFDT
J1.REG_TEMP
J1.ACTION
J1.ACTION_REASON
J1.EMPL_STATUS

!AXL 2/16/2004 - Disable various in style of GEXPL014 - Begin
!  If &J1.REG_TEMP = &J.REG_TEMP And
!      $Reg-Temp-Change = 'N'
!    Let $Reg-Temp-Change = 'N'
!    If &J1.EMPL_STATUS <> 'T'
      Let $Effective-Date = &J1.EFFDT
      Let $Action         = &J1.ACTION
      Let $Action_Reason  = &J1.ACTION_REASON
!    End-If
!  Else
!    Let $Reg-Temp-Change = 'Y'
!  End-If
!AXL 2/16/2004 - Disable various in style of GEXPL014 - End

FROM   PS_JOB J1

WHERE  EMPLID     = &J.EMPLID
AND    EMPL_RCD  = &J.EMPL_RCD
AND    EFFDT     <= &J.EFFDT
!ORDER BY J1.EFFDT DESC, J1.EFFSEQ DESC	-AXL 2/16/2004
ORDER BY J1.EFFDT, J1.EFFSEQ 	!AXL 2/16/2004
End-Select
End-Procedure


Begin-Procedure P250-Format-Record
#debug9 Show 'P250-Format-Record'

  Lookup XlatLookup &j.reg_temp $reg_temp

  Do Format-DateTime(&e.service_dt, $Service_Dt, {DEFMDY}, '', '')
  Do Format-DateTime(&per.birthdate, $Birthdate, {DEFMDY}, '', '')
  Do Format-DateTime($Effective-Date, $eff_dt, {DEFMDY}, '', '')
  Do Format-DateTime(&hb.coverage_begin_dt, $Term_Date, {DEFMDY}, '', '')
  !AXL 2/16/2004 - Begin
  Do Format-DateTime(&j.last_date_worked, $last_date_worked , {DEFMDY}, '', '')
  !AXL 2/16/2004 - End
End-Procedure


Begin-Procedure P260-Print-Record
#debug9 Show 'P260-Print-Record'

  Print &per.name                  (+1,{#column1},30)
  !GEX_SEC_REENG 2016-10-18 Jyotsna Negi - Begin
  !Print &j.emplid                  (+0,{#column2})
  Print $Ssn_Out                  (+0,{#column2})
  !GEX_SEC_REENG 2016-10-18 Jyotsna Negi - End
  Print $Birthdate                 (+0,{#column3})
  Print $Service_Dt                (+0,{#column4})
  Print $reg_temp                  (+0,{#column5})
  Print &j.empl_status             (+0,{#column6})
  Print $Action                    (+0,{#column7})
  Print $Action_Reason             (+0,{#column8})
  Print $eff_dt                    (+0,{#column9})
  Print $Term_Date                 (+0,{#column10})
  Print $last_date_worked          (+0,{#column10a})	!AXL 2/16/2004 - Add 
  Print #num_periods               (+0,{#column11a})  Edit 9
  Print #contribution_amt          (+0,{#column12})  Edit 999,999,999.99
End-Procedure


Begin-Procedure P290-After-Deptid-Break
#debug9 Show 'P290-After-Deptid-Break'

  Let $Deptid = $save_deptid
  Do Get-Department-Name

  Print '-'                        (+2,{#column12},014)   Fill
  Print 'Deptid'                   (+1,{#column7})
  Print $Save_Deptid               (0,+1)
  Print 'Totals'                   (0,+1)
  Print #Deptid-Amount             (0,{#column12})        Edit 999,999,999.99

  Add #Deptid-Hours  To #Report-Hours
  Add #Deptid-Amount To #Report-Amount

  Let #Deptid-Hours  = 0
  Let #Deptid-Amount = 0


! CWB 02/27/2001 BEGIN 
! Added to correct page break when vendor id changes.  
If &BPT.VENDOR_ID = $save_vendor_id
    New-Page
  end-if
! CWB 02/27/2001 END

End-Procedure


Begin-Procedure P300-Finish
#debug9 Show 'P300-Finish'

  Do P310-Print-Report-Totals

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
End-Procedure


Begin-Procedure P310-Print-Report-Totals
#debug9 Show 'P310-Print-Report-Totals'

  If $Data-Found-Flag = 'Y'
    Let $Deptid   = ''
    Let $DeptName = ''
    Print 'Report Totals'            (+2,{#column7})
    Print #Report-Amount             (0,{#column12})    Edit 999,999,999.99
  Else
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (25,) Center
  End-If
End-Procedure


#include 'gexxx912.sqc'  !Get plan type multiple row table
#include 'gexxx927.sqc'  !Get vendor id multiple row table
#include 'getcodta.sqc'  !Get company data
#include 'getpgdta.sqc'  !Get paygroup data
#include 'getdptnm.sqc'  !Get department name
#include 'getactnm.sqc'  !Get account code name
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'reset.sqc'     !Reset printer Procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'getgeid.sqc'   !Get SSN !GEX_SEC_REENG 2016-10-18 Jyotsna Negi