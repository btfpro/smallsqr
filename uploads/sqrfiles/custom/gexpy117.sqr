!***********************************************************************
! GEXPY117:  This program produces a detail report of employees        *
! whose pay sheets are modified after final calc and before confirm starts*    
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                                                                      *
!  $Date:: 03/03/99 09:00A      $                                      *
!  $Revision:: 01               $                                      *
!  $Workfile:: GEXPY117.SQR     $                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  GEXPY117  SXK    06/07/2000         INITIAL CREATION                *
!            GBD    07/15/2002        Added Fieldvalue to effective    *
!                                     dated selection of the Load-     *
!                                     Lookup procedure.                *
!  HR10306   GBD    06/18/2003        Added show statements to display *
!                                     errors when sheets are modified  *
!                                     after final calc - file will be  *
!                                     in spf format. Use log file.     *
!  PY139     Manish 08/16/2007        HCM 9.0 Upgrade                  *
!***********************************************************************
#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 

!*********************************************************************
!                                    
!*********************************************************************
begin-report

  do Init-DateTime
  do Init-Number
  do stdapi-init

  move 'GEXPY117' to $ReportID
  move 'Pay Sheets modified after final calc' to $ReportTitle
  display $ReportTitle

  do Get-Current-DateTime

  do report
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term
  do reset
end-report

!*********************************************************************
!If this Program is being executed through process scheduler, 
!the run control parameters and calls the main processing procedure.
!Otherwise, interrogates the user for the run control parameters and 
!validates them. If the run control parameters are invalid, stops the
!execution.
!*********************************************************************
begin-procedure Report 

  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  move 'N' to $Errorfound

!  If $prcs_process_instance = ''
!    Do P110-SQRW-Run-Controls
!  Else
!    Do P120-Process-Scheduler-Run-Controls
!  End-If

!  let #rnctl_yyyy = substr($X000_Where_Select_AsOfDate,8,4)       
!  let #rnctl_yy  = substr($X000_Where_Select_AsOfDate,10,2)

!  Do Format-DateTime($X000_Where_Select_AsOfDate, $X000_Report_Heading_AsOfDate, {DEFDATE}, '', '')
!  Let $X000_Order_By = 'Company, Paygroup, pay_end_Dt,page_num,line_num'

!  Show '$X000_Where_Select_AsOfDate = ' $X000_Where_Select_AsOfDate

!  Do P130-Print-Cover-Page

  do P140-Get-Xlat-Lookup
  do get-pay-end-dt

Report-Exit:

 date-time () hh:mi:ss &timeProcess
  display #InputTran 99999 noline
  display ' Transactions Processed: ' noline
  display &timeProcess

end-procedure

begin-heading 7 
 #Include 'stdhdg01.sqc'

  Let $X000_temp_out = 'Report as of ' || $asoftoday
  Print $X000_temp_out         (3,)  Center

  position (+2)

  print 'COMPANY' (,1) bold
  print 'PAYGROUP' (,10) bold
  print 'PAY_END_DT' (,20) bold
  print 'PAGE_NUM'    (,35) bold
  print 'LINE_NUM'    (,45) bold
  print 'ADDL_NBR'    (,55) bold
  print 'OFF_CYCLE' (,65) bold
  print 'EMPLID'    (,75) bold
  print 'PAY_LINE_STATUS' (,90) bold

  print '-' (+1,1,176) fill
 
end-heading

!Begin-Procedure P110-SQRW-Run-Controls
!#debug9 Show 'P110-SQRW-Run-Controls'

!  Let $X000_Where_Select_AsOfDate                 = $AsOfToday
!End-Procedure


!Begin-Procedure P120-Process-Scheduler-Run-Controls
!#debug9 Show 'P120-Process-Scheduler-Run-Controls'
!  Do GEXXX922-Select-Parameters

!  Let $X000_Where_Select_AsOfDate = $GEX_RC_PAY.AsOfDate
!  If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
!    Let $X000_Where_Select_AsOfDate = $AsOfToday
!  End-If

!End-Procedure


!begin-procedure P130-Print-Cover-Page
!#debug9 Show 'P130-Print-Cover-Page'
!  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
!  Print '$Prcs_OprID          ='                                  (+2,5)
!  Print $Prcs_OprID                                               (0,+2)
!  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
!  Print $Prcs_Run_Cntl_ID                                         (0,+2)

!  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
!  Print 'As Of Date :'                      (+2,5)
!  Print $asoftoday       (0,+2)

!  Print 'SORT ORDER FOR THIS REPORT RUN:'   (+5,2)
!  Print $X000_Order_By                      (+2,5)

!  Let #PAGE-COUNT = 0
!  NEW-PAGE
!  Let #PAGE-COUNT = 1
!End-Procedure

begin-procedure P140-Get-Xlat-Lookup
#debug9 Show 'P140-Get-Xlat-Lookup'

!GBD 07/15/2002 Begin
  Let $Where='     X.FIELDNAME   = ''PAY_LINE_STATUS'''    ||
             ' AND X.EFF_STATUS  = ''A'''                  ||
!             ' AND X.LANGUAGE_CD = ''ENG'''                ||		! Manish, PY115, 08/14/2007  - Giant Eagle Modification
             ' AND X.EFFDT       = '                       ||
                 '(SELECT MAX(EFFDT)'                      ||
!                 ' FROM   XLATTABLE X1'                    ||		! Manish, PY115, 08/14/2007  - Giant Eagle Modification
                 ' FROM   PSXLATITEM X1'                    ||		! Manish, PY115, 08/14/2007  - Giant Eagle Modification
                 ' WHERE  X1.FIELDNAME   = X.FIELDNAME'    ||
!                 ' AND    X1.LANGUAGE_CD = ''ENG'''        ||
!                 ' AND    X1.LANGUAGE_CD = X.LANGUAGE_CD'  ||		! Manish, PY115, 08/14/2007  - Giant Eagle Modification
                 ' AND    X1.FIELDVALUE = X.FIELDVALUE'    ||
                 ' AND    X1.EFFDT      <= ''' || $asoftoday || '''' ||
                 ' AND    X1.EFF_STATUS  = ''A'')'

  Load-Lookup
    Name=XlatLookup
    Rows=10
    !Table='XLATTABLE X'	! Manish, PY139, 08/16/2007  - Giant Eagle Modification
    Table='PSXLATITEM X'	! Manish, PY139, 08/16/2007  - Giant Eagle Modification
    Key='X.FIELDVALUE'
    Return_Value='X.XLATSHORTNAME'
    Where=$Where
!    Where='X.FIELDNAME = ''PAY_LINE_STATUS'''
!    Quiet
!GBD 07/15/2002 End
End-Procedure

!*********************************************************************
!Gets the pay end date of the previous pay cycle.
!*********************************************************************

Begin-Procedure get-pay-end-dt

move 'N' to $found
let #inputtran = 0

begin-select on-error=sql-error-found('Get-Pay-End-Dt')
PAY.PAY_BEGIN_DT
PAY.PAY_END_DT
PAY.COMPANY
PAY.PAYGROUP

  move &PAY.PAY_END_DT to $pay_end_Dt
  move &PAY.PAY_BEGIN_DT to $pay_begin_dt
  display 'Company: ' noline
  display &pay.company 
  display 'Paygroup: ' noline
  display &pay.paygroup
  display 'Pay End Date:' noline
  display $pay_end_Dt

  move 'Y' to $found
  do process-employee-data

FROM PS_PAY_CALENDAR PAY
WHERE PAY.PAY_CONFIRM_RUN = 'N'
and pay.pay_calc_run = 'Y'
and exists (select 'x' from ps_pay_conf_runctl
          where oprid = 'HRBATCH'
            and run_cntl_id = 'pspcnfrm'
            and run_id = pay.run_id)
order by pay.company,pay.paygroup,pay.pay_end_dt
end-select

if $found = 'N'
   do error-found
   print 'Run_ID not found' (+1,34)
   show 'Run_ID not found' 
   stop
else
 if #inputtran > 0
  print 'Total Pay Sheets that are modified : ' (+3,1)
  print #inputtran () edit 99999
  let $inputtran = edit(#inputtran,'9999')
  show ' '
  show 'Total Pay Sheets that are modified : ' $inputtran
  show ' '
  do dummy-procedure
 end-if  
end-if

end-procedure

begin-procedure dummy-procedure
let $tablename = 'PS_DUMMY_TABLE'
begin-select
'x'
from [$tablename]
end-select
end-procedure
!*********************************************************************
!Retrieves the employees with latest paychecks and with garnishment 
!deductions.
!*********************************************************************

begin-procedure process-employee-data
  
move 'N' to $errorfound

!position (+1)

begin-select ON-ERROR=SQL-Error-Found('Process-employee-data')
B.COMPANY  (+1,1)
B.PAYGROUP (, 10)
B.PAY_END_DT (,20)
B.PAGE_NUM (,35)
B.LINE_NUM (,45)
B.ADDL_NBR (,55)
B.OFF_CYCLE (,65)
B.EMPLID (,75)
B.PAY_LINE_STATUS

  add 1 to #inputtran
  let $pay_line_Status = ' '
  Lookup XlatLookup &b.pay_line_status $pay_line_Status

  print $pay_line_status (, 90)

! GBD 06/18/2003 Begin
  let $b_company = &B.COMPANY
  let $b_paygroup = &B.PAYGROUP
  let $b_pay_end_dt = &B.PAY_END_DT
  let $b_page_num = edit(&B.PAGE_NUM,'9999')    
  let $b_line_num = edit(&B.LINE_NUM,'9999')
  let $b_addl_nbr = edit(&B.ADDL_NBR,'9999')
  let $b_off_cycle = &B.OFF_CYCLE
  let $b_emplid = &B.EMPLID
  show '------------------------------------------------------------'
  show 'Company: ' $b_company ', Paygroup: ' $b_paygroup ', Pay End Date: ' $b_pay_end_dt 
  show 'Page: ' $b_page_num ', Line: ' $b_line_num ', Addl: ' $b_addl_nbr 
  show 'Off Cycle: ' $b_off_cycle ', Emplid: ' $b_emplid ', Pay Line Status: ' $pay_line_status
  show '------------------------------------------------------------'
! GBD 06/18/2003 End

FROM PS_PAY_EARNINGS B
WHERE B.COMPANY = &PAY.COMPANY
AND B.PAYGROUP = &PAY.PAYGROUP
AND B.PAY_END_DT = &PAY.PAY_END_DT
AND B.PAY_LINE_STATUS <> 'C'
and b.ok_to_pay = 'Y'
and b.off_cycle = 'N'
ORDER BY B.COMPANY, B.PAYGROUP, B.page_num, b.line_num, b.addl_nbr, b.emplid
end-select

end-procedure


!********************************************************************
!This procedure displays in the error report if there are any sql erros
!happened in the program
!********************************************************************

begin-procedure SQL-Error-Found($Proc_Name) 
  do error-found
  print 'SQL Error in ' (+1,34)
  print $Proc_Name ()  
  print $_sql-error () 
  print 'sql-status:' ()
  print #_sql-status () edit 99999 
  stop
end-procedure

!*********************************************************************
!This procedure displays the error message for the records that are in
!progress
!*********************************************************************

begin-procedure Error-Found
  move 'Y' to $ErrorFound

end-procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'reset.sqc'
