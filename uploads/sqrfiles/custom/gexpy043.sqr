!***********************************************************************
!  GEXPY043: YTD 2% Earnings for FT/PT Vacation                        *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY043:             YTD 2% Earnings for FT/PT Vacation             *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!		      	#debug8 key variable values                    *
!		      	#debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           PS_EARNINGS_BAL                                *
!                       PS_GEX_DEPT_TBL                                *
!                       PS_PERSONAL_DATA                               *
!                       PS_EMPLOYMENT                                  *
!                       PS_JOB                                         *
!                                                                      *
! Written by:           JR                                             *
!                                                                      *
! Normally run:         Annually                                       *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Company Division Code                        *
!                         Company                                      *
!                         Company/Paygroup                             *
!                         Deptid                                       *
!                         Acctcd                                       *
!                         Empl_Status                                  *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS    DATE        DESCRIPTION OF THE CHANGE                   *
!***********************************************************************
!  JR          02/18/98    INITIAL CREATION                            *
!  JNB         04/19/98    ADDED RUN CONTROL                           *
!  JDH         10/28/98    MODIFIED LOGIC TO PRINT EARNINGS INSTEAD OF *
!                           HOURS.                                     *
!                          CORRECTED HEADING PROBLEM.                  *
!  SXK         02/08/99    Modified the where condition variables from *
!                           #asofyyyy to $AsOfYYYY and #asofmonth to   *
!                           #asofmm                                    *
!  SXK         02/09/99    Modified to sort by deptid, f/p, name       *
!                           included union code, changed to look for   *
!                           all types of earnings code and excluded    *
!                           owners, spouses and family members         *
!  JDH         03/19/99    Added logic to exclude non-productive       *
!                           earnings codes.                            *
!  JDH         11/10/99    Added union specific logic.                 *
!                          Modified weeks worked and YTD hours.        *
!  SXK         01/19/00    Modified to have union from job_labor       *
!  PSR         08/08/2002  Modified UNION_CD FROM                      *
!                          JOB_LABOR TO JOB - Upgrade 8.3              *
!           PSR         08/27/02    EMPL_RCD is now part of the key for 
!                                   PS_EARNINGS_BAL - Upgrade 8.3
!                                                                      *
!  GBD         02/03/2003  Commented out logic to reset the AsOfDate to*
!                          31-DEC-previousyear when the asofmonth = 1. *
!                                                                      *
!  GBD         02/10/2003  Added Service Date logic to add prior year  *
!                          hours to current year hours for employees   *
!                          who have not yet reached one year of service*
!                          and changed Hire Dt to Service Dt on report.*
!GEX_PY239 SXD 08/20/2007  No chnages made to sqr.                     *
! VENDAXG      09/24/2008    Modified Code for S3#11373179 
!***********************************************************************


#define #x000_col_selection_criteria_a 	02
#define #x000_col_selection_criteria_b 	05

#define #x000_col_deptid		1
#define #x000_col_acct_cd		13
#define #x000_col_union_cd              27
#define #x000_col_name			40
#define #x000_col_jobcode		92
#define #x000_col_emplid		102
#define #x000_col_hiredate		115
#define #x000_col_fullpart		127
#define #x000_col_grsytd		142
#define #x000_col_avgvacgrs		161

#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 

!*********************************************************************
begin-heading 9
#debug9 show 'begin-heading'
  #Include 'stdhdg02.sqc'

  Let #x000_temp_out = 'Sorted by ' || $x000_order_by
  print $x000_temp_out   (3,) center

  print '-'              (+3,1,174) fill

  print 'DEPT ID'        (+1,{#x000_col_deptid})
  print 'ACCT CODE'      (0,{#x000_col_acct_cd})
  print 'UNION CD'       (0,{#x000_col_union_cd})
  print 'NAME'           (0,{#x000_col_name})
  print 'JOB CODE'       (0,{#x000_col_jobcode})
  print 'EMPLID'         (0,{#x000_col_emplid})
  print 'SERVICE DT'     (0,{#x000_col_hiredate})        ! GBD 02/10/2003
!  print 'HIRE DATE'      (0,{#x000_col_hiredate})       ! GBD 02/10/2003
  print 'FULL/PART'      (0,{#x000_col_fullpart})
  print 'TOTAL EARNINGS' (0,{#x000_col_grsytd})
  print '    2% VAC AMT' (0,{#x000_col_avgvacgrs})

  print '-'              (+1,1,174) fill
end-heading

!*********************************************************************
begin-report
!*********************************************************************
#debug9 show 'begin-report'
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  show 'asoftoday=' $asoftoday

  do stdapi-init
  do p010-Init-Variables 
  
  do Get-Calendar-Year-Id
  do process-main    
  do stdapi-term
  do Reset

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
end-report

!*********************************************************************
begin-procedure P010-Init-Variables
!*********************************************************************
#debug9 show 'P010-Init-Variables'
  let $x000_new_page_flag = 'N'
  
  let $ReportID           = 'GEXPY043'
  let $ReportTitle        = 'YTD 2% Earnings for FT/PT Vacation'
  let $Country            = 'USA'

  show '$ReportID = '    $ReportID
  show '$ReportTitle = ' $ReportTitle   

  Do GEXXX951-Select-Oracle-Instance

  Let $GEXXX900_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
  Let $GEXXX902_Deptid_Alias   = 'J.DEPTID'
  Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'
  Let $GEXXX907_Div_CD_Alias   = 'GDT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias  = 'J.ACCT_CD'

  if $Prcs_process_instance = ''
    Do GEXXX950-Input-Parameters
  else
    Do GEXXX922-Select-Parameters
    Do GEXXX900-Select-Company-Parameters 
    Do GEXXX901-Select-Company-Paygroup-Parameters    
    Do GEXXX902-Select-Deptid-Parameters 
    Do GEXXX903-Select-Emp-Stat-Parameters          
    Do GEXXX907-Select-Div-CD-Parameters
    Do GEXXX909-Select-Acct-CD-Parameters
    Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
  end-if

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  if rtrim($X000_WHERE_SELECT_ASOFDATE, ' ' ) = ''
    let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
    let $AsOfDate = $X000_WHERE_SELECT_ASOFDATE 
  else
    let $AsOfDate = $X000_WHERE_SELECT_ASOFDATE 
  end-if

  do convert-to-dtu-date($asofdate,$asofdate_dtu)
  let #asofmonth_dtu = substr($asofdate_dtu,6,2)
  let #asofyear_dtu = substr($asofdate_dtu,1,4)
  let #prev_year = #asofyear_dtu - 1
  do format-number(#prev_year,$prev_year,'9999')
! GBD 02/03/2003 Begin - commented out logic
!  if #asofmonth_dtu = 1
!     let $asofdate = '31-DEC-'||$prev_year
!  end-if
! GBD 02/03/2003 End
  do Get-Date-Codes
  let #AsOfYYYY = to_number($AsOfYYYY)
  let #AsOfMM   = to_number($AsOfMonth)
  show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA               = ' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  show '$GEXXX900_INCLUDE_COMPANY_CRITERIA              = ' $GEXXX900_INCLUDE_COMPANY_CRITERIA
  show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA     = ' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA   
  show '$GEXXX902_INCLUDE_DEPTID_CRITERIA               = ' $GEXXX902_INCLUDE_DEPTID_CRITERIA
  show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA             = ' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
  show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA              = ' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA         
    
  show '$X000_WHERE_SELECT_ASOFDATE                     = ' $X000_WHERE_SELECT_ASOFDATE

  print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,{#x000_col_selection_criteria_a})
  print '$Prcs_OPRID          ='                                  (+2,{#x000_col_selection_criteria_b})
  print $Prcs_OPRID                                               (0,+2)
  print '$PRCS_RUN_CNTL_ID    ='                                  (+1,{#x000_col_selection_criteria_b})
  print $PRCS_RUN_CNTL_ID                                         (0,+2)

  print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,{#x000_col_selection_criteria_a})
  print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA                 (0,+2)
  print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA                (0,+2)
  print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA       (0,+2)
  print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	          (0,+2)
  print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA               (0,+2)
  print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA                (0,+2)
  print '$X000_WHERE_SELECT_ASOFDATE                         ='   (+1,{#x000_col_selection_criteria_b})
  print  $X000_WHERE_SELECT_ASOFDATE                              (0,+2)

  print '$X000_ORDER_BY                                      ='   (+1,{#x000_col_selection_criteria_b})
  print $X000_ORDER_BY                                            (0,+2)

  let #page-count = 0
  NEW-PAGE

  let $X000_ORDER_BY = 'J.COMPANY, J.DEPTID, J.FULL_PART_TIME, PD.NAME'

  Let $GEXERNCD_Erncd_Alias = 'B.ERNCD'
  Do Get-Non-Productive-Erncds
end-procedure

!*********************************************************************
BEGIN-PROCEDURE Process-Main
!*********************************************************************
#debug9 show 'Process-Main'
  move 0 to #process_cnt
  Let $x100_Get_Employees_Data_Flag = 'N'

BEGIN-SELECT
J.COMPANY () ON-BREAK PRINT=NEVER LEVEL=1
J.DEPTID  () ON-BREAK PRINT=NEVER LEVEL=2 AFTER=DEPTID-BREAK
J.ACCT_CD
J.EMPLID
J.FULL_PART_TIME
J.JOBCODE
J.PAYGROUP
J.EMPL_RCD
E.HIRE_DT             &E.HIRE_DT
J.UNION_CD
PD.NAME
E.SERVICE_DT          &E.SERVICE_DT        ! GBD 02/10/2003
E.GEX_VCN_SENIOR_DT   &E.GEX_VCN_SENIOR_DT ! GBD 02/10/2003

  add  1 to #process_cnt
  let #process_mod = mod(#process_cnt,500) !Display Process_Cnt every 500 rows

  if #process_mod = 0
    show 'Process Count=' #process_cnt edit 999,999
  end-if
  
  let $Company = &J.Company

!  show 'Emplid:   ' &J.EMPLID
!  show 'Empl_Rcd: ' &J.EMPL_RCD#
  do Get-EE-Total-Gross-YTD
! GBD 02/10/2003 Begin

!  display 'Total Current Gross: ' noline
!  display #ee_tot_grs_ytd

  do determine-service-dt

! GBD 02/10/2003 End

  let #ee_avg_vacation_grs = #ee_tot_grs_ytd * 0.02

  print &J.DEPTID                        (+0,{#x000_col_deptid},10)
  print &J.ACCT_CD                       (+0,{#x000_col_acct_cd},3)
  print &J.UNION_CD                      (+0,{#x000_col_union_cd},3)
  print &PD.NAME                         (+0,{#x000_col_name},50)
  print &J.JOBCODE                       (+0,{#x000_col_jobcode},08)
  print &J.EMPLID                        (+0,{#x000_col_emplid},11)
  move '1' to $Year4
! GBD 02/10/2003 Begin
  do Format-DateTime(&E.SERVICE_DT, $out, {DEFDATE}, '', '')
  print $out                               (+0,{#x000_col_hiredate},10)
!  do Format-DateTime(&E.HIRE_DT, $out, {DEFDATE}, '', '')
!  print $out                               (+0,{#x000_col_hiredate},10)
! GBD 02/10/2003 End

  move 'FULL_PART_TIME'   to $FieldName
  move &J.FULL_PART_TIME  to $FieldValue
  do Read-Translate-Table
  print $XlatShortName                     (+0,{#x000_col_fullpart},09)
  let $out = edit(#ee_tot_grs_ytd,'999,999,999.99')
  print $out                               (+0,{#x000_col_grsytd},14)
  let $out = edit(#ee_avg_vacation_grs,'999,999,999.99')
  print $out                               (+0,{#x000_col_avgvacgrs},14)

  next-listing need=1
  Let $x100_Get_Employees_Data_Flag = 'Y'

FROM   PS_GEX_DEPT_TBL   GDT,
       PS_PERSONAL_DATA  PD,
       PS_GEX_PERSON GEX, !Vendaxg Added Code for S3#11373179 
       PS_EMPLOYMENT     E,
       PS_JOB            J

WHERE  E.EMPLID            = J.EMPLID
AND    E.EMPL_RCD         = J.EMPL_RCD
AND    E.EMPLID = GEX.EMPLID !Vendaxg Added Code for S3#11373179 

AND    PD.EMPLID           = J.EMPLID

AND    J.EFFDT             =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID       = J.EMPLID
       AND    EMPL_RCD    = J.EMPL_RCD
       AND    EFFDT       <= $X000_WHERE_SELECT_ASOFDATE)

AND    J.EFFSEQ            =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID       = J.EMPLID
       AND    EMPL_RCD    = J.EMPL_RCD
       AND    EFFDT        = J.EFFDT)
!Vendaxg Modified Code for S3#11373179 - Begin
!AND    PD.GEX_FAMILY_MBR NOT IN ('FAM','OWN','SPO')
AND    GEX.GEX_FAMILY_MBR NOT IN ('FAM','OWN','SPO')
!Vendaxg Modified Code for S3#11373179 - End
AND    J.DEPTID            = GDT.DEPTID 

AND    GDT.EFFDT           =
      (SELECT MAX(EFFDT)
       FROM   PS_GEX_DEPT_TBL
       WHERE  DEPTID       = GDT.DEPTID
       AND    EFFDT       <= $X000_WHERE_SELECT_ASOFDATE)

AND    GDT.SEQUENCE_NUMBER =
      (SELECT MAX(SEQUENCE_NUMBER)
       FROM   PS_GEX_DEPT_TBL
       WHERE  DEPTID       = GDT.DEPTID
       AND    EFFDT        = GDT.EFFDT)

AND   [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
AND   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
AND   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
AND   [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
AND   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
AND   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]

ORDER BY [$x000_order_by]
END-SELECT

  show 'Process Count=' #process_cnt edit 999,999

  if $x100_Get_Employees_Data_Flag = 'N'
    print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) CENTER
  end-if
END-PROCEDURE

!*********************************************************************
BEGIN-PROCEDURE DEPTID-BREAK
!*********************************************************************
  NEW-PAGE
END-PROCEDURE

!*********************************************************************
BEGIN-PROCEDURE Get-EE-Total-Gross-YTD
!*********************************************************************
#debug9 Show 'Get-EE-Total-Gross-YTD'
  move 0 to #ee_tot_grs_ytd

  display '$AsOfYYYY:  ' noline
  display $AsOfYYYY
  display '#AsOfMM:    ' noline
  display #AsOfMM

BEGIN-SELECT
SUM(B.GRS_YTD) &B.GRS_YTD

  add &B.GRS_YTD to #ee_tot_grs_ytd

FROM   PS_EARNINGS_BAL B

WHERE  B.EMPLID               = &J.EmplID
AND    B.COMPANY              = &J.Company
AND    B.BALANCE_ID           = $Calendar_Year_Id
AND    B.BALANCE_YEAR         = $AsOfYYYY
And    b.empl_rcd	      = &j.empl_rcd
AND    B.BALANCE_PERIOD       =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_EARNINGS_BAL
       WHERE  EMPLID          = B.EMPLID
       AND    COMPANY         = B.COMPANY
       AND    BALANCE_ID      = B.BALANCE_ID
       AND    BALANCE_YEAR    = B.BALANCE_YEAR
       AND    BALANCE_PERIOD <= #AsOfMM
       AND    SPCL_BALANCE    = B.SPCL_BALANCE
       And    empl_rcd      =   b.empl_rcd
       AND    ERNCD           = B.ERNCD)
AND    B.SPCL_BALANCE         = 'N'
AND   [$GEXERNCD_EXCLUDE_ERNCD_CRITERIA]
end-select
END-PROCEDURE

! GBD 02/10/2003 Begin
!*********************************************************************
!This procedure finds out the appropriate service date and finds out
!if the employee has met his/her service anniversary during the current
!pay period.
!*********************************************************************
begin-procedure determine-service-dt
#debug9 Show 'determine-service-dt'

  if RTRIM(&E.GEX_VCN_SENIOR_DT,' ') <> ''
    move &E.GEX_VCN_SENIOR_DT to $service_dt
  else
    move &E.SERVICE_DT to $service_dt
  end-if

!  show 'AsOfDate:   ' $AsOfDate
!  show 'Service Dt: ' $service_dt

  do Convert-To-DTU-Date($service_dt, $service_dt_dtu)

  do dtu-diff-months($service_dt_dtu,$AsOfDate_dtu,#dtu_months)
  do dtu-diff-months($service_dt_dtu,$AsOfDateMinus1_dtu,#dtu_monthsMinus1)

!  do dtu-diff-years($service_dt_dtu,$AsOfDate_dtu,#dtu_years)
!  do dtu-diff-years($service_dt_dtu,$AsOfDateMinus1_dtu,#dtu_yearsMinus1)

!  display '#dtu_months:       ' noline
!  display #dtu_months
!  display '#dtu_monthsMinus1: ' noline
!  display #dtu_monthsMinus1

  if #dtu_months <> #dtu_monthsMinus1
    if #dtu_months < 12
      move 'Y' to $first_year_service
    else
      move 'N' to $first_year_service
    end-if
  else
     if #dtu_months < 12
       move 'Y' to $first_year_service
     else
      move 'N' to $first_year_service
    end-if
  end-if

!  display 'first_year_service: ' noline
!  display $first_year_service

  if $first_year_service = 'Y'
     let $asofyr = substr($AsOfDate,8,4)
     let $service_yr = substr($service_dt,8,4)
     show 'asofyr:     ' $asofyr
     show 'service_yr: ' $service_yr
     if $asofyr <> $service_yr
        Do Get-EE-Total-Gross-YTD-Prev
     end-if
  end-if

end-procedure

!*********************************************************************
BEGIN-PROCEDURE Get-EE-Total-Gross-YTD-Prev
!*********************************************************************
#debug9 Show 'Get-EE-Total-Gross-YTD-Prev'
  move 0 to #ee_tot_grs_ytd_prev

!** Change the Alias for the Erncd exclusion string for the following select **
!  show 'GEXERNCD_EXCLUDE_ERNCD_CRITERIA: ' $GEXERNCD_EXCLUDE_ERNCD_CRITERIA
  let #length_gexerncd = length($GEXERNCD_EXCLUDE_ERNCD_CRITERIA) - 2
  let $GEXERNCD_PREV = '(P'||substr($GEXERNCD_EXCLUDE_ERNCD_CRITERIA,3,#length_gexerncd)
!  show 'GEXERNCD_PREV: ' $GEXERNCD_PREV

!  show 'Prev Year: ' $prev_year

BEGIN-SELECT
SUM(P.GRS_YTD) &P.GRS_YTD

  add &P.GRS_YTD to #ee_tot_grs_ytd_prev

FROM   PS_EARNINGS_BAL P

WHERE  P.EMPLID               = &J.EmplID
AND    P.COMPANY              = &J.Company
AND    P.BALANCE_ID           = $Calendar_Year_Id
AND    P.BALANCE_YEAR         = $prev_year
AND    P.EMPL_RCD             = &J.EMPL_RCD
AND    P.BALANCE_PERIOD       =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_EARNINGS_BAL
       WHERE  EMPLID          = P.EMPLID
       AND    COMPANY         = P.COMPANY
       AND    BALANCE_ID      = P.BALANCE_ID
       AND    BALANCE_YEAR    = P.BALANCE_YEAR
       AND    BALANCE_PERIOD <= 12
       AND    SPCL_BALANCE    = P.SPCL_BALANCE
       AND    EMPL_RCD        = P.EMPL_RCD
       AND    ERNCD           = P.ERNCD)
AND    P.SPCL_BALANCE         = 'N'
AND   [$GEXERNCD_PREV]
end-select

  if #ee_tot_grs_ytd_prev > 0
     add #ee_tot_grs_ytd_prev to #ee_tot_grs_ytd
  end-if

!  display 'Total Prev Gross:    ' noline
!  display #ee_tot_grs_ytd_prev

END-PROCEDURE
! GBD 02/10/2003 End

!*********************************************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'datemath.sqc'
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'getbalid.sqc'  !Get-Balance-ID procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'gexxx950.sqc'  !Get SQRW Run Controls
#Include 'gexxx951.sqc'  !Select Oracle Instance
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexerncd.sqc'  !Get non-productive earnings codes
