!********************************************************************!
!XXXPRERL.SQR - XXX PRE ENROLLMENT DATA EXTRACT                      !
!********************************************************************!
!         !!!!!  This version is for HR 9.0 PeopleSoft !!!!!         !
!********************************************************************!
!                                                                    !
!Description - This program is designed to export data from five     !
!              populations of data for XXX pre-benefit processing.   !
!              The five populations are benefits data, pre-dependent !
!              data, current benefit data, pre-deduction data and job!
!              data. These files are then sent to XXX for processing.!
!                                                                    !
!  ^^^^^^^^^^^NOTE^^^^^^^^^^^^^                                      !
!  If processing time is an issue due to large employee populations, !
!  Changes could be made to speed processing, including the use of   !
!  Load lookups and / or arrays.  They are not added here as this is !
!  the most straight forward approach for any viewing the code to    !
!  follow and understand.                                            !
!                                                                    !
!Database Tables:                                                    !
!                 PS_BEN_PROG_PARTIC      SELECT                     !
!                 PS_BENEF_PLAN_TBL       SELECT                     !
!                 PS_CBP_BENPLN_DATA      INSERT/UPDATE/SELECT       !
!                 PS_CBP_RUN_XXXPRE       SELECT                     !
!                 PS_DEP_BENEF_NID        SELECT                     !
!                 PS_DEPENDENT_BENEF      SELECT                     !
!                 PS_EMPLOYEES            SELECT                     !
!                 PS_EMPLOYMENT           SELECT                     !
!                 PS_FED_TAX_DATA         SELECT                     !
!                 PS_FSA_BENEFIT          SELECT                     !
!                 PS_HEALTH_BENEFIT       SELECT                     !
!                 PS_HEALTH_DEPENDNT      SELECT                     !
!                 PS_JOB                  SELECT                     !
!                 PS_JOBCODE_TBL          SELECT                     !
!                 PS_LIFE_ADD_BENEFC      SELECT                     !
!                 PS_PAY_CHECK            SELECT                     !
!                 PS_PAY_DEDUCTION        SELECT                     !
!                 PS_PAYGROUP_TBL PG      SELECT                     !
!                 PS_PERS_DATA_EFFDT      SELECT                     !
!                 PS_PERS_NID             SELECT                     !
!                 PS_PERSON               SELECT                     !
!                 PS_PERSON_PHONE         SELECT                     !
!                 PS_PERSON_ADDRESS       SELECT                     !
!                 PS_PERSON_NAME          SELECT                     !
!                 PS_SAVINGS_BENEFIC      SELECT                     !
!                 PS_SET_CNTRL_REC        SELECT                     !
!                 PS_STATE_TAX_DATA       SELECT                     !
!                                                                    !
!                                                                    !
!Runtime Prompts: Output File location                               !
!                                                                    !
!Output:  5 files, one per file required                             !
!                                                                    !
!********************************************************************!
!Author    Whitney, Greg   Crestone International, Inc.              !
!Created   10/24/03                                                  !
!********************************************************************!
!
! Date       programmer                    Modification
! ----       ----------     --------------------------------------------
! GEX001 09/16/2010 ISDVVXK        Modifications to the Job file and Pre Dep file
!***********************************************************************

!-----------------------------------------------------------------------
!   Set Environment                                                    -
!-----------------------------------------------------------------------
#include 'setenv.sqc'    !Set environment
#include 'setup01.sqc'   !Printer and page-size initialization

! Default values for sqr, #define values, see input section

!-----------------------------------------------------------------------
!  Report Calls                                                        -
!-----------------------------------------------------------------------
begin-report

        do init-number
        do init-datetime
        do get-current-datetime
        do Init-Report
        show ' '
        display 'Start Run Time: ' noline
        do display-time
        
        let #file_num = 3
        do open-file($job_file, #file_num)
        do job-file  
        do close-file(3)

        let #file_num = 5
        do open-file($pre_dep_file, #file_num)
        do pre-dep-file
        do close-file(5)
   
        show ' '
        display 'End Run Time: ' noline
        do display-time
        do Stdapi-Term

end-report


!-----------------------------------------------------------------------
! Function:    display-time                                            -
! Description: gets current date time and displays it                  -
! Called By:   Report                                                  -
! Calls:       get-current-datetime                                    -
!-----------------------------------------------------------------------
begin-procedure display-time

        do get-current-datetime
        display $asofnow
        show ' '
        
end-procedure


!-----------------------------------------------------------------------
! Function:    Init-Report                                             -
! Description: this section initializes all the variables              -
! Called By:   Report                                                  -
! Calls:       Select-Parameters, Ask-Values                           -
!-----------------------------------------------------------------------
begin-procedure Init-Report

  move 'GEXBN636'   to $ReportID !GEX001
  move 'Pre-Enrl File Creation ' to $ReportTitle
  display $ReportTitle

  do Stdapi-Init

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-prcsoutputdir !procedure to get the output destination
    do Select-Parameters
  end-if

   Let $Quote = '"'
   Let $Comma = ','
   LET $52    = '52'
 
end-procedure Init-Report


!-----------------------------------------------------------------------
! Function:    ASK-VALUES                                              -
! Description: Obtain input values upon execution using SQRW.          -
! Called By:   Init-Report                                             -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure ask-values
#debugd show 'Ask-Values'

  input $job_file          maxlen=500 'Enter the job_file file output location like c:\temp\job_file.csv' type=char
  input $pre_dep_file      maxlen=500 'Enter the pre_dep_file file output location like c:\temp\pre_dep_file.csv' type=char

  show ' '
  show '*** File Locations ***'
  show $job_file   
  show $pre_dep_file   
  show ' '
  
end-procedure


!-----------------------------------------------------------------------
! Function:    Select-Parameters                                       -
! Description: Select Values from Run Control                          -
! Called By:   Init-Report                                             -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Select-Parameters
#debugd show 'Select-Parameters'

 show '$prcs_run_cntl_id = ' $prcs_run_cntl_id
 show '$prcs_oprid       = ' $prcs_oprid
 move '' to $SlctDedCriteria
 move '' to $SlctDedCriteria1
 move '' to $DedCriteria
 LET $Todays_Date = edit($AsofToday,'mmddyyyy') !GEX001

BEGIN-SELECT
RC.FILE_PATH
RC.RUNDATE !GEX001

 let $job_file         = $origoutdest || $ReportID ||'_'|| $Todays_Date || '_' || 'job_file.csv'  !GEX001
 let $pre_dep_file     = $origoutdest || $ReportID ||'_'|| $Todays_Date || '_' || 'pre_dep_file.csv' !GEX001
 
 if ISNULL(&RC.RUNDATE)
   MOVE $ASOFTODAY TO $RUNDATE
 ELSE  
   MOVE &RC.RUNDATE TO $RUNDATE
 END-IF  
 show '&RC.RUNDATE :' &RC.RUNDATE
 show '$RUNDATE    :' $RUNDATE

FROM PS_CBP_RUN_XXXPRE RC
WHERE RC.oprid       = $prcs_oprid
  AND RC.run_cntl_id = $prcs_run_cntl_id
END-SELECT

!GEX001-Begins
BEGIN-SELECT
RC1.DEDCD

 if isnull($DedCriteria)
    let $DedCriteria = $DedCriteria ||''''|| &RC1.DEDCD || ''''
 else
    let $DedCriteria = $DedCriteria ||','||''''|| &RC1.DEDCD || ''''
 end-if
   show '$DedCriteria :' $DedCriteria
   
FROM PS_GEX_CBP_RUN RC1
WHERE RC1.oprid       = $prcs_oprid
AND RC1.run_cntl_id = $prcs_run_cntl_id
END-SELECT
 
 if isnull($DedCriteria)
  move '' to $SlctDedCriteria
  move '' to $SlctDedCriteria1
 else
  let $SlctDedCriteria = 'DD.DEDCD in (' || $DedCriteria || ')' || ' AND'
  let $SlctDedCriteria1 ='GEN.DEDCD in (' || $DedCriteria || ')' || ' AND'
 end-if 
!GEX001-Ends
  show ' '
  show '*** File Locations ***'
  show 'Job Data File:            ' $job_file   
  show 'Pre Dependent File:       ' $pre_dep_file   
  show ' '
  show '$SlctDedCriteria :' $SlctDedCriteria
  show '$SlctDedCriteria1:' $SlctDedCriteria1
  
end-procedure !Select-Parameters

!-----------------------------------------------------------------------
! Function:    Open-File                                               -
! Description: Opens Files for Writing                                 -
! Called By:   Report                                                  -
! Calls:       None                                                    -
! Parameters:  $file_name and #file_num                                - 
!-----------------------------------------------------------------------
begin-procedure open-file($file_name, #file_num)

Let #numTest = delete($File_Name)

open $file_name as #file_num 
     for-writing 
     record=1500:fixed
     status=#filestatus

     if #filestatus = -1
       show ' '
       show ' '
       show ' ***** WARNING ***** Open for ' $file_name ' in program ' $report_name ' failed.'
       show ' '
       show ' '
       stop quiet
     else
       let $error_flag = 'N'
       show ' '
       show 'File Opened for Writing: ' $file_name
     end-if

end-procedure open-file


!-----------------------------------------------------------------------
! Function:    Close-File                                              -
! Description: Closes Files                                            -
! Called By:   Report                                                  -
! Calls:       None                                                    -
! Parameters:  #file_num                                               - 
!-----------------------------------------------------------------------
begin-procedure close-file(#file_num)

close #file_num
 
end-procedure close-file

!-----------------------------------------------------------------------
! Function:    job-file                                                -
! Description: Process Job and Personal Data and write it out          -
! Called By:   Report                                                  -
! Calls:       get-jobcode                                             -
!              get-per1                                                -
!              get-per2                                                -
!              get-per3                                                -
!              get-per4                                                -
!              get-per5                                                - 
!              get-persnid                                             -
!              get-PAYGROUP                                            -
!              get-fedtax                                              -
!              get-statetax                                            - 
!              GET-GEX-EMPLID                                          -
!              write-row-job-file                                      -
!              GET-BEN-PROG                                            -
!-----------------------------------------------------------------------
begin-procedure job-file
#debugd show 'job-file'

  do write-header-job-file
  do get-52-weeks
     
BEGIN-SELECT
J1.JOBCODE  
J1.DEPTID 
J1.EMPL_TYPE 
J1.FULL_PART_TIME 
J1.STD_HOURS 
J1.HOURLY_RT !GEX001
J1.ANNUAL_RT 
J1.COMPANY 
J1.PAYGROUP 
J1.EMPL_CLASS 
J1.REG_TEMP 
J1.EMPL_STATUS 
J1.OFFICER_CD 
J1.ELIG_CONFIG1 
J1.ELIG_CONFIG2 
J1.ELIG_CONFIG3 
J1.ELIG_CONFIG4 
J1.ELIG_CONFIG5 
J1.ELIG_CONFIG6 
J1.ELIG_CONFIG7 
J1.ELIG_CONFIG8 
J1.ELIG_CONFIG9 
J1.EFFDT
J1.EMPLID
J1.EMPL_RCD
J1.BUSINESS_UNIT
J1.ANNL_BENEF_BASE_RT
J1.LOCATION
J1.PER_ORG
J1.UNION_CD 
J1.LAST_HIRE_DT

        let $EMPLID             = &J1.EMPLID         
        let $EMPL_RCD           = &J1.EMPL_RCD
        let $JOBCODE            = &J1.JOBCODE         
        let $DEPTID             = &J1.DEPTID          
        let $EMPL_TYPE          = &J1.EMPL_TYPE       
        let $FULL_PART_TIME     = &J1.FULL_PART_TIME  
        let $STD_HOURS          = &J1.STD_HOURS   
        let $HOURLY_RT          = &J1.HOURLY_RT !GEX001
        let $ANNUAL_RT          = &J1.ANNUAL_RT       
        let $COMPANY            = &J1.COMPANY         
        let $PAYGROUP           = &J1.PAYGROUP        
        let $EMPL_CLASS         = &J1.EMPL_CLASS      
        let $REG_TEMP           = &J1.REG_TEMP        
        let $EMPL_STATUS        = &J1.EMPL_STATUS     
        let $OFFICER_CD         = &J1.OFFICER_CD      
        let $ELIG_CONFIG1       = &J1.ELIG_CONFIG1    
        let $ELIG_CONFIG2       = &J1.ELIG_CONFIG2    
        let $ELIG_CONFIG3       = &J1.ELIG_CONFIG3    
        let $ELIG_CONFIG4       = &J1.ELIG_CONFIG4    
        let $ELIG_CONFIG5       = &J1.ELIG_CONFIG5    
        let $ELIG_CONFIG6       = &J1.ELIG_CONFIG6    
        let $ELIG_CONFIG7       = &J1.ELIG_CONFIG7    
        let $ELIG_CONFIG8       = &J1.ELIG_CONFIG8    
        let $ELIG_CONFIG9       = &J1.ELIG_CONFIG9 
        LET $ANNL_BENEF_BASE_RT = &J1.ANNL_BENEF_BASE_RT
        LET $LOCATION           = &J1.LOCATION    
        LET $UNION_CD           = &J1.UNION_CD 
        LET $LAST_HIRE_DT       = &J1.LAST_HIRE_DT
#debug7 show 'job-file emplid ' $EMPLID
#debug7 show 'job-file union code '$UNION_CD

  !GEX001-Begins
  IF &J1.EMPL_TYPE='H'
     MOVE 0 TO $ANNUAL_RT
  ELSE
     MOVE 0 TO $HOURLY_RT
  END-IF   
  !GEX001-Ends
        
        DO GET-JOBCODE
        DO GET-PER1
        DO GET-PER2
        DO GET-PER3
        DO GET-PER4
        DO GET-PER5
        DO GET-PERSNID
        DO GET-PAYGROUP
        DO GET-FEDTAX
        DO GET-STATETAX
        DO GET-BEN-PROG
        DO GET-GEX-EMPLID
        DO get-benefit-service-date
        DO get-current-pay-deductions
        DO get-average-hours-worked
        
        DO WRITE-ROW-JOB-FILE

FROM PS_JOB J1
WHERE J1.EMPL_STATUS IN ('A','L','P','S')
  AND J1.EFFDT       = (SELECT MAX(C_ED.EFFDT) FROM PS_JOB C_ED 
                        WHERE J1.EMPLID   = C_ED.EMPLID 
                          AND J1.EMPL_RCD = C_ED.EMPL_RCD 
                          AND C_ED.EFFDT <= $RUNDATE) !GEX
  AND J1.EFFSEQ      = (SELECT MAX(C_ES.EFFSEQ) FROM PS_JOB C_ES 
                        WHERE J1.EMPLID   = C_ES.EMPLID 
                          AND J1.EMPL_RCD = C_ES.EMPL_RCD 
                          AND J1.EFFDT    = C_ES.EFFDT) 
  AND J1.COMPANY <> J1.PAYGROUP                               !Exclude Giant Eagle Independent store locations
ORDER BY J1.EMPLID
END-SELECT

end-procedure job-file


!-----------------------------------------------------------------------
! Function:    get-per1                                                -
! Description: Get personal information                                -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-per1
#debugd show '...get-per1'

        let $BIRTHDATE      = ' '      
        
begin-select
PER1.BIRTHDATE                   

        let $BIRTHDATE      = &PER1.BIRTHDATE      
        
FROM PS_PERSON PER1
WHERE PER1.EMPLID   = &J1.EMPLID
end-select

end-procedure get-per1


!-----------------------------------------------------------------------
! Function:    get-per2                                                -
! Description: Get Name information                                    -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-per2
#debugd show '...get-per2'

        let $NAME           = ' '           
        let $LAST_NAME      = ' '      
        let $MIDDLE_NAME    = ' '    
        let $FIRST_NAME     = ' ' 

begin-select
PER2.NAME        
PER2.LAST_NAME   
PER2.MIDDLE_NAME  
PER2.FIRST_NAME  

        let $NAME           = &PER2.NAME           
        let $LAST_NAME      = &PER2.LAST_NAME      
        let $MIDDLE_NAME    = &PER2.MIDDLE_NAME    
        let $FIRST_NAME     = &PER2.FIRST_NAME 
        
FROM PS_PERSON_NAME     PER2
WHERE PER2.EMPLID = &J1.EMPLID
end-select

end-procedure get-per2


!-----------------------------------------------------------------------
! Function:    get-per3                                                -
! Description: Get personal address information                        -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-per3
#debugd show '...get-per3'

        let $ADDRESS1       = ' '
        let $ADDRESS2       = ' '
        let $CITY           = ' '
        let $STATE          = ' '
        let $POSTAL         = ' ' 

begin-select
PER3.ADDRESS1  
PER3.ADDRESS2  
PER3.CITY       
PER3.STATE     
PER3.POSTAL   

        let $ADDRESS1       = &PER3.ADDRESS1       
        let $ADDRESS2       = &PER3.ADDRESS2       
        let $CITY           = &PER3.CITY           
        let $STATE          = &PER3.STATE          
        let $POSTAL         = &PER3.POSTAL 
        
FROM PS_PERSON_ADDRESS  PER3
WHERE PER3.EMPLID = &J1.EMPLID
end-select

end-procedure get-per3


!-----------------------------------------------------------------------
! Function:    get-per4                                                -
! Description: Get phone number                                        -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-per4
#debugd show '...get-per4'

        let $PHONE          = ' '

begin-select
PER4.PHONE   

        let $PHONE          = &PER4.PHONE 
        
FROM PS_PERSON_PHONE    PER4
WHERE PER4.EMPLID = &J1.EMPLID
end-select

end-procedure get-per4


!-----------------------------------------------------------------------
! Function:    get-per5                                                -
! Description: Get personal data information                           -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-per5
#debugd show '...get-per5'

        let $SEX            = ' '            
        let $MAR_STATUS     = ' '
        
begin-select
PER5.SEX           
PER5.MAR_STATUS 

        let $SEX            = &PER5.SEX            
        let $MAR_STATUS     = &PER5.MAR_STATUS 
        
FROM PS_PERS_DATA_EFFDT PER5
WHERE PER5.EMPLID = &J1.EMPLID
  AND PER5.EFFDT = (SELECT MAX(PER5X.EFFDT) 
                    FROM PS_PERS_DATA_EFFDT PER5X 
                    WHERE PER5X.EMPLID = &J1.EMPLID)
end-select

end-procedure get-per5


!-----------------------------------------------------------------------
! Function:    get-jobcode                                             -
! Description: Get jobcode information                                 -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-jobcode
#debugd show '...get-jobcode'

        let $DESCR = ' '
        
BEGIN-SELECT
JC.DESCR

        LET $DESCR = &JC.DESCR 
        
FROM PS_JOBCODE_TBL JC, 
     PS_SET_CNTRL_REC B2
WHERE JC.JOBCODE       = &J1.JOBCODE 
  AND B2.SETCNTRLVALUE = &J1.BUSINESS_UNIT
  AND B2.RECNAME       = 'JOBCODE_TBL'
  AND B2.SETID         = JC.SETID
  AND JC.EFFDT         = (SELECT MAX(JC1.EFFDT) FROM PS_JOBCODE_TBL JC1 
                          WHERE JC1.SETID   = JC.SETID 
                            AND JC1.JOBCODE = JC.JOBCODE 
                            AND JC1.EFFDT  <= &J1.EFFDT)  
END-SELECT

end-procedure get-jobcode


!-----------------------------------------------------------------------
! Function:    get-persnid                                             -
! Description: Get persnid information                                 -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-persnid
#debugd show '...get-persnid'

        let $NATIONAL_ID = ' '
        
BEGIN-SELECT
PDB.NATIONAL_ID 

        LET $NATIONAL_ID = &PDB.NATIONAL_ID  

FROM PS_PERS_NID PDB
WHERE PDB.EMPLID = &J1.EMPLID  
END-SELECT

end-procedure get-persnid


!-----------------------------------------------------------------------
! Function:    get-PAYGROUP                                            -
! Description: Get pay frequency information                           -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-PAYGROUP
#debugd show '...get-paygroup'

        let $PAY_FREQUENCY = ' '
        
BEGIN-SELECT
PG.PAY_FREQUENCY 

        LET $PAY_FREQUENCY = &PG.PAY_FREQUENCY  

FROM PS_PAYGROUP_TBL PG
WHERE PG.COMPANY  = &J1.COMPANY  
  AND PG.PAYGROUP = &J1.PAYGROUP 
  AND PG.EFFDT    = (SELECT MAX(PG1.EFFDT) FROM PS_PAYGROUP_TBL PG1 
                    WHERE PG1.COMPANY  = PG.COMPANY 
                      AND PG1.PAYGROUP = PG.PAYGROUP  
                      AND PG1.EFFDT   <= &J1.EFFDT)
END-SELECT

end-procedure get-PAYGROUP


!-----------------------------------------------------------------------
! Function:    get-fedtax                                              -
! Description: Get fed tax information                                 -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-fedtax
#debugd show '...get-fedtax'

        let $FWT_MAR_STATUS = ' ' 
        let $FWT_ALLOWANCES = ' '
        
BEGIN-SELECT
FTD.FWT_MAR_STATUS 
FTD.FWT_ALLOWANCES 

        LET $FWT_MAR_STATUS = &FTD.FWT_MAR_STATUS 
        LET $FWT_ALLOWANCES = &FTD.FWT_ALLOWANCES 

FROM PS_FED_TAX_DATA FTD 
WHERE FTD.EMPLID  = &J1.EMPLID  
  AND FTD.COMPANY = &J1.COMPANY
  AND FTD.EFFDT   = (SELECT MAX(D_ED.EFFDT) FROM PS_FED_TAX_DATA D_ED 
                     WHERE FTD.EMPLID  = D_ED.EMPLID 
                       AND FTD.COMPANY = D_ED.COMPANY 
                       AND D_ED.EFFDT <= &J1.EFFDT)
END-SELECT

END-PROCEDURE GET-FEDTAX


!-----------------------------------------------------------------------
! Function:    get-statetax                                            -
! Description: Get state tax information                               -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-statetax
#debugd show '...get-statetax'

        let $SWT_MAR_STATUS = ' ' 
        let $SWT_ALLOWANCES = ' '
        
BEGIN-SELECT
STE.SWT_MAR_STATUS 
STE.SWT_ALLOWANCES 

        LET $SWT_MAR_STATUS = &STE.SWT_MAR_STATUS 
        LET $SWT_ALLOWANCES = &STE.SWT_ALLOWANCES  

FROM PS_STATE_TAX_DATA STE
WHERE STE.EMPLID  = &J1.EMPLID  
  AND STE.COMPANY = &J1.COMPANY
  AND STE.EFFDT   = (SELECT MAX(E_ED.EFFDT) FROM PS_STATE_TAX_DATA E_ED 
                     WHERE STE.EMPLID  = E_ED.EMPLID 
                       AND STE.COMPANY = E_ED.COMPANY 
                       AND E_ED.EFFDT <= &J1.EFFDT)
END-SELECT

END-PROCEDURE GET-STATETAX


!-----------------------------------------------------------------------
! Function:    get-ben-prog                                            -
! Description: Get Benefit Program (ben program that is inserted       -
!              (usually defaulted paygroup) when emplid is hired.      -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-ben-prog
#debugd show '...get-ben-prog'

        let $BENEFIT_PROGRAM = ' ' 
        
BEGIN-SELECT
BPP1.BENEFIT_PROGRAM

        LET $BENEFIT_PROGRAM = &BPP1.BENEFIT_PROGRAM

FROM PS_BEN_PROG_PARTIC BPP1
WHERE BPP1.EMPLID         = &J1.EMPLID
  AND BPP1.EMPL_RCD       = &J1.EMPL_RCD
  AND BPP1.COBRA_EVENT_ID = 0                  
  AND BPP1.EFFDT          = (SELECT MAX(BPP2.EFFDT) FROM PS_BEN_PROG_PARTIC BPP2
                           WHERE BPP2.EMPLID          = BPP1.EMPLID
                             AND BPP2.EMPL_RCD        = BPP1.EMPL_RCD
                             AND BPP2.COBRA_EVENT_ID  = 0
                             AND BPP2.EFFDT          <= &J1.EFFDT)
END-SELECT

end-procedure get-ben-prog


!-----------------------------------------------------------------------
! Function:    get-gex-emplid                                          -
! Description: Get Giant Eagles 7 digit emplid                         -
! Called By:   job-file, pre-dep-file                                  -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-gex-emplid
#debugd show '...get-gex-emplid'

        let $GEX-EMPLID = ' '
        
BEGIN-SELECT
GEX.EMPLID

        LET $GEX-EMPLID = &GEX.EMPLID

FROM PS_GEX_EMPLID_MAPP GEX
WHERE GEX.SSN      = $EMPLID
END-SELECT

end-procedure get-gex-emplid
!-----------------------------------------------------------------------
! Function:    get-52-weeks                                            -
! Description: Get Giant Eagles 52 weeks                               -
! Called By:   job-file, pre-dep-file                                  -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-52-weeks
#debugd show '...get-52-weeks'

  do convert-to-dtu-date($RUNDATE,$today_dtu)
  do dtu-subtract-days($today_dtu,366,$begin_dt_dtu)
  do convert-from-dtu-date($begin_dt_dtu,$begin_Dt)
  display $begin_dt
 
begin-select 

Y1.PAY_END_DT 
Y1.pay_begin_dt 

  move &Y1.PAY_END_DT to $pay_end_dt
  move &Y1.PAY_BEGIN_DT TO $pay_begin_dt

FROM PS_PAY_CALENDAR Y1
WHERE Y1.PAY_END_DT = (SELECT MAX(PAY_END_DT)
                         FROM PS_PAY_CALENDAR
                        WHERE PAY_END_DT >= $begin_dt
                          AND PAY_BEGIN_DT <= $begin_dt)
  AND Y1.RUN_ID > ' '

end-select

end-procedure get-52-weeks
!-----------------------------------------------------------------------
! Function:    get-average-hours-worked                                -
! Description: Get Giant Eagles Average hours worked                   -
! Called By:   job-file, pre-dep-file                                  -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-average-hours-worked
#debugd show '...get-average-hours-worked'
        
BEGIN-SELECT
COUNT(PAYCHECK_NBR) &COUNT_PAYS

FROM PS_PAY_CHECK AVGHRS
WHERE AVGHRS.EMPLID      = $EMPLID
  AND AVGHRS.EMPL_RCD    = $EMPL_RCD
  and AVGHRS.PAY_END_DT BETWEEN $pay_end_dt AND $RUNDATE !GEX
END-SELECT
        
BEGIN-SELECT
sum(B.oth_hrs) &b.oth_hrs

  if &COUNT_PAYS > 0
    let #avg_weekly_hrs_worked = &b.oth_hrs / &COUNT_PAYS
    multiply 1 times #avg_weekly_hrs_worked round=2
    let $AVG_HOURS          = #avg_weekly_hrs_worked       
  end-if 

FROM PS_PAY_EARNINGS A, PS_PAY_OTH_EARNS B 
WHERE A.COMPANY = B.COMPANY 
AND A.PAYGROUP = B.PAYGROUP 
AND A.PAY_END_DT = B.PAY_END_DT 
AND A.OFF_CYCLE = B.OFF_CYCLE 
AND A.PAGE_NUM = B.PAGE_NUM 
AND A.LINE_NUM = B.LINE_NUM 
AND A.ADDL_NBR = B.ADDL_NBR 
AND A.emplid = $EMPLID
and A.empl_rcd = $EMPL_RCD
and A.company = $COMPANY
and A.PAY_END_DT BETWEEN $pay_end_dt AND $RUNDATE !GEX
END-SELECT

end-procedure get-average-hours-worked


!*********************************************************************
begin-procedure get-current-pay-deductions
#debugd show '...get-current-pay-deductions'

  let $MONTH_DEDUCT = 0
  let #MONTH_DEDUCT = 0
  let $WEEK_DEDUCT = 0
  let #WEEK_DEDUCT = 0
  let #sum_week_ded_amt=0
  let #sum_month_ded_amt=0

begin-select 
GEN.DEDCD
gen.ded_addl_amt
!sum(gen.ded_addl_amt) &gen.ded_addl_amt

    do get-deduction-freq
    
    if isnull(&DF.PAY_FREQUENCY) or &DF.PAY_FREQUENCY='W'
       let #sum_week_ded_amt = #sum_week_ded_amt + &gen.ded_addl_amt
       let #WEEK_DEDUCT = #sum_week_ded_amt
       multiply 1 times #WEEK_DEDUCT round=2
       let $WEEK_DEDUCT = #WEEK_DEDUCT
    end-if
    
    if &DF.PAY_FREQUENCY='M'
        let #sum_month_ded_amt = #sum_month_ded_amt + &gen.ded_addl_amt
        let #MONTH_DEDUCT = #sum_month_ded_amt
        multiply 1 times #MONTH_DEDUCT round=2
        let $MONTH_DEDUCT = #MONTH_DEDUCT
    END-IF

FROM ps_genl_deduction gen
WHERE [$SlctDedCriteria1] !GEX001
  gen.emplid    = $emplid !GEX001
  and gen.company = $COMPANY !GEX001
  and gen.effdt     = 
         (select max(gen1.effdt) 
          FROM PS_GENL_DEDUCTION gen1
          WHERE gen1.emplid    = gen.emplid
            and gen1.company   = gen.company             
            and gen1.dedcd     = gen.dedcd
            !and gen1.effdt     < SYSDATE)   !GEX001
            and gen1.effdt     < $RUNDATE) !GEX001
  and gen.deduction_end_dt is null
  
end-select
end-procedure get-current-pay-deductions

begin-procedure get-deduction-freq
begin-select
DF.PAY_FREQUENCY

from ps_deduction_freq DF
where DF.DEDCD=&GEN.DEDCD
AND DF.EFFDT=(SELECT MAX(DF1.EFFDT) FROM PS_DEDUCTION_FREQ DF1
WHERE DF1.PLAN_TYPE=DF.PLAN_TYPE
AND DF1.DEDCD=DF.DEDCD
AND DF1.EFFDT<=$RUNDATE)
end-select
end-procedure get-deduction-freq
!-----------------------------------------------------------------------
! Function:    get-benefit-service-date                                -
! Description: Get Giant Eagles Benefits Service dates                 -
! Called By:   job-file, pre-dep-file                                  -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-benefit-service-date
#debugd show '...get-benefit-service-date'

Begin-Select

PD.SERVICE_DT

    let $eben_service_dt = &PD.SERVICE_DT

FROM ps_per_org_asgn PD		
Where PD.Emplid = $Emplid 
and PD.PER_ORG = 'EMP'


End-Select

end-procedure

!-----------------------------------------------------------------------
! Function:    write-header-job-file                                   -
! Description: Write header record for output file, {job_file}         -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure write-header-job-file
  
        write 3 from    $Quote 'NATIONAL_ID        '  $Quote $Comma
                        $Quote 'NAME               '  $Quote $Comma
                        $Quote 'LAST_NAME          '  $Quote $Comma
                        $Quote 'MIDDLE_NAME        '  $Quote $Comma
                        $Quote 'FIRST_NAME         '  $Quote $Comma
                        $Quote 'BIRTHDATE          '  $Quote $Comma
                        $Quote 'ADDRESS1           '  $Quote $Comma
                        $Quote 'ADDRESS2           '  $Quote $Comma
                        $Quote 'CITY               '  $Quote $Comma
                        $Quote 'STATE              '  $Quote $Comma
                        $Quote 'POSTAL             '  $Quote $Comma
                        $Quote 'PHONE              '  $Quote $Comma
                        $Quote 'SEX                '  $Quote $Comma
                        $Quote 'MAR_STATUS         '  $Quote $Comma
                        $Quote 'EMPLID             '  $Quote $Comma
                        $Quote 'EMPL_RCD           '  $Quote $Comma
                        $Quote 'LAST_HIRE_DT       '  $Quote $Comma
                        $Quote 'JOBCODE            '  $Quote $Comma
                        $Quote 'DESCR              '  $Quote $Comma
                        $Quote 'DEPTID             '  $Quote $Comma
                        $Quote 'EMPL_TYPE          '  $Quote $Comma
                        $Quote 'FULL_PART_TIME     '  $Quote $Comma
                        $Quote 'STD_HOURS          '  $Quote $Comma
                        $Quote 'ANNUAL_RT          '  $Quote $Comma
                        $Quote '52                 '  $Quote $Comma
                        $Quote 'PAY_FREQUENCY      '  $Quote $Comma
                        $Quote 'FWT_MAR_STATUS     '  $Quote $Comma
                        $Quote 'FWT_ALLOWANCES     '  $Quote $Comma
                        $Quote 'SWT_MAR_STATUS     '  $Quote $Comma
                        $Quote 'SWT_ALLOWANCES     '  $Quote $Comma
                        $Quote 'COMPANY            '  $Quote $Comma
                        $Quote 'PAYGROUP           '  $Quote $Comma
                        $Quote 'EMPL_CLASS         '  $Quote $Comma
                        $Quote 'REG_TEMP           '  $Quote $Comma
                        $Quote 'EMPL_STATUS        '  $Quote $Comma
                        $Quote 'UNION_CD           '  $Quote $Comma
                        $Quote 'OFFICER_CD         '  $Quote $Comma
                        $Quote 'ELIG_CONFIG1       '  $Quote $Comma
                        $Quote 'ELIG_CONFIG2       '  $Quote $Comma
                        $Quote 'ELIG_CONFIG3       '  $Quote $Comma
                        $Quote 'ELIG_CONFIG4       '  $Quote $Comma
                        $Quote 'ELIG_CONFIG5       '  $Quote $Comma
                        $Quote 'ELIG_CONFIG6       '  $Quote $Comma
                        $Quote 'ELIG_CONFIG7       '  $Quote $Comma
                        $Quote 'ELIG_CONFIG8       '  $Quote $Comma
                        $Quote 'ELIG_CONFIG9       '  $Quote $Comma  
                        $Quote 'ANNL_BENEF_BASE_RT '  $Quote $Comma
                        $Quote 'LOCATION           '  $Quote $Comma
                        $Quote 'BENEFIT_PROGRAM    '  $Quote $Comma
                        $Quote 'AVERAGE HOURS      '  $Quote $Comma
                        $Quote 'EBENE SERVICE DT   '  $Quote $Comma
                        $Quote 'MONTHLY DEDUCTIONS '  $Quote $Comma
                        $Quote 'WEEKLY DEDUCTIONS  '  $Quote $Comma  !GEX001
                        $Quote 'HOURLY_RT          '  $Quote         !GEX001
                        
end-procedure !write-header-job-file

                                              
!-----------------------------------------------------------------------
! Function:    write-row-job-file                                      -
! Description: Write Data to output file, {job_file}                   -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure write-row-job-file
#debug7 show 'write-row-job-file emplid ' $EMPLID


        write 3 from    $Quote $NATIONAL_ID        $Quote $Comma
                        $Quote $NAME               $Quote $Comma
                        $Quote $LAST_NAME          $Quote $Comma
                        $Quote $MIDDLE_NAME        $Quote $Comma
                        $Quote $FIRST_NAME         $Quote $Comma
                        $Quote $BIRTHDATE          $Quote $Comma
                        $Quote $ADDRESS1           $Quote $Comma
                        $Quote $ADDRESS2           $Quote $Comma
                        $Quote $CITY               $Quote $Comma
                        $Quote $STATE              $Quote $Comma
                        $Quote $POSTAL             $Quote $Comma
                        $Quote $PHONE              $Quote $Comma
                        $Quote $SEX                $Quote $Comma
                        $Quote $MAR_STATUS         $Quote $Comma
                        $Quote $GEX-EMPLID         $Quote $Comma       
                        $Quote $EMPL_RCD           $Quote $Comma
                        $Quote $LAST_HIRE_DT       $Quote $Comma       
                        $Quote $JOBCODE            $Quote $Comma
                        $Quote $DESCR              $Quote $Comma
                        $Quote $DEPTID             $Quote $Comma
                        $Quote $EMPL_TYPE          $Quote $Comma
                        $Quote $FULL_PART_TIME     $Quote $Comma
                        $Quote $STD_HOURS          $Quote $Comma
                        $Quote $ANNUAL_RT          $Quote $Comma
                        $Quote $52                 $Quote $Comma
                        $Quote $PAY_FREQUENCY      $Quote $Comma
                        $Quote $FWT_MAR_STATUS     $Quote $Comma
                        $Quote $FWT_ALLOWANCES     $Quote $Comma
                        $Quote $SWT_MAR_STATUS     $Quote $Comma
                        $Quote $SWT_ALLOWANCES     $Quote $Comma
                        $Quote $COMPANY            $Quote $Comma
                        $Quote $PAYGROUP           $Quote $Comma
                        $Quote $EMPL_CLASS         $Quote $Comma
                        $Quote $REG_TEMP           $Quote $Comma
                        $Quote $EMPL_STATUS        $Quote $Comma
                        $Quote $UNION_CD           $Quote $Comma
                        $Quote $OFFICER_CD         $Quote $Comma
                        $Quote $ELIG_CONFIG1       $Quote $Comma
                        $Quote $ELIG_CONFIG2       $Quote $Comma
                        $Quote $ELIG_CONFIG3       $Quote $Comma
                        $Quote $ELIG_CONFIG4       $Quote $Comma
                        $Quote $ELIG_CONFIG5       $Quote $Comma
                        $Quote $ELIG_CONFIG6       $Quote $Comma
                        $Quote $ELIG_CONFIG7       $Quote $Comma
                        $Quote $ELIG_CONFIG8       $Quote $Comma
                        $Quote $ELIG_CONFIG9       $Quote $Comma
                        $Quote $ANNL_BENEF_BASE_RT $Quote $Comma
                        $Quote $LOCATION           $Quote $Comma
                        $Quote $BENEFIT_PROGRAM    $Quote $Comma
                        $Quote $AVG_HOURS          $Quote $Comma
                        $Quote $EBEN_SERVICE_DT    $Quote $Comma
                        $Quote $MONTH_DEDUCT       $Quote $Comma
                        $Quote $WEEK_DEDUCT        $Quote $Comma !GEX001
                        $Quote $HOURLY_RT          $Quote        !GEX001

end-procedure !write-row-job-file


!-----------------------------------------------------------------------
! Function:    pre_dep_file                                            -
! Description: Process Pre-dependent Data and write it out             -
! Called By:   Report                                                  -
! Calls:       write-row-pre-dep                                       -
!              GET-GEX-EMPLID                                          -
!              GET-PERSNID-DEP                                         -
!-----------------------------------------------------------------------
begin-procedure pre-dep-file
#debugd show 'pre-dep-file'

  do write-header-pre-dep
  
begin-select
DB.EMPLID 
DB.DEPENDENT_BENEF 
DB.NAME 
DB.RELATIONSHIP 
DB.DEP_BENEF_TYPE 
DB.MAR_STATUS 
DB.SEX 
DB.BIRTHDATE 
DB.STUDENT 
DB.DISABLED 
DB.STUDENT_STATUS_DT 
DB.SMOKER
DB.LAST_NAME      
DB.FIRST_NAME     
DB.MIDDLE_NAME      

        let $EMPLID              = &DB.EMPLID              
        let $DEPENDENT_BENEF     = &DB.DEPENDENT_BENEF     
        let $NAME                = &DB.NAME                
        let $RELATIONSHIP        = &DB.RELATIONSHIP        
        let $DEP_BENEF_TYPE      = &DB.DEP_BENEF_TYPE      
        let $MAR_STATUS          = &DB.MAR_STATUS          
        let $SEX                 = &DB.SEX                 
        let $BIRTHDATE           = &DB.BIRTHDATE           
        let $STUDENT             = &DB.STUDENT             
        let $DISABLED            = &DB.DISABLED            
        let $STUDENT_STATUS_DT   = &DB.STUDENT_STATUS_DT   
        let $SMOKER              = &DB.SMOKER  
        let $LAST_NAME           = &DB.LAST_NAME         
        let $FIRST_NAME          = &DB.FIRST_NAME        
        let $MIDDLE_NAME         = &DB.MIDDLE_NAME  
                              
        DO GET-GEX-EMPLID
        DO GET-PERSNID-DEP  
        DO GET-DEP-CERT
        DO WRITE-ROW-PRE-DEP

FROM PS_DEPENDENT_BENEF DB, PS_JOB JDB
WHERE DB.EMPLID=JDB.EMPLID
  AND JDB.EMPL_STATUS IN ('A','L','P','S')
  AND JDB.EFFDT       = (SELECT MAX(JDB1.EFFDT) FROM PS_JOB JDB1
                        WHERE JDB1.EMPLID   = JDB.EMPLID 
                          AND JDB1.EMPL_RCD = JDB.EMPL_RCD 
                          AND JDB1.EFFDT <= $RUNDATE) 
  AND JDB.EFFSEQ      = (SELECT MAX(JDB2.EFFSEQ) FROM PS_JOB JDB2
                        WHERE JDB2.EMPLID   = JDB.EMPLID 
                          AND JDB2.EMPL_RCD = JDB.EMPL_RCD 
                          AND JDB2.EFFDT    = JDB.EFFDT) 
  AND JDB.COMPANY <> JDB.PAYGROUP
ORDER BY DB.EMPLID
end-select

end-procedure pre-dep-file


!-----------------------------------------------------------------------
! Function:    get-persnid-dep                                         -
! Description: Get persnid information                                 -
! Called By:   pre-dep-file                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-persnid-dep
#debugd show '...get-persnid-dep'

        let $NATIONAL_ID = ' '
        
begin-select
DBN.NATIONAL_ID 

        let $NATIONAL_ID = &DBN.NATIONAL_ID  

FROM PS_DEP_BENEF_NID DBN
WHERE DBN.EMPLID          = &DB.EMPLID 
  AND DBN.DEPENDENT_BENEF = &DB.DEPENDENT_BENEF 
end-select

end-procedure get-persnid-dep

!-----------------------------------------------------------------------
! Function:    GET-DEP-CERT                                            -
! Description: Get persnid information                                 -
! Called By:   pre-dep-file                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Get-Dep-Cert
#debugd show '...Get-Dep-Cert'
begin-SELECT
C.GEX_DEP_CERT

        LET $DEP_CERT=&C.GEX_DEP_CERT

FROM PS_DEP_BEN_EFF C
WHERE C.EMPLID=&DB.EMPLID
AND C.DEPENDENT_BENEF=&DB.DEPENDENT_BENEF
AND C.EFFDT=(SELECT MAX(C1.EFFDT) FROM PS_DEP_BEN_EFF C1
              WHERE C1.EMPLID=C.EMPLID
              AND C1.DEPENDENT_BENEF=C.DEPENDENT_BENEF
              AND C1.EFFDT<=$RUNDATE)
end-select
end-procedure


!-----------------------------------------------------------------------
! Function:    write-header-pre-dep                                    -
! Description: Write header record for output file, {pre_dep_file}     -
! Called By:   pre-dep-file                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure write-header-pre-dep
  
        write 5 from    $Quote 'EMPLID             ' $Quote $Comma
                        $Quote 'DEPENDENT_BENEF    ' $Quote $Comma
                        $Quote 'NAME               ' $Quote $Comma
                        $Quote 'LAST_NAME          ' $Quote $Comma
                        $Quote 'FIRST_NAME         ' $Quote $Comma  
                        $Quote 'MIDDLE_NAME        ' $Quote $Comma
                        $Quote 'RELATIONSHIP       ' $Quote $Comma
                        $Quote 'DEP_BENEF_TYPE     ' $Quote $Comma
                        $Quote 'MAR_STATUS         ' $Quote $Comma
                        $Quote 'SEX                ' $Quote $Comma
                        $Quote 'BIRTHDATE          ' $Quote $Comma
                        $Quote 'STUDENT            ' $Quote $Comma
                        $Quote 'DISABLED           ' $Quote $Comma
                        $Quote 'STUDENT_STATUS_DT  ' $Quote $Comma
                        $Quote 'NATIONAL_ID        ' $Quote $Comma
                        $Quote 'SMOKER             ' $Quote $Comma
                        $Quote 'GEX_DEP_CERT       ' $Quote $Comma !GEX001
                        $Quote '10 DIGIT EMPLID    ' $Quote        !GEX001
   
end-procedure !write-header-pre-dep

                                              
!-----------------------------------------------------------------------
! Function:    write-row-pre-dep                                       -
! Description: Write Data to output file, {pre_dep_file}               -
! Called By:   pre-dep-file                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure write-row-pre-dep
 
        write 5 from    $Quote $GEX-EMPLID          $Quote $Comma          
                        $Quote $DEPENDENT_BENEF     $Quote $Comma
                        $Quote $NAME                $Quote $Comma
                        $Quote $LAST_NAME           $Quote $Comma
                        $Quote $FIRST_NAME          $Quote $Comma  
                        $Quote $MIDDLE_NAME         $Quote $Comma
                        $Quote $RELATIONSHIP        $Quote $Comma
                        $Quote $DEP_BENEF_TYPE      $Quote $Comma
                        $Quote $MAR_STATUS          $Quote $Comma
                        $Quote $SEX                 $Quote $Comma
                        $Quote $BIRTHDATE           $Quote $Comma
                        $Quote $STUDENT             $Quote $Comma
                        $Quote $DISABLED            $Quote $Comma
                        $Quote $STUDENT_STATUS_DT   $Quote $Comma
                        $Quote $NATIONAL_ID         $Quote $Comma
                        $Quote $SMOKER              $Quote $Comma
                        $Quote $DEP_CERT            $Quote $Comma !GEX001
                        $Quote $EMPLID              $Quote        !GEX001
                                                   
end-procedure !write-row-pre-dep


!-----------------------------------------------------------------------
! SQC Files for called procedures                                      -
!-----------------------------------------------------------------------
#include 'stdapi.sqc'
#include 'reset.sqc'     !Reset printer procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'  !Routines to calculate with dates
#include 'getlogou.sqc'  !Routine process run control parameters 
! -------------------  END OF FILE   ---------------------------------
