!***********************************************************************
! gexbn658: Vendor Interface to Mercer for                             *
!           Voluntary Benefits Indicative Data.                        *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! gexbn658 : Mercer Voluntary Benefits Indicative Data                 *
!                                                                      *
! Narrative: Voluntary Benefits will be offered to Team Members by     *
!            Mercer, GE’s Voluntary Benefits Partner. A new interface  *
!            needs to be developed to provide Mercer with Team Members *
!            eligible to enroll in Voluntary Benefits. This sqr will be*
!            run weekly during the Open Enrollment window to provide   *
!            Mercer with information required for the annual voluntary *
!            benefits open enrollment, timing of which will coincide   *
!            with the Giant Eagle CORE open enrollment period.         *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                                                                      *
! SQL Tables:           PS_JOB                                         *
!                       PS_PERSONAL_DATA                               *
!                       PS_BEN_PROG_PARTIC                             *
!                       PS_GEX_EMPLID_MAPP                             *
!                                                                      *
! Written by:           Ramesh Solai (cloned from GEXBN648.sqr)        *
!                                                                      *
! Normally Run:         Annual                                         *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS      DATE            DESCRIPTION OF THE CHANGE              *
!***********************************************************************
! TCSXRAS       09/09/2014      Cloned from GEXBN648.sqr               *
! TCSXSSS       03/25/2015  Modified to add the Moveit SQC and changes *
! ISDVMZA       09/15/2015  Added SSN and W2 Earnings.                 *
!GEX_SEC_REENG 2015-04-29 Vahini Katta                                 *
!Changes related to gex_emplid_mapp/7 digit emplid
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'

Begin-Report
#debug9 Show 'Begin-Report'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc
  
  show ' '
  display 'Start Run Time: ' noline
  show $AsofNow
  Do Initialization
  Do Open-File
 
  Do Get-Pay-End-Dt
  
  Do Main-Process
  Do Close-File
  
  show ' '
  display 'End Run Time: ' noline
  show $AsofNow
  do Stdapi-Term
    
End-Report


!-----------------------------------------------------------------------
! Function:    Initialization                                          -
! Description: Initialization                                          -
! Called By:   Begin-report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Initialization
#debug9 Show 'Initialization'
   
  Let $ReportID       = 'gexbn658'
  Let $ReportID1      = 'giant_eagle_elig'
  Let $ReportTitle    = 'Mercer Voluntary Benefits Interface'
  Let $delim = ''

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime
  
  If $prcs_process_instance = ''
    Do SQRW-Run-Controls
  Else
    Do Process-Scheduler-Run-Controls
  End-if
  
  If ltrim(Rtrim($AsofDate, ' '),' ') = ''
     Let $AsOfDate = $AsOfToday
     SHOW '$AsOfDate: ' $AsOfToday  
  End-If
  
  Let $Year = edit($AsofDate,'YYYY')
  Let #Year = to_number($Year)
  Let #Prev_Year = #Year - 1
  Let $Prev_Year = to_char(#Prev_Year)
  let $Calc_Age_Date  = '01-OCT-' || $year
  let $Prev_Year_End_Dt = '31-DEC-'||$Prev_Year
  
  show '$ASofDate        :' $AsofDate
  show '$Year            :' $Year
  show '$Prev_Year       :' $Prev_Year
  show '$Calc_Age_Date   :' $Calc_Age_Date
  show '$Prev_Year_End_Dt:' $Prev_Year_End_Dt
End-Procedure

!-----------------------------------------------------------------------
! Function:    SQRW-Run-Controls                                       -
! Description: SQRW-Run-Controls                                       -
! Called By:   Begin-report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure SQRW-Run-Controls
#debug9 Show 'SQRW-Run-Controls'

  Do Ask-As-Of-Date
  Move 'HRBATCH'  to $OprID
  Move 'gexbn658' to $Run_Cntl_ID
 
End-Procedure

!-----------------------------------------------------------------------
! Function:    Process-Scheduler-Run-Controls                          -
! Description: Fetches the run control data                            -
! Called By:   Begin-report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Process-Scheduler-Run-Controls
#debug9 Show 'Process-Scheduler-Run-Controls'
 	
  Let $OprID                = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
 
  Let $AsOfDate = &GEX_RC_BEN.AsOfDate
  SHOW '&GEX_RC_BEN.AsOfDate: ' &GEX_RC_BEN.AsOfDate
  If ltrim(Rtrim(&GEX_RC_BEN.AsOfDate, ' '),' ') = ''
     Let $AsOfDate = $AsOfToday
     SHOW '$AsOfDate: ' $AsOfToday
  End-If

End-Procedure 

!-----------------------------------------------------------------------
! Function:    Get-Pay-End-Dt                                          -
! Description: Fetches the Previous Year Pay End Dt                    -
! Called By:   Begin-report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Pay-End-Dt
#debug9 Show 'Get-Pay-End-Dt'
Begin-Select
MAX(PAY_END_DT) &Pay_End_Dt

  show '&Pay_End_Dt :' &Pay_End_Dt

FROM PS_PAY_CALENDAR
WHERE PAY_END_DT<=$Prev_Year_End_Dt
End-Select
End-Procedure Get-Pay-End-Dt

!-----------------------------------------------------------------------
! Function:    Open-File                                               -
! Description: Opens the file                                          -
! Called By:   Initialization                                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Open-File
#debug9 Show 'P140-Open-File'
  #ifdef UNIX
   Let $File = '{OUTFILE}' || Lower($ReportID1) !|| '.dat'
  #end-if
  #ifdef NT
   LET $File = 'C:\TEMP\' || Lower($ReportID1) || '.dat'
   LET $File = 'C:\TEMP\' || Lower($ReportID1) || '_' || $prcs_process_instance || '_' || replace($ReportDate, '/', '') || '_' || replace($ReportTime, ':', '') || '.dat'  
  #end-if
   OPEN $File as 1
   for-writing
   record=430
   status = #Open
   show '$File  '   $File
    
   if (#Open <> 0)
      let $Error-Message = 'PROGRAM ABORTED - Problem opening file : ' || $File
      show $Error-Message
      STOP
   end-if
   
End-Procedure


!-----------------------------------------------------------------------
! Function:    Main-Process                                            -
! Description: Main-Process                                            -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Main-Process
Begin-Select  
N.NATIONAL_ID,
!G.EMPLID, !GEX_SEC_REENG 2015-04-29 Vahini Katta
P.NAME_PREFIX,
P.FIRST_NAME,
P.LAST_NAME,
P.MIDDLE_NAME,
P.NAME_SUFFIX,
J.REG_TEMP,
P.SEX,
P.BIRTHDATE,
J.LAST_HIRE_DT,
J.ANNUAL_RT,
P.ADDRESS1,
P.ADDRESS2,
P.CITY,
P.STATE,
P.POSTAL,
P.COUNTRY,
J.EMPLID,
J.EMPL_RCD,
J.COMPANY,
J.PAYGROUP,
J.POSITION_NBR,
B.BENEFIT_PROGRAM

    show '&J.EMPLID :' &J.EMPLID
	   
	  Move &Pay_End_Dt to $FromDate
	  Move &J.LAST_HIRE_DT to $Hire_Dt
	  Do convert-to-dtu-date($Hire_Dt,$Hire_Dt_dtu)
	  Do convert-to-dtu-date($AsOfDate, $asofdate_dtu)
	  Do dtu-diff-months($Hire_Dt_dtu, $asofdate_dtu, #diff_mths)
	  show '#diff_mths      :' #diff_mths
    
    If #diff_mths < 12
       Move &J.LAST_HIRE_DT to $FromDate
       show '&J.LAST_HIRE_DT :' &J.LAST_HIRE_DT
    end-if

    if &J.REG_TEMP='E' or &J.REG_TEMP='T'
       do Get-Pay-Cycles
       do Get-Average-Hours-Worked
    else
        Move 'Y' to $Write_To_File
        Move 0 to $AVG_HOURS
    end-if
     
    do Get-STD-Plan-Indicator
          
    show '$Write_To_File :' $Write_To_File
          
    if $Write_To_File='Y'
        do Write-File
    end-if

FROM PS_PERS_NID N,
     PS_PERSONAL_DATA P,
     PS_JOB J,
     !PS_GEX_EMPLID_MAPP G, !GEX_SEC_REENG 2015-04-29 Vahini Katta
     PS_BEN_PROG_PARTIC B
WHERE P.EMPLID=N.EMPLID
AND P.EMPLID=J.EMPLID
!GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
!AND P.EMPLID=G.SSN
!AND J.EMPL_RCD=G.EMPL_RCD
!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
AND J.EMPLID=B.EMPLID
AND J.EMPL_RCD=B.EMPL_RCD
AND J.EFFDT=(SELECT MAX(J1.EFFDT) FROM PS_JOB J1
             WHERE J1.EMPLID=J.EMPLID
             AND J1.EMPL_RCD=J.EMPL_RCD
             AND J1.EFFDT<=$AsofDate)
AND J.EFFSEQ=(SELECT MAX(J2.EFFSEQ) FROM PS_JOB J2
              WHERE J2.EMPLID=J.EMPLID
              AND J2.EMPL_RCD=J.EMPL_RCD
              AND J2.EFFDT=J.EFFDT)
AND B.EFFDT =(SELECT MAX(B1.EFFDT) FROM PS_BEN_PROG_PARTIC B1
              WHERE B1.EMPLID = B.EMPLID
              AND B1.EMPL_RCD = B.EMPL_RCD
              AND B1.COBRA_EVENT_ID = B.COBRA_EVENT_ID
              AND B1.EFFDT    <= $AsofDate)
AND J.HR_STATUS = 'A'
AND J.COMPANY <> J.PAYGROUP
AND J.COMPANY > '999'
AND B.BENEFIT_PROGRAM NOT IN ('DFT', 'C05') !('IND','DFT','C05')
AND J.REG_TEMP IN ('R', 'E', 'T', 'U')
AND J.DEPTID <> 'C909' 
ORDER BY J.EMPLID
End-Select
End-Procedure Main-Process

!-----------------------------------------------------------------------
! Function:    Get-STD-Plan-Indicator                                  -
! Description: Check if TM is eligible for Voluntary STD Plan          -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-STD-Plan-Indicator
#debug9 Show 'Fetch-STD-Plan-Indicator'
  Move 'E' to $STD_Plan_Ind
Begin-Select
GEX_RC_GEXBN632.BENEFIT_PROGRAM

 Move 'N' to $STD_Plan_Ind
 show '$STD_Plan_Ind :' $STD_Plan_Ind
 
From  PS_GEX_RC_GEXBN632  GEX_RC_GEXBN632
Where GEX_RC_GEXBN632.OPRID                        = [$OprID]
And   GEX_RC_GEXBN632.RUN_CNTL_ID                  = [$Run_Cntl_ID]
And   GEX_RC_GEXBN632.BENEFIT_PROGRAM              = &B.BENEFIT_PROGRAM
End-Select

End-Procedure

!-----------------------------------------------------------------------
! Function:    Get-Pay-Cycles                                          -
! Description: Calculates the no of pay cycles for the TM              -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Get-Pay-Cycles
#debugd show '...Get-Pay-Cycles'
  Show '$FromDate :' $FromDate
  show '$AsofDate :' $AsofDate
BEGIN-SELECT
COUNT(PAYCHECK_NBR) &COUNT_PAYS

  show '&COUNT_PAYS :' &COUNT_PAYS

FROM PS_PAY_CHECK AVGHRS
WHERE AVGHRS.EMPLID      = &J.EMPLID
  AND AVGHRS.EMPL_RCD    = &J.EMPL_RCD
  and AVGHRS.PAY_END_DT BETWEEN $FromDate AND $AsofDate 
END-SELECT
End-Procedure Get-Pay-Cycles

!-----------------------------------------------------------------------
! Function:    Get-Average-Hours-Worked                                -
! Description: Calculates the average hours worked by the TM           -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Get-Average-Hours-Worked
#debugd show '...Get-Average-Hours-Worked'
BEGIN-SELECT
SUM(B.OTH_HRS) &B.OTH_HRS

  show '&B.OTH_HRS :' &B.OTH_HRS

  if &COUNT_PAYS > 0
    let #avg_weekly_hrs_worked = &B.OTH_HRS / &COUNT_PAYS
    multiply 1 times #avg_weekly_hrs_worked round=2
    show '#avg_weekly_hrs_worked:' #avg_weekly_hrs_worked
    if #avg_weekly_hrs_worked>=14
       let $AVG_HOURS          = #avg_weekly_hrs_worked  
       Move 'Y' to $Write_To_File
    else
       Move 'N' to $Write_To_File
    end-if
  end-if

FROM PS_PAY_EARNINGS A, PS_PAY_OTH_EARNS B
WHERE A.COMPANY  = B.COMPANY
AND A.PAYGROUP   = B.PAYGROUP
AND A.PAY_END_DT = B.PAY_END_DT
AND A.OFF_CYCLE  = B.OFF_CYCLE
AND A.PAGE_NUM   = B.PAGE_NUM
AND A.LINE_NUM   = B.LINE_NUM
AND A.ADDL_NBR   = B.ADDL_NBR
AND A.emplid     = &J.EMPLID
and A.empl_rcd   = &J.EMPL_RCD
and A.company    = &J.COMPANY
and A.PAY_END_DT BETWEEN $FromDate AND $AsofDate
END-SELECT

end-procedure Get-Average-Hours-Worked

!-----------------------------------------------------------------------
! Function:    Get-W2-Amount                                           -
! Description: Use the W2 Amounts for Hourly Employees                 -
! Called By:   Write-File                                              -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Get-W2-Amount
#debugd show '...Get-W2-Amount'
BEGIN-SELECT
SUM(Y.W2_AMOUNT) &Y.W2_AMOUNT

  show '&Y.W2_AMOUNT :' &Y.W2_AMOUNT

  if &Y.W2_AMOUNT > 0
     let $AnnualRt = &Y.W2_AMOUNT * 100
  end-if

FROM PS_YE_AMOUNTS Y
WHERE calendar_year = to_number(to_char(sysdate, 'yyyy') - 1)
 and taxform_id = 'W'
 and box = '01'
 and state = '$U'
 and emplid  = &J.EMPLID
END-SELECT

end-procedure Get-Average-Hours-Worked

!-----------------------------------------------------------------------
! Function:    Write-File                                              -
! Description: Write to File                                           -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Write-File

    if &P.COUNTRY = 'USA' or &P.COUNTRY = '' or &P.COUNTRY = ' '
       let $State = rpad(substr(ltrim(rtrim(&P.STATE, ' '), ' '), 1, 2), 2, ' ')
    else
       let $State = 'FC'
    end-if
    let $EMPLID             = &J.EMPLID              !Jyotsna
    !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
    !let $AcctNum = lpad(substr(ltrim(rtrim(&G.EMPLID, ' '), ' '), 1, 10), 10, '0')
    !let $EmplID = rpad(substr(ltrim(rtrim(&G.EMPLID, ' '), ' '), 1, 16), 16, ' ')
    !let $gEmplID = rpad(substr(ltrim(rtrim(&G.EMPLID, ' '), ' '), 1, 14), 14, ' ')
    !let $AcctNum = lpad(substr(ltrim(rtrim(&P.EMPLID, ' '), ' '), 1, 10), 10, '0')
    !let $EmplID = rpad(substr(ltrim(rtrim(&P.EMPLID, ' '), ' '), 1, 16), 16, ' ')
    !let $gEmplID = rpad(substr(ltrim(rtrim(&P.EMPLID, ' '), ' '), 1, 14), 14, ' ')
    let $AcctNum = lpad(substr(ltrim(rtrim($EMPLID, ' '), ' '), 1, 10), 10, '0') !Jyotsna 
    let $EmplID = rpad(substr(ltrim(rtrim($EMPLID, ' '), ' '), 1, 16), 16, ' ')   !Jyotsna 
    let $gEmplID = rpad(substr(ltrim(rtrim($EMPLID, ' '), ' '), 1, 14), 14, ' ')  !Jyotsna 
    !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
    let $DOH = edit(&J.LAST_HIRE_DT,'MMDDYYYY')
    let $FrstNm = rpad(substr(ltrim(rtrim(&P.FIRST_NAME, ' '), ' '), 1, 16), 16, ' ')
    let $MdlNm = rpad(substr(ltrim(rtrim(&P.MIDDLE_NAME, ' '), ' '), 1, 11), 11, ' ')
    let $LstNm = rpad(substr(ltrim(rtrim(&P.LAST_NAME, ' '), ' '), 1, 20), 20, ' ')
    let $NmSfx = rpad(substr(ltrim(rtrim(&P.NAME_SUFFIX, ' '), ' '), 1, 4), 4, ' ')
    let $EmailAddr = rpad(' ', 63, ' ')
    let $DOB = edit(&P.BIRTHDATE,'MMDDYYYY')
    
	let $ssn = rpad(substr(ltrim(rtrim(&N.NATIONAL_ID, ' '), ' '), 1, 9), 9, ' ')
	
!TCSXRAS    Let $Addr1=translate(&P.ADDRESS1,',',' ')
!TCSXRAS    Let $Addr2=translate(&P.ADDRESS2,',',' ')
!TCSXRAS    Let $City=translate(&P.CITY,',',' ')

    let $Addr1 = rpad(substr(ltrim(rtrim(&P.ADDRESS1, ' '), ' '), 1, 30), 30, ' ')
    let $Addr2 = rpad(substr(ltrim(rtrim(&P.ADDRESS2, ' '), ' '), 1, 30), 30, ' ')
    let $City = rpad(substr(ltrim(rtrim(&P.CITY, ' '), ' '), 1, 20), 20, ' ')
    
    let $Postal = substr(ltrim(rtrim(&P.POSTAL, ' '), ' '), 1, 5)
    let $Postal = rpad($Postal, 5, ' ')
    let $Gender = rpad(substr(ltrim(rtrim(&P.SEX, ' '), ' '), 1, 1), 1, ' ')
    let $STD_Plan_Ind = rpad(substr(ltrim(rtrim($STD_Plan_Ind, ' '), ' '), 1, 3), 3, ' ')
    
!***************************************************    
!   If Hourly TM and have full W2 earnings last year
!      then retrieve the W2 Box 1 amounts
!***************************************************    
    let $AnnualRt = &J.ANNUAL_RT * 100
    
    if &J.EMPL_TYPE = 'H' and #last_hire_yr < to_number($prev_yr)
       do Get-W2-Amount
    end-if
    
    let $AnnualRt = edit($AnnualRt,'000000000')
    
    
    Write 1 from '483 '           $delim ! Case Number (3) + space (1)
                 $AcctNum         $delim ! Account Number (10)
                 $EmplID          $delim ! Employee ID (16)
                 'P52'            $delim ! Constant (1) + Pay Frequency (2)
                 $DOH             $delim ! Most recent hire date (8)
                 '00000000'       $delim ! Termination Date (8)
                 '        '       $delim ! Name Prefix (8)
                 $FrstNm          $delim ! First Name (16)
                 $MdlNm           $delim ! Middle Name (11)
                 $LstNm           $delim ! Last  Name (20)
                 $NmSfx           $delim ! Name Suffix (4)
                 $EmailAddr       $delim ! E-mail Address (63)
                 $Addr1           $delim ! Address Line 1 (30)
                 $Addr2           $delim ! Address Line 2 (30)
                 $City            $delim ! City (20)
                 $State           $delim ! Postal State Code (2)
                 $Postal          $delim ! Zip Code (5)
                 '    '           $delim ! Zip Plus Four (4)
                 '          '     $delim ! Home Telephone Number (10)
                 '    '           $delim ! Telephone Extension (4)
                 '          '     $delim ! Alternate Telephone Number (10)
                 '    '           $delim ! Alternate Telephone Extension (4)
                 '        '       $delim ! Spaces (8)
                 $DOH             $delim ! Benefit Eligibility Date (8)
! If SSN is not sent '              ' $delim ! Spaces (13+1)
! If SSN is not sent '000000000'      $delim ! SSN (9)
                 '             S' $delim ! Spaces (13+1)
                 $ssn             $delim ! SSN (9)
                 $DOB             $delim ! Date of Birth (8)
                 $Gender          $delim ! Employee Gender (1)
                 '   '            $delim ! Company Code (3)
                 $AnnualRt        $delim ! Annual Salary (9)
                 '     '          $delim ! Payroll Location (5)
                 $gEmplID         $delim ! Employee Number (14)
                 'ACT'            $delim ! Employment Status (3)
                 $STD_Plan_Ind    $delim ! Occuption Class (3)
                 '     '          $delim ! Division (5)
                 $DOH             $delim ! Employment Status Date (8)
                 '   '            $delim ! Employee Supplemental Life Insurance (3)
                 '   '            $delim ! Spouse Supplemental Life Insurance (3)
                 '   '            $delim ! Child Supplemental Life Insurance (3)
                 '        '       $delim ! Family Status Change (FSC) Date (8)
                 '        '       $delim ! PIN (8)
                 'A'              $delim ! Constant (1)
                 'GIANTEAGLE'     $delim ! Company ID (10)

End-Procedure Write-File

!-----------------------------------------------------------------------
! Function:    Close-File                                              -
! Description: Closes the File                                         -
! Called By:   Main-Process                                            -
! Calls:       Call_Unix_Commands                                      -
!-----------------------------------------------------------------------
Begin-Procedure Close-File

  Close 1

  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop 
     
  Else
!	do Call_Unix_Commands('GEXBN658_CP')
!	do Call_Unix_Commands('GEXBN658_CHMOD')
!	do Call_Unix_Commands('GEXBN658_CHGRP')
!	do Call_Unix_Commands('GEXBN658_CHOWN') !Commented by TCSXSSS Surya Sobha and added the new function from gexmovit.SQC

        let $OprID1 = 'HRBATCH'
  	let $Run_Cntl_ID1 = 'gexbn658'
  	Let $ReportID1       = 'GEXBN658'
  	Let $File1      = 'giant_eagle_elig'
        Do Call_MovIt_Commands($OprID,$Run_Cntl_ID,$ReportID,$File1, $comments ) !TCSXSSS Surya added the moveit folder changes - gexmovit.sqc
  End-If
End-Procedure

!-----------------------------------------------------------------------
! Function:    Call_Unix_Commands                                      -
! Description: Call unix commands to move to MoveIt folder             -
! Called By:   Close-File                                              -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
!begin-procedure Call_Unix_Commands($gexbn658_run)
!#debugd show '...Call_Unix_Commands'
!
!BEGIN-SELECT
!A.URL
!
!  Move &A.URL to $command_COPY
!  
!FROM PSURLDEFN A
!WHERE A.URL_ID = $gexbn658_run
!END-SELECT
!
!   CALL SYSTEM USING $command_COPY #status1 
!   show 'Command : '  $command_COPY
!   show '#status1 : ' #status1 
!
!end-procedure Call_Unix_Commands

#include 'gexxx951.sqc'
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'gexxx920.sqc'  !Get ben single row run control	!isdvmxd added on 05/19/2009
#Include 'readxlat.sqc'  !Routines for the translate values
#include 'gexmovit.sqc'  !Move the files to MoveIt Folder 