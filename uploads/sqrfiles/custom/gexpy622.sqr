!***********************************************************************
! GEXPY622:  This program produces a detail report of employees to help*    
!	help center                                                    *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                                                                      *
!  $Date:: 03/16/99 09:00A      $                                      *
!  $Revision:: 01               $                                      *
!  $Workfile:: GEXPY622.SQR     $                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  GEXPY622  SXK    03/16/1999         INITIAL CREATION                *
!                                                                      *
!  CSR 10907 AXL    04/21/2005         Add step to get new EMPLID      *
! 
!  ITG 38435 VKV    04/02/2007         Inclusion of Employees Title    *  
!			               and Department                  *
! ISDVNPK   08/17/2007 Upgrade 8.3 - 9.0 Added PS_PER_ORG_INST for ORIG_HIRE_DT
! GEX-MXT 04/02/2008   ADDED THE join condition for PER_ORG_INST       *
!***********************************************************************
#include 'setenv.sqc' !Set environment
#include 'setup02.sqc'
!*********************************************************************
!                                    
!*********************************************************************
begin-report

  do Init-DateTime
  do Init-Number
  do stdapi-init

  move 'GEXPY622' to $ReportID
  move 'Employees Listing' to $ReportTitle
  display $ReportTitle

  do Get-Current-DateTime

  do report
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term
  do reset
end-report

!*********************************************************************
!If this Program is being executed through process scheduler, 
!the run control parameters and calls the main processing procedure.
!Otherwise, interrogates the user for the run control parameters and 
!validates them. If the run control parameters are invalid, stops the
!execution.
!*********************************************************************
begin-procedure Report 

  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  move 'N' to $Errorfound

  let $x000_where_select_asofdate = $asoftoday

  Do Format-DateTime($X000_Where_Select_AsOfDate, $X000_Report_Heading_AsOfDate, {DEFDATE}, '', '')
  Let $X000_Order_By = 'Name'

  Show '$X000_Where_Select_AsOfDate = ' $X000_Where_Select_AsOfDate

 do process-employee-data

Report-Exit:

 date-time () hh:mi:ss &timeProcess
  display #InputTran 99999 noline
  display ' Transactions Processed: ' noline
  display &timeProcess

end-procedure

!*********************************************************************
!Retrieves the employees with latest paychecks and with garnishment 
!deductions.
!*********************************************************************

begin-procedure process-employee-data
  
  let $filename = '{OUTFILE}'||'gexpy622.dat'
  
  open $filename as 1
     for-writing record=155 status=#writestat

  if #writestat != 0
    display 'Error Opening output file.  Program terminating.'
    stop
  end-if



move 'N' to $errorfound
move 'N' to $empl_found
move 'N' to $new_page
let #inputtran = 0
begin-select 
A.NAME
INST.ORIG_HIRE_DT   ! A.ORIG_HIRE_DT  !ISDVNPK 8/17/2007 Modified for Upgrade 9.0 
B.EMPLID
B.EMPL_RCD
B.EMPL_STATUS
B.EFFDT
B.LOCATION
B.DEPTID    !VENDVKV ITG 38435 04/02/2007
B.JOBCODE   !VENDVKV ITG 38435 04/02/2007  

 move &b.emplid to $emplid
!  display &B.EMPLID
  add 1 to #inputtran

  move 'Y' to $empl_found
  do get-status-date
  do get-userid		!AXL New Step
  do get-deptid-descr   !VENDVKV ITG 38435 04/02/2007  
  do get-jobcode-descr  !VENDVKV ITG 38435 04/02/2007  
  do write-fields

FROM  PS_PERSONAL_DATA A,
      PS_EMPLOYMENT C,
      PS_JOB B,
      PS_PER_ORG_INST INST  !ISDVNPK 8/17/2007 Modified for Upgrade 9.0 
  
WHERE A.EMPLID = B.EMPLID
  AND B.EMPLID = C.EMPLID
  AND B.EMPL_RCD = C.EMPL_RCD
  AND INST.EMPLID = B.EMPLID  !ISDVNPK 8/17/2007 Modified for Upgrade 9.0 
  AND INST.ORG_INSTANCE_ERN  = B.EMPL_RCD	!GEX-MXT added for PER_ORG_INST join
  AND B.EFFDT        = (SELECT MAX(EFFDT)
                         FROM PS_JOB
                          WHERE EMPLID = B.EMPLID 
                            AND EMPL_RCD = B.EMPL_RCD
                            AND EFFDT <= $X000_Where_Select_AsOfDate)
  AND B.EFFSEQ = (SELECT MAX(EFFSEQ)
                    FROM PS_JOB
                    WHERE EMPLID = B.EMPLID
                      AND EMPL_RCD = B.EMPL_RCD
                      AND EFFDT     = B.EFFDT)
                   

ORDER BY A.NAME
end-select

if $empl_found = 'N'
   display 'No Data Selected' 
end-if  
end-procedure

Begin-Procedure get-status-date
let $status_dt = ' '
begin-select
to_char(FP1.EFFDT,'MM/DD/YYYY') &FP1.EFFDT

  let $status_Dt = &fp1.effdt

from ps_job fp1
where fp1.emplid = &b.emplid
and fp1.empl_Rcd = &b.empl_rcd
and fp1.effdt = (select min(effdt)
                  from ps_job
                 where emplid = &b.emplid
                   and empl_rcd = &b.empl_rcd
                   and empl_status = &b.empl_status
                   and effdt <= $x000_where_select_asofdate
                   and effdt >= (select nvl(max(fp3.effdt),&inst.orig_hire_Dt)   ! &a.orig_hire_Dt ISDVNPK 8/17/2007 Modified for Upgrade 9.0 
                                  from ps_job fp3
                                 where fp3.emplid = &b.emplid
                                   and fp3.empl_rcd = &b.empl_rcd
                                   and fp3.empl_status <> &b.empl_status
                                   and effdt <= $x000_where_select_asofdate))
and fp1.effseq = (select max(effseq)
                   from ps_job
                  where emplid = fp1.emplid
                    and empl_rcd = fp1.empl_Rcd
                    and effdt = fp1.effdt)
end-select
end-procedure

!AXL New Procedure - Begin
!************************************************************************
BEGIN-PROCEDURE GET-USERID
!************************************************************************
   let $USERID = '99999999999'

BEGIN-Select

MAP.SSN
MAP.EMPLID
MAP.EMPL_RCD

   let $USERID = &MAP.EMPLID

FROM PS_GEX_EMPLID_MAPP MAP
Where MAP.ssn   = &b.emplid
     and MAP.empl_rcd = &b.empl_rcd

END-SELECT

END-PROCEDURE GET-USERID
!AXL New Procedure - End


!***********************************************************************
Begin-Procedure get-deptid-descr !VENDVKV ITG 38435 STARTS 04/02/2007
!***********************************************************************

Begin-Select

E.DEPTID
E.DESCR

FROM PS_DEPT_TBL E 

WHERE E.DEPTID = &b.deptid 
  AND E.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_DEPT_TBL
        WHERE E.DEPTID = DEPTID 
          AND EFFDT <= $x000_where_select_asofdate)
End-Select

end-procedure  !VENDVKV ITG 38435 ENDS 04/02/2007

!***********************************************************************
Begin-Procedure get-jobcode-descr !VENDVKV ITG 38435 STARTS 04/02/2007
!***********************************************************************

Begin-Select

D.JOBCODE
D.DESCR

FROM PS_JOBCODE_TBL D 

WHERE D.jobcode = &b.jobcode 
  AND D.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOBCODE_TBL
        WHERE D.JOBCODE = JOBCODE 
          AND EFFDT <= $x000_where_select_asofdate)
End-Select

end-procedure  !VENDVKV ITG 38435 ENDS 04/02/2007



!*********************************************************************
!Retrieves the employees with latest paychecks and with garnishment 
!deductions.
!*********************************************************************
   
begin-procedure write-fields

  do select-xlat-value
  let $last_4_ssn = substr(&b.emplid,6,4)
  write 1 from &a.name:24
	       $last_4_ssn:4
	       &b.location:5
	       $empl_status_xlatvalue:20
	       $status_dt:10
               $userid:11			!AXL Add
               &b.deptid:10                     !VENDVKV ITG 38435 04/02/2007
               &e.descr:30                      !VENDVKV ITG 38435 04/02/2007
               &b.jobcode:8                     !VENDVKV ITG 38435 04/02/2007 
               &d.descr:30                      !VENDVKV ITG 38435 04/02/2007     

end-procedure 

begin-procedure select-xlat-value
move ' ' to $empl_status_xlatvalue
begin-select
xlatlongname
  move &xlatlongname to $empl_status_xlatvalue
from PSXLATITEM  ! xlattable  ISDVNPK 8/17/2007 Modified for Upgrade 9.0
where fieldname = 'EMPL_STATUS'
and fieldvalue = &B.EMPL_STATUS
!and language_cd = 'ENG'
and eff_status = 'A'
and effdt = (select max(effdt)
		from PSXLATITEM  ! xlattable  ISDVNPK 8/17/2007 Modified for Upgrade 9.0
		where fieldname = 'EMPL_STATUS'
		and fieldvalue = &b.empl_status
		!and language_cd = 'ENG'
		and effdt <= $x000_where_select_Asofdate
		and eff_Status = 'A')
end-select
end-procedure
         
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'gexregtp.sqc'  !Get-Translate-Full-Part
#Include 'getcodta.sqc'  !Get-Company-Data
#Include 'getpgdta.sqc'  !Get-Paygroup-Data
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'getjobtl.sqc'
#include 'getactnm.sqc'
#Include 'reset.sqc'     !Reset Printer Procedure