!****************************************************************************************
! GEXPYPYY:  This yearly vacation process for part-time employees will                  * 
!            calculate the correct amount of vacation dollars that the                  *
!            employee 'earned' in the last calendar year of employment.                 *
!            The vacation dollars are awarded at the beginning of the                   *
!            calendar year, prior to the first pay run of the year                      *
!                                                                                       *
!            This yearly process will execute for those employees that                  *
!            have at least one year of service as of the first of the                   *
!            year. Employees with less than one year service will                       *
!            receive their vacation on their service anniversary. Also,                 *
!            any employees that meet a milestone anniversary date                       *
!            receive their additional vacation(based on the vacation                    *
!            schedule) as of their service date.                                        *
!                                                                                       *
!            Additional vacation for EEs that meet milestone service                    *
!            anniversaries will be calculated in the weekly part-time                   *
!            vacation process.  This process is intended to compute                     *
!            earned vacation based on service as of the first of the                    *
!            calendar year.                                                             *
!                                                                                       *
!            Clone of GEXPYPTY ,Created this for the UNION CODE MUR                     *
!****************************************************************************************
!                                                                                       *
!               Confidentiality Information:                                            *
!                                                                                       *
! This module is the confidential and proprietary information of                        *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted                 *
! in any form, by any means, in whole or in part, nor is it to be used                  *
! for any purpose other than that for which it is expressly provided                    *
! without the written permission of Giant Eagle.                                        *
!                                                                                       *
!****************************************************************************************
!                         MODIFICATION HISTORY                                          *
!****************************************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE                         *        
!****************************************************************************************
!           ISDV-DZK    04/20/2009     INITIAL CREATION       Clone of GEXPYPTY         *
!*****************************************************************************************
                                                                                        
#include 'setenv.sqc' !Set environment                                                  
#include 'setup32.sqc'

!***********************************************************************
begin-setup
!***********************************************************************
  declare-report Vacation-Carry-Over-Report
Printer-Type=HPLASERJET
    layout=DEFAULT
  end-declare

  declare-report Report-log
Printer-Type=HPLASERJET
    layout=DEFAULT
  end-declare
!***********************************************************************
end-setup
!***********************************************************************
!***********************************************************************
begin-heading 7 for-reports=(report-log)
!***********************************************************************
  let $REPORTID = 'PYPYYLOG'
  move 'Part Time Vacation Calculation - Report Log' to $ReportTitle

 #Include 'stdhdg01.sqc'

  position          (+2)
  print 'Trans#'    (,1)
  print 'Emplid'    (,18)
  print 'Message'   (,50)
  print '-'         (+1,1,174) fill
!***********************************************************************
end-heading
!***********************************************************************

!***********************************************************************
begin-heading 7 for-reports=(Vacation-Carry-Over-Report)
!***********************************************************************
  move 'Vacation Carry Over Report' to $ReportTitle
  LET $REPORTID = 'PYPYYVAC'

 #Include 'stdhdg01.sqc'

  position (+2)

  print 'EmplID'            (,1)
  print 'Name'              (,20)
  print 'Effective Date'    (,55)
  print 'Earnings Code'     (,75)
  print 'Hourly Rate'       (,95)
  print 'Vacation Taken'    (,115)
  print 'Vacation Allowed'  (,135)

  print '-'                 (+1,1,9)  fill
  print '-'                 (,20,30)  fill
  print '-'                 (,55,14)  fill
  print '-'                 (,75,13)  fill
  print '-'                 (,95,11)  fill
  print '-'                 (,115,14) fill
  print '-'                 (,135,16) fill
!***********************************************************************
end-heading
!***********************************************************************

!***********************************************************************
begin-report
!***********************************************************************
  use-report Report-log

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  move 'GEXPYPYY' to $ReportID
  move 'Part-Time Employee Vacation Calculation - Yearly' to $ReportTitle

  show '$ReportID='$ReportID
  show '$ReportTitle='$ReportTitle

  !AXL 4/9/2002 New run parameter logic - Begin
  
  show 'Selecting runtime params'     ! ISDVMXR, 10/11/06,

  !Let $GEXXX902_Deptid_Alias   = 'A.DEPTID'
  Let $GEXXX970_Deptid_Alias  = 'A.Deptid'
  Let $GEXXX970_Jobcode_Alias = 'A.Jobcode'
  
   ! ISDVMXR, 10/11/06, Added 
   Let $GEXXX913_UNION_CD_Alias = 'A.UNION_CD'
   Do GEXXX913-Select-UNION-CD-Parameters
   ! ISDVMXR, 10/11/06, End

  If $prcs_process_instance = ''
  
   !LET $Prcs_OprID = 'HRBATCH'   !isdvmxr testing
   !LET $Prcs_Run_Cntl_ID = 'gexpypyy'  !isdvmxr testing
   
    !Let $DeptIDString = ''''
    !Display 'Enter DeptID to Exclude or leave blank to exit.'
    !While 1=1
    !  Input $In-DeptID Maxlen=10 'DeptID'
    !  Uppercase $In-DeptID
    !  If Rtrim($In-DeptID, ' ') = ''
    !    Concat '''' With $DeptIDString
    !    Break
    !  End-If
    !  If $DeptIDString <> ''''
    !    Concat ''',''' With $DeptIDString
    !  End-If
    !  Concat $In-DeptID With $DeptIDString
    !End-While
    !If $DeptIDString = ''''''
    !  Let $GEXXX902_EXCLUDE_DEPTID_CRITERIA = '1=1'
    !  Let $GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
    !Else
    !  Let $GEXXX902_EXCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' Not In (' || $DeptIDString || ')'
    !  Let $GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_EXCLUDE_DEPTID_CRITERIA
    !End-If

    Display 'Enter Deptid/Jobcode to exclude or leave blank to exit.'
    While 1=1
      Input $In-Deptid Maxlen=6 'Deptid'
      Uppercase $In-Deptid
      If Rtrim($In-Deptid, ' ') = ''
        Break
      Else
        Input $In-Jobcode Maxlen=6 'Jobcode'
        Uppercase $In-Jobcode
        If Rtrim($In-Jobcode, ' ') = ''
          Let $Exclude_Condition = '(' || $GEXXX970_Deptid_Alias || ' != '''  || $In-Deptid || ''')'
        Else
          !Let $Exclude_Condition = '(' || $GEXXX970_Deptid_Alias || ' != '''  || $In-Deptid || ''' And ' || $GEXXX970_Jobcode_Alias || ' != '''  || $In-Jobcode || ''')'
          Let $Exclude_Condition = '(' || $GEXXX970_Deptid_Alias ||                                      
                                         '||'                    ||
                                         $GEXXX970_Jobcode_Alias ||
                                         ' != '''  || $In-Deptid ||
                                                      $In-Jobcode || ''')'
        End-If
        Add 1 To #GEX_RC_DPTJC_ROWS
        If #GEX_RC_DPTJC_ROWS = 1
          Let $GEXXX970_EXCLUDE_DEPTID_JOBCODE_CRITERIA = '(' || $Exclude_Condition
        Else
          Let $GEXXX970_EXCLUDE_DEPTID_JOBCODE_CRITERIA = $GEXXX970_EXCLUDE_DEPTID_JOBCODE_CRITERIA || ' And '  || $Exclude_Condition
        End-If
      End-If
    End-While

    If #GEX_RC_DPTJC_ROWS = 0
      Let $GEXXX970_EXCLUDE_DEPTID_JOBCODE_CRITERIA = '1=1'
      Let $GEXXX970_EXCLUDE_DEPTID_JOBCODE_DISPLAY_CRITERIA = 'NONE'
    Else
      Let $GEXXX970_EXCLUDE_DEPTID_JOBCODE_CRITERIA = $GEXXX970_EXCLUDE_DEPTID_JOBCODE_CRITERIA || ')'
      Let $GEXXX970_EXCLUDE_DEPTID_JOBCODE_DISPLAY_CRITERIA = $GEXXX970_EXCLUDE_DEPTID_JOBCODE_CRITERIA
    End-If

  Else
   
    !Do GEXXX902-Select-Deptid-Parameters
    Do GEXXX970-Select-Deptid-Jobcode-Parameters
  End-If
  !AXL 4/9/2002 New run parameter logic - End

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show ' '
  show 'Report Began at ' &timeBegan ' on ' &dateBegan
  show ' '

  !AXL 04/18/2000 New logic to establish date parms - Begin

  let $year = datetostr(datenow(), 'YYYY' )  !GEX ISDVNPK Commented for Testing 9.0
  !let $year = '2007'  !  GEX ISDVNPK Added for Testing 9.0
  !show ' $year = ' $year 
  let $next_year = datetostr(dateadd(datenow(), 'YEAR' , 1), 'YYYY' ) ! GEX ISDVNPK Commented for Testing 9.0
  !let $next_year = '2008'  !  GEX ISDVNPK Added for Testing 9.0
  !show ' $next_year = ' $next_year 
  !***Trick - Enable the following when running late - Begin
  !let $year = datetostr(dateadd(datenow(), 'YEAR' , -1), 'YYYY' )
  !let $next_year = datetostr(datenow(), 'YYYY' )
  !***Trick - Enable when running late - End

  let #AsOfYYYY = to_number($year)
  !show '  #AsOfYYYY = '  #AsOfYYYY
  Let $AsOfDate   = '31-DEC-' || $year   ! GEX ISDVNPK Commented for Testing 9.0
  !Let $AsOfDate   = '31-DEC-' || '2007'   !  GEX ISDVNPK Added for Testing 9.0
  !show ' $AsOfDate   = ' $AsOfDate
  do Convert-To-DTU-Date($AsOfDate, $AsOfDate_dtu)  
  !show ' $AsOfDate_dtu ' $AsOfDate_dtu
  Let $effdt      = '01-JAN-' || $next_year
  show '              ' 
  Show 'Current Year = ' $year
  Show 'Next Year    = ' $next_year
  Show '$AsOfDate    = ' $asofdate
  Show '$effdt       = ' $effdt
  Show '$AsOfDate_dtu= ' $asofdate_dtu
  show '              '
  !do Get-Last-Confirmed-Pay  
 !AXL 04/18/2000 New logic to establish date parms - End

  do GEXREGTP_init_strings

  move 'N' to $Errorfound
  
  !let $var = 'AND A.REG_TEMP '||$GEXREGTP_part_time_code_string
  SHOW '$GEXREGTP_part_time_code_string  ' $GEXREGTP_part_time_code_string
  let $var = 'AND ( (A.REG_TEMP '||$GEXREGTP_part_time_code_string || ') OR
                  ( A.DEPTID IN (''0062'',''0066'',''0042'') ) )'
  !show '$var ' $var

  if $errorfound = 'N'
    move 'N' to $found
    let #inputtran = 0
    do Select-Employees 
   
  end-if
  
Report-Exit:

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show ' '
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  display ' '
  display #InputTran 999,999 noline
  display ' Transactions Processed'

  do Commit-Transaction
  !rollback
  !Do Rollback-Transaction
  do stdapi-term
!***********************************************************************
end-report
!***********************************************************************

!Begin-Procedure Get-Last-Confirmed-Pay
!#debug9 Show 'Get-Last-Confirmed-Pay'
!Begin-Select Loops=1
!To_Number(To_Char(pay_end_dt,'YYYY')) &year
!pay_end_dt
!  Let #year = &year
!  Let #next_year = #year+1
!  Move #year To $year 9999
!  Move #next_year To $next_year 9999
!  Let $pay_end_dt = &pay_end_dt
! Let $AsOfDate   = '31-DEC-' || $year
! Let $effdt      = '01-JAN-' || $next_year
!Show 'Current Year = ' $year
!do Convert-To-DTU-Date($AsOfDate, $AsOfDate_dtu)
!From   ps_pay_calendar
!Where  pay_end_dt              =
!      (Select Max(pay_end_dt)
!       From   ps_pay_calendar
!       Where  pay_end_dt      <= $AsOfToday
!       And    pay_confirm_run  = 'Y')
!And    pay_confirm_run         = 'Y'
!End-Select
!End-Procedure
!***********************************************************************
Begin-Procedure Select-Employees
!***********************************************************************
 ! show ' Select-Employees  procedure  starting '
  show 'Union_cd ' $GEXXX913_INCLUDE_UNION_CD_CRITERIA
  show 'Exclude Deptid, Jobcode ' $GEXXX970_EXCLUDE_DEPTID_JOBCODE_CRITERIA
#debug9 Show 'Select-Employees'
begin-select ON-ERROR=SQL-Error-Found
A.DEPTID
A.EMPLID
A.EMPL_RCD
A.EFFDT
A.REG_TEMP
A.COMPANY
!SXK 11/03/99 Changed from b.union_cd
A.UNION_CD
A.JOBCODE		!AXL 1/14/2004 New 
A.FULL_PART_TIME	!AXL 1/14/2004 New
B.GEX_VCN_SENIOR_DT
!B.REHIRE_DT		!GEX-MXT commented for rehire date logic in 9.0
B.SERVICE_DT

  move 'N' to $found
  move 'Y' to $Empl_found
  move 'N' to $skip_record	!AXL 1/14/2004 New

  move &A.EMPLID to $emplid
  move &A.DEPTID to $deptid	!AXL 1/14/2004 New
  move &A.UNION_CD to $union_cd	!AXL 1/14/2004 New
  SHOW        $emplid '/' $deptid '/' &A.jobcode '/'  $union_cd  '/' &A.COMPANY
  !AXL 1/14/2004 - Begin 
 
  !AXL 1/14/2004 - End 

  if RTRIM(&B.GEX_VCN_SENIOR_DT,' ') <> ''
    move &B.GEX_VCN_SENIOR_DT to $service_dt
  else
    ! GEX-MXT 03/24/2008 Fixed for REHIRE DT-Begin
   let $GEXJOB_REH_EMPLID = &A.emplid
   let #GEXJOB_REH_EMPLRCD = &A.EMPL_RCD
   let $GEXJOB_REH_ASOFDATE = $AsOfDate
   do Get-Job-Rehire-Dt
   !show 'emplid:' &a.emplid ',$GEXJOB_REH_REHIRE_DT ' $GEXJOB_REH_REHIRE_DT
   ! GEX-MXT 03/24/2008 Fixed for REHIRE DT -End
  
    !if RTRIM(&B.REHIRE_DT,' ') <> ''	! GEX-MXT 03/24/2008 Fixed for REHIRE DT
    if rtrim($GEXJOB_REH_REHIRE_DT,' ') <> ''	! GEX-MXT 03/24/2008 Fixed for REHIRE DT
      do check-rei
      if $rei = 'Y'
        move &B.SERVICE_DT to $service_dt
      else
        !move &B.REHIRE_DT to $service_dt	! GEX-MXT 03/24/2008 Fixed for REHIRE DT
        move $GEXJOB_REH_REHIRE_DT to $service_dt	! GEX-MXT 03/24/2008 Fixed for REHIRE DT
      end-if
    else
      move &B.SERVICE_DT to $service_dt
    end-if
  end-if

  Let $Service_Cmp_Dt = strtodate($service_dt,'DD-MON-YYYY')	!VENDSXN
  !show '$Service_Cmp_Dt: '$Service_Cmp_Dt	!VENDSXN

  !AXL 1/14/2004 - Begin
  let $svc_date_yyyymmdd = datetostr(strtodate($service_dt,'DD-MON-YYYY'),'YYYYMMDD')
    Do format-datetime ($service_dt,$service_dt_cmp,{DEFCMP},'','')    			!ISDVSRC
    #debug8 show '$service_dt_cmp: ' $service_dt_cmp                                    !ISDVSRC
  !  show '$service_dt_cmp: ' $service_dt_cmp  
  let $scv_met = 'N'
  
  do Convert-To-DTU-Date($service_dt, $service_dt_dtu)
  #debug8 show '$service_dt_dtu: ' $service_dt_dtu
 ! show '$service_dt_dtu: ' $service_dt_dtu

  do dtu-diff-years($service_dt_dtu, $AsOfDate_dtu, #dtu_years)
  #debug8 show '#dtu_years: ' #dtu_years
  !show '#dtu_years: ' #dtu_years


  !ISDVSRC 06/06/05 - CSR 10903 ITG:32446
  ! the 4/28/2000 code should NOT change for #0062.
  ! will change for #0066 - 80028 & 88011
  !ISDVSRC 06/06/05  - CSR 10903 ITG:32446
  

    
  !AXL 1/14/2004 - End
  
  if $skip_record = 'N'
    ! show 'DTU Years'  #dtu_years
     if #dtu_years >= 1
        add 1 to #inputtran

        do calc-vacation-amount
 
       !do calc-total-absence-period
       !if #total_absence > 0
       !do adjust-year-vac-amt
       !end-if

        let #year_vac_amt = #week_vac_amt * #eligible_weeks
        multiply 1 times #year_vac_amt round=2
          !show '#year_vac_amt: ' #year_vac_amt
        #debug8 show '#year_vac_amt: ' #year_vac_amt

        if #year_vac_amt < 0
           let #year_vac_amt = 0
        end-if

        do average-hours-worked

        If #avg_weekly_hrs_worked = 0
           let #vac_hourly_rt = 0
        Else
           let #vac_hourly_rt = #week_vac_amt/#avg_weekly_hrs_worked
        End-If
          !show '#vac_hourly_rt: ' #vac_hourly_rt
        #debug8 show '#vac_hourly_rt: ' #vac_hourly_rt

    do print-vacation-carry-over-data
        do check-existing-PTvac-erncd
        do insert-addl-pay-data
       !AXL 12/06/2000 New logic to update prior ADDL_PAY_DATA row - Begin
        do closeout-prior-yr
        if $prior_found ='Y'
           do updt-addl-pay-data
        end-if
       !AXL 12/06/2000 New logic to update prior ADDL_PAY_DATA row - End
     end-if
  end-if

FROM   PS_EMPLOYMENT B,
       PS_JOB        A

WHERE  A.EMPLID           = B.EMPLID 
AND    A.EMPL_RCD        = B.EMPL_RCD
!SXK 11/03/99 Changed from b.union_cd
! CWB 10/04/2001 BEGIN - Added union_cd COL
!AND    A.UNION_CD        IN ('G01','G02','G05','COL',    ISDVMXR 10/11/2006 ITG # 36902
!                             'G07','G08','G09','G10')  !AXL 1/14/2004 ISDVMXR 10/11/2006 ITG # 36902
AND [$GEXXX913_INCLUDE_UNION_CD_CRITERIA]		! ISDVMXR 10/11/2006 ITG # 36902
! CWB 10/04/2001 END - Added union_cd COL
AND    A.EMPL_STATUS NOT IN ('T','R','U','Q')

AND    A.EFFDT            =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID      = A.EMPLID
       AND    EMPL_RCD   = A.EMPL_RCD
       AND    EFFDT      <= $AsOfDate)

AND    A.EFFSEQ           =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID      = A.EMPLID
       AND    EMPL_RCD   = A.EMPL_RCD
       AND    EFFDT       = A.EFFDT)
       [$var]
    !AND [$GEXXX902_EXCLUDE_DEPTID_CRITERIA]	!AXL 4/9/2002
    AND [$GEXXX970_EXCLUDE_DEPTID_JOBCODE_CRITERIA] !AXL 12/2/2002
 !  AND A.EMPLID ='165348808' !in  ('164481517','209304565','209305932','194528424','181423346','165348808','170683530') !IN ('168706497','170584609')	!Testing vendsxn 8/9/07
ORDER  BY A.EMPLID
End-Select

  if $Empl_found <> 'Y'
    show 'No employees found to calculate part time vacation amounts'
  end-if
  
  !  show ' Select-Employees  procedure  ending '
!***********************************************************************  
End-Procedure
!***********************************************************************

!***********************************************************************
begin-procedure check-rei
!***********************************************************************
  ! show '  begin-procedure check-rei '
#debug9 Show 'check-rei'
  let $rei = 'N'
begin-select
C.ACTION_REASON
 ! show ' &C.ACTION_REASON =  ' &C.ACTION_REASON
  If &C.ACTION_REASON  = 'REI'
    let $rei = 'Y'
  End-If
FROM   PS_JOB C
WHERE  C.EMPLID          = &A.EMPLID
AND    C.EMPL_RCD       = &A.EMPL_RCD
AND    C.EFFDT           =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID     = C.EMPLID
       AND    EMPL_RCD  = C.EMPL_RCD
       AND    EFFDT     <= &A.EFFDT
       AND    ACTION     = 'REH')
AND    C.EFFSEQ          =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID     = C.EMPLID
       AND    EMPL_RCD  = C.EMPL_RCD
       AND    EFFDT      = C.EFFDT
       AND    ACTION     = C.ACTION)
AND    C.ACTION          = 'REH'
end-select
 ! show ' begin-procedure check-rei ending '
!***********************************************************************
end-procedure
!***********************************************************************

!****************************************************************************************
begin-procedure get-prior-store
!****************************************************************************************
 !show   ' begin-procedure get-prior-store starting '
#debug9 Show 'get-prior-store'
  let $prior_deptid = ' '
begin-select

prev.deptid
      !  show '  &prev.deptid = ' &prev.deptid
	let $prior_deptid = &prev.deptid

FROM   PS_JOB prev
WHERE  prev.EMPLID       = &A.EMPLID
AND    prev.EMPL_RCD     = &A.EMPL_RCD
AND    prev.EFFDT  =
      (SELECT MAX(EFFDT) FROM  PS_JOB
       WHERE  EMPLID     = prev.EMPLID
       AND    EMPL_RCD   = prev.EMPL_RCD
       AND    DEPTID      <> &a.deptid
       AND    EFFDT      <= &A.EFFDT)
AND    prev.EFFSEQ    =
      (SELECT MAX(EFFSEQ) FROM   PS_JOB
       WHERE  EMPLID     = prev.EMPLID
       AND    EMPL_RCD   = prev.EMPL_RCD
       AND    EFFDT      = prev.EFFDT)

AND    prev.deptid       <> &a.deptid
and    prev.empl_status in ('A','L','P','S')

end-select

 !show   ' begin-procedure get-prior-store ending ' 
!***********************************************************************
end-procedure
!***********************************************************************
!******************************************************************************
! This procedure finds out the total wages during the calendar year
! or during the service year depending on the service years.
! Also, calculates weekly vacation amount as two percent of total wages
! earned.  Determines the number of weeks the employee is eligible to
! take vacation for the next year depending on the service.
! Calculates the earned yearly vacation amount as the product of
! weekly vacation amount times the number of weeks the employee is eligible.
!*******************************************************************************
!***********************************************************************
begin-procedure calc-vacation-amount
!***********************************************************************
   !Show 'calc-vacation-amount starting '
#debug9 Show 'calc-vacation-amount'
  do get-cal-year-wages
  move #cal_year_wages to #total_wages

  let #week_vac_amt = #total_wages * 0.02
  multiply 1 times #week_vac_amt round=2

  #debug8 Show '#week_vac_amt: ' #week_vac_amt
  #debug8 Show '$union_cd: ' $union_cd
  !Show '#week_vac_amt: ' #week_vac_amt
  !Show '$union_cd: ' $union_cd

!SXK 11/03/99 Changed from b.union_cd
   !AXL 1/14/2004 Change IF-THEN to EVALUATE stmts - Begin
   Evaluate $union_cd
       When = 'MUR'
           evaluate #dtu_years 
              when >= 13
                move 4 to #eligible_weeks
                break
              when >= 8
                  move 3 to #eligible_weeks
                  break
              when >= 3
                  move 2 to #eligible_weeks
                  break
              when >= 1
                  move 1 to #eligible_weeks
                  break
              when-other
                  move 0 to #eligible_weeks
           end-evaluate
           break

   End-evaluate 

   #debug8 Show '#eligible_weeks from calc-vacation-amount proc: ' #eligible_weeks
   !AXL 1/14/2004 Change IF-THEN to EVALUATE stmts - End
   Show '#eligible_weeks from calc-vacation-amount proc: ' #eligible_weeks
   !  Show 'calc-vacation-amount  ending  ' 
end-procedure   
 
!********************************************************************
!This procedure calculates the total wages employee paid during the 
!calendar year.
!********************************************************************

begin-procedure get-cal-year-wages
   !Show 'get-cal-year-wages starting '
 #debug9 Show 'get-cal-year-wages'
  let #cal_year_wages = 0

     ! MXR, 10/11/06, Added
   Let $GEXXX900_Company_Alias = 'F.COMPANY'
   Do GEXXX900-Select-Company-Parameters
   show 'Company ' $GEXXX900_INCLUDE_COMPANY_CRITERIA
   ! MXR, 10/11/06, End
  show  &A.EMPLID  '/'  &A.EMPL_RCD '/'  &A.COMPANY '/'  #AsOfYYYY
begin-select on-error=sql-error-found
SUM(F.GRS_YTD) &F.GRS_YTD

  move &F.GRS_YTD to #cal_year_wages

  #debug8 Show 'get-cal-year-wages: ' #cal_year_wages
 ! Show 'get-cal-year-wages: ' #cal_year_wages

FROM   PS_EARNINGS_BAL F

WHERE  F.EMPLID            = &A.EMPLID
!PSR 08/22/2002 Upgrade 8 Begin
AND    F.EMPL_RCD          = &A.EMPL_RCD
!PSR 08/22/2002 Upgrade 8 End
!AND    F.COMPANY           = &A.COMPANY   !ISDVMXR 10/19/2006 ITG # 36902
AND   ( F.COMPANY 	   > '999' or [$GEXXX900_INCLUDE_COMPANY_CRITERIA] ) ! ISDVMXR 10/11/2006 or  j.COMPANY in ('010','175'))       !ignore indys!AXL 12/2/2002 
AND    F.BALANCE_ID        = 'CY'
AND    F.BALANCE_YEAR      = #AsOfYYYY

AND    F.BALANCE_PERIOD    =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_EARNINGS_BAL
       WHERE  EMPLID       = F.EMPLID
!PSR 08/22/2002 Upgrade 8 Begin
       AND    EMPL_RCD     = F.EMPL_RCD
!PSR 08/22/2002 Upgrade 8 End
       AND    COMPANY      = F.COMPANY
       AND    BALANCE_ID   = F.BALANCE_ID
       AND    BALANCE_YEAR = F.BALANCE_YEAR
       AND    SPCL_BALANCE = F.SPCL_BALANCE
       AND    ERNCD        = F.ERNCD)


AND    F.SPCL_BALANCE      = 'N'
!AND    F.ERNCD        NOT IN ('ADJ','525','602','650','651')         GBD 09/30/2003
AND    F.ERNCD        NOT IN ('ADJ','525','602','650','651','DDP')   !GBD 09/30/2003
end-select
   !  Show 'get-cal-year-wages ending ' 
!***********************************************************************
end-procedure
!***********************************************************************


!**************************************************************
!This procedure calculates the average hours worked during the 
!calendar year.
!**************************************************************
!***********************************************************************
begin-procedure average-hours-worked
!***********************************************************************
 !  Show 'average-hours-worked starting '
#debug9 Show 'average-hours-worked'
  let #avg_weekly_hrs_worked = 0
   Let $GEXXX900_Company_Alias = 'J.COMPANY'
   Do GEXXX900-Select-Company-Parameters
   show 'Company ' $GEXXX900_INCLUDE_COMPANY_CRITERIA
begin-select on-error=sql-error-found
SUM(J.HRS_YTD) &J.HRS_YTD

  let #avg_weekly_hrs_worked = &J.HRS_YTD / 52
  multiply 1 times #avg_weekly_hrs_worked round=2
  #debug8 Show 'J.HRS_YTD: ' &J.HRS_YTD
  #debug8 Show '#avg_weekly_hrs_worked: ' #avg_weekly_hrs_worked
 !  Show 'J.HRS_YTD: ' &J.HRS_YTD
 !  Show '#avg_weekly_hrs_worked: ' #avg_weekly_hrs_worked
   
FROM   PS_EARNINGS_BAL J
WHERE  J.EMPLID            = &A.EMPLID
AND    J.EMPL_RCD          = &A.EMPL_RCD
!AND    J.COMPANY           = &A.COMPANY
AND   ( J.COMPANY 	   > '999'	or [$GEXXX900_INCLUDE_COMPANY_CRITERIA])  ! ISDVMXR 10/11/2006 or  j.COMPANY in ('010','175'))       !ignore indys!AXL 12/2/2002 
AND    J.BALANCE_ID        = 'CY'
AND    J.BALANCE_YEAR      = #AsOfYYYY
AND    J.BALANCE_PERIOD    =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_EARNINGS_BAL
       WHERE  EMPLID       = J.EMPLID
       AND    EMPL_RCD     = J.EMPL_RCD
       AND    COMPANY      = J.COMPANY
       AND    BALANCE_ID   = J.BALANCE_ID
       AND    BALANCE_YEAR = J.BALANCE_YEAR
       AND    SPCL_BALANCE = J.SPCL_BALANCE
       AND    ERNCD        = J.ERNCD)
AND    J.SPCL_BALANCE      = 'Y'
AND    J.ERNCD             = 'WK1'

end-select
  !    Show 'average-hours-worked ending '
!***********************************************************************
end-procedure
!***********************************************************************


!***********************************************************************
!This procedure calculates the total absentee days of the employee 
!during the service year or calendar year as determined by the service
!years.
!***********************************************************************
!***********************************************************************
begin-procedure calc-total-absence-period
!***********************************************************************
 ! Show 'calc-total-absence-period start'
#debug9 Show 'calc-total-absence-period'
  move '31-DEC-' to $RFL_date
  concat $year with $RFL_date
  move '01-JAN-' to $start_date
  concat $year with $start_date

  move 'N' to $No_More_Absence
  let #total_absence = 0

!**********************************************************************
!Need to find out the absence period by ignoring the actions PLA/FML,
!or PLA/WC2 or LOA/DIS (if the employee belongs to G01), otherwise, 
!if the employee does not belong to G01, just ignore PLA/FML and 
!calculate the absence period
!**********************************************************************

  while $No_More_Absence = 'N'
!SXK 11/03/99 Changed from b.union_cd
    if &A.UNION_CD = 'G01'
      let $ignore_string = 'AND G.ACTION||G.ACTION_REASON NOT IN (''PLAFML'',''PLAWC2'',''LOADIS'')'
    else
      let $ignore_string = 'AND G.ACTION||G.ACTION_REASON NOT IN (''PLAFML'')'
    end-if
    do select-LOA-periods
    !  Show 'calc-total-absence-period end'
  end-while
!***********************************************************************  
end-procedure
!***********************************************************************


!*********************************************************************
!This procedure adjusts the already calculated earned yearly vacation
!amount depending on the total absence period during the last service 
!year or during the last calendar year.(Determined by the Number of 
!service years). 
!*********************************************************************
!***********************************************************************
begin-procedure adjust-year-vac-amt
!***********************************************************************
  !  Show 'adjust-year-vac-amt starting'
#debug9 Show 'adjust-year-vac-amt'
  if #total_absence <= 90
    goto skip-adjust
  end-if

  if #total_absence > 90 and #total_absence <= 180
     multiply 0.25 times #eligible_weeks
  else    !> 180 days
    move '31-DEC-' to $RFL_date
    concat $year with $RFL_date
    move '01-JAN-' to $start_date
    concat $year with $start_date

!******************************************************************
!If the total absence period calculated is greater than 180 days, 
!and the employee belongs to union code G01, need to find out the 
!total absence period agian by ignoring only PLA/FML(FMLA Leave)
!and PLA/WC2(Workers Compensation).
!******************************************************************

    move 'N' to $No_More_Absence
!SXK 11/03/99 Changed from b.union_cd
    if &A.UNION_CD = 'G01'
      let #total_absence = 0
      while $No_More_Absence = 'N'
        let $ignore_string = 'AND G.ACTION||G.ACTION_REASON NOT IN (''PLAFML'',''PLAWC2'')'
        do select-LOA-periods
      end-while
    end-if

    if #total_absence > 180 and #total_absence <= 270 
       multiply 0.5 times #eligible_weeks
    else   ! > 270 days
       let #eligible_weeks = 0
    end-if
  end-if

skip-adjust:
!SXK 11/03/99 Changed from b.union_cd
  if &A.UNION_CD = 'G01'
    move '31-DEC-' to $RFL_date
    concat $year with $RFL_date
    move '01-JAN-' to $start_date
    concat $year with $start_date

!************************************************************************
!Employee that has absence period for the action PLA/WC2 (workers Comp)
!must have worked some hours during the year in order to 
!qualify for any vacation. Any hours worked in the year
!will guarantee full earned vacation dollars.
!************************************************************************

    do check-work-comp
  end-if
   !   Show 'adjust-year-vac-amt ending'
!***********************************************************************  
end-procedure
!***********************************************************************


!*********************************************************************
!This procedure calculates the total absence period. It finds each
!Leave of absence start date and end date during the year
!and adds them together. It enables to sum all the days, the employee
!was in Leave of Absence during the year even though he/she
!uses it multiple times.
!*********************************************************************
!***********************************************************************
begin-procedure select-LOA-Periods
!***********************************************************************
  ! show 'select-LOA-Periods starting '
#debug9 Show 'select-LOA-Periods'
   do select-starting-absence-date

   if $No_More_Absence = 'N'
      do convert-to-dtu-date(&G.EFFDT,$Start_dt_dtu)
   else
      goto skip-process
   end-if
!SXK 11/03/99 Changed from b.union_cd
   if &A.UNION_CD = 'G01'
     let $ignore_string = 'AND H.ACTION||H.ACTION_REASON NOT IN (''PLAFML'',''PLAWC2'',''LOADIS'')'
   else
     let $ignore_string = 'AND H.ACTION||H.ACTION_REASON NOT IN (''PLAFML'')'
   end-if

   do select-RFL-date

   if $RFL_date_found = 'Y'
      do Convert-To-Dtu-date(&H.EFFDT,$RFL_dt_dtu)
   else
      do convert-to-dtu-date($RFL_date,$RFL_dt_dtu)
      move 'Y' to $No_More_Absence
   end-if

   do dtu-diff-days($Start_dt_dtu,$RFL_dt_dtu,#diff_days)
   add #diff_days to #total_absence

   do convert-from-dtu-date($RFL_dt_dtu,$start_date)

skip-process:
  !   show 'select-LOA-Periods ending '
!***********************************************************************
end-procedure
!***********************************************************************


!**********************************************************************
!This procedure selects the each Leave of Absence period's start date
!**********************************************************************
!***********************************************************************
begin-procedure select-starting-absence-date
!***********************************************************************
  ! Show 'select-starting-absence-date starting '
#debug9 Show 'select-starting-absence-date'
  move 'N' to $found

Begin-Select on-error=sql-error-found
G.EFFDT
  move 'Y' to $found
FROM   PS_JOB G

WHERE  G.EMPLID           = &A.EMPLID
AND    G.EMPL_RCD        = &A.EMPL_RCD

AND    G.EFFDT            =
      (SELECT MIN(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID      = G.EMPLID
       AND    EMPL_RCD   = G.EMPL_RCD
       AND    EMPL_STATUS = G.EMPL_STATUS
       AND    EFFDT       > $Start_date
       AND    EFFDT      <= $RFL_date)

AND    G.EFFSEQ           =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID      = G.EMPLID
       AND    EMPL_RCD   = G.EMPL_RCD
       AND    EMPL_STATUS = G.EMPL_STATUS
       AND    EFFDT       = G.EFFDT)

AND    G.EMPL_STATUS      = 'P'  !Leave of absence paid
  [$ignore_string]
end-select

  if $found = 'N'
    move 'Y' to $No_More_Absence
  end-if
 !    Show 'select-starting-absence-date ending '
!***********************************************************************  
end-procedure  
!*********************************************************************** 


!*****************************************************************
!This procedure selects each Leave of Absence period's end date
!*****************************************************************
!***********************************************************************
begin-procedure select-RFL-date
!***********************************************************************
  !Show 'select-RFL-date starting' 
#debug9 Show 'select-RFL-date'
  move 'N' to $RFL_date_found

Begin-Select on-error=sql-error-found
H.EFFDT
  move 'Y' to $RFL_date_found
FROM   PS_JOB H

WHERE  H.EMPLID           = &A.EMPLID
AND    H.EMPL_RCD        = &A.EMPL_RCD

AND    H.EFFDT            =
      (SELECT MIN(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID      = H.EMPLID
       AND    EMPL_RCD   = H.EMPL_RCD
       AND    EMPL_STATUS = H.EMPL_STATUS
       AND    EFFDT       > &G.EFFDT
       AND    EFFDT      <= $RFL_date)

AND    H.EFFSEQ           =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID      = H.EMPLID
       AND    EMPL_RCD   = H.EMPL_RCD
       AND    EMPL_STATUS = H.EMPL_STATUS
       AND    EFFDT       = H.EFFDT)

AND    H.EMPL_STATUS    <> 'P'  !Leave of absence paid
  [$ignore_string]
end-select
  !  Show 'select-RFL-date ending' 
!***********************************************************************
end-procedure 
!***********************************************************************  


!***********************************************************************
!Employee that has absence period for the action PLA/WC2 (workers Comp)
!must have worked some hours during the year in order to 
!qualify for any vacation. Any hours worked in the year
!will guarantee full earned vacation dollars.
!***********************************************************************
!***********************************************************************
begin-procedure check-work-comp
!***********************************************************************
 ! Show 'check-work-comp starting'
#debug9 Show 'check-work-comp'
  move 'N' to $Worked
  move 'N' to $work_comp_found

  let $ignore_string = 'AND G1.ACTION||G1.ACTION_REASON IN (''PLAWC2'')'

Begin-Select on-error=sql-error-found
'G1'
  move 'Y' to $work_Comp_found
  do check-earnings-balance

  exit-select
   
FROM   PS_JOB G1

WHERE  G1.EMPLID         = &A.EMPLID
AND    G1.EMPL_RCD      = &A.EMPL_RCD

AND    G1.EFFDT          =
      (SELECT MIN(EFFDT)
       FROM PS_JOB
       WHERE EMPLID      = G1.EMPLID
       AND EMPL_RCD     = G1.EMPL_RCD
       AND EFFDT        >= $Start_date
       AND EFFDT        <= $RFL_date)

AND    G1.EFFSEQ         =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID     = G1.EMPLID
       AND    EMPL_RCD  = G1.EMPL_RCD
       AND    EFFDT      = G1.EFFDT)
  [$ignore_string]
end-select

  if $worked = 'N' and $work_comp_found = 'Y'
    let #eligible_weeks = 0  !No Vacation if no hours were registered other
 	 		     !than Workers compensations during the year
  end-if
  !   Show 'check-work-comp ending'
!***********************************************************************  
end-procedure 
!***********************************************************************  


!*********************************************************************
!This procedure finds if there are any hours worked by the employee
!during the year other than workers compensation (509 - ERNCD)
!*********************************************************************
!***********************************************************************
begin-procedure check-earnings-balance
!***********************************************************************
  ! Show 'check-earnings-balance starting '
#debug9 Show 'check-earnings-balance'

     ! MXR, 10/11/06, Added
   Let $GEXXX900_Company_Alias = 'E1.COMPANY'
   Do GEXXX900-Select-Company-Parameters
   show 'Company ' $GEXXX900_INCLUDE_COMPANY_CRITERIA
   ! MXR, 10/11/06, End
Begin-Select on-error=sql-error-found
Sum(E1.HRS_YTD) &hrs_ytd
  
  if &hrs_ytd > 0
    move 'Y' to $Worked
  end-if
 ! show '   &hrs_ytd ' &hrs_ytd
      
FROM   PS_EARNINGS_BAL E1

WHERE  E1.EMPLID              = &A.EMPLID
AND    E1.EMPL_RCD            = &A.EMPL_RCD
!AND    E1.COMPANY             = &A.COMPANY !ISDVMXR 10/19/2006 ITG # 36902
AND   ( E1.COMPANY             > '999'       or [$GEXXX900_INCLUDE_COMPANY_CRITERIA] ) ! ISDVMXR 10/11/2006 or  j.COMPANY in ('010','175'))       !ignore indys!AXL 12/2/2002 !AXL  12/2/2002
AND    E1.BALANCE_ID          = 'CY'
AND    E1.BALANCE_YEAR        = #AsOfYYYY

AND    E1.BALANCE_PERIOD      =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_EARNINGS_BAL
       WHERE  EMPLID          = E1.EMPLID
       AND    EMPL_RCD        = E1.EMPL_RCD
       AND    COMPANY         = E1.COMPANY
       AND    BALANCE_ID      = E1.BALANCE_ID
       AND    BALANCE_YEAR    = E1.BALANCE_YEAR
       AND    SPCL_BALANCE    = E1.SPCL_BALANCE
       AND    ERNCD           = E1.ERNCD)

AND    E1.SPCL_BALANCE        = 'N'
!AND    E1.ERNCD          NOT IN ('ADJ','509','525','602','650','651')           GBD 09/30/2003
AND    E1.ERNCD          NOT IN ('ADJ','509','525','602','650','651','DDP')     !GBD 09/30/2003
AND    E1.HRS_YTD             > 0
end-select
 ! Show 'check-earnings-balance ending '
!***********************************************************************
end-procedure   
!***********************************************************************


!*********************************************************************
!This procedure prints any vacation balances that are being carried
!over for the employee.
!*********************************************************************
!***********************************************************************
Begin-Procedure print-vacation-carry-over-data
!***********************************************************************
 !  Show 'print-vacation-carry-over-data' 
#debug9 Show 'print-vacation-carry-over-data'
  move '31-DEC-' to $RFL_date
  concat $year with $RFL_date
  move '01-JAN-' to $start_date
  concat $year with $start_date

use-report Vacation-Carry-Over-report

Begin-Select on-error=sql-error-found
I.EMPLID     (+1,1)
P.NAME       (,20)
I.EFFDT      (,55)
I.ERNCD      (,75)
I.HOURLY_RT  (,95)    Edit 999,990.00
I.GOAL_BAL   (,115)   Edit 999,990.00
I.GOAL_AMT   (,135)   Edit 999,990.00

FROM   PS_ADDL_PAY_DATA I,
       PS_PERSONAL_DATA P

WHERE  I.EMPLID          = &A.EMPLID
AND    I.EMPL_RCD       = &A.EMPL_RCD
AND    I.EMPLID          = P.EMPLID

AND    I.EFFDT           =
      (SELECT MAX(EFFDT)
       FROM   PS_ADDL_PAY_DATA
       WHERE  EMPLID     = I.EMPLID
       AND    EMPL_RCD  = I.EMPL_RCD
       AND    EFFDT     >= $Start_date
       AND    EFFDT     <= $RFL_date)

AND    I.ERNCD           = '515'

AND   (I.GOAL_AMT - I.GOAL_BAL) > 0
end-select

use-report report-log
!***********************************************************************
end-procedure
!***********************************************************************


!***************************************************************************
!This procedure tries to find if the PT Vacation Earnings Code (515) is
!defined in ADDL_PAY_ERNCD table. If there is, inserts a row in 
!ADDL_PAY_EFFDT with next pay begin date as the effective date. Otherwise,
!inserts the earning code 515 in the ADDL_PAY_ERNCD and also a row with
!effective date equal to next pay begin date in ADDL_PAY_EFFDT.
!***************************************************************************
!***********************************************************************
begin-procedure check-existing-PTVac-erncd
!***********************************************************************

   !Show 'check-existing-PTVac-erncd starting '  &A.EMPLID    '/'  &A.EMPL_RCD
#debug9 Show 'check-existing-PTVac-erncd'
  move 'N' to $found

begin-select on-error=sql-error-found
'K'
  move 'Y' to $found
  do insert-new-effdt
FROM   PS_ADDL_PAY_ERNCD K
WHERE  K.EMPLID    = &A.EMPLID
AND    K.EMPL_RCD = &A.EMPL_RCD
AND    K.ERNCD     = '515'
end-select

  if $found = 'N'
    do insert-PTVac-erncd
    do insert-new-effdt
  end-if
end-procedure


Begin-Procedure Insert-PTVac-Erncd
  ! Show 'Insert-PTVac-Erncd   '  &A.EMPLID
#debug9 Show 'Insert-PTVac-Erncd'
  begin-sql on-error=sql-error-found
    INSERT INTO PS_ADDL_PAY_ERNCD
               (EMPLID,
                EMPL_RCD,
                ERNCD,
                RECORD_SOURCE)
        VALUES (&A.EMPLID,
                &A.EMPL_RCD,
                '515',
                'O')
  end-sql
!***********************************************************************  
end-procedure
!***********************************************************************

!***********************************************************************
Begin-Procedure Insert-new-effdt
!***********************************************************************
  ! Show 'Insert-new-effdt'  &A.EMPLID
#debug9 Show 'Insert-new-effdt'
  begin-sql on-error=sql-error-found
    INSERT INTO PS_ADDL_PAY_EFFDT
               (EMPLID,
                EMPL_RCD,
                ERNCD,
                EFFDT,
                RECORD_SOURCE)
        VALUES (&A.EMPLID,
                &A.EMPL_RCD,
                '515',
                $effdt,
                'O')
  end-sql
!***********************************************************************  
end-procedure
!***********************************************************************

!***********************************************************************
Begin-Procedure Insert-Addl-Pay-Data
!***********************************************************************
   !  Show 'Insert-Addl-Pay-Data  '  &A.EMPLID
#debug9 Show 'Insert-Addl-Pay-Data'
  begin-sql on-error=sql-error-found
    INSERT INTO PS_ADDL_PAY_DATA
               (EMPLID,
                EMPL_RCD,
                ERNCD,
                EFFDT,
                ADDL_SEQ,
                DEPTID,
                JOBCODE,
                POSITION_NBR,
                ACCT_CD,
                GL_PAY_TYPE,
                ADDL_PAY_SHIFT,
                OTH_HRS,
                HOURLY_RT,
                OTH_PAY,
                ADDLPAY_REASON,
                SEPCHK,
                EARNINGS_END_DT,
                GOAL_AMT,
                GOAL_BAL,
                OK_TO_PAY,
                DISABLE_DIR_DEP,
                PRORATE_ADDL_PAY,
                PRORATE_CUI_WEEKS,
                PAY_PERIOD1,
                PAY_PERIOD2,
                PAY_PERIOD3,
                PAY_PERIOD4,
                PAY_PERIOD5,
                STATE,
                LOCALITY,
                TAX_PERIODS,
                TAX_METHOD,
                ADDL_PAY_FREQUENCY,
                DED_TAKEN,
                DED_SUBSET_ID,
                DED_TAKEN_GENL,
                DED_SUBSET_GENL,
	!AXL 7.5 Changes - Begin
                PLAN_TYPE,
		BUSINESS_UNIT,
		COMP_RATECD,
                RECORD_SOURCE)
	!AXL 7.5 Changes - End
        VALUES (&A.EMPLID,
                &A.EMPL_RCD,
                '515',
                $effdt,
                1,
                ' ',
                ' ',
                ' ',
                ' ',
                ' ',
                ' ',
                #avg_weekly_hrs_worked,
                #vac_hourly_rt,
                #week_vac_amt,
                ' ',
                0,
                '',
                #year_vac_amt,
                0,
                'N',
                ' ',
                ' ',
                ' ',
                'N',
                'N',
                'N',
                'N',
                'N',
                ' ',
                ' ',
                0,
                ' ',
                ' ',
                ' ',
                ' ',
                ' ',
                ' ',
	!AXL 7.5 Changes - Begin
		' ',
		'STDBU',                        !GBD 10/08/2002 - default value
		' ',
                'O')
	!AXL 7.5 Changes - End
  end-sql
!***********************************************************************  
end-procedure
!***********************************************************************

!AXL 12/06/2000 New logic to update prior ADDL_PAY_DATA row - Begin
!********************************************************************
begin-procedure closeout-prior-yr
!********************************************************************
#debug9 Show 'closeout-prior-yr'
  move 'N' to $prior_found

begin-select on-error=sql-error-found

L.EFFDT
 
  move 'Y' to $prior_found
 
FROM   PS_ADDL_PAY_DATA L
WHERE  L.EMPLID    = &A.EMPLID
AND    L.EMPL_RCD = &A.EMPL_RCD
AND    L.ERNCD     = '515'
AND    L.EARNINGS_END_DT IS NULL 
AND    L.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_ADDL_PAY_DATA
        WHERE L.EMPLID 	  = EMPLID
          AND L.EMPL_RCD = EMPL_RCD
          AND L.ERNCD 	  = ERNCD
          AND EFFDT       < $effdt)
     
end-select
!***********************************************************************
end-procedure
!***********************************************************************

!********************************************************************
Begin-Procedure Updt-Addl-Pay-Data
!********************************************************************
#debug9 Show 'Updt-Addl-Pay-Data'
  Begin-SQL on-error=sql-error-found
    Update ps_addl_pay_data
    Set    EARNINGS_END_DT     = $AsOfDate
    Where  EMPLID    = &A.EMPLID
    AND    EMPL_RCD = &A.EMPL_RCD
    AND    ERNCD     = '515'
    AND    EFFDT     = &L.EFFDT
  End-SQL
!***********************************************************************
End-Procedure
!***********************************************************************
!AXL 12/06/2000 New logic to update prior ADDL_PAY_DATA row - End
!***********************************************************************
begin-procedure SQL-Error-Found
!***********************************************************************
#debug9 Show 'SQL-Error-Found'
  let $EmplId_1st3 = substr($EmplId,1,3)
  let $EmplId_mid2 = substr($EmplId,4,2)
  let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  move 'Y' to $ErrorFound
  do Format-Number(#InputTran, $out, '99999')
  print $out         (+1,1)
  print $EmplID11    (,18)
  print $_sql-error  (,35) 
!***********************************************************************  
end-procedure
!***********************************************************************


#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getdatcd.sqc'  !Retrieves the asofyear, asofmonth etc.,
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'getasodt.sqc'  !Retrieves the as of date
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#include 'gexregtp.sqc'  !Translates the REG_TEMP to Full_Part_time
!#include 'gexxx902.sqc'  !Get deptid multiple row table
#Include 'gexxx922.sqc'  !Get GEX_RC_PAY run control parameters
#include 'gexxx970.sqc'  !Get multiple deptid/jobcode row table
#include 'gexxx900.sqc'  !Company
#include 'gexxx913.sqc'  !Union_cd 
#include 'gexrehdt.sqc'	 !GEX-MXT 03/24/2008 Fixed for REHIRE DT