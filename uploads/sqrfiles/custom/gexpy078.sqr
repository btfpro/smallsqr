!************************************************************************
! GEXPY078:   This report find all the paysheets that have job_pay set *
! to 'Y'. The pay initialization gexpyini sqr sets job_pay to 'N' and
! this sqr needs to run prior to every pay calc and reports any pay    *
! sheets that have this flag set to 'Y'.
!************************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!GPYC030    SXK        12/13/1998     INITIAL CREATION                 *
!           JDH        01/20/1999     CHANGED SIMPLE JOIN ON           *
!                                      PAY_OTH_EARNS TO AN OUTER JOIN  *
!           CWB        05/19/1999     Changed to remove the printing   *
!                                       of a message when no exceptions*
!                                       are found.                     * 
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'

begin-report

  do Init-DateTime
  do Init-Number
  do stdapi-init
  move 'GEXPY078' to $ReportID
  move 'Pay Sheets that have JOB PAY set to Y' 
    to $ReportTitle
  display $ReportTitle

  do Get-Current-DateTime

  let $reportdate_mm = substr($reportdate,1,2)
  let $reportdate_dd = substr($reportdate,4,2)
  let $reportdate_yy = substr($reportdate,7,2)
  do MakeYear4Digits ($reportdate_yy)
  let $reportdate_ccyy = $reportdate_yy||'-'||$reportdate_mm||'-'||$reportdate_dd
  do Convert-From-DTU-Date($reportdate_ccyy, $reportdate_dbf)
  move $reportdate_dbf to $rnctl_date
  do report

  do Commit-Transaction
  do stdapi-term
!*********************************************
  do finish-report
!*********************************************
  !*do Reset
!**********************************************************************************
end-report

!************************************************************************

begin-procedure Report

 move 'N' to $Errorfound
 move 'N' to $cal_error
 let #inputtran = 0
 let #dept_count = 0


  If $prcs_process_instance = ''
    do P110-Get-Parms
    do select-pay-calendar 
  Else
    do GEXXX922-Select-Parameters
    Let $run_id = $GEX_RC_PAY.RUN_ID
    if RTRIM($run_id,' ') <> ''
      display 'Run ID:' noline
      display $run_id 
      do select-pay-calendar 
    else
       display 'Run ID is required to run this job'
       stop
    end-if
  End-If

Report-Exit:

  date-time () hh:mi:ss &timeProcess
  display #InputTran 99999 noline
  display ' Total Employees with JOB PAY set to Y '
!  display &timeProcess

end-procedure


Begin-Procedure P110-Get-Parms
#debug9 Show 'P110-Get-Parms'
  while RTRIM($run_id,' ') = ''
    input $run_id 'Enter run id' type=char
  end-while

  display 'Run ID:' noline
  display $run_id 

End-Procedure


begin-heading 8

 #Include 'stdhdg01.sqc'

  position (+2)
  print 'COMPANY' (,1) bold
  print 'PAYGROUP' (,13) bold
  print 'EMPLID' (,29) bold
  print 'NAME' (,44) bold
  print 'PAGE_NUM' (,75) bold
  print 'LINE_NUM' (,86) bold
  print 'ADDL_NBR' (,97) bold
  print 'OFF CYCLE' (,108) bold
  print 'MESSAGE' (,123) bold
  print '-' (+1,1,176) fill
 
end-heading


!******************************************************************
!This procedure selects pay calendar details
!******************************************************************

begin-procedure select-pay-calendar

let $found = 'N'
let $ee_found = 'N'

begin-select on-error=sql-error-found('Select-Pay-Calendar')
A1.COMPANY
A1.PAYGROUP
A1.PAY_END_DT
A1.PAY_OFF_CYCLE_CAL
A1.CHECK_DT

   let $found = 'Y'
   display 'Company:' noline
   display &a1.company
   display 'Paygroup:' noline
   display &a1.paygroup
   display 'Off cycle:' noline
   display &a1.pay_off_cycle_cal
   if #company_count > 0
      new-page
   end-if
   move 0 to #company_count   
   do process-employee-data
FROM PS_PAY_CALENDAR A1
WHERE A1.RUN_ID = $run_id
end-select

if $found = 'N'
   display 'Run ID is not defined in Pay Calendar'
   stop
end-if

end-procedure

!******************************************************************
!This procedure processes employees with legal deductions
!******************************************************************

begin-procedure process-employee-data

 do select-employees1

end-procedure

!*********************************************************************

begin-procedure select-employees1

begin-select on-error=sql-error-found('Select-Employees1')
A.COMPANY (+1,3)
A.PAYGROUP (,16)
A.PAY_END_DT 
A.OFF_CYCLE (,112)
A.PAGE_NUM (,75) edit 9990
A.LINE_NUM (,86) edit 9990
A.ADDL_NBR (,97) edit 9990
A.EMPLID (,27)

  move 'Y' to $ee_found
  do select-name
  print $name (,44) 
  print 'Clear Standard Hours, if applicable' (,123)
  add 1 to #company_count
  if &a.emplid <> $prev_emplid
     add 1 to #inputtran
     move &a.emplid to $prev_emplid
  end-if

FROM PS_PAY_EARNINGS A, PS_PAY_OTH_EARNS B
WHERE A.COMPANY = &a1.company
  AND A.PAYGROUP = &A1.PAYGROUP
  AND A.PAY_END_DT = &A1.PAY_END_DT
  AND A.OFF_CYCLE = &a1.PAY_OFF_CYCLE_CAL
  AND A.COMPANY = B.COMPANY(+)
  AND A.PAYGROUP = B.PAYGROUP(+)
  AND A.PAY_END_DT = B.PAY_END_DT(+)
  AND A.OFF_CYCLE = B.OFF_CYCLE(+)
  AND A.PAGE_NUM = B.PAGE_NUM(+)
  AND A.LINE_NUM = B.LINE_NUM(+)
  AND A.ADDL_NBR = B.ADDL_NBR(+)
  AND (A.JOB_PAY = 'Y' OR B.JOB_PAY = 'Y')
ORDER BY A.PAGE_NUM,A.LINE_NUM,A.ADDL_NBR,A.EMPLID
end-select

if $EE_found = 'N'
   do error-found
   add 1 to #errorcount
!****************************************************************
!  CWB  05/19/1999  Begin
     
!   print &a1.company (+1,3)
!   print &a1.paygroup (,16)
!   print 'NO EMPLOYEES FOUND WITH JOB_PAY SET TO Y' () center 

!  CWB  05/19/1999  End
!****************************************************************
   display &a1.pay_end_dt
   display &A1.pay_off_cycle_cal
   display 'No Data Selected to report'
end-if

end-procedure

!*********************************************************************
begin-procedure select-name
let $name = ' '
begin-select on-error=sql-error-found('Select-Name')
D.NAME
  move &d.name to $name
FROM PS_PERSONAL_DATA D
WHERE D.EMPLID = &a.emplid
end-select

end-procedure


!********************************************************************
!This procedure displays in the error report if there are any sql erros
!happened in the program
!********************************************************************

begin-procedure SQL-Error-Found($Proc_Name) 
  do error-found
  print 'SQL Error in ' (,21)
  print $Proc_Name (,35)  
  print $_sql-error (+1,1) 
  print 'sql-status:' (+1,1)
  print #_sql-status () edit 99999 
  show $emplid $DEPTID $company $paygroup noline
  display ' : SQL error ' noline
  display #_sql-status

end-procedure

!*********************************************************************
!This procedure displays the error message for the records that are in
!progress
!*********************************************************************

begin-procedure Error-Found
  move 'Y' to $ErrorFound
  move &A.EMPLID to $emplid
  let $EmplId_1st3 = substr($EmplId,1,3)
  let $EmplId_mid2 = substr($EmplId,4,2)
  let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

!  print $EmplID11 (,16)
end-procedure
 
!****************************************************************
!  CWB  05/19/1999  Begin
 
begin-procedure finish-report

 if $EE_found = 'N'
    print 'No Data Selected to report' () center
 end-if

end-procedure
          
!  CWB  05/19/1999  End
!****************************************************************
 
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
!*#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'payrnctl.sqc'  !Select-Parameters
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions

#include 'gexxx922.sqc'  
