!***********************************************************************
!  GEXPY645.SQR - Giant Eagle version of LTTax Quarterly SUI Interface *
! ---------------------------------------------------------------------*
!                                                                      *
!  PS_LTTAX_SUI.SQR      L&T Tax System (Quarterly Unemployment)
!***********************************************************************
!
!***********************************************************************
!                            L&T Tax System                            *
!                      Quarterly Unemployment Taxes                    *
!                           Interface Program                          *
!                                                                      *
!                                                                      *
! Author    Date:    December 2001                                     *
!                                                                      *
! CJH     01/08/2002 Run control changes made                          *
!                                                                      *
! AXL     07/16/2003 Alter the destination for the file that is        *
!                    produced.                                         *
!***********************************************************************
 
#include 'setenv.sqc'
#include 'setup02.sqc'
 
!*********************************************************************
!                       SUBSTITUTION VARIABLES
!*********************************************************************
 
#Define     Dash            '-'
#Define     Back-Slant      '\'
#Define     Space           ' '
#Define     Zero           '0'
 
!*********************************************************************
!                          REPORT HEADINGS
!*********************************************************************
begin-heading 7
 
    #include 'stdhdg01.sqc'
 
    Print   'Year: '         (0,   76,   6)
    Print   $Year            (0,   83,   4)
    Print   '  Quarter: '    (0,   88,  10)
    Print   $Qtr             (0,   99,   1)
 
    Print   'Gross'          (+2,  86,   5)
    Print   'Taxable'        (0,   99,   7)
    Print   'Excess'         (0,  114,   6)
 
    Print   'Company'        (+1,  60,   7)
    Print   'State'          (0,   70,   5)
    Print   'Wages'          (0,   86,   5)
    Print   'Wages'          (0,  100,   5)
    Print   'Wages'          (0,  115,   5)
 
    Print   {Dash}           (+1,  60,   7)     Fill
    Print   {Dash}           (0,   70,   5)     Fill
    Print   {Dash}           (0,   86,   5)     Fill
    Print   {Dash}           (0,  100,   5)     Fill
    Print   {Dash}           (0,  115,   5)     Fill
 
end-heading
 
!*********************************************************************
!                           MAIN ROUTINE
!*********************************************************************
 
begin-report
 
! GE
    Do Init-datetime
    Do Stdapi-init
! GE
    Do Get-Current-DateTime
    Do Get-Parms
    Do Open-Interface-File
    Do Initialize-Report
    Do Build-Interface-File
    Do Close-Interface-File
    Do stdapi-term
end-report
 
 
!*********************************************************************
!                            OPEN INTERFACE FILE  ** CUSTOMIZE AS NEEDED
!*********************************************************************
 
begin-procedure Open-Interface-File
 
#ifdef NT
  !AXL 07/16/2003
  !let $FileName  = 'm:\psoft\lttax\' || 'SUI.DAT'  
  let $FileName  = '\\nt5\people\psoft\lttax\' || 'SUI.DAT'
#else
  let $FileName  = '{FILEPREFIX}' || 'SUI.DAT'
#endif
 
    Open  $FileName     as 1
    For-writing
   Record=72:fixed
!    Record=72:fixed_nolf
    Status= #open1
 
    If #open1 = -1
        Let $Open-Msg = 'Open '||$FileName||' 1 failed'
        Display $Open-Msg
        stop quiet
    Else 
        Let $Open-Msg = $FileName    ||'  Opened'
        Display $Open-Msg
    End-if
 
end-procedure Open-Interface-File
 
!*********************************************************************
!                          CLOSE INTERFACE FILE
!*********************************************************************
begin-procedure Close-Interface-File
 
    Close 1
 
    Let $Close-Msg    =  $FileName||' Closed'
    Display  $Close-Msg
 
 
end-procedure  Close-Interface-File
 
!*********************************************************************
!                       INITIALIZE REPORT
!*********************************************************************
 
begin-procedure  Initialize-Report
 
    Let  $ReportTitle       =  'L&T Tax System - Quarterly Unemployment'
    Let  $ReportID          =  'GEXPY645'
 
    Let  $YY                =  Substr($ReportDate,  3,  2)
    Let  $MM                =  Substr($ReportDate,  5,  2)
    Let  $DD                =  Substr($ReportDate,  7,  2)
    Let  $ReportDate        =  $MM||'/'||$DD||'/'||$YY
 
    Let  $ReportTime        =  Substr($AsOfNow,     1,  5)
 
end-procedure    Initialize-Report
 
!*********************************************************************
!                   Get Parms        WENDYS                          *
!*********************************************************************
 
Begin-Procedure  Get-Parms
 
 if $Prcs_process_instance = ''
    Input $Year     maxlen=4  'Enter Current Year   '
    Input $Qtr      maxlen=2  'Enter Current Quarter  '

    Let #Yr        = To_Number($Year)
    Let #Qtr       = To_Number($Qtr)

    Let $Yy        = Substr($Year, 3, 2)
    Let $Extension = $Qtr|| $Yy

  else

    Do GEXXX922-Select-Parameters 

    let  #Yr       = #GEX_RC_PAY.Balance_Year
    let  #Qtr      = #GEX_RC_PAY.Balance_Qtr

    let  $Qtr      = &GEX_RC_PAY.Balance_Qtr
    let  $Year     = &GEX_RC_PAY.Balance_Year

    Let $Yy        = Substr($Year, 3, 2)
    Let $Extension = $Qtr|| $Yy

  end-if

  display 'Processing for Year: ' noline
  display $Year
  display 'Processing for Quarter: ' noline
  display $Qtr
 
End-Procedure
 
!*********************************************************************
!                        BUILD-INTERFACE-FILE
!*********************************************************************
 
begin-procedure Build-Interface-File
 
    Let  $First-Read         =  'Y'
    Let  $Hold-Key           =  'XXXXXX'
    Let  $Hold-Company       =  'XXX'
    Let  $Data               =  'N'
 
Begin-SELECT on-error=SQL-Error
 
A.COMPANY,
A.STATE, 
A.BALANCE_ID,
A.BALANCE_YEAR,
A.BALANCE_QTR,
A.NLGRS_QTD,
A.TXGRS_QTD
 
    Let $Data                  =  'Y'
    Do  Accumulate-Totals
 
FROM      PS_TAX_BALANCE          A
WHERE     A.BALANCE_ID         =  'CY'                                          and
          A.BALANCE_YEAR       =  #Yr                                           and
          A.BALANCE_QTR        =  #Qtr                                          and
          A.BALANCE_PERIOD     = (SELECT MAX(A1.BALANCE_PERIOD)
                                  FROM  PS_TAX_BALANCE          A1
                                  WHERE A1.EMPLID        =      A.EMPLID        and
                                        A1.COMPANY       =      A.COMPANY       and
                                        A1.BALANCE_ID    =      A.BALANCE_ID    and
                                        A1.BALANCE_YEAR  =      A.BALANCE_YEAR  and
                                        A1.BALANCE_QTR   =      A.BALANCE_QTR   and
                                        A1.STATE         =      A.STATE         and
                                        A1.TAX_CLASS     =      A.TAX_CLASS)    and
          A.STATE             <>  '$U'                                          and
          A.TAX_CLASS          =  'U'
ORDER BY  A.COMPANY,
          A.STATE
 
End-SELECT
 
    If  $Data                  =  'Y'
        Do  Write-To-Extract-File
        Do  Write-Report-Detail
    End-If
 
    Do  Write-Report-Totals
 
end-procedure   Build-Interface-File
 
!************************************************************************
!                         ACCUMULATE TOTALS
!************************************************************************
 
begin-procedure Accumulate-Totals
 
    Let $Current-Key         =  &A.COMPANY||&A.STATE
 
    If  $First-Read          =  'Y'
        Let $First-Read      =  'N'
        Do  Move-And-Clear-Values
    End-If
 
 
    If  $Current-Key        <>  $Hold-Key
        Do  Write-To-Extract-File
        Do  Write-Report-Detail
        Do  Move-And-Clear-Values
    End-If
 
    Let  #Nlgrs-Qtd          =  #Nlgrs-Qtd  +  &A.NLGRS_QTD
    Let  #Txgrs-Qtd          =  #Txgrs-Qtd  +  &A.TXGRS_QTD
 
end-procedure   Accumulate-Totals
 
!************************************************************************
!                      MOVE AND CLEAR VALUES
!************************************************************************
 
begin-procedure Move-And-Clear-Values
 
    If &A.COMPANY             <>  $Hold-Company
        Do  Get-Company-Values
    End-If
 
    Let $Hold-Key              =  $Current-Key
    Let $Hold-Company          =  &A.COMPANY
    Let $Hold-State            =  &A.STATE
    Let #Nlgrs-Qtd             =  0
    Let #Txgrs-Qtd             =  0
 
end-procedure   Move-And-Clear-Values
 
!************************************************************************
!                         GET COMPANY VALUES
!************************************************************************
 
begin-procedure Get-Company-Values
 
Begin-SELECT on-error=SQL-Error
 
C.END_DT 
 
!GE Fix date format
   display &C.END_DT

    do Format-datetime(&C.END_DT,$conv-date,{DEFCMP},'','')

   display $conv-date
    Let $YY              =      Substr($Conv-Date,  3,  2)
    Let $DD              =      Substr($Conv-Date,  7,  2)
    Let $MM              =      Substr($Conv-Date,  5,  2)

!    Let  $YY                   =  Substr(&C.END_DT,  3,  2)
!    Let  $MM                   =  Substr(&C.END_DT,  6,  2)
!    Let  $DD                   =  Substr(&C.END_DT,  9,  2)

!GE


    Let  $End-Dt               =  $MM||'-'||$DD||'-'||$YY
 
FROM      PS_BALANCE_ID_QTR       B,
          PS_BALANCE_ID_DEF       C
WHERE     B.BALANCE_ID         =  &A.BALANCE_ID            and
!         B.COMPANY            =  &A.COMPANY               and
          B.BALANCE_YEAR       =  &A.BALANCE_YEAR          and
          B.BALANCE_QTR        =  &A.BALANCE_QTR           and
          C.BALANCE_ID         =  B.BALANCE_ID             and
!         C.COMPANY            =  B.COMPANY                and
          C.BALANCE_YEAR       =  B.BALANCE_YEAR           and
          C.BALANCE_PERIOD     =  B.DETL_PERIOD_TO
 
End-SELECT
 
 
end-procedure   Get-Company-Values
 
!************************************************************************
!                         WRITE-TO-EXTRACT-FILE
!************************************************************************
 
begin-procedure   Write-To-Extract-File
 
    Let  #Rec-Count                      =  #Rec-Count  + 1
 
    Let  #Excess-Wages                   =  #Nlgrs-Qtd  -  #Txgrs-Qtd
 
    Move #Nlgrs-Qtd                     to  $Nlgrs-Qtd    00000000009.99
    Move #Txgrs-Qtd                     to  $Txgrs-Qtd    00000000009.99
    Move #Excess-Wages                  to  $Excess-Wages 00000000009.99
 
    Let  #Total-Nlgrs-Qtd                =  #Total-Nlgrs-Qtd    + #Nlgrs-Qtd
    Let  #Total-Txgrs-Qtd                =  #Total-Txgrs-Qtd    + #Txgrs-Qtd
    Let  #Total-Excess-Wages             =  #Total-Excess-Wages + #Excess-Wages
 
    Write 1 from  $Hold-Company:3
                  {Back-Slant}:1
                  $Hold-State:2
                  {Back-Slant}:1
                  $End-Dt:8
                  {Back-Slant}:1
                  $Nlgrs-Qtd:14
                  {Back-Slant}:1
                  $Excess-Wages:14
                  {Back-Slant}:1
                  $Txgrs-Qtd:14
                  {Back-Slant}:1
                  {Zero}:1               ! REW001
                  {Back-Slant}:1
                  {Zero}:1               ! REW001
                  {Back-Slant}:1
                  {Zero}:1               ! REW001
!GE
!                  {Back-Slant}:1
!                  {space}:5
!GE
 
!**************************** MSDOS DISPLAY CODE ********************************
    Let $Disp-Scrn          =  $Hold-Company||' '||$Hold-State
    Display $Disp-Scrn
!*********************************************************************************
 
 
  end-procedure   Write-To-Extract-File
 
 
 
!************************************************************************
!                     WRITE-REPORT-DETAIL
!************************************************************************
 
begin-procedure Write-Report-Detail
 
    Print  $Hold-Company       (+1,  63,   3)
    Print  $Hold-State         ( 0,  72,   2)
    Print  #Nlgrs-Qtd          ( 0,  77,  14)   Edit '999,999,999.99'
    Print  #Txgrs-Qtd          ( 0,  92,  14)   Edit '999,999,999.99'
    Print  #Excess-Wages       ( 0, 106,  14)   Edit '999,999,999.99'
 
 
end-procedure   Write-Report-Detail
 
!************************************************************************
!                     WRITE-REPORT-TOTALS
!************************************************************************
 
begin-procedure Write-Report-Totals
 
    Print  'Report Totals:'       (+2,  57,  14)
    Print  #Total-Nlgrs-Qtd       ( 0,  77,  14)   Edit '999,999,999.99'
    Print  #Total-Txgrs-Qtd       ( 0,  92,  14)   Edit '999,999,999.99'
    Print  #Total-Excess-Wages    ( 0, 106,  14)   Edit '999,999,999.99'
 
    Print  'Record Count:'        (+1,  57,  13)
    Print  #Rec-Count             ( 0,  86,   5)   Edit '9,999'
 
 
end-procedure   Write-Report-Totals
 
!************************************************************************
!                           SQC INCLUDES
!************************************************************************
#include 'stdapi.sqc'            !Routines to update run status
#Include 'curdttim.sqc'          !Get-Current-DateTime procedure
#Include 'datetime.sqc'          !Routines for date and time formatting
#Include 'setenv.sqc'            !Set Environment
#include 'datemath.sqc'
#include 'gexxx922.sqc'          !Run control parms
