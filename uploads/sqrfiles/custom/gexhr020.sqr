!***********************************************************************
! GEXHR020:  NEW HIRES CORP WIDE                                       *
!                                                                      * 
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1988-1996 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXHR020:             NEW HIRES CORP WIDE                            *
!                                                                      *
! Narrative:            This program lists employees who are new hires *
!                       during a period. The user enters the beginning *
!                       and the ending date.                           *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!			      #debug8 key variable values              *
!			      #debug7 data returned from sql calls     *
!                                                                      *
! SQL Tables:           PS_PERSONAL_DATA                               *
!                       PS_JOB                                         *
!                       PS_EMPLOYMENT                                  *
!                                                                      *
! Written by:           Joe Besagar                                    *
!                                                                      *
! Normally run:         Monthly                                        *
!                                                                      *
! Entered Run                                                          *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                       Company Division Code                          *
!            		Company  	                               *
!                       Company/Paygroup                               *
!      			Deptid                                         *
!                       Acctcd                                         *
!     			Empl_Status	                               *
!                                                                      *
!                       FromDate                                       *
!                       ThruDate                                       *
!                                                                      *
!                       FOR ORDER BY CLAUSE:                           *
!                       1)  BY COMPANY, PAYGROUP, NAME, HIRE_DT        *
!                                                                      *
!                                                                      *
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *
!***********************************************************************
!	   JNB        01/14/1998      INITIAL CREATION                 *
!                                                                      *
!          JNB        03/25/1998      ADDED RUN CONTROL PANEL          *
!                                                                      *
! GEX001   JDH        05/20/1998      Job title was being truncated.   *
!                                     Added grade and current salary.  *
!                                     Added grade control parm.        *
!                                                                      *
! 10865    AXL        02/08/2005      Move COMPANY/PAYGROUP to Heading *
!                                     and remove from detail.  Add     *
!                                     logic to resolve FROM/THRU dates *
!                                     if left blank. Change Annual     *
!                                     salary to Comprate.              *
!                                     Move ACTION to detail.           *
!         GEX-MXT     04/24/2008      Change to print correct Action   *
!                                     description                      * 
!         VENDTKK     02/02/2009   Added INCLUDE GETPOSNM.SQC to pull  *
!                  	           JOBTITLE from POSITION_DATA.DESCR   *
!				   field instead of JOBCODE_TBL.DESCR  *
!			           	                               *
!***********************************************************************
!selection criteria
#define #x000_col_selection_criteria_a 	02
#define #x000_col_selection_criteria_b 	05

!line 1
!#define #x000_col_company		05
!#define #x000_col_paygroup		17
#define #x000_col_deptid		05	!30
#define #x000_col_emplid		15	!41
#define #x000_col_name			30	!55
#define #x000_col_action                66	!10
#define #x000_col_hire_dt		76	!91
#define #x000_col_jobtitle 		90	!105
#define #x000_col_grade 		125	!140 GEX001-ADD
#define #x000_col_annual_rt 		142	!157 GEX001-ADD

#include 'setenv.sqc'    !Set environment

!***********************************************************************                                                                      *
begin-setup
!***********************************************************************                                                                      *
!#debug9 show 'begin-setup'

#Include 'setup02a.sqc'   !Printer and page-size initialization
DECLARE PROCEDURE 
   AFTER-REPORT = p110-grand-totals 
end-setup

!***********************************************************************                                                                      *
begin-heading 9
!***********************************************************************                                                                      *
#debug9 show 'begin-heading'
!AXL 2/8/2005 New - Begin 
#include 'stdhdg02.sqc'

  if $PayGroup <> $priorPayGroup
    do Get-PayGroup-Data
    move $PayGroup to $priorPayGroup
  end-if
  print 'Pay Group'        (4,1)
  print $PayGroup          (0,13)
  print $PayGroupName      (0,17)
  !AXL 2/8/2005 New - End
  position (+1)  

 Let #x000_temp_out = 'Sorted by ' || $x000_order_by
 print $x000_temp_out       (3,) center

    !move 'ACTION'  to $FieldName
    !move $Action   to $FieldValue
    !do Read-Translate-Table
    !move $XlatLongName to $ActionName  !for use in Heading
   
    !print 'Personnel Action: '   (+2,1)		!AXL 2/8/2005 Was (+1,1) 
    !print $Action                (0,+2)  edit xxx--
    !print $ActionName            () 
 
  print '-' (+3,1,155) fill

  !print  '       CURRENT' (+2,{#x000_col_annual_rt}) bold	 AXL 2/8/2005	
  print  '  COMPENSATION' (+2,{#x000_col_annual_rt}) bold	!AXL 2/8/2005

  !print  'COMPANY'        (+1,{#x000_col_company})   bold	 AXL 2/8/2005
  !print  'PAYGROUP'       (0,{#x000_col_paygroup})   bold	 AXL 2/8/2005
  print  'DEPTID'         (0,{#x000_col_deptid})     bold
  print  'EMP#'           (0,{#x000_col_emplid})     bold
  print  'EMPLOYEE NAME'  (0,{#x000_col_name})       bold
  print  'ACTION'         (0,{#x000_col_action})     bold
  print  'HIRE DATE'      (0,{#x000_col_hire_dt})    bold
  print  'JOB TITLE'      (0,{#x000_col_jobtitle})   bold
  print  'GRADE'          (0,{#x000_col_grade})      bold	!GEX001-ADD
  !print  '        SALARY' (0,{#x000_col_annual_rt})  bold	 AXL 2/8/2005
  print   '          RATE' (0,{#x000_col_annual_rt})  bold	!AXL 2/8/2005
  
  print '-' (+1,1,155) fill           
end-heading

!***********************************************************************                                                                      *
begin-report
!***********************************************************************                                                                      *
#debug9 show 'begin-report'

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init
  do P010-Init-Variables
  do P100-Get-Employees-Data
  do Stdapi-term
  do Reset

  show 'Successful end of report'

 end-report

!***********************************************************************                                                                      *
begin-procedure P010-Init-Variables
!***********************************************************************                                                                      *
#debug9 show 'P010-Init-Variables'

  let $new-page-flag = 'Y'
  
  let $ReportID           = 'GEXHR020'
  let $ReportTitle        = 'NEW HIRES - CORP WIDE'
  let $Country            = 'USA'

  show '$ReportID= '     $ReportID
  show '$ReportTitle = ' $ReportTitle   

  Do GEXXX951-Select-Oracle-Instance

  Let $GEXXX900_Company_Alias  = 'JOB.COMPANY'                           
  Let $GEXXX901_Company_Alias  = 'JOB.COMPANY' 
  Let $GEXXX901_Paygroup_Alias = 'JOB.PAYGROUP'    
  Let $GEXXX902_Deptid_Alias = 'JOB.DEPTID'  
  Let $GEXXX903_Emp_Stat_Alias = 'JOB.EMPL_STATUS'  
  Let $GEXXX904_Grade_Alias = 'JOB.GRADE'			
  Let $GEXXX904_Sal_Admin_Plan_Alias = 'JOB.SAL_ADMIN_PLAN'	
  Let $GEXXX907_Div_CD_Alias = 'GEX_DEPT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias = 'JOB.ACCT_CD'
  Let $GEXXX957_ACTION_Alias = 'JOB.ACTION'
 
  if $Prcs_process_instance = ''
     do P015-get-input
     !AXL 2/8/2005 New - Begin
     do Ask-From-Thru-Date
     let $X000_WHERE_SELECT_FROMDATE = $fromdate
     let $X000_WHERE_SELECT_THRUDATE = $thrudate
     !AXL 2/8/2005 New - End
  else
!get parameters from single row run control record 
     Do GEXXX922-Select-Parameters
     let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
     let $X000_WHERE_SELECT_FROMDATE = $GEX_RC_PAY.FROMDATE
     let $X000_WHERE_SELECT_THRUDATE = $GEX_RC_PAY.THRUDATE

     if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
        let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
     end-if
     do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')

 !AXL 2/8/2005 Begin
     if rtrim(&GEX_RC_PAY.FROMDATE,' ') = '' and 
        rtrim(&GEX_RC_PAY.THRUDATE,' ') = ''
        Do Obtain-Dates

        let $X000_WHERE_SELECT_FROMDATE = $pay_begin_dt
        let $X000_WHERE_SELECT_THRUDATE = $pay_end_dt
    
  else
     let $X000_WHERE_SELECT_FROMDATE = &GEX_RC_PAY.FROMDATE
     let $X000_WHERE_SELECT_THRUDATE = &GEX_RC_PAY.THRUDATE
  end-if

  if rtrim($X000_WHERE_SELECT_FROMDATE,' ') = ''
     !let $X000_WHERE_SELECT_FROMDATE = $AsOfToday
     let $X000_WHERE_SELECT_FROMDATE			= '1=1'
   end-if

  if rtrim($X000_WHERE_SELECT_THRUDATE,' ') = ''
     !let $X000_WHERE_SELECT_THRUDATE = $AsOfToday
     let $X000_WHERE_SELECT_THRUDATE			= '1=1'
  end-if
  !AXL 2/8/2005 End

  show '$X000_WHERE_SELECT_FROMDATE ' $X000_WHERE_SELECT_FROMDATE
  show '$X000_WHERE_SELECT_THRUDATE ' $X000_WHERE_SELECT_THRUDATE
    
 
!get parameters from multiple row run control record
  Do GEXXX900-Select-Company-Parameters 
  Do GEXXX901-Select-Company-Paygroup-Parameters    
  Do GEXXX902-Select-Deptid-Parameters 
  Do GEXXX903-Select-Emp-Stat-Parameters          
  Do GEXXX904-Select-Grade-Parameters		
  Do GEXXX907-Select-Div-CD-Parameters
  Do GEXXX909-Select-Acct-CD-Parameters
  Do GEXXX957-Select-ACTION-Parameters

end-if

  let $X000_order_by = 'JOB.COMPANY, JOB.PAYGROUP, JOB.DEPTID, A.NAME, B.HIRE_DT'
  show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA                =' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  show '$GEXXX900_INCLUDE_COMPANY_CRITERIA               =' $GEXXX900_INCLUDE_COMPANY_CRITERIA
  show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA      =' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA   
  show '$GEXXX902_INCLUDE_DEPTID_CRITERIA                =' $GEXXX902_INCLUDE_DEPTID_CRITERIA
  show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA              =' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
  show '$GEXXX904_INCLUDE_GRADE_CRITERIA                 =' $GEXXX903_INCLUDE_GRADE_CRITERIA	!GEX001-ADD
  show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA               =' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA    
  show '$GEXXX957_INCLUDE_ACTION_CRITERIA                =' $GEXXX957_INCLUDE_ACTION_CRITERIA    
  show '$X000_WHERE_SELECT_ASOFDATE                      =' $X000_WHERE_SELECT_ASOFDATE 
  show '$X000_WHERE_SELECT_FROMDATE        ='  $X000_WHERE_SELECT_FROMDATE
  show '$X000_WHERE_SELECT_THRUDATE        ='  $X000_WHERE_SELECT_THRUDATE 

  print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
  print '$Prcs_OPRID          ='                              (+2,{#x000_col_selection_criteria_b})
  print $Prcs_OPRID                                           (0,+2)
  print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
  print $PRCS_RUN_CNTL_ID                                     (0,+2)

  Print 'SELECT CRITERIA FOR THIS REPORT RUN:'  (+5,{#x000_col_selection_criteria_a})
  print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA 		(0,+2)
  print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA            (0,+2)
  print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA   (0,+2)
  print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)
  print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA           (0,+2)
  print '$GEXXX904_INCLUDE_GRADE_DISPLAY_CRITERIA            ='   (+1,{#x000_col_selection_criteria_b})	!GEX001-ADD
  print $GEXXX904_INCLUDE_GRADE_DISPLAY_CRITERIA              (0,+2)						!GEX001-ADD
  print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA            (0,+2)  
  print '$GEXXX957_INCLUDE_ACTION_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX957_INCLUDE_ACTION_DISPLAY_CRITERIA            (0,+2)  
    
  print '$X000_WHERE_SELECT_ASOFDATE                         ='   (+1,{#x000_col_selection_criteria_b})
  print $X000_WHERE_SELECT_ASOFDATE                           (0,+2)

  print '$X000_WHERE_SELECT_FROMDATE                     ='   (+1,{#x000_col_selection_criteria_b})
  print  $X000_WHERE_SELECT_FROMDATE                          (0,+2)
  print '$X000_WHERE_SELECT_THRUDATE                     ='   (+1,{#x000_col_selection_criteria_b})
  print  $X000_WHERE_SELECT_THRUDATE                          (0,+2)

  print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,{#x000_col_selection_criteria_a})
  print '$X000_ORDER_BY                                      ='   (+1,{#x000_col_selection_criteria_b})
  print $X000_ORDER_BY 	(0,+2)

  let #page-count = 0
  NEW-PAGE
  LET #PAGE-COUNT = 1

end-procedure

!AXL 2/8/2005 New Procedure - Begin
!***********************************************************************
begin-procedure Obtain-Dates
!***********************************************************************
begin-select
p.pay_end_dt   &p.pay_end_dt
p.pay_begin_dt &p.pay_begin_dt

  move &p.pay_end_dt   to $pay_end_dt
  move &p.pay_begin_dt to $pay_begin_dt

from ps_pay_calendar p
 
where p.pay_end_dt = 
      (select max(pay_end_dt)
      from ps_pay_calendar
      where pay_end_dt <= $AsOfToday) 
end-select 

end-procedure
!AXL 2/8/2005 New Procedure - End

!***********************************************************************
begin-procedure P015-get-input
!***********************************************************************
#debug9 show 'P015-get-input'
  let $GEXXX907_INCLUDE_DIV_CD_CRITERIA                 = '1=1'           
  let $GEXXX900_INCLUDE_COMPANY_CRITERIA		= '1=1'
  let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA	= '1=1' 
  let $GEXXX902_INCLUDE_DEPTID_CRITERIA			= '1=1'
  let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA 		= '1=1'
  let $GEXXX904_INCLUDE_GRADE_CRITERIA			= '1=1'	!GEX001-ADD
  let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA		= '1=1'

  !AXL 2/11/2005 New - Begin
  Let $ActionString = ''''
  Display 'Enter Job Action or leave blank to exit.'
  While 1=1
    Input $In-Action Maxlen=3 'Action'
    Uppercase $In-Action
    If Rtrim($In-Action, ' ') = ''
      Concat '''' With $ActionString
      Break
    End-If
    If $ActionString <> ''''
      Concat ''',''' With $ActionString
    End-If
    Concat $In-Action With $ActionString
  End-While
  show '$ActionString ' $ActionString
  If $ActionString = ''''''
    Let $GEXXX957_INCLUDE_ACTION_CRITERIA = '1=1'
    Let $GEXXX957_INCLUDE_ACTION_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX957_INCLUDE_ACTION_CRITERIA = $GEXXX957_Action_Alias || ' In (' || $ActionString || ')'
    Let $GEXXX957_INCLUDE_ACTION_DISPLAY_CRITERIA = $GEXXX957_INCLUDE_ACTION_CRITERIA
  End-If
  !AXL 2/11/2005 New - End

  let $X000_WHERE_SELECT_ASOFDATE			= $asoftoday

  !order by for GEXHR020 reports
  let $X000_ORDER_BY = 'JOB.COMPANY, JOB.PAYGROUP, JOB.DEPTID, A.NAME, B.HIRE_DT'


end-procedure
!***********************************************************************
begin-procedure P100-Get-Employees-Data
!***********************************************************************
#debug9 show 'P100-Get-Employees-Data'
 !AXL 2/11/2005 Add Before= calls
 let $x100_Get_Employees_Data_Flag = 'N'
 
begin-SELECT ON-ERROR=P900-SQL-Error-Found('P100-Get-Employees-Data')

JOB.COMPANY ()         on-break print=never level=1
                       after=p105-company-change 
		       save=$prev_company

JOB.PAYGROUP  ()       on-break print=never level=2
                       before=Paygroup-Before-Change
                       after=p110-paygroup-change  
		       save=$prev_paygroup
JOB.ACTION     
  move &job.Action         to $Action
JOB.DEPTID
JOB.EFFDT
A.EMPLID
A.NAME 
B.HIRE_DT
  do Format-DateTime(&B.Hire_Dt, $out, {DEFDATE}, '', '')

JOB.JOBCODE
JOB.GRADE				!GEX001-ADD
JOB.ANNUAL_RT				!GEX001-ADD
JOB.COMPRATE				!
JOB.Position_nbr			!VENDTKK    ITG#56786   2-Feb-2009
  !move &JOB.ANNUAL_RT to $Annual_Rt 999,999,999.99	!GEX001-ADD
  move &JOB.COMPRATE to $Annual_Rt 999,999,999.99	!AXL 2/11/2005

  Let $Company	= &JOB.Company
  Let $Paygroup = &JOB.PAYGROUP 

  Let  $Jobcode = &job.JobCode
  do Get-Job-Title
  
  !VENDTKK Begin   ITG#56786    2-Feb-2009

  Let $Position_Nbr = &JOB.Position_nbr
  Do Get-Position-Title			 !getposnm.sqc
  	 IF $PosName = '' 
  		Let $jobtitle = $jobtitle
	 Else
 		Let $jobtitle = $PosName
	 End-if
!VENDTKK End   ITG#56786    2-Feb-20099	
  !GEX-MXT modified for getting Action Descr from setup table PS_ACTION_TBL instead of ps_xlatitem-Begin
  !move 'ACTION'  to $FieldName
  !move $Action   to $FieldValue
  !do Read-Translate-Table
  !move $XlatLongName to $ActionName  

  do Get-Action                            
  move $Action_DescrShort to $ActionName  
  
  !GEX-MXT modified for getting Action Descr from setup table PS_ACTION_TBL instead of ps_xlatitem-End
  
  !AXL 2/11/2005 Disable
  !if $company_change = 'Y'
  !   new-page
  !  move 'N' to $company_change
  !end-if

      if #current-line >= 51 
         move 'Y' to $page_change
         new-page
      end-if
 
      position (+1)

   !AXL 2/11/2005 Disable 
   !if (&job.company <> $prev_company) or ($page_change = 'Y')
   !    move &job.company to $prev_company
   !end-if

   !if (&job.paygroup <> $prev_paygroup) or ($page_change = 'Y')
   !   move &job.paygroup to $prev_paygroup
   !   move 'N' to $page_change
   !end-if

   Add 1 to #paygroup_total_emps

     let $x100_Get_Employees_Data_Flag = 'Y'
     Do P800-Print-Detail-Line

FROM  PS_PERSONAL_DATA A,
      PS_EMPLOYMENT B,
      PS_JOB JOB,
      PS_GEX_DEPT_TBL GEX_DEPT
 
WHERE A.EMPLID = B.EMPLID
  AND B.EMPLID = JOB.EMPLID
  AND B.EMPL_RCD = JOB.EMPL_RCD
  AND JOB.EFFDT BETWEEN $X000_WHERE_SELECT_FROMDATE AND $X000_WHERE_SELECT_THRUDATE        
  !AND JOB.ACTION = 'HIR'			AXL 2/11/2005 
  AND [$GEXXX957_INCLUDE_ACTION_CRITERIA]      !AXL 2/11/2005 New
  AND [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
  AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
  AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
  AND [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
  AND [$GEXXX904_INCLUDE_GRADE_CRITERIA]			!GEX001-ADD
  AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
  AND JOB.DEPTID = GEX_DEPT.DEPTID
  AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
  AND GEX_DEPT.EFFDT = (SELECT MAX(GEX_DEPT1.EFFDT) FROM PS_GEX_DEPT_TBL GEX_DEPT1
			WHERE GEX_DEPT1.DEPTID = GEX_DEPT.DEPTID AND
				GEX_DEPT1.EFFDT <= $ASOFTODAY) 
	AND GEX_DEPT.SEQUENCE_NUMBER = (SELECT MAX(GEX_DEPT2.SEQUENCE_NUMBER) FROM PS_GEX_DEPT_TBL GEX_DEPT2
			WHERE GEX_DEPT2.DEPTID = GEX_DEPT.DEPTID AND
				GEX_DEPT2.EFFDT = GEX_DEPT.EFFDT)
ORDER BY [$x000_order_by]
end-SELECT
 
 if $x100_Get_Employees_Data_Flag = 'N'
	print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) CENTER
 end-if

end-procedure

!***********************************************************************
begin-procedure P800-Print-Detail-Line
!***********************************************************************
!#debug9 show 'P800-Print-Detail-Line

 !print  &job.company         (+1,{#x000_col_company})	!AXL 2/11/2005 Disable
 !print  &job.paygroup        (0,{#x000_col_paygroup})	!AXL 2/11/2005 Disable
 print  &job.deptid          (+1,{#x000_col_deptid})
 print  &a.emplid            (0,{#x000_col_emplid})
 print  &a.name              (0,{#x000_col_name})
 print  $action              (0,{#x000_col_action})
 print  $out                 (0,{#x000_col_hire_dt})
 print  $jobtitle            (0,{#x000_col_jobtitle})
 print  &job.grade           (0,{#x000_col_grade})		!GEX001-ADD
 print  $annual_rt           (0,{#x000_col_annual_rt})	!GEX001-ADD

end-procedure 
!***********************************************************************
begin-procedure P110-Paygroup-Change
!***********************************************************************
#debug9 show 'P110-Paygroup-Change'
  
  move $Prev_Paygroup to $paygroup	!AXL 2/11/2005 Add
  Print 'Paygroup Total'     (+2,8)
  Print #Paygroup_Total_emps (,50)    edit 9999
  Let #Company_Total_emps = #Company_Total_emps + #Paygroup_Total_emps 
  Let #Paygroup_Total_emps = 0
 
  if #current-line >= 51  !ensure a minimum of 2 employees is listed
    new-page
  else
    position (+3)
  end-if

end-procedure P110-Paygroup-Change 

!AXL 2/11/2005 New
!***********************************************************************
begin-procedure Paygroup-Before-Change
!***********************************************************************
#debug9 show 'Paygroup-Before-Change'
  if $new-page-flag = 'Y'
    let $new-page-flag = 'N'
  else
    new-page
  end-if
  !move &Job.Paygroup to $paygroup
end-procedure

!***********************************************************************
begin-procedure  p105-company-change 
!***********************************************************************
#debug9 show 'p105-company-change '

   move $Prev_Company  to $Company	!AXL 2/11/2005 Add
   Print 'Company Total'      (+2,8)
   Print #Company_Total_emps  (,50)   edit 9999
   Let #Report_Total_emps =  #Report_Total_emps + #Company_Total_emps 
   Let #Company_Total_emps  =  0
   move 'Y' to $company_change

end-procedure  p105-company-change 

!***********************************************************************
begin-procedure p110-grand-totals 
!***********************************************************************
#debug9 show 'p110-grand-totals '

 Print 'Report Total'     (+2,8)
 Print #Report_Total_emps (,50)  edit 9999

 
end-procedure



!*********************************************************************
!Displays the error messages and stops execution
!*********************************************************************
 
begin-procedure P900-SQL-Error-Found($Proc_Name) 

#debug9 show 'P900-SQL-Error-Found'

  do P990-error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 

  STOP

end-procedure

!*********************************************************************
begin-procedure P990-Error-Found
!*********************************************************************
#debug9 show 'P990-Error-Found'

  move 'Y' to $ErrorFound
  do Format-Number(#Inputrec, $out, '99999')
  print $out (+1,1)

  let $EmplId_1st3 = substr($EmplId,1,3)
  let $EmplId_mid2 = substr($EmplId,4,2)
  let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  print $EmplID11 (,8)
end-procedure
 
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'getactrs.sqc'  !Get-Action-Reason procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'  
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgdta.sqc'  !Get-Paygroup-Data procedure
#include 'askftd.sqc'    !From Thru Date input

#Include 'gexxx951.sqc'  !Select Oracle Instance
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 

!#include 'GEXXX900.sqc'  !Get company multiple row table
!#include 'GEXXX901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx904.sqc'  !Get grade multiple row table	!GEX001-ADD
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx957.sqc'  !Get action code multiple row table
#Include 'getposnm.sqc'  !Get-Position-Title    VENDTKK ITG#56786   2-Feb-2009  