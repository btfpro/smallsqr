!***********************************************************************
! GEXBN830:  Students Reclassified to PT - Grocery Clerks              *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXBN831 :            Students Reclassified                          *
!                                                                      *
! Narrative:            All empls in Ben Prog R10 & R08, who are       *
!                       currently in job code 88013 and were previously*
!                       in student part time status(S,T,U) OR job code *
!                       80036 will be reported.                        *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           ben_prog_partic                                *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                                                                      *
! Written by:           Srini Chakrapani                               *
!                                                                      *
! Normally Run:                                                        *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Benefit Program(s)                           *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! SXC       05/02/2000   Initial Creation                              *
!                                                                      *
! AXL       11/28/2000   Benefit programs perviously hard-coded into   *
!                        logic.  Added code to select Benefit Program  *
!                        from user prompts or panel run control.       *
! CJH       12/06/2000   COD changes - run control panel chgs only     *
!GEX-CXB    10/05/2007   No Table structure changed for Upgrade 9.0.   *
! MXR       01/30/2009   ITG# 57193 Add job code in ('88013', '80091') *
!KXY 				02/26/2009	 ITG 56801  removal of HARD CODED Jobcodes
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Portrait)

#define #column1  001
#define #column2  020
#define #column3  060
#define #column4  070
#define #column5  085
#define #column6  100
#define #column7  115

!***********************************************************************
Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report

!***********************************************************************
Begin-Heading 7
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg01.sqc'

  Print 'Benefit Program: '   (3,1)
  Print $save_benefit_program ()

  Print 'Empl ID'             (+3,{#column1})
  Print 'Name'                (+0,{#column2})
  Print 'Action'              (+0,{#column3})
  Print 'Action Reason'       (+0,{#column4})
  Print 'Effdt'               (+0,{#column5})
  Print 'Service Dt'          (+0,{#column6})
  Print 'DeptID'              (+0,{#column7})
End-Heading

!***********************************************************************
Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      = 'GEXBN831'
  Let $ReportTitle   = 'STUDENTS RECLASSIFIED TO PART TIME - GROCERY CLERKS'

  !AXL 11/28/2000 - New run control logic - Begin
  Let $GEXXX911_Benefit_Program_Alias = 'bpp.benefit_program'
  Let $GEXXX916_Jobcode_Alias  = 'j.jobcode'	  !Vendkxy added the code for ITG 56801
  
  if $prcs_process_instance = ''
   
    Let $BenefitProgramString = ''''
    Display 'Enter Benefit Program or leave blank to exit.'
    While 1=1
      Input $In-Benefit-Program Maxlen=3 'Benefit Program'
      Uppercase $In-Benefit-Program
      If Rtrim($In-Benefit-Program, ' ') = ''
        Concat '''' With $BenefitProgramString
        Break
      End-If
      If $BenefitProgramString <> ''''
        Concat ''',''' With $BenefitProgramString
      End-If
      Concat $In-Benefit-Program With $BenefitProgramString
    End-While

    If $BenefitProgramString = ''''''
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = $GEXXX911_Benefit_Program_Alias || ' In (' || $BenefitProgramString || ')'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
    End-If
    
    Let $JobcodeString = ''''
    Display 'Enter Jobcodes to INCLUDE or leave blank to exit.'
    While 1=1
      Input $In-Jobcode Maxlen=6 'Jobcode'
      Uppercase $In-Jobcode
       If Rtrim($In-Jobcode, ' ') = ''
        Concat '''' With $JobcodeString
        Break
       End-If
       If $JobcodeString <> ''''
         Concat ''',''' With $JobcodeString
       End-If
       Concat $In-Jobcode With $JobcodeString
    End-While

    If $JobcodeString = ''''''
     Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '1=1'
     Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'
   Else
     Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = $GEXXX916_Jobcode_Alias || ' In (' || $JobcodeString || ')'
     Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = $GEXXX916_INCLUDE_JOBCODE_CRITERIA
   End-If
  
  else

    Do GEXRCBN1-SELECT-PARAMETERS
    Do GEXXX911-Select-Benefit-Program-Parameters
    Do GEXXX916-Select-Jobcode-Parameters															!Vendkxy added the code for ITG 56801   
  end-if
  !AXL 11/28/2000 - New run control logic - End

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show ' '
  Show 'Report Began:'
  Show '  Date = ' $ReportDate
  Show '  Time = ' $ReportTime
  !AXL 11/28/2000 - New run control logic - Begin
  Show '$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = ' $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA
  !AXL 11/28/2000 - New run control logic - End

! Let $end_month        = '08'
! Let $end_yy           = '1998'
! Let $check_dt         = '01-AUG-1998'
! Let $check_dt_min_dbf = '01-AUG-1998'

! Let $AsOfDate = '01-MAY-2000'

  Do Edit-Pay-Calendar
  Let $AsOfDate = $effdt_dbf
   
  Do Convert-To-DTU-Date($AsOfDate,$AsOfDate_DTU)
  do dtu-add-months($AsofDate_dtu,-1,$Asofdate_dtu)
  do convert-from-dtu-date($asofdate_dtu,$asofdate)

  show 'Asofdate :- ' $AsOfDate
End-Procedure

!***********************************************************************
!Begin-Procedure P110-Get-Xlat

!#debug9 Show 'P110-Get-Xlat'
!Begin-Select On-Error=P260-SQL-Error-Found('P110-Get-Xlat')
!xlatshortname       &reg_temp_descr
!From   xlattable
!Where  fieldname  = 'REG_TEMP'
!And    fieldvalue = &j.reg_temp
!End-Select
!End-Procedure

!***********************************************************************
Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
Begin-Select On-Error=P260-SQL-Error-Found('P200-Main-Process')
bpp.benefit_program  ()  On-Break  Level=1
                                   Print=Never
                                   Save=$save_benefit_program
                                   After=P240-After-Benefit-Program
bpp.emplid     &bpp.emplid
bpp.empl_rcd  &bpp.empl_rcd
e.service_dt   &e.service_dt

  Do convert-to-dtu-date(&e.service_dt, $service_dt_dtu)
  Do convert-to-dtu-date($AsOfDate, $asofdate_dtu)
  Do dtu-diff-months($service_dt_dtu, $asofdate_dtu, #diff_mths)
  If #diff_mths < 12
     Do P210-Fetch-Job-Rows
  End-If

From   ps_employment          e,
       ps_ben_prog_partic     bpp,
       ps_job                 job

!AXL 11/28/2000 - New run control logic - Begin
!Where  bpp.benefit_program    In ('R10', 'R08')
Where  [$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA]
!AXL 11/28/2000 - New run control logic - End
And    bpp.effdt               =
      (Select Max(effdt)
       From   ps_ben_prog_partic
       Where  emplid           = bpp.emplid
       And    empl_rcd        = bpp.empl_rcd
       And    cobra_event_id   = bpp.cobra_event_id
       And    effdt           <= $AsOfDate)
And    e.emplid                = bpp.emplid
And    e.empl_rcd             = bpp.empl_rcd

And    job.emplid              = bpp.emplid
And    job.empl_rcd           = bpp.empl_rcd
And    job.effdt               = (Select Max(effdt)
                                    From   ps_job
                                    Where  emplid     = bpp.emplid
                                     And   empl_rcd  = bpp.empl_rcd
                                     And   effdt     <= $AsOfDate)
And    job.effseq                =
      (Select Max(effseq)
       From   ps_job
       Where  emplid            = bpp.emplid
       And    empl_rcd         = bpp.empl_rcd
       And    effdt             = job.effdt)
And    job.empl_status NOT IN ('D','T','R')

Order By bpp.benefit_program
End-Select
End-Procedure

!***********************************************************************
Begin-Procedure P210-Fetch-Job-Rows
#debug9 Show 'P210-Fetch-Job-Rows'

Begin-Select On-Error=P260-SQL-Error-Found('P210-Fetch-Job-Rows')
j.emplid         &j.emplid
j.empl_rcd      &j.empl_rcd
j.effdt          &j.effdt
j.effseq         &j.effseq
j.deptid         &j.deptid
j.reg_temp       &j.reg_temp
j.action         &j.action
j.action_reason  &j.action_reason
j.action_dt      &j.action_dt
pd.name          &pd.name

  show 'Emplid :- '&j.emplid
  show 'Reclassfication dt "- ' &j.effdt

  Let $reg_temp = ''
  Let $jobcode  = ''
  if &j.effseq > 0
     Do select_prior_seq
  Else
     Do select_prior_row
  End-If

  If ($reg_temp = 'S' OR $reg_temp = 'T' OR $reg_temp = 'U' OR $jobcode = '80036')
     Do get-the-difference
     if #service_diff_mths >= 6
        Do P230-Print-Record
     End-If
  End-IF

From   ps_job j, ps_personal_data pd

Where  j.emplid                 = &bpp.emplid
And    j.emplid                 = pd.emplid
And    j.empl_rcd              = &bpp.empl_rcd
And    j.effdt                  =
      (Select Min(effdt)
       From   ps_job
       Where  emplid            = &bpp.emplid
       And    empl_rcd         = &bpp.empl_rcd
       And    effdt            <= $AsOfDate
       And    effdt            >=
             (Select Max(effdt)
              From   ps_job
              Where  emplid     = &bpp.emplid
              And    empl_rcd  = &bpp.empl_rcd
              And    effdt     <= $AsOfDate
              And    (reg_temp  = 'S' OR reg_temp = 'T' OR reg_temp = 'U' OR jobcode = '80036'))
       !And   jobcode           = '88013')   !ITG # 57193 added '80091'
        !And jobcode in  ('88013', '80091'))            !Vendkxy commented the code for ITG 56801
        And   [$GEXXX916_Include_Jobcode_Criteria])			!Vendkxy added the code for ITG 56801
And    j.effseq                 =
      (Select Max(effseq)
       From   ps_job
       Where  emplid            = &bpp.emplid
       And    empl_rcd         = &bpp.empl_rcd
       And    effdt             = j.effdt)
!And    j.jobcode                = '88013'      !ITG # 57193 added '80091'
 !And jobcode in  ('88013', '80091')            !Vendkxy commented the code for ITG 56801
And   [$GEXXX916_Include_Jobcode_Criteria]			!Vendkxy added the code for ITG 56801
Order By j.deptid, pd.name
End-Select
End-Procedure

!*********************************************************************
Begin-Procedure select_prior_row
Begin-Select
jp.emplid
jp.empl_rcd
jp.effdt
jp.effseq
jp.reg_temp
jp.jobcode

    Let $reg_temp = &jp.reg_temp
    Let $jobcode  = &jp.jobcode

From ps_job jp
Where jp.emplid    = &j.emplid
And   jp.empl_rcd = &j.empl_rcd
And   jp.effdt     = (Select max(effdt)
                      From ps_job
		      Where emplid    = jp.emplid
		      And   empl_rcd = jp.empl_rcd
                      And   effdt     < &j.effdt)
And   jp.effseq    = (Select max(effseq)
		      From ps_job
		      Where emplid    = jp.emplid
		      And   empl_rcd = jp.empl_rcd
                      And   effdt     = jp.effdt)
End-Select
End-Procedure

!*********************************************************************
Begin-Procedure select_prior_seq
Begin-Select
js.emplid
js.empl_rcd
js.effdt
js.effseq
js.reg_temp
js.jobcode

	Let $reg_temp = &js.reg_temp
	Let $jobcode  = &js.jobcode

From ps_job js
Where js.emplid    = &j.emplid
And   js.empl_rcd = &j.empl_rcd
And   js.effdt     = &j.effdt
And   js.effseq    = (Select max(effseq)
		      From ps_job
		      Where emplid    = js.emplid
                      And   empl_rcd = js.empl_rcd
		      And   effdt     = js.effdt
		      And   effseq    < &j.effseq)
End-Select
End-Procedure

!*********************************************************************
!This procedure retrieves the months difference between two dates
!*********************************************************************
Begin-Procedure get-the-difference

Do convert-to-dtu-date(&j.effdt, $job_effdt_dtu)
Do dtu-diff-months($service_dt_dtu, $job_effdt_dtu, #service_diff_mths)

move #service_diff_mths to $service_diff_mths

End-Procedure

!***********************************************************************
Begin-Procedure P230-Print-Record
#debug9 Show 'P230-Print-Record'
  Let $Data-Found-Flag = 'Y'
  Let $BP-Data-Found-Flag = 'Y'

  Do Format-DateTime(&j.effdt, $effdt_out, {DEFMDY}, '', '')
  Do Format-DateTime(&e.service_dt, $service_dt_out, {DEFMDY}, '', '')
  Do Format-DateTime(&j.action_dt, $action_dt_out, {DEFMDY}, '', '')

!  Do P110-Get-Xlat

  Print &j.emplid             (+1,{#column1})   Edit xxx-xx-xxxx
  Print &pd.name              (+0,{#column2},030)

! Print $action_dt_out        (+0,{#column3})

  Print &j.action             (+0,{#column3})
  Print &j.action_reason      (+0,{#column4})  
  Print $effdt_out            (+0,{#column5})
  Print $service_dt_out       (+0,{#column6})

! Print &reg_temp_descr       (+0,{#column6})

  Print &j.deptid             (+0,{#column7})
End-Procedure

!***********************************************************************
Begin-Procedure P240-After-Benefit-Program
#debug9 Show 'P240-After-Benefit-Program'
  If $BP-Data-Found-Flag = 'Y'
    New-Page
    Let $BP-Data-Found-Flag = 'N'
  End-If
End-Procedure

!***********************************************************************
Begin-Procedure P260-SQL-Error-Found($Proc_Name) 
#debug9 Show 'P260-SQL-Error-Found'
  Display 'SQL Error in ' 
  Display $Proc_Name 
  Display $_sql-error
  Display 'sql-status:' 
  Display #_sql-status 
  Do P270-Emplid-in-Error
End-Procedure

!***********************************************************************
Begin-Procedure P270-Emplid-in-Error
#debug9 Show 'P270-Emplid-in-Error'
  Display ''
  Display 'Error occurred while processing emplid ' Noline
  Display &j.emplid
  Display ''
End-Procedure

!***********************************************************************
Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc
  Do Get-Current-DateTime    !curdttim.sqc

  Show ' '
  Show 'Report Ended:'
  Show '  Date = ' $ReportDate
  Show '  Time = ' $ReportTime
  Show ' '
  Show 'Successful end of report'
End-Procedure

!***********************************************************************
#Include 'gexxx911.sqc'  !Get Benefit Program Multiples Run Controls
#include 'gexxx920.sqc'  !Get ben single row run control
#include 'gexbnmdt.sqc'  !Get pay_end_dt for last confirmed pay period
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#include 'gexxx916.sqc'  !Get jobcode multiple row table			!Vendkxy added the code for ITG 56801
!***********************************************************************
