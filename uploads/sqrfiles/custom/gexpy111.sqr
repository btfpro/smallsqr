!***********************************************************************
! GEXPY111:  QTD State Tax                                             *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXPY111:             QTD State Tax                                  *
!                                                                      *        
! Narrative:            Report QTD state tax by company,               *
!                        state, deptid.                                *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           * 
!                                                                      *  
! SQL Tables:           pay_cal_bal_id                                 *
!                       pay_check                                      *
!                       pay_tax                                        *
!                                                                      *
! Written by:           Jim Hutchison                                  *       
!                                                                      *
! Normally Run:         Quarterly                                      *
!                                                                      *
! Control Parms:        Company(s)                                     *
!                       State(s)                                       *
!                       Balance Year                                   *
!                       Balance Quarter                                *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS      DATE            DESCRIPTION OF THE CHANGE              *
!***********************************************************************
! JDH           12/10/99        Initial Creation                       *
!***********************************************************************


#Include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)


#define #column1     1
#define #column2    23
#define #column3    44
#define #column4    74


Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report


Begin-Heading 7
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg02.sqc'

  Print 'State'                (4,1)
  Print $State                 ( ,13)

  Let $X000_temp_out = 'by Company, State, Deptid'
  Print $X000_temp_out         (3,)  Center

  Let $X000_temp_out = 'Balance Year=' || $Balance_Year || ' Balance Quarter=' || $Balance_Qtr
  Print $X000_temp_out         (4,)  Center

  Print 'DEPTID'               (+2,{#column1})
  Print 'EMPLID'               (  ,{#column2})
  Print ' QTD TAXABLE GROSS'   (  ,{#column3})
  Print '  QTD TAX WITHHELD'   (  ,{#column4})

  Print '-'                    (+1,{#column1},10)  Fill
  Print '-'                    (  ,{#column2},9)   Fill
  Print '-'                    (  ,{#column3},18)  Fill
  Print '-'                    (  ,{#column4},18)  Fill
End-Heading


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID    =  'GEXPY111'
  Let $ReportTitle =  'QTD State Tax'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  Let $GEXXX900_Company_Alias = 'pt.company'
  Let $GEXXX937_State_Alias   = 'pt.state'

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan

  show ' '
  show 'Report Began at ' &timeBegan ' on ' &dateBegan
  show ' '

  Move #balance_year To $Balance_Year  9999
  Move #balance_qtr  To $Balance_Qtr   9

  If #balance_year = 0 Or
     #balance_qtr  = 0
    Do P140-Get-Default-Quarter
  End-If

  Let $X000_Order_By = 'Company, State, Deptid, Emplid'

  Show 'Company(s)      = ' $GEXXX900_Include_Company_Display_Criteria
  Show 'State(s)        = ' $GEXXX937_Include_State_Display_Criteria
  Show 'Balance Year    = ' $Balance_Year
  Show 'Balance Quarter = ' $Balance_Qtr

  Do P130-Print-Cover-Page
End-Procedure


Begin-Procedure P110-SQRW-Run-Controls
#debug9 Show 'P110-SQRW-Run-Controls'
  Let $CompanyString = ''''
  Display 'Enter Company or leave blank to exit.'
  While 1=1
    Input $In-Company Maxlen=3 'Company'
    Uppercase $In-Company
    If Rtrim($In-Company, ' ') = ''
      Concat '''' With $CompanyString
      Break
    End-If
    If $CompanyString <> ''''
      Concat ''',''' With $CompanyString
    End-If
    Concat $In-Company With $CompanyString
  End-While

  If $CompanyString = ''''''
    Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = '1=1'
    Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = $GEXXX900_Company_Alias || ' In (' || $CompanyString || ')'
    Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA = $GEXXX900_INCLUDE_COMPANY_CRITERIA
  End-If

  Let $StateString = ''''
  Display 'Enter State or leave blank to exit.'
  While 1=1
    Input $In-State Maxlen=2 'State'
    Uppercase $In-State
    If Rtrim($In-State, ' ') = ''
      Concat '''' With $StateString
      Break
    End-If
    If $StateString <> ''''
      Concat ''',''' With $StateString
    End-If
    Concat $In-State With $StateString
  End-While

  If $StateString = ''''''
    Let $GEXXX937_INCLUDE_STATE_CRITERIA = '1=1'
    Let $GEXXX937_INCLUDE_STATE_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX937_INCLUDE_STATE_CRITERIA = $GEXXX937_State_Alias || ' In (' || $StateString || ')'
    Let $GEXXX937_INCLUDE_STATE_DISPLAY_CRITERIA = $GEXXX937_INCLUDE_STATE_CRITERIA
  End-If

  Input $balance_year Maxlen=4 'Balance Year'
  Input $balance_qtr  Maxlen=2 'Balance Quarter'

  Let #balance_year = $balance_year
  Let #balance_qtr  = $balance_qtr
End-Procedure


Begin-Procedure P120-Process-Scheduler-Run-Controls
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXXX922-Select-Parameters

  Let #balance_year = #GEX_RC_PAY.BALANCE_YEAR
  Let #balance_qtr  = #GEX_RC_PAY.BALANCE_QTR

  Do GEXXX900-Select-Company-Parameters
  Do GEXXX937-Select-State-Parameters
End-Procedure


begin-procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID       ='                                     (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID ='                                     (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print 'Company(s)        ='                                     (+1,5)
  Print $GEXXX900_Include_Company_Display_Criteria                (0,+2)
  Print 'State(s)          ='                                     (+1,5)
  Print $GEXXX937_Include_State_Display_Criteria                  (0,+2)
  Print 'Balance Year      ='                                     (+1,5)
  Print $Balance_Year                                             (0,+2)
  Print 'Balance Quarter   ='                                     (+1,5)
  Print $Balance_Qtr                                              (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

  Let #PAGE-COUNT = 0
End-Procedure


Begin-Procedure P140-Get-Default-Quarter
#debug9 Show 'P140-Get-Default-Quarter'
Begin-Select Loops=1
balance_year
balance_period

  let #balance_year   = &balance_year
  let #balance_period = &balance_period

  let #balance_qtr = #balance_period
  let #balance_qtr = ((#balance_qtr - 1)/ 3) + 1
  do Format-Number(#balance_qtr, $balance_qtr, '9.99') !avoid rounding the integer portion
  move $balance_qtr to $balance_qtr x     !save the integer portion
  let #balance_qtr = $balance_qtr

  evaluate #balance_qtr
    when = 1
      subtract 1 from #balance_year
      let #balance_qtr = 4
      break
    when-other
      subtract 1 from #balance_qtr
  end-evaluate

  move #balance_year to $balance_year 9999
  move #balance_qtr  to $balance_qtr  9

From   ps_balance_id_def
Where  balance_id = 'CY'
And    sysdate between begin_dt and end_dt
End-Select
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
Begin-Select
!/*+ RULE */
pt.company  ()  On-Break  Level=1
                          Print=Never
                          After=P250-Company-Break

pt.state    ()  On-Break  Level=2
                          Print=Never
                          Before=P220-New-Page
                          After=P240-State-Break

pc.deptid   ()  On-Break  Level=3
                          Print=Never
                          After=P230-Deptid-Break

pc.emplid

Sum(pt.txgrs_cur)  &pt.txgrs_cur
Sum(pt.tax_cur)    &pt.tax_cur

  Let $Data-Found-Flag = 'Y'

  Let $company   = &pt.company
  Let $state     = &pt.state
  Let $deptid    = &pc.deptid
  Let $emplid    = &pc.emplid
  Let #txgrs_qtd = &pt.txgrs_cur
  Let #tax_qtd   = &pt.tax_cur

  Add #txgrs_qtd To #dept_txgrs_qtd
  Add #tax_qtd   To #dept_tax_qtd

  Do P210-Print-Record

From   ps_pay_cal_bal_id  pcbi,
       ps_pay_check       pc,
       ps_pay_tax         pt

Where  pcbi.company      = pc.company
And    pcbi.paygroup     = pc.paygroup
And    pcbi.pay_end_dt   = pc.pay_end_dt
And    pcbi.balance_id   = 'CY'
And    pcbi.balance_year = #balance_year
And    pcbi.balance_qtr  = #balance_qtr

And    pc.company        = pt.company
And    pc.paygroup       = pt.paygroup
And    pc.pay_end_dt     = pt.pay_end_dt
And    pc.off_cycle      = pt.off_cycle
And    pc.page_num          = pt.page_num
And    pc.line_num          = pt.line_num
And    pc.sepchk         = pt.sepchk

And    pt.state         <> '$U'
And    pt.locality       = ' '
And    pt.tax_class      = 'H'

And   [$GEXXX900_Include_Company_Criteria]
And   [$GEXXX937_Include_State_Criteria]

Group By pt.company, pt.state, pc.deptid, pc.emplid
Order By pt.company, pt.state, pc.deptid, pc.emplid
End-Select
End-Procedure


Begin-Procedure P210-Print-Record
#debug9 Show 'P210-Print-Record'
  Print $deptid        (+1,{#column1})
  Print $emplid        (,{#column2})
  Print #txgrs_qtd     (,{#column3})   Edit 999,999,999,999.99
  Print #tax_qtd       (,{#column4})   Edit 999,999,999,999.99
End-Procedure


Begin-Procedure P220-New-Page
#debug9 Show 'P220-New-Page'
  New-Page
End-Procedure


Begin-Procedure P230-Deptid-Break
#debug9 Show 'P230-Deptid-Break'
  Print 'Deptid'            (+2,{#column1})
  Print $deptid             (  ,+1)
  Print 'Totals'            (  ,+1)
  Print #dept_txgrs_qtd     (  ,{#column3})     Edit 999,999,999,999.99
  Print #dept_tax_qtd       (  ,{#column4})     Edit 999,999,999,999.99
  Print ' '                 (+1,{#column1})

  Add #dept_txgrs_qtd To #state_txgrs_qtd
  Add #dept_tax_qtd   To #state_tax_qtd

  Let #dept_txgrs_qtd = 0
  Let #dept_tax_qtd = 0
End-Procedure


Begin-Procedure P240-State-Break
#debug9 Show 'P240-State-Break'
  Print 'State'             (+1,{#column1})
  Print $state              (  ,+1)
  Print 'Totals'            (  ,+1)
  Print #state_txgrs_qtd    (  ,{#column3})     Edit 999,999,999,999.99
  Print #state_tax_qtd      (  ,{#column4})     Edit 999,999,999,999.99
  Print ' '                 (+1,{#column1})

  Add #state_txgrs_qtd To #company_txgrs_qtd
  Add #state_tax_qtd   To #company_tax_qtd

  Let #state_txgrs_qtd = 0
  Let #state_tax_qtd = 0
End-Procedure


Begin-Procedure P250-Company-Break
#debug9 Show 'P250-Company-Break'
  Print 'Company'           (+1,{#column1})
  Print $company            (  ,+1)
  Print 'Totals'            (  ,+1)
  Print #company_txgrs_qtd  (  ,{#column3})     Edit 999,999,999,999.99
  Print #company_tax_qtd    (  ,{#column4})     Edit 999,999,999,999.99

  Add #company_txgrs_qtd To #total_txgrs_qtd
  Add #company_tax_qtd   To #total_tax_qtd

  Let #company_txgrs_qtd = 0
  Let #company_tax_qtd = 0
End-Procedure


Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    New-Page
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded

  show ' '
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
  show ' '

  Show 'Successful end of report'
End-Procedure


#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'gexxx900.sqc'  !Get company multiple row table
#Include 'gexxx922.sqc'  !Get pay single row run control
#Include 'gexxx937.sqc'  !Get state multiple row table
