!***********************************************************************
! GEXPYCC1: This program writes the employee information for each store*
!           into a master file, which will be sent to CCS stores       *
!           for loading into their database.                           *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS    DATE           DESCRIPTION OF THE CHANGE                *
!***********************************************************************
!  SXK         08/28/1997     INITIAL CREATION                         *
!  SXK         09/01/1998     cleared division code before             *
!                              comparing with new set of values.       *
!  SXK	       11/06/1998     Added additional columns                 *
!  CJH         02/05/1999     Correct comparison of service dates      *
!                              to contract date.  Correct Rx EEs       *
!                              set to P status.  Correct max_hrs       *
!                              & base_hrs values.  Correct E01 delete  *
!                              process to only send deletes that are   *
!                              within 14 days. Rec length chgs.        *
!                              Upper address, city, state              *
!  CJH         04/12/1999     Correct logic for sending deletes.  Use  *
!                              ACTION_DT rather than EFFDT for deletes *
!  CJH         05/04/1999     Correct phone number formatting in E04   *
!                              record.  Send deletes to T&A stores     *
!                              when EE xfers to a non-T&A location.    *
!                              Add EMPL_STATUS indicator to E04 record *
!                              for SuperSched filtering.               *
!                              Use REHIRE_DT in E02 if HIRE_DT is null.
!  CJH         06/01/1999     Use Rehire Date in Division code logic   *
!                              when the hire date is null.             *
!  CJH         07/08/1999     Correct REHIRE/HIRE/SERVICE Date logic   *
!                              for Division tbl.                       *
!  JNB         08/13/1999     Commented MakeYear4Digits in procedure   *
!                              get-string-date. This is necessary to   *
!                              use MakeYear4Digits as delivered.       *
!  JDH         12/03/1999     Added asofdate and deptids run control   *
!                              parameters.                             *
!  JNB         12/21/1999     Changed so that E02 and E04 records are 
!                             created even though there are no rows found
!                             in determine-store-change and get-prev-job-row.
!  JNB 	   01/25/2000     Modified to comment out select
!					statement from ps_contract_data
!					as it is not being used anywhere
!                             Changed to have union from job_labor
!  SCM     01/09/2001         Added PH3 paygroup for Cleveland.
!  CWB     02/22/2001         Added paygroup 'PH4' (Columbus pharmacies)*
!                             Added logic to FTP the file automatically *
!                             to pdxhst, and notify the people involved * 
!                                                                       *
!  SCM     02/07/2002         1. Reviewed code for County Markets &     *
!                             modified for T/A pharmacy.   Since it was *
!                             such a big change, comment entire         *
!                             procedure convert-empl-type and create an *
!                             entire new one.                           *
!                             2. Commented code for determining what    *
!                             hire date to send ....                    *
!                             Always send SERVICE DATE.                 *
!                             3. Remove emails:                         * 
!                                abuccigrossi@gianteagle.com            *  
!                                jason.heese@gianteagle.com             * 
!                                draszkowski@gianteagle.com             *
!                                Add emails: tim.baker@gianteagle.com   *  
!                                           john.fetchen@gianteagle.com *
!                                          william.macino@gianteagle.com*
!  PSR       08/06/02        Modified to have UNION_CD FROM JOB -       *
!                            Upgrade 8.3                                *
!                                                                       *
!  CWB       04/05/2004      Modify to get eMail addresses from GEXXX971*
!                                                                       * 
!  MXR        10/27/2006      ITG # 38501 If Appoint_end_dt is there 
!                                    then move it to hire_dt
!  MXR       08/18/2008      Added "'/bin/ksh  ' || $pshome || '/scripts/gex_shell/' ||"
!                            ftp  to 'tafmftp1.sh ' 
!  Vendaxg     09/24/2008    Modified for S311373179                    *
!************************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'

begin-report

  do Init-DateTime
  do Init-Number
  do stdapi-init
  move 'GEXPYCC1' to $ReportID
  move 'Employee Master File for CCS Stores' to $ReportTitle
  display $ReportID
  display $ReportTitle

  do Get-Current-DateTime

  Let $GEXXX902_Deptid_Alias = 'C.DEPTID'

  if $prcs_process_instance = ''
    Do Ask-As-Of-Date
    Let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate

    Let $DeptIDString = ''''
    Display 'Enter DeptID or leave blank to exit.'
    While 1=1
      Input $In-DeptID Maxlen=10 'DeptID'
      Uppercase $In-DeptID
      If Rtrim($In-DeptID, ' ') = ''
        Concat '''' With $DeptIDString
        Break
      End-If
      If $DeptIDString <> ''''
        Concat ''',''' With $DeptIDString
      End-If
      Concat $In-DeptID With $DeptIDString
    End-While

    If $DeptIDString = ''''''
      Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
      Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' In (' || $DeptIDString || ')'
      Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_INCLUDE_DEPTID_CRITERIA
    End-If

  else

    Do GEXXX902-Select-Deptid-Parameters
    Do GEXXX922-Select-Parameters
    Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.AsOfDate
    If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
      Let $X000_WHERE_SELECT_ASOFDATE = $AsOfToday
    End-If
  end-if

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  Do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')

  Show ' '
  Show '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = '  $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA
  Show '$X000_WHERE_SELECT_ASOFDATE               = '  $X000_WHERE_SELECT_ASOFDATE
  Show ' '

  Let $Year4 = '1'
  Do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $reportdate, {DEFDATE}, '', '')

  let $reportdate_mm = substr($reportdate,1,2)
  let $reportdate_dd = substr($reportdate,4,2)
  let $reportdate_yy = substr($reportdate,7,4)
  let $reportdate_ccyy = $reportdate_yy||'-'||$reportdate_mm||'-'||$reportdate_dd

  do Convert-From-DTU-Date($reportdate_ccyy, $reportdate_dbf)

! CJH - 04/12/1999 - make deletes 21 days
! let #subtract_Days = 14
  let #subtract_Days = 21
! CJH - 04/12/1999

  do dtu-subtract-days($reportdate_ccyy, #subtract_Days, $reportdate_less14)
  do Convert-From-DTU-Date($reportdate_less14, $reportdate_less14_dbf)

  do Report
  do Commit-Transaction

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
  show ' '

  do stdapi-term
  !*do Reset
!**********************************************************************************
end-report

!************************************************************************

begin-procedure Report

 let $FileName = '{OUTFILE}'||'gexpycc1.dat'

 open $FileName as 1 for-writing record=101 status=#filestat

 if #filestat < 0
	display 'File Open error occured;  Cannot proceed'
	goto Report-Exit
 end-if         
 
 date-time () hh:mi:ss &timeBegan
 display 'Report Began: ' noline
 display &timeBegan

 move 'N' to $Errorfound
 move '0' to $filler

 do process-employee-data

 if $sev-error = 'Y'
    goto report-exit
 end-if
  
Report-Exit:

  print 'Total Transactions=' (+2,1)
  do Format-Number(#InputTran, $out, '99999')
  print $out ()
  print '     Total Errors in Transactions=' ()
  do Format-Number(#ErrorCount, $out, '99999')
  print $out ()

  close 1

! CWB - 02/22/2001 BEGIN

  do set-system-commands  ! gex isdvnpk 06/10/2008 UnCommented call system for UAT       
  do cd-bindir            ! gex isdvnpk 06/10/2008 UnCommented call system for UAT       
  do split-file           ! gex isdvnpk 06/10/2008 UnCommented call system for UAT       
 do ftp-file !vendrbc 08/21/2007  ! gex isdvnpk 06/10/2008 UnCommented call system for UAT       

! CWB - 02/22/2001 END

  date-time () hh:mi:ss &timeProcess
  display #InputTran 99999 noline
  display ' Transactions Processed: ' noline
  display &timeProcess

end-procedure


begin-heading 7
  Move 'Employee Master file for CCS stores - ERROR REPORT' to $ReportTitle
  #Include 'stdhdg01.sqc'

  date-time () DD-MON-YYYY &curr_Date

!  print 'Tran#  Store#  EmplID        Message' (+2,1)
!  print '-----  ------  ------------- ------------------------------------------------' (+1,1)

   print 'TRAN#' (+2,1)
   print 'STORE#' (,10)
   print 'EMPLID' (,24)
   print 'EMPL TYPE' (,37)
   print 'F/P TIME' (,51)
   print 'ACCT CD' (,63)
   print 'JOBCODE' (,75)
   print 'HIRE DATE' (,87)
   print 'SERVICE DATE' (,102)
   print 'UNION CD' (,119)
   print 'MESSAGE' (,132)
end-heading

!******************************************************************
!This procedure selects all the employees that satisfy the criteria
!and depending on the action taken upon their job records, writes 
!the necessary records into the output file
!******************************************************************

begin-procedure process-employee-data

move 'N' to $found
let #inputtran = 0
display $reportdate_dbf
begin-select ON-ERROR=SQL-Error-Found('Process-employee-data')
A.EMPLID
! CJH - 04/20/1999 - begin
!A.LAST_NAME_SRCH
!A.FIRST_NAME_SRCH
UPPER(A.NAME) &name
! CJH - 04/20/1999 - end
A.BIRTHDATE
UPPER(A.ADDRESS1) &ADDRESS1
UPPER(A.CITY) &CITY
UPPER(A.STATE) &STATE
A.POSTAL
A.PHONE
!Vendaxg Modified for S3#11373179 - Begin
!A.GEX_INACTIVE_TA
GEX.GEX_INACTIVE_TA
!Vendaxg Modified for S3#11373179 - End
B.HIRE_DT
B.REHIRE_DT
!JL.UNION_CD  !JNB 01/25/00 Changed from B.UNION_CD
C.UNION_CD
B.CMPNY_SENIORITY_DT
B.SERVICE_DT
!B.APPOINT_END_DT             !ISDVMXR 12/27/2006  ITG # 38501 !Vendrbc 08/20/2007
C.JOBCODE
C.DEPTID
C.EMPL_TYPE
C.HOURLY_RT
C.EFFDT
! CJH - 04/12/1999 - begin
C.ACTION_DT
! CJH - 04/12/1999 - end
C.ACTION
C.PAYGROUP
C.EMPL_RCD
C.ACCT_CD
C.FULL_PART_TIME
C.GEX_STUDENT_IND
C.EFFSEQ
c.empl_Status
! CJH - 02/05/1999 - begin
C.STD_HOURS
D.SI_ACCIDENT_NUM          !CONTRACT GROUP
  show 'emplid' &a.emplid
  move 'Y' to $Found
  move 'N' to $errorfound
  add 1 to #inputtran

! CJH - 04/20/1999 - begin
 unstring &name by ',' into $last_name $first_name
! CJH - 04/20/1999 - end

! CJH - 04/12/1999 - begin  
  move 'N' to $store_change
! CJH - 04/12/1999 - end


  move &C.STD_HOURS to #std_hrs
! CJH - 02/05/1999 - end

  if (&C.EMPL_STATUS = 'T') or (&c.empl_Status = 'D') or (&c.empl_Status = 'R')
        !(&C.ACTION = 'TER') or (&C.ACTION = 'RET') 

!*****************************************
!Added this T&A status flag to delete inactive employees 
!*****************************************
    !Vendaxg Modified for S3#11373179 - Begin
    ! or (&A.GEX_INACTIVE_TA = 'Y')
     or (&GEX.GEX_INACTIVE_TA = 'Y')
    !Vendaxg Modified for S3#11373179 - End

! CJH - 04/12/1999 - begin - use ACTION_DT rather than EFFDT
! if Term row ACTION_DT older than 14 days, do not send E01 delete row anymore
     do Convert-to-DTU-date(&C.ACTION_DT, $actiondt_dtu)
! CJH - 04/22/1999 - begin - do not send E01 unless a T&A dept
   if &D.SI_ACCIDENT_NUM <> ' '
     if $actiondt_dtu >= $reportdate_less14
        do create-E01-record
     end-if
   end-if
! CJH - 04/22/1999 - end
  else
     if (&C.ACTION = 'XFR') or (&C.ACTION = 'ADL') or
	(&C.ACTION = 'DEM') or (&C.ACTION = 'DTA') or
	(&C.ACTION = 'PRO') or (&C.ACTION = 'REH')      

	do determine-store-change
! CJH - 02/05/1999 - begin
! create E01 delete record for store transfers that are >= 14 days old only
!       if $store_change = 'Y'
	if ($store_change = 'Y') and ($transfer_dt_dtu >= $reportdate_less14)
! CHG - 02/05/1999 - end
	   do create-E01-record
	end-if
     end-if

     if $sev-error = 'Y'
	exit-select
     end-if
! CJH - 04/22/1999 - begin
!     if $errorfound = 'N'
!     if ($errorfound = 'N' and &D.SI_ACCIDENT_NUM <> ' ')  !jnb 12/21/1999
     if &D.SI_ACCIDENT_NUM <> ' '                           !jnb 12/21/1999
! CJH - 04/22/1999 - end
        show 'emplid' &a.emplid
	do create-E02-record
	if $sev-error = 'Y'
	   exit-select
	end-if
!        if $errorfound = 'N'
	   do create-E04-record
	   if $sev-error = 'Y'
	     exit-select
	   end-if
!        end-if
     end-if
  end-if
    
 FROM PS_PERSONAL_DATA A,
 	PS_GEX_PERSON GEX, !Vendaxg Added for S3#11373179 
       PS_EMPLOYMENT B,
       PS_JOB C,
       PS_DEPT_TBL D 
 WHERE A.EMPLID    = B.EMPLID
   AND A.EMPLID = GEX.EMPLID	!Vendaxg Added for S3#11373179 
   AND B.EMPLID    = C.EMPLID
   AND B.EMPL_RCD = C.EMPL_RCD
   AND C.DEPTID    = D.DEPTID
! CJH - 04/22/1999 - begin
!   AND D.SI_ACCIDENT_NUM <> ' ' 
! CJH - 04/22/1999 - end
   AND C.EFFDT =
       (SELECT MAX(EFFDT)
	FROM   PS_JOB
	WHERE EMPLID    = C.EMPLID
	  AND EMPL_RCD = C.EMPL_RCD
	  AND EFFDT <= $X000_WHERE_SELECT_ASOFDATE)
!	  AND EFFDT >= $reportdate_less14_dbf)
    AND C.EFFSEQ =
       (SELECT MAX(EFFSEQ)
	FROM   PS_JOB 
	WHERE EMPLID    = C.EMPLID
	  AND EMPL_RCD = C.EMPL_RCD
	  AND EFFDT    = C.EFFDT)
   AND D.EFFDT =
       (SELECT MAX(EFFDT)
	FROM   PS_DEPT_TBL 
	WHERE DEPTID = C.DEPTID
	  AND EFFDT <= $X000_WHERE_SELECT_ASOFDATE)
And   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
ORDER BY c.deptid, A.EMPLID

end-select

if $found = 'N'
   add #1 to #errorcount
   do error-found
   print 'No employees found for any store' (,132)
end-if

end-procedure

!*********************************************************************
!This procedure determines if there is a change in the stores for the 
!employee job rows in the table. The logic uses the previous job row 
!and the current row for the employee to determine the store change.
!*********************************************************************

begin-procedure determine-store-change

move 'N' to $found
move 'N' to $store_Change
move 'N' to $errorfound

begin-select ON-ERROR=SQL-ERROR-FOUND('Determine-store-change')
P.DEPTID

   move 'Y' to $found
   if &P.DEPTID <> &C.DEPTID
      move 'Y' to $store_change
      move &P.DEPTID to $prev_dept_id
   end-if

from PS_JOB P
WHERE P.EMPLID = &A.EMPLID
  AND P.EMPL_RCD = &C.EMPL_RCD
  AND P.EFFDT = &C.EFFDT
  AND P.EFFSEQ = 
	(SELECT MAX(EFFSEQ)
	   FROM PS_JOB 
	  WHERE EMPLID = &A.EMPLID
	    AND EMPL_RCD = &C.EMPL_RCD
	    AND EFFDT = &C.EFFDT
	    AND EFFSEQ < &C.EFFSEQ)
! CJH - 04/22/1999 - begin
  AND P.DEPTID in (select pp.deptid from ps_dept_tbl pp
                   where pp.si_accident_num <> ' ')
! CJH - 04/22/1999 - end
end-select

if $found = 'N'
   do get-prev-job-row
end-if

end-procedure   

!*********************************************************************
!This procedure retrieves the previous job row for the employee
!*********************************************************************

begin-procedure get-prev-job-row

move 'N' to $found
move 'N' to $store_change
move 'N' to $errorfound

begin-select ON-ERROR=SQL-ERROR-FOUND('get-prev-job-row')
R.DEPTID

   move 'Y' to $found
   if &R.DEPTID <> &C.DEPTID
      move 'Y' to $store_change
      move &R.DEPTID to $prev_dept_id
! CJH - 02/05/1999 - begin
      do Convert-to-DTU-date(&C.EFFDT, $transfer_dt_dtu)
! CJH - 02/05/1999 - end
   end-if

from PS_JOB R
WHERE R.EMPLID = &A.EMPLID
  AND R.EMPL_RCD = &C.EMPL_RCD
  AND R.EFFDT =
	(SELECT MAX(EFFDT)
	   FROM PS_JOB
	  WHERE EMPLID = &A.EMPLID
	    AND EMPL_RCD = &C.EMPL_RCD
	    AND EFFDT < &C.EFFDT)
  AND R.EFFSEQ = 
	(SELECT MAX(EFFSEQ)
	   FROM PS_JOB
	  WHERE EMPLID = &A.EMPLID
	    AND EMPL_RCD = &C.EMPL_RCD
	    AND EFFDT = R.EFFDT)
! CJH - 04/22/1999 - begin
  AND R.DEPTID in (select rr.deptid from ps_dept_tbl rr
                   where rr.si_accident_num <> ' ')
! CJH - 04/22/1999 - end

end-select

!  JNB 12/21/1999  Begin
!if $found = 'N'
!   add 1 to #errorcount
!   do error-found
!   print 'No Previous Job History exists' (,132)
!end-if
!  JNB 12/21/1999 End

end-procedure   

!********************************************************************
!This procedure creates the E01 record for the employees whose records
!need to be deleted from the store files
!******************************************************************** 

begin-procedure create-e01-record

move 'N' to $errorfound
move 'E01' to $e01-rectype
move 'N' to $sev-error
let #file-stat = 0
if $store_change = 'Y'
   move $prev_dept_id to $deptid
else
   move &c.deptid to $deptid
end-if
! CJH - 02/05/1999 - begin
! convert deptid like %I to original deptid
 if substr($deptid,4,1) = 'I'
    do convert-deptid($deptid,$new_deptid)
 else
    let $new_deptid = $deptid
 end-if
let $filler1 = rpad($filler,84,'0')
write 1 from $new_deptid:4 $e01-rectype:3 &A.EMPLID:9 $filler1:85
     status=#file-stat
! CJH - 02/05/1999 - end

if #file-stat <> 0
   move 'Y' to $sev-error
   add 1 to #errorcount
   do error-found
   print 'error in writing to the file: rec-type E01' (,132)
end-if

end-procedure

!********************************************************************
!This procedure creates E02 records for the employees whose records
!need to be sent to the stores where they are working 
!********************************************************************

begin-procedure create-e02-record

move 'N' to $errorfound
move 'N' to $sev-error
move 'E02' to $e02-rectype
let #file-stat = 0

!********************************************************************
!Employee types need to be converted to CCS stores format before 
!sending the E02 records to the stores
!********************************************************************

do convert-empl-type

! CJH 04/27/1998 - BEGIN - Do send rate for Salary EEs
!  old - if $ccs_empl_type = 'P'
!  new - if $ccs_empl_type = 'P' or $ccs_empl_type = 'S'
! CJH 04/27/1998 - END

if $ccs_empl_type = 'P' or $ccs_empl_type = 'S'
! CJH - 02/05/1999 - begin
!   let #base_rate = 0
   let #base_rate = #std_hrs
! CJH - 02/05/1999 - end
   let #alt_rate = 0
else
   let #base_rate = &C.HOURLY_RT
   do get-alt-rate
end-if

move #base_Rate to $base_rate
move #alt_rate to $alt_Rate

do prefix_zeros($base_rate,$base_Rate_prefix)
do prefix_zeros($alt_Rate,$alt_Rate_prefix)

do get-division-code
 show 'emplid' &A.emplid
!***** SCM 02/07/2002 BEGIN  commented code here to assign hire dates. 
!                     Add code to always send SERVICE_DT as hire_dt.

!  ! CJH - 05/18/1999 - begin
!if &B.REHIRE_DT = ''
! do get-string-date(&B.HIRE_DT, $hire_dt_str, $hire_Dt_ymd) 
!else
! do get-string-date(&B.REHIRE_DT, $hire_dt_str, $hire_Dt_ymd)
!end-if
!  ! CJH - 05/18/1999 - end

do get-string-date(&B.SERVICE_DT, $hire_Dt_Str, $hire_date_ymd)      !SCM 02/07/2002
!******  SCM  02/07/2002   END
 

do get-string-date(&A.BIRTHDATE, $birthdt_Str, $birthdt_ymd)

! CJH - 02/05/1999 - begin
! convert deptid like %I to original deptid
  move &C.DEPTID to $deptid
  if substr($deptid,4,1) = 'I'
     do convert-deptid($deptid,$new_deptid)
  else
     let $new_deptid = $deptid
  end-if
! CJH - 02/05/1999 - end

move &C.EMPL_RCD to #empl_rcd
move #empl_rcd to $empl_rcd
let $filler2 = rpad($filler,3,'0')

! CJH - 04/20/1999 - begin 
!write 1 from $new_deptid:4 $e02-rectype:3 &A.EMPLID:9 $empl_rcd:1 &A.LAST_NAME_SRCH:15  -
!	     &A.FIRST_NAME_SRCH:12 &C.FULL_PART_TIME:1      -
! CJH - 04/20/1999 - end


   
  ! if &B.APPOINT_END_DT <> ''                             !ISDVMXR 11/01/2006  ITG # 38501                                         
   !   move &B.APPOINT_END_DT to  $hire_Dt        !Vendrbc 08/20/2007
   ! do get-string-date($hire_Dt, $hire_Dt_Str, $hire_date_ymd)  
     ! show 'in &B.APPOINT_END_DT to $hire_Dt_Str * $hire_dt = ' $hire_Dt_Str  !Vendrbc 08/20/2007 
  ! end-if                       !ISDVMXR 11/01/2006  ITG # 38501    !Vendrbc 08/20/2007 

write 1 from $new_deptid:4 $e02-rectype:3 &A.EMPLID:9 $empl_rcd:1 $last_name:15  -
	     $first_name:12 &C.FULL_PART_TIME:1      -
	     $hire_Dt_Str:10 $birthdt_str:10 $division_Cd:4 -
	     &c.PAYGROUP:3 &C.ACCT_CD:3 &C.JOBCODE:6 $ccs_empl_type:1      -
	     $base_rate_prefix:8 $alt_rate_prefix:8 $filler2:3
     status=#file-stat

if #file-stat <> 0
   move 'Y' to $sev-error
   add 1 to #errorcount
   do error-found
   print 'error in writing to the file: rec-type E02' (,132)
end-if

end-procedure

!*********************************************************************
!This creates the E04 record for the employees whose records need to 
!be sent to the stores where they are working along with the E02 records
!*********************************************************************

begin-procedure create-e04-record

move 'E04' to $e04-rectype
move 'N' to $errorfound
move 'N' to $sev-error
let #file-stat = 0

!CJH - 05/04/1999 - begin
!let $area_cd = substr(&A.PHONE,1,3)
!let $loc_cd  = substr(&A.PHONE,5,3)
!let $phone_cd = substr(&A.PHONE,9,4)
!let $phone = $area_Cd||$loc_cd||$phone_Cd
let $phone_cd = translate(&A.PHONE,'-','')
let $phone_cd = translate($phone_cd,'/','')
let $phone_cd = translate($phone_cd,' ','')
let $phone = lpad($phone_cd,10,'0')
! CJH - 05/04/1999 - end

! CJH - 02/05/1999 - begin
! max_hrs should be set to std_hrs from current job row
!let #max_hrs = 40
let #max_hrs = #std_hrs
! CJH - 02/05/1999 - end
move #max_hrs to $max_hrs
do prefix_zeros_no_dec($max_hrs,$max_hrs_prefix)

! CJH - 02/05/1999 - begin
! convert deptid like %I to original deptid
  move &C.DEPTID to $deptid
  if substr($deptid,4,1) = 'I'
     do convert-deptid($deptid,$new_deptid)
  else
     let $new_deptid = $deptid
  end-if
! CJH - 02/05/1999 - end

! CJH - 04/22/1999 - begin
! add indicator of status to E04 record
let $filler3 = rpad($filler,6,'0')
let $stat = &C.EMPL_STATUS
! let $filler3 = rpad($filler,7,'0')


let $filler4 = rpad($filler,24,'0')
write 1 from $new_deptid:4 $e04-rectype:3 &A.EMPLID:9 &ADDRESS1:20  -
	     &CITY:13 &STATE:2 &A.POSTAL:5 $phone:10   -
	     $stat $filler3:6 $max_hrs_prefix:4 $filler4:24
     status=#file-stat

! CJH - 04/22/1999 - end
if #file-stat <> 0
   move 'Y' to $sev-error
   add 1 to #errorcount
   do error-found
   print 'error in writing to the file: rec-type E04' (,132)
end-if

end-procedure

!********************************************************************
!This procedure converts employee types from people soft to CCS store
!format before sending the employee records to the CCS stores
!********************************************************************
!   02/07/2002       SCM   -Begin- C-O-M-M-E-N-T-E-D code- created new code for procedure below
!begin-procedure convert-empl-type
!Evaluate &C.EMPL_TYPE
!   when = 'E'
 ! CJH - 02/05/1999 - add Pharmacy Paygroup PH2 to paygroup selection
 ! SCM - 1/09/2001 - add Pharmacy Paygroup PH3 for Cleveland
 ! CWB - 02/22/2001 - add Pharmacy Paygroup PH4 to paygroup selection
!      if &C.PAYGROUP = 'PHM'
!       if (&C.PAYGROUP = 'PHM' or &C.PAYGROUP = 'PH2')
!       if (&C.PAYGROUP = 'PHM' or &C.PAYGROUP = 'PH2' or &C.PAYGROUP = 'PH3'
!           or &C.PAYGROUP = 'PH4')
!	   if &C.UNION_CD = 'NON' !JNB 01/25/00 Changed from b.union_cd
!	    let $ccs_empl_type = 'P'
!	   else
!	    let $ccs_empl_type = 'H'
!	 end-if
!      else
!	 let $ccs_empl_type = 'H'
!      end-if         
!      break
!   when = 'H'
!     if &C.PAYGROUP = 'PHM'
 !      if (&C.PAYGROUP = 'PHM' or &C.PAYGROUP = 'PH2')
!	 if &C.UNION_CD = 'NON' !JNB 01/25/00 
!	    let $ccs_empl_type = 'P'
!	 else
!	    let $ccs_empl_type = 'H'
!	 end-if
!      else
!	 let $ccs_empl_type = 'H'
!      end-if
!      break
 ! CJH - 02/05/1999 - end
!   when = 'S'
!      let $ccs_empl_type = 'S'
!      break
!end-evaluate
!end-procedure
!   02/07/2002       SCM   -End-    C-O-M-M-E-N-T-E-D   code and created new procedure below

!********************************************************************************************
!   02/07/2002       SCM   -Begin-   create new code for procedure convert-empl-type
begin-procedure convert-empl-type
Evaluate &C.EMPL_TYPE
   when = 'E'
      if &C.PAYGROUP = 'PH4' or
         (&C.PAYGROUP = 'PHM' and &C.UNION_CD = 'NON')          
	    let $ccs_empl_type = 'P'
      else
	    let $ccs_empl_type = 'H'
      end-if
      break
   when = 'H'
      if &C.PAYGROUP = 'PH4' or
         (&C.PAYGROUP = 'PHM' and &C.UNION_CD = 'NON')  
           let $ccs_empl_type = 'P'
      else
	   let $ccs_empl_type = 'H'
      end-if
      break
   when = 'S'
      let $ccs_empl_type = 'S'
      break
end-evaluate
end-procedure
!   02/07/2002       SCM   -End-   create new code for procedure 
!******************************************************************************** 
!
!*********************************************************************
!For Employees other than type 'P', need to get the additional pay 
!hourly rate from the ADDITIONAL record. If there is no additional record
!exists for the employee, uses the base rate as the alternate rate.
!*********************************************************************

begin-procedure get-alt-rate

move 'N' to $found
move 'N' to $errorfound

begin-select ON-ERROR=SQL-ERROR-FOUND('Get-alt-rate')
I.HOURLY_RT

   move 'Y' to $found
   move &I.HOURLY_RT to #alt_rate
   
FROM PS_ADDL_PAY_DATA I
WHERE I.EMPLID = &A.EMPLID
  AND I.EMPL_RCD = &C.EMPL_RCD
  AND I.ERNCD = '176'
  AND I.EFFDT = 
	(SELECT MAX(EFFDT)
	   FROM PS_ADDL_PAY_DATA
	  WHERE EMPLID = &A.EMPLID
	    AND EMPL_RCD = &C.EMPL_RCD
	    AND ERNCD = '176')
  AND I.ADDL_SEQ =
	 (SELECT MAX(ADDL_SEQ)
	    FROM PS_ADDL_PAY_DATA 
	   WHERE EMPLID = &A.EMPLID
	     AND EMPL_RCD = &C.EMPL_RCD
	     AND ERNCD = '176'
	     AND EFFDT = I.EFFDT)
end-select

if $found = 'N'
   move #base_rate to #alt_rate
end-if

end-procedure

!********************************************************************
!This procedure retrieves all the rows from DIVISION table for the 
!selected contract group and attempts to find the division code for 
!the employee where the business rules are satisfied
!********************************************************************

begin-procedure get-division-code

!JNB 01/25/2000 Begin
!do get-contract-beg-date
!JNB 01/25/2000 End
move 'N' to $errorfound
move 'N' to $found

begin-select ON-ERROR=SQL-ERROR-FOUND('Get-Division-code')
L.GEX_SEQ_NUM
L.GEX_DIVISION_CD
L.GEX_UNION_CD
L.FULL_PART_TIME
L.GEX_STUDENT_IND
L.GEX_DEPTID
L.GEX_JOBCODE
L.GEX_PAY_TYPE
L.GEX_AFTER_HIRE_DT
L.GEX_BEFORE_HIRE_DT
L.GEX_AFTER_PERS_DT
L.GEX_BEFORE_PERS_DT
L.GEX_HIRE_DT_OPER
L.GEX_CONTRACT_DT
L.GEX_SERV_DT_OPER
L.GEX_SERVICE_DAYS

      move 'Y' to $found
      move ' ' to $division_cd
      do find-division-code
      if $match-found = 'Y'
	 exit-select
      end-if 

FROM PS_GEX_DIV_TBL L

WHERE L.GEX_CONTRACT_GRP = &D.SI_ACCIDENT_NUM

ORDER BY L.GEX_SEQ_NUM

end-select

if $found = 'N'
   add 1 to #errorcount
   do error-found
   print 'No match found for the Contract Number in Division table:' (,132)
   print &d.si_Accident_num ()
else
   if $match-found = 'N'
      add 1 to #errorcount
      do error-found
      print 'No Division Code found' (,132)
   end-if
end-if

end-procedure

!*********************************************************************
!This procedure retrieves the contract begin date for the employee
!*********************************************************************

!Begin-procedure get-contract-beg-date   

!move 'N' to $found
!move 'N' to $errorfound

!begin-select ON-ERROR=SQL-ERROR-FOUND('Get-Contract-Beg-date')
!M.CONTRACT_BEGIN_DT

!    move 'Y' to $found
!    move &M.CONTRACT_BEGIN_DT to $contract_beg_dt

!FROM PS_CONTRACT_DATA M
!WHERE M.EMPLID = &A.EMPLID
!  AND M.EMPL_RCD = &C.EMPL_RCD
!  AND M.CONTRACT_NUM = 
!      (SELECT MAX(N.CONTRACT_NUM)
!	 FROM PS_CONTRACT_DATA N
!	WHERE N.EMPLID = &A.EMPLID
!	  AND N.EMPL_RCD = &C.EMPL_RCD)
!end-select
  
!end-procedure

!*********************************************************************
!This procedure tries to match every non-null column with the source
!values and if everything matches, passes that row's division code 
!as the employee division code
!*********************************************************************
   
begin-procedure find-division-code

move 'Y' to $match-found
move 'N' to $errorfound

if RTRIM(&L.GEX_UNION_CD,' ') <> ''
   if &L.GEX_UNION_CD <> &C.UNION_CD  !JNB 01/25/00
!      print 'No match for union code' ()
      move 'N' to $match-found
      goto skip-match
   end-if
end-if

if RTRIM(&L.FULL_PART_TIME,' ') <> ''
   if &L.FULL_PART_TIME <> &C.FULL_PART_TIME
!      print 'No match for Full/Part Status' ()      
      move 'N' to $match-found
      goto skip-match
   end-if
end-if

if RTRIM(&L.GEX_STUDENT_IND,' ') <> ''
   if &L.GEX_STUDENT_IND <> &C.GEX_STUDENT_IND
!      print 'No match for Student Indicator' ()      
      move 'N' to $match-found
      goto skip-match
   end-if
end-if

if RTRIM(&L.GEX_DEPTID,' ') <> ''
   if &L.GEX_DEPTID <> &C.ACCT_CD
!      print 'No match for Store id' ()
      move 'N' to $match-found
      goto skip-match
   end-if
end-if

if RTRIM(&L.GEX_JOBCODE,' ') <> ''
! CJH - 02/05/1999 - begin
!   if &L.GEX_JOBCODE <> &C.ACCT_CD
   if &L.GEX_JOBCODE <> &C.JOBCODE
! CJH - 02/05/1999 - end
!      print 'No match for Job code ' ()
      move 'N' to $match-found
      goto skip-match
   end-if
end-if

if RTRIM(&L.GEX_PAY_TYPE,' ') <> ''
   if &L.GEX_PAY_TYPE <> $ccs_empl_type
!      print 'No match for Pay type' ()
      move 'N' to $match-found
      goto skip-match
   end-if
end-if

if RTRIM(&L.GEX_AFTER_HIRE_DT,' ') <> ''

   do get-string-date(&L.GEX_AFTER_HIRE_DT, $after_hire_str_date, $after_hire_Date_ymd)
 
!***** SCM 02/07/2002 BEGIN  commented code here to assign hire dates. 
!                     Add code to always send SERVICE_DT as hire_dt.
   
!! 07/08/1999 - CJH - Determine which to use - HIRE_DT, REHIRE_DT, SERVICE_DT
!  if &B.HIRE_DT = ''
!     do get-string-date(&B.REHIRE_DT, $hire_date_str, $hire_date_ymd)
!     if &B.REHIRE_DT = ''
!         do get-string-date(&B.SERVICE_DT, $hire_date_str, $hire_date_ymd)
!     else
!         do get-string-date(&B.REHIRE_DT, $hire_date_str, $hire_date_ymd)
!     end-if
!  else
!     if &B.REHIRE_DT = ''
!        do get-string-date(&B.HIRE_DT, $hire_date_str, $hire_date_ymd)
!     else
!        do get-string-date(&B.REHIRE_DT, $hire_date_str, $hire_date_ymd)
!     end-if
!  end-if
! 07/08/1999 - CJH - end

   do get-string-date(&B.SERVICE_DT, $hire_Dt_Str, $hire_date_ymd)      !SCM 02/07/2002
 
!***** SCM 02/07/2002 END  commented code here to assign hire dates. 

!   print 'After hire date:' ()
!   print $after_hire_Str_Date ()
!   print 'hire_Date:' (+1,1)
!   print $hire_date_Str ()

   if $hire_Date_ymd < $after_hire_Date_ymd
!      print 'No match for After hire dates ' ()
      move 'N' to $match-found
      goto skip-match
   end-if

end-if

if RTRIM(&L.GEX_BEFORE_HIRE_DT,' ') <> ''

   do get-string-date(&L.GEX_BEFORE_HIRE_DT, $before_hire_str_date, $before_hire_Date_ymd)
 
!***** SCM 02/07/2002 BEGIN  commented code here to assign hire dates. 
!                     Add code to always send SERVICE_DT as hire_dt.

! 07/08/1999 - CJH - Determine which to use - HIRE_DT, REHIRE_DT, SERVICE_DT
!  if &B.HIRE_DT = ''
!     do get-string-date(&B.REHIRE_DT, $hire_date_str, $hire_date_ymd)
!     if &B.REHIRE_DT = ''
!         do get-string-date(&B.SERVICE_DT, $hire_date_str, $hire_date_ymd)
!     else
!         do get-string-date(&B.REHIRE_DT, $hire_date_str, $hire_date_ymd)
!     end-if
!  else
!     if &B.REHIRE_DT = ''
!        do get-string-date(&B.HIRE_DT, $hire_date_str, $hire_date_ymd)
!     else
!        do get-string-date(&B.REHIRE_DT, $hire_date_str, $hire_date_ymd)
!     end-if
!  end-if
! 07/08/1999 - CJH - end

  do get-string-date(&B.SERVICE_DT, $hire_Dt_Str, $hire_date_ymd)      !SCM 02/07/2002
 
!***** SCM 02/07/2002 END  commented code here to assign hire dates. 

!   print 'Before hire date:' ()
!   print $before_hire_Str_Date ()
!   print 'hire_Date:' (+1,1)
!   print $hire_date_Str ()

   if $hire_Date_ymd > $before_hire_Date_ymd
!      print 'No match for before hire dates ' ()
      move 'N' to $match-found
      goto skip-match
   end-if

end-if

if RTRIM(&L.GEX_AFTER_PERS_DT,' ') <> ''


   do get-string-date(&L.GEX_AFTER_PERS_DT, $after_pers_str_date, $after_pers_date_ymd)

! CJH - 04/06/1999 - begin
! if CMPNY_SENIORITY_DT is null, use HIRE_DT
   if &B.CMPNY_SENIORITY_DT = ''
      do get-string-date(&B.HIRE_DT, $seniority_date_str, $seniority_date_ymd)
   else
      do get-string-date(&B.CMPNY_SENIORITY_DT, $seniority_date_str, $seniority_date_ymd)
   end-if
! CJH - 04/06/1999 - end


!   print 'After Pers date:' ()
!   print $After_pers_Str_Date ()
!   print 'Seniority_Date: '(+1,1)
!   print $seniority_date_Str ()

   if $seniority_Date_ymd < $after_pers_Date_ymd
!      print 'No match for seniority dates ' ()
      move 'N' to $match-found
      goto skip-match
   end-if

end-if

if RTRIM(&L.GEX_BEFORE_PERS_DT,' ') <> ''

   do get-string-date(&L.GEX_BEFORE_PERS_DT, $before_pers_str_date, $before_pers_date_ymd)
! CJH - 04/06/1999 - begin
! if CMPNY_SENIORITY_DT is null, use HIRE_DT
   if &B.CMPNY_SENIORITY_DT = ''
      do get-string-date(&B.HIRE_DT, $seniority_date_str, $seniority_date_ymd)
   else
      do get-string-date(&B.CMPNY_SENIORITY_DT, $seniority_date_str, $seniority_date_ymd)
   end-if
! CJH - 04/06/1999 - end


!   print 'Before pers date:' ()
!   print $before_pers_Str_Date ()
!   print 'seniority_Date:' (+1,1)
!   print $seniority_date_Str ()

   if $seniority_Date_ymd > $before_pers_Date_ymd
!      print 'No match for seniority dates' ()
      move 'N' to $match-found
      goto skip-match
   end-if

end-if
!***********************************************
!PER-STATUS has been deleted from the gex_Div_tbl
!***********************************************

!if RTRIM(&L.GEX_PER_STATUS,' ') <> ''
!   if &L.GEX_PER_STATUS <> &C.REG_TEMP
!      print 'gex_per_Status : ' (+1,1)
!      print &l.gex_per_Status ()
!      print 'REg_temp:' ()
!      print &c.reg_temp ()
!      print 'No match for per status ' ()
!      move 'N' to $match-found
!      goto skip-match
!   end-if
!end-if

if RTRIM(&L.GEX_HIRE_DT_OPER,' ') <> ''

 if RTRIM(&L.GEX_CONTRACT_DT,' ') <> ''

   do get-string-date(&L.GEX_CONTRACT_DT, $contract_str_date, $contract_Date_ymd)
 
!***** SCM 02/07/2002 END  commented code here to assign hire dates.  Always send service date. 
! 06/01/1999 - CJH - Use Rehire Date if no Hire Dt - begin
!  if &B.HIRE_DT = ''
!   do get-string-date(&B.REHIRE_DT, $hire_date_str, $hire_date_ymd)
!  else
!   do get-string-date(&B.HIRE_DT, $hire_date_str, $hire_date_ymd)
!  end-if
! 06/01/1999 - CJH - end

    do get-string-date(&B.SERVICE_DT, $hire_Dt_Str, $hire_date_ymd)      !SCM 02/07/2002
 
!***** SCM 02/07/2002 END  commented code and add new get-string-date here to assign service date. 


      if (&L.GEX_HIRE_DT_OPER = 'GT') or (&L.GEX_HIRE_DT_OPER = 'GE')

	 if $hire_date_ymd < $contract_Date_ymd
	    move 'N' to $match-found
	    goto skip-match
	 end-if
      else
	 if $hire_date_ymd > $contract_Date_ymd
            move 'N' to $match-found
	    goto skip-match
	 end-if
      end-if           

 end-if
end-if

if RTRIM(&L.GEX_SERV_DT_OPER,' ') <> ''

 if RTRIM(&L.GEX_SERVICE_DAYS,' ') <> ''
!   move &L.GEX_SERVICE_DAYS to $gex_service_Days   
   move &L.GEX_SERVICE_DAYS to #gex_service_Days   


   if RTRIM(&B.SERVICE_DT, ' ') <> ''

      do get-the-difference

      if (&L.GEX_SERV_DT_OPER = 'GT')  or (&L.GEX_SERV_DT_OPER = 'GE')
 
!	if $diff_days < $GEX_SERVICE_DAYS
	if #diff_days < #GEX_SERVICE_DAYS
	   move 'N' to $match-found
	   goto skip-match
	end-if
      else
!	if $diff_days > $GEX_SERVICE_DAYS
	if #diff_days > #GEX_SERVICE_DAYS
          move 'N' to $match-found
	   goto skip-match
	end-if
      end-if 
   else
      move 'N' to $match-found
      goto skip-match
   end-if

 end-if
end-if

skip-match:

if $match-found = 'Y'
   move &L.GEX_DIVISION_CD to $division_cd
end-if

end-procedure

!*********************************************************************
!This procedure retrieves the days difference between two dates
!*********************************************************************

begin-procedure get-the-difference


do convert-to-dtu-date(&B.SERVICE_DT, $service_Date_dtu)

!let $service_Dt_yy = substr($service_Date_dtu,1,2)
!let $service_Dt_dd = substr($service_date_dtu,7,2)
!let $service_Dt_mm = substr($service_Date_dtu,4,2)

!do MakeYear4Digits ($service_dt_yy)

!let $service_dt_ccyy = $service_dt_yy||'-'||$service_dt_mm||'-'||$service_dt_dd

move $service_Date_dtu to $service_Dt_ccyy

do dtu-diff-days($service_Dt_ccyy, $reportdate_ccyy, #diff_Days)

move #diff_days to $diff_Days

end-procedure

!***********************************************************************
! Convert DEPT ids that end in 'I' to the original deptid
!***********************************************************************
begin-procedure convert-deptid($deptid_in, :$deptid_out)
 let $found = 'N'
begin-SELECT
GDT.DEPARTMENT
 
   let $deptid_out = &GDT.DEPARTMENT
   let $found = 'Y'

From PS_GEX_DEPT_TBL GDT
where GDT.deptid = $deptid_in
end-SELECT

if $found = 'N'
  display 'Department ID unable to be converted: ' noline
  display $deptid_in
  do error-found
end-if
 
end-procedure


!*********************************************************************
!This procedure takes the database format date and gives back date in 
!mm/dd/yyyy and yyyymmdd formats
!*********************************************************************

begin-procedure get-string-date($date, :$str_date_mdy, :$str_Date_ymd)

do format-datetime($date,$str_date_mdy,{DEFMDY},'','')

let $date_dd_mm = substr($str_Date_mdy,1,2)
!let $date_dd_yyyy = substr($str_Date_mdy,7,2)    JNB 08/13/1999
let $date_dd_yyyy = substr($date,8,4)            !JNB 08/13/1999 
let $date_dd_dd = substr($str_date_mdy,4,2)
!display '$date_dd_yyyy ' noline                  JNB 08/13/1999
!display $date_dd_yyyy                            JNB 08/13/1999
!do MakeYear4Digits($date_Dd_yyyy)                JNB 08/13/1999

let $str_Date_mdy = $date_dd_mm||'/'||$date_dd_dd||'/'||$date_dd_yyyy

!do format-datetime($date,$str_date_ymd,{DEFCMP},'','')

let $str_Date_ymd = $date_dd_yyyy||$date_dd_mm||$date_dd_dd

end-procedure

!********************************************************************
!This procedure prefixes the string values with zeros as the CCS 
!format of base rate and alternate rate needs to be
!********************************************************************

begin-procedure prefix_zeros($string,:$string_prefix)


UNSTRING $string BY '.' INTO $string_int $string_after_Dec

move 0 to #string_int_len

let #string_int_len = length($string_int)

while #string_int_len < 5
  let $string_prefix = '0'||$string_int
  move $string_prefix to $string_int
  add 1 to #string_int_len
end-while

move $string_int to $string_prefix

let $string_after_Dec2 = substr($string_After_Dec,1,2)
let $string_prefix = $string_prefix||'.'||$string_after_dec2

end-procedure

!********************************************************************
!This procedure takes a numeric value with no decimals and prefixes
!it with zeros.
!********************************************************************

Begin-procedure prefix_zeros_no_Dec($string_no_Dec,:$string_prefix_no_dec)

move 0 to #string_int_len
let #string_int_len = length($string_no_Dec)

while #string_int_len < 4
  let $string_prefix_no_Dec = '0'||$string_no_Dec
  move $string_prefix_no_Dec to $string_no_Dec
  add 1 to #string_int_len
end-while

move $string_no_Dec to $string_prefix_no_Dec

end-procedure

!********************************************************************
!This procedure displays in the error report if there are any sql erros
!happened in the program
!********************************************************************

begin-procedure SQL-Error-Found($Proc_Name) 
  do error-found
  print 'SQL Error in ' (,21)
  print $Proc_Name (,35)  
  print $_sql-error (+1,1) 
  print 'sql-status:' (+1,1)
  print #_sql-status () edit 99999 

end-procedure

!*********************************************************************
!This procedure displays the error message for the records that are in
!progress
!*********************************************************************

begin-procedure Error-Found
  move 'Y' to $ErrorFound
  do Format-Number(#InputTran, $out, '99999')
  print $out (+1,1)
  print &C.DEPTID (,11)
  move &A.EMPLID to $emplid

  let $EmplId_1st3 = substr($EmplId,1,3)
  let $EmplId_mid2 = substr($EmplId,4,2)
  let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  print $EmplID11 (,24)
  print &C.EMPL_TYPE (,41)
  print &C.FULL_PART_TIME (,55)
  print &C.ACCT_CD (,66)
  print &C.JOBCODE (,76)
  print &B.HIRE_DT (,87)
  print &B.SERVICE_DT (,103)
  print &C.UNION_CD (,122)   !JNB 01/25/00
 
end-procedure

! CWB - 02/22/2001 BEGIN

!***********************************************************************
begin-procedure set-system-commands
!***********************************************************************
! isdvmxr 08/18/2008 added '/bin/ksh  ' || $pshome || '/scripts/gex_shell/' || to 'tafmftp1.sh '
  do GEXXX951-Select-Oracle-Instance
  let $db_name = lower($GEXXX951_Oracle_Instance)
  let $cd_command_bindir = 'cd '||'$BINDIR'
  let $pshome = getenv('PS_HOME')
  let $split_command = '/bin/ksh  ' || $pshome || '/scripts/gex_shell/' || 'gexpycc1.sh '||$db_name 
  let $ftp_command = '/bin/ksh  ' || $pshome || '/scripts/gex_shell/' ||'tafmftp1.sh '||$db_name  
  ! added '/bin/ksh  ' || $pshome || '/scripts/gex_shell/' ||
show '#####################################################'
show '$db_name:           ' $db_name
show '$cd_command_bindir: ' $cd_command_bindir
show '$split_command:     ' $split_command
show '$ftp_command:       ' $ftp_command
show '#####################################################'
end-procedure

!***********************************************************************
begin-procedure cd-bindir
!***********************************************************************
      CALL SYSTEM USING $cd_command_bindir #sys_status
      show 'change dir ' #sys_status
      if #sys_status <> 0
!         let $cd_display_msg = 'Changing directory to /opt/pshr/hr751/'||$db_name||'/bin did not work'
         let $cd_display_msg = 'Changing directory to /apps/hr/hrms90/'||$db_name||'/scripts/gex_shell did not work'
         display $cd_display_msg
	 display 'JOB failed'
      end-if
end-procedure

!***********************************************************************
begin-procedure split-file
!***********************************************************************
      CALL SYSTEM USING $split_command #sys_status
      show '#sys_status ' #sys_status
      if #sys_status <> 0
	 display 'Splitting gexpycc1.dat file did not work'
	 display 'JOB failed'
	 stop
      end-if

end-procedure

!***********************************************************************
begin-procedure ftp-file
!***********************************************************************
      CALL SYSTEM USING $ftp_command #sys_status
      if #sys_status <> 0
	 display 'tafmftp1.sh Failed'
	 display 'JOB failed'
	 stop
      else
         do notify-T-and-A
      end-if

end-procedure

!***********************************************************************
begin-procedure notify-T-and-A
!***********************************************************************

!SCM  02/07/2002   Remove emails: abuccigrossi@gianteagle.com,   
!    jason.heese@gianteagle.com, draszkowski@gianteagle.com         
!    Add emails: tim.baker@gianteagle.com, john.fetchen@gianteagle.com   
!                                 

!*********************************************************************
! GBD 01/08/2003 Begin ***********************************************
! Changed email addresses for PS8 testing
 
!   let $UNIX_MAIL_COMMAND = 'cat $PS_HOME/outgoing/1tafm.msg ' || '|' || ' mailx 
!                             -s"New TAFM file" cbuckrop@gianteagle.com droenigk@gianteagle.com
!                             tim.baker@gianteagle.com
!                             darcey.ferguson@gianteagle.com
!                             john.fetchen@gianteagle.com'

!   let $UNIX_MAIL_COMMAND = 'cat $PS_HOME/outgoing/1tafm.msg ' || '|' || ' mailx 
!                             -s"New TAFM file" cindy.wilson@gianteagle.com anette.clough@gianteagle.com'

! GBD 01/08/2003 End *************************************************
!*********************************************************************
 
!   CALL SYSTEM USING $UNIX_MAIL_COMMAND #system_status
!   if #system_status <> 0
!      add 1 to #errorcount
!      display 'Email notification failed'
!   else
!      display 'Email sent to T&A folks'
!   end-if

! CWB - 02/22/2001 END

! CWB 04/05/2004 BEGIN

  Do GEXXX971-Select-Trans-Type-Parameters
  if ($GEXXX971_EMAIL_ADDR_CRITERIA = '') and ($GEXXX971_FTP_ADDR_CRITERIA = '')
     show 'Either no rows exist on GEX_INTFC_RULE/DATA for this Oprid/Run Control ID'
     show 'or the most current rows under this ID have been set to inactive. Data will'
     show 'not be sent.'
  else
     if $GEXXX971_GEX_TRANS_TYPE = 'E'
        show $GEXXX971_EMAIL_ADDR_CRITERIA
        show 'This is the email statement produced: '
        let $UNIX_MAIL_COMMAND = '/usr/local/bin/mailer.pl "'||$GEXXX971_EMAIL_ADDR_CRITERIA||
        '" "New TAFM file" '||'"$PS_HOME/outgoing/1tafm.msg" '  
        show $UNIX_MAIL_COMMAND

        CALL SYSTEM USING $UNIX_MAIL_COMMAND #system_status

        if #system_status <> 0
           add 1 to #errorcount
           show 'eMail of 1TAFM message failed'
           STOP
        else
           show '1TAFM message successfully sent to ' $GEXXX971_EMAIL_ADDR_CRITERIA
        end-if

     end-if
  end-if

end-procedure

! CWB 04/05/2004 END

#Include 'gexxx902.sqc'  !Get deptid multiple row table
#Include 'gexxx922.sqc'  !Get pay single row run control
#Include 'gexxx951.sqc'  !Get Oracle instance
#Include 'askaod.sqc'    !Ask-As-Of-Date routine
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'gexxx971.sqc'  !Email and FTP Parameters   ! CWB 04/05/2004
