!***********************************************************************
!  GEXPY651:  New York Life Insurance Deduction                        *  
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       * 
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY651:  	New York Life Insurance Deduction                      *
!		(Based on GEXPY648)                                    *
!                                                                      *
! Narrative:	Creates a report and file for the New York Life        *
!               Insurance Company.                                     *
!                                                                      *
! #Debugx Used:	#debug9 paragraph trace                                *
!			#debug8 key variable values                    *
!			#debug7 data returned from sql calls           *
! 	                                                               *
! SQL Tables:           PS_JOB                                         *
!			PS_PERSONAL_DATA 	                       *
!			PS_EMPLOYMENT    	                       *
!			PS_GEX_DEPT_TBL  	                       *
!			PS_DEDUCTION_BAL 	                       *
!			PS_JOBCODE_TBL    	                       *
! 	                                                               *
! Normally Run:	Monthly                                                *
! 	                                                               *
! Prerequisite: 	None                                           *
! 	                                                               *
! Entered Run                                                          *
! Control Parms:	FOR WHERE CLAUSE:                              *
! 	                                                               *
!			Co/Div Code	 Company Division code grouping*
! 	                                                               *
!			Company  	 Franchise companies to be     *
!                                        entered and maintained by user*
! 	                                                               *
!			As Of Date	Allow for entry or default to  *
!                                       todays date.	               *
! 	                                                               *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! ID#       INITIALS  DATE              DESCRIPTION OF THE CHANGE      *
!***********************************************************************
!                                                                      *
! HR10258   GBD       10/02/2002        Cloned from GEXPY648.SQR       * 
!                                                                      *
! HR10258   GBD       11/26/2002        File and Report will be emailed*
!                                       instead of sent via diskette.  *
!                                                                      *
! HR10380   GBD       12/12/2002        Totals missing from report.    *
!                                       Report file does not complete  *
!                                       before sqr finishes running.   *
!                                       Email will be done via script. *
!                                                                      *
! HR10306   GBD       12/30/2002        v8.3 Upgrade                   *
!                                                                      *
!           CJH       02/17/2003        Notes on General Deduction joins
!                                                                      *
! HR10306   GBD       06/27/2003        Added Company and Paygroup to  *
!                                       selection criteria.            *
! HR10554   GBD       10/02/2003        Removed Company and Paygroup   *
!                                       from Effective dated selection.*
! HR10579   CWB       11/15/2003        Reversed the change above.     *
! HR10735   CWB       06/07/2004        Removed paygroup from effdt    *
!                                       selection criteria.            * 
! GEX-AXG            08/17/2007         Upgrade 9.0                    * 
! GEX-MXT            04/02/2008         ADDED THE join condition for   *
!                                       PER_ORG_INST                   *
! GEX-TLL   	     04/22/2008         Upgrade 9.0                    *
!***********************************************************************

!selection criteria
#define #x000_col_selection_criteria_a 	2
#define #x000_col_selection_criteria_b 	5
!#Define OUTFILE \apps\hr\hrms90\hrdev90\outgoing\	!For Testing
!line 1
#define #x000_col_emplid                02
#define #x000_col_name                  13

#define #x000_col_company		44  !02
#define #x000_col_deptid		53  !06
#define #x000_col_union_cd		61  !11
#define #x000_col_empl_status		70  !17
#define #x000_col_hire_date     	80  !21  
#define #x000_col_termination_dt	92  !30
#define #x000_col_birth_dt	       104  !39
#define #x000_col_hourly_rt	       117  !88
#define #x000_col_empl_type            128  !95

#define #x000_col_ded_mtd              138
#define #x000_col_new_ssn              154   !GEX-TLL  22/04/08 Added

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'  !Printer and page-size initialization

!***********************************************************************
begin-heading 7

#Include 'stdhdg01.sqc'

 let $x000_ped = 'Pay End Date: '|| $X000_REPORT_HEADING_PAY_END_DT
 print $x000_ped                    (4,1) 

 let $x000_temp_out =  'Report as of ' || $X000_REPORT_HEADING_ASOFDATE 
 print $x000_temp_out 	            (4,) center 

 
!line 1
 print 'Name'         	   (+2,{#x000_col_name})	
 print 'Emplid'	           (0,{#x000_col_emplid})
 print 'Company'	   (0,{#x000_col_company})
 print 'Deptid'        	   (0,{#x000_col_deptid})
 print 'UnionCd'           (0,{#x000_col_union_cd})
 print 'Emp Stat'          (0,{#x000_col_empl_status})
 print 'Hire Date'         (0,{#x000_col_hire_date})
 print 'Term Date'         (0,{#x000_col_termination_dt})
 print 'Birth Date'        (0,{#x000_col_birth_dt})

 print 'Hourly Rt'         (0,{#x000_col_hourly_rt})
 print 'Emp Type'          (0,{#x000_col_empl_type})

 print ' Deduction Amt'    (0,{#x000_col_ded_mtd})
 print 'Ssn'               (0,{#x000_col_new_ssn})  !GEX-TLL 04/22/2008 Added

end-heading


!***********************************************************************
begin-report
!***********************************************************************
#debug9 show 'begin-report'

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
 
 ! show '$asoftoday=' $asoftoday 
 
  do StdAPI-Init
  do P010-Init-Variables
  do P100-main-select

!  display 'emailing the file'                        
!  do GEXXX951-Select-Oracle-Instance
!  let $db_name = lower($GEXXX951_Oracle_Instance)
!  do P700-cd-bindir
!  do P800-mail-the-file

  do StdAPI-Term
  do Reset

  show 'Successful End of Report'

end-report


!***********************************************************************
begin-procedure P010-Init-Variables
!***********************************************************************
#debug9 show 'P010-Init-Variables'

  do Get-Calendar-Year-Id
  show '$Calendar_Year_Id=' $Calendar_Year_Id

  let $x000_new_page_flag = 'N'

  let $ReportID    = 'GEXPY651'
  let $ReportTitle = 'New York Life Insurance Deduction'
  let $Country     = 'USA'
  let $first_pass  = 'Y'

  show '$ReportID=' $ReportID 
  show '$ReportTitle=' $ReportTitle
  show '$ReportDate=' $ReportDate
  show '$ReportTime=' $ReportTime
 
  Let $GEXXX901_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
  Let $GEXXX902_Deptid_Alias   = 'J.DEPTID'
  Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'
  Let $GEXXX907_Div_CD_Alias   = 'GEX_DEPT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias  = 'J.ACCT_CD'

!RUN CONTROL LOGIC
  if $Prcs_Process_Instance = ''
        display 'The Unix command logic requires this process to be run online.'
	do GEXXX950-Input-Parameters
  else
 
!	get parameters from single row run control record 
	Do GEXXX922-Select-Parameters
      let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
      if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
        let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
      end-if
      do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')

!	get parameters from multiples run control record
    	Let $GEXXX900_Company_Alias  = 'J.COMPANY'                           

    Do GEXXX900-Select-Company-Parameters 
    Do GEXXX901-Select-Company-Paygroup-Parameters
    Do GEXXX902-Select-Deptid-Parameters 
    Do GEXXX903-Select-Emp-Stat-Parameters
    Do GEXXX907-Select-Div-CD-Parameters
    Do GEXXX909-Select-Acct-CD-Parameters

      show '$Prcs_Process_Instance =' $Prcs_Process_Instance 

  end-if

  do P001-Select-Pay-End-Dt
  show 'Pay End Dt: ' $pay_end_dt

  let $year4 = '1'
  do Format-DateTime($pay_end_dt, $X000_PAY_DT,{DEFYMD}, '', '')
  show $X000_PAY_DT
  let $balance_year = substr($X000_PAY_DT,1,4)
  let $balance_period = substr($X000_PAY_DT,6,2)
!  let #balance_period = $balance_period
  let $bal_per1 = substr($balance_period,1,1)
  if $bal_per1 = '0'
     let $balance_period = substr($balance_period,2,1)
  end-if
  
  if $balance_period = '1' or $balance_period = '2' or $balance_period = '3'
       let $balance_qtr = '1'
  end-if
  if $balance_period = '4' or $balance_period = '5' or $balance_period = '6'
       let $balance_qtr = '2'
  end-if
  if $balance_period = '7' or $balance_period = '8' or $balance_period = '9'
       let $balance_qtr = '3'
  end-if
  if $balance_period = '10' or $balance_period = '11' or $balance_period = '12'
       let $balance_qtr = '4'
  end-if

  show $balance_year ' ' $balance_period ' ' $balance_qtr

  let $year4 = '1'
  do Format-DateTime($pay_end_dt, $X000_REPORT_HEADING_PAY_END_DT,{DEFYMD}, '', '')
!   show 'pay end date: ' $X000_REPORT_HEADING_PAY_END_DT
   let $ped_yy = substr($X000_REPORT_HEADING_PAY_END_DT,1,4)
   let $ped_mm = substr($X000_REPORT_HEADING_PAY_END_DT,6,2)
   let $ped_dd = substr($X000_REPORT_HEADING_PAY_END_DT,9,2)
   let $X000_REPORT_HEADING_PAY_END_DT = $ped_mm||'/'||$ped_dd||'/'||$ped_yy
!   show 'reformatted: ' $X000_REPORT_HEADING_PAY_END_DT

  let $X000_ORDER_BY_FILE   = 'J.EMPLID'

!default the selection date to today, if not entered by user
    if rtrim($X000_WHERE_SELECT_ASOFDATE, ' ' ) = ''
       let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
    end-if

   let $year4 = '1' 
   do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFYMD}, '', '')
!   show 'header date: ' $X000_REPORT_HEADING_ASOFDATE
   let $header_yy = substr($X000_REPORT_HEADING_ASOFDATE,1,4)
   let $header_mm = substr($X000_REPORT_HEADING_ASOFDATE,6,2)
   let $header_dd = substr($X000_REPORT_HEADING_ASOFDATE,9,2)
   let $X000_REPORT_HEADING_ASOFDATE = $header_mm||'/'||$header_dd||'/'||$header_yy
!   show 'reformatted: ' $X000_REPORT_HEADING_ASOFDATE


	show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA                =' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
	show '$GEXXX900_INCLUDE_COMPANY_CRITERIA               =' $GEXXX900_INCLUDE_COMPANY_CRITERIA
	show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA      =' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA   
	show '$GEXXX902_INCLUDE_DEPTID_CRITERIA                =' $GEXXX902_INCLUDE_DEPTID_CRITERIA
	show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA              =' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
 	show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA               =' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA         
        show '$X000_ORDER_BY_FILE                              =' $X000_ORDER_BY_FILE
        show '$X000_WHERE_SELECT_ASOFDATE                      =' $X000_WHERE_SELECT_ASOFDATE 

 	print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
	print '$Prcs_OPRID          ='                              (+1,{#x000_col_selection_criteria_b})
	print $Prcs_OPRID                                           (0,+2)
	print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
	print $PRCS_RUN_CNTL_ID                                     (0,+2)

 	print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,{#x000_col_selection_criteria_a})
	print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA 	    (0,+2)
 	print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
 	print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA            (0,+2)
 	print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})
 	print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA   (0,+2)
	print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)
	print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA           (0,+2)
	print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
	print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA            (0,+2)

      print '$X000_WHERE_SELECT_ASOFDATE                         ='   (+1,{#x000_col_selection_criteria_b})
      print $X000_WHERE_SELECT_ASOFDATE                           (0,+2)
   
	print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,{#x000_col_selection_criteria_a})
        print '$X000_ORDER_BY_FILE                               ='   (+1,{#X000_col_selection_criteria_b})
        print $X000_ORDER_BY_FILE                                 (0,+2)

  let $filename = '{OUTFILE}'||'gexpy651.dat' 
  !let $filename = '//apps/hr/hrms90/hrdev90/outgoing/'||'gexpy651.dat'   !GEX-TLL TESTING
  open $filename as 1
     for-writing record=111

  if #writestat != 0
    display 'Error Opening output file.  Program terminating.'
    stop
  end-if
  !GEX-TLL 04/22/2008 HCM 9.0 Upgrade - Begin
let $filename = '{OUTFILE}'||'gexpy651_emplidssn_map.dat' 
!let $filename ='//apps/hr/hrms90/hrdev90/outgoing/'||'gexpy651_emplidssn_map.dat'  !GEX-TLL TESTING
  open $filename as 2 for-writing record=80:fixed
       status=#filestat
if #writestat != 0
    display 'Error Opening output file.  Program terminating.'
    stop
  end-if
!GEX-TLL 04/22/2008 HCM 9.0 Upgrade - End

 LET #PAGE-COUNT = 0
 NEW-PAGE
 LET #PAGE-COUNT = 1

end-procedure

!***********************************************************************
begin-procedure P015-get-input
!***********************************************************************
#debug9 show 'P015-get-input'

!must have been submitted via SQRW
      let $GEXXX907_INCLUDE_DIV_CD_CRITERIA             = '1=1'           
	let $GEXXX900_INCLUDE_COMPANY_CRITERIA 		= '1=1'
	let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1' 
	let $GEXXX902_INCLUDE_DEPTID_CRITERIA		= '1=1'
	let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA 	= '1=1'
	let $GEXXX904_INCLUDE_GRADE_CRITERIA 		= '1=1'		  
	let $GEXXX905_INCLUDE_HRLY_RT_CRITERIA 		= '1=1'
	let $GEXXX906_INCLUDE_WKLY_SAL_CRITERIA         = '1=1'
	let $GEXXX908_INCLUDE_SAL_ADMIN_PLAN_CRITERIA 	= '1=1'
	let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA          = '1=1'
      let $GEXXX952_INCLUDE_DIV_CD_DEPTID_DISPLAY_CRITERIA = '1=1'
      let $X000_WHERE_SELECT_ASOFDATE                 = $asoftoday
      let $X000_ORDER_BY_FILE = 'J.EMPLID'
 
end-procedure

!********************************************
begin-procedure P100-main-select
!********************************************
#debug9 show 'P100-main-select'

  let $remitter_id = '006917110'
  let $remitter_name = 'Riser Foods Inc'
  let $filler01 = ' '
 
!*********  convert $pay_end_dt (which looks like: 01-APR-2002) to look like:  01/04/2002
  Let $Year4 = '1'                                           !return 4 digit year
  Do Format-DateTime ($pay_end_dt, $paymmddyyyy, {DEFMDY}, '', '')
!  show 'Paymmddyyyy: ' $paymmddyyyy

  let $pay_end_mm = substr($paymmddyyyy,1,2)
  let $pay_end_dd = substr($paymmddyyyy,4,2)
  let $pay_end_yy = substr($paymmddyyyy,7,4)
  let $pay_end = $pay_end_yy||$pay_end_mm||$pay_end_dd
!  show 'Pay End: ' $pay_end

  do P300-Write-Header-Record
  let $rowfound = 'N'

begin-SELECT 

J.COMPANY		
J.DEPTID	
J.UNION_CD	
J.EMPLID                 &j.emplid
J.EMPL_RCD               !&j.empl_rcd#  !GEX-TLL 04/22/2008 Commented
J.EFFDT
J.EFFSEQ
J.EMPL_STATUS
J.ACTION
J.ACTION_REASON
J.LOCATION
J.JOBCODE
J.REG_TEMP
J.paygroup
J.cobra_action
J.HOURLY_RT
J.empl_type

P.NAME                   &p.name
!Modified for Upgrade 9.0 GEX-AXG - Begin
!P.ORIG_HIRE_DT
PERINST.ORIG_HIRE_DT
!Modified for Upgrade 9.0 GEX-AXG - End
P.BIRTHDATE
P.SEX
P.ADDRESS1
P.ADDRESS2
P.CITY
P.STATE
P.POSTAL

EMP.HIRE_DT
EMP.TERMINATION_DT
EMP.BENEFIT_RCD_NBR

GEX_DEPT.DEPTID
GEX_DEPT.EFFDT
GEX_DEPT.SEQUENCE_NUMBER
GEX_DEPT.GEX_COMPANY_DIV_CD
  
  if $first_pass = 'Y'
     do create-filename-date
     let $first_pass = 'N'
     show '$x500_pay_end_dt: ' $x500_pay_end_dt
  end-if

  move &j.emplid to $emplid

  move &p.name    to $name
  let $name = RTRIM($name,' ')

  Do Get-Ded-Mtd
!  move &ded.ded_mtd to #ded_mtd
!  show 'Ded_Mtd: ' #ded_mtd

  if #ded_mtd = 0
     !Skip processing
  else

    if (&J.COMPANY = $hold_company) and (&J.EMPLID = $hold_emplid) 
    else
  
      let $name = rtrim(&P.NAME,' ')
      let $name = substr($name,1,30)

      do WT210-evaluate-deptid

      add 1 to #tot_empl_count

      add #ded_mtd to #ded_mtd_tot
!      show 'Ded_Mtd_Tot: ' #ded_mtd_tot
  
      do P600-Write-Detail-Report-Line    

      do P400-Write-Detail-Record
      let $rowfound = 'Y'
    end-if

  end-if

  let $hold_company = &J.COMPANY
  let $hold_emplid  = &J.EMPLID

!  show &j.emplid ' ' &j.company

FROM  PS_JOB          	J,
!      PS_JOB_LABOR      JL,                             GBD 12/30/2002
      PS_PERSONAL_DATA 	P,
      PS_EMPLOYMENT 	EMP,
      !Modified for Upgrade 9.0 GEX-AXG - Begin
      !PS_GEX_DEPT_TBL   GEX_DEPT
      PS_GEX_DEPT_TBL   GEX_DEPT,
      PS_PER_ORG_INST PERINST
      !Modified for Upgrade 9.0 GEX-AXG - End

WHERE P.EMPLID = J.EMPLID
 AND P.EMPLID =  PERINST.EMPLID 	!Added for Upgrade 9.0 GEX-AXG
 AND PERINST.ORG_INSTANCE_ERN  = J.EMPL_RCD	!GEX-MXT added for PER_ORG_INST join 
 AND [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
 AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
 AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
 AND [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
 AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]

 AND J.EFFDT  =
   		(SELECT MAX(EFFDT)
       		FROM PS_JOB
      		WHERE EMPLID    = J.EMPLID
       		  AND EMPL_RCD  = J.EMPL_RCD
!GBD 10/02/2003 Begin
!CWB 11/15/2003 BEGIN
!                  AND COMPANY   = J.COMPANY              !GBD 06/27/2003
!                  AND PAYGROUP  = J.PAYGROUP             !GBD 06/27/2003
                  AND COMPANY   = J.COMPANY              !CWB 11/15/2003
!                  AND PAYGROUP  = J.PAYGROUP             !CWB 06/07/2004

!CWB 11/15/2003 END
       		  AND EFFDT    <= $pay_end_dt)
 AND J.EFFSEQ =
    		(SELECT MAX(EFFSEQ)
       		FROM PS_JOB
      		WHERE EMPLID  = J.EMPLID
       		AND EMPL_RCD  = J.EMPL_RCD
!CWB 11/15/2003 BEGIN
!                AND COMPANY   = J.COMPANY                !GBD 06/27/2003
!                AND PAYGROUP  = J.PAYGROUP               !GBD 06/27/2003
                 AND COMPANY   = J.COMPANY               !CWB 11/15/2003
!                 AND PAYGROUP  = J.PAYGROUP              !CWB 06/07/2004
!CWB 11/15/2003 END
!GBD 10/02/2003 End
      		AND EFFDT     = J.EFFDT)

! GBD 12/30/2002 Begin
! AND JL.EMPLID    = J.EMPLID
! AND JL.EMPL_RCD  = J.EMPL_RCD
! AND JL.EFFDT  =
!   		(SELECT MAX(EFFDT)
!      		FROM PS_JOB_LABOR
!      		WHERE EMPLID    = JL.EMPLID
!  		AND EMPL_RCD    = JL.EMPL_RCD
!      		AND EFFDT      <= $pay_end_dt)
! AND JL.EFFSEQ =
!    		(SELECT MAX(EFFSEQ)
!      		FROM PS_JOB_LABOR
!      		WHERE EMPLID  = JL.EMPLID
!      		AND EMPL_RCD  = JL.EMPL_RCD
!      		AND EFFDT     = JL.EFFDT) 
! GBD 12/30/2002 End

 AND J.EMPLID	     = EMP.EMPLID
 AND J.EMPL_RCD      = EMP.EMPL_RCD
 AND GEX_DEPT.DEPTID = J.DEPTID

 AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]

 AND GEX_DEPT.EFFDT = (SELECT MAX(GEX_DEPT1.EFFDT) 
                       FROM PS_GEX_DEPT_TBL GEX_DEPT1
	  	       WHERE GEX_DEPT1.DEPTID = GEX_DEPT.DEPTID 
                       AND   GEX_DEPT1.EFFDT <= $pay_end_dt) 
 AND GEX_DEPT.SEQUENCE_NUMBER = (SELECT MAX(GEX_DEPT2.SEQUENCE_NUMBER)
                                 FROM PS_GEX_DEPT_TBL GEX_DEPT2
                                 WHERE GEX_DEPT2.DEPTID = GEX_DEPT.DEPTID
                                 AND GEX_DEPT2.EFFDT = GEX_DEPT.EFFDT)

ORDER BY [$X000_ORDER_BY_FILE]
					
end-SELECT

  if $rowfound = 'N'
    print '** NO DATA SELECTED FOR THIS REPORT RUN **'  (25,) center
  else
     do P450-Write-Trailer-Record
     close 1

     if #current-line > 55
        NEW-PAGE
     end-if

     print 'Report Totals:'  (+2,100)
     print #tot_empl_count    (0,123) EDIT 99,999
     print #ded_mtd_tot       (0,138) EDIT 999,999,999.99
  end-if

End-Procedure

!********************************************
Begin-Procedure Get-Ded-Mtd
!********************************************
  let #ded_mtd = 0
begin-select
DED.DED_MTD

  move &DED.DED_MTD to #ded_mtd

FROM PS_DEDUCTION_BAL DED
WHERE DED.EMPLID         = &J.EMPLID
  AND DED.COMPANY        = &J.COMPANY
  AND DED.BALANCE_ID     = 'CY'
  AND DED.BALANCE_YEAR   = $balance_year
  AND DED.BALANCE_QTR    = $balance_qtr
  AND DED.BALANCE_PERIOD = $balance_period
  AND DED.DEDCD = '5NEWYK'
! CJH - 02/17/2003 - no benefit_rcd_nbr join here since the dedcd is a general deduction
!       and general deductions do not have the correct benefit_rcd_nbr in ded balances
end-select

End-Procedure Get-Ded-Mtd

!*********************************************
begin-procedure WT210-evaluate-deptid
!*********************************************
#debug9 show 'WT210-evaluate-deptid'

evaluate &j.deptid
  when = '0054'
  when = '0055'
  when = '1840'
  when = '1841'
  when = '1842'
  when = '1843'
    let $deptid_insert = &j.deptid
    break
  when-other
    let $deptid_insert = substr(&j.location,2,4) 
    break	  
end-evaluate  

End-Procedure

!*********************************************************************
begin-procedure P300-Write-Header-Record

  let $rec_type = 'A'
  let $filler18 = ' '

  write 1 from $rec_type                 !Record Type
               $filler01                 !Space
               $remitter_id:9            !Remitter ID
               $filler01                 !Space
               $remitter_name:62         !Remitter Name
               $filler01                 !Space
               $pay_end:8                !Deduction Date yyyymmdd
               $filler01                 !Space
               $pay_end:8                !Billing Date yyyymmdd
               $filler18:18              !Spaces

end-procedure

!*********************************************************************
! Write Record Information to a file
!*********************************************************************
begin-procedure P400-Write-Detail-Record

  add 1 to #write_recs

  let $rec_type = 'D'
  let $term_ind = '  '
  let $policy_number = ' '
  let $filler39 = ' '

  let $sub_name = substr($name,1,25)

  if #ded_mtd >= 0
     let $amt_sign = '+'
  else
     let $amt_sign = '-'
     let #ded_mtd = abs(#ded_mtd)
  end-if
  move #ded_mtd    to $ded_mtd  999999.99
  Unstring $ded_mtd By '.' Into $ded_mtd1 $ded_mtd2
  let $ded_mtd = $ded_mtd1 || $ded_mtd2
  let $ded_mtd = rtrim($ded_mtd,' ')
  let $ded_mtd = LPAD($ded_mtd,9,' ')
!  show $ded_mtd 'test'

 !GEX-TLL 04/22/2008 HCM 9.0 Upgrade - Begin
  !do Get-Gex-Mapp-EmpIid ($emplid,$emplid_out)  !GEX_SEC_REENG 2015-04-29 Vahini Katta       
  do Get-Emp-Ssn (&J.EMPLID, $Ssn_Out)                
  let $filler11 = '00'   
  
  show '$rec_type='       $rec_type
  show '$filler01='       $filler01
  show '$filler11= '      $filler11
  show '$emplid_out='     $emplid_out
 !GEX-TLL 04/22/2008 HCM 9.0 Upgrade - End

  write 1 from $rec_type                 !Record Type
               $filler01                 !Space
               !$emplid:9                 !Emplid  !GEX-TLL 04/22/2008 Commented
               $filler11:2               !hardcode two '00' !GEX-TLL 04/22/2008 Added 
               !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
               !$emplid_out:7             !7 digit Emplid   !GEX-TLL 04/22/2008 Added
               $emplid:7
               !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
               $filler01:2               !Space
	       $sub_name:25              !Name
               $filler01                 !Space
	       $pay_end:8                !Deduction Date yyyymmdd
               $filler01                 !Space
               $ded_mtd:9                !Deduction Amount
               $amt_sign:1               !Deduction Amt Sign
               $filler01                 !Space
               $term_ind:2               !Termination Indicator
               $filler01                 !Space
               $policy_number:9          !Policy Number
               $Filler39:39              !Spaces
               
!GEX-TLL 04/22/2008 HCM 9.0 Upgrade - Begin
let $empl_rcd = &J.EMPL_RCD
write 2 from $Ssn_Out:9
	     ' ':1
	     $emplid_out:7
	     ' ':1
	     $empl_rcd:3
!GEX-TLL 04/22/2008 HCM 9.0 Upgrade - End


end-procedure

!*********************************************************************
! Write Trailer Record Information to a file
!*********************************************************************
begin-procedure P450-Write-Trailer-Record

  let $rec_type = 'Z'
  let $filler01 = ' '
  let $filler74 = ' '

  if #ded_mtd_tot >= 0
     let $total_ded_sign = '+'
  else
     let $total_ded_sign = '-'
     let #ded_mtd_tot = abs(#ded_mtd_tot)
  end-if

  do Format-Number(#write_recs,$write_recs,'BBBBBBBB999')
  do Format-Number(#ded_mtd_tot,$ded_mtd_tot,'BBBBBBB9.99')
  Unstring $ded_mtd_tot By '.' Into $ded_mtd_tot1 $ded_mtd_tot2
  let $ded_mtd_tot = $ded_mtd_tot1 || $ded_mtd_tot2
  let $ded_mtd_tot = rtrim($ded_mtd_tot,' ')
  let $ded_mtd_tot = LPAD($ded_mtd_tot,11,' ')

  write 1 from $rec_type                 !Record Type
               $filler01                 !Space
               $remitter_id:9            !Remitter ID
               $filler01                 !Space
               $write_recs:11            !Record Count
               $filler01                 !Space
               $ded_mtd_tot:11           !Total Deduction Amt
               $total_ded_sign:1         !Total Deduction Sign
               $filler74:74              !Spaces

end-procedure

!***********************************************************************
begin-procedure P001-Select-Pay-End-Dt
!***********************************************************************
begin-select loops=1
MAX(PC.PAY_END_DT)      &pay_end_dt
  move &pay_end_dt   to $pay_end_dt

FROM   PS_PAY_CALENDAR PC
WHERE  PC.PAY_END_DT <= $X000_WHERE_SELECT_ASOFDATE 
AND    PC.PAY_CONFIRM_RUN = 'Y'
end-select

begin-select
MIN(PC2.CHECK_DT)       &check_dt
  move &check_dt     to $check_dt

FROM PS_PAY_CALENDAR PC2
WHERE PC2.PAY_END_DT = $pay_end_dt
AND   PC2.PAY_CONFIRM_RUN = 'Y'
end-select

  display 'Last Confirmed Pay End Date: ' noline
  display $pay_end_dt
  display '                 Check Date: ' noline
  display $check_dt

end-procedure

!*********************************************
begin-procedure P600-Write-Detail-Report-Line
!*********************************************
#debug9 show  'P600-Write-Detail-Report-Line'

 if #current_line >= 55
    NEW-PAGE
 end-if
 !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
 !do Get-Gex-Mapp-EmpIid (&J.EMPLID,$emplid_out)             !GEX-TLL 04/22/2008 Added
 print &J.EMPLID               (+1,{#x000_col_emplid})     !GEX-TLL 04/22/2008 Commented
 !print $emplid_out              (+1,{#x000_col_emplid})     !GEX-TLL 04/22/2008 Added
 !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
 print $name                    (0,{#x000_col_name})
 print &J.COMPANY		(0,{#x000_col_company})
 print &J.DEPTID		(0,{#x000_col_deptid})
 print &J.UNION_CD		(0,{#x000_col_union_cd})
 print &J.EMPL_STATUS		(0,{#x000_col_empl_status})

 let $hire_dt = &EMP.HIRE_DT
 if rtrim($hire_dt,' ') = ''
 else
   let $year4 = '1' 
   do Format-DateTime(&EMP.HIRE_DT, $x600_emp_hire_dt,{DEFYMD}, '', '')
   let $hire_yy = substr($x600_emp_hire_dt,1,4)
   let $hire_mm = substr($x600_emp_hire_dt,6,2)
   let $hire_dd = substr($x600_emp_hire_dt,9,2)
   let $x600_emp_hire_dt = $hire_mm||'/'||$hire_dd||'/'||$hire_yy
   print $x600_emp_hire_dt 	(0,{#x000_col_hire_date})
 end-if

 let $termination_dt = &EMP.TERMINATION_DT
 if rtrim($termination_dt,' ') = ''
 else
   let $year4 = '1' 
   do Format-DateTime(&EMP.TERMINATION_DT, $x600_TERMINATION_DT,{DEFYMD}, '', '')
   let $term_yy = substr($x600_TERMINATION_DT,1,4)
   let $term_mm = substr($x600_TERMINATION_DT,6,2)
   let $term_dd = substr($x600_TERMINATION_DT,9,2)
   let $x600_TERMINATION_DT = $term_mm||'/'||$term_dd||'/'||$term_yy
   print $x600_TERMINATION_DT	(0,{#x000_col_termination_dt})
 end-if

 let $birthdate = &P.BIRTHDATE
 if rtrim($birthdate,' ') = ''
 else
   let $year4 = '1' 
   do Format-DateTime(&P.BIRTHDATE, $x600_BIRTHDATE,{DEFYMD}, '', '')
   let $birth_yy = substr($x600_BIRTHDATE,1,4)
   let $birth_mm = substr($x600_BIRTHDATE,6,2)
   let $birth_dd = substr($x600_BIRTHDATE,9,2)
   let $x600_BIRTHDATE = $birth_mm||'/'||$birth_dd||'/'||$birth_yy
   print $x600_BIRTHDATE	(0,{#x000_col_birth_dt})
 end-if
 do Get-Emp-Ssn (&J.EMPLID, $Ssn_Out)			     !GEX-TLL 04/22/2008 Added
 
 !do Get-Gex-Mapp-EmpIid (&J.EMPLID,$emplid_out)              !GEX-TLL 04/22/2008 Added !GEX_SEC_REENG 2015-04-29 Vahini Katta
 print &P.NAME       		(0,{#x000_col_name},30) 
 print &J.EMPLID         	(0,{#x000_col_emplid})       !GEX-TLL 04/22/2008 Commented !GEX_SEC_REENG 2015-04-29 Vahini Katta
 !print $emplid_out        	(0,{#x000_col_emplid})       	     !GEX-TLL 04/22/2008 Added !GEX_SEC_REENG 2015-04-29 Vahini Katta
 print &J.HOURLY_RT		(0,{#x000_col_hourly_rt})     EDIT  990.00
 print &J.empl_type             (0,{#x000_col_empl_type})
 
 print &DED.DED_MTD             (0,{#x000_col_ded_mtd})  EDIT  999,999,999.99
 print $Ssn_Out         	(0,{#x000_col_new_ssn})      !GEX-TLL 04/22/2008 Added

position (+1)

end-procedure

!*********************************************************************
begin-procedure P700-cd-bindir
!*********************************************************************
   let $cd_command_bindir = 'cd '||'$BINDIR'
   CALL SYSTEM USING $cd_command_bindir #sys_status
   if #sys_status <> 0
      let $cd_display_msg = 'Changing directory to /opt/psoft/hr751/'||$db_name||'/bin did not work'
      display $cd_display_msg
      display 'JOB failed'
      stop
   end-if

   do P750-new-filename
end-procedure

!*********************************************************************
begin-procedure P750-new-filename
!*********************************************************************
      let $cd_command_outgoing = 'cd '||'$PS_HOME/outgoing'
      CALL SYSTEM USING $cd_command_outgoing #sys_status
      if #sys_status <> 0
         let $cd_display_msg = 'ERROR - Changing directory to /opt/pshr/hr751/'||$db_name||'/outgoing did not work'
         display $cd_display_msg
	 display 'JOB failed'
	 stop
      end-if

      let $copy_command = 'cp $PS_HOME/outgoing/gexpy651.dat $PS_HOME/outgoing/py651.dat' 
      show '$copy_command: ' $copy_command
      CALL SYSTEM USING $copy_command #sys_status
      if #sys_status <> 0
         let $copy_display_msg = 'ERROR - copy to new filename did not work'
         display $copy_display_msg
	 display 'JOB failed'
	 stop
      end-if

      let $cd_command_mobius = 'cd '||'$MOBIUS_PROD'
      CALL SYSTEM USING $cd_command_mobius #sys_status
      if #sys_status <> 0
         let $cd_display_msg = 'ERROR - Changing directory to $MOBIUS_PROD did not work'
         display $cd_display_msg
	 display 'JOB failed'
	 stop
      end-if      

      let $copy_command = 'cp $MOBIUS_PROD/gexpy651_'||$prcs_process_instance||'.lis $MOBIUS_PROD/py651.lis'
      show '$copy_command: ' $copy_command
      CALL SYSTEM USING $copy_command #sys_status
      if #sys_status <> 0
         let $copy_display_msg = 'ERROR - copy to new reportname did not work'
         display $copy_display_msg
	 display 'JOB failed'
	 stop
      end-if

end-procedure

!*********************************************************************
begin-procedure P800-mail-the-file
!*********************************************************************

!let $UNIX_MAIL_COMMAND = 'mailer.pl "carole_a_eng@newyorklife.com, '||
!'sherry_peterson@newyorklife.com, martha_sussman@newyorklife.com, '||
!'jackie_brahee@newyorklife.com, debbie.roenigk@gianteagle.com, '||
!'darcey.ferguson@gianteagle.com" "New York Life Insurance Company Deduction File" '||
!'"$BINDIR/gexpy651_msg.sh" $PS_HOME/outgoing/py651.dat $MOBIUS_PROD/py651.lis'

let $UNIX_MAIL_COMMAND = 'mailer.pl "PSHR_NYL_Life@gianteagle.com" '||
'"New York Life Insurance Company Deduction File" '||
'"$BINDIR/gexpy651_msg.sh" $PS_HOME/outgoing/py651.dat $MOBIUS_PROD/py651.lis'

   show $UNIX_MAIL_COMMAND

   CALL SYSTEM USING $UNIX_MAIL_COMMAND #system_status

   if #system_status <> 0
      add 1 to #errorcount
      display 'eMail of py651.dat and py651.lis  failed'
      STOP
   else
      display 'py651.dat and py651.lis eMailed to New York Life Insurance'
   end-if
end-procedure

!*********************************************************************
!Retrieves the Company Description from the database
!*********************************************************************
begin-procedure get-company-desc

move ' ' to $company_desc
begin-select 
CMP.DESCR
  move &CMP.DESCR to $company_Desc
from PS_COMPANY_TBL CMP
WHERE CMP.COMPANY = $COMPANY
  AND CMP.EFFDT =
      (SELECT MAX(EFFDT)
	 FROM PS_COMPANY_TBL
	WHERE COMPANY = $COMPANY)
end-select
end-procedure
!*********************************************************************

Begin-procedure create-filename-date

!convert the native dates to yyyymmdd format for the ASCII output file name
 let $year4 = '1' 
 do Format-DateTime($pay_end_dt, $x500_pay_end_dt,{DEFYMD}, '', '')

end-procedure

!***********************************************************************
begin-procedure SQL-Error-Found($Proc_Name)
!***********************************************************************
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
end-procedure

!***********************************************************************
 
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
#Include 'getdednm.sqc'  !Get-Deduction-Name procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'reset.sqc'     !Reset 
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls
#include 'gexxx951.sqc'  
#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'gexdept.sqc'   !Get Original dept
#include 'rotname3.sqc'  !Split name into its components.
#Include 'getgeid.sqc'   !Get 7 digit Emplid              !GEX-TLL 04/22/2008 Added
