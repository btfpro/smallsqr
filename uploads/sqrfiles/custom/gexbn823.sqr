!***********************************************************************
! GEXBN823:  Employees that are not active but with hours or earnings  *
!            reported for a specific pay period.                       *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
! Narrative:            This report will generate a list of employees, *
!                       that are not active but have some hours or     *
!                       earnings reported for a specific pay period.   *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           pay_calendar                                   *
!                       pay_oth_earns                                  *
!                       pay_earnings                                   *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                                                                      *
! Written by:           Sreeni Kutam                                   *
!                                                                      *
! Normally Run:         Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         As Of Date                                   *
!                         Company/Paygroup(s)                          *
!                         Employee Status(s) to Exclude                *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! SXK       12/21/98    Initial Creation                               *
!                                                                      *
! JDH       04/15/99    Modified report to sort by company, paygroup,  *
!                         deptid, name.                                *
!                                                                      *
! SXK       10/20/99    Modified to have union cd from job_labor       *
!                                                                      *
! AXL       05/08/2002  Added logic to determine the correct effdt     *
!                       for the start of the non-active empl status    *
! GBD       07/15/2002  Added Fieldvalue to effective dated selection  *
!                       of the Load-Lookup procedure.                  *
! PSR       08/12/2002  Modified to get union_cd from job              * 
!                       - Upgrade 8.3                                  *
! MXT       10/12/2007  HCM 9.0 upgrade and ITG# 44399 changes         *
! KXY 	    01/29/2009	To pull DESCR field from POSITION_DATA for     *
!			JOBTITLE, instead of JOBCODE_TBL.DESCR 	       *
! GEX_SEC_REENG 2015-07-02 Vahini Katta                                *
! Commented out the rule hint                                          *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
!#Include 'setup01.sqc'   !Printer and Page-Size Initialization	!GEX-MXT commented for HCM 9.0 Upgrade
#Include 'setup10.sqc'						!GEX-MXT added for HCM 9.0 Upgrade

#define #column1      1
#define #column2     16
!GEX-MXT added for HCM 9.0 UPgrade-Begin
#define #column2a    50
#define #column3     81
#define #column4     96
!#define #column5    108
!#define #column5a   119
#define #column5a   108
#define #column5    124
#define #column6    135
#define #column7    150
#define #column8    162
!GEX-MXT added for HCM 9.0 UPgrade-End

!GEX-MXT commented for HCM 9.0 UPgrade-Begin
!#define #column3     50
!#define #column4     61
!#define #column5     76
!#define #column6     86
!#define #column7    101
!#define #column8    116
!GEX-MXT commented for HCM 9.0 UPgrade-end

#define #column1_d    1
#define #column2_d   16

!GEX-MXT added for HCM 9.0 UPgrade-Begin
#define #column2_da   50
#define #column3_d    81
#define #column4_d    96
!#define #column5_d   105
!#define #column5_da  119
#define #column5_da  108
#define #column5_d   121
#define #column6_d   134
#define #column7_d   150
#define #column8_d   162
!GEX-MXT added for HCM 9.0 UPgrade-End

!GEX-MXT commented for HCM 9.0 UPgrade-Begin
!#define #column3_d   51
!#define #column4_d   63
!#define #column5_d   73
!#define #column6_d   85
!#define #column7_d   99
!#define #column8_d  115
!GEX-MXT commented for HCM 9.0 UPgrade-end

!***********************************************************************
Begin-Report
!***********************************************************************
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report

!***********************************************************************
Begin-Heading 9
!***********************************************************************
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg06.sqc'

  If $Deptid <> $priorDeptid
    Do Get-Department-Name
    Let $priorDeptid = $Deptid
  End-If

  Print 'Deptid'                 (6,1)
  Print $Deptid                  (6,13)
  Print $DeptName                (6,+1)

  Print $ReportTitle2            (3,)  Center

  Print 'EMPLOYEE ID'            (+6,{#column1})
  Print 'NAME'                   (+0,{#column2})
  Print 'JOBTITLE'               (+0,{#column2a})	!GEX-MXT added for HCM 9.0 UPgrade
  Print 'JOBCODE'                (+0,{#column3})
  Print 'UNION CD'               (+0,{#column4})
  Print 'EARNINGS_CD'            (+0,{#column5a})	!GEX-MXT added for HCM 9.0 UPgrade
  Print 'HOURS'                  (+0,{#column5})
  !Print 'EARNINGS_CD'            (+0,{#column5a})	!GEX-MXT added for HCM 9.0 UPgrade
  Print 'EARNINGS'               (+0,{#column6})
  Print 'STATUS'                 (+0,{#column7})
  Print 'STATUS'                 (-1,{#column8})
  Print 'EFFDT'                  (+1,{#column8})
End-Heading

!***********************************************************************
Begin-Procedure P100-Initialization
!***********************************************************************
#debug9 Show 'P100-Initialization'
  !Do Set-Optimizer-Goal ! GEX_SEC_REENG 2015-04-29 Vahini Katta

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      = 'GEXBN823'
  Let $ReportTitle   = 'EMPLOYEES THAT ARE NOT ACTIVE '
  Let $ReportTitle2  = 'BUT WITH HOURS/EARNINGS REPORTED'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle $ReportTitle2
  Show ' '
  Show 'Report Began:'
  Show '  Date = ' $ReportDate
  Show '  Time = ' $ReportTime

  Let $GEXXX901_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
  Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  do get-pay-end-dt
  Do Format-DateTime($pay_end_dt, $X000_Pay_End_Dt, {DEFDATE}, '', '')

  Do Format-DateTime($AsOfDate, $X000_Report_Heading_AsOfDate, {DEFDATE}, '', '')
  Let $X000_Order_By = 'Company, Paygroup, Deptid, Name'

  Do P130-Get-Xlat-Lookup
  Do P140-Print-Cover-Page
End-Procedure

! GEX_SEC_REENG 2015-07-02 Vahini Katta Begins
!***********************************************************************
!begin-procedure Set-Optimizer-Goal
!***********************************************************************
!  Begin-SQL
    !Alter Session Set OPTIMIZER_GOAL=RULE;	!GEX-MXT commented for HCM 9.0 Upgrade
!    Alter Session Set OPTIMIZER_MODE=RULE;	!GEX-MXT added for HCM 9.0 Upgrade
!  End-SQL
!end-procedure
! GEX_SEC_REENG 2015-07-02 Vahini Katta Ends

!***********************************************************************
Begin-Procedure P110-SQRW-Run-Controls
!***********************************************************************
#debug9 Show 'P110-SQRW-Run-Controls'
  Do Ask-As-Of-Date

  Display 'Enter Company/Paygroup or leave blank to exit.'
  While 1=1
    Input $In-Company Maxlen=3 'Company'
    Uppercase $In-Company
    If Rtrim($In-Company, ' ') = ''
      Break
    Else
      Input $In-Paygroup Maxlen=3 'Paygroup'
      Uppercase $In-Paygroup
      If Rtrim($In-Paygroup, ' ') = ''
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''')'
      Else
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''' And ' || $GEXXX901_Paygroup_Alias || ' = '''  || $In-Paygroup || ''')'
      End-If
      Add 1 To #GEX_RC_PAYGROUP_ROWS
      If #GEX_RC_PAYGROUP_ROWS = 1
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While

  If #GEX_RC_PAYGROUP_ROWS = 0
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ')'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
  End-If

  Let $EmplStatusString = ''''
  Display 'Enter Employee Status to exclude or leave blank to exit.'
  While 1=1
    Input $In-EmplStatus Maxlen=1 'Employee Status'
    Uppercase $In-EmplStatus
    If Rtrim($In-EmplStatus, ' ') = ''
      Concat '''' With $EmplStatusString
      Break
    End-If
    If $EmplStatusString <> ''''
      Concat ''',''' With $EmplStatusString
    End-If
    Concat $In-EmplStatus With $EmplStatusString
  End-While

  If $EmplStatusString = ''''''
    Let $GEXXX903_EXCLUDE_EMP_STAT_CRITERIA = '1=1'
    Let $GEXXX903_EXCLUDE_EMP_STAT_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX903_EXCLUDE_EMP_STAT_CRITERIA = $GEXXX903_Emp_Stat_Alias || ' Not In (' || $EmplStatusString || ')'
    Let $GEXXX903_EXCLUDE_EMP_STAT_DISPLAY_CRITERIA = $GEXXX903_EXCLUDE_EMP_STAT_CRITERIA
  End-If
End-Procedure

!***********************************************************************
Begin-Procedure P120-Process-Scheduler-Run-Controls
!***********************************************************************
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXRCBN1-SELECT-PARAMETERS      !gexxx920.sqc

  Let $AsOfDate = &GEX_RC_BEN.AsOfDate
  If Rtrim (&GEX_RC_BEN.AsOfDate, ' ') = ''
    Let $AsOfDate = $AsOfToday
  End-If

  Do GEXXX901-Select-Company-Paygroup-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters
End-Procedure


!*********************************************************************
!Gets the pay end date of the previous pay cycle.
!*********************************************************************
Begin-Procedure get-pay-end-dt

move 'N' to $found

begin-select on-error=P260-sql-error-found('Get-Pay-End-Dt')
MAX(PAY.PAY_END_DT) &PAY.PAY_END_DT

  move &PAY.PAY_END_DT to $pay_end_Dt
  move $pay_end_dt To $PayEndDate
  move 'Y' to $found
  exit-select

FROM   PS_PAY_CALENDAR PAY

WHERE  PAY.PAY_END_DT     <= $AsOfDate
AND    PAY.PAY_SHEETS_RUN  = 'Y'
end-select

if $found = 'N'
   display 'No Previous Pay Cycle as of:' noline
   display $AsOfDate
   stop
end-if
end-procedure

!***********************************************************************
begin-procedure P130-Get-Xlat-Lookup
!***********************************************************************
#debug9 Show 'P130-Get-Xlat-Lookup'

  Let $Where = '     x.fieldname   = ''EMPL_STATUS''' ||
               ' And x.eff_status  = ''A''' ||
              ! ' And x.language_cd = ''ENG''' ||	!GEX-MXT commented for HCM Upgrade
               ' And x.effdt       = (Select Max(effdt)' ||
               '                     ! From   xlattable x1' ||				!GEX-MXT commented for HCM Upgrade
                			From   PSXLATITEM x1' ||			!GEX-MXT added for HCM Upgrade
               '                      Where  x1.fieldname    = x.fieldname' ||
!GBD 07/15/2002 Begin
!               '                      And    x1.language_cd  = ''ENG''' ||		!GEX-MXT commented for HCM Upgrade
!               '                      And    x1.language_cd  = x.language_cd' ||	!GEX-MXT commented for HCM Upgrade
               '                      And    x1.fieldvalue  = x.fieldvalue' ||
!GBD 07/15/2002 End
               '                      And    x1.effdt       <= ''' || $pay_end_dt || '''' ||
               '                      And    x1.eff_status   = ''A'')'

  Load-Lookup
    Name=XlatLookup
    Rows=11
!    Table='XLATTABLE X'		!GEX-MXT commented for HCM Upgrade
    Table='PSXLATITEM X'		!GEX-MXT added for HCM Upgrade
    Key='X.FIELDVALUE'
    Return_Value='X.XLATSHORTNAME'
    Where=$Where
    Quiet
End-Procedure

!***********************************************************************
begin-procedure P140-Print-Cover-Page
!***********************************************************************
#debug9 Show 'P140-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX903_EXCLUDE_EMP_STAT_DISPLAY_CRITERIA = '          (+2,5)
  Print $GEXXX903_EXCLUDE_EMP_STAT_DISPLAY_CRITERIA               (0,+2)
  Print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = '  (+2,5)
  Print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA       (0,+2)
  Print 'As Of Date :'                                            (+2,5)
  Print $X000_Report_Heading_AsOfDate                             (0,+2)
  Print 'Pay End Date:'                                           (+2,5)
  Print $X000_Pay_End_Dt                                          (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
End-Procedure

!***********************************************************************
Begin-Procedure P200-Main-Process
!***********************************************************************
#debug9 Show 'P200-Main-Process'

  Let $Data-Found-flag = 'N'

Begin-Select On-Error=P260-SQL-Error-Found('P200-Main-Process')
j.company    ()  On-Break  Level=1
                           Print=Never

j.paygroup   ()  On-Break  Level=2
                           Print=Never

j.deptid     ()  On-Break  Level=3
                           Print=Never
                           After=P210-New-Page

pd.name      ()  On-Break  Level=4
                           Print=Never

j.emplid     ()  On-Break  Level=5
                           Print=Never
                           After=P230-EE-Break
J.POSITION_NBR		!VENDKXY added for ITG 56784
j.empl_rcd	!AXL 5/8/2002 add for new proc below
j.empl_status
j.jobcode
j.effdt
!SXK 10/20/99 Begin
!em.union_cd
J.UNION_CD
!SXK 10/20/99 End
!JT.DESCR		!GEX-MXT added for HCM Upgrade	 !Vendkxy commented for ITG 56784
pe.off_cycle
pe.page_num
pe.line_num
pe.addl_nbr
pe.reg_hrs + pe.reg_earn_hrs + pe.ot_hrs &hours
pe.reg_earns + pe.reg_hrly_earns + pe.ot_hrly_earns &earns

  Let $company     = &j.company
  Let $paygroup    = &j.paygroup
  Let $deptid      = &j.deptid
  Let $name        = &pd.name
  Let $emplid      = &j.emplid
  Let $jobcode     = &j.jobcode
  !Let $jobtitle    =  &JT.DESCR		!GEX-MXT added for HCM Upgrade !VENDKXY Commented the code for ITG 56784
!VENDKXY added the code for ITG 56784
  Let $AsOfDate = $PAY_END_DT
  Let $Position_Nbr= &j.position_Nbr  
  DO Get-Job-Title
  DO Get-Position-Title
 IF $PosName = ' '
  Let $jobtitle    =  $JobTitle	
 ELSE
  Let $jobtitle = $PosName 
 END-IF
!VENDKXY added the code for ITG 56784  
  !SXK 10/20/1999 Begin
  !Let $union_cd    = &em.union_cd
  Let $union_cd    = &J.UNION_CD
  !SXK 10/20/1999 end

  do get-nonactive-begin-row
  if $nonactive_found = 'Y'
     Let $empl_status = &job.empl_status
     Let $effdt       = &job.effdt
  else
     Let $empl_status = &j.empl_status
     Let $effdt       = &j.effdt 
  end-if

  Add &hours To #hours
  Add &earns To #earns

  Do Pay-Oth-Earns

From   ps_pay_Earnings   pe,
       ps_personal_data  pd,
!SXK 10/20/1999 Begin
!       ps_employment     em,
!SXK 10/20/1999 End
       ps_job            j
      ! ,PS_JOBCODE_TBL	JT	!GEX-MXT added for HCM Upgrade   !Vendkxy commented for ITG 56784
       
Where  j.effdt           =
      (Select Max(effdt)
       From   ps_job
       Where  emplid     = j.emplid
       And    empl_rcd  = j.empl_rcd
       And    effdt     <= $pay_end_dt)

And    j.effseq          =
      (Select Max(effseq)
       From   ps_job
       Where  emplid     = j.emplid
       And    empl_rcd  = j.empl_rcd
       And    effdt      = j.effdt)

And    pd.emplid         = j.emplid
And    pe.company        = j.company
And    pe.paygroup       = j.paygroup
And    pe.pay_end_dt     = $pay_end_dt
And    pe.emplid         = j.emplid
And    pe.empl_rcd      = j.empl_rcd
!GEX-MXT added for HCM Upgrade-Begin
!Vendkxy commented for ITG 56784
!And    JT.SETID          = J.SETID_JOBCODE		
!And    JT.JOBCODE        = J.JOBCODE
!AND    JT.EFFDT          = (SELECT MAX(EFFDT) FROM PS_JOBCODE_TBL  
!			    WHERE JOBCODE = JT.JOBCODE
!			    AND EFFDT <=$pay_end_dt)
!Vendkxy commented for ITG 56784 		    
!GEX-MXT added for HCM Upgrade-End
And   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
And   [$GEXXX903_EXCLUDE_EMP_STAT_CRITERIA]
!and rownum < 500!testing Manish
Order By j.company, j.paygroup, j.deptid, pd.name, j.emplid
End-Select
End-Procedure


!AXL 5/8/2002 New Proc - Begin
!***********************************************************************
Begin-Procedure Get-Nonactive-Begin-Row
!***********************************************************************
#debug9 Show 'Get-Nonactive-Begin-Row'
   Let $nonactive_found = 'N'
Begin-Select
JOB.EFFDT
JOB.EMPL_STATUS

   Let $nonactive_found 	= 'Y'
           
FROM   PS_JOB JOB

WHERE  JOB.EMPLID       = &J.EMPLID
AND    JOB.EMPL_RCD    = &J.EMPL_RCD
AND    JOB.EFFDT        = (SELECT MIN(EFFDT) FROM   PS_JOB
       		WHERE  EMPLID     = JOB.EMPLID
       		AND    EMPL_RCD  = JOB.EMPL_RCD
                AND    EMPL_STATUS = &J.EMPL_STATUS
	        AND EFFDT >				
                         (Select Max(effdt)
                          From   ps_job
                          Where  emplid      = job.emplid
                          And    empl_rcd   = job.empl_rcd
                          And    effdt       <= &J.EFFDT
                          AND    empl_status <> &J.EMPL_STATUS ) )
AND    JOB.EFFSEQ       = (SELECT MAX(EFFSEQ)  FROM   PS_JOB
       		WHERE  EMPLID     = JOB.EMPLID
       		AND    EMPL_RCD  = JOB.EMPL_RCD
      		AND    EFFDT      = JOB.EFFDT)

End-Select
End-Procedure

!AXL 5/8/2002 New Proc - end

!***********************************************************************
Begin-Procedure Pay-Oth-Earns
!***********************************************************************
#debug9 Show 'Pay-Oth-Earns'
Begin-Select
poe.oth_hrs
poe.oth_earns
poe.erncd		!GEX-MXT ADDED FOR HCM 9.0 UPGRADE

  Add &poe.oth_hrs   To #hours
  Add &poe.oth_earns To #earns
  LET $Earning_cd = &poe.erncd		!GEX-MXT ADDED FOR HCM 9.0 UPGRADE

From   ps_pay_oth_earns  poe

Where  poe.company    = &j.company
And    poe.paygroup   = &j.paygroup
And    poe.pay_end_dt = $pay_end_dt
And    poe.off_cycle  = &pe.off_cycle
And    poe.page_num      = &pe.page_num
And    poe.line_num      = &pe.line_num
And    poe.addl_nbr      = &pe.addl_nbr
End-Select
End-Procedure

!***********************************************************************
Begin-Procedure P210-New-Page
!***********************************************************************
#debug9 Show 'P210-New-Page'
  If $OK-To-Advance-Page = 'Y'
    New-Page
    Let $OK-To-Advance-Page = 'N'
  End-If
End-Procedure

!***********************************************************************
Begin-Procedure P230-EE-Break
!***********************************************************************
#debug9 Show 'P230-EE-Break'

  If #earns != 0 Or #hours != 0
    Let $Data-Found-Flag = 'Y'
    Let $OK-To-Advance-Page = 'Y'
    Do P240-Print-Record
    Let #hours = 0
    Let #earns = 0
  End-If
End-Procedure

!***********************************************************************
Begin-Procedure P240-Print-Record
!***********************************************************************
#debug9 Show 'P240-Print-Record'
  Do Format-DateTime($effdt, $eff_dt, {DEFDATE}, '', '')

  Lookup XlatLookup $empl_status $status

  Print $emplid          (+1,{#column1_d})   
  Print $name            (+0,{#column2_d},30)
  !GEX-MXT commented for HCM 9.0 UPgrade-Begin
  !Print $jobcode         (+0,{#column3_d})
  !Print $union_cd        (+0,{#column4_d})
  !Print #Hours           (+0,{#column5_d})   Edit 9,990.99
  !Print #Earns           (+0,{#column6_d})   Edit 99,990.99
  !Print $status          (+0,{#column7_d})
  !Print $eff_dt          (+0,{#column8_d})
  !GEX-MXT commented for HCM 9.0 UPgrade-End
  
  !GEX-MXT added for HCM 9.0 UPgrade-Begin
  Print $jobtitle        (+0,{#column2_da},30)
  Print $jobcode         (+0,{#column3_d})
  Print $union_cd        (+0,{#column4_d})
  Print $Earning_cd      (+0,{#column5_da})	
  Print #Hours           (+0,{#column5_d})   Edit 9,990.99
  !Print $Earning_cd      (+0,{#column5_da}) 
  Print #Earns           (+0,{#column6_d})   Edit 99,990.99
  Print $status          (+0,{#column7_d})
  Print $eff_dt          (+0,{#column8_d})
  !GEX-MXT added for HCM 9.0 UPgrade-End

  Add 1 To #recs-printed
End-Procedure

!***********************************************************************
Begin-Procedure P260-SQL-Error-Found($Proc_Name) 
!***********************************************************************
#debug9 Show 'P260-SQL-Error-Found'
  Display 'SQL Error in ' 
  Display $Proc_Name 
  Display $_sql-error
  Display 'sql-status:' 
  Display #_sql-status 
  stop
End-Procedure

!***********************************************************************
Begin-Procedure P300-Finalization
!***********************************************************************
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc
  Do Get-Current-DateTime    !curdttim.sqc

  Show ' '
  Show 'Report Ended:'
  Show '  Date = ' $ReportDate
  Show '  Time = ' $ReportTime
  Show ' '
  Show 'Successful end of report'

End-Procedure

#include 'askaod.sqc'    !Ask user for $AsOfDate
#include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'getpgdta.sqc'  !Get-Paygroup-Data procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'gexxx920.sqc'  !Get ben single row run control
#include 'gexxx901.sqc'  
#include 'gexxx903.sqc'  
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#Include 'getposnm.sqc'   ! get position data title description !Vendkxy Added for ITG 56784
#include 'getjobtl.sqc'  !Get-Job-Title procedure  !Vendkxy Added for ITG 56784