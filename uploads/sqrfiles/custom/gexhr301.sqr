!***************************************************************************************
! GEXHR301:         EMPLOYEE DATA SPREADSHEET FOR EVP                                  * 
!                   Employee promotion data                                            *
!***************************************************************************************
!                                                                                      *
!               Confidentiality Information:                                           *
!                                                                                      *
! This module is the confidential and proprietary information of                       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted                 *
! in any form, by any means, in whole or in part, nor is it to be used                 *
! for any purpose other than that for which it is expressly provided                   *
! without the written permission of Giant Eagle.                                       *
!                                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved                         *
!                                                                                      *
!***************************************************************************************
!                                                                                      *        
! GEXhr301 :            EMPLOYEE PROMOTION DATA SHEET FOR EVP                          *
!                                                                                      *        
! Narrative:                                                                           * 
!                                                                                      * 
!                                                                                      *  
! SQL Tables:           PS_GEX_DEPT_TBL				                       *
!                       PS_JOB                                                         *
!                       PS_NAMES                                                       *
!                       PS_EMPLOYMENT				                       *   
!			PS_GEX_EMPLID_MAPP                                             *
!                                                                                      *
! Written by:           Carl Buckrop                                                   *       
!                                                                                      *
! Normally Run:         Weekly                                                         *
!                                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                                              *
!                         Company Division Code                                        *
!                         Deptid                                                       *
!                         Employee Status                                              *
!                         Account Code                                                 *
!                         As Of Date                                                   *
!                                                                                      *
!***************************************************************************************
!                         MODIFICATION HISTORY                                         *
!***************************************************************************************
! CSR        INITIALS     DATE         DESCRIPTION OF THE CHANGE                       *
!***************************************************************************************
!                                                                                      *
!            ISDVCWB      02/22/2007   New program                                     *
!                                                                                      *
! ITG 40111  VENDSXN      12/30/2007   EVP Metrics - Promotion Rates across the        *
!                                      organization.                                   *
!            GEX-MXT      01/17/2008   HCM Upgrade 9.0                                 *
!            GEX-MXT      03/24/2008   Fixed for REHIRE DT issue in 9.0                *
!	     GEX-TLL	  03/25/2008   HCM 9.0 Upgrade 				       *
!	     GEX-TLL	  04/09/2008   HCM 9.0 Upgrade 				       *
!            ISDVASS      04/09/2008   used $ASOFDATE instead of sysdate to pull rehire_dt*
!                                      from custom sqc                                 *
!	     GEX-TLL      05/02/2008   modified the sqr to pull action descrs          *
!				       from ps_action_tbl   			       *
! ITG 60305  GEX-SXP      05/12/2009   Update Sqr to retrieve JobTitle from Position_Data
! ITG #94304 GEX ISDVNPK 03/01/2011    Added Company MGC.                             *
! GEX_SEC_REENG TCSXSSS  05/11/2015    Changes related to gex_emplid_mapp/7 digit emplid*
!***************************************************************************************
                                                                                                 
                                                                                                 
#include 'setenv.sqc' !Set environment                                                           
#include 'setup02.sqc'

Begin-Heading 6
#debug9 Show 'Begin-Heading'
!#Include 'stdhdg01.sqc'  
  Do GEXXX951-Select-Oracle-Instance        

  print 'Oracle DB:'                (1,1)   
  print $GEXXX951_Oracle_Instance   (1,13)  

  print '            '    (1,1)
  !print 'PeopleSoft HRMS 8.3'      ()          center	!GEX-MXT commented for HCM Upgrade 9.0
  print 'PeopleSoft HRMS 9.0'      ()          center	!GEX-MXT added for HCM Upgrade 9.0
  
  print 'Report ID:  '    (+1,1)
  print $ReportID         (,13)
  uppercase $ReportTitle
  print $ReportTitle      ()          center
  let #RptCol = {ColR} - 2
  page-number             (0,#RptCol)  'Page No.  '
  
 
  
  If $GEX_RC_PAY.YES_NO_FLAG ='Y' 
    let $out1 = 'Employees with Action Dates ( of Hire/Rehire, Terminations ) from ' || $begin_dt_hdr || ' to ' || $end_dt_hdr
   Else
    let $out1 = 'Full Load Data File'   
  End-If  
  print $out1 () center
  
  print 'Run Date '       (+1,#RptCol)
  print $ReportDate       ()
  
  print 'Run Time '       (+1,#RptCol)
  print $ReportTime       ()

  print 'SSN(last 4 digits)' (+2,5 )   !  10908 ISDVSRC    05/11/05     
  print 'LastName          ' (0, 25)
  print 'Region            ' (0, 42)
  print 'Location          ' (0, 55)                            
  print 'EMPLID            ' (0, 85)
  
End-heading

!***********************************************************************************
Begin-Report
!***********************************************************************************
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P400-Fetch-Report-Data
  Do P300-Finalization
End-Report

!***********************************************************************************
Begin-Procedure P100-Initialization
!***********************************************************************************
#debug9 Show 'P100-Initialization'
  let $First = 'Y'
 
  Let $year4 = '1'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXHR301'
 
  Let $ReportTitle   =   'EMPLOYEE PROMOTION DATA FOR EVP'
 
  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime

  encode '<009>' into $tab  
  encode '<39>' into $Quote
  Let $delim = $tab
  Let $blank = ' '

  Let $GEXXX900_Company_Alias  = 'j.company'
  Let $GEXXX902_Deptid_Alias   = 'j.deptid'
  Let $GEXXX903_Emp_Stat_Alias = 'j.empl_status'

!-------------------------------------------------------------------------------------------------------
!-------------------------------------------------------------------------------------------------------
  If $prcs_process_instance = ''
    Do Ask-As-Of-Date
    
	    Input $yes_no_flag Maxlen=1 'Date Range Y/N? If N, then a full load file will be run.'
	    Uppercase $yes_no_flag
	   
	    
	    If $yes_no_flag = 'Y' 
	      Input $fromdate Maxlen=10 'MM/DD/YYYY, From date.' 
	      
	      If $fromdate = ''
                let $from_dt = '01-JAN-1901'
                let $thru_dt = $asofdate 
	      Else    
	        Input $thrudate Maxlen=10 'MM/DD/YYYY, Through date.'
                do format-datetime($fromdate,$from_dt,{DEFMDY},'','NATIVE') 
                do format-datetime($thrudate,$thru_dt,{DEFMDY},'','NATIVE') 
	      End-If
            else   
                let $from_dt = '01-JAN-1901'
                let $thru_dt = $asofdate 
            end-if    
            Do convert-to-dtu-date($from_dt,$from_dt_dtu)
            Do convert-to-dtu-date($thru_dt,$thru_dt_dtu)


	  !----------------------------------------------------
	  Let $CompanyString = ''''
	  Display 'Enter Company or leave blank to exit.'
	  
	  While 1=1
	    Input $In-Company Maxlen=3 'Company'
	    
	    Uppercase $In-Company
	    
	    If Rtrim($In-Company, ' ') = ''
	      Concat '''' With $CompanyString
	      Break
	    End-If
	    
	    If $CompanyString <> ''''
	      Concat ''',''' With $CompanyString
	    End-If
	    Concat $In-Company With $CompanyString
	  End-While
	
	  If $CompanyString = ''''''
	    Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = '1=1'
	    Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA = 'ALL'
	    
	    Let $GEXXX900_INCLUDE_COMPANY_CRITERIAx = '1=1'			!ISDVSRC 03/29/05
	    Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIAx = 'ALL'		!ISDVSRC 03/29/05
	    
	    
	  Else
	    Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = $GEXXX900_Company_Alias || ' In (' || $CompanyString || ')'
	    Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA = $GEXXX900_INCLUDE_COMPANY_CRITERIA
	    
	    Let $GEXXX900_INCLUDE_COMPANY_CRITERIAx = $GEXXX900_Company_Aliasx || ' In (' || $CompanyString || ')'	!ISDVSRC 03/29/05
	    Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIAx = $GEXXX900_INCLUDE_COMPANY_CRITERIAx			!ISDVSRC 03/29/05

	  End-If

	!----------------------------------------------------  	 
  	 Let $DeptIDString = ''''
  	 Display 'Enter DeptID or leave blank to exit.'
	  While 1=1
	    Input $In-DeptID Maxlen=10 'DeptID'
	    Uppercase $In-DeptID
	    If Rtrim($In-DeptID, ' ') = ''
	      Concat '''' With $DeptIDString
	      Break
	    End-If
	    If $DeptIDString <> ''''
	      Concat ''',''' With $DeptIDString
	    End-If
	    Concat $In-DeptID With $DeptIDString
	  End-While
	
	  If $DeptIDString = ''''''
	    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
	    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
	  Else
	    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' In (' || $DeptIDString || ')'
	    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_INCLUDE_DEPTID_CRITERIA
	  End-If

	!----------------------------------------------------

	  Let $EmplStatusString = ''''

	  Display 'Enter Employee Status or leave blank to exit.'
	  While 1=1
	    Input $In-EmplStatus Maxlen=1 'Employee Status'
	    Uppercase $In-EmplStatus
	    If Rtrim($In-EmplStatus, ' ') = ''
	      Concat '''' With $EmplStatusString
	      Break
	    End-If
	    If $EmplStatusString <> ''''
	      Concat ''',''' With $EmplStatusString
	    End-If
	    Concat $In-EmplStatus With $EmplStatusString
	  End-While
	
	  If $EmplStatusString = ''''''
	    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = '1=1'
	    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = 'ALL'
	    
	    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = '1=1'		!ISDVSRC 03/29/05
	    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIAx = 'ALL'	!ISDVSRC 03/29/05
	    
	  Else
	    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = $GEXXX903_Emp_Stat_Alias || ' In (' || $EmplStatusString || ')'
	    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
	    
	    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_Emp_Stat_Aliasx || ' In (' || $EmplStatusString || ')'		!ISDVSRC 03/29/05
	    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIAx = $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx				!ISDVSRC 03/29/05

	  End-If
	!----------------------------------------------------
  Else
  
     Do Process-Scheduler-Run-Controls
      move $FromDate to $from_dt		!vendsxn
      SHOW '$from_dt: '$from_dt			!VENDSXN Testing
      move $ThruDate to $thru_dt		!vendsxn
      SHOW '$thru_dt: '$thru_dt			!VENDSXN Testing
     
  End-If
!-------------------------------------------------------------------------------------------------------
!-------------------------------------------------------------------------------------------------------

  Show '$GEXXX907_Exclude_Div_Cd_Display_Criteria           = ' $GEXXX907_Exclude_Div_Cd_Display_Criteria
  Show '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           = ' $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  
  Show '$GEXXX900_Include_Company_Display_Criteria          = ' $GEXXX900_Include_Company_Display_Criteria
  Show '$GEXXX900_Include_Company_Display_Criteriax          = ' $GEXXX900_Include_Company_Display_Criteriax	!ISDVSRC 03/29/05
  
  Show '$GEXXX902_Include_Deptid_Display_Criteria           = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Display_Criteria         = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Display_Criteriax         = ' $GEXXX903_Include_Emp_Stat_Display_Criteriax	!ISDVSRC 03/29/05
  Show '$AsOfDate                                           = ' $AsOfDate

  let $year4 = '1'
  do Format-DateTime($AsOfDate, $activation_date, {DEFMDY}, '', '')
  let $year4 = '1'
  do Format-DateTime($AsOfDate, $rpt_asofdate, {DEFMDY}, '', '')
  let $year4 = '1'
  do Format-DateTime($AsOfDate, $temp_dt, {DEFCMP}, '', '')   
  let $year4 = '1'
  do Format-DateTime($from_dt, $from_temp_dt, {DEFCMP}, '', '')   
  let $year4 = '1'
  do Format-DateTime($thru_Dt, $thru_temp_dt, {DEFCMP}, '', '')   
  let $file_dt = $from_temp_dt||'_'||$thru_temp_dt
    


   Let $ORDER_BY = 'ORDER BY J.COMPANY,J.PAYGROUP,J.DEPTID,J.EMPLID'

  show '##################################'  
  show '$rpt_asofdate: ' $rpt_asofdate
  show '$from_dt: ' $from_dt
  show '$thru_dt: ' $thru_dt
  show '$file_dt:      ' $file_dt   
  show '##################################'  
  

  Do P130-Print-Cover-Page
  Do P140-Open-File
  Do P141-write-file-header
  Do Delete-Temp-Tbl-Data

End-Procedure



!***********************************************************************************
Begin-Procedure Process-Scheduler-Run-Controls
!***********************************************************************************
#debug9 Show 'Process-Scheduler-Run-Controls'
  Show 'Process-Scheduler-Run-Controls'
  
  Do GEXXX922-Select-Parameters

	  Let $AsOfDate = $GEX_RC_PAY.AsOfDate
	  If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
	    Let $AsOfDate = $AsOfToday
	  End-If
	
	
	  let  $FromDate = $GEX_RC_PAY.FromDate
	  let  $ThruDate = $GEX_RC_PAY.ThruDate
	
	   show '$FromDate- :' $FromDate
	   show '$ThruDate- :' $ThruDate 
   
  If ((ltrim(rtrim($FromDate,' '),' ') = '') and (ltrim(rtrim($ThruDate,' '),' ') = ''))
    SHOW '$FromDate AND $ThruDate PROVIDED ARE NULL'
    let $ThruDate = dateadd(strtodate($AsOfDate), 'DAY' , -1)
     let $FromDate = dateadd(strtodate($AsOfDate), 'YEAR' , -1)
	   show '$FromDate- :' $FromDate
	   show '$ThruDate- :' $ThruDate 
  End-If

  Do GEXXX902-Select-Deptid-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters
  Do GEXXX903-Select-Emp-Stat-Parametersx		!ISDVSRC 03/29/05
End-Procedure


!***********************************************************************************
Begin-Procedure set-weekly-dates
!***********************************************************************************
#debug9 Show 'set-weekly-dates'
! ->    determine day of week that $asofdate is, then do math to find last
! ->    week's Sunday and Saturday dates.


  !-----------------------------------------------------------------
  If ((rtrim($fromdate,' ') <> '') and (rtrim($thrudate,' ') <> ''))
	    show ' '
	    show '$fromdate: ' $fromdate
	    show '$thrudate: ' $thrudate
	    
	    If $prcs_process_instance = ''
	      Do Format-DateTime($FromDate,$week_begin_dt,{DEFMDY},'','native')
	      Do Format-DateTime($thruDate,$week_end_dt,{DEFMDY},'','native')
	    Else
	      let $week_begin_dt = $fromDate
	      let $week_end_dt   = $thruDate
	    End-If
	    
	    show '$week_begin_dt: ' $week_begin_dt
	    show '$week_end_dt:   ' $week_end_dt
  Else
    
    Do convert-to-dtu-date($asofdate,$asof_dtu)
    Do dtu-dayofweek#($asof_dtu,#dayofweek)
    Do dtu-dayofweek$($asof_dtu,$dayofweek)
	    show ' '
	    show '$asofdate :' $asofdate
	    show '$asof_dtu :' $asof_dtu
	    show '#dayofweek:' #dayofweek   
	    show '$dayofweek:' $dayofweek   
	    
     
	      Evaluate $dayofweek
		 when = 'Sunday'
		   !do dtu-subtract-days($asof_dtu,7,$week_begin_dtu)
 	           !If we do the above,
		   !we are getting all of the users from Sunday's load in Wednesday's load as well.  
		   !We should only get new users/deactivations after Sunday's load on Wed's load  
		   !and then only new ones after wed's load on the next Sunday load.
		   !-- so subtract 3 days instead of 4 - week begin dt
		   !   and add 3 days to week begin dt
 	           do dtu-subtract-days($asof_dtu,4,$week_begin_dtu)
 	           Do dtu-add-days($week_begin_dtu,3,$week_end_dtu)
	 	   break
		 when = 'Monday'
		   do dtu-subtract-days($asof_dtu,8,$week_begin_dtu)
	 	   break
		 when = 'Tuesday'
		   do dtu-subtract-days($asof_dtu,9,$week_begin_dtu)
	 	   break
		 when = 'Wednesday'
		   !do dtu-subtract-days($asof_dtu,10,$week_begin_dtu)
		   !If we do the above,
		   !we are getting all of the users from Sunday's load in Wednesday's load as well.  
		   !We should only get new users/deactivations after Sunday's load on Wed's load  
		   !and then only new ones after wed's load on the next Sunday load.
		   !-- so subtract 3 days instead of 10 - week begin dt
		   !   and add 2 days to week begin dt
		   do dtu-subtract-days($asof_dtu,3,$week_begin_dtu)
 		    Do dtu-add-days($week_begin_dtu,2,$week_end_dtu)


	 	   break
		 when = 'Thursday'
		   do dtu-subtract-days($asof_dtu,11,$week_begin_dtu)
	 	   break
		 when = 'Friday'
		   do dtu-subtract-days($asof_dtu,12,$week_begin_dtu)
	 	   break
		 when = 'Saturday'
		   do dtu-subtract-days($asof_dtu,13,$week_begin_dtu)
	     End-Evaluate      
     
      
      Do convert-from-dtu-date($week_begin_dtu,$week_begin_dt) 
      Do convert-from-dtu-date($week_end_dtu,$week_end_dt) 
  End-If
  !-----------------------------------------------------------------
  
    let $year4 = '1'
    do Format-DateTime($week_begin_dt,$begin_dt_hdr, {DEFMDY}, '', '')
    let $year4 = '1'
    do Format-DateTime($week_end_dt,$end_dt_hdr, {DEFMDY}, '', '')
    
    show ' '
    show '$week_begin_dt: ' $week_begin_dt
    show '$week_end_dt:  ' $week_end_dt
    show '$begin_dt_hdr: ' $begin_dt_hdr
    show '$end_dt_hdr:   ' $end_dt_hdr

End-Procedure


!***********************************************************************************
Begin-Procedure P130-Print-Cover-Page
!***********************************************************************************
 SHOW ' Entered into P130-Print-Cover-Page'
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+2,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'Report As Of Date : '                                    (+2,5)
  Print $Rpt_AsOfDate                                             (0,+2)

  
  Print '$Action_dt_criteria                                 = '  (+2,5)
  Print $ACTION_DT_CRITERIA                                       (0,+2)  

  Print '$Action_dt_criteria_2                                 = '  (+2,5)
  Print $ACTION_DT_CRITERIA_2                                       (0,+2)  
        
  Print '$GEXXX907_Include_Div_Cd_Display_Criteria           = '  (+1,5)
  Print $GEXXX907_Include_Div_Cd_Display_Criteria                 (0,+2) 
  Print '$GEXXX907_Exclude_Div_Cd_Display_Criteria           = '  (+1,5)
  Print $GEXXX907_Exclude_Div_Cd_Display_Criteria                 (0,+2) 
  Print '$GEXXX900_Include_Company_Display_Criteria          = '  (+1,5)
  print $GEXXX900_Include_Company_Display_Criteria                (0,+2)
  Print '$GEXXX902_Include_Deptid_Display_Criteria           = '  (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria                 (0,+2)
  Print '$GEXXX903_Include_Emp_Stat_Display_Criteria         = '  (+1,5)
  Print $GEXXX903_Include_Emp_Stat_Display_Criteria               (0,+2)
  Print 'SORT ORDER FOR THIS REPORT RUN: '                        (+2,2)
  Print $Order_By                                                 (0,+2)
  Let #PAGE-COUNT = 0
  NEW-PAGE
End-Procedure

!***********************************************************************************
begin-procedure P140-Open-File
!***********************************************************************************
#debug9 Show 'P140-Open-File'

 !-----------------open file1 -----------------------------
   Let $File_Name = 'Evp_Promo'
   !Let $file1 = '\\riva\hrdev\psoft\working\' || $File_Name || '_' || $file_dt || '.xls' ! For Testing
   Let $file1 = '\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\Promotions - All Bus Areas\' || $File_Name || '_' || $file_dt || '.xls' 
   
   show '$file1:' $file1
  
  Open $file1
       As 1
       For-Writing
       Record=1050:Vary		!VENDSXN changed
       Status=#filestat

  If #filestat <> 0
     Show 'Error opening output file.  Program terminating.'
     Stop
  End-If
 
 !-----------------open file2 -----------------------------
   Let $File_Name2 = 'Promo_Hire Counts By EVP'
   !Let $file2 = '\\riva\hrdev\psoft\working\' || $File_Name2 || '_' || $file_dt || '.xls' ! For Testing
   Let $file2 = '\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\Promotions - All Bus Areas\' || $File_Name2 || '_' || $file_dt || '.xls'   
   
   show '$file2:' $file2
  
  Open $file2 As 2 For-Writing Record=300:Vary Status=#filestat2

  If #filestat2 <> 0
     Show 'Error opening output file#2.  Program terminating.'
     Stop
  End-If 

 !-----------------open file3 -----------------------------
   Let $File_Name3 = 'Promo_Hire Count by Grade_Mgr Level' 
   !Let $file3 = '\\riva\hrdev\psoft\working\' || $File_Name3 || '_' || $file_dt || '.xls'  ! For Testing
   Let $file3 = '\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\Promotions - All Bus Areas\' || $File_Name3 || '_' || $file_dt || '.xls'   
   
   show '$file3:' $file3
  
  Open $file3 As 3 For-Writing Record=600:Vary Status=#filestat3

  If #filestat3 <> 0
     Show 'Error opening output file#3.  Program terminating.'
     Stop
  End-If 

 !-----------------open file4 -----------------------------
   Let $File_Name4 = 'Promo_Hire_Count_by_MgrLvl-SalGrd'
   !Let $file4 = '\\riva\hrdev\psoft\working\' || $File_Name4 || '_' || $file_dt || '.xls' ! For Testing
   Let $file4 = '\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\Promotions - All Bus Areas\' || $File_Name4 || '_' || $file_dt || '.xls'   
   
   show '$file4:' $file4
  
  Open $file4 As 4 For-Writing Record=300:Vary Status=#filestat4

  If #filestat4 <> 0
     Show 'Error opening output file#4.  Program terminating.'
     Stop
  End-If 

 !-----------------open file5 -----------------------------
   Let $File_Name5 = 'Promo_Count_by_SalGrd-EmplType'
   !Let $file5 = '\\riva\hrdev\psoft\working\' || $File_Name5 || '_' || $file_dt || '.xls'  ! For Testing
   Let $file5 = '\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\Promotions - All Bus Areas\' || $File_Name5 || '_' || $file_dt || '.xls'   
   
   show '$file5:' $file5
  
  Open $file5 As 5 For-Writing Record=1000:Vary Status=#filestat5

  If #filestat5 <> 0
     Show 'Error opening output file#5.  Program Terminating.'
     Stop
  End-If 

 !-----------------open file6 -----------------------------
   Let $File_Name6 = 'Promo_Count_by_BusArea'
   !Let $file6 = '\\riva\hrdev\psoft\working\' || $File_Name6 || '_' || $file_dt || '.xls'   ! For Testing
   Let $file6 = '\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\Promotions - All Bus Areas\' || $File_Name6 || '_' || $file_dt || '.xls'   
   
   show '$file6:' $file6
  
  Open $file6 As 6 For-Writing Record=1000:Vary Status=#filestat6

  If #filestat6 <> 0
     Show 'Error opening output file#6.  Program Terminating.'
     Stop
  End-If 

 !-----------------open file7 -----------------------------
   Let $File_Name7 = 'Promo_Count_by_OprDiv'
   !Let $file7 = '\\riva\hrdev\psoft\working\' || $File_Name7 || '_' || $file_dt || '.xls'  ! For Testing
   Let $file7 = '\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\Promotions - All Bus Areas\' || $File_Name7 || '_' || $file_dt || '.xls'   
   
   show '$file7:' $file7
  
  Open $file7 As 7 For-Writing Record=1000:Vary Status=#filestat7

  If #filestat7 <> 0
     Show 'Error opening output file#7.  Program Terminating.'
     Stop
  End-If 

End-Procedure

!***********************************************************************************
Begin-Procedure P200-main-process 
!***********************************************************************************
#debug9 Show 'P2000-main-process'
Begin-Select
E.HIRE_DT                       
E.CMPNY_SENIORITY_DT
E.SERVICE_DT
E.GEX_VCN_SENIOR_DT
E.TERMINATION_DT
M.APPOINT_END_DT		
K.EMPLID
K.SSN                           
J.EMPLID                        
J.EMPL_RCD
J.COMPANY
J.PAYGROUP
J.DEPTID                        
N.FIRST_NAME                    
N.MIDDLE_NAME
N.LAST_NAME
SYSDATE        &GEXJOB_REH_ASOFDATE 	
  
  let $Data-Found-Flag = 'Y'
  Add 1 to #rpt_count
  Add 1 to #P300-Get-Details
  
  let $firstname      = &N.FIRST_NAME
    If length($firstname) > 15
       let $firstname = substr($firstname,1,15)
     End-If

  let $midname      = &N.MIDDLE_NAME
    If length($midname) > 15
       let $midname = substr($midname,1,15)
     End-If
     
  let $lastname       = &n.last_name
     If length($lastname) > 30
       let $lastname = substr($lastname,1,30)
     End-If

  let $name           = $lastname ||', '||$firstname||' '||$midname 
  

  let $emplid         = &j.emplid
  let $empl_rcd       = &j.empl_rcd
  let $hire_dt        = &e.hire_dt  
  Do convert-to-dtu-date($hire_dt,$hire_dt_dtu)
  let $prev_change    = ' ' 
  if  $hire_dt_dtu >= $from_dt_dtu 
  and $hire_dt_dtu <= $thru_dt_dtu
    let $new_hire = 'Y'
!    show $emplid ', ' $name ', ' $hire_dt
  else
    let $new_hire = 'N'
  end-if
  let $year4 = '1'
  let $hire_date      = datetostr(&e.hire_dt, 'MM/DD/YYYY')
  
   let $GEXJOB_REH_EMPLID = $emplid
   let #GEXJOB_REH_EMPLRCD = $EMPL_RCD
   Let $GEXJOB_REH_ASOFDATE = $ASOFDATE									! used $ASOFDATE instead of sysdate
   do Get-Job-Rehire-Dt
   if $GEXJOB_REH_REHIRE_DT <> ''
     let $rehire_date = datetostr(strtodate($GEXJOB_REH_REHIRE_DT,'DD-MON-YYYY'),'MM/DD/YYYY') 
   else
     let $rehire_date = ''
   end-if
    
  let $year4 = '1'
  
  let $term_dt        = &e.termination_dt
  let $year4 = '1'
  let $term_date      = datetostr(&e.termination_dt, 'MM/DD/YYYY')

  let $co_senior_dt   = &e.cmpny_seniority_dt
  let $co_senior_date = datetostr(&e.cmpny_seniority_dt, 'MM/DD/YYYY')

  let $vcn_senior_dt   = &e.gex_vcn_senior_dt
  let $vcn_senior_date = datetostr(&e.gex_vcn_senior_dt, 'MM/DD/YYYY')

  let $service_dt      = &e.cmpny_seniority_dt
  let $service_date    = datetostr(&e.service_dt, 'MM/DD/YYYY')

  let $pay_elig_date   = datetostr(&m.appoint_end_dt, 'MM/DD/YYYY')	

  
   !GEX_SEC_REENG 2015-05-11 Surya Sobha Begins
   !Let $National_Id   = &K.SSN
   do Get-Emp-Ssn (&J.EMPLID, $National_Id)
   !GEX_SEC_REENG 2015-05-11 Surya Sobha Ends

!########################################################
  do get-max-row
  do get-min-row
  let $prior_effdt = dateadd(strtodate($from_dt),'DAY',-1)
  let $curr_effdt_dtu = '' 
  while $curr_effdt_dtu < $max_effdt_dtu
    #debug9 show 'while $curr_effdt_dtu < $max_effdt_dtu'
    #debug9 show $emplid ' $curr_effdt_dtu: ' $curr_effdt_dtu ', $max_effdt_dtu: ' $max_effdt_dtu
    do get-job-rows
    let $prior_effdt = $curr_effdt
  end-while
!########################################################
  
  
FROM PS_NAMES N,PS_EMPLOYMENT E, PS_JOB J, PS_GEX_EMPLID_MAPP K, PS_PER_ORG_ASG_HP M	
WHERE  E.EMPLID            = J.EMPLID
AND    E.EMPL_RCD          = J.EMPL_RCD
AND    N.EMPLID            = J.EMPLID	
!AND    J.EMPLID	   = K.SSN   	  !GEX_SEC_REENG TCSXSSS 05/11/2015
AND    J.EMPLID		   = K.EMPLID  	  !GEX_SEC_REENG TCSXSSS 05/11/2015
AND    J.EMPL_RCD          = K.EMPL_RCD
AND    J.EMPLID            = M.EMPLID
AND    J.EMPL_RCD          = M.EMPL_RCD
AND    N.NAME_TYPE         = 'PRI'
!#########################################################
and    j.company           in ('GEI', 'MCC', 'RFI', 'TMK','FCC','MGC')  ! GEX ISDVNPK 03/01/2011 Added Company MGC as per ITG #94304
and    j.company          > '999'
and    j.union_cd          in ('NON', 'COL', 'TOL', 'GGO') 
!#########################################################
and    j.gex_seasonal_emp  <> 'Y'
AND    N.EFFDT             = (SELECT MAX(NN.EFFDT) FROM   PS_NAMES NN WHERE	
       				NN.EMPLID     = N.EMPLID    AND    
       				NN.NAME_TYPE  = N.NAME_TYPE AND    
       				NN.EFFDT       <= $ASOFDATE)
and    j.effdt             between $from_dt and $thru_dt
AND    J.EFFDT             = (SELECT MAX(EFFDT) FROM   PS_JOB WHERE	
				EMPLID  = J.EMPLID  AND    
				EMPL_RCD    = J.EMPL_RCD AND    
				EFFDT       <= $thru_dt) !--$ASOFDATE)
AND    J.EFFSEQ            = (SELECT MAX(EFFSEQ) FROM   PS_JOB WHERE  
				EMPLID       = J.EMPLID AND    
				EMPL_RCD    = J.EMPL_RCD AND    
				EFFDT        = J.EFFDT)
AND   [$GEXXX902_Include_Deptid_Criteria]
AND   [$GEXXX903_Include_Emp_Stat_Criteria]
ORDER BY J.COMPANY,J.PAYGROUP,J.DEPTID,J.EMPLID
End-Select
End-Procedure

!$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$

begin-procedure get-job-rows
#debug9 show 'get-job-rows'
#debug9 show 'Selects min(effdt) > $prior_effdt'

  let $promotion_flag = 'N' 

begin-select
jcurr.emplid
jcurr.empl_status
jcurr.company
jcurr.paygroup
jcurr.deptid
jcurr.jobcode
jcurr.acct_cd
jcurr.empl_type
jcurr.effdt
jcurr.union_cd
jcurr.action
jcurr.action_reason
jcurr.position_nbr
jcurr.full_part_time
jcurr.grade
jcurr.grade_entry_dt
jcurr.std_hours		

  add 1 to #job_rows_cntr
  let $curr_company     = &jcurr.company 
  let $curr_paygroup    = &jcurr.paygroup
  let $curr_deptid      = &jcurr.deptid
  let $lkup_deptid      = $curr_deptid 
  do get-deptid-descr
  let $curr_Dept_descr  = &DT1.DESCR
  do get-rgn-cd
  let $curr_region      = &gdt1.gex_rgn_cd
  let $curr_div_cd      = &gdt1.gex_company_div_cd
  let $div_cd           = $curr_div_cd
  let $curr_gl_dept     = &gdt1.department
  do get-operating-division
  let $curr_division    = $division
  let $curr_status      = &jcurr.empl_status
  let $curr_acct_cd     = &jcurr.acct_cd 
  let $lkup_acct_cd     = $curr_acct_cd
  do get-acct-cd-descr
  let $curr_acct_descr  = &AT1.DESCRSHORT
  let $curr_jobcode     = &jcurr.jobcode
  let $lkup_jobcode     = $curr_jobcode 
  do get-jobcode-descr
  Let $Position_Nbr = &jcurr.position_nbr  
  Do Get-Position-Title   
  if $PosName = '' 
  let $curr_job_descr   = &JT1.DESCR
  else
  let $curr_job_descr   = $PosName
  end-if
  let $curr_mgr_level   = &jt1.manager_level
  let $mgr_level        = $curr_mgr_level 
  let $Curr_Std_Hours   = &jcurr.std_hours	
  do get-mgr-level-descr 
  let $curr_level_descr = &xlat1.xlatshortname 
  let $curr_eeo1code    = &jt1.eeo1code
  let $eeo1code         = $curr_eeo1code
  do get-eeo1-descr
  let $curr_eeo1_descr  = $eeo1_descr 
  let $curr_effdt       = &jcurr.effdt 
  let $curr_effdate     = datetostr(&jcurr.effdt, 'MM/DD/YYYY') 
  do convert-to-dtu-date ($curr_effdt,$curr_effdt_dtu) 
  
  let $curr_union_cd    = ltrim(rtrim(&jcurr.union_cd,' '),' ')
  If $curr_union_cd = ''		!VENDSXN Added for ITG-41101
  	Let $curr_union_cd = ' '
  End-If
  
  let $curr_pos_nbr     = &jcurr.position_nbr 
  let $curr_f_p_t       = &jcurr.full_part_time
  let $curr_action      = &jcurr.action
  #debug9 show '$curr_action: '$curr_action
  let $curr_act_reas    = &jcurr.action_reason
  let $action = $curr_action
  do get-action-descr
  let $curr_action_descr = &xlat.action_descr 
  let $actn_reason = $curr_act_reas
  do get-actn-reason-descr 
  let $curr_actn_rsn_descr = &ar.descr
  let $curr_empl_type   = &jcurr.empl_type
  let $curr_grade       = &jcurr.grade      
  let $curr_old_grade   = &jcurr.grade      
  If $curr_old_grade <> ' '
    If ($curr_old_grade = 'A10' OR $curr_old_grade = 'A11' OR $curr_old_grade = 'C10' OR $curr_old_grade = 'C11' OR
       $curr_old_grade = 'P10' OR $curr_old_grade = 'P11' OR $curr_old_grade = 'M10' OR $curr_old_grade = 'M11')
       !Pharmacy Grades
       let $curr_new_grade = '>= 13'
    Else
      !Non-Pharmacy Grades
      let #curr_old_grade = to_number($curr_old_grade)
      if (#curr_old_grade   >= 13 and #curr_old_grade <= 50)
      or (#curr_old_grade   >= 82 and #curr_old_grade <= 100)
        let $curr_new_grade = '>= 13'
      else
        let $curr_new_grade = '< 13'  
      end-if
    End-If
  Else
    If $curr_empl_type = 'H'
      let $curr_new_grade = '< 13'
    Else
      let $curr_new_grade = '>= 13'
    End-If
  End-If
  
  let $curr_entry_date  = datetostr(&jcurr.grade_entry_dt, 'MM/DD/YYYY')
  let $curr_change = ' '
  do get-evp-values 
  let $curr_BUS_UNIT  = &evp.BUSINESS_UNIT
  let $curr_GEX_CEO   = &evp.gex_ceo      
  let $curr_GEX_EVP   = &evp.gex_evp      
  let $curr_evp_name  = $evp_name 
  let $curr_GEX_SVPVP = &evp.gex_svpvp     
  let $curr_GEX_DIR   = &evp.gex_dir      
  let $curr_GEX_MGR   = &evp.gex_mgr     
  let $curr_GEX_SUP   = &evp.gex_sup

  if substr(&jcurr.paygroup,1,2) = 'PH'
  or &jcurr.deptid = 'C017' 
  or &jcurr.deptid = 'C098'
  or &jcurr.acct_cd = '008'
    let $curr_bus_area = 'Pharmacy'
  else
  if &jcurr.acct_cd = '041'
  or &jcurr.acct_cd = '044'
    let $curr_bus_area = 'GetGo'
  else 
     let $curr_bus_area = &evp.gex_bus_area
  end-if
  end-if

  If $curr_bus_area = ''
     Let $curr_bus_area = ' '
  End-If

  let $promotion_flag = 'N'
  
  If $Prev_Data_Found = 'Y'
     do field-comparison  
  Else
     Let $Prev_Data_Found = 'Y'
  End-If
   
 If $curr_union_cd = 'CBT' or $curr_union_cd = 'COL' or $curr_union_cd = 'DVR' 
   or $curr_union_cd = 'GGO' or $curr_union_cd = 'HGN' or $curr_union_cd = 'MAS' 
   or $curr_union_cd = 'MDL' or $curr_union_cd = 'MOD' or $curr_union_cd = 'MUR' 
   or $curr_union_cd = 'NON' or $curr_union_cd = 'SEC' or $curr_union_cd = 'SFT' 
   or $curr_union_cd = 'TOL' or $curr_union_cd = 'XPR'
   
     If rtrim(ltrim(&jcurr.action, ' '), ' ') = 'REH' or
        rtrim(ltrim(&jcurr.action, ' '), ' ') = 'HIR'
        move 'HIRE' to $curr_change

     let $emplid_str = '="' || $EMPLID || '" & " "'
     let $curr_deptid_str = '="' || $curr_deptid || '" & " "'
     let $curr_BUS_UNIT_str = '="' || $curr_BUS_UNIT || '" & " "'
     let $curr_gl_dept_str = '="' || $curr_gl_dept || '" & " "' 
     let $curr_acct_cd_str = '="' || $curr_acct_cd || '" & " "'  
     let $curr_jobcode_str = '="' || $curr_jobcode || '" & " "'   
     let $curr_pos_nbr_str = '="' || $curr_pos_nbr || '" & " "'   
     
     string $NAME $curr_effdate $curr_COMPANY $curr_paygroup $curr_deptid_str $curr_DEPT_descr 
     $curr_div_cd $curr_DIVISION $curr_bus_area $curr_BUS_UNIT_str $curr_gl_dept_str $curr_acct_cd_str 
     $curr_REGION $curr_STATUS $curr_action $curr_action_descr $curr_act_reas $curr_actn_rsn_descr $curr_union_cd $curr_f_p_t  
     $curr_jobcode_str $curr_JOB_DESCR $Curr_Std_Hours $curr_level_descr $curr_eeo1_descr
     $curr_empl_type $curr_old_grade $curr_new_grade $hire_date $rehire_date $term_date $service_date $curr_evp_name $curr_change
     by $delim into $curr_cols

        move '' to $prt_cols
        string $curr_cols ' | ' by $delim into $prt_cols
        Do P240-Write-Record
     Else
     
       if $promotion_flag = 'Y'
        move 'PROMO' to $curr_change

        let $emplid_str = '="' || $EMPLID || '" & " "'
        let $curr_deptid_str = '="' || $curr_deptid || '" & " "'
        let $curr_BUS_UNIT_str = '="' || $curr_BUS_UNIT || '" & " "'
        let $curr_gl_dept_str = '="' || $curr_gl_dept || '" & " "' 
        let $curr_acct_cd_str = '="' || $curr_acct_cd || '" & " "'  
        let $curr_jobcode_str = '="' || $curr_jobcode || '" & " "'   
        let $curr_pos_nbr_str = '="' || $curr_pos_nbr || '" & " "'   
     
     string $NAME $curr_effdate $curr_COMPANY $curr_paygroup $curr_deptid_str $curr_DEPT_descr 
     $curr_div_cd $curr_DIVISION $curr_bus_area $curr_BUS_UNIT_str $curr_gl_dept_str $curr_acct_cd_str 
     $curr_REGION $curr_STATUS $curr_action $curr_action_descr $curr_act_reas $curr_actn_rsn_descr $curr_union_cd $curr_f_p_t  
     $curr_jobcode_str $curr_JOB_DESCR $Curr_Std_Hours $curr_level_descr $curr_eeo1_descr	
     $curr_empl_type $curr_old_grade $curr_new_grade $hire_date $rehire_date $term_date $service_date $curr_evp_name $curr_change
     by $delim into $curr_cols

        move '' to $prt_cols
     
       string $prev_cols ' | ' $curr_cols by $delim into $prt_cols
       Do P240-Write-Record
       let $promotion_flag = 'N'
       End-If   !$promotion_flag = 'Y'
     end-if	!HIR/REH
 End-If !Union Codes
            
     let $emplid_str = '="' || $EMPLID || '" & " "'
     let $curr_deptid_str = '="' || $curr_deptid || '" & " "'
     let $curr_BUS_UNIT_str = '="' || $curr_BUS_UNIT || '" & " "'
     let $curr_gl_dept_str = '="' || $curr_gl_dept || '" & " "' 
     let $curr_acct_cd_str = '="' || $curr_acct_cd || '" & " "'  
     let $curr_jobcode_str = '="' || $curr_jobcode || '" & " "'   
     let $curr_pos_nbr_str = '="' || $curr_pos_nbr || '" & " "' 
     
     string $NAME $curr_effdate $curr_COMPANY $curr_paygroup $curr_deptid_str $curr_DEPT_descr 
     $curr_div_cd $curr_DIVISION $curr_bus_area $curr_BUS_UNIT_str $curr_gl_dept_str $curr_acct_cd_str 
     $curr_REGION $curr_STATUS $curr_action $curr_action_descr 
     $curr_act_reas $curr_actn_rsn_descr $curr_union_cd $curr_f_p_t   
     $curr_jobcode_str $curr_JOB_DESCR $Curr_Std_Hours $curr_level_descr $curr_eeo1_descr	
     $curr_empl_type $curr_old_grade $curr_new_grade $hire_date 
     $rehire_date $term_date $service_date $curr_evp_name $curr_change
     by $delim into $prev_cols
     
  move $curr_pos_nbr to $prev_pos_nbr
  move $curr_empl_type to $prev_empl_type
  move $curr_f_p_t to $prev_f_p_t
  move $curr_grade to $prev_grade
  move $curr_deptid to $prev_deptid
  move $curr_jobcode to $prev_jobcode
  move $curr_acct_cd  to $prev_acct_cd
  move $Curr_Std_Hours to $prev_Std_Hours
  move $curr_action to $prev_action
  move $curr_act_reas to $prev_act_reas
  move $curr_mgr_level to $prev_mgr_level
  move $curr_division to $prev_division
  move $curr_new_grade to $prev_new_grade	
  move $curr_level_descr to $prev_level_descr
  move $curr_bus_area to $prev_bus_area
  move $curr_GEX_EVP to $prev_GEX_EVP
  move $curr_old_grade to $prev_old_grade
  move $curr_effdt to $prev_effdt  
 
from ps_job jcurr		
WHERE jcurr.emplid = $emplid
and jcurr.empl_rcd = $empl_rcd
and jcurr.company = &j.company
and jcurr.effdt = (select min(effdt)
from ps_job		
where emplid = jcurr.emplid
  and empl_rcd = jcurr.empl_rcd
  and company  = jcurr.company
  and effdt > $prior_effdt)
and jcurr.effseq = (select max(effseq)
from ps_job		
where emplid = jcurr.emplid
  and empl_rcd = jcurr.empl_rcd
  and company  = jcurr.company
  and effdt = jcurr.effdt)

end-select
end-procedure

!**********************************************************************************

!**********************************************************************************
begin-procedure field-comparison
#debug9 show 'field-comparison'

  if $prev_empl_type = 'H' and $curr_empl_type = 'S'
    let $promotion_flag = 'Y'
  end-if
  if  $prev_f_p_t = 'P' and $curr_f_p_t = 'F'
    let $promotion_flag = 'Y'
  end-if
 If $prev_grade <> ' ' AND $curr_grade <> ' '	
  if $prev_grade <> $curr_grade
    if ($prev_grade > 'A' and $prev_grade < 'Z') AND ($curr_grade > 'A' and $curr_grade < 'Z')
      if $curr_grade > $prev_grade
        let $promotion_flag = 'Y'
      else
        let $promotion_flag = 'N'
      end-if
    else
      let #prev_grade = to_number($prev_grade)
      let #curr_grade = to_number($curr_grade)
      If #prev_grade <> 0 and #curr_grade <> 0	!VENDSXN Added to prevent Char to Non-Char Grade matching
        if #prev_grade >= 13 and #prev_grade <= 50
          if #curr_grade > #prev_grade
            let $promotion_flag = 'Y'
          else
            let $promotion_flag = 'N'
          end-if
        else
          if #prev_grade >= 82 and #prev_grade <= 100
            if #curr_grade < #prev_grade
              let $promotion_flag = 'Y'
            else
              let $promotion_flag = 'N'
            end-if
          end-if
        end-if
      End-If
    end-if
  end-if
 Else		!If $prev_grade OR $curr_grade is blank
   #debug9  show '$prev_grade OR $curr_grade is blank'
    let #curr_mgr_level = to_number($curr_mgr_level)
    let #Prev_mgr_level = to_number($Prev_mgr_level)
    If #curr_mgr_level < #Prev_mgr_level
       let $promotion_flag = 'Y'
    Else
       let $promotion_flag = 'N'
    End-If
 End-If	
  if $prev_act_reas = 'JRC'
     let $promotion_flag = 'N'
  end-if 

  if $curr_act_reas = 'JRC'
     let $promotion_flag = 'N'
  end-if 
  
end-procedure field-comparison
!***********************************************************************************
begin-procedure get-max-row
#debug9 show 'get-max-row <= $thru_dt'
begin-select
jj.effdt
jj.emplid 
  let $max_effdt = &jj.effdt
  do convert-to-dtu-date($max_effdt,$max_effdt_dtu)
from ps_job jj		
where jj.emplid = $emplid
and jj.empl_rcd = $empl_rcd
and jj.company = &j.company
and jj.effdt = (select max(effdt)
from ps_job 		
where emplid = jj.emplid
  and empl_rcd = jj.empl_rcd
  and company = jj.company
  and effdt <= $thru_dt)
and jj.effseq = (select max(effseq)
from ps_job 		
where emplid = jj.emplid
  and empl_rcd = jj.empl_rcd
  and company = jj.company
  and effdt = jj.effdt)
end-select
end-procedure


!***********************************************************************************
!**********************************************************************************
begin-procedure get-min-row
#debug9 show 'get-min-row'
#debug9 show ' max(effdt) < $from_dt'
  Do Initialize-Variables		!VENDSXN Added
#debug9 show $emplid ', $new_hire ' $new_hire
	Let $Prev_Data_Found = 'N'	!VENDSXN Added
begin-select
jprev.emplid
jprev.empl_type
jprev.company
jprev.paygroup
jprev.deptid
jprev.empl_status
jprev.acct_cd
jprev.jobcode
jprev.effdt
jprev.union_cd
jprev.action
jprev.action_reason
jprev.position_nbr
jprev.full_part_time
jprev.grade
jprev.grade_entry_dt
jprev.std_hours			

  Let $Prev_Data_Found = 'Y'	
  let $prev_company     = &jprev.company 
  let $prev_paygroup    = &jprev.paygroup
  let $prev_deptid      = &jprev.deptid
  let $lkup_deptid      = $prev_deptid 
  do get-deptid-descr
  let $prev_Dept_descr  = &DT1.DESCR
  do get-rgn-cd
  let $prev_region      = &GDT1.GEX_RGN_CD
  let $prev_div_cd      = &gdt1.gex_company_div_cd
  let $div_cd           = $prev_div_cd
  let $prev_gl_dept     = &gdt1.department
  do get-operating-division
  let $prev_division   = $division
  let $prev_status      = &jprev.empl_status
  let $prev_acct_cd     = &jprev.acct_cd 
  let $lkup_acct_cd     = $prev_acct_cd
  do get-acct-cd-descr
  let $prev_acct_descr  = &AT1.DESCRSHORT
  let $prev_jobcode     = &jprev.jobcode
  let $lkup_jobcode     = $prev_jobcode 
  do get-jobcode-descr 
  Let $Position_Nbr = &jprev.position_nbr    
  Do Get-Position-Title  
  if $PosName = '' 
  let $prev_job_descr   = &JT1.DESCR
  else
  let $prev_job_descr   = $PosName  
  end-if
  let $prev_mgr_level   = &jt1.manager_level
  let $mgr_level        = $prev_mgr_level
  let $Prev_Std_Hours   = &jprev.std_hours	
  do get-mgr-level-descr 
  let $prev_level_descr = &xlat1.xlatshortname 
  let $prev_eeo1code    = &jt1.eeo1code
  let $eeo1code         = $prev_eeo1code
  do get-eeo1-descr
  let $prev_eeo1_descr  = $eeo1_descr  
  let $prev_effdt       = &jprev.effdt 
  let $prev_effdate     = datetostr(&jprev.effdt, 'MM/DD/YYYY') 
  let $prev_union_cd    = &jprev.union_cd
  let $prev_action      = &jprev.action
  let $prev_act_reas    = &jprev.action_reason  
  let $action = $prev_action
  do get-action-descr
  let $prev_action_descr = &xlat.action_descr  
  let $actn_reason = $prev_act_reas
  do get-actn-reason-descr 
  let $prev_actn_rsn_descr = &ar.descr
  let $prev_pos_nbr     = &jprev.position_nbr
  let $prev_f_p_t       = &jprev.full_part_time
  let $prev_empl_type   = &jprev.empl_type
  let $prev_grade       = &jprev.grade     
  let $prev_old_grade   = &jprev.grade     
  If $prev_old_grade <> ' '
    If ($prev_old_grade = 'A10' OR $prev_old_grade = 'A11' OR $prev_old_grade = 'C10' OR $prev_old_grade = 'C11' OR
       $prev_old_grade = 'P10' OR $prev_old_grade = 'P11' OR $prev_old_grade = 'M10' OR $prev_old_grade = 'M11')
       !Pharmacy Grades
       let $prev_new_grade = '>= 13'
    Else
      !Non-Pharmacy Grades
      let #prev_old_grade = to_number($prev_old_grade)
      if (#prev_old_grade   >= 13 and #prev_old_grade <= 50)
      or (#prev_old_grade   >= 82 and #prev_old_grade <= 100)
        let $prev_new_grade = '>= 13'
      else
        let $prev_new_grade = '< 13'  
      end-if
    End-If
  Else
    If $prev_empl_type = 'H'
      let $prev_new_grade = '< 13'
    Else
      let $prev_new_grade = '>= 13'
    End-If
  End-If
  
  let $prev_entry_date  = datetostr(&jprev.grade_entry_dt, 'MM/DD/YYYY')
  do get-evp-values 
  let $prev_BUS_UNIT  = &evp.BUSINESS_UNIT
  let $prev_GEX_CEO   = &evp.gex_ceo      
  let $prev_GEX_EVP   = &evp.gex_evp      
  let $prev_evp_name  = $evp_name 
  let $prev_GEX_SVPVP = &evp.gex_svpvp     
  let $prev_GEX_DIR   = &evp.gex_dir      
  let $prev_GEX_MGR   = &evp.gex_mgr     
  let $prev_GEX_SUP   = &evp.gex_sup

  if substr(&jprev.paygroup,1,2) = 'PH'
  or &jprev.deptid = 'C017' 
  or &jprev.deptid = 'C098'
  or &jprev.acct_cd = '008'
    let $prev_bus_area = 'Pharmacy'
  else
  if &jprev.acct_cd = '041'
  or &jprev.acct_cd = '044'
    let $prev_bus_area = 'GetGo'
  else
     let $prev_bus_area = &evp.gex_bus_area
  end-if
  end-if

  If $prev_bus_area = ''
     Let $prev_bus_area = ' '
  End-If

  if $new_hire = 'Y'
    !let $prev_change = 'NEW HIRE' !isdvrxd
    let $prev_change = 'HIRE'
  else
    let $prev_change = ' '
  end-if
  
  !ISDVRXD
  let $emplid_str = '="' || $EMPLID || '" & " "'
  let $prev_deptid_str = '="' || $prev_deptid || '" & " "'
  let $prev_BUS_UNIT_str = '="' || $prev_BUS_UNIT || '" & " "'
  let $prev_gl_dept_str = '="' || $prev_gl_dept || '" & " "' 
  let $prev_acct_cd_str = '="' || $prev_acct_cd || '" & " "' 
  let $prev_jobcode_str = '="' || $prev_jobcode || '" & " "' 
  let $prev_pos_nbr_str = '="' || $prev_pos_nbr || '" & " "' 
  
  
  string $NAME $prev_effdate $prev_COMPANY $prev_paygroup $prev_deptid_str $prev_DEPT_descr 
  $prev_div_cd $prev_DIVISION $prev_bus_area $prev_BUS_UNIT_str $prev_gl_dept_str $prev_acct_cd_str 
  $prev_REGION $prev_STATUS $prev_action $prev_action_descr $prev_act_reas 
  $prev_actn_rsn_descr $prev_union_cd $prev_f_p_t $prev_jobcode_str 
  $prev_JOB_DESCR $Prev_Std_Hours $prev_level_descr $prev_eeo1_descr  	
  $prev_empl_type $prev_old_grade $prev_new_grade $hire_date $rehire_date  
  $term_date $service_date $prev_evp_name $prev_change  by $delim into $prev_cols

from ps_job jprev	
where jprev.emplid = $emplid
and jprev.empl_rcd = $empl_rcd
and jprev.company = &j.company
and jprev.effdt = (select max(effdt)	
from ps_job			
where emplid = jprev.emplid
  and empl_rcd = jprev.empl_rcd 
  and company  = jprev.company 
  and empl_rcd = jprev.empl_rcd
  and effdt < $from_dt)		
and jprev.effseq = (select max(effseq)
from ps_job	
where emplid = jprev.emplid
  and empl_rcd = jprev.empl_rcd
  and company  = jprev.company 
  and effdt = jprev.effdt)

end-select
end-procedure
!**********************************************************************************
!$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
!**********************************************************************************
begin-procedure get-action-descr
begin-select
xlat.action_descr  

from PS_ACTION_TBL xlat 
where xlat.action=$action  
and xlat.eff_status = 'A' 
and xlat.effdt=
		(select MAX(EFFDT) FROM PS_ACTION_TBL
		WHERE xlat.ACTION = ACTION           
         	AND xlat.EFF_STATUS = EFF_STATUS)

end-select
end-procedure
!**********************************************************************************

!**********************************************************************************
begin-procedure get-actn-reason-descr
begin-select

ar.descr

from ps_actn_reason_tbl ar		
where ar.action = $action
and ar.action_reason = $actn_reason
and ar.eff_status = 'A'
end-select
end-procedure
!**********************************************************************************
!**********************************************************************************
begin-procedure get-deptid-descr
#debug9 show 'get-deptid-descr'
begin-select
dt1.descr

from ps_dept_tbl dt1	
where    DT1.SETID            = 'COMMN'
AND    DT1.DEPTID           = $lkup_DEPTID
AND    DT1.EFF_STATUS       = 'A'
AND    DT1.EFFDT            = (SELECT MAX(EFFDT) FROM   PS_DEPT_TBL WHERE 	 	
				DEPTID       = DT1.DEPTID AND    
				SETID        = DT1.SETID AND    
				EFFDT       <= $ASOFDATE)
end-select
end-procedure
!**********************************************************************************
!**********************************************************************************
begin-procedure get-acct-cd-descr
#debug9 show 'get-acc-cd-descr'
begin-select

at1.descrshort

from ps_gex_acct_cd_tbl at1
where    at1.SETID          = 'COMMN'
AND    at1.acct_cd          = $lkup_acct_cd
AND    at1.EFF_STATUS       = 'A'
AND    at1.EFFDT            = (SELECT MAX(EFFDT) FROM   PS_acct_cd_tbl WHERE  		
				acct_cd      = at1.acct_cd AND    
				SETID        = at1.SETID AND    
				EFFDT       <= $ASOFDATE)
end-select
end-procedure
!**********************************************************************************

!**********************************************************************************
begin-procedure get-jobcode-descr
#debug9 show 'get-jobcode-descr'
begin-select

jt1.descr
jt1.manager_level
jt1.eeo1code

from ps_jobcode_tbl jt1 	
where    jt1.SETID          = 'COMMN'
AND    jt1.jobcode          = $lkup_jobcode
AND    jt1.EFF_STATUS       = 'A'
AND    jt1.EFFDT            = (SELECT MAX(EFFDT) FROM   PS_jobcode_tbl WHERE  
				jobcode      = jt1.jobcode AND    
				SETID        = jt1.SETID AND 
				eff_status='A'            and 
				EFFDT       <= $ASOFDATE)
end-select
end-procedure
!**********************************************************************************
!**********************************************************************************
begin-procedure get-rgn-cd
#debug9 show 'get-rgn-cd'
begin-select

gdt1.gex_company_div_cd
gdt1.department
gdt1.gex_rgn_cd

from ps_gex_dept_tbl gdt1
where  gdt1.DEPTID          = $lkup_deptid
AND    GDT1.EFFDT           = (SELECT MAX(EFFDT) FROM   PS_GEX_DEPT_TBL WHERE	
				DEPTID       = GDT1.DEPTID AND    
				EFFDT       <= $ASOFDATE)
AND    GDT1.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM   PS_GEX_DEPT_TBL WHERE 		
				DEPTID       = GDT1.DEPTID AND    
				EFFDT        = GDT1.EFFDT)

end-select
end-procedure
!**********************************************************************************
!**********************************************************************************
begin-procedure get-mgr-level-descr
begin-select

xlat1.xlatshortname
from PSXLATITEM xlat1
where xlat1.fieldname = 'MANAGER_LEVEL'
and xlat1.fieldvalue = $mgr_level
and xlat1.eff_status = 'A' 

end-select
end-procedure
!**********************************************************************************
!**********************************************************************************
begin-procedure get-eeo1-descr
  evaluate $eeo1code
    when = '1' 
      let $eeo1_descr = 'Officials/Mgrs'
    break
    when = '2'
      let $eeo1_descr = 'Professionals'
    break
    when = '3'
      let $eeo1_descr = 'Technicians'
    break
    when = '4'
      let $eeo1_descr =  'Sales'
    break
    when = '5' 
      let $eeo1_descr = 'Office/Clerical'
    break
    when = '6'
      let $eeo1_descr = 'Skilled'
    break
    when = '7'
      let $eeo1_descr = 'Semi-skilled'
    break
    when = '8'
      let $eeo1_descr = 'Unskilled'
    break
    when = '9' 
      let $eeo1_descr = 'Service'
    break  
    when = 'N' 
      let $eeo1_descr = 'No EEO'
    break
    end-evaluate

end-procedure
!**********************************************************************************

!***********************************************************************************
begin-procedure get-operating-division
!***********************************************************************************
  
  Evaluate $div_cd
	when = 'COR'
  	when = 'GEM'
	when = 'GPH'
	when = 'RMC'
	when = 'RPH'
	when = 'WHS'
	
  	  !show '$div_cd:' $div_cd
          let $division = 'POD'
          Add 1 to  #division_POD  
	break
	
	when = 'CLC'
	when = 'CLE'
	when = 'CP3'
	when = 'CLW'

	  !show '$div_cd:' $div_cd
          let $division = 'COD'
          Add 1 to  #division_COD 
	break
        when = 'RTL'
        when = 'GGO'
        when = 'VDO' 
          evaluate &J.company
            when = 'GEI'
            when = 'RTP'
            when = 'TMK'
            when = 'FCC'	!VENDSXN Added for ITG#40111
              let $division = 'POD'
            break 
            when = 'RFI'
              let $division = 'COD'
            break
            when = 'MCC'
              !let $division = 'MOD'
              let $division = 'POD'	!VENDSXN Modified for ITG#40111
            break
          end-evaluate
        break	
	when = 'MDR'
	  !show '$div_cd:' $div_cd
          !let $division = 'MOD'
          let $division = 'POD'	!VENDSXN Modified for ITG#40111
          Add 1 to  #division_MOD
	break
	
	when = 'COC'
        when = 'COL'
          !show '$div_cd:' $div_cd
          let $division = 'COL'
          Add 1 to  #division_COL
       when-other
          Add 1 to  #division_other          
  End-evaluate

End-Procedure

!***********************************************************************************
Begin-procedure Get-evp-values
#debug9 show 'Get-evp-values'
!***********************************************************************************

begin-select
evp.gex_bus_area 
evp.BUSINESS_UNIT
evp.GEX_CEO        
evp.GEX_EVP        
evp.GEX_SVPVP      
evp.GEX_DIR        
evp.GEX_MGR        
evp.GEX_SUP        
     
  evaluate &evp.GEX_EVP
    when = '192505706'
      let $EVP_NAME = 'Minnaugh, M'
    break
    when = '181464707'
      let $EVP_NAME = 'Lucot, J'
    break
    when = '178509093'
      let $EVP_NAME = 'Karet, L'
    break
    when-other
      let $EVP_NAME = ' '
  end-evaluate

from ps_gex_evp_tbl evp
where evp.deptid = $lkup_deptid
end-select

end-procedure

!***********************************************************************************
Begin-Procedure P141-Write-file-header
!***********************************************************************************
#debug9 Show 'P141-Write-File-Header'

    Move '' To $prt_cols                                                   
    
    let $year4 = '1'
    do format-datetime($from_dt,$hdr_from_dt,{DEFMDY},'','') 
    let $year4 = '1' !GEX-TLL 04/08/2008 HCM 9.0 Upgrade 
    do format-datetime($thru_dt,$hdr_thru_dt,{DEFMDY},'','') 


    Let $Report_title = 'Promotions From: ' || $hdr_from_dt || ' To: ' || $hdr_thru_dt 
    string ' ' ' ' ' ' ' ' ' ' $Report_title by $delim into $prt_cols
    write 1 from $prt_cols Status=#filestat	

     string 'NAME' 'EFFDT' 'CO' 'PAYGRP' 'DEPT' 'DESCR' 'DIV CD' 'OPR DIV'
    'BUS AREA' 'BUS UNIT' 'GL DEPT' 'ACCT CD' 'REGION' 'STATUS' 
    'ACTION' 'DESCR' 'REASON' 'DESCR' 'UNION' 'FT/PT' 'JOBCODE' 'DESCR' 
    'STD HOURS' 'MGR LEVEL' 'EEO CD' 'TYPE'	
    'OLD SG' 'SG' 'HIRE DT' 'REHIRE DT' 'TERM DT' 'SERVICE DT'
    '   EVP NAME   ' 'CHANGE'  by $delim into $left_hdr_cols
    

     string 'NAME' 'EFFDT' 'CO' 'PAYGRP' 'DEPT' 'DESCR' 'DIV CD' 'OPR DIV' 
    'BUS AREA' 'BUS UNIT' 'GL DEPT' 'ACCT CD' 'REGION' 'STATUS' 
    'ACTION' 'DESCR' 'REASON' 'DESCR' 'UNION' 'FT/PT' 'JOBCODE' 'DESCR' 
    'STD HOURS' 'MGR LEVEL' 'EEO CD' 'TYPE'
    'OLD SG' 'SG' 'HIRE DT' 'REHIRE DT' 'TERM DT' 'SERVICE DT'
    '   EVP NAME   ' 'CHANGE'  by $delim into $right_hdr_cols

    string $left_hdr_cols ' | ' $right_hdr_cols by $delim into $prt_cols 

    write 1 from $prt_cols Status=#filestat	

  If #filestat <> 0
     Show 'Error writing file header.  Program terminating.'
     Stop
  End-If

    Move '' To $prt_cols                                                   

    Let $Report_title = 'Promotions and Hires by EVP From: ' || $hdr_from_dt || ' To: ' || $hdr_thru_dt 
    write 2 from $Report_title Status=#filestat2
    write 2 from ' ' Status=#filestat2
    string ' ' 'EVP NAME'
    by $delim into $prt_cols
    write 2 from $prt_cols Status=#filestat2	

    string 'CHANGE' 'UNKNOWN' 'Karet, L' 'Lucot, J' 'Minnaugh, M' 'Grand Total'
    by $delim into $prt_cols
    
    write 2 from $prt_cols Status=#filestat2	

  If #filestat2 <> 0
     Show 'Error writing file header#2.  Program terminating.'
     Stop
  End-If

    Move '' To $prt_cols  

	
    Let $Report_title = 'Promotions & Hires by Grade & Manager Level From: ' || $hdr_from_dt || ' To: ' || $hdr_thru_dt 
    write 3 from $Report_title Status=#filestat3
    write 3 from ' ' Status=#filestat3
    
    
    string ' ' ' ' 'New Manager Level'
    by $delim into $prt_cols
    write 3 from $prt_cols Status=#filestat3	

    string ' ' 'New SG' 'Dir - Dept' 'DirBusins' 'Mid Lvl Mg' 'Non-Mgr' 'Sr.Mgr.' 'SrVicePres' 
    'Store Dir' 'Store Mgmt' 'Store Mgr' 'Supervisor' 'Grand Total'
    by $delim into $prt_cols
    
    write 3 from $prt_cols Status=#filestat3	

  If #filestat3 <> 0
     Show 'Error writing file header#3.  Program terminating.'
     Stop
  End-If

    Move '' To $prt_cols                                                   
    
    Let $Report_title = 'Promotions & Hires by Manager Level & Grade From: ' || $hdr_from_dt || ' To: ' || $hdr_thru_dt 
    write 4 from ' ' Status=#filestat4
    
    string ' ' 'New SG'
    by $delim into $prt_cols
    write 4 from $prt_cols Status=#filestat4	

    string 'New Mgr Level' '  < 13' '  >= 13' 'Grand Total'
    by $delim into $prt_cols
    write 4 from $prt_cols Status=#filestat4	

  If #filestat4 <> 0
     Show 'Error writing file header#4.  Program terminating.'
     Stop
  End-If

    Move '' To $prt_cols  
    
    Let $Report_title = 'Promotions by Grade and Employee Type From: ' || $hdr_from_dt || ' To: ' || $hdr_thru_dt 
    write 5 from $Report_title Status=#filestat5
    write 5 from ' ' Status=#filestat5
    
    string ' ' ' ' ' ' 'DESTINATION'
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5	

    write 5 from '' Status=#filestat5
    
    string ' ' ' ' ' ' 'NEW SG / EE TYPE                                                                    '
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5	
    
    string ' ' ' ' ' ' '        < 13' ' ' '< 13 Total' '       >= 13' ' ' '>= 13 Total' 'Grand Total'
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5	

    string ' ' 'OLD SG' 'EE TYPE' '  Hourly' '  Salary' ' ' '  Hourly' '  Salary' ' ' ' '
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5	

  If #filestat5 <> 0
     Show 'Error writing file header#5.  Program terminating.'
     Stop
  End-If

    Move '' To $prt_cols 
    
    Let $Report_title = 'Promotions by Business Area From: ' || $hdr_from_dt || ' To: ' || $hdr_thru_dt 
    write 6 from $Report_title Status=#filestat6
    write 6 from ' ' Status=#filestat6
    
    string ' ' ' ' ' ' 'DESTINATION'
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6

    string ' ' ' ' 'Corp Off' 'GE Retail' '  GetGo' 'Pharmacy' '  RSC' 'Grand Total'
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6
    
  If #filestat6 <> 0
     Show 'Error writing file header#6.  Program terminating.'
     Stop
  End-If


    Move '' To $prt_cols  
    
    Let $Report_title = 'Promotions by Operating Division From: ' || $hdr_from_dt || ' To: ' || $hdr_thru_dt 
    write 7 from $Report_title Status=#filestat7
    write 7 from ' ' Status=#filestat7
    
    string '   S' ' ' ' ' 'DESTINATION'
    by $delim into $prt_cols
    write 7 from $prt_cols Status=#filestat7

    string '   O' ' ' '  COD' '  COL' '  POD' 'Grand Total'
    by $delim into $prt_cols
    write 7 from $prt_cols Status=#filestat7
    
  If #filestat7 <> 0
     Show 'Error writing file header#6.  Program terminating.'
     Stop
  End-If

End-Procedure

!***********************************************************************************
Begin-Procedure P240-Write-Record
!***********************************************************************************
#debug9 Show 'P240-Write-Record'

   If rtrim(ltrim(&jcurr.action, ' '), ' ') <> 'DEM'
     write 1 from $prt_cols Status=#filestat
     Add 1 To #recs-written 
     If #filestat <> 0
       Show 'Error writing output file1.  Program terminating.'
       Stop
     End-If
     Do Insert-Temp-Tbl
   end-if

End-Procedure

!***********************************************************************************
Begin-Procedure Insert-Temp-Tbl
!***********************************************************************************
show 'Inserting Data in Temp Table'

	
  If $prev_empl_type = ''
     Let $prev_empl_type = ' '
  End-If

  If $prev_new_grade = ''
     Let $prev_new_grade = ' '
  End-If

  If $prev_level_descr = ''
     Let $prev_level_descr = ' '
  End-If

  If $prev_bus_area = ''
     Let $prev_bus_area = ' '
  End-If
  
  If $prev_division = ''
     Let $prev_division = ' '
  End-If
  
  If $prev_bus_area = ''
     Let $prev_bus_area = ' '
  End-If
  
  If $prev_jobcode = ''
     Let $prev_jobcode = ' '
  End-if
  
  If $prev_GEX_EVP = ''
     Let $prev_GEX_EVP = ' '
  End-If
  
  If $prev_old_grade = ''
     Let $prev_old_grade = ' '
  End-If
  If $curr_evp_name = ''
     Let $curr_evp_name = ' '
  End-If
  
  If $curr_GEX_EVP = ''
     Let $curr_GEX_EVP = ' '
  End-If

Begin-Sql
INSERT INTO PS_GEX_EVP_PROMO (
			     EMPLID,
			     SERVICE_DT,
			     GEX_OLD_EFFDT,
			     EFFDT,
			     GEX_CHANGE,
			     GEX_OLD_EMPL_TYPE,
			     GEX_NEW_EMPL_TYPE,
			     GEX_PREV_NEW_GRADE,
			     GEX_CURR_NEW_GRADE,
			     GEX_OLD_MGR_LVL,
			     GEX_NEW_MGR_LVL,
			     GEX_OLD_OPR_DIV,
			     GEX_NEW_OPR_DIV,
			     GEX_OLD_BUS_AREA,
			     GEX_NEW_BUS_AREA,
			     GEX_EVP_NAME,
			     GEX_PREV_DEPTID,
			     GEX_CURR_DEPTID,
			     GEX_OLD_JOBCODE,
			     GEX_NEW_JOBCODE,
			     GEX_OLD_EVP,
			     GEX_NEW_EVP,
			     GEX_PREV_OLD_GRADE,
			     GEX_CURR_OLD_GRADE,
			     GEX_OLD_ACTION,
			     GEX_NEW_ACTION,
			     GEX_OLD_ACTN_RSN,
			     GEX_NEW_ACTN_RSN,
			     GEX_OLD_FT_PT,
			     GEX_NEW_FT_PT
			     )
		     VALUES (
		             $emplid,
		             $service_dt,
		             $prev_effdt,
		             $curr_effdt,
		             $curr_change,
		     	     $prev_empl_type,
		     	     $curr_empl_type,
		     	     $prev_new_grade,
		     	     $curr_new_grade,
		     	     $prev_level_descr,
		     	     $curr_level_descr,
		     	     $prev_division,
		     	     $curr_DIVISION,
		     	     $prev_bus_area,
		     	     $curr_bus_area,
		     	     $curr_evp_name,
		     	     $prev_deptid,
		     	     $curr_deptid,	!Added for Hipot & Gold
		     	     $prev_jobcode,	!Added for Hipot & Gold
		     	     $curr_jobcode,	!Added for Hipot & Gold
		     	     $prev_GEX_EVP,
		     	     $curr_GEX_EVP,
		     	     $prev_old_grade,
		     	     $curr_old_grade,
		     	     $prev_action,
		     	     $curr_action,
		     	     $prev_act_reas,
		     	     $curr_act_reas,
		     	     $prev_f_p_t,
		     	     $curr_f_p_t
		             )
End-Sql

End-Procedure Insert-Temp-Tbl

!***********************************************************************************
Begin-Procedure P400-Fetch-Report-Data
!***********************************************************************************
!Fetching Data for File#2 - Start
!Promotion Count
Begin-Select
Count(*) &K_Cnt

	Let #Karet_Promo_Cnt = &K_Cnt
	Let $Karet_Promo_Cnt = edit(#Karet_Promo_Cnt, '99,999')
	show '$Karet_Promo_Cnt: '$Karet_Promo_Cnt
	
FROM PS_GEX_EVP_PROMO P1
WHERE ltrim(rtrim(P1.GEX_EVP_NAME,' '),' ') = 'Karet, L'
AND ltrim(rtrim(P1.GEX_CHANGE,' '),' ') = 'PROMO'
End-Select

Begin-Select
Count(*) &L_Cnt

	Let #Lucot_Promo_Cnt = &L_Cnt
	Let $Lucot_Promo_Cnt = edit(#Lucot_Promo_Cnt, '99,999')
	show '$Lucot_Promo_Cnt: '$Lucot_Promo_Cnt
	
FROM PS_GEX_EVP_PROMO P2
WHERE ltrim(rtrim(P2.GEX_EVP_NAME,' '),' ') = 'Lucot, J'
AND ltrim(rtrim(P2.GEX_CHANGE,' '),' ') = 'PROMO'
End-Select

Begin-Select
Count(*) &M_Cnt

	Let #Minnaugh_Promo_Cnt = &M_Cnt
	Let $Minnaugh_Promo_Cnt = edit(#Minnaugh_Promo_Cnt, '99,999')
	show '$Minnaugh_Promo_Cnt: '$Minnaugh_Promo_Cnt
	
FROM PS_GEX_EVP_PROMO P3
WHERE ltrim(rtrim(P3.GEX_EVP_NAME,' '),' ') = 'Minnaugh, M'
AND ltrim(rtrim(P3.GEX_CHANGE,' '),' ') = 'PROMO'
End-Select

Begin-Select
Count(*) &U_Cnt

	Let #Unknwn_Promo_Cnt = &U_Cnt
	Let $Unknwn_Promo_Cnt = edit(#Unknwn_Promo_Cnt, '99,999')
	show '$Unknwn_Promo_Cnt: '$Unknwn_Promo_Cnt
	
FROM PS_GEX_EVP_PROMO P4
WHERE P4.GEX_EVP_NAME = ' '
AND ltrim(rtrim(P4.GEX_CHANGE,' '),' ') = 'PROMO'
End-Select

!Hire/Rehire Counts
Begin-Select
Count(*) &K_Count

	Let #Karet_Hire_Cnt = &K_Count
	Let $Karet_Hire_Cnt = edit(#Karet_Hire_Cnt, '99,999')
	show '$Karet_Hire_Cnt: '$Karet_Hire_Cnt
	
FROM PS_GEX_EVP_PROMO P1
WHERE ltrim(rtrim(P1.GEX_EVP_NAME,' '),' ') = 'Karet, L'
AND ltrim(rtrim(P1.GEX_CHANGE,' '),' ') = 'HIRE'
End-Select

Begin-Select
Count(*) &L_Count

	Let #Lucot_Hire_Cnt = &L_Count
	Let $Lucot_Hire_Cnt = edit(#Lucot_Hire_Cnt, '99,999')
	show '$Lucot_Hire_Cnt: '$Lucot_Hire_Cnt
	
FROM PS_GEX_EVP_PROMO P2
WHERE ltrim(rtrim(P2.GEX_EVP_NAME,' '),' ') = 'Lucot, J'
AND ltrim(rtrim(P2.GEX_CHANGE,' '),' ') = 'HIRE'
End-Select

Begin-Select
Count(*) &M_Count

	Let #Minnaugh_Hire_Cnt = &M_Count
	Let $Minnaugh_Hire_Cnt = edit(#Minnaugh_Hire_Cnt, '99,999')
	show '$Minnaugh_Hire_Cnt: '$Minnaugh_Hire_Cnt
	
FROM PS_GEX_EVP_PROMO P3
WHERE ltrim(rtrim(P3.GEX_EVP_NAME,' '),' ') = 'Minnaugh, M'
AND ltrim(rtrim(P3.GEX_CHANGE,' '),' ') = 'HIRE'
End-Select

Begin-Select
Count(*) &U_Count

	Let #Unknwn_Hire_Cnt = &U_Count
	Let $Unknwn_Hire_Cnt = edit(#Unknwn_Hire_Cnt, '99,999')
	show '$Unknwn_Hire_Cnt: '$Unknwn_Hire_Cnt
	
FROM PS_GEX_EVP_PROMO P4
WHERE P4.GEX_EVP_NAME = ' '
AND ltrim(rtrim(P4.GEX_CHANGE,' '),' ') = 'HIRE'
End-Select

	Let #Total_Unknwn_Cnt    = #Unknwn_Hire_Cnt + #Unknwn_Promo_Cnt
	Let $Total_Unknwn_Cnt = edit(#Total_Unknwn_Cnt, '99,999')
	Let #Total_Karet_Cnt    = #Karet_Hire_Cnt + #Karet_Promo_Cnt
	Let $Total_Karet_Cnt = edit(#Total_Karet_Cnt, '99,999')
	Let #Total_Lucot_Cnt    = #Lucot_Hire_Cnt + #Lucot_Promo_Cnt
	Let $Total_Lucot_Cnt = edit(#Total_Lucot_Cnt, '99,999')
	Let #Total_Minnaugh_Cnt = #Minnaugh_Hire_Cnt + #Minnaugh_Promo_Cnt
	Let $Total_Minnaugh_Cnt = edit(#Total_Minnaugh_Cnt, '99,999')
	Let #Grand_Total = #Total_Unknwn_Cnt+ #Total_Karet_Cnt + #Total_Lucot_Cnt + #Total_Minnaugh_Cnt
	Let $Grand_Total = edit(#Grand_Total, '99,999')
	
	Let #Total_Promo = #Unknwn_Promo_Cnt + #Karet_Promo_Cnt + #Lucot_Promo_Cnt + #Minnaugh_Promo_Cnt
	Let $Total_Promo = edit(#Total_Promo, '99,999')
	Let #Total_Hire  = #Unknwn_Hire_Cnt + #Karet_Hire_Cnt + #Lucot_Hire_Cnt + #Minnaugh_Hire_Cnt
	Let $Total_Hire = edit(#Total_Hire, '99,999')
	

      If #Total_Unknwn_Cnt = 0
	Let $Unknwn_Hire_Pct    = '0 %'
	Let $Unknwn_Promo_Pct   = '0 %'
      Else
	Let $Unknwn_Hire_Pct    = to_char(round((100 * #Unknwn_Hire_Cnt/#Total_Unknwn_Cnt),0))|| '%'
	Let $Unknwn_Promo_Pct   = to_char(round((100 * #Unknwn_Promo_Cnt/#Total_Unknwn_Cnt),0))|| '%'
      End-If

      If #Total_Karet_Cnt = 0
      	Let $Karet_Hire_Pct     = '0 %'
      	Let $Karet_Promo_Pct    = '0 %'
      Else
	Let $Karet_Hire_Pct     = to_char(round((100 * #Karet_Hire_Cnt/#Total_Karet_Cnt),0))|| '%'
	Let $Karet_Promo_Pct    = to_char(round((100 * #Karet_Promo_Cnt/#Total_Karet_Cnt),0))|| '%'
      End-If	

      If #Total_Lucot_Cnt = 0
      	Let $Lucot_Hire_Pct     = '0 %'
      	Let $Lucot_Promo_Pct    = '0 %'
      Else	
	Let $Lucot_Hire_Pct     = to_char(round((100 * #Lucot_Hire_Cnt/#Total_Lucot_Cnt),0))|| '%'
	Let $Lucot_Promo_Pct    = to_char(round((100 * #Lucot_Promo_Cnt/#Total_Lucot_Cnt),0))|| '%'
      End-If	

      If #Total_Minnaugh_Cnt = 0
      	Let $Minnaugh_Hire_Pct  = '0 %'
      	Let $Minnaugh_Promo_Pct = '0 %'
      Else      
	Let $Minnaugh_Hire_Pct  = to_char(round((100 * #Minnaugh_Hire_Cnt/#Total_Minnaugh_Cnt),0))|| '%'
	Let $Minnaugh_Promo_Pct = to_char(round((100 * #Minnaugh_Promo_Cnt/#Total_Minnaugh_Cnt),0))|| '%'
      End-If	

      If #Grand_Total = 0
      	Let $Total_Promo_Pct    = '0 %'
      	Let $Total_Hire_Pct     = '0 %'
      Else      
	Let $Total_Promo_Pct    = to_char(round((100 * #Total_Promo/#Grand_Total),0))|| '%'
	Let $Total_Hire_Pct     = to_char(round((100 * #Total_Hire/#Grand_Total),0))|| '%'
      End-If	
      
!Write Promotion Row
    Move '' To $prt_cols                                                   
    string 'PROMO' $Unknwn_Promo_Cnt $Karet_Promo_Cnt $Lucot_Promo_Cnt $Minnaugh_Promo_Cnt $Total_Promo
    by $delim into $prt_cols
    write 2 from $prt_cols Status=#filestat2	

  If #filestat2 <> 0
     Show 'Error writing file header#2.  Program terminating.'
     Stop
  End-If

!Write Hire Row
    Move '' To $prt_cols                                                   
    string 'HIRE' $Unknwn_Hire_Cnt $Karet_Hire_Cnt $Lucot_Hire_Cnt $Minnaugh_Hire_Cnt $Total_Hire
    by $delim into $prt_cols
    write 2 from $prt_cols Status=#filestat2	

  If #filestat2 <> 0
     Show 'Error writing file header#2.  Program terminating.'
     Stop
  End-If

!Write Grand Totals
    Move '' To $prt_cols                                                   
    string 'Grand Total' $Total_Unknwn_Cnt $Total_Karet_Cnt $Total_Lucot_Cnt $Total_Minnaugh_Cnt $Grand_Total
    by $delim into $prt_cols
    write 2 from $prt_cols Status=#filestat2	

  If #filestat2 <> 0
     Show 'Error writing file header#2.  Program terminating.'
     Stop
  End-If

!Write % Changes Header
    Move '' To $prt_cols                                                   
    string ' ' ' ' ' ' ' ' ' '
    by $delim into $prt_cols
    write 2 from $prt_cols Status=#filestat2	

    Move '' To $prt_cols  
    Let $Per_Hdr = '% of Changes to EVP Totals'
    write 2 from $Per_Hdr Status=#filestat2
    Move '' To $prt_cols                                                   
    string ' ' ' ' ' ' ' ' ' '
    by $delim into $prt_cols
    write 2 from $prt_cols Status=#filestat2	

!Write Second Header
    Move '' To $prt_cols                                                   
    string ' ' 'EVP NAME'
    by $delim into $prt_cols
    write 2 from $prt_cols Status=#filestat2	

    string 'CHANGE' 'UNKNOWN' 'Karet, L' 'Lucot, J' 'Minnaugh, M' 'Grand Total'
    by $delim into $prt_cols
    write 2 from $prt_cols Status=#filestat2	

  If #filestat2 <> 0
     Show 'Error writing file header#2.  Program terminating.'
     Stop
  End-If

!Write Percentage Values
!Write Promotion Row
    Move '' To $prt_cols                                                   
    string 'PROMO' $Unknwn_Promo_Pct $Karet_Promo_Pct $Lucot_Promo_Pct $Minnaugh_Promo_Pct $Total_Promo_Pct
    by $delim into $prt_cols
    write 2 from $prt_cols Status=#filestat2	

  If #filestat2 <> 0
     Show 'Error writing file header#2.  Program terminating.'
     Stop
  End-If

!Write Hire Row
    Move '' To $prt_cols                                                   
    string 'HIRE' $Unknwn_Hire_Pct $Karet_Hire_Pct $Lucot_Hire_Pct $Minnaugh_Hire_Pct $Total_Hire_Pct
    by $delim into $prt_cols
    write 2 from $prt_cols Status=#filestat2	

  If #filestat2 <> 0
     Show 'Error writing file header#2.  Program terminating.'
     Stop
  End-If
!Fetching Data for File#2 - End

!Fetching Data for File#3 - Start
!Promo with SG < 13 - Start
Begin-Select
COUNT(*) &P_LT_DD	!&Promo_LessThan_Dir-Dept

  Let #Pro_lt_DD = &P_LT_DD
  Let $Pro_lt_DD = edit(#Pro_lt_DD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Dir - Dept'
End-Select

Begin-Select
COUNT(*) &P_LT_DB

  Let #Pro_lt_DB = &P_LT_DB
  Let $Pro_lt_DB = edit(#Pro_lt_DB, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'DirBusins'
End-Select

Begin-Select
COUNT(*) &P_LT_MLM

  Let #Pro_lt_MLM = &P_LT_MLM
  Let $Pro_lt_MLM = edit(#Pro_lt_MLM, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Mid Lvl Mg'
End-Select

Begin-Select
COUNT(*) &P_LT_NM

  Let #Pro_lt_NM = &P_LT_NM
  Let $Pro_lt_NM = edit(#Pro_lt_NM, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Non-Mgr'
End-Select

Begin-Select
COUNT(*) &P_LT_SrM

  Let #Pro_lt_SrM = &P_LT_SrM
  Let $Pro_lt_SrM = edit(#Pro_lt_SrM, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Sr. Mgr.'
End-Select

Begin-Select
COUNT(*) &P_LT_SVP

  Let #Pro_lt_SVP = &P_LT_SVP
  Let $Pro_lt_SVP = edit(#Pro_lt_SVP, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'SrVicePres'
End-Select

Begin-Select
COUNT(*) &P_LT_SD

  Let #Pro_lt_SD = &P_LT_SD
  Let $Pro_lt_SD = edit(#Pro_lt_SD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Store Dir'
End-Select

Begin-Select
COUNT(*) &P_LT_StMt

  Let #Pro_lt_StMt = &P_LT_StMt
  Let $Pro_lt_StMt = edit(#Pro_lt_StMt, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Store Mgmt'
End-Select

Begin-Select
COUNT(*) &P_LT_StMr

  Let #Pro_lt_StMr = &P_LT_StMr
  Let $Pro_lt_StMr = edit(#Pro_lt_StMr, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Store Mgr'
End-Select

Begin-Select
COUNT(*) &P_LT_Sup

  Let #Pro_lt_Sup = &P_LT_Sup
  Let $Pro_lt_Sup = edit(#Pro_lt_Sup, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Supervisor'
End-Select
!Promo with SG < 13 - End

  Let #Total_Pro_lt13 = #Pro_lt_DD + #Pro_lt_DB + #Pro_lt_MLM + #Pro_lt_NM + #Pro_lt_SrM + 
  #Pro_lt_SVP + #Pro_lt_SD + #Pro_lt_StMt + #Pro_lt_StMr + #Pro_lt_Sup
  
  Let $Total_Pro_lt13 = edit(#Total_Pro_lt13, '99,999')

!Hire with SG < 13 - Start
Begin-Select
COUNT(*) &H_LT_DD	!&Hire_LessThan_Dir-Dept

  Let #Hir_lt_DD = &H_LT_DD
  Let $Hir_lt_DD = edit(#Hir_lt_DD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Dir - Dept'
End-Select

Begin-Select
COUNT(*) &H_LT_DB

  Let #Hir_lt_DB = &H_LT_DB
  Let $Hir_lt_DB = edit(#Hir_lt_DB, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'DirBusins'
End-Select

Begin-Select
COUNT(*) &H_LT_MLM

  Let #Hir_lt_MLM = &H_LT_MLM
  Let $Hir_lt_MLM = edit(#Hir_lt_MLM, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Mid Lvl Mg'
End-Select

Begin-Select
COUNT(*) &H_LT_NM

  Let #Hir_lt_NM = &H_LT_NM
  Let $Hir_lt_NM = edit(#Hir_lt_NM, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Non-Mgr'
End-Select

Begin-Select
COUNT(*) &H_LT_SrM

  Let #Hir_lt_SrM = &H_LT_SrM
  Let $Hir_lt_SrM = edit(#Hir_lt_SrM, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Sr. Mgr.'
End-Select

Begin-Select
COUNT(*) &H_LT_SVP

  Let #Hir_lt_SVP = &H_LT_SVP
  Let $Hir_lt_SVP = edit(#Hir_lt_SVP, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'SrVicePres'
End-Select

Begin-Select
COUNT(*) &H_LT_SD

  Let #Hir_lt_SD = &H_LT_SD
  Let $Hir_lt_SD = edit(#Hir_lt_SD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Store Dir'
End-Select

Begin-Select
COUNT(*) &H_LT_StMt

  Let #Hir_lt_StMt = &H_LT_StMt
  Let $Hir_lt_StMt = edit(#Hir_lt_StMt, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Store Mgmt'
End-Select

Begin-Select
COUNT(*) &H_LT_StMr

  Let #Hir_lt_StMr = &H_LT_StMr
  Let $Hir_lt_StMr = edit(#Hir_lt_StMr, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Store Mgr'
End-Select

Begin-Select
COUNT(*) &H_LT_Sup

  Let #Hir_lt_Sup = &H_LT_Sup
  Let $Hir_lt_Sup = edit(#Hir_lt_Sup, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_NEW_MGR_LVL = 'Supervisor'
End-Select
!Hire with SG < 13 - End

  Let #Total_Hir_lt13 = #Hir_lt_DD + #Hir_lt_DB + #Hir_lt_MLM + #Hir_lt_NM + #Hir_lt_SrM + 
  #Hir_lt_SVP + #Hir_lt_SD + #Hir_lt_StMt + #Hir_lt_StMr + #Hir_lt_Sup
  
  Let $Total_Hir_lt13 = edit(#Total_Hir_lt13, '99,999')

!Promo with SG >= 13 - Start
Begin-Select
COUNT(*) &P_GT_DD	!&Promo_GreaterThan_Dir-Dept

  Let #Pro_gt_DD = &P_GT_DD
  Let $Pro_gt_DD = edit(#Pro_gt_DD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Dir - Dept'
End-Select

Begin-Select
COUNT(*) &P_GT_DB

  Let #Pro_gt_DB = &P_GT_DB
  Let $Pro_gt_DB = edit(#Pro_gt_DB, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'DirBusins'
End-Select

Begin-Select
COUNT(*) &P_GT_MLM

  Let #Pro_gt_MLM = &P_GT_MLM
  Let $Pro_gt_MLM = edit(#Pro_gt_MLM, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Mid Lvl Mg'
End-Select

Begin-Select
COUNT(*) &P_GT_NM

  Let #Pro_gt_NM = &P_GT_NM
  Let $Pro_gt_NM = edit(#Pro_gt_NM, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Non-Mgr'
End-Select

Begin-Select
COUNT(*) &P_GT_SrM

  Let #Pro_gt_SrM = &P_GT_SrM
  Let $Pro_gt_SrM = edit(#Pro_gt_SrM, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Sr. Mgr.'
End-Select

Begin-Select
COUNT(*) &P_GT_SVP

  Let #Pro_gt_SVP = &P_GT_SVP
  Let $Pro_gt_SVP = edit(#Pro_gt_SVP, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'SrVicePres'
End-Select

Begin-Select
COUNT(*) &P_GT_SD

  Let #Pro_gt_SD = &P_GT_SD
  Let $Pro_gt_SD = edit(#Pro_gt_SD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Store Dir'
End-Select

Begin-Select
COUNT(*) &P_GT_StMt

  Let #Pro_gt_StMt = &P_GT_StMt
  Let $Pro_gt_StMt = edit(#Pro_gt_StMt, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Store Mgmt'
End-Select

Begin-Select
COUNT(*) &P_GT_StMr

  Let #Pro_gt_StMr = &P_GT_StMr
  Let $Pro_gt_StMr = edit(#Pro_gt_StMr, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Store Mgr'
End-Select

Begin-Select
COUNT(*) &P_GT_Sup

  Let #Pro_gt_Sup = &P_GT_Sup
  Let $Pro_gt_Sup = edit(#Pro_gt_Sup, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Supervisor'
End-Select
!Promo with SG >= 13 - End

  Let #Total_Pro_gt13 = #Pro_gt_DD + #Pro_gt_DB + #Pro_gt_MLM + #Pro_gt_NM + #Pro_gt_SrM + 
  #Pro_gt_SVP + #Pro_gt_SD + #Pro_gt_StMt + #Pro_gt_StMr + #Pro_gt_Sup
  
  Let $Total_Pro_gt13 = edit(#Total_Pro_gt13, '99,999')

!Hire with SG >= 13 - Start
Begin-Select
COUNT(*) &H_GT_DD	!&Hire_GreaterThan_Dir-Dept

  Let #Hir_gt_DD = &H_GT_DD
  Let $Hir_gt_DD = edit(#Hir_gt_DD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Dir - Dept'
End-Select

Begin-Select
COUNT(*) &H_GT_DB

  Let #Hir_gt_DB = &H_GT_DB
  Let $Hir_gt_DB = edit(#Hir_gt_DB, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'DirBusins'
End-Select

Begin-Select
COUNT(*) &H_GT_MLM

  Let #Hir_gt_MLM = &H_GT_MLM
  Let $Hir_gt_MLM = edit(#Hir_gt_MLM, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Mid Lvl Mg'
End-Select

Begin-Select
COUNT(*) &H_GT_NM

  Let #Hir_gt_NM = &H_GT_NM
  Let $Hir_gt_NM = edit(#Hir_gt_NM, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Non-Mgr'
End-Select

Begin-Select
COUNT(*) &H_GT_SrM

  Let #Hir_gt_SrM = &H_GT_SrM
  Let $Hir_gt_SrM = edit(#Hir_gt_SrM, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Sr. Mgr.'
End-Select

Begin-Select
COUNT(*) &H_GT_SVP

  Let #Hir_gt_SVP = &H_GT_SVP
  Let $Hir_gt_SVP = edit(#Hir_gt_SVP, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'SrVicePres'
End-Select

Begin-Select
COUNT(*) &H_GT_SD

  Let #Hir_gt_SD = &H_GT_SD
  Let $Hir_gt_SD = edit(#Hir_gt_SD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Store Dir'
End-Select

Begin-Select
COUNT(*) &H_GT_StMt

  Let #Hir_gt_StMt = &H_GT_StMt
  Let $Hir_gt_StMt = edit(#Hir_gt_StMt, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Store Mgmt'
End-Select

Begin-Select
COUNT(*) &H_GT_StMr

  Let #Hir_gt_StMr = &H_GT_StMr
  Let $Hir_gt_StMr = edit(#Hir_gt_StMr, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Store Mgr'
End-Select

Begin-Select
COUNT(*) &H_GT_Sup

  Let #Hir_gt_Sup = &H_GT_Sup
  Let $Hir_gt_Sup = edit(#Hir_gt_Sup, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'HIRE' 
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_NEW_MGR_LVL = 'Supervisor'
End-Select
!Hire with SG >= 13 - End

  Let #Total_Hir_gt13 = #Hir_gt_DD + #Hir_gt_DB + #Hir_gt_MLM + #Hir_gt_NM + #Hir_gt_SrM + 
  #Hir_gt_SVP + #Hir_gt_SD + #Hir_gt_StMt + #Hir_gt_StMr + #Hir_gt_Sup
  
  Let $Total_Hir_gt13 = edit(#Total_Hir_gt13, '99,999')

Let #Tot_Pro_DD   = #Pro_gt_DD   + #Pro_lt_DD
Let #Tot_Pro_DB   = #Pro_gt_DB   + #Pro_lt_DB
Let #Tot_Pro_MLM  = #Pro_gt_MLM  + #Pro_lt_MLM
Let #Tot_Pro_NM   = #Pro_gt_NM   + #Pro_lt_NM
Let #Tot_Pro_SrM  = #Pro_gt_SrM  + #Pro_lt_SrM
Let #Tot_Pro_SVP  = #Pro_gt_SVP  + #Pro_lt_SVP
Let #Tot_Pro_SD   = #Pro_gt_SD   + #Pro_lt_SD
Let #Tot_Pro_StMt = #Pro_gt_StMt + #Pro_lt_StMt
Let #Tot_Pro_StMr = #Pro_gt_StMr + #Pro_lt_StMr
Let #Tot_Pro_Sup  = #Pro_gt_Sup  + #Pro_lt_Sup

Let $Tot_Pro_DD   = edit(#Tot_Pro_DD, '99,999')
Let $Tot_Pro_DB   = edit(#Tot_Pro_DB, '99,999')
Let $Tot_Pro_MLM  = edit(#Tot_Pro_MLM, '99,999')
Let $Tot_Pro_NM   = edit(#Tot_Pro_NM, '99,999')
Let $Tot_Pro_SrM  = edit(#Tot_Pro_SrM, '99,999')
Let $Tot_Pro_SVP  = edit(#Tot_Pro_SVP, '99,999')
Let $Tot_Pro_SD   = edit(#Tot_Pro_SD, '99,999')
Let $Tot_Pro_StMt = edit(#Tot_Pro_StMt, '99,999')
Let $Tot_Pro_StMr = edit(#Tot_Pro_StMr, '99,999')
Let $Tot_Pro_Sup  = edit(#Tot_Pro_Sup, '99,999')

Let #Total_Promo = #Tot_Pro_DD + #Tot_Pro_DB + #Tot_Pro_MLM + #Tot_Pro_NM + #Tot_Pro_SrM +
#Tot_Pro_SVP + #Tot_Pro_SD + #Tot_Pro_StMt + #Tot_Pro_StMr + #Tot_Pro_Sup

Let $Total_Promo = edit(#Total_Promo, '99,999')

Let #Tot_Hir_DD   = #Hir_gt_DD   + #Hir_lt_DD
Let #Tot_Hir_DB   = #Hir_gt_DB   + #Hir_lt_DB
Let #Tot_Hir_MLM  = #Hir_gt_MLM  + #Hir_lt_MLM
Let #Tot_Hir_NM   = #Hir_gt_NM   + #Hir_lt_NM
Let #Tot_Hir_SrM  = #Hir_gt_SrM  + #Hir_lt_SrM
Let #Tot_Hir_SVP  = #Hir_gt_SVP  + #Hir_lt_SVP
Let #Tot_Hir_SD   = #Hir_gt_SD   + #Hir_lt_SD
Let #Tot_Hir_StMt = #Hir_gt_StMt + #Hir_lt_StMt
Let #Tot_Hir_StMr = #Hir_gt_StMr + #Hir_lt_StMr
Let #Tot_Hir_Sup  = #Hir_gt_Sup  + #Hir_lt_Sup

Let $Tot_Hir_DD   = edit(#Tot_Hir_DD, '99,999')
Let $Tot_Hir_DB   = edit(#Tot_Hir_DB, '99,999')
Let $Tot_Hir_MLM  = edit(#Tot_Hir_MLM, '99,999')
Let $Tot_Hir_NM   = edit(#Tot_Hir_NM, '99,999')
Let $Tot_Hir_SrM  = edit(#Tot_Hir_SrM, '99,999')
Let $Tot_Hir_SVP  = edit(#Tot_Hir_SVP, '99,999')
Let $Tot_Hir_SD   = edit(#Tot_Hir_SD, '99,999')
Let $Tot_Hir_StMt = edit(#Tot_Hir_StMt, '99,999')
Let $Tot_Hir_StMr = edit(#Tot_Hir_StMr, '99,999')
Let $Tot_Hir_Sup  = edit(#Tot_Hir_Sup, '99,999')

Let #Total_Hires = #Tot_Hir_DD + #Tot_Hir_DB + #Tot_Hir_MLM + #Tot_Hir_NM + #Tot_Hir_SrM 
+ #Tot_Hir_SVP + #Tot_Hir_SD + #Tot_Hir_StMt + #Tot_Hir_StMr + #Tot_Hir_Sup

Let $Total_Hires = edit(#Total_Hires, '99,999')

Let #Total_DD   = #Tot_Pro_DD   + #Tot_Hir_DD  
Let #Total_DB   = #Tot_Pro_DB   + #Tot_Hir_DB  
Let #Total_MLM  = #Tot_Pro_MLM  + #Tot_Hir_MLM 
Let #Total_NM   = #Tot_Pro_NM   + #Tot_Hir_NM  
Let #Total_SrM  = #Tot_Pro_SrM  + #Tot_Hir_SrM 
Let #Total_SVP  = #Tot_Pro_SVP  + #Tot_Hir_SVP 
Let #Total_SD   = #Tot_Pro_SD   + #Tot_Hir_SD  
Let #Total_StMt = #Tot_Pro_StMt + #Tot_Hir_StMt
Let #Total_StMr = #Tot_Pro_StMr + #Tot_Hir_StMr
Let #Total_Sup  = #Tot_Pro_Sup  + #Tot_Hir_Sup

Let $Total_DD   = edit(#Total_DD, '99,999')
Let $Total_DB   = edit(#Total_DB, '99,999')
Let $Total_MLM  = edit(#Total_MLM, '99,999')
Let $Total_NM   = edit(#Total_NM, '99,999')
Let $Total_SrM  = edit(#Total_SrM, '99,999')
Let $Total_SVP  = edit(#Total_SVP, '99,999')
Let $Total_SD   = edit(#Total_SD, '99,999')
Let $Total_StMt = edit(#Total_StMt, '99,999')
Let $Total_StMr = edit(#Total_StMr, '99,999')
Let $Total_Sup  = edit(#Total_Sup, '99,999')

Let #Grand_Total = #Total_Promo + #Total_Hires
Let $Grand_Total = edit(#Grand_Total, '99,999')

!Write Promotion < 13 Row
    Move '' To $prt_cols                                                   
    string 'PROMO' '< 13' $Pro_lt_DD $Pro_lt_DB $Pro_lt_MLM $Pro_lt_NM $Pro_lt_SrM 
    $Pro_lt_SVP $Pro_lt_SD $Pro_lt_StMt $Pro_lt_StMr $Pro_lt_Sup $Total_Pro_lt13
    by $delim into $prt_cols
    write 3 from $prt_cols Status=#filestat3	

  If #filestat3 <> 0
     Show 'Error writing file#3.  Program terminating.'
     Stop
  End-If

!Write Promotion >= 13 Row
    Move '' To $prt_cols                                                   
    string ' ' '>= 13' $Pro_gt_DD $Pro_gt_DB $Pro_gt_MLM $Pro_gt_NM $Pro_gt_SrM 
    $Pro_gt_SVP $Pro_gt_SD $Pro_gt_StMt $Pro_gt_StMr $Pro_gt_Sup $Total_Pro_gt13
    by $delim into $prt_cols
    write 3 from $prt_cols Status=#filestat3	

  If #filestat3 <> 0
     Show 'Error writing file#3.  Program terminating.'
     Stop
  End-If

!Write Promotion Totals
    Move '' To $prt_cols                                                   
    string 'PROMO Total' ' ' $Tot_Pro_DD $Tot_Pro_DB  $Tot_Pro_MLM $Tot_Pro_NM $Tot_Pro_SrM 
    $Tot_Pro_SVP $Tot_Pro_SD $Tot_Pro_StMt $Tot_Pro_StMr $Tot_Pro_Sup $Total_Promo
    by $delim into $prt_cols
    write 3 from $prt_cols Status=#filestat3	

  If #filestat3 <> 0
     Show 'Error writing file#3.  Program terminating.'
     Stop
  End-If

!Write Hire < 13 Row
    Move '' To $prt_cols                                                   
    string 'HIRE' '< 13' $Hir_lt_DD $Hir_lt_DB $Hir_lt_MLM $Hir_lt_NM $Hir_lt_SrM 
    $Hir_lt_SVP $Hir_lt_SD $Hir_lt_StMt $Hir_lt_StMr $Hir_lt_Sup $Total_Hir_lt13
    by $delim into $prt_cols
    write 3 from $prt_cols Status=#filestat3	

  If #filestat3 <> 0
     Show 'Error writing file#3.  Program terminating.'
     Stop
  End-If

!Write Hire >= 13 Row
    Move '' To $prt_cols                                                   
    string ' ' '>= 13' $Hir_gt_DD $Hir_gt_DB $Hir_gt_MLM $Hir_gt_NM $Hir_gt_SrM 
    $Hir_gt_SVP $Hir_gt_SD $Hir_gt_StMt $Hir_gt_StMr $Hir_gt_Sup $Total_Hir_gt13
    by $delim into $prt_cols
    write 3 from $prt_cols Status=#filestat3	

  If #filestat3 <> 0
     Show 'Error writing file#3.  Program terminating.'
     Stop
  End-If

!Write Hire Totals
    Move '' To $prt_cols                                                   
    string 'HIRE Total' ' ' $Tot_Hir_DD $Tot_Hir_DB  $Tot_Hir_MLM $Tot_Hir_NM $Tot_Hir_SrM 
    $Tot_Hir_SVP $Tot_Hir_SD $Tot_Hir_StMt $Tot_Hir_StMr $Tot_Hir_Sup $Total_Hires
    by $delim into $prt_cols
    write 3 from $prt_cols Status=#filestat3	

  If #filestat3 <> 0
     Show 'Error writing file#3.  Program terminating.'
     Stop
  End-If

!Write Grand Total
    Move '' To $prt_cols                                                   
    string 'Grand Total' ' ' $Total_DD $Total_DB $Total_MLM $Total_NM $Total_SrM $Total_SVP 
    $Total_SD $Total_StMt $Total_StMr $Total_Sup $Grand_Total
    by $delim into $prt_cols
    write 3 from $prt_cols Status=#filestat3	

  If #filestat3 <> 0
     Show 'Error writing file#3.  Program terminating.'
     Stop
  End-If
!Fetching Data for File#3 - End

!Fetching Data for File#4 - Start
Let $DD_LT13   = edit((#Pro_lt_DD   + #Hir_lt_DD), '99,999')
Let $DB_LT13   = edit((#Pro_lt_DB   + #Hir_lt_DB), '99,999')
Let $MLM_LT13  = edit((#Pro_lt_MLM  + #Hir_lt_MLM), '99,999')
Let $NM_LT13   = edit((#Pro_lt_NM   + #Hir_lt_NM), '99,999')
Let $SrM_LT13  = edit((#Pro_lt_SrM  + #Hir_lt_SrM), '99,999')
Let $SVP_LT13  = edit((#Pro_lt_SVP  + #Hir_lt_SVP), '99,999')
Let $SD_LT13   = edit((#Pro_lt_SD   + #Hir_lt_SD), '99,999')
Let $StMt_LT13 = edit((#Pro_lt_StMt + #Hir_lt_StMt), '99,999')
Let $StMr_LT13 = edit((#Pro_lt_StMr + #Hir_lt_StMr), '99,999')
Let $Sup_LT13  = edit((#Pro_lt_Sup  + #Hir_lt_Sup), '99,999')

Let $DD_GT13   = edit((#Pro_gt_DD   + #Hir_gt_DD), '99,999')
Let $DB_GT13   = edit((#Pro_gt_DB   + #Hir_gt_DB), '99,999')
Let $MLM_GT13  = edit((#Pro_gt_MLM  + #Hir_gt_MLM), '99,999')
Let $NM_GT13   = edit((#Pro_gt_NM   + #Hir_gt_NM), '99,999')
Let $SrM_GT13  = edit((#Pro_gt_SrM  + #Hir_gt_SrM), '99,999')
Let $SVP_GT13  = edit((#Pro_gt_SVP  + #Hir_gt_SVP), '99,999')
Let $SD_GT13   = edit((#Pro_gt_SD   + #Hir_gt_SD), '99,999')
Let $StMt_GT13 = edit((#Pro_gt_StMt + #Hir_gt_StMt), '99,999')
Let $StMr_GT13 = edit((#Pro_gt_StMr + #Hir_gt_StMr), '99,999')
Let $Sup_GT13  = edit((#Pro_gt_Sup  + #Hir_gt_Sup), '99,999')

Let $Total_LT13 = edit((#Total_Pro_lt13 + #Total_Hir_lt13), '99,999')
Let $Total_GT13 = edit((#Total_Pro_gt13 + #Total_Hir_gt13), '99,999')
  
    Move '' To $prt_cols                                                   
    string 'Dir - Dept' $DD_LT13 $DD_GT13 $Total_DD by $delim into $prt_cols
    write 4 from $prt_cols Status=#filestat4	

    string 'DirBusins' $DB_LT13 $DB_GT13 $Total_DB by $delim into $prt_cols
    write 4 from $prt_cols Status=#filestat4	

    string 'Mid Lvl Mg' $MLM_LT13 $MLM_GT13 $Total_MLM by $delim into $prt_cols
    write 4 from $prt_cols Status=#filestat4	

    string 'Non-Mgr' $NM_LT13 $NM_GT13 $Total_NM by $delim into $prt_cols
    write 4 from $prt_cols Status=#filestat4	

    string 'Sr. Mgr.' $SrM_LT13 $SrM_GT13 $Total_SrM by $delim into $prt_cols
    write 4 from $prt_cols Status=#filestat4	
    
    string 'SrVicePres' $SVP_LT13 $SVP_GT13 $Total_SVP by $delim into $prt_cols
    write 4 from $prt_cols Status=#filestat4	
    
    string 'Store Dir' $SD_LT13 $SD_GT13 $Total_SD by $delim into $prt_cols
    write 4 from $prt_cols Status=#filestat4	
    
    string 'Store Mgmt' $StMt_LT13 $StMt_GT13 $Total_StMt by $delim into $prt_cols
    write 4 from $prt_cols Status=#filestat4	
    
    string 'Store Mgr' $StMr_LT13 $StMr_GT13 $Total_StMr by $delim into $prt_cols
    write 4 from $prt_cols Status=#filestat4	
    
    string 'Supervisor' $Sup_LT13 $Sup_GT13 $Total_Sup by $delim into $prt_cols
    write 4 from $prt_cols Status=#filestat4	

    string 'Grand Total' $Total_LT13 $Total_GT13 $Grand_Total by $delim into $prt_cols
    write 4 from $prt_cols Status=#filestat4	

  If #filestat4 <> 0
     Show 'Error writing file#4.  Program terminating.'
     Stop
  End-If

!Fetching Data for File#4 - End

!Fetching Data for File#5 - Start

!Fetching < 13 to < 13 Promotion Rows
Begin-Select
COUNT(*) &LtLtHH	!LtLtHH -> Less Than to Less Than Hourly to Hourly

   Let #LtH_to_LtH = &LtLtHH
   Let $LtH_to_LtH = edit(#LtH_to_LtH, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '< 13'
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_OLD_EMPL_TYPE = 'H'
AND GEX_NEW_EMPL_TYPE = 'H'
End-Select

Begin-Select
COUNT(*) &LtLtHS

   Let #LtH_to_LtS = &LtLtHS
   Let $LtH_to_LtS = edit(#LtH_to_LtS, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '< 13'
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_OLD_EMPL_TYPE = 'H'
AND GEX_NEW_EMPL_TYPE = 'S'
End-Select

Begin-Select
COUNT(*) &LtLtSH

   Let #LtS_to_LtH = &LtLtSH
   Let $LtS_to_LtH = edit(#LtS_to_LtH, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '< 13'
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_OLD_EMPL_TYPE = 'S'
AND GEX_NEW_EMPL_TYPE = 'H'
End-Select

Begin-Select
COUNT(*) &LtLtSS

   Let #LtS_to_LtS = &LtLtSS
   Let $LtS_to_LtS = edit(#LtS_to_LtS, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '< 13'
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_OLD_EMPL_TYPE = 'S'
AND GEX_NEW_EMPL_TYPE = 'S'
End-Select

!Fetching < 13 to >= 13 Promotion Rows
Begin-Select
COUNT(*) &LtGtHH

   Let #LtH_to_GtH = &LtGtHH
   Let $LtH_to_GtH = edit(#LtH_to_GtH, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '< 13'
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_OLD_EMPL_TYPE = 'H'
AND GEX_NEW_EMPL_TYPE = 'H'
End-Select

Begin-Select
COUNT(*) &LtGtHS

   Let #LtH_to_GtS = &LtGtHS
   Let $LtH_to_GtS = edit(#LtH_to_GtS, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '< 13'
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_OLD_EMPL_TYPE = 'H'
AND GEX_NEW_EMPL_TYPE = 'S'
End-Select

Begin-Select
COUNT(*) &LtGtSH

   Let #LtS_to_GtH = &LtGtSH
   Let $LtS_to_GtH = edit(#LtS_to_GtH, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '< 13'
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_OLD_EMPL_TYPE = 'S'
AND GEX_NEW_EMPL_TYPE = 'H'
End-Select

Begin-Select
COUNT(*) &LtGtSS

   Let #LtS_to_GtS = &LtGtSS
   Let $LtS_to_GtS = edit(#LtS_to_GtS, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '< 13'
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_OLD_EMPL_TYPE = 'S'
AND GEX_NEW_EMPL_TYPE = 'S'
End-Select

!Fetching >= 13 to < 13 Promotion Rows
Begin-Select
COUNT(*) &GtLtHH

   Let #GtH_to_LtH = &GtLtHH
   Let $GtH_to_LtH = edit(#GtH_to_LtH, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '>= 13'
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_OLD_EMPL_TYPE = 'H'
AND GEX_NEW_EMPL_TYPE = 'H'
End-Select

Begin-Select
COUNT(*) &GtLtHS

   Let #GtH_to_LtS = &GtLtHS
   Let $GtH_to_LtS = edit(#GtH_to_LtS, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '>= 13'
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_OLD_EMPL_TYPE = 'H'
AND GEX_NEW_EMPL_TYPE = 'S'
End-Select

Begin-Select
COUNT(*) &GtLtSH

   Let #GtS_to_LtH = &GtLtSH
   Let $GtS_to_LtH = edit(#GtS_to_LtH, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '>= 13'
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_OLD_EMPL_TYPE = 'S'
AND GEX_NEW_EMPL_TYPE = 'H'
End-Select

Begin-Select
COUNT(*) &GtLtSS

   Let #GtS_to_LtS = &GtLtSS
   Let $GtS_to_LtS = edit(#GtS_to_LtS, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '>= 13'
AND GEX_CURR_NEW_GRADE = '< 13'
AND GEX_OLD_EMPL_TYPE = 'S'
AND GEX_NEW_EMPL_TYPE = 'S'
End-Select

!Fetching >= 13 to >= 13 Promotion Rows
Begin-Select
COUNT(*) &GtGtHH

   Let #GtH_to_GtH = &GtGtHH
   Let $GtH_to_GtH = edit(#GtH_to_GtH, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '>= 13'
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_OLD_EMPL_TYPE = 'H'
AND GEX_NEW_EMPL_TYPE = 'H'
End-Select

Begin-Select
COUNT(*) &GtGtHS

   Let #GtH_to_GtS = &GtGtHS
   Let $GtH_to_GtS = edit(#GtH_to_GtS, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '>= 13'
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_OLD_EMPL_TYPE = 'H'
AND GEX_NEW_EMPL_TYPE = 'S'
End-Select

Begin-Select
COUNT(*) &GtGtSH

   Let #GtS_to_GtH = &GtGtSH
   Let $GtS_to_GtH = edit(#GtS_to_GtH, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '>= 13'
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_OLD_EMPL_TYPE = 'S'
AND GEX_NEW_EMPL_TYPE = 'H'
End-Select

Begin-Select
COUNT(*) &GtGtSS

   Let #GtS_to_GtS = &GtGtSS
   Let $GtS_to_GtS = edit(#GtS_to_GtS, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_PREV_NEW_GRADE = '>= 13'
AND GEX_CURR_NEW_GRADE = '>= 13'
AND GEX_OLD_EMPL_TYPE = 'S'
AND GEX_NEW_EMPL_TYPE = 'S'
End-Select

!------------------Row#1,2----------------------------
Let #Tot_LtH_to_Lt = #LtH_to_LtH + #LtH_to_LtS
Let $Tot_LtH_to_Lt = edit(#Tot_LtH_to_Lt, '99,999')

Let #Tot_LtS_to_Lt = #LtS_to_LtH + #LtS_to_LtS
Let $Tot_LtS_to_Lt = edit(#Tot_LtS_to_Lt, '99,999')

Let #Tot_LtH_to_Gt = #LtH_to_GtH + #LtH_to_GtS
Let $Tot_LtH_to_Gt = edit(#Tot_LtH_to_Gt, '99,999')

Let #Tot_LtS_to_Gt = #LtS_to_GtH + #LtS_to_GtS
Let $Tot_LtS_to_Gt = edit(#Tot_LtS_to_Gt, '99,999')

Let #Grand_Total_LtH = #Tot_LtH_to_Lt + #Tot_LtH_to_Gt
Let $Grand_Total_LtH = edit(#Grand_Total_LtH, '99,999')

Let #Grand_Total_LtS = #Tot_LtS_to_Lt + #Tot_LtS_to_Gt
Let $Grand_Total_LtS = edit(#Grand_Total_LtS, '99,999')
!------------------Row#1,2----------------------------

!==================Row#3============================
Let #Tot_Lt_to_LtH = #LtH_to_LtH + #LtS_to_LtH
Let $Tot_Lt_to_LtH = edit(#Tot_Lt_to_LtH, '99,999')

Let #Tot_Lt_to_LtS = #LtH_to_LtS + #LtS_to_LtS
Let $Tot_Lt_to_LtS = edit(#Tot_Lt_to_LtS, '99,999')

Let #Tot_Lt_to_GtH = #LtH_to_GtH + #LtS_to_GtH
Let $Tot_Lt_to_GtH = edit(#Tot_Lt_to_GtH, '99,999')

Let #Tot_Lt_to_GtS = #LtH_to_GtS + #LtS_to_GtS
Let $Tot_Lt_to_GtS = edit(#Tot_Lt_to_GtS, '99,999')

Let #Tot_Lt_to_Lt = #Tot_Lt_to_LtH + #Tot_Lt_to_LtS
Let $Tot_Lt_to_Lt = edit (#Tot_Lt_to_Lt, '99,999')

Let #Tot_Lt_to_Gt = #Tot_Lt_to_GtH + #Tot_Lt_to_GtS
Let $Tot_Lt_to_Gt = edit (#Tot_Lt_to_Gt, '99,999')

Let #Grand_From_Lt = #Tot_Lt_to_Lt + #Tot_Lt_to_Gt
Let $Grand_From_Lt = edit(#Grand_From_Lt, '99,999')
!==================Row#3============================

!------------------Row#4,5----------------------------
Let #Tot_GtH_to_Lt = #GtH_to_LtH + #GtH_to_LtS
Let $Tot_GtH_to_Lt = edit(#Tot_GtH_to_Lt, '99,999')

Let #Tot_GtS_to_Lt = #GtS_to_LtH + #GtS_to_LtS
Let $Tot_GtS_to_Lt = edit(#Tot_GtS_to_Lt, '99,999')

Let #Tot_GtH_to_Gt = #GtH_to_GtH + #GtH_to_GtS
Let $Tot_GtH_to_Gt = edit(#Tot_GtH_to_Gt, '99,999')

Let #Tot_GtS_to_Gt = #GtS_to_GtH + #GtS_to_GtS
Let $Tot_GtS_to_Gt = edit(#Tot_GtS_to_Gt, '99,999')

Let #Grand_Total_GtH = #Tot_GtH_to_Lt + #Tot_GtH_to_Gt
Let $Grand_Total_GtH = edit(#Grand_Total_GtH, '99,999')

Let #Grand_Total_GtS = #Tot_GtS_to_Lt + #Tot_GtS_to_Gt
Let $Grand_Total_GtS = edit(#Grand_Total_GtS, '99,999')
!------------------Row#4,5----------------------------

!==================Row#6============================
Let #Tot_Gt_to_LtH = #GtH_to_LtH + #GtS_to_LtH
Let $Tot_Gt_to_LtH = edit(#Tot_Gt_to_LtH, '99,999')

Let #Tot_Gt_to_LtS = #GtH_to_LtS + #GtS_to_LtS
Let $Tot_Gt_to_LtS = edit(#Tot_Gt_to_LtS, '99,999')

Let #Tot_Gt_to_GtH = #GtH_to_GtH + #GtS_to_GtH
Let $Tot_Gt_to_GtH = edit(#Tot_Gt_to_GtH, '99,999')

Let #Tot_Gt_to_GtS = #GtH_to_GtS + #GtS_to_GtS
Let $Tot_Gt_to_GtS = edit(#Tot_Gt_to_GtS, '99,999')

Let #Tot_Gt_to_Lt = #Tot_Gt_to_LtH + #Tot_Gt_to_LtS
Let $Tot_Gt_to_Lt = edit (#Tot_Gt_to_Lt, '99,999')

Let #Tot_Gt_to_Gt = #Tot_Gt_to_GtH + #Tot_Gt_to_GtS
Let $Tot_Gt_to_Gt = edit (#Tot_Gt_to_Gt, '99,999')

Let #Grand_From_Gt = #Tot_Gt_to_Lt + #Tot_Gt_to_Gt
Let $Grand_From_Gt = edit(#Grand_From_Gt, '99,999')
!==================Row#6============================

!------------------Row#7----------------------------
Let #Grand_to_LtH = #Tot_Lt_to_LtH + #Tot_Gt_to_LtH 
Let $Grand_to_LtH = edit(#Grand_to_LtH, '99,999')

Let #Grand_to_LtS = #Tot_Lt_to_LtS + #Tot_Gt_to_LtS 
Let $Grand_to_LtS = edit(#Grand_to_LtS, '99,999')

Let #Grand_to_Lt  = #Tot_Lt_to_Lt + #Tot_Gt_to_Lt
Let $Grand_to_Lt  = edit(#Grand_to_Lt, '99,999')

Let #Grand_to_GtH = #Tot_Lt_to_GtH + #Tot_Gt_to_GtH 
Let $Grand_to_GtH = edit(#Grand_to_GtH, '99,999')

Let #Grand_to_GtS = #Tot_Lt_to_GtS + #Tot_Gt_to_GtS 
Let $Grand_to_GtS = edit(#Grand_to_GtS, '99,999')

Let #Grand_to_Gt  = #Tot_Lt_to_Gt + #Tot_Gt_to_Gt
Let $Grand_to_Gt  = edit(#Grand_to_Gt, '99,999')

Let #Grand_Total  = #Grand_From_Lt + #Grand_From_Gt
Let $Grand_Total  = edit(#Grand_Total, '99,999')
!------------------Row#7----------------------------

    Move '' To $prt_cols
    string '    S' ' < 13' 'Hourly' $LtH_to_LtH $LtH_to_LtS $Tot_LtH_to_Lt $LtH_to_GtH $LtH_to_GtS $Tot_LtH_to_Gt $Grand_Total_LtH
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5	

    string '    O' ' ' 'Salary' $LtS_to_LtH $LtS_to_LtS $Tot_LtS_to_Lt $LtS_to_GtH $LtS_to_GtS $Tot_LtS_to_Gt $Grand_Total_LtS
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5	

    string '    U' '< 13 Total ' ' ' $Tot_Lt_to_LtH $Tot_Lt_to_LtS $Tot_Lt_to_Lt $Tot_Lt_to_GtH $Tot_Lt_to_GtS $Tot_Lt_to_Gt $Grand_From_Lt
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5	

    string '    R' ' >= 13' 'Hourly' $GtH_to_LtH $GtH_to_LtS $Tot_GtH_to_Lt $GtH_to_GtH $GtH_to_GtS $Tot_GtH_to_Gt $Grand_Total_GtH
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5	

    string '    C' ' ' 'Salary' $GtS_to_LtH $GtS_to_LtS $Tot_GtS_to_Lt $GtS_to_GtH $GtS_to_GtS $Tot_GtS_to_Gt $Grand_Total_GtS
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5	

    string '    E' '>= 13 Total ' ' ' $Tot_Gt_to_LtH $Tot_Gt_to_LtS $Tot_Gt_to_Lt $Tot_Gt_to_GtH $Tot_Gt_to_GtS $Tot_Gt_to_Gt $Grand_From_Gt
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5	

    string ' ' 'Grand Total ' ' ' $Grand_to_LtH $Grand_to_LtS $Grand_to_Lt $Grand_to_GtH $Grand_to_GtS $Grand_to_Gt $Grand_Total
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5	

    write 5 from '' Status=#filestat5
    write 5 from '' Status=#filestat5

    string ' ' '% of Hourly to Salary Promotions: '
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5
    
    	
    	If #Grand_to_GtS = 0
    	  Let $Per_LtH_to_GtS = '0 %'
    	  Let $Per_GtS_to_GtS = '0 %'
    	Else
    	  Let $Per_LtH_to_GtS = to_char(round((100 * #LtH_to_GtS / #Grand_to_GtS),0)) || '%'
    	  Let $Per_GtS_to_GtS = to_char(round((100 * #GtS_to_GtS / #Grand_to_GtS),0)) || '%'
        End-If
        
    string ' ' ' ' 'From < 13 To >= 13' $Per_LtH_to_GtS
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5

    write 5 from '' Status=#filestat5
    
    string ' ' '% of Salary to Salary Promotions: '
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5
    
    string ' ' ' ' 'From / To >= 13' $Per_GtS_to_GtS
    by $delim into $prt_cols
    write 5 from $prt_cols Status=#filestat5

  If #filestat5 <> 0
     Show 'Error writing file header#5.  Program terminating.'
     Stop
  End-If
       
!Fetching Data for File#5 - End

!Fetching Data for File#6 - Start
!Getting Row#1 Data - Start
Begin-Select
COUNT(*) &CtoC

   Let #Corp_to_Corp = &CtoC
   Let $Corp_to_Corp = edit(#Corp_to_Corp, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'Corp Off'
AND GEX_NEW_BUS_AREA = 'Corp Off'
End-Select

Begin-Select
COUNT(*) &CtoGr

   Let #Corp_to_GRtl = &CtoGr
   Let $Corp_to_GRtl = edit(#Corp_to_GRtl, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'Corp Off'
AND GEX_NEW_BUS_AREA = 'GE Retail'
End-Select

Begin-Select
COUNT(*) &CtoGg

   Let #Corp_to_GtGo = &CtoGg
   Let $Corp_to_GtGo = edit(#Corp_to_GtGo, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'Corp Off'
AND GEX_NEW_BUS_AREA = 'GetGo'
End-Select

Begin-Select
COUNT(*) &CtoP

   Let #Corp_to_Phrm = &CtoP
   Let $Corp_to_Phrm = edit(#Corp_to_Phrm, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'Corp Off'
AND GEX_NEW_BUS_AREA = 'Pharmacy'
End-Select

Begin-Select
COUNT(*) &CtoR

   Let #Corp_to_Rsc = &CtoR
   Let $Corp_to_Rsc = edit(#Corp_to_Rsc, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'Corp Off'
AND GEX_NEW_BUS_AREA = 'RSC'
End-Select

Let #Tot_Frm_Corp = #Corp_to_Corp + #Corp_to_GRtl + #Corp_to_GtGo + #Corp_to_Phrm + #Corp_to_Rsc
Let $Tot_Frm_Corp = edit(#Tot_Frm_Corp, '99,999')
!Getting Row#1 Data - End

!Getting Row#2 Data - Start
Begin-Select
COUNT(*) &GrToC

   Let #GRtl_to_Corp = &GrToC
   Let $GRtl_to_Corp = edit(#GRtl_to_Corp, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'GE Retail'
AND GEX_NEW_BUS_AREA = 'Corp Off'
End-Select

Begin-Select
COUNT(*) &GrToGr

   Let #GRtl_to_GRtl = &GrToGr
   Let $GRtl_to_GRtl = edit(#GRtl_to_GRtl, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'GE Retail'
AND GEX_NEW_BUS_AREA = 'GE Retail'
End-Select

Begin-Select
COUNT(*) &GrToGg

   Let #GRtl_to_GtGo = &GrToGg
   Let $GRtl_to_GtGo = edit(#GRtl_to_GtGo, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'GE Retail'
AND GEX_NEW_BUS_AREA = 'GetGo'
End-Select

Begin-Select
COUNT(*) &GrToP

   Let #GRtl_to_Phrm = &GrToP
   Let $GRtl_to_Phrm = edit(#GRtl_to_Phrm, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'GE Retail'
AND GEX_NEW_BUS_AREA = 'Pharmacy'
End-Select

Begin-Select
COUNT(*) &GrToR

   Let #GRtl_to_Rsc = &GrToR
   Let $GRtl_to_Rsc = edit(#GRtl_to_Rsc, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'GE Retail'
AND GEX_NEW_BUS_AREA = 'RSC'
End-Select

Let #Tot_Frm_GRtl = #GRtl_to_Corp + #GRtl_to_GRtl + #GRtl_to_GtGo + #GRtl_to_Phrm + #GRtl_to_Rsc
Let $Tot_Frm_GRtl = edit(#Tot_Frm_GRtl, '99,999')

!Getting Row#2 Data - End

!Getting Row#3 Data - Start
Begin-Select
COUNT(*) &GgToC

   Let #GtGo_to_Corp = &GgToC
   Let $GtGo_to_Corp = edit(#GtGo_to_Corp, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'GetGo'
AND GEX_NEW_BUS_AREA = 'Corp Off'
End-Select

Begin-Select
COUNT(*) &GgToGr

   Let #GtGo_to_GRtl = &GgToGr
   Let $GtGo_to_GRtl = edit(#GtGo_to_GRtl, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'GetGo'
AND GEX_NEW_BUS_AREA = 'GE Retail'
End-Select

Begin-Select
COUNT(*) &GgToGg

   Let #GtGo_to_GtGo = &GgToGg
   Let $GtGo_to_GtGo = edit(#GtGo_to_GtGo, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'GetGo'
AND GEX_NEW_BUS_AREA = 'GetGo'
End-Select

Begin-Select
COUNT(*) &GgToP

   Let #GtGo_to_Phrm = &GgToP
   Let $GtGo_to_Phrm = edit(#GtGo_to_Phrm, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'GetGo'
AND GEX_NEW_BUS_AREA = 'Pharmacy'
End-Select

Begin-Select
COUNT(*) &GgToR

   Let #GtGo_to_Rsc = &GgToR
   Let $GtGo_to_Rsc = edit(#GtGo_to_Rsc, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'GetGo'
AND GEX_NEW_BUS_AREA = 'RSC'
End-Select

Let #Tot_Frm_GtGo = #GtGo_to_Corp + #GtGo_to_GRtl + #GtGo_to_GtGo + #GtGo_to_Phrm + #GtGo_to_Rsc
Let $Tot_Frm_GtGo = edit(#Tot_Frm_GtGo, '99,999')

!Getting Row#3 Data - End

!Getting Row#4 Data - Start
Begin-Select
COUNT(*) &PToC

   Let #Phrm_to_Corp = &PToC
   Let $Phrm_to_Corp = edit(#Phrm_to_Corp, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'Pharmacy'
AND GEX_NEW_BUS_AREA = 'Corp Off'
End-Select

Begin-Select
COUNT(*) &PToGr

   Let #Phrm_to_GRtl = &PToGr
   Let $Phrm_to_GRtl = edit(#Phrm_to_GRtl, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'Pharmacy'
AND GEX_NEW_BUS_AREA = 'GE Retail'
End-Select

Begin-Select
COUNT(*) &PToGg

   Let #Phrm_to_GtGo = &PToGg
   Let $Phrm_to_GtGo = edit(#Phrm_to_GtGo, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'Pharmacy'
AND GEX_NEW_BUS_AREA = 'GetGo'
End-Select

Begin-Select
COUNT(*) &PToP

   Let #Phrm_to_Phrm = &PToP
   Let $Phrm_to_Phrm = edit(#Phrm_to_Phrm, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'Pharmacy'
AND GEX_NEW_BUS_AREA = 'Pharmacy'
End-Select

Begin-Select
COUNT(*) &PToR

   Let #Phrm_to_Rsc = &PToR
   Let $Phrm_to_Rsc = edit(#Phrm_to_Rsc, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'Pharmacy'
AND GEX_NEW_BUS_AREA = 'RSC'
End-Select

Let #Tot_Frm_Phrm = #Phrm_to_Corp + #Phrm_to_GRtl + #Phrm_to_GtGo + #Phrm_to_Phrm + #Phrm_to_Rsc
Let $Tot_Frm_Phrm = edit(#Tot_Frm_Phrm, '99,999')

!Getting Row#4 Data - End

!Getting Row#5 Data - Start
Begin-Select
COUNT(*) &RToC

   Let #Rsc_to_Corp = &RToC
   Let $Rsc_to_Corp = edit(#Rsc_to_Corp, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'RSC'
AND GEX_NEW_BUS_AREA = 'Corp Off'
End-Select

Begin-Select
COUNT(*) &RToGr

   Let #Rsc_to_GRtl = &RToGr
   Let $Rsc_to_GRtl = edit(#Rsc_to_GRtl, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'RSC'
AND GEX_NEW_BUS_AREA = 'GE Retail'
End-Select

Begin-Select
COUNT(*) &RToGg

   Let #Rsc_to_GtGo = &RToGg
   Let $Rsc_to_GtGo = edit(#Rsc_to_GtGo, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'RSC'
AND GEX_NEW_BUS_AREA = 'GetGo'
End-Select

Begin-Select
COUNT(*) &RToP

   Let #Rsc_to_Phrm = &RToP
   Let $Rsc_to_Phrm = edit(#Rsc_to_Phrm, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'RSC'
AND GEX_NEW_BUS_AREA = 'Pharmacy'
End-Select

Begin-Select
COUNT(*) &RToR

   Let #Rsc_to_Rsc = &RToR
   Let $Rsc_to_Rsc = edit(#Rsc_to_Rsc, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO' 
AND GEX_OLD_BUS_AREA = 'RSC'
AND GEX_NEW_BUS_AREA = 'RSC'
End-Select

Let #Tot_Frm_Rsc = #Rsc_to_Corp + #Rsc_to_GRtl + #Rsc_to_GtGo + #Rsc_to_Phrm + #Rsc_to_Rsc
Let $Tot_Frm_Rsc = edit(#Tot_Frm_Rsc, '99,999')

!Getting Row#5 Data - End

!Getting Row#6 Data - Start
Let #Total_Corp = #Corp_to_Corp + #GRtl_to_Corp + #GtGo_to_Corp + #Phrm_to_Corp + #Rsc_to_Corp
Let $Total_Corp = edit(#Total_Corp, '99,999')

Let #Total_GRtl = #Corp_to_GRtl + #GRtl_to_GRtl + #GtGo_to_GRtl + #Phrm_to_GRtl + #Rsc_to_GRtl
Let $Total_GRtl = edit(#Total_GRtl, '99,999')

Let #Total_GtGo = #Corp_to_GtGo + #GRtl_to_GtGo + #GtGo_to_GtGo + #Phrm_to_GtGo + #Rsc_to_GtGo
Let $Total_GtGo = edit(#Total_GtGo, '99,999')

Let #Total_Phrm = #Corp_to_Phrm + #GRtl_to_Phrm + #GtGo_to_Phrm + #Phrm_to_Phrm + #Rsc_to_Phrm
Let $Total_Phrm = edit(#Total_Phrm, '99,999')

Let #Total_Rsc  = #Corp_to_Rsc  + #GRtl_to_Rsc  + #GtGo_to_Rsc  + #Phrm_to_Rsc  + #Rsc_to_Rsc
Let $Total_Rsc  = edit(#Total_Rsc, '99,999')

Let $Grand_Total = edit((#Total_Corp + #Total_GRtl + #Total_GtGo + #Total_Phrm + #Total_Rsc), '99,999')
!Getting Row#6 Data - End

!Writing Row# 1 to 6 - Start
    Move '' To $prt_cols

    string '   S' 'Corp Off' $Corp_to_Corp $Corp_to_GRtl $Corp_to_GtGo $Corp_to_Phrm $Corp_to_Rsc $Tot_Frm_Corp
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6
    
    string '   O' 'GE Retail' $GRtl_to_Corp $GRtl_to_GRtl $GRtl_to_GtGo $GRtl_to_Phrm $GRtl_to_Rsc $Tot_Frm_GRtl
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6

    string '   U' 'GetGo' $GtGo_to_Corp $GtGo_to_GRtl $GtGo_to_GtGo $GtGo_to_Phrm $GtGo_to_Rsc $Tot_Frm_GtGo
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6

    string '   R' 'Pharmacy' $Phrm_to_Corp $Phrm_to_GRtl $Phrm_to_GtGo $Phrm_to_Phrm $Phrm_to_Rsc $Tot_Frm_Phrm
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6

    string '   C' 'RSC' $Rsc_to_Corp $Rsc_to_GRtl $Rsc_to_GtGo $Rsc_to_Phrm $Rsc_to_Rsc $Tot_Frm_Rsc
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6

    string '   E' 'Grand Total ' $Total_Corp $Total_GRtl $Total_GtGo $Total_Phrm $Total_Rsc $Grand_Total
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6
!Writing Row#1 to 6 - End

    Move '' To $prt_cols
    write 6 from '' Status=#filestat6
    Let $Per_Hdr = '% of Promotions to Destination Business Area Totals'
    write 6 from $Per_Hdr Status=#filestat6
    
    write 6 from '' Status=#filestat6

    string ' ' ' ' ' ' 'DESTINATION  '
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6

    string '   S' ' ' 'Corp Off' 'GE Retail' '  GetGo' 'Pharmacy' '  RSC'
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6
    
! % Calculations - Start
 If #Total_Corp = 0
   Let $Per_Corp_to_Corp = '0 %'
   Let $Per_GRtl_to_Corp = '0 %'
   Let $Per_GtGo_to_Corp = '0 %'
   Let $Per_Phrm_to_Corp = '0 %'
   Let $Per_Rsc_to_Corp  = '0 %'
 Else
   Let $Per_Corp_to_Corp = to_char(round((100 * #Corp_to_Corp / #Total_Corp),0)) || '%'
   Let $Per_GRtl_to_Corp = to_char(round((100 * #GRtl_to_Corp / #Total_Corp),0)) || '%'
   Let $Per_GtGo_to_Corp = to_char(round((100 * #GtGo_to_Corp / #Total_Corp),0)) || '%'
   Let $Per_Phrm_to_Corp = to_char(round((100 * #Phrm_to_Corp / #Total_Corp),0)) || '%'
   Let $Per_Rsc_to_Corp  = to_char(round((100 * #Rsc_to_Corp / #Total_Corp),0)) || '%'
 End-If
 
 If #Total_GRtl = 0
   Let $Per_Corp_to_GRtl = '0 %'
   Let $Per_GRtl_to_GRtl = '0 %'
   Let $Per_GtGo_to_GRtl = '0 %'
   Let $Per_Phrm_to_GRtl = '0 %'
   Let $Per_Rsc_to_GRtl  = '0 %'
 Else
   Let $Per_Corp_to_GRtl = to_char(round((100 * #Corp_to_GRtl / #Total_GRtl),0)) || '%'
   Let $Per_GRtl_to_GRtl = to_char(round((100 * #GRtl_to_GRtl / #Total_GRtl),0)) || '%'
   Let $Per_GtGo_to_GRtl = to_char(round((100 * #GtGo_to_GRtl / #Total_GRtl),0)) || '%'
   Let $Per_Phrm_to_GRtl = to_char(round((100 * #Phrm_to_GRtl / #Total_GRtl),0)) || '%'
   Let $Per_Rsc_to_GRtl  = to_char(round((100 * #Rsc_to_GRtl / #Total_GRtl),0)) || '%'
 End-If

 If #Total_GtGo = 0
   Let $Per_Corp_to_GtGo = '0 %'
   Let $Per_GRtl_to_GtGo = '0 %'
   Let $Per_GtGo_to_GtGo = '0 %'
   Let $Per_Phrm_to_GtGo = '0 %'
   Let $Per_Rsc_to_GtGo  = '0 %'
 Else
   Let $Per_Corp_to_GtGo = to_char(round((100 * #Corp_to_GtGo / #Total_GtGo),0)) || '%'
   Let $Per_GRtl_to_GtGo = to_char(round((100 * #GRtl_to_GtGo / #Total_GtGo),0)) || '%'
   Let $Per_GtGo_to_GtGo = to_char(round((100 * #GtGo_to_GtGo / #Total_GtGo),0)) || '%'
   Let $Per_Phrm_to_GtGo = to_char(round((100 * #Phrm_to_GtGo / #Total_GtGo),0)) || '%'
   Let $Per_Rsc_to_GtGo  = to_char(round((100 * #Rsc_to_GtGo / #Total_GtGo),0)) || '%'
 End-If

 If #Total_Phrm = 0
   Let $Per_Corp_to_Phrm = '0 %'
   Let $Per_GRtl_to_Phrm = '0 %'
   Let $Per_GtGo_to_Phrm = '0 %'
   Let $Per_Phrm_to_Phrm = '0 %'
   Let $Per_Rsc_to_Phrm  = '0 %'
 Else
   Let $Per_Corp_to_Phrm = to_char(round((100 * #Corp_to_Phrm / #Total_Phrm),0)) || '%'
   Let $Per_GRtl_to_Phrm = to_char(round((100 * #GRtl_to_Phrm / #Total_Phrm),0)) || '%'
   Let $Per_GtGo_to_Phrm = to_char(round((100 * #GtGo_to_Phrm / #Total_Phrm),0)) || '%'
   Let $Per_Phrm_to_Phrm = to_char(round((100 * #Phrm_to_Phrm / #Total_Phrm),0)) || '%'
   Let $Per_Rsc_to_Phrm  = to_char(round((100 * #Rsc_to_Phrm / #Total_Phrm),0)) || '%'
 End-If

 If #Total_Rsc = 0
   Let $Per_Corp_to_Rsc  = '0 %'
   Let $Per_GRtl_to_Rsc  = '0 %'
   Let $Per_GtGo_to_Rsc  = '0 %'
   Let $Per_Phrm_to_Rsc  = '0 %'
   Let $Per_Rsc_to_Rsc   = '0 %'
 Else
   Let $Per_Corp_to_Rsc  = to_char(round((100 * #Corp_to_Rsc  / #Total_Rsc ),0)) || '%'
   Let $Per_GRtl_to_Rsc  = to_char(round((100 * #GRtl_to_Rsc  / #Total_Rsc ),0)) || '%'
   Let $Per_GtGo_to_Rsc  = to_char(round((100 * #GtGo_to_Rsc  / #Total_Rsc ),0)) || '%'
   Let $Per_Phrm_to_Rsc  = to_char(round((100 * #Phrm_to_Rsc  / #Total_Rsc ),0)) || '%'
   Let $Per_Rsc_to_Rsc   = to_char(round((100 * #Rsc_to_Rsc  / #Total_Rsc ),0)) || '%'
 End-If   
! % Calculations - End

    string '   O' 'Corp Off' $Per_Corp_to_Corp $Per_Corp_to_GRtl $Per_Corp_to_GtGo $Per_Corp_to_Phrm $Per_Corp_to_Rsc 
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6

    string '   U' 'GE Retail' $Per_GRtl_to_Corp $Per_GRtl_to_GRtl $Per_GRtl_to_GtGo $Per_GRtl_to_Phrm $Per_GRtl_to_Rsc
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6

    string '   R' 'GetGo' $Per_GtGo_to_Corp $Per_GtGo_to_GRtl $Per_GtGo_to_GtGo $Per_GtGo_to_Phrm $Per_GtGo_to_Rsc 
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6

    string '   C' 'Pharmacy' $Per_Phrm_to_Corp $Per_Phrm_to_GRtl $Per_Phrm_to_GtGo $Per_Phrm_to_Phrm $Per_Phrm_to_Rsc
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6

    string '   E' 'RSC' $Per_Rsc_to_Corp $Per_Rsc_to_GRtl $Per_Rsc_to_GtGo $Per_Rsc_to_Phrm $Per_Rsc_to_Rsc
    by $delim into $prt_cols
    write 6 from $prt_cols Status=#filestat6

  If #filestat6 <> 0
     Show 'Error writing file header#6.  Program terminating.'
     Stop
  End-If

!Fetching Data for File#6 - End

!Fetching Data for File#7 - Start
!Getting Row#1 Data - Start
Begin-Select
COUNT(*) &CdtoCd

   Let #COD_to_COD = &CdtoCd
   Let $COD_to_COD = edit(#COD_to_COD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO'
AND GEX_OLD_OPR_DIV = 'COD'
AND GEX_NEW_OPR_DIV = 'COD'
End-Select

Begin-Select
COUNT(*) &CdtoCl

   Let #COD_to_COL = &CdtoCl
   Let $COD_to_COL = edit(#COD_to_COL, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO'
AND GEX_OLD_OPR_DIV = 'COD'
AND GEX_NEW_OPR_DIV = 'COL'
End-Select


Begin-Select
COUNT(*) &CdtoPd

   Let #COD_to_POD = &CdtoPd
   Let $COD_to_POD = edit(#COD_to_POD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO'
AND GEX_OLD_OPR_DIV = 'COD'
AND GEX_NEW_OPR_DIV = 'POD'
End-Select

Let #Tot_Frm_COD = #COD_to_COD + #COD_to_COL + #COD_to_POD
Let $Tot_Frm_COD = edit(#Tot_Frm_COD, '99,999')
!Getting Row#1 Data - End

!Getting Row#2 Data - Start
Begin-Select
COUNT(*) &CLtoCd

   Let #COL_to_COD = &CLtoCd
   Let $COL_to_COD = edit(#COL_to_COD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO'
AND GEX_OLD_OPR_DIV = 'COL'
AND GEX_NEW_OPR_DIV = 'COD'
End-Select

Begin-Select
COUNT(*) &CLtoCl

   Let #COL_to_COL = &CLtoCl
   Let $COL_to_COL = edit(#COL_to_COL, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO'
AND GEX_OLD_OPR_DIV = 'COL'
AND GEX_NEW_OPR_DIV = 'COL'
End-Select

Begin-Select
COUNT(*) &CLtoPd

   Let #COL_to_POD = &CLtoPd
   Let $COL_to_POD = edit(#COL_to_POD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO'
AND GEX_OLD_OPR_DIV = 'COL'
AND GEX_NEW_OPR_DIV = 'POD'
End-Select

Let #Tot_Frm_COL = #COL_to_COD + #COL_to_COL + #COL_to_POD
Let $Tot_Frm_COL = edit(#Tot_Frm_COL, '99,999')
!Getting Row#2 Data - End


!Getting Row#4 Data - Start
Begin-Select
COUNT(*) &PDtoCd

   Let #POD_to_COD = &PDtoCd
   Let $POD_to_COD = edit(#POD_to_COD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO'
AND GEX_OLD_OPR_DIV = 'POD'
AND GEX_NEW_OPR_DIV = 'COD'
End-Select

Begin-Select
COUNT(*) &PDtoCl

   Let #POD_to_COL = &PDtoCl
   Let $POD_to_COL = edit(#POD_to_COL, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO'
AND GEX_OLD_OPR_DIV = 'POD'
AND GEX_NEW_OPR_DIV = 'COL'
End-Select


Begin-Select
COUNT(*) &PDtoPd

   Let #POD_to_POD = &PDtoPd
   Let $POD_to_POD = edit(#POD_to_POD, '99,999')

FROM PS_GEX_EVP_PROMO
WHERE GEX_CHANGE = 'PROMO'
AND GEX_OLD_OPR_DIV = 'POD'
AND GEX_NEW_OPR_DIV = 'POD'
End-Select

Let #Tot_Frm_POD = #POD_to_COD + #POD_to_COL + #POD_to_POD
Let $Tot_Frm_POD = edit(#Tot_Frm_POD, '99,999')
!Getting Row#4 Data - End

!Getting Row#5 (Grand Total) Data - Start
Let #Total_COD = #COD_to_COD + #COL_to_COD + #POD_to_COD
Let $Total_COD = edit(#Total_COD, '99,999')

Let #Total_COL = #COD_to_COL + #COL_to_COL + #POD_to_COL
Let $Total_COL = edit(#Total_COL, '99,999')

!Let #Total_MOD = #COD_to_MOD + #COL_to_MOD + #MOD_to_MOD + #POD_to_MOD
!Let $Total_MOD = edit(#Total_MOD, '99,999')

Let #Total_POD = #COD_to_POD + #COL_to_POD + #POD_to_POD
Let $Total_POD = edit(#Total_POD, '99,999')

Let #Grand_Total = #Total_COD + #Total_COL + #Total_POD
Let $Grand_Total = edit(#Grand_Total, '99,999')
!Getting Row#5 (Grand Total) Data - End

!Writing Row# 1 to 5 - Start
    Move '' To $prt_cols

    string '   U' 'COD' $COD_to_COD $COD_to_COL $COD_to_POD $Tot_Frm_COD
    by $delim into $prt_cols
    write 7 from $prt_cols Status=#filestat7

    string '   R' 'COL' $COL_to_COD $COL_to_COL $COL_to_POD $Tot_Frm_COL
    by $delim into $prt_cols
    write 7 from $prt_cols Status=#filestat7

!    string '   R' 'MOD' $MOD_to_COD $MOD_to_COL $MOD_to_POD $Tot_Frm_MOD
!    by $delim into $prt_cols
!    write 7 from $prt_cols Status=#filestat7

    string '   C' 'POD' $POD_to_COD $POD_to_COL $POD_to_POD $Tot_Frm_POD
    by $delim into $prt_cols
    write 7 from $prt_cols Status=#filestat7

    string '   E' 'Grand Total ' $Total_COD $Total_COL $Total_POD $Grand_Total
    by $delim into $prt_cols
    write 7 from $prt_cols Status=#filestat7
!Writing Row#1 to 5 - End

    Move '' To $prt_cols
    write 7 from '' Status=#filestat7
    Let $Per_Hdr = '% of Promotions to Destination Operating Division'
    write 7 from $Per_Hdr Status=#filestat7
    write 7 from '' Status=#filestat7

    string '   S' ' ' ' ' 'DESTINATION  '
    by $delim into $prt_cols
    write 7 from $prt_cols Status=#filestat7

    string '   O' ' ' '  COD' '  COL' '  POD'
    by $delim into $prt_cols
    write 7 from $prt_cols Status=#filestat7
    
! % Calculations - Start
 If #Total_COD = 0
   Let $Per_COD_to_COD = '0 %'
   Let $Per_COL_to_COD = '0 %'
   !Let $Per_MOD_to_COD = '0 %'
   Let $Per_POD_to_COD = '0 %'
   
   Let $Per_Tot_COD    = '0 %'
 Else
   Let $Per_COD_to_COD = to_char(round((100 * #COD_to_COD / #Total_COD),0)) || '%'
   Let $Per_COL_to_COD = to_char(round((100 * #COL_to_COD / #Total_COD),0)) || '%'
   !Let $Per_MOD_to_COD = to_char(round((100 * #MOD_to_COD / #Total_COD),0)) || '%'
   Let $Per_POD_to_COD = to_char(round((100 * #POD_to_COD / #Total_COD),0)) || '%'

   Let $Per_Tot_COD = to_char(round((100 * #COD_to_COD / #Total_COD),0) + round((100 * #COL_to_COD / #Total_COD),0)
   + round((100 * #POD_to_COD / #Total_COD),0)) || '%'

 End-If


 If #Total_COL = 0
   Let $Per_COD_to_COL = '0 %'
   Let $Per_COL_to_COL = '0 %'
   !Let $Per_MOD_to_COL = '0 %'
   Let $Per_POD_to_COL = '0 %'

   Let $Per_Tot_COL    = '0 %'
 Else
   Let $Per_COD_to_COL = to_char(round((100 * #COD_to_COL / #Total_COL),0)) || '%'
   Let $Per_COL_to_COL = to_char(round((100 * #COL_to_COL / #Total_COL),0)) || '%'
   !Let $Per_MOD_to_COL = to_char(round((100 * #MOD_to_COL / #Total_COL),0)) || '%'
   Let $Per_POD_to_COL = to_char(round((100 * #POD_to_COL / #Total_COL),0)) || '%'

   Let $Per_Tot_COL = to_char(round((100 * #COD_to_COL / #Total_COL),0) + round((100 * #COL_to_COL / #Total_COL),0)
   + round((100 * #POD_to_COL / #Total_COL),0)) || '%'

 End-If
 

 If #Total_POD = 0
   Let $Per_COD_to_POD = '0 %'
   Let $Per_COL_to_POD = '0 %'
   !Let $Per_MOD_to_POD = '0 %'
   Let $Per_POD_to_POD = '0 %'
   
   Let $Per_Tot_POD    = '0 %'
 Else
   Let $Per_COD_to_POD = to_char(round((100 * #COD_to_POD / #Total_POD),0)) || '%'
   Let $Per_COL_to_POD = to_char(round((100 * #COL_to_POD / #Total_POD),0)) || '%'
   !Let $Per_MOD_to_POD = to_char(round((100 * #MOD_to_POD / #Total_POD),0)) || '%'
   Let $Per_POD_to_POD = to_char(round((100 * #POD_to_POD / #Total_POD),0)) || '%'

   Let $Per_Tot_POD = to_char(round((100 * #COD_to_POD / #Total_POD),0) + round((100 * #COL_to_POD / #Total_POD),0)
   + round((100 * #POD_to_POD / #Total_POD),0)) || '%'

 End-If

! % Calculations - End
    
    string '   U' 'COD' $Per_COD_to_COD $Per_COD_to_COL $Per_COD_to_POD
    by $delim into $prt_cols
    write 7 from $prt_cols Status=#filestat7

    string '   R' 'COL' $Per_COL_to_COD $Per_COL_to_COL $Per_COL_to_POD
    by $delim into $prt_cols
    write 7 from $prt_cols Status=#filestat7

!    string '   R' 'MOD' $Per_MOD_to_COD $Per_MOD_to_COL $Per_MOD_to_POD
!    by $delim into $prt_cols
!    write 7 from $prt_cols Status=#filestat7

    string '   C' 'POD' $Per_POD_to_COD $Per_POD_to_COL $Per_POD_to_POD
    by $delim into $prt_cols
    write 7 from $prt_cols Status=#filestat7

    string '   E' 'Grand Total' $Per_Tot_COD $Per_Tot_COL $Per_Tot_POD
    by $delim into $prt_cols
    write 7 from $prt_cols Status=#filestat7

  If #filestat7 <> 0
     Show 'Error writing file header#7.  Program terminating.'
     Stop
  End-If

!Fetching Data for File#7 - End

End-Procedure P400-Fetch-Report-Data

!***********************************************************************************
Begin-Procedure Initialize-Variables
!***********************************************************************************
	let $prev_company     = ' '
	let $prev_paygroup    = ' '
	let $prev_deptid      = ' '
	let $lkup_deptid      = ' '
	let $prev_Dept_descr  = ' ' 
	let $prev_region      = ' '
	let $prev_div_cd      = ' '
	let $div_cd           = ' '
	let $prev_gl_dept     = ' '
	let $prev_division    = ' ' 
	let $prev_status      = ' '
	let $prev_acct_cd     = ' '
	let $lkup_acct_cd     = ' '
	let $prev_acct_descr  = ' '
	let $prev_jobcode     = ' '
	let $lkup_jobcode     = ' '
	let $prev_job_descr   = ' '
	let $prev_mgr_level   = ' '
	let $mgr_level        = ' '
	let $Prev_Std_Hours   = ' '
	let $prev_level_descr = ' '
	let $prev_eeo1code    = ' '
	let $eeo1code         = ' '
	let $prev_eeo1_descr  = ' '
	let $prev_effdt       = ''
	let $prev_effdate     = ''
	let $prev_union_cd    = ' '
	let $prev_action      = ' '
	let $prev_act_reas    = ' '
	let $action           = ' ' 
	let $prev_action_descr = ' ' 
	let $actn_reason      = ' ' 
	let $prev_actn_rsn_desc = ' '
	let $prev_pos_nbr     = ' '
	let $prev_f_p_t       =	' '
	let $prev_empl_type   =	' '
	let $prev_grade       =	' '
	let $prev_old_grade   =	' '
	let $prev_new_grade   = ' '
	let $prev_entry_date  =	''
	let $prev_BUS_UNIT  = ' '
	let $prev_GEX_CEO   = ' '
	let $prev_GEX_EVP   = ' '
	let $prev_evp_name  = ' '
	let $prev_GEX_SVPVP = ' '
	let $prev_GEX_DIR   = ' '
	let $prev_GEX_MGR   = ' '
	let $prev_GEX_SUP   = ' '
	let $prev_bsus_area  = ' '
	let $prev_change    = ' '
	let $prev_bus_area  = ' '
End-Procedure Initialize-Variables

!***********************************************************************************
Begin-procedure P245-print-rpt-line
!***********************************************************************************
! SHOW ' Entered into P245-print-rpt-line'
#debug9 Show 'P245-print-rpt-line'

print $LastSSN  (+1,5 )
print $LastName (0, 25)
print $Region   (0, 42)
print $DepartmentID   (0, 55)                            
print $logon_id (0, 85)


end-procedure

!***********************************************************************************
Begin-Procedure P300-Finalization
!***********************************************************************************
 SHOW ' Entered into P300-Finalization'
#debug9 Show 'P300-Finalization'
  
  If $Data-Found-Flag_1 <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (5) center
  Else  
     If $Data-Found-Flag <> 'Y'
      Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (5) center
     End-If
  End-If
   
  Do Format-Number(#recs-written,$recs-written,'888,888,888')
  Do Format-Number(#recs-written-division,$recs-written-division,'888,888,888')
  
  Do Format-Number(#region_empty,$region_empty,'888,888,888')
  Do Format-Number(#region_NOT_empty,$region_NOT_empty,'888,888,888')
  Do Format-Number(#region_Other,$region_Other,'888,888,888')
  
  
  Do Format-Number(#division_POD, $division_POD,'888,888,888')     
  Do Format-Number(#division_COL, $division_COL,'888,888,888')       
  Do Format-Number(#division_COD, $division_COD,'888,888,888')       
  Do Format-Number(#division_MOD, $division_MOD,'888,888,888')       
  Do Format-Number(#division_other, $division_other,'888,888,888')      
  
   	  Show ''
	  Show $recs-written ' records written to ' $file1
	  Show ''
	  Show 'Region Empty    :' $region_empty
	  Show 'Region NOT Empty:' $region_NOT_empty
	  show 'region_Other    :' $region_Other
  	  Show ''
          show 'Records read from P200-Main-Process    :' #P200-Main-Process
          show 'Records read from P300-Get-Details    :' #P300-Get-Details
          show 'job_rows_cntr: ' #job_rows_cntr   
          show ''
          show 'Terminated_Employees Read	       :' #Terminated_Employees
          Show 'Active_Employees  Read   	       :' #Active_Employees
          show ''
          show 'Total Active Employees  written        :' #P300-Get-Details_Y
          show 'Total Terminated Employees written     :' #P300-Get-Details_N
  


   
  SHOW '$division_POD:' $division_POD
  SHOW '$division_COL:' $division_COL
  SHOW '$division_COD:' $division_COD
  SHOW '$division_MOD:' $division_MOD
  show '$division_other:' $division_other
  
    Do P310-Close-File
  
  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc
  Show 'Successful end of report'
End-Procedure

!***********************************************************************************
Begin-Procedure P310-Close-File
!***********************************************************************************
#debug9 Show 'P310-Close-File'
  Close 1
  Close 2
  Close 3
  Close 4
  Close 5
  Close 6
  Close 7
  
  If #filestat <> 0
     Show 'Error closing output file.  Program terminating.'
     Stop
  End-If
End-Procedure


!*****************************************************************************
!clone of  for the proceudre gexxx903.sqc P200-Main-Process 
Begin-Procedure GEXXX903-Select-Emp-Stat-Parametersx
!*****************************************************************************

  Let $OprID                = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_EMP_STAT_ROWS = 0
  Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = ''
  Let $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx = ''
  Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIAx = 'ALL'
  Let $GEXXX903_EXCLUDE_EMP_STAT_DISPLAY_CRITERIAx = 'NONE'

Begin-Select

GEX_RC_EMP_STAT2.EMPL_STATUS

  Add 1 To #GEX_RC_EMP_STAT_ROWS

  If #GEX_RC_EMP_STAT_ROWS = 1
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = '(' || $GEXXX903_Emp_Stat_Aliasx || ' In ('''     || &GEX_RC_EMP_STAT2.EMPL_STATUS || ''''
    Let $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx= '(' || $GEXXX903_Emp_Stat_Aliasx || ' Not In (''' || &GEX_RC_EMP_STAT2.EMPL_STATUS || ''''
  Else
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx || ',''' || &GEX_RC_EMP_STAT2.EMPL_STATUS || ''''
    Let $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx || ',''' || &GEX_RC_EMP_STAT2.EMPL_STATUS || ''''
  End-If

From  PS_GEX_RC_EMP_STAT GEX_RC_EMP_STAT2
Where GEX_RC_EMP_STAT2.OPRID                    = [$OprID]
And   GEX_RC_EMP_STAT2.RUN_CNTL_ID              = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_EMP_STAT2.EMPL_STATUS, ' ') <> ' '

End-Select

  If #GEX_RC_EMP_STAT_ROWS = 0
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_Emp_Stat_Aliasx || ' = ' || $GEXXX903_Emp_Stat_Aliasx
    Let $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_Emp_Stat_Aliasx || ' = ' || $GEXXX903_Emp_Stat_Aliasx
  Else
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx || '))'
    Let $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx || '))'
    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIAx = $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx
    Let $GEXXX903_EXCLUDE_EMP_STAT_DISPLAY_CRITERIAx = $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx
  End-If
End-Procedure
!*****************************************************************************
!*****************************************************************************
Begin-Procedure Delete-Temp-Tbl-Data
Begin-Sql
DELETE FROM PS_GEX_EVP_PROMO
End-Sql
!show 'Delete Status' 
End-Procedure Delete-Temp-Tbl-Data
!*****************************************************************************

!***********************************************************************
#include 'gexxx951.sqc'
#include 'gexxx950.sqc'  !Get SQRW run controls
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
!#include 'gexxx9xx.sqc'  !Get pay single row run control        jnb 09/15/99
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'getdptnm.sqc'  !Get Department Name
#include 'gexrehdt.sqc'	 !GEX-MXT 03/24/2008 Fixed for REHIRE DT
#Include 'getposnm.sqc'   !get position title !ISDVSXP added ITG 60305
#Include 'getgeid.sqc'   !Get 7 digit Emplid	!TCSXSSS ADDED GEX_SEC_REENG