!***********************************************************************
! GEXPY049:  This program produces a detail report of employees        *    
!            current week vacation (Earnings Code 513 - reg vaca;      *
!            515-parttime vaca;  519,522,523-Cleveland reg vaca) hours,*     
!            amounts and Year-To-Date vacation hours and amounts.      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                                                                      *
!  $Date:: 02/09/98 09:00A      $                                      *
!  $Revision:: 01               $                                      *
!  $Workfile:: GEXPY049.SQR     $                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  GEXPY049  SXK    02/09/1998     INITIAL CREATION                    *
!            SXK    09/22/1998     Added New Mobius ReportID           *
!            JDH    10/19/1998     Added run control logic             *
!            JDH    03/15/1999     Fixed earnings_bal sub-select.      *
!            SXK    10/28/1999     Modified to have union from         *
!		                   job labor                           *
!            SCM    01/10/2001	   Added reg vaca earnings codes       *
!                                 '519', '522', '523' for Cleveland.   *
!            PSR    08/06/2002     Modified to get UNION_CD FROM       *
!                                  JOB Upgrade 8.3
!                                                                      *
!            PSR    08/27/2002     EMPL_RCD is now part of the key for *
!                                  PS_EARNINGS_BAL - Upgrade 8.3       *
!GEX_PY240   SXD    08/21/2007     Original hire date is selected from *
!                                  PS_PER_ORG_INST table               *                                            
!Gex-RBC		10/03/2007	Made the join Emplid (job & PER_ORG_INST)*                                                         * 
!***********************************************************************
begin-setup
#include 'setenv.sqc' !Set environment
!#include 'setup32a.sqc'  PSR 08/08/2002 8 Upgrade
#include 'ptpsl177.sqc' 

declare-report Vacation-Report
Printer-Type=HPLASERJET
  layout=DEFAULT
end-declare

declare-report Report-log
Printer-Type=HPLASERJET
  layout=DEFAULT
end-declare
end-setup
!*********************************************************************
!                                    
!*********************************************************************
begin-report
  use-report Vacation-Report

  do Init-DateTime
  do Init-Number
  do stdapi-init

  move 'GEXPY049' to $ReportID
  move 'Vacation Hours and Amounts' to $ReportTitle
  display $ReportTitle

  do Get-Current-DateTime

  do report
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term

end-report

!*********************************************************************
!If this Program is being executed through process scheduler, 
!the run control parameters and calls the main processing procedure.
!Otherwise, interrogates the user for the run control parameters and 
!validates them. If the run control parameters are invalid, stops the
!execution.
!*********************************************************************
begin-procedure Report 

  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  move 'N' to $Errorfound

  Let $GEXXX900_Company_Alias  = 'b.company'
  Let $GEXXX901_Company_Alias  = 'b.company'
  Let $GEXXX901_Paygroup_Alias = 'b.paygroup'
  Let $GEXXX902_Deptid_Alias   = 'b.deptid'
  Let $GEXXX903_Emp_Stat_Alias = 'b.empl_status'
  Let $GEXXX907_Div_CD_Alias   = 'gdt.gex_company_div_cd'
  Let $GEXXX909_Acct_CD_Alias  = 'b.acct_cd'

  If $prcs_process_instance = ''
    Do GEXXX950-Input-Parameters
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  let #rnctl_yyyy = substr($X000_Where_Select_AsOfDate,8,4)       
  let #rnctl_yy  = substr($X000_Where_Select_AsOfDate,10,2)

  Do Format-DateTime($X000_Where_Select_AsOfDate, $X000_Report_Heading_AsOfDate, {DEFDATE}, '', '')
  Let $X000_Order_By = 'Company, Paygroup, Department, Employee ID'

  Show '$GEXXX907_Include_Div_Cd_Display_Criteria           = ' $GEXXX907_Include_Div_Cd_Display_Criteria
  Show '$GEXXX900_Include_Company_Display_Criteria          = ' $GEXXX900_Include_Company_Display_Criteria
  Show '$GEXXX901_Include_Company_Paygroup_Display_Criteria = ' $GEXXX901_Include_Company_Paygroup_Display_Criteria
  Show '$GEXXX902_Include_Deptid_Display_Criteria           = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Display_Criteria         = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  Show '$GEXXX909_Include_Acct_Cd_Display_Criteria          = ' $GEXXX909_Include_Acct_Cd_Display_Criteria
  Show '$X000_Where_Select_AsOfDate = ' $X000_Where_Select_AsOfDate

  Do P130-Print-Cover-Page

!SXK 09/22/1998 Begin
 do get-pay-end-dt
!SXK 09/22/1998 End
 do process-employee-data

Report-Exit:

 date-time () hh:mi:ss &timeProcess
  display #InputTran 99999 noline
  display ' Transactions Processed: ' noline
  display &timeProcess

end-procedure

!*********************************************************************
!Prints the header information in the report log.
!*********************************************************************

begin-heading 6 for-reports=(report-log)
LET $REPORTID = 'PY049LOG'
 move 'Report Log' to $ReportTitle
 #Include 'stdhdg02.sqc'

  Let $X000_temp_out = 'Report as of ' || $X000_Report_Heading_AsOfDate
  Print $X000_temp_out         (3,)  Center

  position (+1)
  print 'Trans#' (,1) bold
  print 'Emplid' (,18) bold
  print 'Message' (,50) bold
  print '-' (+1,1,176) fill
 
end-heading

!*********************************************************************
!Prints the header information in the Vacation-Report	
!*********************************************************************

begin-heading 7 for-reports=(Vacation-Report)
move 'Vacation Hours and Amounts' to $ReportTitle
LET $REPORTID = 'PY049VAC'
 #Include 'stdhdg02.sqc'

  Let $X000_temp_out = 'Report as of ' || $X000_Report_Heading_AsOfDate
  Print $X000_temp_out         (3,)  Center

  if $PayGroup <> $priorPayGroup
    do Get-PayGroup-Data
    move $PayGroup to $priorPayGroup
  end-if
  print 'Pay Group'        (4,1)
  print $PayGroup          (0,13)
  print $PayGroupName      (0,17)

  print 'Dept ID'      (+2,1) bold
  print 'Employee ID'  (,10)  bold
  print 'Name'         (,24)  bold
  print 'Acct Cd'      (,57)  bold
  print 'Job Code'     (,67)  bold
  print 'Full/Part'    (,78)  bold
  print 'Union CD'     (,90)  bold
  print 'Hourly Rt'    (,102) bold
  print 'Orig Hire Dt' (,113) bold
  print 'Curr Hours'   (,128) bold
  print 'Curr Amount'  (,141) bold
  print 'YTD Hrs'      (,155) bold
  print 'YTD Grs'      (,166) bold

  print '-' (+1,1,176) fill
 
end-heading

!*********************************************************************
!Prints the footer in the report log
!*********************************************************************

begin-footing 2 for-reports=(Report-log)
page-number (+1,160) 'Page '  
last-page () ' of ' '.'

end-footing

!*********************************************************************
!Prints the footer in the Vacation-Report
!*********************************************************************

begin-footing 2 for-reports=(Vacation-Report)
page-number (+1,160) 'Page '  
last-page () ' of ' '.'

end-footing


Begin-Procedure P120-Process-Scheduler-Run-Controls
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXXX922-Select-Parameters

  Let $X000_Where_Select_AsOfDate = $GEX_RC_PAY.AsOfDate
  If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
    Let $X000_Where_Select_AsOfDate = $AsOfToday
  End-If

  Do GEXXX900-Select-Company-Parameters
  Do GEXXX901-Select-Company-Paygroup-Parameters
  Do GEXXX902-Select-Deptid-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters
  Do GEXXX907-Select-Div-CD-Parameters 
  Do GEXXX909-Select-Acct-CD-Parameters
End-Procedure


begin-procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX907_Include_Div_Cd_Display_Criteria           ='   (+2,5)
  Print $GEXXX907_Include_Div_Cd_Display_Criteria                 (0,+2)
  Print '$GEXXX900_Include_Company_Display_Criteria          ='   (+1,5)
  Print $GEXXX900_Include_Company_Display_Criteria                (0,+2)
  Print '$GEXXX901_Include_Company_paygroup_Display_Criteria ='   (+1,5)
  Print $GEXXX901_Include_Company_paygroup_Display_Criteria       (0,+2)
  Print '$GEXXX902_Include_Deptid_Display_Criteria           ='   (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria	            (0,+2)
  Print '$GEXXX903_Include_Emp_Stat_Display_Criteria         ='   (+1,5)
  Print $GEXXX903_Include_Emp_Stat_Display_Criteria               (0,+2)
  Print '$GEXXX909_Include_Acct_Cd_Display_Criteria          ='   (+1,5)
  Print $GEXXX909_Include_Acct_Cd_Display_Criteria                (0,+2)

  Print 'As Of Date :'                      (+2,5)
  Print $X000_Report_Heading_AsOfDate       (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'   (+5,2)
  Print $X000_Order_By                      (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
  Let #PAGE-COUNT = 1
End-Procedure

!*********************************************************************
!Gets the pay end date of the previous pay cycle.
!*********************************************************************

Begin-Procedure get-pay-end-dt

move 'N' to $found

begin-select on-error=sql-error-found('Get-Pay-End-Dt')
PAY.PAY_BEGIN_DT
PAY.PAY_END_DT

  move &PAY.PAY_END_DT to $pay_end_Dt
  move &PAY.PAY_BEGIN_DT to $pay_begin_dt
  display 'Pay End Date:' noline
  display $pay_end_Dt
  move 'Y' to $found
  exit-select

FROM PS_PAY_CALENDAR PAY

WHERE PAY.PAY_CONFIRM_RUN = 'Y'
  AND PAY.PAY_END_DT = (SELECT MAX(PAY_END_DT)
		      FROM PS_PAY_CALENDAR
		     WHERE PAY_END_DT <= $X000_Where_Select_AsOfDate
		       AND PAY_CONFIRM_RUN = 'Y')

end-select

if $found = 'N'
   do error-found
   print 'No Previously confirmed Pay Cycle as of:' (,34)
   print $X000_Where_Select_AsOfDate ()
   stop
end-if

end-procedure

!*********************************************************************
!Retrieves the employees with latest paychecks and with garnishment 
!deductions.
!*********************************************************************

begin-procedure process-employee-data
  
move 'N' to $errorfound
move 'N' to $empl_found
move 'N' to $new_page
let #inputtran = 0

begin-select ON-ERROR=SQL-Error-Found('Process-employee-data')
B.COMPANY   () on-break level=1 print=never
B.PAYGROUP  () on-break level=2 print=never
B.DEPTID    () on-break level=3 print=never after=dept-change
B.EMPLID    () on-break level=4 print=never
B.EMPL_RCD () on-break level=5 print=never after=print-fields
A.NAME
!SXD  08/23/2007   Begin
!A.ORIG_HIRE_DT 
INST.ORIG_HIRE_DT      
!SXD  08/23/2007   End 
B.ACCT_CD
B.JOBCODE
B.REG_TEMP 
B.HOURLY_RT
!SXK 10/28/99 - Changed from C.union_cd
B.UNION_CD
F.HRS_YTD &hrs_ytd
F.GRS_YTD &grs_ytd

  let $Company      = &B.COMPANY
  let $Paygroup     = &B.PAYGROUP
  let $Deptid       = &B.DEPTID
  let $Emplid       = &B.EMPLID
  let $Name         = &A.NAME
  !SXD   08/23/2007  Begin
  let $Orig_Hire_Dt = &INST.ORIG_HIRE_DT
  !let $Orig_Hire_Dt = &A.ORIG_HIRE_DT
  !SXD   08/23/2007  End
  let $Acct_Cd      = &B.ACCT_CD
  let $Jobcode      = &B.JOBCODE
  let $Reg_Temp     = &B.REG_TEMP 
  let #Hourly_Rt    = &B.HOURLY_RT
  let $Union_Cd     = &B.UNION_CD !SXK 10/28/99 - Changed from c.union_cd

  add &hrs_ytd to #Hrs_YTD
  add &grs_ytd to #Grs_YTD

  add 1 to #inputtran

  move 'Y' to $empl_found

  do get-current-week-vacation-info

  move &B.REG_TEMP to $GEXREGTP_ftpt_code
  do GEXREGTP_translate_code
  move $GEXREGTP_ftpt_code_return to $Full_Part

FROM  PS_EARNINGS_BAL   F,
      PS_GEX_DEPT_TBL   GDT,
      PS_PERSONAL_DATA  A,
!SXD  08/23/2007  Begin      
      PS_PER_ORG_INST INST,
!SXD  08/23/2007  End       
      
!SXK 10/28/99 Begin
!      PS_EMPLOYMENT     C, 
!SXK 10/28/1999 End
      PS_JOB            B
  
WHERE  A.EMPLID             = B.EMPLID
!SXD  08/22/2007  Begin
 AND  A.EMPLID = INST.EMPLID
 AND B.EMPLID = INST.EMPLID  
!AND A.EMPLID IN ('269783068','291648732','299906020','166481595','169681436','184560328','197540912','210629639','175263128','186565081')  ! Updated for testing	 
!SXD  08/22/2007  End 
!SXK 10/28/1999 Begin
!AND    C.EMPLID             = B.EMPLID
!AND    C.EMPL_RCD          = B.EMPL_RCD
AND inst.org_instance_ern = b.empl_rcd
AND    B.EFFDT              =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID        = B.EMPLID 
       AND    EMPL_RCD     = B.EMPL_RCD
       AND    EFFDT        <= $X000_Where_Select_AsOfDate)

AND    B.EFFSEQ             =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID        = B.EMPLID
       AND    EMPL_RCD     = B.EMPL_RCD
       AND    EFFDT         = B.EFFDT)

AND    F.EMPLID             = B.EMPLID
AND    F.COMPANY            = B.COMPANY
AND    F.BALANCE_ID         = 'CY'
AND    F.EMPL_RCD           = B.EMPL_RCD
AND    F.BALANCE_YEAR       = #rnctl_yyyy

AND    F.BALANCE_PERIOD     =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_EARNINGS_BAL
       WHERE  EMPLID        = F.EMPLID
       AND    COMPANY       = F.COMPANY
       AND    BALANCE_ID    = F.BALANCE_ID
       AND    BALANCE_YEAR  = F.BALANCE_YEAR
       AND    SPCL_BALANCE  = F.SPCL_BALANCE
       AND    EMPL_RCD      = F.EMPL_RCD
       AND    ERNCD         = F.ERNCD)

AND    F.SPCL_BALANCE       = 'N'
AND    F.ERNCD             IN ('513','515','519','522','523')  !SCM 01/10/2001. Added 519,522,523 

And    b.deptid             = gdt.deptid

And    gdt.effdt            =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid        = gdt.deptid
       And    effdt        <= $X000_Where_Select_AsOfDate)

And    gdt.sequence_number  =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid        = gdt.deptid
       And    effdt         = gdt.effdt)

And   [$GEXXX900_Include_Company_Criteria]
And   [$GEXXX901_Include_Company_Paygroup_Criteria] 
And   [$GEXXX902_Include_Deptid_Criteria]
And   [$GEXXX907_Include_Div_Cd_Criteria]
And   [$GEXXX903_Include_Emp_Stat_Criteria]
And   [$GEXXX909_Include_Acct_Cd_Criteria]

ORDER BY B.COMPANY, B.PAYGROUP, B.DEPTID, B.EMPLID, B.EMPL_RCD
end-select

if $empl_found = 'N'
   do error-found
   print 'No Data Selected' (,34)
end-if  
end-procedure

!*********************************************************************
!Retrieves the employees with latest paychecks and with garnishment 
!deductions.
!*********************************************************************

begin-procedure get-current-week-vacation-info
  
move 'N' to $found

begin-select on-error=sql-error-found('Get-Current-Week-Vacation-Info')
sum(E.OTH_HRS) &week_hrs

   move 'Y' to $found
   move &week_hrs to #week_hrs
   do get-vacation-hourly-rate

FROM   PS_PAY_EARNINGS   D,
       PS_PAY_OTH_EARNS  E

WHERE  D.EMPLID          = $Emplid
AND    D.COMPANY         = $Company
AND    D.PAYGROUP        = $Paygroup

AND    D.PAY_END_DT      =
      (SELECT MAX(PAY_END_DT)
       FROM   PS_PAY_EARNINGS
       WHERE  COMPANY    = D.COMPANY
       AND    PAYGROUP   = D.PAYGROUP
       AND    PAY_END_DT = $pay_end_dt)

AND    E.COMPANY         = D.COMPANY
AND    E.PAYGROUP        = D.PAYGROUP
AND    E.PAY_END_DT      = D.PAY_END_DT
AND    E.OFF_CYCLE       = D.OFF_CYCLE
AND    E.PAGE_NUM           = D.PAGE_NUM
AND    E.LINE_NUM           = D.LINE_NUM
AND    E.ADDL_NBR           = D.ADDL_NBR

AND    E.ERNCD          IN ('513','515','519','522','523')   !SCM 01/10/2001. Added 519,522,523 
end-select
  
end-procedure

!*********************************************************************
!Retrieves the employees with latest paychecks and with garnishment 
!deductions.
!*********************************************************************

begin-procedure get-vacation-hourly-rate
  
move 'N' to $found

begin-select on-error=sql-error-found('Get-Vacation-Hourly-Rate')
G.HOURLY_RT

   move 'Y' to $found

FROM   PS_ADDL_PAY_DATA G

WHERE  G.EMPLID       = $Emplid
AND    G.ERNCD        = '515'
AND    G.EFFDT        =
      (SELECT MAX(EFFDT)
       FROM   PS_ADDL_PAY_DATA
       WHERE  EMPLID  = G.EMPLID
       AND    EFFDT  <= $X000_Where_Select_AsOfDate)
end-select

if $found = 'N'
   let #week_amt = #Hourly_Rt*#week_hrs
else
   let #week_amt = &G.HOURLY_RT*#week_hrs
end-if

end-procedure

!*********************************************************************
!Retrieves the employees with latest paychecks and with garnishment 
!deductions.
!*********************************************************************
Begin-Procedure Dept-Change
  new-page
end-procedure

!*********************************************************************
!Retrieves the employees with latest paychecks and with garnishment 
!deductions.
!*********************************************************************
   
begin-procedure print-fields
  print $Deptid         (+1,3)
  print $Emplid         (,10)
  print $Name           (,24)
  print $Acct_Cd        (,59)
  print $Jobcode        (,68)
  print $Full_Part      (,82)
  print $Union_Cd       (,92)
  print #Hourly_Rt      (,102)    Edit 9990.0000
  print $Orig_Hire_Dt   (,113)
  print #week_hrs       (,130)    Edit 99990.00
  print #week_amt       (,144)    Edit 99990.00
  print #hrs_ytd        (,154)    Edit 99990.00
  print #grs_ytd        (,165)    Edit 99990.00

  let #Hrs_YTD = 0
  let #Grs_YTD = 0
end-procedure 
         
!********************************************************************
!This procedure displays in the error report if there are any sql erros
!happened in the program
!********************************************************************

begin-procedure SQL-Error-Found($Proc_Name) 
  do error-found
  print 'SQL Error in ' (,34)
  print $Proc_Name ()  
  print $_sql-error () 
  print 'sql-status:' ()
  print #_sql-status () edit 99999 
  use-report Vacation-Report
end-procedure

!*********************************************************************
!This procedure displays the error message for the records that are in
!progress
!*********************************************************************

begin-procedure Error-Found
  move 'Y' to $ErrorFound
  use-report report-log
  do Format-Number(#InputTran, $out, '99999')
  print $out (+1,1)
  let $EmplId_1st3 = substr($EmplId,1,3)
  let $EmplId_mid2 = substr($EmplId,4,2)
  let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  print $EmplID11 (,16)

end-procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'gexregtp.sqc'  !Get-Translate-Full-Part
#Include 'getcodta.sqc'  !Get-Company-Data
#Include 'getpgdta.sqc'  !Get-Paygroup-Data
#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls
