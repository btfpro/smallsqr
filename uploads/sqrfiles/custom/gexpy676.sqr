!***********************************************************************
! GEXPY676:  OC Tanner Service Award Interface                         *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY676 :		OC Tanner Service Award Interface              *
!                                                                      *
! Narrative:		File will be sent to O C Tanner via sftp.      *
!                       Contains the employee detail information who   *
!                       have completed multiple of 5 years of service  *
!                       and their anniversary falls on the month being *
!                       processed.                                     *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:		location_tbl                                   *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                                                                      *
! Written by:           Mel Abuyo                                      *
!                                                                      *
! Normally Run:	        End of Month                                   *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Company(s)		   	               *
!                         Deptid(s)			   	       *
!                         From Date                                    *
!                         Thru Date                                    *
!                         As Of Date                                   *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS      DATE            DESCRIPTION OF THE CHANGE              *
!***********************************************************************
! MVA		02/05/2014      Initial Creation                       *
! AWD		03/24/2014      Updated code to process Awardee        *
!				employees with no Company seniority dt *
!***********************************************************************


#include 'setenv.sqc' !Set environment
#include 'setup32.sqc'


begin-report

   do Init-DateTime
   do Init-Number
   do stdapi-init

   do Get-Current-DateTime
   do P100-Init-variables
   do P110-Open-File

   do Get-Awardee-Service-Dt

   do Commit-Transaction
   date-time () hh:mi:ss &timeEnded
   display 'Report Ended: ' noline
   display &timeEnded
   do stdapi-term

end-report

!***************************************************************
!  Initialize Variables
!***************************************************************
Begin-procedure P100-Init-variables

   date-time () hh:mi:ss &timeBegan
   display 'Report Began: ' noline
   display &timeBegan

   do P800-Get-Parameter
   let $pgm_name    = 'gexpy676'
   let $as_of_date = $current-date
   let $year = substr($current-date,10,2)
   show '$as_of_date:' $as_of_date
   move $as_of_date to $month_year 'MMYYYY'
   move $current-date to $file_MONTHYYYY 'MONTHYYYY'
   let $month = substr($month_year,1,2)
   show '$month:' $month
   encode ',' into $delimit

   let $company = rtrim($company,' ')
   do P410-Get-Company-Details

End-procedure P100-Init-variables


!**********************************************************************
! Open file for processing
!**********************************************************************
begin-procedure P110-Open-File
#debug9  show 'P110-Open-File'
#debug9 show 'Procedure = P110-Open-File'

   do P800-Get-Parameter

   if isnull($filepath)
   	let $filepath = '\\corp.gianteagle.com\common\HR\Recognition\Service\OC Tanner\'
   	let $filename = $filepath ||$pgm_name ||'_'||$current_monthyear ||'.csv'
   else
   	let $filename =  $filepath ||$pgm_name ||'_'||$current_monthyear ||'.csv'
   end-if

   let $file = rtrim($filename,' ')
   show 'Filepath = ' $file

   OPEN $file as 1 for-writing record=1000:fixed status = #file_status

   if #file_status <> 0
      let $Open-Msg = 'Error Opening '||$file || ' status = ' || to_char(#file_status)
      display $Open-Msg
      stop quiet
   else
      do P700-Write-Header
   end-if

end-procedure P110-Open-File

!***************************************************************
!  Get Company Details
!***************************************************************
Begin-procedure P410-Get-Company-Details

Begin-Select on-error=P999-Error-Routine('P810-Get-Company-Details')
COMPANY
DESCR
ADDRESS1
ADDRESS2
CITY
STATE
COUNTRY
POSTAL

   let $r_company    = &DESCR
   let $r_address1   = &ADDRESS1
   let $r_address2   = &ADDRESS2
   let $r_city       = &CITY
   let $r_state      = &STATE
   let $r_country    = &COUNTRY
   let $r_postal     = &POSTAL

FROM PS_COMPANY_TBL
WHERE COMPANY = $company

End-Select

End-procedure P410-Get-Company-Details


!***************************************************************
!  Main process to select TM records receiving their anniversary
!***************************************************************
begin-procedure P500-Main-Process

Begin-SELECT ON-ERROR=P999-Error-Routine('P500-Main-Process')
C.EMPLID
C.SSN
B.NAME_DISPLAY
$service_dt_in
B.ADDRESS1
B.ADDRESS2
B.CITY
B.STATE
B.POSTAL
A.POSITION_NBR
A.ACCT_CD
A.REPORTS_TO
CEIL(MONTHS_BETWEEN($date_in,$service_dt_in)/12) &svc_yrs

   let #service_yrs  = &svc_yrs
   move #service_yrs to $r_svc_year '99'
   let $r_emplid     = &C.EMPLID
   let $r_ssn        = &C.SSN
   let $r_name       = &B.NAME_DISPLAY
   let $r_addr1      = &B.ADDRESS1
   let $r_addr2      = &B.ADDRESS2
   let $position_nbr = &A.POSITION_NBR
   let $acct_cd      = &A.ACCT_CD
   let $reports_to   = &A.REPORTS_TO

   let $r_oprid = $r_emplid
   do P610-Get-Email-Address
   if $ea_email= '' or $ea_email= ' '
    do P610-Get-Email-Address-2
    let $ea_email = $es_email
   end-if
    let $r_email = $ea_email

    do P550-Process-Data
    do P630-Get-TM-Address

    if #service_yrs  <> 0
     do P710-Write-Detail
    end-if

  FROM PS_JOB A,
       PS_PERSONAL_DATA B,
       PS_GEX_EMPLID_MAPP C,
       PS_EMPLOYMENT D
 WHERE A.EMPLID = B.EMPLID
   !AND A.EMPLID = C.SSN   !GEX_SEC_REENG 2015-04-29 Vahini Katta
   AND A.EMPLID = C.EMPLID !GEX_SEC_REENG 2015-04-29 Vahini Katta
   AND A.EMPL_RCD = C.EMPL_RCD
   AND A.EMPLID = D.EMPLID
   AND A.EMPL_RCD = D.EMPL_RCD
   AND MOD(CEIL(MONTHS_BETWEEN($date_in,$service_dt_in)/12),5) = 0
   AND A.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE A.EMPLID = A_ED.EMPLID
          AND A.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= SYSDATE)
    AND A.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE A.EMPLID = A_ES.EMPLID
          AND A.EMPL_RCD = A_ES.EMPL_RCD
          AND A.EFFDT = A_ES.EFFDT)
          AND A.EMPL_STATUS IN ('A','L','P','S')
          AND A.COMPANY >= '999'
    AND C.EMPLID = $emplid_in
!    AND C.EMPLID in ('1033038','1083098','1194112','1016164')

End-Select

end-procedure P500-Main-Process

!***************************************************************
!  Process Data for reporting
!***************************************************************
begin-procedure P550-Process-Data

   do P600-Get-Position

!   show 'Dept ID = ' $pos_deptid
!   show 'Pos Desc  = ' $pos_desc

   if substr($pos_deptid, 1, 1) = 'C' or
      substr($pos_deptid, 1, 1) = 'W' or
      (instr(upper($pos_desc), 'STORE',1) > 0 and
      instr(upper($pos_desc), 'LEADER',1) > 0)

      let $r_position = $reports_to
      do P620-Get-Mgr-Info


!      show 'Reports To: ' $r_position
!      show 'Mgr Emplid: ' $mgr_emplid
!      show 'Mgr Email : ' $r_mgr_email

   else

      if (instr(upper($pos_desc), 'TEAM',1) > 0 and
         instr(upper($pos_desc), 'LEADER',1) > 0)

         let $r_mgr_email = 'StoreLeader' || '.' || rtrim($pos_deptid,' ') || '@gianteagle.com'

      else

         do P650-Get-Acct-Desc
        let $r_mgr_email = rtrim($acct_descr,' ') || 'TeamLeader' || '.' || rtrim($pos_deptid,' ') || '@gianteagle.com'

      end-if

   end-if

       if $r_mgr_email = '' or $r_mgr_email = ' '
       	let $admin_cd	  =	'02'
       	let $r_admin_cd   =     '="'||$admin_cd||'"'
       	let $r_bill_locn  =     'CORP2'
       	else
       	let $r_admin_cd	  =	'01'
       	let $r_admin_cd   =     '="'||$r_admin_cd||'"'
       	let $r_bill_locn  =     'CORP'
        end-if


end-procedure P550-Process-Data


!***************************************************************
!  Get Position description
!***************************************************************
begin-procedure P600-Get-Position

Begin-SELECT ON-ERROR=P999-Error-Routine('P600-Get-Position')
POS.POSITION_NBR
POS.DESCR
POS.DEPTID

   let $pos_deptid = &POS.DEPTID
   let $pos_desc   = &POS.DESCR

FROM PS_POSITION_DATA POS
WHERE POS.POSITION_NBR = $position_nbr
  AND POS.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_POSITION_DATA POS1
                   WHERE POS1.POSITION_NBR = POS.POSITION_NBR
                     AND POS1.EFFDT <= SYSDATE)
End-Select

end-procedure P600-Get-Position


!***************************************************************
!  Get Email Addresses
!***************************************************************
begin-procedure P610-Get-Email-Address

   let $ea_email = ' '

Begin-SELECT ON-ERROR=P999-Error-Routine('P610-Get-Email-Address')
EA.EMAIL_ADDR
EA.EMAIL_ADDR2

   let $ea_email = &EA.EMAIL_ADDR

FROM PS_GEX_EMAIL_ADDR2 EA
WHERE EA.OPRID = $r_oprid
  AND EA.EMAIL_TYPE = 'WORK'
End-Select

end-procedure P610-Get-Email-Address

!***************************************************************
!  Get Email Addresses - From Peoplesoft 'email_addresses' table
!***************************************************************
begin-procedure P610-Get-Email-Address-2

  Let $es_email = ' '

Begin-SELECT ON-ERROR=P999-Error-Routine('P610-Get-Email-Address-2')
EM.EMAIL_ADDR

   let $es_email = &EM.EMAIL_ADDR

FROM PS_EMAIL_ADDRESSES EM
WHERE EM.EMPLID = $r_ssn
  AND EM.PREF_EMAIL_FLAG = 'Y'
End-Select

end-procedure P610-Get-Email-Address-2



!***************************************************************
!  Get Manager details
!***************************************************************
begin-procedure P620-Get-Mgr-Info

Begin-SELECT LOOPS=1 ON-ERROR=P999-Error-Routine('P620-Get-Mgr-Info')
MA.EMPLID
MGR.EMPLID
MGR.POSITION_NBR
MGR.DEPTID

   let $mgr_emplid = &MGR.EMPLID
   let $r_oprid    = &MA.EMPLID

   do P610-Get-Email-Address

   let $r_mgr_email = $ea_email

FROM PS_CURRENT_JOB MGR,
     PS_GEX_EMPLID_MAPP MA
WHERE MGR.POSITION_NBR = $r_position
  AND MGR.HR_STATUS    = 'A'
  AND MA.SSN  =  MGR.EMPLID
End-Select

end-procedure P620-Get-Mgr-Info

!***************************************************************
!  Get Manager details
!***************************************************************
begin-procedure P630-Get-TM-Address

Begin-SELECT ON-ERROR=P999-Error-Routine('P630-Get-TM-Address')
P1.NAME_DISPLAY
P1.ADDRESS1
P1.ADDRESS2
P1.ADDRESS3
P1.CITY
P1.STATE
P1.POSTAL
P1.COUNTRY

   let $r_tm_name   = &P1.NAME_DISPLAY
   let $r_tm_addr1  = &P1.ADDRESS1
   let $r_tm_addr2  = &P1.ADDRESS2
   let $r_tm_addr3  = &P1.ADDRESS3
   let $r_tm_city   = &P1.CITY
   let $r_tm_state  = &P1.STATE
   let $r_tm_postal = &P1.POSTAL
   let $r_tm_country = &P1.COUNTRY

FROM PS_PERSONAL_DATA P1
WHERE P1.EMPLID = $r_ssn

End-Select

end-procedure P630-Get-TM-Address

!***************************************************************
!  Get Account Description
!***************************************************************
begin-procedure P650-Get-Acct-Desc

   let $acct_descr  = ' '

Begin-SELECT ON-ERROR=P999-Error-Routine('P650-Get-Acct-Desc')
AC.DESCR

   let $acct_descr  = translate(&AC.DESCR,' ,()/-+','')

FROM PS_ACCT_CD_TBL AC
WHERE AC.ACCT_CD = $acct_cd

End-Select

end-procedure P650-Get-Acct-Desc

!*********************************************************************
!Writes the header information in the report.
!*********************************************************************
begin-procedure P700-Write-Header

   string 'Customer Code'
          'Admin Code'
          'Billing Location'
          'Company Name'
          'Attention Line'
          'Address Addition 1' 'Address Addition 2' 'Address'
          'City' 'State' 'Zip' 'Country'
          'Empl ID' 'Full Name' 'Email' 'Hire Date' 'Award Level (YOS)'
          'Managers Email Address' 'Address Addition 1' 'Address Addition 2'
          'Home Address' 'City' 'State' 'Zip' 'Country'
          'Customer ID'
          BY $delimit into $head

   show 'Header: ' $head

   write 1 from $head

end-procedure P700-Write-Header


!*********************************************************************
!Writes the header information in the report.
!*********************************************************************
begin-procedure P710-Write-Detail

 Let $r_service_dt_in = edit($service_dt_in, 'MM/DD/YYYY')

   string $r_cust_cd
          $r_admin_cd
          $r_bill_locn
          $r_company
          $r_attn
          $r_address2
          $r_address3
          $r_address1
          $r_city
          $r_state
          $r_postal
          $r_country
          $r_emplid
          $r_name
          $r_email
	        $r_service_dt_in
          $r_svc_year
          $r_mgr_email
          $r_tm_addr2
          $r_tm_addr3
          $r_tm_addr1
          $r_tm_city
          $r_tm_state
          $r_tm_postal
          $r_tm_country
          $r_control
          BY $delimit into $detail

   write 1 from $detail

end-procedure P710-Write-Detail


!*********************************
!Begin-Procedure P720-Get-Mapp-Emplid
!*********************************
!let $mgr_emplid = ' '
!Begin-SELECT
!MAPP.EMPLID

! let $mapp_emplid = RTRIM(&MAPP.EMPLID,' ')

!FROM PS_GEX_EMPLID_MAPP MAPP
!WHERE MAPP.SSN = $mgr_emplid

!End-SELECT

!End-Procedure P720-Get-Mapp-Emplid

!***************************************************************
!  Get Default Parameters
!***************************************************************
Begin-procedure P800-Get-Parameter

  let #empl_cnt = 0

BEGIN-SELECT ON-ERROR=P999-Error-Routine('P800-Get-Parameter')
RC.GEX_MONTH_CD		&RC.MONTH
RC.PARMVALUE		&RC.PARMVALUE
RC.CUSTOMER		&RC.CUSTOMER
to_char(RC.CODE,'09')	&RC.CODE
RC.LOCATION		&RC.LOCATION
RC.COMPANY		&RC.COMPANY
RC.NAME			&RC.NAME
RC.ADDRESS1		&RC.ADDRESS1
RC.ADDRESS2		&RC.ADDRESS2
RC.REQUESTOR_ID		&RC.REQUESTOR_ID

   let $filepath 	= 	&RC.PARMVALUE
   let $r_cust_cd	= 	&RC.CUSTOMER
   let $r_admin_cd	=	&RC.CODE
!   let $r_admin_cd	=	'01'
   let $r_admin_cd      =       '="'||$r_admin_cd||'"'
   let $r_bill_locn	=	&RC.LOCATION
   let $company		=	&RC.COMPANY
   let $r_attn		=	&RC.NAME
   let $r_address2	=	&RC.ADDRESS1
   let $r_address3	=	&RC.ADDRESS2
   let $r_control	=	&RC.REQUESTOR_ID

   let $as_of_date = $current-date
   let $current_month = &RC.MONTH
   let #current_year =  to_number(Edit(datenow(),'YYYY'))
    let #previous_year =  #current_year - 1
    show '#previous_year: ' #previous_year

    move #current_year to $current_year 9999
    move #previous_year to $previous_year 9999

    let $current_monthyear =  $current_month ||'_'|| $current_year

   Evaluate $current_month
     When = '01'
        let $First_day_of_month = '01-DEC-' || $previous_year
        break
     When = '02'
        let $First_day_of_month = '01-JAN-' || $current_year
        break
     When = '03'
        let $First_day_of_month = '01-FEB-' || $current_year
        break
     When = '04'
        let $First_day_of_month = '01-MAR-' || $current_year
        break
     When = '05'
        let $First_day_of_month = '01-APR-' || $current_year
        break
     When = '06'
        let $First_day_of_month = '01-MAY-' || $current_year
        break
     When = '07'
        let $First_day_of_month = '01-JUN-' || $current_year
        break
     When = '08'
        let $First_day_of_month = '01-JUL-' || $current_year
        break
     When = '09'
        let $First_day_of_month = '01-AUG-' || $current_year
        break
     When = '10'
        let $First_day_of_month = '01-SEP-' || $current_year
        break
     When = '11'
        let $First_day_of_month = '01-OCT-' || $current_year
        break
     When = '12'
        let $First_day_of_month = '01-NOV-' || $current_year
        break
     when-other
        display 'Please enter a valid month'
   End-evaluate


    do Get-File-Period

FROM PS_GEX_PY_MONTH_CD RC
WHERE  RC.OPRID = $prcs_oprid
  and RC.RUN_CNTL_ID = $prcs_run_cntl_id

END-SELECT

End-procedure P800-Get-Parameter

!*********************************************************************
!Get File Period
!*********************************************************************

begin-procedure Get-File-Period

begin-select
!TO_DATE($First_day_of_month, 'DD-MON-YYYY')-1	&date_in
LAST_DAY($First_day_of_month)	&date_in
   let $date_in = &date_in
   let $date_in = strtodate($date_in)
   show '$date_in - ' $date_in
FROM DUAL

end-select

end-procedure Get-File-Period


!***************************************************************
!  Main process to select TM records receiving their anniversary
!***************************************************************
begin-procedure Get-Awardee-Service-Dt

Begin-SELECT ON-ERROR=P999-Error-Routine('Get-Awardee-Service-Dt')
C1.EMPLID
D1.CMPNY_SENIORITY_DT
D1.SERVICE_DT

  	let $emplid_in = &C1.EMPLID
  	let $cmpny_seniority_dt = &D1.CMPNY_SENIORITY_DT
  	let $service_dt = &D1.SERVICE_DT

  	If isnull($cmpny_seniority_dt) or $cmpny_seniority_dt = ' '
  		let $service_dt_in = $service_dt
  	else
  		let $service_dt_in = $cmpny_seniority_dt
  	end-if

	let $Srv_month_in =  Edit($service_dt_in,'MM')
	show '$Srv_month_in: ' $Srv_month_in
	show '$service_dt_in  - ' $service_dt_in
	show '$emplid_in - '	$emplid_in


	if $Srv_month_in = $current_month
	 do P500-Main-Process
	end-if

  FROM PS_JOB A1,
       PS_PERSONAL_DATA B1,
       PS_GEX_EMPLID_MAPP C1,
       PS_EMPLOYMENT D1
 WHERE A1.EMPLID = B1.EMPLID
   !AND A1.EMPLID = C1.SSN    !GEX_SEC_REENG 2015-04-29 Vahini Katta
   AND A1.EMPLID = C1.EMPLID  !GEX_SEC_REENG 2015-04-29 Vahini Katta
   AND A1.EMPL_RCD = C1.EMPL_RCD
   AND A1.EMPLID = D1.EMPLID
   AND A1.EMPL_RCD = D1.EMPL_RCD
   AND A1.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE A1.EMPLID = A_ED.EMPLID
          AND A1.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= SYSDATE)
    AND A1.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE A1.EMPLID = A_ES.EMPLID
          AND A1.EMPL_RCD = A_ES.EMPL_RCD
          AND A1.EFFDT = A_ES.EFFDT)
          AND A1.EMPL_STATUS IN ('A','L','P','S')
          AND A1.COMPANY >= '999'
!    AND C1.EMPLID in ('1033038','1083098','1194112','1016164')			!Testing Only

End-Select

end-procedure Get-Awardee-Service-Dt


!*********************************************************************
!Displays the error messages and stops execution
!*********************************************************************
begin-procedure P999-Error-Routine($Proc_Name)
!  do error-found
  display 'SQL Error in '
  display $Proc_Name
  display $_sql-error
  display 'sql-status:'
  display #_sql-status

  STOP

end-procedure P999-Error-Routine

!#Include 'gexxx922.sqc'  !Payroll run control
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
!#Include 'hrrnctl1.sqc'  !Get_Run_Control Procedure
!#Include 'hrgetval.sqc'  !Get values mask routines
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'sqrtrans.sqc'



