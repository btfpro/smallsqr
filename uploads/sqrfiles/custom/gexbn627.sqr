!***********************************************************************
! GEXBN627:           HSA WEEKLY CONTRIBUTION                          *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXBN627 :            HSA WEEKLY CONTRIBUTION                        *
!                                                                      *
! Narrative:            This program creates a weekly employee         *
!                       contribution to the HSA (Health Spending       *
!			Account ) Plan vendor                          *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           ps_pay_check                                   *
!                       ps_pay_deduction                               *
!                       ps_pay_calendar                                *
!                       ps_pay_cal_bal_id                              *
!                                                                      *
! Written by:           Namit Rawat                                    *
!                                                                      *
! Normally Run:         Weekly                                         *
!                                                                      *
!***********************************************************************
! ISDVMZA - 01/05/2013   Include on cycle condition on the select from *
!                        Pay Calendar                                  *
! ISDVAWD - 04/03/2014   ITG# 786				                               *
!			 Modifed the program to process HSA weekly dist                  *
!                        separately for both Highmark and UPMC. These  *
!                        processes will have separate run control ID   *
!                        namely 'gexbn627_highmark'and 'gexbn627_upmc' *
!			 and will have separate outputs	                                 *
!GEX_SEC_REENG 2015-04-29 Vahini Katta                                 *
!Changes related to gex_emplid_mapp/7 digit emplid
!***********************************************************************



#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)


#define #column1    05
#define #column2    20
#define #column3    30
#define #column4    60
#define #column5    80
#define #column6   100



begin-heading 8
#debug9 Show 'begin-heading'
  #Include 'stdhdg01.sqc'


  print 'PLAN'                    (+1,{#column2})
  print 'EE'                        (,{#column5})
  print 'ER'                        (,{#column6})

  print 'SSN'                     (+1,{#column1})
  print 'TYPE'                      (,{#column2})
  print 'NAME'                      (,{#column3})
  print 'CHECK DT'                  (,{#column4})
  print 'AMT'                       (,{#column5})
  print 'AMT'                       (,{#column6})


  print '-'                     (+1,{#column1},9)  fill
  print '-'                       (,{#column2},6)  fill
  print '-'                      (,{#column3},10)  fill
  print '-'                      (,{#column4},10)  fill
  print '-'                      (,{#column5},10)  fill
  print '-'                      (,{#column6},10)  fill


end-heading


Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Let $ORDER_BY = 'ORDER BY pc.name'
  show '$ORDER_BY' $ORDER_BY
  Do P200-Main-Process
  Let $ORDER_BY = 'ORDER BY pc.emplid'
  Do P200-Main-Process
  show '$ORDER_BY' $ORDER_BY
  Do P300-Finalization
End-Report


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

!  Let $delimiter = ','
  encode ',' into $delimiter

  Let $ReportID      = 'GEXBN627'
  Let $ReportTitle   = 'CONTRIBUTION FILE FOR HSA'

  Let $GEXXX976_Plan_Type_Alias                  = 'pd.PLAN_TYPE'
  Let $GEXXX976_Benefit_Plan_Alias               = 'pd.BENEFIT_PLAN'
  Let $GEXXX919_Dedcd_Alias                      = 'pd.DEDCD'

  If $prcs_process_instance = ''
     Do P110-SQRW-Run-Controls
  Else
     Do P120-Process-Scheduler-Run-Controls
  End-if
  
!*****************************************************************
! ISDVAWD ITG# 786- 4/03/2014 - Begin  - ReportID/Title 
!*****************************************************************
  If $HSA_Flag = 'gexbn627_highmark'			!Highmark
    Let $ReportID = $ReportID || '_Highmark'
    Let $ReportTitle = $ReportTitle || ' - Highmark'
  end-if
  
  if $HSA_Flag = 'gexbn627_upmc'			!UPMC
    Let $ReportID = $ReportID || '_UPMC'
    Let $ReportTitle = $ReportTitle || ' - UPMC'
  end-if
!******************************************************************
! ISDVAWD ITG# 786- 4/03/2014 - End  
!******************************************************************

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime 

  Do Get-Pay-Balance-Year

  Let #yyyy 		= &YR.BALANCE_YEAR
  Let #YYYYPlus_One	= &YR.BALANCE_YEAR + 1


  LET $YYYY = EDIT(#yyyy,'9999')
  LET $YYYYPlus_One = EDIT(#YYYYPlus_One,'9999')

  show '$YYYY            :'  $YYYY
  show '$YYYYPlus_One    :'  $YYYYPlus_One

  Do  Get-Curr-Pay-Period
  Let $year_begin_dt = '01-JAN-' || $YYYY
  Let $year_begin_dt_cmp = $YYYY || '0101'
  Let $INFILL1 = edit(#pay_period,'09')


  Show '$GEXXX912_Plan_Type_Alias                           = ' $GEXXX976_Plan_Type_Alias
  Show '$GEXXX976_INCLUDE_PLAN_TYPE_DISPLAY_CRITERIA        = ' $GEXXX976_INCLUDE_PLAN_TYPE_DISPLAY_CRITERIA
  Show '$GEXXX976_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA     = ' $GEXXX976_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA
  Show '$GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA            = ' $GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA
  Show '$AsOfDate                                           = ' $AsOfDate


  Do P140-Open-File
  Do P150-Get-Last-Confirmed-Pay

End-Procedure


!*********************************************************************
Begin-Procedure Get-Pay-Balance-Year
!*********************************************************************

begin-select loops = 1

YR.BALANCE_YEAR
YR.PAY_END_DT

FROM PS_PAY_CAL_BAL_ID YR
  WHERE  YR.COMPANY    = 'GEI'
     AND YR.PAYGROUP   = 'RET'
     AND YR.BALANCE_ID = 'CY'
     AND YR.PAY_END_DT = (Select Max(PAY_END_DT)
         From PS_PAY_CAL_BAL_ID
	 Where COMPANY     = YR.COMPANY
	 And   PAYGROUP    = YR.PAYGROUP
	 And   BALANCE_ID  = YR.BALANCE_ID
	 And   PAY_END_DT <= $AsOfDate)  !$AsOfToday

end-select
End-Procedure


!***********************************************************************************
Begin-Procedure Get-Curr-Pay-Period
!***********************************************************************************
#debug9 Show 'Get-Curr-Pay-Period'

Begin-Select

count(B.check_dt) &pay_period

  let #pay_period = &pay_period

  Show 'pay period  ' #pay_period

FROM PS_PAY_CAL_BAL_ID A, PS_PAY_CALENDAR B
 WHERE   A.BALANCE_YEAR		= #yyyy
     AND A.COMPANY		= 'GEI'
     AND A.PAYGROUP		= 'RET'
     AND B.PAY_OFF_CYCLE_CAL    = 'N'
     AND A.COMPANY		= B.COMPANY
     AND A.PAYGROUP		= B.PAYGROUP
     AND A.PAY_END_DT		= B.PAY_END_DT
     AND A.PAY_END_DT	       <= $pay_end_dt

End-Select
End-Procedure


Begin-Procedure P110-SQRW-Run-Controls
#debug9 Show 'P110-SQRW-Run-Controls'
  Do Ask-As-Of-Date
  Let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate



  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  !Plan Type
  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  Move '''' to $PlanTypeString
  Display 'Enter Plan Type or leave blank to exit.'
  While 1=1
    Input $PlanType Maxlen=2 'Plan Type'
    Uppercase $PlanType
    if RTRIM($PlanType, ' ') = ''
       concat '''' with $PlanTypeString
       break
    end-if
    if $PlanTypeString <> ''''
       concat ''',''' with $PlanTypeString
    end-if
    concat $PlanType with $PlanTypeString
  End-While

  if $PlanTypeString = ''''''
     let $GEXXX912_INCLUDE_PLAN_TYPE_CRITERIA = '1=1'
     let $GEXXX912_INCLUDE_PLAN_TYPE_DISPLAY_CRITERIA = 'ALL'
  else
     let $GEXXX912_INCLUDE_PLAN_TYPE_CRITERIA = $GEXXX912_Plan_Type_Alias || ' = (' || $PlanTypeString || ')'
     let $GEXXX912_INCLUDE_PLAN_TYPE_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_PLAN_TYPE_CRITERIA
  end-if

  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  !Benefit Plan
  !~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Let $BenefitPlanString    = ''''

  Let $BenefitPlanString = ''''
  Display 'Enter Benefit Plan or leave blank to exit.'
  While 1=1
    Input $In-Benefit-Plan Maxlen=6 'Benefit Plan'
    Uppercase $In-Benefit-Plan
    If Rtrim($In-Benefit-Plan, ' ') = ''
       Concat '''' With $BenefitPlanString
       Break
    End-If
    If $BenefitPlanString <> ''''
       Concat ''',''' With $BenefitPlanString
    End-If
       Concat $In-Benefit-Plan With $BenefitPlanString
  End-While

  if $BenefitPlanString = ''''''
     let $GEXXX976_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
     let $GEXXX976_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
  else
     let $GEXXX976_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX976_Benefit_Plan_Alias || ' = (' || $BenefitPlanString || ')'
     let $GEXXX976_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX976_INCLUDE_BENEFIT_PLAN_CRITERIA
  end-if



  !---------------------------------------------------------------------
  !       Deduction Code
  !---------------------------------------------------------------------

	    Let $DedcdString = ''''
    Display 'Enter Dedcd or leave blank to exit.'
    While 1=1
      Input $Dedcd Maxlen=6 'Dedcd'
      Uppercase $Dedcd
      If Rtrim($Dedcd, ' ') = ''
        Concat '''' With $DedcdString
        Break
      End-If
      If $DedcdString <> ''''
        Concat ''',''' With $DedcdString
      End-If
      Concat $Dedcd With $DedcdString
    End-While

    If $DedcdString = ''''''
      Let $GEXXX919_INCLUDE_DEDCD_CRITERIA = '1=1'
      Let $GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX919_INCLUDE_DEDCD_CRITERIA = $GEXXX919_Dedcd_Alias || ' In (' || $DedcdString || ')'
      Let $GEXXX919_INCLUDE_DEDCD_DISPLAY_CRITERIA = $GEXXX919_INCLUDE_DEDCD_CRITERIA
    End-If

End-Procedure


Begin-Procedure P120-Process-Scheduler-Run-Controls
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
!  Do GEXRCBN1-SELECT-PARAMETERS

  Do GEXRCBN1-SELECT-PARAMETERS
  Let $AsOfDate = &GEX_RC_BEN.AsOfDate
!  show '&GEX_RC_BEN.AsOfDate::' &GEX_RC_BEN.AsOfDate

!*****************************************************************
! ISDVAWD ITG# 786- 4/03/2014 - Begin  - ReportID/Title 
!*****************************************************************  
  show '$AsOfToday - ' $AsOfToday
  let $Today = Edit($AsOfToday, 'mm/dd/yyyy')
  Let $Report_MMDDYYYY = Substr($Today,1,2) || Substr($Today,4,2) || Substr($Today,7,4)
!  show '$filepath -' $filepath 
!  show '$Report_MMDDYYYY - ' $Report_MMDDYYYY

  Let $HSA_Flag_in = &GEX_RC_BEN.RUN_CNTL_ID
  Let $HSA_Flag = Lower($HSA_Flag_in)
  show '$HSA_Flag - '  $HSA_Flag
!******************************************************************
! ISDVAWD ITG# 786- 4/03/2014 - End  
!****************************************************************** 
  
    If Rtrim (&GEX_RC_BEN.AsOfDate, ' ') = ''
     Let $AsOfDate = $AsOfToday
     SHOW '$AsOfDate>' $AsOfToday
  End-If

  Do GEXXX976-Select-Benefit-Plan-Parameters
  Do GEXXX919-Select-DEDCD-Parameters

End-Procedure


Begin-Procedure P140-Open-File
#debug9 Show 'P140-Open-File'
!  Let $file1 = '{OUTFILE}' || Lower($ReportID) || '.csv'	!ISDVAWD 04/03/2014 - Replaced with Output path from runcntl page

!*****************************************************************
! ISDVAWD ITG# 786- 4/03/2014 - Begin  - File output/path
!*****************************************************************  
   Let $filepath = &GEX_RC_BEN.FILENAME
   show '&GEX_RC_BEN.FILENAME -' $filepath 
   if $filepath = '' or $filepath= ' '  
   	let $path = '\\corp.gianteagle.com\peoplesoft\PSHR\temp\'
   	let $filename = $path ||$ReportID ||'_'||$Report_MMDDYYYY ||'.csv'
   else
   	let $filename =  $filepath ||$ReportID ||'_'||$Report_MMDDYYYY ||'.csv'
   end-if

   let $file1 = rtrim($filename,' ')
   show 'Filepath = ' $file1 
!******************************************************************
! ISDVAWD ITG# 786- 4/03/2014 - End  
!****************************************************************** 

  Open $file1
       As 1
       For-Writing
       Record=300:Fixed
       Status=#filestat

  If #filestat != 0
     Show 'Error opening output file.  Program terminating.'
     Stop
  End-If

!***  Begin - ISDVAWD 04/03/2014  
  If $HSA_Flag = 'gexbn627_highmark'			!Highmark
    do P240-1-Write-Header
  end-if
  
  if $HSA_Flag = 'gexbn627_upmc'			!UPMC
    do P240-2-Write-Header
  end-if
!***  End - ISDVAWD 04/03/2014  
End-Procedure


Begin-Procedure P150-Get-Last-Confirmed-Pay
#debug9 Show 'P150-Get-Last-Confirmed-Pay'
Begin-Select
MAX(PAY_END_DT) &PAY_END_DT

  Let $pay_end_dt = &PAY_END_DT

  SHOW '$pay_end_dt   :'  $pay_end_dt

  Do Format-DateTime($pay_end_dt, $payend, {DEFMDY}, '', '')

  Let $Year4 = '1'
  Do Format-DateTime($pay_end_dt, $payenddt, {DEFMDY}, '', '')

  Let $pay_end_dt_MMDDYYYY = Substr($payenddt,1,2) || Substr($payenddt,4,2) || Substr($payenddt,7,4)
  Let $pay_end_dt_YYMMDD = Substr($payenddt,9,2) || Substr($payenddt,1,2) || Substr($payenddt,4,2)

  show ' '
  Show 'Last confirmed pay end date:  ' $pay_end_dt
  show ' '

FROM   PS_PAY_CALENDAR

WHERE  PAY_END_DT      <= $AsOfDate   !$AsOfToday
  AND  PAY_OFF_CYCLE_CAL = 'N'		!ISDVMZA
AND    PAY_CONFIRM_RUN  = 'Y'
End-Select
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
Begin-Select
pc.company
pc.emplid
pc.empl_rcd
pc.name
pc.paygroup
pd.ded_class
pd.plan_type
Sum(pd.ded_cur) &ded_cur


	  Add 1 to #main-process
	  let $Data-Found-Flag = 'Y'
	
	  let $ssn               = &pc.emplid
	  let $plan_type         = &pd.plan_type
	  let $name              = &pc.name
	  let $ee_amt_1          = &ded_cur
	  let $ee_amt            = EDIT($ee_amt_1,'999999.99')
	  Let $er_amt            = '000000.00'
	  Let $er_amt1 = '=' || '"' || $er_amt || '"'
	
	   show '$ssn       :'  $ssn
	   show '$AsOfToday    :' $AsOfToday
	   SHOW '$pay_end_dt   :'  $pay_end_dt
	
	         do Get-Check-Date
	     Let $check_dt = edit(&CD.CHECK_DT,'mm/dd/yyyy')
	
	     Let $INPYDATE		   = edit(&CD.CHECK_DT,'yyyymmdd')
	  IF $INPYDATE	 = ''
	     LET $INPYDATE = '19000101'
	  END-IF
!******************************************************************
! ISDVAWD ITG# 786- 4/03/2014 - Begin  - Variables/Highmark
!****************************************************************** 	
	  Let $grp_id = '14696'
	  Let $group_id = '=' || '"' || $grp_id || '"'
	  Let $grp_name = 'Giant Eagle, Inc.'
	  Let $group_name = '"' || Replace($grp_name, '"', '""') || '"'
	  Let $acct_type = 'HSA'
	  Let $Contrib_effdt = $check_dt
	  Let $Contrib_desc = ''
	  Let $Part_Pre-tax_cont = $ee_amt
	  Let $Part_Post-tax_cont = $er_amt1
	  Let $Grp_Post-tax_cont = $er_amt1
	  Let $Grp_Post-tax_cont = $er_amt1
	  Let $Record_terminaor = '~"'
!******************************************************************
! ISDVAWD ITG# 786- 4/03/2014   - Variables/UPMC
!****************************************************************** 	
	  let $Py_emplid = &pc.emplid  !$ssn  
	  let $Funding_source = '1'
	  let $Transaction_Type = 'CR'
	  let $Amount = $ee_amt
	  let $Description = ''
	  let $Effdt_ovride = ''
	  let $Name1 = '"' || Replace(&pc.name, '"', '""') || '"'
	     
	   if $HSA_Flag = 'gexbn627_highmark' 						!ISDVAWD 04/03/2014 - Print/Write Highmark File
	       show 'Printing/Writing Highmark - ' $HSA_Flag 
	     if  $ORDER_BY = 'ORDER BY pc.name'
	     	do P225-Print-Record
	     end-if
	     if  $ORDER_BY = 'ORDER BY pc.emplid'
	     	do P240-1-Write-Detail-Record
	     end-if
	    end-if  
	   
	   if $HSA_Flag = 'gexbn627_upmc'						!ISDVAWD 04/03/2014 - Print/Write UPMC File			   
	       show 'Printing/Writing UPMC - ' $HSA_Flag
	     if  $ORDER_BY = 'ORDER BY pc.name'
	     	do P225-2-Print-Record
	     end-if
	     if  $ORDER_BY = 'ORDER BY pc.emplid'
	     	do P240-2-Write-Detail-Record
	     end-if
	    end-if     
!******************************************************************
! ISDVAWD ITG# 786- 4/03/2014 - End
!****************************************************************** 

From   ps_pay_check pc,
       ps_pay_deduction pd
Where  pc.company        = pd.company
And    pc.paygroup       = pd.paygroup
And    pc.pay_end_dt     = pd.pay_end_dt
And    pc.off_cycle      = pd.off_cycle
And    pc.page_num       = pd.page_num
And    pc.line_num       = pd.line_num
And    pc.sepchk         = pd.sepchk
And    pd.pay_end_dt     = $pay_end_dt
AND [$GEXXX976_INCLUDE_PLAN_TYPE_CRITERIA]
AND [$GEXXX976_INCLUDE_BENEFIT_PLAN_CRITERIA]
AND [$GEXXX919_INCLUDE_DEDCD_CRITERIA]
Group By  pc.company,
pc.emplid,
pc.name,
pc.paygroup,
pc.empl_rcd,
pd.ded_class,
pd.plan_type
Having Sum(pd.ded_cur)  <> 0
[$ORDER_BY]
End-Select
End-Procedure


!***********************************************************************************
Begin-procedure Get-Check-Date
!***********************************************************************************
#debug9 Show 'Get-Check-Date'

Begin-SELECT

CD.CHECK_DT

FROM PS_PAY_CHECK CD
WHERE CD.EMPLID   = &pc.emplid
  AND CD.EMPL_RCD = &pc.EMPL_RCD
  AND CD.COMPANY  = &pc.COMPANY
  AND CD.PAYGROUP = &pc.PAYGROUP
  AND CD.CHECK_DT =
       (SELECT MAX(check_dt) FROM PS_PAY_CHECK D
            WHERE D.COMPANY     = &pc.COMPANY
              AND D.PAYGROUP    = &pc.PAYGROUP
	      AND D.emplid      = &pc.EMPLID
              AND D.EMPL_RCD    = &pc.EMPL_RCD
	      AND CHECK_DT   <= $AsofDate)  !$AsOfToday

end-select

End-Procedure

!**************************************************************************
Begin-Procedure P225-Print-Record
#debug9 Show 'P225-Print-Record'

    do Get-Emp-Ssn ($ssn,$Ssn_Out)

     print $Ssn_Out          (+1,{#column1})
     print $plan_type          (,{#column2})
     print $name               (,{#column3})
     print $INPYDATE           (,{#column4})
     print $ee_amt             (,{#column5})
     print $er_amt             (,{#column6})


End-Procedure

!*****************************************************************
! ISDVAWD ITG# 786- 4/03/2014 - Begin  
!*****************************************************************
!*********************************************************************
!Writes the header information in the Highmark report.
!*********************************************************************
begin-procedure P240-1-Write-Header

   string 'Group ID'
          'Group Name'
          'Participant Code'
!          'Name'
	  'Last Name'
	  'First Name'
          'Account Type' 
          'Contribution Effective Dt'
          'Contribution Desc'
          'Part.Pre-Tax Contribution' 
          'Part.Post-Tax Contribution'
          'Group Pre-Tax Cont' 
          'Group Post-Tax Cont'
          'Record Terminator' 
          BY $delimiter into $head

   show 'Header: ' $head

   write 1 from $head

end-procedure P240-1-Write-Header


!*********************************************************************
!Writes the header information in the UPMC report.
!*********************************************************************
begin-procedure P240-2-Write-Header

   string 'Payroll Employee ID'
          'Funding Source'
          'Transaction Type'
          'Amount'
          'Description' 
          'Effective Date Override'
          'Name'
          BY $delimiter into $head

   show 'Header: ' $head

   write 1 from $head

end-procedure P240-2-Write-Header


Begin-Procedure P240-1-Write-Detail-Record
#debug9 Show 'P240-1-Write-Detail-Record'

  do Get-Emp-Ssn ($ssn,$Ssn_Out)
               
  string $group_id
         $group_name
         $Ssn_Out !GEX_SEC_REENG 2015-04-29 Vahini Katta
         $name
         $acct_type
         $Contrib_effdt
         $Contrib_desc
         $Part_Pre-tax_cont
         $Part_Post-tax_cont
         $Grp_Post-tax_cont
         $Grp_Post-tax_cont
         $Record_terminaor
         BY $delimiter into $detail
               
   write 1 from $detail                           

  Add 1 to #recs-written

  If #filestat <> 0
     Show 'Error writing output file1.  Program terminating.'
     Stop
  End-If
End-Procedure


!**************************************************************************
Begin-Procedure P225-2-Print-Record
#debug9 Show 'P225-Print-Record'

    do Get-Emp-Ssn ($ssn,$Ssn_Out)

     print $Ssn_Out          (+1,{#column1}) !GEX_SEC_REENG 2015-04-29 Vahini Katta
     print $plan_type          (,{#column2})
     print $name               (,{#column3})
     print $INPYDATE           (,{#column4})
     print $ee_amt             (,{#column5})
     print $er_amt             (,{#column6})


End-Procedure

Begin-Procedure P240-2-Write-Detail-Record
#debug9 Show 'P240-1-Write-Detail-Record'
    do Get-Emp-Ssn ($Py_emplid,$Ssn_Out) !GEX_SEC_REENG 2015-04-29 Vahini Katta
  string $Ssn_Out !$Py_emplid !GEX_SEC_REENG 2015-04-29 Vahini Katta
         $Funding_source
         $Transaction_Type
         $Amount
         $Description
         $Effdt_ovride
         $Name1
         BY $delimiter into $detail
               
   write 1 from $detail 

  Add 1 to #recs-written

  If #filestat <> 0
     Show 'Error writing output file1.  Program terminating.'
     Stop
  End-If
End-Procedure

!*****************************************************************
! ISDVAWD ITG# 786- 4/03/2014 - End  
!***************************************************************** 

Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'

  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (5) center
  End-If

  Do Format-Number(#recs-written,$recs-written,'888,888,888')
  Do Format-Number(#main-process,$main-process,'888,888,888')

   	  Show ''
	  Show $recs-written  ' records written to ' $file1
	  show $main-process  ' records read from main process'
	  Show ''
  Do P310-Close-File

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
End-Procedure


Begin-Procedure P310-Close-File
#debug9 Show 'P310-Close-File'
  Close 1

  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop
  End-If
End-Procedure

#Include 'gexxx919.sqc'  !Get Dedcd multiple row table
#Include 'gexxx912.sqc'  !Get Plan Type/Benefit Plan Multiples Run Controls
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx976.sqc'  !
#include 'gexxx920.sqc'  !Get ben single row run control
#include 'gexxx940.sqc'  !Get Coverage Elect multiple row table
#include 'gexxx951.sqc'
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'getgeid.sqc'   !Get 7 digit Emplid


