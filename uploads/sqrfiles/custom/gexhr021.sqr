!***********************************************************************
!  GEXHR021:  AGE 50-90 EXEMPT REPORT                                  *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXHR021:             Age 50-90 Exempt Report                        *
!                                                                      *        
! Narrative:		This program will provide an EE listing for    *
!                       all employees (excluding employees for         *
!                       independent stores) that are between the ages  *
!                       of 50 and 90 for the previous month.           *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!			      #debug8 key variable values                    *
!			      #debug7 data returned from sql calls           * 
!                                                                      *  
! SQL Tables:		gex_dept_tbl                                   *
!                       personal_data                                  *
!                       jobcode_tbl                                    *
!                       job                                            *
!                                                                      *
! Written by:		Jim Hutchison  02/09/98                        *       
!                                                                      *
! Normally Run:		Monthly                                        *
!                                                                      *
! Control Parms:		FOR WHERE CLAUSE:                              *
!				  Company Division Code                        *
!				  Company  	                                   *
!				  Paygroup  	                             *
!				  Deptid	                                   *
!				  Employee Status	                             *
!				  Account Code                                 *
!				  As Of Date                                   *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!	INITIALS	DATE		DESCRIPTION OF THE CHANGE                *
!***********************************************************************
!	JDH		02/09/98	Initial Creation                         *
!                                                                      *
!       GBD             07/15/2002      Added Fieldvalue to effective  *
!                                       dated selection of the         *
!                                       Load-Lookup procedure.         *
! ISDVNPK   08/17/2007 Upgrade 8.3 - 9.0 Added PS_PER_ORG_INST for ORIG_HIRE_DT
! GEX-MXT   04/02/2008 ADDED THE join condition for PER_ORG_INST       *
! ISDVMXD   02/02/2009 ITG 56799 JT.Descr changes for SQRs	       * 	
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization


begin-report
#debug9 Show 'begin-report'

  do Init-DateTime           !datetime.sqc
  do Init-Number             !number.sqc
  do Get-Current-DateTime    !curdttim.sqc
  do P000-Init-Report
  do P100-Process-Main
  do Reset                   !reset.sqc
  do Stdapi-Term             !stdapi.sqc
  Show 'Successful end of report'
end-report


begin-heading 7
#debug9 Show 'begin-heading'

  #Include 'stdhdg01.sqc'

  Let $X000_temp_out = 'Sorted by ' || $X000_ORDER_BY
  Print $X000_temp_out               (3,)  center
  Let $X000_temp_out = 'Report as of ' || $X000_REPORT_HEADING_ASOFDATE
  Print $X000_temp_out               (4,)  center

  PRINT $CompanyName                 (5,) center

  PRINT   'EMPLOYEE'                 (+2,15)
  PRINT   'ANNUAL'                   (,96)
  PRINT   'HIRE'                     (,106)
  PRINT   'EEO'                      (,118)
  PRINT   'JOB'                      (,130)

  PRINT   'DEPARTMENT'               (+1,1)
  PRINT   'TYPE'                     (,15)
  PRINT   'BIRTHDATE'                (,29)
  PRINT   'AGE'                      (,42)
  PRINT   'SEX'                      (,49)
  PRINT   'NAME'                     (,56)
  PRINT   'SALARY'                   (,96)
  PRINT   'DATE'                     (,106)
  PRINT   'CATEGORY'                 (,118)
  PRINT   'TITLE'                    (,130)
  PRINT   'SSN#'                     (,164)
end-heading


begin-procedure P000-Init-Report
#debug9 Show 'P000-Init-Report'

  move 'GEXHR021' to $ReportID
  move 'AGE 50-90 EXEMPT REPORT' to $ReportTitle
  do Stdapi-Init

  Show '$ReportID=' $ReportID
  Show '$ReportTitle=' $ReportTitle
  Show '$ReportDate=' $ReportDate
  Show '$ReportTime=' $ReportTime

  if $prcs_process_instance = ''
    let $GEXXX907_INCLUDE_DIV_CD_CRITERIA           = '1=1'           
    let $GEXXX900_INCLUDE_COMPANY_CRITERIA          = '1=1'
    let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1' 
    let $GEXXX902_INCLUDE_DEPTID_CRITERIA	          = '1=1'
    let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA         = '1=1'
    let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA          = '1=1'
    let $X000_WHERE_SELECT_ASOFDATE                 = $AsOfToday
    let $X000_ORDER_BY = ' '

  Else

    Do GEXRCHR1-SELECT-PARAMETERS

    Let $GEXXX900_Company_Alias  = 'J.COMPANY'
    Do GEXXX900-Select-Company-Parameters

    Let $GEXXX901_Company_Alias  = 'J.COMPANY'
    Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
    Do GEXXX901-Select-Company-Paygroup-Parameters

    Let $GEXXX902_Deptid_Alias = 'J.DEPTID'
    Do GEXXX902-Select-Deptid-Parameters

    Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'
    Do GEXXX903-Select-Emp-Stat-Parameters

    Let $GEXXX907_Div_CD_Alias = 'GDT.GEX_COMPANY_DIV_CD'                    
    Do GEXXX907-Select-Div-CD-Parameters 
          
    Let $GEXXX909_Acct_CD_Alias = 'J.ACCT_CD'
    Do GEXXX909-Select-Acct-CD-Parameters

    Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_HR.AsOfDate
    If Rtrim ($GEX_RC_HR.AsOfDate, ' ') = ''
      Let $X000_WHERE_SELECT_ASOFDATE = $AsOfToday
    End-If
  End-If

  Do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')
  Let $X000_ORDER_BY = 'Company, Department, Employee Type, Employee Name'

  Show '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  Show '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA
  Show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA
  Show '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA
  Show '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA
  Show '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA
  Show '$X000_WHERE_SELECT_ASOFDATE ='   $X000_WHERE_SELECT_ASOFDATE

  do Convert-To-DTU-Date($X000_WHERE_SELECT_ASOFDATE ,$X000_WHERE_SELECT_ASOFDATE_DTU)
  do dtu-add-months($X000_WHERE_SELECT_ASOFDATE_DTU,-1,$MonthAgoDate_DTU)
  do dtu-month-end($MonthAgoDate_DTU,$MonthAgoEnd_DTU)
  do Convert-From-DTU-Date($MonthAgoEnd_DTU,$MonthAgoEnd)

  Do P050-Print-Cover-Page
  Do P060-Get-Xlat-Lookup
end-procedure


begin-procedure P050-Print-Cover-Page
#debug9 Show 'P050-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OPRID          ='                                  (+2,5)
  Print $Prcs_OPRID                                               (0,+2)
  Print '$PRCS_RUN_CNTL_ID    ='                                  (+1,5)
  Print $PRCS_RUN_CNTL_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+2,5)
  Print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA                 (0,+2)
  Print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA                (0,+2)
  Print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,5)
  Print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA       (0,+2)
  Print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,5)
  Print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)
  Print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,5)
  Print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA               (0,+2)
  Print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA                (0,+2)

  Print 'As Of Date :'                                        (+2,5)
  Print $X000_REPORT_HEADING_ASOFDATE                         (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $X000_ORDER_BY                                        (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
  Let #PAGE-COUNT = 1
End-Procedure


begin-procedure P060-Get-Xlat-Lookup
#debug9 Show 'P060-Get-Xlat-Lookup'

  Load-Lookup
    Name=XlatLookup
    Rows=3
    Table='PSXLATITEM X'   !'XLATTABLE X'   !ISDVNPK 8/17/2007 Modified for Upgrade 9.0 
    Key='X.FIELDVALUE'
    Return_Value='X.XLATSHORTNAME'
!GBD 07/15/2002 Begin
!    Where='X.FIELDNAME = ''EMPL_TYPE'' AND X.EFF_STATUS=''A'' AND X.LANGUAGE_CD=''ENG'' AND X.EFFDT=(SELECT MAX(EFFDT) FROM XLATTABLE X1 WHERE X1.FIELDNAME=X.FIELDNAME AND X1.LANGUAGE_CD=''ENG'' AND X1.EFFDT<=sysdate AND X1.EFF_STATUS=''A'')'
  !ISDVNPK 8/17/2007 Modified for Upgrade 9.0 
  !  Where='X.FIELDNAME = ''EMPL_TYPE'' AND X.EFF_STATUS=''A'' AND X.LANGUAGE_CD=''ENG'' AND X.EFFDT=(SELECT MAX(EFFDT) FROM XLATTABLE X1 WHERE X1.FIELDNAME=X.FIELDNAME AND X1.LANGUAGE_CD=X.LANGUAGE_CD AND X1.FIELDVALUE = X.FIELDVALUE AND X1.EFFDT<=sysdate AND X1.EFF_STATUS=''A'')'
   Where='X.FIELDNAME = ''EMPL_TYPE'' AND X.EFF_STATUS=''A'' AND X.EFFDT=(SELECT MAX(EFFDT) FROM PSXLATITEM X1 WHERE X1.FIELDNAME=X.FIELDNAME AND X1.FIELDVALUE = X.FIELDVALUE AND X1.EFFDT<=sysdate AND X1.EFF_STATUS=''A'')'
!GBD 07/15/2002 End
    Quiet
end-procedure


begin-procedure P100-Process-Main
#debug9 Show 'P100-Process-Main'

  Let $Data-Found-Flag = 'N'

begin-SELECT
j.company    ()     on-break level=1
                             print=never
                             save=$previous_company
                             before=P110-Before-Company
                             after=P120-After-Company
j.deptid     ()     on-break level=2
                             print=never
                             save=$previous_dept
                             after=P130-After-Dept
j.empl_type  ()     on-break level=3
                             print=never
                             save=$previous_type
                             after=P140-After-Type
pd.birthdate
  do Diff-Date($MonthAgoEnd,&pd.birthdate,#Years,#Months,#Days)
  if #Years >= 50 and
     #Years <= 90
    let $FieldValue = &j.empl_type
    do P200-Lookup-Translate-Table
    let $EmployeeType = $XlatValue
    if $EmployeeType=''
      let $err_msg = 'EMPL_TYPE '||$FieldValue||' is invalid'
      display $err_msg
    else
      add 1 to #company-count
      add 1 to #dept-count
      add 1 to #type-count
      Let $Data-Found-Flag = 'Y'
      do P300-Print-Detail
    end-if
  end-if
pd.sex
pd.name
j.annual_rt
inst.orig_hire_dt    ! pd.orig_hire_dt  !ISDVNPK 8/17/2007 Modified for Upgrade 9.0 
jt.eeo1code
jt.descr
j.emplid
j.position_nbr		!isdvmxd added for ITG 56799 on 02/02/2009


	Let $Position_Nbr = LTrim(RTrim(&j.position_nbr,' '),' ')	!isdvmxd added for ITG 56799 on 02/02/2009

  from ps_gex_dept_tbl  gdt,
       ps_personal_data pd,
       ps_jobcode_tbl   jt,
       ps_job           j,
       PS_PER_ORG_INST INST  !ISDVNPK 8/17/2007 Modified for Upgrade 9.0 
       
       
 where pd.emplid        = j.emplid
   and j.jobcode        = jt.jobcode
   AND INST.EMPLID = PD.EMPLID  !ISDVNPK 8/17/2007 Modified for Upgrade 9.0
   AND INST.ORG_INSTANCE_ERN  = J.EMPL_RCD	!GEX-MXT added for PER_ORG_INST join
   
   and j.effdt          =
      (select max(effdt)
         from ps_job
        where emplid    = j.emplid
          and empl_rcd = j.empl_rcd
          and effdt    <= $X000_WHERE_SELECT_ASOFDATE)
   and j.effseq         =
      (select max(effseq)
         from ps_job
        where emplid    = j.emplid
          and empl_rcd = j.empl_rcd
          and effdt     = j.effdt)
   and jt.effdt         =
      (select max(effdt)
         from ps_jobcode_tbl
        where jobcode   = jt.jobcode)
AND [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
AND [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
And    j.deptid                  = gdt.deptid
And    gdt.effdt                 =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt             <= $X000_WHERE_SELECT_ASOFDATE)
And    gdt.sequence_number       =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt              = gdt.effdt)
 order by j.company, j.deptid, j.empl_type, pd.name
end-SELECT
  If $Data-Found-Flag = 'N'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If
end-procedure


begin-procedure P110-Before-Company
#debug9 Show 'P110-Before-Company'

  let $Company = &j.company
  do Get-Company-Data
end-procedure


begin-procedure P120-After-Company
#debug9 Show 'P120-After-Company'

  if #company-count > 0
    print $CompanyNameAbbrv           (,15)
    print 'COUNT'                     (,+1)
    print ':'                         (,34)
    print #company-count              (,+1) edit 9,999,999
    new-page
  end-if
  move 0 to #company-count
  move 0 to #dept-count
  move 0 to #type-count
end-procedure


begin-procedure P130-After-Dept
#debug9 Show 'P130-After-Dept'

  if #dept-count > 0
    print $previous_dept              (+1,15)
    print 'COUNT'                     (,+1)
    print ':'                         (,34)
    print #dept-count                 (,+1) edit 9,999,999
    print ' '                         (+2,1)
  end-if
  move 0 to #dept-count
  move 0 to #type-count
end-procedure


begin-procedure P140-After-Type
#debug9 Show 'P140-After-Type'

  if #type-count > 0
    print $EmployeeType               (+2,15)
    print 'COUNT'                     (,+1)
    print ':'                         (,34)
    print #type-count                 (,+1) edit 9,999,999
    print ' '                         (+1,1)
  end-if
  move 0 to #type-count
end-procedure


begin-procedure P200-Lookup-Translate-Table
#debug9 Show 'P200-Lookup-Translate-Table'

  let $LookupVal=$FieldValue
  Lookup XlatLookup $LookupVal $XlatValue
end-procedure


begin-procedure P300-Print-Detail
#debug9 Show 'P300-Print-Detail'

  print &j.deptid         (+1,1)

  print $EmployeeType     (,15)

  do Format-DateTime(&pd.birthdate,$out1,{DEFMDY},'','')
  print $out1             (,29)

  print #Years            (,42)   edit 999
  print &pd.sex           (,49)
  print &pd.name          (,56)
  print &j.annual_rt      (,91)   edit 999,999,999

  do Format-DateTime(&inst.orig_hire_dt,$out2,{DEFMDY},'','')
  print $out2             (,106)

	Do Get-Position-Title		!isdvmxd added for ITG 56799 on 02/02/2009
  print &jt.eeo1code      (,118)
  !isdvmxd added for ITG 56799 on 02/02/2009 -- Begin
  Show 'EMPLID = ' &j.emplid 
  If $PosName = ' '
  	Show 'pdt.descr is blank so jt.descr = ' &jt.descr
  	print &jt.descr         (,130)
  Else
  	!Show 'pdt.descr is NNOTT blank so pdt.descr = ' &pdt.descr
  	print $PosName		(,130)
  End-If  	
  !isdvmxd added for ITG 56799 on 02/02/2009 -- End
  print &j.emplid         (,164)  edit xxx-xx-xxxx
end-procedure


!#include 'GEXXX900.sqc'  !Get company multiple row table
!#include 'GEXXX901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table

#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx904.sqc'  !Get grade multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx921.sqc'  !Get hr single row run control

#include 'askaod.sqc'    !Ask As Of Date input
#include 'getcodta.sqc'  !Get company data
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date math
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'getposnm.sqc'	 !Get-POsition-Title procedure			!isdvmxd added for ITG 56799 on 02/02/2009 