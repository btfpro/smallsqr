!***********************************************************************
! GEXBN055:  Mailing Labels by coverage elections and by benefit plan  *
!            within a certain plan type                                *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle,Inc.; it is not to be copied, reproduced, or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! SXC       02/16/2000    Initial Creation                             *
! SXC       03/27/2000    7.51 retro fit to include the postal field   *
!                         from personal_data instead of zip            *
! SXC       03/28/2000    Included 12 test labels to be printed at the *
!                         beginning of the dat file as requested by the*
!                         user.
! SRK       08/01/2002    Modifed empl_rcd# to empl_rcd and changed    *
!                         setup32a to ptset02                          *
!***********************************************************************

#Include 'setenv.sqc'   !Set environment

Begin-Setup
!SRK 08/01/02 Begin
!#include 'setupdb.sqc'
!#include 'setup32a.sqc'
#Include 'ptset02.sqc'
!SRK 08/01/02 End
End-Setup

!***********************************************************************
Begin-Report
  Do Init-DateTime
  Do Init-Number
  do Get-Current-DateTime
#Include 'ldplntyp.sqc' !Load-Lookup Table with Plan Types
  Do Init-Report
  Do P100-Open-File
  Do Stdapi-Term
  Do select-bprogram
  show 'Successful End of Report'
End-Report

!***********************************************************************
Begin-Procedure Init-Report

  move 'GEXBN055' to $ReportID

  Do Stdapi-Init

  Let $GEXXX911_Benefit_Program_Alias = 'A1.BENEFIT_PROGRAM'
  Let $GEXXX911_Plan_Type_Alias       = '1'
  Let $GEXXX911_Benefit_Plan_Alias    = '1'
  Let $GEXXX912_Plan_Type_Alias       = 'B.PLAN_TYPE'
  Let $GEXXX912_Benefit_Plan_Alias    = 'B.BENEFIT_PLAN'
  Let $Coverage_Elect_Alias           = 'B.COVERAGE_ELECT'

  if $prcs_process_instance = ''      ! Must have been submitted via SQRW
      Do P110-SQRW-Run-Controls
      Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1' 
      Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA 	= '1=1'
      Let $range_crit = 'D.COVERAGE_BEGIN_DT BETWEEN '||''''||$FromDate||
			''''||' AND '||''''||$ThruDate||''''
  else
      Do GEXXX922-Select-Parameters
      Let $GEXXX901_Company_Alias  = 'J.COMPANY' 
      Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'    
      Do GEXXX901-Select-Company-Paygroup-Parameters    

      Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'  
      Do GEXXX903-Select-Emp-Stat-Parameters

      Do P120-Process-Scheduler-Run-Controls
      Do Process-Main

      Let $range_crit = 'D.COVERAGE_BEGIN_DT BETWEEN '||''''||$FromDate||
			''''||' AND '||''''||$ThruDate||''''

      date-time () HH:MI:SS &timeBegan
      date-time () MM/DD/YYYY &dateBegan
      show 'Report Began at ' &timeBegan ' on ' &dateBegan
      Show '$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = ' $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
      Show '$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = ' $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
      Show '$Coverage-Elect = ' $In-Coverage-Elect
      Show '$ThruDate = ' $ThruDate
   end-if
End-Procedure

!***********************************************************************
Begin-Procedure P100-Open-File
  Let $file1 = '{OUTFILE}' || lower($ReportID) || '.dat'
  open $file1
        As 1
        For-Writing
        Record=215:Fixed  ! Includes six lines each 35 characters long
        Status=#filestat  ! and five separator characters

  If #filestat != 0
     Display 'Error Opening output file.  Program terminating.'
     Stop
  Else
     Let $x_fill = 'XXX XXX XXX XXX XXX XXX'

     Let #i = 1      ! SXC 03/28/2000. 12 test labels will be printed at the beginning of file
     while #i <= 12
         write 1 from $X_fill:35
         write 1 from $x_fill:35
         write 1 from $X_fill:35
         write 1 from ' ':35
         write 1 from ' ':35
         write 1 from ' ':35
         add 1 to #i
     end-while       
!     write 1 from $X_fill:35
!     write 1 from $x_fill:35
!     write 1 from $X_fill:35
!     write 1 from ' ':35
!     write 1 from ' ':35
!     write 1 from ' ':35
!     write 1 from $X_fill:35
!     write 1 from $x_fill:35
!     write 1 from $X_fill:35
!     write 1 from ' ':35
!     write 1 from ' ':35
!     write 1 from ' ':35
  End-If
End-Procedure

!***********************************************************************
Begin-Procedure P110-SQRW-Run-Controls
  Let $BenefitProgramString = ''''
  While 1=1
      Display 'Enter Benefit Program or leave blank to exit.'
      Input $In-Benefit-Program Maxlen=3 'Benefit Program'
      Uppercase $In-Benefit-Program
      If Rtrim($In-Benefit-Program, ' ') = ''
	Concat '''' With $BenefitProgramString
	Break
      End-If
      If $BenefitProgramString <> ''''
	Concat ''',''' With $BenefitProgramString
      End-If
      Concat $In-Benefit-Program With $BenefitProgramString
  End-While

  If $BenefitProgramString = ''''''
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = 'ALL'
  Else
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = $GEXXX911_Benefit_Program_Alias || ' In (' || $BenefitProgramString || ')'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
  End-If

  Display 'Enter Plan Type/Benefit Plan or leave blank to exit.'
  While 1=1
    Input $In-Plan-Type Maxlen=2 'Plan Type'
    Uppercase $In-Plan-Type
    If Rtrim($In-Plan-Type, ' ') = ''
      Break
    Else
      Input $In-Benefit-Plan Maxlen=6 'Benefit Plan'
      Uppercase $In-Benefit-Plan
      If Rtrim($In-Benefit-Plan, ' ') = ''
	Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || $In-Plan-Type || ''')'
      Else
	Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || $In-Plan-Type || ''' And ' || $GEXXX912_Benefit_Plan_Alias || ' = '''  || $In-Benefit-Plan || ''')'
      End-If
      Add 1 To #GEX_RC_BEN_PLAN_ROWS
      If #GEX_RC_BEN_PLAN_ROWS = 1
	Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '(' || $Include_Condition
      Else
	Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While

  If #GEX_RC_BEN_PLAN_ROWS = 0
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ')'
    Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
  End-If

  Display 'Enter Coverage Elect or leave blank to exit.'
  input $In-Coverage-Elect Maxlen=1 'Coverage Elect'
  Uppercase $In-Coverage-Elect
  if rtrim($In-Coverage-Elect,' ') = ''
     let $In-Coverage-Elect = '1=1'
  else
    let $In-Coverage-Elect = 'B.COVERAGE_ELECT = '||''''||$In-Coverage-Elect||''''     
  end-if
!  Do Ask-From-Thru-Date

  Do Format-DateTime('19000101',$Century_Begin_Dt,{DEFCMP},'','native')
  Let $Fromdate = $century_begin_dt
  Do Format-DateTime('20000303',$AsOfToday,{DEFCMP},'','native')
  Let $ThruDate = $AsOfToday
End-Procedure

!***********************************************************************
Begin-Procedure Process-Main
  Let $where = ' '
  if RTRIM($GEX_RC_PAY.BIRTHDATE,' ') <> ''
     let $where = 'AND PD.BIRTHDATE '||$GEX_RC_PAY.GEX_OPERATOR1||''''||$GEX_RC_PAY.BIRTHDATE||''''
  end-if
  if RTRIM($GEX_RC_PAY.HIRE_DT,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'E.HIRE_DT '||$GEX_RC_PAY.GEX_OPERATOR2||''''||$GEX_RC_PAY.HIRE_DT||''''
     else
        let $where = 'AND E.HIRE_DT '||$GEX_RC_PAY.GEX_OPERATOR2||''''||$GEX_RC_PAY.HIRE_DT||''''
     end-if
  end-if
  if RTRIM($GEX_RC_PAY.postal,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'PD.postal = '||''''||$GEX_RC_PAY.postal||''''
     else
        let $where = 'AND PD.postal = '||''''||$GEX_RC_PAY.postal||''''         
     end-if
  end-if
  if RTRIM($GEX_RC_PAY.LOCATION,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'J.LOCATION = '||''''||$GEX_RC_PAY.LOCATION||''''
     else
        let $where = 'AND J.LOCATION = '||''''||$GEX_RC_PAY.LOCATION||''''
     end-if
  end-if
  if RTRIM($GEX_RC_PAY.EMPL_TYPE,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'J.EMPL_TYPE = '||''''||$GEX_RC_PAY.EMPL_TYPE||''''
     else
        let $where = 'AND J.EMPL_TYPE = '||''''||$GEX_RC_PAY.EMPL_TYPE||''''
     end-if
  end-if

  let $order_by_complete = 'N'
  let #i = 1
  let $match_found = 'N'
  let $order_by = ' '

  if $GEX_RC_PAY.YES_NO_FLAG = 'N'
      let $order_by = $order_by ||'PD.NAME '
  else
      let $order_by = $order_by ||'PD.EMPLID '
  end-if

  while $order_by_complete = 'N'
     display #i noline
     display ' time(s)'

     if #GEX_RC_PAY.COMPANY_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' ,J.COMPANY '
        goto endwhile
     end-if
     if #GEX_RC_PAY.PAYGROUP_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' ,J.PAYGROUP '
        goto endwhile
     end-if
     if #GEX_RC_PAY.ZIP_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' ,PD.postal '
        goto endwhile
     end-if

     if #GEX_RC_PAY.BENEFIT_PGM_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' ,A.BENEFIT_PROGRAM '
        goto endwhile
     end-if
     if #GEX_RC_PAY.LOCATION_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' ,J.LOCATION '
        goto endwhile
     end-if
     if #GEX_RC_PAY.BIRTHDATE_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' ,PD.BIRTHDATE '
        goto endwhile
     end-if
     if #GEX_RC_PAY.HIRE_DT_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' ,E.HIRE_DT '
        goto endwhile
     end-if
     if #GEX_RC_PAY.EMPL_TYPE_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' ,J.EMPL_TYPE '
        goto endwhile
     end-if
     if #GEX_RC_PAY.EMPL_STATUS_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' ,J.EMPL_STATUS '
        goto endwhile
     end-if
endwhile:
     if $match_found = 'Y'
        add 1 to #i
        let $match_found = 'N'
     else
        let $order_by_complete = 'Y'

   !    if $GEX_RC_PAY.YES_NO_FLAG = 'N'
   !       let $order_by = $order_by ||'PD.NAME'
   !    else
   !       let $order_by = $order_by ||'PD.EMPLID'
   !    end-if
     end-if
   end-while

   if RTRIM($order_by,' ') = ''
   !  let $order_by = 'ORDER BY J.COMPANY,J.PAYGROUP,PD.NAME'
      let $order_by = 'ORDER BY PD.NAME,J.COMPANY,J.PAYGROUP'
   else
      let $order_by = 'ORDER BY '||$order_by
   end-if
End-Procedure

!***********************************************************************
Begin-Procedure P120-Process-Scheduler-Run-Controls
  Do GEXRCBN1-SELECT-PARAMETERS

  Do GEXXX911-Select-Benefit-Program-Parameters
  Do GEXXX912-Select-Benefit-Plan-Parameters

  if rtrim(&GEX_RC_BEN.FROMDATE,' ') = ''
     do Format-DateTime('19000101',$Century_Begin_Dt,{DEFCMP},'','native')

    let $Fromdate = $century_begin_dt
  else
     let $FromDate = &GEX_RC_BEN.FROMDATE
  end-if
  if rtrim(&GEX_RC_BEN.THRUDATE,' ') = ''
     let $ThruDate = $AsOfToday
  else
     let $ThruDate = &GEX_RC_BEN.THRUDATE
  end-if

  If Rtrim(&GEX_RC_BEN.COVERAGE_ELECT, ' ') = ''
    let $In-Coverage-Elect  = '1=1'
  Else
    let $In-Coverage-Elect  = &GEX_RC_BEN.COVERAGE_ELECT
    let $In-Coverage-Elect = 'B.COVERAGE_ELECT = '||''''||$In-Coverage-Elect||''''
  End-If

End-Procedure

!***********************************************************************
Begin-Procedure select-bprogram
Begin-Select 
distinct a1.benefit_program &a1.benefit_program

 move &a1.Benefit_Program to $Benefit_Program
 let $health_record = 'Y'

 let $column1 = 'B.COVRG_CD'
 let $column2 = 'B.COVERAGE_BEGIN_DT'
 let $column3 = 'B.COVERAGE_END_DT'

 let $record = 'PS_PERSONAL_DATA PD, PS_JOB J, PS_HEALTH_BENEFIT B, PS_BEN_PROG_PARTIC A, ps_employment E'
 let $record_1 = 'PS_HEALTH_BENEFIT D'
 let $record_2 = 'PS_HEALTH_BENEFIT C'

 let $max_begin_dt_crit = ' B.COVERAGE_BEGIN_DT       ='||
      '(SELECT MAX(D.COVERAGE_BEGIN_DT)'||
       ' FROM  '||$record_1||
       ' WHERE D.EMPLID             = B.EMPLID'||
       ' AND   D.EMPL_RCD          = B.EMPL_RCD'||
       ' AND   D.PLAN_TYPE          = B.PLAN_TYPE'||
       ' AND '||$range_crit||
       ' AND   D.BENEFIT_NBR'||' = B.BENEFIT_NBR'||')'

 do select-participants
 let #check_total = 0

 let $health_record = 'N'
 let $column1 = 'B.COVERAGE_ELECT'

 let $record = 'PS_PERSONAL_DATA PD, PS_JOB J, PS_LIFE_ADD_BEN B, PS_BEN_PROG_PARTIC A, ps_employment E'
 let $record_1 = 'PS_LIFE_ADD_BEN D'
 let $record_2 = 'PS_LIFE_ADD_BEN C'
 let $max_begin_dt_crit = ' B.COVERAGE_BEGIN_DT       ='||
      '(SELECT MAX(D.COVERAGE_BEGIN_DT)'||
       ' FROM  '||$record_1||
       ' WHERE D.EMPLID             = B.EMPLID'||
       ' AND   D.EMPL_RCD          = B.EMPL_RCD'||
       ' AND   D.PLAN_TYPE          = B.PLAN_TYPE'||
       ' AND '||$range_crit||
       ' AND   D.BENEFIT_NBR'||' = B.BENEFIT_NBR'||')'

 do select-participants
 let #check_total = 0

 let $record = 'PS_PERSONAL_DATA PD, PS_JOB J, PS_DISABILITY_BEN B, PS_BEN_PROG_PARTIC A, ps_employment E'
 let $record_1 = 'PS_DISABILITY_BEN D'
 let $record_2 = 'PS_DISABILITY_BEN C'
 let $max_begin_dt_crit = ' B.COVERAGE_BEGIN_DT       ='||
      '(SELECT MAX(D.COVERAGE_BEGIN_DT)'||
       ' FROM  '||$record_1||
       ' WHERE D.EMPLID             = B.EMPLID'||
       ' AND   D.EMPL_RCD          = B.EMPL_RCD'||
       ' AND   D.PLAN_TYPE          = B.PLAN_TYPE'||
       ' AND '||$range_crit||
       ' AND   D.BENEFIT_NBR'||' = B.BENEFIT_NBR'||')'

 do select-participants
 let #check_total = 0

 let $record = 'PS_PERSONAL_DATA PD, PS_JOB J, PS_SAVINGS_PLAN B, PS_BEN_PROG_PARTIC A, ps_employment E'
 let $record_1 = 'PS_SAVINGS_PLAN D'
 let $record_2 = 'PS_SAVINGS_PLAN C'
 let $max_begin_dt_crit = ' B.COVERAGE_BEGIN_DT       ='||
      '(SELECT MAX(D.COVERAGE_BEGIN_DT)'||
       ' FROM  '||$record_1||
       ' WHERE D.EMPLID             = B.EMPLID'||
       ' AND   D.EMPL_RCD          = B.EMPL_RCD'||
       ' AND   D.PLAN_TYPE          = B.PLAN_TYPE'||
       ' AND '||$range_crit||
       ' AND   D.BENEFIT_NBR'||' = B.BENEFIT_NBR'||')'

 do select-participants
 let #check_total = 0

 let $record = 'PS_PERSONAL_DATA PD, PS_JOB J, PS_FSA_BENEFIT B, PS_BEN_PROG_PARTIC A, ps_employment E'
 let $record_1 = 'PS_FSA_BENEFIT D'
 let $record_2 = 'PS_FSA_BENEFIT C'
 let $max_begin_dt_crit = ' B.COVERAGE_BEGIN_DT       ='||
      '(SELECT MAX(D.COVERAGE_BEGIN_DT)'||
       ' FROM  '||$record_1||
       ' WHERE D.EMPLID             = B.EMPLID'||
       ' AND   D.EMPL_RCD          = B.EMPL_RCD'||
       ' AND   D.PLAN_TYPE          = B.PLAN_TYPE'||
       ' AND '||$range_crit||
       ' AND   D.BENEFIT_NBR'||' = B.BENEFIT_NBR'||')'

 do select-participants

 let $record = 'PS_PERSONAL_DATA PD, PS_JOB J, PS_PENSION_PLAN B, PS_BEN_PROG_PARTIC A, ps_employment E'
 let $range_crit = 'D.effdt BETWEEN '||''''||$FromDate||
			''''||' AND '||''''||$ThruDate||''''
 let $record_1 = 'PS_PENSION_PLAN D'
 let $record_2 = 'PS_PENSION_PLAN C'
 let $column2 = 'B.EFFDT'
 let $column3 = 'B.DEDUCTION_END_DT'

 let $max_begin_dt_crit = '    B.effdt       ='||
      '(SELECT MAX(D.effdt)'||
       'FROM  '||$record_1||
       ' WHERE D.EMPLID             = B.EMPLID'||
       ' AND   D.EMPL_RCD          = B.EMPL_RCD'||
       ' AND   D.PLAN_TYPE          = B.PLAN_TYPE'||
       ' AND '||$range_crit||
       ' AND   D.BENEFIT_NBR'||' = B.BENEFIT_NBR'||')'

 Do select-participants
 #DEFINE pension N

From   ps_ben_prog_partic a1
Where [$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA]
AND    A1.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_BEN_PROG_PARTIC
       WHERE  EMPLID          = A1.EMPLID
       AND    EMPL_RCD       = A1.EMPL_RCD
       AND    COBRA_EVENT_ID  = A1.COBRA_EVENT_ID
       AND    EFFDT          <= $ThruDate)
Order By a1.benefit_program
End-Select

Do Reset
End-Procedure

!***********************************************************************
Begin-Procedure select-participants
Let #rowcount = 0
Let #inputtran = 0
Let $x100_Get_Employees_Data_Flag = 'N'
Let $old_pdname = ''

 display 'In select participants'
 SHOW 'Coverage election '$In-Coverage-Elect
 SHOW 'Max begin Dt criteria ' $max_begin_dt_crit
 SHOW 'Benefit plan criteria ' $GEXXX912_Include_Benefit_Plan_Criteria
 SHOW 'Company/Paygrp criteria ' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
 SHOW 'Empl Status criteria ' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
 SHOW '$Where clause ' $where
 SHOW 'Order by ' $order_by

Begin-Select
A.BENEFIT_PROGRAM 
B.PLAN_TYPE       
B.BENEFIT_PLAN    
  move &B.Benefit_Plan to $Benefit_Plan

j.company
j.location
PD.NAME
pd.address1
pd.address2
pd.address3
pd.city
pd.state
! SXC 03/27/2000 Removed ZIP field & included the POSTAL field as part of the ver 7.51 retro fit
pd.postal

J.EMPLID
J.EMPL_RCD
J.EMPL_STATUS
J.EMPL_TYPE
J.REG_TEMP
J.FULL_PART_TIME
J.PAYGROUP
[$column1] &COVRG_CD=char
B.COVERAGE_ELECT
B.COVERAGE_ELECT_DT
[$column2] &b.coverage_begin_Dt=date    ! SXC 03/27/2000 Commented...   =char
[$column3] &b.coverage_end_dt=date      ! SXC 03/27/2000 Commneted...   =char
B.BENEFIT_NBR

 if &PD.NAME <> $old_pdname
    if rtrim($column2,' ') = 'B.EFFDT'
      let $begin_dt_crit = 'D.effdt <= '||''''||&b.coverage_begin_dt||''''
    else
      let $begin_Dt_crit = 'D.coverage_begin_dt <= '||''''||&b.coverage_begin_dt||''''
    end-if

    if &b.coverage_elect = 'E'
    else
      do get-benefit-plan
    end-if

    move ' ' to $first_line
    move ' ' to $second_line
    move ' ' to $third_line
    move ' ' to $fourth_line
    move ' ' to $fifth_line
    move ' ' to $sixth_line

   if $GEX_RC_PAY.GEX_INTERNAL = 'Y'
      let $first_line = &J.COMPANY||' '||&J.PAYGROUP

      move &PD.NAME to $second_line
 
      if $GEX_RC_PAY.GEX_LOCATION = 'Y'
         move &J.LOCATION to $third_line
      else
        if RTRIM(&PD.ADDRESS1,' ') <> ''
           move &PD.ADDRESS1 to $third_line
        end-if
        if RTRIM(&PD.ADDRESS2,' ') <> ''
           move &PD.ADDRESS2 to $fourth_line
        end-if
        if RTRIM(&PD.ADDRESS3,' ') <> ''
           move &PD.ADDRESS3 to $fifth_line
        end-if
        let #len = length(rtrim(&PD.CITY,' '))
        let $city = substr(&PD.CITY,1,#len)
        let $string = $city||', '||&PD.STATE||'  '||&PD.postal
   
        move $string to $sixth_line
      end-if
   else
      if $GEX_RC_PAY.GEX_SSN_OR_JOB = 'Y'
        move &J.EMPLID to $first_line
        move &PD.NAME to $second_line
        if RTRIM(&PD.ADDRESS1,' ') <> ''
           move &PD.ADDRESS1 to $third_line
        end-if

        if RTRIM(&PD.ADDRESS2,' ') <> ''
           move &PD.ADDRESS2 to $fourth_line
        end-if
        if RTRIM(&PD.ADDRESS3,' ') <> ''
           move &PD.ADDRESS3 to $fifth_line
        end-if
        let #len = length(RTRIM(&PD.CITY,' '))
        let $city = substr(&PD.CITY,1,#len)
        let $string = $city||', '||&PD.STATE||'  '||&PD.postal
 
        move $string to $sixth_line
      else
        move &PD.NAME to $first_line
        if RTRIM(&PD.ADDRESS1,' ') <> ''
           move &PD.ADDRESS1 to $second_line
        end-if
        if RTRIM(&PD.ADDRESS2,' ') <> ''
           move &PD.ADDRESS2 to $third_line
        end-if
        if RTRIM(&PD.ADDRESS3,' ') <> ''
           move &PD.ADDRESS3 to $fourth_line
        end-if
        let #len = length(RTRIM(&PD.CITY,' '))
        let $city = substr(&PD.CITY,1,#len)
        let $string = $city||', '||&PD.STATE||'  '||&PD.postal
 
        move $string to $fifth_line
     end-if
   end-if     

   show 'Emplid ' &J.EMPLID
   Do Write-File

   Let $x100_Get_Employees_Data_Flag = 'Y'
   Let $old_pdname = &PD.NAME
 end-if

FROM  [$record]
WHERE  A.BENEFIT_PROGRAM = $benefit_program
AND    A.EFFDT           =
      (SELECT MAX(EFFDT)
       FROM   PS_BEN_PROG_PARTIC
       WHERE  EMPLID     = A.EMPLID
       AND    EMPL_RCD  = A.EMPL_RCD
       AND    EFFDT     <= $ThruDate)

AND    PD.EMPLID = A.EMPLID

AND    E.emplid    = A.emplid
AND    E.empl_rcd = A.empl_rcd

AND    J.EMPLID    = A.EMPLID
AND    J.EMPL_RCD = A.EMPL_RCD

AND    j.effdt           =
      (Select Max(effdt)
       From   ps_job
       Where  emplid     = j.emplid
       And    empl_rcd  = j.empl_rcd
       And    effdt     <= $ThruDate)

AND    j.effseq         =
      (Select Max(effseq)
       From   ps_job
       Where  emplid    = j.emplid
       And    empl_rcd = j.empl_rcd
       And    effdt     = j.effdt)

AND    B.EMPLID    = A.EMPLID
AND    B.EMPL_RCD = A.EMPL_RCD

 AND [$In-Coverage-Elect]
AND [$max_begin_dt_crit]
AND   [$GEXXX912_Include_Benefit_Plan_Criteria]
AND   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA]
AND   [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
[$where]
[$order_by]
End-Select

if $x100_Get_Employees_Data_Flag = 'N'
    display 'NO DATA SELECTED FOR THIS REPORT RUN'	
else
    display 'Total labels printed: '	noline
    display #inputtran 
end-if
End-Procedure

!***********************************************************************
Begin-Procedure Get-Benefit-Plan
Begin-Select 
c.benefit_plan
 move &c.benefit_plan to $benefit_plan
 !show &c.benefit_plan
from [$record_2]
where c.emplid = &j.emplid
and c.empl_rcd = &j.empl_Rcd
and c.plan_type = &b.plan_type
and c.benefit_nbr = &b.benefit_nbr
and c.coverage_elect = 'E'
and c.effdt = (Select max(D.effdt)
		from [$record_1]
		where D.emplid = c.emplid
		and D.empl_rcd = c.empl_rcd
		and D.plan_type = c.plan_type
		and D.benefit_nbr = c.benefit_nbr
		and D.benefit_plan = c.benefit_plan
		and D.coverage_elect = 'E'
                and [$begin_Dt_crit])
End-Select
End-Procedure

!***********************************************************************
Begin-Procedure Write-File
#debug9 Show 'Write-File'
  let #blank_line = 0
  write 1 from $First_Line:35
    status=#filestat

  if #filestat != 0
     display 'Error Writing output file.  Program terminating.'
     stop
  else
    if rtrim($second_line,' ') <> ''
    write 1 from $second_line:35
      status=#filestat
    else
      add 1 to #blank_line
    end-if
     if #filestat != 0
        display 'Error Writing output file.  Program terminating.'
        stop
     else
       if rtrim($third_line,' ') <> ''
        write 1 from $third_line:35
          status=#filestat
       else
         add 1 to #blank_line
       end-if
          if #filestat != 0
             display 'Error Writing output file.  Program terminating.'
             stop
          else
 	     if rtrim($fourth_line,' ') <> ''
             write 1 from $fourth_line:35
               status=#filestat
             else
              add 1 to #blank_line
	     end-if
	       if #filestat != 0
		     display 'Error Writing output file.  Program terminating.'
		     stop
	       else
		if rtrim($fifth_line,' ') <> ''
	          write 1 from $fifth_line:35
		      status=#filestat
		else
		      add 1 to #blank_line
		end-if
                  if #filestat != 0
		     display 'Error Writing output file.  Program terminating.'
		     stop
		  else
		    if rtrim($sixth_line,' ') <> ''
		    write 1 from $sixth_line:35
		      status=#filestat
		    else
		      add 1 to #blank_line
		    end-if
			  if #filestat != 0
			     display 'Error Writing output file.  Program terminating.'
			     stop
			  else
			   add 1 to #inputtran
			   add 1 to #rowcount
			  end-if
                  end-if
              end-if
          end-if
      end-if
  end-if
  let $spaces_line = ' '
  let #i = 1
  while #i <= #blank_line
    write 1 from $spaces_line:35
    add 1 to #i
  End-While
End-Procedure

!***********************************************************************
#include 'askftd.sqc'
#include 'gexxx920.sqc'  !Get ben single row run control
#Include 'gexxx912.sqc'  !Get gex_rc_ben_plan run controls
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getcvgcd.sqc'  !Get-Covrg-Code-Descr procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Format-DateTime procedures
#Include 'number.sqc'    !Format-Number procedure
#include 'gexxx911.sqc'
#Include 'stdapi.sqc'    !Update Process API
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table

#include 'gexxx913.sqc'
#include 'gexxx916.sqc'
!#include 'gexxx928.sqc'
#include 'gexxx922.sqc'  !Get pay single row run control

#Include 'datemath.sqc'  !Routines for date arithmetic

! *------------------------* End Of Report *-----------------------------*
