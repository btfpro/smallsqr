!***********************************************************************
! GEXHR057:  Purge Merit Increase Table                                *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXHR057 :            Purge Merit Increase Table                     *
!                                                                      *
! Narrative:            Process to delete all rows from                *
!                       Merit Increase Table.                          *
!                                                                      *
! SQL Tables:           PS_GEX_SALINC_EMPL   	                       *
!                                                                      *
! Written by:           Tony Labra                                     *
!                                                                      *
! Normally Run:         Yearly                                         *
!                                                                      *
! Control Parms:        None                                           *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS      DATE            DESCRIPTION OF THE CHANGE              *
!***********************************************************************
! AXL           09/17/1999      Initial Creation                       *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup02.sqc'

!*********************************************************************
begin-report
!*********************************************************************
#debug9 show 'begin-report'

  do Initialization
  do Open-Files
  do Main
  do Stdapi-Term
  do EOJ

end-report

!*******************************************************************
begin-procedure Open-Files
!*******************************************************************

  let $filenm= '{OUTFILE}' || lower($ReportId) || '.lis'

  open $filenm as 10 for-writing
      record=150:fixed
      status=#filests10
  if #filests10 <> 0
     display 'Open failed for file <' noline
     display $filenm noline
     display '>'
     stop
  end-if   
  write 10 from $ReportTitle
  write 10 from ' '
  write 10 from $ReportID
  write 10 from ' '
  write 10 from 'Merit Increase Table Purge:' $ReportDate ' ' $ReportTime
  write 10 from ' '
  write 10 from '---------------------------------------':40 

end-procedure


!***********************************************************************
begin-procedure Initialization
!***********************************************************************

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init
 
  date-time () hh:mi:ss &TimeBegan
  date-time () MM/DD/YYYY  &DateBegan
  show 'Report Began at ' &TimeBegan ' on '  &DateBegan

  Let $ReportID    = 'GEXHR057'
  Let $ReportTitle = 'Purge Merit Increase Table'

  Show '$ReportID='    $ReportID
  Show '$ReportTitle=' $ReportTitle

  
end-procedure

!*********************************************************************
begin-procedure Main
!*********************************************************************
let $sql-statement = 'gexhr057.SQR,Delete-table,Delete,PS_GEX_SALINC_EMPL'
begin-SQL On-Error=sql-diagnostic
DELETE FROM PS_GEX_SALINC_EMPL
end-SQL
  If #sql-error = 0
      let #row_deletes = #row_deletes + #sql-count
    else
      Show 'Delete failed - '
      let #invalid_deletes = #invalid_deletes + 1
    End-if

end-procedure

!*********************************************************************
begin-procedure sql-diagnostic
!*********************************************************************
      display $sqr-program noline
      display ': ' noline
      display $ReportID noline
      display ' - SQL Statement = '
      display $SQL-STATEMENT
      display 'SQL Status =' noline
      display #sql-status 99999 noline
      display ' ' noline
      display 'SQL Error  = ' noline
      display $sql-error
end-procedure


!***********************************************************************
Begin-Procedure EOJ
!***********************************************************************
          
      let $row_deletes   =   ltrim(edit(#row_deletes,'999,999'), ' ')
      let $invalid_deletes = ltrim(edit(#invalid_deletes,'999,999'), ' ')

      
      write 10 from ' '
      write 10 from 'SUMMARY INFORMATION'
      write 10 from ' '
      write 10 from ' '
      write 10 from '# rows deleted from GEX_SALINC_EMPL: ' $row_deletes
      write 10 from ' '
      write 10 from '# rows not deleted due to errors: ' $invalid_deletes
      write 10 from ' '

      close 10
 
  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'

End-Procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API



