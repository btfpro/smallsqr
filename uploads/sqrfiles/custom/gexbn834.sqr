!***********************************************************************
! CAUTION THIS VERSION HAS THE UPDATES COMMENTED OUT FOR TESTING       *
!                                                                      *
! GEXBN834:  HEALTH/WELFARE CONTINUATION FOR EMPLOYEES ON LOA  for     *
!            CLEVELAND MEAT AND CLERKS                                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXBN834: HEALTH/WELFARE CONTINUATION FOR EMPLOYEES ON LOA           *
!           BP=R33 and R34                                             *
!                                                                      *        
! Narrative:        Employees in Benefit Programs R33 and R34          *  
!                   get their coverage for 26 weeks.  When evaluated in*
!                   specific benefit plans, it may be rolled back to   *
!                   13 weeks.                                          *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           * 
!                                                                      *  
! SQL Tables:           job                                            *
!                       personal_data                                  *
!                       ben_prog_partic                                *
!                       health_benefit                                 *
!                       life_add_ben                                   *
!                       disability_ben                                 *
!                       pay_calendar                                   *
!                                                                      *
! Written by:           Susan Mahady                                   *       
!                                                                      *
! Normally Run:         Monthly                                        *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#       INITIALS   DATE    DESCRIPTION OF THE CHANGE              *
!***********************************************************************
! CSR HR-10548  SCM   10/01/2003  Initial Creation                     *
!               CWB   02/04/2004  Took over the CSR from Susan M.      *
! CSR HR-11193  MXR   04/11/2007  ITG # 40987 - remove 3 action_reason *
! S3 12815285   SXP   05/19/2009  Update Coverage Begin Date correctly *
!                                 in Bas Tables                        *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

begin-report
#debug9 Show 'begin-report'

  do Init-DateTime           !datetime.sqc
  do Init-Number             !number.sqc
  do Get-Current-DateTime    !curdttim.sqc
  do P000-Init-Report
  do P200-Process-Main
  do Get-Current-DateTime
  do Reset                   !reset.sqc
  do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report ' $ReportID ' Ended at ' &timeEnded ' on ' &dateEnded
  Show 'Successful end of report'
  
end-report


begin-heading 9
#debug9 Show 'begin-heading'
 #Include 'stdhdg01.sqc'
  
  PRINT 'Emplid'              (+2,1)
  PRINT 'Rcd'                 (0,14)
  PRINT 'Company'             (0,19)
  PRINT 'Paygroup'            (0,28)
  PRINT 'Plan Type'           (0,38)
  PRINT 'Covrg Elect'         (0,49)
  PRINT 'Coverage Begin Dt'   (0,74)

end-heading

!**************************************************************************
begin-procedure P000-Init-Report
#debug9 Show 'P000-Init-Report'

  move 0 to #emp_count
  let $errorfound = 'N' 
  let #health_count = 0

  move 'GEXBN834'         to $ReportID
  move 'Health/Welfare Continuation for Cleveland Employees on LOA' to $ReportTitle

  do Stdapi-Init

  Show '$ReportID=   ' $ReportID
  Show '$ReportTitle=' $ReportTitle

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  let $X000_ORDER_BY                = 'EMPLID'
  Let $GEXXX911_Benefit_Program_Alias = 'bpp.benefit_program'
  Let $GEXXX911_Plan_Type_Alias       = 'hb.plan_type'
  Let $GEXXX911_Benefit_Plan_Alias    = 'pd.benefit_plan'

  Let $GEXXX912_Plan_Type_Alias       = 'HB2.plan_type'
  Let $GEXXX912_Benefit_Plan_Alias    = 'HB2.benefit_plan'

  if $prcs_process_instance = ''
    do Ask-As-Of-Date
    show 'Ask-As-Of-Date: ' $AsOfDate

    If Rtrim ($AsOfDate, ' ') = ''
      Let $AsOfDate = $AsOfToday
    End-If
   
    Let $BenefitProgramString = ''''
    Display 'Enter Benefit Program or leave blank to exit.'
    While 1=1
      Input $In-Benefit-Program Maxlen=3 'Benefit Program'
      Uppercase $In-Benefit-Program
      If Rtrim($In-Benefit-Program, ' ') = ''
        Concat '''' With $BenefitProgramString
        Break
      End-If
      If $BenefitProgramString <> ''''
        Concat ''',''' With $BenefitProgramString
      End-If
      Concat $In-Benefit-Program With $BenefitProgramString
    End-While
    If $BenefitProgramString = ''''''
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = '1=1'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA = $GEXXX911_Benefit_Program_Alias || ' In (' || $BenefitProgramString || ')'
      Let $GEXXX911_INCLUDE_BENEFIT_PROGRAM_DISPLAY_CRITERIA = $GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA
    End-If

    Display 'Enter Plan Type/Benefit Plan or leave blank to exit.'
    While 1=1
      Input $In-Plan-Type Maxlen=2 'Plan Type'
      Uppercase $In-Plan-Type
      If Rtrim($In-Plan-Type, ' ') = ''
        Break
      Else
        Input $In-Benefit-Plan Maxlen=6 'Benefit Plan'
        Uppercase $In-Benefit-Plan
        If Rtrim($In-Benefit-Plan, ' ') = ''
          Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || $In-Plan-Type || ''')'
        Else
          Let $Include_Condition = '(' || $GEXXX912_Plan_Type_Alias || ' = '''  || $In-Plan-Type || ''' And ' || $GEXXX912_Benefit_Plan_Alias || ' = '''  || $In-Benefit-Plan || ''')'
        End-If
        Add 1 To #GEX_RC_BEN_PLAN_ROWS
        If #GEX_RC_BEN_PLAN_ROWS = 1
          Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '(' || $Include_Condition
        Else
          Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ' Or '  || $Include_Condition
        End-If
      End-If
    End-While

    If #GEX_RC_BEN_PLAN_ROWS = 0
      Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = '1=1'
      Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA || ')'
      Let $GEXXX912_INCLUDE_BENEFIT_PLAN_DISPLAY_CRITERIA = $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA
    End-If

  else
    show '%%%%%'
    show '$prcs_oprid: ' $prcs_oprid
    show '$prcs_run_cntl_id: ' $prcs_run_cntl_id
    Do GEXRCBN1-SELECT-PARAMETERS
    show '&GEX_RC_BEN.AsOfDate: ' &GEX_RC_BEN.AsOfDate 
    Let $AsOfDate = &GEX_RC_BEN.AsOfDate
    If Rtrim (&GEX_RC_BEN.AsOfDate, ' ') = ''
      Let $AsOfDate = $AsOfToday
    End-If
    show '$AsOfDate: ' $AsOfDate
    show ' '
    Do GEXXX911-Select-Benefit-Program-Parameters
    Do GEXXX912-Select-Benefit-Plan-Parameters

  end-if

 #Include 'ldplntyp.sqc'  !Load-Lookup Table with Plan Types
  
  Show '$GEXXX911_Include_Benefit_Program_Display_Criteria  = ' $GEXXX911_Include_Benefit_Program_Display_Criteria
  Show '$GEXXX912_Include_Benefit_Plan_Display_Criteria     = ' $GEXXX912_Include_Benefit_Plan_Display_Criteria
  Do Format-DateTime($ASOFDATE, $REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')
  Show '$ASOFDATE                         ='   $ASOFDATE

  do P100-get-pay-end-dt
  do P110-Print-Cover-Page

end-procedure

!*********************************************************************
!Gets the pay end date of the previous pay cycle.
!*********************************************************************

Begin-Procedure P100-get-pay-end-dt

move 'N' to $found

begin-select on-error=sql-error-found('P100-get-pay-end-dt')
PAY.PAY_BEGIN_DT
PAY.PAY_END_DT

  move &PAY.PAY_END_DT to $pay_end_Dt
  move &PAY.PAY_END_DT to $range_end_Dt     
  move &PAY.PAY_BEGIN_DT to $pay_begin_dt
  show 'Pay Begin Date: ' $pay_begin_dt
  show 'Pay End Date  : ' $pay_end_dt
  show 'Range End Date: ' $range_end_dt
  move 'Y' to $found
  exit-select

FROM PS_PAY_CALENDAR PAY

WHERE PAY.PAY_END_DT = (SELECT MAX(PAY_END_DT)
   		      FROM PS_PAY_CALENDAR
!		      WHERE PAY_END_DT <= $AsOfToday
		      WHERE PAY_END_DT <= $AsOfDate
                      AND PAY_OFF_CYCLE_CAL = 'N')
AND PAY.PAY_OFF_CYCLE_CAL = 'N'
 
end-select

end-procedure

!******************************************************
begin-procedure P110-Print-Cover-Page
!******************************************************
#debug9 Show 'P110-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX911_Include_Benefit_Program_Display_Criteria = '   (+2,5)
  Print $GEXXX911_Include_Benefit_Program_Display_Criteria        (0,+2)
  Print '$GEXXX912_Include_Benefit_Plan_Display_Criteria    = '   (+2,5)
  Print $GEXXX912_Include_Benefit_Plan_Display_Criteria           (0,+2)
  Print 'As Of Date : '                                            (+2,5)
  Print $Report_Heading_AsOfDate                                  (0,+2)
  Print 'For pay end date: '                                       (+2,5)
  Print $pay_end_dt                                               (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

end-procedure

!******************************************************
begin-procedure P200-Process-Main
!******************************************************
#debug9 Show 'P200-Process-Main'

 Let $Data-Found-Flag = 'N'

 do P220-process-base-table
 

  If $Data-Found-Flag = 'N'
     Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (25,) Center
     Show  'NO DATA SELECTED FOR THIS REPORT RUN'   
  Else
     do Format-Number(#health_count,$health_count,'9999')
     Print 'Total Employees Processed in Health Benefits: '  (+2,1)
     Print $health_count                     (0,+2)

  End-If

end-procedure

!*********************************************************************
begin-procedure P220-process-base-table
!*********************************************************************
#debug9 Show 'P220-process-base-table'

begin-SELECT
JB.EMPLID                   &emplid
   move &emplid          to $emplid

JB.EMPL_RCD                &empl_rcd
   move &empl_rcd        to #empl_rcd

JB.EFFDT                     
   move &jb.effdt        to $LOA_effdt

JB.ACTION                   &action
   move &action          to $action

JB.ACTION_REASON            &action_reason
   move &action_reason   to $action_reason
HB.COVERAGE_BEGIN_DT
   move &HB.COVERAGE_BEGIN_DT to $coverage_begin_dt
HB.EFFDT
   move &HB.EFFDT to $effdt
HB.PLAN_TYPE 
   move &hb.plan_type to $plan_type
BPP.BENEFIT_PROGRAM
   move &bpp.benefit_program to $benefit_program

  display ' ' noline
  display $emplid noline
!  display ' ' noline
!  display #empl_rcd noline
!  display $action noline
!  display ' ' noline
!  display $action_reason
  display 'Plan Type:' noline
  display $plan_type 
  display 'Coverage Begin Dt:' noline
  display $coverage_begin_dt


  Let $Data-Found-Flag = 'Y'

  
  do P300-Find-PLA-Row
  if $PLA_Row_Found = 'Y'
    do P320-FindBP-EE-Enrolled-Prior-LOA
    if $Found_Prior_Enrolled_BP = 'Y'

      do P250-get-nbr-months
      let #dtu_months = (#nbr_months - 7) 
!      show '#####################################' 
!      show 'EMPLID: ' &emplid  
!      show '#nbr_months: ' #nbr_months
!      show '#dtu_months: ' #dtu_months
      do convert-to-dtu-date($coverage_begin_dt,$coverage_begin_dt_dtu)
      do dtu-add-months($coverage_begin_Dt_dtu,#dtu_months,$new_coverage_dt_dtu)    
      do convert-from-dtu-date($new_coverage_dt_dtu,$new_coverage_begin_dt)
!      show 'OLD Coverage Begin Dt:' $coverage_begin_dt
!      show 'New Coverage Begin Dt:' $new_coverage_begin_dt
      do P400-Update-Health-Benefit
    end-if
  end-if
 
FROM   PS_HEALTH_BENEFIT HB,
       PS_BEN_PROG_PARTIC BPP,
       PS_JOB JB,
       PS_EMPLOYMENT EM

WHERE  BPP.EMPLID         = JB.EMPLID
 AND   BPP.EMPLID         = EM.EMPLID
 AND   BPP.EMPL_RCD       = JB.EMPL_RCD
 AND   JB.EMPL_RCD        = EM.EMPL_RCD
 and   [$GEXXX911_INCLUDE_BENEFIT_PROGRAM_CRITERIA]  ! CWB
 AND   JB.EMPL_STATUS      = 'P'                     ! Paid LOA 
 AND   HB.EMPLID   = BPP.EMPLID
 AND   HB.EMPL_RCD = BPP.EMPL_RCD
 AND   HB.COBRA_EVENT_ID   = BPP.cobra_event_id
 AND   HB.PLAN_TYPE = '1Y'
 AND   HB.COVERAGE_ELECT   = 'T'                     ! Terminate 
 AND   HB.COVERAGE_ELECT_DT >= $pay_begin_Dt
 AND   HB.COVERAGE_ELECT_DT <= $range_end_Dt            !this the last confirmed pay_end_dt
 AND   BPP.EFFDT = (SELECT MAX(EFFDT)
		    FROM PS_BEN_PROG_PARTIC
		    WHERE EMPLID          = BPP.EMPLID
		    AND   EMPL_RCD       = BPP.EMPL_RCD
		    AND   COBRA_EVENT_ID  = BPP.COBRA_EVENT_ID)
 
 AND   JB.EFFDT  = (SELECT MAX(EFFDT) FROM PS_JOB
		    WHERE EMPLID          = JB.EMPLID
		    AND   EMPL_RCD       = JB.EMPL_RCD
		    AND   EFFDT		  <= $range_end_Dt)
 AND   JB.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
		    WHERE EMPLID       = JB.EMPLID
		    AND   EMPL_RCD    = JB.EMPL_RCD
		    AND   EFFDT	       = JB.EFFDT)
 !AND   JB.EMPLID in ('298529854') !ISDVSXP for testing 05/27/2009
 

ORDER BY HB.EMPLID, HB.EMPL_RCD, HB.PLAN_TYPE

end-SELECT

end-procedure

 
!*********************************************************************
! Get number of months associated with the Benefit Plan.
!*********************************************************************
Begin-procedure P250-get-nbr-months
#debug9 Show 'P250-get-nbr-months'

Begin-select
RBP.NUMBER_OF_MONTHS

  MOVE &RBP.NUMBER_OF_MONTHS TO #NBR_MONTHS

FROM PS_GEX_RC_BEN_PLAN RBP
WHERE RBP.OPRID = $Prcs_OprID
AND RBP.RUN_CNTL_ID = $Prcs_RUN_CNTL_ID
AND RBP.PLAN_TYPE = $PLAN_TYPE
AND RBP.BENEFIT_PLAN = &HB2.BENEFIT_PLAN
end-select

end-procedure

!*********************************************************************
! Find PLA row that meets criteria for processing
!*********************************************************************
begin-procedure P300-Find-PLA-Row
#debug9 Show 'P300-Find-PLA-Row'
  let $PLA_Row_Found = 'N'


begin-Select
JB2.ACTION
JB2.ACTION_REASON

  Evaluate &JB2.ACTION
    when = 'COR'
    when = 'PLA'
      evaluate &JB2.ACTION_REASON
        when = 'ST2'
        when = 'ST3'
       ! when = 'WC1'    MXR   04/11/2007  ITG # 40987 - remove 3 action_reason start
       ! when = 'WC2'
       ! when = 'WC3'    MXR   04/11/2007  ITG # 40987 - remove 3 action_reason end
        when = 'STD'
          let $PLA_Row_Found = 'Y'
      end-evaluate
  End-evaluate

FROM PS_JOB JB2
  WHERE JB2.EMPLID   	= $emplid
   AND  JB2.EMPL_RCD   = #empl_rcd
   AND  JB2.EFFDT = (SELECT MIN(JB3.EFFDT) 
             FROM PS_JOB JB3 
             WHERE JB3.EMPLID =   JB2.EMPLID 
                  AND JB3.EMPL_RCD =   JB2.EMPL_RCD 
                  AND JB3.EMPL_STATUS = 'P'     
                  AND JB3.EFFDT >= 
                         (SELECT MAX(JB4.EFFDT) 
                          FROM PS_JOB JB4 
                          WHERE JB4.EMPLID = JB3.EMPLID 
                               AND JB4.EMPL_RCD = JB3.EMPL_RCD 
                               AND JB4.EMPL_STATUS <> 'P'
                               AND JB4.EFFDT < $range_end_dt))
     AND  JB2.EFFSEQ =
            (SELECT MAX(JB5.EFFSEQ) 
             FROM PS_JOB JB5
             WHERE JB5.EMPLID =  JB2.EMPLID
                  AND JB5.EMPL_RCD =  JB2.EMPL_RCD
                  AND JB5.EMPL_STATUS = 'P'
                  AND JB5.EFFDT =   JB2.EFFDT)
end-Select
  Show '*************************'
  Show 'After P300-Find-PLA-Row'
  show 'emplid: ' $emplid 
  show '#empl_rcd: ' #empl_rcd
  show '$PLA_Row_Found: ' $PLA_Row_Found 
  show '&JB2.ACTION: ' &JB2.ACTION 
  show '&JB2.ACTION_REASON: ' &JB2.ACTION_REASON 
  Show '*************************'
 
end-Procedure

!*********************************************************************
begin-procedure P320-FindBP-EE-Enrolled-Prior-LOA
!*********************************************************************
#debug9 Show 'P320-FindBP-EE-Enrolled-Prior-LOA'
  let $Found_Prior_Enrolled_BP = 'N'

begin-SELECT
HB2.EMPLID
HB2.EMPL_RCD
HB2.PLAN_TYPE
HB2.EFFDT
HB2.COVERAGE_ELECT                       
HB2.BENEFIT_PLAN
 
       let $Found_Prior_Enrolled_BP = 'Y'
       let $Prior_Enrolled_BP = &HB2.BENEFIT_PLAN
       show 'emplid:               ' $emplid
       show 'prior enrolled plan:  ' $Prior_Enrolled_BP 

FROM   PS_HEALTH_BENEFIT HB2       

WHERE  HB2.EMPLID   = $emplid
 AND   HB2.EMPL_RCD = #empl_rcd
 AND   HB2.PLAN_TYPE = '1Y'
 AND  [$GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA]   ! CWB
 AND   HB2.COVERAGE_ELECT   = 'E' 
 AND   HB2.EFFDT  = (SELECT MAX(EFFDT) FROM PS_HEALTH_BENEFIT HB3
		    WHERE HB3.EMPLID       = $emplid
		    AND   HB3.EMPL_RCD     = #empl_rcd
                    AND   HB3.PLAN_TYPE    = HB2.PLAN_TYPE 
		    AND   HB3.EFFDT        < $effdt)
end-select 
end-procedure
 

!*********************************************************************
! Update Health Benefit
!*********************************************************************
begin-procedure P400-Update-Health-Benefit
#debug9 Show 'P400-Update-Health-Benefit'

begin-sql on-error=SQL-Error-Found('P400-Update-Health-Benefit')
Update ps_health_benefit
set coverage_begin_dt  = $new_coverage_begin_dt
where emplid = $emplid
and   empl_rcd = #empl_rcd
and   plan_type = $plan_type
and   effdt = $effdt
and   coverage_elect = 'T'
end-sql
if #sql-count > 0
   add #sql-count to #health_count
   do P500-get-bp-PLAN-INFO
   if $found = 'Y'
   show 'event_id in update' #event_id !ISDVSXP S3 12815285 05/27/2009
      do P520-Update-BP-Plan-Info
      do P600-Print-Record
   end-if
end-if

end-procedure

!*********************************************************************
!Retrieves Benefit Program and Event Class from PS_BAS_PARTIC
!*********************************************************************

Begin-Procedure P500-get-bp-PLAN-INFO
#debug9 Show 'P500-get-bp-PLAN-INFO'

move 'N' to $found

begin-select on-error=sql-error-found('P500-get-bp-PLAN-INFO')
BPL.SCHED_ID 
BPL.BENEFIT_RCD_NBR
BPL.EVENT_ID
    move &BPL.SCHED_ID    to $sched_id
    move &BPL.BENEFIT_RCD_NBR to #benefit_rcd_nbr
    move &BPL.EVENT_ID to #event_id
    show 'event_id' #event_id !ISDVSXP S3 12815285 05/27/2009
    move 'Y' to $found

FROM PS_BAS_PARTIC BAS, PS_BAS_PARTIC_PLAN BPL

WHERE BAS.EMPLID = $emplid
  AND BAS.EMPL_RCD = #empl_rcd
  AND BAS.BENEFIT_PROGRAM = $benefit_program
  AND BPL.SCHED_ID = BAS.SCHED_ID
  AND BPL.EMPLID = BAS.EMPLID
  AND BPL.BENEFIT_RCD_NBR = BAS.BENEFIT_RCD_NBR
  AND BPL.EVENT_ID = BAS.EVENT_ID
  AND BPL.PLAN_TYPE = $plan_type
  AND BPL.COVERAGE_ELECT = 'T'
  AND BPL.COVERAGE_BEGIN_DT = $coverage_begin_dt  !ISDVSXP S3 12815285 05/27/2009
end-select

end-procedure



!*********************************************************************
!Updates COVERAGE_BEGIN_DT on Bas Partic Plan Table
!*********************************************************************

Begin-Procedure P520-Update-BP-Plan-Info
#debug9 Show 'P520-Update-BP-Plan-Info'

display 'Updating BAS_PARTIC_PLAN ' noline
display 'New Coverge Begin Date:' noline
display $new_coverage_begin_Dt

begin-sql on-error=sql-error-found('P520-Update-BP-Plan-Info')
UPDATE PS_BAS_PARTIC_PLAN
   SET COVERAGE_BEGIN_DT = $new_coverage_begin_dt
WHERE SCHED_ID = $sched_id
  AND EMPLID = $emplid
  AND BENEFIT_RCD_NBR = #benefit_rcd_nbr
  AND EVENT_ID = #event_id
  AND PLAN_TYPE = $plan_type
  AND BENEFIT_PROGRAM = $benefit_program               
  AND COVERAGE_ELECT = 'T'
end-sql

end-procedure

!********************************************** 
begin-procedure P600-Print-Record
!**********************************************
#debug9 Show 'P600-Print-Record'

   if #current-line > 51
      new-page
   end-if

!   do Convert-to-dtu-date($cov_end_dt,$cov1)
!   let $c_yy = substr($cov1,1,4)
!   let $c_mm = substr($cov1,6,2)
!   let $c_dd = substr($cov1,9,2)
!   let $cov_all = $c_mm||'/'||$c_dd||'/'||$c_yy

!   do Convert-to-dtu-date($ded_end_dt,$ded1)
!   let $d_yy = substr($ded1,1,4)
!   let $d_mm = substr($ded1,6,2)
!   let $d_dd = substr($ded1,9,2)
!   let $ded_all = $d_mm||'/'||$d_dd||'/'||$d_yy

!   let $c2_yy = substr($coverage_end_dt,1,4)
!   let $c2_mm = substr($coverage_end_dt,6,2)
!   let $c2_dd = substr($coverage_end_dt,9,2)
!   let $c2_all = $c2_mm||'/'||$c2_dd||'/'||$c2_yy

!   do Convert-to-dtu-date($pay_begin_dt,$pay1)
!   let $p_yy = substr($pay1,1,4)
!   let $p_mm = substr($pay1,6,2)
!   let $p_dd = substr($pay1,9,2)
!   let $pay_all = $p_mm||'/'||$p_dd||'/'||$p_yy

print $emplid             (+1,1)  edit xxx-xx-xxxx
print #empl_rcd           (0,15)  edit 9
print $company            (0,21)
print $paygroup           (0,31)
print $plan_type          (0,42)
print 'T'                 (0,54)
print 'FROM'              (0,66)
print $coverage_begin_dt  (0,79)
print 'TO  '             (+1,66)
print $new_coverage_begin_dt (0,79)
print ' '                 (+1,1)

end-procedure


!*********************************************************************
begin-procedure SQL-Error-Found($Proc_Name)

let $errorfound = 'Y'
print 'SQL Error in ' (+1,21)
print $Proc_Name       (0,35)
print $_sql-error      (+1,1)
print 'sql-status:'    (+1,1)
print #_sql-status         () edit 99999

print $emplid                     (+1,1)
print #empl_rcd                   (0,12)
print $company                    (0,17)
print $paygroup                   (0,26)
print 'did not update correctly.'  (0,33)

end-procedure

!**************************************************************
#Include 'gexxx911.sqc'  !Get Benefit Program Multiples Run Controls
#Include 'gexxx912.sqc'  !Get Plan Type/Benefit Plan Multiples Run Controls
#include 'gexxx920.sqc'  !Get ben single row run control
#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date math
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'gexxx951.sqc'  !Get Oracle Database ID
#Include 'gexxx923.sqc'  !Multiple Plan Types
!**************************************************************
