!***********************************************************************
!  GEXPY207:  COD ATTENDENCE CARDS                                     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY207:             COD Attendence Cards                           *
!                                                                      *
! Narrative:                                                           *
!                                                                      *
! SQL Tables:           personal_data                                  *
!                       job                                            *
!                       employment                                     *
!                       per_org_inst                                   *
!                                                                      *
! Written by:           C. Haver                                       *
!                                                                      *
! Normally Run:	        Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Company                                      *
!                         Paygroup                                     *
!                         Deptid                                       *
!                         Employee Status                              *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS     DATE         DESCRIPTION OF THE CHANGE                 *
!***********************************************************************
!  CJH          11/10/2000   Initial Creation                          *
!                                                                      *
! PSR       07/31/2002     Modified to have UNION_CD from PS_JOB       *
!                          Upgrade 8.3                                 *
!                                                                      *
!  CWB          12/26/2002   Added logic to exclude year end off cycle *
!                            pay_end_dt when printing time cards.      * 
!                                                                      *
!  AXA          12/07/2007   New record, per_org_inst added to meet    *       
!                            the record structure change in PS 9.0 HRMS*
!                                                                      *
! GEX-MXT       04/02/2008   ADDED THE join condition for PER_ORG_INST *
!***********************************************************************


#Include 'setenv.sqc'    !Set environment


  
  #define #col_deptid			5
  #define #col_dash			5
  #define #col_jobcode			2
  #define #col_pay_end			13

  #define #col_company			5
  #define #col_slash			4
  #define #col_paygroup			2
  #define #col_fp			7
  #define #col_union_cd			17

  #define #col_name			5
  #define #col_hire_dt			25

  #define #col_emplid			5
  #define #col_sex			25

  #define #col_empl_status		5
  #define #col_std_hours		10
!-----------------------------------------------------------


!***********************************************************************
Begin-Setup
!***********************************************************************

#define lineprinter
!  Page-Size 41 130

 Declare Printer
    Type=LINEPRINTER         ! Types are POSTSCRIPT, HPLASERJET, or LINEPRINTER
    Orientation=Landscape
    Top-Margin= .4
    Left-Margin=.4     
    Font=8
    Point-Size=12
    Char-Size=7.2


#Include 'setupdb.sqc' 

End-Setup

!***********************************************************************
Begin-Report
!***********************************************************************

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Do Initialization
  Do Main-Process
  Do EOJ-Process

!  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
End-Report

!***********************************************************************
Begin-Procedure Initialization
!***********************************************************************

  Let $GEXXX901_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
  Let $GEXXX961_Deptid_Alias   = 'J.DEPTID'
  Let $GEXXX961_EmplType_Alias = 'J.EMPL_TYPE'
  Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'
  let $first_page = 'Y'
  let #line = 1

  If $prcs_process_instance = ''
    Do SQRW-Run-Controls  
  Else
    Do Process-Scheduler-Run-Controls
  End-if

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  Let $ReportID    = 'GEXPY207'
  Let $ReportTitle = 'COD TIME CARDS'

  Show '$ReportID='    $ReportID
  Show '$ReportTitle=' $ReportTitle

  !PSR 08/04/02
  !Let $ORDER_BY = 'J.COMPANY, J.DEPTID, E.MAIL_DROP, J.ACCT_CD, P.NAME' 
  Let $ORDER_BY = 'J.COMPANY, J.DEPTID, J.ACCT_CD, P.NAME' 
  !PSR 08/04/02 
  Do Format-DateTime($WHERE_SELECT_ASOFDATE, $REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')


  Show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA
  Show '$GEXXX961_DEPTID_DISPLAY_CRITERIA                   ='   $GEXXX961_DEPTID_DISPLAY_CRITERIA
  Show '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA

  Show '$WHERE_SELECT_ASOFDATE                              ='   $WHERE_SELECT_ASOFDATE
  Show '$ORDER_BY                                           ='   $ORDER_BY

End-Procedure

!***********************************************************************
Begin-Procedure SQRW-Run-Controls 
!***********************************************************************

  Do GEXXX950-Input-Parameters
  Let $WHERE_SELECT_ASOFDATE = $X000_WHERE_SELECT_ASOFDATE

End-Procedure

!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls 
!***********************************************************************

  Do GEXXX922-Select-Parameters
  Do GEXXX901-Select-Company-Paygroup-Parameters
  Do GEXXX961-Select-Deptid-Empl-Type-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters


  Let $AsOfDate = $GEX_RC_PAY.AsOfDate
  Let $WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.AsOfDate
  If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
    Let $WHERE_SELECT_ASOFDATE = $AsOfToday
  End-If
  
End-Procedure

!***********************************************************************
Begin-Procedure Main-Process
!***********************************************************************

  do get-pay-end

  Let $Data-Found-Flag = 'N'
  let $line1 = ' '
  let $line2 = ' '
  let $line3 = ' '
  let $line4 = ' '
  let $line5 = ' '

  let #card_count = 0
  let $pre = '   '                ! 3
  let $space1 = '           '  ! 11
  let $space1a = '    ' !4
  let $space2a = '       '           ! 7
  let $space2b = '         '      ! 9
  let $fill2 = '         ' ! 9
  let $space3 = ''                ! 0
  let $fill3 = '  '               ! 2
  let $space4 = '               '  ! 15
  let $fill4 = '           '       ! 11
  let $space5 =  '               ' ! 15
  let $fill5 = '                    ' ! 20


  do print-alignment-form

Begin-Select
J.DEPTID   () on-break print=never level=1 after=dept-chg 
J.JOBCODE 
J.EMPLID   
J.COMPANY
J.PAYGROUP 
J.FULL_PART_TIME
J.EMPL_STATUS
J.STD_HOURS
J.UNION_CD
P.NAME     &name
INST.ORIG_HIRE_DT
P.SEX
!PSR 08/04/02 - Column not in Employment table
!E.MAIL_DROP 
!PSR 08/04/02

     move &name     to $name xxxxxxxxxxxxxxxxxxxxxxxxx
     move &J.STD_HOURS to $std_hrs 99
     move &J.EMPLID to $emplid xxx-xx-xxxx
     if #card_count = 3
        do print-card-lines
        let #card_count = 0
        let $line1 = ' '
        let $line2 = ' '
        let $line3 = ' '
        let $line4 = ' '
        let $line5 = ' '
     end-if

     let $line1 = $line1 || $pre || &J.DEPTID || ' - ' || &J.JOBCODE || $space1 || $pay_end_dt  || $space1a  ! 42
     let $line2 = $line2 || $pre || &J.COMPANY  || ' / ' || &J.PAYGROUP || $space2a || &J.FULL_PART_TIME || $space2b || &J.UNION_CD || $fill2
     !let $line3 = $line3 || $pre || $name || $space3 || &P.ORIG_HIRE_DT || $fill3       !AXA GE PS 9.0 Upgrade - Giant Eagle Modification -  Commented to meet the table structure changed in PS 9.0 HRMS
     let $line3 = $line3 || $pre || $name || $space3 || &INST.ORIG_HIRE_DT || $fill3     !AXA  GE PS 9.0 Upgrade - Giant Eagle Modification -  Added to meet the table structure changed in PS 9.0 HRMS
     let $line4 = $line4 || $pre || $emplid || $space4 || &P.SEX || $fill4
     let $line5 = $line5 || $pre || &J.EMPL_STATUS || $space5 || $std_hrs || $fill5
     
     let #card_count = #card_count + 1


  Let $Data-Found-Flag = 'Y'


  add 1 to #record_count
  
!AXA 12/17/2007
FROM PS_JOB J,
      PS_PERSONAL_DATA P,   
      PS_PER_ORG_INST  INST ,      ! AXA GE PS 9.0 Upgrade - Giant Eagle Modification -  Added to meet the table structure changed in PS 9.0 HRMS
!PSR 08/04/2002
!     PS_JOB_LABOR L,
!PSR 08/04/2002
     PS_EMPLOYMENT E
  WHERE J.EMPLID = P.EMPLID
    AND J.EMPLID = INST.EMPLID     !AXA  GE PS 9.0 Upgrade - Giant Eagle Modification -  Added to meet the table structure changed in PS 9.0 HRMS
    AND INST.ORG_INSTANCE_ERN  = J.EMPL_RCD	!GEX-MXT added for PER_ORG_INST join
    AND J.EMPLID = E.EMPLID
    AND J.EMPL_RCD = E.EMPL_RCD
    AND J.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB
        WHERE J.EMPLID = EMPLID
          AND J.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $WHERE_SELECT_ASOFDATE)
    AND J.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE J.EMPLID = EMPLID
          AND J.EMPL_RCD = EMPL_RCD
          AND J.EFFDT = EFFDT)
    AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
    AND [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
! 09/11/2001 - CJH - alter deptid selection based on include/exclude indicator
!    AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
     AND [$GEXXX961_DEPTID_CRITERIA]

Order By [$ORDER_BY]

End-Select

End-Procedure
!*********************************************************************
begin-procedure dept-chg
        do print-card-lines
        let #card_count = 0
        let $line1 = ' '
        let $line2 = ' '
        let $line3 = ' '
        let $line4 = ' '
        let $line5 = ' ' 
end-procedure

!*********************************************************************
!Gets the Pay End Date to process for
!*********************************************************************
begin-procedure Get-Pay-End
 let $Found = 'N'
begin-select loops=1 On-Error=P290-SQL-Error('get-pay-end')

Y1.PAY_END_DT 
Y1.pay_begin_dt 

  move 'Y' to $Found
  move &Y1.PAY_END_DT to $pay_end_dt
  move &Y1.PAY_BEGIN_DT TO $pay_begin_dt


FROM PS_PAY_CALENDAR Y1
WHERE Y1.PAY_SHEETS_RUN = 'N'
  AND Y1.PAY_CONFIRM_RUN = 'N'
! CWB 12/26/2002 BEGIN
  AND Y1.PAY_OFF_CYCLE_CAL = 'N'
! CWB 12/26/2002 END
  AND Y1.PAY_BEGIN_DT = (SELECT MIN(PAY_BEGIN_DT)
                         FROM PS_PAY_CALENDAR
                        WHERE PAY_SHEETS_RUN = 'N'
                          AND PAY_CONFIRM_RUN = 'N'
! CWB 12/26/2002 BEGIN
                          AND PAY_OFF_CYCLE_CAL = 'N'
! CWB 12/26/2002 END
                          AND PAY_BEGIN_DT >= $WHERE_SELECT_ASOFDATE)
!  AND Y1.RUN_ID > ' '

end-select

  if $Found = 'N'
    display 'Error --  Pay Calendar Entry not found.'
    print 'Error --  Pay Calendar Entry not found.' (+1,1,60)
  else
    display 'Processing for Pay End Date: ' noline
    display $pay_end_dt
  end-if
end-procedure
!***********************************************************************************
begin-procedure print-alignment-form
     move 'xxxxxxxxxxxxxxxxxxxxxxxxx'     to $name 
     move 'XX' to $std_hrs 
     move 'XXX-XX-XXXX' to $emplid
     let #card_count = 1
     while #card_count <= 3
       let $line1 = $line1 || $pre || 'XXXX' || ' - ' || 'XXXXXX' || $space1 || 'XX/XX/XX'  ! 42
       let $line2 = $line2 || $pre || 'XXX' || ' / ' || 'XXX'|| $space2a || 'X'|| $space2b || 'XXX' || $fill2
       let $line3 = $line3 || $pre || 'XXXXXXXXXXXXXXXXXXXXXXXXX' || $space3 || 'XX/XX/XX' || $fill3
       let $line4 = $line4 || $pre || $emplid || $space4 || 'X' || $fill4
       let $line5 = $line5 || $pre || 'X'|| $space5 || $std_hrs || $fill5
       let #card_count = #card_count + 1
     end-while


        do print-card-lines
        let #card_count = 0
        let $line1 = ' '
        let $line2 = ' '
        let $line3 = ' '
        let $line4 = ' '
        let $line5 = ' '
end-procedure

!***********************************************************************
Begin-Procedure print-card-lines
!***********************************************************************

 print $line1 (,1,127)
 print $line2 (+1,1,127)
 print $line3 (+1,1,127)
 print $line4 (+1,1,127)
 print $line5 (+1,1,127)
 print ' ' (+35)
 print 'GEXPY207' (+1,1,8)
 new-page 0



End-Procedure 
!***********************************************************************
Begin-Procedure EOJ-Process
!***********************************************************************
  let $records = edit(#record_count,'999,999')

  If $Data-Found-Flag = 'N'
    display 'NO DATA SELECTED FOR THIS REPORT RUN'
  else 
    display 'Total Records Printed For This Run: ' noline
    display $records
  End-If

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

End-Procedure
!**********************************************************************
Begin-Procedure P290-SQL-Error($Action)
#debug9 Show 'P290-SQL-Error'
  Show $Action ' failed'
  Show 'SQL Error:  '  $_sql-error

  Stop
End-Procedure
!***********************************************************************
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'askaod.sqc'    !Ask for As-Of-Date parameter
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
! #Include 'reset.sqc'     !Reset printer Procedure
#Include 'getcodta.sqc'  !Get Company Data
#Include 'getpgdta.sqc'  !Get Paygroup Data
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx961.sqc'  !Get deptid /empl type / inclusion multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls
#include 'getactnm.sqc'  !Get Account code descr 
