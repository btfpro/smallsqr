!***********************************************************************
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  WHO           DATE          DESCRIPTION OF THE CHANGE	       *	
!***********************************************************************
! SURYA SOBHA  10/10/2015     INITIAL CREATION               	       *
!                        Populates the run control for tips pyload load*              
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 


!*********************************************************************
begin-report
!*********************************************************************
#debug9 show 'begin-report' 

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  do stdapi-init

  let $reportdate_mm = substr($reportdate,1,2)
  let $reportdate_dd = substr($reportdate,4,2)
  let $reportdate_yy = substr($reportdate,7,2)
  do MakeYear4Digits ($reportdate_yy)

  let $reportdate_ccyyyy = $reportdate_mm||'/'||$reportdate_dd||'/'||$reportdate_yy

  do format-datetime($reportdate_ccyyyy,$reportdate_ccyy,{DEFMDY},'','NATIVE') 
  show '$reportdate_ccyy ' $reportdate_ccyy
  do Get-Run-id
  do check-if-row-exists
  do stdapi-term
  do Reset

end-report

!*********************************************************************
begin-procedure Get-Run-Id 
!*********************************************************************
 let $Found = 'N'
begin-select on-error=P900-SQL-Error-Found('get-run-id') 

C1.RUN_ID
C1.PAY_END_DT 

  move 'Y' to $Found
  move &C1.RUN_ID to $run_id
  move &C1.PAY_END_DT to $pay_end_dt

FROM PS_PAY_CALENDAR C1
WHERE C1.PAY_SHEETS_RUN = 'Y'
   !AND C1.PAY_CONFIRM_RUN = 'Y'                          !for test 
    AND C1.PAY_CONFIRM_RUN = 'N'
  AND C1.PAY_OFF_CYCLE = 'N'
  AND C1.COMPANY = 'GEI'
  AND C1.PAYGROUP = 'RET'
  AND C1.PAY_END_DT = (SELECT MAX(PAY_END_DT)
                         FROM PS_PAY_CALENDAR
                        WHERE PAY_SHEETS_RUN = 'Y'
                        !AND C1.PAY_CONFIRM_RUN = 'Y'     !for test 
                         AND PAY_CONFIRM_RUN = 'N'
                          AND PAY_OFF_CYCLE = 'N'
                          AND PAYGROUP = 'RET'
                           !AND PAY_END_DT <= sysdate)    !for test 
                            AND PAY_END_DT <= $AsOfToday)

end-select

  if $Found = 'N'
    display 'Error --  Pay Calendar not found or not setup for the Run ID.'
    print 'Error --  Pay Calendar not found or not setup for the Run ID.' (+1,1,60)
  else
    show 'Processing for Pay End Date: ' $pay_end_dt
    show 'Run ID: ' $run_id
  end-if
end-procedure

!******************************************************************************************
!Checks PS_PSHUP_RUNCTL if row exits for OPRID = "HRBATCH and run_cntl_id = pyload_tips *
!******************************************************************************************
!*********************************************************************
begin-procedure check-if-row-exists
!*********************************************************************

#debug9 show 'check-if-row-exists'

 move 'N' to $rowfound

begin-SELECT on-error=P900-sql-error-found('check-if-row-exists')
'Y'        

  move 'Y' to $rowFound
  show 'row found ' $rowfound
 
FROM PS_PSHUP_RUNCTL A
WHERE    A.OPRID = 'HRBATCH' 
 AND     A.RUN_CNTL_ID = 'pyload_tips'
   
end-SELECT

 if $rowFound = 'Y'
    do update-row
 else
    do insert-row
 end-if 

end-procedure

!*************************************************************************
!Update PS_PSHUP_RUNCTL table with run control for pyload_tips           *
!*************************************************************************
begin-procedure update-row
 
show 'inside update row '
begin-sql on-error=P900-SQL-Error-Found('update-row')
UPDATE PS_PSHUP_RUNCTL
	SET OPRID	  = 'HRBATCH',                  
	RUN_CNTL_ID	  = 'pyload_tips',            
	RUN_ID		  = $run_id,                 
	PROCESS_ON_OFF    = 'O',         
	COMPANY		  = ' ',                
	PAYGROUP          = ' ',               
	PAY_END_DT	  = '',             
	OFF_CYCLE	  = 'N' ,              
	EMPLID		  = ' ',                  
	EMPL_RCD 	  = 0,             
	PU_SOURCE	  = 'RP',
	OK_TO_PAY 	  = 'Y',
	PU_RESET 	  = 'P',
	SEP_OFF_CYCLE_IND = 'N'
WHERE OPRID = 'HRBATCH'
  AND RUN_CNTL_ID = 'pyload_tips'

end-sql

show 'successfully updated '
end-procedure

!*************************************************************************
!Inserts into the PS_PAY_CALC_RUNCTL table with run control for PSPPYRUN *
!*************************************************************************

begin-procedure insert-row

show 'inside insert row '

begin-sql on-error=P900-SQL-Error-Found('insert-row') 

insert into PS_PSHUP_RUNCTL
(OPRID	 
,RUN_CNTL_ID	 
,RUN_ID		 
,PROCESS_ON_OFF   
,COMPANY		 
,PAYGROUP         
,PAY_END_DT	 
,OFF_CYCLE	 
,EMPLID		 
,EMPL_RCD 	 
,PU_SOURCE	 
,OK_TO_PAY 	 
,PU_RESET 	 
,SEP_OFF_CYCLE_IND
)         
VALUES
('HRBATCH',    
'pyload_tips',
$run_id,      
'O',          
' ',          
' ',          
'',           
'N' ,         
' ',          
0,          
'RP',         
'Y',          
'P',          
'N'           
)
end-sql

show 'successfully inserted row '
end-procedure

!*********************************************************************
!Displays the error messages and stops execution
!*********************************************************************
 
begin-procedure P900-SQL-Error-Found($Proc_Name) 
  
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 

  STOP

end-procedure

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
