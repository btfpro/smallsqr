!***********************************************************************
! GEXPY037:  BIRTHDAY/ANNIVERSARY LISTING                              *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY037 :            BIRTHDAY/ANNIVERSARY LISTING                   *
!                                                                      *
! Narrative:            This program will produce a listing of         *
!                       employees who have a birthday or anniversary   *
!                       date falling within the run control month.     *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           gex_dept_tbl                                   *
!                       personal_data                                  *
!                       job                                            *
!                                                                      *
! Written by:           Jim Hutchison                                  *
!                                                                      *
! Normally Run:         Monthly                                        *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Multiple Company Division Codes              *
!                         Multiple Company/Paygroups                   *
!                         Multiple Deptids                             *
!                         Multiple Jobcodes                            *
!                         Multiple Employee Statuses                   *
!                         Month                                        *
!                         Birthday/Anniversary Indicator               *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! JDH       02/17/99    Initial Creation                               *
!                                                                      *
! JDH       10/01/99    Changed order by from birthdate to name on the *
!                       birthday listing.                              *
!                                                                      *
! SXK       11/29/99    Changed from zip to postal                     *
!                                                                      *
! CWB       06/28/2000  Changed logic to use service_dt, or rehire_dt, *
!                       or hire_dt,(in that order) from ps_employment  *
!                       instead of orig_hire_dt from ps_personal_data  *
!                                                                      *
! AXL       09/12/2000  Changed logic to use cmpny_seniority_dt, or    *
!                       hire_dt,(in that order) from ps_employment     *
!                       instead of logic introduced in previous mod on *
!                       6/28/2000 per user request.                    *
!                                                                      *
! CWB       05/01/2001  Added empl_rcd to main WHERE clause.           *
! VENDNYS   08/20/2007  Upgrade from 8.3 to 9.0                        *
!                       Changed the reference of Xlattable             *
!                       References to ORIG_HIRE_DT in PERSONAL_DATA    *
!                         is modified to PS_ORIG_HIRE_VW  record       *
! ISDVMXD   02/16/2009  ITG 56749 Replace LOOKUP for Jobtitle with     *
!				 GETPOSNM.SQC 		 	       *	
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization


#define #column1     1
#define #column2    41
#define #column3    61


Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report


Begin-Heading 9
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg02.sqc'

  Print $month_heading         (3,)  Center

  if $PayGroup <> $priorPayGroup
    do Get-PayGroup-Data
    move $PayGroup to $priorPayGroup
  end-if

  print 'Pay Group'            (4,1)
  print $PayGroup              (0,13)
  print $PayGroupName          (0,+2)

  if $Deptid <> $priorDeptid
    do Get-Department-Name
    move $Deptid to $priorDeptid
  end-if

  print 'Deptid'               (5,1)
  print $Deptid                (0,13)
  print $DeptName              (0,+2)

  Print 'BIRTHDATE'            (+2,{#column1})

!CWB  06/28/2000 - BEGIN
!  Print 'HIRE DATE'            (+0,{#column2})       
  Print 'SERVICE DATE'         (+0,{#column2})
!CWB  06/28/2000 - END

  Print 'NAME'                 (+0,{#column3})

  Print 'ACCOUNT CODE'         (+1,{#column1})
  Print 'ADDRESS'              (+0,{#column3})

  Print 'JOBTITLE'             (+1,{#column1})

  Print '-'                    (+1,{#column1},30)  Fill
  Print '-'                    (+0,{#column2},10)  Fill
  Print '-'                    (+0,{#column3},35)  Fill

  Let #Line-Count = 9
End-Heading


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
! Do P150-Set-Optimizer-Goal

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $GEXXX901_Company_Alias  = 'j.company'
  Let $GEXXX901_Paygroup_Alias = 'j.paygroup'
  Let $GEXXX902_Deptid_Alias   = 'j.deptid'
  Let $GEXXX903_Emp_Stat_Alias = 'j.empl_status'
  Let $GEXXX907_Div_Cd_Alias   = 'gdt.gex_company_div_cd'
  Let $GEXXX916_Jobcode_Alias  = 'j.jobcode'

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  Let $fieldname  = 'GEXPY037_RPT_TYPE'
  Let $fieldvalue = $report_type
  Do P160-Xlat-Select
  Let $report_type_xlat = &xlatlongname

  Let $fieldname  = 'MONTHCD'
  Let $fieldvalue = $report_month
  Do P160-Xlat-Select
  Let $report_month_xlat = &xlatlongname
  Let $month_heading = 'for the month of ' || $report_month_xlat

  If $Report_Type = 'A'
    Let $ReportID      = 'GEXPY037A'
    Let $ReportTitle   = 'ANNIVERSARY LISTING'
    ! Let $X000_Order_By = 'J.COMPANY, J.PAYGROUP, J.DEPTID, PD.ORIG_HIRE_DT'     ! upgrade 9.0 changes
    Let $X000_Order_By = 'J.COMPANY, J.PAYGROUP, J.DEPTID'                        ! upgrade 9.0 changes
    Let $X000_Order_By_Display = 'Company, Paygroup, DeptID, Anniversary Date'
  Else
    Let $ReportID      = 'GEXPY037B'
    Let $ReportTitle   = 'BIRTHDAY LISTING'
    Let $X000_Order_By = 'J.COMPANY, J.PAYGROUP, J.DEPTID, PD.NAME'
    Let $X000_Order_By_Display = 'Company, Paygroup, DeptID, Name'
  End-If

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$GEXXX901_Include_Company_Paygroup_Display_Criteria  = ' $GEXXX901_Include_Company_Paygroup_Display_Criteria
  Show '$GEXXX902_Include_Deptid_Display_Criteria            = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Criteria                  = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  Show '$GEXXX907_Include_Div_Cd_Display_Criteria            = ' $GEXXX907_Include_Div_Cd_Display_Criteria
  Show '$GEXXX916_Include_Jobcode_Display_Criteria           = ' $GEXXX916_Include_Jobcode_Display_Criteria
  Show 'Report Type  = ' $report_type_xlat
  Show 'Report Month = ' $report_month_xlat

  Do P130-Print-Cover-Page
  Do P170-Jobtitle-Lookup	
 
End-Procedure


Begin-Procedure P110-SQRW-Run-Controls
#debug9 Show 'P110-SQRW-Run-Controls'
  Let $DivCdString = ''''
  Display 'Enter Company Division Code or leave blank to exit.'
  While 1=1
    Input $In-DivCd Maxlen=3 'Company Division Code'
    Uppercase $In-DivCd
    If Rtrim($In-DivCd, ' ') = ''
      Concat '''' With $DivCdString
      Break
    End-If
    If $DivCdString <> ''''
      Concat ''',''' With $DivCdString
    End-If
    Concat $In-DivCd With $DivCdString
  End-While

  If $DivCdString = ''''''
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = '1=1'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = $GEXXX907_Div_CD_Alias || ' In (' || $DivCdString || ')'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  End-If


  Display 'Enter Company/Paygroup or leave blank to exit.'
  While 1=1
    Input $In-Company Maxlen=3 'Company'
    Uppercase $In-Company
    If Rtrim($In-Company, ' ') = ''
      Break
    Else
      Input $In-Paygroup Maxlen=3 'Paygroup'
      Uppercase $In-Paygroup
      If Rtrim($In-Paygroup, ' ') = ''
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''')'
      Else
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''' And ' || $GEXXX901_Paygroup_Alias || ' = '''  || $In-Paygroup || ''')'
      End-If
      Add 1 To #GEX_RC_PAYGROUP_ROWS
      If #GEX_RC_PAYGROUP_ROWS = 1
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '(' || $Include_Condition
      Else
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ' Or '  || $Include_Condition
      End-If
    End-If
  End-While

  If #GEX_RC_PAYGROUP_ROWS = 0
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ')'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
  End-If


  Let $DeptIDString = ''''
  Display 'Enter DeptID or leave blank to exit.'
  While 1=1
    Input $In-DeptID Maxlen=10 'DeptID'
    Uppercase $In-DeptID
    If Rtrim($In-DeptID, ' ') = ''
      Concat '''' With $DeptIDString
      Break
    End-If
    If $DeptIDString <> ''''
      Concat ''',''' With $DeptIDString
    End-If
    Concat $In-DeptID With $DeptIDString
  End-While

  If $DeptIDString = ''''''
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' In (' || $DeptIDString || ')'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_INCLUDE_DEPTID_CRITERIA
  End-If


  Let $EmplStatusString = ''''
  Display 'Enter Employee Status or leave blank to exit.'
  While 1=1
    Input $In-EmplStatus Maxlen=1 'Employee Status'
    Uppercase $In-EmplStatus
    If Rtrim($In-EmplStatus, ' ') = ''
      Concat '''' With $EmplStatusString
      Break
    End-If
    If $EmplStatusString <> ''''
      Concat ''',''' With $EmplStatusString
    End-If
    Concat $In-EmplStatus With $EmplStatusString
  End-While

  If $EmplStatusString = ''''''
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = '1=1'
    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = $GEXXX903_Emp_Stat_Alias || ' In (' || $EmplStatusString || ')'
    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
  End-If


  Let $JobcodeString = ''''
  Display 'Enter Jobcode or leave blank to exit.'
  While 1=1
    Input $In-Jobcode Maxlen=6 'Jobcode'
    Uppercase $In-Jobcode
    If Rtrim($In-Jobcode, ' ') = ''
      Concat '''' With $JobcodeString
      Break
    End-If
    If $JobcodeString <> ''''
      Concat ''',''' With $JobcodeString
    End-If
    Concat $In-Jobcode With $JobcodeString
  End-While

  If $JobcodeString = ''''''
    Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '1=1'
    Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = $GEXXX916_Jobcode_Alias || ' In (' || $JobcodeString || ')'
    Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = $GEXXX916_INCLUDE_JOBCODE_CRITERIA
  End-If


  While 1=1
    Input $Report_Type Maxlen=1 'Report Type (A or B)'
    Uppercase $Report_type
    If Rtrim($Report_Type,' ') = 'A' Or
       Rtrim($Report_Type,' ') = 'B'
      Break
    End-If
  End-While


  While 1=1
    Input $Report_Month Maxlen=2 'Report Month (01 thru 12)'
    Let #report_month = $report_month
    Move $report_month To $report_month 09
    If #Report_Month >= 1 And
       #Report_Month <= 12
      Break
    End-If
  End-While
End-Procedure


Begin-Procedure P120-Process-Scheduler-Run-Controls
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXXX922-Select-Parameters
  Do GEXXX901-Select-Company-Paygroup-Parameters
  Do GEXXX902-Select-Deptid-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters
  Do GEXXX907-Select-DIV-CD-Parameters
  Do GEXXX916-Select-Jobcode-Parameters

  Let $report_type  = $GEX_RC_PAY.GEXPY037_RPT_TYPE
  Let $report_month = $GEX_RC_PAY.MONTHCD
  Let #report_month = $report_month

  If Rtrim($Report_Type,' ')  = '' Or
     Rtrim($Report_Month,' ') = ''
    Display 'Report Type and Report Month are required for this report'
    Stop
  End-If
End-Procedure


begin-procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX901_Include_Company_Paygroup_Display_Criteria ='   (+1,5)
  Print $GEXXX901_Include_Company_Paygroup_Display_Criteria       (0,+2)
  Print '$GEXXX902_Include_Deptid_Display_Criteria           ='   (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria                 (0,+2)
  Print '$GEXXX903_Include_Emp_Stat_Display_Criteria         ='   (+1,5)
  Print $GEXXX903_Include_Emp_Stat_Display_Criteria               (0,+2)
  Print '$GEXXX907_Include_Div_Cd_Display_Criteria           ='   (+1,5)
  Print $GEXXX907_Include_Div_Cd_Display_Criteria                 (0,+2)
  Print '$GEXXX916_Include_Jobcode_Display_Criteria          ='   (+1,5)
  Print $GEXXX916_Include_Jobcode_Display_Criteria                (0,+2)
  Print '$Report_Type  = '                                        (+1,5)
  Print $report_type_xlat                                         (0,+2)
  Print '$Report_Month = '                                        (+1,5)
  Print $report_month_xlat                                        (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'   (+5,2)
  Print $X000_Order_By_Display              (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
End-Procedure


Begin-Procedure P160-Xlat-Select
#debug9 Show 'P160-Xlat-Select'
Begin-Select
xlatlongname
! From   xlattable x              ! 8.3 Code
From   psxlatitem x               ! 9.0 Code
Where  fieldname           = $fieldname
! And    language_cd         = 'ENG'             ! commented for upgrade 9.0
And    fieldvalue          = $fieldvalue
And    effdt               =
      (Select Max(effdt)
       ! From xlattable       ! 8.3 Code
       From   psxlatitem      ! 9.0 Code
       Where  fieldname    = x.fieldname
       ! And    language_cd  = x.language_cd     ! commetned for upgrade 9.0
       And    fieldvalue   = x.fieldvalue
       And    effdt       <= SYSDATE)
End-Select
End-Procedure


begin-procedure P170-Jobtitle-Lookup
#debug9 Show 'P170-Jobtitle-Lookup'

Load-Lookup
     Name=Jobcode_Lookup
     Rows=100
     Table='PS_JOBCODE_TBL JT'
     Key='JT.JOBCODE'
     Return_Value='JT.DESCR'
     Where='JT.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOBCODE_TBL WHERE JOBCODE = JT.JOBCODE AND EFFDT <= SYSDATE)'
     Quiet
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
Begin-Select
J.COMPANY  ()  On-Break
               Level=1
               Print=Never

J.PAYGROUP ()  On-Break
               Level=2
               Print=Never

J.DEPTID   ()  On-Break
               Level=3
               Print=Never
               After=P250-New-Page

! PD.ORIG_HIRE_DT        !commented for 9.0 upgrade
PD.BIRTHDATE
PD.NAME
PD.ADDRESS1
PD.ADDRESS2
PD.ADDRESS3
PD.ADDRESS4
PD.CITY
PD.STATE
!SXK 11/29/99 Changed from zip to postal
PD.postal

J.ACCT_CD
J.JOBCODE
J.POSITION_NBR			!isdvmxd added for ITG 56749 on 02/16/2009
!CWB  06/28/2000 - BEGIN
EM.SERVICE_DT
EM.REHIRE_DT		
EM.HIRE_DT
!CWB  06/28/2000 - END

EM.CMPNY_SENIORITY_DT 	!AXL 9/12/2000

  Let $Data-Found-Flag = 'Y'

  Let $Company  = &J.COMPANY
  Let $Paygroup = &J.PAYGROUP
  Let $Deptid   = &J.DEPTID
  Let $Position_Nbr = &J.POSITION_NBR	!isdvmxd added for ITG 56749 on 02/16/2009
!CWB  06/28/2000 - BEGIN
  do P210-Get-Anniv-Month 
  do P215-Get-Birth-Month 

  If $report_type = 'A' 
    If #anniv_month = #report_month
      Do P230-Print-Record
    End-if
  Else
  If $report_type = 'B'  
    If #birth_month = #report_month
      Do P230-Print-Record
    End-if
  End-if
  End-if

!  Do P230-Print-Record

!CWB  06/28/2000 - END

FROM   PS_GEX_DEPT_TBL   GDT,
       PS_PERSONAL_DATA  PD,
       PS_EMPLOYMENT     EM,                  ! CWB 06/28/2000
       PS_JOB            J

WHERE  PD.EMPLID              = J.EMPLID

AND    EM.EMPLID              = J.EMPLID      ! CWB 06/28/2000

AND    EM.EMPL_RCD           = J.EMPL_RCD   ! CWB 05/01/2001   

!CWB  06/28/2000 - BEGIN
!AND    DECODE($Report_Type, 'A', TO_NUMBER(TO_CHAR(PD.ORIG_HIRE_DT,'MM')),
!                            'B', TO_NUMBER(TO_CHAR(PD.BIRTHDATE,'MM')))    = #report_month
!CWB  06/28/2000 - END

AND    J.EFFDT                =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID          = J.EMPLID
       AND    EMPL_RCD       = J.EMPL_RCD
       AND    EFFDT          <= SYSDATE)

AND    J.EFFSEQ               =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID          = J.EMPLID
       AND    EMPL_RCD       = J.EMPL_RCD
       AND    EFFDT           = J.EFFDT)

And    gdt.deptid             = j.deptid

And    gdt.effdt              =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid          = gdt.deptid
       And    effdt          <= sysdate)

And    gdt.sequence_number    =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid          = gdt.deptid
       And    effdt           = gdt.effdt)

AND   [$GEXXX901_Include_Company_Paygroup_Criteria]
AND   [$GEXXX902_Include_Deptid_Criteria]
AND   [$GEXXX903_Include_Emp_Stat_Criteria]
AND   [$GEXXX907_Include_Div_Cd_Criteria]
AND   [$GEXXX916_Include_Jobcode_Criteria]

ORDER BY [$X000_ORDER_BY]
End-Select
End-Procedure

!CWB  06/28/2000 - BEGIN

Begin-procedure P210-Get-Anniv-Month
  let #anniv_month = 0
!AXL  09/12/2000 - Begin
  if rtrim (&em.cmpny_seniority_dt, ' ') <> ''
   let $Year4 = '1'
   do Format-DateTime(&em.cmpny_seniority_dt,$cmpny_seniority_dt,{DEFMDY},'','')
     let $char_date = substr($cmpny_seniority_dt,1,2)
     let $anniv_date = $cmpny_seniority_dt 
  !else 
  !if rtrim (&em.rehire_dt, ' ') <> ''
  ! let $Year4 = '1'
  ! do Format-DateTime(&em.rehire_dt,$RehireDate,{DEFMDY},'','')
  !   let $char_date = substr($RehireDate,1,2)
  !   let $anniv_date = $RehireDate
!AXL  09/12/2000 - End
  else 
   let $Year4 = '1'
   do Format-DateTime(&em.hire_dt,$HireDate,{DEFMDY},'','')
     let $char_date = substr($HireDate,1,2)
     let $anniv_date = $HireDate
  !end-if *** AXL  09/12/2000 - End
  end-if 
  let #anniv_month = to_number($char_date)
End-Procedure

Begin-procedure P215-Get-Birth-Month
   let #birth_month = 0
   Let $Year4 = '1'
   Do Format-DateTime(&pd.birthdate, $birthdate, {DEFDATE}, '', '')
   let $char_date = substr($birthdate,1,2)
   let #birth_month = to_number($char_date)
End-Procedure

!CWB  06/28/2000 - END


Begin-Procedure P230-Print-Record
#debug9 Show 'P230-Print-Record'
  !Lookup Jobcode_Lookup &j.jobcode $JobTitle		!isdvmxd commented for ITG 56749 on 02/16/2009
 Do Get-Position-Title		!isdvmxd added for ITG 56749 on 02/16/2009
 Show 'posname = ' $PosName		!isdvmxd added for ITG 56749
!  Let $Year4 = '1'
!  Do Format-DateTime(&pd.birthdate, $birthdate, {DEFDATE}, '', '')

!  Let $Year4 = '1'
!  Do Format-DateTime(&pd.orig_hire_dt, $anniversary_date, {DEFDATE}, '', '')

  Let $citystatezip = Rtrim(&pd.city,' ') || ', ' || &pd.state || '  ' || &pd.postal

  If #Line-Count > 73
    New-Page
  End-If

	Let $JobTitle = $PosName	!isdvmxd added for ITG 56749 on 02/16/2009
	
  Print $birthdate             (+2,{#column1})
!  Print $anniversary_date      (+0,{#column2})
  Print $anniv_date            (+0,{#column2})
  Print &pd.name               (+0,{#column3})

  Print &j.acct_cd             (+1,{#column1})
  Print $JobTitle              (+1,{#column1})

  Add 4 to #Line-Count

  Position (-2,{#column3})

  If Rtrim(&pd.address1,' ') != ''
    Print &pd.address1         (+1,{#column3})
  End-If

  If Rtrim(&pd.address2,' ') != ''
    Add 1 to #Line-Count
    Print &pd.address2         (+1,{#column3})
  End-If

  If Rtrim(&pd.address3,' ') != ''
    Add 1 to #Line-Count
    Print &pd.address3         (+1,{#column3})
  End-If

  If Rtrim(&pd.address4,' ') != ''
    Add 1 to #Line-Count
    Print &pd.address4         (+1,{#column3})
  End-If

  Print $citystatezip          (+1,{#column3})

End-Procedure


Begin-Procedure P250-New-Page
#debug9 Show 'P250-New-Page'
  New-Page
End-Procedure


Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'
End-Procedure


#include 'gexxx901.sqc'  !Get company paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company division code multiple row table
#include 'gexxx916.sqc'  !Get jobcode multiple row table
#include 'gexxx922.sqc'  !Get GE payroll run controls
#include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'getpgdta.sqc'  !Get-Paygroup-Data procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#Include 'getposnm.sqc'	 !Get-Position-Title procedure 		!ISDVMXD added for ITG 56749 on 02/16/2009