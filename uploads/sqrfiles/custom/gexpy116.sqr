!***********************************************************************
! GEXPY116:  This program updates the resident flag on all
!            mandatory work taxes to 'N'
!            Update runs daily
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                                                                      *
!  $Date:: 09/27/99	        $                                      *
!  $Revision:: 01               $                                      *
!  $Workfile:: GEXPY116.SQR     $                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE       DESCRIPTION OF THE CHANGE            *
!***********************************************************************
!  GEXPY116  KMW    09/27/1999    INITIAL CREATION                     *
!                                                                      *
!  HR10381   GBD    11/22/2002    Add Off_Cycle='N' to select stmnt.   *
!                                                                      *
!  HR10306   GBD    02/28/2003    v8.3 Upgrade - added production chgs *
!***********************************************************************
#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 

!*********************************************************************
begin-heading 7 
!*********************************************************************
 #Include 'stdhdg01.sqc'

  
 position (+2)

  print 'Dept ID' (,1) bold
  print 'Employee ID' (,10) bold
  print 'Empl Rcd#'   (,20) bold
  print 'Name' (,34) bold
  print 'Missing Locality' (,61) bold
  print 'Tax Location on Job' (,80) bold

  print '-' (+1,1,132) fill
 
end-heading
 

!*********************************************************************
begin-report
!*********************************************************************
  date-time () hh:mi:ss &timestarted
  show 'Report started at ' &timestarted
  do Init-DateTime
  do Init-Number
  do stdapi-init
  
  move 'GEXPY116' to $ReportID
  let $ReportTitle = 'Work tax resident flag reset' 
  display $ReportTitle
  do Get-Current-DateTime
 If $prcs_process_instance = ''
	let $Prcs_OprID = 'ISDVDXS'
	let $Prcs_Run_Cntl_ID = 'gexpy116'
 end-if

  Do GEXXX922-Select-Parameters
  Let $X000_Where_Select_AsOfDate = $GEX_RC_PAY.AsOfDate
  Let $AsOfDate=$GEX_RC_PAY.AsOfDate
  If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
    Let $X000_Where_Select_AsOfDate = $AsOfToday
    Let $AsOfDate=$X000_Where_Select_AsOfDate
  End-If
 
  show '$X000_Where_Select_AsOfDate  ' $X000_Where_Select_AsOfDate 
  show '$AsOfDate ' $AsOfDate

 let $X000_Report_Heading_AsOfDate=$AsofDate
  Let #PAGE-COUNT = 1
  show 'Doing P130-Print-Cover-Page'
 do P130-Print-Cover-Page

 let $X000_Report_Heading_AsOfDate=$AsofDate
  Let #PAGE-COUNT = 1

  show 'Doing Main-Select'
  Do Main-Select
  date-time () hh:mi:ss &timeEnded
  show 'updated employees ' #wk-count
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term
  do reset
end-report

 
!*********************************************************************
Begin-procedure main-select
!*********************************************************************

begin-select
tl1.TAX_LOCATION_CD	&tl1.tax_location_cd
tl1.descr		&tl1.descr
j.emplid		&j.emplid
j.empl_rcd		&j.empl_rcd
j.company		&j.company
j.deptid		&j.deptid
j.paygroup		&j.paygroup
pd.name			&pd.name

	show 'Doing validate-taxes'
        Do validate-taxes

from    ps_tax_location1 tl1,
        ps_job j,
        ps_personal_data pd
 where 
 tl1.Tax_location_cd not in ('SPA99','SWV99','SOH99')
 and tl1.eff_status='A'
 and tl1.tax_location_cd=j.tax_location_cd
 and j.effdt=(select max(effdt) from ps_job 
              where j.emplid=emplid 
              and   j.empl_rcd=empl_rcd
              and   effdt < = $Asofdate)
 and j.effseq=(select max(effseq) from ps_job
               where j.emplid=emplid
 	       and   j.empl_rcd=empl_rcd
               and   j.effdt=effdt)
 and j.empl_status in ('A','L','P','S','Q')
 and pd.emplid=j.emplid 
 order by tl1.tax_location_cd 
end-select
end-procedure


!*********************************************************************
Begin-procedure validate-taxes
!*********************************************************************

Begin-select
tl2.locality 
tl2.state 
	
  show 'Doing check-employee-tax-data '
  do check-employee-tax-data 

from ps_tax_location2 tl2
where tl2.tax_location_cd=&tl1.tax_location_cd
end-select
end-procedure


!*********************************************************************
Begin-procedure check-employee-tax-data
!*********************************************************************

let $found-emp-tax='N'
begin-select
emplid        &ltd.emplid
Locality      &ltd.locality
resident      &ltd.resident
state         &ltd.state
effdt         &ltd.effdt
company       &ltd.company

   let $found-emp-tax='Y'
from ps_local_tax_data ltd
where
ltd.emplid=&j.emplid and
ltd.company=&j.company and
ltd.effdt=(select max(effdt) from ps_local_tax_data
           where emplid=ltd.emplid and company=ltd.company
            and effdt <= $asofdate) and
ltd.locality=&tl2.locality and
ltd.state = &tl2.state

end-select
 If $found-emp-tax='Y'
    If &ltd.resident='Y' 
        show 'updating resident flag' &j.emplid ' ' &ltd.company
        let #wk-count=#wk-count + 1   
	show 'Doing Update-local-tax-data'
        Do Update-local-tax-data
    end-if
 else
    show 'Printing report as $found-emp-tax= N'
    do print-report
 End-if
end-procedure

!*********************************************************************
begin-procedure print-report
!*********************************************************************
  print &j.deptid (,3)
  print &j.emplid (,10)
  print &j.empl_rcd (,20) 
  print &pd.name (,34)
  print $locality (,64)
  print &tl1.tax_location_cd (,82)
  print &tl1.descr      (,90)
 position (+1)

end-procedure


!*********************************************************************
begin-procedure update-local-tax-data
!*********************************************************************
begin-sql
update ps_local_tax_data ltd2 
set ltd2.resident='N'
where &ltd.emplid=ltd2.emplid
and   &ltd.state=ltd2.state
and   &ltd.locality=ltd2.locality
and   &ltd.effdt=ltd2.effdt
and   &ltd.company=ltd2.company
end-sql

 show 'Updating ' &ltd.emplid ' ' &ltd.state ' ' &ltd.locality ' ' &ltd.effdt ' ' &ltd.company
 show 'Doing check-paycalendars'
 do check-paycalendars

end-procedure

!*********************************************************************
Begin-procedure check-paycalendars
!*********************************************************************
 Let $hit='N'
begin-select
pay_end_dt &pc.pay_end_Dt

 show 'found a calendar hit'
 let $hit='Y'
 show 'pay end ' &pc.pay_end_dt
 show 'company ' &j.company
 show 'paygroup ' &j.paygroup
 
from ps_pay_calendar pc
where pay_end_Dt=(select max(pay_end_Dt)
		from ps_pay_calendar pc2 
		where pay_end_dt < $AsOfToday
		and pc2.company=&j.company 
		and pc2.paygroup=&j.paygroup
		and pc2.pay_sheets_run='Y' 
		and pay_confirm_run='N')
and &j.company=company
and &j.paygroup=paygroup
end-select

 if $hit='Y'
    show 'Doing update-paysheet'
    do update-paysheet
 end-if
end-procedure

!*********************************************************************
begin-procedure update-paysheet
!*********************************************************************

 show 'in paysheet update'
 show 'Updating ps_pay_earnings setting pay_line_status = U ' &j.emplid ' ' &j.company ' ' &j.paygroup ' ' &pc.pay_end_dt ' and off_cycle = N'
begin-sql
update ps_pay_earnings set pay_line_status='U'
where emplid=&j.emplid
and   company=&j.company
and   paygroup=&j.paygroup
and   pay_end_dt=&pc.pay_end_dt
and   off_cycle = 'N'                                !GBD 11/22/2002 - added
end-sql

end-procedure


!*********************************************************************
Begin-Procedure P130-Print-Cover-Page
!*********************************************************************
  Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print 'As Of Date :'                                            (+2,5)
  Print $X000_Report_Heading_AsOfDate                             (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

  Let #PAGE-COUNT = 0
  New-Page
End-Procedure


#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#include 'reset.sqc'
#include 'askaod.sqc'    !Ask for AsOfDate
#include 'gexxx922.sqc'  !Get pay single row run control
