!******************************************************************************
! GEXPY152: This program will load a Deduction Arrears.                       *
!           Data will be coming from a spreadsheet provided by Payroll        *
!******************************************************************************
!                                                                             *
!               Confidentiality Information:                                  *
!                                                                             *
! This module is the confidential and proprietary information of              *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted       *
! in any form, by any means, in whole or in part, nor is it to be used        *
! for any purpose other than that for which it is expressly provided          *
! without the written permission of Giant Eagle.                              *
!                                                                             *
!                                                                             *
!******************************************************************************
!******************************************************************************
!                         MODIFICATION HISTORY                                *
!******************************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE               *
!******************************************************************************
! ISDVMZA    MVA       11/12/2013     INITIAL CREATION                        *
!                                     Program will read from Input filename   *
!                                     ded_arrears.txt as comma-delimited file *
!                                     S:\HR\Payroll\Private\UPLOADS\ folder   *
!                                     File format is:  Emplid,                *
!                                                      Company,               *
!                                                      Plan_Type,             *
!                                                      Benefit_Plan,          *
!                                                      Deduction_code,        *
!                                                      Ded_class,             *
!                                                      Amt                    *
!!******************************************************************************

#include 'setenv.sqc' !Set environment

!*********************************************************************
!Initial processing, retrieving current dates and calls the main
!procedure to do the processing.
!*********************************************************************

begin-report

  do Init-DateTime
  do Init-Number
  do stdapi-init

  do Get-Current-DateTime
  do Report

  do Commit-Transaction
  close 1
  do STDAPI-TERM

end-report

!*********************************************************************
!If this Program is being executed through process scheduler,
!the run control parameters and calls the main processing procedure.
!Otherwise, interrogates the user for the run control parameters and
!validates them. If the run control parameters are invalid, stops the
!execution.
!*********************************************************************
begin-procedure Report
#debug9  show 'Main-Process'
   display $AsOfToday

   do P100-Open-File
   do P110-Get-Parms
   do P150-Get-Pay-End
!   let $pay_end_dt  = '29-SEP-2012'                       !***  Mel Testing
   show 'Pay End Date: ' $pay_end_dt

   do P200-Process-File

   date-time () hh:mi:ss &timeProcess
   display &timeProcess

end-procedure Report

!**********************************************************************
! Open file for processing
!**********************************************************************
begin-procedure P100-Open-File
#debug9  show 'P100-Open-File'

#debug9 show 'Procedure = P100-Open-File'

!  let $folder = '/apps/hr/hrms90/hrstg90/incoming/'         !***  Mel Testing
   let $folder = '\\corp.gianteagle.com\common\HR\Payroll\Private\UPLOADS\'

   let $file = $folder || 'ded_arrears.txt'

   OPEN $file as 1 for-reading record=80 vary status = #file_status

   if #file_status <> 0
      let $Open-Msg = 'Error Opening '||$file || ' status = ' || to_char(#file_status)
      display $Open-Msg
      stop quiet
   end-if

end-procedure P100-Open-File


!**********************************************************************
! Get Run control parameters
!**********************************************************************
begin-procedure P110-Get-Parms
#debug9  show 'P110-Get-Parms'

  If $prcs_process_instance = ''
    Do Get-SQRW-Run-Controls
  Else
    Do Get-Process-Scheduler-Run-Controls
  End-If

end-procedure P110-Get-Parms

!**********************************************************************
! Get Parameters when running through SQRW
!**********************************************************************
Begin-Procedure Get-SQRW-Run-Controls
#debug9  show 'Get-SQRW-Run-Controls'

!  While 1=1
!    Input $Run_ID maxlen=3 type=char 'Enter the Pay Run ID'
!    If $Run_ID <> ''
!      Uppercase $Run_ID
!      Show $Run_ID
!      Break
!    End-If
!  End-While

End-Procedure

!**********************************************************************
! Get parameters when running through PeopleSoft Process Scheduler
!**********************************************************************
Begin-Procedure Get-Process-Scheduler-Run-Controls
#debug9  show 'Get-Process-Scheduler-Run-Controls'

  Do GEXXX922-Select-Parameters

  Let $Run_ID     = &GEX_RC_PAY.Run_ID

  If $Run_ID = ''
    Show 'Pay Run ID is required for this process'
    Stop
  End-If
  Show 'Pay Run ID         :  ' $Run_ID
End-Procedure

!*********************************************************************
!Gets the Pay End Date to process for
!*********************************************************************
begin-procedure P150-Get-Pay-End
#debug9  show 'P150-Get-Pay-End'

begin-select LOOPS=1
Z1.PAY_END_DT

   move &Z1.PAY_END_DT to $pay_end_dt
   display 'Pay End Date: ' noline
   display $pay_end_dt

FROM PS_PAY_CALENDAR Z1
where Z1.PAY_SHEETS_RUN = 'Y'
  AND Z1.PAY_CONFIRM_RUN = 'N'
  AND Z1.RUN_ID = $Run_ID
end-select
end-procedure P150-Get-Pay-End


!************************************************************************
!*  Read the input file for processing
!************************************************************************
begin-procedure P200-Process-File
#debug9  show 'P200-Process-File'

   move 'N' to $Found_cal
   move 0 to #end-file

   while 1
      read 1 into $record1:80
      if #end-file
         break   ! End of file reached.
      end-if

      unstring $record1 by ',' into $emplid
                                   $company
                                   $plan_type
                                   $benefit_plan
                                   $dedcd
                                   $ded_class
                                   $amt

      show 'Emplid: ' $emplid ' - $' $amt

      if $benefit_plan <= ''
         let $benefit_plan = ' '
      end-if

      if $plan_type = '0'
         let $plan_type = '00'
      end-if

      move $amt       to #tran_amt
      do P300-Get-Ded-Arrears

      if $rec-found = 'Y'

         add  #tran_amt to #arrears_bal
         do P800-Update-Ded-Arrears

      else

         move  #tran_amt to #arrears_bal
         move  999       to #benefit_rcd_nbr
         do P700-Insert-Ded-Arrears

      end-if

   end-while

end-procedure


!************************************************************************
Begin-Procedure P300-Get-Ded-Arrears
#debug9  show 'P300-Get-Ded-Arrears'

   move 'N' to $rec-found
   move 0   to #arrears_bal

begin-select loops=1 on-error=sql-error-found('P300-Get-Ded-Arrears')
DA.ARREARS_BAL
DA.BENEFIT_RCD_NBR

   move 'Y' to $rec-found
   move &DA.ARREARS_BAL     to #arrears_bal
   move &DA.BENEFIT_RCD_NBR to #benefit_rcd_nbr

from PS_DED_ARREARS DA
where DA.EMPLID    = $emplid
  and DA.COMPANY   = $company
  and DA.PLAN_TYPE = $plan_type
  and DA.DEDCD     = $dedcd
  and DA.DED_CLASS = $ded_class
end-SELECT

end-procedure P300-Get-Ded-Arrears


!************************************************************************
! Insert Pay Deduction Arrears record
!************************************************************************
Begin-Procedure P700-Insert-Ded-Arrears
#debug9  show 'P700-Insert-Ded-Arrears'

begin-SQL on-error=sql-error-found('P700-Insert-Ded-Arrears')

INSERT INTO PS_DED_ARREARS  (EMPLID,
                             COMPANY,
                             PLAN_TYPE,
                             BENEFIT_PLAN,
                             DEDCD,
                             DED_CLASS,
                             ARREARS_BAL,
                             BENEFIT_RCD_NBR)
                    VALUES  ($emplid,
                             $company,
                             $plan_type,
                             $benefit_plan,
                             $dedcd,
                             $ded_class,
                             #arrears_bal,
                             #benefit_rcd_nbr)
end-SQL

end-procedure P700-Insert-Ded-Arrears


Begin-Procedure P800-Update-Ded-Arrears
#debug9  show 'P800-Update-Ded-Arrears'

begin-SQL on-error=sql-error-found('P800-Update-Ded-Arrears')

UPDATE PS_DED_ARREARS DAU
   SET DAU.ARREARS_BAL = #arrears_bal
 WHERE DAU.EMPLID    = $emplid
   AND DAU.COMPANY   = $company
   AND DAU.PLAN_TYPE = $plan_type
   AND DAU.DEDCD     = $dedcd
   AND DAU.DED_CLASS = $ded_class
end-SQL

end-procedure P800-Update-Ded-Arrears



!********************************************************************
!This procedure displays in the error report if there are any sql erros
!happened in the program
!********************************************************************

begin-procedure SQL-Error-Found($Proc_Name)

  display 'SQL Error in ' noline
  display $Proc_Name
  display $_sql-error
  display 'sql-status: '  noline
  display #_sql-status  99990
   show 'COMPANY   = ' $emplid
   show 'COMPANY   = ' $company
   show 'PLAN_TYPE = ' $plan_type
   show 'DEDCD  M  = ' $dedcd
   show 'Amount    = ' #arrears_bal
  stop

end-procedure

#include 'gexxx922.sqc'  ! Process Scheduler run control procedure
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Date Arithmetic functions
#Include 'number.sqc'    !Routines to format numbers
#Include 'payrnctl.sqc'  !Select-Parameters
#Include 'payinit.sqc'   !Pay init
#Include 'stdapi.sqc'    !Update Process API
