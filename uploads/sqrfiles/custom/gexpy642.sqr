!***********************************************************************
! GEXPY642: This program creates an interface file for the United Way  *
!           eCampaign program.  This interface file is the yearly data *
!           that will be used to generate the pledge forms.            *
!                                                                      *
!           Do not generate entries for Columbus division employees in *
!           this interface.                                            *
!                                                                      *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *
!***********************************************************************
! T.45.1025  CJH       08/01/2001     INITIAL CREATION                 *
!                                                                      *
!            GBD       05/24/2002     ADDED PIN CODE DERIVED FROM THE  *
!                                     FIRST 4 LETTERS OF THE LAST NAME *
!                                     AND THE EMPLOYEE BIRTHDATE IN    *
!                                     MMDDYY FORMAT THIS CODE WILL BE  *
!                                     USED AS A SIGNON PIN CODE FOR    *
!                                     ONLINE CONTRIBUTIONS.            *
!                                     REMOVE EXCLUSION OF COLUMBUS     *
!                                     DIVISION EMPLOYEES.              *
!            GBD       06/11/2002     SEPARATE NAME FIELD INTO FIRST,  *
!                                     MIDDLE, LAST NAME, AND SUFFIX.   *
!                                     SET NAME PREFIXES AND SUFFIXES TO*
!                                     MIXED CASE (NO ROMAN NUMERALS).  *
!                                                                      *
!           CXA        06/22/2005     Add code to extract Emplid from  *
!                                     from GEX_EMPLID_MAPP             *   
!           SXR       07/04/2008      Added EVP,SVP,DIRECTOR,GRADE,    *
!                                     JOBCODE,PRINT_FORM,REGION,       *
!                                     BUSINESS_AREA to the interface   *
!                                     file                             *
!       VENDAXG       07/06/2010      Added code to generate .xls file.*
! GEXAP_848_E106783   2011-05-17      Vahini Katta                     *
! Added email_addr to dat and xls files and excluded security officers *
!GEX_SEC_REENG 2015-04-29 Vahini Katta                                 *
!Changes related to gex_emplid_mapp/7 digit emplid
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'

begin-report

  do Init-DateTime
  do Init-Number
  do stdapi-init
  move 'GEXPY642' to $ReportID
  move 'United Way eCampaign Pledge Card Interface' to $ReportTitle
  display $ReportTitle



  do Get-Current-DateTime
  do Report
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term

end-report

!************************************************************************

begin-procedure Report

 let $FileName = '{OUTFILE}'||'gexpy642.dat'
 let $FileName_xls = '{OUTFILE}'||'gexpy642.xls'!Vendaxg Added for ITG#80760 on 07/06/2010
 
 open $FileName as 1 for-writing record=994 status=#filestat
 
 open $FileName_xls as 2 for-writing record=1000 status=#filestat_xls !Vendaxg Added for ITG#80760 on 07/06/2010


 if #filestat < 0
	display 'File Open error occured;  Cannot proceed'
	goto Report-Exit
 end-if         
!Vendaxg Added for ITG#80760 on 07/06/2010 - Begin
 if #filestat_xls < 0
	display 'File Open error occured;  Cannot proceed'
	goto Report-Exit
 end-if         
!Vendaxg Added for ITG#80760 on 07/06/2010 - End

Do Print-Header	!Vendaxg Added for ITG#80760 on 07/06/2010

 
 date-time () hh:mi:ss &timeBegan
 display 'Report Began: ' noline
 display &timeBegan

 move 'N' to $Errorfound
 move '0' to $filler

 do process-employee-data
 
  if $sev-error = 'Y'
    goto report-exit
 end-if
  
Report-Exit:

  print 'Total Transactions=' (+2,1)
  do Format-Number(#InputTran, $out, '99999')
  print $out ()
  print '     Total Errors in Transactions=' ()
  do Format-Number(#ErrorCount, $out, '99999')
  print $out ()

  close 1

  date-time () hh:mi:ss &timeProcess
  display #InputTran 99999 noline
  display ' Transactions Processed: ' noline
  display &timeProcess

end-procedure


begin-heading 7
  Move 'United Way eCampaign Pledge Card Interface - ERROR REPORT' to $ReportTitle
  #Include 'stdhdg01.sqc'

  date-time () DD-MON-YYYY &curr_Date

   print 'EMPLID' (+2,1)
   print 'ERROR MESSAGE' (,15)
 
end-heading

!******************************************************************
!This procedure selects all the employees that satisfy the criteria
!and depending on the action taken upon thier job records, writes 
!the necessary records into the output file
!******************************************************************

begin-procedure process-employee-data

move 'N' to $found
let #inputtran = 0
display $reportdate_dbf
begin-select ON-ERROR=SQL-Error-Found('Process-employee-data')
A.EMPLID 
A.NAME_PREFIX 
A.NAME 
A.ADDRESS1 &addr1
A.ADDRESS2 &addr2
A.ADDRESS3 &addr3
A.ADDRESS4 &addr4
A.CITY 
A.STATE 
A.POSTAL	
A.SEX
A.FIRST_NAME !Vendaxg Added for ITG#80760 on 07/06/2010
A.LAST_NAME !Vendaxg Added for ITG#80760 on 07/06/2010
A.NAME_SUFFIX !Vendaxg Added for ITG#80760 on 07/06/2010
!GBD 05/24/2002 BEGIN
TO_CHAR(A.BIRTHDATE,'MM/DD/YY') &birthdate
!GBD 05/24/2002 END
TO_CHAR(A.BIRTHDATE,'MM/DD/YYYY') &birthdate_MMDDDYYYY
C.EMPLID &ee
C.COMPANY
C.PAYGROUP
C.DEPTID
C.ACCT_CD
C.EMPL_RCD &rcd
C.JOBCODE !Vendaxg Added for ITG#80760 on 07/06/2010
D.LOCATION
D.DESCR	!Vendaxg Added for ITG#80760 on 07/06/2010
GD.GEX_COMPANY_DIV_CD
GD.GEX_RGN_CD !Vendaxg Added for ITG#80760 on 07/06/2010
GD.GEX_RMGR_LST_NME !Vendaxg Added for ITG#80760 on 07/06/2010
!Do Add-Employee-Info   !ISDVSXR ADDED 07/04/2008 ITG-51216 

! set exception handling flags
  Let $sev-error = 'N'
  move 'Y' to $Found
  move 'N' to $errorfound
  move 'N' to $trans_error
  add 1 to #inputtran

! Set default field values
  let $prefix = ' '
!GBD 06/11/2002 Begin
  Let $First_Name_xls = ' '
  Let $Last_Name_xls = ' '
  Let $Name_Suffix_xls = ' '
  let $first_prefix = ' '
  let $end_prefix = ' '
  let #length_prefix = 0
  let $suffix = ' '
  let $first_suffix = ' '
  let $end_suffix = ' '
  let #length_suffix = 0
  let $middle_name = ' '
!GBD 06/11/2002 End
  let $first_name = ' '
  let $last_name = ' '
  let $gender = ' '
  let $address_type = 'H'
  let $street_address = ' '
  let $city = ' '
  let $state = ' '
  let $zip = ' '
  let $country = 'US'
  let $email_type = ' '
  let $email_addr = ' '
  let $ref_id = ' '
  let $phone_type = ' '
  let $area_cd = ' ' 
  let $phone_nbr = ' '
  let $phone_ext = ' '
  let $emplid = ' '
  let $ssn = ' '
  let $pays = '52'
  let $grp_cd1 = ' '      !Company
  let $grp_cd2 = ' '      !Deptid
  let $grp_cd3 = ' '      !Acct_cd 
  let $grp_cd4 = ' '      !Paygroup
  let $grp_cd5 = 'UNWAY'  ! DEDCD
  let $grp_cd6 = ' '
  let $grp_cd7 = ' '
  let $grp_cd8 = ' '
  let $grp_cd9 = ' '
  let $grp_cd10 = ' '     !Location
  let $grp_cd11 = ' '
  let $grp_cd12 = ' '
  let $grp_cd13 = ' '
  let $gift_pay = '0.00'
  let $total_gift = '0.00'
  let $py_total_gift = '0.00'
  let $pct_pay = '0.00'
  let $annual_sal = '0.00'
  let $grp_cd1_desc = 'Company'
  let $grp_cd2_desc = 'Department id (Store)'
  let $grp_cd3_desc = 'Acct code (POS Dept)'
  let $grp_cd4_desc = 'Paygroup'
  let $grp_cd5_desc = 'Deduction code'
  let $grp_cd6_desc = ' '
  let $grp_cd7_desc = ' '
  let $grp_cd8_desc = ' '
  let $grp_cd9_desc = ' '
  let $grp_cd10_desc = 'Location'
  let $grp_cd11_desc = ' '
  let $grp_cd12_desc = ' '
  let $grp_cd13_desc = ' '  
!GBD 05/24/2002 BEGIN
  let $pin_code = ' '
  let $pin_lname = ' '
  let $bday = ' '
!GBD 05/24/2002 END
!Vendaxg Added for ITG#80760 on 07/06/2010 - Begin
  Let $Department_Description = &D.DESCR
  Let $Gex_Region_Cd =  &GD.GEX_RGN_CD
  Let $Gex_Rmgr_lst_Name = &GD.GEX_RMGR_LST_NME
  Let $First_Name_xls = Ltrim(Rtrim(&A.FIRST_NAME,' '),' ')
  Let $Last_Name_xls = Ltrim(Rtrim(&A.LAST_NAME,' '),' ')
  Let $Name_Suffix_xls = Ltrim(Rtrim(&A.NAME_SUFFIX,' '),' ')
  Show  $First_Name_xls  '  ' $Last_Name_xls 
!Vendaxg Added for ITG#80760 on 07/06/2010 - End
! set field values
  unstring &A.NAME by ',' into $last_name $first_name

  move &A.NAME_PREFIX    to    $prefix
!GBD 06/11/2002 Begin
  let #length_prefix = (length(rtrim($prefix,' '))-1)
  let $first_prefix = substr($prefix,1,1)
  Uppercase $first_prefix
  let $end_prefix = substr($prefix,2,#length_prefix)
  Lowercase $end_prefix
  let $prefix = $first_prefix||$end_prefix
!  let $show_prefix = 'Prefix: '||$prefix
!  show $show_prefix
!GBD 06/11/2002 End
  
    if rtrim($first_name,' ') = ''
     move 'Y' to $trans_error
     print &A.EMPLID (+1,1)
     print 'First Name not found on Personal Data.  Field is required.  Employee skipped' (,15)
  end-if

  if rtrim($last_name,' ') = ''
     move 'Y' to $trans_error
     print &A.EMPLID (+1,1)
     print 'Last Name not found on Personal Data.  Field is required.  Employee skipped' (,15)
  end-if

  let $first_name = rtrim($first_name,' ')
  let $last_name = rtrim($last_name,' ')

!GBD 06/11/2002 Begin
  let $suffix_exists = 'N'
  Do Check-Last-Name
  if $suffix_exists = 'N'
     Do Check-First-Name
  end-if
  if $suffix_exists = 'N'
     let $suffix = ' '
  end-if
!** Format Suffix
  let #length_suffix = (length(rtrim($suffix,' '))-1)
  let $first_suffix = substr($suffix,1,1)
  if $first_suffix = 'J' or $first_suffix = 'S' or
     $first_suffix = 'j' or $first_suffix = 's'
     Uppercase $first_suffix
     let $end_suffix = substr($suffix,2,#length_suffix)
     Lowercase $end_suffix
     let $suffix = $first_suffix||$end_suffix
!     let $show_suffix = 'Suffix: '||$suffix
!     show $show_suffix
  else
     Uppercase $suffix
  end-if
!**
  let $middle_exists = 'N'
  Do Check-Middle-Name
  if $middle_exists = 'N'
     let $middle_name = ' '
  end-if
   !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
   !let $ssn_no = &A.EMPLID     !ISDVSXR ADDED 07/04/2008 ITG-51216\
   do Get-Emp-Ssn (&A.EMPLID, $ssn_no)
   !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
!  let $show_first_name = 'First Name: '||$first_name
!  let $show_middle_name = 'Middle Name: '||$middle_name
!  let $show_last_name = 'Last Name:  '|| $last_name
!  let $show_suffix = 'Suffix: '||$suffix
    show ' Checking SSN ' $ssn_no !sxr uncommented
!  show $show_first_name
!  show $show_middle_name
!  show $show_last_name
!  show $show_suffix
  
!GBD 06/11/2002 End  
 
  if rtrim(&A.SEX,' ') = ''
     move 'Y' to $trans_error
     print &A.EMPLID (+1,1)
     print 'Gender not fsound on Personal Data.  Field is required.  Employee skipped' (,15)
  else
     move &A.SEX         to    $gender
  end-if

! address type defaulted

  if rtrim(&addr1,' ') = ''
     move 'Y' to $trans_error
     print &A.EMPLID (+1,1)
     print 'Address 1 not found on Personal Data.  Field is required.  Employee skipped' (,15)
  else
     let $address1 = rtrim(&addr1,' ')
  end-if     
   
  if rtrim(&A.CITY,' ') = ''
     move 'Y' to $trans_error
     print &A.EMPLID (+1,1)
     print 'City not found on Personal Data.  Field is required.  Employee skipped' (,15)
  else
     let $city = rtrim(&A.CITY,' ')
  end-if     

  if rtrim(&A.STATE,' ') = ''
     move 'Y' to $trans_error
     print &A.EMPLID (+1,1)
     print 'State not found on Personal Data.  Field is required.  Employee skipped' (,15)
  else
     move &A.STATE           to    $state
  end-if     

  if rtrim(&A.POSTAL,' ') = ''
     move 'Y' to $trans_error
     print &A.EMPLID (+1,1)
     print 'Postal not found on Personal Data.  Field is required.  Employee skipped' (,15)
  else
     move &A.POSTAL           to   $zip
  end-if     

! Country code defaulted

  if rtrim(&ee,' ') = ''
     move 'Y' to $trans_error
     print &ee (+1,1)
     print 'EMPLID not found on Job.  Field is required.  Employee skipped' (,15)
  else
     move &ee to $ee
     move &rcd to $rcd
     let $emplid = $ee || $rcd
  end-if     

  !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
  !move &ee to $ssn 
  move $ssn_no to $ssn
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
  Let $Mail-Drop = ' '
  Do Get-Mail-Drop


! Number of Pays defaulted


  move &C.COMPANY    to  $grp_cd1
  move &C.ACCT_CD    to  $grp_cd3
  move &C.PAYGROUP   to  $grp_cd4

! Deduction code defaulted

  move &D.LOCATION    to  $grp_cd10



! Convert I departments back to the original deptid
  if substr(&C.DEPTID,4,1) = 'I'
     do convert-deptid(&C.DEPTID,$new_deptid)
  else
     let $new_deptid = &C.DEPTID
  end-if

  move $new_deptid     to  $grp_cd2

! Generate street address field  

  let $street_address = $address1
  move &addr2 to $addr2
  move &addr3 to $addr3
  move &addr4 to $addr4

  if rtrim(&addr2,' ') <> ''
     let $street_address = $street_address || '//' || rtrim($addr2,' ')
  end-if

  if rtrim(&addr3,' ') <> ''
     let $street_address = $street_address || '//' || rtrim($addr3,' ')
  end-if

  if rtrim(&addr4,' ') <> ''
     let $street_address = $street_address || '//' || rtrim($addr4,' ')
  end-if

!GBD 05/24/2002 BEGIN
  let $birthdate = &birthdate
  let $bday = substr($birthdate,1,2)|| substr($birthdate,4,2)|| substr($birthdate,7,2)
  let $birthdate_MMDDYYYY = &birthdate_MMDDDYYYY
  let $bday = substr($birthdate_MMDDYYYY,1,2)|| substr($birthdate_MMDDYYYY,4,2)|| substr($birthdate_MMDDYYYY,7,4)
!*
!  let $show_bday = 'Birthdate: ' || $bday
!  show $show_bday
!*
  let $lname = rtrim($last_name,' ')
  let #lname_length = length($lname)
!*
!  let $lname_length = to_char(#lname_length)
!  let $show_lname = 'LastName: '||$lname|| '  '||$lname_length
!  show $show_lname
!*
  Evaluate #lname_length
     when = 0
        let $lname = '0000'
        let #lname_length = 4
        break
     when = 1
        let $lname = substr($lname,1,1)||'000'
        let #lname_length = 4
        break
     when = 2
        let $lname = substr($lname,1,2)||'00'
        let #lname_length = 4
        break
     when = 3
        let $lname = substr($lname,1,3)||'0'
        let #lname_length = 4
     when >= 4
        break
  End-Evaluate

  if #lname_length = 0
     let $pin_code = $lname||$bday
  else
     Do Create-Pin-Code
!*
!     let $show_pin_lname = 'PinLname: '||$pin_lname
!     show $show_pin_lname
!*
     let $pin_code = $pin_lname||$bday
  end-if

!  let $showme = $emplid||' '||$lname||'  '||$bday||'  '||$pin_code
!  show $showme

!GBD 05/24/2002 END
	Do Get-Job-Title !Vendaxg Addedd for ITG#80760 on 07/06/2010
	Do Get-Work-Location !Vendaxg Addedd for ITG#80760 on 07/06/2010
!CXA 06/22/2005  BEGIN
  let $found = 'N'
  
    Do Add-Employee-Info   !ISDVSXR ADDED 07/04/2008 ITG-51216 
    do Get-Emplid-Mapp
    !GEXAP_848_E106783 2011-08-09 Vahini Katta Begins
    do Get-Email-Addr
    !GEXAP_848_E106783 2011-08-09 Vahini Katta Ends
  
  if $found = 'N'
     move 'Y' to $trans_error
     print &ee (+1,1)
     print 'EMPLID not found on EMPLID MAPP Table.  Field is required.  Employee skipped' (,15)
  else
     let $emplid = &GEM.EMPLID  	!replace EMPLID with GE EMPLID
     move &GEM.EMPLID to $ssn 		!replace SSN with GE EMPLID
     let $pin_code = &GEM.EMPLID	!replace generate pincode with GE EMPLID
     
  end-if  
!CXA 06/22/2005  END
    show ' GE EMPLID : '$pin_code!isdvsxr added  

  if $trans_error = 'N'
     do write-interface-file
     Do Print-Record-Xls !Vendaxg Added for ITG#80760 on 07/06/2010
  end-if
  
 FROM PS_PERSONAL_DATA A,
      PS_JOB C,
      PS_DEPT_TBL D,
      PS_GEX_DEPT_TBL GD
WHERE A.EMPLID    = C.EMPLID
!AND A.EMPLID = '206521536'
  AND C.EFFDT =
       (SELECT MAX(EFFDT)
	FROM   PS_JOB
	WHERE EMPLID    = C.EMPLID
	  AND EMPL_RCD = C.EMPL_RCD
	  AND EFFDT <= SYSDATE)
    AND C.EFFSEQ =
       (SELECT MAX(EFFSEQ)
	FROM   PS_JOB 
	WHERE EMPLID    = C.EMPLID
	  AND EMPL_RCD = C.EMPL_RCD
	  AND EFFDT    = C.EFFDT)
    AND C.DEPTID = D.DEPTID
    AND C.EMPL_STATUS in ('A','L','P','S')
    AND D.SETID = 'COMMN'
    AND D.EFF_STATUS = 'A'
    AND D.EFFDT = (select max(dd.effdt) from ps_dept_tbl dd
                  where dd.deptid = d.deptid
                    and dd.eff_status = 'A'
                    and dd.effdt <= SYSDATE)
    AND GD.SETID = D.SETID
    AND GD.DEPTID = D.DEPTID
    AND GD.EFFDT = (select max(gdd.effdt) from ps_gex_dept_tbl gdd
                  where gdd.deptid = gd.deptid
                    and gdd.effdt <= SYSDATE)
!GBD 05/24/2002
!    AND GD.GEX_COMPANY_DIV_CD not in ('COL')
!GBD 05/24/2002
!GEXAP_848_E106783 2011-08-09 Vahini Katta Begins
     AND C.JOBCODE<>'90000'
!GEXAP_848_E106783 2011-08-09 Vahini Katta Ends
end-select


if $found = 'N'
   add #1 to #errorcount
   do error-found
   print 'No employees found for interface file' (,132)
end-if

end-procedure
!ISDVSXR Begin 07/04/2008 ITG-51216
 
!********************************************************************
!This procedure adds new fields to the Interface file 
!******************************************************************** 

Begin-Procedure Add-Employee-Info

Begin-SELECT 
JB.EMPLID,
ETBL.DEPTID,
EVP.GEX_DIR,
EVP.GEX_EVP,
EVP.GEX_SVPVP, 
JB.JOBCODE,
JB.GRADE,
ETBL.GEX_OPR_DIV ,
ETBL.GEX_BUS_AREA

  
  let $EMPL_ID = &JB.EMPLID
  let $DEPT_ID = substr(&ETBL.DEPTID,1,1)
  
  Let $Dir_svp_Svpvp_emplid = &EVP.GEX_EVP
  Do Get-Name
  let $EVP = $Dir_svp_Svpvp_Name
  Let $Dir_svp_Svpvp_emplid = &EVP.GEX_SVPVP
  Do Get-Name
  let $SVP = $Dir_svp_Svpvp_Name
  Let $Dir_svp_Svpvp_emplid = &EVP.GEX_DIR
  Do Get-Name
  let $DIR = $Dir_svp_Svpvp_Name
  let $JOBCODE = &JB.JOBCODE
  let $GRADE = &JB.GRADE
  let $REGION = &ETBL.GEX_OPR_DIV
  let $BUSINESS_AREA = &ETBL.GEX_BUS_AREA
 !Do Print-Form
 
  show ' Employee no: ' $EMPL_ID
  show ' Designation: ' $EVP
  show ' SVP= ' $SVP
  show ' DIR= ' $DIR
  show ' JOBCODE= ' $JOBCODE
  show ' GRADE= ' $GRADE
  Show '$DEPT_ID : '$DEPT_ID

From ps_job JB,
     ps_gex_evp_tbl ETBL,
     ps_gex_mgmt_report EVP 
WHERE  JB.EMPLID = &A.EMPLID !$ssn_no !GEX_SEC_REENG 2015-04-29 Vahini Katta
AND JB.EMPL_RCD = &rcd
AND JB.DEPTID = EVP.DEPTID 
AND  JB.EFFDT=
        (select max (EFFDT)  
         from PS_JOB JB1
         where JB1.EMPLID = JB.EMPLID
            and  JB1.EMPL_RCD = JB.EMPL_RCD
            and  JB1.EFFDT<=SYSDATE)
AND JB.EFFSEQ=
         (select max(EFFSEQ)
         from PS_JOB JB2
         where JB2.EMPLID=JB.EMPLID
            and JB2.EMPL_RCD=JB.EMPL_RCD
            and JB2.EFFDT=JB.EFFDT)
AND JB.DEPTID = ETBL.DEPTID
AND JB.ACCT_CD = ETBL.ACCT_CD
AND JB.PAYGROUP = ETBL.PAYGROUP
AND JB.COMPANY = ETBL.COMPANY

!From PS_PERSONAL_DATA EVPN,
!     ps_gex_mgmt_report EVP,    
!     PS_PERSONAL_DATA SVPN,
!     ps_gex_mgmt_report SVP,
!     PS_PERSONAL_DATA DIRN, 
!     ps_gex_mgmt_report DIR,
!     ps_job JB,
!     ps_gex_evp_tbl ETBL 
!WHERE  EVP.DEPTID = JB.DEPTID
!AND  JB.EFFDT=
!        (select max (EFFDT)  
!         from PS_JOB JB1
!         where JB1.EMPLID = JB.EMPLID
!            and  JB1.EMPL_RCD = JB.EMPL_RCD
!            and  JB1.EFFDT<=SYSDATE)
!AND JB.EFFSEQ=
!         (select max(EFFSEQ)
!         from PS_JOB JB2
!         where JB2.EMPLID=JB.EMPLID
!            and JB2.EMPL_RCD=JB.EMPL_RCD
!            and JB2.EFFDT=JB.EFFDT)
!    
!AND EVP.GEX_EVP   = EVPN.EMPLID
!AND EVP.DEPTID    = SVP.DEPTID 
!AND SVP.GEX_SVPVP = SVPN.EMPLID
!AND DIR.GEX_DIR   = DIRN.EMPLID
!AND SVP.DEPTID    = DIR.DEPTID
!AND ETBL.DEPTID   = JB.DEPTID
!AND ETBL.COMPANY  = JB.COMPANY
!AND ETBL.PAYGROUP = JB.PAYGROUP
!AND ETBL.ACCT_CD = JB.ACCT_CD
!AND JB.EMPLID = $ssn_no
  
End-Select

End-Procedure Add-Employee-Info

!ISDVSXR End 07/04/2008 ITG-51216 

!********************************************************************
!This procedure creates the E01 record for the employees whose records
!need to be deleted from the store files
!******************************************************************** 

begin-procedure write-interface-file

move 'N' to $errorfound
move 'N' to $sev-error
let #file-stat = 0
!GBD 06/11/2002 BEGIN
! string   $prefix $first_name $last_name $gender $address_type $street_address $city 

!ISDVSXR Begin 07/04/2008 ITG-51216

if $DEPT_ID='C'
 let $Print_Flag_Form ='Y'
Else
 let $Print_Flag_Form ='N'
End-if

!ISDVSXR End 07/04/2008 ITG-51216

 string   $prefix $first_name $middle_name $last_name $suffix $gender $address_type $street_address $city 
!GBD 06/11/2002 END
          $state $zip $country $email_type $email_addr $ref_id $phone_type $area_cd $phone_nbr $phone_ext
          $emplid $ssn $pays $grp_cd1 $grp_cd2 $grp_cd3 $grp_cd4 $grp_cd5 $grp_cd6 
          $grp_cd7 $grp_cd8 $grp_cd9 $grp_cd10 $grp_cd11 $grp_cd12 $grp_cd13 $gift_pay
          $total_gift $py_total_gift $pct_pay $annual_sal $grp_cd1_desc $grp_cd2_desc 
          $grp_cd3_desc $grp_cd4_desc $grp_cd5_desc $grp_cd6_desc $grp_cd7_desc 
          $grp_cd8_desc $grp_cd9_desc $grp_cd10_desc $grp_cd11_desc $grp_cd12_desc 
                     
!GBD 05/24/2002 Begin
! $grp_cd13_desc by ',' into $rec  
          $grp_cd13_desc $pin_code $Mail-Drop $EVP $SVP $DIR $GRADE $JOBCODE $Print_Flag_Form $REGION $BUSINESS_AREA  !ISDVSXR Added 07/04/2008 ITG-51216
             by ',' into $rec  
          !Show 'Record Name : '$rec ! ISDVSXR Testing
!GBD 05/24/2002 End
  write 1 from $rec
     status=#file-stat


if #file-stat <> 0
   move 'Y' to $sev-error
   add 1 to #errorcount
   do error-found
   print 'error in writing to the file' (,132)
end-if

end-procedure

!CXA 06/22/2005  BEGIN
!******************************************************************
! Get GE Employee Id from Employee ID table based on SSN
!***********************************************************************
begin-procedure Get-Emplid-Mapp
 let $found = 'N'
begin-SELECT
GEM.SSN, 
GEM.EMPLID, 
GEM.EMPL_RCD

   let $found = 'Y'

FROM PS_GEX_EMPLID_MAPP GEM
!GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
!WHERE GEM.SSN = &A.EMPLID 
WHERE GEM.EMPLID = &A.EMPLID
!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
end-SELECT

end-procedure

!GEXAP_848_E106783 2011-08-09 Vahini Katta Begins
!******************************************************************
! Get Email Address
!******************************************************************
Begin-procedure Get-Email-Addr
begin-select 
EM.EMAIL_ADDR 

FROM PS_EMAIL_ADDRESSES EM
WHERE EM.PREF_EMAIL_FLAG='Y' 
AND EM.EMPLID=&A.EMPLID
end-select
End-procedure Get-Email-Addr
!GEXAP_848_E106783 2011-08-09 Vahini Katta Ends

!********************************************************************
!This procedure pulls the Mail Drop
!********************************************************************
begin-procedure Get-Mail-Drop
 let $found = 'N'
begin-SELECT
GMD.MAIL_DROP

  Let $Mail-Drop = &GMD.MAIL_DROP
  let $found = 'Y'

FROM	PS_PAYROLL_DATA GMD
WHERE	GMD.EMPLID = &A.EMPLID
  AND	GMD.COMPANY = &C.COMPANY

end-SELECT

end-procedure



!CXA 06/22/2005  END

!***********************************************************************
! Convert DEPT ids that end in 'I' to the original deptid
!***********************************************************************
begin-procedure convert-deptid($deptid_in, :$deptid_out)
 let $found = 'N'
begin-SELECT
GDT.DEPARTMENT
 
   let $deptid_out = &GDT.DEPARTMENT
   let $found = 'Y'

From PS_GEX_DEPT_TBL GDT
where GDT.deptid = $deptid_in
end-SELECT

if $found = 'N'
  display 'Department ID unable to be converted: ' noline
  display $deptid_in
  do error-found
end-if
 
end-procedure

!GBD 05/24/2002 Begin
!********************************************************************
Begin-Procedure Create-Pin-Code
!********************************************************************
  LOWERCASE $lname

  let #pin_length = 1
  let $temp_pin = ''

  While #pin_length <= #lname_length
    let $char_check = substr($lname,#pin_length,1)
    if $char_check = '.' or $char_check = ',' or
       $char_check = '-' or $char_check = '_' or
       $char_check = ' ' or $char_check = ''''
       !Skip character
    else
       let $temp_pin = $temp_pin||substr($lname,#pin_length,1)
    end-if
    Add +1 to #pin_length
  End-While

  let $pin_lname = substr($temp_pin,1,4)

End-Procedure Create-Pin-Code
!GBD 05/24/2002 End

!GBD 06/11/2002 Begin
!********************************************************************
!This procedure checks the last name field for a suffix
!********************************************************************
Begin-Procedure Check-Last-Name
  let $suffix = ' '
  let #ln_length = 1
  let #ln2_length = 0
  let #ln_max_length = length(rtrim($last_name,' '))

  While #ln_length <= #ln_max_length
    let $char_check = substr($last_name,#ln_length,3)
    if $char_check = 'jr.' or $char_check = 'Jr.' or $char_check = 'JR.' or
       $char_check = 'sr.' or $char_check = 'Sr.' or $char_check = 'SR.' or
       $char_check = 'iii' or $char_check = 'Iii' or $char_check = 'IIi' or
       $char_check = 'III' or $char_check = 'iII' or $char_check = 'iiI'
       let #ln2_length = #ln_length - 1
       let $last_name = substr($last_name,1,#ln2_length)
       let $last_name = rtrim($last_name,' ')
       let $suffix = $char_check
       let #ln_length = #ln_max_length+1
       let $suffix_exists = 'Y'
    else
       Add +1 to #ln_length
    end-if
    if (#ln_length + 2) > #ln_max_length
       let #ln_length = #ln_max_length +1
    end-if     
  End-While

  if $suffix_exists = 'N'
     let #ln_length = 1
     let #ln2_length = 0
     let #ln_max_length = length($last_name)

     While #ln_length <= #ln_max_length
      let $char_check = substr($last_name,#ln_length,2)
       if $char_check = 'jr' or $char_check = 'Jr' or $char_check = 'JR' or
          $char_check = 'sr' or $char_check = 'Sr' or $char_check = 'SR' or
          $char_check = 'ii' or $char_check = 'Ii' or $char_check = 'iI' or $char_check = 'II' or
          $char_check = 'IV' or $char_check = 'iV' or
!          $char_check = ' v' or $char_check = ' V' or
          $char_check = 'VI'
          let #ln2_length = #ln_length - 1
          let $last_name = substr($last_name,1,#ln2_length)
          let $last_name = rtrim($last_name,' ')
          let $suffix = $char_check
          let #ln_length = #ln_max_length+1
          let $suffix_exists = 'Y'
       else
          Add +1 to #ln_length
       end-if
       if (#ln_length + 1) > #ln_max_length
          let #ln_length = #ln_max_length +1
       end-if     
     End-While
  end-if

  if $suffix_exists = 'N'
     let #ln_length = 1
     let #ln2_length = 0
     let #ln_max_length = (length($last_name) - 1)

     let $char_check = substr($last_name,#ln_max_length,2)
     if $char_check = ' v' or $char_check = ' V'
          let #ln2_length = #ln_max_length - 1
          let $last_name = substr($last_name,1,#ln2_length)
          let $last_name = rtrim($last_name,' ')
          let $suffix = rtrim($char_check,' ')
          let $suffix_exists = 'Y'
     end-if
  end-if

End-Procedure Check-Last-Name

!********************************************************************
!This procedure checks the first name field for a suffix
!********************************************************************
Begin-Procedure Check-First-Name
  let $suffix = ' '
  let #fn_length = 1
  let #fn2_length = 0
  let #fn_max_length = length($first_name)

  While #fn_length <= #fn_max_length
    let $char_check = substr($first_name,#fn_length,3)
    if $char_check = 'jr.' or $char_check = 'Jr.' or $char_check = 'JR.' or
       $char_check = 'sr.' or $char_check = 'Sr.' or $char_check = 'SR.' or
       $char_check = 'iii' or $char_check = 'Iii' or $char_check = 'IIi' or
       $char_check = 'III' or $char_check = 'iII' or $char_check = 'iiI'
       let #fn2_length = #fn_length - 1
       let $first_name = substr($first_name,1,#fn2_length)
       let $first_name = rtrim($first_name,' ')
       let $suffix = $char_check
       let #fn_length = #fn_max_length+1
       let $suffix_exists = 'Y'
    else
       Add +1 to #fn_length
    end-if
    if (#ln_length + 2) > #ln_max_length
       let #ln_length = #ln_max_length
    end-if     
  End-While

  if $suffix_exists = 'N'
     let #fn_length = 1
     let #fn2_length = 0
     let #fn_max_length = length($first_name)

     While #fn_length <= #fn_max_length
      let $char_check = substr($first_name,#fn_length,2)
       if $char_check = 'jr' or $char_check = 'Jr' or $char_check = 'JR' or
          $char_check = 'sr' or $char_check = 'Sr' or $char_check = 'SR' or
          $char_check = 'ii' or $char_check = 'Ii' or $char_check = 'iI' or $char_check = 'II' or
          $char_check = 'IV' or $char_check = 'iV' or
          $char_check = 'VI'
          let #fn2_length = #fn_length - 1
          let $first_name = substr($first_name,1,#fn2_length)
          let $first_name = rtrim($first_name,' ')
          let $suffix = $char_check
          let #fn_length = #fn_max_length+1
          let $suffix_exists = 'Y'
       else
          Add +1 to #fn_length
       end-if
       if (#ln_length + 1) > #ln_max_length
          let #ln_length = #ln_max_length
       end-if     
     End-While
  end-if

End-Procedure Check-First-Name

!********************************************************************
!This procedure pulls the middle initial/name from first name
!********************************************************************
Begin-Procedure Check-Middle-Name
  let $middle_name = ' '
  let $first_name = rtrim($first_name,' ')
  let #fn_length = 1
  let #fn2_length = 0
  let #fn3_length = 0
  let #fn4_length = 0
  let #fn_max_length = length($first_name)


!  display 'First_Name: ' noline
!  display $first_name
!  display #fn_max_length

     While #fn_length <= #fn_max_length
      let $char_check = substr($first_name,#fn_length,1)
       if $char_check = ' '
          let #fn2_length = #fn_length - 1
          let #fn3_length = #fn_length + 1
          let #fn4_length = #fn_max_length - #fn_length
!          display 'FN2_length: ' noline
!          display #fn2_length
!          display 'FN3_length: ' noline
!          display #fn3_length
!          display 'FN4_length: ' noline
!          display #fn4_length
          let $middle_name = rtrim(substr($first_name,#fn3_length,#fn4_length),' ')
          let $first_name = rtrim(substr($first_name,1,#fn2_length),' ')
!          display 'Middle_Name: ' noline
!          display $middle_name
          let #fn_length = #fn_max_length + 1
          let $middle_exists = 'Y'
       else
          Add +1 to #fn_length
       end-if
     End-While  

End-Procedure Check-Middle-Name
!GBD 06/11/2002 End

!********************************************************************
!This procedure displays in the error report if there are any sql erros
!happened in the program
!********************************************************************

begin-procedure SQL-Error-Found($Proc_Name) 
  do error-found
  print 'SQL Error in ' (,21)
  print $Proc_Name (,35)  
  print $_sql-error (+1,1) 
  print 'sql-status:' (+1,1)
  print #_sql-status () edit 99999 

end-procedure

!*********************************************************************
!This procedure displays the error message for the records that are in
!progress
!*********************************************************************

begin-procedure Error-Found
  move 'Y' to $ErrorFound
  do Format-Number(#InputTran, $out, '99999')
  print $out (+1,1)
  print &C.DEPTID (,11)
  move &A.EMPLID to $emplid

  let $EmplId_1st3 = substr($EmplId,1,3)
  let $EmplId_mid2 = substr($EmplId,4,2)
  let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  print $EmplID11 (,24)
  print &C.ACCT_CD (,66)
 
end-procedure
!Vendaxg Added for ITG#80760 on 07/06/2010 - Begin

Begin-Procedure Print-Header
encode '<009>' into $tab
Let $delim = $tab
string 'CAMPAIGN YEAR' ' PREFIX' ' FIRST NAME' ' MIDDLE NAME' ' LAST NAME' ' SUFFIX' ' EMPLID' ' SEX' ' JOBTITLE1' ' ADDRESSTYPE' ' ADDRESSLINE1' ' ADDRESSLINE2' ' CITY' ' STATEORPROV' ' ZIPPOSTALCODE' ' WORKLOCATION' ' WORKADDRESSLINE1' ' WORKADDRESSLINE2'  by $delim into $actives
!GEXAP_848_E106783 2011-08-09 Vahini Katta Begins
!string $actives   ' WORKCITY' ' WORKSTATE' ' WORKZIP' ' DEPARTMENT' ' MAIL DROP' ' PAY PERIODS' ' EVP' ' RVP' ' RBM' ' GRADE' ' DEPT ID' ' USER DEFINED 1' ' USER DEFINED 2' ' USER DEFINED 3' ' USER DEFINED 4' ' USER DEFINED 5' ' WORKLOCATIONCODE' ' WEB USER LOGIN' ' WEB PSWD' by $delim into $actives
string $actives   ' WORKCITY' ' WORKSTATE' ' WORKZIP' ' DEPARTMENT' ' MAIL DROP' ' PAY PERIODS' ' EVP' ' RVP' ' RBM' ' GRADE' ' DEPT ID' ' USER DEFINED 1' ' USER DEFINED 2' ' USER DEFINED 3' ' USER DEFINED 4' ' USER DEFINED 5' ' WORKLOCATIONCODE' ' WEB USER LOGIN' ' WEB PSWD' ' EMAIL ADDRESS' by $delim into $actives
!GEXAP_848_E106783 2011-08-09 Vahini Katta Ends
!Let $Header = $Header1 || $Header2
!STRING  'CAMPAIGN YEAR' ' PREFIX' ' FIRST NAME' ' MIDDLE NAME' ' LAST NAME' ' SUFFIX' ' EMPLID' ' SEX' ' JOBTITLE1' ' ADDRESSTYPE' ' ADDRESSLINE1' ' ADDRESSLINE2' ' CITY' ' STATEORPROV' ' ZIPPOSTALCODE' ' WORKLOCATION' ' WORKADDRESSLINE1' ' WORKADDRESSLINE2'  by $delim into $string_cols	
write 2 from $actives
End-Procedure Print-Header


Begin-Procedure Get-Job-Title

Begin-Select
JBCD.DESCR

	Let $Jobcode_Descr = &JBCD.DESCR
	
FROM PS_JOBCODE_TBL JBCD 
WHERE JBCD.SETID ='COMMN'
AND JBCD.JOBCODE = &C.JOBCODE
AND JBCD.EFFDT = (SELECT MAX(JBCD1.EFFDT) FROM PS_JOBCODE_TBL JBCD1 WHERE JBCD.SETID = JBCD1.SETID AND JBCD.JOBCODE = JBCD1.JOBCODE AND JBCD1.EFFDT<=SYSDATE)
End-Select 

End-Procedure Get-Job-Title

Begin-Procedure Get-Work-Location
Begin-Select
LCD.DESCR
LCD.ADDRESS1
LCD.ADDRESS2
LCD.CITY
LCD.STATE
LCD.POSTAL

	Let $Location_Descr = &LCD.DESCR
	Let $Work_Address1 = &LCD.ADDRESS1
	Let $Work_Address2 = &LCD.ADDRESS2
	Let $Work_City = &LCD.CITY
	Let $Work_State = &LCD.STATE
	Let $Work_Postal = &LCD.POSTAL
	
	
FROM PS_LOCATION_TBL LCD 
WHERE LCD.SETID ='COMMN'
AND LCD.LOCATION = $grp_cd10
AND LCD.EFFDT = (SELECT MAX(LCD1.EFFDT) FROM PS_LOCATION_TBL LCD1 WHERE LCD.SETID = LCD1.SETID AND LCD.LOCATION = LCD1.LOCATION AND LCD1.EFFDT<=SYSDATE)
End-Select 

End-Procedure Get-Work-Location

Begin-Procedure Print-Record-Xls

Let $Campaign_Year 	     =  '="' ||'2011' || '"'
Let $prefix_write 		     = '="' || $prefix || '"'
Let $first_name_write              = '="' || $First_Name_xls  || '"'
Let $middle_name_write             = '="' || $middle_name || '"'
Let $last_name_write               = '="' || $Last_Name_xls || '"'
Let $suffix_write                  = '="' || $Name_Suffix_Xls || '"'
Let $emplid_write                  = '="' || $emplid || '"'
Let $gender_write                  = '="' || $gender || '"'
Let $Jobcode_Descr_write           = '="' || $Jobcode_Descr || '"'
Let $address_type_write           = '="' || 'HOME' || '"'
Let $address1_write                = '="' || $address1  || '"'
Let $addr2_write                   = '="' || $addr2 || '"'
Let $city_write                    = '="' || $city|| '"'
Let $state_write                   = '="' || $state || '"'
Let $zip_write                     = '="' || $zip || '"'
Let $Location_Descr_write          = '="' || $Location_Descr || '"'
Let $Work_Address1_write           = '="' || $Work_Address1 || '"'
Let $Work_Address2_write           = '="' || $Work_Address2 || '"'
Let $Work_City_write               = '="' || $Work_City  || '"'
Let $Work_State_write              = '="' || $Work_State || '"'
Let $Work_Postal_write             = '="' || $Work_Postal || '"'
Let $Department_Description_write = '="' || $Department_Description || '"'
Let $Mail-Drop_write               = '="' || $Mail-Drop || '"'
Let $pays_write                    = '="' || $pays  || '"'
Let $EVP_write                     = '="' || $EVP   || '"'
Let $SVP_write                     = '="' || $SVP   || '"'
Let $DIR_write                     = '="' || $DIR || '"'
Let $GRADE_write                   = '="' || $GRADE || '"'
Let $grp_cd2_write                 = '="' || $grp_cd2 || '"'
Let $Gex_Region_Cd_write           = '="' || $Gex_Region_Cd || '"'
Let $Gex_Rmgr_lst_Name_write       = '="' || $Gex_Rmgr_lst_Name || '"'
Let $grp_cd2_write                = '="' || $grp_cd2 || '"'
Let $REGION_write                  = '="' || $REGION   || '"'
Let $BUSINESS_AREA_write           = '="' || $BUSINESS_AREA || '"'
Let $Jobcode_Write_write           = '="' ||  &D.LOCATION || '"'
Let $UserLogin_write 		     = '="' || 'GE'|| $emplid || '"'
Let $Password_write                = '="' || $bday || substr($ssn_no,6,4) || '"'
!GEXAP_848_E106783 2011-08-09 Vahini Katta Begins
Let $Email_Address                 = '="' ||  &EM.EMAIL_ADDR || '"'
!GEXAP_848_E106783 2011-08-09 Vahini Katta Ends

string $Campaign_Year $prefix_write $first_name_write $middle_name_write $last_name_write $suffix_write by $delim into $actives
string $actives  $emplid_write $gender_write $Jobcode_Descr_write $address_type_write $address1_write $addr2_write $city_write by $delim into $actives
string $actives  $state_write $zip_write $Location_Descr_write $Work_Address1_write $Work_Address2_write $Work_City_write $Work_State_write by $delim into $actives
string $actives  $Work_Postal_write $Department_Description_write $Mail-Drop_write $pays_write $EVP_write $SVP_write $DIR_write $GRADE_write by $delim into $actives
string $actives  $grp_cd2_write $Gex_Region_Cd_write $Gex_Rmgr_lst_Name_write $grp_cd2_write $REGION_write $BUSINESS_AREA_write $Jobcode_Write_write by $delim into $actives
!GEXAP_848_E106783 2011-08-09 Vahini Katta Begins
!string $actives  $UserLogin_write $Password_write by $delim into $actives
string $actives  $UserLogin_write $Password_write $Email_Address by $delim into $actives
!GEXAP_848_E106783 2011-08-09 Vahini Katta Ends

write 2 from $actives 


End-Procedure Print-Record-Xls

Begin-Procedure Get-Name
Let $Dir_svp_Svpvp_Name  = ''
Begin-Select
NM.NAME
	
	Let $Dir_svp_Svpvp_Name = Ltrim(Rtrim(&NM.NAME,' '),' ')

FROM PS_PERSONAL_DATA NM
WHERE NM.EMPLID = $Dir_svp_Svpvp_emplid
End-Select
End-Procedure Get-Name

!Vendaxg Added for ITG#80760 on 07/06/2010 - End
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
!*#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'payrnctl.sqc'  !Select-Parameters
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getgeid.sqc'   !Get 7 digit Emplid