!***********************************************************************
!  GEXPY019:  Mailing Labels 
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!
! GEXPY019 Giant Eagle - Mailing Labels
!
! Narrative:	Produce Mailing Labels based on run control
! #Debugx Used:	#debug9 paragraph trace
!
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!	ID#	INITIALS	DATE		DESCRIPTION OF THE CHANGE          *
!***********************************************************************
!GEXPY019     	SXK 		12/07/98 	INITIAL CREATION                   *
!               SXK             02/11/99    Added plan type, div cd
!					    and relational operators.
!					    Adjusted to fit the grids
!	        SXK             09/07/1999      Modified to print ssn
!					whenever user selects the flag
!					on the run control panel
!               SXK             12/01/1999  Modified to have emplid/name
!					sort, full/part time sort and 
!					full/part time criteria
!		SXK		11/16/99  Modified from zip to postal  *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#include 'setup01.sqc' !Init printer and page size(Portrait)

#define #col1 1
#define #col2 45  !36
#define #col3 90  !72

begin-report
#debug9 show 'Begin-Report'
  do Init-DateTime
  do Init-Number

  do Get-Current-DateTime
  show '$SysDateTime=' $SysDateTime 
  show '$AsOfToday=' $AsOfToday    
 
  do Init-Report

  do Process-Main
!  do Reset
  do Stdapi-Term
  show 'Successful End of Report'

end-report


begin-heading 1
#debug9 show 'Begin-Heading'

!#include 'stdhdg01.sqc' 

  
end-heading


begin-procedure Init-Report
#debug9 show 'Init-Report'

  move 'GEXPY019' to $ReportID
  move 'Mailing Labels' to $ReportTitle

  show '$ReportID=' $ReportID 
  show '$ReportTitle=' $ReportTitle
  show '$ReportDate=' $ReportDate
  show '$ReportTime=' $ReportTime

  do Stdapi-Init

  if $prcs_process_instance = ''
!must have been submitted via SQRW

	let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1' 
	let $GEXXX902_INCLUDE_DEPTID_CRITERIA		= '1=1'
	let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA 	= '1=1'
	let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA          = '1=1'
        let $GEXXX928_INCLUDE_BENEFIT_PROGRAM_CRITERIA  = '1=1'
        let $GEXXX913_INCLUDE_UNION_CD_CRITERIA         = '1=1'
	let $GEXXX916_INCLUDE_JOBCODE_CRITERIA          = '1=1'
        let $GEXXX907_INCLUDE_DIV_CD_CRITERIA           = '1=1'
        let $GEXXX912_INCLUDE_BENEFIT_PLAN_CRITERIA     = '1=1'
  else
	Do GEXXX922-Select-Parameters

      Let $GEXXX901_Company_Alias  = 'C.COMPANY' 
      Let $GEXXX901_Paygroup_Alias = 'C.PAYGROUP'    
      Do GEXXX901-Select-Company-Paygroup-Parameters    

 	Let $GEXXX902_Deptid_Alias = 'C.DEPTID'  
	Do GEXXX902-Select-Deptid-Parameters 

	Let $GEXXX903_Emp_Stat_Alias = 'C.EMPL_STATUS'  
	Do GEXXX903-Select-Emp-Stat-Parameters          

	Let $GEXXX909_Acct_CD_Alias = 'C.ACCT_CD'
	Do GEXXX909-Select-Acct-CD-Parameters

	Let $GEXXX928_Benefit_program_Alias = 'D.BENEFIT_PROGRAM'
	Do GEXXX928-Select-Benefit-Program-Parameters

	Let $GEXXX913_Union_cd_Alias = 'JL.UNION_CD'
	Do GEXXX913-Select-Union-Cd-Parameters

	Let $GEXXX916_Jobcode_Alias = 'C.JOBCODE'
	Do GEXXX916-Select-Jobcode-Parameters

	Let $GEXXX907_Div_CD_Alias = 'GEX_DEPT.GEX_COMPANY_DIV_CD'
	Do GEXXX907-Select-Div-CD-Parameters

        Let $GEXXX912_Plan_Type_Alias    = 'PL.PLAN_TYPE'
        Let $GEXXX912_Benefit_Plan_Alias = '1'
        Do GEXXX912-Select-Benefit-Plan-Parameters
        if #GEX_RC_BEN_PLAN_ROWS = 0
           let $where_1 = ' AND 1=1'
        else
           let $where_1 =  'AND C.EMPLID IN (SELECT pl.EMPLID FROM PS_BAS_PARTIC_PLAN PL '||
                   'WHERE '||$GEXXX912_Include_Benefit_Plan_Criteria||
                     ' AND pl.EMPLID '||'='||' C.EMPLID'||
                     ' AND pl.BENEFIT_PROGRAM '||'='||' D.BENEFIT_PROGRAM'||
                     ' AND pl.CUR_ELECT_IND = '||'''Y'''||
                     ' AND pl.BENEFIT_RCD_NBR = '||'(select max(mb.benefit_rcd_nbr)'||
                                           ' from ps_bas_partic_plan mb'||
                                          ' where mb.emplid'||' = pl.emplid'||
                                            ' and mb.benefit_program = '||
                                                   ' pl.benefit_program'||
                                            ' and mb.plan_type ='||' pl.plan_type'||
                                            ' and mb.cur_elect_ind = '||'''Y'''||
                                            ' and mb.event_id = '||'pl.event_id)'||
                    ' AND pl.event_id ='||' (select max(me.event_id)'||
                                   ' from ps_bas_partic_plan me'||
                                  ' where me.emplid ='||' pl.emplid'||
                                    ' and me.benefit_program = '||
                                        ' pl.benefit_program'||
                                    ' and me.cur_elect_ind = '||'''Y'''||
                                    ' and me.plan_type = '||'pl.plan_type'||
                                    ' and me.benefit_rcd_nbr = '||'pl.benefit_rcd_nbr))'
       end-if
     end-if
display '$where_1: ' $where_1
end-procedure

begin-procedure Get-Values
#debug9 show 'Get-Values'
    !do nothing
end-procedure


begin-procedure Process-Main
#debug9 show 'Process-Main'

  let $where = ' '
  let $x100_Get_Employees_Data_Flag = 'N'
  if RTRIM($GEX_RC_PAY.BIRTHDATE,' ') <> ''
     let $where = 'AND B.BIRTHDATE '||$GEX_RC_PAY.GEX_OPERATOR1||''''||$GEX_RC_PAY.BIRTHDATE||''''
  end-if
  if RTRIM($GEX_RC_PAY.HIRE_DT,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'E.HIRE_DT '||$GEX_RC_PAY.GEX_OPERATOR2||''''||$GEX_RC_PAY.HIRE_DT||''''
     else
        let $where = 'AND E.HIRE_DT '||$GEX_RC_PAY.GEX_OPERATOR2||''''||$GEX_RC_PAY.HIRE_DT||''''
     end-if
  end-if
  if RTRIM($GEX_RC_PAY.POSTAL,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'B.POSTAL = '||''''||$GEX_RC_PAY.POSTAL||''''
     else
        let $where = 'AND B.Postal = '||''''||$GEX_RC_PAY.POSTAL||''''         
     end-if
  end-if
  if RTRIM($GEX_RC_PAY.LOCATION,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'C.LOCATION = '||''''||$GEX_RC_PAY.LOCATION||''''
     else
        let $where = 'AND C.LOCATION = '||''''||$GEX_RC_PAY.LOCATION||''''
     end-if
  end-if
  if RTRIM($GEX_RC_PAY.EMPL_TYPE,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'C.EMPL_TYPE = '||''''||$GEX_RC_PAY.EMPL_TYPE||''''
     else
        let $where = 'AND C.EMPL_TYPE = '||''''||$GEX_RC_PAY.EMPL_TYPE||''''
     end-if
  end-if
!SXK 12/01/1999 Begin
  if RTRIM($GEX_RC_PAY.FULL_PART_TIME,' ') <> ''
     if RTRIM($where,' ') <> ''
        let $where = $where||' AND '||'C.FULL_PART_TIME = '||''''||$GEX_RC_PAY.FULL_PART_TIME||''''
     else
        let $where = 'AND C.FULL_PART_TIME = '||''''||$GEX_RC_PAY.FULL_PART_TIME||''''
     end-if
  end-if
!SXK 12/01/1999 End
display 'Where:'
display $where


  let $order_by_complete = 'N'
  let #i = 1
  let $match_found = 'N'
  let $order_by = ' '

  while $order_by_complete = 'N'
     display #i noline
     display ' time(s)'

     if #GEX_RC_PAY.COMPANY_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.COMPANY, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.PAYGROUP_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.PAYGROUP, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.DEPTID_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.DEPTID, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.ACCT_CD_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.ACCT_CD, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.JOBCODE_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.JOBCODE, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.ZIP_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' B.POSTAL, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.BENEFIT_PGM_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' D.BENEFIT_PROGRAM, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.LOCATION_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.LOCATION, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.BIRTHDATE_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' B.BIRTHDATE, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.HIRE_DT_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' E.HIRE_DT, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.UNION_CD_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' JL.UNION_CD, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.EMPL_TYPE_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.EMPL_TYPE, '
        goto endwhile
     end-if
     if #GEX_RC_PAY.EMPL_STATUS_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.EMPL_STATUS, '
        goto endwhile
     end-if
!SXK 12/01/1999 Begin
     if #GEX_RC_PAY.FULL_PART_SORT = #i
        let $match_found = 'Y'
        let $order_by = $order_by||' C.FULL_PART_TIME, '
        goto endwhile
     end-if
!SXK 12/01/1999 End
endwhile:
     if $match_found = 'Y'
        add 1 to #i
        let $match_found = 'N'
     else
        let $order_by_complete = 'Y'
!SXK 12/01/1999 Begin
        if $GEX_RC_PAY.YES_NO_FLAG = 'N'
           let $order_by = $order_by ||'B.NAME'
        else
           let $order_by = $order_by ||'B.EMPLID'
        end-if
!SXK 12/01/1999 End
!        let #len = length($order_by)
!        if #len > 2
!          let #last_pos = #len - 2
!          let $order_by = substr($order_by,1,#last_pos)
!        end-if
     end-if
   end-while

   if RTRIM($order_by,' ') = ''
      let $order_by = 'ORDER BY C.COMPANY,C.PAYGROUP,C.DEPTID,B.NAME'
   else
      let $order_by = 'ORDER BY '||$order_by
   end-if

display 'Order by:'
display $order_by        

let #rowcount = 0
let #inputtran = 0
let #initial_line = 2

!columns 1 45 90        
show 'a: ' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
show 'b: ' $GEXXX902_INCLUDE_DEPTID_CRITERIA
show 'c: ' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
show 'd: ' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA
show 'e: ' $GEXXX928_INCLUDE_BENEFIT_PROGRAM_CRITERIA
show 'f: ' $GEXXX913_INCLUDE_UNION_CD_CRITERIA
show 'g: ' $GEXXX916_INCLUDE_JOBCODE_CRITERIA
show 'h: ' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
show '$where: ' $where
show '$where_1: ' $where_1
show '$order_by: ' $order_by
show $asoftoday

begin-SELECT 
 
C.COMPANY 	
C.PAYGROUP
C.DEPTID  
C.ACCT_CD
C.EMPLID
C.LOCATION
C.JOBCODE
JL.UNION_CD
B.NAME
B.ADDRESS1
B.ADDRESS2
B.ADDRESS3
B.CITY
B.STATE
B.POSTAL

  if $GEX_RC_PAY.GEX_INTERNAL = 'Y'
     let $first_line = &C.COMPANY||' '||&C.PAYGROUP||' '||&C.DEPTID
     !SXK 09/07/1999 Begin
     if $GEX_RC_PAY.GEX_SSN_OR_JOB = 'Y'
       let $first_line = $first_line||' '||&C.EMPLID
     else
       let $first_line = $first_line||' '||&C.JOBCODE||' '||&C.ACCT_CD
     end-if
     !SXK 09/07/1999 End

     print $first_line (#initial_line,1)

     print &B.NAME (+1,1)

     if $GEX_RC_PAY.GEX_LOCATION = 'Y'
        print &C.LOCATION (+1,1)
     else

       if RTRIM(&B.ADDRESS1,' ') <> ''
          print &B.ADDRESS1 (+1,1)
       end-if
       if RTRIM(&B.ADDRESS2,' ') <> ''
          print &B.ADDRESS2 (+1,1)
       end-if
       if RTRIM(&B.ADDRESS3,' ') <> ''
          print &B.ADDRESS3 (+1,1)
       end-if
       let #len = length(rtrim(&B.CITY,' '))
       let $city = substr(&B.CITY,1,#len)
       let $string = $city||', '||&B.STATE||'  '||&B.POSTAL
   
       print $string (+1,1)

     end-if

   else
     !SXK 09/07/1999 Begin
     if $GEX_RC_PAY.GEX_SSN_OR_JOB = 'Y'
        print &C.EMPLID (#initial_line,1)

        print &B.NAME (+1,1)
        if RTRIM(&B.ADDRESS1,' ') <> ''
           print &B.ADDRESS1 (+1,1)
        end-if

        if RTRIM(&B.ADDRESS2,' ') <> ''
           print &B.ADDRESS2 (+1,1)
        end-if
        if RTRIM(&B.ADDRESS3,' ') <> ''
           print &B.ADDRESS3 (+1,1)
        end-if
        let #len = length(RTRIM(&B.CITY,' '))
        let $city = substr(&B.CITY,1,#len)
        let $string = $city||', '||&B.STATE||'  '||&B.POSTAL
 
        print $string (+1,1)
    
     else

        print &B.NAME (#initial_line,1)

        if RTRIM(&B.ADDRESS1,' ') <> ''
           print &B.ADDRESS1 (+1,1)
        end-if

        if RTRIM(&B.ADDRESS2,' ') <> ''
           print &B.ADDRESS2 (+1,1)
        end-if
        if RTRIM(&B.ADDRESS3,' ') <> ''
           print &B.ADDRESS3 (+1,1)
        end-if
        let #len = length(RTRIM(&B.CITY,' '))
        let $city = substr(&B.CITY,1,#len)
        let $string = $city||', '||&B.STATE||'  '||&B.POSTAL
 
        print $string (+1,1)

      end-if     
    !SXK 09/07/1999 End
   end-if

   add 1 to #inputtran
   add 1 to #rowcount
   next-column
  
   if #rowcount = 3
      let #rowcount = 0
      add 1 to #totalrows
      if #totalrows > 9
         new-page
         move 0 to #totalrows
         move 0 to #rowcount
         move 2 to #initial_line
         columns 1 45 90
      else
         if #totalrows = 9 and $GEX_RC_PAY.GEX_INTERNAL = 'Y'
            let #initial_line = #initial_line - 1
         end-if          
!         evaluate #totalrows
!             when = 0
!             when = 2
!             when = 4
!             when = 8
!               add 7 to #initial_line
!             when-other
                 add 8 to #initial_line
!         end-evaluate
      end-if
   end-if

   let $x100_Get_Employees_Data_Flag = 'Y'

FROM 	PS_JOB C, PS_BEN_PROG_PARTIC D, PS_EMPLOYMENT E, PS_JOB_LABOR JL, 
        PS_PERSONAL_DATA B, PS_GEX_DEPT_TBL GEX_DEPT 

WHERE [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
 AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
 AND [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
 AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
 AND [$GEXXX928_INCLUDE_BENEFIT_PROGRAM_CRITERIA]
 AND [$GEXXX913_INCLUDE_UNION_CD_CRITERIA]
 AND [$GEXXX916_INCLUDE_JOBCODE_CRITERIA]
 [$where]
 AND C.DEPTID = GEX_DEPT.DEPTID 
 AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
 AND GEX_DEPT.EFFDT = (SELECT MAX(GEX_DEPT1.EFFDT) FROM PS_GEX_DEPT_TBL GEX_DEPT1
		WHERE GEX_DEPT1.DEPTID = GEX_DEPT.DEPTID AND
				GEX_DEPT1.EFFDT <= $AsOfToday) 
 AND GEX_DEPT.SEQUENCE_NUMBER = (SELECT MAX(GEX_DEPT2.SEQUENCE_NUMBER) FROM PS_GEX_DEPT_TBL GEX_DEPT2
			WHERE GEX_DEPT2.DEPTID = GEX_DEPT.DEPTID AND
				GEX_DEPT2.EFFDT = GEX_DEPT.EFFDT)
 AND C.EMPLID = B.EMPLID
 AND C.EMPLID = E.EMPLID
 AND C.EMPL_RCD = E.EMPL_RCD
 AND C.EMPLID = JL.EMPLID
 AND C.EMPL_RCD = JL.EMPL_RCD
 AND C.EMPLID = D.EMPLID
 AND C.EMPL_RCD = D.EMPL_RCD
 AND D.EFFDT = (SELECT MAX(PT.EFFDT)
                  FROM PS_BEN_PROG_PARTIC PT
                 WHERE PT.EMPLID = D.EMPLID
                   AND PT.EMPL_RCD = D.EMPL_RCD
                   AND PT.EFFDT <= $AsOfToday)
 AND C.EFFDT =
      (SELECT MAX(H.EFFDT)
      FROM PS_JOB H
      WHERE H.EMPLID = C.EMPLID
       AND H.EMPL_RCD = C.EMPL_RCD
       AND H.EFFDT <= $AsOfToday)
 AND C.EFFSEQ =
     (SELECT MAX(I.EFFSEQ)
      FROM PS_JOB I
      WHERE I.EMPLID = C.EMPLID
        AND I.EMPL_RCD = C.EMPL_RCD
        AND I.EFFDT = C.EFFDT)
 AND JL.EFFDT =
      (SELECT MAX(JL1.EFFDT)
      FROM PS_JOB_LABOR JL1
      WHERE JL.EMPLID = JL1.EMPLID
       AND JL.EMPL_RCD = JL1.EMPL_RCD
       AND JL1.EFFDT <= $AsOfToday)
 AND JL.EFFSEQ =
     (SELECT MAX(JL2.EFFSEQ)
      FROM PS_JOB_LABOR JL2 
      WHERE JL.EMPLID = JL2.EMPLID
        AND JL.EMPL_RCD = JL2.EMPL_RCD
        AND JL.EFFDT = JL2.EFFDT)

[$where_1]
! AND C.EMPLID IN (SELECT pl.EMPLID FROM PS_BAS_PARTIC_PLAN PL
!                   WHERE [$GEXXX912_Include_Benefit_Plan_Criteria]
!                     AND pl.EMPLID = C.EMPLID
!                     AND pl.BENEFIT_PROGRAM = D.BENEFIT_PROGRAM
!                     AND pl.CUR_ELECT_IND = 'Y'
!                     AND pl.BENEFIT_RCD_NBR = (select max(mb.benefit_rcd_nbr)
!                                           from ps_bas_partic_plan mb
!                                          where mb.emplid = pl.emplid
!                                            and mb.benefit_program = 
!                                                   pl.benefit_program
!                                            and mb.plan_type = pl.plan_type
!                                            and mb.cur_elect_ind = 'Y'
!                                            and mb.event_id = pl.event_id)
!                    AND pl.event_id = (select max(me.event_id)
!                                   from ps_bas_partic_plan me
!                                  where me.emplid = pl.emplid
!                                    and me.benefit_program = 
!                                        pl.benefit_program
!                                    and me.cur_elect_ind = 'Y'
!                                    and me.plan_type = pl.plan_type
!                                    and me.benefit_rcd_nbr = pl.benefit_rcd_nbr))
[$order_by]
end-SELECT

 if $x100_Get_Employees_Data_Flag = 'N'
	display 'NO DATA SELECTED FOR THIS REPORT RUN'	
 else
 
  display 'Total labels printed: '	noline
  display #inputtran 

 end-if
	
end-procedure



#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'gexregtp.sqc'	 !Translates REG_TEMP code into full/part time code
 
!#include 'GEXXX900.sqc'  !Get company multiple row table
!#include 'GEXXX901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table

#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#Include 'gexxx912.sqc'
#include 'gexxx913.sqc'
#include 'gexxx916.sqc'
#include 'gexxx928.sqc'  !Get "Multiple" Benefit Program Run Controls 
#include 'gexxx922.sqc'  !Get pay single row run control

