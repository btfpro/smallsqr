!***********************************************************************
! GEXPY082:  This program produces a detail report of employees        *    
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                                                                      *
!  $Date:: 03/03/99 09:00A      $                                      *
!  $Revision:: 01               $                                      *
!  $Workfile:: GEXPY082.SQR     $                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  GEXPY081  SXK    03/03/1999        INITIAL CREATION                 *
!                                                                      *
!            SXK    10/28/1999        Modified to have union from      *
!				      job labor                        *
!                                                                      *
!            CWB    06/20/2000        Added <> 'KAP' to select.        *
!                                                                      *
!            AXL    01/02/2001        Add criteria to get-pay-end-dt   *
!                                     procedure to ignore off-cycle    *
!                                     calendar entries                 *
!                                                                      *
!            GBD    07/15/2002        Added Fieldvalue to effective    *
!                                     dated selection of the Load-     *
!                                     Lookup procedure.                *
!            CXA    08/19/2004        Added logic to remove blank line *
!                                     after page break by manually     *
!                                     counting lines.                  *
!GEX-MXT       10/03/2007	      Made the join between EMPL_RCD(JOB)    * 
!				      and ORG_INSTANCE_ERN (PER_ORG_INST)                      *
!VENDTKK       02/11/2009          Added INCLUDE GETPOSNM.SQC to pull  *
!                  	           JOBTITLE from POSITION_DATA.DESCR       *
!				   field instead of JOBCODE_TBL.DESCR                          *
!			           	                                                     *		
! GEX_SEC_REENG Vahini Katta 09/18/2016                                *
! Changes related to SSN Conversion                                    *
!***********************************************************************
#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 

!*********************************************************************
begin-report

  do Init-DateTime
  do Init-Number
  do stdapi-init

  move 'GEXPY082' to $ReportID
  move 'Employees Listing' to $ReportTitle
  display $ReportTitle

  do Get-Current-DateTime

  do report
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term
  do reset
end-report

!*********************************************************************
!If this Program is being executed through process scheduler, 
!the run control parameters and calls the main processing procedure.
!Otherwise, interrogates the user for the run control parameters and 
!validates them. If the run control parameters are invalid, stops the
!execution.
!*********************************************************************
begin-procedure Report 

  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  move 'N' to $Errorfound

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  let #rnctl_yyyy = substr($X000_Where_Select_AsOfDate,8,4)       
  let #rnctl_yy  = substr($X000_Where_Select_AsOfDate,10,2)

  Do Format-DateTime($X000_Where_Select_AsOfDate, $X000_Report_Heading_AsOfDate, {DEFDATE}, '', '')
  Let $X000_Order_By = 'Company, Paygroup, Department, Name'

  Show '$GEXXX907_Include_Div_Cd_Display_Criteria           = ' $GEXXX907_Include_Div_Cd_Display_Criteria
  Show '$GEXXX900_Include_Company_Display_Criteria          = ' $GEXXX900_Include_Company_Display_Criteria
  Show '$GEXXX901_Include_Company_Paygroup_Display_Criteria = ' $GEXXX901_Include_Company_Paygroup_Display_Criteria
  Show '$GEXXX902_Include_Deptid_Display_Criteria           = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Display_Criteria         = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  Show '$GEXXX909_Include_Acct_Cd_Display_Criteria          = ' $GEXXX909_Include_Acct_Cd_Display_Criteria
  Show '$X000_Where_Select_AsOfDate = ' $X000_Where_Select_AsOfDate

  Do P130-Print-Cover-Page
  Do P140-Get-Xlat-Lookup
  do get-pay-end-dt

 do process-employee-data

Report-Exit:

 date-time () hh:mi:ss &timeProcess
  display #InputTran 99999 noline
  display ' Transactions Processed: ' noline
  display &timeProcess

end-procedure

begin-heading 7 
 #Include 'stdhdg02.sqc'

  Let $X000_temp_out = 'Report as of ' || $X000_Report_Heading_AsOfDate
  Print $X000_temp_out         (3,)  Center

  if $PayGroup <> $priorPayGroup
    do Get-PayGroup-Data
    move $PayGroup to $priorPayGroup
  end-if
  print 'Pay Group'        (4,1)
  print $PayGroup          (0,13)
  print $PayGroupName      (0,17)

  position (+2)

  print 'Dept ID' (,1) bold
  print 'Employee ID' (,10) bold
  print 'Name' (,24) bold
  print 'Acct Cd' (,57) bold
  print 'Acct Desc' (,69) bold
  print 'Job Code' (,83) bold
  print 'Job Title' (,94) bold
  print 'Union CD'  (,109) bold
  print 'Hourly Rt' (,120) bold
  print 'Hire Date' (,132) bold
  print 'Empl Status' (,145) bold
  print 'Status Dt  ' (,160) bold

  print '-' (+1,1,176) fill
  let #line-count = 7  !CXA   08/19/2004
end-heading

Begin-Procedure P110-SQRW-Run-Controls
#debug9 Show 'P110-SQRW-Run-Controls'
  Let $GEXXX907_Include_Div_Cd_Criteria           = '1=1'           
  Let $GEXXX900_Include_Company_Criteria          = '1=1'
  Let $GEXXX901_Include_Company_Paygroup_Criteria = '1=1' 
  Let $GEXXX902_Include_Deptid_Criteria	          = '1=1'
  Let $GEXXX903_Include_Emp_Stat_Criteria         = '1=1'
  Let $GEXXX909_Include_Acct_Cd_Criteria          = '1=1'

  Let $GEXXX907_Include_Div_Cd_Display_Criteria           = 'ALL'           
  Let $GEXXX900_Include_Company_Display_Criteria          = 'ALL'
  Let $GEXXX901_Include_Company_Paygroup_Display_Criteria = 'ALL'
  Let $GEXXX902_Include_Deptid_Display_Criteria	          = 'ALL'
  Let $GEXXX903_Include_Emp_Stat_Display_Criteria         = 'ALL'
  Let $GEXXX909_Include_Acct_Cd_Display_Criteria          = 'ALL'

  Let $X000_Where_Select_AsOfDate                 = $AsOfToday
End-Procedure


Begin-Procedure P120-Process-Scheduler-Run-Controls
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  Do GEXXX922-Select-Parameters

  Let $X000_Where_Select_AsOfDate = $GEX_RC_PAY.AsOfDate
  If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
    Let $X000_Where_Select_AsOfDate = $AsOfToday
  End-If

  Let $GEXXX900_Company_Alias  = 'b.company'
  Let $GEXXX901_Company_Alias  = 'b.company'
  Let $GEXXX901_Paygroup_Alias = 'b.paygroup'
  Let $GEXXX902_Deptid_Alias   = 'b.deptid'
  Let $GEXXX903_Emp_Stat_Alias = 'b.empl_status'
  Let $GEXXX907_Div_CD_Alias   = 'gdt.gex_company_div_cd'                    
  Let $GEXXX909_Acct_CD_Alias  = 'b.acct_cd'

  Do GEXXX900-Select-Company-Parameters
  Do GEXXX901-Select-Company-Paygroup-Parameters
  Do GEXXX902-Select-Deptid-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters
  Do GEXXX907-Select-Div-CD-Parameters 
  Do GEXXX909-Select-Acct-CD-Parameters
End-Procedure


begin-procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX907_Include_Div_Cd_Display_Criteria           ='   (+2,5)
  Print $GEXXX907_Include_Div_Cd_Display_Criteria                 (0,+2)
  Print '$GEXXX900_Include_Company_Display_Criteria          ='   (+1,5)
  Print $GEXXX900_Include_Company_Display_Criteria                (0,+2)
  Print '$GEXXX901_Include_Company_paygroup_Display_Criteria ='   (+1,5)
  Print $GEXXX901_Include_Company_paygroup_Display_Criteria       (0,+2)
  Print '$GEXXX902_Include_Deptid_Display_Criteria           ='   (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria	            (0,+2)
  Print '$GEXXX903_Include_Emp_Stat_Display_Criteria         ='   (+1,5)
  Print $GEXXX903_Include_Emp_Stat_Display_Criteria               (0,+2)
  Print '$GEXXX909_Include_Acct_Cd_Display_Criteria          ='   (+1,5)
  Print $GEXXX909_Include_Acct_Cd_Display_Criteria                (0,+2)

  Print 'As Of Date :'                      (+2,5)
  Print $X000_Report_Heading_AsOfDate       (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'   (+5,2)
  Print $X000_Order_By                      (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
  Let #PAGE-COUNT = 1
End-Procedure

begin-procedure P140-Get-Xlat-Lookup
#debug9 Show 'P140-Get-Xlat-Lookup'

  Let $Where='     X.FIELDNAME   = ''EMPL_STATUS'''        ||
             ' AND X.EFF_STATUS  = ''A'''                  ||
             !PY254  SXD   08/30/2007  Begin
             !' AND X.LANGUAGE_CD = ''ENG'''                ||
             !PY254  SXD   08/30/2007  End
             ' AND X.EFFDT       = '                       ||
                 '(SELECT MAX(EFFDT)'                      ||
                 !PY254  SXD   08/30/2007  Begin
                 !' FROM   XLATTABLE X1'                   ||
                 ' FROM   PSXLATITEM X1'                   ||
                 !PY254  SXD   08/30/2007  End
                 ' WHERE  X1.FIELDNAME   = X.FIELDNAME'    ||
!GBD 07/15/2002 Begin
!                 ' AND    X1.LANGUAGE_CD = ''ENG'''        ||
		!PY254  SXD   08/30/2007  Begin
                ! ' AND    X1.LANGUAGE_CD = X.LANGUAGE_CD'  ||
                !PY254  SXD   08/30/2007  Begin
                 ' AND    X1.FIELDVALUE = X.FIELDVALUE'    ||
!GBD 07/15/2002 End
                 ' AND    X1.EFFDT      <= ''' || $x000_where_select_asofdate || '''' ||
                 ' AND    X1.EFF_STATUS  = ''A'')'

  Load-Lookup
    Name=XlatLookup
    Rows=10
   ! Table='XLATTABLE X'
    Table='PSXLATITEM X'
    Key='X.FIELDVALUE'
    Return_Value='X.XLATSHORTNAME'
    Where=$Where
    Quiet
End-Procedure

!*********************************************************************
!Gets the pay end date of the previous pay cycle.
!*********************************************************************

Begin-Procedure get-pay-end-dt

move 'N' to $found

begin-select on-error=sql-error-found('Get-Pay-End-Dt')
PAY.PAY_BEGIN_DT
PAY.PAY_END_DT

  move &PAY.PAY_END_DT to $pay_end_Dt
  move &PAY.PAY_BEGIN_DT to $pay_begin_dt
  display 'Pay End Date:' noline
  display $pay_end_Dt
  move 'Y' to $found
  exit-select

FROM PS_PAY_CALENDAR PAY

WHERE PAY.PAY_CONFIRM_RUN = 'Y'
  AND PAY.PAY_END_DT = (SELECT MAX(PAY_END_DT)
		      FROM PS_PAY_CALENDAR
		     WHERE PAY_END_DT <= $X000_Where_Select_AsOfDate
		       AND PAY_CONFIRM_RUN = 'Y'
  ! 01/02/2001 - add criteria to ignore off-cycle calendar entries
                       AND PAY_OFF_CYCLE_CAL = 'N')
  AND PAY.PAY_OFF_CYCLE_CAL = 'N'
  ! 01/02/2001 - end

end-select

if $found = 'N'
   do error-found
   print 'No Previously confirmed Pay Cycle as of:' (,34)
   print $X000_Where_Select_AsOfDate ()
   stop
end-if

end-procedure

!*********************************************************************
!Retrieves the employees with latest paychecks and with garnishment 
!deductions.
!*********************************************************************

begin-procedure process-employee-data
  
move 'N' to $errorfound
move 'N' to $empl_found
move 'N' to $new_page
let #inputtran = 0
! position (+1)		!CXA   08/19/2004
begin-select ON-ERROR=SQL-Error-Found('Process-employee-data')
B.COMPANY  () on-break level=1 print=never
B.PAYGROUP () on-break level=2 print=never
B.DEPTID   (,3) on-break level=3 print=change/top-page after=dept-change
JL.UNION_CD  !SXK 10/28/1999 changed from c.union_cd
A.NAME
!PY254  SXD   08/29/2007  Begin
!A.ORIG_HIRE_DT 
INST.ORIG_HIRE_DT
!PY254  SXD   08/29/2007  End
B.EMPLID
B.EMPL_RCD
B.ACCT_CD
B.JOBCODE
B.REG_TEMP 
B.HOURLY_RT
B.FULL_PART_TIME
B.EMPL_STATUS
B.EFFDT
B.ANNUAL_RT
B.Position_nbr 				!VENDTKK    ITG#56786   11-Feb-2009
  let $Company  = &B.COMPANY
  let $Paygroup = &B.PAYGROUP

!  display &B.EMPLID
  add 1 to #inputtran

  move 'Y' to $empl_found
  do get-status-date
  do print-fields

FROM  PS_GEX_DEPT_TBL GDT,
      PS_PERSONAL_DATA A,
!SXK 10/28/1999 Begin
!      PS_EMPLOYMENT C,
      PS_JOB_LABOR JL,
!sxk 10/28/1999 eND
      PS_JOB B,
!PY254  SXD   08/29/2007  Begin      
      PS_PER_ORG_INST   INST
!PY254  SXD   08/29/2007  End      
WHERE A.EMPLID = B.EMPLID
!PY254  SXD   08/29/2007  Begin
AND   A.EMPLID = INST.EMPLID
AND   B.EMPL_RCD  = INST.ORG_INSTANCE_ERN	!SXK 10/03/2007 Added MXT
!PY254  SXD   08/29/2007  End
!SXK 10/28/1999 Begin
!  AND B.EMPLID = C.EMPLID
!  AND B.EMPL_RCD = C.EMPL_RCD
!SXK 10/28/1999 begin
AND    JL.EMPLID    = B.EMPLID
AND    JL.EMPL_RCD = B.EMPL_RCD


AND    JL.EFFDT                =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB_LABOR
       WHERE  EMPLID          = JL.EMPLID
       AND    EMPL_RCD       = JL.EMPL_RCD
       AND    EFFDT          <= $X000_Where_Select_AsOfDate)

AND    Jl.EFFSEQ               =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB_LABOR
       WHERE  EMPLID          = JL.EMPLID
       AND    EMPL_RCD       = JL.EMPL_RCD
       AND    EFFDT           = JL.EFFDT)
!SXK 10/28/1999 end
  AND B.EFFDT        = (SELECT MAX(EFFDT)
                         FROM PS_JOB
                          WHERE EMPLID = B.EMPLID 
                            AND EMPL_RCD = B.EMPL_RCD
                            AND EFFDT <= $X000_Where_Select_AsOfDate)
  AND B.EFFSEQ = (SELECT MAX(EFFSEQ)
                    FROM PS_JOB
                    WHERE EMPLID = B.EMPLID
                      AND EMPL_RCD = B.EMPL_RCD
                      AND EFFDT     = B.EFFDT)
                   
And    b.deptid            = gdt.deptid
And    gdt.effdt           =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid       = gdt.deptid
       And    effdt       <= $X000_Where_Select_AsOfDate)
And    gdt.sequence_number =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid       = gdt.deptid
       And    effdt        = gdt.effdt)
And   [$GEXXX900_Include_Company_Criteria]
And   [$GEXXX901_Include_Company_Paygroup_Criteria] 
And   [$GEXXX902_Include_Deptid_Criteria]
And   [$GEXXX907_Include_Div_Cd_Criteria]
And   [$GEXXX903_Include_Emp_Stat_Criteria]
And   [$GEXXX909_Include_Acct_Cd_Criteria]

ORDER BY B.COMPANY, B.PAYGROUP, B.DEPTID, A.NAME
end-select

if $empl_found = 'N'
   do error-found
   print 'No Data Selected' (,34)
end-if  
end-procedure

Begin-Procedure get-status-date
let $status_dt = ' '
begin-select
fp1.EFFDT

  let $status_Dt = &fp1.effdt

from ps_job fp1
where fp1.emplid = &b.emplid
and fp1.empl_Rcd = &b.empl_rcd
and fp1.effdt = (select min(effdt)
                  from ps_job
                 where emplid = &b.emplid
                   and empl_rcd = &b.empl_rcd
                   and empl_status = &b.empl_status
                   and effdt <= $x000_where_select_asofdate
                   and effdt >= (select nvl(max(fp3.effdt),&INST.ORIG_HIRE_DT )       !&a.orig_hire_Dt)  ! SXD
                                  from ps_job fp3
                                   where fp3.emplid = &b.emplid
                                   and fp3.empl_rcd = &b.empl_rcd
                                   and fp3.empl_status <> &b.empl_status
                                   and effdt <= $x000_where_select_asofdate))
and fp1.effseq = (select max(effseq)
                   from ps_job
                  where emplid = fp1.emplid
                    and empl_rcd = fp1.empl_Rcd
                    and effdt = fp1.effdt)
end-select
end-procedure
!*********************************************************************
!Retrieves the employees with latest paychecks and with garnishment 
!deductions.
!*********************************************************************
Begin-Procedure Dept-Change

!CXA   08/19/2004   Begin
!  new-page
  if #line-count > 7
    new-page
  end-if
!CXA   08/19/2004   End

end-procedure

!*********************************************************************
!Retrieves the employees with latest paychecks and with garnishment 
!deductions.
!*********************************************************************
   
begin-procedure print-fields

  Lookup XlatLookup &b.empl_status $Empl_Status_XlatValue
  let $jobcode = &b.jobcode
  do get-job-title
  
  !VENDTKK Begin   ITG#56786   11-Feb-2009
  
         Let $Position_Nbr = &B.Position_nbr
 	 Do Get-Position-Title			 !getposnm.sqc
  	 IF $PosNameAbbrv = '' 
  		Let $JobTitleabbrv = $JobTitleabbrv
	 Else
 		Let $JobTitleabbrv = $PosNameAbbrv
	 End-if
!VENDTKK End   ITG#56786   11-Feb-2009	   
  
  let $acctcd = &b.acct_cd
  do get-acct-cd-descr

  print &B.EMPLID (,10)
  print &A.NAME (,24) 
  print &B.ACCT_CD (,60)
  print $acctnameabbrv (,69)
  print &B.JOBCODE (,84) 
  print $jobtitleabbrv (,94)
  print &jl.UNION_CD (,112) !SXK 10/28/1999 Changed from c.union_cd
  if &b.paygroup <> 'OFF' and &b.paygroup <> 'OF2' and &b.paygroup <> 'OF3'
    and &b.paygroup <> 'EXE'
    and &b.paygroup <> 'KAP'  ! CWB 06/20/2000 
    print &B.HOURLY_RT (,120) EDIT 9,999.99
!    print &B.ANNUAL_RT (,132) EDIT 999,999.99
  end-if
 
  !print &a.orig_hire_dt (,132)
  print &INST.ORIG_HIRE_DT (,132)

  print $Empl_Status_XlatValue (,145) 
  print $status_dt (,160) 
!CXA   08/19/2004   Begin
  if #line-count = 49
    new-page
  else
    position (+1)
    let #line-count = #line-count + 1
  end-if
!CXA   08/19/2004   End

end-procedure 
         
!********************************************************************
!This procedure displays in the error report if there are any sql erros
!happened in the program
!********************************************************************

begin-procedure SQL-Error-Found($Proc_Name) 
  do error-found
  print 'SQL Error in ' (,34)
  print $Proc_Name ()  
  print $_sql-error () 
  print 'sql-status:' ()
  print #_sql-status () edit 99999 

end-procedure

!*********************************************************************
!This procedure displays the error message for the records that are in
!progress
!*********************************************************************

begin-procedure Error-Found
  move 'Y' to $ErrorFound
  do Format-Number(#InputTran, $out, '99999')
  print $out (+1,1)
  ! GEX_SEC_REENG Vahini Katta 09/18/2016 Begins
  !let $EmplId_1st3 = substr($EmplId,1,3)
  !let $EmplId_mid2 = substr($EmplId,4,2)
  !let $EmplId_last4 = substr($EmplId,6,4)
 
  !String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  !print $EmplID11 (,16)
  print $EmplID (,16)
  ! GEX_SEC_REENG Vahini Katta 09/18/2016 Ends

end-procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'gexregtp.sqc'  !Get-Translate-Full-Part
#Include 'getcodta.sqc'  !Get-Company-Data
#Include 'getpgdta.sqc'  !Get-Paygroup-Data
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'getjobtl.sqc'
#include 'getactnm.sqc'
#include 'reset.sqc'
#Include 'getposnm.sqc'  !Get-Position-Title    VENDTKK ITG#56786   11-Feb-2009  