!***********************************************************************
!  GEXPY032:  Rate Increase Worksheets                                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       * 
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY032:  		RATE INCREASE WORKSHEETS                       *
!                                                                      *
! Narrative:		Prints Rate Increase Worksheets for office and * 
!                       pharmacy employees showing previous salary,    *
!                       current salary, min, mid and max for grade and *
!                       a new salary column.                           *
!                                                                      *
! #Debugx Used:	        #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:		GEX_DEPT_TBL                                   *
!			PERSONAL_DATA                                  *
!			EMPLOYMENT                                     *
!			JOB                                            *
!			JOBCODE_TBL                                    *
!			SAL_GRADE_TBL                                  *
!			GEX_MGMT_REPORT                                *
!                                                                      *
! Written by:		John Dorsey-SoftLink Inc.                      *
!                                                                      *
! Normally Run:		On Demand                                      *
!                                                                      *
! Control Parms:	Company Division Code                          *
!			Company                                        *
!			Company/Paygroup                               *
!			Deptid                                         *
!			Employee Status                                *
!			Account Code                                   *
!			Union Code                                     *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS	DATE		DESCRIPTION OF THE CHANGE              *
!***********************************************************************
!  JWD		5/26/98	    INITIAL CREATION (FROM GEXHR030)           *
!                                                                      *
!  JDH          1/18/99     ADDED SQRW RUN CONTROL LOGIC.              *
!                           ADDED STD HOURS, HIRE DATE, AND NEW RATE   *
!                           COLUMNS.                                   *
!                           ADDED PAGE BREAK AFTER DEPTID CHG.         *
!                           ADDED COMP. FREQ. TO ORDER CLAUSE.         *
!                                                                      *
!  JDH          7/14/99     ADDED UNION CODE RUN CONTROL PARAMETER.    *
!                                                                      *
!  CWB          7/29/99     Added responsible officer as primary sort. *
!                           Added dept descr to heading.               *
!                           Changed current rate for salaried EEs from *
!                           annual rate to weekly rate.                *
!                           Added column for these EEs to show annual  *
!                           rate; total by dept.                       *
!                           Added comp frequency field to report.      *
!                                                                      *
!  AXL          08/22/2000  7.5 Retro-fits                             *
!                                                                      *
!  AXL          01/25/2001  Updated column names from                  *
!                           PS_GEX_MGMT_REPORT table.                  *
!  PSR          08/06/2002  Modified UNION_CD FROM                     *
!                           JOB_LABOR TO JOB - Upgrade 8.3             *
! ISDVMXD	01/28/2009  ITG# 56799 JT.Descr changes in SQRs	       *
!***********************************************************************


!selection criteria
#define #x000_col_selection_criteria_a 	02
#define #x000_col_selection_criteria_b 	05

#define #x000_col_minsal		106

#define #x000_col_jobcode		10
#define #x000_col_prevcomp		122
#define #x000_col_comprate		135
#define #x000_col_midsal		106

#define #x000_col_paygroup		1
#define #x000_col_job_title		10
#define #x000_col_name			45
! CWB 07/29/99  Begin
#define #x000_col_annual_rate	        48
! CWB 07/29/99  End
#define #x000_col_stdhrs		73
#define #x000_col_hire_dt		86
#define #x000_col_grade			98
#define #x000_col_prevdt		125
! CWB 07/29/99  Begin
#define #X000_COL_COMPFREQ		151
! CWB 07/29/99  End
#define #x000_col_currdt		137
#define #x000_col_maxsal		106
#define #x000_col_emplid		151
#define #x000_col_newrate		165

#Include 'setenv.sqc'
#Include 'setup02.sqc'		!landscape


begin-heading 8
#debug9 show 'begin-heading'

 let $Company = $Save_Company

 #Include 'stdhdg02.sqc'

! let $x000_temp_out =  'Sorted by ' || $X000_ORDER_BY 
! print $x000_temp_out 			(3,) center 

 let $x000_temp_out =  'Report as of ' || $X000_REPORT_HEADING_ASOFDATE 
 print $x000_temp_out 	            (3,) center 

 do P930-get-dept-descr
 print 'Deptid'      (4,1)
 print $Save_Deptid  (,13)
 print $Dept_descr (,18)

! do P930-GET-OFFICER
 if Rtrim($x000_officer, ' ') <> ''
   let $x000_temp_out =  'Responsible Officer:  ' || $x000_officer
   print $x000_temp_out 	(4,) center
 end-if

!line 1
 PRINT '  Min/Rate'	(+2,{#x000_col_minsal})

!line 2
 print 'Pay'		(+1,{#x000_col_paygroup})
 print 'Job Code'	(0,{#x000_col_jobcode})
 print 'Name'		(0,{#x000_col_name})
 print 'Standard'	(0,{#x000_col_stdhrs})
 print 'Hire'		(0,{#x000_col_hire_dt})
 print ' Prev Rate'     (0,{#x000_col_prevcomp})	
 print ' Curr Rate'     (0,{#x000_col_comprate})
 PRINT '  Mid/Rate'	(0,{#x000_col_midsal})
 print 'Emplid'		(0,{#x000_col_emplid})
! CWB 07/29/99  Begin
 print 'New Hrly or'	(0,{#x000_col_newrate})
! CWB 07/29/99  End

!LINE 3
 print 'Group'		(+1,{#x000_col_paygroup})
 print 'Job Title'	(0,{#x000_col_job_title})
 print 'Annual Salary'  (0,{#x000_col_name})
 print '   Hours'	(0,{#x000_col_stdhrs})
 print 'Date'		(0,{#x000_col_hire_dt})
 print 'Grade'		(0,{#x000_col_grade})
 print ' Effect Dt'	(0,{#x000_col_prevcomp})
 print ' Effect Dt'	(0,{#x000_col_comprate})
 print '  Max/Rate'	(0,{#x000_col_maxsal})
! CWB 07/29/99  Begin
 print 'Freq'		(0,{#x000_col_emplid})
 print 'Wkly Rate'	(0,{#x000_col_newrate})
! CWB 07/29/99  End
end-heading


begin-procedure P930-GET-OFFICER
begin-select
!gex_mgmt.gex_vp
gex_mgmt.gex_svpvp  !AXL 1/25/2001
pd.name
  
  move &pd.name to $x000_officer

from   ps_gex_mgmt_report gex_mgmt,
       ps_personal_data   pd
where  gex_mgmt.deptid = &job.deptid
!and    gex_mgmt.gex_vp = pd.emplid	!AXL 1/25/2001		
and    gex_mgmt.gex_svpvp = pd.emplid
end-select
end-procedure


begin-report
#debug9 show 'begin-report'
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  show '$asoftoday=' $asoftoday 
 
  do StdAPI-Init
  do P010-Init-Variables
  do P100-Get-Employees-Data

  do StdAPI-Term
  do Reset

  show 'Successful end of report'
end-report


begin-procedure P010-Init-Variables
#debug9 show 'P010-Init-Variables'
  let $x000_new_page_flag = 'N'

  let $ReportID    = 'GEXPY032'
  let $ReportTitle = 'Rate Increase Worksheets'
  let $Country     = 'USA'

  show '$ReportID=' $ReportID 
  show '$ReportTitle=' $ReportTitle
  show '$ReportDate=' $ReportDate
  show '$ReportTime=' $ReportTime

  Let $GEXXX900_Company_Alias        = 'JOB.COMPANY'
  Let $GEXXX901_Company_Alias        = 'JOB.COMPANY'
  Let $GEXXX901_Paygroup_Alias       = 'JOB.PAYGROUP'
  Let $GEXXX902_Deptid_Alias         = 'JOB.DEPTID'
  Let $GEXXX903_Emp_Stat_Alias       = 'JOB.EMPL_STATUS'
  Let $GEXXX907_Div_CD_Alias         = 'GEX_DEPT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias        = 'JOB.ACCT_CD'
  Let $GEXXX913_Union_CD_Alias       = 'JOB.UNION_CD'	!AXL 8/08/2002 8 Change

  if $Prcs_Process_Instance = ''
    Do GEXXX950-Input-Parameters

    Let $UnionCdString = ''''
    Display 'Enter Union Code or leave blank to exit.'
    While 1=1
      Input $In-UnionCd Maxlen=3 'Union Code'
      Uppercase $In-UnionCd
      If Rtrim($In-UnionCd, ' ') = ''
        Concat '''' With $UnionCdString
        Break
      End-If
      If $UnionCdString <> ''''
        Concat ''',''' With $UnionCdString
      End-If
      Concat $In-UnionCd With $UnionCdString
    End-While

    If $UnionCdString = ''''''
      Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = '1=1'
      Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = $GEXXX913_Union_CD_Alias || ' In (' || $UnionCdString || ')'
      Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = $GEXXX913_INCLUDE_UNION_CD_CRITERIA
    End-If
  else
    Do GEXXX922-Select-Parameters
    let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
    if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
      let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
    end-if
    Do GEXXX900-Select-Company-Parameters 
    Do GEXXX901-Select-Company-Paygroup-Parameters    
    Do GEXXX902-Select-Deptid-Parameters 
    Do GEXXX903-Select-Emp-Stat-Parameters          
    Do GEXXX907-Select-Div-CD-Parameters
    Do GEXXX909-Select-Acct-CD-Parameters
    Do GEXXX913-Select-UNION-CD-Parameters
  end-if  

  do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')
! CWB 07/29/99  Begin
!  let $X000_ORDER_BY = 'PER2.NAME, JOB.COMPANY, JOB.DEPTID, JOB.PAYGROUP, JOB.COMP_FREQUENCY, PER.NAME'
  let $X000_ORDER_BY = 'JOB.COMPANY, JOB.DEPTID, JOB.PAYGROUP, JOB.COMP_FREQUENCY, PER.NAME'
! CWB 07/29/99  End

  show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA                =' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  show '$GEXXX900_INCLUDE_COMPANY_CRITERIA               =' $GEXXX900_INCLUDE_COMPANY_CRITERIA
  show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA      =' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
  show '$GEXXX902_INCLUDE_DEPTID_CRITERIA                =' $GEXXX902_INCLUDE_DEPTID_CRITERIA
  show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA              =' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
  show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA               =' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA
  show '$GEXXX913_INCLUDE_UNION_CD_CRITERIA              =' $GEXXX913_INCLUDE_UNION_CD_CRITERIA
  show '$X000_WHERE_SELECT_ASOFDATE                      =' $X000_WHERE_SELECT_ASOFDATE

  do P130-Print-Cover-Page
end-procedure


begin-procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'
  print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
  print '$Prcs_OPRID          ='                              (+1,{#x000_col_selection_criteria_b})
  print $Prcs_OPRID                                           (0,+2)
  print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
  print $PRCS_RUN_CNTL_ID                                     (0,+2)

  print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,{#x000_col_selection_criteria_a})
  print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA 		(0,+2)
  print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA            (0,+2)
  print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA   (0,+2)
  print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)
  print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA           (0,+2)
  print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA            (0,+2)
  print '$GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA 	    (0,+2)

  print '$X000_WHERE_SELECT_ASOFDATE                         ='   (+1,{#x000_col_selection_criteria_b})
  print $X000_WHERE_SELECT_ASOFDATE                           (0,+2)
 
  print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,{#x000_col_selection_criteria_a})
  print '$X000_ORDER_BY                                      ='   (+1,{#x000_col_selection_criteria_b})
  print $X000_ORDER_BY 	(0,+2)

  let #page-count = 0
  NEW-PAGE
  LET #PAGE-COUNT = 1
end-procedure


begin-procedure P100-Get-Employees-Data
#debug9 show 'P100-Get-Employees-Data'
 let $x100_Get_Employees_Data_Flag = 'N'
 

begin-SELECT 
PER2.NAME    ()  On-Break  Level=1
                           Save=$Save_VP
                           Print=Never

JOB.COMPANY  ()  On-Break  Level=2
                           Save=$Save_Company
                           Print=Never

JOB.DEPTID   ()  On-Break  Level=3
                           Print=Never
                           Save=$Save_Deptid
                           After=P930-Deptid-Change

JOB.PAYGROUP
JOB.EMPLID
JOB.EMPL_RCD
JOB.EFFDT
JOB.EFFSEQ
JOB.ACCT_CD
JOB.JOBCODE
JOB.POSITION_NBR
JOB.EMPL_STATUS
JOB.SAL_ADMIN_PLAN 
JOB.GRADE
JOB.COMPRATE
JOB.COMP_FREQUENCY
JOB.ANNUAL_RT
JOB.ANNUAL_RT/52 &JOB_weekly_rt
JOB.HOURLY_RT
JOB.STD_HOURS



E.HIRE_DT

PER.EMPLID
PER.NAME

GEX_DEPT.DEPTID
GEX_DEPT.EFFDT
GEX_DEPT.SEQUENCE_NUMBER
GEX_DEPT.GEX_COMPANY_DIV_CD

 move &PER2.NAME to $x000_officer
 move &PER.EMPLID to $emplid 

 Let $Position_Nbr = LTrim(RTrim(&JOB.POSITION_NBR,' '),' ')	 !isdvmxd added for ITG 56799 on 01/28/2009
 let $JobCode = &JOB.JOBCODE
 Do Get-Position-Title				!isdvmxd added for ITG 56799 on 01/28/2009
 
 Show 'In Get Employee data Emplid = ' $emplid  'POsition_desc = '$PosName
 If $PosName = ' '			!isdvmxd added for ITG 56799 on 01/28/2009
 	do P900-Get-Jobcode-Tbl
  	let $x000_JobTitle = $JobTitle
 Else
  	let $x000_JobTitle = $PosName
 End-If					!isdvmxd added for ITG 56799 on 01/28/2009

 let $FieldName  = 'EEO1CODE'
 let $FieldValue = &JT.EEO1CODE
 do Read-Translate-Table
 move $XlatShortName to $X000_EEO1CODE
 #debug8 show 'xlat=' $XlatShortName ' '  $XlatLongName

 let $FieldName  = 'COMP_FREQUENCY'
 let $FieldValue = &JOB.COMP_FREQUENCY
 do Read-Translate-Table
 move $XlatShortName to $X000_COMPFREQ
 #debug8 show 'xlat=' $XlatShortName ' '  $XlatLongName
 do P800-Print-Detail-Line

 let $x100_Get_Employees_Data_Flag = 'Y'

FROM   PS_GEX_DEPT_TBL   GEX_DEPT,
       PS_GEX_MGMT_REPORT GMR,
       PS_PERSONAL_DATA  PER,
       PS_PERSONAL_DATA  PER2,
       PS_EMPLOYMENT     E,
       PS_JOB JOB

WHERE  JOB.EMPLID               = PER.EMPLID
!AND JOB.EMPLID in ('175722996','166666848','194702563','601842749','210484803','181367648')	!isdvmxd added for testing
AND    JOB.EMPLID               = E.EMPLID
AND    JOB.EMPL_RCD            = E.EMPL_RCD

And    GMR.DEPTID               = JOB.DEPTID
!AXL 1/25/2001 - New column names - Begin
!And    PER2.EMPLID              = Nvl(Nvl(Rtrim(gmr.gex_vp,' '),Rtrim(gmr.gex_svp,' ')),gmr.gex_ceo)
And    PER2.EMPLID = Nvl(Nvl(Rtrim(gmr.gex_svpvp,' '),Rtrim(gmr.gex_evp,' ')),gmr.gex_ceo)
!AXL 1/25/2001 - New column names - End

AND    JOB.EFFDT                =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID            = JOB.EMPLID
       AND    EMPL_RCD         = JOB.EMPL_RCD
       AND    EFFDT            <= $X000_WHERE_SELECT_ASOFDATE) 

AND    JOB.EFFSEQ               =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID            = JOB.EMPLID
       AND    EMPL_RCD         = JOB.EMPL_RCD
       AND    EFFDT             = JOB.EFFDT)

AND    JOB.DEPTID               = GEX_DEPT.DEPTID 

AND    GEX_DEPT.EFFDT           =
      (SELECT MAX(EFFDT)
       FROM   PS_GEX_DEPT_TBL
       WHERE  DEPTID            = GEX_DEPT.DEPTID
       AND    EFFDT            <= $X000_WHERE_SELECT_ASOFDATE) 

AND    GEX_DEPT.SEQUENCE_NUMBER =
      (SELECT MAX(SEQUENCE_NUMBER)
       FROM   PS_GEX_DEPT_TBL
       WHERE  DEPTID            = GEX_DEPT.DEPTID
       AND    EFFDT             = GEX_DEPT.EFFDT)

AND   [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
AND   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
AND   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
AND   [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
AND   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
AND   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
AND   [$GEXXX913_INCLUDE_UNION_CD_CRITERIA]

ORDER BY [$X000_ORDER_BY]
end-select 

  if $x100_Get_Employees_Data_Flag = 'N'
    print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) CENTER
  end-if
end-procedure

!***********************************************************************

begin-procedure P800-Print-Detail-Line
#debug9 show 'P800-Print-Detail-Line'
begin-select

jprev.ANNUAL_RT
jprev.ANNUAL_RT/52 &jprev_weekly_RT
JPREV.HOURLY_RT
!CWB
jprev.emplid
!CWB
jprev.effdt

from  ps_job jprev
where jprev.emplid    = &job.emplid
and   jprev.empl_rcd = &job.empl_rcd
and  (jprev.action = 'PAY' or jprev.action = 'HIR')
and   Jprev.EFFDT =
     (SELECT MAX(JOB1.EFFDT)
      FROM   PS_JOB JOB1
      WHERE  JOB1.EMPLID = &JOB.EMPLID
      AND    JOB1.EMPL_RCD = &JOB.EMPL_RCD
      AND   (job1.action = 'PAY' or jprev.action = 'HIR')
      and    job1.annual_rt <> &job.annual_rt
      and    JOB1.EFFDT <= &job.effdt) 
and   Jprev.EFFSEQ =
     (SELECT MAX(JOB2.EFFSEQ)
      FROM   PS_JOB JOB2
      WHERE  JOB2.EMPLID = &JOB.EMPLID
      AND    JOB2.EMPL_RCD = &JOB.EMPL_RCD
      AND   (job2.action = 'PAY' or jprev.action = 'HIR')
      and    job2.annual_rt <> &job.annual_rt
      and    JOB2.EFFDT = Jprev.EFFDT)
end-select
!  following will get effdt of current salary
!  if no qualifying rows are found, $x000_currdt will be set to effdt of the 'currect' job row

 move 0 to #x000_rows

begin-select
jcurr.effdt
   add 1 to #x000_rows
from  ps_job jcurr
where jcurr.emplid = &job.emplid
and   jcurr.empl_rcd = &job.empl_rcd
and   jcurr.action = 'PAY'
and   jcurr.EFFDT =
     (SELECT MAX(JOB1.EFFDT)
      FROM   PS_JOB JOB1
      WHERE  JOB1.EMPLID = &JOB.EMPLID
      AND    JOB1.EMPL_RCD = &JOB.EMPL_RCD
      AND    job1.annual_rt = &job.annual_rt
      and    job1.action = 'PAY'
      and    JOB1.EFFDT <= &job.effdt) 
AND   jcurr.EFFSEQ =
     (SELECT MAX(JOB2.EFFSEQ)
      FROM   PS_JOB JOB2
      WHERE  JOB2.EMPLID = &JOB.EMPLID
      AND    JOB2.EMPL_RCD = &JOB.EMPL_RCD
      AND    job2.annual_rt = &job.annual_rt
      and    job2.action = 'PAY'
      and    JOB2.EFFDT = jcurr.EFFDT)
end-select

  if #x000_rows = 0
     move &job.effdt to $x000_currdt
  else
     move &jcurr.effdt to $x000_currdt
  end-if

  do P920-Get-Salary-Ranges

! make display rates match comp frequency
  evaluate &job.comp_frequency
    when = 'H'
     MOVE &JOB.HOURLY_RT TO #X000_RATEOUT
     MOVE &SAL.MIN_RT_HOURLY TO #X000_MINOUT
     MOVE &SAL.MID_RT_HOURLY TO #X000_MIDOUT
     MOVE &SAL.MAX_RT_HOURLY TO #X000_MAXOUT
     MOVE &JPREV.HOURLY_RT TO #X000_PREVOUT
     break
    when = 'W'
!     MOVE &JOB_weekly_RT TO #X000_RATEOUT
     MOVE &SAL_MIN_RT_weekly TO #X000_MINOUT
     MOVE &SAL_MID_RT_weekly TO #X000_MIDOUT
     MOVE &SAL_MAX_RT_weekly TO #X000_MAXOUT
     MOVE &JPREV_weekly_RT TO #X000_PREVOUT
!cwb 07/22/99
     MOVE &JOB.ANNUAL_RT TO #X000_ANNUAL_RATEOUT
     add #X000_ANNUAL_RATEOUT to #X000_DEPT_ANNUAL_RATEOUT

     MOVE &JOB.comprate TO #X000_RATEOUT
!     MOVE &SAL.MIN_RT_ANNUAL TO #X000_MINOUT
!     MOVE &SAL.MID_RT_ANNUAL TO #X000_MIDOUT
!     MOVE &SAL.MAX_RT_ANNUAL TO #X000_MAXOUT
!     MOVE &JPREV.ANNUAL_RT TO #X000_PREVOUT
     break
    when = 'A'
     break
  end-evaluate


! ensure at least 4 lines at the bottom of the page
  if #current-line > 54
     new-page
  end-if

 do Format-DateTime(&E.HIRE_DT, $hire_dt, {DEFDATE}, '', '')

!LINE 1
 print &JOB.PAYGROUP		(+1,{#x000_col_paygroup})
 print &JOB.JOBCODE		(0,{#x000_col_jobcode})
 print &JOB.STD_HOURS  	      (0,{#x000_col_stdhrs})    Edit 9,999.99
 print &PER.NAME       	      (0,{#x000_col_name},25)
 print $hire_dt               (0,{#x000_col_hire_dt})
 print &JOB.GRADE		      (0,{#x000_col_grade})
 print #X000_PREVOUT          (0,{#x000_col_PREVCOMP})	edit B999,999.99
 print #x000_rateout          (0,{#x000_col_comprate})	edit 999,999.99
 print #X000_MINOUT		(0,{#x000_col_minsal}) 		edit 999,999.99
 print &PER.EMPLID		(0,{#x000_col_emplid}) 
 print '_'                    (0,{#x000_col_newrate},10)    Fill
!LINE 2

 do Format-DateTime(&jprev.effdt, $X000_report_prev_dt ,{DEFDATE}, '', '')
 do Format-DateTime($x000_currdt, $X000_report_curr_dt ,{DEFDATE}, '', '')

 print $x000_JobTitle 		(+1,{#x000_col_job_title})
! CWB 07/29/99  Begin
 print #x000_annual_rateout     (0,{#x000_col_annual_rate})	edit B999,999.99
! CWB 07/29/99  End
 print $x000_report_prev_dt	(0,{#x000_col_prevdt})
 print $x000_report_curr_dt	(0,{#x000_col_currdt})
 PRINT #X000_MIDOUT		(0,{#x000_col_midsal}) 		edit 999,999.99
 PRINT $X000_COMPFREQ		(0,{#X000_COL_COMPFREQ})

!LINE 3
! PRINT $X000_COMPFREQ		(+1,{#X000_COL_COMPFREQ})
! PRINT #x000_MAXOUT		(0,{#x000_col_maxsal})		edit 999,999.99
 PRINT #x000_MAXOUT		(+1,{#x000_col_maxsal})		edit 999,999.99

!line 4
 print '        '			(+1,1) 

!re-init output variables
   move 0 to #x000_rateout
   move 0 to #x000_annual_rateout
   move 0 to #x000_prevout
   move 0 to #x000_minout
   move 0 to #x000_midout
   move 0 to #x000_maxout
end-procedure


begin-procedure P900-Get-Jobcode-Tbl
#debug9 show 'P900-Get-Jobcode-Tbl'
  if rtrim($JobCode,' ') = ''
    move '' to $JobTitle
    move '' to $JobTitleAbbrv
    goto P901_GetJobTlExit
  end-if
 
begin-SELECT
JT.DESCR
JT.DESCRSHORT
JT.EEO1CODE

	

FROM   PS_JOBCODE_TBL JT
WHERE  JT.JOBCODE = $JobCode
AND    JT.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_JOBCODE_TBL
       WHERE  JOBCODE = $JobCode
       AND    EFFDT  <= $X000_WHERE_SELECT_ASOFDATE)
end-SELECT
  let $JobTitle       = rtrim(&JT.Descr,' ')
  let $JobTitleAbbrv  = rtrim(&JT.DescrShort,' ')
  
  Show 'Jobcode from get-jobcode-tbl = ' $JobTitle

P901_GetJobTlExit:
end-procedure


begin-procedure P920-Get-Salary-Ranges
#debug9 show 'P920-Get-Salary-Ranges'
begin-select
sal.min_rt_annual
sal.mid_rt_annual
sal.max_rt_annual
sal.min_rt_annual/52 &sal_min_rt_weekly
sal.mid_rt_annual/52 &sal_mid_rt_weekly
sal.max_rt_annual/52 &sal_max_rt_weekly
sal.min_rt_HOURLY
sal.mid_rt_HOURLY
sal.max_rt_HOURLY

from  ps_sal_grade_tbl sal
where sal.sal_admin_plan = &job.sal_admin_plan
and   sal.grade = &job.grade
and   sal.effdt =
     (select max(effdt)
      from   ps_sal_grade_tbl sg
      where  sg.sal_admin_plan = &job.sal_admin_plan
      and    sg.grade          = &job.grade
      and    sg.eff_status     = 'A'
      and    sg.effdt         <= $asofdate)
end-select
end-procedure


! CWB 07/29/99  Begin
begin-procedure P930-Deptid-Change
#debug9 Show 'P930-Deptid-Change'
  print 'Total for Dept: '            (+2,{#x000_col_job_title})
  print #x000_dept_annual_rateout     (0,{#x000_col_name})	edit 999,999,999.99
  move 0 to #x000_dept_annual_rateout
  new-page
end-procedure

begin-procedure P930-get-dept-descr
#debug9 Show 'P930-get-dept-descr'
begin-select
dept2.descr  &descr
  
  move &descr to $dept_descr

from   ps_dept_tbl dept2
where  dept2.deptid = $save_deptid
end-select
end-procedure
! CWB 07/29/99  End



#include 'setenv.sqc'    !set database environment
#include 'getcodta.sqc'  !Get-Company_Data procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'readxlat.sqc'  !Read-Translate-Table procedure
#include 'datetime.sqc'  !general date and time formatting procedures
#include 'number.sqc'    !general number formatting procedures
#include 'stdapi.sqc'    !StdAPI-Init procedure
#include 'reset.sqc'     !Reset printer procedure
#include 'getbalid.sqc'  !Get-Calendar-Year-Id
#include 'gexregtp.sqc'	 !Get full-part time code
#include 'askaod.sqc'	 !Ask-As-Of-Date procedure
#include 'getposnm.sqc'  !Get-Position-Title prodecure		!isdvmxd added for ITg 56799 on 01/28/2009

#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx913.sqc'  !Get union_cd multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls
