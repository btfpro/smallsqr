!***********************************************************************
!GEXPYUPD:   This program reads the Pay Data Input file and updates    *
!             PaySheets.                                               *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *
!***********************************************************************
!          SCM          1/09/2001     Added evaluation of earnings     *
!                                     codes '519', '522', and '523'    *
!                                     [all reg vaca] for Cleveland.    *
!                                                                      *
!          SCM          1/24/2001     Added code '14' for 167 earnings *
!                                     for Cleveland to ensure timeload *
!                                     will work for Sunday Mgmt Premium*
!                                                                      *
!          SCM          05/23/2002    Added job code alias (j) in      *
!                                     select statement for ps_job to   *
!                                     eliminate unnecessary rpt errs.  *                  
!                                                                      *
!          CWB          08/29/2002    Added DEDUCT_STATUS field to the *
!                                     insert into PS_PAY_EARNINGS. Set *
!                                     the value to 'I'. This is because*
!                                     the table was altered by Tax     *
!                                     Update 02E.                      *
!                                                                      *     
!          GBD          11/13/2002    v8.3 Upgrade: corrected inserts  *
!                                     into PAY_OTH_EARNS, PAY_LINE, and*
!                                     PAY_EARNINGS tables.             *
!                                                                      *
!          CWB          01/09/2003    Modified insert into PAY_EARNINGS*
!                                     due to the alter to the table    *
!                                     from Tax Update 02D for v8.3     *    
!                                                                      *
!          CJH          02/19/2003    Change defaults during inserts on*
!                                     paY_earnings (fica_status_ee and *
!                                     flsa_status)                     *
!                                                                      *
!          GBD          07/11/2003    Set PAY_OTH_EARNS.COMPRATE to    *
!                                     zero for ERNCDs that have a     *
!                                     PAYMENT_TYPE of B.               *
!                                                                      *
!          AXL          11/18/2004    Change the edits for ERNCD 167   *
!                                     Dont hide HOURS for ERNCD 167.  *  
!                                     Dont set COMPRATE to zero (0)   *
!                                     for 167 ERNCDS                   *
!                                                                      *
!  HR-10966   AXL       11/02/2005    Remove RULE hints from 2 audit   *
!                                     procedures.                      *
!								       *
!  HR-11116   DXS	12/07/2006    Commented call to edit-company   *
!				      and edit-paygroup. Added	       *
!				      procedure Company-Paygroup-Check *
!				      after file is read. Also commented
!				      company and paygroup check in    *
!				      Edit-Emplid procedure.           *
!				      Commented prepare-company-lookup *
!				      and prepare-paygroup-lookup.     *
!	                              Added logic to empl_rcdno        *
!	                              validation logic. This sqc is    *
!				      used by gexpyta1 and ta2.        *
!								       *
! HR-11137    DXS       01/04/2007    Re-arranged procedures. removed  *
!				      Company-Paygroup-Check. Altered  *
!				      edit-company and edit-paygroup   *
!				      Added code for job work code     *
!				      30299, Floaters, in the procedure*
!				      Edit-ErnCd as requested by Carey *
!								       *
! HR-11161    DXS        02/13/2007   In procedure process-170or176or167*
!                                     for erncd 170 if it fails with   *
!                                     "Earnings Code is not found in   *
!                                     the home payline" error, do not  *
!                                     set it or show it in the report  *
!								       *
! HR-11161    DXS        02/20/2007   Also added code to initialize the*
!                                     $Home_NE_Work variable.          *
!                                     Added code to handle 2 erncd 170 *
!                                     rows for same emplid             *
!								       *
! HR-11161    DXS        02/21/2007   Changes in Pay dates Validations *
!				      Do not reject for previous week  *
!                                     even if sepchk is 0              *
! GEX-AXG 		 08/10/2007    HCM 9.0 Upgrade		       *
!								       * 
! GEX-CXB 		09/26/2007    Replaced PS_ACCT_CD_TBL	       * 
!				      With PS_GEX_ACCT_CD_TBL  	       *
!				      Added EFF_STATUS crirteria       *
!				      from PS_GEX_ACCT_CD_TBL	       *   
! MXR         08/04/2008 SC# 10965489   Commented out Adjust Syn hours *
!             procedure on 10965489  line number 1132.                 *
! SXP         1/12/2009	               ITG 50644                       *
! RKK         8/24/2009	               FLSA CHANGES, FLAG TO Y & END DT*
! RKK         12/30/2010               removed hardcoded years on pay  *
!                                      begin/end date logic*
! ISDVVXK     07/05/2011               Removed the rounding for 167 erncd* 
! GEXPY_848_E115995_01 2011-12-20 Vahini Katta
! 1) Flip FLSA_REQUIRED to Y
!GEX_SEC_REENG 2015-04-29 Vahini Katta                                 *
!Changes related to gex_emplid_mapp/7 digit emplid
!***********************************************************************
! PROGRAM VALUES:  The following values are set explicitly in this pgm
!
! Holiday Earnings Codes: HOL, 502
! Vacation Earnings Codes: 513, 515
! Overtime Earnings Codes: OTP
! Regular Earnings Codes: REG
! Pharmacy Earnings Adjustment Code: REG
! Pharmacy Paygroups: PHM, PH2
! Pharmacy Premium Earnings Code: 167
! Sunday Management Earnings Code: 170
! Alternate Part-time rate Earnings Code: 176
! Part-time Vacation Earnings Code: 515
!
!***********************************************************************
!***********************************************************************
begin-procedure Prepare-store-lookup

Load-Lookup
     Name=storeLookup
     Table='PS_DEPT_TBL DEPT'
     Key='DEPT.DEPTID'
     Return_Value='DEPT.DEPTID'
     Where='DEPT.EFF_STATUS = ''A'''
end-procedure
!***********************************************************************
begin-procedure Prepare-store-lookup-tc

Load-Lookup
     Name=storeLookuptc
     Table='PS_GEX_DEPT_TBL DEPTTC'
     Key='DEPTTC.DEPTID'
     Return_Value='DEPTTC.GEX_TIME_COLLECT'
     Where='DEPTTC.EFFDT = (select max(effdt) from ps_gex_dept_tbl where deptid=DEPTTC.deptid and effdt <= sysdate)'

end-procedure

!***********************************************************************
begin-procedure Prepare-Businessunit-lookup

Load-Lookup
     Name=BULookup
     Table='PS_BUS_UNIT_TBL_HR BU'
     Key='BU.DEFAULT_SETID'
     Return_Value='BU.BUSINESS_UNIT'
     Where='BU.ACTIVE_INACTIVE  = ''A'''   

end-procedure
!***********************************************************************
begin-procedure Prepare-jobcode-lookup

Load-Lookup
     Name=jobcodeLookup
     Table='PS_JOBCODE_TBL JCD'
     Key='JCD.JOBCODE'
     Return_Value='JCD.JOBCODE'
     Where='JCD.EFF_STATUS = ''A'''
end-procedure

!******************************************************************
begin-procedure Prepare-Acctcode-lookup

Load-Lookup
     Name=acctcodeLookup
     Table='PS_GEX_ACCT_CD_TBL  ACD' !GEX-CXB   09/26/2007 Added for Upgrade 9.0
     Key='ACD.ACCT_CD'
     Return_Value='ACD.ACCT_CD'
     
     Where='ACD.EFF_STATUS = ''A'''	!GEX-CXB 09/26/07  Added for Upgrade 9.0 
end-procedure

!******************************************************************
begin-procedure Prepare-Shiftcode-lookup

Load-Lookup
     Name=shiftcodeLookup
     Table='PS_SHIFT_TBL SHF'
     Key='SHF.SHIFT'
     Return_Value='SHF.SHIFT'
     Where='SHF.EFF_STATUS = ''A'''
end-procedure

!******************************************************************
begin-procedure Prepare-earncode-lookup

Load-Lookup
     Name=earncodeLookup
     Table='PS_EARNINGS_TBL ERN'
     Key='ERN.ERNCD'
     Return_Value='ERN.ERNCD'
     Where='ERN.EFF_STATUS = ''A'''
end-procedure

!************************************************************************
begin-procedure Report

use-report ERROR-REPORT

!   move $slctrunid to $run_id

  do edit-pay-calendar
   
  let $Found-end-dt = 'N'   

  do checking-gexpycur
   
  if $Found-end-dt = 'N'   
    do insert-into-gexpyhst  ! RKK 08/05/2009
    do delete-curr-entries   
  end-if

  show $pay_end_dt
  show $pay_begin_dt

 if $found = 'N'
    goto report-exit
 end-if   
 
 do delete-prior-entries ! RKK - 08/05/2009 

 open $FileName as 3 for-reading record=91 status=#filestat

 if #filestat < 0
	 display 'File Open error occured;  Cannot proceed'
	 move 'Y' to $errorfound
	 goto Report-Exit
 end-if        
  
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  do prepare-jobcode-lookup
  do prepare-acctcode-lookup
  do prepare-store-lookup
  do prepare-store-lookup-tc
  do prepare-businessunit-lookup  
  do prepare-shiftcode-lookup
  do prepare-earncode-lookup

  show $company
  show $paygroup
  show $pay_end_dt

  move 'N' to $key_change

  let $table_name = 'PS_GEX_R_GEXPYUPD'

  do drop-wrk-table
  do create-temp-table
  let $trans_processing = 'Y'
  let $first_trans = 'Y'
  let #trans_store_total = 0
  let #hrs_sent_total = 0
  let #hrs_rej_total = 0

  while 1 = 1
    read 3 into $Company:3      -
		$Paygroup:3     -
		$EmplId9:9      -
		$Empl_RcdNo:1   -
		$Store:4        -
		$Home_Job_Cd:6  -
		$Work_Job_Cd:6  -
		$Home_Dept:3    -
		$Work_Dept:3    -
		$ErnCd:3        -
		$Hours:9        -
		$HrlyRt:19      -
		$ShiftCd:1      -
		$Pay_BeginDt:10 -
		$Pay_EndDt:10   -
		$SepChk:1       

    if #end-file = 1
      break
    end-if

    add 1 to #InputTran

    let $transaction = $company||' '||$paygroup||' '||$emplid9||' '||$empl_rcdno||' '||$store
		       ||' '||$home_job_cd||' '||$work_job_cd||' '||$home_dept||' '||$work_dept||
		       ' '||$erncd||' '||$hours||' '||$hrlyrt||' '||$shiftcd||' '||$pay_begindt||
		       ' '||$pay_endDt||' '||$sepchk

  show 'Transaction: ' $transaction
  do Get-Emplid !GEX_SEC_REENG 2015-04-29 Vahini Katta
  show '$emplid9 :' $emplid9
  if $first_trans = 'Y'   
    move 'N' to $first_trans 
    move $store to $store_save
    move $company to $company_save
    move $paygroup to $paygroup_save
    do Get-Last-Page
    move #Page# to #Page#Save
    add 1 to #Page#
    move 1 to #line#
  else
    if RTRIM($company, ' ') <> RTRIM($company_save, ' ')
      move 'Y' to $key_change
    end-if

    if RTRIM($paygroup, ' ') <> RTRIM($paygroup_save, ' ')
	    move 'Y' to $key_change
    end-if

    if (RTRIM($store,' ') <> RTRIM($store_save, ' ')) or ($key_change = 'Y')
      move $company_save to $company_upd
      move $company to $company_save
      move $paygroup_save to $paygroup_upd
	    move $paygroup to $paygroup_save
      move $store_save to $store_upd
      move $store to $store_save

      do process-temp-table

      let #trans_store_total = 0
      let #hrs_sent_total = 0
      let #hrs_rej_total = 0
    end-if
  end-if

  let #trans_store_total = #trans_store_total + 1
  let $skipped = 'N'

  move $hours to #hrs_in
  let #hrs_sent_total = #hrs_sent_total + #hrs_in

  if $key_change = 'Y'
    do Get-Last-Page
    move #Page# to #Page#Save
    add 1 to #Page#
    move 1 to #line#
    move 'N' to $key_change
  end-if    

  move 'N' to $ErrorFound
  
!*******************************************
!****  EMPLOYEE RECORD NUMBER VALIDATION****
!*******************************************
  show 'EMPLOYEE RECORD NUMBER VALIDATION'

  let $EmplId = RTRIM($EmplId9, ' ')

  show '$EmplId ' $EmplId

  if RTRIM($Empl_RcdNo, ' ') = ''
!         use-report nonc-report  ! RKK - 08/05/2009 
	  do Error-Found
    print 'No EmplRcdNo.  Defaulted to 0' (,43)
    add 1 to #ErrorCount
    use-report error-report
    move 0 to #Empl_RcdNo
    let $Empl_RcdNo = '0'
    move 'N' to $errorfound  ! DXS, 12/07/2006, don''t want to raise the flag
                             ! as we are defaulting it to 0 
  else
    move 'Empl Rcd#' to $FieldPrint
    move $Empl_RcdNo to $FieldValue
    move 1 to #FieldLength
    move 0 to #FieldDecimal
    move 'N' to $Negative
    do Edit-Numeric
	  if $Numerr = 'N'
	    let #Empl_RcdNo = RTRIM($Empl_RcdNo, ' ')
	  end-if
  end-if

!*************************************************
!****** EMPLOYEE ID VALIDATION********************
!*************************************************
  show 'Doing emplid validation'

  if RTRIM($EmplId9, ' ') = ''
    do Error-Found
    print 'No EmplID' (,43)
    add 1 to #ErrorCount
    move 'Y' to $skipped
    goto Skip-Record
  else
    move 'Empl Id#' to $FieldPrint
    move $EmplId9 to $FieldValue
    move 9 to #FieldLength
    move 0 to #FieldDecimal
    move 'N' to $Negative
  show 'Doing Edit-Numeric'
  show '$Numerr ' $Numerr
    do Edit-Numeric
  show '$Numerr after ' $Numerr
    if $Numerr = 'N'
	    let $EmplId = RTRIM($EmplId9, ' ')
    else
       move 'Y' to $skipped
	     goto skip-record
    end-if

    if RTRIM($EmplId, ' ') <> ''
  show 'Doing Edit-EmplID'
  show '$errorfound ' $errorfound
	    do Edit-EmplID
    end-if
  end-if
  show 'before skip $errorfound ' $errorfound

  if $errorfound = 'Y'
    move 'Y' to $skipped
  	goto Skip-Record
  end-if

!*************************************************
!******   COMPANY VALIDATION  ********************
!*************************************************
  show 'Doing Company val'
  show '$Company <' $Company '>'
      
	do Edit-Company

  if $ErrorFound = 'Y'
    move 'Y' to $skipped
   	goto Skip-Record
  end-if

!*************************************************
!******  Pay Group VALIDATION ********************
!*************************************************
  show 'Paygroup val'
  show '$PayGroup <' $PayGroup '>'

  do Edit-PayGroup

  if $ErrorFound = 'Y'
    move 'Y' to $skipped
	  goto Skip-Record
  end-if

!*************************************************
!****** Store Number VALIDATION ******************
!*************************************************
  show 'Store Number Validation'

  if RTRIM($Store, ' ') = '' 
	  do Error-Found
	  print 'No Store Number' (,43)
	  add 1 to #ErrorCount
	  do get-home-store
	  move $home_Store to $store
  else
	  do Edit-Store
  end-if

!*************************************************
!****** Home JobCode VALIDATION ******************
!*************************************************
  show 'Home JobCode Validation'

  if RTRIM($Home_Job_Cd, ' ') = '' 
	  do Error-Found
!	 print 'No Home Job Code' (,43)   ! RKK - 08/05/2009 
	  add 1 to #ErrorCount
	  do get-home-job-cd
  else
	  let $Home_Job_Cd = RTRIM($Home_Job_Cd, ' ')  ! remove padded spaces
	  let $Home_Job_Cd = LTRIM($Home_Job_Cd, ' ')  ! from left or right
	  do Edit-Home-Job-Cd
  end-if

!*************************************************
!****** Work JobCode VALIDATION ******************
!*************************************************
  show 'Work JobCode Validation'

  if RTRIM($Work_Job_Cd, ' ') = '' 
!       use-report nonc-report  ! RKK - 08/05/2009 
!	  do Error-Found
!	  print 'No Work Job Code' (,43)
!	  add 1 to #ErrorCount
!    use-report error-report
	  if RTRIM($home_job_cd, ' ') = ''
	    do get-home-job-cd
	    move $home_job_cd to $work_job_cd
	  else
	    move $home_job_cd to $work_job_cd
	  end-if
  else
	   let $Work_Job_Cd = RTRIM($Work_Job_Cd, ' ')  ! from left or right
	   let $Work_Job_Cd = LTRIM($Work_Job_Cd, ' ')  ! from left or right
	   do Edit-Work-Job-Cd
  end-if

!*************************************************
!******* Home Dept VALIDATION ********************
!*************************************************
  show 'Home Dept Validation'

  if RTRIM($Home_Dept, ' ') = '' 
	  do Error-Found
	  print 'No Home Dept Code' (,43)
	  add 1 to #ErrorCount
	  do get-home-dept-cd
  else
	  do Edit-Home-Dept-Cd
  end-if

!*************************************************
!******* Work Dept VALIDATION ********************
!*************************************************
  show 'Work Dept Validation'

  if RTRIM($Work_Dept, ' ') = '' 
!       use-report nonc-report   ! RKK - 08/05/2009 
!	  do Error-Found
!	  print 'No Work Dept Code' (,43)
!	  add 1 to #ErrorCount
!    use-report error-report
	  if RTRIM($home_dept, ' ') = ''
	    do get-home-dept-cd
	    move $home_dept to $work_dept
	  else
	    move $home_dept to $work_dept
	  end-if
  else
	  do Edit-Work-Dept-Cd
  end-if

!*************************************************
!******* Hours Worked VALIDATION *****************
!*************************************************
  show 'Hours Validation'

  if RTRIM($Hours, ' ') = ''
	  move  0  to #Hours
  else
	  move 'Hours' to $FieldPrint
	  move $Hours to $FieldValue
  	move 9 to #FieldLength
  	move 2 to #FieldDecimal
	  move 'Y' to $Negative
	  do Edit-Numeric
  	if $Numerr = 'N'
	    let #Hours = RTRIM($Hours, ' ')
	  else
	    move  0  to #Hours
	  end-if
  end-if


!*************************************************
!******* Hourly Rate VALIDATION  *****************
!*************************************************
  show 'Hrly Rate Validation'

  if RTRIM($HrlyRt, ' ') = ''
	  move 0 to #HrlyRt
    if #hours = 0
    ! use-report nonc-report           ISDVSXP FOR ITG 50644 11/10/2008
      use-report error-report         !ISDVSXP FOR ITG 50644 11/10/2008
!     do Error-Found                  !ISDVSXP FOR ITG 50644 02/05/2009
      add 1 to #ErrorCount
      ! print 'Hours and Hourly rate both are not passed' (,43)      ISDVSXP FOR ITG 50644 01/12/2009
      ! print '; Transaction is rejected;' ()                        ISDVSXP FOR ITG 50644 01/12/2009
      ! print $transaction (+1,21) 
      use-report error-report
      move 'Y' to $skipped
      goto skip-record
    end-if
  else
	  move 'Hourly Rate' to $FieldPrint
	  move $HrlyRt to $FieldValue
	  move 19 to #FieldLength
	  move 6 to #FieldDecimal
	  move 'N' to $Negative
	  do Edit-Numeric
  	if $Numerr = 'N'
	    let #HrlyRt = RTRIM($HrlyRt, ' ')
	  else
	    move 0 to #HrlyRt     
	  end-if
  end-if

!*************************************************
!******* Earnings Code VALIDATION ****************
!*************************************************
  show 'Earncode validation'

  if RTRIM($ErnCd, ' ') = ''
	  do Error-Found
	  print 'No Earnings Code' (,43)
	  add 1 to #Errorcount
	  move 'XXX' to $Erncd
  else
	  do Edit-ErnCd
    if $skip_record_tran = 'Y'
      move 'Y' to $skipped
      goto skip-record
    end-if
  end-if
    
!*************************************************
!******* Pay_Begin_Dt/Pay_End_Dt VALIDATION ******
!*************************************************
  show 'Pay dates Validations'

  if RTRIM($Pay_BeginDt, ' ') = ''
	  do Error-Found
	  add 1 to #ErrorCount
	  print 'No Pay Begin Date' (,43)
  else
  	let #pay_begin_mm = substr($pay_begindt,1,2)
    let #pay_begin_dd = substr($pay_begindt,4,2)
    let #pay_begin_yy = substr($pay_begindt,7,4)
      
  show '<' #pay_begin_mm  '><' #pay_begin_dd '><' #pay_begin_yy '>'

  let $next_year = datetostr(dateadd(datenow(), 'YEAR' , 1), 'YYYY' ) 
  let #next_year = $next_year
  show 'next year: '#next_year
  let $begin_year = datetostr(dateadd(datenow(), 'YEAR' , -2), 'YYYY' ) 
  let #begin_year = $begin_year 
  show 'Begin year: '#begin_year
  show '#pay_begin_yy :' #pay_begin_yy
  show '#pay_end_mm   :' #pay_end_mm
  show '#pay_end_dd   :' #pay_end_dd
  
     if #pay_begin_mm < 01
     	or #pay_begin_mm > 12
    	or #pay_begin_dd < 01
     	or #pay_begin_dd > 31
     	or #pay_begin_yy > #next_year     !RKK 12/30/2010
     	or #pay_begin_yy < #begin_year     !RKK 12/30/2010
       	do error-found
    		add 1 to #errorcount
	    	print 'Bad Begin Date' (,41)
		    print $transaction (+1,21) 
		    move 'Y' to $skipped
        goto Skip-Record
     end-if
         
	  do format-datetime($pay_begindt, $pay_begindt_dbf, {DEFMDY}, '', 'NATIVE')
	  do format-datetime($pay_begindt_dbf, $pay_begindt_str, {DEFCMP}, '', '')

    do format-datetime($pay_begin_dt, $pay_begin_dt_str, {DEFCMP}, '', '')
  show $pay_begindt_str
  show $pay_begin_dt_str
	  if $Pay_BeginDt_str <> $Pay_Begin_Dt_Str
	    if $pay_begindt_Str < $pay_begin_dt_Str 
	       if to_number($sepchk) = 0
	       else
		       move 0 to $sepchk
	       end-if
	    else
	    end-if                   
	  end-if
  end-if

  show 'Start pay_end_dt validation'

  if RTRIM($Pay_EndDt, ' ') = ''
 	  do Error-Found
	  add 1 to #ErrorCount
	  print 'No Pay End Date' (,43)
  else
    let #pay_end_mm = substr($pay_enddt,1,2)
    let #pay_end_dd = substr($pay_enddt,4,2)
    let #pay_end_yy = substr($pay_enddt,7,4)
            
  show '<' #pay_end_mm  '><' #pay_end_dd '><' #pay_end_yy '>'

  let $next_year = datetostr(dateadd(datenow(), 'YEAR' , 1), 'YYYY' ) 
  let #next_year = $next_year
  let $begin_year = datetostr(dateadd(datenow(), 'YEAR' , -2), 'YYYY' ) 
  let #begin_year = $begin_year 

     if #pay_end_mm < 01
     	or #pay_end_mm > 12
    	or #pay_end_dd < 01
     	or #pay_end_dd > 31
     	or #pay_end_yy > #next_year     !RKK 12/30/2010
     	or #pay_end_yy < #begin_year     !RKK 12/30/2010
       	do error-found
     		add 1 to #errorcount
     		print 'Bad End Date' (,41)
     		print $transaction (+1,21) 
     		move 'Y' to $skipped
        goto Skip-Record
     end-if
       
	   do format-datetime($pay_enddt, $pay_enddt_dbf, {DEFMDY}, '', 'native')
	   do format-datetime($pay_enddt_dbf, $pay_enddt_str, {DEFCMP}, '', '')
  	 do format-datetime($pay_end_dt, $pay_end_dt_str, {DEFCMP}, '', '') 

  show 'pay_enddt_str: ' $pay_enddt_str
  show 'pay_end_dt_Str: ' $pay_end_dt_Str

  end-if

!*************************************************
!******* Separate Check Ind VALIDATION ***********
!*************************************************
	
  Evaluate $SepChk
  	when = ''
	  when = '0'
	  when = '2'
	  when = '3'
	  when = '4'
	  when = '5'
	  when = '6'
	  when = '7'
	  when = '8'
	  when = '9'
	    break
	  when < '0'
	  when > '9'
	    do Error-Found
	#ifdef USA
	  print 'Invalid Separate Check= ' (,43)
	#endif

	#ifdef CANADA
	  print 'Invalid Separate Cheque=' (,43)
	#endif

	  add 1 to #ErrorCount
	  print $Sepchk ()
	  break
  end-evaluate

  if RTRIM($SepChk, ' ') = ''
	  move  0  to #SepChk
  else
	  let #SepChk  = RTRIM($SepChk, ' ')
  end-if


!*************************************************
!******* Shift Code VALIDATION         ***********
!*************************************************

	if RTRIM($ShiftCd, ' ') = ''
	   do get-home-shift-cd
	   move $Home_ShiftCd to $shiftCD
	else
		do edit-shift-cd
	end-if 

!**********VALIDATIONS ARE OVER FOR EACH RECORD *******
!**********Loading Process starts from here************

  show 'Errorfound after validation ' $Errorfound
 
    move 'N' to $Errorfound

    do Get-Page-Line

    move $EmplID to $EmplIDSave

    if $ErrorFound = 'N'
      add 1 to #success-count
    else
      add 1 to #ErrorCount
      do error-found
      move 'Y' to $skipped
      print 'Unsuccessful processing of the transaction' (,43)
      print '; Verify Transaction;' ()
      print $transaction (+1,21) 
    end-if
  

Skip-Record:

   if $skipped = 'Y'
      let #hrs_rej_total = #hrs_rej_total + to_number($hours)
   end-if
   add 1 to #InputDisp
   if #InputDisp = 50
     move 0 to #InputDisp
     date-time () hh:mi:ss &timeProcess
   end-if
end-while

  move $company_save to $company_upd
  move $company to $company_save
  move $paygroup_save to $paygroup_upd
  move $paygroup to $paygroup_save
  move $store_save to $store_upd
  move $store to $store_save

  do process-temp-table

  do insert-into-gexpycur  ! RKK 08/05/2009

!  print 'Total Transactions=' (+2,1)         ! RKK - 08/05/2009 
!  do Format-Number(#InputTran, $out, '99999')  ! RKK - 08/05/2009 
!  print $out ()                               ! RKK - 08/05/2009 

  display 'Total transactions loaded: ' noline
  display $out
!  print '     Total Errors in Transactions=' ()  ! RKK - 08/05/2009 
!  do Format-Number(#ErrorCount, $out, '99999')   ! RKK - 08/05/2009 
!  print $out ()                                  ! RKK - 08/05/2009 

  display 'Total errors in transactions: ' noline
  display $out
  date-time () hh:mi:ss &timeEnded
  display 'Load Process Ended: ' noline
  display &timeEnded

  close 3

  let $trans_processing = 'N'

  !do adjust-pharmacy-hours   ! MXR         08/04/2008 SC# 10965489   Commented out

  do Misc-Audits

  use-report AUDIT-REPORT
  use-report SNOPY-REPORT
  use-report KRONO-REPORT
  use-report SMRT-REPORT
  use-report PAPER-REPORT
  use-report NCRP-REPORT
  use-report NONE-REPORT
  do print-audit-rpt 
  do select-from-gexpyhst-current  ! RKK - 08/05/2009 
  do print-paper-details           ! RKK - 08/05/2009 
  use-column 0 

  print 'Total Transactions=' (+2,1)
  do Format-Number(#InputTran, $out, '99999')
  print $out ()
  print '     Total Successful Transactions=' ()
  do Format-Number(#success-count, $out, '99999')
  print $out ()
	

Report-Exit:

end-procedure
!********************************************************************
!This is the Report Header section 
!********************************************************************
begin-heading 12 FOR-REPORTS=(ERROR-REPORT)

 let $ReportID = $Report_pre||'LOG'
 move 'Update Pay Sheets with Pay Input Data - ERROR REPORT' to $reporttitle
  #Include 'stdhdg01.sqc'
  print 'Pay End Date=' (+1,1)
  print $pay_end_dt () 
  print '-' (+1,1,130) fill
!  print 'Tran#  EmplID       Company   Paygroup   Message' (+2,1)       ! RKK - 08/05/2009 
  print '  Time          Pay      Employee       Company   Paygroup   Message' (+2,1)  ! RKK - 08/05/2009 
  print 'Collection      Run         ID                                      ' (+1,1)  ! RKK - 08/05/2009 
  print '  Type          ID                                                  ' (+1,1)  ! RKK - 08/05/2009 
  print '-' (+1,1,130) fill
end-heading

! RKK 08/05/2009 - Begin
!********************************************************************
!This is the Report Header section 
!********************************************************************
!
!begin-heading 8 FOR-REPORTS=(NONC-REPORT)
! move 'Update Pay Sheets with Pay Input Data - ERROR REPORT- Non Critical' to $reporttitle
! let $ReportID = $Report_pre||'NNC'
!  #Include 'stdhdg01.sqc'
!  print 'Pay End Date=' (+1,1)
  

!  print $pay_end_dt () 
!  print '-' (+1,1,176) fill
!  print 'Tran#  EmplID       Company   Paygroup   Message' (+2,1)
!  print '-' (+1,1,176) fill
!end-heading
! RKK - 08/05/2009 - End
!********************************************************************
!This is the Report Header section 
!********************************************************************
begin-heading 8 FOR-REPORTS=(HIRE-REPORT)

 move 'Update Pay Sheets with Pay Input Data - ERROR REPORT - Missing Employees' to $reporttitle
 let $ReportID = $Report_pre||'HIR'
  #Include 'stdhdg01.sqc'
  print 'Pay End Date=' (+1,1)
  print $pay_end_dt () 
  print '-' (+1,1,176) fill
  print 'Tran#  EmplID       Company   Paygroup   Message' (+2,1)
  print '-' (+1,1,176) fill

end-heading
!*********************************************************************
!This procedure prints miscellaneous audits
!*********************************************************************
begin-procedure Misc-Audits

!display 'Paysheet Audits - begin: ' noline
date-time () hh:mi:ss &timeEnded
!display &timeEnded
new-page

move 'N' to $found
!let #inputtran = 0                  ISDVSXP FOR ITG 50644 11/10/2008
let $first = 'Y'
let #FT_Total_hours = 0
let #hrlyrt_exception = 0
let $Ft_total_hrs_exception = 'N'
let $FT_hrlyrt_exception = 'N'
let $vac_exception = 'N'
let #vac_hrs_aud = 0
let #ot_hrs_aud = 0
let $emplid_aud = ' '
let #sal_earns = 0
let #sal_reg_hrs = 0
let $sal_reg_exception = 'N'
let $ot_hrs_exception = 'N'
let #hol_hrs_aud = 0
let $hol_hrs_exception = 'N'

begin-select ON-ERROR=SQL-Error-Found('Misc-Audits')

S.COMPANY         
S.PAYGROUP        
S.DEPTID          
S.EMPLID
S.REG_HRS
S.REG_PAY
S.REG_PAY_HRS
S.REG_EARN_HRS
S.OT_HRS
R.ERNCD
R.OTH_HRS
R.oth_pay 
S.HOURLY_RT
O.FULL_PART_TIME
O.EMPL_TYPE


     move 'Y' to $found

     if $first = 'Y'
        move &S.EMPLID to $emplid_aud
        move &O.EMPL_TYPE to $prev_empl_type
        move 'N' to $first
     else
        if &S.EMPLID <> $emplid_aud  ! EMPLID change
! RKK - 08/05/2009 - Begin
!           if $prev_empl_type = 'S'
!             if #sal_reg_Hrs = 0 and #sal_earns = 0
!                let $sal_reg_exception = 'Y'
!             end-if
!           end-if

!           if #ot_hrs_aud > 40
!              let $ot_hrs_exception = 'Y'
!           end-if
! RKK - 08/05/2009 - End


           do check-exceptions


           move &S.EMPLID to $emplid_aud
           move &O.EMPL_TYPE to $prev_empl_type
           move &S.COMPANY to $company
           move &S.PAYGROUP to $paygroup
        end-if
     end-if


     if &O.EMPL_TYPE = 'S'
        add &S.REG_HRS to #sal_reg_hrs
        add &S.REG_EARN_HRS to #sal_reg_hrs
        add &R.OTH_HRS to #sal_reg_hrs
        add &S.REG_PAY to #sal_earns
        add &R.OTH_PAY to #sal_earns
     end-if

        
     evaluate &R.ERNCD
!**  SCM 1/9/2001  Added reg vaca earnings codes for Cleveland: '519', '522', '523'
       when = '519'
       when = '522'
       when = '523'         !End of vacation codes added    SCM 1/9/01        
       when = '515'
       when = '513'
	  add &R.OTH_HRS      to #vac_hrs_aud
          if #vac_hrs_aud > 40
           if $Pay_EndDt = $pay_end_dt
             let $vac_exception = 'Y'
           end-if
          end-if
	  break
       when = 'OTP'
	  add &R.OTH_HRS      to #ot_hrs_aud
	  break
       when = 'REG'
          if &O.EMPL_TYPE = 'S'
             add &R.OTH_HRS to #sal_reg_hrs
          end-if
	  break
       when = 'HOL'
       when = '502'
	  add &R.OTH_HRS to #hol_hrs_aud
          if #hol_hrs_aud > 8
             let $hol_hrs_exception = 'Y'
          end-if
	  break
     end-evaluate

        
 
     if &O.FULL_PART_TIME = 'F'
        add &S.REG_PAY_HRS to #FT_total_hours
        add &R.OTH_HRS to #FT_total_hours
        add &S.OT_HRS  to #FT_total_hours
        add &S.OT_HRS  to #ot_hrs_aud

        if #FT_total_hours > 100 and &O.EMPL_TYPE <> 'S'  !RKK Changed to 100 from 60
         if $Pay_EndDt = $pay_end_dt
           let $FT_total_hrs_exception = 'Y'
         end-if
        end-if

        if &S.HOURLY_RT > 30 and &O.EMPL_TYPE <> 'S'
           move &S.HOURLY_RT to #hrlyrt_exception
           let $FT_HRlyrt_exception = 'Y'
        end-if
     else
        add &S.OT_HRS       to #ot_hrs_aud
     end-if    

FROM PS_PAY_EARNINGS S, PS_PAY_OTH_EARNS R, PS_JOB O

WHERE S.PAY_END_DT = $pay_end_dt
  and S.COMPANY    = R.COMPANY(+)        
  and S.PAYGROUP   = R.PAYGROUP(+)
  and S.PAY_END_DT = R.PAY_END_DT(+)
  and S.OFF_CYCLE  = R.OFF_CYCLE(+)
  and S.PAGE_NUM      = R.PAGE_NUM(+)
  and S.LINE_NUM      = R.LINE_NUM(+)
  and S.ADDL_NBR      = R.ADDL_NBR(+)
  and S.EMPLID     = O.EMPLID
  and S.EMPL_RCD  = O.EMPL_RCD
  and S.OFF_CYCLE  = 'N'
  and O.EFFDT      = (select max(effdt)
			from ps_job
                       where emplid = O.EMPLID
                         and EMPL_RCD = O.EMPL_RCD
                         and effdt <= $pay_end_dt)
  and O.EFFSEQ     = (select max(effseq)
			from ps_job
                       where emplid = O.EMPLID
                         and EMPL_RCD = O.EMPL_RCD
                         and effdt = O.EFFDT)
  and O.EMPL_STATUS in ('A','L','P','S') !sxp ITG 50644 01/12/2009                       
ORDER BY S.EMPLID

end-select

! RKK - 08/05/2009 - Begin
! if $prev_empl_type = 'S'
!    if #sal_reg_Hrs = 0 and #sal_earns = 0
!      let $sal_reg_exception = 'Y'
!    end-if
! end-if

! if #ot_hrs_aud > 40
!    let $ot_hrs_exception = 'Y'
! end-if
! RKK - 08/05/2009 - End

 do check-exceptions

 !display 'Paysheet Audits - end: ' noline
 date-time () hh:mi:ss &timeEnded
 !display &timeEnded

end-procedure
!*********************************************************************
!This procedure checks any exceptions and prints them
!*********************************************************************
begin-procedure Check-Exceptions

!display 'Emplid: ' noline
!display $empl_aud
!display 'Company: ' noline
!display $company
!display 'Paygroup: ' noline
!display $paygroup
!display 'full time hrs exception:' noline
!display $ft_total_hrs_exception
!display 'Full Time Hourly Rt exception:' noline
!display $ft_hrlyrt_exception
!display 'Vacation Exception:' noline
!display $vac_exception
!display 'REgular Salary hours exception:' noline
!display $sal_reg_exception
!display 'OT exception:' noline
!display $ot_hrs_exception
!display 'HOL exception:' noline
!display $hol_hrs_exception

use-report error-report

if $FT_total_hrs_exception = 'Y' 
   move $emplid_aud to $emplid
   do error-found
   add 1 to #errorcount
!   display 'FT hours > 40'
!   print 'FT HOURLY TOTAL HOURS GREATER THAN 60' (,43)     ! RKK - 08/05/2009 
   print 'FT HOURLY TOTAL HOURS GREATER THAN 100' (,43)     ! RKK - 08/05/2009 
   print ';Hours calculated:' ()
   print #FT_total_hours ()
end-if

if $FT_hrlyrt_exception = 'Y' 
   move $emplid_aud to $emplid
   do error-found
   add 1 to #errorcount
!   display 'FT rt > $30'
   print 'FT HOURLY RATE EXCEEDS $30' (,43)
   print ';Hourly Rate calculated:' ()
   print #hrlyrt_exception ()
end-if

if $vac_exception = 'Y' 
   move $emplid_aud to $emplid
   do error-found
   add 1 to #errorcount
!   display 'Vac hours > 40'
   print 'VACATION HOURS EXCEEDS 40' (,43)
   print ';Hours calculated:' ()
   print #vac_hrs_aud ()
end-if

if $sal_reg_exception = 'Y' 
   move $emplid_aud to $emplid
   do error-found
   add 1 to #errorcount
   print 'SALARIED EE WITH NO HOURS OR EARNINGS' (,43)
end-if

if $ot_hrs_exception = 'Y' 
   move $emplid_aud to $emplid
   do error-found
   add 1 to #errorcount
!   display 'OT hrs > 40'
   print 'OT HOURS EXCEEDS 40' (,43)
   print ';Hours calculated:' ()
   print #ot_hrs_aud ()
end-if

if $hol_hrs_exception = 'Y' 
   move $emplid_aud to $emplid
   do error-found
   add 1 to #errorcount
!   display 'HOL hrs > 8'
   print 'HOLIDAY HOURS GREATER THAN 8' (,43)
   print ';Hours calculated:' ()
   print #hol_hrs_aud ()
end-if

let #FT_total_hours = 0
let $Ft_total_hrs_exception = 'N'
let $FT_hrlyrt_exception = 'N'
let #vac_hrs_aud = 0
let #ot_hrs_aud = 0
let #sal_reg_hrs = 0
let #sal_earns = 0
let #hrlyrt_exception = 0
let $vac_exception = 'N'
let $sal_reg_exception = 'N'
let $ot_hrs_exception = 'N'
let #hol_hrs_aud = 0
let $hol_hrs_exception = 'N'

end-procedure
!*********************************************************************
!This validates the pay-begin-date
!*********************************************************************
begin-procedure edit-pay-begin-dt
#debug9 show 'Edit-pay-begin-dt'

move 'N' to $found
do format-datetime($pay_begindt, $pay_begindt_dbf, {DEFMDY}, '', 'NATIVE')

begin-select ON-ERROR=SQL-ERROR-FOUND('edit-pay-begin-dt')
'A3'

    move 'Y' to $Found

from PS_PAY_CALENDAR
where PAY_BEGIN_DT = $pay_begindt_dbf

end-select

end-procedure
!*********************************************************************
!Validates the pay_end_Dt
!*********************************************************************
begin-procedure edit-pay-end-dt
  show 'edit-pay-end-dt'

move 'N' to $found
do format-datetime($pay_enddt, $pay_enddt_dbf, {DEFMDY}, '', 'NATIVE')

begin-select ON-ERROR=SQL-ERROR-FOUND('edit-pay-end-dt')

'R4'

    move 'Y' to $Found

from PS_PAY_CALENDAR
where PAY_END_DT = $pay_enddt_dbf  

end-select

end-procedure
!*********************************************************************
!Validates the company information
!Company value from the payline is used. One from the file is ignored.
!*********************************************************************
begin-procedure Edit-Company

 !display 'edit-company'

	let $Company = rtrim($Company,' ')
	let $Paygroup = rtrim($Paygroup,' ')
	let $EmplId9 = rtrim($EmplId9,' ')
	let $Empl_RcdNo = rtrim($Empl_RcdNo,' ')
   
     show 'Before Company-Check'
     show '$Company ' $Company
     show '$Paygroup ' $Paygroup
     show '$Pay_End_Dt ' $Pay_End_Dt
     show '$EmplId9 ' $EmplId9
     show '$Empl_RcdNo ' $Empl_RcdNo

	let $pl_company = ''

begin-select
pl.company	

	move &pl.company to $pl_company
	let $pl_company = rtrim($pl_company,' ')

	  show 'PL <' $pl_company '>'

from ps_pay_line pl
WHERE pl.pay_end_dt = $Pay_End_Dt
and pl.emplid = $EmplId9
and pl.empl_rcd = $Empl_RcdNo
end-select

	if $pl_company = ''
		  show 'Problem with Company'
		do Error-Found
     		print 'No Paysheet for Emplid = ' (,43)
     		print $EmplId9 ()
		print '; Transaction is rejected;' ()
     		print $transaction (+1,21) 
     		move ' ' to $Company
     		add 1 to #ErrorCount       
	else
	        !setting value from db to the variables.
		let $Company = $pl_company
	end-if

     show 'After Company-Check'
     show '$Company ' $Company
     show '$Paygroup ' $Paygroup
   
end-procedure 



!*********************************************************************
!Validates the paygroup information
!paygroup value from the payline is used. One from the file is ignored.
!*********************************************************************
begin-procedure edit-paygroup

! DXS, 01/04/07. Added this new procedure 

	let $Company = rtrim($Company,' ')
	let $Paygroup = rtrim($Paygroup,' ')
	let $EmplId9 = rtrim($EmplId9,' ')
	let $Empl_RcdNo = rtrim($Empl_RcdNo,' ')
   
     show 'Before Paygroup-Check'
     show '$Company ' $Company
     show '$Paygroup ' $Paygroup
     show '$Pay_End_Dt ' $Pay_End_Dt
     show '$EmplId9 ' $EmplId9
     show '$Empl_RcdNo ' $Empl_RcdNo

	let $pl_paygroup = ''

begin-select
pl.paygroup 

	move &pl.paygroup to $pl_paygroup
	let $pl_paygroup = rtrim($pl_paygroup,' ')

	  show 'PL <' $pl_paygroup '>'

from ps_pay_line pl
WHERE pl.pay_end_dt = $Pay_End_Dt
and pl.emplid = $EmplId9
and pl.empl_rcd = $Empl_RcdNo
end-select

	if $pl_paygroup = ''
		  show 'Problem with Paygroup'
 		do Error-Found
     		print 'No Paysheet for Emplid = ' (,43)
     		print $EmplId9 ()
		print '; Transaction is rejected;' ()
     		print $transaction (+1,21) 
     		move ' ' to $PayGroup
     		add 1 to #ErrorCount       	
	else
	        !setting value from db to the variables.
		let $Paygroup = $pl_paygroup
	end-if

     show 'After Paygroup-Check'
     show '$Company ' $Company
     show '$Paygroup ' $Paygroup

end-procedure
!*********************************************************************
!Validates the store information
!*********************************************************************
begin-procedure Edit-Store
  show 'edit-store'

lookup storelookup $store $store_lkp
lookup storelookuptc $store $store_tc

  if RTRIM($store,' ') <> RTRIM($store_lkp, ' ')
     !use-report nonc-report         ISDVSXP FOR ITG 50644 11/10/2008
!     use-report error-report         !ISDVSXP FOR ITG 50644 11/10/2008
!     do Error-Found
!     print 'Invalid input store# = ' (,43)
!     print $store ()
!     add 1 to #ErrorCount                
     do get-home-store  
     move $Home_Store to $Store
     use-report error-report
   else
	 do get-home-store
	 if $Found = 'N'
	    move $Store to $Home_Store
	 end-if 
   end-if       
   
	 
end-procedure
!*********************************************************************
!Retrieves the Home store for the employee
!*********************************************************************
begin-procedure get-home-store
  show 'get-home-store'

  move 'N' to $Found

begin-SELECT ON-ERROR=SQL-Error-Found('Get-Home-Store')
!*** SCM 05/23/2002 ** added alias (j) to ps_job to eliminate unnecessary errors showing on rpt
J.DEPTID                                          !SCM 05/23/2002 

	move &j.deptid to $Home_Store             !SCM 05/23/2002
	move 'Y' to $Found

FROM PS_JOB j                                     !SCM 05/23/2002
!ISDVSXP FOR ITG 50644 02/04/2009 -- start(commented below code and added code) 
!WHERE j.EMPLID = $EmplId                          !SCM 05/23/2002
 ! and j.EMPL_RCD = #empl_rcdno                    !SCM 05/23/2002   
 ! AND j.EFFDT =                                   !SCM 05/23/2002
!	    (SELECT MAX(C.EFFDT)
!	     FROM PS_JOB C
!	     WHERE C.EMPLID = $EmplID
!               and c.EMPL_RCD = #empl_rcdno 
!	       AND C.EFFDT <= $Pay_End_Dt)
 ! AND j.EFFSEQ =                                  !SCM 05/23/2002                                
!	    (SELECT MAX(C.EFFSEQ)
!	     FROM PS_JOB C
!	     WHERE C.EMPLID = $EmplID
 !              and c.EMPL_RCD= #empl_rcdno 
!	       AND C.EFFDT  = EFFDT)
!	       FROM PS_JOB 
 WHERE j.EMPLID = $EmplId                          
   and j.EMPL_RCD   = #empl_rcdno                   
   AND j.EFFDT = (SELECT MAX(C.EFFDT)  FROM PS_JOB C 
   WHERE J.EMPLID     = C.EMPLID 
   and  J.EMPL_RCD = C.EMPL_RCD 
   AND C.EFFDT <= $Pay_End_Dt) 
   AND j.EFFSEQ = (SELECT MAX(C.EFFSEQ) FROM PS_JOB C 
   WHERE J.EMPLID     = C.EMPLID 
    and  J.EMPL_RCD = C.EMPL_RCD 
    AND J.EFFDT  = C.EFFDT) 
!ISDVSXP FOR ITG 50644 02/04/2009 -- end(commented  code and added code) 
end-SELECT

  if $Found = 'N'
!      use-report nonc-report          ! RKK - 08/05/2009 
!	do Error-Found          !ISDVSXP FOR ITG 50644 02/05/2009
	!print 'Home Store Number Not Found' (,43)  !ISDVSXP FOR ITG 50644 02/04/2009
	move ' ' to $Home_Store
	add 1 to #ErrorCount
      use-report error-report
  end-if

end-procedure
!*********************************************************************
!Retrieves the home jobcode for the employee
!*********************************************************************
begin-procedure Edit-Home-Job-Cd
  show 'edit-home-job-cd'

  move 'N' to $Found

begin-SELECT ON-ERROR=SQL-Error-Found('Edit-Home-Job-Cd')
'N'
     move 'Y' to $Found
	
FROM PS_JOB A, PS_JOBCODE_TBL B  
WHERE A.EMPLID = $EmplId
  and A.EMPL_RCD = #empl_rcdno 
  AND A.JOBCODE = $Home_Job_Cd
  AND A.JOBCODE = B.JOBCODE
  AND B.EFF_STATUS = 'A'
  
  AND A.EFFDT =
	    (SELECT MAX(EFFDT)
	     FROM PS_JOB
	     WHERE EMPLID = $EmplID
               and EMPL_RCD = #empl_rcdno 
	       AND EFFDT <= $Pay_End_Dt)
  AND  A.EFFSEQ =
       (SELECT MAX(EFFSEQ)
	FROM   PS_JOB
	WHERE  EMPLID    = $EmplID
          and  EMPL_RCD = #empl_rcdno 
	  AND  EFFDT     = A.EFFDT)
end-SELECT

  if $Found = 'N'
!    use-report nonc-report       ! RKK - 08/05/2009 
  !  do Error-Found                 !ISDVSXP FOR ITG 50644 02/05/2009
    add 1 to #ErrorCount
    !print ' Invalid Home Job Code = ' (,43)      sxp ITG 50644 01/12/2009  
    !print $Home_job_Cd ()                        sxp ITG 50644 01/12/2009 
    use-report error-report
    do get-home-job-cd    
  end-if

end-procedure
!*********************************************************************
!Validates the Job code sent in the T&A 
!*********************************************************************
begin-procedure Edit-Work-Job-Cd
  show 'edit-work-job-cd'

lookup jobcodelookup $work_job_cd $jobcode_lkp

  if RTRIM($work_job_cd,' ') <> RTRIM($jobcode_lkp, ' ') 
!    use-report nonc-report     ! RKK - 08/05/2009 
  !  do error-found        !ISDVSXP FOR ITG 50644 02/05/2009
    add 1 to #ErrorCount
   ! print 'Invalid Work Job Code = ' (,43)       sxp ITG 50644 01/12/2009
    !print $work_job_Cd ()                        sxp ITG 50644 01/12/2009
    use-report error-report
    do get-home-job-cd
    move $Home_Job_Cd to $Work_Job_Cd
  else
    if RTRIM($home_job_cd, ' ') = ''
       do get-home-job-cd
       if $Found = 'N'
	  move $Work_Job_Cd to $Home_Job_Cd
       end-if      
    end-if
  end-if

end-procedure
!*********************************************************************
!Retrieves the home jobcode for the employee
!*********************************************************************
begin-procedure get-Home-Job-Cd
  show 'get-home-job-cd'

  move 'N' to $Found

begin-SELECT ON-ERROR=SQL-Error-Found('Get-Home-Job-Cd')
A.JOBCODE

     move 'Y' to $Found
     move &A.JOBCODE to $Home_Job_Cd         
	
FROM PS_JOB A
WHERE A.EMPLID = $EmplId
  AND A.EFFDT =
	    (SELECT MAX(EFFDT)
	     FROM PS_JOB
	     WHERE EMPLID = $EmplID
               and EMPL_RCD = #empl_rcdno 
	       AND EFFDT <= $Pay_End_Dt)
  AND  A.EFFSEQ =
       (SELECT MAX(EFFSEQ)
	FROM   PS_JOB
	WHERE  EMPLID    = $EmplID
               and EMPL_RCD = #empl_rcdno 
	  AND  EFFDT     = A.EFFDT)
  
end-SELECT

  if $Found = 'N'
    do Error-Found
    add 1 to #ErrorCount
    print 'Home Job Code is not found' (,43)
    move ' ' to $Home_Job_Cd
  end-if

end-procedure
!*********************************************************************
!Validates the home store# sent in the T&A
!*********************************************************************
begin-procedure Edit-Home-Dept-Cd
  show 'edit-home-dept-cd'

  move 'N' to $Found

begin-SELECT ON-ERROR=SQL-Error-Found('Edit-Home-Dept-Cd')
'O'
     move 'Y' to $Found
	
FROM PS_JOB A, PS_GEX_ACCT_CD_TBL  B  	!GEX-CXB 09/26/07 Added for Upgrade 9.0
WHERE A.EMPLID = $EmplId
  and a.EMPL_RCD = #empl_rcdno 
  AND A.ACCT_CD = $Home_Dept
  AND A.ACCT_CD = B.ACCT_CD
  AND B.EFF_STATUS = 'A'	!GEX-CXB 09/26/07 Added for Upgrade 9.0 
  
  AND A.EFFDT =
	    (SELECT MAX(EFFDT)
	     FROM PS_JOB
	     WHERE EMPLID = $EmplID
               and EMPL_RCD = #empl_rcdno 
	       AND EFFDT <= $Pay_End_Dt)
  AND  A.EFFSEQ =
       (SELECT MAX(EFFSEQ)
	FROM   PS_JOB
	WHERE  EMPLID  = $EmplID
          and  EMPL_RCD = #empl_rcdno 
	  AND  EFFDT   = A.EFFDT)
end-SELECT

  if $Found = 'N'
  !SXK 12/13/98 Begin
!    use-report nonc-report      ! RKK - 08/05/2009 
   ! do Error-Found        !ISDVSXP FOR ITG 50644 02/05/2009
    add 1 to #ErrorCount
    !print 'Invalid Home Dept Code = ' (,43)         sxp ITG 50644 01/12/2009 
    !print $home_dept ()                             sxp ITG 50644 01/12/2009
    use-report error-report
    do get-home-dept-cd
  end-if

end-procedure
!*********************************************************************
!Validates the Store# sent in the T&A
!*********************************************************************
begin-procedure Edit-Work-Dept-Cd
  show 'edit-work-dept-cd'

lookup acctcodelookup $work_dept $acctcode_lkp

  if RTRIM($work_dept,' ') <> RTRIM($acctcode_lkp, ' ') 
!    use-report nonc-report      ! RKK - 08/05/2009 
  !   do error-found        !ISDVSXP FOR ITG 50644 02/05/2009
     add 1 to #ErrorCount
     !print 'Invalid Work Department Code = ' (,43)   sxp ITG 50644 01/12/2009          
     !print $work_dept ()                             sxp ITG 50644 01/12/2009         
    use-report error-report
     do get-home-dept-cd
     move $Home_Dept to $Work_Dept
  else
     if RTRIM($home_dept,' ') = ''
	do get-home-dept-cd
	if $Found = 'N'
	   move $Work_Dept to $Home_Dept
	end-if 
     end-if
  end-if


end-procedure
!*********************************************************************
!Retrieves the home store# for the employee
!*********************************************************************
begin-procedure get-Home-dept-Cd
  show 'get-home-dept-cd'

  move 'N' to $Found

begin-SELECT ON-ERROR=SQL-Error-Found('Get-Home-Dept-Cd')
A.ACCT_CD

     move 'Y' to $Found
     move &A.ACCT_CD to $Home_Dept           
	
FROM PS_JOB A
WHERE A.EMPLID = $EmplId
  and a.EMPL_RCD = #empl_rcdno 
  AND A.EFFDT =
	    (SELECT MAX(EFFDT)
	     FROM PS_JOB
	     WHERE EMPLID = $EmplID
               and EMPL_RCD = #empl_rcdno 
	       AND EFFDT <= $Pay_End_Dt)
  AND A.EFFSEQ =
       (SELECT MAX(EFFSEQ)
	FROM   PS_JOB
	WHERE  EMPLID    = $EmplID
          and  EMPL_RCD = #empl_rcdno 
	  AND  EFFDT     = A.EFFDT)
  
end-SELECT


  if $Found = 'N'
    do Error-Found
    add 1 to #ErrorCount
    print 'Home Dept Code is not found' (,43)
    move ' ' to $Home_Dept
  end-if

end-procedure
!*********************************************************************
!Retrieves the home shift code for the employee
!*********************************************************************
begin-procedure get-Home-Shift-Cd
  show 'get-home-shift-cd'

 move 'N' to $Found

begin-SELECT ON-ERROR=SQL-Error-Found('Get-Home-Shift-Cd')
A.SHIFT

     move 'Y' to $Found
     move &A.SHIFT to $Home_ShiftCd          
	
FROM PS_JOB A  
WHERE A.EMPLID = $EmplId
  and a.EMPL_RCD = #empl_rcdno 
  AND A.EFFDT =
	    (SELECT MAX(EFFDT)
	     FROM PS_JOB
	     WHERE EMPLID = $EmplID
         and EMPL_RCD = #empl_rcdno 
	       AND EFFDT <= $Pay_End_Dt)
  AND A.EFFSEQ =
       (SELECT MAX(EFFSEQ)
	      FROM   PS_JOB
	      WHERE  EMPLID    = $EmplID
          and  EMPL_RCD = #empl_rcdno 
	        AND  EFFDT     = A.EFFDT)
  
end-SELECT

  if $Found = 'N'
    do Error-Found
    add 1 to #ErrorCount
    print 'Home Shift Code is not found' (,43)
    move ' ' to $Home_ShiftCd
  end-if

end-procedure
!*********************************************************************
!Validates the shift code sent in the T&A
!*********************************************************************
begin-procedure Edit-Shift-Cd
  show 'edit-shift-cd'

lookup shiftcodelookup $shiftcd $shiftcode_lkp

  if RTRIM($shiftcd,' ') <> RTRIM($shiftcode_lkp, ' ') 
    do error-found
    add 1 to #ErrorCount
    print 'Invalid Shift Code is found in the input' (,43)
    do get-home-Shift-cd
    move $home_shiftcd to $shiftcd
  else
    if RTRIM($home_shiftcd,' ') = ''
       do get-home-shift-cd
       if $Found = 'N'
	  move $shiftCd to $Home_ShiftCd
       end-if  
    end-if
  end-if

end-procedure
!*********************************************************************
!Retrieves the last page in the pay_page table for current period
!*********************************************************************
begin-procedure Get-Last-Page

 !display 'Get-Last-Page'
 !display 'Pay End date in last-page proc: ' noline
 !display $Pay_End_Dt
 !display 'Company in last-page proc: ' noline
 !display $Company
 !display 'Paygroup in last-page proc: ' noline
 !display $Paygroup

begin-select ON-ERROR=SQL-Error-Found('Get-Last-Page')
MAX(PAGE_NUM) &Page

  move &Page to #Page#
  !display 'Max Page : ' noline 
  !display &Page

FROM PS_PAY_PAGE
WHERE COMPANY = $Company
  AND PAYGROUP = $PayGroup
  AND PAY_END_DT = $Pay_End_Dt
  AND OFF_CYCLE = 'N'
end-select

end-procedure
!*********************************************************************
!Retrives the pay page, line information and checks the earnings code.
!If the earnings code is either 170 or 515, does the special processing
!*********************************************************************
begin-procedure Get-Page-Line

    show 'Doing Get-Page-Line'
    show '<' $Company '><' $PayGroup '><' $Pay_End_Dt '><' $EmplID '><' #Empl_RcdNo '>'
 
  move 'N' to $Found
  move 'N' to $insert-oth-earns
  move 'N' to $update-done

begin-SELECT ON-ERROR=SQL-Error-Found('Get-Page-Line')
K.PAGE_NUM
K.LINE_NUM
LL.ADDL_NBR
LL.HOURLY_RT

  move 'Y' to $Found
  EXIT-SELECT

FROM PS_PAY_LINE K, PS_PAY_EARNINGS LL
WHERE K.COMPANY    = $Company
  AND K.PAYGROUP   = $PayGroup
  AND K.PAY_END_DT = $Pay_End_Dt
  AND K.EMPLID     = $EmplID
  AND K.EMPL_RCD  = #Empl_RcdNo
  AND LL.COMPANY    = K.COMPANY
  AND LL.PAYGROUP   = K.PAYGROUP
  AND LL.PAY_END_DT = K.PAY_END_DT
  AND LL.OFF_CYCLE  = K.OFF_CYCLE
  AND LL.PAGE_NUM      = K.PAGE_NUM
  AND LL.LINE_NUM      = K.LINE_NUM
  AND K.MANUAL_CHECK = 'N'
! specify off_cycle indicator
  AND K.OFF_CYCLE = 'N'
end-select

  show '$Hours ' $Hours
  show '$erncd ' $erncd
  show '$Found ' $Found

 if (RTRIM($Hours,' ') = '') or ($Hours = '000000.00')
   move #hrlyRt to #oth_earns_ins
   move &LL.HOURLY_RT to #hrlyRt
else
   move 0 to #oth_Earns_ins 
end-if

 if $erncd = '515' and $Found = 'Y'
      do get-last-addl#
      do get-Employee-Data
      do get-Benefit-Program
      add +1 to #Addl#Oth
      do Add-Pay-Earnings
      if $ErrorFound = 'N'
         do Insert-Pay-Oth-Earns
         do Pay-Status-Update
      end-if
 else

   if $Found = 'Y'
      move &K.PAGE_NUM to #Page#Oth
      move &K.LINE_NUM to #Line#Oth

      evaluate $erncd
       when = '170'               ! Management Sunday Earnings  (170)
       when = '176'               ! Alternate PArt Time Rate (176)
      when = '167'               ! Pharmacy Premium earnings
	  show 'Doing Process-170or176or167'
       do Process-170or176or167

       if $Home_NE_Work = 'Y'
	    show 'Doing Get-Addl, after Process-170or176or167'
	  Do Get-Addl
       end-if
       break
     when-other
          show 'Doing Get-Addl, when-other'
       do Get-Addl
       break
    end-evaluate


    if $update-done = 'N'
      if $ErrorFound = 'N'
          show 'Doing Insert-Pay-Oth-Earns 1'
	do Insert-Pay-Oth-Earns
	  show 'Doing Pay-Status-Update 1'
	do Pay-Status-Update
      end-if
    end-if      
  else
    
    if $ErrorFound = 'N'
        show 'Doing Add-New-Line'
      do Add-New-Line
        show 'Doing Insert-Pay-Oth-Earns 2'
      do Insert-Pay-Oth-Earns
	  show 'Doing Pay-Status-Update 2'
	do Pay-Status-Update
    end-if
  end-if
 end-if

end-procedure
!*********************************************************************
begin-procedure get-last-addl#
begin-SELECT ON-ERROR=SQL-Error-Found('Get-Last-Addl#')
GLA.COMPANY
GLA.PAYGROUP
GLA.PAY_END_DT
GLA.OFF_CYCLE
GLA.PAGE_NUM
GLA.LINE_NUM
GLA.ADDL_NBR

      move &GLA.PAGE_NUM to #Page#Oth
      move &GLA.LINE_NUM to #Line#Oth
      move &GLA.ADDL_NBR to #Addl#Oth
    
      EXIT-SELECT

FROM PS_PAY_EARNINGS GLA
WHERE GLA.COMPANY  = $Company
  AND GLA.PAYGROUP   =  $PayGroup
  AND GLA.PAY_END_DT =  $Pay_End_Dt
  AND GLA.OFF_CYCLE = 'N'
  AND GLA.PAGE_NUM     = &K.PAGE_NUM
  AND GLA.LINE_NUM     = &K.LINE_NUM
ORDER BY GLA.COMPANY, GLA.PAYGROUP, GLA.PAY_END_DT,
GLA.OFF_CYCLE, GLA.PAGE_NUM, GLA.LINE_NUM, GLA.ADDL_NBR desc
end-select

end-procedure
!*********************************************************************
!For these earnings code there should be a row out there in the 
!other earnings table for the employee. If there is no home row 
!for this earnings code need to create one and report that instance 
!as an error. If a row exists update the information against that row
!********************************************************************* 
begin-procedure process-170or176or167          
   show 'process-170or176or167'

  move 'N' to $Found
  move 'N' to $insert-oth-earns
  move 'N' to $update-done

  show '<' $Company '><' $PayGroup '><' $Pay_End_Dt '><' #Page#Oth '><' #Line#Oth '>'
  show '<' $EmplID '><' #Empl_Rcdno '><' $Home_Store '><' $Home_Dept '><' $Home_Job_Cd '><' #SepChk '>'
  show '<' $Pay_BeginDt_dbf '><' $Pay_EndDt_dbf '><' $ErnCd '>'

begin-SELECT ON-ERROR=SQL-Error-Found('Process-170or176or167')
M.COMPANY
M.PAYGROUP
M.PAY_END_DT
! Add Emplid to select list for 'select-oth-pay' procedure
M.EMPLID
M.PAGE_NUM
M.LINE_NUM
M.ADDL_NBR
M.HOURLY_RT

    move 'Y' to $Found
    
    EXIT-SELECT

FROM PS_PAY_EARNINGS M
where M.COMPANY    = $Company
  and M.PAYGROUP   = $PayGroup
  and M.PAY_END_DT = $Pay_End_Dt
  and M.OFF_CYCLE  = 'N'
  and M.PAGE_NUM      = #Page#Oth
  and M.LINE_NUM      = #Line#Oth
  and M.EMPLID     = $EmplID
  and M.EMPL_RCD  = #Empl_Rcdno
  and M.DEPTID     = $Home_Store
  and M.ACCT_CD    = $Home_Dept
  and M.JOBCODE    = $Home_Job_Cd
  and M.SEPCHK     = #SepChk
  and M.EARNS_BEGIN_DT = $Pay_BeginDt_dbf
  and M.EARNS_END_DT  = $Pay_EndDt_dbf
  and M.ADDL_NBR in 
		(SELECT P.ADDL_NBR
		 from PS_PAY_OTH_EARNS P
		 where P.COMPANY    = $Company
		   and P.PAYGROUP   = $PayGroup
		   and P.PAY_END_DT = $Pay_End_Dt
		   and P.OFF_CYCLE  = 'N'
		   and P.PAGE_NUM      = #Page#Oth
		   and P.LINE_NUM      = #Line#Oth
		   and P.ADDL_NBR      = M.ADDL_NBR
		   and P.ERNCD      = $ErnCd)
ORDER BY M.COMPANY,
	 M.PAYGROUP,
	 M.PAY_END_DT,
	 M.PAGE_NUM,
	 M.LINE_NUM,
	 M.ADDL_NBR
end-select


  if $Found = 'N'
    if $Erncd <> '167'
	  show 'Doing get-addl-info, found = N and $Erncd <> 167'
	  show 'Before #Addl#Oth ' #Addl#Oth
    do get-addl-info
    move &MX.ADDL_NBR to #Addl#Oth
      show 'After #Addl#Oth ' #Addl#Oth
      show 'Before $ErrorFound ' $ErrorFound
      show 'After $ErrorFound ' $ErrorFound
    end-if 

    if $Erncd <> '515' 
	  show 'Found = N and erncd <> 515'
	  show 'Setting $Home_NE_Work and $insert-oth-earns = Y'
       move 'Y' to $Home_NE_Work   ! trigger new pay line
       move 'Y' to $insert-oth-earns
    else 
       move 'N' to $insert-oth-earns
       print '; Transaction is rejected' ()
       print $transaction (+1,21)
    end-if
  else
	  show 'Found = Y'
      if $Home_Store = $Store and
	 $Home_Dept  = $Work_Dept and
	 $Home_Job_Cd = $Work_Job_Cd
	  
 	 move &Addl#Oth to #Addl#Oth
		 let $Home_NE_Work = 'N'	! DXS, 02/20/07, needs to be reset
						! else it will always be yes once set
         if $erncd = '167'
		  show 'Doing select-oth-pay'
            do select-oth-pay
	      show '#pharm_count ' #pharm_count
            if #pharm_count >= 1
               let $home_ne_work = 'Y'
            else
		  show 'Doing update-oth-earnings 1'
        	 do update-oth-earnings
        	 move 'Y' to $update-done
            end-if
         else
		! DXS, 02/20/07, if we have 2 rows for same emplid with erncd 170 then the first one will be 
		! updated in the else condition and the 2nd one will be 
		! inserted via Get-Page-Line procedure 

		if $emplid = $gex_save_emplid and 
			#Empl_Rcdno = #gex_save_Empl_Rcdno and 
				$ErnCd = $gex_save_ErnCd
					  show 'Setting $update-done to N'
			            move 'N' to $update-done
				    move 'N' to $ErrorFound
	        else
			move $emplid to $gex_save_emplid
			move #Empl_Rcdno to #gex_save_Empl_Rcdno
			move $ErnCd to $gex_save_ErnCd
		
			  show 'Doing update-oth-earnings 2'
			do update-oth-earnings
		        move 'Y' to $update-done
		end-if
		! DXS, end 
         end-if
      else    
	 let $Home_NE_Work = 'Y'
      end-if
  end-if      

end-procedure
!*********************************************************************
!*********************************************************************
begin-procedure get-addl-info
  move 'N' to $addl_info_found

begin-SELECT ON-ERROR=SQL-Error-Found('Get-Addl-Info')
MX.COMPANY
MX.PAYGROUP
MX.PAY_END_DT
MX.PAGE_NUM
MX.LINE_NUM
MX.ADDL_NBR
MX.HOURLY_RT

    move 'Y' to $addl_info_found
    EXIT-SELECT

FROM PS_PAY_EARNINGS MX
where MX.COMPANY    = $Company
  and MX.PAYGROUP   = $PayGroup
  and MX.PAY_END_DT = $Pay_End_Dt
  and MX.OFF_CYCLE  = 'N'
  and MX.PAGE_NUM      = #Page#Oth
  and MX.LINE_NUM      = #Line#Oth
  and MX.EMPLID     = $EmplID
  and MX.EMPL_RCD  = #Empl_Rcdno
  and MX.DEPTID     = $Home_Store
  and MX.ACCT_CD    = $Home_Dept
  and MX.JOBCODE    = $Home_Job_Cd
  and not EXISTS
		(SELECT 'x'
		 from PS_PAY_OTH_EARNS 
		 where COMPANY    = $Company
		   and PAYGROUP   = $PayGroup
		   and PAY_END_DT = $Pay_End_Dt
		   and OFF_CYCLE  = 'N'
		   and PAGE_NUM      = #Page#Oth
		   and LINE_NUM      = #Line#Oth
		   and ADDL_NBR      = MX.ADDL_NBR
		   and ERNCD      = $ErnCd)
end-select

end-procedure
!*********************************************************************
!Checks if there is already an existing record out there for the 
!employee with this earnings code. If found, updates the information, 
!otherwise, inserts a new oth-earns row
!*********************************************************************
begin-procedure Get-Addl

  show '#hrlyrt ' #hrlyrt
 
if #hrlyrt <= 0
    show 'Doing Get-Employee-Data'
  do Get-Employee-Data
end-if

if $erncd = '170'
     show 'Doing select-addl-hrly-rt'
   do select-addl-hrly-rt
     show '$addl_found  ' $addl_found
     if $addl_found = 'Y'
      move #job_hrlyrt to #temp
      move #addl_hrly_rt to #hrlyrt
        show '#hrlyrt ' #hrlyrt
     end-if
end-if

 move 'N' to $Found

  show '<' $Company '><' $PayGroup '><' $Pay_End_Dt '><' #Page#Oth '><' #Line#Oth '><' $EmplID '><' #Empl_Rcdno '><' #SepChk '><' $ErnCd '>'


begin-SELECT ON-ERROR=SQL-Error-Found('Get-Addl')
L.COMPANY
L.PAYGROUP
L.PAY_END_DT
L.PAGE_NUM
L.LINE_NUM
L.ADDL_NBR
L.HOURLY_RT
L.SHIFT
L.DEPTID
L.JOBCODE
L.ACCT_CD
L.EARNS_BEGIN_DT
L.EARNS_END_DT
L.SEPCHK

!  display #hrlyrt
!  display $shiftcd
!  display $store
!  display $work_dept
!  display $work_job_cd
!  display &L.HOURLY_RT
!  display &L.SHIFT
!  display &L.DEPTID
!  display &L.JOBCODE
!  display &L.ACCT_CD


   if (#hrlyrt = &L.HOURLY_RT) and
      ($shiftcd = &L.SHIFT) and
     ($store = &L.DEPTID) and
     ($work_job_cd = &L.JOBCODE) and
     ($work_Dept = &L.ACCT_CD) 
     and (#sepchk = &L.sepchk) and
         ($Pay_BeginDt_dbf = &L.EARNS_BEGIN_DT) and
         ($Pay_EndDt_dbf = &L.EARNS_END_DT)
           show 'Set $Found to Y'
       move 'Y' to $Found
    EXIT-SELECT
   end-if


FROM PS_PAY_EARNINGS L
where L.COMPANY    = $Company
  and L.PAYGROUP   = $PayGroup
  and L.PAY_END_DT = $Pay_End_Dt
  and L.OFF_CYCLE  = 'N'
  and L.PAGE_NUM      = #Page#Oth
  and L.LINE_NUM      = #Line#Oth
  and L.EMPLID     = $EmplID
  and L.EMPL_RCD  = #Empl_Rcdno
  and L.SEPCHK     = #SepChk
  and not EXISTS
		(SELECT 'x'
		 from PS_PAY_OTH_EARNS O
		 where O.COMPANY    = $Company
		   and O.PAYGROUP   = $PayGroup
		   and O.PAY_END_DT = $Pay_End_Dt
		   and O.OFF_CYCLE  = 'N'
		   and O.PAGE_NUM      = #Page#Oth
		   and O.LINE_NUM      = #Line#Oth
		   and O.ADDL_NBR      = L.ADDL_NBR
		   and O.ERNCD      = $ErnCd)
ORDER BY L.COMPANY,
	 L.PAYGROUP,
	 L.PAY_END_DT,
	 L.PAGE_NUM,
	 L.LINE_NUM,
	 L.ADDL_NBR
end-select


  if $Found = 'Y'
    move &L.ADDL_NBR to #Addl#Oth
      show 'Doing Ok-To-Pay-Update'
    do Ok-To-Pay-Update
  else
      show 'Doing Get-Employee-Data, after select'
    do Get-Employee-Data
	  show '$ErrorFound ' $ErrorFound
    if $ErrorFound = 'N'
    	  show 'Doing Get-Addl-Max'
      do Get-Addl-Max
      move &Addl#Oth to #Addl#Oth
        show '#Addl#Oth ' #Addl#Oth
      add 1 to #Addl#Oth
        show '#Addl#Oth ' #Addl#Oth
        show 'Doing Add-Pay-Earnings'
      do Add-Pay-Earnings
    end-if
  end-if

end-procedure
!*********************************************************************
!Retrieves the ADDl# maximum for this particular page and line in the
!pay sheet
!*********************************************************************
begin-procedure Get-Addl-Max

    show 'get-addl-max'

begin-SELECT ON-ERROR=SQL-Error-Found('Get-Addl-Max')
MAX(U.ADDL_NBR) &Addl#Oth

FROM PS_PAY_EARNINGS U
where U.COMPANY    = $Company
  and U.PAYGROUP   = $PayGroup
  and U.PAY_END_DT = $Pay_End_Dt
  and U.OFF_CYCLE  = 'N'
  and U.PAGE_NUM      = #Page#Oth
  and U.LINE_NUM      = #Line#Oth
end-SELECT

end-procedure
!*********************************************************************
!Inserts into oth-earns table
!*********************************************************************
begin-procedure Insert-Pay-Oth-Earns
  display 'Insert-pay-oth-earns'

if $erncd = '167' 
	  show 'Doing select-addl-hrly-rt, for erncd 167'
   do select-addl-hrly-rt
	  show '$addl_found  ' $addl_found
     if $addl_found = 'Y'
       add #hours to #rx_hrs_covrt
       move $store to $store_upd
       move $company to $company_upd
       move $paygroup to $paygroup_upd
       !ISDVVXK-Remove rounding for erncd 167 Begins
       !multiply #hours times #addl_hrly_rt round=0
       multiply #hours times #addl_hrly_rt round=2
       !ISDVVXK-Remove rounding for erncd 167 Ends
       move #addl_hrly_rt to #oth_earns_ins
       !move 0 to #hours  AXL 11/18/2004 - don''t hide the HOURS
    else
      goto exit-insert
    end-if
   
end-if

 #ifdef debug8
  display '---------------------------'
  display 'emplid ' noline
  display $emplid
  display $company
  display $paygroup
  display $pay_end_Dt
  display #page#oth
  display #line#oth
  display #addl#oth
  display $erncd
  display #Hours			!oth_hrs
  display #oth_earns_ins		!oth_pay
  display '---------------------------'
 #endif

begin-SQL ON-ERROR=SQL-Error-Found('Insert-Pay-Oth-Earns')
! Add HRS_DIST_SW field to ps_pay_oth_earns insert
INSERT INTO PS_PAY_OTH_EARNS (COMPANY,
			      PAYGROUP,
			      PAY_END_DT,
			      OFF_CYCLE,
			      PAGE_NUM,
			      LINE_NUM,
			      ADDL_NBR,
			      ERNCD,
			      SEPCHK,
			      JOB_PAY,
			      OTH_HRS,
			      OTH_PAY,
			      OTH_EARNS,
			      ADD_GROSS,
			      TAX_METHOD,
			      ADDL_SEQ,
			      TL_SOURCE,
			      RATE_USED,
			      BAS_CREDIT_SW,
			      COMP_RATECD,		!sxk 01/05/00
			      COMPRATE,			!SXK 01/05/00
			      COMPRATE_USED,		!SXK 01/05/00
            HRS_DIST_SW,              !GBD 11/13/02
            XREF_NUM,                 !GBD 11/13/02
            EX_DOC_ID,                !GBD 11/13/02
            EX_DOC_TYPE,              !GBD 11/13/02
            EX_LINE_NBR,              !GBD 11/13/02
            CURRENCY_CD,              !GBD 11/13/02
            VC_PLAN_ID,               !GBD 11/13/02
            VC_PAYOUT_PRD_ID,         !GBD 11/13/02
            GB_GROUP_ID,              !GBD 11/13/02
            APPLID,                   !GBD 11/13/02
            AWARD_DATE,               !GBD 11/13/02
            NOTIFY_STATUS,		!GBD 11/13/02
            EIM_KEY)
VALUES(     $Company,
			      $paygroup,
			      $pay_end_dt,
			      'N',                      !Off cycle
			      #Page#Oth,
			      #Line#Oth,
			      #Addl#Oth,
			      $ErnCd,
			      #Sepchk, 
			      'N',                      !job_pay
			      #Hours,                   !oth_hrs
			      #oth_earns_ins,           !oth_pay
			      0,                        !oth_earns
			      'N',                      !add_gross
			      'A',                      !tax_method
			      01,                       !Addl_seq
			      'G',                      !TL_source
			      'H',                      !Rate_used
			      'N',                      !BAS_CREDIT_SW
			      ' ',      !SXK 01/05/00    COMP_RATECD
			      0,	!SXK 01/05/00    COMPRATE
			      0,	!SXK 01/05/00    comprate_used 
            'N',                      !hrs_dist_sw
            0,                        !GBD 11/13/02 - xref_num
            ' ',                      !GBD 11/13/02 - ex_doc_id
            ' ',                      !GBD 11/13/02 - ex_doc_type
            0,                        !GBD 11/13/02 - ex_line_nbr
            ' ',                      !GBD 11/13/02 - currency_cd
            ' ',                      !GBD 11/13/02 - vc_plan_id
            ' ',                      !GBD 11/13/02 - vc_payout_prd_id
            ' ',                      !GBD 11/13/02 - gb_group_id
            ' ',                      !GBD 11/13/02 - applid
            '',                       !GBD 11/13/02 - award_date
            'N',
            ' ')                  
end-SQL

evaluate $ErnCd 
!**  SCM 1/9/2001  Added reg vaca earnings codes for Cleveland: '519', '522', '523'
when = '519'
when = '522'
when = '523'         !End of reg vacation codes added    SCM 1/9/2001
when = '515'
when = '513'    ! Vacation or Part-Time Vacation
   do get-sum-line-hrs
   move &hours_sum to #hours_sum
   if #Hours_sum > 40
      let #Tax_Periods = floor(#Hours_sum/40)
      do update-tax-periods-per-line
   end-if
   break
end-evaluate

exit-insert:
      
end-procedure
!*********************************************************************
!For earnings code 515, 513, if the total hours exceeds 40, need to 
!prorate the tax_periods
!*********************************************************************
begin-procedure get-sum-line-hrs
  show 'get-sum-line-hrs'

begin-SELECT ON-ERROR=SQL-Error-Found('Get-Sum-Line-Hrs')
SUM(L1.OTH_HRS) &Hours_sum

FROM PS_PAY_EARNINGS V, PS_PAY_OTH_EARNS L1
where V.COMPANY    = $Company
  and V.PAYGROUP   = $PayGroup
  and V.PAY_END_DT = $Pay_End_Dt
  and V.OFF_CYCLE  = 'N'
  and V.PAGE_NUM      = #Page#Oth
  and V.LINE_NUM      = #Line#Oth
  and V.ADDL_NBR      = #Addl#Oth
  and V.COMPANY    = L1.COMPANY
  and V.PAYGROUP   = L1.PAYGROUP
  and V.PAY_END_DT = L1.PAY_END_DT
  and V.OFF_CYCLE  = L1.OFF_CYCLE
  and V.PAGE_NUM      = L1.PAGE_NUM
  and V.LINE_NUM      = L1.LINE_NUM
! sum hours across addl#s only where sepchk <> 0
! this hours balance is used in the tax periods calculation
  and V.SEPCHK     = L1.SEPCHK
  and V.SEPCHK <> 0

end-SELECT

end-procedure
!*********************************************************************
!Updates the tax periods for earnings codes 515, 513 if the total
!hours exceeds 40
!*********************************************************************
begin-procedure Update-tax-periods-per-line
  show 'update-tax-periods-per-line'

begin-SQL ON-ERROR=SQL-Error-Found('Update-Tax-Periods-per-line')
   UPDATE  PS_PAY_EARNINGS
    SET   TAX_PERIODS  = #Tax_Periods
   where  COMPANY    = $Company
     and  PAYGROUP   = $PayGroup
     and  PAY_END_DT = $Pay_End_Dt
     and  OFF_CYCLE  = 'N'
     and  PAGE_NUM      = #Page#Oth
     and  LINE_NUM      = #Line#Oth
     and  SEPCHK     <> 0
end-SQL

end-procedure
!*********************************************************************
!updates the oth-earns information
!*********************************************************************
begin-procedure update-oth-Earnings
  show 'update-oth-earnings'

if $erncd = '167' 

   do select-addl-hrly-rt
   if $addl_found = 'Y'
       add #hours to #rx_hrs_covrt
       move $store to $store_upd
       move $company to $company_upd
       move $paygroup to $paygroup_upd
      multiply #hours times #addl_hrly_rt round=2   !AXL 11/18/2004 Round to 2
      move #addl_hrly_rt to #hrlyrt
   else
      goto exit-update
   end-if
end-if

if $erncd = '167'
 do get-167-line
end-if

if (RTRIM($Hours,' ') = '') or (RTRIM($erncd,' ') = '167')
   
  if RTRIM($Hours,' ') = ''
     do update1
  else
     do update2	!167 path
  end-if
else

begin-SQL ON-ERROR=SQL-Error-Found('Update-Oth-Earns')
   UPDATE PS_PAY_OTH_EARNS
    SET   OTH_HRS = #Hours,
          tl_source = 'G' 
   where  COMPANY    = $Company
     and  PAYGROUP   = $PayGroup
     and  PAY_END_DT = $Pay_End_Dt
     and  OFF_CYCLE  = 'N'
     and  PAGE_NUM      = #Page#Oth
     and  LINE_NUM      = #Line#Oth
     and  ADDL_NBR      = &M.ADDL_NBR
     and  ERNCD      = $ErnCd

end-SQL

     move &M.ADDL_NBR  to #ADDl#Oth
end-if

! update ok_to_pay on pay_earnings lines associated with the oth_earns
! lines above. 
  do Ok-To-Pay-Update

  Do Check-Payment-Type                             !GBD 07/11/2003

evaluate $ErnCd 
when = '519'
when = '522'
when = '523'         !End of vacation codes added    SCM 1/9/2001
when = '515' 
when = '513'    ! Vacation or Part-Time Vacation
   do get-sum-line-hrs
   move &hours_sum to #hours_sum

   if #Hours_sum > 40

      let #Tax_Periods = floor(#Hours_sum/40)
     
      do update-tax-periods-per-line
   end-if
end-evaluate

exit-update:

end-procedure

Begin-Procedure Update1
begin-SQL ON-ERROR=SQL-Error-Found('Update-Oth-Earnings')
   UPDATE PS_PAY_OTH_EARNS
     SET   oth_pay    = #HrlyRt,
          tl_source  = 'G'
   where  COMPANY    = $Company
     and  PAYGROUP   = $PayGroup
     and  PAY_END_DT = $Pay_End_Dt
     and  OFF_CYCLE  = 'N'
     and  PAGE_NUM      = #Page#Oth
     and  LINE_NUM      = #Line#Oth
     and  ADDL_NBR      = #ADDL#Oth
     and  ERNCD      = $ErnCd
end-SQL
end-procedure

Begin-Procedure Update2
begin-SQL ON-ERROR=SQL-Error-Found('Update-Oth-Earnings')
   UPDATE PS_PAY_OTH_EARNS
    SET   oth_pay    = 0,
          OTH_HRS    = #Hours,	
          tl_source  = 'G'
   where  COMPANY    = $Company
     and  PAYGROUP   = $PayGroup
     and  PAY_END_DT = $Pay_End_Dt
     and  OFF_CYCLE  = 'N'
     and  PAGE_NUM      = #Page#Oth
     and  LINE_NUM      = #Line#Oth
     and  ADDL_NBR      = #ADDL#Oth
     and  ERNCD      = $ErnCd
end-SQL

end-procedure
!**************************************************************
! Check the Payment_Type value of the earnings code
!***************************************************************
begin-procedure Check-Payment-Type

  let $check_payment_type = ' '

begin-select
CPT.PAYMENT_TYPE

  let $check_payment_type = &CPT.PAYMENT_TYPE

FROM PS_EARNINGS_TBL CPT
WHERE CPT.ERNCD = $ErnCd
AND   CPT.EFFDT = (SELECT MAX(EFFDT)
      FROM PS_EARNINGS_TBL
      WHERE ERNCD = CPT.ERNCD
      AND   EFFDT <= $Pay_End_Dt)

end-select

  if $check_payment_type = 'B' and $ErnCd <> '167' !AXL 11/18/2004 Exclude 167 
  
begin-SQL ON-ERROR=SQL-Error-Found('Check-Payment-Type')
   UPDATE PS_PAY_OTH_EARNS
    SET   COMPRATE    = 0
   where  COMPANY    = $Company
     and  PAYGROUP   = $PayGroup
     and  PAY_END_DT = $Pay_End_Dt
     and  OFF_CYCLE  = 'N'
     and  PAGE_NUM      = #Page#Oth
     and  LINE_NUM      = #Line#Oth
     and  ADDL_NBR      = #ADDL#Oth
     and  ERNCD      = $ErnCd
end-SQL
     
  end-if

end-procedure
!**************************************************************
! Find Payline for EE that contains the 167 erncd from Addl PAy
!***************************************************************
begin-procedure get-167-line

begin-SELECT
RXO.Company
RXO.Paygroup
RXO.Pay_end_dt
RXO.Off_cycle
RXO.PAGE_NUM
RXO.LINE_NUM
RXO.ADDL_NBR

  move &RXO.Company to $Company
  move &RXO.Paygroup to $Paygroup
  move &RXO.Pay_end_dt to $pay_End_dt
  move &RXO.PAGE_NUM   to #Page#Oth
  move &RXO.LINE_NUM   to #Line#Oth
  move &RXO.ADDL_NBR   to #Addl#Oth
   
 from ps_pay_earnings RX,
      ps_pay_oth_earns RXO
 where   RX.COMPANY    = $Company
     and  RX.PAYGROUP   = $PayGroup
     and  RX.PAY_END_DT = $Pay_End_Dt
     and  RX.OFF_CYCLE  = 'N'
     and  RX.Company  = RXO.Company
     and  RX.Paygroup = RXO.Paygroup
     and  RX.Pay_end_dt = RXO.Pay_end_dt
     and  RX.OFF_CYCLE = RXO.Off_Cycle
     and  RX.PAGE_NUM =  RXO.PAGE_NUM
     and  RX.LINE_NUM =  RXO.LINE_NUM
     and  RX.ADDL_NBR =  RXO.ADDL_NBR
     and  RX.Emplid = $emplid
     and  RXO.ERNCD      = $ErnCd
end-SELECT
end-procedure

!*********************************************************************
!updates the ok_to_pay in earnings table
!*********************************************************************
begin-procedure Ok-To-Pay-Update
  show 'ok-to-pay-update'

begin-SQL ON-ERROR=SQL-Error-Found('Ok-To-Pay-Update')
UPDATE PS_PAY_EARNINGS
SET OK_TO_PAY='Y'
WHERE COMPANY      = $company
  AND PAYGROUP     = $paygroup
  AND PAY_END_DT   = $Pay_End_Dt
  AND OFF_CYCLE    = 'N'
  AND PAGE_NUM        = #Page#Oth
  AND LINE_NUM        = #Line#Oth
  AND ADDL_NBR        = #Addl#Oth

end-SQL

end-procedure

!*********************************************************************
!Updates the pay-status informatin by using a temporary table
!*********************************************************************
begin-procedure Pay-Status-Update
  show 'pay-status-update'

begin-SQL ON-ERROR=SQL-Error-Found('Pay-Status-Update')
 DELETE FROM PS_WRK_EARNINGS
end-SQL

begin-sql ON-ERROR=SQL-Error-Found('Pay-Status-Update')
UPDATE PS_PAY_EARNINGS
SET PAY_LINE_STATUS='U',
    OK_TO_PAY = 'Y'
where COMPANY    = $company
  and PAYGROUP   = $paygroup
  and PAY_END_DT = $Pay_End_Dt
  and OFF_CYCLE  = 'N'
  and PAGE_NUM      = #Page#Oth
  and LINE_NUM      = #Line#Oth
end-sql

end-procedure
!*********************************************************************
!Adds a new line in the paysheet
!*********************************************************************
begin-procedure Add-New-Line
  show 'add-new-line'

!    show 'Doing  Get-Employee-Data'
  do Get-Employee-Data

  if $ErrorFound = 'N'
     display #page#
    display #page#save
    if #Page# <> #Page#Save
      move #Page# to #Page#Save
  	  show 'Doing Add-Page'
  	do Add-Page
      move 1 to #line#
    end-if

    move #Line# to #Line#Save
	  show 'Doing Get-Benefit-Program'
    do Get-Benefit-Program
      show 'Doing Add-Line'
    do Add-Line
    move #Page#Save to #Page#Oth
    move #Line#Save to #Line#Oth
    move 0 to #Addl#Oth
      show 'Doing Add-Pay-Earnings'
    do Add-Pay-Earnings

    if #line# = 7
      add 1 to #Page#
      move 1 to #line#
    else
      add 1 to #line#
    end-if
  end-if

end-procedure
!*********************************************************************
!Retrieves the employee information
!*********************************************************************
begin-procedure Get-Employee-Data

    show 'get-employee-data'

  move 'N' to $Found

begin-select ON-ERROR=SQL-Error-Found('Get-Employee-Data')
A1.EMPLID
A1.NAME
D1.DED_SUBSET_ID
D1.DED_TAKEN
B1.BENEFIT_RCD_NBR
C1.JOBCODE
C1.DEPTID
C1.GL_PAY_TYPE
C1.POSITION_NBR
C1.SHIFT
C1.EMPL_TYPE
C1.LOCATION
C1.HOURLY_RT
C1.EFFDT
C1.FICA_STATUS_EE
C1.FLSA_STATUS

  move 'Y' to $Found

  FROM PS_PERSONAL_DATA A1,
       PS_EMPLOYMENT B1,
       PS_JOB C1,
       PS_DED_NA D1
 WHERE A1.EMPLID    = $EmplID
   AND B1.EMPLID    = A1.EMPLID
   AND B1.EMPLID = D1.EMPLID
   AND B1.EMPL_RCD = D1.EMPL_RCD
   AND C1.EMPLID    = A1.EMPLID
   AND B1.EMPL_RCD = C1.EMPL_RCD
   AND B1.EMPL_RCD = #Empl_RcdNo
   AND C1.EFFDT =
       (SELECT MAX(EFFDT)
	FROM   PS_JOB
	WHERE  EMPLID    = $EmplID
	  AND  EMPL_RCD = #Empl_RcdNo
	  AND  EFFDT    <= $Pay_End_Dt)
  AND  C1.EFFSEQ =
       (SELECT MAX(EFFSEQ)
	FROM   PS_JOB
	WHERE  EMPLID    = $EmplID
	  AND  EMPL_RCD = #Empl_RcdNo
	  AND  EFFDT     = C1.EFFDT)
  
end-select
 
  if isnull(&C1.position_nbr) = 1
     move '   ' to $position_nbr
  else
     move &C1.position_nbr to $position_nbr
  end-if

  if isnull(&C1.GL_PAY_TYPE) = 1
     move ' ' to $Gl_Pay_type
  else
     move &C1.Gl_Pay_type to $Gl_Pay_Type
  end-if
  
  if isnull(&B1.Benefit_rcd_nbr) = 1
     move 0 to #Benefit_Rcd#
  else
     move &B1.Benefit_Rcd_nbr to #Benefit_Rcd#
  end-if
  if isnull(&D1.Ded_Taken) = 1
     move 'D' to $DedTaken
  else
      move &D1.Ded_Taken to $DedTaken
  end-if
  
  if isnull(&D1.Ded_subset_id) = 1
     move '   ' to $DedSubsetId
  else
  move &D1.Ded_subset_id to $DedSubsetId
  end-if
  move '   ' to $DedSubsetId
  if #hrlyrt <= 0
    if isnull(&C1.Hourly_Rt) = 1
       move 0 to #job_hrlyrt
    else
       move &C1.Hourly_Rt to #job_HrlyRt
       move #job_hrlyrt to #hrlyrt
    end-if
  end-if

  if $Found = 'N'
    use-report error-report         !ISDVSXP FOR ITG 50644 11/10/2008
    do Error-Found
    add 1 to #ErrorCount
    print 'EmplID Not Found(Personal_Data, Employment and Job)' (,43)
    print '; Transaction is rejected;' ()
    print $transaction (+1,21) 
 end-if

end-procedure
!*********************************************************************
!Inserts a new page in the paysheet
!*********************************************************************
begin-procedure Add-Page

 display 'add-page'

 display $company
 display $paygroup
 display $pay_end_dt
 !display #page_num
 display #page#

 
begin-SQL ON-ERROR=SQL-Error-Found('Add-Page')
INSERT INTO PS_PAY_PAGE ( COMPANY,
			  PAYGROUP,
			  PAY_END_DT,
			  OFF_CYCLE,
			  PAGE_NUM,
			  CONFIRMED,
			  BALNC_LINES,
			  BALNC_LINES_OK,
			  BALNC_REG_PAY_HRS,
			  BALNC_OT_HRS,
			  BALNC_OTH_HRS,
			  BALNC_REG_PAY,
			  BALNC_OTH_EARNS,
			  BALNC_HOURLY_RT,
			  SINGLE_CHECK_USE,
			  PAY_SHEET_SRC)
VALUES                  ( $Company,
			  $paygroup,
			  $pay_end_dt,
			  'N',
			  #page#,
			  'N',
			  0,
			  0,
			  0,
			  0,
			  0,
			  0,
			  0,
			  0,
			'N',
			'S')
end-SQL

end-procedure
!*********************************************************************
!Get Current Benefit Program of the Employee
!*********************************************************************
begin-procedure Get-Benefit-Program

move 'N' to $beninfo_found

       show 'Get-Benefit-Program'

begin-select ON-ERROR=SQL-Error-Found('Get-Benefit-Program')
BPP.BENEFIT_PROGRAM   &BPP.benefit_program

     move 'Y' to $beninfo_found

FROM PS_BEN_PROG_PARTIC BPP

WHERE BPP.EMPLID = $emplid
  AND BPP.EMPL_RCD = #Empl_RcdNo
  AND BPP.EFFDT = (SELECT MAX(EFFDT)
                FROM PS_BEN_PROG_PARTIC BPPA
                WHERE BPPA.EMPLID = $emplid
                AND BPPA.EMPL_RCD = #Empl_RcdNo
                AND BPPA.EFFDT <= $Pay_End_Dt)
 
end-select 

if $beninfo_found = 'N'
   do error-found
   print 'No Benefit Program information found' (,43)
end-if

end-procedure
!*********************************************************************
!insets a new line in the pay sheet
!*********************************************************************
begin-procedure Add-Line
  show 'add-line'

 let $bu_lkp = ' '

 lookup bulookup 'COMMN' $bu_lkp  

 !  show 'pay line '  $bu_lkp ' ' &c1.deptid

begin-SQL ON-ERROR=SQL-Error-Found('Add-Line')
INSERT INTO PS_PAY_LINE ( COMPANY,
			  PAYGROUP,
			  PAY_END_DT,
			  OFF_CYCLE,
			  PAGE_NUM,
			  LINE_NUM,
			  EMPLID,
			  EMPL_RCD,
			  BENEFIT_RCD_NBR,
			  NAME,
			  JOB_CHANGE,
			  PARTIAL_PERIOD,
			  CONFIRMED,
			  EMPL_TYPE,
			  LOCATION,
			  DEPTID,
			  BENEFIT_PROGRAM,
			  MANUAL_CHECK,
			  FORM_ID,
			  PAYCHECK_NBR,
			  CHECK_DT,
			  TOTAL_GROSS,
			  NET_PAY,
			  PAYCHECK_ADJUST,
			  SINGLE_CHECK_USE,
			  TL_SOURCE,
			  PAY_SHEET_SRC,
			  BUSINESS_UNIT,        !SXK 01/05/00
        LOCKED_FOR_CONF)      !GBD 11/13/02
VALUES( $company,
			  $paygroup,
			  $Pay_End_Dt,
			  'N',
			  #page#,
			  #line#,
			  $emplid,
			  #Empl_RcdNo,
			  #Benefit_Rcd#,
			  &A1.name,
			  'N',
			  'N',
			  'N',
			  &C1.empl_type,
			  &C1.location,
			  &C1.deptid,
			  &BPP.benefit_program, !JNB 08/30/1999
			  'N',
			  '      ',
			  0,
			  NULL,
			  0,
			  0,
			  'N',
			 'N',
			 'G',
			 'S',
			 $bu_lkp,
       'N')                   !GBD 11/13/02 - locked_for_conf
end-SQL

end-procedure
!*********************************************************************
!Adds information to Earnings table
!*********************************************************************
begin-procedure Add-Pay-Earnings

  if #hrlyrt <= 0
     move &C1.HOURLY_RT to #job_hrlyRt
  else
     move #hrlyRt to #job_hrlyRt    
  end-if

if ($erncd = '167' or $erncd = '170' or $erncd = '515' or $erncd = '176')
   do select-addl-hrly-rt
     if $addl_found = 'Y'
      move #job_hrlyrt to #temp
      move #addl_hrly_rt to #job_hrlyrt
     end-if
end-if

 let $bu_lkp = ' '

 lookup bulookup 'COMMN' $bu_lkp  
 
 !  show 'pay earnings ' $bu_lkp ' ' $work_dept

if $ErrorFound = 'Y'
 goto exit-insert-earnings
end-if

   do get-state-locality

    show 'add-pay-earnings'

  move 'Y' to $Addl_Taxes        ! default, take additional taxes
				 ! change to 'N' to not take addl taxes
    

!  display 'EMPLID: ' noline
!  display $emplid
!  display 'Pay Earnings rate: ' noline
!  display #job_HrlyRt  

  show '<' $Company '><' $paygroup  '><' $pay_End_dt '><' #Page#Oth '><' #Line#Oth '><' #Addl#Oth '><' #SepChk '><' $emplid '><' #Empl_RcdNo '>'
			      
			      
begin-SQL ON-ERROR=SQL-Error-Found('Add-Pay-Earnings')
INSERT INTO PS_PAY_EARNINGS ( COMPANY,
			      PAYGROUP,
			      PAY_END_DT,
			      OFF_CYCLE,
			      PAGE_NUM,
			      LINE_NUM,
			      ADDL_NBR,
			      SEPCHK,
			      EMPLID,
			      EMPL_RCD,
			      BENEFIT_RCD_NBR,
			      EARNS_BEGIN_DT,
			      EARNS_END_DT,
			      ADDLPAY_REASON,
			      DISABLE_DIR_DEP,
			      GROSSUP,
			      PAY_LINE_STATUS,
			      OK_TO_PAY,
			      JOB_PAY,
			      SINGLE_CHECK_USE,
			      ACCT_CD,
			      GL_PAY_TYPE,
			      DEPTID,
			      JOBCODE,
			      POSITION_NBR,
			      SHIFT,
			      SHIFT_RT,
			      HOURLY_RT,
			      FLSA_RT,
			      RATE_USED,
			      FLSA_REQUIRED,
			      ERNCD_REG_HRS,
			      ERNCD_OT_HRS,
			      REG_PAY_HRS,
			      REG_HRS,
			      OT_HRS,
			      REG_HRLY_EARNS,
			      OT_HRLY_EARNS,
			      ERNCD_REG_EARNS,
			      REG_PAY,
			      REG_EARNS,
			      REG_EARN_HRS,
			      DED_TAKEN,
			      DED_SUBSET_ID,
			      DED_TAKEN_GENL,          !CWB 01/09/2003
            DED_SUBSET_GENL,         !CWB 01/09/2003   
			      STATE,
			      LOCALITY,
			      PAY_FREQUENCY,
			      TAX_PERIODS,
			      TAX_METHOD,
			      ADDL_TAXES,
			      OVERRIDE_HOURLY_RT,
			      TL_SOURCE,
			      PAY_SHEET_SRC,
			      BUSINESS_UNIT,  		!sxk 01/05/00
			      EI_PRIOR_PD_CORR,
			      COMP_RATECD_REG,		!SXK 01/05/00
			      COMP_RATECD_OT,		!SXK 01/05/00
			      COMPRATE_USED_REG,	!SXK 01/05/00
			      COMPRATE_USED_OT,		!SXK 01/05/00
            FICA_STATUS_EE,           !GBD 11/13/02
            PAID_PRDS_PER_YEAR,       !GBD 11/13/02
            FLSA_END_DT,              !GBD 11/13/02
            ORIG_PAYGROUP,            !GBD 11/13/02
            FLSA_STATUS,              !GBD 11/13/02
            XREF_NUM,                 !GBD 11/13/02
            UNION_CD,                 !GBD 11/13/02
            BEN_DED_STATUS,           !CWB 01/09/2003
            GENL_DED_STATUS)          !CWB 01/09/2003
VALUES(     $Company,
			      $paygroup,
			      $pay_End_dt,
			      'N',
			      #Page#Oth,
			      #Line#Oth,
			      #Addl#Oth,
			      #SepChk,
			      $emplid,
			      #Empl_RcdNo,
			      #Benefit_Rcd#,
            $Pay_BeginDt_dbf,
            $Pay_EndDt_dbf,
			      '   ',
			      'N',
			      'N',
			      'I',
			      'Y',
			      'N',
			      'N',
			      $Work_Dept,
			      $gl_pay_type,
			      $Store,
			      $Work_Job_Cd,
			      $Position_Nbr,
			      $shiftCd,
			      0,
			      #job_HrlyRt,
			      0,
			      'H',
			      !'N', !GEXPY_848_E115995_01 2011-12-20 Vahini Katta Begins
			      'Y',  !GEXPY_848_E115995_01 2011-12-20 Vahini Katta Begins
			      'REG',
			      'OTP',
			      0,
			      0,
			      0,
			      0,
			      0,
			      'REG',
			      0,
			      0,
			      0,
			      $DedTaken,
			      $DedSubsetId,
            'D',                  !CWB 01/09/2003
            ' ',                  !CWB 01/09/2003   
			      $state,
			      $locality, 
			      'W',
			      1,
			      'A',
			      $Addl_Taxes,
   		      'Y',
			      'G',
			      'S',
			      $bu_lkp,  		!SXK 01/05/00
			      'N',	
			      ' ',		        !SXK 01/05/00
			      ' ',		        !SXK 01/05/00
			      0,		        !SXK 01/05/00
			      0,		        !SXK 01/05/00
            &C1.FICA_STATUS_EE,        ! CJH - 02/19/2003 - added variable rather than hardcode
            0,                        !GBD 11/13/02
            '',                       !GBD 11/13/02
            $paygroup,                !GBD 11/13/02
            &C1.FLSA_STATUS,          ! CJH - 02/19/2003 - added variable rather than hardcode
            0,                        !GBD 11/13/02
            ' ',                      !GBD 11/13/02
            'I',                      !CWB 01/09/2003
            'I')                      !CWB 01/09/2003
end-sql


move #temp to #job_hrlyrt

exit-insert-earnings:

end-procedure

!***************************************************************
begin-procedure get-state-locality
!**************************************************************
  show 'get-state-locality'

  move '**' to $State
  move ' ' to $Locality

begin-select
D2.STATE
D2.LOCALITY
D2.DIST_PCT

  let $State = rtrim(&D2.State, ' ')

  if isnull(&D2.Locality) = 1
    let $Locality = '  '
  else
    let $Locality = &D2.Locality
  end-if
  exit-select

 FROM PS_TAX_DISTRIB D2
where D2.EMPLID = $Emplid
  and D2.EMPL_RCD = #Empl_RcdNo
  and D2.EFFDT =
	    (SELECT MAX(X31.EFFDT)
	     from PS_TAX_DISTRIB X31
	     where X31.EMPLID = $emplid
	       and X31.EMPL_RCD = #EMPL_RCDno
	       and X31.EFFDT <= $Pay_End_Dt)
end-select

end-procedure
!***************************************************************
begin-procedure select-addl-hrly-rt
!**************************************************************
  show 'select-addl-hrly-rt'

move 'N' to $addl_found

begin-select ON-ERROR=SQL-Error-Found('select-addl-hrly-rt')
addl.hourly_rt

 move 'Y' to $addl_found
 move &addl.hourly_rt to #addl_hrly_rt

  show 'Addl pay rate found for ee/erncd: ' noline
  show $emplid noline
  show '/' noline
  show #empl_rcdno noline
  show '/' noline
  show $erncd noline
  show '/' noline
  show &addl.hourly_rt

from ps_addl_pay_data addl
where addl.emplid = $emplid
and addl.EMPL_RCD = #empl_rcdno
and addl.erncd = $erncd
and addl.effdt = (Select max(effdt) from ps_addl_pay_data
                   where emplid = $emplid 
                     and EMPL_RCD = #empl_rcdno 
                     and erncd = $erncd
                     and effdt <= $pay_end_Dt)
and addl.addl_seq = (select max(addl_Seq) from ps_addl_pay_data 
                      where emplid = $emplid 
                        and EMPL_RCD = #empl_rcdno 
                        and erncd = $erncd
                        and effdt = addl.effdt)
and (addl.earnings_end_dt IS NULL OR $pay_begindt_dbf <= addl.earnings_end_dt)

end-select
! comment out error audit for 515 when addl pay row not found. Allow all 515 transactions - for the non PT 2% stores
if $addl_found = 'N' and $erncd = '167'
	  show '$addl_found = N and $erncd = 167'
    do error-found
    add 1 to #ErrorCount
! do not show Pharmacy Premium error message if not 167 erncd
    if $erncd = '167'
       print 'Pharmacy premium is not defined for employee' (,43)
    end-if
end-if

end-procedure

!***************************************************************
begin-procedure select-oth-pay
!**************************************************************
  show 'select-oth-pay'

move 0 to #pharm_count

begin-select
count(*) &pharm_count
  move &pharm_count to #pharm_count
! Add a join to PAY_EARNINGS so we can select a count of all Rx premium paylines
! for the EE only
! Need to find all oth pay lines for the EE only.  this select
! currently finds all 167 erncd oth pay lines 
FROM PS_PAY_EARNINGS add2,
     PS_PAY_OTH_EARNS add1
where ADD1.Company = Add2.company
  and ADD1.paygroup = Add2.paygroup
  and add1.pay_end_Dt = add2.pay_end_dt
  and add1.off_cycle = add2.off_cycle
  and add1.PAGE_NUM = add2.PAGE_NUM
  and add1.LINE_NUM = add2.LINE_NUM
  and add1.ADDL_NBR = add2.ADDL_NBR
  and add2.emplid  = &M.emplid
  and ADD1.COMPANY    = $Company
  and ADD1.PAYGROUP   = $PayGroup
  and ADD1.PAY_END_DT = $Pay_End_Dt
  and ADD1.OFF_CYCLE  = 'N'
  and ADD1.ERNCD      = $ErnCd
  and  add1.oth_pay > 0

     
end-select

end-procedure
!*********************************************************************
!Edits employee information
!*********************************************************************
begin-procedure Edit-EmplID
  move 'N' to $Found
!display #inputtran
!display $emplid
!display #empl_rcdno
!display $pay_end_dt
     show '$EmplID <' $EmplID '>'
     show '#Empl_RcdNo <' #Empl_RcdNo '>'
     show '$Pay_End_Dt <' $Pay_End_Dt '>'
 
begin-select ON-ERROR=SQL-Error-Found('Edit-EmplId')
C.COMPANY
C.PAYGROUP
C.EMPL_STATUS

     show 'Inside emplid select'

 if $errorfound = 'N'
  if (&C.EMPL_STATUS <> 'A') AND (&C.EMPL_STATUS <> 'P')
     AND (&C.EMPL_STATUS <> 'Q') AND (&C.EMPL_STATUS <> 'U')
          show 'setting error because of status'
!        use-report NONC-REPORT       ! RKK - 08/05/2009 
!        do Error-Found      !ISDVSXP FOR ITG 50644 02/05/2009
        move 'N' to $ErrorFound
        !ISDVSXP FOR ITG 50644 02/04/2009 -- start
        !print 'Employee Status is not one of (A,P,Q,U); ' (,43)              
        !print 'JOB Status: ' ()
        !print &C.EMPL_STATUS ()
        !ISDVSXP FOR ITG 50644 02/04/2009 -- end
        add 1 to #ErrorCount     
        use-report error-report
  end-if    
 end-if
  
  move 'Y' to $Found
   FROM PS_EMPLOYMENT B, PS_JOB C
   WHERE B.EMPLID    = $EmplID
   AND B.EMPLID    = C.EMPLID
   AND B.EMPL_RCD = #Empl_RcdNo
   AND B.EMPL_RCD = C.EMPL_RCD
   AND C.EFFDT =
       (SELECT MAX(T.EFFDT)
	FROM   PS_JOB T
	WHERE  T.EMPLID    = $EmplID
	  AND  T.EMPL_RCD = #Empl_RcdNo 
	  AND  T.EFFDT    <= $Pay_End_Dt)
  AND  C.EFFSEQ =
       (SELECT MAX(R.EFFSEQ)
	FROM   PS_JOB R
	WHERE  R.EMPLID    = $EmplID
	  AND  R.EMPL_RCD = #Empl_RcdNo
	  AND  R.EFFDT     = C.EFFDT)
  
end-select

    if $Found = 'N'
         show 'setting error because no found '
       use-report error-report         !ISDVSXP FOR ITG 50644 11/10/2008
       do Error-Found
       print 'EmplID Not Found(Personal_Data, Employment and Job)' (,43)
       print ';Transaction is rejected;' ()
       print $transaction (+1,21)
       add 1 to #ErrorCount     
       use-report error-report
    end-if

end-procedure
!*********************************************************************
!Validates the Earnings code
!*********************************************************************
begin-procedure Edit-ErnCd
move 'N' to $skip_record_tran

lookup earncodelookup $erncd $erncd_lkp
  if RTRIM($erncd,' ') <> RTRIM($erncd_lkp,' ')
    do Error-Found
    print 'Invalid Earnings Code=' (,43)
    print $ErnCd ()
    add 1 to #ErrorCount        
  else
    if $erncd = '167'
         show '$Work_Job_Cd ' $Work_Job_Cd
       evaluate $Work_Job_Cd
	   when = '20138'
	   when = '30170'
	   when = '30299'	!Floaters, DXS, 01/12/07. Added as requested by Carey
             break
           when-other
             do error-found
	     let $print_msg = 'Job Code ' || $Work_Job_Cd
             let $print_msg = $print_msg || ' not a Full Time Pharmacy Job - ;'
	     let $print_msg = $print_msg || ' Transaction is rejected'
             print $print_msg (,43)
             print $transaction (+1,21)
             add 1 to #errorcount
             move 'Y' to $skip_record_tran
      end-evaluate
    end-if

    if $erncd = 'OTP'
       do get-job-info
       if (&GJI.JOBCODE = '30170' or &GJI.JOBCODE = '20138') and
          (&GJI.EMPL_TYPE = 'S') and (&GJI.FULL_PART_TIME = 'F')
             do error-found
             print 'Pharmacy EE not eligible for OTP earnings. OTP hrs =' (,52)
             print #hours ()
             print $transaction (+1,21)
             add 1 to #errorcount
             move 'Y' to $skip_record_tran
       end-if
    end-if
  end-if
  
end-procedure
!********************************************************************************
begin-procedure get-job-info
begin-select 
GJI.JOBCODE
GJI.FULL_PART_TIME
GJI.EMPL_TYPE


FROM PS_JOB GJI
where GJI.EMPLID = $emplid
  and GJI.EMPL_RCD = #empl_rcd
  and GJI.EFFDT =
            (SELECT MAX(GJII.EFFDT)
             from ps_job GJII
             where gjii.emplid = gji.emplid
               and gjii.EMPL_RCD = gji.EMPL_RCD
               and gjii.effdt <= $Pay_End_Dt)
  
end-select

end-procedure
!*********************************************************************
!Validates the numeric values and finds the decimal points 
!*********************************************************************
begin-procedure Edit-Numeric
  move 'N' to $already-errored-out
  move #FieldLength to #FieldInteger
  if #FieldDecimal <> 0
    subtract 1 from #FieldInteger
    subtract #FieldDecimal from #FieldInteger
  end-if
  move 'N' to $Numerr
  move 'N' to $DecFound
  move 'N' to $NumFound
  move 'N' to $SpcFound
  move 0 to #int
  move 0 to #dec
  move 0 to #loc

  while #loc < #FieldLength and $Numerr = 'N'
    extract $Numchar from $FieldValue #loc 1

    Evaluate $Numchar
      when = ''
	if $NumFound = 'Y'
	  move 'Y' to $SpcFound
	end-if
	break
      when = ' '
	if $NumFound = 'Y'
	  move 'Y' to $SpcFound
	end-if
	break
      when = '-'
	if $NumFound = 'Y' or $Negative = 'N'
	  move 'Y' to $Numerr
	  move 'Y' to $already-errored-out
	  do Error-Found
	  print $FieldPrint (,43)
	  print ' Not Valid Numeric=' ()
	  print $FieldValue ()
	  print ' At Location:' ()
	  print #loc        ()
	else
	  move 'Y' to $NumFound
	end-if
	break
      when = '.'
	if $SpcFound = 'Y'
	  move 'Y' to $Numerr
	  move 'Y' to $already-errored-out
	   do Error-Found
	   print $FieldPrint (,43)
	   print ' Not Valid Numeric=' ()
	   print $FieldValue ()
	   print ' At Location:' ()
	   print #loc        ()
	else
	  if $DecFound = 'Y' or #FieldDecimal = 0
	    move 'Y' to $Numerr
	  move 'Y' to $already-errored-out
	     do Error-Found
	     print $FieldPrint (,43)
	     print ' Not Valid Numeric=' ()
	     print $FieldValue ()
	     print ' At Location:' ()
	     print #loc        ()
	  else
	    move 'Y' to $DecFound
	    move 'Y' to $NumFound
	  end-if
	end-if
	break
      when < '0'
      when > '9'
	move 'Y' to $Numerr
	break
      when-other
	if $SpcFound = 'Y'
	  move 'Y' to $Numerr
	else
	  if $DecFound = 'Y'
	    if #FieldDecimal = #dec
	      move 'Y' to $Numerr
	  move 'Y' to $already-errored-out
	      do Error-Found
	      print $FieldPrint (,43)
	      print ' Not Valid Numeric=' ()
	      print $FieldValue ()
	      print ' At Location:' ()
	      print #loc        ()
	    else
	      add 1 to #dec
	      move 'Y' to $NumFound
	    end-if
	  else
	    if #FieldInteger = #int
	      do Error-Found
	      move 'Y' to $Numerr
	  move 'Y' to $already-errored-out
	      print $FieldPrint (,43)
	      print ' No Decimal Entered=' ()
	      print $FieldValue ()
	      print ' At Location:' ()
	      print #loc        ()
	  else
	      add 1 to #int
	      move 'Y' to $NumFound
	    end-if
	  end-if
	end-if
	break
    end-evaluate
    add 1 to #loc
  end-while

  if $DecFound = 'Y'
    if #int = 0 and #dec = 0
      move 'Y' to $Numerr
    end-if
  end-if

  if $already-errored-out = 'N'
     if $Numerr = 'Y'
	do Error-Found
	print $FieldPrint (,43)
	print ' Not Valid Numeric=' ()
	print $FieldValue ()
     end-if
  end-if

end-procedure

!GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
Begin-procedure Get-Emplid
Begin-Select
PN.EMPLID

  Move &PN.EMPLID to $EmplId9
  
FROM PS_PERS_NID PN
WHERE PN.NATIONAL_ID=$Emplid9
and PN.COUNTRY='USA'
AND PN.NATIONAL_ID_TYPE='PR'
End-Select
End-Procedure Get-Emplid
!GEX_SEC_REENG 2015-04-29 Vahini Katta Ends

#Include 'gexpyhst.sqc'  ! Pay History Table procedures
#Include 'gexpyaud.sqc'  ! Audit Report procedures
