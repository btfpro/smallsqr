!***********************************************************************
! GEXPY02M:  Monthly Deduction Report                                  *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS    DATE           DESCRIPTION OF THE CHANGE	               *
!***********************************************************************
!  JDH         06/25/99       INITIAL CREATION                         *
!                                                                      *
!  SXK         11/03/1999     Modified to have union from              *
!			      job_labor                                *
!                                                                      *
!  SXC         03/08/2000     Included a condition to calc the dedqtd  *
!                             appropriately                            *
!           PSR         08/06/2002     Modified UNION_CD FROM          *
!                                      JOB_LABOR TO JOB - Upgrade 8.3  *
!                                      TO JOB - Upgrade 8.3            *
! PY235 SXD    08/17/2007      Modified getactnm.sqc                   *
! ISDVVXK      09/06/2016      Print last 4 digits of SSN              *
! GEX_SEC_REENG Vahini Katta 09/18/2016                                *
! Changes related to SSN conversion
!***********************************************************************


#include 'setenv.sqc' !Set environment
#include 'setup02.sqc'


#define #column1     1
#define #column2    13
#define #column3    46
#define #column4    59
#define #column5    66
#define #column6    75
#define #column7    88
#define #column8    96
#define #column9   109
#define #column10  125
#define #column11  141


begin-setup
!SXD  08/17/2007  Begin
  !Begin-SQL
   ! Alter Session Set OPTIMIZER_GOAL=RULE;
  !End-SQL
!                 End  
  
end-setup


begin-heading 8
#debug9 Show 'begin-heading'
  #Include 'stdhdg02.sqc'

  do Get-Department-Name
  do Get-Deduction-Name

  print ':'                 (3,8)

  print $Reporting_Period   (3,) center

  print 'DeptID:'           (4,1)
  print $DeptID             (,13)
  print $DeptName           (,+1)

  print 'Deduction Code:'   (4,77)
  print $Dedcd              (,+2)
  print $DeductionName      (,+2)

  print 'BIRTH'          (+2,{#column3})
  print 'FULL'           (,{#column4})
  print 'EFF'            (,{#column6})
  print 'ACCOUNT'        (,{#column8})
  print '          MTD'  (,{#column9})
  print '          QTD'  (,{#column10})
! print '          YTD'  (,{#column11})

  print 'SSN'            (+1,{#column1})
  print 'NAME'           (,{#column2})
  print 'DATE'           (,{#column3})
  print 'PART'           (,{#column4})
  print 'ACTION'         (,{#column5})
  print 'DATE'           (,{#column6})
  print 'UNION'          (,{#column7})
  print 'CODE'           (,{#column8})
  print '    DEDUCTION'  (,{#column9})
  print '    DEDUCTION'  (,{#column10})
! print '    DEDUCTION'  (,{#column11})

  print '-'              (+1,{#column1},9) fill
  print '-'              (,{#column2},30)  fill
  print '-'              (,{#column3},10)  fill
  print '-'              (,{#column4},4)   fill
  print '-'              (,{#column5},6)   fill
  print '-'              (,{#column6},10)  fill
  print '-'              (,{#column7},5)   fill
  print '-'              (,{#column8},10)  fill
  print '-'              (,{#column9},13)  fill
  print '-'              (,{#column10},13) fill
! print '-'              (,{#column11},13) fill
end-heading


begin-report
#debug9 Show 'begin-report'
  do Init-DateTime
  do Init-Number
  do stdapi-init
  do Get-Calendar-Year-Id
  move 'GEXPY02M' to $ReportID
  move 'Generic Deduction Report ' to $ReportTitle
  display $ReportTitle

  do Get-Current-DateTime
 
  do Report
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term
end-report


begin-procedure Report
#debug9 Show 'Report'
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  
  move 'N' to $Errorfound

  if $prcs_process_instance = ''
    do Ask-As-Of-Date
  else
    Do GEXXX922-Select-Parameters
    let $asofdate = $GEX_RC_PAY.ASOFDATE
    if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
      let $asofdate = $asoftoday
    end-if
  end-if
 
  do Get-Last-Confirmed-Pay

  Let $X000_Order_By = 'Company, DeptID, Deduction Code, Name'

  do Print-Cover-Page
  do Main-Process
end-procedure


begin-procedure Print-Cover-Page
#debug9 Show 'Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print 'As Of Date :'                                            (+2,5)
  Print $AsOfDate                                                 (0,+2)
  Print 'Reporting Period:'                                       (+2,5)
  Print $Reporting_Period                                         (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

  Let #PAGE-COUNT = 0
End-Procedure


Begin-Procedure Get-Last-Confirmed-Pay
#debug9 Show 'Get-Last-Confirmed-Pay'
Begin-Select Loops=1
pay_end_dt
To_Number(To_Char(pay_end_dt,'MM'))          &balance_period
To_Number(To_Char(pay_end_dt,'YYYY'))        &balance_year
To_Char(pay_end_dt,'fmMonth YYYY')           &period

  Let $AsOfDate         = &pay_end_dt
  Let $pay_end_dt       = &pay_end_dt
  Let #balance_year     = &balance_year
  Let #balance_period   = &balance_period
  Let $Reporting_Period = &period

  let #balance_qtr = #balance_period
  let #balance_qtr = ((#balance_qtr - 1)/ 3) + 1
  do Format-Number(#balance_qtr, $balance_qtr, '9.99') !avoid rounding the integer portion
  move $balance_qtr to $balance_qtr x     !save the integer portion
  let #balance_qtr = $balance_qtr

  If Rtrim($pay_end_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  Else
    Show 'Last confirmed pay end date:  ' $pay_end_dt
    Show 'Reporting Period:  ' $Reporting_Period
  End-If

  display 'Balance year :- ' noline
  display #balance_year
  display 'Balance period :- 'noline
  display #balance_period
  display 'Balance Qtr :- 'noline
  display #balance_qtr   

From   ps_pay_calendar

Where  pay_end_dt         =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  pay_end_dt <= $AsOfDate
       And    pay_confirm_run = 'Y')

And    pay_confirm_run = 'Y'
End-Select
End-Procedure


begin-procedure Main-Process
#debug9 Show 'Main-Process'
begin-select ON-ERROR=SQL-Error-Found('Main-Process')
C1.COMPANY   ()  on-break  level=1
                           print=never
                           save=$prev_company
                           after=after-company-change

C1.DEPTID    ()  on-break  level=2
                           print=never
                           save=$prev_dept
                           after=after-dept-change 

DE.DEDCD     ()  on-break  level=3
                           print=never
                           save=$prev_dedcd

DE.PLAN_TYPE ()  on-break  level=4
                           print=never
                           save=$prev_plan_type
                           before=before-dedcd-change
                           after=after-dedcd-change

PD.NAME      ()  on-break  level=5
                           print=never

C1.EMPLID    ()  on-break  level=6
                           print=never
                           after=print-record
J.UNION_CD  !SXK 11/03/99 Changed from e.union_cd
J.ACCT_CD
J.FULL_PART_TIME
J.ACTION
J.EFFDT
PD.BIRTHDATE &birthdate
PCBI.BALANCE_QTR
PCBI.BALANCE_PERIOD
DE.DED_CUR

  let $Data-Found-Flag = 'Y'

  move 'N' to $errorfound

  let $Company        = &C1.COMPANY
  let $DeptID         = &C1.DEPTID
  let $Dedcd          = &DE.DEDCD
  let $PlanType       = &DE.PLAN_TYPE
  let $name           = &PD.NAME
  let $emplid         = &C1.EMPLID
  let $union_cd       = &J.UNION_CD	!SXK 11/03/99 Changed from e.union_cd
  let $acct_cd        = &J.ACCT_CD
  let $full_part_time = &J.FULL_PART_TIME
  let $action         = &J.ACTION
  let $effdt          = &J.EFFDT
  let $birthdate      = &birthdate

  if &PCBI.BALANCE_PERIOD = #balance_period
    add &DE.Ded_CUR to #DedMTD
  end-if

! SXC - 03/08/2000, included the following AND condition.
  if &PCBI.BALANCE_QTR = #balance_qtr AND &PCBI.BALANCE_PERIOD <= #balance_period
    add &DE.Ded_CUR to #DedQTD
  end-if

  add &DE.Ded_CUR to #DedYTD

FROM   ps_job            J,
       !ps_employment     E,	SXK 11/03/99 
       ps_personal_data  PD,
       ps_pay_deduction  DE,
       ps_pay_check      C1,
       ps_pay_cal_bal_id PCBI

WHERE PD.EMPLID           = C1.EMPLID

And    J.EMPLID            = C1.emplid
And    J.EMPL_RCD         = C1.empl_rcd

AND    J.EFFDT             =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID       = J.EMPLID
       AND    EMPL_RCD    = J.EMPL_RCD
       AND    EFFDT       <= $pay_end_dt)

AND    J.EFFSEQ            =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB 
       WHERE  EMPLID       = J.EMPLID
       AND    EMPL_RCD    = J.EMPL_RCD
       AND    EFFDT        = J.EFFDT)

And    C1.PAY_END_DT       = PCBI.PAY_END_DT

And    DE.COMPANY          = C1.COMPANY
And    DE.PAYGROUP         = C1.PAYGROUP
And    DE.PAY_END_DT       = C1.PAY_END_DT
And    DE.OFF_CYCLE        = C1.OFF_CYCLE
And    DE.PAGE_NUM            = C1.PAGE_NUM
And    DE.LINE_NUM            = C1.LINE_NUM
And    DE.SEPCHK           = C1.SEPCHK

And    PCBI.COMPANY        = C1.COMPANY
And    PCBI.PAYGROUP       = C1.PAYGROUP
And    PCBI.BALANCE_ID     = 'CY'
And    PCBI.BALANCE_YEAR   = #balance_year
And    PCBI.BALANCE_QTR    = #balance_qtr

ORDER BY C1.COMPANY,
         C1.DEPTID,
         DE.DEDCD,
         DE.PLAN_TYPE,
         PD.NAME,
         C1.EMPLID

end-select

  If $Data-Found-Flag = 'Y'
    print 'Grand Totals: ' (+2,1)
    print #grand_total_MTD (,{#column9})  edit 99,999,990.99
    print #grand_total_QTD (,{#column10}) edit 99,999,990.99
!   print #grand_total_YTD (,{#column11}) edit 99,999,990.99
  Else
    New-Page
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If
end-procedure


begin-procedure Print-Record
#debug9 Show 'Print-Record'
  do Get-Acct-cd-descr

  Let $Year4 = '1'
  Do Format-DateTime($birthdate, $birth_date, {DEFMDY}, '', '')

  Let $Year4 = '1'
  Do Format-DateTime($effdt, $effdate, {DEFMDY}, '', '')

  ! ISDVVXK 09/06/2016 Begins
  do Get-Emp-Ssn ($emplid, $Ssn_Out)  !GEX_SEC_REENG 2016-09-18 Vahini Katta
  let $SSN_Last4 = substr($Ssn_Out,6,4)
  let $emplid = 'xxxxx'||$SSN_Last4
  ! ISDVVXK 09/06/2016 Ends
  
  print $emplid            (+1,{#column1})
  print $name              (,{#column2},30)
  print $birth_date        (,{#column3})
  print $full_part_time    (,{#column4})
  print $action            (,{#column5})
  print $effdate           (,{#column6})
  print $union_cd          (,{#column7})
  print $AcctNameAbbrv     (,{#column8})
  print #dedMTD            (,{#column9})   edit 99,999,990.99
  print #dedQTD            (,{#column10})  edit 99,999,990.99
! print #dedYTD            (,{#column11})  edit 99,999,990.99

  add #dedMTD to #ded_dedMTD
  add #dedQTD to #ded_dedQTD
  add #dedYTD to #ded_dedYTD

  let #dedMTD = 0
  let #dedQTD = 0
  let #dedYTD = 0
end-procedure


begin-procedure Before-Dedcd-Change
#debug9 Show 'Before-Dedcd-Change'
  new-page
end-procedure


begin-procedure After-Dedcd-Change
#debug9 Show 'After-Dedcd-Change'
  Print 'Totals for Deduction Code'  (+2,1)
  print $prev_dedcd    (,+1)
  print #ded_dedMTD    (,{#column9})  edit 99,999,990.99
  print #ded_dedQTD    (,{#column10}) edit 99,999,990.99
! print #ded_dedYTD    (,{#column11}) edit 99,999,990.99

  add #ded_dedMTD to #grand_dept_MTD
  add #ded_dedQTD to #grand_dept_QTD
  add #ded_dedYTD to #grand_dept_YTD

  move 0 to #ded_dedMTD
  move 0 to #ded_dedQTD
  move 0 to #ded_dedYTD
end-procedure


begin-procedure After-Dept-Change
#debug9 Show 'After-Dept-Change'
  print 'Totals for Department'  (+2,1)
  print $prev_dept               (,+1)
  print #grand_dept_MTD (,{#column9})  edit 99,999,990.99
  print #grand_dept_QTD (,{#column10}) edit 99,999,990.99
! print #grand_dept_YTD (,{#column11}) edit 99,999,990.99

  add #grand_dept_MTD to #grand_company_MTD
  add #grand_dept_QTD to #grand_company_QTD
  add #grand_dept_YTD to #grand_company_YTD

  move 0 to #grand_dept_MTD
  move 0 to #grand_dept_QTD
  move 0 to #grand_dept_YTD
end-procedure


begin-procedure After-Company-Change
#debug9 Show 'After-Company-Change'
  print 'Totals for Company'  (+2,1)
  print $prev_company         (,+1)
  print #grand_company_MTD (,{#column9})   edit 99,999,990.99
  print #grand_company_QTD (,{#column10})  edit 99,999,990.99
! print #grand_company_YTD (,{#column11})  edit 99,999,990.99

  add #grand_company_MTD to #grand_total_MTD
  add #grand_company_QTD to #grand_total_QTD
  add #grand_company_YTD to #grand_total_YTD

  move 0 to #grand_company_MTD
  move 0 to #grand_company_QTD
  move 0 to #grand_company_YTD
end-procedure


begin-procedure SQL-Error-Found($Proc_Name) 
#debug9 Show 'SQL-Error-Found'
  do error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
end-procedure


begin-procedure Error-Found
#debug9 Show 'Error-Found'
  move 'Y' to $ErrorFound
  !GEX_SEC_REENG Vahini Katta 2016-09-28 Begins
  !let $EmplId_1st3  = substr($EmplId,1,3)
  !let $EmplId_mid2  = substr($EmplId,4,2)
  !let $EmplId_last4 = substr($EmplId,6,4)
 
  !String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  !display $EmplID11 
  display $EmplID
  !GEX_SEC_REENG Vahini Katta 2016-09-28 Ends
end-procedure


#include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'getactnm.sqc'  !Get-Acct-cd-descr procedure
#include 'getdednm.sqc'  !Get-Deduction-Name procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#include 'gexxx922.sqc'  !Get pay single row run control
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'getgeid.sqc'   !GEX_SEC_REENG 