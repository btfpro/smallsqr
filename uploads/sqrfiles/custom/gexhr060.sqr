!***********************************************************************
! GEXHR060.SQR:                                                        *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-2006 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXHR060.SQR :                                                       *
!                                                                      *
! Narrative:            Create a program that will report employee     *
!			address information from a list of employee    *
!			id's supplied by the Tax Department is on an   *
!			Ad-Hoc basis.				       *
!			ITG-35689.				       *
!								       *
! #Debug Used:          x                                              *
!								       *
! SQL Tables:           PS_JOB, PS_PERSONAL_DATA                       *
!								       *
! Written by:           Rapidigm, Deepak. S, 04/17/06                  *
!                                                                      *
! Normally Run:         Run on ad-hoc basis			       *
!                                                                      *
! Control Parms:        Reads the run control table PS_GEX_RUN_CNTL    *
!			and input file Emplid_Layout.txt	       *
!                                                                      *
!***********************************************************************

!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#include 'setup02.sqc'   !Printer and Page-Size Initialization (Landscape)

#define #column1  001
#define #column2  013
#define #column3  042
#define #column4  051
#define #column5  065
#define #column6  078
#define #column7  110
#define #column8  126
#define #column9  144
#define #column10  151
#define #column11  160

!***********************************************************************
! Defines Heading of the report
!***********************************************************************
Begin-Heading 5
  let $ReportID = 'GEXHR060'
  #include 'stdhdg01.sqc'

  Print 'Employee Address Information'     (3,1) center

  Print 'EMPLID'	(+3,{#column1})	underline
  Print 'NAME'		(0,{#column2})	underline
  Print 'DEPTID'	(0,{#column3})	underline	
  Print 'LAST_NAME'	(0,{#column4})	underline
  Print 'FIRST_NAME'	(0,{#column5})	underline
  Print 'ADDRESS1'	(0,{#column6})	underline
  Print 'ADDRESS2'	(0,{#column7})	underline
  Print 'CITY'		(0,{#column8})	underline
  Print 'STATE'		(0,{#column9})	underline
  Print 'POSTAL'	(0,{#column10})	underline	
  Print 'EMPL_STATUS'	(0,{#column11})	underline

End-Heading


!***********************************************************************
! Start of Program
!***********************************************************************
Begin-Report

  do Init-DateTime           !datetime.sqc
  do Init-Number             !number.sqc
  do Get-Current-DateTime    !curdttim.sqc
  do Stdapi-Init             !stdapi.sqc
  if isnull($prcs_process_instance)
	let $Prcs_OprID = 'ISDVDXS'
	let $Prcs_Run_Cntl_ID = '1'
  end-if

  do Get-Run-Control	     !gexrnctl.sqc  
 
  let #GEX_EMPLID_ROWS = 1
  let $Emplid_Alias = 'A.EMPLID'
  do Open-Input-File
  do Read-Input-File
  do Select-Data
  do stdapi-term

End-Report


!***********************************************************************
! Opens the Input file which has the EMPLIDs
!***********************************************************************
Begin-Procedure Open-Input-File

	! 'F:\GE_Work\HRMS\Emplid_layout.txt'
	move &filepath to $filepath
	open $filepath as 1  for-reading record=10 status=#filestat
	if #filestat != 0
		show 'Error Opening File: ' $filepath
		stop
	end-if

End-Procedure


!***********************************************************************
! Reads the EMPLIDs from the input file.
!***********************************************************************
Begin-Procedure Read-Input-File

   while 1
	read 1 into $emplid:10
	
	if #end-file
		break
	end-if

	let $emplid = rtrim($emplid,' ')

        if $emplid != ''
		If #GEX_EMPLID_ROWS = 1
			Let $EMPLID_CRITERIA = '(' || $Emplid_Alias || ' In ('''     || $emplid || ''''
			let #GEX_EMPLID_ROWS = #GEX_EMPLID_ROWS + 1
		Else
			Let $EMPLID_CRITERIA = $EMPLID_CRITERIA || ',''' || $emplid  || ''''
		End-If
	end-if
   end-while
	
	Let $EMPLID_CRITERIA = $EMPLID_CRITERIA || '))'
   #debugx show $EMPLID_CRITERIA 
End-Procedure 

!***********************************************************************
! Main Procedure which selects the data.
!***********************************************************************
Begin-Procedure Select-Data
Begin-Select 
A.EMPLID	(+2,{#column1})
B.NAME		(0,{#column2})
A.DEPTID	(0,{#column3})	
B.LAST_NAME	(0,{#column4})
B.FIRST_NAME	(0,{#column5})
B.ADDRESS1	(0,{#column6})
B.ADDRESS2	(0,{#column7})
B.CITY		(0,{#column8})
B.STATE		(0,{#column9})
B.POSTAL	(0,{#column10})	
A.EMPL_STATUS	(0,{#column11})

  
FROM PS_JOB A, PS_PERSONAL_DATA B
 WHERE A.EFFDT =
      (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE A.EMPLID = A_ED.EMPLID
          AND A.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= sysdate)
   AND A.EFFSEQ =
      (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE A.EMPLID = A_ES.EMPLID
          AND A.EMPL_RCD = A_ES.EMPL_RCD
          AND A.EFFDT = A_ES.EFFDT)
   AND A.EMPLID = B.EMPLID
   ! AND A.EMPLID in ( LIST OF EMPLIDs )
   AND [$EMPLID_CRITERIA] 
ORDER BY A.EMPLID, B.NAME
End-Select
End-Procedure


#include 'stdapi.sqc'    !Process Scheduler Interface
#include 'reset.sqc'     !Reset Printer Procedure
#include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'  !Routines for date math
#include 'gexrnctl.sqc'  !Routine for Get-Run-Control
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures