!********************************************************************!
!GEXBN640.SQR - CURRENT ENROLLMENT DATA EXTRACT                      !
!********************************************************************!
!         !!!!!  This version is for HR 9.0 PeopleSoft !!!!!         !
!********************************************************************!
!                                                                    !
!Description - This program is designed to export data from Ben      ! 
!              Admin prepared data only.  Any employee outside the   !
!              Ben Admin schedule will not be included in the files. !
!              (PeopleSoft to Univers)                               !
!                                                                    !
!Database Tables:                                                    !
!                 PS_BAS_PARTIC           SELECT                     !
!                 PS_BAS_PARTIC_COST      SELECT                     !
!                 PS_BAS_PARTIC_PLAN      SELECT                     !
!                 PS_BAS_PARTIC_DPND      SELECT                     !
!                 PS_BAS_PARTIC_OPTN      SELECT                     !
!                 PS_CBP_RUN_XXXBAS       SELECT                     !
!                 PS_COVRG_CD_TBL         SELECT                     !
!                 PS_DEP_BEN              SELECT                     !
!                 PS_DEP_BEN_EFF          SELECT                     !
!                 PS_DEP_BEN_NAME         SELECT                     !
!                 PS_DEP_BENEF_NID        SELECT                     !
!                 PS_PERSON               SELECT                     !
!                 PS_PERSON_NAME          SELECT                     !
!                 PS_PERS_DATA_EFFDT      SELECT                     !
!                 PS_PERS_NID             SELECT                     !
!                 PS_BEN_DEFN_OPTN        SELECT                     !
!                 PS_BENEF_PLAN_TBL       SELECT                     !
!                                                                    !
!                                                                    !
!Runtime Prompts: Run Mode (by Schedule ID, then by Status Date, or  !
!                           by Emplid)                               !
!                 Output File location                               !
!                                                                    !
!Output: 1 file; Current Enrollment                                  !
!                                                                    !
!********************************************************************!
!
! Date       programmer                    Modification
! ----       ----------     --------------------------------------------
!
!***********************************************************************

!-----------------------------------------------------------------------
!   Set Environment                                                    -
!-----------------------------------------------------------------------
#include 'setenv.sqc'    !Set environment
#include 'setup01.sqc'   !Printer and page-size initialization
!-----------------------------------------------------------------------
!  Report Calls                                                        -
!-----------------------------------------------------------------------
begin-report

        do init-number
        do init-datetime
        do get-current-datetime
        do Init-Report
        show ' '
        display 'Start Run Time: ' noline
        do display-time
        
        do Clear-Variables
                
        display 'Extracting Data From PeopleSoft Benefits Administration ' noline
        do display-time

        do open-files
        do job-file
        do close-files
        
        show ' '
        display 'End Run Time: ' noline
        do display-time
        do Stdapi-Term

end-report
!-----------------------------------------------------------------------
! Function:    display-time                                            -
! Description: gets current date time and displays it                  -
! Called By:   Report                                                  -
! Calls:       get-current-datetime                                    -
!-----------------------------------------------------------------------
begin-procedure display-time

        do get-current-datetime
        display $asofnow
        show ' '
        
end-procedure
!-----------------------------------------------------------------------
! Function:    Init-Report                                             -
! Description: this section initializes all the variables              -
! Called By:   Report                                                  -
! Calls:       Select-Parameters, Ask-Values                           -
!-----------------------------------------------------------------------
begin-procedure Init-Report

  move 'GEXBN640'   to $ReportID
  move 'Benefits Enrollment Outbound Process File Creation ' to $ReportTitle
  display $ReportTitle

  do Stdapi-Init

  if $prcs_process_instance = ''
    do Ask-Values
    let $Current_Enrollment_File = $File_Path || 'bas_curenrl_file.csv'       !Bas Partic Current Enrollment File
  else
    do Get-prcsoutputdir
    do Get-Run-Control
    do Select-Parameters
    move &asofdate to $RUNDATE
    let $Current_Enrollment_File = $origoutdest || 'bas_curenrl_file.csv'       !Bas Partic Current Enrollment File
  end-if

   Move '"' to $Quote
   Move ',' to $Comma
  
   if isnull($RUNDATE)
    Move $AsofToday to $RUNDATE
   end-if
   show '$RUNDATE :' $RUNDATE
   show '$origoutdest :' $origoutdest
   

end-procedure Init-Report
!-----------------------------------------------------------------------
! Function:    ASK-VALUES                                              -
! Description: Obtain input values upon execution using SQRW.          -
! Called By:   Init-Report                                             -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure ask-values
#debugd show 'Ask-Values'

  input $RUNDATE   maxlen=11 'Enter the Run Date to Process, MM-DD-YYYY or leave blank for all' type=date
  input $BenCriteria     maxlen=200 'Enter the Benefit Programs or Leave blank for all the Benefit Programs: ' type=char
  input $PlanCriteria    maxlen=127 'Enter the Plan Type or Leave blank for all the Plan Types' type=char  

 !File Path Default 
  If $File_Path = ' ' or $File_Path = ''
     Let $File_Path = 'C:\Temp\'
  End-If

  Let $Current_Enrollment_File = $File_Path || 'bas_curenrl_file.csv'
  
  let $BenCriteria  = ''''||$BenCriteria || ''''
  let $PlanCriteria = $PlanCriteria ||''''|| $PlanCriteria || ''''
   

  if isnull($BenCriteria)
      move '' to $SlctBenCriteria
  else
      let $SlctBenCriteria = 'AND BP.BENEFIT_PROGRAM IN (' || $BenCriteria || ')' 
  end-if 
    
  if isnull($PlanCriteria)
      move '' to $SlctPlanCriteria
      move '' to $SlctPlanCriteria1
      move '' to $SlctPlanCriteria2
      move '' to $SlctPlanCriteria3
      move '' to $SlctPlanCriteria4
      move '' to $SlctPlanCriteria5
  else
      let $SlctPlanCriteria  = 'AND H.PLAN_TYPE IN (' || $PlanCriteria || ')'
      let $SlctPlanCriteria1 = 'AND L.PLAN_TYPE IN (' || $PlanCriteria || ')' 
      let $SlctPlanCriteria2 = 'AND D.PLAN_TYPE IN (' || $PlanCriteria || ')' 
      let $SlctPlanCriteria3 = 'AND F.PLAN_TYPE IN (' || $PlanCriteria || ')' 
      let $SlctPlanCriteria4 = 'AND S.PLAN_TYPE IN (' || $PlanCriteria || ')' 
      let $SlctPlanCriteria5 = 'AND P.PLAN_TYPE IN (' || $PlanCriteria || ')' 
  end-if 

  show ' '
  show '*** Input Parameters ***'
  show '$In_Status_Dt = ' $In_Status_Dt
  show '*** File Locations ***'
  show $Current_Enrollment_File 
  show ' '

end-procedure
!-----------------------------------------------------------------------
! Function:    Select-Parameters                                       -
! Description: Select Values from Run Control                          -
! Called By:   Init-Report                                             -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Select-Parameters
#debugd show 'Select-Parameters'

 show '$prcs_run_cntl_id = ' $prcs_run_cntl_id
 show '$prcs_oprid       = ' $prcs_oprid
 move '' to $WHERE
 move '' to $BenCriteria
 move '' to $PlanCriteria
 
BEGIN-SELECT
RB.BENEFIT_PROGRAM

    if isnull($BenCriteria)
       let $BenCriteria = $BenCriteria ||''''|| &RB.BENEFIT_PROGRAM || ''''
    else
       let $BenCriteria = $BenCriteria ||','||''''|| &RB.BENEFIT_PROGRAM || ''''
    end-if

FROM PS_GEX_RUN_BENPROG RB
WHERE RB.oprid       = $prcs_oprid
  AND RB.run_cntl_id = $prcs_run_cntl_id
END-SELECT

BEGIN-SELECT
RP.PLAN_TYPE

    if isnull($PlanCriteria)
       let $PlanCriteria = $PlanCriteria ||''''|| &RP.PLAN_TYPE || ''''
    else
       let $PlanCriteria = $PlanCriteria ||','||''''|| &RP.PLAN_TYPE || ''''
    end-if

FROM PS_GEX_RUN_PLNTYPE RP
WHERE RP.oprid       = $prcs_oprid
  AND RP.run_cntl_id = $prcs_run_cntl_id
END-SELECT

  if isnull($BenCriteria)
    move '' to $SlctBenCriteria
  else
    let $SlctBenCriteria = 'AND BP.BENEFIT_PROGRAM IN (' || $BenCriteria || ')' 
  end-if 
  
  if isnull($PlanCriteria)
    move '' to $SlctPlanCriteria
    move '' to $SlctPlanCriteria1
    move '' to $SlctPlanCriteria2
    move '' to $SlctPlanCriteria3
    move '' to $SlctPlanCriteria4
    move '' to $SlctPlanCriteria5
  else
    let $SlctPlanCriteria  = 'AND H.PLAN_TYPE IN (' || $PlanCriteria || ')'
    let $SlctPlanCriteria1 = 'AND L.PLAN_TYPE IN (' || $PlanCriteria || ')' 
    let $SlctPlanCriteria2 = 'AND D.PLAN_TYPE IN (' || $PlanCriteria || ')' 
    let $SlctPlanCriteria3 = 'AND F.PLAN_TYPE IN (' || $PlanCriteria || ')' 
    let $SlctPlanCriteria4 = 'AND S.PLAN_TYPE IN (' || $PlanCriteria || ')' 
    let $SlctPlanCriteria5 = 'AND P.PLAN_TYPE IN (' || $PlanCriteria || ')' 
  end-if 

  show ' '
  show '*** Run Control Parameters ***'
  show '$In_Sched_Id  = ' $In_Sched_ID
  show '$In_Status_Dt = ' $In_Status_Dt
  show '$In_Empid     = ' $In_Emplid
  show '$File_Path    = ' $File_Path
  show ' '
  show '*** File Locations ***'
  show $Current_Enrollment_File 
  show ' '
  show '*** Dynamic Where Clauses ***'
  show '$SlctBenCriteria = ' $SlctBenCriteria
  show '$SlctPlanCriteria  = ' $SlctPlanCriteria
  show '$SlctPlanCriteria1 = ' $SlctPlanCriteria1
  show '$SlctPlanCriteria2 = ' $SlctPlanCriteria2
  show '$SlctPlanCriteria3 = ' $SlctPlanCriteria3
  show '$SlctPlanCriteria4 = ' $SlctPlanCriteria4
  show '$SlctPlanCriteria5 = ' $SlctPlanCriteria5
  show ' '

end-procedure !Select-Parameters
!-----------------------------------------------------------------------
! Function:    Open-Files                                              -
! Description: Opens Files for Writing                                 -
! Called By:   Report                                                  -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure open-files

   open $Current_Enrollment_File as 1 for-writing record=1100:fixed status=#filestatus1
   

     if #filestatus1 = -1
       show ' '
       show ' '
       show ' ***** WARNING ***** Open for ' $Current_Enrollment_File ' in program ' $report_name ' failed.'
       show ' '
       show ' '
       stop quiet
     else
       let $error_flag = 'N'
       show ' '
       show 'File Opened for Writing: ' $Current_Enrollment_File
     end-if

end-procedure open-files
!-----------------------------------------------------------------------
! Function:    Close-Files                                             -
! Description: Closes Files                                            -
! Called By:   Report                                                  -
! Calls:       None                                                    -
! Parameters:  #file_num                                               - 
!-----------------------------------------------------------------------
begin-procedure close-files

close 1

end-procedure close-files
!-----------------------------------------------------------------------
! Function:    job-file                                                -
! Description: Process Job and Personal Data and write it out          -
! Called By:   Report                                                  -
! Calls:       GET-GEX-EMPLID                                          -
!              write-row-job-file                                      -
!              GET-BEN-PROG                                            -
!-----------------------------------------------------------------------
begin-procedure job-file
#debugd show 'job-file'
 do Write-Current-Enrollment-File-Header
 Move ' ' to $Emplid
 Move ' ' to $Empl_rcd
 Move ' ' to $Name
 Move ' ' to $BENEFIT_PROGRAM
BEGIN-SELECT
J.EMPLID,
J.EMPL_RCD,
P.NAME,
BP.BENEFIT_PROGRAM

        Move &J.EMPLID  to $Emplid
        Move &J.EMPL_RCD to $Empl_Rcd
        Move &P.NAME    to $Name
        MOVE &BP.BENEFIT_PROGRAM TO $BENEFIT_PROGRAM
       	
        do Get-Persnid 
        do Get-Gex-Emplid
        do Get-Health-Benefits
        do Get-Life
        do Get-Disability
        do Get-FSA
        do Get-Savings
        do Get-Pension
        
        do Clear-Variables

FROM PS_JOB J,PS_PERSONAL_DATA P,PS_BEN_PROG_PARTIC BP
WHERE J.EMPLID=P.EMPLID
  AND BP.EMPLID=J.EMPLID
  AND BP.EMPL_RCD=J.EMPL_RCD
  AND J.EMPL_STATUS IN ('A','L','P','S')
  AND J.EFFDT       = (SELECT MAX(J1.EFFDT) FROM PS_JOB J1 
                        WHERE J1.EMPLID   = J.EMPLID 
                          AND J1.EMPL_RCD = J.EMPL_RCD 
                          AND J1.EFFDT <= $RUNDATE) 
  AND J.EFFSEQ      = (SELECT MAX(J2.EFFSEQ) FROM PS_JOB J2 
                        WHERE J2.EMPLID   = J.EMPLID 
                          AND J2.EMPL_RCD = J.EMPL_RCD 
                          AND J2.EFFDT    = J.EFFDT) 
  AND J.COMPANY <> J.PAYGROUP                               !Exclude Giant Eagle Independent store locations
  AND BP.EFFDT=(SELECT MAX(BP1.EFFDT) FROM PS_BEN_PROG_PARTIC BP1
                       WHERE BP.EMPLID=BP1.EMPLID
                         AND BP.EMPL_RCD=BP1.EMPL_RCD
                         AND BP.COBRA_EVENT_ID=BP1.COBRA_EVENT_ID
                         AND BP1.EFFDT<=$RUNDATE)
  [$SlctBenCriteria]
ORDER BY J.EMPLID
END-SELECT

end-procedure job-file


!-----------------------------------------------------------------------
! Function:    Get-Persnid                                             -
! Description: Get persnid information                                 -
! Called By:   job-file                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Persnid
#debugd show '...get-persnid'
  Move ' ' to $NATIONAL_ID
begin-select
PNPD.NATIONAL_ID 

   Move &PNPD.NATIONAL_ID to $NATIONAL_ID

FROM PS_PERS_NID PNPD
WHERE PNPD.EMPLID = $Emplid
end-select

End-Procedure Get-Persnid

!-----------------------------------------------------------------------
! Function:    get-gex-emplid                                          -
! Description: Get Giant Eagles 7 digit emplid                         -
! Called By:   Create-Current-Enrollment-File                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure get-gex-emplid
#debugd show '...get-gex-emplid'
    Move ' ' to $GEX-EMPLID
Begin-Select
Gex.Emplid

        Move &Gex.Emplid to $GEX-EMPLID

From PS_GEX_EMPLID_MAPP GEX
WHERE GEX.SSN      = $Emplid
AND GEX.EMPL_RCD   = $Empl_Rcd
End-Select

end-procedure get-gex-emplid

!-----------------------------------------------------------------------
! Function:    Get-Health-benefits                                     -
! Description: Health Benfits of TMs                                   -
! Called By:   Job-File                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Health-benefits
#debugd show '...Get-Health-benefits'
Begin-Select
H.EMPLID,
H.PLAN_TYPE,
H.COVERAGE_ELECT,
H.BENEFIT_PLAN,
H.COVRG_CD

  Move 'PLAN_TYPE'       to  $FldName
  Move &H.PLAN_TYPE      to  $FldVal
 
  do Get-Xlat
  Move &X.XLATLONGNAME to $PLAN_TYPE
  Move &H.COVERAGE_ELECT to $COVERAGE_ELECT
  Move &H.BENEFIT_PLAN   to $BENEFIT_PLAN
  Move &H.COVRG_CD       to $COVRG_CD
  do Get-Ben-Plan-Descr
  do Get-CovrgCd-Descr
  do Write-Current-Enrollment-File
  do Clear-Variables
  
FROM PS_HEALTH_BENEFIT H
WHERE H.EMPLID=$EMPLID
AND H.EMPL_RCD=$EMPL_RCD
[$SlctPlanCriteria]
AND H.COVERAGE_ELECT IN ('E','W')
AND H.COVERAGE_BEGIN_DT <= $RUNDATE
AND H.EFFDT=(SELECT MAX(H1.EFFDT) FROM PS_HEALTH_BENEFIT H1
                 WHERE H1.EMPLID=H.EMPLID
		 AND H1.EMPL_RCD=H.EMPL_RCD
		 AND H1.COBRA_EVENT_ID=H.COBRA_EVENT_ID
		 AND H1.PLAN_TYPE=H.PLAN_TYPE
		 AND H1.BENEFIT_NBR=H.BENEFIT_NBR
		 AND H1.EFFDT<=$RUNDATE)
End-Select
#debugd show '...Get-Health-benefits'
End-Procedure


!-----------------------------------------------------------------------
! Function:    Get-Life                                                -
! Description: Life Benfits of TMs                                     -
! Called By:   Job-File                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Life
#debugd show '...Get-Life'
Begin-Select
L.EMPLID,
L.PLAN_TYPE
L.COVERAGE_ELECT,
L.BENEFIT_PLAN 

    Move 'PLAN_TYPE'       to  $FldName
    Move &L.PLAN_TYPE      to  $FldVal

    do Get-Xlat
    Move &X.XLATLONGNAME to $PLAN_TYPE
    Move &L.COVERAGE_ELECT to $COVERAGE_ELECT
    Move &L.BENEFIT_PLAN   to $BENEFIT_PLAN
    do Get-Ben-Plan-Descr
    do Write-Current-Enrollment-File
    do Clear-Variables

FROM PS_LIFE_ADD_BEN L 
WHERE L.EMPLID=$EMPLID
AND L.EMPL_RCD=$EMPL_RCD
[$SlctPlanCriteria1]
AND L.COVERAGE_ELECT IN ('E','W')
AND L.COVERAGE_BEGIN_DT <= $RUNDATE
AND L.EFFDT=(SELECT MAX(L1.EFFDT) FROM PS_LIFE_ADD_BEN L1
             WHERE L1.EMPLID=L.EMPLID
	       AND L1.EMPL_RCD=L.EMPL_RCD
	       AND L1.PLAN_TYPE=L.PLAN_TYPE
	       AND L1.BENEFIT_NBR=L.BENEFIT_NBR
	       AND L1.EFFDT<=$RUNDATE) 
End-Select
#debugd show '...Get-Life'
End-Procedure

!-----------------------------------------------------------------------
! Function:    Get-Disability                                          -
! Description: Disability Benfits of TMs                               -
! Called By:   Job-File                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Disability
#debugd show '...Get-Disability'
Begin-Select
D.EMPLID,
D.EMPL_RCD,
D.PLAN_TYPE,
D.COVERAGE_ELECT,
D.BENEFIT_PLAN 

      Move 'PLAN_TYPE'       to  $FldName
      Move &D.PLAN_TYPE      to  $FldVal
      
      do Get-Xlat
      Move &X.XLATLONGNAME         to $PLAN_TYPE
      Move &D.COVERAGE_ELECT to $COVERAGE_ELECT
      Move &D.BENEFIT_PLAN   to $BENEFIT_PLAN
      do Get-Ben-Plan-Descr
      do Write-Current-Enrollment-File
      do Clear-Variables

FROM PS_DISABILITY_BEN D 
WHERE D.EMPLID=$EMPLID
AND D.EMPL_RCD=$EMPL_RCD
[$SlctPlanCriteria2]
AND D.COVERAGE_ELECT IN ('E','W')
AND D.COVERAGE_BEGIN_DT <= $RUNDATE
AND D.EFFDT=(SELECT MAX(D1.EFFDT) FROM PS_DISABILITY_BEN D1
             WHERE D1.EMPLID=D.EMPLID
	       AND D1.EMPL_RCD=D.EMPL_RCD
	       AND D1.PLAN_TYPE=D.PLAN_TYPE
	       AND D1.BENEFIT_NBR=D.BENEFIT_NBR
	       AND D1.EFFDT<=$RUNDATE)  
End-Select
#debugd show '...Get-Disability'
End-Procedure

!-----------------------------------------------------------------------
! Function:    Get-FSA                                        -
! Description: Disability Benfits of TMs                               -
! Called By:   Job-File                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-FSA
#debugd show '...Get-FSA'
Begin-Select
F.EMPLID,
F.EMPL_RCD,
F.PLAN_TYPE,
F.COVERAGE_ELECT,
F.BENEFIT_PLAN,
F.ANNUAL_PLEDGE

       Move 'PLAN_TYPE'       to  $FldName
       Move &F.PLAN_TYPE      to  $FldVal
       
       do Get-Xlat
       Move &X.XLATLONGNAME   to $PLAN_TYPE
       Move &F.COVERAGE_ELECT to $COVERAGE_ELECT
       Move &F.BENEFIT_PLAN   to $BENEFIT_PLAN
       IF &F.COVERAGE_ELECT='E'
         Move &F.ANNUAL_PLEDGE to #Annual_Pledge
       END-IF
       do Get-Ben-Plan-Descr
       do Write-Current-Enrollment-File
       do Clear-Variables

FROM PS_FSA_BENEFIT F 
WHERE F.EMPLID=$EMPLID
AND F.EMPL_RCD=$EMPL_RCD
[$SlctPlanCriteria3]
AND F.COVERAGE_ELECT IN ('E','W')
AND F.COVERAGE_BEGIN_DT <= $RUNDATE
AND F.EFFDT=(SELECT MAX(F1.EFFDT) FROM PS_FSA_BENEFIT F1
             WHERE F1.EMPLID=F.EMPLID
	       AND F1.EMPL_RCD=F.EMPL_RCD
	       AND F1.COBRA_EVENT_ID=F.COBRA_EVENT_ID
	       AND F1.PLAN_TYPE=F.PLAN_TYPE
	       AND F1.BENEFIT_NBR=F.BENEFIT_NBR
	       AND F1.EFFDT<=$RUNDATE)  
End-Select
#debugd show '...Get-FSA'
End-Procedure

!-----------------------------------------------------------------------
! Function:    Get-Savings                                       -
! Description: Disability Benfits of TMs                               -
! Called By:   Job-File                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Savings
#debugd show '...Get-Savings'
  
  Move 0 to #Pct_Gross
  Move 0 to #Pct_Gross_tax
  Move 0 to $401K_CONTRIB
  
Begin-Select
S.EMPLID,
S.EMPL_RCD,
S.PLAN_TYPE,
S.COVERAGE_ELECT,
S.BENEFIT_PLAN,
S.PCT_GROSS,
S.PCT_GROSS_ATAX

        Move 'PLAN_TYPE'       to  $FldName
	Move &S.PLAN_TYPE      to  $FldVal
	
	do Get-Xlat
	Move &X.XLATLONGNAME   to $PLAN_TYPE
	Move &S.COVERAGE_ELECT to $COVERAGE_ELECT
	Move &S.BENEFIT_PLAN   to $BENEFIT_PLAN
	Move &S.PCT_GROSS to #Pct_Gross
	
	if &S.COVERAGE_ELECT='E' 
	 if #Pct_Gross=0 
	    Move 'Not Contributing' to $401K_CONTRIB
	 else
	    Move #Pct_Gross to $401K_CONTRIB
	 end-if
	end-if 
	do Get-Ben-Plan-Descr
	do Write-Current-Enrollment-File
	do Clear-Variables

FROM PS_SAVINGS_PLAN S 
WHERE S.EMPLID=$EMPLID
AND S.EMPL_RCD=$EMPL_RCD
[$SlctPlanCriteria4]
AND S.COVERAGE_ELECT IN ('E','W')
AND S.COVERAGE_BEGIN_DT <= $RUNDATE
AND S.EFFDT=(SELECT MAX(S1.EFFDT) FROM PS_SAVINGS_PLAN S1 
             WHERE S1.EMPLID=S.EMPLID
               AND S1.EMPL_RCD=S.EMPL_RCD
               AND S1.PLAN_TYPE=S.PLAN_TYPE
               AND S1.BENEFIT_NBR=S.BENEFIT_NBR
               AND S1.EFFDT<=$RUNDATE) 
End-Select
#debugd show '...Get-Savings'
End-Procedure

!-----------------------------------------------------------------------
! Function:    Get-Pension                                             -
! Description: Pension Plan of TMs                                     -
! Called By:   Job-File                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Pension
#debugd show '...Get-Pension'
  
Begin-Select
p.emplid,
p.empl_rcd,
p.PLAN_TYPE,
p.coverage_elect,
p.benefit_plan

        Move 'PLAN_TYPE'       to  $FldName
      	Move &P.PLAN_TYPE      to  $FldVal
      	!do Select_From_Xlat ($FldName,$FldVal,$ShortName,$LongName)
      	do Get-Xlat
      	Move &X.XLATLONGNAME   to $PLAN_TYPE
      	Move &p.COVERAGE_ELECT to $COVERAGE_ELECT
      	Move &p.BENEFIT_PLAN   to $BENEFIT_PLAN
      	do Get-Ben-Plan-Descr
	do Write-Current-Enrollment-File
	do Clear-Variables

from ps_pension_plan p 
where p.emplid=$EMPLID
and p.empl_rcd=$EMPL_RCD
[$SlctPlanCriteria5]
and p.coverage_elect in ('E','W')	
and p.effdt=(select max(p1.effdt) from ps_pension_plan p1
             where p1.emplid=p.emplid
	       and p1.empl_rcd=p.empl_rcd
	       and p1.plan_type=p.plan_type
	       and p1.benefit_nbr=p.benefit_nbr
	       and p1.effdt<=$RUNDATE) 	 
End-Select
End-Procedure
!-----------------------------------------------------------------------
! Function:    Get-Ben-Plan-Descr                                      -
! Description: Health Benfits of TMs                                   -
! Called By:   Job-File                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Ben-Plan-Descr
#debugd show '...Get-Ben-Plan-Descr'
 Move ' ' to $BENEFIT_PLAN_DESCR
 if $COVERAGE_ELECT='W'
  Move 'Waived' to $BENEFIT_PLAN_DESCR
 end-if
Begin-Select
B.DESCR

  Move &B.DESCR to $BENEFIT_PLAN_DESCR
  
FROM PS_BENEF_PLAN_TBL B
WHERE B.BENEFIT_PLAN=$BENEFIT_PLAN
AND B.EFFDT=(SELECT MAX(B1.EFFDT) FROM PS_BENEF_PLAN_TBL B1
             WHERE B1.PLAN_TYPE=B.PLAN_TYPE
	       AND B1.BENEFIT_PLAN=B.BENEFIT_PLAN
	       AND B1.EFFDT<=$RUNDATE)
End-Select
#debugd show '...Get-Ben-Plan-Descr'
End-Procedure

!-----------------------------------------------------------------------
! Function:    Get-CovrgCd-Descr                                       -
! Description: Health Benfits of TMs                                   -
! Called By:   Job-File                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-CovrgCd-Descr
#debugd show '...Get-CovrgCd-Descr'
 Move ' ' to $COVRG_CD_DESCR
Begin-Select
C.DESCR 

  MOVE &C.DESCR TO $COVRG_CD_DESCR

FROM PS_COVRG_CD_TBL C
WHERE C.COVRG_CD=$COVRG_CD
AND C.EFFDT=(SELECT MAX(C1.EFFDT) FROM PS_COVRG_CD_TBL C1
             WHERE C1.COVRG_CD=C.COVRG_CD
	       AND C1.EFFDT<=$RUNDATE)	
End-Select
#debugd show '...Get-CovrgCd-Descr'
End-Procedure

!-----------------------------------------------------------------------
! Function:    Get-XLAT                                                -
! Description: Health Benfits of TMs                                   -
! Called By:   Job-File                                                -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-XLAT
Begin-select
X.XLATLONGNAME

FROM PSXLATITEM X
WHERE X.FIELDNAME=$FLDNAME
AND X.FIELDVALUE=$FLDVAL
AND X.EFFDT=(SELECT MAX(X1.EFFDT) FROM PSXLATITEM X1
             WHERE X1.FIELDNAME=X.FIELDNAME
             AND X1.FIELDVALUE=X.FIELDVALUE
             AND X1.EFFDT<=$RUNDATE)
End-Select             
End-Procedure Get-XLAT

!-----------------------------------------------------------------------
! Function:    Write-Current-Enrollment-File-Header                    -
! Description: Write header record for output file 1                   -
! Called By:   Create-Current-Enrollment-File                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Write-Current-Enrollment-File-Header
#debugd show '...Write-Current-Enrollment-File-Header'
  
   write 1 from $Quote 'BENEFIT_PROGRAM '   $Quote $Comma
                $Quote 'NATIONAL_ID     '   $Quote $Comma
                $Quote 'GEX-EMPLID      '   $Quote $Comma
                $Quote 'EMPL_RCD        '   $Quote $Comma
                $Quote 'NAME            '   $Quote $Comma
                $Quote 'PLAN_TYPE       '   $Quote $Comma
                $Quote 'COVERAGE_ELECT  '   $Quote $Comma
                $Quote 'BENEFIT_PLAN    '   $Quote $Comma
                $Quote 'BENEFIT_PLAN_DESCR' $Quote $Comma
                $Quote 'COVRG_CD          ' $Quote $Comma
                $Quote 'COVRG_CD_DESCR    ' $Quote $Comma
                $Quote '401K_CONTRIB      ' $Quote 
                
                  
end-procedure !Write-Current-Enrollment-File-Header
!-----------------------------------------------------------------------
! Function:    Write-Current-Enrollment-File                           -
! Description: Write Data to output file 1                             -
! Called By:                                                           -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Write-Current-Enrollment-File
#debugd show '...Write-Current-Enrollment-File'

   write 1 from $Quote $BENEFIT_PROGRAM    $Quote $Comma
                $Quote $NATIONAL_ID        $Quote $Comma
                $Quote $GEX-EMPLID         $Quote $Comma
                $Quote $Empl_Rcd           $Quote $Comma
                $Quote $Name               $Quote $Comma
                $Quote $PLAN_TYPE          $Quote $Comma
                $Quote $COVERAGE_ELECT     $Quote $Comma
                $Quote $BENEFIT_PLAN       $Quote $Comma
                $Quote $BENEFIT_PLAN_DESCR $Quote $Comma
                $Quote $COVRG_CD           $Quote $Comma
                $Quote $COVRG_CD_DESCR     $Quote $Comma
                $Quote $401K_CONTRIB       $Quote 
                        
end-procedure !Write-Current-Enrollment-File
!-----------------------------------------------------------------------
! Function:    Clear-Variables                                         -
! Description: clears values                                           -
! Called By:   Create-Current-Enrollment-File                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Clear-Variables
#debugd show '...Clear-Variables'
  
   Move ' ' to $PLAN_TYPE
   Move ' ' to $COVERAGE_ELECT
   Move ' ' to $BENEFIT_PLAN
   Move ' ' to $BENEFIT_PLAN_DESCR
   Move ' ' to $COVRG_CD
   Move ' ' to $COVRG_CD_DESCR
   Move ' ' to $401K_CONTRIB
  
end-procedure Clear-Variables
!-----------------------------------------------------------------------
! SQC Files for called procedures                                      -
!-----------------------------------------------------------------------
#include 'stdapi.sqc'
#include 'reset.sqc'     !Reset printer procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'  !Routines to calculate with dates
#include 'getlogou.sqc'  !Routines for the filepath
#include 'gexrnctl.sqc'
!#include 'readxlat.sqc'  !Routines for xlatlongname and xlatshortname
! -------------------  END OF FILE   ---------------------------------
