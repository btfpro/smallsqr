!***********************************************************************
! GEXPY002:  This program prints out a report of current deductions.   *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *
!***********************************************************************
!  RD011   SXK         10/07/1997     INITIAL CREATION                 *
!          CJH         11/20/1998     Add Alter Session procedure to   *
!                                     force session into Rule Optimizer*
!          SXK         12/17/1998     Performace tuning                *
!          JDH         12/28/1998     Changed sort order               *
!          JDH         01/25/1999     Removed hire date.               *
!                                     Removed action date.             *
!                                     Added effective date.            *
!          JDH         01/29/1999     Fixed page break problem.        *
!          JDH         02/08/1999     Performance Tuning.              *
!          JDH         02/23/1999     Display century on dates.        *
!          JDH         05/13/1999     Modified logic to allow report   *
!                                      to run weekly or monthly.       *
!          JDH         05/25/1999     Select records even if DED_MTD   *
!                                      is less than or equal to zero.  *
!          JDH         06/17/1999     Modified to only pull current    *
!                                      deductions.                     *
!          JDH         06/29/1999     Added A/P voucher logic.         *
!          SXK         10/11/1999     Modified to have error report    *
!					even if no errors are produced *
!          SXK         10/13/1999     Modified to look at $prev_dedcd  *
!					instead of dedcd and not to    *
!					process vouchers where dedcd   *
!					is SAVBON
!	   SXK         01/20/2000     Modified to have union from      *
!					job_labor                      *
!           PSR         08/06/2002     Modified UNION_CD FROM          *
!                                      JOB_LABOR TO JOB - Upgrade 8.3  *
!GEX_SEC_REENG 2015-11-01 Vahini Katta
! Changes related to ssn conversion
!***********************************************************************


#include 'setenv.sqc' !Set environment


#define #column1     1
#define #column2    13
#define #column3    46
#define #column4    59
#define #column5    66
#define #column6    75
#define #column7    88
#define #column8    96
#define #column9   109


begin-setup
  !#include 'setup32a.sqc'
  #include 'ptpsl177.sqc' !PSR 08/08/2002 8 Upgrade
  
  !Begin-SQL
  !  Alter Session Set OPTIMIZER_GOAL=RULE; !vendrbc 22/08/2007
 ! End-SQL
  declare-report deduction-report
Printer-Type=HPLASERJET
     layout=default
  end-declare
  declare-report report-log
Printer-Type=HPLASERJET
     layout=default
  end-declare
end-setup
begin-heading 8 for-reports=(report-log)
#debug9 show 'Begin-Heading'
move 'PY002LOG' to $ReportID
move 'Report Log' to $ReportTitle
#include 'stdhdg02.sqc'
  do Get-Department-Name
  do Get-Deduction-Name

  print ':'                 (3,8)

  print 'Pay End Date:'     (3,77)
  print $PayEndDt           (,+2)

  print 'DeptID:'           (4,1)
  print $DeptID             (,13)
  print $DeptName           (,+1)

  print 'Deduction Code:'   (4,77)
  print $Dedcd              (,+2)
  print $DeductionName      (,+2)

  print 'Message'           (+2,1)
  print '-' (+1,1,160) fill

end-heading

begin-heading 8 for-reports=(deduction-report)
#debug9 Show 'begin-heading'
  move 'PY002DED' to $ReportID
  let $ReportTitle = 'Generic Deduction Report'
  #Include 'stdhdg02.sqc'

  do Get-Department-Name
  do Get-Deduction-Name

  print ':'                 (3,8)

  print 'Pay End Date:'     (3,77)
  print $PayEndDt           (,+2)

  print 'DeptID:'           (4,1)
  print $DeptID             (,13)
  print $DeptName           (,+1)

  print 'Deduction Code:'   (4,77)
  print $Dedcd              (,+2)
  print $DeductionName      (,+2)

  print 'BIRTH'          (+2,{#column3})
  print 'FULL'           (,{#column4})
  print 'EFF'            (,{#column6})
  print 'ACCOUNT'        (,{#column8})
  print '      CURRENT'  (,{#column9})

  !print 'SSN'            (+1,{#column1}) !GEX_SEC_REENG 2015-11-01 Vahini Katta
  print 'EMPLID'         (+1,{#column1})  !GEX_SEC_REENG 2015-11-01 Vahini Katta
  print 'NAME'           (,{#column2})
  print 'DATE'           (,{#column3})
  print 'PART'           (,{#column4})
  print 'ACTION'         (,{#column5})
  print 'DATE'           (,{#column6})
  print 'UNION'          (,{#column7})
  print 'CODE'           (,{#column8})
  print '    DEDUCTION'  (,{#column9})

  print '-'              (+1,{#column1},9) fill
  print '-'              (,{#column2},30)  fill
  print '-'              (,{#column3},10)  fill
  print '-'              (,{#column4},4)   fill
  print '-'              (,{#column5},6)   fill
  print '-'              (,{#column6},10)  fill
  print '-'              (,{#column7},5)   fill
  print '-'              (,{#column8},10)  fill
  print '-'              (,{#column9},13)  fill
end-heading


begin-report
#debug9 Show 'begin-report'
  use-report deduction-report
  do Init-DateTime
  do Init-Number
  do stdapi-init
  do Get-Calendar-Year-Id
  move 'GEXPY002' to $ReportID
  move 'Generic Deduction Report ' to $ReportTitle
  display $ReportTitle

  do Get-Current-DateTime
  let $orig_source = 'DED'
  let #error_Count = 0
  do Report
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  if #error_count = 0
     use-report report-log
     print 'NO ERRORS FOUND' (+1,1)
     use-report deduction-report
  end-if
  do stdapi-term
end-report


begin-procedure Report
#debug9 Show 'Report'
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  
  move 'N' to $Errorfound

  if $prcs_process_instance = ''
    do Ask-As-Of-Date
  else
    Do GEXXX922-Select-Parameters
    let $asofdate = $GEX_RC_PAY.ASOFDATE
    if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
      let $asofdate = $asoftoday
    end-if
  end-if
 
  do Get-Last-Confirmed-Pay

  Let $X000_Order_By = 'Company, DeptID, Deduction Code, Name'
  Do Format-DateTime($Pay_End_Dt, $PayEndDt, {DEFDATE}, '', '')

  do Print-Cover-Page
  do Main-Process
end-procedure


begin-procedure Print-Cover-Page
#debug9 Show 'Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print 'As Of Date :'                                            (+2,5)
  Print $AsOfDate                                                 (0,+2)
  Print 'Last Confirmed Pay End Date:'                            (+2,5)
  Print $pay_end_dt                                               (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

  Let #PAGE-COUNT = 0
End-Procedure


Begin-Procedure Get-Last-Confirmed-Pay
#debug9 Show 'Get-Last-Confirmed-Pay'
Begin-Select
Max(pay_end_dt) &pay_end_dt

  Let $AsOfDate         = &pay_end_dt
  Let $pay_end_dt       = &pay_end_dt

  Show 'Last confirmed pay end date:  ' $pay_end_dt

  If Rtrim($pay_end_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  End-If

From   ps_pay_calendar

Where  pay_end_dt      <= $AsOfDate
And    pay_confirm_run  = 'Y'
End-Select
End-Procedure


begin-procedure Main-Process
#debug9 Show 'Main-Process'
begin-select ON-ERROR=SQL-Error-Found('Main-Process')
C1.COMPANY   ()  on-break  level=1
			   print=never
			   save=$prev_company
			   after=after-company-change

C1.DEPTID    ()  on-break  level=2
			   print=never
			   save=$prev_dept
			   after=after-dept-change 

DE.DEDCD     ()  on-break  level=3
			   print=never
			   save=$prev_dedcd

DE.PLAN_TYPE ()  on-break  level=4
			   print=never
			   save=$prev_plan_type
			   before=before-dedcd-change
			   after=after-dedcd-change

PD.NAME
J.UNION_CD
Cc.CHECK_DT !SXK 10/09/1999 
J.PAYGROUP
J.ACCT_CD
J.EMPLID
J.FULL_PART_TIME
J.ACTION
J.EFFDT
PD.BIRTHDATE &birthdate
SUM(DE.DED_CUR) &DE.Ded_CUR

  let $Data-Found-Flag = 'Y'

  move 'N' to $errorfound

  let $Company        = &C1.COMPANY
  let $DeptID         = &C1.DEPTID
  let $PlanType       = &DE.PLAN_TYPE
  let $Dedcd          = &DE.DEDCD
  let $emplid         = &J.EMPLID
  let $acct_cd        = &J.ACCT_CD
  let $union_cd       = &J.UNION_CD
  let $check_dt       = &Cc.CHECK_DT
  let $paygroup       = &J.PAYGROUP

  move &DE.Ded_CUR to #DedCUR

  add #dedCUR to #tot_dedCUR

  do Print-Record

FROM   PS_PERSONAL_DATA  PD, 
!       PS_EMPLOYMENT     E,
       PS_JOB            J,
       ps_pay_check      C1,
       ps_pay_Calendar   cc,
       ps_pay_deduction  DE

WHERE  PD.EMPLID         = C1.EMPLID

AND    J.EFFDT           =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID     = J.EMPLID
       AND    EMPL_RCD  = J.EMPL_RCD
       AND    EFFDT     <= $pay_end_dt)

AND    J.EFFSEQ          =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB 
       WHERE  EMPLID     = J.EMPLID
       AND    EMPL_RCD  = J.EMPL_RCD
       AND    EFFDT      = J.EFFDT)

And    C1.PAY_END_DT     = $pay_end_dt

And    C1.EMPLID         = j.emplid
And    C1.EMPL_RCD      = j.empl_rcd

And    DE.COMPANY        = C1.COMPANY
And    DE.PAYGROUP       = C1.PAYGROUP
And    DE.PAY_END_DT     = C1.PAY_END_DT
And    DE.OFF_CYCLE      = C1.OFF_CYCLE
And    DE.PAGE_NUM          = C1.PAGE_NUM
And    DE.LINE_NUM          = C1.LINE_NUM
And    DE.SEPCHK         = C1.SEPCHK
!SXK 10/09/1999 Begin
And    cc.company = c1.company
and    cc.paygroup = c1.paygroup
and    cc.pay_end_dt = c1.pay_end_Dt
!SXK 10/09/1999 End

GROUP BY C1.COMPANY,
	 C1.DEPTID,
	 DE.DEDCD,
	 DE.PLAN_TYPE,
	 PD.NAME,
	 J.UNION_CD,
	 CC.CHECK_DT,
	 J.PAYGROUP,
	 J.ACCT_CD,
	 J.EMPLID,
	 J.FULL_PART_TIME,
	 J.ACTION,
	 J.EFFDT,
	 PD.BIRTHDATE

ORDER BY C1.COMPANY,
	 C1.DEPTID,
	 DE.DEDCD,
	 DE.PLAN_TYPE,
	 PD.NAME

end-select

  If $Data-Found-Flag = 'Y'
    print 'Grand Totals: ' (+2,1)
    print #grand_total_CUR (,{#column9})  edit 99,999,990.99
  Else
    New-Page
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (25,) Center
  End-If
end-procedure


begin-procedure Print-Record
#debug9 Show 'Print-Record'
  let $AcctCd = &J.ACCT_CD
  do Get-Acct-cd-descr

  Let $Year4 = '1'
  Do Format-DateTime(&birthdate, $birthdate, {DEFMDY}, '', '')

  Let $Year4 = '1'
  Do Format-DateTime(&j.effdt, $effdate, {DEFMDY}, '', '')

  print &J.EMPLID          (+1,{#column1})
  print &PD.NAME           (,{#column2},30)
  print $birthdate         (,{#column3})
  print &J.FULL_PART_TIME  (,{#column4})
  print &J.ACTION          (,{#column5})
  print $effdate           (,{#column6})
  print &J.UNION_CD        (,{#column7})
  print $AcctNameAbbrv     (,{#column8})
  print #dedCUR            (,{#column9})   edit 99,999,990.99
end-procedure


begin-procedure Before-Dedcd-Change
#debug9 Show 'Before-Dedcd-Change'
  new-page
end-procedure


begin-procedure After-Dedcd-Change
#debug9 Show 'After-Dedcd-Change'
 
  Print 'Totals for Deduction Code'  (+2,1)
  print $prev_dedcd    (,+1)
  print #tot_dedCUR    (,{#column9})  edit 99,999,990.99

  add #tot_dedCUR to #grand_dept_CUR

  move 0 to #tot_dedCUR
end-procedure


begin-procedure After-Dept-Change
#debug9 Show 'After-Dept-Change'
  print 'Totals for Department'  (+2,1)
  print $prev_dept               (,+1)
  print #grand_dept_CUR          (,{#column9})  edit 99,999,990.99

  add #grand_dept_CUR to #grand_company_CUR

  move 0 to #grand_dept_CUR
end-procedure


begin-procedure After-Company-Change
#debug9 Show 'After-Company-Change'
  print 'Totals for Company'  (+2,1)
  print $prev_company         (,+1)
  print #grand_company_CUR    (,{#column9})  edit 99,999,990.99

  add #grand_company_CUR to #grand_total_CUR

  move 0 to #grand_company_CUR
end-procedure



begin-procedure SQL-Error-Found($Proc_Name) 
#debug9 Show 'SQL-Error-Found'
  do error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
end-procedure


begin-procedure Error-Found
#debug9 Show 'Error-Found'
  move 'Y' to $ErrorFound
  add 1 to #error_count
  let $EmplId_1st3  = substr($EmplId,1,3)
  let $EmplId_mid2  = substr($EmplId,4,2)
  let $EmplId_last4 = substr($EmplId,6,4)
 
  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  display $EmplID11 
end-procedure


#include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'getactnm.sqc'  !Get-Acct-cd-descr procedure
#include 'getdednm.sqc'  !Get-Deduction-Name procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#include 'gexxx922.sqc'  !Get pay single row run control
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
