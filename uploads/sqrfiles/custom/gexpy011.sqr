!***********************************************************************
!  GEXPY011:  This is a summary report showing company, paygroup,      *
!	      deptid and the number of employees and total earnings      *
!             total deductions and total taxes.                        *
!	      This is sorted by company,paygroup and deptid, acct_cd and *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY011:  		Monthly Pay Register                           *
!                                                                      *
! Written by:		Sreeni Kutam                                   *
!                                                                      *
! Normally Run:		Monthly                                        *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!   INITIALS	DATE		DESCRIPTION OF THE CHANGE              *
!***********************************************************************
!    SXK	03/12/99     Initial Creation                          *
!    SXK	04/15/1999   Modified to avoid missing calculation     *
!			     when dept change occurs and previous      *
!			     account code is same as current acct code * 
!                                                                      *					
!    JNB        04/13/2000   Modified Select Clause in Get-Tax-Bal     *
!                            to exclude tax_class 'E' and 'Q'          *
!                                                                      *
!    SCM        04/08/2002   Modified to exclude Tax Classes:          *
!                            J=OASDI/ER tips, Z=Medicare/ER tips       * 
!    SXD   08/16/2007        Modified to remove the reference of EFFDT *
!                            from the query in Procedure P200-Main-    *
!                             Process.                                 * 
! GEX-MXT      09/26/2007    Replaced PS_ACCT_CD_TBL with              *
!                             PS_GEX_ACCT_CD_TBL 
!***********************************************************************

#Include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

Begin-Heading 7
#debug9 Show 'Begin-Heading'

#Include 'stdhdg01.sqc'

  Let $X000_temp_out = 'Sorted by ' || $Sort_Display
  Print $X000_temp_out         (3,)  center

  Let $X000_temp_out = 'As Of Date :' || $X000_REPORT_HEADING_ASOFDATE
  Print $X000_temp_out         (4,)  center

  position (+1)

  Print 'COMPANY'               (+2,001)
  Print 'DEPTID'                (+0,012)
  print 'ACCTCD'                (+0,024)
  print 'DESCRIPTION'           (+0,034)
  print 'ERNCD'                 (+0,059)
  Print 'TOTAL EARNINGS  '      (+0,077)
  print 'DEDCD'                 (+0,095)
  print 'TOTAL DEDUCTIONS'      (+0,0114)
  Print 'TOTAL TAXES     '      (+0,0134)

  Print '-'                    (+1,1,150) Fill

End-Heading


Begin-Report
#debug9 Show 'Begin-Report'
!GEX_PY231 SXD   08/17/2007    Begin
 !do Alter-Session   ! Set Session to RULE Optimizer
!GEX_PY231 SXD   08/17/2007     end    
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc


  create-array name=earns
	       size=200
	       field=erncd:char
	       field=mtd:number
	       field=qtd:number
	       field=ytd:number

  create-array name=ded
		size=200
		field=dedcd:char
		field=mtd_d:number
		field=qtd_d:number
		field=ytd_d:number

  create-array name=dept_earns
	       size=200
	       field=dept_erncd:char
	       field=dept_mtd:number
	       field=dept_qtd:number
	       field=dept_ytd:number

  create-array name=dept_ded
		size=200
		field=dept_dedcd:char
		field=dept_mtd_d:number
		field=dept_qtd_d:number
		field=dept_ytd_d:number

  create-array name=company_earns
	       size=200
	       field=company_erncd:char
	       field=company_mtd:number
	       field=company_qtd:number
	       field=company_ytd:number

  create-array name=company_ded
		size=200
		field=company_dedcd:char
		field=company_mtd_d:number
		field=company_qtd_d:number
		field=company_ytd_d:number

  Let $GEXXX900_Company_Alias  = 'A.COMPANY'
  Let $GEXXX902_Deptid_Alias = 'A.DEPTID'
  Let $GEXXX909_Acct_cd_alias = 'A.ACCT_CD'

  if $prcs_process_instance = ''
      Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = '1=1'
      Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA = 'ALL'

      Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
      Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'

      Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA = '1=1'
      Let $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA = 'ALL'
 
      Do Ask-As-Of-Date
      let $reportdate_ccyy = $AsOfDate
  else
!       get parameters from single row run control record 
	Do GEXXX922-Select-Parameters
      let $reportdate_ccyy = $GEX_RC_PAY.ASOFDATE
      if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
        let $reportdate_ccyy = $asoftoday
      end-if

	Do GEXXX900-Select-Company-Parameters 
	Do GEXXX902-Select-Deptid-Parameters 
        Do GEXXX909-Select-Acct-CD-Parameters
   end-if

  Do P140-Get-Last-Confirmed-Pay

  Do P100-Start
  Do P200-Main-Process
  Do P300-Finish

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
End-Report


Begin-Procedure P140-Get-Last-Confirmed-Pay
#debug9 Show 'P140-Get-Last-Confirmed-Pay'
Let $check_dt = ' '
display $reportdate_ccyy
Begin-Select Loops=1
check_dt
To_Number(To_Char(check_dt,'MM'))          &balance_period
To_Char(check_dt,'YYYY')        &balance_year

  Let $check_dt = &check_dt
  display $check_dt
  Let $balance_year     = &balance_year
  Let #balance_period   = &balance_period

  let #balance_qtr = #balance_period
  let #balance_qtr = ((#balance_qtr - 1)/ 3) + 1
  do Format-Number(#balance_qtr, $balance_qtr, '9.99') !avoid rounding the integer portion
  move $balance_qtr to $balance_qtr x     !save the integer portion
  let #balance_qtr = $balance_qtr

From   ps_pay_calendar

Where  pay_end_dt         =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  pay_end_dt <= $reportdate_ccyy
       and company = 'GEI'
       and paygroup = 'RET'
       And pay_confirm_run = 'Y')
End-Select

  If Rtrim($check_dt,' ') = ''
    Show 'No confirmed pay period found in calendar'
    Stop
  End-If

End-Procedure


Begin-Procedure P100-Start
#debug9 Show 'P100-Start'

  Let $ReportID    = 'GEXPY011'
  Let $ReportTitle = 'Monthly Pay Register'

  Show '$ReportID='    $ReportID
  Show '$ReportTitle=' $ReportTitle
  Show '$ReportDate='  $ReportDate
  Show '$ReportTime='  $ReportTime

  Let $AsOfDate = $reportdate_ccyy
  Let $X000_WHERE_SELECT_ASOFDATE = $AsofDate

  Do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')

  Let $X000_ORDER_BY = 'Order by a.company, a.deptid, a.acct_cd'
  Let $Sort_Display = 'Company, Deptid, AcctCD'

  Show '$X000_WHERE_SELECT_ASOFDATE ='   $X000_WHERE_SELECT_ASOFDATE

  Do P150-Print-Cover-Page

End-Procedure

begin-procedure P150-Print-Cover-Page
#debug9 Show 'P150-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OPRID          ='                                  (+2,5)
  Print $Prcs_OPRID                                               (0,+2)
  Print '$PRCS_RUN_CNTL_ID    ='                                  (+1,5)
  Print $PRCS_RUN_CNTL_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX900_Include_Company_Display_Criteria ='   (+1,5)
  Print $GEXXX900_Include_Company_Criteria       (0,+2)
  Print '$GEXXX902_Include_Deptid_Display_Criteria           ='   (+1,5)
  Print $GEXXX902_Include_Deptid_Criteria	            (0,+2)
  Print '$GEXXX909_Include_Acct_cd_Display_Criteria ='   (+1,5)
  Print $GEXXX909_Include_Acct_cd_Criteria       (0,+2)


  Print 'As Of Date :'                                        (+2,5)
  Print $X000_REPORT_HEADING_ASOFDATE                         (0,+2)
 
  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $X000_ORDER_BY                                        (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
  Let #PAGE-COUNT = 1
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'

  let #line_count = 0
  Let $Data-Found-Flag = 'N'
  do convert-to-dtu-date($reportdate_ccyy,$reportdate_dtu)
  let $reportdate_yyyy = substr($reportdate_dtu,1,4)
  let $reportdate_mm = substr($reportdate_dtu,6,2)
position (+1)
Begin-Select
A.COMPANY (,4) on-break print=Change/top-page level=1 save=$prev_company after=company-change
               before=company-before-change
A.DEPTID (,13) on-break print=Change/top-page level=2 save=$prev_deptid after=dept-change
A.ACCT_CD (,25) on-break print=change/top-page level=3 save=$prev_acctcd after=acctcd-change
L.DESCR (,34) on-break print=change/top-page

  Let $Data-Found-Flag = 'Y'
  !SXK 04/15/1999 begin - Added dept_change_1 and company_change_1 to
  !avoid calculating sums when departments have only one account code
  !and when dept change occurs, the following if statement returns true
  if ($prev_acct <> &a.acct_cd) or ($dept_Change_1 = 'Y') or($company_change_1 = 'Y')
     let $dept_change_1 = 'N'
     let $company_change_1 = 'N'
  !SXK 04/15/1999 End
     do get-earnings-bal
     do get-deductions-bal
     do get-tax-bal
     move &a.acct_cd to $preV_acct
     add 1 to #inputtran
  end-if

    if $prev_dept <> &a.deptid
        do get-earnings-bal-dept
        do get-deductions-bal-dept
        move &a.deptid to $preV_dept
     end-if

    if $prev_comp <> &a.company
        do get-earnings-bal-company
        do get-deductions-bal-company
        move &a.company to $preV_comp
     end-if

!From   PS_JOB A, ps_acct_cd_tbl l		!GEX-MXT  COMMENTED ON 09/26/2007
From   PS_JOB A, ps_gex_acct_cd_tbl l		!GEX-MXT  ADDED ON 09/26/2007	
Where [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
AND   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
AND   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
AND    A.EFFDT =
      (select max(effdt)
       from   ps_job
       where  emplid     = A.EMPLID
       and    empl_rcd  = A.EMPL_RCD
       and    effdt     <= $reportdate_ccyy)
AND    A.EFFSEQ          =
      (select max(effseq)
       from   ps_job
       where  emplid     = A.EMPLID
       and    empl_Rcd  = A.EMPL_RCD
       and    effdt      = A.EFFDT)
and l.acct_cd = a.acct_cd
!GEX-MXT  UNCOMMENTED ON 09/26/2007-Begin
!GEX_PY231 SXD    08/16/2007   Begin 
and l.effdt = (select max(effdt)
		!from ps_acct_cd_tbl
		from ps_gex_acct_cd_tbl
		where acct_cd = l.acct_cd
		and effdt <= $reportdate_ccyy)
!GEX_PY231 SXD    08/16/2007   end
!GEX-MXT  UNCOMMENTED ON 09/26/2007-End
[$X000_ORDER_BY]

End-Select
Show 'Exiting procedure 200-Main-Process.'
  If $Data-Found-Flag = 'N'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

End-Procedure

!**********************************************************************
Begin-Procedure Get-Earnings-Bal
!**********************************************************************
#debug9 display 'Get-Earnings-Bal'
move 'N' to $found
Begin-Select on-error=sql-error-found('Get-Earnings-Bal')
b.erncd
sum(b.grs_ytd) &earns_ytd
sum(b.grs_qtd) &earns_qtd
sum(b.grs_mtd) &earns_mtd

  move 'Y' to $found
  move &b.erncd to $erncd

  add &earns_ytd to #acct_earns_ytd
  add &earns_qtd to #acct_earns_qtd
  add &earns_mtd to #acct_earns_mtd

  move &earns_ytd to #earns_ytd
  move &earns_qtd to #earns_qtd
  move &earns_mtd to #earns_mtd

!  display 'Erncd: ' noline
!  display $erncd
!  display 'MTD: ' noline
!  display #earns_mtd
!  display 'QTD: ' noline
!  display #earns_qtd
!  display 'YTD: ' noline
!  display #earns_ytd

!  display 'Counter: ' noline
!  display #i
  if #earns_ytd > 0
     put $erncd #earns_mtd #earns_qtd #earns_ytd into earns(#i)

     add 1 to #i

  end-if


  let #earns_mtd = 0
  let #earns_qtd = 0
  let #earns_ytd = 0

from   ps_earnings_bal b
where  b.emplid               in (select distinct emplid
				from ps_job
				where company = &a.company
 				and deptid = &a.deptid
				and acct_cd = &a.acct_cd)
and    b.company              = &A.COMPANY
and    b.balance_id           = 'CY'
and    b.balance_year         = $balance_year
and    b.balance_period       = #balance_period
and    b.spcl_balance         = 'N'
group by b.erncd
order by b.erncd
end-select
end-procedure

!**********************************************************************
Begin-Procedure Get-Deductions-Bal
!**********************************************************************
#debug9 display 'Get-Deductions-Bal'
move 'N' to $found

Begin-Select on-error=sql-error-found('Get-Deductions-Bal')
c.dedcd
sum(c.ded_ytd) &ded_ytd
sum(c.ded_qtd) &ded_qtd
sum(c.ded_mtd) &ded_mtd

  move 'Y' to $found

  move &c.dedcd to $dedcd

  add &ded_ytd to #acct_ded_ytd
  add &ded_qtd to #acct_ded_qtd
  add &ded_mtd to #acct_ded_mtd

  move &ded_ytd to #ded_ytd
  move &ded_qtd to #ded_qtd
  move &ded_mtd to #ded_mtd

!  display 'Dedcd: ' noline
!  display $dedcd
!  display 'MTD: ' noline
!  display #ded_mtd
!  display 'QTD: ' noline
!  display #ded_qtd
!  display 'YTD: ' noline
!  display #ded_ytd

!  display 'Counter: ' noline
!  display #j
  if #ded_ytd > 0
     put $dedcd #ded_mtd #ded_qtd #ded_ytd into ded(#j)

     add 1 to #j

  end-if

  let #ded_mtd = 0
  let #ded_qtd = 0
  let #ded_ytd = 0


from   ps_deduction_bal c
where  c.emplid               in (select distinct emplid
				from ps_job
				where company = &a.company
				and deptid = &a.deptid
				and acct_cd = &a.acct_cd)
and    c.company              = &A.COMPANY
and    c.balance_id           = 'CY'
and    c.balance_year         = $balance_year
and    c.balance_period       = #balance_period
group by c.dedcd
order by c.dedcd
end-select
end-procedure

!**********************************************************************
Begin-Procedure Get-Earnings-Bal-Dept
!**********************************************************************
#debug9 display 'Get-Earnings-Bal-Dept'

move 'N' to $found
Begin-Select on-error=sql-error-found('Get-Earnings-Bal-Dept')
b1.erncd
sum(b1.grs_ytd) &earns_ytd_dept
sum(b1.grs_qtd) &earns_qtd_dept
sum(b1.grs_mtd) &earns_mtd_dept

  move 'Y' to $found
  move &b1.erncd to $erncd_dept

  move &earns_ytd_dept to #earns_ytd_dept
  move &earns_qtd_dept to #earns_qtd_dept
  move &earns_mtd_dept to #earns_mtd_dept

!  display 'Erncd: ' noline
!  display $erncd_dept
!  display 'MTD: ' noline
!  display #earns_mtd_dept
!  display 'QTD: ' noline
!  display #earns_qtd_dept
!  display 'YTD: ' noline
!  display #earns_ytd_dept

!  display 'Counter: ' noline
!  display #a

  if #earns_ytd_dept > 0
     put $erncd_dept #earns_mtd_dept #earns_qtd_dept #earns_ytd_dept into dept_earns(#a)

     add 1 to #a

  end-if


  let #earns_mtd_dept = 0
  let #earns_qtd_dept = 0
  let #earns_ytd_dept = 0

from   ps_earnings_bal b1
where  b1.emplid               in (select distinct emplid
				from ps_job
				where company = &a.company
 				and deptid = &a.deptid)
and    b1.company              = &a.company
and    b1.balance_id           = 'CY'
and    b1.balance_year         = $balance_year
and    b1.balance_period       = #balance_period
and    b1.spcl_balance         = 'N'
group by b1.erncd
order by b1.erncd
end-select
end-procedure

!**********************************************************************
Begin-Procedure Get-Deductions-Bal-Dept
!**********************************************************************
#debug9 display 'Get-Deductions-Bal-Dept'
move 'N' to $found

Begin-Select on-error=sql-error-found('Get-Deductions-Bal-Dept')
c1.dedcd
sum(c1.ded_ytd) &ded_ytd_dept
sum(c1.ded_qtd) &ded_qtd_dept
sum(c1.ded_mtd) &ded_mtd_dept

  move 'Y' to $found

  move &c1.dedcd to $dedcd_dept

  move &ded_ytd_dept to #ded_ytd_dept
  move &ded_qtd_dept to #ded_qtd_dept
  move &ded_mtd_dept to #ded_mtd_dept

!  display 'Dedcd: ' noline
!  display $dedcd
!  display 'MTD: ' noline
!  display #ded_mtd
!  display 'QTD: ' noline
!  display #ded_qtd
!  display 'YTD: ' noline
!  display #ded_ytd

!  display 'Counter: ' noline
!  display #j
  if #ded_ytd_dept > 0
     put $dedcd_dept #ded_mtd_dept #ded_qtd_dept #ded_ytd_dept into dept_ded(#b)

     add 1 to #b

  end-if

  let #ded_mtd_dept = 0
  let #ded_qtd_dept = 0
  let #ded_ytd_dept = 0


from   ps_deduction_bal c1
where  c1.emplid               in (select distinct emplid
				from ps_job
				where company = &a.company
				and deptid = &a.deptid)
and    c1.company              = &a.company
and    c1.balance_id           = 'CY'
and    c1.balance_year         = $balance_year
and    c1.balance_period       = #balance_period
group by c1.dedcd
order by c1.dedcd
end-select
end-procedure

!**********************************************************************
Begin-Procedure Get-Earnings-Bal-Company
!**********************************************************************
#debug9 display 'Get-Earnings-Bal-Company'
move 'N' to $found
Begin-Select on-error=sql-error-found('Get-Earnings-Bal-Company')
b2.erncd
sum(b2.grs_ytd) &earns_ytd_company
sum(b2.grs_qtd) &earns_qtd_company
sum(b2.grs_mtd) &earns_mtd_company

  move 'Y' to $found
  move &b2.erncd to $erncd_company

  move &earns_ytd_company to #earns_ytd_company
  move &earns_qtd_company to #earns_qtd_company
  move &earns_mtd_company to #earns_mtd_company

!   display 'Erncd: ' noline
!  display $erncd_company
!  display 'MTD: ' noline
!  display #earns_mtd_company
!  display 'QTD: ' noline
!  display #earns_qtd_company
!  display 'YTD: ' noline
!  display #earns_ytd_company

!  display 'Counter: ' noline
!  display #m

  if #earns_ytd_company > 0
!     display 'Writing into'
     put $erncd_company #earns_mtd_company #earns_qtd_company #earns_ytd_company into company_earns(#m)

     add 1 to #m

  end-if


  let #earns_mtd_company = 0
  let #earns_qtd_company = 0
  let #earns_ytd_company = 0

from   ps_earnings_bal b2
where  b2.emplid in (select distinct emplid from ps_job
			where company = &a.company)
and    b2.company              = &a.company
and    b2.balance_id           = 'CY'
and    b2.balance_year         = $balance_year
and    b2.balance_period       = #balance_period
and    b2.spcl_balance         = 'N'
group by b2.erncd
order by b2.erncd
end-select
end-procedure

!**********************************************************************
Begin-Procedure Get-Deductions-Bal-Company
!**********************************************************************
#debug9 display 'Get-Deductions-Bal-Company'
move 'N' to $found

Begin-Select on-error=sql-error-found('Get-Deductions-Bal-Company')
c2.dedcd
sum(c2.ded_ytd) &ded_ytd_company
sum(c2.ded_qtd) &ded_qtd_company
sum(c2.ded_mtd) &ded_mtd_company

  move 'Y' to $found

  move &c2.dedcd to $dedcd_company

  move &ded_ytd_company to #ded_ytd_company
  move &ded_qtd_company to #ded_qtd_company
  move &ded_mtd_company to #ded_mtd_company

!  display 'Dedcd: ' noline
!  display $dedcd
!  display 'MTD: ' noline
!  display #ded_mtd
!  display 'QTD: ' noline
!  display #ded_qtd
!  display 'YTD: ' noline
!  display #ded_ytd

!  display 'Counter: ' noline
!  display #j
  if #ded_ytd_company > 0
     put $dedcd_company #ded_mtd_company #ded_qtd_company #ded_ytd_company into company_ded(#n)

     add 1 to #n

  end-if

  let #ded_mtd_company = 0
  let #ded_qtd_company = 0
  let #ded_ytd_company = 0


from   ps_deduction_bal c2
where  c2.emplid in (Select distinct emplid from ps_job where
			company = &a.company)
and    c2.company              = &a.company
and    c2.balance_id           = 'CY'
and    c2.balance_year         = $balance_year
and    c2.balance_period       = #balance_period
group by c2.dedcd
order by c2.dedcd
end-select
end-procedure


!**********************************************************************
Begin-Procedure Get-Tax-Bal
!**********************************************************************

move 'N' to $found

Begin-Select on-error=sql-error-found('Get-Tax-Bal')
sum(d.tax_ytd) &tax_ytd
sum(d.tax_qtd) &tax_qtd
sum(d.tax_mtd) &tax_mtd

  move 'Y' to $found
  add &tax_ytd to #acct_tax_ytd
  add &tax_qtd to #acct_tax_qtd
  add &tax_mtd to #acct_tax_mtd

from   ps_tax_balance d
where  d.emplid               in (select distinct emplid
				  from ps_job
				  where company = &a.company
				  and deptid = &a.deptid
				  and acct_cd = &a.acct_cd)
and    d.company              = &A.COMPANY
and    d.balance_id           = 'CY'
and    d.balance_year         = $balance_year
and    d.balance_period       = #balance_period
and    d.tax_class <> 'U'
and    d.tax_class <> 'E'             !JNB 04/13/2000
and    d.tax_class <> 'Q'             !JNB 04/13/2000 
and    d.tax_class <> 'J'             !SCM 04/08/2002  exclude OASDI/ER Tips
and    d.tax_class <> 'Z'             !SCM 04/08/2002  exclude MEDIcare/ER Tips
and   not (d.tax_class='P' and d.state='PA' and d.locality=' ') !KMW 4/14/2000 remove memo row 
end-select
end-procedure


!**********************************************************************
Begin-Procedure Dept-Change
!**********************************************************************

  do print-dept-arrays
!SXK 04/15/1999 Begin
  let $dept_change_1 = 'Y'
!SXK 04/14/1999 End
  next-listing need=4
  print 'Total for Department ' (+2,1)
  print $prev_deptid (,+2)
  print 'MTD'  (,70)
  print #dept_earns_MTD (0,75) edit 999,999,999.99
  print #dept_ded_MTD   (0,110) edit 999,999,999.99
  print #dept_tax_mtd   (0,130) edit 999,999,999.99
  print 'QTD'  (+1,70)
  print #dept_earns_QTD (0,75) edit 999,999,999.99
  print #dept_ded_QTD   (0,110) edit 999,999,999.99
  print #dept_tax_qtd   (0,130) edit 999,999,999.99
  print 'YTD'  (+1,70)
  print #dept_earns_YTD (0,75) edit 999,999,999.99
  print #dept_ded_YTD   (0,110) edit 999,999,999.99
  print #dept_tax_ytd   (0,130) edit 999,999,999.99

  add #dept_earns_mtd to #company_earns_mtd
  add #dept_earns_qtd to #company_earns_qtd
  add #dept_earns_ytd to #company_earns_ytd

  add #dept_ded_mtd to #company_ded_mtd
  add #dept_ded_qtd to #company_ded_qtd
  add #dept_ded_ytd to #company_ded_ytd

  add #dept_tax_mtd to #company_tax_mtd
  add #dept_tax_qtd to #company_tax_qtd
  add #dept_tax_ytd to #company_tax_ytd

  move 0 to #dept_earns_mtd
  move 0 to #dept_earns_qtd
  move 0 to #dept_earns_ytd

  move 0 to #dept_ded_mtd
  move 0 to #dept_ded_qtd
  move 0 to #dept_ded_ytd

  move 0 to #dept_tax_mtd
  move 0 to #dept_tax_qtd
  move 0 to #dept_tax_ytd
  display 'Prev Company;' noline
  display $prev_company
  display &a.company

!  if $company_change <> 'Y'
     if $prev_deptid <> &a.deptid and ($prev_company = &a.company)
        new-page
     end-if
!  else
!     let $company_change = 'N'
!  end-if
        position (+2)
end-procedure

!**********************************************************************
Begin-Procedure ACCTCD-Change
!**********************************************************************

 let #k = 0
 let #l = 0
 let $data_exists = 'N'
 let $tax_printed = 'N'
 let #i = #i - 1
 let #j = #j - 1

 if #j > 0 or #i > 0
   let $data_exists = 'Y'
 end-if

 if #j <= #i and $data_exists = 'Y'
  while #k <= #i
        get $erncd_o #earns_mtd_o #earns_qtd_o #earns_ytd_o from earns(#k)
        print $erncd_o (,60)
        print 'MTD' (,70)
        print #earns_mtd_o (,75) edit 999,999,999.99

        if #l <= #j
          get $dedcd_o #ded_mtd_o #ded_qtd_o #ded_ytd_o from ded(#l)
          print $dedcd_o (,95)
          print 'MTD' (,105)
          print #ded_mtd_o (,110) edit 999,999,999.99
        end-if

        if $tax_printed = 'N'
           print #acct_tax_mtd (,130) edit 999,999,999.99
        end-if

        print 'QTD' (+1,70)
        print #earns_qtd_o (,75) edit 999,999,999.99

        if #l <= #j
          print 'QTD' (,105)
          print #ded_qtd_o (,110) edit 999,999,999.99
        end-if

        if $tax_printed = 'N'
           print #acct_tax_qtd (,130) edit 999,999,999.99
        end-if


        print 'YTD' (+1,70)
        print #earns_ytd_o (,75) edit 999,999,999.99
        add 1 to #k

        if #l <= #j
          print 'YTD' (,105)
          print #ded_ytd_o (,110) edit 999,999,999.99
          add 1 to #l
        end-if

        if $tax_printed = 'N'
           print #acct_tax_ytd (,130) edit 999,999,999.99
           let $tax_printed = 'Y'
        end-if

        position (+2)

  end-while

 else
  if $data_exists = 'Y'
  while #l <= #j

        get $dedcd_o #ded_mtd_o #ded_qtd_o #ded_ytd_o from ded(#l)
        print $dedcd_o (,95)
        print 'MTD' (,105)
        print #ded_mtd_o (,110) edit 999,999,999.99

        if #k <= #i
          get $erncd_o #earns_mtd_o #earns_qtd_o #earns_ytd_o from earns(#k)
          print $erncd_o (,60)
          print 'MTD' (,70)
          print #earns_mtd_o (,75) edit 999,999,999.99
        end-if

        if $tax_printed = 'N'
           print #acct_tax_mtd (,130) edit 999,999,999.99
        end-if

        print 'QTD' (+1,105)
        print #ded_qtd_o (,110) edit 999,999,999.99

        if #k <= #i
           print 'QTD' (,70)
           print #earns_qtd_o (,75) edit 999,999,999.99
        end-if

        if $tax_printed = 'N'
           print #acct_tax_qtd (,130) edit 999,999,999.99
        end-if


        print 'YTD' (+1,105)
        print #ded_ytd_o (,110) edit 999,999,999.99
        add 1 to #l

        if #k <= #i
           print 'YTD' (,70)
           print #earns_ytd_o (,75) edit 999,999,999.99
           add 1 to #k
        end-if

        if $tax_printed = 'N'
           print #acct_tax_ytd (,130) edit 999,999,999.99
           let $tax_printed = 'Y'
        end-if


        position (+2)
  end-while
  end-if
 end-if

  clear-array name=earns
  clear-array name=ded
  let #i = 0
  let #j = 0

  next-listing need=2
  print 'Total for Acctcd ' (+2,1)
  print $prev_acctcd (,25)

  print 'MTD'  (,70)
  print #acct_earns_MTD (0,75) edit 999,999,999.99
  print #acct_ded_MTD   (0,110) edit 999,999,999.99
  print #acct_tax_mtd   (0,130) edit 999,999,999.99
  print 'QTD'  (+1,70)
  print #acct_earns_QTD (0,75) edit 999,999,999.99
  print #acct_ded_QTD   (0,110) edit 999,999,999.99
  print #acct_tax_qtd   (0,130) edit 999,999,999.99
  print 'YTD'  (+1,70)
  print #acct_earns_YTD (0,75) edit 999,999,999.99
  print #acct_ded_YTD   (0,110) edit 999,999,999.99
  print #acct_tax_ytd   (0,130) edit 999,999,999.99

  add #acct_earns_mtd to #dept_earns_mtd
  add #acct_earns_qtd to #dept_earns_qtd
  add #acct_earns_ytd to #dept_earns_ytd

  add #acct_ded_mtd to #dept_ded_mtd
  add #acct_ded_qtd to #dept_ded_qtd
  add #acct_ded_ytd to #dept_ded_ytd

  add #acct_tax_mtd to #dept_tax_mtd
  add #acct_tax_qtd to #dept_tax_qtd
  add #acct_tax_ytd to #dept_tax_ytd

  move 0 to #acct_earns_mtd
  move 0 to #acct_earns_qtd
  move 0 to #acct_earns_ytd

  move 0 to #acct_ded_mtd
  move 0 to #acct_ded_qtd
  move 0 to #acct_ded_ytd

  move 0 to #acct_tax_mtd
  move 0 to #acct_tax_qtd
  move 0 to #acct_tax_ytd

  if $prev_acctcd <> &a.acct_cd and ($prev_deptid = &a.deptid and
     $prev_company = &a.company)
     new-page
  end-if

  position (+1)

end-procedure

!**********************************************************************
Begin-Procedure Company-Change
!**********************************************************************
  do print-company-arrays
  next-listing need=4
!SXK 04/14/1999 Begin
  let $Company_change_1 = 'Y'
!SXK 04/14/1999 End
  print 'Total for Company ' (+2,1)
  print $prev_company (,+2)
  print 'MTD'  (,70)
  print #company_earns_MTD (0,75) edit 999,999,999.99
  print #company_ded_MTD   (0,110) edit 999,999,999.99
  print #company_tax_mtd   (0,130) edit 999,999,999.99
  print 'QTD'  (+1,70)
  print #company_earns_QTD (0,75) edit 999,999,999.99
  print #company_ded_QTD   (0,110) edit 999,999,999.99
  print #company_tax_qtd   (0,130) edit 999,999,999.99
  print 'YTD'  (+1,70)
  print #company_earns_YTD (0,75) edit 999,999,999.99
  print #company_ded_YTD   (0,110) edit 999,999,999.99
  print #company_tax_ytd   (0,130) edit 999,999,999.99


  move 0 to #company_earns_mtd
  move 0 to #company_earns_qtd
  move 0 to #company_earns_ytd

  move 0 to #company_ded_mtd
  move 0 to #company_ded_qtd
  move 0 to #company_ded_ytd

  move 0 to #company_tax_mtd
  move 0 to #company_tax_qtd
  move 0 to #company_tax_ytd
  if $prev_company <> &a.company
     new-page
  end-if
  position (+1)
end-procedure

Begin-Procedure company-before-change
display 'In before'
if #inputtran > 0
  let $company_change = 'Y'
end-if
end-procedure

Begin-Procedure P300-Finish
#debug9 Show 'P300-Finish'
!
End-Procedure


Begin-Procedure Print-Dept-Arrays

 next-listing need=4
 
 print 'Sub totals by DeptID: ' (+2,1)
 print $prev_deptid ()

 let #c = 0
 let #d = 0
 let $dept_data_exists = 'N'
 let $dept_tax_printed = 'N'
 let #a = #a - 1
 let #b = #b - 1

 if #b > 0 or #a > 0
   let $dept_data_exists = 'Y'
 end-if

 if #b <= #a and $dept_data_exists = 'Y'
  while #c <= #a
        get $erncd_e #earns_mtd_e #earns_qtd_e #earns_ytd_e from dept_earns(#c)
        print $erncd_e (,60)
        print 'MTD' (,70)
        print #earns_mtd_e (,75) edit 999,999,999.99

        if #d <= #b
          get $dedcd_e #ded_mtd_e #ded_qtd_e #ded_ytd_e from dept_ded(#d)
          print $dedcd_e (,95)
          print 'MTD' (,105)
          print #ded_mtd_e (,110) edit 999,999,999.99
        end-if

        if $dept_tax_printed = 'N'
           print #dept_tax_mtd (,130) edit 999,999,999.99
        end-if

        print 'QTD' (+1,70)
        print #earns_qtd_e (,75) edit 999,999,999.99

        if #d <= #b
          print 'QTD' (,105)
          print #ded_qtd_e (,110) edit 999,999,999.99
        end-if

        if $dept_tax_printed = 'N'
           print #dept_tax_qtd (,130) edit 999,999,999.99
        end-if


        print 'YTD' (+1,70)
        print #earns_ytd_e (,75) edit 999,999,999.99
        add 1 to #c

        if #d <= #b
          print 'YTD' (,105)
          print #ded_ytd_e (,110) edit 999,999,999.99
          add 1 to #d
        end-if

        if $dept_tax_printed = 'N'
           print #dept_tax_ytd (,130) edit 999,999,999.99
           let $dept_tax_printed = 'Y'
        end-if

        position (+2)

  end-while

 else
  if $dept_data_exists = 'Y'
  while #d <= #b

        get $dedcd_e #ded_mtd_e #ded_qtd_e #ded_ytd_e from dept_ded(#d)
        print $dedcd_e (,95)
        print 'MTD' (,105)
        print #ded_mtd_e (,110) edit 999,999,999.99

        if #c <= #a
          get $erncd_e #earns_mtd_e #earns_qtd_e #earns_ytd_e from dept_earns(#c)
          print $erncd_e (,60)
          print 'MTD' (,70)
          print #earns_mtd_e (,75) edit 999,999,999.99
        end-if

        if $dept_tax_printed = 'N'
           print #dept_tax_mtd (,130) edit 999,999,999.99
        end-if

        print 'QTD' (+1,105)
        print #ded_qtd_e (,110) edit 999,999,999.99

        if #c <= #a
           print 'QTD' (,70)
           print #earns_qtd_e (,75) edit 999,999,999.99
        end-if

        if $dept_tax_printed = 'N'
           print #dept_tax_qtd (,130) edit 999,999,999.99
        end-if


        print 'YTD' (+1,105)
        print #ded_ytd_e (,110) edit 999,999,999.99
        add 1 to #d

        if #c <= #a
           print 'YTD' (,70)
           print #earns_ytd_e (,75) edit 999,999,999.99
           add 1 to #c
        end-if

        if $dept_tax_printed = 'N'
           print #dept_tax_ytd (,130) edit 999,999,999.99
           let $dept_tax_printed = 'Y'
        end-if


        position (+2)
  end-while
  end-if
 end-if

  clear-array name=dept_earns
  clear-array name=dept_ded
  let #a = 0
  let #b = 0

!  next-listing need=2
Show 'Exiting Procewdure P300-Finish'
end-procedure

Begin-Procedure Print-Company-Arrays

 next-listing need=4
 
 print 'Sub totals by Company: ' (+2,1)
 print $prev_company ()

 let #o = 0
 let #p = 0
 let $company_data_exists = 'N'
 let $company_tax_printed = 'N'
 let #m = #m - 1
 let #n = #n - 1

 if #n > 0 or #m > 0
   let $company_data_exists = 'Y'
 end-if

 if #n <= #m and $company_data_exists = 'Y'
  while #o <= #m
        get $erncd_f #earns_mtd_f #earns_qtd_f #earns_ytd_f from company_earns(#o)
        print $erncd_f (,60)
        print 'MTD' (,70)
        print #earns_mtd_f (,75) edit 999,999,999.99

        if #p <= #n
          get $dedcd_f #ded_mtd_f #ded_qtd_f #ded_ytd_f from company_ded(#p)
          print $dedcd_f (,95)
          print 'MTD' (,105)
          print #ded_mtd_f (,110) edit 999,999,999.99
        end-if

        if $company_tax_printed = 'N'
           print #company_tax_mtd (,130) edit 999,999,999.99
        end-if

        print 'QTD' (+1,70)
        print #earns_qtd_f (,75) edit 999,999,999.99

        if #p <= #n
          print 'QTD' (,105)
          print #ded_qtd_f (,110) edit 999,999,999.99
        end-if

        if $company_tax_printed = 'N'
           print #company_tax_qtd (,130) edit 999,999,999.99
        end-if


        print 'YTD' (+1,70)
        print #earns_ytd_f (,75) edit 999,999,999.99
        add 1 to #o

        if #p <= #n
          print 'YTD' (,105)
          print #ded_ytd_f (,110) edit 999,999,999.99
          add 1 to #p
        end-if

        if $company_tax_printed = 'N'
           print #company_tax_ytd (,130) edit 999,999,999.99
           let $company_tax_printed = 'Y'
        end-if

        position (+2)

  end-while

 else
  if $company_data_exists = 'Y'
  while #p <= #n

        get $dedcd_f #ded_mtd_f #ded_qtd_f #ded_ytd_f from company_ded(#p)
        print $dedcd_f (,95)
        print 'MTD' (,105)
        print #ded_mtd_f (,110) edit 999,999,999.99

        if #o <= #m
          get $erncd_f #earns_mtd_f #earns_qtd_f #earns_ytd_f from company_earns(#o)
          print $erncd_f (,60)
          print 'MTD' (,70)
          print #earns_mtd_f (,75) edit 999,999,999.99
        end-if

        if $company_tax_printed = 'N'
           print #company_tax_mtd (,130) edit 999,999,999.99
        end-if

        print 'QTD' (+1,105)
        print #ded_qtd_f (,110) edit 999,999,999.99

        if #o <= #m
           print 'QTD' (,70)
           print #earns_qtd_f (,75) edit 999,999,999.99
        end-if

        if $company_tax_printed = 'N'
           print #company_tax_qtd (,130) edit 999,999,999.99
        end-if


        print 'YTD' (+1,105)
        print #ded_ytd_f (,110) edit 999,999,999.99
        add 1 to #p

        if #o <= #m
           print 'YTD' (,70)
           print #earns_ytd_f (,75) edit 999,999,999.99
           add 1 to #o
        end-if

        if $company_tax_printed = 'N'
           print #company_tax_ytd (,130) edit 999,999,999.99
           let $company_tax_printed = 'Y'
        end-if


        position (+2)
  end-while
  end-if
 end-if

  clear-array name=company_earns
  clear-array name=company_ded
  let #m = 0
  let #n = 0

!  next-listing need=2

end-procedure


!*********************************************************************
!Displays the error messages and stops execution
!*********************************************************************
 
begin-procedure SQL-Error-Found($Proc_Name) 

  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 

  STOP

end-procedure


#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'askaod.sqc'    !Ask for As-Of-Date parameter
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'datemath.sqc'  !Performs Date Calculations
#Include 'number.sqc'    !Routines to format numbers
#Include 'reset.sqc'     !Reset printer Procedure
#Include 'getbalid.sqc'  !Get Calendar Year ID
#include 'gexbnmdt.sqc'  !Gets right run control date
#include 'getcodta.sqc'  !Gets company data

#include 'gexxx900.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx909.sqc'
#include 'gexaltse.sqc'  ! Alter session SQC
