!***********************************************************************
!  GEXPY612:  WOTC COMPLIANCE                                          *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXPY612:             WOTC Compliance                                *
!                                                                      *        
! Narrative:		This program will generate an output file and  *
!                       a report for the Work Opportunity Tax Credit.  *
!                       The file contains the employees who have been  *
!                       hired within the last month.                   *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!			      #debug8 key variable values              *
!			      #debug7 data returned from sql calls     * 
!                                                                      *  
! SQL Tables:		gex_dept_tbl                                   *
!                       personal_data                                  *
!                       job                                            *
!                                                                      *
! Written by:		Jim Hutchison  03/03/98                        *
!                                                                      *
! Normally Run:		Monthly                                        *
!                                                                      *
! Control Parms:		FOR WHERE CLAUSE:                      *
!				  Company Division Code                *
!				  Company  	                       *
!				  Paygroup  	                       *
!				  Deptid	                       *
!				  Employee Status	               *
!				  Account Code                         *
!				  From Date                            *
!				  Thru Date                            *
!				  As Of Date                           *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!	INITIALS	DATE		DESCRIPTION OF THE CHANGE      *
!***********************************************************************
!	JDH		03/03/98	Initial Creation               *
!                                                                      *
!       SXK		09/08/1998      Added OUTFILE variable         *
!                                                                      *
!       SXK             11/23/1999      Changed from ssn to emplid     *
!                                                                      *
!       AXL             06/15/2005      Resolve FROM/THRU dates if     *
!                                       left blank                     *
!                                                                      *
!       AXL             09/13/2005      Parse out NAME field.          *
!GEX_PY300  SXD         08/27/2007      ORIG_HIRE_DT is selected from  *
!                                       PS_PER_ORG_INST table          * 
!   GEX-MXT             04/02/2008      ADDED THE join condition for   *
!                                       PER_ORG_INST                   *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and page-size initialization


begin-report
#debug9 Show 'begin-report'

  do Init-DateTime           !datetime.sqc
  do Init-Number             !number.sqc
  do Get-Current-DateTime    !curdttim.sqc
  do P000-Init-Report
  do P100-Open-File
  do P200-Process-Main
  do P300-Close-File
  do Reset                   !reset.sqc
  do Stdapi-Term             !stdapi.sqc
  Show 'Successful end of report'
end-report


begin-heading 7
#debug9 Show 'begin-heading'

  #Include 'stdhdg01.sqc'

  Let $X000_temp_out = 'Sorted by ' || $X000_ORDER_BY
  Print $X000_temp_out         (3,)  center
  Let $X000_temp_out = 'Report as of ' || $X000_REPORT_HEADING_ASOFDATE
  Print $X000_temp_out         (4,)  center

  If Rtrim($FromDate, ' ') = '' or
     Rtrim($ThruDate, ' ') = ''
    PRINT  ''                  (5,)  center
  Else
    let $Date_Range = $FromDate_MM_DD_YY || ' THRU ' || $ThruDate_MM_DD_YY
    PRINT $Date_Range          (5,)  center
  End-If

  PRINT   'EMP NUMBER'     (+2,1)
  PRINT   'EMP NAME'       (,25)
  PRINT   'HIRE-DATE'      (,69)
  PRINT   'DEPARTMENT'     (,92)
  PRINT   'COMPANY'        (,116)
end-heading


begin-procedure P000-Init-Report
#debug9 Show 'P000-Init-Report'

  move 'GEXPY612'                            to $ReportID
  move 'WOTC COMPLIANCE'                     to $ReportTitle

  do Stdapi-Init

  Show '$ReportID=' $ReportID
  Show '$ReportTitle=' $ReportTitle
  Show '$ReportDate=' $ReportDate
  Show '$ReportTime=' $ReportTime

  if $prcs_process_instance = ''
    let $GEXXX907_INCLUDE_DIV_CD_CRITERIA           = '1=1'           
    let $GEXXX900_INCLUDE_COMPANY_CRITERIA          = '1=1'
    let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1' 
    let $GEXXX902_INCLUDE_DEPTID_CRITERIA	          = '1=1'
    let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA         = '1=1'
    let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA          = '1=1'

    let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           = 'ALL'
    let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          = 'ALL'
    let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = 'ALL' 
    let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           = 'ALL'
    let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         = 'ALL'
    let $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          = 'ALL'

    let $X000_WHERE_SELECT_ASOFDATE                 = $AsOfToday

  Else

    Do GEXXX922-Select-Parameters

    Let $GEXXX900_Company_Alias  = 'J.COMPANY'
    Do GEXXX900-Select-Company-Parameters

    Let $GEXXX901_Company_Alias  = 'J.COMPANY'
    Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
    Do GEXXX901-Select-Company-Paygroup-Parameters

    Let $GEXXX902_Deptid_Alias = 'J.DEPTID'
    Do GEXXX902-Select-Deptid-Parameters

    Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'
    Do GEXXX903-Select-Emp-Stat-Parameters

    Let $GEXXX907_Div_CD_Alias = 'GDT.GEX_COMPANY_DIV_CD'                    
    Do GEXXX907-Select-Div-CD-Parameters 
          
    Let $GEXXX909_Acct_CD_Alias = 'J.ACCT_CD'
    Do GEXXX909-Select-Acct-CD-Parameters

    Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.AsOfDate
    If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
      Let $X000_WHERE_SELECT_ASOFDATE = $AsOfToday
    End-If

    Let $FromDate = $GEX_RC_PAY.FromDate
    Let $ThruDate = $GEX_RC_PAY.ThruDate
  End-If

  If Rtrim($FromDate, ' ') = '' or
     Rtrim($ThruDate, ' ') = ''
     do get-prior-month-date-range
     !Let $DateRange = ''
     !GEX_PY300 SXD   08/27/2007  Begin
     !Let $DateRange = 'AND PD.ORIG_HIRE_DT BETWEEN ''' || $FromDate || ''' AND ''' || $ThruDate || ''''
      Let $DateRange = 'AND INST.ORIG_HIRE_DT BETWEEN ''' || $FromDate || ''' AND ''' || $ThruDate || ''''
  Else
     !Let $DateRange = 'AND PD.ORIG_HIRE_DT BETWEEN ''' || $FromDate || ''' AND ''' || $ThruDate || ''''
     Let $DateRange = 'AND INST.ORIG_HIRE_DT BETWEEN ''' || $FromDate || ''' AND ''' || $ThruDate || ''''
     !GEX_PY300 SXD   08/27/2007  End
  End-If
  
  let $Year4 = '1'
  do Format-DateTime($FromDate,$FromDate_MM_DD_YYYY,{DEFMDY},'','')
  do Format-DateTime($FromDate,$FromDate_MM_DD_YY,{DEFMDY},'','')
  let $Year4 = '1'
  do Format-DateTime($ThruDate,$ThruDate_MM_DD_YYYY,{DEFMDY},'','')
  do Format-DateTime($ThruDate,$ThruDate_MM_DD_YY,{DEFMDY},'','')
  let #ThruDate_MM   = SUBSTR($ThruDate_MM_DD_YYYY,1,2)
  let #ThruDate_YYYY = SUBSTR($ThruDate,8,4)

  Do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')
  Let $X000_ORDER_BY = 'Company, Department, Emp Number'

  Show '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  Show '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA
  Show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA
  Show '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA
  Show '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA
  Show '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA
  Show '$DateRange  =' $DateRange
  Show '$X000_WHERE_SELECT_ASOFDATE ='   $X000_WHERE_SELECT_ASOFDATE

  Do P050-Print-Cover-Page
end-procedure

begin-procedure get-prior-month-date-range
#debug9 Show 'get-prior-month-date-range'

Begin-Select
Last_Day(sysdate-5) &thrudate

  Let $ThruDate = datetostr(&ThruDate)
  show '$ThruDate '  $ThruDate

  let $text_date_start = '01-' || substr($ThruDate,4,3) || '-' || substr($ThruDate,8,4) 
  let $FromDate = strtodate($text_date_start,'DD-MON-YYYY')

From   dual

End-Select
End-Procedure

begin-procedure P050-Print-Cover-Page
#debug9 Show 'P050-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OPRID          ='                                  (+2,5)
  Print $Prcs_OPRID                                               (0,+2)
  Print '$PRCS_RUN_CNTL_ID    ='                                  (+1,5)
  Print $PRCS_RUN_CNTL_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+2,5)
  Print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA                 (0,+2)
  Print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA                (0,+2)
  Print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,5)
  Print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA       (0,+2)
  Print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,5)
  Print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)
  Print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,5)
  Print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA               (0,+2)
  Print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA                (0,+2)

  Print '$DateRange:'                                         (+2,5)
  Print $DateRange                                            (0,+2)

  Print 'As Of Date :'                                        (+2,5)
  Print $X000_REPORT_HEADING_ASOFDATE                         (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $X000_ORDER_BY                                        (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
  Let #PAGE-COUNT = 1
End-Procedure


begin-procedure P100-Open-File
#debug9 Show 'P100-Open-File'

  let $file1 = '{OUTFILE}' || lower($ReportID) || '.dat'

  open $file1
        as 1
        for-writing
        record=104:fixed		!was 71
        status=#filestat

  if #filestat != 0
     display 'Error Opening output file.  Program terminating.'
     stop
  end-if
end-procedure


begin-procedure P200-Process-Main
#debug9 Show 'P200-Process-Main'

  Let $Data-Found-Flag = 'N'
!SXK 11/23/1999 Changed from ssn to emplid
begin-SELECT
PD.EMPLID                             (+1,1)
PD.NAME                            (,25,30)
PD.LAST_NAME
PD.FIRST_NAME
PD.MIDDLE_NAME
!GEX_PY300 SXD  08/27/2007   Begin
!PD.ORIG_HIRE_DT
INST.ORIG_HIRE_DT

 do Format-DateTime(&INST.ORIG_HIRE_DT, $Orig_Hire_Dt, {DEFMDY}, '', '')
 !GEX_PY300 SXD  08/27/2007    End  
  print $Orig_Hire_Dt              (,69)	
 
J.DEPTID                           (,92)
J.COMPANY                          (,116)
  Let $Data-Found-Flag = 'Y'
  do P250-Write-Record
FROM   ps_gex_dept_tbl     gdt,
       PS_PERSONAL_DATA    PD,
       PS_JOB              J,
!GEX_PY300 SXD  08/27/2007   Begin       
       PS_PER_ORG_INST     INST
WHERE  PD.EMPLID           = J.EMPLID
AND    PD.EMPLID           = INST.EMPLID 
!GEX_PY300 SXD  08/27/2007   End     
AND   INST.ORG_INSTANCE_ERN  = J.EMPL_RCD	!GEX-MXT added for PER_ORG_INST join
AND    J.EFFDT             =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID       = J.EMPLID
       AND    EMPL_RCD    = J.EMPL_RCD
       AND    EFFDT       <= $X000_WHERE_SELECT_ASOFDATE)
AND    J.EFFSEQ            =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID       = J.EMPLID
       AND    EMPL_RCD    = J.EMPL_RCD
       AND    EFFDT        = J.EFFDT)
AND [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
AND [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
And    j.deptid                  = gdt.deptid
And    gdt.effdt                 =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt             <= $X000_WHERE_SELECT_ASOFDATE)
And    gdt.sequence_number       =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt              = gdt.effdt)
[$DateRange]
!sxk 11/23/99 Changed from ssn to emplid
ORDER  BY J.COMPANY, J.DEPTID, PD.EMPLID
end-SELECT
  If $Data-Found-Flag = 'N'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If
  do Format-Number(#recs-written,$recs-written,'888,888,888')
  display ''
  display $recs-written noline
  display ' records written to ' noline
  display $file1
  display ''
end-procedure


begin-procedure P250-Write-Record
#debug9 Show 'P250-Write-Record'

  Unstring &PD.LAST_NAME By ',' Into $lname $other
  Unstring &PD.FIRST_NAME By ',' Into $fname $otherx
 
  add 1 to #recs-written

  write 1 from &PD.EMPLID:9
               ';'
	       $lname:30
		';'
               $fname:30
		';'
               &PD.MIDDLE_NAME:1
               !&PD.NAME:30
               ';'
               $Orig_Hire_Dt:8 	
               ';'
               &J.DEPTID:10
               ';'
               '   '
               ';'
               &J.COMPANY:3
               ';'
               '  '
    status=#filestat

  if #filestat != 0
     display 'Error Writing output file.  Program terminating.'
     stop
  end-if
end-procedure


begin-procedure P300-Close-File
#debug9 Show 'P300-Close-File'

  close 1
end-procedure


!#include 'GEXXX900.sqc'  !Get company multiple row table
!#include 'GEXXX901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table

#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx904.sqc'  !Get grade multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control

#include 'askftd.sqc'    !Ask for From and Thru Dates
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date math
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
