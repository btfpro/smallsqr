!***********************************************************************
! GEXPY095:  Off-cycle paysheet / Pay calendar audit report            *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY095 :	Off-cycle paysheet / Pay calendar audit report         *
!                                                                      *
! NARRATIVE:    This audit report will be used to check for the        *
!               existance of non-confirmed off-cycle paysheets from    *
!               prior pay periods as well as to verify that the pay    *
!               calendar entries are closed for previous pay periods.  *
!               If any errors are detected, the SQR should log the     *
!               error messages and abort.  This process will be used   *
!               as an alert that off-cycle paysheets or calendar       *
!               entries are incorrect.  The SQR error will cause the   *
!               associated Autosys job to fail and in turn, the        *
!               problem will be escalated to IS & Payroll for          *
!               resolution.                                            *
!                                                                      *
!               The SQR performs the audits in two separate procedures.*
!               Rows returned from either procedure are logged in the  *
!               SQR log file and an End-SQR procedure is called to     *
!               abort further processing.                              *
!                                                                      *
! SQL Tables:	earnings                                               *
!               pay_calendar                                           *
!                                                                      *
! Written by:   Tony Labra	                                       *
!                                                                      *
! Normally Run: Sundays                                                *
!                                                                      *
! Cntl Parms:	FOR WHERE CLAUSE:                                      *
!                   Run_id                                             *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! AXL       06/07/1999  Initial Creation                               *
!                                                                      *
! AXL       01/31/2001  Added a SENDALERT step to notify PAYROLL Team  *
!                       Leads if rows returned from either audit.      * 
!                                                                      *   
! CWB       06/25/2001  Added path to sendalert command.               *
!                                                                      *   
! CWB       07/30/2001  Added gexxx951 to get $db_name.                *
!                                                                      *  
! CWB       07/03/2002  Relaced SENDALERT with MAILX.                  *
!                                                                      *  
! CWB       08/22/2002  Changed operator from < to <= so that the      *
!                       current pay_end_dt would also be checked.      *  
!                                                                      *
! GBD       11/07/2002  Changed log file unix directory location from  *
!                       /logs to /log_output/SQR_GEXPY095_$prcsinstance*
!                       and added SQR_ to the beginning of $filename.  *
!                                                                      *
! AXL       12/09/2002  Increased field length for PAGE#. Added SEPCHK *
!                       to audit display.                              *
!                                                                      *
! CWB       03/18/2003  Fixed the path to the .out file to be mailed.  *
!                                                                      *
! GBD       01/27/2003  Add code to select email parameters from       *
!                       GEX_INTFC_RULE/DATA.                           *
!                                                                      *
! GEX-MXT   05/14/2008  Retrofit changes and changed the code to audit *
!                       for current pay period.                        *
!***********************************************************************

#include 'setenv.sqc'    !Set environment

!***********************************************************************
Begin-Report
!***********************************************************************
  Do Initialization
  Do Main-Process1
  Do Main-Process2
  Do EOJ-Process
End-Report

!***********************************************************************
Begin-Procedure Initialization
!***********************************************************************
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      = 'GEXPY095'
  Let $ReportTitle   = 'Off-cycle paysheet / Pay calendar audit report'

  Show ' '
  Show ' '
  Show 'Report ID:    ' $ReportID
  Show 'Report Title: ' $ReportTitle
  Show ' '

  Do Get-Current-DateTime    !curdttim.sqc
  Show 'Report Started on ' $ReportDate ' at ' $ReportTime
  Show ' '

  If $prcs_process_instance = ''
    !AXL - 1/31/2001 Force sqr to run only from panel - Begin
    !Do SQRW-Run-Controls
    display 'Need to run this program thru process scheduler'
    stop
    !AXL - 1/31/2001 Force sqr to run only from panel - End
  Else
    Do Process-Scheduler-Run-Controls
  End-If

  Do Verify-Runid

  Show '  '
  Show 'Pay Run ID         :  ' $Run_ID
  Show 'Current Pay End Dt :  ' $Pay_end_dt
  Show '  '
  Show 'Field Name - Audit #   Value                           '
  Show '-----------------------------------------------------------'
  

End-Procedure

!***********************************************************************
Begin-Procedure SQRW-Run-Controls
!***********************************************************************
  While 1=1
    Input $Run_ID maxlen=3 type=char 'Enter the Pay Run ID'
    If $Run_ID <> ''
      Uppercase $Run_Id
      Show $Run_ID
      Break
    End-If
  End-While

End-Procedure

!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls
!***********************************************************************
  Do GEXXX922-Select-Parameters

! CWB 07/30/2001 BEGIN
  do GEXXX951-Select-Oracle-Instance
  let $db_name = lower($GEXXX951_Oracle_Instance)
! CWB 07/30/2001 END

  Let $Run_ID     = &GEX_RC_PAY.RUN_ID           

  If $Run_ID = ''
    Show 'Pay Run ID is required for this process'
    Stop
  End-If

  Show 'Pay Run ID         :  ' $Run_ID
End-Procedure

!***********************************************************************
Begin-Procedure Verify-Runid
!***********************************************************************

 Let $id_found = 'N'

Begin-Select On-Error=SQL-Error-Found('Main-Process1') LOOPS=1
PC.RUN_ID
PC.PAY_END_DT

  move 'Y' to $id_found

  let $pay_end_dt	= &PC.PAY_END_Dt

From  PS_PAY_CALENDAR PC
Where PC.RUN_ID = $Run_ID
End-Select

 if $id_found = 'N'
  Show 'ERROR:  Run ID not found on Pay Calendar'
  Show '  '
  Show 'Pay Run ID         :  ' $Run_ID
  Show '  '
  Show 'NOTE: Ignore the ORACLE error....it is used to abort the SQR'
  !Abort the SQR
  do end-sqr    
 end-if         

End-Procedure

!***********************************************************************
Begin-Procedure Main-Process1
!***********************************************************************

 Let $found1 = 'N'

Begin-Select On-Error=SQL-Error-Found('Main-Process2')
PE.COMPANY
PE.PAYGROUP
PE.PAY_END_DT
PE.OFF_CYCLE
PE.PAGE_NUM
PE.LINE_NUM
PE.ADDL_NBR
PE.SEPCHK	!AXL 12/9/2002 New
PE.EMPLID
PE.EMPL_RCD

  move 'Y' to $found1
  
  Let $Company_Audit1	=	&PE.COMPANY
  Let $Paygroup_Audit1  =  	&PE.PAYGROUP     
  Let $PayEndDt_Audit1	=	&PE.PAY_END_DT
  Let $Offcycle_Audit1	= 	&PE.OFF_CYCLE
  !AXL 12/9/2002 Begin
  let $Page_Audit1      =       ltrim(edit(&PE.PAGE_NUM,'9999'), ' ')
  Let $Line_Audit1	= 	ltrim(edit(&PE.LINE_NUM,'999'), ' ')
  Let $Addl_Audit1	=	ltrim(edit(&PE.ADDL_NBR,'99'), ' ')
  Let $Sepchk_Audit1	=	ltrim(edit(&PE.SEPCHK,'99'), ' ')
  Let $Emplid_Audit1	= 	&PE.EMPLID
  Let $Empl_rcd_Audit1  =	ltrim(edit(&PE.EMPL_RCD,'9'), ' ')
  !AXL 12/9/2002 End

  Show 'Company    - Audit 1 :  '  $Company_Audit1
  Show 'Paygroup   - Audit 1 :  '  $Paygroup_Audit1
  Show 'Pay End DT - Audit 1 :  '  $PayEndDt_Audit1
  Show 'Off Cycle  - Audit 1 :  '  $Offcycle_Audit1
  Show 'Page_Num   - Audit 1 :  '  $Page_Audit1
  Show 'Line_Num   - Audit 1 :  '  $Line_Audit1
  Show 'Addl_Nbr   - Audit 1 :  '  $Addl_Audit1
  Show 'SepChk     - Audit 1 :  '  $Sepchk_Audit1	!AXL 12/9/2002 New
  Show 'Emplid     - Audit 1 :  '  $Emplid_Audit1
  Show 'Empl_rcd   - Audit 1 :  '  $Empl_rcd_Audit1
  Show '  '

FROM PS_PAY_EARNINGS PE
  WHERE  PE.OFF_CYCLE = 'Y'
    AND PE.PAY_LINE_STATUS <> 'F'
! CWB 08/22/2002 BEGIN
!    AND PE.PAY_END_DT < $pay_end_dt
     AND PE.PAY_END_DT = $pay_end_dt	!GEX-MXT ADDED FOR CURRENT PAY PERIOD
!    AND PE.PAY_END_DT <= $pay_end_dt   !GEX-MXT COMMENTED FOR PRIOR PAY PERIOD
! CWB 08/22/2002 END
      
End-Select
  
End-Procedure

!***********************************************************************
Begin-Procedure Main-Process2
!***********************************************************************

 Let $found2 = 'N'

Begin-Select On-Error=SQL-Error-Found('Main-Process')
PC2.COMPANY
PC2.PAYGROUP
PC2.PAY_END_DT

  move 'Y' to $found2
  
  Let $Company_Audit2	=	&PC2.COMPANY
  Let $Paygroup_Audit2  =  	&PC2.PAYGROUP     
  Let $PayEndDt_Audit2	=	&PC2.PAY_END_DT
  
  Show 'PS_PAY_CALENDAR.PAY_OFF_CYCLE = Y '
  Show 'Company    - Audit 2 :  '  $Company_Audit2
  Show 'Paygroup   - Audit 2 :  '  $Paygroup_Audit2
  Show 'Pay End DT - Audit 2 :  '  $PayEndDt_Audit2
  Show '  '

FROM PS_PAY_CALENDAR PC2

WHERE    PC2.PAY_OFF_CYCLE = 'Y'
     AND PC2.PAY_OFF_CYCLE_CLS = 'N'
! CWB 08/22/2002 BEGIN
!     AND PC2.PAY_END_DT < $pay_end_dt
     AND PC2.PAY_END_DT = $pay_end_dt	 !GEX-MXT ADDED FOR CURRENT PAY PERIOD
!    AND PC2.PAY_END_DT <= $pay_end_dt   !GEX-MXT COMMENTED FOR PRIOR PAY PERIOD
! CWB 08/22/2002 END

End-Select

End-Procedure

!***********************************************************************
Begin-Procedure SQL-Error-Found($Proc_Name) 
!***********************************************************************
  Show 'SQL Error in ' $Proc_Name
  Show $_sql-error
  Stop
End-Procedure


!***********************************************************************
Begin-Procedure EOJ-Process
!***********************************************************************
  if $found1 ='Y' or $found2 ='Y'
  !AXL - 1/31/2001 New routine to issue UNIX SENDALERT - Begin
  !Show 'NOTE:  Ignore the ORACLE error..it is used to abort the SQR'
!  Show 'NOTE:  Error conditions exist..Initiating SEND ALERT'   !CWB 07/03/2002
  Show 'NOTE:  Error conditions exist..Initiating ALERT by Mail'
    !Do End-SQR 
    Do Send-Alert                                               
  !AXL - 1/31/2001 New routine to issue UNIX SENDALERT - End
  end-if

  Do Stdapi-Term             !stdapi.sqc

  Do Get-Current-DateTime    !curdttim.sqc
  Show ' '
  Show 'Report Ended on ' $ReportDate ' at ' $ReportTime
End-Procedure

!***********************************************************************
Begin-procedure End-SQR 
!***********************************************************************
  let $tbl_name = 'GEX_ABORT'
begin-select on-error=SQL-Error-Found('end-sqr')
x
from [$tbl_name]
End-select

End-Procedure

!AXL - 1/31/2001 New proc to issue UNIX SENDALERT - Begin
!***********************************************************************
begin-procedure Send-Alert
!***********************************************************************
let $found = 'N'
begin-SELECT 
max(PRCSINSTANCE) &prcsinstance
   move &prcsinstance to $prcsinstance
   move 'Y' to $found
  
FROM    PSPRCSRQST
WHERE PRCSNAME = $ReportId
end-SELECT

 if ($found = 'N') or 
    RTRIM($PRCSINSTANCE,' ') = ''
	display 'PROCESS INSTANCE NOT FOUND'  
 else                                             
    display 'Process Instance:' noline
    display $prcsinstance
    #ifdef UNIX
!      let $unix_path = '$PS_HOME/appserv/prcs/hrprd75/logs/'

! CWB 07/30/2001 BEGIN
! GBD 11/07/2002 Begin
!      let $unix_path = '$PS_HOME/appserv/prcs/'||$db_name||'/logs/'
      let $unix_path = '$PS_HOME/appserv/prcs/'||$db_name||'/log_output/'||'SQR_GEXPY095_'||$prcsinstance||'/'
! GBD 11/07/2002 End
! CWB 07/30/2001 END

      let $cd_command = 'cd '|| $unix_path
      display 'CD command:' noline
      display $cd_command
      CALL SYSTEM USING $cd_command #sys_status
      if #sys_status <> 0
	 show 'Changing directory to ' $unix_path  ' did not work'
	 show 'JOB failed'
	 stop
      end-if
! GBD 11/07/2002 Begin
!      let $file_name = $ReportID||'_'||$prcsinstance||'.log'

! CWB 03/18/2003 BEGIN
!      let $file_name = 'SQR_'||$ReportID||'_'||$prcsinstance||'.log'
      let $reportid_lc = lower($reportid)
      let $file_name = $ReportID_lc||'_'||$prcsinstance||'.out'
! CWB 03/18/2003 END

! GBD 11/07/2002 End
      display 'FileName:' noline
      display $file_name 
      let $full_path =  $unix_path || $file_name 
      display '$full_path: ' noline
      display $full_path 
! CWB 07/03/2002 BEGIN - Replace SENDALERT with MAILX.	
! CWB 06/25/2001 BEGIN
!      let $send_alert_cmd = 'sendalert ' || '-m ' || '-C ' || 'HRPSOFT -s"' || 'GEXPY095 Alert Test-Please Ignore' || '" -f ' || $file_name
!      let $send_alert_cmd = 'sendalert ' || '-m ' || '-C ' || 'PYRL_TEAMLEADS -s"' || $ReportTitle || '" -f ' || $full_path
!      let $send_alert_cmd = '/usr/local/bin/sendalert ' || '-m ' || '-C ' || 'PYRL_TEAMLEADS -s"' || $ReportTitle || '" -f ' || $full_path
! CWB 06/25/2001 END
!      display 'Send Alert Command: ' noline
!      display $send_alert_cmd
      
!      CALL SYSTEM USING $send_alert_cmd #sys_status
!      if #sys_status <> 0
!	 display 'Send Alert Command Failed for : ' noline
!	 display $file_name
!	 stop
!      else
!	 display 'Send Alert emailed for : ' noline
!         display $file_name
!      end-if
!    #endif
! end-if

! GBD 01/27/2003 Begin

     Do GEXXX971-Select-Trans-Type-Parameters
     if ($GEXXX971_EMAIL_ADDR_CRITERIA = '') and ($GEXXX971_FTP_ADDR_CRITERIA = '')
        show 'Either no rows exist on GEX_INTFC_RULE/DATA for this Oprid/Run Control ID'
        show 'or the most current rows under this ID have been set to inactive. Data will'
        show 'not be sent.'
     else
        if $GEXXX971_GEX_TRANS_TYPE = 'E'
           show $GEXXX971_EMAIL_ADDR_CRITERIA
           show 'This is the email statement produced: '

           let $mailx_cmd = 'cat ' || $full_path || ' | mailx -s "' || $ReportTitle ||'"' || 
           ' "'||$GEXXX971_EMAIL_ADDR_CRITERIA||'" '  

!           let $mailx_cmd = 'cat ' || $full_path || ' | mailx -s "' || $ReportTitle ||'"' || 
!           ' "PS.HR@gianteagle.com" "GRP.Payroll.Leads@gianteagle.com" '
 
           Show 'Mailx Command: ' $mailx_cmd
           CALL SYSTEM USING $mailx_cmd #sys_status
           if #sys_status <> 0
     	      show 'Mailx Command Failed for : ' $file_name
   	      stop
           else
  	      show 'Alert emailed for : ' $file_name
           end-if
           #endif
        end-if
        if $GEXXX971_GEX_TRANS_TYPE = 'F'
           show $GEXXX971_FTP_ADDR_CRITERIA
           show 'Need to insert a Call FTP shell script to run ftp'
        end-if
     end-if
! GBD 01/27/2003 End

 end-if
End-procedure
!AXL - 1/31/2001 New proc to issue UNIX SENDALERT - End
! CWB 07/03/2002 END.	

! CWB 07/30/2001 BEGIN
#include 'gexxx951.sqc'  !Get Oracle instance'
! CWB 07/30/2001 END
#include 'gexxx922.sqc'  !Get pay single row run control
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'validdt.sqc'   ! Validate date routine
#Include 'number.sqc'    !Routines to format numbers
#Include 'gexxx971.sqc'  !Email and FTP Parameters           !GBD 01/27/2003
