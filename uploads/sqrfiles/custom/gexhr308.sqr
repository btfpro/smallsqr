
!***************************************************************************************
! GEXHR308:             EVP Metrics - Turnover Analysis                                 * 
!                                                                                      *
!***************************************************************************************
!                                                                                      *
!               Confidentiality Information:                                           *
!                                                                                      *
! This module is the confidential and proprietary information of                       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted                 *
! in any form, by any means, in whole or in part, nor is it to be used                 *
! for any purpose other than that for which it is expressly provided                   *
! without the written permission of Giant Eagle.                                       *
!                                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved                         *
!                                                                                      *
!***************************************************************************************
!                                                                                      *        
! GEXHR308 :										*
!                                                                                      *        
! Narrative:                                                                           * 
!                                                                                      *  
! SQL Tables:           								*
!                                                                                      *
! Written by:           Kundan Kumar Y	                                               *       
!                                                                                      *
! Normally Run:									       *
!                                                                                      *
! Control Parms:	AsOfDate, FromDt, ThruDt        				*
!											*
!***************************************************************************************
!                         MODIFICATION HISTORY                                          *
!****************************************************************************************
! CSR    INITIALS     DATE         DESCRIPTION OF THE CHANGE                            *
!****************************************************************************************
!                                                                                       *
!        VENDKXY      23/11/2007   New program                                          *
!	 GEX-TLL      03/26/2008   HCM 9.0 Upgarde					*
!	 GEX-TLL      04/14/2008   HCM 9.0 Upgarde					*
!	 GEX-TLL      04/25/2008   HCM 9.0 Upgarde					*
!	 VENDKXY      01/05/2009   Changed the code to get correct report		*
! 	 VENDKXY      03/06/2009   Modifcations for ITG 53036				*
! 	 VENDKXY      05/24/2009   Modifcations for ITG 53036				*
!	 VENDKXY      06/14/2009   Modifcations for ITG 53036	
!	 VENDKXY      07/29/2009   Done changes for S3 #13098877
!	 VENDKXY      08/12/2009   Done the Changes for the ITG 65099
! 	 VENDKXY      10/09/2009   Done changes for ITG 68183
!        ISDVDZK    12/17/2009     Introduce two new Business Areas                      *
!                                     Fresh Food Manu and Freedom Rd  ITG 70135         *
!****************************************************************************************
!**************************************************************************************************************************

#include 'setenv.sqc'    !set environment
#include 'setup32.sqc'   !printer and page-size initialization
#include 'prcsapi.sqc'   
#include 'sqrtrans.sqc'  ! set translation
#include 'datemath.sqc'
#define act_array 500	 !Array size Initialisation


!**************************************************************************************************************************
!        Setup Section
!**************************************************************************************************************************
begin-Setup
    create-array name=retaildept size={act_array}	!Array used in the retail employees calculation
    Field=deptid:Char
    Field=deptdescr:char
    Field=act:number
    Field=ter:number
    Field=volter:number			!VENDKXY
    Field=involter:number		!VENDKXY
    create-array name=mdp size={act_array}		!Array used in MDP Calculation
    Field=tit:char
    Field=termrsn:char
    Field=cnt:Number
    create-array name=pharmacy size={act_array}		!Array Used in pharmacy Calculation
    Field=phartit:char
    Field=active:Number
    Field=terms:Number
    !VENDKXY done changes 
    create-array name=pharmacy1 size={act_array}		!Array Used in pharmacy Calculation
    Field=phartit:char
    Field=terms:Number
    !VENDKXY done changes
    !VENDKXY  
    create-array name=pharmacy2 size={act_array}		!Array Used in pharmacy Calculation
    Field=phartit:char
    Field=volter:Number
    
    create-array name=pharmacy3 size={act_array}		!Array Used in pharmacy Calculation
    Field=phartit:char
    Field=involter:Number
    
    create-array name=phar1 size={act_array}		!Array Used in pharmacy Calculation
    Field=phartit:char
    Field=volter:Number
    Field=involter:Number
    
    
    !VENDKXY  
    create-array name=phar size={act_array}		!Array Used in pharmacy Calculation
    Field=titl:char
    Field=actives:Number
    Field=term:Number
    create-array name=getgodept size={act_array}	!Array Used in Get Go Calculation
    Field=deptid:Char
    Field=deptdescr:Char
    Field=divcd:Char
    Field=acti:Number
    Field=termi:Number
    Field=volter:number			!VENDKXY
    Field=involter:number		!VENDKXY
    !VENDKXY--Begin
    create-array name=alldept  size=10000	!Array Used in all department calculation
    Field=deptid:char 
    Field=flsa:char 
    Field=actcd:char 
    Field=fullpart:char
    Field=act:Number
    Field=ter:Number
    Field=volter:number			
    Field=involter:number
    !VENDKXY--End
    !vendkxy 
    create-array name=union  size={act_array}	
    Field=union:char
    create-array name=nonunion  size={act_array}	
    Field=nonunion:char
    create-array name=vol  size={act_array}	
    Field=vol:char
    create-array name=invol  size={act_array}	
    Field=invol:char
    !vendkxy
!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin     
declare-variable
date $AsOfDate1
end-declare
!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End

end-setup



!**************************************************************************************************************************
!        REPORT
!**************************************************************************************************************************
begin-Report
! Processing RunControl Parameters

Do Init-DateTime           !datetime.sqc
Do Init-Number             !number.sqc
Do Get-Current-DateTime    !curdttim.sqc
Do Stdapi-Init             !stdapi.sqc

If $prcs_process_instance = ''
    Do Ask-As-Of-Date		!askaod.sqc
!    let $from_date = '01-FEB-2007'	!Used for Testing Through Sqr runner
!    let $thru_date = '31-JAN-2008'	!Used for Testing Through Sqr runner
!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin
Let $AsOfDate1 = $AsOfDate 
Let $from_date = dateadd($AsOfDate1,'YEAR',-1)
Let $thru_date = dateadd($AsOfDate1,'DAY',-1) 
!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End

else
    do Get-Run-Control	     !gexrnctl.sqc  
!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin
    If Rtrim (&asofdate, ' ') = ''
    Let $AsOfDate = $AsOfToday
     else
!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End  
    	
    let $AsOfDate = &asofdate
  
end-if
!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin
If Rtrim (&fromdate, ' ') = '' or Rtrim (&thrudate, ' ') = ''
   Let $AsOfDate1 = $AsOfDate
   Let $from_date = dateadd($AsOfDate1,'YEAR',-1)
    Let $thru_date = dateadd($AsOfDate1,'DAY',-1)
else 
  let $from_date = &fromdate
    let $thru_date = &thrudate    
    end-if
end-if
!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End 
Let $ReportID      =   'gexhr308'
Let $ReportTitle   =   'Turnover - Other Analyses'

  
Show '$ReportID    = ' $ReportID
Show '$ReportTitle = ' $ReportTitle
Show '$ReportDate  = ' $ReportDate
Show '$ReportTime  = ' $ReportTime
show '$from_date:' $from_date
show '$thru_date:' $thru_date
Let $Report_title = 'Actives are As Of : ' || $thru_date ||' Terms are from :' || $from_date || ' To: ' || $thru_date

!Processing Turnover Analysis
do Open-File 			!opening all the files (Writing and Reading modes)
!VENDKXY
do Select-UNION-Parameters
do Select-NONUNION-Parameters
do Get-voluntary-Parameters
do Get-involuntary-Parameters
do SelectvolParams
do SelectinvolParams
!VENDKXY
do header-active-terminate	!header for active and teriminates
DO Get-Active-Employees		
DO Get-Terminate-Employees 	
!VENDKXY
do Get-Voluntary-Terminates
do Get-Involuntary-Terminates
!VENDKXY
do busarea			!Calculation of all business area
do EVP				!Calculation of Evp
DO GETGO			!Calculations of Get Go Padsite Vs Standalone
do retaildeptact		
do calcretail			!Calculation for retail employees
DO CALCLOSANDTIMEINPOS		!Calculation of Length Of Service and Time in Position
do mdpterms			!Calculation of MDP Terminates
do mdpjobtitle			
do calcmdptitle			!Calculation of MDP by Title
do getgodeptact
do getgotarget			!Calculation of Get Go Targets
do rsctarget			!Calculation of RSC Targets
do pharmacyactives
do pharmacyterms
!VENDKXY
do pharmacyvoluntaryterms
do pharmacyinvoluntaryterms
!VENDKXY
do calcphar			!Calculation of Pharmacy by Position
DO UPharact
DO NUPharact
DO UPHARTERMS
DO NUPHARTERMS
do Upharvoluntaryterms		!VENDKXY
do Nupharvoluntaryterms		!VENDKXY
do calcpharbyuandnu		!Calculation of Pharmacy by Union and Non-Union
do calcphargroup		!Calculation of pharmacy by Groups
!VENDKXY
do alldeptact
do calcalldept			!Calculation for all department employees
!VENDKXY
Do Stdapi-Term             !stdapi.sqc
end-Report

!VENDKXY 

!**************************************************************************************************************************
!		Voluntary Action reason
!**************************************************************************************************************************

Begin-Procedure Get-voluntary-Parameters

  Let $OprID                = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_GEXHR308_ROWS = 0
  Let $GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA = ''
  Let $GEXHR308_VOLUNTARY_ACTION_REASON_DISPLAY_CRITERIA = 'ALL'
  Let $GEXHR308_ACTION_REASON_Alias = 'A4.ACTION_REASON'
  	
Begin-Select 

GEX_RC_GEXHR308.ACTION_REASON  

  	
  Add 1 To #GEX_RC_GEXHR308_ROWS

  If #GEX_RC_GEXHR308_ROWS = 1
       Let $GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA = '(' || $GEXHR308_ACTION_REASON_Alias || ' In ('''     || &GEX_RC_GEXHR308.ACTION_REASON || ''''
    Else
       Let $GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA = $GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA || ',''' || &GEX_RC_GEXHR308.ACTION_REASON || ''''
  End-If
	
  
From  PS_GEX_RC_GEXHR308 GEX_RC_GEXHR308

Where GEX_RC_GEXHR308.OPRID                 = [$OprID]
And   GEX_RC_GEXHR308.RUN_CNTL_ID           = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_GEXHR308.ACTION_REASON, ' ') != ' '
End-Select

  If #GEX_RC_GEXHR308_ROWS = 0
    Let $GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA = $GEXHR308_ACTION_REASON_Alias || ' = ' || $GEXHR308_ACTION_REASON_Alias
     Else
    Let $GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA = $GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA || '))'
    Let $GEXHR308_VOLUNTARY_ACTION_REASON_DISPLAY_CRITERIA = $GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA
    
  End-If
	show '$GEXHR308_VOLUNTARY_ACTION_REASON_DISPLAY_CRITERIA=' $GEXHR308_VOLUNTARY_ACTION_REASON_DISPLAY_CRITERIA
End-Procedure


!**************************************************************************************************************************
!		Involuntary Action reason
!**************************************************************************************************************************

Begin-Procedure Get-involuntary-Parameters

  Let $OprID                = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_GEXHR308_ROWS = 0
  Let $GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA = ''
  Let $GEXHR308_INVOLUNTARY_ACTION_REASON_DISPLAY_CRITERIA = 'ALL'
  Let $GEXHR308_ACTION_REASON_Alias = 'A5.ACTION_REASON'	
  
Begin-Select 

GEX_GEXHR308_1.ACTION_REASON


  Add 1 To #GEX_RC_GEXHR308_ROWS

  If #GEX_RC_GEXHR308_ROWS = 1
       Let $GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA = '(' || $GEXHR308_ACTION_REASON_Alias || ' In ('''     || &GEX_GEXHR308_1.ACTION_REASON || ''''
    Else
       Let $GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA = $GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA || ',''' || &GEX_GEXHR308_1.ACTION_REASON || ''''
  End-If
  	
  
From  PS_GEX_GEXHR308_1 GEX_GEXHR308_1

Where GEX_GEXHR308_1.OPRID                 = [$OprID]
And   GEX_GEXHR308_1.RUN_CNTL_ID           = [$Run_Cntl_ID]
And   Rtrim(GEX_GEXHR308_1.ACTION_REASON, ' ') != ' '
End-Select

  If #GEX_RC_GEXHR308_ROWS = 0
    Let $GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA = $GEXHR308_ACTION_REASON_Alias || ' = ' || $GEXHR308_ACTION_REASON_Alias
     Else
    Let $GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA = $GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA || '))'
    Let $GEXHR308_INVOLUNTARY_ACTION_REASON_DISPLAY_CRITERIA = $GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA
  End-If
	show '$GEXHR308_INVOLUNTARY_ACTION_REASON_DISPLAY_CRITERIA=' $GEXHR308_INVOLUNTARY_ACTION_REASON_DISPLAY_CRITERIA
End-Procedure

!**************************************************************************************************************************
! 		Get Union codes
!************************************************************************************************************************** 
Begin-Procedure Select-UNION-Parameters
Let #u = 1
Begin-Select
UNION_CD	&union
	put &union into union(#u) union
  	Let #u = #u+1
From  PS_GEX_UNION
Where OPRID               = $Prcs_OprID
And   RUN_CNTL_ID         = $Prcs_Run_Cntl_ID
And   Rtrim(UNION_CD, ' ') != ' ' 
End-Select
End-Procedure

!**************************************************************************************************************************
! 		SelectinvolParams
!************************************************************************************************************************** 
Begin-Procedure SelectinvolParams
!show 'SelectinvolParams'
Let #inv = 1  
Begin-Select
ACTION_REASON  &INVOL
	put &invol into invol(#inv) invol
  	Let #inv = #inv+1  
  	
From  PS_GEX_GEXHR308_1  	
Where OPRID               = $Prcs_OprID
And   RUN_CNTL_ID         = $Prcs_Run_Cntl_ID
And   Rtrim(ACTION_REASON, ' ') != ' ' 
End-Select
End-Procedure

!**************************************************************************************************************************
! 		SelectvolParams
!************************************************************************************************************************** 
Begin-Procedure SelectvolParams
!show 'SelectvolParams'
Let #vo = 1  
Begin-Select 
ACTION_REASON  &VOL
	put &vol into vol(#vo) vol
  	Let #vo = #vo+1
  	
From  PS_GEX_RC_GEXHR308 
Where OPRID               = $Prcs_OprID
And   RUN_CNTL_ID         = $Prcs_Run_Cntl_ID
And   Rtrim(ACTION_REASON, ' ') != ' '
End-Select
End-Procedure
	
!**************************************************************************************************************************
! 		Get Non Union codes
!************************************************************************************************************************** 

Begin-Procedure Select-NONUNION-Parameters
Let #nu = 1
 
Begin-Select
UNION_CD	&nonunion
	put &nonunion into nonunion(#nu) nonunion
  	Let #nu = #nu+1
From  PS_GEX_NON_UNION
Where OPRID               = $Prcs_OprID
And   RUN_CNTL_ID         = $Prcs_Run_Cntl_ID
And   Rtrim(UNION_CD, ' ') != ' ' 
End-Select
End-Procedure

!**************************************************************************************************************************
! 		Get ethinic group
!************************************************************************************************************************** 

Begin-Procedure ethinicgrp
Begin-Select
ethnic_grp_cd
  Let $ethinicgrp= &ethnic_grp_cd
from PS_DIVERS_ETHNIC 
where emplid=$emplid_1
End-Select
End-Procedure


!VENDKXY

!**************************************************************************************************************************
!		Header-Active-Terminate
!**************************************************************************************************************************
Begin-Procedure header-active-terminate

 encode '<009>' into $tab
  Let $delim = $tab
!STRING 'ID' 'Name' 'Co' 'Group' 'Dept' 'Dept Desc' 'OpDiv' 'CoDiv' 'Bus Area' 'BU' 'Acct'  !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes
STRING 'Name' 'Co' 'Group' 'Dept' 'Dept Desc' 'OpDiv' 'CoDiv' 'Bus Area' 'BU' 'Acct'        !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes 
	'GL Dept' 'Status' 'Union' 'U/N' 'Region' 'Full/Part' 'Type' 'Age' 'Gender' 'Ethnic Grp' 'EEO1' 'Job Code' 'Job Title' 'FLSA Stat' 'Grade' 
	'Std Hrs' 'Hire Date' 'Rehire Dt' 'EVP' 'SVP' by $delim into $string_cols
	
write 1 from $string_cols

!string 'ID' 'Name' 'Co' 'Group' 'Deptid' 'Dept Descr' 'OpDiv' 'CoDiv' 'Bus Area' 'ACCT CD'  !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes 
string 'Name' 'Co' 'Group' 'Deptid' 'Dept Descr' 'OpDiv' 'CoDiv' 'Bus Area' 'ACCT CD'        !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes 
  'GL DEPTID' 'BU' 'Union' 'U/N' 'Region' 'Gender' 'Ethnic Grp' 'Age' 'Full/Part' 'Type' 'Job Entry Dt' 
  'Job Code' 'Grade' 'Job Title' 'EEE0-1 cat' 'Mgr Lvl' 'Std hrs/Wrk' 'Service Dt' 'LOS (Mos)' 
  'Term Reason' 'Term Code' 'Time in Pos (Mos)' 'Hire Date' 'Rehire Dt' 'Term Date' 'Eff Date of Term Row'	!vendkxy
  'SVP/VP' 'EXC VP'  by $delim into $string_cols
    
    write 2 from $string_cols

end-procedure




!**************************************************************************************************************************
!		Get-Active-Employees
!**************************************************************************************************************************
Begin-procedure Get-Active-Employees
show 'active employee processing started'

	Let #act_count_emp1=0
 	Let #act_Count_emp2=0
 	Let #act_count_emp3=0
 	Let #act_busarea1=0
	Let #act_busarea2=0
	Let #act_busarea3=0
	Let #act_busarea4=0
	Let #act_busarea5=0
	Let #count_lessthan1=0
	Let #count_lessthan3=0
	Let #count_lessthan7=0
	Let #count_lessthan10=0
	Let #couont_greaterthan10=0
	Let #count_lessthan3_los=0
	Let #count_lessthan6=0
	Let #count_lessthan9=0
	Let #count_lessthan12=0
	Let #couont_greaterthan12=0
	
	!VENDKXY
	Let #act_busarea6=0
	Let #act_busarea7=0
	Let #act_busarea8=0
	!ISDVDZK Added the code as per the itg 70135 START
	Let #act_busarea9=0
	Let #act_busarea10=0
	!ISDVDZK Added the code as per the itg 70135 END 
	!VENDKXY
	
Begin-SELECT DISTINCT 
A.EMPLID,
C.NAME,
A.COMPANY,
A.PAYGROUP,
A.DEPTID,
E.DESCR,
G.GEX_OPR_DIV,
F.GEX_COMPANY_DIV_CD,
G.GEX_BUS_AREA,
F.BUSINESS_UNIT,
A.ACCT_CD,
F.DEPARTMENT,
A.EMPL_STATUS,
A.UNION_CD,
A.FULL_PART_TIME,
A.EMPL_TYPE,
(TRUNC(MONTHS_BETWEEN(SYSDATE,TO_DATE( TO_CHAR(C.BIRTHDATE,'YYYY-MM-DD'),'YYYY-MM-DD'))/12)) &AGE,
C.SEX,
B.EEO1CODE,
A.JOBCODE,
B.DESCR,
B.FLSA_STATUS,
A.GRADE,
A.STD_HOURS,
TO_CHAR(D.HIRE_DT,'YYYY-MM-DD') &HIRE,
TO_CHAR(D.REHIRE_DT,'YYYY-MM-DD') &REHIRE,
G.GEX_EVP,
G.GEX_SVPVP,
TO_CHAR(B.EFFDT,'YYYY-MM-DD') &B.EFFDT,
B.SETID,
B.JOBCODE,
E.SETID,
E.DEPTID,
TO_CHAR(E.EFFDT,'YYYY-MM-DD') &E.EFFDT
F.GEX_RGN_CD		!vendkxy
 	
 	
 	Let $act_emplid=&A.EMPLID
 	Let $act_name=&c.name
 	Let $act_company=&a.company
 	Let $act_paygroup=&a.paygroup
 	Let $act_deptid=&a.deptid
 	Let $act_descr=&e.descr
 	Let $act_div=&G.GEX_OPR_DIV
 	Let $act_div_cd=&F.GEX_COMPANY_DIV_CD
 	Let $act_busarea=&G.GEX_BUS_AREA
 	Let $act_bu=&F.BUSINESS_UNIT
 	Let $actcd=&A.ACCT_CD
 	Let $dept=&F.DEPARTMENT
 	Let $empl_sts=&A.EMPL_STATUS
 	Let $unioncd=&A.UNION_CD
 	Let $fulltime=&A.FULL_PART_TIME
 	Let $empltype=&A.EMPL_TYPE
 	Let $age=&age
 	Let $sex=&c.sex
 	Let $ee01=&B.EEO1CODE
 	Let $jobcode=&A.JOBCODE
 	Let $jobtitle=&B.DESCR
 	Let $flsa=&B.FLSA_STATUS
 	Let $grade=&A.GRADE
 	Let $stdhrs=&A.STD_HOURS
 	Let $hiredate=&hire
 	Let $rehiredate=&rehire
 	Let $evp=&G.GEX_EVP
 	Let $svp=&G.GEX_SVPVP
 	Let $act_region = &F.GEX_RGN_CD		!vendkxy
 	
 	
 	if (&G.GEX_EVP='178509093')
 		lET #act_count_emp1 = #act_count_emp1+1
 	end-if
 	if (&G.GEX_EVP='181464707')
 		LET #act_count_emp2 = #act_count_emp2+1
 	end-if
 	if (&G.GEX_EVP='192505706')
 		LET #act_count_emp3 = #act_count_emp3+1
 	end-if
 	
 	
 	if ($act_busarea='Corp Off')
 		Let #act_busarea1 = #act_busarea1+1
 	end-if
 	if ($act_busarea='GE Retail')
 		Let #act_busarea2 = #act_busarea2+1
 	end-if
 	if ($act_busarea='GetGo')
 		Let #act_busarea3 = #act_busarea3+1
  	end-if
	!if (substr(&a.paygroup,1,2) = 'PH' or &a.deptid = 'C017' or &a.deptid= 'C098' or &a.acct_cd = '008' or $act_busarea='Pharmacy')  	vendkxy done the changes for ITG 65099
 	if $act_busarea='Pharmacy'		!vendkxy done the changes for ITG 65099 		
 		Let #act_busarea4 = #act_busarea4+1
 	end-if
 	if ($act_busarea='RSC')
 		Let #act_busarea5 = #act_busarea5+1
 	end-if
 	
 	if ($act_busarea='GetGo' AND (&F.GEX_COMPANY_DIV_CD='CLE' OR &F.GEX_COMPANY_DIV_CD='COL' OR &F.GEX_COMPANY_DIV_CD='GEM' OR &F.GEX_COMPANY_DIV_CD='GPH' OR  &F.GEX_COMPANY_DIV_CD='RMC' OR  &F.GEX_COMPANY_DIV_CD='RPH' ))
 		lET #ACT_PAD = #ACT_PAD+1
 	ELSE 
 		IF ($act_busarea='GetGo' AND &F.GEX_COMPANY_DIV_CD='GGO')
 		lET #ACT_STAND = #ACT_STAND+1
             END-IF
 	end-if
 	
 	!VENDKXY
 	 	if ($act_busarea='Market District')
 		Let #act_busarea6 = #act_busarea6+1
 	  end-if
 	 	if ($act_busarea='GEX')
 		Let #act_busarea7 = #act_busarea7+1
 	   end-if
 		if ($act_busarea='Valu King')
 		Let #act_busarea8 = #act_busarea8+1
 	   end-if
 	
 	   !ISDVDZK Added the code as per the itg 70135 START
 		if ($act_busarea='Freedom Rd')
 		Let #act_busarea9 = #act_busarea9+1
 	   end-if
 	   
 		if ($act_busarea='Fresh Food Manu')
 		Let #act_busarea10 = #act_busarea10+1
 	
 	   end-if
 	   !ISDVDZK Added the code as per the itg 70135 END
 	
 	
 	Let $activeunion = ''
 		Let #a = 1 
	  while #a <= #u
		get $union from union(#a)
		
 	  if $unioncd = $union
 	    Let $activeunion ='Union'
 	    break
	  end-if 
	 add 1 to #a
	 end-while 
	 
	 Let #b = 1 
	  while #b <= #nu
		get $nonunion from nonunion(#b) 
 	  if $unioncd = $nonunion
 	    Let $activeunion ='Non'
 	    break
	  end-if 
	 add 1 to #b
	 end-while
 	
 	!VENDKXY
 	
 	
 	IF ($act_busarea='RSC')
 		if(&a.deptid='C510' or &a.deptid='C550' or &a.deptid='C811')
 			Let #asfnu_act = #asfnu_act+1
 		end-if
 		if(&a.deptid='W009' or &a.deptid='W010' or &a.deptid='W011')
 			Let #asfu_act = #asfu_act+1
 		end-if
 		if(&a.deptid='C103' or &a.deptid='C106')
 			Let #brmnu_act = #brmnu_act+1
 		end-if
 		if(&a.deptid='W001')
 			Let #brmu_act = #brmu_act+1
 		end-if
 		if(&a.deptid='C059')
 			Let #hbcnu_act = #hbcnu_act+1
 		end-if
 		if(&a.deptid='W003')
 			Let #hbcu_act = #hbcu_act+1
 		end-if
 		if(&a.deptid='C065' or &a.deptid='C067' or &a.deptid='C121')
 			Let #okgnu_act = #okgnu_act+1
 		end-if
 		if(&a.deptid='W002' or &a.deptid='W007')
 			Let #okgu_act = #okgu_act+1
 		end-if
 		if(&a.deptid='C066' or &a.deptid='C105')
 			Let #tmknu_act = #tmknu_act+1
 		end-if
 		if(&a.deptid='W004')
 			Let #tmku_act = #tmku_act+1
 		end-if
 		if(&a.deptid='C062')
 			Let #corp_act = #corp_act+1
 		end-if
 		if(&a.deptid='C409' or &a.deptid='C410' or &a.deptid='C755')
 			Let #nonnu_act = #nonnu_act+1
 		end-if
 		if(&a.deptid='C129')
 			Let #supnu_act = #supnu_act+1
 		end-if
 			
 	end-if
 	
 	if (&a.jobcode='10007' or &a.jobcode='10010' or &a.jobcode='10012' or &a.jobcode='10013' or &a.jobcode='10015' or &a.jobcode='10018'
 		 or &a.jobcode='10021' or &a.jobcode='10023' or &a.jobcode='10027' or &a.jobcode='10028' or &a.jobcode='10029' 
 		 or &a.jobcode='10031' or &a.jobcode='10046' or &a.jobcode='60004' or &a.jobcode='60013' or &a.jobcode='70004' or &a.jobcode='70013' or &a.jobcode='70017'
 		  or &a.jobcode='70029' or &a.jobcode='70031' or &a.jobcode='80012'
 		 or &a.jobcode='80017' or &a.jobcode='80019,' or &a.jobcode='80025' or &a.jobcode='80044' or &a.jobcode='80045' or &a.jobcode='80066' or &a.jobcode='80069')
 		
 		Let #mdp_act = #mdp_act+1
 	end-if
 	
 	Let $emplid_1 = $act_emplid
	do ethinicgrp 	    	
	do write-file-active
FROM PS_JOB A, PS_JOBCODE_TBL B, PS_PERSONAL_DATA C, PS_EMPLOYMENT D, PS_DEPT_TBL E, PS_GEX_DEPT_TBL F, PS_GEX_EVP_TBL G 
  WHERE ( A.EFFDT =  
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE A.EMPLID = A_ED.EMPLID 
          AND A.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= $thru_date)        
    AND A.EFFSEQ =                                                     
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES                      
        WHERE A.EMPLID = A_ES.EMPLID                                   
          AND A.EMPL_RCD = A_ES.EMPL_RCD                               
          AND A.EFFDT = A_ES.EFFDT)                                    
     AND B.SETID = A.SETID_JOBCODE                                     
     AND B.JOBCODE = A.JOBCODE                                         
     AND B.EFFDT =                                                     
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED               
        WHERE B.SETID = B_ED.SETID          
          AND B.JOBCODE = B_ED.JOBCODE      
          AND B_ED.EFFDT <= $AsOfDate)        
     AND A.EMPLID = C.EMPLID                
     AND A.EMPLID = D.EMPLID                
     AND A.EMPL_RCD = D.EMPL_RCD            
     AND A.PAYGROUP = G.PAYGROUP            
     AND A.ACCT_CD = G.ACCT_CD              
     AND E.SETID = A.SETID_DEPT                          
     AND E.DEPTID = A.DEPTID                             
     AND E.EFFDT =                                       
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED    
        WHERE E.SETID = E_ED.SETID                       
          AND E.DEPTID = E_ED.DEPTID                     
          AND E_ED.EFFDT <= $AsOfDate)                     
     AND E.SETID = F.SETID                               
     AND E.DEPTID = F.DEPTID                             
     AND F.EFFDT =                                       
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F.SETID = F_ED.SETID                          
          AND F.DEPTID = F_ED.DEPTID                      
          AND F_ED.EFFDT <= $AsOfDate)
     AND A.DEPTID =  G.DEPTID (+)          
     AND ( A.EMPL_STATUS IN ('A','L','P','S') 
     AND A.COMPANY NOT BETWEEN '005' AND '999' 
     AND A.COMPANY NOT IN ('KAP','VEC')         
     AND A.JOBCODE <> '90000'      
     AND A.GEX_SEASONAL_EMP = 'N') )                          
ORDER BY C.NAME
END-SELECT
show 'active employee processing ended'
!SHOW '#ACT_count_emp1:' #act_count_emp1
!SHOW '#ACT_count_emp2:' #act_count_emp2
!SHOW '#ACT_count_emp3:' #act_count_emp3
!Show  'union===' $union 'nonunion===' $nonunion 'union code===' $unioncd '$activeunion==' $activeunion	!vendkxy testing
end-procedure


!**************************************************************************************************************************
!		Calculation and report generation of EVP Emplid
!**************************************************************************************************************************
Begin-Procedure EVP
      string  'Turnover by EVP' by $delim into $evp
      write 3 from $evp
      write 3 from $next
      write 3 from $Report_title
     write 3 from $next
     string 'EVP' 'Active' 'Term' 'Turnover' by $delim into $evp
      write 3 from $evp
      LET #ACT_GRANDTOTAL = #act_count_emp1+#act_count_emp2+#act_count_emp3
      LET #TER_GRANDTOTAL = #ter_count_emp1+#ter_count_emp2+#ter_count_emp3
      if (#act_count_emp1=0)
      	   Let #emp1_per=0
      	   move #emp1_per to $emp1_per 9999
      Let $emp1_per = $emp1_per||'%'
      else 
      Let #emp1_per = round(((#ter_count_emp1/#act_count_emp1)*100),0)
      move #emp1_per to $emp1_per 9999
      Let $emp1_per = $emp1_per||'%'
      end-if
      if (#act_count_emp2=0)
      	   Let #emp2_per=0
      	   move #emp2_per to $emp2_per 9999
      Let $emp2_per = $emp2_per||'%'
      else
      Let #emp2_per = round(((#ter_count_emp2/#act_count_emp2)*100),0)
      move #emp2_per to $emp2_per 9999
      Let $emp2_per = $emp2_per||'%'
      end-if
      if (#act_count_emp3=0)
      	   Let #emp3_per=0
      	   move #emp3_per to $emp3_per 9999
      Let $emp3_per = $emp3_per||'%'
      else
      Let #emp3_per = round(((#ter_count_emp3/#act_count_emp3)*100),0)
      move #emp3_per to $emp3_per 9999
      Let $emp3_per = $emp3_per||'%'
      end-if
      !GEX-TLL , 04,25,2008 Commented - Begin
      !if (#ACT_GRANDTOTAL=0)
      !	   Let #grand_per=0
      !	   move #grand_per to $grand_per 9999
      !Let $grand_per = $grand_per||'%'
      !else
      !let #grand_per = round(((#TER_GRANDTOTAL/#ACT_GRANDTOTAL)*100),0)
      !move #grand_per to $grand_per 9999
      !Let $grand_per = $grand_per||'%'
      !end-if
      !GEX-TLL , 04,25,2008 Commented - End
      move #act_count_emp1 to $act_count_emp1 999,999
      move #act_count_emp2 to $act_count_emp2 999,999
       move #act_count_emp3 to $act_count_emp3 999,999
       
       move #ter_count_emp1 to $ter_count_emp1 999,999
      move #ter_count_emp2 to $ter_count_emp2 999,999
       move #ter_count_emp3 to $ter_count_emp3 999,999
       
       let #act_count_emp4=#act_grand_area-#ACT_GRANDTOTAL
       let #ter_count_emp4=#ter_grand_area-#ter_GRANDTOTAL
       
       let #ACT_GRANDTOTAL=#ACT_GRANDTOTAL+#act_count_emp4
       let #TER_GRANDTOTAL=#TER_GRANDTOTAL+#ter_count_emp4 
       
       Let #emp4_per = round(((#ter_count_emp4/#act_count_emp4)*100),0)
      move #emp4_per to $emp4_per 9999
      Let $emp4_per = $emp4_per||'%'
       
       move #act_count_emp4 to $act_count_emp4 999,999
       move #ter_count_emp4 to $ter_count_emp4 999,999
       
       move #ACT_GRANDTOTAL to $ACT_GRANDTOTAL 999,999
       move #TER_GRANDTOTAL to $TER_GRANDTOTAL 999,999
       
      !GEX-TLL, 04/25/2008 HCM 9.0 Upgrade - Begin
        !vendkxy on 04/21/2008 changes done as suggested by vicki
       
       if (#ACT_GRANDTOTAL=0)
      	   Let #grand_per=0
      	   move #grand_per to $grand_per 9999
      Let $grand_per = $grand_per||'%'
      else
      let #grand_per = round(((#TER_GRANDTOTAL/#ACT_GRANDTOTAL)*100),0)
      move #grand_per to $grand_per 9999
      Let $grand_per = $grand_per||'%'
      end-if
      !GEX-TLL, 04/25/2008 HCM 9.0 Upgrade - End
       
      string 'Karet, L' $act_count_emp1 $ter_count_emp1 $emp1_per by $delim into $evp
      write 3 from $evp
      string 'Lucot, J' $act_count_emp2 $ter_count_emp2 $emp2_per by $delim into $evp
      write 3 from $evp
      string 'Minnaugh, M' $act_count_emp3 $ter_count_emp3 $emp3_per by $delim into $evp
      write 3 from $evp
      string 'N/A' $act_count_emp4 $ter_count_emp4 $emp4_per by $delim into $evp
      write 3 from $evp
      string 'Grand Total' $ACT_GRANDTOTAL $TER_GRANDTOTAL $grand_per BY $delim into $evp
      write 3 from $evp
End-Procedure

!**************************************************************************************************************************
!		write-file-active
!**************************************************************************************************************************

Begin-Procedure write-file-active


!string $act_emplid $act_name $act_company $act_paygroup $act_deptid $act_descr $act_div $act_div_cd    !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes 
string $act_name $act_company $act_paygroup $act_deptid $act_descr $act_div $act_div_cd  		!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes 
$act_busarea $act_bu $actcd $dept $empl_sts $unioncd $activeunion $act_region $fulltime $empltype $age $sex $ethinicgrp $ee01 $jobcode $jobtitle $flsa	!vendkxy
$grade $stdhrs $hiredate $rehiredate $evp $svp by $delim into $actives

write 1 from $actives

End-Procedure

!**************************************************************************************************************************
!		Get-Terminate-Employees
!**************************************************************************************************************************
Begin-procedure Get-Terminate-Employees
show 'Terminate employee processing started'

	Let #ter_count_emp1=0
 	Let #ter_Count_emp2=0
 	Let #ter_count_emp3=0
 	Let #ter_busarea1=0
	Let #ter_busarea2=0
	Let #ter_busarea3=0
	Let #ter_busarea4=0
	Let #ter_busarea5=0
	
	!VENDKXY	
		Let #ter_busarea6=0
		Let #ter_busarea7=0
		Let #ter_busarea8=0
	!VENDKXY
	!ISDVDZK Modified the code as per the itg 70135 START
	Let #ter_busarea9=0
	Let #ter_busarea10=0
	!ISDVDZK Modified the code as per the itg 70135 END 
	
	
begin-SELECT DISTINCT
AA.EMPLID,
CC.NAME,
AA.COMPANY,
AA.PAYGROUP,
AA.DEPTID,
EE.DESCR,
GG.GEX_OPR_DIV,
FF.GEX_COMPANY_DIV_CD,
GG.GEX_BUS_AREA,
AA.ACCT_CD,
FF.DEPARTMENT,
FF.BUSINESS_UNIT,
AA.UNION_CD,
CC.SEX,
TRUNC(MONTHS_BETWEEN(dd.TERMINATION_DT,TO_DATE( TO_CHAR(CC.BIRTHDATE,'YYYY-MM-DD'),'YYYY-MM-DD'))/12) &AGE1
AA.FULL_PART_TIME,
AA.EMPL_TYPE,
TO_CHAR(AA.JOB_ENTRY_DT,'YYYY-MM-DD') &JOBENTRY
AA.JOBCODE,
AA.GRADE,
BB.DESCR,
BB.EEO1CODE,
BB.MANAGER_LEVEL
BB.STD_HOURS,
TO_CHAR(DD.SERVICE_DT,'YYYY-MM-DD') &SERVICEDT
TRUNC(MONTHS_BETWEEN(dd.TERMINATION_DT,TO_DATE( TO_CHAR(DD.SERVICE_DT,'YYYY-MM-DD'),'YYYY-MM-DD'))/1) &LOS
JJ.ACTION_REASON,	!vendkxy
JJ.DESCR,
TRUNC(MONTHS_BETWEEN(dd.TERMINATION_DT,TO_DATE( TO_CHAR(AA.JOB_ENTRY_DT,'YYYY-MM-DD'),'YYYY-MM-DD'))/12) &TIMEINPOS
TO_CHAR(DD.HIRE_DT,'YYYY-MM-DD') &HIRE1
TO_CHAR(DD.REHIRE_DT,'YYYY-MM-DD') &REHIRE1
TO_CHAR(DD.TERMINATION_DT,'YYYY-MM-DD') &TERMDT
TO_CHAR(AA.EFFDT,'YYYY-MM-DD') &EFFDT
GG.GEX_SVPVP,
GG.GEX_EVP,
FF.GEX_RGN_CD		!vendkxy
	Let $emplid1=&aa.emplid
	Let $name=&CC.NAME
	Let $comp=&aA.company
	Let $Paygroup=&AA.PAYGROUP
	Let $deptid=&AA.DEPTID
	Let $descr=&EE.DESCR
	Let $div=&GG.GEX_OPR_DIV
	Let $busarea=&GG.GEX_BUS_AREA
	Let $dept=&FF.DEPARTMENT
	Let $bu=&FF.BUSINESS_UNIT
	Let $divcd=&FF.GEX_COMPANY_DIV_CD
	Let $actcd=&AA.ACCT_CD
	Let $unioncd=&AA.UNION_CD
	Let $sex=&CC.SEX
	Let $age=&age1
	Let $fulltime=&AA.FULL_PART_TIME
	Let $empltype=&AA.EMPL_TYPE
	Let $jobentry=&jobentry
	Let $jobcode=&AA.JOBCODE
	Let $grade=&Aa.grade
	Let $jobtitle=&BB.DESCR
	Let $ee01=&BB.EEO1CODE
	Let $mgrlvl=&bb.manager_level
	Let $stdhrs=&BB.STD_HOURS
	Let $Servicedt=&servicedt
	Let $Lengthofservice=&los
	Let $termrsn=&JJ.DESCR
	Let $Timeinpos=&timeinpos
	Let $hiredate=&hire1
	Let $rehiredate=&rehire1
	Let $terminationdate=&termdt
	Let $Effdt=&effdt
	Let $svp=&GG.GEX_SVPVP
	Let $evp=&GG.GEX_EVP
	Let $ter_region = &FF.GEX_RGN_CD		!vendkxy
  	Let $termination = &JJ.ACTION_REASON		!vendkxy
 	
 	if (&GG.GEX_EVP='178509093')
 		lET #ter_count_emp1 = #ter_count_emp1+1
 		
 	end-if
 		if (&GG.GEX_EVP='181464707')
 			LET #ter_count_emp2 = #ter_count_emp2+1
 		end-if
 		
 			if (&GG.GEX_EVP='192505706')
 				LET #ter_count_emp3 = #ter_count_emp3+1
 			end-if
 		
 		
 	if ($busarea='Corp Off')
 		Let #ter_busarea1 = #ter_busarea1+1
 	end-if
 	if ($busarea='GE Retail')
 		Let #ter_busarea2 = #ter_busarea2+1
 	end-if
 	if ($busarea='GetGo')
 		Let #ter_busarea3 = #ter_busarea3+1
 	end-if
	!if (substr(&aa.paygroup,1,2) = 'PH' or &aa.deptid = 'C017' or &aa.deptid= 'C098' or &aa.acct_cd = '008' or $busarea='Pharmacy') !vendkxy done the changes for ITG 65099
 	if $busarea='Pharmacy'		!vendkxy done the changes for ITG 65099
 	 		Let #ter_busarea4 = #ter_busarea4+1
 	end-if
 	if ($busarea='RSC')
 		Let #ter_busarea5 = #ter_busarea5+1
 	end-if
 	!VENDKXY
 	 	if ($busarea='Market District')
 		Let #ter_busarea6 = #ter_busarea6+1
 	  end-if
 	 	if ($busarea='GEX')
 		Let #ter_busarea7 = #ter_busarea7+1
 	   end-if
 		if ($busarea='Valu King')
 		Let #ter_busarea8 = #ter_busarea8+1
 	   end-if
 	   !ISDVDZK Modified the code as per the itg 70135 START
 	   if ($busarea='Freedom Rd')
 		Let #ter_busarea9 = #ter_busarea9+1
 	   end-if
 	   if ($busarea='Fresh Food Manu')
 		Let #ter_busarea10 = #ter_busarea10+1
 	   end-if
 	   !ISDVDZK Modified the code as per the itg 70135 END 
 	   
 	 
 	 	Let $termunion =''
         Let #a =1 
	  while #a <= #u
		get $union from union(#a) 
 	  if $unioncd = $union
 	    Let $termunion ='Union'
	  break
	  end-if 
	 add 1 to #a
	 end-while 
	 
	 Let #b =1 
	  while #b <= #nu
		get $nonunion from nonunion(#b) 
 	  if $unioncd = $nonunion
 	    Let $termunion ='Non'
	  break
	  end-if 
	 add 1 to #b
	 end-while 	   
 	
 	Let $termcode =''
         Let #k =1 
	  while #k <= #vo
		get $volun from vol(#k) 
 	  if $termination = $volun
 	    Let $termcode ='Voluntary'
	  break
	  end-if 
	 add 1 to #k
	 end-while 
	 
	 Let #l =1 
	  while #l <= #inv
		get $involun from invol(#l) 
 	  if $termination = $involun
 	    Let $termcode ='Involuntary'
	  break
	  end-if 
	 add 1 to #l
	 end-while 	   
 	!VENDKXY
 	!show $termination $volun $involun
 	
 	
 	
 	
 	!VENDKXY
 	
 	
 	if ($busarea='GetGo' AND (&FF.GEX_COMPANY_DIV_CD='CLE' OR &FF.GEX_COMPANY_DIV_CD='COL' OR &FF.GEX_COMPANY_DIV_CD='GEM' OR &FF.GEX_COMPANY_DIV_CD='GPH' OR  &FF.GEX_COMPANY_DIV_CD='RMC' OR  &FF.GEX_COMPANY_DIV_CD='RPH' ))
 		lET #TER_PAD = #TER_PAD+1
 	ELSE 
 		IF ($busarea='GetGo' AND &FF.GEX_COMPANY_DIV_CD='GGO')
 		lET #TER_STAND = #TER_STAND+1
             END-IF
 	end-if 	
 	

 	
 	IF ($busarea='RSC')
 		if(&aa.deptid='C510' or &aa.deptid='C550' or &aa.deptid='C811')
 			Let #asfnu_ter = #asfnu_ter+1
 		end-if
 		if(&aa.deptid='W009' or &aa.deptid='W010' or &aa.deptid='W011')
 			Let #asfu_ter = #asfu_ter+1
 		end-if
 		if(&aa.deptid='C103' or &aa.deptid='C106')
 			Let #brmnu_ter = #brmnu_ter+1
 		end-if
 		if(&aa.deptid='W001')
 			Let #brmu_ter = #brmu_ter+1
 		end-if
 		if(&aa.deptid='C059')
 			Let #hbcnu_ter = #hbcnu_ter+1
 		end-if
 		if(&aa.deptid='W003')
 			Let #hbcu_ter = #hbcu_ter+1
 		end-if
 		if(&aa.deptid='C065' or &aa.deptid='C067' or &aa.deptid='C121')
 			Let #okgnu_ter = #okgnu_ter+1
 		end-if
 		if(&aa.deptid='W002' or &aa.deptid='W007')
 			Let #okgu_ter = #okgu_ter+1
 		end-if
 		if(&aa.deptid='C066' or &aa.deptid='C105')
 			Let #tmknu_ter = #tmknu_ter+1
 		end-if
 		if(&aa.deptid='W004')
 			Let #tmku_ter = #tmku_ter+1
 		end-if
 		if(&aa.deptid='C062')
 			Let #corp_ter = #corp_ter+1
 		end-if
 		if(&aa.deptid='C409' or &aa.deptid='C410' or &aa.deptid='C755')
 			Let #nonnu_ter = #nonnu_ter+1
 		end-if
 		if(&aa.deptid='C129')
 			Let #supnu_ter = #supnu_ter+1
 		end-if
 			
 	end-if
 	
 	
 	
 	if (&aa.jobcode='10007' or &aa.jobcode='10010' or &aa.jobcode='10012' or &aa.jobcode='10013' or &aa.jobcode='10015' or &aa.jobcode='10018'
 		 or &aa.jobcode='10021' or &aa.jobcode='10023' or &aa.jobcode='10027' or &aa.jobcode='10028' or &aa.jobcode='10029' 
 		 or &aa.jobcode='10031' or &aa.jobcode='10046' or &aa.jobcode='60004' or &aa.jobcode='60013' or &aa.jobcode='70004' or &aa.jobcode='70013' or &aa.jobcode='70017'
 		  or &aa.jobcode='70029' or &aa.jobcode='70031' or &aa.jobcode='80012'
 		 or &aa.jobcode='80017' or &aa.jobcode='80019' or &aa.jobcode='80025' or &aa.jobcode='80044' or &aa.jobcode='80045' or &aa.jobcode='80066' or &aa.jobcode='80069')
 			Let #mdp_ter = #mdp_ter+1
 			!show '#mdp_ter:' #mdp_ter
 		move &timeinpos to #timein
! 		let #timein = ceil(#var1)
  		!show 'Timeinpos:' #timein
  		if (#timein<1)
 			Let #count_lessthan1 = #count_lessthan1+1
 		!show 'lessthan1:'#count_lessthan1
 		else 
 		if (#timein >=1 and  #timein<3)
 			Let #count_lessthan3 = #count_lessthan3+1
 		!show 'lessthan3:'#count_lessthan3
 		else
 		if (#timein >=3 and #timein<7)
 		 	Let #count_lessthan7 = #count_lessthan7+1
 		 !show 'lessthan7:'#count_lessthan7
 		else
 		if (#timein>=7 and  #timein<10)
 			Let #count_lessthan10 = #count_lessthan10+1
 		!show 'lessthan10:'#count_lessthan10
 		else
 		if (#timein>=10)
 			Let #count_greaterthan10 = #count_greaterthan10+1
 		!show 'greaterthan10:'#count_greaterthan10
 		end-if
 		end-if
 		end-if
 		end-if
 		end-if
 		!show 'Termreason:'&jj.descr
 		if &jj.descr='3 Unreported Absences'
		lET #TERM1 = #TERM1+1
		END-IF
		if &jj.descr='Attendance'
		lET #TERM2 = #TERM2+1
		END-IF
		if &jj.descr='Deceased'
		lET #TERM3 = #TERM3+1
		END-IF
		if &jj.descr='Discharged Through Discipline'
		lET #TERM4 = #TERM4+1
		END-IF
		if &jj.descr='Dissatisfied w/Type of Work'
		lET #TERM5 = #TERM5+1
		END-IF
		if &jj.descr='Dissatisfied with Location'
		lET #TERM6 = #TERM6+1
		END-IF
		if &jj.descr='Failure to Return from Leave'
		lET #TERM7 = #TERM7+1
		END-IF
		if &jj.descr='Family Reasons'
		lET #TERM8 = #TERM8+1
		END-IF
		if &jj.descr='Other'
		lET #TERM9 = #TERM9+1
		END-IF
		if &jj.descr='Personal Reasons'
		lET #TERM10 = #TERM10+1
		END-IF
		if &jj.descr='Relocation'
		lET #TERM11 = #TERM11+1
		END-IF
		if &jj.descr='Resignation'
		lET #TERM12 = #TERM12+1
		END-IF
		if &jj.descr='Resignation-Other Position/Job'
		lET #TERM13 = #TERM13+1
		END-IF
		if &jj.descr='Retirement'
		lET #TERM14 = #TERM14+1
		END-IF
		if &jj.descr='Voluntary Quit - No Reason'
		lET #TERM15 = #TERM15+1
		END-IF
		if &jj.descr='Severance - Periodic Payments'
		Let #term16 = #term16+1
		end-if
 		if &jj.descr='Dissatisfied w/Comp. Policies'
 		Let #term17 = #term17+1
 		end-if
 		if &jj.descr='Did not pass evaluation'
 		Let #term18 = #term18+1
 		end-if
 		if  &jj.descr='Severance - Lump Sum'
 		Let #term19 = #term19+1
		end-if
		if  &jj.descr='Termination due to Layoff'
 		Let #term20 = #term20+1
		end-if
		if  &jj.descr='Dissatisfied with Supervision'
		Let #term21 = #term21+1
		end-if
		if  &jj.descr='Dissatisfied w/Promotion Opps'
		Let #term22 = #term22+1
		end-if
		if  &jj.descr='Retirement w/ Benefits and Pay'
		Let #term23 = #term23+1
		end-if
		
		
 		move &los to #los
 		
 		if (#los >=0 and  #los<3)
 		 	Let #count_lessthan3_los = #count_lessthan3_los+1
 		end-if
 		if (#los>=3 and #los<6)
 			Let #count_lessthan6 = #count_lessthan6+1
 		end-if
 		if (#los >=6 and #los<9)
 			Let #count_lessthan9 = #count_lessthan9+1
 		end-if
 		if (#los>=9 and #los<12)
 			Let #count_lessthan12 = #count_lessthan12+1
 		end-if
 		if (#los>=12)
 			Let #count_greaterthan12 = #count_greaterthan12+1
 		end-if
 		 	 		 		
 	end-if
	
	
	Let $emplid_1=$Emplid1
	do ethinicgrp
	DO  WRITE-FILE-TERMINATES
	
FROM PS_JOB AA, PS_JOBCODE_TBL BB, PS_PERSONAL_DATA CC, PS_EMPLOYMENT DD, PS_DEPT_TBL EE, PS_GEX_DEPT_TBL FF, PS_GEX_EVP_TBL GG, PS_ACTN_REASON_TBL JJ, PS_JOB II
  WHERE ( ( AA.EFFDT >= $from_date
     AND AA.EFFDT <= $thru_date)
     AND AA.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND AA.ACTION_REASON NOT IN  ('SCH','SEA')  ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND ((AA.ACTION_REASON NOT IN  ('SCH','SEA','DE2','DEA','RET')) OR (AA.ACTION = 'RET' AND AA.ACTION_REASON = 'RET')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND BB.SETID = AA.SETID_JOBCODE
     AND BB.JOBCODE = AA.JOBCODE
     AND BB.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE BB.SETID = B_ED.SETID
          AND BB.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND AA.EMPLID = CC.EMPLID
     AND AA.EMPLID = DD.EMPLID
     AND AA.EMPL_RCD = DD.EMPL_RCD
     AND AA.PAYGROUP = GG.PAYGROUP
     AND AA.ACCT_CD = GG.ACCT_CD
     AND EE.SETID = AA.SETID_DEPT
     AND EE.DEPTID = AA.DEPTID
     AND EE.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE EE.SETID = E_ED.SETID
          AND EE.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND EE.SETID = FF.SETID
     AND EE.DEPTID = FF.DEPTID
     AND FF.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE FF.SETID = F_ED.SETID
          AND FF.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND AA.DEPTID =  GG.DEPTID (+)
     AND DD.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( AA.COMPANY NOT BETWEEN '005' AND '999'
     AND AA.COMPANY NOT IN ('KAP','VEC')
     AND AA.GEX_SEASONAL_EMP = 'N'
     AND AA.JOBCODE <> '90000')
     AND JJ.ACTION = AA.ACTION
     AND JJ.ACTION_REASON = AA.ACTION_REASON
     AND JJ.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE JJ.ACTION = J_ED.ACTION
          AND JJ.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND II.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE II.EMPLID = I_ED.EMPLID
          AND II.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < AA.EFFDT)
    AND II.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE II.EMPLID = I_ES.EMPLID
          AND II.EMPL_RCD = I_ES.EMPL_RCD
          AND II.EFFDT = I_ES.EFFDT)
     AND AA.EMPLID = II.EMPLID
     AND AA.EMPL_RCD = II.EMPL_RCD
     AND II.EMPL_STATUS IN ('A','L','P','S') )
     
END-SELECT     
show 'Terminate employee processing ended'
!SHOW '#ter_count_emp1:' #ter_count_emp1
!SHOW '#ter_count_emp2:' #ter_count_emp2
!SHOW '#ter_count_emp3:' #ter_count_emp3
!show #count_lessthan1 '###' #count_lessthan3 '###' #count_lessthan7 '###' #count_lessthan10 '###' #count_greaterthan10 '###' #mdp_ter
!show #timeinpos
!show #los
!show #mdp_ter
end-procedure
!**************************************************************************************************************************
!		 WRITE-FILE-TERMINATES
!**************************************************************************************************************************
BEGIN-PROCEDURE WRITE-FILE-TERMINATES

!STRING $emplid1 $name $comp $Paygroup $deptid $descr $div $divcd $busarea $actcd $dept $bu  $unioncd   !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes 
STRING  $name $comp $Paygroup $deptid $descr $div $divcd $busarea $actcd $dept $bu  $unioncd $termunion $ter_region   !vendkxy  		!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes
$sex $ethinicgrp $age $fulltime $empltype $jobentry $jobcode $grade $jobtitle $ee01 $mgrlvl $stdhrs
$Servicedt $Lengthofservice $termrsn $termcode $Timeinpos $hiredate $rehiredate $terminationdate	!vendkxy
$Effdt $svp $evp by $DELIM into $TERMINATES

WRITE 2 FROM $TERMINATES

END-PROCEDURE

!VENDKXY

!**************************************************************************************************************************
!		Get-Voluntary-Terminates
!**************************************************************************************************************************
Begin-procedure Get-Voluntary-Terminates
show 'Get-Voluntary-Terminates started'

   Let #vol_busarea1=0
	 Let #vol_busarea2=0
	 Let #vol_busarea3=0
	 Let #vol_busarea4=0
	 Let #vol_busarea5=0
	 Let #vol_busarea6=0
	 Let #vol_busarea7=0
	 Let #vol_busarea8=0
	 
	 !ISDVDZK Modified the code as per the itg 70135 START
	 Let #vol_busarea9=0
	 Let #vol_busarea10=0
	 !ISDVDZK Modified the code as per the itg 70135 END
begin-SELECT DISTINCT
A4.EMPLID,              
C4.NAME,                
A4.COMPANY,             
A4.PAYGROUP,            
A4.DEPTID				&vol_deptid,              
E4.DESCR,               
G4.GEX_OPR_DIV,         
F4.GEX_COMPANY_DIV_CD			&VOL_GEX_COMPANY_DIV_CD 
G4.GEX_BUS_AREA 			&vol_busarea
F4.BUSINESS_UNIT,       
A4.UNION_CD,            
A4.EMPL_TYPE,           
A4.JOBCODE,             
A4.ACTION_REASON        
			
	if (&vol_busarea='Corp Off')
 	  Let #vol_busarea1 = #vol_busarea1+1
 	end-if
 	if (&vol_busarea='GE Retail')
 	  Let #vol_busarea2 = #vol_busarea2+1
 	end-if
 	if (&vol_busarea='GetGo')
 	  Let #vol_busarea3 = #vol_busarea3+1
 	end-if
 	if (&vol_busarea='Pharmacy')	!vendkxy done the changes for ITG 65099
 	!if (substr(&a4.paygroup,1,2) = 'PH' or &vol_deptid = 'C017' or &vol_deptid= 'C098' or &vol_busarea='Pharmacy')!vendkxy done the changes for ITG 65099
 	  Let #vol_busarea4 = #vol_busarea4+1
 	end-if
 	if (&vol_busarea='RSC')
 		Let #vol_busarea5 = #vol_busarea5+1
 	end-if
 	if (&vol_busarea='Market District')
 	  Let #vol_busarea6 = #vol_busarea6+1
 	end-if
 	if (&vol_busarea='GEX')
 	  Let #vol_busarea7 = #vol_busarea7+1
 	end-if
 	if (&vol_busarea='Valu King')
 	  Let #vol_busarea8 = #vol_busarea8+1
 	end-if
 	
 	!ISDVDZK Modified the code as per the itg 70135 START
 	if (&vol_busarea='Freedom Rd')
 	  Let #vol_busarea9 = #vol_busarea9+1
 	end-if
 	if (&vol_busarea='Fresh Food Manu')
 	  Let #vol_busarea10 = #vol_busarea10+1
 	end-if
 	!ISDVDZK Modified the code as per the itg 70135 END 
 	
 	
 	if (&VOL_busarea='GetGo' AND (&VOL_GEX_COMPANY_DIV_CD='CLE' OR &VOL_GEX_COMPANY_DIV_CD='COL' OR &VOL_GEX_COMPANY_DIV_CD='GEM' OR &VOL_GEX_COMPANY_DIV_CD='GPH' OR  &VOL_GEX_COMPANY_DIV_CD='RMC' OR  &VOL_GEX_COMPANY_DIV_CD='RPH' ))
 		lET #VOL_TER_PAD = #VOL_TER_PAD+1
 	ELSE 
 		IF (&VOL_busarea='GetGo' AND &VOL_GEX_COMPANY_DIV_CD='GGO')
 		lET #VOL_TER_STAND = #VOL_TER_STAND+1
             END-IF
 	end-if 
 
 
 	IF (&vol_busarea = 'RSC')
 		if(&vol_deptid='C510' or &vol_deptid='C550' or &vol_deptid='C811')
 			Let #asfnu_ter_vol = #asfnu_ter_vol+1
 		end-if
 		if(&vol_deptid='W009' or &vol_deptid='W010' or &vol_deptid='W011')
 			Let #asfu_ter_vol = #asfu_ter_vol+1
 		end-if
 		if(&vol_deptid='C103' or &vol_deptid='C106')
 			Let #brmnu_ter_vol = #brmnu_ter_vol+1
 		end-if
 		if(&vol_deptid='W001')
 			Let #brmu_ter_vol = #brmu_ter_vol+1
 		end-if
 		if(&vol_deptid='C059')
 			Let #hbcnu_ter_vol = #hbcnu_ter_vol+1
 		end-if
 		if(&vol_deptid='W003')
 			Let #hbcu_ter_vol = #hbcu_ter_vol+1
 		end-if
 		if(&vol_deptid='C065' or &vol_deptid='C067' or &vol_deptid='C121')
 			Let #okgnu_ter_vol = #okgnu_ter_vol+1
 		end-if
 		if(&vol_deptid='W002' or &vol_deptid='W007')
 			Let #okgu_ter_vol = #okgu_ter_vol+1
 		end-if
 		if(&vol_deptid='C066' or &vol_deptid='C105')
 			Let #tmknu_ter_vol = #tmknu_ter_vol+1
 		end-if
 		if(&vol_deptid='W004')
 			Let #tmku_ter_vol = #tmku_ter_vol+1
 		end-if
 		if(&vol_deptid='C062')
 			Let #corp_ter_vol = #corp_ter_vol+1
 		end-if
 		if(&vol_deptid='C409' or &vol_deptid='C410' or &vol_deptid='C755')
 			Let #nonnu_ter_vol = #nonnu_ter_vol+1
 		end-if
 		if(&vol_deptid='C129')
 			Let #supnu_ter_vol = #supnu_ter_vol+1
 		end-if
 			
 	end-if
 	
 	

FROM PS_JOB A4, PS_JOBCODE_TBL B4, PS_PERSONAL_DATA C4, PS_EMPLOYMENT D4, PS_DEPT_TBL E4, PS_GEX_DEPT_TBL F4, PS_GEX_EVP_TBL G4, PS_ACTN_REASON_TBL J4, PS_JOB I4
  WHERE ( ( A4.EFFDT >= $from_date
     AND A4.EFFDT <= $thru_date)
     AND A4.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA] ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009   
     AND (([$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA]) AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'RET') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'DIS') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'ILA')  AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009  
     AND B4.SETID = A4.SETID_JOBCODE
     AND B4.JOBCODE = A4.JOBCODE
     AND B4.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B4.SETID = B_ED.SETID
          AND B4.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A4.EMPLID = C4.EMPLID
     AND A4.EMPLID = D4.EMPLID
     AND A4.EMPL_RCD = D4.EMPL_RCD
     AND A4.PAYGROUP = G4.PAYGROUP
     AND A4.ACCT_CD = G4.ACCT_CD
     AND E4.SETID = A4.SETID_DEPT
     AND E4.DEPTID = A4.DEPTID
     AND E4.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E4.SETID = E_ED.SETID
          AND E4.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E4.SETID = F4.SETID
     AND E4.DEPTID = F4.DEPTID
     AND F4.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F4.SETID = F_ED.SETID
          AND F4.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A4.DEPTID =  G4.DEPTID (+)
     AND D4.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A4.COMPANY NOT BETWEEN '005' AND '999'
     AND A4.COMPANY NOT IN ('KAP','VEC')
     AND A4.GEX_SEASONAL_EMP = 'N'
     AND A4.JOBCODE <> '90000')
     AND J4.ACTION = A4.ACTION
     AND J4.ACTION_REASON = A4.ACTION_REASON
     AND J4.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J4.ACTION = J_ED.ACTION
          AND J4.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I4.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I4.EMPLID = I_ED.EMPLID
          AND I4.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A4.EFFDT)
    AND I4.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I4.EMPLID = I_ES.EMPLID
          AND I4.EMPL_RCD = I_ES.EMPL_RCD
          AND I4.EFFDT = I_ES.EFFDT)
     AND A4.EMPLID = I4.EMPLID
     AND A4.EMPL_RCD = I4.EMPL_RCD
     AND I4.EMPL_STATUS IN ('A','L','P','S') )
     
END-SELECT     

end-procedure

!**************************************************************************************************************************
!		Get-Involuntary-Terminates
!**************************************************************************************************************************
Begin-procedure Get-Involuntary-Terminates
show 'Get-Involuntary-Terminates started'

  
   Let #invol_busarea1=0
	 Let #invol_busarea2=0
	 Let #invol_busarea3=0
	 Let #invol_busarea4=0
	 Let #invol_busarea5=0
	 Let #invol_busarea6=0
	 Let #invol_busarea7=0
	 Let #invol_busarea8=0
	 !ISDVDZK Modified the code as per the itg 70135 START
	 Let #invol_busarea9=0
	 Let #invol_busarea10=0
	 !ISDVDZK Modified the code as per the itg 70135 END 


begin-SELECT DISTINCT
A5.EMPLID,              
C5.NAME,                
A5.COMPANY,             
A5.PAYGROUP,            
A5.DEPTID				&invol_deptid,             
E5.DESCR,               
G5.GEX_OPR_DIV,         
F5.GEX_COMPANY_DIV_CD			&INVOL_GEX_COMPANY_DIV_CD
G5.GEX_BUS_AREA 				&invol_busarea,
F5.BUSINESS_UNIT, 
A5.UNION_CD,            
A5.EMPL_TYPE,           
A5.JOBCODE,             
A5.ACTION_REASON        

	if (&invol_busarea='Corp Off')
 	  Let #invol_busarea1 = #invol_busarea1+1
 	end-if
 	if (&invol_busarea='GE Retail')
 	  Let #invol_busarea2 = #invol_busarea2+1
 	end-if
 	if (&invol_busarea='GetGo')
 	  Let #invol_busarea3 = #invol_busarea3+1
 	end-if
 	if (&invol_busarea='Pharmacy')!vendkxy done the changes for ITG 65099
 	!if (substr(&a5.paygroup,1,2) = 'PH' or &invol_deptid = 'C017' or &invol_deptid= 'C098' or &invol_busarea='Pharmacy')!vendkxy done the changes for ITG 65099
 	  Let #invol_busarea4 = #invol_busarea4+1
 	end-if
 	if (&invol_busarea='RSC')
 		Let #invol_busarea5 = #invol_busarea5+1
 	end-if
 	if (&invol_busarea='Market District')
 	  Let #invol_busarea6 = #invol_busarea6+1
 	end-if
 	if (&invol_busarea='GEX')
 	  Let #invol_busarea7 = #invol_busarea7+1
 	end-if
 	if (&invol_busarea='Valu King')
 	  Let #invol_busarea8 = #invol_busarea8+1
 	end-if
 	!ISDVDZK Modified the code as per the itg 70135 START
 	
 	if (&invol_busarea='Freedom Rd')
 	  Let #invol_busarea9 = #invol_busarea9+1
 	end-if
 	if (&invol_busarea='Fresh Food Manu')
 	  Let #invol_busarea10 = #invol_busarea10+1
 	end-if
 	!ISDVDZK Modified the code as per the itg 70135 END
 	 	
 	if (&INVOL_busarea='GetGo' AND (&INVOL_GEX_COMPANY_DIV_CD='CLE' OR &INVOL_GEX_COMPANY_DIV_CD='COL' OR &INVOL_GEX_COMPANY_DIV_CD='GEM' OR &INVOL_GEX_COMPANY_DIV_CD='GPH' OR  &INVOL_GEX_COMPANY_DIV_CD='RMC' OR  &INVOL_GEX_COMPANY_DIV_CD='RPH' ))
 		lET #INVOL_TER_PAD = #INVOL_TER_PAD+1
 	ELSE 
 		IF (&INVOL_busarea='GetGo' AND &INVOL_GEX_COMPANY_DIV_CD='GGO')
 		lET #INVOL_TER_STAND = #INVOL_TER_STAND+1
             END-IF
 	end-if 
 	
 	IF (&invol_busarea = 'RSC')
 		if(&invol_deptid='C510' or &invol_deptid='C550' or &invol_deptid='C811')
 			Let #asfnu_ter_invol = #asfnu_ter_invol+1
 		end-if
 		if(&invol_deptid='W009' or &invol_deptid='W010' or &invol_deptid='W011')
 			Let #asfu_ter_invol = #asfu_ter_invol+1
 		end-if
 		if(&invol_deptid='C103' or &invol_deptid='C106')
 			Let #brmnu_ter_invol = #brmnu_ter_invol+1
 		end-if
 		if(&invol_deptid='W001')
 			Let #brmu_ter_invol = #brmu_ter_invol+1
 		end-if
 		if(&invol_deptid='C059')
 			Let #hbcnu_ter_invol = #hbcnu_ter_invol+1
 		end-if
 		if(&invol_deptid='W003')
 			Let #hbcu_ter_invol = #hbcu_ter_invol+1
 		end-if
 		if(&invol_deptid='C065' or &invol_deptid='C067' or &invol_deptid='C121')
 			Let #okgnu_ter_invol = #okgnu_ter_invol+1
 		end-if
 		if(&invol_deptid='W002' or &invol_deptid='W007')
 			Let #okgu_ter_invol = #okgu_ter_invol+1
 		end-if
 		if(&invol_deptid='C066' or &invol_deptid='C105')
 			Let #tmknu_ter_invol = #tmknu_ter_invol+1
 		end-if
 		if(&invol_deptid='W004')
 			Let #tmku_ter_invol = #tmku_ter_invol+1
 		end-if
 		if(&invol_deptid='C062')
 			Let #corp_ter_invol = #corp_ter_invol+1
 		end-if
 		if(&invol_deptid='C409' or &invol_deptid='C410' or &invol_deptid='C755')
 			Let #nonnu_ter_invol = #nonnu_ter_invol+1
 		end-if
 		if(&invol_deptid='C129')
 			Let #supnu_ter_invol = #supnu_ter_invol+1
 		end-if
 			
 	end-if
 	
 	

FROM PS_JOB A5, PS_JOBCODE_TBL B5, PS_PERSONAL_DATA C5, PS_EMPLOYMENT D5, PS_DEPT_TBL E5, PS_GEX_DEPT_TBL F5, PS_GEX_EVP_TBL G5, PS_ACTN_REASON_TBL J5, PS_JOB I5
  WHERE ( ( A5.EFFDT >= $from_date
     AND A5.EFFDT <= $thru_date)
     AND A5.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]! VENDKXY Done the Changes for ITG 68183 on 10/09/2009 
     AND (([$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]) AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'DIS') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'ILA') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009 
     AND B5.SETID = A5.SETID_JOBCODE
     AND B5.JOBCODE = A5.JOBCODE
     AND B5.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B5.SETID = B_ED.SETID
          AND B5.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A5.EMPLID = C5.EMPLID
     AND A5.EMPLID = D5.EMPLID
     AND A5.EMPL_RCD = D5.EMPL_RCD
     AND A5.PAYGROUP = G5.PAYGROUP
     AND A5.ACCT_CD = G5.ACCT_CD
     AND E5.SETID = A5.SETID_DEPT
     AND E5.DEPTID = A5.DEPTID
     AND E5.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E5.SETID = E_ED.SETID
          AND E5.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E5.SETID = F5.SETID
     AND E5.DEPTID = F5.DEPTID
     AND F5.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F5.SETID = F_ED.SETID
          AND F5.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A5.DEPTID =  G5.DEPTID (+)
     AND D5.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A5.COMPANY NOT BETWEEN '005' AND '999'
     AND A5.COMPANY NOT IN ('KAP','VEC')
     AND A5.GEX_SEASONAL_EMP = 'N'
     AND A5.JOBCODE <> '90000')
     AND J5.ACTION = A5.ACTION
     AND J5.ACTION_REASON = A5.ACTION_REASON
     AND J5.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J5.ACTION = J_ED.ACTION
          AND J5.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I5.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I5.EMPLID = I_ED.EMPLID
          AND I5.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A5.EFFDT)
    AND I5.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I5.EMPLID = I_ES.EMPLID
          AND I5.EMPL_RCD = I_ES.EMPL_RCD
          AND I5.EFFDT = I_ES.EFFDT)
     AND A5.EMPLID = I5.EMPLID
     AND A5.EMPL_RCD = I5.EMPL_RCD
     AND I5.EMPL_STATUS IN ('A','L','P','S') )
     
END-SELECT     

end-procedure


!**************************************************************************************************************************
!		calculation for business areas
!**************************************************************************************************************************
begin-procedure busarea
	string 'Turnover by Business Area'  by $delim into $busarea
	write 4 from $busarea
	write 4 from $next
	write 4 from $Report_title
	write 4 from $next
	string '' 'Active' 'Term' 'Total Turnover %' 'Involuntary %' 'Voluntary %' by $delim into $busarea 			!VENDKXY
	write 4 from $busarea
	!ISDVDZK Modified the code as per the itg 70135 START
	Let #act_grand_area = #act_busarea1+#act_busarea2+#act_busarea3+#act_busarea4+#act_busarea5+#act_busarea6+#act_busarea7+#act_busarea8+#act_busarea9+#act_busarea10				!VENDKXY
	Let #ter_grand_area = #ter_busarea1+#ter_busarea2+#ter_busarea3+#ter_busarea4+#ter_busarea5+#ter_busarea6+#ter_busarea7+#ter_busarea8+#ter_busarea9+#ter_busarea10				!VENDKXY
	!ISDVDZK Modified the code as per the itg 70135 END 
	Let #_busarea1_per = round(((#ter_busarea1/#act_busarea1)*100),0)
	Let #_busarea2_per = round(((#ter_busarea2/#act_busarea2)*100),0)
	Let #_busarea3_per = round(((#ter_busarea3/#act_busarea3)*100),0)
	Let #_busarea4_per = round(((#ter_busarea4/#act_busarea4)*100),0)
	Let #_busarea5_per = round(((#ter_busarea5/#act_busarea5)*100),0)
	!VENDKXY
	Let #_busarea6_per = round(((#ter_busarea6/#act_busarea6)*100),0)
	Let #_busarea7_per = round(((#ter_busarea7/#act_busarea7)*100),0)
	! VENDKXY Done the Changes for ITG 68183 on 10/09/2009 
	if #act_busarea8 <> 0  
	Let #_busarea8_per = round(((#ter_busarea8/#act_busarea8)*100),0)
	else 
	Let #_busarea8_per = 0 
	end-if
     !ISDVDZK Modified the code as per the itg 70135 START
     if #act_busarea9 <> 0  
	Let #_busarea9_per = round(((#ter_busarea9/#act_busarea9)*100),0)
	else 
	Let #_busarea9_per = 0 
	end-if
	if #act_busarea10 <> 0  
	Let #_busarea10_per = round(((#ter_busarea10/#act_busarea10)*100),0)
	else 
	Let #_busarea10_per = 0 
	end-if
     !ISDVDZK Modified the code as per the itg 70135 END	
	
	
	! VENDKXY Done the Changes for ITG 68183 on 10/09/2009 
	!VENDKXY
	Let #grand_per = round(((#ter_grand_area/#act_grand_area)*100),0)
	move #_busarea1_per to $_busarea1_per 9999
      	Let $_busarea1_per = $_busarea1_per||'%'
      	move #_busarea2_per to $_busarea2_per 9999
      	Let $_busarea2_per = $_busarea2_per||'%'
      	move #_busarea3_per to $_busarea3_per 9999
      	Let $_busarea3_per = $_busarea3_per||'%'
      	move #_busarea4_per to $_busarea4_per 9999
      	Let $_busarea4_per = $_busarea4_per||'%'
      	move #_busarea5_per to $_busarea5_per 9999
      	Let $_busarea5_per = $_busarea5_per||'%'
      	!VENDKXY
      	move #_busarea6_per to $_busarea6_per 9999
      	Let $_busarea6_per = $_busarea6_per||'%'
      	move #_busarea7_per to $_busarea7_per 9999
      	Let $_busarea7_per = $_busarea7_per||'%'
      	move #_busarea8_per to $_busarea8_per 9999
      	Let $_busarea8_per = $_busarea8_per||'%'
      	!ISDVDZK Modified the code as per the itg 70135 START
       	move #_busarea9_per to $_busarea9_per 9999
      	Let $_busarea9_per = $_busarea9_per||'%'
       	move #_busarea10_per to $_busarea10_per 9999
      	Let $_busarea10_per = $_busarea10_per||'%'	
      	!ISDVDZK Modified the code as per the itg 70135 END	
      	!VENDKXY
      	move #grand_per to $grand_per 9999
      	Let $grand_per = $grand_per||'%'
      	
      	
  !VENDKXY    	
  !ISDVDZK Modified the code as per the itg 70135 START
  Let #vol_grand_area = #vol_busarea1+#vol_busarea2+#vol_busarea3+#vol_busarea4+#vol_busarea5+#vol_busarea6+#vol_busarea7+#vol_busarea8+#vol_busarea9+#vol_busarea10	
  !ISDVDZK Modified the code as per the itg 70135 END 
	Let #vol_busarea1_per = round(((#vol_busarea1/#act_busarea1)*100),0)
	Let #vol_busarea2_per = round(((#vol_busarea2/#act_busarea2)*100),0)
	Let #vol_busarea3_per = round(((#vol_busarea3/#act_busarea3)*100),0)
	Let #vol_busarea4_per = round(((#vol_busarea4/#act_busarea4)*100),0)
	Let #vol_busarea5_per = round(((#vol_busarea5/#act_busarea5)*100),0)
	Let #vol_busarea6_per = round(((#vol_busarea6/#act_busarea6)*100),0)
	Let #vol_busarea7_per = round(((#vol_busarea7/#act_busarea7)*100),0)
	! VENDKXY Done the Changes for ITG 68183 on 10/09/2009 
	if #act_busarea8 <> 0
	Let #vol_busarea8_per = round(((#vol_busarea8/#act_busarea8)*100),0)
	else 
	Let #vol_busarea8_per = 0
	end-if
	!ISDVDZK Modified the code as per the itg 70135 Start
	if #act_busarea9 <> 0
	Let #vol_busarea9_per = round(((#vol_busarea9/#act_busarea9)*100),0)
	else 
	Let #vol_busarea9_per = 0
	end-if
	if #act_busarea10 <> 0
	Let #vol_busarea10_per = round(((#vol_busarea10/#act_busarea10)*100),0)
	else 
	Let #vol_busarea10_per = 0
	end-if
	!ISDVDZK Modified the code as per the itg 70135 END
	
	Let #vol_grand_per = round(((#vol_grand_area/#act_grand_area)*100),0)
	
				move #vol_busarea1_per to $vol_busarea1_per 9999
      	Let $vol_busarea1_per = $vol_busarea1_per||'%'
      	move #vol_busarea2_per to $vol_busarea2_per 9999
      	Let $vol_busarea2_per = $vol_busarea2_per||'%'
      	move #vol_busarea3_per to $vol_busarea3_per 9999
      	Let $vol_busarea3_per = $vol_busarea3_per||'%'
      	move #vol_busarea4_per to $vol_busarea4_per 9999
      	Let $vol_busarea4_per = $vol_busarea4_per||'%'
      	move #vol_busarea5_per to $vol_busarea5_per 9999
      	Let $vol_busarea5_per = $vol_busarea5_per||'%'
      	move #vol_busarea6_per to $vol_busarea6_per 9999
      	Let $vol_busarea6_per = $vol_busarea6_per||'%'
      	move #vol_busarea7_per to $vol_busarea7_per 9999
      	Let $vol_busarea7_per = $vol_busarea7_per||'%'
      	move #vol_busarea8_per to $vol_busarea8_per 9999
      	Let $vol_busarea8_per = $vol_busarea8_per||'%'
      	!ISDVDZK Modified the code as per the itg 70135 START
      	move #vol_busarea9_per to $vol_busarea9_per 9999
      	Let $vol_busarea9_per = $vol_busarea9_per||'%'
      	move #vol_busarea10_per to $vol_busarea10_per 9999
      	Let $vol_busarea10_per = $vol_busarea10_per||'%'
      	!ISDVDZK Modified the code as per the itg 70135 END 
      	move #vol_grand_per to $vol_grand_per 9999
      	Let $vol_grand_per = $vol_grand_per||'%'
 
     	
    	
  Let #invol_grand_area = #invol_busarea1+#invol_busarea2+#invol_busarea3+#invol_busarea4+#invol_busarea5+#invol_busarea6+#invol_busarea7+#invol_busarea8	
	Let #invol_busarea1_per = round(((#invol_busarea1/#act_busarea1)*100),0)
	Let #invol_busarea2_per = round(((#invol_busarea2/#act_busarea2)*100),0)
	Let #invol_busarea3_per = round(((#invol_busarea3/#act_busarea3)*100),0)
	Let #invol_busarea4_per = round(((#invol_busarea4/#act_busarea4)*100),0)
	Let #invol_busarea5_per = round(((#invol_busarea5/#act_busarea5)*100),0)
	Let #invol_busarea6_per = round(((#invol_busarea6/#act_busarea6)*100),0)
	Let #invol_busarea7_per = round(((#invol_busarea7/#act_busarea7)*100),0)
	! VENDKXY Done the Changes for ITG 68183 on 10/09/2009 
	if #act_busarea8 <> 0
	Let #invol_busarea8_per = round(((#invol_busarea8/#act_busarea8)*100),0)
	else
	Let #invol_busarea8_per = 0
	end-if
	!ISDVDZK Modified the code as per the itg 70135 Start
	if #act_busarea9 <> 0
	Let #invol_busarea9_per = round(((#invol_busarea9/#act_busarea9)*100),0)
	else
	Let #invol_busarea9_per = 0
	end-if
	If #act_busarea10 <> 0
	Let #invol_busarea10_per = round(((#invol_busarea10/#act_busarea10)*100),0)
	else
	Let #invol_busarea10_per = 0
	end-if
	!ISDVDZK Modified the code as per the itg 70135 End 
	
	Let #invol_grand_per = round(((#invol_grand_area/#act_grand_area)*100),0)
	
				move #invol_busarea1_per to $invol_busarea1_per 9999
      	Let $invol_busarea1_per = $invol_busarea1_per||'%'
      	move #invol_busarea2_per to $invol_busarea2_per 9999
      	Let $invol_busarea2_per = $invol_busarea2_per||'%'
      	move #invol_busarea3_per to $invol_busarea3_per 9999
      	Let $invol_busarea3_per = $invol_busarea3_per||'%'
      	move #invol_busarea4_per to $invol_busarea4_per 9999
      	Let $invol_busarea4_per = $invol_busarea4_per||'%'
      	move #invol_busarea5_per to $invol_busarea5_per 9999
      	Let $invol_busarea5_per = $invol_busarea5_per||'%'
       	move #invol_busarea6_per to $invol_busarea6_per 9999
      	Let $invol_busarea6_per = $invol_busarea6_per||'%'
      	move #invol_busarea7_per to $invol_busarea7_per 9999
      	Let $invol_busarea7_per = $invol_busarea7_per||'%'
      	move #invol_busarea8_per to $invol_busarea8_per 9999
      	Let $invol_busarea8_per = $invol_busarea8_per||'%'
      	!ISDVDZK Modified the code as per the itg 70135 START
        move #invol_busarea9_per to $invol_busarea9_per 9999
      	Let $invol_busarea9_per = $invol_busarea9_per||'%'
      	move #invol_busarea10_per to $invol_busarea10_per 9999
      	Let $invol_busarea10_per = $invol_busarea10_per||'%'
      	!ISDVDZK Modified the code as per the itg 70135 END 
      	move #invol_grand_per to $invol_grand_per 9999
      	Let $invol_grand_per = $invol_grand_per||'%'
   !VENDKXY       	      	
   
         	
      	move #act_busarea1 to $act_busarea1 999,999
      	move #act_busarea2 to $act_busarea2 999,999
      	move #act_busarea3 to $act_busarea3 999,999
      	move #act_busarea4 to $act_busarea4 999,999
      	move #act_busarea5 to $act_busarea5 999,999
      	!VENDKXY
      	move #act_busarea6 to $act_busarea6 999,999
      	move #act_busarea7 to $act_busarea7 999,999
      	move #act_busarea8 to $act_busarea8 999,999
      	!ISDVDZK Modified the code as per the itg 70135 Start
      	move #act_busarea9 to $act_busarea9 999,999
      	move #act_busarea10 to $act_busarea10 999,999 
      	!ISDVDZK Modified the code as per the itg 70135 End 
      	
      	!VENDKXY
      	move #ter_busarea1 to $ter_busarea1 999,999
      	move #ter_busarea2 to $ter_busarea2 999,999
      	move #ter_busarea3 to $ter_busarea3 999,999
      	move #ter_busarea4 to $ter_busarea4 999,999
      	move #ter_busarea5 to $ter_busarea5 999,999
      	!VENDKXY
      	move #ter_busarea6 to $ter_busarea6 999,999
      	move #ter_busarea7 to $ter_busarea7 999,999
      	move #ter_busarea8 to $ter_busarea8 999,999
      	!VENDKXY
      	!ISDVDZK Modified the code as per the itg 70135 START
      	move #ter_busarea9 to $ter_busarea9 999,999
      	move #ter_busarea10 to $ter_busarea10 999,999
      	!ISDVDZK Modified the code as per the itg 70135 END 
      	
      	move #act_grand_area to $act_grand_area 999,999
      	move #ter_grand_area to $ter_grand_area 999,999

  !VENDKXY      	
	string 'Corp Off' $act_busarea1 $ter_busarea1 $_busarea1_per $invol_busarea1_per $vol_busarea1_per by $delim into $busarea
	write 4 from $busarea
	string 'Supermarket' $act_busarea2 $ter_busarea2 $_busarea2_per $invol_busarea2_per $vol_busarea2_per by $delim into $busarea
	write 4 from $busarea
	string 'GetGo' $act_busarea3 $ter_busarea3 $_busarea3_per $invol_busarea3_per $vol_busarea3_per by $delim into $busarea
	write 4 from $busarea
	!string 'Pharmacy' $act_busarea4 $ter_busarea4 $_busarea5_per by $delim into $busarea	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes 
	string 'Pharmacy' $act_busarea4 $ter_busarea4 $_busarea4_per $invol_busarea4_per $vol_busarea4_per by $delim into $busarea    !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes  
	write 4 from $busarea
	string 'RSC' $act_busarea5 $ter_busarea5 $_busarea5_per $invol_busarea5_per $vol_busarea5_per by $delim into $busarea
	write 4 from $busarea
	string 'Market District' $act_busarea6 $ter_busarea6 $_busarea6_per $invol_busarea6_per $vol_busarea6_per by $delim into $busarea
	write 4 from $busarea
	string 'GEX' $act_busarea7 $ter_busarea7 $_busarea7_per $invol_busarea7_per $vol_busarea7_per by $delim into $busarea
	write 4 from $busarea
	string 'Valu King' $act_busarea8 $ter_busarea8 $_busarea8_per $invol_busarea8_per $vol_busarea8_per by $delim into $busarea
	write 4 from $busarea
	!ISDVDZK Modified the code as per the itg 70135 Start
	string 'Freedom Rd' $act_busarea9 $ter_busarea9 $_busarea9_per $invol_busarea9_per $vol_busarea9_per by $delim into $busarea
	write 4 from $busarea
	string 'Fresh Food Manu' $act_busarea10 $ter_busarea10 $_busarea10_per $invol_busarea10_per $vol_busarea10_per by $delim into $busarea
	write 4 from $busarea
	!ISDVDZK Modified the code as per the itg 70135 End
	string 'Grand Total' $act_grand_area $ter_grand_area $grand_per $invol_grand_per $vol_grand_per by $delim into $busarea
	write 4 from $busarea
	!VENDKXY      	
	
	
end-procedure



!**************************************************************************************************************************
!		GETGO (STANDALONE VS PADSITE)
!**************************************************************************************************************************
Begin-Procedure GETGO
	!SHOW 'GETGO'
	string 'GetGo Turnover - Pad & Standalone'  by $delim into $getgo
	write 5 from $getgo
	write 5 from $next
	write 5 from $Report_title
	write 5 from $next
	string 'Getgo' 'Active' 'Term' 'Total Turnover %' 'Involuntary %' 'Voluntary %' by $delim into $getgo !VENDKXY
	write 5 from $getgo
	Let #pad_per = round(((#ter_pad/#act_pad)*100),0)
	move #pad_per to $pad_per 9999
      	Let $pad_per = $pad_per||'%'
	Let #stand_per = round(((#ter_stand/#act_stand)*100),0)
	move #stand_per to $stand_per 9999
      	Let $stand_per = $stand_per||'%'
      	Let #act_Grand = #ACT_PAD+#act_stand
	Let #ter_Grand = #ter_pad+#ter_stand
	let #grand_per = round(((#ter_Grand/#act_Grand)*100),0)
	move #grand_per to $grand_per 9999
      	Let $grand_per = $grand_per||'%'
      	move #act_pad to $act_pad 999,999
      	move #act_stand to $act_stand 999,999
      	move #act_Grand to $act_Grand 999,999
      	move #ter_pad to $ter_pad 999,999
      	move #ter_stand to $ter_stand 999,999
      	move #ter_Grand to $ter_Grand 999,999
      	!VENDKXY
      	LET #VOL_PAD_PER = ROUND(((#VOL_ter_pad/#act_pad)*100),0)
      	LET #VOL_STAND_PER = ROUND(((#VOL_TER_STAND/#act_STAND)*100),0)
      	LET #INVOL_PAD_PER = ROUND(((#INVOL_ter_pad/#act_pad)*100),0)
      	LET #INVOL_STAND_PER = ROUND(((#INVOL_TER_STAND/#act_STAND)*100),0)
      	
      	move #VOL_PAD_PER to $VOL_PAD_PER 9999
      	Let $VOL_PAD_PER = $VOL_PAD_PER||'%'
      	move #VOL_stand_PER to $VOL_stand_PER 9999
      	Let $VOL_stand_PER = $VOL_stand_PER||'%'
      	move #invol_PAD_PER to $invol_PAD_PER 9999
      	Let $invol_PAD_PER = $invol_PAD_PER||'%'
      	move #invol_stand_PER to $invol_stand_PER 9999
      	Let $invol_stand_PER = $invol_stand_PER||'%'
      	
      	let #grand_pad_vol_invol = #VOL_ter_pad+#VOL_ter_stand
      	let #grand_stand_vol_invol = #inVOL_ter_pad+#inVOL_ter_stand
      	let #grand_pad_vol_invol_per = round(((#grand_pad_vol_invol/#act_grand)*100),0)
      	let #grand_stand_vol_invol_per = round(((#grand_stand_vol_invol/#act_grand)*100),0)
      	move #grand_pad_vol_invol_per to $grand_pad_vol_invol_per 9999
      	Let $grand_pad_vol_invol_per = $grand_pad_vol_invol_per||'%'
      	move #grand_stand_vol_invol_per to $grand_stand_vol_invol_per 9999
      	Let $grand_stand_vol_invol_per = $grand_stand_vol_invol_per||'%'
      	!vendkxy
      	
	      	
	string 'Pad Site' $act_pad $ter_pad $pad_per $VOL_PAD_PER $invol_PAD_PER by $delim into $getgo
	write 5 from $getgo
	string 'Standalone' $act_stand $ter_stand $stand_per $vol_stand_PER $invol_stand_PER by $delim into $getgo
	write 5 from $getgo
	string 'Grand Total' $act_Grand $ter_Grand $grand_per $grand_pad_vol_invol_per $grand_stand_vol_invol_per by $delim into $getgo
	write 5 from $getgo
	

End-Procedure

!***********************************************************************************
!procedure retaildeptact
!***********************************************************************************
begin-procedure retaildeptact
show 'retaildept actives started'
  lET #I = 1
  Let #kk = 1
begin-select
aaa.deptid
eee.descr
count(aaa.emplid) &COUNT_ACT
count(*) &count_dept
	let $retail_deptid=&aaa.deptid
	put $retail_deptid &eee.descr &count_act into retaildept(#i) deptid deptdescr act
	do retaildeptter
	do Get-Voluntary-retail-Terminates		!Vendkxy
	do Get-Involuntary-retail-Terminates		!Vendkxy
	Let #i = #i+1
	Let #kk=#kk+1
  
FROM PS_JOB AAA, PS_JOBCODE_TBL BBB, PS_PERSONAL_DATA CCC, PS_EMPLOYMENT DDD, PS_DEPT_TBL EEE, PS_GEX_DEPT_TBL FFF, PS_GEX_EVP_TBL GGG
  WHERE GGG.GEX_BUS_AREA = 'GE Retail'
    and aaa.acct_cd not in('008')
    and substr(aaa.paygroup,1,2) <> 'PH'
    AND ( AAA.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE AAA.EMPLID = A_ED.EMPLID
          AND AAA.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= $thru_date)
    AND AAA.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE AAA.EMPLID = A_ES.EMPLID
          AND AAA.EMPL_RCD = A_ES.EMPL_RCD
          AND AAA.EFFDT = A_ES.EFFDT)
     AND BBB.SETID = AAA.SETID_JOBCODE
     AND BBB.JOBCODE = AAA.JOBCODE
     AND BBB.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE BBB.SETID = B_ED.SETID
          AND BBB.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND AAA.EMPLID = CCC.EMPLID
     AND AAA.EMPLID = DDD.EMPLID
     AND AAA.EMPL_RCD = DDD.EMPL_RCD
     AND AAA.PAYGROUP = GGG.PAYGROUP
     AND AAA.ACCT_CD = GGG.ACCT_CD
     AND EEE.SETID = AAA.SETID_DEPT
     AND EEE.DEPTID = AAA.DEPTID
     AND EEE.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE EEE.SETID = E_ED.SETID
          AND EEE.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND EEE.SETID = FFF.SETID
     AND EEE.DEPTID = FFF.DEPTID
     AND FFF.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE FFF.SETID = F_ED.SETID
          AND FFF.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND AAA.DEPTID =  GGG.DEPTID (+)
     AND ( AAA.EMPL_STATUS IN ('A','L','P','S')
     AND AAA.COMPANY NOT BETWEEN '005' AND '999'
     AND AAA.COMPANY NOT IN ('KAP','VEC')
     AND AAA.JOBCODE <> '90000'
     AND AAA.GEX_SEASONAL_EMP = 'N') )
   group by AAA.deptid,eee.descr
     
end-select
show 'retaildept actives ended'
end-procedure


!***********************************************************************************
!procedure retaildeptter
!***********************************************************************************
begin-procedure retaildeptter
	Let $count_retailterms = 'False'
begin-select
aaaa.deptid
count(aaaa.emplid) &count_ter 
	Let $count_retailterms = 'True'
	put &count_ter into retaildept(#i) ter
		
FROM PS_JOB AAAA,PS_JOBCODE_TBL BBBB, PS_PERSONAL_DATA CCCC, PS_EMPLOYMENT DDDD, PS_DEPT_TBL EEEE, PS_GEX_DEPT_TBL FFFF, PS_GEX_EVP_TBL GGGG, PS_ACTN_REASON_TBL JJJJ, PS_JOB IIII
  WHERE aaaa.deptid=$retail_deptid
  and  GGGG.GEX_BUS_AREA = 'GE Retail'
   and substr(aaaa.paygroup,1,2) <> 'PH'
   and aaaa.acct_cd not in('008')
   AND ( ( AAAA.EFFDT >= $from_date
     AND AAAA.EFFDT <= $thru_date)
     AND AAAA.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND AAAA.ACTION_REASON NOT IN  ('SCH','SEA') ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND ((AAAA.ACTION_REASON NOT IN  ('SCH','SEA','DE2','DEA','RET')) OR (AAAA.ACTION = 'RET' AND AAAA.ACTION_REASON = 'RET')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND BBBB.SETID = AAAA.SETID_JOBCODE
     AND BBBB.JOBCODE = AAAA.JOBCODE
     AND BBBB.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE BBBB.SETID = B_ED.SETID
          AND BBBB.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND AAAA.EMPLID = CCCC.EMPLID
     AND AAAA.EMPLID = DDDD.EMPLID
     AND AAAA.EMPL_RCD = DDDD.EMPL_RCD
     AND AAAA.PAYGROUP = GGGG.PAYGROUP
     AND AAAA.ACCT_CD = GGGG.ACCT_CD
     AND EEEE.SETID = AAAA.SETID_DEPT
     AND EEEE.DEPTID = AAAA.DEPTID
     AND EEEE.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE EEEE.SETID = E_ED.SETID
          AND EEEE.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND EEEE.SETID = FFFF.SETID
     AND EEEE.DEPTID = FFFF.DEPTID
     AND FFFF.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE FFFF.SETID = F_ED.SETID
          AND FFFF.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND AAAA.DEPTID =  GGGG.DEPTID (+)
     AND DDDD.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( AAAA.COMPANY NOT BETWEEN '005' AND '999'
     AND AAAA.COMPANY NOT IN ('KAP','VEC')
     AND AAAA.GEX_SEASONAL_EMP = 'N'
     AND AAAA.JOBCODE <> '90000')
     AND JJJJ.ACTION = AAAA.ACTION
     AND JJJJ.ACTION_REASON = AAAA.ACTION_REASON
     AND JJJJ.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE JJJJ.ACTION = J_ED.ACTION
          AND JJJJ.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND IIII.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE IIII.EMPLID = I_ED.EMPLID
          AND IIII.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < AAAA.EFFDT)
    AND IIII.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE IIII.EMPLID = I_ES.EMPLID
          AND IIII.EMPL_RCD = I_ES.EMPL_RCD
          AND IIII.EFFDT = I_ES.EFFDT)
     AND AAAA.EMPLID = IIII.EMPLID
     AND AAAA.EMPL_RCD = IIII.EMPL_RCD
     AND IIII.EMPL_STATUS IN ('A','L','P','S') )
     GROUP BY AAAA.DEPTID
end-select
	if $count_retailterms = 'False'
	put 0 into retaildept(#i) ter
	end-if
end-procedure


!**************************************************************************************************************************
!		Get-Voluntary-retail-Terminates
!**************************************************************************************************************************
Begin-procedure Get-Voluntary-retail-Terminates
!show 'Get-Voluntary-Terminates retail started'
		Let $count_retailterms = 'False'
begin-SELECT
A4.DEPTID
count(*) &count_vol_ter 
	Let $count_retailterms = 'True'
	put &count_vol_ter into retaildept(#i) volter
FROM PS_JOB A4, PS_JOBCODE_TBL B4, PS_PERSONAL_DATA C4, PS_EMPLOYMENT D4, PS_DEPT_TBL E4, PS_GEX_DEPT_TBL F4, PS_GEX_EVP_TBL G4, PS_ACTN_REASON_TBL J4, PS_JOB I4
  WHERE a4.deptid=$retail_deptid
  and  G4.GEX_BUS_AREA = 'GE Retail'
     and ( ( A4.EFFDT >= $from_date
     AND A4.EFFDT <= $thru_date)
     AND A4.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA]   ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009   
     AND (([$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA]) AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'RET') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'DIS') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'ILA')  AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009  
     AND B4.SETID = A4.SETID_JOBCODE
     AND B4.JOBCODE = A4.JOBCODE
     AND B4.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B4.SETID = B_ED.SETID
          AND B4.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A4.EMPLID = C4.EMPLID
     AND A4.EMPLID = D4.EMPLID
     AND A4.EMPL_RCD = D4.EMPL_RCD
     AND A4.PAYGROUP = G4.PAYGROUP
     AND A4.ACCT_CD = G4.ACCT_CD
     AND E4.SETID = A4.SETID_DEPT
     AND E4.DEPTID = A4.DEPTID
     AND E4.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E4.SETID = E_ED.SETID
          AND E4.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E4.SETID = F4.SETID
     AND E4.DEPTID = F4.DEPTID
     AND F4.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F4.SETID = F_ED.SETID
          AND F4.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A4.DEPTID =  G4.DEPTID (+)
     AND D4.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A4.COMPANY NOT BETWEEN '005' AND '999'
     AND A4.COMPANY NOT IN ('KAP','VEC')
     AND A4.GEX_SEASONAL_EMP = 'N'
     AND A4.JOBCODE <> '90000')
     AND J4.ACTION = A4.ACTION
     AND J4.ACTION_REASON = A4.ACTION_REASON
     AND J4.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J4.ACTION = J_ED.ACTION
          AND J4.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I4.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I4.EMPLID = I_ED.EMPLID
          AND I4.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A4.EFFDT)
    AND I4.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I4.EMPLID = I_ES.EMPLID
          AND I4.EMPL_RCD = I_ES.EMPL_RCD
          AND I4.EFFDT = I_ES.EFFDT)
     AND A4.EMPLID = I4.EMPLID
     AND A4.EMPL_RCD = I4.EMPL_RCD
     AND I4.EMPL_STATUS IN ('A','L','P','S') )
     GROUP BY A4.DEPTID
END-SELECT     
	if $count_retailterms = 'False'
	put 0 into retaildept(#i) volter
	end-if
end-procedure

!**************************************************************************************************************************
!		Get-Involuntary-retail-Terminates
!**************************************************************************************************************************
Begin-procedure Get-Involuntary-retail-Terminates
!show 'Get-Involuntary-Terminates-retail started'
		Let $count_retailterms = 'False'
begin-SELECT
A5.DEPTID       
count(*) &count_invol_ter 
	Let $count_retailterms = 'True'
	put &count_invol_ter into retaildept(#i) involter
FROM PS_JOB A5, PS_JOBCODE_TBL B5, PS_PERSONAL_DATA C5, PS_EMPLOYMENT D5, PS_DEPT_TBL E5, PS_GEX_DEPT_TBL F5, PS_GEX_EVP_TBL G5, PS_ACTN_REASON_TBL J5, PS_JOB I5
  WHERE a5.deptid=$retail_deptid
  and  g5.GEX_BUS_AREA = 'GE Retail'
  and ( ( A5.EFFDT >= $from_date
     AND A5.EFFDT <= $thru_date)
     AND A5.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]  ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009 
     AND (([$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]) AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'DIS') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'ILA') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND B5.SETID = A5.SETID_JOBCODE
     AND B5.JOBCODE = A5.JOBCODE
     AND B5.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B5.SETID = B_ED.SETID
          AND B5.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A5.EMPLID = C5.EMPLID
     AND A5.EMPLID = D5.EMPLID
     AND A5.EMPL_RCD = D5.EMPL_RCD
     AND A5.PAYGROUP = G5.PAYGROUP
     AND A5.ACCT_CD = G5.ACCT_CD
     AND E5.SETID = A5.SETID_DEPT
     AND E5.DEPTID = A5.DEPTID
     AND E5.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E5.SETID = E_ED.SETID
          AND E5.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E5.SETID = F5.SETID
     AND E5.DEPTID = F5.DEPTID
     AND F5.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F5.SETID = F_ED.SETID
          AND F5.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A5.DEPTID =  G5.DEPTID (+)
     AND D5.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A5.COMPANY NOT BETWEEN '005' AND '999'
     AND A5.COMPANY NOT IN ('KAP','VEC')
     AND A5.GEX_SEASONAL_EMP = 'N'
     AND A5.JOBCODE <> '90000')
     AND J5.ACTION = A5.ACTION
     AND J5.ACTION_REASON = A5.ACTION_REASON
     AND J5.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J5.ACTION = J_ED.ACTION
          AND J5.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I5.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I5.EMPLID = I_ED.EMPLID
          AND I5.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A5.EFFDT)
    AND I5.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I5.EMPLID = I_ES.EMPLID
          AND I5.EMPL_RCD = I_ES.EMPL_RCD
          AND I5.EFFDT = I_ES.EFFDT)
     AND A5.EMPLID = I5.EMPLID
     AND A5.EMPL_RCD = I5.EMPL_RCD
     AND I5.EMPL_STATUS IN ('A','L','P','S') )
     GROUP BY A5.DEPTID
END-SELECT     
	if $count_retailterms = 'False'
	put 0 into retaildept(#i) involter
	end-if    

end-procedure


!**************************************************************************************************************************
!		Calculation of retail employees
!**************************************************************************************************************************
Begin-Procedure calcretail
	string 'Retail Turnover by Department' by $delim into $retail
	write 6 from $retail
	write 6 from $next
	write 6 from $Report_title
	write 6 from $next
	string 'Dept' 'Department Description' 'Active' 'Term' 'Total Turnover %' 'Involuntary %' 'Voluntary %' by $delim into $retail !vendkxy
	write 6 from $retail
	Let #i = 1
	while #i < #kk
	get $depart $departdescr #active #term #volter #involter from retaildept(#i)  !vendkxy
	if #active=0
	Let #Turnover = 0
	move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let $volturn = $Turnover||'%'
	Let $involturn = $Turnover||'%'
	else 
	Let #Turnover = round(((#term/#active)*100),0)
	move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let #volturn = round(((#volter/#active)*100),0)
	move #volturn to $volturn 9999
	Let $volturn = $volturn||'%'
	Let #involturn = round(((#involter/#active)*100),0)
	move #involturn to $involturn 9999
	Let $involturn = $involturn||'%'
	end-if
	Let #Grand_act = #Grand_act+#active
	Let #Grand_ter = #Grand_ter+#term
	let $depart = '="' || edit($depart,'0000') || '"'
	string $depart $departdescr #active #term $turnover $involturn $volturn by $delim into $retail !vendkxy
	write 6 from $retail
	add 1 to #i
	end-while
		
end-procedure


!**************************************************************************************************************************
!		Calculation of Length of Service and Time in position
!**************************************************************************************************************************
BEGIN-PROCEDURE CALCLOSANDTIMEINPOS
	ENCODE '<012>' INTO $NEXT
	string 'Turnover by Time in Position - Terms to Active Count' by $delim into $time
	write 7 from $time
	write 7 from $next
	write 7 from $Report_title
	write 7 from $next
	STRING 'Active:' #mdp_act by $delim into $time
	write 7 from $time
	write 7 from $next
	string '' '<1Yr' '1 to 3 yrs' '3+ to 7 yrs' '7+ to 10 yrs' '10+ yrs' by $delim into $time
	write 7 from $time
	string 'Total' #count_lessthan1 #count_lessthan3 #count_lessthan7 #count_lessthan10 #count_greaterthan10 #mdp_ter by $delim into $time
	write 7 from $time
	write 7 from $next
	!show #count_lessthan1 '###' #count_lessthan3 '###' #count_lessthan7 '###' #count_lessthan10 '###' #count_greaterthan10 '###' #mdp_ter
	Let #count_lessthan1_per = round(((#count_lessthan1/#mdp_act)*100),1)
	Let #count_lessthan3_per = round(((#count_lessthan3/#mdp_act)*100),1)
	Let #count_lessthan7_per = round(((#count_lessthan7/#mdp_act)*100),1)
	Let #count_lessthan10_per = round(((#count_lessthan10/#mdp_act)*100),1)
	Let #count_greaterthan10_per = round(((#count_greaterthan10/#mdp_act)*100),1)
	Let #mdp_grand_per = round(((#mdp_ter/#mdp_act)*100),1)
	move #count_lessthan1_per to $count_lessthan1_per 9999
	Let $count_lessthan1_per = $count_lessthan1_per||'%'
	move #count_lessthan3_per to $count_lessthan3_per 9999
	Let $count_lessthan3_per = $count_lessthan3_per||'%'
	move #count_lessthan7_per to $count_lessthan7_per 9999
	Let $count_lessthan7_per = $count_lessthan7_per||'%'
	move #count_lessthan10_per to $count_lessthan10_per 9999
	Let $count_lessthan10_per = $count_lessthan10_per||'%'
	move #count_greaterthan10_per to $count_greaterthan10_per 9999
	Let $count_greaterthan10_per = $count_greaterthan10_per||'%'
	move #mdp_grand_per to $mdp_grand_per 9999
	Let $mdp_grand_per = $mdp_grand_per||'%'
	string 'Turnover%' $count_lessthan1_per $count_lessthan3_per $count_lessthan7_per $count_lessthan10_per $count_greaterthan10_per $mdp_grand_per by $delim into $time
	write 7 from $time
	write 7 from $next
	string 'Turnover by Time in Position-Terms to Total Terms' by $delim into $time
	write 7 from $time
	write 7 from $next
	string '' '<1Yr' '1 to 3 yrs' '3+ to 7 yrs' '7+ to 10 yrs' '10+ yrs' by $delim into $time
	write 7 from $time
	string 'Total' #count_lessthan1 #count_lessthan3 #count_lessthan7 #count_lessthan10 #count_greaterthan10 #mdp_ter by $delim into $time
	write 7 from $time
	write 7 from $next
	Let #count_lessthan1_per_ter = round(((#count_lessthan1/#mdp_ter)*100),1)
	Let #count_lessthan3_per_ter = round(((#count_lessthan3/#mdp_ter)*100),1)
	Let #count_lessthan7_per_ter = round(((#count_lessthan7/#mdp_ter)*100),1)
	Let #count_lessthan10_per_ter = round(((#count_lessthan10/#mdp_ter)*100),1)
	Let #count_greaterthan10_per_ter = round(((#count_greaterthan10/#mdp_ter)*100),1)
	Let #mdp_grand_per_ter = round(((#mdp_ter/#mdp_ter)*100),1)
	move #count_lessthan1_per_ter to $count_lessthan1_per_ter 9999
	Let $count_lessthan1_per_ter = $count_lessthan1_per_ter||'%'
	move #count_lessthan3_per_ter to $count_lessthan3_per_ter 9999
	Let $count_lessthan3_per_ter = $count_lessthan3_per_ter||'%'
	move #count_lessthan7_per_ter to $count_lessthan7_per_ter 9999
	Let $count_lessthan7_per_ter = $count_lessthan7_per_ter||'%'
	move #count_lessthan10_per_ter to $count_lessthan10_per_ter 9999
	Let $count_lessthan10_per_ter = $count_lessthan10_per_ter||'%'
	move #count_greaterthan10_per_ter to $count_greaterthan10_per_ter 9999
	Let $count_greaterthan10_per_ter = $count_greaterthan10_per_ter||'%'
	move #mdp_grand_per_ter to $mdp_grand_per_ter 9999
	Let $mdp_grand_per_ter = $mdp_grand_per_ter||'%'
	string 'Turnover%' $count_lessthan1_per_ter $count_lessthan3_per_ter $count_lessthan7_per_ter $count_lessthan10_per_ter $count_greaterthan10_per_ter $mdp_grand_per_ter by $delim into $time
	write 7 from $time
	
	string 'Turnover by Length of Service - Terms to Active Count' by $delim into $loss
	write 8 from $loss
	write 8 from $next
	write 8 from $Report_title
	write 8 from $next
	STRING 'Active:' #mdp_act by $delim into $loss
	write 8 from $loss
	write 8 from $next
	string '' '0 to 3 mos' '3+ to 6 mos' '6+ to 9 mos' '9+ to 12 mos' '12+ mos' 'Grand Total'by $delim into $loss
	write 8 from $loss
	string 'Total' #count_lessthan3_los #count_lessthan6 #count_lessthan9 #count_lessthan12 #count_greaterthan12 #mdp_ter by $delim into $loss
	write 8 from $loss
	write 8 from $next
	Let #count_lessthan3_per_los = round(((#count_lessthan3_los/#mdp_act)*100),1)
	Let #count_lessthan6_per = round(((#count_lessthan6/#mdp_act)*100),1)
	Let #count_lessthan9_per = round(((#count_lessthan9/#mdp_act)*100),1)
	Let #count_lessthan12_per = round(((#count_lessthan12/#mdp_act)*100),1)
	Let #count_greaterthan12_per = round(((#count_greaterthan12/#mdp_act)*100),1)
	Let #mdp_grand_per_los = round(((#mdp_ter/#mdp_act)*100),1)
	move #count_lessthan3_per_los to $count_lessthan3_per_los 9999
	Let $count_lessthan3_per_los = $count_lessthan3_per_los||'%'
	move #count_lessthan6_per to $count_lessthan6_per 9999
	Let $count_lessthan6_per = $count_lessthan6_per||'%'
	move #count_lessthan9_per to $count_lessthan9_per 9999
	Let $count_lessthan9_per = $count_lessthan9_per||'%'
	move #count_lessthan12_per to $count_lessthan12_per 9999
	Let $count_lessthan12_per = $count_lessthan12_per||'%'
	move #count_greaterthan12_per to $count_greaterthan12_per 9999
	Let $count_greaterthan12_per = $count_greaterthan12_per||'%'
	move #mdp_grand_per_los to $mdp_grand_per_los 9999
	Let $mdp_grand_per_los = $mdp_grand_per_los||'%'
	string 'Turnover%' $count_lessthan3_per_los $count_lessthan6_per $count_lessthan9_per $count_lessthan12_per $count_greaterthan12_per $mdp_grand_per_los by $delim into $loss
	write 8 from $loss
	write 8 from $next
	!string  'Turnover by Time in Position-Terms to Total Terms' by $delim into $loss    !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes
	string  'Turnover by Length of Service-Terms to Total Terms' by $delim into $loss    !GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes
	write 8 from $loss
	write 8 from $next
	string '' '0 to 3 mos' '3+ to 6 mos' '6+ to 9 mos' '9+ to 12 mos' '12+ mos' 'Grand Total'by $delim into $loss
	write 8 from $loss
	string 'Total' #count_lessthan3_los #count_lessthan6 #count_lessthan9 #count_lessthan12 #count_greaterthan12 #mdp_ter by $delim into $loss
	write 8 from $loss
	write 8 from $next
	Let #count_lessthan3_per_ter_los = round(((#count_lessthan3_los/#mdp_ter)*100),1)
	Let #count_lessthan6_per_ter = round(((#count_lessthan6/#mdp_ter)*100),1)
	Let #count_lessthan9_per_ter = round(((#count_lessthan9/#mdp_ter)*100),1)
	Let #count_lessthan12_per_ter = round(((#count_lessthan12/#mdp_ter)*100),1)
	Let #count_greaterthan12_per_ter = round(((#count_greaterthan12/#mdp_ter)*100),1)
	Let #mdp_grand_per_ter_los = round(((#mdp_ter/#mdp_ter)*100),1)	
	move #count_lessthan3_per_ter_los to $count_lessthan3_per_ter_los 9999
	Let $count_lessthan3_per_ter_los = $count_lessthan3_per_ter_los||'%'
	move #count_lessthan6_per_ter to $count_lessthan6_per_ter 9999
	Let $count_lessthan6_per_ter = $count_lessthan6_per_ter||'%'
	move #count_lessthan9_per_ter to $count_lessthan9_per_ter 9999
	Let $count_lessthan9_per_ter = $count_lessthan9_per_ter||'%'
	move #count_lessthan12_per_ter to $count_lessthan12_per_ter 9999
	Let $count_lessthan12_per_ter = $count_lessthan12_per_ter||'%'
	move #count_greaterthan12_per_ter to $count_greaterthan12_per_ter 9999
	Let $count_greaterthan12_per_ter = $count_greaterthan12_per_ter||'%'
	move #mdp_grand_per_ter_los to $mdp_grand_per_ter_los 9999
	Let $mdp_grand_per_ter_los = $mdp_grand_per_ter_los||'%'
	string 'Turnover%' $count_lessthan3_per_ter_los $count_lessthan6_per_ter $count_lessthan9_per_ter $count_lessthan12_per_ter $count_greaterthan12_per_ter $mdp_grand_per_ter_los by $delim into $loss
	write 8 from $loss
	
	
END-PROCEDURE


!**************************************************************************************************************************
!		Calculation of mdp terms
!**************************************************************************************************************************
Begin-Procedure mdpterms

	string 'MDP - Count of Term Reasons' BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	write 9 from $NEXT
	WRITE 9 FROM $Report_title
	write 9 from $NEXT
	STRING 'Term Reason' 'Total' BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON 
	STRING '3 Unreported Absences' #TERM1 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	STRING 'Attendance' #TERM2 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	STRING 'Deceased' #TERM3 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin 
	string 'Did not pass evaluation' #term18 by $delim into $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End
	STRING 'Discharged Through Discipline' #TERM4 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin 
	string 'Dissatisfied w/Comp. Policies' #term17 by $delim into $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	string 'Dissatisfied w/Promotion Opps' #term22 by $delim into $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End
	STRING 'Dissatisfied w/Type of Work' #TERM5 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	STRING 'Dissatisfied with Location' #TERM6 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin
	string 'Dissatisfied with Supervision' #term21 by $delim into $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End
	STRING 'Failure to Return from Leave' #TERM7 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	STRING 'Family Reasons' #TERM8 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	STRING 'Other' #TERM9 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	STRING 'Personal Reasons' #TERM10 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	STRING 'Relocation' #TERM11 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	STRING 'Resignation' #TERM12 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	STRING 'Resignation-Other Position/Job' #TERM13 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	STRING 'Retirement' #TERM14 BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin 
	!STRING 'Voluntary Quit - No Reason' #TERM15 BY $DELIM INTO $MDP_TERMREASON
	string 'Retirement w/ Benefits and Pay' #term23 by $delim into $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	string 'Severance - Lump Sum' #term19 by $delim into $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End	
	WRITE 9 FROM $MDP_TERMREASON
	string 'Severance - Periodic Payments' #term16 by $delim into $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin 
	
	!string 'Dissatisfied w/Comp. Policies' #term17 by $delim into $MDP_TERMREASON
	!WRITE 9 FROM $MDP_TERMREASON
	!string 'Did not pass evaluation' #term18 by $delim into $MDP_TERMREASON
	!WRITE 9 FROM $MDP_TERMREASON
	!string 'Severance - Lump Sum' #term19 by $delim into $MDP_TERMREASON
	!WRITE 9 FROM $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End
	string 'Termination due to Layoff' #term20 by $delim into $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin 
	!string 'Dissatisfied with Supervision' #term21 by $delim into $MDP_TERMREASON
	STRING 'Voluntary Quit - No Reason' #TERM15 BY $DELIM INTO $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End
	WRITE 9 FROM $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - Begin
	!string 'Dissatisfied w/Promotion Opps' #term22 by $delim into $MDP_TERMREASON
	!WRITE 9 FROM $MDP_TERMREASON
	!string 'Retirement w/ Benefits and Pay' #term23 by $delim into $MDP_TERMREASON
	!WRITE 9 FROM $MDP_TERMREASON
	!GEX-TLL 04/14/2008 HCM 9.0 Upgrade changes - End
	string 'Grand Total' #mdp_ter BY $DELIM INTO $MDP_TERMREASON
	WRITE 9 FROM $MDP_TERMREASON

END-PROCEDURE

!***********************************************************************************
!procedure getgodeptact
!***********************************************************************************
begin-procedure getgodeptact
  lET #i = 1
  Let #m = 1
  
begin-select
C6.department
C6.GEX_COMPANY_DIV_CD
C5.descr
count(C6.department) &COUNT_getgoact
	Let $deptid1 = &C6.department
	if &C6.GEX_COMPANY_DIV_CD='CLE' OR &C6.GEX_COMPANY_DIV_CD='COL' OR &C6.GEX_COMPANY_DIV_CD='GEM' OR &C6.GEX_COMPANY_DIV_CD='GPH' OR  &C6.GEX_COMPANY_DIV_CD='RMC' OR  &C6.GEX_COMPANY_DIV_CD='RPH'
	Let $str='Pad Site'
	end-if
	if &C6.GEX_COMPANY_DIV_CD='GGO'
	Let $str='Standalone'
	end-if
	
	put &C6.department $str &count_getgoact &c5.descr into GETGOdept(#i) deptid divcd acti deptdescr
	do getgodeptter
	!vendkxy
	!do Get-Involuntary-getgo-Terminates  !vendkxy done changes for S3 #13098877
	do Get-voluntary-getgo-Terminates !vendkxy done changes for S3 #13098877
	do Get-Involuntary-getgo-Terminates
	Let #i = #i+1
	Let #m = #m+1
	
FROM PS_JOB c1, PS_JOBCODE_TBL c2, PS_PERSONAL_DATA c3, PS_EMPLOYMENT c4, PS_DEPT_TBL c5, PS_GEX_DEPT_TBL c6, PS_GEX_EVP_TBL c7 
  WHERE c7.GEX_BUS_AREA = 'GetGo'
  and ( c1.EFFDT =  
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE c1.EMPLID = A_ED.EMPLID 
          AND c1.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= $thru_date)        
    AND c1.EFFSEQ =                                                     
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES                      
        WHERE c1.EMPLID = A_ES.EMPLID                                   
          AND c1.EMPL_RCD = A_ES.EMPL_RCD                               
          AND c1.EFFDT = A_ES.EFFDT)                                    
     AND c2.SETID = c1.SETID_JOBCODE                                     
     AND c2.JOBCODE = c1.JOBCODE                                         
     AND c2.EFFDT =                                                     
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED               
        WHERE c2.SETID = B_ED.SETID          
          AND c2.JOBCODE = B_ED.JOBCODE      
          AND B_ED.EFFDT <= $AsOfDate)        
     AND c1.EMPLID = c3.EMPLID                
     AND c1.EMPLID = c4.EMPLID                
     AND c1.EMPL_RCD = c4.EMPL_RCD            
     AND c1.PAYGROUP = c7.PAYGROUP            
     AND c1.ACCT_CD = c7.ACCT_CD              
     AND c5.SETID = c1.SETID_DEPT                          
     AND c5.DEPTID = c1.DEPTID                             
     AND c5.EFFDT =                                       
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED    
        WHERE c5.SETID = E_ED.SETID                       
          AND c5.DEPTID = E_ED.DEPTID                     
          AND E_ED.EFFDT <= $AsOfDate)                     
     AND c5.SETID = c6.SETID                               
     AND c5.DEPTID = c6.DEPTID                             
     AND c6.EFFDT =                                       
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE c6.SETID = F_ED.SETID                          
          AND c6.DEPTID = F_ED.DEPTID                      
          AND F_ED.EFFDT <= $AsOfDate)
     AND c1.DEPTID =  c7.DEPTID (+)          
     AND ( c1.EMPL_STATUS IN ('A','L','P','S') 
     AND c1.COMPANY NOT BETWEEN '005' AND '999' 
     AND c1.COMPANY NOT IN ('KAP','VEC')         
     AND c1.JOBCODE <> '90000'      
     AND c1.GEX_SEASONAL_EMP = 'N') )    
     group by c6.department,c6.GEX_COMPANY_DIV_CD,c5.descr
     order by c6.department
end-select

end-procedure


!***********************************************************************************
!procedure Getgo departments terminates
!***********************************************************************************
begin-procedure getgodeptter
	Let $count_getgoterms = 'False'
begin-select
D6.department
count(D6.department) &count_getgoter
 	Let $count_getgoterms = 'True'
	put &count_getgoter into getgodept(#i) termi
		
FROM PS_JOB D1,  PS_JOBCODE_TBL D2, PS_PERSONAL_DATA D3, PS_EMPLOYMENT D4, PS_DEPT_TBL D5, PS_GEX_DEPT_TBL D6, PS_GEX_EVP_TBL D7, PS_ACTN_REASON_TBL D8, PS_JOB D9
  WHERE   d1.deptid=$deptid1
  and D7.GEX_BUS_AREA = 'GetGo'
    AND ( ( D1.EFFDT >= $from_date
     AND D1.EFFDT <= $thru_date)
     AND D1.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND D1.ACTION_REASON NOT IN  ('SCH','SEA') ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND ((D1.ACTION_REASON NOT IN  ('SCH','SEA','DE2','DEA','RET')) OR (D1.ACTION = 'RET' AND D1.ACTION_REASON = 'RET')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND D2.SETID = D1.SETID_JOBCODE
     AND D2.JOBCODE = D1.JOBCODE
     AND D2.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE D2.SETID = B_ED.SETID
          AND D2.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND D1.EMPLID = D3.EMPLID
     AND D1.EMPLID = D4.EMPLID
     AND D1.EMPL_RCD = D4.EMPL_RCD
     AND D1.PAYGROUP = D7.PAYGROUP
     AND D1.ACCT_CD = D7.ACCT_CD
     AND D5.SETID = D1.SETID_DEPT
     AND D5.DEPTID = D1.DEPTID
     AND D5.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE D5.SETID = E_ED.SETID
          AND D5.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND D5.SETID = D6.SETID
     AND D5.DEPTID = D6.DEPTID
     AND D6.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE D6.SETID = F_ED.SETID
          AND D6.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND D1.DEPTID =  D7.DEPTID (+)
     AND D4.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( D1.COMPANY NOT BETWEEN '005' AND '999'
     AND D1.COMPANY NOT IN ('KAP','VEC')
     AND D1.GEX_SEASONAL_EMP = 'N'
     AND D1.JOBCODE <> '90000')
     AND D8.ACTION = D1.ACTION
     AND D8.ACTION_REASON = D1.ACTION_REASON
     AND D8.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE D8.ACTION = J_ED.ACTION
          AND D8.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND D9.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE D9.EMPLID = I_ED.EMPLID
          AND D9.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < D1.EFFDT)
    AND D9.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE D9.EMPLID = I_ES.EMPLID
          AND D9.EMPL_RCD = I_ES.EMPL_RCD
          AND D9.EFFDT = I_ES.EFFDT)
     AND D1.EMPLID = D9.EMPLID
     AND D1.EMPL_RCD = D9.EMPL_RCD
     AND D9.EMPL_STATUS IN ('A','L','P','S') )
     GROUP BY D6.department
end-select
	if $count_getgoterms = 'False' 
	put 0 into getgodept(#i) termi
	end-if
end-procedure



!vendkxy
!**************************************************************************************************************************
!		Get-Voluntary-getgo-Terminates
!**************************************************************************************************************************
Begin-procedure Get-Voluntary-getgo-Terminates
!show 'Get-Voluntary-Terminates getgo started'
		Let $count_getgoterms = 'False'
begin-SELECT
F4.department
count(F4.department) &count_getgo_vol_ter 
	Let $count_getgoterms = 'True'
	put &count_getgo_vol_ter into getgodept(#i) volter
FROM PS_JOB A4, PS_JOBCODE_TBL B4, PS_PERSONAL_DATA C4, PS_EMPLOYMENT D4, PS_DEPT_TBL E4, PS_GEX_DEPT_TBL F4, PS_GEX_EVP_TBL G4, PS_ACTN_REASON_TBL J4, PS_JOB I4
  WHERE a4.deptid=$deptid1
  and  G4.GEX_BUS_AREA = 'GetGo'
     and ( ( A4.EFFDT >= $from_date
     AND A4.EFFDT <= $thru_date)
     AND A4.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA]  ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009   
     AND (([$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA]) AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'RET') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'DIS') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'ILA')  AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009  
     AND B4.SETID = A4.SETID_JOBCODE
     AND B4.JOBCODE = A4.JOBCODE
     AND B4.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B4.SETID = B_ED.SETID
          AND B4.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A4.EMPLID = C4.EMPLID
     AND A4.EMPLID = D4.EMPLID
     AND A4.EMPL_RCD = D4.EMPL_RCD
     AND A4.PAYGROUP = G4.PAYGROUP
     AND A4.ACCT_CD = G4.ACCT_CD
     AND E4.SETID = A4.SETID_DEPT
     AND E4.DEPTID = A4.DEPTID
     AND E4.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E4.SETID = E_ED.SETID
          AND E4.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E4.SETID = F4.SETID
     AND E4.DEPTID = F4.DEPTID
     AND F4.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F4.SETID = F_ED.SETID
          AND F4.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A4.DEPTID =  G4.DEPTID (+)
     AND D4.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A4.COMPANY NOT BETWEEN '005' AND '999'
     AND A4.COMPANY NOT IN ('KAP','VEC')
     AND A4.GEX_SEASONAL_EMP = 'N'
     AND A4.JOBCODE <> '90000')
     AND J4.ACTION = A4.ACTION
     AND J4.ACTION_REASON = A4.ACTION_REASON
     AND J4.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J4.ACTION = J_ED.ACTION
          AND J4.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I4.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I4.EMPLID = I_ED.EMPLID
          AND I4.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A4.EFFDT)
    AND I4.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I4.EMPLID = I_ES.EMPLID
          AND I4.EMPL_RCD = I_ES.EMPL_RCD
          AND I4.EFFDT = I_ES.EFFDT)
     AND A4.EMPLID = I4.EMPLID
     AND A4.EMPL_RCD = I4.EMPL_RCD
     AND I4.EMPL_STATUS IN ('A','L','P','S') )
     GROUP BY F4.department
END-SELECT     
	if $count_getgoterms = 'False'
	put 0 into getgodept(#i) volter
	end-if
end-procedure

!**************************************************************************************************************************
!		Get-Involuntary-getgo-Terminates
!**************************************************************************************************************************
Begin-procedure Get-Involuntary-getgo-Terminates
!show 'Get-Involuntary-Terminates-getgo started'
		Let $count_getgoterms = 'False'
begin-SELECT
F5.department       
count(F5.department) &count_getgo_invol_ter 
	Let $count_getgoterms = 'True'
	put &count_getgo_invol_ter  into getgodept(#i) involter
FROM PS_JOB A5, PS_JOBCODE_TBL B5, PS_PERSONAL_DATA C5, PS_EMPLOYMENT D5, PS_DEPT_TBL E5, PS_GEX_DEPT_TBL F5, PS_GEX_EVP_TBL G5, PS_ACTN_REASON_TBL J5, PS_JOB I5
  WHERE a5.deptid=$deptid1
  and  g5.GEX_BUS_AREA = 'GetGo'
  and ( ( A5.EFFDT >= $from_date
     AND A5.EFFDT <= $thru_date)
     AND A5.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]       ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009 
     AND (([$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]) AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'DIS') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'ILA') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND B5.SETID = A5.SETID_JOBCODE
     AND B5.JOBCODE = A5.JOBCODE
     AND B5.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B5.SETID = B_ED.SETID
          AND B5.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A5.EMPLID = C5.EMPLID
     AND A5.EMPLID = D5.EMPLID
     AND A5.EMPL_RCD = D5.EMPL_RCD
     AND A5.PAYGROUP = G5.PAYGROUP
     AND A5.ACCT_CD = G5.ACCT_CD
     AND E5.SETID = A5.SETID_DEPT
     AND E5.DEPTID = A5.DEPTID
     AND E5.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E5.SETID = E_ED.SETID
          AND E5.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E5.SETID = F5.SETID
     AND E5.DEPTID = F5.DEPTID
     AND F5.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F5.SETID = F_ED.SETID
          AND F5.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A5.DEPTID =  G5.DEPTID (+)
     AND D5.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A5.COMPANY NOT BETWEEN '005' AND '999'
     AND A5.COMPANY NOT IN ('KAP','VEC')
     AND A5.GEX_SEASONAL_EMP = 'N'
     AND A5.JOBCODE <> '90000')
     AND J5.ACTION = A5.ACTION
     AND J5.ACTION_REASON = A5.ACTION_REASON
     AND J5.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J5.ACTION = J_ED.ACTION
          AND J5.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I5.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I5.EMPLID = I_ED.EMPLID
          AND I5.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A5.EFFDT)
    AND I5.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I5.EMPLID = I_ES.EMPLID
          AND I5.EMPL_RCD = I_ES.EMPL_RCD
          AND I5.EFFDT = I_ES.EFFDT)
     AND A5.EMPLID = I5.EMPLID
     AND A5.EMPL_RCD = I5.EMPL_RCD
     AND I5.EMPL_STATUS IN ('A','L','P','S') )
     GROUP BY F5.department
END-SELECT     
	if $count_getgoterms = 'False'
	put 0 into getgodept(#i) involter
	end-if    

end-procedure

!vendkxy





!**************************************************************************************************************************
!		Calculation of GetGo targets
!**************************************************************************************************************************

Begin-Procedure getgotarget
	string 'GetGo Turnover by Department' by $delim into $gettar
	write 17 from $gettar
	write 17 from $NEXT
	write 17 from $Report_title
	write 17 from $NEXT
	string 'Deptid' ' Dept Description' 'Pad/SA' 'Active' 'Term' 'Total Turnover %' 'Involuntary %' 'Voluntary %'  ' ' 'Target' 'Target Total Turnover %' by $delim into $gettar	!Vendkxy
	Let #Grand_act=0
	Let #Grand_ter = 0
	Let #Turnover = 0
	Let #Turnover1 = 0
	Let #Grand_tar = 0
	write 17 from $gettar
	
	
	while Not #end-file
	read 13 into $getgotarget:20
	!show $getgotarget
	unstring  $getgotarget by ';' into $getgo $Target
	move $target to #target
	!show $getgo
	!show #target
	Let #j=1
	while #j<#m
	get $deptid $deptdescr $divcd #acti #termi #volter #involter from getgodept(#j) !vendkxy done changes for S3 #13098877
	
	if $getgo = $deptid
		
	if #acti=0
	Let #Turnover = 0
	move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	Let #Turnover1 = 0
	move #Turnover1 to $Turnover1 9999
	Let $Turnover1 = $Turnover1||'%'
	!vendkxy
	Let $volturn = $Turnover||'%'
	Let $involturn = $Turnover||'%'
	else
	Let #Turnover = round(((#termi/#acti)*100),0)
	move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	Let #Turnover1 = round(((#termi/#target)*100),0)
	move #Turnover1 to $Turnover1 9999
	Let $Turnover1 = $Turnover1||'%'
	!vendkxy
	!Let #volturn = round(((#volter/#active)*100),0)	!vendkxy done changes for S3 #13098877
	Let #volturn = round(((#volter/#acti)*100),0)	!vendkxy done changes for S3 #13098877
	move #volturn to $volturn 9999
	Let $volturn = $volturn||'%'
	!Let #involturn = round(((#involter/#active)*100),0) !vendkxy done changes for S3 #13098877
	Let #involturn = round(((#involter/#acti)*100),0) !vendkxy done changes for S3 #13098877
	move #involturn to $involturn 9999
	Let $involturn = $involturn||'%'
	end-if
	string $getgo $deptdescr $divcd #acti #termi $Turnover $involturn $volturn ' '  #target $Turnover1 by $delim into $gettar
	write 17 from $gettar
	Let #Grand_act = #Grand_act+#acti
	Let #Grand_ter = #Grand_ter+#termi
	Let #Grand_tar = #Grand_tar+#target
	Let #j=1
	Let $get='found'
	Break
	end-if
	
	add 1 to #j
	
	end-while
	
	if $get <> 'found'
	string $getgo ' ' ' ' 0 0 0 0 0 ' ' #target 0 by $delim into $gettar
	write 17 from $gettar
	end-if
	end-while
	
	close 17
end-procedure


!**************************************************************************************************************************
!		Calculation of Rsc targets
!**************************************************************************************************************************
Begin-Procedure rsctarget
	string 'RSC Turnover - Annual and Target' by $delim into $rsctar
	write 11 from $rsctar
	write 11 from $next
	write 11 from $Report_title
	write 11 from $next
	string 'RSC Area' 'Active' 'Term' 'Total Turnover %' 'Involuntary %' 'Voluntary %' ' ' 'Target' 'TargetTotal Turnover %' by $delim into $rsctar  !vendkxy
	write 11 from $rsctar
	!Let #j=0
	let  #end-file = 0
	 
	!show ' #end-file = ' #end-file
	while Not #end-file
	!show 'j=' #j
	read 10 into $rsctarget:15
	!show $rsctarget
	unstring  $rsctarget by ';' into $rsc $target
	move $target to #target
	!show $rsc
	!show #target
	if #end-file
	Break
	end-if
	IF ($rsc='ASF NU')
	Let #rsc_grand = round(((#asfnu_ter/#asfnu_act)*100),0)
	Let #TargetTO = round(((#asfnu_ter/#target)*100),0)
	move #rsc_grand to $rsc_grand 9999
	Let $rsc_grand = $rsc_grand||'%'
	move #TargetTO to $TargetTO 9999
	Let $TargetTO = $TargetTO||'%'
	Let #rsc_grand_vol = round(((#asfnu_ter_vol/#asfnu_act)*100),0)
	move #rsc_grand_vol to $rsc_grand_vol 9999
	Let $rsc_grand_vol = $rsc_grand_vol||'%'
	Let #rsc_grand_invol = round(((#asfnu_ter_invol/#asfnu_act)*100),0)
	move #rsc_grand_invol to $rsc_grand_invol 9999
	Let $rsc_grand_invol = $rsc_grand_invol||'%'
	string $rsc #asfnu_act #asfnu_ter $rsc_grand  $rsc_grand_invol $rsc_grand_vol ' ' #target $TargetTO by $delim into $rsctar
	write 11 from $rsctar
	END-IF
	IF ($rsc='ASF UNION')
	Let #rsc_grand = round(((#asfu_ter/#asfu_act)*100),0)
	Let #TargetTO = round(((#asfu_ter/#target)*100),0)
	move #rsc_grand to $rsc_grand 9999
	Let $rsc_grand = $rsc_grand||'%'
	move #TargetTO to $TargetTO 9999
	Let $TargetTO = $TargetTO||'%'
	Let #rsc_grand_vol = round(((#asfu_ter_vol/#asfu_act)*100),0)
	move #rsc_grand_vol to $rsc_grand_vol 9999
	Let $rsc_grand_vol = $rsc_grand_vol||'%'
	Let #rsc_grand_invol = round(((#asfu_ter_invol/#asfu_act)*100),0)
	move #rsc_grand_invol to $rsc_grand_invol 9999
	Let $rsc_grand_invol = $rsc_grand_invol||'%'
	string $rsc #asfu_act #asfu_ter $rsc_grand $rsc_grand_invol $rsc_grand_vol ' ' #target $TargetTO by $delim into $rsctar
	write 11 from $rsctar
	END-IF
	IF ($rsc='BRM NU')
	Let #rsc_grand = round(((#brmnu_ter/#brmnu_act)*100),0)
	Let #TargetTO = round(((#brmnu_ter/#target)*100),0)
	move #rsc_grand to $rsc_grand 9999
	Let $rsc_grand = $rsc_grand||'%'
	move #TargetTO to $TargetTO 9999
	Let $TargetTO = $TargetTO||'%'
	Let #rsc_grand_vol = round(((#brmnu_ter_vol/#brmnu_act)*100),0)
	move #rsc_grand_vol to $rsc_grand_vol 9999
	Let $rsc_grand_vol = $rsc_grand_vol||'%'
	Let #rsc_grand_invol = round(((#brmnu_ter_invol/#brmnu_act)*100),0)
	move #rsc_grand_invol to $rsc_grand_invol 9999
	Let $rsc_grand_invol = $rsc_grand_invol||'%'
	string $rsc #brmnu_act #brmnu_ter $rsc_grand $rsc_grand_invol $rsc_grand_vol ' ' #target $TargetTO by $delim into $rsctar
	write 11 from $rsctar
	END-IF
	IF ($rsc='BRM UNION')
	Let #rsc_grand = round(((#brmu_ter/#brmu_act)*100),0)
	Let #TargetTO = round(((#brmu_ter/#target)*100),0)
	move #rsc_grand to $rsc_grand 9999
	Let $rsc_grand = $rsc_grand||'%'
	move #TargetTO to $TargetTO 9999
	Let $TargetTO = $TargetTO||'%'
	Let #rsc_grand_vol = round(((#brmu_ter_vol/#brmu_act)*100),0)
	move #rsc_grand_vol to $rsc_grand_vol 9999
	Let $rsc_grand_vol = $rsc_grand_vol||'%'
	Let #rsc_grand_invol = round(((#brmu_ter_invol/#brmu_act)*100),0)
	move #rsc_grand_invol to $rsc_grand_invol 9999
	Let $rsc_grand_invol = $rsc_grand_invol||'%'
	string $rsc #brmu_act #brmu_ter $rsc_grand $rsc_grand_invol $rsc_grand_vol ' ' #target $TargetTO by $delim into $rsctar
	write 11 from $rsctar
	END-IF
	IF ($rsc='CORP LOGIST')
	Let #rsc_grand = round(((#corp_ter/#corp_act)*100),0)
	Let #TargetTO = round(((#corp_ter/#target)*100),0)
	move #rsc_grand to $rsc_grand 9999
	Let $rsc_grand = $rsc_grand||'%'
	move #TargetTO to $TargetTO 9999
	Let $TargetTO = $TargetTO||'%'
	Let #rsc_grand_vol = round(((#corp_ter_vol/#corp_act)*100),0)
	move #rsc_grand_vol to $rsc_grand_vol 9999
	Let $rsc_grand_vol = $rsc_grand_vol||'%'
	Let #rsc_grand_invol = round(((#corp_ter_invol/#corp_act)*100),0)
	move #rsc_grand_invol to $rsc_grand_invol 9999
	Let $rsc_grand_invol = $rsc_grand_invol||'%'
	string $rsc #corp_act #corp_ter $rsc_grand $rsc_grand_invol $rsc_grand_vol ' ' #target $TargetTO by $delim into $rsctar
	write 11 from $rsctar
	END-IF
	IF ($rsc='HBC NU')
	Let #rsc_grand = round(((#hbcnu_ter/#hbcnu_act)*100),0)
	Let #TargetTO = round(((#hbcnu_ter/#target)*100),0)
	move #rsc_grand to $rsc_grand 9999
	Let $rsc_grand = $rsc_grand||'%'
	move #TargetTO to $TargetTO 9999
	Let $TargetTO = $TargetTO||'%'
	Let #rsc_grand_vol = round(((#hbcnu_ter_vol/#hbcnu_act)*100),0)
	move #rsc_grand_vol to $rsc_grand_vol 9999
	Let $rsc_grand_vol = $rsc_grand_vol||'%'
	Let #rsc_grand_invol = round(((#hbcnu_ter_invol/#hbcnu_act)*100),0)
	move #rsc_grand_invol to $rsc_grand_invol 9999
	Let $rsc_grand_invol = $rsc_grand_invol||'%'
	string $rsc #hbcnu_act #hbcnu_ter $rsc_grand $rsc_grand_invol $rsc_grand_vol ' ' #target $TargetTO by $delim into $rsctar
	write 11 from $rsctar
	END-IF
	IF ($rsc='HBC UNION')
	Let #rsc_grand = round(((#hbcu_ter/#hbcu_act)*100),0)
	Let #TargetTO = round(((#hbcu_ter/#target)*100),0)
	move #rsc_grand to $rsc_grand 9999
	Let $rsc_grand = $rsc_grand||'%'
	move #TargetTO to $TargetTO 9999
	Let $TargetTO = $TargetTO||'%'
	Let #rsc_grand_vol = round(((#hbcu_ter_vol/#hbcu_act)*100),0)
	move #rsc_grand_vol to $rsc_grand_vol 9999
	Let $rsc_grand_vol = $rsc_grand_vol||'%'
	Let #rsc_grand_invol = round(((#hbcu_ter_invol/#hbcu_act)*100),0)
	move #rsc_grand_invol to $rsc_grand_invol 9999
	Let $rsc_grand_invol = $rsc_grand_invol||'%'
	string $rsc #hbcu_act #hbcu_ter $rsc_grand $rsc_grand_invol $rsc_grand_vol ' ' #target $TargetTO by $delim into $rsctar
	write 11 from $rsctar
	END-IF
	IF ($rsc='NON BANNER')
	Let #rsc_grand = round(((#nonnu_ter/#nonnu_act)*100),0)
	Let #TargetTO = round(((#nonnu_ter/#target)*100),0)
	move #rsc_grand to $rsc_grand 9999
	Let $rsc_grand = $rsc_grand||'%'
	move #TargetTO to $TargetTO 9999
	Let $TargetTO = $TargetTO||'%'
	Let #rsc_grand_vol = round(((#nonnu_ter_vol/#nonnu_act)*100),0)
	move #rsc_grand_vol to $rsc_grand_vol 9999
	Let $rsc_grand_vol = $rsc_grand_vol||'%'
	Let #rsc_grand_invol = round(((#nonnu_ter_invol/#nonnu_act)*100),0)
	move #rsc_grand_invol to $rsc_grand_invol 9999
	Let $rsc_grand_invol = $rsc_grand_invol||'%'
	string $rsc #nonnu_act #nonnu_ter $rsc_grand $rsc_grand_invol $rsc_grand_vol ' ' #target $TargetTO by $delim into $rsctar
	write 11 from $rsctar
	END-IF
	IF ($rsc='OKG NU')
	Let #rsc_grand = round(((#okgnu_ter/#okgnu_act)*100),0)
	Let #TargetTO = round(((#okgnu_ter/#target)*100),0)
	move #rsc_grand to $rsc_grand 9999
	Let $rsc_grand = $rsc_grand||'%'
	move #TargetTO to $TargetTO 9999
	Let $TargetTO = $TargetTO||'%'
	Let #rsc_grand_vol = round(((#okgnu_ter_vol/#okgnu_act)*100),0)
	move #rsc_grand_vol to $rsc_grand_vol 9999
	Let $rsc_grand_vol = $rsc_grand_vol||'%'
	Let #rsc_grand_invol = round(((#okgnu_ter_invol/#okgnu_act)*100),0)
	move #rsc_grand_invol to $rsc_grand_invol 9999
	Let $rsc_grand_invol = $rsc_grand_invol||'%'
	string $rsc #okgnu_act #okgnu_ter $rsc_grand $rsc_grand_invol $rsc_grand_vol ' ' #target $TargetTO by $delim into $rsctar
	write 11 from $rsctar
	END-IF
	IF ($rsc='OKG UNION')
	Let #rsc_grand = round(((#okgu_ter/#okgu_act)*100),0)
	Let #TargetTO = round(((#okgu_ter/#target)*100),0)
	move #rsc_grand to $rsc_grand 9999
	Let $rsc_grand = $rsc_grand||'%'
	move #TargetTO to $TargetTO 9999
	Let $TargetTO = $TargetTO||'%'
	Let #rsc_grand_vol = round(((#okgu_ter_vol/#okgu_act)*100),0)
	move #rsc_grand_vol to $rsc_grand_vol 9999
	Let $rsc_grand_vol = $rsc_grand_vol||'%'
	Let #rsc_grand_invol = round(((#okgu_ter_invol/#okgu_act)*100),0)
	move #rsc_grand_invol to $rsc_grand_invol 9999
	Let $rsc_grand_invol = $rsc_grand_invol||'%'
	string $rsc #okgu_act #okgu_ter $rsc_grand $rsc_grand_invol $rsc_grand_vol ' ' #target $TargetTO by $delim into $rsctar
	write 11 from $rsctar
	END-IF
	IF ($rsc='SUPPLY CHAIN')
	Let #rsc_grand = round(((#supnu_ter/#supnu_act)*100),0)
	Let #TargetTO = round(((#supnu_ter/#target)*100),0)
	move #rsc_grand to $rsc_grand 9999
	Let $rsc_grand = $rsc_grand||'%'
	move #TargetTO to $TargetTO 9999
	Let $TargetTO = $TargetTO||'%'
	Let #rsc_grand_vol = round(((#supnu_ter_vol/#supnu_act)*100),0)
	move #rsc_grand_vol to $rsc_grand_vol 9999
	Let $rsc_grand_vol = $rsc_grand_vol||'%'
	Let #rsc_grand_invol = round(((#supnu_ter_invol/#supnu_act)*100),0)
	move #rsc_grand_invol to $rsc_grand_invol 9999
	Let $rsc_grand_invol = $rsc_grand_invol||'%'
	string $rsc #supnu_act #supnu_ter $rsc_grand $rsc_grand_invol $rsc_grand_vol ' ' #target $TargetTO by $delim into $rsctar
	write 11 from $rsctar
	END-IF
	IF ($rsc='TMK NU')
	Let #rsc_grand = round(((#tmknu_ter/#tmknu_act)*100),0)
	Let #TargetTO = round(((#tmknu_ter/#target)*100),0)
	move #rsc_grand to $rsc_grand 9999
	Let $rsc_grand = $rsc_grand||'%'
	move #TargetTO to $TargetTO 9999
	Let $TargetTO = $TargetTO||'%'
	Let #rsc_grand_vol = round(((#tmknu_ter_vol/#tmknu_act)*100),0)
	move #rsc_grand_vol to $rsc_grand_vol 9999
	Let $rsc_grand_vol = $rsc_grand_vol||'%'
	Let #rsc_grand_invol = round(((#tmknu_ter_invol/#tmknu_act)*100),0)
	move #rsc_grand_invol to $rsc_grand_invol 9999
	Let $rsc_grand_invol = $rsc_grand_invol||'%'
	string $rsc #tmknu_act #tmknu_ter $rsc_grand $rsc_grand_invol $rsc_grand_vol ' ' #target $TargetTO by $delim into $rsctar
	write 11 from $rsctar
	END-IF
	IF ($rsc='TMK UNION')
	Let #rsc_grand = round(((#tmku_ter/#tmku_act)*100),0)
	Let #TargetTO = round(((#tmku_ter/#target)*100),0)
	move #rsc_grand to $rsc_grand 9999
	Let $rsc_grand = $rsc_grand||'%'
	move #TargetTO to $TargetTO 9999
	Let $TargetTO = $TargetTO||'%'
	Let #rsc_grand_vol = round(((#tmku_ter_vol/#tmku_act)*100),0)
	move #rsc_grand_vol to $rsc_grand_vol 9999
	Let $rsc_grand_vol = $rsc_grand_vol||'%'
	Let #rsc_grand_invol = round(((#tmku_ter_invol/#tmku_act)*100),0)
	move #rsc_grand_invol to $rsc_grand_invol 9999
	Let $rsc_grand_invol = $rsc_grand_invol||'%'
	string $rsc #tmku_act #tmku_ter $rsc_grand $rsc_grand_invol $rsc_grand_vol ' ' #target $TargetTO by $delim into $rsctar
	write 11 from $rsctar
	END-IF
	Let #target_grand = #target_grand+#target
	Let #j = #j+1
	end-while
	Let #rsc_grand_act =#asfnu_act+#asfu_act+#brmnu_act+#brmu_act+#hbcnu_act+#hbcu_act+#okgnu_act+#okgu_act+#tmknu_act+#tmku_act+#corp_act+#nonnu_act+#supnu_act
	Let #rsc_grand_ter =#asfnu_ter+#asfu_ter+#brmnu_ter+#brmu_ter+#hbcnu_ter+#hbcu_ter+#okgnu_ter+#okgu_ter+#tmknu_ter+#tmku_ter+#corp_ter+#nonnu_ter+#supnu_ter
	Let #rsc_grand_ter_vol =#asfnu_ter_vol+#asfu_ter_vol+#brmnu_ter_vol+#brmu_ter_vol+#hbcnu_ter_vol+#hbcu_ter_vol+#okgnu_ter_vol+#okgu_ter_vol+#tmknu_ter_vol+#tmku_ter_vol+#corp_ter_vol+#nonnu_ter_vol+#supnu_ter_vol
	Let #rsc_grand_ter_invol =#asfnu_ter_invol+#asfu_ter_invol+#brmnu_ter_invol+#brmu_ter_invol+#hbcnu_ter_invol+#hbcu_ter_invol+#okgnu_ter_invol+#okgu_ter_invol+#tmknu_ter_invol+#tmku_ter_invol+#corp_ter_invol+#nonnu_ter_invol+#supnu_ter_invol
	Let #rsc_grand_per = round(((#rsc_grand_ter/#rsc_grand_act)*100),0)
	Let #rsc_grand_per_vol = round(((#rsc_grand_ter_vol/#rsc_grand_act)*100),0)
	Let #rsc_grand_per_invol = round(((#rsc_grand_ter_invol/#rsc_grand_act)*100),0)
	move #rsc_grand_per_vol to $rsc_grand_per_vol 9999
	Let $rsc_grand_per_vol = $rsc_grand_per_vol||'%'
	move #rsc_grand_per_invol to $rsc_grand_per_invol 9999
	Let $rsc_grand_per_invol = $rsc_grand_per_invol||'%'
	Let #rsc_target_per = round(((#rsc_grand_ter/#target_grand)*100),0)
	move #rsc_grand_per to $rsc_grand_per 9999
	Let $rsc_grand_per = $rsc_grand_per||'%'
	move #rsc_target_per to $rsc_target_per 9999
	Let $rsc_target_per = $rsc_target_per||'%'
	move #rsc_grand_act to $rsc_grand_act 999,999
	move #rsc_grand_ter to $rsc_grand_ter 999,999
	move #target_grand to $target_grand 999,999
	string 'Grand Total' $rsc_grand_act  $rsc_grand_ter $rsc_grand_per $rsc_grand_per_invol $rsc_grand_per_vol ' ' $target_grand $rsc_target_per by $delim into $rsctar
	write 11 from $rsctar
	close 10
End-Procedure


!**************************************************************************************************************************
!		Selection of MDP by Job Title with terms reasons
!**************************************************************************************************************************
Begin-Procedure mdpjobtitle
	Let #k=1
begin-select 
Y.DESCR 
Q.DESCR 
count(Q.DESCR) &cnt_term

	put &Y.DESCR &Q.DESCR &cnt_term into mdp(#k) tit termrsn cnt
		Let #k = #k+1

FROM PS_JOB X, PS_JOBCODE_TBL Y, PS_PERSONAL_DATA Z, PS_EMPLOYMENT M, PS_DEPT_TBL N, PS_GEX_DEPT_TBL O, PS_GEX_EVP_TBL P, PS_ACTN_REASON_TBL Q, PS_JOB R
  WHERE X.jobcode in('10007', '10010', '10012', '10013',  '10015', '10018', '10021', '10023', '10027', '10028', '10029',
    			 '10031', '10046', '60004', '60013', '70004',
    			 '70013', '70017', '70029', '70031', '80012', '80017', '80019', '80025', '80044', '80045', '80066', '80069')
     AND ( ( X.EFFDT >= $from_date
     AND X.EFFDT <= $thru_date)
     AND X.ACTION IN ('RET','RWP','TER','TWB','TWP') 
     !AND X.ACTION_REASON NOT IN  ('SCH','SEA')
     ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND ((X.ACTION_REASON NOT IN  ('SCH','SEA','DE2','DEA','RET')) OR (X.ACTION = 'RET' AND X.ACTION_REASON = 'RET')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND Y.SETID = X.SETID_JOBCODE
     AND Y.JOBCODE = X.JOBCODE
     AND Y.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE Y.SETID = B_ED.SETID
          AND Y.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND X.EMPLID = Z.EMPLID
     AND X.EMPLID = M.EMPLID
     AND X.EMPL_RCD = M.EMPL_RCD
     AND X.PAYGROUP = P.PAYGROUP
     AND X.ACCT_CD = P.ACCT_CD
     AND N.SETID = X.SETID_DEPT
     AND N.DEPTID = X.DEPTID
     AND N.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE N.SETID = E_ED.SETID
          AND N.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND N.SETID = O.SETID
     AND N.DEPTID = O.DEPTID
     AND O.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE O.SETID = F_ED.SETID
          AND O.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND X.DEPTID =  P.DEPTID (+)
     AND M.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( X.COMPANY NOT BETWEEN '005' AND '999'
     AND X.COMPANY NOT IN ('KAP','VEC')
     AND X.GEX_SEASONAL_EMP = 'N'
     AND X.JOBCODE <> '90000')
     AND Q.ACTION = X.ACTION
     AND Q.ACTION_REASON = X.ACTION_REASON
     AND Q.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE Q.ACTION = J_ED.ACTION
          AND Q.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND R.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE R.EMPLID = I_ED.EMPLID
          AND R.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < X.EFFDT)
    AND R.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE R.EMPLID = I_ES.EMPLID
          AND R.EMPL_RCD = I_ES.EMPL_RCD
          AND R.EFFDT = I_ES.EFFDT)
     AND X.EMPLID = R.EMPLID
     AND X.EMPL_RCD = R.EMPL_RCD
     AND R.EMPL_STATUS IN ('A','L','P','S') )
     group by Y.DESCR,Q.DESCR 
        order by Y.DESCR
end-select
End-Procedure



!***********************************************************************************
!	Calculation of MDP Terms By job Title
!***********************************************************************************
begin-procedure calcmdptitle
	encode '<009>' into $delim
	string 'MDP Terminations by Position and Reason' by $delim into $mdptitle
	write 12 from $mdptitle
	write 12 from $next
	write 12 from $Report_title
	write 12 from $next
	string 'Job Title' 'Descr' 'Total' by $delim into $mdptitle
	write 12 from $mdptitle
	Let #j=1
	Let #x=1
	Let $prev = 'job'
	While #j <= #k
	get $jobtitle $termrsn #count_ter from mdp(#j)
	Let $curr = $jobtitle
	Let $title_job = $prev||' Total'
		if ($curr <> $prev and $prev <> 'job')
		string $title_job ' ' #count_title by $delim into $mdptitle
		write 12 from $mdptitle
		Let #x=1
		Let #count_title =0
		end-if
		if ($jobtitle = 'Associate Manager (AM), Get Go')
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Bakery Department Head')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Bakery Manager')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Co-Manager, Front End')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Co-Manager, Grocery')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Co-Manager, Store')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Dairy Department Head')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Deli Department Head')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		
		if ($jobtitle = 'Deli Manager')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Floral Department Head')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Floral Manager')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Frozen Food Dept. Head')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'General Manager (GM), Get Go')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Grocery Department Head')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Head Cashier')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Meat Department Head')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Meat Manager')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Night Crew Dept. Head')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Night Crew Manager')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Prepared Foods Dept Head')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Prepared Foods Manager')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Produce Department Head')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		
		if ($jobtitle = 'Produce Manager')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Seafood Department Head')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		if ($jobtitle = 'Seafood Manager')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
		
		if ($jobtitle = 'Store Office Manager')
			
			if #x=1
			string $jobtitle $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			else 
			string ' ' $termrsn #count_ter by $delim into $mdptitle
			write 12 from $mdptitle
			Let #count_title = #count_title+#count_ter
			
			end-if
			Let #x= #x+1
		end-if
	Let $prev = $curr
	Let #count_mdp= #count_mdp+#count_ter
	add 1 to #j
	end-while
	move #count_mdp to $count_mdp 999,999
	!SHOW 'Grand Total:' $count_mdp
	string 'Grand Total' '' $count_mdp by $delim into $mdptitle
	write 12 from $mdptitle
end-procedure



!**************************************************************************************************************************
!		Selection of Pharmacy by Job Title Actives
!**************************************************************************************************************************

Begin-Procedure pharmacyactives
Let #i=1
Let #m=1		!VENDKXY done changes 
begin-select 
YY.descr
count(YY.descr) &count_phar_act
count(*) &count_phar

	put &yy.descr &count_phar_act into pharmacy(#i) phartit active
	Let #i = #i+1
	Let #m = #m+1		!VENDKXY done changes 

 FROM PS_JOB XX,PS_JOBCODE_TBL YY, PS_PERSONAL_DATA ZZ, PS_EMPLOYMENT MM, PS_DEPT_TBL NN, PS_GEX_DEPT_TBL OO, PS_GEX_EVP_TBL PP
  WHERE  XX.jobcode in('20138','30000','30005','30170','30299','80022','80053','80082','80083','80084','88016')
    AND ( XX.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE XX.EMPLID = A_ED.EMPLID
          AND XX.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= $thru_date)
    AND XX.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE XX.EMPLID = A_ES.EMPLID
          AND XX.EMPL_RCD = A_ES.EMPL_RCD
          AND XX.EFFDT = A_ES.EFFDT)
     AND YY.SETID = XX.SETID_JOBCODE
     AND YY.JOBCODE = XX.JOBCODE
     AND YY.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE YY.SETID = B_ED.SETID
          AND YY.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND XX.EMPLID = ZZ.EMPLID
     AND XX.EMPLID = MM.EMPLID
     AND XX.EMPL_RCD = MM.EMPL_RCD
     AND XX.PAYGROUP = PP.PAYGROUP
     AND XX.ACCT_CD = PP.ACCT_CD
     AND NN.SETID = XX.SETID_DEPT
     AND NN.DEPTID = XX.DEPTID
     AND NN.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE NN.SETID = E_ED.SETID
          AND NN.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND NN.SETID = OO.SETID
     AND NN.DEPTID = OO.DEPTID
     AND OO.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE OO.SETID = F_ED.SETID
          AND OO.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND XX.DEPTID =  PP.DEPTID (+)
     AND ( XX.EMPL_STATUS IN ('A','L','P','S')
     AND XX.COMPANY NOT BETWEEN '005' AND '999'
     AND XX.COMPANY NOT IN ('KAP','VEC')
     AND XX.JOBCODE <> '90000'
     AND XX.GEX_SEASONAL_EMP = 'N') )
     group by YY.descr
     order by YY.descr
     
end-select
end-procedure

!**************************************************************************************************************************
!		Selection of Pharmacy by Job Title Terminates
!**************************************************************************************************************************

begin-procedure pharmacyterms
Let #i=1

begin-select
YYY.DESCR
count(YYY.DESCR) &count_phar_ter

	put &count_phar_ter into pharmacy(#i) terms
	put &yyy.descr &count_phar_ter into pharmacy1(#i) phartit terms !VENDKXY added on 12/30/2008
	Let #i = #i+1
	
FROM PS_JOB XXX, PS_JOBCODE_TBL YYY, PS_PERSONAL_DATA ZZZ, PS_EMPLOYMENT MMM, PS_DEPT_TBL NNN, PS_GEX_DEPT_TBL OOO, PS_GEX_EVP_TBL PPP, PS_ACTN_REASON_TBL QQQ, PS_JOB RRR
  WHERE XXX.jobcode in('20138','30000','30005','30170','30299','80022','80053','80082','80083','80084','88016')
     AND ( ( XXX.EFFDT >= $from_date
     AND XXX.EFFDT <= $thru_date)
     AND XXX.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND XXX.ACTION_REASON NOT IN  ('SCH','SEA')! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND ((XXX.ACTION_REASON NOT IN  ('SCH','SEA','DE2','DEA','RET')) OR (XXX.ACTION = 'RET' AND XXX.ACTION_REASON = 'RET')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND YYY.SETID = XXX.SETID_JOBCODE
     AND YYY.JOBCODE = XXX.JOBCODE
     AND YYY.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE YYY.SETID = B_ED.SETID
          AND YYY.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND XXX.EMPLID = ZZZ.EMPLID
     AND XXX.EMPLID = MMM.EMPLID
     AND XXX.EMPL_RCD = MMM.EMPL_RCD
     AND XXX.PAYGROUP = PPP.PAYGROUP
     AND XXX.ACCT_CD = PPP.ACCT_CD
     AND NNN.SETID = XXX.SETID_DEPT
     AND NNN.DEPTID = XXX.DEPTID
     AND NNN.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE NNN.SETID = E_ED.SETID
          AND NNN.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND NNN.SETID = OOO.SETID
     AND NNN.DEPTID = OOO.DEPTID
     AND OOO.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE OOO.SETID = F_ED.SETID
          AND OOO.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND XXX.DEPTID =  PPP.DEPTID (+)
     AND MMM.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( XXX.COMPANY NOT BETWEEN '005' AND '999'
     AND XXX.COMPANY NOT IN ('KAP','VEC')
     AND XXX.GEX_SEASONAL_EMP = 'N'
     AND XXX.JOBCODE <> '90000')
     AND QQQ.ACTION = XXX.ACTION
     AND QQQ.ACTION_REASON = XXX.ACTION_REASON
     AND QQQ.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE QQQ.ACTION = J_ED.ACTION
          AND QQQ.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND RRR.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE RRR.EMPLID = I_ED.EMPLID
          AND RRR.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < XXX.EFFDT)
    AND RRR.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE RRR.EMPLID = I_ES.EMPLID
          AND RRR.EMPL_RCD = I_ES.EMPL_RCD
          AND RRR.EFFDT = I_ES.EFFDT)
     AND XXX.EMPLID = RRR.EMPLID
     AND XXX.EMPL_RCD = RRR.EMPL_RCD
     AND RRR.EMPL_STATUS IN ('A','L','P','S') )
     group by YYY.DESCR 
        order by YYY.DESCR
        
end-select
end-procedure


!vendkxy
!**************************************************************************************************************************
!		Pharmacyvoluntaryterms
!**************************************************************************************************************************

begin-procedure pharmacyvoluntaryterms

Let #i = 1

begin-select
b4.DESCR	&pharvoldescr
count(b4.DESCR) &count_phar_ter_vol

	put &pharvoldescr &count_phar_ter_vol into pharmacy2(#i) phartit volter 
	Let #i = #i+1
FROM PS_JOB A4, PS_JOBCODE_TBL B4, PS_PERSONAL_DATA C4, PS_EMPLOYMENT D4, PS_DEPT_TBL E4, PS_GEX_DEPT_TBL F4, PS_GEX_EVP_TBL G4, PS_ACTN_REASON_TBL J4, PS_JOB I4
  WHERE a4.jobcode in('20138','30000','30005','30170','30299','80022','80053','80082','80083','80084','88016')
     and ( ( A4.EFFDT >= $from_date
     AND A4.EFFDT <= $thru_date)
     AND A4.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA]       ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009   
     AND (([$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA]) AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'RET') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'DIS') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'ILA')  AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009  
     AND B4.SETID = A4.SETID_JOBCODE
     AND B4.JOBCODE = A4.JOBCODE
     AND B4.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B4.SETID = B_ED.SETID
          AND B4.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A4.EMPLID = C4.EMPLID
     AND A4.EMPLID = D4.EMPLID
     AND A4.EMPL_RCD = D4.EMPL_RCD
     AND A4.PAYGROUP = G4.PAYGROUP
     AND A4.ACCT_CD = G4.ACCT_CD
     AND E4.SETID = A4.SETID_DEPT
     AND E4.DEPTID = A4.DEPTID
     AND E4.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E4.SETID = E_ED.SETID
          AND E4.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E4.SETID = F4.SETID
     AND E4.DEPTID = F4.DEPTID
     AND F4.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F4.SETID = F_ED.SETID
          AND F4.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A4.DEPTID =  G4.DEPTID (+)
     AND D4.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A4.COMPANY NOT BETWEEN '005' AND '999'
     AND A4.COMPANY NOT IN ('KAP','VEC')
     AND A4.GEX_SEASONAL_EMP = 'N'
     AND A4.JOBCODE <> '90000')
     AND J4.ACTION = A4.ACTION
     AND J4.ACTION_REASON = A4.ACTION_REASON
     AND J4.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J4.ACTION = J_ED.ACTION
          AND J4.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I4.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I4.EMPLID = I_ED.EMPLID
          AND I4.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A4.EFFDT)
    AND I4.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I4.EMPLID = I_ES.EMPLID
          AND I4.EMPL_RCD = I_ES.EMPL_RCD
          AND I4.EFFDT = I_ES.EFFDT)
     AND A4.EMPLID = I4.EMPLID
     AND A4.EMPL_RCD = I4.EMPL_RCD
     AND I4.EMPL_STATUS IN ('A','L','P','S') )
     group by b4.DESCR 
        order by b4.DESCR
END-SELECT     
	
end-procedure

!**************************************************************************************************************************
!		Pharmacyinvoluntaryterms
!**************************************************************************************************************************

begin-procedure pharmacyinvoluntaryterms

Let #i = 1

begin-select
b5.DESCR	&pharinvoldescr
count(b5.DESCR) &count_phar_ter_invol

	put &pharinvoldescr &count_phar_ter_invol into pharmacy3(#i) phartit involter
	
	Let #i = #i+1
FROM PS_JOB A5, PS_JOBCODE_TBL B5, PS_PERSONAL_DATA C5, PS_EMPLOYMENT D5, PS_DEPT_TBL E5, PS_GEX_DEPT_TBL F5, PS_GEX_EVP_TBL G5, PS_ACTN_REASON_TBL J5, PS_JOB I5
  WHERE a5.jobcode in('20138','30000','30005','30170','30299','80022','80053','80082','80083','80084','88016')
  and ( ( A5.EFFDT >= $from_date
     AND A5.EFFDT <= $thru_date)
     AND A5.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]  ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009 
     AND (([$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]) AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'DIS') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'ILA') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND B5.SETID = A5.SETID_JOBCODE
     AND B5.JOBCODE = A5.JOBCODE
     AND B5.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B5.SETID = B_ED.SETID
          AND B5.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A5.EMPLID = C5.EMPLID
     AND A5.EMPLID = D5.EMPLID
     AND A5.EMPL_RCD = D5.EMPL_RCD
     AND A5.PAYGROUP = G5.PAYGROUP
     AND A5.ACCT_CD = G5.ACCT_CD
     AND E5.SETID = A5.SETID_DEPT
     AND E5.DEPTID = A5.DEPTID
     AND E5.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E5.SETID = E_ED.SETID
          AND E5.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E5.SETID = F5.SETID
     AND E5.DEPTID = F5.DEPTID
     AND F5.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F5.SETID = F_ED.SETID
          AND F5.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A5.DEPTID =  G5.DEPTID (+)
     AND D5.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A5.COMPANY NOT BETWEEN '005' AND '999'
     AND A5.COMPANY NOT IN ('KAP','VEC')
     AND A5.GEX_SEASONAL_EMP = 'N'
     AND A5.JOBCODE <> '90000')
     AND J5.ACTION = A5.ACTION
     AND J5.ACTION_REASON = A5.ACTION_REASON
     AND J5.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J5.ACTION = J_ED.ACTION
          AND J5.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I5.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I5.EMPLID = I_ED.EMPLID
          AND I5.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A5.EFFDT)
    AND I5.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I5.EMPLID = I_ES.EMPLID
          AND I5.EMPL_RCD = I_ES.EMPL_RCD
          AND I5.EFFDT = I_ES.EFFDT)
     AND A5.EMPLID = I5.EMPLID
     AND A5.EMPL_RCD = I5.EMPL_RCD
     AND I5.EMPL_STATUS IN ('A','L','P','S') )
     group by b5.DESCR 
        order by b5.DESCR
END-SELECT     
	
end-procedure

!vendkxy


!**************************************************************************************************************************
!		Selection of Pharmacy Union codes by Job Title Actives
!**************************************************************************************************************************


Begin-Procedure UPharact
Let #i = 1
begin-select 
K2.descr||'-Union' &UDESCR
count(K2.descr) &COUNTU_ACT
	put &UDESCR &COUNTU_ACT into phar(#i) titl actives
	Let #i = #i+1
	
FROM PS_JOB K1,PS_JOBCODE_TBL K2, PS_PERSONAL_DATA K3, PS_EMPLOYMENT K4, PS_DEPT_TBL K5, PS_GEX_DEPT_TBL K6, PS_GEX_EVP_TBL K7
  WHERE   K2.jobcode in('80022','80053','88016')
    and K1.union_cd not in ('COL','DVR','MDL','MOD','MUR','NON','SFD','TBD','TOL','XPR')
    AND ( K1.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE K1.EMPLID = A_ED.EMPLID
          AND K1.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= $thru_date)
    AND K1.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE K1.EMPLID = A_ES.EMPLID
          AND K1.EMPL_RCD = A_ES.EMPL_RCD
          AND K1.EFFDT = A_ES.EFFDT)
     AND K2.SETID = K1.SETID_JOBCODE
     AND K2.JOBCODE = K1.JOBCODE
     AND K2.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE K2.SETID = B_ED.SETID
          AND K2.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND K1.EMPLID = K3.EMPLID
     AND K1.EMPLID = K4.EMPLID
     AND K1.EMPL_RCD = K4.EMPL_RCD
     AND K1.PAYGROUP = K7.PAYGROUP
     AND K1.ACCT_CD = K7.ACCT_CD
     AND K5.SETID = K1.SETID_DEPT
     AND K5.DEPTID = K1.DEPTID
     AND K5.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE K5.SETID = E_ED.SETID
          AND K5.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND K5.SETID = K6.SETID
     AND K5.DEPTID = K6.DEPTID
     AND K6.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE K6.SETID = F_ED.SETID
          AND K6.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND K1.DEPTID =  K7.DEPTID (+)
     AND ( K1.EMPL_STATUS IN ('A','L','P','S')
     AND K1.COMPANY NOT BETWEEN '005' AND '999'
     AND K1.COMPANY NOT IN ('KAP','VEC')
     AND K1.JOBCODE <> '90000'
     AND K1.GEX_SEASONAL_EMP = 'N') )
   group by K2.descr
     order by K2.descr
end-select
end-procedure


!**************************************************************************************************************************
!		Selection of Pharmacy Non Union Codes by Job Title Actives
!**************************************************************************************************************************


Begin-Procedure NUPharact
begin-select 
J2.descr||'-NU' &NUDESCR
count(J2.descr) &COUNTNU_ACT
	put &NUDESCR &COUNTNU_ACT into phar(#i) titl actives
	Let #i = #i+1
	
FROM PS_JOB J1,PS_JOBCODE_TBL J2, PS_PERSONAL_DATA J3, PS_EMPLOYMENT J4, PS_DEPT_TBL J5, PS_GEX_DEPT_TBL J6, PS_GEX_EVP_TBL J7
  WHERE   J2.jobcode in('80022','88016')
    and J1.union_cd in ('COL','DVR','MDL','MOD','MUR','NON','SFD','TBD','TOL','XPR')
    AND ( J1.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE J1.EMPLID = A_ED.EMPLID
          AND J1.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= $thru_date)
    AND J1.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE J1.EMPLID = A_ES.EMPLID
          AND J1.EMPL_RCD = A_ES.EMPL_RCD
          AND J1.EFFDT = A_ES.EFFDT)
     AND J2.SETID = J1.SETID_JOBCODE
     AND J2.JOBCODE = J1.JOBCODE
     AND J2.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE J2.SETID = B_ED.SETID
          AND J2.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND J1.EMPLID = J3.EMPLID
     AND J1.EMPLID = J4.EMPLID
     AND J1.EMPL_RCD = J4.EMPL_RCD
     AND J1.PAYGROUP = J7.PAYGROUP
     AND J1.ACCT_CD = J7.ACCT_CD
     AND J5.SETID = J1.SETID_DEPT
     AND J5.DEPTID = J1.DEPTID
     AND J5.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE J5.SETID = E_ED.SETID
          AND J5.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND J5.SETID = J6.SETID
     AND J5.DEPTID = J6.DEPTID
     AND J6.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE J6.SETID = F_ED.SETID
          AND J6.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND J1.DEPTID =  J7.DEPTID (+)
     AND ( J1.EMPL_STATUS IN ('A','L','P','S')
     AND J1.COMPANY NOT BETWEEN '005' AND '999'
     AND J1.COMPANY NOT IN ('KAP','VEC')
     AND J1.JOBCODE <> '90000'
     AND J1.GEX_SEASONAL_EMP = 'N') )
   group by J2.descr
     order by J2.descr
end-select
end-procedure

!**************************************************************************************************************************
!		Selection of Pharmacy Union Codes by Job Title Terminates
!**************************************************************************************************************************

begin-procedure Upharterms
Let #i=1

begin-select
H2.DESCR
count(H2.DESCR) &countuter

	put &countuter into phar(#i) term
	Let #i = #i+1
	
	
FROM PS_JOB H1,  PS_JOBCODE_TBL H2, PS_PERSONAL_DATA H3, PS_EMPLOYMENT H4, PS_DEPT_TBL H5, PS_GEX_DEPT_TBL H6, PS_GEX_EVP_TBL H7, PS_ACTN_REASON_TBL H8, PS_JOB H9
  WHERE   H2.jobcode in('80022','80053','88016')  
    and H1.union_cd not in ('COL','DVR','MDL','MOD','MUR','NON','SFD','TBD','TOL','XPR')
    AND ( ( H1.EFFDT >= $from_date
     AND H1.EFFDT <= $thru_date)
     AND H1.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND H1.ACTION_REASON NOT IN  ('SCH','SEA')! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND ((H1.ACTION_REASON NOT IN  ('SCH','SEA','DE2','DEA','RET')) OR (H1.ACTION = 'RET' AND H1.ACTION_REASON = 'RET')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND H2.SETID = H1.SETID_JOBCODE
     AND H2.JOBCODE = H1.JOBCODE
     AND H2.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE H2.SETID = B_ED.SETID
          AND H2.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND H1.EMPLID = H3.EMPLID
     AND H1.EMPLID = H4.EMPLID
     AND H1.EMPL_RCD = H4.EMPL_RCD
     AND H1.PAYGROUP = H7.PAYGROUP
     AND H1.ACCT_CD = H7.ACCT_CD
     AND H5.SETID = H1.SETID_DEPT
     AND H5.DEPTID = H1.DEPTID
     AND H5.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE H5.SETID = E_ED.SETID
          AND H5.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND H5.SETID = H6.SETID
     AND H5.DEPTID = H6.DEPTID
     AND H6.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE H6.SETID = F_ED.SETID
          AND H6.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND H1.DEPTID =  H7.DEPTID (+)
     AND H4.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( H1.COMPANY NOT BETWEEN '005' AND '999'
     AND H1.COMPANY NOT IN ('KAP','VEC')
     AND H1.GEX_SEASONAL_EMP = 'N'
     AND H1.JOBCODE <> '90000')
     AND H8.ACTION = H1.ACTION
     AND H8.ACTION_REASON = H1.ACTION_REASON
     AND H8.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE H8.ACTION = J_ED.ACTION
          AND H8.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND H9.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE H9.EMPLID = I_ED.EMPLID
          AND H9.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < H1.EFFDT)
    AND H9.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE H9.EMPLID = I_ES.EMPLID
          AND H9.EMPL_RCD = I_ES.EMPL_RCD
          AND H9.EFFDT = I_ES.EFFDT)
     AND H1.EMPLID = H9.EMPLID
     AND H1.EMPL_RCD = H9.EMPL_RCD
     AND H9.EMPL_STATUS IN ('A','L','P','S') )
     group by H2.DESCR 
        order by H2.DESCR
end-select  
end-procedure 


!vendkxy
!**************************************************************************************************************************
!		Upharvoluntaryterms
!**************************************************************************************************************************
begin-procedure Upharvoluntaryterms
Let #i=1

begin-select
b4.jobcode	&pharjobcode
b4.DESCR||'-Union' 	&uphardescr_vol
count(b4.DESCR) &countuter_vol

	put &uphardescr_vol &countuter_vol into phar1(#i) phartit volter
	do Upharinvoluntaryterms
	Let #i = #i+1
	
FROM PS_JOB A4, PS_JOBCODE_TBL B4, PS_PERSONAL_DATA C4, PS_EMPLOYMENT D4, PS_DEPT_TBL E4, PS_GEX_DEPT_TBL F4, PS_GEX_EVP_TBL G4, PS_ACTN_REASON_TBL J4, PS_JOB I4
  WHERE b4.jobcode in('80022','80053','88016')  
    and a4.union_cd not in ('COL','DVR','MDL','MOD','MUR','NON','SFD','TBD','TOL','XPR')
     and ( ( A4.EFFDT >= $from_date
     AND A4.EFFDT <= $thru_date)
     AND A4.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA]  ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009   
     AND (([$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA]) AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'RET') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'DIS') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'ILA')  AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009  
     AND B4.SETID = A4.SETID_JOBCODE
     AND B4.JOBCODE = A4.JOBCODE
     AND B4.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B4.SETID = B_ED.SETID
          AND B4.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A4.EMPLID = C4.EMPLID
     AND A4.EMPLID = D4.EMPLID
     AND A4.EMPL_RCD = D4.EMPL_RCD
     AND A4.PAYGROUP = G4.PAYGROUP
     AND A4.ACCT_CD = G4.ACCT_CD
     AND E4.SETID = A4.SETID_DEPT
     AND E4.DEPTID = A4.DEPTID
     AND E4.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E4.SETID = E_ED.SETID
          AND E4.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E4.SETID = F4.SETID
     AND E4.DEPTID = F4.DEPTID
     AND F4.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F4.SETID = F_ED.SETID
          AND F4.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A4.DEPTID =  G4.DEPTID (+)
     AND D4.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A4.COMPANY NOT BETWEEN '005' AND '999'
     AND A4.COMPANY NOT IN ('KAP','VEC')
     AND A4.GEX_SEASONAL_EMP = 'N'
     AND A4.JOBCODE <> '90000')
     AND J4.ACTION = A4.ACTION
     AND J4.ACTION_REASON = A4.ACTION_REASON
     AND J4.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J4.ACTION = J_ED.ACTION
          AND J4.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I4.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I4.EMPLID = I_ED.EMPLID
          AND I4.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A4.EFFDT)
    AND I4.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I4.EMPLID = I_ES.EMPLID
          AND I4.EMPL_RCD = I_ES.EMPL_RCD
          AND I4.EFFDT = I_ES.EFFDT)
     AND A4.EMPLID = I4.EMPLID
     AND A4.EMPL_RCD = I4.EMPL_RCD
     AND I4.EMPL_STATUS IN ('A','L','P','S') )
     group by b4.jobcode,b4.DESCR 
        order by b4.DESCR
END-SELECT     
	
end-procedure

!**************************************************************************************************************************
!		Upharinvoluntaryterms
!**************************************************************************************************************************
Begin-procedure Upharinvoluntaryterms
Let $pharmacy_found='False'
begin-SELECT
b5.descr     &uphardescr_invol  
count(b5.DESCR) &countuter_invol

	put &countuter_invol into phar1(#i) involter 
	Let $pharmacy_found='True'
	!show 'Union' &uphardescr_vol &countuter_vol &countuter_invol
FROM PS_JOB A5, PS_JOBCODE_TBL B5, PS_PERSONAL_DATA C5, PS_EMPLOYMENT D5, PS_DEPT_TBL E5, PS_GEX_DEPT_TBL F5, PS_GEX_EVP_TBL G5, PS_ACTN_REASON_TBL J5, PS_JOB I5
  WHERE b5.jobcode = &pharjobcode  
    and a5.union_cd not in ('COL','DVR','MDL','MOD','MUR','NON','SFD','TBD','TOL','XPR')
  and ( ( A5.EFFDT >= $from_date
     AND A5.EFFDT <= $thru_date)
     AND A5.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]  ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009 
     AND (([$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]) AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'DIS') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'ILA') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND B5.SETID = A5.SETID_JOBCODE
     AND B5.JOBCODE = A5.JOBCODE
     AND B5.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B5.SETID = B_ED.SETID
          AND B5.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A5.EMPLID = C5.EMPLID
     AND A5.EMPLID = D5.EMPLID
     AND A5.EMPL_RCD = D5.EMPL_RCD
     AND A5.PAYGROUP = G5.PAYGROUP
     AND A5.ACCT_CD = G5.ACCT_CD
     AND E5.SETID = A5.SETID_DEPT
     AND E5.DEPTID = A5.DEPTID
     AND E5.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E5.SETID = E_ED.SETID
          AND E5.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E5.SETID = F5.SETID
     AND E5.DEPTID = F5.DEPTID
     AND F5.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F5.SETID = F_ED.SETID
          AND F5.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A5.DEPTID =  G5.DEPTID (+)
     AND D5.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A5.COMPANY NOT BETWEEN '005' AND '999'
     AND A5.COMPANY NOT IN ('KAP','VEC')
     AND A5.GEX_SEASONAL_EMP = 'N'
     AND A5.JOBCODE <> '90000')
     AND J5.ACTION = A5.ACTION
     AND J5.ACTION_REASON = A5.ACTION_REASON
     AND J5.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J5.ACTION = J_ED.ACTION
          AND J5.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I5.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I5.EMPLID = I_ED.EMPLID
          AND I5.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A5.EFFDT)
    AND I5.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I5.EMPLID = I_ES.EMPLID
          AND I5.EMPL_RCD = I_ES.EMPL_RCD
          AND I5.EFFDT = I_ES.EFFDT)
     AND A5.EMPLID = I5.EMPLID
     AND A5.EMPL_RCD = I5.EMPL_RCD
     AND I5.EMPL_STATUS IN ('A','L','P','S') )
     group by b5.DESCR 
        order by b5.DESCR
END-SELECT     
	if $pharmacy_found = 'False'
	put 0 into phar1(#i) involter
	end-if    

end-procedure

!vendkxy


!**************************************************************************************************************************
!		Selection of Pharmacy Non Union Codes by Job Title Terminates
!**************************************************************************************************************************

begin-procedure NUPharterms
begin-select
B2.DESCR
count(B2.DESCR) &countnuter

	put &countnuter into phar(#i) term
	Let #i = #i+1
	
	
FROM PS_JOB B1,  PS_JOBCODE_TBL B2, PS_PERSONAL_DATA B3, PS_EMPLOYMENT B4, PS_DEPT_TBL B5, PS_GEX_DEPT_TBL B6, PS_GEX_EVP_TBL B7, PS_ACTN_REASON_TBL B8, PS_JOB B9
  WHERE    B2.jobcode in('80022','88016') 
    and B1.union_cd in ('COL','DVR','MDL','MOD','MUR','NON','SFD','TBD','TOL','XPR')
    AND ( ( B1.EFFDT >= $from_date
     AND B1.EFFDT <= $thru_date)
     AND B1.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND B1.ACTION_REASON NOT IN  ('SCH','SEA') ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND ((B1.ACTION_REASON NOT IN  ('SCH','SEA','DE2','DEA','RET')) OR (B1.ACTION = 'RET' AND B1.ACTION_REASON = 'RET')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND B2.SETID = B1.SETID_JOBCODE
     AND B2.JOBCODE = B1.JOBCODE
     AND B2.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B2.SETID = B_ED.SETID
          AND B2.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND B1.EMPLID = B3.EMPLID
     AND B1.EMPLID = B4.EMPLID
     AND B1.EMPL_RCD = B4.EMPL_RCD
     AND B1.PAYGROUP = B7.PAYGROUP
     AND B1.ACCT_CD = B7.ACCT_CD
     AND B5.SETID = B1.SETID_DEPT
     AND B5.DEPTID = B1.DEPTID
     AND B5.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE B5.SETID = E_ED.SETID
          AND B5.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND B5.SETID = B6.SETID
     AND B5.DEPTID = B6.DEPTID
     AND B6.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE B6.SETID = F_ED.SETID
          AND B6.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND B1.DEPTID =  B7.DEPTID (+)
     AND B4.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( B1.COMPANY NOT BETWEEN '005' AND '999'
     AND B1.COMPANY NOT IN ('KAP','VEC')
     AND B1.GEX_SEASONAL_EMP = 'N'
     AND B1.JOBCODE <> '90000')
     AND B8.ACTION = B1.ACTION
     AND B8.ACTION_REASON = B1.ACTION_REASON
     AND B8.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE B8.ACTION = J_ED.ACTION
          AND B8.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND B9.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE B9.EMPLID = I_ED.EMPLID
          AND B9.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < B1.EFFDT)
    AND B9.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE B9.EMPLID = I_ES.EMPLID
          AND B9.EMPL_RCD = I_ES.EMPL_RCD
          AND B9.EFFDT = I_ES.EFFDT)
     AND B1.EMPLID = B9.EMPLID
     AND B1.EMPL_RCD = B9.EMPL_RCD
     AND B9.EMPL_STATUS IN ('A','L','P','S') )
    group by B2.DESCR 
    order by B2.DESCR
        
end-select  
end-procedure 


!vendkxy
!**************************************************************************************************************************
!		Nupharvoluntaryterms
!**************************************************************************************************************************
begin-procedure Nupharvoluntaryterms

begin-select
b4.jobcode 	&pharjobcode1
b4.DESCR||'-NU'	&nuphardescr_vol
count(b4.DESCR) &countuter_vol_nu

	put &nuphardescr_vol &countuter_vol_nu into phar1(#i) phartit volter
	do Nupharinvoluntaryterms
	Let #i = #i+1
	
FROM PS_JOB A4, PS_JOBCODE_TBL B4, PS_PERSONAL_DATA C4, PS_EMPLOYMENT D4, PS_DEPT_TBL E4, PS_GEX_DEPT_TBL F4, PS_GEX_EVP_TBL G4, PS_ACTN_REASON_TBL J4, PS_JOB I4
  WHERE b4.jobcode in('80022','88016')  
    and a4.union_cd in ('COL','DVR','MDL','MOD','MUR','NON','SFD','TBD','TOL','XPR')
     and ( ( A4.EFFDT >= $from_date
     AND A4.EFFDT <= $thru_date)
     AND A4.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA]  ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009   
     AND (([$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA]) AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'RET') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'DIS') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'ILA')  AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009  
     AND B4.SETID = A4.SETID_JOBCODE
     AND B4.JOBCODE = A4.JOBCODE
     AND B4.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B4.SETID = B_ED.SETID
          AND B4.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A4.EMPLID = C4.EMPLID
     AND A4.EMPLID = D4.EMPLID
     AND A4.EMPL_RCD = D4.EMPL_RCD
     AND A4.PAYGROUP = G4.PAYGROUP
     AND A4.ACCT_CD = G4.ACCT_CD
     AND E4.SETID = A4.SETID_DEPT
     AND E4.DEPTID = A4.DEPTID
     AND E4.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E4.SETID = E_ED.SETID
          AND E4.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E4.SETID = F4.SETID
     AND E4.DEPTID = F4.DEPTID
     AND F4.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F4.SETID = F_ED.SETID
          AND F4.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A4.DEPTID =  G4.DEPTID (+)
     AND D4.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A4.COMPANY NOT BETWEEN '005' AND '999'
     AND A4.COMPANY NOT IN ('KAP','VEC')
     AND A4.GEX_SEASONAL_EMP = 'N'
     AND A4.JOBCODE <> '90000')
     AND J4.ACTION = A4.ACTION
     AND J4.ACTION_REASON = A4.ACTION_REASON
     AND J4.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J4.ACTION = J_ED.ACTION
          AND J4.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I4.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I4.EMPLID = I_ED.EMPLID
          AND I4.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A4.EFFDT)
    AND I4.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I4.EMPLID = I_ES.EMPLID
          AND I4.EMPL_RCD = I_ES.EMPL_RCD
          AND I4.EFFDT = I_ES.EFFDT)
     AND A4.EMPLID = I4.EMPLID
     AND A4.EMPL_RCD = I4.EMPL_RCD
     AND I4.EMPL_STATUS IN ('A','L','P','S') )
     group by b4.jobcode,b4.DESCR 
        order by b4.DESCR
END-SELECT     
	
end-procedure

!**************************************************************************************************************************
!		Nupharinvoluntaryterms
!**************************************************************************************************************************
Begin-procedure Nupharinvoluntaryterms
Let $pharmacy_found='False'
begin-SELECT
b5.descr       &nuphardescr_invol
count(b5.DESCR) &countuter_invol_nu

	put &countuter_invol_nu into phar1(#i) involter 
	Let $pharmacy_found='True'
	!show 'Non Union===' &nuphardescr_vol &countuter_vol_nu &countuter_invol_nu
	
FROM PS_JOB A5, PS_JOBCODE_TBL B5, PS_PERSONAL_DATA C5, PS_EMPLOYMENT D5, PS_DEPT_TBL E5, PS_GEX_DEPT_TBL F5, PS_GEX_EVP_TBL G5, PS_ACTN_REASON_TBL J5, PS_JOB I5
  WHERE b5.jobcode = &pharjobcode1 
    and a5.union_cd in ('COL','DVR','MDL','MOD','MUR','NON','SFD','TBD','TOL','XPR')
  and ( ( A5.EFFDT >= $from_date
     AND A5.EFFDT <= $thru_date)
     AND A5.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]  ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009 
     AND (([$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]) AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'DIS') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'ILA') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND B5.SETID = A5.SETID_JOBCODE
     AND B5.JOBCODE = A5.JOBCODE
     AND B5.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B5.SETID = B_ED.SETID
          AND B5.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A5.EMPLID = C5.EMPLID
     AND A5.EMPLID = D5.EMPLID
     AND A5.EMPL_RCD = D5.EMPL_RCD
     AND A5.PAYGROUP = G5.PAYGROUP
     AND A5.ACCT_CD = G5.ACCT_CD
     AND E5.SETID = A5.SETID_DEPT
     AND E5.DEPTID = A5.DEPTID
     AND E5.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E5.SETID = E_ED.SETID
          AND E5.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E5.SETID = F5.SETID
     AND E5.DEPTID = F5.DEPTID
     AND F5.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F5.SETID = F_ED.SETID
          AND F5.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A5.DEPTID =  G5.DEPTID (+)
     AND D5.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A5.COMPANY NOT BETWEEN '005' AND '999'
     AND A5.COMPANY NOT IN ('KAP','VEC')
     AND A5.GEX_SEASONAL_EMP = 'N'
     AND A5.JOBCODE <> '90000')
     AND J5.ACTION = A5.ACTION
     AND J5.ACTION_REASON = A5.ACTION_REASON
     AND J5.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J5.ACTION = J_ED.ACTION
          AND J5.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I5.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I5.EMPLID = I_ED.EMPLID
          AND I5.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A5.EFFDT)
    AND I5.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I5.EMPLID = I_ES.EMPLID
          AND I5.EMPL_RCD = I_ES.EMPL_RCD
          AND I5.EFFDT = I_ES.EFFDT)
     AND A5.EMPLID = I5.EMPLID
     AND A5.EMPL_RCD = I5.EMPL_RCD
     AND I5.EMPL_STATUS IN ('A','L','P','S') )
     group by b5.DESCR 
        order by b5.DESCR
END-SELECT     
	if $pharmacy_found = 'False'
	put 0 into phar1(#i) involter
	end-if    

end-procedure

!vendkxy


!**************************************************************************************************************************
!		Calculation of pharmacy employees
!**************************************************************************************************************************
Begin-Procedure calcphar
	ENCODE '<012>' INTO $NEXT
	encode '<009>' into $delim
	Let #Grand_act_phar=0
	Let #Grand_ter_phar=0
	Let  #Turnover=0
	!vendkxy
	Let #Grand_ter_phar_vol = 0
	Let #Grand_ter_phar_invol = 0
	String 'Annual Pharmacy Turnover by Position' by $delim into $phar
	write 14 from $phar
	write 14 from $next
	write 14 from $Report_title
	write 14 from $next
	string 'JobTitle' 'Active' 'Term' 'Total Turnover %' 'Involuntary %' 'Voluntary %' by $delim into $phar !vendkxy
	write 14 from $phar
	Let #i = 1
	while #i < #m
	get $phartit #active from pharmacy(#i)!VENDKXY ADDED THE CODE ON 12/30/2008
	!VENDKXY ADDED THE CODE ON 12/30/2008-- Begin
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle #terms1 from pharmacy1(#mm)
	if $phartit = $pharmacytitle
	Let #terms = #terms1  
	break
	else 
	Let #terms = 0
	end-if	
	add 1 to #mm	
	end-while 
	!VENDKXY ADDED THE CODE ON 12/30/2008--End
	!VENDKXY
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle1 #volter1 from pharmacy2(#mm)
	if $phartit = $pharmacytitle1
	Let #volter = #volter1
	break
	else
	Let #volter = 0
	end-if
	add 1 to #mm	
	end-while 
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle2 #involter1 from pharmacy3(#mm)
	if $phartit = $pharmacytitle2
	Let #involter = #involter1 
	break
	else
	Let #involter = 0
	end-if
	add 1 to #mm	
	end-while
	!VENDKXY
	if #active=0
	Let #Turnover = 0
	Move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let $volturn = $Turnover||'%'
	Let $involturn = $Turnover||'%'
	else 
	Let #Turnover = round(((#terms/#active)*100),0)
	Move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let #volturn = round(((#volter/#active)*100),0)
	move #volturn to $volturn 9999
	Let $volturn = $volturn||'%'
	Let #involturn = round(((#involter/#active)*100),0)
	move #involturn to $involturn 9999
	Let $involturn = $involturn||'%'
	!vendkxy
	end-if
	Let #Grand_act_phar = #Grand_act_phar+#active
	Let #Grand_ter_phar = #Grand_ter_phar+#terms
	!vendkxy
	Let #Grand_ter_phar_vol = #Grand_ter_phar_vol+#volter
	Let #Grand_ter_phar_invol = #Grand_ter_phar_invol+#involter
	!vendkxy
	string $phartit #active #terms $turnover $involturn $volturn by $delim into $phar	!vendkxy
	write 14 from $phar
	
	add 1 to #i
	end-while
	
	Let #Grand_per_phar = round(((#Grand_ter_phar/#Grand_act_phar)*100),0)
	Move #Grand_per_phar to $Grand_per_phar 9999
	Let $Grand_per_phar = $Grand_per_phar||'%'
	move #Grand_act_phar to $Grand_act_phar 999,999
	move #Grand_ter_phar to $Grand_ter_phar 999,999
	!vendkxy
	Let #Grand_per_phar_vol = round(((#Grand_ter_phar_vol/#Grand_act_phar)*100),0)
	Move #Grand_per_phar_vol to $Grand_per_phar_vol 9999
	Let $Grand_per_phar_vol = $Grand_per_phar_vol||'%'
	Let #Grand_per_phar_invol = round(((#Grand_ter_phar_invol/#Grand_act_phar)*100),0)
	Move #Grand_per_phar_invol to $Grand_per_phar_invol 9999
	Let $Grand_per_phar_invol = $Grand_per_phar_invol||'%'
	!vendkxy
	string 'Grand Total' $Grand_act_phar $Grand_ter_phar $Grand_per_phar $Grand_per_phar_invol $Grand_per_phar_vol by $delim into $phar	!vendkxy
	write 14 from $phar
end-procedure

!**************************************************************************************************************************
!		Calculation of pharmacy employees by union and non union
!**************************************************************************************************************************
Begin-Procedure calcpharbyuandnu
	Let #Grand_act_phar=0
	Let #Grand_ter_phar=0
	Let  #Turnover=0
	!vendkxy
	Let #Grand_ter_phar_vol = 0
	Let #Grand_ter_phar_invol = 0
	string 'Annual Pharmacy Turnover by Position & NU/Union' by $delim into $phar
	write 15 from $phar 
	write 15 from $next
	write 15 from $Report_title 
	write 15 from $next
	string 'JobTitle' 'Active' 'Term' 'Total Turnover %' 'Involuntary %' 'Voluntary %' by $delim into $phar !vendkxy
	write 15 from $phar
	Let #i = 1
	while #i <= 5
	get $phartit #active #terms from pharmacy(#i)
	!VENDKXY ADDED THE CODE ON 12/30/2008-- Begin
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle #terms1 from pharmacy1(#mm)
	if $phartit = $pharmacytitle
	Let #terms = #terms1  
	break
	else 
	Let #terms = 0
	end-if	
	add 1 to #mm	
	end-while 
	!VENDKXY ADDED THE CODE ON 12/30/2008--End
	!VENDKXY
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle1 #volter1 from pharmacy2(#mm)
	if $phartit = $pharmacytitle1
	Let #volter = #volter1
	break
	else
	Let #volter = 0
	end-if
	add 1 to #mm	
	end-while 
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle2 #involter1 from pharmacy3(#mm)
	if $phartit = $pharmacytitle2
	Let #involter = #involter1 
	break
	else
	Let #involter = 0
	end-if
	add 1 to #mm	
	end-while
	!VENDKXY
	if #active=0
	Let #Turnover = 0
	Move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let $volturn = $Turnover||'%'
	Let $involturn = $Turnover||'%'
	else 
	Let #Turnover = round(((#terms/#active)*100),0)
	Move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let #volturn = round(((#volter/#active)*100),0)
	move #volturn to $volturn 9999
	Let $volturn = $volturn||'%'
	Let #involturn = round(((#involter/#active)*100),0)
	move #involturn to $involturn 9999
	Let $involturn = $involturn||'%'
	!vendkxy
	end-if
	Let #Grand_act_phar = #Grand_act_phar+#active
	Let #Grand_ter_phar = #Grand_ter_phar+#terms
	!vendkxy
	Let #Grand_ter_phar_vol = #Grand_ter_phar_vol+#volter
	Let #Grand_ter_phar_invol = #Grand_ter_phar_invol+#involter
	!vendkxy
	string $phartit #active #terms $turnover $involturn $volturn by $delim into $phar	!vendkxy
	write 15 from $phar
	add 1 to #i
	end-while
	
	Let #i = 1
	while #i <= 5
	get $titl #actives #term from phar(#i)
	!VENDKXY
	Let #mm = 1
	while #mm <= 5
	get $pharmacytitle1 #volter1 #involter1 from phar1(#mm)
	if $titl = $pharmacytitle1
	Let #volter = #volter1
	Let #involter = #involter1
	
	break
	else
	Let #volter = 0
	Let #involter = 0
	
	end-if
	add 1 to #mm	
	end-while 
	!VENDKXY
	if #actives=0
	Let #Turnover = 0
	Move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let $volturn = $Turnover||'%'
	Let $involturn = $Turnover||'%'
	else 
	Let #Turnover = round(((#term/#actives)*100),0)
	Move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let #volturn = round(((#volter/#actives)*100),0)
	move #volturn to $volturn 9999
	Let $volturn = $volturn||'%'
	Let #involturn = round(((#involter/#actives)*100),0)
	move #involturn to $involturn 9999
	Let $involturn = $involturn||'%'
	!vendkxy
	end-if
	Let #Grand_act_phar = #Grand_act_phar+#actives
	Let #Grand_ter_phar = #Grand_ter_phar+#term
	!vendkxy
	Let #Grand_ter_phar_vol = #Grand_ter_phar_vol+#volter
	Let #Grand_ter_phar_invol = #Grand_ter_phar_invol+#involter
	!vendkxy
	string $titl #actives #term $turnover $involturn $volturn by $delim into $phar	!vendkxy
	write 15 from $phar
	add 1 to #i
	end-while
	
	Let #i = 9
	while #i <= 10
	get $phartit #active #terms from pharmacy(#i)
	Let $title = $phartit
	!VENDKXY ADDED THE CODE ON 12/30/2008-- Begin
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle #terms1 from pharmacy1(#mm)
	
	if $title = $pharmacytitle
	Let #terms = #terms1  
	
	break
	else 
	Let #terms = 0
	
	end-if	
	add 1 to #mm	
	end-while 
	!VENDKXY ADDED THE CODE ON 12/30/2008--End
	!VENDKXY
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle1 #volter1 from pharmacy2(#mm)
	if $phartit = $pharmacytitle1
	Let #volter = #volter1
	break
	else
	Let #volter = 0
	end-if
	add 1 to #mm	
	end-while 
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle2 #involter1 from pharmacy3(#mm)
	if $phartit = $pharmacytitle2
	Let #involter = #involter1 
	break
	else
	Let #involter = 0
	end-if
	add 1 to #mm	
	end-while
	!VENDKXY
	Let $phartit = $phartit||'-'||'Union'
	if #active=0
	Let #Turnover = 0
	Move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let $volturn = $Turnover||'%'
	Let $involturn = $Turnover||'%'
	else 
	Let #Turnover = round(((#terms/#active)*100),0)
	Move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let #volturn = round(((#volter/#active)*100),0)
	move #volturn to $volturn 9999
	Let $volturn = $volturn||'%'
	Let #involturn = round(((#involter/#active)*100),0)
	move #involturn to $involturn 9999
	Let $involturn = $involturn||'%'
	!vendkxy
	end-if
	Let #Grand_act_phar = #Grand_act_phar+#active
	Let #Grand_ter_phar = #Grand_ter_phar+#terms
	!vendkxy
	Let #Grand_ter_phar_vol = #Grand_ter_phar_vol+#volter
	Let #Grand_ter_phar_invol = #Grand_ter_phar_invol+#involter
	!vendkxy
	string $phartit #active #terms $turnover $involturn $volturn by $delim into $phar	!vendkxy
	write 15 from $phar
	add 1 to #i
	end-while
	
	Let #Grand_per_phar = round(((#Grand_ter_phar/#Grand_act_phar)*100),0)
	Move #Grand_per_phar to $Grand_per_phar 9999
	Let $Grand_per_phar = $Grand_per_phar||'%'
	move #Grand_act_phar to $Grand_act_phar 999,999
	move #Grand_ter_phar to $Grand_ter_phar 999,999
	!vendkxy
	Let #Grand_per_phar_vol = round(((#Grand_ter_phar_vol/#Grand_act_phar)*100),0)
	Move #Grand_per_phar_vol to $Grand_per_phar_vol 9999
	Let $Grand_per_phar_vol = $Grand_per_phar_vol||'%'
	Let #Grand_per_phar_invol = round(((#Grand_ter_phar_invol/#Grand_act_phar)*100),0)
	Move #Grand_per_phar_invol to $Grand_per_phar_invol 9999
	Let $Grand_per_phar_invol = $Grand_per_phar_invol||'%'
	!vendkxy
	string 'Grand Total' $Grand_act_phar $Grand_ter_phar $Grand_per_phar $Grand_per_phar_invol $Grand_per_phar_vol by $delim into $phar !vendkxy
	write 15 from $phar
end-procedure


!**************************************************************************************************************************
!		Calculation of pharmacy employees by Groups
!**************************************************************************************************************************
Begin-Procedure calcphargroup
	ENCODE '<012>' INTO $NEXT
	encode '<009>' into $delim
	Let #Grand_act_phar=0
	Let #Grand_ter_phar=0
	Let  #Turnover=0
	!vendkxy
	Let #Grand_ter_phar_vol = 0
	Let #Grand_ter_phar_invol = 0
	string 'Annual Pharmacy Turnover by Groupings' by $delim into $phar
	write 16 from $phar
	write 16 from $next
	write 16 from $Report_title
	write 16 from $next
	string 'JobTitle' 'Active' 'Term' 'Total Turnover %' 'Involuntary %' 'Voluntary %' by $delim into $phar
	write 16 from $phar
	Let #i = 1
	while #i <= 2
	get $phartit #active #terms from pharmacy(#i)
	!VENDKXY ADDED THE CODE ON 12/30/2008-- Begin
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle #terms1 from pharmacy1(#mm)
	
	if $phartit = $pharmacytitle
	Let #terms = #terms1  
	
	break
	else 
	Let #terms = 0
	end-if	
	add 1 to #mm	
	end-while 
	!VENDKXY ADDED THE CODE ON 12/30/2008--End
	!VENDKXY
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle1 #volter1 from pharmacy2(#mm)
	if $phartit = $pharmacytitle1
	Let #volter = #volter1
	break
	else
	Let #volter = 0
	end-if
	add 1 to #mm	
	end-while 
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle2 #involter1 from pharmacy3(#mm)
	if $phartit = $pharmacytitle2
	Let #involter = #involter1 
	break
	else
	Let #involter = 0
	end-if
	add 1 to #mm	
	end-while
	Let #Grand_ter_phar_vol = #Grand_ter_phar_vol+#volter
	Let #Grand_ter_phar_invol = #Grand_ter_phar_invol+#involter
	Let #vol = #vol+#volter
	Let #invol = #invol+#involter
	!VENDKXY
	Let #Grand_act_phar = #Grand_act_phar+#active
	Let #Grand_ter_phar = #Grand_ter_phar+#terms
	Let #act = #act+#active
	Let #ter = #ter+#terms
	add 1 to #i
	end-while
	get $phartit #active #terms from pharmacy(4)
	!VENDKXY ADDED THE CODE ON 12/30/2008-- Begin
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle #terms1 from pharmacy1(#mm)
	
	if $phartit = $pharmacytitle
	Let #terms = #terms1  
	
	break
	else 
	Let #terms = 0
	end-if	
	add 1 to #mm	
	end-while 
	!VENDKXY ADDED THE CODE ON 12/30/2008--End
	!VENDKXY
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle1 #volter1 from pharmacy2(#mm)
	if $phartit = $pharmacytitle1
	Let #volter = #volter1
	break
	else
	Let #volter = 0
	end-if
	add 1 to #mm	
	end-while 
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle2 #involter1 from pharmacy3(#mm)
	if $phartit = $pharmacytitle2
	Let #involter = #involter1 
	break
	else
	Let #involter = 0
	end-if
	add 1 to #mm	
	end-while
	Let #Grand_ter_phar_vol = #Grand_ter_phar_vol+#volter
	Let #Grand_ter_phar_invol = #Grand_ter_phar_invol+#involter
	Let #vol = #vol+#volter
	Let #invol = #invol+#involter
	!VENDKXY
	Let #act = #act+#active
	Let #ter = #ter+#terms
	Let #Turnover = round(((#ter/#act)*100),0)
	Move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let #volturn = round(((#vol/#act)*100),0)
	move #volturn to $volturn 9999
	Let $volturn = $volturn||'%'
	Let #involturn = round(((#invol/#act)*100),0)
	move #involturn to $involturn 9999
	Let $involturn = $involturn||'%'
	!vendkxy
	Let #Grand_act_phar = #Grand_act_phar+#active
	Let #Grand_ter_phar = #Grand_ter_phar+#terms
	string 'Pharmacy Managers' #act #ter $turnover $involturn $volturn by $delim into $phar	!vendkxy
	write 16 from $phar
	write 16 from $next
	
	Let #i = 1
	Let #act=0
	Let #ter=0
	Let #vol = 0 
	Let #invol = 0
	while #i <= 3
	get $titl #actives #term from phar(#i)
	!SHOW 'phar------' $titl #actives #term
	!VENDKXY
	Let #mm = 1
	while #mm <= 5
	get $pharmacytitle1 #volter1 #involter1 from phar1(#mm)
	!show 'phar1========'   $pharmacytitle1 #volter1 #involter1 
	if $titl = $pharmacytitle1
	Let #volter = #volter1
	Let #involter = #involter1
	
	break
	else
	Let #volter = 0
	Let #involter = 0
	
	end-if
	add 1 to #mm	
	end-while
	 
	!VENDKXY 
	Let #Grand_ter_phar_vol = #Grand_ter_phar_vol+#volter
	Let #Grand_ter_phar_invol = #Grand_ter_phar_invol+#involter
	Let #vol = #vol+#volter
	Let #invol = #invol+#involter
	!VENDKXY
	Let #Grand_act_phar = #Grand_act_phar+#actives
	Let #Grand_ter_phar = #Grand_ter_phar+#term
	Let #act = #act+#actives
	Let #ter = #ter+#term
	add 1 to #i
	end-while
		
	Let #i = 9
	while #i <= 10
	get $phartit #active #terms from pharmacy(#i)
	!VENDKXY ADDED THE CODE ON 12/30/2008-- Begin
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle #terms1 from pharmacy1(#mm)
	
	if $phartit = $pharmacytitle
	Let #terms = #terms1  
	
	break
	else 
	Let #terms = 0
	end-if	
	add 1 to #mm	
	end-while 
	!VENDKXY ADDED THE CODE ON 12/30/2008--End
	!VENDKXY
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle1 #volter1 from pharmacy2(#mm)
	if $phartit = $pharmacytitle1
	Let #volter = #volter1
	break
	else
	Let #volter = 0
	end-if
	add 1 to #mm	
	end-while 
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle2 #involter1 from pharmacy3(#mm)
	if $phartit = $pharmacytitle2
	Let #involter = #involter1 
	break
	else
	Let #involter = 0
	end-if
	add 1 to #mm	
	end-while
	Let #Grand_ter_phar_vol = #Grand_ter_phar_vol+#volter
	Let #Grand_ter_phar_invol = #Grand_ter_phar_invol+#involter
	Let #vol = #vol+#volter
	Let #invol = #invol+#involter
	!VENDKXY
	Let #Grand_act_phar = #Grand_act_phar+#active
	Let #Grand_ter_phar = #Grand_ter_phar+#terms
	Let #act = #act+#active
	Let #ter = #ter+#terms
	add 1 to #i
	end-while
	Let #Turnover = round(((#ter/#act)*100),0)
	Move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let #volturn = round(((#vol/#act)*100),0)
	move #volturn to $volturn 9999
	Let $volturn = $volturn||'%'
	Let #involturn = round(((#invol/#act)*100),0)
	move #involturn to $involturn 9999
	Let $involturn = $involturn||'%'
	!vendkxy
	string 'Technicians-Union' #act #ter $turnover $involturn $volturn by $delim into $phar
	write 16 from $phar
	
	
	Let #vol = 0 
	Let #invol = 0
	Let #i = 4
	while #i <= 5
	get $titl #actives #term from phar(#i)
	!VENDKXY
	
	Let #mm = 1
	while #mm <= 5
	get $pharmacytitle1 #volter1 #involter1 from phar1(#mm)
	!show 'phar1========'   $pharmacytitle1 #volter1 #involter1 
	if $titl = $pharmacytitle1
	Let #volter = #volter1
	Let #involter = #involter1
	
	break
	else
	Let #volter = 0
	Let #involter = 0
	
	end-if
	add 1 to #mm	
	end-while 
	
	!VENDKXY
	Let #Grand_ter_phar_vol = #Grand_ter_phar_vol+#volter
	Let #Grand_ter_phar_invol = #Grand_ter_phar_invol+#involter
	Let #vol = #vol+#volter
	Let #invol = #invol+#involter
	!VENDKXY
	Let #Grand_act_phar = #Grand_act_phar+#actives
	Let #Grand_ter_phar = #Grand_ter_phar+#term
	Let #act1 = #act1+#actives
	Let #ter1 = #ter1+#term
	add 1 to #i
	end-while	
	Let #Turnover = round(((#ter1/#act1)*100),0)
	Move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let #volturn = round(((#vol/#act1)*100),0)
	move #volturn to $volturn 9999
	Let $volturn = $volturn||'%'
	Let #involturn = round(((#invol/#act1)*100),0)
	move #involturn to $involturn 9999
	Let $involturn = $involturn||'%'
	!vendkxy
	string 'Technicians-Non-Union' #act1 #ter1 $turnover $involturn $volturn by $delim into $phar   !vendkxy
	write 16 from $phar
	write 16 from $next
		
		
	Let #act=0
	Let #ter=0
	Let #vol = 0 
	Let #invol = 0	
	get $phartit #active #terms from pharmacy(3)
	!VENDKXY ADDED THE CODE ON 12/30/2008-- Begin
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle #terms1 from pharmacy1(#mm)
	
	if $phartit = $pharmacytitle
	Let #terms = #terms1  
	
	break
	else 
	Let #terms = 0
	end-if	
	add 1 to #mm	
	end-while 
	!VENDKXY ADDED THE CODE ON 12/30/2008--End
	!VENDKXY
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle1 #volter1 from pharmacy2(#mm)
	if $phartit = $pharmacytitle1
	Let #volter = #volter1
	break
	else
	Let #volter = 0
	end-if
	add 1 to #mm	
	end-while 
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle2 #involter1 from pharmacy3(#mm)
	if $phartit = $pharmacytitle2
	Let #involter = #involter1 
	break
	else
	Let #involter = 0
	end-if
	add 1 to #mm	
	end-while
	Let #Grand_ter_phar_vol = #Grand_ter_phar_vol+#volter
	Let #Grand_ter_phar_invol = #Grand_ter_phar_invol+#involter
	Let #vol = #vol+#volter
	Let #invol = #invol+#involter
	!VENDKXY
	Let #act = #act+#active
	Let #ter = #ter+#terms
	Let #Grand_act_phar = #Grand_act_phar+#active
	Let #Grand_ter_phar = #Grand_ter_phar+#terms
	get $phartit #active #terms from pharmacy(5)
	!VENDKXY ADDED THE CODE ON 12/30/2008-- Begin
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle #terms1 from pharmacy1(#mm)
	
	if $phartit = $pharmacytitle
	Let #terms = #terms1  
	
	break
	else 
	Let #terms = 0
	end-if	
	add 1 to #mm	
	end-while 
	!VENDKXY ADDED THE CODE ON 12/30/2008--End
	!VENDKXY
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle1 #volter1 from pharmacy2(#mm)
	if $phartit = $pharmacytitle1
	Let #volter = #volter1
	break
	else
	Let #volter = 0
	end-if
	add 1 to #mm	
	end-while 
	
	Let #mm = 1
	while #mm < #m
	get $pharmacytitle2 #involter1 from pharmacy3(#mm)
	if $phartit = $pharmacytitle2
	Let #involter = #involter1 
	break
	else
	Let #involter = 0
	end-if
	add 1 to #mm	
	end-while
	Let #Grand_ter_phar_vol = #Grand_ter_phar_vol+#volter
	Let #Grand_ter_phar_invol = #Grand_ter_phar_invol+#involter
	Let #vol = #vol+#volter
	Let #invol = #invol+#involter
	!VENDKXY
	Let #act = #act+#active
	Let #ter = #ter+#terms
	Let #Turnover = round(((#ter/#act)*100),0)
	Move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	Let #Grand_act_phar = #Grand_act_phar+#active
	Let #Grand_ter_phar = #Grand_ter_phar+#terms
	!vendkxy
	Let #volturn = round(((#vol/#act)*100),0)
	move #volturn to $volturn 9999
	Let $volturn = $volturn||'%'
	Let #involturn = round(((#invol/#act)*100),0)
	move #involturn to $involturn 9999
	Let $involturn = $involturn||'%'
	!vendkxy
	string 'Pharmacy Intern' #act #ter $turnover $involturn $volturn by $delim into $phar
	write 16 from $phar
	write 16 from $next
	
	Let #Grand_per_phar = round(((#Grand_ter_phar/#Grand_act_phar)*100),0)
	Move #Grand_per_phar to $Grand_per_phar 9999
	Let $Grand_per_phar = $Grand_per_phar||'%'
	move #Grand_act_phar to $Grand_act_phar 999,999
	move #Grand_ter_phar to $Grand_ter_phar 999,999
	!vendkxy
	Let #Grand_per_phar_vol = round(((#Grand_ter_phar_vol/#Grand_act_phar)*100),0)
	Move #Grand_per_phar_vol to $Grand_per_phar_vol 9999
	Let $Grand_per_phar_vol = $Grand_per_phar_vol||'%'
	Let #Grand_per_phar_invol = round(((#Grand_ter_phar_invol/#Grand_act_phar)*100),0)
	Move #Grand_per_phar_invol to $Grand_per_phar_invol 9999
	Let $Grand_per_phar_invol = $Grand_per_phar_invol||'%'
	!vendkxy
	string 'Grand Total' $Grand_act_phar $Grand_ter_phar $Grand_per_phar $Grand_per_phar_invol $Grand_per_phar_vol by $delim into $phar	!vendkxy
	write 16 from $phar
end-procedure

!VENDKXY--Begin

!***********************************************************************************
!procedure alldeptflsaxlat
!***********************************************************************************
begin-procedure alldeptflsaxlat
begin-select
xlatlongname &flsaxlat
from psxlatitem 
where fieldname = 'FLSA_STATUS' AND EFF_STATUS = 'A' and fieldvalue = &all_flsa_status
end-select
end-procedure

!***********************************************************************************
!procedure alldeptact
!***********************************************************************************
begin-procedure alldeptact
  lET #I = 1
  Let #kk = 1
begin-select
aaa.deptid			&all_act_deptid
aaa.FULL_PART_TIME   &all_full_part
aaa.ACCT_CD					&all_acct_cd
bbb.FLSA_STATUS			&all_flsa_status
count(aaa.emplid) &COUNT_ACT_all
	let $retail_deptid=&all_act_deptid
	do alldeptflsaxlat
	put $retail_deptid &flsaxlat &all_acct_cd &all_full_part &COUNT_ACT_all into alldept(#i) deptid flsa actcd fullpart act
	do alldeptter
	do Get-Involuntary-alldept-Terminates
	do Get-Voluntary-alldept-Terminates
	Let #i = #i+1
	Let #kk=#kk+1
  
FROM PS_JOB AAA, PS_JOBCODE_TBL BBB, PS_PERSONAL_DATA CCC, PS_EMPLOYMENT DDD, PS_DEPT_TBL EEE, PS_GEX_DEPT_TBL FFF, PS_GEX_EVP_TBL GGG
  WHERE ( AAA.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE AAA.EMPLID = A_ED.EMPLID
          AND AAA.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= $thru_date)
    AND AAA.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE AAA.EMPLID = A_ES.EMPLID
          AND AAA.EMPL_RCD = A_ES.EMPL_RCD
          AND AAA.EFFDT = A_ES.EFFDT)
     AND BBB.SETID = AAA.SETID_JOBCODE
     AND BBB.JOBCODE = AAA.JOBCODE
     AND BBB.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE BBB.SETID = B_ED.SETID
          AND BBB.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND AAA.EMPLID = CCC.EMPLID
     AND AAA.EMPLID = DDD.EMPLID
     AND AAA.EMPL_RCD = DDD.EMPL_RCD
     AND AAA.PAYGROUP = GGG.PAYGROUP
     AND AAA.ACCT_CD = GGG.ACCT_CD
     AND EEE.SETID = AAA.SETID_DEPT
     AND EEE.DEPTID = AAA.DEPTID
     AND EEE.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE EEE.SETID = E_ED.SETID
          AND EEE.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND EEE.SETID = FFF.SETID
     AND EEE.DEPTID = FFF.DEPTID
     AND FFF.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE FFF.SETID = F_ED.SETID
          AND FFF.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND AAA.DEPTID =  GGG.DEPTID (+)
     AND ( AAA.EMPL_STATUS IN ('A','L','P','S')
     AND AAA.COMPANY NOT BETWEEN '005' AND '999'
     AND AAA.COMPANY NOT IN ('KAP','VEC')
     AND AAA.JOBCODE <> '90000'
     AND AAA.GEX_SEASONAL_EMP = 'N') )
   group by aaa.deptid,aaa.FULL_PART_TIME,aaa.ACCT_CD,bbb.FLSA_STATUS
   order by aaa.deptid
     
end-select
end-procedure


!***********************************************************************************
!procedure alldeptter
!***********************************************************************************
begin-procedure alldeptter
	Let $count_retailterms = 'False'
	let #ijk = 1
begin-select
aaaa.deptid						&all_ter_deptid      
aaaa.FULL_PART_TIME      &all_full_part_ter  
aaaa.ACCT_CD          		&all_acct_cd_ter     
bbbb.FLSA_STATUS      		&all_flsa_status_ter 
count(aaaa.emplid) &count_ter_all 
	Let $count_retailterms = 'True'
	put &count_ter_all into alldept(#i) ter
			  
FROM PS_JOB AAAA,PS_JOBCODE_TBL BBBB, PS_PERSONAL_DATA CCCC, PS_EMPLOYMENT DDDD, PS_DEPT_TBL EEEE, PS_GEX_DEPT_TBL FFFF, PS_GEX_EVP_TBL GGGG, PS_ACTN_REASON_TBL JJJJ, PS_JOB IIII
  WHERE  aaaa.deptid					= &all_act_deptid      
     and aaaa.FULL_PART_TIME  =   &all_full_part  
     and aaaa.ACCT_CD         =		&all_acct_cd     
     and bbbb.FLSA_STATUS     =		&all_flsa_status 
     AND ( ( AAAA.EFFDT >= $from_date
     AND AAAA.EFFDT <= $thru_date)
     AND AAAA.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND AAAA.ACTION_REASON NOT IN  ('SCH','SEA')! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND ((AAAA.ACTION_REASON NOT IN  ('SCH','SEA','DE2','DEA','RET')) OR (AAAA.ACTION = 'RET' AND AAAA.ACTION_REASON = 'RET')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND BBBB.SETID = AAAA.SETID_JOBCODE
     AND BBBB.JOBCODE = AAAA.JOBCODE
     AND BBBB.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE BBBB.SETID = B_ED.SETID
          AND BBBB.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND AAAA.EMPLID = CCCC.EMPLID
     AND AAAA.EMPLID = DDDD.EMPLID
     AND AAAA.EMPL_RCD = DDDD.EMPL_RCD
     AND AAAA.PAYGROUP = GGGG.PAYGROUP
     AND AAAA.ACCT_CD = GGGG.ACCT_CD
     AND EEEE.SETID = AAAA.SETID_DEPT
     AND EEEE.DEPTID = AAAA.DEPTID
     AND EEEE.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE EEEE.SETID = E_ED.SETID
          AND EEEE.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND EEEE.SETID = FFFF.SETID
     AND EEEE.DEPTID = FFFF.DEPTID
     AND FFFF.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE FFFF.SETID = F_ED.SETID
          AND FFFF.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND AAAA.DEPTID =  GGGG.DEPTID (+)
     AND DDDD.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( AAAA.COMPANY NOT BETWEEN '005' AND '999'
     AND AAAA.COMPANY NOT IN ('KAP','VEC')
     AND AAAA.GEX_SEASONAL_EMP = 'N'
     AND AAAA.JOBCODE <> '90000')
     AND JJJJ.ACTION = AAAA.ACTION
     AND JJJJ.ACTION_REASON = AAAA.ACTION_REASON
     AND JJJJ.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE JJJJ.ACTION = J_ED.ACTION
          AND JJJJ.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND IIII.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE IIII.EMPLID = I_ED.EMPLID
          AND IIII.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < AAAA.EFFDT)
    AND IIII.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE IIII.EMPLID = I_ES.EMPLID
          AND IIII.EMPL_RCD = I_ES.EMPL_RCD
          AND IIII.EFFDT = I_ES.EFFDT)
     AND AAAA.EMPLID = IIII.EMPLID
     AND AAAA.EMPL_RCD = IIII.EMPL_RCD
     AND IIII.EMPL_STATUS IN ('A','L','P','S') )
      group by aaaa.deptid,aaaa.FULL_PART_TIME,aaaa.ACCT_CD,bbbb.FLSA_STATUS
   		order by aaaa.deptid
end-select
	if $count_retailterms = 'False'
	put 0 into alldept(#i) ter
	end-if
end-procedure

!VENDKXY

!**************************************************************************************************************************
!		Get-Voluntary-alldept-Terminates
!**************************************************************************************************************************
Begin-procedure Get-Voluntary-alldept-Terminates
!show 'Get-Voluntary-Terminatesalldept- started'

	Let $count_retailterms = 'False'
	 
begin-SELECT
a4.deptid		&alldept_deptid_vol
a4.FULL_PART_TIME
a4.ACCT_CD       
b4.FLSA_STATUS   
count(a4.emplid)  &count_ter_vol

		Let $count_retailterms = 'True'
	put &count_ter_vol into alldept(#i) volter	

FROM PS_JOB A4, PS_JOBCODE_TBL B4, PS_PERSONAL_DATA C4, PS_EMPLOYMENT D4, PS_DEPT_TBL E4, PS_GEX_DEPT_TBL F4, PS_GEX_EVP_TBL G4, PS_ACTN_REASON_TBL J4, PS_JOB I4
  WHERE a4.deptid	= &all_act_deptid      
     and a4.FULL_PART_TIME  =   &all_full_part  
     and a4.ACCT_CD         =		&all_acct_cd     
     and b4.FLSA_STATUS     =		&all_flsa_status
     and ( ( A4.EFFDT >= $from_date
     AND A4.EFFDT <= $thru_date)
     AND A4.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA]  ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009   
     AND (([$GEXHR308_VOLUNTARY_ACTION_REASON_CRITERIA]) AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'RET') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'DIS') AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'ILA')  AND (A4.ACTION <> 'TER' OR A4.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009  
     AND B4.SETID = A4.SETID_JOBCODE
     AND B4.JOBCODE = A4.JOBCODE
     AND B4.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B4.SETID = B_ED.SETID
          AND B4.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A4.EMPLID = C4.EMPLID
     AND A4.EMPLID = D4.EMPLID
     AND A4.EMPL_RCD = D4.EMPL_RCD
     AND A4.PAYGROUP = G4.PAYGROUP
     AND A4.ACCT_CD = G4.ACCT_CD
     AND E4.SETID = A4.SETID_DEPT
     AND E4.DEPTID = A4.DEPTID
     AND E4.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E4.SETID = E_ED.SETID
          AND E4.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E4.SETID = F4.SETID
     AND E4.DEPTID = F4.DEPTID
     AND F4.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F4.SETID = F_ED.SETID
          AND F4.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A4.DEPTID =  G4.DEPTID (+)
     AND D4.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A4.COMPANY NOT BETWEEN '005' AND '999'
     AND A4.COMPANY NOT IN ('KAP','VEC')
     AND A4.GEX_SEASONAL_EMP = 'N'
     AND A4.JOBCODE <> '90000')
     AND J4.ACTION = A4.ACTION
     AND J4.ACTION_REASON = A4.ACTION_REASON
     AND J4.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J4.ACTION = J_ED.ACTION
          AND J4.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I4.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I4.EMPLID = I_ED.EMPLID
          AND I4.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A4.EFFDT)
    AND I4.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I4.EMPLID = I_ES.EMPLID
          AND I4.EMPL_RCD = I_ES.EMPL_RCD
          AND I4.EFFDT = I_ES.EFFDT)
     AND A4.EMPLID = I4.EMPLID
     AND A4.EMPL_RCD = I4.EMPL_RCD
     AND I4.EMPL_STATUS IN ('A','L','P','S') )
     group by a4.deptid,a4.FULL_PART_TIME,a4.ACCT_CD,b4.FLSA_STATUS
END-SELECT     
	if $count_retailterms = 'False'
	put 0 into alldept(#i) volter
	end-if
end-procedure

!**************************************************************************************************************************
!		Get-Involuntary-alldept-Terminates
!**************************************************************************************************************************
Begin-procedure Get-Involuntary-alldept-Terminates
!show 'Get-Involuntary-Terminates all dept started'

	Let $count_retailterms = 'False'
	 
begin-SELECT
a5.deptid		&alldept_deptid_invol
a5.FULL_PART_TIME
a5.ACCT_CD       
b5.FLSA_STATUS   
count(a5.emplid)  &count_ter_invol

		Let $count_retailterms = 'True'
	put &count_ter_invol into alldept(#i) involter	
 	

FROM PS_JOB A5, PS_JOBCODE_TBL B5, PS_PERSONAL_DATA C5, PS_EMPLOYMENT D5, PS_DEPT_TBL E5, PS_GEX_DEPT_TBL F5, PS_GEX_EVP_TBL G5, PS_ACTN_REASON_TBL J5, PS_JOB I5
  WHERE a5.deptid					= &all_act_deptid      
     and a5.FULL_PART_TIME  =   &all_full_part  
     and a5.ACCT_CD         =		&all_acct_cd     
     and b5.FLSA_STATUS     =		&all_flsa_status
     and( ( A5.EFFDT >= $from_date
     AND A5.EFFDT <= $thru_date)
     AND A5.ACTION IN ('RET','RWP','TER','TWB','TWP')
     !AND [$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]  ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009 
     AND (([$GEXHR308_INVOLUNTARY_ACTION_REASON_CRITERIA]) AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'DIS') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'ILA') AND (A5.ACTION <> 'RET' OR A5.ACTION_REASON <> 'CRE')) ! VENDKXY Done the Changes for ITG 68183 on 10/09/2009
     AND B5.SETID = A5.SETID_JOBCODE
     AND B5.JOBCODE = A5.JOBCODE
     AND B5.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B5.SETID = B_ED.SETID
          AND B5.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND A5.EMPLID = C5.EMPLID
     AND A5.EMPLID = D5.EMPLID
     AND A5.EMPL_RCD = D5.EMPL_RCD
     AND A5.PAYGROUP = G5.PAYGROUP
     AND A5.ACCT_CD = G5.ACCT_CD
     AND E5.SETID = A5.SETID_DEPT
     AND E5.DEPTID = A5.DEPTID
     AND E5.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E5.SETID = E_ED.SETID
          AND E5.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND E5.SETID = F5.SETID
     AND E5.DEPTID = F5.DEPTID
     AND F5.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F5.SETID = F_ED.SETID
          AND F5.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND A5.DEPTID =  G5.DEPTID (+)
     AND D5.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( A5.COMPANY NOT BETWEEN '005' AND '999'
     AND A5.COMPANY NOT IN ('KAP','VEC')
     AND A5.GEX_SEASONAL_EMP = 'N'
     AND A5.JOBCODE <> '90000')
     AND J5.ACTION = A5.ACTION
     AND J5.ACTION_REASON = A5.ACTION_REASON
     AND J5.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE J5.ACTION = J_ED.ACTION
          AND J5.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND I5.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE I5.EMPLID = I_ED.EMPLID
          AND I5.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < A5.EFFDT)
    AND I5.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE I5.EMPLID = I_ES.EMPLID
          AND I5.EMPL_RCD = I_ES.EMPL_RCD
          AND I5.EFFDT = I_ES.EFFDT)
     AND A5.EMPLID = I5.EMPLID
     AND A5.EMPL_RCD = I5.EMPL_RCD
     AND I5.EMPL_STATUS IN ('A','L','P','S') )
	group by a5.deptid,a5.FULL_PART_TIME,a5.ACCT_CD,b5.FLSA_STATUS
END-SELECT     
	if $count_retailterms = 'False'
	put 0 into alldept(#i) involter
	end-if    

end-procedure



!**************************************************************************************************************************
!		Calculation of Department employees
!**************************************************************************************************************************
Begin-Procedure calcalldept
	string 'Turnover by Department' by $delim into $retail
	write 18 from $retail
	write 18 from $next
	write 18 from $Report_title
	write 18 from $next
	string 'Dept' 'FLSA Status' 'Account Code' 'Full-time/Part-time Status' 'Active' 'Term' 'Total Turnover %' 'Involuntary %' 'Voluntary %' by $delim into $retail
	write 18 from $retail
	Let #i = 1
	while #i < #kk
	get $deptid $flsa $actcd $fullpart #active #term #volter #involter from alldept(#i)
	if #active=0
	Let #Turnover = 0
	move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	Let $volturn = $Turnover||'%'
	Let $involturn = $Turnover||'%'
	else 
	Let #Turnover = round(((#term/#active)*100),0)
	move #Turnover to $Turnover 9999
	Let $Turnover = $Turnover||'%'
	!vendkxy
	Let #volturn = round(((#volter/#active)*100),0)
	move #volturn to $volturn 9999
	Let $volturn = $volturn||'%'
	Let #involturn = round(((#involter/#active)*100),0)
	move #involturn to $involturn 9999
	Let $involturn = $involturn||'%'
	end-if
	let $deptid = '="' || edit($deptid,'0000') || '"'
	string $deptid $flsa $actcd $fullpart #active #term $turnover $involturn $volturn by $delim into $retail
	write 18 from $retail
	add 1 to #i
	end-while
		
end-procedure

!VENDKXY--End



!***********************************************************************************
!procedure Open-File
!***********************************************************************************
begin-procedure Open-File
MOVE $CURRENT-DATE TO $CURRDT 'MMDDYY'
	ENCODE '<012>' INTO $NEXT
	encode '<009>' into $delim
   !this is prod -->
   Let $path='\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\' 
   !Let $path='{OUTFILE}' !Vendkxy testing
   !Let $path='\\mickey\psdev\psoft\working\vendkxy\' !GEX-TLL testing
   
   Let $File_Name = 'To_actives_'
   Let $file = $path || 'Turnover - All Bus Areas\'|| Lower($File_Name) ||$CURRDT || '.xls' 
   
   show '$filename:' $file_name
   show '$file:' $file
   
   
   Let $File_Name1 = 'To_Terminates_'
   Let $file1 = $path ||'Turnover - All Bus Areas\'|| Lower($File_Name1) || $CURRDT || '.xls'
   show '$filename1:' $file_name1
   show '$file1:' $file1
   
   Let $File_Name2 = 'turnover by EVP_'
   Let $file2 = $path ||'Turnover - All Bus Areas\'|| Lower($File_Name2) || $CURRDT || '.xls'
   show '$filename2:' $file_name2
   show '$file2:' $file2
   
   
   Let $File_Name3 = 'All Bus Area TO_'
   Let $file3 = $path ||'Turnover - All Bus Areas\'|| Lower($File_Name3) || $CURRDT || '.xls'
   show '$filename3:' $file_name3
   show '$file3:' $file3
   
   Let $File_Name4 = 'getgo to_pad & SA_'
   Let $file4 = $path ||'Turnover - GetGo\'|| Lower($File_Name4) || $CURRDT || '.xls'
   show '$filename4:' $file_name4
   show '$file4:' $file4
   
   Let $File_Name5 = 'retail to by dept_'
   Let $file5 = $path || 'Turnover - Retail\' || Lower($File_Name5) || $CURRDT || '.xls'
   show '$filename5:' $file_name5
   show '$file5:' $file5
   
   
   Let $File_Name6 = 'MDP TO_Time in POS_'
   Let $file6 = $path ||'MDP\' || Lower($File_Name6) || $CURRDT || '.xls'
   show '$filename6:' $file_name6
   show '$file6:' $file6
   
   Let $File_Name7 = 'MDP TO_LOS_'
   Let $file7 = $path ||'MDP\' || Lower($File_Name7) || $CURRDT || '.xls'
   show '$filename7:' $file_name7
   show '$file7:' $file7
   
   Let $File_Name8 = 'MDP Term Counts_'
   Let $file8 = $path ||'MDP\' || Lower($File_Name8) || $CURRDT || '.xls'
   show '$filename8:' $file_name8
   show '$file8:' $file8
   
   Let $File_Name9 = 'RSC to_'
   Let $file9 = $path ||'Turnover - RSC\' || Lower($File_Name9) || $CURRDT || '.xls'
   show '$filename9:' $file_name9
   show '$file9:' $file9
   
   Let $File_Name10 = 'MDP terms by Pos_Reason_'
   Let $file10 = $path ||'MDP\' ||  Lower($File_Name10) || $CURRDT || '.xls'
   show '$filename10:' $file_name10
   show '$file10:' $file10
   
   Let $File_Name11 = 'pharmacy to_position_'
   Let $file11 = $path ||'Turnover - Pharmacy\' || Lower($File_Name11) || $CURRDT || '.xls'
   !Let $file11 = '{OUTFILE}'|| Lower($File_Name11) || $CURRDT || '.xls' !VENDKXY for testing
   show '$filename11:' $file_name11
      show '$file11:' $file11
   
   Let $File_Name12 = 'pharmacy_by_union_NU_'
   Let $file12 = $path ||'Turnover - Pharmacy\' || Lower($File_Name12) || $CURRDT || '.xls'
   !Let $file12 = '{OUTFILE}'|| Lower($File_Name12) || $CURRDT || '.xls'    !VENDKXY for testing
   show '$filename12:' $file_name12
   show '$file12:' $file12
   
   Let $File_Name13 = 'pharmacy_by_Groups_'
   Let $file13 = $path ||'Turnover - Pharmacy\' || Lower($File_Name13) || $CURRDT || '.xls'
   !Let $file13 = '{OUTFILE}'|| Lower($File_Name13) || $CURRDT || '.xls'   !VENDKXY for testing
   show '$filename13:' $file_name13
   show '$file13:' $file13
   
   Let $File_Name14 = 'GetGo To & Targets_'
   Let $file14 = $path ||'Turnover - GetGo\'|| Lower($File_Name14) || $CURRDT || '.xls'
   !  Let $file14 = '{OUTFILE}'|| Lower($File_Name14) || $CURRDT || '.xls'
   show '$filename14:' $file_name14
   show '$file14:' $file14
  
  !this is prod --> 
  Let $Input_filename1 = '\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\Input Files\GetGo Targets.txt' 
  !LET $Input_filename1 = '{OUTFILE}'|| 'GetGo Targets.txt' !vendkxy TESTING
  !LET $Input_filename1 = '\\ruchi\psprod\temp\GetGo Targets.txt' !GEX-TLL TESTING 
  OPEN $Input_filename1 as 13 For-Reading Record=100:Vary
  
  !this is prod --> 
  Let $Input_filename2 = '\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\Input Files\RSC Targets.txt'  
  !Let $Input_filename2 = '{OUTFILE}'|| 'RSC Targets.txt' !vendkxy FOR TESTING 
   !Let $Input_filename2 = '\\ruchi\psprod\temp\RSC Targets.txt' !GEX-TLL 03/26/2008 FOR TESTING 
   OPEN $Input_filename2 as 10 For-Reading Record=100:Vary
   
   !VENDKXY
    Let $File_Name18 = 'All to by dept_'
   Let $file18 = $path || 'Turnover - All Bus Areas\' || Lower($File_Name18) || $CURRDT || '.xls'
   show '$filename18:' $file_name18
   show '$file18:' $file18
    !VENDKXY
    
  Open $file
       As 1
       For-Writing
       Record=1000:Vary
              
  Open $file1
       As 2
       For-Writing
       Record=1000:Vary
       
   Open $file2
       As 3 
       For-Writing
       Record=1000:Vary
       
   Open $file3
       As 4 
       For-Writing
       Record=1000:Vary
       
   Open $file4
       As 5
       For-Writing
       Record=1000:Vary
       
   Open $file5
       As 6
       For-Writing
       Record=1000:Vary
       
   Open $file6
       As 7
       For-Writing
       Record=1000:Vary
       
   Open $file7
       As 8
       For-Writing
       Record=1000:Vary
       
   Open $file8
       As 9
       For-Writing
       Record=1000:Vary
   
   Open $file9
       As 11
       For-Writing
       Record=1000:Vary
      
  Open $file10
      As 12
      For-Writing
      Record=1000:Vary
      
   Open $file11
       As 14
       For-Writing
       Record=1000:Vary
       
   Open $file12
       As 15
       For-Writing
       Record=1000:Vary
       
   Open $file13
       As 16
       For-Writing
       Record=1000:Vary
       
   Open $file14
       As 17
       For-Writing
       Record=1000:Vary
    
    !VENDKXY   
    Open $file18
       As 18
       For-Writing
       Record=1000:Vary    
    !VENDKXY          
End-Procedure



#include 'curdttim.sqc'  !get-current-datetime procedure
#include 'datetime.sqc'  !routines for date and time formatting
#include 'number.sqc'    !routines to format numbers
#include 'stdapi.sqc'    !routines to update run status
#include 'useprntr.sqc'   
#include 'gexrnctl.sqc'  !for Run-Cntrl-Parameters
#include 'askaod.sqc'