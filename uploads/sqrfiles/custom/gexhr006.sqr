!***********************************************************************
!  GEXHR006:  Service Awards Anniversary Report                        *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXHR006:             Service Awards Anniversary Report              *
!                                                                      *        
! Narrative:		This program will produce a service awards     *
!                       anniversary report.                            *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!			      #debug8 key variable values              *
!			      #debug7 data returned from sql calls     * 
!                                                                      *  
! SQL Tables:		gex_dept_tbl                                   *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                                                                      *
! Written by:		Jim Hutchison  01/27/98                        *       
!                                                                      *
! Normally Run:		On Demand                                      *
!                                                                      *
! Control Parms:		FOR WHERE CLAUSE:                      *
!				  Company Division Code                *
!				  Company  	                       *
!				  Paygroup  	                       *
!				  Deptid	                       *
!				  Employee Status	               *
!				  Account Code                         *       
!				  From Date                            *      
!				  Thru Date                            *
!				  As Of Date                           *
!                                                                      *
!                       GEX_RC_HR.GEXHR006_Option                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!   INITIALS	DATE		DESCRIPTION OF THE CHANGE              *
!***********************************************************************
!  JDH    01/27/98     Initial Creation                                *
!  JDH    10/19/98     Corrected logic that determines whether         *
!                      service date falls within date range.           *
!                      Added deptid exclusion parameter.               *
!  SCM    04/04/2001   Changed Deptid exclusion parameter to Deptid    *
!                      Inclusion.  Added scroll bar/code for entering  *
!                      multiple service years.   Added evaluation      *
!                      for 60 years of service. Added new (gexxx958)   *
!                      sqc to select runctl values for service years.  *
!                      It is needed to display service years values    *         
!                      on cover page of report.  Added new para (P450) * 
!                      for comparing runctl w/service years calculation*
!                                                                      *
!  AXL    08/03/2001   Show employee home address instead of location  *
!                                                                      *
!  AXL    05/19/2004   Swap ORIG_HIRE_DT for SERVICE_DT in NVL select  *
!                      stmt.                                           *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization	!GEX001-CHG

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do P100-Process-Main
  do Stdapi-Term
  Show 'Successful end of report'
end-report


begin-heading 7
#Include 'stdhdg01.sqc'

  Let $X000_temp_out = 'Sorted by ' || $X000_ORDER_BY
  Print $X000_temp_out         (3,)  center
  Let $X000_temp_out = 'Report as of ' || $X000_REPORT_HEADING_ASOFDATE
  Print $X000_temp_out         (4,)  center

  PRINT $ReportTitle2     (5,)       center
  PRINT 'Company'         (+2,1)
  PRINT 'Acct Code'       (0,15)
  PRINT 'Department'      (0,28)
  PRINT 'Employee Name'   (0,42)
  PRINT 'Empl ID'         (0,67)
  PRINT 'Sex'             (0,81)	!GEX001-ADD
  !PRINT 'Location'        (0,98)	!GEX001-ADD
  PRINT 'Hire Date'       (0,89)	!GEX001-CHG
  PRINT 'Service Date'    (0,101)	!GEX001-CHG
  PRINT 'Years'           (0,120)	!GEX001-CHG
  Print 'Address'         (0,128)

  Let #Line-Count = 8

end-heading


begin-procedure Init-Report
  let $ReportID    = 'GEXHR006'
  let $ReportTitle = 'SERVICE AWARDS ANNIVERSARIES'
  do Stdapi-Init

  Show '$ReportID=' $ReportID
  Show '$ReportTitle=' $ReportTitle
  Show '$ReportDate=' $ReportDate
  Show '$ReportTime=' $ReportTime

  if $prcs_process_instance = ''
    do Ask-As-of-Date
    Let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate
    do P020-Get-Date-Values
    let $GEXXX907_INCLUDE_DIV_CD_CRITERIA           = '1=1'           
    let $GEXXX900_INCLUDE_COMPANY_CRITERIA          = '1=1'
    let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1' 
    let $GEXXX902_INCLUDE_DEPTID_CRITERIA           = '1=1'              !SCM 04/04/2001
!    let $GEXXX902_EXCLUDE_DEPTID_CRITERIA	          = '1=1'        !SCM 04/04/2001
    let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA         = '1=1'
    let $GEXXX958_INCLUDE_SERVICE_YEARS_CRITERIA    = '1=1'              !SCM 04/04/2001
    let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA          = '1=1'
    let $GEX_RC_HR.GEXHR006_Option                  = 'ALL'
    let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate
    let $X000_ORDER_BY = ' '

  Else

    Do GEXRCHR1-SELECT-PARAMETERS

    let $FromDate = &GEX_RC_HR.FROMDATE
    let $ThruDate = &GEX_RC_HR.THRUDATE

    Let $GEXXX900_Company_Alias  = 'J.COMPANY'
    Do GEXXX900-Select-Company-Parameters

    Let $GEXXX901_Company_Alias  = 'J.COMPANY'
    Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
    Do GEXXX901-Select-Company-Paygroup-Parameters

    Let $GEXXX902_Deptid_Alias = 'J.DEPTID'
    Do GEXXX902-Select-Deptid-Parameters

    Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'
    Do GEXXX903-Select-Emp-Stat-Parameters

    Let $GEXXX907_Div_CD_Alias = 'GDT.GEX_COMPANY_DIV_CD'                    
    Do GEXXX907-Select-Div-CD-Parameters 
          
    Let $GEXXX909_Acct_CD_Alias = 'J.ACCT_CD'
    Do GEXXX909-Select-Acct-CD-Parameters

    Do GEXXX958-Select-Service_Years-Parameters               !SCM 04/04/2001
    display 'Service_Years_Display_Criteria is:   ' noline
    display $GEXXX958_INCLUDE_SERVICE_YEARS_DISPLAY_CRITERIA
    display ' '
    display 'Service_Years_Criteria is:  ' noline
    display $GEXXX958_INCLUDE_SERVICE_YEARS_CRITERIA
    

    Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_HR.AsOfDate
    If Rtrim ($GEX_RC_HR.AsOfDate, ' ') = ''
      Let $X000_WHERE_SELECT_ASOFDATE = $AsOfToday
    End-If
  End-If

  Do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')

  do Format-DateTime($FromDate, $FromDate_YMD, {DEFYMD}, '', '')
  let $FromDate_YY   = SUBSTR($FromDate_YMD,1,2)
  let $FromDate_MMDD = SUBSTR($FromDate_YMD,4,2) || SUBSTR($FromDate_YMD,7,2)
  do Format-DateTime($ThruDate, $ThruDate_YMD, {DEFYMD}, '', '')
  let $ThruDate_YY   = SUBSTR($ThruDate_YMD,1,2)
  let $ThruDate_MMDD = SUBSTR($ThruDate_YMD,4,2) || SUBSTR($ThruDate_YMD,7,2)
  do Format-DateTime($FromDate, $FromDate_MDY, {DEFMDY}, '', '')
  do Format-DateTime($ThruDate, $ThruDate_MDY, {DEFMDY}, '', '')

  let $ReportTitle2 = 'from '||$FromDate_MDY||' to '||$ThruDate_MDY

  Let $X000_ORDER_BY = 'Department, Acct Code, Employee Name'

  Show '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  Show '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA
  Show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA
!  Show '$GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA           ='   $GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA   !SCM 04/04/2001
  Show '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA    !SCM 04/04/2001
  Show '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA
  Show '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA
  Show '$GEXXX958_INCLUDE_SERVICE_YEARS_DISPLAY_CRITERIA    ='   $GEXXX958_INCLUDE_SERVICE_YEARS_DISPLAY_CRITERIA  !SCM 04/04/2001
  Show '$GEX_RC_HR.GEXHR006_Option                          ='   $GEX_RC_HR.GEXHR006_Option
  Show '$X000_WHERE_SELECT_ASOFDATE ='   $X000_WHERE_SELECT_ASOFDATE
  Show '$FromDate =' $FromDate
  Show '$ThruDate =' $ThruDate

  Do P050-Print-Cover-Page
end-procedure


begin-procedure P020-Get-Date-Values
#debug9 Show 'P020-Get-Date-Values'

  do P030-Get-Dates
  while $DateOK <> 'Y'
    do P030-Get-Dates
  end-while
  do Format-DateTime($FromDate, $out1, {DEFDATE}, '', '')
  do Format-DateTime($ThruDate, $out2, {DEFDATE}, '', '')
  display ''
  display 'Report Value:  ' noline
  display $out1 noline
  display ' thru ' noline
  display $out2
end-procedure


begin-procedure P030-Get-Dates
#debug9 Show 'P030-Get-Dates'

  move 'Y' to $DateOK
  if $FromDateOK <> 'Y'
    display ''
    input $FromDate 'Enter the ''From Date'' ({Prompt-Date}) for this report'
    move {PDelimiter} to $DDelimiter
    do Format-DateTime($FromDate,$FromDate,{Prompt-Mask},'','native')
    do Validate-Native-Date($FromDate,$DateOK)
    if $DateOK = 'N'
      display '**** This is an invalid date, please reenter ****'
    end-if
  end-if

  if $DateOK = 'Y'
    move 'Y' to $FromDateOK
    display ''
    input $ThruDate 'Enter the ''Thru Date'' ({Prompt-Date}) for this report'
    move {PDelimiter} to $DDelimiter
    do Format-DateTime($ThruDate,$ThruDate,{Prompt-Mask},'','native')
    do Validate-Native-Date($ThruDate,$DateOK)
    if $DateOK = 'N'
      display '**** This is an invalid date, please reenter ****'
    end-if
    if $DateOK = 'Y'
      do P040-Check-Dates
    end-if
  end-if
end-procedure


begin-procedure P040-Check-Dates
#debug9 Show 'P040-Check-Dates'

  do Format-DateTime($FromDate,$out1,{DEFCMP},'','')
  do Format-DateTime($ThruDate,$out2,{DEFCMP},'','')
  if $out1 > $out2
    display ''
    display 'The ''From Date'' can not be greater than the ''Thru Date'''
    move 'N' to $DateOK
    move 'N' to $FromDateOK
  else
    do Diff-Date($ThruDate,$FromDate,#Years,#Months,#Days)
    if #Years > 0
      display ''
      display 'The Hired Date Range can not exceed one year'
      move 'N' to $DateOK
      move 'N' to $FromDateOK
    end-if
  end-if
end-procedure


begin-procedure P050-Print-Cover-Page
#debug9 Show 'P050-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OPRID          ='                                  (+2,5)
  Print $Prcs_OPRID                                               (0,+2)
  Print '$PRCS_RUN_CNTL_ID    ='                                  (+1,5)
  Print $PRCS_RUN_CNTL_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+2,5)
  Print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA                 (0,+2)
  Print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA                (0,+2)
  Print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,5)
  Print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA       (0,+2)
!  Print '$GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,5)    !SCM 04/04/2001
!  Print $GEXXX902_EXCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)   !SCM 04/04/2001
  Print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,5)     !SCM 04/04/2001
  Print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)   !SCM 04/04/2001
  Print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,5)
  Print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA               (0,+2)

  Print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA                (0,+2)
  Print '$GEXXX958_INCLUDE_SERVICE_YEARS_DISPLAY_CRITERIA    ='   (+1,5)     !SCM 04/04/2001
  Print $GEXXX958_INCLUDE_SERVICE_YEARS_DISPLAY_CRITERIA          (0,+2)     !SCM 04/04/2001

  Print '$FromDate : '                                        (+2,5) 
  Print $FromDate                                             (0,+2) 
  Print '$ThruDate : '                                        (+1,5) 
  Print $ThruDate                                             (0,+2) 

  Print 'As Of Date :'                                        (+2,5)
  Print $X000_REPORT_HEADING_ASOFDATE                         (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $X000_ORDER_BY                                        (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
  Let #PAGE-COUNT = 1
End-Procedure


begin-procedure P100-Process-Main
#debug9 Show 'P100-Process-Main'

  Let $Data-Found-Flag = 'N'
  let $Service_Years_Match_Runctl = 'N'

begin-SELECT
J.COMPANY  ()  on-break  print=never
                         before=P200-Before-Company-Change
J.DEPTID   ()  on-break  print=never
                         after=P300-After-DeptID-Change
J.EMPLID
J.ACCT_CD
PD.NAME
PD.SEX
PD.ADDRESS1	!AXL    08/03/2001
PD.ADDRESS2	!AXL    08/03/2001
PD.ADDRESS3	!AXL    08/03/2001
PD.ADDRESS4	!AXL    08/03/2001
PD.CITY		!AXL    08/03/2001
PD.STATE	!AXL    08/03/2001
PD.postal	!AXL    08/03/2001
J.LOCATION
E.HIRE_DT
!NVL(E.CMPNY_SENIORITY_DT,E.SERVICE_DT)   &ServiceDate	GEX001-ADD
!E.SERVICE_DT						GEX001-DEL
E.CMPNY_SENIORITY_DT &ServiceDate
!NVL(E.CMPNY_SENIORITY_DT,PD.ORIG_HIRE_DT) &ServiceDate  !AXL 5/19/2004  !RBC  9/19/2007

  do Diff-Date($ThruDate,&ServiceDate,#Service_Years,#Service_Months,#Service_Days)

  if $GEX_RC_HR.GEXHR006_Option = 'ALL'
    evaluate #Service_Years
      when =  1
      when =  3
      when =  5
      when = 10
      when = 15
      when = 20
      when = 25
      when = 30
      when = 35
      when = 40
      when = 45
      when = 50
      when = 60                      !SCM 04/04/2001  Added this one
        do P400-Check-Date-Range
    end-evaluate
  else
!        SCM 04/04/2001  This was previously an option on the translate value for service yrs. 
!        Translate option was inactivated, commented code.
!    evaluate #Service_Years                        !SCM 04/04/2001    begin
!      when =  1                                     
!      when =  3                                     
!        do P400-Check-Date-Range                    
!    end-evaluate                                   
!              
     move #Service_Years to $Service_Years 88      
     do P450-Lookup-Service-On-Runctl
     if $Service_Years_Match_Runctl = 'Y'
        let $Service_Years_Match_Runctl = 'N'
        do P400-Check-Date-Range                                         
     end-if                                        !SCM 04/04/2001     end
  end-if
!  SCM 04/04/2001        END MOD  Added above code to match service years with runctl values

 FROM ps_gex_dept_tbl     gdt,
      PS_PERSONAL_DATA    pd,
      PS_EMPLOYMENT       e,
      PS_JOB              j

WHERE NVL(E.CMPNY_SENIORITY_DT,E.SERVICE_DT) IS NOT NULL
  AND PD.EMPLID           = E.EMPLID
  AND E.EMPLID            = J.EMPLID
  AND E.EMPL_RCD         = J.EMPL_RCD
  AND J.EFFDT             =
     (SELECT MAX(EFFDT)
        FROM PS_JOB
       WHERE EMPLID     = J.EMPLID
         AND EMPL_RCD  = J.EMPL_RCD
         AND EFFDT     <= $X000_WHERE_SELECT_ASOFDATE)
  AND J.EFFSEQ            =
     (SELECT MAX(EFFSEQ)
        FROM PS_JOB
       WHERE EMPLID     = J.EMPLID
         AND EMPL_RCD  = J.EMPL_RCD
         AND EFFDT      = J.EFFDT)
AND [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
!AND [$GEXXX902_EXCLUDE_DEPTID_CRITERIA]                   !SCM 04/04/2001 removed
AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]                    !SCM 04/04/2001 added
AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
AND [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
And    j.deptid                  = gdt.deptid
And    gdt.effdt                 =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt             <= $X000_WHERE_SELECT_ASOFDATE)
And    gdt.sequence_number       =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt              = gdt.effdt)
ORDER BY J.DEPTID, J.ACCT_CD, PD.NAME
end-SELECT
  If $Data-Found-Flag = 'N'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If
end-procedure


begin-procedure P200-Before-Company-Change
#debug9 Show 'P200-Before-Company-Change'

  Let $Company = &J.COMPANY
  do Get-Company-Data
end-procedure


begin-procedure P300-After-DeptID-Change
#debug9 Show 'P300-After-DeptID-Change'

  if $OK-To-Advance-Page = 'Y'
    new-page
    move 'N' to $OK-To-Advance-Page
  end-if
end-procedure


begin-procedure P400-Check-Date-Range
#debug9 Show 'P400-Check-Date-Range'

  do Format-DateTime(&ServiceDate, $ServiceDate_YMD, {DEFYMD}, '', '')
  let $Service_YY   = SUBSTR($ServiceDate_YMD,1,2)
  let $Service_MMDD = SUBSTR($ServiceDate_YMD,4,2) || SUBSTR($ServiceDate_YMD,7,2)

  if $FromDate_YY = $ThruDate_YY
    if $Service_MMDD >= $FromDate_MMDD and
       $Service_MMDD <= $ThruDate_MMDD
      do P500-Create-Report
    end-if
  else
    if $Service_MMDD <= $ThruDate_MMDD
      do P500-Create-Report
    end-if
  end-if
end-procedure

!**********************************************
begin-procedure P450-Lookup-Service-On-Runctl              !SCM 04/04/2001 New Procedure 
!**********************************************
Begin-Select
RC.SERVICE_YEARS

  move &rc.service_years to $rc_service_years 88

  if $rc_service_years = $Service_Years
    let $Service_Years_Match_Runctl = 'Y'
  end-if

from PS_GEX_RC_SERV_YRS RC
where RC.OPRID = [$OprID]                                 !parameters are set in gexxx958.sqc
  and RC.RUN_CNTL_ID = [$Run_Cntl_ID] 

End-Select
end-procedure

begin-procedure P500-Create-Report
#debug9 Show 'P500-Create-Report'

  Let $OK-To-Advance-Page = 'Y'
  Let $Data-Found-Flag = 'Y'

  Let $citystatezip = Rtrim(&pd.city,' ') || ', ' || &pd.state || '  ' || &pd.postal

  If #Line-Count > 73
    New-Page
  End-If

  print $CompanyNameAbbrv       (+1,1)
  print &J.ACCT_CD              (,15)
  print &J.DEPTID               (,28)
  print &PD.NAME                (,42)
  print &J.EMPLID               (,67)
  print &PD.SEX                 (,81)	!GEX001-ADD
  do Format-DateTime(&E.HIRE_DT, $out, {DEFDATE}, '', '')
  print $out                    (,89)	!GEX001-CHG
  do Format-DateTime(&ServiceDate, $out, {DEFDATE}, '', '')
  print $out                    (,101)	!GEX001-CHG
  do Format-Number(#Service_Years, $out, '99')
  print $out                    (,123)	!GEX001-CHG

  !AXL 08/03/2001 - Begin
  !print &J.LOCATION             (,98)	!GEX001-ADD
  
  If Rtrim(&pd.address1,' ') != ''
    Add 1 to #Line-Count
    Print &pd.address1         (,128)
  End-If

  If Rtrim(&pd.address2,' ') != ''
    Add 1 to #Line-Count
    Print &pd.address2         (+1,128)
  End-If

  If Rtrim(&pd.address3,' ') != ''
    Add 1 to #Line-Count
    Print &pd.address3         (+1,128)
  End-If

  If Rtrim(&pd.address4,' ') != ''
    Add 1 to #Line-Count
    Print &pd.address4         (+1,128)
  End-If

  Print $citystatezip          (+1,128)

  Print ' '                    (+1,128)
  !AXL 08/03/2001 - End

end-procedure


#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table

#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx904.sqc'  !Get grade multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx921.sqc'  !Get hr single row run control
#include 'gexxx958.sqc'  !Get service years multiple row run control        !SCM 04/04/2001


#include 'askaod.sqc'    !Ask As Of Date input
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
