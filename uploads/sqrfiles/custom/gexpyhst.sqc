!***********************************************************************
!GEXPYHST: This procedure handles GEXPYHST table, which holds all rows * 
!from GEXPYUPD for the lenght of 60 days.                              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *
!***********************************************************************
!           RKK         11/01/2009     INITIAL CREATION                *
!***********************************************************************
!***********************************************************************
begin-procedure checking-gexpycur
#debug9 show 'checking-gexpycur'

begin-select
cur.pay_end_dt

   let $Found-end-dt = 'Y'   

from ps_gex_r_gexpycur cur
where cur.pay_end_dt = $pay_end_dt
end-select

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure insert-into-gexpyhst
  show 'insert-into-gexpyhst'

do Get-Current-DateTime

begin-sql on-error=sql-error-found('insert-gexpyhst-table')
INSERT INTO sysadm.PS_GEX_R_GEXPYHST
(SELECT b.company, 
        b.paygroup, 
        b.deptid, 
        b.trans_tot, 
        b.hrs_sent_tot, 
        b.hrs_rej_tot, 
        b.rx_hrs_add, 
        b.rx_hrs_sub, 
        b.rx_hrs_covrt,
        b.pay_end_dt,
        b.date_loaded, 
        b.reporting_id
        from sysadm.PS_GEX_R_GEXPYCUR b
        where not exists(select a.* from sysadm.ps_gex_r_gexpyhst a
		  where (b.company = a.company
          and b.paygroup = a.paygroup
          and b.deptid = a.deptid
          and b.pay_end_dt = a.pay_end_dt
          and b.reporting_id = a.reporting_id))) 
end-sql

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure insert-into-gexpycur
  show 'insert-into-gexpycur'

do Get-Current-DateTime

  show $pay_end_dt
  show $AsOfToday
  show $ReportID

begin-sql on-error=sql-error-found('insert-gexpycur-table')
INSERT INTO sysadm.PS_GEX_R_GEXPYCUR
(SELECT a.company, 
        a.paygroup, 
        a.deptid, 
        a.trans_tot, 
        a.hrs_sent_tot, 
        a.hrs_rej_tot, 
        a.rx_hrs_add, 
        a.rx_hrs_sub, 
        a.rx_hrs_covrt, 
        $pay_end_dt,
        $AsOfToday,
        $ReportID
        from [$table_name] a
        where not exists (select 'X' from sysadm.ps_gex_r_gexpycur b
		where b.company = a.company
		and b.paygroup = a.paygroup
		and b.deptid = a.deptid
		and b.pay_end_dt = $pay_end_dt))

 
end-sql

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure insert-into-gexpycur-smart-track
  show 'insert-into-gexpycur-smart-track'

do Get-Current-DateTime

#debug8 show $company_upd
#debug8 show $paygroup_upd
#debug8 show $store_upd
#debug8 show #trans_store_total
#debug8 show #hrs_sent_total
#debug8 show #hrs_rej_total
#debug8 show #rx_hrs_add
#debug8 show #rx_hrs_sub
#debug8 show #rx_hrs_covrt
#debug8 show $pay_end_dt
#debug8 show $AsOfToday
#debug8 show $ReportID

begin-sql on-error=sql-error-found('insert-gexpycur-smart-track')
INSERT INTO sysadm.PS_GEX_R_GEXPYCUR (COMPANY,PAYGROUP,DEPTID,TRANS_TOT,HRS_SENT_TOT,HRS_REJ_TOT,RX_HRS_ADD,RX_HRS_SUB,rx_hrs_covrt,pay_end_dt,date_loaded,reporting_id)
VALUES ($company_upd,$paygroup_upd,$store_upd,#trans_store_total,#hrs_sent_total,#hrs_rej_total,#rx_hrs_add,#rx_hrs_sub,#rx_hrs_covrt,$pay_end_dt,$AsOfToday,$ReportID)
end-sql

end-procedure
!*********************************************************************
!select from GEX_R_GEXPYHST
!*********************************************************************
begin-procedure select-from-gexpyhst
  show 'select-from-gexpyhst'

do Get-Current-DateTime
let $ThruDate = dateadd(strtodate($AsOfToday), 'DAY' , -11)

begin-select on-error=sql-error-found('select-from-gexpyhst')
 
SUM(HST.TRANS_TOT) &HST.TRANS_TOT
SUM(HST.HRS_SENT_TOT) &HST.HRS_SENT_TOT
SUM(HST.HRS_REJ_TOT) &HST.HRS_REJ_TOT

   move &HST.TRANS_TOT    to #HST_trans_store_total
   move &HST.HRS_SENT_TOT to #HST_hrs_sent_total
   move &HST.HRS_REJ_TOT  to #HST_hrs_rej_total

FROM sysadm.PS_GEX_R_GEXPYHST HST
where HST.COMPANY = $aud_company
  and HST.PAYGROUP = $aud_paygroup
  and HST.DEPTID = $DEPTID_save
  and HST.DATE_LOADED between $ThruDate and $AsOfToday
  and HST.PAY_END_DT <> $PAY_END_DT
group by hst.company, hst.paygroup,hst.deptid

end-select

end-procedure
!*********************************************************************
!select from GEX_R_GEXPYHST against CURRENT
!*********************************************************************
begin-procedure select-from-gexpyhst-current
  show 'select-from-gexpyhst-current'

begin-select on-error=sql-error-found('select-from-gexpyhst-current')
 
SUM(HST1.TRANS_TOT) &HST1.TRANS_TOT
SUM(HST1.HRS_SENT_TOT) &HST1.HRS_SENT_TOT
SUM(HST1.HRS_REJ_TOT) &HST1.HRS_REJ_TOT
HST1.COMPANY
HST1.PAYGROUP
HST1.DEPTID

   move &HST1.TRANS_TOT    to #HST_trans_store_total
   move &HST1.HRS_SENT_TOT to #HST_hrs_sent_total
   move &HST1.HRS_REJ_TOT  to #HST_hrs_rej_total
   let $aud_company = &HST1.COMPANY
   let $aud_paygroup = &HST1.PAYGROUP
   let $DEPTID_save = &HST1.DEPTID
   do print-store-details-missing

FROM sysadm.PS_GEX_R_GEXPYHST HST1
where not exists (select * from sysadm.PS_GEX_R_GEXPYCUR PSD1
where PSD1.COMPANY = hst1.company
and   PSD1.PAYGROUP = hst1.paygroup
and   PSD1.DEPTID = hst1.deptid)
group by hst1.company, hst1.paygroup,hst1.deptid

end-select

end-procedure
!*********************************************************************
! Update existing store row in history table - Transaction processing 
!*********************************************************************
begin-procedure update-history-table1
  show 'update-history-table1'
#debug8 show 'company_upd: ' $company_upd
#debug8 show 'paygroup_upd: ' $paygroup_upd
#debug8 show 'store_upd: ' $store_upd

begin-SELECT on-error=sql-error-found('update-history-table1')
STT1.COMPANY
STT1.PAYGROUP
STT1.DEPTID
STT1.TRANS_TOT
STT1.HRS_SENT_TOT
STT1.HRS_REJ_TOT
STT1.RX_HRS_COVRT

   move &STT1.TRANS_TOT to #trans_tot
   move &STT1.HRS_SENT_TOT to #sent_tot
   move &STT1.HRS_REJ_TOT to #rej_tot
   move &STT1.RX_HRS_COVRT to #hrs_covrt


from sysadm.PS_GEX_R_GEXPYCUR STT1
where STT1.COMPANY = $company_upd
and   STT1.PAYGROUP = $paygroup_upd
and   STT1.DEPTID = $store_upd
end-SELECT

#debug8 show 'trans_tot: ' #trans_tot
#debug8 show 'sent_tot: ' #sent_tot
#debug8 show 'rej_tot: ' #rej_tot
#debug8 show 'hrs_covrt: ' #hrs_covrt

#debug8 show 'trans_store_total: ' #trans_store_total
#debug8 show 'hrs_sent_total: ' #hrs_sent_total
#debug8 show 'hrs_rej_total: ' #hrs_rej_total
#debug8 show 'rx_hrs_covrt: ' #rx_hrs_covrt

begin-sql on-error=sql-error-found('update-gexpyhst-table1')
UPDATE sysadm.PS_GEX_R_GEXPYCUR
set TRANS_TOT = #trans_tot + #trans_store_total,
    HRS_SENT_TOT = #sent_tot + #hrs_sent_total,
    HRS_REJ_TOT = #rej_tot + #hrs_rej_total,
    RX_HRS_COVRT = #hrs_covrt + #rx_hrs_covrt,
    REPORTING_ID = $ReportID

where COMPANY = $company_upd
  and PAYGROUP = $paygroup_upd
  and DEPTID = $store_upd
end-sql    

end-procedure
!**********************************************************************
begin-procedure delete-prior-entries
!**********************************************************************
  show 'delete-prior-entries'

do Get-Current-DateTime
let $DeleteDate = dateadd(strtodate($AsOfToday), 'DAY' , -11)

begin-sql
delete from sysadm.PS_GEX_R_GEXPYHST 
where DATE_LOADED < $DeleteDate
end-sql

end-procedure
!**********************************************************************
begin-procedure delete-curr-entries
!**********************************************************************
  show 'delete-curr-entries'

begin-sql
delete from sysadm.PS_GEX_R_GEXPYCUR 
end-sql

end-procedure
!*********************************************************************
!Create temporary table for holding store audit details
!*********************************************************************
begin-procedure create-temp-table

begin-sql on-error=sql-error-found('create-temp-table')
CREATE TABLE [$table_name] (
       COMPANY      VARCHAR2(3) NOT NULL,
       PAYGROUP     VARCHAR2(3) NOT NULL,
       DEPTID       VARCHAR2(10) NOT NULL,
       TRANS_TOT    NUMBER(7,2) NOT NULL,
       HRS_SENT_TOT NUMBER(7,2) NOT NULL,
       HRS_REJ_TOT  NUMBER(7,2) NOT NULL,
       RX_HRS_ADD   NUMBER(7,2) NOT NULL,
       RX_HRS_SUB   NUMBER(7,2) NOT NULL,
       RX_HRS_COVRT NUMBER(7,2) NOT NULL)
       TABLESPACE TE7TOOLS001
end-sql

end-procedure
!*********************************************************************
!Populate temp table with store totals
!*********************************************************************
begin-procedure process-temp-table

let $found = 'N'
!display 'Processing temp table for: ' noline
!display $company_upd noline
!display '/' noline
!display $paygroup_upd noline
!display '/' noline
!display $store_upd

  show 'company_upd: ' $company_upd
  show 'paygroup_upd: ' $paygroup_upd
  show 'store_upd: ' $store_upd


begin-SELECT on-error=sql-error-found('process-temp-table')
STT.COMPANY
STT.PAYGROUP
STT.DEPTID
STT.TRANS_TOT
STT.HRS_SENT_TOT
STT.HRS_REJ_TOT
STT.RX_HRS_ADD
STT.RX_HRS_SUB
STT.RX_HRS_COVRT

  move 'Y' to $found

from [$table_name] STT
where STT.COMPANY = $company_upd
and   STT.PAYGROUP = $paygroup_upd
and   STT.DEPTID = $store_upd
end-SELECT

if $found = 'N'
   do insert-temp-table
else
   if $trans_processing = 'Y'
      do update-temp-table1
      do update-history-table1
!   else
!      do update-temp-table2
!      do update-history-table2
   end-if
end-if

move 0 to #trans_store_total
move 0 to #hrs_sent_total
move 0 to #hrs_rej_total
move 0 to #rx_hrs_add
move 0 to #rx_hrs_sub
move 0 to #rx_hrs_covrt

end-procedure
!*********************************************************************
! Insert a new store row in temp table
!*********************************************************************
begin-procedure insert-temp-table

if $company_upd = ''
   let $company_upd = ' '
end-if

if $paygroup_upd = ''
   let $paygroup_upd = ' '
end-if

if $store_upd = ''
   let $store_upd = ' '
end-if

begin-sql on-error=sql-error-found('insert-temp-table')
INSERT INTO [$table_name] (
COMPANY,
PAYGROUP,
DEPTID,
TRANS_TOT,
HRS_SENT_TOT,
HRS_REJ_TOT,
RX_HRS_ADD,
RX_HRS_SUB,
RX_HRS_COVRT)
VALUES (
$company_upd,
$paygroup_upd,
$store_upd,
#trans_store_total,
#hrs_sent_total,
#hrs_rej_total,
#rx_hrs_add,
#rx_hrs_sub,
#rx_hrs_covrt)
end-sql

end-procedure
!*********************************************************************
! Update existing store row in temp table - Transaction processing 
!*********************************************************************
begin-procedure update-temp-table1

move &STT.TRANS_TOT to #trans_tot
move &STT.HRS_SENT_TOT to #sent_tot
move &STT.HRS_REJ_TOT to #rej_tot
move &STT.RX_HRS_COVRT to #hrs_covrt

begin-sql on-error=sql-error-found('update-temp-table2')
UPDATE [$table_name]
set TRANS_TOT = #trans_tot + #trans_store_total,
    HRS_SENT_TOT = #sent_tot + #hrs_sent_total,
    HRS_REJ_TOT = #rej_tot + #hrs_rej_total,
    RX_HRS_COVRT = #hrs_covrt + #rx_hrs_covrt

where COMPANY = $company_upd
  and PAYGROUP = $paygroup_upd
  and DEPTID = $store_upd
end-sql 
   
end-procedure
!*********************************************************************
! Update existing store row in temp table - Rx Hours Adjustment
!*********************************************************************
begin-procedure update-temp-table2

move &STT.RX_HRS_ADD to #hrs_add
move &STT.RX_HRS_SUB to #hrs_sub
move &STT.RX_HRS_COVRT to #hrs_covrt

let #rx_add_upd = #hrs_add + #rx_hrs_add
let #rx_sub_upd = #hrs_sub + #rx_hrs_sub
let #rx_covrt_upd = #hrs_covrt + #rx_hrs_covrt

begin-sql on-error=sql-error-found('update-temp-table2')
UPDATE [$table_name]
set RX_HRS_ADD = #rx_add_upd,
    RX_HRS_SUB = #rx_sub_upd,
    RX_HRS_COVRT = #rx_covrt_upd
where COMPANY = $company_upd
  and PAYGROUP = $paygroup_upd
  and DEPTID = $store_upd
end-sql    

end-procedure
!*********************************************************************
!Drop temporary reporting table
!*********************************************************************
begin-procedure drop-wrk-table

begin-sql on-error=sql-error-found('drop-wrk-table')
DROP TABLE [$table_name]
end-sql

end-procedure
!************************************************************************
begin-procedure Edit-Pay-Calendar

move 'N' to $Found

begin-select LOOPS=1

Y1.PAY_END_DT 
Y1.pay_begin_dt

  move 'Y' to $Found
  move &Y1.PAY_END_DT to $pay_end_dt
  move &Y1.PAY_BEGIN_DT TO $pay_begin_dt
  !SHOW $pay_begin_dt '/' $pay_end_dt

  FROM PS_PAY_CALENDAR Y1

where Y1.PAY_SHEETS_RUN = 'Y'
  AND Y1.PAY_CONFIRM_RUN = 'N'
  AND Y1.RUN_ID > ' '
  AND Y1.PAY_END_DT = (SELECT MAX(PAY_END_DT)
			 FROM PS_PAY_CALENDAR
			WHERE PAY_SHEETS_RUN = 'Y'
			  AND PAY_CONFIRM_RUN = 'N'
			  AND PAY_END_DT <= $AsOfToday)

end-select

!######################################################################
! TESTING
 !let $pay_end_dt = '19-MAY-2007'
 !let $pay_begin_dt = '13-MAY-2007'
!######################################################################

  if $Found = 'N'
    display 'Error --  Pay Calendar not found or not setup for the Run ID.'
    move ' ' to $SlctCompany
  end-if

end-procedure
!*********************************************************************
!This displays all the sql errors occurred in the program
!*********************************************************************
begin-procedure SQL-Error-Found($Proc_Name) 

! RKK - 08/05/2009 - Begin
!  do error-found
!  print 'SQL Error in ' (,43)
!  print $Proc_Name (,35)  
!  print $_sql-error (+1,1) 
!  print 'sql-status:' (+1,1)
!  print #_sql-status () edit 99999 
  show 'SQL Error in '$Proc_Name
  show 'sql-status:'#_sql-status
! RKK - 08/05/2009 - End

end-procedure
!*********************************************************************
!This displays the error messages for the records in progress
!*********************************************************************
begin-procedure Error-Found

  move 'Y' to $ErrorFound
! RKK - 08/05/2009 - Begin
!  do Format-Number(#InputTran, $out, '99999')
!  print $out (+1,1)
  print $GEX_TIME_COLECT (+1,1)
  print $EmplId (+1,8)
! RKK - 08/05/2009 - end
  print $company (,23)
  print $paygroup (,33)

end-procedure

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
