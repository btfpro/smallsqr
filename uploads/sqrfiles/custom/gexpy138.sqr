!***********************************************************************
!  GEXPY138:  OVER 40 REG HRS PER WEEK AUDIT                           *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXPY138:             OVER 40 REG HRS PER WEEK AUDIT                 *
!                                                                      *        
! Narrative:		This program will generate an audit report     *
!                       showing employees with more than 40 hrs for    *
!                       ERNCD's typically associated as Regular        *
!                       earnings.  Anything over 40 hrs should be      *
!                       considered overtime and Payroll may need to    *
!                       react to extreme cases.                        *
!                                                                      *
! #Debugx Used:		#debug9 paragraph trace                        *
!			#debug8 key variable values                    *
!			#debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:		GEX_DEPT_TBL                                   *
!                       PAY_OTH_EARNS                                  *
!                       PERSONAL_DATA                                  *
!                       JOB                                            *
!                                                                      *
! Written by:		Tony Labra  02/25/2004                         *
!                                                                      *
! Normally Run:		Weekly                                         *
!                                                                      *
! Control Parms:		FOR WHERE CLAUSE:                      *
!				  Company Division Code                *
!				  Company  	                       *
!				  Paygroup  	                       *
!				  Deptid	                       *
!				  Employee Status	               *
!				  Employee Type                        *
!                                 Erncd                                *
!				  As Of Date                           *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!	INITIALS	DATE		DESCRIPTION OF THE CHANGE      *
!***********************************************************************
!	AXL		02/25/2004      Initial Creation               *
!                                                                      *
!       AXL             04/01/2004      Remigrated to properly comment *
!                                       out hard-coded values.         *
!                                                                      *
!       AXL             04/19/2004      Allow all earnings to show not *
!                                       just REG codes.                *
!                                                                      *
!       AXL             07/08/2004      Modify format for PDF output.  *
!                                                                      *
!       AXL             08/19/2004      Modify logic to report Single  *
!                                       vs Multiple store based on run *
!                                       control. Allow for PSNT vs     *
!                                       PSUNX formats                  *
!     VENDTKK           01/28/2009 Added INCLUDE GETPOSNM.SQC to pull  *
!                  	           JOBTITLE from POSITION_DATA.DESCR   *
!				   field instead of JOBCODE_TBL.DESCR  *
!			           	                               *	
!***********************************************************************
#include 'setenv.sqc'    !Set environment
!AXL 08/19/2004 - Begin
#ifdef UNIX
#Include 'setup02.sqc'   !Printer and page-size initialization
#end-if

#ifdef NT
begin-setup		  !Printer and page-size initialization
declare-printer DEFAULT-PD
  point-size=7.6
  pitch=17
  font=3
end-declare

#define PAGE_ORIENTATION LANDSCAPE
#define PAGE_MAX_COLS    175
#define PAGE_MAX_LINES   58
#Define ColR 160 

! Define Parameters
    #define PAGE_PAPER_SIZE (11,8.5)
    #define LINE_HEIGHT 9.5 

    #if {PRINTER_TYPE} = 'LINEPRINTER'
      #define PAGE_LEFT_MARG 0.1			!AXL was 0.0
      #define PAGE_TOP_MARG  0.5			!AXL was .125
      #define CHAR_WIDTH 4.32
    #endif
    
declare-layout default
  paper-size={PAGE_PAPER_SIZE}
  orientation={PAGE_ORIENTATION}
  max-columns={PAGE_MAX_COLS}
  max-lines={PAGE_MAX_LINES}
  left-margin={PAGE_LEFT_MARG}
  top-margin={PAGE_TOP_MARG}
  line-height={LINE_HEIGHT}              ! 72/printer_point-size
  char-width={CHAR_WIDTH}                ! points, to handle max cols
end-declare
end-setup   
#end-if
!AXL 08/19/2004 - End

!***********************************************************************
begin-report
!***********************************************************************
#debug9 Show 'begin-report'

  do Init-DateTime           !datetime.sqc
  do Init-Number             !number.sqc
  do Get-Current-DateTime    !curdttim.sqc
  do Init-Report
  do Process-Main
  do Reset                   !reset.sqc
  do Stdapi-Term             !stdapi.sqc
  date-time () HH:MI:SS   &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
  Show 'Successful end of report'
end-report

!***********************************************************************
begin-heading 9 
!***********************************************************************
#debug9 Show 'begin-heading'

  #Include 'stdhdg02.sqc'

  print $ReportTitle_2 (3,) center

  Let $X000_temp_out = 'Sorted by ' || $X000_ORDER_BY
  Print $X000_temp_out         (4,)  center

  do Get-Department-Name

  print 'DeptID'        (4,1)
  print $DeptID         (,13)
  print $DeptName       (,+2)

  print 'Pay End Dt:'          (5,1)
  print $pay_end_heading       (,+1)

  PRINT 'PAY'                  (+2,45)
  PRINT 'ACCT'                 (,57) 
  PRINT 'JOB'                  (,65)
  PRINT ' O/T'                 (,128)
  PRINT ' REG'                 (,137)
  PRINT 'EST O/T'              (,146)

  PRINT 'EMPLOYEE NAME'        (+1,1)
  PRINT 'SSN#'                 (,25) 
  PRINT 'CMPY'                 (,40)
  PRINT 'GRP'                  (,45)
  PRINT 'DPT'                  (,50)
  PRINT 'CD'                   (,57) 
  PRINT 'CD'                   (,65)
  PRINT 'JOB TITLE'            (,75)
  PRINT 'ERNCD'                (,105) 
  PRINT 'RATE '                (,113) 
  PRINT 'HOURS'                (,120)
  PRINT 'HOURS'                (,128)
  PRINT 'HOURS'                (,137)
  PRINT 'HOURS'                (,146)
  print '-'                    (+1,1,159)  Fill
  PRINT ' '                    (+1,1)

  
end-heading

!***********************************************************************
begin-procedure Init-Report
!***********************************************************************
#debug9 Show 'Init-Report'

  move 'OVER 40 HOURS WORKED AUDIT' to $ReportTitle

  let $First = 'Y'
  let #Page_Maximum  = 58         !Maximum physical rows before bottom line

  !AXL 8/19/2004 - Initialize for Mobius
  let $company    = 'XXX'
  let $deptid     = 'XXXX'

  do Stdapi-Init

  Show '$ReportID=' $ReportID
  Show '$ReportTitle=' $ReportTitle

  Let $GEXXX900_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
  Let $GEXXX902_Deptid_Alias   = 'J.DEPTID'
  Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'
  Let $GEXXX907_Div_CD_Alias   = 'GEX_DEPT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias  = 'J.ACCT_CD'
  !Let $GEXXX924_Erncd_Alias    = 'POE.ERNCD'  AXL 4/19/2004
  Let $GEXXX930_Emp_Type_Alias = 'J.EMPL_TYPE'   

  if $prcs_process_instance = ''

    ! 4/19/2004 AXL Disable - Begin
    !Let $ErncdString = ''''
    !Display 'Enter Erncd or leave blank to exit.'
    !While 1=1
    !  Input $In-Erncd Maxlen=10 'Erncd'
    !  Uppercase $In-Erncd
    !  If Rtrim($In-Erncd, ' ') = ''
    !     Concat '''' With $ErncdString
    !     Break
    !  End-If
    !  If $ErncdString <> ''''
    !     Concat ''',''' With $ErncdString
    !  End-If
    !  Concat $In-Erncd With $ErncdString
    !End-While

    !If $ErncdString = ''''''
    !   Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = '1=1'
    !   Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'ALL'
    !Else
    !  Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = $GEXXX924_Erncd_Alias || ' In (' || $ErncdString || ')'
    !  Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = $GEXXX924_INCLUDE_ERNCD_CRITERIA
    !End-If
    ! 4/19/2004 AXL Disable - End

   !AXL 08/19/2004 - Begin
   Display 'Enter Report Type  (S=Single, M=Multiple)'
   While 1=1
    Input $Report_Type Maxlen=1 'Report Type'
    If $Report_Type = 'S' Or
       $Report_Type = 'M' 
      Break
    else
      Show '**Invalid report type indicated. Defaulting to S' 
      let $Report_Type ='S'
    End-If
    End-While
    !AXL 08/19/2004 - End
   
    Let $EmplTypeString = ''''
    Display 'Enter Employee Type or leave blank to exit.'
    While 1=1
      Input $In-EmplType Maxlen=1 'Employee Type'
      Uppercase $In-EmplType
      If Rtrim($In-EmplType, ' ') = ''
        Concat '''' With $EmplTypeString
        Break
      End-If
      If $EmplTypeString <> ''''
        Concat ''',''' With $EmplTypeString
      End-If
      Concat $In-EmplType With $EmplTypeString
    End-While

    If $EmplTypeString = ''''''
      Let $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA = '1=1'
      Let $GEXXX930_INCLUDE_EMP_TYPE_DISPLAY_CRITERIA = 'ALL'
    Else
      Let $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA = $GEXXX930_Emp_Type_Alias || ' In (' || $EmplTypeString || ')'
      Let $GEXXX930_INCLUDE_EMP_TYPE_DISPLAY_CRITERIA = $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA
    End-If

    Do GEXXX950-Input-Parameters

  else
    Do GEXXX922-Select-Parameters

    let $Report_Type = &GEX_RC_PAY.GEX_REPORT_TYPE

    Do GEXXX900-Select-Company-Parameters
    Do GEXXX901-Select-Company-Paygroup-Parameters
    Do GEXXX902-Select-Deptid-Parameters
    Do GEXXX903-Select-Emp-Stat-Parameters
    Do GEXXX907-Select-Div-CD-Parameters 
    Do GEXXX909-Select-Acct-CD-Parameters
    !Do GEXXX924-Select-ERNCD-Parameters   4/19/2004 AXL 
    Do GEXXX930-Select-Emp-Type-Parameters

    Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.AsOfDate
    If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
      Let $X000_WHERE_SELECT_ASOFDATE = $AsOfToday
    End-If
  end-if
  !AXL 08/19/2004 - Begin
  Evaluate $Report_Type
    When='S'
      let $ReportID	= 'PY138A'
      let $ReportTitle_2	= 'For Employees at Single Store'
      let $ee_count       = '#ee_count = 1'
      break
    When='M'
      let $ReportID	= 'PY138B'
      let $ReportTitle_2	= 'For Employees at Multiple Stores'
      let $ee_count       = '#ee_count > 1'
      break
    When-Other
      Show '**Invalid report type indicated. Defaulting to S' 
      let $Report_Type ='S'
      let $ReportID	= 'PY138A'
      let $ReportTitle_2	= 'For Employees at Single Store'
      let $ee_count       = '#ee_count = 1'
  End-Evaluate
  !AXL 08/19/2004 - End

  Do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')
  Let $X000_ORDER_BY = 'Company, Deptid, Emplid '
 
  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  Show '$Report_Type (S-Single/M-Multiple)                  ='   $Report_Type
  Show '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA
  Show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA
  Show '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA
  Show '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA
  Show '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  Show '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA
  !show '$GEXXX924_INCLUDE_ERNCD_CRITERIA                    ='   $GEXXX924_INCLUDE_ERNCD_CRITERIA 
  Show '$GEXXX930_INCLUDE_EMP_TYPE_CRITERIA                 ='   $GEXXX930_Include_Emp_Type_Criteria
 
  Show '$X000_WHERE_SELECT_ASOFDATE ='   $X000_WHERE_SELECT_ASOFDATE

  do Get-Current-Pay-End
  do Print-Cover-Page

end-procedure

!***********************************************************************
Begin-Procedure Get-Current-Pay-End
!***********************************************************************
#debug9 Show 'Get-Current-Pay-End'
Begin-Select Loops=1

x.pay_end_dt

  Do Format-DateTime(&x.pay_end_dt, $pay_end_heading, {DEFDATE}, '', '')
  Show 'Report will contain info for ' $pay_end_heading

  let $pay_end_dt = &x.pay_end_dt
  Show '$pay_end_dt ' $pay_end_dt


from ps_pay_calendar x
Where  x.pay_end_dt         =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  pay_end_dt <= $X000_WHERE_SELECT_ASOFDATE)
       
End-Select
End-Procedure

!***********************************************************************
begin-procedure Print-Cover-Page
!***********************************************************************
#debug9 Show 'Print-Cover-Page'
   
  If $prcs_process_instance <> ''
    Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'      (+5,1)
    Print '$Prcs_OPRID          ='                            (+2,5)
    Print $Prcs_OPRID                                         (0,+2)
    Print '$PRCS_RUN_CNTL_ID    ='                            (+1,5)
    Print $PRCS_RUN_CNTL_ID                                   (0,+2)
  End-If

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$Report_Type (S-Single/M-Multiple)                  ='   (+2,5)
  Print $Report_Type				                  (0,+2)
  Print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+2,5)
  Print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA                 (0,+2)
  Print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA                (0,+2)
  Print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,5)
  Print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA       (0,+2)
  Print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,5)
  Print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)
  Print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,5)
  Print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA               (0,+2)
  Print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,5)
  Print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA                (0,+2)
  !print '$GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA            ='   (+1,5)
  !print $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA                  (0,+2)
  Print '$GEXXX930_INCLUDE_EMP_TYPE_DISPLAY_CRITERIA         ='   (+1,5)
  Print $GEXXX930_INCLUDE_EMP_TYPE_DISPLAY_CRITERIA               (0,+2)
  
  Print 'As Of Date :'                                        (+2,5)
  Print $X000_REPORT_HEADING_ASOFDATE                         (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $X000_ORDER_BY                                        (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
  Let #PAGE-COUNT = 1
End-Procedure

!***********************************************************************
begin-procedure Process-Main
!***********************************************************************
#debug9 Show 'Process-Main'

  Let $Data-Found-Flag = 'N'

begin-SELECT
J.COMPANY	(,) ON-BREAK  LEVEL=1
			PRINT=NEVER
J.DEPTID	(,) ON-BREAK  LEVEL=2
			PRINT=NEVER
			BEFORE=BEFORE-DEPT

J.PAYGROUP
J.EMPLID
J.EMPL_RCD
J.hourly_rt
PD.NAME
gex_dept.gex_company_div_cd

  Let $Data-Found-Flag = 'Y'

  let $emplid    = &J.emplid
  let #empl_rcd  = &J.empl_rcd
  let $name      = &pd.name
  let $paygroup  = &J.PAYGROUP
  Let $Company   = &j.company
  let $Deptid    = &j.DEPTID
  let #hourly_rt = &j.hourly_rt
  let $div_cd    = &gex_dept.gex_company_div_cd

  Do Get-Hrs
 
  if #hrs > 40.01
     Do Get-EE-Counts
     !show 'ee count ' &J.EMPLID ' ' #EE_COUNT
     Let $Ovr40-Found-Flag = 'Y'
     Evaluate $Report_Type
      When='M'
       if #ee_count > 1
          Do Print-Emplid  
       end-if
       break
     When-Other
       if #ee_count = 1
          Do Print-Emplid  
       end-if
     End-Evaluate   
  end-if

  let #hrs = 0
  let #oth_hrs = 0		!AXL 4/19/2004 - Add
  let #tot_hrs = 0		!AXL 4/19/2004 - Add
  let #tot_ot_hrs   = 0		!AXL 8/2/2004 - Add
  let #tot_reg_hrs  = 0		!AXL 8/2/2004 - Add
  let #est_liab_hrs = 0		!AXL 8/2/2004 - Add

FROM PS_JOB j,
     ps_personal_data pd,
     PS_GEX_DEPT_TBL GEX_DEPT

WHERE pd.emplid = j.emplid
    AND j.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB
        WHERE j.EMPLID = EMPLID
          AND j.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $pay_end_dt)
    AND j.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE j.EMPLID = EMPLID
          AND j.EMPL_RCD = EMPL_RCD
          AND j.EFFDT = EFFDT)

    AND GEX_DEPT.DEPTID    = J.DEPTID 

    AND GEX_DEPT.EFFDT =
        (SELECT MAX(EFFDT) FROM   PS_GEX_DEPT_TBL
        WHERE  DEPTID      = J.DEPTID
        AND    EFFDT      <= $pay_end_dt)

    AND GEX_DEPT.SEQUENCE_NUMBER =
        (SELECT MAX(SEQUENCE_NUMBER) FROM   PS_GEX_DEPT_TBL
        WHERE  DEPTID      = GEX_DEPT.DEPTID
        AND    EFFDT       = GEX_DEPT.EFFDT)

   AND   [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
   AND   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
   AND   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
   AND   [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
   AND   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
   AND   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
   AND   [$GEXXX930_INCLUDE_EMP_TYPE_CRITERIA]

Order By  j.company, j.deptid, j.emplid

end-select

  If $Data-Found-Flag = 'N'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  let $deptid = $last_deptid
  let $company = $last_cmpy
 
  let #tot_s = #ind_tot_s + #cod_tot_s + #pod_tot_s + #wshe_tot_s +
               #mod_tot_s + #col_tot_s + #corp_tot_s

  let #tot_cost_s = #ind_tot_cost_s + #cod_tot_cost_s +
                    #pod_tot_cost_s + #wshe_tot_cost_s +
		    #mod_tot_cost_s + #col_tot_cost_s + 
                    #corp_tot_cost_s

    !show '#Current Line s ' #Current-Line
    !show '#Page_Maximum ' #Page_Maximum
    
    if #Current-Line + 15 >= #Page_Maximum
       New-Page
       Do Print-Total
    else
       Do Print-Total
    end-if

   !Do Print-Total
    
end-procedure

!**********************************************************************
begin-procedure BEFORE-DEPT
!**********************************************************************
#debug9 Show 'BEFORE-DEPT'

  !show ' '
  !show '#rpt_count in b4 step ' #rpt_count

   if $first='Y'
      let $first='N'
   else
      if #rpt_count > 0
        new-page
        let #rpt_count = 0
      end-if

   end-if

 !show 'deptid in b4 step ' $deptid

END-PROCEDURE


!***********************************************************************
Begin-Procedure Get-Hrs
!***********************************************************************
Begin-Select

pp.pay_end_dt
pl.company
pl.paygroup
pl.emplid
pl.empl_rcd
PE.deptid
poe.erncd
poe.oth_hrs	   
      !AXL 4/19/2004 New Evaluate code - Begin
      Evaluate &POE.ERNCD
	   When = '001'
           When = '004'
           When = '008'
           When = '140'
           When = '141'
           When = '142'
           When = '143'
           When = '144'
           When = '145'
           When = '146'
           When = '147'
           When = '148'
           When = '149'
           When = '14A'
           When = '150'
           When = '151'
           When = '152'
           When = '153'
           When = '154'
           When = '155'
           When = '156'
           When = '165'
           When = '166'
           When = '176'
           When = '177'
           When = 'REG'
           When = '147'
           When = '148'
           When = '149'
           When = '14A'
           When = '150'
           When = '151'
              add &poe.oth_hrs to #Hrs
              break
           when-other
              add &poe.oth_hrs to #Oth_Hrs
      End-Evaluate
      !AXL 4/19/2004 New Evaluate code - End
         
From   PS_PAY_PAGE PP, 
       PS_PAY_LINE PL, 
       PS_PAY_EARNINGS PE, 
       PS_PAY_OTH_EARNS POE
Where   PL.COMPANY = PP.COMPANY
    AND PL.PAYGROUP = PP.PAYGROUP
    AND PL.PAY_END_DT = PP.PAY_END_DT
    AND PL.OFF_CYCLE = PP.OFF_CYCLE
    AND PL.PAGE_NUM = PP.PAGE_NUM

    AND PE.COMPANY = PP.COMPANY
    AND PE.PAYGROUP = PP.PAYGROUP
    AND PE.PAY_END_DT = PP.PAY_END_DT
    AND PE.OFF_CYCLE = PP.OFF_CYCLE
    AND PE.PAGE_NUM = PP.PAGE_NUM

    And pl.emplid  = $emplid
    And pl.empl_rcd = #empl_rcd
   
    AND PP.PAY_END_DT = $pay_end_dt
    AND PE.earns_end_dt = PE.pay_end_dt
    AND PL.EMPLID = PE.EMPLID
    AND PE.COMPANY = POE.COMPANY
    AND PE.PAYGROUP = POE.PAYGROUP
    AND PE.PAY_END_DT = POE.PAY_END_DT
    AND PE.OFF_CYCLE = POE.OFF_CYCLE
    AND PE.PAGE_NUM = POE.PAGE_NUM
    AND PE.LINE_NUM = POE.LINE_NUM
    AND PE.ADDL_NBR = POE.ADDL_NBR 
    and poe.oth_hrs <> 0
    
Order By pp.pay_end_dt, pl.emplid,pl.empl_rcd,PE.deptid,poe.erncd

End-Select
  
End-Procedure

!AXL 08/19/2004 - Begin
!***********************************************************************
Begin-Procedure Get-EE-Counts
!***********************************************************************
Begin-Select

count(emplid) &EE_COUNT
  let #EE_COUNT = &EE_COUNT

from
(select distinct pex.emplid, pex.deptid
From   PS_PAY_EARNINGS PEX, PS_PAY_OTH_EARNS POEX
Where   PEX.emplid  = $emplid
    And PEX.empl_rcd = #empl_RCD
    AND PEX.PAY_END_DT = $pay_end_dt
    AND PEX.earns_end_dt = PEX.pay_end_dt
    AND PEX.COMPANY = POEX.COMPANY
    AND PEX.PAYGROUP = POEX.PAYGROUP
    AND PEX.PAY_END_DT = POEX.PAY_END_DT
    AND PEX.OFF_CYCLE = POEX.OFF_CYCLE
    AND PEX.PAGE_NUM = POEX.PAGE_NUM
    AND PEX.LINE_NUM = POEX.LINE_NUM
    AND PEX.ADDL_NBR = POEX.ADDL_NBR 
    and POEX.oth_hrs <> 0 
	)

End-select
  
End-Procedure
!AXL 08/19/2004 - End

!***********************************************************************
Begin-Procedure Print-Emplid
!***********************************************************************
Begin-Select

J2.EMPLID		()         ON-BREAK    LEVEL=1
                                               PRINT=NEVER
                                               SAVE=$prev_emplid
                                               Before=Print-Name
                                               AFTER=Emplid-Change
J2.EMPL_RCD
J2.COMPANY  
J2.PAYGROUP
J2.DEPTID
J2.ACCT_CD
J2.JOBCODE
PE2.COMPANY  
PE2.PAYGROUP
PE2.DEPTID
PE2.ACCT_CD
PE2.JOBCODE
poe2.erncd
poe2.comprate_used
poe2.oth_hrs
!VENDTKK Begin   ITG#56786   28-Jan-2009
J2.Position_nbr 
  
        let $jobcode            = &pe2.jobcode
        Do Get-Job-Title
	  Let $Position_Nbr = &J2.Position_nbr
 	 Do Get-Position-Title			 !getposnm.sqc
  	 IF $PosName = '' 
  		Let $jobtitle = $jobtitle
	 Else
 		Let $jobtitle = $PosName
	 End-if
!VENDTKK End   ITG#56786   28-Jan-2009	   


	!show 'poe2.comprate_used ' &poe2.comprate_used
	
        print &PE2.company     	   	(+1,40)
        print &PE2.paygroup		(,45)	
        print &PE2.DEPTID     	   	(,50)
        print &PE2.acct_cd		(,57)			
        print &PE2.jobcode		(,65)		
        print $JobTitle			(,75)
        print &poe2.erncd               (,105)
        print &poe2.comprate_used       (,112)   edit 99.99
        print &poe2.oth_hrs             (,119)   edit 999.99
 
From    PS_JOB J2,
        PS_PAY_EARNINGS PE2,
        PS_PAY_OTH_EARNS POE2

Where   j2.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
        WHERE j2.EMPLID = EMPLID
          AND j2.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $pay_end_dt)
    AND j2.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE j2.EMPLID = EMPLID
          AND j2.EMPL_RCD = EMPL_RCD
          AND j2.EFFDT = EFFDT)
    AND j2.emplid   = $emplid
    And j2.empl_rcd = #empl_rcd

    AND pe2.emplid  = j2.emplid
    And pe2.empl_rcd = j2.empl_rcd
    !AXL 4/19/2004 - Disable - Begin
    !And POE2.ERNCD In (select distinct poe.erncd from ps_earnings_tbl poe
    !   where [$GEXXX924_INCLUDE_ERNCD_CRITERIA]) 
    !AXL 4/19/2004 - Disable - End

    AND Pe2.PAY_END_DT = $pay_end_dt
    AND PE2.earns_end_dt = PE2.pay_end_dt
    AND PE2.COMPANY = POE2.COMPANY
    AND PE2.PAYGROUP = POE2.PAYGROUP
    AND PE2.PAY_END_DT = POE2.PAY_END_DT
    AND PE2.OFF_CYCLE = POE2.OFF_CYCLE
    AND PE2.PAGE_NUM = POE2.PAGE_NUM
    AND PE2.LINE_NUM = POE2.LINE_NUM
    AND PE2.ADDL_NBR = POE2.ADDL_NBR 
   
    AND POE2.OTH_HRS <> 0

Order By j2.emplid,
         j2.deptid,
	 PE2.DEPTID,
	 poe2.erncd
    
End-Select

End-Procedure

!***********************************************************************
Begin-Procedure Print-Name
!***********************************************************************
    
    evaluate $DIV_CD
     when = 'IND'
	    add 1 to #ind_tot_s	
	    break
     when = 'GEM'
     when = 'GPH'
     when = 'RMC'
     when = 'RPH'
            add 1 to #pod_tot_s	
	    break
     when = 'MDR'
	    add 1 to #mod_tot_s	
	    break
     when = 'CP3'
     when = 'CLE'
	    add 1 to #cod_tot_s	
	    break
     when = 'COL'
	    add 1 to #col_tot_s	
     when = 'WHS'
     when = 'CLW'
	    add 1 to #wshe_tot_s	
	    break
     when-other
	    add 1 to #corp_tot_s	
    end-evaluate

    print $NAME                    (+1,1)
    print $EMPLID                  (,25)   edit xxx-xx-xxxx

    add 1 to #rpt_count
  
End-Procedure

!***********************************************************************
Begin-Procedure Emplid-Change
!***********************************************************************

     let #tot_hrs       = #hrs + #oth_hrs	!AXL 4/19/2004 - Add
     let #tot_ot_hrs    = #oth_hrs		!AXL 8/2/2004 - Add
     let #tot_reg_hrs   = #hrs			!AXL 8/2/2004 - Add
     let #est_liab_hrs  = (#tot_hrs - 40 ) - #oth_hrs
     let #est_liab_cost = #est_liab_hrs * .5 * #hourly_rt

     !show 'ee count ' #EE_COUNT ' emplid ' $emplid ' deptid ' $deptid ' #est_liab_cost ' #est_liab_cost  ' #hourly_rt  ' #hourly_rt

	evaluate $DIV_CD
	   when = 'IND'
	        add #est_liab_cost to #ind_tot_cost_s	
	        break
           when = 'GEM'
	   when = 'GPH'
	   when = 'RMC'
	   when = 'RPH'
	        add #est_liab_cost to #pod_tot_cost_s		
	        break
           when = 'MDR'
	        add #est_liab_cost to #mod_tot_cost_s	
	        break
	   when = 'CP3'
           when = 'CLE'
	        add #est_liab_cost to #cod_tot_cost_s		
	        break
	   when = 'COL'
	        add #est_liab_cost to #col_tot_cost_s	
           when = 'WHS'
	   when = 'CLW'
	        add #est_liab_cost to #wshe_tot_cost_s	
	        break
	   when-other
	        add #est_liab_cost to #corp_tot_cost_s	
	 end-evaluate
    
    
     print '-'			(+1,40,111)  Fill
     print 'TOTAL:'		(+1,112)
     print #tot_hrs		(,119)  edit 999.99	!AXL 4/19/2004 - Add
     print #tot_ot_hrs		(,127)  edit 999.99	!AXL 8/2/2004 - Add
     print #tot_reg_hrs		(,136)  edit 999.99	!AXL 8/2/2004 - Add
     print #est_liab_hrs	(,145)  edit 999.99	!AXL 8/2/2004 - Add
     print '_'			(+1,1,160)  Fill
     print 'Cause of Issue'	(+1,1)
     print 'Resolution'		(,25)
     print 'Over-time Owed'	(,50)
     print 'Adjustment processed by pay ending'		(,75)
     print 'Resolved by'	(,125)
     print 'Extension'		(,150)
     print ' ' 		  (+1,40)
     print ' ' 		  (+1,40)
     print ' ' 		  (+1,40)
     print ' ' 		  (+1,40)
     print '_'            (+1,1,160)  Fill

     let $last_deptid = $deptid
     let $last_cmpy   = $company

  End-Procedure

!***********************************************************************
Begin-Procedure Print-Total
!***********************************************************************
    Print 'Estimated'			(+5,57)
    Print 'Total'			(+1,40)
    Print 'Potential'			(0,57)
    Print 'Employees'			(+1,40)
    Print 'Overtime'			(0,57)
    Print '-'				(+1,40,27)  Fill 

    Print 'Independents'		(+1,20)
    PRINT #ind_tot_s			(0,40)	EDIT 999
    PRINT #ind_tot_cost_s		(0,55)	EDIT $$$,$$$.$$

    Print 'COD'				(+1,20)
    PRINT #cod_tot_s			(0,40)	EDIT 999
    PRINT #cod_tot_cost_s		(0,55)	EDIT $$$,$$$.$$
  
    Print 'COL'				(+1,20)
    PRINT #col_tot_s			(0,40)	EDIT 999
    PRINT #col_tot_cost_s		(0,55)	EDIT $$$,$$$.$$

    Print 'MOD'				(+1,20)
    PRINT #mod_tot_s			(0,40)	EDIT 999
    PRINT #mod_tot_cost_s		(0,55)	EDIT $$$,$$$.$$
     
    Print 'POD'				(+1,20)
    PRINT #pod_tot_s			(0,40)	EDIT 999
    PRINT #pod_tot_cost_s		(0,55)	EDIT $$$,$$$.$$
  
    Print 'Warehouse'			(+1,20)
    PRINT #wshe_tot_s			(0,40)	EDIT 999
    PRINT #wshe_tot_cost_s		(0,55)	EDIT $$$,$$$.$$

    Print 'Corporate'			(+1,20)
    PRINT #corp_tot_s			(0,40)	EDIT 999
    PRINT #corp_tot_cost_s		(0,55)	EDIT $$$,$$$.$$

    Print '-'				(+1,40,27)  Fill
    Print 'Grand Total'			(+1,20)
    PRINT #tot_s			(0,40)	EDIT 999
    PRINT #tot_cost_s			(0,55)	EDIT $$$,$$$.$$

end-procedure


#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
!#include 'gexxx924.sqc'  !Get erncd multiple row table
#include 'gexxx930.sqc'  !Get empl_type multiple row table
#include 'gexxx950.sqc'  !Get SQRW run controls

#include 'askaod.sqc'    !Ask As Of Date input
#include 'getcodta.sqc'  !Get company data
#include 'getdptnm.sqc'  !Get Department Name
#include 'getjobtl.sqc'  !Get Job Title Descr 
#include 'getpgdta.sqc'  !Get paygroup data
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date math
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'getposnm.sqc'  !Get-Position-Title    VENDTKK ITG#56786   28-Jan-2009  