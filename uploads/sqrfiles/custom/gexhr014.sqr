!***********************************************************************
!  GEXHR014:  RETAIL RETENTION ANALYSIS                                *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXHR014:             RETAIL RETENTION ANALYSIS                      *
!                                                                      *
! Narrative:		This program compares headcounts from 2 time   *
!                       periods for retention analysis.  The logic     *
!                       tries to isolate the effect of attrition by    *
!                       tracking the same employees over both          *
!                       time periods, ignoring new hires and transfers.*
!                                                                      *
! SQL Tables:		gex_dept_tbl                                   *
!                       acct_cd_tbl                                    *
!                       dept_tbl                                       *
!                       job                                            *
!                                                                      *
! Written by:		Tony Labra                                     *
!                                                                      *
! Normally Run:		On-demand (adhoc)                              *
!                                                                      *
! Control Parms:	FOR WHERE CLAUSE:                              *
!			Company Division Code                          *
!		        Company  	                               *
!			Paygroup  	                               *
!			Deptid	                                       *
!			Account Code                                   *
!			From / Thru Dates                              *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!	INITIALS	DATE		DESCRIPTION OF THE CHANGE      *
!***********************************************************************
!	AXL		11/10/2000      Initial creation.              *
!                                                                      *
!       AXL             05/07/2001      Ignore division re-structures  *
!                                       to allow rentention analaysis  *
!                                       to work across time span       *
!                                       selected.                      *
!                                                                      *
!       AXL             05/14/2001      Exclude SEASONAL employees from*
!                                       analysis by using new JOB field*
!                                       GEX_SEASONAL_EMP.              *
!                                                                      *
!       AXL             07/02/2001      Focus on Division EFFDT in main*
!                                       select stmts.                  *
!                                                                      *
!       AXL             11/26/2001      Add run control logic to excl  *
!                                       any number of jobcodes.        *
!       NYS             08/17/2007      upgrade 9.0 changes            *
!                                       modified ps_acct_cd_tbl        *
!       AXG             09/26/2007      Modified to use GEX_ACCT_CD_TBL*
!					in 9.0 Upgrade.		       *
!***********************************************************************

#include 'setenv.sqc'    !Set environment

begin-setup
!#Include 'setup31a.sqc'   !Printer and page-size initialization
#Include 'setup32a.sqc'   !Printer and page-size initialization

#define #col_1		2
#define #col_2       	30
#define #col_3       	40
#define #col_4      	55
#define #col_5       	65
#define #col_6       	85
#define #col_7      	90

   declare-report report1
Printer-Type=HPLASERJET
     layout=DEFAULT
   end-declare

   declare-report report2
Printer-Type=HPLASERJET
     layout=DEFAULT
   end-declare

   declare-report report3
Printer-Type=HPLASERJET
    layout=DEFAULT
   end-declare

   declare-report report4
Printer-Type=HPLASERJET
    layout=DEFAULT
   end-declare

end-setup

!***********************************************************************
begin-report
!***********************************************************************
#debug9 Show 'begin-report'

  do Init-DateTime           
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  do Init-Report
  do Process-Main1	!By Division, Deptid
  do Process-Main2	!By Division, Acct Code
  do Process-Main3	!By Division, Deptid, Acct Code
  do Process-Main4	!By Deptid
  
  do EOJ
  do Stdapi-Term             !stdapi.sqc

end-report

!*********************************************************************
Begin-Heading 9 for-reports=(report1)
!*********************************************************************

#Include 'stdhdg01.sqc'

  let $SubTitle = 'By Division and Store'
  
  print $SubTitle 	()  	center

  position (+1)
  
  print 'Division'		(+2,1)
  print	$div_cd			(,+2)

  print 'Deptid'		(+3,{#col_1})
  print 'Head Count as of'	(,{#col_2})
  print 'Head Count as of'	(,{#col_4})
  
  print $FROMDATE		(+1,{#col_2})
  print $THRUDATE		(,{#col_4})
  print 'Retention %'          (,{#col_6})
  print	' '  			(+2,1)
    
end-heading

!*********************************************************************
Begin-Heading 9 for-reports=(report2)
!*********************************************************************

#Include 'stdhdg01.sqc'

  let $SubTitle = 'By Division and Account Code'
  
  print $SubTitle 	()  	center

  position (+1)
  
  print 'Division'		(+2,1)
  print	$div_cd_01		(,+2)

  print 'Account Code\'		(+3,{#col_1})
  print 'Head Count as of'	(,{#col_2})
  print 'Head Count as of'	(,{#col_4})
  
  print 'Description'		(+1,{#col_1})
  print $FROMDATE		(,{#col_2})
  print $THRUDATE		(,{#col_4})
  print 'Retention %'          (,{#col_6})
  print	' '  			(+2,1)

    
end-heading

!*********************************************************************
Begin-Heading 9 for-reports=(report3)
!*********************************************************************

#Include 'stdhdg01.sqc'

  let $SubTitle = 'By Division, Store and Account Code'
  
  print $SubTitle 	()  	center

  position (+1)
  
  print 'Division'		(+2,1)
  print	$div_cd_02		(,+2)
  print 'Deptid'		(+1,1)
  print $deptid_descr_02        (,+2)

  print 'Account Code\'         (+2,{#col_1})
  print 'Head Count as of'	(,{#col_2})
  print 'Head Count as of'	(,{#col_4})
  
  print 'Description'		(+1,{#col_1})
  print $FROMDATE		(,{#col_2})
  print $THRUDATE		(,{#col_4})
  print 'Retention %'          (,{#col_6})
  print	' '  			(+2,1)

end-heading

!*********************************************************************
Begin-Heading 9 for-reports=(report4)
!*********************************************************************

#Include 'stdhdg01.sqc'

  let $SubTitle = 'By Store'
  
  print $SubTitle 	()  	center

  position (+1)
  
  print 'Deptid'		(+3,{#col_1})
  print 'Head Count as of'	(,{#col_2})
  print 'Head Count as of'	(,{#col_4})
  
  print $FROMDATE		(+1,{#col_2})
  print $THRUDATE		(,{#col_4})
  print 'Retention %'          (,{#col_6})
  print	' '  			(+2,1)
    
end-heading

!***********************************************************************
begin-procedure Init-Report
!***********************************************************************
#debug9 Show 'Init-Report'

  let $first  ='Y'
  let $first2 ='Y'
  let $first3 ='Y'
  let $first4 ='Y'

  Let $GEXXX901_Company_Alias  	= 'JB.COMPANY' 
  Let $GEXXX901_Paygroup_Alias 	= 'JB.PAYGROUP' 
  Let $GEXXX902_Deptid_Alias 	= 'JB.DEPTID'  
  Let $GEXXX907_Div_CD_Alias 	= 'GDT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias 	= 'JB.ACCT_CD'
  Let $GEXXX916_Jobcode_Alias   = 'JB.JOBCODE'

  Let $GEXXX901_Company_Alias2  = 'JB3.COMPANY' 
  Let $GEXXX901_Paygroup_Alias2 = 'JB3.PAYGROUP' 
  Let $GEXXX902_Deptid_Alias2 	= 'JB3.DEPTID'  
  Let $GEXXX907_Div_CD_Alias2 	= 'GDT3.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias2 	= 'JB3.ACCT_CD'
  Let $GEXXX916_Jobcode_Alias2  = 'JB3.JOBCODE'

  Let $GEXXX901_Company_Alias3  = 'JB5.COMPANY' 
  Let $GEXXX901_Paygroup_Alias3 = 'JB5.PAYGROUP' 
  Let $GEXXX902_Deptid_Alias3 	= 'JB5.DEPTID'   
  Let $GEXXX907_Div_CD_Alias3 	= 'GDT5.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias3 	= 'JB5.ACCT_CD'
  Let $GEXXX916_Jobcode_Alias3  = 'JB5.JOBCODE'

  Let $GEXXX901_Company_Alias4  = 'JB7.COMPANY' 
  Let $GEXXX901_Paygroup_Alias4 = 'JB7.PAYGROUP' 
  Let $GEXXX902_Deptid_Alias4 	= 'JB7.DEPTID'   
  Let $GEXXX907_Div_CD_Alias4 	= 'GDT7.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias4 	= 'JB7.ACCT_CD'
  Let $GEXXX916_Jobcode_Alias4  = 'JB7.JOBCODE'

  If $prcs_process_instance = ''
    Do SQRW-Run-Controls  
  Else
    Do Process-Scheduler-Run-Controls
  End-if

  let $ReportID		= 'GEXHR014'
  let $ReportTitle 	= 'Retail Retention Analysis'

  display $ReportID noline
  display ' - '     noline
  display $ReportTitle 

  date-time () hh:mi:ss &TimeBegan
  date-time () MM/DD/YYYY  &DateBegan
  show 'Report Began at ' &TimeBegan ' on '  &DateBegan

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
 
  Show '$GEXXX901_Include_Company_Paygroup_Criteria = ' $GEXXX901_Include_Company_Paygroup_Display_Criteria
  Show '$GEXXX902_Include_Deptid_Criteria           = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA           = ' $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  Show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA          = ' $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA
  Show '$GEXXX916_EXCLUDE_JOBCODE_CRITERIA          = ' $GEXXX916_Exclude_Jobcode_Display_Criteria
  Show '$FROMDATE                                   = ' $FROMDATE 
  Show '$THRUDATE                                   = ' $THRUDATE
 
  Do Print-Cover-Page
 
End-Procedure

!***********************************************************************
Begin-Procedure SQRW-Run-Controls 
!***********************************************************************
#debug9 show 'SQRW-Run-Controls'

  do Ask-From-Thru-Date

  Display 'Enter Company/Paygroup or leave blank to exit.'
  While 1=1
    Input $In-Company Maxlen=3 'Company'
    Uppercase $In-Company
    If Rtrim($In-Company, ' ') = ''
      Break
    Else
      Input $In-Paygroup Maxlen=3 'Paygroup'
      Uppercase $In-Paygroup
      If Rtrim($In-Paygroup, ' ') = ''
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias   || ' = '''  || $In-Company || ''')'
        Let $Include_Condition2 = '(' || $GEXXX901_Company_Alias2 || ' = '''  || $In-Company || ''')'
        Let $Include_Condition3 = '(' || $GEXXX901_Company_Alias3 || ' = '''  || $In-Company || ''')'
        Let $Include_Condition4 = '(' || $GEXXX901_Company_Alias4 || ' = '''  || $In-Company || ''')'
      Else
        Let $Include_Condition = '(' || $GEXXX901_Company_Alias || ' = '''  || $In-Company || ''' And ' || $GEXXX901_Paygroup_Alias || ' = '''  || $In-Paygroup || ''')'
        Let $Include_Condition2 = '(' || $GEXXX901_Company_Alias2 || ' = '''  || $In-Company || ''' And ' || $GEXXX901_Paygroup_Alias2 || ' = '''  || $In-Paygroup || ''')'
        Let $Include_Condition3 = '(' || $GEXXX901_Company_Alias3 || ' = '''  || $In-Company || ''' And ' || $GEXXX901_Paygroup_Alias3 || ' = '''  || $In-Paygroup || ''')'      
        Let $Include_Condition4 = '(' || $GEXXX901_Company_Alias4 || ' = '''  || $In-Company || ''' And ' || $GEXXX901_Paygroup_Alias4 || ' = '''  || $In-Paygroup || ''')'      
      End-If
      Add 1 To #GEX_RC_PAYGROUP_ROWS
      If #GEX_RC_PAYGROUP_ROWS = 1
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '(' || $Include_Condition
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2 = '(' || $Include_Condition2
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3 = '(' || $Include_Condition3
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4 = '(' || $Include_Condition4
      Else
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ' Or '  || $Include_Condition
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2 = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2 || ' Or '  || $Include_Condition2
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3 = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3 || ' Or '  || $Include_Condition3
        Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4 = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4 || ' Or '  || $Include_Condition4
      End-If
    End-If
  End-While

  If #GEX_RC_PAYGROUP_ROWS = 0
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = '1=1'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2 = '1=1'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3 = '1=1'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4 = '1=1'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA || ')'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2 = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2 || ')'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3 = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3 || ')'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4 = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4 || ')'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA
  End-If

  Let $DeptIDString = ''''
  Display 'Enter DeptID or leave blank to exit.'
  While 1=1
    Input $In-DeptID Maxlen=10 'DeptID'
    Uppercase $In-DeptID
    If Rtrim($In-DeptID, ' ') = ''
      Concat '''' With $DeptIDString
      Break
    End-If
    If $DeptIDString <> ''''
      Concat ''',''' With $DeptIDString
    End-If
    Concat $In-DeptID With $DeptIDString
  End-While

  If $DeptIDString = ''''''
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA2 = '1=1'
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA3 = '1=1'
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA4 = '1=1'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' In (' || $DeptIDString || ')'
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA2 = $GEXXX902_Deptid_Alias2 || ' In (' || $DeptIDString || ')'
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA3 = $GEXXX902_Deptid_Alias3 || ' In (' || $DeptIDString || ')'
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA4 = $GEXXX902_Deptid_Alias4 || ' In (' || $DeptIDString || ')'
    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_INCLUDE_DEPTID_CRITERIA
  End-If

  Let $DivCdString = ''''
  Display 'Enter Company Division Code or leave blank to exit.'
  While 1=1
    Input $In-DivCd Maxlen=3 'Company Division Code'
    Uppercase $In-DivCd
    If Rtrim($In-DivCd, ' ') = ''
      Concat '''' With $DivCdString
      Break
    End-If
    If $DivCdString <> ''''
      Concat ''',''' With $DivCdString
    End-If
    Concat $In-DivCd With $DivCdString
  End-While

  If $DivCdString = ''''''
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = '1=1'
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA2 = '1=1'
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA3 = '1=1'
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA4 = '1=1'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = $GEXXX907_Div_CD_Alias || ' In (' || $DivCdString || ')'
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA2 = $GEXXX907_Div_CD_Alias2 || ' In (' || $DivCdString || ')'
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA3 = $GEXXX907_Div_CD_Alias3 || ' In (' || $DivCdString || ')'
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA4 = $GEXXX907_Div_CD_Alias4 || ' In (' || $DivCdString || ')'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  End-If

  Let $AcctCdString = ''''
  Display 'Enter Account Code or leave blank to exit.'
  While 1=1
    Input $In-AcctCd Maxlen=25 'Account Code'
    Uppercase $In-AcctCd
    If Rtrim($In-AcctCd, ' ') = ''
      Concat '''' With $AcctCdString
      Break
    End-If
    If $AcctCdString <> ''''
      Concat ''',''' With $AcctCdString
    End-If
    Concat $In-AcctCd With $AcctCdString
  End-While

  If $AcctCdString = ''''''
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA = '1=1'
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA2 = '1=1'
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA3 = '1=1'
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA4 = '1=1'
    Let $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA = $GEXXX909_Acct_CD_Alias || ' In (' || $AcctCdString || ')'
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA2 = $GEXXX909_Acct_CD_Alias2 || ' In (' || $AcctCdString || ')'
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA3 = $GEXXX909_Acct_CD_Alias3 || ' In (' || $AcctCdString || ')'
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA4 = $GEXXX909_Acct_CD_Alias4 || ' In (' || $AcctCdString || ')'
    Let $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA = $GEXXX909_INCLUDE_ACCT_CD_CRITERIA
  End-If

  Let $JobcodeString = ''''
  Display 'Enter Jobcodes to exclude or leave blank to exit.'
  While 1=1
    Input $Jobcode Maxlen=6 'Jobcode'
    Uppercase $Jobcode
    If Rtrim($Jobcode, ' ') = ''
       Concat '''' With $JobcodeString
       Break
    End-If
    If $JobcodeString <> ''''
       Concat ''',''' With $JobcodeString
    End-If
    Concat $Jobcode With $JobcodeString
  End-While

  If $JobcodeString = ''''''
     Let $GEXXX916_Exclude_Jobcode_Criteria  = '1=1'
     Let $GEXXX916_Exclude_Jobcode_Criteria2 = '1=1'
     Let $GEXXX916_Exclude_Jobcode_Criteria3 = '1=1'
     Let $GEXXX916_Exclude_Jobcode_Criteria4 = '1=1'
     Let $GEXXX916_Exclude_Jobcode_Display_Criteria = 'NONE'
  Else
     Let $GEXXX916_Exclude_Jobcode_Criteria  = '$GEXXX916_Jobcode_Alias  Not In (' || $JobcodeString || ')'
     Let $GEXXX916_Exclude_Jobcode_Criteria2 = '$GEXXX916_Jobcode_Alias2 Not In (' || $JobcodeString || ')'
     Let $GEXXX916_Exclude_Jobcode_Criteria3 = '$GEXXX916_Jobcode_Alias3 Not In (' || $JobcodeString || ')'
     Let $GEXXX916_Exclude_Jobcode_Criteria4 = '$GEXXX916_Jobcode_Alias4 Not In (' || $JobcodeString || ')'
     Let $GEXXX916_Exclude_Jobcode_Display_Criteria = $GEXXX916_Exclude_Jobcode_Criteria
  End-If

End-Procedure

!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls 
!***********************************************************************
#debug9 show 'Process-Scheduler-Run-Controls'

 !Get parameters from single row run control record 
  Do GEXRCHR1-SELECT-PARAMETERS
 
  let $FROMDATE = $GEX_RC_HR.FROMDATE
  let $THRUDATE = $GEX_RC_HR.THRUDATE
    
  Let $WHERE_SELECT_ASOFDATE = $GEX_RC_HR.AsOfDate
  If Rtrim ($GEX_RC_HR.AsOfDate, ' ') = ''
    Let $WHERE_SELECT_ASOFDATE = $asoftoday
  End-If

 !Get parameters from multiple row run control record                        
  
  Do GEXXX901-Select-Company-Paygroup-Parameters
  Do GEXXX901-Select-Company-Paygroup-Parameters2

  Do GEXXX902-Select-Deptid-Parameters 
  Do GEXXX902-Select-Deptid-Parameters2

  Do GEXXX907-Select-Div-CD-Parameters 
  Do GEXXX907-Select-Div-CD-Parameters2

  Do GEXXX909-Select-Acct-CD-Parameters
  Do GEXXX909-Select-Acct-CD-Parameters2

  Do GEXXX916-Select-Jobcode-Parameters
  Do GEXXX916-Select-Jobcode-Parameters2
        
End-Procedure

!***********************************************************************
begin-procedure Print-Cover-Page
!***********************************************************************
#debug9 show 'Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)

  Print '$GEXXX901_Include_Company_Paygroup_Criteria          ='   (+1,5)
  Print  $GEXXX901_Include_Company_Paygroup_Display_Criteria       (0,+2)

  Print '$GEXXX902_Include_Deptid_Criteria                    ='   (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria                  (0,+2)

  Print '$GEXXX907_INCLUDE_DIV_CD_CRITERIA                    ='   (+1,5)
  Print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA                   (0,+2)

  Print '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA                   ='   (+1,5)
  Print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA                 (0,+2)

  Print '$GEXXX916_EXCLUDE_JOBCODE_CRITERIA                   ='   (+1,5)
  Print $GEXXX916_EXCLUDE_JOBCODE_DISPLAY_CRITERIA                 (0,+2)

  Print '$FROMDATE                                            ='   (+1,5)
  Print  $FROMDATE                                                 (0,+2)

  Print '$THRUDATE                                            ='   (+1,5)
  Print  $THRUDATE                                                 (0,+2)

  Let #PAGE-COUNT = 0
  new-page
  let #page-count = 1
 
End-Procedure

!***********************************************************************
begin-procedure Process-Main1
!***********************************************************************
#debug9 Show 'Process-Main1'
  
  let $process_optn = '1'
  let $first_dpt_row='Y'

begin-SELECT
/*+ RULE */

GDT.GEX_COMPANY_DIV_CD () 	on-break print=never
   				level=1
                                before=before-div_cd
				after=div_cd-totals
				save=$prev_div_cd

JB.DEPTID		()	on-break print=never
   				level=2
				after=dpt-totals
				save=$prev_deptid			
JB.EMPL_STATUS
JB.EMPLID	
JB.EMPL_RCD
JB.ACCT_CD
DPT.DESCR

        add 1 to #record_count1

        let $div_cd = &GDT.GEX_COMPANY_DIV_CD
        let $deptid = &JB.deptid
        let $deptid_descr = &DPT.DESCR
        
	evaluate &jb.empl_status
 
          when = 'A'
          when = 'L'
          when = 'P'
          when = 'S'
            add 1 to #dept_total
            break
          when-other
            break
        end-evaluate

        do get-future-rows
	
FROM PS_GEX_DEPT_TBL GDT,
     PS_DEPT_TBL DPT,
     PS_JOB JB

WHERE  	JB.GEX_SEASONAL_EMP = 'N'		!AXL 5/14/2001 New dis-qualifier
        AND JB.DEPTID  	= GDT.DEPTID
     	AND JB.DEPTID   = DPT.DEPTID

     	AND JB.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB 
        WHERE JB.EMPLID    = EMPLID
          AND JB.EMPL_RCD = EMPL_RCD
        AND EFFDT <= $FROMDATE)
       	AND JB.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE JB.EMPLID    = EMPLID
          AND JB.EMPL_RCD = EMPL_RCD
          AND JB.EFFDT    = EFFDT)   

     	AND GDT.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
        WHERE GDT.SETID  = SETID
          AND GDT.DEPTID = DEPTID
          AND EFFDT <= $FROMDATE)		!AXL 07/02/2001
          !AND EFFDT <= JB.EFFDT)

        AND DPT.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_DEPT_TBL
        WHERE DPT.SETID   = SETID
          AND DPT.DEPTID  = DEPTID
          AND EFFDT <= GDT.EFFDT)		!AXL 07/02/2001 Focus on Division
          !AND EFFDT <= JB.EFFDT)	

        AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
        AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
        AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
        AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
        AND [$GEXXX916_EXCLUDE_JOBCODE_CRITERIA]

order BY  GDT.GEX_COMPANY_DIV_CD, JB.DEPTID

end-SELECT
 
end-procedure

!***********************************************************************
begin-procedure Get-Future-Rows
!***********************************************************************

begin-SELECT
/*+ RULE */

!GDT2.GEX_COMPANY_DIV_CD
JB2.DEPTID			
JB2.EMPL_STATUS
	
	evaluate &jb2.empl_status
 
          when = 'A'
          when = 'L'
          when = 'P'
          when = 'S'
            add 1 to #dept_total_futr
            break
          when-other
            break
        end-evaluate
	
FROM PS_JOB JB2
     !PS_GEX_DEPT_TBL GDT2,

!WHERE  GDT2.GEX_COMPANY_DIV_CD = $div_cd	AXL 05/07/2001
where   JB2.GEX_SEASONAL_EMP = 'N'		!AXL 5/14/2001 New dis-qualifier
        AND JB2.DEPTID		= $deptid
        AND JB2.ACCT_CD         = &jb.acct_cd	
	AND JB2.EMPLID		= &jb.emplid
        AND JB2.EMPL_RCD	= &jb.empl_rcd

        !AND JB2.DEPTID  	= GDT2.DEPTID
     	AND JB2.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB 
        WHERE JB2.EMPLID    = EMPLID
          AND JB2.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $THRUDATE)
    	AND JB2.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE JB2.EMPLID    = EMPLID
          AND JB2.EMPL_RCD = EMPL_RCD
          AND JB2.EFFDT    = EFFDT)   

     	!AND GDT2.EFFDT =
        !(SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
        !WHERE GDT2.SETID  = SETID
        !  AND GDT2.DEPTID = DEPTID
        !  AND EFFDT <= JB2.EFFDT)

end-SELECT
 
end-procedure

!***********************************************************************
begin-procedure before-div_cd
!***********************************************************************

	use-report Report1
        
	if $first='Y'
	   let $first='N'
        else
	   new-page
	end-if

end-procedure

!***********************************************************************
begin-procedure div_cd-totals
!***********************************************************************

	move $prev_div_cd to $div_cd
        
        use-report Report1

        if #div_cd_total > 0
           let #div_cd_perc =  (#div_cd_total_futr / #div_cd_total) * 100
           let $div_cd_perc_prn = edit(#div_cd_perc,'999.9') || '%'
        else
	   let $div_cd_perc_prn = ' '
        end-if

	print $prev_div_cd	 (+2,1)
        print #div_cd_total      (,{#col_3})	edit 99,999
        print #div_cd_total_futr (,{#col_5})	edit 99,999
        print $div_cd_perc_prn   (,{#col_7})

        let #div_cd_total = 0 	
        let #div_cd_total_futr = 0
        let $div_cd_perc_prn = ' '

        let $first_dpt_row='Y'

end-procedure

!***********************************************************************
begin-procedure dpt-totals
!***********************************************************************

	move $prev_deptid to $deptid
        
	use-report Report1

        if #dept_total > 0
           let #dept_perc =  (#dept_total_futr / #dept_total) * 100
           let $dept_perc_prn = edit(#dept_perc,'999.9') || '%'
        else
	   let $dept_perc_prn = ' '
        end-if

        if $first_dpt_row='Y'
           print $deptid_descr		(+3,2)
           print #dept_total		(,{#col_3}) edit 99,999
           print #dept_total_futr	(,{#col_5}) edit 99,999
           print $dept_perc_prn		(,{#col_7}) 
           let $first_dpt_row='N'
        else
           print $deptid_descr		(+1,2)
           print #dept_total		(,{#col_3}) edit 99,999
           print #dept_total_futr	(,{#col_5}) edit 99,999
           print $dept_perc_prn		(,{#col_7}) 
        end-if

        let #div_cd_total      = #div_cd_total      +  #dept_total
        let #div_cd_total_futr = #div_cd_total_futr +  #dept_total_futr

        let #dept_total = 0
        let #dept_total_futr = 0
        let $dept_perc_prn = ' '

end-procedure

!***********************************************************************
begin-procedure Process-Main2
!***********************************************************************
#debug9 Show 'Process-Main2'

   let $process_optn = '2'
   let $first_acct_cd_row='Y'
  
begin-SELECT
/*+ RULE */

GDT3.GEX_COMPANY_DIV_CD () 	on-break print=never
   				level=1
                                before=before-div_cd2
				after=div_cd-totals2
				save=$prev_div_cd

JB3.ACCT_CD		()	on-break print=never
   				level=2
				after=acct_cd-totals
				save=$prev_acct_cd
		
JB3.EMPL_STATUS
JB3.EMPLID
JB3.EMPL_RCD	
ACT3.DESCR
JB3.DEPTID

        add 1 to #record_count2
    
        let $div_cd_01 = &GDT3.GEX_COMPANY_DIV_CD
        let $acct_cd = &JB3.acct_cd
        let $acct_cd_descr = &ACT3.descr
        
	evaluate &jb3.empl_status
 
          when = 'A'
          when = 'L'
          when = 'P'
          when = 'S'
            add 1 to #acct_cd_total
            break
          when-other
            break
        end-evaluate

        do get-future-rows2
!GEX-AXG Modified for Upgrade 9.0 on 09/26/2007 - Begin	
!FROM PS_ACCT_CD_TBL ACT3,
FROM PS_GEX_ACCT_CD_TBL ACT3,
!GEX-AXG Modified for Upgrade 9.0 on 09/26/2007 - End
     PS_GEX_DEPT_TBL GDT3,
     PS_JOB JB3

WHERE   JB3.GEX_SEASONAL_EMP = 'N'		!AXL 5/14/2001 New dis-qualifier
	AND JB3.DEPTID    = GDT3.DEPTID
     	AND JB3.ACCT_CD   = ACT3.ACCT_CD

     	AND JB3.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB 
        WHERE JB3.EMPLID    = EMPLID
          AND JB3.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $FROMDATE)
    	AND JB3.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE JB3.EMPLID    = EMPLID
          AND JB3.EMPL_RCD = EMPL_RCD
          AND JB3.EFFDT    = EFFDT)   

     	AND GDT3.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
        WHERE GDT3.SETID  = SETID
          AND GDT3.DEPTID = DEPTID
          AND EFFDT <= $FROMDATE)		!AXL 07/02/2001
          !AND EFFDT <= JB3.EFFDT)
	!GEX-AXG Modified for Upgrade 9.0 on 09/26/2007 - Begin
	 AND ACT3.EFFDT =                          
        (SELECT MAX(GEXACCT1.EFFDT) FROM PS_GEX_ACCT_CD_TBL GEXACCT1
        WHERE ACT3.ACCT_CD   = GEXACCT1.ACCT_CD             
          AND GEXACCT1.EFFDT <= GDT3.EFFDT)
          !GEX-AXG Modified for Upgrade 9.0 on 09/26/2007 - End
       ! AND ACT3.EFFDT =                             ! upgrade 9.0 changes
       ! (SELECT MAX(EFFDT) FROM PS_ACCT_CD_TBL       ! upgrade 9.0 changes
       ! WHERE ACT3.ACCT_CD   = ACCT_CD               ! upgrade 9.0 changes
       !   AND EFFDT <= GDT3.EFFDT)		!AXL 07/02/2001 Focus on Division   upgrade 9.0 changes
          !AND EFFDT <= JB3.EFFDT)

        AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2] 
        AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA2]
        AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA2]
        AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA2]
        AND [$GEXXX916_EXCLUDE_JOBCODE_CRITERIA2]

order BY  GDT3.GEX_COMPANY_DIV_CD, ACT3.DESCR

end-SELECT

end-procedure

!***********************************************************************
begin-procedure Get-Future-Rows2
!***********************************************************************
begin-SELECT
/*+ RULE */

!GDT4.GEX_COMPANY_DIV_CD
JB4.ACCT_CD			
JB4.EMPL_STATUS
	
	evaluate &jb4.empl_status
 
          when = 'A'
          when = 'L'
          when = 'P'
          when = 'S'
            add 1 to #acct_cd_total_futr
            break
          when-other
            break
        end-evaluate
	
FROM PS_JOB JB4
     !PS_GEX_DEPT_TBL GDT4,

!WHERE GDT4.GEX_COMPANY_DIV_CD  = $div_cd	AXL 05/07/2001 	
WHERE	JB4.GEX_SEASONAL_EMP = 'N'		!AXL 5/14/2001 New dis-qualifier
	AND JB4.ACCT_CD		= $acct_cd
        AND JB4.DEPTID		= &jb3.deptid
    	AND JB4.EMPLID		= &jb3.emplid
        and JB4.EMPL_RCD	= &jb3.empl_rcd

        !AND JB4.DEPTID  	= GDT4.DEPTID
        
     	AND JB4.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB 
        WHERE JB4.EMPLID    = EMPLID
          AND JB4.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $THRUDATE)
    	AND JB4.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE JB4.EMPLID    = EMPLID
          AND JB4.EMPL_RCD = EMPL_RCD
          AND JB4.EFFDT    = EFFDT)   

     	!AND GDT4.EFFDT =
        !(SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
        !WHERE GDT4.SETID  = SETID
        ! AND GDT4.DEPTID = DEPTID
        !  AND EFFDT <= JB4.EFFDT)

end-SELECT
 
end-procedure

!***********************************************************************
begin-procedure before-div_cd2
!***********************************************************************

        use-report Report2

	if $first2='Y'
	   let $first2='N'
        else
	   new-page
	end-if

end-procedure

!***********************************************************************
begin-procedure div_cd-totals2
!***********************************************************************

        
        use-report Report2

	move $prev_div_cd to $div_cd_01

        if #div_cd_total > 0 
           let #div_cd_perc =  (#div_cd_total_futr / #div_cd_total) * 100
           let $div_cd_perc_prn = edit(#div_cd_perc,'999.9') || '%'
        else 
           let #div_cd_perc_prn = ' '
        end-if

	print $prev_div_cd	 (+2,1)
        print #div_cd_total	 (,{#col_3})	edit 99,999
        print #div_cd_total_futr (,{#col_5})	edit 99,999
        print $div_cd_perc_prn   (,{#col_7})

        let #div_cd_total = 0 	
        let #div_cd_total_futr = 0
        let $div_cd_perc_prn   = ' '

        let $first_acct_cd_row='Y'

end-procedure

!***********************************************************************
begin-procedure acct_cd-totals
!***********************************************************************

        use-report Report2
       
	move $prev_acct_cd to $acct_cd
  
        if #acct_cd_total > 0
           let #acct_cd_perc =  (#acct_cd_total_futr / #acct_cd_total) * 100
           let $acct_cd_perc_prn = edit(#acct_cd_perc,'999.9') || '%'
        else
           let $acct_cd_perc_prn = ' '
        end-if

        let $acct_code = $acct_cd || ' \ ' || $acct_cd_descr

        if $first_acct_cd_row='Y'
           print $acct_code		(+3,2)
           print #acct_cd_total		(,{#col_3}) edit 99,999
           print #acct_cd_total_futr	(,{#col_5}) edit 99,999
           print $acct_cd_perc_prn	(,{#col_7})
           let $first_acct_cd_row='N'
        else
	   print $acct_code		(+1,2)
           print #acct_cd_total		(,{#col_3}) edit 99,999
           print #acct_cd_total_futr	(,{#col_5}) edit 99,999
           print $acct_cd_perc_prn	(,{#col_7})
        end-if

        let #div_cd_total      = #div_cd_total      +  #acct_cd_total
        let #div_cd_total_futr = #div_cd_total_futr +  #acct_cd_total_futr

        let #acct_cd_total = 0
        let #acct_cd_total_futr = 0
        let $acct_cd_perc_prn = ' '

end-procedure

!***********************************************************************
begin-procedure Process-Main3
!***********************************************************************
#debug9 Show 'Process-Main3'

   let $process_optn = '3'
   let $first_deptid_acct_cd_row='Y'
  
begin-SELECT
/*+ RULE */

GDT5.GEX_COMPANY_DIV_CD () 	on-break print=never
   				level=1
				after=div_cd-totals3
				save=$prev_div_cd

JB5.DEPTID		()	on-break print=never
   				level=2
                                before=before-deptid
				after=dpt-totals2
				save=$prev_deptid	

JB5.ACCT_CD		()	on-break print=never
   				level=3
				after=acct_cd-totals2
				save=$prev_acct_cd
		
JB5.EMPL_STATUS
JB5.EMPLID	
JB5.EMPL_RCD
ACT5.DESCR
DPT5.DESCR

        add 1 to #record_count3

        let $div_cd_02  = &GDT5.GEX_COMPANY_DIV_CD
        let $deptid  = &JB5.DEPTID
        let $acct_cd = &JB5.acct_cd
        let $acct_cd_descr = &ACT5.descr
        let $deptid_descr_02 = &DPT5.descr
        
	evaluate &jb5.empl_status
 
          when = 'A'
          when = 'L'
          when = 'P'
          when = 'S'
            add 1 to #acct_cd_total2
            break
          when-other
            break
        end-evaluate

        do get-future-rows3
	
!GEX-AXG Modified for Upgrade 9.0 on 09/26/2007 - Begin
!FROM PS_ACCT_CD_TBL ACT5,
FROM PS_GEX_ACCT_CD_TBL ACT5,
!GEX-AXG Modified for Upgrade 9.0 on 09/26/2007 - End
     PS_GEX_DEPT_TBL GDT5,
     PS_DEPT_TBL DPT5,
     PS_JOB JB5

WHERE   JB5.GEX_SEASONAL_EMP = 'N'		!AXL 5/14/2001 New dis-qualifier
	AND JB5.DEPTID    	= GDT5.DEPTID
     	AND JB5.ACCT_CD = ACT5.ACCT_CD
        AND JB5.DEPTID  = DPT5.DEPTID

     	AND JB5.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB 
        WHERE JB5.EMPLID    = EMPLID
          AND JB5.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $FROMDATE)
    	AND JB5.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE JB5.EMPLID    = EMPLID
          AND JB5.EMPL_RCD = EMPL_RCD
          AND JB5.EFFDT    = EFFDT)   

     	AND GDT5.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
        WHERE GDT5.SETID  = SETID
          AND GDT5.DEPTID = DEPTID
          AND EFFDT <= $FROMDATE)		!AXL 07/02/2001 
          !AND EFFDT <= JB5.EFFDT)
	!GEX-AXG Added for Upgrade 9.0 on 09/26/2007 - Begin
	AND ACT5.EFFDT =                       
        (SELECT MAX(GEXACCT.EFFDT) FROM PS_GEX_ACCT_CD_TBL GEXACCT
        WHERE ACT5.ACCT_CD   = GEXACCT.ACCT_CD         
          AND GEXACCT.EFFDT <= $FROMDATE)
       !GEX-AXG Added for Upgrade 9.0 on 09/26/2007 - End
       ! AND ACT5.EFFDT =                       ! upgrade 9.0 changes
       ! (SELECT MAX(EFFDT) FROM PS_ACCT_CD_TBL ! upgrade 9.0 changes
       ! WHERE ACT5.ACCT_CD   = ACCT_CD         ! upgrade 9.0 changes
       !   AND EFFDT <= $FROMDATE)		!AXL 07/02/2001 
          !AND EFFDT <= JB5.EFFDT)

        AND DPT5.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_DEPT_TBL
        WHERE DPT5.SETID   = SETID
          AND DPT5.DEPTID = DEPTID
          AND EFFDT <= GDT5.EFFDT)		!AXL 07/02/2001 Focus on Division
          !AND EFFDT <= JB5.EFFDT)

        AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3] 
        AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA3]
        AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA3]
        AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA3]
        AND [$GEXXX916_EXCLUDE_JOBCODE_CRITERIA3]

order BY  GDT5.GEX_COMPANY_DIV_CD, JB5.DEPTID, ACT5.DESCR

end-SELECT
    
end-procedure

!***********************************************************************
begin-procedure Get-Future-Rows3
!***********************************************************************
begin-SELECT
/*+ RULE */

!GDT6.GEX_COMPANY_DIV_CD
JB6.ACCT_CD			
JB6.DEPTID
JB6.EMPL_STATUS
	
	evaluate &jb6.empl_status
 
          when = 'A'
          when = 'L'
          when = 'P'
          when = 'S'
            add 1 to #acct_cd_total_futr2
            break
          when-other
            break
        end-evaluate
	
FROM PS_JOB JB6
    !PS_GEX_DEPT_TBL GDT6,

!WHERE  GDT6.GEX_COMPANY_DIV_CD  = $div_cd AXL 05/07/2001 	
WHERE	JB6.GEX_SEASONAL_EMP = 'N'		!AXL 5/14/2001 New dis-qualifier
	AND JB6.ACCT_CD		 = $acct_cd
        AND JB6.DEPTID           = $deptid 
    	AND JB6.EMPLID		 = &jb5.emplid
        AND JB6.EMPL_RCD	 = &jb5.empl_rcd

        !AND JB6.DEPTID  	= GDT6.DEPTID
       
     	AND JB6.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB 
        WHERE JB6.EMPLID    = EMPLID
          AND JB6.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $THRUDATE)
    	AND JB6.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE JB6.EMPLID    = EMPLID
          AND JB6.EMPL_RCD = EMPL_RCD
          AND JB6.EFFDT    = EFFDT)   

     	!AND GDT6.EFFDT =
        !(SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
        !WHERE GDT6.SETID  = SETID
        !  AND GDT6.DEPTID = DEPTID
        ! AND EFFDT <= JB6.EFFDT)

end-SELECT
 
end-procedure

!***********************************************************************
begin-procedure before-deptid
!***********************************************************************

        use-report Report3

	if $first3='Y'
	   let $first3='N'
        else
	   new-page
	end-if

end-procedure

!***********************************************************************
begin-procedure div_cd-totals3
!***********************************************************************
        
	use-report Report3

	move $prev_div_cd to $div_cd_02

        if #div_cd_total > 0
           let #div_cd_perc =  (#div_cd_total_futr / #div_cd_total) * 100
           let $div_cd_perc_prn = edit(#div_cd_perc,'999.9') || '%'
        else
           let $div_cd_perc_prn = ' '
        end-if

	print $prev_div_cd		(+2,1)
        print #div_cd_total		(,{#col_3})	edit 99,999
        print #div_cd_total_futr 	(,{#col_5})	edit 99,999
        print $div_cd_perc_prn  	(,{#col_7})

        let #div_cd_total = 0 	
        let #div_cd_total_futr = 0
        let $div_cd_perc_prn  = ' '

        let $first_deptid_acct_cd_row = 'Y'

end-procedure

!***********************************************************************
begin-procedure dpt-totals2
!***********************************************************************

	use-report Report3

      	move $prev_deptid to $deptid
 
        if #deptid_total > 0
           let #deptid_perc =  (#deptid_total_futr / #deptid_total) * 100
           let $deptid_perc_prn = edit(#deptid_perc,'999.9') || '%'
        else
           let $deptid_perc_prn = ' '
        end-if

        print $deptid_descr_02		(+2,2)
        print #deptid_total		(,{#col_3})	edit 99,999
        print #deptid_total_futr 	(,{#col_5})	edit 99,999
        print $deptid_perc_prn	 	(,{#col_7})

        let #div_cd_total      = #div_cd_total      +  #deptid_total
        let #div_cd_total_futr = #div_cd_total_futr +  #deptid_total_futr

        let #deptid_total = 0
        let #deptid_total_futr = 0
        let $deptid_perc_prn = ' '

        let $first_deptid_acct_cd_row = 'Y'

end-procedure

!***********************************************************************
begin-procedure acct_cd-totals2
!***********************************************************************

	use-report Report3

	move $prev_acct_cd to $acct_cd

        if #acct_cd_total2 > 0
           let #acct_cd_perc2 =  (#acct_cd_total_futr2 / #acct_cd_total2) * 100
           let $acct_cd_perc_prn2 = edit(#acct_cd_perc2,'999.9') || '%'
        else
           let $acct_cd_perc_prn2 = ' '
        end-if

        let $acct_code = $acct_cd || ' \ ' || $acct_cd_descr

        if $first_deptid_acct_cd_row = 'Y'
           print $acct_code     	(+3,2)
           print #acct_cd_total2	(,{#col_3}) edit 99,999
           print #acct_cd_total_futr2	(,{#col_5}) edit 99,999
           print $acct_cd_perc_prn2	(,{#col_7})
           let $first_deptid_acct_cd_row ='N'
        else
	   print $acct_code     	(+1,2)
           print #acct_cd_total2	(,{#col_3}) edit 99,999
           print #acct_cd_total_futr2	(,{#col_5}) edit 99,999
           print $acct_cd_perc_prn2	(,{#col_7})
        end-if

        let #deptid_total      = #deptid_total      +  #acct_cd_total2
        let #deptid_total_futr = #deptid_total_futr +  #acct_cd_total_futr2

        let #acct_cd_total2 = 0
        let #acct_cd_total_futr2 = 0
        let $acct_cd_perc_prn2 = ' '

end-procedure

!***********************************************************************
begin-procedure Process-Main4
!***********************************************************************
#debug9 Show 'Process-Main4'
  
  let $process_optn = '4'
  let $first_dpt2_row='Y'

begin-SELECT
/*+ RULE */

JB7.DEPTID		() 	on-break print=never
   				level=1
                                !before=before-deptid2
				after=deptid-totals
				save=$prev_deptid
		
JB7.EMPL_STATUS
JB7.EMPLID	
JB7.EMPL_RCD
JB7.ACCT_CD
DPT7.DESCR
GDT7.GEX_COMPANY_DIV_CD

        add 1 to #record_count4

        let $div_cd_03 = &GDT7.GEX_COMPANY_DIV_CD
        let $deptid = &JB7.deptid
        let $deptid_descr = &DPT7.DESCR
        
	evaluate &jb7.empl_status
 
          when = 'A'
          when = 'L'
          when = 'P'
          when = 'S'
            add 1 to #dept_total2
            break
          when-other
            break
        end-evaluate

        do get-future-rows4
	
FROM PS_GEX_DEPT_TBL GDT7,
     PS_DEPT_TBL DPT7,
     PS_JOB JB7

WHERE  	JB7.GEX_SEASONAL_EMP = 'N'		!AXL 5/14/2001 New dis-qualifier
	AND JB7.DEPTID    	= GDT7.DEPTID
     	AND JB7.DEPTID   = DPT7.DEPTID

     	AND JB7.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB 
        WHERE JB7.EMPLID    = EMPLID
          AND JB7.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $FROMDATE)
    	AND JB7.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE JB7.EMPLID    = EMPLID
          AND JB7.EMPL_RCD = EMPL_RCD
          AND JB7.EFFDT    = EFFDT)   

     	AND GDT7.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
        WHERE GDT7.SETID  = SETID
          AND GDT7.DEPTID = DEPTID
          AND EFFDT <= $FROMDATE)		!AXL 07/02/2001
          !AND EFFDT <= JB7.EFFDT)

        AND DPT7.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_DEPT_TBL
        WHERE DPT7.SETID   = SETID
          AND DPT7.DEPTID  = DEPTID
          AND EFFDT <= GDT7.EFFDT)		!AXL 07/02/2001 Focus on Division
          !AND EFFDT <= JB7.EFFDT)

        AND [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4] 
        AND [$GEXXX902_INCLUDE_DEPTID_CRITERIA4]
        AND [$GEXXX907_INCLUDE_DIV_CD_CRITERIA4]
        AND [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA4]
        AND [$GEXXX916_EXCLUDE_JOBCODE_CRITERIA4]

order BY  JB7.DEPTID

end-SELECT
 
        if #div_cd_total2 > 0
           let #div_cd_perc2 =  (#div_cd_total_futr2 / #div_cd_total2) * 100
           let $div_cd_perc_prn2 = edit(#div_cd_perc2,'999.9') || '%'
        else
	   let $div_cd_perc_prn2 = ' '
        end-if

	print 'Total'  		 (+2,1)
        print #div_cd_total2      (,{#col_3})	edit 99,999
        print #div_cd_total_futr2 (,{#col_5})	edit 99,999
        print $div_cd_perc_prn2   (,{#col_7})

end-procedure

!***********************************************************************
begin-procedure Get-Future-Rows4
!***********************************************************************

begin-SELECT
/*+ RULE */

!GDT8.GEX_COMPANY_DIV_CD
JB8.DEPTID			
JB8.EMPL_STATUS
	
	evaluate &jb8.empl_status
 
          when = 'A'
          when = 'L'
          when = 'P'
          when = 'S'
            add 1 to #dept_total_futr2
            break
          when-other
            break
        end-evaluate
	
FROM  PS_JOB JB8
      !PS_GEX_DEPT_TBL GDT8,
   
!WHERE  GDT8.GEX_COMPANY_DIV_CD = $div_cd	AXL 05/07/2001 
WHERE	JB8.GEX_SEASONAL_EMP = 'N'		!AXL 5/14/2001 New dis-qualifier
	AND JB8.DEPTID		= $deptid
        AND JB8.ACCT_CD         = &jb7.acct_cd
    	AND JB8.EMPLID		= &jb7.emplid
        AND JB8.EMPL_RCD	= &jb7.empl_rcd

        !AND JB8.DEPTID  	= GDT8.DEPTID
     	AND JB8.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB 
        WHERE JB8.EMPLID    = EMPLID
          AND JB8.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $THRUDATE)
    	AND JB8.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE JB8.EMPLID    = EMPLID
          AND JB8.EMPL_RCD = EMPL_RCD
          AND JB8.EFFDT    = EFFDT)   

     	!AND GDT8.EFFDT =
        !(SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
        !WHERE GDT8.SETID  = SETID
        !  AND GDT8.DEPTID = DEPTID
        !  AND EFFDT <= JB8.EFFDT)

end-SELECT
 
end-procedure

!***********************************************************************
begin-procedure before-deptid2
!***********************************************************************

        use-report Report4
      
        if $first4='Y'
	   let $first4='N'
	end-if

end-procedure

!***********************************************************************
begin-procedure deptid-totals
!***********************************************************************

        use-report Report4
        
        if #dept_total2 > 0
           let #dept_perc2 =  (#dept_total_futr2 / #dept_total2) * 100
           let $dept_perc_prn2 = edit(#dept_perc2,'999.9') || '%'
        else
	   let $dept_perc_prn2 = ' '
        end-if

        if $first_dpt2_row='Y'
           print $deptid_descr		(+3,2)
           print #dept_total2		(,{#col_3}) edit 99,999
           print #dept_total_futr2	(,{#col_5}) edit 99,999
           print $dept_perc_prn2	(,{#col_7}) 
           let $first_dpt2_row='N'
        else
           print $deptid_descr		(+1,2)
           print #dept_total2		(,{#col_3}) edit 99,999
           print #dept_total_futr2	(,{#col_5}) edit 99,999
           print $dept_perc_prn2		(,{#col_7}) 
        end-if

        let #div_cd_total2      = #div_cd_total2      +  #dept_total2
        let #div_cd_total_futr2 = #div_cd_total_futr2 +  #dept_total_futr2

        let #dept_total2 = 0
        let #dept_total_futr2 = 0
        let $dept_perc_prn2 = ' '

end-procedure

!***********************************************************************
Begin-Procedure GEXXX901-Select-Company-Paygroup-Parameters2
!***********************************************************************

  Let $OprID                = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_PAYGROUP_ROWS = 0
  Let $Include_Condition2   = ''
  Let $Include_Condition3   = ''
  Let $Include_Condition4   = ''
 
  Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2 = ''
  Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3 = ''
  Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4 = ''


Begin-Select

GEX_RC_PAYGROUP2.COMPANY
GEX_RC_PAYGROUP2.PAYGROUP

  Add 1 To #GEX_RC_PAYGROUP_ROWS

  Let $Include_Condition2 = '(' || $GEXXX901_Company_Alias2  || ' = '''  || &GEX_RC_PAYGROUP2.COMPANY  || ''' And ' || $GEXXX901_Paygroup_Alias2 || ' = '''  || &GEX_RC_PAYGROUP2.PAYGROUP || ''')'
  Let $Include_Condition3 = '(' || $GEXXX901_Company_Alias3  || ' = '''  || &GEX_RC_PAYGROUP2.COMPANY  || ''' And ' || $GEXXX901_Paygroup_Alias3 || ' = '''  || &GEX_RC_PAYGROUP2.PAYGROUP || ''')'
  Let $Include_Condition4 = '(' || $GEXXX901_Company_Alias4  || ' = '''  || &GEX_RC_PAYGROUP2.COMPANY  || ''' And ' || $GEXXX901_Paygroup_Alias4 || ' = '''  || &GEX_RC_PAYGROUP2.PAYGROUP || ''')'
  
  If #GEX_RC_PAYGROUP_ROWS = 1
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2 = '(' || $Include_Condition2
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3 = '(' || $Include_Condition3
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4 = '(' || $Include_Condition4
  Else
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2 = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2 || ' Or '  || $Include_Condition2
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3 = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3 || ' Or '  || $Include_Condition3
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4 = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4 || ' Or '  || $Include_Condition4
  End-If

From  PS_GEX_RC_PAYGROUP GEX_RC_PAYGROUP2

Where GEX_RC_PAYGROUP2.OPRID                 = [$OprID]
And   GEX_RC_PAYGROUP2.RUN_CNTL_ID           = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_PAYGROUP2.COMPANY,  ' ') != ' '
And   Rtrim(GEX_RC_PAYGROUP2.PAYGROUP, ' ') != ' '

End-Select

  If #GEX_RC_PAYGROUP_ROWS = 0
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2 = $GEXXX901_Company_Alias2  || ' = ' || $GEXXX901_Company_Alias2  || ' And ' ||
                                                       $GEXXX901_Paygroup_Alias2 || ' = ' || $GEXXX901_Paygroup_Alias2
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3 = $GEXXX901_Company_Alias3  || ' = ' || $GEXXX901_Company_Alias3  || ' And ' ||
                                                       $GEXXX901_Paygroup_Alias3 || ' = ' || $GEXXX901_Paygroup_Alias3
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4 = $GEXXX901_Company_Alias4  || ' = ' || $GEXXX901_Company_Alias4  || ' And ' ||
                                                       $GEXXX901_Paygroup_Alias4 || ' = ' || $GEXXX901_Paygroup_Alias4
  Else
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2 = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA2 || ')'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3 = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA3 || ')'
    Let $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4 = $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA4 || ')'
  End-If

End-Procedure

!***********************************************************************
Begin-Procedure GEXXX902-Select-Deptid-Parameters2
!***********************************************************************

  Let $OprID         = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID   = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_DEPTID_ROWS = 0
  Let $GEXXX902_INCLUDE_DEPTID_CRITERIA2 = ''
  Let $GEXXX902_INCLUDE_DEPTID_CRITERIA3 = ''
  Let $GEXXX902_INCLUDE_DEPTID_CRITERIA4 = ''
 
Begin-Select

GEX_RC_DEPTID2.DEPTID

  Add 1 To #GEX_RC_DEPTID_ROWS

  If #GEX_RC_DEPTID_ROWS = 1
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA2 = '(' || $GEXXX902_Deptid_Alias2 || ' In ('''     || &GEX_RC_DEPTID2.DEPTID || ''''
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA3 = '(' || $GEXXX902_Deptid_Alias3 || ' In ('''     || &GEX_RC_DEPTID2.DEPTID || ''''
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA4 = '(' || $GEXXX902_Deptid_Alias4 || ' In ('''     || &GEX_RC_DEPTID2.DEPTID || ''''
  Else
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA2 = $GEXXX902_INCLUDE_DEPTID_CRITERIA2 || ',''' || &GEX_RC_DEPTID2.DEPTID  || ''''
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA3 = $GEXXX902_INCLUDE_DEPTID_CRITERIA3 || ',''' || &GEX_RC_DEPTID2.DEPTID  || ''''
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA4 = $GEXXX902_INCLUDE_DEPTID_CRITERIA4 || ',''' || &GEX_RC_DEPTID2.DEPTID  || ''''
  End-If

From  PS_GEX_RC_DEPTID GEX_RC_DEPTID2

Where GEX_RC_DEPTID2.OPRID               = [$OprID]
And   GEX_RC_DEPTID2.RUN_CNTL_ID         = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_DEPTID2.DEPTID, ' ') != ' ' 
End-Select

  If #GEX_RC_DEPTID_ROWS = 0
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA2 = $GEXXX902_Deptid_Alias2 || ' = ' || $GEXXX902_Deptid_Alias2
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA3 = $GEXXX902_Deptid_Alias3 || ' = ' || $GEXXX902_Deptid_Alias3
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA4 = $GEXXX902_Deptid_Alias4 || ' = ' || $GEXXX902_Deptid_Alias4
  Else
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA2 = $GEXXX902_INCLUDE_DEPTID_CRITERIA2 || '))'
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA3 = $GEXXX902_INCLUDE_DEPTID_CRITERIA3 || '))'      
    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA4 = $GEXXX902_INCLUDE_DEPTID_CRITERIA4 || '))'  
  End-If

end-procedure

!***********************************************************************
Begin-Procedure GEXXX907-Select-DIV-CD-Parameters2
!***********************************************************************

  Let $OprID         = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID   = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_DIV_CD_ROWS = 0
  Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA2 = ''
  Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA3 = ''
  Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA4 = ''

Begin-Select

GEX_RC_DIV_CD2.GEX_COMPANY_DIV_CD

  Add 1 To #GEX_RC_DIV_CD_ROWS

  If #GEX_RC_DIV_CD_ROWS = 1
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA2 = '(' || $GEXXX907_DIV_CD_Alias2 || ' In (''' || &GEX_RC_DIV_CD2.GEX_COMPANY_DIV_CD || ''''
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA3 = '(' || $GEXXX907_DIV_CD_Alias3 || ' In (''' || &GEX_RC_DIV_CD2.GEX_COMPANY_DIV_CD || ''''
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA4 = '(' || $GEXXX907_DIV_CD_Alias4 || ' In (''' || &GEX_RC_DIV_CD2.GEX_COMPANY_DIV_CD || ''''
  Else
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA2 = $GEXXX907_INCLUDE_DIV_CD_CRITERIA2 || ',''' || &GEX_RC_DIV_CD2.GEX_COMPANY_DIV_CD  || ''''
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA3 = $GEXXX907_INCLUDE_DIV_CD_CRITERIA3 || ',''' || &GEX_RC_DIV_CD2.GEX_COMPANY_DIV_CD  || ''''
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA4 = $GEXXX907_INCLUDE_DIV_CD_CRITERIA4 || ',''' || &GEX_RC_DIV_CD2.GEX_COMPANY_DIV_CD  || ''''
  End-If

From  PS_GEX_RC_DIV_CD GEX_RC_DIV_CD2

Where GEX_RC_DIV_CD2.OPRID               = [$OprID]
And   GEX_RC_DIV_CD2.RUN_CNTL_ID         = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_DIV_CD2.GEX_COMPANY_DIV_CD, ' ') != ' ' 
End-Select

  If #GEX_RC_DIV_CD_ROWS = 0
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA2 = $GEXXX907_DIV_CD_Alias2 || ' = ' || $GEXXX907_DIV_CD_Alias2
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA3 = $GEXXX907_DIV_CD_Alias3 || ' = ' || $GEXXX907_DIV_CD_Alias3
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA4 = $GEXXX907_DIV_CD_Alias4 || ' = ' || $GEXXX907_DIV_CD_Alias4
  Else
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA2 = $GEXXX907_INCLUDE_DIV_CD_CRITERIA2 || '))'
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA3 = $GEXXX907_INCLUDE_DIV_CD_CRITERIA3 || '))'
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA4 = $GEXXX907_INCLUDE_DIV_CD_CRITERIA4 || '))'
  End-If

End-Procedure

!***********************************************************************
Begin-Procedure GEXXX909-Select-ACCT-CD-Parameters2
!***********************************************************************

  Let $OprID         = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID   = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_ACCT_CD_ROWS = 0
  Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA2 = ''
  Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA3 = ''
  Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA4 = ''

Begin-Select

GEX_RC_ACCT_CD2.ACCT_CD

  Add 1 To #GEX_RC_ACCT_CD_ROWS

  If #GEX_RC_ACCT_CD_ROWS = 1
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA2 = '(' || $GEXXX909_ACCT_CD_Alias2 || ' In (''' || &GEX_RC_ACCT_CD2.ACCT_CD || ''''
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA3 = '(' || $GEXXX909_ACCT_CD_Alias3 || ' In (''' || &GEX_RC_ACCT_CD2.ACCT_CD || ''''
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA4 = '(' || $GEXXX909_ACCT_CD_Alias4 || ' In (''' || &GEX_RC_ACCT_CD2.ACCT_CD || ''''
  Else
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA2 = $GEXXX909_INCLUDE_ACCT_CD_CRITERIA2 || ',''' || &GEX_RC_ACCT_CD2.ACCT_CD  || ''''
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA3 = $GEXXX909_INCLUDE_ACCT_CD_CRITERIA3 || ',''' || &GEX_RC_ACCT_CD2.ACCT_CD  || ''''
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA4 = $GEXXX909_INCLUDE_ACCT_CD_CRITERIA4 || ',''' || &GEX_RC_ACCT_CD2.ACCT_CD  || ''''
  End-If

From  PS_GEX_RC_ACCT_CD GEX_RC_ACCT_CD2

Where GEX_RC_ACCT_CD2.OPRID               = [$OprID]
And   GEX_RC_ACCT_CD2.RUN_CNTL_ID         = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_ACCT_CD2.ACCT_CD, ' ') != ' ' 
End-Select

  If #GEX_RC_ACCT_CD_ROWS = 0
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA2 = $GEXXX909_ACCT_CD_Alias2 || ' = ' || $GEXXX909_ACCT_CD_Alias2
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA3 = $GEXXX909_ACCT_CD_Alias3 || ' = ' || $GEXXX909_ACCT_CD_Alias3
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA4 = $GEXXX909_ACCT_CD_Alias4 || ' = ' || $GEXXX909_ACCT_CD_Alias4
  Else
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA2 = $GEXXX909_INCLUDE_ACCT_CD_CRITERIA2 || '))'
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA3 = $GEXXX909_INCLUDE_ACCT_CD_CRITERIA3 || '))'
    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA4 = $GEXXX909_INCLUDE_ACCT_CD_CRITERIA4 || '))'
  End-If

End-Procedure

!***********************************************************************
Begin-Procedure GEXXX916-Select-Jobcode-Parameters2
!***********************************************************************

  Let $OprID               = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID         = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_JOBCODE_ROWS = 0
  Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA2 = ''
  Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA3 = ''
  Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA4 = ''
 
Begin-Select

GEX_RC_JOBCODE2.JOBCODE

  Add 1 To #GEX_RC_JOBCODE_ROWS

  If #GEX_RC_JOBCODE_ROWS = 1
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA2 = '(' || $GEXXX916_Jobcode_Alias2 || ' Not In (''' || &GEX_RC_JOBCODE2.JOBCODE || ''''
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA3 = '(' || $GEXXX916_Jobcode_Alias3 || ' Not In (''' || &GEX_RC_JOBCODE2.JOBCODE || ''''
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA4 = '(' || $GEXXX916_Jobcode_Alias4 || ' Not In (''' || &GEX_RC_JOBCODE2.JOBCODE || ''''
  Else
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA2 = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA2 || ',''' || &GEX_RC_JOBCODE2.JOBCODE  || ''''
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA3 = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA3 || ',''' || &GEX_RC_JOBCODE2.JOBCODE  || ''''
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA4 = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA4 || ',''' || &GEX_RC_JOBCODE2.JOBCODE  || ''''
  End-If

From  PS_GEX_RC_JOBCODE GEX_RC_JOBCODE2

Where GEX_RC_JOBCODE2.OPRID                = [$OprID]
And   GEX_RC_JOBCODE2.RUN_CNTL_ID          = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_JOBCODE2.JOBCODE, ' ') != ' '

End-Select

  If #GEX_RC_JOBCODE_ROWS = 0
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA2 = $GEXXX916_Jobcode_Alias2 || ' = ' || $GEXXX916_Jobcode_Alias2
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA3 = $GEXXX916_Jobcode_Alias3 || ' = ' || $GEXXX916_Jobcode_Alias3
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA4 = $GEXXX916_Jobcode_Alias4 || ' = ' || $GEXXX916_Jobcode_Alias4
  Else
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA2 = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA2 || '))'
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA3 = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA3 || '))'
    Let $GEXXX916_EXCLUDE_JOBCODE_CRITERIA4 = $GEXXX916_EXCLUDE_JOBCODE_CRITERIA4 || '))'
  End-If

End-Procedure

!***********************************************************************
Begin-Procedure EOJ
!***********************************************************************

    evaluate $process_optn
          when = '1'
            use-report Report1
            if #record_count1 = 0
               print 'No Data Selected This Run'   (25,) Center
            end-if
            break
          when = '2'
            use-report Report2
            if #record_count2 = 0
               print 'No Data Selected This Run'   (25,) Center
            end-if
            break
          when = '3'
            use-report Report3
            if #record_count3 = 0
               print 'No Data Selected This Run'   (25,) Center
            end-if
            break
          when = '4'
            use-report Report4
            if #record_count4 = 0
               print 'No Data Selected This Run'   (25,) Center
            end-if
            break 
   end-evaluate
 
  Do Reset			

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'

End-Procedure

#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx916.sqc'  !Get jobcode multiple row table
#include 'gexxx921.sqc'  !Get hr single row run control
#include 'askftd.sqc'    !Ask-From-Thru-Date
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date math
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
