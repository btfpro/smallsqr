!***********************************************************************
! GEXPL027.SQR:                                                        *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-2006 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPL027.SQR :                                                       *
!                                                                      *
! Narrative:            This program was cloned from the Query         *
!			PT_BAKERS_WEEKLY_HOURS. ITG # 35596                              *
!			Create a program that will report the total                      *
!			hours and earnings paid to part time bakers in                   *
!			Local 19 for a specific period of time.	                         *
!			ITG-35596				                                                 *
! #Debug Used:          x                                              *
!								                                                       *
! SQL Tables:           PS_JOB, PS_EMPLMT_SRCH_QRY, PS_PERSONAL_DATA,  *
!			PS_PAY_CHECK, PS_PAY_SPCL_EARNS, PS_JOB_LABOR                    *
!								                                                       *
! Written by:           Rapidigm, Deepak. S, 04/11/06                  *
!                                                                      *
! Normally Run:         This report needs to run after the last check  *
!			is cut for the month. It reports on all check                    *
!			dates within the month. The output (excel file)                  *
!			needs to be sent to the Cynndie Vereen                           *
!                                                                      *
! Control Parms:        Reads the run control table PS_GEX_RUN_CNTL    *
!								                                                       *
!                                                                      *
!***********************************************************************

!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! GEX  SXD  09/10/2007  Commented the field  ROWSECCLASS from the
!                       table  PS_EMPLMT_SRCH_QRY and selected the     *
!                       OPRID from the PS_EMPLMT_SRCH_QRY table.                                                                                            *
!                                                                      *
! ISDVMXD   05/25/2009  As per S3#12754154 GEXPL027 not pulling the    *
!				correct w/e dates		                                           *
!VENDKXY    06/30/2009	Commented Employment search query	             *
!VENDKXY    11/06/2009   Changed the code for Prod issue               *
! GEX_SEC_REENG 2015-04-29 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)

#define #column1  001
#define #column2  015
#define #column3  040
#define #column4  050
#define #column5  060
#define #column6  070
#define #column7  085
#define #column8  100


BEGIN-SETUP
   Declare-variable
	date $from_date
	date $thrudate
	date $check_dt
   End-Declare
END-SETUP

!***********************************************************************
! Defines Heading of the report
!***********************************************************************
Begin-Heading 5
  !#include 'stdhdg01.sqc'

  print 'GEXPL027' (1,1)
  Print 'PT_BAKERS_WEEKLY_HOURS'     (,10) center

  Print 'EMPLID'           (+1,{#column1})
  Print 'NAME'             (+0,{#column2})
  Print 'DEPTID'           (+0,{#column3})
  print 'COMPANY'          (+0,{#column4})
  print 'JOBCODE'	   (+0,{#column5}) 
  print 'PAY_END_DT'	   (+0,{#column6})
  print 'SPCL_HRS'	   (+0,{#column7})	
  print 'SPCL_EARNS'	   (+0,{#column8})

End-Heading


!***********************************************************************
! Start of Program
!***********************************************************************
Begin-Report

  do Init-DateTime           !datetime.sqc
  do Init-Number             !number.sqc
  do Get-Current-DateTime    !curdttim.sqc
  do Stdapi-Init             !stdapi.sqc
  if isnull($prcs_process_instance)
	let $Prcs_OprID = 'ISDVDXS'
	let $Prcs_Run_Cntl_ID = 'gexpl027'
  end-if
  
  do Get-Run-Control	     !gexrnctl.sqc  
  
  if isnull(&thrudate)		
  	do Select-Pay-End-Date
	let $thrudate = $xxx_pay_end_dt
  else				
       let $thrudate = &thrudate
  end-if			
  
  !isdvmxd added for S3#12754154 on 05/25/2009 - Begin
 
 
  Let $pay_end_mon_yr = edit ($thrudate , 'MONTH-YYYY')	
  Let $pay_end_month = substr ($pay_end_mon_yr,1,3)
  Find '-' in $pay_end_mon_yr 0 #yr_loc
  Let #year_loc = #yr_loc + 2
  Let $pay_end_yr = substr($pay_end_mon_yr,#year_loc,4)
  Let $pay_end_date = $pay_end_month || '-' || $pay_end_yr
 
  !isdvmxd added for S3#12754154 on 05/25/2009 - End
  
!isdvmxd modified for S3#12754154 on 05/25/2009 - Begin
  if isnull(&fromdate)
!    	do Select-Pay-End-Date
!	let $fromdate = $xxx_pay_begin_dt
	Let $from_date = '01-'||$pay_end_date
	
	Let $from_date_1 = dateadd($from_date,'month',-1)
	
	Do Select-Pay-Begin-Date	
	Let $fromdate =  $check_dt
  else
	let $fromdate = &fromdate
  end-if
!isdvmxd modified for S3#12754154 on 05/25/2009 - End
	
  
  #debugx show '<' $fromdate '><' $thrudate '>'
	
	
  let $first = 'Y'
  let $old_emplid = ''

  #debugx show 'Doing Initialize-Totals'
  
  do Initialize-Totals

  #debugx show 'Doing Build-Dynamic-Where'

  do Build-Dynamic-Where

  #debugx show 'Doing Get-Pay-End-Dates'

  do Get-Pay-End-Dates

  #debugx show 'Doing Get-Emplid'

  do Get-Emplid

  #debugx show 'Doing Final Print-Total'	

  do Print-Total

  #debugx show 'Doing stdapi-term'
  do stdapi-term

End-Report


!********************************************************
! Procedure used to select current pay_begin_dt and 
! pay_end_dt if none specified on the run control page
!********************************************************
begin-procedure Select-Pay-End-Date
begin-select distinct
max(xxx.pay_end_dt)	&xxx.pay_end_dt
!max(xxx.pay_begin_dt)   &xxx.pay_begin_dt  !isdvmxd commented for S3#12754154  on 05/25/2009

   move &xxx.pay_end_dt to $xxx_pay_end_dt
!   move &xxx.pay_begin_dt to $xxx_pay_begin_dt   !isdvmxd commented for S3#12754154  on 05/25/2009
  
from ps_pay_calendar  xxx
where xxx.pay_confirm_run = 'Y'
and xxx.company <= '999'
and xxx.pay_end_dt <= SYSDATE


end-select
end-procedure 


!isdvmxd added for S3#12754154 - Begin
!********************************************************
! Procedure used to select begin_dt 
! if none specified on the run control page
!********************************************************

Begin-Procedure Select-Pay-Begin-Date

Begin-Select 
MAX(PC.PAY_END_DT)    &PC.PAY_END_DT

	Move &PC.PAY_END_DT to $last_pay_end_dt

FROM PS_PAY_CALENDAR  PC
WHERE PC.PAY_CONFIRM_RUN = 'Y'
AND PC.COMPANY <= '999'
AND PC.PAY_END_DT <= $from_date 
End-Select



Begin-select
MAX(PCAL.CHECK_DT)	&PCAL.CHECK_DT

	Move &PCAL.CHECK_DT to $check_dt
	
	
	Let $check_date_1 = dateadd($check_dt,'day',7)
	!If ($check_date_1 <= $from_date) ! vendkxy Changed the code for Prod issue
	If ($check_date_1 < $from_date) !vendkxy Changed the code for Prod issue
		Let $check_dt = $check_date_1
	Else		
		Let $check_dt = $check_dt
	End-If

	
	
FROM PS_PAY_CALENDAR  PCAL
WHERE PCAL.CHECK_DT BETWEEN $from_date_1 AND $last_pay_end_dt
End-Select
End-Procedure Select-Pay-Begin-Date


!isdvmxd added for S3#12754154 - End

!***********************************************************************
! Builds the where clause for Jobcode and Union Code
!***********************************************************************
begin-procedure Build-Dynamic-Where
	Let $GEXXX916_Jobcode_Alias = 'A.JOBCODE' 
	Do GEXXX916-Select-Jobcode-Parameters
	Let $GEXXX913_UNION_CD_Alias = 'E.UNION_CD'
	Do GEXXX913-Select-UNION-CD-Parameters

	move $GEXXX916_INCLUDE_JOBCODE_CRITERIA to $GEXXX916_INCLUDE_A_JOBCODE_CRITERIA
	move $GEXXX913_INCLUDE_UNION_CD_CRITERIA to $GEXXX913_INCLUDE_E_UNION_CD_CRITERIA

	Let $GEXXX916_Jobcode_Alias = 'JOB.JOBCODE' 
	Do GEXXX916-Select-Jobcode-Parameters
	Let $GEXXX913_UNION_CD_Alias = 'LAB.UNION_CD'
	Do GEXXX913-Select-UNION-CD-Parameters

	move $GEXXX916_INCLUDE_JOBCODE_CRITERIA to $GEXXX916_INCLUDE_JOB_JOBCODE_CRITERIA
	move $GEXXX913_INCLUDE_UNION_CD_CRITERIA to $GEXXX913_INCLUDE_LAB_UNION_CD_CRITERIA

	#debugx show $GEXXX916_INCLUDE_A_JOBCODE_CRITERIA
	#debugx show $GEXXX913_INCLUDE_E_UNION_CD_CRITERIA
	#debugx show $GEXXX916_INCLUDE_JOB_JOBCODE_CRITERIA
	#debugx show $GEXXX913_INCLUDE_LAB_UNION_CD_CRITERIA


end-procedure



!***********************************************************************
! Get a list of all the pay_end_dts between the range specified
!***********************************************************************
begin-procedure Get-Pay-End-Dates
	let #i = 1
	create-array  name=pay-date size=50
	field=pdate:date

begin-select distinct 
pay_end_dt  &pay
	
	#debugx show 'Putting date in array <' #i '><' &pay '>'
	put &pay into pay-date(#i)
	add 1 to #i	

from ps_pay_calendar  pay
where pay.pay_confirm_run = 'Y'
and pay.company <= '999'
and pay.pay_end_dt <= SYSDATE
and pay.PAY_END_DT BETWEEN $fromdate AND $thrudate
end-select
end-procedure


!***********************************************************************
! Selects a list of distinct emplids which fir the runtime parameters
!***********************************************************************
begin-procedure Get-Emplid
begin-select distinct 
JOB.EMPLID	&job_emplid
PER.NAME	&per_name 
JOB.DEPTID	&job_deptid
CHK.COMPANY     &chk_company
JOB.JOBCODE	&job_jobcode
	
	move &job_emplid to $emplid
	move &per_name 	 to $name
	move &job_deptid to $deptid
	move &chk_company to $company
	move &job_jobcode to $jobcode


	let $deptid = '="' || edit($deptid,'0000') || '"'
	let $emplid = '="' || $emplid || '"'

	let #i = 1
	while 1
		get $pay_end_dt from pay-date(#i)
		let $pay_end_dt = rtrim(ltrim($pay_end_dt,' '),' ')
		if $pay_end_dt = ''
			#debugx show 'breaking from while loop'
			break
		end-if
		
		#debugx show 'Doing Select-Data <' &job_emplid '><' $pay_end_dt '><' #i '>'
		do Select-Data
		add 1 to #i

	end-while
	

FROM PS_JOB  JOB, PS_PAY_CHECK  CHK, PS_JOB_LABOR  LAB, PS_PERSONAL_DATA  PER
WHERE [$GEXXX916_INCLUDE_JOB_JOBCODE_CRITERIA] 
AND JOB.EFFDT =
        (SELECT MAX(JOB_ED.EFFDT) FROM PS_JOB  JOB_ED
        WHERE JOB.EMPLID = JOB_ED.EMPLID
          AND JOB.EMPL_RCD = JOB_ED.EMPL_RCD
          AND JOB_ED.EFFDT <= SYSDATE)
AND JOB.EFFSEQ =
        (SELECT MAX(JOB_ES.EFFSEQ) FROM PS_JOB  JOB_ES
        WHERE JOB.EMPLID = JOB_ES.EMPLID
          AND JOB.EMPL_RCD = JOB_ES.EMPL_RCD
          AND JOB.EFFDT = JOB_ES.EFFDT)
AND JOB.EMPLID = CHK.EMPLID
AND JOB.EMPL_RCD = CHK.EMPL_RCD
AND CHK.PAY_END_DT BETWEEN $fromdate AND $thrudate
AND JOB.EMPLID = LAB.EMPLID
AND JOB.EMPL_RCD = LAB.EMPL_RCD
AND LAB.EFFDT =
        (SELECT MAX(LAB_ED.EFFDT) FROM PS_JOB_LABOR  LAB_ED
        WHERE LAB.EMPLID = LAB_ED.EMPLID
          AND LAB.EMPL_RCD = LAB_ED.EMPL_RCD
          AND LAB_ED.EFFDT <= JOB.EFFDT)
AND LAB.EFFSEQ =
        (SELECT MAX(LAB_ES.EFFSEQ) FROM PS_JOB_LABOR  LAB_ES
        WHERE LAB.EMPLID = LAB_ES.EMPLID
          AND LAB.EMPL_RCD = LAB_ES.EMPL_RCD
          AND LAB.EFFDT = LAB_ES.EFFDT)
AND [$GEXXX913_INCLUDE_LAB_UNION_CD_CRITERIA]
AND JOB.EMPLID = PER.EMPLID
order by PER.NAME
end-select
end-procedure



!***********************************************************************
! Main Procedure which selects the data.
!***********************************************************************
Begin-Procedure Select-Data
	let #spcl_hrs = 0
	let #spcl_earns = 0
Begin-Select
A.EMPLID	&emplid    
B.NAME		&name      
A.DEPTID	&deptid
C.COMPANY	&company   
A.JOBCODE	&jobcode   
C.PAY_END_DT	&pay_end_dt
D.SPCL_HRS	&spcl_hrs
D.SPCL_EARNS	&spcl_earns


	if $first = 'Y'
		#debugx show 'First ' &emplid
		let $old_emplid = &emplid 
		let $first = 'N'
	end-if

	#debugx Show 'Inside Select-Data <' &emplid '><' $old_emplid '>'
	if &emplid <> $old_emplid 
		do Print-Total
		move &emplid to $old_emplid 
	end-if

	move &emplid to $old_emplid 
	move &emplid to $emplid 
	move &name to $name
	move &deptid to $deptid
	let $deptid = '="' || edit($deptid,'0000') || '"'
	let $emplid = '="' || $emplid || '"'
	
	move &company to $company
	move &jobcode to $jobcode
	move &spcl_hrs to #spcl_hrs
	move &spcl_earns to #spcl_earns

	let #spcl-hrs-total = #spcl-hrs-total + #spcl_hrs
	let #spcl-earns-total = #spcl-earns-total + #spcl_earns

	do Print-Data
!vendkxy commented the employment search query
!FROM PS_JOB  A, PS_EMPLMT_SRCH_QRY  A1, PS_PERSONAL_DATA  B, PS_PAY_CHECK  C, PS_PAY_SPCL_EARNS  D, PS_JOB_LABOR  E
FROM PS_JOB  A, PS_PERSONAL_DATA  B, PS_PAY_CHECK  C, PS_PAY_SPCL_EARNS  D, PS_JOB_LABOR  E
  WHERE 
  !A.EMPLID = A1.EMPLID
    !  AND A.EMPL_RCD = A1.EMPL_RCD
    ! GEX  SXD  09/10/2007  Begin
    !AND A1.ROWSECCLASS = 'DPALL'       
    !AND  A1.OPRID = $Prcs_OprID !Manish,08/17/2007,PY227-Giant Eagle added on 08/08/2007 for HCM 9.0 Upgrade
    ! GEX  SXD  09/10/2007  End		
    !AND B.EMPLID = A1.EMPLID
    !AND
     ( A.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB  A_ED
        WHERE A.EMPLID = A_ED.EMPLID
          AND A.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= SYSDATE)
    AND A.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB  A_ES
        WHERE A.EMPLID = A_ES.EMPLID
          AND A.EMPL_RCD = A_ES.EMPL_RCD
          AND A.EFFDT = A_ES.EFFDT)
     AND A.EMPLID = B.EMPLID
     ! AND A.JOBCODE IN ('68000','68001','68002','68005','70051','78006')
     AND [$GEXXX916_INCLUDE_A_JOBCODE_CRITERIA]
     AND A.EMPLID = C.EMPLID
     AND A.EMPL_RCD = C.EMPL_RCD
     AND A.EMPLID = C.EMPLID
     AND C.PAY_END_DT = $pay_end_dt   ! BETWEEN $fromdate AND $thrudate
     AND C.COMPANY = D.COMPANY
     AND C.PAYGROUP = D.PAYGROUP
     AND C.PAY_END_DT = D.PAY_END_DT
     AND C.OFF_CYCLE = D.OFF_CYCLE
     AND C.PAGE_NUM = D.PAGE_NUM
     AND C.LINE_NUM = D.LINE_NUM
     AND C.SEPCHK = D.SEPCHK
     AND D.ERNCD_SPCL = 'RAJ'
     AND A.EMPLID = E.EMPLID
     AND A.EMPL_RCD = E.EMPL_RCD
     AND E.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_JOB_LABOR  E_ED
        WHERE E.EMPLID = E_ED.EMPLID
          AND E.EMPL_RCD = E_ED.EMPL_RCD
          AND E_ED.EFFDT <= A.EFFDT)
    AND E.EFFSEQ =
        (SELECT MAX(E_ES.EFFSEQ) FROM PS_JOB_LABOR  E_ES
        WHERE E.EMPLID = E_ES.EMPLID
          AND E.EMPL_RCD = E_ES.EMPL_RCD
          AND E.EFFDT = E_ES.EFFDT)
     !AND E.UNION_CD IN ('R02','CE4') 
     AND [$GEXXX913_INCLUDE_E_UNION_CD_CRITERIA] )
     AND A.EMPLID = &job_emplid
  ORDER BY 2
End-Select


	! If no data in PS_PAY_SPCL_EARNS then print row with zeros

        #debugx show '<' &job_emplid '><' $old_emplid '><' #spcl_hrs '><' #spcl_earns '>'
	
	if (#spcl_hrs = 0) and (#spcl_earns = 0)
		if (&job_emplid <> $old_emplid) 
		   #debugx show 'Outside Select-Data, doing print-total'
		   do Print-Total
		end-if
		do Print-Data	
		move &job_emplid to $old_emplid 
	end-if

End-Procedure


!***********************************************************************
! Prints a row of data
!***********************************************************************
begin-procedure Print-Data

	#debugx show 'In Print-Data ' $emplid 
        !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
        do Get-Emp-Ssn ($emplid, $Ssn_Out) 
	!print $emplid 		(+1,{#column1})
        print $Ssn_Out 		(+1,{#column1})
        !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
	print $name 		(0,{#column2})
	print $deptid 		(0,{#column3})
	print $company		(0,{#column4})
	print $jobcode		(0,{#column5})
	print $pay_end_dt	(0,{#column6})	
	print #spcl_hrs		(0,{#column7})	
	print #spcl_earns	(0,{#column8})	

end-procedure 



!***********************************************************************
! Initializes the variables which hold the totals
!***********************************************************************
Begin-Procedure Initialize-Totals

	let #spcl-hrs-total = 0
	let #spcl-earns-total = 0

End-Procedure

!***********************************************************************
! Prints Totals for each EMPLID
!***********************************************************************
Begin-Procedure Print-Total

	#debugx show 'In Print-Total '

	print 'Employee Total : '	(+2,{#column1})
	print #spcl-hrs-total		(0,{#column7})
	print #spcl-earns-total		(0,{#column8})
	print ' '			(+1,0)
	do Initialize-Totals

End-Procedure 

#include 'stdapi.sqc'    !Process Scheduler Interface
#include 'reset.sqc'     !Reset Printer Procedure
#include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'  !Routines for date math
#include 'gexrnctl.sqc'  !Routine for Get-Run-Control
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#include 'gexxx916.sqc'  !Get Jobcode from Run Control Page
#include 'gexxx913.sqc'  !Get Union Code from Run Control Page
#Include 'getgeid.sqc'   !Get SSN !GEX_SEC_REENG 2015-04-29 Vahini Katta