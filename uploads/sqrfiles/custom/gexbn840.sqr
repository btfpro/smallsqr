!***********************************************************************
! GEXBN840:  Cobra Administration Report                               *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!------------------------------------------------------------------------
! Report Name: GEXBN840.SQR - SQR Template
!-----------------------------------------------------------------------
! Description: Giant Eagle is changing the vendor used for COBRA 
! administration from HM Benefits to BCC effective January 1, 2012. The 
! new vendor will provide COBRA administrative services for Giant Eagle
! Team Members, including communicating COBRA eligibility, collecting 
! payment and carrier notifications. Giant Eagle is committed to 
! transmitting information for Team Members newly eligible for COBRA 
! to the new vendor electronically. This program will generate the file 
! of newly eligible COBRA participants for the vendor. This will run 
! weekly and generate a file which will be encrypted and then FTP’d to 
! the vendor. In addition to the file, the program will generate an 
! error/exception report. 
!-----------------------------------------------------------------------
! GEX Modifications
!-----------------------------------------------------------------------
! GEXBN_848_D103104_01 2011-05-17 Vahini Katta
! New Development
!-----------------------------------------------------------------------

#Include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Portrait)

Begin-Report
#debug9 Show 'Begin-Report'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc
  
  show ' '
  display 'Start Run Time: ' noline
  show $AsofNow
  Do Initialization
  Do Open-File
  Do Write_Header
 
  Do Get-Pay-End-Dt
  
  Do Report-Lost-Covrg
  Do Report-Lost-Dep-Cov
  Do Close-File
  
  show ' '
  display 'End Run Time: ' noline
  show $AsofNow
  do Stdapi-Term
    
End-Report

!-----------------------------------------------------------------------
! Function:    Initialization                                          -
! Description: Initialization                                          -
! Called By:   Report-Lost-Covrg                                       -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Initialization
#debug9 Show 'Initialization'
   
  Let $ReportID      = 'GEXBN840'
  Let $ReportTitle   = 'Cobra Interface'
  Let $delim = ','

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime
    
  If $prcs_process_instance = ''
    Do SQRW-Run-Controls
  Else
    Do Process-Scheduler-Run-Controls
  End-if
 
  If isnull($AsofDate)
     Let $AsofDate = $AsOfToday
  End-If
  
  show '$SlctPlanCriteria   :' $SlctPlanCriteria
  show '$SlctPlanCriteria1  :' $SlctPlanCriteria1
  show '$SlctPlanCriteria2  :' $SlctPlanCriteria2
  show '$SlctBenCriteria    :' $SlctBenCriteria
  show '$SlctBenCriteria1   :' $SlctBenCriteria
  show '$SlctBenCriteria2   :' $SlctBenCriteria
  show '$AsofDate           :' $AsofDate
  
End-Procedure

!-----------------------------------------------------------------------
! Function:    SQRW-Run-Controls                                       -
! Description: SQRW-Run-Controls                                       -
! Called By:   Initialization                                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure SQRW-Run-Controls
#debug9 Show 'SQRW-Run-Controls'

  Do Ask-As-Of-Date
 
  input $BenCriteria maxlen=100 type=char 'Enter the Benefit Program enclosed in quotes. Multiple Ben Program should be separated by commas'
  
  input $PlanCriteria maxlen=100 type=char 'Enter the  Plan type enclosed in quotes. Multiple Ben Program should be separated by commas'
  
  show '$BenCriteria :' $BenCriteria
  show '$PlanCriteria:' $PlanCriteria
  
  if isnull($BenCriteria)
    move '' to $SlctBenCriteria
    move '' to $SlctBenCriteria1
    move '' to $SlctBenCriteria2
  else
    let $SlctBenCriteria  = 'AND BAS.BENEFIT_PROGRAM IN (' || $BenCriteria || ')' 
    let $SlctBenCriteria1 = 'AND BO.BENEFIT_PROGRAM IN (' || $BenCriteria || ')' 
    let $SlctBenCriteria2 = 'AND BO.BENEFIT_PROGRAM IN (' || $BenCriteria || ')'
  end-if 
  
  if isnull($PlanCriteria)
    move '' to $SlctPlanCriteria
    move '' to $SlctPlanCriteria1
    move '' to $SlctPlanCriteria2
  else
    let $SlctPlanCriteria  = 'AND HB1.PLAN_TYPE IN (' || $PlanCriteria || ')'
    let $SlctPlanCriteria1 = 'AND FB1.PLAN_TYPE IN (' || $PlanCriteria || ')' 
    let $SlctPlanCriteria2 = 'AND HB3.PLAN_TYPE IN (' || $PlanCriteria || ')'
  end-if 
  
End-Procedure

!-----------------------------------------------------------------------
! Function:    Process-Scheduler-Run-Controls                          -
! Description: Select Values from Run Control                          -
! Called By:   Initialization                                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Process-Scheduler-Run-Controls
#debugd show 'Process-Scheduler-Run-Controls'

 show '$prcs_run_cntl_id = ' $prcs_run_cntl_id
 show '$prcs_oprid       = ' $prcs_oprid
 Do GEXRCBN1-SELECT-PARAMETERS

 Let $AsofDate = $GEX_RC_BEN.ASOFDATE

 move '' to $BenCriteria
 move '' to $PlanCriteria
 
BEGIN-SELECT
RB.BENEFIT_PROGRAM

    if isnull($BenCriteria)
       let $BenCriteria = $BenCriteria ||''''|| &RB.BENEFIT_PROGRAM || ''''
    else
       let $BenCriteria = $BenCriteria ||','||''''|| &RB.BENEFIT_PROGRAM || ''''
    end-if

FROM PS_GEX_RUN_BENPROG RB
WHERE RB.oprid       = $prcs_oprid
  AND RB.run_cntl_id = $prcs_run_cntl_id
END-SELECT

BEGIN-SELECT
RP.PLAN_TYPE

    if isnull($PlanCriteria)
       let $PlanCriteria = $PlanCriteria ||''''|| &RP.PLAN_TYPE || ''''
    else
       let $PlanCriteria = $PlanCriteria ||','||''''|| &RP.PLAN_TYPE || ''''
    end-if

FROM PS_GEX_RUN_PLNTYPE RP
WHERE RP.oprid       = $prcs_oprid
  AND RP.run_cntl_id = $prcs_run_cntl_id
END-SELECT

  if isnull($BenCriteria)
    move '' to $SlctBenCriteria
    move '' to $SlctBenCriteria1
    move '' to $SlctBenCriteria2
  else
    let $SlctBenCriteria  = 'AND BAS.BENEFIT_PROGRAM IN (' || $BenCriteria || ')' 
    let $SlctBenCriteria1 = 'AND BO.BENEFIT_PROGRAM IN (' || $BenCriteria || ')' 
    let $SlctBenCriteria2 = 'AND BO.BENEFIT_PROGRAM IN (' || $BenCriteria || ')'
  end-if 
  
  if isnull($PlanCriteria)
    move '' to $SlctPlanCriteria
    move '' to $SlctPlanCriteria1
    move '' to $SlctPlanCriteria2
  else
    let $SlctPlanCriteria  = 'AND HB1.PLAN_TYPE IN (' || $PlanCriteria || ')'
    let $SlctPlanCriteria1 = 'AND FB1.PLAN_TYPE IN (' || $PlanCriteria || ')' 
    let $SlctPlanCriteria2 = 'AND HB3.PLAN_TYPE IN (' || $PlanCriteria || ')'
  end-if 

  show ' '
  show '*** Run Control Parameters ***'
 
end-procedure Process-Scheduler-Run-Controls

!-----------------------------------------------------------------------
! Function:    Open-File                                               -
! Description: Opens Files                                             -
! Called By:   Begin_report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Open-File

  #ifdef UNIX
    Let $File       = '{OUTFILE}' || Lower($ReportID) || '.csv'
    Let $Error_File = '{OUTFILE}' || Lower($ReportID) || '_error.csv'
  #end-if
  
  #ifdef NT   
    Let $File       = 'C:\TEMP\'  || Lower($ReportID) || '.csv'
    LET $Error_File = 'C:\TEMP\'  || Lower($ReportID) || '_error.csv'  
  #end-if 
   
   OPEN $File as 1 for-writing record=1600 status = #Open
     
   OPEN $Error_File as 2 for-writing record=1600 status = #Open1
    
   if (#Open <> 0)
      let $Error-Message = 'PROGRAM ABORTED - Problem opening file : ' || $File
      show $Error-Message
      STOP
   end-if
   
   if (#Open1 <> 0)
      let $Error-Message = 'PROGRAM ABORTED - Problem opening Error file : ' || $Error_File
      show $Error-Message
      STOP
   end-if
   
End-Procedure Open-File

!-----------------------------------------------------------------------
! Function:    Write_Header                                            -
! Description: Writes the header row for both the files                -
! Called By:   Begin_report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Write_Header
        
 Write 1 from 'First Name'		           $delim
             'Last Name'		             $delim
             'Employee SSN'		           $delim
             'SSN'			                 $delim
             'Birthdate'		             $delim
             'Relationship'		           $delim
             'Addr1'			               $delim
             'Addr2'			               $delim
             'City'			                 $delim
             'State'			               $delim
             'Zip Code'			             $delim
             'Phone'			               $delim
             'EE Hire Date'		           $delim
             'EE Term Date'		           $delim
             'Original Effective Date'	 $delim
             'Effective Date'		         $delim
             'Qualifying Event'		       $delim
             'Event Date'		             $delim
             'Severance Date'		         $delim
             'Coverage Type'		         $delim
             'Enrollment Level'		       $delim
             'Benefit Code'		           $delim
             'Comments'			             $delim
             'Gender'			               $delim
             'Division'			             $delim
             'Department'		             $delim
             'Location'			             $delim
             'Area'			                 $delim
             'Payroll Class'		         $delim
             'EE UDClass 1'		           $delim
             'EE UDClass 2'		           $delim
             'EE UDClass 3'		           $delim
             'EE UDClass 4'		           $delim
             'EE UDClass 5'		           $delim
                   
  Write 2 from 'First Name'              $delim
               'Last Name'               $delim
               'Employee SSN'            $delim 
               'Message'                 $delim


End-Procedure


!-----------------------------------------------------------------------
! Function:    Get-Pay-End-Dt                                          -
! Description: Get the current week pay end dt                         -
! Called By:   Report-Lost-Covrg                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Pay-End-Dt
Begin-Select loops=1
PAY.PAY_BEGIN_DT
PAY.PAY_END_DT

  move &PAY.PAY_BEGIN_DT to $Pay_Begin_Dt
  move &PAY.PAY_END_DT   to $Pay_End_Dt
  display 'Pay End Date:' noline
  display $pay_end_Dt
  show '$Pay_Begin_Dt  :' $Pay_Begin_Dt

FROM PS_PAY_CALENDAR PAY
WHERE PAY.PAY_END_DT = (SELECT MAX(PAY_END_DT) FROM PS_PAY_CALENDAR
		                    WHERE PAY_END_DT <= $AsofDate
                        AND PAY_OFF_CYCLE_CAL = 'N')
AND PAY.PAY_OFF_CYCLE_CAL = 'N'
End-Select
End-Procedure

!-----------------------------------------------------------------------
! Function:    Report-Lost-Covrg                                       -
! Description: Main Selection                                          -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Report-Lost-Covrg
 let $Pay_Begin_Dt='01-jan-2011'
Begin-Select
HB1.EMPLID,
HB1.EMPL_RCD,
HB1.COBRA_EVENT_ID,
HB1.PLAN_TYPE, 
HB1.BENEFIT_NBR,
HB1.EFFDT,
HB1.DEDUCTION_END_DT,
HB1.COVERAGE_BEGIN_DT,
HB1.COVERAGE_ELECT_DT,
HB1.COVERAGE_ELECT,
HB1.BENEFIT_PLAN

    SHOW '&HB1.EMPLID   :' &HB1.EMPLID
    SHOW '&HB1.PLAN_TYPE:' &HB1.PLAN_TYPE
    SHOW '&HB1.EFFDT    :' &HB1.EFFDT
    If Substr(&HB1.PLAN_TYPE,1,1) = '1'
 			do Select-Prev-Health-plan
 		Else
 		  If Substr(&HB1.PLAN_TYPE,1,1) = '6'
 	 		   do Select-Prev-FSA-plan                           
		  End-if
		End-if
		
FROM PS_HEALTH_BENEFIT  HB1
WHERE HB1.COVERAGE_ELECT = 'T'
AND ((HB1.COVERAGE_ELECT_DT BETWEEN $Pay_Begin_Dt AND $Pay_End_Dt
      AND HB1.COVERAGE_BEGIN_DT < $Pay_End_Dt)
      OR (HB1.COVERAGE_BEGIN_DT BETWEEN $Pay_Begin_Dt AND $Pay_End_Dt))
[$SlctPlanCriteria]
UNION SELECT                                            
FB1.EMPLID,
FB1.EMPL_RCD,
FB1.COBRA_EVENT_ID,
FB1.PLAN_TYPE, 
FB1.BENEFIT_NBR,
FB1.EFFDT,
FB1.DEDUCTION_END_DT,
FB1.COVERAGE_BEGIN_DT,
FB1.COVERAGE_ELECT_DT,
FB1.COVERAGE_ELECT,
FB1.BENEFIT_PLAN                                       
FROM PS_FSA_BENEFIT  FB1                                      
WHERE FB1.COVERAGE_ELECT = 'T'
AND ((FB1.COVERAGE_ELECT_DT BETWEEN $Pay_Begin_Dt AND $Pay_End_Dt
      AND FB1.COVERAGE_BEGIN_DT < $Pay_End_Dt)
      OR (FB1.COVERAGE_BEGIN_DT BETWEEN $Pay_Begin_Dt AND $Pay_End_Dt))
[$SlctPlanCriteria1]
ORDER BY EMPLID,PLAN_TYPE              
End-Select
End-Procedure Report-Lost-Covrg

!-----------------------------------------------------------------------
! Function:    Select-Prev-Health-plan                                 -
! Description: Select the Previous Health Row                          -
! Called By:   Report-Lost-Covrg                                       -
! Calls:       Match-Ben-Plan Get-TM-Details Check-Event-Class         -
!              Life-Add-Benefit,Get-Covg-Cd-Descr,Get-Dependents       -
!              Write-Report                                            - 
!-----------------------------------------------------------------------
Begin-Procedure Select-Prev-Health-plan

  Move 'N' to $Error_Found
  do Initialize-Vars
  Move ''  to $SlctDepCriteria  
Begin-Select
HB2.EMPLID
HB2.EMPL_RCD
HB2.BENEFIT_PLAN
HB2.PLAN_TYPE
HB2.COVRG_CD
HB2.EFFDT
HB2.COVERAGE_ELECT
HB2.BENEFIT_NBR
     
   if &HB2.COVERAGE_ELECT='E'
   
     Move &HB2.EMPLID       to  $Emplid
     Move &HB2.EMPL_RCD     to  $Empl_Rcd 
     Move &HB1.EFFDT        to  $Effdt
     Move &HB2.EFFDT        to  $Prev_Effdt
     Move &HB2.BENEFIT_PLAN to  $Ben_Plan
     Move &HB2.BENEFIT_NBR  to  $Ben_Nbr
     Move &HB2.PLAN_TYPE    to  $Pln_Type
     Move 'PLAN_TYPE'       to  $FieldName
	   Move &HB2.PLAN_TYPE    to  $FieldValue
     do Read-Translate-Table
	   Move $XlatShortName    to  $Coverage
	   
     do Match-Ben-Plan
     if $Ben_Plan_Match='Y'
     
       do Get-TM-Details
       do Check-Event-Class
       
       if $Error_Found='N'
         do Life-Add-Benefit
         do Get-Covg-Cd-Descr 
         Move 'EMP' to $Relationship
         do Write-Report
         do Get-Dependents   
       End-if  
     end-if   
   end-if  
      
FROM PS_HEALTH_BENEFIT HB2
WHERE HB2.EMPLID = &HB1.EMPLID
AND HB2.EMPL_RCD = &HB1.EMPL_RCD
AND HB2.PLAN_TYPE = &HB1.PLAN_TYPE
AND HB2.EFFDT = (SELECT MAX(EFFDT) FROM PS_HEALTH_BENEFIT
                  WHERE EMPLID = HB2.EMPLID
                    AND EMPL_RCD = HB2.EMPL_RCD
                    AND COBRA_EVENT_ID=HB2.COBRA_EVENT_ID
                    AND PLAN_TYPE = HB2.PLAN_TYPE
                    AND BENEFIT_NBR = HB2.BENEFIT_NBR
                    AND EFFDT < &HB1.EFFDT)             
End-Select
End-Procedure Select-Prev-Health-plan

!-----------------------------------------------------------------------
! Function:    Report-Lost-Dep-Cov                                       -
! Description: Main Selection                                          -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Report-Lost-Dep-Cov
Begin-Select
HB3.EMPLID,
HB3.EMPL_RCD,
HB3.PLAN_TYPE, 
HB3.BENEFIT_NBR,
HB3.EFFDT,
HB3.COVRG_CD,
HB3.COVERAGE_ELECT,
HB3.BENEFIT_PLAN,

  do Select-Prev-Hlth-Plan

FROM PS_HEALTH_BENEFIT  HB3
WHERE HB3.COVERAGE_ELECT = 'E'
AND ((HB3.COVERAGE_ELECT_DT BETWEEN $Pay_Begin_Dt AND $Pay_End_Dt
     AND HB3.COVERAGE_BEGIN_DT < $Pay_End_Dt)
     OR (HB3.COVERAGE_BEGIN_DT BETWEEN $Pay_Begin_Dt AND $Pay_End_Dt))
[$SlctPlanCriteria2]
End-Select
End-Procedure Report-Lost-Dep-Cov

!-----------------------------------------------------------------------
! Function:    Select-Prev-Hlth-Plan                                   -
! Description: Main Selection                                          -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Select-Prev-Hlth-Plan
  Move 'N' to $Error_Found
  do Initialize-Vars
Begin-Select
HB4.EMPLID
HB4.EMPL_RCD
HB4.BENEFIT_PLAN
HB4.PLAN_TYPE
HB4.COVRG_CD
HB4.EFFDT
HB4.COVERAGE_ELECT
HB4.BENEFIT_NBR
     
   if &HB4.COVERAGE_ELECT='E'
   
     Move &HB4.EMPLID       to  $Emplid
     Move &HB4.EMPL_RCD     to  $Empl_Rcd 
     Move &HB3.EFFDT        to  $Effdt
     Move &HB4.EFFDT        to  $Prev_Effdt
     Move &HB4.BENEFIT_PLAN to  $Ben_Plan
     Move &HB4.BENEFIT_NBR  to  $Ben_Nbr
     Move &HB4.PLAN_TYPE    to  $Pln_Type
     Move 'PLAN_TYPE'       to  $FieldName
	   Move &HB2.PLAN_TYPE    to  $FieldValue
     do Read-Translate-Table
	   Move $XlatShortName    to  $Coverage
	   
     do Match-Ben-Plan
     if $Ben_Plan_Match='Y'
     
      do Get-Check-Dep-Count
      if #Count>0
       do Get-TM-Details
       do Check-Event-Class
       
       if $Error_Found='N'
         do Life-Add-Benefit
         do Get-Covg-Cd-Descr 
         Move 'EMP' to $Relationship
         do Write-Report
         do Get-Dependents   
       End-if  
      end-if 
     end-if   
   end-if  
      
FROM PS_HEALTH_BENEFIT HB4
WHERE HB4.EMPLID = &HB1.EMPLID
AND HB4.EMPL_RCD = &HB1.EMPL_RCD
AND HB4.PLAN_TYPE = &HB1.PLAN_TYPE
AND HB4.EFFDT = (SELECT MAX(EFFDT) FROM PS_HEALTH_BENEFIT
                  WHERE EMPLID = HB4.EMPLID
                    AND EMPL_RCD = HB4.EMPL_RCD
                    AND COBRA_EVENT_ID=HB4.COBRA_EVENT_ID
                    AND PLAN_TYPE = HB4.PLAN_TYPE
                    AND BENEFIT_NBR = HB4.BENEFIT_NBR
                    AND EFFDT < &HB3.EFFDT)             
End-Select
End-Procedure Select-Prev-Health-plan

!-----------------------------------------------------------------------
! Function:    Get-Check-Dep-Count                                     -
! Description: Main Selection                                          -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Check-Dep-Count
 Move 0 to #Count
Begin-Select
EMPLID,
PLAN_TYPE,
DEPENDENT_BENEF

  if isnull($DepCriteria)
       let $DepCriteria = $DepCriteria ||''''|| &DEPENDENT_BENEF || ''''
  else
       let $DepCriteria = $DepCriteria ||','||''''|| &DEPENDENT_BENEF || ''''
  end-if
  
 add 1 to #Count
 
FROM
(
SELECT EMPLID,PLAN_TYPE,DEPENDENT_BENEF FROM PS_HEALTH_DEPENDNT WHERE PLAN_TYPE=&HB4.PLAN_TYPE AND EMPLID=&HB4.EMPLID AND EFFDT=&HB3.EFFDT
MINUS
SELECT EMPLID,PLAN_TYPE,DEPENDENT_BENEF FROM PS_HEALTH_DEPENDNT WHERE PLAN_TYPE=&HB4.PLAN_TYPE AND EMPLID=&HB4.EMPLID AND EFFDT=&HB4.EFFDT
)
End-Select
  if isnull($DepCriteria)
    move '' to $SlctDepCriteria
  else
    let $SlctDepCriteria  = 'AND HD.DEPENDENT_BENEF IN (' || $DepCriteria || ')'
  end-if 
End-Procedure Get-Check-Dep-Count

!-----------------------------------------------------------------------
! Function:    Select-Prev-FSA-Plan                                    -
! Description: Main Selection                                          -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Select-Prev-FSA-Plan
  
  Move 'N' to $Error_Found
  do Initialize-Vars
  
Begin-Select
FB2.EMPLID
FB2.EMPL_RCD
FB2.BENEFIT_PLAN
FB2.PLAN_TYPE
FB2.EFFDT
FB2.COVERAGE_ELECT
FB2.BENEFIT_NBR
     
   if &FB2.COVERAGE_ELECT='E'
     Move &FB2.EMPLID       to $Emplid
     Move &FB2.EMPL_RCD     to $Empl_Rcd 
     !Move &FB1.EFFDT        to $Effdt
     Move &HB1.EFFDT        to $Effdt
     Move &FB2.EFFDT        to $Prev_Effdt
     Move &FB2.BENEFIT_PLAN to $Ben_Plan
     Move &FB2.BENEFIT_NBR  to $Ben_Nbr
     Move &FB2.PLAN_TYPE    to $Pln_Type
     Move 'PLAN_TYPE'       to $FieldName
	   Move &FB2.PLAN_TYPE    to $FieldValue
     do Read-Translate-Table
	   Move $XlatShortName    to $Coverage
	   
     do Match-Ben-Plan
     if $Ben_Plan_Match='Y'
       
       do Get-TM-Details
       do Check-Event-Class
       
       if $Error_Found='N'
         do Life-Add-Benefit
         Move 'EMP' to $Relationship
         do Write-Report
       End-if  
     end-if   
   end-if
      
FROM PS_FSA_BENEFIT  FB2
WHERE FB2.EMPLID = &HB1.EMPLID
AND FB2.EMPL_RCD = &HB1.EMPL_RCD
AND FB2.PLAN_TYPE = &HB1.PLAN_TYPE
!AND FB2.COVERAGE_ELECT = 'E'
AND FB2.EFFDT = (SELECT MAX(EFFDT) FROM PS_FSA_BENEFIT
                 WHERE EMPLID = FB2.EMPLID
                 AND EMPL_RCD = FB2.EMPL_RCD
                 AND COBRA_EVENT_ID=FB2.COBRA_EVENT_ID
                 AND PLAN_TYPE = FB2.PLAN_TYPE
                 AND BENEFIT_NBR = FB2.BENEFIT_NBR
                 AND EFFDT < &HB1.EFFDT)                    
End-Select
End-Procedure Select-Prev-FSA-Plan

!-----------------------------------------------------------------------
! Function:    Life-Add-Benefit                                        -
! Description: Main Selection                                          -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Life-Add-Benefit
 Move 'N' to $Life_Ins_Flag
Begin-Select
LB1.EMPLID,
LB1.EMPL_RCD,
LB1.PLAN_TYPE, 
LB1.BENEFIT_NBR,
LB1.EFFDT,
LB1.DEDUCTION_END_DT,
LB1.COVERAGE_BEGIN_DT,
LB1.COVERAGE_ELECT_DT,
LB1.COVERAGE_ELECT,
LB1.BENEFIT_PLAN

 do Select-Prev-Life-plan
 
FROM PS_LIFE_ADD_BEN LB1
WHERE LB1.EMPLID=$Emplid
AND LB1.EMPL_RCD=$Empl_Rcd 
AND LB1.BENEFIT_NBR=$Ben_Nbr
AND LB1.PLAN_TYPE='20'
AND LB1.COVERAGE_ELECT = 'T'
AND ((LB1.COVERAGE_ELECT_DT BETWEEN $Pay_Begin_Dt AND $Pay_End_Dt
      AND LB1.COVERAGE_BEGIN_DT < $Pay_End_Dt)
      OR (LB1.COVERAGE_BEGIN_DT BETWEEN $Pay_Begin_Dt AND $Pay_End_Dt))
End-Select
End-Procedure Life-Add-Benefit        

!-----------------------------------------------------------------------
! Function:    Select-Prev-Life-plan                                   -
! Description: Life-Add-Benefit                                        -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Select-Prev-Life-plan
  
  Move ' '  to $Ben_Plan
  
Begin-Select
LB2.BENEFIT_PLAN
LB2.PLAN_TYPE
LB2.EFFDT
LB2.COVERAGE_ELECT
 
   if &LB2.COVERAGE_ELECT = 'E'
     !Move &LB2.BENEFIT_PLAN to  $Ben_Plan
     Move &LB2.PLAN_TYPE    to  $Pln_Type
     
     do Match-Ben-Plan
     
     if $Ben_Plan_Match='Y'
        Move 'Y' to $Life_Ins_Flag
     end-if   
   end-if  
      
FROM PS_LIFE_ADD_BEN LB2
WHERE LB2.EMPLID = &LB1.EMPLID
AND LB2.EMPL_RCD = &LB1.EMPL_RCD
AND LB2.PLAN_TYPE = '20'
!AND LB2.COVERAGE_ELECT='E'
AND LB2.EFFDT = (SELECT MAX(EFFDT) FROM PS_LIFE_ADD_BEN
                  WHERE EMPLID = LB2.EMPLID
                    AND EMPL_RCD = LB2.EMPL_RCD
                    AND PLAN_TYPE = LB2.PLAN_TYPE
                    AND BENEFIT_NBR = LB2.BENEFIT_NBR
                    AND EFFDT < &LB1.EFFDT)
End-Select
End-Procedure Select-Prev-Life-plan

!-----------------------------------------------------------------------
! Function:    Match-Ben-Plan                                          -
! Description: Select-Prev-Health-plan                                 -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Match-Ben-Plan

 Move 'N' to $Ben_Plan_Match
 
Begin-Select loops=1
BO.BENEFIT_PLAN
  
  Move 'Y' to $Ben_Plan_Match
  
FROM PS_BEN_DEFN_OPTN BO
WHERE BO.BENEFIT_PLAN=$Ben_Plan
AND BO.PLAN_TYPE=$Pln_Type
AND BO.EFFDT=(SELECT MAX(BO1.EFFDT) FROM PS_BEN_DEFN_OPTN BO1
               WHERE BO1.BENEFIT_PROGRAM=BO.BENEFIT_PROGRAM
               AND BO1.PLAN_TYPE=BO.PLAN_TYPE
               AND BO1.OPTION_ID=BO.OPTION_ID
               AND BO1.EFFDT<=$Asofdate)
[$SlctBenCriteria1]
End-Select
End-Procedure Match-Ben-Plan

!-----------------------------------------------------------------------
! Function:    Get-Covg-Cd-Descr                                       -
! Description: Select-Prev-Health-plan                                 -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Covg-Cd-Descr
Begin-SELECT
C.DESCR 

FROM PS_COVRG_CD_TBL C
WHERE C.COVRG_CD=&HB2.COVRG_CD
AND C.EFFDT=(SELECT MAX(C1.EFFDT) FROM PS_COVRG_CD_TBL C1
              WHERE C1.COVRG_CD=C.COVRG_CD
              AND C1.EFFDT<=$Asofdate)  
End-Select
End-Procedure
!-----------------------------------------------------------------------
! Function:    Check-Event-Class                                       -
! Description: Select-Prev-Health-plan                                 -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Check-Event-Class
 Move 'N' to $Bas_Partic_Match
Begin-Select
BPL.SCHED_ID ,
BPL.BENEFIT_RCD_NBR,
BPL.EVENT_ID,
BAS.EVENT_CLASS,
TO_CHAR(BAS.EVENT_DT,'YYYYMMDD') &Event_Dt

  Move 'Y' to $Bas_Partic_Match
  Move &Event_Dt to $Event_Dt
  if &BPL.SCHED_ID='EM'
    do Get-Evt-Class
  else
    Move 'SCHED_ID not equal to Event Maintenance' to $Message
    do Write-Error-report
  end-if

FROM PS_BAS_PARTIC BAS, PS_BAS_PARTIC_PLAN BPL
WHERE BAS.EMPLID = $Emplid
  AND BAS.EMPL_RCD = $Empl_Rcd 
  AND BPL.SCHED_ID = BAS.SCHED_ID
  AND BPL.EMPLID = BAS.EMPLID
  AND BPL.BENEFIT_RCD_NBR = BAS.BENEFIT_RCD_NBR
  AND BPL.EVENT_ID = BAS.EVENT_ID
  AND BPL.PLAN_TYPE = $Pln_Type
  AND BPL.DEDUCTION_BEGIN_DT=$Effdt
  [$SlctBenCriteria]
End-Select
 if $Bas_Partic_Match='N'
   Move 'No row in BAS_PARTIC_PLAN' to $Message 
   do Write-Error-Report
 end-if
End-Procedure Check-Event-Class

!-----------------------------------------------------------------------
! Function:    Get-Evt-Class                                           -
! Description: Select-Prev-Health-plan                                 -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Evt-Class
 Move 'N' to $Evt_Class_Found
Begin-Select
CBR.EVENT_CLASS
CBR.GEX_COBRA
CBR.DESCR

 Move 'Y' to $Evt_Class_Found
 
FROM PS_GEX_CBR_EVT_RSN CBR
WHERE CBR.EVENT_CLASS=&BAS.EVENT_CLASS
AND CBR.EFFDT=(SELECT MAX(CBR1.EFFDT) FROM PS_GEX_CBR_EVT_RSN CBR1
               WHERE CBR1.EVENT_CLASS=CBR.EVENT_CLASS
                 AND CBR1.EFFDT<=$Asofdate)
End-Select
  if $Evt_Class_Found='N'
   Move 'EVENT_CLASS not COBRA Event' to $Message
   do Write-Error-Report
  end-if
End-Procedure Get-Evt-Class

!-----------------------------------------------------------------------
! Function:    Get-Dependents                                          -
! Description: Select-Prev-Health-plan                                 -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Dependents
 show 'Get-Dependents'
 show '$Emplid          :' $Emplid
 show '$SlctDepCriteria :' $SlctDepCriteria
 show '$Pln_Type        :' $Pln_Type
 show '$Prev_Effdt      :' $Prev_Effdt
Begin-Select
HD.EMPLID,
HD.PLAN_TYPE,
HD.DEPENDENT_BENEF,
HD.EFFDT,
     
  show '&HD.DEPENDENT_BENEF :' &HD.DEPENDENT_BENEF
  Do Get-Dep-Details
  Do Write-Report

FROM PS_HEALTH_DEPENDNT HD
WHERE HD.EMPLID = $Emplid
AND HD.EFFDT    = $Prev_Effdt
AND HD.PLAN_TYPE= $Pln_Type
AND HD.BENEFIT_NBR=$Ben_Nbr
[$SlctDepCriteria] 
End-Select
End-Procedure Get-Dependents

!-----------------------------------------------------------------------
! Function:    Get-TM-Details                                          -
! Description: Select-Prev-Health-plan                                 -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-TM-Details

 Move ' ' to $First_Name
 Move ' ' to $Last_Name
 Move ' ' to $SSN
 Move ''  to $Birth_Dt
 Move ' ' to $Division
 
Begin-Select
P.FIRST_NAME,
P.LAST_NAME,
N.NATIONAL_ID,
TO_CHAR(P.BIRTHDATE,'YYYYMMDD') &Birth_Dt,
P.ADDRESS1,
P.ADDRESS2,
P.CITY,
P.STATE,
P.POSTAL,
P.PHONE,
TO_CHAR(J.LAST_HIRE_DT,'YYYYMMDD') &Last_Hire_Dt,
TO_CHAR(J.TERMINATION_DT,'YYYYMMDD') &Term_Dt,
P.SEX,
J.DEPTID,
J.EMPLID,
J.EMPL_RCD,
M.EMPLID,
J.COMPANY,
J.PAYGROUP

  Move &P.FIRST_NAME  to $First_Name
  Move &P.LAST_NAME   to $Last_Name
  Move &N.NATIONAL_ID to $SSN
  Move &Birth_Dt      to $Birth_Dt
  do Get-Check-Dt
  
FROM PS_PERSONAL_DATA P,
     PS_PERS_NID N,
     PS_JOB J,
     PS_GEX_EMPLID_MAPP M
WHERE P.EMPLID=N.EMPLID
AND P.EMPLID=J.EMPLID
AND P.EMPLID=M.SSN
AND J.EMPL_RCD=M.EMPL_RCD
AND N.COUNTRY='USA'
AND N.NATIONAL_ID_TYPE='PR'
AND J.EFFDT=(SELECT MAX(J1.EFFDT) FROM PS_JOB J1
              WHERE J1.EMPLID=J.EMPLID
              AND J1.EMPL_RCD=J.EMPL_RCD
              AND J1.EFFDT<=$AsofDate)
AND J.EFFSEQ=(SELECT MAX(J2.EFFSEQ) FROM PS_JOB J2
               WHERE J2.EMPLID=J.EMPLID
               AND   J2.EMPL_RCD=J.EMPL_RCD
               AND J2.EFFDT=J.EFFDT) 
AND J.EMPLID=$Emplid
End-Select
End-Procedure Get-TM-Details

!-----------------------------------------------------------------------
! Function:    Get-Check-Dt                                            -
! Description: Get-TM-Details                                          -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Check-Dt
Begin-Select
TO_CHAR(CHECK_DT,'DAY'),
DECODE(TO_CHAR(CHECK_DT,'DAY'),'TUESDAY','0001','WEDNESDAY','0001','0002') &Division

 Move &Division to $Division

FROM PS_PAY_CHECK CD
WHERE CD.EMPLID   = &J.EMPLID
  AND CD.EMPL_RCD = &J.EMPL_RCD
  AND CD.COMPANY  = &J.COMPANY
  AND CD.PAYGROUP = &J.PAYGROUP
  AND CD.OFF_CYCLE= 'N'
  AND CD.CHECK_DT = (SELECT MAX(check_dt) FROM PS_PAY_CHECK
                      WHERE CD.COMPANY  = COMPANY
                        AND CD.PAYGROUP = PAYGROUP
	                      AND emplid      = &J.EMPLID
                        AND EMPL_RCD    = &J.EMPL_RCD
                        and off_cycle   ='N'           
	                      AND CHECK_DT   <= $ASOFDATE)
End-Select	                      
End-Procedure Get-Check-Dt

!-----------------------------------------------------------------------
! Function:    Get-Dep-Details                                         -
! Description: Select-Prev-Health-plan                                 -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Dep-Details
  Move ' ' to $First_Name
  Move ' ' to $Last_Name
  Move ' ' to $SSN
  Move ''  to $Birth_Dt
  Move ' ' to $Relationship
  Move ' ' to $Division
  show 'Get-Dep-Details '
Begin-SELECT
DP.DEPENDENT_BENEF,
DP.FIRST_NAME,
DP.LAST_NAME,
TO_CHAR(DP.BIRTHDATE,'YYYYMMDD') &Dep_Birth_Dt,
DP.RELATIONSHIP,
DN.NATIONAL_ID

  Move &DP.FIRST_NAME  to $First_Name
  Move &DP.LAST_NAME   to $Last_Name
  Move &DN.NATIONAL_ID to $SSN
  Move &Dep_Birth_Dt   to $Birth_Dt
  show '&HD.DEPENDENT_BENEF:' &HD.DEPENDENT_BENEF
  show '$First_Name        :' $First_Name
  show '$Last_Name         :' $Last_Name
  show '$Birth_Dt          :' $Birth_Dt
  show '&DP.RELATIONSHIP   :' &DP.RELATIONSHIP
  Evaluate &DP.RELATIONSHIP
  when='SP'
      Move 'SPS' to $Relationship
      break
  when='NA'
      Move 'DP'  to $Relationship
      break      
  when='C'
      Move 'DEP' to $Relationship
      break  
  when='SC'
      Move 'DEP' to $Relationship
      break  
  when='GC'
      Move 'DEP' to $Relationship
      break   
  when-other
      break
  End-Evaluate 

FROM PS_DEPENDENT_BENEF DP,
     PS_DEP_BENEF_NID DN
WHERE DP.EMPLID=DN.EMPLID
  AND DP.DEPENDENT_BENEF=DN.DEPENDENT_BENEF
  AND DN.COUNTRY='USA'
  AND DN.NATIONAL_ID_TYPE='PR'
  AND DP.EMPLID=$Emplid
  AND DP.DEPENDENT_BENEF=&HD.DEPENDENT_BENEF
End-Select  
End-Procedure Get-Dep-Details

!-----------------------------------------------------------------------
! Function:    Initialize-Vars                                         -
! Description: Main Selection                                          -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Initialize-Vars
  Move ' ' to $Emplid
  Move ' ' to $Empl_Rcd
  Move ''  to $Effdt
  Move ''  to $Prev_Effdt
  Move ' ' to $Ben_Plan
  Move ' ' to $Pln_Type
  Move ' ' to $FieldName
  Move ' ' to $FieldValue
End-Procedure

!-----------------------------------------------------------------------
! Function:    Write-Report                                            -
! Description: Select-Prev-Health-plan                                 -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Write-Report
  Write 1 from $First_Name       $delim
               $Last_Name        $delim
               &N.NATIONAL_ID    $delim
               $SSN              $delim
               $Birth_Dt         $delim
               $Relationship     $delim
               &P.ADDRESS1       $delim
               &P.ADDRESS2       $delim
               &P.CITY           $delim
               &P.STATE          $delim
               &P.POSTAL         $delim
               &P.PHONE          $delim
               &Last_Hire_Dt     $delim
               &Term_Dt          $delim
               ' '               $delim
               ' '               $delim
               &CBR.GEX_COBRA    $delim
               $Event_Dt         $delim
               ' '               $delim
               $Coverage         $delim
               &C.DESCR          $delim
               $Ben_Plan         $delim
               ' '               $delim
               &P.SEX            $delim
               $Division         $delim
               &J.DEPTID         $delim
               ' '               $delim
               ' '               $delim
               ' '               $delim
               &M.EMPLID         $delim
               $Life_Ins_Flag    $delim
               ' '               $delim
               ' '               $delim
               ' '               
End-Procedure Write-Report

!-----------------------------------------------------------------------
! Function:    Write-Error-Report                                      -
! Description: Select-Prev-Health-plan                                 -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Write-Error-Report
  !Move 'Y' to $Error_Found
  show '$Emplid :' $Emplid
  show '$Prev_Emplid :' $Prev_Emplid
  if $Emplid<>$Prev_Emplid
  write 2 from $First_Name    $delim
               $Last_Name     $delim
               &N.NATIONAL_ID $delim
               $Message 
  End-if             
  Move $Emplid to $Prev_Emplid               
End-Procedure Write-Error-Report

!-----------------------------------------------------------------------
! Function:    Close-File                                              -
! Description: Closes the File                                         -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Close-File
  Close 1
  Close 2
  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop 
  End-If
End-Procedure

#Include 'readxlat.sqc'  !Routines for the translate values
#Include 'gexxx911.sqc'  !Get Benefit Program Multiples Run Controls
#include 'gexxx920.sqc'  !Get ben single row run control
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math