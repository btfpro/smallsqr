!***************************************************************************************
! GEXHR602:         EMPLOYEE DATA LOAD FILE FOR NETG                                   * 
!***************************************************************************************
!                                                                                      *
!               Confidentiality Information:                                           *
!                                                                                      *
! This module is the confidential and proprietary information of                       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted                 *
! in any form, by any means, in whole or in part, nor is it to be used                 *
! for any purpose other than that for which it is expressly provided                   *
! without the written permission of Giant Eagle.                                       *
!                                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved                         *
!                                                                                      *
!***************************************************************************************
!                                                                                      *        
! GEXHR602 :            EMPLOYEE DATA LOAD FILE FOR NETG                               *
!                                                                                      *        
! Narrative:            This program creates a delimited data file to                  *
!                       be used to load employees into NETG,a web-based                *
!                       application for Development and Training.                      *
!                       When run for weekly hires, will select emps                    *
!                       who have hire or rehire dates within the                       *
!                       previous week.                                                 *  
!                                                                                      * 
!                                                                                      *  
! SQL Tables:           PS_GEX_DEPT_TBL				                       *
!                       PS_JOB                                                         *
!                       PS_NAMES                                                       *
!                       PS_EMPLOYMENT				                       *   
!			PS_GEX_EMPLID_MAPP                                             *
!                                                                                      *
! Written by:           Carl Buckrop                                                   *       
!                                                                                      *
! Normally Run:         Weekly                                                         *
!                                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                                              *
!                         Company Division Code                                        *
!                         Deptid                                                       *
!                         Employee Status                                              *
!                         Account Code                                                 *
!                         As Of Date                                                   *
!                                                                                      *
!***************************************************************************************
!                         MODIFICATION HISTORY                                           *
!*****************************************************************************************
! CSR    INITIALS     DATE         DESCRIPTION OF THE CHANGE                             *
!*****************************************************************************************
!                                                                                        *
!HR10768 ISDVSRC      11/01/2004 New program                                             *
!                                                                                        *
!HR10850 ISDVSRC      01/26/2005 Modified program                                        *
!	       			 we are getting all of the users from Sunday's load      *
!				 in Wednesday's load as well.			         * 
!	      			 So, modified the program to get new users/deactivations *
!	       			 after Sunday's load on Wed's load and then only new     *
!		  		 ones after wed's load on the next  Sunday load.         *
!								                         *
!HR10892 ISDVSRC      03/09/2005 Modified program                                        *
!				 Removed the Account code blocks                         *
!                                                                                        *
!  10896 ISDVSRC      03/17/05   Modified the program                                    *
!				 Remove the block for Employees working under            * 
!			         DIVISION_CODE - 'WHS'                                   *
! 	     		         (procedures: Write-Division-Record & P240-Write-Record )*
!
!  10893 ISDVSRC      03/21/05   If the $region is empty, then assigning $acct_cd value to*   
!				 $region. 	                                          *     
!		                 Now, modified the program -                                    
!				 Employees whoever is working under $div_cd = 'WHS' and   *     
!				 whose $acct_cd description is in Flora,Grocery, Misc Svcs*     
!				 Gen Whse, Demo, Drivers,Fac Maint, Fleet Main,Prep Foods *     
!				  is defaulted to "Other" 				  *     
!  10893 ISDVSRC      03/31/05   Renamed the previous procedure P200-Main-Process to      *        
!		 		 P300-Get-Details and put the new logic into P200-Main-Process. *
!				 And with the previous program, we were missing new hires,rehires*
!				 terminations,when their Dates were entered into the system after* 
!				 this process ran (Ex: job runs on wednesday(03/02/05)-looks for *
!		 	         dates between 27Feb and 01Mar and if an employees was entered   *
!				 into ps system on 2/28 with a hire date of 2/25/05 (backdated), *
!				 we will never capture them.					 *
!				 so, instead of looking for hire/rehire/term dates, check for    *
!				 ACTION_DT and ACTION (in first procedure),for the last last week*
!				 and go get his detail information from the second procedure     *
!  10909 ISDVSRC    04/25/05     There was a logic missing in the Program, 
!				 If the employee is multi jobber, and HIR/REH or TER on one of the  *  
!	 			 records, then it's writing 2 records to the file sheet1.xls        *
!				 So, passing the $empl_status to P300-Get-Details, which is selected*
!				 selected from P200-Main-Process to retrieve single record
!  10909 ISDVSRC    05/11/05     NetG user id lookups Report for Help Desk			    *
!                                                                                                   *
!  10912 ISDVSRC    05/13/05     remigrate.                                                         *
!                                                                                                   *
!  ITG33009 ISDVSRC 06/20/05     Action Date criteria missing to use in P300-Get-Details procedure  *    
!  CSR 10924                     Added $ACTION_DT_CRITERIA_2 to P300-Get-Details                    *
!                                                                                                   *
!  ITG 33638 ISDVSRC 09/01/05    Modified Select Logic in the P200-Main-Process procedure           *
!  CSR 10946                     Not to miss Employees with  HIR/REH/TER  Actions, when multiple    *
!                                ACTIONs occur within the specified ACTION DATE	                    *   
!                                                                                                   *
!  ITG 36895 ISDVNPK 10/25/06    Commented & Removed  all SELECTION logic currently in the SQR based*
!  CSR 11084                     upon action_dt, week_begin_dt, week_end_dt and action in HIR,TER,REH
!                                Changed the logic to pick all the employees who were active <=     *    
!                                31-Dec-2004 and >= 31-Dec-2004 and send a full file of the employee*  
!                                data for daily run.                                                *
!                                Modified the SQR to print the same fields in the LIS report generated*  
!                                as of the CSV file generated.                                      *  
!                                Modified the SQR to print another seperate report for employees who*  
!                                are in multiple jobs.                                              *  
!                                Modified the evaluate division codes to include more as per the spec* 
!                                Removed the logic that sets the region = ‘Other’ and the references *
!                                /logic to the acct_cd.                                              *
!                                Removed all the unwanted and comented code                          *
!  NYS   08/20/2007              upgrade 9.0 changes. PS_ACCT_CD_TBL changed.
!  AXG   09/26/2007      	 Modified to use GEX_ACCT_CD_TBL in 9.0 Upgrade.		     *
!*****************************************************************************************************
                                                                                                 
#include 'setenv.sqc' !Set environment                                                       

!ISDVNPK 10/25/06 ITG 36895 Modified the report layouts
Begin-Setup

Declare-Report FullFile-Report
    Printer-Type=LINEPRINTER
    Layout=multi_rep
End-Declare

Declare-Report MultiJob-Report
    Printer-Type=LINEPRINTER
    Layout=multi_rep
End-Declare

declare-layout multi_rep
 paper-size=(18.5,11)
end-declare

End-Setup


Begin-Heading 6 For-Reports=(FullFile-Report)
#debug9 Show 'Begin-Heading'
 
  Do GEXXX951-Select-Oracle-Instance        

  print 'Oracle DB:'                (1,1)   
  print $GEXXX951_Oracle_Instance   (1,13)  

  print '            '    (1,1)
  print 'PeopleSoft HRMS 8.3'      ()          center
  
  print 'Report ID:  '    (+1,1)
  print $ReportID         (,13)
  uppercase $ReportTitle
  print $ReportTitle      ()          center
  let #RptCol = 150
  page-number             (0,#RptCol)  'Page No.  '
  
  print 'DeptID:'       (+1,1)	 !  10908 ISDVSRC    05/11/05     
  print $prvDeptid      (,13)    !  10908 ISDVSRC    05/11/05     
  
  
   let $out1 = 'Full Load Data File'   
 
  print $out1 () center
  
  print 'Run Date '       (+1,#RptCol)
  print $ReportDate       ()
  
  print 'Run Time '       (+1,#RptCol)
  print $ReportTime       ()

  print 'UserLogonID'      (+2,1)   
  print 'Password'         (0,13)
  print 'FirstName'        (0,22)
  print 'LastName'         (0,38)                            
  print 'Email'            (0,69)
  print 'ActivationDt'     (0,94)
  print 'ExpireDt'         (0,107)                            
  print 'ActiveStatus'     (0,116)
  print 'Division'         (0,129)
  print 'Region'           (0,138)
  print 'Location'         (0,145)


End-heading


Begin-Heading 6 For-Reports=(MultiJob-Report)
#debug9 Show 'Begin-Heading'
 
  Do GEXXX951-Select-Oracle-Instance        

  print 'Oracle DB:'                (1,1)   
  print $GEXXX951_Oracle_Instance   (1,13)  

  print '            '    (1,1)
  print 'PeopleSoft HRMS 8.3'      ()          center
  
  print 'Report ID:  '    (+1,1)
  print $ReportID         (,13)
  uppercase $ReportTitle
  print $ReportTitle      ()          center
  let #RptCol = 150
  page-number             (0,#RptCol)  'Page No.  '
  
  
  let $out1 = 'Multi Job EMPLIDs Data'   
 
  print '            '    (+1,1)
  print $out1 () center
  
  print 'Run Date '       (+1,#RptCol)
  print $ReportDate       ()
  
  print 'Run Time '       (+1,#RptCol)
  print $ReportTime       ()


  print 'UserLogonID'    (+2,1)  
  print 'Password '      (0,13)  
  print 'FirstName'      (0,22)  
  print 'LastName'       (0,38)                          
  print 'Email'          (0,69)  
  print 'ActivationDt'   (0,94)
  print 'ExpireDt'       (0,107)                            
  print 'ActiveStatus'   (0,116)
  print 'Division'       (0,129)
  print 'Region'         (0,138)
  print 'Location'       (0,145)
  
End-heading

!ISDVNPK 10/25/06 ITG 36895 Modified the report layouts


!***********************************************************************************
Begin-Report
!***********************************************************************************
#debug9 Show 'Begin-Report'
  Do Delete-Temp         !ISDVNPK 10/25/06 ITG 36895 Added this
  Do P100-Initialization
  !Do P200-Main-Process  !ISDVNPK 10/25/06 ITG 36895 Commented this
  Do P300-Get-Details    !ISDVNPK 10/25/06 ITG 36895 Added this
  Do select-temp-table   !ISDVNPK 10/25/06 ITG 36895 Added this
  Do P300-Finalization
End-Report

!***********************************************************************************
Begin-Procedure P100-Initialization
!***********************************************************************************
#debug9 Show 'P100-Initialization'
  let $First = 'Y'
 
  Let $year4 = '1'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXHR602'
 
  If $Prcs_Run_Cntl_ID = 'gexhr602a' 
    Let $ReportTitle   =   'EMPLOYEE DATA LOAD FILE FOR NETG'
  Else
    If $Prcs_Run_Cntl_ID = 'gexhr602b'   
      Let $ReportTitle   =   'CUSTOM FIELDS FOR NETG'  
    End-If
  End-If
!  
  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime

  let $email = 'elearning@gianteagle.com'      !ISDVNPK 10/25/06 ITG 36895 Added this to send in the O/P file

  Let $delim = ';'
  Let $blank = ' '
  !encode '<009>' into $tab      !ISDVNPK 10/25/06 ITG 36895 Commented this
 Let $tab = ','                  !ISDVNPK 10/25/06 ITG 36895 Added this
  encode '<39>' into $Quote


  
	  Let $GEXXX900_Company_Alias  = 'j.company'
	 ! Let $GEXXX900_Company_Aliasx  = 'JJ.company' !ISDVNPK 10/25/06 ITG 36895 Commented this and modifed as below
          Let $GEXXX900_Company_Aliasx  = 'J.company'   
	  
	  Let $GEXXX902_Deptid_Alias   = 'j.deptid'
	  
	  Let $GEXXX903_Emp_Stat_Alias = 'j.empl_status'
	 ! Let $GEXXX903_Emp_Stat_Aliasx = 'JJ.empl_status' !ISDVNPK 10/25/06 ITG 36895 Commented this and modifed as below
          Let $GEXXX903_Emp_Stat_Aliasx = 'J.empl_status'
	  
	  Let $GEXXX907_Div_CD_Alias   = 'gdt.gex_company_div_cd'


!-------------------------------------------------------------------------------------------------------
!-------------------------------------------------------------------------------------------------------
  If $prcs_process_instance = ''
    Do Ask-As-Of-Date
    
	   
	  While 1=1
	    Input $Gex_Incl_Excl Maxlen=1 '(I)nclude Div_cd / (E)xclude Div_cd / (A)ll Div_cds'
	    Uppercase $Gex_Incl_Excl
	    
	    If $Gex_Incl_Excl = 'I' 
	       Do Ask-For-Incl-Div_cd
	       Break
	    Else
	      If $Gex_Incl_Excl = 'E'
	         Do Ask-For-Excl-Div_cd
	         Break
	      Else
	        Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = '1=1'
	        Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = 'ALL'
	        Let $GEXXX907_EXCLUDE_DIV_CD_CRITERIA = '1=1'
	        Let $GEXXX907_EXCLUDE_DIV_CD_DISPLAY_CRITERIA = 'NONE'
	        Break
	      End-If
	    End-If
	    
	  End-While


	  !----------------------------------------------------
	  Let $CompanyString = ''''
	  Display 'Enter Company or leave blank to exit.'
	  
	  While 1=1
	    Input $In-Company Maxlen=3 'Company'
	    
	    Uppercase $In-Company
	    
	    If Rtrim($In-Company, ' ') = ''
	      Concat '''' With $CompanyString
	      Break
	    End-If
	    
	    If $CompanyString <> ''''
	      Concat ''',''' With $CompanyString
	    End-If
	    Concat $In-Company With $CompanyString
	  End-While
	
	  If $CompanyString = ''''''
	    Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = '1=1'
	    Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA = 'ALL'
	    
	    Let $GEXXX900_INCLUDE_COMPANY_CRITERIAx = '1=1'			!ISDVSRC 03/29/05
	    Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIAx = 'ALL'		!ISDVSRC 03/29/05
	    
	    
	  Else
	    Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = $GEXXX900_Company_Alias || ' In (' || $CompanyString || ')'
	    Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA = $GEXXX900_INCLUDE_COMPANY_CRITERIA
	    
	    Let $GEXXX900_INCLUDE_COMPANY_CRITERIAx = $GEXXX900_Company_Aliasx || ' In (' || $CompanyString || ')'	!ISDVSRC 03/29/05
	    Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIAx = $GEXXX900_INCLUDE_COMPANY_CRITERIAx			!ISDVSRC 03/29/05

	  End-If

	!----------------------------------------------------  	 
  	 Let $DeptIDString = ''''
  	 Display 'Enter DeptID or leave blank to exit.'
	  While 1=1
	    Input $In-DeptID Maxlen=10 'DeptID'
	    Uppercase $In-DeptID
	    If Rtrim($In-DeptID, ' ') = ''
	      Concat '''' With $DeptIDString
	      Break
	    End-If
	    If $DeptIDString <> ''''
	      Concat ''',''' With $DeptIDString
	    End-If
	    Concat $In-DeptID With $DeptIDString
	  End-While
	
	  If $DeptIDString = ''''''
	    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
	    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
	  Else
	    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' In (' || $DeptIDString || ')'
	    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_INCLUDE_DEPTID_CRITERIA
	  End-If

	!----------------------------------------------------

	  Let $EmplStatusString = ''''

	  Display 'Enter Employee Status or leave blank to exit.'
	  While 1=1
	    Input $In-EmplStatus Maxlen=1 'Employee Status'
	    Uppercase $In-EmplStatus
	    If Rtrim($In-EmplStatus, ' ') = ''
	      Concat '''' With $EmplStatusString
	      Break
	    End-If
	    If $EmplStatusString <> ''''
	      Concat ''',''' With $EmplStatusString
	    End-If
	    Concat $In-EmplStatus With $EmplStatusString
	  End-While
	
	  If $EmplStatusString = ''''''
	    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = '1=1'
	    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = 'ALL'
	    
	    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = '1=1'		!ISDVSRC 03/29/05
	    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIAx = 'ALL'	!ISDVSRC 03/29/05
	    
	  Else
	    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = $GEXXX903_Emp_Stat_Alias || ' In (' || $EmplStatusString || ')'
	    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
	    
	    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_Emp_Stat_Aliasx || ' In (' || $EmplStatusString || ')'		!ISDVSRC 03/29/05
	    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIAx = $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx				!ISDVSRC 03/29/05

	  End-If
	!----------------------------------------------------
	
    
  Else
  
     Do Process-Scheduler-Run-Controls
     
  End-If
!-------------------------------------------------------------------------------------------------------
!-------------------------------------------------------------------------------------------------------

  Show '$GEXXX907_Exclude_Div_Cd_Display_Criteria           = ' $GEXXX907_Exclude_Div_Cd_Display_Criteria
  Show '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           = ' $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  
  Show '$GEXXX900_Include_Company_Display_Criteria          = ' $GEXXX900_Include_Company_Display_Criteria
  Show '$GEXXX900_Include_Company_Display_Criteriax          = ' $GEXXX900_Include_Company_Display_Criteriax	!ISDVSRC 03/29/05
  
  Show '$GEXXX902_Include_Deptid_Display_Criteria           = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Display_Criteria         = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Display_Criteriax         = ' $GEXXX903_Include_Emp_Stat_Display_Criteriax	!ISDVSRC 03/29/05
  Show '$AsOfDate                                           = ' $AsOfDate

  let $year4 = '1'
  do Format-DateTime($AsOfDate, $activation_date, {DEFMDY}, '', '')
  let $year4 = '1'
  do Format-DateTime($AsOfDate, $rpt_asofdate, {DEFMDY}, '', '')
  
  !Let $ORDER_BY = 'ORDER BY GDT.GEX_COMPANY_DIV_CD,GDT.GEX_RGN_CD,J.DEPTID, J.EMPLID'
  !Let $ORDER_BY = 'ORDER BY GDT.GEX_COMPANY_DIV_CD,GDT.GEX_RGN_CD,J.DEPTID' !ISDVNPK 10/25/06 ITG 36895 Commented this and modifed as below
  Let $ORDER_BY = 'ORDER BY J.DEPTID,J.EMPLID'
  

 If $Prcs_Run_Cntl_ID = 'gexhr602a' 
  
  Use-Report FullFile-Report
  Do P130-Print-Cover-Page
 
  Use-Report MultiJob-Report
  Do P130-Print-Cover-Page

  Do P140-Open-File
  Do P141-write-file-header
 Else
   If $Prcs_Run_Cntl_ID = 'gexhr602b'  
     Do Division-Open-File
     Do Division-Record-file-header
   End-If  
 End-If  
End-Procedure



!***********************************************************************
Begin-Procedure Ask-For-Incl-Div_cd
!***********************************************************************
#debug9 show 'Ask-For-Incl-Div_cd'

  Let $Div_Cdstring = ''''
  Display 'Enter Company Div Cds to INCLUDE or leave blank to exit.'
  
  While 1=1
    Input $In-Div_Cd Maxlen=6 'Div_Cd'
    Uppercase $In-Div_Cd
    
    If Rtrim($In-Div_Cd, ' ') = ''
      Concat '''' With $Div_CdString
      Break
    End-If
    
    If $Div_CdString <> ''''
      Concat ''',''' With $Div_CdString
    End-If

    Concat $In-Div_Cd With $Div_CdString
  End-While
  

  If $Div_CdString = ''''''
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = '1=1'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = $GEXXX907_div_cd_Alias || ' In (' || $Div_CdString || ')'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  End-If
  
  Let $GEXXX907_EXCLUDE_DIV_CD_CRITERIA = '1=1'
  Let $GEXXX907_EXCLUDE_DIV_CD_DISPLAY_CRITERIA = 'NONE'
  
End-Procedure

!***********************************************************************
Begin-Procedure Ask-For-Excl-Div_cd
!***********************************************************************
#debug9 show 'Ask-For-Excl-Div_cd'

  Let $Div_CdString = ''''
  Display 'Enter Company Div Cds to EXCLUDE or leave blank to exit.'
  While 1=1
    Input $In-Div_Cd Maxlen=6 'Div_Cd'
    Uppercase $In-Div_Cd
    If Rtrim($In-Div_Cd, ' ') = ''
      Concat '''' With $Div_CdString
      Break
    End-If
    If $Div_CdString <> ''''
      Concat ''',''' With $Div_CdString
    End-If
    Concat $In-Div_Cd With $Div_CdString
  End-While

  show '$Div_CdString = ' $Div_CdString 
  If $Div_CdString = ''''''
    Let $GEXXX907_EXCLUDE_Div_Cd_CRITERIA = '1=1'
    Let $GEXXX907_EXCLUDE_Div_Cd_DISPLAY_CRITERIA = 'NONE'
  Else
    Let $GEXXX907_EXCLUDE_Div_Cd_CRITERIA = $GEXXX907_Div_Cd_Alias || ' Not In (' || $Div_CdString || ')'
    Let $GEXXX907_EXCLUDE_Div_Cd_DISPLAY_CRITERIA = $GEXXX907_EXCLUDE_Div_Cd_CRITERIA
  End-If
  
  Let $GEXXX907_INCLUDE_Div_Cd_CRITERIA = '1=1'
  Let $GEXXX907_INCLUDE_Div_Cd_DISPLAY_CRITERIA = 'ALL'

End-Procedure

!***********************************************************************************
Begin-Procedure Process-Scheduler-Run-Controls
!***********************************************************************************
#debug9 Show 'Process-Scheduler-Run-Controls'
  Show 'Process-Scheduler-Run-Controls'
  
  Do GEXXX922-Select-Parameters

	  Let $AsOfDate = $GEX_RC_PAY.AsOfDate
	  If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
	    Let $AsOfDate = $AsOfToday
	  End-If
	
	
	  Evaluate &GEX_RC_PAY.Gex_Incl_Excl
	     When = 'I'
	        Do GEXXX907-Select-Div-CD-Parameters 
	        Let $GEXXX907_EXCLUDE_DIV_CD_CRITERIA = '1=1'
	        Let $GEXXX907_EXCLUDE_DIV_CD_DISPLAY_CRITERIA = 'NONE'
	        Break
	     When = 'E'
	        Do GEXXX907-Select-Div-CD-Parameters 
	        Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = '1=1'
	        Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = 'NONE'
	        Break
	     When-Other
	        Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA   = '1=1'
	        Let $GEXXX907_EXCLUDE_DIV_CD_CRITERIA = '1=1'
	        Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = 'ALL'
	        Let $GEXXX907_EXCLUDE_DIV_CD_DISPLAY_CRITERIA = 'NONE'
	  End-Evaluate

  Do GEXXX900-Select-Company-Parameters
  Do GEXXX900-Select-Company-Parametersx		!ISDVSRC 03/29/05
  Do GEXXX902-Select-Deptid-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters
  Do GEXXX903-Select-Emp-Stat-Parametersx		!ISDVSRC 03/29/05
End-Procedure


!***********************************************************************************
Begin-Procedure P130-Print-Cover-Page
!***********************************************************************************
 SHOW ' Entered into P130-Print-Cover-Page'
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+2,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'Report As Of Date : '                                    (+2,5)
  Print $Rpt_AsOfDate                                             (0,+2)

  !Print '$Hire_dt_criteria                                   = '  (+2,5)  
  !Print $Hire_dt_criteria                                         (0,+2) 
 
  !ISDVNPK 10/25/06 ITG 36895 Commented the below 
  !Print '$Action_dt_criteria                                 = '  (+2,5)
  !Print $ACTION_DT_CRITERIA                                       (0,+2)  

  !Print '$Action_dt_criteria_2                                 = '  (+2,5)
  !Print $ACTION_DT_CRITERIA_2                                       (0,+2)  
  !ISDVNPK 10/25/06 ITG 36895 Commented the above   
      
  Print '$GEXXX907_Include_Div_Cd_Display_Criteria           = '  (+1,5)
  Print $GEXXX907_Include_Div_Cd_Display_Criteria                 (0,+2) 
  Print '$GEXXX907_Exclude_Div_Cd_Display_Criteria           = '  (+1,5)
  Print $GEXXX907_Exclude_Div_Cd_Display_Criteria                 (0,+2) 
  Print '$GEXXX900_Include_Company_Display_Criteria          = '  (+1,5)
  print $GEXXX900_Include_Company_Display_Criteria                (0,+2)
  Print '$GEXXX902_Include_Deptid_Display_Criteria           = '  (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria                 (0,+2)
  Print '$GEXXX903_Include_Emp_Stat_Display_Criteria         = '  (+1,5)
  Print $GEXXX903_Include_Emp_Stat_Display_Criteria               (0,+2)
  Print 'SORT ORDER FOR THIS REPORT RUN: '                        (+2,2)
  Print $Order_By                                                 (0,+2)
  Let #PAGE-COUNT = 0
  NEW-PAGE
End-Procedure

!***********************************************************************************
begin-procedure P140-Open-File
!***********************************************************************************
#debug9 Show 'P140-Open-File'

!Data file for NetG  - requires once in a week
!RUNCONTROL ID: gexhr602a

 !-----------------open file1 -----------------------------
   Let $File_Name = 'GiantEagle'      ! 'sheet1'           !ISDVNPK 11/12/06 ITG 36895 Changed the file name
   Let $file1 = '{OUTFILE}' || $File_Name || '.csv' !ISDVNPK 10/25/06 ITG 36895 Changed from XLS to CSV file 
   show '$filename:' $filename
   show '$file1:' $file1
 
  Open $file1
       As 1
       For-Writing
       Record=255:Vary
       Status=#filestat

  If #filestat != 0
     Show 'Error opening output file.  Program terminating.'
     Stop
  End-If
End-Procedure
 
  
!***********************************************************************************
Begin-Procedure Division-Open-File
!***********************************************************************************
  !Custom Fields file - one time file 
  !Also, Run as and when it is required
  !RUNCONTROL ID: gexhr602b  
  !-----------------open file2 -----------------------------  
  Let $NewReport = 'division_details'
  Let $file2 = '{OUTFILE}' || Lower($NewReport) || '.csv'  !ISDVNPK 10/25/06 ITG 36895 Changed from XLS to CSV file 
  show '$file2:' $file2

  Open $file2
       As 2
       For-Writing
       Record=255:Vary
       Status=#filestat2

  If #filestat2 != 0
     Show 'Error opening output file.  Program terminating.'
     Stop
  End-If
End-Procedure

!ISDVNPK 10/25/06 ITG 36895 Added the below
!*********************************************************************
! Remove old values from temp table
!*********************************************************************
Begin-Procedure Delete-Temp
Begin-Sql 
  DELETE FROM PS_GEX_HR602_TEMP
End-Sql

Begin-Sql
  COMMIT
End-Sql

End-Procedure
!ISDVNPK 10/25/06 ITG 36895 Added the above

!ISDVNPK 10/25/06 ITG 36895 Commented the below
!***********************************************************************************
!Begin-Procedure P200-Main-Process
!***********************************************************************************
! #debug9 Show 'P200-Main-Process'

!    Move '' To $all_cols               
!    let $active_status     = ''                                    
!Begin-Select
!JJ.DEPTID    () on-break  LEVEL=1 PRINT=NEVER SAVE=$prvDeptid AFTER=BEFORE-DEPT  !10908 ISDVSRC  05/11/05     
!JJ.EMPLID
!JJ.EMPL_STATUS  
  
!  let $Data-Found-Flag_1 = 'Y'
  
!  let $employee_id      = &JJ.EMPLID
!  let $emplstatus       = &JJ.EMPL_STATUS
  
!  Let $DeptID          = &JJ.DEPTID
!  Add 1 to #P200-Main-Process
 
!  Evaluate $emplstatus      
!   When ='T'
!     Let $active_status = 'N'
!     Add 1 to #Terminated_Employees
!     DO   P300-Get-Details
!     break
!   When ='A'
!     Let $active_status = 'Y'
!     Add 1 to #Active_Employees
!     DO   P300-Get-Details
!     break
!   When ='L'
!     Let $active_status = 'Y'
!     Add 1 to #Active_Employees
!     DO   P300-Get-Details
!     break
!   When ='P'
!     Let $active_status = 'Y'
!     Add 1 to #Active_Employees
!     DO   P300-Get-Details
!     break
!   When ='S'
!     Let $active_status = 'Y'
!     DO   P300-Get-Details
!     Add 1 to #Active_Employees
!     break
!  End-Evaluate


!FROM PS_EMPLOYMENT EE, 
!     PS_JOB JJ
!WHERE EE.EMPLID    = JJ.EMPLID 
!  AND EE.EMPL_RCD  = JJ.EMPL_RCD 
!ISDVSRC - 09/01/05  
!  AND JJ.EFFDT     = (SELECT MAX(EFFDT) FROM PS_JOB 
!                     WHERE EMPLID  = JJ.EMPLID  
!                      AND EMPL_RCD = JJ.EMPL_RCD 
!                      AND EFFDT   <= $ASOFDATE) 
!ISDVSRC - 09/01/05
!  AND JJ.EFFSEQ    = (SELECT MAX(EFFSEQ) FROM PS_JOB 
!                     WHERE EMPLID  = JJ.EMPLID 
!                      AND EMPL_RCD = JJ.EMPL_RCD  
!            AND EFFDT    = JJ.EFFDT) 
!  AND JJ.ACTION IN('HIR','REH','TER')            
!  AND   [$ACTION_DT_CRITERIA]
!AND   [$GEXXX900_Include_Company_Criteriax]
!AND   [$GEXXX903_Include_Emp_Stat_Criteriax]
!ORDER BY JJ.DEPTID,JJ.EMPLID
!End-Select
!End-Procedure
!ISDVNPK 10/25/06 ITG 36895 Commented the above

!***********************************************************************************
Begin-Procedure P300-Get-Details 
!***********************************************************************************
 #debug9 Show 'P300-Get-Details'

    Move '' To $all_cols                                                   
    let $active_status     = ''    
    
Begin-Select
DT.DESCR     
JT.DESCR			
AT.DESCRSHORT                   
GDT.GEX_COMPANY_DIV_CD          
GDT.GEX_RGN_CD                  
K.EMPLID
K.SSN                           
J.EMPLID 
J.EMPL_RCD                       
J.DEPTID                        
J.ACCT_CD                       
J.JOBCODE                       
J.EMPL_STATUS           
N.FIRST_NAME                    
N.LAST_NAME                     
  
 !ISDVNPK 10/25/06 ITG 36895 Modified the below
  Add 1 to #P300-Get-Details

 do check-empl-active
  
 If $active_as_of_2004 = 'Y'
  
  let $Data-Found-Flag = 'Y'

  if (&J.EMPLID = $hold_emplid) 
   
    If $Prcs_Run_Cntl_ID = 'gexhr602a'     
      Use-Report MultiJob-Report
      Do P245-print-rpt-line   
    End-If   
  
   else

     let $div_cd         = &GDT.GEX_COMPANY_DIV_CD 
 
    let $region         = &GDT.GEX_RGN_CD
        
    let $DepartmentID   = &DT.DESCR
    let $acct_cd        = &AT.DESCRSHORT
    let $jobcode        = &JT.DESCR
  
    Do get-operating-division 
  
    let $firstname      = &N.FIRST_NAME
       If length($firstname) > 15
         let $firstname = substr($firstname,1,15)
       End-If
       
    let $lastname       = &n.last_name
       If length($lastname) > 30
         let $lastname = substr($lastname,1,30)
       End-If

    Let $logon_id       = &K.EMPLID
    Let $password       = substr(&K.SSN,6,4)   ! last 4 digits of SSN
    Let $LastSSN        = substr(&K.SSN,6,4)   ! 10908 ISDVSRC  05/11/05     
    Let $password       ='GE'||$password
  
    Let $National_Id   = &K.SSN
   
    let $emplstatus    = &J.EMPL_STATUS

    Evaluate $emplstatus      
      When ='T'
        Let $active_status = 'N'
        Add 1 to #Terminated_Employees
        break
      When ='A'
        Let $active_status = 'Y'
        Add 1 to #Active_Employees
        break
      When ='L'
        Let $active_status = 'Y'
        Add 1 to #Active_Employees
        break
      When ='P'
        Let $active_status = 'Y'
        Add 1 to #Active_Employees
        break
      When ='S'
        Let $active_status = 'Y'
        Add 1 to #Active_Employees
        break
      When-other
        Let $active_status = 'N'
        Add 1 to #Terminated_Employees
        break
     End-Evaluate

    do insert-temp
  
  End-If

  let $hold_emplid  = &J.EMPLID
 End-If
  !ISDVNPK 10/25/06 ITG 36895 Modified the above

FROM   PS_JOBCODE_TBL    JT, 
       !GEX-AXG Modified for Upgrade 9.0 on 09/26/2007 - Begin
       !PS_ACCT_CD_TBL    AT,
       PS_GEX_ACCT_CD_TBL    AT,
       !GEX-AXG Modified for Upgrade 9.0 on 09/26/2007 - End
       PS_DEPT_TBL       DT, 
       PS_GEX_DEPT_TBL   GDT,
       PS_NAMES          N, 
       PS_JOB            J,
       PS_GEX_EMPLID_MAPP K  		  
WHERE  N.EMPLID            = J.EMPLID	
AND    J.EMPLID		   = K.SSN   	  
AND    J.EMPL_RCD          = K.EMPL_RCD   
AND    N.NAME_TYPE         = 'PRI'
AND    N.EFFDT             = (SELECT MAX(NN.EFFDT) FROM   PS_NAMES NN WHERE  
       				NN.EMPLID     = N.EMPLID    AND    
       				NN.NAME_TYPE  = N.NAME_TYPE AND    
       				NN.EFFDT       <= $ASOFDATE)
AND    J.EFFDT             = (SELECT MAX(EFFDT) FROM   PS_JOB WHERE  
				EMPLID  = J.EMPLID  AND    
				EMPL_RCD    = J.EMPL_RCD AND    
				EFFDT       <= $ASOFDATE)
AND    J.EFFSEQ            = (SELECT MAX(EFFSEQ) FROM   PS_JOB WHERE  
				EMPLID       = J.EMPLID AND    
				EMPL_RCD     = J.EMPL_RCD AND    
				EFFDT        = J.EFFDT)
AND    J.DEPTID            = GDT.DEPTID
AND    GDT.EFFDT           = (SELECT MAX(EFFDT) FROM   PS_GEX_DEPT_TBL WHERE  
				DEPTID       = GDT.DEPTID AND    
				EFFDT       <= $ASOFDATE)
AND    GDT.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM   PS_GEX_DEPT_TBL WHERE  
				DEPTID       = GDT.DEPTID AND    
				EFFDT        = GDT.EFFDT)
AND    DT.SETID            = 'COMMN'
AND    DT.DEPTID           = J.DEPTID
AND    DT.EFF_STATUS       = 'A'
AND    DT.EFFDT            = (SELECT MAX(EFFDT) FROM   PS_DEPT_TBL WHERE  
				DEPTID       = DT.DEPTID AND    
				SETID        = DT.SETID AND    
				EFFDT       <= $ASOFDATE)
AND    AT.ACCT_CD          = J.ACCT_CD
!GEX-AXG Modified for Upgrade 9.0 on 09/26/2007 - Begin
AND    AT.EFF_STATUS       = 'A'      
AND    AT.EFFDT            = (SELECT MAX(GEXACCT.EFFDT) FROM   PS_GEX_ACCT_CD_TBL GEXACCT WHERE     
				GEXACCT.ACCT_CD      = AT.ACCT_CD AND                   
				GEXACCT.EFFDT       <= $ASOFDATE) 
!GEX-AXG Modified for Upgrade 9.0 on 09/26/2007 - End
!AND    AT.EFF_STATUS       = 'A'                                                        ! upgrade 9.0 changes
!AND    AT.EFFDT            = (SELECT MAX(EFFDT) FROM   PS_ACCT_CD_TBL WHERE             ! upgrade 9.0 changes
!				ACCT_CD      = AT.ACCT_CD AND                            ! upgrade 9.0 changes
!				EFFDT       <= $ASOFDATE)                                ! upgrade 9.0 changes
AND    JT.SETID            = 'COMMN'
AND    JT.JOBCODE          = J.JOBCODE
AND    JT.EFF_STATUS       = 'A'
AND    JT.EFFDT            = (SELECT MAX(EFFDT) FROM   PS_JOBCODE_TBL WHERE 
                                JOBCODE      = JT.JOBCODE  AND    
                                SETID        = JT.SETID  AND   
                                EFFDT       <= $ASOFDATE)
AND   [$GEXXX900_Include_Company_Criteriax]   !ISDVNPK 10/25/06 ITG 36895 Added this
AND   [$GEXXX902_Include_Deptid_Criteria]
AND   [$GEXXX907_Include_Div_Cd_Criteria]
AND   [$GEXXX907_Exclude_Div_Cd_Criteria]
order by J.EMPLID, J.EMPL_STATUS, J.EMPL_RCD       !ISDVNPK 10/25/06 ITG 36895 Added this

End-Select
End-Procedure


!ISDVNPK 10/25/06 ITG 36895 Added the below to check if EMployee is Active as of 31-Dec-2004
!***********************************************************************
Begin-Procedure check-empl-active
!***********************************************************************
#debug9 show 'check-empl-active'

 let $active_as_of_2004 = 'N'
begin-select
'X'

  let $active_as_of_2004 = 'Y'
from ps_job tx
where tx.emplid = &j.emplid
and tx.empl_rcd = &j.empl_rcd
and tx.effdt = (select max(effdt)
                  from ps_job
                 where emplid = tx.emplid
                   and empl_Rcd = tx.empl_rcd
                   and effdt <= '31-Dec-2004')
and tx.effseq = (select max(effseq)
                   from ps_job
                  where emplid = tx.emplid
                    and empl_rcd = tx.empl_rcd
                    and effdt = tx.effdt)
and tx.empl_status in ('A','L','P','S')
end-select

 If $active_as_of_2004 = 'N'
  Do check-empl-active-2004
 End-If

end-procedure


!***********************************************************************
Begin-Procedure check-empl-active-2004
!***********************************************************************
#debug9 show 'check-empl-active-2004'
 
begin-select
'Z'
  
 let $active_as_of_2004 = 'Y'

from ps_job ptx
where ptx.emplid = &j.emplid
and ptx.empl_rcd = &j.empl_rcd
and ptx.effdt = (select min(effdt)
                  from ps_job
                 where emplid = ptx.emplid
                   and empl_Rcd = ptx.empl_rcd
                   and empl_status in ('A','L','P','S')
                   and effdt >= '31-Dec-2004')
and ptx.effseq = (select min(effseq)
                   from ps_job
                  where emplid = ptx.emplid
                    and empl_rcd = ptx.empl_rcd
                    and empl_status in ('A','L','P','S')
                    and effdt = ptx.effdt)


end-select

end-procedure
!ISDVNPK 10/25/06 ITG 36895 Added the above to check if EMployee is Active as of 31-Dec-2004

!***********************************************************************************
begin-procedure get-operating-division
!***********************************************************************************

  !ISDVNPK 10/25/06 ITG 36895 Modified the below as given in the spec
  let $division = ' '
  
  Evaluate $div_cd
	when = 'COR'
  	when = 'GEM'
	when = 'GPH'
	when = 'RMC'
	when = 'RPH'
	when = 'WHS'
	when = 'MDR'
	when = 'RTL'
	when = 'MIS'

          let $division = 'POD'
          Add 1 to  #division_POD  
	break
	
	when = 'CLC'
	when = 'CLE'
	when = 'CP3'
	when = 'CLW'

	  let $division = 'COD'
          Add 1 to  #division_COD 
	break
	
	when = 'COC'
        when = 'COL'
          let $division = 'COL'
          Add 1 to  #division_COL

        when = 'IND'
            
         If substr(ltrim(rtrim($region,' '),' '),1,1) = '1'
           let $division = 'POD'
           Add 1 to  #division_POD  
         else
          If  substr(ltrim(rtrim($region,' '),' '),1,1) = '2'
           let $division = 'COD'
           Add 1 to  #division_COD 
	 else
           If substr(ltrim(rtrim($region,' '),' '),1,1) = '3'
             let $division = 'COL'
             Add 1 to  #division_COL
           End-If
          End-If
         End-If
       
       when = 'GGO'
            
         If substr(ltrim(rtrim($region,' '),' '),1,1) = '1'
           let $division = 'POD'
           Add 1 to  #division_POD  
         else
          If  substr(ltrim(rtrim($region,' '),' '),1,1) = '2'
           let $division = 'COD'
           Add 1 to  #division_COD 
	 else
           If substr(ltrim(rtrim($region,' '),' '),1,1) = '3'
             let $division = 'COL'
             Add 1 to  #division_COL
            else
             If ltrim(rtrim($region,' '),' ') = ''
              let $division = ' '
              Add 1 to  #division_other
             End-If
           End-If
          End-If
         End-If

       when-other
           let $division = ' ' 
          Add 1 to  #division_other          
  End-evaluate
  !ISDVNPK 10/25/06 ITG 36895 Modified the above as given in the spec

End-Procedure

!ISDVNPK 10/25/06 ITG 36895 Added the below 
!*********************************************************************
!Insert values into Temp table
!*********************************************************************
Begin-Procedure Insert-Temp
Begin-Sql 
INSERT INTO PS_GEX_HR602_TEMP
VALUES (&J.EMPLID,
        &J.DEPTID,
        $logon_id,
        $password,
        $firstname,
        $lastname,
        $active_status,
        $division,
        $region,
        $DepartmentID)
End-Sql

End-Procedure

!***********************************************************************************
Begin-Procedure select-temp-table
!***********************************************************************************
 #debug9 Show 'select-temp-table'

    Move '' To $all_cols               
    let $active_status     = ''                                    
Begin-Select
TMP.DEPTID    () on-break  LEVEL=1 PRINT=NEVER SAVE=$prvDeptid AFTER=BEFORE-DEPT 
TMP.EMPLID
TMP.LOGIN_ID
TMP.LOGIN_PWD
TMP.FIRST_NAME
TMP.LAST_NAME
TMP.EMPL_STATUS
TMP.GEX_COMPANY_DIV_CD          
TMP.GEX_RGN_CD   
TMP.DESCR    
 
  Add 1 to #select-temp-table
  let $Data-Found-Flag_1 = 'Y'
  
  Let $logon_id      = &TMP.LOGIN_ID 
  Let $password      = &TMP.LOGIN_PWD
  Let $firstname     = translate (&TMP.FIRST_NAME,',','')
  Let $lastname      = translate (&TMP.LAST_NAME,',','')                        
  Let $active_status = &TMP.EMPL_STATUS
  
  Let $division      = ltrim(rtrim(&TMP.GEX_COMPANY_DIV_CD,' '),' ') 
  Let $region        = &TMP.GEX_RGN_CD  
      
  Let $DepartmentID  = translate (&TMP.DESCR,',','') 

  Evaluate $active_status 
   When = 'Y'  
    Add 1 to #P300-Get-Details_Y
    break 
   When = 'N'  
    Add 1 to #P300-Get-Details_N
    break
  End-Evaluate 
 

  If $Prcs_Run_Cntl_ID = 'gexhr602a' 
   Do P240-Write-Record
   Use-Report FullFile-Report
   Do P245-print-rpt-line
  Else
    If $Prcs_Run_Cntl_ID = 'gexhr602b'     
      Do Write-Division-Record
    End-If   
  End-If  

FROM PS_GEX_HR602_TEMP TMP
ORDER BY TMP.DEPTID,TMP.EMPLID

End-Select
End-Procedure
!ISDVNPK 10/25/06 ITG 36895 Added the above

!***********************************************************************************
Begin-Procedure P141-Write-file-header
!***********************************************************************************
#debug9 Show 'P141-Write-File-Header'

    Move '' To $all_cols                                                   
    
    string 'UserLogonID' 'Password' 'FirstName' 'LastName' 'Email' 'Activation_Dt' 'Expiration_Dt' 'ActiveStatus' 'Division' 'Region' 'Location' by $tab into $all_cols   
    write 1 from $all_cols Status=#filestat	

  If #filestat <> 0
     Show 'Error writing file header.  Program terminating.'
     Stop
  End-If

End-Procedure
!***********************************************************************************
Begin-Procedure Division-Record-file-header
!***********************************************************************************
#debug9 Show 'Division-Record-file-header'

    Move '' To $all_cols                                                   
    
    string 'Division' 'Region' 'Location' by $tab into $all_cols   
    write 2 from $all_cols Status=#filestat	

  If #filestat <> 0
     Show 'Error writing file header.  Program terminating.'
     Stop
  End-If

End-Procedure

!***********************************************************************************
Begin-Procedure P240-Write-Record
!***********************************************************************************
#debug9 Show 'P240-Write-Record'

	    Move '' To $all_cols
	    If $division          = ''  
	          let $division = 'OTH'              !ITG-40798 change request by NETg if value will be null put it as 'OTH' for division done by vendnrr
            End-if
            If ltrim(rtrim($region,' '),' ') = ''    !ITG-40798 change request by NETg if value will be null put it as '999' for region done by vendnrr
                  let $region         = '999'
            End-if

	    string  $logon_id $password $firstname  $lastname  $Email $activation_date $expiration_date $active_status $division $region $DepartmentID by $tab into $all_cols
	    write 1 from $all_cols Status=#filestat
	    
	    Add 1 To #recs-written 

  If #filestat <> 0
     Show 'Error writing output file1.  Program terminating.'
     Stop
  End-If
    
End-Procedure

!***********************************************************************************
Begin-Procedure Write-Division-Record
!***********************************************************************************
#debug9 Show 'Write-Division-Record'
  
	    Move '' To $all_cols
	    string $division $region $DepartmentID by $tab into $all_cols
	    write 2 from $all_cols Status=#filestat2
    	    Add 1 To #recs-written-division
	    
  If #filestat2 <> 0
     Show 'Error writing output file2.  Program terminating.'
     Stop
  End-If
End-Procedure

!ISDVNPK 10/25/06 ITG 36895 Modified the below
!***********************************************************************************
Begin-procedure P245-print-rpt-line
!***********************************************************************************
! SHOW ' Entered into P245-print-rpt-line'
#debug9 Show 'P245-print-rpt-line'


  print $logon_id          (+1,1)  
  print $password          (0,13)  
  print $firstname         (0,22)  
  print $lastname          (0,38)                       
  print $Email             (0,69)  
  print $activation_date   (0,94)  
  print $expiration_date   (0,107)                       
  print $active_status     (0,116) 
  print $division          (0,129) 
  print $region            (0,138) 
  print $DepartmentID      (0,145) 

end-procedure
!ISDVNPK 10/25/06 ITG 36895 Modified the above

!***********************************************************************************
Begin-Procedure P300-Finalization
!***********************************************************************************
 SHOW ' Entered into P300-Finalization'
#debug9 Show 'P300-Finalization'
  
  If $Data-Found-Flag_1 <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (5) center
  Else  
     If $Data-Found-Flag <> 'Y'
      Use-Report FullFile-Report
      Print 'NO DATA SELECTED FOR THIS REPORT RUN'        (5) center
     End-If
  End-If
   
  Do Format-Number(#recs-written,$recs-written,'888,888,888')
  Do Format-Number(#recs-written-division,$recs-written-division,'888,888,888')
  
  Do Format-Number(#division_POD, $division_POD,'888,888,888')     
  Do Format-Number(#division_COL, $division_COL,'888,888,888')       
  Do Format-Number(#division_COD, $division_COD,'888,888,888')       
  Do Format-Number(#division_MOD, $division_MOD,'888,888,888')       
  Do Format-Number(#division_other, $division_other,'888,888,888')      
  
      If $Prcs_Run_Cntl_ID = 'gexhr602a' 
   	  Show ''
	  Show $recs-written ' records written to ' $file1
	  Show ''
	  !show 'Records read from P200-Main-Process    :' #P200-Main-Process
          show 'Records read from P300-Get-Details     :' #P300-Get-Details
          show 'Records read from select-temp-table    :' #select-temp-table
          show ''
          show 'Terminated_Employees Read	       :' #Terminated_Employees
          Show 'Active_Employees  Read   	       :' #Active_Employees
          show ''
          show 'Total Active Employees  written        :' #P300-Get-Details_Y
          show 'Total Terminated Employees written     :' #P300-Get-Details_N
     Else
       If $Prcs_Run_Cntl_ID = 'gexhr602b'   
  	  Show ''
          Show $recs-written-division  'records written to ' $file2
       End-If  
     End-If   
  
  
  SHOW '$division_POD:' $division_POD
  SHOW '$division_COL:' $division_COL
  SHOW '$division_COD:' $division_COD
  SHOW '$division_MOD:' $division_MOD
  show '$division_other:' $division_other
  
  If $Prcs_Run_Cntl_ID = 'gexhr602a' 
    Do P310-Close-File
  Else
    If $Prcs_Run_Cntl_ID = 'gexhr602b'   
      Do Division-Close-File
    End-If  
  End-If
  
  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc
  Show 'Successful end of report'
End-Procedure

!***********************************************************************************
Begin-Procedure P310-Close-File
!***********************************************************************************
#debug9 Show 'P310-Close-File'
  Close 1
  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop
  End-If
End-Procedure


!***********************************************************************************
Begin-Procedure Division-Close-File
!***********************************************************************************
#debug9 Show 'Division-Close-File'
   Close 2

  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop
  End-If
End-Procedure
!***********************************************************************************


!***********************************************************************
!clone of gexxx900.sqc  for the proceudre  P200-Main-Process 
Begin-Procedure GEXXX900-Select-Company-Parametersx
!***********************************************************************
 show 'entered into GEXXX900-Select-Company-Parameters_x'
  Let $OprID               = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID         = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_COMPANY_ROWS = 0
  Let $GEXXX900_INCLUDE_COMPANY_CRITERIAx = ''
  Let $GEXXX900_EXCLUDE_COMPANY_CRITERIAx = ''
  Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIAx = 'ALL'
  Let $GEXXX900_EXCLUDE_COMPANY_DISPLAY_CRITERIAx = 'NONE'

Begin-Select

GEX_RC_COMPANY2.COMPANY

  Add 1 To #GEX_RC_COMPANY_ROWS

  If #GEX_RC_COMPANY_ROWS = 1
    Let $GEXXX900_INCLUDE_COMPANY_CRITERIAx = '(' || $GEXXX900_Company_Aliasx || ' In ('''     || &GEX_RC_COMPANY2.COMPANY || ''''
    Let $GEXXX900_EXCLUDE_COMPANY_CRITERIAx = '(' || $GEXXX900_Company_Aliasx || ' Not In (''' || &GEX_RC_COMPANY2.COMPANY || ''''
  Else
    Let $GEXXX900_INCLUDE_COMPANY_CRITERIAx = $GEXXX900_INCLUDE_COMPANY_CRITERIAx || ',''' || &GEX_RC_COMPANY2.COMPANY  || ''''
    Let $GEXXX900_EXCLUDE_COMPANY_CRITERIAx = $GEXXX900_EXCLUDE_COMPANY_CRITERIAx || ',''' || &GEX_RC_COMPANY2.COMPANY  || ''''
  End-If

From  PS_GEX_RC_COMPANY GEX_RC_COMPANY2

Where GEX_RC_COMPANY2.OPRID                = [$OprID]
And   GEX_RC_COMPANY2.RUN_CNTL_ID          = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_COMPANY2.COMPANY, ' ') != ' '

End-Select

  If #GEX_RC_COMPANY_ROWS = 0
    Let $GEXXX900_INCLUDE_COMPANY_CRITERIAx = $GEXXX900_Company_Aliasx || ' = ' || $GEXXX900_Company_Aliasx
    Let $GEXXX900_EXCLUDE_COMPANY_CRITERIAx = $GEXXX900_Company_Aliasx || ' = ' || $GEXXX900_Company_Aliasx
  Else
    Let $GEXXX900_INCLUDE_COMPANY_CRITERIAx = $GEXXX900_INCLUDE_COMPANY_CRITERIAx || '))'
    Let $GEXXX900_EXCLUDE_COMPANY_CRITERIAx = $GEXXX900_EXCLUDE_COMPANY_CRITERIAx || '))'
    Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIAx = $GEXXX900_INCLUDE_COMPANY_CRITERIAx
    Let $GEXXX900_EXCLUDE_COMPANY_DISPLAY_CRITERIAx = $GEXXX900_EXCLUDE_COMPANY_CRITERIAx
  End-If

End-Procedure
!*****************************************************************************
!clone of  for the proceudre gexxx903.sqc P200-Main-Process 
Begin-Procedure GEXXX903-Select-Emp-Stat-Parametersx
!*****************************************************************************

  Let $OprID                = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
  Let #GEX_RC_EMP_STAT_ROWS = 0
  Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = ''
  Let $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx = ''
  Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIAx = 'ALL'
  Let $GEXXX903_EXCLUDE_EMP_STAT_DISPLAY_CRITERIAx = 'NONE'

Begin-Select

GEX_RC_EMP_STAT2.EMPL_STATUS

  Add 1 To #GEX_RC_EMP_STAT_ROWS

  If #GEX_RC_EMP_STAT_ROWS = 1
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = '(' || $GEXXX903_Emp_Stat_Aliasx || ' In ('''     || &GEX_RC_EMP_STAT2.EMPL_STATUS || ''''
    Let $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx= '(' || $GEXXX903_Emp_Stat_Aliasx || ' Not In (''' || &GEX_RC_EMP_STAT2.EMPL_STATUS || ''''
  Else
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx || ',''' || &GEX_RC_EMP_STAT2.EMPL_STATUS || ''''
    Let $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx || ',''' || &GEX_RC_EMP_STAT2.EMPL_STATUS || ''''
  End-If

From  PS_GEX_RC_EMP_STAT GEX_RC_EMP_STAT2

Where GEX_RC_EMP_STAT2.OPRID                    = [$OprID]
And   GEX_RC_EMP_STAT2.RUN_CNTL_ID              = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_EMP_STAT2.EMPL_STATUS, ' ') != ' '

End-Select

  If #GEX_RC_EMP_STAT_ROWS = 0
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_Emp_Stat_Aliasx || ' = ' || $GEXXX903_Emp_Stat_Aliasx
    Let $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_Emp_Stat_Aliasx || ' = ' || $GEXXX903_Emp_Stat_Aliasx
  Else
    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx || '))'
    Let $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx = $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx || '))'
    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIAx = $GEXXX903_INCLUDE_EMP_STAT_CRITERIAx
    Let $GEXXX903_EXCLUDE_EMP_STAT_DISPLAY_CRITERIAx = $GEXXX903_EXCLUDE_EMP_STAT_CRITERIAx
  End-If
!*****************************************************************************
End-Procedure


!**********************************************************************
begin-procedure BEFORE-DEPT    !10908 ISDVSRC  05/11/05     
!**********************************************************************
#debug9 Show 'BEFORE-DEPT'
!   show '********************** '         
!   show '#rpt_count ' #rpt_count
!   show '$DeptID   :' $DeptID
!   show '$prvDeptid:' $prvDeptid
!   show '$first    :' $first
!   show '********************** '         
!   
 If $Prcs_Run_Cntl_ID = 'gexhr602a'    
   If $first='Y'
      let $first='N'
   Else
      !If #rpt_count > 0    !ISDVNPK 10/25/06 ITG 36895 commented this
        new-page
      !  let #rpt_count = 0 !ISDVNPK 10/25/06 ITG 36895 commented this
      !End-If               !ISDVNPK 10/25/06 ITG 36895 commented this
  End-If
 End-If
END-PROCEDURE
!***********************************************************************
#include 'gexxx951.sqc'
#include 'gexxx950.sqc'  !Get SQRW run controls
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
!#include 'gexxx9xx.sqc'  !Get pay single row run control        jnb 09/15/99
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'getdptnm.sqc'  !Get Department Name
