!***********************************************************************
!  GEXPY658 :  Create W-2 File for Columbus Ohio                       *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1999-2001 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2001/10/25:14:43:5                                  *
!       $Release:  HRMS751                                             *
!      $Revision:  101                                                 *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS	DATE		DESCRIPTION OF THE CHANGE              *
!***********************************************************************
! CWB           11/02/2004      New program, based on GEXPY618.sqr     *              
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#include 'setup02.sqc' 

!**********************************************************************
Begin-Program
!**********************************************************************
  
  display ''
  display 'Creating Columbus Ohio W-2 File.'
  display ''

  date-time () mm/dd/yyyy &dayBegan
  date-time () hh:mi:ss &timeBegan
  Show 'Report Started on  ' &dayBegan ' at ' &timeBegan

  Move 0 to $Zero_fill 099999999999999
  move 0 to $zero_amt 099999999.99

  do Init-Report
  do Process-Main
  do close-file  
  do print-totals
  do Stdapi-Term

  Display ''
  date-time () mm/dd/yyyy &dayended
  date-time () hh:mi:ss &timeended
  Show 'Report Ended on  ' &dayended ' at ' &timeended
End-Program

!***********************************************************************
begin-heading 4

  #Include 'stdhdg01.sqc'

end-heading
!***********************************************************************

!***********************************************************************
Begin-Procedure Init-Report
!***********************************************************************
#debug9 Show 'init-report'
 
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Tax-Reporting-Run-Controls


  Let $GEXXX915_Locality_Alias = 'DL.LOCALITY'

  If $Prcs_Process_Instance = ''
    !AXL 12/10/2001 - Gex Mods - Begin
    !Display 'Report cannot be run outside of PeopleSoft, please use process scheduler.'
    !Stop
!    While 1=1
      if rtrim($bal_year,' ') = ''
       Display 'Enter 4 digit Tax Balance Year'
         input $bal_year Maxlen=4 'Year' 
         move $bal_year to $balance_year
       end-if
!    End-while
     Let $LocalityString = ''''
     Display 'Enter Locality or leave blank to exit.'
     While 1=1
       Input $In-Locality Maxlen=7 'Locality'
       Uppercase $In-Locality
       If Rtrim($In-Locality, ' ') = ''
         Concat '''' With $LocalityString
         Break
         Add 1 To #GRL_ROWS
       End-If
       If $LocalityString <> ''''
         Concat ''',''' With $LocalityString
       End-If
       Concat $In-Locality With $LocalityString
     End-While

     If $LocalityString = ''''''
       Let $GEXXX915_INCLUDE_LOCALITY_CRITERIA = '1=1'
       Let $GEXXX915_INCLUDE_LOCALITY_DISPLAY_CRITERIA = 'ALL'
     Else
       Let $GEXXX915_INCLUDE_LOCALITY_CRITERIA = $GEXXX915_Locality_Alias || ' In (' || $LocalityString || ')'
       Let $GEXXX915_INCLUDE_LOCALITY_DISPLAY_CRITERIA = $GEXXX915_INCLUDE_LOCALITY_CRITERIA
     End-If
  Else
     show ' '
     show 'OPRID: ' $prcs_oprid
     show 'RUN_CNTL_ID: ' $Prcs_Run_Cntl_ID
     show ' '
     do GEXXX915-Select-Locality-Parameters 
     do GEXXX922-Select-Parameters
  move #GEX_RC_PAY.Balance_Year to $RC_PAY_BAL_YEAR 9999

  if rtrim($RC_PAY_BAL_YEAR,' ') = ''
  or $RC_PAY_BAL_YEAR = '0'
    move &TX.BALANCE_YEAR to $balance_year 9999 
  else
    move $RC_PAY_BAL_YEAR to $balance_year 9999 
  end-if
  End-if
  show '$GEXXX915_Include_Locality_Criteria ' $GEXXX915_Include_Locality_Criteria
  show ' '


  show '$balance_year: ' $balance_year
  show ' '

  do Initialization
  do File-Create			

End-Procedure

!***********************************************************************
Begin-Procedure Initialization
!***********************************************************************
#debug9 Show 'initialization'

!  move 'OH' to $state			
  let $ReportID2 = 'GEXPY658'		
  let $ReportID  = 'GEXPY658'		
  encode '<013>' into $CRLF	!explicit carriage return in the specs
  let $196_spaces = rpad($196_spaces,196,' ')
  let $ReportTitle = 'City of Columbus W-2 File Summary Report'	
  move '   Wage & Tax Totals'  to $Col5Hdr1         !
  move '       By Localities'  to $Col5Hdr2         !
  move '           Local    '  to $Col6Hdr1         !See gexw2sry.sqc
  move '           Wages    '  to $Col6Hdr2         !for format of
  move '           Local    '  to $Col7Hdr1         !Column headings
  move '           Taxes    '  to $Col7Hdr2         !

  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $year4	!AXL 12/10/2001 - Gex Mods
  do Format-DateTime($AsOfToday, $960Date, {DEFYMD},'','')
  move $960Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear
  do zero-amounts

Begin-Select
TEMP_SSN_MASK
FROM PS_INSTALLATION
End-Select
End-Procedure

!***********************************************************************
Begin-Procedure File-Create
!***********************************************************************
#debug9 Show 'file-create'

  move $Balance_Year to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')
  let $EffDate = $CalYear || '1231'
  do Format-DateTime($EffDate, $EffDate, {DEFCMP}, '', 'native')
  do Open-File

End-Procedure

!***********************************************************************
Begin-Procedure Process-Main
!***********************************************************************
#debug9 Show 'Process-Main'

Begin-Select
A.W2_REPORTING_CO  	() 	on-break	level=1
				print=never 
 				before=Before-W2-Reporting-Co-Chg		
				AFTER=After-W2-Reporting-Co-Chg

E.EMPLID           	() 	on-break 	level=2
				print=never
                                AFTER=AFTER-EMPLID

E.W2_STATE
A.DESCR
A.FEDERAL_EIN
A.ADDRESS1
A.ADDRESS2
A.CITY
A.STATE
A.POSTAL
A.COUNTRY
A.OTHER_EIN
A.BUSI_TERM_IND
E.COMPANY
E.SEQUENCE_NUMBER
E.CALENDAR_YEAR
E.TAXFORM_ID
E.EMPLOYER_ID_SWT
E.SSN
E.YE_FNAME
E.YE_MIDDLE_NAME
E.YE_LNAME
E.YE_SUFFIX
E.ADDRESS1
E.ADDRESS2
E.CITY
E.STATE
E.POSTAL
E.COUNTRY
E.STATUTORY_EE
E.PENSION_PLAN
E.DECEASED
E.THIRDPARTY_SICKPAY
EE.PROCESS_FLAG

  #debug9 Show 'EMPLID: ' &E.EMPLID

  move &E.EMPLID          to $E.EMPLID
  move &E.W2_State        to $E.W2_State
  move &E.Company         to $E.Company
  move &E.TaxForm_ID      to $E.TaxForm_ID
  move &E.Sequence_Number to #E.Sequence_Number
  move &E.Employer_ID_SWT to $E.Employer_ID_SWT
  do get-Fed-Amounts
  do get-State-Amounts
  do get-local-amounts
  do format-e-rec

FROM  SYSADM.PS_W2_COMPANY A, 
      SYSADM.PS_YE_EE EE, 
      SYSADM.PS_YE_DATA E,
      SYSADM.PS_YE_AMOUNTS YA
WHERE A.CALENDAR_YEAR    = $Balance_Year
  AND A.W2_REPORTING_CO <> ' '
  AND E.W2_STATE        <> ' ' 	
  AND E.EMPLOYER_ID_SWT <> ' '	
  AND E.CITY            <> ' '			
  AND A.TAXFORM_ID       =  'W'
  AND A.COMPANY          = E.COMPANY
  AND A.CALENDAR_YEAR    = E.CALENDAR_YEAR
  AND A.TAXFORM_ID       = E.TAXFORM_ID
  AND E.COMPANY          = EE.COMPANY
  AND E.EMPLID           = EE.EMPLID
  AND E.TAXFORM_ID       = EE.TAXFORM_ID
  AND E.CALENDAR_YEAR    = EE.CALENDAR_YEAR
  AND EE.PROCESS_FLAG   <> 'V'
  AND YA.BOX IN ('18')
  AND YA.COMPANY  = E.COMPANY
  AND YA.EMPLID   = E.EMPLID
  AND YA.CALENDAR_YEAR = E.CALENDAR_YEAR
  AND YA.TAXFORM_ID = E.TAXFORM_ID
  AND YA.LOCALITY In (select distinct DL.LOCALITY from PS_GEX_RC_LOCALITY DL 
                            where [$GEXXX915_INCLUDE_LOCALITY_CRITERIA])

ORDER BY  E.W2_STATE, A.W2_REPORTING_CO, E.SSN, E.EMPLID

end-select

End-Procedure

!***********************************************************************
Begin-Procedure  Before-W2-Reporting-Co-Chg
!***********************************************************************
#debug9 Show 'Before-W2-Reporting-Co-Chg'

  move &A.W2_Reporting_Co to $Company
  move &A.Federal_EIN     to $A.Federal_EIN
  move &A.Descr           to $A.Descr
  move &A.Other_EIN       to $A.Other_EIN
  move &A.W2_Reporting_Co to $A.W2_Reporting_Co

  move 'N' to $A-Written

  If $A-Written = 'N'
    do Write-A-Rec
  End-if

end-procedure

!***********************************************************************
Begin-Procedure  Write-A-Rec
!***********************************************************************
#debug9 Show 'Write-A-rec'
  write 1 from 'A'
               $A.Federal_EIN:9 
               $A.Descr:40
               $CalYear:4   
               $A.Other_EIN:9
               $196_spaces:196
               $CRLF:1  
end-procedure

!***********************************************************************
Begin-Procedure  After-W2-Reporting-Co-Chg
!***********************************************************************
#debug9 Show 'Before-W2-Reporting-Co-Chg'

end-procedure

!***********************************************************************
Begin-Procedure After-EmplID
!***********************************************************************
#debug9 Show 'After-Emplid'

  !Unique State Requirements - Different from MMREF
  !  RS record requires specific changes
  !    Be advised - TAXMMREF contains some State Specific
  !        RS record code also.

  Move 0 to $Zero_fill 099999999999999

!  evaluate $E.W2_State
!    when = 'OH'
      move '      '  to $Zero_fill
      move $Balance_Year to $ReportingPeriod
      LET $ReportingPeriod = '12' || $ReportingPeriod
!      break
!    when-other
!      break
!  end-evaluate
End-Procedure


!***********************************************************************
Begin-Procedure format-e-rec
!***********************************************************************
#debug9 Show 'Format-e-rec'

  #ifdef TAXDISPLAY
    Show 'Processing EMPLID : ' &E.EMPLID
  #endif

  Let $FirstTime = 'Y'
  let $State-Reportable = 'N'


  move &E.SSN to $S123 xxx
  If $S123 = &Temp_SSN_Mask or RTRIM(&E.SSN, ' ') = ''
    move '000000000' to $EE_SSN
  else
    move &E.SSN to $EE_SSN
  End-if

  let $FirstName = rtrim(&E.YE_Fname,' ')
  let $MiddleName = rtrim(&E.YE_Middle_name,' ')
  let $LastName = rtrim(&E.YE_Lname,' ')
  let $Suffix = rtrim(&E.YE_Suffix,' ')
  if  $middlename = ''
    let $EE_name = $FirstName||' '||$LastName||' '||$Suffix
  else
    let $EE_name = $FirstName||' '||$MiddleName||' '||$LastName||' '||$Suffix
  end-if
  let $EE_name = rpad($EE_name,40,' ')
  let $addr1 = rtrim(&E.address1,' ')
  let $addr2 = rtrim(&E.address2,' ')
  let $EE_ADDRESS = $addr1||' '||$addr2
  let $EE_ADDRESS = rpad($EE_ADDRESS,40,' ')
  let $EE_City = &E.City
  let $EE_city = rpad($EE_city,40,' ') 
  let $EE_State = rtrim(&E.State, ' ')
  let $EE_Zip = &E.Postal

  do write-e-rec
  End-Procedure

!***********************************************************************
Begin-Procedure Write-E-Rec
!***********************************************************************
#debug9 Show 'Write-e-rec'

  write 1 from 'E'
               $EE_SSN:9
               $EE_NAME:40
               $EE_ADDRESS:40
               $EE_CITY:40
               $EE_STATE:2
               $EE_ZIP:5
               $fed_wages:12
               $med_wages:12
               $section_125_amt:12
               $excluded_comp_amt:12
               $stock_option_amt:12
               $deferred_401k_457:12
               $supp_UI_comp_amt:12
               $state_wages:12
               $local_wages:12
               $local_tax:12
               $city_code:2
               $CRLF:1 
  do reset-variables
  do zero-amounts
  add 1 to #tot_emps
End-Procedure

Begin-Procedure reset-variables
#debug9 Show 'reset-variables'

      move '     '   to $Suffix
      move '     '   to $Address1
      move '     '   to $Address2
      move '     '   to $City
      move '     '   to $State
      move '     '   to $Zip
      move 0         to $Zero_fill 099999999999999
         
End-Procedure

Begin-Procedure zero-amounts
#debug9 Show 'zero-amounts'

      move $zero_amt to $fed_wages
      move $zero_amt to $med_wages
      move $zero_amt to $section_125_amt
      move $zero_amt to $excluded_comp_amt
      move $zero_amt to $stock_option_amt
      move $zero_amt to $deferred_401k_457
      move $zero_amt to $supp_UI_comp_amt
      move $zero_amt to $state_wages
      move $zero_amt to $local_wages
      move $zero_amt to $local_tax

End-Procedure

!***********************************************************************
Begin-Procedure get-Fed-Amounts
!***********************************************************************
#debug9 Show 'Get-Fed-amounts'
  move 0 to #amount
Begin-Select
D.BOX
D.W2_AMOUNT

  do Assign-Year-End-Variables
  let $D.Box = RTRIM(&D.Box,' ')
  let #Amount = &D.W2_Amount
  if #Amount < 0  and $D.Box <> $YE_Adv_EIC
    display 'EMPLID ' noline
    display $E.Emplid noline
    display '  W2 Box ID ' noline
    display &D.BOX noline
    display ' Amount ' noline
    display #Amount  noline
    display ' Amount set to Zero '
    move 0 to #Amount
  end-if

    Evaluate $D.Box
      when = $YE_Fed_Wages                          !Fed wages
        move  #Amount to $Fed_Wages 099999999.99
        break
      when = $YE_Med_Wages                          !Medicare wages
        move  #Amount to $Med_Wages 099999999.99
        break
      when = $YE_401K                               !401(k)
        move  #Amount to $section_125_amt 099999999.99
        break
      when-other
        break 
  End-evaluate

!  do show-fed-amounts

FROM  SYSADM.PS_YE_AMOUNTS D
WHERE D.COMPANY         = &E.Company
  AND D.CALENDAR_YEAR   = $Balance_Year
  AND D.EMPLID          = &E.Emplid
  AND D.TAXFORM_ID      = &E.TaxForm_ID
  AND D.SEQUENCE_NUMBER = 1
  AND D.STATE           = '$U'
End-Select
End-Procedure

begin-procedure show-fed-amounts
  Show 'Get-Fed-amounts'  
  show '&E.Company: ' &E.Company
  show '$Balance_Year: ' $Balance_Year
  show '&E.Emplid: ' &E.Emplid
  show '&E.TaxForm_ID: ' &E.TaxForm_ID
  show 'BOX: ' $d.box
  show 'Amount: ' #amount
  show 'Fed_wages: ' $fed_wages
  show 'Med_wages: ' $Med_wages
  show '#####################################'
End-Procedure

!***********************************************************************
begin-procedure get-State-Amounts
!***********************************************************************
#debug9 Show 'Get-state-amounts'

  do Assign-Year-End-Variables
  let $State-Reportable = 'N'
begin-SELECT
DS.BOX
DS.W2_AMOUNT
 
  let #Amount = &DS.W2_Amount 

  let $DS.Box = RTRIM(&DS.Box,' ')
  evaluate $DS.Box
    when = $YE_State_Wages                    	!State wages
      move  #Amount to $State_Wages 099999999.99
      break
    when = $YE_State_Tax                    	!State tax
      move  #Amount to $State_Tax 099999999.99
      break
  end-evaluate
  let $State-Reportable = 'Y'

FROM  SYSADM.PS_YE_AMOUNTS DS
WHERE DS.COMPANY         = $E.Company
  AND DS.CALENDAR_YEAR   = $Balance_Year
  AND DS.EMPLID          = $E.Emplid
  AND DS.TAXFORM_ID      = $E.TaxForm_ID
  AND DS.SEQUENCE_NUMBER = #E.Sequence_Number
  AND DS.BOX    IN ('16','17')
end-SELECT

end-procedure

!***********************************************************************
begin-procedure get-Local-Amounts
!***********************************************************************
#debug9 Show 'Get-Local-amounts'

begin-SELECT      !Local Data
DL.BOX
DL.W2_AMOUNT
DL.STATE
DL.LOCALITY       
!DL.LOCALITY       () on-break	level=3
!                     print=never
!                     after=Report-Local-Amounts
!                     save=$prev_locality


  let $LocalReportable = 'Y'
  let $State-Reportable = 'Y'
  let $LCL_Status =  nvl (&DL.Locality,'none')
  if  $LCL_Status = 'none'
    display 'No Locality identified for local amount.'
    display 'Processing employee: ' noline
    display $E.EmplID               noline
    display '  In company: '        noline
    display $E.Company
    STOP
  end-if

  let #Amount = &DL.W2_Amount 
  let $DL.Locality = &DL.Locality
  evaluate $DL.locality
    when = '08532'
      let $city_code = '14'
    break
    when = '11332'
      let $city_code = '11'
    break
    when = '18000'
      let $city_code = '01'
    break
    when = '32592'
      let $city_code = '06'
    break
    when = '32606'
      let $city_code = '09'
    break
    when = '33740'
      let $city_code = '16'
    break
    when = '44086'
      let $city_code = '15'
    break
    when = '47474'
      let $city_code = '13'
    break
    when = '67862'
      let $city_code = '10'
    break
  end-evaluate
 
  let $DL.Box = RTRIM(&DL.Box,' ')

  evaluate $DL.Box
    when = $YE_Local_Wages         !Local wages
      move #Amount to  $Local_Wages  099999999.99
      add  #Amount to  #Local_Wages
      #debug8 show $E.COMPANY ' ' $Balance_Year ' ' &DL.LOCALITY ' ' $E.Emplid ' ' &DL.W2_Amount ' ' $E.TaxForm_ID ' ' #E.Sequence_Number ' ' &DL.BOX
      #debug8 show '$DL.Locality ' $DL.Locality ' $hold_locality ' $hold_locality ' $DL.BOX ' $dl.box ' $hold_box ' $hold_box '$E.EmplID ' $E.EmplID ' $hold_ssn ' $hold_ssn ' #Amount ' #amount ' #Local_Wages ' #local_wages ' #updt_wages ' #Updt_Wages 
      break
    when = $YE_Local_Tax           !Local withheld
      move #Amount to  $Local_tax  099999999.99
      add  #Amount to  #Local_tax
      #debug8 show $E.COMPANY ' ' $Balance_Year ' ' &DL.LOCALITY ' ' $E.Emplid ' ' &DL.W2_Amount ' ' $E.TaxForm_ID ' ' #E.Sequence_Number ' ' &DL.BOX
      #debug8 show '$DL.Locality ' $DL.Locality ' $hold_locality ' $hold_locality ' $DL.BOX ' $dl.box ' $hold_box ' $hold_box ' $E.EmplID ' $E.EmplID ' $hold_ssn ' $hold_ssn ' #Amount ' #amount ' #Local_tax ' #local_tax ' #updt_taxes ' #Updt_taxes
      break
  end-evaluate

FROM  SYSADM.PS_YE_AMOUNTS DL
WHERE DL.COMPANY         = $E.COMPANY
  AND DL.CALENDAR_YEAR   = $Balance_Year
  AND DL.EMPLID          = $E.Emplid
  AND DL.TAXFORM_ID      = $E.TaxForm_ID
  AND DL.SEQUENCE_NUMBER = #E.Sequence_Number
  AND DL.BOX    IN ('18','19')
  AND [$GEXXX915_Include_Locality_Criteria]     

ORDER BY DL.LOCALITY
end-SELECT
end-procedure                      !get-Local-Amounts

!***********************************************************************
Begin-Procedure Print-Totals
!***********************************************************************
#debug9 Show 'Print-totals'

  print 'Totals for calendar year '  (+2,1)
  print $balance_year                (,+1)


  do Format-Number (#Tot_emps, $out, 'B99,999')
  print 'Total Nbr of Employees: '(+3,8)
  print $out (,40)

  let #out = #local_wages 
  do Format-Number(#out, $out, 'B99,999,999.99')
  print 'Total Local Wages: '(+2,8)
  print $out  (,33)

  let #out = #local_tax 
  do Format-Number(#out, $out, 'B9,999,999.99')
  print 'Total Local Taxes: '(+2,8)
  print $out  (,34)

  !

End-Procedure

!***********************************************************************
begin-procedure Insert-Error
!***********************************************************************
  display 'Error on insert to temporary local table '
end-procedure

begin-procedure Delete-Temp-Table
#debug9 Show 'Delete-temp-table'

begin-SQL on-error=Ignore
  DELETE FROM SYSADM.PS_R_TAX960XX
end-SQL
end-procedure

!***********************************************************************
begin-procedure Ignore
!***********************************************************************
! dummy procedure to avoid SQL error message on delete of empty table
end-procedure

!***********************************************************************
begin-procedure Update-Error
!***********************************************************************
  display 'Error on update of temporary local table '
end-procedure


!***********************************************************************
begin-procedure Is-String-Numeric ($Test_String, :#Return_Value)
!***********************************************************************
  let #Max_Lngth = length ($Test_String)
  let #Return_Value  =  1
  let #Char_Pos  =  1

  while #Char_Pos <= #Max_Lngth
    let $Test_Char = substr ($Test_String, #Char_Pos, 1)
    let #Which_Digit = instr ('0123456789', $Test_Char, 1)
    if  #Which_Digit = 0
      let #Return_Value  =  0
      break
    end-if
    add 1 to #Char_Pos
  end-while
end-procedure

!*********************************************************************
Begin-procedure Open-file
!*********************************************************************
#debug9 Show 'open-file'

let $filename = '{OUTFILE}'||'gexpy658.dat'
open $filename as 1

     for-writing record=260

if #writestat != 0
   display 'Error Opening output file.  Program terminating.'
   stop
end-if

end-procedure

!*********************************************************************
Begin-procedure close-file
!*********************************************************************
#debug9 Show 'close-file'
  close 1
end-procedure

!*************************************************************************
!*************************************************************************

#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'getsufix.sqc'  !Move suffix from name
#Include 'w2.sqc'        !Assign-Year-End-Variables
#include 'gexxx915.sqc'  !Get locality multiples table
#include 'gexxx922.sqc'  !Parameters from GEX_RC_PAY

