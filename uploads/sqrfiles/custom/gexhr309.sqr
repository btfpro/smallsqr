
!***************************************************************************************
! GEXHR309:             EVP Metrics - Turnover Analysis--For Exempt and Non Exempt     * 
!                                                                                      *
!***************************************************************************************
!                                                                                      *
!               Confidentiality Information:                                           *
!                                                                                      *
! This module is the confidential and proprietary information of                       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted                 *
! in any form, by any means, in whole or in part, nor is it to be used                 *
! for any purpose other than that for which it is expressly provided                   *
! without the written permission of Giant Eagle.                                       *
!                                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved                         *
!                                                                                      *
!***************************************************************************************
!                                                                                      *        
! GEXHR308s :										*
!                                                                                      *        
! Narrative:                                                                           * 
!                                                                                      *  
! SQL Tables:           								*
!                                                                                      *
! Written by:           Kundan Kumar Y	                                               *       
!                                                                                      *
! Normally Run:									       *
!                                                                                      *
! Control Parms:	AsOfDate, FromDt, ThruDt        				*
!											*
!***************************************************************************************
!                         MODIFICATION HISTORY                                          *
!****************************************************************************************
! CSR    INITIALS     DATE         DESCRIPTION OF THE CHANGE                            *
!****************************************************************************************
!        VENDKXY    01/05/2009	   Changes done for getting correct outputs                                                                               *
!****************************************************************************************
#include 'setenv.sqc'    !set environment
#include 'setup32.sqc'   !printer and page-size initialization
#include 'prcsapi.sqc'   
#include 'sqrtrans.sqc'  ! set translation
#include 'datemath.sqc'



!**************************************************************************************************************************
!        Setup Section
!**************************************************************************************************************************
begin-Setup

declare-variable
date $from_date
date $thru_date
date $AsOfDate1
end-declare 

end-setup


!**************************************************************************************************************************
!        REPORT
!**************************************************************************************************************************
begin-Report

!	let $from_date = '01-mar-2007'	!Used for Testing Through Sqr runner
!    	let $thru_date = '29-feb-2008'	!Used for Testing Through Sqr runner
Do Init-DateTime           !datetime.sqc
Do Init-Number             !number.sqc
Do Get-Current-DateTime    !curdttim.sqc
Do Stdapi-Init             !stdapi.sqc


If $prcs_process_instance = ''
    Do Ask-As-Of-Date		!askaod.sqc
    Let $AsOfDate1 = $AsOfDate 
    Let $from_date = dateadd($AsOfDate1,'YEAR',-1)
    Let $thru_date = dateadd($AsOfDate1,'DAY',-1) 
else
    do Get-Run-Control	     !gexrnctl.sqc
     
    If Rtrim (&asofdate, ' ') = ''
    Let $AsOfDate = $AsOfToday
    Let $AsOfDate1 = $AsOfDate
    Let $from_date = dateadd($AsOfDate1,'YEAR',-1)
    Let $thru_date = dateadd($AsOfDate1,'DAY',-1)
   
   else
    let $AsOfDate = &asofdate
    let $from_date = &fromdate
    let $thru_date = &thrudate
   End-If
   
   If Rtrim (&fromdate, ' ') = '' or Rtrim (&thrudate, ' ') = ''
   Let $AsOfDate1 = $AsOfDate
   Let $from_date = dateadd($AsOfDate1,'YEAR',-1)
    Let $thru_date = dateadd($AsOfDate1,'DAY',-1)
    end-if
    
end-if

show '$from_date:' $from_date
show '$thru_date:' $thru_date

Let $ReportID      =   'gexhr309'
Let $ReportTitle   =   'Turnover - Other Analyses-Exempt and Non-Exempt'
  
Show '$ReportID    = ' $ReportID
Show '$ReportTitle = ' $ReportTitle
Show '$ReportDate  = ' $ReportDate
Show '$ReportTime  = ' $ReportTime

!processing started 

do open-file 

do actives
do Get-Terminate-Employees
do calcexeandnonexe
Let $title='Annual'
do calcexeandnonexeper
write 5 from $next
Let $Report_title = 'The monthly turnover uses the active employee count as of the end of the respective month and the monthly terminations for that month'
	write 5 from $Report_title
	write 5 from $next
do calcexeandnonexe1
do calcexeandnonexe2
do calcexeandnonexe3
Do Stdapi-Term             !stdapi.sqc
end-Report


!**************************************************************************************************************************
!        Actives
!**************************************************************************************************************************
	

Begin-Procedure actives
show 'Active employee processing started'

	Let #act_exe_busarea1= 0
	Let #act_exe_busarea2= 0
	Let #act_exe_busarea3= 0
	Let #act_exe_busarea4= 0
	Let #act_exe_busarea5= 0
	Let #act_nonexe_busarea1= 0
	Let #act_nonexe_busarea2= 0
	Let #act_nonexe_busarea3= 0
	Let #act_nonexe_busarea4= 0
	Let #act_nonexe_busarea5= 0

Begin-SELECT DISTINCT 
A.EMPLID,
C.NAME,
A.PAYGROUP,
A.ACCT_CD,
G.GEX_BUS_AREA,
A.FULL_PART_TIME
A.EMPL_TYPE
a.effdt

	Let $act_emplid=&A.EMPLID
 	Let $act_name=&c.name
 	Let $act_paygroup=&a.paygroup
 	Let $act_busarea=&G.GEX_BUS_AREA
 	Let $fulltime=&A.FULL_PART_TIME
 	Let $actcd=&A.ACCT_CD
 	Let $empltype=&A.EMPL_TYPE

   if $empltype='S'
	
	if ($act_busarea='Corp Off')
 		Let #act_exe_busarea1 = #act_exe_busarea1+1
 	end-if
 	if ($act_busarea='GE Retail' and substr(&a.paygroup,1,2) <> 'PH' and &a.acct_cd <> '008')
 		Let #act_exe_busarea2 = #act_exe_busarea2+1
 	end-if
 	if ($act_busarea='GetGo')
 		Let #act_exe_busarea3 = #act_exe_busarea3+1
  	end-if
 	if ($act_busarea='Pharmacy' or substr(&a.paygroup,1,2) = 'PH' or &a.acct_cd = '008')
 		Let #act_exe_busarea4 = #act_exe_busarea4+1
 	end-if
 	if ($act_busarea='RSC')
 		Let #act_exe_busarea5 = #act_exe_busarea5+1
 	end-if
   end-if 
   	
   if $empltype='H'
	
	if ($act_busarea='Corp Off')
 		Let #act_nonexe_busarea1 = #act_nonexe_busarea1+1
 	end-if
 	if ($act_busarea='GE Retail' and substr(&a.paygroup,1,2) <> 'PH' and &a.acct_cd <> '008')
 		Let #act_nonexe_busarea2 = #act_nonexe_busarea2+1
 	end-if
 	if ($act_busarea='GetGo')
 		Let #act_nonexe_busarea3 = #act_nonexe_busarea3+1
  	end-if
 	if ($act_busarea='Pharmacy' or substr(&a.paygroup,1,2) = 'PH' or &a.acct_cd = '008')
 		Let #act_nonexe_busarea4 = #act_nonexe_busarea4+1
 	end-if
 	if ($act_busarea='RSC')
 		Let #act_nonexe_busarea5 = #act_nonexe_busarea5+1
 	end-if
 	
     end-if
     
     
FROM PS_JOB A, PS_JOBCODE_TBL B, PS_PERSONAL_DATA C, PS_EMPLOYMENT D, PS_DEPT_TBL E, PS_GEX_DEPT_TBL F, PS_GEX_EVP_TBL G 
  WHERE ( A.EFFDT =  
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE A.EMPLID = A_ED.EMPLID 
          AND A.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= $thru_date)        
    AND A.EFFSEQ =                                                     
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES                      
        WHERE A.EMPLID = A_ES.EMPLID                                   
          AND A.EMPL_RCD = A_ES.EMPL_RCD                               
          AND A.EFFDT = A_ES.EFFDT)                                    
     AND B.SETID = A.SETID_JOBCODE                                     
     AND B.JOBCODE = A.JOBCODE                                         
     AND B.EFFDT =                                                     
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED               
        WHERE B.SETID = B_ED.SETID          
          AND B.JOBCODE = B_ED.JOBCODE      
          AND B_ED.EFFDT <= $AsOfDate)        
     AND A.EMPLID = C.EMPLID                
     AND A.EMPLID = D.EMPLID                
     AND A.EMPL_RCD = D.EMPL_RCD            
     AND A.PAYGROUP = G.PAYGROUP            
     AND A.ACCT_CD = G.ACCT_CD              
     AND E.SETID = A.SETID_DEPT                          
     AND E.DEPTID = A.DEPTID                             
     AND E.EFFDT =                                       
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED    
        WHERE E.SETID = E_ED.SETID                       
          AND E.DEPTID = E_ED.DEPTID                     
          AND E_ED.EFFDT <= $AsOfDate)                     
     AND E.SETID = F.SETID                               
     AND E.DEPTID = F.DEPTID                             
     AND F.EFFDT =                                       
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F.SETID = F_ED.SETID                          
          AND F.DEPTID = F_ED.DEPTID                      
          AND F_ED.EFFDT <= $AsOfDate)
     AND A.DEPTID =  G.DEPTID (+)          
     AND ( A.EMPL_STATUS IN ('A','L','P','S') 
     AND A.COMPANY NOT BETWEEN '005' AND '999' 
     AND A.COMPANY NOT IN ('KAP','VEC')         
     AND A.JOBCODE <> '90000'      
     AND A.GEX_SEASONAL_EMP = 'N') )                          
ORDER BY C.NAME
END-SELECT
show 'active employee processing ended'
end-procedure

!**************************************************************************************************************************
!		Get-Terminate-Employees
!**************************************************************************************************************************
Begin-procedure Get-Terminate-Employees
show 'Terminate employee processing started'

	Let #ter_exe_busarea1= 0
	Let #ter_exe_busarea2= 0
	Let #ter_exe_busarea3= 0
	Let #ter_exe_busarea4= 0
	Let #ter_exe_busarea5= 0
	Let #ter_nonexe_busarea1= 0
	Let #ter_nonexe_busarea2= 0
	Let #ter_nonexe_busarea3= 0
	Let #ter_nonexe_busarea4= 0
	Let #ter_nonexe_busarea5= 0


begin-SELECT DISTINCT
AA.EMPLID,
AA.PAYGROUP,
GG.GEX_BUS_AREA,
AA.ACCT_CD,
AA.FULL_PART_TIME
AA.EMPL_TYPE
aa.effdt
	Let $emplid1=&aa.emplid
	Let $Paygroup=&AA.PAYGROUP
	Let $ter_busarea=&GG.GEX_BUS_AREA
	Let $actcd=&AA.ACCT_CD
	Let $fulltime=&AA.FULL_PART_TIME
	Let $empltype=&AA.EMPL_TYPE

   if $empltype='S'
	
	if ($ter_busarea='Corp Off')
 		Let #ter_exe_busarea1 = #ter_exe_busarea1+1
 	end-if
 	if ($ter_busarea='GE Retail' and substr(&aa.paygroup,1,2) <> 'PH' and &aa.acct_cd <>'008')	!VENDKXY done changes 
 		Let #ter_exe_busarea2 = #ter_exe_busarea2+1
 	end-if
 	if ($ter_busarea='GetGo')
 		Let #ter_exe_busarea3 = #ter_exe_busarea3+1
  	end-if
 	if ($ter_busarea='Pharmacy' or substr(&aa.paygroup,1,2) = 'PH' or &aa.acct_cd = '008')		!VENDKXY done changes 
 		Let #ter_exe_busarea4 = #ter_exe_busarea4+1
 	end-if
 	if ($ter_busarea='RSC')
 		Let #ter_exe_busarea5 = #ter_exe_busarea5+1
 	end-if
   end-if	
   
   if $empltype='H' 
	
	if ($ter_busarea='Corp Off')
 		Let #ter_nonexe_busarea1 = #ter_nonexe_busarea1+1
 	end-if
 	if ($ter_busarea='GE Retail' and substr(&aa.paygroup,1,2) <> 'PH' and &aa.acct_cd <> '008')	 !VENDKXY done changes 
 		Let #ter_nonexe_busarea2 = #ter_nonexe_busarea2+1
 	end-if
 	if ($ter_busarea='GetGo')
 		Let #ter_nonexe_busarea3 = #ter_nonexe_busarea3+1
  	end-if
 	if ($ter_busarea='Pharmacy' or substr(&aa.paygroup,1,2) = 'PH' or &aa.acct_cd = '008')		!VENDKXY done changes 
 		Let #ter_nonexe_busarea4 = #ter_nonexe_busarea4+1
 	end-if
 	if ($ter_busarea='RSC')
 		Let #ter_nonexe_busarea5 = #ter_nonexe_busarea5+1
 	end-if
 	
     end-if
   

FROM PS_JOB AA, PS_JOBCODE_TBL BB, PS_PERSONAL_DATA CC, PS_EMPLOYMENT DD, PS_DEPT_TBL EE, PS_GEX_DEPT_TBL FF, PS_GEX_EVP_TBL GG, PS_ACTN_REASON_TBL JJ, PS_JOB II
  WHERE ( ( AA.EFFDT >= $from_date
     AND AA.EFFDT <= $thru_date)
     AND AA.ACTION IN ('RET','RWP','TER','TWB','TWP')
     AND BB.SETID = AA.SETID_JOBCODE
     AND BB.JOBCODE = AA.JOBCODE
     AND BB.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE BB.SETID = B_ED.SETID
          AND BB.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= $AsOfDate)
     AND AA.EMPLID = CC.EMPLID
     AND AA.EMPLID = DD.EMPLID
     AND AA.EMPL_RCD = DD.EMPL_RCD
     AND AA.PAYGROUP = GG.PAYGROUP
     AND AA.ACCT_CD = GG.ACCT_CD
     AND EE.SETID = AA.SETID_DEPT
     AND EE.DEPTID = AA.DEPTID
     AND EE.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE EE.SETID = E_ED.SETID
          AND EE.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= $AsOfDate)
     AND EE.SETID = FF.SETID
     AND EE.DEPTID = FF.DEPTID
     AND FF.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE FF.SETID = F_ED.SETID
          AND FF.DEPTID = F_ED.DEPTID
          AND F_ED.EFFDT <= $AsOfDate)
     AND AA.DEPTID =  GG.DEPTID (+)
     AND DD.TERMINATION_DT BETWEEN $from_date AND $thru_date
     AND ( AA.COMPANY NOT BETWEEN '005' AND '999'
     AND AA.COMPANY NOT IN ('KAP','VEC')
     AND AA.GEX_SEASONAL_EMP = 'N'
     AND AA.JOBCODE <> '90000')
     AND JJ.ACTION = AA.ACTION
     AND JJ.ACTION_REASON = AA.ACTION_REASON
     AND JJ.EFFDT =
        (SELECT MAX(J_ED.EFFDT) FROM PS_ACTN_REASON_TBL J_ED
        WHERE JJ.ACTION = J_ED.ACTION
          AND JJ.ACTION_REASON = J_ED.ACTION_REASON
          AND J_ED.EFFDT <= $AsOfDate)
     AND II.EFFDT =
        (SELECT MAX(I_ED.EFFDT) FROM PS_JOB I_ED
        WHERE II.EMPLID = I_ED.EMPLID
          AND II.EMPL_RCD = I_ED.EMPL_RCD
          AND I_ED.EFFDT < AA.EFFDT)
    AND II.EFFSEQ =
        (SELECT MAX(I_ES.EFFSEQ) FROM PS_JOB I_ES
        WHERE II.EMPLID = I_ES.EMPLID
          AND II.EMPL_RCD = I_ES.EMPL_RCD
          AND II.EFFDT = I_ES.EFFDT)
     AND AA.EMPLID = II.EMPLID
     AND AA.EMPL_RCD = II.EMPL_RCD
     AND II.EMPL_STATUS IN ('A','L','P','S') )
     
END-SELECT     
show 'Terminate employee processing ended'
end-procedure



!**************************************************************************************************************************
!		calculation for exemt and non exemt areas
!**************************************************************************************************************************
begin-procedure calcexeandnonexe1

	do dateminus11
	Let $title= substr($thru_date,4,8)
	
	write 4 from $next
	write 4 from $next
	

	
	
	do actives
	do Get-Terminate-Employees
	do calcexeandnonexe
	do calcexeandnonexeper

end-procedure


!**************************************************************************************************************************
!		calculation for exemt and non exemt areas
!**************************************************************************************************************************
begin-procedure calcexeandnonexe2

	do dateminus1
	Let $title= substr($thru_date,4,8)
	write 4 from $next
   	write 4 from $next
   	
	
	do actives
	do Get-Terminate-Employees
	do calcexeandnonexe
	do calcexeandnonexeper

end-procedure

!**************************************************************************************************************************
!		calculation for exemt and non exemt areas
!**************************************************************************************************************************
begin-procedure calcexeandnonexe3
	do dateminus1		
	!Let $from_date = dateadd($from_date,'MONTH',-1)
	!Let $thru_date = dateadd($thru_date,'MONTH',-1)
	Let $title= substr($thru_date,4,8)
	
	write 4 from $next
   	write 4 from $next
	
	
	
	
	
	do actives	
	do Get-Terminate-Employees
	do calcexeandnonexe
	do calcexeandnonexeper

end-procedure

!**************************************************************************************************************************
!		calculation for dates for subraticting month for first month
!**************************************************************************************************************************
begin-procedure dateminus11

Let $thru_date1=$thru_date

begin-SELECT

add_months($thru_date1,-1) &from_dt1

	Let $from_date = dateadd(&from_dt1,'DAY',1)
	!Let $from_date = &from_dt1
	
	
	show '$from_date:' $from_date
	
from dual
end-select
end-procedure

!**************************************************************************************************************************
!		calculation for dates for subraticting month
!**************************************************************************************************************************
begin-procedure dateminus1

Let $thru_date1=$thru_date

begin-SELECT

add_months($thru_date1,-2) &from_dt
add_months($thru_date,-1) &thru_dt


	Let $from_date = dateadd(&from_dt,'DAY',1)
	!Let $thru_date = dateadd(&thru_dt,'DAY',1)
	!Let $from_date = &from_dt
	Let $thru_date = &thru_dt
	
	show '$from_date:' $from_date
	show '$thru_date:' $thru_date
from dual
end-select
end-procedure

!**************************************************************************************************************************
!		calculation for exemt and non exemt areas
!**************************************************************************************************************************
begin-procedure calcexeandnonexe
	
	Let #act_exe_grand_area = 0
	Let #ter_exe_grand_area = 0
	Let #act_nonexe_grand_area = 0
	Let #ter_nonexe_grand_area = 0
	
	Let $Report_title = 'Actives are As Of : ' || $thru_date ||' Terms are from :' || $from_date || ' To: ' || $thru_date
		
	write 4 from $Report_title
	write 4 from $next
	STRING '' 'Active' '' 'Terms' '' by $delim into $busarea
	write 4 from $busarea
	string '' 'Ex' 'NonEx' 'Ex' 'NonEx' by $delim into $busarea
	write 4 from $busarea
		
	Let #act_exe_grand_area = #act_exe_busarea1+#act_exe_busarea2+#act_exe_busarea3+#act_exe_busarea4+#act_exe_busarea5
	Let #ter_exe_grand_area = #ter_exe_busarea1+#ter_exe_busarea2+#ter_exe_busarea3+#ter_exe_busarea4+#ter_exe_busarea5
	
      	
      	move #act_exe_busarea1 to $act_exe_busarea1 999,999
      	move #act_exe_busarea2 to $act_exe_busarea2 999,999
      	move #act_exe_busarea3 to $act_exe_busarea3 999,999
      	move #act_exe_busarea4 to $act_exe_busarea4 999,999
      	move #act_exe_busarea5 to $act_exe_busarea5 999,999
      	move #ter_exe_busarea1 to $ter_exe_busarea1 999,999
      	move #ter_exe_busarea2 to $ter_exe_busarea2 999,999
      	move #ter_exe_busarea3 to $ter_exe_busarea3 999,999
      	move #ter_exe_busarea4 to $ter_exe_busarea4 999,999
      	move #ter_exe_busarea5 to $ter_exe_busarea5 999,999
      	move #act_exe_grand_area to $act_exe_grand_area 999,999
      	move #ter_exe_grand_area to $ter_exe_grand_area 999,999
      	
      	Let #act_nonexe_grand_area = #act_nonexe_busarea1+#act_nonexe_busarea2+#act_nonexe_busarea3+#act_nonexe_busarea4+#act_nonexe_busarea5
	Let #ter_nonexe_grand_area = #ter_nonexe_busarea1+#ter_nonexe_busarea2+#ter_nonexe_busarea3+#ter_nonexe_busarea4+#ter_nonexe_busarea5
	
      	move #act_nonexe_busarea1 to $act_nonexe_busarea1 999,999
      	move #act_nonexe_busarea2 to $act_nonexe_busarea2 999,999
      	move #act_nonexe_busarea3 to $act_nonexe_busarea3 999,999
      	move #act_nonexe_busarea4 to $act_nonexe_busarea4 999,999
      	move #act_nonexe_busarea5 to $act_nonexe_busarea5 999,999
      	move #ter_nonexe_busarea1 to $ter_nonexe_busarea1 999,999
      	move #ter_nonexe_busarea2 to $ter_nonexe_busarea2 999,999
      	move #ter_nonexe_busarea3 to $ter_nonexe_busarea3 999,999
      	move #ter_nonexe_busarea4 to $ter_nonexe_busarea4 999,999
      	move #ter_nonexe_busarea5 to $ter_nonexe_busarea5 999,999
      	move #act_nonexe_grand_area to $act_nonexe_grand_area 999,999
      	move #ter_nonexe_grand_area to $ter_nonexe_grand_area 999,999
      	
      	
	string 'Corp Off' $act_exe_busarea1   $act_nonexe_busarea1 $ter_exe_busarea1 $ter_nonexe_busarea1 by $delim into $busarea
	write 4 from $busarea
	string 'GE Retail' $act_exe_busarea2 $act_nonexe_busarea2 $ter_exe_busarea2 $ter_nonexe_busarea2 by $delim into $busarea
	write 4 from $busarea
	string 'GetGo' $act_exe_busarea3 $act_nonexe_busarea3 $ter_exe_busarea3 $ter_nonexe_busarea3 by $delim into $busarea
	write 4 from $busarea
	string 'Pharmacy' $act_exe_busarea4 $act_nonexe_busarea4 $ter_exe_busarea4 $ter_nonexe_busarea4 by $delim into $busarea
	write 4 from $busarea
	string 'RSC' $act_exe_busarea5 $act_nonexe_busarea5 $ter_exe_busarea5 $ter_nonexe_busarea5 by $delim into $busarea
	write 4 from $busarea
	string 'Grand Total' $act_exe_grand_area $act_nonexe_grand_area $ter_exe_grand_area $ter_nonexe_grand_area by $delim into $busarea
	write 4 from $busarea
	
	
	
end-procedure


!**************************************************************************************************************************
!		calculation for exemt and non exemt areas with percentages
!**************************************************************************************************************************
begin-procedure calcexeandnonexeper

		
	
	Let #_busarea1_per = round(((#ter_exe_busarea1/#act_exe_busarea1)*100),1)
	Let #_busarea2_per = round(((#ter_exe_busarea2/#act_exe_busarea2)*100),1)
	Let #_busarea3_per = round(((#ter_exe_busarea3/#act_exe_busarea3)*100),1)
	Let #_busarea4_per = round(((#ter_exe_busarea4/#act_exe_busarea4)*100),1)
	Let #_busarea5_per = round(((#ter_exe_busarea5/#act_exe_busarea5)*100),1)
	
	move #_busarea1_per to $_busarea1_per 9999.9
      	Let $_busarea1_per = $_busarea1_per||'%'
      	move #_busarea2_per to $_busarea2_per 9999.9
      	Let $_busarea2_per = $_busarea2_per||'%'
      	move #_busarea3_per to $_busarea3_per 9999.9
      	Let $_busarea3_per = $_busarea3_per||'%'
      	move #_busarea4_per to $_busarea4_per 9999.9
      	Let $_busarea4_per = $_busarea4_per||'%'
      	move #_busarea5_per to $_busarea5_per 9999.9
      	Let $_busarea5_per = $_busarea5_per||'%'
      	
	
	
	
	Let #_busarea1_per_nonexe = round(((#ter_nonexe_busarea1/#act_nonexe_busarea1)*100),1)
	Let #_busarea2_per_nonexe = round(((#ter_nonexe_busarea2/#act_nonexe_busarea2)*100),1)
	Let #_busarea3_per_nonexe = round(((#ter_nonexe_busarea3/#act_nonexe_busarea3)*100),1)
	Let #_busarea4_per_nonexe = round(((#ter_nonexe_busarea4/#act_nonexe_busarea4)*100),1)
	Let #_busarea5_per_nonexe = round(((#ter_nonexe_busarea5/#act_nonexe_busarea5)*100),1)
	Let #grand_per_nonexe = round(((#ter_nonexe_grand_area/#act_nonexe_grand_area)*100),1)
	move #_busarea1_per_nonexe to $_busarea1_per_nonexe 9999.9
      	Let $_busarea1_per_nonexe = $_busarea1_per_nonexe||'%'
      	move #_busarea2_per_nonexe to $_busarea2_per_nonexe 9999.9
      	Let $_busarea2_per_nonexe = $_busarea2_per_nonexe||'%'
      	move #_busarea3_per_nonexe to $_busarea3_per_nonexe 9999.9
      	Let $_busarea3_per_nonexe = $_busarea3_per_nonexe||'%'
      	move #_busarea4_per_nonexe to $_busarea4_per_nonexe 9999.9
      	Let $_busarea4_per_nonexe = $_busarea4_per_nonexe||'%'
      	move #_busarea5_per_nonexe to $_busarea5_per_nonexe 9999.9
      	Let $_busarea5_per_nonexe = $_busarea5_per_nonexe||'%'
      	move #grand_per_nonexe to $grand_per_nonexe 9999
      	Let $grand_per_nonexe = $grand_per_nonexe||'%'
      	
      	Let #grand_act = #act_exe_grand_area+#act_nonexe_grand_area
      	Let #grand_ter = #ter_exe_grand_area+#ter_nonexe_grand_area
      	Let #grand_per = round(((#grand_ter/#grand_act)*100),1)
      	move #grand_per to $grand_per 9999.9
      	Let $grand_per = $grand_per||'%'

	string $title $_busarea1_per $_busarea1_per_nonexe $_busarea2_per $_busarea2_per_nonexe $_busarea3_per $_busarea3_per_nonexe $_busarea4_per $_busarea4_per_nonexe $_busarea5_per $_busarea5_per_nonexe $grand_per by $delim into $busarea
	write 5 from $busarea
	
		
end-procedure


!***********************************************************************************
!procedure Open-File
!***********************************************************************************
begin-procedure Open-File
	
	
	MOVE $CURRENT-DATE TO $CURRDT 'MMDDYY'
	ENCODE '<012>' INTO $NEXT
	encode '<009>' into $delim
        ! this is prod --> Let $path='\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\Turnover - All Bus Areas\'  
	Let $path='\\corp.gianteagle.com\common\HR\Metrics\EVP\Secure\Turnover - All Bus Areas\'
	Let $File_Name3 = 'Ex_NonEx TO counts_'
 	Let $file3 = $path || Lower($File_Name3) || $CURRDT || '.xls'
   	show '$filename3:' $file_name3
   	show '$file3:' $file3
	
	Open $file3
       As 4 
       For-Writing
       Record=1000:Vary
       
       string 'Annual & Monthly Employee Counts by Exempt/Non-Exempt' by $delim into $busarea
	write 4 from $busarea
	write 4 from $next
       
       Let $File_Name5 = 'Ex_NonEx TO calcs_'
   Let $file5 = $path || Lower($File_Name5) || $CURRDT || '.xls'
   show '$filename5:' $file_name5
   show '$file5:' $file5
   
    Open $file5
       As 5
       For-Writing
       Record=1000:Vary
       Let $busarea='Annual turnover for exempt and non-exempt employees'
       write 5 from $busarea
	write 5 from $next
       Let $Report_title = 'Actives are As Of : ' || $thru_date ||' Terms are from :' || $from_date || ' To: ' || $thru_date
       write 5 from $Report_title
	write 5 from $next
	
       string '' 'Corp Off' ''  'GE Retail' '' 'GetGo' '' 'Pharmacy' '' 'RSC' '' 'Total'  by $delim into $busarea
	write 5 from $busarea
	string '' 'Ex' 'NonEx' 'Ex' 'NonEx' 'Ex' 'NonEx' 'Ex' 'NonEx' 'Ex' 'NonEx' 'TO' by $delim into $busarea
	write 5 from $busarea
	
       
end-procedure
#include 'curdttim.sqc'  !get-current-datetime procedure
#include 'datetime.sqc'  !routines for date and time formatting
#include 'number.sqc'    !routines to format numbers
#include 'stdapi.sqc'    !routines to update run status
#include 'useprntr.sqc'
#include 'gexrnctl.sqc'  !for Run-Cntrl-Parameters
#include 'askaod.sqc'
