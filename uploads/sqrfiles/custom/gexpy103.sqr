!***********************************************************************
! GEXPY103:  This program resets occupation tax for year end 
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                                                                      *
!  $Date:: 09/27/99             $                                      *
!  $Revision:: 01               $                                      *
!  $Workfile:: GEXPY103.SQR     $                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  GEXPY103  KMW    09/27/1999         INITIAL CREATION                *
!                                                                      *
!  HR-10313  GBD    09/09/2002         v8.3 Upgrade                    *
!***********************************************************************
#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 

!*********************************************************************
!                                    
!*********************************************************************
begin-report

  do Init-DateTime
  do Init-Number
  do stdapi-init
  
  move 'GEXPY103' to $ReportID
  let $ReportTitle = 'Occupation Tax Audit ' 
!  move 'Missed Deductions from pay ending ' || &pay_end_dt to $ReportTitle
  display $ReportTitle
  do Get-Current-DateTime
  Let #PAGE-COUNT = 1

 If $prcs_process_instance = ''
    Do Ask-As-Of-Date
 Else 
  Do GEXXX922-Select-Parameters
  Let $X000_Where_Select_AsOfDate = $GEX_RC_PAY.AsOfDate
  Let $AsOfDate=$GEX_RC_PAY.AsOfDate
  If Rtrim ($GEX_RC_PAY.AsOfDate, ' ') = ''
    Let $X000_Where_Select_AsOfDate = $AsOfToday
  End-If
 End-If
 show 'as of date ' $ASOFDATE

 move $X000_where_select_AsOfDate to  $X000_Report_Heading_AsOfDate
! do P130-Print-Cover-Page
  Do Main-Select
!  show 'wk count ' #wk-count
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term
  do reset
end-report

begin-heading 7 
 #Include 'stdhdg01.sqc'

!  Let $X000_temp_out = 'Report as of ' || $X000_Report_Heading_AsOfDate
!  Print $X000_temp_out         (3,)  Center


  
 position (+2)

  print 'Dept ID' (,1) bold
  print 'Employee ID' (,10) bold
  print 'Name' (,24) bold
  print 'Missing Locality' (,51) bold
  print 'Tax Location on Job' (,70) bold

  print '-' (+1,1,132) fill
 
end-heading
 

Begin-Procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print 'As Of Date :'                                            (+2,5)
  Print $X000_Report_Heading_AsOfDate                             (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                         (+5,2)
  Print $X000_Order_By                                            (+2,5)

  Let #PAGE-COUNT = 0
  New-Page
End-Procedure
!*********************************************************************
!If this Program is being executed through process scheduler, 
!the run control para`meters and calls the main processing procedure.
!Otherwise, interrogates the user for the run control parameters and 
!validates them. If the run control parameters are invalid, stops the
!execution.
!*********************************************************************
Begin-procedure main-select
begin-select
tl2.TAX_LOCATION_CD &tl2.tax_location_cd
tl1.descr           &tl1.descr
tl2.STATE               &tl2.state          
tl2.LOCALITY            &tl2.locality
tl2.LOCALITY_LINK       &tl2.locality_link
   let $occ-flag='N'
   let #location-line-cnt=#location-line-cnt + 1
   let $locality=&tl2.locality
   do check-tax-table
   if $occ-flag='Y'
       !show 'occ tax found ' &tl2.tax_location_cd	
       do find-employees
   end-if
from ps_tax_location2 tl2,
     ps_tax_location1 tl1
 where 
  tl2.state='PA'
and tl1.tax_location_cd=tl2.tax_location_cd
order by tl2.tax_location_cd

end-select
end-procedure

Begin-procedure check-tax-table
 let $occ-flag='N'
begin-select
'X' 
   let $occ-flag='Y'
   let $occtax=$locality
   let $state=&tl2.state
from ps_local_tax_tbl ltt
where state=&tl2.state
and   locality=$locality
and tax_class='P'
end-select
end-procedure


begin-procedure find-employees
Begin-Select
j.emplid &j.emplid
j.empl_rcd &j.empl_rcd
j.company &j.company
j.deptid &j.deptid
pd.name &pd.name
    let #wk-count=#wk-count + 1
!    if #wk-count > 300
!	 do commit-transaction
!	 stop
!    end-if
    do check-employee-tax-distrib
From ps_job j,
     ps_personal_data pd
 where
j.effdt=(select max(effdt) from ps_job
	    where j.emplid=emplid
	    and   j.empl_rcd=empl_rcd
	    and effdt <= sysdate)
and j.effseq=(select max(effseq) from ps_job
	     where j.emplid=emplid 
	     and j.empl_rcd=empl_rcd
	     and effdt = j.effdt)
and j.empl_status='A'
and j.tax_location_cd=&tl2.tax_location_cd
and j.emplid=pd.emplid
order by j.deptid
end-select
end-procedure



begin-procedure check-employee-tax-distrib
 let $tax-distrib-hit = 'N'
Begin-Select
effdt &etd.effdt
STATE &etd.state            
LOCALITY &etd.locality       
   let $tax-distrib-hit='Y'
from ps_tax_distrib etd
where emplid=&j.emplid
and   state=$state
and locality=$occtax		
and etd.effdt=(select max(effdt) from ps_tax_distrib
where etd.emplid=emplid and etd.empl_rcd=empl_rcd)
end-select
if $tax-distrib-hit='N'
  do check-locality-link
end-if
if $tax-distrib-hit='N'
  show 'employee missing occ tax on distribution ' &j.emplid
  do repull-tax-location
  do check-employee-tax-data
  if $found-emp-tax='N'
       show 'employee needs local tax ' &j.emplid ' ' $locality
  end-if
end-if
end-procedure

!GBD 09/09/2002 Begin
begin-procedure check-locality-link
begin-select
ETD2.EFFDT &etd2.effdt
ETD2.STATE &etd2.state            
LTD2.LOCALITY_LINK &etd2.locality_link
   let $tax-distrib-hit='Y'
from ps_tax_distrib etd2, ps_local_tax_data ltd2
where etd2.emplid = ltd2.emplid
and   etd2.emplid=&j.emplid
and   etd2.effdt = ltd2.effdt
and   etd2.state=$state
and   etd2.locality = ltd2.locality
and   ltd2.locality_link=$occtax
and   etd2.effdt=(select max(effdt) 
      from ps_tax_distrib
      where etd2.emplid=emplid and etd2.empl_rcd=empl_rcd)
and   ltd2.effdt=(select max(effdt)
      from ps_local_tax_data
      where ltd2.emplid = emplid and ltd2.company = company
      and   ltd2.state = state and ltd2.locality = locality)

end-select
end-procedure
!GBD 09/09/2002 End

Begin-procedure check-employee-tax-data
let $found-emp-tax='N'
begin-select
Locality &ltd.locality
locality_link &ltd.locality_link
resident      &ltd.resident
   if &ltd.locality=$locality
       Let $found-emp-tax='Y' 
   end-if
from ps_local_tax_data ltd
where
ltd.emplid=&j.emplid and
ltd.company=&j.company and
ltd.effdt=(select max(effdt) from ps_local_tax_data
	   where emplid=ltd.emplid and company=ltd.company
	    and effdt <= sysdate)

and ltd.state='PA'
End-select
! if $found-emp-tax='N'
!watch here, you need to pull the other locals down
!    show 'need to insert tax for ' &j.emplid ' ' $locality ' '                          ! &tl2.tax_location_cd
!  do print-report
! end-if
end-procedure

begin-procedure repull-tax-location
begin-select loops=1
STATE &tl3.state            
LOCALITY &tl3.locality 
LOCALITY_LINK  &tl3.locality_link
   show 'inserting record for ' &j.emplid
   do insert-tax-records
from ps_tax_location2 tl3
where tl3.tax_location_cd=&tl2.tax_location_cd
end-select
end-procedure

begin-procedure insert-tax-records

begin-sql
insert into ps_tax_dist_effdt
(select emplid, 
empl_rcd,
$AsOfDate,
country,
insert_pre_filled,
unique_dist + 1
from ps_tax_dist_effdt a
where emplid=&j.emplid
and   empl_rcd=&j.empl_rcd
and effdt =(select max(effdt) from ps_tax_dist_effdt
where a.emplid=emplid and a.empl_rcd=empl_rcd))
end-sql

Begin-sql
Insert into ps_tax_distrib
Values
(&j.EMPLID,
&j.EMPL_RCD, 
$AsOfDate,
&tl3.STATE,            
&tl3.LOCALITY,         
!&tl3.LOCALITY_LINK,             GBD 09/09/2002 - v8.3 field removed
100)
end-sql

end-procedure

!begin-procedure print-report
!  print &j.deptid (,3)
!  print &j.emplid (,10) 
!  print &pd.name (,24)
!  print $locality (,54)
!  print &tl2.tax_location_cd (,72)
!  print &tl1.descr      (,80)
! position (+1)

!end-procedure


#include 'askaod.sqc'    !Ask for AsOfDate
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
!#Include 'gexxx951.sqc'
#include 'reset.sqc'
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'tranctrl.sqc'

