!***********************************************************************
! GEXPY076:  Paysheet Entry Errors                                     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY076:             Paysheet Entry Errors                          *
!                                                                      *
! Narrative:            This SQR reports paysheets that are not        *
!                         entered properly.                            *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           job                                            *
!                       pay_calendar                                   *
!                       pay_earnings                                   *
!                       pay_oth_earns                                  *
!                                                                      *
! Written by:           Jim Hutchison                                  *
!                                                                      *
! Normally Run:         Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         None                                         *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! JDH       03/26/99    Initial Creation                               *
!           04/05/99    Changed sort order to include deptid.          *
!                       Added logic to exclude deptid C036 from std    *
!                         hrs validation.                              *
!           04/20/99    Removed deptid from break logic.               *
! CWB       05/19/99    Added column to designate 'H' - hourly,        *
!                         'S' - salaried.                              *  
! CWB       06/20/2000  Added company 'KAP' and paygroup 'KAP'.        *
! MRP       01/08/2001  Made the following modifications for COD       *
!                       Project:                                       *
!                         Added company 'RFI' and paygroup 'OF4';      *
!                         Added Earn Codes: 519, 522, & 523            *
!                                                                      *
! KMW       02/23/2006  Added Visura.                                  *
!                       Use Earns_End_DT in main criteria to remove    *
!                       adjustments from rpt.                          *
!                       Reduce sheet hours by negative earnings.       *
!                       Eliminate small differences in rpt.            *
!GEX-AXG     01/30/2008 Upgrade 9.0					
!GEX-TLL     07/08/2008 ITG #51358 (Added Erncd 173)		       *  													 *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Portrait)


#define #column1     1
#define #column2    36
#define #column3    50
#define #column4    61
#define #column5    74
#define #column6    88
#define #column7   103
#define #column8   114
#define #column9   129
#define #column10  139
#define #column11  149
!****************************
! CWB 05/19/99  Begin

#define #column12  165

! CWB 05/19/99  End
!****************************

Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P300-Finalization
End-Report


Begin-Heading 8
#debug9 Show 'Begin-Heading'
  #Include 'stdhdgpi.sqc'
  #Include 'stdhdg06.sqc'

  Print ' STD HRS'                                 (+2,{#column4})
  Print '<---------- PAY_EARNINGS ---------->'     (+0,{#column6})
  Print '<------ PAY_OTH_EARNS ------->'           (+0,{#column9})
!*******************************************************************
! CWB 05/19/99  Begin
  Print 'EMPL'                                     (+0,{#column12})  
! CWB 05/19/99  End
!*******************************************************************

  Print 'NAME'                 (+1,{#column1})
  Print 'EMPLID'               (+0,{#column2})
  Print 'DEPTID'               (+0,{#column3})
  Print 'FROM JOB'             (+0,{#column4})
  Print 'TOTAL HRS'            (+0,{#column5})
  Print 'REG HRS IN'           (+0,{#column6})
  Print 'OT HRS'               (+0,{#column7})
  Print 'REG SALARY'           (+0,{#column8})
  Print 'ERNCD'                (+0,{#column9})
  Print ' HOURS'               (+0,{#column10})
  Print '    AMOUNT'           (+0,{#column11})
!***********************************************************
! CWB 05/19/99  Begin
  Print 'TYPE'                 (+0,{#column12}) 
! CWB 05/19/99  End
!***********************************************************
  Print '-'                    (+1,{#column1},30)   Fill
  Print '-'                    (+0,{#column2},9)    Fill
  Print '-'                    (+0,{#column3},6)    Fill
  Print '-'                    (+0,{#column4},8)    Fill
  Print '-'                    (+0,{#column5},9)    Fill
  Print '-'                    (+0,{#column6},10)   Fill
  Print '-'                    (+0,{#column7},6)    Fill
  Print '-'                    (+0,{#column8},10)   Fill
  Print '-'                    (+0,{#column9},5)    Fill
  Print '-'                    (+0,{#column10},6)   Fill
  Print '-'                    (+0,{#column11},10)  Fill
!***********************************************************
! CWB 05/19/99  Begin
  Print '-'                    (+0,{#column12},4)   Fill
! CWB 05/19/99  End
!***********************************************************

End-Heading


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXPY076'
  Let $ReportTitle   =   'PAYSHEET ENTRY ERRORS'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  Let $X000_Order_By = 'Company, Paygroup, Name'

  Create-Array Name=Earnings-Array Size=50
    Field=Erncd:Char:3
    Field=Hours:Number
    Field=Amount:Number

  Clear-Array Name=Earnings-Array

  Let #lines-remaining = 48

  do Payroll-Report-Initialization
End-Procedure


Begin-Procedure Report
#debug9 Show 'Report'
   #debug9 show '$SlctCalendar ' $SlctCalendar
   #debug9 show $SlctOffCycleA ' ' $SlctOffCycleB
   #debug9 show #SlctPageFrom ' '  #SlctPageThru
   Show '$SlctCalendar : '$SlctCalendar ' #SlctPageFrom And #SlctPageThru' #SlctPageFrom '  ' #SlctPageThru

Begin-Select
pe.company     ()  On-Break  Level=1  Print=Never
pe.paygroup    ()  On-Break  Level=2  Print=Never  After=P270-New-Page
pd.name        ()  On-Break  Level=3  Print=Never
pe.emplid      ()  On-Break  Level=4  Print=Never
pe.empl_rcd   ()  On-Break  Level=5  Print=Never  After=P280-Employee-Break
pe.pay_end_dt
pe.off_cycle
pe.page_num
pe.line_num
pe.addl_nbr
pe.deptid
pe.reg_pay_hrs
pe.ot_hrs
pe.reg_pay

  Let $company    = &pe.company
  Let $paygroup   = &pe.paygroup
  Let $name       = &pd.name
  Let $emplid     = &pe.emplid
  Let #empl_rcd   = &pe.empl_rcd
    
  If &pe.addl_nbr = 0
    Let $deptid   = &pe.deptid
  End-If

  Let $pay_end_dt = &pe.pay_end_dt
  Let $PayEndDate = &pe.pay_end_dt

  Add &pe.reg_pay_hrs To #pe_reg_hours
  Add &pe.ot_hrs      To #pe_ot_hours
  Add &pe.reg_pay     To #pe_reg_salary
  !Show '#pe_reg_salary  '#pe_reg_salary
  Add &pe.reg_pay_hrs To #sheet-hours
  Add &pe.ot_hrs      To #sheet-hours

  If ($company = 'GEI' And $paygroup = 'EXE') Or
     ($company = 'RFI' And $paygroup = 'OF4') Or	!COD mod, MRP, 01/08/2001
     ($company = 'GEI' And $paygroup = 'OFF') Or
     ($company = 'KAP' And $paygroup = 'KAP') Or	!CWB 06/20/2000
     ($company = 'VEC' And $paygroup = 'V02')           !KMW add Visura 02/23/2006
    Do P210-Pay-Oth-Earns
  Else
    If &pe.reg_pay_hrs <> 0 Or
       &pe.ot_hrs      <> 0 Or
       &pe.reg_pay     <> 0
      Let $OK-To-Print = 'Y'
      Let $msg1 = 'Non corp EE with time in pay earnings'
      Do P210-Pay-Oth-Earns
    End-If
  End-If
  !Show 'Emplid : '$emplid '  name : '  $name  ' pe.reg_pay_hrs '&pe.reg_pay_hrs '  pe.reg_pay_hrs : '&pe.reg_pay_hrs ' &pe.reg_pay : '&pe.reg_pay

From   ps_pay_calendar  a,
       ps_personal_data pd,
       ps_pay_earnings  pe

Where [$SlctCalendar]

And    pe.off_cycle In ($SlctOffCycleA, $SlctOffCycleB)
And    pe.page_num Between #SlctPageFrom And #SlctPageThru

And    a.company     = pe.company
And    a.paygroup    = pe.paygroup
!GEX-AXG Modified for Upgrade 9.0 - Begin
!And    a.pay_end_dt  = pe.earns_end_dt ! changed from pe.pay_end_dt to earns_end_dt to
                                       ! remove adjustments from report  KMW 2/23/2006
And    a.pay_end_dt  = pe.pay_end_dt		!Changed from pe.earns_end_dt to pe.pay_end_dt as it was capturing old paycheck values also.
!GEX-AXG Modified for Upgrade 9.0 - End
And    pd.emplid     = pe.emplid
!and rownum < 100	!Manish put for testing
Order  By pe.company, pe.paygroup, pd.name, pe.emplid, pe.empl_rcd
End-Select
End-Procedure


Begin-Procedure P210-Pay-Oth-Earns
#debug9 Show 'P210-Pay-Oth-Earns'
Show 'Entering procedure pay-Oth-Earns for emplid : '$emplid 
Begin-Select
poe.erncd
poe.oth_hrs
poe.oth_earns

  Let $found = 'N'
  Let #k = 0

  If &poe.erncd = '005' Or
     &poe.erncd = '006' Or
     &poe.erncd = '168' Or
     &poe.erncd = 'OTP' Or
     &poe.erncd = '173'     !GEX-TLL  07/08/2008  ITG #51358 !Vendaxg Commented Testing
  Else
      If &poe.erncd = '513' Or

      !COD mod, MRP, 01/08/2001	Begin
         &poe.erncd = '515' Or
         &poe.erncd = '519' Or
         &poe.erncd = '522' Or
         &poe.erncd = '523'
      !COD mod, MRP, 01/08/2001	End
        Add &poe.oth_hrs To #vacation-hours
      End-If
   Add &poe.oth_hrs To #other-hours
   Add &poe.oth_hrs To #sheet-hours
  End-If
!Reduce sheet hours by amount of negative earnings - HOL  KMW 2/23/2006
  If &poe.erncd = 'HOL'
     subtract &poe.oth_hrs from #sheet-hours
     subtract &poe.oth_hrs from #other-hours
  end-if
!Reduce sheet hours by amount of negative earnings - HOL  KMW 2/23/2006 END
  
   
  While $found = 'N'
    Add 1 to #k
    Get $erncd #hours #amount From Earnings-Array(#k)
    If &poe.erncd = $erncd
      Show 'Same earn cde -- '&poe.erncd ' ----- ' &poe.oth_hrs ' ----- '&poe.oth_earns
      Array-Add &poe.oth_hrs &poe.oth_earns To Earnings-Array(#k) Hours Amount
      Let $found = 'Y'
    Else
      If Rtrim($erncd, ' ') = ''
      Show 'Different Earn cd '&poe.erncd ' --- ' &poe.oth_hrs ' ----- '&poe.oth_earns
        Put &poe.erncd &poe.oth_hrs &poe.oth_earns Into Earnings-Array(#k)
        Add 1 to #l
        Let $found = 'Y'
      End-If
    End-If
  End-While
  Show &pe.company ' -- ' &pe.paygroup ' -- ' &pe.pay_end_dt ' -- ' &pe.off_cycle ' -- ' &pe.page_num ' -- ' &pe.line_num ' -- ' &pe.addl_nbr
From   ps_pay_oth_earns poe

Where  poe.company    = &pe.company
And    poe.paygroup   = &pe.paygroup
And    poe.pay_end_dt = &pe.pay_end_dt
And    poe.off_cycle  = &pe.off_cycle
And    poe.page_num      = &pe.page_num
And    poe.line_num      = &pe.line_num
And    poe.addl_nbr      = &pe.addl_nbr
Order By poe.erncd
End-Select
End-Procedure


Begin-Procedure P220-Get-Std-Hours
#debug9 Show 'P220-Get-Std-Hours'
Begin-Select
j.std_hours

!***********************************************************
! CWB 05/19/99  Begin

j.empl_type

! CWB 05/19/99  End
!***********************************************************

  Let #std_hours = &j.std_hours

!***********************************************************
! CWB 05/19/99  Begin

  Let $empl_type  = '  '||&j.empl_type||' '

! CWB 05/19/99  End
!***********************************************************

From   ps_job j

Where  j.emplid           = $emplid
And    j.empl_rcd        = #empl_rcd

And    j.effdt            =
      (Select Max(effdt)
       From   ps_job
       Where  emplid      = j.emplid
       And    empl_rcd   = j.empl_rcd
       And    effdt      <= $pay_end_dt)

And    j.effseq           =
      (Select Max(effseq)
       From   ps_job
       Where  emplid      = j.emplid
       And    empl_rcd   = j.empl_rcd
       And    effdt       = j.effdt)
End-Select
End-Procedure


Begin-Procedure P230-Print-Record
#debug9 Show 'P230-Print-Record'
  Let $Data-Found-Flag = 'Y'
  Let $OK-To-Advance-Page = 'Y'

  Let #lines-to-print = 1

  If $msg1 <> ''
    Add 1 To #lines-to-print
  End-If

  If $msg2 <> ''
    Add 1 To #lines-to-print
  End-If

  If $msg3 <> ''
    Add 1 To #lines-to-print
  End-If

  Add #l To #lines-to-print

  !If #lines-remaining < #lines-to-print
  If #lines-remaining < #lines-to-print and #lines-remaining > 2	!GEX-MXT added for system testing error 
    #debug9 show '#lines-remaining ' #lines-remaining
    #debug9 show '#lines-to-print ' #lines-to-print
    #debug9 show 'Doing New-Page'
    New-Page
    Let #lines-remaining = 48
  End-If

  Print $name                 (+2,{#column1},30)
  Print $emplid               (+0,{#column2})
  Print $deptid               (+0,{#column3})
  Print #std_hours            (+0,{#column4})   Edit 9,990.99
  Print #sheet-hours          (+0,{#column5})   Edit 99,990.99
  Print #pe_reg_hours         (+0,{#column6})   Edit 999,990.99
  Print #pe_ot_hours          (+0,{#column7})   Edit 990.99
  Print #pe_reg_salary        (+0,{#column8})   Edit 999,990.99
!**********************************************************************
  Print $empl_type            (+0,{#column12}) 
!**********************************************************************

  Subtract 2 From #lines-remaining

  Let #j = 1
  
  While #j <= #l And #l > 0
    Get $erncd #hours #amount From Earnings-Array(#j)
   Show $erncd ' ----- '#hours ' ----- ' #amount
    If #j = 1
      Print $erncd            (+0,{#column9})
    Else
      Print $erncd            (+1,{#column9})
      Subtract 1 From #lines-remaining
    End-If

    Print #hours              (+0,{#column10})  Edit 990.99
    Print #amount             (+0,{#column11})  Edit 999,990.99

    Add 1 To #j
  End-While

  If #j = 1
    Position (-1)
    Add 1 To #lines-remaining
  End-If

  If $msg1 <> ''
    Print $msg1               (+1,{#column9})
    Subtract 1 From #lines-remaining
  End-If

  If $msg2 <> ''
    Print $msg2               (+1,{#column9})
    Subtract 1 From #lines-remaining
  End-If

  If $msg3 <> ''
    Print $msg3               (+1,{#column9})
    Subtract 1 From #lines-remaining
  End-If
End-Procedure


Begin-Procedure P270-New-Page
  #debug9 show '$OK-To-Advance-Page ' $OK-To-Advance-Page
  If $OK-To-Advance-Page = 'Y'
    #debug9 show 'Doing New-Page'
    New-Page
    Let #lines-remaining = 48
    Let $OK-To-Advance-Page = 'N'
  End-If
End-Procedure


Begin-Procedure P280-Employee-Break
#debug9 Show 'P280-Employee-Break'
  If #pe_reg_salary > 0 And
     #other-hours   > 0
    Let $OK-To-Print = 'Y'
    Let $msg2 = 'Reg salary with other earnings'
  End-If

  If $deptid <> 'C036'
    Do P220-Get-Std-Hours
    If #vacation-hours < #std_hours
      add 5 to #std_hours  ! KMW added a 5 hour buffer to eliminate small differences 2/23/06
      If #sheet-hours > #std_hours
        Let $OK-To-Print = 'Y'
        Let $msg3 = 'Total hrs exceed std hrs by more than 5 hours'
      End-If
      subtract 5 from #std_hours !KMW removed 5 hours for balance of process
    Else
      If #sheet-hours > (#std_hours * 2)
        Let $OK-To-Print = 'Y'
        Let $msg3 = 'Total hrs exceed 2X std hrs'
      End-If
    End-If
  End-If

  If $OK-To-Print = 'Y'
    Do P230-Print-Record
  End-If

  Clear-Array Name=Earnings-Array

  Let $OK-To-Print = 'N'
  Let $msg1 = ''
  Let $msg2 = ''
  Let $msg3 = ''
  Let #l = 0
  Let #sheet-hours    = 0
  Let #other-hours    = 0
  Let #vacation-hours = 0
  Let #pe_reg_hours   = 0
  Let #pe_ot_hours    = 0
  Let #pe_reg_salary  = 0
End-Procedure


Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
End-Procedure


#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#Include 'payinit.sqc'   !Report Initialization and Timing
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
