!***********************************************************************
! GEXBNPAH:  This program prints out Voluntary Low Hours Problem report*
!            and Leave of Absence Report and a log report. This program*
!            calculates the benefit changes based on the actual hours  *
!            worked for G01, G03 and R04 benefit programs.             * 
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE	       *
!***********************************************************************
!  GBNC007   SXK       09/23/1997     INITIAL CREATION                 *
!  GBNC007   CJH       01/07/1998     Changes due to testing           *
!                                     see date stamps in SQR code      *
!  GBNC045   SXK       01/26/1998     Changes to process similar       *
!                                     benefit pgms                     *
!  GBNC019   JNB       03/17/1998     ADDITIONS TO SPEC DT 03/04/98 TO *
!                                     PROCESS BP'S R06 AND R07         *
!  GBNC007   SXK       04/07/1998     Changed code to retrieve right   *
!   				      effdt row from GEX_CONFIG table  *
!				      by joining with BEN_DEFN_PGM     *
!                                                                      *
!  GBNC023   JNB       05/03/1998     Created gexbnahp.sqc             *
!                                                                      *
!  GBNC023   SXK       06/09/1998     Changed the Report Header display*
!				      for Report Title and page break  *
!				      for Benefit Program Change       *
!                                                                      *
!  GBNC023   CJH       06/09/1998     Processing changes made. See date*
!                                     stamps within SQR                *
!            SXK       08/08/1998     Added logic to find the last     *
!				      pay period confirmed             *
!                                                                      *
!            SXK       09/22/1998     Added New Mobius ReportID        *
!                                                                      *
!            sxk       11/18/1998     Do the ATO row insert  only      *
!			              when currently not at A level    *
!                                                                      *
!            JNB       01/18/1999     Added reg_temp and service_date  *
!                                     made changes so that emps do not *
!                                     appear on the report if their    *
!                                     svc month and year is the same   *
!                                     as the month and year of the mtd *
!                                     hours being compared.            *   
!                                                                      *
!            AXL       02/28/2000     Modified to have bas_activity    *
!                                     insert                           *
!                                                                      *
!            AXL       02/28/2003     Added new 8.3 insert routines:   *
!                                     do insert-job-jr-row             *
!                                     do insert-compensation-row       *
!                                                                      *
!            CXA       08/03/2004     Change Sort Order to Dept, Name  *
!                                     Added Dept to Report Heading     *
!          ISDVMXD    05/08/2009      Update SQR to pull job Title from *
!                                     Position Data instead of         *
!                                     JOBCODE_TBL -ITG#60311           *
!          1289792    10/11/2016      SEC_REENG Display EMPLID without *
!                                     dashes                           *
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-setup

!#include 'setupdb.sqc'
#include 'setup32a.sqc'

!declare-layout General-layout
!   orientation=LANDSCAPE
!   MAX-LINES=50
!   MAX-COLUMNS=132
!end-declare

declare-report voluntary-report
Printer-Type=HPLASERJET
  layout=DEFAULT
end-declare

!declare-report Leave-of-Absence-report
!Printer-Type=HPLASERJET
!  layout=DEFAULT
!end-declare

declare-report Report-log
Printer-Type=HPLASERJET
  layout=DEFAULT
end-declare

end-setup

!*********************************************************************
!Initial processing, retrieving current dates and calls the main 
!procedure to do the processing.                                     
!*********************************************************************
begin-report

  use-report Report-log

  do Init-DateTime
  do Init-Number
  do stdapi-init
  
  move 'GEXBNPAH' to $ReportID
  move 'Benefit Changes based on Actual Hours Worked' to $ReportTitle
  display $ReportTitle

  do Get-Current-DateTime
  let $reportdate_mm = substr($reportdate,1,2)
  let $reportdate_dd = substr($reportdate,4,2)
  let $reportdate_yy = substr($reportdate,7,2)
  do MakeYear4Digits ($reportdate_yy)

!SXK 08/08/1998 Begin
  do edit-pay-calendar
!SXK 08/08/1998 End

  let $reportdate_ccyyyy = $reportdate_mm||'/'||$reportdate_dd||'/'||$reportdate_yy
!  let $job_effdt = $reportdate_mm||'/'||'01'||'/'||$reportdate_yy

  do format-datetime($reportdate_ccyyyy,$reportdate_ccyy,{DEFMDY},'','NATIVE') 
!CJH 06-09-1998 $effdt_dbf computed from run control dt, not current date
!  do format-datetime($job_effdt,$effdt_dbf,{DEFMDY},'','NATIVE') 
!CJH 06-09-1998
  
  do Report
  do Commit-Transaction
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term

end-report

!*********************************************************************
!If this Program is being executed through process scheduler, 
!the run control parameters and calls the main processing procedure.
!Otherwise, interrogates the user for the run control parameters and 
!validates them. If the run control parameters are invalid, stops the
!execution.
!*********************************************************************
begin-procedure Report

date-time () hh:mi:ss &timeBegan
display 'Report Began: ' noline
display &timeBegan

 move 'N' to $Errorfound

!if $prcs_process_instance = ''
!    input $rnctl_date 'Enter Run Control Date({Prompt-Date}): ' type=char
!    do format-datetime($rnctl_date,$rnctl_date_dbf,{prompt-mask},'','native')
!else
!    do Select-Parameters
!    if $found = 'N'
!        goto report-exit
!    end-if
!   move &RC.rnctl_date to $rnctl_Date
!end-if

move $reportdate_ccyyyy to $rnctl_date

let $rnctl_mm = substr($rnctl_Date,1,2)
let $rnctl_dd = substr($rnctl_Date,4,2)
let $rnctl_yyyy = substr($rnctl_Date,7,4)       
let $rnctl_yy  = substr($rnctl_date,9,2)
move $rnctl_yyyy to #rnctl_yyyy
move $rnctl_yy to #rnctl_yy

 do process-employee-data

 if $sev-error = 'Y'
    goto report-exit
 end-if
  
Report-Exit:


  date-time () hh:mi:ss &timeProcess
  display #InputTran 99999 noline
  display ' Transactions Processed: ' noline
  display &timeProcess

end-procedure

!*********************************************************************
!Prints the header information in the report log.
!*********************************************************************

begin-heading 8 for-reports=(report-log)

!do Page-Break-On-BP-Change

do get-bp-description

unstring $reporttitle by '(' into $reporttitle $temp_right

concat '(' with $reporttitle
concat $prev_bp_name with $reporttitle
concat '-' with $reporttitle
concat &DES.DESCR with $reporttitle
concat ')' with $reporttitle
!SXK 09/22/1998 Begin
let $ReportID = 'BNPAHLOG'
!SXK 09/22/1998 End
 #Include 'stdhdg01.sqc'

!CXA 08/03/2004 Begin
 do P930-get-dept-descr
 print 'Deptid:'      (3,1)
 print $Save_Deptid  (,13)
 print $Dept_descr (,18)

!  date-time () DD-MON-YYYY &curr_Date 
!  print &curr_Date ()
!  position (-1)
!CXA 08/03/2004 End
  print 'Report Log' () center bold

  position (+3)
  print 'Trans#' (,1) bold
  print 'Emplid' (,18) bold
  print 'Message' (,50) bold
  print '-' (+1,1,127) fill
 

end-heading

!*********************************************************************
!Prints the header information in the Voluntary report.
!*********************************************************************

begin-heading 8 for-reports=(Voluntary-report)

!do Page-Break-On-BP-Change

do get-bp-description

unstring $reporttitle by '(' into $reporttitle $temp_right

concat '(' with $reporttitle
concat $prev_bp_name with $reporttitle
concat '-' with $reporttitle
concat &DES.DESCR with $reporttitle
concat ')' with $reporttitle
!SXK 09/22/1998 Begin
let $ReportID = 'BNPAHVOL'
!SXK 09/22/1998 End
 #Include 'stdhdg01.sqc'

!CXA 08/03/2004 Begin
 do P930-get-dept-descr
 print 'Deptid:'      (3,1)
 print $Save_Deptid  (,13)
 print $Dept_descr (,18)

!  print 'Report ID:  '    (1,1)
!  print $ReportID         ()

!  uppercase $ReportTitle
!  print $ReportTitle      ()          center bold
!  print 'Run Date:'       (0,108)
!  date-time () DD-MON-YYYY &curr_Date 
!  print &curr_Date ()
!  position (-1)
!CXA 08/03/2004 End

  print 'PT Voluntary Low Hours Problem Report' () center bold
  position (+3)

! JNB  01/18/1999  Made several changes in this para as two new fields are added.
! Reg_temp and service date 
 
  print 'Emplid' (,1) bold
  print 'Employee Name' (,16) bold

!SXK 06/11/1998 No need
!  print 'Company' (,45) bold
!SXK End

  print 'Store#' (,45) bold

!SXK 06/11/1998 No need
!  print 'Acct Code' (,75) bold
!SXK End

  print 'Status'   (,55) bold
  print 'Job Code' (,70) bold
  print 'Job Code Desc' (,83) bold
  print 'Reg/Tmp'  (,98) bold
  print 'Service Date' (,108) bold
  print 'Message' (,125) bold

  print '-' (+1,1,155) fill
 

end-heading

!*********************************************************************
!Prints the header information in the Leave of Absence Report
!*********************************************************************

!begin-heading 8 for-reports=(Leave-of-Absence-report)

!do Page-Break-On-BP-Change

!concat '(' with $reporttitle
!concat $bp_name with $reporttitle
!concat ')' with $reporttitle
!SXK 09/22/1998 Begin
!let $ReportID = 'BNPAHLOA'
!SXK 09/22/1998 End
! #Include 'stdhdg01.sqc'

!  print 'Report ID:  '    (1,1)
!  print $ReportID         ()

!  uppercase $ReportTitle
!  print $ReportTitle      ()          center bold
!  print 'Run Date:'       (0,108)
!  date-time () DD-MON-YYYY &curr_Date 
!  print &curr_Date ()
!  position (-1)
!  print 'Leave of Absence Report' () center bold
!  position (+3)

!  print 'Emplid' (,4) bold
!  print 'Employee Name' (,22) bold
!  print 'Company' (,45) bold
!  print 'Store#' (,60) bold
!  print 'EE Status' (,75) bold
!  print 'Acct Code' (,90) bold
!  print 'Job Code' (,105) bold
!  print 'MTD Hours' (,120) bold

!  print '-' (+1,1,177) fill
!  position (+3) 

!  print '-' (+1,1,134) fill

!end-heading

!*********************************************************************
!Prints the footer in the report log
!*********************************************************************

begin-footing 2 for-reports=(Report-log)
page-number (1,108) 'Page '  
last-page () ' of ' '.'

end-footing

!*********************************************************************
!Prints the footer in the Voluntary Low Hours report
!*********************************************************************

begin-footing 2 for-reports=(Voluntary-Report)
page-number (1,108) 'Page '  
last-page () ' of ' '.'

end-footing

!*********************************************************************
!Prints the footer in the Leave of Absence Report
!*********************************************************************

!begin-footing 2 for-reports=(Leave-of-Absence-Report)
!page-number (1,108) 'Page '  
!last-page () ' of ' '.'

!end-footing

!*********************************************************************
!Determines previous month's number of weeks to find out the weekly 
!hours worked for each employee. Calls the main benefits participation
!logic and leave of absence logic
!*********************************************************************

Begin-Procedure Process-Employee-Data

move 'N' to $errorfound
move 'N' to $found
!********************************************************
!  01/07/98 - modification
!  Company and Paygroup set here to use when querying the
!  Pay Calendar to retrieve the correct check date rows.
!  This is used for testing, but more SQL needs added to
!  retrieve the correct Company and Paygroup from the 
!  Elig Rules for the Ben Pgm instead of hardcoding the
!  values here.  We could also select one EE that is enrolled
!  in the current BP and use the Company & Paygroup from the
!  EE's JOB record to query the calendar with.  This SQR will
!  execute for more than GEMCO Retail Benefit Programs, but
!  all BPs will be part of Retail - paid on Thursday.
!********************************************************
 move 'GEI' to $Co_Name
 move 'RET' to $Pay_Name

!SXK 08/08/1998 Begin
!do determine-prev-month-pay-period

!if ($errorfound = 'Y') or ($found = 'N')
!   goto skip-processing
!end-if

!SXK 08/08/1998 End

!*******************************************
!Added logic to go to GEX_SQR_PROCESS table and retrieves all the 
!benefit programs that need to be run through this SQR
!*******************************************

  do Retrieve-benefit-pgms

  display $BP_name

  if $ben_pgm_found = 'N'
     display 'No Benefit Programs found for Process:GEXBNPAH'
  end-if


skip-processing:

end-procedure

!*********************************************************************
!Retrieves each employee who participated in G01 Benefit Program and
!calls necessary procedures to determine their weely hours. Also calls
!procedure to determine the voluntary low hours problems.
!********************************************************************* 

begin-procedure process-benefit-partic

 move 'N' to $errorfound

display 'Process-Benefit-Partic'
display $log_printed
display $vol_printed

if $log_printed = 'Y'
   use-report report-log
   new-page
end-if
if $vol_printed = 'Y'
   use-report voluntary-report
   new-page
end-if
   move $bp_name to $prev_bp_name
  display 'before use report'
use-report report-log

display 'After use report'
move 'N' to $beninfo_found

!  JNB 01/18/1999 selecting D.reg_temp calling a procedure to select service_date

begin-select on-error=sql-error-found('process-benefit-partic')
!CXA 08/03/2004 Begin
D.DEPTID	()  On-Break  Level=1
                           Print=Never
                           Save=$Save_Deptid
                           After=P930-Deptid-Change
!CXA 08/03/2004 End
B.EMPLID  &emplid
C.ERNCD_SPCL
C1.FIELDNAME
C1.FIELDNAME2
D.EMPL_RCD   
D.EFFDT
D.EFFSEQ
D.EMPL_STATUS
D.ELIG_CONFIG1
D.ELIG_CONFIG2
D.COMPANY
!D.DEPTID		CXA 08/03/2004 
D.ACCT_CD
D.JOBCODE
D.GEX_VOLUN_LOW_HRS
D.REG_TEMP
E.NAME
D.POSITION_NBR !ISDVMXD added for ITG#60311 on 05/08/2009

   move 'Y' to $beninfo_found
   move &emplid to $emplid

   Do obtain-service-date


!SXK 06/11/1998 Need to pass company to get the MTD hours
   move &D.COMPANY to $company
!SXK End

   display $emplid
   display 'JOB EFFDT = ' noline
   display $effdt_dbf
   if RTRIM(&C1.FIELDNAME2,' ') <> ''
      display 'FIELDNAME2 ' noline
      display &c1.fieldname2
      Let $RelatedTo2 = 'Y'
      display '$RelatedTo2 ' noline
      display $RelatedTo2 
   end-if
   do calculate-sum-of-mtd-hrs
!   display 'error found: ' noline
!   display $errorfound
   move #week_hrs to $week_hrs
   display 'week hrs: ' noline
   display $week_hrs
! 06/09/1998 - CJH remove hrs>0   if ($errorfound = 'N') and (#week_hrs > 0)
  if ($errorfound = 'N')
!      display 'process elig rules'
      move 'N' to $atleast_one_found
      add 1 to #inputtran
      do process-elig-rules
      if $errorfound = 'N'
       do create-voluntary-report
      end-if
   end-if

FROM PS_BEN_PROG_PARTIC B,
     PS_SPCL_EARNS_TBL C,
     PS_BEN_DEFN_PGM C1,
     PS_JOB D,
     PS_PERSONAL_DATA E

WHERE B.BENEFIT_PROGRAM = $BP_name
  AND B.EMPLID = D.EMPLID
  AND B.EMPL_RCD = D.EMPL_RCD
  AND D.EMPL_STATUS in ('A','L','P')
  AND D.FULL_PART_TIME = 'P'
  AND B.EMPLID = E.EMPLID
  AND C1.BENEFIT_PROGRAM = B.BENEFIT_PROGRAM
  AND C1.GEX_SPCL_ACCUM_CD = C.ERNCD_SPCL
  AND B.EFFDT = (SELECT MAX(EFFDT)
                   FROM PS_BEN_PROG_PARTIC
                  WHERE EMPLID = B.EMPLID
                    AND EMPL_RCD = B.EMPL_RCD
                    AND EFFDT <= $effdt_dbf)
  AND C1.EFFDT = (SELECT MAX(EFFDT)
                   FROM PS_BEN_DEFN_PGM
                  WHERE BENEFIT_PROGRAM = $BP_name
!                    AND GEX_SPCL_ACCUM_CD = C.ERNCD_SPCL
                    AND EFF_STATUS = 'A'
                    AND EFFDT <= $effdt_dbf)
  AND C.EFFDT = (SELECT MAX(C3.EFFDT)
                   FROM PS_SPCL_EARNS_TBL C3
                  WHERE C3.ERNCD_SPCL = C.ERNCD_SPCL
                    AND C3.EFF_STATUS = 'A'
                    AND C3.EFFDT <= $effdt_dbf)
  AND D.EFFDT = (SELECT MAX(EFFDT)
                   FROM PS_JOB
                  WHERE EMPLID = D.EMPLID
                    AND EMPL_RCD = D.EMPL_RCD
                    AND EFFDT <= $effdt_dbf)
  AND D.EFFSEQ = (SELECT MAX(EFFSEQ)
                   FROM PS_JOB
                  WHERE EMPLID = D.EMPLID
                    AND EMPL_RCD = D.EMPL_RCD
                    AND EFFDT = D.EFFDT)   
!CXA 08/03/2004 Begin
ORDER BY D.DEPTID, E.NAME 
!ORDER BY E.NAME 
!CXA 08/03/2004 End
end-SELECT

 if $beninfo_found = 'N'
   Let $beninfo_found = ' ' 
   do error-found
   print 'No Benefit Participation information found' (,34)
 end-if

! 06/11/1998 - do not create LOA report for this SQR
! do create-leave-of-absence-report

end-procedure


!  JNB  01/18/1999  Added the following procedure
!*********************************************************************
!Retrieve employee's service date
!*********************************************************************

begin-procedure Obtain-service-date
begin-select on-error=sql-error-found('Obtain-Service-date')
EMP.SERVICE_DT
EMP.EMPL_RCD

    move &emp.service_dt to $emp_service_dt
    do convert-to-dtu-date($emp_service_dt,$emp_service_dt_dtu)

    Let $service_month = substr($emp_service_dt_dtu,6,2)
    Let #service_month = to_number($service_month)
    Let $service_year  = substr($emp_service_dt_dtu,1,4)
    Let #service_year  = to_number($service_year)
    Let $service_year_mm = $service_year || $service_month
    Let #service_year_mm = to_number($service_year_mm)
!        display '$service_yyyy_mm ' noline
!        display $service_yyyy_mm
!        display '#service_yyyy_mm ' noline
!        display #service_yyyy_mm  
!       display 'service date ' noline
!       display $emp_service_dt
!       display 'service month ' noline
!       display $service_month
!        display 'service year ' noline
!        display $service_year

FROM PS_EMPLOYMENT EMP

WHERE EMP.EMPLID = $emplid
  and EMP.EMPL_RCD = &d.empl_rcd  

 
end-SELECT

end-procedure

   

!*********************************************************************
!Retrieves all the employees who have worked while they are with
!Leave of Absence status and prints out a report
!*********************************************************************

!begin-procedure create-leave-of-absence-report

!move 'N' to $errorfound
!move 'N' to $found

!begin-select on-error=sql-error-found('create-leave-of-absence-report')
!K.EMPLID
!K.COMPANY
!K.DEPTID
!K.ACCT_CD
!K.JOBCODE
!K.EMPL_STATUS
!M.NAME

!   move 'Y' to $found
!   do calculate-sum-of-mtd-hrs-2
!   if #hrs_mtd > 0
!      do write-leave-of-absence-report
!   end-if

!FROM  PS_BEN_PROG_PARTIC L,
!      PS_PERSONAL_DATA M,
!      PS_JOB K
!WHERE L.BENEFIT_PROGRAM = $Bp_name
!  AND L.EMPLID = K.EMPLID
!  AND K.EMPLID = M.EMPLID
!  AND K.FULL_PART_TIME = 'P'
!  AND L.EMPL_RCD = K.EMPL_RCD
!**** 01/07/98 - Added LOA status of 'L'
!  AND K.EMPL_STATUS in ('P','L')
!  AND L.EFFDT = (SELECT MAX(EFFDT)
!                   FROM PS_BEN_PROG_PARTIC
!                  WHERE EMPLID = K.EMPLID
!                    AND EMPL_RCD = K.EMPL_RCD
!                    AND EFFDT <= $effdt_dbf)
!  AND K.EFFDT = (SELECT MAX(EFFDT)
!                   FROM PS_JOB
!                  WHERE EMPLID = K.EMPLID
!                    AND EMPL_RCD = K.EMPL_RCD
!                    AND EFFDT <= $effdt_dbf
!**** 01/07/98 - Added LOA status of 'L'
!                    AND EMPL_STATUS in ('P','L'))
!  AND K.EFFSEQ = (SELECT MAX(EFFSEQ)
!                   FROM PS_JOB
!                  WHERE EMPLID = K.EMPLID
!                    AND EMPL_RCD = K.EMPL_RCD
!**** 01/07/98 - Added LOA status of 'L'
!                    AND EMPL_STATUS in ('P','L')
!                    AND EFFDT = K.EFFDT)
!  
!end-SELECT

!if $found = 'N'
!   use-report leave-of-absence-report
!   position (+1)
!   print 'No Employees worked in the last month with Leave of Absence' () center
!end-if

!end-procedure

!*********************************************************************
!Calculates weely hours for employees 
!*********************************************************************

!begin-procedure calculate-sum-of-mtd-hrs-2

!move 'N' to $errorfound
!move 'N' to $found
!move 0 to #hrs_mtd

!begin-select on-error=sql-error-found('calculate-sum-of-mtd-hrs-2')
!SUM(M.HRS_MTD) &hrs_mtd

!   move &hrs_mtd to #hrs_mtd
!   move 'Y' to $found
!FROM PS_EARNINGS_BAL M,
!     PS_BEN_PROG_PARTIC B1,
!     PS_SPCL_EARNS_TBL C5,
!     PS_BEN_DEFN_PGM C6

!WHERE M.EMPLID = &K.EMPLID
!  AND M.BALANCE_ID = 'CY'
!  AND M.BALANCE_YEAR = $rnctl_yyyy
!  AND M.BALANCE_PERIOD = #prev_mm
!SXK 06/09/1998 added code to get the earnings balance for 
!               the special accumulator of Benefit Program
!  AND M.ERNCD = C5.ERNCD_SPCL
!  AND B1.EMPLID = &K.EMPLID
!  AND B1.BENEFIT_PROGRAM = $BP_name
!  AND C6.BENEFIT_PROGRAM = B1.BENEFIT_PROGRAM
!  AND C6.GEX_SPCL_ACCUM_CD = C5.ERNCD_SPCL
!  AND B1.EFFDT = (SELECT MAX(EFFDT)
!                   FROM PS_BEN_PROG_PARTIC
!                  WHERE EMPLID = B1.EMPLID
!                    AND EMPL_RCD = B1.EMPL_RCD
!                    AND EFFDT <= $effdt_dbf)
!  AND C6.EFFDT = (SELECT MAX(EFFDT)
!                   FROM PS_BEN_DEFN_PGM
!                  WHERE BENEFIT_PROGRAM = $BP_name
!                    AND GEX_SPCL_ACCUM_CD = C5.ERNCD_SPCL
!                    AND EFFDT <= $effdt_dbf)
!  AND C5.EFFDT = (SELECT MAX(C8.EFFDT)
!                   FROM PS_SPCL_EARNS_TBL C8, PS_BEN_DEFN_PGM C7 
!                  WHERE C7.BENEFIT_PROGRAM = $BP_name
!                    AND C7.GEX_SPCL_ACCUM_CD = C8.ERNCD_SPCL
!                    AND C8.EFFDT <= $effdt_dbf)
!end-select

!end-procedure

!*********************************************************************
!Compares the existing job table config2 field and the calculated field
!and prepares the voluntary low hours problem report based on the 
!voluntary low hours field value. Also inserts a new row in the job 
!table with calcualted config2 value and updates the personal table
!*********************************************************************

begin-procedure create-voluntary-report
use-report voluntary-report

move &D.ELIG_CONFIG2 to $elig_config2_job
move $ee_config2_val to $elig_config2

let $ee_config2_val_nospaces = rtrim($ee_config2_Val,' ')
let $ee_config2_job_nospaces = rtrim($elig_config2_job,' ')
!****let $ee_config2_job_nospaces = rtrim($ee_config2_job,' ')

display 'Job Config2 Value:'
display $elig_config2_job
display 'Pgm Config2 Value:'
display $ee_config2_val_nospaces
display 'Volun Value:'
display &d.gex_volun_low_hrs
display $ee_config2_val_nospaces
display $ee_config2_job_nospaces
if $ee_config2_val_nospaces = $ee_Config2_job_nospaces
   let $ee_config2_val_4to7 = substr($ee_config2_val_nospaces,4,7)
   Evaluate $ee_config2_val_4to7
     when = 'A000000'
         if &D.GEX_VOLUN_LOW_HRS = 'Y'
	    do write-voluntary-report
            print 'Voluntary Low Hours on for ''A'' level of Benefits' (,125)
         end-if
     when = 'C000000'
!JNB  01/18/1999 

         if ( &D.GEX_VOLUN_LOW_HRS = 'N') and ( #end_yyyymm != #service_year_mm ) 
            do write-voluntary-report
            print 'Voluntary Low Hours off for ''C'' level of Benefits' (,125)    
         end-if
!JNB  01/18/1999 commented the two lines below
 
         if &D.GEX_VOLUN_LOW_HRS = 'N'
!	    do write-voluntary-report
!            print 'Voluntary Low Hours off for ''C'' level of Benefits' (,125)            
            do select-job-row
            do select-comp-row	!AXL 2/28/2003 New
            if $errorfound = 'N'
!SXK 11/09/1999 Begin
	       if $bas_action_retrieved <> 'Y'
		  do get-bas-action
	       end-if
!SXK 11/09/1999 End
               display '1-level c chg to lvl A'
               let $elig_config2 = substr($elig_config2,1,3) || 'A000000' 
               if $effdt_row_exists = 'Y'
!SXK 11/09/1999 Begin
		  let $bac_emplid = &I.EMPLID
		  let #bac_empl_rcd = &I.EMPL_RCD
		  let $bac_bas_action_source = 'TJ'
		  let $bac_event_dt = &I.EFFDT
		  let #bac_event_effseq = #effseq
		  let $bac_cobra_action = &I.COBRA_ACTION
!SXK 11/09/1999 End
                  do insert-job-row-effdt-exists
                  do insert-job-jr-row-effdt-exists         !GBD 08/01/2002
                  do insert-compensation-row-effdt-exists   !AXL 02/28/2003
               else
!SXK 11/09/1999 Begin
		  let $bac_emplid = &J.EMPLID
		  let #bac_empl_rcd = &J.EMPL_RCD
		  let $bac_bas_action_source = 'TJ'
		  let $bac_event_dt = $effdt_dbf
		  let #bac_event_effseq = 0
		  let $bac_cobra_action = &J.COBRA_ACTION
!SXK 11/09/1999 End
                  do insert-job-row
                  do insert-job-jr-row                      !GBD 08/01/2002
                  do insert-compensation-row                !AXL 02/28/2003
               end-if
!SXK 11/09/1999 Begin
!               if $errorfound = 'N' and $update-is-done = 'N'
!                  do update-personal-data
!               end-if
               do select-all-future-job-rows
	       let $bas_activity_exists = 'N'
	       do select-bas-activity-row
	       if $bas_activity_exists = 'N'
		  do insert-bas-activity-row
	       end-if
!SXK 11/09/1999 End
            end-if
         end-if
     when-other
         use-report Report-log
         do error-found
         print 'Cannot evaluate level of Benefits for Elig Config 2 Value:' (,125)
         print $ee_config2_Val_nospaces ()
         use-report voluntary-report
   end-evaluate    
else
 let $ee_config2_val_4to7 = substr($ee_config2_val_nospaces,4,7)
display $ee_config2_val_4to7
   Evaluate $ee_config2_val_4to7
     when = 'A000000'
         if &D.GEX_VOLUN_LOW_HRS = 'Y'
	    do write-voluntary-report
            print 'Voluntary Low Hours on for ''A'' level of Benefits' (,125)
!06/09/1998 - CJH - added  end-if here
         end-if
	    do select-job-row
            do select-comp-row	!AXL 2/28/2003 New
            if $errorfound = 'N'
               let substr($elig_config2,4,7) = 'A000000'
!SXK 11/09/1999 Begin
	       if $bas_action_retrieved <> 'Y'
		  do get-bas-action
	       end-if
!SXK 11/09/1999 End
               if $effdt_row_exists = 'Y'
!SXK 11/09/1999 Begin
		  let $bac_emplid = &I.EMPLID
		  let #bac_empl_rcd = &I.EMPL_RCD
		  let $bac_bas_action_source = 'TJ'
		  let $bac_event_dt = &I.EFFDT
		  let #bac_event_effseq = #effseq
		  let $bac_cobra_action = &I.COBRA_ACTION
!SXK 11/09/1999 End
                  do insert-job-row-effdt-exists
                  do insert-job-jr-row-effdt-exists         !GBD 08/01/2002
                  do insert-compensation-row-effdt-exists   !AXL 02/28/2003
               else
!SXK 11/09/1999 Begin
		  let $bac_emplid = &J.EMPLID
		  let #bac_empl_rcd = &J.EMPL_RCD
		  let $bac_bas_action_source = 'TJ'
		  let $bac_event_dt = $effdt_dbf
		  let #bac_event_effseq = 0
		  let $bac_cobra_action = &J.COBRA_ACTION
!SXK 11/09/1999 End
                  do insert-job-row
                  do insert-job-jr-row                      !GBD 08/01/2002
                  do insert-compensation-row                !AXL 02/28/2003
               end-if
!SXK 11/09/1999 Begin
!               if $errorfound = 'N' and $update-is-done = 'N'
!                  do update-personal-data
!               end-if
               do select-all-future-job-rows
	       let $bas_activity_exists = 'N'
	       do select-bas-activity-row
	       if $bas_activity_exists = 'N'
		  do insert-bas-activity-row
	       end-if
!SXK 11/09/1999 End
            end-if
!06/09/1998 - CJH - moved above     end-if
     when = 'C000000'
! JNB 01/18/1999
!         display '# end_month ' noline
!         display #end_month
!         display '# end_yy ' noline
!         display #end_yy
!         display '# service_month ' noline
!         display #service_month
!         display '#service year ' noline
!         display #service_year

         display 'gex volun low hrs ' noline
         display &d.gex_volun_low_hrs  
         display '#end_yyyymm ' noline
         display #end_yyyymm
         display '#service_year_mm ' noline
         display #service_year_mm 

         if (&D.GEX_VOLUN_LOW_HRS = 'N') and ( #end_yyyymm != #service_year_mm ) 
            display 'writing vol report '
            do write-voluntary-report
            print 'Voluntary Low Hours off for ''C'' level of Benefits' (,125)    
         end-if
! JNB 01/18/1999
         if &D.GEX_VOLUN_LOW_HRS = 'N'
! JNB 01/18/1999 commented the two lines below

!	    do write-voluntary-report
!            print 'Voluntary Low Hours off for ''C'' level of Benefits' (,125)            
            do select-job-row
            do select-comp-row	!AXL 2/28/2003 New
            if $errorfound = 'N'
  !SXK 11/18/98 Begin -- Do the insert only when currently not at A level
              if substr($ee_Config2_job_nospaces,4,7) <> 'A000000'
               display '2-level c chg to lvl A'
               let $elig_config2 = substr($elig_config2,1,3) || 'A000000'  
!SXK 11/09/1999 Begin
	       if $bas_action_retrieved <> 'Y'
		  do get-bas-action
	       end-if
!SXK 11/09/1999 End      
               if $effdt_row_exists = 'Y'
!SXK 11/09/1999 Begin
		  let $bac_emplid = &I.EMPLID
		  let #bac_empl_rcd = &I.EMPL_RCD
		  let $bac_bas_action_source = 'TJ'
		  let $bac_event_dt = &I.EFFDT
		  let #bac_event_effseq = #effseq
		  let $bac_cobra_action = &I.COBRA_ACTION
!SXK 11/09/1999 End
                  do insert-job-row-effdt-exists
                  do insert-job-jr-row-effdt-exists         !GBD 08/01/2002
                  do insert-compensation-row-effdt-exists   !AXL 02/28/2003
               else
!SXK 11/09/1999 Begin
		  let $bac_emplid = &J.EMPLID
		  let #bac_empl_rcd = &J.EMPL_RCD
		  let $bac_bas_action_source = 'TJ'
		  let $bac_event_dt = $effdt_dbf
		  let #bac_event_effseq = 0
		  let $bac_cobra_action = &J.COBRA_ACTION
!SXK 11/09/1999 End
                  do insert-job-row
                  do insert-job-jr-row                      !GBD 08/01/2002
                  do insert-compensation-row                !AXL 02/28/2003
               end-if
!SXK 11/09/1999 Begin
!               if $errorfound = 'N' and $update-is-done = 'N'
!                  do update-personal-data
!               end-if
               do select-all-future-job-rows
	       let $bas_activity_exists = 'N'
	       do select-bas-activity-row
	       if $bas_activity_exists = 'N'
		  do insert-bas-activity-row
	       end-if
!SXK 11/09/1999 End
             end-if
  !SXK 11/18/98 End
            end-if
!*** 01/07/98 - added logic when volun low is on and evaluates to "C" level
         else
            do select-job-row
            do select-comp-row	!AXL 2/28/2003 New
            if $errorfound = 'N'
!SXK 11/09/1999 Begin
	       if $bas_action_retrieved <> 'Y'
		  do get-bas-action
	       end-if
!SXK 11/09/1999 End
               if $effdt_row_exists = 'Y'
!SXK 11/09/1999 Begin
		  let $bac_emplid = &I.EMPLID
		  let #bac_empl_rcd = &I.EMPL_RCD
		  let $bac_bas_action_source = 'TJ'
		  let $bac_event_dt = &I.EFFDT
		  let #bac_event_effseq = #effseq
		  let $bac_cobra_action = &I.COBRA_ACTION
!SXK 11/09/1999 End
                  do insert-job-row-effdt-exists
                  do insert-job-jr-row-effdt-exists         !AXL 02/28/2003
                  do insert-compensation-row-effdt-exists   !AXL 02/28/2003
               else
!SXK 11/09/1999 Begin
		  let $bac_emplid = &J.EMPLID
		  let #bac_empl_rcd = &J.EMPL_RCD
		  let $bac_bas_action_source = 'TJ'
		  let $bac_event_dt = $effdt_dbf
		  let #bac_event_effseq = 0
		  let $bac_cobra_action = &J.COBRA_ACTION
!SXK 11/09/1999 End
                  do insert-job-row
                  do insert-job-jr-row                      !AXL 02/28/2003
                  do insert-compensation-row                !AXL 02/28/2003
               end-if
!SXK 11/09/1999 Begin
!               if $errorfound = 'N' and $update-is-done = 'N'
!                  do update-personal-data
!               end-if
               do select-all-future-job-rows
	       let $bas_activity_exists = 'N'
	       do select-bas-activity-row
	       if $bas_activity_exists = 'N'
		  do insert-bas-activity-row
	       end-if
!SXK 11/09/1999 End
            end-if
!*** 01/07/98 - added logic when volun low is on and evaluates to "C" level
         end-if
     when-other
         use-report Report-log
         do error-found
         print 'Cannot evaluate level of Benefits for Elig Config 2 Value:' (,34)
         print $ee_config2_Val_nospaces ()
         use-report voluntary-report
   end-evaluate
end-if

end-procedure


!*********************************************************************
!prints the voluntary low hours problem report
!*********************************************************************

begin-procedure write-voluntary-report

display 'Page-Count:' noline
display #page-count
display 'Line-Count:' noline
display #current-line

move 'Y' to $vol_printed
!ISDVMXD added for ITG#60311 on 05/08/2009 begins
   Let $Position_Nbr = &D.POSITION_NBR     
   let $PosNameAbbrv = ''   
       Do Get-Position-Title       
       Let $jobtitle = $PosNameAbbrv
       If $PosNameAbbrv = ''
        do get-job-descr
        end-if
!ISDVMXD added for ITG#60311 on 05/08/2009 ends
  move 'EMPL_STATUS' to $FieldName
  move &D.EMPL_STATUS to $FieldValue
  do Read-Translate-Table
  move $XlatShortName to $empl_status
!Jyotsna - 10/11/2016 - SEC_REENG - Begin
  !let $EmplId_1st3 = substr($EmplId,1,3)
  !let $EmplId_mid2 = substr($EmplId,4,2)
  !let $EmplId_last4 = substr($EmplId,6,4)
!Jyotsna - 10/11/2016 - SEC_REENG - End
! JNB 01/18/1999 Made several changes to print format
!Jyotsna - 10/11/2016 - SEC_REENG - Begin
  !String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11
  !print $emplid11  (+1,1)
  print $EmplId  (+1,1)
!Jyotsna - 10/11/2016 - SEC_REENG - End
  print &E.NAME    (,16)

!SXK 06/11/1998 No need
!  print &D.COMPANY (,45)
!SXK End

  print &D.DEPTID  (,45)
  print $EMPL_STATUS (,55)
  print &D.JOBCODE (,70)  
 ! print &JCD.DESCRSHORT (,85) !ISDVMXD commented for ITG#60311 on 05/08/2009
  
  print $jobtitle (,85) !ISDVMXD added for ITG#60311 on 05/08/2009
 
  print &D.reg_temp (,98)
  print &emp.service_dt (,108)

!SXK 06/09/1998 Do not need
!  print &D.ACCT_CD  (,75)
!SXK End

end-procedure

!*********************************************************************
!Prints the Leave-of-Absence report
!*********************************************************************

!begin-procedure write-leave-of-absence-report

!  use-report leave-of-absence-report

!  let $EmplId_1st3 = substr(&K.EMPLID,1,3)
!  let $EmplId_mid2 = substr(&K.EMPLID,4,2)
!  let $EmplId_last4 = substr(&K.EMPLID,6,4)
 
!  String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11
!  move 'EMPL_STATUS' to $FieldName
!  move &K.EMPL_STATUS to $FieldValue
!  do Read-Translate-Table
!  move $XlatShortName to $empl_status

!  print $emplid11  (+1,1)	 
!  print &M.NAME    (,22)
!  print &K.COMPANY (,45)
!  print &K.DEPTID  (,60)
!  print $empl_status (,75)
!  print &K.ACCT_CD  (,90)
!  print &K.JOBCODE (,105) 
!  print #hrs_mtd   (,120)


!end-procedure

!*********************************************************************
!Retrieves the Job code description
!*********************************************************************

Begin-Procedure Get-Job-Descr

Begin-Select on-error=sql-error-found('Get-Job-Descr')
JCD.DESCRSHORT
    let $jobtitle = &JCD.DESCRSHORT !ISDVMXD added for ITG#60311 on 05/08/2009
FROM PS_JOBCODE_TBL JCD

WHERE JCD.JOBCODE = &D.JOBCODE
  AND JCD.EFF_STATUS = 'A'
  AND JCD.EFFDT = (SELECT MAX(EFFDT)
			FROM PS_JOBCODE_TBL
			WHERE JOBCODE = &D.JOBCODE
			  AND EFFDT <= $reportdate_ccyy)
end-select

end-procedure

! CXA 08/03/2004  Begin
begin-procedure P930-Deptid-Change
#debug9 Show 'P930-Deptid-Change'
  new-page
end-procedure

begin-procedure P930-get-dept-descr
#debug9 Show 'P930-get-dept-descr'
begin-select
dept2.descr  &descr
  
  move &descr to $dept_descr

from   ps_dept_tbl dept2
where  dept2.deptid = $save_deptid
end-select
end-procedure
! CXA 08/03/2004  End

#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
!*#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'payrnctl.sqc'  !Select-Parameters
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'readxlat.sqc'  !Read xlattable
#Include 'gexbnahp.sqc'  
#include 'gexbnmdt.sqc'
#Include 'getposnm.sqc'   !get position title  !ISDVMXD added for ITG#60311 on 05/08/2009