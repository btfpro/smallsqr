!***********************************************************************
! GEXBN818:  Reset Akron FP Code to '5'                                *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXBN818 :            Reset Akron FP Code to '5'                     *
!                                                                      *
! Narrative:            When employees move out of benefit programs,   *
!                       their Akron FP Code needs to be reset to '5'   *
!                       for current and future rows.                   *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           ben_prog_partic                                *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                                                                      *
! Written by:           Jim Hutchison                                  *
!                                                                      *
! Normally Run:         Monthly                                        *
!                                                                      *
! Control Parms:        None                                           *
!                                                                      *
!***********************************************************************

!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! JDH       09/01/98   Initial Creation                               *
! GEX_SEC_REENG 2015-06-24 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)


#define #column1  001
#define #column2  020
#define #column3  057
#define #column4  071
#define #column5  087
#define #column6  102
#define #column7  116


Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report


Begin-Heading 7
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg01.sqc'

  Print 'As Of Date: '       (3,1)
  Do Format-DateTime($AsOfDate, $out, {DEFDATE}, '', '')
  Print $out ()

  Print 'EMPLOYEE'           (+3,{#column1})
  Print 'BENEFIT'            (+0,{#column3})
  Print 'SERVICE'            (+0,{#column4})
  Print 'AKRON'              (+0,{#column7})

  Print 'ID'                 (+1,{#column1})
  Print 'NAME'               (+0,{#column2})
  Print 'PROGRAM'            (+0,{#column3})
  Print 'DATE'               (+0,{#column4})
  Print 'EFFDT'              (+0,{#column5})
  Print 'EFFSEQ'             (+0,{#column6})
  Print 'FP CODE'            (+0,{#column7})
End-Heading


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      = 'GEXBN818'
  Let $ReportTitle   = 'Employees who had Akron FP Code Value Reset'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show ' '
  Show 'Report Began:'
  Show '  Date = ' $ReportDate
  Show '  Time = ' $ReportTime

  Do Edit-Pay-Calendar
  Let $AsOfDate = $effdt_dbf
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
Begin-Select On-Error=P260-SQL-Error-Found('P200-Main-Process')
bpp.benefit_program
pd.name
e.service_dt
j.emplid
j.empl_rcd
j.effdt
j.effseq
j.gex_fp_code

  Let $emplid      = &j.emplid
  Let #empl_rcd    = &j.empl_rcd
  Let $effdt       = &j.effdt
  Let #effseq      = &j.effseq
  Let $gex_fp_code = &j.gex_fp_code

  Let $Year4 = '1'
  Do Format-DateTime(&e.service_dt,$service_dt,{DEFYMD},'','')

  Evaluate &bpp.benefit_program
    When = 'R07'
    When = 'R08'
    When = 'R09'
    When = 'R10'
    When = 'R11'
    When = 'R14'
    When = 'R15'
    When = 'R16'
      If $service_dt > '1993/12/01'
        Do P210-Update-Current-Row
      End-If
      Break
    When = 'R12'
      If $service_dt > '1994/07/01'
        Do P210-Update-Current-Row
      End-If
      Break
    When = 'R13'
      If $service_dt > '1994/10/23'
        Do P210-Update-Current-Row
      End-If
      Break
    When = 'R29'
    When = 'R30' 
      If $service_dt >= '1998/01/01'
        Do P210-Update-Current-Row
      End-If
      Break
    When-Other
      Do P210-Update-Current-Row
  End-Evaluate

From   ps_ben_prog_partic     bpp,
       ps_personal_data       pd,
       ps_employment          e,
       ps_job                 j

Where  bpp.effdt              =
      (Select Max(effdt)
       From   ps_ben_prog_partic
       Where  emplid          = bpp.emplid
       And    empl_rcd       = bpp.empl_rcd
       And    cobra_event_id  = bpp.cobra_event_id
       And    effdt          <= $AsOfDate)

And    j.emplid               = bpp.emplid
And    j.empl_rcd            = bpp.empl_rcd

And    j.effdt                =
      (Select Max(effdt)
       From   ps_job
       Where  emplid          = j.emplid
       And    empl_rcd       = j.empl_rcd
       And    effdt          <= $AsOfDate)

And    j.effseq               =
      (Select Max(effseq)
       From   ps_job
       Where  emplid          = j.emplid
       And    empl_rcd       = j.empl_rcd
       And    effdt           = j.effdt)

And    j.gex_fp_code          = '4'

And    e.emplid               = j.emplid
And    e.empl_rcd            = j.empl_rcd

And    pd.emplid              = j.emplid

Order By pd.name
End-Select
End-Procedure


Begin-Procedure P210-Update-Current-Row
#debug9 Show 'P210-Update-Current-Row'
  Let $Data-Found-Flag = 'Y'

  Begin-SQL On-Error=P260-SQL-Error-Found('P210-Update-Current-Row')
    Update ps_job
       Set gex_fp_code  = '5'
     Where emplid       = &j.emplid
       And empl_rcd    = &j.empl_rcd
       And effdt        = &j.effdt
       And effseq       = &j.effseq
  End-SQL

  Add #sql-count To #total-sql-count

  Do P240-Print-Row

  Do P220-Select-Future-Rows
End-Procedure


Begin-Procedure P220-Select-Future-Rows
#debug9 Show 'P220-Select-Future-Rows'
Begin-Select On-Error=P260-SQL-Error-Found('P220-Select-Future-Rows')
j2.emplid
j2.empl_rcd
j2.effdt
j2.effseq
j2.gex_fp_code

  Let $emplid      = &j2.emplid
  Let #empl_rcd    = &j2.empl_rcd
  Let $effdt       = &j2.effdt
  Let #effseq      = &j2.effseq
  Let $gex_fp_code = &j2.gex_fp_code

  Do P230-Update-Future-Rows
  Do P240-Print-Row

From   ps_job         j2

Where  j2.emplid       = &j.emplid
And    j2.empl_rcd    = &j.empl_rcd
And    j2.effdt        > &j.effdt
And    j2.gex_fp_code <> '5'
End-Select
End-Procedure


Begin-Procedure P230-Update-Future-Rows
#debug9 Show 'P230-Update-Future-Rows'
  Begin-SQL On-Error=P260-SQL-Error-Found('P230-Update-Future-Rows')
    Update ps_job
       Set gex_fp_code  = '5'
     Where emplid       = &j2.emplid
       And empl_rcd    = &j2.empl_rcd
       And effdt        = &j2.effdt
       And effseq       = &j2.effseq
  End-SQL

  Add #sql-count To #total-sql-count
End-Procedure


Begin-Procedure P240-Print-Row
#debug9 Show 'P240-Print-Row'
  Do Format-DateTime($effdt, $effdt_out, {DEFMDY}, '', '')
  Do Format-DateTime(&e.service_dt, $service_date, {DEFMDY}, '', '')

  Print $emplid              (+1,{#column1})      !Edit xxx-xx-xxxx ! GEX_SEC_REENG 2015-06-24 Vahini Katta  
  Print &pd.name             (+0,{#column2},030)
  Print &bpp.benefit_program (+0,{#column3})
  Print $service_date        (+0,{#column4})
  Print $effdt_out           (+0,{#column5})
  Print #effseq              (+0,{#column6})      Edit 999999
  Print $gex_fp_code         (+0,{#column7})
End-Procedure


Begin-Procedure P260-SQL-Error-Found($Proc_Name) 
#debug9 Show 'P260-SQL-Error-Found'
  Display 'SQL Error in ' 
  Display $Proc_Name 
  Display $_sql-error
  Display 'sql-status:' 
  Display #_sql-status 
End-Procedure


Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  Else
    Display ''
    Display #total-sql-count 888,888,888 Noline
    Display ' ps_job rows updated'
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc
  Do Get-Current-DateTime    !curdttim.sqc

  Show ' '
  Show 'Report Ended:'
  Show '  Date = ' $ReportDate
  Show '  Time = ' $ReportTime
  Show ' '
  Show 'Successful end of report'
End-Procedure


#include 'gexxx920.sqc'  !Get ben single row run control
#include 'gexbnmdt.sqc'  !Get last confirmed pay period
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
