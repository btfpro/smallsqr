!***********************************************************************
!  GEXPL026:  STORE DEMOGRAPHIC REPORT                                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 2000 Giant Eagle,Inc. All Rights Reserved              *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPL026:  		STORE DEMOGRAPHIC REPORT                       * 
!                                                                      *        
! Narrative:		This report will help Hr managers manage       *
!                       multiple stores, getgos, pharmacies, etc.      *
!                       The data listed will represent key employee    *
!                       demographic information - job, account code,   *
!                       status, rate of pay, race, birthday,           *
!                       full/part time, etc for a point of reference.  *

! #Debugx Used:	        #debug9 paragraph trace                        *
!                       #debug8,7 data returned from sql calls         *
!                                                                      *  
! SQL Tables:		gex_dept_tbl                                   *
!                       employment                                     *
!                       personal_data                                  *
!                       job                                            *
!                                                                      *  
! Written by:	        Tony Labra                                     *       
!                                                                      *
! Normally Run:	        Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!			  Company Division Code                        *
!			  Company  	                               *
!			  Paygroup  	                               *
!			  Deptid	                               *
!			  Employee Status	                       *
!			  Account Code                                 *
!			  As Of Date                                   *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS	DATE		DESCRIPTION OF THE CHANGE              *
!***********************************************************************
!  SAXL		08/03/2005	Initial Creation                       *
! GEX-MXT       03/24/2008      Fixed for REHIRE DT issue in 9.0       *
! GEX-MXT       03/31/2008      Ethnicity changes                      *
! ISDVASS 04/09/2008  Used $WHERE_SELECT_ASOFDATE instead of sysdate to*
!                     pull rehire_dt from the custom sqc               *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup02.sqc'

!AXL 03/01/2001 New Setup section
!********************
Begin-Setup
!********************
 
  #define #col_name		1
  #define #col_emplid     	30
  #define #col_hire_dt		41
  #define #col_sts		53
  #define #col_acctcdtitle	58
  #define #col_jobtitle		71
  #define #col_regtemp          84
  #define #col_wrk_sts		96
  #define #col_stdhrs           102
  #define #col_bnftlvl		107
  #define #col_grade            113
  #define #col_rate		118
  #define #col_student		128
  #define #col_inflhrs		133
  #define #col_seasonal		139
  #define #col_volhrs		144
  #define #col_union            150
  #define #col_birthdate	157
  #define #col_race         	169
  #define #col_gender		172
    
End-Setup
!AXL 03/01/2001 - End
!*********************************************************************
begin-report
!*********************************************************************

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  do Init-Report
  do Main

  do EOJ
  do Stdapi-Term

end-report

!***********************************************************************
Begin-Heading 9
!***********************************************************************
  #Include 'stdhdg02.sqc'

  Print $pay_period         (3,)  Center

  if $Deptid <> $priorDeptid
    do Get-Department-Name
    move $Deptid to $priorDeptid
  end-if

  print 'Deptid'               (4,1)
  print $Deptid                (0,13)
  print $DeptName              (0,+2)

  Print 'R'			(+2,{#col_race})

  Print 'Vol'			(+1,{#col_volhrs})
  Print 'a'			(,{#col_race})
  Print 'S'			(,{#col_gender})

  Print 'Emp'	                (+1,{#col_sts})
  Print 'Acct Cd'	        (,{#col_acctcdtitle})
  Print 'Reg'                   (,{#col_regtemp})
  Print 'Wrk'			(,{#col_wrk_sts})
  Print 'Std'			(,{#col_stdhrs})
  Print 'Bnft'                  (,{#col_bnftlvl})
  Print 'Sal'                   (,{#col_grade})
  Print 'Hourly'		(,{#col_rate})
  Print 'Stu'			(,{#col_student})
  Print 'Infl'			(,{#col_inflhrs})
  Print 'Snl'			(,{#col_seasonal})
  Print 'Low'			(,{#col_volhrs})
  Print 'Union'                 (,{#col_union})
  Print 'Birth'			(,{#col_birthdate})
  Print 'c'			(,{#col_race})
  Print 'e'		        (,{#col_gender})

  Print 'Name'   		(+1,{#col_name})
  Print 'Emplid'	        (,{#col_emplid})
  Print 'Svc Date'   		(,{#col_hire_dt})
  Print 'Sts'			(,{#col_sts})
  Print 'Name'		        (,{#col_acctcdtitle})
  Print 'Job Title'		(,{#col_jobtitle})
  Print 'Temp'                  (,{#col_regtemp})
  Print 'Sts'		        (,{#col_wrk_sts})
  Print 'Hrs'			(,{#col_stdhrs})
  Print 'Lvl'                   (,{#col_bnftlvl})
  Print 'Grd'                   (,{#col_grade})
  Print 'Rate'	         	(,{#col_rate})
  Print 'Ind'			(,{#col_student})
  Print 'Hrs'			(,{#col_inflhrs})
  Print 'Emp'			(,{#col_seasonal})
  Print 'Hrs'			(,{#col_volhrs})
  Print 'Cd'	                (,{#col_union})
  Print 'Date'			(,{#col_birthdate})
  Print 'e'			(,{#col_race})
  Print 'x'		        (,{#col_gender})

  Print '-'                    (+1,{#col_name},173)  Fill
!AXL 03/01/2001 - End  
End-Heading

!***********************************************************************
begin-procedure Init-Report
!***********************************************************************
#debug9 show 'Init-Report'

  Let $GEXXX900_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Company_Alias  = 'J.COMPANY'
  Let $GEXXX901_Paygroup_Alias = 'J.PAYGROUP'
  Let $GEXXX902_Deptid_Alias   = 'J.DEPTID'
  Let $GEXXX903_Emp_Stat_Alias = 'J.EMPL_STATUS'
  Let $GEXXX907_Div_CD_Alias   = 'GDT.GEX_COMPANY_DIV_CD'                    
  Let $GEXXX909_Acct_CD_Alias  = 'J.ACCT_CD'

  If $prcs_process_instance = ''
    Do SQRW-Run-Controls  
  Else
    Do Process-Scheduler-Run-Controls
  End-if

  let $ReportID = 'GEXPL026'
  let $ReportTitle = 'Store Demographic Report'
  Let $Order_By      = 'Company, DeptID, Acct Cd, Name'

  display $ReportID noline
  display ' - '     noline
  display $ReportTitle 

  date-time () hh:mi:ss &TimeBegan
  date-time () MM/DD/YYYY  &DateBegan
  show 'Report Began at ' &TimeBegan ' on '  &DateBegan

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
 
  Show '$GEXXX900_Include_Company_Criteria 	    = ' $GEXXX900_Include_Company_Display_Criteria
  Show '$GEXXX901_Include_Company_Paygroup_Criteria = ' $GEXXX901_Include_Company_Paygroup_Display_Criteria
  Show '$GEXXX902_Include_Deptid_Criteria           = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA         = ' $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA
  Show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA           = ' $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  Show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA          = ' $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA
  Show '$WHERE_SELECT_ASOFDATE                      = ' $WHERE_SELECT_ASOFDATE 
  Show '$ORDER_BY                                   = ' $ORDER_BY  

  Do Print-Cover-Page

end-procedure

!***********************************************************************
Begin-Procedure SQRW-Run-Controls 
!***********************************************************************
#debug9 show 'SQRW-Run-Controls'

  Do GEXXX950-Input-Parameters
  Let $WHERE_SELECT_ASOFDATE = $X000_WHERE_SELECT_ASOFDATE
 
End-Procedure

!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls 
!***********************************************************************
#debug9 show 'Process-Scheduler-Run-Controls'

  Do GEXRCHR1-SELECT-PARAMETERS
  Do GEXXX900-Select-Company-Parameters
  Do GEXXX901-Select-Company-Paygroup-Parameters
  Do GEXXX902-Select-Deptid-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters
  Do GEXXX907-Select-Div-CD-Parameters 
  Do GEXXX909-Select-Acct-CD-Parameters

  Let $WHERE_SELECT_ASOFDATE = $GEX_RC_HR.AsOfDate
 
  If Rtrim ($GEX_RC_HR.AsOfDate, ' ') = ''
    Let $WHERE_SELECT_ASOFDATE = $asoftoday
  End-If

End-Procedure

!***********************************************************************
begin-procedure Print-Cover-Page
!***********************************************************************
#debug9 show 'Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)

  Print '$GEXXX900_Include_Company_Criteria                   ='   (+1,5)
  Print  $GEXXX900_Include_Company_Display_Criteria                (0,+2)

  Print '$GEXXX901_Include_Company_Paygroup_Criteria          ='   (+1,5)
  Print  $GEXXX901_Include_Company_Paygroup_Display_Criteria       (0,+2)

  Print '$GEXXX902_Include_Deptid_Criteria                    ='   (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria                  (0,+2)

  Print '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA                  ='   (+1,5)
  Print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA                (0,+2)

  Print '$GEXXX907_INCLUDE_DIV_CD_CRITERIA                    ='   (+1,5)
  Print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA                   (0,+2)

  Print '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA                   ='   (+1,5)
  Print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA                 (0,+2)

  Print '$WHERE_SELECT_ASOFDATE                               ='   (+1,5)
  Print  $WHERE_SELECT_ASOFDATE                                    (0,+2)

  Print 'SORT ORDER FOR THIS REPORT RUN:'                          (+3,2)
  Print '$Order_By                                            ='   (+1,5)
  Print $Order_By                                                  (0,+2)

  Let #PAGE-COUNT = 0
 
End-Procedure

!*********************************************************************
begin-procedure Main
!*********************************************************************
#debug9 show 'Main'

  let $sql-statement = 'Main'

begin-select 
J.COMPANY	(,) On-Break
	            Print=Never
                    Level=1        
J.PAYGROUP
J.DEPTID	(,) On-Break
	            Print=Never
                    Level=2
                    Before=Before-DeptId
		    After=After-DeptId
		    Save=$prev_dept
                  
J.JOBCODE
J.ACCT_CD
J.EMPLID 
J.EMPL_RCD
j.empl_status
J.HOURLY_RT
J.FULL_PART_TIME
J.REG_TEMP
J.STD_HOURS
J.GEX_STUDENT_IND
J.GEX_INFLATED_HRS
J.GEX_SEASONAL_EMP
J.GEX_VOLUN_LOW_HRS
J.GRADE
substr(J.ELIG_CONFIG2,4,1)	&bnftlvl
b.UNION_CD
E.HIRE_DT
!E.REHIRE_DT		!GEX-MXT COMMENTED FOR REHIRE DATE LOGIC
E.SERVICE_DT
PD.NAME
PD.BIRTHDATE
PD.SEX
DW.ETHNIC_GROUP     
Z.DESCRSHORT
SYSDATE        		&GEXJOB_REH_ASOFDATE 	!GEX-MXT ADDED FOR REHIRE DATE LOGIC IN 9.0

 
  Do MAP-EMPLID
  let $emplid   =  &MAP.EMPLID
  Let $Company 	=  &J.COMPANY
  Let $DeptID  	=  &J.Deptid
  Let $jobcode	=  &J.JOBCODE
  Let $acctcd   =  &j.acct_cd
  let $reg_temp =   &j.reg_temp

  evaluate &DW.ETHNIC_GROUP 
    when = '1'  !White
      let $race     ='W'
    when = '2'  !Black
      let $race     ='B'
    when = '3'  !Hispanic
      let $race     ='H'
    when = '4'  !Asian/Pacific Islander
      let $race     ='AS'
    when = '5'  !American Indian/Alaskan Native
      let $race     ='AI'
    when-other	
      let $race     ='NA'
  end-evaluate
	
  do get-job-title

   If &j.full_part_time ='F'
      Let $Work_Sts ='FT'
   Else
      Let $Work_sts ='PT'
   End-If

  ! GEX-MXT 03/24/2008 Fixed for REHIRE DT-BEGIN
   let $GEXJOB_REH_EMPLID   = &J.emplid
   let #GEXJOB_REH_EMPLRCD  = &J.EMPL_RCD
!   let $GEXJOB_REH_ASOFDATE = &GEXJOB_REH_ASOFDATE			! ISDVASS - used $WHERE_SELECT_ASOFDATE instead of sysdate
   Let $GEXJOB_REH_ASOFDATE = $WHERE_SELECT_ASOFDATE    ! ISDVASS - used $WHERE_SELECT_ASOFDATE instead of sysdate
   do Get-Job-Rehire-Dt
  ! GEX-MXT 03/24/2008 Fixed for REHIRE DT -END
  
  !GEX-MXT MODIFIED FOR REHIRE DATE LOGIC-BEGIN
  !if isblank(&e.rehire_dt) = 0
  if isblank($GEXJOB_REH_REHIRE_DT) = 0
     !let $start_dt     = &e.rehire_dt
     let $start_dt     = $GEXJOB_REH_REHIRE_DT
  else 
     let $start_dt     = &e.hire_dt
  end-if
  !GEX-MXT MODIFIED FOR REHIRE DATE LOGIC-END
    
  let $start_dt_print = datetostr(strtodate($start_dt,'DD-MON-YYYY'),'MM/DD/YYYY')

  let $svcdt_print	=  datetostr(&E.SERVICE_DT,'MM/DD/YYYY')
  let $birthdt_print	=  datetostr(&PD.BIRTHDATE,'MM/DD/YYYY')

  move 'REG_TEMP' to $FieldName
  move &J.reg_temp to $Plan_Type
  move $reg_temp to $FieldValue
  do Read-Translate-Table
  let $regtemp_title = RTRIM($XlatShortName,' ')

  Add 1 to #record_count
  Add 1 to #dpt_count
  Do Print-Detail
 
 FROM PS_JOB J,
      PS_JOB_LABOR B,
      PS_EMPLOYMENT E,
      !PS_DIVERSITY DI,
      PS_DIVERS_ETHNIC EI,
      PS_ETHNIC_GRP_TBL DW,
      PS_PERSONAL_DATA PD,
      ps_gex_dept_tbl GDT,
      PS_acct_cd_TBL Z
  WHERE J.EMPLID    = E.EMPLID 
    AND J.EMPL_RCD  = E.EMPL_RCD
    AND E.EMPLID    = PD.EMPLID
    !AND PD.EMPLID   = DI.EMPLID 
    AND PD.EMPLID   = EI.EMPLID 
    AND EI.PRIMARY_INDICATOR = 'Y' 	!GEX-MXT ADDED FOR ETHNICITY CHANGES
    AND EI.ETHNIC_GRP_CD = DW.ETHNIC_GRP_CD
    AND J.EFFDT =
        (SELECT MAX(EFFDT) FROM PS_JOB
        WHERE J.EMPLID    = EMPLID
          AND J.EMPL_RCD = EMPL_RCD
          AND EFFDT <= $WHERE_SELECT_ASOFDATE)
    AND J.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE J.EMPLID    = EMPLID
          AND J.EMPL_RCD = EMPL_RCD
          AND J.EFFDT     = EFFDT)    
    AND gdt.deptid                = j.deptid
    AND gdt.effdt                 =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid             = j.deptid
       And    effdt             <= $WHERE_SELECT_ASOFDATE)
    AND gdt.sequence_number       =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid             = gdt.deptid
       And    effdt              = gdt.effdt)
    AND j.EMPLID = B.EMPLID
    AND j.EMPL_RCD = B.EMPL_RCD
    AND B.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOB_LABOR B_ED
        WHERE b.EMPLID = B_ED.EMPLID
          AND b.EMPL_RCD = B_ED.EMPL_RCD
          AND B_ED.EFFDT <= j.EFFDT)
    AND B.EFFSEQ =
        (SELECT MAX(B_ES.EFFSEQ) FROM PS_JOB_LABOR B_ES
        WHERE B.EMPLID = B_ES.EMPLID
          AND B.EMPL_RCD = B_ES.EMPL_RCD
          AND B.EFFDT = B_ES.EFFDT)
    And  Z.ACCT_CD = J.acct_cd
    AND DW.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_ETHNIC_GRP_TBL B_ED
        WHERE DW.SETID = B_ED.SETID
          AND DW.ETHNIC_GRP_CD = B_ED.ETHNIC_GRP_CD
          AND B_ED.EFFDT <= $WHERE_SELECT_ASOFDATE)
    !And  Z.EFFDT = (SELECT MAX(Z1.EFFDT)
     !  FROM   PS_ACCT_CD_TBL Z1
      ! WHERE  Z1.ACCT_CD = J.acct_cd
        ! AND  Z1.EFFDT <= $WHERE_SELECT_ASOFDATE)
    And   [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
    And   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
    And   [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
    And   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
    And   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
    And   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
 
Order by j.company, j.deptid, Z.DESCRSHORT, pd.name
  
end-select
  
end-procedure

!***********************************************************************
Begin-procedure Before-Deptid
!***********************************************************************
#debug9 show 'Before-Deptid'

  New-Page
END-PROCEDURE

!***********************************************************************
Begin-procedure After-Deptid
!***********************************************************************
#debug9 show 'After-Deptid'

  Print 'Number of Employees in Deptid ' (+5,5)
  Print $prev_dept				(,+1)
  Print ' = '					()
  Print #dpt_count				()	edit 99999

  let #dpt_count = 0 

END-PROCEDURE

!************************************************************************
BEGIN-PROCEDURE MAP-EMPLID
!************************************************************************
   let $TWN_USERID = '99999999999'

BEGIN-Select

MAP.SSN
MAP.EMPLID
MAP.EMPL_RCD

FROM PS_GEX_EMPLID_MAPP MAP
Where MAP.ssn	   = &j.EMPLID
  and MAP.empl_rcd = &j.EMPL_RCD

END-SELECT

END-PROCEDURE GET-USERID

!***********************************************************************
begin-procedure Print-Detail
!***********************************************************************
#debug9 show 'Print-Detail'
  
  Print &pd.name	    	(+1,{#col_name})	
  Print &j.emplid		(,{#col_emplid})	
  Print $svcdt_print	 	(,{#col_hire_dt})   
  print &j.empl_status          (,{#col_sts})
  Print &Z.DESCRSHORT		(,{#col_acctcdtitle})
  Print $JobTitleAbbrv		(,{#col_jobtitle})
  Print $regtemp_title          (,{#col_regtemp})
  Print $work_Sts		(,{#col_wrk_sts})
  Print &j.std_hours		(,{#col_stdhrs})
  Print &bnftlvl		(,{#col_bnftlvl})
  Print &j.grade		(,{#col_grade})
  Print &j.hourly_rt	      	(,{#col_rate})		edit 99.99999
  Print &j.gex_student_ind	(,{#col_student})
  print &J.GEX_INFLATED_HRS	(,{#col_inflhrs})
  print &J.GEX_SEASONAL_EMP	(,{#col_seasonal})
  print &J.GEX_VOLUN_LOW_HRS    (,{#col_volhrs})
  Print &b.union_cd             (,{#col_union})
  Print $birthdt_print		(,{#col_birthdate})
  print $race                   (,{#col_race})  
  print &pd.sex			(,{#col_gender})

End-Procedure

!***********************************************************************
Begin-Procedure EOJ
!***********************************************************************

  if #record_count = 0
    print 'No Data Selected This Run'   (25,) Center
  end-if
 
  Do Reset			

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'

End-Procedure

!***********************************************************************
begin-procedure Reset
!***********************************************************************
  move 'Y' to $End_of_Report
  if #MsgFlagW
     print $MsgTextW (+2,1)
  end-if
end-procedure

#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API

#include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'getdptnm.sqc'  !Get-Department-Name procedure
#include 'getjobtl.sqc'  !Get Job Title
#Include 'readxlat.sqc'  !Get translate Values

#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx921.sqc'  !Get HR single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls
#include 'gexrehdt.sqc'	 !GEX-MXT 03/24/2008 Fixed for REHIRE DT



