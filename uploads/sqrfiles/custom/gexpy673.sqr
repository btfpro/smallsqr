!***********************************************************************
! GEXPY621:  New Hire File                                             *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! GEXPY673 :            CORRECTIONS TO NEW HIRE FILE                   *
!                                                                      *        
! Narrative:            This program creates a file of information on  *
!                       corrections to new hires.                      *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           * 
!                                                                      *  
! SQL Tables:           personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                                                                      *
! Written by:           Vahini Katta                                   *
!                                                                      *
! Normally Run:         Adhoc                                          *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Emplid                                       *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! ISDVVXK   01/11/2011  Initial Creation                               *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Portrait)
#Include 'usarpt.sqc'    !Get USA variables

Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  do Z010-set-system-commands-for-ftp  
  do Z020-exec-script-to-ftp-file      
  Do P300-Finalization
End-Report


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      = 'GEXPY673'
  Let $ReportTitle   = 'NEW HIRE FILE'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime

  If $prcs_process_instance = ''
    Input $EmplidCriteria         Maxlen=30  'Enter Emplid(s)'
    Input $GEX_RC_PAY.Last_Name         Maxlen=30  'Enter Contact Last Name'
    Input $GEX_RC_PAY.First_Name        Maxlen=30  'Enter Contact First Name'
    Input $GEX_RC_PAY.Contact_Phone     Maxlen=12  'Enter Contact Phone'
    Input $GEX_RC_PAY.Contact_Phone_Ext Maxlen=4   'Enter Contact Phone Ext'
    let $FILEPATH='C:\TEMP\'
    let $Prcs_Run_Cntl_ID = '1'
		let $Prcs_OprID = 'ISDVVXK'	
  Else
    Do GEXXX922-Select-Parameters
    do Select-Parameters
    LET $FILEPATH='{OUTFILE}'	 
  End-If
  if isnull($EmplidCriteria)
    move '' to $SlctEmplidCriteria
    move '' to $SlctEmplidCriteria1
  else
    let $SlctEmplidCriteria = 'and J.EMPLID in (' || $EmplidCriteria || ')' 
    let $SlctEmplidCriteria1 = 'and JB.EMPLID in (' || $EmplidCriteria || ')'
  end-if 
  show '$SlctEmplidCriteria :' $SlctEmplidCriteria
  
  Let $Year4 = '1'
  Do Format-DateTime($AsofToday, $ThruDate_YMD, {DEFYMD}, '', '')
  Let $ThruDate_YMD2 = Substr($ThruDate_YMD,1,4) ||
                       Substr($ThruDate_YMD,6,2) ||
                       Substr($ThruDate_YMD,9,2)
  Do P140-Open-File
  Do P150-Row-Count
  Do P160-Write-Header-Record
End-Procedure

Begin-Procedure Select-Parameters
BEGIN-SELECT
RC1.EMPLID

 if isnull($EmplidCriteria)
    let $EmplidCriteria = $EmplidCriteria ||''''|| &RC1.EMPLID || ''''
 else
    let $EmplidCriteria = $EmplidCriteria ||','||''''|| &RC1.EMPLID || ''''
 end-if
   
FROM PS_GEX_RC_GEXPY673 RC1
WHERE RC1.oprid       = $prcs_oprid
AND RC1.run_cntl_id = $prcs_run_cntl_id
END-SELECT
End-Procedure Select-Parameters

begin-procedure P140-Open-File
#debug9 Show 'P140-Open-File'
  Let $file1 = $FILEPATH || Lower($ReportID) || '.dat'

  Open $file1
       As 1
       For-Writing
       Record=537:Fixed
       Status=#filestat

  If #filestat != 0
     Show 'Error opening output file.  Program terminating.'
     Stop
  End-If
End-Procedure

begin-procedure P150-Row-Count
Begin-Select
Count(*) &row_count

  Let #Row_Count = &row_count
  Move #row_count To $Row_Count 099999999

From   ps_personal_data p,
       ps_employment    m, 
       ps_job           jb,
       PS_PERS_NID n
Where  p.emplid         = jb.emplid
And    jb.emplid        = m.emplid
And    jb.empl_rcd       = m.empl_rcd
and    jb.effdt = (select max(jb1.effdt) from ps_job jb1
                   where jb1.emplid=jb.emplid
                   and jb1.empl_rcd=jb.empl_rcd
                   and jb1.effdt<=sysdate)
and    jb.effseq= (select max(jb2.effseq) from ps_job jb2
                   where jb2.emplid=jb.emplid
                   and jb2.empl_rcd=jb.empl_rcd
                   and jb2.effdt=jb.effdt)                   
and n.emplid           = p.emplid
and n.country          = {nid_country}
and n.national_id_type = $payroll_nid_type
[$SlctEmplidCriteria1]  
End-Select
End-Procedure

Begin-Procedure P160-Write-Header-Record
#debug9 Show 'P160-Write-Header-Record'
  Add 1 To #recs-written

  Write 1 From '01':2
               $ThruDate_YMD2:8
               ' ':3
               $Row_Count:9
               ' ':515
    Status=#filestat

  If #filestat != 0
     Show 'Error writing output file.  Program terminating.'
     Stop
  End-If
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
Begin-Select
j.company   ()  On-Break  Print=Never  Before=P210-Get-Company-Data
j.emplid
j.effdt
j.action_dt
pd.name
pd.birthdate
p1.national_id
pd.address1
pd.address2
pd.address3
pd.city
pd.state
pd.postal
 
  Let #Row_Count = #Row_Count + 1
  Move #row_count To $Row_Count 099999999
  Do P220-Format-Record
  Do P230-Write-Detail-Record

From   ps_personal_data pd,
       ps_employment    e,
       ps_job           j,
       PS_PERS_NID P1
Where  pd.emplid         = j.emplid
And    j.emplid          = e.emplid
And    j.empl_rcd       = e.empl_rcd
and    j.effdt = (select max(j1.effdt) from ps_job j1
                   where j1.emplid=j.emplid
                   and j1.empl_rcd=j.empl_rcd
                   and j1.effdt<=sysdate)
and    j.effseq= (select max(j2.effseq) from ps_job j2
                   where j2.emplid=j.emplid
                   and j2.empl_rcd=j.empl_rcd
                   and j2.effdt=j.effdt)                   
and p1.emplid           = pd.emplid
and p1.country          = {nid_country}
and p1.national_id_type = $payroll_nid_type
[$SlctEmplidCriteria]
Order By j.company, pd.name
End-Select
End-Procedure


Begin-Procedure P210-Get-Company-Data
#debug9 Show 'P210-Get-Company-Data'
Begin-Select
ct.federal_ein
ct.descr
ct.address1
ct.address2
ct.address3
ct.city
ct.state
ct.postal
From  ps_company_tbl ct
Where ct.company = &j.company
And   ct.effdt   =
     (Select Max(effdt)
      From   ps_company_tbl
      Where  company  = ct.company
      And    effdt   <= sysdate)
End-Select
End-Procedure


Begin-Procedure P220-Format-Record
#debug9 Show 'P220-Format-Record'
  Let $ct.postal = Translate(&ct.postal,'-','')
  Let $pd.postal = Translate(&pd.postal,'-','')

  If Length($ct.postal) <> 9
    Let $ct.postal = Substr($ct.postal,1,5)
  End-If

  If Length($pd.postal) <> 9
    Let $pd.postal = Substr($pd.postal,1,5)
  End-If

  Let $GEX_RC_PAY.Contact_Phone = Translate($GEX_RC_PAY.Contact_Phone,'/-','')

  Let $Name = &pd.name
  Do Rotate-Name

  Let $Year4 = '1'
  Do Format-DateTime(&pd.birthdate, $Birthdate, {DEFYMD}, '', '')
  Let $Birthdate2 = Substr($Birthdate,1,4) ||
                    Substr($Birthdate,6,2) ||
                    Substr($Birthdate,9,2)

  Let $Year4 = '1'
  Do Format-DateTime(&j.effdt, $Hire_Dt, {DEFYMD}, '', '')
  Let $Hire_Dt2 = Substr($Hire_Dt,1,4) ||
                  Substr($Hire_Dt,6,2) ||
                  Substr($Hire_Dt,9,2)
End-Procedure


Begin-Procedure P230-Write-Detail-Record
#debug9 Show 'P230-Write-Detail-Record'
  Add 1 To #recs-written
do Get-Emp-Ssn (&j.emplid, $Ssn_Out)   
  Write 1 From '02':2
               &ct.federal_ein:9
               &ct.descr:45
               &ct.address1:40
               &ct.address2:40
               &ct.address3:40
               &ct.city:25
               &ct.state:2
               $ct.postal:9
               $GEX_RC_PAY.FIRST_NAME:16
               $GEX_RC_PAY.LAST_NAME:30
               $GEX_RC_PAY.Contact_Phone:10
               $GEX_RC_PAY.Contact_Phone_Ext:5
               $Ssn_Out:9              
               $FirstName:16
               $MidInitial:16
               $LastName:30
               $Birthdate2:8
               &ct.state:2
               $Hire_Dt2:8
               &pd.address1:40
               &pd.address2:40
               &pd.address3:40
               &pd.city:25
               &pd.state:2
               $pd.postal:9
               ' ':19
    Status=#filestat

  If #filestat != 0
     Show 'Error writing output file.  Program terminating.'
     Stop
  End-If
End-Procedure


Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'
  Do Format-Number(#recs-written,$recs-written,'888,888,888')

  Show ''
  Show $recs-written ' records written to ' $file1
  Show ''

  Do P310-Close-File

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc
  Show 'Successful end of report'
End-Procedure

!***********************************************************************
begin-procedure Z010-set-system-commands-for-ftp
!***********************************************************************

  do GEXXX951-Select-Oracle-Instance
  let $db_name = lower($GEXXX951_Oracle_Instance)
  let $pshome = getenv('PS_HOME')
  let $cd_command_bindir = 'cd '||'$BINDDIR'
  show '$db_name :' $db_name
  show '$pshome  :' $pshome
  show '$cd_command_bindir :' $cd_command_bindir
  let $ftp_command = '/bin/ksh  ' || $pshome || '/scripts/gex_shell/' || 'gexpy673.sh '||$db_name

end-procedure

!***********************************************************************
begin-procedure Z020-exec-script-to-ftp-file
!***********************************************************************
     date-time () HH:MI:SS &ProcessTime
     show 'Executing FTP process started at: ' &ProcessTime

     show 'Z020-exec-script-to-ftp-file'
      CALL SYSTEM USING $ftp_command #sys_status
      show '#sys_status:' #sys_status
      !if #sys_status <> 0
	    ! show 'Command ' $ftp_command ' Failed'
	    ! show 'FTP exec script within gexpy673 failed'
	    !end-if

end-procedure

Begin-Procedure P310-Close-File
#debug9 Show 'P310-Close-File'
  Close 1
  
  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop
  End-If
End-Procedure

#include 'gexxx922.sqc'  !Get pay single row run control
#include 'askftd.sqc'    !Ask-From-Thru-Date procedure
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#Include 'rotname3.sqc'  !Rotate-Name Routine
#Include 'usarpt.sqc'    !Get USA variables
#Include 'getgeid.sqc'   !Get 7 digit Emplid      
#Include 'gexxx951.sqc'