!***********************************************************************
! GEXBNDEP: BenAdmin Enrollment Form Dependent Processing              *
! Clone of BASDEP00                                                    *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1988-1999 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
!      $Date:: 2/08/99 10:05a   $                                      *
!  $Revision:: 13               $                                      *
!  $Workfile:: BASDEP00.SQC     $                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
! Function: Called by GEXBNENR.SQR & GEXBNOER.SQR                      *
!                                                                      *
!         PS_DEPENDENT_BENEF - Dependents of Employee                  *
!         PS_HEALTH_DEPENDNT - Dependents with current elections       *
!         PS_LIFE_ADD_BENEFC - Life Insurance Beneficiaries            *
!         PS_SAVINGS_BENEFIC - Savings Beneficiaries                   *
!         PS_PENSION_BENEFC  - Pension Beneficiaries                   *
!                                                                      *
!                                                                      *
! Output: Dependents/Beneficiaries will be printed in a dependent/plan *
!         type matrix.                                                 *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#    INIT	DATE     	DESCRIPTION OF THE CHANGE              *        
!***********************************************************************
! 	   AXL	09/14/2000	INITIAL CREATION.                      *
!                                                                      *
!                               Re-applied GE mods to delivered        *
!                               BASDEP00.SQC to address various bugs   *
!                               and benefit from simplification with   *
!                               page-breaking routines.                *
!                                                                      *
!                               Logic check for vision coverage. Extra *
!                               column  prints when VISION is a covered*
!                               benefit, otherwise only columns for    *
!                               MEDICAL, DENTAL, & PRESCRIPTION show.  *
!                                                                      *
!          AXL  09/22/2003      Various updates to change the overall  *
!                               format and condense to 2 pages for most*
!                               people.                                *
!                                                                      *
!          AXL  11/03/2004      Various updates to change specific     *
!                               format issues made in GEXBNOER.        *
!                                                                      *
! 10847    AXL  01/25/2005      Minor change for proper page breaking  *
!                                                                      *
! 10872    AXL  05/31/2005      Format fix for Min Ann Contrib blurb.  *
!								       *
! 11151    DXS  02/13/2007      Made changes in Medical-Dental-Dependents*
!                               to partially hide dependents SSN.      *
!                               Changes in 2  places.                  *
!                               Verify-Dep-Benef-Info is not used, so  *
!                               did not make any changes there         *
!                                                                      *
! ISDVNPK 08/28/2007 Changed XLATTABLE to PSXLATITEM as part of 9.0 upgrade  
!***********************************************************************

!*********************************
Begin-Procedure Process-Dep-Benef
!*********************************

  #define BLANK_DEP_LINES     2

  !let $ContinuedPrevPage  = $BEN1-CONT-PREV-PAGE
  let $ContinuedPrevPage  = '(Continued from previous page.)'

  !let $ContinuedNextPage = $BEN1-CONT-NEXT-PAGE
  let $ContinuedNextPage = '(Section continued on next page.)'

  let #PageContinueLine  = 51	! AXL 09/14/2000
  !let #PageContinueLine  = 48
  let #PageBreakLine     = 44

!*** 'DEPENDENT/BENEFICIARIES'
  !let $Tmp_Txt = UPPER($BAS004-DEP-BENEFS)
  !print $Tmp_Txt             (+3,1) bold

!*** 'The first box lists all dependents with current health coverages on file.'
!*** 'Please make any necessary changes and identify any new dependents or beneficiaries'
!*** 'in the last box provided for you.'
!*** 'Also listed are the beneficiaries for your eligible non-health plans.'
!*** 'Please fill in either percent-of-benefit or flat-amount for primary and'
!*** 'contingent beneficiaries.'
!*** 'Beneficiaries are considered to be primary unless specified as contingent (CON).'
!*** 'For each plan type, the total of all primary percents must equal 100% and'
!*** 'the total of all contingent percents must equal 100%.'
!*** 'Only one beneficiary can be selected to receive excess (EXC) for each plan type.'

  !let $Tmp_Txt = $BAS004-T24-L01A
  !let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L02A
  !let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L03A
  !let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L04A
  !let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L05A
  !let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L06A
  !let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L07A
  !let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L08A
  !let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L09A
  !let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L10A
  !print $Tmp_Txt   (+1,1,120) WRAP 120 8
  !show 'emplid Curr-line Pagebreak(44) PgContLine(51) ' &a.emplid ' ' #current-line ' ' #PageBreakLine ' ' #PageContinueLine ' ' '$Deps_Exist ' $Deps_Exist ' $Deps_Exist_OER ' $Deps_Exist_OER
  if $ReportID = 'GEXBNENR'
     if $Deps_Exist = 'Y' and  #Current-Line >= 30	!was 37 AXL  01/25/2005 
             and #max_dep >= 5			 !AXL  01/25/2005  - Add
        do Bottom-Line
        New-Page
     else
        if #Current-Line > 39
           do Bottom-Line
           New-Page
        end-if
     end-if
  else !not enr..must be GEXBNOER
     !AXL 11/3/2004 New Lines Left Check - Begin
     if $Deps_Exist_OER = 'Y' and #Current-Line > 33
        do Bottom-Line
        New-Page
     else
        if #Current-Line > 39
           do Bottom-Line
           New-Page
        end-if
     end-if
     !AXL 11/3/2004 New Lines Left Check - End
  end-if

print 'DEPENDENT INFORMATION'          (+1,1) bold
!AXL 9/22/2003 Replace most of the old wording with new text - Begin
!let $Tmp_Txt = 'Section I lists all dependents with current insurance '
!let $Tmp_Txt = $Tmp_Txt || 'coverage and Section II lists the same dependents '
!print $Tmp_Txt     (+1,1)
!let $Tmp_Txt = $Tmp_Txt || 'with their personal information.  '
!let $Tmp_Txt = $Tmp_Txt || 'Please verify the information in both sections and '
!let $Tmp_Txt = $Tmp_Txt || 'make any corrections that are necessary to the appropriate '
!let $Tmp_Txt = $Tmp_Txt || 'section.  Section III must be completed if you wish to add '
!print $Tmp_Txt     (+1,1)
!let $Tmp_Txt = $Tmp_Txt || 'a new dependent to your coverage or if you are a new '
!let $Tmp_Txt = $Tmp_Txt || 'employee who wants to cover eligible dependents.'

let $Tmp_Text_New = 'Use this worksheet to add or delete an eligible dependents(s).'
let $Tmp_Text_New = $Tmp_Text_New || ' ''X'' under plan indicates dependent is currently '
let $Tmp_Text_New = $Tmp_Text_New || 'covered.'

print $Tmp_Text_New (+1,1) WRAP 120 2

!print $Tmp_Txt     (+1,1)
!let $Tmp_Txt = 'Beneficiaries are considered to be primary unless specified '
!let $Tmp_Txt = $Tmp_Txt || 'as contingent (''CON'').  For each plan type, the '
!let $Tmp_Txt = $Tmp_Txt || 'total of all'
!print $Tmp_Txt     (+1,1)
!let $Tmp_Txt = 'primary percents must equal 100% and the total of all contingent '
!let $Tmp_Txt = $Tmp_Txt || 'percents must equal 100%.  Only one beneficiary can be'
!print $Tmp_Txt     (+1,1)
!let $Tmp_Txt = 'selected to receive excess (''EXC'') for each plan type.'
!print $Tmp_Txt     (+1,1)
!print $Tmp_Txt   (+1,1,120) WRAP 120 6

!print 'SECTION I' (+2,1) bold
!AXL 9/22/2003 Replace most of the old wording with new text - End

  do Medical-Dental-Dependents
  !do Life-Insurance-Benef	 	AXL - 09/14/2000
  !do Savings-Investments-Benef		AXL - 09/14/2000
  !do Pension-Benef			AXL - 09/14/2000

 !print 'SECTION II' (+3,1) bold  	AXL 9/22/2003 Disable
 !do Verify-Dep-Benef-Info		AXL 9/22/2003 Disable

 ! AXL 09/14/2000 - New custom section
 print ''     (-1,1)			!AXL 9/22/2003 Force sqr to back up 1 line
 do New-Dep-Benef-Entry-Lines

End-Procedure

!******************************************
Begin-Procedure Check-For-Page-Break
!******************************************

  let $PrintHeaderFlag = 'N'

  if ($ContinuedFlag = 'N')
    let $PrintHeaderFlag = 'Y'
  end-if

  if (#current-line > #PageContinueLine) and ($ContinuedFlag = 'Y')
    print $ContinuedNextPage (+2,53) bold
  end-if

  if ((#current-line > #PageBreakLine)    and ($ContinuedFlag = 'N')) or
     ((#current-line > #PageContinueLine) and ($ContinuedFlag = 'Y'))
    do Bottom-Line
    new-page
    let $PrintHeaderFlag = 'Y'
    print ''              (-2,1)
  end-if

  if (#current-line > #PageContinueLine) and ($ContinuedFlag = 'Y')
    print $ContinuedPrevPage (+1,5) bold
  end-if

  let $ContinuedFlag = 'Y'

End-Procedure


!******************************************
Begin-Procedure Medical-Dental-Header
!******************************************

  do Check-For-Page-Break
  if $PrintHeaderFlag = 'Y'

    !graphic (+4,5,35) box 3
    !graphic (0,40,15) box 3
    !graphic (0,55,15) box 3
    !let $Tmp_Txt = UPPER($BAS004-HLTH-TITLE)
    !print $Tmp_Txt     (0,6) Bold
    !let $Tmp_Txt = UPPER($BAS004-DEPENDENTS)
    !print $Tmp_Txt     (+2,10)
    !let $Tmp_Txt = UPPER($BEN1-MEDICAL)
    !print $Tmp_Txt     (0,43)
    !let $Tmp_Txt = UPPER($BEN1-DENTAL)
    !print $Tmp_Txt     (0,59)
    ! AXL 09/14/2000 - New logic check for Vision Cvg - Begin 
    !AXL 05/31/2005 Retire Evaluate logic.  Show all 4 columns always - Begin
    !evaluate $dental_vision_combo
    !  when = 'NY'
    !print 3 columns
    !   graphic (+2,1,20) box 2   !axl move down some
    !   graphic (0,21,7) box 2
    !   graphic (0,28,7) box 2
    !   graphic (0,35,9) box 2
    !   graphic (0,44,8) box 2
    !   graphic (0,52,8) box 2
    !   graphic (0,60,7) box 2

    !print 'HEALTH BENEFITS' (0,6) Bold
    !   print 'BIRTH'		(0,29)
    !   print 'NAME'		(+1,5)
    !   PRINT 'RELN'     	(0,22)
    !   print 'DATE'     	(0,29)
    !   print 'SOC SEC #' 	(0,36)
    !   print 'MEDICAL'  	(0,45)
    !   print 'VISION'   	(0,53)
    !   print 'DRUG'   		(0,61)
    !   break

    ! when = 'YN'
    !print 3 columns
    !   graphic (+2,1,20) box 2   !axl move down some
    !   graphic (0,21,7) box 2
    !   graphic (0,28,7) box 2
    !   graphic (0,35,9) box 2
    !   graphic (0,44,8) box 2
    !   graphic (0,52,8) box 2
    !   graphic (0,60,7) box 2

    !print 'HEALTH BENEFITS' (0,6) Bold
    !   print 'BIRTH'		(0,29)
    !   print 'NAME'		(+1,5)
    !   PRINT 'RELN'     	(0,22)
    !   print 'DATE'     	(0,29)
    !   print 'SOC SEC #' 	(0,36)
    !   print 'MEDICAL'  	(0,45)
    !   print 'DENTAL'   	(0,53)
    !   print 'DRUG'   		(0,61)
    !  break  

    ! when = 'NN'
    !print 3 columns
    !   graphic (+2,1,20) box 2   !axl move down some
    !   graphic (0,21,7) box 2
    !   graphic (0,28,7) box 2
    !   graphic (0,35,9) box 2
    !   graphic (0,44,8) box 2
    !   graphic (0,52,8) box 2
    
    !print 'HEALTH BENEFITS' (0,6) Bold  Don't use AXL
    !   print 'BIRTH'		(0,29)
    !   print 'NAME'		(+1,5)
    !   PRINT 'RELN'     	(0,22)
    !   print 'DATE'     	(0,29)
    !   print 'SOC SEC #' 	(0,36)
    !   print 'MEDICAL'  	(0,45)
    !   print 'DRUG'	   	(0,53)     
    !   break  

    ! when = 'YY'
       !graphic (+2,5,35) box 3
       !graphic (0,40,10) box 3
       !graphic (0,50,10) box 3
       !graphic (0,60,13) box 3

       !AXL 9/22/2003 - New formatting - Begin 
       !print 'HEALTH BENEFITS' (0,6) Bold	AXL 9/22/2003 Disable
       !print 'NAME'	(+2,5)
       !print 'MEDICAL'  (0,41)
       !print 'DENTAL'   (0,47)
       !print 'DRUG'    	(0,67)
     
     ! 4 Column scenario
       graphic (+2,1,20) box 2   !axl move down some
       graphic (0,21,7) box 2
       graphic (0,28,7) box 2
       graphic (0,35,9) box 2
       graphic (0,44,8) box 2
       graphic (0,52,8) box 2
       graphic (0,60,7) box 2
       graphic (0,67,6) box 2

       !print 'HEALTH BENEFITS' (0,6) Bold
       print 'BIRTH'     (0,29)
       print 'NAME'	(+1,5)
       PRINT 'RELN'     (0,22)
       print 'DATE'     (0,29)
       print 'SOC SEC #' (0,36)
       print 'MEDICAL'  (0,45)
       print 'DENTAL'   (0,53)
       print 'VISION'   (0,61)
       print 'DRUG'    	(0,68)
       !AXL 9/22/2003 - New formatting - End 
    !   break
    !end-evaluate
    ! AXL 09/14/2000 - New logic check for Vision Cvg - End
    !AXL 05/31/2005 Retire Evaluate logic.  Show all 4 columns always - Begin
  end-if

End-Procedure

!****************************************
begin-procedure Medical-Dental-Dependents
!****************************************

  let $Prior_Dep_Benef = ''
  let $FoundDepsFlag = 'N'
  let $ContinuedFlag = 'N'

Begin-SELECT

BA.EMPLID
BA.DEPENDENT_BENEF
BA.NAME
BB.PLAN_TYPE
!AXL 9/22/2003 New columns - Begin
BA.RELATIONSHIP	
BA.BIRTHDATE
 do Format-DateTime(&BA.Birthdate,$BB_Birthdate,{DEFDATE},'', '')
BA.SEX
!AXL 9/22/2003 New columns - End

   If $Prior_Dep_Benef <> &BA.DEPENDENT_BENEF

      Do Get-Depend-NID		!AXL 9/22/2003  New
      Do Get-Xlat		!AXL 9/22/2003  New

      do Medical-Dental-Header

   ! AXL 09/14/2000 - New logic check for Vision Cvg - Begin
   ! AXL 9/22/2003 Check for Vision retired 9/22/2003
   end-if

   !let $Tmp_Txt = UPPER($BEN1-YES)

   !AXL 9/22/2003 New write behind logic - Begin
   !              to hold values and print after each employee value changes
   if $hold_Dep_Benef = ''   !1st time thru establish defaults

    let $hold_Dep_Benef = &BA.DEPENDENT_BENEF
  
    let $xmark_medical = ' '
    let $depend_choice_medical = 'ADD' 
    let $xmark_dental = ' '
    let $depend_choice_dental  = 'ADD'
    let $xmark_vision = ' '
    let $depend_choice_vision  = 'ADD'
    let $xmark_drug = ' '
    let $depend_choice_drug    = 'ADD'
   end-if

   !show '$hold_dep_ssn vs &BA.DEPENDENT_BENEF '  $hold_dep_ssn ' ' &BA.DEPENDENT_BENEF

   if $hold_Dep_Benef <> &BA.DEPENDENT_BENEF
   !DEP has switched print, clear & capture new values
     
      !print 
      graphic (+1,1,20) box 2
      graphic (0,21,7) box 2		!Relationship
      graphic (0,28,7) box 2		!Birth Date
      graphic (0,35,9) box 2        !SSN
      graphic (0,44,8) box 2    
      graphic (0,52,8) box 2
      graphic (0,60,7) box 2
      graphic (0,67,6) box 2
      print $hold_NAME            (+1,2,27)
      print $hold_rln_descr		(0,22)
      print $hold_Birthdate	(0,29)
      if isblank($hold_NATIONAL_ID) = 0
         ! DXS, 02/13/07. Hide Depend's SSN 
	 extract $last4 from $hold_NATIONAL_ID 5 4
	 #debug8 show '$last4  ' $last4 
	 let $Hide-hold_NATIONAL_ID = 'xxxxx' || $last4 
	 #debug8 show '$Hide-hold_NATIONAL_ID  ' $Hide-hold_NATIONAL_ID
         ! print $hold_NATIONAL_ID	(0,36)   edit xxx-xx-xxxx
	 print $Hide-hold_NATIONAL_ID	(0,36)   edit xxx-xx-xxxx
      else
         print ''	        (0,36)   
      end-if

      print $xmark_medical 		(-1,47)  
      print $xmark_dental 		(0,55)
      print $xmark_vision 		(0,63)
      print $xmark_drug 		(0,69)
      graphic (+1,44,2) box 1 5	!Medical
      print $depend_choice_medical  	(0,47)
      graphic (0,52,2) box 1 5	!Dental
      print $depend_choice_dental  	(0,55)
      graphic (0,60,2) box 1 5	!Vision
      print $depend_choice_vision	(0,63)
      graphic (0,67,2) box 1 5	!Drug
      print $depend_choice_drug  	(0,70)
     
      !reset stuff to blank
      let $xmark_medical = ' '
      let $depend_choice_medical = 'ADD'
      let $xmark_dental = ' '
      let $depend_choice_dental  = 'ADD'
      let $xmark_vision = ' '
      let $depend_choice_vision  = 'ADD'
      let $xmark_drug = ' '
      let $depend_choice_drug    = 'ADD'

      !evaluate choices for the new dependent
      evaluate &BB.PLAN_TYPE
        when = '10'
          let $xmark_medical = 'X'
          let $depend_choice_medical = 'DEL'
          break
        when = '11'
          let $xmark_dental = 'X'
          let $depend_choice_dental = 'DEL'
          break
        when = '14'
          let $xmark_vision = 'X'
          let $depend_choice_vision = 'DEL'
          break
        when = '1Z'
          let $xmark_drug = 'X'
          let $depend_choice_drug = 'DEL'
          break
      end-evaluate
      !
   else !same dep
     !eval stuff and set
     evaluate &BB.PLAN_TYPE
        when = '10'
          let $xmark_medical = 'X'
          let $depend_choice_medical = 'DEL'
          break
        when = '11'
          let $xmark_dental = 'X'
          let $depend_choice_dental = 'DEL'
          break
        when = '14'
          let $xmark_vision = 'X'
          let $depend_choice_vision = 'DEL'
          break
        when = '1Z'
          let $xmark_drug = 'X'
          let $depend_choice_drug = 'DEL'
          break
      end-evaluate
   end-if

   let $hold_Dep_Benef = &BA.DEPENDENT_BENEF
   let $hold_NAME      = &BA.NAME
   let $hold_rln_descr = &rln_descr	
   let $hold_Birthdate = $BB_Birthdate
   let $hold_NATIONAL_ID = &NID.NATIONAL_ID
   let $hold_dep_ssn   = &NID.NATIONAL_ID
      
   ! AXL 09/14/2000 - New logic check for Vision Cvg - End
   !AXL 9/22/2003 New write behind logic - End

   let $Prior_Dep_Benef = &BA.DEPENDENT_BENEF
   let $FoundDepsFlag = 'Y'


FROM  PS_DEPENDENT_BENEF BA,
      PS_HEALTH_DEPENDNT BB,
      PS_HEALTH_BENEFIT  BP
WHERE BP.EMPLID           = &A.EMPLID
  and BP.EMPL_RCD        = &D.EMPL_RCD
  and BP.EFFDT =
      (SELECT MAX(BPP.EFFDT)
       FROM  PS_HEALTH_BENEFIT   BPP
       WHERE BPP.EMPLID          = BP.EMPLID
       and   BPP.EMPL_RCD       = BP.EMPL_RCD
       and   BPP.COBRA_EVENT_ID  = BP.COBRA_EVENT_ID
       and   BPP.PLAN_TYPE       = BP.PLAN_TYPE
       and   BPP.BENEFIT_NBR        = BP.BENEFIT_NBR
       and   BPP.EFFDT          <= &A.Event_Dt)
  and BA.EMPLID           = BP.EMPLID
  and BA.DEP_BENEF_TYPE   IN ('D','O')
  and BB.EMPLID           = BP.EMPLID
  and BB.EMPL_RCD        = BP.EMPL_RCD
  and BP.PLAN_TYPE        IN ('10','11','14','1Z') ! AXL 09/14/2000 - New option for Vision
  AND BP.PLAN_TYPE        = BB.PLAN_TYPE
  and BB.DEPENDENT_BENEF  = BA.DEPENDENT_BENEF
  and BB.EFFDT            = BP.EFFDT

ORDER BY BA.DEPENDENT_BENEF ASC
End-SELECT
  
  if $FoundDepsFlag = 'Y'
  !AXL 9/22/2003 Force last print from HOLD values after employee has switched - Begin
  graphic (+1,1,20) box 2
  graphic (0,21,7) box 2		!Relationship
  graphic (0,28,7) box 2		!Birth Date
  graphic (0,35,9) box 2        !SSN
  graphic (0,44,8) box 2    
  graphic (0,52,8) box 2
  graphic (0,60,7) box 2
  graphic (0,67,6) box 2
  print $hold_NAME            (+1,2,27)
  print $hold_rln_descr		(0,22)
  print $hold_Birthdate	(0,29)
  if isblank($hold_NATIONAL_ID) = 0
     ! DXS, 02/13/07. Hide Depend's SSN 
     extract $last4 from $hold_NATIONAL_ID 5 4
     #debug8 show '$last4  ' $last4 
     let $Hide-hold_NATIONAL_ID = 'xxxxx' || $last4 
     #debug8 show '$Hide-hold_NATIONAL_ID  ' $Hide-hold_NATIONAL_ID
     ! print $hold_NATIONAL_ID	(0,36)   edit xxx-xx-xxxx
     print $Hide-hold_NATIONAL_ID	(0,36)   edit xxx-xx-xxxx
  else
     print ''	        (0,36)   
  end-if

  print $xmark_medical 		(-1,47)  
  print $xmark_dental 		(0,55)
  print $xmark_vision 		(0,63)
  print $xmark_drug 		(0,69)
  graphic (+1,44,2) box 1 5	!Medical
  print $depend_choice_medical  	(0,47)
  graphic (0,52,2) box 1 5	!Dental
  print $depend_choice_dental  	(0,55)
  graphic (0,60,2) box 1 5	!Vision
  print $depend_choice_vision	(0,63)
  graphic (0,67,2) box 1 5	!Drug
  print $depend_choice_drug  	(0,70)

  Let $hold_Dep_Benef = ''
  end-if

  !AXL 9/22/2003 Force last print from HOLD values after employee has switched - End

  if $FoundDepsFlag = 'N'
   ! do Get-Dependents       AXL 09/14/2000 - Not needed by GE
   !do Accomodate-Additional-Dependents !Produce blank boxes if no bene dep
   do Medical-Dental-Header  !AXL 9/22/2003 
  end-if
  !do Accomodate-Additional-Dependents **** 09/14/2000 AXL Moved to previous IF STEP

End-Procedure

! AXL 09/14/2000 - Procedure deactivated per Benefits - Begin 

!*****************************
begin-procedure Get-Dependents
!*****************************

Begin-SELECT

GD.EMPLID
GD.DEPENDENT_BENEF
GD.NAME

   do Medical-Dental-Header

   graphic (+1,5,35) box 2
   !graphic (0,40,15) box 2
   !graphic (0,55,15) box 2
   graphic (0,40,10) box 2
   graphic (0,50,10) box 2
   graphic (0,60,13) box 2		!AXL changed from 10

   print &GD.DEPENDENT_BENEF   (+1,7,2)
   print &GD.NAME              (0,+1,27)

FROM  PS_DEPENDENT_BENEF GD
WHERE GD.EMPLID           = &A.EMPLID
  and GD.DEP_BENEF_TYPE   IN ('D','O')
ORDER BY GD.DEPENDENT_BENEF ASC
End-SELECT

End-Procedure


!***********************************************
Begin-Procedure Accomodate-Additional-Dependents
!***********************************************

  let #ctr = {BLANK_DEP_LINES}
  while #ctr > 0

    do Medical-Dental-Header

    ! AXL 09/14/2000 - New logic check for Vision Cvg - Begin
    if $vision_cvrg_flag = 'N'
       graphic (+1,5,35) box 2
       !graphic (0,40,15) box 2
       !graphic (0,55,15) box 2
       graphic (0,40,10) box 2
       graphic (0,50,10) box 2
       graphic (0,60,13) box 2
       let #ctr = #ctr - 1

       graphic (+2,5,35) box 2
       !graphic (0,40,15) box 2
       !graphic (0,55,15) box 2
       graphic (0,40,10) box 2
       graphic (0,50,10) box 2
       graphic (0,60,13) box 2
       let #ctr = #ctr - 1

    else

       graphic (+1,5,25) box 2
       graphic (0,30,10) box 2
       graphic (0,40,10) box 2
       graphic (0,50,10) box 2
       graphic (0,60,13) box 2
       let #ctr = #ctr - 1

       graphic (+2,5,35) box 2
       graphic (0,30,10) box 2
       graphic (0,40,10) box 2
       graphic (0,50,10) box 2
       graphic (0,60,13) box 2
       let #ctr = #ctr - 1

    end-if
    ! AXL 09/14/2000 - New logic check for Vision Cvg - End

  end-while

End-Procedure

!************************************
Begin-Procedure Life-Insurance-Header
!************************************

  do Check-For-Page-Break
  if $PrintHeaderFlag = 'Y'

    graphic (+6,5,33) box 3
    graphic (0,38,11) box 3
    graphic (0,49,14) box 3
    graphic (0,63,5)  box 3
    graphic (0,68,5)  box 3

    let $Tmp_Txt = UPPER($BAS004-LIFE-TITLE)
    print $Tmp_Txt     (0,6) Bold
    let $Tmp_Txt = UPPER($BAS004-BENEFICIARIES)
    print $Tmp_Txt     (+2,10)
    let $Tmp_Txt = UPPER($BAS004-BEN-PER)
    print $Tmp_Txt     (0,39)
    let $Tmp_Txt = UPPER($BEN1-FLAT-AMT)
    print $Tmp_Txt     (0,50)
    let $Tmp_Txt = UPPER($BAS004-EXCESS)
    print $Tmp_Txt     (0,64)
    let $Tmp_Txt = UPPER($BAS004-CONTINGENT)
    print $Tmp_Txt     (0,69)

  end-if

End-Procedure


!***********************************
begin-procedure Life-Insurance-Benef
!***********************************

  let $FoundDepsFlag = 'N'
  let $ContinuedFlag = 'N'

Begin-SELECT

BA1.EMPLID
BA1.DEPENDENT_BENEF
BA1.NAME
BB1.PLAN_TYPE
BB1.BENEF_PCT
BB1.FLAT_AMOUNT
BB1.EXCESS
BB1.CONTINGENT

   do Life-Insurance-Header

   graphic (+1,5,33) box 2
   graphic (0,38,11) box 2
   graphic (0,49,14) box 2
   graphic (0,63,5)  box 2
   graphic (0,68,5)  box 2

   print &BA1.DEPENDENT_BENEF   (+1,7)
   print &BA1.NAME              (0,+1)
   print &BB1.BENEF_PCT         (0,42)
   print &BB1.FLAT_AMOUNT       (0,54)
   let $Yes_Txt = UPPER($BEN1-YES)
   let $No_Txt =  UPPER($BEN1-NO)
   if &BB1.EXCESS = 'Y'
     print $Yes_Txt             (0,64)
   else
     print $No_Txt              (0,64)
   end-if
   if &BB1.CONTINGENT = 'Y'
     print $Yes_Txt             (0,69)
   else
     print $No_Txt              (0,69)
   end-if

   let $FoundDepsFlag = 'Y'

FROM  PS_DEPENDENT_BENEF BA1,
      PS_LIFE_ADD_BENEFC BB1,
      PS_LIFE_ADD_BEN    BC1

WHERE BC1.EMPLID           = &A.EMPLID
  AND BC1.EMPL_RCD        = &D.EMPL_RCD
  AND BC1.EFFDT            =
      (SELECT MAX(BBC1.EFFDT)
      FROM  PS_LIFE_ADD_BEN BBC1
      WHERE BBC1.EMPLID          = BC1.EMPLID
      AND   BBC1.EMPL_RCD       = BC1.EMPL_RCD
      AND   BBC1.PLAN_TYPE       = BC1.PLAN_TYPE
      AND   BBC1.BENEFIT_NBR        = BC1.BENEFIT_NBR
      AND   BBC1.EFFDT          <= &A.Event_Dt)
  AND BA1.EMPLID           = BC1.EMPLID
  AND BB1.EMPLID           = BA1.EMPLID
  AND BB1.DEPENDENT_BENEF  = BA1.DEPENDENT_BENEF
  AND BA1.DEP_BENEF_TYPE  IN ('B','O')
  AND BB1.EMPL_RCD        = BC1.EMPL_RCD
  AND BC1.PLAN_TYPE        = '20'
  AND BB1.PLAN_TYPE        = BC1.PLAN_TYPE
  AND BB1.EFFDT            = BC1.EFFDT

ORDER BY BA1.DEPENDENT_BENEF ASC, BB1.PLAN_TYPE ASC
End-SELECT

  if $FoundDepsFlag = 'N'
    do Print-Life-Benef-List
  end-if
  do New-Entry-Life-Benef

End-Procedure

!************************************
begin-procedure Print-Life-Benef-List
!************************************

Begin-SELECT

LI.EMPLID
LI.DEPENDENT_BENEF
LI.NAME

  do Life-Insurance-Header

  graphic (+1,5,33) box 2
  graphic (0,38,11) box 2
  graphic (0,49,14) box 2
  graphic (0,63,5)  box 2
  graphic (0,68,5)  box 2

  print   &LI.DEPENDENT_BENEF   (+1,7)
  print   &LI.NAME              (0,+1)

FROM  PS_DEPENDENT_BENEF LI
WHERE LI.EMPLID           = &A.EMPLID
  and LI.DEP_BENEF_TYPE   IN ('B','O')
ORDER BY LI.DEPENDENT_BENEF ASC
End-SELECT

End-Procedure


!***********************************
Begin-Procedure New-Entry-Life-Benef
!***********************************

  let #ctr = {BLANK_DEP_LINES}
  while #ctr > 0

    do Life-Insurance-Header

    graphic (+1,5,33) box 2
    graphic (0,38,11) box 2
    graphic (0,49,14) box 2
    graphic (0,63,5)  box 2
    graphic (0,68,5)  box 2
    let #ctr = #ctr - 1

    graphic (+2,5,33) box 2
    graphic (0,38,11) box 2
    graphic (0,49,14) box 2
    graphic (0,63,5)  box 2
    graphic (0,68,5)  box 2
    let #ctr = #ctr - 1

  end-while

End-Procedure


!*****************************************
Begin-Procedure Savings-Investments-Header
!*****************************************

  do Check-For-Page-Break
  if $PrintHeaderFlag = 'Y'

    graphic (+6,5,33) box 3
    graphic (0,38,11) box 3

    let $Tmp_Txt = UPPER($BAS004-SVGS-TITLE)
    print $Tmp_Txt     (0,6) Bold
    let $Tmp_Txt = UPPER($BAS004-BENEFICIARIES)
    print $Tmp_Txt     (+2,10)
    let $Tmp_Txt = UPPER($BAS004-BEN-PER)
    print $Tmp_Txt     (0,39)

  end-if

End-Procedure


!****************************************
begin-procedure Savings-Investments-Benef
!****************************************

  let $FoundDepsFlag = 'N'
  let $ContinuedFlag = 'N'

Begin-SELECT

BA2.EMPLID
BA2.DEPENDENT_BENEF
BA2.NAME
BB2.PLAN_TYPE
BB2.BENEF_PCT

   do Savings-Investments-Header

   graphic (+1,5,33) box 2
   graphic (0,38,11) box 2

   print &BA2.DEPENDENT_BENEF   (+1,7)
   print &BA2.NAME              (0,+1)
   print &BB2.BENEF_PCT         (0,42)

   let $FoundDepsFlag = 'Y'

FROM  PS_DEPENDENT_BENEF BA2,
      PS_SAVINGS_BENEFIC BB2,
      PS_SAVINGS_PLAN    BC2

WHERE BC2.EMPLID           = &A.EMPLID
  AND BC2.EMPL_RCD        = &D.EMPL_RCD
  AND BC2.EFFDT            =
      (SELECT MAX(BBC2.EFFDT)
      FROM  PS_SAVINGS_PLAN BBC2
      WHERE BBC2.EMPLID          = BC2.EMPLID
      and   BBC2.EMPL_RCD       = BC2.EMPL_RCD
      and   BBC2.PLAN_TYPE       = BC2.PLAN_TYPE
      and   BBC2.BENEFIT_NBR        = BC2.BENEFIT_NBR
      and   BBC2.EFFDT          <= &A.Event_Dt)
  AND BC2.EMPLID           = BA2.EMPLID
  AND BB2.EMPLID           = BA2.EMPLID
  AND BC2.EMPL_RCD        = BB2.EMPL_RCD
  AND BA2.DEP_BENEF_TYPE   IN ('B','O')
  AND BB2.DEPENDENT_BENEF  = BA2.DEPENDENT_BENEF
  AND BB2.PLAN_TYPE        = '40'
  AND BB2.PLAN_TYPE        = BC2.PLAN_TYPE
  AND BB2.EFFDT            = BC2.EFFDT

ORDER BY BA2.DEPENDENT_BENEF ASC, BB2.PLAN_TYPE ASC
End-SELECT

  if $FoundDepsFlag = 'N'
    do Print-Sav-Inv-Benef-List
  end-if
  do New-Entry-Sav-Inv-Benef

End-Procedure


!***************************************
Begin-Procedure Print-Sav-Inv-Benef-List
!***************************************

Begin-SELECT

SI.EMPLID
SI.DEPENDENT_BENEF
SI.NAME

  do Savings-Investments-Header

  graphic (+1,5,33) box 2
  graphic (0,38,11) box 2

  print   &SI.DEPENDENT_BENEF   (+1,7)
  print   &SI.NAME              (0,+1)

FROM  PS_DEPENDENT_BENEF SI
WHERE SI.EMPLID           = &A.EMPLID
  and SI.DEP_BENEF_TYPE   IN ('B','O')
ORDER BY SI.DEPENDENT_BENEF ASC

End-SELECT

End-Procedure


!**************************************
Begin-Procedure New-Entry-Sav-Inv-Benef
!**************************************

  let #ctr = {BLANK_DEP_LINES}
  while #ctr > 0

    do Savings-Investments-Header

    graphic (+1,5,33) box 2
    graphic (0,38,11) box 2
    let #ctr = #ctr - 1

    graphic (+2,5,33) box 2
    graphic (0,38,11) box 2
    let #ctr = #ctr - 1

  end-while

End-Procedure


!******************************************
Begin-Procedure Pension-Header
!******************************************

  do Check-For-Page-Break
  if $PrintHeaderFlag = 'Y'

    graphic (+6,5,33) box 3
    graphic (0,38,11) box 3
    graphic (0,49,14) box 3
    graphic (0,63,5)  box 3
    graphic (0,68,5)  box 3

    let $Tmp_Txt = UPPER($BAS004-PENS-TITLE)
    print $Tmp_Txt     (0,6) Bold
    let $Tmp_Txt = UPPER($BAS004-BENEFICIARIES)
    print $Tmp_Txt     (+2,10)
    let $Tmp_Txt = UPPER($BAS004-BEN-PER)
    print $Tmp_Txt     (0,39)
    let $Tmp_Txt = UPPER($BEN1-FLAT-AMT)
    print $Tmp_Txt     (0,50)
    let $Tmp_Txt = UPPER($BAS004-EXCESS)
    print $Tmp_Txt     (0,64)
    let $Tmp_Txt = UPPER($BAS004-CONTINGENT)
    print $Tmp_Txt     (0,69)

  end-if

End-Procedure


!****************************
begin-procedure Pension-Benef
!****************************

  let $FoundDepsFlag = 'N'
  let $ContinuedFlag = 'N'

Begin-SELECT

BA3.EMPLID
BA3.DEPENDENT_BENEF
BA3.NAME
BB3.PLAN_TYPE
BB3.BENEF_PCT
BB3.FLAT_AMOUNT
BB3.EXCESS
BB3.CONTINGENT

   do Pension-Header

   graphic (+1,5,33) box 2
   graphic (0,38,11) box 2
   graphic (0,49,14) box 2
   graphic (0,63,5)  box 2
   graphic (0,68,5)  box 2

   print &BA3.DEPENDENT_BENEF   (+1,7)
   print &BA3.NAME              (0,+1)
   print &BB3.BENEF_PCT         (0,42)
   print &BB3.FLAT_AMOUNT       (0,54)

   let $Yes_Txt = UPPER($BEN1-YES)
   let $No_Txt =  UPPER($BEN1-NO)
   if &BB3.EXCESS = 'Y'
     print $Yes_Txt             (0,64)
   else
     print $No_Txt              (0,64)
   end-if
   if &BB3.CONTINGENT = 'Y'
     print $Yes_Txt             (0,69)
   else
     print $No_Txt              (0,69)
   end-if

   let $FoundDepsFlag = 'Y'

FROM  PS_DEPENDENT_BENEF BA3,
      PS_PENSION_BENEFC BB3,
      PS_PENSION_PLAN BC3

WHERE BC3.EMPLID           = &A.EMPLID
  AND BC3.EMPL_RCD        = &D.EMPL_RCD
  AND BC3.EFFDT            =
      (SELECT MAX(BBC3.EFFDT)
      FROM  PS_PENSION_PLAN BBC3
      WHERE BBC3.EMPLID          = BC3.EMPLID
      and   BBC3.EMPL_RCD       = BC3.EMPL_RCD
      and   BBC3.PLAN_TYPE       = BC3.PLAN_TYPE
      and   BBC3.BENEFIT_NBR        = BC3.BENEFIT_NBR
      and   BBC3.EFFDT          <= &A.Event_Dt)
  AND BC3.EMPLID           = BB3.EMPLID
  AND BB3.EMPLID           = BA3.EMPLID
  AND BC3.EMPL_RCD        = BB3.EMPL_RCD
  AND BA3.DEP_BENEF_TYPE   IN ('B','O')
  AND BB3.DEPENDENT_BENEF  = BA3.DEPENDENT_BENEF
  AND BB3.PLAN_TYPE        = '80'
  AND BB3.PLAN_TYPE        = BB3.PLAN_TYPE
  AND BB3.EFFDT            = BC3.EFFDT

ORDER BY BA3.DEPENDENT_BENEF ASC, BB3.PLAN_TYPE ASC
End-SELECT

  if $FoundDepsFlag = 'N'
    do Print-Pension-Benef-List
  end-if
  do New-Entry-Pension-Benef

End-Procedure


!***************************************
Begin-Procedure Print-Pension-Benef-List
!***************************************

Begin-SELECT

PN.EMPLID
PN.DEPENDENT_BENEF
PN.NAME

  do Pension-Header

  graphic (+1,5,33) box 2
  graphic (0,38,11) box 2
  graphic (0,49,14) box 2
  graphic (0,63,5)  box 2
  graphic (0,68,5)  box 2

  print   &PN.DEPENDENT_BENEF   (+1,7)
  print   &PN.NAME              (0,+1)

FROM  PS_DEPENDENT_BENEF PN
WHERE PN.EMPLID           = &A.EMPLID
  and PN.DEP_BENEF_TYPE   IN ('B','O')
ORDER BY PN.DEPENDENT_BENEF ASC

End-SELECT

End-Procedure


!**************************************
Begin-Procedure New-Entry-Pension-Benef
!**************************************

  let #ctr = {BLANK_DEP_LINES}
  while #ctr > 0

    do Pension-Header

    graphic (+1,5,33) box 2
    graphic (0,38,11) box 2
    graphic (0,49,14) box 2
    graphic (0,63,5)  box 2
    graphic (0,68,5)  box 2
    let #ctr = #ctr - 1

    graphic (+2,5,33) box 2
    graphic (0,38,11) box 2
    graphic (0,49,14) box 2
    graphic (0,63,5)  box 2
    graphic (0,68,5)  box 2
    let #ctr = #ctr - 1

  end-while

End-Procedure

! AXL 09/14/2000 - New Section II - Begin
!*****************************************
Begin-Procedure Verify-Dep-Benef-Info
!*****************************************

  let $Prior_Dep_Benef_V = ''
  let $ContinuedFlag     = 'N'
  let $FoundDepsFlag2    = 'N'

Begin-SELECT distinct 

V.EMPLID
V.NAME
V.DEPENDENT_BENEF
V.RELATIONSHIP
V.BIRTHDATE
 do Format-DateTime(&V.Birthdate,$Dep_Birthdate,{DEFDATE},'', '')
V.SEX

       if $Prior_Dep_Benef_V <> &V.DEPENDENT_BENEF

          Do Get-Depend-NID
          Do Get-Xlat
          do Verify-Dep-Benef-Entry-Header

          graphic (+1,5,27) box 2        
          graphic (0,32,14) box 2
          graphic (0,46,13) box 2      
          graphic (0,59,5)  box 2
          graphic (0,64,10) box 2
      
          print &V.NAME    		(+1,7,25)
          print &rln_descr		(0,34,12)
          print $Dep_Birthdate          (0,48,10)
          print &V.SEX                 (0,61,4)
          if isblank(&NID.NATIONAL_ID) = 0
             print &NID.NATIONAL_ID	(0,65)   edit xxx-xx-xxxx
          else
	     print ''			(0,65)   
          end-if

       end-if      

       let $Prior_Dep_Benef_V  = &V.DEPENDENT_BENEF

       let $FoundDepsFlag2 = 'Y'

FROM  PS_DEPENDENT_BENEF V,
      PS_HEALTH_DEPENDNT BB2,
      PS_HEALTH_BENEFIT  BP2
WHERE BP2.EMPLID           = &A.EMPLID
  and BP2.EMPL_RCD        = &D.EMPL_RCD
  and BP2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM  PS_HEALTH_BENEFIT
       WHERE EMPLID          = BP2.EMPLID
       and   EMPL_RCD       = BP2.EMPL_RCD
       and   COBRA_EVENT_ID  = BP2.COBRA_EVENT_ID
       and   PLAN_TYPE       = BP2.PLAN_TYPE
       and   BENEFIT_NBR        = BP2.BENEFIT_NBR
       and   EFFDT          <= &A.Event_Dt)
  and V.EMPLID             = BP2.EMPLID
  and V.DEP_BENEF_TYPE     IN ('D','O')
  and BB2.EMPLID           = BP2.EMPLID
  and BB2.EMPL_RCD        = BP2.EMPL_RCD
  and BP2.PLAN_TYPE        IN ('10','11','14','1Z')
  AND BP2.PLAN_TYPE        = BB2.PLAN_TYPE
  and BB2.DEPENDENT_BENEF  = V.DEPENDENT_BENEF
  and BB2.EFFDT            = BP2.EFFDT

ORDER BY V.DEPENDENT_BENEF ASC

End-SELECT

  if $FoundDepsFlag2 = 'N'
     do Draw-Blank-Boxes
  end-if

End-Procedure
! AXL 09/14/2000 - New Section II - End

!*******************************
Begin-Procedure Get-Xlat
!*******************************
#debug9 Show 'Get-Xlat'
Begin-Select 
xlatshortname &rln_descr
From   PSXLATITEM ! xlattable ! ISDVNPK 08/283/2007 Changed XLATTABLE to PSXLATITEM as part of 9.0 upgrade  
Where  fieldname  = 'RELATIONSHIP'
And    fieldvalue = &BA.RELATIONSHIP  !AXL 9/22/2003 Changed from &V.RELATIONSHIP
End-Select
End-Procedure

!AXL 9/21/2000 - New procedure to get Dep ssn - Begin
!*******************************
Begin-Procedure Get-Depend-NID
!*******************************

Begin-SELECT

NID.NATIONAL_ID

FROM PS_DEP_BENEF_NID NID
  WHERE NID.EMPLID = &BA.EMPLID				!AXL 9/22/2003 Changed from &V.
    AND NID.DEPENDENT_BENEF = &BA.DEPENDENT_BENEF 	!AXL 9/22/2003 Changed from &V.

end-select

end-procedure
!AXL 9/21/2000 - New procedure to get Dep ssn - End

!*****************************************
Begin-Procedure Verify-Dep-Benef-Entry-Header
!*****************************************

  do Check-For-Page-Break
  if $PrintHeaderFlag = 'Y'

    graphic (+2,5,27) box 3 
    graphic (0,32,14) box 3
    graphic (0,46,13) box 3
    graphic (0,59,5)  box 3
    graphic (0,64,10) box 3

    print 'DEPENDENT INFORMATION'     (0,6) Bold
    print 'DEPENDENT/BENEF NAME'      (+2,8)
    print 'RELATIONSHIP'              (0,33)
    print 'DATE OF BIRTH'             (0,47)
    print 'SEX'                       (0,60)
    print 'SSN'                       (0,65)
    !print ''           (-1,1)
   
  end-if

End-Procedure

!***********************************************
Begin-Procedure Draw-Blank-Boxes
!***********************************************

  let #ctr2 = {BLANK_DEP_LINES}
  while #ctr2 > 0

    do Verify-Dep-Benef-Entry-Header

    graphic (+1,5,27) box 2
    graphic (0,32,14) box 2
    graphic (0,46,13) box 2
    graphic (0,59,5)  box 2
    graphic (0,64,10) box 2
    let #ctr2 = #ctr2 - 1

    graphic (+2,5,27) box 2
    graphic (0,32,14) box 2
    graphic (0,46,13) box 2
    graphic (0,59,5)  box 2
    graphic (0,64,10) box 2
    let #ctr2 = #ctr2 - 1

  end-while

End-Procedure

!*****************************************
Begin-Procedure New-Dep-Benef-Entry-Header
!*****************************************

  !let #PageBreakLine = 35   **AXL 9/14/2000 
  do Check-For-Page-Break
  if $PrintHeaderFlag = 'Y'

    print 'SECTION III' (+3,1) bold	!AXL 9/14/2000 

    graphic (+2,5,27) box 3 !AXL 09/14/2000 - Changed from +6
    graphic (0,32,14) box 3
    graphic (0,46,13) box 3
    graphic (0,59,5)  box 3
    graphic (0,64,10) box 3

    !let $Tmp_Txt = UPPER($BAS004-NEW-DEP-BEN)
    !print $Tmp_Txt     (0,6) Bold
    !let $Tmp_Txt = UPPER($BAS004-DEP-BEN-NM)
    !print $Tmp_Txt     (+2,7)
    !let $Tmp_Txt = UPPER($BEN1-RELATIONSHIP)
    !print $Tmp_Txt     (0,33)
    !let $Tmp_Txt = UPPER($BEN1-DATE-OF-BIRTH)
    !print $Tmp_Txt     (0,47)
    !let $Tmp_Txt = UPPER($BEN1-SEX)
    !print $Tmp_Txt     (0,60)
    !let $Tmp_Txt = UPPER($BAS004-NATIONAL-ID)
    !print $Tmp_Txt     (0,65)
    !print ''           (-1,1)

    print 'NEW DEPENDENT INFORMATION'  (0,6) Bold
    print 'DEPENDENT/BENEF NAME'      (+2,8)
    print 'RELATIONSHIP'              (0,33)
    print 'DATE OF BIRTH'             (0,47)
    print 'SEX'                       (0,60)
    print 'SSN'                       (0,65)
    print ''           (-1,1)

  end-if

End-Procedure

!****************************************
Begin-Procedure New-Dep-Benef-Entry-Lines
!****************************************

  let $ContinuedFlag = 'N'

  let #ctr = (2 * {BLANK_DEP_LINES})
  while #ctr > 0

     !AXL 9/22/2003 Disable - Begin
     !do New-Dep-Benef-Entry-Header

     !graphic (+2,5,27) box 2
     !graphic (0,32,14) box 2
     !graphic (0,46,13) box 2
     !graphic (0,59,5)  box 2
     !graphic (0,64,10) box 2
     !let #ctr = #ctr - 1

     !graphic (+2,5,27) box 2
     !graphic (0,32,14) box 2
     !graphic (0,46,13) box 2
     !graphic (0,59,5)  box 2
     !graphic (0,64,10) box 2
     !let #ctr = #ctr - 1
     !AXL 9/22/2003 Disable - End

     !AXL 9/22/2003 New boxes Begin
     !AXL 05/31/2005 Retire Evaluate logic.  Show all 4 columns always - Begin
     !evaluate $dental_vision_combo
     ! when = 'NY'
     ! when = 'YN'
        !print 3 columns
     !   graphic (+2,1,20) box 2
     !   graphic (0,21,7) box 2		
     !   graphic (0,28,7) box 2		
     !   graphic (0,35,9) box 2        
     !   graphic (0,44,8) box 2    
     !   graphic (0,52,8) box 2
     !   graphic (0,60,7) box 2
     !   graphic (+1,44,2) box 1 5
     !   print 'ADD'  (0,47)
     !   graphic (0,52,2) box 1 5
     !   print 'ADD'  (0,55)
     !   graphic (0,60,2) box 1 5
     !   print 'ADD'  (0,63)
     !   print ''           (-1,1)
     
     !   let #ctr = #ctr - 1
     
     !   graphic (+2,1,20) box 2
     !   graphic (0,21,7) box 2		
     !   graphic (0,28,7) box 2		
     !   graphic (0,35,9) box 2        
     !   graphic (0,44,8) box 2    
     !   graphic (0,52,8) box 2
     !   graphic (0,60,7) box 2
     !   graphic (+1,44,2) box 1 5
     !   print 'ADD'  (0,47)
     !   graphic (0,52,2) box 1 5
     !   print 'ADD'  (0,55)
     !   graphic (0,60,2) box 1 5
     !   print 'ADD'  (0,63)
     !   print ''           (-1,1)
     !   let #ctr = #ctr - 1
     !   break
     ! when = 'NN'
     !   !print 2 columns
     !   graphic (+2,1,20) box 2
     !   graphic (0,21,7) box 2		
     !   graphic (0,28,7) box 2		
     !   graphic (0,35,9) box 2        
     !   graphic (0,44,8) box 2    
     !   graphic (0,52,8) box 2
     !   graphic (+1,44,2) box 1 5
     !   print 'ADD'  (0,47)
     !   graphic (0,52,2) box 1 5
     !   print 'ADD'  (0,55)
     !   print ''           (-1,1)
     
     !   let #ctr = #ctr - 1
     
     !   graphic (+2,1,20) box 2
     !   graphic (0,21,7) box 2		
     !   graphic (0,28,7) box 2		
     !   graphic (0,35,9) box 2        
     !   graphic (0,44,8) box 2    
     !   graphic (0,52,8) box 2
     !   graphic (+1,44,2) box 1 5
     !   print 'ADD'  (0,47)
     !   graphic (0,52,2) box 1 5
     !   print 'ADD'  (0,55)
     !   print ''           (-1,1)
     !   let #ctr = #ctr - 1
     !   break
     ! when = 'YY'
        !print 4 columns
        graphic (+2,1,20) box 2
        graphic (0,21,7) box 2		
        graphic (0,28,7) box 2		
        graphic (0,35,9) box 2        
        graphic (0,44,8) box 2    
        graphic (0,52,8) box 2
        graphic (0,60,7) box 2
        graphic (0,67,6) box 2
        graphic (+1,44,2) box 1 5
        print 'ADD'  (0,47)
        graphic (0,52,2) box 1 5
        print 'ADD'  (0,55)
        graphic (0,60,2) box 1 5
        print 'ADD'  (0,63)
        graphic (0,67,2) box 1 5
        print 'ADD'  (0,70)
        print ''           (-1,1)
     
        let #ctr = #ctr - 1
     
        graphic (+2,1,20) box 2
        graphic (0,21,7) box 2		
        graphic (0,28,7) box 2		
        graphic (0,35,9) box 2        
        graphic (0,44,8) box 2    
        graphic (0,52,8) box 2
        graphic (0,60,7) box 2
        graphic (0,67,6) box 2
        graphic (+1,44,2) box 1 5
        print 'ADD'  (0,47)
        graphic (0,52,2) box 1 5
        print 'ADD'  (0,55)
        graphic (0,60,2) box 1 5
        print 'ADD'  (0,63)
        graphic (0,67,2) box 1 5
        print 'ADD'  (0,70)
        print ''           (-1,1)
        let #ctr = #ctr - 1
      !  break
     !end-evaluate

    !AXL 9/22/2003 New boxes - End
    !AXL 05/31/2005 Retire Evaluate logic.  Show all 4 columns always - End
  end-while

End-Procedure

!************************* End of Program ******************************