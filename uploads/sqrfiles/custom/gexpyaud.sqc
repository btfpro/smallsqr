!***********************************************************************
!GEXPYAUD:   This program handles Audit Reporting from TA jobs.        *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *
!***********************************************************************
!           RKK         11/01/2009     INITIAL CREATION                *
!GEX_PY848_KRONOS_PROJECT ISDVAKG     11/07/2011 Added Time Collection *
!***********************************************************************
!This program prints audit report.                                     *
!***********************************************************************
begin-heading 12 FOR-REPORTS=(SNOPY-REPORT)     
  show 'begin-heading'

move 'Update Pay Sheets with Pay Input Data - SNOOPY AUDIT REPORT' to $reporttitle
let $ReportID = $Report_pre||'AU1'
#Include 'stdhdg01.sqc'

print 'Pay End Date=' (+1,1)
  
print $pay_end_dt ()                  


print '-' (+1,1,145) fill
print 'TIME                PAY   CPNY PAY  STORE    PRIOR         CURRENT       DIFFERENCE     PERCENTAGE    PRIOR        CURRENT       DIFFERENCE       TOTAL ' (+1,1)
print 'COLLECTION          RUN        GRP           WEEK           WEEK                                       WEEK          WEEK                          HRS  ' (+1,1)
print 'TYPE                 ID                      HOURS          HOURS                                      TRANS         TRANS                        REJCTD' (+1,1)
print '                                             LOADED         LOADED                                     RECV          RECV                  ' (+1,1)
print '-' (+1,1,145) fill     
position (+1,1)

end-heading
begin-heading 12 FOR-REPORTS=(AUDIT-REPORT)     
  show 'begin-heading'

move 'Update Pay Sheets with Pay Input Data - AUDIT REPORT' to $reporttitle
let $ReportID = $Report_pre||'AUD'
#Include 'stdhdg01.sqc'

print 'Pay End Date=' (+1,1)
  
print $pay_end_dt ()                  

print '-' (+1,1,145) fill
print 'TIME                PAY   CPNY PAY  STORE    PRIOR         CURRENT       DIFFERENCE     PERCENTAGE    PRIOR        CURRENT       DIFFERENCE       TOTAL ' (+1,1)
print 'COLLECTION          RUN        GRP           WEEK           WEEK                                       WEEK          WEEK                          HRS  ' (+1,1)
print 'TYPE                 ID                      HOURS          HOURS                                      TRANS         TRANS                        REJCTD' (+1,1)
print '                                             LOADED         LOADED                                     RECV          RECV                  ' (+1,1)
print '-' (+1,1,145) fill     
position (+1,1)

end-heading

begin-heading 12 FOR-REPORTS=(KRONO-REPORT)     
  show 'begin-heading'

move 'Update Pay Sheets with Pay Input Data - CCS/KRONOS AUDIT REPORT' to $reporttitle
let $ReportID = $Report_pre||'AU2'
#Include 'stdhdg01.sqc'

print 'Pay End Date=' (+1,1)
  
print $pay_end_dt ()                  


print '-' (+1,1,145) fill
print 'TIME                PAY   CPNY PAY  STORE    PRIOR         CURRENT       DIFFERENCE     PERCENTAGE    PRIOR        CURRENT       DIFFERENCE       TOTAL ' (+1,1)
print 'COLLECTION          RUN        GRP           WEEK           WEEK                                       WEEK          WEEK                          HRS  ' (+1,1)
print 'TYPE                 ID                      HOURS          HOURS                                      TRANS         TRANS                        REJCTD' (+1,1)
print '                                             LOADED         LOADED                                     RECV          RECV                  ' (+1,1)
print '-' (+1,1,145) fill     
position (+1,1)

end-heading

begin-heading 12 FOR-REPORTS=(PAPER-REPORT)     
  show 'begin-heading'

move 'Update Pay Sheets with Pay Input Data - PAPER AUDIT REPORT' to $reporttitle
let $ReportID = $Report_pre||'AU3'
#Include 'stdhdg01.sqc'

print 'Pay End Date=' (+1,1)
  
print $pay_end_dt ()                  


print '-' (+1,1,145) fill
print 'TIME                PAY   CPNY PAY  STORE    PRIOR         CURRENT       DIFFERENCE     PERCENTAGE    PRIOR        CURRENT       DIFFERENCE       TOTAL ' (+1,1)
print 'COLLECTION          RUN        GRP           WEEK           WEEK                                       WEEK          WEEK                          HRS  ' (+1,1)
print 'TYPE                 ID                      HOURS          HOURS                                      TRANS         TRANS                        REJCTD' (+1,1)
print '                                             LOADED         LOADED                                     RECV          RECV                  ' (+1,1)
print '-' (+1,1,145) fill     
position (+1,1)

end-heading

begin-heading 12 FOR-REPORTS=(NONE-REPORT)     
  show 'begin-heading'

move 'Update Pay Sheets with Pay Input Data - NONE AUDIT REPORT' to $reporttitle
let $ReportID = $Report_pre||'AU4'
#Include 'stdhdg01.sqc'

print 'Pay End Date=' (+1,1)
  
print $pay_end_dt ()                  


print '-' (+1,1,145) fill
print 'TIME                PAY   CPNY PAY  STORE    PRIOR         CURRENT       DIFFERENCE     PERCENTAGE    PRIOR        CURRENT       DIFFERENCE       TOTAL ' (+1,1)
print 'COLLECTION          RUN        GRP           WEEK           WEEK                                       WEEK          WEEK                          HRS  ' (+1,1)
print 'TYPE                 ID                      HOURS          HOURS                                      TRANS         TRANS                        REJCTD' (+1,1)
print '                                             LOADED         LOADED                                     RECV          RECV                  ' (+1,1)
print '-' (+1,1,145) fill     
position (+1,1)

end-heading

begin-heading 12 FOR-REPORTS=(NCRP-REPORT)     
  show 'begin-heading'

move 'Update Pay Sheets with Pay Input Data - CORP AUDIT REPORT' to $reporttitle
let $ReportID = $Report_pre||'AU5'
#Include 'stdhdg01.sqc'

print 'Pay End Date=' (+1,1)
  
print $pay_end_dt ()                  


print '-' (+1,1,145) fill
print 'TIME                PAY   CPNY PAY  STORE    PRIOR         CURRENT       DIFFERENCE     PERCENTAGE    PRIOR        CURRENT       DIFFERENCE       TOTAL ' (+1,1)
print 'COLLECTION          RUN        GRP           WEEK           WEEK                                       WEEK          WEEK                          HRS  ' (+1,1)
print 'TYPE                 ID                      HOURS          HOURS                                      TRANS         TRANS                        REJCTD' (+1,1)
print '                                             LOADED         LOADED                                     RECV          RECV                  ' (+1,1)
print '-' (+1,1,145) fill     
position (+1,1)

end-heading

begin-heading 12 FOR-REPORTS=(SMRT-REPORT)     
  show 'begin-heading'

move 'Update Pay Sheets with Pay Input Data - SMART TRACK AUDIT REPORT' to $reporttitle
let $ReportID = $Report_pre||'AU6'
#Include 'stdhdg01.sqc'

print 'Pay End Date=' (+1,1)
  
print $pay_end_dt ()                  


print '-' (+1,1,145) fill
print 'TIME                PAY   CPNY PAY  STORE    PRIOR         CURRENT       DIFFERENCE     PERCENTAGE    PRIOR        CURRENT       DIFFERENCE       TOTAL ' (+1,1)
print 'COLLECTION          RUN        GRP           WEEK           WEEK                                       WEEK          WEEK                          HRS  ' (+1,1)
print 'TYPE                 ID                      HOURS          HOURS                                      TRANS         TRANS                        REJCTD' (+1,1)
print '                                             LOADED         LOADED                                     RECV          RECV                  ' (+1,1)
print '-' (+1,1,145) fill     
position (+1,1)

end-heading

!*********************************************************************
!This procedure prints the audit report
!*********************************************************************
begin-procedure print-audit-rpt
  show 'print-audit-rpt'

move 'N' to $found

let #empl_nbr = 0
let #Reg_Pay_Hrs = 0
let #Ot_Hrs = 0
let #Oth_Hrs = 0
let #vac_hrs = 0
let #reg_pay_hrs_num = 0
let #ot_hrs_num = 0
let #oth_hrs_num = 0
let #vac_hrs_num = 0
let #total_hrs = 0      
let $emplid_save = ' '
let #Iteration_nbr = 1
let #oth_earns = 0

begin-select ON-ERROR=SQL-Error-Found('print-audit-rpt')

X.COMPANY         
X.PAYGROUP        
X.DEPTID          
Y.OTH_HRS  
X.EMPLID
Y.ERNCD
Y.OTH_PAY 
Y2.RUN_ID
A11.GEX_TIME_COLLECT
A12.SORT_ORDER

	   if #Iteration_nbr > 1  
	      if (&X.DEPTID <> $deptid_Save or &X.PAYGROUP <> $aud_paygroup or &X.COMPANY <> $aud_company)
           if &Y2.RUN_ID <> $pay_run_id
	           new-page  ! page break for change on pay-run-id
	         end-if
       		 do print-store-details
		       move &X.DEPTID to $deptid_save
           move &X.COMPANY to $aud_company
           move &X.PAYGROUP to $aud_paygroup
	         move &Y2.RUN_ID to $pay_run_id
           move &A11.GEX_TIME_COLLECT to $GEX_TIME_COLLECT
	      end-if
	      if &X.EMPLID <> $emplid_Save
		      add 1 to #empl_nbr
		      move &X.EMPLID to $emplid_Save
	      end-if    
	   else
        move &X.COMPANY to $aud_company
        move &X.PAYGROUP to $aud_paygroup
	      add 1 to #Iteration_nbr
	      move &X.DEPTID to $deptid_save
	      move 'Y' to $found
	      add 1 to #empl_nbr
	      move &X.EMPLID to $emplid_save
        move &Y2.RUN_ID to $pay_run_id
        move &A11.GEX_TIME_COLLECT to $GEX_TIME_COLLECT
	   end-if
     evaluate &Y.ERNCD
       when = '519'
       when = '522'
       when = '523'            
       when = '515'
       when = '513'
      	  move &Y.OTH_HRS     to #vac_hrs_num
	        add #vac_HRS_num     to #vac_hrs
	        break
       when = 'OTP'
      	  move &Y.OTH_HRS     to #ot_hrs_num
	        add #OT_HRS_num     to #ot_hrs
      	  break
       when = 'REG'
	       move &Y.OTH_HRS to #reg_pay_hrs_num   
	       add #reg_PAY_HRS_num to #reg_pay_hrs
	       break
       when-other
	       move &Y.OTH_HRS to #oth_hrs_num
	       add #oth_hrs_num to #oth_hrs
	       break
     end-evaluate

     if &Y.OTH_HRS = 0
      	move &Y.oth_pay to #oth_earns_num
	      add #oth_earns_num to #oth_earns
     end-if
		 
FROM PS_PAY_EARNINGS X, 
     PS_PAY_OTH_EARNS Y,
     PS_PAY_CALENDAR Y2,
     PS_GEX_DEPT_TBL A11,
     sysadm.PS_GEX_TIME_COLECT A12

WHERE X.PAY_END_DT = $pay_end_dt
  and X.OFF_CYCLE  = 'N'
  and X.COMPANY    = Y.COMPANY
  and X.PAYGROUP   = Y.PAYGROUP
  and X.PAY_END_DT = Y.PAY_END_DT
  and X.OFF_CYCLE  = Y.OFF_CYCLE
  and X.PAGE_NUM      = Y.PAGE_NUM
  and X.LINE_NUM      = Y.LINE_NUM
  and X.ADDL_NBR      = Y.ADDL_NBR
  and Y.TL_SOURCE = 'G'   ! Giant Eagle T&A source
  and Y2.PAY_SHEETS_RUN = 'Y'
  AND Y2.PAY_CONFIRM_RUN = 'N'
  AND Y2.RUN_ID > ' '
  AND Y2.PAY_END_DT = X.PAY_END_DT
  and Y2.COMPANY  = Y.COMPANY
  and Y2.PAYGROUP = Y.PAYGROUP
  and A11.EFFDT = 
   (SELECT MAX(A11_ED.EFFDT) FROM PS_GEX_DEPT_TBL A11_ED 
      WHERE A11.SETID = A11_ED.SETID 
            AND A11.DEPTID = A11_ED.DEPTID 
            AND A11_ED.EFFDT <= SYSDATE) 
  and A11.DEPTID = X.DEPTID
  and A12.GEX_TIME_COLLECT = A11.GEX_TIME_COLLECT
   order by Y2.RUN_ID, A12.SORT_ORDER, X.COMPANY, X.PAYGROUP, X.DEPTID

end-select

if $found = 'N'
   print 'audit report - store# is not found' (+1,1)
   print &X.company (+1,1)
   print &X.paygroup ()
   print &X.DEPTID ()
   print $pay_end_dt ()
else
   do select-from-gexpyhst
   do print-store-details
end-if
 
end-procedure
!*********************************************************************
!This procedure prints the store details in respective columns
!*********************************************************************
begin-procedure print-paper-details
  show 'print-paper-details'

begin-SELECT DISTINCT on-error=sql-error-found('print-store-details')
dept1.DEPTID
dept1.COMPANY
gdept1.GEX_TIME_COLLECT

     move &dept1.DEPTID to $deptid_save
     move &dept1.COMPANY to $aud_company
     move ' ' to $aud_paygroup
     move ' ' to $pay_run_id
     move &gdept1.GEX_TIME_COLLECT to $GEX_TIME_COLLECT
     do print-store-details-paper

FROM PS_DEPT_TBL dept1, PS_GEX_DEPT_TBL gdept1 
  WHERE dept1.EFFDT = 
        (SELECT MAX(dept1_ED.EFFDT) FROM PS_DEPT_TBL dept1_ED 
        WHERE dept1.SETID = dept1_ED.SETID 
          AND dept1.DEPTID = dept1_ED.DEPTID 
          AND dept1_ED.EFFDT <= SYSDATE) 
     AND dept1.SETID = gdept1.SETID 
     AND dept1.DEPTID = gdept1.DEPTID 
     AND gdept1.EFFDT = 
        (SELECT MAX(gdept1_ED.EFFDT) FROM PS_GEX_DEPT_TBL gdept1_ED 
        WHERE gdept1.SETID = gdept1_ED.SETID 
          AND gdept1.DEPTID = gdept1_ED.DEPTID 
          AND gdept1_ED.EFFDT <= SYSDATE) 
     AND gdept1.GEX_TIME_COLLECT = 'Paper' 
     AND dept1.SETID = 'COMMN' 
     order by dept1.COMPANY, dept1.DEPTID
end-SELECT
     
          
end-procedure
!*********************************************************************
!This procedure prints the store details in respective columns
!*********************************************************************
begin-procedure print-store-details
  show 'print-store-details'

let $log-found = 'N'
let $log-found-hst = 'N'

begin-SELECT on-error=sql-error-found('print-store-details-cur')
/*+ RULE */
PSD.COMPANY
PSD.PAYGROUP
PSD.DEPTID
PSD.TRANS_TOT
PSD.HRS_SENT_TOT
PSD.HRS_REJ_TOT

   move 'Y' to $log-found
   move &PSD.TRANS_TOT    to #trans_store_total
   move &PSD.HRS_SENT_TOT to #hrs_sent_total
   move &PSD.HRS_REJ_TOT  to #hrs_rej_total

from sysadm.PS_GEX_R_GEXPYCUR PSD
where PSD.COMPANY = $aud_company
and   PSD.PAYGROUP = $aud_paygroup
and   PSD.DEPTID = $deptid_save

end-SELECT

begin-SELECT on-error=sql-error-found('print-store-details-hst')
/*+ RULE */
HSTAUD.TRANS_TOT
HSTAUD.HRS_SENT_TOT
HSTAUD.HRS_REJ_TOT

   move 'Y' to $log-found-hst
   move &HSTAUD.TRANS_TOT    to #HST_trans_store_total
   move &HSTAUD.HRS_SENT_TOT to #HST_hrs_sent_total
   move &HSTAUD.HRS_REJ_TOT  to #HST_hrs_rej_total

from sysadm.PS_GEX_R_GEXPYHST HSTAUD
where HSTAUD.COMPANY = $aud_company
and   HSTAUD.PAYGROUP = $aud_paygroup
and   HSTAUD.DEPTID = $deptid_save

end-SELECT

if $log-found = 'Y' and
  $log-found-hst = 'Y'
  
  evaluate $GEX_TIME_COLLECT 
   when = 'Snoopy'
     use-report snopy-report
   when = 'CCS/Kronos'
   when = 'RSC-Kronos'												!ISDVAKG
     use-report krono-report
   when = 'SmartTrack'
     use-report smrt-report
   when = 'Paper'
     use-report paper-report
   when = 'Corp'
     use-report ncrp-report
   when = 'None'
     use-report none-report
   when-other
     use-report audit-report
  end-evaluate
   
   position (+1,1)
   
   let #LOAD_DIFF = #HST_trans_store_total - #trans_store_total
   Let #SENT-DIFF = #HST_hrs_sent_total - #hrs_sent_total
   If #HST_hrs_sent_total <> 0
   and #hrs_sent_total <> 0 
     Let #PERC-DIFF = ((#HST_hrs_sent_total - #hrs_sent_total)/ABS(#hrs_sent_total))*100
   else
     Let #PERC-DIFF = 0
   end-if

   COLUMNS 1 15 27 32 37 45 60 75 90 105 115 130 140

   print $GEX_TIME_COLLECT    ()
   next-column     
   print $PAY_RUN_ID         ()
   next-column     
   print $aud_company        ()
   next-column     
   print $aud_paygroup       ()
	 next-column     
   print $DEPTID_save    ()
	 next-column     
   print #HST_hrs_sent_total () edit 99999999.99
   next-column
   print #hrs_sent_total    () edit 99999999.99
   next-column 
   print #SENT-DIFF         () edit 99999.99
   next-column    
   print #PERC-DIFF         () edit 999.99
   next-column    
   print #HST_trans_store_total () edit 99999
   next-column
   print #trans_store_total () edit 99999
   next-column
   print #LOAD_DIFF         () edit 99999
   next-column    
   print #hrs_rej_total    () edit 99999999.99
   next-column     

end-if

if $log-found = 'Y' and
  $log-found-hst <> 'Y'
  
  evaluate $GEX_TIME_COLLECT 
   when = 'Snoopy'
     use-report snopy-report
   when = 'CCS/Kronos'
   when = 'RSC-Kronos'											!ISDVAKG
     use-report krono-report
   when = 'SmartTrack'
     use-report smrt-report
   when = 'Paper'
     use-report paper-report
   when = 'Corp'
     use-report ncrp-report
   when = 'None'
     use-report none-report
   when-other
     use-report audit-report
  end-evaluate
   
   position (+1,1)
   
   let #LOAD_DIFF = #HST_trans_store_total - #trans_store_total
   Let #SENT-DIFF = #HST_hrs_sent_total - #hrs_sent_total
   Let #PERC-DIFF = 100

   COLUMNS 1 15 27 32 37 45 60 75 90 105 115 130 140

   print $GEX_TIME_COLLECT    ()
   next-column     
   print $PAY_RUN_ID         ()
   next-column     
   print $aud_company        ()
   next-column     
   print $aud_paygroup       ()
	 next-column     
   print $DEPTID_save    ()
	 next-column     
   print #HST_hrs_sent_total () edit 99999999.99
   next-column
   print #hrs_sent_total    () edit 99999999.99
   next-column 
   print #SENT-DIFF         () edit 99999.99
   next-column    
   print #PERC-DIFF         () edit 999.99
   next-column    
   print #HST_trans_store_total () edit 99999
   next-column
   print #trans_store_total () edit 99999
   next-column
   print #LOAD_DIFF         () edit 99999
   next-column    
   print #hrs_rej_total    () edit 99999999.99
   next-column     

end-if

let #trans_store_total = 0
let #hrs_sent_total = 0
let #hrs_rej_total = 0
let #LOAD_DIFF = 0
let #HST_trans_store_total = 0
Let #SENT-DIFF = 0
let #HST_hrs_sent_total = 0

end-procedure
!*********************************************************************
!This procedure prints the store details in respective columns
!*********************************************************************
begin-procedure print-store-details-missing
  show 'print-store-details-missing'

let $GEX_TIME_COLLECT = 'MISSING'

begin-SELECT on-error=sql-error-found('print-store-details-missing')
	
MISSING.GEX_TIME_COLLECT

   move &MISSING.GEX_TIME_COLLECT    to $GEX_TIME_COLLECT 

from sysadm.PS_GEX_DEPT_TBL MISSING
WHERE MISSING.EFFDT = 
        (SELECT MAX(MISSING_ED.EFFDT) FROM PS_GEX_DEPT_TBL MISSING_ED 
        WHERE MISSING.SETID = MISSING_ED.SETID 
          AND MISSING.DEPTID = MISSING_ED.DEPTID 
          AND MISSING_ED.EFFDT <= SYSDATE) 
     AND MISSING.SETID = 'COMMN'
     AND MISSING.DEPTID = $deptid_save

end-SELECT


   let #trans_store_total = 0
   let #hrs_sent_total = 0
   let #hrs_rej_total = 0
   let $PAY_RUN_ID = ' '
 
  evaluate $GEX_TIME_COLLECT 
   when = 'Snoopy'
     use-report snopy-report
   when = 'CCS/Kronos'
   when = 'RSC-Kronos'											!ISDVAKG
     use-report krono-report
   when = 'SmartTrack'
     use-report smrt-report
   when = 'Paper'
     use-report paper-report
   when = 'Corp'
     use-report ncrp-report
   when = 'None'
     use-report none-report
   when-other
     use-report audit-report
  end-evaluate
 
   position (+1,1)
   
   let #LOAD_DIFF = 0
   Let #SENT-DIFF = 0
   Let #PERC-DIFF = 0

   COLUMNS 1 15 27 32 37 45 60 75 90 105 115 130 140

   print $GEX_TIME_COLLECT    ()
   next-column     
   print $PAY_RUN_ID         ()
   next-column     
   print $aud_company        ()
   next-column     
   print $aud_paygroup       ()
	 next-column     
   print $DEPTID_save    ()
	 next-column     
   print #HST_hrs_sent_total () edit 99999999.99
   next-column
   print #hrs_sent_total    () edit 99999999.99
   next-column 
   print #SENT-DIFF         () edit 99999.99
   next-column    
   print #PERC-DIFF         () edit 999.99
   next-column    
   print #HST_trans_store_total () edit 99999
   next-column
   print #trans_store_total () edit 99999
   next-column
   print #LOAD_DIFF         () edit 99999
   next-column    
   print #hrs_rej_total    () edit 99999999.99
   next-column     

   
let #trans_store_total = 0
let #hrs_sent_total = 0
let #hrs_rej_total = 0
let #LOAD_DIFF = 0
let #HST_trans_store_total = 0
Let #SENT-DIFF = 0
let #HST_hrs_sent_total = 0

end-procedure
!*********************************************************************
!This procedure prints the store details in respective columns
!*********************************************************************
begin-procedure print-store-details-paper
  show 'print-store-details-paper'


let #trans_store_total = 0
let #hrs_sent_total = 0
let #hrs_rej_total = 0
let #LOAD_DIFF = 0
let #HST_trans_store_total = 0
Let #SENT-DIFF = 0
let #HST_hrs_sent_total = 0
Let #PERC-DIFF = 0

  evaluate $GEX_TIME_COLLECT 
   when = 'Snoopy'
     use-report snopy-report
   when = 'CCS/Kronos'
   when = 'RSC-Kronos'											!ISDVAKG
     use-report krono-report
   when = 'SmartTrack'
     use-report smrt-report
   when = 'Paper'
     use-report paper-report
   when = 'Corp'
     use-report ncrp-report
   when = 'None'
     use-report none-report
   when-other
     use-report audit-report
  end-evaluate
   
   position (+1,1)

   COLUMNS 1 15 27 32 37 45 60 75 90 105 115 130 140

   print $GEX_TIME_COLLECT    ()
   next-column     
   print $PAY_RUN_ID         ()
   next-column     
   print $aud_company        ()
   next-column     
   print $aud_paygroup       ()
	 next-column     
   print $DEPTID_save    ()
	 next-column     
   print #HST_hrs_sent_total () edit 99999999.99
   next-column
   print #hrs_sent_total    () edit 99999999.99
   next-column 
   print #SENT-DIFF         () edit 99999.99
   next-column    
   print #PERC-DIFF         () edit 999.99
   next-column    
   print #HST_trans_store_total () edit 99999
   next-column
   print #trans_store_total () edit 99999
   next-column
   print #LOAD_DIFF         () edit 99999
   next-column    
   print #hrs_rej_total    () edit 99999999.99
   next-column     

end-procedure
