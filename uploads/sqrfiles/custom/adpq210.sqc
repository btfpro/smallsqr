!********************************************************************** 
! SQR Name:           adpq210.sqc  
! SQR Descr:          ADP Employment Tax, Q2, 2010 procedures 
! Created by:         drmonroe 
! Create date:        05/13/2011 
! Last modified by:   drmonroe
! Last modified date: 04/24/2015

#define adpq210_version    adpq210.sqc Apr 24, 2015

!     ********************************** Q1, 2012 release *****************************
!      Mar 22, 2012   - VFS1 change
!      Apr 16, 2012   - fix to include 12CC amendment information from multiple batches (BLK1)
!      Jun  9, 2012   - no employee level printing for adpamend.sqr (too big)
!   ********** V3Q2012 ***************************
!      Sep 14, 2012   - SKIP_EE_DETAILS_PRINT_ADPQ210, shrink code option for pbzqtr too
!      Nov  3, 2014   - New Hire removed, NM and NV logic left alone for Q3
!      Dec 22, 2014   - SKIP_EE_DETAILS_PRINT_ADPQ210_NV (fix to endif issue)
!      Feb 17, 2015   - USE_INT_CRITERIA
!      Mar 27, 2015   - AMP1 - 027. This is IDS Property Casualty Insurance Company. This is the only company that needs to be coded as G - General business filer
!      Apr 24, 2015   - revised AMP1 per the meeting
!-----------------------------------------------------------------------------------------------------------------------
                      
#ifdef ADP_TAX_QUARTERLY
  #ifndef ER_HEALTHCARE_CONTRIBUTIONS_CRITERIA
    #define ER_HEALTHCARE_CONTRIBUTIONS_CRITERIA  NV3.PLAN_TYPE in (''10'',''11'',''14'')  !can not have DED_CLASS
  #endif
#endif

#ifndef ER_HEALTHCARE_DED_CLASS_CRITERIA
  #define ER_HEALTHCARE_DED_CLASS_CRITERIA  NVCC.DED_CLASS in (''N'')
#endif


#if {SITE_ID} = 'ATK1'             
    #define ER_HEALTHCARE_CONTRIBUTIONS_CRITERIA  (NV3.PLAN_TYPE  = ''00'' AND NV3.DEDCD = ''EMC'')
#endif

#if {SITE_ID} = 'PAS1'             
 #define RIMINI_UPDATES
#endif

#if {SITE_ID} = 'SCP1'
  #define USE_PS_DED_SUBSET_CD NV3.DED_SUBSET_ID IN (''10'',''11'',''12'')
#endif

!ER Health Contributions     Default: DED_QTD, DED_YTD Plan_Type should be 10 (Medical), or 11 (Dental), or 14 (Vision); Ded_Class = "N"
!-----------------------
#ifndef HEALTHCARE_JURSIDICTION_CRITERIA
   #define HEALTHCARE_JURSIDICTION_CRITERIA   $state_trimmed = 'NV' and $class_trimmed = 'S'  ! this is used by the adp303q.sqc to determine which jurisdictions  
#endif

#ifndef ER_HEALTHCARE_BUSINESS_CLASS
  #define ER_HEALTHCARE_BUSINESS_CLASS  G  !F (Financial) or G (General/Default
#endif
  

begin-procedure init-adpq210    ! (called from adp303.sqc)

  show 'init-adpq210: adpq210_version = {adpq210_version}'
  
  #ifdef ADP_TAX_QUARTERLY
   #ifndef MAX_NEVADA_ASSOCIATES
    #define MAX_NEVADA_ASSOCIATES 10000
   #endif
   show 'MAX_NEVADA_ASSOCIATES = {MAX_NEVADA_ASSOCIATES}'

   create-array name=Nevada_Associate size={MAX_NEVADA_ASSOCIATES}
               field=Company:char
               field=Emplid:char
               field=Name:char
               field=TXGRS_QTD:number
               field=TXGRS_YTD:number
               field=ER_HEALTH_QTD:number
               field=ER_HEALTH_YTD:number

   #ifdef ER_Healthcare_rate
    show 'ER_Healthcare_rate enabled.  default = {ER_Healthcare_rate}'
   #endif  

   #ifndef MAX_NEW_MEXICO_ASSOCIATES
    #define MAX_NEW_MEXICO_ASSOCIATES 10000
   #endif
   show 'MAX_NEW_MEXICO_ASSOCIATES = {MAX_NEW_MEXICO_ASSOCIATES}'
   #ifdef OVERRIDE_NM_WC_FLAG_TABLE_NM0001
    show 'OVERRIDE_NM_WC_FLAG_TABLE_NM0001 enabled'
   #endif
   
   create-array name=New_Mexico_Associate size={MAX_NEW_MEXICO_ASSOCIATES}
               field=Company:char
               field=Emplid:char
               field=Name:char
               field=WC_Flag:char
               

  #endif
  
  #ifdef BYPASS_QUARTERLY_NEVADA_ER_HEALTHCARE_CONTRIB
   show 'BYPASS_QUARTERLY_NEVADA_ER_HEALTHCARE_CONTRIB enabled'
  #endif
  
  #ifdef ER_HEALTHCARE_BUSINESS_CLASS
   let $ER_HEALTHCARE_BUSINESS_CLASS = '{ER_HEALTHCARE_BUSINESS_CLASS}'
   show 'ER_HEALTHCARE_BUSINESS_CLASS           = ' $ER_HEALTHCARE_BUSINESS_CLASS
  #endif  

  #ifdef ER_HEALTHCARE_CONTRIBUTIONS_CRITERIA
   let $ER_HEALTHCARE_CONTRIBUTIONS_CRITERIA = '{ER_HEALTHCARE_CONTRIBUTIONS_CRITERIA}'
   show 'ER_HEALTHCARE_CONTRIBUTIONS_CRITERIA   = ' $ER_HEALTHCARE_CONTRIBUTIONS_CRITERIA
  #endif  

  #ifdef ER_HEALTHCARE_DED_CLASS_CRITERIA
   let $ER_HEALTHCARE_DED_CLASS_CRITERIA = '{ER_HEALTHCARE_DED_CLASS_CRITERIA}'
   show 'ER_HEALTHCARE_DED_CLASS_CRITERIA       = ' $ER_HEALTHCARE_DED_CLASS_CRITERIA
  #endif
  
 show ' '
  #ifdef GENERATE_MULTI_STATE_FLAG
  show 'GENERATE_MULTI_STATE_FLAG enabled'
  #endif

 show 'init-adpq210 complete'
 show ' '

end-procedure

begin-procedure Print-Hire-Associates

  #ifdef ADP_TAX_QUARTERLY
   #ifndef SKIP_EE_DETAILS_PRINT_ADPQ210
     do Print-New-Mexico-Associates
   #endif
  #endif
 
  #ifdef ADP_TAX_QUARTERLY
   #ifndef SKIP_EE_DETAILS_PRINT_ADPQ210_NV
     do Print-Nevada-Associates
   #endif
  #endif
 
end-procedure


!2. NEVADA REQUIREMENT (Quarterly)
!--------------------------------

#ifdef ADP_TAX_QUARTERLY
#ifndef SKIP_EE_DETAILS_PRINT_ADPQ210_NV

begin-procedure Log-Nevada-Associate

         
          if (#Nevada_Associates < {MAX_Nevada_ASSOCIATES})
            put $Current_Company
                $Current_Emplid
                $hirename
                #Nevada_Txgrs_QTD
                #Nevada_Txgrs_YTD
                #Nevada_ER_health_QTD
                #Nevada_ER_health_YTD
             into Nevada_Associate(#Nevada_Associates) 
               Company
               Emplid
               Name
               TXGRS_QTD
               TXGRS_YTD
               ER_HEALTH_QTD
               ER_HEALTH_YTD
               
             add 1 to #Nevada_Associates

	     if $SelectEmplid <> ''
	       show 'Log-Nevada-Associate, Emplid ' $Current_Emplid ' ' $hirename ' Taxable QTD = ' #Nevada_Txgrs_QTD edit 999,999.99 ' ER Health QTD = ' #Nevada_ER_health_QTD edit 999,999.99
             end-if
          else
             show 'ERROR: increase MAX_Nevada_ASSOCIATES, in adpq210.sqc.  Stopping program'
             stop
          end-if

end-procedure

begin-procedure Print-Nevada-Associates

 move '$$$,$$$,$$9.99mi' to $Fmtb2
 
 let #header_type = 53
 let $ReportTitle  = 'ADP Employment Tax, ER Healthcare / NV MBT Report'             
 show $ReportTitle ', Nevada_Associates = ' #Nevada_Associates 
 if #Nevada_Associates >  0
   ! This is where we'll list out the Nevada QTD NVS Taxable wages and QTD ER healthcare contributions, with company breaks
   ! ----------------------------------------------------------------------------------------------------------------------
   print 'Following are the Nevada Associates (with Spcl-UI Tax_Class ''S'' Balances).' (+2,1)
   print ' ' (+1,1)

   let #nev = 0
   while (#nev < #Nevada_Associates)

            get $C
                $E
                $hirename
                #Nevada_Txgrs_QTD
                #Nevada_Txgrs_YTD
                #Nevada_ER_health_QTD
                #Nevada_ER_health_YTD
             from Nevada_Associate(#Nev) 
               Company
               Emplid
               Name
               TXGRS_QTD
               TXGRS_YTD
               ER_HEALTH_QTD
               ER_HEALTH_YTD
      
      if #current-line > 56
         New-Page
      end-if

      if $c <> $c_prior and ($c_prior <> '')
      
        do Format-Number(#Nevada_Txgrs_QTD_c,     $Nevada_Txgrs_QTD,     $Fmtb2)
        do Format-Number(#Nevada_ER_health_QTD_c, $Nevada_ER_health_QTD, $Fmtb2)
        do Format-Number(#Nevada_Txgrs_YTD_c,     $Nevada_Txgrs_YTD,     $Fmtb2)
        do Format-Number(#Nevada_ER_health_YTD_c, $Nevada_ER_health_YTD, $Fmtb2)
      
	move 0		      to #Nevada_Txgrs_QTD_c
	move 0		      to #Nevada_Txgrs_YTD_c
	move 0		      to #Nevada_ER_health_QTD_c
	move 0		      to #Nevada_ER_health_YTD_c
      	
        print 'Company total: '        (+1,1)
        print $c_prior                 ()
        print $Nevada_Txgrs_QTD        (,68)
        print $Nevada_ER_health_QTD    (,88)
        print $Nevada_Txgrs_YTD        (,111)
        print $Nevada_ER_health_YTD    (,131)
        print ' ' (+1,1)
      end-if

      move $c to $c_prior

       do Format-Number(#Nevada_Txgrs_QTD,     $Nevada_Txgrs_QTD,     $Fmtb2)
       do Format-Number(#Nevada_Txgrs_YTD,     $Nevada_Txgrs_YTD,     $Fmtb2)
       do Format-Number(#Nevada_ER_health_QTD, $Nevada_ER_health_QTD, $Fmtb2)
       do Format-Number(#Nevada_ER_health_YTD, $Nevada_ER_health_YTD, $Fmtb2)

       print $C                     (+1,1)
       print $E                     (,10)
       print $hirename              (,28,30)
       print $Nevada_Txgrs_QTD      (,68)
       print $Nevada_ER_health_QTD  (,88)
       print $Nevada_Txgrs_YTD      (,111)
       print $Nevada_ER_health_YTD  (,131)
      
      
      
      add #Nevada_Txgrs_QTD       to #Nevada_Txgrs_QTD_hash
      add #Nevada_ER_health_QTD   to #Nevada_ER_health_QTD_hash
      add #Nevada_Txgrs_YTD       to #Nevada_Txgrs_YTD_hash
      add #Nevada_ER_health_YTD   to #Nevada_ER_health_YTD_hash
      add #Nevada_Txgrs_QTD       to #Nevada_Txgrs_QTD_c
      add #Nevada_ER_health_QTD   to #Nevada_ER_health_QTD_c
      add #Nevada_Txgrs_YTD       to #Nevada_Txgrs_YTD_c
      add #Nevada_ER_health_YTD   to #Nevada_ER_health_YTD_c
      
      add 1 to #nev
      
      show #nev edit 99999 '. ' $c ' ' $e  ' NV-TxgrsQtd ' $Nevada_Txgrs_QTD ' NV-HlthERQtd ' $Nevada_ER_health_QTD ' NV-TxgrsYtd ' $Nevada_Txgrs_YTD ' NV-HlthERYtd ' $Nevada_ER_health_YTD
      
    end-while

    if ($c_prior <> '')
     do Format-Number(#Nevada_Txgrs_QTD_c,     $Nevada_Txgrs_QTD,     $Fmtb2)
     do Format-Number(#Nevada_ER_health_QTD_c, $Nevada_ER_health_QTD, $Fmtb2)
     do Format-Number(#Nevada_Txgrs_YTD_c,     $Nevada_Txgrs_YTD,     $Fmtb2)
     do Format-Number(#Nevada_ER_health_YTD_c, $Nevada_ER_health_YTD, $Fmtb2)
    
     print 'Company total: '        (+1,1)
     print $c_prior                 ()
     print $Nevada_Txgrs_QTD        (,68)
     print $Nevada_ER_health_QTD    (,88)
     print $Nevada_Txgrs_YTD        (,111)
     print $Nevada_ER_health_YTD    (,131)
     print ' ' (+1,1)
    end-if
    
    do Format-Number(#Nevada_Txgrs_QTD_hash,     $Nevada_Txgrs_QTD,     $Fmtb2)
    do Format-Number(#Nevada_ER_health_QTD_hash, $Nevada_ER_health_QTD, $Fmtb2)
    do Format-Number(#Nevada_Txgrs_YTD_hash,     $Nevada_Txgrs_YTD,     $Fmtb2)
    do Format-Number(#Nevada_ER_health_YTD_hash, $Nevada_ER_health_YTD, $Fmtb2)
     
    print 'Grand total'            (+1,1)
    print $Nevada_Txgrs_QTD        (,68)
    print $Nevada_ER_health_QTD    (,88)
    print $Nevada_Txgrs_YTD        (,111)
    print $Nevada_ER_health_YTD    (,131)
    print ' ' (+1,1)

    print 'Nevada Accociate (YTD) Count = ' (+2,1)
    print #Nevada_Associates                () edit 999999 
   show 'Nevada Accociate (YTD) Count = ' #Nevada_Associates

 else
   print 'There are no Nevada associates identified (Tax_class ''S'').'  (+2,4)
   print '-----------------------------------------------------------.'  (+1,4)
 end-if
 
 #ifdef BYPASS_QUARTERLY_NEVADA_ER_HEALTHCARE_CONTRIB
     print 'Nevada ER healthcare contributions bypassd via BYPASS_QUARTERLY_NEVADA_ER_HEALTHCARE_CONTRIB definition.'  (+2,1)
 #else
    print 'ER-HealthCare-contributions: for Plan Types                   = ' (+2,1)
    print $ER_HEALTHCARE_CONTRIBUTIONS_CRITERIA                                  ()
    print 'ER-HealthCare-contributions: for Deduction class              = ' (+1,1)
    print $ER_HEALTHCARE_DED_CLASS_CRITERIA                                      ()
    print 'ER-HealthCare-contributions: for Business Class (G or F)      = ' (+1,1)
    print $ER_HEALTHCARE_BUSINESS_CLASS                                          () 

    #ifdef ER_Healthcare_rate
     print 'ER_Healthcare_rate enabled. default = {ER_Healthcare_rate}'      (+1,1)                     
    #endif
 #endif
 
 New-Page


end-procedure
#endif

begin-procedure get-ER-HealthCare-contributions ! adp303q, #RptYear>= 2010, called when outputting Wage recs

 if $SelectEmplid <> ''
    show 'get-ER-HealthCare-contributions . Current: ' $State_Trimmed ' ' $Class_Trimmed ' ' $Current_Emplid
 end-if

 if {HEALTHCARE_JURSIDICTION_CRITERIA}         !10/27/2011 to be sure for now to pull it for only NVS

 if $SelectEmplid <> ''
    show 'get-ER-HealthCare-contributions . Entering Healthcare ER logic'
 end-if
 
 let #Health_care_contrib_QTD     = 0
 let #Health_care_contrib_YTD     = 0

 !Dec 13, 2010 - only process 2010 Q3-Q4, as all other quarters are invalid at ADP
 !--------------------------------------------------------------------------------
 if #RptYear > 2010 or (#RptYear = 2010 and #RptQtr > 2)

#ifndef BYPASS_QUARTERLY_NEVADA_ER_HEALTHCARE_CONTRIB
  
#ifdef ER_Healthcare_rate
    do get_ER_Healthcare_rate  !returns #ER_Healthcare_rate based on $Qtr_End_Native and $Extract_Compid, $Current_Company - in probiz.sqc
    let #Health_care_contrib_QTD =  #TaxBalance_Nlgrs_QTD * #ER_Healthcare_rate
    let #Health_care_contrib_YTD =  #TaxBalance_Nlgrs_YTD * #ER_Healthcare_rate
    if $SelectEmplid <> ''
     show 'ER Health calculated for ' $state_trimmed $class_trimmed ', QTD = ' #Health_care_contrib_QTD  ', YTD = ' #Health_care_contrib_YTD 
    end-if
#else

  if $SelectEmplid <> ''
   show 'get-ER-HealthCare-contributions: for Plan Types                   = ' $ER_HEALTHCARE_CONTRIBUTIONS_CRITERIA
   show 'get-ER-HealthCare-contributions: for Deduction class              = ' $ER_HEALTHCARE_DED_CLASS_CRITERIA 
   show 'get-ER-HealthCare-contributions: for Business Class (G or F)      = ' $ER_HEALTHCARE_BUSINESS_CLASS
   show 'get-ER-HealthCare-contributions: for ' $state_trimmed $class_trimmed ', TaxBalance_Txgrs_Qtd = ' #TaxBalance_Txgrs_Qtd
  end-if
  
  do Get_healthcare_er_Earns

#endif

  #ifdef SECURE_DATA_MASKING
    let $hirename =  rtrim($FirstName,' ') || ' ' || rtrim($MiddleName,' ') || ' ' || 'Testing'
  #else
    let $hirename =  rtrim($FirstName,' ') || ' ' || rtrim($MiddleName,' ') || ' ' || rtrim($LastName,' ')
  #endif
  let #Nevada_Txgrs_QTD      = #TaxBalance_Txgrs_QTD
  let #Nevada_Txgrs_YTD      = #TaxBalance_Txgrs_YTD
  let #Nevada_ER_health_QTD  = #Health_care_contrib_QTD
  let #Nevada_ER_health_YTD  = #Health_care_contrib_YTD   
  if $SelectEmplid <> ''
   show 'ER Health extracted for ' $state_trimmed $class_trimmed ', QTD = ' #Health_care_contrib_QTD  ', YTD = ' #Health_care_contrib_YTD 
  end-if

   #ifdef ADP_TAX_QUARTERLY
    #ifndef SKIP_EE_DETAILS_PRINT_ADPQ210_NV
     do Log-Nevada-Associate
    #endif
   #endif
#endif

 add 1 to #Health_care_contrib_count_hash
 add #Health_care_contrib_QTD to #Health_care_contrib_QTD_Hash
 add #Health_care_contrib_YTD to #Health_care_contrib_YTD_Hash
 
 do save-w-balances

 let #t = 0
 do Format-Number(#t,$TaxBalance_Tax_Qtd,   '999999999999999mi')
 let #t = 0
 do Format-Number(#t,$TaxBalance_Txgrs_Qtd, '999999999999999mi')
 let #t = 0
 do Format-Number(#t,$TaxBalance_Nlgrs_Qtd, '999999999999999mi')
 let #t = 0
 do Format-Number(#t,$TaxBalance_Tax_YTD,   '999999999999999mi')
 let #t = 0
 do Format-Number(#t,$TaxBalance_Txgrs_YTD, '999999999999999mi')
 let #t = 0
 do Format-Number(#t,$TaxBalance_Nlgrs_YTD, '999999999999999mi')

 let #t = #Health_care_contrib_QTD * 100
 do Format-Number(#t,$TaxBalance_Gross_Qtd, '999999999999999mi')
 let #t = #Health_care_contrib_YTD * 100
 do Format-Number(#t,$TaxBalance_Gross_Ytd, '999999999999999mi')

 let $ER_HEALTHCARE_BUSINESS_CLASS = '{ER_HEALTHCARE_BUSINESS_CLASS}'
 #if {SITE_ID} = 'MIB1'
  evaluate $Current_Company
    when = '726'
    when = '952'
      let $ER_HEALTHCARE_BUSINESS_CLASS = 'F'
      break
    when-other
      break                 
  end-evaluate
 #endif
 #if {SITE_ID} = 'AMP1'                                !  *** AMP1 logic for their 'G' company, 027 ***
  let $ER_HEALTHCARE_BUSINESS_CLASS = 'F'              ! Default to 'F' (2013 and earlier)
  evaluate $Current_Company                            ! ----------------------------------
    when = '027'
      if #RptYear = 2014                               ! 2014 logic
         if #RptQtr = 4                                ! ----------
           let $ER_HEALTHCARE_BUSINESS_CLASS = 'G'     ! only in Q4, 2014 was it filed as G (Correctly)
         end-if
      else
         if #RptYear = 2015                            ! 2015 logic
           if #RptQtr > 1                              ! ----------
             let $ER_HEALTHCARE_BUSINESS_CLASS = 'G'   ! Q2-Q4, 2015 to be filed as 'G', correctly, Q1 was filed as an F, leave it that way
           end-if
         else    
           if #RptYear >= 2016                         ! 2016 and beyond
             let $ER_HEALTHCARE_BUSINESS_CLASS = 'G'   ! -----------------------
           end-if
         end-if
      end-if
      break
    when-other
      break                 
  end-evaluate
 #endif
 
 !9/20/10, remove these to avoid doubled totals in pbzqtr.pdf
 !--------------------------------------------------------
 !add #Health_care_contrib_QTD to #Health_care_contrib_QTD_hash
 !add #Health_care_contrib_YTD to #Health_care_contrib_YTD_hash
 !--------------------------------------------------------
 
 let $Output_Taxcode = $state_trimmed || $class_trimmed || 'HEALTH_ER' || $ER_HEALTHCARE_BUSINESS_CLASS
 let $Output_Taxcode = rpad($Output_Taxcode,15,' ')
                     
 let $rectp = 'W'
 do Out-W-rec   ! <--------------- this is the NV-Health Contribution Wage record -------

 do restore-w-balances
 let $Output_TaxCode = rtrim($Output_TaxCode,' ') || $ER_HEALTHCARE_BUSINESS_CLASS
 let $Output_Taxcode = rpad($Output_Taxcode,15,' ')
  
  #ifdef  enable_performance_monitor
     do Get-Current-Time
     move 'get-ER-HealthCare-contributions' to $debug-proc1
     move 'PS_DEDUCTION_BAL'    to $debug-table1
     do log-delta-time
  #endif
 
 else
    if $SelectEmplid <> ''
     show 'get-ER-HealthCare-contributions: Nevada ER Healthcare data only valid from 2010-Q3 - not ' $RptYear '-Q' $RptQtr
    end-if
 end-if

 end-if

end-procedure

begin-procedure Get_healthcare_er_Earns

   if $SelectEmplid <> '' 
     show 'Get_healthcare_er_Earns: ' $state_trimmed ' ' $class_trimmed
   end-if  

begin-select
NVA1.BALANCE_QTR
NVBB.COMPANY
NVBB.PAYGROUP
NVBB.PAY_END_DT
NVBB.{pg}
NVBB.{ln}
NVBB.OFF_CYCLE
#if {PeopleSoft_Version} >= '8'      !10/12/07   use sepchk
NVBB.SEPCHK
#endif
NVCC.DEDCD
NVCC.DED_CUR

   if $SelectEmplid <> '' 
   show 'Get_healthcare_er_Earns: ' $state_trimmed $class_trimmed ', PAY_END_DT ' &NVBB.PAY_END_DT ', Dedcd = ' &NVCC.DEDCD ', NVCC.DED_CUR = ' &NVCC.DED_CUR
   end-if  

   do Get_healthcare_er_Earns_type
   
   if $healthcare_earns = 't'
     if &NVA1.BALANCE_QTR  = #RptQtr
      let #Health_care_contrib_QTD = #Health_care_contrib_QTD + &NVCC.DED_CUR
     end-if
     let #Health_care_contrib_YTD = #Health_care_contrib_YTD + &NVCC.DED_CUR
   end-if
   

 FROM  PS_PAY_CHECK{WAREHOUSE_SUFFIX}      NVBB {NOLOCK_SQL}, 
       PS_PAY_DEDUCTION{WAREHOUSE_SUFFIX}  NVCC {NOLOCK_SQL}, 
       PS_PAY_TAX{WAREHOUSE_SUFFIX}        NVTT {NOLOCK_SQL}, 
       PS_PAY_CALENDAR{WAREHOUSE_SUFFIX}   NVLL {NOLOCK_SQL}, 
       PS_PAY_CAL_BAL_ID{WAREHOUSE_SUFFIX} NVA1 {NOLOCK_SQL}

 WHERE
      NVLL.COMPANY         = NVA1.COMPANY
  AND NVLL.PAYGROUP        = NVA1.PAYGROUP
  AND NVLL.PAY_END_DT      = NVA1.PAY_END_DT
  AND NVA1.BALANCE_ID      = $Calendar_Year_Id
 #ifdef USE_INT_CRITERIA
  AND NVA1.BALANCE_YEAR   = int(\$RptYearZ\)
 #else
  AND NVA1.BALANCE_YEAR    = #RptYear
 #endif

  AND NVCC.COMPANY    = NVLL.COMPANY
  AND NVCC.PAYGROUP   = NVLL.PAYGROUP
  AND NVCC.PAY_END_DT = NVLL.PAY_END_DT
  AND NVCC.OFF_CYCLE  = NVBB.OFF_CYCLE
  AND NVCC.{pg}       = NVBB.{pg}
  AND NVCC.{ln}       = NVBB.{ln}
  #if {PeopleSoft_Version} >= '8'      !10/12/07   use sepchk
   AND NVCC.SEPCHK     = NVBB.SEPCHK
  #endif
  
  AND NVCC.COMPANY    = NVTT.COMPANY
  AND NVCC.PAYGROUP   = NVTT.PAYGROUP
  AND NVCC.PAY_END_DT = NVTT.PAY_END_DT
  AND NVCC.OFF_CYCLE  = NVTT.OFF_CYCLE
  AND NVCC.{pg}       = NVTT.{pg}
  AND NVCC.{ln}       = NVTT.{ln}
  #if {PeopleSoft_Version} >= '8'      !10/12/07   use sepchk
   AND NVCC.SEPCHK     = NVTT.SEPCHK
  #endif

  #ifdef MVS
    AND \$ER_HEALTHCARE_DED_CLASS_CRITERIA\
  #else
    AND [$ER_HEALTHCARE_DED_CLASS_CRITERIA]
  #endif

  AND NVTT.STATE      = $state_trimmed
  AND NVTT.TAX_CLASS  = $class_trimmed

  AND NVBB.COMPANY         = NVLL.COMPANY
  AND NVBB.PAYGROUP        = NVLL.PAYGROUP
  AND NVBB.PAY_END_DT      = NVLL.PAY_END_DT
  AND NVBB.{chk_num}       <> 0
  AND NVBB.PAYCHECK_STATUS IN ('F','R','A')
  AND NVBB.EMPLID          = $Current_EmplID
  AND NVBB.COMPANY         = $Current_Company
  
  AND NVBB.CHECK_DT        <= $Qtr_End_Native   !added on 9/24/10 so we don't go beyond end of qtr for YTD numbers
  
  ORDER BY NVBB.PAY_END_DT

 #ifdef SELECT_WITH_UR
  with ur
 #end-if
end-select

end-procedure

begin-procedure Get_healthcare_er_Earns_type

  let $healthcare_earns = 'f'

#ifdef USE_PS_DED_SUBSET_CD 
  move '{USE_PS_DED_SUBSET_CD}' to $USE_PS_DED_SUBSET_CD
 show 'USE_PS_DED_SUBSET_CD = ' $USE_PS_DED_SUBSET_CD
#endif

BEGIN-SELECT loops = 1
NV3.DEDCD

   if $SelectEmplid <> '' 
   show 'Get_healthcare_er_Earns_type: Healthcare Dedcd = ' &NV3.DEDCD 
   end-if 
   
   let $healthcare_earns = 't'

#ifdef USE_PS_DED_SUBSET_CD

  FROM PS_DED_SUBSET_CD NV3
  WHERE NV3.EFFDT = (SELECT MAX(EFFDT) FROM PS_DED_SUBSET_CD
        WHERE PLAN_TYPE = NV3.PLAN_TYPE 
          AND DEDCD     = NV3.DEDCD 
          AND EFFDT   <= $AsOfDate) 

          #ifdef MVS
          AND \$USE_PS_DED_SUBSET_CD\
          #else
          AND [$USE_PS_DED_SUBSET_CD]
          #endif

#else

  FROM  PS_DEDUCTION_TBL NV3 {NOLOCK_SQL}
  WHERE NV3.DEDCD = &NVCC.DEDCD

     #ifdef MVS
      AND \$ER_HEALTHCARE_CONTRIBUTIONS_CRITERIA\
     #else
      AND [$ER_HEALTHCARE_CONTRIBUTIONS_CRITERIA]
     #endif

    AND NV3.EFFDT     = (SELECT MAX(EFFDT)
      FROM   PS_DEDUCTION_TBL {NOLOCK_SQL}
      WHERE  PLAN_TYPE        = NV3.PLAN_TYPE
        AND  DEDCD            = NV3.DEDCD
        AND  EFFDT           <= $AsOfDate)

#endif

#ifdef SELECT_WITH_UR
 with ur
#end-if
end-select
  
end-procedure

!4.New Mexico W/C flag (QUARTERLY)
!--------------------------------
begin-procedure get_NM_WC_flag  !if last check in the quarter is a NM check and the person is active.... set the flag to Y

  #ifdef  enable_performance_monitor
    do Get-Current-Time
    let $display_dt0 = $display_dt 
  #endif

 
#ifdef OVERRIDE_NM_WC_FLAG_TABLE_NM0001

   !Q2, 2010, Original May/June 2010 logic option 12/27/10
   !7/12/2011 updated to NOT be dependent on when the NM0001 code appears, as SIT is overriding SUI
   !-----------------------------------------------------------------------------------------------
   let $NM_WC_flag = 'N'

BEGIN-SELECT 
NMOV.BALANCE_PERIOD
NMOV.TAX_CLASS
NMOV.LOCALITY
NMOV.TXGRS_QTD
NMOV.NLGRS_QTD
NMOV.TAX_QTD

     if $SelectEmplid <> ''
       show 'get_NM_WC_flag: ' &NMOV.TAX_CLASS ' ' &NMOV.LOCALITY ' ' &NMOV.BALANCE_PERIOD ', QTD Tax ' &NMOV.TAX_QTD ', QTD Txgrs ' &NMOV.TXGRS_QTD ', QTD Nlgrs ' &NMOV.NLGRS_QTD
     end-if

     #if {SITE_ID} = 'RBT1'  
      let $NM_WC_flag = 'Y'
     #else
      if &NMOV.TAX_QTD > 0 or &NMOV.TXGRS_QTD > 0 or &NMOV.NLGRS_QTD > 0
       let $NM_WC_flag = 'Y'
      end-if
     #endif
     
     FROM  PS_TAX_BALANCE NMOV
       WHERE  NMOV.EMPLID        =  $Current_Emplid
         AND  NMOV.COMPANY       =  $Current_Company
         AND  NMOV.STATE         = 'NM'                !$multi_st is state code for whichever multi-state (IA, AK...) the person is in in this company
         #if {SITE_ID} = 'RBT1'  
          AND ((NMOV.LOCALITY = 'NM0001' AND NMOV.TAX_CLASS  in ('B','H')) OR (NMOV.LOCALITY = 'NM0001ER' AND NMOV.TAX_CLASS = 'R')) AND NMOV.TAX_QTD <> 0
         #else
          AND  NMOV.LOCALITY     = 'NM0001'
         #endif
         AND  NMOV.BALANCE_ID    = $Calendar_Year_Id
      #ifdef USE_INT_CRITERIA
         AND NMOV.BALANCE_YEAR  = int(\$RptYearZ\) 
         AND NMOV.BALANCE_QTR   = int(\$RptQtrZ\) 
      #else
         AND NMOV.BALANCE_YEAR = #RptYear
         AND NMOV.BALANCE_QTR  = #RptQtr
      #endif


#ifdef SELECT_WITH_UR
 with ur
#end-if
end-select

   let $NM_WC_flag_str = $NM_WC_flag
   if $NM_WC_flag = 'Y'
       let $NM_WC_flag_str = $NM_WC_flag_str || ' (NM0001 override)'
   end-if
   if $SelectEmplid <> ''
     show 'get_NM_WC_flag: OVERRIDE_NM_WC_FLAG_TABLE_NM0001:  NM_WC_flag --> ' $NM_WC_flag
   end-if

#else
 
  let $NM_WC_STATE      = ''
  let $NM_WC_flag       = 'N'
 
begin-select loops=1
NMTT.PAY_END_DT
NMTT.STATE
NMTT.TAX_CLASS

  if $SelectEmplid <> ''
    show 'get_NM_WC_flag ' &NMTT.PAY_END_DT ' ' &NMTT.STATE ' ' &NMTT.TAX_CLASS
  end-if
  
  let $NM_WC_STATE      = rtrim(&NMTT.STATE,' ')
   
 FROM  PS_PAY_CHECK NMCC {NOLOCK_SQL}, PS_PAY_TAX NMTT {NOLOCK_SQL}
 WHERE NMCC.EMPLID     = $Current_EmplID
   AND NMCC.COMPANY    = $Current_Company
   AND NMCC.CHECK_DT   >= $Qtr_Start_Native  
   AND NMCC.CHECK_DT   <= $Qtr_End_Native   
   AND NMCC.PAYCHECK_STATUS IN ('F','R','A')
   AND NMCC.COMPANY    = NMTT.COMPANY
   AND NMCC.PAYGROUP   = NMTT.PAYGROUP
   AND NMCC.PAY_END_DT = NMTT.PAY_END_DT
   AND NMCC.OFF_CYCLE  = NMTT.OFF_CYCLE
   AND NMCC.{pg}       = NMTT.{pg}
   AND NMCC.{ln}       = NMTT.{ln}
   #if {PeopleSoft_Version} >= '8'      !10/12/07   use sepchk
    AND NMCC.SEPCHK     = NMTT.SEPCHK
   #endif
   AND NMTT.STATE <> '$U'
   AND NMTT.TAX_CLASS in ('U')
   
  ORDER BY NMCC.CHECK_DT DESC

#ifdef SELECT_WITH_UR
 with ur
#end-if
end-select

  if $NM_WC_STATE = 'NM' and ($empl_status = 'A' or $empl_status = 'L' or $empl_status = 'P')
    let $NM_WC_flag = 'Y'
  end-if
  
  if $SelectEmplid <> ''
    show 'get_NM_WC_flag: Last State ' $NM_WC_STATE ' ' $empl_status ' --> ' $NM_WC_flag
  end-if

 #ifdef  enable_performance_monitor
    do Get-Current-Time
    move 'get_NM_WC_flag' to $debug-proc1
    move 'PS_PAY_CHECK'    to $debug-table1
    do log-delta-time
 #endif

 #ifdef SECURE_DATA_MASKING
   let $hirename =  rtrim($FirstName,' ') || ' ' || rtrim($MiddleName,' ') || ' ' || 'Testing'
 #else
   let $hirename =  rtrim($FirstName,' ') || ' ' || rtrim($MiddleName,' ') || ' ' || rtrim($LastName,' ')
 #endif

 #ifdef NM_Workers_comp_coverage_override
 
      Let $NM_WC_flag = '{NM_Workers_comp_coverage_override}'
      if $NM_WC_flag <> 'Y'    
        LET $NM_WC_flag = 'N'
      end-if
      let $NM_WC_flag_str = $NM_WC_flag
      let $NM_WC_flag_str = $NM_WC_flag_str || ' (Site override)'
 
 #else
 
   #ifdef OVERRIDE_NM_WC_FLAG_TABLE
    do OVERRIDE_NM_WC_FLAG_TABLE
   #endif

   let $NM_WC_flag_str = $NM_WC_flag
   if $NM_WC_override_flag <> ''
    let $NM_WC_flag_str = $NM_WC_flag_str || ' (Associate override)'
   end-if
 #endif

#endif  !OVERRIDE_NM_WC_FLAG_TABLE_NM0001

 do Log-New-Mexico-Associate

end-PROCEDURE  

begin-procedure Log-New-Mexico-Associate

  if (#New_Mexico_Associates < {MAX_NEW_MEXICO_ASSOCIATES})

    put $Current_Company
        $Current_Emplid
        $hirename
        $NM_WC_flag_str
    into New_Mexico_Associate(#New_Mexico_Associates) 
       Company
       Emplid
       Name
       WC_Flag         

     add 1 to #New_Mexico_Associates

   if $SelectEmplid <> ''
    show 'Log-New-Mexico-Associate, New Emplid ' $Current_Emplid ' name: ' $hirename ' ' $NM_WC_flag
   end-if
  else
     show 'ERROR: increase MAX_NEW_MEXICO_ASSOCIATES, in adpq210.sqc.  Stopping program'
     stop
  end-if

end-procedure

begin-procedure Print-New-Mexico-Associates

#ifndef SKIP_EE_DETAILS_PRINT_ADPQ210

 let #header_type = 54
 let $ReportTitle  = 'ADP Employment Tax, New Mexico W/C Report'             
 show $ReportTitle ', New_Mexico_Associates = ' #New_Mexico_Associates 
 if #New_Mexico_Associates >  0
   ! This is where we'll list out the Nevada QTD NVS Taxable wages and QTD ER healthcare contributions, with company breaks
   ! ----------------------------------------------------------------------------------------------------------------------
   print 'New Mexico Associates Workers Comp Assessment Flags.' (+2,1)
   print ' ' (+1,1)

   let #nm = 0
   while (#nm < #New_Mexico_Associates)

            get $C
                $E
                $hirename
                $F
             from New_Mexico_Associate(#nm) 
               Company
               Emplid
               Name
               WC_Flag
               
      if #current-line > 56
         New-Page
         print 'Company  Emplid            New Mexico Associate Name                            W/C Flag' (+2,1)
         print ' ' (+1,1)
      end-if

      if $c <> $c_prior and ($c_prior <> '')
        print 'Company total: ' (+1,1)
        print $c_prior         ()
        print ' (with New Mexico W/C Flag set to ''Y'') = ' ()
        print #New_Mexico_Count_c      () edit 999999
        print ' ' (+1,1)
	move 0		      to #New_Mexico_Count_c
      end-if

       move $c to $c_prior
       print $C                     (+1,1)
       print $E                     (,10)
       print $hirename              (,28,30)
       print $F                     (,85)

       if substr($F,1,1) = 'Y'
          add 1 to #New_Mexico_Count_c
          add 1 to #New_Mexico_Count_hash
       end-if
       
      add 1 to #nm
      
    end-while

    if ($c_prior <> '')
        print 'Company total: ' (+1,1)
        print $c_prior         ()
        print ' (with New Mexico W/C Flag set to ''Y'') = ' ()
        print #New_Mexico_Count_c      () edit 999999
    end-if
    
    print 'Grand total   (with New Mexico W/C Flag set to ''Y'') = ' (+2,1)
    print #New_Mexico_Count_hash   () edit 999999
    print 'New Mexico Accociate Count                          = ' (+1,1)
    print #New_Mexico_Associates () edit 999999
    
    #ifdef NM_Workers_comp_coverage_override
    print 'New Mexico SITE override for W/C flag = '               (+2,1)
    print '{NM_Workers_comp_coverage_override}'                    ()
    #endif
    #ifdef OVERRIDE_NM_WC_FLAG_TABLE
    print 'OVERRIDE_NM_WC_FLAG_TABLE enabled'                      (+1,1)
    #endif
    #ifdef OVERRIDE_NM_WC_FLAG_TABLE_NM0001
    print 'OVERRIDE_NM_WC_FLAG_TABLE_NM0001 enabled'               (+1,1)
    #endif
    show 'New_Mexico Accociate Count    = ' #New_Mexico_Associates
    show 'New_Mexico associates Flagged = ' #New_Mexico_Count_hash

 else
   print 'There are no New Mexico associates .'  (+2,4)
   print '-----------------------------------.'  (+1,4)
 end-if
 
 New-Page

#endif
end-procedure


#ifdef OVERRIDE_NM_WC_FLAG_TABLE
begin-procedure OVERRIDE_NM_WC_FLAG_TABLE  !Project: ADP_NM_WC_OVERRIDE

 let $NM_WC_override_flag = ''
begin-select
NM0.PROCESS_FLAG

  let $NM_WC_override_flag = &NM0.PROCESS_FLAG

  FROM PS_{Client_Table_Prefix}NM_WC_ORIDE{Client_Table_Suffix} NM0
  where NM0.COMPANY = $Current_Company
   AND  NM0.EMPLID =  $Current_Emplid

end-select

   if $NM_WC_override_flag <> ''
     let $NM_WC_flag = $NM_WC_override_flag
   end-if

  if $SelectEmplid <> '' 
   show 'OVERRIDE_NM_WC_FLAG_TABLE:  ' $NM_WC_override_flag ' --> ' $NM_WC_flag
  end-if
    
end-procedure
#endif

#endif ! endif ADP_TAX_QUARTERLY

!------------------------------------------------------------------------
!Common procedures

begin-procedure save-w-balances
            !Save any W record elements that we need to change to stuff the 3PSP in
            !----------------------------------------------------------------------
            move $Output_TaxCode       to $Saved_Output_TaxCode
            move $TaxBalance_Tax_Qtd   to $Saved_TaxBalance_Tax_Qtd
            move $TaxBalance_Txgrs_Qtd to $Saved_TaxBalance_Txgrs_Qtd
            move $TaxBalance_Nlgrs_Qtd to $Saved_TaxBalance_NLgrs_Qtd   !4/27/06 fix
            move $TaxBalance_Tax_Ytd   to $Saved_TaxBalance_Tax_Ytd
            move $TaxBalance_Txgrs_Ytd to $Saved_TaxBalance_Txgrs_Ytd
            move $TaxBalance_Nlgrs_Ytd to $Saved_TaxBalance_Nlgrs_Ytd
            move $TaxBalance_Gross_Qtd to $Saved_TaxBalance_Gross_Qtd
            move $TaxBalance_Gross_Ytd to $Saved_TaxBalance_Gross_Ytd
            move $TaxBalance_Tip_Wages_Qtd to $Saved_TaxBalance_Tip_Wages_Qtd

            move $Sick_Pay_Qtd              to   $Saved_Sick_Pay_Qtd                    
            move $Sick_Pay_Ytd              to   $Saved_Sick_Pay_Ytd                    
            move $Uncol_tips_QTD            to   $Saved_Uncol_tips_QTD                
            move $Uncol_gtl_QTD             to   $Saved_Uncol_gtl_QTD                  
            move $TaxBalance_Tip_Wages_Ytd  to	 $Saved_TaxBalance_Tip_Wages_Ytd 
            move $Stock_Options_QTD         to	 $Saved_Stock_Options_QTD        
            move $Meals_employer_conv_YTD   to	 $Saved_Meals_employer_conv_YTD  
            move $Moving_exp_3rdParty_YTD   to	 $Saved_Moving_exp_3rdParty_YTD  
            move $Qual_transportation_YTD   to	 $Saved_Qual_transportation_YTD  
            move $Severence_pay_QTD         to	 $Saved_Severence_pay_QTD        
            move $Meal_Allowances_YTD       to	 $Saved_Meal_Allowances_YTD      
                       

            let #t = 0
            do Format-Number(#t,$Sick_Pay_Qtd,             '999999999999999mi')
            do Format-Number(#t,$Sick_Pay_Ytd,             '999999999999999mi')
    	    do Format-Number(#t,$Uncol_tips_QTD,           '999999999999999mi')
	    do Format-Number(#t,$Uncol_gtl_QTD,            '999999999999999mi')
	    do Format-Number(#t,$TaxBalance_Tip_Wages_Ytd, '999999999999999mi')
	    do Format-Number(#t,$Stock_Options_QTD,        '999999999999999mi')

            !9/10/10 - this (below) was formatted for 14 not 16 chars
	    do Format-Number(#t,$TaxBalance_Tip_Wages_Qtd, '999999999999999mi')

	    do Format-Number(#t,$Meals_employer_conv_YTD,  '9999999999999mi')
	    do Format-Number(#t,$Moving_exp_3rdParty_YTD,  '9999999999999mi')
	    do Format-Number(#t,$Qual_transportation_YTD,  '9999999999999mi')
	    do Format-Number(#t,$Severence_pay_QTD,        '9999999999999mi')
	    do Format-Number(#t,$Meal_Allowances_YTD,      '9999999999999mi')
end-procedure

begin-procedure restore-w-balances
            move $Saved_Output_TaxCode       to $Output_TaxCode
            move $Saved_TaxBalance_Tax_Qtd   to $TaxBalance_Tax_Qtd
            move $Saved_TaxBalance_Txgrs_Qtd to $TaxBalance_Txgrs_Qtd
            move $Saved_TaxBalance_Nlgrs_Qtd to $TaxBalance_NLgrs_Qtd   !4/27/06 fix
            move $Saved_TaxBalance_Tax_Ytd   to $TaxBalance_Tax_Ytd
            move $Saved_TaxBalance_Txgrs_Ytd to $TaxBalance_Txgrs_Ytd
            move $Saved_TaxBalance_Nlgrs_Ytd to $TaxBalance_Nlgrs_Ytd
            move $Saved_TaxBalance_Gross_Qtd to $TaxBalance_Gross_Qtd
            move $Saved_TaxBalance_Gross_Ytd to $TaxBalance_Gross_Ytd
            move $Saved_TaxBalance_Tip_Wages_Qtd to $TaxBalance_Tip_Wages_Qtd

            move $Saved_Output_TaxCode            to     $Output_TaxCode
            move $Saved_Sick_Pay_Qtd              to     $Sick_Pay_Qtd                    
            move $Saved_Sick_Pay_Ytd              to     $Sick_Pay_Ytd                    
            move $Saved_Uncol_tips_QTD            to     $Uncol_tips_QTD                
            move $Saved_Uncol_gtl_QTD             to     $Uncol_gtl_QTD                  
            move $Saved_TaxBalance_Tip_Wages_Ytd  to	 $TaxBalance_Tip_Wages_Ytd 
            move $Saved_Stock_Options_QTD         to	 $Stock_Options_QTD        
            move $Saved_Meals_employer_conv_YTD   to	 $Meals_employer_conv_YTD  
            move $Saved_Moving_exp_3rdParty_YTD   to	 $Moving_exp_3rdParty_YTD  
            move $Saved_Qual_transportation_YTD   to	 $Qual_transportation_YTD  
            move $Saved_Severence_pay_QTD         to	 $Severence_pay_QTD        
            move $Saved_Meal_Allowances_YTD       to	 $Meal_Allowances_YTD      
end-procedure

! ---------------------------------------- End of adpq210.sqc ------------------------------------------------

