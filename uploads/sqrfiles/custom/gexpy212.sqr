!***********************************************************************
! GEXPY212:  Pharmacy Annual Bonus Report                              *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY212 :            Pharmacy Annual Bonus Report                   *
!                                                                      *
! Narrative:            This report has 3 different processing modes.  *
!                         (1) Projection                               *
!                         (2) Preview Calculation                      *
!                         (3) Final Calculation                        *
!                                                                      *
!                       In projection mode, a report will be created   *
!                        showing current and previous year bonus       *
!                        amounts and percentages as well as calculated *
!                        bonus for verification.  This is the same as  *
!                        the preview report except that new rows will  *
!                        not be inserted into the bonus table.         *
!                                                                      *
!                       In preview calc mode, a report will be created *
!                        showing current and previous year bonus       *
!                        amounts and percentages as well as calculated *
!                        bonus for verification.  Responsible officers *
!                        can make any necessary changes for employees  *
!                        in their department for the current year.     *
!                        Worksheets can be recreated in preview mode   *
!                        until all information is correct.             *
!                                                                      *
!                       In final calc mode, a report will be created   *
!                        showing current and previous year bonus       *
!                        amounts and percentages, as well as current   *
!                        year bonus.  PS_ADDL_PAY_DATA table will be   *
!                        updated accordingly.                          *
!                                                                      *

! SQL Tables:           addl_pay_data                                  *
!                       addl_pay_effdt                                 *
!                       addl_pay_erncd                                 *
!                       gex_empl_bonus  			       *
!			gex_kicker_tbl                                 *
!                       gex_dept_tbl                                   *
!                       gex_mgmt_report                                *
!                       personal_data                                  *
!                       employment                                     *
!                       job                                            *
!                                                                      *
! Written by:           Abhishek Gupta                                 *
!                                                                      *
! Normally Run:         Annually                                       *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Company Division Code(s)                     *
!                         Company(s)                                   *
!                         Paygroup(s)                                  *
!                         Deptid(s)                                    *
!                         Employee Status(es)                          *
!                         Account Code(s)                              *
!                         Union Code(s)                                *
!                         Employee Type(s)                             *
!                         Jobcode(s)                                   *
!                                                                      *
!                         As Of Date                                   *
!                         Hire Date                                    *
!                         Salary Date                                  *
!                         Bonus Award Date                             *
!                         Bonus Percent to Use                         *
!                         Run Type                                     *
!                                                                      *
!----------------------------------------------------------------------*
! Tables Referenced:						       *
!----------------------------------------------------------------------*
! TABLE                  SEL     UPD     INS     DEL                   *
!----------------------------------------------------------------------*
! PS_ADDL_PAY_DATA        Y       -       Y       -                    *
! PS_ADDL_PAY_EFFDT       Y       -       Y       -                    * 
! PS_ADDL_PAY_ERNCD       Y       -       Y       -                    *
! PS_DEPT_TBL             Y       -       -       -                    *
! PS_GEX_ACCT_CD_TBL      Y       -       -       -                    *
! PS_GEX_DEPT_TBL         Y       -       -       -                    * 
! PS_GEX_EMPL_BONUS       Y       Y       Y       -                    *
! PS_GEX_RC_BON_EMPL      Y       -       -       -                    *
! PS_GEX_R_GEXPY212A      Y       -       Y       -                    *
! PS_GEX_RC_GEXPY214      Y       -       -       -                    *
! PS_GEX_TM_BON_EXCP      Y       -       -       -                    *
! PS_JOB                  Y       -       -       -                    *    
! PS_JOBCODE_TBL          Y       -       -       -                    * 
! PS_PERSONAL_DATA        Y       -       -       -                    *
! PS_POSITION_DATA        Y       -       -       -                    *
! PSXLATITEM              Y       -       -       -                    *
! PS_UNION_TBL	          Y       -       -       -                    *
! PS_PER_ORG_INST         Y       -       -       -                    *
! PS_PAYGROUP_TBL         Y       -       -       -                    *
! PS_GEX_RC_RX_BONUS      Y       -       -       -                    *
! PS_PAY_CALENDAR         Y       -       -       -                    *
! PS_GEX_RC_PAY           Y       -       -       -                    *
! PS_GEX_KICKER_TBL       Y       -       -       -                    *
!----------------------------------------------------------------------*
! Program Flow:                                                        *
!                                                                      *
! P100-INITIALIZATION                                                  *
! 	INIT-DATETIME                                                  *
! 	INIT-NUMBER                                                    *
! 	GET-CURRENT-DATETIME                                           *
! 	STDAPI-INIT                                                    *
! 	P110-SQRW-RUN-CONTROLS                                         *
! 		GEXXX950-INPUT-PARAMETERS                              *
! 		ASK-HIRE-DATE                                          *
! 			FORMAT-DATETIME                                *
! 			VALIDATE-NATIVE-DATE                           *
! 		ASK-SALARY-DATE                                        *
! 			FORMAT-DATETIME                                *
! 			VALIDATE-NATIVE-DATE                           *
! 		ASK-BONUS-AWARD-DATE                                   *
! 			FORMAT-DATETIME                                *
! 			VALIDATE-NATIVE-DATE                           *
! 	P120-PROCESS-SCHEDULER-RUN-CONTROLS                            *
! 		GEXXX922-SELECT-PARAMETERS                             *
! 		SELECT-STD-HOURS                                       *
! 		SELECT-PARAMETERS                                      *
! 		GEXPY214-SELECT-PARAMETERS                             *
! 		SELECT-PAY-BEGIN_DT                                    *
! 		SELECT-PAY-END_DT                                      *
! 		GEXXX900-SELECT-COMPANY-PARAMETERS                     *
! 		GEXXX901-SELECT-COMPANY-PAYGROUP-PARAMETERS            *
! 		GEXXX902-SELECT-DEPTID-PARAMETERS                      *
! 		GEXXX903-SELECT-EMP-STAT-PARAMETERS                    *
! 		GEXXX907-SELECT-DIV-CD-PARAMETERS                      *
! 		GEXXX909-SELECT-ACCT-CD-PARAMETERS                     *
! 		GEXXX913-SELECT-UNION-CD-PARAMETERS                    *
! 		GEXXX916-SELECT-JOBCODE-PARAMETERS                     *
! 		GEXXX930-SELECT-EMP-TYPE-PARAMETERS                    *
! 	FORMAT-DATETIME                                                *
! 	CONVERT-TO-DTU-DATE                                            *
! 	DTU-ADD-DAYS                                                   *
! 	CONVERT-FROM-DTU-DATE                                          *
! TRUNCATE-TEMP-TABLE                                                  *
! OPEN-FILE                                                            *
! PRINT-HEADER                                                         *
! GET-EMPLID                                                           *
! 	INSERT-EMPLID-JOBCODE                                          *
! 	GET-EMPLID-2                                                   *
! 		GEXXX900-SELECT-COMPANY-PARAMETERS                     *
! 		GEXXX901-SELECT-COMPANY-PAYGROUP-PARAMETERS            *
! 		GEXXX902-SELECT-DEPTID-PARAMETERS                      *
! 		GEXXX903-SELECT-EMP-STAT-PARAMETERS                    *
! 		GEXXX907-SELECT-DIV-CD-PARAMETERS                      *
! 		GEXXX909-SELECT-ACCT-CD-PARAMETERS                     *
! 		GEXXX913-SELECT-UNION-CD-PARAMETERS                    *
! 		GEXXX916-SELECT-JOBCODE-PARAMETERS                     *
! 		GEXXX930-SELECT-EMP-TYPE-PARAMETERS                    *
! 		INSERT-EMPLID-JOBCODE                                  *
! SELECT-EMPLID-JOBCODE                                                *
! 	P200-MAIN-PROCESS                                              *
! 		GET-JOBCODE                                            *
! 		GET-HIREDT                                             *
! 		CALCULATE_MAX_DURATION_DEPTID                          *
! 			GET-ALL-DEPTID                                 *
! 				GET-PREV-DEPTID                        *
! 				GET-PREV-DEPTID                        *
! 			GET-MAX-DURATION-DEPTID                        *
! 				CHECK-VALID-JOBCODE-IN-DEPT            *
! 					GET-DEPT-BONUS-GROUP           *
! 		GET-BONUS-GROUP                                        *
! 		P220-BONUS-TABLE-CURRENT-YEAR                          *
! 		CHECK-LEAVE-DURATION                                   *
! 			GET-LEAVE-VALIDATE                             *
! 		GET-STD-HRS-DURATION                                   *
! 			GET-PREV-STD-HRS                               *
! 			GET-PREV-STD-HRS                               *
! 		GET-BONUS-RUNCONTROL                                   *
! 		CHECK-BONUS-GROUP-RUNCONTROL                           *
! 		P220-BONUS-TABLE-SELECT                                *
! 		GET-EE-SALARY                                          *
! 			GET-FUTURE-DT-HIR                              *
! 			GET-FUTURE-DT-REH                              *
! 			GET-SALARY-ASOF-SALARYDATE                     *
! 			GET-SALARY-ELIG-JOBCODE                        *
! 		GET-ALL-JOBCODE                                        *
! 			GET-PREV-JOBCODE                               *
! 			GET-PREV-JOBCODE                               *
! 			CHECK-IF-PRORATION-DONE                        *
! 			SUM-DISTINCT-JOBCODES                          *
! 				GET-DEPT-BONUS-GROUP                   *
! 				GET-DEPT-BONUS-GROUP                   *
! 		GEX-EE-EXCEPTION-PCT                                   *
! 		GEX-JOBCODE-BONUS-PERCENTAGE                           *
! 		GET-BONUS-KICKERS                                      *
! 	P200-MAIN-PROCESS2                                             *
! 		BONUS-TABLE-LAST-YEAR                                  *
! 		CHECK-EXISTING-510                                     *
! 		P240-INSERT-ADDL-PAY-ERNCD                             *
! 		CHECK-EXISTING-510-EFFDT                               *
! 		P250-INSERT-ADDL-PAY-EFFDT                             *
! 		CHECK-EXISTING-510-DATA                                *
! 		P260-INSERT-ADDL-PAY-DATA                              *
! 		P260-INSERT-ADDL-PAY-DATA                              *
! 		WRITE-FILE                                             *
! 			FORMAT-DATETIME                                *
! 			GET-ACCOUNTCD-DESCR                            *
! 			GET-JOBCODE-DESCR-WRITE                        *
! 			FORMAT-DATETIME                                *
! 			GET-ACCOUNTCD-DESCR                            *
! 			GET-JOBCODE-DESCR-WRITE                        *
! 		P240-UPDATE-BONUS-TABLE                                *
! PROCESS-ARRAY                                                        *
! 	GET-RC-EMPLID                                                  *
! 	CHECK-VALID-REPORTS-TO                                         *
! 	GET-POSITION-REPORTS-TO                                        *
! 	CHECK-VALID-REPORTS-TO                                         *
! 	CHECK-BONUS-ALREADY-CALCULATED                                 *
! 	UPDATE-BONUS-AMOUNT                                            *
! 	P270-INSERT-GEX-EMPL-BONUS-PCT                                 *
! 		WRITE-FILE                                             *
! 		FORMAT-DATETIME                                        *
! 		GET-ACCOUNTCD-DESCR                                    *
! 		GET-JOBCODE-DESCR-WRITE                                *
! 		FORMAT-DATETIME                                        *
! 		GET-ACCOUNTCD-DESCR                                    *
! 		GET-JOBCODE-DESCR-WRITE                                *
! 	CHECK-RC-EMPLID                                                *
! 	CHECK-VALID-REPORTS-TO                                         *
! 	GET-POSITION-REPORTS-TO                                        *
! 	CHECK-VALID-REPORTS-TO                                         *
! 	CHECK-BONUS-ALREADY-CALCULATED                                 *
! 	UPDATE-BONUS-AMOUNT                                            *
! 	P270-INSERT-GEX-EMPL-BONUS-PCT                                 *
! 	WRITE-FILE                                                     *
! 		FORMAT-DATETIME                                        *
! 		GET-ACCOUNTCD-DESCR                                    *
! 		GET-JOBCODE-DESCR-WRITE                                *
! 		FORMAT-DATETIME                                        *
! 		GET-ACCOUNTCD-DESCR                                    *
! 		GET-JOBCODE-DESCR-WRITE                                *
! P200-MAIN-PROCESS2                                                   *
! 	BONUS-TABLE-LAST-YEAR                                          *
! 	CHECK-EXISTING-510                                             *
! 	P240-INSERT-ADDL-PAY-ERNCD                                     *
! 	CHECK-EXISTING-510-EFFDT                                       *
! 	P250-INSERT-ADDL-PAY-EFFDT                                     *
! 	CHECK-EXISTING-510-DATA                                        *
! 	P260-INSERT-ADDL-PAY-DATA                                      *
! 	P260-INSERT-ADDL-PAY-DATA                                      *
! 	WRITE-FILE                                                     *
! 		FORMAT-DATETIME                                        *
! 		GET-ACCOUNTCD-DESCR                                    *
! 		GET-JOBCODE-DESCR-WRITE                                *
! 		FORMAT-DATETIME                                        *
! 		GET-ACCOUNTCD-DESCR                                    *
! 		GET-JOBCODE-DESCR-WRITE                                *
! 	P240-UPDATE-BONUS-TABLE                                        *
! P300-FINALIZATION                                                    *
! 	RESET                                                          *
! 	STDAPI-TERM                                                    *
!                                                                      *
!----------------------------------------------------------------------*
! Debugging:                                                           **
!       Syntax:   -DebugUFDCS   Place on command line after db name.   *
!       Options:        F       FLOW    Procedure names.               *
!       Options:        D       DATA    Selected information.          *
!       Options:        C       CALC    Calculated information.        *
!       Options:        S       SQLS    Dynamic SQL values.            *
!       Options:        U       USER    Values for Users.              *
!       Notes:          You may use one, some or all of the letter optn*
!                                                                      *
! Errors:                                                              *
!       Description:    Prints whenever a database error occurs.       *
!       Value:          M       MESG    Error Messages.                *
!----------------------------------------------------------------------*
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS    DATE        DESCRIPTION OF THE CHANGE                    *
!***********************************************************************
!VENDAXG  06/09/2010  Initial Creation		         	       *      
!VENDAXG  09/03/2010  Modified for S3#14562544, Changed add'l pay Deptid
!VENDAXG  06/15/2011  Modified for Bonus processing 2011.              *
!VENDAXG  06/04/2012  Modified for Bonus Changes 2012.		       *
! 1221434 06/06/2012  Modified Leave Logic for Bonus Changes 2012.     *
!ISDVMZA  08/13/2012  Add effdt logic to PS_GEX_KICKER_TBL             *
! ISDVNPK 05/02/2013  GEXHR_848_PRJ95045_BONUS_2013                    *
!		      Changed the leave logic to 4 from 3 months for Full Bonus* 
!ISDVNPK  08/05/2013  Add effdt logic to PS_GEX_KICKER_TBL             * 
!ISDVVXK  07/20/2014  GEXHR_848_E161362_BONUS2014                      *
!                     Modified the code to insert the process name and *
!                     also to select the active jobcodes               * 
!ISDVVXK 07/07/2015  ISDVVXK - GEXHR_848_E1944_BONUS2015              *
!                    Added Profit and Store to Store sales percentages*
!                    Fix the annual rt for rehires
!1289792 06/07/2017  GEXHR_BONUS2017                                  *
!                    Change the calculation for the midpoint-one      *
!                    midpoint-two and midpoint-three                  *
!***********************************************************************

#include 'setenv.sqc'    !Set environment

#define PRINTER_TYPE JDH
#define PAGE_LEFT_MARG 0
#define PAGE_TOP_MARG 0.125
#define CHAR_WIDTH 4.32

#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Landscape)




#define #column1     1
#define #column2    23
#define #column3    33
#define #column4    44
#define #column5    53
#define #column6    63
#define #column7    74
#define #column8    89
#define #column9    95
#define #column10  115
#define #column11  130
#define #column12  136
#define #column13  149
#define #column14  164
#define #column15  170  

#define #column16  108  



Begin-Setup
  
create-array name=Jobcode  size=100	
Field=Jobcode:Char
Field=Position_Nbr:Char !Vendaxg Added for Bonus Processing 2011 on 06/16/2011
Field=Grade:Char !Vendaxg Added for Bonus Processing 2011 on 06/16/2011
Field=Duration:Number
Field=Deptid:char
Field=Annual_Rt:Number	!GEXPY_848_E95094_02 2012-06-04 VENDAXG
Field=Promotion:Char !GEXPY_848_E95094_02 2012-06-04 VENDAXG

create-array name=Deptid  size=100	
Field=Deptid:Char
Field=Duration:Number
Field=Effdt:date
Field=Effseq:Number

create-array name=Standard_Hours  size=100
Field=Std_Hrs:Number
Field=Duration:Number

create-array name=Sum-Bonus-Amount  size=100
Field=Bonus_Amount:Number


create-array name=Final-Jobcode-List  size=100	
Field=Jobcode:Char
Field=Position_Nbr:Char !Vendaxg Added for Bonus Processing 2011 on 06/16/2011
Field=Grade:Char !Vendaxg Added for Bonus Processing 2011 on 06/16/2011
Field=Duration:Number

create-array name=Jobcode30299  size=5000	
Field=Emplid:Char
Field=Empl_Rcd:Number
Field=Bonus_Year:Number
Field=Deptid:Char
Field=Empl_Type:Char
Field=Budget_Deptid:Char
Field=Jobcode:Char
Field=Jobcode_Duration:Number
Field=StdHrs_Duration:Number
!GEXPY_848_E95094_02 2012-06-04 VENDAXG -Begin
create-array name=EE_Jobcode30299  size=5000	
Field=Emplid:Char
Field=Empl_Rcd:Number
Field=Bonus_Year:Number
Field=Deptid:Char
Field=Empl_Type:Char
Field=Budget_Deptid:Char
Field=Jobcode:Char
Field=Jobcode_Duration:Number
Field=StdHrs_Duration:Number

create-array name=Distinct_EE_Jobcode30299  size=5000	
Field=Emplid:Char
Field=Empl_Rcd:Number
Field=Bonus_Year:Number
Field=Deptid:Char
Field=Empl_Type:Char
Field=Budget_Deptid:Char
Field=Jobcode:Char
Field=Jobcode_Duration:Number
Field=StdHrs_Duration:Number
!GEXPY_848_E95094_02 2012-06-04 VENDAXG -End

create-array name=All_Rows  size=10000	
Field=Emplid:Char
Field=Empl_Rcd:Number
Field=Bonus_Year:Number
Field=Deptid:Char
Field=Empl_Type:Char
Field=Budget_Deptid:Char
Field=Jobcode:Char
Field=Name:Char
Field=Position_Nbr:Char !Vendaxg Added for Bonus Processing 2011 on 05/27/2011
Field=Annual_Rt:Number
Field=Minimum_Bonus_Pct:Number
Field=Target_Bonus_Pct:Number
Field=MAximum_Bonus_Pct:Number
Field=Amount:Number
Field=Reports_To:Char
Field=Last_Hire_Dt:Date 
Field=Gex_Bonus_group:Char !Vendaxg Added for Bonus Processing 2011 on 06/16/2011
Field=Gex_bonus_Pct_Used:Number !Vendaxg Added for Bonus Processing 2011 on 06/16/2011
Field=Grade:Char !Vendaxg Added for Bonus Processing 2011 on 06/16/2011
Field=Std_Hours:number	!GEXPY_848_E95094_02 2012-06-04 VENDAXG

!GEXPY_848_E95094_02 2012-06-04 VENDAXG -Begin
create-array name=All_EE_Rows  size=10000	
Field=Emplid:Char
Field=Empl_Rcd:Number
Field=Bonus_Year:Number
Field=Deptid:Char
Field=Empl_Type:Char
Field=Budget_Deptid:Char
Field=Jobcode:Char
Field=Name:Char
Field=Position_Nbr:Char 
Field=Annual_Rt:Number
Field=Minimum_Bonus_Pct:Number
Field=Target_Bonus_Pct:Number
Field=MAximum_Bonus_Pct:Number
Field=Amount:Number
Field=Reports_To:Char
Field=Last_Hire_Dt:Date 
Field=Gex_Bonus_group:Char 
Field=Gex_bonus_Pct_Used:Number 
Field=Grade:Char 
Field=Std_Hours:Number

create-array name=Final_Employee_All_Bonus  size=10000	
Field=Emplid:Char
Field=Empl_Rcd:Number
Field=Bonus_Year:Number
Field=Deptid:Char
Field=Empl_Type:Char
Field=Budget_Deptid:Char
Field=Jobcode:Char
Field=Name:Char
Field=Position_Nbr:Char 
Field=Annual_Rt:Number
Field=Minimum_Bonus_Pct:Number
Field=Target_Bonus_Pct:Number
Field=MAximum_Bonus_Pct:Number
Field=Amount:Number
Field=Reports_To:Char
Field=Last_Hire_Dt:Date 
Field=Gex_Bonus_group:Char 
Field=Gex_bonus_Pct_Used:Number 
Field=Grade:Char 
Field=Std_Hours:Number
!GEXPY_848_E95094_02 2012-06-04 VENDAXG -End
declare-variable
date $dt 
DATE $prev_dept_entry_dt
DATE $prevdept_entrydt
DATE $CURR_DT
Date $cutoff_dt
Date $termination_Dt
date $Rehire_dt       
date  $ThruDate       
date $Fromdate        
Date $Fiscal_Start_Dt
Date $Fiscal_End_Dt   
Date $date_cutoff     
Date $curr_effdt      
Date $Prior-Effdt     



Date $All_Effdt 
Date $End_Date
Date $Start_Date
Date $Old_Effdt
Date $All_Effdt_Deptid
Date $End_Date_Deptid
Date $Start_Date_Deptid
Date $Old_Effdt_Deptid
Date $All_Effdt_Std_Hrs
Date $End_Date_Std_Hrs
Date $Start_Date_Std_Hrs
Date $Old_Effdt_Std_Hrs
Date $Last_hire_Dt 
Date $Prevd_Deptid_Effdt
Date $Stored_Deptid_Effdt
end-declare

End-Setup


Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do Truncate-Temp-Table  
    
  do Open-File       
  do Print-header    
    
   Let #DurfromRctl=0 
   Let #DurfromRctl= datediff($ThruDate,$Fromdate,'DAY')
   If #DurfromRctl=0
      Let #DurfromRctl=365
   End-if
   show '#DurfromRctl' #DurfromRctl
    
  
    
  If $Run_Type = '1' or 
    $Run_Type = '2'
                        
    	Let #EmplidCount=0 
     	Do Get-emplid             
     	#debug8 Show 'Total Employee Cound : '#EmplidCount
     	Do SELECT-EMPLID-JOBCODE
     	  
        Do Process-Array
        !Do Print-Report-Mode2
   Else
	
	 Do P200-Main-Process2
	
  End-If
  
  
  Do P300-Finalization
End-Report




Begin-Heading 11		
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg02.sqc'
  
  

  Print ':'                    (3,8)

  Print $ReportTitle2          (3,)  Center

  If Rtrim($Officer, ' ') <> ''
    Let $Officer_Hdg = 'Responsible Officer - ' || Rtrim($Officer, ' ')
    Print $Officer_Hdg         (4,)  Center
  End-If
   
  if $Deptid <> $priorDeptid
    Do Get-Department-Name
    move $Deptid to $priorDeptid
  end-if

  Print 'Deptid :'               (4,1)
  Print $Deptid                 (0,13)
  Print $DeptName               (0,+2)
  
  
  if $Descr <> $priorDescr or $descr=''
    Do Get-Jobcode-Descr
    move $Descr to $priorDescr
  end-if
   Do Get-Position-Title
   IF $PosName = '' 
  		Let $jobcode_descr = $jobcode_descr
	 Else
 		Let $jobcode_descr = $PosName
  End-if
  
  Print 'Jobcode:'               (5,1)
  Print $jobcode                 (0,13)
  Print $jobcode_descr   	 (0,+2)
  
  If $Empl_Type = 'S' Or
     $Empl_Type = ''
    Print '<---------- '        (+2,{#column7})
    Print $Previous_Year        (,)
    Print 'YEAR ---------->'    (,+1)
    Print '<-------------- '        (,{#column16})
    Print $Current_Year             (,)
    Print 'YEAR ------------->'    (,+1)
       
    If $Run_Type = '2' Or $Run_Type = '3'	
  
      Print '<------- '       (,{#column13})
      Print $Current_Year       (,)
      Print 'CHANGES ----->' (,+1)
  
    End-if
  Else
    
    Print ' '                   (+2,{#column7})
    Print '1.5'                 (,+5)
    Print ' 2'                  (,{#column8})   
    Print ' '                   (,{#column9})
    

    Print $Previous_Year        (,+7)
    Print ' '                   (,{#column12})
    Print $Current_Year         (,+7)

    If $Run_Type = '2' Or $Run_Type = '3'	
      Print ' '                 (,{#column15})
       
      Print 'CHANGE'            (,)   
      
    End-if
  End-If

  Print 'IN STORE'              (+1,{#column3})
  Print '  HIRE'                (+0,{#column4})

  If $Empl_Type = 'S' Or
     $Empl_Type = ''
    Print '   WEEKLY'           (+0,{#column5})
    Print '   ANNUAL'          (+0,{#column6})
  Else
    Print '   HOURLY'           (+0,{#column5})
    Print '   WEEKLY'           (+0,{#column6})
    Print '    WEEKS'           (+0,{#column7})	 
    Print '    WEEKS'           (,+1)     	 
  End-If

  If $Empl_Type = 'S' Or
     $Empl_Type = ''
    Print 'MIN/TARGET/MAX'      (+0,{#column7})
    Print '  CSI'               (+0,{#column8})
    Print 'MIN/TARGET/MAX'      (+0,{#column10})
    Print '  CSI'               (+0,{#column11})
    If $Run_Type = '2'
      Print 'MIN/TARGET/MAX'    (+0,{#column13})
      Print '  CSI'             (+0,{#column14})
      Print '  BONUS'           (+0,{#column15})  
     
    End-If
  Else
    If $Run_Type = '2' Or $Run_Type = '3'	
     
      Print ' BONUS'      (+0,{#column15})
     
    End-If
  End-If

  Print '       BONUS'          (+0,{#column9})
  Print '       BONUS'          (+0,{#column12})

  Print 'NAME'                  (+1,{#column1})
  Print 'SSN'                   (+0,{#column2})
  Print 'DEPARTMENT'            (+0,{#column3})
  Print '  DATE'                (+0,{#column4})
  Print '   RATE'               (+0,{#column5})
  Print '  SALARY'              (+0,{#column6})
  If $Empl_Type = 'S' Or
     $Empl_Type = ''
  Print 'DEPTID'                (+0,{#column16})  
  Else
  Print '                  DEPTID'                (+0,{#column16})
  End-if
  
  
  If $Empl_Type = 'H'
      Print  '   SALARY'         (+0,{#column7})
      Print  '   SALARY'         (,+1)
  End-If     
  
  If $Empl_Type = 'S' Or
     $Empl_Type = ''
    Print 'PERCENT BONUS'       (+0,{#column7})
    Print '  ADJ'               (+0,{#column8})
    Print 'PERCENT BONUS'       (+0,{#column10})
    Print '  ADJ'               (+0,{#column11})
    If $Run_Type = '2' Or $Run_Type = '3'	
      Print 'PERCENT BONUS'     (+0,{#column13})
      Print '  ADJ'             (+0,{#column14})
      Print ' AMOUNT'            (+0,{#column15})
    End-If
  Else
    If $Run_Type = '2' Or $Run_Type = '3'	
      Print ' AMOUNT'      (+0,{#column15})

    End-If
  End-If

  Print '      AMOUNT'          (+0,{#column9})
  Print '      AMOUNT'          (+0,{#column12})

  Print '-'                     (+2,{#column1},21)   Fill
  Print '-'                     (+0,{#column2},9)    Fill
  Print '-'                     (+0,{#column3},10)   Fill
  Print '-'                     (+0,{#column4},8)    Fill
  Print '-'                     (+0,{#column5},9)    Fill
  Print '-'                     (+0,{#column6},10)   Fill
  Print '-'                     (+0,{#column12},12)  Fill 
  Print '-'                     (+0,{#column9},12)   Fill 
  
  If $Empl_Type = 'S' Or
     $Empl_Type = ''
  Print '-'                     (+0,{#column16},6)   Fill
  Else   
  End-If
 
  
  If $Empl_Type = 'H' 
     Print '-'                  (+0,{#column7},9)    Fill
     Print '-'                  (,+1,9)              Fill
     Print '-'                     (+0,+33,6)   Fill
  End-If
  
  If $Empl_Type = 'S' Or
     $Empl_Type = ''
    Print '-'                   (+0,{#column7},14)   Fill
    Print '-'                   (+0,{#column8},5)    Fill
    Print '-'                   (+0,{#column10},14)  Fill
    Print '-'                   (+0,{#column11},5)   Fill
    If $Run_Type = '2' Or $Run_Type = '3'	
      Print '-'                 (+0,{#column13},14)  Fill
      Print '-'                 (+0,{#column14},5)   Fill
      Print '-'                 (+0,{#column15},8)  Fill
      
    End-If
  Else
    If $Run_Type = '2' Or $Run_Type = '3'	
      Print '-'                 (+0,{#column15},8)  Fill
    End-If
  End-If

   
End-Heading

Begin-Procedure Get-Jobcode-Descr
Do Get-Current-DateTime    !curdttim.sqc

Begin-Select
jcd.descr
  Let $jobcode_descr = &jcd.descr
from ps_jobcode_tbl jcd
where jcd.jobcode=$jobcode
and jcd.effdt=(select max(jcd1.effdt) from ps_jobcode_tbl jcd1
		where jcd1.jobcode=jcd.jobcode
		and jcd1.effdt<=$asoftoday)
End-Select
End-Procedure



Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      =   'GEXPY212'
  Let $ReportTitle   =   'Pharmacy Bonus Report'

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle

  Let $GEXXX900_Company_Alias  = 'job.company'
  Let $GEXXX901_Company_Alias  = 'job.company'
  Let $GEXXX901_Paygroup_Alias = 'job.paygroup'
  Let $GEXXX902_Deptid_Alias   = 'job.deptid'
  Let $GEXXX903_Emp_Stat_Alias = 'job.empl_status'
  Let $GEXXX907_Div_CD_Alias   = 'GEXDT.gex_company_div_cd'
  Let $GEXXX909_Acct_CD_Alias  = 'job.acct_cd'
  Let $GEXXX913_Union_Cd_Alias = 'job.union_cd'
  Let $GEXXX916_Jobcode_Alias  = 'job.jobcode'
  Let $GEXXX930_Emp_Type_Alias = 'job.empl_type'
  


  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
    
  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  Do Format-DateTime($AsOfDate, $Heading_AsOfDate, {DEFDATE}, '', '')
  Let #Current_Year  = To_Number(Substr($AsOfDate,8,4))
  Let #Previous_Year = To_Number(Substr($AsOfDate,8,4))-1
  Move #Current_Year  To $Current_Year  9999
  Move #Previous_Year To $Previous_Year 9999

  Evaluate $Run_Type
    When = '1'
      Let $ReportTitle2 = '(Projection Report)'
    When = '2'
      Let $ReportTitle2 = '(Preview Calculation)'
    
    When = '3'		
      Let $ReportTitle2 = '(Review Bonus Activity)'
    When = '4'		
      Let $ReportTitle2 = '(Final Calculation)'
    
  End-Evaluate

  Let $X000_Order_By = 'Responsible Officer, Company, Deptid, Employee Type, Name'

  Show '$GEXXX907_Include_Div_Cd_Display_Criteria           = ' $GEXXX907_Include_Div_Cd_Display_Criteria
  Show '$GEXXX900_Include_Company_Display_Criteria          = ' $GEXXX900_Include_Company_Display_Criteria
  Show '$GEXXX901_Include_Company_Paygroup_Display_Criteria = ' $GEXXX901_Include_Company_Paygroup_Display_Criteria
  Show '$GEXXX902_Include_Deptid_Display_Criteria           = ' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_Include_Emp_Stat_Display_Criteria         = ' $GEXXX903_Include_Emp_Stat_Display_Criteria
  Show '$GEXXX909_Include_Acct_Cd_Display_Criteria          = ' $GEXXX909_Include_Acct_Cd_Display_Criteria
  Show '$GEXXX913_Include_Union_Cd_Display_Criteria         = ' $GEXXX913_Include_Union_Cd_Display_Criteria
  Show '$GEXXX916_Include_Jobcode_Display_Criteria          = ' $GEXXX916_Include_Jobcode_Display_Criteria
  Show '$GEXXX930_Include_Emp_Type_Display_Criteria         = ' $GEXXX930_Include_Emp_Type_Display_Criteria

  Show '$AsOfDate         = ' $AsOfDate
  Show '$Hire_Dt          = ' $Hire_Dt
  Show '$Salary_Dt        = ' $Salary_Dt
  Show '$Bonus_Award_Dt   = ' $Bonus_Award_Dt
  Show '$Run_Type         = ' $Run_Type '  ' $ReportTitle2
  Show '$Bonus_Pct_to_Use = ' $Bonus_Pct_to_Use '  ' $Bonus_Pct

  
  Do Convert-To-DTU-Date($Bonus_Award_Dt, $Bonus_Award_Dt_dtu)  
  Do dtu-add-days($Bonus_Award_Dt_dtu,1, $Bonus_Award_Dt_Plus1_dtu)
  Do Convert-From-DTU-Date($Bonus_Award_Dt_Plus1_dtu,$Bonus_Award_Dt_Plus1)
  Show '$Bonus_Award_Dt_Plus_One = ' $Bonus_Award_Dt_Plus1
  

  !Do P130-Print-Cover-Page !Vendaxg Commented for Bonus Processing 2011
End-Procedure


Begin-Procedure P110-SQRW-Run-Controls
#debug9 Show 'P110-SQRW-Run-Controls'

  
  Display 'Enter Run Type  (1=Projection, 2=Preview Calc, 3=Bonus Activity Review, 4=Final Calc)'
  While 1=1
    Input $Run_Type Maxlen=1 'Run Type'
    If $Run_Type = '1' Or
       $Run_Type = '2' Or
       $Run_Type = '3' Or
       $Run_Type = '4'		
      Break
    End-If
  End-While

  
  If $Run_Type = '3' Or $Run_Type = '4' 	
     Let $GEXXX903_Emp_Stat_Alias = 'j.fieldvalue' 
     Let $GEXXX930_Emp_Type_Alias = 'j.fieldvalue' 
  End-If
  

  Do GEXXX950-Input-Parameters

  Let $DateOK = 'N'
  While $DateOK <> 'Y'
    Do Ask-Hire-Date
  End-While

  Let $DateOK = 'N'
  While $DateOK <> 'Y'
    Do Ask-Salary-Date
  End-While

  Let $DateOK = 'N'
  While $DateOK <> 'Y'
    Do Ask-Bonus-Award-Date
  End-While

  Let $UnionCdString = ''''
  Display 'Enter Union Code or leave blank to exit.'
  While 1=1
    Input $In-UnionCd Maxlen=3 'Union Code'
    Uppercase $In-UnionCd
    If Rtrim($In-UnionCd, ' ') = ''
      Concat '''' With $UnionCdString
      Break
    End-If
    If $UnionCdString <> ''''
      Concat ''',''' With $UnionCdString
    End-If
    Concat $In-UnionCd With $UnionCdString
  End-While

  If $UnionCdString = ''''''
    Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = '1=1'
    Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX913_INCLUDE_UNION_CD_CRITERIA = $GEXXX913_Union_CD_Alias || ' In (' || $UnionCdString || ')'
    Let $GEXXX913_INCLUDE_UNION_CD_DISPLAY_CRITERIA = $GEXXX913_INCLUDE_UNION_CD_CRITERIA
  End-If

  Let $EmplTypeString = ''''
  Display 'Enter Employee Type or leave blank to exit.'
  While 1=1
    Input $In-EmplType Maxlen=1 'Employee Type'
    Uppercase $In-EmplType
    If Rtrim($In-EmplType, ' ') = ''
      Concat '''' With $EmplTypeString
      Break
    End-If
    If $EmplTypeString <> ''''
      Concat ''',''' With $EmplTypeString
    End-If
    Concat $In-EmplType With $EmplTypeString
  End-While

  If $EmplTypeString = ''''''
    Let $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA = '1=1'
    Let $GEXXX930_INCLUDE_EMP_TYPE_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA = $GEXXX930_Emp_Type_Alias || ' In (' || $EmplTypeString || ')'
    Let $GEXXX930_INCLUDE_EMP_TYPE_DISPLAY_CRITERIA = $GEXXX930_INCLUDE_EMP_TYPE_CRITERIA
  End-If

  Move '''' to $JobcodeString
  Display 'Enter Jobcode or leave blank to exit.'
  While 1=1
    Input $Jobcode maxlen=6 'Jobcode'
    Uppercase $Jobcode
    if RTRIM($Jobcode, ' ') = ''
      concat '''' with $JobcodeString
      break
    end-if
    if $JobcodeString <> ''''
      concat ''',''' with $JobcodeString
    end-if
    concat $Jobcode with $JobcodeString
  End-While

  if $JobcodeString = ''''''
    Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = '1=1'
    Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = 'ALL'
  else
    Let $GEXXX916_INCLUDE_JOBCODE_CRITERIA = 'j.jobcode In (' || $JobcodeString || ')'
    Let $GEXXX916_INCLUDE_JOBCODE_DISPLAY_CRITERIA = $GEXXX916_INCLUDE_JOBCODE_CRITERIA
  end-if

 !1289792 - GEXHR_BONUS2017  - Begin
  !Display 'Enter Bonus Percent to Use  (1=Minimum, 2=Mid One, 3=Target, 4=Mid Two, 5=Maximum)'
   Display 'Enter Bonus Percent to Use  (1=Minimum, 2=Mid One, 3=Target, 4=Mid Two, 5=Maximum, 6=Mid Three)'
 !1289792 - GEXHR_BONUS2017 - End

  While 1=1
    Input $Bonus_Pct_to_Use Maxlen=1 'Bonus Percent to Use'
    If $Bonus_Pct_to_Use = '1'
      Let $Bonus_Pct = '(Minimum)'
      Break
     Else
       If $Bonus_Pct_to_Use = '2'
       Let $Bonus_Pct = '(Mid One)'
         Break
        Else
          If $Bonus_Pct_to_Use = '3'
          Let $Bonus_Pct = '(Target)'
            Break
         Else
           If $Bonus_Pct_to_Use = '4'
           Let $Bonus_Pct = '(Mid Two)'
             Break
          Else
            If $Bonus_Pct_to_Use = '5'
            Let $Bonus_Pct = '(Maximum)'
              Break
              !1289792 - GEXHR_BONUS2017  - Begin
           Else
             If $Bonus_Pct_to_Use = '6'
             Let $Bonus_Pct = '(Mid Three)'
               Break
              !1289792 - GEXHR_BONUS2017  - End
             End-If
  
            End-If
           End-If
          End-If
       End-if
    End-if
  End-While
End-Procedure

!***********************************************************************
Begin-Procedure Truncate-Temp-Table
!***********************************************************************
Begin-SQL
TRUNCATE TABLE SYSADM.PS_GEX_R_GEXPY212A
End-SQL
!***********************************************************************
End-Procedure Truncate-Temp-Table
!***********************************************************************

!***********************************************************************
Begin-Procedure Ask-Hire-Date
!***********************************************************************
#debug9 Show 'Ask-Hire-Date'
  move 'Y' to $DateOK
  display ''
  display 'Enter the ''Hired As Of'' Date ({Prompt-Date}) for this report or press'
  input $Hire_Dt 'enter to default today''s date as the ''Hired As Of'' date'
  if Rtrim($Hire_Dt, ' ') = ''
    move $AsOfToday to $Hire_Dt
  else
    move {PDelimiter} to $DDelimiter
    do Format-DateTime($Hire_Dt,$Hire_Dt,{Prompt-Mask},'','native')
  end-if
  do Validate-Native-Date($Hire_Dt,$DateOK)
  if $DateOK = 'N'
    display '**** This is an invalid date, please reenter ****'
  end-if
!***********************************************************************
End-Procedure
!***********************************************************************

!***********************************************************************
Begin-Procedure Ask-Salary-Date
!***********************************************************************
#debug9 Show 'Ask-Salary-Date'
  move 'Y' to $DateOK
  display ''
  display 'Enter the ''Salary As Of'' Date ({Prompt-Date}) for this report or press'
  input $Salary_Dt 'enter to default today''s date as the ''Salary As Of'' date'
  if $Salary_Dt = ''
    move $AsOfToday to $Salary_Dt
  else
    move {PDelimiter} to $DDelimiter
    do Format-DateTime($Salary_Dt,$Salary_Dt,{Prompt-Mask},'','native')
  end-if
  do Validate-Native-Date($Salary_Dt,$DateOK)
  if $DateOK = 'N'
    display '**** This is an invalid date, please reenter ****'
  end-if
!***********************************************************************
End-Procedure
!***********************************************************************

!***********************************************************************
Begin-Procedure Ask-Bonus-Award-Date
!***********************************************************************
#debug9 Show 'Ask-Bonus-Award-Date'
  move 'Y' to $DateOK
  display ''
  display 'Enter the Bonus Award Date ({Prompt-Date}) for this report or press'
  input $Bonus_Award_Dt 'enter to default today''s date as the Bonus Award Date'
  if $Bonus_Award_Dt = ''
    move $AsOfToday to $Bonus_Award_Dt
  else
    move {PDelimiter} to $DDelimiter
    do Format-DateTime($Bonus_Award_Dt,$Bonus_Award_Dt,{Prompt-Mask},'','native')
  end-if
  do Validate-Native-Date($Bonus_Award_Dt,$DateOK)
  if $DateOK = 'N'
    display '**** This is an invalid date, please reenter ****'
  end-if
!***********************************************************************
End-Procedure
!***********************************************************************

!***********************************************************************
Begin-Procedure P120-Process-Scheduler-Run-Controls
!***********************************************************************
#debug9 Show 'P120-Process-Scheduler-Run-Controls'
  
  Do GEXXX922-Select-Parameters
  Do Select-Std-Hours
  Do Select-Parameters
  Do GEXPY214-Select-Parameters
 
  Let $AsOfDate         = $GEX_RC_PAY.AsOfDate
  Let $Hire_Dt          = $GEX_RC_PAY.Hire_Dt
  Let $Salary_Dt        = $GEX_RC_PAY.FromDate
  Let $Run_Type         = $GEX_RC_PAY.GEXPY091_Rpt_Type
  Let $Bonus_Pct_to_Use = $GEX_RC_PAY.GEXPY091_Bonus_Pct
  Let $Bonus_Award_Dt   = $GEX_RC_PAY.ThruDate
  Let $FromDate		= &RUN_CNTL_HR.FROMDATE 
  Let $ThruDate		= &RUN_CNTL_HR.THRUDATE
  Let $Term_CutOff_Date = $rc.gex_term_cutoff_dt 
  Let $Fiscal_End_Dt    = &RUN_CNTL_HR.THRUDATE
  Let #Pct_of_Pct_Used  = #GEX_RC_PAY.Min_OT_Hrs	!GEXPY_848_E95094_02 2012-06-06 VENDAXG
  Let #Profit_Pct       = #GEX_RC_PAY.GEX_PROFIT_BON_PCT     ! ISDVVXK - GEXHR_848_E1944_BONUS2015
    
     If ISNULL(Ltrim(Rtrim($FromDate,' ' ),' '))
     
        Let #Previous_Year = To_Number(Substr($AsOfToday,8,4))-1
        Let $From_yr = #Previous_Year 
        extract $year1 from  $From_yr  0  4
        Let $from_Year='1-July-' 
        concat $year1 with $from_Year
        Do Select-pay-Begin_Dt 
     End-If
  
     If ISNULL(Ltrim(Rtrim($ThruDate,' '),' '))
     
      Let #Current_Year  = To_Number(Substr($AsOfToday,8,4))
      Let $Thru_yr = #Current_Year 
       extract $year2 from $Thru_yr  0  4
       Let $Thru_year='30-Jun-'
       concat $year2 with $Thru_year
       Do Select-pay-end_Dt
    End-If
    
    If ISNULL(Ltrim(Rtrim($Term_CutOff_Date,' '),' '))
       Let $Term_CutOff_Date   =  $ThruDate
    End-If
    Let $date_cutoff      = $Term_CutOff_Date
    Let $cutoff_dt        = dateadd($date_cutoff,'day',-1)
    Let $Fiscal_Start_Dt  = $FromDate
    Let $Fiscal_End_Dt   =  $ThruDate
    
  show 'FromDate:  ' 		$FromDate
  show 'ThruDate:  ' 		$ThruDate
  Show 'Term_CutOff_Date:  '   $Term_CutOff_Date
  Show '$Fiscal_Start_Dt:  '   $Fiscal_Start_Dt
  show 'Rc_std_hours: '        #Rc_std_hours
  
  If Rtrim($AsOfDate, ' ') = ''
    Let $AsOfDate = $AsOfToday
  End-If

  If Rtrim($Hire_Dt, ' ') = ''
    Let $Hire_Dt = $AsOfToday
  End-If

  If Rtrim($Salary_Dt, ' ') = ''
    Let $Salary_Dt = $AsOfToday
  End-If

  If Rtrim($Run_Type, ' ') = ''
    Let $Run_Type = '1'
  End-If

  If Rtrim($Bonus_Pct_to_Use, ' ') = ''
    Let $Bonus_Pct_to_Use = '2'
  End-If

  If Rtrim($Bonus_Award_Dt, ' ') = ''
    Let $Bonus_Award_Dt = $AsOfToday
  End-If
  
   
  Do GEXXX900-Select-Company-Parameters
  Do GEXXX901-Select-Company-Paygroup-Parameters
  Do GEXXX902-Select-Deptid-Parameters
  Do GEXXX903-Select-Emp-Stat-Parameters
  Do GEXXX907-Select-Div-Cd-Parameters 
  Do GEXXX909-Select-Acct-Cd-Parameters
  Do GEXXX913-Select-Union-Cd-Parameters
  Do GEXXX916-Select-Jobcode-Parameters
  Do GEXXX930-Select-Emp-Type-Parameters
 
!***********************************************************************
End-Procedure P120-Process-Scheduler-Run-Controls
!***********************************************************************

!***********************************************************************
Begin-Procedure Select-Std-Hours
!***********************************************************************
Begin-Select
GEX_RC_PAY.STD_HOURS
  Let #Rc_std_hours = &GEX_RC_PAY.STD_HOURS 
from PS_GEX_RC_PAY  GEX_RC_PAY
Where GEX_RC_PAY.OPRID                = $Prcs_OprID
And   GEX_RC_PAY.RUN_CNTL_ID          = $Prcs_Run_Cntl_ID
End-Select

!***********************************************************************
End-Procedure Select-Std-Hours
!***********************************************************************


!***********************************************************************
Begin-Procedure GEXPY214-Select-Parameters
!***********************************************************************

Begin-Select

rc.gex_term_cutoff_dt
  Let $rc.gex_term_cutoff_dt = &rc.gex_term_cutoff_dt
  
  
From ps_gex_rc_gexpy214 rc
Where rc.OPRID = $prcs_oprid
And rc.RUN_CNTL_ID = $prcs_run_cntl_id

End-Select
!***********************************************************************
End-Procedure GEXPY214-Select-Parameters
!***********************************************************************

!***********************************************************************
Begin-Procedure Select-pay-Begin_Dt 
!***********************************************************************
Begin-Select
min(pay_begin_dt)  &pay_begin_dt
  Let $FromDate=&pay_begin_dt
from ps_pay_calendar
where pay_begin_dt>=$from_Year
End-Select
End-Procedure

!***********************************************************************
Begin-Procedure Select-pay-End_Dt 
!***********************************************************************
Begin-Select
max(pay_end_dt) &pay_end_dt
  Let $ThruDate=&pay_end_dt
from ps_pay_calendar
where pay_end_dt<=$Thru_year
End-Select
End-Procedure


!***********************************************************************
Begin-Procedure Open-File
!***********************************************************************

MOVE $CURRENT-DATE TO $CURRDT 'MMDDYY'
	ENCODE '<012>' INTO $NEXT
	encode '<009>' into $delim
     
  
   IF $sqr-platform='UNIX'
    	Let $path='{OUTFILE}'
   else
      	Let $path = '\\corp.gianteagle.com\common\HR\HRPS\Secure\Annual_Bonus\' 
   End-if 
   
   move #prcs_process_instance to $Process_instance 
   Let $File_Name = 'gexpy212'
   Let $file = $path ||Lower($File_Name)||'_'|| $Prcs_Process_instance || '.xls' 
   

   show '$file:' $file
     
  Open $file
       As 1
       For-Writing
       Record=1000:Vary

End-Procedure

!***********************************************************************
Begin-Procedure Print-header
!***********************************************************************
 encode '<009>' into $tab

 
  Let $delim = $tab

string '' '' '' '' 'PHARMACY ANNUAL BONUS REPORT' '' '' '' '' '' '' '' '' by $delim into $string_col1
write 1 from $string_col1

string 'GEXPY212' '' '' '' 'PHARMACY ANNUAL BONUS REPORT' '' '' '' '' '' '' '' '' by $delim into $string_col2
write 1 from $string_col2

STRING 'Name ' 'Emplid ' ' Empl_Rcd '  ' Store Dept '  ' Job Code' ' Job Title ' ' Hire Date ' ' Salary ' ' Home Deptid ' ' Bonus Deptid' ' Bonus Amount '  ' Mode ' ' TimeStamp ' ' Comments ' by $delim into $string_cols	
write 1 from $string_cols
!***********************************************************************
End-Procedure Print-header
!***********************************************************************

!***********************************************************************
Begin-Procedure write-file
!***********************************************************************
!show 'writing file'
move #annual_rt to $annual_rt
move &dateBegan to $date 
move  &timeBegan to $time 

Let $datetime = $date ||  $time
If $Run_Type = '1' or 
    $Run_Type = '2'
  

  Do Format-DateTime($Last_hire_Dt, $Last_hire_Dt_Write, {DEFMDY}, '', '')  
  Let $Emplid_Write ='="' || $Emplid || '"'
  Let $Empl_Rcd_Write ='="' || $Empl_Rcd || '"'
  Do Get-AccountCd-Descr
  Let $Account_Code_Descr_Write = '="' || $Account_Code_Descr || '"'
  Let $Jobcode1_write  ='="' || $Jobcd  || '"'
  Do Get-Jobcode-Descr-Write
  Let $Jobcode_Descr_write  ='="' || $Jobcode_Descr  || '"'
  Let $Max_duration_deptid_write ='="' || $max_duration_deptid || '"'
  Let $Deptid_write  ='="' || $Deptid  || '"'



If $Proration_Done = 'N'
	Let $Space = ' '
Else
	Let $Space = 'Prorated*'
End-If

string $name $emplid_Write $empl_rcd $Account_Code_Descr_Write $Jobcode1_write $Jobcode_Descr_write $Last_hire_Dt_Write #annual_rt $Deptid_write $Max_duration_deptid_write #Current_Bonus_Amt $ReportTitle2  $datetime by $delim into $actives


else


    Do Format-DateTime($Last_hire_Dt, $Last_hire_Dt_Write, {DEFMDY}, '', '')  
    Let $Emplid_Write ='="' || $Emplid || '"'
    Let $Empl_Rcd_Write ='="' || $Empl_Rcd || '"'
    Do Get-AccountCd-Descr
    Let $Account_Code_Descr_Write = '="' || $Account_Code_Descr || '"'
    Let $Jobcode1_write  ='="' || $Jobcd  || '"'
    Do Get-Jobcode-Descr-Write
    Let $Jobcode_Descr_write  ='="' || $Jobcode_Descr  || '"'
    Let $Max_duration_deptid_write ='="' || $Budget_Deptid || '"'
    Let $Deptid_write  ='="' || $Deptid  || '"'
 

	string $name  by $delim into $actives
	
	string $actives  $emplid_write  by $delim into $actives
	
	string $actives  $empl_rcd    $max_dept_jobcode_write  $jobcode by $delim into $actives
	
	string $actives  $MaxJobcodedescr $full_part_time  #std_hours  $Hire_Date #annual_rt $Empl_Type by $delim into $actives
	
	string $actives  $max_duration_deptid_write by $delim into $actives
	
	string $actives  $Deptid_write by $delim into $actives
	
	string $actives  #ee_pct  #current_bonus_amt  $ReportTitle2  $datetime by $delim into $actives

	string $name $emplid_Write $empl_rcd $Account_Code_Descr_Write $Jobcode1_write $Jobcode_Descr_write $Last_hire_Dt_Write #annual_rt $Deptid_write $Max_duration_deptid_write #Final_Bonus_Amount $ReportTitle2  $datetime by $delim into $actives
End-if

write 1 from $actives 


!***********************************************************************
End-Procedure write-file
!***********************************************************************



!***********************************************************************
Begin-Procedure P130-Print-Cover-Page
!***********************************************************************
#debug9 Show 'P130-Print-Cover-Page'
  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)
  Print '$GEXXX907_Include_Div_Cd_Display_Criteria           ='   (+2,5)
  Print $GEXXX907_Include_Div_Cd_Display_Criteria                 (0,+2)
  Print '$GEXXX900_Include_Company_Display_Criteria          ='   (+1,5)
  Print $GEXXX900_Include_Company_Display_Criteria                (0,+2)
  Print '$GEXXX901_Include_Company_paygroup_Display_Criteria ='   (+1,5)
  Print $GEXXX901_Include_Company_paygroup_Display_Criteria       (0,+2)
  Print '$GEXXX902_Include_Deptid_Display_Criteria           ='   (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria	          (0,+2)
  Print '$GEXXX903_Include_Emp_Stat_Display_Criteria         ='   (+1,5)
  Print $GEXXX903_Include_Emp_Stat_Display_Criteria               (0,+2)
  Print '$GEXXX909_Include_Acct_Cd_Display_Criteria          ='   (+1,5)
  Print $GEXXX909_Include_Acct_Cd_Display_Criteria                (0,+2)
  Print '$GEXXX913_Include_Union_Cd_Display_Criteria         ='   (+1,5)
  Print $GEXXX913_Include_Union_Cd_Display_Criteria               (0,+2)
  Print '$GEXXX916_Include_Jobcode_Display_Criteria          ='   (+1,5)
  Print $GEXXX916_Include_Jobcode_Display_Criteria                (0,+2)
  Print '$GEXXX930_Include_Emp_Type_Display_Criteria         ='   (+1,5)
  Print $GEXXX930_Include_Emp_Type_Display_Criteria               (0,+2)

  Print 'As Of Date         ='              (+2,5)
  Print $AsOfDate                           (0,+2)
  Print 'Hire Date          ='              (+1,5)
  Print $Hire_Dt                            (0,+2)
  Print 'Salary Date        ='              (+1,5)
  Print $Salary_Dt                          (0,+2)
  Print 'Bonus Award Date   ='              (+1,5)
  Print $Bonus_Award_Dt                     (0,+2)
  Print 'Run Type           ='              (+1,5)
  Print $Run_Type                           (0,+2)
  Print $ReportTitle2                       (0,+2)
  Print 'Bonus Pct to Use   ='              (+1,5)
  Print $Bonus_Pct_to_Use                   (0,+2)
  Print $Bonus_Pct                          (0,+2)
  Print 'Fiscal Year Date Range :'	    (+1,5)
  Print  $FromDate			    (0,+2)
  Print 'To'				    (0,+2)
  Print $ThruDate			    (0,+2)
  print 'Term CutOff Date   ='		    (+1,5)
  Print $Term_CutOff_Date		    (0,+2)
  

  Print 'SORT ORDER FOR THIS REPORT RUN:'   (+5,2)
  Print $X000_Order_By                      (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
End-Procedure


Begin-Procedure P150-Set-Optimizer-Goal
#debug9 Show 'P150-Set-Optimizer-Goal'
  Begin-SQL
    !Alter Session Set OPTIMIZER_GOAL=RULE;  !1289792 - GEXHR_BONUS2017
  End-SQL
End-Procedure

!***********************************************************************
Begin-Procedure Get-Emplid
!***********************************************************************
Let #Distinct_Employee_Count = 1
#debug8 Show $GEXXX900_Include_Company_Criteria
#debug8 Show $GEXXX901_Include_Company_Paygroup_Criteria
#debug8 Show $GEXXX902_Include_Deptid_Criteria
#debug8 Show $GEXXX903_Include_Emp_Stat_Criteria
#debug8 Show $GEXXX907_Include_Div_Cd_Criteria
#debug8 Show $GEXXX909_Include_Acct_Cd_Criteria
#debug8 Show $GEXXX913_Include_Union_Cd_Criteria
#debug8 Show $GEXXX930_Include_Emp_Type_Criteria
#debug8 Show $Fromdate
#debug8 Show $ThruDate
#debug8 Show $Hire_Dt
#debug8 Show #Rc_std_hours
Begin-Select DISTINCT
JOB.EMPLID 

	Let $Emplid = Ltrim(Rtrim(&JOB.EMPLID,' '),' ')
	
	Let #Distinct_Employee_Count = #Distinct_Employee_Count  + 1
	
	Do INSERT-EMPLID-JOBCODE

FROM PS_JOB JOB, ps_gex_dept_tbl     GEXDT
WHERE JOB.EFFDT BETWEEN $Fromdate and $ThruDate
AND JOB.DEPTID = GEXDT.DEPTID
AND  GEXDT.EFFDT = (SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
      			WHERE  DEPTID       = GEXDT.DEPTID
       			AND    EFFDT       <= $AsOfDate)
AND  GEXDT.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM   PS_GEX_DEPT_TBL
       					WHERE  DEPTID       = GEXDT.DEPTID
       					AND    EFFDT        = GEXDT.EFFDT)
       					
AND  [$GEXXX900_Include_Company_Criteria]
AND  [$GEXXX901_Include_Company_Paygroup_Criteria] 
AND  [$GEXXX902_Include_Deptid_Criteria]
AND  [$GEXXX903_Include_Emp_Stat_Criteria]
AND  [$GEXXX907_Include_Div_Cd_Criteria]
AND  [$GEXXX909_Include_Acct_Cd_Criteria]
AND  [$GEXXX913_Include_Union_Cd_Criteria]
AND  [$GEXXX930_Include_Emp_Type_Criteria]
!ISDVVXK  GEXHR_848_E161362_BONUS2014-begins
!And  JOB.jobcode in (SELECT DISTINCT BN.JOBCODE FROM PS_GEX_JOBCODE_TBL BN WHERE BN.GEX_BONUS_GROUP = 'PG01')
And  JOB.jobcode in (SELECT DISTINCT BN.JOBCODE FROM PS_GEX_JOBCODE_TBL BN
                      WHERE BN.EFFDT = (SELECT MAX(BN1.EFFDT) FROM PS_GEX_JOBCODE_TBL BN1 
		   		         WHERE BN1.SETID = BN.SETID
		   		           AND BN1.GEX_BONUS_GROUP = BN.GEX_BONUS_GROUP
		   		           AND BN1.JOBCODE = BN.JOBCODE
		   		           AND BN1.EFFDT<=SYSDATE)
		      AND BN.STATUS='A'	
		      AND BN.GEX_BONUS_GROUP = 'PG01')
!ISDVVXK  GEXHR_848_E161362_BONUS2014-ends		  
AND  JOB.LAST_HIRE_DT <= $Hire_Dt
AND  JOB.STD_HOURS >= #Rc_std_hours

End-Select
#debug8 Show 'Distinct_Employee_Count :'#Distinct_Employee_Count
Do Get-Emplid-2
#debug8 Show 'Distinct_Employee_Count :'#Distinct_Employee_Count
!***********************************************************************
End-Procedure Get-Emplid
!***********************************************************************
!***********************************************************************
Begin-Procedure Get-Emplid-2
!***********************************************************************
Let $GEXXX900_Company_Alias  = 'JM2.company'
Let $GEXXX901_Company_Alias  = 'JM2.company'
Let $GEXXX901_Paygroup_Alias = 'JM2.paygroup'
Let $GEXXX902_Deptid_Alias   = 'JM2.deptid'
Let $GEXXX903_Emp_Stat_Alias = 'JM2.empl_status'
Let $GEXXX907_Div_CD_Alias   = 'GEXNXT.gex_company_div_cd'
Let $GEXXX909_Acct_CD_Alias  = 'JM2.acct_cd'
Let $GEXXX913_Union_Cd_Alias = 'JM2.union_cd'
Let $GEXXX916_Jobcode_Alias  = 'JM2.jobcode'
Let $GEXXX930_Emp_Type_Alias = 'JM2.empl_type'

Do GEXXX900-Select-Company-Parameters
Do GEXXX901-Select-Company-Paygroup-Parameters
Do GEXXX902-Select-Deptid-Parameters
Do GEXXX903-Select-Emp-Stat-Parameters
Do GEXXX907-Select-Div-Cd-Parameters 
Do GEXXX909-Select-Acct-Cd-Parameters
Do GEXXX913-Select-Union-Cd-Parameters
Do GEXXX916-Select-Jobcode-Parameters
Do GEXXX930-Select-Emp-Type-Parameters
#debug8 Show $GEXXX900_Include_Company_Criteria
#debug8 Show $GEXXX901_Include_Company_Paygroup_Criteria
#debug8 Show $GEXXX902_Include_Deptid_Criteria
#debug8 Show $GEXXX903_Include_Emp_Stat_Criteria
#debug8 Show $GEXXX907_Include_Div_Cd_Criteria
#debug8 Show $GEXXX909_Include_Acct_Cd_Criteria
#debug8 Show $GEXXX913_Include_Union_Cd_Criteria
#debug8 Show $GEXXX930_Include_Emp_Type_Criteria
#debug8 Show $Fromdate
#debug8 Show $ThruDate
#debug8 Show $Hire_Dt
#debug8 Show #Rc_std_hours
 
 
Begin-Select DISTINCT
JM2.EMPLID 

	Let $Emplid = Ltrim(Rtrim(&JM2.EMPLID,' '),' ')
	
	Let #Distinct_Employee_Count = #Distinct_Employee_Count  + 1
	
	Do INSERT-EMPLID-JOBCODE
	
FROM PS_JOB JM2, PS_GEX_DEPT_TBL  GEXNXT
WHERE JM2.DEPTID = GEXNXT.DEPTID
AND  GEXNXT.EFFDT = (SELECT MAX(EFFDT) FROM PS_GEX_DEPT_TBL
      			WHERE  DEPTID       = GEXNXT.DEPTID
       			AND    EFFDT       <= $AsOfDate)
AND  GEXNXT.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM   PS_GEX_DEPT_TBL
       					WHERE  DEPTID       = GEXNXT.DEPTID
       					AND    EFFDT        = GEXNXT.EFFDT)
And    JM2.EFFDT            = (SELECT MAX(JM21.EFFDT) fROM   PS_JOB JM21 WHERE  JM21.EMPLID       = JM2.EMPLID
       					AND    JM21.EMPL_RCD    = JM2.EMPL_RCD
       					AND    JM21.EFFDT       < $FromDate)
And    JM2.EFFSEQ           = (SELECT MAX(jm22.EFFSEQ) FROM   PS_JOB JM22 WHERE  JM22.EMPLID       = JM2.EMPLID
       				AND    JM22.EMPL_RCD    = JM2.EMPL_RCD
       				AND    JM22.EFFDT        = JM2.EFFDT)
AND  [$GEXXX900_Include_Company_Criteria]
AND  [$GEXXX901_Include_Company_Paygroup_Criteria] 
AND  [$GEXXX902_Include_Deptid_Criteria]
AND  [$GEXXX903_Include_Emp_Stat_Criteria]
AND  [$GEXXX907_Include_Div_Cd_Criteria]
AND  [$GEXXX909_Include_Acct_Cd_Criteria]
AND  [$GEXXX913_Include_Union_Cd_Criteria]
AND  [$GEXXX930_Include_Emp_Type_Criteria]
!ISDVVXK  GEXHR_848_E161362_BONUS2014-begins
!And  JM2.jobcode in (SELECT DISTINCT BN.JOBCODE FROM PS_GEX_JOBCODE_TBL BN WHERE BN.GEX_BONUS_GROUP = 'PG01')
And  JM2.jobcode in (SELECT DISTINCT BN.JOBCODE FROM PS_GEX_JOBCODE_TBL BN
                      WHERE BN.EFFDT = (SELECT MAX(BN1.EFFDT) FROM PS_GEX_JOBCODE_TBL BN1 
		   		         WHERE BN1.SETID = BN.SETID
		   		           AND BN1.GEX_BONUS_GROUP = BN.GEX_BONUS_GROUP
		   		           AND BN1.JOBCODE = BN.JOBCODE
		   		           AND BN1.EFFDT<=SYSDATE)
		      AND BN.STATUS='A'	
		      AND BN.GEX_BONUS_GROUP = 'PG01')
!ISDVVXK  GEXHR_848_E161362_BONUS2014-ends		      
AND  JM2.LAST_HIRE_DT <= $Hire_Dt
AND  JM2.STD_HOURS >= #Rc_std_hours
AND JM2.EMPLID NOT IN (SELECT DISTINCT TMP.EMPLID FROM PS_GEX_R_GEXPY212A TMP)
End-Select
!***********************************************************************
End-Procedure Get-Emplid-2
!***********************************************************************

!**********************************************************************
Begin-Procedure INSERT-EMPLID-JOBCODE
!**********************************************************************

Let #EmplidCount=#EmplidCount+1
 
begin-sql 
Insert Into PS_GEX_R_GEXPY212A
(EMPLID,
 JOBCODE,
 FLAG)
Values
($Emplid,
 '30299',
 'Y')
end-sql

!*********************************************************************
End-Procedure
!***********************************************************************


!**********************************************************************
Begin-Procedure SELECT-EMPLID-JOBCODE
!**********************************************************************
Let #All_Rows_Count =  0
Let #JobCode_30299_Count = 0
Begin-Select distinct
EJ.EMPLID  &EJ.EMPLID
EJ.FLAG    &EJ.FLAG
   Let $EMPLIDFROMMAIN =  &EJ.FLAG
   If $Run_Type = '1' or 
    $Run_Type = '2'
    Do P200-Main-Process 
    else
    Do P200-Main-Process2
    End-if
   
from PS_GEX_R_GEXPY212A EJ
ORDER BY EJ.EMPLID
End-Select

!Close 1
!***********************************************************************
End-Procedure
!***********************************************************************

!***********************************************************************
Begin-Procedure P200-Main-Process
!***********************************************************************
#debug9 Show 'P200-Main-Process'
  
  Let $max_dept_jobcode =''  
  Let $Jobcodedescr=''       
  Let $max_duration_deptid=''
  Let #MAX_DURA = 0          
!GEXPY_848_E95094_02 2012-06-04 VENDAXG -Begin
  Clear-array  Name=All_EE_Rows
  Clear-array  Name=Final_Employee_All_Bonus
  Clear-Array Name=EE_Jobcode30299 
 !GEXPY_848_E95094_02 2012-06-04 VENDAXG - End 
Begin-Select
!Vendaxg Modified for Bonus Processing 2011 on 06/15/2011 - Begin
pd2.name     !()  On-Break  Level=1
             !              Print=Never

j.company    !()  On-Break  Level=2
             !              Print=Never
                           
j.jobcode    !()  On-Break  Level=3
             !              Print=Never
             !              Before=New-Page

j.deptid     !()  On-Break  Level=4
             !              Print=Never

j.empl_type  !()  On-Break  Level=5
             !              Print=Never
             !              Before=New-Page
             !              After=P280-Empl-Type-Totals
!Vendaxg Modified for Bonus Processing 2011 on 06/15/2011 - End
J.EMPL_STATUS

j.FULL_PART_TIME
J.STD_HOURS
PD.NAME
J.EMPLID
J.EMPL_RCD
J.ACCT_CD
E.HIRE_DT
J.TERMINATION_DT
J.POSITION_NBR
J.LAST_HIRE_DT
J.REPORTS_TO

	Let $Emplid    		= &J.EMPLID
  	Let $Empl_Rcd 		= &J.EMPL_RCD    
  	Let #Empl_Rcd_Nbr 	= &J.EMPL_RCD
  	Let $Officer  		= &PD2.NAME
  	Let $Company  		= &J.COMPANY
  	Let $Jobcode      	= &J.JOBCODE
  	Let $Deptid    		= &J.DEPTID
  	Let $Acctcd    		= &J.ACCT_CD
  	Let $Empl_Type 		= &J.EMPL_TYPE
  	Let $Empl_Status	= &J.EMPL_STATUS
  	Let $Full_Part_Time  	= &J.FULL_PART_TIME
  	Let #Std_Hours    	= &J.STD_HOURS
    	Let $Termination_Dt   	= &J.TERMINATION_DT
  	Let $Name      		= &PD.NAME
  	Let $Position_Nbr 	= &J2.pOSITION_NBR 
  	Let $Reports_to 	= &J.REPORTS_TO
  	Let $Last_Hire_Dt	= &J.LAST_HIRE_DT

  	Let $current_found = 'N'
  
  	#debug9 Show '************* NEW EMPLID : ' $emplid '  *************' '$Deptid: ' $Deptid '$jobcode: ' $jobcode  
  	do get-Jobcode    
  
  	#debug9 show '$EMPLIDFROMMAIN' $EMPLIDFROMMAIN
  	
 	Let $EmployeeFound='Y' 
  	
  	If $EmployeeFound='Y'
  
  		Do GET-HIREDT           
  
  		Do CALCULATE_MAX_DURATION_DEPTID
  		Let $max_duration_deptid = $MAX_DEPT
  		#debug9 show 'Max Duration deptid' $MAX_DEPT
  		Do Get-Bonus-group
  		  
  		Do P220-Bonus-Table-Current-Year
  
  
  		Let #current_min_pct     = &bonus.gex_min_bonus_pct
  		Let #current_tar_pct     = &bonus.gex_tar_bonus_pct
  		Let #current_max_pct     = &bonus.gex_max_bonus_pct
  		Let #current_csi_adj_pct = &bonus.gex_csi_adj_pct
  		Let #current_bonus_amt   = &bonus.gex_bonus_amt
      !1289792 - GEXHR_BONUS2017 Begins
  		!Let #current_mid_one     = (#current_min_pct + #current_tar_pct) / 2
  		!Let #current_mid_two     = (#current_tar_pct + #current_max_pct) / 2
    	Let #current_mid_one     = (#current_tar_pct - #current_min_pct )
    	Let #current_mid_two     = (#current_max_pct - #current_tar_pct )
      !1289792 - GEXHR_BONUS2017 Ends
      !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
      !1289792 - GEXHR_BONUS2017 Begins
      !Let #current_mid_three   = (#current_tar_pct - #current_min_pct)
       Let #current_mid_three   = #current_max_pct
      !1289792 - GEXHR_BONUS2017 Ends
      !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
		
		Let $Skip = 'Y'
 
  		If $Run_Type = '1'
  			Let $Skip = 'N'
  		Else
  			If $Run_Type = '2'
  	        
  				
        				Let $Skip = 'N'
      				
    			End-if
  		End-If
  
  
  		Do Check-Leave-Duration  
  
    		#debug7 Show '#Leave-Duration: ' #Leave-Duration
  	! Commentd by sitansh for bonus year 2012    		
       		!If #Leave-Duration > 6
          	!	#debug7 show ' ********** Leave Crietria : Skipping Employee (Leave-Duration > 6 Months)  '
          	!	Let $Skip = 'Y'
       		!End-If
                Let $Leave_Duration_prorate = 'N'
 		If #Leave-Duration > 9 ! Changed by sitansh for bonus year 2012
 			#debug7 show ' ********** Leave Crietria : Skipping Employee (Leave-Duration > 6 Months)  '
   			Let $Skip = 'Y'
   		Else
   		!GEXHR_848_PRJ95045_BONUS_2013 2013-05-02 ISDVNPK 
   	    		!if #Leave-Duration < 9 and #Leave-Duration > 3
   	    		if #Leave-Duration <= 9 and #Leave-Duration > 4 ! Changed by ISDVNPK for bonus year 2013
		!GEXHR_848_PRJ95045_BONUS_2013 2013-05-02 ISDVNPK 
   	             		Let $Leave_Duration_prorate = 'Y'
			End-if
	  	End-If ! Changed by sitansh End  

       		      		
       		IF  ((($Empl_Status='T') or ($Empl_Status='Q') or ($Empl_Status='R') or ($Empl_Status='U') )
			And (($Termination_Dt <= $cutoff_dt) or ($Termination_Dt > $Fiscal_Start_Dt)) )
          		
          		Let $Skip = 'Y'
       		End-If
      		#debug9 Show 'skip after termination logic' $Skip
 		
 		Do Get-Std-Hrs-Duration
 		
 		If $Eligible_Standard_hrs <> 'Y'
 			Let $Skip = 'Y'
 			#debug8 Show '********Employee dont have Eligible Standard Hours- Skipping Employee ***********'
 			
 		Else
 			#debug8 Show '********Employee have Eligible Standard Hours- Process Employee ***********'
 			
 		End-if
 		
 		
 		
  		
  		Do Get-Bonus-RunControl
		If $Gex_Dept_bonus_Group <> ''  	
			If $Bonus_Group_Found = 'Y'
		
				#debug8 Show 'Bonus Group Criteria Satisfied :'$Gex_Dept_bonus_Group
			Else
				Do Check-Bonus-Group-Runcontrol
				If $Bonus_Group_In_Runcontrol = 'N'
		
					#debug8 Show 'No Bonus group IN the runcontrol :'$Gex_Dept_bonus_Group
				Else
					Let $Skip = 'Y'
					#debug8 Show 'Bonus Group Criteria Not Satisfied :'$Gex_Dept_bonus_Group
				End-if
  			End-if
  		Else
  			Let $Skip = 'Y'
  			#debug8 Show 'Bonus Group Blank Skip Employee'
  		End-if
 		Let #Year = #Current_Year
 		!Show 'Year :'#Year
 		Let #All_EE_Rows_Count = 0 	!GEXPY_848_E95094_02 2012-06-04 VENDAXG
		Let #EE_JobCode_30299_Count = 0 !GEXPY_848_E95094_02 2012-06-04 VENDAXG
 		If $Skip = 'N'

    			Let $OK-To-Advance-Page = 'Y'
    			Let $Data-Found-Flag = 'Y'
    			!Let #Year = #Previous_Year
    
    			Do P220-Bonus-Table-Select
    
  
    			Let #annual_rt            = &annual_rt
    			Let #hourly_rt            = 0
    			Let #weekly_rt            = &annual_rt / 52
    			Let #previous_min_pct     = &gex_min_bonus_pct
    			Let #previous_tar_pct     = &gex_tar_bonus_pct
    			Let #previous_max_pct     = &gex_max_bonus_pct
    			Let #previous_csi_adj_pct = &gex_csi_adj_pct
    			Let #previous_bonus_amt   = &gex_bonus_amt
          !1289792 - GEXHR_BONUS2017 Begins
    			!Let #previous_mid_one     = (#previous_min_pct + #previous_tar_pct) / 2
    			!Let #previous_mid_two     = (#previous_tar_pct + #previous_max_pct) / 2
    			Let #previous_mid_one     = (#previous_tar_pct - #previous_min_pct )
    			Let #previous_mid_two     = (#previous_max_pct - #previous_tar_pct )
          !1289792 - GEXHR_BONUS2017 Ends
          !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
          !1289792 - GEXHR_BONUS2017 Begins
          !Let #previous_mid_three   = (#previous_tar_pct - #previous_min_pct)
          Let #previous_mid_three   = #previous_max_pct
          !1289792 - GEXHR_BONUS2017 Ends
          !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
    			Let $salary_effdt = $Salary_Dt
    
    			
    			Do Get-EE-Salary
    			Evaluate $Run_Type
    			When = '1'
        			Let $Update_Status = '1'
      			When = '2'
        			Let $Update_Status = '2'
    			End-Evaluate
    			

    			If $current_found = 'N'
    				
    				Let #current_min_pct     = #previous_min_pct
      				Let #current_tar_pct     = #previous_tar_pct
      				Let #current_max_pct     = #previous_max_pct
      				Let #current_csi_adj_pct = #previous_csi_adj_pct
      				Let #current_bonus_amt   = 0
      				Let #current_mid_one     = #previous_mid_one
      				Let #current_mid_two     = #previous_mid_two
              !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
              Let #current_mid_three   = #previous_mid_three
              !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
      				If $Run_Type = '2'
         			
      				End-If
   			End-If
   
   			Let #ee_csi = #current_csi_adj_pct
    			Let #Year = #Current_Year
    			
    			Let #current_bonus_amt1=0
    			Let #current_bonus_amt_1=0
   	   		!Bonus Calcualtion Starts**********************************************************************************************
   	   		Do Get-All-Jobcode 
			Let  #XY=0
			Let #Amount = 1
			Let #Final_Bonus_Amount = 0
			Let $Promotion_Found_Flag = 'N'
			
			Let #Year = #Current_Year
			!Show 'Year : '#Year
			!GEXPY_848_E95094_02 2012-06-04 VENDAXG -Begin
			!While #XY <#Final_Jobcode_Row_Count
			While #XY < #Row_Count
			!GEXPY_848_E95094_02 2012-06-04 VENDAXG - End
				!Let #XY=#XY+1	!GEXPY_848_E95094_02 2012-06-04 VENDAXG
			        
			        !Vendaxg Modified for Bonus Processing 2011 on 05/27/2011 - Begin
			    	!Get $All_Jobcode #Duration from Final-Jobcode-List(#XY)
			    	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
			    	!Get $All_Jobcode $All_Position_Nbr $All_Grade #Duration from Final-Jobcode-List(#XY)
			    	Get $All_Jobcode $All_Position_Nbr $All_Grade #Duration $All_Deptid #All_Annual_Rt $All_Promotion_Found from Jobcode(#Row_Count)
			    	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
			    	!Vendaxg Modified for Bonus Processing 2011 on 05/27/2011 - End
			    	#debug8 Show '----------------------------Processing row Main Get ----------------------------'
			   	#debug8 Show '$All_Jobcode :'$All_Jobcode '#Duration :'#Duration ' Grade : '$All_Grade  ' All_Annual_Rt :'#All_Annual_Rt ' Promotion Found: '$All_Promotion_Found
			   	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
			   	If $All_Promotion_found = 'Y'
			   	
    					Let #Pro_Annual_Rt = #All_Annual_Rt
    					Let $Promotion_Found_Flag = 'Y'
    				Else
    					!Let #Annual_Rt = #Annual_Rt_Asof_runcontrol
    				End-if
    				If $Promotion_Found_Flag = 'Y'
    					Let #Annual_Rt = #Pro_Annual_Rt
    				Else
    				
    				End-if
			   	Let #Row_Count = #Row_Count - 1
			   	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
			   	Let $Jobcd = $All_Jobcode
			   	Let #Ee_Pct = 0   
   				Let #Current_Bonus_Amt = 0
   				!Vendaxg Added for Bonus Processing 2011 on 06/01/2011 - Begin
   				Do Gex-EE-Exception-Pct
   				If $Exception_Found = 'Y'
   				Else
    					Do Gex-Jobcode-Bonus-Percentage
    				End-if
   	   			!Vendaxg Added for Bonus Processing 2011 on 06/01/2011 - Begin
   	   			
   	   			If $Pctfound= 'Y' 
				
					Evaluate $Bonus_Pct_to_Use
				  	When = '1'
				      		Let #Ee_Pct = #Current_Min_Pct
				      	When = '2'
                  !1289792 - GEXHR_BONUS2017 Begins
				        	!Let #Ee_Pct = #Current_Mid_One	
				        	Let #Ee_Pct = #current_min_pct + (#current_mid_one * #profit_pct)
                  !1289792 - GEXHR_BONUS2017 Ends
				      	When = '3'
				        	Let #Ee_Pct = #Current_Tar_Pct
				      	When = '4'
                  !1289792 - GEXHR_BONUS2017 Begins
                  !Let #ee_pct = #Current_Mid_Two
                  Let #ee_pct = #current_tar_pct + (#current_mid_two * #profit_pct)  
                  !1289792 - GEXHR_BONUS2017 Ends	
				      	When = '5'
				        	Let #Ee_Pct = #Current_Max_Pct
                !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins                         
                When = '6'
                  Show '#profit_pct :' #profit_pct
                  !1289792 - GEXHR_BONUS2017 Begins
                  !Let #Ee_pct = #current_min_pct + (#current_mid_three * #profit_pct)
                  Let #Ee_pct = #current_max_pct + (#current_mid_three * #profit_pct)
                  !1289792 - GEXHR_BONUS2017 End   
                  Show '#current_mid_three :' #current_mid_three
                  Show '#ee_pct :' #ee_pct  
                !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends       
				    	End-Evaluate
				    	
				        Let #Gex_Bonus_Pct_Used = #Ee_Pct !Vendaxg Added for Bonus Processng 2011 on 05/27/2011
    					Let #Ee_Csi = #Current_Csi_Adj_Pct
    					Do Get-Bonus-Kickers
    					#debug8 Show '#Ee_Pct :'#Ee_Pct
    					
    					If #Current_Bonus_Amt = 0
						If $All_Jobcode <> '30299'				    
							If $Empl_Type = 'S'
					       			!#debug8 Show '#Annual_Rt' #Annual_Rt
					       			Let #Calc_Bonus = #Annual_Rt * #Ee_Pct
					        		
					        		#debug8 Show '#Annual_Rt: ' #Annual_Rt ' #Calc_Bonus :' #Calc_Bonus ' #Ee_Pct: ' #Ee_Pct ' #Cmp_Comp: ' #Cmp_Comp ' #Current_Bonus_Amt:' #Current_Bonus_Amt
					        		
					       			!#debug8 Show '#Current_Bonus_Amt' #Current_Bonus_Amt
					        		
					      			!#debug8 Show ' #Annual_Rt , #Ee_Pct,#Cmp_Comp, Bonus: ' #Annual_Rt ' ,' #Ee_Pct ' ,' #Cmp_Comp ' ,' #current_bonus_amt
					        						
					        		#debug8 Show 'Kicker flags: '  'Company Component: ' #Ee_Pct  ' puv: ' #puv ' $profit: ' #profit  '  #css1: ' #css1  '  $css2: '  #css2
								!GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
								!Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #Ee_Pct)
								Show '#Pct_of_Pct_Used : '#Pct_of_Pct_Used
								Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #Ee_Pct * (#Pct_of_Pct_Used / 100))
								!GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
								Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #puv) 
								Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #profit)
								Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #css1)
								Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #css2)
								! Commented by sitansh for 2012
								!#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For Whole Year.'
								!Let #current_bonus_amt = (#current_bonus_amt * #Duration) / #DurfromRctl
								!#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For :' #Duration ' Days'
								! Added by sitansh for 2012 - Begin
       								#debug8 Show 'Total Salary Leave Duration: '#Total_Leave_S  ' Pro-rate Leave: '$Leave_Duration_prorate 
       								if $Leave_Duration_prorate = 'Y'
									#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For Whole Year.'
									Let #current_bonus_amt = (#current_bonus_amt * (#Duration / #DurfromRctl) * ((#DurfromRctl - #Total_Leave_S) / #DurfromRctl))
									#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For :' #Duration ' Days'
								Else
									#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For Whole Year.'
									Let #current_bonus_amt = (#current_bonus_amt * #Duration) / #DurfromRctl
									#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For :' #Duration ' Days'
								End-if
								! Added by sitansh for 2012 - End								
								Let #Final_Bonus_Amount = #Final_Bonus_Amount + #current_bonus_amt
					        	   	#debug8 Show '******  Final_bonus_amt  ******' #Final_Bonus_Amount
					        	   	Let #Annual_Rt_Bonus_Cal = #Annual_Rt
					        		
					      		Else !$Empl_Type = 'H'
					       			!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
					        		!Let #annualized_sal = #weekly_rt * 52            
					        		Let #annualized_sal = #Annual_Rt
					        		!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End          
					        		Let #calc_bonus = #annualized_sal * #ee_pct
					        		#debug8 Show '****** Hourly Emplid #annualized_sal , #ee_pct,#cmp_comp, bonus: ' #annualized_sal ' ,' #ee_pct ' ,' #cmp_comp ' ,' #current_bonus_amt
					       			
					        			
					        		#debug8 Show 'Kicker flags: '  'Company Component: ' #Ee_Pct  ' puv: ' #puv ' $profit: ' #profit  '  #css1: ' #css1  '  $css2: '  #css2
					        		!GEXPY_848_E95094_02 2012-06-06 VENDAXG - Begin
					        		!Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #Ee_Pct)
					        		Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #Ee_Pct * ( #Pct_of_Pct_Used / 100))
					        		!GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
								Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #puv) 
								Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #profit)
								Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #css1)
								Let #Current_Bonus_Amt = #Current_Bonus_Amt + (#Annual_Rt * #css2)
								
					        		#debug8 Show 'current Bonus Amount : '#Current_Bonus_Amt ' For Job Code: ' $Jobcd ' For Whole Year.'
								! Commented by sitansh for 2012
					        		!Let #Current_Bonus_Amt = (#Current_Bonus_Amt * #Duration) / #DurfromRctl
								! Added by sitansh for 2012 - Begin
       								#debug8 Show 'Total Hourly Leave Duration: '#Total_Leave_H  ' Pro-rate Leave: '$Leave_Duration_prorate
       								!#debug8 Show 'Pro-rate Leave: '$Leave_Duration_prorate  					        		
								if $Leave_Duration_prorate = 'Y'
									#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For Whole Year.'
									Let #current_bonus_amt = (#current_bonus_amt * (#Duration / #DurfromRctl) * ((#DurfromRctl - #Total_Leave_H) / #DurfromRctl))
									#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For :' #Duration ' Days'
								Else
									#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For Whole Year.'
									Let #Current_Bonus_Amt = (#Current_Bonus_Amt * #Duration) / #DurfromRctl
									#debug8 Show 'Current Bonus Amount : '#current_bonus_amt ' for Job Code: ' $JOBCD ' For :' #Duration ' Days'
								End-if 
								! Added by sitansh for 2012 - End																
					        		#debug8 Show 'current Bonus Amount : '#Current_Bonus_Amt ' For Job Code: ' $Jobcd ' For :' #Duration ' Days'
					        	   	Let #Final_Bonus_Amount = #Final_Bonus_Amount + #Current_Bonus_Amt
					        	   	#debug8 Show '******  Final_Bonus_Amt  ******' #Final_Bonus_Amount
					      			Let #Annual_Rt_Bonus_Cal = #Annualized_Sal
					      		
					      		End-If !Empl_Type='S'
					      		!GEXPY_848_E95094_02 2012-06-04 VENDAXG - Begin
					      		!If $Jobcd = '30170'
					      		!	Let #JobCode_30170_Count = #JobCode_30170_Count + 1
					      		!	Let #Jobcode_30170_Bonus_Sum = #Jobcode_30170_Bonus_Sum + #Current_Bonus_Amt
					      		!End-if
					      		!GEXPY_848_E95094_02 2012-06-04 VENDAXG - End
					      		
							
							If $Empl_Type = 'S'
								Let #Annual_Rt_Bonus_Cal = #Annual_Rt
							Else
								Let #Annual_Rt_Bonus_Cal = #weekly_rt * 52
							End-if
														
							If $Bonus_Calculated = 'Y'
								
							Else
							
							End-if
							!Let #All_Rows_Count = #All_Rows_Count +1 
							!Vendaxg Modified for Bonus Processing 2011 on 05/27/2011 - Begin
							!Put $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd $Name #Annual_Rt_Bonus_Cal #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Current_Bonus_Amt $Reports_to $Last_Hire_Dt  Into All_Rows(#All_Rows_Count)
							!GEXPY_848_E95094_02 2012-06-04 VENDAXG - Begin
							Let #All_EE_Rows_Count = #All_EE_Rows_Count + 1
							!Put $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd $Name $All_Position_Nbr #Annual_Rt_Bonus_Cal #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Current_Bonus_Amt $Reports_to $Last_Hire_Dt $Gex_Dept_bonus_Group #Gex_Bonus_Pct_Used $All_Grade Into All_Rows(#All_Rows_Count)
							Put $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd $Name $All_Position_Nbr #Annual_Rt_Bonus_Cal #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Current_Bonus_Amt $Reports_to $Last_Hire_Dt $Gex_Dept_bonus_Group #Gex_Bonus_Pct_Used $All_Grade #Std_Hours Into All_EE_Rows(#All_EE_Rows_Count)
							!GEXPY_848_E95094_02 2012-06-04 VENDAXG - End
							!Vendaxg Modified for Bonus Processing 2011 on 05/27/2011 - End
					      	Else
					      		Let #Current_Bonus_Amt = 0 
					      		
							If $Empl_Type = 'S'
								Let #Annual_Rt_Bonus_Cal = #Annual_Rt
							Else
								Let #Annual_Rt_Bonus_Cal = #weekly_rt * 52
							End-if
														
							!GEXPY_848_E95094_02 2012-06-04 VENDAXG - Begin
							!Let #JobCode_30299_Count = #JobCode_30299_Count + 1
							!Put $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd #Duration #Standard_Hrs_Eligible_Duration Into Jobcode30299(#JobCode_30299_Count)
							Let #EE_JobCode_30299_Count = #EE_JobCode_30299_Count + 1
							Put $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd #Duration #Standard_Hrs_Eligible_Duration Into EE_Jobcode30299(#EE_JobCode_30299_Count)
							
							!Let #All_Rows_Count = #All_Rows_Count +1 
							!Vendaxg Modified for Bonus Processing 2011 on 05/27/2011 - Begin
							!Put $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd $Name  #Annual_Rt_Bonus_Cal #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Current_Bonus_Amt $Reports_to $Last_Hire_Dt  Into All_Rows(#All_Rows_Count)
							Let #All_EE_Rows_Count = #All_EE_Rows_Count + 1
							!Put $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd $Name $All_Position_Nbr #Annual_Rt_Bonus_Cal #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Current_Bonus_Amt $Reports_to $Last_Hire_Dt $Gex_Dept_bonus_Group #Gex_Bonus_Pct_Used $All_Grade  Into All_Rows(#All_Rows_Count)
							Put $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd $Name $All_Position_Nbr #Annual_Rt_Bonus_Cal #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Current_Bonus_Amt $Reports_to $Last_Hire_Dt $Gex_Dept_bonus_Group #Gex_Bonus_Pct_Used $All_Grade #Std_Hours Into All_EE_Rows(#All_EE_Rows_Count)
							!GEXPY_848_E95094_02 2012-06-04 VENDAXG - End
							!Vendaxg Modified for Bonus Processing 2011 on 05/27/2011 - End
					      	End-if
    					 	
					End-if 
					
					Let #Amount = #Amount + 1
					
				End-if
    			End-while 
   				!Bonus Calcualtion End**********************************************************************************************
    	
         
    			Add 1                   To #type-count
    			Add 1                   To #deptid-count
	
    			Add #previous_bonus_amt To #type_previous_bonus
    			Add #current_bonus_amt  To #type_current_bonus
	
    			Add #previous_bonus_amt To #deptid_previous_bonus
    			Add #current_bonus_amt  To #deptid_current_bonus
	
    			Add #previous_bonus_amt To #report_previous_bonus
    			Add #current_bonus_amt  To #report_current_bonus
	
    			!Do P290-Print-Record
    			
  	End-If
  End-If

From   ps_gex_dept_tbl     gdt,
       ps_gex_mgmt_report  gmr,
       ps_personal_data    pd2,
       ps_personal_data    pd,
       ps_employment       e,
       ps_job              j
Where  pd.emplid           = j.emplid
And    j.emplid = &EJ.EMPLID
And    pd2.emplid = Nvl(Nvl(Rtrim(gmr.gex_svpvp,' '),Rtrim(gmr.gex_evp,' ')),gmr.gex_ceo)
And    e.emplid            = j.emplid
And    e.empl_rcd         = j.empl_rcd
And    j.effdt             =
      (Select Max(effdt)
       From   ps_job
       Where  emplid       = j.emplid
       And    empl_rcd    = j.empl_rcd
       And    effdt       <= $AsOfDate)
And    j.effseq            =
      (Select Max(effseq)
       From   ps_job
       Where  emplid       = j.emplid
       And    empl_rcd    = j.empl_rcd
       And    effdt        = j.effdt)

And    gmr.deptid          = j.deptid

And    gdt.deptid          = j.deptid

And    gdt.effdt           =
      (Select Max(effdt)
       From   ps_gex_dept_tbl
       Where  deptid       = j.deptid
       And    effdt       <= $AsOfDate)

And    gdt.sequence_number =
      (Select Max(sequence_number)
       From   ps_gex_dept_tbl
       Where  deptid       = gdt.deptid
       And    effdt        = gdt.effdt)

Order By j.jobcode,pd2.name, j.company, j.deptid, j.empl_type, pd.name
End-Select
!GEXPY_848_E95094_02 2012-06-04 VENDAXG - Begin
Let #All_Bonus_Counter = 1
#debug8 Show '*************************** Total Jobcode Bonus Row ***********************'
While #All_Bonus_Counter <= #All_EE_Rows_Count
	!Put $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd $Name $All_Position_Nbr #Annual_Rt_Bonus_Cal #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Current_Bonus_Amt $Reports_to $Last_Hire_Dt $Gex_Dept_bonus_Group #Gex_Bonus_Pct_Used $All_Grade  Into All_EE_Rows(#All_EE_Rows_Count)
	Get $Allbonus_Emplid #AllBonus_Empl_Rcd #All_Year $Deptid $Empl_Type $Max_Duration_Deptid $Jobcd $Name $Gex_Position_Nbr #Annual_Rt_Bonus_Cal #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Current_Bonus_Amt $Reports_to $Last_Hire_Dt $Gex_Dept_bonus_Group #Gex_Bonus_Pct_Used $All_Grade #All_Std_Hours From All_EE_Rows(#All_Bonus_Counter)
	Show $Allbonus_Emplid ':' #AllBonus_Empl_Rcd ':' #All_Year ':' $Deptid ':' $Empl_Type ':' $Max_Duration_Deptid ':' $Jobcd ':' $Gex_Position_Nbr ':' #Current_Min_Pct ':' #Current_Tar_Pct ':' #Current_Max_Pct ':' #Gex_Bonus_Pct_Used ':' #Current_Bonus_Amt ':' #Current_Bonus_Amt ':' $Last_Hire_Dt ':'$Gex_Dept_bonus_Group ':' $Reports_to ':' #All_Std_Hours ':'  $All_grade 
	Let #All_Bonus_Counter = #All_Bonus_Counter + 1
End-While
#debug8 Show '*************************** Total Jobcode Bonus Row ***********************'
Do Sum-Distinct-Bonus-Jobcodes
If #EE_JobCode_30299_Count > 0 
	Do Sum-Distinct-EE-30299
End-if
Do Process-Employee-Array
!GEXPY_848_E95094_02 2012-06-04 VENDAXG - End
!***********************************************************************
End-Procedure
!***********************************************************************
!GEXPY_848_E95094_02 2012-06-04 VENDAXG - Begin
!***********************************************************************
Begin-Procedure Process-Employee-Array
!***********************************************************************
Let #Counter_Employee_Array = 1
#debug8 Show '*************************** Process Employee Array ***********************'
While #Counter_Employee_Array < #Final_Bonus_Jobcode_Row_Count
	
	Get $EE_Emplid #EE_Empl_Rcd #EE_Current_Year $EE_Deptid $EE_Empl_Type $EE_Max_Duration_Deptid $EE_Jobcd $EE_Name $EE_Gex_Position_Nbr #EE_Annual_Rt #EE_Current_Min_Pct #EE_Current_Tar_Pct #EE_Current_Max_Pct #EE_Current_Bonus_Amount $EE_Reports_to $All_hire_Dt $EE_Gex_Dept_bonus_Group #EE_Gex_Bonus_Pct_Used $EE_All_grade #EE_Std_Hrs From Final_Employee_All_Bonus(#Counter_Employee_Array)
	
	If $EE_Jobcd = '30170'
		Let #JobCode_30170_Count = #JobCode_30170_Count + 1
		Let #Jobcode_30170_Bonus_Sum = #Jobcode_30170_Bonus_Sum + #EE_Current_Bonus_Amount
	End-if
	
	!If $EE_Jobcd = '30299'
	!	Let #JobCode_30299_Count = #JobCode_30299_Count + 1
	!	Put $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd #Duration #Standard_Hrs_Eligible_Duration Into Jobcode30299(#JobCode_30299_Count)				      		
	!End-if
	Let #All_Rows_Count = #All_Rows_Count +1 
	Put $EE_Emplid #EE_Empl_Rcd #EE_Current_Year $EE_Deptid $EE_Empl_Type $EE_Max_Duration_Deptid $EE_Jobcd $EE_Name $EE_Gex_Position_Nbr #EE_Annual_Rt #EE_Current_Min_Pct #EE_Current_Tar_Pct #EE_Current_Max_Pct #EE_Current_Bonus_Amount $EE_Reports_to $All_hire_Dt $EE_Gex_Dept_bonus_Group #EE_Gex_Bonus_Pct_Used $EE_All_grade #EE_Std_Hrs Into All_Rows(#All_Rows_Count)
	#debug8 Show $EE_Emplid ':' #EE_Empl_Rcd ':' #EE_Current_Year  ':' $EE_Deptid  ':' $EE_Empl_Type  ':' $EE_Max_Duration_Deptid  ':' $EE_Jobcd  ':' $EE_Name ':'  $EE_Gex_Position_Nbr ':'  #EE_Annual_Rt  ':' #EE_Current_Min_Pct  ':' #EE_Current_Tar_Pct  ':' #EE_Current_Max_Pct  ':' #Sum_Distinct_Bonus_JobCode_Amount  ':' $EE_Reports_to  ':' $All_hire_Dt  ':' $EE_Gex_Dept_bonus_Group  ':'  #EE_Gex_Bonus_Pct_Used ':' $EE_All_grade ':' #EE_Std_Hrs
	
	Let #Counter_Employee_Array = #Counter_Employee_Array + 1
End-While	
#debug8 Show '*************************** Process Employee Array ***********************'
!***********************************************************************
End-Procedure Process-Employee-Array
!***********************************************************************


!***********************************************************************
Begin-Procedure Sum-Distinct-EE-30299
!***********************************************************************
Let #Counter_EE_Array_30299 = 0
Let #Total_Duration_30299 = 0
#debug8 Show '*************************** Process Employee 30299 Array ***********************'
While #Counter_EE_Array_30299 < #EE_JobCode_30299_Count
	Let #Counter_EE_Array_30299  = #Counter_EE_Array_30299 + 1
	Get $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd #Duration #Standard_Hrs_Eligible_Duration From EE_Jobcode30299(#Counter_EE_Array_30299)
	#debug8 Show $Emplid ':' #Empl_Rcd_Nbr ':'  #Year ':'  $Deptid ':'  $Empl_Type  ':' $max_duration_deptid ':'  $Jobcd  ':' #Duration ':'  #Standard_Hrs_Eligible_Duration
	Let #Total_Duration_30299 = #Total_Duration_30299 + #Duration
End-While
#debug8 Show 'Total 30299 Duration :'#Total_Duration_30299
Let #JobCode_30299_Count = #JobCode_30299_Count + 1
Put $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd #Total_Duration_30299 #Standard_Hrs_Eligible_Duration Into Jobcode30299(#JobCode_30299_Count)				      		
#debug8 Show 'Put in Main 30299 Array'
#debug8 Show $Emplid ':' #Empl_Rcd_Nbr ':'  #Year ':'  $Deptid ':'  $Empl_Type  ':' $max_duration_deptid ':'  $Jobcd  ':' #Total_Duration_30299 ':'  #Standard_Hrs_Eligible_Duration
#debug8 Show '*************************** Process Employee 30299 Array ***********************'
!***********************************************************************
End-Procedure Sum-Distinct-EE-30299
!***********************************************************************

!***********************************************************************
Begin-Procedure Sum-Distinct-Bonus-Jobcodes
!***********************************************************************
Let #Counter_Bonus_Jobcodes =0
Let $Prev_Distinct_Bonus_Jobcode = ''
Let #Distinct_Bonus_Jobcode_Count = 0
Let #Sum_Distinct_Bonus_JobCode_Duration = 0
Let #Final_Bonus_Jobcode_Row_Count = 0 

While #Counter_Bonus_Jobcodes < #All_Bonus_Counter

   Let #Counter_Bonus_Jobcodes = #Counter_Bonus_Jobcodes + 1
   !Get $Allbonus_Emplid #AllBonus_Empl_Rcd #Current_Year $Deptid $Empl_Type $Max_Duration_Deptid $Jobcd $Name $Gex_Position_Nbr #Annual_Rt_Bonus_Cal #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Current_Bonus_Amt $Reports_to $Last_Hire_Dt $Gex_Dept_bonus_Group #Gex_Bonus_Pct_Used $All_Grade From All_EE_Rows(#All_Bonus_Counter)
   Get $ALB_Emplid #ALB_Empl_Rcd #ALB_Current_Year $Allbonus_Deptid $Allbonus_Empl_Type $Allbonus_Max_Duration_Deptid $Allbonus_Jobcd $AllBonus_Name $Allbonus_Gex_Position_Nbr #Allbonus_Annual_Rt #Allbonus_Current_Min_Pct #Allbonus_Current_Tar_Pct #Allbonus_Current_Max_Pct #Allbonus_Current_Bonus_Amt $Allbonus_Reports_to $All_hire_Dt $Allbonus_Gex_Dept_bonus_Group #Allbonus_Gex_Bonus_Pct_Used $Allbonus_All_grade #AL_Std_Hrs From All_EE_Rows(#Counter_Bonus_Jobcodes)
   	#debug8 Show 'Get :'$Allbonus_Emplid ':' #AllBonus_Empl_Rcd  ':' #Allbonus_Current_Year  ':' $Allbonus_Deptid  ':' $Allbonus_Empl_Type  ':' $Allbonus_Max_Duration_Deptid ':'  $Allbonus_Jobcd ':'  $AllBonus_Name  ':' $Allbonus_Gex_Position_Nbr ':'  #Allbonus_Annual_Rt  ':' #Allbonus_Current_Min_Pct  ':' #Allbonus_Current_Tar_Pct ':'  #Allbonus_Current_Max_Pct ':'  #Sum_Distinct_Bonus_JobCode_Amount  ':' $Allbonus_Reports_to  ':' $All_hire_Dt ':' #AL_Std_Hrs
   	Let $Bonus_JobCode_Found_Final_List = 'N'
   	Let #Counter_Bonus_Jobcodes2 = 0
   	While #Counter_Bonus_Jobcodes2 < #Final_Bonus_Jobcode_Row_Count
   		Let #Counter_Bonus_Jobcodes2 = #Counter_Bonus_Jobcodes2 + 1
   		!Get $Dist_Bon_Emplid #Dist_Bon_Empl_Rcd #Dist_Bon_Current_Year $Dist_Bon_Deptid $Dist_Bon_Empl_Type $Dist_Bon_Max_Duration_Deptid $Dist_Bon_Jobcd $Dist_Bon_Gex_Position_Nbr #Dist_Bon_Current_Min_Pct #Dist_Bon_Current_Tar_Pct #Dist_Bon_Current_Max_Pct #Dist_Bon_Gex_Bonus_Pct_Used #Dist_Bon_Current_Bonus_Amt #Dist_Bon_Current_Bonus_Amt $Dist_Bon_Gex_Dept_bonus_Group $Dist_Bon_Reports_to #Dist_Bon_Std_hours $Dist_Bon_All_grade From Final_Employee_All_Bonus(#Counter_Bonus_Jobcodes2)
   		
   		Get $Dist_Bon_Emplid #Dist_Bon_Empl_Rcd #Dist_Bon_Current_Year $Dist_Bon_Deptid $Dist_Bon_Empl_Type $Dist_Bon_Max_Duration_Deptid $Dist_Bon_Jobcd $Dist_Bon_Name $Dist_Bon_Gex_Position_Nbr #Dist_Bon_Annual_Rt #Dist_Bon_Current_Min_Pct #Dist_Bon_Current_Tar_Pct #Dist_Bon_Current_Max_Pct #Dist_Bon_Current_Bonus_Amt $Dist_Bon_Reports_to $Dist_All_hire_Dt $Dist_Bon_Gex_Dept_bonus_Group #Dist_Bon_Gex_Bonus_Pct_Used $Dist_Bon_All_grade From Final_Employee_All_Bonus(#Counter_Bonus_Jobcodes2)
   		
   		If ($Dist_Bon_Deptid = $Allbonus_Deptid) AND  ($Dist_Bon_Max_Duration_Deptid = $Allbonus_Max_Duration_Deptid ) AND ( $Dist_Bon_Jobcd  = $Allbonus_Jobcd) 
   		
   			Let $Bonus_JobCode_Found_Final_List = 'Y' 
   		End-if
   	End-While
   	
   	If $Bonus_JobCode_Found_Final_List = 'N'
   		Let #Counter_Bonus_Jobcodes1 = 0
   		Let $Prev_All_Bonus_Jobcode = ''
   		Let #Sum_Distinct_Bonus_JobCode_Amount = 0 
   		While #Counter_Bonus_Jobcodes1 < #All_Bonus_Counter
   			Let #Counter_Bonus_Jobcodes1 = #Counter_Bonus_Jobcodes1 + 1
   			!Get $Find_Bon_Emplid #Find_Bon_Empl_Rcd #Find_Bon_Current_Year $Find_Bon_Deptid $Find_Bon_Empl_Type $Find_Bon_Max_Duration_Deptid $Find_Bon_Jobcd $Find_Bon_Gex_Position_Nbr #Find_Bon_Current_Min_Pct #Find_Bon_Current_Tar_Pct #Find_Bon_Current_Max_Pct #Find_Bon_Gex_Bonus_Pct_Used #Find_Bon_Current_Bonus_Amt #Find_Bon_Current_Bonus_Amt $Find_Bon_Gex_Dept_bonus_Group $Find_Bon_Reports_to #Find_Bon_Std_hours $Find_Bon_All_grade From Employee_All_Bonus(#Counter_Bonus_Jobcodes1)
   			 Get $Find_Bon_Emplid #Find_Bon_Empl_Rcd #Find_Bon_Current_Year $Find_Bon_Deptid $Find_Bon_Empl_Type $Find_Bon_Max_Duration_Deptid $Find_Bon_Jobcd $Find_Bon_Name $Find_Bon_Gex_Position_Nbr #Find_Bon_Annual_Rt #Find_Bon_Current_Min_Pct #Find_Bon_Current_Tar_Pct #Find_Bon_Current_Max_Pct #Find_Bon_Current_Bonus_Amt $Find_Bon_Reports_to $Find_All_hire_Dt $Find_Bon_Gex_Dept_bonus_Group #Find_Bon_Gex_Bonus_Pct_Used $Find_Bon_All_grade From All_EE_Rows(#Counter_Bonus_Jobcodes1)	
   			If ($Find_Bon_Deptid = $Allbonus_Deptid) AND  ($Find_Bon_Max_Duration_Deptid = $Allbonus_Max_Duration_Deptid ) AND ( $Find_Bon_Jobcd  = $Allbonus_Jobcd) 
   				Let #Sum_Distinct_Bonus_JobCode_Amount = #Sum_Distinct_Bonus_JobCode_Amount + #Find_Bon_Current_Bonus_Amt
   				
   			End-if
   		End-While
   		Let #Final_Bonus_Jobcode_Row_Count =  #Final_Bonus_Jobcode_Row_Count + 1
   		!Put $Allbonus_Emplid #AllBonus_Empl_Rcd #Allbonus_Current_Year $Allbonus_Deptid $Allbonus_Empl_Type $Allbonus_Max_Duration_Deptid $Allbonus_Jobcd $Allbonus_Gex_Position_Nbr #Allbonus_Current_Min_Pct #Allbonus_Current_Tar_Pct #Allbonus_Current_Max_Pct #Allbonus_Gex_Bonus_Pct_Used #Sum_Distinct_Bonus_JobCode_Amount #Sum_Distinct_Bonus_JobCode_Amount $Allbonus_Gex_Dept_bonus_Group $Allbonus_Reports_to #Allbonus_Std_hours $Allbonus_All_grade Into Final_Employee_All_Bonus(#Final_Bonus_Jobcode_Row_Count)
   		Put $ALB_Emplid #ALB_Empl_Rcd #ALB_Current_Year $Allbonus_Deptid $Allbonus_Empl_Type $Allbonus_Max_Duration_Deptid $Allbonus_Jobcd $AllBonus_Name $Allbonus_Gex_Position_Nbr #Allbonus_Annual_Rt #Allbonus_Current_Min_Pct #Allbonus_Current_Tar_Pct #Allbonus_Current_Max_Pct #Sum_Distinct_Bonus_JobCode_Amount $Allbonus_Reports_to $All_hire_Dt $Allbonus_Gex_Dept_bonus_Group #Allbonus_Gex_Bonus_Pct_Used $Allbonus_All_grade #AL_Std_Hrs Into Final_Employee_All_Bonus(#Final_Bonus_Jobcode_Row_Count)
   		#debug8 Show 'Put :'$Allbonus_Emplid ':' #AllBonus_Empl_Rcd  ':' #Allbonus_Current_Year  ':' $Allbonus_Deptid  ':' $Allbonus_Empl_Type  ':' $Allbonus_Max_Duration_Deptid ':'  $Allbonus_Jobcd ':'  $AllBonus_Name  ':' $Allbonus_Gex_Position_Nbr ':'  #Allbonus_Annual_Rt  ':' #Allbonus_Current_Min_Pct  ':' #Allbonus_Current_Tar_Pct ':'  #Allbonus_Current_Max_Pct ':'  #Sum_Distinct_Bonus_JobCode_Amount  ':' $Allbonus_Reports_to  ':' $All_hire_Dt ':'#AL_Std_Hrs
   		#debug8 Show ':'  $Allbonus_Gex_Dept_bonus_Group ':'  #Allbonus_Gex_Bonus_Pct_Used  ':' $Allbonus_All_grade
        End-if
  
End-While

Let #Counter_Bonus_Jobcodes_testing = 1
#debug8 Show '*************************** Distinct Jobcode Bonus Row ***********************'
While #Counter_Bonus_Jobcodes_testing < #Final_Bonus_Jobcode_Row_Count
	
	!Get $Test_Emplid #Test_Empl_Rcd #Test_Current_Year $Test_Deptid $Test_Empl_Type $Test_Max_Duration_Deptid $Test_Jobcd $Test_Gex_Position_Nbr #Test_Current_Min_Pct #Test_Current_Tar_Pct #Test_Current_Max_Pct #Test_Gex_Bonus_Pct_Used #Sum_Distinct_Bonus_JobCode_Amount #Sum_Distinct_Bonus_JobCode_Amount $Test_Gex_Dept_bonus_Group $Test_Reports_to #Test_Std_hours $Test_All_grade From Final_Employee_All_Bonus(#Counter_Bonus_Jobcodes_testing)
	Get $Test_Emplid #Test_Empl_Rcd #Test_Current_Year $Test_Deptid $Test_Empl_Type $Test_Max_Duration_Deptid $Test_Jobcd $Test_Name $Test_Gex_Position_Nbr #Test_Annual_Rt #Test_Current_Min_Pct #Test_Current_Tar_Pct #Test_Current_Max_Pct #Sum_Distinct_Bonus_JobCode_Amount $Test_Reports_to $All_hire_Dt $Test_Gex_Dept_bonus_Group #Test_Gex_Bonus_Pct_Used $Test_All_grade #Test_Std_Hrs From Final_Employee_All_Bonus(#Counter_Bonus_Jobcodes_testing)
	
	#debug8 Show $Test_Emplid ':' #Test_Empl_Rcd ':' #Test_Current_Year  ':' $Test_Deptid  ':' $Test_Empl_Type  ':' $Test_Max_Duration_Deptid  ':' $Test_Jobcd  ':' $Test_Name ':'  $Test_Gex_Position_Nbr ':'  #Test_Annual_Rt  ':' #Test_Current_Min_Pct  ':' #Test_Current_Tar_Pct  ':' #Test_Current_Max_Pct  ':' #Sum_Distinct_Bonus_JobCode_Amount  ':' $Test_Reports_to  ':' $All_hire_Dt  ':' $Test_Gex_Dept_bonus_Group  ':'  #Test_Gex_Bonus_Pct_Used ':' $Test_All_grade
	!#debug8 Show $Test_Emplid ':' #Test_Empl_Rcd  ':' #Test_Current_Year ':'  $Test_Deptid  ':' $Test_Empl_Type  ':' $Test_Max_Duration_Deptid  ':' $Test_Jobcd  ':' $Test_Gex_Position_Nbr ':'  #Test_Current_Min_Pct  ':'  #Test_Current_Tar_Pct ':'  #Test_Current_Max_Pct  ':' #Test_Gex_Bonus_Pct_Used  ':' #Sum_Distinct_Bonus_JobCode_Amount  ':' #Sum_Distinct_Bonus_JobCode_Amount  ':' $Test_Gex_Dept_bonus_Group ':'  $Test_Reports_to  ':' #Test_Std_hours  ':' $Test_All_grade ':' #Test_Std_Hrs
	Let #Counter_Bonus_Jobcodes_testing = #Counter_Bonus_Jobcodes_testing + 1
End-while
#debug8 Show '***************************  Distinct Jobcode Bonus Row ***********************'
!***********************************************************************
End-Procedure Sum-Distinct-Bonus-Jobcodes
!***********************************************************************
!GEXPY_848_E95094_02 2012-06-04 VENDAXG - End
!***********************************************************************
Begin-Procedure P200-Main-Process2				       !*
!***********************************************************************
#debug9 Show 'P200-Main-Process2'
 #debug8 Show 'Entering P200-Main-Process2'
 
  Let $Jobcode = ''
  Let $Max_dept_jobcode =''
  Let $Jobcodedescr=''
  Let $Max_duration_deptid=''
  Let #MAX_DURA = 0
 
 
Begin-Select
!Vendaxg Modified for Bonus Processing 2011 on 06/15/2011 - Begin
PD3.NAME     !()  On-Break  Level=1 
              !             Print=Never

J2.COMPANY    !()  On-Break  Level=2
              !             Print=Never
                           
J2.JOBCODE    !()  On-Break  Level=3
              !             Print=Never
              !             Before=New-Page                      

B.DEPTID     !()  On-Break  Level=4
              !             Print=Never


B.EMPL_TYPE  !()  On-Break  Level=5
             !              Print=Never
             !              Before=New-Page
             !              After=P280-Empl-Type-Totals
!Vendaxg Modified for Bonus Processing 2011 on 06/15/2011 - End             
J2.FULL_PART_TIME
J2.STD_HOURS
J2.POSITION_NBR       
B.EMPLID
B.EMPL_RCD
B.GEX_MIN_BONUS_PCT
B.GEX_TAR_BONUS_PCT
B.GEX_MAX_BONUS_PCT
B.GEX_CSI_ADJ_PCT
B.GEX_BONUS_AMT
B.GEX_BONUS_STATUS
B.JOBCODE
B.BUDGET_DEPTID
B.GEX_FNAL_BONUS_AMT
J2.ACCT_CD
J2.DEPTID
J2.TERMINATION_DT
E2.HIRE_DT
J2.LAST_HIRE_DT

  	Let $Acctcd    		= &j2.acct_cd
  	Let $job_deptid    	= &j2.deptid
  	Let $Position_Nbr 	= &j2.Position_nbr 
  	Let $empl_rcd 		= &j.empl_rcd          
  	Let $emplid    		= &b.emplid   
  	Let #empl_rcd_nbr	= &b.empl_rcd 
  	Let $Officer   		= &pd3.name
  	Let $Company   		= &j2.company
  	Let $jobcode     	= &j2.jobcode
  	Let $Deptid    		= &b.deptid
  	Let $Jobcd		= &B.JOBCODE
  	Let $Budget_Deptid 	= &B.BUDGET_DEPTID
	Let $Jobcode		= &B.JOBCODE
  	Let #Final_Bonus_Amount	= &B.GEX_FNAL_BONUS_AMT
	
  	Let $Empl_Type 		= &b.empl_type
  	Let $full_part_time	= &j2.full_part_time
  	Let #std_hours    	= &j2.std_hours
  	Let $name      		= &pd3.name
  	Let #current_min_pct  	= &b.gex_min_bonus_pct
  	Let #current_tar_pct   	= &b.gex_tar_bonus_pct
  	Let #current_max_pct   	= &b.gex_max_bonus_pct
  	Let #current_csi_adj_pct= &b.gex_csi_adj_pct
  	Let #current_bonus_amt  = &b.gex_bonus_amt
  	Let $termination_Dt   	= &j2.termination_dt
  	Let $Last_Hire_Dt	= &J2.LAST_HIRE_DT
    !1289792 - GEXHR_BONUS2017 Begins
  	!Let #current_mid_one    = (#current_min_pct + #current_tar_pct) / 2
  	!Let #current_mid_two    = (#current_tar_pct + #current_max_pct) / 2
    Let #current_mid_one     = (#current_tar_pct - #current_min_pct )
    Let #current_mid_two     = (#current_max_pct - #current_tar_pct )
    !1289792 - GEXHR_BONUS2017 Ends
 	  !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
    !1289792 - GEXHR_BONUS2017 Begins
    !Let #current_mid_three   = (#current_tar_pct - #current_min_pct)
    Let #current_mid_three   = #current_max_pct
    !1289792 - GEXHR_BONUS2017 Ends
    !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
  	#debug9 Show ' $emplid '  $emplid     
  	                  
  	
  	Let $EmployeeFound='Y'
  	If $EmployeeFound='Y' 
  	
  		Let $Skip = 'Y'

  		If $Run_Type = '3'
  			Let $Skip = 'N'
  		Else
  			If $Run_Type = '4'
  				If &b.gex_bonus_status = '3' or &b.gex_bonus_status = '2'
           				Let $Skip = 'N'
        			End-If
     			End-If
  		End-If
 
  
  		#debug7 Show '#Leave-Duration: ' #Leave-Duration
  
  
  		If $Skip = 'N'
  			Let $OK-To-Advance-Page = 'Y'
    			Let $Data-Found-Flag = 'Y'
    			Let #Year = #Previous_Year
    			Do Bonus-Table-Last-Year	!get last yr info
    
    			Let #annual_rt            = &bx.annual_rt
    			Let #hourly_rt            = 0
    			Let #weekly_rt            = &bx.annual_rt / 52
    			Let #previous_min_pct     = &bx.gex_min_bonus_pct
    			Let #previous_tar_pct     = &bx.gex_tar_bonus_pct
    			Let #previous_max_pct     = &bx.gex_max_bonus_pct
    			Let #previous_csi_adj_pct = &bx.gex_csi_adj_pct
    			Let #previous_bonus_amt   = &bx.gex_bonus_amt

          !1289792 - GEXHR_BONUS2017 Begins	
    			!Let #previous_mid_one     = (#previous_min_pct + #previous_tar_pct) / 2
    			!Let #previous_mid_two     = (#previous_tar_pct + #previous_max_pct) / 2
    	  	Let #previous_mid_one     = (#previous_tar_pct - #previous_min_pct )
  	    	Let #previous_mid_two     = (#previous_max_pct - #previous_tar_pct )
          !1289792 - GEXHR_BONUS2017 Ends

		      !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
          !1289792 - GEXHR_BONUS2017 Begins
          !Let #previous_mid_three   = (#previous_tar_pct - #previous_min_pct)
          Let #previous_mid_three   = #previous_max_pct
          !1289792 - GEXHR_BONUS2017 Ends
          !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
    			Let $salary_effdt = $Salary_Dt
    		
			   
      
    			Evaluate $Run_Type
      			When = '3'
        			Let $Update_Status = '3'
      			When = '4'
        			Let $Update_Status = '4'
    			End-Evaluate

    			Evaluate $Bonus_Pct_to_Use
      			When = '1'
        			Let #ee_pct = #current_min_pct
      			When = '2'
        			!1289792 - GEXHR_BONUS2017 Begins
        			!Let #ee_pct = #current_mid_one
        			Let #ee_pct = #current_min_pct + (#current_mid_one * #profit_pct)  
        			Show '#current_mid_one :' #current_mid_one
        			!1289792 - GEXHR_BONUS2017 Ends		
      			When = '3'
        			Let #ee_pct = #current_tar_pct
      			When = '4'
        			!1289792 - GEXHR_BONUS2017 Begins
        			!Let #ee_pct = #current_mid_two
        			Let #ee_pct = #current_tar_pct + (#current_mid_two * #profit_pct)  
        			!1289792 - GEXHR_BONUS2017 Ends	
      			When = '5'
        			Let #ee_pct = #current_max_pct
            !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins                         
            When = '6'
              Show '#profit_pct :' #profit_pct
              !1289792 - GEXHR_BONUS2017 Begins
              !Let #ee_pct = #current_min_pct + (#current_mid_three * #profit_pct)
              Let #ee_pct = #current_max_pct + (#current_mid_three * #profit_pct)
              !1289792 - GEXHR_BONUS2017 Ends   
              Show '#current_mid_three :' #current_mid_three
              Show '#ee_pct :' #ee_pct  
            !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends   
    			End-Evaluate

    			Let #ee_csi = #current_csi_adj_pct

  

    			If #Final_Bonus_Amount <= 0
    
    			End-If
   			#debug8 Show 'emplid ' $emplid ' b.deptid ' &b.deptid ' job_deptid ' $job_deptid 
    
    			If $Run_Type = '4'  !$Run_Type = '4'
      				If #Final_Bonus_Amount > 0		
      					Do Check-Existing-510		
      					If $Exists_510 ='N'		
       						Do P240-Insert-Addl-Pay-Erncd
      					End-If				
           
      					Do Check-Existing-510-Effdt
      					If $Exists_510_Effdt ='N'
         					Do P250-Insert-Addl-Pay-Effdt
      					End-If

      					
      					Do Check-Existing-510-Data
      					
      					If $Exists_510_Data ='N'
      					!Vendaxg Modified for S3#14562544 on 09/03/2010 - Begin
         					!If &b.deptid = $job_deptid
         					If &B.BUDGET_DEPTID = $job_deptid
					!Vendaxg Modified for S3#14562544 on 09/03/2010 - End         				
           	 					Let $deptid_ins = ' '  
         					Else
         				!Vendaxg Modified for S3#14562544 on 09/03/2010 - Begin
            						!Let $deptid_ins = &b.deptid
            						Let $deptid_ins = &b.BUDGET_DEPTID
					!Vendaxg Modified for S3#14562544 on 09/03/2010 - End            				
         					End-If
         					Let #addl_seq = 1
         					Do P260-Insert-Addl-Pay-Data
      					Else  
      					!Vendaxg Modified for S3#14562544 on 09/03/2010 - Begin	
         					!If &b.deptid = $job_deptid
         					If &b.BUDGET_DEPTID = $job_deptid
					!Vendaxg Modified for S3#14562544 on 09/03/2010 - End         				
            						Let $deptid_ins = ' '  
         					Else
         				!Vendaxg Modified for S3#14562544 on 09/03/2010 - Begin
            						!Let $deptid_ins = &b.deptid
            						Let $deptid_ins = &b.BUDGET_DEPTID
					!Vendaxg Modified for S3#14562544 on 09/03/2010 - End            				
         					End-if
         					Let #addl_seq = &z.addl_seq + 1
         					Do P260-Insert-Addl-Pay-Data
      					End-If
      				End-if				
    			End-if  !$Run_Type = '4'

    			Add 1                   To #type-count
    			Add 1                   To #deptid-count
		
    			Add #previous_bonus_amt To #type_previous_bonus
    			Add #current_bonus_amt  To #type_current_bonus
	
    			Add #previous_bonus_amt To #deptid_previous_bonus
    			Add #current_bonus_amt  To #deptid_current_bonus
		
    				Add #previous_bonus_amt To #report_previous_bonus
    			Add #current_bonus_amt  To #report_current_bonus
	
    			!Do P290-Print-Record
    			Do write-file
    			Do P240-Update-Bonus-Table
    
  		End-If
  	End-If

From   ps_gex_empl_bonus   b,
       ps_personal_data    pd3,
       ps_employment       e2,
       ps_job              j2
       
Where  pd3.emplid           = b.emplid
And    e2.emplid            = b.emplid
And    e2.empl_rcd         = b.empl_rcd

And    b.gex_bonus_year = #current_year
and    b.emplid             = j2.emplid
and    b.empl_rcd          = j2.empl_rcd
AND B.GEX_BONUS_IND ='B'
And j2.effdt  = (Select Max(effdt) from ps_job
       		  Where j2.emplid    = emplid
       		   And  j2.empl_rcd = empl_rcd
       		   And  effdt     <= $AsOfdate)
And j2.effseq = (Select Max(effseq) From ps_job
                  Where j2.emplid    = emplid
                  And   j2.empl_rcd = empl_rcd
                  And   j2.effdt     = effdt)

Order By j2.jobcode,pd3.name, j2.company, b.deptid, b.empl_type

End-Select

End-Procedure

!***********************************************************************
Begin-Procedure Select-kicker
!***********************************************************************
Let #puv	= 0
Let #profit	= 0
Let #css1	= 0
Let #css2	= 0
#debug9 show '$max_duration_deptid' $max_duration_deptid
#debug9 show '$max_dept_jobcode' $max_dept_jobcode

Begin-Select
kr.gex_puv
kr.gex_Profit
kr.gex_css1
kr.gex_css2

  Let #puv	= &kr.gex_puv
  Let #profit	= &kr.gex_profit
  Let #css1	= &kr.gex_css1
  Let #css2	= &kr.gex_css2
  
from ps_gex_kicker_tbl kr
where 	kr.deptid	= $Dept
and 	kr.jobcode	= $JOBCD
!**********    ISDVMZA -- 08/13/2012   Begin   *************!
and kr.effdt = (SELECT MAX(EFFDT)
                  FROM PS_GEX_KICKER_TBL KR1
                 WHERE KR1.DEPTID = KR.DEPTID
                   AND KR1.JOBCODE = KR.JOBCODE
                   AND KR1.EFFDT <= SYSDATE)

End-Select
!***********************************************************************
End-Procedure Select-kicker
!***********************************************************************

!***********************************************************************
Begin-Procedure get-Jobcode 
!***********************************************************************


Begin-Select distinct
jobcd.JOBCODE 


  Find &jobcd.JOBCODE  in  $INCLUDE_JOBCODE_CRITERIA  0  #Jobcode_Loc
  	     IF #Jobcode_Loc <> -1
                Let $Jobcodefound='Y'
                Let $jobcode  =&jobcd.JOBCODE 
                
              end-if
  
  
From   ps_job jobcd

Where  jobcd.emplid            = $emplid
And    jobcd.empl_rcd         = #empl_rcd_nbr
And    jobcd.effdt between  $FromDate AND  $ThruDate

End-Select
!***********************************************************************
End-Procedure get-Jobcode 
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-All-Jobcode
!***********************************************************************

Let #Row_Count =1 
Let #Curr = 1
Let $Pre_Jobcode = ''
Let $Proration_Done = 'N'
Clear-array  Name=Jobcode
Begin-Select
AL.Jobcode
AL.Effdt
AL.Deptid
AL.Position_Nbr !Vendaxg Added for Bonus Processing 2011
AL.Grade !Vendaxg Added for Bonus Processing 2011
AL.Action	!GEXPY_848_E95094_02 2012-06-06 VENDAXG
AL.Action_reason	!GEXPY_848_E95094_02 2012-06-06 VENDAXG
AL.Annual_Rt	!GEXPY_848_E95094_02 2012-06-06 VENDAXG

	Let $All_Jobcode = Ltrim(Rtrim(&AL.Jobcode,' '),' ')
	Let $All_Deptid = Ltrim(Rtrim(&AL.Deptid,' '),' ')
	Let $All_Effdt = &AL.Effdt
	Let $All_Position_Nbr = &AL.Position_Nbr !Vendaxg Added for Bonus Processing 2011
	Let $All_Grade   = &AL.Grade !Vendaxg Added for Bonus Processing 2011
	Let $End_Date = $ThruDate
	Let $Start_Date = $FromDate
	
	!GEXPY_848_E95094_02 2012-06-04 VENDAXG - Begin
	Let #All_Annual_Rt = &AL.Annual_rt
	Let $All_Action = &AL.Action
	Let $All_Action_Reason = &AL.Action_Reason
	
	
	If ($All_Action = 'PRO' and $All_Action_Reason = 'NCP') 
		Let $Promotion_Found = 'Y'
		Let #Promoted_Salary = #All_Annual_Rt
	Else
		Let $Promotion_Found = 'N'
	End-if
	!GEXPY_848_E95094_02 2012-06-04 VENDAXG - End
	
	If $Pre_Jobcode = '' 
	   Let #Duration = datediff($End_Date,$All_Effdt,'DAY')
	   #debug8 Show 'First Duration : '#Duration 'Job Code : '$All_Jobcode
	   !Vendaxg Added for Bonus Processing 2011 - Begin
	   !Put $All_Jobcode #Duration $All_Deptid Into Jobcode(#Curr)
	   !GEXPY_848_E95094_02 2012-06-04 VENDAXG - Begin
	   !Put $All_Jobcode $All_Position_Nbr $All_Grade #Duration $All_Deptid Into Jobcode(#Curr)
	   Let $Prevd_Deptid = $All_Deptid
	   Do Get-Dept-Bonus-group
	   Let $Gex_Valid_Dept_Bonus_Group = Ltrim(Rtrim($Gex_Valid_Dept_Bonus_Group,' '),' ')
	   If $Gex_Valid_Dept_Bonus_Group <> ''
	   	Put $All_Jobcode $All_Position_Nbr $All_Grade #Duration $All_Deptid #All_Annual_Rt $Promotion_Found Into Jobcode(#Curr)
	   	Let #Curr = #Curr + 1
	   	Let #Row_Count = #Row_Count + 1
	   End-if
	   !GEXPY_848_E95094_02 2012-06-04 VENDAXG - End
	   !Vendaxg Added for Bonus Processing 2011 - End
	   Let $Old_Effdt = $All_Effdt
	   Let $Pre_Jobcode = $All_Jobcode
	   !Let #Curr = #Curr + 1
	Else
	  
	   Let #Duration = datediff($Old_Effdt,$All_Effdt,'DAY')
	   
	   !Vendaxg Added for Bonus Processing 2011 - Begin
	   !Put $All_Jobcode #Duration $All_Deptid Into Jobcode(#Curr)
	   !GEXPY_848_E95094_02 2012-06-04 VENDAXG - Begin
	   !Put $All_Jobcode $All_Position_Nbr $All_Grade #Duration $All_Deptid  Into Jobcode(#Curr)
	   Let $Prevd_Deptid = $All_Deptid
	   Do Get-Dept-Bonus-group
	   Let $Gex_Valid_Dept_Bonus_Group = Ltrim(Rtrim($Gex_Valid_Dept_Bonus_Group,' '),' ')
	   If $Gex_Valid_Dept_Bonus_Group <> ''
	   	Put $All_Jobcode $All_Position_Nbr $All_Grade #Duration $All_Deptid #All_Annual_Rt $Promotion_Found Into Jobcode(#Curr)
	   	Let #Curr = #Curr + 1
	   	Let #Row_Count = #Row_Count + 1
	   End-if
	   
	   !GEXPY_848_E95094_02 2012-06-04 VENDAXG - End
	   !Vendaxg Added for Bonus Processing 2011 - End
	   
	   Let $Old_Effdt = $All_Effdt
	   Let $Pre_Jobcode = $All_Jobcode
	   !Let #Curr = #Curr + 1
	   #debug8 Show 'Duration : '#Duration 'Job Code : '$All_Jobcode
	  
	End-If
	!Let #Row_Count = #Row_Count + 1
	
From PS_JOB AL
Where AL.emplid = $emplid
And AL.empl_rcd = #empl_rcd_nbr
And AL.effdt between $FromDate and $ThruDate
order by AL.EFFDT desc
End-Select
If #Row_Count =1 
 Do Get-Prev-JobCode
 Let #Duration = #DurfromRctl
 !Vendaxg Added for Bonus Processing 2011 - Begin
 !Put $Prev_Jobcode #Duration $prev_DEPTID Into Jobcode(#Curr)
 !GEXPY_848_E95094_02 2012-06-04 VENDAXG - Begin
 !Put $Prev_Jobcode $prev_Position_Nbr $prev_Grade #Duration $prev_DEPTID Into Jobcode(#Curr)
 Let $Prevd_Deptid = $prev_DEPTID
 Do Get-Dept-Bonus-group
 Let $Gex_Valid_Dept_Bonus_Group = Ltrim(Rtrim($Gex_Valid_Dept_Bonus_Group,' '),' ')
 If $Gex_Valid_Dept_Bonus_Group <> ''
 	Put $Prev_Jobcode $prev_Position_Nbr $prev_Grade #Duration $prev_DEPTID #Annual_Rt_prev $Promotion_Found Into Jobcode(#Curr)
 	Let #Row_Count = #Row_Count + 1
 End-if
 !GEXPY_848_E95094_02 2012-06-04 VENDAXG - End
 !Vendaxg Added for Bonus Processing 2011 - End
 !Let #Row_Count = #Row_Count + 1
 Let $Proration_Done = 'N'
Else
 Do Get-Prev-JobCode
 IF $Prev_Jobcode<>''
 Let #Duration = datediff($All_Effdt,$Start_Date,'DAY')
 !Vendaxg Added for Bonus Processing 2011 - Begin
 !Put $Prev_Jobcode #Duration $prev_DEPTID Into Jobcode(#Curr)
 !GEXPY_848_E95094_02 2012-06-04 VENDAXG - Begin
 !Put $Prev_Jobcode $prev_Position_Nbr $prev_Grade #Duration $prev_DEPTID Into Jobcode(#Curr)
 Let $Prevd_Deptid = $prev_DEPTID
 Do Get-Dept-Bonus-group
 Let $Gex_Valid_Dept_Bonus_Group = Ltrim(Rtrim($Gex_Valid_Dept_Bonus_Group,' '),' ')
 If $Gex_Valid_Dept_Bonus_Group <> ''
 	Put $Prev_Jobcode $prev_Position_Nbr $prev_Grade #Duration $prev_DEPTID #Annual_Rt_prev $Promotion_Found Into Jobcode(#Curr)
 End-if
 !GEXPY_848_E95094_02 2012-06-04 VENDAXG - End
 !Vendaxg Added for Bonus Processing 2011 - End
 END-IF
 #debug8 Show 'Duration : '#Duration 'Prev Job Code : '$Prev_Jobcode
 Let $Proration_Done = 'Y'
 
End-If

If $Proration_Done = 'Y'
   Do Check-If-Proration-Done
End-if
!GEXPY_848_E95094_02 2012-06-04 VENDAXG - Begin
#debug8 Show '*************************** All Jobcode Start***********************'
Let #Counter_Jobcodes_Count = 0
While #Counter_Jobcodes_Count < #Row_Count
	Let #Counter_Jobcodes_Count = #Counter_Jobcodes_Count + 1
	!GEXPY_848_E95094_02 2012-06-06 VENDAXG - Start
	!Get $Find_Jobcode_Testing $Find_Position_Testing $Find_Grade #Duration from Jobcode(#Counter_Jobcodes_Count)
	Get $Find_Jobcode_Testing $Find_Position_Testing $Find_Grade #Duration $Find_Deptid #Find_Annual_Rt $Find_Promotion_Found  from Jobcode(#Counter_Jobcodes_Count)
	!GEXPY_848_E95094_02 2012-06-06 VENDAXG - End
	#debug8 Show 'Distinct Jobcode : '$Find_Jobcode_Testing ' $Find_Grade :'$Find_Grade ' Department: '$Find_Deptid '  Duration : '#Duration ' Find_Annual_Rt: '#Find_Annual_Rt ' Find_Promotion_Found :' $Find_Promotion_Found 
End-while
#debug8 Show '*************************** All Jobcode End***********************'
!GEXPY_848_E95094_02 2012-06-04 VENDAXG - End
!Do Sum-Distinct-Jobcodes	!GEXPY_848_E95094_02 2012-06-04 VENDAXG
!***********************************************************************
End-Procedure Get-All-Jobcode
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-If-Proration-Done
!***********************************************************************

Let  #Counter =0
Let $Prev_All_Jobcode = ''
Let #Jobcode_Count = 0
Let #Sum_JobCode_Duration = 0

While #Counter < #Row_Count
   Let #Counter=#Counter+1
   !Vendaxg Modified for Bonus Processing 2011 on 05/27/2011 - Begin
   !Get $All_Jobcode #Duration from JobCode(#Counter)
   !GEXPY_848_E95094_02 2012-06-04 VENDAXG - Begin
   !Get $All_Jobcode $All_Position_Nbr $All_Grade #Duration from JobCode(#Counter)
   Get $All_Jobcode $All_Position_Nbr $All_Grade #Duration $All_DeptID #All_Annual_Rt $Promotion_found from JobCode(#Counter)
   !GEXPY_848_E95094_02 2012-06-04 VENDAXG - End
   !Vendaxg Modified for Bonus Processing 2011 on 05/27/2011 - End
   
   If $Prev_All_Jobcode = ''
      Let $Prev_All_Jobcode = $All_Jobcode
      Let #Jobcode_Count = 1
      Let #Sum_JobCode_Duration = #Duration
   Else 
      If $Prev_All_Jobcode <> $All_Jobcode
         Let #Jobcode_Count =  #Jobcode_Count + 1
         Let $Prev_All_Jobcode = $All_Jobcode
      Else 
      	Let #Sum_JobCode_Duration = #Sum_JobCode_Duration + #Duration
      	Let $Prev_All_Jobcode = $All_Jobcode
      End-if
   End-If
  
End-While

If #Jobcode_Count = 1  
	If #Sum_JobCode_Duration > 360
		Let  $Proration_Done = 'N'
        Else
        	Let  $Proration_Done = 'Y'
	End-If		
Else
	Let  $Proration_Done = 'Y'
End-if


!***********************************************************************
End-Procedure Check-If-Proration-Done
!***********************************************************************

!***********************************************************************
Begin-Procedure  Get-Prev-JobCode
!***********************************************************************
Let $Prev_Jobcode = ''
Let $Promotion_Found = 'N' !GEXPY_848_E95094_02 2012-06-04 VENDAXG
Begin-Select
PREV.JOBCODE
PREV.ANNUAL_RT
PREV.HOURLY_RT
PREV.STD_HOURS
PREV.DEPTID
PREV.POSITION_NBR !VENDAXG Added for Bonus Processing 2011
PREV.GRADE !VENDAXG Added for Bonus Processing 2011
        
        Let $prev_DEPTID= &PREV.DEPTID 
	Let $prev_jobcode = &PREV.JOBCODE
	Let $prev_Grade = &PREV.GRADE
	Let #Annual_Rt_prev = &PREV.ANNUAL_RT
	Let #Hourly_Rt_prev = &PREV.HOURLY_RT
	Let $prev_Position_Nbr = &PREV.POSITION_NBR !VENDAXG Added for Bonus Processing 2011
	
	#debug8 Show 'Prev JobCode in Loop :'$prev_jobcode
	
FROM PS_JOB PREV
Where PREV.emplid = $emplid
And PREV.empl_rcd = #empl_rcd_nbr
AND PREV.EFFDT = (Select Max(PREV1.effdt)
                       From   ps_job  PREV1
                       Where   PREV.emplid       = PREV1.emplid
       And     PREV.empl_rcd    =  PREV1.empl_rcd
       And     PREV1.effdt       <= $FromDate )
AND  PREV.EFFSEQ =   (Select Max(PREV2.EFFSEQ)
                     From   ps_job  PREV2
       Where   PREV.emplid       = PREV2.emplid
       And     PREV.empl_rcd    =  PREV2.empl_rcd
       And     PREV2.effdt       = PREV.effdt )    

ORDER BY PREV.EFFDT DESC


End-Select
!***********************************************************************
End-Procedure Get-Prev-JobCode
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-Qualifying-Jobcode
!***********************************************************************
Let $JOBCD = $prev_jobcode


If $PCTFOUND= 'Y'
	Let #Annual_Rt = #Annual_Rt_prev
	Let #weekly_rt = #Hourly_Rt_prev * &PREV.STD_HOURS
End-if
!***********************************************************************
End-Procedure Check-Qualifying-Jobcode
!***********************************************************************


!***********************************************************************
Begin-Procedure JobCodeDescr
!***********************************************************************
Let $MaxJobcodedescr=''

Begin-Select Distinct 
JC.descr
 Let $MaxJobcodedescr = &JC.descr
 
from ps_jobcode_tbl          JC
      where JC.jobcode = $max_dept_jobcode
      and JC.effdt             =
      (Select Max(effdt)
       From   ps_jobcode_tbl  jb2  
       Where  jb2.jobcode       = JC.jobcode
       And    jb2.effdt       <= $AsOfDate)
       
End-Select
!***********************************************************************
End-Procedure
!***********************************************************************

!***********************************************************************
Begin-Procedure Calculate_Max_Duration_Deptid			      !
!***********************************************************************
Do Get-All-DeptID
Do Get-Max-Duration-Deptid
Let $MAX_DEPT = $Max_Duration_Deptid

!***********************************************************************
End-Procedure Calculate_Max_Duration_Deptid
!***********************************************************************

!***********************************************************************
Begin-Procedure CALCULATE_MAX_DURATION_JOBCODE			      !*
!***********************************************************************
Do Get-All-Jobcode
Do Get-Max-Duration-Jobcode
Do JobCodeDescr
!***********************************************************************
End-Procedure CALCULATE_MAX_DURATION_JOBCODE
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-All-DeptID
!***********************************************************************
Let #Row_Count_DeptID =1 
Let #Curr_DeptID = 1
Let $Pre_DeptID = ''

Clear-array  Name=Jobcode
Begin-Select
ALD.Jobcode
ALD.Effdt
ALD.Deptid
ALD.EFFSEQ


	Let $All_Jobcode = Ltrim(Rtrim(&ALD.Jobcode,' '),' ')
	Let $All_Deptid = Ltrim(Rtrim(&ALD.Deptid,' '),' ')
	Let $All_Effdt_Deptid = &ALD.Effdt
	Let $End_Date_Deptid = $ThruDate
	Let $Start_Date_Deptid = $FromDate
	Let #All_Effseq = &ALD.EFFSEQ
	If $Pre_DeptID = '' 
	   Let #Duration_Deptid = datediff($End_Date_Deptid,$All_Effdt_Deptid,'DAY')
	   
	   Put $All_Deptid #Duration_Deptid $All_Effdt_Deptid #All_Effseq Into Deptid(#Curr_DeptID)
	   Let $Old_Effdt_Deptid = $All_Effdt_Deptid
	   Let $Pre_Deptid = $All_Deptid
	   Let #Curr_DeptID = #Curr_DeptID + 1
	Else
	  
	   Let #Duration_Deptid = datediff($Old_Effdt_Deptid,$All_Effdt_Deptid,'DAY')
	   Put $All_Deptid #Duration_Deptid $All_Effdt_Deptid #All_Effseq Into Deptid(#Curr_DeptID)
	   Let $Old_Effdt_Deptid = $All_Effdt_Deptid
	   Let $Pre_Deptid = $All_Deptid
	   Let #Curr_DeptID = #Curr_DeptID + 1
	  
	End-If
	Let #Row_Count_Deptid = #Row_Count_Deptid + 1
	
From PS_JOB ALD
Where ALD.emplid = $emplid
And ALD.empl_rcd = #empl_rcd_nbr
And ALD.effdt between $FromDate and $ThruDate
order by ALD.EFFDT desc
End-Select
If #Row_Count_Deptid =1 
 Do Get-Prev-Deptid
 Let #Duration_Deptid = #DurfromRctl
 Put $prevd_Deptid #Duration_Deptid $Prevd_Deptid_Effdt #Prevd_Deptid_Effseq Into Deptid(#Curr_DeptID)
 Let #Row_Count_Deptid = #Row_Count_Deptid + 1
 
Else
 Do Get-Prev-Deptid
 Let #Duration_Deptid = datediff($All_Effdt_Deptid,$Start_Date_Deptid,'DAY')
 	If $prevd_Deptid <> ''
 		Put $prevd_Deptid #Duration_Deptid $Prevd_Deptid_Effdt #Prevd_Deptid_Effseq Into Deptid(#Curr_DeptID)
 		Let #Row_Count_Deptid = #Row_Count_Deptid + 1
 
	End-If
 
End-If

!***********************************************************************
End-Procedure Get-All-Deptid
!***********************************************************************

!***********************************************************************
Begin-Procedure  Get-Prev-Deptid
!***********************************************************************

Let $prevd_Deptid = ''
Begin-Select
PREVD.DEPTID
PREVD.ANNUAL_RT
PREVD.HOURLY_RT
PREVD.STD_HOURS
PREVD.EFFDT
PREVD.EFFSEQ

	Let $prevd_Deptid = &PREVD.DEPTID
	Let $Prevd_Deptid_Effdt = &PREVD.EFFDT
	Let #Prevd_Deptid_Effseq = &PREVD.EFFSEQ

FROM PS_JOB PREVD
Where PREVD.emplid = $emplid
And PREVD.empl_rcd = #empl_rcd_nbr
AND PREVD.EFFDT = (Select Max(PREVD1.effdt)
                       From   ps_job  PREVD1
                       Where   PREVD.emplid       = PREVD1.emplid
       And     PREVD.empl_rcd    =  PREVD1.empl_rcd
       And     PREVD1.effdt       <= $FromDate )
AND  PREVD.EFFSEQ =   (Select Max(PREVD2.EFFSEQ)
                     From   ps_job  PREVD2
       Where   PREVD.emplid       = PREVD2.emplid
       And     PREVD.empl_rcd    =  PREVD2.empl_rcd
       And     PREVD.effdt       = PREVD2.effdt )    

ORDER BY PREVD.EFFDT DESC


End-Select
!***********************************************************************
End-Procedure Get-Prev-Deptid
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Max-Duration-Deptid
!***********************************************************************
Let #Deptid_Tra = 1
Let #compute_max_duration = 0
Let $Max_Duration_Deptid = ''
Let $prev_deptid_proc = ''
While #Deptid_Tra < #Row_Count_Deptid
   Get $prevd_Deptid #Duration_Deptid $Stored_Deptid_Effdt #Store_Dept_Effseq From Deptid(#Deptid_Tra)
   #debug8 Show '$prevd_Deptid :'$prevd_Deptid ' #Duration_Deptid : '#Duration_Deptid
   Let #Deptid_Tra = #Deptid_Tra + 1
   Let #Deptid_Tra1 = 1
   Do Check-Valid-Jobcode-In-Dept
   If $Eligible_Dept_Jobcode = 'YY'
   	If $prev_deptid_proc <> $prevd_Deptid
   		Let #Deptid_Duration_Days = 0
   		While #Deptid_Tra1 < #Row_Count_Deptid
   		
   			Get $prevd_Deptid1 #Duration_Deptid1 From Deptid(#Deptid_Tra1)
   
   				If $prevd_Deptid1 = $prevd_Deptid	
   					Let #Deptid_Duration_Days = #Deptid_Duration_Days + #Duration_Deptid1
   
   				End-IF
   				
   			Let #Deptid_Tra1 = #Deptid_Tra1 + 1
   		End-While
                #debug8 Show '$prevd_Deptid1 :'$prevd_Deptid1 ' #Deptid_Duration_Days : '#Deptid_Duration_Days
		if #compute_max_duration < #Deptid_Duration_Days
			Let #compute_max_duration = #Deptid_Duration_Days
			Let $Max_Duration_Deptid = $prevd_Deptid
			#debug8 Show '$Max_Duration_Deptid :'$Max_Duration_Deptid ' #compute_max_duration : '#compute_max_duration
		End-if
		Let $prev_deptid_proc = $prevd_Deptid
   	End-if
   End-if
   	
End-While

!***********************************************************************
End-Procedure Get-Max-Duration-Deptid
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Max-Duration-Jobcode
!***********************************************************************
Let #Jobcode_Tra = 1
Let #compute_max_duration_jc = 0
Let $prev_jobcode_proc = ''
While #Jobcode_Tra < #Row_Count+1
  !Vendaxg Modified for Bonus Processing 2011 on 05/27/2011 - Begin
  !Get $Prev_Jobcode #Duration_Jobcd from Jobcode(#Jobcode_Tra)
  Get $Prev_Jobcode $Prev_Position_Nbr $Prev_Grade #Duration_Jobcd from Jobcode(#Jobcode_Tra)
   !Vendaxg Modified for Bonus Processing 2011 on 05/27/2011 - End
   
   Let #Jobcode_Tra = #Jobcode_Tra + 1
   Let #Jobcode_Tra1 = 1
   if $Jobcode_Tra_proc <> $Prev_Jobcode
   Let #Jobcode_Duration_Days = 0
   While #Jobcode_Tra1 < #Row_Count+1
   	!Vendaxg Modified for Bonus Processing 2011 on 05/27/2011 - Begin
   	!Get $Prev_Jobcode1 #Duration_Jobcd1 From Jobcode(#Jobcode_Tra1)
   	Get $Prev_Jobcode1 $Prev_Position_Nbr1 $Prev_Grade1 #Duration_Jobcd1 From Jobcode(#Jobcode_Tra1)
        !Vendaxg Modified for Bonus Processing 2011 on 05/27/2011 - Begin
   		If $Prev_Jobcode1 = $Prev_Jobcode	
   			Let #Jobcode_Duration_Days = #Jobcode_Duration_Days + #Duration_Jobcd1
   
   		End-IF
   		
   	Let #Jobcode_Tra1 = #Jobcode_Tra1 + 1
   End-While
   
if #compute_max_duration_jc < #Jobcode_Duration_Days
	Let #compute_max_duration_jc = #Jobcode_Duration_Days
	Let $max_dept_jobcode= $Prev_Jobcode
	
End-if
Let $Jobcode_Tra_proc = $Prev_Jobcode
end-if
End-While

!***********************************************************************
End-Procedure Get-Max-Duration-Jobcode
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-Valid-Jobcode-In-Dept
!***********************************************************************
Let $Eligible_Dept_Jobcode = 'N'
Do Get-Dept-Bonus-group

Begin-Select 
JB.EMPLID

	Let $Eligible_Dept_Jobcode = 'YY'

	#debug8 Show 'Valid Jobcode for  - Emplid : '$Emplid ' Empl Rcd : '#Empl_Rcd_Nbr ' DEptid : '$Prevd_Deptid ' Bonus Group : '$Gex_valid_Dept_bonus_Group ' Deptid Effdt : '$Stored_Deptid_Effdt 
	
FROM PS_JOB JB
WHERE JB.EMPLID = $Emplid
AND JB.EMPL_RCD = #Empl_Rcd_Nbr
AND JB.DEPTID   = $Prevd_Deptid
AND JB.EFFDT 	= $Stored_Deptid_Effdt
AND JB.EFFSEQ 	= #Store_Dept_Effseq
AND JB.JOBCODE IN (SELECT DISTINCT GJB.JOBCODE FROM PS_GEX_JOBCODE_TBL GJB WHERE 
		   GJB.EFFDT = (SELECT MAX(GJB1.EFFDT) FROM PS_GEX_JOBCODE_TBL GJB1 
		   		WHERE GJB1.SETID = GJB.SETID
		   		AND GJB.GEX_BONUS_GROUP = GJB1.GEX_BONUS_GROUP
		   		AND GJB.JOBCODE = GJB1.JOBCODE
		   		AND GJB1.EFFDT<=SYSDATE)
		   AND GJB.STATUS='A'	!ISDVVXK  GEXHR_848_E161362_BONUS2014	
		   AND GJB.GEX_BONUS_GROUP = $Gex_valid_Dept_bonus_Group)
End-Select
!***********************************************************************
End-Procedure Check-Valid-Jobcode-In-Dept
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Dept-Bonus-group
!***********************************************************************

Let $Gex_valid_Dept_bonus_Group = ''
Let $Bonus_Group_Found = 'N'
Begin-Select
GDPTBL.GEX_RX_BON_GROUP

	Let $Gex_valid_Dept_bonus_Group = Ltrim(Rtrim(&GDPTBL.GEX_RX_BON_GROUP,' '),' ')
	#debug8 Show 'Bonus Group Found for Deptid: ' $Prevd_Deptid ' Bonus Group : '$Gex_valid_Dept_bonus_Group
	Let $Bonus_Group_Found = 'Y'
	
FROM PS_GEX_DEPT_TBL GDPTBL 
WHERE GDPTBL.EFFDT = (SELECT MAX(GDPTBL1.EFFDT) FROM PS_GEX_DEPT_TBL GDPTBL1 
			WHERE GDPTBL.SETID = GDPTBL1.SETID
			AND GDPTBL1.DEPTID = GDPTBL.DEPTID
			AND GDPTBL1.EFFDT<=SYSDATE)
AND GDPTBL.SETID = 'COMMN'			
AND GDPTBL.DEPTID = $Prevd_Deptid
			
End-Select
If $Bonus_Group_Found = 'N'
	#debug8 Show 'Bonus Group NOT Found for Deptid: ' $Prevd_Deptid ' Bonus Group : '$Gex_valid_Dept_bonus_Group
End-if
!***********************************************************************
End-Procedure Get-Dept-Bonus-group
!***********************************************************************

!***********************************************************************
Begin-Procedure GET-HIREDT
!***********************************************************************
Begin-Select

INST.ORG_INST_SRV_DT

  Let $Hire_Dt_Print   = &INST.ORG_INST_SRV_DT	
  

 from PS_PER_ORG_INST INST where INST.EMPLID=$emplid and INST.ORG_INSTANCE_ERN=#empl_rcd_nbr

End-Select
!***********************************************************************
End-Procedure
!***********************************************************************


!***********************************************************************
Begin-Procedure select-Last-Year-data
!***********************************************************************
Begin-Select
job3.deptid
job3.jobcode
   Let $max_duration_deptid = &job3.deptid
   Let $max_dept_jobcode = &job3.jobcode
   Do JobCodeDescr 
from ps_job job3
Where job3.emplid=$Emplid
And job3.empl_rcd=#empl_rcd_nbr
And job3.effdt=(select max(job31.effdt) from ps_job job31
		Where job31.emplid=job3.emplid
		And job31.empl_rcd=job3.empl_rcd
		And job31.effdt<=$asofdate)
And    job3.effseq            =
      (Select Max(job32.effseq)
       From   ps_job  job32
       Where  job32.emplid       = job3.emplid
       And    job32.empl_rcd    = job3.empl_rcd
       And    job32.effdt        = job3.effdt)		

End-Select
!***********************************************************************
End-Procedure select-Last-Year-data
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-Leave-Duration
!***********************************************************************
Let $Prior-Effdt=''
Let $Prior-status=''
Let $leave_found='N'
Let $First_Row ='N'
Let #Leave-Duration1 = 0
Let #Leave-Duration = 0
Let #Total_Leave_H = 0 ! GEXPY_848_E95094_02 2012-06-06 1221434
Let #Total_Leave_S = 0 ! GEXPY_848_E95094_02 2012-06-06 1221434
Let #Total_Leave_SH = 0 ! GEXPY_848_E95094_02 2012-06-06 1221434
Let $curr_empl_status=''
Let $curr_effdt=''
Let $PREV_empl_status=''
Let $Empl_Type_lv = '' ! GEXPY_848_E95094_02 2012-06-06 1221434

Begin-Select
leave.effdt		
leave.empl_status	
leave.empl_type ! GEXPY_848_E95094_02 2012-06-06 1221434

  Let $curr_effdt = &leave.effdt
  Let $curr_empl_status=&leave.empl_status
  Let $leave_found='Y'
  Let $Empl_Type_lv = &leave.empl_type  ! GEXPY_848_E95094_02 2012-06-06 1221434
  
  If $Prior-Effdt<>''
    Let $First_Row ='N'   
     IF ($curr_empl_status = 'L' or $curr_empl_status='P') 
        Let $leave_found='Y'
       
        Let #Leave-Duration1=DateDiff($Prior-Effdt,$curr_effdt,'month')
        Let #Leave-Duration = #Leave-Duration+#Leave-Duration1
        ! GEXPY_848_E95094_02 2012-06-06 1221434 begin	
        Let #Total_Leave_SH =DateDiff($Prior-Effdt,$curr_effdt,'DAY') 
	 if $Empl_Type_lv = 'S' ! Added by sitansh
		Let #Total_Leave_S = #Total_Leave_S + #Total_Leave_SH	
	 else
		if $Empl_Type_lv = 'H' 
			Let #Total_Leave_H = #Total_Leave_H + #Total_Leave_SH			
		End-if
	 End-if
	 ! GEXPY_848_E95094_02 2012-06-06 1221434 end		
        
     End-if   
   Else  
     Let $First_Row ='Y'
  End-IF 
 

   If  $First_Row ='Y' And ($curr_empl_status = 'L' or $curr_empl_status='P')
      
      Let  #Leave-Duration1 = dateDiff($Fiscal_End_Dt,$curr_effdt,'month')
      Let #Leave-Duration = #Leave-Duration+#Leave-Duration1  
	 ! GEXPY_848_E95094_02 2012-06-06 1221434 begin		
        !Let #Total_Leave_SH =DateDiff($Prior-Effdt,$curr_effdt,'DAY') 		
	 Let #Total_Leave_SH =DateDiff($Fiscal_End_Dt,$curr_effdt,'DAY') 		
	 if $Empl_Type_lv = 'S' ! Added by sitansh
		Let #Total_Leave_S = #Total_Leave_S + #Total_Leave_SH	
	 else
		if $Empl_Type_lv = 'H' 
			Let #Total_Leave_H = #Total_Leave_H + #Total_Leave_SH		
		End-if
	 End-if
	 ! GEXPY_848_E95094_02 2012-06-06 1221434 end	      
   End-If    

    
   
  Let $Prior-Effdt=&leave.effdt
  Let $Prior-status=&leave.empl_status

From ps_job leave   
Where leave.emplid = $emplid
And leave.empl_rcd = #empl_rcd_nbr
And leave.effdt between $FromDate and $ThruDate
 
End-Select


   do Get-leave-Validate
  If $leave_found='N'
  if  ($PREV_empl_status ='L') or ($PREV_empl_status ='P')
   Let $Skip = 'Y'
  End-if
  else
   if  ($PREV_empl_status ='L') or ($PREV_empl_status ='P')
     Let  #Leave-Duration1 = DateDiff($Prior-Effdt,$Fiscal_Start_Dt,'month') 
     Let #Leave-Duration=#Leave-Duration+#Leave-Duration1 
	 ! !GEXPY_848_E95094_02 2012-06-06 1221434 begin	
        !Let #Total_Leave_SH =DateDiff($Prior-Effdt,$curr_effdt,'DAY') 		
	 Let #Total_Leave_SH =DateDiff($Prior-Effdt,$Fiscal_Start_Dt,'DAY') 		
	 if $prev_Empl_Type_lv = 'S' ! Added by sitansh
	 	Let #Total_Leave_S = #Total_Leave_S + #Total_Leave_SH	
	 else
		if $prev_Empl_Type_lv = 'H' 
			Let #Total_Leave_H = #Total_Leave_H + #Total_Leave_SH		
		End-if
	 End-if
	 ! !GEXPY_848_E95094_02 2012-06-06 1221434 end	     
  End-if
  End-if 
!***********************************************************************
End-Procedure Check-Leave-Duration
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-leave-Validate
!***********************************************************************
Let $prev_Empl_Type_lv  = ''
Begin-Select
LEAVEPREV.effdt		
LEAVEPREV.empl_status
LEAVEPREV.empl_type ! GEXPY_848_E95094_02 2012-06-06 1221434

   Let $PREV_empl_status = &LEAVEPREV.empl_status
   Let $prev_Empl_Type_lv  = &LEAVEPREV.empl_type ! GEXPY_848_E95094_02 2012-06-06 1221434

FROM PS_JOB LEAVEPREV
Where LEAVEPREV.emplid = $emplid
And LEAVEPREV.empl_rcd = #empl_rcd_nbr
AND LEAVEPREV.EFFDT = (Select Max(LEAVEPREV1.effdt)
                       From   ps_job  LEAVEPREV1
                       Where   LEAVEPREV.emplid       = LEAVEPREV1.emplid
       And     LEAVEPREV.empl_rcd    =  LEAVEPREV1.empl_rcd
       And     LEAVEPREV1.effdt       <= $FromDate )
AND  LEAVEPREV.EFFSEQ =   (Select Max(LEAVEPREV2.EFFSEQ)
                     From   ps_job  LEAVEPREV2
       Where   LEAVEPREV.emplid       = LEAVEPREV2.emplid
       And     LEAVEPREV.empl_rcd    =  LEAVEPREV2.empl_rcd
       And     LEAVEPREV2.effdt       = LEAVEPREV.effdt )    

ORDER BY LEAVEPREV.EFFDT DESC

End-Select
!***********************************************************************
End-Procedure Get-leave-Validate
!***********************************************************************


!*******************************************************************
Begin-Procedure get-Salary
!*******************************************************************
 #debug9 Show 'get-Salary' 
 
   If #Jobcode_Count =1 or #Duration=#DurfromRctl
      #debug9 show 'get-Salary1'
       Let $Salary-Date =$FromDate
       
      IF $SALARY-FOUND='N'
       
      ENd-IF 
   Else
       
   End-if 

!*******************************************************************
End-Procedure
!*******************************************************************


!***********************************************************************
Begin-Procedure P220-Bonus-Table-Select
!***********************************************************************
#debug9 Show 'P220-Bonus-Table-Select'
 
Begin-Select
annual_rt
gex_min_bonus_pct
gex_tar_bonus_pct
gex_max_bonus_pct
gex_csi_adj_pct
gex_bonus_status
gex_bonus_amt
deptid

  If #Year = #Current_Year
    Let $current_found = 'Y'
  End-If

From   ps_gex_empl_bonus

Where  emplid         = $emplid
And    empl_rcd      = #empl_rcd_nbr
And    gex_bonus_year = #Year
And    deptid         = &j.deptid


End-Select
!***********************************************************************
End-Procedure P220-Bonus-Table-Select
!***********************************************************************

!***********************************************************************
Begin-Procedure P220-Bonus-Table-Current-Year
!***********************************************************************
#debug9 Show 'P220-Bonus-Table-Current-Year'


Begin-Select
bonus.annual_rt
bonus.gex_min_bonus_pct
bonus.gex_tar_bonus_pct
bonus.gex_max_bonus_pct
bonus.gex_csi_adj_pct
bonus.gex_bonus_status
bonus.gex_bonus_amt
bonus.deptid

  If #Year = #Current_Year
    Let $current_found = 'Y'
  End-If

From   ps_gex_empl_bonus    bonus

Where  bonus.emplid         	= $emplid
And    bonus.empl_rcd      	= #empl_rcd_nbr
And    bonus.gex_bonus_year 	= #Year
And    bonus.deptid         	= $max_duration_deptid
End-Select
!***********************************************************************
End-Procedure P220-Bonus-Table-Current-Year
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-SalaryEffdt
!***********************************************************************
#debug9 Show 'Get-SalaryEffdt'
 
Let  #Count =0
Begin-Select
js.effdt 

  Let #Count =#Count +1

From   ps_job js

Where  js.emplid            = $emplid
And    js.empl_rcd         = #empl_rcd_nbr
And   js.effdt   between  $FromDate and  $Thrudate
       
End-Select
!***********************************************************************
End-Procedure Get-SalaryEffdt
!***********************************************************************

!***********************************************************************
Begin-Procedure get-Dept 
!***********************************************************************
#debug9 Show 'get-Dept'
 Let #GEX_DEPTID=0
 Let $DEPTID_CRITERIA=''
Begin-Select distinct
jd.DEPTID 


  Add 1 To #GEX_DEPTID

  If #GEX_DEPTID = 1
    Let $DEPTID_CRITERIA = '(' || 'GEXD.DEPTID' || ' In ('''     || &jd.DEPTID   || ''''
    
  Else
    Let $DEPTID_CRITERIA = $DEPTID_CRITERIA|| ',''' || &jd.DEPTID   || ''''
    
  End-If 
  
From   ps_job jd

Where  jd.emplid            = $emplid
And    jd.empl_rcd         = #empl_rcd_nbr
and jd.effdt between   $FromDate AND  $ThruDate
End-Select

 Let  $DEPTID_CRITERIA = $DEPTID_CRITERIA  || '))'
 
 if ($GEXXX907_Include_Div_Cd_Criteria= 'gdt.gex_company_div_cd = gdt.gex_company_div_cd') or  ($GEXXX907_Include_Div_Cd_Criteria= 'ALL') or ($DEPTID_CRITERIA = '))' )
    Let $Divcdfound='Y'
 else 
 do get-gexcompanydivcd
 end-if
End-Procedure


!***********************************************************************
Begin-Procedure get-Company-Paygroup 
!***********************************************************************
#debug9 Show 'get-Company-Paygroup'
 
 
Begin-Select distinct
JCP.Company
JCP.paygroup  

  Let $Comp-Pay-found ='Y'
  
  
              
From   ps_job jcp

Where  jcp.emplid            = $emplid
And    jcp.empl_rcd         = #empl_rcd_nbr
and jcp.effdt between   $FromDate AND  $ThruDate
And   jcp.company||jcp.paygroup in (select distinct j.company||j.paygroup from ps_paygroup_tbl j
                                   where [$GEXXX901_Include_Company_Paygroup_Criteria])

End-Select
!***********************************************************************
End-Procedure get-Company-Paygroup
!***********************************************************************

!***********************************************************************
Begin-Procedure get-Company 
!***********************************************************************

#debug9 Show 'get-Company'

Begin-Select distinct
JCY.COMPANY

  Let $Comp-found ='Y'
  
  
From   ps_job JCY

Where  JCY.emplid            = $emplid
And    JCY.empl_rcd         = #empl_rcd_nbr
and JCY.effdt between   $FromDate AND  $ThruDate
And   JCY.company in (select distinct j.company from ps_company_tbl j
                                    where [$GEXXX900_Include_Company_Criteria])

End-Select
!***********************************************************************
End-Procedure get-Company 
!***********************************************************************

!***********************************************************************
Begin-Procedure get-ACCT_CD 
!***********************************************************************

#debug9 Show 'get-ACCT_CD'

Begin-Select distinct
JCA.ACCT_CD

  Let $Acct-found ='Y'
  
 
              
From   ps_job JCA

Where  JCA.emplid            = $emplid
And    JCA.empl_rcd         = #empl_rcd_nbr
and JCA.effdt between   $FromDate AND  $ThruDate
and JCA.ACCT_CD in (select distinct j.acct_cd from PS_GEX_ACCT_CD_TBL  j
                     where [$GEXXX909_Include_Acct_Cd_Criteria])
                     
End-Select
!***********************************************************************
End-Procedure get-ACCT_CD
!***********************************************************************

!***********************************************************************          
Begin-Procedure get-union-cd 
!***********************************************************************
#debug9 Show 'get-union-cd'

Begin-Select distinct
JUC.UNION_CD

  Let $Union-cd-found ='Y'
  
  
              
From   ps_job JUC
Where  JUC.emplid            =$emplid
And    JUC.empl_rcd         =#empl_rcd_nbr
and   JUC.effdt between   $FromDate AND  $ThruDate
And   JUC.UNION_CD IN (select distinct j.UNION_CD from PS_UNION_TBL j
                     where [$GEXXX913_Include_Union_Cd_Criteria])                     
                     
End-Select
!***********************************************************************          
End-Procedure get-union-cd 
!***********************************************************************          

!***********************************************************************                    
Begin-Procedure Get-Department 
!***********************************************************************          
#debug9 Show 'get-Department'

Begin-Select distinct
JCD.Deptid


  Let $Department-found ='Y'
  
  
              
From   ps_job JCD

Where  JCD.emplid            = $emplid
And    JCD.empl_rcd         = #empl_rcd_nbr
and   JCD.effdt between   $FromDate AND  $ThruDate
And   JCD.deptid IN (select distinct j.deptid from ps_dept_tbl j
                     where [$GEXXX902_INCLUDE_DEPTID_CRITERIA])

End-Select
!***********************************************************************          
End-Procedure Get-Department 
!***********************************************************************          

!***********************************************************************          
Begin-Procedure Get-Department2 
!***********************************************************************
#debug9 Show 'get-Department2'

Begin-Select distinct
JCD1.Deptid


  Let $Department-found ='Y'
  
  
              
From  ps_gex_empl_bonus JCD1

Where  JCD1.emplid            = $emplid
And    JCD1.empl_rcd         = #empl_rcd_nbr
and   JCD1.GEX_BONUS_YEAR = #Current_Year
And   JCD1.deptid IN (select distinct j.deptid from ps_dept_tbl j
                     where [$GEXXX902_INCLUDE_DEPTID_CRITERIA])

End-Select
!***********************************************************************
End-Procedure Get-Department2
!***********************************************************************


!***********************************************************************
Begin-Procedure Get-Employee-Type           
!***********************************************************************
#debug9 Show 'get-employee-type'
 
Begin-Select distinct
JET.EMPL_TYPE


  Let $Employee-type-found ='Y'
  
  
              
From   ps_job JET

Where  JET.emplid            = $emplid
And    JET.empl_rcd         = #empl_rcd_nbr
and   JET.effdt between   $FromDate AND  $ThruDate
And   JET.empl_type in (select distinct j.fieldvalue from PSXLATITEM j where [$GEXXX930_Include_Emp_Type_Criteria]  and j.FIELDNAME = 'EMPL_TYPE')
End-Select
!***********************************************************************
End-Procedure Get-Employee-Type
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Employee-Status  
!***********************************************************************
 
#debug9 Show 'get-employee-status'
Begin-Select distinct
JES.EMPL_STATUS


  Let $Employee-status-found ='Y'
  
  
              
From   ps_job JES

Where  JES.emplid            = $emplid
And    JES.empl_rcd         = #empl_rcd_nbr
and   JES.effdt between   $FromDate AND  $ThruDate
End-Select
!***********************************************************************
End-Procedure Get-Employee-Status
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Gexcompanydivcd
!***********************************************************************
#debug9 Show 'get-gexcompanydivcd'
 Let $Divcdfound='N'
Begin-Select distinct
GEXD.GEX_COMPANY_DIV_CD 


     Find &GEXD.GEX_COMPANY_DIV_CD in  $GEXXX907_Include_Div_Cd_Criteria  0  #DIV_CD_Loc
  	     IF #DIV_CD_Loc <> -1
                Let $Divcdfound='Y'
              end-if

             
             
  
From   PS_GEX_DEPT_TBL GEXD
Where  [$DEPTID_CRITERIA]
End-Select
!***********************************************************************
End-Procedure Get-Gexcompanydivcd
!***********************************************************************

!***********************************************************************
Begin-Procedure Bonus-Table-Last-Year
!***********************************************************************
#debug9 Show 'Bonus-Table-Last-Year'

Begin-Select

bx.annual_rt
bx.gex_min_bonus_pct
bx.gex_tar_bonus_pct
bx.gex_max_bonus_pct
bx.gex_csi_adj_pct
bx.gex_bonus_status
bx.gex_bonus_amt
bx.deptid

From   ps_gex_empl_bonus bx

Where  bx.emplid         = $emplid
And    bx.empl_rcd      = #empl_rcd_nbr
And    bx.gex_bonus_year = #Year
And    bx.deptid         = &b.deptid

End-Select
!***********************************************************************
End-Procedure Bonus-Table-Last-Year
!***********************************************************************


!***********************************************************************
Begin-Procedure P230-Update-Bonus-Table
!***********************************************************************
#debug9 Show 'P230-Update-Bonus-Table'
Let $Current_Year = To_Char(#Current_Year)
#debug9 Show 'Udapte Bonus amount $emplid : '$emplid ' #Current_Year : '$Current_Year ' $max_duration_deptid : '$max_duration_deptid
If $Proration_Done = 'N'
	Let $Prorated_Or_Not = ' '
Else 
   Let $Prorated_Or_Not = 'Prorated* '
End-If
Begin-SQL
  Update  ps_gex_empl_bonus
     Set gex_bonus_status = $Update_Status,
         name	          = $name,	
         Comments_by_name = $Prorated_Or_Not
     Where emplid           = $emplid
       And empl_rcd        = #empl_rcd_nbr
       And gex_bonus_year   = $Current_Year
       and deptid  =$max_duration_deptid
       
End-SQL
!***********************************************************************
End-Procedure P230-Update-Bonus-Table
!***********************************************************************

!***********************************************************************
Begin-Procedure P240-Update-Bonus-Table
!***********************************************************************
 #debug8 Show 'P240-Update-Bonus-Table'
 Let $Current_Year = To_Char(#Current_Year)
 #debug8 Show '$Update_Status' $Update_Status
 #debug8 Show '$Current_Year' $Current_Year
 #debug8 Show '#empl_rcd_nbr' #empl_rcd_nbr
 #debug8 Show '$emplid' $emplid
Begin-SQL
Update ps_gex_empl_bonus FINUPD
Set FINUPD.gex_bonus_status = $Update_Status

WHERE FINUPD.EMPLID		= $emplid
AND FINUPD.EMPL_RCD		= #empl_rcd_nbr
AND FINUPD.GEX_BONUS_YEAR	= #Current_Year
AND FINUPD.DEPTID		= &B.DEPTID
AND FINUPD.EMPL_TYPE		= &B.EMPL_TYPE
AND FINUPD.BUDGET_DEPTID	= &B.BUDGET_DEPTID
AND FINUPD.JOBCODE 		= &B.JOBCODE
and FINUPD.gex_bonus_ind 	= 'B' 

End-SQL
!***********************************************************************
End-Procedure P240-Update-Bonus-Table
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-Existing-510
!***********************************************************************
#debug9 Show 'Check-Existing-510'
    Let $exists_510 = 'N'
Begin-Select
'X'
    Let $exists_510 = 'Y'

From   ps_addl_pay_erncd

Where  emplid         = &b.emplid
And    empl_rcd      = &b.empl_rcd
And    erncd          = '510'

End-Select
!***********************************************************************
End-Procedure Check-Existing-510
!***********************************************************************


!***********************************************************************
Begin-Procedure Check-Existing-510-Effdt
!***********************************************************************
#debug9 Show 'Check-Existing-510-Effdt'
    Let $exists_510_Effdt = 'N'
Begin-Select
'Y'
    Let $exists_510_Effdt = 'Y'

From   ps_addl_pay_effdt

Where  emplid         = &b.emplid
And    empl_rcd      = &b.empl_rcd
And    erncd          = '510'
And    effdt          = $Bonus_Award_Dt

End-Select
!***********************************************************************
End-Procedure Check-Existing-510-Effdt
!***********************************************************************


!***********************************************************************
Begin-Procedure Check-Existing-510-Data
!***********************************************************************
#debug9 Show 'Check-Existing-510-Data'
    Let $exists_510_Data = 'N'
Begin-Select
Z.addl_seq 

    Let $exists_510_Data = 'Y'

From   ps_addl_pay_data z

Where  z.emplid         = &b.emplid
And    z.empl_rcd      = &b.empl_rcd
And    z.erncd          = '510'
And    z.effdt          = $Bonus_Award_Dt

End-Select
!***********************************************************************
End-Procedure Check-Existing-510-Data
!***********************************************************************

!***********************************************************************
Begin-Procedure P240-Insert-Addl-Pay-Erncd
!***********************************************************************
#debug9 Show 'P240-Insert-Addl-Pay-Erncd'
Begin-SQL  On-Error=P299-Error('P240-Insert-Addl-Pay-Erncd')
  Insert Into ps_addl_pay_erncd
    Values (&b.emplid, &b.empl_rcd, '510', 'B')
End-SQL
!***********************************************************************
End-Procedure P240-Insert-Addl-Pay-Erncd
!***********************************************************************


!***********************************************************************
Begin-Procedure P250-Insert-Addl-Pay-Effdt
!***********************************************************************
#debug9 Show 'P250-Insert-Addl-Pay-Effdt'
Begin-SQL  On-Error=P299-Error('P250-Insert-Addl-Pay-Effdt')
  Insert Into ps_addl_pay_effdt
    Values (&b.emplid, &b.empl_rcd, '510', $Bonus_Award_Dt, 'B')
End-SQL
!***********************************************************************
End-Procedure P250-Insert-Addl-Pay-Effdt
!***********************************************************************

!***********************************************************************
Begin-Procedure P260-Insert-Addl-Pay-Data
!***********************************************************************
#debug9 Show 'P260-Insert-Addl-Pay-Data'
  
Begin-SQL  On-Error=P299-Error('P260-Insert-Addl-Pay-Data')
Insert Into ps_addl_pay_data
    Values
	(&b.emplid, 
	&b.empl_rcd,
	'510',
	$Bonus_Award_Dt,
	#addl_seq,	
	$deptid_ins,	
	' ',
	' ',
	' ',
	' ',
	'J',
	0,
	0,
        #Final_Bonus_Amount,
	'N',
	0,
	$Bonus_Award_Dt_Plus1,		
	#Final_Bonus_Amount,
	0,
	'Y', 				!$ok_to_pay,
	'Y',
	'N',
	'N',
	'Y',
	'Y',
	'Y',
	'Y',
	'Y',
	' ',
	' ',
	1,
	'S',
	'A',
	'S',
	'BON',
        'R',                            
        ' ',                            
	' ',
	'STDBU',                        ! default value
	' ',
        'B')

End-SQL
!***********************************************************************
End-Procedure P260-Insert-Addl-Pay-Data
!***********************************************************************

!***********************************************************************
Begin-Procedure P270-Insert-GEX-Empl-Bonus
!***********************************************************************
#debug9 Show 'P270-Insert-GEX-Empl-Bonus'

Begin-SQL  On-Error=P299-Error('P270-Insert-GEX-Empl-Bonus')
  Insert Into  ps_gex_empl_bonus
  (EMPLID,EMPL_RCD,GEX_BONUS_YEAR,DEPTID,
EMPL_TYPE,NAME,ANNUAL_RT,GEX_MIN_BONUS_PCT,GEX_TAR_BONUS_PCT,GEX_MAX_BONUS_PCT,
 GEX_EMPL_OVERRIDE,GEX_CSI_ADJ_PCT,GEX_BONUS_STATUS,GEX_BONUS_AMT,
 GEX_BONUS_AWARD_DT,GEX_BONUS_IND,COMMENTS_BY_NAME,COMPLETE_FLAG) 
    Values (&j.emplid,&j.empl_rcd,#Current_Year,$max_duration_deptid,$empl_type,$name,0,#previous_min_pct,
            #previous_tar_pct,#previous_max_pct,'N',0,'2',0,null,'B',' ',' ')
End-SQL
!***********************************************************************
End-Procedure P270-Insert-GEX-Empl-Bonus
!***********************************************************************


!***********************************************************************
Begin-Procedure New-Page
!***********************************************************************
#debug9 Show 'New-Page' 
  If $OK-To-Advance-Page = 'Y'
    Let $OK-To-Advance-Page = 'N'
    New-Page
  End-If
End-Procedure

!***********************************************************************
Begin-Procedure P280-Empl-Type-Totals
!***********************************************************************
#debug9 Show 'P280-Empl-Type-Totals'
  If #type-count > 0
    Evaluate $empl_type
      When = 'H'
        Print 'Hourly Employee Totals'            (+2,{#column6})
      When = 'S'
        Print 'Salaried Employee Totals'          (+2,{#column6})
    End-Evaluate
    Print #type_previous_bonus          (,{#column8})  Edit 999,999,999,990.00
    Print #type_current_bonus           (,{#column11}) Edit 999,999,999,990.00  Bold
  End-If
 New-page
  Let #type-count          = 0
  Let #type_previous_bonus = 0
  Let #type_current_bonus  = 0

!***********************************************************************
End-Procedure P280-Empl-Type-Totals
!***********************************************************************

!***********************************************************************
Begin-Procedure P285-Deptid-Totals
!***********************************************************************
#debug9 Show 'P285-Deptid-Totals'
  If #deptid-count > 0
    Print 'Deptid Totals'                 (+2,{#column6})
    Print #deptid_previous_bonus          (,{#column8})  Edit 999,999,999,990.00
    Print #deptid_current_bonus           (,{#column11}) Edit 999,999,999,990.00  Bold
  End-If

  Let #deptid-count          = 0
  Let #deptid_previous_bonus = 0
  Let #deptid_current_bonus  = 0

!***********************************************************************
End-Procedure P285-Deptid-Totals
!***********************************************************************

!***********************************************************************
Begin-Procedure P290-Print-Record
!***********************************************************************
#debug9 Show 'P290-Print-Record'

  !Let #weekly_rt_1 = #weekly_rt * 1.5	
  !Let #weekly_rt_2 = #weekly_rt * 2	

  Do Get-Acct-cd-descr
  show $name ' ' $emplid ' ' $AcctNameAbbrv
  Print $name                   (+2,{#column1},21) 
  Print $emplid                 (,{#column2})
  Print $AcctNameAbbrv          (,{#column3})

  
  Do Format-DateTime($Hire_Dt_Print, $Hire_Date, {DEFMDY}, '', '') 
  Print $Hire_Date              (,{#column4})

  If $Empl_Type = 'S'
    Print #weekly_rt            (,{#column5})   Edit 99,990.99
    Print #Annual_Rt            (,{#column6})   Edit 999,990.99
  Else
    Print #hourly_rt            (,{#column5})   Edit 99,990.99
    Print #weekly_rt            (,{#column6})   Edit 999,990.99
    
    Print #weekly_rt_1          (,73)           Edit 999,990.99
    Print #weekly_rt_2          (,83)           Edit 999,990.99
    
  End-If

  If $Empl_Type = 'S'
    Move #previous_min_pct To $temp 0.000
    Let $previous_min_pct = Substr($temp,2,4)
    Print $previous_min_pct     (,{#column7})

    Print '/'                   (,)

    Move #previous_tar_pct To $temp 0.000
    Let $previous_tar_pct = Substr($temp,2,4)
    Print $previous_tar_pct     (,)

    Print '/'                   (,)

    Move #previous_max_pct To $temp 0.000
    If #previous_max_pct >= 1
      Let $previous_max_pct = Substr($temp,1,4)
    Else
      Let $previous_max_pct = Substr($temp,2,4)
    End-If
    Print $previous_max_pct     (,)

    Move #previous_csi_adj_pct To $temp 00.000

    If #previous_csi_adj_pct = 1
      Let $previous_csi_adj_pct = ' 1.00'
    Else
      If #previous_csi_adj_pct = -1
        Let $previous_csi_adj_pct = '-1.00'
      Else
        If Substr($temp,1,1) = '-'
          Let $previous_csi_adj_pct = '-' || Substr($temp,3,4)
        Else
          Let $previous_csi_adj_pct = ' ' || Substr($temp,3,4)
        End-If
      End-If
    End-If

    Print $previous_csi_adj_pct (,{#column8})

    Move #current_min_pct To $temp 0.000
    Let $current_min_pct = Substr($temp,2,4)
    Print $current_min_pct      (,{#column10})

    Print '/'                   (,)

    Move #current_tar_pct To $temp 0.000
    Let $current_tar_pct = Substr($temp,2,4)
    Print $current_tar_pct      (,)

    Print '/'                   (,)

    Move #current_max_pct To $temp 0.000
    If #current_max_pct >= 1
      Let $current_max_pct = Substr($temp,1,4)
    Else
      Let $current_max_pct = Substr($temp,2,4)
    End-If
    Print $current_max_pct      (,)

    Move #current_csi_adj_pct To $temp 00.000

    If #current_csi_adj_pct = 1
      Let $current_csi_adj_pct = ' 1.00'
    Else
      If #current_csi_adj_pct = -1
        Let $current_csi_adj_pct = '-1.00'
      Else
        If Substr($temp,1,1) = '-'
          Let $current_csi_adj_pct = '-' || Substr($temp,3,4)
        Else
          Let $current_csi_adj_pct = ' ' || Substr($temp,3,4)
        End-If
      End-If
    End-If

    Print $current_csi_adj_pct  (,{#column11})
  End-If

  Print #previous_bonus_amt     (,{#column9})   Edit 9,999,990.00
  Print #current_bonus_amt      (,{#column12})  Edit 9,999,990.00  Bold
  
  If $Run_Type = '1' or $Run_Type = '2'
  If $Empl_Type = 'S'
    !Print $max_duration_deptid    (,{#column16})
    Print $deptid    (,{#column16})
  Else
    Print ' '                     (,{#column16})
    !Print $max_duration_deptid    (,+17)
    Print $deptid    (,+17)
  End-if
  End-if
  
  If $Run_Type = '3' or $Run_Type = '4'
  If $Empl_Type = 'S'
    Print $Deptid    (,{#column16})
  Else
    Print ' '                     (,{#column16})
    Print $Deptid    (,+17)
  End-if
  
  End-if
  
!***********************************************************************
End-Procedure P290-Print-Record
!***********************************************************************  


!***********************************************************************
Begin-Procedure P299-Error($msg)
!***********************************************************************
#debug9 Show 'P299-Error'
  If Substr($_sql-error,1,9) <> 'ORA-00001'
    Show 'SQL Error in ' $msg
    Show 'SQL Error:  '  $_sql-error
    Stop
  End-If
End-Procedure

!***********************************************************************
Begin-Procedure P300-Finalization
!***********************************************************************
#debug9 Show 'P300-Finalization'
  !Vendaxg Commented for Bonus Processing 2011 on 06/13/2011 - Begin
  !If $Data-Found-Flag <> 'Y'
   ! Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  !Else
  !  New-Page
  !  Print 'Report Totals'             (+1,{#column6})
  !  Print #report_previous_bonus      (,{#column8})  Edit 999,999,999,990.00
  !  Print #report_current_bonus       (,{#column11}) Edit 999,999,999,990.00  Bold
  !End-If
!Vendaxg Commented for Bonus Processing 2011 on 06/13/2011 - End
 !Rollback

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'
End-Procedure


!*****************************************************************************
Begin-Procedure Gex-Jobcode-Bonus-Percentage
!*****************************************************************************
 
Let $PCTFOUND='N'
Let $OprID               = '''' || $Prcs_OprID       || ''''
Let $Run_Cntl_ID         = '''' || $Prcs_Run_Cntl_ID || ''''
Let #current_min_pct = 0
Let #current_tar_pct = 0
Let #current_max_pct = 0
Let #current_mid_one = 0
Let #current_mid_two = 0
Let #current_mid_three = 0 !ISDVVXK - GEXHR_848_E1944_BONUS2015
Begin-Select
JBCD.GEX_MIN_BONUS_PCT 
JBCD.GEX_TAR_BONUS_PCT
JBCD.GEX_MAX_BONUS_PCT

	Let $PCTFOUND='Y'
	#debug8 Show 'Jobcode Found in Run control : '$JOBCD
	Let #current_min_pct   = &JBCD.GEX_MIN_BONUS_PCT  
	
      
      	Let #current_tar_pct   = &JBCD.GEX_TAR_BONUS_PCT
      	
      
      	Let #current_max_pct   = &JBCD.GEX_MAX_BONUS_PCT
      	
        !1289792 - GEXHR_BONUS2017 Begins      
      	!Let #current_mid_one     = (#current_min_pct + #current_tar_pct) / 2
      	!Let #current_mid_two     = (#current_tar_pct + #current_max_pct) / 2
      	Let #current_mid_one     = (#current_tar_pct - #current_min_pct )
      	Let #current_mid_two     = (#current_max_pct - #current_tar_pct )
        !1289792 - GEXHR_BONUS2017 Ends
        !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
        !1289792 - GEXHR_BONUS2017 Begins
        !Let #current_mid_three   = (#current_tar_pct - #current_min_pct)
        Let #current_mid_three   = #current_max_pct
        !1289792 - GEXHR_BONUS2017 Ends
        !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
 
FROM PS_GEX_JOBCODE_TBL JBCD 
WHERE JBCD.EFFDT =(SELECT MAX(JBCD1.EFFDT) FROM PS_GEX_JOBCODE_TBL JBCD1 
		   WHERE JBCD.SETID = JBCD1.SETID 
		   AND JBCD.GEX_BONUS_GROUP = JBCD1.GEX_BONUS_GROUP 
		   AND JBCD.JOBCODE = JBCD1.JOBCODE 
		   AND JBCD1.EFFDT <= SYSDATE)
AND JBCD.STATUS='A' !ISDVVXK  GEXHR_848_E161362_BONUS2014		   
AND JBCD.JOBCODE = $Jobcd
AND JBCD.GEX_BONUS_GROUP = 'PG01'


End-Select
!*****************************************************************************
End-Procedure Gex-Jobcode-Bonus-Percentage
!*****************************************************************************
!*****************************************************************************
Begin-Procedure Sum-Distinct-Jobcodes
!*****************************************************************************
Let #Counter_Jobcodes =0
Let $Prev_Distinct_Jobcode = ''
Let #Distinct_Jobcode_Count = 0
Let #Sum_Distinct_JobCode_Duration = 0
Let #Final_Jobcode_Row_Count = 0 
#debug8 Show '#Row_Count :'#Row_Count
While #Counter_Jobcodes < #Row_Count

   Let #Counter_Jobcodes = #Counter_Jobcodes + 1
   !Vendaxg Added for Bonus Processing 2011 - Begin
   !Get $All_Jobcode #Duration $Prevd_Deptid from JobCode(#Counter_Jobcodes)
   
   !Get $All_Jobcode $All_Position_Nbr $All_Grade #Duration $Prevd_Deptid from JobCode(#Counter_Jobcodes)
   Get $All_Jobcode $All_Position_Nbr $All_Grade #Duration $Prevd_Deptid #All_Annual_Rt $All_Promotion_Found from JobCode(#Counter_Jobcodes)
   
   !Vendaxg Added for Bonus Processing 2011 - Begin
   
   #debug8 Show 'Distinct Jobcode Finding : ' $All_Jobcode '  Duration : '#Duration ' $Prevd_Deptid :' $Prevd_Deptid ' $All_Grade :'$All_Grade
   Do Get-Dept-Bonus-group
   Let $Gex_Valid_Dept_Bonus_Group = Ltrim(Rtrim($Gex_Valid_Dept_Bonus_Group,' '),' ')
   If $Gex_Valid_Dept_Bonus_Group <> ''
   	Let $JobCode_Found_Final_List = 'N'
   	Let #Counter_Jobcodes2 = 0
   	While #Counter_Jobcodes2 < #Final_Jobcode_Row_Count
   		Let #Counter_Jobcodes2 = #Counter_Jobcodes2 + 1
   		!Vendaxg Added for Bonus Processing 2011 - Begin
   		!Get $Distinct_Jobcode #Duration from Final-Jobcode-List(#Counter_Jobcodes2)
   		Get $Distinct_Jobcode $Distinct_Position_Nbr $Distinct_Grade #Duration from Final-Jobcode-List(#Counter_Jobcodes2)
   		!Vendaxg Added for Bonus Processing 2011 - End
   		If $Distinct_Jobcode = $All_Jobcode
   			Let $JobCode_Found_Final_List = 'Y'
   		End-if
   	
   	End-While
   	
   	If $JobCode_Found_Final_List = 'N'
   		Let #Counter_Jobcodes1 = 0
   		Let $Prev_All_Jobcode = ''
   		Let #Sum_Distinct_JobCode_Duration = 0 
   		While #Counter_Jobcodes1 < #Row_Count
   			Let #Counter_Jobcodes1 = #Counter_Jobcodes1 + 1
   			!Vendaxg Added for Bonus Processing 2011 - Begin
   			!Get $Find_Jobcode #Duration $Prevd_Deptid from JobCode(#Counter_Jobcodes1)
   			Get $Find_Jobcode $Find_Position_Nbr $Find_Grade #Duration $Prevd_Deptid from JobCode(#Counter_Jobcodes1)
   			!Vendaxg Added for Bonus Processing 2011 - End
   			Do Get-Dept-Bonus-group
   			Let $Gex_Valid_Dept_Bonus_Group = Ltrim(Rtrim($Gex_Valid_Dept_Bonus_Group,' '),' ')
   			If $Gex_Valid_Dept_Bonus_Group <> ''
   				If $Find_Jobcode  = $All_Jobcode
   					Let #Sum_Distinct_JobCode_Duration = #Sum_Distinct_JobCode_Duration + #Duration
   					
   				End-if
   			End-if
   			   		
   		End-While
   		Let #Final_Jobcode_Row_Count =  #Final_Jobcode_Row_Count + 1
   		!Vendaxg Added for Bonus Processing 2011 - Begin
   		!Put $All_Jobcode #Sum_Distinct_JobCode_Duration into Final-Jobcode-List(#Final_Jobcode_Row_Count)
   		Put $All_Jobcode $All_Position_Nbr $All_Grade #Sum_Distinct_JobCode_Duration into Final-Jobcode-List(#Final_Jobcode_Row_Count)
   		!Vendaxg Added for Bonus Processing 2011 - End
   		#debug8 Show 'Put final Jobcode : '$All_Jobcode ' Duration :  '#Sum_Distinct_JobCode_Duration ' Grade :'$All_Grade
        End-if
    End-if
  
End-While

Let #Counter_Jobcodes_testing = 0
#debug8 Show '*************************** Distinct Jobcode***********************'
While #Counter_Jobcodes_testing < #Final_Jobcode_Row_Count
	Let #Counter_Jobcodes_Testing = #Counter_Jobcodes_Testing + 1
	!Vendaxg Added for Bonus Processing 2011 - Begin
	!Get $Find_Jobcode_Testing  #Duration from Final-Jobcode-List(#Counter_Jobcodes_testing)
	Get $Find_Jobcode_Testing $Find_Position_Testing $Find_Grade_Testing #Duration from Final-Jobcode-List(#Counter_Jobcodes_testing)
	!Vendaxg Added for Bonus Processing 2011 - End
	#debug8 Show 'Distinct Jobcode : '$Find_Jobcode_Testing ' Find_Position_Testing : ' $Find_Position_Testing '  Duration : '#Duration ' Grade :'$Find_Grade_Testing
End-while
#debug8 Show '*************************** Distinct Jobcode***********************'
!*****************************************************************************
End-Procedure Sum-Distinct-Jobcodes
!*****************************************************************************

!*****************************************************************************
Begin-Procedure Get-Bonus-Kickers
!*****************************************************************************
Let #puv	= 0
Let #profit	= 0
Let #css1	= 0
Let #css2	= 0
#debug9 show '$max_duration_deptid' $max_duration_deptid
#debug9 show '$max_dept_jobcode' $max_dept_jobcode

Begin-Select
KR1.GEX_PUV
KR1.GEX_pROFIT
KR1.GEX_CSS1
KR1.GEX_CSS2

  Let #puv	= &KR1.GEX_PUV
  Let #profit	= &KR1.GEX_PROFIT
  Let #css1	= &KR1.GEX_CSS1
  Let #css2	= &KR1.GEX_CSS2
  
FROM PS_GEX_KICKER_TBL KR1
WHERE 	KR1.DEPTID	= $Max_Duration_Deptid
AND 	KR1.JOBCODE	= $Jobcd
!**********    ISDVNPK -- 08/05/2013   Begin   *************
AND     KR1.effdt = (SELECT MAX(KRX1.EFFDT)
                  FROM PS_GEX_KICKER_TBL KRX1
                 WHERE KRX1.DEPTID = KR1.DEPTID
                   AND KRX1.JOBCODE = KR1.JOBCODE
                   AND KRX1.EFFDT <= SYSDATE)
!**********    ISDVNPK -- 08/05/2013   END   *************                   
End-Select
!*****************************************************************************
End-Procedure Get-Bonus-Kickers
!*****************************************************************************

!*****************************************************************************
Begin-Procedure Get-Std-Hrs-Duration
!*****************************************************************************
clear-array  name=Standard_Hours
Let #Row_Count_Std_hrs =1 
Let #Curr_Std_Hrs = 1
Let #Pre_Std_Hrs = 0
Let $Pre_Std_Hrs = ''

Begin-Select
STDHRS.EFFDT
STDHRS.STD_HOURS

	
	Let #All_Std_Hrs = &STDHRS.STD_HOURS
	Let $All_Effdt_Std_Hrs = &STDHRS.EFFDT
	Let $End_Date_Std_Hrs = $ThruDate
	Let $Start_Date_Std_Hrs = $FromDate
	
	If $Pre_Std_Hrs = '' 
	   
	   Let #Duration_Std_Hrs = datediff($End_Date_Std_Hrs,$All_Effdt_Std_Hrs,'DAY')
	   
	   Put #All_Std_Hrs #Duration_Std_Hrs Into Standard_Hours(#Curr_Std_Hrs)
	   Let $Old_Effdt_Std_Hrs = $All_Effdt_Std_Hrs
	   Let #Pre_Std_Hrs = #All_Std_Hrs
	   Let $Pre_Std_Hrs = #All_Std_Hrs
	   Let #Curr_Std_Hrs = #Curr_Std_Hrs + 1
	Else
	  
	   Let #Duration_Std_Hrs = datediff($Old_Effdt_Std_Hrs,$All_Effdt_Std_Hrs,'DAY')
	   Put #All_Std_Hrs #Duration_Std_Hrs Into Standard_Hours(#Curr_Std_Hrs)
	   Let $Old_Effdt_Std_Hrs = $All_Effdt_Std_Hrs
	   Let #Pre_Std_Hrs = #All_Std_Hrs
	   Let #Curr_Std_Hrs = #Curr_Std_Hrs + 1
	  
	End-If
	Let #Row_Count_Std_hrs = #Row_Count_Std_hrs + 1
	
From PS_JOB STDHRS
Where STDHRS.emplid = $emplid
And STDHRS.empl_rcd = #empl_rcd_nbr
And STDHRS.effdt between $FromDate and $ThruDate
order by STDHRS.EFFDT desc
End-Select

If #Row_Count_Std_hrs =1 
 Do Get-Prev-Std-Hrs
 Let #Duration_Std_Hrs = #DurfromRctl
 Put #Prevd_Std_Hrs #Duration_Std_Hrs Into Standard_Hours(#Curr_Std_Hrs)
 Let #Row_Count_Std_hrs = #Row_Count_Std_hrs + 1
 #debug8 Show 'Row Count one Duration Stand Hours: '#Duration_Std_Hrs ' Standard Hours : '#Prevd_Std_Hrs
 
Else
 Do Get-Prev-Std-Hrs
 Let #Duration_Std_Hrs = datediff($All_Effdt_Std_Hrs,$Start_Date_Std_Hrs,'DAY')
 If #Prevd_Std_Hrs <> 0
 	Put #Prevd_Std_Hrs #Duration_Std_Hrs Into Standard_Hours(#Curr_Std_Hrs)
 	Let #Row_Count_Std_hrs = #Row_Count_Std_hrs + 1
 	#debug8 Show 'Multiple Row COunt Duration Stand Hours: '#Duration_Std_Hrs ' Standard Hours : '#Prevd_Std_Hrs
 
 End-If
 
Let #StdHrs =1
#debug8 Show '********************* Standard hours **********************'
Let #Standard_Hrs_Eligible_Duration = 0
Let $Eligible_Standard_hrs = 'N'
While #StdHrs < #Row_Count_Std_hrs

	
	Get #Get_Std_Hrs #Duration_Std_Hrs from Standard_Hours(#StdHrs)
        #debug8 Show 'Standard Hours :'#Get_Std_Hrs ' Duration : '#Duration_Std_Hrs
        Let #StdHrs=#StdHrs+1 
        If #Get_Std_Hrs >= #Rc_std_hours 
        	Let #Standard_Hrs_Eligible_Duration = #Standard_Hrs_Eligible_Duration + #Duration_Std_Hrs
        	Let $Eligible_Standard_hrs = 'Y'
        End-if
End-while
#debug8 Show 'Standard Hours Eligilble Duration : '#Standard_Hrs_Eligible_Duration
#debug8 Show '********************* Standard hours **********************'
End-If
!*****************************************************************************
End-Procedure Get-Std-Hrs-Duration
!*****************************************************************************
!*****************************************************************************
Begin-Procedure Get-Prev-Std-Hrs
!*****************************************************************************
Let #Prevd_Std_Hrs = ''
Begin-Select
PREVHRS.DEPTID
PREVHRS.ANNUAL_RT
PREVHRS.HOURLY_RT
PREVHRS.STD_HOURS



	Let #Prevd_Std_Hrs = &PREVHRS.STD_HOURS

	
FROM PS_JOB PREVHRS
Where PREVHRS.emplid = $emplid
And PREVHRS.empl_rcd = #empl_rcd_nbr
AND PREVHRS.EFFDT = (Select Max(PREVHRS1.effdt) From   ps_job  PREVHRS1
                       	Where   PREVHRS.emplid       = PREVHRS1.emplid
       			And     PREVHRS.empl_rcd    =  PREVHRS1.empl_rcd
       			And     PREVHRS1.effdt       <= $FromDate )
AND  PREVHRS.EFFSEQ =   (Select Max(PREVHRS2.EFFSEQ) FROM PS_JOB  PREVHRS2
       			Where   PREVHRS.emplid       = PREVHRS2.emplid
       			And     PREVHRS.empl_rcd    =  PREVHRS2.empl_rcd
       			And     PREVHRS.effdt       = PREVHRS2.effdt )    

ORDER BY PREVHRS.EFFDT DESC
End-Select

!*****************************************************************************
End-Procedure Get-Prev-Std-Hrs
!*****************************************************************************
!GEXPY_848_E95094_02 2012-05-22 VENDAXG  Mod#8 - Begin
!***********************************************************************
Begin-Procedure Find-Salary-AsofRuncontrol
!***********************************************************************
Let $Promotion_Found  = 'N'
Let #Prom_Annual_Rt 	= 0
Let #annual_rt = 0
Let #hourly_rt = 0
Let #weekly_rt = 0
	
Begin-Select
PROM.EMPLID
PROM.EMPL_RCD
PROM.EFFDT
PROM.EFFSEQ
PROM.ANNUAL_RT
PROM.HOURLY_RT
PROM.STD_HOURS
PROM.EMPL_TYPE

	Let $Prom_Empl_Type 	= &PROM.EMPL_TYPE
	
	Let #Prom_Std_Hours = &PROM.STD_HOURS
	Let #annual_rt = &PROM.ANNUAL_RT
	Let #hourly_rt = &PROM.HOURLY_RT
	Let #weekly_rt = #hourly_rt * &PROM.STD_HOURS
	Let #Std_hours = &PROM.STD_HOURS
	If $Prom_Empl_Type = 'H'
		Let #annual_rt = #hourly_rt * #Prom_Std_Hours * 52
		
	End-If
	Show 'Salary As of Runcontrol date : '#annual_rt
	
FROM PS_JOB PROM
Where PROM.emplid = $emplid
And PROM.empl_rcd = #empl_rcd_nbr
AND PROM.EFFDT = (Select Max(PROM1.effdt)
                       From   ps_job  PROM1
                       Where   PROM.emplid       = PROM1.emplid
       And     PROM.empl_rcd    =  PROM1.empl_rcd
       And     PROM1.effdt       <= $Salary_Dt )
AND  PROM.EFFSEQ =   (Select Max(PROM2.EFFSEQ)
                     From   ps_job  PROM2
       Where   PROM.emplid       = PROM2.emplid
       And     PROM.empl_rcd    =  PROM2.empl_rcd
       And     PROM2.effdt       = PROM.effdt )    

ORDER BY PROM.EFFDT DESC
End-Select
!***********************************************************************
End-Procedure Find-Salary-AsofRuncontrol
!***********************************************************************
!GEXPY_848_E95094_02 2012-05-22 VENDAXG  Mod#8 - End

!***********************************************************************
Begin-Procedure Get-EE-Salary
!***********************************************************************
Do Get-Future-Dt-HIR
If $Future_dt_hir = 'N'
	Do Get-Future-Dt-REH
	If $Future_dt_reh = 'N'
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
		Do Find-Salary-AsofRuncontrol
		!Do Get-Salary-ASOF-SalaryDate
		!If $Salary_asof_date = 'N'
		!	Do Get-Salary-Elig-Jobcode
		!	If $Salary_Elig_Jobcode = 'N'
		!		#debug8 Show 'Salary Not found for Valid Jobcode after  salary date from Run control'				
		!	Else
		!		#debug8 Show 'Salary found for Valid Jobcode after  salary date from Run control'				
		!	End-if
		!Else
		!	#debug8 Show 'Salary found for Valid Jobcode as of salary date from Run control'
		!End-if
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
	Else
		#debug8 Show 'Future dated REHIRE row found'
	End-if
Else
	#debug8 Show 'Futured dated HIRE Row found'
End-if


!***********************************************************************
End-Procedure Get-EE-Salary
!***********************************************************************


!***********************************************************************
Begin-Procedure Get-Future-Dt-HIR
!***********************************************************************
Let $Future_dt_hir = 'N'

Begin-Select
SALHIR.ACTION
SALHIR.EFFDT
SALHIR.ANNUAL_RT
SALHIR.HOURLY_RT
SALHIR.STD_HOURS
SALHIR.EMPL_TYPE	!GEXPY_848_E95094_02 2012-05-22 VENDAXG

	Let $Future_dt_hir = 'Y'
	Let #annual_rt = &SALHIR.ANNUAL_RT
	Let #hourly_rt = &SALHIR.HOURLY_RT
	Let #weekly_rt = #hourly_rt * &SALHIR.STD_HOURS
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
	Let #Std_hours = &SALHIR.STD_HOURS
	Let $SalHire_Empl_Type = &SALHIR.EMPL_TYPE
	If $SalHire_Empl_Type = 'H'
		Let #annual_rt = #hourly_rt * #Std_hours * 52
	End-If
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
        #debug8 Show '#annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt '  Job Code : '$JOBCD
	
	
FROM PS_JOB SALHIR 
WHERE SALHIR.EMPLID = $Emplid
AND SALHIR.EMPL_RCD = #Empl_Rcd_Nbr
AND SALHIR.EFFDT    > $Salary_Effdt
AND SALHIR.ACTION = 'HIR'
AND SALHIR.EFFDT BETWEEN $FromDate AND  $Thrudate 
End-Select
!***********************************************************************
End-Procedure Get-Future-Dt-HIR
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Future-Dt-REH
!***********************************************************************
Let $Future_dt_reh = 'N'

Begin-Select
SALREH.ACTION
SALREH.EFFDT
SALREH.ANNUAL_RT
SALREH.HOURLY_RT
SALREH.STD_HOURS
SALREH.EMPL_TYPE	!GEXPY_848_E95094_02 2012-05-22 VENDAXG 

	Let $Future_dt_reh = 'Y'
	Let #annual_rt = &SALREH.ANNUAL_RT
	Let #hourly_rt = &SALREH.HOURLY_RT
	Let #weekly_rt = #hourly_rt * &SALREH.STD_HOURS
	
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - Begin
	Let #Std_hours = &SALREH.STD_HOURS
	Let $SalReHire_Empl_Type = &SALREH.EMPL_TYPE
	If $SalReHire_Empl_Type = 'H'
		Let #annual_rt = #hourly_rt * #Std_hours * 52
	End-If
	!GEXPY_848_E95094_02 2012-05-22 VENDAXG - End
        #debug8 Show 'Rehire : #annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt '  Job Code : '$JOBCD
	
	
FROM PS_JOB SALREH 
WHERE SALREH.EMPLID = $Emplid
AND SALREH.EMPL_RCD = #Empl_Rcd_Nbr
AND SALREH.EFFDT    > $Salary_Effdt
! ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
AND SALREH.ACTION = 'HIR'
AND SALREH.ACTION = 'REH' 
! ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
AND SALREH.EFFDT BETWEEN $FromDate AND  $Thrudate 
End-Select
!***********************************************************************
End-Procedure Get-Future-Dt-REH
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Salary-ASOF-SalaryDate
!***********************************************************************
Let $Salary_asof_date = 'N'

Begin-Select
SALASDT.ACTION
SALASDT.EFFDT
SALASDT.ANNUAL_RT
SALASDT.HOURLY_RT
SALASDT.STD_HOURS


	Let $Salary_asof_date = 'Y'
	Let #annual_rt = &SALASDT.ANNUAL_RT
	Let #hourly_rt = &SALASDT.HOURLY_RT
	Let #weekly_rt = #hourly_rt * &SALASDT.STD_HOURS
	
        #debug8 Show '#annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt '  Job Code : '$JOBCD
	
	
FROM PS_JOB SALASDT 
WHERE SALASDT.EMPLID = $Emplid
AND SALASDT.EMPL_RCD = #Empl_Rcd_Nbr
AND SALASDT.EFFDT    = (SELECT MAX(SALASDT1.EFFDT) FROM PS_JOB SALASDT1
			WHERE SALASDT.EMPLID = SALASDT1.EMPLID 
			AND SALASDT.EMPL_RCD = SALASDT1.EMPL_RCD
			AND SALASDT1.EFFDT <= $Salary_Effdt)
AND SALASDT.EFFSEQ = (SELECT MAX(SALASDT2.EFFSEQ) FROM PS_JOB SALASDT2
			WHERE SALASDT.EMPLID = SALASDT2.EMPLID
			AND SALASDT.EMPL_RCD = SALASDT2.EMPL_RCD
			AND SALASDT.EFFDT = SALASDT2.EFFDT)
			
AND SALASDT.JOBCODE IN (SELECT DISTINCT VLDJB.JOBCODE FROM PS_GEX_JOBCODE_TBL VLDJB 
			WHERE VLDJB.EFFDT = (SELECT MAX(VLDJB1.EFFDT) FROM PS_GEX_JOBCODE_TBL VLDJB1
						WHERE VLDJB1.GEX_BONUS_GROUP = VLDJB.GEX_BONUS_GROUP
						AND VLDJB1.JOBCODE = VLDJB.JOBCODE
						AND VLDJB1.EFFDT <= SYSDATE)
                        and VLDJB.STATUS='A' !ISDVVXK  GEXHR_848_E161362_BONUS2014						
			AND VLDJB.GEX_BONUS_GROUP = $Gex_Dept_bonus_Group )

End-Select
!***********************************************************************
End-Procedure Get-Salary-ASOF-SalaryDate
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Salary-Elig-Jobcode
!***********************************************************************
Let $Salary_Elig_Jobcode = 'N'
Begin-Select
SALEJBCD.ACTION
SALEJBCD.EFFDT
SALEJBCD.ANNUAL_RT
SALEJBCD.HOURLY_RT
SALEJBCD.STD_HOURS
	
	
	
	Let $Salary_Elig_Jobcode = 'Y'
	Let #annual_rt = &SALEJBCD.ANNUAL_RT
	Let #hourly_rt = &SALEJBCD.HOURLY_RT
	Let #weekly_rt = #hourly_rt * &SALEJBCD.STD_HOURS
		
        #debug8 Show '#annual_rt : '#annual_rt ' #hourly_rt :  '#hourly_rt ' #weekly_rt :  '#weekly_rt '  Job Code : '$JOBCD


FROM PS_JOB SALEJBCD 
WHERE SALEJBCD.EMPLID = $Emplid
AND SALEJBCD.EMPL_RCD = #Empl_Rcd_Nbr
AND SALEJBCD.EFFDT    = (SELECT MIN(SALEJBCD1.EFFDT) FROM PS_JOB SALEJBCD1
            WHERE SALEJBCD.EMPLID = SALEJBCD1.EMPLID 
            AND SALEJBCD.EMPL_RCD = SALEJBCD1.EMPL_RCD
            AND SALEJBCD1.JOBCODE IN (SELECT DISTINCT SALVLDJB.JOBCODE FROM PS_GEX_JOBCODE_TBL SALVLDJB 
                                    WHERE SALVLDJB.EFFDT = (SELECT MAX(SALVLDJB1.EFFDT) FROM PS_GEX_JOBCODE_TBL SALVLDJB1
                                                        WHERE SALVLDJB1.GEX_BONUS_GROUP = SALVLDJB.GEX_BONUS_GROUP
                                                        AND SALVLDJB1.JOBCODE = SALVLDJB.JOBCODE
                                                        AND SALVLDJB1.EFFDT <= SYSDATE)
                                    AND SALVLDJB.STATUS='A' !ISDVVXK  GEXHR_848_E161362_BONUS2014                                                        
                                    AND SALVLDJB.GEX_BONUS_GROUP = $Gex_Dept_bonus_Group)
            AND SALEJBCD1.EFFDT >= $Salary_Effdt)
AND SALEJBCD.EFFSEQ = (SELECT MAX(SALEJBCD2.EFFSEQ) FROM PS_JOB SALEJBCD2
            WHERE SALEJBCD.EMPLID 	= SALEJBCD2.EMPLID
            AND SALEJBCD.EMPL_RCD 	= SALEJBCD2.EMPL_RCD
            AND SALEJBCD.EFFDT 		= SALEJBCD2.EFFDT
            AND SALEJBCD.JOBCODE 	= SALEJBCD2.JOBCODE)
End-Select
!***********************************************************************
End-Procedure Get-Salary-Elig-Jobcode
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Bonus-group
!***********************************************************************
Let $Gex_Dept_bonus_Group = ''
Begin-Select
DPTBL.GEX_RX_BON_GROUP

	Let $Gex_Dept_bonus_Group = &DPTBL.GEX_RX_BON_GROUP
	
FROM PS_GEX_DEPT_TBL DPTBL 
WHERE DPTBL.EFFDT = (SELECT MAX(DPTBL1.EFFDT) FROM PS_GEX_DEPT_TBL DPTBL1 
			WHERE DPTBL.SETID = DPTBL1.SETID
			AND DPTBL1.DEPTID = DPTBL.DEPTID
			AND DPTBL1.EFFDT<=SYSDATE)
AND DPTBL.SETID = 'COMMN'			
AND DPTBL.DEPTID = $Max_Duration_Deptid
			
End-Select
!***********************************************************************
End-Procedure Get-Bonus-group
!***********************************************************************
!***********************************************************************
Begin-Procedure Check-Jobcode-Eligibility
!***********************************************************************
Let $Eligible_Jobcode = 'N'
Begin-Select 
'YB'


	Let $Eligible_Jobcode = 'YB'
	
FROM PS_JOB JB
WHERE JB.EMPLID = $Emplid
AND JB.EMPL_RCD = #Empl_Rcd_Nbr
AND JB.EFFDT BETWEEN $FromDate and $Thrudate
AND JB.JOBCODE IN (SELECT Distinct GJB.JOBCODE FROM PS_GEX_JOBCODE_TBL GJB WHERE 
		   GJB.EFFDT = (SELECT MAX(GJB1.EFFDT) FROM PS_GEX_JOBCODE_TBL GJB1 
		   		WHERE GJB1.SETID = GJB.SETID
		   		AND GJB.GEX_BONUS_GROUP = GJB1.GEX_BONUS_GROUP
		   		AND GJB.JOBCODE = GJB1.JOBCODE
		   		AND GJB1.EFFDT<=SYSDATE)
		   AND GJB.STATUS='A' !ISDVVXK  GEXHR_848_E161362_BONUS2014		        
		   AND GJB.GEX_BONUS_GROUP = $Gex_Dept_bonus_Group )
End-Select
!***********************************************************************
End-Procedure Check-Jobcode-Eligibility
!***********************************************************************

!***********************************************************************
!***********************************************************************
Begin-Procedure Get-Bonus-RunControl
!***********************************************************************
Let $Bonus_Group_Found = 'N'
Begin-Select
GEXBNGRP.GEX_RX_BON_GROUP

	Let $Bonus_Group_Found = 'Y'

FROM PS_GEX_RC_RX_BONUS GEXBNGRP
WHERE GEXBNGRP.OPRID		= $Prcs_Oprid
AND GEXBNGRP.RUN_CNTL_ID	= $Prcs_Run_Cntl_Id
AND GEXBNGRP.GEX_RX_BON_GROUP 	= $Gex_Dept_bonus_Group
End-Select
!***********************************************************************
End-Procedure Get-Bonus-RunControl
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-Bonus-Group-Runcontrol
!***********************************************************************
Let $Bonus_Group_In_Runcontrol = 'N'
Begin-Select
GEXBOSNGRP.GEX_RX_BON_GROUP

	Let $Bonus_Group_In_Runcontrol = 'Y'

FROM PS_GEX_RC_RX_BONUS GEXBOSNGRP
WHERE GEXBOSNGRP.OPRID		= $Prcs_Oprid
AND GEXBOSNGRP.RUN_CNTL_ID	= $Prcs_Run_Cntl_Id
End-Select
!***********************************************************************
End-Procedure Check-Bonus-Group-Runcontrol
!***********************************************************************


!***********************************************************************
Begin-Procedure Get-AccountCd-Descr
!***********************************************************************
Begin-Select
ACCT.DESCRSHORT

	Let $Account_Code_Descr = &ACCT.DESCRSHORT

FROM PS_GEX_ACCT_CD_TBL ACCT 
WHERE ACCT.EFFDT = (SELECT MAX(ACCT1.EFFDT) FROM PS_GEX_ACCT_CD_TBL ACCT1 
		    WHERE ACCT.ACCT_CD = ACCT1.ACCT_CD
		    AND ACCT.EFFDT<=SYSDATE)
AND ACCT.ACCT_CD = $Acctcd 
End-Select
!***********************************************************************
End-Procedure Get-AccountCd-Descr
!***********************************************************************

!***********************************************************************
Begin-Procedure Get-Jobcode-Descr-Write
!***********************************************************************
Begin-Select
JBCDDES.DESCR

	Let $Jobcode_Descr = &JBCDDES.DESCR
	
FROM PS_JOBCODE_TBL JBCDDES 
WHERE JBCDDES.EFFDT = (SELECT MAX(JDSR.EFFDT) FROM PS_JOBCODE_TBL JDSR 
			WHERE JDSR.SETID = JBCDDES.SETID 
			AND JDSR.JOBCODE = JBCDDES.JOBCODE 
			AND JDSR.EFFDT <= SYSDATE)

AND JBCDDES.JOBCODE = $Jobcd
AND JBCDDES.SETID = 'COMMN'

End-Select 
!***********************************************************************
End-Procedure Get-Jobcode-Descr-Write
!***********************************************************************
!***********************************************************************
begin-procedure Get-Values
!***********************************************************************

   
end-procedure
!***********************************************************************
Begin-Procedure Process-Array
!***********************************************************************
#debug8 Show '#JobCode_30170_Count : '#JobCode_30170_Count
#debug8 Show '#Jobcode_30170_Bonus_Sum : '#Jobcode_30170_Bonus_Sum
#debug8 Show '#JobCode_30299_Count :'#JobCode_30299_Count
#debug8 Show '#All_Rows_Count  : '#All_Rows_Count 
Do Get-RC-Emplid !Vendaxg Added for Bonus Processing 2011 on 05/27/2011
	
If  #JobCode_30170_Count <> 0 
	Let #Average_bonus_30170 = #Jobcode_30170_Bonus_Sum / #JobCode_30170_Count
Else 
	Let #Average_bonus_30170 = 0 
End-if	
#debug8 Show 'Average_Bonus_30170 : '#Average_Bonus_30170
  
Let #Allrows = 1
While #Allrows <= #All_Rows_Count 
        !Vendaxg Modified for Bonus Proecssing 2011 on 05/27/2011 - Begin
	!Get $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd $Name #annual_rt #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Current_Bonus_Amt $Reports_to $Last_Hire_Dt   from All_Rows(#Allrows)
	Get $Emplid #Empl_Rcd_Nbr #Year $Deptid $Empl_Type $max_duration_deptid $Jobcd $Name $Gex_Position_Nbr #annual_rt #Current_Min_Pct #Current_Tar_Pct #Current_Max_Pct #Current_Bonus_Amt $Reports_to $Last_Hire_Dt $Gex_Dept_bonus_Group #Gex_Bonus_Pct_Used $Grade #Std_Hours from All_Rows(#Allrows)
	#debug8 Show  'Final get: '$Emplid ':'  #Empl_Rcd_Nbr  ':'  #Year  ':' $Deptid  ':' $Empl_Type  ':'  $max_duration_deptid ':'  $Jobcd ':'  $Name  ':' $Last_Hire_Dt  ':'  #Gex_Bonus_Pct_Used
	!Vendaxg Modified for Bonus Proecssing 2011 on 05/27/2011 - End
	If $Jobcd = '30299'
		Let #Current_Bonus_Amt = #Average_bonus_30170
	  	Let #J30299 = 1
	  	While #J30299 <= #JobCode_30299_Count
	  	
	  		Get $J30299_Emplid #J30299_Empl_Rcd_Nbr #J30299_Year $J30299_Deptid $J30299_Empl_Type $J30299_max_duration_deptid $J30299_Jobcd #J30299_Duration #J30299_Standard_Hrs_Eligible_Duration from Jobcode30299(#J30299)
	  		If ($Emplid = $J30299_Emplid) AND 
	  			(#Empl_Rcd_Nbr = #J30299_Empl_Rcd_Nbr) AND
	  				(#Year = #J30299_Year) AND
	  					($Deptid  =$J30299_Deptid ) AND 
	  						($Empl_Type = $J30299_Empl_Type) AND 
	  							($max_duration_deptid = $J30299_max_duration_deptid) AND
	  								($Jobcd = $J30299_Jobcd)
	  		
	  			Let #Current_Bonus_Amt = (#Current_Bonus_Amt * #J30299_Duration) / #DurfromRctl
	  			Let #Current_Bonus_Amt = (#Current_Bonus_Amt * #J30299_Standard_Hrs_Eligible_Duration) / #DurfromRctl
	  			#debug8 Show '*****************************************************************************************************************************************'
	  			#debug8 Show 'Emplid : '$J30299_Emplid ' Empl Rcd : '#J30299_Empl_Rcd_Nbr ' Bonus Year :'#J30299_Year ' Home Dept : '$J30299_Deptid ' Empl Type :'$J30299_Empl_Type ' Budget Dept : '$J30299_max_duration_deptid ' Jobcode :' $J30299_Jobcd ' Jobcode Duration :'#J30299_Duration ' Std Hrs Duration :'#J30299_Standard_Hrs_Eligible_Duration
	  			#debug8 Show '*****************************************************************************************************************************************'
	  		End-If
	  								
	  					
	  	
	  		
	  		
	  		Let #J30299 = #J30299 + 1
			  	
		End-While
		
	Else
	
	End-if
	If $RC_EmplID_Found = 'N'
		#debug8 Show '*****************************************************************************************************************************************'
		#debug8 Show 'Emplid : '$Emplid ' Empl Rcd : '#Empl_Rcd_Nbr ' Bonus Year :'#Year ' Home Dept : '$Deptid ' Empl Type :'$Empl_Type ' Budget Dept : '$max_duration_deptid ' Jobcode :' $Jobcd ' Name :'$Name ' Annual Rate: '  #annual_rt ' Bonus Minimum % :'#Current_Min_Pct ' Targer % : '#Current_Tar_Pct ' Maximum % :'#Current_Max_Pct ' Bonus Amount :'#Current_Bonus_Amt ' Retorts To: '$Reports_to ' Hire date : '$Last_Hire_Dt 
		#debug8 Show 'Position Nbr : '$Gex_Position_Nbr ' Bonus Group : '$Gex_Dept_bonus_Group ' Gex_Bonus_Pct_Used : ' #Gex_Bonus_Pct_Used ' Grade :'$Grade
		#debug8 Show '*****************************************************************************************************************************************'
	       !Vendaxg Added for Bonus Processing 2011 on 06/13/2011 - Begin
		Do Check-Delegation
		If $Delegation_Found = 'Y'
			Let $Reports_to = $New_Reports_to
		Else
		
			Do Check-Valid-Reports-To
			Show 'Employee Reports to : '$Reports_to
			If $Employee_Found_in_Position = 'Y'
				Show 'First No Reports To position found for Position Number: '$Reports_to
			Else
				Let #k = 1
				while #k < 5 
					Do Get-Position-Reports-To
					Let $Reports_to = $Reports_to_Position
					Do Check-Valid-Reports-To
					If $Employee_Found_in_Position = 'Y'
						!Let $Reports_to = $Reports_to_Position
						Show 'Reports To position found for Position Number: '$Reports_to ' #k :' #k
						Break
					Else
						!Let $Reports_to = $Reports_to_Position
						Show 'No Reports To position found for Position Number: '$Reports_to ' #k :'#k
					End-if
					Let #k = #k + 1
				End-while
			End-if
		End-if
		!Vendaxg Added for Bonus Processing 2011 on 06/13/2011 - End
	
		Do Check-Bonus-Already-Calculated
										
		If $Bonus_Calculated = 'Y'
			Do Update-Bonus-Amount
		Else
			Do P270-Insert-GEX-Empl-Bonus-PCT
		End-if
		Do write-file	
		
	Else
		Do Check-RC-Emplid
		If $RC_EmplID_Found_Processing = 'Y'
			#debug8 Show '*****************************************************************************************************************************************'
			#debug8 Show 'Emplid : '$Emplid ' Empl Rcd : '#Empl_Rcd_Nbr ' Bonus Year :'#Year ' Home Dept : '$Deptid ' Empl Type :'$Empl_Type ' Budget Dept : '$max_duration_deptid ' Jobcode :' $Jobcd ' Name :'$Name ' Annual Rate: '  #annual_rt ' Bonus Minimum % :'#Current_Min_Pct ' Targer % : '#Current_Tar_Pct ' Maximum % :'#Current_Max_Pct ' Bonus Amount :'#Current_Bonus_Amt ' Retorts To: '$Reports_to ' Hire date : '$Last_Hire_Dt 
			#debug8 Show 'Position Nbr : '$Gex_Position_Nbr ' Bonus Group : '$Gex_Dept_bonus_Group ' Gex_Bonus_Pct_Used : ' #Gex_Bonus_Pct_Used ' Grade :'$Grade
			#debug8 Show '*****************************************************************************************************************************************'
			!Vendaxg Added for Bonus Processing 2011 on 06/13/2011 - Begin
				Do Check-Valid-Reports-To
				Show 'Employee Reports to : '$Reports_to
				If $Employee_Found_in_Position = 'Y'
					Show 'First No Reports To position found for Position Number: '$Reports_to
				Else
					Let #k = 1
					while #k < 5 
						Do Get-Position-Reports-To
						Let $Reports_to = $Reports_to_Position
						Do Check-Valid-Reports-To
						If $Employee_Found_in_Position = 'Y'
							!Let $Reports_to = $Reports_to_Position
							Show 'Reports To position found for Position Number: '$Reports_to ' #k :' #k
							Break
						Else
							!Let $Reports_to = $Reports_to_Position
							Show 'No Reports To position found for Position Number: '$Reports_to ' #k :'#k
						End-if
						Let #k = #k + 1
					End-while
				End-if
			!Vendaxg Added for Bonus Processing 2011 on 06/13/2011 - End
	
			Do Check-Bonus-Already-Calculated
										
			If $Bonus_Calculated = 'Y'
				Do Update-Bonus-Amount
			Else
				Do P270-Insert-GEX-Empl-Bonus-PCT
			End-if
			Do write-file	
			
		End-if
	
	End-if
	Let #Allrows = #Allrows + 1
End-while
 
!***********************************************************************
End-Procedure Process-Array
!***********************************************************************

!***********************************************************************
Begin-Procedure Check-Bonus-Already-Calculated
!***********************************************************************
Let $Bonus_Calculated = 'N'
Begin-Select
BON.EMPLID

	Let $Bonus_Calculated = 'Y'

FROM PS_GEX_EMPL_BONUS BON 
WHERE BON.EMPLID	= $Emplid
AND BON.EMPL_RCD	= #Empl_Rcd_Nbr
AND BON.GEX_BONUS_YEAR	= #Year
AND BON.DEPTID		= $Deptid
AND BON.EMPL_TYPE	= $Empl_Type 
AND BON.BUDGET_DEPTID	= $max_duration_deptid
AND BON.JOBCODE 	= $Jobcd

End-Select
!***********************************************************************
End-Procedure Check-Bonus-Already-Calculated
!***********************************************************************

!***********************************************************************
Begin-Procedure Update-Bonus-Amount
!***********************************************************************
If $Reports_to = ''
	Let $Reports_to = '00019333'
End-if
Begin-Sql

UPDATE PS_GEX_EMPL_BONUS BONUPD

SET BONUPD.GEX_MIN_BONUS_PCT = #Current_Min_Pct,
    BONUPD.GEX_TAR_BONUS_PCT = #Current_Tar_Pct,
    BONUPD.GEX_MAX_BONUS_PCT = #Current_Max_Pct,
    BONUPD.GEX_BONUS_AMT     = #Current_Bonus_Amt,
    BONUPD.ANNUAL_RT         = #Annual_Rt,
    BONUPD.GEX_FNAL_BONUS_AMT= #Current_Bonus_Amt,
    !Vendaxg Added for Bonus Processing 2011 0n 05/27/2011 - Begin
    BONUPD.POSITION_NBR      = $Gex_Position_Nbr,
    BONUPD.GEX_BONUS_GROUP   = $Gex_Dept_bonus_Group,
    BONUPD.GEX_BONUS_PCT_USED= #Gex_Bonus_Pct_Used,
    !Vendaxg Added for Bonus Processing 2011 0n 05/27/2011 - End
    BONUPD.REPORTS_TO 	     = $Reports_to,
    BONUPD.GEX_BONUS_STATUS  = $Update_Status,
    BONUPD.GRADE  = $Grade
    
WHERE BONUPD.EMPLID		= $Emplid
AND BONUPD.EMPL_RCD		= #Empl_Rcd_Nbr
AND BONUPD.GEX_BONUS_YEAR	= #Year
AND BONUPD.DEPTID		= $Deptid
AND BONUPD.EMPL_TYPE		= $Empl_Type
AND BONUPD.BUDGET_DEPTID	= $Max_Duration_Deptid
AND BONUPD.JOBCODE 		= $Jobcd

End-Sql
!***********************************************************************
End-Procedure Update-Bonus-Amount
!***********************************************************************

!***********************************************************************
Begin-Procedure P270-Insert-GEX-Empl-Bonus-PCT
!***********************************************************************

#debug8 Show 'P270-Insert-GEX-Empl-Bonus  Emplid : '$Emplid ' Empl Rcd : '#Empl_Rcd_Nbr ' Bonus Year :'#Year ' Home Dept : '$Deptid ' Empl Type :'$Empl_Type ' Budget Dept : '$max_duration_deptid ' Jobcode :' $Jobcd ' Name :'$Name ' Annual Rate: '  #annual_rt ' Bonus Minimum % :'#Current_Min_Pct ' Targer % : '#Current_Tar_Pct ' Maximum % :'#Current_Max_Pct ' Bonus Amount :'#Current_Bonus_Amt ' Retorts To: '$Reports_to ' Hire date : '$Last_Hire_Dt
If $max_duration_deptid = ''
Let $max_duration_deptid = 'Dumy'
End-if
If $Reports_to = ''
	Let $Reports_to = '00019333'
End-if

If $Grade = ''
	Let $Grade = ' '
End-if 
Begin-SQL  
!ISDVVXK -- GEXHR_848_E161362_BONUS2014 -Begins
!Insert Into ps_gex_empl_bonus 
!  (EMPLID,EMPL_RCD,GEX_BONUS_YEAR,DEPTID,
! EMPL_TYPE,BUDGET_DEPTID,JOBCODE,POSITION_NBR,NAME,ANNUAL_RT,GEX_MIN_BONUS_PCT,GEX_TAR_BONUS_PCT,GEX_MAX_BONUS_PCT,
! GEX_EMPL_OVERRIDE,GEX_CSI_ADJ_PCT,GEX_BONUS_PCT_USED,GEX_BONUS_STATUS,GEX_BONUS_AMT,GEX_FNAL_BONUS_AMT,GEX_BONUS_GROUP,
! GEX_BONUS_AWARD_DT,GEX_BONUS_IND,REPORTS_TO,COMMENTS_BY_NAME,STD_HOURS,GRADE,HOURLY_RT,GEX_WEEKLY_RT,GEX_WEEKLY_RT_1_5,GEX_WEEKLY_RT_2,SUBMITTED,SUBMITTED_DT,APPROVER_ID,	
!APPROVED,APPROVEDTTM,PROCESSED,PROCESS_DT,COMPLETE_FLAG,COMMENTS)
!    Values ($Emplid,#Empl_Rcd_Nbr,#Year,$Deptid,$Empl_Type,$Max_Duration_Deptid,$Jobcd,$Gex_Position_Nbr,$Name,#Annual_Rt,#Current_Min_Pct,
!           !#Current_Tar_Pct,#Current_Max_Pct ,'N',0,#Gex_Bonus_Pct_Used,'2',#Current_Bonus_Amt,#Current_Bonus_Amt,$Gex_Dept_bonus_Group,null,'B',$Reports_to, ' ',0,$Grade,0,0,0,0,' ',sysdate,' ',' ',sysdate,' ',sysdate,' ',' ') 
!           #Current_Tar_Pct,#Current_Max_Pct ,'N',0,#Gex_Bonus_Pct_Used,'2',#Current_Bonus_Amt,#Current_Bonus_Amt,$Gex_Dept_bonus_Group,null,'B',$Reports_to, ' ',#Std_Hours,$Grade,0,0,0,0,' ',sysdate,' ',' ',sysdate,' ',sysdate,' ',' ') 
Insert Into ps_gex_empl_bonus 
  (EMPLID,EMPL_RCD,GEX_BONUS_YEAR,DEPTID,
 EMPL_TYPE,BUDGET_DEPTID,JOBCODE,POSITION_NBR,NAME,ANNUAL_RT,GEX_MIN_BONUS_PCT,GEX_TAR_BONUS_PCT,GEX_MAX_BONUS_PCT,
 GEX_EMPL_OVERRIDE,GEX_CSI_ADJ_PCT,GEX_BONUS_PCT_USED,GEX_BONUS_PCT2_USE,GEX_BONUS_STATUS,GEX_BONUS_AMT,GEX_BONUS_AMT2,GEX_FNAL_BONUS_AMT,GEX_BONUS_GROUP,
 GEX_BONUS_AWARD_DT,GEX_BONUS_IND,REPORTS_TO,COMMENTS_BY_NAME,STD_HOURS,GRADE,HOURLY_RT,GEX_WEEKLY_RT,GEX_WEEKLY_RT_1_5,GEX_WEEKLY_RT_2,SUBMITTED,SUBMITTED_DT,APPROVER_ID,	
APPROVED,APPROVEDTTM,PROCESSED,PROCESS_DT,COMPLETE_FLAG,PROCESS_NAME,COMMENTS)
    Values ($Emplid,#Empl_Rcd_Nbr,#Year,$Deptid,$Empl_Type,$Max_Duration_Deptid,$Jobcd,$Gex_Position_Nbr,$Name,#Annual_Rt,#Current_Min_Pct,
           !#Current_Tar_Pct,#Current_Max_Pct ,'N',0,#Gex_Bonus_Pct_Used,'2',#Current_Bonus_Amt,#Current_Bonus_Amt,$Gex_Dept_bonus_Group,null,'B',$Reports_to, ' ',0,$Grade,0,0,0,0,' ',sysdate,' ',' ',sysdate,' ',sysdate,' ',' ') 
           #Current_Tar_Pct,#Current_Max_Pct ,'N',0,#Gex_Bonus_Pct_Used,0,'2',#Current_Bonus_Amt,0,#Current_Bonus_Amt,$Gex_Dept_bonus_Group,null,'B',$Reports_to, ' ',#Std_Hours,$Grade,0,0,0,0,' ',sysdate,' ',' ',sysdate,' ',sysdate,' ','GEXPY212',' ')            
!ISDVVXK -- GEXHR_848_E161362_BONUS2014 - Ends           
End-SQL
!***********************************************************************
End-Procedure P270-Insert-GEX-Empl-Bonus-PCT
!***********************************************************************

!Vendaxg Added for Bonus Processing 2011 on 05/26/2011
!***********************************************************************
Begin-Procedure Get-RC-Emplid
!***********************************************************************
Let $OprID                = '''' || $Prcs_OprID       || ''''
Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
Let $RC_EmplID_Found = 'N'
 
Begin-Select
GEX_RC_EMPLID.EMPLID
  
  Let $Run_Emplid = Ltrim(Rtrim(&GEX_RC_EMPLID.EMPLID,' '),' ')
  If $Run_Emplid <> ''
  	Let $RC_EmplID_Found = 'Y'
  End-if

From  PS_GEX_RC_BON_EMPL GEX_RC_EMPLID
Where GEX_RC_EMPLID.OPRID                    = [$OprID]
And   GEX_RC_EMPLID.RUN_CNTL_ID              = [$Run_Cntl_ID]

End-Select

!***********************************************************************
End-Procedure Get-RC-Emplid
!***********************************************************************


!***********************************************************************
Begin-Procedure Check-RC-Emplid
!***********************************************************************
Let $OprID                = '''' || $Prcs_OprID       || ''''
Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
Let $RC_EmplID_Found_Processing = 'N'
 
Begin-Select
GEX_RC_EMPLID1.EMPLID

  Let $RC_EmplID_Found_Processing = 'Y'

From  PS_GEX_RC_BON_EMPL GEX_RC_EMPLID1

Where GEX_RC_EMPLID1.OPRID                    = [$OprID]
And   GEX_RC_EMPLID1.RUN_CNTL_ID              = [$Run_Cntl_ID]
And   GEX_RC_EMPLID1.EMPLID                   = $Emplid
End-Select

!***********************************************************************
End-Procedure Check-RC-Emplid
!***********************************************************************
!***********************************************************************
Begin-Procedure Gex-EE-Exception-Pct
!***********************************************************************
Let $Exception_Found = 'N' 
Let $PCTFOUND='N'
Let #current_min_pct = 0
Let #current_tar_pct = 0
Let #current_max_pct = 0
Let #current_mid_one = 0
Let #current_mid_two = 0
Let #current_mid_three = 0!ISDVVXK - GEXHR_848_E1944_BONUS2015  
Begin-Select
EXCP.GEX_MIN_BONUS_PCT 
EXCP.GEX_TAR_BONUS_PCT
EXCP.GEX_MAX_BONUS_PCT
 
      Let $PCTFOUND='Y'
      Let $Exception_Found = 'Y' 
      #debug8 Show 'Exception Bonus Percentage found : '$Exception_Found
      Let #current_min_pct   = &EXCP.GEX_MIN_BONUS_PCT  
      Let #current_tar_pct   = &EXCP.GEX_TAR_BONUS_PCT
      Let #current_max_pct   = &EXCP.GEX_MAX_BONUS_PCT

      !1289792 - GEXHR_BONUS2017 Begins      
      !Let #current_mid_one     = (#current_min_pct + #current_tar_pct) / 2
      !Let #current_mid_two     = (#current_tar_pct + #current_max_pct) / 2
      Let #current_mid_one     = (#current_tar_pct - #current_min_pct )
      Let #current_mid_two     = (#current_max_pct - #current_tar_pct )
      !1289792 - GEXHR_BONUS2017 Ends

      !ISDVVXK - GEXHR_848_E1944_BONUS2015 Begins
      !1289792 - GEXHR_BONUS2017 Begins 
      !Let #current_mid_three   = (#current_tar_pct - #current_min_pct)
      Let #current_mid_three   = #current_max_pct
      !1289792 - GEXHR_BONUS2017 Ends
      !ISDVVXK - GEXHR_848_E1944_BONUS2015 Ends
 
FROM PS_GEX_TM_BON_EXCP EXCP 
WHERE  EXCP.EMPLID = $Emplid
AND EXCP.YEAR = #Current_Year
AND EXCP.GEX_BONUS_GROUP = $Gex_Dept_bonus_Group
AND EXCP.EMPL_RCD = #Empl_Rcd_Nbr

end-select
!***********************************************************************
End-Procedure Gex-EE-Exception-Pct
!***********************************************************************
!***********************************************************************
Begin-Procedure Print-Report-Mode2
!***********************************************************************
If $RC_EmplID_Found = 'Y'
Let $WhereClause = 'AND REPORT.EMPLID IN ( SELECT DISTINCT(T.EMPLID) FROM PS_GEX_RC_BON_EMPL T WHERE T.OPRID =' || '''' ||$Prcs_OprID || '''' || 'AND T.RUN_CNTL_ID = '|| '''' || $Prcs_Run_Cntl_ID ||'''' || ')'
Else
Let $WhereClause = ''
End-if
Let #type_previous_bonus = 0
Let #type_current_bonus = 0
Let #deptid_previous_bonus = 0
Let #deptid_current_bonus = 0
Let #report_previous_bonus = 0
Let #report_current_bonus = 0
Let #type-count = 0
Let #deptid-count = 0

Begin-Select
REPORT.DEPTID     ()  On-Break  Level=1
                           Print=Never                           
REPORT.JOBCODE    ()  On-Break  Level=2
                           Print=Never
                           !Before=JobCode-new-page
                           !Before=New-Page
REPORT.EMPL_TYPE  ()  On-Break  Level=4
                           Print=Never
                           !Before=New-Page
                           Before=P280-Empl-Type-Totals
REPORT.NAME
REPORT.EMPLID
REPORT.EMPL_RCD
REPORT.ANNUAL_RT
REPORT.GEX_MIN_BONUS_PCT                           
REPORT.GEX_TAR_BONUS_PCT
REPORT.GEX_MAX_BONUS_PCT
REPORT.GEX_BONUS_PCT_USED
REPORT.GEX_BONUS_AMT
REPORT.BUDGET_DEPTID
REPORT.GEX_FNAL_BONUS_AMT
REPORT.GEX_WEEKLY_RT_1_5
REPORT.GEX_WEEKLY_RT_2
REPORT.HOURLY_RT
REPORT.GEX_WEEKLY_RT

	Let $Emplid    		= &REPORT.EMPLID
  	Let #empl_rcd_nbr 	= &REPORT.EMPL_RCD
  	Let $Deptid    		= &REPORT.DEPTID
	!Let $Last_hire_Dt	= &J2.LAST_HIRE_DT
  	Let $Empl_Type 		= &REPORT.EMPL_TYPE
  	!Let $Hire_Dt   		= &e2.hire_dt
  	Let $Name      		= &REPORT.NAME
  	Let #Current_Min_Pct    = &REPORT.GEX_MIN_BONUS_PCT
  	Let #Current_Tar_Pct    = &REPORT.GEX_TAR_BONUS_PCT
  	Let #Current_Max_Pct    = &REPORT.GEX_MAX_BONUS_PCT
  	Let #Current_Csi_adj_pct= &REPORT.GEX_BONUS_PCT_USED
  	Let #Current_Bonus_Amt  = &REPORT.GEX_BONUS_AMT
	Let $Budget_Deptid 	= &REPORT.BUDGET_DEPTID
	Let $Calculate_JobCode	= &REPORT.JOBCODE
	Let #Annual_rt 		= &REPORT.ANNUAL_RT
  	Let #Final_Bonus_Amount	= &REPORT.GEX_FNAL_BONUS_AMT
  	Let #weekly_rt_1	= &REPORT.GEX_WEEKLY_RT_1_5
  	Let #weekly_rt_2 	= &REPORT.GEX_WEEKLY_RT_2
  	Let #hourly_rt 		= &REPORT.HOURLY_RT
  	Let #weekly_rt 		= &REPORT.GEX_WEEKLY_RT
  	Let $jobcode            = &REPORT.JOBCODE
  	Add 1                   To #type-count
    	Add 1                   To #deptid-count
  	Add #previous_bonus_amt To #type_previous_bonus
    	Add #Final_Bonus_Amount  To #type_current_bonus
		
    	Add #previous_bonus_amt To #deptid_previous_bonus
    	Add #Final_Bonus_Amount  To #deptid_current_bonus

    	Add #previous_bonus_amt To #report_previous_bonus
       	Add #Final_Bonus_Amount  To #report_current_bonus
       	Show 'Print P290-Print-Record'
  	Do P290-Print-Record
                           
FROM PS_GEX_EMPL_BONUS REPORT
WHERE REPORT.GEX_BONUS_YEAR = #Current_Year
AND REPORT.GEX_BONUS_IND = 'B'
[$WhereClause]
!AND REPORT.EMPLID IN ( SELECT DISTINCT(T.EMPLID) FROM PS_GEX_RC_GEXPY212 T )
Order By REPORT.DEPTID,REPORT.JOBCODE, REPORT.EMPL_TYPE,REPORT.NAME
!Order By j2.jobcode,pd3.name, j2.company, b.deptid, b.empl_type
End-Select
!***********************************************************************
End-Procedure Print-Report-Mode2
!***********************************************************************
!***********************************************************************
Begin-Procedure Check-Valid-Reports-To
!***********************************************************************
Let $Employee_Found_in_Position = 'N'
Begin-Select
POS.EMPLID

	Let $Employee_Found_in_Position = 'Y'

FROM PS_JOB POS 
WHERE POS.EFFDT = (SELECT MAX(POS1.EFFDT) FROM PS_JOB POS1 
			WHERE POS.EMPLID = POS1.EMPLID 
			AND   POS.EMPL_RCD = POS1.EMPL_RCD
			AND   POS1.EFFDT <=SYSDATE)
AND POS.EFFSEQ  = (SELECT MAX(POS2.EFFSEQ) FROM PS_JOB POS2
			WHERE POS.EMPLID = POS2.EMPLID
			AND   POS.EMPL_RCD = POS2.EMPL_RCD
			AND   POS.EFFDT = POS2.EFFDT)
AND POS.EMPL_STATUS IN ('A','L','P','S')			
AND POS.POSITION_NBR = $Reports_to
End-Select
!***********************************************************************
End-Procedure Check-Valid-Reports-To
!***********************************************************************
!***********************************************************************
Begin-Procedure Get-Position-Reports-To
!***********************************************************************
Let $Reports_to_Position = ''
Begin-Select
REP.REPORTS_TO

	Let $Reports_to_Position = &REP.REPORTS_TO
	
FROM PS_POSITION_DATA REP
WHERE REP.EFFDT = (SELECT MAX(REP1.EFFDT) FROM PS_POSITION_DATA REP1 	
			WHERE REP.POSITION_NBR = REP1.POSITION_NBR
			AND REP1.EFFDT <= SYSDATE)
AND REP.POSITION_NBR = $Reports_to			

End-Select

!***********************************************************************
End-Procedure Get-Position-Reports-To
!***********************************************************************
!***********************************************************************
Begin-Procedure Check-Delegation
!***********************************************************************
Let $Delegation_Found = 'N'
Begin-Select
DELE.ORIGINATOR_ID

	Let $Delegation_Found = 'Y'
	Let $New_Reports_to = &DELE.ORIGINATOR_ID
	
FROM PS_GEX_APPR_DELG DELE
WHERE DELE.MANAGER_ID = $Reports_to
AND   DELE.DEPTID     = $Deptid
AND   DELE.GEX_PROCESSNAME = '002'
AND   DELE.END_DATE >= sysdate
End-Select
!***********************************************************************
End-Procedure Check-Delegation
!***********************************************************************
!***********************************************************************
Begin-Procedure JobCode-new-page
!***********************************************************************
New-Page
!***********************************************************************
End-Procedure JobCode-new-page
!***********************************************************************
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx913.sqc'  !Get union code multiple row table
#include 'gexxx916.sqc'  !Get jobcode multiple row table
#include 'gexxx930.sqc'  !Get empl type multiple row table
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx950.sqc'  !Get SQRW run controls

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'getcodta.sqc'  !Get-Company-Data
#include 'getdptnm.sqc'  !Get-Department-Name
#include 'getactnm.sqc'  !Get-Acct-cd-descr procedure
#include 'askaod.sqc'    !Get AsOfDate
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
#Include 'getposnm.sqc'  !Get-Position-Title  
