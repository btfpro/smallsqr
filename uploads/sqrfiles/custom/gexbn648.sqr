!***********************************************************************
! gexbn648: Vendor Interface to Buck/UNUM for Voluntary Benefits       *
!           Indicative Data                                            *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *        
! gexbn648 : UNUM Voluntary Benefits Indicative Data                   *
!                                                                      *        
! Narrative: Voluntary Benefits will be offered via UNUM’s plane.biz   *
!            portal for qualified team members.  A new interface needs *
!            to be developed to provide UNUM’s plane.biz group with the*
!            information needed to present the plane.biz portal to     *
!            qualified Giant Eagle Team Members.This sqr will be run   *
!            annually to provide UNUM/Plane.biz with information       *
!            required for the annual voluntary benefits open enrollment*
!            timing of which will coincide with the Giant Eagle CORE   *
!            open enrollment period.                                   *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                                                                      *  
! SQL Tables:           PS_JOB                                         *
!                       PS_PERSONAL_DATA                               *
!                       PS_BEN_PROG_PARTIC                             *
!                       PS_GEX_EMPLID_MAPP                             *
!                                                                      *
! Written by:           Vahini Katta                                   *       
!                                                                      *
! Normally Run:         Annual                                         *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS      DATE            DESCRIPTION OF THE CHANGE              *
!***********************************************************************
! ISDVVXK       05/02/2011      Initial Development                    *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'

Begin-Report
#debug9 Show 'Begin-Report'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc
  
  show ' '
  display 'Start Run Time: ' noline
  show $AsofNow
  Do Initialization
  Do Open-File
  Do Write_Header
 
  Do Get-Pay-End-Dt
  
  Do Main-Process
  Do Close-File
  
  show ' '
  display 'End Run Time: ' noline
  show $AsofNow
  do Stdapi-Term
    
End-Report


!-----------------------------------------------------------------------
! Function:    Initialization                                          -
! Description: Initialization                                          -
! Called By:   Begin-report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Initialization
#debug9 Show 'Initialization'
   
  Let $ReportID      = 'gexbn648'
  Let $ReportTitle   = 'UNUM Voluntary Benefits Interface'
  Let $delim = ','

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime
  
  If $prcs_process_instance = ''
    Do SQRW-Run-Controls
  Else
    Do Process-Scheduler-Run-Controls
  End-if
  
  If ltrim(Rtrim($AsofDate, ' '),' ') = ''
     Let $AsOfDate = $AsOfToday
     SHOW '$AsOfDate: ' $AsOfToday  
  End-If
  
  Let $Year = edit($AsofDate,'YYYY')
  Let #Year = to_number($Year)
  Let #Prev_Year = #Year - 1
  Let $Prev_Year = to_char(#Prev_Year)
  let $Calc_Age_Date  = '01-OCT-' || $year
  let $Prev_Year_End_Dt = '31-DEC-'||$Prev_Year
  
  show '$ASofDate        :' $AsofDate
  show '$Year            :' $Year
  show '$Prev_Year       :' $Prev_Year
  show '$Calc_Age_Date   :' $Calc_Age_Date
  show '$Prev_Year_End_Dt:' $Prev_Year_End_Dt
End-Procedure

!-----------------------------------------------------------------------
! Function:    SQRW-Run-Controls                                       -
! Description: SQRW-Run-Controls                                       -
! Called By:   Begin-report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure SQRW-Run-Controls
#debug9 Show 'SQRW-Run-Controls'

  Do Ask-As-Of-Date
  Move 'HRBATCH'  to $OprID
  Move 'gexbn648' to $Run_Cntl_ID
 
End-Procedure

!-----------------------------------------------------------------------
! Function:    Process-Scheduler-Run-Controls                          -
! Description: Fetches the run control data                            -
! Called By:   Begin-report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Process-Scheduler-Run-Controls
#debug9 Show 'Process-Scheduler-Run-Controls'
 	
  Let $OprID                = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
 
  Let $AsOfDate = &GEX_RC_BEN.AsOfDate
  SHOW '&GEX_RC_BEN.AsOfDate: ' &GEX_RC_BEN.AsOfDate
  If ltrim(Rtrim(&GEX_RC_BEN.AsOfDate, ' '),' ') = ''
     Let $AsOfDate = $AsOfToday
     SHOW '$AsOfDate: ' $AsOfToday  
  End-If

End-Procedure 

!-----------------------------------------------------------------------
! Function:    Get-Pay-End-Dt                                          -
! Description: Fetches the Previous Year Pay End Dt                    -
! Called By:   Begin-report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Pay-End-Dt
#debug9 Show 'Get-Pay-End-Dt'
Begin-Select
MAX(PAY_END_DT) &Pay_End_Dt

  show '&Pay_End_Dt :' &Pay_End_Dt

FROM PS_PAY_CALENDAR
WHERE PAY_END_DT<=$Prev_Year_End_Dt
End-Select
End-Procedure Get-Pay-End-Dt

!-----------------------------------------------------------------------
! Function:    Open-File                                               -
! Description: Opens the file                                          -
! Called By:   Initialization                                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Open-File
#debug9 Show 'P140-Open-File'
  #ifdef UNIX
   Let $File = '{OUTFILE}' || Lower($ReportID) || '.csv'
  #end-if
  #ifdef NT   
   LET $File = 'C:\TEMP\' || Lower($ReportID) || '.csv'  
  #end-if 
   OPEN $File as 1 
   for-writing
   record=1600    
   status = #Open
   !show '$File  '   $File 
    
   if (#Open <> 0)
      let $Error-Message = 'PROGRAM ABORTED - Problem opening file : ' || $File
      show $Error-Message
      STOP
   end-if
   
End-Procedure

!-----------------------------------------------------------------------
! Function:    Write_Header                                            -
! Description: Header file                                             -
! Called By:   Initialization                                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Write_Header
        
    Write 1 from 'EE_SSN'                      $delim
                 'EE_NUMBER'                   $delim
                 'EE_FNAME'                    $delim
                 'EE_LNAME'                    $delim
                 'EE_MI'                       $delim
                 'EE_CLASSDESC'                $delim
                 'EE_LOCATIONDESC'             $delim
                 'EE_GENDER'                   $delim
                 'EE_DOB'                      $delim
                 'EE_DOH'                      $delim
                 'EE_OCCUPATION'               $delim
                 'EE_SALARY'                   $delim
                 'EE_PAY_FREQUENCY'            $delim
                 'EE_HOURS_WORKED_PER_WEEK'    $delim
                 'HSTREET1'                    $delim
                 'HSTREET2'                    $delim
                 'HCITY'                       $delim
                 'HSTATE'                      $delim
                 'HZIP'                        $delim
                 'ELIGIBLE FOR ISTD '          $delim
                 'PAY CYCLE'                   $delim
                 
End-Procedure


!-----------------------------------------------------------------------
! Function:    Main-Process                                            -
! Description: Main-Process                                            -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Main-Process 
  
Begin-Select 
N.NATIONAL_ID,
G.EMPLID,
P.FIRST_NAME,
P.LAST_NAME,
P.MIDDLE_NAME,
J.REG_TEMP,
P.SEX,
P.BIRTHDATE,
J.LAST_HIRE_DT,
J.ANNUAL_RT,
P.ADDRESS1,
P.ADDRESS2,
P.CITY,
P.STATE,
P.POSTAL,
J.EMPLID,
J.EMPL_RCD,
J.COMPANY,
J.PAYGROUP,
J.POSITION_NBR,
B.BENEFIT_PROGRAM

          show '&J.EMPLID :' &J.EMPLID
          
          Move 'REG_TEMP'       to  $FieldName
  	  Move &J.REG_TEMP      to  $FieldValue
          do Read-Translate-Table
	  Move $XlatShortName   to $Reg_Temp
	  
	  Move 'Y' to $Write_To_File
	   
	  Move &Pay_End_Dt to $FromDate
	  Move &J.LAST_HIRE_DT to $Hire_Dt
	  Do convert-to-dtu-date($Hire_Dt,$Hire_Dt_dtu)
	  Do convert-to-dtu-date($AsOfDate, $asofdate_dtu)
	  Do dtu-diff-months($Hire_Dt_dtu, $asofdate_dtu, #diff_mths)
	  show '#diff_mths      :' #diff_mths
          If #diff_mths < 12
           Move &J.LAST_HIRE_DT to $FromDate
           show '&J.LAST_HIRE_DT :' &J.LAST_HIRE_DT
          end-if

          show '&J.REG_TEMP :' &J.REG_TEMP
          if &J.REG_TEMP='E' or &J.REG_TEMP='T'
             do Get-Pay-Cycles
             do Get-Average-Hours-Worked
          else
             Move 0 to $AVG_HOURS
          end-if
          show '$AVG_HOURS :' $AVG_HOURS
          do Get-Check-Dt
          do Get-Occupation
          do Get-STD-Plan-Indicator
          
          show '$Write_To_File :' $Write_To_File
          
          if $Write_To_File='Y'
              do Write-File
          end-if
           
	      	      
FROM PS_PERS_NID N,
     PS_PERSONAL_DATA P,
     PS_JOB J,
     PS_GEX_EMPLID_MAPP G,
     PS_BEN_PROG_PARTIC B
WHERE P.EMPLID=N.EMPLID
AND P.EMPLID=J.EMPLID
AND P.EMPLID=G.SSN
AND J.EMPL_RCD=G.EMPL_RCD
AND J.EMPLID=B.EMPLID
AND J.EMPL_RCD=B.EMPL_RCD
AND J.EFFDT=(SELECT MAX(J1.EFFDT) FROM PS_JOB J1
             WHERE J1.EMPLID=J.EMPLID
             AND J1.EMPL_RCD=J.EMPL_RCD
             AND J1.EFFDT<=$AsofDate)
AND J.EFFSEQ=(SELECT MAX(J2.EFFSEQ) FROM PS_JOB J2
              WHERE J2.EMPLID=J.EMPLID
              AND J2.EMPL_RCD=J.EMPL_RCD
              AND J2.EFFDT=J.EFFDT)
AND B.EFFDT =(SELECT MAX(B1.EFFDT) FROM PS_BEN_PROG_PARTIC B1
              WHERE B1.EMPLID = B.EMPLID
              AND B1.EMPL_RCD = B.EMPL_RCD
              AND B1.COBRA_EVENT_ID = B.COBRA_EVENT_ID
              AND B1.EFFDT    <= $AsofDate)               
AND J.EMPL_STATUS='A'  
AND J.COMPANY<>J.PAYGROUP
AND B.BENEFIT_PROGRAM NOT IN ('IND','DFT','C05')
AND J.REG_TEMP NOT IN ('M','O','S','V','W')
AND J.DEPTID<>'C909'            
!AND (TRUNC(MONTHS_BETWEEN($Calc_Age_Date,P.BIRTHDATE)/12)>=17 AND TRUNC(MONTHS_BETWEEN($Calc_Age_Date,P.BIRTHDATE)/12)<64) !vahini
AND (TRUNC(MONTHS_BETWEEN($Calc_Age_Date,P.BIRTHDATE)/12)>=17 AND TRUNC(MONTHS_BETWEEN($Calc_Age_Date,P.BIRTHDATE)/12)<69)  !vahini
ORDER BY J.EMPLID       
End-Select	 
End-Procedure Main-Process	

!-----------------------------------------------------------------------
! Function:    Get-STD-Plan-Indicator                                -
! Description: Check if TM is eligible for Voluntary STD Plan          -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-STD-Plan-Indicator
#debug9 Show 'Fetch-STD-Plan-Indicator'
  Move 'E' to $STD_Plan_Ind
Begin-Select
GEX_RC_GEXBN632.BENEFIT_PROGRAM

 Move 'N' to $STD_Plan_Ind
 show '$STD_Plan_Ind :' $STD_Plan_Ind
 
From  PS_GEX_RC_GEXBN632  GEX_RC_GEXBN632
Where GEX_RC_GEXBN632.OPRID                        = [$OprID]
And   GEX_RC_GEXBN632.RUN_CNTL_ID                  = [$Run_Cntl_ID]
And   GEX_RC_GEXBN632.BENEFIT_PROGRAM              = &B.BENEFIT_PROGRAM
End-Select

End-Procedure

!-----------------------------------------------------------------------
! Function:    Get-Occupation                                          -
! Description: Get Position Descr                                      -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Occupation
#debug9 Show 'Get-Occupation'
Begin-Select
SUBSTR(PD.DESCR,1,25) &DESCR

FROM PS_POSITION_DATA PD
WHERE PD.POSITION_NBR=&J.POSITION_NBR
AND PD.EFFDT=(SELECT MAX(PD1.EFFDT) FROM PS_POSITION_DATA PD1
              WHERE PD1.POSITION_NBR=PD.POSITION_NBR
              AND PD1.EFFDT<=$AsOfDate)
End-Select
End-Procedure Get-Occupation
!-----------------------------------------------------------------------
! Function:    Get-Pay-Cycles                                          -
! Description: Calculates the no of pay cycles for the TM              -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Get-Pay-Cycles
#debugd show '...Get-Pay-Cycles'
  Show '$FromDate :' $FromDate
  show '$AsofDate :' $AsofDate
BEGIN-SELECT
COUNT(PAYCHECK_NBR) &COUNT_PAYS

  show '&COUNT_PAYS :' &COUNT_PAYS

FROM PS_PAY_CHECK AVGHRS
WHERE AVGHRS.EMPLID      = &J.EMPLID
  AND AVGHRS.EMPL_RCD    = &J.EMPL_RCD
  and AVGHRS.PAY_END_DT BETWEEN $FromDate AND $AsofDate 
END-SELECT
End-Procedure Get-Pay-Cycles

!-----------------------------------------------------------------------
! Function:    Get-Average-Hours-Worked                                -
! Description: Calculates the average hours worked by the TM           -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Get-Average-Hours-Worked
#debugd show '...Get-Average-Hours-Worked'        
BEGIN-SELECT
SUM(B.OTH_HRS) &B.OTH_HRS

  show '&B.OTH_HRS :' &B.OTH_HRS

  if &COUNT_PAYS > 0
    let #avg_weekly_hrs_worked = &B.OTH_HRS / &COUNT_PAYS
    multiply 1 times #avg_weekly_hrs_worked round=2
    show '#avg_weekly_hrs_worked:' #avg_weekly_hrs_worked
    if #avg_weekly_hrs_worked>=16
       let $AVG_HOURS          = #avg_weekly_hrs_worked  
       Move 'Y' to $Write_To_File
    else
       Move 'N' to $Write_To_File
    end-if
  end-if 

FROM PS_PAY_EARNINGS A, PS_PAY_OTH_EARNS B 
WHERE A.COMPANY  = B.COMPANY 
AND A.PAYGROUP   = B.PAYGROUP 
AND A.PAY_END_DT = B.PAY_END_DT 
AND A.OFF_CYCLE  = B.OFF_CYCLE 
AND A.PAGE_NUM   = B.PAGE_NUM 
AND A.LINE_NUM   = B.LINE_NUM 
AND A.ADDL_NBR   = B.ADDL_NBR 
AND A.emplid     = &J.EMPLID
and A.empl_rcd   = &J.EMPL_RCD
and A.company    = &J.COMPANY
and A.PAY_END_DT BETWEEN $FromDate AND $AsofDate
END-SELECT

end-procedure Get-Average-Hours-Worked

!-----------------------------------------------------------------------
! Function:    Get-Check-Dt                                            -
! Description: Main-Process                                            -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Check-Dt
#debugd show '...Get-Check-Dt'
Begin-Select
MAX(PAY_END_DT) &ppe

FROM PS_PAY_CALENDAR 
WHERE COMPANY=&J.COMPANY
AND PAYGROUP=&J.PAYGROUP 
AND RUN_ID <>' '
End-Select

Begin-Select
SUBSTR(RUN_ID,LENGTH(RUN_ID),1) &AB_Run

  if &AB_Run='A'
    Move 'TUESDAY' to $PayWeek
  else
    Move 'THURSDAY' to $PayWeek
  end-if

FROM PS_PAY_CALENDAR 
WHERE PAY_END_DT = &ppe
AND COMPANY      = &J.COMPANY
AND PAYGROUP     = &J.PAYGROUP
End-Select
End-Procedure Get-Check-Dt

!-----------------------------------------------------------------------
! Function:    Write-File                                              -
! Description: Write to File                                           -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Write-File

    let $ssn=edit(&N.NATIONAL_ID,'xxx-xx-xxxx')	
    let $DOB=edit(&P.BIRTHDATE,'MM/DD/YYYY')
    let $DOH=edit(&J.LAST_HIRE_DT,'MM/DD/YYYY')
    Let $Occupation=translate(&DESCR,',',' ')
    Let $Addr1=translate(&P.ADDRESS1,',',' ')
    Let $Addr2=translate(&P.ADDRESS2,',',' ')
    Let $City=translate(&P.CITY,',',' ')
    
    Write 1 from $ssn             $delim
                 &G.EMPLID        $delim
                 &P.FIRST_NAME    $delim
                 &P.LAST_NAME     $delim
                 &P.MIDDLE_NAME   $delim
                 $Reg_Temp        $delim
                 'All Locations'  $delim
                 &P.SEX           $delim
                 $DOB             $delim
                 $DOH             $delim
                 $Occupation      $delim   
                 &J.ANNUAL_RT     $delim
                 'Weekly'         $delim
                 $AVG_HOURS       $delim
                 $Addr1           $delim
		 $Addr2           $delim
		 $City            $delim
		 &P.STATE         $delim
                 &P.POSTAL        $delim
                 $STD_Plan_Ind    $delim
                 $PayWeek
End-Procedure Write-File

!-----------------------------------------------------------------------
! Function:    Close-File                                              -
! Description: Closes the File                                         -
! Called By:   Main-Process                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Close-File
  Close 1

  If #filestat != 0
     Show 'Error closing output file.  Program terminating.'
     Stop 
  End-If
End-Procedure

#include 'gexxx951.sqc'
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'gexxx920.sqc'  !Get ben single row run control	!isdvmxd added on 05/19/2009
#Include 'readxlat.sqc'  !Routines for the translate values
