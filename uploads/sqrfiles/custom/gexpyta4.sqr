!***********************************************************************
!GEXPYTA4:   This program calls the gexpyup2 program to load the       *
!            time sheets by selecting data from the table.             *
!            Based on GEXPYTA1.SQR                                     *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *        
!***********************************************************************
!  ITG #32424                                                          *
!  HR-10770   CWB       08/04/2005    Initial creation.  Cloned from   *
!                                     GEXPYTA1                         *
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-setup

#Include 'setup32a.sqc'
 
!SXK 12/13/1998 Begin
  DECLARE-REPORT NONC-REPORT
!     Printer-Type=HPLASERJET         comment for testing to get report to print correctly  
      layout=default         
  END-DECLARE
!SXK 12/13/1998 End

  DECLARE-REPORT ERROR-REPORT
 !     Printer-Type=HPLASERJET         comment for testing to get report to print correctly
       layout=default
  END-DECLARE
  
  DECLARE-REPORT AUDIT-REPORT
 !     Printer-Type=HPLASERJET         comment for testing to get report to print correctly
      layout=default
  END-DECLARE
  DECLARE-REPORT SNOPY-REPORT
 !     Printer-Type=HPLASERJET         comment for testing to get report to print correctly
       layout=default
  END-DECLARE
  DECLARE-REPORT KRONO-REPORT
 !     Printer-Type=HPLASERJET         comment for testing to get report to print correctly
       layout=default
  END-DECLARE
  DECLARE-REPORT PAPER-REPORT
 !     Printer-Type=HPLASERJET         comment for testing to get report to print correctly
Printer-Type=HPLASERJET
       layout=default
  END-DECLARE
  DECLARE-REPORT NONE-REPORT
 !     Printer-Type=HPLASERJET         comment for testing to get report to print correctly
       layout=default
  END-DECLARE
  DECLARE-REPORT NCRP-REPORT
 !     Printer-Type=HPLASERJET         comment for testing to get report to print correctly
       layout=default
  END-DECLARE
  DECLARE-REPORT SMRT-REPORT
 !     Printer-Type=HPLASERJET         comment for testing to get report to print correctly
       layout=default
  END-DECLARE
  DECLARE-REPORT HIRE-REPORT
 !     Printer-Type=HPLASERJET         comment for testing to get report to print correctly
       layout=default
  END-DECLARE


end-setup

begin-report
 
  do Init-DateTime
  do Init-Number
  do stdapi-init
  move 'GEXPYTA4' to $ReportID
  move 'Update PaySheets with Pay Input Data' to $ReportTitle
  display $ReportTitle
  do Get-Current-DateTime
  !SXK 12/14/1998 begin
  let $report_pre = 'PYTA4'
  !SXK 12/14/1998 End
  do Get-Current-Pay-End-Dt

  do report
	
  do Commit-Transaction
  display 'COMMIT is completed successfully' 

  let $asofnow_noAMPM = substr($asofnow,1,8)
  
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term


end-report
!***********************************************************
! Get Current Pay End Date 
!***********************************************************
begin-procedure Get-Current-Pay-End-Dt

 display 'Determining Appropriate Input filenames...'
begin-select LOOPS=1

Y2.PAY_BEGIN_DT
Y2.PAY_END_DT

  move 'Y' to $Found
  move &y2.pay_begin_dt to $pay_end_dt
  show '  Pay Begin date: ' $pay_begin_dt
  move &y2.pay_end_dt to $pay_end_dt
  show '  Pay end date: ' $pay_end_dt


FROM PS_PAY_CALENDAR Y2
where Y2.PAY_SHEETS_RUN = 'Y'
  AND Y2.PAY_CONFIRM_RUN = 'N'
  AND Y2.RUN_ID > ' '
  AND Y2.PAY_OFF_CYCLE_CAL = 'N'    ! CWB 01/02/2001
  AND Y2.PAY_END_DT = (SELECT MAX(PAY_END_DT)
			 FROM PS_PAY_CALENDAR
			WHERE PAY_SHEETS_RUN = 'Y'
			  AND PAY_CONFIRM_RUN = 'N'
			  AND PAY_OFF_CYCLE_CAL = 'N'  ! CWB 01/02/2001
			  AND PAY_END_DT <= $AsOfToday)
end-select

  if $Found = 'N'
    display 'Error --  Pay Calendar not found or not setup for the Run ID.'
    move ' ' to $SlctCompany
  end-if

end-procedure

!****************************************************************
begin-procedure end-sqr 
  let $tbl_name = 'ge_error_table'
begin-select 
aa
from [$tbl_name]
end-select
end-procedure
!**********************************************************
#include 'gexpyup2.sqc'  !Pay Sheet Load from table Program
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#include 'payrnctl.sqc'
#Include 'stdapi.sqc'    !Get_Run_Control Procedure