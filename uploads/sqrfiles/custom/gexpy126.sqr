!***********************************************************************
! GEXPY126:           OCC TAX FLAG INSERTS INTO PS_LOCAL_TAX_DATA      *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPY126:             OCC TAX FLAG INSERTS & REPORT                  *
!                                                                      *
! Narrative:            This program inserts a row in LOCAL_TAX_DATA   *
!                       to set SPECIAL_LWT_STATUS to 'N' for OCC tax.  *                 
!                       Also inserts a new effective-dated row in      *  
!                       STATE_TAX_DATA, FED_TAX_DATA.                  *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    * 
!                       #debug7 data returned from sql calls           * 
!                                                                      *
! SQL Tables:           PS_LOCAL_TAX_DATA                              * 
!                       PS_STATE_TAX_DATA                              * 
!                       PS_FED_TAX_DATA                                * 
!                                                                      *
! Written by:           Carl Buckrop                                   *                                                           
!                                                                      *
! Normally run:         Year end.                                      *
!                                                                      *
! Entered Run                                                          *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE         DESCRIPTION OF THE CHANGE          *
!***********************************************************************
!            CWB       12/06/2000    Initial creation.                 *
!                                                                      *
!            CWB       11/00/2001    Extensive modifications to add    *
!                                    inerts into state and fed tax data*  
!                                                                      *
!            CJH       12/31/2001    Correct inserts to local_tax_data *
!                                    to use all local tax rows for EE  *  
!                                    not just occ tax row              *
!                                                                      *
!            CWB       02/19/2003    Changes to the insert statements  *
!                                    due to record structure changes in*
!                                    tax records in 8.3                *
!                                                                      * 
!            AXL       12/05/2003    Changes to the insert statements  *
!                                    due to record structure changes in*
!                                    tax records in 8.3                *
!                                                                      * 
!            CWB       12/30/2004    Changes to the insert statements  *
!                                    due to new columns added to       *
!                                    FED_TAX_DATA                      *
!                                                                      * 
!            CWB       11/28/2006    Changes to the insert statements  *
!                                    due to new columns added to       *
!                                    FED_TAX_DATA                      *
!            GEX-TLL   04/22/2008    HCM 9.0 Upgrade Changes           *
!            ISDVNPK   04/28/2008    9.0 Upgrade - Removed '999' local *
!                    withholding allowances for the next calendar year.*
!GEX_SEC_REENG Vahini Katta 09/18/2016                                 *
!Changes related to SSN Conversion
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup02.sqc' 

#define #x000_col_selection_criteria_a  02
#define #x000_col_selection_criteria_b  05

#define #x000_col_emplid                06
#define #x000_col_company               16
#define #x000_col_state                 25
#define #x000_col_locality              32
#define #x000_col_status                43

!*********************************************************************
begin-report
!*********************************************************************
#debug9 show 'begin-report'

  do Initialization
  do select-employees
  do stdapi-term
  do EOJ

end-report

!***********************************************************************
begin-heading 09
!***********************************************************************

#debug9 show 'begin-heading'

 #Include 'stdhdg01.sqc'

  print $x000_header_1       (3,) center
  print $x000_header_2       (+1) center

  print '-' (+2,1,55) fill
  print 'Emplid'             (+1,{#x000_col_emplid})    bold 
  print 'Company'             (0,{#x000_col_company})   bold 
  print 'State'               (0,{#x000_col_state})     bold 
  print 'Locality'            (0,{#x000_col_locality})  bold 
  print 'LWT Status'          (0,{#x000_col_status})    bold 

  print '-' (+1,1,55) fill
 
end-heading  

!***********************************************************************
begin-procedure Initialization
!***********************************************************************
#debug9 show 'Initialization'

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
     show '$asoftoday = ' $asoftoday
     show ' '
  do stdapi-init
  
  
  let #empl-count = 0

  if $Prcs_process_instance = ''

    Do Ask-As-Of-Date
    Let $X000_WHERE_SELECT_ASOFDATE = $AsOfDate
  else
    Do GEXXX922-Select-Parameters
    Let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE
  end-if

  if rtrim($X000_WHERE_SELECT_ASOFDATE, ' ' ) = ''
       let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
       LET $AsOfDate = $X000_WHERE_SELECT_ASOFDATE 
  else
       LET $AsOfDate = $X000_WHERE_SELECT_ASOFDATE 
  end-if

  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  display ' '
  let $ReportID           = 'GEXPY126'
  let $ReportTitle        = 'OCC TAX STATUS INSERTS'                                     
  let $Country            = 'USA'

  show '$ReportID= '     $ReportID
  show '$ReportTitle = ' $ReportTitle   
    
  show '$X000_WHERE_SELECT_ASOFDATE        ='  $X000_WHERE_SELECT_ASOFDATE 

  do Print-Cover-Page
  new-page

end-procedure

!***********************************************************************
Begin-Procedure Print-Cover-Page
!***********************************************************************

   print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
   print '$Prcs_OPRID          ='                              (+2,{#x000_col_selection_criteria_b})
   print $Prcs_OPRID                                           (0,+2)
   print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
   print $PRCS_RUN_CNTL_ID                                     (0,+2)

   print 'SELECTION CRITERIA FOR THIS REPORT RUN:'           (+5,{#x000_col_selection_criteria_a})
   print '$X000_WHERE_SELECT_ASOFDATE                     ='   (+1,{#x000_col_selection_criteria_b})
   print  $X000_WHERE_SELECT_ASOFDATE                          (0,+2)
 
 
   let #page-count=0 

end-procedure

!********************************************************************
begin-procedure Select-employees
!********************************************************************
#debug9 show 'Select-employees'

begin-select ON-ERROR=SQL-Error-Found('select-employees')
L.EMPLID                         
L.COMPANY   () on-break print=never level=1 after=after-company save=$prev_company                   
L.EFFDT                          
L.STATE                         
L.LOCALITY  () on-break print=never level=2 after=after-locality save=$prev_locality                   
L.RESIDENT                        
L.LWT_ALLOWANCES                   
L.LWT_AMT                   
L.LWT_PCT                   
L.LOCALITY_LINK                   
L.SPECIAL_LWT_STATUS                   
L.LWT_MAR_STATUS                   
 
  add 1 to #empl_count

  do print-employee
! CJH - 12/31/2001 - get all local rows for EE, then run insert process.
  do get-all-local-rows
!  do insert-process
! CJH - 12/31/2001

FROM   PS_LOCAL_TAX_DATA L
where (l.special_lwt_status <> 'N' or l.LWT_ALLOWANCES = 999) ! GEX ISDVNPK   05/13/2008 Added to slect if LWT_ALLOWANCES = 999.


and l.effdt = (select max(ll.effdt) from ps_local_tax_data ll
             where ll.emplid = l.emplid
             and ll.effdt <= $asofdate)
order by l.company,l.state,l.locality,l.emplid
end-select
end-procedure  !select-employees
!********************************************************************
!CJH - 12/31/2001 - begin
begin-procedure get-all-local-rows
begin-select ON-ERROR=SQL-Error-Found('get-all-local-rows')
L2.EMPLID                         
L2.COMPANY               
L2.EFFDT                          
L2.STATE                         
L2.LOCALITY               
L2.RESIDENT                        
L2.LWT_ALLOWANCES                   
L2.LWT_AMT                   
L2.LWT_PCT                   
L2.LOCALITY_LINK                   
L2.SPECIAL_LWT_STATUS                   
L2.LWT_MAR_STATUS                   
 
  do insert-process

FROM   PS_LOCAL_TAX_DATA L2
where  l2.emplid = &l.emplid
 and   l2.company = &l.company
 and   l2.effdt = (select max(ll2.effdt) from ps_local_tax_data ll2
             where ll2.emplid = &l.emplid
             and ll2.effdt <= $asofdate)
end-select
end-procedure
!CJH - 12/31/2001 - end
!*************************************************************************************
! CWB 11/20/2001 BEGIN

!********************************************************************
begin-procedure Insert-process
!********************************************************************   

  do check-for-fed-tax
  if $fed_tax_found = 'N'
    do insert-into-fed-tax
  end-if

  do check-for-state-tax
  if $state_tax_found = 'N'
    do insert-into-state-tax
  end-if

  do check-for-local-tax
  if $local_tax_found = 'Y'
    do update-local-tax
    do update-local-tax-999  ! GEX ISDVNPK   04/28/2008 IF LWT ALLOWANCES = 999 then populate with 0.
  else
  
  ! GEX ISDVNPK   04/28/2008 IF LWT ALLOWANCES = 999 then populate with 0.
  If &L2.LWT_ALLOWANCES = 999
   LET #L2_LWT_ALLOWANCES = 0
   else
   LET #L2_LWT_ALLOWANCES = &L2.LWT_ALLOWANCES
  End-If
  ! GEX ISDVNPK   04/28/2008    
    do insert-into-local-tax
  end-if

end-procedure   !insert-process

!********************************************************************
begin-procedure check-for-fed-tax
!********************************************************************
let $fed_tax_found = 'N'
begin-select
'X'
  let $fed_tax_found = 'Y'
from ps_fed_tax_data fx
where fx.company = &l2.company
  and fx.emplid  = &l2.emplid
  and fx.effdt   = $asofdate
end-select
  
end-procedure   !check-for-fed-tax
!********************************************************************

!********************************************************************
begin-procedure check-for-state-tax
!********************************************************************
let $state_tax_found = 'N'
begin-select
'Y'
  let $state_tax_found = 'Y'
from ps_state_tax_data sy
where sy.company = &l2.company
  and sy.state   = &l2.state 
  and sy.emplid  = &l2.emplid
  and sy.effdt   = $asofdate
end-select
  
end-procedure   !check-for-state-tax
!********************************************************************

!********************************************************************
begin-procedure check-for-local-tax
!********************************************************************
let $local_tax_found = 'N'
begin-select
'Z'
  let $local_tax_found = 'Y'
from ps_local_tax_data lz
where lz.company  = &l2.company
  and lz.state    = &l2.state 
  and lz.locality = &l2.locality 
  and lz.emplid   = &l2.emplid
  and lz.effdt    = $asofdate
end-select
  
end-procedure   !check-for-local-tax
!********************************************************************

!********************************************************************
begin-procedure Insert-Into-fed-tax
!********************************************************************   
!show 'insert-into-fed-tax'

begin-sql
insert into ps_fed_tax_data
	(EMPLID, 
	COMPANY,                
	EFFDT,                  
	SPECIAL_FWT_STATUS,
	FWT_MAR_STATUS,         
	FWT_ALLOWANCES,         
	FWT_ADDL_AMT,           
	FWT_ADDL_PCT,           
! CWB 02/19/2003 BEGIN
!	FICA_STATUS_EE,         
! CWB 02/19/2003 END
	FUT_EXEMPT,             
	EIC_STATUS,             
	STATUTORY_EE,           
	DECEASED,               
	PENSION_PLAN,           
	LEGAL_REP,              
	DEFERRED_COMP,          
	USE_TOTAL_WAGE,         
	LAST_ACTION,            
	W4_PRCSS,               
	W5_PRCSS,               
	LOCK_IN_RECVD,          
	LOCK_IN_LIMIT,          
	LAST_UPDATE_DATE,       
! CWB 02/19/2003 BEGIN
	DATE_OF_ENTRY,
	COUNTRY,
	FORM_1001_RECD,
	FORM_1001_SUBMT_DT,
	FORM_1001_EXP_DT,
	FORM_8233_RECD,
	FORM_8233_SUBMT_DT,
	FORM_8233_EXP_DT,
	TAXPAYER_ID_NO,
	TREATY_EXP_DT,
	TREATY_ID,
	FORM_1078_RECD,
	FORM_1078_SUBMT_DT,
! CWB 02/19/2003 END
	THIRDPARTY_SICKPAY,
        W4_NAME_CHECK,     !AXL 12/5/2003
        PY_FLAG_FOR_IRS,     ! CWB 12/30/2004
        PY_FLAG_FOR_IRS_DT,  ! CWB 12/30/2004 
        MARRIED_FILE_SINGL,  ! CWB 12/30/2004
        NRA_EXEMPT_WHRULE,	! CWB 11/28/2006	
	NQDC_W2_RPTG,
	creation_dt)	!VNDDRXT 
 SELECT F.EMPLID, 
	F.COMPANY,                
	$asofdate,                  
	F.SPECIAL_FWT_STATUS,
	F.FWT_MAR_STATUS,         
	F.FWT_ALLOWANCES,         
	F.FWT_ADDL_AMT,           
	F.FWT_ADDL_PCT,           
! CWB 02/19/2003 BEGIN
!	F.FICA_STATUS_EE,         
! CWB 02/19/2003 END
	F.FUT_EXEMPT,             
	F.EIC_STATUS,             
	F.STATUTORY_EE,           
	F.DECEASED,               
	F.PENSION_PLAN,           
	F.LEGAL_REP,              
	F.DEFERRED_COMP,          
	F.USE_TOTAL_WAGE,         
	'C',            
	F.W4_PRCSS,               
	F.W5_PRCSS,               
	F.LOCK_IN_RECVD,          
	F.LOCK_IN_LIMIT,          
	$asoftoday,       
! CWB 02/19/2003 BEGIN
	F.DATE_OF_ENTRY,
	F.COUNTRY,
	F.FORM_1001_RECD,
	F.FORM_1001_SUBMT_DT,
	F.FORM_1001_EXP_DT,
	F.FORM_8233_RECD,
	F.FORM_8233_SUBMT_DT,
	F.FORM_8233_EXP_DT,
	F.TAXPAYER_ID_NO,
	F.TREATY_EXP_DT,
	F.TREATY_ID,
	F.FORM_1078_RECD,
	F.FORM_1078_SUBMT_DT,
! CWB 02/19/2003 END
	F.THIRDPARTY_SICKPAY,
        F.W4_NAME_CHECK,     !AXL 12/5/2003     
        F.PY_FLAG_FOR_IRS,     ! CWB 12/30/2004
        F.PY_FLAG_FOR_IRS_DT,  ! CWB 12/30/2004 
        F.MARRIED_FILE_SINGL,  ! CWB 12/30/2004
        F.NRA_EXEMPT_WHRULE,    ! CWB 11/28/2006
	!' ',			!VNDDRXT
	F.NQDC_W2_RPTG,		!GEX-TLL 04/22/2008 
	sysdate
	FROM PS_FED_TAX_DATA F
         WHERE F.COMPANY = &L2.COMPANY
	   AND F.EMPLID  = &L2.EMPLID
           AND F.EFFDT = (SELECT MAX(F1.EFFDT)
               FROM PS_FED_tAX_DATA F1
               WHERE F.COMPANY = F1.COMPANY
               AND F.EMPLID = F1.EMPLID
               AND F1.EFFDT < $asofdate)
end-sql
    If #sql-status = 0
      let #federal_inserts = #federal_inserts + #sql-count
    else
      Show 'Insert into PS_FED_TAX_DATA failed for EE - ' &L2.EMPLID
      let #invalid_federal_insert = #invalid_federal_insert + 1
    End-if

End-procedure  ! Insert-into-fed-tax     	

!********************************************************************
begin-procedure Insert-Into-state-tax
!********************************************************************   
!show 'insert-into-state-tax'

Begin-sql
Insert into ps_state_tax_data
 	(EMPLID,                 
	 COMPANY,                
	 EFFDT,                  
	 STATE,                  
	 RESIDENT,               
	 NON_RES_DECLARED,       
	 SPECIAL_SWT_STATUS,     
	 SWT_MAR_STATUS,         
	 SWT_ALLOWANCES,         
	 SWT_ADDL_ALLOWNCES,     
	 WAGE_PLAN_CD,           
	 ANNL_EXEMPTION_AMT,     
	 PERCENT_OF_FWT,         
	 SWT_ADDL_AMT,           
	 SWT_ADDL_PCT,           
	 SDI_STATUS,             
	 SUT_EXEMPT,             
	 UI_JURISDICTION,        
	 ADDL_AMT_ADJ, 
	 WT4A_FILED,		!GEX-TLL  04/22/2008 Added    
	 LOCK_IN_RECVD,          
! CWB 02/19/2003 BEGIN
!	 LOCK_IN_LIMIT)
	 LOCK_IN_LIMIT,
         RETIREMENT_PLAN,
         EIC_STATUS_ST,	!AXL 12/5/2003
	 !WT4A_FILED,		!GEX-TLL  04/22/2008 Commented
	 HLTH_COV_IND,		!GEX-TLL  04/22/2008 Added 
	 CREATION_DT,
	 PNA_FLI_STATUS,                !vendaxg added as not retrofitted for atx update f!VNDDRXT
	 RES_ADDL_ALLOW )		 !ISDVSXP added as not retrofitted for atx update  12/27/2009		
! CWB 02/19/2003 END
  select S.EMPLID,                 
	 S.COMPANY,                
	 $asofdate,                  
	 S.STATE,                  
	 S.RESIDENT,               
	 S.NON_RES_DECLARED,       
	 S.SPECIAL_SWT_STATUS,     
	 S.SWT_MAR_STATUS,         
	 S.SWT_ALLOWANCES,         
	 S.SWT_ADDL_ALLOWNCES,     
	 S.WAGE_PLAN_CD,           
	 S.ANNL_EXEMPTION_AMT,     
	 S.PERCENT_OF_FWT,         
	 S.SWT_ADDL_AMT,           
	 S.SWT_ADDL_PCT,           
	 S.SDI_STATUS,             
	 S.SUT_EXEMPT,             
	 S.UI_JURISDICTION,        
	 S.ADDL_AMT_ADJ, 
	 S.WT4A_FILED,		!GEX-TLL  04/22/2008 Added          
	 S.LOCK_IN_RECVD,          
	 S.LOCK_IN_LIMIT,
! CWB 02/19/2003 BEGIN
         S.RETIREMENT_PLAN,
	 S.EIC_STATUS_ST,		!AXL 12/5/2003
	! CWB 02/19/2003 END
	!' ',
	S.HLTH_COV_IND,		!GEX-TLL  04/22/2008 Added 
	sysdate,
	S.PNA_FLI_STATUS, !vendaxg added as not retrofitted for atx update f!VNDDRXT
	S.RES_ADDL_ALLOW  !ISDVSXP added as not retrofitted for atx update  12/27/2009
	FROM PS_STATE_TAX_DATA S
         WHERE S.COMPANY = &L2.COMPANY
	   AND S.EMPLID  = &L2.EMPLID
	   AND S.STATE   = &L2.STATE
           AND S.EFFDT = (SELECT MAX(S1.EFFDT)
               FROM PS_STATE_TAX_DATA S1
               WHERE S.COMPANY = S1.COMPANY
               AND S.EMPLID = S1.EMPLID
               AND S.STATE  = S1.STATE  
               AND S1.EFFDT < $asofdate)
End-sql
    If #sql-status = 0
      let #state_inserts = #state_inserts + #sql-count
    else
      Show 'Insert into PS_STATE_TAX_DATA failed for EE - ' &L2.EMPLID
      let #invalid_state_insert = #invalid_state_insert + 1
    End-if

End-procedure  ! Insert-into-state-tax     	

!********************************************************************
begin-procedure update-local-tax
!********************************************************************

show 'update-local-tax, ' &l2.emplid ', ' &l.locality 

begin-sql
update ps_local_tax_data lu
set lu.special_lwt_status = 'N'
where lu.company  = &l2.company
  and lu.state    = &l2.state 
  and lu.locality = &l2.locality 
  and lu.emplid   = &l2.emplid
  and lu.effdt    = $asofdate
end-sql
  
end-procedure   !update-local-tax
!********************************************************************

! CWB 11/20/2001 END

! GEX ISDVNPK   04/28/2008 IF LWT ALLOWANCES = 999 then populate with 0.
!********************************************************************
begin-procedure update-local-tax-999
!********************************************************************

show 'update-local-tax-999, ' &l2.emplid ', ' &l.locality 

begin-sql
update ps_local_tax_data lu999
set lu999.LWT_ALLOWANCES = 0
where lu999.company  = &l2.company
  and lu999.state    = &l2.state 
  and lu999.locality = &l2.locality 
  and lu999.emplid   = &l2.emplid
  and lu999.effdt    = $asofdate
  and lu999.LWT_ALLOWANCES    = 999
end-sql
  
end-procedure   !update-local-tax-999
!********************************************************************
! GEX ISDVNPK   04/28/2008 IF LWT ALLOWANCES = 999 then populate with 0.


!********************************************************************
begin-procedure Insert-Into-local-tax
!********************************************************************   
!begin-SQL On-Error=Sql-Diagnostic
!show 'insert-into-local-tax'
begin-SQL 
Insert into ps_local_tax_data
       (EMPLID,
	COMPANY,                      
	EFFDT,                          
	STATE,                         
	LOCALITY,                         
	RESIDENT,                        
	LWT_ALLOWANCES,                   
	LWT_AMT,                   
	LWT_PCT,                   
	LOCALITY_LINK,                   
	SPECIAL_LWT_STATUS,                   
	LWT_MAR_STATUS,
	creation_dt)                   
  VALUES
       (&L2.EMPLID,
	&L2.COMPANY,                      
	$asofdate,                          
	&L2.STATE,                         
	&L2.LOCALITY,                         
	&L2.RESIDENT,                        
	#L2_LWT_ALLOWANCES,   ! &L2.LWT_ALLOWANCES,  ! GEX ISDVNPK   04/28/2008 IF LWT ALLOWANCES = 999 then populate with 0.                 
	&L2.LWT_AMT,                   
	&L2.LWT_PCT,                   
	&L2.LOCALITY_LINK,                   
	'N',                   
	&L2.LWT_MAR_STATUS,
	sysdate)                   
end-sql
  
    If #sql-status = 0
      let #local_inserts = #local_inserts + #sql-count
    else
      Show 'Insert into PS_LOCAL_TAX_DATA failed for EE - ' &L2.EMPLID
      let #invalid_local_insert = #invalid_local_insert + 1
    End-if

end-procedure

!********************************************************************
begin-procedure after-company
  new-page
end-procedure
!********************************************************************

!********************************************************************
begin-procedure after-locality
  print ' ' (+1,1,80) fill
end-procedure
!********************************************************************

!********************************************************************
begin-procedure Print-Employee
!********************************************************************
 
  print &l.emplid             (+1,05)
  print &l.company             (0,18)
  print &l.state               (0,27)
  print &l.locality            (0,32)  
  print &l.special_lwt_status  (0,49)

end-procedure
 
!********************************************************************
begin-procedure SQL-Error-Found($Proc_Name) 
!********************************************************************
  do error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
end-procedure

!********************************************************************
begin-procedure Error-Found
!********************************************************************
  move 'Y' to $ErrorFound
  do Format-Number(#InputTran, $out, '99999')
  print $out (+1,1)
 !GEX_SEC_REENG Vahini Katta 09/18/2016 Begins
  !let $EmplId_1st3 = substr($EmplId,1,3)
  !let $EmplId_mid2 = substr($EmplId,4,2)
  !let $EmplId_last4 = substr($EmplId,6,4)
 
  !String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  !print $EmplID11 (,8)
  print $EmplId (,8)
  !GEX_SEC_REENG Vahini Katta 09/18/2016 Ends
end-procedure

!***********************************************************************
Begin-Procedure EOJ
!***********************************************************************
 
  display ' '
  display #empl_count 99999 noline
  display ' Employees Processed ' 
  display #federal_inserts 99999 noline
  display ' Successful federal Inserts;' noline
  display #invalid_federal_inserts 99999 noline
  display ' Federal Inserts Failed ' 
  display #state_inserts 99999 noline
  display ' Successful State Inserts;  ' noline 
  display #invalid_state_inserts 99999 noline
  display ' State Inserts Failed ' 
  display #local_inserts 99999 noline
  display ' Successful Local Inserts;  ' noline 
  display #invalid_local_inserts 99999 noline
  display ' Local Inserts Failed ' 
  display ' '

  date-time () hh:mi:ss &timeProcess
  display 'Report ended: ' noline
  display &timeProcess

  Show 'Successful end of report'

end-procedure

#include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions

#Include 'gexxx950.sqc'  !Get SQRW run controls
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 

