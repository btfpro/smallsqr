!***********************************************************************                                                                
!  GEXPY106: GEBS Blended Wages Report                                 *                                                                
!***********************************************************************                                                                
!                                                                      *                                                                
!               Confidentiality Information:                           *                                                                
!                                                                      *                                                                
! This module is the confidential and proprietary information of       *                                                                
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *                                                                
! in any form, by any means, in whole or in part, nor is it to be used *                                                                
! for any purpose other than that for which it is expressly provided   *                                                                
! without the written permission of Giant Eagle.                       *                                                                
!                                                                      *                                                                
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *                                                                
!                                                                      *                                                                
!***********************************************************************                                                                
!                                                                      *        
! Narrative:        This program will generate 2 reports for GEBS      *
!                   (i) Detail (Employee level) (ii) Summary Report    *
!                   The purpose of the Report is to provide the GEBS   *   
!                   team with what they are calling is  'blended rate' *
!                   by department by job category.                     * 
!                   Blended rate will be calculated by Adding the      *
!                   wages and employer paid benefits then dividing     *
!                   the total amount by the total number of hours      * 
!                                                                      *
! SQL Tables:	    PS_GEX_R_GEXPY106T ! temp table- truncate         *
!                   PS_GEX_R_GEXPY106   ! temp table- truncate         *
!                                                                      *
!                   PS_JOBCODE_TBL                                     *
!                   PS_ACCT_CD_TBL                                     *
!                   PS_DEPT_TBL                                        *
!                   PS_GEX_DEPT_TBL                                    *
!                   PS_NAMES                                           *
!		    PS_EMPLOYMENT              			       *
!		    PS_JOB                     			       *
!			                           		       *
!                   PS_PAY_EARNINGS    				       *
!		    PS_PAY_OTH_EARNS     			       *
!			                       			       *
!                   PS_PAY_CHECK PC                 		       *
!                   PS_PAY_DEDUCTION                                   *
!								       *
!                   PS_GEX_RC_JOBCAT                                   *  
!								       *
! Written by:	    Sudhakar Changal 03/28/2005                        *       
!                                                                      *
! Normally Run:	    on demand                                          *
!                                                                      *
! Control Parms:   						       *
!				  As Of Date                           *
!				  From Dt, To Date                     *
!				  Company Division Code                *
!				  Deptid	                       *
!				  Employee Status	               *
!				  Account Code                         *
!				  Job Code                             *
!				  Job Category                         *
!				  Earnings Code                        *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  INITIALS   DATE         DESCRIPTION OF THE CHANGE                   *
!***********************************************************************
!  ISDVSRC    03/28/2005   Initial Creation                            *
! GEX-AXG    08/20/2007    Upgrade 9.0				       *
!  RBC       09/26/2007    Modified to use GEX_ACCT_CD_TBL             *
!			   in 9.0 Upgrade.             	       	       *
! GEX-TLL    02/06/2008    HCM Upgrade 9.0                             *  
! GEX-AXG    02/11/2008    Modified code as the field length was short.*                    		
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

#define #col_name 	     1   
#define #col_deptid 	    24   
#define #col_div_cd  	    32   
#define #col_acct_cd   	    41   
#define #col_job_category   53   
#define #col_total_hrs      67   
#define #col_total_wgs      82   
#define #col_empl_pd_benf   98   
#define #col_blended_rt    114   

!***********************************************************************
Begin-Setup
  Declare-Report Detail-Report
Printer-Type=HPLASERJET
    Layout=Default
  End-Declare

  Declare-Report Summary-Report
Printer-Type=HPLASERJET
    Layout=Default
  End-Declare
End-Setup
!***********************************************************************


!***********************************************************************
Begin-Report
!***********************************************************************
 
  Do Initialization
  Do Main-Process
  Do Select-From-Temp-Detail    !Detail Report
  Do Select-From-Temp-Summary   !Summary Report
  
  Do Stdapi-Term
  Do EOJ
End-Report

!***********************************************************************
Begin-Heading 8 For-Reports=(Detail-Report)
#debug9 Show 'Begin-Heading (Detail-Report)'

!***********************************************************************
  #Include 'stdhdg02.sqc' ! Includes 'stdhdg01.sqc'

 if $Deptid <> $priorDeptid
    do Get-Department-Name
    move $Deptid to $priorDeptid
  end-if

  print 'DeptID'               (4,1)
  print $prvDEPTID             (0,13)
  print $DeptName              (0,19)
  
  print 'JobCategory'          (5,1)
  print $prvJOBCATEGORY        (0,13)
  
  
 print 'Name'		    (+2,{#col_name})
 print 'DeptId'		    (+0,{#col_deptid})   
 
 print 'Div.Cd'		    (+0,{#col_div_cd})   
 print 'Acct. Cd '          (+0,{#col_acct_cd})
 Print 'JobCategory'        (+0,{#col_job_category})
 print '   Total Hours'     (+0,{#col_total_hrs})   
 print '   Total Wages'     (+0,{#col_total_wgs})
 print '  Empl.Paid Benfs.' (+0,{#col_empl_pd_benf})     
 print '      Blended Rate' (+0,{#col_blended_rt})     !Total Empl.paid Benfs / Total hours
 Print '-'                  (+1,{#col_name},128)  Fill
  
End-Heading

!***********************************************************************
Begin-Heading 8 For-Reports=(Summary-Report)
#debug9 Show 'Begin-Heading (Summary-Report)'

!***********************************************************************
    !#Include 'stdhdg02.sqc'
  Do GEXXX951-Select-Oracle-Instance         
 !print '            '    (1,1)              
  print 'Oracle DB:'                (1,1)    
  print $GEXXX951_Oracle_Instance   (1,13)   

  print '            '    (1,1)
  print 'PeopleSoft HRMS 8.3'      ()          center
  print 'Report ID:  '    (+1,1)
  print $ReportID_Summary         (,13)
  uppercase $ReportTitle1
  print $ReportTitle1      ()          center
  let #RptCol = {ColR} - 2
  page-number             (0,#RptCol)  'Page No.  '
  print 'Run Date '       (+1,#RptCol)
  print $ReportDate       ()
  print 'Run Time '       (+1,#RptCol)
  print $ReportTime       ()

 if $Deptid <> $priorDeptid
    do Get-Department-Name
    move $Deptid to $priorDeptid
  end-if


  print 'DeptID'               (3,1)
  print $prvDEPTID             (0,13)
  print $DeptName              (0,19)
  
 print 'Job Category'	   (+2,{#col_name})	 	 
 Print 'Deptid'		   (+0,{#col_deptid})	    
 print 'Div.Cd'		   (+0,{#col_div_cd})             
 print 'Acct. Cd '         (+0,{#col_acct_cd})       
 print '   Total Hours'    (+0,{#col_job_category})          
 print '  Total Wages'     (+0,{#col_total_hrs})          
 print ' Empl.Paid Benfs.' (+0,{#col_total_wgs})        
 print '   Blended Rate'   (+0,{#col_empl_pd_benf})         
  Print '-'                (+1,{#col_name},120)  Fill     
  
End-Heading

!***********************************************************************
Begin-Procedure Initialization
!***********************************************************************
  !Let $table_name = 'PS_GEX_R_GEXPY106T'
   
  
  Do Init-DateTime           
  Do Init-Number             
  Do Get-Current-DateTime    
  Do Stdapi-Init             
  
  Do Truncate-Temp-Table-Two

  
  Let $GEXXX907_Div_CD_Alias  	   = 'GDT.GEX_COMPANY_DIV_CD'
  Let $GEXXX902_Deptid_Alias   	   = 'J.deptid'
  Let $GEXXX903_Emp_Stat_Alias 	   = 'J.EMPL_STATUS' 
  Let $GEXXX909_Acct_CD_Alias  	   = 'J.ACCT_CD'
  Let $GEXXX916_Jobcode_Alias  	   = 'J.JOBCODE'
  Let $GEXXX916x_JobCategory_Alias = 'JOBCATEGORY'          
  Let $GEXXX924_ERNCD_Alias        = 'POE.ERNCD'     
  
   Let $delim = ';'
   Let $blank = ' '
   encode '<009>' into $tab  
  
   
  !------------------------------------------------ 
  If $prcs_process_instance = ''
    Do Truncate-Temp-Table-One	
    Do SQRW-Run-Controls
  Else
    Do Process-Scheduler-Run-Controls
  End-If
  !------------------------------------------------
  
  
  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan

  Let $ReportID         = 'PY106DET'
  Let $ReportID_Summary = 'PY106SUM'
   
  Let $ReportTitle     = 'GEBS BLENDED WAGES REPORT - Detail'
  Let $ReportTitle1    = 'GEBS BLENDED WAGES REPORT - Summary'  
  
  Let $Order_By        = 'CATEGORY,DEPTID, JOBCODE, DIV_CD, ACCT_CD, NAME'
  Let $Order_By_Detail = 'CATEGORY,DEPTID, JOBCODE ,DIV_CD, ACCT_CD, NAME'
  
 
  
  Show '$ReportID         = ' $ReportID
  Show '$ReportTitle      = ' $ReportTitle
  show '$ReportID_Summary = ' $ReportID_Summary
  Show '$ReportTitle1     = ' $ReportTitle1
  


  Show '$GEXXX902_Include_Deptid_Criteria                 =' $GEXXX902_Include_Deptid_Display_Criteria
  Show '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA       =' $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA
  
  If $prcs_process_instance = ''
    Show '$GEXXX916x_Include_Jobcode_Criteria                = ' $JOBCODE_JOBCAT_CRITERIA_DISPLAY_CRITERIA 	     
  Else
    Show '$GEXXX916x_Include_Jobcode_Criteria                = ' $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA_display 	     
  End-If     
  
  Show '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA         =' $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA
  Show '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA        =' $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA
  show '$GEXXX924_INCLUDE_ERNCD_CRITERIA                  =' $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA
  show '$GEXXX924_EXCLUDE_ERNCD_CRITERIA		  =' $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA
  Show '$WHERE_SELECT_ASOFDATE 				  =' $WHERE_SELECT_ASOFDATE
  Show '$ORDER_BY                                   	  =' $ORDER_BY
  
  !Do Get-Last-Confirmed-Pay
  Do Print-Cover-Page

End-Procedure


!***********************************************************************
begin-procedure Print-Cover-Page  
!***********************************************************************

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+3,1)
  Print '$Prcs_OprID          ='                                  (+2,5)
  Print $Prcs_OprID                                               (0,+2)
  Print '$Prcs_Run_Cntl_ID    ='                                  (+1,5)
  Print $Prcs_Run_Cntl_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+4,2)

  Print 'EARNINGS BEGIN DT                                     =' (+1,5)
  Print $week_begin_dt						  (0,+2)
  
  Print 'EARNINGS END DT                                       =' (+1,5)
  Print $week_end_dt                                              (0,+2)
  
  
  Print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA           ='   (+1,5)    
  Print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA 		    (0,+2)     	

  Print '$GEXXX902_Include_Deptid_Criteria                     ='   (+1,5)
  Print $GEXXX902_Include_Deptid_Display_Criteria                   (0,+2)

  If $prcs_process_instance = ''
    Print '$JOBCODE_JOBCAT_CRITERIA                            ='   (+1,5)
    Print $JOBCODE_JOBCAT_CRITERIA_DISPLAY_CRITERIA 	            (0,+2)
  Else
    Print '$JOBCODE_JOBCAT_CRITERIA                            ='   (+1,5)
    Print $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA_display        (0,+2)
  End-If  
  
  Print '$GEXXX907_INCLUDE_DIV_CD_CRITERIA                     ='   (+2,5) 
  Print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA   		    (0,+2)       	
  Print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA            ='   (+1,5)       
  Print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA                  (0,+2)    
  Print '$GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA              ='   (+1,5)       
  Print $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA                    (0,+2)    
  Print '$GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA              ='   (+1,5)      
  Print $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA                    (0,+2)            
  	
  Print '$WHERE_SELECT_ASOFDATE                                ='   (+1,5)
  Print  $WHERE_SELECT_ASOFDATE                                     (0,+2)
  
  Print 'SORT ORDER FOR THIS REPORT RUN:'                          (+2,2)
  Print '$Order_By                                            ='   (+1,2)
  Print $Order_By                                                  (0,+2)

   Let #PAGE-COUNT = 0
   NEW-PAGE
   Let #PAGE-COUNT = 1
  
End-Procedure

!***********************************************************************
begin-procedure Truncate-Temp-Table-One
!***********************************************************************
SHOW 'ENTERED INTO Truncate-Temp-Table-One'
Begin-Sql On-Error=SQL-Error-E('Truncate-Temp-Table-One')
   Truncate Table PS_GEX_R_GEXPY106T
End-Sql

End-Procedure
!*******************************************************************
Begin-procedure Truncate-Temp-Table-Two
!*******************************************************************
 
begin-sql On-Error=SQL-Error-E('Truncate-Temp-Table-Two')
Truncate Table PS_GEX_R_GEXPY106

end-sql

end-procedure

!*******************************************************************
Begin-procedure Verify-Unique-Rows
!This table is used for storing jobcode and category when the SQR is 
!run through SQRW and to make sure that Unique rows are inserted 
!*******************************************************************
 ! show '$In-Jobcode    :' $In-Jobcode
 ! show '$In-Jobcategory:' $In-Jobcategory
 
  Let $Row-Exists = 'N'
Begin-Select
VERIFY.JOBCODE 
VERIFY.CATEGORY
 
 Let $Row-Exists = 'Y'
 
 Let $Verify-JOBCODE  = &VERIFY.JOBCODE 
 Let $Verify-CATEGORY = &VERIFY.CATEGORY
 
FROM PS_GEX_R_GEXPY106T VERIFY
WHERE VERIFY.JOBCODE  = $In-Jobcode 
! AND   VERIFY.CATEGORY = $In-Jobcategory
End-Select
        
end-procedure
!*******************************************************************


!*******************************************************************
Begin-procedure Insert-Into-TempTable-One
!*******************************************************************

begin-SQL On-Error=SQL-Error-E('Insert-Into-TempTable-One')
Insert into PS_GEX_R_GEXPY106T
     Values
       ($In-Jobcode,$In-Jobcategory)            
end-sql
end-procedure



!***********************************************************************
Begin-Procedure SQRW-Run-Controls
!***********************************************************************
  Do Ask-As-Of-Date
  Let $WHERE_SELECT_ASOFDATE = $AsOfDate

   
	      Input $fromdate Maxlen=10 'MM/DD/YYYY, Earnings Begin Date. If left blank, will default to previous Sunday.'
	      
	      If $fromdate = ''
	      Else    
	        Input $thrudate Maxlen=10 'MM/DD/YYYY, Earnings End Date. If left blank, will default to previous Saturday.'
	      End-If
	      
	      Do set-weekly-dates
      		let $temp1 = '(PE.PAY_END_DT between ''' || $week_begin_dt || ''' and '''|| $week_end_dt || ''')' 
	       Let $PAY_END_DATE = $temp1
	       show '$temp1:' $temp1
		
	       let $temp2 = '(PEOTH.PAY_END_DT between ''' || $week_begin_dt || ''' and '''|| $week_end_dt || ''')' 
	       Let $PAY_END_DATE_PEOTH = $temp2
	       show '$temp1:' $temp2
	       
	       let $temp3 = '(PC.PAY_END_DT between ''' || $week_begin_dt || ''' and '''|| $week_end_dt || ''')' 
	       Let $PAY_END_DATE_PC = $temp3
	       show '$temp3:' $temp3

	       let $temp4 = '(PC2.PAY_END_DT between ''' || $week_begin_dt || ''' and '''|| $week_end_dt || ''')' 
	       Let $PAY_END_DATE_PC2 = $temp4
	       show '$temp4:' $temp4
		


!~~~~~~~~~~~~~~~~~~~~ EMPL_STATUS ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ 
	  Let $EmplStatusString = ''''

	  Display 'Enter Employee Status or leave blank to exit.'
	  While 1=1
	    Input $In-EmplStatus Maxlen=1 'Employee Status'
	    Uppercase $In-EmplStatus
	    If Rtrim($In-EmplStatus, ' ') = ''
	      Concat '''' With $EmplStatusString
	      Break
	    End-If
	    If $EmplStatusString <> ''''
	      Concat ''',''' With $EmplStatusString
	    End-If
	    Concat $In-EmplStatus With $EmplStatusString
	  End-While
	
	  If $EmplStatusString = ''''''
	    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = '1=1'
	    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = 'ALL'
	  Else
	    Let $GEXXX903_INCLUDE_EMP_STAT_CRITERIA = $GEXXX903_Emp_Stat_Alias || ' In (' || $EmplStatusString || ')'
	    Let $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA = $GEXXX903_INCLUDE_EMP_STAT_CRITERIA

	  End-If

!~~~~~~~~~~~~~~~~~~~~ DEPT ID ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	  Let $DeptIDString = ''''
	  Display 'Enter DeptID or leave blank to exit.'
	  While 1=1
	    Input $In-DeptID Maxlen=10 'DeptID'
	    Uppercase $In-DeptID
	    If Rtrim($In-DeptID, ' ') = ''
	      Concat '''' With $DeptIDString
	      Break
	    End-If
	    If $DeptIDString <> ''''
	      Concat ''',''' With $DeptIDString
	    End-If
	    Concat $In-DeptID With $DeptIDString
	  End-While
	
	  If $DeptIDString = ''''''
	    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = '1=1'
	    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = 'ALL'
	  Else
	    Let $GEXXX902_INCLUDE_DEPTID_CRITERIA = $GEXXX902_Deptid_Alias || ' In (' || $DeptIDString || ')'
	    Let $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA = $GEXXX902_INCLUDE_DEPTID_CRITERIA
	  End-If
	  
  
 
  
 
!~~~~~~~~~~~~~~~~~~~~ JOB CODE-JOB CATEGORY ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  
   LET $GEX_JOBCODE = 'N'
   Let $GEX_JOBCAT = 'N'

  While 1=1
    Input $In-Jobcode Maxlen=8 'Jobcode'
    Uppercase $In-Jobcode
    
     If Rtrim($In-Jobcode, ' ') = ''
	      If $GEX_JOBCODE <> 'Y'
 	         Display 'At least one Job Code parameter must be specified'
	         Stop
	      Else
	        Break 
	      End-If
      Else
         Let $GEX_JOBCODE = 'Y'
	      Input $In-JobCategory Maxlen=10 'JobCategory'
	      Uppercase $In-JobCategory
	      If Rtrim($In-JobCategory, ' ') = ''
	      	   If $GEX_JOBCAT <>'Y'
	             Display 'At least one Job Category parameter must be specified'
	             Stop
	           Else
	       	     Break 
	           End-If
	        
	          Let $Include_Condition = '(' || $GEXXX916_Jobcode_Alias || ' = '''  || $In-Jobcode || ''')'
	          show '$Include_Condition :' $Include_Condition 
	       Else
	          let $GEX_JOBCAT = 'Y'
	          Do Verify-Unique-Rows

	          If $Row-Exists = 'Y'
	           Display 'Duplicate Key value not allowed:'  
	           Show   $In-Jobcode ' - Already exists ' 
	           !Stop
	          Else
	            Do Insert-Into-TempTable-One
	          End-If
	            
	          Let $Include_Condition = '(' || $GEXXX916_Jobcode_Alias || ' = '''  || $In-Jobcode || ''')'
	          !Here we are NOT fetching the rows using Jobcode/JobCategory combination, 
	          !so we don't need to Add JobCategory  to $Include_Condition
	          !Using the below $JobCode_Category_Condition, adding the Jobcode/JobCategory 
	          !for display purposes
		  Let $JobCode_Category_Condition  = '(' || $GEXXX916_Jobcode_Alias || ' = '''  || $In-Jobcode || ''' And ' || $GEXXX916x_JobCategory_Alias || ' = '''  || $In-JobCategory || ''')'
	      End-If
      
        Add 1 To #GEX_RC_JOBCAT_ROWS
      
        If #GEX_RC_JOBCAT_ROWS = 1
          Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA   = '(' || $Include_Condition
          Let $JOBCODE_JOBCAT_CRITERIA			   = '(' || $JobCode_Category_Condition
        Else
          Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA = $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA || ' Or '  || $Include_Condition
          Let $JOBCODE_JOBCAT_CRITERIA                   = $JOBCODE_JOBCAT_CRITERIA                   || ' Or '  ||  $JobCode_Category_Condition			 
	End-If
    End-If
      
      
  End-While
  

  If #GEX_RC_JOBCAT_ROWS = 0
    Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA = '1=1'
    Let $GEXXX916_INCLUDE_JOBCODE_JOBCAT_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA = $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA || ')'
    Let $GEXXX916_INCLUDE_JOBCODE_JOBCAT_DISPLAY_CRITERIA = $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA
    
    Let $JOBCODE_JOBCAT_CRITERIA  		   = $JOBCODE_JOBCAT_CRITERIA || ')'
    Let $JOBCODE_JOBCAT_CRITERIA_DISPLAY_CRITERIA  = $JOBCODE_JOBCAT_CRITERIA 
  End-If


!~~~~~~~~~~~~~~~~~~~~ DIVISION CODE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

	 Let $DivcodeString = ''''
	  Display 'Enter Division code or leave blank to exit.'
	  While 1=1
	    Input $In-Divcode Maxlen=6 'Divcode'
	    Uppercase $In-Divcode
	    If Rtrim($In-Divcode, ' ') = ''
	      Concat '''' With $DivcodeString
	      Break
	    End-If
	    If $DivcodeString <> ''''
	      Concat ''',''' With $DivcodeString
	    End-If
	    Concat $In-Divcode With $DivcodeString
	  End-While
	
	
	  If $DivcodeString = ''''''
	    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = '1=1'
	    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = 'ALL'
	  Else
	    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = $GEXXX907_Div_CD_Alias || ' In (' || $DivcodeString || ')'
	    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = $GEXXX907_INCLUDE_DIV_CD_CRITERIA
	  End-If

!~~~~~~~~~~~~~~~~~~~~ EARNINGS CODE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    While 1=1 
	    Input $Gex_Incl_Excl Maxlen=1 '(I)nclude Earn_cd / (E)xclude Earn_cd / (A)ll Earn_cds'
	    Uppercase $Gex_Incl_Excl
	    
	    If $Gex_Incl_Excl = 'I' 
	       Do Ask-For-Incl-Earn-cd
	       Break
	    Else
	      If $Gex_Incl_Excl = 'E'
	         Do Ask-For-Excl-Earn-cd
	         Break
	      Else
	        Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = '1=1'
	        Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'ALL'
	        Let $GEXXX924_EXCLUDE_ERNCD_CRITERIA = '1=1'
	        Let $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA = 'NONE'
	        Break
	      End-If
	    End-If
	    
	  End-While
	  
!~~~~~~~~~~~~~~~~~~~~ ACCOUNT CODE ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
	  Let $AcctcodeString = ''''
	  Display 'Enter AcctcodeString or leave blank to exit.'
	  While 1=1
	    Input $In-AcctcodeString Maxlen=6 'AcctcodeString'
	    Uppercase $In-AcctcodeString
	    If Rtrim($In-AcctcodeString, ' ') = ''
	      Concat '''' With $AcctcodeString
	      Break
	    End-If
	    If $AcctcodeString <> ''''
	      Concat ''',''' With $AcctcodeString
	    End-If
	    Concat $In-AcctcodeString With $AcctcodeString
	  End-While
	
	
	  If $AcctcodeString = ''''''
	    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA  = '1=1'
	    Let $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA = 'ALL'
	  Else
	    Let $GEXXX909_INCLUDE_ACCT_CD_CRITERIA = $GEXXX909_Acct_CD_Alias || ' In (' || $AcctcodeString || ')'
	    Let $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA = $GEXXX909_INCLUDE_ACCT_CD_CRITERIA
	  End-If
!----------------------------------------------------------------------  

End-Procedure SQRW-Run-Controls
!***********************************************************************




!***********************************************************************
Begin-Procedure Process-Scheduler-Run-Controls
!***********************************************************************
  
  Do GEXXX922-Select-Parameters
  Let $WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE

  if rtrim($WHERE_SELECT_ASOFDATE, ' ' ) = ''
    let $WHERE_SELECT_ASOFDATE = $asoftoday
  end-if

  LET $AsOfDate = $WHERE_SELECT_ASOFDATE 

     	let  $FromDate = $GEX_RC_PAY.FromDate
	  let  $ThruDate = $GEX_RC_PAY.ThruDate
	
	   show '$FromDate- :' $FromDate
	   show '$ThruDate- :' $ThruDate 


  Do set-weekly-dates
	      let $temp1 = '(PE.PAY_END_DT between ''' || $week_begin_dt || ''' and '''|| $week_end_dt || ''')' 
	       Let $PAY_END_DATE = $temp1
	       show '$temp1:' $temp1
		
	       let $temp2 = '(PEOTH.PAY_END_DT between ''' || $week_begin_dt || ''' and '''|| $week_end_dt || ''')' 
	       Let $PAY_END_DATE_PEOTH = $temp2
	       show '$temp1:' $temp2
	       
	       let $temp3 = '(PC.PAY_END_DT between ''' || $week_begin_dt || ''' and '''|| $week_end_dt || ''')' 
	       Let $PAY_END_DATE_PC = $temp3
	       show '$temp3:' $temp3

	       let $temp4 = '(PC2.PAY_END_DT between ''' || $week_begin_dt || ''' and '''|| $week_end_dt || ''')' 
	       Let $PAY_END_DATE_PC2 = $temp4
	       show '$temp4:' $temp4
		

   	  Evaluate &GEX_RC_PAY.Gex_Incl_Excl
	     When = 'I'
	        Do GEXXX924-Select-ERNCD-Parameters 
	        Let $GEXXX924_EXCLUDE_ERNCD_CRITERIA = '1=1'
	        Let $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA = 'NONE'
	        Break
	     When = 'E'
	        Do GEXXX924-Select-ERNCD-Parameters
	        Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = '1=1'
	        Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'NONE'
	        Break
	     When-Other
	        Let $GEXXX924_INCLUDE_ERNCD_CRITERIA   = '1=1'
	        Let $GEXXX924_EXCLUDE_ERNCD_CRITERIA = '1=1'
	        Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'ALL'
	        Let $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA = 'NONE'
	  End-Evaluate

  
    Do GEXXX902-Select-Deptid-Parameters
    Do GEXXX916-Select-Jobcode-Jobcat-Parameters_X       ! Modified copy of gexxx916.sqc
    Do GEXXX903-Select-Emp-Stat-Parameters
    Do GEXXX907-Select-Div-CD-Parameters 
    Do GEXXX909-Select-Acct-CD-Parameters
   
End-Procedure


!***********************************************************************
Begin-Procedure Ask-For-Incl-Earn-cd
!***********************************************************************
#debug9 show 'Ask-For-Incl-Earn_cd'

  Let $Earn_Cdstring = ''''
  Display 'Enter Company Earn Cds to INCLUDE or leave blank to exit.'
  
  While 1=1
    Input $In-Earn_Cd Maxlen=6 'Earn_Cd'
    Uppercase $In-Earn_Cd
    
    If Rtrim($In-Earn_Cd, ' ') = ''
      Concat '''' With $Earn_CdString
      Break
    End-If
    
    If $Earn_CdString <> ''''
      Concat ''',''' With $Earn_CdString
    End-If

    Concat $In-Earn_Cd With $Earn_CdString
  End-While
  

  If $Earn_CdString = ''''''
    Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = '1=1'
    Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = $GEXXX924_ERNCD_Alias || ' In (' || $Earn_CdString || ')'
    Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = $GEXXX924_INCLUDE_ERNCD_CRITERIA
  End-If
  
  Let $GEXXX924_EXCLUDE_ERNCD_CRITERIA = '1=1'
  Let $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA = 'NONE'
  
End-Procedure

!***********************************************************************
Begin-Procedure Ask-For-Excl-Earn-cd
!***********************************************************************
#debug9 show 'Ask-For-Excl-Earn_cd'

  Let $Earn_CdString = ''''
  Display 'Enter Company Earn Cds to EXCLUDE or leave blank to exit.'
  While 1=1
    Input $In-Earn_Cd Maxlen=6 'Earn_Cd'
    Uppercase $In-Earn_Cd
    If Rtrim($In-Earn_Cd, ' ') = ''
      Concat '''' With $Earn_CdString
      Break
    End-If
    If $Earn_CdString <> ''''
      Concat ''',''' With $Earn_CdString
    End-If
    Concat $In-Earn_Cd With $Earn_CdString
  End-While

  show '$Earn_CdString = ' $Earn_CdString 
  If $Earn_CdString = ''''''
    Let $GEXXX924_EXCLUDE_ERNCD_CRITERIA = '1=1'
    Let $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA = 'NONE'
  Else
    Let $GEXXX924_EXCLUDE_ERNCD_CRITERIA = $GEXXX924_ERNCD_Alias || ' Not In (' || $Earn_CdString || ')'
    Let $GEXXX924_EXCLUDE_ERNCD_DISPLAY_CRITERIA = $GEXXX924_EXCLUDE_ERNCD_CRITERIA
  End-If
  
  Let $GEXXX924_INCLUDE_ERNCD_CRITERIA = '1=1'
  Let $GEXXX924_INCLUDE_ERNCD_DISPLAY_CRITERIA = 'ALL'

End-Procedure

!***********************************************************************************
Begin-Procedure set-weekly-dates
!***********************************************************************************
#debug9 Show 'set-weekly-dates'
! ->    determine day of week that $asofdate is, then do math to find last
! ->    week's Sunday and Saturday dates.


  !-----------------------------------------------------------------
  If ((rtrim($fromdate,' ') <> '') and (rtrim($thrudate,' ') <> ''))
	    show '$fromdate: ' $fromdate
	    show '$thrudate: ' $thrudate
	    
	    If $prcs_process_instance = ''
	      Do Format-DateTime($FromDate,$week_begin_dt,{DEFMDY},'','native')
	      Do Format-DateTime($thruDate,$week_end_dt,{DEFMDY},'','native')
	    Else
	      let $week_begin_dt = $fromDate
	      let $week_end_dt   = $thruDate
	    End-If
	    
	    show '$week_begin_dt: ' $week_begin_dt
	    show '$week_end_dt:   ' $week_end_dt
  Else
    
    Do convert-to-dtu-date($asofdate,$asof_dtu)
    Do dtu-dayofweek#($asof_dtu,#dayofweek)
    Do dtu-dayofweek$($asof_dtu,$dayofweek)
	    show ' '
	    show '$asofdate :' $asofdate
	    show '$asof_dtu :' $asof_dtu
	    show '#dayofweek:' #dayofweek   
	    show '$dayofweek:' $dayofweek   
	    
     
	      Evaluate $dayofweek
		 when = 'Sunday'
		   do dtu-subtract-days($asof_dtu,7,$week_begin_dtu)
		   
	 	   break
		 when = 'Monday'
		   do dtu-subtract-days($asof_dtu,8,$week_begin_dtu)
	 	   break
		 when = 'Tuesday'
		   do dtu-subtract-days($asof_dtu,9,$week_begin_dtu)
	 	   break
		 when = 'Wednesday'
		   do dtu-subtract-days($asof_dtu,10,$week_begin_dtu)
	           break
		 when = 'Thursday'
		   do dtu-subtract-days($asof_dtu,11,$week_begin_dtu)
	 	   break
		 when = 'Friday'
		   do dtu-subtract-days($asof_dtu,12,$week_begin_dtu)
	 	   break
		 when = 'Saturday'
		   do dtu-subtract-days($asof_dtu,13,$week_begin_dtu)
	     End-Evaluate      
     
      Do dtu-add-days($week_begin_dtu,6,$week_end_dtu)
      
      Do convert-from-dtu-date($week_begin_dtu,$week_begin_dt) 
      Do convert-from-dtu-date($week_end_dtu,$week_end_dt) 
  End-If
  !-----------------------------------------------------------------
  
    let $year4 = '1'
    do Format-DateTime($week_begin_dt,$begin_dt_hdr, {DEFMDY}, '', '')
    let $year4 = '1'
    do Format-DateTime($week_end_dt,$end_dt_hdr, {DEFMDY}, '', '')
    
    show ' '
    show '$week_begin_dt: ' $week_begin_dt
    show '$week_end_dt:  ' $week_end_dt
    show '$begin_dt_hdr: ' $begin_dt_hdr
    show '$end_dt_hdr:   ' $end_dt_hdr

End-Procedure


!*********************************************************************
Begin-Procedure GEXXX916-Select-Jobcode-Jobcat-Parameters_X
!*********************************************************************
  Let $OprID                = '''' || $Prcs_OprID       || ''''
  Let $Run_Cntl_ID          = '''' || $Prcs_Run_Cntl_ID || ''''
  
  Let #GEX_RC_JOBCAT_ROWS = 0
  
  Let $Include_Condition    = ''
  
  Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA = ''
  Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_DISPLAY_CRITERIA = 'ALL'

Begin-Select

GEX_RC_JOBCAT.JOBCODE
GEX_RC_JOBCAT.CATEGORY

  Add 1 To #GEX_RC_JOBCAT_ROWS

  Let $Include_JobCode_Category_Condition = '(' || $GEXXX916_Jobcode_Alias  || ' = '''  || &GEX_RC_JOBCAT.JOBCODE || ''' And ' || $GEXXX916x_JobCategory_Alias || ' = '''  || &GEX_RC_JOBCAT.CATEGORY || ''')'    !for display only 
 
 
  If #GEX_RC_JOBCAT_ROWS = 1
     Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA = '(' || $GEXXX916_Jobcode_Alias || ' In ('''     || &GEX_RC_JOBCAT.JOBCODE || ''''
     Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA_display = '(' || $Include_JobCode_Category_Condition  !for display only 
  Else
     Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA     = $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA || ',''' || &GEX_RC_JOBCAT.JOBCODE   || ''''
     Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA_display = $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA_display || ' Or '  || $Include_JobCode_Category_Condition  !for display only 
  End-If

From  PS_GEX_RC_JOBCAT GEX_RC_JOBCAT
Where GEX_RC_JOBCAT.OPRID                 = [$OprID]
And   GEX_RC_JOBCAT.RUN_CNTL_ID           = [$Run_Cntl_ID]
And   Rtrim(GEX_RC_JOBCAT.JOBCODE,  ' ') != ' '
And   Rtrim(GEX_RC_JOBCAT.CATEGORY, ' ') != ' '

End-Select

  If #GEX_RC_JOBCAT_ROWS = 0
    Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA  = $GEXXX916_Jobcode_Alias || ' = ' || $GEXXX916_Jobcode_Alias
    Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA_display = $GEXXX916_Jobcode_Alias  || ' = ' || $GEXXX916_Jobcode_Alias  || ' And ' ||
                                                      	     $GEXXX916x_JobCategory_Alias || ' = ' || $GEXXX916x_JobCategory_Alias
  Else
    Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA         = $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA || '))'
    Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA_display = $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA_display || ')'
    
    Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_DISPLAY_CRITERIA = $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA
    Let $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_DISPLAY_CRITERIA_display = $GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA_display
  End-If

End-Procedure



!********************************************************************************************
begin-procedure Main-Process
!********************************************************************************************
#debug9 Show 'Main-Process'
 
   Let $Data-Found-Flag-Main = 'N'
   Let #reg_hrs   = 0   
   Let #reg_earns = 0   
   
   Let #empl_paid_benefits         = 0   
   Let #empl_paid_taxes            = 0   
   Let #total_employer_pd_benefits = 0
   Let #blended_wages_calc         = 0
   

begin-SELECT
!/*+ RULE */ 
J.EMPLID         
J.COMPANY   
J.PAYGROUP    
J.DEPTID    
J.JOBCODE
J.ACCT_CD
GDT.GEX_COMPANY_DIV_CD
!GDT.GEX_RGN_CD      
J.EMPL_STATUS
N.FIRST_NAME  
N.LAST_NAME 

   Let $Data-Found-Flag-Main = 'Y'
   	
   Let $Empl_ID     =  &J.EMPLID              
   Let $Company     =  &J.COMPANY             
   Let $Paygroup    =  &J.PAYGROUP    
   Let $Dept_ID     =  &J.DEPTID              
   Let $Jobcode     =  &J.JOBCODE             
   Let $Acctcd      =  &J.ACCT_CD             
   Let $Divcd       =  &GDT.GEX_COMPANY_DIV_CD
   !Let $Rgncd      =  &!GDT.GEX_RGN_CD       
   Let $Empl_Status =  &J.EMPL_STATUS         
   Let $Fname       =  &N.FIRST_NAME          
   Let $Lname       =  &N.LAST_NAME           

   Add 1  to #record_count

  Do Select-OTH-Earnings
  

FROM   PS_JOBCODE_TBL    JT,
!GEX-RBC Modified for Upgrade 9.0 on 09/26/2007 - Begin	
       PS_GEX_ACCT_CD_TBL AT,    
       !PS_ACCT_CD_TBL    AT,
!GEX-RBC Modified for Upgrade 9.0 on 09/26/2007 - END
       PS_DEPT_TBL       DT, 
       PS_GEX_DEPT_TBL   GDT,
       PS_NAMES          N, 
       PS_EMPLOYMENT     E,
       PS_JOB            J
WHERE  E.EMPLID            = J.EMPLID 
AND    E.EMPL_RCD          = J.EMPL_RCD
AND    N.EMPLID            = J.EMPLID	
AND    N.NAME_TYPE         = 'PRI'
AND    N.EFFDT             = (SELECT MAX(NN.EFFDT) FROM   PS_NAMES NN WHERE  
       				NN.EMPLID     = N.EMPLID    AND    
       				NN.NAME_TYPE  = N.NAME_TYPE AND    
       				NN.EFFDT       <= $ASOFDATE)
AND    J.EFFDT             = (SELECT MAX(EFFDT) FROM   PS_JOB WHERE  
				EMPLID  = J.EMPLID  AND    
				EMPL_RCD    = J.EMPL_RCD AND    
				EFFDT       <= $ASOFDATE)
AND    J.EFFSEQ            = (SELECT MAX(EFFSEQ) FROM   PS_JOB WHERE  
				EMPLID       = J.EMPLID AND    
				EMPL_RCD    = J.EMPL_RCD AND    
				EFFDT        = J.EFFDT)
AND    J.DEPTID            = GDT.DEPTID
AND    GDT.EFFDT           = (SELECT MAX(EFFDT) FROM   PS_GEX_DEPT_TBL WHERE  
				DEPTID       = GDT.DEPTID AND    
				EFFDT       <= $ASOFDATE)
AND    GDT.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM   PS_GEX_DEPT_TBL WHERE  
				DEPTID       = GDT.DEPTID AND    
				EFFDT        = GDT.EFFDT)
AND    DT.DEPTID           = J.DEPTID				
AND    DT.SETID            = 'COMMN'
AND    DT.EFF_STATUS       = 'A'
AND    DT.EFFDT            = (SELECT MAX(EFFDT) FROM   PS_DEPT_TBL WHERE  
				DEPTID       = DT.DEPTID AND    
				SETID        = DT.SETID AND    
				EFFDT       <= $ASOFDATE)
AND    AT.ACCT_CD          = J.ACCT_CD
 
!GEX-RBC Modified for Upgrade 9.0 on 09/26/2007 - Begin	
AND    AT.EFF_STATUS       = 'A'
AND    AT.EFFDT            = (SELECT MAX(EFFDT) FROM   PS_GEX_ACCT_CD_TBL WHERE  
				ACCT_CD      = AT.ACCT_CD AND    
				EFFDT       <= $ASOFDATE)
!GEX-RBC Modified for Upgrade 9.0 on 09/26/2007 - END	
AND    JT.SETID            = 'COMMN'
AND    JT.JOBCODE          = J.JOBCODE
AND    JT.EFF_STATUS       = 'A'
AND    JT.EFFDT            = (SELECT MAX(EFFDT) FROM   PS_JOBCODE_TBL WHERE  
			      JOBCODE    = JT.JOBCODE
       			      AND SETID  = JT.SETID
       			      AND EFFDT  <= $ASOFDATE)
AND   [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
AND   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
AND   [$GEXXX916x_INCLUDE_JOBCODE_JOBCAT_CRITERIA]
AND   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
AND   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]

ORDER BY J.DEPTID,J.JOBCODE,J.ACCT_CD
End-Select

  If $Data-Found-Flag-Main = 'N'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  Else
    
    show 'record count main      :' #record_count  
  End-If
End-Procedure


!***********************************************************************
Begin-Procedure Select-OTH-Earnings
!***********************************************************************
#debug9 Show 'Select-OTH-Earnings'
   Let #oth_hrs   = 0   
   Let #oth_earns = 0   
   Let $Data-Found-Flag-OTH = 'N'
   
   ! VENDTLL 
   ! SHOW ' $Empl_ID: ' $Empl_ID
   ! SHOW 'PEOTH.COMPANY    = ' $Company       
   ! SHOW ' PEOTH.PAYGROUP   = ' $Paygroup	
   ! SHOW ' PEOTH.DEPTID     = ' $Dept_ID
   ! SHOW ' :' $GEXXX924_INCLUDE_ERNCD_CRITERIA
   ! SHOW ' :' $GEXXX924_EXCLUDE_ERNCD_CRITERIA
   
   !VENDTLL
Begin-Select On-Error=SQL-Error-E('Select-OTH-Earnings')
PEOTH.DEPTID 
SUM(POE.OTH_HRS)     &oth_hours
SUM(POE.OTH_EARNS)   &oth_earns

 
    Let $Data-Found-Flag-OTH = 'Y'
    Let #oth_hours  = &oth_hours
    Let #oth_earns  = &oth_earns
    
    !VENDTLL Commented
    !SHOW 'Emplid : ' &PEOTH.DEPTID ' #oth_hours : ' #oth_hours ' '  &oth_hours
    !VENDTLL Commented
  Do Get-Hours-Wages
   
    Let #total_hours =  #reg_hours + #oth_hours
    Let #total_earns =  #reg_earns + #oth_earns
     
   Do Get-Employer-Paid-Benefits 
        If  $Data-Found-Flag-Empl-Paid= 'N'
         let #empl_paid_benefits  = 0
        End-If
    !show '$Data-Found-Flag-Empl-Paid>'  $Data-Found-Flag-Empl-Paid
    
   Do Get-Employer-Paid-Taxes
   
     Let #total_employer_pd_benefits = #empl_paid_benefits + #empl_paid_taxes
     
   Do Calculate-Blended-Wages
   
FROM PS_PAY_EARNINGS PEOTH, PS_PAY_OTH_EARNS POE
  WHERE  [$PAY_END_DATE_PEOTH]
     AND PEOTH.COMPANY    = POE.COMPANY
     AND PEOTH.PAYGROUP   = POE.PAYGROUP
     AND PEOTH.PAY_END_DT = POE.PAY_END_DT
     AND PEOTH.OFF_CYCLE  = POE.OFF_CYCLE
     AND PEOTH.PAGE_NUM   = POE.PAGE_NUM
     AND PEOTH.LINE_NUM   = POE.LINE_NUM
     AND PEOTH.ADDL_NBR   = POE.ADDL_NBR
     AND PEOTH.EMPLID     = $Empl_ID 
     AND PEOTH.COMPANY    = $Company       
     AND PEOTH.PAYGROUP   = $Paygroup	
     AND PEOTH.DEPTID     = $Dept_ID
     AND [$GEXXX924_INCLUDE_ERNCD_CRITERIA]
     AND [$GEXXX924_EXCLUDE_ERNCD_CRITERIA]
GROUP BY PEOTH.DEPTID
HAVING SUM(POE.OTH_EARNS) <> 0

End-Select
End-Procedure
!*************************************************************************************
begin-procedure Get-Hours-Wages
!*************************************************************************************
   Let #reg_hrs   = 0   
   Let #reg_earns = 0   
   Let $Data-Found-Flag-Reg = 'N'

#debug9 Show 'Get-Hours-Wages'

begin-SELECT
/*+ RULE */
PE.COMPANY 
PE.DEPTID 
PE.JOBCODE 
SUM(PE.REG_HRS) +  SUM(PE.REG_EARN_HRS)       &reg_hours
SUM(PE.REG_EARNS ) + SUM(PE.REG_HRLY_EARNS)   &reg_earns

  Let $Data-Found-Flag-Reg = 'Y'
  
  Let #reg_hours  = &reg_hours
  Let #reg_earns  = &reg_earns
 
FROM PS_PAY_EARNINGS PE
  WHERE  [$PAY_END_DATE]
     AND PE.EMPLID   = $Empl_ID 
     AND PE.COMPANY  = $Company       
     AND PE.PAYGROUP = $Paygroup	
     AND PE.DEPTID   = $Dept_ID
GROUP BY PE.COMPANY, PE.DEPTID, PE.JOBCODE
HAVING SUM(PE.REG_EARNS) + SUM(PE.REG_HRLY_EARNS) <> 0
End-Select
End-procedure


!*************************************************************************************
begin-procedure  Get-Employer-Paid-Benefits 
!*************************************************************************************
 Let #empl_paid_benefits = 0 
 
 Let $Data-Found-Flag-Empl-Paid = 'N'
 
#debug9 Show 'Get-Employer-Paid-Benefits'

begin-SELECT
PC.EMPLID
SUM(PD.DED_CUR)   &empl_paid_benefits
 
    Let $Data-Found-Flag-Empl-Paid= 'Y'
    
    Let #empl_paid_benefits = &empl_paid_benefits
  
FROM PS_PAY_CHECK PC, PS_PAY_DEDUCTION PD
WHERE PC.EMPLID =  $Empl_ID
     AND [$PAY_END_DATE_PC]
     AND PC.COMPANY    = PD.COMPANY
     AND PC.PAYGROUP   = PD.PAYGROUP
     AND PC.PAY_END_DT = PD.PAY_END_DT
     AND PC.OFF_CYCLE  = PD.OFF_CYCLE
     AND PC.PAGE_NUM   = PD.PAGE_NUM
     AND PC.LINE_NUM   = PD.LINE_NUM
     AND PC.SEPCHK     = PD.SEPCHK
     AND PC.COMPANY    = $Company      
     AND PC.PAYGROUP   = $Paygroup	
     AND PC.DEPTID     = $Dept_ID
     AND PD.DED_CLASS IN  ('L','N','P','T')
GROUP BY PC.EMPLID
End-Select
End-procedure

!*************************************************************************************
begin-procedure  Get-Employer-Paid-Taxes 
!*************************************************************************************
 Let #empl_paid_taxes = 0 
 Let $Empl-Paid-Taxes-Flag = 'N'

#debug9 Show 'Get-Employer-Paid-Taxes'

begin-SELECT
PC2.EMPLID
SUM(PT.TAX_CUR)      &empl_paid_taxes

  Let $Empl-Paid-Taxes-Flag = 'Y'
  Let #empl_paid_taxes = &empl_paid_taxes

FROM PS_PAY_CHECK PC2, PS_PAY_TAX PT
WHERE [$PAY_END_DATE_PC2] 
    AND PC2.EMPLID     =  $Empl_ID
    AND PC2.COMPANY    = PT.COMPANY
    AND PC2.PAYGROUP   = PT.PAYGROUP
    AND PC2.PAY_END_DT = PT.PAY_END_DT
    AND PC2.OFF_CYCLE  = PT.OFF_CYCLE
    AND PC2.PAGE_NUM   = PT.PAGE_NUM
    AND PC2.LINE_NUM   = PT.LINE_NUM
    AND PC2.SEPCHK     = PT.SEPCHK
    AND PC2.COMPANY    = $Company       
    AND PC2.PAYGROUP   = $Paygroup	
    AND PC2.DEPTID     = $Dept_ID
    AND PT.TAX_CLASS IN ('E','J','Q','R','U','X','Z')
group by PC2.EMPLID	
End-Select
End-procedure

    
!*************************************************************************************
begin-procedure Calculate-Blended-Wages
!*************************************************************************************
#debug9 Show 'Calculate-Blended-Wages'
 
        Let #blended_wages_calc = 0
 
        Let #blended_wages    = #total_employer_pd_benefits +  #total_earns
 
   	If #total_hours <> 0
          Let #blended_wages_calc = #blended_wages / #total_hours
        Else
          show 'Entered into #total_hours:'
          show ' SKIP  Record'
        End-If

      Do Insert-Into-Temp
    
End-procedure

!*********************************************************************
Begin-procedure Insert-Into-Temp
!*********************************************************************
#debug9 show 'Entered into Insert-Into-Temp'
	

  Do Find-Jobcategory 
  
  Let $Name = $Fname || ' ' || $Lname  
 
  !SHOW '$Empl_ID      		    :' $Empl_ID			
  !SHOW '$Name         		    :' $Name                      
  !SHOW 'Deptid        		    :' $Dept_ID                    
  !SHOW '$jobcode      		    :' $jobcode                   
  !SHOW '$jobcategory  		    :' $jobcategory               
  !SHOW '$Divcd        		    :' $Divcd                     
  !SHOW '$Acctcd       		    :' $Acctcd                    
  !SHOW '#total_hours  		    :' #total_hours               
  !SHOW '#total_earns  		    :' #total_earns               
  !SHOW '#empl_paid_benefits         :' #empl_paid_benefits       
  !SHOW '#total_employer_pd_benefits :' #total_employer_pd_benefits
  !SHOW '#blended_wages_calc         :' #blended_wages_calc 
  		                         
!  


begin-SQL On-Error=SQL-Error-E('Insert-Into-Temp')
Insert into SYSADM.PS_GEX_R_GEXPY106
     Values
       (nvl($Empl_ID,' '),          
	nvl($Name,' ') ,            
	nvl($Dept_ID,' ') ,           
        nvl($jobcode,' '),          
        nvl($jobcategory,' '),      
        nvl($Divcd,' '),            
        nvl($Acctcd,' '),           
	nvl(#total_hours,0) ,       
	nvl(#total_earns,0) ,       
	nvl(#total_employer_pd_benefits,0), 
	nvl(#blended_wages_calc,0)) 

end-sql
end-procedure



!************************************************************************
Begin-Procedure  Select-From-Temp-Detail
Begin-Select On-Error=SQL-Error-E('Select-From-Temp-Detail')
T.CATEGORY (,) On-Break Print=Never Level=1 skiplines=1 Save= $prvJOBCATEGORY !After=Jobcat-Change skiplines=1 Save= $prvJOBCATEGORY
T.DEPTID   (,) On-Break Print=Never Level=1 After=DeptID-Change skiplines=1 Save= $prvDEPTID  
T.JOBCODE  
T.GEX_COMPANY_DIV_CD               
T.NAME 
T.ACCT_CD
!GEX-AXG Added as the field length error was coming while updates testing - Begin 
!T.TOTAL_HRS
T.TOTAL_SAL
!GEX-AXG Added as the field length error was coming while updates testing - End
T.TOTAL_EARNINGS
!GEX-TLL 02/12/08 Added as the field length error was coming while updates-Begin 
!T.EMPLR_CONTRB_AMT
T.EMPLR_AMT
!GEX-TLL 02/12/08 Added as the field length error was coming while updates - End
T.RATE_AMOUNT

   Let $DeptId 	             =	 &T.DEPTID                 
   Let $T.JOBCODE            =   &T.JOBCODE 
   Let $T.CATEGORY           =   &T.CATEGORY
   Let $T.GEX_COMPANY_DIV_CD =   &T.GEX_COMPANY_DIV_CD     
   Let $T.NAME               =   &T.NAME                   
   Let $T.ACCT_CD            =   &T.ACCT_CD                
   !GEX-AXG Added as the field length error was coming while updates testing - Begin 
   !Let $T.TOTAL_HRS          =   &T.TOTAL_HRS              
   Let $T.TOTAL_HRS          =   &T.TOTAL_SAL              
   !GEX-AXG Added as the field length error was coming while updates testing - End
   Let $T.TOTAL_EARNINGS     =   &T.TOTAL_EARNINGS         
   !GEX-TLL Added - Begin
   !Let $T.EMPLR_CONTRB_AMT   =   &T.EMPLR_CONTRB_AMT       
   Let $T.EMPLR_CONTRB_AMT   =   &T.EMPLR_AMT
   !GEX-TLL Added - End
   Let $T.RATE_AMOUNT        =   &T.RATE_AMOUNT            


     Add 1 to #record_count_Detail
    Do Print-Report-Details
           	
FROM PS_GEX_R_GEXPY106 T
ORDER BY T.CATEGORY,T.DEPTID, T.JOBCODE ,T.GEX_COMPANY_DIV_CD, T.ACCT_CD,T.NAME
End-Select
   Show '#record_count_Detail:' #record_count_Detail
End-Procedure
!************************************************************************
Begin-Procedure Select-From-Temp-Summary
!************************************************************************
Begin-Select 
SUMMARY.DEPTID   (,) On-Break Print=Never Level=1 After=DeptID-Change skiplines=1 Save= $prvDEPTID  
SUMMARY.CATEGORY
SUMMARY.GEX_COMPANY_DIV_CD
SUMMARY.ACCT_CD
!GEX-AXG Added as the field length error was coming while updates testing - Begin
!SUM(SUMMARY.TOTAL_HRS)		&SUM_TOTAL_HRS
SUM(SUMMARY.TOTAL_SAL)		&SUM_TOTAL_HRS
!GEX-AXG Added as the field length error was coming while updates testing - End
SUM(SUMMARY.TOTAL_EARNINGS)	&SUM_TOTAL_EARNS
!GEX-TLL 02/12/08 Added as the field length error was coming while updates - Begin
!SUM(SUMMARY.EMPLR_CONTRB_AMT)	&SUM_EMPLR_CONTRB_AMT
SUM(SUMMARY.EMPLR_AMT)	&SUM_EMPLR_CONTRB_AMT
!GEX-TLL 02/12/08 Added as the field length error was coming while updates - end

    Add 1 to #record_count_Summary
           	
 LET $S.CATEGORY 	     = &SUMMARY.CATEGORY
 LET $S.GEX_COMPANY_DIV_CD   = &SUMMARY.GEX_COMPANY_DIV_CD   
 LET $S.DEPTID        	     = &SUMMARY.DEPTID               
 let $DeptId                 = &SUMMARY.DEPTID               
 LET $S.ACCT_CD              = &SUMMARY.ACCT_CD              
 LET $S.TOTAL_HRS	     = &SUM_TOTAL_HRS       
 LET $S.TOTAL_EARNINGS       = &SUM_TOTAL_EARNS     
 LET $S.EMPLR_CONTRB_AMT     = &SUM_EMPLR_CONTRB_AMT
 
 
  	Do Calc-Blended-Wgs-For-Summary-Rpt
 	Do Print-Report-Summary
  
 
FROM PS_GEX_R_GEXPY106 SUMMARY
GROUP BY SUMMARY.DEPTID,SUMMARY.CATEGORY,SUMMARY.GEX_COMPANY_DIV_CD, SUMMARY.ACCT_CD  
ORDER BY SUMMARY.DEPTID,SUMMARY.CATEGORY 
End-Select
        
	show '#record_count_Summary:' #record_count_Summary
	
End-Procedure



!************************************************************************
Begin-Procedure  Calc-Blended-Wgs-For-Summary-Rpt
!************************************************************************
 !show 'entered into Do Calcualte-Blended-Wgs'
 
  Let  #TOTAL_EARNINGS         = $S.TOTAL_EARNINGS
  Let  #TOTAL_EMPLR_CONTRB_AMT = $S.EMPLR_CONTRB_AMT
  Let  #TOTAL_HRS	       = $S.TOTAL_HRS	      
  
!  SHOW '#TOTAL_EARNINGS         :' #TOTAL_EARNINGS         
!  SHOW '#TOTAL_EMPLR_CONTRB_AMT :' #TOTAL_EMPLR_CONTRB_AMT 
!  SHOW '#S.TOTAL_HRS	        :' #S.TOTAL_HRS	        
  
  
  Let #sum-earnings         =  #TOTAL_EARNINGS +  #TOTAL_EMPLR_CONTRB_AMT
    show '#sum-earnings:' #sum-earnings
  If   #TOTAL_HRS <> 0 
  Let #SumBlendedWgs1	    =	 #sum-earnings / #TOTAL_HRS
End-if    
    show '#SumBlendedWgs1 :' #SumBlendedWgs1
    
  Let $SumBlendedWgs1 = edit(#SumBlendedWgs1,'99,999,999.99')

End-Procedure
!************************************************************************



!************************************************************************
Begin-Procedure  Find-Jobcategory 
!************************************************************************
! #debug9 show ' entered into Find-Jobcategory '
 
!  If $T.JOBCODE = '' and $JOBCODE = ''
!     Let $T.JOBCODE = ' '
!     Let $JOBCODE   = ' '
!  Else
!  
!  End-If
! 
!  SHOW '&T.CATEGORY:'  &T.CATEGORY
!  SHOW '$T.JOBCODE :'  $T.JOBCODE


!  SHOW '$JOBCODE   :'  $JOBCODE 
  
If $prcs_process_instance = ''
Begin-Select 
JCAT.CATEGORY
 
  Let $Jobcategory = &JCAT.CATEGORY
  
From  PS_GEX_R_GEXPY106T JCAT
Where  JCAT.JOBCODE= $JOBCODE  
!Where  JCAT.JOBCODE   in ($T.JOBCODE,$JOBCODE ) 
End-Select   

 
Else   ! running through page

Begin-Select 
JOBCAT.CATEGORY

  Let $Jobcategory = &JOBCAT.CATEGORY

From  PS_GEX_RC_JOBCAT JOBCAT
Where JOBCAT.OPRID                 = [$OprID]
And   JOBCAT.RUN_CNTL_ID           = [$Run_Cntl_ID]
And   Rtrim(JOBCAT.JOBCODE,  ' ') != ' '
And   Rtrim(JOBCAT.CATEGORY, ' ') != ' '
And   JOBCAT.JOBCODE    	   = $JOBCODE 
!And   JOBCAT.JOBCODE    in ($T.JOBCODE,$JOBCODE )
End-Select   
End-If

End-Procedure



!***********************************************************************
Begin-procedure Print-Report-Details
!***********************************************************************
    Use-Report Detail-Report
     Print $T.NAME                 (+1,{#col_name})
     Print $DeptId		   (+0,{#col_deptid})       	
     Print $T.GEX_COMPANY_DIV_CD   (+0,{#col_div_cd})       
     Print $T.ACCT_CD              (+0,{#col_acct_cd})
     Print $T.CATEGORY             (+0,{#col_job_category})
     Print $T.TOTAL_HRS            (+0,{#col_total_hrs})    edit 99,999,999.99
     Print $T.TOTAL_EARNINGS       (+0,{#col_total_wgs})    edit 99,999,999.99
     Print $T.EMPLR_CONTRB_AMT     (+0,{#col_empl_pd_benf})  edit 99,999,999.99
     Print $T.RATE_AMOUNT          (+0,{#col_blended_rt})  edit 99,999,999.99
  
END-PROCEDURE

!***********************************************************************
Begin-procedure Print-Report-Summary
!***********************************************************************
    Use-Report Summary-Report									
     Print $S.CATEGORY 	    	        (+1,{#col_name})           
     Print $S.DEPTID        	        (+0,{#col_deptid})	   
     Print $S.GEX_COMPANY_DIV_CD    	(+0,{#col_div_cd})          
     Print $S.ACCT_CD                   (+0,{#col_acct_cd})              
     Print $S.TOTAL_HRS	        	(+0,{#col_job_category})    edit 99,999,999.99
     Print $S.TOTAL_EARNINGS        	(+0,{#col_total_hrs})       edit 99,999,999.99
     Print $S.EMPLR_CONTRB_AMT      	(+0,{#col_total_wgs})       edit 99,999,999.99
     Print $SumBlendedWgs1		(+0,{#col_empl_pd_benf})   
END-PROCEDURE

!************************************************************************



!***********************************************************************
begin-procedure Jobcat-Change
!!***********************************************************************
 !show 'entered into  Before-Jobcat-Change' 
 New-Page
 
End-Procedure

!***********************************************************************
begin-procedure DeptID-Change
!!***********************************************************************
 !show 'entered into  Before-DeptID-Change' 
 New-Page
 
End-Procedure
!************************************************************************
Begin-Procedure SQL-Error-E($Action)
!************************************************************************
Let $Error_message= $sql-statement || ', EMPLOYEE=' || $EMPLID || ' Did not update'
show $Error_message

Let $SQL_Error_Msg1 = 'SQL Status: ' || to_char(#sql-status)
show $SQL_Error_Msg1

Let $SQL_Error_Msg2 = 'SQL Error: ' || $sql-error
show $SQL_Error_Msg2

!Let $Reason = $sql-error

!do Print-error('Sql Error',$Reason)

  Show $Action ' failed'
  Show $_sql-error
  show 'sql-status: ' #_sql-status
  Stop

end-procedure


!***********************************************************************
Begin-Procedure EOJ
!***********************************************************************
 
  if #record_count = 0
    print 'No Data Selected This Run'   (25,) Center
  ELSE
  show 'do nothing.'
  end-if
 
  Do Reset			
  
  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded

  Show 'Successful end of report'

End-Procedure


!***********************************************************************
#Include 'gexxx951.sqc'  !Select Oracle Instance
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx904.sqc'  !Get grade multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx908.sqc'  !Get sal_admin_plan multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#include 'gexxx916.sqc'  !Get jobcode multiple row table              !SCM 03/01/2001
#include 'gexxx922.sqc'  !Get pay single row run control
#include 'gexxx924.sqc'  !Get erncd multiple row table (for reg earnings codes)
#include 'gexxx955.sqc'  !Get erncd multiple row table (for overtime earnings codes)
#include 'gexxx956.sqc'  !Get erncd multiple row table (for holiday earnings codes)
#include 'gexxx950.sqc'  !Get SQRW run controls
!#include 'gexxx924.sqc'  !EARNINGS CODE

#include 'askaod.sqc'    !Ask As Of Date input
#include 'getcodta.sqc'  !Get company data
#include 'getpgdta.sqc'  !Get paygroup data
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for date math
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#include 'getdptnm.sqc'  !Get-Department-Name procedure
