!***********************************************************************
! GEXBN807: RETURN FROM LEAVE - INVALID TERMINATION ROW                *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!                                                                      *
!***********************************************************************
!  NARRATIVE: Return from Leave - Invalid Termination Row              *
!                                                                      *
!  This sqr will correct a Ben Admin bug that exists with plans that   *
!  have grace periods defined.  It will find future dated invalid      *
!  term rows as of the return-from-leave date and remove them.         *
!                                                                      *
!  RUN FREQUENCY:                                                      *
!                                                                      *
!  Weekly - Run after GEXBN805 (Pay End Dt vs. Paycheck Issue Dt)      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *  
!***********************************************************************
!  GBNC062   GXD       08/13/1998     INITIAL CREATION                 *
!  GBNC062   SXK       09/30/1998     Modified range to check actiondt *
!            CJH       01/02/2001     Add criteria to get-pay-end-dt   *
!                                     procedure to ignore off-cycle    *
!                                     calendar entries                 *                                                             *
!            PLN       12/11/2000     Modified to include sort by      *
!                                     Company/Paygroup so COD can      *
!                                     Administer                       *
!GEX-CXB            10/05/2007         No table structure change in 9.0*
!***********************************************************************

#include 'setenv.sqc' !Set environment

begin-setup

#include 'setup32a.sqc'

declare-report Report-log
Printer-Type=HPLASERJET
  layout=DEFAULT
end-declare

end-setup


!*********************************************************************
!Initial processing, retrieving current dates, etc. 
!*********************************************************************
begin-report
#debug9 show 'gexbn807.begin-report'

  use-report Report-log

  do Init-DateTime
  do Init-Number
  do stdapi-init
  
  move 'GEXBN807' to $ReportID
  move 'Return from Leave - Invalid Termination Row' to $ReportTitle
  show '$ReportID=' $ReportID
  show '$ReportTitle=' $ReportTitle 

  do Get-Current-DateTime
  show '$asoftoday=' $asoftoday 
  show '$reportdate=' $reportdate 
  
  do Report

!  do rollback-transaction                      !**debug**remove
  do Commit-Transaction                 

  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do stdapi-term

end-report

!*********************************************************************
!If this Program is being executed through process scheduler, 
!the run control parameters and calls the main processing procedure.
!Otherwise, interrogates the user for the run control parameters and 
!validates them. If the run control parameters are invalid, stops the
!execution.
!*********************************************************************
begin-procedure Report
#debug9 show 'gexbn807.report'

date-time () hh:mi:ss &timeBegan
display 'Report Began: ' noline
display &timeBegan

  move 'N' to $Errorfound

  move $asoftoday to $where_select_date
  
  show '$where_select_date= ' $where_select_date
!SXK 09/30/98 Added code to get the ranges from last sunday to sunday
!this week
  do get-pay-end-dt

  Do Convert-to-dtu-date($range_end_dt,$current_date)
  let $curr_yy = substr($current_date,1,4)
  let $curr_mm = substr($current_date,6,2)
  let $curr_dd = substr($current_date,9,2)
  let $curr_all = $curr_yy||$curr_mm||$curr_dd

!  Do Dtu-Subtract-days($current_date,7,$previous_dt)

  Do Convert-to-dtu-date($pay_begin_Dt,$previous_dt)
  let $prev_yy = substr($previous_dt,1,4)
  let $prev_mm = substr($previous_dt,6,2)
  let $prev_dd = substr($previous_dt,9,2)
  let $prev_all = $prev_yy||$prev_mm||$prev_dd

  display $prev_all
  display $curr_all

  do Main-Process

Report-Exit:

  date-time () hh:mi:ss &timeProcess

  display 'Records Deleted ' noline
  display 'From Health Benefit:     ' noline
  display #del_HB 999999
  display '    Records Deleted ' noline
  display 'From Health Dependents: ' noline
  display #del_HB_dep 999999
  display 'Records Deleted ' noline
  display 'From Life Add Ben:       ' noline
  display #del_LA 999999
  display '    Records Deleted ' noline
  display 'From Life Add Dependents:   ' noline
  display #del_LA_dep 999999
  display 'Records Deleted ' noline
  display 'From Savings Plan:       ' noline
  display #del_SP 999999
  display '    Records Deleted ' noline
  display 'From Savings Beneficiaries:   ' noline
  display #del_SP_dep 999999
  display '    Records Deleted ' noline
  display 'From Savings Investments:   ' noline
  display #del_SP_dep_1 999999
  display 'Records Deleted ' noline
  display 'From Disability Ben:     ' noline
  display #del_DB 999999
  display 'Records Deleted ' noline
  display 'From Fsa Benefit:        ' noline
  display #del_FB 999999

  display 'Total Rows Deleted:  ' noline 
  display #delete_count 999999

  print  'Records Deleted '           (+2,1)
  print 'From Health Benefit:     '       ()
  do Format-Number(#del_HB,$del_HB,'999999')
  print $del_HB                           ()
  print  'Records Deleted '           (+1,7)
  print 'From Health Dependents: '    ()
  do Format-Number(#del_HB_dep,$del_HB_dep,'999999')
  print $del_HB_dep                       ()
  print  'Records Deleted '           (+1,1)
  print 'From Life Add Ben:       '       ()
  do Format-Number(#del_LA,$del_LA,'999999')
  print $del_LA                           ()
  print  'Records Deleted '           (+1,7)
  print 'From Life Add Dependents: '  ()
  do Format-Number(#del_LA_dep,$del_LA_dep,'999999')
  print $del_LA_dep                       ()
  print  'Records Deleted '           (+1,1)
  print 'From Savings Plan:       '       ()
  do Format-Number(#del_SP,$del_SP,'999999')
  print $del_SP                           ()
  print  'Records Deleted '           (+1,7)
  print 'From Savings Beneficiaries:   '       ()
  do Format-Number(#del_SP_dep,$del_SP_dep,'999999')
  print $del_SP_dep                           ()
  print  'Records Deleted '           (+1,7)
  print 'From Savings Investments:   '       ()
  do Format-Number(#del_SP_dep_1,$del_SP_dep_1,'999999')
  print $del_SP_dep_1                           ()
  print  'Records Deleted '           (+1,1)
  print 'From Disability Ben:     '       ()
  do Format-Number(#del_DB,$del_DB,'999999')
  print $del_DB                           ()
  print  'Records Deleted '           (+1,1)
  print 'From Fsa Benefit:        '       ()
  do Format-Number(#del_FB,$del_FB,'999999')
  print $del_FB                           ()

  do Format-Number(#delete_count,$delete_count,'999999')
!  move #delete_count to $delete_count
  let $x000_temp_out =  'Total Rows Deleted:  ' || $delete_count
  print $x000_temp_out                (+1,1)

  Do Get-Current-DateTime
  Print 'End Time: ' (+2,1)
  Print $ReportDate      ()
  Print ' '              ()
  Print $ReportTime      ()

  display &timeProcess

end-procedure


!*********************************************************************
!Prints the header information in the report log.
!*********************************************************************

begin-heading 8 for-reports=(report-log)
#debug9 show 'gexbn807.begin-heading'

concat '(' with $reporttitle
concat $bp_name with $reporttitle
concat ')' with $reporttitle
 #Include 'stdhdg01.sqc'

!  date-time () DD-MON-YYYY &curr_Date 
!  print &curr_Date ()
  position (-1)
  print 'Report Log' () center bold

  position (+3)

  print 'Emplid'            (,01) bold
  print 'Empl_Rcd'          (,13) bold
!PLN 12/11/2000 begin
  print 'Company'		    (,25) bold
  print 'Paygroup'          (,35) bold
  print 'Plan Type'         (,45) bold
  print 'Coverage Begin Date' (,59) bold
! print 'Plan Type'         (,25) bold
!  print 'Coverage Begin Date'    (,39) bold
!PLN 12/11/2000 end
!  print 'Benefit Plan'      (,57) bold
  print '-'             (+1,1,80) fill
 
end-heading


!*********************************************************************
!Prints the footer in the report log
!*********************************************************************

begin-footing 2 for-reports=(Report-log)
#debug9 show 'gexbn807.begin-footing'

page-number (1,108) 'Page '  
last-page () ' of ' '.'

end-footing

!*********************************************************************
!Gets the pay end date of the previous pay cycle.
!*********************************************************************

Begin-Procedure get-pay-end-dt

move 'N' to $found

begin-select on-error=sql-error-found('Get-Pay-End-Dt')
PAY.PAY_BEGIN_DT
PAY.PAY_END_DT

  move &PAY.PAY_END_DT to $pay_end_Dt
  move &PAY.PAY_BEGIN_DT to $pay_begin_dt
  display 'Pay End Date:' noline
  display $pay_end_Dt
  move 'Y' to $found
  exit-select

FROM PS_PAY_CALENDAR PAY

WHERE PAY.PAY_END_DT = (SELECT MAX(PAY_END_DT)
   		      FROM PS_PAY_CALENDAR
		     WHERE PAY_END_DT <= $AsOfToday
! 01/02/2001 - add criteria to ignore off-cycle calendar entries
                       AND PAY_OFF_CYCLE_CAL = 'N')
AND PAY.PAY_OFF_CYCLE_CAL = 'N'
! 01/02/2001 - end

end-select

if $found = 'N'
   display 'No Previous Pay Cycle as of:' noline
   display $AsOfToday
   stop
else
   do convert-to-dtu-date($pay_end_Dt,$range_end_dt_dtu)
   do dtu-add-days($range_end_dt_dtu,1,$range_end_dt_dtu)
   do convert-from-dtu-date($range_end_dt_dtu,$range_end_dt)
   Display 'After adding one day to the pay end date'
   display $range_end_Dt
end-if

end-procedure
!*******************************************************************
!Retrieves all the benefit programs for this SQR program and process 
!them one by one
!*******************************************************************
Begin-Procedure Main-Process
!Display 'gexbn807.Main-Process'

 move 0 to #del_HB
 move 0 to #del_LA
 move 0 to #del_SP
 move 0 to #del_DB
 move 0 to #del_FB
 move 0 to #delete_count
 move 0 to #TotalInputTran
 
 Do Get-Job

end-procedure

!*****************************************************************
! Get Job Record Where Action Date Between Run Control Date and 
!         One Week (7 days) Prior to the Current Date
!*****************************************************************
begin-procedure Get-Job
!Display 'Get-Job'

begin-select
JB.EMPLID
   move &JB.EMPLID    to $emplid

JB.EMPL_RCD
   move &JB.EMPL_RCD to #empl_rcd


!PLN 12/11/2000 begin
JB.COMPANY
   move &JB.COMPANY to $company

JB.PAYGROUP
   move &JB.PAYGROUP to $paygroup
!PLN 12/11/2000 end



JB.EFFDT
   move &JB.EFFDT     to $effective_date

   Do Convert-to-dtu-date($effective_date,$effdt)
   let $eff_yy = substr($effdt,1,4)
   let $eff_mm = substr($effdt,6,2)
   let $eff_dd = substr($effdt,9,2)
   let $eff_all = $eff_yy||$eff_mm||$eff_dd

!   Display 'Job Selection'
!   Display $emplid
!   Display #empl_rcd
!   Display $eff_all

    add 1 to #TotalInputTran

    Do Get-Health-Benefit
    Do Get-Life-Add-Ben
    Do Get-Savings-Plan
    Do Get-Disability-Ben
    Do Get-Fsa-Benefit

FROM PS_JOB JB
WHERE JB.ACTION = 'RFL'
AND   (to_char(JB.ACTION_DT,'yyyymmdd') BETWEEN $prev_all AND $curr_all)
!AND   (to_char(JB.ACTION_DT,'yyyymmdd') BETWEEN '19980601' AND '19980817')
!PLN 12/11/2000 begin
ORDER BY JB.COMPANY, JB.PAYGROUP, JB.EMPLID
!PLN 12/11/2000 end

end-select
end-procedure

!********************************************************************
begin-procedure Get-Health-Benefit
!********************************************************************

begin-select
HB.EMPLID
HB.PLAN_TYPE
   move &HB.PLAN_TYPE    to $plan_type
HB.EFFDT
   move &HB.EFFDT        to $effective_date

   Do Convert-to-dtu-date($effective_date, $effdt)
   let $effdt_yy = substr($effdt,1,4)
   let $effdt_mm = substr($effdt,6,2)
   let $effdt_dd = substr($effdt,9,2)
   
HB.BENEFIT_PLAN
   move &HB.BENEFIT_PLAN to $benefit_plan
HB.COBRA_EVENT_ID
HB.BENEFIT_NBR
HB.COVERAGE_BEGIN_DT
   move &HB.COVERAGE_BEGIN_DT to $coverage_begin_dt
   move 'Health-Benefit' to $table_name

!   Display $emplid
!   Display #empl_rcd 
!   Display &HB.PLAN_TYPE
!   Display &HB.EFFDT
!   Display &HB.BENEFIT_PLAN
   Do Print-Record
   Do Delete-HB-Record

FROM PS_HEALTH_BENEFIT HB
WHERE HB.EMPLID         = $emplid
AND   HB.EMPL_RCD      = #empl_rcd
AND   HB.COVERAGE_ELECT = 'T'
AND   to_char(HB.COVERAGE_BEGIN_DT,'yyyymmdd') >= $eff_all

end-select
end-procedure

!********************************************************************
begin-procedure Get-Life-Add-Ben
!********************************************************************

begin-select
LA.EMPLID
LA.PLAN_TYPE
   move &LA.PLAN_TYPE    to $plan_type
LA.EFFDT
   move &LA.EFFDT        to $effective_date

   Do Convert-to-dtu-date($effective_date, $effdt)
   let $effdt_yy = substr($effdt,1,4)
   let $effdt_mm = substr($effdt,6,2)
   let $effdt_dd = substr($effdt,9,2)

LA.BENEFIT_PLAN
LA.COVERAGE_BEGIN_DT
   move &LA.COVERAGE_BEGIN_DT to $coverage_begin_dt

   move &LA.BENEFIT_PLAN to $benefit_plan

!   Display $emplid
!   Display #empl_rcd
!   Display &LA.PLAN_TYPE
!   Display &LA.EFFDT
!   Display &LA.BENEFIT_PLAN

   Do Print-Record
   Do Delete-LA-Record

FROM PS_LIFE_ADD_BEN LA
WHERE LA.EMPLID         = $emplid
AND   LA.EMPL_RCD      = #empl_rcd
AND   LA.COVERAGE_ELECT = 'T'
AND   to_char(LA.COVERAGE_BEGIN_dT,'yyyymmdd') >= $eff_all

end-select
end-procedure

!********************************************************************
begin-procedure Get-Savings-Plan  
!********************************************************************

begin-select
SP.EMPLID
SP.PLAN_TYPE
   move &SP.PLAN_TYPE    to $plan_type
SP.EFFDT
   move &SP.EFFDT        to $effective_date

   Do Convert-to-dtu-date($effective_date, $effdt)
   let $effdt_yy = substr($effdt,1,4)
   let $effdt_mm = substr($effdt,6,2)
   let $effdt_dd = substr($effdt,9,2)

SP.BENEFIT_PLAN
   move &SP.BENEFIT_PLAN to $benefit_plan
SP.COVERAGE_BEGIN_DT
   move &SP.COVERAGE_BEGIN_DT to $coverage_begin_dt

!   Display $emplid
!   Display #empl_rcd
!   Display &SP.PLAN_TYPE
!   Display &SP.EFFDT
!   Display &SP.BENEFIT_PLAN

   Do Print-Record
   Do Delete-SP-Record

FROM PS_SAVINGS_PLAN SP
WHERE SP.EMPLID         = $emplid
AND   SP.EMPL_RCD      = #empl_rcd
AND   SP.COVERAGE_ELECT = 'T'
AND   to_char(SP.COVERAGE_BEGIN_dT,'yyyymmdd') >= $eff_all

end-select
end-procedure

!********************************************************************
begin-procedure Get-Disability-Ben
!********************************************************************

begin-select
DB.EMPLID
DB.PLAN_TYPE
   move &DB.PLAN_TYPE    to $plan_type

DB.EFFDT            
   move &DB.EFFDT        to $effective_date

   Do Convert-to-dtu-date($effective_date, $effdt)
   let $effdt_yy = substr($effdt,1,4)
   let $effdt_mm = substr($effdt,6,2)
   let $effdt_dd = substr($effdt,9,2)

DB.BENEFIT_PLAN
   move &DB.BENEFIT_PLAN to $benefit_plan
DB.COVERAGE_BEGIN_DT
   move &DB.COVERAGE_BEGIN_DT to $coverage_begin_dt


!   Display $emplid
!   Display #empl_rcd 
!   Display &DB.PLAN_TYPE
!   Display &DB.EFFDT
!   Display &DB.BENEFIT_PLAN

   Do Print-Record
   Do Delete-DB-Record

FROM PS_DISABILITY_BEN DB
WHERE DB.EMPLID         = $emplid
AND   DB.EMPL_RCD      = #empl_rcd
AND   DB.COVERAGE_ELECT = 'T'
AND   to_char(DB.COVERAGE_BEGIN_dT,'yyyymmdd') >= $eff_all

end-select
end-procedure

!********************************************************************
begin-procedure Get-Fsa-Benefit
!********************************************************************

begin-select
FB.EMPLID
FB.PLAN_TYPE
   move &FB.PLAN_TYPE    to $plan_type

FB.EFFDT
   move &FB.EFFDT        to $effective_date

   Do Convert-to-dtu-date($effective_date, $effdt)
   let $effdt_yy = substr($effdt,1,4)
   let $effdt_mm = substr($effdt,6,2)
   let $effdt_dd = substr($effdt,9,2)

FB.BENEFIT_PLAN
   move &FB.BENEFIT_PLAN to $benefit_plan
FB.COVERAGE_BEGIN_DT
   move &FB.COVERAGE_BEGIN_DT to $coverage_begin_dt


!   Display $emplid
!   Display #empl_rcd
!   Display &FB.PLAN_TYPE
!   Display &FB.EFFDT
!   Display &FB.BENEFIT_PLAN

   Do Print-Record
   Do Delete-FB-Record

FROM PS_FSA_BENEFIT FB   
WHERE FB.EMPLID         = $emplid
AND   FB.EMPL_RCD      = #empl_rcd
AND   FB.COVERAGE_ELECT = 'T'
AND   to_char(FB.COVERAGE_BEGIN_dT,'yyyymmdd') >= $eff_all

end-select
end-procedure

!********************************************************************
begin-procedure Delete-HB-Record
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-HB-Record')
DELETE FROM PS_HEALTH_BENEFIT
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &HB.PLAN_TYPE
AND   EFFDT        = &HB.EFFDT
AND   BENEFIT_PLAN = &HB.BENEFIT_PLAN
end-sql

   Add #sql-count to #del_HB
   Add #sql-count to #delete_count

!do rollback-transaction
do delete-HB-Dependents

end-procedure

!********************************************************************
begin-procedure Delete-HB-Dependents
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-HB-Dependents')
DELETE FROM PS_HEALTH_DEPENDNT
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &HB.PLAN_TYPE
AND   EFFDT        = &HB.EFFDT
AND   COBRA_EVENT_ID = &HB.COBRA_EVENT_ID
AND   BENEFIT_NBR     = &HB.BENEFIT_NBR
end-sql

   Add #sql-count to #del_HB_dep
   Add #sql-count to #delete_count

!do rollback-transaction

end-procedure
!********************************************************************
begin-procedure Delete-LA-Record
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-LA-Record')
DELETE FROM PS_LIFE_ADD_BEN  
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &LA.PLAN_TYPE
AND   EFFDT        = &LA.EFFDT
AND   BENEFIT_PLAN = &LA.BENEFIT_PLAN
end-sql

!do rollback-transaction
   Add #sql-count to #del_LA
   Add #sql-count to #delete_count

do delete-la-dependents
end-procedure

!********************************************************************
begin-procedure Delete-LA-Dependents
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-LA-dependents')
DELETE FROM PS_LIFE_ADD_BENEFC  
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &LA.PLAN_TYPE
AND   EFFDT        = &LA.EFFDT
end-sql

!do rollback-transaction
   Add #sql-count to #del_LA_dep
   Add #sql-count to #delete_count

end-procedure
!********************************************************************
begin-procedure Delete-SP-Record
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-SP-Record')
DELETE FROM PS_SAVINGS_PLAN  
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &SP.PLAN_TYPE
AND   EFFDT        = &SP.EFFDT
AND   BENEFIT_PLAN = &SP.BENEFIT_PLAN
end-sql

   Add #sql-count to #del_SP
   Add #sql-count to #delete_count

!do rollback-transaction
do delete-SP-dependents
do delete-SP-dependents-1
end-procedure

!********************************************************************
begin-procedure Delete-SP-dependents
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-SP-dependents')
DELETE FROM PS_SAVINGS_BENEFIC  
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &SP.PLAN_TYPE
AND   EFFDT        = &SP.EFFDT
end-sql

   Add #sql-count to #del_SP_dep
   Add #sql-count to #delete_count

!do rollback-transaction

end-procedure
!********************************************************************
begin-procedure Delete-SP-dependents-1
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-SP-dependents-1')
DELETE FROM PS_SAVINGS_INVEST  
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &SP.PLAN_TYPE
AND   EFFDT        = &SP.EFFDT
end-sql

   Add #sql-count to #del_SP_dep_1
   Add #sql-count to #delete_count

!do rollback-transaction

end-procedure

!********************************************************************
begin-procedure Delete-DB-Record
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-DB-Record')
DELETE FROM PS_DISABILITY_BEN
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &DB.PLAN_TYPE
AND   EFFDT        = &DB.EFFDT
AND   BENEFIT_PLAN = &DB.BENEFIT_PLAN
end-sql

!do rollback-transaction
   Add #sql-count to #del_DB
   Add #sql-count to #delete_count

end-procedure

!********************************************************************
begin-procedure Delete-FB-Record
!********************************************************************
begin-sql on-error=SQL-Error-Found('Delete-FB-Record')
DELETE FROM PS_FSA_BENEFIT   
WHERE EMPLID       = $emplid
AND   EMPL_RCD    = #empl_rcd
AND   PLAN_TYPE    = &FB.PLAN_TYPE
AND   EFFDT        = &FB.EFFDT
AND   BENEFIT_PLAN = &FB.BENEFIT_PLAN
end-sql

!do rollback-transaction
   Add #sql-count to #del_FB
   Add #sql-count to #delete_count

end-procedure

!********************************************************************
! Print Record
!********************************************************************
begin-procedure Print-Record

 do Format-Number(#empl_rcd,$empl_rcd,'9')

 do convert-to-dtu-date($coverage_begin_Dt,$coverage_begin_dt_dtu)

 print $emplid                (+1,1)
 print $empl_rcd              (0,16)
!PLN 12/11/2000 begin
 print $company			(0,28)
 print $paygroup              (0,38)
 print $plan_type             (0,48)
 print $coverage_begin_dt_dtu (0,63)
! print $plan_type             (0,28)
! print $coverage_begin_dt_dtu (0,43)
!PLN 12/11/2000 end
! print $benefit_plan          (0,63)

end-procedure

!********************************************************************
!This procedure displays in the error report if there are any sql errors
!happened in the program
!********************************************************************
begin-procedure SQL-Error-Found($Proc_Name) 
#debug9 show 'gexbn804.SQL-Error-Found'

  print 'SQL Error in ' (,34)
  print $Proc_Name         ()  
  print $_sql-error        () 
  print 'sql-status:'      ()
  print #_sql-status       () edit 99999 

end-procedure

!**************************************************************  
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
!#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'payrnctl.sqc'  !Select-Parameters
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'readxlat.sqc'  !Read xlattable
