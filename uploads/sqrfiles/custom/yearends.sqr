!***********************************************************************
! YEARENDSQL Generate daily report for Request from Leave, email results *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! PeopeSoft, Inc.; it is not to be copied, reproduced, or transmitted  *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1988-1997 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
!      $Date:: 10/20/09         $                                      *
!  $Revision:: 0                $                                      *
!  $Workfile:: YEARENDSQL.SQR     $                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE		DESCRIPTION OF THE CHANGE      *        
!***********************************************************************
!           RKK      12/20/2010         INITIAL CREATION               *
!***********************************************************************
!***********************************************************************
#include 'setenv.sqc' 				! set enviroment
!***********************************************************************
!***********************************************************************

#Include 'setup32.sqc'   !Printer and page-size initialization

Begin-Report
#debug9 Show 'Begin-Report'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc
  
  Let $Quote = '"'
  Let $Comma = ','

  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  let $ReportID = 'YEARENDSQL'

  let $ReportTitle = 'Box 10'

  do openfile

  do Select-BOX-10
  do Select-BOX-12
  do Select-BOX-12D
  do Select-BOX-14S
  do Select-BOX-14T
  do Select-BOX-14U
  do Select-BOX-14W
  do Select-BOX-14X
  do Select-BOX-14Y
  do Select-BOX-14Z

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
 
end-report
!***********************************************************************
Begin-Procedure Openfile
!***********************************************************************

   Let $fileout = 'C:\Temp\Year_End_Reports.csv'   
   Open $fileout As 1 For-Writing Record=1000:Vary
   Move 'YEARENDSQL'			To $Report  
   encode '<012>' into $newline 
   write 1 from $Quote 'Report ID:           ' $Quote $Comma
                $Quote $Report                 $Quote $Comma
                $Quote '                     ' $Quote $Comma
                $Quote '                     ' $Quote $Comma
                $Quote '                     ' $Quote $Comma
                $Quote $ReportTitle            $Quote $Comma
                $Quote '                     ' $Quote $Comma
                $Quote '                     ' $Quote $Comma
                $Quote '                     ' $Quote $Comma
                $Quote '                     ' $Quote 
   
End-Procedure
!***********************************************************************
!***********************************************************************
Begin-Procedure Select-Box-10
#debug9 Show 'Select-Box-10'

let $TITLE1 = 'PLAN TYPE'
let $TITLE2 = 'DEDUCTION CODE'
let $TITLE3 = 'DESCRIPTION'
let $TITLE4 = 'DEDUCTION CLASS'
let $TITLE5 = 'EFFECTIVE DT'
let $TITLE6 = ' '
let $TITLE7 = ' '
let $TITLE8 = ' '
let $TITLE9 = ' '
let $TITLE10 = ' '

do Write-Header

Begin-Select

a.plan_type
a.dedcd
b.descr
a.ded_class
a.effdt 

  let $FIELD1 = &a.plan_type
  let $FIELD2 = &a.dedcd
  let $FIELD3 = &b.descr
  let $FIELD4 = &a.ded_class
  let $FIELD5 = &a.effdt
  let $FIELD6 = ' '
  let $FIELD7 = ' '
  let $FIELD8 = ' '
  let $FIELD9 = ' '
  let $FIELD10 = ' '
	Do Write-Record

from ps_deduction_class a, ps_deduction_tbl b
where a.ded_class = 'B'
and a.dedcd = b.dedcd 
and a.effdt = b.effdt
and(a.plan_type like '6%')
and (a. plan_type <> '60')
and a.effdt =(select max(effdt) from ps_deduction_class
where plan_type = a.plan_type
and dedcd = a.dedcd
and effdt <= sysdate) 
and a.effdt = b.effdt
and a.dedcd not in (select dedcd
from ps_taxform_ded
where box = '10'
and taxform_id = 'W'
and	effdt = '01-JAN-' || to_char(sysdate,'YYYY'))

End-Select

do create-to-list
do send-it           
close 1 

let $ReportTitle = 'Box 12'

do openfile 

end-procedure

!***********************************************************************
!***********************************************************************
Begin-Procedure Select-Box-12
#debug9 Show 'Select-Box-12'

let $TITLE1 = 'PLAN TYPE'
let $TITLE2 = 'DEDUCTION CODE'
let $TITLE3 = 'DESCRIPTION'
let $TITLE4 = 'DEDUCTION CLASS'
let $TITLE5 = 'EFFECTIVE DT'
let $TITLE6 = ' '
let $TITLE7 = ' '
let $TITLE8 = ' '
let $TITLE9 = ' '
let $TITLE10 = ' '

do Write-Header

Begin-Select

a1.plan_type
a1.dedcd
b1.descr
a1.ded_class
a1.effdt 

  let $FIELD1 = &a1.plan_type
  let $FIELD2 = &a1.dedcd
  let $FIELD3 = &b1.descr
  let $FIELD4 = &a1.ded_class
  let $FIELD5 = &a1.effdt
  let $FIELD6 = ' '
  let $FIELD7 = ' '
  let $FIELD8 = ' '
  let $FIELD9 = ' '
  let $FIELD10 = ' '
	Do Write-Record

from ps_deduction_class a1, ps_deduction_tbl b1
where a1.ded_class = 'T'
and a1.dedcd = b1.dedcd 
and a1.effdt = b1.effdt
and a1.plan_type in ('20','21') 
and a1.effdt =(select max(effdt) from ps_deduction_class
where plan_type = a1.plan_type
and dedcd = a1.dedcd
and effdt <= sysdate) 
and a1.effdt = b1.effdt
and a1.dedcd not in (select dedcd
from ps_taxform_ded
where box = '12C'
and taxform_id = 'W'
and	effdt = '01-JAN-' || to_char(sysdate,'YYYY'))	

End-Select

do create-to-list
do send-it           
close 1 

let $ReportTitle = '12D'

do openfile 

end-procedure

!***********************************************************************
!***********************************************************************
Begin-Procedure Select-Box-12D
#debug9 Show 'Select-Box-12D'

let $TITLE1 = 'PLAN TYPE'
let $TITLE2 = 'DEDUCTION CODE'
let $TITLE3 = 'DESCRIPTION'
let $TITLE4 = 'DEDUCTION CLASS'
let $TITLE5 = 'EFFECTIVE DT'
let $TITLE6 = ' '
let $TITLE7 = ' '
let $TITLE8 = ' '
let $TITLE9 = ' '
let $TITLE10 = ' '

do Write-Header

Begin-Select

a2.plan_type
a2.dedcd
b2.descr
a2.ded_class
a2.effdt 

  let $FIELD1 = &a2.plan_type
  let $FIELD2 = &a2.dedcd
  let $FIELD3 = &b2.descr
  let $FIELD4 = &a2.ded_class
  let $FIELD5 = &a2.effdt
  let $FIELD6 = ' '
  let $FIELD7 = ' '
  let $FIELD8 = ' '
  let $FIELD9 = ' '
  let $FIELD10 = ' '
	Do Write-Record

from ps_deduction_class a2, ps_deduction_tbl b2
where a2.ded_class = 'B'
and ((a2.dedcd like '4%' and A2.plan_type = '00')
       or (a2.plan_type like '4%'))
and a2.plan_type not in ('4X','4Y','4Z')
and a2.effdt =(select max(effdt) from ps_deduction_class
where plan_type = a2.plan_type
and dedcd = a2.dedcd
and effdt <= sysdate) 
and a2.dedcd = b2.dedcd 
and a2.effdt = b2.effdt
and a2.dedcd not in (select dedcd
from ps_taxform_ded
where box = '12D'
and taxform_id = 'W'
and	effdt = '01-JAN-' || to_char(sysdate,'YYYY'))	

End-Select

do create-to-list
do send-it           
close 1 

let $ReportTitle = '14S'

do openfile 

end-procedure

!***********************************************************************
!***********************************************************************
Begin-Procedure Select-Box-14S
#debug9 Show 'Select-Box-14S'

let $TITLE1 = 'PLAN TYPE'
let $TITLE2 = 'DEDUCTION CODE'
let $TITLE3 = 'DESCRIPTION'
let $TITLE4 = 'DEDUCTION CLASS'
let $TITLE5 = 'EFFECTIVE DT'
let $TITLE6 = ' '
let $TITLE7 = ' '
let $TITLE8 = ' '
let $TITLE9 = ' '
let $TITLE10 = ' '

do Write-Header

Begin-Select

a3.plan_type
a3.dedcd
b3.descr
a3.ded_class
a3.effdt 

  let $FIELD1 = &a3.plan_type
  let $FIELD2 = &a3.dedcd
  let $FIELD3 = &b3.descr
  let $FIELD4 = &a3.ded_class
  let $FIELD5 = &a3.effdt
  let $FIELD6 = ' '
  let $FIELD7 = ' '
  let $FIELD8 = ' '
  let $FIELD9 = ' '
  let $FIELD10 = ' '
	Do Write-Record

from ps_deduction_class a3, ps_deduction_tbl b3
where a3.ded_class = 'T'
and a3.dedcd = b3.dedcd 
and a3.effdt = b3.effdt
and a3.plan_type = '1V'
and a3.effdt =(select max(effdt) from ps_deduction_class
where plan_type = a3.plan_type
and dedcd = a3.dedcd
and effdt <= sysdate) 
and a3.effdt = b3.effdt
and a3.dedcd not in (select dedcd
from ps_taxform_ded
where box = '14S'
and	taxform_id = 'W'
and effdt = '01-JAN-' || to_char(sysdate,'YYYY'))	

End-Select

do create-to-list
do send-it           
close 1 

let $ReportTitle = '14T'

do openfile 

end-procedure

!***********************************************************************
!***********************************************************************
Begin-Procedure Select-Box-14T
#debug9 Show 'Select-Box-14T'

let $TITLE1 = 'PLAN TYPE'
let $TITLE2 = 'DEDUCTION CODE'
let $TITLE3 = 'DESCRIPTION'
let $TITLE4 = 'DEDUCTION CLASS'
let $TITLE5 = 'EFFECTIVE DT'
let $TITLE6 = ' '
let $TITLE7 = ' '
let $TITLE8 = ' '
let $TITLE9 = ' '
let $TITLE10 = ' '

do Write-Header

Begin-Select

a4.plan_type
a4.dedcd
b4.descr
a4.ded_class
a4.effdt 

  let $FIELD1 = &a4.plan_type
  let $FIELD2 = &a4.dedcd
  let $FIELD3 = &b4.descr
  let $FIELD4 = &a4.ded_class
  let $FIELD5 = &a4.effdt
  let $FIELD6 = ' '
  let $FIELD7 = ' '
  let $FIELD8 = ' '
  let $FIELD9 = ' '
  let $FIELD10 = ' '
	Do Write-Record

from ps_deduction_class a4, ps_deduction_tbl b4
where a4.ded_class = 'A'
and a4.dedcd = b4.dedcd 
and a4.effdt = b4.effdt
and (a4.dedcd like 'IN%'
	 and a4.plan_type = '00')  
and A4.effdt =(select max(effdt) from ps_deduction_class
where plan_type = a4.plan_type
and dedcd = a4.dedcd
and effdt <= sysdate) 
and a4.effdt = b4.effdt
and a4.dedcd not in (select dedcd
from ps_taxform_ded
where box = '14T'
and taxform_id = 'W'
and	effdt = '01-JAN-' || to_char(sysdate,'YYYY'))	

End-Select

do create-to-list
do send-it           
close 1 

let $ReportTitle = '14U'

do openfile 

end-procedure

!***********************************************************************
!***********************************************************************
Begin-Procedure Select-Box-14U
#debug9 Show 'Select-Box-14U'

let $TITLE1 = 'PLAN TYPE'
let $TITLE2 = 'DEDUCTION CODE'
let $TITLE3 = 'DESCRIPTION'
let $TITLE4 = 'DEDUCTION CLASS'
let $TITLE5 = 'EFFECTIVE DT'
let $TITLE6 = ' '
let $TITLE7 = ' '
let $TITLE8 = ' '
let $TITLE9 = ' '
let $TITLE10 = ' '

do Write-Header

Begin-Select

a5.plan_type
a5.dedcd
b5.descr
a5.ded_class
a5.effdt 

  let $FIELD1 = &a5.plan_type
  let $FIELD2 = &a5.dedcd
  let $FIELD3 = &b5.descr
  let $FIELD4 = &a5.ded_class
  let $FIELD5 = &a5.effdt
  let $FIELD6 = ' '
  let $FIELD7 = ' '
  let $FIELD8 = ' '
  let $FIELD9 = ' '
  let $FIELD10 = ' '
	Do Write-Record

from ps_deduction_class a5, ps_deduction_tbl b5
where a5.ded_class = 'A'
and a5.dedcd = b5.dedcd 
and a5.effdt = b5.effdt
and (a5.dedcd like 'AS%'
	 and a5.plan_type = '00')  
and A5.effdt =(select max(effdt) from ps_deduction_class
where plan_type = a5.plan_type
and dedcd = a5.dedcd
and effdt <= sysdate) 
and a5.effdt = b5.effdt
and a5.dedcd not in (select dedcd
from ps_taxform_ded
where box = '14U'
and taxform_id = 'W'
and	effdt = '01-JAN-' || to_char(sysdate,'YYYY'))	


End-Select

do create-to-list
do send-it           
close 1 

let $ReportTitle = '14W'

do openfile 

end-procedure

!***********************************************************************
!***********************************************************************
Begin-Procedure Select-Box-14W
#debug9 Show 'Select-Box-14W'

let $TITLE1 = 'PLAN TYPE'
let $TITLE2 = 'DEDUCTION CODE'
let $TITLE3 = 'DESCRIPTION'
let $TITLE4 = 'DEDUCTION CLASS'
let $TITLE5 = 'EFFECTIVE DT'
let $TITLE6 = ' '
let $TITLE7 = ' '
let $TITLE8 = ' '
let $TITLE9 = ' '
let $TITLE10 = ' '

do Write-Header

Begin-Select

a6.plan_type
a6.dedcd
b6.descr
a6.ded_class
a6.effdt 

  let $FIELD1 = &a6.plan_type
  let $FIELD2 = &a6.dedcd
  let $FIELD3 = &b6.descr
  let $FIELD4 = &a6.ded_class
  let $FIELD5 = &a6.effdt
  let $FIELD6 = ' '
  let $FIELD7 = ' '
  let $FIELD8 = ' '
  let $FIELD9 = ' '
  let $FIELD10 = ' '
	Do Write-Record

from ps_deduction_class a6, ps_deduction_tbl b6
where A6.ded_class = 'B'
and a6.dedcd = b6.dedcd 
and a6.effdt = b6.effdt
and (( A6.dedcd like '9FSA%' and A6.plan_type = '00' )
      OR  (A6.plan_type ='60'))     
and A6.effdt =(select max(effdt) from ps_deduction_class
where plan_type = A6.PLAN_TYPE
and dedcd = A6.DEDCD
and effdt <= sysdate) 
and a6.effdt = b6.effdt
and a6.dedcd not in (select dedcd
from ps_taxform_ded
where box = '14W'
and taxform_id = 'W'
and	effdt = '01-JAN-' || to_char(sysdate,'YYYY'))

End-Select

do create-to-list
do send-it           
close 1 

let $ReportTitle = '14X'

do openfile 

end-procedure

!***********************************************************************
!***********************************************************************
Begin-Procedure Select-Box-14X
#debug9 Show 'Select-Box-14X'

let $TITLE1 = 'PLAN TYPE'
let $TITLE2 = 'DEDUCTION CODE'
let $TITLE3 = 'DESCRIPTION'
let $TITLE4 = 'DEDUCTION CLASS'
let $TITLE5 = 'EFFECTIVE DT'
let $TITLE6 = ' '
let $TITLE7 = ' '
let $TITLE8 = ' '
let $TITLE9 = ' '
let $TITLE10 = ' '

do Write-Header

Begin-Select

a7.plan_type
a7.dedcd
b7.descr
a7.ded_class
a7.effdt 

  let $FIELD1 = &a7.plan_type
  let $FIELD2 = &a7.dedcd
  let $FIELD3 = &b7.descr
  let $FIELD4 = &a7.ded_class
  let $FIELD5 = &a7.effdt
  let $FIELD6 = ' '
  let $FIELD7 = ' '
  let $FIELD8 = ' '
  let $FIELD9 = ' '
  let $FIELD10 = ' '
	Do Write-Record

from ps_deduction_class a7, ps_deduction_tbl b7
where a7.ded_class = 'A'
and a7.dedcd = b7.dedcd 
and a7.effdt = b7.effdt
and ((a7.dedcd like 'UN%' 
and   a7.plan_type = '00')
and (a7.dedcd <> 'UNWAY'))  
and a7.effdt =(select max(effdt) from ps_deduction_class
where plan_type = a7.plan_type 
and dedcd = A7.dedcd
and effdt <= sysdate) 
and a7.effdt = b7.effdt
and a7.dedcd not in (select dedcd
    from ps_taxform_ded
    where box = '14X'
    and taxform_id = 'W'
    and	effdt = '01-JAN-' || to_char(sysdate,'YYYY'))	

End-Select

do create-to-list
do send-it           
close 1 

let $ReportTitle = '14Y'

do openfile 

end-procedure

!***********************************************************************
!***********************************************************************
Begin-Procedure Select-Box-14Y
#debug9 Show 'Select-Box-14Y'

let $TITLE1 = 'PLAN TYPE'
let $TITLE2 = 'DEDUCTION CODE'
let $TITLE3 = 'DESCRIPTION'
let $TITLE4 = 'DEDUCTION CLASS'
let $TITLE5 = 'EFFECTIVE DT'
let $TITLE6 = ' '
let $TITLE7 = ' '
let $TITLE8 = ' '
let $TITLE9 = ' '
let $TITLE10 = ' '

do Write-Header

Begin-Select

a8.plan_type
a8.dedcd
a8.descr
b8.ded_class
a8.effdt 

  let $FIELD1 = &a8.plan_type
  let $FIELD2 = &a8.dedcd
  let $FIELD3 = &a8.descr
  let $FIELD4 = &b8.ded_class
  let $FIELD5 = &a8.effdt
  let $FIELD6 = ' '
  let $FIELD7 = ' '
  let $FIELD8 = ' '
  let $FIELD9 = ' '
  let $FIELD10 = ' '
	Do Write-Record

  FROM PS_DEDUCTION_TBL A8, PS_DEDUCTION_CLASS B8 
  WHERE A8.EFFDT = 
        (SELECT MAX(A_ED.EFFDT) FROM PS_DEDUCTION_TBL A_ED 
        WHERE A8.PLAN_TYPE = A_ED.PLAN_TYPE 
          AND A8.DEDCD = A_ED.DEDCD 
          AND A_ED.EFFDT <= SYSDATE) 
     AND A8.PLAN_TYPE = B8.PLAN_TYPE 
     AND A8.DEDCD = B8.DEDCD 
     AND B8.EFFDT = 
        (SELECT MAX(B_ED.EFFDT) FROM PS_DEDUCTION_CLASS B_ED 
        WHERE B8.PLAN_TYPE = B_ED.PLAN_TYPE 
          AND B8.DEDCD = B_ED.DEDCD 
          AND B_ED.EFFDT <= SYSDATE)
  AND (A8.plan_type = '00' 
  AND (a8.dedcd like '1%'    or a8.dedcd like '2%' 
    or a8.dedcd like '3%'    or a8.dedcd like '7%'
    or a8.dedcd like '8%'    or a8.dedcd like '9%')
  OR A8.plan_type like '1%')
 AND a8.dedcd not in 
       (select dedcd
         from ps_taxform_ded
        where box = '14Y'
          and taxform_id = 'W'
          and effdt = '01-JAN-' || to_char(sysdate,'YYYY'))
order by A8.PLAN_TYPE, A8.DEDCD

End-Select

do create-to-list
do send-it           
close 1 

let $ReportTitle = '14Z'

do openfile 

end-procedure
!***********************************************************************
!***********************************************************************
Begin-Procedure Select-Box-14Z
#debug9 Show 'Select-Box-14Z'

let $TITLE1 = 'PLAN TYPE'
let $TITLE2 = 'DEDUCTION CODE'
let $TITLE3 = 'DESCRIPTION'
let $TITLE4 = 'DEDUCTION CLASS'
let $TITLE5 = 'EFFECTIVE DT'
let $TITLE6 = ' '
let $TITLE7 = ' '
let $TITLE8 = ' '
let $TITLE9 = ' '
let $TITLE10 = ' '

do Write-Header

Begin-Select

a9.plan_type
a9.dedcd
b9.descr
a9.ded_class
a9.effdt 

  let $FIELD1 = &a9.plan_type
  let $FIELD2 = &a9.dedcd
  let $FIELD3 = &b9.descr
  let $FIELD4 = &a9.ded_class
  let $FIELD5 = &a9.effdt
  let $FIELD6 = ' '
  let $FIELD7 = ' '
  let $FIELD8 = ' '
  let $FIELD9 = ' '
  let $FIELD10 = ' '
	Do Write-Record

from ps_deduction_class a9, ps_deduction_tbl b9
where a9.ded_class = 'A'
and a9.dedcd = b9.dedcd 
and a9.effdt = b9.effdt
and (a9.dedcd like 'UN%' 
and   a9.plan_type = '00')
and a9.effdt =(select max(effdt) from ps_deduction_class
where plan_type = a9. plan_type 
and dedcd = A9.dedcd
and effdt <= sysdate) 
and a9.effdt = b9.effdt
and a9.dedcd not in (select dedcd
    from ps_taxform_ded
    where box = '14Z'
    and taxform_id = 'W'
    and	effdt = '01-JAN-' || to_char(sysdate,'YYYY'))	

End-Select

do create-to-list
do send-it           
close 1 

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure  create-to-list
#debug9 display 'create-to-list'

   let $to_list = 'heidi.curiale@gianteagle.com'
!   let $to_list = &GEX_EMAIL_ADDR.EMAILID || ';'

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure  send-it
#debug9 display 'send-it'

let $subject = 'Year End Reporting'

let $enter = chr(10)

let $body_txt = 'Reports for Year End Attached.' 

let $mail-cmd = 'psmail -TO"'||$to_list||'" -SUBJECT"'||$subject||'" -BODY"'||$body_txt||'" -FILE"'||$fileout

CALL SYSTEM USING $mail-cmd #Status 

end-procedure
!**********************************************************************
!*       Write Header                                                 *
!**********************************************************************
Begin-procedure Write-Header
#debug9 show 'Write-Header'
  
  Write 1 from $newline
  write 1 from    $Quote $TITLE1                 $Quote $Comma
                  $Quote $TITLE2                 $Quote $Comma
                  $Quote $TITLE3                 $Quote $Comma
                  $Quote $TITLE4                 $Quote $Comma
                  $Quote $TITLE5                 $Quote $Comma
                  $Quote $TITLE6                 $Quote $Comma
                  $Quote $TITLE7                 $Quote $Comma
                  $Quote $TITLE8                 $Quote $Comma
                  $Quote $TITLE9                 $Quote $Comma
                  $Quote $TITLE10                $Quote
 
end-procedure !Write-Header
!**********************************************************************
!*       Write File                                                   *
!**********************************************************************

Begin-procedure Write-Record
#debug9 show 'Write-Record'

   write 1 from    $Quote $FIELD1                 $Quote $Comma
                   $Quote $FIELD2                 $Quote $Comma
                   $Quote $FIELD3                 $Quote $Comma
                   $Quote $FIELD4                 $Quote $Comma
                   $Quote $FIELD5                 $Quote $Comma
                   $Quote $FIELD6                 $Quote $Comma
                   $Quote $FIELD7                 $Quote $Comma
                   $Quote $FIELD8                 $Quote $Comma
                   $Quote $FIELD9                 $Quote $Comma
                   $Quote $FIELD10                $Quote 
                                              
end-procedure
!***********************************************************************
!***********************************************************************
#include 'reset.sqc'        ! Reset printer
#include 'curdttim.sqc'     ! Current Date and Time
#Include 'datetime.sqc'     ! Routines for date and time formatting
#Include 'number.sqc'       !Routines to format numbers
#include 'getlocnm.sqc'     !Get-Location-Name procedure
#Include 'stdapi.sqc'       !Routines to Update Run Status
#include 'getdptnm.sqc'     !Get-Department-Name procedure
#include 'getjobtl.sqc'     !Get-Job-Title procedure
#include 'readxlat.sqc'     !Read-Translate-Table procedure
#Include 'getposnm.sqc'     !Get-Position-Title
