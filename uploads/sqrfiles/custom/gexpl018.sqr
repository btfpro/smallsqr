!***********************************************************************
! GEXPL018:   TRAINING WAGES AND HOURS                                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced, or transmitted*
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPL018:             TRAINING WAGES AND HOURS                       *
!                                                                      *
! Narrative:            This program produces a detail report of       *
!                       employees. It lists Company, dept, acct_cd,    *
!                       jobcode, emplid, name, orig_hire_dt, hourly_rt *
!                       billable training hours and wages and          *
!                       non-billable training hours and wages. The     *
!                       report will execute for a given runid.         *
!                                                                      *
!                       The report accumulates the billable hours and  *
!                       wages and non billable hours and wages and the *
!                       number of employees. The report prints the     *
!                       subtotal containing the above data when the    *
!                       break occurs in DEPTID.                        *
!                                                                      *
!                                                                      *
! #Debugx Used:    	#debug9 paragraph trace                        *
!		      	#debug8 key variable values                    *
!		      	#debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           PS_PAY_CAL_BAL_ID                              *
!                       PS_GEX_DEPT_TBL                                *
!                       PS_PERSONAL_DATA                               *
!                       PS_JOB                                         *
!                       PS_PAY_OTH_EARNS                               *
!                       PS_PAY_EARNINGS                                *
!                                                                      *
! Written by:           Joe Besagar                                    *
!                                                                      *
! Normally run:         Weekly                                         *
!                                                                      *
! Control Parms:        FOR WHERE CLAUSE:                              *
!                         Company Division Code                        *
!                         Company  	                                   *
!                         Company/Paygroup                             *
!                         Deptid                                       *
!                         Acctcd                                       *
!                         Empl_Status	                             *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE           DESCRIPTION OF THE CHANGE        *
!***********************************************************************
! GEXPL018    JNB     01/29/1998      INITIAL CREATION                 *
!             JNB     04/07/1998      ADDED RUN CONTROL PANEL          *
!             JDH     12/11/1998      FIXED PROBLEM WITH A VARIABLE.   *
!                                     ADDED LOGIC TO LOOK AT MOST      *
!                                      RECENT PAY END DATE.            *
!             JDH     12/14/1998      PERFORMANCE TUNING.              *
!             JDH     01/18/1999      BILLABLE AND SPREAD COLUMN       *
!                                      HEADINGS WERE BACKWARDS.        *
!                                     MOVED COMPANY AND DEPTID TO      *
!                                      HEADING.                        *
!                                     ADDED ACCT_CD DESCR.             *
!             JDH     01/22/1999      ADDED COMPANY SUBTOTALS.         *
!                                     MODIFIED LOGIC TO PULL DEPTID    *
!                                      AND ACCT_CD FROM PAY_EARNINGS.  *
!GEX-VENDCXB  CXB     09/11/2007     ORIG_HIRE_DT was selected from     *	
!			             PER_ORG_INST table instead of     *
!			             PERSONAL_DATA.		       *
!             GEX-MXT 04/02/2008     ADDED THE join condition for      *
!                                    PER_ORG_INST                      *
! GEX_SEC_REENG 2015-04-29 Vahini Katta                                *
! Changes related to gex_emplid_mapp/7 digit emplid                    *
!***********************************************************************

 
#include 'setenv.sqc'   !Set environment
#Include 'setup02.sqc'  !Printer and page-size initialization


!selection criteria
#define #x000_col_selection_criteria_a 	02
#define #x000_col_selection_criteria_b 	05

!line 1
#define #x000_col_name  		1
#define #x000_col_emp#  		37
#define #x000_col_acctcd            52
#define #x000_col_acctname          62
#define #x000_col_jobcode  		78
#define #x000_col_hire  		89
#define #x000_col_hourly  		102
#define #x000_col_spread1  		116
#define #x000_col_spread2  		133
#define #x000_col_billable1  		149
#define #x000_col_billable2  		165


begin-heading 8
#debug9 show 'begin-heading'

 #Include 'stdhdg02.sqc'

  Let #x000_temp_out = 'Sorted by ' || $x000_order_by
  print $x000_temp_out   (3,) center

  print 'DeptID'         (4,1)
  print $Deptid          (4,13)

  print 'ACCT'           (+2,{#x000_col_acctname})
  print 'JOB'            (0,{#x000_col_jobcode})
  print 'HIRE'           (0,{#x000_col_hire})
  print '   HOURLY'      (0,{#X000_col_hourly})
  print '    SPREAD'     (0,{#X000_col_spread1})
  print '    SPREAD'     (0,{#X000_col_spread2})
  print '  BILLABLE'     (0,{#X000_col_billable1})
  print '  BILLABLE'     (0,{#X000_col_billable2})

  print 'EMPLOYEE NAME'  (+1,{#x000_col_name})
  print 'EMP#'           (0,{#x000_col_emp#})
  print 'ACCT'           (0,{#x000_col_acctcd})
  print 'DESCR'          (0,{#x000_col_acctname})
  print 'CODE'           (0,{#X000_col_jobcode})
  print 'DATE'           (0,{#X000_col_hire})
  print '     RATE'      (0,{#X000_col_hourly})
  print '     HOURS'     (0,{#X000_col_spread1})
  print '     WAGES'     (0,{#X000_col_spread2})
  print '     HOURS'     (0,{#X000_col_billable1})
  print '     WAGES'     (0,{#X000_col_billable2})

  print '-'              (+1,{#x000_col_name},30)     fill
  print '-'              (0,{#x000_col_emp#},9)       fill
  print '-'              (0,{#x000_col_acctcd},4)     fill
  print '-'              (0,{#x000_col_acctname},10)  fill
  print '-'              (0,{#X000_col_jobcode},5)    fill
  print '-'              (0,{#X000_col_hire},8)       fill
  print '-'              (0,{#X000_col_hourly},9)     fill
  print '-'              (0,{#X000_col_spread1},10)   fill
  print '-'              (0,{#X000_col_spread2},10)   fill
  print '-'              (0,{#X000_col_billable1},10) fill
  print '-'              (0,{#X000_col_billable2},10) fill
end-heading


begin-report
#debug9 show 'begin-report'
  do Set-Optimizer-Goal
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do stdapi-init
  do p010-Init-Variables
  do p100-Get-Employees-Data
  do stdapi-term
  do reset
  show 'Successful end of report'
end-report


begin-procedure Set-Optimizer-Goal
#debug9 Show 'Set-Optimizer-Goal'
! CJH - 07/25/2001 - begin
!  Begin-SQL
!    Alter Session Set OPTIMIZER_GOAL=RULE;
!  End-SQL
   begin-SQL
      alter session set sql_trace=true;
   end-sql
  
! CJH - 07/25/2001 - end
end-procedure


begin-procedure P010-Init-Variables
#debug9 show 'P010-Init-Variables'
  let $x000_new_page_flag = 'N'
  
  let $ReportID           = 'GEXPL018'
  let $ReportTitle        = 'TRAINING WAGES AND HOURS'
  let $Country            = 'USA'

  show '$ReportID= '     $ReportID
  show '$ReportTitle = ' $ReportTitle 

  Do GEXXX951-Select-Oracle-Instance
  
  Let $GEXXX900_Company_Alias  = 'PE.COMPANY'                           
  Let $GEXXX901_Company_Alias  = 'PE.COMPANY' 
  Let $GEXXX901_Paygroup_Alias = 'PE.PAYGROUP'    
  Let $GEXXX902_Deptid_Alias   = 'PE.DEPTID'  
  Let $GEXXX903_Emp_Stat_Alias = 'JOB.EMPL_STATUS'  
  Let $GEXXX907_Div_CD_Alias   = 'GEX_DEPT.GEX_COMPANY_DIV_CD'
  Let $GEXXX909_Acct_CD_Alias  = 'PE.ACCT_CD'

  if $Prcs_Process_Instance = ''
    Do GEXXX950-Input-Parameters
  else
    Do GEXXX922-Select-Parameters
    let $X000_WHERE_SELECT_ASOFDATE = $GEX_RC_PAY.ASOFDATE

    if rtrim($GEX_RC_PAY.ASOFDATE,' ') = ''
      let $X000_WHERE_SELECT_ASOFDATE = $asoftoday
    end-if

    do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE ,{DEFDATE}, '', '')

    Do GEXXX900-Select-Company-Parameters 
    Do GEXXX901-Select-Company-Paygroup-Parameters    
    Do GEXXX902-Select-Deptid-Parameters 
    Do GEXXX903-Select-Emp-Stat-Parameters          
    Do GEXXX907-Select-Div-CD-Parameters
    Do GEXXX909-Select-Acct-CD-Parameters
  end-if  

  let $AsOfDate = $X000_WHERE_SELECT_ASOFDATE
  let $X000_ORDER_BY = 'Company, DeptID, Hire Date, Emp#'

  show '$GEXXX907_INCLUDE_DIV_CD_CRITERIA                =' $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  show '$GEXXX900_INCLUDE_COMPANY_CRITERIA               =' $GEXXX900_INCLUDE_COMPANY_CRITERIA
  show '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA      =' $GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA   
  show '$GEXXX902_INCLUDE_DEPTID_CRITERIA                =' $GEXXX902_INCLUDE_DEPTID_CRITERIA
  show '$GEXXX903_INCLUDE_EMP_STAT_CRITERIA              =' $GEXXX903_INCLUDE_EMP_STAT_CRITERIA
  show '$GEXXX909_INCLUDE_ACCT_CD_CRITERIA               =' $GEXXX909_INCLUDE_ACCT_CD_CRITERIA         
  show '$X000_WHERE_SELECT_ASOFDATE                      =' $X000_WHERE_SELECT_ASOFDATE 
 
  print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
  print '$Prcs_OPRID          ='                              (+1,{#x000_col_selection_criteria_b})
  print $Prcs_OPRID                                           (0,+2)
  print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
  print $PRCS_RUN_CNTL_ID                                     (0,+2)

  print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,{#x000_col_selection_criteria_a})
  print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA 		(0,+2)
  print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA            (0,+2)
  print '$GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX901_INCLUDE_COMPANY_PAYGROUP_DISPLAY_CRITERIA   (0,+2)
  print '$GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA           ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX902_INCLUDE_DEPTID_DISPLAY_CRITERIA	            (0,+2)
  print '$GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA         ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX903_INCLUDE_EMP_STAT_DISPLAY_CRITERIA           (0,+2)
  print '$GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA          ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX909_INCLUDE_ACCT_CD_DISPLAY_CRITERIA            (0,+2)

  print '$X000_WHERE_SELECT_ASOFDATE                         ='   (+1,{#x000_col_selection_criteria_b})
  print $X000_WHERE_SELECT_ASOFDATE                           (0,+2)
  print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,{#x000_col_selection_criteria_a})
  print '$X000_ORDER_BY                                      ='   (+1,{#x000_col_selection_criteria_b})
  print $X000_ORDER_BY 	(0,+2)

  let #page-count = 0
end-procedure


begin-procedure p100-Get-Employees-Data
#debug9 show 'p100-Get-Employees-Data
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  date-time () MM/DD/YYYY &curr_date

  move 'N' to $Errorfound

  do P115-process-employee-data

  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
end-procedure
                             

begin-procedure p115-process-employee-data
#debug9 show 'p115-process-employee-data
begin-select ON-ERROR=P900-SQL-Error-Found('p115-Process-employee-data')

  let $Data_Found_Flag = 'N'

pe.company        () ON-BREAK LEVEL=1
                              PRINT=NEVER
                              SAVE=$PREV_COMPANY
                              AFTER=P260-AFTER-COMPANY-CHANGE 

pe.deptid         () ON-BREAK LEVEL=2
                              PRINT=NEVER
                              SAVE=$PREV_DEPT
                              BEFORE=P250-BEFORE-DEPTID-CHANGE 
                              AFTER=P255-AFTER-DEPTID-CHANGE 
!GEX-CXB    FCIL  09/11/07 Begin

!per.orig_hire_dt  () ON-BREAK LEVEL=3
inst.orig_hire_dt  () ON-BREAK LEVEL=3
 
!GEX-CXB    FCIL  09/11/07 End
                              PRINT=NEVER

pe.emplid         () ON-BREAK LEVEL=4
                              PRINT=NEVER

pe.paygroup       () ON-BREAK LEVEL=5
                              PRINT=NEVER
                              AFTER=P300-PAYGROUP-CHANGE 

pe.acct_cd
job.jobcode
per.name
job.hourly_rt
po.erncd
po.oth_hrs
po.oth_earns

  let $Data_Found_Flag = 'Y'

  Let $Company = &pe.company
  Let $Deptid  = &pe.deptid
  move &pe.emplid        to $emplid
  move &po.erncd         to $erncode
  move &pe.company       to $zcompany
  move &pe.deptid        to $zdeptid 
  move &pe.acct_cd       to $zacct_cd
  move &JOB.jobcode      to $zjobcode         
  move &per.name         to $zper_name
  move &inst.orig_hire_dt to $zper_orig_hire_dt
  move &JOB.hourly_rt    to #z_hourly_rt
                           
  if substr($erncode,1,2) = '14'       
    move &PO.OTH_HRS    to #OTH_HRS_14
    move &PO.OTH_EARNS  to #OTH_EARNS_14
      
    add  #OTH_HRS_14    TO #OTH_HRS_14_EMP
    add  #OTH_EARNS_14  TO #OTH_EARNS_14_EMP

    add  #OTH_HRS_14    TO #DEPT_OTH_HRS_14
    add  #OTH_EARNS_14  TO #DEPT_OTH_EARNS_14
  end-if

  if substr($erncode,1,2) = '15'       
    move &PO.OTH_HRS    to #OTH_HRS_15
    move &PO.OTH_EARNS  to #OTH_EARNS_15

    add  #OTH_HRS_15    TO #OTH_HRS_15_EMP
    add  #OTH_EARNS_15  TO #OTH_EARNS_15_EMP

    add  #OTH_HRS_15    TO #DEPT_OTH_HRS_15
    add  #OTH_EARNS_15  TO #DEPT_OTH_EARNS_15
  end-if
 
FROM   PS_GEX_DEPT_TBL    GEX_DEPT,
       PS_PERSONAL_DATA   PER,
!GEX-CXB    FCIL  09/11/07 Begin
       PS_PER_ORG_INST    INST,
!GEX-CXB    FCIL  09/11/07 End 
       PS_JOB             JOB,
       PS_PAY_EARNINGS    PE,
       PS_PAY_OTH_EARNS   PO

WHERE (PO.ERNCD LIKE '14%'  OR
       PO.ERNCD LIKE '15%')

AND    PE.PAY_END_DT      =
      (SELECT MAX(PAY_END_DT)
       FROM   PS_PAY_CAL_BAL_ID
       WHERE  COMPANY     = PE.COMPANY
       AND    PAYGROUP    = PE.PAYGROUP
       AND    PAY_END_DT <= $X000_WHERE_SELECT_ASOFDATE
       AND    BALANCE_ID  = 'CY')

AND    pe.company         = po.company
AND    pe.paygroup        = po.paygroup
AND    pe.pay_end_dt      = po.pay_end_Dt
AND    pe.off_cycle       = po.off_cycle
AND    pe.page_num           = po.page_num
AND    pe.line_num           = po.line_num
AND    pe.addl_nbr           = po.addl_nbr
AND    pe.sepchk          = po.sepchk

AND    JOB.EMPLID         = PE.EMPLID
AND    JOB.EMPL_RCD      = PE.EMPL_RCD
AND    JOB.COMPANY        = PE.COMPANY
AND    JOB.PAYGROUP       = PE.PAYGROUP

AND    JOB.EFFDT          =
      (SELECT MAX(EFFDT)
       FROM   PS_JOB
       WHERE  EMPLID      = PE.EMPLID 
       AND    EMPL_RCD   = PE.EMPL_RCD
       AND    EFFDT      <= PE.PAY_END_DT)

AND    JOB.EFFSEQ         =
      (SELECT MAX(EFFSEQ)
       FROM   PS_JOB
       WHERE  EMPLID      = JOB.EMPLID
       AND    EMPL_RCD   = JOB.EMPL_RCD
       AND    EFFDT       = JOB.EFFDT)

AND    PER.EMPLID         = PE.EMPLID
!GEX-CXB   FCIL  09/11/07 Begin
AND    PER.EMPLID	  =INST.EMPLID
AND    INST.EMPLID	  = PE.EMPLID
! GEX-CXB  FCIL  09/11/07 End
AND    INST.ORG_INSTANCE_ERN  = JOB.EMPL_RCD	!GEX-MXT added for PER_ORG_INST join
AND    GEX_DEPT.DEPTID    = PE.DEPTID 

AND    GEX_DEPT.EFFDT     =
      (SELECT MAX(EFFDT)
       FROM   PS_GEX_DEPT_TBL
       WHERE  DEPTID      = PE.DEPTID
       AND    EFFDT      <= PE.PAY_END_DT)

AND    GEX_DEPT.SEQUENCE_NUMBER =
      (SELECT MAX(SEQUENCE_NUMBER)
       FROM   PS_GEX_DEPT_TBL
       WHERE  DEPTID      = GEX_DEPT.DEPTID
       AND    EFFDT       = GEX_DEPT.EFFDT)

AND   [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
AND   [$GEXXX901_INCLUDE_COMPANY_PAYGROUP_CRITERIA] 
AND   [$GEXXX902_INCLUDE_DEPTID_CRITERIA]
AND   [$GEXXX903_INCLUDE_EMP_STAT_CRITERIA]
AND   [$GEXXX909_INCLUDE_ACCT_CD_CRITERIA]
AND   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]

ORDER BY PE.COMPANY, PE.DEPTID, INST.ORIG_HIRE_DT, PE.EMPLID, PE.PAYGROUP
end-select

  if $Data_Found_Flag = 'N'
    NEW-PAGE
    print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) CENTER
  end-if

  PRINT 'REPORT TOTAL'           (+3,8)  
  PRINT #RPT_OTH_HRS_14          (,{#x000_col_spread1})      EDIT 999,999.99
  PRINT #RPT_OTH_EARNS_14        (,{#x000_col_spread2})      EDIT 999,999.99 
  PRINT #RPT_OTH_HRS_15          (,{#x000_col_billable1})    EDIT 999,999.99
  PRINT #RPT_OTH_EARNS_15        (,{#x000_col_billable2})    EDIT 999,999.99
END-PROCEDURE


BEGIN-PROCEDURE P250-BEFORE-DEPTID-CHANGE
#debug9 show 'P250-BEFORE-DEPTID-CHANGE'
  NEW-PAGE
END-PROCEDURE


BEGIN-PROCEDURE P255-AFTER-DEPTID-CHANGE
#debug9 show 'P255-AFTER-DEPTID-CHANGE'
  move 0 to #oth_hrs_14
  move 0 to #oth_earns_14
  move 0 to #oth_hrs_15
  move 0 to #oth_earns_15
 
  move 0 to #oth_hrs_14_emp
  move 0 to #oth_earns_14_emp
  move 0 to #oth_hrs_15_emp
  move 0 to #oth_earns_15_emp

  move &pe.emplid        to $prev_emplid
  move &pe.company       to $zcompany
  move &pe.deptid        to $zdeptid 
  move &pe.acct_cd       to $zacct_cd
  move &JOB.jobcode      to $zjobcode         
  move &per.name         to $zper_name
  move &inst.orig_hire_dt to $zper_orig_hire_dt
  move &JOB.hourly_rt    to #z_hourly_rt

  PRINT 'DEPARTMENT'   (+3,8)
  PRINT $PREV_DEPT     (+0,+1)
  PRINT 'TOTAL'        (+0,+1)
  
  PRINT #DEPT_OTH_HRS_14          (,{#x000_col_spread1})     EDIT 999,999.99
  PRINT #DEPT_OTH_EARNS_14        (,{#x000_col_spread2})     EDIT 999,999.99 
  PRINT #DEPT_OTH_HRS_15          (,{#x000_col_billable1})   EDIT 999,999.99
  PRINT #DEPT_OTH_EARNS_15        (,{#x000_col_billable2})   EDIT 999,999.99 

  ADD #DEPT_OTH_EARNS_14 TO #COMPANY_OTH_EARNS_14
  ADD #DEPT_OTH_EARNS_15 TO #COMPANY_OTH_EARNS_15
  ADD #DEPT_OTH_HRS_14   TO #COMPANY_OTH_HRS_14
  ADD #DEPT_OTH_HRS_15   TO #COMPANY_OTH_HRS_15

  LET #DEPT_OTH_EARNS_14 = 0
  LET #DEPT_OTH_EARNS_15 = 0
  LET #DEPT_OTH_HRS_14   = 0
  LET #DEPT_OTH_HRS_15   = 0 
END-PROCEDURE


BEGIN-PROCEDURE P260-AFTER-COMPANY-CHANGE
#debug9 show 'P260-AFTER-COMPANY-CHANGE'

  PRINT 'COMPANY'              (+3,8)
  PRINT $PREV_COMPANY          (+0,+1)
  PRINT 'TOTAL'                (+0,+1)
  
  PRINT #COMPANY_OTH_HRS_14          (,{#x000_col_spread1})     EDIT 999,999.99
  PRINT #COMPANY_OTH_EARNS_14        (,{#x000_col_spread2})     EDIT 999,999.99 
  PRINT #COMPANY_OTH_HRS_15          (,{#x000_col_billable1})   EDIT 999,999.99
  PRINT #COMPANY_OTH_EARNS_15        (,{#x000_col_billable2})   EDIT 999,999.99 

  ADD #COMPANY_OTH_EARNS_14 TO #RPT_OTH_EARNS_14
  ADD #COMPANY_OTH_EARNS_15 TO #RPT_OTH_EARNS_15
  ADD #COMPANY_OTH_HRS_14   TO #RPT_OTH_HRS_14
  ADD #COMPANY_OTH_HRS_15   TO #RPT_OTH_HRS_15

  LET #COMPANY_OTH_EARNS_14 = 0
  LET #COMPANY_OTH_EARNS_15 = 0
  LET #COMPANY_OTH_HRS_14   = 0
  LET #COMPANY_OTH_HRS_15   = 0 
END-PROCEDURE


BEGIN-PROCEDURE P300-PAYGROUP-CHANGE
#debug9 Show 'P300-PAYGROUP-CHANGE'
  do Format-DateTime($zper_orig_hire_dt, $hire_dt,{DEFDATE}, '', '')

  Let $Acctcd = $zacct_cd
  do Get-Acct-cd-descr

  do P800-print-fields

  move 0 to #oth_hrs_14
  move 0 to #oth_earns_14
  move 0 to #oth_hrs_15
  move 0 to #oth_earns_15
 
  move 0 to #oth_hrs_14_emp
  move 0 to #oth_earns_14_emp
  move 0 to #oth_hrs_15_emp
  move 0 to #oth_earns_15_emp
END-PROCEDURE


begin-procedure P800-print-fields
#debug9 show 'P800-PRINT-FIELDS'
 do Get-Emp-Ssn ($emplid, $Ssn_Out) !GEX_SEC_REENG 2015-04-29 Vahini Katta 
 
 print  $zper_name          (+1,{#x000_col_name},30)
 !print  $emplid             (0,{#x000_col_emp#}) !GEX_SEC_REENG 2015-04-29 Vahini Katta 
 print  $Ssn_Out            (0,{#x000_col_emp#})  !GEX_SEC_REENG 2015-04-29 Vahini Katta 
 print  $zacct_cd           (0,{#x000_col_acctcd})
 print  $AcctNameAbbrv      (0,{#x000_col_acctname})
 print  $zjobcode           (0,{#x000_col_jobcode})
 print  $hire_dt            (0,{#x000_col_hire})
 print  #z_hourly_rt        (0,{#x000_col_hourly})    edit 9999.9999 
 print  #oth_hrs_14_EMP     (0,{#x000_col_spread1})   edit 999,999.99 
 print  #oth_earns_14_EMP   (0,{#x000_col_spread2})   edit 999,999.99   
 print  #oth_hrs_15_EMP     (0,{#x000_col_billable1}) edit 999,999.99
 print  #oth_earns_15_EMP   (0,{#x000_col_billable2}) edit 999,999.99
end-procedure 
         

begin-procedure P900-SQL-Error-Found($Proc_Name) 
#debug9 show 'P900-SQL-Error-Found'
  do P990-error-found
  display 'SQL Error in ' 
  display $Proc_Name 
  display $_sql-error
  display 'sql-status:' 
  display #_sql-status 
  STOP
end-procedure


begin-procedure P990-Error-Found
#debug9 show 'P990-Error-Found'
  move 'Y' to $ErrorFound
  do Format-Number(#Inputrec, $out, '99999')
  print $out (+1,1)
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Begins
  !let $EmplId_1st3 = substr($EmplId,1,3)
  !let $EmplId_mid2 = substr($EmplId,4,2)
  !let $EmplId_last4 = substr($EmplId,6,4)
 
  !String $EmplId_1st3 $EmplID_mid2 $EmplId_last4 by '-' into $EmplId11

  !print $EmplID11 (,8)
  print $EmplId (,8)
  !GEX_SEC_REENG 2015-04-29 Vahini Katta Ends
end-procedure
 

#Include 'askaod.sqc'    !Ask for AsOfDate
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Does the date-math functions
#Include 'reset.sqc'     !Reset printer procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'stdapi.sqc'    !Get_Run_Control Procedure
#Include 'payrnctl.sqc'  !Select Parameters
#Include 'getactnm.sqc'  !Get-Acct-cd-descr procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure

#Include 'gexxx950.sqc'  !Select SQRW run control parameters
#Include 'gexxx951.sqc'  !Select Oracle Instance
#Include 'gexxx922.sqc'  !Run Control parameters from GEX_RC_PAY record 
#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx901.sqc'  !Get company/paygroup multiple row table
#include 'gexxx902.sqc'  !Get deptid multiple row table
#include 'gexxx903.sqc'  !Get employee status multiple row table
#include 'gexxx907.sqc'  !Get company/division code multiple row table
#include 'gexxx909.sqc'  !Get acct_cd code multiple row table
#Include 'getgeid.sqc'   !Get SSN !GEX_SEC_REENG 2015-04-29 Vahini Katta