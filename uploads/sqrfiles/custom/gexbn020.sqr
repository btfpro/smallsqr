!***********************************************************************
! GEXBN020: GEX - FMLA Status Report                                   *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1988-1999 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
! INITIALS	DATE		DESCRIPTION                            *
! --------	-----------	-------------------------------------- *
! CJH		12/18/2000    Initial cloning on BEN020 - add Company  *
!                             to report output for COD.  Change sort   *
!                             order to sort by name rather than emplid.*
!                                                                      *
! SCM           09/25/2001    Added deptid to report                   *
!                                                                      *
! SCM           10/24/2001    Panel was reading GEX_RC_BEN for runcntl *
!                             parameters.  Fixed sqr to include sqc    *
!                             that reads GEX runcntl instead of        *
!                             PS delivered runcntl.  Added displays    *
!                             to log to show what dates were calculated*
!                                                                      *
! AXL           02/18/2002    Added #COLUMN definitions to help fit    *
!                             additional fields requested by user.     *
!                             Added code to main select to limit data  *
!                             to AsOfDate year.  Added EFFSEQ logic to *
!                             PS_JOB select smts to select  max effseq *
!                             row.                                     *
!ISDVSRC        04/20/2005    Made changes, please refer to the word   *
!CSR 10867                    document attached in the CSR             *
!ITG 32416
!***********************************************************************

#Include 'setenv.sqc'  !Set environment
#include 'setup02.sqc'


 !Begin-Setup
 !#Include 'ptpsl177.sqc'
 !End-Setup

!Begin - ISDVSRC 04/20/05
#define Div_Array_Size  500 
!***********************************
Begin-Setup  
!***********************************
Create-array Name=Divisions Size ={Div_Array_Size}
 Field=Division:Char='999999'  
 Field=Div_Count:Number        
 
End-Setup
! End- ISDVSRC 04/20/05
!***********************************
 
!AXL 2/18/2002 - Begin
#define #column1         1
#define #column2        11
#define #column2a       36

#define #column3      41  !DEPT
#define #column3a     46  !Dept Description

#define #column4     57
#define #column5     63
#define #column6     66
#define #column7     76
#define #column8     85
#define #column9     94
#define #column9a    80  
#define #column10   100 

!#define #column11    99 !ISDVSRC follow up activity
!#define #column12    108 !ISDVSRC description

#define #column13   112 
#define #column14   118 

#define #column15   122 
#define #column16   127 
#define #column17   132
#define #column18   135 
#define #column19   140
#define #column20   143 
#define #column20a  144 
#define #column20b  147 
#define #column21   155 
#define #column22   165 
#define #column22a  166 
!AXL 2/18/2002 - End        
    
!**********************************
Begin-Program
!**********************************
  Let #i=0  !ISDVSRC
  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Process-Main

  display 'Report Ended at: ' noline
  do display-time

  do StdAPI-Term

End-Program

!**********************************
Begin-Procedure Init-Report
!**********************************

  let $ReportID    = 'GEXBN020'
  let $ReportTitle = 'GEX FMLA Status Report'

  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  do Init-DateTime
  do Get-Current-DateTime
  let $ReportYear4 = 1

  do StdAPI-Init
  if ($PRCS_Process_Instance = '')
    do Ask-Values
  else
    do Get-Values
  end-if
   SHOW '$X000_WHERE_SELECT_ASOFDATE :' $X000_WHERE_SELECT_ASOFDATE 
   
  If Rtrim ($X000_WHERE_SELECT_ASOFDATE, ' ') = ''              !ISDVSRC 04/11/2005
   Let $X000_WHERE_SELECT_ASOFDATE = $AsOfToday                 !ISDVSRC 04/11/2005         
  End-If
   
 do Select-Pay-End-Dt       					!ISDVSRC 04/11/2005

  !Calculate the cutoff date for Completed leaves...
  do Convert-To-DTU-Date($AsOfDate, $WorkDate)
  Multiply -1 Times #FMLA_Rptg_Weeks
  do DTU-Add-Weeks($WorkDate, #FMLA_Rptg_Weeks, $WorkDate)
  !This optional code will adjust the cutoff to the first of the week...
  !do DTU-DayOfWeek#($WorkDate, #WeekDayAdj)
  !Subtract 1 From #WeekDayAdj
  !do DTU-Subtract-Days($WorkDate, #WeekDayAdj, $WorkDate)
  do Convert-From-DTU-Date($WorkDate, $CompletionDate)
  show '*******  #FMLA_Rptg_Weeks:  ' #FMLA_Rptg_Weeks        !SCM 10/24/2001
  show '*******  $CompletionDate :  ' $CompletionDate         !SCM 10/24/2001
  show '*******  $WorkDate       :  ' $WorkDate               !SCM 10/24/2001
  show '*******  $AsOfDate       :  ' $AsOfDate               !SCM 10/24/2001

  let #CurRptLine    = {PAGE_MAX_LINES} + 1
  let $FirstPageFlag = 'YES'

End-Procedure

!***************************************
Begin-Procedure Ask-Values
!***************************************

  do Ask-As-Of-Date
  do Ask-FMLA-Plan-ID
  do Ask-Completion-Period

End-Procedure

!***************************************
Begin-Procedure Get-Values
!***************************************

 !do Select-Parameters                             	SCM 10/24/2001  OLD runcntl record  
  do GEXRCBN1-SELECT-PARAMETERS                         !SCM 10/24/2001   gexxx920.sqc
  Let #FMLA_Rptg_Weeks = &GEX_RC_BEN.FMLA_RPTG_WEEKS    !SCM 10/24/2001
 !do Get-As-Of-Date                                     SCM commented
  Let $X000_Where_Select_AsOfDate = &GEX_RC_BEN.ASOFDATE  !SCM 10/24/2001 get date from runcntl
  Let $AsOfDate = $X000_WHERE_SELECT_ASOFDATE           !SCM 10/24/2001
  If Rtrim (&GEX_RC_BEN.ASOFDATE, ' ') = ''             !SCM 10/24/2001
    Let $X000_Where_Select_AsOfDate = $AsOfToday        !SCM 10/24/2001
    Let $AsOfDate = $AsOfToday                          !SCM 10/24/2001
  End-If
  do Get-FMLA-Plan-ID
 !do Get-Completion-Period                       	!SCM 10/24/2001

End-Procedure

!***************************************
Begin-Procedure Ask-FMLA-Plan-ID
!***************************************

  input $FMLA_Plan_ID 'Enter FMLA Plan ID (Leave blank for ALL Plans)'
  let $FMLA_Plan_ID = RTRIM(UPPER($FMLA_Plan_ID), ' ')
  if ($FMLA_Plan_ID = '')
    let $FMLA_Plan_ID = '%'
  end-if

End-Procedure

!***************************************
Begin-Procedure Ask-Completion-Period
!***************************************

  input $Temp 'Report leaves completed within last ?? weeks' type=integer
  let #FMLA_Rptg_Weeks = $Temp

End-Procedure

!***************************************
Begin-Procedure Print-Main-Heading
!***************************************

  if ($FirstPageFlag <> 'YES')
    new-page
  end-if
  let $FirstPageFlag = 'NO'

#Include 'stdhdg03.sqc'     !Standard Report header with AsOf Date

  print '  (Including leaves completed as of: ' ()
  do Format-DateTime($CompletionDate, $OutDt, {DEFDATE}, '', '')
  print $OutDt           ()
  print ')'              ()
  print 'FMLA Plan ID: ' (+1,1)
  print &F.FMLA_PLAN_ID  ()
  print ' ('             ()
  print &F.DESCRSHORT    ()
  print ')'              ()

!ISDVSRC 04/11/2005
 print 'Appr Code : A = Approved,  D = Denied , O = Open' (+1,1)
 print 'EMP Status: A=Active, D=Deceased, L=Unpd LOA, P=LOA, Q=Ret Active, R=Retired, S=Suspended' (+1,1)
 print '            T=Terminated, U=TermActive, V=Term w/Pen, X=Ret-PAdm, W=Work Break'  (+1,1)
 print 'FMLA Type : C = Continuous,I = Intermittent  ' (+1,1)
        	
!ISDVSRC 04/11/2005


  print '                                                 '         (+2,1)
  print '                                                     '     ()
  Print 'Appr'     		(,{#column9})		!AXL 02/18/2002
  print ' Reason'                (,{#column10})		!AXL 02/18/2002
  !print 'Follow-up Activity'	(,{#column11})  	!ISDVSRC 04/11/2005
  print 'FMLA'                  (,{#column13})
  	!print 'Std'			(,{#column15})		!AXL 02/18/2002
  print 'FMLA-Hrs-Taken'	(,{#column16})		!AXL 02/18/2002
  print 'Emp'			(,{#column20})		!AXL 02/18/2002	
  print 'Action'		(,{#column20b})		
  
  print 'FMLA'			(,{#column21})		!AXL 02/18/2002
  print 'FMLA'			(,{#column22})		!AXL 02/18/2002
  
  print 'EmplID     Name   '            (+1,1) !ISDVSRC
  !print 'Employee ID and Name              '            (+1,1) !SCM 09/25/2001
  !print 'Employee ID and Name                       '   (+1,1) SCM 09/25/2001   
  print 'Div.' 			(,{#column2a})           !AXL 02/18/2002
  print 'Dept' 			(,{#column3})           !AXL 02/18/2002
  print 'Descr.'                (,{#column3a})          !ISDVSRC
! GEX
  print 'Comp'                  (,{#column4}) 
 !AXL 02/18/2002 - Begin
  print ' Leave-Rqst'		(,{#column5})	
  Print 'Begin-Dt'		(,{#column7})
  Print 'Ret-Dt'		(,{#column8})
  Print 'Code'     		(,{#column9})
  print ' Denied'                (,{#column10})
  !print 'Follow-up Activity'	(,{#column11})         !ISDVSRC 04/11/2005
    
  !print 'FMLA-Bal'              (,{#column13})
  print 'Bal'              	(,{#column13})
  	!print 'Hrs'   		(,{#column15})
  print 'Paid'			(,{#column16})
  print 'UnPaid'   		(,{#column18})
  print 'Sts'			(,{#column20})
  print 'Reason'		(,{#column20b})		
  
!  print 'Rsn Type'		(,{#column21})         !ISDVSRC 04/11/2005
   print 'Rsn '		(,{#column21}) !ISDVSRC
   print 'Type'		(,{#column22}) !ISDVSRC
 !AXL 02/18/2002 - End

! GEX
  print '='                (+1,{#column1},174)   fill	!AXL 02/18/2002
  !print '========================================== '  (+1,1)     !SCM 09/25/2001
  !print '=================================== '         (+1,1)     !SCM 09/25/2001
  !print '==== '                                        ()         !SCM 09/25/2001
  !print '  ====  '                                     () 
! GEX
  !print ' ============== ==========  ===========  ==========  '     ()
  !print '=============  =====================  ============  '      ()
  !print '===  ==============='                                      ()

  print '' (+1,1)
 
  let #CurRptLine = 9
 
  
End-Procedure

!***************************************
Begin-Procedure Process-Main
!***************************************

Begin-Select

F.FMLA_PLAN_ID
F.DESCRSHORT

  Do Print-Main-Heading
  
  do Rpt-Approaching-Leaves
   Clear-Array Name=Divisions 
  do Rpt-Ongoing-Leaves
   Clear-Array Name=Divisions
  do Rpt-Completed-Leaves
   Clear-Array Name=Divisions
  do Rpt-Denied-Requests
   Clear-Array Name=Divisions
 
  
FROM  PS_FMLA_PLAN_TBL F
WHERE F.FMLA_PLAN_ID LIKE $FMLA_Plan_ID
AND   F.EFFDT =
        (SELECT MAX(EFFDT)
           FROM PS_FMLA_PLAN_TBL
          WHERE FMLA_PLAN_ID = F.FMLA_PLAN_ID
            AND EFFDT       <= $AsOfDate)
AND   F.EFF_STATUS = 'A'
ORDER BY F.FMLA_PLAN_ID
End-Select

  do Reset
  New-Page


End-Procedure

!***************************************
! Begin - ISDVSRC 04/20/05
Begin-Procedure Store-In-Array-two
!***************************************
   Let #a =0
   While #a < {Div_Array_Size} 
      Get $Division #Div_Count From Divisions(#a) 
      
    	 If $Division ='999999' 
	   break
	 Else
	   Print 'Total Employees in Div :' (+1,1)
	   Print $Division        () 
	   print #Div_Count (,+1)  edit 9,999,999
	   
	 End-if  
      Add 1 to #a	 
   End-While
End-Procedure
! End- ISDVSRC 04/20/05


!***************************************
Begin-Procedure Rpt-Approaching-Leaves
!***************************************
  
  Show 'entered into Rpt-Approaching-Leaves'  !ISDVSRC
  let #ApproachCnt = 0

Begin-Select

  if (#CurRptLine >= {PAGE_MAX_LINES}-10)
    print '==============================' (+1,1)
    print 'Total Approaching Leaves: '     (+1,1)
    print #ApproachCnt                     ()      Edit 0009
    print '==============================' (+1,1)
    Do Print-Main-Heading
  end-if
  add 1 to #CurRptLine
!AXL 02/18/2002 -Begin
P1.EMPLID                            (+1,{#column1},10)	
  let $EmplID = &P1.EMPLID
  
J1.EMPL_RCD 						!ISDVSRC 04/20/05
  let $Empl_Rcd = &J1.EMPL_RCD				!ISDVSRC 04/20/05 
  
P1.NAME                              (0,{#column2},25)	
GDT1.GEX_COMPANY_DIV_CD              (0,{#column2a}) 	   
  move &GDT1.GEX_COMPANY_DIV_CD to $Div_Curr		
J1.DEPTID                            (0,{#column3})	
   move &J1.DEPTID  to $DeptID_Curr			
   Let $DepartmentID =  &J1.DEPTID              	 !ISDVSRC 04/20/05
   Do  Get-Department-Name 				 !ISDVSRC 04/20/05
   print  $DeptNameAbbrv             (0,{#column3a})     !ISDVSRC 04/20/05
   
J1.COMPANY                           (0,{#column4})	
R1.EMPLID
R1.FMLA_REQUEST_ID                   (0,{#column5})	
  let $RequestID = &R1.FMLA_REQUEST_ID
To_Char(R1.REQUEST_DT,'MM/DD/YY')	&REQUEST_DT	
R1.REQUEST_DT
  do Format-DateTime(&R1.REQUEST_DT, $OutDt, {DEFDATE}, '', '')
  let $OutDtx =  &REQUEST_DT				
  print $OutDtx                      (0,{#column6}) 	
To_Char(R1.BEGIN_DT,'MM/DD/YY')            &BEGIN_DT	
R1.BEGIN_DT
  let $Leave_Begin_Dt = &R1.BEGIN_DT
  do Format-DateTime(&R1.BEGIN_DT, $OutDt, {DEFDATE}, '', '')
  let $OutDtx =  &BEGIN_DT
  print $OutDtx                      (0,{#column7})
To_Char(R1.RETURN_DT,'MM/DD/YY')            &RETURN_DT
!To_Char(R1.RETURN_DT,'YYYY')            &RETURN_DT_YYYY
!To_Char(sysdate,'YYYY')         	  &sysdate_YYYY
!   show 'return dt - sysdate ' &RETURN_DT_YYYY ' ' &sysdate_YYYY
R1.RETURN_DT
  do Format-DateTime(&R1.RETURN_DT, $OutDt, {DEFDATE}, '', '')
  let $OutDtx =  &RETURN_DT
  print $OutDtx                      (0,{#column8})
R1.FMLA_LV_APPROVED
  move 'FMLA_LV_APPROVED'  to $FieldName
  move &R1.FMLA_LV_APPROVED to $FieldValue
  do Read-Translate-Table
  !print $XlatShortName               (0,{#column9},10)
  print &R1.FMLA_LV_APPROVED          (0,{#column9}) 		!isdvsrc (0,{#column9},10)
  
  !Placeholder for Reason-Denied...
  !print ''                          (0,+2,13)

  !let #ActivityCol = #Current-Column + 2
  !Placeholder for Followup Activity...
  !print ''                           (0,+2,21)

R1.BEGIN_FMLA_WEEKS
  let #BeginWks = &R1.BEGIN_FMLA_WEEKS
R1.STD_HOURS
  let #StdHrs = &R1.STD_HOURS
R1.STD_HOURS_OVRD
  let #StdHrsOvrd = &R1.STD_HOURS_OVRD
  do Get-Entitlement-Bal
  print #Entitlement                 (0,{#column13},5) Edit 999.9
  print 'wks '                       (0,{#column14})
J1.EMPL_STATUS			     (0,{#column20a})
 let $EmplStatus = &J1.EMPL_STATUS
R1.FMLA_LEAVE_REASON		    ! (0,{#column21})

!ISDVSRC 04/20/05
  move 'FMLA_LEAVE_REASON'  to $FieldName
  move &R1.FMLA_LEAVE_REASON to $FieldValue
  do Read-Translate-Table

  print $XlatShortName               (0,{#column21})
!ISDVSRC 04/20/05

R1.FMLA_LEAVE_TYPE		     (0,{#column22a})
 
  !Do Update_Array !ISDVSRC
  Do Update_Array-two !ISDVSRC
  Do Empl-Status 
  
  do Check-Std-Hrs-Change
  do Get-Followups
  Add 1 to #ApproachCnt

FROM PS_FMLA_LV_REQUEST R1,
     PS_PERSONAL_DATA   P1,
     PS_JOB J1,
    PS_GEX_DEPT_TBL   GDT1
WHERE R1.FMLA_PLAN_ID     = &F.FMLA_PLAN_ID
  AND R1.FMLA_LV_APPROVED IN ('A','O')
  AND R1.BEGIN_DT         > $AsOfDate
  AND R1.LEAVE_STATUS     = 'E'
  AND R1.LEAVE_CANCELLED_DT IS NULL
  AND P1.EMPLID           = R1.EMPLID
  AND P1.EMPLID = J1.EMPLID
  AND J1.EFFDT = (select max(j11.effdt) from ps_job j11
                  where j11.emplid    = j1.emplid
                    and j11.empl_rcd = j1.empl_rcd
                    and j11.effdt    <= SYSDATE)
  and J1.EFFSEQ = (select max(j11.effseq) from ps_job j11
                  where j11.emplid    = j1.emplid
                    and j11.empl_rcd = j1.empl_rcd
                    and j11.effdt     = j1.effdt)
  AND To_Char(R1.RETURN_DT,'YYYY') = To_Char(sysdate,'YYYY')    
  !Begin- ISDVSRC 04/11/05
  AND    J1.DEPTID            = GDT1.DEPTID   
  AND    GDT1.EFFDT           = (SELECT MAX(EFFDT) FROM   PS_GEX_DEPT_TBL WHERE  
				DEPTID       = GDT1.DEPTID AND    
				EFFDT       <= SYSDATE)
  AND    GDT1.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM   PS_GEX_DEPT_TBL WHERE  
				DEPTID       = GDT1.DEPTID AND    
				EFFDT        = GDT1.EFFDT)
  !End- ISDVSRC 04/20/05									
!ORDER BY J1.COMPANY, J1.DEPTID, P1.NAME        ! commented ISDVSRC 04/20/05
ORDER BY  GDT1.GEX_COMPANY_DIV_CD,J1.DEPTID,J1.COMPANY, P1.NAME
!ORDER BY R1.FMLA_LV_APPROVED DESC,J1.COMPANY ASC,P1.NAME ASC
!AXL 02/18/2002 - End

End-Select

  if (#CurRptLine >= {PAGE_MAX_LINES}-5)

    Do Print-Main-Heading
  end-if
  add 4 to #CurRptLine
! KMW modified above from 3 to 4
  print '=======================================' (+1,1)
  print 'Grand Total of Approaching Leaves: '     (+1,1)
  print #ApproachCnt                     ()      Edit 0009
  print '=======================================' (+1,1)
  
  Do Store-In-Array-two                             ! ISDVSRC 04/20/05
  print '------------------------------' (+1,1)     ! ISDVSRC 04/20/05
  print ''                               (+1,1)     ! ISDVSRC 04/20/05
    
  Do Print-Main-Heading

End-Procedure

!***************************************
Begin-Procedure Rpt-Ongoing-Leaves
!***************************************

  let #OngoingCnt = 0
  let #DeptCnt    = 0 !isdvsrc

Begin-Select
  if (#CurRptLine >= {PAGE_MAX_LINES}-10) 
    print '==============================' (+1,1)
    print 'Total Ongoing Leaves:     '     (+1,1)
    print #OngoingCnt                      ()      Edit 0009
    print '==============================' (+1,1)
    Do Print-Main-Heading
  end-if
  
  add 1 to #CurRptLine
!AXL 02/18/2002 - Begin
P2.EMPLID                            (+1,{#column1},10)	
  let $EmplID = &P2.EMPLID
J2.EMPL_RCD 				!ISDVSRC	  
  let $Empl_Rcd = &J2.EMPL_RCD		!ISDVSRC	    
P2.NAME                              (0,{#column2},25)  
GDT2.GEX_COMPANY_DIV_CD              (0,{#column2a}) 		
  move &GDT2.GEX_COMPANY_DIV_CD to $Div_Curr			
J2.DEPTID                            (0,{#column3})  
   move &J2.DEPTID  to $DeptID_Curr			   !ISDVSRC
   Let  $DepartmentID =  &J2.DEPTID              	   !ISDVSRC	
   Do    Get-Department-Name 				   !ISDVSRC
   print  $DeptNameAbbrv             (0,{#column3a})       !ISDVSRC
   
J2.COMPANY                           (0,{#column4})     
R2.EMPLID
R2.FMLA_REQUEST_ID                   (0,{#column5})
  let $RequestID = &R2.FMLA_REQUEST_ID
To_Char(R2.REQUEST_DT,'MM/DD/YY')            &REQUEST_DT2
R2.REQUEST_DT
  do Format-DateTime(&R2.REQUEST_DT, $OutDt, {DEFDATE}, '', '')
  let $OutDtx =  &REQUEST_DT2
  print $OutDtx                      (0,{#column6})
To_Char(R2.BEGIN_DT,'MM/DD/YY')            &BEGIN_DT2
R2.BEGIN_DT
  do Format-DateTime(&R2.BEGIN_DT, $OutDt, {DEFDATE}, '', '')
  let $OutDtx =  &BEGIN_DT2
  print $OutDtx                      (0,{#column7})
To_Char(R2.RETURN_DT,'MM/DD/YY')            &RETURN_DT2
R2.RETURN_DT
  do Format-DateTime(&R2.RETURN_DT, $OutDt, {DEFDATE}, '', '')
  let $OutDtx =  &RETURN_DT2
  print $OutDtx                       (0,{#column8})
R2.FMLA_LV_APPROVED
  move 'FMLA_LV_APPROVED'  to $FieldName
  move &R2.FMLA_LV_APPROVED to $FieldValue
  do Read-Translate-Table
  !print $XlatShortName               (0,{#column9},10)
  print &R2.FMLA_LV_APPROVED            (0,{#column9}) !isdvsrc (0,{#column9},10)
  !Placeholder for Reason-Denied...
  !print ''                           (0,+2,13)

  let #ActivityCol = #Current-Column + 2
  !Placeholder for Followup Activity...
  !print ''                           (0,+2,21)

R2.BEGIN_FMLA_WEEKS
  let #BeginWks = &R2.BEGIN_FMLA_WEEKS
R2.STD_HOURS
  let #StdHrs = &R2.STD_HOURS
R2.STD_HOURS_OVRD
  let #StdHrsOvrd = &R2.STD_HOURS_OVRD
  do Get-Entitlement-Bal
  print #Entitlement                 (0,{#column13},5) Edit 999.9
  print 'wks'                        (0,{#column14})
J2.EMPL_STATUS			     (0,{#column20a})
 let $EmplStatus = &J2.EMPL_STATUS
R2.FMLA_LEAVE_REASON		     !(0,{#column21})

 !ISDVSRC 04/20/05
  move 'FMLA_LEAVE_REASON'  to $FieldName
  move &R2.FMLA_LEAVE_REASON to $FieldValue
  do Read-Translate-Table
  !SHOW '$XlatShortName:' $XlatShortName               
  print $XlatShortName               (0,{#column21})
 !ISDVSRC 04/20/05
R2.FMLA_LEAVE_TYPE		     (0,{#column22a})

  Do Update_Array-two    !ISDVSRC 04/20/05
  Do Empl-Status         !ISDVSRC 04/20/05
  
  do Get-Followups
  Add 1 to #OngoingCnt
  
  Add 1 to #DeptCnt    !ISDVSRC

FROM PS_FMLA_LV_REQUEST R2,
     PS_PERSONAL_DATA   P2,
     PS_JOB J2,
     PS_GEX_DEPT_TBL   GDT2
WHERE R2.FMLA_PLAN_ID     = &F.FMLA_PLAN_ID
  !AND R2.FMLA_LV_APPROVED = 'A'  	AXL 2/18/2002 - CSR 10124
  AND R2.FMLA_LV_APPROVED IN ('A','O')	!AXL 2/18/2002 - CSR 10124
  AND R2.BEGIN_DT        <= $AsOfDate
  AND R2.LEAVE_STATUS     = 'E'
  AND R2.LEAVE_CANCELLED_DT IS NULL
  AND P2.EMPLID           = R2.EMPLID
  AND P2.EMPLID = J2.EMPLID
  AND J2.EFFDT = (select max(j22.effdt) from ps_job j22
                  where j22.emplid = j2.emplid
                    and j22.empl_rcd = j2.empl_rcd
                    and j22.effdt <= SYSDATE)
  and J2.EFFSEQ = (select max(j22.effseq) from ps_job j22
                  where j22.emplid    = j2.emplid
                    and j22.empl_rcd = j2.empl_rcd
                    and j22.effdt     = j2.effdt)
  AND To_Char(R2.RETURN_DT,'YYYY') = To_Char(sysdate,'YYYY')    
  !begin- ISDVSRC 04/11/05
  AND    J2.DEPTID            = GDT2.DEPTID
  AND    GDT2.EFFDT           = (SELECT MAX(EFFDT) FROM   PS_GEX_DEPT_TBL WHERE  
				DEPTID       = GDT2.DEPTID AND    
				EFFDT       <= SYSDATE)
  AND    GDT2.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM   PS_GEX_DEPT_TBL WHERE  
				DEPTID       = GDT2.DEPTID AND    
				EFFDT        = GDT2.EFFDT)
  !End- ISDVSRC 04/11/05				
  
!ORDER BY J2.COMPANY, J2.DEPTID, P2.NAME - ISDVSRC
ORDER BY  GDT2.GEX_COMPANY_DIV_CD,J2.DEPTID,J2.COMPANY, P2.NAME

!AXL 02/18/2002 - End

End-Select

  if (#CurRptLine >= {PAGE_MAX_LINES}-5)
    Do Print-Main-Heading
  end-if
  
  add 4 to #CurRptLine
! kmw modified above from 3 to 4
  print '=======================================' (+1,1)
  print 'Grand Total of Ongoing Leaves:     '     (+1,1)
  print #OngoingCnt                      ()      Edit 0009
  print '=======================================' (+1,1)

  Do Store-In-Array-two
  print '------------------------------' (+1,1)
  
  print ''                               (+1,1)
  Do Print-Main-Heading

End-Procedure

!***************************************
Begin-Procedure Rpt-Completed-Leaves
!***************************************
 
  let #CompletedCnt = 0

Begin-Select

  if (#CurRptLine >= {PAGE_MAX_LINES}-10)
     print '==============================' (+1,1)
     print 'Total Completed Leaves:   '     (+1,1)
     print #CompletedCnt                    ()      Edit 0009
     print '==============================' (+1,1)
    Do Print-Main-Heading
  end-if
  
  add 1 to #CurRptLine
!AXL 02/18/2002 - Begin
P3.EMPLID                            (+1,{#column1},10)	
  let $EmplID = &P3.EMPLID
J3.EMPL_RCD 				!ISDVSRC	  
  let $Empl_Rcd = &J3.EMPL_RCD		!ISDVSRC	    
P3.NAME                              (0,{#column2},25)  
GDT3.GEX_COMPANY_DIV_CD              (0,{#column2a}) 
  move &GDT3.GEX_COMPANY_DIV_CD to $Div_Curr		
J3.DEPTID                            (0,{#column3})  
   move &J3.DEPTID  to $DeptID_Curr			   !ISDVSRC
   Let $DepartmentID =  &J3.DEPTID              	   !ISDVSRC	
   Do    Get-Department-Name 				   !ISDVSRC
   print  $DeptNameAbbrv             (0,{#column3a})       !ISDVSRC

!J3.DEPTID                            (0,{#column3}) on-break  !ISDVSRC
!   move &J3.DEPTID  to $DeptID_Curr			 	 !ISDVSRC
J3.COMPANY                           (0,{#column4})  
R3.EMPLID
R3.FMLA_REQUEST_ID                   (0,{#column5})
  let $RequestID = &R3.FMLA_REQUEST_ID
To_Char(R3.REQUEST_DT,'MM/DD/YY')            &REQUEST_DT3
R3.REQUEST_DT
  do Format-DateTime(&R3.REQUEST_DT, $OutDt, {DEFDATE}, '', '')
  let $OutDtx =  &REQUEST_DT3
  print $OutDtx                       (0,{#column6})
To_Char(R3.BEGIN_DT,'MM/DD/YY')            &BEGIN_DT3
R3.BEGIN_DT
  do Format-DateTime(&R3.BEGIN_DT, $OutDt, {DEFDATE}, '', '')
  let $OutDtx =  &BEGIN_DT3
  print $OutDtx                       (0,{#column7})
To_Char(R3.RETURN_DT,'MM/DD/YY')            &RETURN_DT3
R3.RETURN_DT
  do Format-DateTime(&R3.RETURN_DT, $OutDt, {DEFDATE}, '', '')
  let $OutDtx =  &RETURN_DT3
  print $OutDtx                       (0,{#column8})
R3.FMLA_LV_APPROVED
  move 'FMLA_LV_APPROVED'  to $FieldName
  move &R3.FMLA_LV_APPROVED to $FieldValue
  do Read-Translate-Table
  !print $XlatShortName               (0,+2,10)
  print &R3.FMLA_LV_APPROVED         (0,{#column9})
  !Placeholder for Reason-Denied...
  !print ''                           (0,+2,13)

  !Placeholder for Followup Activity...
  let #ActivityCol = #Current-Column + 2
  !print ''                           (0,+2,21)

R3.BEGIN_FMLA_WEEKS
  let #BeginWks = &R3.BEGIN_FMLA_WEEKS
R3.STD_HOURS
  let #StdHrs = &R3.STD_HOURS
R3.STD_HOURS_OVRD
  let #StdHrsOvrd = &R3.STD_HOURS_OVRD
  do Get-Entitlement-Bal
  print #Entitlement                 (0,{#column13},5) Edit 999.9
  print 'wks'                        (0,{#column14})
J3.EMPL_STATUS			     (0,{#column20a})
 let $EmplStatus = &J3.EMPL_STATUS
R3.FMLA_LEAVE_REASON		     !(0,{#column21})
!begin- ISDVSRC
  move 'FMLA_LEAVE_REASON'  to $FieldName
  move &R3.FMLA_LEAVE_REASON to $FieldValue
  do Read-Translate-Table
  !SHOW '$XlatShortName:' $XlatShortName               
  print $XlatShortName               (0,{#column21})
! end -ISDVSRC

R3.FMLA_LEAVE_TYPE		     (0,{#column22a})

  !Placeholder for Std-Hrs Change...
  !print ''                           (0,+2,3)
  
  
  Do Update_Array-two   !ISDVSRC
  Do Empl-Status        !ISDVSRC
  
  do Get-Leave-Totals
  do Get-Followups
  Add 1 to #CompletedCnt

FROM PS_FMLA_LV_REQUEST R3,
     PS_PERSONAL_DATA   P3,
     PS_JOB J3,
     PS_GEX_DEPT_TBL   GDT3
WHERE R3.FMLA_PLAN_ID  = &F.FMLA_PLAN_ID
  AND R3.RETURN_DT    >= $CompletionDate
  AND R3.LEAVE_STATUS  = 'A'
  AND R3.FMLA_LV_APPROVED = 'A'		!AXL 2/18/2002 - CSR 10124
  AND P3.EMPLID        = R3.EMPLID
  AND P3.EMPLID = J3.EMPLID
  AND J3.EFFDT = (select max(j33.effdt) from ps_job j33
                  where j33.emplid = j3.emplid
                    and j33.empl_rcd = j3.empl_rcd
                    and j33.effdt <= SYSDATE)
  and J3.EFFSEQ = (select max(j33.effseq) from ps_job j33
                  where j33.emplid    = j3.emplid
                    and j33.empl_rcd = j3.empl_rcd
                    and j33.effdt     = j3.effdt)
  AND To_Char(R3.RETURN_DT,'YYYY') = To_Char(sysdate,'YYYY')    
    !begin- ISDVSRC 04/11/05
  AND    J3.DEPTID            = GDT3.DEPTID
  AND    GDT3.EFFDT           = (SELECT MAX(EFFDT) FROM   PS_GEX_DEPT_TBL WHERE  
				DEPTID       = GDT3.DEPTID AND    
				EFFDT       <= SYSDATE)
  AND    GDT3.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM   PS_GEX_DEPT_TBL WHERE  
				DEPTID       = GDT3.DEPTID AND    
				EFFDT        = GDT3.EFFDT)					
  !end- ISDVSRC 04/11/05				

ORDER BY  GDT3.GEX_COMPANY_DIV_CD,J3.DEPTID, J3.COMPANY, P3.NAME
!ORDER BY J3.COMPANY, J3.DEPTID, P3.NAME - ISDVSRC
!AXL 02/18/2002 - End

End-Select

 
  if (#CurRptLine >= {PAGE_MAX_LINES}-5)

    Do Print-Main-Heading
  end-if
  add 4 to #CurRptLine
!kmw modified about from 3 to 4 
  print '=======================================' (+1,1)
  print 'Grand Total of Completed Leaves:   '     (+1,1)
  print #CompletedCnt                    ()      Edit 0009
  print '=======================================' (+1,1)

  Do Store-In-Array-two
  print '------------------------------' (+1,1)
  print ''                               (+1,1)
  Do Print-Main-Heading

End-Procedure

!***************************************
Begin-Procedure Rpt-Denied-Requests
!***************************************
 
  
  let #DeniedCnt = 0

Begin-Select
  if (#CurRptLine >= {PAGE_MAX_LINES}-10)
     print '==============================' (+1,1)
     print 'Total Requests Denied:    '     (+1,1)
     print #DeniedCnt                       ()      Edit 0009
     print '==============================' (+1,1)
    Do Print-Main-Heading
  end-if
  
  add 1 to #CurRptLine
!AXL 02/18/2002 - Begin
P4.EMPLID                            (+1,{#column1},10)	
  let $EmplID = &P4.EMPLID
J4.EMPL_RCD 				!ISDVSRC	  
  let $Empl_Rcd = &J4.EMPL_RCD		!ISDVSRC	    
P4.NAME                              (0,{#column2},25)  
GDT4.GEX_COMPANY_DIV_CD              (0,{#column2a}) 
  move &GDT4.GEX_COMPANY_DIV_CD to $Div_Curr		
J4.DEPTID                            (0,{#column3})  
   move &J4.DEPTID  to $DeptID_Curr			   !ISDVSRC
   Let $DepartmentID =  &J4.DEPTID              	   !ISDVSRC	
   Do    Get-Department-Name 				   !ISDVSRC	
   print  $DeptNameAbbrv             (0,{#column3a})       !ISDVSRC
!
!J4.DEPTID                            (0,{#column3})  on-break  !ISDVSRC
!   move &J4.DEPTID  to $DeptID_Curr				  !ISDVSRC

J4.COMPANY                           (0,{#column4})              
R4.EMPLID
R4.FMLA_REQUEST_ID                   (0,{#column5})
  let $RequestID = &R4.FMLA_REQUEST_ID
To_Char(R4.REQUEST_DT,'MM/DD/YY')    &REQUEST_DT4
R4.REQUEST_DT
  do Format-DateTime(&R4.REQUEST_DT, $OutDt, {DEFDATE}, '', '')
  let $OutDtx =  &REQUEST_DT4
  print $OutDtx                      (0,{#column6})
To_Char(R4.BEGIN_DT,'MM/DD/YY')         &BEGIN_DT4
R4.BEGIN_DT
  do Format-DateTime(&R4.BEGIN_DT, $OutDt, {DEFDATE}, '', '')
  let $OutDtx =  &BEGIN_DT4
  print $OutDtx                      (0,{#column7})
To_Char(R4.RETURN_DT,'MM/DD/YY')         &RETURN_DT4
R4.RETURN_DT
  do Format-DateTime(&R4.RETURN_DT, $OutDt, {DEFDATE}, '', '')
  let $OutDtx =  &RETURN_DT4
  print $OutDtx                      (0,{#column8})                   
R4.FMLA_LV_APPROVED
  move 'FMLA_LV_APPROVED'  to $FieldName
  move &R4.FMLA_LV_APPROVED to $FieldValue
  do Read-Translate-Table
  !print $XlatShortName               (0,+2,10)
  print &R4.FMLA_LV_APPROVED         (0,{#column9})
R4.REASON_DENIED                     !(0,+2,2)
  move 'REASON_DENIED'  to $FieldName
  move &R4.REASON_DENIED to $FieldValue
  do Read-Translate-Table
  !print '-'                          ()
  print $XlatShortName                (0,{#column10}) !isdvsrc (0,{#column10},10)
R4.APPRVL_DT    

  let #ActivityCol = #Current-Column + 2
  !Placeholder for Followup Activity...
  !print ''                           (0,+2,21)

  !Placeholder for FMLA Balance...
  !print ''                           (0,+2,12)
!  show '------denied emplid-------:  ' &P4.emplid
!  show '                   FMLA id: ' &F.FMLA_PLAN_ID
!  show '          FMLA_LV_APPROVED: ' &R4.FMLA_LV_APPROVED
!  show '                 APPRVL_DT: ' &R4.APPRVL_DT
!  show '                 $AsOfDate: ' $AsOfDate

J4.EMPL_STATUS			     (0,{#column20a})
 let $EmplStatus = &J4.EMPL_STATUS
R4.FMLA_LEAVE_REASON		     !(0,{#column21})
!begin-ISDVSRC 04/20/05
  move 'FMLA_LEAVE_REASON'  to $FieldName
  move &R4.FMLA_LEAVE_REASON to $FieldValue
  do Read-Translate-Table
  !SHOW '$XlatShortName:' $XlatShortName               
  print $XlatShortName               (0,{#column21})
!end- ISDVSRC 04/20/05
R4.FMLA_LEAVE_TYPE		     (0,{#column22a})
!GDT4.GEX_COMPANY_DIV_CD   
! move &GDT4.GEX_COMPANY_DIV_CD to $Div_Curr
  
  Do Update_Array-two !ISDVSRC 04/20/05
  Do Empl-Status      !ISDVSRC 04/20/05
  
  do Get-Followups
  Add 1 to #DeniedCnt

FROM PS_FMLA_LV_REQUEST R4,
     PS_PERSONAL_DATA   P4,
     PS_JOB J4,
     PS_GEX_DEPT_TBL   GDT4
WHERE R4.FMLA_PLAN_ID     = &F.FMLA_PLAN_ID
  AND R4.FMLA_LV_APPROVED = 'D'
  !AND R4.APPRVL_DT       >= $AsOfDate		AXL 2/18/2002 - CSR 10124
  AND R4.LEAVE_STATUS     = 'E'
  AND P4.EMPLID           = R4.EMPLID
  AND P4.EMPLID = J4.EMPLID
  AND J4.EFFDT = (select max(j44.effdt) from ps_job j44
                  where j44.emplid = j4.emplid
                    and j44.empl_rcd = j4.empl_rcd
                    and j44.effdt <= SYSDATE)
  and J4.EFFSEQ = (select max(j44.effseq) from ps_job j44
                  where j44.emplid    = j4.emplid
                    and j44.empl_rcd = j4.empl_rcd
                    and j44.effdt     = j4.effdt)
  AND To_Char(R4.RETURN_DT,'YYYY') = To_Char(sysdate,'YYYY')    
    !begin -ISDVSRC 04/11/05
  AND    J4.DEPTID            = GDT4.DEPTID
  AND    GDT4.EFFDT           = (SELECT MAX(EFFDT) FROM   PS_GEX_DEPT_TBL WHERE  
				DEPTID       = GDT4.DEPTID AND    
				EFFDT       <= SYSDATE)
  AND    GDT4.SEQUENCE_NUMBER = (SELECT MAX(SEQUENCE_NUMBER) FROM   PS_GEX_DEPT_TBL WHERE  
				DEPTID       = GDT4.DEPTID AND    
				EFFDT        = GDT4.EFFDT)					
  !end- ISDVSRC 04/11/05				

ORDER BY  GDT4.GEX_COMPANY_DIV_CD,J4.DEPTID,J4.COMPANY,  P4.NAME 
!ORDER BY J4.COMPANY, J4.DEPTID, P4.NAME - ISDVSRC
!AXL 02/18/2002 - End

End-Select

  if (#CurRptLine >= {PAGE_MAX_LINES}-5)
    Do Print-Main-Heading
  end-if
  
  add 4 to #CurRptLine
!kmw modified above from 3 to 4
  print '=======================================' (+1,1)
  print 'Grand Total of Requests Denied:    '     (+1,1)
  print #DeniedCnt                       ()      Edit 0009
  print '=======================================' (+1,1)
  
  Do Store-In-Array-two
  print '------------------------------' (+1,1)
  print ''                               (+1,1)

End-Procedure

!***************************************
Begin-Procedure Get-Entitlement-Bal
!***************************************

  let #Taken = 0
  do Convert-To-DTU-Date($AsOfToday, $CmpToday)

Begin-Select

H1.WEEK_BEGIN_DT
H1.SUN_HRS
H1.MON_HRS
H1.TUES_HRS
H1.WED_HRS
H1.THURS_HRS
H1.FRI_HRS
H1.SAT_HRS

  do Convert-To-DTU-Date(&H1.WEEK_BEGIN_DT, $CmpLeave)
  do DTU-Diff-Days($CmpLeave, $CmpToday, #Days)
  evaluate #Days
  when >= 0
    Add &H1.SUN_HRS   to #Taken
  when >= 1
    Add &H1.MON_HRS   to #Taken
  when >= 2
    Add &H1.TUES_HRS  to #Taken
  when >= 3
    Add &H1.WED_HRS   to #Taken
  when >= 4
    Add &H1.THURS_HRS to #Taken
  when >= 5
    Add &H1.FRI_HRS   to #Taken
  when >= 6
    Add &H1.SAT_HRS   to #Taken
  end-evaluate

FROM  PS_FMLA_LV_HISTORY H1
WHERE H1.EMPLID          = $EmplID
  AND H1.FMLA_REQUEST_ID = $RequestID
  AND H1.WEEK_BEGIN_DT  <= $AsOfToday
ORDER BY H1.WEEK_BEGIN_DT ASC
End-Select

  let #Convert = #StdHrsOvrd
  if (#Convert = 0)
    let #Convert = #StdHrs
  end-if
  if (#Convert > 0)
    Divide #Convert Into #Taken
    let #Entitlement = #BeginWks - #Taken
  else
    let #Entitlement = #BeginWks
  end-if

End-Procedure

!***************************************
Begin-Procedure Get-Followups
!***************************************
 !SHOW 'ENTERED INTO  Get-Followups'
  let $FirstRow = 'Y'

Begin-Select

To_Char(A.ACTIVITY_DT,'MM/DD/YY')            &ACTIVITY_DT
A.ACTIVITY_DT
  do Format-DateTime(&A.ACTIVITY_DT, $OutDt, {DEFDATE}, '', '')
  if ($FirstRow = 'Y')
    !AXL 02/18/2002 - Begin
    !print $OutDt                   (0,#ActivityCol,10)
    let $OutDt =  &ACTIVITY_DT
    !print $OutDt                    (0,{#column11}) !ISDVSRC
    !AXL 02/18/2002 - End
    let $FirstRow = 'N'
  else
    if (#CurRptLine >= {PAGE_MAX_LINES}-6)
      show '----Get-Followups----'
      Do Print-Main-Heading
    end-if
    
    add 1 to #CurRptLine
    !AXL 02/18/2002 - Begin
    !print $OutDt                    (+1,#ActivityCol,10)
    !print $OutDt                    (0,{#column11})!ISDVSRC
    !AXL 02/18/2002 - End
  end-if
  
A.FMLA_ACTIVITY_TYPE
  move 'FMLA_ACTIVITY_TYPE'  to $FieldName
  move &A.FMLA_ACTIVITY_TYPE to $FieldValue
  do Read-Translate-Table
  !print $XlatShortName              (0,{#column12},10) !AXL 02/18/2002   !ISDVSRC

FROM PS_FMLA_LV_ACTVTY A
WHERE A.EMPLID          = $EmplID
  AND A.FMLA_REQUEST_ID = $RequestID
  AND A.FOLLOW_UP_FLAG  = 'Y'
ORDER BY A.ACTIVITY_DT ASC,
         A.FMLA_ACTIVITY_TYPE ASC

End-Select
End-Procedure

!***************************************
Begin-Procedure Get-Leave-Totals
!***************************************
  !show 'entered into  Get-Leave-Totals'
  let #Paid   = 0
  let #Unpaid = 0

Begin-Select

H2.SUN_HRS
H2.SUN_PAID
  if (&H2.SUN_PAID = 'Y')
    Add &H2.SUN_HRS to #Paid
  else
    Add &H2.SUN_HRS to #Unpaid
  end-if
H2.MON_HRS
H2.MON_PAID
  if (&H2.MON_PAID = 'Y')
    Add &H2.MON_HRS to #Paid
  else
    Add &H2.MON_HRS to #Unpaid
  end-if
H2.TUES_HRS
H2.TUES_PAID
  if (&H2.TUES_PAID = 'Y')
    Add &H2.TUES_HRS to #Paid
  else
    Add &H2.TUES_HRS to #Unpaid
  end-if
H2.WED_HRS
H2.WED_PAID
  if (&H2.WED_PAID = 'Y')
    Add &H2.WED_HRS to #Paid
  else
    Add &H2.WED_HRS to #Unpaid
  end-if
H2.THURS_HRS
H2.THURS_PAID
  if (&H2.THURS_PAID = 'Y')
    Add &H2.THURS_HRS to #Paid
  else
    Add &H2.THURS_HRS to #Unpaid
  end-if
H2.FRI_HRS
H2.FRI_PAID
  if (&H2.FRI_PAID = 'Y')
    Add &H2.FRI_HRS to #Paid
  else
    Add &H2.FRI_HRS to #Unpaid
  end-if
H2.SAT_HRS
H2.SAT_PAID
  if (&H2.SAT_PAID = 'Y')
    Add &H2.SAT_HRS to #Paid
  else
    Add &H2.SAT_HRS to #Unpaid
  end-if

FROM  PS_FMLA_LV_HISTORY H2
WHERE H2.EMPLID          = $EmplID
  AND H2.FMLA_REQUEST_ID = $RequestID
End-Select
  !AXL 02/18/2002 - Begin
  print #Paid                       (0,{#column16},4) Edit 9999
!  print #Paid                       (-1,{#column16},4) Edit 9999
  print 'hrs'                       ()
  print #Unpaid                     (0,{#column18},4) Edit 9999
  print 'hrs'                       ()
  !AXL 02/18/2002 - End
  
 
End-Procedure

!***************************************
Begin-Procedure Check-Std-Hrs-Change
!***************************************

Begin-Select

J.EMPLID
SUM(J.STD_HOURS)   &NewStdHrs

FROM PS_EMPLOYMENT E,
     PS_JOB        J
WHERE E.EMPLID    = $EmplID
  AND J.EMPLID    = E.EMPLID
  AND J.EMPL_RCD = E.EMPL_RCD
  AND J.EFFDT =
        (SELECT MAX(J1.EFFDT)
           FROM PS_JOB J1
          WHERE J1.EMPLID    = J.EMPLID
            AND J1.EMPL_RCD = J.EMPL_RCD
            AND J1.EFFDT    <= $Leave_Begin_Dt)
  AND J.EMPL_STATUS IN ('A','L','P','S')
GROUP BY J.EMPLID, J.EMPL_STATUS
End-Select

!ISDVSRC 04/20/05- removed according to Pams new specs
!  if (&NewStdHrs <> #StdHrs)
!    print 'Chg'             (0,{#column15},3) !AXL 02/18/2002
!  end-if
!ISDVSRC 04/20/05
  
End-Procedure

!***********************************************************************
Begin-Procedure Display-Time
!***********************************************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!***********************************************************************


!***********************************************************************
!ISDVSRC 04/11/2005 BEGIN
begin-procedure Select-Pay-End-Dt
!***********************************************************************
#debug8 display 'select-pay-end-dt'
begin-select
MAX(PC.PAY_END_DT)      &pay_end_dt
  move &pay_end_dt   to $pay_end_dt
FROM   PS_PAY_CALENDAR PC
WHERE  PC.PAY_END_DT <= $X000_WHERE_SELECT_ASOFDATE 
AND    PC.PAY_CONFIRM_RUN = 'Y'
end-select
  display 'Last Confirmed Pay End Date: ' noline
  display $pay_end_dt


if rtrim($pay_end_dt,' ') <> ''

   do convert-to-dtu-date($pay_end_dt,$pay_end_dt_dtu)
   do dtu-subtract-days($pay_end_dt_dtu,2,$range_begin_dt_dtu)
   do convert-from-dtu-date($range_begin_dt_dtu,$range_begin_dt)

   do dtu-add-days($pay_end_dt_dtu,4,$range_end_dt_dtu)
   do convert-from-dtu-date($range_end_dt_dtu,$range_end_dt)

   display 'Range Begin Dt: ' noline
   display $range_begin_dt
   display 'Range End Dt: ' noline
   display $range_end_dt

else

   display 'No Pay End Dt found prior to ' noline
   display $X000_WHERE_SELECT_ASOFDATE
   stop

end-if

end-procedure
!***********************************************************************
Begin-Procedure Update_Array-two !ISDVSRC
!***********************************************************************
 !show 'entered into Update_Array-two '
 Let $Found2 ='N'
 Let #b = 0
 
 While #b < {Div_Array_Size}  
  Get $Division From Divisions(#b) Division
  If $Division ='999999' 
     !show 'entered into  $Deptid =999999'
      Let #a = #b
      Put $Div_Curr Into Divisions(#a) Division
      
      Let $Found2 ='Y'
      Break
   Else
     If $Div_Curr = $Division
        Let #a = #b  
        Let $Found2 ='Y'       
        Break
     End-If   
   End-If     
   
   Let #b = #b + 1
  End-While  
     
    If $Found2 ='N'
      show 'ERROR: There are more than {Div_Array_Size} departments in the array'
      stop
    End-If
    
 Array-Add 1 to Divisions (#a) Div_Count

End-Procedure


!----------------------------------------------------------------------
!Begin - ISDVSRC 04/20/05
!----------------------------------------------------------------------

Begin-Procedure Empl-Status 
!***********************************************************************
 !Show 'entered into Empl-Status '
 
  Evaluate $EmplStatus 
	when = 'L'
	when = 'P'
 	 Do Check-Last-Lv-Type
	when-other
	!show 'do nothing'
  End-Evaluate	
End-Procedure  


!********************************************************************
begin-procedure Check-Last-Lv-Type
!********************************************************************   
!#debug9 show 'Check-Last-Lv-Type'
 
 !show 'Check-Last-Lv-Type'
 !SHOW ' $pay_end_dt:'  $pay_end_dt
 let $leave_type =  ' '

begin-select 
HIST.EFFDT
HIST.EFFDT+180		!&Term_Effdt
HIST.LAST_DATE_WORKED
HIST.ACTION
HIST.ACTION_REASON


 Let $Action        = &HIST.ACTION        
 Let $Action_Reason = &HIST.ACTION_REASON
 Let $ActionReason  = $Action || '/' || $Action_Reason
 
! show '$Action         =' $Action        
! show '$Action_Reason  =' $Action_Reason  
! show '$ActionReason   =' $ActionReason  
 
 Print $ActionReason     (0,{#column20b})

FROM PS_JOB HIST
  WHERE HIST.EFFDT =
        (SELECT MIN(EFFDT) FROM PS_JOB
        WHERE HIST.EMPLID = EMPLID
          AND HIST.EMPL_RCD = EMPL_RCD
          AND EMPL_STATUS  IN ('P','L')
          AND EFFDT >=			
                         (Select Max(effdt)
                          From   ps_job
                          Where  emplid     = HIST.emplid
                          And    empl_rcd  = HIST.empl_rcd
                          And    effdt     <= $pay_end_dt
                          AND    empl_status NOT IN ('P','L')) )
    AND HIST.EFFSEQ =
        (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE HIST.EMPLID = EMPLID
          AND HIST.EMPL_RCD = EMPL_RCD
          AND HIST.EFFDT = EFFDT) 
    AND HIST.emplid	 = $EmplID
    AND HIST.empl_rcd   =  $Empl_Rcd

end-select

end-procedure
! ISDVNPK 08/22/2007 Modified for Upgrade 9.0
!***********************************************************************
!Begin-Procedure Get-Description
!***********************************************************************
!show 'entered into Get-Description'
!Begin-Select
!XLAT.FIELDNAME
!XLAT.xlatlongname
!XLAT.xlatshortname 

!  Let $FIELDNAME     = &XLAT.FIELDNAME    
!  Let $xlatlongname  = &XLAT.xlatlongname 
!  Let $xlatshortname_new = &XLAT.xlatshortname

! show '$FIELDNAME    =' $FIELDNAME     
! show '$xlatlongname =' $xlatlongname  
! show '$xlatshortname_new=' $xlatshortname  
 
!from XLATTABLE XLAT where 
!fieldname = 'ACTION'
!AND FIELDVALUE =$Action 

!End-Select
!End-Procedure

!End- ISDVSRC 04/20/05
!----------------------------------------------------------------------


!***********************************************
begin-procedure Get-Department-Name 
!************************************************
 !SHOW 'ENTERED INTO Get-Department-Name '
  move '' to $DeptNameAbbrv

  if Rtrim($DepartmentID,' ') = ''
    goto GetDptNmExit
  end-if

  if $AsOfDate = ''
    move $AsOfToday to $AsOfDate
  end-if

begin-SELECT
X.DESCRSHORT

  !Show 'DESCRSHORT:' &X.DESCRSHORT
  let $DeptNameAbbrv = Rtrim(&X.DESCRSHORT,' ')
  
FROM  PS_DEPT_TBL X
WHERE X.DEPTID = $DepartmentID
  AND X.EFFDT <= $AsOfDate
  AND X.EFFDT  =  (SELECT MAX(EFFDT)FROM   PS_DEPT_TBL
        	   WHERE  DEPTID = X.DEPTID
	          AND  EFFDT <= $AsOfDate)
end-SELECT
GetDptNmExit:
End-Procedure
!******************************************************
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datemath.sqc'  !Date math routines
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'benasof.sqc'   !Ask-As-Of-Date procedure
#Include 'readxlat.sqc'  !Read the Translate Table
#Include 'reset.sqc'     !Reset printer procedure

#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines
#Include 'gexxx920.sqc'  !Run Control parameters from GEX_RC_BEN record    SCM 10/24/2001
#Include 'gexxx951.sqc'

!****************************** End Of Report *******************************

