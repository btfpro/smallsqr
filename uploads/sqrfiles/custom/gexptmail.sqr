!***********************************************************************
! Set email address for each PeopleSoft user - v8.3                     *
! Using LDAP function getsmtp, update each PeopleSoft user's
! email address on psoprdefn
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!        INITIALS     DATE        DESCRIPTION OF THE CHANGE            *
!***********************************************************************
!          CJH       03/11/2003    Initial Creation                    *
!
!
!***********************************************************************
#include 'setenv.sqc'    !Set environment

Begin-Report
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report


Begin-Procedure P100-Initialization
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      = 'SETEMAIL'
  Let $ReportTitle   = 'Sets Operator''s Email address using LDAP directory'

  Show ' '
  Show ' '
  Show 'Report ID:    ' $ReportID
  Show 'Report Title: ' $ReportTitle
  Show ' '
            
  Do Get-Current-DateTime    !curdttim.sqc
  Show 'Report Started on ' $ReportDate ' at ' $ReportTime
  Show ' '

End-Procedure


Begin-Procedure P200-Main-Process
   do process-users

End-Procedure


Begin-procedure process-users
display 'Processing users'
begin-select on-error=p250-sql-error-found('process-users')
A.OPRID
A.OPRDEFNDESC
A.EMPLID

  let $userid = &A.OPRID
  let $username = &A.OPRDEFNDESC
  let $emplid = &A.EMPLID
 
  do get-email

from PSOPRDEFN A
where oprclass <> ' '   !find operators
! and oprid = 'ISDVDXS'
end-select

end-procedure
!****************************************************
begin-procedure get-email

! Remove current temp file for email address

  let $rm_command = 'rm /tmp/addr'

      CALL SYSTEM USING $rm_command #sys_status


! Run function for current user
  let $getsmtp_command = '/usr/local/bin/getsmtp '|| $userid || ' > /tmp/addr'

      CALL SYSTEM USING $getsmtp_command #sys_status
      if #sys_status <> 0
	 show 'getsmtp function failed for ' $userid ' (' $username ') with status ' #sys_status
      else
        show 'getsmtp function successful for ' $userid ' (' $username ') '

! read email address from temp file
       let $FileName = '/tmp/addr'
       open $FileName as 1 for-reading record=70 status=#filestat

       if #filestat < 0
	   display 'File Open error occured;  Cannot proceed'
     	   goto Report-Exit
       end-if         

       read 1 into $addr:70

       if rtrim($addr,' ') = ''
          show 'No email address retrieved for: ' $userid
       else
          show 'Operator ' $userid ' has an email address of ' $addr



begin-sql on-error=p250-sql-error-found('update-psoprdefn')
update psoprdefn
set emailid = $addr
where oprid = $userid
end-sql
       show 'PSOPRDEFN updated for Oprid ' $userid

begin-sql on-error=p250-sql-error-found('update-PS_ROLEXLATOPR')
update PS_ROLEXLATOPR
set emailid = $addr
where roleuser = $userid
end-sql
      show 'PS_ROLEXLATOPR updated for Oprid ' $userid

begin-sql on-error=p250-sql-error-found('update-PSUSEREMAIL')
update PSUSEREMAIL
set emailid = $addr
where oprid = $userid
end-sql
      show 'PSUSEREMAIL updated for Oprid ' $userid

begin-sql on-error=p250-sql-error-found('update-PS_EMAIL_ADDRESSES')
update PS_EMAIL_ADDRESSES
set email_addr = $addr
where emplid = $emplid
end-sql
      show 'PS_EMAIL_ADDRESSES updated for Emplid ' $emplid

     end-if
   end-if
Report-Exit:
   close 1

end-procedure
!****************************************************
Begin-Procedure P250-SQL-Error-Found($Proc_Name) 
  Show 'SQL Error in ' $Proc_Name
  Show $_sql-error
  Stop
End-Procedure


Begin-Procedure P300-Finalization
  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Do Get-Current-DateTime    !curdttim.sqc
  Show ' '
  Show 'Report Ended on ' $ReportDate ' at ' $ReportTime
End-Procedure


#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'validdt.sqc'   ! Validate date routine
#Include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'
