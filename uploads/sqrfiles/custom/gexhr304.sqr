
!**************************************************************************************************************************
!        EVP MMR Diversity Metrics
!**************************************************************************************************************************


!***************************************************************************************
! GEXHR304:             MMR Diversity Metrics                                          * 
!                       Includes Giant Eagle (non-independent) employees at grade 13   *
!			and above (13 to 50).					       *
!			Data is reported by EVP and SVP with gender and ethnic group;  *
!				Business area with gender, ethnic group and grade ;    *
!				Manager level and grade;			       *
!				Department and gender, ethnic group and grade and      *
!				Operating division with gender and ethnic group        *
!										       *
!***************************************************************************************
!                                                                                      *
!               Confidentiality Information:                                           *
!                                                                                      *
! This module is the confidential and proprietary information of                       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted                 *
! in any form, by any means, in whole or in part, nor is it to be used                 *
! for any purpose other than that for which it is expressly provided                   *
! without the written permission of Giant Eagle.                                       *
!                                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved                         *
!                                                                                      *
!***************************************************************************************
!                                                                                      *        
! GEXHR304s :           MMR Diversity Metrics					       *
!                                                                                      *        
! Narrative:                                                                           * 
!                                                                                      *  
! SQL Tables:           							       *
!                                                                                      *
! Written by:           SivaPrasad Gude (VENDSPG)                                      *       
!                                                                                      *
! Normally Run:									       *
!                                                                                      *
! Control Parms:	AsOfDate							*
!											*
!***************************************************************************************
!                         MODIFICATION HISTORY                                          *
!****************************************************************************************
! CSR    INITIALS     DATE         DESCRIPTION OF THE CHANGE                            *
!****************************************************************************************
!                                                                                       *
!        VENDSPG      21/11/2007   New program         
!	 VENDKXY      01/24/2007   Removed search query                                 *
!	 VENDKXY      01/28/2008   output file chaged changed by vicki											*
!	 VENDKXY      02/06/2008   Modified the date with As of date	
!        GEX-MXT      03/10/2008   HCM Upgrade 9.0									*
!	 GEX-TLL      03/24/2008   HCM 9.0 Upgrade Retrofitting 			*
!	 GEX-TLL      04/11/2008   HCM 9.0 Upgrade Retrofitting 			*
! 	 GEX-TLL      05/13/2008   Ethnicity changes                    		*
!****************************************************************************************



#include 'setenv.sqc'    !set environment
#include 'setup32.sqc'   !printer and page-size initialization
!#include 'prcsapi.sqc'   
#include 'sqrtrans.sqc'  ! set translation



!**************************************************************************************************************************
!        SETUP
!**************************************************************************************************************************
Begin-Setup
!GEX-TLL on 04/11/2008 HCM 9.0 Upgrade Begin
declare-variable
date $AsOfDate1
end-declare
!GEX-TLL on 04/11/2008 HCM 9.0 Upgrade End
End-Setup

!**************************************************************************************************************************
!        REPORT
!**************************************************************************************************************************

Begin-Report

do Init-DateTime           !datetime.sqc
!do Init-Number             !number.sqc
do Get-Current-DateTime    !curdttim.sqc
do Stdapi-Init             !stdapi.sqc

If $prcs_process_instance = ''
    Do Ask-As-Of-Date		!askaod.sqc
else
    do Get-Run-Control	     !gexrnctl.sqc  	
   !GEX-TLL 04/11/2008 HCM 9.0 Upgrade Begin
    !let $AsOfDate = &asofdate    	
    If Rtrim (&asofdate, ' ') = ''
    Let $AsOfDate = $AsOfToday
    Let $AsOfDate1 = $AsOfDate
    Let $AsOfDate = dateadd($AsOfDate1,'DAY',-1)    
   else
   let $AsOfDate = &asofdate 
  !GEX-TLL 04/11/2008 HCM 9.0 Upgrade End
end-if
end-if !GEX-TLL 04/11/2008 


let #EVPSVP = 1  ! Literal to opne file EVPSVP_Grade_Ethnic.xls
let #BusArea = 2 ! Literal to open file MgrLvl_Grade.xls
let #Mgr = 3     ! Literal to open file MgrLvl_Grade.xls
let #OprDiv = 4  ! Literal to open/write into file OprDiv.xls
let #DEPT = 5    ! Literal to open file MgrLvl_Grade.xls

do Open-File !Open all the files that need to be written

!***************** EVPSVP Calculation ****************
do EVPSVP

!*************** BusinessArea Calculation ************
do BusinessArea

!*************** MgrLvl-Grade Calculation ************
do MgrLvl

!*************** OprDivision Calculation *************
do OprDivision

!*************** Dept Calculation ********************
do Dept

show 'EVPSVP written into the file: ' $EVPSVP_File
show 'BusArea written into the file: ' $BusArea_File
show 'MgrLvl written into the file: ' $Mgrlvl_File
show 'OprDiv written into the file: '  $OprDiv_File
show 'Dept written into the file: '  $Dept_File

do Stdapi-Term             !stdapi.sqc

End-Report


!**************************************************************************************************************************
!        EVPSVP
!**************************************************************************************************************************

Begin-Procedure EVPSVP

!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Retrofitting Begin
let $heading1 = 'Grades 13 to 50 - EEs by EVP & SVP with Gender & Ethnic Group are as of: ' ||$AsOfDate !VENDKXY added on 03/18/2008
Write #EVPSVP from $heading1	!VENDKXY added on 03/18/2008
write #EVPSVP from $Newline	!VENDKXY added on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Retrofitting End
! EVP Calculation
show 'Start-Evp'
let $EvpSvp = 'EVP'
do Head-EVPSVP
let $GEX_EVP_OR_SVP = 'G.GEX_EVP'
do EvpSvp-Gender-Ethnic
show 'End-Evp'

! SVP Calculation
show 'Start-Svp'
let $EvpSvp = 'SVP'
Write #EVPSVP from $Newline
do Head-EVPSVP
let $GEX_EVP_OR_SVP = 'G.GEX_SVPVP'
do EvpSvp-Gender-Ethnic
show 'End-Svp'

End-Procedure

!**************************************************************************************************************************
!        Head-EVPSVP
!**************************************************************************************************************************

Begin-Procedure Head-EVPSVP

! Heading for EvpSvp-Gender-Ethnic
!let $heading1 = $delim || 'Gender/Ethnic Group                                                                               ' !GEX-TLL 04/11/2008 HCM 9.0 Upgrade 
!Write #EVPSVP from $heading1  !GEX-TLL 04/11/2008 HCM 9.0 Upgrade 
let $heading2 = $delim || 'Female                         ' || $delim || $delim || $delim || 'Female Total' || $delim || 'Male                         ' || $delim || $delim || $delim || 'Male Total' || $delim || 'Grand Total'
Write #EVPSVP from $heading2
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $heading3 = $EvpSvp || $delim || 'Black' || $delim || 'Hispanic' || $delim || 'White' || $delim || $delim || 'Black' || $delim || 'NA' || $delim || 'White'
let $heading3 = $EvpSvp || $delim || 'Black or African American' || $delim || 'Hispanic or Latino' || $delim || 'White' || $delim || $delim || 'Black or African American' || $delim || 'N/A' || $delim || 'White'
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
Write #EVPSVP from $heading3

End-Procedure 

!**************************************************************************************************************************
!		EvpSvpName
!**************************************************************************************************************************

! To Fetch employee name 

Begin-Procedure EvpSvpName

begin-select

distinct   C1.NAME  &EvpSvp_Name	
	
from PS_PERSONAL_DATA C1
where C1.EMPLID = $OLD_EVPSVP

end-select

End-Procedure 

!**************************************************************************************************************************
!		EvpSvp-Cal
!**************************************************************************************************************************

Begin-Procedure EvpSvp_Cal
	
	 
		If ( &EvpSvp_Sex = 'F'  )
			
		  EVALUATE &EvpSvp_Ethnic

		    When = '1'
			let #F_WHITE_CNT = #EvpSvp_EmplCnt
			let #H_F_Total = #H_F_Total + #EvpSvp_EmplCnt
			let #V_F_W_Total = #V_F_W_Total + #EvpSvp_EmplCnt
			let #Processed = 1 ! 1 indicates processed atleast once
			Break
		    When = '2'
			let #F_BLACK_CNT = #EvpSvp_EmplCnt
          		let #H_F_Total = #H_F_Total + #EvpSvp_EmplCnt
			let #V_F_B_Total = #V_F_B_Total + #EvpSvp_EmplCnt
			let #Processed = 1 ! 1 indicates processed atleast once
   			Break
		    When = '3'
			let #F_HISPANIC_CNT = #EvpSvp_EmplCnt
			let #H_F_Total = #H_F_Total + #EvpSvp_EmplCnt
			let #V_F_H_Total = #V_F_H_Total + #EvpSvp_EmplCnt
			let #Processed = 1 ! 1 indicates processed atleast once
  			Break
		END-EVALUATE
		End-If
		 

		If ( &EvpSvp_Sex = 'M'  )
			
		  EVALUATE &EvpSvp_Ethnic

		    When = '1'
			let #M_WHITE_CNT = #EvpSvp_EmplCnt
			let #H_M_Total = #H_M_Total + #EvpSvp_EmplCnt
			let #V_M_W_Total = #V_M_W_Total + #EvpSvp_EmplCnt
			let #Processed = 1 ! 1 indicates processed atleast once
			Break
		    When = '2'
			let #M_BLACK_CNT = #EvpSvp_EmplCnt
          		let #H_M_Total = #H_M_Total + #EvpSvp_EmplCnt
			let #V_M_B_Total = #V_M_B_Total + #EvpSvp_EmplCnt
			let #Processed = 1 ! 1 indicates processed atleast once
   			Break
		    When = '6'
			let #M_NA_CNT = #EvpSvp_EmplCnt
			let #H_M_Total = #H_M_Total + #EvpSvp_EmplCnt
			let #V_M_NA_Total = #V_M_NA_Total + #EvpSvp_EmplCnt
			let #Processed = 1 ! 1 indicates processed atleast once
  			Break

		END-EVALUATE

	      End-If



End-Procedure 

!**************************************************************************************************************************
!		EvpSvp-Gender-Ethnic
!**************************************************************************************************************************

Begin-procedure EvpSvp-Gender-Ethnic 

LET $OLD_EVPSVP = ' '
let #Processed = 0 ! Variable to detect whether processed/fetched any values
Let $VGTotal = 'Grand Total'
let #V_F_W_Total = 0
let #V_F_B_Total = 0
let #V_F_H_Total = 0
let #V_M_W_Total = 0
let #V_M_B_Total = 0
let #V_M_NA_Total = 0
let #H_Grand_Total = 0

let #H_F_Total = 0
let #H_M_Total = 0	
let #F_BLACK_CNT  = 0
let #F_HISPANIC_CNT = 0
let #F_WHITE_CNT = 0
let #H_F_Total = 0
let #M_BLACK_CNT = 0
let #M_NA_CNT = 0
let #M_WHITE_CNT = 0

let #V_F_Total = 0
let #V_M_Total = 0

BEGIN-SELECT 
COUNT(DISTINCT A.EMPLID) &EvpSvp_EmplCnt
	move &EvpSvp_EmplCnt to #EvpSvp_EmplCnt

!H.ETHNIC_GROUP &EvpSvp_Ethnic
ETHGRP.ETHNIC_GROUP  &EvpSvp_Ethnic  !VENDTLL 05/13/2008

C.SEX &EvpSvp_Sex

!G.GEX_EVP &EVP_ID

[$GEX_EVP_OR_SVP] &EVP_ID = CHAR
		!SHOW &EVP_ID
C1.name !GEX-TLL 04/11/2008 HCM 9.0 Upgrade 		

		if (&EVP_ID = $OLD_EVPSVP)

			do EvpSvp_Cal

		else
			
			do EvpSvpName

			let #H_Grand_Total = #H_F_Total + #H_M_Total

			  if ( $OLD_EVPSVP = ' ' and #Processed  ) ! To Print only if any Empl is listed under no EVP/SVP
			  	let $line = 'N/A'
				String $line  #F_BLACK_CNT #F_HISPANIC_CNT #F_WHITE_CNT #H_F_Total #M_BLACK_CNT #M_NA_CNT #M_WHITE_CNT  #H_M_Total #H_Grand_Total by $delim into $line
				Write #EVPSVP from $line  	
			  end-if
				
			  if $OLD_EVPSVP <> ' '
				let $line = &EvpSvp_Name
				String $line  #F_BLACK_CNT #F_HISPANIC_CNT #F_WHITE_CNT #H_F_Total #M_BLACK_CNT #M_NA_CNT #M_WHITE_CNT  #H_M_Total #H_Grand_Total by $delim into $line
				Write #EVPSVP from $line
			  end-if			

			let #V_F_Total = #V_F_Total + #H_F_Total
			let #V_M_Total = #V_M_Total + #H_M_Total

			let #H_F_Total = 0
			let #H_M_Total = 0
			

			let #F_BLACK_CNT  = 0
			let #F_HISPANIC_CNT = 0
			let #F_WHITE_CNT = 0
			let #H_F_Total = 0
			let #M_BLACK_CNT = 0
			let #M_NA_CNT = 0
			let #M_WHITE_CNT = 0

			LET $OLD_EVPSVP = &EVP_ID
			do EvpSvp_Cal

			end-if
			

  FROM PS_JOB A, PS_JOBCODE_TBL B, PS_PERSONAL_DATA C, PS_EMPLOYMENT D, PS_DEPT_TBL E,   !VENDKXY      01/24/2007   Removed search query 
!GEX-TLL 04/11/2008 HCM 9.0 Upgrade Begin   
   !PS_GEX_DEPT_TBL F, PS_GEX_EVP_TBL G, PS_GEX_ETHNIC_TBL1 H 
   !PS_GEX_DEPT_TBL F, PS_GEX_EVP_TBL G  ,PS_GEX_ETHNIC_TBL1 H, PS_PERSONAL_DATA C1
   PS_GEX_DEPT_TBL F, PS_GEX_EVP_TBL G  ,PS_PERSONAL_DATA C1,PS_DIVERS_ETHNIC DI,PS_ETHNIC_GRP_TBL ETHGRP
  !WHERE A.EFFDT =
  WHERE [$GEX_EVP_OR_SVP]=c1.emplid(+)
  and A.EFFDT =
!GEX-TLL 04/11/2008 HCM 9.0 Upgrade end
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE A.EMPLID = A_ED.EMPLID
          AND A.EMPL_RCD = A_ED.EMPL_RCD
          !GEX-MXT Modified for Upgrade changes - Begin
          !AND A_ED.EFFDT <= TO_DATE('2007-09-30','YYYY-MM-DD'))
          AND A_ED.EFFDT <= TO_DATE($AsOfDate,'DD-MM-YYYY')) ! changes done by VENDKXY on 02/06/2008 to modify the date with As of date
          !GEX-MXT Modified for Upgrade changes - End
     AND A.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE A.EMPLID = A_ES.EMPLID
          AND A.EMPL_RCD = A_ES.EMPL_RCD
          AND A.EFFDT = A_ES.EFFDT)
     AND B.SETID = A.SETID_JOBCODE
     AND B.JOBCODE = A.JOBCODE
     AND B.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B.SETID = B_ED.SETID
          AND B.JOBCODE = B_ED.JOBCODE
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin          
          !AND B_ED.EFFDT <= A.EFFDT)
          !AND B_ED.EFFDT <= SYSDATE) !GEX-TLL 04/11/2008 HCM 9.0 Upgrade
          AND B_ED.EFFDT <= $AsOfDate) !GEX-TLL 04/11/2008 HCM 9.0 Upgrade 
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End          
     AND A.EMPLID = C.EMPLID
     AND A.EMPLID = D.EMPLID
     AND A.EMPL_RCD = D.EMPL_RCD
!GEX-TLL 03/24/2008 Added HCM 9.0 Upgrade Rerofitting Begin     
     AND A.PAYGROUP = G.PAYGROUP
     AND A.ACCT_CD = G.ACCT_CD
!GEX-TLL 03/24/2008 Added HCM 9.0 Upgrade Rerofitting End      
     AND E.SETID = A.SETID_DEPT
     AND E.DEPTID = A.DEPTID
     AND E.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E.SETID = E_ED.SETID
          AND E.DEPTID = E_ED.DEPTID
!GEX-TLL 03/24/2008 Added HCM 9.0 Upgrade Rerofitting Begin
          !AND E_ED.EFFDT <= A.EFFDT)
          !AND E_ED.EFFDT <= SYSDATE)!GEX-TLL 04/11/2008 HCM 9.0 Upgrade 
          AND E_ED.EFFDT <= $AsOfDate)!GEX-TLL 04/11/2008 HCM 9.0 Upgrade 
!GEX-TLL 03/24/2008 Added HCM 9.0 Upgrade Rerofitting End 
     AND E.SETID = F.SETID
     AND E.DEPTID = F.DEPTID
     AND F.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F.SETID = F_ED.SETID
          AND F.DEPTID = F_ED.DEPTID
!GEX-TLL 03/24/2008 Added HCM 9.0 Upgrade Rerofitting Begin
         !AND F_ED.EFFDT <= E.EFFDT)
         !AND F_ED.EFFDT <= SYSDATE)  !GEX-TLL 04/11/2008 HCM 9.0 Upgrade 
         AND F_ED.EFFDT <= $AsOfDate) !GEX-TLL 04/11/2008 HCM 9.0 Upgrade 
!GEX-TLL 03/24/2008 Added HCM 9.0 Upgrade Rerofitting End 
     AND A.DEPTID =  G.DEPTID (+)
!GEX-TLL 03/24/2008 Added HCM 9.0 Upgrade Rerofitting Begin     
     !AND (( A.EMPL_STATUS IN ('A','L','P','S')))
     AND ( A.EMPL_STATUS IN ('A','L','P','S')
!GEX-TLL 03/24/2008 Added HCM 9.0 Upgrade Rerofitting End      
     AND A.COMPANY NOT BETWEEN '005' AND '999'
     AND A.COMPANY NOT IN ('KAP','VEC')
     AND A.JOBCODE <> '90000'
!GEX-TLL 03/24/2008 Added HCM 9.0 Upgrade Rerofitting Begin     
     !AND A.GEX_SEASONAL_EMP = 'N'
     AND A.GEX_SEASONAL_EMP = 'N')
!GEX-TLL 03/24/2008 Added HCM 9.0 Upgrade Rerofitting End      
     !AND A.EMPLID = H.EMPLID
     AND A.EMPLID = DI.EMPLID
     AND A.GRADE IN ('13','14','15','30','50')
!GEX-TLL 05/13/2008 Begin
     AND DI.SETID = ETHGRP.SETID 																										
     AND DI.ETHNIC_GRP_CD = ETHGRP.ETHNIC_GRP_CD
     AND DI.PRIMARY_INDICATOR = 'Y' 	!ADDED FOR ETHNICITY CHANGES
    AND ETHGRP.EFFDT = (SELECT MAX(ETH2.EFFDT) FROM PS_ETHNIC_GRP_TBL ETH2 			
                   WHERE ETH2.SETID = ETHGRP.SETID 					
                   AND ETH2.ETHNIC_GRP_CD = ETHGRP.ETHNIC_GRP_CD 				
                   AND ETH2.EFFDT  <= $AsOfDate)					
   AND ETHGRP.ETHNIC_GROUP <> '6'  !Not Applicable       
!GEX-TLL 05/13/2008 End

!GEX-TLL 04/11/2008 HCM 9.0 Upgrade Begin
!GROUP BY H.ETHNIC_GROUP, C.SEX, [$GEX_EVP_OR_SVP]
!ORDER BY [$GEX_EVP_OR_SVP]
!GROUP BY H.ETHNIC_GROUP, C.SEX, [$GEX_EVP_OR_SVP],c1.name
GROUP BY ETHGRP.ETHNIC_GROUP, C.SEX, [$GEX_EVP_OR_SVP],c1.name
ORDER BY C1.name
!GEX-TLL 04/11/2008 HCM 9.0 Upgrade End
end-select

let #V_F_Total = #V_F_Total + #H_F_Total
let #V_M_Total = #V_M_Total + #H_M_Total
!GEX-TLL 03/24/2008 Added HCM 9.0 Upgrade Rerofitting Begin
let #H_Grand_Total = #H_F_Total + #H_M_Total	!VENDKXY added on 03/18/2008
!GEX-TLL 03/24/2008 Added HCM 9.0 Upgrade Rerofitting End
let #EVPSVP_Grand_Total = #V_F_Total + #V_M_Total 

do EvpSvpName

 if ( $OLD_EVPSVP = ' ' and #Processed  ) ! To Print only if any Empl is listed under no EVP/SVP
	let $line = 'N/A'
	String $line  #F_BLACK_CNT #F_HISPANIC_CNT #F_WHITE_CNT #H_F_Total #M_BLACK_CNT #M_NA_CNT #M_WHITE_CNT  #H_M_Total #H_Grand_Total by $delim into $line
	Write #EVPSVP from $line  	
end-if
				
if $OLD_EVPSVP <> ' '
	let $line = &EvpSvp_Name
	String $line  #F_BLACK_CNT #F_HISPANIC_CNT #F_WHITE_CNT #H_F_Total #M_BLACK_CNT #M_NA_CNT #M_WHITE_CNT  #H_M_Total #H_Grand_Total by $delim into $line
	Write #EVPSVP from $line
end-if

String $VGTotal #V_F_B_Total #V_F_H_Total   #V_F_W_Total  #V_F_Total  #V_M_B_Total  #V_M_NA_Total #V_M_W_Total #V_M_Total #EVPSVP_Grand_Total by $delim into $VGTotal
	Write #EVPSVP from $VGTOTAL

End-Procedure

!**************************************************************************************************************************
!		BusinessArea
!**************************************************************************************************************************

Begin-Procedure BusinessArea
	
SHOW 'Start-BusinessArea Calculation '
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $heading1 = $delim || $delim || $delim ||$delim|| 'Business Area                             ' || $delim|| $delim 
!Write #BusArea from $heading1
let $heading1 =  'Employees by Business Area with Gender, Ethnic Group & Grade are as of: ' || $asofdate	!VENDKXY added on 03/18/2008
Write #BusArea from $heading1	!VENDKXY added on 03/18/2008
write #BusArea from $newline	!VENDKXY added on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
let $heading2 = 'Gender' || $delim || 'Ethnic Grp' || $delim || 'Grade' || $delim ||$delim ||'Corp Off' || $delim || 'Pharmacy' || $delim ||'RSC' ||$delim ||'Grand Total'
Write #BusArea from $heading2
write #BusArea from $Newline

!***** CorpOff *****!
let $BusArea = 'Corp Off'
do BusArea

let #F_W_CorpOff_13 =  #F_WHITE_CNT_13 
let #F_W_CorpOff_14 =  #F_WHITE_CNT_14
let #F_W_CorpOff_15 =  #F_WHITE_CNT_15
let #F_W_CorpOff_30 =  #F_WHITE_CNT_30
let #F_W_CorpOff_50 =  #F_WHITE_CNT_50
let #F_B_CorpOff_13 =  #F_BLACK_CNT_13
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
let #F_B_CorpOff_15 =  #F_BLACK_CNT_15	!VENDKXY added on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
let #F_Hisp_CorpOff_15 =  #F_HISP_CNT_15

let #V_F_W_CorpOff_Total = #V_F_W_Total
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let #V_F_CorpOff_Total = #V_F_W_Total + #F_Hisp_CorpOff_15 + #F_B_CorpOff_13
let #V_F_CorpOff_Total = #V_F_W_Total + #F_Hisp_CorpOff_15 + #F_B_CorpOff_13+#F_B_CorpOff_15 !VENDKXY modified on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End



let #M_W_CorpOff_13 =  #M_WHITE_CNT_13 
let #M_W_CorpOff_14 =  #M_WHITE_CNT_14
let #M_W_CorpOff_15 =  #M_WHITE_CNT_15
let #M_W_CorpOff_30 =  #M_WHITE_CNT_30
let #M_W_CorpOff_50 =  #M_WHITE_CNT_50
let #M_B_CorpOff_13 =  #M_BLACK_CNT_13
let #M_NA_CorpOff_30 = #M_NA_CNT_30
let #V_M_W_CorpOff_Total = #V_M_W_Total
let #V_M_CorpOff_Total = #V_M_W_Total + #M_NA_CorpOff_30 + #M_B_CorpOff_13

!***** Pharmacy *****!

let $BusArea = 'Pharmacy'
do BusArea

let #F_W_Ph_13 =  #F_WHITE_CNT_13 
let #F_W_Ph_14 =  #F_WHITE_CNT_14
let #F_W_Ph_15 =  #F_WHITE_CNT_15
let #F_W_Ph_30 =  #F_WHITE_CNT_30
let #F_W_Ph_50 =  #F_WHITE_CNT_50
let #F_B_Ph_13 =  #F_BLACK_CNT_13
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
let #F_B_Ph_15 =  #F_BLACK_CNT_15	!VENDKXY added on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
let #F_Hisp_Ph_15 =  #F_HISP_CNT_15
let #V_F_W_Ph_Total = #V_F_W_Total
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let #V_F_Ph_Total = #V_F_W_Total + #F_Hisp_Ph_15 + #F_B_Ph_13
let #V_F_Ph_Total = #V_F_W_Total + #F_Hisp_Ph_15 + #F_B_Ph_13+#F_B_Ph_15	!VENDKXY modified on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End


let #M_W_Ph_13 =  #M_WHITE_CNT_13 
let #M_W_Ph_14 =  #M_WHITE_CNT_14
let #M_W_Ph_15 =  #M_WHITE_CNT_15
let #M_W_Ph_30 =  #M_WHITE_CNT_30
let #M_W_Ph_50 =  #M_WHITE_CNT_50
let #M_B_Ph_13 =  #M_BLACK_CNT_13
let #M_NA_Ph_30 = #M_NA_CNT_30
let #V_M_W_Ph_Total = #V_M_W_Total
let #V_M_Ph_Total = #V_M_W_Total + #M_NA_Ph_30 + #M_B_Ph_13
 

!***** RSC *****!

let $BusArea = 'RSC'
do BusArea

let #F_W_RSC_13 =  #F_WHITE_CNT_13 
let #F_W_RSC_14 =  #F_WHITE_CNT_14
let #F_W_RSC_15 =  #F_WHITE_CNT_15
let #F_W_RSC_30 =  #F_WHITE_CNT_30
let #F_W_RSC_50 =  #F_WHITE_CNT_50
let #F_B_RSC_13 =  #F_BLACK_CNT_13
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
let #F_B_RSC_15 =  #F_BLACK_CNT_15	!VENDKXY added on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
let #F_Hisp_RSC_15 =  #F_HISP_CNT_15
let #V_F_W_RSC_Total = #V_F_W_Total
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
let #V_F_RSC_Total = #V_F_W_Total + #F_Hisp_RSC_15 + #F_B_RSC_13+#F_B_RSC_15	!VENDKXY modified on 03/18/2008
!let #V_F_RSC_Total = #V_F_W_Total + #F_Hisp_RSC_15 + #F_B_RSC_13
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End

let #M_W_RSC_13 =  #M_WHITE_CNT_13 
let #M_W_RSC_14 =  #M_WHITE_CNT_14
let #M_W_RSC_15 =  #M_WHITE_CNT_15
let #M_W_RSC_30 =  #M_WHITE_CNT_30
let #M_W_RSC_50 =  #M_WHITE_CNT_50
let #M_B_RSC_13 =  #M_BLACK_CNT_13
let #M_NA_RSC_30 = #M_NA_CNT_30
let #V_M_W_RSC_Total = #V_M_W_Total
let #V_M_RSC_Total = #V_M_W_Total + #M_NA_RSC_30 + #M_B_RSC_13

!*****
let #F_W_Grand_Total = #V_F_W_CorpOff_Total + #V_F_W_Ph_Total + #V_F_W_RSC_Total
let #M_W_Grand_Total = #V_M_W_CorpOff_Total + #V_M_W_Ph_Total + #V_M_W_RSC_Total
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $f_b_13 = 'Female' || $delim || 'Black' || $delim || '13' ||$delim 
let $f_b_13 = 'Female' || $delim || 'Black or African American' || $delim || '13' ||$delim 	!VENDKXY modified on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
String $f_b_13 #F_B_CorpOff_13 #F_B_Ph_13 #F_B_RSC_13 #H_F_B_13_Total  by $delim into $f_b_13
Write #BusArea from $f_b_13
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $f_hisp_15 = $delim || 'Hispanic' || $delim || '15' ||$delim 
let $f_b_15 = 'Female' || $delim || 'Black or African American' || $delim || '15' ||$delim 	!VENDKXY added on 03/18/2008
String $f_b_15 #F_B_CorpOff_15 #F_B_Ph_15 #F_B_RSC_15 #H_F_B_15_Total  by $delim into $f_b_15	!VENDKXY added on 03/18/2008
Write #BusArea from $f_b_15
let $f_hisp_15 = $delim || 'Hispanic or Latino' || $delim || '15' ||$delim 	!VENDKXY modified on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End

String $f_hisp_15 #F_Hisp_CorpOff_15 #F_Hisp_Ph_15 #F_Hisp_RSC_15 #H_F_Hisp_15_Total by $delim into $f_hisp_15
Write #BusArea from $f_hisp_15

let $f_w_13 = $delim || 'White' || $delim || '13' ||$delim 
String $f_w_13 #F_W_CorpOff_13 #F_W_Ph_13 #F_W_RSC_13 #H_F_W_13_Total by $delim into $f_w_13
Write #BusArea from $f_w_13

let $f_w_14 = $delim || $delim || '14' ||$delim 
String $f_w_14 #F_W_CorpOff_14 #F_W_Ph_14 #F_W_RSC_14 #H_F_W_14_Total by $delim into $f_w_14
Write #BusArea from $f_w_14

let $f_w_15 = $delim || $delim || '15'||$delim 
String $f_w_15 #F_W_CorpOff_15 #F_W_Ph_15 #F_W_RSC_15 #H_F_W_15_Total by $delim into $f_w_15
Write #BusArea from $f_w_15

let $f_w_30 = $delim || $delim || '30'||$delim 
String $f_w_30 #F_W_CorpOff_30 #F_W_Ph_30 #F_W_RSC_30 #H_F_W_30_Total by $delim into $f_w_30
Write #BusArea from $f_w_30

let $f_w_50 = $delim || $delim || '50' ||$delim 
String $f_w_50 #F_W_CorpOff_50 #F_W_Ph_50 #F_W_RSC_50 #H_F_W_50_Total by $delim into $f_w_50
Write #BusArea from $f_w_50

let $f_w_total = $delim || 'White Total' || $delim || $delim
String $f_w_total #V_F_W_CorpOff_Total #V_F_W_Ph_Total #V_F_W_RSC_Total #F_W_Grand_Total by $delim into $f_w_total
Write #BusArea from $f_w_total

let $v_f_total = 'Female Total'||$delim||$delim||$delim
let #f_total = #V_F_Ph_Total +  #V_F_RSC_Total +  #V_F_CorpOff_Total
String $v_f_total #V_F_CorpOff_Total #V_F_Ph_Total #V_F_RSC_Total #f_total by $delim into $v_f_total
Write #BusArea from $v_f_total


!*****
!Male-Calculations
!*****

write #BusArea from $Newline
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $m_b_13 = 'Male' || $delim || 'Black' || $delim || '13' ||$delim 
let $m_b_13 = 'Male' || $delim || 'Black or African American' || $delim || '13' ||$delim 	!VENDKXY modified on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
String $m_b_13 #M_B_CorpOff_13 #M_B_Ph_13 #M_B_RSC_13 #H_M_B_13_Total  by $delim into $m_b_13
Write #BusArea from $m_b_13
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $m_na_30 = $delim || 'Hispanic' || $delim || '30' ||$delim 
let $m_na_30 = $delim || 'N/A' || $delim || '30' ||$delim 
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
String $m_na_30 #M_NA_CorpOff_30 #M_NA_Ph_30 #M_NA_RSC_30 #H_M_NA_30_Total by $delim into $m_na_30
Write #BusArea from $m_na_30

let $m_w_13 = $delim || 'White' || $delim || '13' ||$delim 
String $m_w_13 #M_W_CorpOff_13 #M_W_Ph_13 #M_W_RSC_13 #H_M_W_13_Total  by $delim into $m_w_13 
Write #BusArea from $m_w_13

let $m_w_14 = $delim || $delim || '14' ||$delim 
String $m_w_14 #M_W_CorpOff_14 #M_W_Ph_14 #M_W_RSC_14 #H_M_W_14_Total  by $delim into $m_w_14
Write #BusArea from $m_w_14

let $m_w_15 = $delim || $delim || '15' ||$delim
String $m_w_15 #M_W_CorpOff_15 #M_W_Ph_15 #M_W_RSC_15 #H_M_W_15_Total  by $delim into $m_w_15
Write #BusArea from $m_w_15

let $m_w_30 = $delim || $delim || '30' ||$delim 
String $m_w_30 #M_W_CorpOff_30 #M_W_Ph_30 #M_W_RSC_30 #H_M_W_30_Total  by $delim into $m_w_30
Write #BusArea from $m_w_30

let $m_w_50 = $delim || $delim || '50' ||$delim 
String $m_w_50 #M_W_CorpOff_50 #M_W_Ph_50 #M_W_RSC_50 #H_M_W_50_Total  by $delim into $m_w_50
Write #BusArea from $m_w_50

let $m_w_total = $delim || 'White Total' || $delim ||$delim
String $m_w_total  #V_M_W_CorpOff_Total #V_M_W_Ph_Total #V_M_W_RSC_Total #M_W_Grand_Total by $delim into $m_w_total
Write #BusArea from $m_w_total

let $v_m_total = 'Male Total'||$delim||$delim||$delim
let #m_total = #V_M_Ph_Total +  #V_M_RSC_Total +  #V_M_CorpOff_Total
String $v_m_total #V_M_CorpOff_Total #V_M_Ph_Total #V_M_RSC_Total #m_total by $delim into $v_m_total
Write #BusArea from $v_m_total

let #CorpOff_GrandTotal = #V_F_CorpOff_Total + #V_M_CorpOff_Total
let #Ph_GrandTotal = #V_F_Ph_Total + #V_M_Ph_Total
let #RSC_GrandTotal = #V_F_RSC_Total + #V_M_RSC_Total

let $BusArea_H_GrandTotal = 'Grand Total'||$delim ||$delim ||$delim
let #BusArea_GrandTotal = #CorpOff_GrandTotal + #Ph_GrandTotal + #RSC_GrandTotal
String $BusArea_H_GrandTotal #CorpOff_GrandTotal #Ph_GrandTotal #RSC_GrandTotal #BusArea_GrandTotal by $delim into $BusArea_H_GrandTotal
Write #BusArea from $Newline
Write #BusArea from $BusArea_H_GrandTotal

SHOW 'End-BusinessArea Calculation '

End-Procedure 

!**************************************************************************************************************************
!		BusArea
!**************************************************************************************************************************

Begin-Procedure BusArea 
	
let #F_WHITE_CNT_13 = 0
let #F_WHITE_CNT_14 = 0
let #F_WHITE_CNT_15 = 0
let #F_WHITE_CNT_30 = 0
let #F_WHITE_CNT_50 = 0

let #F_BLACK_CNT_13 = 0
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
let #F_BLACK_CNT_15 = 0		!vendkxy added code on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
let #F_HISP_CNT_15 =  0

let #M_WHITE_CNT_13 = 0
let #M_WHITE_CNT_14 = 0
let #M_WHITE_CNT_15 = 0
let #M_WHITE_CNT_30 = 0
let #M_WHITE_CNT_50 = 0

let #M_BLACK_CNT_13 = 0
let #M_NA_CNT_30 =  0

let #V_F_W_Total = 0
let #V_M_W_Total = 0


begin-select

!DISTINCT 
count(A.EMPLID) &BusEmpl_Cnt
	move &BusEmpl_Cnt to #BusEmpl_Cnt
A.GRADE &Bus_Grade 
G.GEX_BUS_AREA  &BusArea
	!show 'busArea' &BusArea
C.SEX &Bus_Sex
!H.ETHNIC_GROUP &Bus_Ethnic
ETHGRP.ETHNIC_GROUP &Bus_Ethnic  !GEX-TLL 05/13/2008

		if ( &Bus_Sex = 'F' )
			
	   EVALUATE &Bus_Ethnic

	      When = '1'
		  		  
		  if (&Bus_Grade = '13')	
		  let #F_WHITE_CNT_13 = #BusEmpl_Cnt		 
		  let #H_F_W_13_Total = #H_F_W_13_Total + #BusEmpl_Cnt
		  let #V_F_W_Total = #V_F_W_Total + #BusEmpl_Cnt
		  end-if

		  if (&Bus_Grade = '14')	
		  let #F_WHITE_CNT_14 = #BusEmpl_Cnt		 
		  let #H_F_W_14_Total = #H_F_W_14_Total + #BusEmpl_Cnt
		  let #V_F_W_Total = #V_F_W_Total + #BusEmpl_Cnt
		  end-if

		  if (&Bus_Grade = '15')	
		  let #F_WHITE_CNT_15 = #BusEmpl_Cnt		 
		  let #H_F_W_15_Total = #H_F_W_15_Total + #BusEmpl_Cnt
		  let #V_F_W_Total = #V_F_W_Total + #BusEmpl_Cnt
		  end-if

		  if (&Bus_Grade = '30')	
		  let #F_WHITE_CNT_30 = #BusEmpl_Cnt		 
		  let #H_F_W_30_Total = #H_F_W_30_Total + #BusEmpl_Cnt
		  let #V_F_W_Total = #V_F_W_Total + #BusEmpl_Cnt
		  end-if

		  if (&Bus_Grade = '50')	
		  let #F_WHITE_CNT_50 = #BusEmpl_Cnt		 
		  let #H_F_W_50_Total = #H_F_W_50_Total + #BusEmpl_Cnt
		  let #V_F_W_Total = #V_F_W_Total + #BusEmpl_Cnt
		  end-if

		   Break

	      When = '2'
		  if (&Bus_Grade = '13')	
		  let #F_BLACK_CNT_13 = #BusEmpl_Cnt	 
		  let #H_F_B_13_Total = #H_F_B_13_Total + #BusEmpl_Cnt
		  end-if
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin		  
		  !VENDKXY added on 03/18/2008
		 if (&Bus_Grade = '15')	
		  let #F_BLACK_CNT_15 = #BusEmpl_Cnt	 
		  let #H_F_B_15_Total = #H_F_B_15_Total + #BusEmpl_Cnt
		  end-if
		 !VENDKXY added on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End		 

   		   Break

	      When = '3'
	          if (&Bus_Grade = '15')	
		  let #F_HISP_CNT_15 = #BusEmpl_Cnt
		  let #H_F_Hisp_15_Total = #H_F_Hisp_15_Total + #BusEmpl_Cnt
		  end-if

  		   Break

	    END-EVALUATE

	   else ! if sex = Male

		EVALUATE &Bus_Ethnic

	      When = '1'
		  		  
		  if (&Bus_Grade = '13')	
		  let #M_WHITE_CNT_13 = #BusEmpl_Cnt		 
		  let #H_M_W_13_Total = #H_M_W_13_Total + #BusEmpl_Cnt
		  let #V_M_W_Total = #V_M_W_Total + #BusEmpl_Cnt
		  end-if

		  if (&Bus_Grade = '14')	
		  let #M_WHITE_CNT_14 = #BusEmpl_Cnt		 
		  let #H_M_W_14_Total = #H_M_W_14_Total + #BusEmpl_Cnt
		  let #V_M_W_Total = #V_M_W_Total + #BusEmpl_Cnt
		  end-if

		  if (&Bus_Grade = '15')	
		  let #M_WHITE_CNT_15 = #BusEmpl_Cnt		 
		  let #H_M_W_15_Total = #H_M_W_15_Total + #BusEmpl_Cnt
		  let #V_M_W_Total = #V_M_W_Total + #BusEmpl_Cnt
		  end-if

		  if (&Bus_Grade = '30')	
		  let #M_WHITE_CNT_30 = #BusEmpl_Cnt		 
		  let #H_M_W_30_Total = #H_M_W_30_Total + #BusEmpl_Cnt
		  let #V_M_W_Total = #V_M_W_Total + #BusEmpl_Cnt
		  end-if

		  if (&Bus_Grade = '50')	
		  let #M_WHITE_CNT_50 = #BusEmpl_Cnt		 
		  let #H_M_W_50_Total = #H_M_W_50_Total + #BusEmpl_Cnt
		  let #V_M_W_Total = #V_M_W_Total + #BusEmpl_Cnt
		  end-if

		   Break

	      When = '2'
		  if (&Bus_Grade = '13')	
		  let #M_BLACK_CNT_13 = #BusEmpl_Cnt
		  let #H_M_B_13_Total = #H_M_B_13_Total + #BusEmpl_Cnt
		  end-if

   		   Break

	      When = '6'
	          if (&Bus_Grade = '30')	
		  let #M_NA_CNT_30 = #BusEmpl_Cnt
		  let #H_M_NA_30_Total = #H_M_NA_30_Total + #BusEmpl_Cnt
		  end-if

  		   Break

	    END-EVALUATE
	end-if	

 
  FROM PS_JOB A, PS_JOBCODE_TBL B, PS_PERSONAL_DATA C, PS_EMPLOYMENT D, PS_DEPT_TBL E, 		!VENDKXY      01/24/2007   Removed search query 
  !PS_GEX_DEPT_TBL F, PS_GEX_EVP_TBL G  ,PS_GEX_ETHNIC_TBL1 H 
   PS_GEX_DEPT_TBL F, PS_GEX_EVP_TBL G  ,PS_DIVERS_ETHNIC DI,PS_ETHNIC_GRP_TBL ETHGRP  !VENDTLL 05/13/2008
  WHERE A.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE A.EMPLID = A_ED.EMPLID
          AND A.EMPL_RCD = A_ED.EMPL_RCD
          !GEX-MXT Modified for Upgrade changes - Begin
          !AND A_ED.EFFDT <= TO_DATE('2007-09-30','YYYY-MM-DD'))
          AND A_ED.EFFDT <= TO_DATE($AsOfDate,'DD-MM-YYYY')) ! changes done by VENDKXY on 02/06/2008 to modify the date with As of date
          !GEX-MXT Modified for Upgrade changes - End      
    AND A.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE A.EMPLID = A_ES.EMPLID
          AND A.EMPL_RCD = A_ES.EMPL_RCD
          AND A.EFFDT = A_ES.EFFDT)
     AND B.SETID = A.SETID_JOBCODE
     AND B.JOBCODE = A.JOBCODE
     AND B.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B.SETID = B_ED.SETID
          AND B.JOBCODE = B_ED.JOBCODE
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin          
          !AND B_ED.EFFDT <= A.EFFDT)        
          !AND B_ED.EFFDT <= SYSDATE)   !GEX-TLL 04/11/2008 HCM 9.0 Upgrade 
           AND B_ED.EFFDT <= $AsOfDate) !GEX-TLL 04/11/2008 HCM 9.0 Upgrade 
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End          
     AND A.EMPLID = C.EMPLID
     AND A.EMPLID = D.EMPLID
     AND A.EMPL_RCD = D.EMPL_RCD
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin     
     AND A.PAYGROUP = G.PAYGROUP
     AND A.ACCT_CD = G.ACCT_CD
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End     
     AND E.SETID = A.SETID_DEPT
     AND E.DEPTID = A.DEPTID
     AND E.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E.SETID = E_ED.SETID
          AND E.DEPTID = E_ED.DEPTID
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin          
          !AND E_ED.EFFDT <= A.EFFDT)
          !AND E_ED.EFFDT <= SYSDATE)  !GEX-TLL 04/11/2008 HCM 9.0 Upgrade 
          AND E_ED.EFFDT <= $AsOfDate) !GEX-TLL 04/11/2008 HCM 9.0 Upgrade 
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End                    
     AND E.SETID = F.SETID
     AND E.DEPTID = F.DEPTID
     AND F.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F.SETID = F_ED.SETID
          AND F.DEPTID = F_ED.DEPTID
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin          
         !AND F_ED.EFFDT <= E.EFFDT)
         !AND F_ED.EFFDT <= SYSDATE)  !GEX-TLL 04/11/2008 HCM 9.0 Upgrade
         AND F_ED.EFFDT <= $AsOfDate) !GEX-TLL 04/11/2008 HCM 9.0 Upgrade
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End         
     AND A.DEPTID =  G.DEPTID (+)
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin     
     !AND (( A.EMPL_STATUS IN ('A','L','P','S')))
     AND ( A.EMPL_STATUS IN ('A','L','P','S')
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End     
     AND A.COMPANY NOT BETWEEN '005' AND '999'
     AND A.COMPANY NOT IN ('KAP','VEC')
     AND A.JOBCODE <> '90000'
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!    AND A.GEX_SEASONAL_EMP = 'N'
     AND A.GEX_SEASONAL_EMP = 'N')
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
     !AND A.EMPLID = H.EMPLID
      AND A.EMPLID = DI.EMPLID
     AND A.GRADE IN ( '13','14','15','30','50')
     AND C.SEX IN ('F','M')
     AND G.GEX_BUS_AREA = $BusArea
     !GEX-TLL 05/13/2008 Begin
     AND DI.SETID = ETHGRP.SETID 																										
    AND DI.ETHNIC_GRP_CD = ETHGRP.ETHNIC_GRP_CD
    AND DI.PRIMARY_INDICATOR = 'Y' 	!GEX-MXT ADDED FOR ETHNICITY CHANGES
   AND ETHGRP.EFFDT = (SELECT MAX(ETH2.EFFDT) FROM PS_ETHNIC_GRP_TBL ETH2 			
                   WHERE ETH2.SETID = ETHGRP.SETID 					
                   AND ETH2.ETHNIC_GRP_CD = ETHGRP.ETHNIC_GRP_CD 				
                   AND ETH2.EFFDT  <= $AsOfDate)					
   AND ETHGRP.ETHNIC_GROUP <> '6'  !Not Applicable  
   !GEX-TLL 05/13/2008 End
 !GEX-TLL 04/11/2008 HCM 9.0 Upgrade Begin    
!group by    A.GRADE,  G.GEX_BUS_AREA,  A.EMPL_STATUS ,  C.SEX,H.ETHNIC_GROUP 
!group by    A.GRADE,  G.GEX_BUS_AREA, C.SEX,H.ETHNIC_GROUP 
group by    A.GRADE,  G.GEX_BUS_AREA, C.SEX,ETHGRP.ETHNIC_GROUP !GEX-TLL 05/13/2008
 !GEX-TLL 04/11/2008 HCM 9.0 Upgrade End

end-select

end-procedure 


!**************************************************************************************************************************
!		MgrLvl
!**************************************************************************************************************************

Begin-Procedure MgrLvl
	
show 'Mgr Lvl processing started'
!Show 'Writing into file: ' $Mgrlvl_file
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $head1 = 'GRADE 
let $heading='Employees by Mgr Level & Grade are as of: '||$asofdate	!VENDKXY added on 03/18/2008
Write #Mgr from $heading	!VENDKXY added on 03/18/2008
write #mgr from $newline	!VENDKXY added on 03/18/2008
let $head1 = 'Grade'           !VENDKXY MODIFIED on 03/18/2008                                        '
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
                                                  
let $heading = $delim || $head1 
Write #Mgr from $heading

let $heading = 'Mgr Level' || $delim || '13' || $delim || '14' || $delim || '15' || $delim || '30' || $delim || '50' || $delim || 'Grand Total'
Write #Mgr from $heading
Write #Mgr from $Newline

do MgrLvl-Grade

let $VGTotal_MgrLvl = 'Grand Total'
let #MgrLvl_Total = #V_Grd13_Total + #V_Grd14_Total + #V_Grd15_Total + #V_Grd30_Total + #V_Grd50_Total
String $VGTotal_MgrLvl #V_Grd13_Total #V_Grd14_Total #V_Grd15_Total #V_Grd30_Total #V_Grd50_Total #MgrLvl_Total by $delim into $VGTotal_MgrLvl
Write #Mgr from $VGTotal_MgrLvl
 
Show 'Mgr Lvl processing ended'

End-Procedure

!**************************************************************************************************************************
!		MgrLvl-Grade
!**************************************************************************************************************************

begin-procedure MgrLvl-Cal

	if (&A.GRADE = '13') 
	  let #H_Grand_Total = #H_Grand_Total + #count_emplid
	  let #grade13 = #count_emplid
	  let #V_Grd13_Total = #V_Grd13_Total + #count_emplid
	  let #Processed = 1 ! 1 indicates processed atleast once
	 end-if

	  if (&A.GRADE = '14') 
	   let #H_Grand_Total = #H_Grand_Total + #count_emplid
	   let #grade14 = #count_emplid
           let #V_Grd14_Total = #V_Grd14_Total + #count_emplid
	   let #Processed = 1 ! 1 indicates processed atleast once
	 end-if

	  if (&A.GRADE = '15') 
	   let #H_Grand_Total = #H_Grand_Total + #count_emplid
	   let #grade15 = #count_emplid
    	   let #V_Grd15_Total = #V_Grd15_Total + #count_emplid
	   let #Processed = 1 ! 1 indicates processed atleast once
	 end-if

	  if (&A.GRADE = '30') 
	   let #H_Grand_Total = #H_Grand_Total + #count_emplid
 	   let #grade30 = #count_emplid
	   let #V_Grd30_Total = #V_Grd30_Total + #count_emplid
	   let #Processed = 1 ! 1 indicates processed atleast once
	  end-if

	  if (&A.GRADE = '50') 
	   let #H_Grand_Total = #H_Grand_Total + #count_emplid
	   let #grade50 = #count_emplid
	   let #V_Grd50_Total = #V_Grd50_Total + #count_emplid
	   let #Processed = 1 ! 1 indicates processed atleast once
	  end-if
	

end-procedure 

!**************************************************************************************************************************
!		MgrLvlName
!**************************************************************************************************************************

Begin-Procedure MgrLvlName

begin-select

I.XLATSHORTNAME &MgrLvlName
		

!FROM XLATTABLE I  WHERE FIELDNAME = 'MANAGER_LEVEL'  !GEX-MXT commented for HCM 9.0 Upgrade changes
FROM PSXLATITEM I  WHERE FIELDNAME = 'MANAGER_LEVEL'  !GEX-MXT Added for HCM 9.0 Upgrade changes
		   AND FIELDVALUE = $OLD_MgrLvl  

		   AND I.EFFDT =
!				(SELECT MAX(I_ED.EFFDT) FROM XLATTABLE I_ED	!GEX-MXT commented for HCM 9.0 Upgrade changes
				(SELECT MAX(I_ED.EFFDT) FROM PSXLATITEM I_ED    !GEX-MXT Added for HCM 9.0 Upgrade changes
				 WHERE I_ED.FIELDNAME = 'MANAGER_LEVEL'
				    !AND I.LANGUAGE_CD = I_ED.LANGUAGE_CD	!GEX-MXT commented for HCM 9.0 Upgrade changes
				  AND I_ED.FIELDVALUE = $OLD_MgrLvl )

end-select

End-Procedure 



!**************************************************************************************************************************
!		MgrLvl-Grade
!**************************************************************************************************************************

Begin-procedure MgrLvl-Grade

let $OLD_MgrLvl = ' '
let #Processed = 0 ! Variable to detect whether processed/fetched any values
let #H_Grand_Total = 0
let #grade13 = 0
let #grade14 = 0
let #grade15 = 0
let #grade30 = 0
let #grade50 = 0

Begin-SELECT 

COUNT(A.EMPLID) &count_emplid
		move &count_emplid to #count_emplid
A.GRADE 
		move &A.GRADE to $grade
B.MANAGER_LEVEL
		move &B.MANAGER_LEVEL to $MgrLvl
I.XLATSHORTNAME	!GEX-TLL 04/11/2008 HCM 9.0 Upgrade 		
	! Same logic as with EVPSVP
	if $MgrLvl = $OLD_MgrLvl
		
		DO MgrLvl-Cal
		
	else

		if ( $OLD_MgrLvl = ' ' and #Processed  ) ! To Print only if any Empl is listed under no EVP/SVP
			let $MgrLvl_line = 'N/A'
			String $MgrLvl_line #grade13 #grade14 #grade15 #grade30 #grade50 #H_Grand_Total by $delim into $MgrLvl_line
			Write #Mgr from $MgrLvl_line
		end-if

		if  $OLD_MgrLvl <> ' '	
			DO MgrLvlName
			Let $MgrLvl_line = &MgrLvlName
			String $MgrLvl_line #grade13 #grade14 #grade15 #grade30 #grade50 #H_Grand_Total by $delim into $MgrLvl_line
			Write #Mgr from $MgrLvl_line
		end-if

		let #H_Grand_Total = 0
		let #grade13 = 0
		let #grade14 = 0
		let #grade15 = 0
		let #grade30 = 0
		let #grade50 = 0
		
		let $OLD_MgrLvl = $MgrLvl
		DO MgrLvl-Cal

	end-if
 !GEX-TLL 04/11/2008 HCM 9.0 Upgrade Begin	
  !FROM PS_JOB A, PS_JOBCODE_TBL B, PS_PERSONAL_DATA C 
   FROM PS_JOB A, PS_JOBCODE_TBL B, PS_PERSONAL_DATA C,PSXLATITEM I
   
  WHERE I.FIELDNAME = 'MANAGER_LEVEL' 

           AND I.FIELDVALUE = B.MANAGER_LEVEL  

           AND I.EFFDT =
                (SELECT MAX(I_ED.EFFDT) FROM PSXLATITEM I_ED !XLATTABLE I_ED !GEX-TLL cOMMENTED FOR HCM 9.0 Upgrade
                 WHERE I_ED.FIELDNAME = 'MANAGER_LEVEL'
				   ! AND I.LANGUAGE_CD = I_ED.LANGUAGE_CD !GEX-TLL 04/11/2008 HCM 9.0 Upgrade
				  AND I_ED.FIELDVALUE = B.MANAGER_LEVEL )
  and A.EFFDT =
  !WHERE A.EFFDT =
  !GEX-TLL 04/11/2008 HCM 9.0 Upgrade End
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE A.EMPLID = A_ED.EMPLID
          AND A.EMPL_RCD = A_ED.EMPL_RCD
          !GEX-MXT Modified for Upgrade changes - Begin
          !AND A_ED.EFFDT <= TO_DATE('2007-09-30','YYYY-MM-DD'))
          AND A_ED.EFFDT <= TO_DATE($AsOfDate,'DD-MM-YYYY')) ! changes done by VENDKXY on 02/06/2008 to modify the date with As of date
          !GEX-MXT Modified for Upgrade changes - End      
    AND A.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE A.EMPLID = A_ES.EMPLID
          AND A.EMPL_RCD = A_ES.EMPL_RCD
          AND A.EFFDT = A_ES.EFFDT)
    AND B.SETID = A.SETID_JOBCODE
    AND B.JOBCODE = A.JOBCODE
    AND B.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B.SETID = B_ED.SETID
          AND B.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= A.EFFDT)
    AND A.EMPLID = C.EMPLID
    AND (( A.EMPL_STATUS IN ('A','L','P','S')))
    AND A.COMPANY NOT BETWEEN '005' AND '999'
    AND A.COMPANY NOT IN ('KAP','VEC')
    AND A.JOBCODE <> '90000'
    AND A.GEX_SEASONAL_EMP = 'N'
    AND A.GRADE IN ( '13','14','15','30','50')
    AND C.SEX IN ('F','M')
   ! AND B.MANAGER_LEVEL = #Where_Cond
!GEX-TLL 04/11/2008 HCM 9.0 Upgrade Begin
!GROUP BY  A.GRADE , B.MANAGER_LEVEL
!ORDER BY B.MANAGER_LEVEL
GROUP BY  A.GRADE , B.MANAGER_LEVEL,I.XLATSHORTNAME
ORDER BY I.XLATSHORTNAME
!GEX-TLL 04/11/2008 HCM 9.0 Upgrade End

END-SELECT

if ( $OLD_MgrLvl = ' ' and #Processed  ) ! To Print only if any Empl is listed under no EVP/SVP
	let $MgrLvl_line = 'N/A'
	String $MgrLvl_line #grade13 #grade14 #grade15 #grade30 #grade50 #H_Grand_Total by $delim into $MgrLvl_line
	Write #Mgr from $MgrLvl_line
	end-if

if  $OLD_MgrLvl <> ' '	
	DO MgrLvlName
	Let $MgrLvl_line = &MgrLvlName
	String $MgrLvl_line #grade13 #grade14 #grade15 #grade30 #grade50 #H_Grand_Total by $delim into $MgrLvl_line
	Write #Mgr from $MgrLvl_line
end-if

end-procedure

!**************************************************************************************************************************
!		OprDivision
!**************************************************************************************************************************

Begin-Procedure OprDivision
	
Show 'OprDivision Started'
!Show 'Wrting into the file: ' $OprDiv 
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
let $heading1 = 'Employees by OpDiv with Gender & Ethnic Group are as of: '||$asofdate	!VENDKXY added on 03/18/2008
Write #OprDiv from $heading1	!VENDKXY added on 03/18/2008
Write #OprDiv from $newline	!VENDKXY added on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End

let $heading1 = $delim || 'Gender/Ethnic Group                                                                               '
Write #OprDiv from $heading1
let $heading2 = $delim || 'Female                         ' || $delim || $delim || $delim || 'Female Total' || $delim || 'Male                         ' || $delim || $delim || $delim || 'Male Total' || $delim || 'Grand Total'
Write #OprDiv from $heading2
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $heading3 = 'Oper Division' || $delim || 'Black' || $delim || 'Hispanic' || $delim || 'White' || $delim || $delim || 'Black' || $delim || 'Hispanic' || $delim || 'White'
let $heading3 = 'Oper Division' || $delim || 'Black or African American' || $delim || 'Hispanic or Latino' || $delim || 'White' || $delim || $delim || 'Black or African American' || $delim || 'N/A' || $delim || 'White'  !VENDKXY added on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
Write #OprDiv from $heading3

do OprDiv-Gender-Ethnic

let $OprDiv_Total = 'Grand Total'
String $OprDiv_Total #Opr_V_F_B_Total #Opr_V_F_H_Total #Opr_V_F_W_Total #Opr_V_F_Total #Opr_V_M_B_Total #Opr_V_M_NA_Total #Opr_V_M_W_Total #Opr_V_M_Total #Opr_V_Grand_Total by $delim into $OprDiv_Total
Write #OprDiv from $OprDiv_Total

Show 'OprDivision Ended'

End-Procedure

!**************************************************************************************************************************
!		OprDiv-Cal
!**************************************************************************************************************************

begin-procedure OprDiv-Cal
	
	if ( &sex = 'F' )
			
	   EVALUATE &Ethnic_Grp

	      When = '1'
		  let #F_WHITE_CNT = &Empl_Cnt
		  let #H_F_Total = #H_F_Total + #Empl_Cnt
		  let #Opr_V_F_W_Total = #Opr_V_F_W_Total + #Empl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		   Break
	      When = '2'
		  let #F_BLACK_CNT = &Empl_Cnt
          	  let #H_F_Total = #H_F_Total + #Empl_Cnt
                  let #Opr_V_F_B_Total = #Opr_V_F_B_Total + #Empl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
   		   Break
	      When = '3'
		  let #F_HISPANIC_CNT = &Empl_Cnt
		  let #H_F_Total = #H_F_Total + #Empl_Cnt
		  let #Opr_V_F_H_Total = #Opr_V_F_H_Total + #Empl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
  		   Break
	    END-EVALUATE
	end-if	

	if (&sex = 'M' )
		
	    EVALUATE &Ethnic_Grp

	      When = '1' 
		   let #M_WHITE_CNT = &Empl_Cnt
		   let #H_M_Total = #H_M_Total + #Empl_Cnt
		   let #Opr_V_M_W_Total = #Opr_V_M_W_Total + #Empl_Cnt
		   let #Processed = 1 ! 1 indicates processed atleast once
		   Break
	      When = '2'
		   let #M_BLACK_CNT = &Empl_Cnt
		   let #H_M_Total = #H_M_Total + #Empl_Cnt
   		   let #Opr_V_M_B_Total = #Opr_V_M_B_Total + #Empl_Cnt
		   let #Processed = 1 ! 1 indicates processed atleast once
		   Break
	      When = '6'
        	   let #M_NA_CNT = &Empl_Cnt
		   let #H_M_Total = #H_M_Total + #Empl_Cnt
   		   let #Opr_V_M_NA_Total = #Opr_V_M_NA_Total + #Empl_Cnt
		   let #Processed = 1 ! 1 indicates processed atleast once
		   Break
	     END-EVALUATE
		
	end-if

end-procedure 


!**************************************************************************************************************************
!		OprDiv-Gender-Ethnic
!**************************************************************************************************************************

Begin-procedure OprDiv-Gender-Ethnic

let $OLD_OprDiv = ' '
let #H_F_Total = 0
let #H_M_Total = 0
let #Processed = 0 ! Variable to detect whether processed/fetched any values

Begin-SELECT 

COUNT(DISTINCT A.EMPLID)  &Empl_Cnt
	move &Empl_Cnt to #Empl_Cnt

G.GEX_OPR_DIV  &OprDiv

C.SEX          &Sex

!H.ETHNIC_GROUP &Ethnic_Grp
ETHGRP.ETHNIC_GROUP &Ethnic_Grp

	if &OprDiv = $OLD_OprDiv
				
		DO OprDiv-Cal
	else
	
		let #H_Grand_Total = #H_F_Total + #H_M_Total

		let #Opr_V_F_Total = #Opr_V_F_W_Total + #Opr_V_F_B_Total + #Opr_V_F_H_Total
		let #Opr_V_M_Total = #Opr_V_M_W_Total + #Opr_V_M_B_Total + #Opr_V_M_NA_Total
		let #Opr_V_Grand_Total = #Opr_V_Grand_Total + #H_Grand_Total
		
		if ( $OLD_OprDiv = ' ' and #Processed  ) ! To Print only if any Empl is listed under no EVP/SVP
			let $OprDiv_line = 'N/A'
			String  $OprDiv_line #F_BLACK_CNT  #F_HISPANIC_CNT  #F_WHITE_CNT  #H_F_Total #M_BLACK_CNT #M_NA_CNT  #M_WHITE_CNT  #H_M_Total  #H_Grand_Total by $delim into $OprDiv_line
			Write #OprDiv from $OprDiv_line

		end-if

		if $OLD_OprDiv <> ' '
			
			let $OprDiv_line = $OLD_OprDiv
			String  $OprDiv_line #F_BLACK_CNT  #F_HISPANIC_CNT  #F_WHITE_CNT  #H_F_Total #M_BLACK_CNT #M_NA_CNT  #M_WHITE_CNT  #H_M_Total  #H_Grand_Total by $delim into $OprDiv_line
			Write #OprDiv from $OprDiv_line
		end-if

		let #H_F_Total = 0
		let #H_M_Total = 0

		let #F_BLACK_CNT = 0
		let #F_HISPANIC_CNT = 0
		let #F_WHITE_CNT = 0
		let #H_F_Total = 0
		let #M_BLACK_CNT = 0
		let #M_NA_CNT = 0
		let #M_WHITE_CNT = 0
		let #H_M_Total = 0
		let #H_Grand_Total = 0


		let $OLD_OprDiv = &OprDiv
		DO OprDiv-Cal
		
	end-if

FROM PS_JOB A,PS_JOBCODE_TBL B, PS_PERSONAL_DATA C, PS_EMPLOYMENT D, 
  !PS_DEPT_TBL E, PS_GEX_DEPT_TBL F, PS_GEX_EVP_TBL G, PS_GEX_ETHNIC_TBL1 H
  PS_DEPT_TBL E, PS_GEX_DEPT_TBL F, PS_GEX_EVP_TBL G, PS_DIVERS_ETHNIC DI,PS_ETHNIC_GRP_TBL ETHGRP  !vendtll 05/13/2008
  
  WHERE A.EFFDT =
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE A.EMPLID = A_ED.EMPLID
          AND A.EMPL_RCD = A_ED.EMPL_RCD
          !GEX-MXT Modified for Upgrade changes - Begin
          !AND A_ED.EFFDT <= TO_DATE('2007-09-30','YYYY-MM-DD'))
          AND A_ED.EFFDT <= TO_DATE($AsOfDate,'DD-MM-YYYY')) ! changes done by VENDKXY on 02/06/2008 to modify the date with As of date
          !GEX-MXT Modified for Upgrade changes - End
    AND A.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE A.EMPLID = A_ES.EMPLID
          AND A.EMPL_RCD = A_ES.EMPL_RCD
          AND A.EFFDT = A_ES.EFFDT)
     AND B.SETID = A.SETID_JOBCODE
     AND B.JOBCODE = A.JOBCODE
     AND B.EFFDT =
        (SELECT MAX(B_ED.EFFDT) FROM PS_JOBCODE_TBL B_ED
        WHERE B.SETID = B_ED.SETID
          AND B.JOBCODE = B_ED.JOBCODE
          AND B_ED.EFFDT <= A.EFFDT)
     AND A.EMPLID = C.EMPLID
     AND A.EMPLID = D.EMPLID
     AND A.EMPL_RCD = D.EMPL_RCD
     AND E.SETID = A.SETID_DEPT
     AND E.DEPTID = A.DEPTID
     AND E.EFFDT =
        (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
        WHERE E.SETID = E_ED.SETID
          AND E.DEPTID = E_ED.DEPTID
          AND E_ED.EFFDT <= A.EFFDT)
     AND E.SETID = F.SETID
     AND E.DEPTID = F.DEPTID
     AND F.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F.SETID = F_ED.SETID
          AND F.DEPTID = F_ED.DEPTID
         AND F_ED.EFFDT <= E.EFFDT)
     AND A.DEPTID =  G.DEPTID (+)
     AND (( A.EMPL_STATUS IN ('A','L','P','S')))
     AND A.COMPANY NOT BETWEEN '005' AND '999'
     AND A.COMPANY NOT IN ('KAP','VEC')
     AND A.JOBCODE <> '90000'
     AND A.GEX_SEASONAL_EMP = 'N'
     !AND A.EMPLID = H.EMPLID     !GEX-TLL 05/13/2008
     AND A.EMPLID = DI.EMPLID !GEX-TLL 05/13/2008

     AND A.GRADE IN ( '13','14','15','30','50')
     AND C.SEX IN ('F','M') 
     !GEX-TLL 05/13/2008 Begin
     AND DI.SETID = ETHGRP.SETID 																										
    AND DI.ETHNIC_GRP_CD = ETHGRP.ETHNIC_GRP_CD
    AND DI.PRIMARY_INDICATOR = 'Y' 	!GEX-MXT ADDED FOR ETHNICITY CHANGES
   AND ETHGRP.EFFDT = (SELECT MAX(ETH2.EFFDT) FROM PS_ETHNIC_GRP_TBL ETH2 			
                   WHERE ETH2.SETID = ETHGRP.SETID 					
                   AND ETH2.ETHNIC_GRP_CD = ETHGRP.ETHNIC_GRP_CD 				
                   AND ETH2.EFFDT  <= $AsOfDate)					
   AND ETHGRP.ETHNIC_GROUP <> '6'  !Not Applicable  
   !GEX-TLL 05/13/2008 End
     
     !GROUP BY G.GEX_OPR_DIV, C.SEX, H.ETHNIC_GROUP
     GROUP BY G.GEX_OPR_DIV, C.SEX, ETHGRP.ETHNIC_GROUP

END-SELECT
  
let #H_Grand_Total = #H_F_Total + #H_M_Total

if ( $OLD_OprDiv = ' ' and #Processed  ) ! To Print only if any Empl is listed under no EVP/SVP
	let $OprDiv_line = 'N/A'
	String  $OprDiv_line #F_BLACK_CNT  #F_HISPANIC_CNT  #F_WHITE_CNT  #H_F_Total #M_BLACK_CNT #M_NA_CNT  #M_WHITE_CNT  #H_M_Total  #H_Grand_Total by $delim into $OprDiv_line
	Write #OprDiv from $OprDiv_line

end-if

if $OLD_OprDiv <> ' '
			
	let $OprDiv_line = $OLD_OprDiv
	String  $OprDiv_line #F_BLACK_CNT  #F_HISPANIC_CNT  #F_WHITE_CNT  #H_F_Total #M_BLACK_CNT #M_NA_CNT  #M_WHITE_CNT  #H_M_Total  #H_Grand_Total by $delim into $OprDiv_line
	Write #OprDiv from $OprDiv_line
end-if	

let #Opr_V_F_Total = #Opr_V_F_W_Total + #Opr_V_F_B_Total + #Opr_V_F_H_Total
let #Opr_V_M_Total = #Opr_V_M_W_Total + #Opr_V_M_B_Total + #Opr_V_M_NA_Total
let #Opr_V_Grand_Total = #Opr_V_Grand_Total + #H_Grand_Total

end-procedure



!**************************************************************************************************************************
!		Dept
!**************************************************************************************************************************

Begin-Procedure Dept

Show 'Dept-Gender-Ethnic-Grade Started'
Show 'Dept-Gender-Ethnic-Grade Started'
!Show 'Writing into the file: ' $Dept
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
let $heading1 ='Employees by Department with Gender & Ethnic Group are as of: '||$asofdate	!VENDKXY added on 03/18/2008
Write #DEPT from $heading1	!VENDKXY added on 03/18/2008
Write #DEPT from $newline	!VENDKXY added on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End

let $heading1 = $delim || 'Gender/Ethnic Group/Grade                                                                               '
Write #DEPT from $heading1
let $heading2 = $delim || 'Female                                                                                                                                      ' || $delim|| $delim|| $delim|| $delim|| $delim || $delim || $delim || $delim || $delim || $delim || $delim ||$delim  ||'Male                                                                                                         ' 
Write #DEPT from $heading2
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $heading3 = $delim || 'Black' ||$delim || 'Black Total' ||$delim || 'Hisp' ||$delim || 'Hisp Total' ||$delim || 'White                               ' ||$delim ||$delim ||$delim ||$delim ||$delim || 'White Total' ||$delim || 'Fem Total' || $delim || 'Black' ||$delim || 'Black Total' ||$delim || 'Hisp' ||$delim || 'Hisp Total' ||$delim || 'White                           ' ||$delim ||$delim ||$delim ||$delim ||$delim ||'White Total' ||$delim || 'Male Total' ||$delim ||'Grand Total'
!let $heading4 = 'Department' || $delim || '13'    || $delim || $delim                   || '13'  || $delim || $delim                 || '13' || $delim || '14' || $delim || '15'  || $delim || '30' || $delim || '50'    ||$delim || $delim ||$delim || '13'    || $delim || $delim                   || '13'  || $delim || $delim                  || '13' || $delim || '14' || $delim || '15'  || $delim || '30' || $delim || '50' 
let $heading3 = $delim || 'Black or African American' ||$delim || $delim ||'Black or African American Total' ||$delim || 'Hispanic or Latino' ||$delim || 'Hispanic or Latino Total' ||$delim  || 'White' ||$delim ||$delim ||$delim ||$delim ||$delim || 'White Total' ||$delim || 'Fem Total' || $delim  !VENDKXY modified on 03/18/2008
Let  $heading3= $heading3 || 'Black or African American' ||$delim || 'Black or African American Total' ||$delim || 'N/A' ||$delim || 'N/A Total' ||$delim || 'White' ||$delim ||$delim ||$delim ||$delim ||$delim ||'White Total' ||$delim || 'Male Total' ||$delim ||'Grand Total'				!VENDKXY modified on 03/18/2008
let $heading4 = 'Department' || $delim || '13'    || $delim ||'15'|| $delim   || $delim      || '13'  || $delim || $delim                 || '13' || $delim || '14' || $delim || '15'  || $delim || '30' || $delim || '50'    ||$delim || $delim ||$delim || '13'    || $delim || $delim                   || '13'  || $delim || $delim                  || '13' || $delim || '14' || $delim || '15'  || $delim || '30' || $delim || '50' 
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End

Write #DEPT from $heading3
Write #DEPT from $heading4
Write #DEPT from $Newline

do Dept-Gender-Ethnic-Grade

show 'Dept-Gender-Ethnic-Grade Ended'

End-Procedure 

!**************************************************************************************************************************
!		Dept-Gender-Ethnic-Grade
!**************************************************************************************************************************

begin-procedure Dept-Gender-Ethnic-Grade

let $OLD_Dept = ' '
let $Dept_Grade_Cnt = 'N/A'
let #Dept_Grand_Total = 0
let #Processed = 0 ! Variable to detect whether processed/fetched any values

BEGIN-SELECT 

count( DISTINCT (A.EMPLID)) &DeptEmpl_Cnt
	move &DeptEmpl_Cnt to #DeptEmpl_Cnt
	
E.DESCR &Dept
C.SEX   &Gender
	
!H.ETHNIC_GROUP &Ethnc
ETHGRP.ETHNIC_GROUP &Ethnc
A.GRADE &Grd

			if &Dept = $OLD_Dept
				
				DO Dept-Cal
			else
				


			!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
				!let #F_Total = #H_F_W_Total + #F_BLACK_CNT_13 + #F_HISP_CNT_15
				let #F_Total = #H_F_W_Total + #F_BLACK_CNT_13 + #F_HISP_CNT_15+#F_BLACK_CNT_15
			!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End	
				let #M_Total = #H_M_W_Total + #M_BLACK_CNT_13 + #M_NA_CNT_30
			
				let #V_F_W_Cnt = #V_F_W_Cnt + #H_F_W_Total	!GEX-TLL added on 03/24/2008
				let #V_F_Cnt = #V_F_Cnt + #F_Total		!GEX-TLL added on 03/24/2008
				let #V_M_W_Cnt = #V_M_W_Cnt + #H_M_W_Total	!GEX-TLL added on 03/24/2008
				let #V_M_Cnt = #V_M_Cnt + #M_Total		!GEX-TLL added on 03/24/2008
				LET #V_F_Bl_Cnt = #V_F_Bl_Cnt + #H_F_B_Cnt	!GEX-TLL added on 03/24/2008
			
				let #Grand_Total = #F_Total + #M_Total

				if ( $OLD_Dept = ' ' and #Processed  ) ! To Print only if any Empl is listed under no EVP/SVP
					let $Dept_Grade_Cnt = 'N/A'
			
					!String $Dept_Grade_Cnt #F_BLACK_CNT_13 #F_BLACK_CNT_13 #F_HISP_CNT_15  #F_HISP_CNT_15  #F_WHITE_CNT_13 #F_WHITE_CNT_14 #F_WHITE_CNT_15 #F_WHITE_CNT_30 #F_WHITE_CNT_50 #H_F_W_Total #F_Total #M_BLACK_CNT_13 #M_BLACK_CNT_13 #M_NA_CNT_30  #M_NA_CNT_30  #M_WHITE_CNT_13 #M_WHITE_CNT_14 #M_WHITE_CNT_15 #M_WHITE_CNT_30 #M_WHITE_CNT_50 #H_M_W_Total #M_Total #Grand_Total by $delim into $Dept_Grade_Cnt  !GEX-TLL modified on 03/24/2008
					String $Dept_Grade_Cnt #F_BLACK_CNT_13 #F_BLACK_CNT_15 #H_F_B_Cnt #F_HISP_CNT_15  #F_HISP_CNT_15  #F_WHITE_CNT_13 #F_WHITE_CNT_14 #F_WHITE_CNT_15 #F_WHITE_CNT_30 #F_WHITE_CNT_50 #H_F_W_Total #F_Total #M_BLACK_CNT_13 #M_BLACK_CNT_13 #M_NA_CNT_30  #M_NA_CNT_30  #M_WHITE_CNT_13 #M_WHITE_CNT_14 #M_WHITE_CNT_15 #M_WHITE_CNT_30 #M_WHITE_CNT_50 #H_M_W_Total #M_Total #Grand_Total by $delim into $Dept_Grade_Cnt  !GEX-TLL Added on 03/24/2008
			
					Write #DEPT from $Dept_Grade_Cnt
				end-if
				if $OLD_Dept <> ' '
					let $Dept_Grade_Cnt = $OLD_Dept
			
					!String $Dept_Grade_Cnt #F_BLACK_CNT_13 #F_BLACK_CNT_13 #F_HISP_CNT_15  #F_HISP_CNT_15  #F_WHITE_CNT_13 #F_WHITE_CNT_14 #F_WHITE_CNT_15 #F_WHITE_CNT_30 #F_WHITE_CNT_50 #H_F_W_Total #F_Total #M_BLACK_CNT_13 #M_BLACK_CNT_13 #M_NA_CNT_30  #M_NA_CNT_30  #M_WHITE_CNT_13 #M_WHITE_CNT_14 #M_WHITE_CNT_15 #M_WHITE_CNT_30 #M_WHITE_CNT_50 #H_M_W_Total #M_Total #Grand_Total by $delim into $Dept_Grade_Cnt !GEX-TLL modified on 03/24/2008  
					String $Dept_Grade_Cnt #F_BLACK_CNT_13  #F_BLACK_CNT_15 #H_F_B_Cnt #F_HISP_CNT_15  #F_HISP_CNT_15  #F_WHITE_CNT_13 #F_WHITE_CNT_14 #F_WHITE_CNT_15 #F_WHITE_CNT_30 #F_WHITE_CNT_50 #H_F_W_Total #F_Total #M_BLACK_CNT_13 #M_BLACK_CNT_13 #M_NA_CNT_30  #M_NA_CNT_30  #M_WHITE_CNT_13 #M_WHITE_CNT_14 #M_WHITE_CNT_15 #M_WHITE_CNT_30 #M_WHITE_CNT_50 #H_M_W_Total #M_Total #Grand_Total by $delim into $Dept_Grade_Cnt  !GEX-TLL added on 03/24/2008
			
					Write #DEPT from $Dept_Grade_Cnt
				end-if

				
				let #Dept_Grand_Total = #Dept_Grand_Total + #Grand_Total

				
				
				let #F_WHITE_CNT_13 = 0
				let #F_WHITE_CNT_14 = 0
				let #F_WHITE_CNT_15 = 0
				let #F_WHITE_CNT_30 = 0
				let #F_WHITE_CNT_50 = 0

				let #M_WHITE_CNT_13 = 0
				let #M_WHITE_CNT_14 = 0
				let #M_WHITE_CNT_15 = 0
				let #M_WHITE_CNT_30 = 0
				let #M_WHITE_CNT_50 = 0

				let #F_BLACK_CNT_13 = 0
				let #F_BLACK_CNT_15 = 0	!GEX-TLL 03/24/2008 HCM 9.0 Upgrade
				let #F_HISP_CNT_15 = 0
				LET #H_F_B_Cnt= 0	!GEX-TLL 03/24/2008 HCM 9.0 Upgrade
				let #M_BLACK_CNT_13 = 0
				let #M_NA_CNT_30 = 0

				let #H_F_W_Total = 0
				let #H_M_W_Total = 0

				let $OLD_Dept = &Dept
				let $Dept_Grade_Cnt = $OLD_Dept
				DO Dept-Cal
				
			end-if


!FROM PS_JOB A, PS_PERSONAL_DATA C, PS_DEPT_TBL E, PS_GEX_DEPT_TBL F, PS_GEX_ETHNIC_TBL1 H
FROM PS_JOB A, PS_PERSONAL_DATA C, PS_DEPT_TBL E, PS_GEX_DEPT_TBL F,PS_DIVERS_ETHNIC DI,PS_ETHNIC_GRP_TBL ETHGRP

  WHERE A.EFFDT =
                    (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
                        WHERE A.EMPLID = A_ED.EMPLID
                          AND A.EMPL_RCD = A_ED.EMPL_RCD
                          !GEX-MXT Modified for Upgrade changes - Begin
          		  !AND A_ED.EFFDT <= TO_DATE('2007-09-30','YYYY-MM-DD'))
          		   AND A_ED.EFFDT <= TO_DATE($AsOfDate,'DD-MM-YYYY')) ! changes done by VENDKXY on 02/06/2008 to modify the date with As of date
          		  !GEX-MXT Modified for Upgrade changes - End   
                                                   
    AND A.EFFSEQ =
                    (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
                        WHERE A.EMPLID = A_ES.EMPLID
                          AND A.EMPL_RCD = A_ES.EMPL_RCD
                          AND A.EFFDT = A_ES.EFFDT)
    
     AND A.EMPLID = C.EMPLID
    
    
     AND E.SETID = A.SETID_DEPT
     AND E.DEPTID = A.DEPTID
     AND E.EFFDT =
                     (SELECT MAX(E_ED.EFFDT) FROM PS_DEPT_TBL E_ED
                        WHERE E.SETID = E_ED.SETID
                        AND E.DEPTID = E_ED.DEPTID
                        AND E_ED.EFFDT <= A.EFFDT)
     AND E.SETID = F.SETID
     AND E.DEPTID = F.DEPTID
     AND F.EFFDT =
        (SELECT MAX(F_ED.EFFDT) FROM PS_GEX_DEPT_TBL F_ED
        WHERE F.SETID = F_ED.SETID
          AND F.DEPTID = F_ED.DEPTID
         AND F_ED.EFFDT <= E.EFFDT)
    
     AND (( A.EMPL_STATUS IN ('A','L','P','S')))
     AND A.COMPANY NOT BETWEEN '005' AND '999'
     AND A.COMPANY NOT IN ('KAP','VEC')
     AND A.JOBCODE <> '90000'
     AND A.GEX_SEASONAL_EMP = 'N'
     !AND A.EMPLID = H.EMPLID      !GEX-TLL 05/13/2008
     AND A.EMPLID = DI.EMPLID  !GEX-TLL 05/13/2008
     AND C.SEX IN ('F','M')
     AND A.GRADE IN ('13','14','15','30','50')
     !GEX-TLL 05/13/2008 Begin
     AND DI.SETID = ETHGRP.SETID 																										
    AND DI.ETHNIC_GRP_CD = ETHGRP.ETHNIC_GRP_CD
    AND DI.PRIMARY_INDICATOR = 'Y' 	! ADDED FOR ETHNICITY CHANGES
   AND ETHGRP.EFFDT = (SELECT MAX(ETH2.EFFDT) FROM PS_ETHNIC_GRP_TBL ETH2 			
                   WHERE ETH2.SETID = ETHGRP.SETID 					
                   AND ETH2.ETHNIC_GRP_CD = ETHGRP.ETHNIC_GRP_CD 				
                   AND ETH2.EFFDT  <= $AsOfDate)					
   AND ETHGRP.ETHNIC_GROUP <> '6'  !Not Applicable  
   !GEX-TLL 05/13/2008 End

     !group by E.DESCR,  C.SEX , H.ETHNIC_GROUP,A.GRADE 	!GEX-TLL 05/13/2008
     group by E.DESCR,  C.SEX , ETHGRP.ETHNIC_GROUP,A.GRADE 	!GEX-TLL 05/13/2008
     
     order by E.DESCR

END-SELECT


let #F_Total = #H_F_W_Total + #F_BLACK_CNT_13 + #F_HISP_CNT_15+#F_BLACK_CNT_15  !GEX-TLL added on 03/24/2008 HCM 9.0 Upgrade
let #M_Total = #H_M_W_Total + #M_BLACK_CNT_13 + #M_NA_CNT_30   !GEX-TLL added on 03/24/2008 HCM 9.0 Upgrade

let #V_F_W_Cnt = #V_F_W_Cnt + #H_F_W_Total
let #V_F_Cnt = #V_F_Cnt + #F_Total
LET #V_F_Bl_Cnt = #V_F_Bl_Cnt + #H_F_B_Cnt  !GEX-TLL added on 03/24/2008 HCM 9.0 Upgrade
let #V_M_W_Cnt = #V_M_W_Cnt + #H_M_W_Total
let #V_M_Cnt = #V_M_Cnt + #M_Total
!let #F_Total = #H_F_W_Total + #F_BLACK_CNT_13 + #F_HISP_CNT_15   !GEX-TLL modified on 03/24/2008 HCM 9.0 Upgrade
!let #M_Total = #H_M_W_Total + #M_BLACK_CNT_13 + #M_NA_CNT_30  !GEX-TLL modified on 03/24/2008 HCM 9.0 Upgrade
let #Grand_Total = #F_Total + #M_Total
let #Dept_Grand_Total = #Dept_Grand_Total + #Grand_Total


if ( $OLD_Dept = ' ' and #Processed  ) ! To Print only if any Empl is listed under no EVP/SVP
	let $Dept_Grade_Cnt = 'N/A'
	!String $Dept_Grade_Cnt #F_BLACK_CNT_13 #F_BLACK_CNT_13 #F_HISP_CNT_15  #F_HISP_CNT_15  #F_WHITE_CNT_13 #F_WHITE_CNT_14 #F_WHITE_CNT_15 #F_WHITE_CNT_30 #F_WHITE_CNT_50 #H_F_W_Total #F_Total #M_BLACK_CNT_13 #M_BLACK_CNT_13 #M_NA_CNT_30  #M_NA_CNT_30  #M_WHITE_CNT_13 #M_WHITE_CNT_14 #M_WHITE_CNT_15 #M_WHITE_CNT_30 #M_WHITE_CNT_50 #H_M_W_Total #M_Total #Grand_Total by $delim into $Dept_Grade_Cnt  !GEX-TLL modified on 03/24/2008 HCM 9.0 Upgrade
	String $Dept_Grade_Cnt #F_BLACK_CNT_13 #F_BLACK_CNT_15 #H_F_B_Cnt #F_HISP_CNT_15  #F_HISP_CNT_15  #F_WHITE_CNT_13 #F_WHITE_CNT_14 #F_WHITE_CNT_15 #F_WHITE_CNT_30 #F_WHITE_CNT_50 #H_F_W_Total #F_Total #M_BLACK_CNT_13 #M_BLACK_CNT_13 #M_NA_CNT_30  #M_NA_CNT_30  #M_WHITE_CNT_13 #M_WHITE_CNT_14 #M_WHITE_CNT_15 #M_WHITE_CNT_30 #M_WHITE_CNT_50 #H_M_W_Total #M_Total #Grand_Total by $delim into $Dept_Grade_Cnt  !GEX-TLL added on 03/24/2008 HCM 9.0 Upgrade
	Write #DEPT from $Dept_Grade_Cnt
end-if
if $OLD_Dept <> ' '
	let $Dept_Grade_Cnt = $OLD_Dept
	!String $Dept_Grade_Cnt #F_BLACK_CNT_13 #F_BLACK_CNT_13 #F_HISP_CNT_15  #F_HISP_CNT_15  #F_WHITE_CNT_13 #F_WHITE_CNT_14 #F_WHITE_CNT_15 #F_WHITE_CNT_30 #F_WHITE_CNT_50 #H_F_W_Total #F_Total #M_BLACK_CNT_13 #M_BLACK_CNT_13 #M_NA_CNT_30  #M_NA_CNT_30  #M_WHITE_CNT_13 #M_WHITE_CNT_14 #M_WHITE_CNT_15 #M_WHITE_CNT_30 #M_WHITE_CNT_50 #H_M_W_Total #M_Total #Grand_Total by $delim into $Dept_Grade_Cnt  !GEX-TLL modified on 03/24/2008 HCM 9.0 Upgrade
	String $Dept_Grade_Cnt #F_BLACK_CNT_13 #F_BLACK_CNT_15 #H_F_B_Cnt #F_HISP_CNT_15  #F_HISP_CNT_15  #F_WHITE_CNT_13 #F_WHITE_CNT_14 #F_WHITE_CNT_15 #F_WHITE_CNT_30 #F_WHITE_CNT_50 #H_F_W_Total #F_Total #M_BLACK_CNT_13 #M_BLACK_CNT_13 #M_NA_CNT_30  #M_NA_CNT_30  #M_WHITE_CNT_13 #M_WHITE_CNT_14 #M_WHITE_CNT_15 #M_WHITE_CNT_30 #M_WHITE_CNT_50 #H_M_W_Total #M_Total #Grand_Total by $delim into $Dept_Grade_Cnt  !GEX-TLL added on 03/24/2008 HCM 9.0 Upgrade
	Write #DEPT from $Dept_Grade_Cnt
end-if


let $Dept_Totals = 'Grand Total'
!String $Dept_Totals  #V_F_B_13_Cnt #V_F_B_13_Cnt  #V_F_Hisp_15_Cnt #V_F_Hisp_15_Cnt #V_F_W_13_Cnt #V_F_W_14_Cnt #V_F_W_15_Cnt #V_F_W_30_Cnt #V_F_W_50_Cnt #V_F_W_Cnt #V_F_Cnt #V_M_B_13_Cnt #V_M_B_13_Cnt  #V_F_NA_30_Cnt #V_F_NA_30_Cnt  #V_M_W_13_Cnt #V_M_W_14_Cnt #V_M_W_15_Cnt #V_M_W_30_Cnt #V_M_W_50_Cnt #V_M_W_Cnt #V_M_Cnt #Dept_Grand_Total by $delim into $Dept_Totals !GEX-TLL modified on 03/24/2008 HCM 9.0 Upgrade
String $Dept_Totals  #V_F_B_13_Cnt #V_F_B_15_Cnt #V_F_Bl_Cnt  #V_F_Hisp_15_Cnt #V_F_Hisp_15_Cnt #V_F_W_13_Cnt #V_F_W_14_Cnt #V_F_W_15_Cnt #V_F_W_30_Cnt #V_F_W_50_Cnt #V_F_W_Cnt #V_F_Cnt #V_M_B_13_Cnt #V_M_B_13_Cnt  #V_M_NA_30_Cnt #V_M_NA_30_Cnt  #V_M_W_13_Cnt #V_M_W_14_Cnt #V_M_W_15_Cnt #V_M_W_30_Cnt #V_M_W_50_Cnt #V_M_W_Cnt #V_M_Cnt #Dept_Grand_Total by $delim into $Dept_Totals	!GEX-TLL added on 03/24/2008 HCM 9.0 Upgrade
Write #DEPT from $Dept_Totals
end-procedure 

!**************************************************************************************************************************
!		Dept-Cal
!**************************************************************************************************************************

begin-procedure Dept-Cal

!show 'Gender: ' &Gender ' grade: ' &Grd

	if ( &Gender = 'F' )
			
	   EVALUATE &Ethnc

	      When = '1'
		 
		  if (&Grd = '13')	
		  let #F_WHITE_CNT_13 = #DeptEmpl_Cnt		 
		  let #H_F_W_Total = #H_F_W_Total + #DeptEmpl_Cnt
		  let #V_F_W_13_Cnt = #V_F_W_13_Cnt + #DeptEmpl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		  end-if

		  if (&Grd = '14')	
		  let #F_WHITE_CNT_14 = #DeptEmpl_Cnt		 
		  let #H_F_W_Total = #H_F_W_Total + #DeptEmpl_Cnt
		  let #V_F_W_14_Cnt = #V_F_W_14_Cnt + #DeptEmpl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		  end-if

		  if (&Grd = '15')	
		  let #F_WHITE_CNT_15 = #DeptEmpl_Cnt		 
		  let #H_F_W_Total = #H_F_W_Total + #DeptEmpl_Cnt
		  let #V_F_W_15_Cnt = #V_F_W_15_Cnt + #DeptEmpl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		  end-if

		  if (&Grd = '30')	
		  let #F_WHITE_CNT_30 = #DeptEmpl_Cnt		 
		  let #H_F_W_Total = #H_F_W_Total + #DeptEmpl_Cnt
		  let #V_F_W_30_Cnt = #V_F_W_30_Cnt + #DeptEmpl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		  end-if

		  if (&Grd = '50')	
		  let #F_WHITE_CNT_50 = #DeptEmpl_Cnt		 
		  let #H_F_W_Total = #H_F_W_Total + #DeptEmpl_Cnt
		  let #V_F_W_50_Cnt = #V_F_W_50_Cnt + #DeptEmpl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		  end-if

		   Break

	      When = '2'
		  if (&Grd = '13')	
		  let #F_BLACK_CNT_13 = #DeptEmpl_Cnt
	!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
		  let #H_F_B_Cnt = #H_F_B_Cnt + #DeptEmpl_Cnt
	!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
		  let #V_F_B_13_Cnt = #V_F_B_13_Cnt + #DeptEmpl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		  end-if
	!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
		 
		  if (&Grd = '15')
		  let #F_BLACK_CNT_15 = #DeptEmpl_Cnt
		  let #H_F_B_Cnt = #H_F_B_Cnt + #DeptEmpl_Cnt
		  let #V_F_B_15_Cnt = #V_F_B_15_Cnt + #DeptEmpl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		  end-if
		 
	!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
   		   Break

	      When = '3'
	          if (&Grd = '15')	
		  let #F_HISP_CNT_15 = #DeptEmpl_Cnt
		  let #V_F_Hisp_15_Cnt = #V_F_Hisp_15_Cnt + #DeptEmpl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		  end-if

  		   Break

	    END-EVALUATE
	end-if	

	if (&Gender = 'M' )
		
	    EVALUATE &Ethnc

	      When = '1' 
		 
		  if (&Grd = '13')	
		  let #M_WHITE_CNT_13 = #DeptEmpl_Cnt		 
		  let #H_M_W_Total = #H_M_W_Total + #DeptEmpl_Cnt
		  let #V_M_W_13_Cnt = #V_M_W_13_Cnt + #DeptEmpl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		  end-if

		  if (&Grd = '14')	
		  let #M_WHITE_CNT_14 = #DeptEmpl_Cnt		 
		  let #H_M_W_Total = #H_M_W_Total + #DeptEmpl_Cnt
		  let #V_M_W_14_Cnt = #V_M_W_14_Cnt + #DeptEmpl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		  end-if

		  if (&Grd = '15')	
		  let #M_WHITE_CNT_15 = #DeptEmpl_Cnt		 
		  let #H_M_W_Total = #H_M_W_Total + #DeptEmpl_Cnt
		  let #V_M_W_15_Cnt = #V_M_W_15_Cnt + #DeptEmpl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		  end-if

		  if (&Grd = '30')	
		  let #M_WHITE_CNT_30 = #DeptEmpl_Cnt		 
		  let #H_M_W_Total = #H_M_W_Total + #DeptEmpl_Cnt
		  let #V_M_W_30_Cnt = #V_M_W_30_Cnt + #DeptEmpl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		  end-if

		  if (&Grd = '50')	
		  let #M_WHITE_CNT_50 = #DeptEmpl_Cnt		 
		  let #H_M_W_Total = #H_M_W_Total + #DeptEmpl_Cnt
		  let #V_M_W_50_Cnt = #V_M_W_50_Cnt + #DeptEmpl_Cnt
		  let #Processed = 1 ! 1 indicates processed atleast once
		  end-if

		   Break

	      When = '2'
		   if (&Grd = '13')
		   let #M_BLACK_CNT_13 = #DeptEmpl_Cnt
		   let #H_M_B_Total = #H_M_B_Total + #DeptEmpl_Cnt
		   let #V_M_B_13_Cnt = #V_M_B_13_Cnt + #DeptEmpl_Cnt
		   let #Processed = 1 ! 1 indicates processed atleast once
   		  end-if
		  
		   Break

	      When = '6'
        	    if (&Grd = '30')
		   let #M_NA_CNT_30 = #DeptEmpl_Cnt
		   let #H_M_NA_Total = #H_M_NA_Total + #DeptEmpl_Cnt
		   let #V_M_NA_30_Cnt = #V_M_NA_30_Cnt + #DeptEmpl_Cnt
		   let #Processed = 1 ! 1 indicates processed atleast once
   		  end-if
		  
		   Break
	     END-EVALUATE
		
	end-if

end-procedure


!***********************************************************************************
!procedure Open-File
!***********************************************************************************

begin-procedure Open-File

!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!MOVE $CURRENT-DATE TO $CURRDT 'DDMMYYHHMMSS'
MOVE $CURRENT-DATE TO $CURRDT 'MMDDYYYY'
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End

!let $MMR_OUTFILE = 'T:\DATA\EVP\44428\kundan\'
let $MMR_OUTFILE = '\\corp.gianteagle.com\common\\HR\Metrics\EVP\Secure\Diversity - Grades 13 & Above\' !changed by vendkxy on 01/28/2008 as output file chaged changed by vicki
!let $MMR_OUTFILE = '\\ruchi\psprod\temp\'  !GEX-TLL TESTING

!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $EVPSVP_File = $MMR_OUTFILE || 'evpsvp_gender_ethnic'||$CURRDT||'.xls'
let $EVPSVP_File = $MMR_OUTFILE || 'Grades 13 to 50 - EEs by EVP & SVP with Gender & Ethnic Group'||$CURRDT||'.xls'	!VENDKXY modified on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
   Open $EVPSVP_File
	As #EVPSVP
	For-Writing
	Record=1000:Vary

!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $BusArea_File  = $MMR_OUTFILE || 'busarea'||$CURRDT||'.xls'
let $BusArea_File  = $MMR_OUTFILE || 'Employees by Business Area with Gender, Ethnic Group & Grade'||$CURRDT||'.xls'	!VENDKXY modified on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
   Open $BusArea_File
	As #BusArea
        For-Writing
        Record=1000:Vary
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $Mgrlvl_File  = $MMR_OUTFILE || 'mgrlvl_grade'||$CURRDT||'.xls'
let $Mgrlvl_File  = $MMR_OUTFILE || 'Employees by Mgr Level & Grade'||$CURRDT||'.xls'	!VENDKXY modified on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
   Open $Mgrlvl_File
	As #Mgr
        For-Writing
        Record=1000:Vary
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $OprDiv_File = $MMR_OUTFILE || 'oprdiv'||$CURRDT||'.xls'
let $OprDiv_File = $MMR_OUTFILE || 'Employees by OpDiv with Gender & Ethnic Group'||$CURRDT||'.xls'	!VENDKXY modified on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting end
   Open $OprDiv_File
	As #OprDiv
        For-Writing
        Record=1000:Vary
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting Begin
!let $Dept_File = $MMR_OUTFILE || 'dept_gender_ethnic_grade'||$CURRDT||'.xls'
let $Dept_File = $MMR_OUTFILE || 'Employees by Department with Gender & Ethnic Group'||$CURRDT||'.xls'	!VENDKXY modified on 03/18/2008
!GEX-TLL 03/24/2008 HCM 9.0 Upgrade Rerofitting End
   Open $Dept_File
	As #Dept
        For-Writing
        Record=1000:Vary

  encode '<009>' into $tab  
  encode '<39>' into $Quote
  encode '<012>' into $Newline
  Let $delim = $tab
  Let $blank = ' '

End-Procedure


#include 'stdapi.sqc'    !Process Scheduler Interface
#include 'curdttim.sqc'  !get-current-datetime procedure
#include 'datetime.sqc'  !routines for date and time formatting
!#include 'number.sqc'    !routines to format numbers
#include 'useprntr.sqc'  
#include 'gexrnctl.sqc'  !Routine for Get-Run-Control
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#include 'datemath.sqc'

