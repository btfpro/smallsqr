!***********************************************************************
! GEXHR400 Generate Weekly Roster Report by Location, email results
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! PeopeSoft, Inc.; it is not to be copied, reproduced, or transmitted  *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of PeopleSoft.                        *
!                                                                      *
! Copyright (c) 1988-1997 PeopleSoft, Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
!      $Date:: 10/20/09         $                                      *
!  $Revision:: 0                $                                      *
!  $Workfile:: GEXHR400.SQR     $                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!  ID#     INITIALS    DATE		DESCRIPTION OF THE CHANGE      *        
!***********************************************************************
!           RKK      10/20/2009         INITIAL CREATION               *
!S313917724 MXR      03/03/2010          effective dated logic for sele*
!                                        cting the max row on PS_JOB   *
!                                        is not correct                *
!           RKK      10/20/2009         INITIAL CREATION               *
!GEX_SEC_REENG TCSXSSS 05/11/2015    Changes related to                *
!				       gex_emplid_mapp/7 digit emplid  *
!***********************************************************************
!***********************************************************************
#include 'setenv.sqc' 				! set enviroment
!***********************************************************************
!***********************************************************************

#Include 'setup32.sqc'   !Printer and page-size initialization

Begin-Report
#debug9 Show 'Begin-Report'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc
  
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan

  let $ReportID = 'GEXHR400'

  do openfile
  do Select-Deptid-Parameters

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
 
end-report
!***********************************************************************
Begin-Procedure Openfile
!***********************************************************************

   encode '<009>' into $delim
   Let $fileout = '{OUTFILE}' || 'WEEKLYROSTER.xls'   
   Open $fileout As 1 For-Writing Record=1000:Vary
   Move 'GEXHR400'			To $Report  
   let $ReportTitle = 'Store Weekly Roster Report'
   encode '<012>' into $newline 
   String 'Report ID:' $Report  ' ' ' ' ' ' ' ' ' ' $ReportTitle by $delim into $gexhr400
   Write 1 from $gexhr400
   
End-Procedure


!***********************************************************************
!***********************************************************************
begin-procedure Select-for-roster
#debug9 show 'Select-for-roster'
 
begin-SELECT DISTINCT

A.DEPTID
A.BUSINESS_UNIT
A.EMPLID
!B.EMPLID !GEX_SEC_REENG TCSXSSS 05/11/2015
E.FIRST_NAME
E.LAST_NAME
E.MIDDLE_NAME
E.NAME
E.ADDRESS1
E.ADDRESS2
E.CITY
E.STATE
E.POSTAL
E.PHONE
A.ACCT_CD
C.DESCR
A.UNION_CD
A.LOCATION
A.JOBCODE
A.POSITION_NBR

  let $DEPTID   = rtrim(&A.DeptID,' ')
  let $BU       = rtrim(&A.BUSINESS_UNIT,' ')
  do Get-Department-Name
  !let $EMPLID         = &B.EMPLID !GEX_SEC_REENG TCSXSSS 05/11/2015
  let $EMPLID         = &A.EMPLID  !GEX_SEC_REENG TCSXSSS 05/11/2015
  
  show  '  $EMPLID  ==================== ' $EMPLID 
  let $FIRST_NAME     = &E.FIRST_NAME         
  let $LAST_NAME      = &E.LAST_NAME         
  let $MIDDLE_NAME    = &E.MIDDLE_NAME         
  let $NAME           = &E.NAME         
  let $ADDRESS1       = &E.ADDRESS1     
  let $ADDRESS2       = &E.ADDRESS2     
  let $CITY           = &E.CITY         
  let $STATE          = &E.STATE        
  let $POSTAL         = &E.POSTAL       
  let $PHONE          = &E.PHONE        
  let $ACCT_CD        = &A.ACCT_CD      
  let $ACCT_DESCR     = &C.DESCR        
  let $UNION_CD       = &A.UNION_CD  
  do get-emergency-contacts   
  let $LOCATION       = rtrim(&A.LOCATION,' ')
  do Get-Location-Name
  let $JOBCODE        = rtrim(&A.JOBCODE,' ')
  do Get-Job-Title
  let $POSITION_NBR   = &A.POSITION_NBR 
  Do Get-Position-Title
  IF $PosName = '' 
  	Let $jobtitle = $jobtitle
	Else
 		Let $jobtitle = $PosName
	End-if

	Do Write-Record

 !FROM PS_JOB A, PS_GEX_EMPLID_MAPP B, PS_GEX_ACCT_CD_TBL C, PS_PERSONAL_DATA E !GEX_SEC_REENG TCSXSSS 05/11/2015
 FROM PS_JOB A, PS_GEX_ACCT_CD_TBL C, PS_PERSONAL_DATA E !GEX_SEC_REENG TCSXSSS 05/11/2015
  WHERE A.DEPTID = &GEX_EMAIL_ADDR.DEPTID
     AND ( A.EFFDT =                                !isdvmxr    03/03/2010
        (SELECT MAX(A_ED.EFFDT) FROM PS_JOB A_ED
        WHERE A.EMPLID = A_ED.EMPLID
          AND A.EMPL_RCD = A_ED.EMPL_RCD
          AND A_ED.EFFDT <= SYSDATE)
    AND A.EFFSEQ =
        (SELECT MAX(A_ES.EFFSEQ) FROM PS_JOB A_ES
        WHERE A.EMPLID = A_ES.EMPLID
          AND A.EMPL_RCD = A_ES.EMPL_RCD
          AND A.EFFDT = A_ES.EFFDT) )               !MXR      03/03/2010
     !AND A.EMPLID = B.SSN		!GEX_SEC_REENG TCSXSSS 05/11/2015
     !AND A.EMPLID = B.EMPLID		!GEX_SEC_REENG TCSXSSS 05/11/2015
     !AND A.EMPL_RCD = B.EMPL_RCD !GEX_SEC_REENG TCSXSSS 05/11/2015
     AND C.ACCT_CD = A.ACCT_CD
     AND C.EFFDT =
        (SELECT MAX(C_ED.EFFDT) FROM PS_GEX_ACCT_CD_TBL C_ED
        WHERE C.ACCT_CD = C_ED.ACCT_CD
          AND C_ED.EFFDT <= A.EFFDT)
	 AND A.COMPANY <> A.PAYGROUP
	 AND A.EMPL_STATUS IN ('A','L','P','S')	  
     AND A.EMPLID = E.EMPLID
    ! AND A.EMPLID in ( '269964559','276683551')
ORDER BY 1

end-SELECT

do mail-weekly-roster

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure  get-emergency-contacts
#debug9 display 'get-emergency-contacts'

let $CONTACT_NAME   = 'N/A' 
let $CONTACT_PHONE  = 'N/A'        
let $RELATIONSHIP   = 'N/A' 

Begin-Select
F.CONTACT_NAME
F.PHONE
F.RELATIONSHIP
F.SAME_PHONE_EMPL 

  let $CONTACT_NAME   = &F.CONTACT_NAME 
  let $CONTACT_PHONE  = &F.PHONE        
  let $RELATIONSHIP   = &F.RELATIONSHIP 
  let $FieldName  = 'RELATIONSHIP'
  let $FieldValue = &F.RELATIONSHIP
  let $SmPhemplid = &F.SAME_PHONE_EMPL
  
  
  do Read-Translate-Table
  move $XLatLongName to $RELATIONSHIP

From PS_EMERGENCY_CNTCT F
Where F.EMPLID = &A.EMPLID
AND F.PRIMARY_CONTACT = 'Y'

End-Select

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure  mail-weekly-roster
#debug9 display 'mail-weekly-roster'

close 1

let $to_list = ' '

Begin-Select

GEX_EMAIL_ADDR1.DEPTID
GEX_EMAIL_ADDR1.EMAILID

   do create-to-list

From  SYSADM.PS_GEX_EMAIL_ADDR GEX_EMAIL_ADDR1
Where GEX_EMAIL_ADDR1.DEPTID      = &GEX_EMAIL_ADDR.DEPTID
And  RTRIM(GEX_EMAIL_ADDR1.GEX_EMAILTYPE, ' ') in ('RSTR','ALL')

End-Select

do send-it           

do openfile 
let #dpt_count = 0 

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure  create-to-list
#debug9 display 'create-to-list'

   let $to_list = $to_list || &GEX_EMAIL_ADDR1.EMAILID || ';'

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure  send-it
#debug9 display 'send-it'

let $TEXT_ID = $ReportID || '_SUBJ' 
do weekly-roster-verbiage
let $subject = &A.HR_SSTEXT_TEXT || $DEPTID

let $enter = chr(10)

let $TEXT_ID = $ReportID || '_BODY' 
do weekly-roster-verbiage

let $body_txt = &A.HR_SSTEXT_TEXT 

! Commented by Ujwal 20161223 - Begin
!let $mail-cmd = 'psmail -TO"'||$to_list||'" -SUBJECT"'||$subject||'" -BODY"'||$body_txt||'" -FILE"'||$fileout
! Commented by Ujwal 20161223 - End

! Added by Ujwal 20161223 - Start
let $mail-cmd = 'psmail -TO"'||$to_list||'" -FROM"pshrprd_pshrproddb1@gianteagle.com" -SUBJECT"'||$subject||'" -BODY"'||$body_txt||'" -FILE"'||$fileout||'"'
show 'mail comand: ' $mail-cmd
! Added by Ujwal 20161223 - End

CALL SYSTEM USING $mail-cmd #Status 

end-procedure
!***********************************************************************
!***********************************************************************
begin-procedure  weekly-roster-verbiage
#debug9 display 'weekly-roster-verbiage'

Begin-Select
A.HR_SSTEXT_TEXT

 from ps_HR_SSTEXT_TEXT A 
 WHERE A.OBJECTOWNERID = 'HHR' 
 AND A.HR_SSTEXT_SUB_ID = 'GEX' 
 AND A.TEXT_ID = $TEXT_ID 
 AND A.EFFDT = (SELECT MAX(B.EFFDT) FROM PS_HR_SSTEXT_EFFDT B 
 WHERE B.OBJECTOWNERID = A.OBJECTOWNERID 
 AND B.HR_SSTEXT_SUB_ID = A.HR_SSTEXT_SUB_ID 
 AND B.TEXT_ID = A.TEXT_ID AND B.EFFDT <= SYSDATE)

End-Select
 
end-procedure

!*********************************************************************** 
!*********************************************************************** 
Begin-procedure Write-Header
#debug9 show 'Write-Header'

  Let $deptid= &GEX_EMAIL_ADDR.DEPTID
  Write 1 from $newline
  let $Deptid = '="' || edit($Deptid,'0000') || '"'
  string 'Deptid :' $Deptid BY $DELIM INTO $dept
  WRITE 1 FROM $dept
  String  'EMPLOYEE ID' 'NAME' 'ADDRESS 1' 'ADDRESS 2' 'CITY' 'STATE' 'POSTAL' 'PHONE' 'ACCT DESCR' 
  'UNION CODE' 'CONTACT NAME' 'CONTACT PHONE' 'RELATIONSHIP' by $delim into $gexhr400  
  Write 1 from $gexhr400
  Write 1 from $newline
   
do Reset-Variable

end-procedure
!*********************************************************************** 
!*********************************************************************** 
Begin-procedure Write-Record
#debug9 show 'Write-Record'
 IF $SmPhemplid = 'Y'                     !ISDVMXR
   LET $CONTACT_PHONE  = $PHONE
 END-IF                                   !ISDVMXR
 
STRING $emplid $Name $Address1 $Address2 $CITY $STATE $POSTAL $PHONE $ACCT_DESCR $UNION_CD $CONTACT_NAME $CONTACT_PHONE $RELATIONSHIP BY $DELIM INTO $gexhr400
WRITE 1 FROM $gexhr400 

do Reset-Variable

end-procedure
!***********************************************************************
!***********************************************************************
Begin-Procedure Reset-Variable
#debug9 Show 'Reset-Variable'

Let $Emplid 		   =  ''
Let $First_Name 	 =  ''
Let $Last_Name 		 =  ''
Let $Middle_Name 	 =  '' 
Let $Address1 		 =  '' 
Let $Address2 		 =  '' 
Let $City 		     =  '' 
Let $State 		     =  '' 
Let $Postal		     =  '' 
Let $PHONE 	       =  '' 
Let $ACCT_CD 	     =  '' 
Let $ACCT_DESCR 	 =  '' 
Let $UNION_CD 		 =  '' 
Let $CONTACT_NAME  =  '' 
Let $CONTACT_PHONE =  '' 
Let $RELATIONSHIP  =  '' 
Let $gexhr400  =  '' 
LET $SmPhemplid = ''


End-Procedure  Reset-Variable
!***********************************************************************
!***********************************************************************
Begin-Procedure Select-Deptid-Parameters
#debug9 Show 'Select-Deptid-Parameters'

Begin-Select

DISTINCT(GEX_EMAIL_ADDR.DEPTID) &gex_email_addr.deptid

  do Write-Header
 	do Select-for-roster	

From  SYSADM.PS_GEX_EMAIL_ADDR GEX_EMAIL_ADDR

Where Rtrim(GEX_EMAIL_ADDR.DEPTID, ' ') != ' ' 
And  RTRIM(GEX_EMAIL_ADDR.GEX_EMAILTYPE, ' ') in ('RSTR','ALL')

End-Select

close 1 

End-Procedure
!***********************************************************************
!***********************************************************************
#include 'reset.sqc'        ! Reset printer
#include 'curdttim.sqc'     ! Current Date and Time
#Include 'datetime.sqc'     ! Routines for date and time formatting
#Include 'number.sqc'       !Routines to format numbers
#include 'getlocnm.sqc'     !Get-Location-Name procedure
#Include 'stdapi.sqc'       !Routines to Update Run Status
#include 'getdptnm.sqc'     !Get-Department-Name procedure
#include 'getjobtl.sqc'     !Get-Job-Title procedure
#include 'readxlat.sqc'     !Read-Translate-Table procedure
#Include 'getposnm.sqc'     !Get-Position-Title
