!***********************************************************************
!  GEXPL011:  Terminations List                                        *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXPL011:  	Terminations List                                    *
!                                                                      *
! Narrative:	Report of job actions for a specified time period,   *
!                 company, deptid, and union code.                     *
!                                                                      *
! #Debugx Used:	#debug9 paragraph trace                              *
!			#debug8 key variable values                          *
!			#debug7 data returned from sql calls                 *
!                                                                      *
! SQL Tables:     PS_PAY_CAL_BAL_ID                                    *
!			PS_JOB	                                         *
!			PS_EMPLOYMENT                                        *
!			PS_PERSONAL_DATA                                     *
!                                                                      *
! Written by:	John Dorsey-SoftLink Inc.  6-11-98                   *
!                                                                      *
! Normally Run:	Monthly                                              *
!                                                                      *
! Prerequisite: 	None                                                 *
!                                                                      *
! Control Parms:	FOR WHERE CLAUSE:                                    *
!			  Multiple Company Division Codes                    *
!			  Multiple Companies                                 *
!			  Multiple Actions                                   *
!			  From Date                                          *
!			  Thru Date                                          *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!ID#		INITIALS	DATE		DESCRIPTION OF THE CHANGE          *
!***********************************************************************
!                                                                      *
!           JWD		06/11/98    Cloned PER015 and created GEXPL011 *
!                                                                      *
!           JDH         12/10/98    Added SQRW run control logic.      *
!                                   Added logic to populate the from   *
!                                    and thru date parameters with the *
!                                    begin date and end date of the    *
!                                    month of the last confirmed pay   *
!                                    end date.                         *
!                                                                      *
!           JDH         01/15/99    Added company division parameter.  *
!                                   Removed union code parameter.      *
!                                   Removed deptid parameter.          *
!                                   Changed program to include         *
!                                    setup01.sqc instead of setup31.sqc*
!                                   Removed last maintenance date.     *
!                                                                      *
!	    SXK         10/21/99    Modified to have union from job_labor*
!         JNB         03/10/2000  Changed so that program retrieves    *
!                                 department descr.                    *  
!         CJH         12/18/2000  Sort by Company then Action for COD  *
!                                                                      *
!         PSR         08/12/2002  Modified UNION_CD FROM JOB_LABOR     * 
!                                 TO JOB - Upgrade 8.3                 *
!  GEX-CXB 	      10/05/2007   No table structure chnaged 9.0.
!  GEX-MXT        04/24/2008 Change to print correct Action description*
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and page-size initialization


#define #x000_col_union_cd	  1
#define #x000_col_eff_dt	 16
#define #x000_col_action_dt	 36
#define #x000_col_name		 56
#define #x000_col_emplid	 96
#define #x000_col_empl_status	117

#define #x000_col_selection_criteria_a 	2
#define #x000_col_selection_criteria_b 	5


begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
  date-time () HH:MI:SS &timeEnded
  date-time () MM/DD/YYYY &dateEnded
  show 'Report Ended at ' &timeEnded ' on ' &dateEnded
end-report


begin-heading 7
  if $Action <> $priorAction
    !GEX-MXT modified for getting Action Descr from setup table PS_ACTION_TBL instead of ps_xlatitem-Begin
    !move 'ACTION'  to $FieldName
    !move $Action   to $FieldValue
    !do Read-Translate-Table
    !move $XlatLongName to $ActionName  !for use in Heading
    
    do Get-Action                            
    move $Action_DescrShort to $ActionName
    !GEX-MXT modified for getting Action Descr from setup table PS_ACTION_TBL instead of ps_xlatitem-End
    move $Action to $priorAction
  end-if
  
  if $x000_page0_flag = 'Y'
    let $ReportTitle = 'JOB ACTION LIST'
    let $x000_page0_flag = 'N'
  else
    let $ReportTitle = $ActionName || ' LIST'
  end-if

 #Include 'stdhdg02.sqc'

  print ':'			            (3,8)

  LET $YEAR4 = '1'
  do Format-DateTime($FromDate, $X000_REPORT_HEADING_FROMDATE ,{DEFDATE}, '', '')

  LET $YEAR4 = '1'
  do Format-DateTime($ThruDate, $X000_REPORT_HEADING_THRUDATE ,{DEFDATE}, '', '')

  let $x000_temp_out = 'From '  || $X000_REPORT_HEADING_FROMDATE ||
                       ' Thru ' || $X000_REPORT_HEADING_THRUDATE 

  print $x000_temp_out		(3,) center 

  let $BU = 'COMMN'  !jnb 03/10/2000

  print 'Paygroup:'             (4,1)
  print $paygroup               (4,11)

  do Get-Department-Name
  print 'Department:'		(5,1)
  print $deptid			(5,13)
  print $deptname		(5,19)

  print 'Union'			(+2,{#x000_col_union_cd})
  print 'Eff'			(0,{#x000_col_eff_dt})
  print 'Action'			(0,{#x000_col_action_dt})
  print 'Empl'			(0,{#x000_col_empl_status})

  print 'Code'		     	(+1,{#x000_col_union_cd})
  print 'Date'			(0,{#x000_col_eff_dt})
  print 'Date'			(0,{#x000_col_action_dt})
  print 'Name'			(0,{#x000_col_name})	
  print 'Emplid'		(0,{#x000_col_emplid})
  print 'Status'		(0,{#x000_col_empl_status})	
end-heading


begin-procedure Init-Report
#debug9 Show 'Init-Report'
  do Stdapi-Init

  let $x000_new_page_flag = 'N'

  let $ReportID = 'GEXPL011'
  let $Country  = 'USA'

  show '$ReportID='    $ReportID 
  show '$ReportTitle=' $ReportTitle
  show '$ReportDate='  $ReportDate
  show '$ReportTime='  $ReportTime

  Let $AsOfDate = $AsOfToday

  Let $GEXXX900_Company_Alias  = 'C.COMPANY'                           
  Let $GEXXX907_DIV_CD_Alias   = 'GDT.GEX_COMPANY_DIV_CD'

  if $prcs_process_instance = ''
    do Ask-From-Thru-Date
    do Ask-Actions
    do P015-SQRW-Run-Controls
  else
    do Select-Parameters
    Do GEXXX900-Select-Company-Parameters 
    Do GEXXX907-Select-DIV-CD-Parameters
  end-if

  If Rtrim($Answer,' ') = 'A' Or
     Rtrim($Answer,' ') = ''
    Do P150-Get-Last-Pay-End-Dt
    Let $FromDate = $first_pay_begin_dt
    Let $ThruDate = $last_pay_end_dt
    Show ' '
    Show 'This report will contain data for the pay period beginning '
    Show $first_pay_begin_dt ' and ending ' $last_pay_end_dt
    Show ' '
  End-If

  If $ActionString = ''''''
    Let $INCLUDE_ACTION_CRITERIA = '1=1'
    Let $INCLUDE_ACTION_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $INCLUDE_ACTION_CRITERIA = 'C.ACTION IN (' || $ActionString || ')'
    Let $INCLUDE_ACTION_DISPLAY_CRITERIA = $INCLUDE_ACTION_CRITERIA
  End-If

  date-time () HH:MI:SS &timeBegan
  date-time () MM/DD/YYYY &dateBegan
  show 'Report Began at ' &timeBegan ' on ' &dateBegan
!SXK 10/21/99 Changed from b.UNION_CD
! CJH - 12/18/2000 - change sort order for COD
!  let $X000_ORDER_BY = 'C.ACTION, C.COMPANY, C.DEPTID, C.UNION_CD, C.EFFDT, A.NAME'
  let $X000_ORDER_BY = 'C.COMPANY, C.PAYGROUP, C.ACTION, C.DEPTID, C.UNION_CD, C.EFFDT, A.NAME'
! CJH _ 12/18/2000 - end
  let $priorAction = 'initvalue'	!set a value to force xlat read for action

  do P130-Print-Cover-Page
end-procedure


begin-procedure Get-Values		! called from Select-Parameters
#debug9 Show 'Get-Values'
  let $language_cd = $prcs_language_cd
  do Get-From-Thru-Date
  do Get-Actions
end-procedure


begin-procedure P015-SQRW-Run-Controls
#debug9 Show 'P015-SQRW-Run-Controls'
  Let $DivCdString = ''''
  Display 'Enter Company Division Code or leave blank to exit.'
  While 1=1
    Input $In-DivCd Maxlen=3 'Company Division Code'
    Uppercase $In-DivCd
    If Rtrim($In-DivCd, ' ') = ''
      Concat '''' With $DivCdString
      Break
    End-If
    If $DivCdString <> ''''
      Concat ''',''' With $DivCdString
    End-If
    Concat $In-DivCd With $DivCdString
  End-While

  If $DivCdString = ''''''
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = '1=1'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX907_INCLUDE_DIV_CD_CRITERIA = $GEXXX907_Div_CD_Alias || ' In (' || $DivCdString || ')'
    Let $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA = $GEXXX907_INCLUDE_DIV_CD_CRITERIA
  End-If


  Let $CompanyString = ''''
  Display 'Enter Company or leave blank to exit.'
  While 1=1
    Input $In-Company Maxlen=3 'Company'
    Uppercase $In-Company
    If Rtrim($In-Company, ' ') = ''
      Concat '''' With $CompanyString
      Break
    End-If
    If $CompanyString <> ''''
      Concat ''',''' With $CompanyString
    End-If
    Concat $In-Company With $CompanyString
  End-While

  If $CompanyString = ''''''
    Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = '1=1'
    Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA = 'ALL'
  Else
    Let $GEXXX900_INCLUDE_COMPANY_CRITERIA = $GEXXX900_Company_Alias || ' In (' || $CompanyString || ')'
    Let $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA = $GEXXX900_INCLUDE_COMPANY_CRITERIA
  End-If
end-procedure


begin-procedure P130-Print-Cover-Page
#debug9 Show 'P130-Print-Cover-Page'
  print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'        (+5,{#x000_col_selection_criteria_a})
  print '$Prcs_OPRID          ='                              (+1,{#x000_col_selection_criteria_b})
  print $Prcs_OPRID                                           (0,+2)
  print '$PRCS_RUN_CNTL_ID    ='                              (+1,{#x000_col_selection_criteria_b})
  print $PRCS_RUN_CNTL_ID                                     (0,+2)

  print 'SELECTION CRITERIA FOR THIS REPORT RUN:'             (+5,{#x000_col_selection_criteria_a})
  print '$INCLUDE_ACTION_DISPLAY_CRITERIA                ='   (+1,{#x000_col_selection_criteria_b})
  print $INCLUDE_ACTION_DISPLAY_CRITERIA				  (0,+2)
  print '$GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA      ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX900_INCLUDE_COMPANY_DISPLAY_CRITERIA            (0,+2)
  print '$GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA       ='   (+1,{#x000_col_selection_criteria_b})
  print $GEXXX907_INCLUDE_DIV_CD_DISPLAY_CRITERIA 	        (0,+2)

  print 'FROM DATE:'                                          (+2,{#x000_col_selection_criteria_b})
  print $FromDate                                             (0,+2)
  print 'THRU DATE:'                                          (+1,{#x000_col_selection_criteria_b})
  print $ThruDate                                             (0,+2)

  print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,{#x000_col_selection_criteria_a})
  print '$X000_ORDER_BY                                  ='   (+1,{#x000_col_selection_criteria_b})
  print $X000_ORDER_BY 	                                      (0,+2)

  let $x000_page0_flag = 'Y'

  let #page-count = 0
end-procedure


Begin-Procedure P150-Get-Last-Pay-End-Dt
#debug9 Show 'P150-Get-Last-Pay-End-Dt'
Begin-Select
Max(pay_end_dt) &last_pay_end_dt

  Let $last_pay_end_dt = &last_pay_end_dt
  Do P160-Get-First-Pay-End-Dt

From   ps_pay_calendar pcal

Where  pcal.company           = 'GEI'
And    pcal.paygroup          = 'RET'

And    pcal.pay_end_dt       <= $AsOfDate

And    pcal.pay_period        =
      (Select Max(pay_period)
       From   ps_pay_calendar
       Where  company         = 'GEI'
       And    paygroup        = 'RET'
       And    To_Char(pay_end_dt,'YYYYMM')
                              = To_Char(pcal.pay_end_dt,'YYYYMM'))

And    pcal.pay_confirm_run   = 'Y'
End-Select
End-Procedure


Begin-Procedure P160-Get-First-Pay-End-Dt
#debug9 Show 'P160-Get-First-Pay-End-Dt'
Begin-Select
pay_begin_dt &first_pay_begin_dt
pay_end_dt   &first_pay_end_dt

  Let $first_pay_begin_dt = &first_pay_begin_dt
  Let $first_pay_end_dt   = &first_pay_end_dt

From   ps_pay_calendar

Where  company                 = 'GEI'
And    paygroup                = 'RET'
And    pay_end_dt              =
      (Select Max(pay_end_dt)
       From   ps_pay_calendar
       Where  company          = 'GEI'
       And    paygroup         = 'RET'
       And    pay_end_dt      <= $last_pay_end_dt
       And    pay_period       = '1'
       And    pay_confirm_run  = 'Y')
And    pay_confirm_run         = 'Y'
End-Select
End-Procedure


begin-procedure Process-Main
#debug9 Show 'Process-Main'
  LET $X000_FOUND_DATA_FLAG = 'N'
begin-SELECT
C.ACTION 	()	ON-BREAK LEVEL=1
                  PRINT=NEVER
                  SAVE=$x000_save_action

C.COMPANY	()	ON-BREAK LEVEL=2
                  PRINT=NEVER
                  AFTER=After-Company
                  SAVE=$x000_save_company

C.PAYGROUP      ()      ON-BREAK LEVEL=3
                  PRINT=NEVER
                  SAVE=$x000_save_paygroup

C.DEPTID 	()	ON-BREAK LEVEL=4
                  PRINT=NEVER
                  BEFORE=Before-Dept
                  AFTER=After-Dept
                  SAVE=$x000_save_deptid
C.EFFDT
C.EMPLID
C.EMPL_RCD
C.ACTION_DT
C.EMPL_STATUS
A.NAME
!SXK 10/21/99 Modified from b.union_cd
C.UNION_CD

  LET $X000_FOUND_DATA_FLAG = 'Y'

  let $action  = &c.action
  let $company = &c.company
  let $paygroup = &c.paygroup
  let $deptid  = &c.deptid

  add 1 to #x000_dept_count

  LET $YEAR4 = 1
  do Format-DateTime(&C.EffDt, $effdate, {DEFDATE}, '', '')

  LET $YEAR4 = 1
  do Format-DateTime(&C.Action_Dt, $actiondate, {DEFDATE}, '', '')

  Do Get-Action-Reason
  Do P200-Print-Detail-Line

FROM	 PS_GEX_DEPT_TBL  GDT,
       PS_PERSONAL_DATA A,
!SXK 10/21/1999 Begin
!       PS_EMPLOYMENT    B,
!SXK 10/21/1999 End
       PS_JOB           C

WHERE  A.EMPLID            = C.EMPLID
!SXK 10/21/1999 Begin
!AND    B.EMPLID            = C.EMPLID
!AND    B.EMPL_RCD         = C.EMPL_RCD
AND    C.EFFDT       BETWEEN $FromDate AND $ThruDate

AND    GDT.DEPTID          = C.DEPTID 

AND    GDT.EFFDT           =
      (SELECT MAX(EFFDT)
       FROM   PS_GEX_DEPT_TBL
       WHERE  DEPTID       = GDT.DEPTID
       AND    EFFDT       <= $ThruDate)

AND    GDT.SEQUENCE_NUMBER =
      (SELECT MAX(SEQUENCE_NUMBER)
       FROM   PS_GEX_DEPT_TBL
       WHERE  DEPTID       = GDT.DEPTID
       AND    EFFDT        = GDT.EFFDT)

AND   [$GEXXX900_INCLUDE_COMPANY_CRITERIA]
AND   [$GEXXX907_INCLUDE_DIV_CD_CRITERIA]
AND   [$INCLUDE_ACTION_CRITERIA]

ORDER BY [$X000_ORDER_BY]
end-SELECT

  If $X000_FOUND_DATA_FLAG = 'N'
    new-page
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If
end-procedure


begin-procedure P200-Print-Detail-Line
#debug9 Show 'P200-Print-Detail-Line'
!SXK 10/21/99 Changed from b.union_cd
  print &C.UNION_CD		(+1,{#x000_col_union_cd})
  print $effdate			(0,{#x000_col_eff_dt})
  print $actiondate		(0,{#x000_col_action_dt})
  print &a.name	      	(0,{#x000_col_name},30)	
  print &c.emplid		      (0,{#x000_col_emplid}) !edit xxx-xx-xxxx
  print &c.empl_status		(0,{#x000_col_empl_status})
end-procedure


begin-procedure Before-Dept
#debug9 Show 'Before-Dept'
  new-page
end-procedure


begin-procedure After-Company
#debug9 Show 'After-Company'
  let $x000_out = 'Company ' || $x000_save_company || ' Count'
  print $x000_out						(+2,12)
  print #x000_company_count				(0,35) edit 9,999,999

  let #x000_company_count = 0
end-procedure


begin-procedure After-Dept
#debug9 Show 'After-Dept'
  let $x000_out = 'Department ' || $x000_save_deptid || ' Count'
  print $x000_out						(+2,12)
  print #x000_dept_count				(0,35) edit 9,999,999

  add #x000_dept_count to #x000_company_count
  let #x000_dept_count = 0
end-procedure

!********************************************************************************
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'gexxx954.sqc'  !Get Action values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askftd.sqc'    !From Thru Date input
#include 'askactn.sqc'   !Action input

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'getempnm.sqc'  !Get-Employee-Name procedure
#Include 'getactrs.sqc'  !Get-Action-Reason procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status

#include 'gexxx900.sqc'  !Get company multiple row table
#include 'gexxx907.sqc'  !Get company division code multiple row table
