!***********************************************************************
!  GEXBN828:  This Audit creates a report of individuals that currently*
!           have open events prior to actual hours programs executing  *
!	      The risk in leaving these employee's events open is, Ben   *
!             admin might change employee's benefit program as a result*
!	      of open event, causes ripples through out the system       *
!                                                                      *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXBN828:  		Open Events Report prior to Actual Hours SQRs  * 
!                                                                      *  
! SQL Tables:		pay_calendar                                   *
!                       bas_partic                                     *
!                       ben_prog_partic                                *
!                       gex_sqr_process_tbl                            *
!                                                                      *
! Written by:		Sreeni Kutam                                   *       
!                                                                      *
! Normally Run:		Monthly                                         *
!                                                                      *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
!	INITIALS	DATE		DESCRIPTION OF THE CHANGE      *
!***********************************************************************
!     JNB         06/29/1999  This is cloned from gexbn806   *
!                             Changed gexbnmdt to gexbnmda   *
!                             to obtain the last pay period  *
!                             from "A" calendar as this job  *
!                             runs in split monthly schedule *                      
!     PLN          12/11/00  Changed the sort to order by BP           *
!                             so COD can administer.                   *
!***********************************************************************

#Include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization


Begin-Heading 10
#debug9 Show 'Begin-Heading'

#Include 'stdhdg02.sqc'

  Let $X000_temp_out = 'Sorted by ' || $Sort_Display
!  Print $X000_temp_out         (3,)  center

  Let $X000_temp_out = 'Benefits Effective Date: ' || $X000_REPORT_HEADING_ASOFDATE
  Print $X000_temp_out         (4,)  center

  Position (+1)
  Print '**** Note: The following employees have open events that need    ' () center
  position (+1)
  Print '****       to be processed manually in order for the employee to ' () center
  position (+1)
  Print '****       be evaluated under the correct benefit program          ' () center

  Print 'EMPLID'               (+2,001)
  Print 'NAME'                 (+0,015)
  Print 'EVENT ID'             (+0,045)
  Print 'EVENT DATE'           (+0,055)
  Print 'BENEFIT PROGRAM'      (+0,075)

  Print '-'                    (+1,1,150) Fill

End-Heading


Begin-Report
#debug9 Show 'Begin-Report'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Do P100-Start
  Do P200-Main-Process
  Do P300-Finish

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Show 'Successful end of report'
End-Report


Begin-Procedure P100-Start
#debug9 Show 'P100-Start'

  Let $ReportID    = 'GEXBN828'
  Let $ReportTitle = 'OPEN EVENTS PRIOR TO ACTUAL HOURS SQRs (Split Month)'

  Show '$ReportID='    $ReportID
  Show '$ReportTitle=' $ReportTitle
  Show '$ReportDate='  $ReportDate
  Show '$ReportTime='  $ReportTime

  let $reportdate_mm = substr($reportdate,1,2)
  let $reportdate_dd = substr($reportdate,4,2)
  let $reportdate_yy = substr($reportdate,7,2)
  do MakeYear4Digits ($reportdate_yy)

  let $reportdate_ccyyyy = $reportdate_mm||'/'||$reportdate_dd||'/'||$reportdate_yy
  do format-datetime($reportdate_ccyyyy,$reportdate_ccyy,{DEFMDY},'','NATIVE') 

  do edit-pay-calendar

  Let $AsOfDate = $effdt_dbf
  Let $X000_WHERE_SELECT_ASOFDATE = $effdt_Dbf
  If Rtrim ($effdt_dbf, ' ') = ''
     Let $X000_WHERE_SELECT_ASOFDATE = $AsOfToday
  End-If

  Do Format-DateTime($X000_WHERE_SELECT_ASOFDATE, $X000_REPORT_HEADING_ASOFDATE, {DEFDATE}, '', '')

!PLN 2/11/2000 BEGIN 
! Let $X000_ORDER_BY = 'Order by bas.Emplid, bas.Benefit_Program'
! Let $Sort_Display = 'Emplid, Benefit Program'
  Let $X000_ORDER_BY = 'Order by bas.Benefit_Program, bas.Emplid'
  Let $Sort_Display = 'Benefit Program, Emplid'
!PLN 2/11/2000 END





  Show '$X000_WHERE_SELECT_ASOFDATE ='   $X000_WHERE_SELECT_ASOFDATE

!  Do P150-Print-Cover-Page

End-Procedure

begin-procedure P150-Print-Cover-Page
#debug9 Show 'P150-Print-Cover-Page'

  Print 'RUN CONTROL INFORMATION FOR THIS REPORT RUN:'            (+5,1)
  Print '$Prcs_OPRID          ='                                  (+2,5)
  Print $Prcs_OPRID                                               (0,+2)
  Print '$PRCS_RUN_CNTL_ID    ='                                  (+1,5)
  Print $PRCS_RUN_CNTL_ID                                         (0,+2)

  Print 'SELECTION CRITERIA FOR THIS REPORT RUN:'                 (+5,2)

  Print 'Pay End Dt :'                                        (+2,5)
  Print $X000_REPORT_HEADING_ASOFDATE                         (0,+2)
 
  Print 'SORT ORDER FOR THIS REPORT RUN:'                     (+5,2)
  Print $X000_ORDER_BY                                        (+2,5)

  Let #PAGE-COUNT = 0
  NEW-PAGE
  Let #PAGE-COUNT = 1
End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'

  Let $Data-Found-Flag = 'N'
 
Begin-Select
BAS.EMPLID (+1,1)
PER.NAME (,15)
BAS.EVENT_ID (,45)
BAS.EVENT_DT (,55)
BAS.BENEFIT_PROGRAM (,75)

  Let $Data-Found-Flag = 'Y'

From   PS_BAS_PARTIC BAS,
       PS_BEN_PROG_PARTIC BEN,
       PS_PERSONAL_DATA PER
Where BAS.EVENT_STATUS = 'O'
  AND BAS.EMPLID = BEN.EMPLID
  AND BAS.EMPL_RCD = BEN.EMPL_RCD
  AND BAS.EMPLID = PER.EMPLID
  AND BAS.JOB_EFFDT = (select max(job_effdt)
                         from ps_bas_partic
                        where emplid = BAS.EMPLID
                          and empl_rcd = BAS.EMPL_RCD
                          and job_effdt <= $effdt_dbf)
  AND BAS.JOB_EFFSEQ = (select max(job_effseq)
                          from ps_bas_partic
                         where emplid = BAS.EMPLID
                           and empl_rcd = BAS.EMPL_RCD
                           and job_effdt = BAS.JOB_EFFDT)
  AND BEN.EFFDT = (select max(effdt)
                     from ps_ben_prog_partic
                    where emplid = BEN.EMPLID
                      and empl_rcd = BEN.EMPL_RCD
                      and effdt <= $effdt_dbf)
  AND BAS.BENEFIT_PROGRAM not in (select benefit_program
                                    from ps_ben_prog_partic
                                   where emplid = BEN.EMPLID
                                     and empl_rcd = BEN.EMPL_RCD
                                     and effdt = ben.effdt)
!  AND BAS.BENEFIT_PROGRAM in (select BENEFIT_PROGRAM
!                                FROM PS_GEX_SQR_PROCESS)
[$X000_ORDER_BY]
End-Select
  If $Data-Found-Flag = 'N'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If
End-Procedure

Begin-Procedure P300-Finish
#debug9 Show 'P300-Finish'
!
End-Procedure


#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'askaod.sqc'    !Ask for As-Of-Date parameter
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'datemath.sqc'  !Performs Date Calculations
#Include 'number.sqc'    !Routines to format numbers
#Include 'reset.sqc'     !Reset printer Procedure
#Include 'getbalid.sqc'  !Get Calendar Year ID
! JNB 06/29/1999  begin
#include 'gexbnmda.sqc'  !Gets right run control date
!#include 'gexbnmdt.sqc'  !Gets right run control date
#include 'getcodta.sqc'  !Gets company data
