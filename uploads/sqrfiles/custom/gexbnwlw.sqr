!***********************************************************************
! GEXBNWLW:  Wellness Incentive Weekly                                 *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXbnwlsn : Wellness Incentive Load                                  *
!                                                                      *
! Narrative:  As part of the 2013 Benefits Open Enrollment we need to  *
!             load the Wellness Incentives pay for Team Members that   *
!             will be paid in their pay check. Team Members & Spouses  *
!             that pass 3 out of 5 medical tests will be sent in       *
!             Highmark file that will needed to be loaded in the payroll
!                                                                      *
!                                                                      *
! SQL Tables:           PS_GEX_WELLNS_LOAD                             *
!                       PS_GEX_WLNS_SP_DP                              *
!                       PS_JOB                                         *
!                       PS_HEALTH_BENEFIT                              *
!                       PS_BEN_PROG_PARTIC                             *
!                       PS_BENEF_PLAN_TBL                              *
!                       PS_PERSONAL_DATA                               *
!                                                                      *
! Written by:           Vahini Katta                                   *
!                                                                      *
! Normally Run:         December, July                                 *
!                                                                      *
! Control Parms:        AsOfDate                                       *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! GEX Modifications                                                    *
! GEXBN_848_P143186_01 2013-11-12 Vahini Katta                         *
! Initial Creation                                                     *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Landscape)


#define #column1     2
#define #column2    13
#define #column3    45

Begin-setup

Declare-variable

Date $From_Date
Date $Thru_Date
Date $AsofToday

End-Declare
End-Setup

Begin-Report
#debug9 Show 'Begin-Report'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc
  
  show ' '
  display 'Start Run Time: ' noline
  show $AsofNow
  Do Initialization
  Do Open-File
  Do Get-Pay-End-Dt
  Do Write_Header
  Do Process-Enrollments
  Do Process-Terminations
  Do Close-File
  show ' '
  display 'End Run Time: ' noline
  show $AsofNow
  do Stdapi-Term
    
End-Report

!-----------------------------------------------------------------------
! Function:    Initialization                                          -
! Description: Initialization                                          -
! Called By:   Report-Lost-Covrg                                       -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Initialization
#debug9 Show 'Initialization'
   
  Let $ReportID      = 'GEXBNWLW'
  Let $ReportTitle   = 'Wellness Incentive Load'
  Let $delim = ','
    
  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show '$ReportDate  = ' $ReportDate
  Show '$ReportTime  = ' $ReportTime
    
  If $prcs_process_instance = ''
    Do SQRW-Run-Controls
  Else
    Do Process-Scheduler-Run-Controls
  End-if
 
  If isnull($AsofDate)
     Let $AsofDate = $AsOfToday
  End-If
  
  show '$SlctPlanCriteria   :' $SlctPlanCriteria
  show '$SlctPlanCriteria1  :' $SlctPlanCriteria1
  show '$SlctPlanCriteria2  :' $SlctPlanCriteria2
  show '$SlctBenCriteria    :' $SlctBenCriteria
  show '$SlctBenCriteria1   :' $SlctBenCriteria1
  show '$SlctBenCriteria2   :' $SlctBenCriteria2
  show '$AsofDate           :' $AsofDate
  
End-Procedure

!-----------------------------------------------------------------------
! Function:    SQRW-Run-Controls                                       -
! Description: SQRW-Run-Controls                                       -
! Called By:   Initialization                                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure SQRW-Run-Controls
#debug9 Show 'SQRW-Run-Controls'

  Do Ask-As-Of-Date
 
  input $From_Date maxlen=10 type=date 'Enter From Date'
  input $Thru_Date maxlen=10 type=date 'Enter Thru Date'
  input #Wellness_Amt maxlen=10 type=number 'Enter the Amount'
  input $File_Path maxlen=100 type=char 'Enter File Path'
  input $BenCriteria maxlen=100 type=char 'Enter the Benefit Program enclosed in quotes. Multiple Ben Program should be separated by commas'
  input $PlanCriteria maxlen=100 type=char 'Enter the  Plan type enclosed in quotes. Multiple Ben Program should be separated by commas'
  
  show '$BenCriteria :' $BenCriteria
  show '$PlanCriteria:' $PlanCriteria
  
  if isnull($BenCriteria)
    move '' to $SlctBenCriteria
  else
    let $SlctBenCriteria  = 'AND BAS.BENEFIT_PROGRAM IN (' || $BenCriteria || ')' 
  end-if 
  
  if isnull($PlanCriteria)
    move '' to $SlctPlanCriteria
  else
    let $SlctPlanCriteria  = 'AND HB1.PLAN_TYPE IN (' || $PlanCriteria || ')'
  end-if 
  
End-Procedure

!-----------------------------------------------------------------------
! Function:    Process-Scheduler-Run-Controls                          -
! Description: Select Values from Run Control                          -
! Called By:   Initialization                                          -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Process-Scheduler-Run-Controls
#debugd show 'Process-Scheduler-Run-Controls'

 show '$prcs_run_cntl_id = ' $prcs_run_cntl_id
 show '$prcs_oprid       = ' $prcs_oprid
 Do GEXRCBN1-SELECT-PARAMETERS

 Let $AsOfDate     = &GEX_RC_BEN.AsOfDate
 Let $File_Path    = &GEX_RC_BEN.FILENAME
 Let $From_Date    = &GEX_RC_BEN.FROMDATE
 Let $Thru_Date    = &GEX_RC_BEN.THRUDATE
 Let #Wellness_Amt = &GEX_RC_BEN.CONTRIBUTION_RATE
 
 If $From_Date = ''
   Let $From_Date = dateadd($AsofToday,'day', -7)
 End-if
   Show '$From_Date :'$From_Date

 If $Thru_Date = ''
   Let $Thru_Date = dateadd($AsofToday,'day', -1) 
 End-if
 Show '$Thru_Date    :' $Thru_Date
 show '$AsOfDate     :' $AsOfDate
 show '#Wellness_Amt :' #Wellness_Amt
 show '$File_Path    :' $File_Path

 move '' to $BenCriteria
 move '' to $PlanCriteria
 
BEGIN-SELECT
RB.BENEFIT_PROGRAM

    if isnull($BenCriteria)
       let $BenCriteria = $BenCriteria ||''''|| &RB.BENEFIT_PROGRAM || ''''
    else
       let $BenCriteria = $BenCriteria ||','||''''|| &RB.BENEFIT_PROGRAM || ''''
    end-if

FROM PS_GEX_RUN_BENPROG RB
WHERE RB.oprid       = $prcs_oprid
  AND RB.run_cntl_id = $prcs_run_cntl_id
END-SELECT

BEGIN-SELECT
RP.PLAN_TYPE

    if isnull($PlanCriteria)
       let $PlanCriteria = $PlanCriteria ||''''|| &RP.PLAN_TYPE || ''''
    else
       let $PlanCriteria = $PlanCriteria ||','||''''|| &RP.PLAN_TYPE || ''''
    end-if

FROM PS_GEX_RUN_PLNTYPE RP
WHERE RP.oprid       = $prcs_oprid
  AND RP.run_cntl_id = $prcs_run_cntl_id
END-SELECT

  if isnull($BenCriteria)
    move '' to $SlctBenCriteria
  else
    let $SlctBenCriteria   = 'AND B.BENEFIT_PROGRAM IN (' || $BenCriteria || ')' 
    let $SlctBenCriteria1  = 'AND BT.BENEFIT_PROGRAM IN (' || $BenCriteria || ')'
  end-if 
  
  if isnull($PlanCriteria)
    move '' to $SlctPlanCriteria
  else
    let $SlctPlanCriteria   = 'AND H.PLAN_TYPE IN (' || $PlanCriteria || ')'
    let $SlctPlanCriteria1  = 'AND HT.PLAN_TYPE IN (' || $PlanCriteria || ')'
  end-if 
  
  show '$SlctBenCriteria :' $SlctBenCriteria
  show '$SlctPlanCriteria:' $SlctPlanCriteria
  show ' '
  show '*** Run Control Parameters ***'
 
end-procedure Process-Scheduler-Run-Controls

!-----------------------------------------------------------------------
! Function:    Open-File                                               -
! Description: Opens Files                                             -
! Called By:   Begin_report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Open-File

  #ifdef NT   
   show '$prcs_run_cntl_id :' $prcs_run_cntl_id
    Let $File       = $File_Path  || Lower($ReportID) ||  '.csv'
  #else
    Let $File = '{OUTFILE}' || Lower($ReportID) || '.csv'
  #end-if 
   
   Show '$File :' $File
   Open $File As 1 For-Writing Record=1600:Vary Status=#filestat
    
   if (#filestat <> 0)
      let $Error-Message = 'PROGRAM ABORTED - Problem opening file : ' || $File
      show $Error-Message
      STOP
   end-if
   
End-Procedure Open-File

!-----------------------------------------------------------------------
! Function:    Write_Header                                            -
! Description: Writes the header row for both the files                -
! Called By:   Begin_report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Write_Header
        
 Write 1 from 'Emplid'		$delim 
             'Name'		$delim
             'Benefit Program'  $delim
             'Plan Type'        $delim
             'Coverage Elect'   $delim
             'Coverage Code'	$delim
             'Covrg Code Descr'	$delim
             'Message'
             
End-Procedure
 
!-----------------------------------------------------------------------
! Function:    Get-Pay-End-Dt                                          -
! Description: Get the current week pay end dt                         -
! Called By:   Begin-Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Pay-End-Dt
Begin-Select loops=1
P.PAY_BEGIN_DT &Prev_Pay_Begin_Dt,
P.PAY_BEGIN_DT+7 &Pay_Begin_Dt,
P.PAY_END_DT &Pay_End_Dt

   show '&Prev_Pay_Begin_Dt:' &Prev_Pay_Begin_Dt
   show '&Pay_Begin_Dt     :' &Pay_Begin_Dt
   show '&Pay_End_Dt       :' &Pay_End_Dt
   
FROM PS_PAY_CALENDAR P
WHERE P.COMPANY='GEI'
AND P.PAYGROUP='OFF'
AND P.PAY_END_DT=(SELECT MAX(P1.PAY_END_DT) FROM PS_PAY_CALENDAR P1
                   WHERE P1.COMPANY=P.COMPANY
                   AND P1.PAYGROUP=P.PAYGROUP
                   AND P1.PAY_CONFIRM_RUN='Y'
                   AND P1.PAY_OFF_CYCLE_CAL = 'N'
                   AND P1.PAY_END_DT<=SYSDATE)
AND P.PAY_OFF_CYCLE_CAL = 'N'    
End-Select
End-Procedure

!-----------------------------------------------------------------------
! Function:    Process-Enrollments                                     -
! Description: Check for the Corporate Benefit Program                 -
! Called By:   Process-Enrollments                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Process-Enrollments
   show '-----------------------------------------'
   show 'Enrollments'
   show '-----------------------------------------'
       
   do Initialize-Vars
   
Begin-SELECT
H.EMPLID
H.EMPL_RCD
H.COVRG_CD
H.COVERAGE_ELECT_DT
H.PLAN_TYPE
H.BENEFIT_PLAN
B.BENEFIT_PROGRAM
H.COVERAGE_ELECT

   show '-----------------------------------------'
   show '&H.EMPLID :' &H.EMPLID
   Move &H.EMPLID to $Emplid
   Move &H.EMPL_RCD to #Empl_Rcd
   Move &Pay_Begin_Dt to $Addl_Pay_Effdt
   Move &B.BENEFIT_PROGRAM to $Ben_Prog
   Move &H.PLAN_TYPE to $Plan_Type
   Move &H.COVERAGE_ELECT to $Covrg_Elect
   Move &H.COVRG_CD to $Covrg_cd
      
   do Check-Ben-Program
   show '$Ben_Prog_Found :' $Ben_Prog_Found
  if $Ben_Prog_Found = 'Y'
   do Get-Name
   
   Move 'WI1' to $Erncd
   do Check-Addl-Pay
   do Get-Covg-Cd-Descr
   if $Addl_Pay_Found='N' 
      Move 'Addl Pay for Wellness Incentive Inserted' to $Msg
      do Insert-Addl-Pay-Erncd
      do Insert-Addl-Pay-Effdt
      do Insert-Addl-Pay-Data
   else
     if &A.EARNINGS_END_DT<>''
      Move 'Addl Pay for Wellness Incentive Inserted' to $Msg
      do Insert-Addl-Pay-Effdt
      do Insert-Addl-Pay-Data
     else
        show 'Addl pay already found for the emplid'
        Move 'Addl Pay for Wellness Incentive exists' to $Msg
        do Write-Report
     End-if
   end-if
   
       do Check-SP-DP-Covrg
                        
       if $Covrg_Cd_Found = 'Y'
          Move 'WI2' to $Erncd
          do Get-Covg-Cd-Descr
          do Check-Addl-Pay
          if $Addl_Pay_Found='N'
             do Check-SP-DP-Record
             if $SP_DP_Found = 'N'
                Move 'Addl Pay for SP-DP Wellness Incentive Inserted' to $Msg
                do Insert-Addl-Pay-Erncd
                do Insert-Addl-Pay-Effdt
                do Insert-Addl-Pay-Data
             else
               Show 'SP/DP Record is found on the custom table for the emplid:' $Emplid
               Move 'SP/DP Record is found on the custom table for the emplid' to $MSG
               do Write-Report
             end-if   
          else
             if &A.EARNINGS_END_DT <> ''
                Move 'Addl Pay for SP-DP Wellness Incentive Inserted' to $Msg
                do Insert-Addl-Pay-Effdt
                do Insert-Addl-Pay-Data
             else
                show 'Addl pay already found for the emplid'
                Move 'Addl pay already found for the emplid' to $MSG
                do Write-Report
             End-if
          End-if 
      Else      
          Move 'No Spouse or Domestic Partner Coverage' to $MSG
          do Write-Report
      end-if
      show 'Spouse Covrg Terminated'
      if $Covrg_cd='1'
         Move 'WI2' to $Erncd
         do Get-Covg-Cd-Descr
         do Check-Addl-Pay
         if $Addl_Pay_Found='Y' and &A.EARNINGS_END_DT=''
           Move &Pay_End_Dt to $Addl_Pay_Effdt
           do Update-Addl-Pay-Data
           Move 'Wellness Incentive Ended for SP/DP' to $Msg
           show '$Msg:' $Msg
           do Write-Report
         end-if
      end-if
    else
        show 'Benefit program not on the run control'
        Move 'WI1' to $Erncd
        do Check-Addl-Pay
        if $Addl_Pay_Found='Y' and &A.EARNINGS_END_DT=''
         Move &Pay_End_Dt to $Addl_Pay_Effdt
         do Update-Addl-Pay-Data
         Move 'Wellness Incentive Ended for Employee' to $Msg
         do Write-Report
        End-if
        Move 'WI2' to $Erncd
        do Check-Addl-Pay
        if $Addl_Pay_Found='Y' and &A.EARNINGS_END_DT=''
         Move &Pay_End_Dt to $Addl_Pay_Effdt
         do Update-Addl-Pay-Data
         Move 'Wellness Incentive Ended for SP/DP' to $Msg
         show '$Msg:' $Msg
         do Write-Report
        End-if
    end-if  
      show '-----------------------------------------'  
         
FROM PS_HEALTH_BENEFIT H, 
     PS_BEN_PROG_PARTIC B,
     PS_BENEF_PLAN_TBL P
WHERE H.BENEFIT_PLAN=P.BENEFIT_PLAN
AND H.EMPLID=B.EMPLID
AND H.PLAN_TYPE=P.PLAN_TYPE            
AND P.EFFDT=(SELECT MAX(P1.EFFDT) FROM PS_BENEF_PLAN_TBL P1
             WHERE P1.PLAN_TYPE=P.PLAN_TYPE
             AND P1.BENEFIT_PLAN=P.BENEFIT_PLAN
             AND P1.EFFDT<=$AsofDate)
AND B.EFFDT=(SELECT MAX(B1.EFFDT) FROM PS_BEN_PROG_PARTIC B1
              WHERE B1.EMPLID=B.EMPLID
              AND B1.EMPL_RCD=B.EMPL_RCD
              AND B1.COBRA_EVENT_ID=B.COBRA_EVENT_ID
              AND B1.EFFDT<=$AsofDate)
!AND H.COVERAGE_ELECT_DT BETWEEN $From_Date AND $Thru_Date  
AND ((H.COVERAGE_ELECT_DT BETWEEN $From_Date AND $Thru_Date
     AND H.COVERAGE_BEGIN_DT < $Thru_Date)
     OR (H.COVERAGE_BEGIN_DT BETWEEN $From_Date AND $Thru_Date)) 
AND H.COVERAGE_ELECT='E'         
![$SlctBenCriteria]
[$SlctPlanCriteria]
End-Select
End-Procedure

!-----------------------------------------------------------------------
! Function:    Process-Terminations                                    -
! Description: Check for the Corporate Benefit Program                 -
! Called By:   Process-Terminations                                    -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Process-Terminations
   show '-----------------------------------------'
   show 'Terminations'
   show '-----------------------------------------'
      
   do Initialize-Vars
      
Begin-SELECT
HT.EMPLID
HT.EMPL_RCD
HT.COVRG_CD
HT.COVERAGE_ELECT_DT
HT.PLAN_TYPE
HT.BENEFIT_PLAN
HT.COVERAGE_ELECT
BT.BENEFIT_PROGRAM
   
   show '-----------------------------------------'
   show '&HT.EMPLID          :' &HT.EMPLID
   show '&HT.COVRG_CD        :' &HT.COVRG_CD
   show '&HT.BENEFIT_PLAN    :' &HT.BENEFIT_PLAN
   show '&HT.PLAN_TYPE       :' &HT.PLAN_TYPE
   show '&BT.BENEFIT_PROGRAM :' &BT.BENEFIT_PROGRAM
   
   Move &HT.EMPLID to $Emplid
   Move &HT.EMPL_RCD to #Empl_Rcd
   Move &Pay_End_Dt to $Addl_Pay_Effdt
   Move &BT.BENEFIT_PROGRAM to $Ben_Prog
   Move &HT.PLAN_TYPE to $Plan_Type
   Move &HT.COVERAGE_ELECT to $Covrg_Elect
   Move &HT.COVRG_CD to $Covrg_cd
   do Get-Name
   
   if &HT.PLAN_TYPE='15'
      do Check-Plan-Type-10-Exists
      Move &BP.BENEFIT_PROGRAM to $Ben_Prog
      do Check-Ben-Program
      show '$Ben_Prog_Found :' $Ben_Prog_Found
  
      if $Plan_Type_10_Exists ='N' OR ($Plan_Type_10_Exists ='Y' and $Ben_Prog_Found='N')
         Move 'WI1' to $Erncd
         do Check-Addl-Pay
            if $Addl_Pay_Found='Y' and &A.EARNINGS_END_DT=''
               do Update-Addl-Pay-Data
               Move 'Wellness Incentive Ended' to $Msg
               Show 'Wellness Incentive Ended for WI1'
            else
               Show 'No Additional Pay Record to update terminations'  
               Move 'No Additional Pay Record Found' to $Msg
            end-if
      else
          show 'Cannot terminate WI1 as coverage is still active for Plan type 10'      
      end-if      
   else
      Move 'WI1' to $Erncd
      do Check-Addl-Pay
      if $Addl_Pay_Found='Y' and &A.EARNINGS_END_DT=''
         do Update-Addl-Pay-Data
         Move 'Wellness Incentive Ended' to $Msg
         Show 'Wellness Incentive Ended for WI1'
      else
         Show 'No Additional Pay Record to update terminations'  
         Move 'No Additional Pay Record Found' to $Msg
      end-if
   End-if
      
   do Write-Report
   
   Move 'WI2'     to $Erncd
   do Check-Addl-Pay
   if $Addl_Pay_Found='Y' and &A.EARNINGS_END_DT=''
      do Update-Addl-Pay-Data
      Move 'Wellness Incentive Ended for SP/DP' to $Msg
      Show 'Wellness Incentive Ended for WI2' 
   else
      Move 'No Additional Pay Record to update terminations for SP/DP' to $Msg
      Show 'No Additional Pay Record to update terminations for SP/DP'  
   end-if
   do Write-Report
   
   show '-----------------------------------------'
   
FROM PS_HEALTH_BENEFIT HT, 
     PS_BEN_PROG_PARTIC BT
WHERE HT.EMPLID=BT.EMPLID
AND BT.EFFDT=(SELECT MAX(BT1.EFFDT) FROM PS_BEN_PROG_PARTIC BT1
              WHERE BT1.EMPLID=BT.EMPLID
              AND BT1.EMPL_RCD=BT.EMPL_RCD
              AND BT1.COBRA_EVENT_ID=BT.COBRA_EVENT_ID
              AND BT1.EFFDT<=$AsofDate)
AND ((HT.COVERAGE_ELECT_DT BETWEEN $From_Date AND $Thru_Date
     AND HT.COVERAGE_BEGIN_DT < $Thru_Date)
     OR (HT.COVERAGE_BEGIN_DT BETWEEN $From_Date AND $Thru_Date)) 
AND HT.COVERAGE_ELECT in ('T','W')       
![$SlctBenCriteria1]
[$SlctPlanCriteria1]
End-Select
End-Procedure

!-----------------------------------------------------------------------
! Function:    Check-SP-DP-Record                                      -
! Description: Check-SP-DP-Record                                      -
! Called By:   Process-Enrollments                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure Check-SP-DP-Record
  Move 'N' to $SP_DP_Found
begin-select
'X' &SP_DP_Found
  
   Move 'Y' to $SP_DP_Found

from PS_GEX_WELNS_SP_DP
where emplid=$Emplid
end-select
end-procedure

!-----------------------------------------------------------------------
! Function:    Check-Addl-Pay                                          -
! Description: Check Additional Pay                                    -
! Called By:   Process-Enrollments                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Check-Addl-Pay
 Move 'N' to $Addl_Pay_Found
Begin-Select
A.EMPLID,
A.EMPL_RCD,
A.ERNCD,
A.EFFDT,
A.ADDL_SEQ,
A.EARNINGS_END_DT,
A.OTH_PAY

  Move 'Y' to $Addl_Pay_Found
  show '&A.EARNINGS_END_DT :' &A.EARNINGS_END_DT
  
FROM PS_ADDL_PAY_DATA A
WHERE A.EMPLID=$Emplid
and A.ERNCD=$Erncd
AND A.EFFDT=(SELECT MAX(A1.EFFDT) FROM PS_ADDL_PAY_DATA A1
             WHERE A1.EMPLID=A.EMPLID
             AND A1.EMPL_RCD=A.EMPL_RCD
             AND A1.ERNCD=A.ERNCD
             AND A1.EFFDT<=$AsofDate)
End-Select
End-Procedure

!-----------------------------------------------------------------------
! Function:    Insert-Addl-Pay-Erncd                                   -
! Description: Insert into PS_ADDL_PAY_ERNCD                           -
! Called By:   Process-Enrollments                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Insert-Addl-Pay-Erncd
begin-sql on-error=sql-error-found
    INSERT INTO PS_ADDL_PAY_ERNCD
               (EMPLID,
                EMPL_RCD,
                ERNCD,
                RECORD_SOURCE)                   
        VALUES ($Emplid,
                #EMPL_RCD,
                $Erncd,
                'O')
end-sql
end-procedure

!-----------------------------------------------------------------------
! Function:    Insert-Addl-Pay-Effdt                                   -
! Description: Insert into PS_ADDL_PAY_EFFDT                           -
! Called By:   Process-Enrollments                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Insert-Addl-Pay-Effdt
begin-sql on-error=sql-error-found
    INSERT INTO PS_ADDL_PAY_EFFDT
               (EMPLID,
                EMPL_RCD,
                ERNCD,
                EFFDT,
                RECORD_SOURCE)                   
        VALUES ($Emplid,
                #EMPL_RCD,
                $Erncd,
                $Addl_Pay_Effdt,		
                'O')
end-sql
end-procedure

!-----------------------------------------------------------------------
! Function:    Insert-Addl-Pay-Data                                    -
! Description: Insert into PS_ADDL_PAY_DATA                            -
! Called By:   Process-Enrollments                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Insert-Addl-Pay-Data
begin-sql on-error=sql-error-found
    INSERT INTO PS_ADDL_PAY_DATA
               (EMPLID,                                  
                EMPL_RCD,                                
                ERNCD,                                   
                EFFDT,                                   
                ADDL_SEQ,                                
                DEPTID,                                  
                JOBCODE,                                 
                POSITION_NBR,                            
                ACCT_CD,                                 
                GL_PAY_TYPE,                             
                ADDL_PAY_SHIFT,                          
                OTH_HRS,                                 
                HOURLY_RT,                               
                OTH_PAY,                                 
                ADDLPAY_REASON,                          
                SEPCHK,                                  
                EARNINGS_END_DT,                         
                GOAL_AMT,                                
                GOAL_BAL,                                
                OK_TO_PAY,                               
                DISABLE_DIR_DEP,                         
                PRORATE_ADDL_PAY,                        
                PRORATE_CUI_WEEKS,                       
                PAY_PERIOD1,                             
                PAY_PERIOD2,                             
                PAY_PERIOD3,                             
                PAY_PERIOD4,                             
                PAY_PERIOD5,                             
                STATE,                                   
                LOCALITY,                                
                TAX_PERIODS,                             
                TAX_METHOD,                              
                ADDL_PAY_FREQUENCY,                      
                DED_TAKEN,                               
                DED_SUBSET_ID,                           
                DED_TAKEN_GENL,                          
                DED_SUBSET_GENL,                         
                PLAN_TYPE,                               
		BUSINESS_UNIT,                           
		COMP_RATECD,                             
                RECORD_SOURCE)                           
        VALUES ($Emplid,                         !EMPLID                           
                #EMPL_RCD,                       !EMPL_RCD                         
                $Erncd,                          !ERNCD                            
                $Addl_Pay_Effdt,	         !EFFDT                            
                1,                               !ADDL_SEQ                         
                ' ',                             !DEPTID                           
                ' ',                             !JOBCODE                          
                ' ',                             !POSITION_NBR                     
                ' ',                             !ACCT_CD                          
                ' ',                             !GL_PAY_TYPE                      
                'J',                             !ADDL_PAY_SHIFT                   
                0,		                 !OTH_HRS                             
                0,			         !HOURLY_RT                           
                #Wellness_Amt,                   !OTH_PAY                          
                ' ',                             !ADDLPAY_REASON                   
                0,                               !SEPCHK                           
                '',                              !EARNINGS_END_DT                  
                0,			         !GOAL_AMT                         
                0,                               !GOAL_BAL                         
                'Y',			         !OK_TO_PAY                        
                'N',                             !DISABLE_DIR_DEP                  
                'N',                             !PRORATE_ADDL_PAY                 
                'Y',                             !PRORATE_CUI_WEEKS                
                'Y',                             !PAY_PERIOD1                      
                'Y',                             !PAY_PERIOD2                      
                'Y',                             !PAY_PERIOD3                      
                'Y',                             !PAY_PERIOD4                      
                'Y',                             !PAY_PERIOD5                      
                ' ',                             !STATE                            
                ' ',                             !LOCALITY                         
                1,                               !TAX_PERIODS                      
                'A',                             !TAX_METHOD                       
                'P',                             !ADDL_PAY_FREQUENCY               
                'R',                             !DED_TAKEN                        
                ' ',                             !DED_SUBSET_ID                    
                'R',                             !DED_TAKEN_GENL                   
                ' ',                             !DED_SUBSET_GENL                  
                ' ',                             !PLAN_TYPE                        
	        'STDBU',                         !BUSINESS_UNIT                    
		' ',                             !COMP_RATECD                      
                'O')                             !RECORD_SOURCE                    
  end-sql
  add 1 to #Records_Inserted
  do Write-Report
end-procedure

!-----------------------------------------------------------------------
! Function:    Update-Addl-Pay-Data                                    -
! Description: Insert into PS_ADDL_PAY_DATA                            -
! Called By:   Process-Enrollments                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Update-Addl-Pay-Data
begin-sql on-error=sql-error-found
UPDATE PS_ADDL_PAY_DATA
SET EARNINGS_END_DT=$Addl_Pay_Effdt
WHERE EMPLID=&A.EMPLID
AND EMPL_RCD=&A.EMPL_RCD
AND ERNCD=$Erncd
AND EFFDT=&A.EFFDT
AND ADDL_SEQ=&A.ADDL_SEQ
end-sql
End-Procedure 

!-----------------------------------------------------------------------
! Function:    SQL-Error-Found                                         -
! Description: SQL-Error-Found                                         -
! Called By:   Insert-SP-DP-Record                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
begin-procedure SQL-Error-Found
  show 'In SQL-Error-Found '  $EmplId
  show $sql-error
end-procedure

!-----------------------------------------------------------------------
! Function:    Check-SP-DP-Covrg                                       -
! Description: Check Spouse or Domestic Partner Coverage               -
! Called By:   Insert-SP-DP-Record                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Check-SP-DP-Covrg
  Move 'N' to $Covrg_Cd_Found
Begin-Select
GEX_RC_COVRGCD.COVRG_CD
 
  Move 'Y' to $Covrg_Cd_Found
  show '&GEX_RC_COVRGCD.COVRG_CD :' &GEX_RC_COVRGCD.COVRG_CD
  
From  PS_GEX_RC_COVRGCD GEX_RC_COVRGCD  
Where GEX_RC_COVRGCD.OPRID                = $prcs_oprid
And   GEX_RC_COVRGCD.RUN_CNTL_ID          = $prcs_run_cntl_id
And   Rtrim(GEX_RC_COVRGCD.COVRG_CD, ' ') = $Covrg_cd
End-Select
End-Procedure

!-----------------------------------------------------------------------
! Function:    Check-Ben-Program                                       -
! Description: Check Spouse or Domestic Partner Coverage               -
! Called By:   Process-Enrollments                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Check-Ben-Program
 Move 'N' to $Ben_Prog_Found
Begin-Select
BP.BENEFIT_PROGRAM

 Move 'Y' to $Ben_Prog_Found

FROM PS_GEX_RUN_BENPROG BP
WHERE BP.oprid           = $prcs_oprid
  AND BP.run_cntl_id     = $prcs_run_cntl_id
  AND BP.BENEFIT_PROGRAM = $Ben_Prog
End-Select
End-Procedure

!-----------------------------------------------------------------------
! Function:    Check-Plan-Type-10-Exists                               -
! Description: Check if Elect row exists for Plan type 10              -
! Called By:   Process-Enrollments                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Check-Plan-Type-10-Exists
  Move 'N' to $Plan_Type_10_Exists
Begin-Select
HB.COVERAGE_ELECT

  Move 'Y' to $Plan_Type_10_Exists
  
FROM PS_HEALTH_BENEFIT HB, 
     PS_BEN_PROG_PARTIC BPP
WHERE HB.EMPLID=&HT.EMPLID
AND HB.EMPLID=BPP.EMPLID
AND HB.PLAN_TYPE ='10'
AND HB.COVERAGE_ELECT='E'
AND HB.EFFDT=(SELECT MAX(HB1.EFFDT) FROM PS_HEALTH_BENEFIT HB1
               WHERE HB1.EMPLID=HB.EMPLID
               AND HB1.EMPL_RCD=HB.EMPL_RCD
               AND HB1.COBRA_EVENT_ID=HB.COBRA_EVENT_ID
               AND HB1.PLAN_TYPE=HB.PLAN_TYPE
               AND HB1.BENEFIT_NBR=HB.BENEFIT_NBR
               AND HB1.EFFDT<=$AsofDate)
AND BPP.EFFDT=(SELECT MAX(BPP1.EFFDT) FROM PS_BEN_PROG_PARTIC BPP1
              WHERE BPP1.EMPLID=BPP.EMPLID
              AND BPP1.EMPL_RCD=BPP.EMPL_RCD
              AND BPP1.COBRA_EVENT_ID=BPP.COBRA_EVENT_ID
              AND BPP1.EFFDT<=$AsofDate)               
End-Select
End-Procedure
!-----------------------------------------------------------------------
! Function:    Get-Name                                                -
! Description: Fetch Name                                              -
! Called By:   Process-Enrollments                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Name
Begin-Select
NAME

FROM PS_PERSONAL_DATA
WHERE EMPLID=$Emplid
End-Select
End-Procedure Get-Name

!-----------------------------------------------------------------------
! Function:    Get-Covg-Cd-Descr                                       -
! Description: Select-Prev-Health-plan                                 -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Get-Covg-Cd-Descr
 move '' to $Covg_Cd_Descr
Begin-SELECT
C.DESCR 
  move &C.DESCR to $Covg_Cd_Descr
  show '$Covg_Cd_Descr :' $Covg_Cd_Descr
FROM PS_COVRG_CD_TBL C
WHERE C.COVRG_CD=$Covrg_cd
AND C.EFFDT=(SELECT MAX(C1.EFFDT) FROM PS_COVRG_CD_TBL C1
              WHERE C1.COVRG_CD=C.COVRG_CD
              AND C1.EFFDT<=$Asofdate)  
End-Select
End-Procedure

!-----------------------------------------------------------------------
! Function:    Initialize-Vars                                         -
! Description: Main Selection                                          -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Initialize-Vars
   Move ' ' to $Msg
   Move ' ' to $Emplid
   Move 0   to #Empl_Rcd
   Move ' ' to $Erncd
   Move ''  to $Addl_Pay_Effdt
   Move 'N' to $Addl_Pay_Found
   Move 0   to #Covrg_Cd_Found
   Move ' ' to $Covrg_cd
   Move ' ' to $Ben_Prog
   Move ' ' to $Plan_Type
   Move ' ' to $Covrg_Elect
End-Procedure

!-----------------------------------------------------------------------
! Function:    Write-Report                                            -
! Description: Select-Prev-Health-plan                                 -
! Called By:   Begin Report                                            -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Write-Report

  Let $Covrg_cd=upper($Covrg_cd)
  Let $Covg_Cd_Descr=upper($Covg_Cd_Descr)
  Let $Name=translate(&Name, ',',' ') 
  
  Write 1 from $Emplid           $delim
               $Name             $delim
               $Ben_Prog         $delim
               $Plan_Type        $delim
               $Covrg_Elect      $delim
               $Covrg_cd         $delim
               $Covg_Cd_Descr    $delim
               $Msg              
End-Procedure Write-Report


!-----------------------------------------------------------------------
! Function:    Print-Exception-Report                                  -
! Description: Print Exceptions                                        -
! Called By:   Process-Enrollments                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Print-Exception-Report
  Print $Emplid  (+1,{#column1})
  Print $Name    (,{#column2})
  Print $Message (,{#column3})
End-Procedure

!-----------------------------------------------------------------------
! Function:    Close-File                                              -
! Description: Close File                                              -
! Called By:   Process-Enrollments                                     -
! Calls:       None                                                    -
!-----------------------------------------------------------------------
Begin-Procedure Close-File
#debug9 Show 'Close-File'
  Close 1

  If #filestat != 0
     Show 'Error closing input file.  Program terminating.'
     Stop
  End-If
End-Procedure


!#include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'gexxx911.sqc'  !Get Benefit Program Multiples Run Controls
#include 'gexxx920.sqc'  !Get ben single row run control
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math