!***********************************************************************
! GEXBN820:  Missed Contribution                                       *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                                                                      *
! GEXBN820 :            Missed Contribution                            *
!                                                                      *
! Narrative:            If employee is newly eligible for a benefit    *
!                       plan or changing eligibility from one benefit  *
!                       plan to another, and benefit plan event rule   *
!                       is on event date, and contribution is flat     *
!                       amount set out to come off first pay period of *
!                       the month, then there might be some cases this *
!                       contribution will be missed.  This program     *
!                       will create an audit report of such cases.     *
!                       The report will be used to adjust the monthly  *
!                       bills.                                         *
!                                                                      *
! #Debugx Used:         #debug9 paragraph trace                        *
!                       #debug8 key variable values                    *
!                       #debug7 data returned from sql calls           *
!                                                                      *
! SQL Tables:           ben_prog_partic                                *
!                       ben_defn_optn                                  *
!                       ben_defn_cost                                  *
!                       flat_rate_table                                *
!                       health_benefit                                 *
!                       personal_data                                  *
!                       job                                            *
!                                                                      *
! Written by:           Jim Hutchison                                  *
!                                                                      *
! Normally Run:         Monthly - Prior to actual hours sqr programs   *
!                                                                      *
! Control Parms:        None                                           *
!                                                                      *
!***********************************************************************

!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! JDH       09/02/98   Initial Creation                                *
! SXK       03/05/99   Modified to look for people that are missed     *
!                      contributions                                   *
! GBD       10/16/2002 Modified code to eliminate multiple row select; *
!                      also added DISTINCT to selection.               *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and Page-Size Initialization (Landscape)


#define #column1  001
#define #column2  022
!#define #column3  057
!#define #column4  072
#define #column3  057
#define #column4  072
#define #column5  087
#define #column6  102
#define #column7  117
#define #column8  132


Begin-Report
#debug9 Show 'Begin-Report'
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report


Begin-Heading 7
#debug9 Show 'Begin-Heading'
  #Include 'stdhdg01.sqc'

  Print 'Benefit Program: '  (3,1)
  Print $save_benefit_program ()

!  Print 'BENEFIT'            (+3,{#column3})
!  Print 'PLAN'               (+0,{#column4})
  Print 'BENEFIT'            (+3,{#column3})
  Print 'COVERAGE'           (+0,{#column5})
  Print ' FLAT RATE'         (+0,{#column6})
  Print 'DEDUCTION'          (+0,{#column7})

  Print 'EMPLOYEE ID'        (+1,{#column1})
  Print 'NAME'               (+0,{#column2})
!  print 'PROGRAM'            (+0,{#column3})
!  Print 'TYPE'               (+0,{#column4})
  Print 'PLAN'               (+0,{#column3})
  Print 'DEPTID'             (+0,{#column4})
  Print 'BEGIN DATE'         (+0,{#column5})
  Print ' AMOUNT'            (+0,{#column6})
  print 'BEGIN DATE'         (+0,{#column7})
  Print 'SERVICE DT'         (+0,{#column8})
End-Heading


Begin-Procedure P100-Initialization
#debug9 Show 'P100-Initialization'

  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Get-Current-DateTime    !curdttim.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      = 'GEXBN820'
  Let $ReportTitle   = 'MISSED CONTRIBUTIONS FOR PENISON'

  Do Edit-Pay-Calendar
  Let $AsOfDate = $pay_end_dt
  do convert-to-dtu-date($pay_end_dt,$pay_end_dt_dtu)
  let $pay_end_dt_mm = substr($pay_end_dt_dtu,6,2)
  let $pay_end_dt_yyyy = substr($pay_end_dt_dtu,1,4)

  Do P110-Get-Dates
  Let $reporttitle = $reporttitle||' '||$run_month||','||$pay_end_dt_yyyy

  Show '$ReportID    = ' $ReportID
  Show '$ReportTitle = ' $ReportTitle
  Show ' '
  Show 'Report Began:'
  Show '  Date = ' $ReportDate
  Show '  Time = ' $ReportTime


End-Procedure


Begin-Procedure P110-Get-Dates
#debug9 Show 'P110-Get-Dates'
Begin-Select On-Error=P260-SQL-Error-Found('P110-Get-Dates')
Min(pay_begin_dt)     &second_pay_begin_dt
  Let $second_pay_begin_dt = &second_pay_begin_dt

From  ps_pay_calendar

Where company  = 'GEI'
And   paygroup = 'RET'

And   To_Char(check_dt,'MM')   = $pay_end_dt_mm
And   To_Char(check_dt,'YYYY') = $pay_end_dt_yyyy
and   pay_end_dt <= $pay_end_dt
and   pay_period <> 1
End-Select

begin-select on-error=p260-sql-error-found('P110-Get-Dates')
to_char(max(m.pay_begin_dt),'MONTH')  &run_month
  let $run_month = rtrim(&run_month,' ')
From  ps_pay_calendar m

Where m.company  = 'GEI'
And   m.paygroup = 'RET'

And   To_Char(m.check_dt,'MM')   = $pay_end_dt_mm
And   To_Char(m.check_dt,'YYYY') = $pay_end_dt_yyyy
and   m.pay_end_dt <= $pay_end_dt
and   m.pay_period <> 1
End-Select


End-Procedure


Begin-Procedure P200-Main-Process
#debug9 Show 'P200-Main-Process'
move 0 to #bp_total
move 0 to #grand_total

Begin-Select On-Error=P260-SQL-Error-Found('P200-Main-Process')
bpp.benefit_program  ()  On-Break  Level=1     Print=Never
                                   Save=$save_benefit_program
                                   After=P240-After-bp-change
hb.emplid
hb.empl_rcd
hb.plan_type
hb.benefit_plan
hb.coverage_begin_dt
hb.effdt
pd.name
j.deptid 

  Do P210-Get-Rate-Type

From   ps_personal_data       pd,
       ps_job                 j,
       ps_ben_prog_partic     bpp,
       ps_health_benefit      hb
    
Where  hb.plan_type           In ('1X')

And    hb.effdt   Between $second_pay_begin_dt And $pay_end_dt
and    hb.coverage_elect = 'E'
And    bpp.emplid              = hb.emplid
And    bpp.empl_rcd           = hb.empl_rcd
And    bpp.cobra_event_id      = hb.cobra_event_id

And    bpp.effdt               =
      (Select Max(effdt)
       From   ps_ben_prog_partic
       Where  emplid           = bpp.emplid
       And    empl_rcd        = bpp.empl_rcd
       And    cobra_event_id   = bpp.cobra_event_id
       And    effdt           <= hb.effdt)

And    j.emplid                = hb.emplid
And    j.empl_rcd             = hb.empl_rcd

And    j.effdt                 =
      (Select Max(effdt)
       From   ps_job
       Where  emplid           = j.emplid
       And    empl_rcd        = j.empl_rcd
       And    effdt           <= $AsOftoday)

And    j.effseq                =
      (Select Max(effseq)
       From   ps_job
       Where  emplid           = j.emplid
       And    empl_rcd        = j.empl_rcd
       And    effdt            = j.effdt)

And    pd.emplid               = j.emplid
and   hb.effdt = (select max(effdt)
                    from ps_health_benefit
		where emplid = hb.emplid
		and hb.empl_rcd = hb.empl_rcd
		and cobra_event_id = hb.cobra_event_id
		and plan_type = '1X'
		and benefit_nbr = hb.benefit_nbr
		and coverage_elect = 'E'
		and effdt between $second_pay_begin_dt and $pay_end_dt)

Order By bpp.benefit_program, j.deptid, pd.name

End-Select

    if #grand_total > 0
        print 'Grand Total: ' (+2,1)
        print #grand_total (+0,{#column6}) edit 999,999.99
     end-if

End-Procedure


Begin-Procedure P210-Get-Rate-Type
#debug9 Show 'P210-Get-Rate-Type'
Begin-Select On-Error=P260-SQL-Error-Found('P210-Get-Rate-Type')
bdc.rate_tbl_id

  Do P220-Flat-Rate-Table


From   ps_ben_defn_optn        bdo,
       ps_ben_defn_cost        bdc

Where  bdo.benefit_program     = &bpp.benefit_program

And    bdo.effdt               =
      (Select Max(effdt)
       From   ps_ben_defn_optn
       Where  benefit_program  = bdo.benefit_program
!GBD 10/16/2002 Begin
       And    effdt           <= &hb.effdt)
!       And    effdt           <= &hb.effdt
!       And    plan_type        = bdo.plan_type
!       And    option_id        = bdo.option_id)
!GBD 10/16/2002 End

And    bdo.plan_type           = &hb.plan_type
And    bdo.benefit_plan        = &hb.benefit_plan

And    bdc.benefit_program     = bdo.benefit_program

And    bdc.effdt               =
      (Select Max(effdt)
       From   ps_ben_defn_cost
       Where  benefit_program  = bdc.benefit_program
!GBD 10/16/2002 Begin
       And    effdt           <= &hb.effdt)
!       And    effdt           <= &hb.effdt
!       And    plan_type        = bdc.plan_type
!       And    option_id        = bdc.option_id
!       And    cost_id          = bdc.cost_id)
!GBD 10/16/2002 End

And    bdc.plan_type           = bdo.plan_type
And    bdc.option_id           = bdo.option_id

And    bdc.rate_type           = '2'
End-Select
End-Procedure


Begin-Procedure P220-Flat-Rate-Table
#debug9 Show 'P220-Flat-Rate-Table'

let #flat_rate_amt = 0

Begin-Select On-Error=P260-SQL-Error-Found('P220-Flat-Rate-Table')
frt.total_covrg_rate

  Let #flat_rate_amt = &frt.total_covrg_rate
  Let $Data-Found-Flag    = 'Y'
  Let $BP-Data-Found-Flag = 'Y'
  Do P230-Print-Record

From   ps_flat_rate_tbl     frt

Where  frt.flat_rate_id     = &bdc.rate_tbl_id
And    frt.pay_frequency    = 'M'
And    frt.effdt            =
      (Select Max(effdt)
       From   ps_flat_rate_tbl
       Where  flat_rate_id  = frt.flat_rate_id
       And    effdt        <= &hb.effdt)
End-Select
End-Procedure


Begin-Procedure P230-Print-Record
#debug9 Show 'P230-Print-Record'
  let $cov_beg_dt = ' '
  let $effdt = ' '
  Do Format-DateTime(&hb.coverage_begin_dt, $cov_beg_dt, {DEFMDY}, '', '')
  Do Format-DateTime(&hb.effdt, $effdt, {DEFMDY}, '', '')

  do select-service-dt
!  display &e.service_Dt
  Do Format-DateTime(&e.service_dt, $service_dt, {DEFMDY}, '', '')

  Print &hb.emplid            (+1,{#column1})   Edit xxx-xx-xxxx
  Print &pd.name              (+0,{#column2})
!  Print &bpp.benefit_program  (+0,{#column3})
!  Print &hb.plan_type         (+0,{#column4})
  Print &hb.benefit_plan      (+0,{#column3})
  Print &j.deptid             (+0,{#column4})
  Print $cov_beg_dt           (+0,{#column5})
  Print #flat_rate_amt        (+0,{#column6})   Edit 999,999.99
  Print $effdt                (+0,{#column7})  
  Print $service_Dt           (+0,{#column8})

  add #flat_rate_amt to #bp_total
  add #flat_rate_amt to #grand_total
End-Procedure

Begin-Procedure select-service-dt
#debug9 show 'Select-Service-Dt'

let $service_dt = ' '
begin-select On-Error=P260-SQL-Error-Found('Select-Service-Dt')
e.service_dt
from ps_employment e
where e.emplid = &hb.emplid
and e.empl_rcd = &hb.empl_rcd
end-select
end-procedure

Begin-Procedure P240-After-bp-change
#debug9 Show 'P240-After-bp-change'
  If $BP-Data-Found-Flag = 'Y'
    print 'Total for Benefit Program: ' (+2,1)
    print #bp_total (+0,{#column6}) edit 999,999.99
    move 0 to #bp_total
    New-Page
    Let $BP-Data-Found-Flag = 'N'
  End-If
End-Procedure


Begin-Procedure P260-SQL-Error-Found($Proc_Name) 
#debug9 Show 'P260-SQL-Error-Found'
  Display 'SQL Error in ' 
  Display $Proc_Name 
  Display $_sql-error
  Display 'sql-status:' 
  Display #_sql-status 
  Do P270-Emplid-in-Error
End-Procedure


Begin-Procedure P270-Emplid-in-Error
#debug9 Show 'P270-Emplid-in-Error'
  Display ''
  Display 'Error occurred while processing emplid ' Noline
  Display &hb.emplid
  Display ''
End-Procedure


Begin-Procedure P300-Finalization
#debug9 Show 'P300-Finalization'
  If $Data-Found-Flag <> 'Y'
    Print 'NO DATA SELECTED FOR THIS REPORT RUN'	(25,) Center
  End-If

  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc
  Do Get-Current-DateTime    !curdttim.sqc

  Show ' '
  Show 'Report Ended:'
  Show '  Date = ' $ReportDate
  Show '  Time = ' $ReportTime
  Show ' '
  Show 'Successful end of report'
End-Procedure


#include 'gexxx920.sqc'  !Get ben single row run control
#include 'gexbnmdt.sqc'  !Get pay_end_dt for last confirmed pay period
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'  !Routines for date math
