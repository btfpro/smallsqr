!***********************************************************************
! GEXPY070:  Update Run ID's on the Pay Calendar                       *
!                                                                      *
!            This SQR will be used to update run id's on               *
!            the pay calendar.  Also, run id's on any run              *
!            control rows with the operator HRBATCH will be            *
!            updated.                                                  *
!                                                                      *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module is the confidential and proprietary information of       *
! Giant Eagle, Inc.; it is not to be copied, reproduced,or transmitted *
! in any form, by any means, in whole or in part, nor is it to be used *
! for any purpose other than that for which it is expressly provided   *
! without the written permission of Giant Eagle.                       *
!                                                                      *
! Copyright (c) 1997-1998 Giant Eagle,Inc. All Rights Reserved         *
!                                                                      *
!***********************************************************************
!                         MODIFICATION HISTORY                         *
!***********************************************************************
! INITIALS  DATE        DESCRIPTION OF THE CHANGE                      *
!***********************************************************************
! JDH       10/22/1998  Initial Creation                               *
! CJH       11/12/1998  Add logic transition to next calendar year     *
! CWB       01/10/2000  Add logic to by-pass existing year-end         *
!                        run control and payinit rows.                 *  
! CWB       03/24/2003  Add logic to handle years with 53 weeks. v 8.3 *
! CJH       01/05/2004	Change week select to include 53               *
!                       in run control select                          * 
! GEX-SXD   09/12/2007  Commented the code for comparison of first ,   *
!                       second and third character of run id.          *
!KXY        12/18/2007  added the code to update _a and _b             *
!			runcontrolids for ITG 44449		       *
!KXY	    01/12/2008  Code changed  as requested for getronics ticket*	
!			 #9649586 on 01/12/2008			       *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and Page-Size Initialization (Portrait)


Begin-Report
  Do P100-Initialization
  Do P200-Main-Process
  Do P300-Finalization
End-Report


Begin-Procedure P100-Initialization
  Do Init-DateTime           !datetime.sqc
  Do Init-Number             !number.sqc
  Do Stdapi-Init             !stdapi.sqc

  Let $ReportID      = 'GEXPY070'
  Let $ReportTitle   = 'Update Run ID''s on the Pay Calendar'

  Show ' '
  Show ' '
  Show 'Report ID:    ' $ReportID
  Show 'Report Title: ' $ReportTitle
  Show ' '

  Do Get-Current-DateTime    !curdttim.sqc
  Show 'Report Started on ' $ReportDate ' at ' $ReportTime
  Show ' '

  If $prcs_process_instance = ''
    Do P110-SQRW-Run-Controls
  Else
    Do P120-Process-Scheduler-Run-Controls
  End-If

  Show ' '
!GEX-SXD  09/12/2007  - Begin
!! CJH - 11/12/1998 - Begin
!  Let $run_seq = Substr($Run_ID,2,2)
!!  If $run_seq = '01'
!     If Upper(Substr($Run_ID,1,1)) <> 'A' and Upper(Substr($Run_ID,1,1)) <> 'B'
!      ! Run Id to update on run controls will begin with
!      ! previous alpha sequence.  (New Run id - 2 chars)
!      ! i.e. - C01 should update A52 run_ids on run control recs
!      display 'Ready to subtract characters to find current run_id letter'
!      display 'New Run id letter: ' noline
!      let $disp = Upper(Substr($Run_ID,1,1))
!      display $disp
!      Let #asc_run_id = ascii($Run_ID)
!      Let #new_asc_run = #asc_run_id - 2
!      Let $Run_ID_1 = chr(#new_asc_run)
!      display 'Derived current Run ID letter: ' noline
!      display $Run_ID_1
!     Else
!        If Upper(Substr($Run_ID,1,1)) = 'A'
!           Let $Run_ID_1 = 'Y'
!        Else
!           Let $Run_ID_1 = 'Z'
!        End-if
!     End-if
!  Else
!! CWB 01/10/2000 Begin
!! CWB 03/24/2003 BEGIN
!      If (($run_seq >= '02') and 
!!          ($run_seq <= '52'))
!          ($run_seq <= '53'))
!! CWB 03/24/2003 END
!! CWB 01/10/2000 End
!      ! Run Id to update on run controls will begin with
!      ! same letter that new run id has. (not first week of year)
!      Let $Run_ID_1 = Substr($Run_ID,1,1)
!      End-if
!  End-if
!! CJH - 11/12/1998 - End
!GEX-SXD  09/12/2007  End
End-Procedure


Begin-Procedure P110-SQRW-Run-Controls
  While 1=1
    Input $Pay_End_Dt 'Enter the Pay Period End Date ({Prompt-Date})'
    Move {PDelimiter} To $DDelimiter
    Do Format-DateTime($Pay_End_Dt,$Pay_End_Dt,{Prompt-Mask},'','native')
    Do Validate-Native-Date($Pay_End_Dt,$Date-OK)
    If $Date-OK = 'Y'
      Show $Pay_End_Dt
      Break
    Else
      Display '**** This is an invalid date, please reenter ****'
    End-If
  End-While

  While 1=1
    Input $Check_Dt 'Enter the Paycheck Issue Date ({Prompt-Date})'
    Move {PDelimiter} To $DDelimiter
    Do Format-DateTime($Check_Dt,$Check_Dt,{Prompt-Mask},'','native')
    do Validate-Native-Date($Check_Dt,$Date-OK)
    If $Date-OK = 'Y'
      Show $Check_Dt
      Break
    Else
      Display '**** This is an invalid date, please reenter ****'
    End-If
  End-While

  While 1=1
    Input $Run_ID maxlen=3 type=char 'Enter the Pay Run ID'
    If $Run_ID <> ''
      Uppercase $Run_Id
      Show $Run_ID
      Break
    End-If
  End-While
End-Procedure


Begin-Procedure P120-Process-Scheduler-Run-Controls
  Do GEXXX922-Select-Parameters

  Let $Pay_End_Dt = &GEX_RC_PAY.PAY_END_DT
  Let $Check_Dt   = &GEX_RC_PAY.CHECK_DT
  Let $Run_ID     = &GEX_RC_PAY.RUN_ID           

  If $Pay_End_Dt = ''
    Show 'Pay Period End Date is required for this process'
    Stop
  End-If

  If $Check_Dt = ''
    Show 'Paycheck Issue Date is required for this process'
    Stop
  End-If

  If $Run_ID = ''
    Show 'Pay Run ID is required for this process'
    Stop
  End-If

  Show 'Pay Period End Date:  ' $Pay_End_Dt
  Show 'Paycheck Issue Date:  ' $Check_Dt
  Show 'Pay Run ID         :  ' $Run_ID
End-Procedure


Begin-Procedure P200-Main-Process
Begin-Select On-Error=P250-SQL-Error-Found('P200-Main-Process')
company
paygroup
  Do P210-Update-Pay-Calendar
  Show 'Company/Paygroup ' &company '/' &paygroup ' pay calendar row updated'
From  ps_pay_calendar
Where pay_end_dt     = $Pay_End_dt
And   check_dt       = $Check_Dt
And   pay_sheets_run = 'N'
And   pay_calc_run   = 'N'
Order By company, paygroup
End-Select
  Move #total-pc-rows-updated To $total-pc-rows-updated 888,888,888
  Show ' '
  Show $total-pc-rows-updated ' ps_pay_calendar row(s) updated'
  Do P220-Run-Controls
End-Procedure


Begin-Procedure P210-Update-Pay-Calendar
  Begin-SQL On-Error=P250-SQL-Error-Found('P210-Update-Pay-Calendar')
    Update ps_pay_calendar
       Set run_id         = $Run_ID
     Where company        = &company
       And paygroup       = &paygroup
       And pay_end_dt     = $Pay_End_dt
       And check_dt       = $Check_Dt


  End-SQL
  Add #sql-count to #total-pc-rows-updated
End-Procedure


Begin-Procedure P220-Run-Controls
  display 'Updating Run_ID: ' noline
  display $Run_ID_1 noline
  display '__ on run control records with ' noline 
  display $Run_ID noline
  display '...'

  Let $table_name = 'ps_rc_pay'
  Do P230-Update-Run-Control-Table

  Let $table_name = 'ps_gex_rc_pay'
  Do P230-Update-Run-Control-Table

  Let $table_name = 'ps_rc_payinit'
  Do P230-Update-Run-Control-Table

  Let $table_name = 'ps_gex_rc_payinit'
  Do P230-Update-Run-Control-Table
End-Procedure


Begin-Procedure P230-Update-Run-Control-Table
!VENDKXY FOR ITG 44449 on 12/18/2007
Let $x=Substr($Run_ID,7,1)
show $x
if $x='A' 
  Begin-SQL On-Error=P250-SQL-Error-Found('P230-Update-Run-Control-Table')
    Update [$table_name]
       Set run_id             = $Run_ID
     Where oprid              = 'HRBATCH'
     !and run_cntl_id like 'gex%_a' !Changed by Vendkxy for getronics ticket #9649586 on 01/12/2008
     and Substr(Run_ID,7,1) = 'A'
   End-SQL
end-if

if $x='B' 
  Begin-SQL On-Error=P250-SQL-Error-Found('P230-Update-Run-Control-Table')
    Update [$table_name]
       Set run_id             = $Run_ID
     Where oprid              = 'HRBATCH'
     !and run_cntl_id like 'gex%_b' !Changed by Vendkxy for getronics ticket #9649586 on 01/12/2008
     and Substr(Run_ID,7,1) = 'B'
  End-SQL
end-if
!GEX-SXD  09/11/2007 Begin     
       !And Substr(run_id,1,1) = $Run_ID_1 
!GEX-SXD  09/11/2007 End              

! CWB 01/10/2000 Begin
!       And Substr(run_id,2,2) between '01' and '52'
! CJH - 01/05/2004
!GEX-SXD  09/11/2007 Begin
        !And Substr(run_id,2,2) between '01' and '53' 
!GEX-SXD  09/11/2007 End       
       
! CWB 01/10/2000 End

!  End-SQL
!VENDKXY FOR ITG 44449 on 12/18/2007
  Move #sql-count To $out 888,888,888
  Show $out ' ' $table_name ' row(s) updated'
End-Procedure


Begin-Procedure P250-SQL-Error-Found($Proc_Name) 
  Show 'SQL Error in ' $Proc_Name
  Show $_sql-error
  Stop
End-Procedure


Begin-Procedure P300-Finalization
  Do Reset                   !reset.sqc
  Do Stdapi-Term             !stdapi.sqc

  Do Get-Current-DateTime    !curdttim.sqc
  Show ' '
  Show 'Report Ended on ' $ReportDate ' at ' $ReportTime
End-Procedure


#include 'gexxx922.sqc'  !Get pay single row run control
#Include 'stdapi.sqc'    !Process Scheduler Interface
#Include 'reset.sqc'     !Reset Printer Procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime Procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'validdt.sqc'   ! Validate date routine
#Include 'number.sqc'    !Routines to format numbers
