!*************************************
!  PAY006:  Other Earnings Register  *
!*************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:04:26:03                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !Printer and page-size initialization

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PAY006' to $ReportID

  do Init-DateTime
  do Init-Number
  do Stdapi-Init

  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.
  move $Pay006_ReportTitle to $ReportTitle

  do Get-Calendar-Year-ID
  do Array-Initialization
  do Payroll-Report-Initialization
end-procedure

begin-procedure Array-Initialization
  create-array name=Totals size=9 -
    field=TotalName:char field=total:number:8 field=startCol:number:2

  put $Pay1_Gr_Tot        into Totals(1) TotalName
  put $Pay1_Cmp_Tot       into Totals(2) TotalName
  put $Pay1_PayPer_Tot    into Totals(3) TotalName
  put $Pay1_PayGrp_Tot    into Totals(4) TotalName
  put $Pay006_OthErn_Tot  into Totals(5) TotalName
  put  46 into Totals(0) startCol(0)
  put  61 into Totals(0) startCol(1)
end-procedure

begin-procedure Report-Translation
! Read from PAY006  and PAY1 program ids
   do Init_Report_Translation($ReportID,$Language_Cd)
   do Append_Report_Translation('PAY1')

   do Get_Field_Information ('PAY006', 'REPORT_TITLE', $Pay006_ReportTitle, #dummy_width)
   do Get_Field_Information ('PAY006', 'OTHERN_TOT',   $Pay006_OthErn_Tot,  #dummy_width)
   do Get_Field_Information ('PAY006', 'ERNS',         $Pay006_Erns,        #dummy_width)
   do Get_Field_Information ('PAY006', 'SEPCHK_ID1',   $Pay006_SepChk_Id1,  #dummy_width)
   do Get_Field_Information ('PAY006', 'CUR_PERIOD',   $Pay006_Cur_Period,  #dummy_width)
   do Get_Field_Information ('PAY006', 'MTH_TDT',      $Pay006_Mth_TDt,     #dummy_width)
   do Get_Field_Information ('PAY006', 'QTR_TDT',      $Pay006_Qtr_TDt,     #dummy_width)
   do Get_Field_Information ('PAY006', 'YR_TDT',       $Pay006_Yr_TDt,      #dummy_width)
   do Get_Field_Information ('PAY006', 'SEPCHK_ID2',   $Pay006_SepChk_Id2,  #dummy_width)
   do Get_Field_Information ('PAY006', 'HOURS',        $Pay006_Hours,       #dummy_width)
   do Get_Field_Information ('PAY006', 'AMT',          $Pay006_Amt,         #dummy_width)

   do Get_Field_Information ('PAY1',   'GR_TOT',       $Pay1_Gr_Tot,        #dummy_width)
   do Get_Field_Information ('PAY1',   'CMP_TOT',      $Pay1_Cmp_Tot,       #dummy_width)
   do Get_Field_Information ('PAY1',   'PAYPER_TOT',   $Pay1_PayPer_Tot,    #dummy_width)
   do Get_Field_Information ('PAY1',   'PAYGRP_TOT',   $Pay1_PayGrp_Tot,    #dummy_width)
   do Get_Field_Information ('PAY1',   'EMP_ID',       $Pay1_Emp_Id,        #dummy_width)
   do Get_Field_Information ('PAY1',   'NAME',         $Pay1_Name,          #dummy_width)
end-procedure

begin-heading 10

  #Include 'stdhtrpi.sqc'
  #Include 'stdhtr06.sqc'
  print $Pay006_Erns       (+2,1)
  print $ErnCd             (0,13)
  print $EarningsName      (0,20)
  print $Pay006_SepChk_Id1 (+2,40)
  print $Pay006_Cur_Period (0,58)
  print $Pay006_Mth_TDt    (0,89)
  print $Pay006_Qtr_TDt    (0,118)
  print $Pay006_Yr_TDt     (0,149)

  print $Pay1_Emp_Id       (+1,1)
  print $Pay1_Name         (0,14)
  print $Pay006_SepChk_Id2 (0,40)
  print $Pay006_Hours      (0,55)
  print $Pay006_Amt        (0,69)
  print $Pay006_Hours      (0,86)
  print $Pay006_Amt        (0,99)
  print $Pay006_Hours      (0,116)
  print $Pay006_Amt        (0,129)
  print $Pay006_Hours      (0,146)
  print $Pay006_Amt        (0,159)

end-heading

begin-procedure Report
begin-SELECT
A.COMPANY      () on-break print=never level=1 procedure=Company-Change
A.PAY_END_DT   () on-break print=never level=2 procedure=PayEndDate-Change
A.PAYGROUP     () on-break print=never level=3 procedure=PayGroup-Change
C.ERNCD        () on-break print=never level=4 procedure=ErnCd-Change
A.CHECK_DT           &A.Check_Dt
B.EMPLID             (+1,1)
B.NAME               (0,14,20)
C.SEPCHK             (0,37)  EDIT B9
C.OTH_HRS            (0,53)  EDIT B999.99MI
C.OTH_EARNS          (0,62)  EDIT B9,999,999.99MI
E.BALANCE_PERIOD

  if &A.Company <> $Company
    move &A.Company to $Company
    do Get-Company-Data
  end-if

  move &A.PayGroup      to $PayGroup
  do Get-PayGroup-Data
  move $PayGroupCountry to $Country

  if &C.ErnCd    <> $ErnCd
    move &C.ErnCd         to $ErnCd
    do Get-Earnings-Name
  end-if

  move &A.Pay_End_Dt  to $PayEndDate
  move &A.Check_Dt      to $AsOfDate
  move &E.Balance_Period to $Balance_Period
  move &Bal_ID_For_Cal_YR to $Calendar_Year_ID
  move &B.EmplID        to $EmplID
  do Get-Date-Codes
  do Get-Earnings-Bal

  ARRAY-ADD &C.Oth_Hrs      -
            &C.Oth_Earns    -

  to Totals(5) total(0)     -
               total(1)

  if NOT(($Company = $Prev_Company)
     AND ($PayEndDate = $Prev_PayEndDate)
     AND ($PayGroup  = $Prev_PayGroup)
     AND ($ErnCd  = $Prev_ErnCd)
     AND ($Prev_EmplID = $EmplID))

     do Format-Number(#HrsMTD, $out, 'B99.99mi')
     print $out   (0,85)
     do Format-Number(#GrsMTD, $out, 'B,999,999.99mi')
     print $out   (0,93)
     do Format-Number(#HrsQTD, $out, 'B99.99mi')
     print $out   (0,115)
     do Format-Number(#GrsQTD, $out, 'B,999,999.99mi')
     print $out   (0,123)
     do Format-Number(#HrsYTD, $out, 'B999.99mi')
     print $out   (0,144)
     do Format-Number(#GrsYTD, $out, 'B,999,999.99mi')
     print $out   (0,153)



     ARRAY-ADD #HrsMTD         -
               #GrsMTD         -
               #HrsQTD         -
               #GrsQTD         -
               #HrsYTD         -
               #GrsYTD         -

     to Totals(5) total(2)     -
                  total(3)     -
                  total(4)     -
                  total(5)     -
                  total(6)     -
                  total(7)
  end-if

  move $EmplID     to $Prev_EmplID
  move $Company    to $Prev_Company
  move $PayEndDate to $Prev_PayEndDate
  move $PayGroup   to $Prev_PayGroup
  move $ErnCd      to $Prev_ErnCd

FROM  PS_PAY_CALENDAR A,
      PS_PAY_CHECK B,
      PS_PAY_OTH_EARNS C,
      PS_PAY_EARNINGS D,
      PS_PAY_CAL_BAL_ID E
WHERE [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = B.COMPANY
  AND B.PAYGROUP   = A.PAYGROUP
  AND B.PAY_END_DT = A.PAY_END_DT
  AND C.COMPANY    = A.COMPANY
  AND C.PAYGROUP   = B.PAYGROUP
  AND C.PAY_END_DT = B.PAY_END_DT
  AND C.OFF_CYCLE  = B.OFF_CYCLE
  AND C.PAGE_NUM      = B.PAGE_NUM
  AND C.LINE_NUM      = B.LINE_NUM
  AND C.SEPCHK     = B.SEPCHK
  AND D.SINGLE_CHECK_USE IN ('C', 'N')
  AND D.COMPANY    = C.COMPANY
  AND D.PAYGROUP   = C.PAYGROUP
  AND D.PAY_END_DT = C.PAY_END_DT
  AND D.OFF_CYCLE  = C.OFF_CYCLE
  AND D.PAGE_NUM      = C.PAGE_NUM
  AND D.LINE_NUM      = C.LINE_NUM
  AND D.SEPCHK     = C.SEPCHK
  AND D.ADDL_NBR      = C.ADDL_NBR
  AND D.OK_TO_PAY  = 'Y'
  AND D.PAY_LINE_STATUS IN ('C','F','V')
  AND C.COMPANY    = E.COMPANY
  AND C.PAYGROUP   = E.PAYGROUP
  AND C.PAY_END_DT = E.PAY_END_DT
  AND E.BALANCE_ID = $Calendar_Year_ID
ORDER BY A.COMPANY,
         A.PAY_END_DT,
         A.PAYGROUP,
         C.ERNCD,
         B.NAME,
         B.EMPLID
end-SELECT

  move 1 to #changeLevel
  move 'Y' to $End
  do Print-Totals

end-procedure


begin-procedure Company-Change
  move 2 to #changeLevel
  do Print-Totals
end-procedure


begin-procedure PayEndDate-Change
  move 3 to #changeLevel
  do Print-Totals
end-procedure


begin-procedure PayGroup-Change
  move 4 to #changeLevel
  do Print-Totals
end-procedure


begin-procedure ErnCd-Change
  move 5 to #changeLevel
  do Print-Totals
end-procedure


begin-procedure Print-Totals

  move 5 to #totalRow

  while #totalRow >= #changeLevel

    if #current-line > 55  !don't split a total series across pages
      new-page
    end-if

    move #totalRow to #rollRow
    subtract 1 from #rollRow
    get $TotalName from Totals(#totalRow) TotalName
    print $TotalName (+2,20)
    move 46 to #startCol
    move 0 to #i
    while #i <= 7
      get #total from Totals(#totalRow) total(#i)
      do Format-Number(#total, $out, '999,999,999.99mi')
      print $out (0,#startCol)
      evaluate #i
          when = 0
            add 15 to #startCol
          when = 1
          when = 3
          when = 5
            add 16 to #startCol
          when = 2
          when = 4
          when = 6
            add 14 to #startCol
      end-evaluate
      array-add #total to Totals(#rollRow) total(#i)
      put 0 into Totals(#totalRow) total(#i)
      add 1 to #i
    end-while

    subtract 1 from #totalRow
  end-while

  if $End = 'Y'
    do Reset
  end-if

  new-page

end-procedure


#Include 'getbalid.sqc'  !Get-Balance-ID procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'geternnm.sqc'  !Get-Earnings-Name procedure
#Include 'geternbl.sqc'  !Get-Earnings-Bal procedure
#Include 'payinit.sqc'   !Payroll-Report-Initialization procedure
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
