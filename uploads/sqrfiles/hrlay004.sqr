!***********************************************************************
!  HRLAY004:  Candidate List Report                                    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:13:30:42                                 *
!       $Release:  HR9                                                 *
!      $Revision:  101                                                 *
!***********************************************************************
! Description:  This report lists all employees who have been laid off *
!               either temporarily or permanently and who have recall  *
!               rights as determined by their Recall Right expiry date.*
!***********************************************************************

#include 'setenv.sqc'   !Set environment


!***********************************************************************
!-----------------Setup Section----------------------------------------*
!Description: This section sets the Page Size and Font Size            *
!***********************************************************************
Begin-Setup
#include 'setupdb.sqc'
          page-size 70 185

          declare printer
          type          = HPLASERJET
          orientation   = LANDSCAPE
          lines-inch    = 8
          chars-inch    = 18.6
          top-margin    = 0.30
          left-margin   = 0.20
          font          = 5
          point-size    = 7
          lines-inch    = 8
          
      !Creating the Tie Breaker array    
      create-array 
        name = tieselect 
        size = 30
        field = tie:char
End-Setup


!**********************************************************************!
!Heading Section: This section Prints the Header of this Report        !
!**********************************************************************!
Begin-Heading 12 
          let $mergereportname = $lbl_Reportname || ' ' || $lbl_candlst
          print $mergereportname                           (1,1)
           print $lbl_Peoplesoft                           (,1) center
           print $lbl_Pageno                               (1,165)
           page-number ()
           print $lbl_Rundate                              (2,165)
           print $currentdate () !$current-date () edit 'dd/mm/yyyy'
           print $lbl_Candreport                           (2,80) 
           print $lbl_Runtime                              (3,165)
           print $current-date () edit 'HH:MI:SS'
           
           print $lbl_AsOfDate (5,1)
           print $AsOfDateIn (,21) !edit 'dd/mm/yyyy'
           
           print $lbl_LbrAgrmnt (6,1)
           print &LABOR_AGREEMENT_IN (,21)
           print $LBRAGR_DESC (,36)
           
           print $lbl_SnrDate (7,1)
           print &SENIORITY_DATE_ID_IN (,21)
           print $SEN_DESCR (,36)
           
           print $lbl_Tiebrk (8,1)
            do Select-Tie-Heading
           
           if rtrim(&DEPARTMENT_IN,' ') <> ''
          print $lbl_Dept_hd                     (+2,1)
          print &DEPARTMENT_IN                   () 
          print $DEPT_DESC                       (,+2)
          end-if
          
          
          if rtrim(&LOCATION_IN,' ') <> ''
          print $lbl_Location_hd                  (+2,1)
          print &LOCATION_IN                      ()
          print $LOC_DESC                         (,+2)
          end-if
          
          
          if rtrim(&LABOR_FACILITY_ID_IN,' ') <> ''
          print $lbl_Facility_hd                  (+2,1)
          print &LABOR_FACILITY_ID_IN             ()
          print $FACID_DESC                       (,+2)
          end-if
          
          if rtrim(&JOBCODE_IN,' ') <> ''
          print $lbl_Jobcode_hd                   (+2,1)
          print &JOBCODE_IN                       ()
          print $JOB_DESC                         (,+2)
          end-if
           
           
           if rtrim(&JOB_FAMILY_IN,' ') <> ''
           print $lbl_jobfamily_hd                (+2,1)
           print &JOB_FAMILY_IN                   ()
           print $JOBFAMILY_DESC                  (,+3)
           end-if
End-Heading


!***********************************************************************
!-----------------Program Section--------------------------------------*
!***********************************************************************
Begin-Program
 do STDAPI-INIT
 do Init-DateTime
 do Get-Current-DateTime
 do Find-Date-Format
  
   evaluate $DT_FMT
       when = 'M'
            do Format-DateTime($AsOfToday,$currentdate,{DEFMDY},'','')
            break
       when = 'D'
            do Format-DateTime($AsOfToday,$currentdate,{DEFDMY},'','')
            break
       when-Other
            do Format-DateTime($AsOfToday,$currentdate,{DEFYMD},'','')
            break
     end-evaluate
     
  !do Format-DateTime ($AsOfToday, $currentdate, {DEFDATE},'','')
 
 do Get-RP-Lbl
 do Runcontrol-Input1
 do Select-Report-Data
 do STDAPI-TERM
End-Program


!****************************************************************************************
! Procedure: Select-Tie-Heading, Print-Tie-Heading                                      !
! Description: These 2 procedures would print the Tiebreaker id & desc in the Header    !
!***************************************************************************************!
Begin-Procedure Select-Tie-Heading
let #cnt = 0
BEGIN-SELECT
LY4B_HD.SEQ_NUM
LY4B_HD.TIEBREAKER_ID 
TIE_HD.DESCR 
TIE_HD.EFFDT
 let #cnt = #cnt +1 
 Do Print-Tie-Heading
FROM PS_HR_RUNCNTL_LY4B LY4B_HD,
          PS_HR_TIEBREAK_TBL TIE_HD
WHERE LY4B_HD.OPRID = $prcs_oprid
AND LY4B_HD.RUN_CNTL_ID = $prcs_run_cntl_id
AND TIE_HD.TIEBREAKER_ID = LY4B_HD.TIEBREAKER_ID
AND TIE_HD.EFFDT = (SELECT MAX(TIE_EFF.EFFDT)
                    FROM PS_HR_TIEBREAK_TBL TIE_EFF
                    WHERE TIE_EFF.TIEBREAKER_ID = TIE_HD.TIEBREAKER_ID
                    AND TIE_EFF.EFFDT <= $AsOfToday)
AND TIE_HD.EFF_STATUS = 'A'
ORDER BY LY4B_HD.SEQ_NUM
END-SELECT

End-Procedure !Select-Tie-Heading


Begin-Procedure Print-Tie-Heading
!Fetch Tie breaker description from Related Language table.
BEGIN-SELECT
TIE_HDL.DESCR
 let $tie_descr = &TIE_HDL.DESCR
FROM PS_HR_TIEBREAK_LNG TIE_HDL
WHERE TIEBREAKER_ID = &LY4B_HD.TIEBREAKER_ID
AND EFFDT = &TIE_HD.EFFDT
AND LANGUAGE_CD = $curr_language_cd
END-SELECT

if rtrim($tie_descr, ' ') = ''
 let $tie_descr = &TIE_HD.DESCR
end-if 

if #cnt  = 1
 print &LY4B_HD.TIEBREAKER_ID (8,21)
 print $tie_descr  (,36)
else 
 print &LY4B_HD.TIEBREAKER_ID (+1,21)
 print $tie_descr  (,36)
end-if
End-Procedure !Print-Tie-Heading
!-------------------------------------------------------------------------


!*************************************************************************!
! Procedure: Find-Date-Format                                             !
! Description: This procedure gets the date format as per user preference !
!*************************************************************************!
begin-procedure Find-Date-Format

let $REC_FOUND = 'N'
begin-SELECT
A.USER_OPTION_VALUE
  let $REC_FOUND = 'Y'
FROM PSUSERPRSNLOPTN A
WHERE A.OPRID = $prcs_oprid
  AND A.USEROPTN = 'DFRMT'
end-SELECT

IF $REC_FOUND = 'N'
  let $DT_FMT = 'M'
ELSE
  LET $DT_FMT = &A.USER_OPTION_VALUE
  LET $DT_FMT = RTRIM($DT_FMT,' ')
END-If

end-procedure !Find-Date-Format




!**********************************************************************!
! Procedure: Runcontrol-Input1                                         !
! Description: This procedure gets the Runcontrol table values         !
!**********************************************************************!
begin-procedure Runcontrol-Input1
begin-select
AS_OF_DATE !&AS_OF_DATE_IN
SETID &SETID_IN
LABOR_AGREEMENT &LABOR_AGREEMENT_IN
SENIORITY_DATE_ID &SENIORITY_DATE_ID_IN
SETID_DEPT &SETID_DEPT_IN
DEPARTMENT &DEPARTMENT_IN
SETID_LOCATION &SETID_LOCATION_IN
LOCATION &LOCATION_IN
LABOR_FACILITY_ID &LABOR_FACILITY_ID_IN
SETID_JOBCODE &SETID_JOBCODE_IN
JOBCODE &JOBCODE_IN
JOB_FAMILY &JOB_FAMILY_IN

 
 let $AS_OF_DATE_IN = &AS_OF_DATE
 
 
  evaluate $DT_FMT
      when = 'M'
           do Format-DateTime($AS_OF_DATE_IN,$AsOfDateIn,{DEFMDY},'','')
           break
      when = 'D'
           do Format-DateTime($AS_OF_DATE_IN,$AsOfDateIn,{DEFDMY},'','')
           break
      when-Other
           do Format-DateTime($AS_OF_DATE_IN,$AsOfDateIn,{DEFYMD},'','')
           break
     end-evaluate
     
 !do Format-DateTime ($AS_OF_DATE_IN, $AsOfDateIn, {DEFDATE},'','')
 
 !If As of Date is not entered in the screen, default it to Current date.
 if $AS_OF_DATE_IN = ' ' 
 Let $AS_OF_DATE_IN = $currentdate
 end-if

 Do Runcontrol-Input-Desc
FROM PS_HR_RUNCNTL_LY4
WHERE OPRID = $prcs_oprid
AND RUN_CNTL_ID = $prcs_run_cntl_id
end-select
end-procedure !Runcontrol-Input1


!**************************************************************************!
! Procedure: Runcontrol-Input-Desc                                         !
! Description: This procedure gets the Runcontrol table description values !
!**************************************************************************!
begin-procedure Runcontrol-Input-Desc

!-------Description is 1st fetched from related language table. If the Login language = Base Language then
!-------the description would not be present in the Related Lang table, in which case it should be 
!-------fetched from the Base table
BEGIN-SELECT
LAL.DESCR
 LET $LBRAGR_DESC = &LAL.DESCR
FROM PS_HR_LBR_AGR_LANG LAL
WHERE LABOR_AGREEMENT = &LABOR_AGREEMENT_IN
AND SETID = &SETID_IN
AND EFFDT = (SELECT MAX(EFFDT)
              FROM PS_HR_LBR_AGR_LANG
              WHERE LABOR_AGREEMENT = &LABOR_AGREEMENT_IN
              AND SETID = &SETID_IN
              and LANGUAGE_CD = $curr_language_cd
              AND EFFDT <= $AsOfToday)!$current-date)
and LANGUAGE_CD = $curr_language_cd
END-SELECT

IF rtrim($LBRAGR_DESC, ' ') = ''
BEGIN-SELECT
LA.DESCR
 LET $LBRAGR_DESC = &LA.DESCR
FROM PS_HR_LABOR_AGRMNT LA
WHERE LABOR_AGREEMENT = &LABOR_AGREEMENT_IN
AND SETID = &SETID_IN
AND EFFDT = (SELECT MAX(EFFDT)
             FROM PS_HR_LABOR_AGRMNT
             WHERE LABOR_AGREEMENT = &LABOR_AGREEMENT_IN
             AND SETID = &SETID_IN
             AND EFFDT <= $AsOfToday)!$current-date)
AND EFF_STATUS = 'A'
END-SELECT
END-IF



!-------Description is 1st fetched from related language table. We make use of the rellang.sqc
!-------which has appropriate procedure to fetch the description from the Related Lang table...
!-------If the descr is not present in the Related Lang table then it should be fetched from the Base table
if rtrim(&DEPARTMENT_IN,' ') <> ''
#define DEPT_TBL
BEGIN-SELECT
dept.DESCR
dept.EFFDT
 let $DEPT_DESC = &dept.DESCR
FROM PS_DEPT_TBL dept
WHERE dept.DEPTID = &DEPARTMENT_IN
AND dept.SETID = &SETID_DEPT_IN
AND dept.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_DEPT_TBL
                    WHERE DEPTID = &DEPARTMENT_IN
                    AND SETID = &SETID_DEPT_IN
                    AND EFFDT <= $AsOfToday)
AND dept.EFF_STATUS = 'A'
END-SELECT

Do Get_Related_DEPT_TBL(&DEPARTMENT_IN,&dept.EFFDT,&SETID_DEPT_IN)

if rtrim($DEPT_TBL-DESCR,' ') <> ''
let $DEPT_DESC = $DEPT_TBL-DESCR
end-if
end-if



!-------Description is 1st fetched from related language table. We make use of the rellang.sqc
!-------which has appropriate procedure to fetch the description from the Related Lang table...
!-------If the descr is not present in the Related Lang table then it should be fetched from the Base table
if rtrim(&LOCATION_IN,' ') <> ''
#define LOCATION_TBL
BEGIN-SELECT
LOC.DESCR
LOC.EFFDT
 let $LOC_DESC = &LOC.DESCR
FROM PS_LOCATION_TBL LOC
WHERE LOC.LOCATION = &LOCATION_IN
AND LOC.SETID = &SETID_LOCATION_IN
AND LOC.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_LOCATION_TBL
                    WHERE LOCATION = &LOCATION_IN
                    AND SETID = &SETID_LOCATION_IN
                    AND EFFDT <= $AsOfToday)
AND LOC.EFF_STATUS = 'A'
END-SELECT


Do Get_Related_LOCATION_TBL(&LOC.EFFDT,&LOCATION_IN,&SETID_LOCATION_IN)


if RTRIM($LOCATION_TBL-DESCR,' ') <> ''
let $LOC_DESC = $LOCATION_TBL-DESCR
end-if
end-if



!-------Description is 1st fetched from related language table. If the Login language = Base Language then
!-------the description would not be present in the Related Lang table, in which case it should be 
!-------fetched from the Base table
if rtrim(&LABOR_FACILITY_ID_IN,' ') <> ''

BEGIN-SELECT
FACIDL.DESCR
 let $FACID_DESC = &FACIDL.DESCR
FROM PS_HR_LBR_FAC_LNG FACIDL
WHERE LABOR_FACILITY_ID = &LABOR_FACILITY_ID_IN
AND EFFDT = (SELECT MAX(EFFDT)
              FROM PS_HR_LBR_FAC_LNG
              WHERE LABOR_FACILITY_ID = &LABOR_FACILITY_ID_IN
              and LANGUAGE_CD = $curr_language_cd
              AND EFFDT <= $AsOfToday)!$current-date)
and LANGUAGE_CD = $curr_language_cd
END-SELECT

IF rtrim($FACID_DESC,' ') = ''
BEGIN-SELECT
FACID.DESCR
 let $FACID_DESC = &FACID.DESCR
FROM PS_HR_LBR_FAC_TBL FACID
WHERE LABOR_FACILITY_ID = &LABOR_FACILITY_ID_IN
AND EFFDT = (SELECT MAX(EFFDT)
              FROM PS_HR_LBR_FAC_TBL
              WHERE LABOR_FACILITY_ID = &LABOR_FACILITY_ID_IN
              AND EFFDT <= $AsOfToday)!$current-date)
AND EFF_STATUS = 'A'
END-SELECT
END-IF
end-if



!-------Description is 1st fetched from related language table. We make use of the rellang.sqc
!-------which has appropriate procedure to fetch the description from the Related Lang table...
!-------If the descr is not present in the Related Lang table then it should be fetched from the Base table
if rtrim(&JOBCODE_IN,' ') <> ''
#define JOBCODE_TBL
BEGIN-SELECT
JOB1.DESCR
JOB1.EFFDT
 let $JOB_DESC = &JOB1.DESCR
FROM PS_JOBCODE_TBL JOB1
WHERE JOB1.JOBCODE = &JOBCODE_IN
AND JOB1.SETID = &SETID_JOBCODE_IN
AND JOB1.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_JOBCODE_TBL
                    WHERE JOBCODE = &JOBCODE_IN
                    AND SETID = &SETID_JOBCODE_IN
                    AND EFFDT <= $AsOfToday)
AND JOB1.EFF_STATUS = 'A'
END-SELECT

Do Get_Related_JOBCODE_TBL(&JOB1.EFFDT,&JOBCODE_IN,&SETID_JOBCODE_IN)

if RTRIM($JOBCODE_TBL-DESCR,' ') <> ''
let $JOB_DESC = $JOBCODE_TBL-DESCR
end-if
end-if



if rtrim(&JOB_FAMILY_IN,' ') <> ''
BEGIN-SELECT
JF.DESCR
 LET $JOBFAMILY_DESC = &JF.DESCR
FROM PS_JOB_FAMILY_TBL JF
WHERE JF.JOB_FAMILY = &JOB_FAMILY_IN
AND JF.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_JOB_FAMILY_TBL
                    WHERE JOB_FAMILY = JF.JOB_FAMILY
                    AND EFFDT <= $AsOfToday)
AND JF.EFF_STATUS = 'A'          
END-SELECT
end-if



BEGIN-SELECT
SDL.DESCRSHORT
 LET $SEN_DESCR = &SDL.DESCRSHORT
FROM PS_HR_SNR_DATE_LNG SDL
WHERE SENIORITY_DATE_ID = &SENIORITY_DATE_ID_IN
and EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_HR_SNR_DATE_LNG
                    WHERE SENIORITY_DATE_ID = &SENIORITY_DATE_ID_IN
                    and LANGUAGE_CD = $curr_language_cd
                    AND EFFDT <= $AsOfToday)
and LANGUAGE_CD = $curr_language_cd
END-SELECT

IF RTRIM($SEN_DESCR, ' ') = ''
BEGIN-SELECT
SD.DESCRSHORT
 LET $SEN_DESCR = &SD.DESCRSHORT
FROM PS_HR_SNR_DATE_TBL SD
WHERE SD.SENIORITY_DATE_ID = &SENIORITY_DATE_ID_IN
AND SD.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_HR_SNR_DATE_TBL
                    WHERE SENIORITY_DATE_ID = &SENIORITY_DATE_ID_IN
                    AND EFFDT <= $AsOfToday)
AND SD.EFF_STATUS = 'A'          
END-SELECT
END-IF
end-procedure !Runcontrol-Input-Desc


!**************************************************************************!
! Procedure: Select-Report-Data                                            !
! Description: This procedure selects the eligible employees from          !
!               PS_HR_ROST_CAND table                                      !
!**************************************************************************!
Begin-Procedure Select-Report-Data
Do Print-Report-Heading
Do Build-DynamicQuery
Do Runcontrol-Input2

 !Getting the values from the Teiselect array.
 let $tie1 = tieselect.tie(1)
 let $tie2 = tieselect.tie(2)
 let $tie3 = tieselect.tie(3)
 let $tie4 = tieselect.tie(4)
 let $tie5 = tieselect.tie(5)
 let $tie6 = tieselect.tie(6)
 let $tie7 = tieselect.tie(7)
 let $tie8 = tieselect.tie(8)
 let $tie9 = tieselect.tie(9)
 let $tie10 = tieselect.tie(10)
 
 
BEGIN-SELECT  
JOB.EMPLID
JOB.EMPL_RCD
JOB.EFFDT
JOB.DEPTID
JOB.LOCATION
JOB.LABOR_FACILITY_ID
JOB.JOBCODE
SNR.LABOR_SENIORITY_DT 

 !Dynamic select is included to support Informix db. The columns in Order by should be present in the Select
 !list for DB2. Since tie breaker fields are present in the order by, they are included in the select list
 !as dynamic select.
[$tie1] &tie1=CHAR
[$tie2] &tie2=CHAR
[$tie3] &tie3=CHAR
[$tie4] &tie4=CHAR
[$tie5] &tie5=CHAR
[$tie6] &tie6=CHAR
[$tie7] &tie7=CHAR
[$tie8] &tie8=CHAR
[$tie9] &tie9=CHAR
[$tie10] &tie10=CHAR

 Do Select-RecallRights
 Do Select-Descr
 Do Print-Report-Data
FROM [$from]
[$where]
ORDER BY [$orderby]
END-SELECT
End-Procedure !Select-Report-Data


!**************************************************************************!
! Procedure: Build-DynamicQuery                                            !
! Description: This procedure builds the basic FROM, WHERE, ORDER BY       !
!**************************************************************************!
Begin-Procedure Build-DynamicQuery

LET $from = 'PS_JOB JOB,
                    PS_HR_EE_SNR_DATES SNR'


LET $where = 'WHERE JOB.SETID_LBR_AGRMNT = ''' || rtrim(&SETID_IN,' ') || '''
                    and JOB.LABOR_AGREEMENT = ''' || rtrim(&LABOR_AGREEMENT_IN,' ') || '''
                    and JOB.EFFDT = (select MAX(EFFDT)
                                        from PS_JOB
                                        WHERE EMPLID = JOB.EMPLID
                                        AND EMPL_RCD = JOB.EMPL_RCD
                                        AND EFFDT <= ''' || $AS_OF_DATE_IN || ''' )
                   
                    and JOB.EFFSEQ = (select MAX(EFFSEQ)
                                      from PS_JOB
                                      where EMPLID = JOB.EMPLID
                                      and EMPL_RCD = JOB.EMPL_RCD
                                      AND EFFDT = JOB.EFFDT)
                    and JOB.EMPLID IN (select EMPLID
                                       from PS_HR_RCL_RIGHTS RCL
                                       where RCL.EMPLID = JOB.EMPLID
                                       and RCL.EMPL_RCD = JOB.EMPL_RCD
                                       and RCL.EFFDT = (SELECT MAX(EFFDT)
                                                       FROM PS_HR_RCL_RIGHTS
                                                       WHERE EMPLID = RCL.EMPLID
                                                       AND EMPL_RCD = RCL.EMPL_RCD
                                                       AND EFFDT <= ''' || $AS_OF_DATE_IN || ''')
                                       AND  RCL.LBR_RCL_EXPIRY_DT >= ''' || $AS_OF_DATE_IN || ''')'
                                     
 !PS_HR_EE_SNR_DATES table join
 LET $where = $where || 'AND SNR.EMPLID =  JOB.EMPLID
                         AND SNR.EMPL_RCD = JOB.EMPL_RCD
                         AND SNR.EFFDT = JOB.EFFDT
                         AND SNR.EFFSEQ = JOB.EFFSEQ
                         AND SNR.LABOR_AGREEMENT = JOB.LABOR_AGREEMENT
                         AND SNR.SENIORITY_DATE_ID = ''' || &SENIORITY_DATE_ID_IN || ''''

                    
if rtrim(&DEPARTMENT_IN,' ') <> ''
LET $where = $where || ' AND JOB.DEPTID = ''' || rtrim(&DEPARTMENT_IN,' ') || ''''
end-if


if rtrim(&LOCATION_IN,' ') <> ''
LET $where = $where || ' AND JOB.LOCATION = ''' || rtrim(&LOCATION_IN,' ') || ''''
end-if


if rtrim(&LABOR_FACILITY_ID_IN,' ') <> ''
LET $where = $where || ' AND JOB.LABOR_FACILITY_ID = ''' || rtrim(&LABOR_FACILITY_ID_IN,' ') || ''''
end-if


if rtrim(&JOBCODE_IN,' ') <> ''
LET $where = $where || ' AND JOB.JOBCODE = ''' || rtrim(&JOBCODE_IN,' ') || ''''
end-if


if rtrim(&JOB_FAMILY_IN,' ') <> ''
LET $from = $from || ' , PS_JOBCODE_TBL JBCD'
LET $where = $where || ' AND JOB.JOBCODE = JBCD.JOBCODE 
                              AND JBCD.JOB_FAMILY = ''' || rtrim(&JOB_FAMILY_IN,' ') || '''
                            !  AND JBCD.SETID = ''' || &SETID_JOBCODE_IN || ''' 
                              AND JBCD.EFF_STATUS = ''' || 'A' || '''
                              AND JBCD.EFFDT = (SELECT MAX(EFFDT)
                                                  FROM PS_JOBCODE_TBL
                                                  WHERE JOBCODE = JBCD.JOBCODE
                                                  AND SETID = JBCD.SETID
                                                  AND EFFDT <= ''' || $AsOfToday || ''' )'          
                                        
end-if

         
LET $orderby = ' SNR.LABOR_SENIORITY_DT '

End-Procedure !Build-DynamicQuery


!***********************************************************************************************!
! Procedure: Build-TieSortDynamicQuery                                                          !
! Description: This procedure adds on extra conditions (chosen from 2nd run ctrl table)         !
!                to basic query                                                                 !
!***********************************************************************************************!
Begin-Procedure Build-TieSortDynamicQuery
LET $PS = ' PS_'
LET $comma = ','
LET $STATUS = 'A'

IF rtrim($TIE_RECNAME_TMP,' ') = 'ADDRESS_SBR'
 LET $TIE_RECNAME_TMP = 'ADDRESSES'
END-IF


!If a particular record is already added to the FROM clause then it need
! not be again added through Tiebreaker Record too. If joined, it would result in Cartesian product.
IF rtrim($TIE_RECNAME_TMP,' ') <> 'JOB' AND rtrim($TIE_RECNAME_TMP,' ') <> 'HR_EE_SNR_DATES'

    LET $from = $from || $comma || $PS || rtrim($TIE_RECNAME_TMP,' ') || '  ' || rtrim($TIE_RECNAME_TMP,' ')
    LET $where = $where || ' AND ' || rtrim($TIE_RECNAME_TMP,' ') || '.EMPLID = JOB.EMPLID'


    
    if rtrim($TIE_RECNAME_TMP,' ') = 'NAMES'
    LET $NAME_TYPE = 'PRI'
    LET $where = $where || ' AND ' || rtrim($TIE_RECNAME_TMP,' ') || '.NAME_TYPE = ''' || $NAME_TYPE || ''''
    LET $where = $where || ' AND ' || rtrim($TIE_RECNAME_TMP,' ') || '.EFF_STATUS = ''' || $STATUS || ''''
    end-if


    
    if rtrim($TIE_RECNAME_TMP,' ') = 'PERS_NID'
    LET $PRIMARY_NID = 'Y'
    LET $where = $where || ' AND ' || rtrim($TIE_RECNAME_TMP,' ') || '.PRIMARY_NID = ''' || $PRIMARY_NID || ''''
    end-if



    if rtrim($TIE_RECNAME_TMP,' ') = 'ADDRESSES' 
    LET $ADDRESS_TYPE = 'HOME'
    LET $where = $where || ' AND ' || rtrim($TIE_RECNAME_TMP,' ') || '.ADDRESS_TYPE = ''' || $ADDRESS_TYPE || ''''
    LET $where = $where || ' AND ' || rtrim($TIE_RECNAME_TMP,' ') || '.EFF_STATUS = ''' || $STATUS || ''''
    end-if


    if rtrim($TIE_RECNAME_TMP,' ') = 'EMPLOYMENT' or rtrim($TIE_RECNAME_TMP,' ') = 'CURRENT_JOB' or rtrim($TIE_RECNAME_TMP,' ') = 'JOB_LABOR' 
    OR rtrim($TIE_RECNAME_TMP,' ') = 'PER_ORG_ASGN'
    LET $where = $where || ' AND ' || rtrim($TIE_RECNAME_TMP,' ') || '.EMPL_RCD = JOB.EMPL_RCD'
    end-if



    if rtrim($TIE_RECNAME_TMP,' ') = 'PERS_DATA_EFFDT' or rtrim($TIE_RECNAME_TMP,' ') = 'CURRENT_JOB' or rtrim($TIE_RECNAME_TMP,' ') = 'JOB_LABOR'
     OR rtrim($TIE_RECNAME_TMP,' ') = 'NAMES' OR rtrim($TIE_RECNAME_TMP,' ') = 'ADDRESSES' 
    LET $where = $where || ' AND ' || rtrim($TIE_RECNAME_TMP,' ') || '.EFFDT = (SELECT MAX(EFFDT)
                                                                            FROM ' || $PS || rtrim($TIE_RECNAME_TMP,' ') ||
                                                                            ' WHERE EMPLID = ' || rtrim($TIE_RECNAME_TMP,' ') || '.EMPLID
                                                                            AND EFFDT <= ''' || $AsOfToday || ''' )'          
    end-if


    if rtrim($TIE_RECNAME_TMP,' ') = 'CURRENT_JOB' or rtrim($TIE_RECNAME_TMP,' ') = 'JOB_LABOR'
    
    LET $where = $where || ' AND ' || rtrim($TIE_RECNAME_TMP,' ') || '.EFFSEQ = (SELECT MAX(EFFSEQ)
                                                                              FROM ' || $PS || rtrim($TIE_RECNAME_TMP,' ') ||
                                                                            ' WHERE EMPLID = ' || rtrim($TIE_RECNAME_TMP,' ') || '.EMPLID
                                                                               AND EFFDT = ' || rtrim($TIE_RECNAME_TMP,' ') || '.EFFDT )'
    end-if
END-IF

if &TIE_LBR_DESC_FLG = 'Y'
LET $sort = ' DESC'
else
LET $sort = ''
end-if


LET $orderby  = rtrim($orderby,' ') || $comma || ' ' || rtrim($TIE_RECNAME_TMP,' ') || '.' || rtrim(&TIE_FIELDNAME,' ') || $sort


!To support Informix db. The columns in Order by should be present in the Select list. 
!Since tie breaker fields are present in the order by, they should be included in the select 
!list as dynamic select. Hence the Tie breaker fields are got in an array.
LET TIESELECT.TIE(#TIECNT) = rtrim($TIE_RECNAME_TMP,' ') || '.' || rtrim(&TIE_FIELDNAME,' ')

!SHOW  $FROM '111'
!SHOW $WHERE '222'
!SHOW $ORDERBY '333'
End-Procedure !Build-TieSortDynamicQuery


!**********************************************************************************************!
! Procedure: Runcontrol-Input2                                                                 !
! Description: This procedure gets the value from PS_HR_RUNCNTL_LY4B (2nd Run control table)   !
!**********************************************************************************************!
Begin-Procedure Runcontrol-Input2
 LET #TIECNT = 0
BEGIN-SELECT
LY4B.SEQ_NUM
LY4B.TIEBREAKER_ID &TIEBREAKER_ID_IN
TIE.DESCR &TIE_DESCR
TIE.RECNAME &TIE_RECNAME
TIE.FIELDNAME &TIE_FIELDNAME
LY4B.LBR_DESC_FLG &TIE_LBR_DESC_FLG
 LET $TIE_RECNAME_TMP = &TIE_RECNAME
 LET #TIECNT = #TIECNT +1 
 Do Build-TieSortDynamicQuery
FROM PS_HR_RUNCNTL_LY4B LY4B,
          PS_HR_TIEBREAK_TBL TIE
WHERE LY4B.OPRID = $prcs_oprid
AND LY4B.RUN_CNTL_ID = $prcs_run_cntl_id
AND TIE.TIEBREAKER_ID = LY4B.TIEBREAKER_ID
AND TIE.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_HR_TIEBREAK_TBL
                    WHERE TIEBREAKER_ID = TIE.TIEBREAKER_ID
                    AND EFFDT <= $AsOfToday)
AND TIE.EFF_STATUS = 'A'
ORDER BY LY4B.SEQ_NUM
END-SELECT
End-Procedure !Runcontrol-Input2


!**************************************************************************!
! Procedure: Select-RecallRights                                           !
! Description: This procedure selects the recall rights infn               !
!**************************************************************************!
Begin-Procedure Select-RecallRights
BEGIN-SELECT
RCL.EFFDT
RCL.LBR_RECALL_REASON
RCL.LBR_RCL_EXPIRY_DT,
RCL.LBR_ROSTER_ID
FROM PS_HR_RCL_RIGHTS RCL
WHERE RCL.EMPLID = &JOB.EMPLID
AND RCL.EMPL_RCD = &JOB.EMPL_RCD
and RCL.EFFDT = (SELECT MAX(EFFDT)
                 FROM PS_HR_RCL_RIGHTS
                 WHERE EMPLID = RCL.EMPLID
                 AND EMPL_RCD = RCL.EMPL_RCD
                 AND EFFDT <= $AS_OF_DATE_IN)
AND  RCL.LBR_RCL_EXPIRY_DT >= $AS_OF_DATE_IN
END-SELECT
End-Procedure !Select-RecallRights


!*******************************************************************************************!
! Procedure: Select-Descr                                                                   !
! Description: This procedure selects Job family,employee name, dept & location description !
!*******************************************************************************************!
Begin-Procedure Select-Descr

!-----SELECT which fetches the Job Family of a Job code--------!
BEGIN-SELECT
JB.JOB_FAMILY
FROM PS_JOBCODE_TBL JB
WHERE JB.JOBCODE = &JOB.JOBCODE
!AND JB.SETID = &SETID_IN !CHECK SETID
AND JB.EFFDT = (SELECT MAX(EFFDT)
                    FROM PS_JOBCODE_TBL
                    WHERE JOBCODE = &JOB.JOBCODE
                    AND SETID = JB.SETID
                    AND EFFDT <= $AsOfToday)
AND JB.EFF_STATUS = 'A'
END-SELECT


!-----SELECT which fetches the Employee Name of an EmplID--------!
BEGIN-SELECT
ENAME.NAME
 let $EMP_NAME = &ENAME.NAME
FROM PS_PERSON_NAME ENAME
WHERE ENAME.EMPLID = &JOB.EMPLID
END-SELECT

End-Procedure !Select-Descr


!**************************************************************************!
! Procedure: Print-Report-Heading                                          !
! Description: This procedure prints the column headings                   !
!**************************************************************************!
Begin-Procedure Print-Report-Heading
!-------- 1st List-------
print $lbl_emplid (+2,1) !11
print $lbl_emplname (,14) !30 + 20
print $lbl_empl (,62)     !4
print $lbl_dept (,68) !10
print $lbl_location (,80) !10
print $lbl_facility (,92) !10
print $lbl_jobcode (,104) !10
print $lbl_job (,113) !6
print $lbl_recall (,122) !10
print $lbl_reason (,132) !(,130+4) !10
print $lbl_recall (,145) !(,130+14) !10
print $lbl_roster (,158) !(,130+24)
print $SEN_DESCR (,171) !(,130+37)


print $lbl_emplrec (+1,62)
print $lbl_family (,113)
print $lbl_recalleffdt (,122)
print $lbl_rsncode (,132)
print $lbl_recallexpiry (,145)
print $lbl_id (,158)


End-Procedure !Print-Report-Heading


!**************************************************************************!
! Procedure: Print-Report-Data                                             !
! Description: This procedure prints the report data                       !
!**************************************************************************!
Begin-Procedure Print-Report-Data
          !Total No. of rows per page = 70. If Report data is supposed to be printed 
          ! at Line no = 70, then this data would be printed from the next page only.
          
          
          let #lineno = #current-line
          if #lineno >= 67
          new-page
          Do  Print-Report-Heading
          end-if
          
print &JOB.EMPLID (+2,1)
print $EMP_NAME (,14)
print &JOB.EMPL_RCD (,62)
print &JOB.DEPTID (,68)
print &JOB.LOCATION (,80)
print &JOB.LABOR_FACILITY_ID (,92)
print &JOB.JOBCODE (,104)
print &JB.JOB_FAMILY (,113)


 evaluate $DT_FMT
     when = 'M'
          do Format-DateTime(&RCL.EFFDT,$recall_effdate,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime(&RCL.EFFDT,$recall_effdate,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime(&RCL.EFFDT,$recall_effdate,{DEFYMD},'','')
          break
     end-evaluate
     
   !do Format-DateTime(&RCL.EFFDT, $recall_effdate, {DEFDATE}, '', '')
   
   
print $recall_effdate (,122)  !edit 'dd/mm/yyyy'

print &RCL.LBR_RECALL_REASON (,132)

 evaluate $DT_FMT
     when = 'M'
          do Format-DateTime(&RCL.LBR_RCL_EXPIRY_DT,$recall_expirydate,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime(&RCL.LBR_RCL_EXPIRY_DT,$recall_expirydate,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime(&RCL.LBR_RCL_EXPIRY_DT,$recall_expirydate,{DEFYMD},'','')
          break
     end-evaluate

 !do Format-DateTime(&RCL.LBR_RCL_EXPIRY_DT, $recall_expirydate, {DEFDATE}, '', '')
 
 
print $recall_expirydate (,145) !edit 'dd/mm/yyyy'


print &RCL.LBR_ROSTER_ID (,158)

evaluate $DT_FMT
     when = 'M'
          do Format-DateTime(&SNR.LABOR_SENIORITY_DT,$lbr_senioritydate,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime(&SNR.LABOR_SENIORITY_DT,$lbr_senioritydate,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime(&SNR.LABOR_SENIORITY_DT,$lbr_senioritydate,{DEFYMD},'','')
          break
     end-evaluate
     
 !do Format-DateTime(&SNR.LABOR_SENIORITY_DT, $lbr_senioritydate, {DEFDATE}, '', '')
 
print $lbr_senioritydate  (,171) !edit 'dd/mm/yyyy'
End-Procedure !Print-Report-Data


!***********************************************************************
!-----------------Procedure: Getting Report Labels---------------------*
!Description: This Procedure gets the Report labels from the Database. *
!***********************************************************************
Begin-Procedure Get-RP-Lbl

let $ReportID = 'HR_UHRLY'
do Init_Report_Translation($ReportID,$curr_language_cd) 
do Append_Report_Translation ($ReportID)

do Get_Field_Information ('HR_UHRLY','HR_CAND_LST',$lbl_candlst,#DW1)
do Get_Field_Information ('HR_UHRLY','REPORTNAME',$lbl_Reportname,#DW1)
do Get_Field_Information ('HR_UHRLY','PEOPLESOFT',$lbl_Peoplesoft,#DW1)
do Get_Field_Information ('HR_UHRLY','HR_CAND_RPT',$lbl_Candreport,#DW1)
do Get_Field_Information ('HR_UHRLY','PAGE_NO',$lbl_Pageno,#DW1)
do Get_Field_Information ('HR_UHRLY','RUN DATE',$lbl_Rundate,#DW1)
do Get_Field_Information ('HR_UHRLY','RUN_TIME',$lbl_Runtime,#DW1)

do Get_Field_Information ('HR_UHRLY','ASOFDATE',$lbl_AsOfDate,#DW1)
do Get_Field_Information ('HR_UHRLY','LABOR_AGREEMENT',$lbl_LbrAgrmnt,#DW1)
do Get_Field_Information ('HR_UHRLY','SENIORITY_DATE_ID',$lbl_SnrDate,#DW1)
do Get_Field_Information ('HR_UHRLY','TIEBREAKER_ID',$lbl_Tiebrk,#DW1)

do Get_Field_Information ('HR_UHRLY','DEPT',$lbl_dept_hd,#DW1)
do Get_Field_Information ('HR_UHRLY','LOCATION',$lbl_location_hd,#DW1)
do Get_Field_Information ('HR_UHRLY','FACILITY',$lbl_facility_hd,#DW1)
do Get_Field_Information ('HR_UHRLY','JOBCODE',$lbl_jobcode_hd,#DW1)
do Get_Field_Information ('HR_UHRLY','JOB_FAMILY',$lbl_jobfamily_hd,#DW1)


do Get_Field_Information ('HR_UHRLY','EMPLOYEE_ID',$lbl_emplid,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPLOYEE',$lbl_emplname,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPL',$lbl_empl,#DW1)
do Get_Field_Information ('HR_UHRLY','REC',$lbl_emplrec,#DW1)
do Get_Field_Information ('HR_UHRLY','DEPARTMENT',$lbl_dept,#DW1)
do Get_Field_Information ('HR_UHRLY','LOCATIONCODE',$lbl_location,#DW1)
do Get_Field_Information ('HR_UHRLY','FACILITY1',$lbl_facility,#DW1)
do Get_Field_Information ('HR_UHRLY','JOBCODE1',$lbl_jobcode,#DW1)
do Get_Field_Information ('HR_UHRLY','JOBFAMILY',$lbl_job,#DW1)
do Get_Field_Information ('HR_UHRLY','JOBFAMILY1',$lbl_family,#DW1)
do Get_Field_Information ('HR_UHRLY','RECALL',$lbl_recall,#DW1)
do Get_Field_Information ('HR_UHRLY','RECALLEFFDT',$lbl_recalleffdt,#DW1)
do Get_Field_Information ('HR_UHRLY','REASON',$lbl_reason,#DW1)
do Get_Field_Information ('HR_UHRLY','REASON1',$lbl_rsncode,#DW1)
do Get_Field_Information ('HR_UHRLY','RECALL',$lbl_recall,#DW1)
do Get_Field_Information ('HR_UHRLY','RECALLEXP',$lbl_recallexpiry,#DW1)
do Get_Field_Information ('HR_UHRLY','ROSTER',$lbl_roster,#DW1)
do Get_Field_Information ('HR_UHRLY','ID',$lbl_id,#DW1)
End-Procedure !Get-RP-Lbl

        
!***********************************************************************!
!-----------------------------SQCs--------------------------------------!
!***********************************************************************!
#include 'stdapi.sqc'      !Routine to update run status
#include 'prcsapi.sqc'
#include 'prcsdef.sqc'
#include 'hrsecty.sqc'
#Include 'curdttim.sqc'    !Get-Current-DateTime procedure
#Include 'datetime.sqc'    !Routines for date and time formatting
#Include 'number.sqc'      !Routines to format numbers
#Include 'sqrtrans.sqc'

#include 'prcslng.sqc'   !Gives Language Code
#include 'rellang.sqc'   !Gives Description from Related Lang tables