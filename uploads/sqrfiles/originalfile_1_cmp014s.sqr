!**************************************************
!  CMP014s:  Update Seniority Eligibility Report  *
!**************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:11:36:15                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!Procedures ending with "Scrty" and Record alias ending with "SC" are  *
!using SQR Security.                                                   *
!***********************************************************************
#Include 'setenv.sqc'    !Set environment
Begin-Setup
  #Include 'ptset02.sqc'   !Printer and page-size initialization
End-Setup

!**********************************************
! Report                                      *
!**********************************************
begin-report
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Init-Report

   if $prcs_oprid=''
      goto last2
   end-if
 
   do Process-Main
 
   do Reset
   do Stdapi-Term
last2:
end-report


!**********************************************
! Heading                                     *
!**********************************************
begin-heading 6
   do Get_Field_Information ('CMP014S', 'REPORT_TITLE', $REPORTTITLE, #DW)

   !************************
   ! Print Standard Header *
   !************************
   #Include 'stdhdgtr.sqc'

   !*******************
   ! Print As-Of-Date *
   !*******************
   do Append_Report_Translation ('STDHDGHR')
   if $Program_Read = 'Y'
      do Get_Field_Information ('STDHDGHR', 'ASOFDATE', $DATE,  #DW)
   end-if
   print $DATE    (3,1)
   do Format-DateTime($AsOfDate, $out, {DEFDATE}, '', '')
   print $out (,+1)

   !*******************************
   ! Print Run Control Parameters *
   !*******************************
   do Get_Field_Information ('PER044', 'PARAMETERS', $PARAMETERS_LBL, #DW)
   print $PARAMETERS_LBL                 (  4,  1)

   Evaluate &RUN_CNTL_HR.PROCESS_BY
      When = 'A'
         do Get_Field_Information ('PER044', 'ALL', $ALL_LBL, #DW)
         Print $ALL_LBL                  (  0, +1)
         Break
      When = 'G'
         do Get_Field_Information ('PER044', 'GROUPS', $GROUPS_LBL, #DW)
         Print $GROUPS_LBL               (  0, +1)
         Break
      When = 'R'
         do Get_Field_Information ('PER044', 'RATE_CODES', $RATE_CODES_LBL, #DW)
         Print $RATE_CODES_LBL           (  0, +1)
         Break
   End-Evaluate

   If &RUN_CNTL_HR.UPD_FUTURE_ROW_SW = 'Y'
      do Get_Field_Information ('HR', 'UPD_FUTURE_ROWS', $UPD_FUTURE_ROWS_LBL, #DW)
      Print $UPD_FUTURE_ROWS_LBL         (  0, +1)
   End-If

   If &RUN_CNTL_HR.CMP_DONT_ABSORB = 'Y'
      do Get_Field_Information ('HR', 'DONT_ABSORB_CHG', $DONT_ABSORB_CHG_LBL, #DW)
      Print $DONT_ABSORB_CHG_LBL         (  0, +1)
   End-If

   !*******************************
   ! Print Employee List Headings *
   !*******************************
   do Get_Field_Information ('HR', 'EMPLID', $EMPLID_LBL, #DW)
   do Get_Field_Information ('HR', 'NAME', $NAME_LBL, #DW)
   do Get_Field_Information ('HR', 'EMPL_RCD', $EMPL_RCD_LBL, #DW)
   do Get_Field_Information ('HR', 'EFFDT1', $EFFDT1_LBL, #DW)
   do Get_Field_Information ('HR', 'EFFDT2', $EFFDT2_LBL, #DW)
   do Get_Field_Information ('CMP016', 'EFF_SEQ', $EFF_SEQ_LBL, #DW)
   do Get_Field_Information ('HR', 'ACTION', $ACTION_LBL, #DW)
   do Get_Field_Information ('HR', 'ACTION_REASON1', $ACTION_REASON1_LBL, #DW)
   do Get_Field_Information ('HR', 'ACTION_REASON2', $ACTION_REASON2_LBL, #DW)
   do Get_Field_Information ('HR', 'SENIORITY', $SENIORITY_LBL, #DW)
   do Get_Field_Information ('HR', 'COMP_RATECD', $COMP_RATECD_LBL, #DW)
   do Get_Field_Information ('FGHR005', 'AMOUNTS', $AMOUNTS_LBL, #DW)
   print $EMPLID_LBL                     (  6,  1, 11)
   print $NAME_LBL                       (  6, 13, 35)
   print $EMPL_RCD_LBL                   (  6, 49,  3)
   print $EFFDT1_LBL                     (  6, 54, 10)
   print $EFFDT2_LBL                     (  7, 54, 10)
   print $EFF_SEQ_LBL                    (  6, 66,  3)
   print $ACTION_LBL                     (  6, 72, 10)
   print $ACTION_REASON1_LBL             (  6, 84)
   print $ACTION_REASON2_LBL             (  0, +1)
   print $SENIORITY_LBL                  (  6,117,  9)
   print $COMP_RATECD_LBL                (  7,117,  9)
   print $AMOUNTS_LBL                    (  6,139,  8)
   print $SENIORITY_LBL                  (  6,163,  9)
   print $ACTION_LBL                     (  7,163,  6)

end-heading


!**********************************************
! Init-Report                                 *
!**********************************************
begin-procedure Init-Report

   move 'CMP014S' to $ReportID
   move 'W' to $ReportMsgType  !Warning

   do Stdapi-Init

   if $prcs_oprid=''
      display ''
      display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
      display ''
      goto last1
   end-if

   if $prcs_process_instance = ''
      do Ask-As-Of-Date
   else
      do Select-Parameters
   end-if

   do Init_Printer
   do Init_Report_Translation ($ReportID, $language_cd)
   do Append_Report_Translation ('HR')
   do Append_Report_Translation ('CMP016')
   do Append_Report_Translation ('PER044')
   do Append_Report_Translation ('FGHR005')
last1:
end-procedure


!**********************************************
! Get-Values                                  *
!**********************************************
begin-procedure Get-Values

   let $language_cd = $prcs_language_cd

   let $AsOfDate = &RUN_CNTL_HR.ASOFDATE

   if $AsOfDate = ''
      move $AsOfToday to $AsOfDate
   end-if

end-procedure


!**********************************************
! Process-Main                                *
!**********************************************
begin-procedure Process-Main

   !**********************************************
   ! Get Field Label/Value Strings, needed later *
   !**********************************************
   do Get_Field_Information ('HR', 'DELETE', $DELETE_VALUE, #DW)
   do Get_Field_Information ('HR', 'SALARY_POINTS', $SALARY_POINTS_LBL, #DW)
   do Get_Field_Information ('HR', 'PERCENT', $PERCENT_LBL, #DW)

!*******************************
! For each new/updated Job row *
!*******************************
begin-SELECT DISTINCT
SEN1.EMPLID                  ( +1,  1, 12)
!*******************BEGIN SQR NAME DISPLAY CHANGE***************************************** 
    !PERS.NAME                       (  0, 13, 36)
PERS.NAME_DISPLAY                    (  0, 13, 36)
!*******************ENDSQR NAME DISPLAY CHANGE********************************************
SEN1.EMPL_RCD                (  0, 50,  3) edit 999
SEN1.JOB_EFFDT

   ! **************************
   ! Print Job Effective Date *
   ! **************************
   Move 1 to $Year4
   do Format-DateTime(&SEN1.JOB_EFFDT, $out, {DEFDATE}, '', '')
   print $out                (  0, 55, 10)

SEN1.JOB_EFFSEQ              (  0, 66,  3) edit 999
SEN1.ACTION                  
SEN1.ACTION_REASON           

   ! ************************
   ! Print Action Xlatvalue *
   ! ************************
   move 'ACTION'  to $FieldName
   move &SEN1.ACTION to $FieldValue
   do Read-Translate-Table
   print $XlatShortName      (  0, 72, 10)

   ! ***************************
   ! Print Action Reason Descr *
   ! ***************************
   move &SEN1.ACTION         to $Action
   move &SEN1.ACTION_REASON  to $Action_Reason
   move &SEN1.JOB_EFFDT      to $As-Of-Date
   do Get-Action-Reason
   print $Action_Reason_Descr (  0, 84, 30)

   ! ****************************
   ! Print Seniority Components *
   ! ****************************
   do Print-Seniority-Components

FROM PS_HR_CMP014_1_TAO SEN1,
     PS_PERSON_NAME PERS
WHERE SEN1.OPRID = &RUN_CNTL_HR.OPRID
  AND SEN1.RUN_CNTL_ID = &RUN_CNTL_HR.RUN_CNTL_ID
  AND SEN1.EMPLID = PERS.EMPLID
end-SELECT

end-procedure


!************************************************
! Procedure Print-Seniority-Components          *
! Print the Seniority Components of an employee *
!************************************************
begin-procedure Print-Seniority-Components

   let #SEN_COUNT = 0

begin-SELECT
SEN2.COMP_RATECD
SEN2.COMP_EFFSEQ

   ! *****************
   ! Print Rate Code *
   ! *****************
   if #SEN_COUNT = 0
      print &SEN2.COMP_RATECD            (  0,117,  9)
   else
      print &SEN2.COMP_RATECD            ( +1,117,  9)
   end-if
   Add 1 to #SEN_COUNT

   ! *****************************
   ! Print the Seniority Amounts *
   ! *****************************
   do Print-Seniority-Amounts

   ! ****************************
   ! Print the Seniority Action *
   ! ****************************
   print $DELETE_VALUE                   (  0,163)

FROM PS_HR_CMP014_1_TAO SEN2
WHERE SEN2.OPRID = &RUN_CNTL_HR.OPRID
  AND SEN2.RUN_CNTL_ID = &RUN_CNTL_HR.RUN_CNTL_ID
  AND SEN2.EMPLID = &SEN1.EMPLID
  AND SEN2.EMPL_RCD = &SEN1.EMPL_RCD
  AND SEN2.JOB_EFFDT = &SEN1.JOB_EFFDT
  AND SEN2.JOB_EFFSEQ = &SEN1.JOB_EFFSEQ
end-SELECT

end-procedure


!****************************************************
! Procedure Print-Seniority-Amounts                 *
! Prints the Update Action of a Seniority Component *
!****************************************************
begin-procedure Print-Seniority-Amounts

begin-SELECT
J1.EMPLID
J1.EMPL_RCD
J1.EFFDT
J1.EFFSEQ
C1.COMP_RATECD
C1.COMP_EFFSEQ
C1.COMPRATE
C1.CURRENCY_CD
C1.COMP_FREQUENCY
C1.COMP_PCT
C1.COMP_RATE_POINTS

   ! ******************************************
   ! Print the Amounts depending on Rate Type *
   ! ******************************************
   do Get-Rate-Code-Type
   evaluate $Rate_Type
      when = 'FA'
      when = 'HR'
      when = 'HF'
         print &C1.COMPRATE             (  0,127) edit 'b99999999999.999999'
         print &C1.CURRENCY_CD          (  0, +1)
         do Det-Annual-Factor(&C1.COMP_FREQUENCY, $AsOfDate, $freq_descrshort, $dummy1, #dummy2, $dummy3)
         print $freq_descrshort           (  0, +1)
         break
      when = 'PC'
         print &C1.COMP_PCT             (  0,137) edit '999.999'
         print $PERCENT_LBL               (  0, +1)
         break
      when = 'PT'
         print &C1.COMP_RATE_POINTS     (  0,131) edit '99999'
         print $SALARY_POINTS_LBL         (  0, +1)
         do Det-Annual-Factor(&C1.COMP_FREQUENCY, $AsOfDate, $freq_descrshort, $dummy1, #dummy2, $dummy3)
         print $freq_descrshort           (  0, +1)
         break
   end-evaluate

FROM PS_JOB J1,
     PS_COMPENSATION C1
WHERE J1.EMPLID = &SEN1.EMPLID
  AND J1.EMPL_RCD = &SEN1.EMPL_RCD
  AND J1.EFFDT = (SELECT MAX(J2.EFFDT)
                    FROM PS_JOB J2
                   WHERE J2.EMPLID = J1.EMPLID
                     AND J2.EMPL_RCD = J1.EMPL_RCD
                     AND J2.EFFDT <= &SEN1.JOB_EFFDT)
  AND J1.EFFSEQ = (SELECT MAX(J3.EFFSEQ)
                     FROM PS_JOB J3
                    WHERE J3.EMPLID = J1.EMPLID
                      AND J3.EMPL_RCD = J1.EMPL_RCD
                      AND J3.EFFDT = J1.EFFDT
                      AND J3.EFFSEQ <= &SEN1.JOB_EFFSEQ)
  AND C1.EMPLID = J1.EMPLID
  AND C1.EMPL_RCD = J1.EMPL_RCD
  AND C1.EFFDT = J1.EFFDT
  AND C1.EFFSEQ = J1.EFFSEQ
  AND C1.COMP_RATECD = &SEN2.COMP_RATECD
  AND C1.COMP_EFFSEQ = &SEN2.COMP_EFFSEQ
end-SELECT

end-procedure


!***************************************************
! Procedure Get-Rate-Code-Type                     *
! Gets the Rate Code Type of a Seniority Component *
!***************************************************
begin-procedure Get-Rate-Code-Type

   let $Rate_Type = ''

begin-SELECT
RC1.COMP_RATE_TYPE

   let $Rate_Type = &RC1.COMP_RATE_TYPE

FROM PS_COMP_RATECD_TBL RC1
WHERE RC1.COMP_RATECD = &SEN2.COMP_RATECD
  AND RC1.EFF_STATUS = 'A'
  AND RC1.EFFDT = (SELECT MAX(RC2.EFFDT)
                     FROM PS_COMP_RATECD_TBL RC2
                    WHERE RC2.COMP_RATECD = &SEN2.COMP_RATECD
                      AND RC2.EFFDT <= &SEN1.JOB_EFFDT)
end-SELECT

end-procedure


#Include 'hrrnctl1.sqc'  !Get run control parameter values
#Include 'hrgetval.sqc'  !Get values mask routines
#Include 'askaod.sqc'    !Ask As Of Date input
#Include 'frquency.sqc'  !Get Frequency Description
#Include 'getactrs.sqc'  !Get-Action-Reason procedure

#Include 'readxlat.sqc'  !get translates for fieldname, value
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to update run status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'

