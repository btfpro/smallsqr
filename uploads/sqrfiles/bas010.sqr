!*****************************************
!  BAS010 : Ineligible Participant Report
!*****************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:08:35:10                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'

Begin-Setup
  #Include 'ptpsl177.sqc'
End-Setup

#define col_sched_id             6      !Schedule ID
#define col_emplid              12      !Emplid or Dependent ID
#define col_name                25      !Employee or Dependent Name
#define col_event_id             5      !Event ID
#define col_benefit_rcd          7      !Benefit Rcd
#define col_process_status      10      !BAS Process Status
#define col_date                10      !Any Date
#define col_state_country        7      !Country/State

#define col_empl_rcd             4      !Empl Rcd
#define col_union_cd             5      !Union Code
#define col_std_hrs              7      !Standard Hours
#define col_fte                  8      !FTE
#define col_ben_status          10      !Benefits Status
#define col_empl_class           5      !Employee Class
#define col_empl_type            4      !Employee Type
#define col_reg_temp             4      !Regular or Temp
#define col_full_part_time       4      !Full or Part Time
#define col_company              7      !Company Name
#define col_paygroup             3      !Pay Group
#define col_desc_short          10      !Short Descriptions
#define col_location            10      !Location
#define col_officer_cd           7      !Officer Code
#define col_flsa                 4      !FLSA Status
#define col_regn                 4      !Reg Region
#define col_salplan              7      !Sal Plan
#define col_grade                5      !Grade
#define col_business_unit        8      !Business Unit

#define col_elig_cnfig          10      !Eligibility Configuration

#define col_sep                  1      !Column Separator

!**********************************
Begin-Program
!**********************************

  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Process-Main

  display 'Report Ended at: ' noline
  do display-time

  do Reset
  do StdAPI-Term

End-Program

!**********************************
Begin-Procedure Init-Report
!**********************************

  do Init-DateTime
  do Get-Current-DateTime
  do Init-Number
  do StdAPI-Init

  let $ReportID    = 'BAS010'
  do Get-Report-Language
  let $ReportTitle  = $BAS010-REPORTTITLE
  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  let #DataOffset = 60

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

End-Procedure

!**********************************
Begin-Procedure Ask-Values
!**********************************

  do Ask-Schedule-Id

End-Procedure

!**********************************
Begin-Procedure Get-Values
!**********************************

  do Select-Parameters
  do Get-Schedule-Id

End-Procedure

!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BAS010 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('BAS010', 'REPORT_TITLE', $BAS010-REPORTTITLE, #CW)
  do Get_Field_Information ('BAS010', 'BENEFITS',     $BAS010-BENEFITS,    #CW)
  do Get_Field_Information ('BAS010', 'SERVICE',      $BAS010-SERVICE,     #CW)
  do Get_Field_Information ('BAS010', 'OFFICER',      $BAS010-OFFICER,     #CW)
  do Get_Field_Information ('BAS010', 'UNION',        $BAS010-UNION,       #CW)
  do Get_Field_Information ('BAS010', 'STD',          $BAS010-STD,         #CW)
  do Get_Field_Information ('BAS010', 'FTE',          $BAS010-FTE,         #CW)
  do Get_Field_Information ('BAS010', 'NBR',          $BAS010-NBR,         #CW)
  do Get_Field_Information ('BAS010', 'PART',         $BAS010-PART,        #CW)
  do Get_Field_Information ('BAS010', 'TEMP',         $BAS010-TEMP,        #CW)
  do Get_Field_Information ('BAS010', 'REG',          $BAS010-REG,         #CW)
  do Get_Field_Information ('BAS010', 'HRS',          $BAS010-HRS,         #CW)
  do Get_Field_Information ('BAS010', 'GRP',          $BAS010-GRP,         #CW)
  do Get_Field_Information ('BAS010', 'ELCN1',        $BAS010-ELCN1,       #CW)
  do Get_Field_Information ('BAS010', 'ELCN2',        $BAS010-ELCN2,       #CW)
  do Get_Field_Information ('BAS010', 'ELCN3',        $BAS010-ELCN3,       #CW)
  do Get_Field_Information ('BAS010', 'ELCN4',        $BAS010-ELCN4,       #CW)
  do Get_Field_Information ('BAS010', 'ELCN5',        $BAS010-ELCN5,       #CW)
  do Get_Field_Information ('BAS010', 'ELCN6',        $BAS010-ELCN6,       #CW)
  do Get_Field_Information ('BAS010', 'ELCN7',        $BAS010-ELCN7,       #CW)
  do Get_Field_Information ('BAS010', 'ELCN8',        $BAS010-ELCN8,       #CW)
  do Get_Field_Information ('BAS010', 'ELCN9',        $BAS010-ELCN9,       #CW)
  do Get_Field_Information ('BAS010', 'FULL',         $BAS010-FULL,        #CW)
  do Get_Field_Information ('BAS010', 'FLSA',         $BAS010-FLSA,        #CW)
  do Get_Field_Information ('BAS010', 'STAT',         $BAS010-STAT,        #CW)
  do Get_Field_Information ('BAS010', 'REG',          $BAS010-REG,         #CW)
  do Get_Field_Information ('BAS010', 'REGN',         $BAS010-REGN,        #CW)
  do Get_Field_Information ('BAS010', 'GRADE',        $BAS010-GRADE,       #CW)
  do Get_Field_Information ('BAS010', 'BUSINESS',     $BAS010-BUSINESS,    #CW)
  do Get_Field_Information ('BAS010', 'UNIT',         $BAS010-UNIT,        #CW)

  do Get_Field_Information ('BEN1',   'EMPLOYEE',     $BEN1-EMPLOYEE,      #CW)
  do Get_Field_Information ('BEN1',   'NAME',         $BEN1-NAME,          #CW)
  do Get_Field_Information ('BEN1',   'EVENT',        $BEN1-EVENT,         #CW)
  do Get_Field_Information ('BEN1',   'ID',           $BEN1-ID,            #CW)
  do Get_Field_Information ('BEN1',   'PROCESS',      $BEN1-PROCESS,       #CW)
  do Get_Field_Information ('BEN1',   'EMPL',         $BEN1-EMPL,          #CW)
  do Get_Field_Information ('BEN1',   'BENEFIT',      $BEN1-BENEFIT,       #CW)
  do Get_Field_Information ('BEN1',   'RCD_NO',       $BEN1-RCD-NO,        #CW)
  do Get_Field_Information ('BEN1'  , 'BIRTHDATE',    $BEN1-BIRTHDATE,     #CW)
  do Get_Field_Information ('BEN1',   'DATE',         $BEN1-DATE,          #CW)
  do Get_Field_Information ('BEN1',   'PAY',          $BEN1-PAY,           #CW)
  do Get_Field_Information ('BEN1',   'CLASS',        $BEN1-CLASS,         #CW)
  do Get_Field_Information ('BEN1',   'CODE',         $BEN1-CODE,          #CW)
  do Get_Field_Information ('BEN1',   'COMPANY',      $BEN1-COMPANY,       #CW)
  do Get_Field_Information ('BEN1',   'LOCTN',        $BEN1-LOCTN,         #CW)
  do Get_Field_Information ('BEN1',   'COUNTRY',      $BEN1-COUNTRY,       #CW)
  do Get_Field_Information ('BEN1',   'STATE',        $BEN1-STATE,         #CW)
  do Get_Field_Information ('BEN1',   'STATUS',       $BEN1-STATUS,        #CW)
  do Get_Field_Information ('BEN1',   'TYPE',         $BEN1-TYPE,          #CW)
  do Get_Field_Information ('BEN1',   'PLAN',         $BEN1-PLAN,          #CW)

 End-Procedure

!**********************************
Begin-Heading 12
!**********************************

#Include 'stdhdgtr.sqc'

 ! --- Line 1 (Employee/Event Data) ---
 print 'Sched'            (+2,1,{col_sched_id})
 print $BEN1-EMPLOYEE     (0,+{col_sep},{col_emplid})
 print $BEN1-EMPLOYEE     (0,+{col_sep},{col_name})
 print $BEN1-EVENT        (0,+{col_sep},{col_event_id})
 print $BEN1-BENEFIT      (0,+{col_sep},{col_benefit_rcd})
 print $BEN1-PROCESS      (0,+{col_sep},{col_process_status})
 print ' '                (0,+{col_sep},{col_date})
 print $BEN1-COUNTRY      (0,+{col_sep},{col_state_country})

 print $BEN1-ID           (+1,1,{col_sched_id})
 print $BEN1-ID           (0,+{col_sep},{col_emplid})
 print $BEN1-NAME         (0,+{col_sep},{col_name})
 print $BEN1-ID           (0,+{col_sep},{col_event_id})
 print $BEN1-RCD-NO       (0,+{col_sep},{col_benefit_rcd})
 print $BEN1-STATUS       (0,+{col_sep},{col_process_status})
 print $BEN1-BIRTHDATE    (0,+{col_sep},{col_date})
 print $BEN1-STATE        (0,+{col_sep},{col_state_country})

 print '-'                (+1,1,{col_sched_id})                    Fill
 print '-'                (0,+{col_sep},{col_emplid})              Fill
 print '-'                (0,+{col_sep},{col_name})                Fill
 print '-'                (0,+{col_sep},{col_event_id})            Fill
 print '-'                (0,+{col_sep},{col_benefit_rcd})         Fill
 print '-'                (0,+{col_sep},{col_process_status})      Fill
 print '-'                (0,+{col_sep},{col_date})                Fill
 print '-'                (0,+{col_sep},{col_state_country})       Fill

 ! --- Line 2 (Job/Employment Eligibility Data) ---
 print ' '                (+1,1,{col_sched_id})
 print ' '                (0,+{col_sep},{col_emplid})
 print $BEN1-EMPL         (0,+{col_sep},{col_empl_rcd})
 print $BAS010-SERVICE    (0,+{col_sep},{col_date})
 print $BEN1-EMPL         (0,+{col_sep},{col_empl_class})
 print $BAS010-BENEFITS   (0,+{col_sep},{col_ben_status})
 print $BEN1-EMPL         (0,+{col_sep},{col_empl_type})
 print $BAS010-FULL       (0,+{col_sep},{col_full_part_time})
 print $BAS010-REG        (0,+{col_sep},{col_reg_temp})
 print $BAS010-OFFICER    (0,+{col_sep},{col_officer_cd})
 print $BAS010-UNION      (0,+{col_sep},{col_union_cd})
 print $BAS010-STD        (0,+{col_sep},{col_std_hrs})
 print ' '                (0,+{col_sep},{col_fte})
 print ' '                (0,+{col_sep},{col_company})
 print $BEN1-PAY          (0,+{col_sep},{col_paygroup})
 print ' '                (0,+{col_sep},{col_location})
 print $BEN1-COUNTRY      (0,+0,+{col_state_country})
 print $BAS010-FLSA       (0,+{col_sep},{col_flsa})
 print $BAS010-REG        (0,+{col_sep},{col_regn})
 print $BAS010-BUSINESS   (0,+{col_sep},{col_business_unit})
 print $BAS010-SAL        (0,+{col_sep},{col_salplan})
 print $BAS010-SAL        (0,+{col_sep},{col_salplan})

 print ' '                (+1,1,{col_sched_id})
 print ' '                (0,+{col_sep},{col_emplid})
 print $BEN1-RCD-NO       (0,+{col_sep},{col_empl_rcd})
 print $BEN1-DATE         (0,+{col_sep},{col_date})
 print $BEN1-CLASS        (0,+{col_sep},{col_empl_class})
 print $BEN1-STATUS       (0,+{col_sep},{col_ben_status})
 print $BEN1-TYPE         (0,+{col_sep},{col_empl_type})
 print $BAS010-PART       (0,+{col_sep},{col_full_part_time})
 print $BAS010-TEMP       (0,+{col_sep},{col_reg_temp})
 print $BEN1-CODE         (0,+{col_sep},{col_officer_cd})
 print $BEN1-CODE         (0,+{col_sep},{col_union_cd})
 print $BAS010-HRS        (0,+{col_sep},{col_std_hrs})
 print $BAS010-FTE        (0,+{col_sep},{col_fte})
 print $BEN1-COMPANY      (0,+{col_sep},{col_company})
 print $BAS010-GRP        (0,+{col_sep},{col_paygroup})
 print $BEN1-LOCTN        (0,+{col_sep},{col_location})
 print $BEN1-STATE        (0,+0,+{col_state_country})
 print $BEN1-STATUS       (0,+{col_sep},{col_flsa})
 print $BAS010-REGN       (0,+{col_sep},{col_regn})
 print $BAS010-UNIT       (0,+{col_sep},{col_business_unit})
 print $BEN1-PLAN         (0,+{col_sep},{col_salplan})
 print $BAS010-GRADE      (0,+{col_sep},{col_salplan})

 print ' '                (+1,1,{col_sched_id})
 print ' '                (0,+{col_sep},{col_emplid})
 print '-'                (0,+{col_sep},{col_empl_rcd})            Fill
 print '-'                (0,+{col_sep},{col_date})                Fill
 print '-'                (0,+{col_sep},{col_empl_class})          Fill
 print '-'                (0,+{col_sep},{col_ben_status})          Fill
 print '-'                (0,+{col_sep},{col_empl_type})           Fill
 print '-'                (0,+{col_sep},{col_full_part_time})      Fill
 print '-'                (0,+{col_sep},{col_reg_temp})            Fill
 print '-'                (0,+{col_sep},{col_officer_cd})          Fill
 print '-'                (0,+{col_sep},{col_union_cd})            Fill
 print '-'                (0,+{col_sep},{col_std_hrs})             Fill
 print '-'                (0,+{col_sep},{col_fte})                 Fill
 print '-'                (0,+{col_sep},{col_company})             Fill
 print '-'                (0,+{col_sep},{col_paygroup})            Fill
 print '-'                (0,+{col_sep},{col_location})            Fill
 print '-'                (0,+0,+{col_state_country})              Fill
 print '-'                (0,+{col_sep},{col_flsa})                Fill
 print '-'                (0,+{col_sep},{col_regn})                Fill
 print '-'                (0,+{col_sep},{col_business_unit})       Fill
 print '-'                (0,+{col_sep},{col_salplan})             Fill
 print '-'                (0,+{col_sep},{col_salplan})             Fill


 ! Line 3  (More Job Eligibility Data)
 print ' '                (+1,1,{col_sched_id})
 print ' '                (0,+{col_sep},{col_emplid})
 print ' '                (0,+{col_sep},{col_empl_rcd})
 print ' '                (0,+{col_sep},{col_date})
 print ' '                (0,+{col_sep},{col_empl_class})
 print ' '                (0,+{col_sep},{col_ben_status})
 print ' '                (0,+{col_sep},{col_empl_type})
 print ' '                (0,+{col_sep},{col_full_part_time})
 print $BAS010-ELCN1      (0,+{col_sep},{col_elig_cnfig})
 print $BAS010-ELCN2      (0,+{col_sep},{col_elig_cnfig})
 print $BAS010-ELCN3      (0,+{col_sep},{col_elig_cnfig})
 print $BAS010-ELCN4      (0,+{col_sep},{col_elig_cnfig})
 print $BAS010-ELCN5      (0,+{col_sep},{col_elig_cnfig})
 print $BAS010-ELCN6      (0,+{col_sep},{col_elig_cnfig})
 print $BAS010-ELCN7      (0,+{col_sep},{col_elig_cnfig})
 print $BAS010-ELCN8      (0,+{col_sep},{col_elig_cnfig})
 print $BAS010-ELCN9      (0,+{col_sep},{col_elig_cnfig})

 print ' '                (+1,1,{col_sched_id})
 print ' '                (0,+{col_sep},{col_emplid})
 print ' '                (0,+{col_sep},{col_empl_rcd})
 print ' '                (0,+{col_sep},{col_date})
 print ' '                (0,+{col_sep},{col_empl_class})
 print ' '                (0,+{col_sep},{col_ben_status})
 print ' '                (0,+{col_sep},{col_empl_type})
 print ' '                (0,+{col_sep},{col_full_part_time})
 print '-'                (0,+{col_sep},{col_elig_cnfig})          Fill
 print '-'                (0,+{col_sep},{col_elig_cnfig})          Fill
 print '-'                (0,+{col_sep},{col_elig_cnfig})          Fill
 print '-'                (0,+{col_sep},{col_elig_cnfig})          Fill
 print '-'                (0,+{col_sep},{col_elig_cnfig})          Fill
 print '-'                (0,+{col_sep},{col_elig_cnfig})          Fill
 print '-'                (0,+{col_sep},{col_elig_cnfig})          Fill
 print '-'                (0,+{col_sep},{col_elig_cnfig})          Fill
 print '-'                (0,+{col_sep},{col_elig_cnfig})          Fill


End-Heading

!**********************************
Begin-Procedure Process-Main
!**********************************

 move 0 to #row_cnt
 let $save_emplid = ' '
 let $save_sched_id = ' '
 let #save_event_id = 0

Begin-Select

P.SCHED_ID
P.EMPLID
D.NAME
D1.BIRTHDATE
P.BENEFIT_RCD_NBR
P.BAS_PROCESS_STATUS
P.EVENT_ID
P.ADDR_EFFDT
 do Get-Address-History
 do Format-DateTime(&D1.BIRTHDATE,$Out,{DEFDATE},'','')

    If &P.EMPLID <> $save_emplid Or
       &P.SCHED_ID <> $save_sched_id Or
       &P.EVENT_ID <> #save_event_id

       print &P.SCHED_ID     (+2,1,{COL_SCHED_ID})
       print &P.EMPLID       (0,+{COL_SEP},{COL_EMPLID})
       print &D.NAME         (0,+{COL_SEP},{COL_NAME})
       print &P.EVENT_ID     (0,+{COL_SEP},{COL_EVENT_ID})
       print &P.BENEFIT_RCD_NBR (0,+{COL_SEP},{COL_BENEFIT_RCD})
       move 'BAS_PROCESS_STATUS' to $Fieldname
       move &P.Bas_Process_Status to $Fieldvalue
       move &P.EVENT_DT to $AsOfDate
       do Read-Translate-Table
       print $Xlatshortname  (0,+{COL_SEP},{COL_PROCESS_STATUS})
       print $Out            (0,+{COL_SEP},{COL_DATE})
       let $tmp1 = RTRIM(&A.COUNTRY,' ') || '/' || &A.STATE
       print $tmp1           (0,+{COL_SEP},{COL_STATE_COUNTRY})
       move &P.EMPLID to $save_emplid
       move &P.SCHED_ID to $save_sched_id
       move &P.EVENT_ID to #save_event_id
    End-If

    print ' '               (+1,1,{COL_SCHED_ID})
    print ' '               (0,+{COL_SEP},{COL_EMPLID})

J.EMPL_RCD                             (0,+{COL_SEP},{COL_EMPL_RCD})

E.SERVICE_DT
 do Format-DateTime(&E.SERVICE_DT,$Out,{DEFDATE},'','')
 print $Out                             (0,+{COL_SEP},{COL_DATE})

J.EMPL_CLASS                            (0,+{COL_SEP},{COL_EMPL_CLASS})
J.BEN_STATUS
 move 'BEN_STATUS' to $Fieldname
 move &J.Ben_Status to $Fieldvalue
 do Read-Translate-Table
 print $Xlatshortname                   (0,+{COL_SEP},{COL_BEN_STATUS})

J.EMPL_TYPE                             (0,+{COL_SEP},{COL_EMPL_TYPE})
J.FULL_PART_TIME                        (0,+{COL_SEP},{COL_FULL_PART_TIME})
J.REG_TEMP                              (0,+{COL_SEP},{COL_REG_TEMP})
J.OFFICER_CD                            (0,+{COL_SEP},{COL_OFFICER_CD})
J.UNION_CD                              (0,+{COL_SEP},{COL_UNION_CD})
J.STD_HOURS                             (0,+{COL_SEP},{COL_STD_HRS}) Edit 9999.99
J.FTE                                   (0,+{COL_SEP},{COL_FTE}) Edit 9.999999
J.COMPANY                               (0,+{COL_SEP},{COL_COMPANY})
J.PAYGROUP                              (0,+{COL_SEP},{COL_PAYGROUP})
J.SETID_LOCATION
J.LOCATION                              (0,+{COL_SEP},{COL_LOCATION})
    do Lookup-Job-State
    print $Job-State                    (0,+{COL_SEP},{COL_STATE_COUNTRY})
J.FLSA_STATUS                           (0,+{COL_SEP},{COL_FLSA})
J.REG_REGION                            (0,+{COL_SEP},{COL_REGN})
J.BUSINESS_UNIT                         (0,+{COL_SEP},{COL_BUSINESS_UNIT})
J.SAL_ADMIN_PLAN                        (0,+{COL_SEP},{COL_SALPLAN})
J.GRADE                                 (0,+{COL_SEP},{COL_GRADE})

                print ' '               (+1,1,{COL_SCHED_ID})
                print ' '               (0,+{COL_SEP},{COL_EMPLID})
                print ' '               (0,+{COL_SEP},{COL_EMPL_RCD})
                print ' '               (0,+{COL_SEP},{COL_DATE})
                print ' '               (0,+{COL_SEP},{COL_EMPL_CLASS})
                print ' '               (0,+{COL_SEP},{COL_BEN_STATUS})
                print ' '               (0,+{col_sep},{col_empl_type})
                print ' '               (0,+{col_sep},{col_full_part_time})
J.ELIG_CONFIG1                          (0,+{COL_SEP},{COL_ELIG_CNFIG})
J.ELIG_CONFIG2                          (0,+{COL_SEP},{COL_ELIG_CNFIG})
J.ELIG_CONFIG3                          (0,+{COL_SEP},{COL_ELIG_CNFIG})
J.ELIG_CONFIG4                          (0,+{COL_SEP},{COL_ELIG_CNFIG})
J.ELIG_CONFIG5                          (0,+{COL_SEP},{COL_ELIG_CNFIG})
J.ELIG_CONFIG6                          (0,+{COL_SEP},{COL_ELIG_CNFIG})
J.ELIG_CONFIG7                          (0,+{COL_SEP},{COL_ELIG_CNFIG})
J.ELIG_CONFIG8                          (0,+{COL_SEP},{COL_ELIG_CNFIG})
J.ELIG_CONFIG9                          (0,+{COL_SEP},{COL_ELIG_CNFIG})
J.EMPLID
P.EVENT_DT

From  PS_BAS_PARTIC    P,
      PS_PERSON_NAME   D,
      PS_PERSON        D1,
      PS_PER_ORG_ASGN  E,
      PS_JOB           J
Where P.SCHED_ID LIKE $Sched_Id
And P.EVENT_STATUS <> 'V'
And P.PROCESS_IND  = 'N'
And P.BAS_PROCESS_STATUS IN ('AE','FA','FP')
And D.EMPLID = P.EMPLID
And D1.EMPLID = P.EMPLID
And E.EMPLID = P.EMPLID
And E.EMPL_RCD = J.EMPL_RCD
And J.EMPLID = P.EMPLID
And J.EFFDT = (SELECT MAX(J1.EFFDT)
                 FROM PS_JOB J1
                WHERE J1.EMPLID = J.EMPLID
                  AND J1.EMPL_RCD = J.EMPL_RCD
                  AND J1.EFFDT <= P.EVENT_DT)
And J.EFFSEQ = (SELECT MAX(J2.EFFSEQ)
                  FROM PS_JOB J2
                 WHERE J2.EMPLID = J.EMPLID
                   AND J2.EMPL_RCD = J.EMPL_RCD
                   AND J2.EFFDT = J.EFFDT)
Order By P.SCHED_ID ASC,
         P.EVENT_ID ASC,
         P.BENEFIT_RCD_NBR ASC,
         P.EMPLID ASC

End-Select
End-Procedure

!**********************************
Begin-Procedure Get-Address-History
!**********************************

Begin-SELECT

A.STATE
A.COUNTRY

FROM PS_ADDRESSES A
WHERE A.EMPLID = &P.EMPLID
AND   A.ADDRESS_TYPE = 'HOME'
AND   A.EFFDT = &P.ADDR_EFFDT

End-SELECT

End-Procedure

!*************************************
Begin-Procedure Lookup-Job-State
!*************************************

 move ' '  to  $Job-State

Begin-Select

L.COUNTRY
L.STATE
               let $Job-State = RTRIM(&L.COUNTRY,' ') || '/' || &L.STATE
FROM PS_LOCATION_TBL L
WHERE L.SETID = &J.SETID_LOCATION
  AND L.LOCATION = &J.LOCATION

End-Select
End-Procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!*************************************

#Include 'readxlat.sqc' !Get translate Values
#Include 'number.sqc'
#Include 'datetime.sqc'
#Include 'curdttim.sqc' !Get-Current-DateTime procedure
#Include 'reset.sqc'    !Reset printer procedure
#Include 'getsched.sqc' !Ask-Schedule-Id Procedure

#Include 'stdapi.sqc'   !Update Process API
#Include 'bnrunctl.sqc' !Get application run control parameters
#Include 'bngetval.sqc' !Get BEN values mask routines

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

!****************************** End Of Report *******************************

