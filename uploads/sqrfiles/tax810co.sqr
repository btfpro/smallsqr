!***********************************************************************
!  TAX810CO:  Qtrly Wage List - COLORADO                               *
!                                                                      *
!             NOTE: "#IFDEF TAXTEST" in main SELECT is used for        *
!                   testing this report against DEMO database          *
!                                                                      *
!                   This program does NOT support the "Seasonal        *
!                   Indicator" field on the tape.                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2007/07/13:15:43:16                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  716886                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup31.sqc' !Printer and page-size initialization
#include 'usarpt.sqc'  ! NID_COUNTRY defined

begin-report
  do Init-Report

! These variables are used by rptsmmry.sqc
  Let $Prnt_CoTxGrs = 'N'
  Let $Prnt_CoExGrs = 'N'

  do Process-Main

  close 10

  if $RecordWritten = 'Y'
    display ''
    display 'Upon successful conclusion of this program, the following'
    display 'file will have been created:'
    display ''
    display '  TAX810CO  contains 276-character records in the ICESA format'
    display '            required for the reporting of quarterly wages to the '
    display '            Colorado Department of Labor and Employment.'
    display ''
    display 'Follow the instructions from the department for preparing'
    display 'and submitting the file.'
    display ''
  else
    do Print-Summary-Data('NoData')
  end-if

  do Stdapi-Term

end-report

begin-procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init
  do Initialization
  do Get-Calendar-Year-Id

  move 'TAX810CO' to $ReportID
  move 'Colorado Quarterly UI Wage Report' to $ReportTitle

end-procedure

begin-procedure Initialization
#ifdef TAXTEST
  move 'CA'              to $State
#else
  move 'CO'              to $State
#endif

  do Get-Tax-Reporting-Run-Controls
  move &TX.Balance_Year to $RptYear 9999
  move $PeriodEndDate   to $AsOfDate

  display ' '
  display 'Processing balances for '   noline
  display $RptQtrYr

  if $PRCS_Process_Instance = ''
     do Prompts
  else
     do Select-Parameters
     do Convert-Parameters
  end-if


  open '{IMPORTPREFIX}TAX810CO{IMPORTSUFFIX}' as 10 for-writing record=276:fixed

end-procedure


begin-procedure Process-Main
begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

move &TX.Company       to $Company  !TX.Company is the Transmitter
  if RTRIM($Company,' ') = ''
    display '*** Company field blank on Tax Run Control Record ***'
    display '***************** Processing stopped ****************'
    display 'Company  ' noline
    display  $Company
    stop
  end-if

do Get-Company-Data                 !Transmitter identifying data

do Write-A-Record

begin-SELECT
A.COMPANY
A.DESCR

  move &A.Company to $Company

  move '' to $priorEmplID
  do Read-Employee-Data

FROM  PS_COMPANY_TBL A
WHERE A.EFF_STATUS      = 'A'
  AND A.TAX_REPORT_TYPE = '2'
  AND A.EFFDT =
  (SELECT MAX(EFFDT)
     FROM PS_COMPANY_TBL
     WHERE  COMPANY = A.COMPANY
       AND  EFFDT  <= $AsOfDate)

ORDER BY COMPANY
end-SELECT

  if #Count_F > 0
     do Write-F-Record
     do Print-Summary-Data('FileTotal')
  end-if

end-procedure


begin-procedure Read-Employee-Data
begin-SELECT
C.COMPANY    () on-break print=never before=Before-Company
                                     after=After-Company
C.EMPLID
C.NLGRS_QTD
C.TXGRS_QTD
D1.NATIONAL_ID
D.LAST_NAME
D.FIRST_NAME
D.MIDDLE_NAME

  if &C.NlGrs_QTD > 0
    do Process-Employee
  else
    do Print-Summary-Data('NegWage')
  end-if

FROM  PS_TAX_BALANCE C, PS_PERSON_NAME D, PS_PERS_NID D1
WHERE C.COMPANY       = &A.Company
  AND D.EMPLID        = C.EMPLID
  AND C.TAX_CLASS     = 'U'
  AND C.BALANCE_ID    = $Calendar_Year_Id
  AND C.BALANCE_YEAR  = &TX.Balance_Year
  AND C.BALANCE_QTR   = &TX.Balance_Qtr
#ifdef TAXTEST
  AND C.STATE         = 'CA'
#else
  AND C.STATE         = 'CO'
#endif
  AND C.LOCALITY      = ' '
  AND C.BALANCE_PERIOD  =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_TAX_BALANCE
       WHERE  EMPLID        = C.EMPLID
         AND  COMPANY       = C.COMPANY
         AND  BALANCE_ID    = C.BALANCE_ID
         AND  BALANCE_YEAR  = C.BALANCE_YEAR
         AND  BALANCE_QTR   = C.BALANCE_QTR
         AND  STATE         = C.STATE
         AND  LOCALITY      = C.LOCALITY
         AND  TAX_CLASS     = C.TAX_CLASS)
  AND C.NLGRS_QTD <> 0
  AND D.EMPLID            = D1.EMPLID
  AND D1.COUNTRY          = {NID_Country}
  AND D1.NATIONAL_ID_TYPE = $Payroll_NID_Type
ORDER BY D1.NATIONAL_ID
end-SELECT
end-procedure


begin-procedure Process-Employee
  move &D1.NATIONAL_ID to $S123 xxx       !isolate first 3 digits
  if $S123 = &Temp_SSN_Mask or RTRIM(&D1.NATIONAL_ID, ' ') = ''
    move 'I        '      to $NATIONAL_ID
  else
    move &D1.NATIONAL_ID  to $NATIONAL_ID
  end-if

  let $LastName   = rtrim(&D.LAST_NAME, ' ')
  let $FirstName  = rtrim(&D.FIRST_NAME, ' ')
  let $MidInitial = {ps-substr}(&D.MIDDLE_NAME,1,1)

  uppercase $FirstName
  uppercase $LastName
  uppercase $MidInitial

  move &C.NlGrs_QTD to #NlGrs_QTD
  add #NlGrs_QTD to #Co_NlGrs_QTD
  multiply 100 times #NlGrs_QTD
  do Format-Number(#NlGrs_QTD,  $NlGrs_QTD,  '09999999999999')

  do Write-S-Record

  move 'Y' to $RecordWritten
end-procedure


begin-procedure Before-Company
  do Get-Company-Data

  move 'CO' to $State
  do Get-State-Tax-Data             !Employer ID

  if RTRIM(&Employer_ID_SUT,' ') = ''
    display '*** State Unemployment ID missing in Company State Tax Table ***'
    display '*********************** Processing stopped *********************'
    display 'Company  ' noline
    display  $Company
    stop
  end-if

  let $StateEIN = RTRIM(&Employer_ID_SUT,' ')
  while INSTR($StateEIN,'-',1) <> 0
    let #Hyphen = INSTR($StateEIN,'-',1)
    if #Hyphen > 0
      let $StateEIN = SUBSTR($StateEIN,1,(#Hyphen - 1)) ||
                      SUBSTR($StateEIN,(#Hyphen + 1),9)
    end-if
  end-while
  while INSTR($StateEIN,' ',1) <> 0
    let #Spaces = INSTR($StateEIN,' ',1)
    if #Spaces > 0
      let $StateEIN = SUBSTR($StateEIN,1,(#Spaces - 1)) ||
                      SUBSTR($StateEIN,(#Spaces + 1),9)
    end-if
  end-while
  while INSTR($StateEIN,'.',1) <> 0
    let #Marks  = INSTR($StateEIN,'.',1)
    if #Marks  > 0
      let $StateEIN = SUBSTR($StateEIN,1,(#Marks - 1)) ||
                      SUBSTR($StateEIN,(#Marks + 1),9)
    end-if
  end-while

  if length($StateEIN) > 9
    display '*** Error in State Unemployment ID - longer than 9 digits ***'
    display '*********************** Processing stopped *********************'
    display 'Company  ' noline
    display  $Company
    display 'State Unemployment ID  ' noline
    display  $StateEIN
    stop
  end-if

  move $StateEIN to $StateEIN 099999999
end-procedure


begin-procedure After-Company

  do Print-Summary-Data('CoTotal')

  add #Co_NlGrs_QTD to #Tot_NlGrs_QTD
  add #Count_S to #Count_F

  move 0 to #Co_NlGrs_QTD
  move 0 to #Count_S
  new-page

end-procedure


begin-procedure Write-A-Record

  move $CompanyName    to $TransmitterName
  move &CT.Federal_EIN to $FedEIN 099999999
  move $CompnyAdd1     to $TransmitterAddress
  move $CompnyCity     to $TransmitterCity
  move &CT.State       to $TransmitterState
  move &CT.Postal      to $Zip
  move $Zip            to $ZipExtsn ~~~~~~xxxx
  if instr($Zip,'-',6) = 0
  and $ZipExtsn <> '    '
    let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
  end-if
  move $Zip            to $ZipExtsn ~~~~~xxxxx

  uppercase $TransmitterName
  uppercase $TransmitterAddress
  uppercase $TransmitterCity
  uppercase $TransmitterContact


     write 10 from 'A':1                 !    1
      &TX.Balance_Year:4                 !    2
                   $Sp:9                 !    6
                'UTAX':4                 !   15
                   $Sp:5                 !   19
      $TransmitterName:50                !   24
   $TransmitterAddress:40                !   74
      $TransmitterCity:25                !  114
     $TransmitterState:2                 !  139
                   $Sp:13                !  141
                  $Zip:5                 !  154
             $ZipExtsn:5                 !  159
   $TransmitterContact:30                !  164
     $TransmitterPhone:10                !  194
  $TransmitterPhoneExt:4                 !  204
                   $Sp:69                !  208

end-procedure


begin-procedure Write-S-Record

  write 10 from 'S':1                    !    1
       $NATIONAL_ID:9                    !    2
          $LastName:20                   !   11
         $FirstName:12                   !   31    
        $MidInitial:1                    !   43
               '08':2                    !   44
                $Sp:18                   !   46
         $NlGrs_QTD:14                   !   64
                $Sp:65                   !   78
             'UTAX':4                    !  143
          $StateEIN:15                   !  147
              '000':3                    !  162
                $Sp:40                   !  165
                $Sp:2                    !  205
                $Sp:8                    !  207
       $QtrEndMonth:2                    !  215
           $RptYear:4                    !  217
                $Sp:56                   !  221

  add 1 to #Count_S
  move '' to $NlGrs_QTD
  move 0  to #NlGrs_QTD

end-procedure


begin-procedure Write-F-Record

  move #Count_F to $Count_F 0999999999

  write 10 from   'F':1
             $Count_F:10
                  $Sp:265

end-procedure


begin-procedure Prompts

  display 'Enter Transmitter Contact Information:'
  input $TransmitterContact  maxlen=30 '  Contact name (30 char max)'
  input $TransmitterPhone    maxlen=10 '  Contact phone (e.g. 9995551212)'
  input $TransmitterPhoneExt maxlen=4  '  Contact 4-digit extension'

end-procedure


begin-procedure Convert-Parameters

  move $RC_QTR_UI.Contact_Person    to $TransmitterContact
  move $RC_QTR_UI.Contact_Phone     to $TransmitterPhone
  move $RC_QTR_UI.Contact_Phone_Ext to $TransmitterPhoneExt

  unstring  $TransmitterPhone by '/' into $str1 $str2
  unstring $str2 by '-' into $str3 $str4
  let $TransmitterPhone = $str1 || $str3 || $str4

end-procedure


#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getstdta.sqc'  !Get-State-Tax-Data procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'rptsmmry.sqc'  !Print-Summary-Data procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'stdapi.sqc'    !Update Process API
#Include 'txrnctl1.sqc'  !Process Scheduler Run Controls

