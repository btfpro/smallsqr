!**********************************************************************
!  UVHRG30: Assigned Company Cars UK
!**********************************************************************
!
!               Confidentiality Information:
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!
!----------------------------------------------------------------------
!
!          $Date:  2006/07/24:16:06:28                                 !
!       $Release:  HR9                                                 !
!      $Revision:  102                                                 !
!
!**********************************************************************
! This SQR is providing two sets of report
!       Part A reports on the car type allocated to an employee
!       Part B reports on the frequency type that an employee is
!               contributing towards
!**********************************************************************

#include 'setenv.sqc'    !Set environment

begin-setup
  #include 'ptpsp125.sqc'
end-setup

begin-program
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report

  display 'Report began at: ' NoLine
  do Display-Time

  do Process-Main

  display 'Report ended at: ' NoLine
  do Display-Time

  do Reset
  do Successful-EOJ

end-program

!************************************************************************
! Function:    Init-Report
! Description: Prompt for run-time parameters
!************************************************************************
begin-procedure Init-Report

 move 'UVHRG30' to $ReportID
 move '' to $ReportTitle

  display $ReportID noline
  display ': ' noline
  display $ReportTitle
  display ' '

  do Define-Prcs-Vars
  do Get-Run-Control-Parms

  if $prcs_process_instance = ''
     !No Prompt
  end-if

end-procedure Init-Report


!*******************************************************************
begin-procedure Process-Main
!*******************************************************************

  display 'FLOW: Process-Main'

  do PerformPartA
  do PerformPartB

end-procedure


!*******************************************************************
begin-procedure PerformPartA
!*******************************************************************

  display 'PerformPartA'

  print 'This section prints all employees with car and the type of car allocated'  (+2,1) BOLD

  print 'Employee ID'         (+2,1)
  print 'Car ID'              (,20)
  print 'Car Type'            (,40)
  print '-'                   (+1,1,60) fill BOLD

  do process-car-alloc
  new-page

end-procedure


!*******************************************************************
begin-procedure PerformPartB
!*******************************************************************

  display 'PerformPartB'

  print 'This section prints all employees with car that are making payments towards private use'  (+2,1) BOLD


  print 'Employee ID'         (+2,1)
  print 'Car ID'              (,20)
  print 'Payment Date'        (,40)
  print 'Payment Amount'      (,60)
  print 'Frequency Type'      (,80)
  print '-'                   (+1,1,100) fill BOLD

  do process-car-payments

end-procedure



!*******************************************************************
begin-procedure process-car-alloc
!*******************************************************************

  display 'process-car-alloc'

 let $allocfound = 'N'

begin-SELECT
A.EMPLID
A.CAR_ID
A.CAR_TYPE_CD

  let $allocfound = 'Y'


  let $FieldName = 'CAR_TYPE_CD'
  let $FieldValue = &A.CAR_TYPE_CD

  do Read-Translate-Table

  let $CAR_TYPE_CD = RTRIM($XlatLongName,' ')


  do Print-Data-Alloc


FROM PS_CAR_ALLOC A

end-Select


 if $allocfound = 'N'
   display 'NO ROWS FOUND'
   print 'NO ROWS FOUND'  (+3,20)
 end-if

end-procedure


!*******************************************************************
begin-procedure process-car-payments
!*******************************************************************

  display 'process-car-payments'
  let $paymentsfound = 'N'

begin-SELECT
B.EMPLID
B.CAR_ID
B.PAYMENT_DT
B.PAYMENT_AMT
B.FREQUENCY_TYPE

  let $paymentsfound = 'Y'


  let $FieldName = 'FREQUENCY_TYPE'
  let $FieldValue = &B.FREQUENCY_TYPE

  do Read-Translate-Table

  let $FREQUENCY_TYPE = RTRIM($XlatLongName,' ')

  do Format-DateTime(&B.PAYMENT_DT, $effdt, {DEFDATE}, '', '')

  do Print-Data-Payments

FROM PS_CAR_PAYMENTS B

end-Select

 if $paymentsfound = 'N'
   display 'NO ROWS FOUND'
   print 'NO ROWS FOUND'  (+3,20)
 end-if

end-procedure



!*******************************************************************
begin-procedure Print-Data-Alloc
!*******************************************************************

  print &A.EMPLID              (+1,01)
  print &A.CAR_ID              (,20)
  print $CAR_TYPE_CD           (,40)


end-procedure


!*******************************************************************
begin-procedure Print-Data-Payments
!*******************************************************************

  print &A.EMPLID              (+1,01)
  print &A.CAR_ID              (,20)
  print $effdt                 (,40)
  print &B.PAYMENT_AMT         (,60)  edit '8,888.88'
  print $FREQUENCY_TYPE        (,80)


end-procedure

!************************************************************************
! Function:    Display-Time
! Description: Displays Time for .LOG file.
!
!************************************************************************
BEGIN-PROCEDURE Display-Time

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ' '

END-PROCEDURE

!************************************************************************
! SQC Files for called procedures (all standard shell sqc's)
!************************************************************************
#include 'prcsapi.sqc'   !Update Process Request API
#include 'prcsdef.sqc'   !Update Process Request variable declare
#include 'eoj.sqc'       !End of Job procedure
#Include 'readxlat.sqc'  !Read Translate Table
#Include 'reset.sqc'     !End of Program
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'askeffdt.sqc'  !Routine to effective date processing

