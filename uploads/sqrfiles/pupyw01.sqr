!***********************************************************************
!  PUPYW01:  8.01/8.81.9 Upgrade - Invalid Account Codes               *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      !
!          $Date:  2006/07/20:12:29:57                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      !
!**********************************************************************!

#include 'setenv.sqc' !Set environment
#include 'setup31.sqc'  !printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report

  move 'PUPYW01' to $ReportID

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  move 'Account Code Table Audit Report' to $ReportTitle

  Let #c1 = 3
  Let #c2 = 28
  Let #c3 = 53
  Let #c4 = 78
  Let #c5 = 103

  Let #L1 = 12
  Let #L2 = 25

  Let $PUPYW01_ch1 = 'ACCOUNT CODE'
  Let $PUPYW01_ch2 = 'ACCOUNT CODE'
  Let $PUPYW01_ch3 = 'ACCOUNT CODE'
  Let $PUPYW01_ch4 = 'ACCOUNT CODE'
  Let $PUPYW01_ch5 = 'ACCOUNT CODE'

  Let $R881  = 'N'
  Let $QUOTE = ''''

  do Get-Current-DateTime
  Let $AODat = $QUOTE || $AsOfToday || $QUOTE || ')'

  Let $WhereA = 'A.EFFDT = (SELECT MAX(A_ED.EFFDT) FROM PS_ACCT_CD_TBL A_ED
                             WHERE A.ACCT_CD = A_ED.ACCT_CD AND A_ED.EFFDT <= ' || $AODat

  Let $WhereB = 'B.EFFDT = (SELECT MAX(B_ED.EFFDT) FROM PS_ACCT_CD_TBL B_ED
                             WHERE B.ACCT_CD = B_ED.ACCT_CD AND B_ED.EFFDT <= ' || $AODat

end-procedure

begin-HEADING 11

  #Include 'stdhdgtr.sqc'
  Print $PUPYW01_page_head (+1,3,60)
  Print ''                 (+1,1,1)

  Print $PUPYW01_page_note1 (+1,3,90)
  Print $PUPYW01_page_note2 (+1,9,90)
  Print ''                  (+1,1,1)

  print $PUPYW01_ch1    (+1,#c1,#L1)
  print $PUPYW01_ch2     (0,#c2,#L1)
  print $PUPYW01_ch3     (0,#c3,#L1)
  print $PUPYW01_ch4     (0,#c4,#L1)
  print $PUPYW01_ch5     (0,#c5,#L1)

  print '-'     (+1,#c1,#L1) Fill
  print '-'      (0,#c2,#L1) Fill
  print '-'      (0,#c3,#L1) Fill
  print '-'      (0,#c4,#L1) Fill
  print '-'      (0,#c5,#L1) Fill


end-HEADING

!***********************************************************************
!  PROC REPORT                                                         *
!         Main Procedure                                               *
!***********************************************************************

BEGIN-PROCEDURE Process-Main

 do Determine-Release

 Let $CFA = ' AND A.ACCOUNT = '        || $QUOTE || ' ' || $QUOTE
 Let $CFA = $CFA || ' AND A.DEPTID = '         || $QUOTE || ' ' || $QUOTE
 Let $CFA = $CFA || ' AND A.PROJECT_ID = '     || $QUOTE || ' ' || $QUOTE
 Let $CFA = $CFA || ' AND A.PRODUCT = '        || $QUOTE || ' ' || $QUOTE
 Let $CFA = $CFA || ' AND A.FUND_CODE = '      || $QUOTE || ' ' || $QUOTE
 Let $CFA = $CFA || ' AND A.PROGRAM_CODE = '   || $QUOTE || ' ' || $QUOTE
 Let $CFA = $CFA || ' AND A.CLASS_FLD = '      || $QUOTE || ' ' || $QUOTE
 Let $CFA = $CFA || ' AND A.AFFILIATE = '      || $QUOTE || ' ' || $QUOTE
 Let $CFA = $CFA || ' AND A.OPERATING_UNIT = ' || $QUOTE || ' ' || $QUOTE
 Let $CFA = $CFA || ' AND A.ALTACCT = '        || $QUOTE || ' ' || $QUOTE
 if $R881 = 'Y'
    Let $CFA = $CFA || ' AND A.BUDGET_REF = '     || $QUOTE || ' ' || $QUOTE
    Let $CFA = $CFA || ' AND A.CHARTFIELD1 = '    || $QUOTE || ' ' || $QUOTE
    Let $CFA = $CFA || ' AND A.CHARTFIELD2 = '    || $QUOTE || ' ' || $QUOTE
    Let $CFA = $CFA || ' AND A.CHARTFIELD3 = '    || $QUOTE || ' ' || $QUOTE
 end-if

 Let $CFB = ' AND B.ACCOUNT = '        || $QUOTE || ' ' || $QUOTE
 Let $CFB = $CFB || ' AND (B.DEPTID <> '       || $QUOTE || ' ' || $QUOTE
 Let $CFB = $CFB || ' OR B.PROJECT_ID <> '     || $QUOTE || ' ' || $QUOTE
 Let $CFB = $CFB || ' OR B.PRODUCT <> '        || $QUOTE || ' ' || $QUOTE
 Let $CFB = $CFB || ' OR B.FUND_CODE <> '      || $QUOTE || ' ' || $QUOTE
 Let $CFB = $CFB || ' OR B.PROGRAM_CODE <> '   || $QUOTE || ' ' || $QUOTE
 Let $CFB = $CFB || ' OR B.CLASS_FLD <> '      || $QUOTE || ' ' || $QUOTE
 Let $CFB = $CFB || ' OR B.AFFILIATE <> '      || $QUOTE || ' ' || $QUOTE
 Let $CFB = $CFB || ' OR B.OPERATING_UNIT <> ' || $QUOTE || ' ' || $QUOTE
 Let $CFB = $CFB || ' OR B.ALTACCT <> '        || $QUOTE || ' ' || $QUOTE
 if $R881 = 'Y'
    Let $CFB = $CFB || ' OR B.BUDGET_REF <> '     || $QUOTE || ' ' || $QUOTE
    Let $CFB = $CFB || ' OR B.CHARTFIELD1 <> '    || $QUOTE || ' ' || $QUOTE
    Let $CFB = $CFB || ' OR B.CHARTFIELD2 <> '    || $QUOTE || ' ' || $QUOTE
    Let $CFB = $CFB || ' OR B.CHARTFIELD3 <> '    || $QUOTE || ' ' || $QUOTE || ')'
 else
    Let $CFB = $CFB || ')'
 end-if

 Let $WhereA = $WhereA || $CFA
 Let $WhereB = $WhereB || $CFB

 !display $WhereA
 !display $WhereB
 
 !New-Page
 Let $PUPYW01_page_head  = 'List of Account Codes with blank Chartfields'
 Let $PUPYW01_page_note1 = 'NOTE: If you wish to convert the following account codes you must update'
 Let $PUPYW01_page_note2 = 'ACCT_CD_TBL with at least Account value.'

 Let #colcnt = 0
 do List-Blank-Chartfields
 if #colcnt > 0
    do Print-Account-Codes 
 end-if 

 New-Page
 Let $PUPYW01_page_head  = 'List of Account Codes with blank Account'
 Let $PUPYW01_page_note1 = 'NOTE: Leaving the Account value blank will cause problem because it is a'
 Let $PUPYW01_page_note2 = 'mandatory field. You must update ACCT_CD_TBL with Account value.'

 Let #colcnt = 0 
 do List-Blank-Accounts
 if #colcnt > 0
    do Print-Account-Codes 
 end-if 

END-PROCEDURE

!***********************************************************************
!  List-Blank-Chartfields                                              *
!***********************************************************************

BEGIN-PROCEDURE List-Blank-Chartfields

BEGIN-SELECT
A.ACCT_CD

   if #colcnt = 0
      Let $PUPYW01_cl1 = ' '
      Let $PUPYW01_cl2 = ' '
      Let $PUPYW01_cl3 = ' '
      Let $PUPYW01_cl4 = ' '
      Let $PUPYW01_cl5 = ' '
    end-if

    Add 1 to #colcnt

    Evaluate #colcnt
      when = 1
        Let $PUPYW01_cl1 = &A.ACCT_CD
        break
      when = 2
        Let $PUPYW01_cl2 = &A.ACCT_CD
        break
      when = 3
        Let $PUPYW01_cl3 = &A.ACCT_CD
        break
      when = 4
        Let $PUPYW01_cl4 = &A.ACCT_CD
        break
      when = 5
        Let $PUPYW01_cl5 = &A.ACCT_CD
        do Print-Account-Codes 
        Let #colcnt = 0
    End-Evaluate

FROM PS_ACCT_CD_TBL A
 WHERE [$WhereA]
 ORDER BY A.ACCT_CD

END-SELECT
END-PROCEDURE

!***********************************************************************
!  List-Blank-Accounts                                                 *
!***********************************************************************

BEGIN-PROCEDURE List-Blank-Accounts

BEGIN-SELECT
B.ACCT_CD

   if #colcnt = 0
      Let $PUPYW01_cl1 = ' '
      Let $PUPYW01_cl2 = ' '
      Let $PUPYW01_cl3 = ' '
      Let $PUPYW01_cl4 = ' '
      Let $PUPYW01_cl5 = ' '
    end-if

    Add 1 to #colcnt

    Evaluate #colcnt
      when = 1
        Let $PUPYW01_cl1 = &B.ACCT_CD
        break
      when = 2
        Let $PUPYW01_cl2 = &B.ACCT_CD
        break
      when = 3
        Let $PUPYW01_cl3 = &B.ACCT_CD
        break
      when = 4
        Let $PUPYW01_cl4 = &B.ACCT_CD
        break
      when = 5
        Let $PUPYW01_cl5 = &B.ACCT_CD
        do Print-Account-Codes 
        Let #colcnt = 0
    End-Evaluate

FROM PS_ACCT_CD_TBL B
 WHERE [$WhereB]
 ORDER BY B.ACCT_CD

END-SELECT
END-PROCEDURE

!***********************************************************************
!  Determine-Release                                                   *
!***********************************************************************

BEGIN-PROCEDURE Determine-Release

BEGIN-SELECT

C.SUBRECORD

   Let $R881 = &C.SUBRECORD

FROM PSRECFIELD C
 WHERE C.RECNAME = 'ACCT_CD_TBL'
   AND C.SUBRECORD = 'Y'
   AND EXISTS (SELECT 'X' FROM PSRECFIELD C_ED
                         WHERE C_ED.RECNAME = C.FIELDNAME
                           AND C_ED.FIELDNAME = 'BUDGET_REF')
END-SELECT
END-PROCEDURE


!********************************************************************
!  Print-Account-Codes                                              *
!********************************************************************
BEGIN-PROCEDURE Print-Account-Codes

  print $PUPYW01_cl1    (+1,#c1,#L2)
  print $PUPYW01_cl2     (0,#c2,#L2)
  print $PUPYW01_cl3     (0,#c3,#L2)
  print $PUPYW01_cl4     (0,#c4,#L2)
  print $PUPYW01_cl5     (0,#c5,#L2)

END-PROCEDURE

#include 'reset.sqc'     !Reset printer procedure
#include 'curdttim.sqc'  !Get-Current-DateTime procedure
#include 'datetime.sqc'  !Routines for date and time formatting
#include 'number.sqc'    !Routines to format numbers
#include 'stdapi.sqc'    !Update Process API
#include 'sqrtrans.sqc'  !Translate SQR strings to given language
!#include 'getrplng.sqc'  !Get the report language
#include 'readxlat.sqc'  !Read-Translate-Table procedure
