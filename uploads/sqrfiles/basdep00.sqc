!*************************************************************
! BASDEP00: BenAdmin Enrollment Form Dependent Processing
!*************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:08:39:07                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!                                                                      *
! Function: Called by BAS004.SQR                                       *
!                                                                      *
!         PS_DEPENDENT_BENEF - Dependents of Employee                  *
!         PS_HEALTH_DEPENDNT - Dependents with current elections       *
!         PS_LIFE_ADD_BENEFC - Life Insurance Beneficiaries            *
!         PS_SAVINGS_BENEFIC - Savings Beneficiaries                   *
!         PS_PENSION_BENEFC  - Pension Beneficiaries                   *
!                                                                      *
!                                                                      *
! Output: Dependents/Beneficiaries will be printed in a dependent/plan *
!         type matrix.                                                 *
!                                                                      *
!***********************************************************************

!*********************************
Begin-Procedure Process-Dep-Benef
!*********************************

  #define BLANK_DEP_LINES     2

  let $ContinuedPrevPage  = $BEN1-CONT-PREV-PAGE
  let $ContinuedNextPage = $BEN1-CONT-NEXT-PAGE
  let #PageContinueLine  = 51
  let #PageBreakLine     = 44

!*** 'DEPENDENT/BENEFICIARIES'
  let $Tmp_Txt = UPPER($BAS004-DEP-BENEFS)
  print $Tmp_Txt             (+3,1) bold

!*** 'The first box lists all dependents with current health coverages on file.'
!*** 'Please make any necessary changes and identify any new dependents or beneficiaries'
!*** 'in the last box provided for you.'
!*** 'Also listed are the beneficiaries for your eligible non-health plans.'
!*** 'Please fill in either percent-of-benefit or flat-amount for primary and'
!*** 'contingent beneficiaries.'
!*** 'Beneficiaries are considered to be primary unless specified as contingent (CON).'
!*** 'For each plan type, the total of all primary percents must equal 100% and'
!*** 'the total of all contingent percents must equal 100%.'
!*** 'Only one beneficiary can be selected to receive excess (EXC) for each plan type.'

  let $Tmp_Txt = $BAS004-T24-L01A
  let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L02A
  let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L03A
  let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L04A
  let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L05A
  let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L06A
  let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L07A
  let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L08A
  let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L09A
  let $Tmp_Txt = $Tmp_Txt || $BAS004-T24-L10A
  print $Tmp_Txt   (+1,1,120) WRAP 120 6

  do Count-Eligibility-Options

  if &EligOptsCnt1 > 0
    do Medical-Dental-Dependents
  end-if
  if &EligOptsCnt2 > 0
    do Life-Insurance-Benef
  end-if
  if &EligOptsCnt4 > 0
    do Savings-Investments-Benef
  end-if
  if (&EligOptsCnt8 > 0) and NOT ($FedFlag = 'Y')
    do Pension-Benef
  end-if

  do New-Dep-Benef-Entry-Lines

End-Procedure


!******************************************
Begin-Procedure Count-Eligibility-Options
!******************************************

Begin-SELECT

COUNT(*)  &EligOptsCnt1

FROM  PS_BAS_PARTIC_PLAN PL1
WHERE PL1.SCHED_ID      = &A.Sched_Id
AND   PL1.EMPLID        = &A.EmplId
AND   PL1.BENEFIT_RCD_NBR  = &A.BENEFIT_RCD_NBR
AND   PL1.EVENT_ID      = &A.Event_Id
AND   PL1.ELECT_ALLOWED = 'Y'
AND   PL1.PLAN_TYPE LIKE '1%'

End-SELECT

Begin-SELECT

COUNT(*)  &EligOptsCnt2

FROM  PS_BAS_PARTIC_PLAN PL2
WHERE PL2.SCHED_ID      = &A.Sched_Id
AND   PL2.EMPLID        = &A.EmplId
AND   PL2.BENEFIT_RCD_NBR  = &A.BENEFIT_RCD_NBR
AND   PL2.EVENT_ID      = &A.Event_Id
AND   PL2.ELECT_ALLOWED = 'Y'
AND   PL2.PLAN_TYPE LIKE '2%'

End-SELECT

Begin-SELECT

COUNT(*)  &EligOptsCnt4

FROM  PS_BAS_PARTIC_PLAN PL4
WHERE PL4.SCHED_ID      = &A.Sched_Id
AND   PL4.EMPLID        = &A.EmplId
AND   PL4.BENEFIT_RCD_NBR  = &A.BENEFIT_RCD_NBR
AND   PL4.EVENT_ID      = &A.Event_Id
AND   PL4.ELECT_ALLOWED = 'Y'
AND   PL4.PLAN_TYPE LIKE '4%'

End-SELECT

if ($FedFlag = 'Y')
   let $SavPlanType = '42'
else
   let $SavPlanType = '40'
end-if

Begin-SELECT

COUNT(*)  &EligOptsCnt8

FROM  PS_BAS_PARTIC_PLAN PL8
WHERE PL8.SCHED_ID      = &A.Sched_Id
AND   PL8.EMPLID        = &A.EmplId
AND   PL8.BENEFIT_RCD_NBR  = &A.BENEFIT_RCD_NBR
AND   PL8.EVENT_ID      = &A.Event_Id
AND   PL8.ELECT_ALLOWED = 'Y'
AND   PL8.PLAN_TYPE = $SavPlanType

End-SELECT

End-Procedure


!******************************************
Begin-Procedure Check-For-Page-Break
!******************************************

  let $PrintHeaderFlag = 'N'

  if ($ContinuedFlag = 'N')
    let $PrintHeaderFlag = 'Y'
  end-if

  if (#current-line > #PageContinueLine) and ($ContinuedFlag = 'Y')
    print $ContinuedNextPage (+2,53) bold
  end-if

  if ((#current-line > #PageBreakLine)    and ($ContinuedFlag = 'N')) or
     ((#current-line > #PageContinueLine) and ($ContinuedFlag = 'Y'))
    do Bottom-Line
    new-page
    let $PrintHeaderFlag = 'Y'
    print ''              (-2,1)
  end-if

  if (#current-line > #PageContinueLine) and ($ContinuedFlag = 'Y')
    print $ContinuedPrevPage (+1,5) bold
  end-if

  let $ContinuedFlag = 'Y'

End-Procedure


!******************************************
Begin-Procedure Medical-Dental-Header
!******************************************

  do Check-For-Page-Break
  if $PrintHeaderFlag = 'Y'

    graphic (+4,5,35) box 3
    graphic (0,40,15) box 3
    graphic (0,55,15) box 3

    let $Tmp_Txt = UPPER($BAS004-HLTH-TITLE)
    print $Tmp_Txt     (0,6) Bold
    let $Tmp_Txt = UPPER($BAS004-DEPENDENTS)
    print $Tmp_Txt     (+2,10)
    let $Tmp_Txt = UPPER($BEN1-MEDICAL)
    print $Tmp_Txt     (0,43)
    let $Tmp_Txt = UPPER($BEN1-DENTAL)
    print $Tmp_Txt     (0,59)

  end-if

End-Procedure


!****************************************
begin-procedure Medical-Dental-Dependents
!****************************************

  let $Prior_Dep_Benef = ''
  let $FoundDepsFlag = 'N'
  let $ContinuedFlag = 'N'

Begin-SELECT

BA.EMPLID
BA.DEPENDENT_BENEF
BA.NAME
BB.PLAN_TYPE

   if $Prior_Dep_Benef <> &BA.DEPENDENT_BENEF

      do Medical-Dental-Header

      graphic (+1,5,35) box 2
      graphic (0,40,15) box 2
      graphic (0,55,15) box 2

      print &BA.DEPENDENT_BENEF (+1,7,2)
      print &BA.NAME            (0,+1,27)

   end-if

   let $Tmp_Txt = UPPER($BEN1-YES)
   evaluate &BB.PLAN_TYPE
     when = '10'
     print $Tmp_Txt (0,45)
     when = '11'
       print $Tmp_Txt (0,61)
   end-evaluate

   let $Prior_Dep_Benef = &BA.DEPENDENT_BENEF
   let $FoundDepsFlag = 'Y'

FROM  PS_DEP_BEN_NAME BA,
      PS_DEP_BEN_EFF BF,
      PS_HEALTH_DEPENDNT BB,
      PS_HEALTH_BENEFIT  BP
WHERE BP.EMPLID           = &A.EMPLID
  and BP.EMPL_RCD         = &A.EMPL_RCD
  and BP.EFFDT =
      (SELECT MAX(BPP.EFFDT)
       FROM  PS_HEALTH_BENEFIT   BPP
       WHERE BPP.EMPLID          = BP.EMPLID
       and   BPP.EMPL_RCD       = BP.EMPL_RCD
       and   BPP.COBRA_EVENT_ID  = BP.COBRA_EVENT_ID
       and   BPP.PLAN_TYPE       = BP.PLAN_TYPE
       and   BPP.BENEFIT_NBR        = BP.BENEFIT_NBR
       and   BPP.EFFDT          <= &A.Event_Dt)
  and BA.EMPLID           = BP.EMPLID
  and BA.EFFDT = (SELECT MAX(BA1.EFFDT)
                  FROM PS_DEP_BEN_NAME BA1
                  WHERE BA1.EMPLID = BA.EMPLID
                  AND BA1.DEPENDENT_BENEF = BA.DEPENDENT_BENEF
                  AND BA1.EFFDT <= $ASOFTODAY)
  and BF.EMPLID = BA.EMPLID
  and BF.DEPENDENT_BENEF = BA.DEPENDENT_BENEF
  and BF.EFFDT = (SELECT MAX(BF1.EFFDT)
                  FROM PS_DEP_BEN_EFF BF1
                  WHERE BF1.EMPLID = BF.EMPLID
                  AND BF1.DEPENDENT_BENEF = BF.DEPENDENT_BENEF
                  AND BF1.EFFDT <= &A.Event_Dt)
  and BF.DEP_BENEF_TYPE   IN ('D','O')
  and BB.EMPLID           = BP.EMPLID
  and BB.EMPL_RCD        = BP.EMPL_RCD
  and BP.PLAN_TYPE        IN ('10','11')
  AND BP.PLAN_TYPE        = BB.PLAN_TYPE
  and BB.DEPENDENT_BENEF  = BA.DEPENDENT_BENEF
  and BB.EFFDT            = BP.EFFDT

ORDER BY BA.DEPENDENT_BENEF ASC
End-SELECT

  if $FoundDepsFlag = 'N'
    do Get-Dependents
  end-if
  do Accomodate-Additional-Dependents

End-Procedure


!*****************************
begin-procedure Get-Dependents
!*****************************

Begin-SELECT

GD.EMPLID
GD.DEPENDENT_BENEF
GD.NAME

   do Medical-Dental-Header

   graphic (+1,5,35) box 2
   graphic (0,40,15) box 2
   graphic (0,55,15) box 2

   print &GD.DEPENDENT_BENEF   (+1,7,2)
   print &GD.NAME              (0,+1,27)

FROM  PS_DEP_BEN_NAME GD,
      PS_DEP_BEN_EFF  GF
WHERE GD.EMPLID           = &A.EMPLID
  and GD.EFFDT = (SELECT MAX(GD1.EFFDT)
                  FROM PS_DEP_BEN_NAME GD1
                  WHERE GD1.EMPLID = GD.EMPLID
                  AND GD1.DEPENDENT_BENEF = GD.DEPENDENT_BENEF
                  AND GD1.EFFDT <= $ASOFTODAY)
  and GD.EMPLID = GF.EMPLID
  AND GD.DEPENDENT_BENEF = GF.DEPENDENT_BENEF
  and GF.EFFDT = (SELECT MAX(GF1.EFFDT)
                  FROM PS_DEP_BEN_EFF GF1
                  WHERE GF1.EMPLID = GF.EMPLID
                  AND GF1.DEPENDENT_BENEF = GF.DEPENDENT_BENEF
                  AND GF1.EFFDT <= &A.Event_Dt)
  and GF.DEP_BENEF_TYPE   IN ('D','O')
ORDER BY GD.DEPENDENT_BENEF ASC
End-SELECT

End-Procedure


!***********************************************
Begin-Procedure Accomodate-Additional-Dependents
!***********************************************

  let #ctr = {BLANK_DEP_LINES}
  while #ctr > 0

    do Medical-Dental-Header

    graphic (+1,5,35) box 2
    graphic (0,40,15) box 2
    graphic (0,55,15) box 2
    let #ctr = #ctr - 1

    graphic (+2,5,35) box 2
    graphic (0,40,15) box 2
    graphic (0,55,15) box 2
    let #ctr = #ctr - 1

  end-while

End-Procedure


!************************************
Begin-Procedure Life-Insurance-Header
!************************************

  do Check-For-Page-Break
  if $PrintHeaderFlag = 'Y'

    graphic (+6,5,33) box 3
    graphic (0,38,11) box 3
    graphic (0,49,14) box 3
    graphic (0,63,5)  box 3
    graphic (0,68,5)  box 3

    let $Tmp_Txt = UPPER($BAS004-LIFE-TITLE)
    print $Tmp_Txt     (0,6) Bold
    let $Tmp_Txt = UPPER($BAS004-BENEFICIARIES)
    print $Tmp_Txt     (+2,10)
    let $Tmp_Txt = UPPER($BAS004-BEN-PER)
    print $Tmp_Txt     (0,39)
    let $Tmp_Txt = UPPER($BEN1-FLAT-AMT)
    print $Tmp_Txt     (0,50)
    let $Tmp_Txt = UPPER($BAS004-EXCESS)
    print $Tmp_Txt     (0,64)
    let $Tmp_Txt = UPPER($BAS004-CONTINGENT)
    print $Tmp_Txt     (0,69)

  end-if

End-Procedure


!***********************************
begin-procedure Life-Insurance-Benef
!***********************************

  let $FoundDepsFlag = 'N'
  let $ContinuedFlag = 'N'

Begin-SELECT

BA1.EMPLID
BA1.DEPENDENT_BENEF
BA1.NAME
BB1.PLAN_TYPE
BB1.BENEF_PCT
BB1.FLAT_AMOUNT
BB1.EXCESS
BB1.CONTINGENT

   do Life-Insurance-Header

   graphic (+1,5,33) box 2
   graphic (0,38,11) box 2
   graphic (0,49,14) box 2
   graphic (0,63,5)  box 2
   graphic (0,68,5)  box 2

   print &BA1.DEPENDENT_BENEF   (+1,7)
   print &BA1.NAME              (0,+1)
   print &BB1.BENEF_PCT         (0,42)
   print &BB1.FLAT_AMOUNT       (0,54)
   let $Yes_Txt = UPPER($BEN1-YES)
   let $No_Txt =  UPPER($BEN1-NO)
   if &BB1.EXCESS = 'Y'
     print $Yes_Txt             (0,64)
   else
     print $No_Txt              (0,64)
   end-if
   if &BB1.CONTINGENT = 'Y'
     print $Yes_Txt             (0,69)
   else
     print $No_Txt              (0,69)
   end-if

   let $FoundDepsFlag = 'Y'

FROM  PS_DEP_BEN_NAME BA1,
      PS_DEP_BEN_EFF BF1,
      PS_LIFE_ADD_BENEFC BB1,
      PS_LIFE_ADD_BEN    BC1

WHERE BC1.EMPLID           = &A.EMPLID
  AND BC1.EMPL_RCD         = &A.EMPL_RCD
  AND BC1.EFFDT            =
      (SELECT MAX(BBC1.EFFDT)
      FROM  PS_LIFE_ADD_BEN BBC1
      WHERE BBC1.EMPLID          = BC1.EMPLID
      AND   BBC1.EMPL_RCD       = BC1.EMPL_RCD
      AND   BBC1.PLAN_TYPE       = BC1.PLAN_TYPE
      AND   BBC1.BENEFIT_NBR        = BC1.BENEFIT_NBR
      AND   BBC1.EFFDT          <= &A.Event_Dt)
  AND BA1.EMPLID           = BC1.EMPLID
  AND BA1.EFFDT = (SELECT MAX(BA2.EFFDT)
                   FROM PS_DEP_BEN_NAME BA2
                   WHERE BA2.EMPLID = BA1.EMPLID
                   AND BA2.DEPENDENT_BENEF = BA1.DEPENDENT_BENEF
                   AND BA2.EFFDT <= $ASOFTODAY)
  AND BB1.EMPLID           = BA1.EMPLID
  AND BB1.DEPENDENT_BENEF  = BA1.DEPENDENT_BENEF
  AND BF1.EMPLID           = BA1.EMPLID
  AND BF1.DEPENDENT_BENEF  = BA1.DEPENDENT_BENEF
  AND BF1.EFFDT = (SELECT MAX(BF2.EFFDT)
                   FROM PS_DEP_BEN_EFF BF2
                   WHERE BF2.EMPLID = BF1.EMPLID
                   AND BF2.DEPENDENT_BENEF = BF1.DEPENDENT_BENEF
                   AND BF2.EFFDT <= &A.Event_Dt)
  AND BF1.DEP_BENEF_TYPE  IN ('B','O')
  AND BB1.EMPL_RCD        = BC1.EMPL_RCD
  AND BC1.PLAN_TYPE        = '20'
  AND BB1.PLAN_TYPE        = BC1.PLAN_TYPE
  AND BB1.EFFDT            = BC1.EFFDT

ORDER BY BA1.DEPENDENT_BENEF ASC, BB1.PLAN_TYPE ASC
End-SELECT

  if $FoundDepsFlag = 'N'
    do Print-Life-Benef-List
  end-if
  do New-Entry-Life-Benef

End-Procedure


!************************************
begin-procedure Print-Life-Benef-List
!************************************

Begin-SELECT

LI.EMPLID
LI.DEPENDENT_BENEF
LI.NAME

  do Life-Insurance-Header

  graphic (+1,5,33) box 2
  graphic (0,38,11) box 2
  graphic (0,49,14) box 2
  graphic (0,63,5)  box 2
  graphic (0,68,5)  box 2

  print   &LI.DEPENDENT_BENEF   (+1,7)
  print   &LI.NAME              (0,+1)

FROM  PS_DEP_BEN_NAME LI,
      PS_DEP_BEN_EFF LF
WHERE LI.EMPLID           = &A.EMPLID
AND   LI.EFFDT = (SELECT MAX(LI2.EFFDT)
                   FROM PS_DEP_BEN_NAME LI2
                   WHERE LI2.EMPLID = LI.EMPLID
                   AND LI2.DEPENDENT_BENEF = LI.DEPENDENT_BENEF
                   AND LI2.EFFDT <= $ASOFTODAY)
AND LI.EMPLID = LF.EMPLID
AND LI.DEPENDENT_BENEF = LF.DEPENDENT_BENEF
AND LF.EFFDT = (SELECT MAX(LF2.EFFDT)
                   FROM PS_DEP_BEN_EFF LF2
                   WHERE LF2.EMPLID = LF.EMPLID
                   AND LF2.DEPENDENT_BENEF = LF.DEPENDENT_BENEF
                   AND LF2.EFFDT <= &A.Event_Dt)
AND LF.DEP_BENEF_TYPE   IN ('B','O')
ORDER BY LI.DEPENDENT_BENEF ASC
End-SELECT

End-Procedure


!***********************************
Begin-Procedure New-Entry-Life-Benef
!***********************************

  let #ctr = {BLANK_DEP_LINES}
  while #ctr > 0

    do Life-Insurance-Header

    graphic (+1,5,33) box 2
    graphic (0,38,11) box 2
    graphic (0,49,14) box 2
    graphic (0,63,5)  box 2
    graphic (0,68,5)  box 2
    let #ctr = #ctr - 1

    graphic (+2,5,33) box 2
    graphic (0,38,11) box 2
    graphic (0,49,14) box 2
    graphic (0,63,5)  box 2
    graphic (0,68,5)  box 2
    let #ctr = #ctr - 1

  end-while

End-Procedure


!*****************************************
Begin-Procedure Savings-Investments-Header
!*****************************************

  do Check-For-Page-Break
  if $PrintHeaderFlag = 'Y'

    graphic (+6,5,33) box 3
    graphic (0,38,11) box 3

    let $Tmp_Txt = UPPER($BAS004-SVGS-TITLE)
    print $Tmp_Txt     (0,6) Bold
    let $Tmp_Txt = UPPER($BAS004-BENEFICIARIES)
    print $Tmp_Txt     (+2,10)
    let $Tmp_Txt = UPPER($BAS004-BEN-PER)
    print $Tmp_Txt     (0,39)

  end-if

End-Procedure


!****************************************
begin-procedure Savings-Investments-Benef
!****************************************

  let $FoundDepsFlag = 'N'
  let $ContinuedFlag = 'N'

if ($FedFlag = 'Y')
   let $SavPlanType = '42'
else
   let $SavPlanType = '40'
end-if

Begin-SELECT

BA2.EMPLID
BA2.DEPENDENT_BENEF
BA2.NAME
BB2.PLAN_TYPE
BB2.BENEF_PCT

   do Savings-Investments-Header

   graphic (+1,5,33) box 2
   graphic (0,38,11) box 2

   print &BA2.DEPENDENT_BENEF   (+1,7)
   print &BA2.NAME              (0,+1)
   print &BB2.BENEF_PCT         (0,42)

   let $FoundDepsFlag = 'Y'

FROM  PS_DEP_BEN_NAME BA2,
      PS_DEP_BEN_EFF BD2,
      PS_SAVINGS_BENEFIC BB2,
      PS_SAVINGS_PLAN    BC2

WHERE BC2.EMPLID           = &A.EMPLID
  AND BC2.EMPL_RCD         = &A.EMPL_RCD
  AND BC2.EFFDT            =
      (SELECT MAX(BBC2.EFFDT)
      FROM  PS_SAVINGS_PLAN BBC2
      WHERE BBC2.EMPLID          = BC2.EMPLID
      and   BBC2.EMPL_RCD       = BC2.EMPL_RCD
      and   BBC2.PLAN_TYPE       = BC2.PLAN_TYPE
      and   BBC2.BENEFIT_NBR        = BC2.BENEFIT_NBR
      and   BBC2.EFFDT          <= &A.Event_Dt)
  AND BC2.EMPLID           = BA2.EMPLID
  AND BB2.EMPLID           = BA2.EMPLID
  AND BA2.EFFDT = (SELECT MAX(BA.EFFDT)
                   FROM PS_DEP_BEN_NAME BA
                   WHERE BA.EMPLID = BA2.EMPLID
                   AND BA.DEPENDENT_BENEF = BA2.DEPENDENT_BENEF
                   AND BA.EFFDT <= $ASOFTODAY)
  AND BC2.EMPL_RCD        = BB2.EMPL_RCD
  AND BD2.EMPLID = BA2.EMPLID
  AND BD2.DEPENDENT_BENEF  = BA2.DEPENDENT_BENEF
  AND BD2.EFFDT = (SELECT MAX(BD.EFFDT)
                   FROM PS_DEP_BEN_EFF BD
                   WHERE BD.EMPLID = BD2.EMPLID
                   AND BD.DEPENDENT_BENEF = BD2.DEPENDENT_BENEF
                   AND BD.EFFDT <= &A.Event_Dt)
  AND BD2.DEP_BENEF_TYPE   IN ('B','O')
  AND BB2.DEPENDENT_BENEF  = BA2.DEPENDENT_BENEF
  AND BB2.PLAN_TYPE        = $SavPlanType
  AND BB2.PLAN_TYPE        = BC2.PLAN_TYPE
  AND BB2.EFFDT            = BC2.EFFDT

ORDER BY BA2.DEPENDENT_BENEF ASC, BB2.PLAN_TYPE ASC
End-SELECT

  if $FoundDepsFlag = 'N'
    do Print-Sav-Inv-Benef-List
  end-if
  do New-Entry-Sav-Inv-Benef

End-Procedure


!***************************************
Begin-Procedure Print-Sav-Inv-Benef-List
!***************************************

Begin-SELECT

SI.EMPLID
SI.DEPENDENT_BENEF
SI.NAME

  do Savings-Investments-Header

  graphic (+1,5,33) box 2
  graphic (0,38,11) box 2

  print   &SI.DEPENDENT_BENEF   (+1,7)
  print   &SI.NAME              (0,+1)

FROM  PS_DEP_BEN_NAME SI,
      PS_DEP_BEN_EFF SF
WHERE SI.EMPLID           = &A.EMPLID
AND   SI.EFFDT = (SELECT MAX(S.EFFDT)
                   FROM PS_DEP_BEN_NAME S
                   WHERE S.EMPLID = SI.EMPLID
                   AND S.DEPENDENT_BENEF = SI.DEPENDENT_BENEF
                   AND S.EFFDT <= $ASOFTODAY)
AND SF.EMPLID = SI.EMPLID
AND SF.DEPENDENT_BENEF  = SI.DEPENDENT_BENEF
AND SF.EFFDT = (SELECT MAX(SF2.EFFDT)
                   FROM PS_DEP_BEN_EFF SF2
                   WHERE SF2.EMPLID = SF.EMPLID
                   AND SF2.DEPENDENT_BENEF = SF.DEPENDENT_BENEF
                   AND SF2.EFFDT <= &A.Event_Dt)
  and SF.DEP_BENEF_TYPE   IN ('B','O')
ORDER BY SI.DEPENDENT_BENEF ASC

End-SELECT

End-Procedure


!**************************************
Begin-Procedure New-Entry-Sav-Inv-Benef
!**************************************

  let #ctr = {BLANK_DEP_LINES}
  while #ctr > 0

    do Savings-Investments-Header

    graphic (+1,5,33) box 2
    graphic (0,38,11) box 2
    let #ctr = #ctr - 1

    graphic (+2,5,33) box 2
    graphic (0,38,11) box 2
    let #ctr = #ctr - 1

  end-while

End-Procedure


!******************************************
Begin-Procedure Pension-Header
!******************************************

  do Check-For-Page-Break
  if $PrintHeaderFlag = 'Y'

    graphic (+6,5,33) box 3
    graphic (0,38,11) box 3
    graphic (0,49,14) box 3
    graphic (0,63,5)  box 3
    graphic (0,68,5)  box 3

    let $Tmp_Txt = UPPER($BAS004-PENS-TITLE)
    print $Tmp_Txt     (0,6) Bold
    let $Tmp_Txt = UPPER($BAS004-BENEFICIARIES)
    print $Tmp_Txt     (+2,10)
    let $Tmp_Txt = UPPER($BAS004-BEN-PER)
    print $Tmp_Txt     (0,39)
    let $Tmp_Txt = UPPER($BEN1-FLAT-AMT)
    print $Tmp_Txt     (0,50)
    let $Tmp_Txt = UPPER($BAS004-EXCESS)
    print $Tmp_Txt     (0,64)
    let $Tmp_Txt = UPPER($BAS004-CONTINGENT)
    print $Tmp_Txt     (0,69)

  end-if

End-Procedure


!****************************
begin-procedure Pension-Benef
!****************************

  let $FoundDepsFlag = 'N'
  let $ContinuedFlag = 'N'

Begin-SELECT

BA3.EMPLID
BA3.DEPENDENT_BENEF
BA3.NAME
BB3.PLAN_TYPE
BB3.BENEF_PCT
BB3.FLAT_AMOUNT
BB3.EXCESS
BB3.CONTINGENT

   do Pension-Header

   graphic (+1,5,33) box 2
   graphic (0,38,11) box 2
   graphic (0,49,14) box 2
   graphic (0,63,5)  box 2
   graphic (0,68,5)  box 2

   print &BA3.DEPENDENT_BENEF   (+1,7)
   print &BA3.NAME              (0,+1)
   print &BB3.BENEF_PCT         (0,42)
   print &BB3.FLAT_AMOUNT       (0,54)

   let $Yes_Txt = UPPER($BEN1-YES)
   let $No_Txt =  UPPER($BEN1-NO)
   if &BB3.EXCESS = 'Y'
     print $Yes_Txt             (0,64)
   else
     print $No_Txt              (0,64)
   end-if
   if &BB3.CONTINGENT = 'Y'
     print $Yes_Txt             (0,69)
   else
     print $No_Txt              (0,69)
   end-if

   let $FoundDepsFlag = 'Y'

FROM  PS_DEP_BEN_NAME BA3,
      PS_DEP_BEN_EFF BD3,
      PS_PENSION_BENEFC BB3,
      PS_PENSION_PLAN BC3

WHERE BC3.EMPLID           = &A.EMPLID
  AND BC3.EMPL_RCD         = &A.EMPL_RCD
  AND BC3.EFFDT            =
      (SELECT MAX(BBC3.EFFDT)
      FROM  PS_PENSION_PLAN BBC3
      WHERE BBC3.EMPLID          = BC3.EMPLID
      and   BBC3.EMPL_RCD       = BC3.EMPL_RCD
      and   BBC3.PLAN_TYPE       = BC3.PLAN_TYPE
      and   BBC3.BENEFIT_NBR        = BC3.BENEFIT_NBR
      and   BBC3.EFFDT          <= &A.Event_Dt)
  AND BC3.EMPLID           = BB3.EMPLID
  AND BB3.EMPLID           = BA3.EMPLID
  AND BC3.EMPL_RCD        = BB3.EMPL_RCD
  AND BA3.EFFDT = (SELECT MAX(BA4.EFFDT)
                   FROM PS_DEP_BEN_NAME BA4
                   WHERE BA4.EMPLID = BA3.EMPLID
                   AND BA4.DEPENDENT_BENEF = BA3.DEPENDENT_BENEF
                   AND BA4.EFFDT <= $ASOFTODAY)
AND BD3.EMPLID = BA3.EMPLID
AND BD3.DEPENDENT_BENEF  = BA3.DEPENDENT_BENEF
AND BD3.EFFDT = (SELECT MAX(BD4.EFFDT)
                   FROM PS_DEP_BEN_EFF BD4
                   WHERE BD4.EMPLID = BD3.EMPLID
                   AND BD4.DEPENDENT_BENEF = BD3.DEPENDENT_BENEF
                   AND BD4.EFFDT <= &A.Event_Dt)
  AND BD3.DEP_BENEF_TYPE   IN ('B','O')
  AND BB3.DEPENDENT_BENEF  = BA3.DEPENDENT_BENEF
  AND BB3.PLAN_TYPE        = '80'
  AND BB3.PLAN_TYPE        = BB3.PLAN_TYPE
  AND BB3.EFFDT            = BC3.EFFDT

ORDER BY BA3.DEPENDENT_BENEF ASC, BB3.PLAN_TYPE ASC
End-SELECT

  if $FoundDepsFlag = 'N'
    do Print-Pension-Benef-List
  end-if
  do New-Entry-Pension-Benef

End-Procedure


!***************************************
Begin-Procedure Print-Pension-Benef-List
!***************************************

Begin-SELECT

PN.EMPLID
PN.DEPENDENT_BENEF
PN.NAME

  do Pension-Header

  graphic (+1,5,33) box 2
  graphic (0,38,11) box 2
  graphic (0,49,14) box 2
  graphic (0,63,5)  box 2
  graphic (0,68,5)  box 2

  print   &PN.DEPENDENT_BENEF   (+1,7)
  print   &PN.NAME              (0,+1)

FROM  PS_DEP_BEN_NAME PN,
      PS_DEP_BEN_EFF PF
WHERE PN.EMPLID           = &A.EMPLID
AND   PN.EFFDT = (SELECT MAX(PN1.EFFDT)
                   FROM PS_DEP_BEN_NAME PN1
                   WHERE PN1.EMPLID = PN.EMPLID
                   AND PN1.DEPENDENT_BENEF = PN.DEPENDENT_BENEF
                   AND PN1.EFFDT <= $ASOFTODAY)
AND PF.EMPLID = PN.EMPLID
AND PF.DEPENDENT_BENEF  = PN.DEPENDENT_BENEF
AND PF.EFFDT = (SELECT MAX(PF2.EFFDT)
                   FROM PS_DEP_BEN_EFF PF2
                   WHERE PF2.EMPLID = PF.EMPLID
                   AND PF2.DEPENDENT_BENEF = PF.DEPENDENT_BENEF
                   AND PF2.EFFDT <= &A.Event_Dt)
and PF.DEP_BENEF_TYPE   IN ('B','O')
ORDER BY PN.DEPENDENT_BENEF ASC

End-SELECT

End-Procedure


!**************************************
Begin-Procedure New-Entry-Pension-Benef
!**************************************

  let #ctr = {BLANK_DEP_LINES}
  while #ctr > 0

    do Pension-Header

    graphic (+1,5,33) box 2
    graphic (0,38,11) box 2
    graphic (0,49,14) box 2
    graphic (0,63,5)  box 2
    graphic (0,68,5)  box 2
    let #ctr = #ctr - 1

    graphic (+2,5,33) box 2
    graphic (0,38,11) box 2
    graphic (0,49,14) box 2
    graphic (0,63,5)  box 2
    graphic (0,68,5)  box 2
    let #ctr = #ctr - 1

  end-while

End-Procedure


!*****************************************
Begin-Procedure New-Dep-Benef-Entry-Header
!*****************************************

  let #PageBreakLine = 35
  do Check-For-Page-Break
  if $PrintHeaderFlag = 'Y'

    graphic (+6,5,27) box 3
    graphic (0,32,14) box 3
    graphic (0,46,13) box 3
    graphic (0,59,5)  box 3
    graphic (0,64,10) box 3

    let $Tmp_Txt = UPPER($BAS004-NEW-DEP-BEN)
    print $Tmp_Txt     (0,6) Bold
    let $Tmp_Txt = UPPER($BAS004-DEP-BEN-NM)
    print $Tmp_Txt     (+2,7)
    let $Tmp_Txt = UPPER($BEN1-RELATIONSHIP)
    print $Tmp_Txt     (0,33)
    let $Tmp_Txt = UPPER($BEN1-DATE-OF-BIRTH)
    print $Tmp_Txt     (0,47)
    let $Tmp_Txt = UPPER($BEN1-SEX)
    print $Tmp_Txt     (0,60)
    let $Tmp_Txt = UPPER($BAS004-NATIONAL-ID)
    print $Tmp_Txt     (0,65)
    print ''           (-1,1)

  end-if

End-Procedure


!****************************************
Begin-Procedure New-Dep-Benef-Entry-Lines
!****************************************

  let $ContinuedFlag = 'N'

  let #ctr = (2 * {BLANK_DEP_LINES})
  while #ctr > 0

     do New-Dep-Benef-Entry-Header

     graphic (+2,5,27) box 2
     graphic (0,32,14) box 2
     graphic (0,46,13) box 2
     graphic (0,59,5)  box 2
     graphic (0,64,10) box 2
     let #ctr = #ctr - 1

     graphic (+2,5,27) box 2
     graphic (0,32,14) box 2
     graphic (0,46,13) box 2
     graphic (0,59,5)  box 2
     graphic (0,64,10) box 2
     let #ctr = #ctr - 1

  end-while

End-Procedure

!************************* End of Program ******************************

