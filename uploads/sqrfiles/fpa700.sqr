!*************************************************************************                                                                    *
!  FPA700.sqr:  reclassification simulation                              *
!                                                                        *
!  Run parameter :                                                       *
!                                                                        *
!           $OprId            :                                          *
!           $fp_conversion_id : Reclassification grid Id                 *
!           $date_appli       : Administrative application date          *
!                                                                        *
!*************************************************************************
!*************************************************************************                                                                                                                   *
!               Confidentiality Information:                             *
!                                                                        *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:12:48:09                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                        *
!*************************************************************************
!Remark : in the comments, CAE means Commitment Accounting Element       *
!*************************************************************************
!*************************************************************************
!                                                                        *
!                                                                        *
!    Function : Proc-Main                                                *
!                                                                        *
!    Description : Select and simulation                                 *
!                                                                        *
!                                                                        *
!*************************************************************************

#include 'setenv.sqc'         ! Set environment
#include 'setup01.sqc'        ! Printer and page-size initialization

#DEFINE CONVERSION



BEGIN-REPORT

Do Init-DateTime
Do Init-Number

do Get-Current-DateTime()
do Init-Report
do Proc-Main
do stdapi-term

END-REPORT



begin-heading 2

do Get_Field_Information($ReportID, 'REPORT_TITLE', $ReportTitle,   #DW)
do Get_Field_Information($ReportID, 'DATE',         $DATE_LBL,      #DW)
Let $p_ReportTitle = '* ' || $ReportTitle || ' *'

print '***************************************' (+1,20)
print $p_ReportTitle                            (+1,20)
print '***************************************' (+1,20)
print $DATE_LBL                                 (,+20)
date-time (,+1) DD/MM/YY

end-heading



!***************************************************************
!
!
!       Init-Report
!
!
!***************************************************************
BEGIN-PROCEDURE  Init-Report

move 'FPA700' to $ReportID

do Stdapi-Init

let $language_cd = $CURR_LANGUAGE_CD

do Init_Report_Translation($ReportID, $language_cd)
do Append_Report_Translation($ReportID)

do Security-Param       !SQR security

if isnull($prcs_process_instance)

  input $fp_conversion_id 'Reclassification grid number '
  input $date_appli 'Administrative application date (YYYY-MM-DD)'
  do Convert-to-DTU-date($date_appli,$daa)
  input $conv_date 'Reclassification effdt (YYYY-MM-DD)'

else

  do FP-Select-Parameters
  do Select-Parameters

end-if

do rtrim_nnull($fp_conversion_id,$fp_conversion_id)

do Convert-to-DTU-date($conv_date,$conv_effdt)

END-PROCEDURE Init-Report



!************************************************************************
!
!       Procédure Get-Values:
!
!************************************************************************
BEGIN-PROCEDURE  Get-Values

do Get-From-Thru-Date
do Get-OprId
do Get-ConversionId
do Get-DAA
do Get-conv_effdt

END-PROCEDURE Get-Values



!**********************************************************************
!
!   Function    : Proc-Main
!
!   Description : launch the simulation
!
!***********************************************************************
BEGIN-PROCEDURE Proc-Main

! initialization
!---------------
do Get-Cal-Thirtieth($Cal-Thirtieth,$Termdt-cd)    !Calendar or Tirtieth
do flush-careerbis
let #result = 0

do convtabl-init         ! Initialization of the conversion array


! Copy from fpaeecareer to fpaeecareerbis
!----------------------------------------
let $read_act_tmp = 'B'         ! flag => insertion while reading (copy)
let $where_clause_tmp =' S.FP_INST_STAT = ''R'' AND (S.EFFDT >= {DATEIN-PREFIX}''' || $conv_date ||
'''{DYN-DateIn-Suffix} OR '||

' (S.EFFDT =
  (
    select max(S1.EFFDT) from PS_FPAEECAREER S1
    where S1.EMPLID = S.EMPLID
    AND S1.EMPL_RCD = S.EMPL_RCD
    AND S1.EFFDT <= {DATEIN-PREFIX}''' || $conv_date ||
    '''{DYN-DateIn-Suffix}
    AND S1.FP_INST_STAT = ''R'') AND ' ||


' S.EFFSEQ =
  (
    select max(S2.EFFSEQ) from PS_FPAEECAREER S2
    where S2.EMPLID = S.EMPLID
    AND S2.EMPL_RCD = S.EMPL_RCD
    AND S2.EFFDT = S.EFFDT
    AND S2.FP_INST_STAT = ''R'') AND '||

' ''02'' = (
                select TA6.FP_HIR_DOS_SIT from PS_FPAEELEGALSTAT TA6
                where TA6.EMPLID = S.EMPLID
                and TA6.EMPL_RCD = S.EMPL_RCD
                and TA6.EFFDT = '||
                 '   (
                       select max(TA7.EFFDT) from PS_FPAEELEGALSTAT TA7
                      where TA7.EMPLID = S.EMPLID '||
                       ' and TA7.EMPL_RCD = S.EMPL_RCD
                        and TA7.EFFDT <= {DATEIN-PREFIX}'''|| $conv_date||
                     '''{DYN-DateIn-Suffix})

             )))'

let $from_clause_tmp = 'PS_FPAEECAREER S'
let $orderby = ''

do read-career($from_clause_tmp,$where_clause_tmp,$read_act_tmp,$orderby) ! Reading and copy of FPAEECAREER


Display '****************************'
Display '******* Call FPA315 ********'
Display '****************************'


let $ThruDate = $conv_date
Let $_Emplid = ''

do FPA315-Main


! Select population needing reclassifcation
!------------------------------------------
let $where_clause_tmp =
' ( S.EFFDT =
        (
          select max(AW1.EFFDT)
          from PS_FPAEECAREERBIS AW1
          where AW1.EFFDT <= {DATEIN-PREFIX}''' || $conv_date ||
          '''{DYN-DateIn-Suffix} and AW1.EMPLID = S.EMPLID
          AND AW1.EMPL_RCD = S.EMPL_RCD
          and AW1.FP_INST_STAT = ''R'' '||
        ')  and
      ''N'' =
        (
          select AW2.FP_DEPART_CD from PS_FPMACTION_TBL AW2 '||
          'where AW2.ACTION = S.ACTION
          and AW2.EFFDT =
                (
                  select max(AW3.EFFDT) from PS_FPMACTION_TBL AW3 where
                  AW3.ACTION = S.ACTION and AW3.EFFDT <= S.EFFDT
                )
        ))'

!or S.EFFDT =
!    (
!      select max(AW4.EFFDT) from PS_FPAEECAREERBIS AW4
!      where AW4.EFFDT <= {DATEIN-PREFIX}'''|| $daa||'''{DYN-DateIn-Suffix}
!      and AW4.EFFDT > {DATEIN-PREFIX}'''|| $conv_date ||
!      '''{DYN-DateIn-Suffix} and AW4.EMPLID = S.EMPLID
!       and AW4.EMPL_RCD = S.EMPL_RCD
!       and AW4.FP_INST_STAT = ''R''
!       and ''02'' = ( '||
!                    'select TT2.FP_HIR_DOS_SIT from PS_FPAEELEGALSTAT TT2
!                    where TT2.EMPLID = S.EMPLID
!                    and TT2.EMPL_RCD = S.EMPL_RCD
!                    and TT2.EFFDT = '||
!                    '   (
!                           select max(TT3.EFFDT) from PS_FPAEELEGALSTAT TT3
!                           where TT3.EMPLID = S.EMPLID '||
!                           ' and TT3.EMPL_RCD = S.EMPL_RCD
!                           and TT3.EFFDT <= {DATEIN-PREFIX}'''|| $daa ||
!                        '''{DYN-DateIn-Suffix})
!
!                 )
!     ) '||'
!   and ''N'' =
!     (
!       select AW5.FP_DEPART_CD from PS_FPMACTION_TBL AW5
!       where AW5.ACTION = S.ACTION
!       and AW5.EFFDT =
!          (
!            select max(AW6.EFFDT) from PS_FPMACTION_TBL AW6
!            where AW6.ACTION = S.ACTION and AW6.EFFDT <= S.EFFDT
!          )
!      )
!    ) '||
!'and S.FP_INST_STAT = ''R'' '||
!'and S.EFFSEQ =
!        (
!                select max(AW7.EFFSEQ) from PS_FPAEECAREERBIS AW7
!                 where AW7.EMPLID = S.EMPLID and '||
!                'AW7.EMPL_RCD = S.EMPL_RCD and
!                 AW7.EFFDT = S.EFFDT '||
!                'AND S.FP_INST_STAT = ''R''


let $simul = 'N'
let $read_act_tmp = 'F' ! flag => select population
let $from_clause_tmp = 'PS_FPAEECAREERBIS S'
let $orderby = ''
do read-career($from_clause_tmp,$where_clause_tmp,$read_act_tmp,$orderby) ! select empl rcd needing reclassification

if $conv_date != $daa

    Display '****************************'
    Display '****** Call FPA315  ********'
    Display '****************************'

    let $ThruDate = $daa
    Let $_Emplid = ''
    do FPA315-Main

end-if


let $where_clause_tmp =
' S.EFFDT =
    (
      select max(AW4.EFFDT) from PS_FPAEECAREERBIS AW4
      where AW4.EFFDT <= {DATEIN-PREFIX}'''|| $daa||'''{DYN-DateIn-Suffix}
      and AW4.EFFDT > {DATEIN-PREFIX}'''|| $conv_date ||
      '''{DYN-DateIn-Suffix} and AW4.EMPLID = S.EMPLID
       and AW4.EMPL_RCD = S.EMPL_RCD
       and AW4.FP_INST_STAT = ''R''
       ) and '||'
       not exists (select AW8.EMPLID from PS_FPAEECAREERBIS AW8 '||' where AW8.EMPLID = S.EMPLID
       and AW8.EMPL_RCD = S.EMPL_RCD and AW8.EFFDT = S.EFFDT and AW8.EFFSEQ = S.EFFSEQ '||'
       and (AW8.FP_CONV_STAT = ''V'' or AW8.FP_CONV_STAT = ''S'' ))
       and ''02'' = ( '||
                    'select TT2.FP_HIR_DOS_SIT from PS_FPAEELEGALSTAT TT2
                    where TT2.EMPLID = S.EMPLID
                    and TT2.EMPL_RCD = S.EMPL_RCD
                    and TT2.EFFDT = '||
                    '   (
                           select max(TT3.EFFDT) from PS_FPAEELEGALSTAT TT3
                           where TT3.EMPLID = S.EMPLID '||
                           ' and TT3.EMPL_RCD = S.EMPL_RCD
                           and TT3.EFFDT <= {DATEIN-PREFIX}'''|| $daa ||
                        '''{DYN-DateIn-Suffix})

     ) '||'
   and ''N'' =
     (
       select AW5.FP_DEPART_CD from PS_FPMACTION_TBL AW5
       where AW5.ACTION = S.ACTION
       and AW5.EFFDT = '||'
          (
            select max(AW6.EFFDT) from PS_FPMACTION_TBL AW6
            where AW6.ACTION = S.ACTION and AW6.EFFDT <= S.EFFDT
          )
    ) '||
'and S.FP_INST_STAT = ''R'' '||
'and S.EFFSEQ =
        (
                select max(AW7.EFFSEQ) from PS_FPAEECAREERBIS AW7
                 where AW7.EMPLID = S.EMPLID and '||
                'AW7.EMPL_RCD = S.EMPL_RCD and
                 AW7.EFFDT = S.EFFDT '||
                'AND S.FP_INST_STAT = ''R''
                 ) '
!||
!'  order by S.EFFDT'
let $orderby = ' order by S.EFFDT'
do read-career($from_clause_tmp,$where_clause_tmp,$read_act_tmp,$orderby)

END-PROCEDURE Proc-Main



!******************************************************************************
!
!   Function    :   test-hyp
!
!   Description :   test if emplid belong to the population to be reclassified
!
!   INPUT       :   ind         -> reclassification hypothesis number
!                   action      -> action
!                   date        -> date of verification of the reclassification hypothesis
!                   effseq      -> sequence number
!                   daa_srch    -> 'Y' or 'N' : specify if the reclassification comes from DAA
!
!   OUTPUT      :   1   => Pass all the criteria
!                   0   => Don't pass all the criteria
!
!*******************************************************************************
BEGIN-PROCEDURE test-hyp(#ind,$date,$action,#effseq,$daa_srch,:#return)

! Test : does a reclassification already exist ?
!-----------------------------------------------

do exist-simul($date, #existe_simul)
if #existe_simul = 0

display '******* 1 *******'

! Fetch of the fields
!--------------------

    ! Age of Employee
    !----------------
    do get-age ($date,$birthdate)

    ! Hire date
    !----------
    do get-embauche-dt ($date,$hire_dt)

    ! Rating
    !-------
    do get-notation($date,#fp_rev_rating)

    ! Leave code
    !-----------
    do get-pos-dprt($date,$action,$TH.FP_DEPART_CD)

    ! Seniorities
    !------------
    do get-anciennete ($date,#effseq,$daa_srch)



! test of criteria :
!-------------------

    ! Condition on civil service position
    !------------------------------------
    if $TH.FP_DEPART_CD = 'N'
        display '******* 2 *******'

        ! Minimum actual seniority in step
        !---------------------------------
        if (  #_FP_TRUESEN_YR > convtable.FP_MIN_SEN_YY(#ind) )
        OR (( #_FP_TRUESEN_YR = convtable.FP_MIN_SEN_YY(#ind) ) AND ( #_FP_TRUESEN_MN >= convtable.FP_MIN_SEN_MM(#ind) ) )

            ! Max ...
            !---------
            if (convtable.FP_MAX_SEN_YY(#ind) = 0 AND convtable.FP_MAX_SEN_MM(#ind)=0)
            OR (( #_FP_TRUESEN_YR < convtable.FP_MAX_SEN_YY(#ind))
            OR ( (convtable.FP_MAX_SEN_YY(#ind) = 0
            OR  #_FP_TRUESEN_YR = convtable.FP_MAX_SEN_YY(#ind)
            )
            AND ( #_FP_TRUESEN_MN <= convtable.FP_MAX_SEN_MM(#ind)
            )))

                ! Career seniority in the Step
                !-----------------------------
                if (  #_FP_SENINSTPYR > convtable.FP_STP_SEN_YY(#ind) )
                OR (( #_FP_SENINSTPYR = convtable.FP_STP_SEN_YY(#ind) ) AND ( #_FP_SENINSTPMN>= convtable.FP_STP_SEN_MM(#ind) ) )

                    display '******* 3 *******'

                    ! Condition on age
                    !-----------------
                    do convert-to-DTU-Date($date,$date_dtu)
                    do FP-Calc-Dur($_Cal-Thirtieth,$birthdate,$date_dtu,#A,#M,#J)
                    let #age_min = convtable.FP_MIN_AGE_YY(#ind)
                    if (  #A > convtable.FP_MIN_AGE_YY(#ind) )
                    OR (( #A = convtable.FP_MIN_AGE_YY(#ind) ) AND ( #M >= convtable.FP_MIN_AGE_MN(#ind) ) )

                        display '******* 4 *******'

                        ! Conditions on hire date
                        !------------------------
                        if (($hire_dt <= convtable.FP_HIRANTE_DT(#ind)) OR ( isnull (convtable.FP_HIRANTE_DT(#ind)) ) )
                        AND (( $hire_dt >= convtable.FP_HIRPOST_DT(#ind)) OR ( isnull (convtable.FP_HIRPOST_DT(#ind)) ) )

                            display '******* 5 *******'

                            ! Condition on notation
                            !----------------------
                            if ( #fp_rev_rating >= convtable.fp_min_asm(#ind) ) OR ( convtable.FP_min_asm(#ind) = 0 )

                                display '******* 6 *******'
                                let #return = 1
                            else
                                let #return =0
                            end-if
                        else
                            let #return =0
                        end-if
                    else
                        let #return =0
                    end-if
                else
                    let #return =0
                end-if
            else
                let #return =0
            end-if
        else
            let #return =0
        end-if
    else
        let #return =0
    end-if
else
  let #return = 0
end-if

END-PROCEDURE test-hyp



!**************************************************************
!
!   Function    : get-pos-dprt
!
!   Description : Fetch the leave date
!
!**************************************************************
BEGIN-PROCEDURE get-pos-dprt($date,$action,:$TH.FP_DEPART_CD)

let $sql-statement = 'FPconv.SQR,get-pos-dprt,select,PS_FPMACTION_TBL'
BEGIN-SELECT On-Error=SQL-On-Error

TH.FP_DEPART_CD                  &TH.FP_DEPART_CD

 do rtrim_nnull(&TH.FP_DEPART_CD,$TH.FP_DEPART_CD)

from PS_FPMACTION_TBL TH
where TH.ACTION = $action
      and TH.EFFDT = (select max(TH1.EFFDT) from PS_FPMACTION_TBL TH1
                      where TH1.ACTION = $action and TH1.EFFDT <= {DATEIN-PREFIX}$date{DATEIN-SUFFIX})

END-SELECT

END-PROCEDURE get-pos-dprt



!****************************************************************
!
!   Function    : exist-simul
!
!   Description : is there already a simulation
!
!       INPUT   : $date     = test date
!       OUTPUT  : #exist    = 1 if already a simulation, 0 otherwise
!
!****************************************************************
BEGIN-PROCEDURE exist-simul ($date, :#exist)

let $sql-statement = 'FPconv.SQR,exist-simul ,select,PS_FPAEECAREERBIS'
BEGIN-SELECT On-Error=SQL-On-Error

COUNT (*)                       &exist

from PS_FPAEECAREERBIS A
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where   A.EMPLID = $_matricule
        AND A.EMPL_RCD = #_no_dossier
        AND (A.FP_CONV_STAT = 'S' OR A.FP_CONV_STAT ='V')

        and A.EMPLID = SCRTY.EMPLID     !
     and A.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
        [$_SecurityClause]              !

END-SELECT

        Let #exist = &exist

END-PROCEDURE exist-simul



!*****************************************
!
!   Function    : get-age
!
!   Description : Determine age of the employee
!
! *****************************************
BEGIN-PROCEDURE get-age ($date,:$birthdate)

let $sql-statement = 'FPconv.SQR,get-age ,select,PS_PERSON'
BEGIN-SELECT DISTINCT On-Error=SQL-On-Error

{DATEOUT-PREFIX}B.BIRTHDATE{DATEOUT-SUFFIX} &B.BIRTHDATE

from PS_PERSON B


where B.EMPLID = $_matricule

END-SELECT

  do convert-to-DTU-Date(&B.BIRTHDATE,$birthdate)

END-PROCEDURE get-age



!**************************************************************************************
!
!   Function    : get-prec($matricule,$effdt,#no_dossier,#effseq, :$effdt_out,:#effseq_out)
!
!   Description : retrieve the previous instance
!
!       OUTPUT  : effdt_out     -> Date of the previous instance
!                 effseq_out    -> Sequence number of the previous instance
!
!**************************************************************************************
BEGIN-PROCEDURE get-prec($matricule,$effdt,#no_dossier,#effseq, :$effdt_out,:#effseq_out)

!if #effseq > 0

!let  $where_get =
!  ' GPR.EMPLID = ''' || $matricule ||''' and GPR.EFFDT = {DATEIN-PREFIX}''' || $effdt ||
!  '''{DYN-DateIn-Suffix} and GPR.EMPL_RCD = '|| to_char(#no_dossier) ||
!  ' and GPR.EFFSEQ = '|| to_char(#effseq - 1)


!else

!  let $where_get =
!  'GPR.EMPLID = '''|| $matricule ||''' and GPR.EMPL_RCD = '|| to_char(#no_dossier) ||
!  ' and GPR.EFFDT =
!  (
!    select max(GA3.EFFDT)' ||
!    ' from PS_FPAEECAREERBIS GA3
!    where GA3.EMPLID = GPR.EMPLID and
!    GA3.EMPL_RCD = GPR.EMPL_RCD and ' ||
!    ' GA3.FP_INST_STAT = ''R'' and
!    GA3.EFFDT <  {DATEIN-PREFIX}'''|| $effdt ||
!   '''{DYN-DateIn-Suffix}
! )
!    and GPR.EFFSEQ = '||
!    ' (
!      select max(GA2.EFFSEQ)
!      from PS_FPAEECAREERBIS GA2 where GA2.EMPLID = GPR.EMPLID and
!      GA2.EMPL_RCD = GPR.EMPL_RCD and' ||
!      ' GA2.EFFDT = GPR.EFFDT
!     )'

!end-if


let $_sql-statement = 'FPconv.SQR,get-prec,select,PS_FPAEECAREERBIS'
BEGIN-SELECT On-Error=SQL-On-Error

GPR.EMPLID
{DATEOUT-PREFIX}GPR.EFFDT{DATEOUT-SUFFIX} &GPR.EFFDT
GPR.EFFSEQ
GPR.EMPL_RCD
GPR.FP_SENKEPT_YR
GPR.FP_SENKEPT_MN
GPR.FP_SENKEPT_DY
GPR.FP_SENINSTPYR
GPR.FP_SENINSTPMN
GPR.FP_SENINSTPDY
GPR.FP_CLD_STEP
GPR.FP_TRUESEN_YR
GPR.FP_TRUESEN_MN
GPR.FP_TRUESEN_DY

    let $effdt_out = &GPR.EFFDT
    let #effseq_out = &GPR.EFFSEQ

    let #_GPR_SENINSTPYR = &GPR.FP_SENINSTPYR
    let #_GPR_SENINSTPMN = &GPR.FP_SENINSTPMN
    let #_GPR_SENINSTPDY = &GPR.FP_SENINSTPDY
    let #_GPR_SENKEPT_YR = &GPR.FP_SENKEPT_YR
    let #_GPR_SENKEPT_MN = &GPR.FP_SENKEPT_MN
    let #_GPR_SENKEPT_DY = &GPR.FP_SENKEPT_DY
    let #_GPR_TRUESEN_YR = &GPR.FP_TRUESEN_YR
    let #_GPR_TRUESEN_MN = &GPR.FP_TRUESEN_MN
    let #_GPR_TRUESEN_DY = &GPR.FP_TRUESEN_DY

    do rtrim_nnull(&GPR.FP_CLD_STEP,$_GPR_CLD_STEP)

from PS_FPAEECAREERBIS GPR
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security
!Where [$where_get]
where GPR.EMPLID = $matricule
AND GPR.EMPL_RCD = #no_dossier
AND GPR.EFFDT = (select max(GP1.EFFDT) from PS_FPAEECAREERBIS GP1
                where GP1.EMPLID = GPR.EMPLID and
                GP1.EMPL_RCD = GPR.EMPL_RCD and
                GP1.EFFDT <=  {DATEIN-PREFIX}$effdt{DATEIN-SUFFIX})
AND GPR.EFFSEQ = (select max(GP2.EFFSEQ) from PS_FPAEECAREERBIS GP2
                where GP2.EMPLID = GPR.EMPLID and
                GP2.EMPL_RCD = GPR.EMPL_RCD and
                GP2.EFFDT = GPR.EFFDT and
                GP2.EFFSEQ <= #effseq)
AND GPR.EFFDT <> {DATEIN-PREFIX}$effdt{DATEIN-SUFFIX}
AND GPR.EFFSEQ <> #effseq

and GPR.EMPLID = SCRTY.EMPLID       !
and GPR.EMPL_RCD = SCRTY.EMPL_RCD   !SQR security
[$_SecurityClause]                  !

END-SELECT

END-PROCEDURE get-prec



!*****************************************************************************
!
!   Function    : get-anciennete ($date,#effseq,$daa_srch)
!
!   Description : employee seniority calculation
!
!       INPUT   : $date     -> Calculation of seniority to this date
!                 #effseq   -> sequence number
!                              0 if DAA or effective sequence number of the reclassification based instance
!                              1 otherwise
!       OUTPUT  : $daa_srch     -> Y if RCA from DAA, N otherwise
!
!*****************************************************************************
BEGIN-PROCEDURE get-anciennete($date,#effseq,$daa_srch)

do convert-to-DTU-date($_conv_date,$tempo_date1)
do convert-to-DTU-date($_daa,$tempo_date2)
do convert-to-DTU-date($date,$tempo_date3)
do dtu-diff-days($tempo_date1,$tempo_date3, #diff_dys_eval)
do dtu-diff-days($tempo_date2,$tempo_date3, #diff_dys_eval2)

!if #diff_dys_eval = 0 or #diff_dys_eval2 = 0
!   let #effseq = 0
!else
!  let #effseq = #effseq + 1
!end-if

!do get-prec($_matricule,$date,#_no_dossier,#effseq, $effdt_out,#effseq_out)


!let $_sql-statement = 'FPconv.SQR,get-anciennete ,select,PS_FPAEECAREERBIS'
!BEGIN-SELECT On-Error=SQL-On-Error

!GA0.FP_SENKEPT_YR
!GA0.FP_SENKEPT_MN
!GA0.FP_SENKEPT_DY
!GA0.FP_SENINSTPYR
!GA0.FP_SENINSTPMN
!GA0.FP_SENINSTPDY

! if $daa_srch = 'Y' and  #diff_dys_eval2 <> 0
!   let #_FP_SENINSTPYR = &GA0.FP_SENKEPT_YR
!   let #_FP_SENINSTPMN = &GA0.FP_SENKEPT_MN
!   let #_FP_SENINSTPDY = &GA0.FP_SENKEPT_DY
! else
!   let #_FP_SENINSTPYR = &GA0.FP_SENINSTPYR
!   let #_FP_SENINSTPMN = &GA0.FP_SENINSTPMN
!   let #_FP_SENINSTPDY = &GA0.FP_SENINSTPDY
! end-if
!from PS_FPAEECAREERBIS GA0
!where GA0.EMPLID =  $_matricule
!and GA0.EMPL_RCD = #_no_dossier
!and GA0.EFFDT = {DATEIN-PREFIX}$effdt_out{DATEIN-SUFFIX}
!and GA0.EFFSEQ = #effseq_out

!END-SELECT

!let $effdt = $effdt_out
!let #effseq = #effseq_out


!if $daa_srch = 'Y'
!  do get-prec($_matricule,$effdt_out,#_no_dossier,#effseq_out, $effdt,#effseq)
!end-if

! let $where_anc = ' GA.EMPLID = '''|| $_matricule ||'''
! and GA.EMPL_RCD ='|| to_char(#_no_dossier) ||
! ' and GA.EFFDT = {DATEIN-PREFIX}''' || $effdt ||
! '''{DYN-DATEIN-SUFFIX} and GA.EFFSEQ = ' || to_char(#effseq)



!let $_sql-statement = 'FPconv.SQR,get-anciennete ,select,PS_FPAEECAREERBIS'

!BEGIN-SELECT On-Error=SQL-On-Error

!GA.FP_CLD_STEP
!GA.FP_TRUESEN_YR
!GA.FP_TRUESEN_MN
!GA.FP_TRUESEN_DY
!GA.FP_SENINSTPYR
!GA.FP_SENINSTPMN
!GA.FP_SENINSTPDY
!GA.FP_SENKEPT_YR
!GA.FP_SENKEPT_MN
!GA.FP_SENKEPT_DY

! do rtrim_nnull(&GA.FP_CLD_STEP,$FP_CLD_STEP)
! let #_FP_TRUESEN_YR = &GA.FP_TRUESEN_YR
! let #_FP_TRUESEN_MN = &GA.FP_TRUESEN_MN
! let #_FP_TRUESEN_DY = &GA.FP_TRUESEN_DY

!from PS_FPAEECAREERBIS GA

!where [$where_anc]

!END-SELECT


if $daa_srch = 'Y' and #diff_dys_eval2 <> 0
    let #_FP_SENINSTPYR = #_FP_SENKEPT_YR
    let #_FP_SENINSTPMN = #_FP_SENKEPT_MN
    let #_FP_SENINSTPDY = #_FP_SENKEPT_DY
    do get-prec($_matricule,$date,#_no_dossier,#effseq, $prec_effdt,#prec_effseq)
    if $_GPR_CLD_STEP = 'Y'
        let #_FP_TRUESEN_YR = 0
        let #_FP_TRUESEN_MN = 0
        let #_FP_TRUESEN_DY = 0
    else
        let #_FP_TRUESEN_YR = #_GPR_TRUESEN_YR
        let #_FP_TRUESEN_MN = #_GPR_TRUESEN_MN
        let #_FP_TRUESEN_DY = #_GPR_TRUESEN_DY
    end-if
end-if

END-PROCEDURE get-anciennete



!*****************************************************
!
!   Function    : get-embauche-dt
!
!   Description : fetch the hire date
!
!*****************************************************
BEGIN-PROCEDURE get-embauche-dt ($date,:$hire_dt)

let $_sql-statement = 'FPconv.SQR,get-embauche ,select,PS_EMPLOYMENT'
BEGIN-SELECT DISTINCT On-Error=SQL-On-Error

{DATEOUT-PREFIX}C.HIRE_DT{DATEOUT-SUFFIX} &C.HIRE_DT

from PS_EMPLOYMENT C
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security


where C.EMPLID = $_matricule
      AND C.EMPL_RCD = #_no_dossier

      and C.EMPLID = SCRTY.EMPLID     !
      and C.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
      [$_SecurityClause]              !

END-SELECT

  do convert-to-DTU-Date(&C.hire_dt,$hire_dt)

END-PROCEDURE get-embauche-dt



!*****************************************************
!
!   Function    : get-notation
!
!   Description : retrieve the rating
!
!*****************************************************
BEGIN-PROCEDURE get-notation($date,:#fp_rev_rating)

let $_sql-statement = 'FPconv.SQR,get-notation ,select,PS_EMPLOYEE_REVIEW'
BEGIN-SELECT On-Error=SQL-On-Error

D0.FP_REV_RATING

from PS_EMPLOYEE_REVIEW D0
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where D0.EMPLID = $_matricule
AND D0.EMPL_RCD = #_no_dossier
and D0.EFFDT =(
              select max(E.EFFDT) from PS_EMPLOYEE_REVIEW E
              where E.EMPLID = $_matricule and E.EMPL_RCD = #_no_dossier
              and E.EFFDT <= {DATEIN-PREFIX}$date{DATEIN-SUFFIX}
              )

and D0.EMPLID = SCRTY.EMPLID        !
and D0.EMPL_RCD = SCRTY.EMPL_RCD    !SQR security
[$_SecurityClause]                  !

END-SELECT

let #fp_rev_rating = &D0.FP_REV_RATING

END-PROCEDURE get-notation



!****************************************************
!
!   Function : flush-CareerBis
!
!   Description : FPAEECAREERBIS initialization
!
!****************************************************
BEGIN-PROCEDURE flush-Careerbis

let $sql-statement = 'FPconv.SQR,flush-careerbis ,delete,PS_FPAEECAREERBIS'
BEGIN-SQL On-Error=SQL-On-Error

delete from PS_FPAEECAREERBIS

END-SQL

END-PROCEDURE flush-Careerbis



!**************************************************************
!
!   Function    : read-career($from_clause,$where_clause,$read_act,$orderby)
!
!   Description : fpaeecareer reading
!
!       INPUT   : from_clause     --> dynamic from clause
!                 where_clause    --> dynamic where clause
!                 read_act        --> action to be accomplished
!                                     'B' => Copy
!                                     'F' => select filter
!
!***************************************************************
BEGIN-PROCEDURE read-career($from_clause,$where_clause,$read_act,$orderby)

display '** BEGIN-PROCEDURE read-career **'
display $from_clause
display $where_clause


let $_prev_effdt = '0-0-0'
let $_sql-statement = 'FPconv.SQR,read-Career ,Select,PS_FPAEECAREER'
BEGIN-SELECT On-Error=SQL-On-Error

S.EMPLID                &_matricule
S.EMPL_RCD              &_no_dossier#
S.EFFDT
{DATEOUT-PREFIX}S.EFFDT{DATEOUT-SUFFIX} &_S.EFFDT
S.EFFSEQ                &_S.EFFSEQ
S.FP_ACTION_REF         &_S.FP_ACTION_REF
S.FP_NOTIF_REF          &_S.FP_NOTIF_REF
S.FP_CNL_ROW            &_S.FP_CNL_ROW
S.FP_INST_STAT          &_S.FP_INST_STAT
S.ACTION                &_S.ACTION
S.ACTION_REASON         &_S.ACTION_REASON
S.FP_RANK_CD            &_S.FP_RANK_CD
S.FP_STEP_CD            &_S.FP_STEP_CD
S.FP_STEP_NO            &_S.FP_STEP_NO
S.FP_GROSS_IND          &_S.FP_GROSS_IND
S.FP_INCS_IND           &_S.FP_INCS_IND
S.FP_PROM_LCK           &_S.FP_PROM_LCK
S.FP_SENTOSTPDY         &_S.FP_SENTOSTPDY
S.FP_SENTOSTPMN         &_S.FP_SENTOSTPMN
S.FP_SENTOSTPYR         &_S.FP_SENTOSTPYR
S.FP_SENINSTPDY         &_S.FP_SENINSTPDY
S.FP_SENINSTPMN         &_S.FP_SENINSTPMN
S.FP_SENINSTPYR         &_S.FP_SENINSTPYR
S.FP_TRUESEN_DY         &_S.FP_TRUESEN_DY
S.FP_TRUESEN_MN         &_S.FP_TRUESEN_MN
S.FP_TRUESEN_YR         &_S.FP_TRUESEN_YR
S.FP_SENTRANSDY         &_S.FP_SENTRANSDY
S.FP_SENTRANSMN         &_S.FP_SENTRANSMN
S.FP_SENTRANSYR         &_S.FP_SENTRANSYR
S.FP_SENKEPT_DY         &_S.FP_SENKEPT_DY
S.FP_SENKEPT_MN         &_S.FP_SENKEPT_MN
S.FP_SENKEPT_YR         &_S.FP_SENKEPT_YR
S.FP_SENRAN_DY          &_S.FP_SENRAN_DY
S.FP_SENRAN_MN          &_S.FP_SENRAN_MN
S.FP_SENRAN_YR          &_S.FP_SENRAN_YR
S.FP_SENCOR_DY          &_S.FP_SENCOR_DY
S.FP_SENCOR_MN          &_S.FP_SENCOR_MN
S.FP_SENCOR_YR          &_S.FP_SENCOR_YR
S.FP_DURSTEP_DY         &_S.FP_DURSTEP_DY     !
S.FP_DURSTEP_MN         &_S.FP_DURSTEP_MN     !
S.FP_DURSTEP_YR         &_S.FP_DURSTEP_YR     !
S.FP_DURRAN_DY          &_S.FP_DURRAN_DY      !
S.FP_DURRAN_MN          &_S.FP_DURRAN_MN      !
S.FP_DURRAN_YR          &_S.FP_DURRAN_YR      !
S.FP_DURCOR_DY          &_S.FP_DURCOR_DY      !
S.FP_DURCOR_MN          &_S.FP_DURCOR_MN      !
S.FP_DURCOR_YR          &_S.FP_DURCOR_YR      !
S.FP_SENEQSTP_DY        &_S.FP_SENEQSTP_DY    !Seniority management
S.FP_SENEQSTP_MN        &_S.FP_SENEQSTP_MN    !
S.FP_SENEQSTP_YR        &_S.FP_SENEQSTP_YR    !
S.FP_SENENTRK_DY         &_S.FP_SENENTRK_DY     !
S.FP_SENENTRK_MN         &_S.FP_SENENTRK_MN     !
S.FP_SENENTRK_YR         &_S.FP_SENENTRK_YR     !
S.FP_SENENTCRP_DY        &_S.FP_SENENTCRP_DY    !
S.FP_SENENTCRP_MN        &_S.FP_SENENTCRP_MN    !
S.FP_SENENTCRP_YR        &_S.FP_SENENTCRP_YR    !
S.FP_SENENTCTG_DY        &_S.FP_SENENTCTG_DY    !
S.FP_SENENTCTG_MN        &_S.FP_SENENTCTG_MN    !
S.FP_SENENTCTG_YR        &_S.FP_SENENTCTG_YR    !
S.FP_SEN_CALC           &_S.FP_SEN_CALC
S.FP_CLD_INST           &_S.FP_CLD_INST
S.FP_CLD_STEP           &_S.FP_CLD_STEP
{DATEOUT-PREFIX}S.FP_FOR_PROM_DT{DATEOUT-SUFFIX}    &_S.FP_FOR_PROM_DT
{DATEOUT-PREFIX}S.FP_STEP_END_DT{DATEOUT-SUFFIX}    &_S.FP_STEP_END_DT
{DATEOUT-PREFIX}S.FP_RK_ENT_DT{DATEOUT-SUFFIX}      &_S.FP_RK_ENT_DT
S.FP_CORPS_CD           &_S.FP_CORPS_CD,
{DATEOUT-PREFIX}S.FP_CHG_COR_DT{DATEOUT-SUFFIX}     &_S.FP_CHG_COR_DT
S.FP_CATG_FP            &_S.FP_CATG_FP
S.FP_TRAINEE            &_S.FP_TRAINEE
S.FP_TRNE_POSN          &_S.FP_TRNE_POSN
S.FP_CATG_LEVEL         &_S.FP_CATG_LEVEL
S.FP_CHG_IND            &_S.FP_CHG_IND
{DATEOUT-PREFIX}S.FP_APPL_SAL_DT{DATEOUT-SUFFIX}    &_S.FP_APPL_SAL_DT
S.FP_ROW_CD             &_S.FP_ROW_CD
{DATEOUT-PREFIX}S.FP_NOMINATION_DT{DATEOUT-SUFFIX}  &_S.FP_NOMINATION_DT
S.FP_RK_TRIALPD         &_S.FP_RK_TRIALPD
{DATEOUT-PREFIX}S.FP_RK_PD_END_DT{DATEOUT-SUFFIX}   &_S.FP_RK_PD_END_DT
S.FP_SANCTION           &_S.FP_SANCTION
S.FP_DOWN_GRA           &_S.FP_DOWN_GRA
S.FP_UPDT_PR_DT         &_S.FP_UPDT_PR_DT
S.FP_PROM_OK            &_S.FP_PROM_OK
S.FP_PROPD_BRK          &_S.FP_PROPD_BRK
S.FP_PRO_ACCESS         &_S.FP_PRO_ACCESS
S.FP_NX_STP_CD          &_S.FP_NX_STP_CD
S.FP_SETID_RANK         &_S.FP_SETID_RANK,
S.FP_EQUIV_STEP         &_S.FP_EQUIV_STEP     ! sub-scale management
S.FP_STFBDG_LVL1        &_S.FP_STFBDG_LVL1
S.FP_STFBDG_LVL3        &_S.FP_STFBDG_LVL3
S.FP_SETID_CA           &_S.FP_SETID_CA       ! CAE management
S.FP_COMM_ACNT_ID       &_S.FP_COMM_ACNT_ID   !
S.FP_RETROSPECT         &_S.FP_RETROSPECT
S.FP_TBL_CD             &_S.FP_TBL_CD
{DATEOUT-PREFIX}S.LAST_UPDATE_DATE{DATEOUT-SUFFIX}  &_S.LAST_UPDATE_DATE


 do var-init

! Select filter
!--------------
 if $read_act = 'F'
   do convert-to-DTU-date($_conv_date,$tempo_date1)
   do convert-to-DTU-date($_effdt_out,$tempo_date2)
   do dtu-diff-days($tempo_date1,$tempo_date2, #diff_dys_eval)


   if #diff_dys_eval <= 0        ! DER = evaluation date
     let $_ThruDate = $_conv_date
   else
     let $_ThruDate = $_daa     ! DAA = evaluation date
   end-if


   do convert-to-DTU-date($_Thrudate,$tempo_date1)
   do convert-to-DTU-date($_pre-date,$tempo_date2)
   do dtu-diff-days($tempo_date1, $tempo_date2, #diff_dys)

!   if #diff_dys <> 0
!
!       Display '****************************'
!       Display '******* Call FPA315 ********'
!       Display '****************************'
!       Let $_Emplid = ''
!       do FPA315-Main
!   end-if

   let $_pre-date = $_ThruDate
   let #i = 0
   let #hyp_test_result = 0
   let #end_while = 0

   do convert-to-DTU-date($_FP_STEP_END_DT,$tempo_date4)


   do convert-to-DTU-date($_Thrudate,$tempo_date_jl1)
   do dtu-diff-days($tempo_date4, $tempo_date_jl1, #diff_ds)

   !do dtu-diff-days($tempo_date4, $_Thrudate, #diff_ds)

    if #diff_ds <= 0 or $_FP_CLD_INST = 'N'    ! If no request between this date and the reclassification date

        while convtable.fp_rank_cd(#i) != '' and #end_while=0 ! Loop on ranking hypothesis

            if ($_FP_SETID_RANK = convtable.setid(#i) AND $_FP_RANK_CD = convtable.fp_rank_cd(#i))
                    AND ($_FP_STEP_CD = convtable.fp_step_cd(#i))


                ! Test on other ranking hypothesis
                !---------------------------------

                do test-hyp (#i, $_ThruDate, $_action, #_effseq,'N',#hyp_test_result)
                display 'Hypothesis test result'
                display #hyp_test_result

                if #hyp_test_result = 1 ! fit with the ranking criteria

                    do simulate(#i)    ! Start simulation
                    let #end_while = 1

                end-if

            end-if
            add 1 to #i
        end-while
    end-if
 end-if


! Copy to fpaeecareerbis
!-----------------------
 if $read_act = 'B'
   let $_fp_conv_stat = 'A'
   let $_fp_action_des =' '
   let $_fp_rank_desc = ' '
   let $_fp_conv_id = ' '
   let $_fp_corps_des = ' '
   do insert-careerbis
 end-if

from [$from_clause]
    ,PS_FPFAST_PERS_VW2 SCRTY           !SQR security

where   [$where_clause]

        and S.EMPLID = SCRTY.EMPLID     !
        and S.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
        [$_SecurityClause]              !
        [$orderby]
end-select

END-PROCEDURE read-career



!***************************************************************************************
!
!   Function : put-fp_conversion_id                                                                                                                                    *
!
!   Description : upadte fp_conversion_id
!
!       INPUT   : $calc_flag = 'Y' if seniority have to be computed (First action reclassified), 'N' otherwise
!                 #indice = hypothesis number
!
!***************************************************************************************
BEGIN-PROCEDURE put-fp_conversion_id($calc_flag,$effdt,#effseq,$date_rca,#indice,#FP_SENINSTPDY,#FP_SENINSTPMN,#FP_SENINSTPYR)

do convert-to-DTU-date($effdt,$tmp_date1)
do convert-to-DTU-date($_effdt_out,$tmp_date2)
do dtu-diff-days($tmp_date1,$tmp_date2, #diff_dys_ev)

if #diff_dys_ev > 0
 do Substr-Date($tmp_date2,0,0,1,$FP_STEP_END_DTU)
 do convert-From-DTU-date($FP_STEP_END_DTU,$FP_STEP_END_DT)
else
 let $FP_STEP_END_DT = $effdt
end-if


do calc-anc-recl(#FP_SENINSTPDY,#FP_SENINSTPMN,#FP_SENINSTPYR,#indice,#FP_SENTRANSDY,#FP_SENTRANSMN,#FP_SENTRANSYR)


let $sql-statement = 'FPconv.SQR,put-fp_conversion_id ,Update,PS_FPAEECAREERBIS'
if $calc_flag = 'Y'
  BEGIN-SQL On-Error=SQL-On-Error

  UPDATE PS_FPAEECAREERBIS

       set FP_CONVERSION_ID = $_fp_conversion_id,
           FP_CLD_INST = 'Y',
           FP_CLD_STEP = 'Y',
           FP_SEN_CALC = 'N',
           FP_STEP_END_DT = {DATEIN-PREFIX}$FP_STEP_END_DT{DATEIN-SUFFIX},
           FP_SENTRANSDY = #FP_SENTRANSDY,
           FP_SENTRANSMN = #FP_SENTRANSMN,
           FP_SENTRANSYR = #FP_SENTRANSYR

  where EMPLID = $_matricule
      and EMPL_RCD = #_no_dossier
      and EFFDT = {DATEIN-PREFIX}$effdt{DATEIN-SUFFIX}
      and EFFSEQ = #effseq

  END-SQL
else
  let $sql-statement = 'FPconv.SQR,put-fp_conversion_id ,Update2,PS_FPAEECAREERBIS'
  BEGIN-SQL On-Error=SQL-On-Error

  UPDATE PS_FPAEECAREERBIS

        set FP_CONVERSION_ID = $_fp_conversion_id,
           FP_CLD_INST = 'Y',
           FP_CLD_STEP = 'Y',
           FP_SEN_CALC = 'N',
           FP_STEP_END_DT = {DATEIN-PREFIX}$FP_STEP_END_DT{DATEIN-SUFFIX}

  where EMPLID = $_matricule
      and EMPL_RCD = #_no_dossier
      and EFFDT = {DATEIN-PREFIX}$effdt{DATEIN-SUFFIX}
      and EFFSEQ = #effseq
  END-SQL
end-if

display 'fin put-fp_conversion_id'

END-PROCEDURE put-fp_conversion_id



!***********************************************************
!
!   Function    : Insert-Careerbis
!
!   Description : Insert emplid into fpaeecareerbis
!
!***********************************************************
BEGIN-PROCEDURE Insert-Careerbis

#IFDEF DEBUGI

display $matricule
display #no_dossier
display $effdt_out
display #effseq
display $fp_conv_id
display $Name
display $fp_conv_stat
display $FP_ACTION_REF
display $FP_NOTIF_REF
display $FP_CNL_ROW
display $FP_INST_STAT
display $ACTION
display $FP_ACTION_DES
display $ACTION_REASON
display $FP_RANK_CD
display $FP_RANK_DESC
display $FP_STEP_CD
display #FP_STEP_NO
display #FP_GROSS_IND
display #FP_INCS_IND
display $FP_PROM_LCK
display #FP_SENTOSTPDY
display #FP_SENTOSTPMN
display #FP_SENTOSTPYR
display #FP_SENINSTPDY
display #FP_SENINSTPMN
display #FP_SENINSTPYR
display #FP_TRUESEN_DY
display #FP_TRUESEN_MN
display #FP_TRUESEN_YR
display #FP_SENTRANSDY
display #FP_SENTRANSMN
display #FP_SENTRANSYR
display #FP_SENKEPT_DY
display #FP_SENKEPT_MN
display #FP_SENKEPT_YR
display #FP_SENRAN_DY
display #FP_SENRAN_MN
display #FP_SENRAN_YR
display #FP_SENCOR_DY
display #FP_SENCOR_MN
display #FP_SENCOR_YR
display #FP_DURSTEP_DY
display #FP_DURSTEP_MN
display #FP_DURSTEP_YR
display #FP_DURRAN_DY
display #FP_DURRAN_MN
display #FP_DURRAN_YR
display #FP_DURCOR_DY
display #FP_DURCOR_MN
display #FP_DURCOR_YR
display #FP_SENEQSTP_DY
display #FP_SENEQSTP_MN
display #FP_SENEQSTP_YR
display #FP_SENENTRK_DY
display #FP_SENENTRK_MN
display #FP_SENENTRK_YR
display #FP_SENENTCRP_DY
display #FP_SENENTCRP_MN
display #FP_SENENTCRP_YR
display #FP_SENENTCTG_DY
display #FP_SENENTCTG_MN
display #FP_SENENTCTG_YR
display $FP_SEN_CALC
display $FP_CLD_INST
display $FP_CLD_STEP
display $FP_FOR_PROM_DT
display $FP_STEP_END_DT
display $FP_RK_ENT_DT
display $FP_CORPS_CD
display $FP_CORPS_DES
display $FP_CHG_COR_DT
display $FP_CATG_FP
display $FP_TRAINEE
display $FP_TRNE_POSN
display $FP_CATG_LEVEL
display $FP_CHG_IND
display $FP_APPL_SAL_DT
display $FP_ROW_CD
display $FP_NOMINATION_DT
display $FP_RK_TRIALPD
display $FP_RK_PD_END_DT
display $FP_SANCTION
display $FP_DOWN_GRA
display $FP_UPDT_PR_DT
display $FP_PROM_OK
display $FP_PROPD_BRK
display $FP_PRO_ACCESS
display $FP_NX_STP_CD
display $FP_SETID_RANK
display $FP_EQUIV_STEP
display $FP_STFBDG_LVL1
display $FP_STFBDG_LVL3
display $FP_SETID_CA
display $FP_COMM_ACNT_ID
display $FP_RETROSPECT
display $FP_TBL_CD
display $AsOfToday

#ENDIF


let $sql-statement = 'FPconv.SQR,Insert-Careerbis ,Insert,PS_FPAEECAREERBIS'
BEGIN-SQL On-Error=SQL-On-Error

INSERT INTO PS_FPAEECAREERBIS
       (EMPLID,
        EMPL_RCD,
        EFFDT,
        EFFSEQ,
        FP_CONVERSION_ID,       !FP_CONVERSION_ID (is a parameter)
        NAME,                   !NAME (fetch from Personal_data)
        FP_CONV_STAT,
        FP_ACTION_REF,
        FP_NOTIF_REF,
        FP_CNL_ROW,
        FP_INST_STAT,
        ACTION,
        FP_ACTION_DES,
        ACTION_REASON,
        FP_RANK_CD,
        FP_RANK_DESC,
        FP_STEP_CD,
        FP_STEP_NO,
        FP_GROSS_IND,
        FP_INCS_IND,
        FP_PROM_LCK,
        FP_SENTOSTPDY,
        FP_SENTOSTPMN,
        FP_SENTOSTPYR,
        FP_SENINSTPDY,
        FP_SENINSTPMN,
        FP_SENINSTPYR,
        FP_TRUESEN_DY,
        FP_TRUESEN_MN,
        FP_TRUESEN_YR,
        FP_SENTRANSDY,
        FP_SENTRANSMN,
        FP_SENTRANSYR,
        FP_SENKEPT_DY,
        FP_SENKEPT_MN,
        FP_SENKEPT_YR,
        FP_SENRAN_DY,
        FP_SENRAN_MN,
        FP_SENRAN_YR,
        FP_SENCOR_DY,
        FP_SENCOR_MN,
        FP_SENCOR_YR,
        FP_DURSTEP_DY,              !
        FP_DURSTEP_MN,              !
        FP_DURSTEP_YR,              !
        FP_DURRAN_DY,               !
        FP_DURRAN_MN,               !
        FP_DURRAN_YR,               !
        FP_DURCOR_DY,               !
        FP_DURCOR_MN,               !
        FP_DURCOR_YR,               !
        FP_SENEQSTP_DY,             !Seniorities management
        FP_SENEQSTP_MN,             !
        FP_SENEQSTP_YR,             !
        FP_SENENTRK_DY,             !
        FP_SENENTRK_MN,             !
        FP_SENENTRK_YR,             !
        FP_SENENTCRP_DY,            !
        FP_SENENTCRP_MN,            !
        FP_SENENTCRP_YR,            !
        FP_SENENTCTG_DY,            !
        FP_SENENTCTG_MN,            !
        FP_SENENTCTG_YR,            !
        FP_SEN_CALC,
        FP_CLD_INST,
        FP_CLD_STEP,
        FP_FOR_PROM_DT,
        FP_STEP_END_DT,
        FP_RK_ENT_DT,
        FP_CORPS_CD,
        FP_CORPS_DES,
        FP_CHG_COR_DT,
        FP_CATG_FP,
        FP_TRAINEE,
        FP_TRNE_POSN,
        FP_CATG_LEVEL,
        FP_CHG_IND,
        FP_APPL_SAL_DT,
        FP_ROW_CD,
        FP_NOMINATION_DT,
        FP_RK_TRIALPD,
        FP_RK_PD_END_DT,
        FP_SANCTION,
        FP_DOWN_GRA,
        FP_UPDT_PR_DT,
        FP_PROM_OK,
        FP_PROPD_BRK,
        FP_PRO_ACCESS,
        FP_NX_STP_CD,
        FP_SETID_RANK,
        FP_EQUIV_STEP,              ! SUb-scale management
        FP_STFBDG_LVL1,
        FP_STFBDG_LVL3,
        FP_SETID_CA,                ! CAE management
        FP_COMM_ACNT_ID,            !
        FP_RETROSPECT,
        FP_TBL_CD,
        LAST_UPDATE_DATE )

VALUES
       ($matricule,
        #no_dossier,
        {DATEIN-PREFIX}$effdt_out{DATEIN-SUFFIX},
        #effseq,
        $fp_conv_id,            !FP_CONVERSION_ID (is a parameter)
        $Name,                  !NAME (fetch from Personal_data)
        $fp_conv_stat,
        $FP_ACTION_REF,
        $FP_NOTIF_REF,
        $FP_CNL_ROW,
        $FP_INST_STAT,
        $ACTION,
        $FP_ACTION_DES,
        $ACTION_REASON,
        $FP_RANK_CD,
        $FP_RANK_DESC,
        $FP_STEP_CD,
        #FP_STEP_NO,
        #FP_GROSS_IND,
        #FP_INCS_IND,
        $FP_PROM_LCK,
        #FP_SENTOSTPDY,
        #FP_SENTOSTPMN,
        #FP_SENTOSTPYR,
        #FP_SENINSTPDY,
        #FP_SENINSTPMN,
        #FP_SENINSTPYR,
        #FP_TRUESEN_DY,
        #FP_TRUESEN_MN,
        #FP_TRUESEN_YR,
        #FP_SENTRANSDY,
        #FP_SENTRANSMN,
        #FP_SENTRANSYR,
        #FP_SENKEPT_DY,
        #FP_SENKEPT_MN,
        #FP_SENKEPT_YR,
        #FP_SENRAN_DY,
        #FP_SENRAN_MN,
        #FP_SENRAN_YR,
        #FP_SENCOR_DY,
        #FP_SENCOR_MN,
        #FP_SENCOR_YR,
        #FP_DURSTEP_DY,         !FP_DURSTEP_DY
        #FP_DURSTEP_MN,         !FP_DURSTEP_MN
        #FP_DURSTEP_YR,         !FP_DURSTEP_YR
        #FP_DURRAN_DY,          !FP_DURRAN_DY
        #FP_DURRAN_MN,          !FP_DURRAN_MN
        #FP_DURRAN_YR,          !FP_DURRAN_YR
        #FP_DURCOR_DY,          !FP_DURCOR_DY
        #FP_DURCOR_MN,          !FP_DURCOR_MN
        #FP_DURCOR_YR,          !FP_DURCOR_YR
        #FP_SENEQSTP_DY,        !FP_SENEQSTP_DY
        #FP_SENEQSTP_MN,        !FP_SENEQSTP_MN
        #FP_SENEQSTP_YR,        !FP_SENEQSTP_YR
        #FP_SENENTRK_DY,        !FP_SENENTRK_DY
        #FP_SENENTRK_MN,        !FP_SENENTRK_MN
        #FP_SENENTRK_YR,        !FP_SENENTRK_YR
        #FP_SENENTCRP_DY,       !FP_SENENTCRP_DY
        #FP_SENENTCRP_MN,       !FP_SENENTCRP_MN
        #FP_SENENTCRP_YR,       !FP_SENENTCRP_YR
        #FP_SENENTCTG_DY,       !FP_SENENTCTG_DY
        #FP_SENENTCTG_MN,       !FP_SENENTCTG_MN
        #FP_SENENTCTG_YR,       !FP_SENENTCTG_YR
        $FP_SEN_CALC,
        $FP_CLD_INST,
        $FP_CLD_STEP,
        {DATEIN-PREFIX}$FP_FOR_PROM_DT{DATEIN-SUFFIX},
        {DATEIN-PREFIX}$FP_STEP_END_DT{DATEIN-SUFFIX},
        {DATEIN-PREFIX}$FP_RK_ENT_DT{DATEIN-SUFFIX},
        $FP_CORPS_CD,
        $FP_CORPS_DES,
        {DATEIN-PREFIX}$FP_CHG_COR_DT{DATEIN-SUFFIX},
        $FP_CATG_FP,
        $FP_TRAINEE,
        $FP_TRNE_POSN,
        $FP_CATG_LEVEL,
        $FP_CHG_IND,
        {DATEIN-PREFIX}$FP_APPL_SAL_DT{DATEIN-SUFFIX},
        $FP_ROW_CD,
        {DATEIN-PREFIX}$FP_NOMINATION_DT{DATEIN-SUFFIX},
        $FP_RK_TRIALPD,
        {DATEIN-PREFIX}$FP_RK_PD_END_DT{DATEIN-SUFFIX},
        $FP_SANCTION,
        $FP_DOWN_GRA,
        $FP_UPDT_PR_DT,
        $FP_PROM_OK,
        $FP_PROPD_BRK,
        $FP_PRO_ACCESS,
        $FP_NX_STP_CD,
        $FP_SETID_RANK,
        $FP_EQUIV_STEP,         !FP_EQUIV_STEP,
        $FP_STFBDG_LVL1,
        $FP_STFBDG_LVL3,
        $FP_SETID_CA,           !FP_SETID_CA,
        $FP_COMM_ACNT_ID,       !FP_COMM_ACNT_ID,
        $FP_RETROSPECT,
        $FP_TBL_CD,
        {DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX} )

END-SQL

END-PROCEDURE Insert-Careerbis



!*****************************************************
!
!   Function    : convtabl-init
!
!   Description : init the array storing the conversion grid data
!
!******************************************************
BEGIN-PROCEDURE convtabl-init

create-array name=convtable size=100
        field=SETID:char
        field=FP_RANK_CD:char
        field=FP_STEP_CD:char
        field=FP_ORD_NBR:number
        field=FP_EXORDER_DT:char
        field=FP_MIN_SEN_YY:number
        field=FP_MIN_SEN_MM:number
        field=FP_MAX_SEN_YY:number
        field=FP_MAX_SEN_MM:number
        field=FP_STP_SEN_YY:number
        field=FP_STP_SEN_MM:number
        field=FP_HIRANTE_DT:char
        field=FP_HIRPOST_DT:char
        field=FP_REQ_SKL:char
        field=FP_MIN_AGE_YY:number
        field=FP_MIN_AGE_MN:number
        field=FP_MIN_ASM:number
        field=FP_NX_RANK_CD:char
        field=FP_NX_STEP_CD:char
        field=FP_NX_TRN_PD:char
        field=FP_MULT_COR:number
        field=FP_BON_COR_YY:number
        field=FP_BON_COR_MM:number
        field=FP_BON_COR_DD:number
        field=ACTION:char
        field=ACTION_REASON:char
clear-array name=convtable
  let #count = 0


! array initialization
!----------------------

let $sql-statement = 'FPconv.sqr, convtabl_init,Select,PS_FPMCONVTABL_TBL'
BEGIN-SELECT On-Error=SQL-On-Error

TBL.FP_CONVERSION_ID
{DATEOUT-PREFIX}TBL.EFFDT{DATEOUT-SUFFIX}           &TBL.EFFDT
TBL.SETID
TBL.FP_RANK_CD
TBL.FP_STEP_CD
TBL.FP_ORD_NBR
{DATEOUT-PREFIX}TBL.FP_EXORDER_DT{DATEOUT-SUFFIX}   &TBL.FP_EXORDER_DT
TBL.FP_MIN_SEN_YY
TBL.FP_MIN_SEN_MM
TBL.FP_MAX_SEN_YY
TBL.FP_MAX_SEN_MM
TBL.FP_STP_SEN_YY
TBL.FP_STP_SEN_MM
{DATEOUT-PREFIX}TBL.FP_HIRANTE_DT{DATEOUT-SUFFIX}   &TBL.FP_HIRANTE_DT
{DATEOUT-PREFIX}TBL.FP_HIRPOST_DT{DATEOUT-SUFFIX}   &TBL.FP_HIRPOST_DT
TBL.FP_REQ_SKL
TBL.FP_MIN_AGE_YY
TBL.FP_MIN_AGE_MN
TBL.FP_MIN_ASM
TBL.FP_NX_RANK_CD
TBL.FP_NX_STEP_CD
TBL.FP_NX_TRN_PD
TBL.FP_MULT_COR
TBL.FP_BON_COR_YY
TBL.FP_BON_COR_MM
TBL.FP_BON_COR_DD
TBL.ACTION
TBL.ACTION_REASON

 Do Convert-To-DTU-Date (&TBL.FP_EXORDER_DT,$TBL.FP_EXORDER_DT)
 Do Convert-To-DTU-Date (&TBL.FP_HIRANTE_DT,$TBL.FP_HIRANTE_DT)
 Do Convert-To-DTU-Date (&TBL.FP_HIRPOST_DT,$TBL.FP_HIRPOST_DT)


 do rtrim_nnull(&TBL.SETID,$TBL.SETID)
 do rtrim_nnull(&TBL.FP_RANK_CD,$TBL.FP_RANK_CD)
 do rtrim_nnull(&TBL.FP_STEP_CD,$TBL.FP_STEP_CD)
 do rtrim_nnull(&TBL.FP_REQ_SKL,$TBL.FP_REQ_SKL)
 do rtrim_nnull(&TBL.FP_NX_RANK_CD,$TBL.FP_NX_RANK_CD)
 do rtrim_nnull(&TBL.FP_NX_STEP_CD,$TBL.FP_NX_STEP_CD)
 do rtrim_nnull(&TBL.FP_NX_TRN_PD,$TBL.FP_NX_TRN_PD)
 do rtrim_nnull(&TBL.ACTION,$TBL.ACTION)
 do rtrim_nnull(&TBL.ACTION_REASON,$TBL.ACTION_REASON)

 put

   $TBL.SETID
   $TBL.FP_RANK_CD
   $TBL.FP_STEP_CD
   &TBL.FP_ORD_NBR
   $TBL.FP_EXORDER_DT
   &TBL.FP_MIN_SEN_YY
   &TBL.FP_MIN_SEN_MM
   &TBL.FP_MAX_SEN_YY
   &TBL.FP_MAX_SEN_MM
   &TBL.FP_STP_SEN_YY
   &TBL.FP_STP_SEN_MM
   $TBL.FP_HIRANTE_DT
   $TBL.FP_HIRPOST_DT
   $TBL.FP_REQ_SKL
   &TBL.FP_MIN_AGE_YY
   &TBL.FP_MIN_AGE_MN
   &TBL.FP_MIN_ASM
   $TBL.FP_NX_RANK_CD
   $TBL.FP_NX_STEP_CD
   $TBL.FP_NX_TRN_PD
   &TBL.FP_MULT_COR
   &TBL.FP_BON_COR_YY
   &TBL.FP_BON_COR_MM
   &TBL.FP_BON_COR_DD
   $TBL.ACTION
   $TBL.ACTION_REASON
 into convtable (#count)
   add 1 to #count

from PS_FPMCONVTABL_TBL TBL

Where TBL.FP_CONVERSION_ID = $fp_conversion_id
AND TBL.EFFDT = {DATEIN-PREFIX}$conv_date{DATEIN-SUFFIX}

END-SELECT


let $sql-statement = 'FPconv.sqr, convtabl_init,select,PS_FPMCONV_HIST'
BEGIN-SELECT On-Error=SQL-On-Error

HST.FP_CONVERSION_ID

 do rtrim_nnull(&HST.FP_CONVERSION_ID,$test-hist)

from PS_FPMCONV_HIST HST
     where HST.FP_CONVERSION_ID = $fp_conversion_id
           AND HST.EFFDT = {DATEIN-PREFIX}$conv_date{DATEIN-SUFFIX}
           AND HST.FP_ADM_APPL_DT = {DATEIN-PREFIX}$daa{DATEIN-SUFFIX}

END-SELECT

if isnull ($test-hist)
  do insert-hist
end-if

END-PROCEDURE convtabl-init



!*********************************************
!
!   Function    : insert-hist
!
!   Description : conversion history
!
!*********************************************
BEGIN-PROCEDURE insert-hist

let $sql-statement = 'FPconv.sqr, convtabl_init,insert,PS_FPMCONV_HIST'
BEGIN-SQL On-Error=SQL-On-Error

INSERT INTO PS_FPMCONV_HIST
            (FP_CONVERSION_ID,
             EFFDT,
             FP_ADM_APPL_DT)

       VALUES
            ($fp_conversion_id,
             {DATEIN-PREFIX}$conv_date{DATEIN-SUFFIX},
             {DATEIN-PREFIX}$daa{DATEIN-SUFFIX})

END-SQL

END-PROCEDURE insert-hist



!****************************************
!
!   Function    : simulate
!
!   Description : create the reclassification actions and fill the conversion flags
!       INPUT   : indice = hypothesis number
!
!****************************************
BEGIN-PROCEDURE simulate (#indice)

let $_tempo_setid = convtable.setid(#indice)
let $_tempo_rank = convtable.fp_rank_cd(#indice)
let $_tempo_step = convtable.fp_step_cd(#indice)
let $_effdt_orig = $_Thrudate
let #_no_hypothese = #indice
let $_effdt_rca = $_Thrudate
let $daa_srch = 'N'
let $_fetch_effdt = $_effdt_out              ! Fetch from FPAEECAREERBIS
let #_fetch_effseq = #_effseq

 do convert-to-DTU-date($_thrudate,$tempo_date1)
 do convert-to-DTU-date($_conv_date,$tempo_date2)
 do dtu-diff-days($tempo_date1, $tempo_date2, #diff_d_daa)


if #diff_d_daa <> 0

    ! Search entry date for the population to be reclassified
    !--------------------------------------------------------

   do search-date-min(#indice,$date_retour)
   let $_effdt_rca = $date_retour
   let $_effdt = $date_retour
   let $_fetch_effdt = $_effdt_out              ! Fetch from FPAEECAREERBIS
   let #_fetch_effseq = #_effseq
   do convert-to-DTU-date($date_retour,$tempo_date3)
   do convert-to-DTU-date($_daa,$tempo_date4)
   do dtu-diff-days($tempo_date3, $tempo_date4, #diff_d0)
   if #diff_d0 <> 0
     let $daa_srch = 'Y'
   end-if
end-if

 !do convert-to-DTU-date($_effdt,$tempo_date1)
 do convert-to-DTU-date($_fetch_effdt,$tempo_date1)
 do convert-to-DTU-date($_effdt_rca,$tempo_date2)
 do dtu-diff-days($tempo_date1, $tempo_date2, #diff_d)

! If the reclassification date is egal to a date in FPAEECAREERBIS
!-----------------------------------------------------------------
if #diff_d = 0
    let #_effseq = #_effseq + 1
 end-if

! do convert-to-DTU-date($_effdt_rca,$_effdt_out)
let $_effdt_out = $_effdt_rca
do var-init-simul(#indice,'Y',$daa_srch)
do Insert-Careerbis
do rapport


! Non-terminated Step management
!-------------------------------

let $sql-statement = 'FPconv.sqr, simulate,Select,PS_FPAEECAREERBIS'
BEGIN-SELECT On-Error=SQL-On-Error

{DATEOUT-PREFIX}E.EFFDT{DATEOUT-SUFFIX}                 &E.EFFDT
    let $_effdt_out =           &E.EFFDT
E.EFFSEQ                                                &E.EFFSEQ
    let #_fetch_effseq =        &E.EFFSEQ
E.FP_SENTOSTPDY                                         &E.FP_SENTOSTPDY
    let #_FP_SENTOSTPDY =       &E.FP_SENTOSTPDY
E.FP_SENTOSTPMN                                         &E.FP_SENTOSTPMN
    let #_FP_SENTOSTPMN =       &E.FP_SENTOSTPMN
E.FP_SENTOSTPYR                                         &E.FP_SENTOSTPYR
    let #_FP_SENTOSTPYR =       &E.FP_SENTOSTPYR
E.FP_SENINSTPDY                                         &E.FP_SENINSTPDY
    let #_FP_SENINSTPDY =       &E.FP_SENINSTPDY
E.FP_SENINSTPMN                                         &E.FP_SENINSTPMN
    let #_FP_SENINSTPMN =       &E.FP_SENINSTPMN
E.FP_SENINSTPYR                                         &E.FP_SENINSTPYR
    let #_FP_SENINSTPYR =       &E.FP_SENINSTPYR
E.FP_TRUESEN_DY                                         &E.FP_TRUESEN_DY
    let #_FP_TRUESEN_DY =       &E.FP_TRUESEN_DY
E.FP_TRUESEN_MN                                         &E.FP_TRUESEN_MN
    let #_FP_TRUESEN_MN =       &E.FP_TRUESEN_MN
E.FP_TRUESEN_YR                                         &E.FP_TRUESEN_YR
    let #_FP_TRUESEN_YR =       &E.FP_TRUESEN_YR
E.FP_SENTRANSDY                                         &E.FP_SENTRANSDY
    let #_SENTRANSDY =          &E.FP_SENTRANSDY
E.FP_SENTRANSMN                                         &E.FP_SENTRANSMN
    let #_SENTRANSMN =          &E.FP_SENTRANSMN
E.FP_SENTRANSYR                                         &E.FP_SENTRANSYR
    let #_SENTRANSYR =          &E.FP_SENTRANSYR
E.FP_SENKEPT_DY                                         &E.FP_SENKEPT_DY
    let #_FP_SENKEPT_DY =       &E.FP_SENKEPT_DY
E.FP_SENKEPT_MN                                         &E.FP_SENKEPT_MN
    let #_FP_SENKEPT_MN =       &E.FP_SENKEPT_MN
E.FP_SENKEPT_YR                                         &E.FP_SENKEPT_YR
    let #_FP_SENKEPT_YR =       &E.FP_SENKEPT_YR
E.FP_SENRAN_DY                                          &E.FP_SENRAN_DY
    let #_SENRAN_DY =           &E.FP_SENRAN_DY
E.FP_SENRAN_MN                                          &E.FP_SENRAN_MN
    let #_SENRAN_MN =           &E.FP_SENRAN_MN
E.FP_SENRAN_YR                                          &E.FP_SENRAN_YR
    let #_SENRAN_YR =           &E.FP_SENRAN_YR
E.FP_SENCOR_DY                                          &E.FP_SENCOR_DY
    let #_FP_SENCOR_DY =        &E.FP_SENCOR_DY
E.FP_SENCOR_MN                                          &E.FP_SENCOR_MN
    let #_FP_SENCOR_MN =        &E.FP_SENCOR_MN
E.FP_SENCOR_YR                                          &E.FP_SENCOR_YR
    let #_FP_SENCOR_YR =        &E.FP_SENCOR_YR
{DATEOUT-PREFIX}E.FP_RK_ENT_DT{DATEOUT-SUFFIX}          &E.FP_RK_ENT_DT
    let $_FP_RK_ENT_DT =        &E.FP_RK_ENT_DT
E.FP_CORPS_CD                                           &E.FP_CORPS_CD
    do rtrim_nnull(&E.FP_CORPS_CD, $_FP_CORPS_CD)
{DATEOUT-PREFIX}E.FP_CHG_COR_DT{DATEOUT-SUFFIX}         &E.FP_CHG_COR_DT
    let $_FP_CHG_COR_DT =       &E.FP_CHG_COR_DT
E.FP_CATG_FP                                            &E.FP_CATG_FP
    do rtrim_nnull(&E.FP_CATG_FP, $_FP_CATG_FP)
{DATEOUT-PREFIX}E.FP_APPL_SAL_DT{DATEOUT-SUFFIX}        &E.FP_APPL_SAL_DT
    let $_FP_APPL_SAL_DT =      &E.FP_APPL_SAL_DT
{DATEOUT-PREFIX}E.FP_NOMINATION_DT{DATEOUT-SUFFIX}      &E.FP_NOMINATION_DT
    let $_FP_NOMINATION_DT =    &E.FP_NOMINATION_DT
E.FP_PRO_ACCESS                                         &E.FP_PRO_ACCESS
    do rtrim_nnull(&E.FP_PRO_ACCESS, $_FP_PRO_ACCESS)
E.FP_TBL_CD                                             &E.FP_TBL_CD
    do rtrim_nnull(&E.FP_TBL_CD, $_FP_TBL_CD)

    let $_effdt = &E.EFFDT
    !do convert-from-DTU-date(&E.effdt, $_effdt_out)
    !let $_effdt_out = &E.EFFDT
    !do get-effseq
    let $_fetch_effdt = $_effdt_out
    let #_effseq = #_fetch_effseq + 1
    do var-init-simul(#indice,'N','N')
    do Insert-Careerbis
    do rapport

from PS_FPAEECAREERBIS E
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where   E.EMPLID = $_matricule and
        E.EMPL_RCD = #_no_dossier and
        E.EFFDT > {DATEIN-PREFIX}$_effdt_rca{DATEIN-SUFFIX} and
        E.FP_SETID_RANK = $_tempo_setid and
        E.FP_RANK_CD = $_tempo_rank and
        E.FP_STEP_CD = $_tempo_step and
        E.EFFSEQ = (select max(E01.EFFSEQ) from PS_FPAEECAREERBIS E01
                                              where E01.EMPLID = $_matricule and
                                                    E01.EMPL_RCD = #_no_dossier and
                                                    E01.EFFDT = E.EFFDT and
                                                    E01.FP_INST_STAT = 'R' and
                                                    E01.FP_SETID_RANK = $_tempo_setid and
                                                    E01.FP_RANK_CD = $_tempo_rank and
                                                    E01.FP_STEP_CD = $_tempo_step
                   ) and

        E.FP_INST_STAT = 'R' and
        'RE' <> (
                   select TA7.FP_KIND from PS_FPMACTION_TBL TA7
                   where TA7.ACTION = E.ACTION
                   and TA7.EFFDT =
                        (
                          select max(TA6.EFFDT) from PS_FPMACTION_TBL TA6
                          where TA6.ACTION = E.ACTION
                          and TA6.EFFDT <= E.EFFDT
                        )
                   ) and
         'N' =
                (
                select R08.FP_DEPART_CD from PS_FPMACTION_TBL R08
                where R08.ACTION = E.ACTION
                and R08.EFFDT =
                        (
                        select max(R09.EFFDT) from PS_FPMACTION_TBL R09 where
                        R09.ACTION = E.ACTION and R09.EFFDT <= E.EFFDT
                        )
                 )

        and E.EMPLID = SCRTY.EMPLID     !
        and E.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
        [$_SecurityClause]              !

END-SELECT

END-PROCEDURE simulate



!*****************************************************************
!
!   Function    : var-init-simul
!
!   Description : initialization of simulation variables
!
!   INPUT       : #indice     -> reclassification hypothesis number
!                 $calc_flag  -> 'Y'   -->   seniority has to be computed
!                                'N'   -->   seniority hasn't to be computed
!                 $daa_srch   -> 'Y' when from DAA
!                                'N' otherwise
!
!****************************************************************
BEGIN-PROCEDURE var-init-simul(#indice,$calc_flag,$daa_srch)


! let $sql-statement = 'FPconv.sqr, var-init-simul,Select,PS_FPAEECAREERBIS'
!BEGIN-SELECT On-Error=SQL-On-Error


!{DATEOUT-PREFIX}SIM.EFFDT{DATEOUT-SUFFIX} &_SIM.EFFDT,
!SIM.EFFDT
!SIM.EFFSEQ              &_SIM.EFFSEQ,
!SIM.FP_ACTION_REF       &_SIM.FP_ACTION_REF,
!SIM.FP_NOTIF_REF        &_SIM.FP_NOTIF_REF,
!SIM.FP_CNL_ROW          &_SIM.FP_CNL_ROW,
!SIM.FP_INST_STAT        &_SIM.FP_INST_STAT,
!SIM.ACTION              &_SIM.ACTION,
!SIM.ACTION_REASON       &_SIM.ACTION_REASON,
!SIM.FP_RANK_CD          &_SIM.FP_RANK_CD,
!SIM.FP_STEP_CD          &_SIM.FP_STEP_CD,
!SIM.FP_STEP_NO          &_SIM.FP_STEP_NO,
!SIM.FP_GROSS_IND        &_SIM.FP_GROSS_IND,
!SIM.FP_INCS_IND         &_SIM.FP_INCS_IND,
!SIM.FP_PROM_LCK         &_SIM.FP_PROM_LCK,
!SIM.FP_SENTOSTPDY       &_SIM.FP_SENTOSTPDY,
!SIM.FP_SENTOSTPMN       &_SIM.FP_SENTOSTPMN,
!SIM.FP_SENTOSTPYR       &_SIM.FP_SENTOSTPYR,
!SIM.FP_SENINSTPDY       &_SIM.FP_SENINSTPDY,
!SIM.FP_SENINSTPMN       &_SIM.FP_SENINSTPMN,
!SIM.FP_SENINSTPYR       &_SIM.FP_SENINSTPYR,
!SIM.FP_TRUESEN_DY       &_SIM.FP_TRUESEN_DY,
!SIM.FP_TRUESEN_MN       &_SIM.FP_TRUESEN_MN,
!SIM.FP_TRUESEN_YR       &_SIM.FP_TRUESEN_YR,
!SIM.FP_SENTRANSDY       &_SIM.FP_SENTRANSDY,
!SIM.FP_SENTRANSMN       &_SIM.FP_SENTRANSMN,
!SIM.FP_SENTRANSYR       &_SIM.FP_SENTRANSYR,
!SIM.FP_SENKEPT_DY       &_SIM.FP_SENKEPT_DY,
!SIM.FP_SENKEPT_MN       &_SIM.FP_SENKEPT_MN,
!SIM.FP_SENKEPT_YR       &_SIM.FP_SENKEPT_YR,
!SIM.FP_SENRAN_DY        &_SIM.FP_SENRAN_DY,
!SIM.FP_SENRAN_MN        &_SIM.FP_SENRAN_MN,
!SIM.FP_SENRAN_YR        &_SIM.FP_SENRAN_YR,
!SIM.FP_SENCOR_DY        &_SIM.FP_SENCOR_DY,
!SIM.FP_SENCOR_MN        &_SIM.FP_SENCOR_MN,
!SIM.FP_SENCOR_YR        &_SIM.FP_SENCOR_YR,
!SIM.FP_SEN_CALC         &_SIM.FP_SEN_CALC,
!SIM.FP_CLD_INST         &_SIM.FP_CLD_INST,
!SIM.FP_CLD_STEP         &_SIM.FP_CLD_STEP,
!{DATEOUT-PREFIX}SIM.FP_FOR_PROM_DT{DATEOUT-SUFFIX} &_SIM.FP_FOR_PROM_DT,
!{DATEOUT-PREFIX}SIM.FP_STEP_END_DT{DATEOUT-SUFFIX} &_SIM.FP_STEP_END_DT,
!{DATEOUT-PREFIX}SIM.FP_RK_ENT_DT{DATEOUT-SUFFIX} &_SIM.FP_RK_ENT_DT,
!SIM.FP_CORPS_CD         &_SIM.FP_CORPS_CD,
!{DATEOUT-PREFIX}SIM.FP_CHG_COR_DT{DATEOUT-SUFFIX} &_SIM.FP_CHG_COR_DT,
!SIM.FP_CATG_FP          &_SIM.FP_CATG_FP,
!SIM.FP_TRAINEE          &_SIM.FP_TRAINEE,
!SIM.FP_TRNE_POSN        &_SIM.FP_TRNE_POSN,
!SIM.FP_CATG_LEVEL       &_SIM.FP_CATG_LEVEL,
!SIM.FP_CHG_IND          &_SIM.FP_CHG_IND,
!{DATEOUT-PREFIX}SIM.FP_APPL_SAL_DT{DATEOUT-SUFFIX} &_SIM.FP_APPL_SAL_DT,
!SIM.FP_ROW_CD           &_SIM.FP_ROW_CD,
!{DATEOUT-PREFIX}SIM.FP_NOMINATION_DT{DATEOUT-SUFFIX} &_SIM.FP_NOMINATION_DT,
!SIM.FP_RK_TRIALPD       &_SIM.FP_RK_TRIALPD,
!{DATEOUT-PREFIX}SIM.FP_RK_PD_END_DT{DATEOUT-SUFFIX} &_SIM.FP_RK_PD_END_DT,
!SIM.FP_SANCTION         &_SIM.FP_SANCTION,
!SIM.FP_DOWN_GRA         &_SIM.FP_DOWN_GRA,
!SIM.FP_UPDT_PR_DT       &_SIM.FP_UPDT_PR_DT,
!SIM.FP_PROM_OK          &_SIM.FP_PROM_OK,
!SIM.FP_PROPD_BRK        &_SIM.FP_PROPD_BRK,
!SIM.FP_PRO_ACCESS       &_SIM.FP_PRO_ACCESS,
!SIM.FP_RETROSPECT       &_SIM.FP_RETROSPECT,
!SIM.FP_TBL_CD           &_SIM.FP_TBL_CD,
!{DATEOUT-PREFIX}SIM.LAST_UPDATE_DATE{DATEOUT-SUFFIX} &_SIM.LAST_UPDATE_DATE

!from PS_FPAEECAREERBIS SIM where

!  SIM.EMPLID =  $_matricule and
!  SIM.EMPL_RCD = #_no_dossier and
!  SIM.EFFDT = (select max(SM1.EFFDT) from PS_FPAEECAREERBIS SM1
!                                     where SM1.EMPLID = $_matricule and
!                                           SM1.EMPL_RCD = #_no_dossier and
!                                           SM1.EFFDT <= {DATEIN-PREFIX}$_effdt_out{DATEIN-SUFFIX} and
!                                           SM1.FP_INST_STAT = 'R' ) and
!
!  SIM.EFFSEQ = (select max(SM2.EFFSEQ) from PS_FPAEECAREERBIS SM2
!                                       where SM2.EMPLID = $_matricule and
!                                             SM2.EMPL_RCD = #_no_dossier and
!                                             SM2.EFFDT = SIM.EFFDT and
!                                             SM2.FP_INST_STAT = 'R') and
!  SIM.FP_INST_STAT = 'R'
!
!END-SELECT

display 'var-init-simul'

let $effdt_tmp = $_fetch_effdt
let #effseq_tmp = #_fetch_effseq


!do get-anciennete($_effdt_rca,#effseq_tmp,$daa_srch)

do put-fp_conversion_id($calc_flag,$effdt_tmp,#effseq_tmp,$_rca_effdt,#indice,#_FP_SENINSTPDY,#_FP_SENINSTPMN,#_FP_SENINSTPYR)


if convtable.FP_NX_TRN_PD(#indice) = 'Y'
  let #_FP_TRAINEE = 'Y'
  let #_FP_TRNE_POSN = 'E'
else
  let #_FP_TRAINEE = 'N'
  let #_FP_TRNE_POSN = 'B'
end-if

  let $_fp_conv_id = $_fp_conversion_id
  let $_fp_conv_stat = 'S'
  let $_fp_action_ref = ' '
  let $_FP_NOTIF_REF= ' '                                               !FP_NOTIF_REF,
  let $_FP_CNL_ROW ='N'                                                 !FP_CNL_ROW,
  let $_FP_INST_STAT='R'                                                !FP_INST_STAT,
  let $_action = convtable.action(#indice)                              !ACTION,
  let $_fp_action_des = ' '                                             !FP_ACTION_DES
  let $_action_reason = convtable.action_reason(#indice)                !ACTION_REASON,
  let $_fp_rank_cd = convtable.fp_nx_rank_cd(#indice)                   !FP_RANK_CD
  let $_FP_RANK_DESC = ' '                                              !FP_RANK_DESC
  let $_fp_step_cd = convtable.fp_nx_Step_cd(#indice)                   !FP_STEP_CD,



let $sql-statement = 'FPconv.sqr, var-init-simul,Select,PS_FPMSALSTEP_TBL'
BEGIN-SELECT On-Error=SQL-On-Error

Z2.FP_STEP_NO

 let #_FP_STEP_NO = &Z2.FP_STEP_NO

from PS_FPMSALSTEP_TBL Z2, PS_FPMRANK_TBL Y

where Y.FP_RANK_CD  = $_fp_rank_cd and
Y.SETID = $_FP_SETID_RANK and
Y.EFFDT = (
                select max(Y1.EFFDT) from  PS_FPMRANK_TBL Y1 where Y1.FP_RANK_CD = Y.FP_RANK_CD
                and Y1.SETID = Y.SETID and Y1.EFFDT <= {DATEIN-PREFIX}$_effdt_out{DATEIN-SUFFIX}
           ) and
Z2.FP_MATRIX_TYP = Y.FP_MATRIX_TYP and
Z2.FP_MATRIX_CD = Y.FP_MATRIX_CD and
Z2.FP_SCALE_CD = Y.FP_SCALE_CD and
Z2.FP_STEP_CD = $_FP_STEP_CD and
Z2.EFFDT = (
                  select max(Z3.EFFDT) from PS_FPMSALSTEP_TBL Z3
                                       where Z3.FP_MATRIX_TYP = Z2.FP_MATRIX_TYP and
                                             Z3.FP_MATRIX_CD = Z2.FP_MATRIX_CD and
                                             Z3.FP_SCALE_CD = Z2.FP_SCALE_CD and
                                             Z3.FP_STEP_CD = Z2.FP_STEP_CD and
                                             Z3.EFFDT <= {DATEIN-PREFIX}$_effdt_out{DATEIN-SUFFIX}
             )

END-SELECT


  let #_FP_GROSS_IND = 0
  let #_FP_INCS_IND = 0
  let $_FP_PROM_LCK = 'N'                               !FP_PROM_LCK,
!  let #_FP_SENTOSTPDY = &_SIM.FP_SENTOSTPDY
!  let #_FP_SENTOSTPMN = &_SIM.FP_SENTOSTPMN
!  let #_FP_SENTOSTPYR = &_SIM.FP_SENTOSTPYR
!
!** Seniority calculation following reclassification **
!

let #tp1= convtable.FP_BON_COR_YY(#indice)
let #tp2 = convtable.FP_BON_COR_MM(#indice)
let #tp3 = convtable.FP_BON_COR_DD(#indice)
let #tp4 =  convtable.FP_MULT_COR(#indice)
let #tp5 = trunc (#tp4,0)

if $calc_flag='Y'
    do calc-anc-recl(#_FP_SENINSTPDY,#_FP_SENINSTPMN,#_FP_SENINSTPYR,#indice,#_FP_SENKEPT_DY,#_FP_SENKEPT_MN,#_FP_SENKEPT_YR)
else
    let #_FP_SENKEPT_DY = 0
    let #_FP_SENKEPT_MN = 0
    let #_FP_SENKEPT_YR = 0
end-if

  let #_FP_TRUESEN_DY = 0                                       !FP_TRUESEN_DY
  let #_FP_TRUESEN_MN = 0                                       !FP_TRUESEN_MN
  let #_FP_TRUESEN_YR = 0                                       !FP_TRUESEN_YR
!  let #_FP_SENTRANSDY = &_SIM.FP_SENTRANSDY                     !FP_SENTRANSDY
!  let #_FP_SENTRANSMN = &_SIM.FP_SENTRANSMN                     !FP_SENTRANSMN
!  let #_FP_SENTRANSYR = &_SIM.FP_SENTRANSYR                     !FP_SENTRANSYR
!  let #_FP_SENRAN_DY = &_SIM.FP_SENRAN_DY                                       !FP_SENRAN_DY,
!  let #_FP_SENRAN_MN = &_SIM.FP_SENRAN_MN                                       !FP_SENRAN_MN,
!  let #_FP_SENRAN_YR = &_SIM.FP_SENRAN_YR                                       !FP_SENRAN_YR,
!  let #_FP_SENCOR_DY = &_SIM.FP_SENCOR_DY                                       !FP_SENCOR_DY,
!  let #_FP_SENCOR_MN = &_SIM.FP_SENCOR_MN                                       !FP_SENCOR_MN,
!  let #_FP_SENCOR_YR = &_SIM.FP_SENCOR_YR                                       !FP_SENCOR_YR,
  let $_FP_SEN_CALC = 'Y'                    !FP_SEN_CALC,
!
! close instance ?...date of following action?
!

let $sql-statement = 'FPconv.sqr, var-init-simul,Select,PS_FPAEECAREERBIS'
BEGIN-SELECT On-Error=SQL-On-Error

{DATEOUT-PREFIX}min(NXT.EFFDT){DATEOUT-SUFFIX}  &NXT.EFFDT

 let $temp_effdt = &NXT.EFFDT

from PS_FPAEECAREERBIS NXT

where NXT.EMPLID = $_matricule and
      NXT.EMPL_RCD = #_no_dossier and
      NXT.EFFDT > {DATEIN-PREFIX}$_effdt_out{DATEIN-SUFFIX} and
      NXT.EFFSEQ = 0

END-SELECT


 if isnull ($temp_effdt)
        let $_FP_CLD_INST= 'N'
        let $_FP_STEP_END_DT = ''
        let $_FP_RETROSPECT =  'N'                                   !FP_RETROSPECT,
 else
        let $_FP_CLD_INST= 'Y'
        do convert-to-DTU-date($temp_effdt,$temp_date1)
        do convert-to-DTU-date($_effdt_out,$temp_date2)
        do dtu-diff-days($temp_date1,$temp_date2, #diff_dys_ev)
        if #diff_dys_ev < 0
         do Substr-Date($temp_date1,0,0,1,$_FP_STEP_END_DTU)
         do convert-From-DTU-date($FP_STEP_END_DTU,$FP_STEP_END_DT)
        else
         let $_FP_STEP_END_DT = $_effdt_out
        end-if
        let $_FP_RETROSPECT =  'Y'                                   !FP_RETROSPECT,
 end-if
  let $_FP_FOR_PROM_DT = ''
  if convtable.fp_nx_rank_cd(#indice) != convtable.fp_rank_cd(#indice)
    let $_FP_RK_ENT_DT  = $_rca_effdt     !FP_RK_ENT_DT
    let #_FP_SENRAN_DY = 0                                      !FP_SENRAN_DY,
    let #_FP_SENRAN_MN = 0                                      !FP_SENRAN_MN,
    let #_FP_SENRAN_YR = 0
  end-if
!  do rtrim_nnull(&_SIM.FP_CORPS_CD,$_FP_CORPS_CD)                       !FP_CORPS_CD,
!  let $_FP_CHG_COR_DT = &_SIM.FP_CHG_COR_DT                     !FP_CHG_COR_DT,
!  do rtrim_nnull(&_SIM.FP_CATG_FP,$_FP_CATG_FP)                         !FP_CATG_FP,
!
! Probationary period needed ?
!
  let $_FP_RK_TRIALPD = 'N'
!if convtable.FP_NX_TRN_PD(#indice) = 'Y'
!  let $_FP_TRAINEE = 'Y'                                        !FP_TRAINEE,
!  let $_FP_TRNE_POSN = 'E'                                      !FP_TRNE_POSN,
!else
!  do rtrim_nnull(&_SIM.FP_TRAINEE,$_FP_TRAINEE)                         !FP_TRAINEE,
!  do rtrim_nnull(&_SIM.FP_TRNE_POSN,$_FP_TRNE_POSN)                     !FP_TRNE_POSN,
!end-if

!  do rtrim_nnull(&_SIM.FP_CATG_LEVEL,$_FP_CATG_LEVEL)                           !FP_CATG_LEVEL,
  let $_FP_CHG_IND = 'N'                 !FP_CHG_IND,
!  let $_FP_APPL_SAL_DT = &_SIM.FP_APPL_SAL_DT                   !FP_APPL_SAL_DT
  let $_FP_ROW_CD = 'A'          !FP_ROW_CD,
!  let $_FP_NOMINATION_DT = &_SIM.FP_NOMINATION_DT               !FP_NOMINATION_DT,

!  do rtrim_nnull(&_SIM.FP_SANCTION,$_FP_SANCTION)                       !FP_SANCTION,
!  do rtrim_nnull(&_SIM.FP_DOWN_GRA,$_FP_DOWN_GRA)                       !FP_DOWN_GRA,
  let $_FP_SANCTION = 'N'
  let $_FP_DOWN_GRA = 'N'
  let $_FP_UPDT_PR_DT = 'N'                                     !FP_UPDT_PR_DT,
  let $_FP_PROM_OK = 'N'                                        !FP_PROM_OK,
  let $_FP_PROPD_BRK ='N'                                       !FP_PROPD_BRK,
!  do rtrim_nnull(&_SIM.FP_PRO_ACCESS,$_FP_PRO_ACCESS)                   !FP_PRO_ACCESS,
!  let $_FP_RETROSPECT =  'Y'                                   !FP_RETROSPECT,
!  do rtrim_nnull(&_SIM.FP_TBL_CD,$_FP_TBL_CD)                           !FP_TBL_CD,
  let $_LAST_UPDATE_DATE = $AsOfToday                             !LAST_UPDATE_DATE

END-PROCEDURE var-init-simul



!*********************************************************************************
!   Function    : calc-anc-recl
!
!   Description : calculation of new retained seniority after reclassification
!
!       INPUT   : indice = hypothesis number
!
!*********************************************************************************
BEGIN-PROCEDURE calc-anc-recl(#FP_SENINSTPDY,#FP_SENINSTPMN,#FP_SENINSTPYR,#indice,:#nd,:#nm,:#ny)

! Calculation of new seniority
!-----------------------------

  let #FP_SENINSTPDY = convtable.FP_MULT_COR(#indice)*#FP_SENINSTPDY + convtable.FP_BON_COR_DD(#indice)    !FP_SENINSTPDY
  let #FP_SENINSTPMN = convtable.FP_MULT_COR(#indice)*#FP_SENINSTPMN + convtable.FP_BON_COR_MM(#indice)    !FP_SENINSTPMN
  let #FP_SENINSTPYR = convtable.FP_MULT_COR(#indice)*#FP_SENINSTPYR + convtable.FP_BON_COR_YY(#indice)    !FP_SENINSTPYR


! Number of days for the reclassification date
!---------------------------------------------

if $_Cal-Thirtieth ='T'  !Tertieth
        let #Days-Number=30
else                    !Calendaire
        do convert-to-DTU-date($_effdt_rca,$_effdt_rca_dtu)
        Do Days-Number($_effdt_rca_dtu,#Days-Number )
end-if


!Needed adjustement due to %
!---------------------------

let #AA =  #FP_SENINSTPYR - trunc(#FP_SENINSTPYR,0)
let #FP_SENINSTPYR = trunc(#FP_SENINSTPYR,0)
let #FP_SENINSTPMN = #FP_SENINSTPMN + (#AA * 12)

let #AM = #FP_SENINSTPMN - trunc(#FP_SENINSTPMN,0)
let #FP_SENINSTPMN = trunc(#FP_SENINSTPMN,0)
let #FP_SENINSTPDY = #FP_SENINSTPDY + (#AM * #Days-Number)

let #FP_SENINSTPDY = round(#FP_SENINSTPDY,0)

While #FP_SENINSTPDY >= #Days-Number
        let #FP_SENINSTPMN  = #FP_SENINSTPMN  + 1
        let #FP_SENINSTPDY = #FP_SENINSTPDY - #Days-Number
End-While

While #FP_SENINSTPMN >= 12
        let #FP_SENINSTPYR = #FP_SENINSTPYR + 1
        let #FP_SENINSTPMN = #FP_SENINSTPMN - 12
End-While

let #nd = #FP_SENINSTPDY
let #nm = #FP_SENINSTPMN
let #ny = #FP_SENINSTPYR

END-PROCEDURE calc-anc-recl



!********************************************************************************
!
!   Function    : search-date-min
!
!   Description : retrieve the Step entry date and test hypothesis
!
!********************************************************************************
BEGIN-PROCEDURE search-date-min (#no_hyp,:$date_retour)

let $date_retour = $_daa
let $stop = 'N'

let $sql-statement = 'FPconv.sqr, simulate-recherche-date,Select,PS_FPAEECAREERBIS'
BEGIN-SELECT On-Error=SQL-On-Error

{DATEOUT-PREFIX}SD.EFFDT{DATEOUT-SUFFIX}       &_SD.EFFDT,
SD.EFFDT
SD.EFFSEQ              &_SD.EFFSEQ,
SD.FP_ACTION_REF       &_SD.FP_ACTION_REF,
SD.FP_NOTIF_REF        &_SD.FP_NOTIF_REF,
SD.FP_CNL_ROW          &_SD.FP_CNL_ROW,
SD.FP_INST_STAT        &_SD.FP_INST_STAT,
SD.ACTION              &_SD.ACTION,
SD.ACTION_REASON       &_SD.ACTION_REASON,
SD.FP_RANK_CD          &_SD.FP_RANK_CD,
SD.FP_STEP_CD          &_SD.FP_STEP_CD,
SD.FP_STEP_NO          &_SD.FP_STEP_NO,
SD.FP_GROSS_IND        &_SD.FP_GROSS_IND,
SD.FP_INCS_IND         &_SD.FP_INCS_IND,
SD.FP_PROM_LCK         &_SD.FP_PROM_LCK,
SD.FP_SENTOSTPDY       &_SD.FP_SENTOSTPDY,
SD.FP_SENTOSTPMN       &_SD.FP_SENTOSTPMN,
SD.FP_SENTOSTPYR       &_SD.FP_SENTOSTPYR,
SD.FP_SENINSTPDY       &_SD.FP_SENINSTPDY,
SD.FP_SENINSTPMN       &_SD.FP_SENINSTPMN,
SD.FP_SENINSTPYR       &_SD.FP_SENINSTPYR,
SD.FP_TRUESEN_DY       &_SD.FP_TRUESEN_DY,
SD.FP_TRUESEN_MN       &_SD.FP_TRUESEN_MN,
SD.FP_TRUESEN_YR       &_SD.FP_TRUESEN_YR,
SD.FP_SENTRANSDY       &_SD.FP_SENTRANSDY,
SD.FP_SENTRANSMN       &_SD.FP_SENTRANSMN,
SD.FP_SENTRANSYR       &_SD.FP_SENTRANSYR,
SD.FP_SENKEPT_DY       &_SD.FP_SENKEPT_DY,
SD.FP_SENKEPT_MN       &_SD.FP_SENKEPT_MN,
SD.FP_SENKEPT_YR       &_SD.FP_SENKEPT_YR,
SD.FP_SENRAN_DY        &_SD.FP_SENRAN_DY,
SD.FP_SENRAN_MN        &_SD.FP_SENRAN_MN,
SD.FP_SENRAN_YR        &_SD.FP_SENRAN_YR,
SD.FP_SENCOR_DY        &_SD.FP_SENCOR_DY,
SD.FP_SENCOR_MN        &_SD.FP_SENCOR_MN,
SD.FP_SENCOR_YR        &_SD.FP_SENCOR_YR,
SD.FP_DURSTEP_DY       &_SD.FP_DURSTEP_DY,    !
SD.FP_DURSTEP_MN       &_SD.FP_DURSTEP_MN,    !
SD.FP_DURSTEP_YR       &_SD.FP_DURSTEP_YR,    !
SD.FP_DURRAN_DY        &_SD.FP_DURRAN_DY,     !
SD.FP_DURRAN_MN        &_SD.FP_DURRAN_MN,     !
SD.FP_DURRAN_YR        &_SD.FP_DURRAN_YR,     !
SD.FP_DURCOR_DY        &_SD.FP_DURCOR_DY,     !
SD.FP_DURCOR_MN        &_SD.FP_DURCOR_MN,     !
SD.FP_DURCOR_YR        &_SD.FP_DURCOR_YR,     !
SD.FP_SENEQSTP_DY      &_SD.FP_SENEQSTP_DY,   !Seniority management
SD.FP_SENEQSTP_MN      &_SD.FP_SENEQSTP_MN,   !
SD.FP_SENEQSTP_YR      &_SD.FP_SENEQSTP_YR,   !
SD.FP_SENENTRK_DY       &_SD.FP_SENENTRK_DY,  !
SD.FP_SENENTRK_MN       &_SD.FP_SENENTRK_MN,  !
SD.FP_SENENTRK_YR       &_SD.FP_SENENTRK_YR,  !
SD.FP_SENENTCRP_DY      &_SD.FP_SENENTCRP_DY, !
SD.FP_SENENTCRP_MN      &_SD.FP_SENENTCRP_MN, !
SD.FP_SENENTCRP_YR      &_SD.FP_SENENTCRP_YR, !
SD.FP_SEN_CALC         &_SD.FP_SEN_CALC,
SD.FP_CLD_INST         &_SD.FP_CLD_INST,
SD.FP_CLD_STEP         &_SD.FP_CLD_STEP,
{DATEOUT-PREFIX}SD.FP_FOR_PROM_DT{DATEOUT-SUFFIX}       &_SD.FP_FOR_PROM_DT,
{DATEOUT-PREFIX}SD.FP_STEP_END_DT{DATEOUT-SUFFIX}       &_SD.FP_STEP_END_DT,
{DATEOUT-PREFIX}SD.FP_RK_ENT_DT{DATEOUT-SUFFIX}         &_SD.FP_RK_ENT_DT,
SD.FP_CORPS_CD         &_SD.FP_CORPS_CD,
{DATEOUT-PREFIX}SD.FP_CHG_COR_DT{DATEOUT-SUFFIX}        &_SD.FP_CHG_COR_DT,
SD.FP_CATG_FP          &_SD.FP_CATG_FP,
SD.FP_TRAINEE          &_SD.FP_TRAINEE,
SD.FP_TRNE_POSN        &_SD.FP_TRNE_POSN,
SD.FP_CATG_LEVEL       &_SD.FP_CATG_LEVEL,
SD.FP_CHG_IND          &_SD.FP_CHG_IND,
{DATEOUT-PREFIX}SD.FP_APPL_SAL_DT{DATEOUT-SUFFIX}       &_SD.FP_APPL_SAL_DT,
SD.FP_ROW_CD           &_SD.FP_ROW_CD,
{DATEOUT-PREFIX}SD.FP_NOMINATION_DT{DATEOUT-SUFFIX}     &_SD.FP_NOMINATION_DT,
SD.FP_RK_TRIALPD       &_SD.FP_RK_TRIALPD,
{DATEOUT-PREFIX}SD.FP_RK_PD_END_DT{DATEOUT-SUFFIX}      &_SD.FP_RK_PD_END_DT,
SD.FP_SANCTION         &_SD.FP_SANCTION,
SD.FP_DOWN_GRA         &_SD.FP_DOWN_GRA,
SD.FP_UPDT_PR_DT       &_SD.FP_UPDT_PR_DT,
SD.FP_PROM_OK          &_SD.FP_PROM_OK,
SD.FP_PROPD_BRK        &_SD.FP_PROPD_BRK,
SD.FP_PRO_ACCESS       &_SD.FP_PRO_ACCESS,
SD.FP_SETID_RANK       &_SD.FP_SETID_RANK,
SD.FP_EQUIV_STEP       &_SD.FP_EQUIV_STEP,    ! Sub-scale management
SD.FP_SETID_CA         &_SD.FP_SETID_CA,      ! CAE management
SD.FP_COMM_ACNT_ID     &_SD.FP_COMM_ACNT_ID,  !
SD.FP_RETROSPECT       &_SD.FP_RETROSPECT,
SD.FP_TBL_CD           &_SD.FP_TBL_CD,
{DATEOUT-PREFIX}SD.LAST_UPDATE_DATE{DATEOUT-SUFFIX}     &_SD.LAST_UPDATE_DATE

    if $stop = 'N'
        do Var-Init-SD
        do test-hyp(#no_hyp, $_effdt_srch,$_action,#_effseq, 'Y',#res_test2)
        display 'resultat test hypothese 2'
        display #res_test2
        do convert-to-DTU-date($date_retour,$tempo1)
        do convert-to-DTU-date($_effdt_srch,$tempo2)
        do dtu-diff-days($tempo1,$tempo2, #diff_srch)
        if #res_test2 = 1 and #diff_srch <0
            let $date_retour = $_effdt_srch
            let $stop = 'Y'
        end-if
    end-if

from PS_FPAEECAREERBIS SD
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where SD.EMPLID = $_matricule and
      SD.EMPL_RCD = #_no_dossier and
      SD.FP_SETID_RANK = $_tempo_setid and
      SD.FP_RANK_CD = $_tempo_rank and
      SD.FP_STEP_CD = $_tempo_step and
      SD.EFFDT > {DATEIN-PREFIX}$_conv_date{DATEIN-SUFFIX}
      AND SD.EFFDT <= {DATEIN-PREFIX}$_daa{DATEIN-SUFFIX}
      AND SD.EFFSEQ = (select max (SD2.EFFSEQ) from PS_FPAEECAREERBIS SD2
                  where SD2.EMPLID = $_matricule and
                       SD2.EMPL_RCD  = #_no_dossier and
                       SD2.FP_SETID_RANK = $_tempo_setid and
                       SD2.FP_RANK_CD = $_tempo_rank and
                       SD2.FP_STEP_CD = $_tempo_step and
                       SD2.EFFDT = SD.EFFDT and
                       SD2.FP_INST_STAT = 'R' and
                       'N' =
                 (
                   select R03.FP_DEPART_CD from PS_FPMACTION_TBL R03
                   where R03.ACTION = SD2.ACTION
                   and R03.EFFDT =
                        (
                        select max(R04.EFFDT) from PS_FPMACTION_TBL R04 where
                        R04.ACTION = SD.ACTION and R04.EFFDT <= SD2.EFFDT
                        )
                 )
                )
and 'N' =
   (
     select R02.FP_DEPART_CD from PS_FPMACTION_TBL R02
     where R02.ACTION = SD.ACTION
     and R02.EFFDT =
        (
         select max(R03.EFFDT) from PS_FPMACTION_TBL R03 where
         R03.ACTION = SD.ACTION and R03.EFFDT <= SD.EFFDT
        )
    )
and SD.FP_INST_STAT = 'R'

and SD.EMPLID = SCRTY.EMPLID     !
and SD.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
[$_SecurityClause]               !

order by SD.EFFDT

END-SELECT

!do convert-to-DTU-date(&SD.effdt,$date_deb_ech)
!do convert-to-DTU-date($_conv_date,$dtu_conv_dt)
!do dtu-diff-days($date_deb_ech,$dtu_conv_dt, #diff_tempo)

!if #diff_tempo > 0
! let $_effdt_rca = $_conv_date
!else
! let $_effdt_rca = &SD.effdt
 !let $_effdt_rca = $date_deb_ech
!end-if


!
! * Search for hypothesis date
!


!do test-hyp(#no_hyp, $_effdt_rca, $action,#effseq,'Y',#res_test)
!if #res_test <> 1
!  do search-date-min2(#no_hyp,$date_retour)
!else
!  let $date_retour = $_effdt_rca
!end-if

END-PROCEDURE search-date-min



!************************************************************************
!
!   Function    : search-date-min2
!
!   Description : search for entry date in the population to be reclassified
!
!************************************************************************
BEGIN-PROCEDURE search-date-min2 (#no_hyp,:$date_retour)

let $date_retour = $_daa

let $sql-statement = 'FPconv.sqr, simulate-recherche-date2,Select,PS_FPAEECAREERBIS'
BEGIN-SELECT On-Error=SQL-On-Error

{DATEOUT-PREFIX}VE3.EFFDT{DATEOUT-SUFFIX} &VE3.EFFDT
VE3.ACTION
VE3.EFFSEQ

 do rtrim_nnull(&VE3.ACTION,$action)
 let $effdt_srch = &VE3.EFFDT
 let #effseq = &VE3.EFFSEQ
 do test-hyp(#no_hyp, $effdt_srch,$action,#effseq, 'Y',#res_test2)
 do convert-to-DTU-date($date_retour,$tempo1)
 do convert-to-DTU-date($effdt_srch,$tempo2)
 do dtu-diff-days($tempo1,$tempo2, #diff_srch)
 if #res_test2 = 1 and #diff_srch <0
   let $date_retour = $effdt_srch
 end-if

from PS_FPAEECAREERBIS VE3
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where VE3.EMPLID = $_matricule and
      VE3.EMPL_RCD = #_no_dossier and
      VE3.FP_SETID_RANK = $_tempo_setid and
      VE3.FP_RANK_CD = $_tempo_rank and
      VE3.FP_STEP_CD = $_tempo_step and
      VE3.EFFDT >= {DATEIN-PREFIX}$_effdt_rca{DATEIN-SUFFIX} and
      VE3.EFFSEQ = ( select max (VE4.EFFSEQ) from PS_FPAEECAREERBIS VE4
                                              where VE4.EMPLID = $_matricule and
                                                    VE4.EMPL_RCD = #_no_dossier and
                                                    VE4.FP_SETID_RANK = $_tempo_setid and
                                                    VE4.FP_RANK_CD = $_tempo_rank and
                                                    VE4.FP_STEP_CD = $_tempo_step and
                                                    VE4.EFFDT = VE3.effdt and
                                                    VE4.FP_INST_STAT = 'R'
                   )
      and 'N' =
               (
                select RE5.FP_DEPART_CD from PS_FPMACTION_TBL RE5
                                        where RE5.ACTION = VE3.ACTION and
                                              RE5.EFFDT =
                                              (
                                               select max(RE6.EFFDT) from PS_FPMACTION_TBL RE6
                                                                     where  RE6.ACTION = VE3.ACTION and
                                                                     RE6.EFFDT <= VE3.EFFDT
                                              )
               ) and
      VE3.FP_INST_STAT = 'R'

      and VE3.EMPLID = SCRTY.EMPLID      !
      and VE3.EMPL_RCD = SCRTY.EMPL_RCD         !SQR security
      [$_SecurityClause]               !

END-SELECT

END-PROCEDURE search-date-min2



!*********************************************************
!
!   Function    : get-effseq
!
!   Description : fetch the last sequence number
!
!*********************************************************
BEGIN-PROCEDURE get-effseq

let #modif_effseq=0
let $sql-statement = 'FPconv.sqr, get-effseq,Select,PS_FPAEECAREERBIS'
BEGIN-SELECT On-Error=SQL-On-Error

F.EFFSEQ                  &F.effseq

  let #effseq = &F.EFFSEQ

  add 1 to #effseq
  let #modif_effseq=1

from PS_FPAEECAREERBIS F
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where F.EMPLID = $matricule and
      F.EMPL_RCD = #no_dossier and
      F.EFFDT = {DATEIN-PREFIX}$effdt{DATEIN-SUFFIX} and
      F.EFFSEQ = (select max(F1.EFFSEQ)
                  from PS_FPAEECAREERBIS F1
                  where F1.EMPLID = F.EMPLID and
                  F1.EMPL_RCD = F.EMPL_RCD and
                  F1.EFFDT = F.EFFDT)

      and F.EMPLID = SCRTY.EMPLID     !
      and F.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
      [$SecurityClause]               !

END-SELECT

if #modif_effseq = 0
  let #effseq = 0
end-if

END-PROCEDURE get-effseq



!****************************************************
!
!   Function :      rtrim_nnull
!
!                   $nom_in  = variable to update
!                   $nom_out = resulting variable
!
!   Description :   rtrim if $nom_in not null
!       INPUT   :   $nom_in  = variable to update
!       OUTPUT  :   $nom_out = resulting variable
!
!****************************************************
BEGIN-PROCEDURE rtrim_nnull($nom_in,:$nom_out)

let $nom_out = rtrim($nom_in,' ')
if isnull($nom_out)
  let $nom_out = ' '
end-if

END-PROCEDURE rtrim_nnull



!********************************************
!
!   Function    : Var-Init
!
!   Description : Variables initialization
!
!********************************************
BEGIN-PROCEDURE Var-Init

 do convert-to-DTU-date (&S.EFFDT,$effdt)
 !Do Convert-from-DTU-Date (&S.EFFDT,$effdt_out)
 let $effdt_out = &S.EFFDT
 do rtrim_nnull (&MATRICULE,$matricule)
 let #no_dossier = &NO_DOSSIER#
 let #effseq = &S.EFFSEQ
 do convert-to-DTU-Date($AsOfToday,$Today-dat)
 do rtrim_nnull (&S.FP_ACTION_REF,$FP_ACTION_REF)
 do rtrim_nnull (&S.FP_NOTIF_REF,$FP_NOTIF_REF)
 do rtrim_nnull (&S.FP_CNL_ROW,$FP_CNL_ROW)
 do rtrim_nnull (&S.FP_INST_STAT,$FP_INST_STAT)
 do rtrim_nnull (&S.ACTION,$ACTION)
 do rtrim_nnull (&S.ACTION_REASON,$ACTION_REASON)
 do rtrim_nnull (&S.FP_rank_cd,$FP_RANK_CD)
 do rtrim_nnull (&S.FP_Step_cd,$FP_STEP_CD)
 let #FP_STEP_NO = &S.FP_STEP_NO
 let #FP_GROSS_IND = &S.FP_GROSS_IND
 let #FP_INCS_IND = &S.FP_INCS_IND
 do rtrim_nnull (&S.FP_PROM_LCK,$FP_PROM_LCK)
 let #FP_SENTOSTPDY = &S.FP_SENTOSTPDY
 let #FP_SENTOSTPMN = &S.FP_SENTOSTPMN
 let #FP_SENTOSTPYR = &S.FP_SENTOSTPYR
 let #FP_SENINSTPDY = &S.FP_SENINSTPDY
 let #FP_SENINSTPMN= &S.FP_SENINSTPMN
 let #FP_SENINSTPYR = &S.FP_SENINSTPYR
 let #FP_TRUESEN_DY = &S.FP_TRUESEN_DY
 let #FP_TRUESEN_MN = &S.FP_TRUESEN_MN
 let #FP_TRUESEN_YR = &S.FP_TRUESEN_YR
 let #FP_SENTRANSDY = &S.FP_SENTRANSDY
 let #FP_SENTRANSMN = &S.FP_SENTRANSMN
 let #FP_SENTRANSYR = &S.FP_SENTRANSYR
 let #FP_SENKEPT_DY = &S.FP_SENKEPT_DY
 let #FP_SENKEPT_MN = &S.FP_SENKEPT_MN
 let #FP_SENKEPT_YR = &S.FP_SENKEPT_YR
 let #FP_SENRAN_DY = &S.FP_SENRAN_DY
 let #FP_SENRAN_MN = &S.FP_SENRAN_MN
 let #FP_SENRAN_YR = &S.FP_SENRAN_YR
 let #FP_SENCOR_DY = &S.FP_SENCOR_DY
 let #FP_SENCOR_MN = &S.FP_SENCOR_MN
 let #FP_SENCOR_YR = &S.FP_SENCOR_YR
 Let #FP_DURSTEP_DY = &S.FP_DURSTEP_DY
 Let #FP_DURSTEP_MN = &S.FP_DURSTEP_MN
 Let #FP_DURSTEP_YR = &S.FP_DURSTEP_YR
 Let #FP_DURRAN_DY = &S.FP_DURRAN_DY
 Let #FP_DURRAN_MN = &S.FP_DURRAN_MN
 Let #FP_DURRAN_YR = &S.FP_DURRAN_YR
 Let #FP_DURCOR_DY = &S.FP_DURCOR_DY
 Let #FP_DURCOR_MN = &S.FP_DURCOR_MN
 Let #FP_DURCOR_YR = &S.FP_DURCOR_YR
 Let #FP_SENEQSTP_DY = &S.FP_SENEQSTP_DY
 Let #FP_SENEQSTP_MN = &S.FP_SENEQSTP_MN
 Let #FP_SENEQSTP_YR = &S.FP_SENEQSTP_YR
 Let #FP_SENENTRK_DY = &S.FP_SENENTRK_DY
 Let #FP_SENENTRK_MN = &S.FP_SENENTRK_MN
 Let #FP_SENENTRK_YR = &S.FP_SENENTRK_YR
 Let #FP_SENENTCRP_DY = &S.FP_SENENTCRP_DY
 Let #FP_SENENTCRP_MN = &S.FP_SENENTCRP_MN
 Let #FP_SENENTCRP_YR = &S.FP_SENENTCRP_YR
 Let #FP_SENENTCTG_DY = &S.FP_SENENTCTG_DY
 Let #FP_SENENTCTG_MN = &S.FP_SENENTCTG_MN
 Let #FP_SENENTCTG_YR = &S.FP_SENENTCTG_YR
 do rtrim_nnull (&S.FP_SEN_CALC,$FP_SEN_CALC)
 do rtrim_nnull (&S.FP_CLD_INST,$FP_CLD_INST)
 do rtrim_nnull (&S.FP_CLD_STEP,$FP_CLD_STEP)
 let $FP_FOR_PROM_DT = &S.FP_FOR_PROM_DT
 let $FP_STEP_END_DT = &S.FP_STEP_END_DT
 let $FP_RK_ENT_DT = &S.FP_RK_ENT_DT
 do rtrim_nnull (&S.FP_CORPS_CD,$FP_CORPS_CD)
 let $FP_CHG_COR_DT = &S.FP_CHG_COR_DT
 do rtrim_nnull (&S.FP_CATG_FP,$FP_CATG_FP)
 do rtrim_nnull (&S.FP_TRAINEE,$FP_TRAINEE)
 do rtrim_nnull (&S.FP_TRNE_POSN,$FP_TRNE_POSN)
 do rtrim_nnull (&S.FP_CATG_LEVEL,$FP_CATG_LEVEL)
 do rtrim_nnull (&S.FP_CHG_IND,$FP_CHG_IND)
 let $FP_APPL_SAL_DT = &S.FP_APPL_SAL_DT
 do rtrim_nnull (&S.FP_ROW_CD,$FP_ROW_CD)
 let $FP_NOMINATION_DT = &S.FP_NOMINATION_DT
 do rtrim_nnull (&S.FP_RK_TRIALPD,$FP_RK_TRIALPD)
 let $FP_RK_PD_END_DT = &S.FP_RK_PD_END_DT
 do rtrim_nnull (&S.FP_SANCTION,$FP_SANCTION)
 do rtrim_nnull (&S.FP_DOWN_GRA,$FP_DOWN_GRA)
 let $FP_UPDT_PR_DT = &S.FP_UPDT_PR_DT
 do rtrim_nnull (&S.FP_PROM_OK,$FP_PROM_OK)
 do rtrim_nnull (&S.FP_PROPD_BRK,$FP_PROPD_BRK)
 do rtrim_nnull (&S.FP_PRO_ACCESS,$FP_PRO_ACCESS)
 let $FP_NX_STP_CD = ' '
 do rtrim_nnull (&S.FP_SETID_RANK,$FP_SETID_RANK)
 do rtrim_nnull (&S.FP_EQUIV_STEP,$FP_EQUIV_STEP)
 do rtrim_nnull (&S.FP_STFBDG_LVL1,$FP_STFBDG_LVL1)
 do rtrim_nnull (&S.FP_STFBDG_LVL3,$FP_STFBDG_LVL3)
 do rtrim_nnull (&S.FP_SETID_CA,$FP_SETID_CA)
 do rtrim_nnull (&S.FP_COMM_ACNT_ID,$FP_COMM_ACNT_ID)
 do rtrim_nnull (&S.FP_RETROSPECT,$FP_RETROSPECT)
 do rtrim_nnull (&S.FP_TBL_CD,$FP_TBL_CD)
!
! Name fetch from Personal_data
!
let $sql-statement = 'FPconv.sqr, Var-Init,Select,PS_PERSON_NAME'

BEGIN-SELECT On-Error=SQL-On-Error

Z.NAME

from PS_PERSON_NAME Z
Where Z.EMPLID = $matricule

END-SELECT

 do rtrim_nnull(&Z.NAME,$Name)

END-PROCEDURE Var-Init



!********************************************
!
!   Function    : Var-Init-SD
!
!   Description : initialization of the variables
!
!********************************************
BEGIN-PROCEDURE Var-Init-SD

    do convert-to-DTU-date (&SD.EFFDT,$effdt)
    let $effdt_out = &SD.EFFDT
    let $effdt_srch = &SD.EFFDT
    let #effseq = &SD.EFFSEQ
    do rtrim_nnull (&SD.FP_ACTION_REF,$FP_ACTION_REF)
    do rtrim_nnull (&SD.FP_NOTIF_REF,$FP_NOTIF_REF)
    do rtrim_nnull (&SD.FP_CNL_ROW,$FP_CNL_ROW)
    do rtrim_nnull (&SD.FP_INST_STAT,$FP_INST_STAT)
    do rtrim_nnull (&SD.ACTION,$ACTION)
    do rtrim_nnull (&SD.ACTION_REASON,$ACTION_REASON)
    do rtrim_nnull (&SD.FP_rank_cd,$FP_RANK_CD)
    do rtrim_nnull (&SD.FP_Step_cd,$FP_STEP_CD)
    let #FP_STEP_NO = &SD.FP_STEP_NO
    let #FP_GROSS_IND = &SD.FP_GROSS_IND
    let #FP_INCS_IND = &SD.FP_INCS_IND
    do rtrim_nnull (&SD.FP_PROM_LCK,$FP_PROM_LCK)
    let #FP_SENTOSTPDY = &SD.FP_SENTOSTPDY
    let #FP_SENTOSTPMN = &SD.FP_SENTOSTPMN
    let #FP_SENTOSTPYR = &SD.FP_SENTOSTPYR
    let #FP_SENINSTPDY = &SD.FP_SENINSTPDY
    let #FP_SENINSTPMN= &SD.FP_SENINSTPMN
    let #FP_SENINSTPYR = &SD.FP_SENINSTPYR
    let #FP_TRUESEN_DY = &SD.FP_TRUESEN_DY
    let #FP_TRUESEN_MN = &SD.FP_TRUESEN_MN
    let #FP_TRUESEN_YR = &SD.FP_TRUESEN_YR
    let #FP_SENTRANSDY = &SD.FP_SENTRANSDY
    let #FP_SENTRANSMN = &SD.FP_SENTRANSMN
    let #FP_SENTRANSYR = &SD.FP_SENTRANSYR
    let #FP_SENKEPT_DY = &SD.FP_SENKEPT_DY
    let #FP_SENKEPT_MN = &SD.FP_SENKEPT_MN
    let #FP_SENKEPT_YR = &SD.FP_SENKEPT_YR
    let #FP_SENRAN_DY = &SD.FP_SENRAN_DY
    let #FP_SENRAN_MN = &SD.FP_SENRAN_MN
    let #FP_SENRAN_YR = &SD.FP_SENRAN_YR
    let #FP_SENCOR_DY = &SD.FP_SENCOR_DY
    let #FP_SENCOR_MN = &SD.FP_SENCOR_MN
    let #FP_SENCOR_YR = &SD.FP_SENCOR_YR
    do rtrim_nnull (&SD.FP_SEN_CALC,$FP_SEN_CALC)
    do rtrim_nnull (&SD.FP_CLD_INST,$FP_CLD_INST)
    do rtrim_nnull (&SD.FP_CLD_STEP,$FP_CLD_STEP)
    let $FP_FOR_PROM_DT = &SD.FP_FOR_PROM_DT
    let $FP_STEP_END_DT = &SD.FP_STEP_END_DT
    let $FP_RK_ENT_DT = &SD.FP_RK_ENT_DT
    do rtrim_nnull (&SD.FP_CORPS_CD,$FP_CORPS_CD)
    let $FP_CHG_COR_DT = &SD.FP_CHG_COR_DT
    do rtrim_nnull (&SD.FP_CATG_FP,$FP_CATG_FP)
    do rtrim_nnull (&SD.FP_TRAINEE,$FP_TRAINEE)
    do rtrim_nnull (&SD.FP_TRNE_POSN,$FP_TRNE_POSN)
    do rtrim_nnull (&SD.FP_CATG_LEVEL,$FP_CATG_LEVEL)
    do rtrim_nnull (&SD.FP_CHG_IND,$FP_CHG_IND)
    let $FP_APPL_SAL_DT = &SD.FP_APPL_SAL_DT
    do rtrim_nnull (&SD.FP_ROW_CD,$FP_ROW_CD)
    let $FP_NOMINATION_DT = &SD.FP_NOMINATION_DT
    do rtrim_nnull (&SD.FP_RK_TRIALPD,$FP_RK_TRIALPD)
    let $FP_RK_PD_END_DT = &SD.FP_RK_PD_END_DT
    do rtrim_nnull (&SD.FP_SANCTION,$FP_SANCTION)
    do rtrim_nnull (&SD.FP_DOWN_GRA,$FP_DOWN_GRA)
    let $FP_UPDT_PR_DT = &SD.FP_UPDT_PR_DT
    do rtrim_nnull (&SD.FP_PROM_OK,$FP_PROM_OK)
    do rtrim_nnull (&SD.FP_PROPD_BRK,$FP_PROPD_BRK)
    do rtrim_nnull (&SD.FP_PRO_ACCESS,$FP_PRO_ACCESS)
    do rtrim_nnull (&SD.FP_RETROSPECT,$FP_RETROSPECT)
    do rtrim_nnull (&SD.FP_SETID_RANK,$FP_SETID_RANK)
    do rtrim_nnull (&SD.FP_TBL_CD,$FP_TBL_CD)

END-PROCEDURE Var-Init-SD



!****************************************
!
!   Function    : report
!
!   Description : simulations report
!
!****************************************
BEGIN-PROCEDURE rapport

Let $no_dossier_affichage = To_Char(#no_dossier)
Let $effseq_affichage = To_Char(#effseq)
let $no_ordre = To_char(convtable.fp_ord_nbr(#no_hypothese))


do Get_Field_Information($ReportID, 'GRID_NBR' ,        $GRID_NBR_LBL ,         #DW)
do Get_Field_Information($ReportID, 'EMPLID' ,          $EMPLID_LBL ,           #DW)
do Get_Field_Information($ReportID, 'EMPLRCD' ,         $EMPLRCD_LBL ,          #DW)
do Get_Field_Information($ReportID, 'ACTION' ,          $ACTION_LBL ,           #DW)
do Get_Field_Information($ReportID, 'EFFDT' ,           $EFFDT_LBL ,            #DW)
do Get_Field_Information($ReportID, 'EFFSEQ' ,          $EFFSEQ_LBL ,           #DW)
do Get_Field_Information($ReportID, 'PREV_GRADE' ,      $PREV_GRADE_LBL ,       #DW)
do Get_Field_Information($ReportID, 'PREV_STEP' ,       $PREV_STEP_LBL ,        #DW)
do Get_Field_Information($ReportID, 'ASSUMPTION_NBR' ,  $ASSUMPTION_NBR_LBL ,   #DW)
do Get_Field_Information($ReportID, 'NEW_GRADE' ,       $NEW_GRADE_LBL ,        #DW)
do Get_Field_Information($ReportID, 'NEW_STEP' ,        $NEW_STEP_LBL ,         #DW)
do Get_Field_Information($ReportID, 'STRING1' ,         $STRING1_LBL ,          #DW)

Print '*****'                           (+2,5)

Print $GRID_NBR_LBL                     (+2,1)
Print $fp_conversion_id                 (,+1)

Print $EMPLID_LBL                       (+2,1)
Print $matricule                        (,+1)

Print $EMPLRCD_LBL                      (,25)
Print $no_dossier_affichage             (,+1)

Print $ACTION_LBL                       (+1,1)
Print $action                           (,+1)

Print $EFFDT_LBL                        (,25)
Print $effdt_out                        (,+1)

Print $EFFSEQ_LBL                       (,55)
Print $effseq_affichage                 (,+1)

Print $PREV_GRADE_LBL                   (+1,1)
Print $tempo_rank                       (,+1)

Print $PREV_STEP_LBL                    (,25)
Print $tempo_step                       (,+1)

Print $ASSUMPTION_NBR_LBL               (,55)
Print $no_ordre                         (,+1)

Print $NEW_GRADE_LBL                    (+1,1)
Print $fp_rank_cd                       (,+1)

Print $NEW_STEP_LBL                     (,25)
Print $fp_Step_cd                       (,+1)

Let $p_STRING1_LBL = '*** ' || $STRING1_LBL || ' ***'
Print $p_STRING1_LBL                    (+2,5)

END-PROCEDURE rapport



!***********************************************************************************
!
!   Function    : Sql_Err
!
!   Description : trace error SQL
!                 the $stop_on_error variable is used to determine if process have to be stopped
!
!************************************************************************************
BEGIN-PROCEDURE SQL-On-Error

let $msg = '** ERREUR SQL:' || $sql-statement ||
edit( #SQL-STATUS, '9999999' ) || '/' || '(' || $SQL-On-Error || ')'
display $msg

if ( $stop_on_error = 'Y' )
   stop
end-if

END-PROCEDURE SQL-On-Error



#Include 'fpa315.sqc'       ! Calculate seniorities (FPS)
#include 'stdapi.sqc'       ! Routines to update run status
#Include 'hrrnctl1.sqc'     ! Get run control parameter values
#Include 'hrgetval.sqc'     ! Get values mask routines
#Include 'fprnctl1.sqc'     ! Get run control parameter values (FPS)
#Include 'fpgetval.sqc'     ! Get values mask routines (FPS)
#Include 'hrsecty.sqc'      ! Get SQR Security parameters
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
#Include 'fptestdt.sqc'   ! Routines for date and time formatting (FPS)
#Include 'fpparam.sqc'      ! Routines for  Parameters Tables (FPS)
#include 'curdttim.sqc'     ! Get-Current-DateTime procedure
#Include 'number.sqc'       ! Routines to format numbers
#include 'fpsalary.sqc'     ! Routines for salary (FPS)
#include 'fpjob.sqc'        ! Insert-Fpaeeupdrow procedure (FPS)
