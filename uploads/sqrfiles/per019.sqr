!***********************************
!  PER019:  Terminations Analysis  *
!***********************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/05/24:00:13:05                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689716                                              !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'hrhp01.sqc'   !Printer and page-size initialization


begin-program
   #debug show 'PER019: Begin-Program'
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Init-Report
   !**********Begin incident 554682005 ********
   do Get-Summary
   !**********End incident 554682005 ********



   !*********************************************************************
   !  Set miscellaneous report parameters
   !*********************************************************************
   let $confidential = 'YES'
   let $quote = ''''

   evaluate $date-indicator

   !*********************************************************************
   !  Format EFFDT selection criteria based on ASOFDATE
   !*********************************************************************
   when = '1'
      let $effdt-criteria = ' <= ' || $quote || $asofdate || $quote || ')'
      let $effdt-criteria2 = ' <= ' || $quote || $asofdate || $quote || ')'
      break

   !*********************************************************************
   !  Format EFFDT selection criteria based on FROM/THRU dates
   !*********************************************************************
   when = '2'
      let $effdt-criteria = ' <= ' || $quote || $thrudate || $quote || ')'
      let $effdt-criteria2 = ' BETWEEN ' || $quote || $fromdate || $quote || '
          AND ' || $quote || $thrudate || $quote || ')'
      break

   when-other
      display 'PER019/Error: Invalid Run Control Date Indicator'
      stop quiet

   end-evaluate

   evaluate $reportchoice

   !*********************************************************************
   !  Generate report for the whole company
   !*********************************************************************
   when = '1'
      let $where-clause-co = ' AND C.COMPANY = ' || $quote || $company || $quote
      let $where-clause-co2 = ' AND CC.COMPANY = ' || $quote || $company || $quote
        #debug show 'PER019: $where-clause = ' $where-clause
      do Process-Multi-Estab
      break

   !*********************************************************************
   !  Generate report for a single establishment
   !*********************************************************************
   when = '2'
      do Get-Establishment-Info
      let $where-clause = ' AND C.ESTABID = ' || $quote || $estab || $quote
      let $where-clause2 = ' AND CC.ESTABID = ' || $quote || $estab || $quote
      do Process-Main
      break

   !*********************************************************************
   !  Generate report for a Headquarters Establishment and any other
   !  establishments under its control
   !*********************************************************************
   when = '3'
   !************ Begin incident 554682005 ************
      !let $where-clause-ctl = ' AND E.CTL_ESTABID = ' || $quote || $ctlestabid || $quote
      !let $where-clause-ctl2 = ' AND EE.CTL_ESTABID = ' || $quote || $ctlestabid || $quote
      let $where-clause-ctl = ' AND E1.CTL_ESTABID = ' || $quote || $ctlestabid || $quote
      let $where-clause-ctl2 = ' AND EE1.CTL_ESTABID = ' || $quote || $ctlestabid || $quote
   !************ End incident 554682005 **************
      do Process-Multi-Estab
      break

   !*********************************************************************
   !  Generate report for all Establishments
   !*********************************************************************
   when = '4'
      do Process-Multi-Estab
      break

   when-other
      display 'Report Choice = ' $reportchoice
      display 'PER019/Error: Invalid Run Control Report Choice'
      stop quiet

   end-evaluate

   !********************************************************************
   !  Print End-of-Report message on the very last page
   !********************************************************************
   ALTER-PRINTER
      font=4
      point-size=18

   print '*** End of Report ***' (+3,1) Bold Center

   do Stdapi-Term
end-program


begin-procedure Process-Multi-Estab
   #debug show 'Process-Multi-Estab'
   !**********Begin incident 554682005 ********
      LET $First = 'N'
   !**********End incident 554682005 ********
   let #i = 0
   do Get-Number-Of-Establishments
   !**********Begin incident 554682005 ********
         IF $ReportChoice = '3'
          LET $Estab-Where-summary = 'AND Z1.CTL_ESTABID = ' || $Quote || $CtlEstabID || $Quote
         ELSE
          IF $ReportChoice = '1'
           LET $Estab-Where-summary = 'AND Z.COMPANY = ' || $Quote || $Company || $Quote
          ELSE
           LET $Estab-Where-summary = ''
          END-IF
         END-IF
BEGIN-SELECT
COUNT(*) &summary
               
FROM PS_ESTAB_TBL  Z, PS_REG_REGION_TBL RR, PS_ESTAB_TBL_USA  Z1
WHERE Z.REG_REGION = RR.REG_REGION
AND RR.COUNTRY = 'USA'
AND Z.HQUNIT = 'Y'
AND Z.ESTABID=Z1.ESTABID
AND Z.EFFDT=Z1.EFFDT
[$Estab-Where-summary] 
END-SELECT
      
   move &summary to #summary
   !**********End incident 554682005 ********
   while #i < #count
      let $estab = establishmentids.theestab(#i)
      !**********Begin incident 554682005 ********
BEGIN-SELECT
F.ESTABID
F.HQUNIT
F1.CTL_ESTABID
F.DESCR
F.ADDRESS1
F.ADDRESS2
F.ADDRESS3
F.ADDRESS4
F.NUM1
F.NUM2
F.HOUSE_TYPE
F.CITY
F.COUNTRY
F.STATE
F.POSTAL
F.GEO_CODE
F.IN_CITY_LIMIT
F.REG_REGION
                  
         LET $HQ_Unit = RTRIM(&F.HQUNIT,' ')
         LET $CTL_EStab = RTRIM(&F1.CTL_ESTABID,' ')      
                  
        IF $HQ_Unit = 'Y'
         LET $ctl_estab_id_prev = $ctl_estab_id_this
         LET $ctl_estab_id_this = $CTL_EStab
 

         do assign-values

         LET $CONS_NAME_this = &F.DESCR
         LET $CONS_ADDRESS1_this = &F.ADDRESS1
         LET $CONS_ADDRESS2_this = &F.ADDRESS2
         LET $CONS_ADDRESS3_this = &F.ADDRESS3
         LET $CONS_ADDRESS4_this = &F.ADDRESS4
         LET $CONS_NUM1_this = &F.NUM1
         LET $CONS_NUM2_this = &F.NUM2
         LET $CONS_HOUSE_TYE_this = &F.HOUSE_TYPE
         LET $CONS_CITY_this = &F.CITY
         LET $CONS_COUNTRY_this = &F.COUNTRY
         LET $CONS_STATE_this = &F.STATE
         LET $CONS_POSTAL_this = &F.POSTAL
         LET $CONS_GEO_CODE_this = &F.GEO_CODE
         LET $CONS_IN_CITY_LIMIT_this = &F.IN_CITY_LIMIT
         LET $CONS_REG_REGION_this = &F.REG_REGION
         IF ($ctl_estab_id_this <> $ctl_estab_id_prev AND $First <> 'N' AND $Print_Summary = 'Y')
          LET $Consolidated = 'Y'  
          do Create-Report_cons
          do Reset-Consolidated-Array
          LET $Consolidated = 'N'
         ELSE
          LET $Consolidated = 'N'
         END-IF 
        END-IF 
      !**********End incident 554682005 ********
      do Get-Establishment-Info
      let $where-clause = $where-clause-ctl || $where-clause-co || ' AND C.ESTABID = ' || $quote || $estab || $quote
      let $where-clause2 = $where-clause-ctl2 || $where-clause-co2 || ' AND CC.ESTABID = ' || $quote || $estab || $quote
      do Process-Main
      !**********Begin incident 554682005 ********
FROM PS_ESTAB_TBL F, PS_ESTAB_TBL_USA F1
WHERE F.ESTABID = $estab
AND F.ESTABID=F1.ESTABID
AND F.EFFDT=F1.EFFDT
END-SELECT   
      
        LET $First = 'Y'
      !**********End incident 554682005 ********
      add 1 to #i
   end-while
   !**********Begin incident 554682005 ********
    IF (#i = #count AND $Print_Summary = 'Y')
     do assign-values
     LET $Consolidated = 'Y'  
     do Create-Report_cons
     do Reset-Consolidated-Array
    END-IF
   !**********End incident 554682005 ********
end-procedure Process-Multi-Estab

!**********Begin incident 554682005 ********
begin-procedure assign-values
    LET $NAME = $CONS_NAME_this
    LET $ADDRESS1 = $CONS_ADDRESS1_this
    LET $ADDRESS2 = $CONS_ADDRESS2_this
    LET $ADDRESS3 = $CONS_ADDRESS3_this
    LET $ADDRESS4 = $CONS_ADDRESS4_this
    LET $NUM1 = $CONS_NUM1_this
    LET $NUM2 = $CONS_NUM2_this
    LET $HOUSE_TYE = $CONS_HOUSE_TYE_this
    LET $CITY = $CONS_CITY_this
    LET $COUNTRY = $CONS_COUNTRY_this
    LET $STATE = $CONS_STATE_this
    LET $POSTAL = $CONS_POSTAL_this
    LET $GEO_CODE = $CONS_GEO_CODE_this
    LET $IN_CITY_LIMIT = $CONS_IN_CITY_LIMIT_this
    LET $REG_REGION = $CONS_REG_REGION_this
end-procedure assign-values
!**********End incident 554682005 ********

begin-procedure Print-Column-Headings
  #debug show 'PER019: Print-Column-Headings'
  ALTER-PRINTER
        font=4
      point-size=13

print $SubHead1                                 (+4,3)bold

  ALTER-PRINTER
        font=4
      point-size=10
!***Begin Resolution - 599786***!
!print '  Current'       (+1,21)
print '    Total'       (+1,21)
!***End Resolution - 599786***!
print '% of'            (,33)
print 'Terminated'      (,43)
print '% of'            (,54)
print 'Termination'     (,64)
print 'Population'      (+1,21)
print 'Total'           (,33)
print 'Population'      (,43)
print 'Total'           (,54)
print '      Rate'      (,64)
print $SubHead2         (0,3,20)


  graphic (+1,3,77) horz-line 7
end-procedure Print-Column-Headings


begin-procedure Init-Report

  #debug show 'PER019: Init-Report'
  move 'PER019' to $ReportID
  move 'Terminations Analysis' to $ReportTitle
  show 'PER019: Start Program ' $reportid ' (' $ReportTitle ')'

  do Init-Array

  do Stdapi-Init
  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  else
    do Select-Parameters
  end-if
last1:
end-procedure

begin-procedure Get-Values
   #debug show 'PER019: Get-Values'
   do Get-Date-Indicator
   do Get-As-of-Date
   do Get-From-Thru-Date
   do Get-Company
   do Get-Establishment
   do Get-CTL_ESTABID
   do Get-Run-Scope
end-procedure Get-Values

begin-procedure Init-Array
  create-array name=Counts size=31 field=Count:number:2 field=Label:char
  create-array name=Totals size=3  field=Total:number:2
  put '   Less than 21'  into Counts(0)  Label
  put '          21-25'  into Counts(1)  Label
  put '          26-30'  into Counts(2)  Label
  put '          31-35'  into Counts(3)  Label
  put '          36-40'  into Counts(4)  Label
  put '          41-45'  into Counts(5)  Label
  put '          46-50'  into Counts(6)  Label
  put '          51-55'  into Counts(7)  Label
  put '          56-60'  into Counts(8)  Label
  put '          61-65'  into Counts(9)  Label
  put 'Greater than 65'  into Counts(10) Label

  put '    Less than 1'  into Counts(11) Label
  put '              1'  into Counts(12) Label
  put '              2'  into Counts(13) Label
  put '           3- 5'  into Counts(14) Label
  put '           6-10'  into Counts(15) Label
  put '          11-15'  into Counts(16) Label
  put 'Greater than 15'  into Counts(17) Label

 !****************Begin Resolution - 571940****************
 !put ' M    Caucasian'  into Counts(21) Label
  put ' M    White'      into Counts(21) Label
 !****************End Resolution   - 571940****************  
  put ' M    Black'      into Counts(22) Label
  put ' M    Hispanic'   into Counts(23) Label
  put ' M    Asian/Pac'  into Counts(24) Label
  put ' M    Am. Indian' into Counts(25) Label
 !****************Begin Resolution - 571940****************  
 !put ' F    Caucasian'  into Counts(26) Label
  put ' F    White'      into Counts(26) Label
 !****************End Resolution   - 571940****************  
  put ' F    Black'      into Counts(27) Label
  put ' F    Hispanic'   into Counts(28) Label
  put ' F    Asian/Pac'  into Counts(29) Label
  put ' F    Am. Indian' into Counts(30) Label
  
  
  !**********Begin incident 554682005 ********
  create-array name=Cons_Counts size=31 field=Count:number:2 field=Label:char
  create-array name=Cons_Totals size=3  field=Total:number:2
  put '   Less than 21'  into Cons_Counts(0)  Label
  put '          21-25'  into Cons_Counts(1)  Label
  put '          26-30'  into Cons_Counts(2)  Label
  put '          31-35'  into Cons_Counts(3)  Label
  put '          36-40'  into Cons_Counts(4)  Label
  put '          41-45'  into Cons_Counts(5)  Label
  put '          46-50'  into Cons_Counts(6)  Label
  put '          51-55'  into Cons_Counts(7)  Label
  put '          56-60'  into Cons_Counts(8)  Label
  put '          61-65'  into Cons_Counts(9)  Label
  put 'Greater than 65'  into Cons_Counts(10) Label
      
  put '    Less than 1'  into Cons_Counts(11) Label
  put '              1'  into Cons_Counts(12) Label
  put '              2'  into Cons_Counts(13) Label
  put '           3- 5'  into Cons_Counts(14) Label
  put '           6-10'  into Cons_Counts(15) Label
  put '          11-15'  into Cons_Counts(16) Label
  put 'Greater than 15'  into Cons_Counts(17) Label
         
  put ' M    White'      into Cons_Counts(21) Label
  put ' M    Black'      into Cons_Counts(22) Label
  put ' M    Hispanic'   into Cons_Counts(23) Label
  put ' M    Asian/Pac'  into Cons_Counts(24) Label
  put ' M    Am. Indian' into Cons_Counts(25) Label
  put ' F    White'      into Cons_Counts(26) Label
  put ' F    Black'      into Cons_Counts(27) Label
  put ' F    Hispanic'   into Cons_Counts(28) Label
  put ' F    Asian/Pac'  into Cons_Counts(29) Label
  put ' F    Am. Indian' into Cons_Counts(30) Label  
  !**********End incident 554682005 ********
end-procedure Init-Array

begin-procedure Process-Main

  #debug show 'PER019: Process-Main' ' $effdt-criteria = ' $effdt-criteria ' $where-clause = ' $where-clause
  let $initial-estab-break      = 'Y'
  let #reccnt = 0

  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($ThruDate, $Thru_YMD, {DEFYMD}, '', '')
  do Retrieve-Rows
  do Create-Report
  do Reset-Array
end-procedure Process-Main

begin-procedure Retrieve-Rows
begin-SELECT
C.ESTABID       () On-Break Level=1 Print=Never
! ***************** Begin Resolution - 306130 ******************
!A.EMPLID        () On-Break Level=2 procedure=Clear-Duplicates  Print=Never
A.EMPLID        () On-Break Level=2 before=Clear-Duplicates  Print=Never
! ***************** End Resolution - 306130   ******************
  move &A.Emplid          to $Emplida
PDE.SEX
ETH.ETHNIC_GROUP
A.BIRTHDATE
B.HIRE_DT
C.EMPL_STATUS
C.EFFDT

! ***************** Begin Resolution - 577724 ******************
  if (#dup_term = 0)

    let #dup_term = 1

    move '1' to $Year4
    move '-' to $DDelimiter
    do Format-DateTime(&C.EffDt, $Eff_YMD, {DEFYMD}, '', '')

! ***************** End Resolution - 577724 ******************
    if not IsNULL(&A.BirthDate)
      move '1' to $Year4
      move '-' to $DDelimiter
      do Format-DateTime(&A.BirthDate, $Birth_YMD, {DEFYMD}, '', '')
! ***************** Begin Resolution - 577724 ******************
     !do Years-calc($Birth_YMD, $Thru_YMD, #Age)
      do Years-calc($Birth_YMD, $Eff_YMD, #Age)
! ***************** End Resolution - 577724 ******************
    end-if

    if not IsNULL(&B.Hire_Dt)
      move '1' to $Year4
      move '-' to $DDelimiter
      do Format-DateTime(&B.Hire_Dt, $Hire_YMD, {DEFYMD}, '', '')
! ***************** Begin Resolution - 577724 ******************
     !do Years-calc($Hire_YMD, $Thru_YMD, #Service)
      do Years-calc($Hire_YMD, $Eff_YMD, #Service)
! ***************** End Resolution - 577724 ******************
    end-if

    move &PDE.Sex          to $Sex
    move &ETH.Ethnic_Group to $EthnicGroup
    move &A.BirthDate    to $BirthDate
    move 0               to #col

    do Analyze-Row
  
! ***************** Begin Resolution - 577724 ******************
  end-if
! ***************** End Resolution - 577724 ******************

FROM  PS_PERSON A,
      PS_EMPLOYMENT B,
      PS_DIVERS_ETHNIC DVR,
      PS_ETHNIC_GRP_TBL ETH,
      PS_JOB C,
      PS_ESTAB_TBL E,
      PS_ESTAB_TBL_USA E1,               !************ incident 554682005
      PS_PERS_DATA_EFFDT PDE,
! **************** Begin incident 1443318000/1619655001 *****************
      PS_PERS_SRCH_GBL GBL
WHERE GBL.OPRID=$prcs_oprid
  AND A.EMPLID=GBL.EMPLID
  AND B.EMPL_RCD=GBL.EMPL_RCD
! **************** End incident 1443318000/1619655001 *******************
  AND A.EMPLID = B.EMPLID
  AND DVR.EMPLID = A.EMPLID
  AND C.EMPLID = A.EMPLID
  AND PDE.EMPLID = A.EMPLID
! ***************** Begin Resolution - 306130 ******************
  AND B.EMPL_RCD = C.EMPL_RCD
! ***************** End Resolution   - 306130 ******************
  AND C.ESTABID = E.ESTABID
  AND C.PER_ORG = 'EMP'
  AND C.JOB_INDICATOR = 'P'

  AND C.EFFDT = (SELECT MAX(C3.EFFDT)
                        FROM PS_JOB C3
                        WHERE C3.EMPLID = C.EMPLID
                        AND C3.EMPL_RCD = C.EMPL_RCD
! ***************** Begin Resolution - 577724 ******************
!                       AND C3.EFFDT [$effdt-criteria]
!******************* Begin Resolution - 617598 *****************
                        !AND C3.EFFDT [$effdt-criteria2]
                        AND ((C3.EFFDT [$effdt-criteria2] OR C3.EMPL_STATUS IN ('A','L','P','S','W') AND C3.EFFDT [$effdt-criteria])
!******************* End Resolution - 617598 *****************                        
! ***************** End Resolution - 577724 ******************
  AND C.EFFSEQ = (SELECT MAX(C2.EFFSEQ)
                        FROM PS_JOB C2
                        WHERE C2.EMPLID = C.EMPLID
                        AND C2.EMPL_RCD = C.EMPL_RCD
                        AND C2.EFFDT = C.EFFDT)
                        
  AND PDE.EFFDT = (SELECT MAX(PDE2.EFFDT)
                        FROM PS_PERS_DATA_EFFDT PDE2
                        WHERE PDE2.EMPLID = PDE.EMPLID
                        AND PDE2.EFFDT [$effdt-criteria]
                          
  AND DVR.PRIMARY_INDICATOR = 'Y'
  AND DVR.SETID = ETH.SETID
  AND DVR.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD
  
  AND ETH.EFFDT = (SELECT MAX(E2.EFFDT)
                        FROM PS_ETHNIC_GRP_TBL E2
                        WHERE E2.SETID = ETH.SETID
                        AND E2.ETHNIC_GRP_CD = ETH.ETHNIC_GRP_CD
                        AND E2.EFFDT [$effdt-criteria]
                          
  [$where-clause]
!**********Begin incident 554682005 ********
AND E.ESTABID=E1.ESTABID
AND E.EFFDT=E1.EFFDT
!**********End incident 554682005 ********
  
Order by C.ESTABID,A.EMPLID,C.EFFDT
end-SELECT


begin-SELECT
CC.ESTABID () On-Break Level=1  Print=Never
! ***************** Begin Resolution - 306130 ******************
!AA.EMPLID () On-Break Level=2 procedure=Clear-Duplicates        Print=Never
AA.EMPLID () On-Break Level=2 before=Clear-Duplicates        Print=Never
 !move &A.Emplid           to $Emplidaa
  move &AA.Emplid          to $Emplidaa
! ***************** End Resolution - 306130 ******************
PDEE.SEX
ETHH.ETHNIC_GROUP
AA.BIRTHDATE
BB.HIRE_DT
CC.EFFDT

  if (#dup_term = 0)

    let #dup_term = 1

    move '1' to $Year4
    move '-' to $DDelimiter
    do Format-DateTime(&CC.EffDt, $Eff_YMD, {DEFYMD}, '', '')

    if not IsNULL(&AA.BirthDate)
      move '1' to $Year4
      move '-' to $DDelimiter
      do Format-DateTime(&AA.BirthDate, $Birth_YMD, {DEFYMD}, '', '')
      do Years-calc($Birth_YMD, $Eff_YMD, #Age)
    end-if

    if not IsNULL(&BB.Hire_Dt)
      move '1' to $Year4
      move '-' to $DDelimiter
      do Format-DateTime(&BB.Hire_Dt, $Hire_YMD, {DEFYMD}, '', '')
      do Years-calc($Hire_YMD, $Eff_YMD, #Service)
    end-if

  ! ***************** Begin Resolution - 306130 ******************
  ! move &PDE.Sex           to $Sex
    move &PDEE.Sex          to $Sex
  ! ***************** End Resolution   - 306130 ******************
    move &ETHH.Ethnic_Group to $EthnicGroup
    move &AA.BirthDate    to $BirthDate
    move 1               to #col

    do Analyze-Row

  end-if

FROM  PS_PERSON AA,
      PS_EMPLOYMENT BB,
      PS_JOB CC,
      PS_DIVERS_ETHNIC DVRR,
      PS_ETHNIC_GRP_TBL ETHH,
      PS_ESTAB_TBL EE,
      PS_ESTAB_TBL_USA EE1,                      !************ incident 554682005
      PS_PERS_DATA_EFFDT PDEE,
! **************** Begin incident 1443318000/1619655001 *****************
      PS_PERS_SRCH_GBL GBLT
WHERE GBLT.OPRID=$prcs_oprid
  AND AA.EMPLID=GBLT.EMPLID 
  AND BB.EMPL_RCD=GBLT.EMPL_RCD
! **************** End incident 1443318000/1619655001 *******************
  AND AA.EMPLID = BB.EMPLID
  AND CC.PER_ORG = 'EMP'
  AND CC.EMPL_STATUS NOT IN ('X','V')
  AND BB.EMPLID = CC.EMPLID
  AND CC.EMPLID = DVRR.EMPLID
  AND DVRR.EMPLID = AA.EMPLID
  AND PDEE.EMPLID = AA.EMPLID
  AND CC.ESTABID = EE.ESTABID
  AND BB.EMPL_RCD = CC.EMPL_RCD
  AND CC.ACTION IN ('TER','TWP','TWB')
  AND CC.JOB_INDICATOR = 'P'

  AND CC.EFFDT = (SELECT MAX(CC3.EFFDT)
                        FROM PS_JOB CC3
                        WHERE CC3.EMPLID  = CC.EMPLID
                        AND CC3.EMPL_RCD = CC.EMPL_RCD
                        AND CC3.EFFDT [$effdt-criteria2]

  AND CC.EFFSEQ = (SELECT MAX(CC2.EFFSEQ)
                        FROM PS_JOB CC2
                        WHERE CC2.EMPLID = CC.EMPLID
                        AND CC2.EMPL_RCD = CC.EMPL_RCD
                                   AND CC2.EFFDT = CC.EFFDT)
  AND PDEE.EFFDT = (SELECT MAX(PDEE2.EFFDT)
                        FROM PS_PERS_DATA_EFFDT PDEE2
                        WHERE PDEE2.EMPLID = PDEE.EMPLID
  ! ***************** Begin Resolution - 306130 ******************
                       !AND PDEE2.EFFDT [$effdt-criteria2]
                        AND PDEE2.EFFDT [$effdt-criteria]
  ! ***************** End Resolution   - 306130 ******************


  AND DVRR.PRIMARY_INDICATOR = 'Y'
  AND DVRR.SETID = ETHH.SETID
  AND DVRR.ETHNIC_GRP_CD = ETHH.ETHNIC_GRP_CD
  
  AND ETHH.EFFDT = (SELECT MAX(E22.EFFDT)
                        FROM PS_ETHNIC_GRP_TBL E22
                        WHERE E22.SETID = ETHH.SETID
                        AND E22.ETHNIC_GRP_CD = ETHH.ETHNIC_GRP_CD
  ! ***************** Begin Resolution - 306130 ******************
                       !AND E22.EFFDT [$effdt-criteria2]
                        AND E22.EFFDT [$effdt-criteria]
  ! ***************** End Resolution   - 306130 ******************
                      
   [$where-clause2]
!**********Begin incident 554682005 ********
AND EE.ESTABID=EE1.ESTABID
AND EE.EFFDT=EE1.EFFDT
!**********End incident 554682005 ********


Order by CC.ESTABID,AA.EMPLID,CC.EFFDT
end-SELECT

end-procedure


!***********************************************************************
!  PROC  Clear-Duplicates
!***********************************************************************
begin-procedure Clear-Duplicates
  let #dup_term = 0
end-procedure

!***********************************************************************
!  PROC Analyze Row
!***********************************************************************
begin-procedure Analyze-Row
 if not IsNULL($BirthDate)
    if #Age > 65
      move 10 to #row
    else
       if #Age < 16
         move 0 to #row
    else
      subtract 16 from #Age
      divide 5 into #Age
      move #Age to #row
       end-if
    end-if
    array-add 1 to Counts(#row) Count(#col)
    array-add 1 to Totals(0)    Total(#col)
    !**********Begin incident 554682005 ********
        array-add 1 to Cons_Counts(#row) Count(#col)
        array-add 1 to Cons_Totals(0)    Total(#col)
    !**********End incident 554682005 ********
  end-if

  if #Service >= 16
    array-add 1 to Counts(17) count(#col)
    !**********Begin incident 554682005 ********
        array-add 1 to Cons_Counts(17) count(#col)
    !**********End incident 554682005 ********
  else
  if #Service >= 11
    array-add 1 to Counts(16) count(#col)
    !**********Begin incident 554682005 ********
        array-add 1 to Cons_Counts(16) count(#col)
    !**********End incident 554682005 ********
  else
  if #Service >= 6
    array-add 1 to Counts(15) count(#col)
    !**********Begin incident 554682005 ********
        array-add 1 to Cons_Counts(15) count(#col)
    !**********End incident 554682005 ********
  else
  if #Service >= 3
    array-add 1 to Counts(14) count(#col)
    !**********Begin incident 554682005 ********
        array-add 1 to Cons_Counts(14) count(#col)
    !**********End incident 554682005 ********
  else
  if #Service >= 2
    array-add 1 to Counts(13) count(#col)
    !**********Begin incident 554682005 ********
        array-add 1 to Cons_Counts(13) count(#col)
    !**********End incident 554682005 ********
  else
  if #Service >= 1
    array-add 1 to Counts(12) count(#col)
    !**********Begin incident 554682005 ********
        array-add 1 to Cons_Counts(12) count(#col)
    !**********End incident 554682005 ********
  else
    array-add 1 to Counts(11) count(#col)
    !**********Begin incident 554682005 ********
        array-add 1 to Cons_Counts(11) count(#col)
    !**********End incident 554682005 ********
  end-if
  end-if
  end-if
  end-if
  end-if
  end-if
  array-add 1 to Totals(1) Total(#col)
  !**********Begin incident 554682005 ********
    array-add 1 to Cons_Totals(1) Total(#col)
  !**********End incident 554682005 ********
  move 0 to #Age

  !**************************
  !Analyze Sex & Ethnic Group
  !**************************
  move 0 to #EEOcol
  evaluate $Sex
  when = 'U'    !Unknown
  break
  when = 'M'
  when = 'F'
    evaluate $EthnicGroup
   !****************Begin Resolution - 571940****************  
   !when = '1' !Caucasian
    when = '1' !White
   !****************End Resolution   - 571940****************      
      move 1 to #EEOcol
      break
    when = '2'  !Black
      move 2 to #EEOcol
      break
    when = '3'  !Hispanic
      move 3 to #EEOcol
      break
    when = '4'  !Asian
      move 4 to #EEOcol
      break
    when = '7'  !Pacific Islander
      move 4 to #EEOcol
      break
    when = '5'  !American Indian/Alaskan Native
      move 5 to #EEOcol
      break
    when = '6'      !Not Applicable
    when-other
      break
    end-evaluate
    break
  end-evaluate

  if $Sex = 'F'
    if $EthnicGroup <> '6'
      add 5 to #EEOcol
    end-if
  else
  end-if


  move #EEOcol to #row
  add 20 to #row
  array-add 1 to Counts(#row) Count(#col)
  array-add 1 to Totals(2)    Total(#col)
  !**********Begin incident 554682005 ********
    array-add 1 to Cons_Counts(#row) Count(#col)
    array-add 1 to Cons_Totals(2)    Total(#col)
  !**********End incident 554682005 ********
end-procedure

!***********************************************************************
!  PROC Create-Report
!***********************************************************************
begin-procedure Create-Report
  move 'By Age'         to $SubHead1                                            !HP99999
  move '           Age' to $SubHead2                                            !HP99999
  move 0  to #category
  move 0  to #startRow
  move 10 to #endRow
  do Print-Category
  move 'By Years of Service' to $SubHead1                                               !HP99999
  move 'Years of Service'    to $SubHead2                                               !HP99999
  move 1  to #category
  move 11 to #startRow
  move 17 to #endRow
  do Print-Category
  move 'By Gender and Ethnic Group' to $SubHead1                        !HP99999
  move 'Gen  Ethnic Group'          to $SubHead2                        !HP99999
  move 2  to #category
  move 21 to #startRow
  move 30 to #endRow
  do Print-Category
end-procedure

!**********Begin incident 554682005 ********
begin-procedure Create-Report_cons
  move 'By Age'         to $SubHead1                                            !HP99999
  move '           Age' to $SubHead2                                            !HP99999
  move 0  to #category
  move 0  to #startRow
  move 10 to #endRow
  do print_consolidated
  move 'By Years of Service' to $SubHead1                                               !HP99999
  move 'Years of Service'    to $SubHead2                                               !HP99999
  move 1  to #category
  move 11 to #startRow
  move 17 to #endRow
  do print_consolidated
  move 'By Gender and Ethnic Group' to $SubHead1                        !HP99999
  move 'Gen  Ethnic Group'          to $SubHead2                        !HP99999
  move 2  to #category
  move 21 to #startRow
  move 30 to #endRow
  do print_consolidated
end-procedure
!**********End incident 554682005 ********

begin-procedure Print-Category
  do Print-column-Headings
  get #TotalActive from Totals(#category) Total(0)
  get #TotalTerm   from Totals(#category) Total(1)
  move #startRow to #k
  let #counter = 0
  while #k <= #endRow

    let #counter = #counter + 1
    let #remainder = mod(#counter, 2)
    if #remainder  = 0
       graphic (+1,3,77) box 1 0 15
    else
       print ' '            (+1)
    end-if


    get $LineName from Counts(#k) Label
    get #Active   from Counts(#k) Count(0)
    get #Term     from Counts(#k) Count(1)
    print $LineName (0,3)
    do Format-Number(#Active, $out, '999,999')
    print $out   (0,22)
    do Format-Number(#Term, $out, '999,999')
    print $out     (0,43)
    multiply 100 times #Term
    move #Term to #TermRate
    divide #Active into #TermRate on-error=zero
    multiply 100 times #Active
    divide #TotalActive into #Active on-error=zero
    divide #TotalTerm   into #Term   on-error=zero
    do Format-Number(#TermRate, $out, '999.9')
    print $out (0,66)
    do Format-Number(#Active, $out, '999.9')
    print $out   (0,33)
    do Format-Number(#Term, $out, '999.9')
    print $out     (0,54)
    add 1 to #k
  end-while
  !**********Begin incident 554682005 ********
    if $Print_Summary = 'Y'
     if #i <> #count
      and #k = 31
      and $reportchoice <> '2'
      new-page
     end-if
    else 
     if #i <> #count - 1
      and #k = 31
      and $reportchoice <> '2'
      new-page
     end-if
    end-if
    !if #i <> #count - 1
    !  and #k = 31
    !  and $reportchoice <> '2'
    !  new-page
    !end-if
  !**********End incident 554682005 ********
end-procedure

!**********Begin incident 554682005 ********
begin-procedure print_consolidated
  do Print-column-Headings
  get #TotalActive from Cons_Totals(#category) Total(0)
  get #TotalTerm   from Cons_Totals(#category) Total(1)
  move #startRow to #k
  let #counter = 0
  while #k <= #endRow

    let #counter = #counter + 1
    let #remainder = mod(#counter, 2)
    if #remainder  = 0
       graphic (+1,3,77) box 1 0 15
    else
       print ' '            (+1)
    end-if


    get $LineName from Cons_Counts(#k) Label
    get #Active   from Cons_Counts(#k) Count(0)
    get #Term     from Cons_Counts(#k) Count(1)        
    print $LineName (0,3)
    do Format-Number(#Active, $out, '999,999')
    print $out   (0,22)
    do Format-Number(#Term, $out, '999,999')
    print $out     (0,43)
    multiply 100 times #Term
    move #Term to #TermRate
    divide #Active into #TermRate on-error=zero
    multiply 100 times #Active
    divide #TotalActive into #Active on-error=zero
    divide #TotalTerm   into #Term   on-error=zero
    do Format-Number(#TermRate, $out, '999.9')
    print $out (0,66)
    do Format-Number(#Active, $out, '999.9')
    print $out   (0,33)
    do Format-Number(#Term, $out, '999.9')
    print $out     (0,54)
    add 1 to #k
  end-while
  if #i <> #count
   and #k = 31
   and $reportchoice <> '2'
   new-page
  end-if  
end-procedure
!**********End incident 554682005 ********

!***********************************************************************
!  PROC Reset Array Counts and Totals
!***********************************************************************

begin-procedure Reset-Array

move 0 to #row            !Reset array
move 0 to #row2

while #row <= 30
    put 0 into Counts(#row) Count(0)
    put 0 into Counts(#row) Count(1)
    add 1 to #row
end-while

while #row2 <= 2
    put 0 into Totals(#row2) Total(0)
    put 0 into Totals(#row2) Total(1)
    add 1 to #row2
end-while

end-procedure Reset-Array


!**********Begin incident 554682005 ********
!----------------------------------------------------------------------
!---------Reset-Consolidated-Array-------------------------------------
!----------------------------------------------------------------------
! Resets consolidated arrays
!----------------------------------------------------------------------
Begin-Procedure Reset-Consolidated-Array
move 0 to #row            !Reset consolidated array
move 0 to #row2

while #row <= 30
    put 0 into Cons_Counts(#row) Count(0)
    put 0 into Cons_Counts(#row) Count(1)
    add 1 to #row
end-while

while #row2 <= 2
    put 0 into Cons_Totals(#row2) Total(0)
    put 0 into Cons_Totals(#row2) Total(1)
    add 1 to #row2
end-while

End-Procedure Reset-Consolidated-Array
!**********End incident 554682005 ********


!**************************************************************************
! years-calc
!**************************************************************************
begin-procedure years-calc($dtu_date1, $dtu_date2, :#dtu_years)

    declare-variable
        date    $wkDate1
        date    $wkDate2
        integer #dtu_years
    end-declare

    let $wkDate1    = strtodate($dtu_date1,{DTUDateFormat})
    let $wkDate2    = strtodate($dtu_date2,{DTUDateFormat})
    let #dtu_years  = trunc(datediff($wkDate2,$wkDate1,'year'),0)

end-procedure

#include 'stdapi.sqc'    !Routine to update run status
#include 'rgrnctl1.sqc'  !Get run control parameter values
#include 'rggetval.sqc'  !Get values mask routines
#include 'regutils.sqc'  !Get Company/Establishment data

#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
