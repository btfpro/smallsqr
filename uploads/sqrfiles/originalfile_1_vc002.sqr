!***********************************************************************
!  VC002:  Variable Compensation - Budget Report                       *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:50:39                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
!                                                                      *
! HP99999       Release 8                                              *
!***********************************************************************

#include 'setenv.sqc'    !Set environment

#define GB_GROUP_TBL
#define VC_COMP_JOB_VW
#define VC_PLAN_TBL
#define VC_PAYFORM_TBL

#Include 'rellang.sqc'

Begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report

  if $start-error <> 'Y'
    do Report
  end-if
  do Stdapi-Term
  do Reset
end-report

!*********************************************************************
begin-procedure Init-Report
!*********************************************************************

  move 'VCREPS' to $ReportID
  move 'Budget Report' to $ReportTitle
  display $ReportTitle
  display ' '
  do Stdapi-init
  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.

  display $reportid
  display 'lang - '
  display $language_cd

  if $prcs_process_instance = ''
     display 'This process cannot be run outside the Process scheduler'
     let $start_error = 'Y'
  else
     let $start_error = 'N'
     do Security-Param
     do Select-Parameters
  end-if
  
end-procedure

!*********************************************************************
begin-procedure select-parameters
!*********************************************************************

BEGIN-SELECT
A.OPRID
A.RUN_CNTL_ID
A.VC_PLAN_ID
A.VC_PAYOUT_PRD_ID
A.PRD_END_DT
A.TREE_NAME
A.VC_TREE_DT
A.VC_REPORT_TYPE
A.SCORE
A.VC_ORG_PLAN_WEIGHT
A.VC_GRP_PLAN_WEIGHT
A.VC_IND_PLAN_WEIGHT
A.VC_PLAN_MEM_CRIT
A.VC_GOAL_TYPE


  move &A.PRD_END_DT to $prd_end_dt
  do Format-DateTime($prd_end_dt, $prd_end_dt, {DEFYMD}, '', '')

  if rtrim(&A.VC_PLAN_MEM_CRIT,' ') = 'E'
     let $sec_from = ', PS_FAST_SQR_SEC_VW SCRTY'
     let $sec_where = $SecurityClause || ' AND BR.EMPLID = SCRTY.EMPLID AND BR.EMPL_RCD = SCRTY.EMPL_RCD'
     let $sec_list = '''NOGROUP'''
  else
     let $sec_from = ',PS_GB_GROUP_TBL    GT, PS_GB_SECGRPOPR_TB GS'
     let $sec_where = 'AND BR.GB_GROUP_ID = GT.GB_GROUP_ID AND GT.EFFDT =
                        (SELECT MAX(G2.EFFDT) FROM PS_GB_GROUP_TBL G2
                        Where G2.GB_GROUP_ID = GT.GB_GROUP_ID AND
                              G2.EFFDT <= '''||&A.PRD_END_DT||''''||')
                       AND GT.GB_GROUP_ID = GS.GB_GROUP_ID AND GS.GB_OPRID = '''||$prcs_oprid||''''
     let $sec_list = 'GT.DESCR'
  end-if

  let #org_perc = &A.VC_ORG_PLAN_WEIGHT
  let #grp_perc = &A.VC_GRP_PLAN_WEIGHT
  let #ind_perc = &A.VC_IND_PLAN_WEIGHT

  do getvaluation

FROM PS_RC_VC_REPORTS A
WHERE A.OPRID       = $prcs_oprid and
      A.RUN_CNTL_ID = $prcs_run_cntl_id
end-select

  if &A.VC_REPORT_TYPE = 'D'
    let $reportname = $reportname||' - '||$Detail
  else
   let $reportname = $reportname||' - '||$Summary
  end-if
end-procedure

!**************************************************************************
!    Report procedure
!**************************************************************************

begin-procedure Report
 Position (1,1)
 Move 0 To #group_award
 Move 0 To #total_award
 MOVE 0 To #group_min
 move 0 To #total_min
 move 0 To #total_max
 move 0 To #group_max
 move 0 To #group_carryover
 move 0 To #total_carryover
 move 0 To #group_units
 move 0 To #total_units
 let $init_group = ''

!=================================================
display &A.VC_PLAN_ID
display &A.VC_PAYOUT_PRD_ID
display &A.PRD_END_DT
display $prd_end_dt
display $sec_from
display $sec_where
display $SecurityClause

!=================================================

Begin-Select
BR.GB_GROUP_ID
BR.VC_PLAN_ID
VT.DESCR50
BR.VC_PAYOUT_PRD_ID
BR.VC_AWARD_VALUE
BR.VC_MAXIMUM_VALUE
BR.VC_MATRIX_VALUE
BR.VC_MINIMUM_VALUE
BR.EMPLID
BR.EMPL_RCD
VT.CURRENCY_CD
VT.VC_PLAN_MEM_CRIT
VT.VC_GOAL_TYPE
PD.NAME
J.ANNUAL_RT
J.JOBCODE
J.DESCRSHORT
VE.VC_ORG_PLAN_WEIGHT
VE.VC_GRP_PLAN_WEIGHT
VE.VC_IND_PLAN_WEIGHT
[$sec_list] &GT_DESCR=char
PF.VC_PAYFORMULA_ID
PF.DESCRSHORT

  do getrellang

  do getcarryover

  let #org_plan_weight = &VE.VC_ORG_PLAN_WEIGHT
  let #ind_plan_weight = &VE.VC_IND_PLAN_WEIGHT
  let #grp_plan_weight = &VE.VC_GRP_PLAN_WEIGHT

  let #perf_factor = 1
  if rtrim(&VT.VC_GOAL_TYPE,' ') = 'G'
    let #perf_factor = ((#ORG_PLAN_WEIGHT/100)*(#org_perc/100))+((#GRP_PLAN_WEIGHT/100)*(#grp_perc/100))+((#IND_PLAN_WEIGHT/100)*(#ind_perc/100))
  end-if

  let #matrix = &BR.VC_MATRIX_VALUE
  let #award = &BR.VC_AWARD_VALUE
  let #min = &BR.VC_MINIMUM_VALUE
  let #max = &BR.VC_MAXIMUM_VALUE

  if &VV.VC_VALUATION_ID <> ''
    if &VT.VC_GOAL_TYPE = 'M'
      let #vc_award_value   = #matrix * &VV.VC_VALUE_AMOUNT
     else
      let #vc_award_value   = #award * &VV.VC_VALUE_AMOUNT * #perf_factor
    end-if
    let #vc_award_min       = #min * &VV.VC_VALUE_AMOUNT * #perf_factor
    let #vc_award_max       = #max * &VV.VC_VALUE_AMOUNT * #perf_factor
    let #vc_actual_awd_unit = #award
  else
    if &VT.VC_GOAL_TYPE = 'M'
      let #vc_award_value   = #matrix
    else
      let #vc_award_value   = #award * #perf_factor
    end-if
    let #vc_award_min       = #min * #perf_factor
    let #vc_award_max       = #max * #perf_factor
    let #vc_actual_awd_unit = 0
  end-if

  let #group_award     = #group_award     + #vc_award_value
  let #total_award     = #total_award     + #vc_award_value

  let #group_min       = #group_min     + #vc_award_min
  let #total_min       = #total_min     + #vc_award_min

  let #group_max       = #group_max     + #vc_award_max
  let #total_max       = #total_max     + #vc_award_max

  let #group_carryover = #group_carryover + #carryover
  let #total_carryover = #total_carryover + #carryover

  let #group_units     = #group_units     + #vc_actual_awd_unit
  let #total_units     = #total_units     + #vc_actual_awd_unit

  if &BR.GB_GROUP_ID <> $init_group
     if $init_group <> ''
        if &A.VC_REPORT_TYPE = 'D'
          position (+1,)
          display $total_group
          Print $total_group (,59)
        end-if
        Print #group_award (,140) edit 999999999999.999999
        Print #group_min (,80) edit 999999999999.999999
        Print #group_max (,100) edit 999999999999.999999
        Print #group_carryover (,120) edit 999999999999.999999
        if &VV.VC_VALUATION_ID <> ''
          Print #group_units (,160) edit 99999999.999999
        end-if
        position (+2,)
     end-if
     position (+1)

     Print $Group (,1)
     Print &BR.GB_GROUP_ID (,8)
     Print $GT_DESCR (,24)
     if &A.VC_REPORT_TYPE = 'D'
       position (+1,)
     end-if

     move 0 to #group_award
     move 0 to #group_min
     move 0 to #group_max
     move 0 to #group_carryover
     move 0 to #group_units

     let $init_group = &BR.GB_GROUP_ID

  end-if
  if &A.VC_REPORT_TYPE = 'D'
    do printrow
  end-if

From PS_VC_PLAN_EFFDT      VE,
        PS_VC_PLAN_TBL     VT,
        PS_VC_BUDT_REP_TAO BR,
        PS_PERSON_NAME     PD,
        PS_VC_COMP_JOB_VW  J,
        PS_VC_BUDT_FRM_TAO BF,
        PS_VC_PAYFORM_TBL  PF
        [$sec_from]

Where   BR.VC_PLAN_ID = &A.VC_PLAN_ID AND
        BR.VC_PLAN_ID = VT.VC_PLAN_ID AND
        BR.VC_PAYOUT_PRD_ID = &A.VC_PAYOUT_PRD_ID AND
        BR.EMPLID = PD.EMPLID AND
        BR.EMPLID = J.EMPLID AND
        BR.EMPL_RCD = J.EMPL_RCD AND
        VE.VC_PLAN_ID = VT.VC_PLAN_ID AND
        VE.EFFDT = (SELECT MAX(VE2.EFFDT) FROM PS_VC_PLAN_EFFDT VE2 where
                        VE2.VC_PLAN_ID = VE.VC_PLAN_ID and
                        VE2.EFFDT <= &A.PRD_END_DT and
                        VE2.EFF_STATUS = 'A')
        [$sec_where] AND
        BF.VC_PLAN_ID = BR.VC_PLAN_ID AND
        BF.VC_PAYOUT_PRD_ID = BR.VC_PAYOUT_PRD_ID AND
        BF.GB_GROUP_ID = BR.GB_GROUP_ID AND
        BF.EMPLID = BR.EMPLID AND
        BF.EMPL_RCD = BR.EMPL_RCD AND
        PF.VC_PAYFORMULA_ID = BF.VC_PAYFORMULA_ID AND
        PF.EFFDT = (SELECT MAX(PF2.EFFDT) from PS_VC_PAYFORM_TBL PF2 Where
                        PF2.VC_PAYFORMULA_ID = PF.VC_PAYFORMULA_ID and
                        PF2.EFFDT <= &A.PRD_END_DT and
                        PF2.EFF_STATUS = 'A')
Order By BR.GB_GROUP_ID
End-Select

  if &A.VC_REPORT_TYPE = 'D'
    position (+1,)
    Print $total_group (,59)
  end-if

    Print #group_award (,140) edit 999999999999.999999
    Print #group_min (,80) edit 999999999999.999999
    Print #group_max (,100) edit 999999999999.999999
    Print #group_carryover (,120) edit 999999999999.999999
    if &VV.VC_VALUATION_ID <> ''
      Print #group_units (,160) edit 99999999.999999
    end-if

  Print #group_award (,140) edit 999999999999.999999

  position (+2,)
  Print $total_plan (,59)
  Print #total_award (,140) edit 999999999999.999999

  if &A.VC_REPORT_TYPE = 'D'
    Print #total_min (,80) edit 999999999999.999999
    print #total_max (,100) edit 999999999999.999999
    if &VV.VC_VALUATION_ID <> ''
      Print #total_units (,160) edit 99999999.999999
    end-if
    Print #total_carryover (,120) edit 999999999999.999999
  end-if
end-procedure

!*********************************************************************
Begin-procedure getvaluation
!*********************************************************************

Begin-select
VV.VC_VALUATION_ID
VV.DESCRSHORT
VV.VC_VALUE_AMOUNT
VV.CURRENCY_CD

from    PS_VC_VALUE_TBL VV, PS_VC_PLAN_EFFDT  VE
where   VV.VC_VALUATION_ID = VE.VC_VALUATION_ID AND
        VE.VC_PLAN_ID = &A.VC_PLAN_ID AND
        VE.EFFDT = (SELECT MAX(EFFDT) FROM PS_VC_PLAN_EFFDT VE2
                    Where VE2.VC_PLAN_ID = VE.VC_PLAN_ID AND
                          VE2.EFFDT <= &A.PRD_END_DT) AND
        VE.EFF_STATUS = 'A'
end-select

  let $valuation_str = ''
  let $ValueAmt =  ltrim(edit(&VV.VC_VALUE_AMOUNT, '999999999999.999999'),' ')

  if &VV.VC_VALUATION_ID <> ''
    let $valuation_str = &VV.VC_VALUATION_ID || &VV.DESCRSHORT  || ' (' || $ValueAmt || ' ' || &VV.CURRENCY_CD  || ')'
  end-if

end-procedure

!*********************************************************************
Begin-procedure getcarryover
!*********************************************************************

Begin-select
V1.VC_CARRYOVER_BAL
V1.VC_CARRYOVER_ACCUM

  let #carryover = &V1.VC_CARRYOVER_BAL + &V1.VC_CARRYOVER_ACCUM

FROM PS_VC_AWARD V1
WHERE V1.VC_PLAN_ID = '&A.VC_PLAN_ID'  AND
      V1.VC_PAYOUT_PRD_ID = (SELECT PP.VC_PAYOUT_PRD_ID  FROM PS_VC_PAYPRD_TBL PP
                        WHERE PP.VC_PLAN_ID = &A.VC_PLAN_ID  AND
                              PP.PRD_END_DT = (SELECT MAX(PP1.PRD_END_DT) FROM PS_VC_PAYPRD_TBL PP1
                                          WHERE PP1.VC_PLAN_ID = PP.VC_PLAN_ID AND
                                                PP1.PRD_END_DT < ( SELECT PP2.PRD_BGN_DT
                                                                FROM PS_VC_PAYPRD_TBL PP2
                                                                WHERE PP2.VC_PLAN_ID = PP.VC_PLAN_ID AND
                                                                PP2.VC_PAYOUT_PRD_ID = &A.VC_PAYOUT_PRD_ID ))) AND
      V1.GB_GROUP_ID = &BR.GB_GROUP_ID AND
      V1.EMPLID = &BR.EMPLID AND
      V1.EMPL_RCD = &BR.EMPL_RCD
end-select

end-procedure

!********************************************************
Begin-procedure getrellang

if rtrim(&A.VC_PLAN_MEM_CRIT,' ') = 'G' or rtrim(&A.VC_PLAN_MEM_CRIT,' ') = 'T'

begin-select
MAX(G2.EFFDT)  &G2_EFFDT=char
FROM PS_GB_GROUP_TBL G2
WHERE G2.GB_GROUP_ID = &BR.GB_GROUP_ID
AND   G2.EFFDT <= &A.PRD_END_DT
end-select

! Get Related Language info for PS_GB_GROUP_TBL
  move &GT_DESCR to $GB_GROUP_TBL-DESCR
  do Get_Related_GB_GROUP_TBL(&G2_EFFDT,&BR.GB_GROUP_ID)
  move $GB_GROUP_TBL-DESCR to $GT_DESCR

end-if

! Get Related Language info for PS_VC_COMP_JOB_VW
  move &BR.EMPL_RCD to #EMPL_RCD
  move &J.DESCRSHORT to $VC_COMP_JOB_VW-DESCRSHORT
  do Get_Related_VC_COMP_JOB_VW(&BR.EMPLID,#EMPL_RCD)
  move  $VC_COMP_JOB_VW-DESCRSHORT to $J_DESCRSHORT

! Get Related Language info for PS_VC_PLAN_TBL
  move &VT.DESCR50 to $VC_PLAN_TBL-DESCR50
  do Get_Related_VC_PLAN_TBL(&A.VC_PLAN_ID)
  move  $VC_PLAN_TBL-DESCR50 to $VT_DESCR50

begin-select
MAX(PF2.EFFDT)  &PF2_EFFDT=char
FROM PS_VC_PAYFORM_TBL PF2
WHERE PF2.VC_PAYFORMULA_ID = &PF.VC_PAYFORMULA_ID
AND   PF2.EFFDT <= &A.PRD_END_DT
end-select

! Get Related Language info for PS_VC_PAYFORM_TBL
  move &PF.DESCRSHORT to $VC_PAYFORM_TBL-DESCRSHORT
  do Get_Related_VC_PAYFORM_TBL(&PF2_EFFDT,&PF.VC_PAYFORMULA_ID)
  move  $VC_PAYFORM_TBL-DESCRSHORT to $PF_DESCRDESCRSHORT

end-procedure

!*********************************************************************
Begin-procedure PrintRow
!*********************************************************************

  print &BR.EMPLID (,3)
  print &BR.EMPL_RCD (,15)
  print &PD.NAME (,19)
  print &J.JOBCODE (,49)
  print $J_DESCRSHORT (,56)
  PRINT $PF_DESCRSHORT (,69)
  print #vc_award_min (,80) edit 999999999999.999999
  print #vc_award_max (,100) edit  999999999999.999999
  print #carryover (,120) edit  999999999999.999999
  print #vc_award_value (,140) edit 999999999999.999999
  if &VV.VC_VALUATION_ID <> ''
    print #vc_actual_awd_unit (,160) edit 99999999.999999
  end-if
  position (+1,)

end-procedure

!*********************************************************************
Begin-Heading 15
!*********************************************************************

 Print $current-date (2,171) edit 'MM/DD/YYYY'

 Page-Number (1,180)

 Print $plan_id (4,2)

 let $plan_info =  &A.VC_PLAN_ID || ' ' || $VT_DESCR50

 Print $plan_info (4,22)
 Print $payout_prd_id (5,2)
 Print &A.VC_PAYOUT_PRD_ID (5,22)
 Print $curr_cd (6,2)
 Print &VT.Currency_CD (6,22)
 Print $reportname (2,70)

  if $valuation_str <> ''
    Print $valuation (7,2)
    Print $valuation_str (7,22)
    let #ypos = 8
  else
    let #ypos = 7
  end-if

  if rtrim(&A.VC_GOAL_TYPE,' ') = 'G'
    let #ypos = #ypos+1
    Print $weighting (#ypos,22)
    let #pos = 37+(10 - (length($attain)))
    Print $attain (#ypos,#pos)
    let #ypos = #ypos+1
    Print $org (#ypos,2)
    print &VE.VC_ORG_PLAN_WEIGHT (#ypos,24) edit 999.99
    print &A.VC_ORG_PLAN_WEIGHT (#ypos,42) edit 999.99
    let #ypos = #ypos +1
    Print $group (#ypos,2)
    print &VE.VC_GRP_PLAN_WEIGHT (#ypos,24) edit 999.99
    print &A.VC_GRP_PLAN_WEIGHT (#ypos,42) edit 999.99
    let #ypos = #ypos+1
    Print $ind (#ypos,2)
    print &VE.VC_IND_PLAN_WEIGHT (#ypos,24) edit 999.99
    print &A.VC_IND_PLAN_WEIGHT (#ypos,42) edit 999.99
  else
    if rtrim(&A.VC_GOAL_TYPE,' ') = 'M'
      print $score (#ypos,2)
      print &A.SCORE (#ypos,22)
    end-if
  end-if

 if &A.VC_REPORT_TYPE = 'D'
   Print $emplid (14,3)
   Print $empl_rcd (14,15) wrap 4 2
   Print $name (14,21)
   Print $job_code (14,49)
   Print $payform (14,69)
 end-if

   let #pos = 80+(19 - (length($min_award)))
   Print $min_award (14,#pos)

   let #pos = 100+(19 - (length($max_award)))
   Print $max_award (14,#pos)

   let #pos = 120+(19 - (length($carryover_balance)))
   Print $carryover_balance (14,#pos)

   if &VV.VC_VALUATION_ID <> ''
     let #pos = 160+(14 - (length($units)))
     Print $units (14,#pos)
   end-if

 let #pos = 140+(19 - (length($proj_pay)))
 Print $proj_pay (14,#pos)

End-Heading

!**************************************************************************
begin-procedure report-translation
!**************************************************************************
do Init_Report_Translation($ReportID,$Language_Cd)

do Get_Field_Information ('VCREPS','ACTUAL_AWARD',$actual_award,#DW)
do Get_Field_Information ('VCREPS','ACTUAL_FUNDING',$actual_funding,#DW)
do Get_Field_Information ('VCREPS','ANNUAL_RATE',$annual_rate,#DW)
do Get_Field_Information ('VCREPS','ATTAINED',$attained,#DW)
do Get_Field_Information ('VCREPS','CARRYOVER',$carryover_balance,#DW)
do Get_Field_Information ('VCREPS','EMPLID',$emplid,#dw)
do Get_Field_Information ('VCREPS','EMPL_RCD',$empl_rcd,#DW)
do Get_Field_Information ('VCREPS','GROUP_GOALS',$group_goals,#DW)
do Get_Field_Information ('VCREPS','GUARANTEE',$guarantee,#DW)
do Get_Field_Information ('VCREPS','HIRE_DATE',$hire_date,#DW)
do Get_Field_Information ('VCREPS','JOB_CODE',$job_code,#DW)
do Get_Field_Information ('VCREPS','MAX_AWARD',$max_award,#DW)
do Get_Field_Information ('VCREPS','MIN/MAX',$minmax,#DW)
do Get_Field_Information ('VCREPS','MIN_AWARD',$min_award,#DW)
do Get_Field_Information ('VCREPS','NAME',$name,#DW)
do Get_Field_Information ('VCREPS','OVERALL_PERF_FACT',$overall_perf_factor,#DW)
do Get_Field_Information ('VCREPS','PAYOUT_PRD_ID',$payout_prd_id,#DW)
do Get_Field_Information ('VCREPS','PERFORMACE_FACTOR',$parf_factor,#DW)
do Get_Field_Information ('VCREPS','PLAN ID',$plan_id,#DW)
do Get_Field_Information ('VCREPS','PROJECTED_PAYOUT',$projected_payout,#DW)
do Get_Field_Information ('VCREPS','VC_TARGET_AWARD',$target_award,#DW)
do Get_Field_Information ('VCREPS','VC_TARGET_VALUE',$target_value,#DW)
do Get_Field_Information ('VCREPS','TOTAL_PLAN',$total_plan,#DW)
do Get_Field_Information ('VCREPS','TOTAL_GROUP',$total_group,#DW)
do Get_Field_Information ('VCREPS','UNALLOCATED_BAL',$unallocated_balance,#DW)
do Get_Field_Information ('VCREPS','VALUATION',$valuation,#DW)
do Get_Field_Information ('VCREPS','VARIANCE',$variance,#DW)
do Get_Field_Information ('VCREPS','WEIGHTING',$weighting,#DW)
do Get_Field_Information ('VCREPS','DETAIL',$detail,#DW)
do Get_Field_Information ('VCREPS','SUMMARY',$summary,#DW)
do Get_Field_Information ('VCREPS','CURR_CD',$curr_cd,#DW)
do Get_Field_Information ('VCREPS','VC_AWARD_VALUE',$award_value,#DW)
do Get_Field_Information ('VCREPS','START_DATE',$start_dt,#DW)
do Get_Field_Information ('VCREPS','END_DATE',$end_dt,#DW)
do Get_Field_Information ('VCREPS','P_FREQ',$p_freq,#DW)
do Get_Field_Information ('VCREPS','ERN_CD',$ern_cd,#DW)
do Get_Field_Information ('VCREPS','PLAN_TYPE',$p_type,#DW)
do Get_Field_Information ('VCREPS','PLAN_MEM',$p_mem,#DW)
do Get_Field_Information ('VCREPS','VALUATION',$valuation,#DW)
do Get_Field_Information ('VCREPS','VC_GOAL_TYPE',$goal_type,#DW)
do Get_Field_Information ('VCREPS','CARRYOVER',$carryover,#DW)
do Get_Field_Information ('VCREPS','ORG',$org,#DW)
do Get_Field_Information ('VCREPS','IND',$ind,#DW)
do Get_Field_Information ('VCREPS','GROUP',$group,#DW)
do Get_Field_Information ('VCREPS','PRORATE',$prorate,#DW)
do Get_Field_Information ('VCREPS','APPROVER',$approver,#DW)
do Get_Field_Information ('VCREPS','AWARD_DATE',$award_datelbl,#DW)
do Get_Field_Information ('VCREPS','STATUS',$status,#DW)
do Get_Field_Information ('VCREPS','FROM_DATE',$fromdatelbl,#DW)
do Get_Field_Information ('VCREPS','THRU_DATE',$thrudatelbl,#DW)
do Get_Field_Information ('VCREPS','AWARD_UNITS',$units,#DW)
do Get_Field_Information ('VCREPS','PROJECTED_PAYOUT',$proj_pay,#DW)
do Get_Field_Information ('VCREPS','PAYFORMULA',$payform,#DW)
do Get_Field_Information ('VCREPS','ATTAINMENT',$attain,#DW)
do Get_Field_Information ('VCREPS','VC_SCORE',$score,#DW)
do Get_Field_Information ('VCREPS','VC002',$reportname,#DW)

end-procedure

!*********************************************************************
#include 'stdapi.sqc'    !Routine to update run Status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'
#include 'sqrtrans.sqc'
#Include 'getrplng.sqc'  !Get the report language
#include 'hrsecty.sqc'   !Get SQR Security parameters
