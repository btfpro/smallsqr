! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! TMDOWNLD: Tree Mover Download                                        !
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!  Purpose:     Downloads an entire PeopleSoft tree into a file that   *
!               can then be loaded into a PEopleTools 8 (or higher)    *
!               database using the TREEMOVER AE program (which is      *
!               located off the Utilities/Process/Tree Import Menu).   *
!                                                                      *
!               This program should run be run against a PeopleSoft    *
!               7 or 7.5 database.                                     *
!                                                                      *
!               When you're prompted for the filename you can either   *
!               enter a fully qualified filename, i.e C:\Temp\filename *
!               or just enter the filename itself. If you enter only   *
!               the filename the output directory will be where ever   *
!               the SQR  binary files are located.                     *
!                                                                      *
!               Note: You should place this program in your existing 7 *
!               or 7.5 SQR source directory.  You cannot run this      *
!               program from the 8 directory using the 8 SQCs, against *
!               a non-8 database.                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'      !Get environment defines

!***********************************************************************
!     MAIN SECTION                                                     *
!***********************************************************************
begin-report

   do initialize

   do process-tree

   do terminate

end-report


!***********************************************************************
!     Initialization section                                           *
!***********************************************************************
begin-procedure initialize

   do Init-DateTime                 !Called from DATETIME.SQC
   do Init-Number                   !Called from NUMBER.SQC

   do Define-Prcs-Vars              !Called from PRCSDEF.SQC
   do Get-Run-Control-Parms         !Called from PRCSAPI.SQC

   if #prcs_process_instance = 0
      do Prompt-for-Tree
   else
      do Get-Tree-Parms
   end-if

   do Open-File


end-procedure initialize


!----------------------------------------------------------------------!
!  Procedure: Prompt-For-Tree                                          !
!----------------------------------------------------------------------!
!  This procedure prompts the user for the key fields of the tree      !
!  to be downloaded, which are SetId, TreeName, and Effective Date.    !
!                                                                      !
!----------------------------------------------------------------------!
begin-procedure Prompt-For-Tree

input $Setid 'Enter the Setid or Quit' type=char maxlen=5
if isblank($Setid)
   LET $Setid = ' '
else
   let $Setid = rtrim(upper($Setid),' ')
   If $Setid = 'Q'
            or $Setid = 'QUIT'
      do Successful-EOJ
   end-if
end-if

input $TreeName 'Enter the Tree Name or Quit' type=char maxlen=20
let $TreeName = rtrim(upper($TreeName),' ')
If $TreeName = 'Q'
or $TreeName = 'QUIT'
   do Successful-EOJ
end-if

do Ask-Eff-Date                 !Called from ASKEFFDT.SQC

input $DownloadLevel 'Download related data from the PS_TREE_LEVEL_TBL (Y/N)?' type=char maxlen=1
let $DownloadLevel = upper($DownloadLevel)
If $DownloadLevel = 'Q'
   do Successful-EOJ
end-if

input $DownloadNode 'Download related data from the PS_TREE_NODE_TBL (Y/N)?' type=char maxlen=1
let $DownloadNode = upper($DownloadNode)
If $DownloadNode = 'Q'
   do Successful-EOJ
end-if

input $FileName 'Enter the Output FileName or Quit' type=char maxlen=100
let $FileName = upper($FileName)
If $FileName = 'Q'
or $FileName = 'QUIT'
   do Successful-EOJ
end-if


end-procedure Prompt-for-tree


!----------------------------------------------------------------------!
!  Procedure: Get-Tree-Parms                                           !
!----------------------------------------------------------------------!
!  This procedure will get the parms for the tree from a run control   !
!  table.
!
!  Note:  This procedure has to be customized by the customer          !
!----------------------------------------------------------------------!
begin-procedure Get-Tree-Parms

! Add a SQL statement to get the tree name, effective date, setid,
! and outfile file name.
! For example:
!
!BEGIN-SELECT
!I.TREE_NAME
!  Let $Treename = &I.TREE_NAME
!I.SETID
!  Let $Setid = &I.SETID
!I.TREE_EFFDT
!  Let $Effdt = &I.TREE_EFFDT
!I.FILENAME
!  Let $Filename = &I.FILENAME
!FROM <YOUR RUN CONTROL TABLE>
!WHERE I.OPRID = $PRCS_OPRID
!AND I.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
!END-SELECT

End-procedure Get-Tree-Parms


!----------------------------------------------------------------------!
!  Procedure: Open-File                                                !
!----------------------------------------------------------------------!
!  This procedure opens the file which will contains the tree          !
!  to be downloaded.                                                   !
!----------------------------------------------------------------------!

begin-procedure Open-File
  Open $FileName as 1 for-writing record=139:vary status=#filestatus
  if #filestatus != 0
     display ' '
     display '*** Error opening tree output file ***'
     display ' '
     stop
  end-if
end-procedure Open-File


!----------------------------------------------------------------------!
! Procedure: Process-Tree                                              !
!----------------------------------------------------------------------!
!  This procedure controls the exporting of the tree to the file       !
!----------------------------------------------------------------------!

begin-procedure Process-Tree

   Do Download-TreeDefn

   IF $DownloadLevel = 'Y' or $DownloadNode = 'Y'
      Do Get-Tree-Structure
   End-IF

! Only need to download data for levels if the tree has USE_LEVELS of
! 'S' for strict or 'L' for loose
! Also, We can only download user-level data for the PS_TREE_LEVEL_TBL
   IF &T.USE_LEVELS <> 'N'
      IF $DownloadLevel = 'Y' and rtrim($Level_Recname,' ') = 'TREE_LEVEL_TBL'
         Do downLoad-TreeUserLevel
      END-IF

      Do DownLoad-TreeLevels
   END-IF

! We can only download user-node data for the PS_TREE_NODE_TBL
   IF $DownloadNode = 'Y' and rtrim($Node_Recname,' ') = 'TREE_NODE_TBL'
      Do downLoad-TreeUserNode
   END-IF

   Do Download-TreeNode

end-procedure Process-Tree

!----------------------------------------------------------------------!
! Procedure: Get-Tree-Structure                                        !
!----------------------------------------------------------------------!
!  This procedure gets the tree structure information                  !
!----------------------------------------------------------------------!

begin-procedure Get-Tree-Structure

   Let $Level_Recname = ' '
   Let $Node_Recname = ' '

BEGIN-SELECT on-error=sql-error
TS.LEVEL_RECNAME
   Let $Level_Recname = &TS.LEVEL_RECNAME
TS.NODE_RECNAME
  Let $Node_Recname = &TS.Node_RECNAME

FROM PSTREESTRCT TS
WHERE TS.TREE_STRCT_ID  = &T.TREE_STRCT_ID
END-SELECT

end-procedure Get-Tree-Structure

!----------------------------------------------------------------------!
! Procedure: Download-TreeDefn                                         !
!----------------------------------------------------------------------!
!  This procedure exports the tree definition to the file              !
!----------------------------------------------------------------------!

begin-procedure Download-TreeDefn

   Let $RecordType = 'TREE_DEFN'
   Do Write-File-Record

   Let #count=0

BEGIN-SELECT on-error=sql-error
T.SETID
T.TREE_NAME
T.EFFDT
T.EFF_STATUS
T.TREE_STRCT_ID
T.DESCR
T.ALL_VALUES
T.USE_LEVELS
T.NODE_COUNT
T.DUPLICATE_LEAF

    Do Write-Tree-Defn-Line

    Let #count=#count+1
FROM PSTREEDEFN T
WHERE T.TREE_NAME = $TreeName
  AND T.SETID = $Setid
  AND T.EFFDT = {DateIn-Prefix}$Effdt{DateIn-Suffix}

END-SELECT

   If #count = 0
     display '*** Tree not found ***'
   end-if

end-procedure Download-Treedefn

!----------------------------------------------------------------------!
! Procedure: Download-TreeUserLevel                                    !
!----------------------------------------------------------------------!
!  This procedure exports data from the PS_TREE_LEVEL_TBL              !
!----------------------------------------------------------------------!

begin-procedure Download-TreeUserLevel

   Let $RecordType = 'TREE_USERLVL'
   Do Write-File-Record

! First get the correct setid for the tree
   Let $UserSetid = ' '
   IF not isblank($Setid)
      Do Get-Setid
   END-if

   Let #User-Level-Count=0

BEGIN-SELECT on-error=sql-error
UL.SETID
UL.TREE_LEVEL
UL.EFFDT
UL.EFF_STATUS
UL.DESCR
UL.DESCRSHORT

   Do Write-Tree-User-Level-Line
   Let #User-Level-Count = #User-Level-Count + 1

FROM PS_TREE_LEVEL_TBL UL, PSTREELEVEL LL
WHERE LL.SETID = $Setid
AND LL.TREE_NAME = $TreeName
AND LL.EFFDT = {DateIn-Prefix}$Effdt{DateIn-Suffix}
AND UL.SETID = $UserSetid
AND UL.TREE_LEVEL = LL.TREE_LEVEL
AND UL.EFF_STATUS = 'A'
AND UL.EFFDT = (SELECT MAX(EFFDT)
                FROM PS_TREE_LEVEL_TBL
                WHERE SETID = UL.SETID
                AND TREE_LEVEL = UL.TREE_LEVEL
                AND EFFDT <= LL.EFFDT)
END-SELECT

   Display 'Total Number of tree user levels downloaded: ' noline
   Display #User-Level-Count

end-procedure Download-TreeUserLevel

!----------------------------------------------------------------------!
! Procedure: Get-Setid                                                 !
!----------------------------------------------------------------------!
!  This procedure gets the correct setid for given tree setid          !
!  From the PS_SET_CNTRL_TBL.                                          !
!----------------------------------------------------------------------!

begin-procedure Get-Setid

BEGIN-SELECT DISTINCT on-error=sql-error
S.SETCNTRLVALUE
   Let $UserSetid = &S.SETCNTRLVALUE

FROM PS_SET_CNTRL_TBL S
WHERE S.SETCNTRLVALUE = $Setid
END-SELECT

end-procedure Get-Setid


!----------------------------------------------------------------------!
! Procedure: Download-TreeLevels                                       !
!----------------------------------------------------------------------!
!  This procedure exports the tree levels to the output file           !
!----------------------------------------------------------------------!

begin-procedure Download-TreeLevels

   Let $RecordType = 'TREE_LEVEL'
   Do Write-File-Record

   Let #Level-Count = 0

BEGIN-SELECT on-error=sql-error
L.TREE_LEVEL
L.TREE_LEVEL_NUM
L.ALL_VALUES

    Do Write-Tree-Level-Line
    Let #Level-Count = #Level-Count + 1

FROM PSTREELEVEL L
WHERE L.TREE_NAME = $TreeName
  AND L.SETID = $Setid
  AND L.EFFDT = {DateIn-Prefix}$Effdt{DateIn-Suffix}
ORDER BY L.TREE_LEVEL_NUM ASC

END-SELECT

   Display 'Total Number of tree levels downloaded: ' noline
   Display #Level-Count

end-procedure Download-TreeLevels

!----------------------------------------------------------------------!
! Procedure: Download-TreeUserNode                                     !
!----------------------------------------------------------------------!
!  This procedure exports data from the PS_TREE_NODE_TBL               !
!----------------------------------------------------------------------!

begin-procedure Download-TreeUserNode

   Let $RecordType = 'TREE_USERND'
   Do Write-File-Record

! First get the correct setid for the tree
   Let $UserSetid = ' '
   IF not isblank($Setid)
      Do Get-Setid
   END-if

   Let #User-Node-Count=0

BEGIN-SELECT on-error=sql-error
UN.SETID
UN.TREE_NODE
UN.EFFDT
UN.EFF_STATUS
UN.DESCR

   Do Write-Tree-User-Node-Line
   Let #User-Node-Count = #User-Node-Count + 1

FROM PS_TREE_NODE_TBL UN, PSTREENODE NN
WHERE NN.SETID = $Setid
AND NN.TREE_NAME = $TreeName
AND NN.EFFDT = {DateIn-Prefix}$Effdt{DateIn-Suffix}
AND UN.SETID = $UserSetid
AND UN.TREE_NODE = NN.TREE_NODE
AND UN.EFF_STATUS = 'A'
AND UN.EFFDT = (SELECT MAX(EFFDT)
                FROM PS_TREE_NODE_TBL
                WHERE SETID = UN.SETID
                AND TREE_NODE = UN.TREE_NODE
                AND EFFDT <= NN.EFFDT)
END-SELECT

   Display 'Total Number of tree user nodes downloaded: ' noline
   Display #User-Node-Count

end-procedure Download-TreeUserNode

!----------------------------------------------------------------------!
! Procedure: Download-TreeNode                                         !
!----------------------------------------------------------------------!
!  This procedure exports the tree nodes to the output file            !                                  !
!----------------------------------------------------------------------!

begin-procedure Download-TreeNode

   Let $RecordType = 'TREE_NODE'
   Do Write-File-Record

   Let $TREE_NODE_PREV_SIB = ' '
   Let $PREV_PARENT = ' '
   Let #PREV_PARENT_NODE_NUM = -1
   Let $PREV_NODE = ' '

   Let #Node-count=0
   Let #Leaf-count=0

BEGIN-SELECT on-error=sql-error
N.TREE_NODE
   Let $TREE_NODE = &N.TREE_NODE
N.PARENT_NODE_NUM
   Let #PARENT_NODE_NUM = &N.PARENT_NODE_NUM
N.TREE_NODE_TYPE
   Let $TREE_NODE_TYPE = &N.TREE_NODE_TYPE
N.TREE_LEVEL_NUM
   Let $TREE_LEVEL_NUM = &N.TREE_LEVEL_NUM
   LET $TREE_LEVEL_NUM = RTRIM($TREE_LEVEL_NUM,'0')
   LET $TREE_LEVEL_NUM = RTRIM($TREE_LEVEL_NUM,'.')
N.TREE_NODE_NUM
   Let #TREE_NODE_NUM = &N.TREE_NODE_NUM

   IF #PARENT_NODE_NUM = #PREV_PARENT_NODE_NUM
      Let $TREE_NODE_PREV_SIB = $PREV_NODE
      Let $PREV_NODE = &N.TREE_NODE
   ELSE
      Let $TREE_NODE_PREV_SIB = ' '
      Let $PREV_NODE = &N.TREE_NODE
      Let #PREV_PARENT_NODE_NUM = #PARENT_NODE_NUM
      IF #PARENT_NODE_NUM <> 0
         do Get-Parent-Node-Name
      ELSE
         Let $PARENT_NODE_NAME = ' '
      END-IF
   END-IF

   Do Write-Tree-Node-Line
   Let #Node-count = #Node-count+1

   Do Download-TreeLeaf

FROM PSTREENODE N
WHERE N.TREE_NAME = $TreeName
  AND N.SETID = $Setid
  AND N.EFFDT = {DateIn-Prefix}$Effdt{DateIn-Suffix}
ORDER BY N.PARENT_NODE_NUM ASC, N.TREE_NODE_NUM ASC

END-SELECT

   Display 'Total Number of tree nodes downloaded: ' noline
   Display #Node-count
   Display 'Total Number of tree leafs downloaded: ' noline
   Display #Leaf-count

end-procedure Download-TreeNode


!----------------------------------------------------------------------!
! Procedure: Get-Parent-Node-Name                                      !
!----------------------------------------------------------------------!
!  This procedure gets the parent node name for a given tree node      !
!----------------------------------------------------------------------!

begin-procedure Get-Parent-Node-Name

BEGIN-SELECT on-error=sql-error
NP.TREE_NODE
   Let $PARENT_NODE_NAME = &NP.TREE_NODE

FROM PSTREENODE NP
WHERE NP.TREE_NAME = $TreeName
  AND NP.SETID = $Setid
  AND NP.EFFDT = {DateIn-Prefix}$Effdt{DateIn-Suffix}
  AND NP.TREE_NODE_NUM = #PARENT_NODE_NUM

END-SELECT

end-procedure Get-Parent-Node-Name


!----------------------------------------------------------------------!
! Procedure: Download-TreeLeaf                                         !
!----------------------------------------------------------------------!
!  This procedure exports the tree leafs to the output file            !
!----------------------------------------------------------------------!

begin-procedure Download-TreeLeaf

BEGIN-SELECT on-error=sql-error
D.RANGE_FROM
D.RANGE_TO
D.DYNAMIC_RANGE

   Do Write-Tree-Leaf-Line
   Let #Leaf-Count = #Leaf-Count + 1

FROM PSTREELEAF D
WHERE D.TREE_NAME = $TreeName
  AND D.SETID = $Setid
  AND D.EFFDT = {DateIn-Prefix}$Effdt{DateIn-Suffix}
  AND D.TREE_NODE_NUM = #TREE_NODE_NUM
ORDER BY D.RANGE_FROM ASC

END-SELECT

end-procedure Download-TreeNode

!----------------------------------------------------------------------!
!  Procedure: Write-Tree-Defn-Line                                     !
!----------------------------------------------------------------------!
!  This procedure writes tree definition data to the file              !
!  This layout matches the TREE_DEFN file layout                       !
!  Note:  notice that we aren't able to download the tree category     !
!         or the performance options.  This is because these values    !
!         don't exist in prior PeopleTools dbs.  Category existed      !
!         starting with PT7, but this program uses the lowest common   !
!         denominator                                                  !
!----------------------------------------------------------------------!

Begin-procedure Write-Tree-Defn-Line

do Convert-date-for-output(&T.EFFDT,$TREE_EFFDT)

Write 1 From '2':1              ! file record id for tree defn
             'A':1              ! default add mode
             &T.SETID:5
             ' ':20             !this is for the setcntrlvalue field
             &T.TREE_NAME:18
             $TREE_EFFDT:10
             &T.TREE_STRCT_ID:18
             &T.DESCR:30
             &T.NODE_COUNT:10
             &T.ALL_VALUES:1
             &T.USE_LEVELS:1
             &T.DUPLICATE_LEAF:1
             'DEFAULT':18       !default the tree category
             &T.EFF_STATUS:1
             ' ':1              !placeholder for tree_acc_method
             ' ':1              !placeholder for tree_acc_selector
             ' ':1              !placeholder for tree_acc_sel_opt

end-procedure Write-Tree-Defn-Line

!----------------------------------------------------------------------!
!  Procedure: Convert-date-for-output                                  !
!----------------------------------------------------------------------!
!  This procedure converts a date string into the correct format for   !
!  output.  It needs to be in YYYY-MM-DD format for the treemover      !
!  upload program.
!----------------------------------------------------------------------!

Begin-procedure Convert-date-for-output ($datein,:$dateout)

! this call gets the date into standard YYYY/MM/DD format
! then, we simply need to make sure the delimeter is a '-' instead of
! a '/'.
   do Format-DateTime($datein, $dateout_tmp, {DEFYMD}, '', '')

   Let $date_yyyy = substr($dateout_tmp,1,4)
   Let $date_MM   = substr($dateout_tmp,6,2)
   Let $date_DD   = substr($dateout_tmp,9,2)

   string $date_YYYY $date_MM $date_DD BY '-' into $dateout

end-procedure Convert-date-for-output

!----------------------------------------------------------------------!
!  Procedure: Write-Tree-User-Level-Line                               !
!----------------------------------------------------------------------!
!  This procedure writes tree user level data                          !
!  This layout matches the TREE_USERLVL file layout                    !
!----------------------------------------------------------------------!

Begin-procedure Write-Tree-User-Level-Line

do Convert-date-for-output(&UL.EFFDT,$USERLEVEL_EFFDT)

Write 1 From '3':1                      !file id for user levels
             'A':1                      !default add mode
              &UL.SETID:5
              &UL.TREE_LEVEL:10
              $USERLEVEL_EFFDT:10
              &UL.EFF_STATUS:1
              &UL.DESCR:30
              &UL.DESCRSHORT:10

end-procedure Write-Tree-User-Level-line

!----------------------------------------------------------------------!
!  Procedure: Write-Tree-Level-Line                                    !
!----------------------------------------------------------------------!
!  This procedure writes tree level data to the file                   !
!  This layout matches the TREE_LEVEL file layout                      !
!----------------------------------------------------------------------!

Begin-procedure Write-Tree-Level-Line

Write 1 From '4':1                      !file id for levels
             'A':1                      !default add mode
              &L.TREE_LEVEL:10
              &L.TREE_LEVEL_NUM:3
              &L.ALL_VALUES:1

end-procedure Write-Tree-Level-Line

!----------------------------------------------------------------------!
!  Procedure: Write-Tree-User-Node-Line                                !
!----------------------------------------------------------------------!
!  This procedure writes tree user Node  data                          !
!  This layout matches the TREE_USERNODE file layout                   !
!----------------------------------------------------------------------!

Begin-procedure Write-Tree-User-Node-Line

do Convert-date-for-output(&UN.EFFDT,$USERNODE_EFFDT)

Write 1 From '5':1                      !file id for user nodes
             'A':1                      !default add mode
              &UN.SETID:5
              &UN.TREE_NODE:20
              $USERNODE_EFFDT:10
              &UN.EFF_STATUS:1
              &UN.DESCR:30

end-procedure Write-Tree-User-Node-line

!----------------------------------------------------------------------!
!  Procedure: Write-Tree-Node-Line                                     !
!----------------------------------------------------------------------!
!  This procedure writes tree node data to the file                    !
!  This layout matches the TREE_NODE file layout                       !
!----------------------------------------------------------------------!

Begin-procedure Write-Tree-Node-Line

Write 1 From '6':1                      !tree node/detail file id
             'A':1                      !default add-mode
              $TREE_NODE:20
              $PARENT_NODE_NAME:20
              $TREE_NODE_TYPE:1
              $TREE_LEVEL_NUM:3
              $TREE_NODE_PREV_SIB:20
              ' ':30                    !placeholder for RANGE_FROM
              ' ':20                    !placeholder for RANGE_TO
              ' ':1                     !placeholder for Dynamic Range

end-procedure Write-Tree-Node-Line

!----------------------------------------------------------------------!
!  Procedure: Write-Tree-Leaf-Line                                     !
!----------------------------------------------------------------------!
!  This procedure writes tree Leaf data to the file                    !
!  This layout matches the TREE_NODE file layout                       !
!  Note:  this uses the same format/record type as the tree node!      !
!----------------------------------------------------------------------!

Begin-procedure Write-Tree-Leaf-Line

Write 1 From '6':1                      !tree node/detail file id
             'A':1                      !default add-mode
              ' ':20                    !placeholder for tree-node
              &N.TREE_NODE:20           !parent node for the leav
              ' ':1                     !placeholder for tree-node-type
              ' ':3                     !placeholder for tree-level-num
              ' ':20                    !placeholder for tree-prev-sib
              &D.RANGE_FROM:30
              &D.RANGE_TO:30
              &D.DYNAMIC_RANGE:1

end-procedure Write-Tree-Leaf-Line

!----------------------------------------------------------------------!
!  Procedure: Write-File-Record                                        !
!----------------------------------------------------------------------!
!  This procedure writes the record type row to the file               !
!  The upload program expects this record in the format                !
!  999<rectype>, where <rectype> is TREE_DEFN, TREE_NODE, or TREE_LEVEL!
!----------------------------------------------------------------------!

Begin-procedure Write-File-Record


Write 1 From '999':3
      $RecordType:15

end-procedure Write-File-Record


!----------------------------------------------------------------------!
!  Procedure: Terminate                                                !
!----------------------------------------------------------------------!
!  final processing
!----------------------------------------------------------------------!
begin-procedure Terminate

   do Close-File

   do Successful-EOJ                !Called from EOJ.SQC

end-procedure Terminate


!----------------------------------------------------------------------!
!  Procedure: Close-File                                               !
!----------------------------------------------------------------------!
!  This procedure closes the output file.                              !
!----------------------------------------------------------------------!

Begin-procedure Close-File
   Close 1
end-procedure

#include 'number.sqc'      ! Routines to format numbers
#include 'datetime.sqc'    ! Routines for date and time formatting
#include 'curdttim.sqc'    ! Get-Current-DateTime procedure
#include 'askeffdt.sqc'    ! Ask Effective Date
#include 'eoj.sqc'         ! Get Successful-EOJ procedure
#include 'prcsdef.sqc'     ! Defines Run Control Variables
#Include 'prcsapi.sqc'     ! Get Run Control Information
