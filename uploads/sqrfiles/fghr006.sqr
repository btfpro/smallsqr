!***********************************************************************
!  FGHR006: Refresh Department Table                                   *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      
!          $Date:  2006/07/19:11:51:32                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!Modifications:                                                        *
! 08-MAR-2000 PCS:                                                     *
!   Changed PROCEDURES Get-Parent-Node(#parent_node, :#level),         *
!                      Get-Tree-Top, and                               *
!                      Process-Deptids by adding Setid evaluation      *
!                      to DeptTbl join and qualified Effdt on          *
!                      subselect.                                      *
!                                                                      *
!   Changed PROCEDURES Update-DeptTable and Process-Deptids            *
!                      Added column SETID for use in qualification     *
!                      Process-Deptids by adding Setid evaluation      *
!                      of DeptTbl Update. Remove eff_status from the   *
!                      qualification of the DeptTbl Update.            *
!                                                                      *
!                      Globalized $SETID in Get-Parent-Node procedure. *
!
!                                                *
!***********************************************************************
! Modifications  5/23/2000
!  Added a new procedure "get-tree-effdt" so we no longer to a subselect 
!    for the tree effdt. 
!****************************************************************************
#include 'setenv.sqc' !Set environment
#Include 'setup31.sqc'   !Printer and page-size initialization
! **********************************************************************
! *  PROCEDURE  : BEGIN-REPORT                                         *
! *  Description: This procedure gets is the main report driver.       *
! **********************************************************************
BEGIN-REPORT
  DISPLAY 'BEGIN-REPORT'
  DO Init-DateTime
  DO Init-Number
  DO Get-Current-DateTime
  DO Init-Report
  DO Process-Main
  DO Reset
  DO Stdapi-Term
END-REPORT
! **********************************************************************
! *  PROCEDURE  : Init-Report                                          *
! *  Description: This procedure initializes the report headers and    *
! *               footers, creates and initailizes all arrays used     *
! *               in the program, and gets all report parameters.      *
! **********************************************************************
BEGIN-PROCEDURE Init-Report
! **********************************************************************
! *  Load report headers.                                              *
! **********************************************************************
  MOVE 'FGHR006' to $ReportID
  MOVE 'Refresh Department Table' to $ReportTitle
  DISPLAY $ReportTitle
! **********************************************************************
! * Initalize any arrays used in the program.                          *
! **********************************************************************
  DO Init-Array
! **********************************************************************
! *  Initialize the Standard API elements and get report parameters.   *
! **********************************************************************
  DO Stdapi-Init
  IF $prcs_process_instance = ''
      DO Ask-As-Of-Date
      DO Ask-SETID
  ELSE
!      DISPLAY 'going to Select parameters'
      DO Select-Parameters
      DO Get-Values
  END-IF

END-PROCEDURE
! *********************************************************************
! *  PROCEDURE  : Ask-SETID                                           *
! *  Description: This procedure gets the SETID used for data         *
! *               selection criteria.                                 *
! *********************************************************************
BEGIN-PROCEDURE Ask-SETID
  display ''
  display 'Please enter a SETID'
  display ' '
  input $SETID maxlen=5 type=char 'Please enter a SETID'
  uppercase $SETID

END-PROCEDURE
! *********************************************************************
! *  PROCEDURE  : Get-Values                                          *
! *  Description: This procedure gets the As-Of-Date used for data    *
! *               selection criteria.                                 *
! *********************************************************************
BEGIN-PROCEDURE Get-Values

   DO Get-As-Of-Date
   DO Get-SETID-RC

END-PROCEDURE
! *********************************************************************
! *  PROCEDURE  : Init-Array                                          *
! *  Description: This procedure creates and initializes the arrays   *
! *               used in the program.                                *
! *********************************************************************
BEGIN-PROCEDURE Init-Array
! *********************************************************************
! *  Build and initialize the array for storing DEPTID Hierarchy.     *
! *********************************************************************
  CREATE-ARRAY NAME=dept-tree SIZE=20
               FIELD=deptid:CHAR
               FIELD=nodenum:NUMBER
               FIELD=parentnode:NUMBER
               FIELD=descr:CHAR
  CREATE-ARRAY NAME=org-tree SIZE = 7
               FIELD=deptid:CHAR
               FIELD=descr:CHAR
  PUT 'TOP' 0 0 'Top of the Tree' INTO dept-tree(0)
  PUT 'TOP' 'Top of the Org' INTO org-tree(0)
END-PROCEDURE
! *********************************************************************
! *  PROCEDURE  : Build-Org-Tree                                      *
! *  Description: This procedure builds the 6 line Organization Tree  *
! *               printed on the SF52 from the PeopleSoft Dept Tree.  *
! *               Line 1 is the SubAgency and Line 6 is the Location  *
! *               which are already on PS_DEPT_TBL so only lines 2-5  *
! *               actually need to be store.                          *
! *********************************************************************
BEGIN-PROCEDURE build-org-tree(#lvl)
! DISPLAY 'Build-Org-Tree'
! *********************************************************************
! *  Initialize counters for loading the first three lines of the Org *
! *  Hierarchy.                                                       *
! *********************************************************************
  LET #i = #lvl
  LET #j = 6
! *********************************************************************
! *  Readjust the array positions if there are less than 5 levels for *
! *  the Deptid being loaded.  This prevents a blank line in the      *
! *  middle for depts at less than level 5.                           *
! *********************************************************************
  IF #i < 6
     LET #j = #i
  END-IF
! *********************************************************************
! *  Load the first three lines of the Org Hierarchy.                 *
! *********************************************************************
  WHILE (#j >= 0)
     GET $deptid $descr FROM dept-tree(#i) deptid descr
     PUT $deptid $descr INTO org-tree(#j)
     ADD -1 TO #i
     ADD -1 TO #j
  END-WHILE
END-PROCEDURE
! *********************************************************************
! *  Procedure  : Clear-Array                                         *
! *  Description: This procedure clears the array containing the      *
!                 Deptid's organizational hierarchy.                  *
! *********************************************************************
BEGIN-PROCEDURE clear-array
!   DISPLAY 'Clear Array'
!   *******************************************************************
!   *  Clear the Department Hierarchy from the PeopleSoft Dept Tree.  *
!   *******************************************************************
    LET #i = 1
    WHILE #i < 20
         PUT ' ' 0 0 ' ' INTO dept-tree(#i)
         ADD 1 TO #i
    END-WHILE
!   *******************************************************************
!   *  Clear the Organization Hierarchy stored in the DEPT_TBL.       *
!   *******************************************************************
    LET #i = 1
    WHILE #i < 7
         PUT ' ' ' ' INTO org-tree(#i)
         ADD 1 TO #i
    END-WHILE
END-PROCEDURE
! *********************************************************************
! *  Procedure  : Get-Tree-Node                                       *
! *  Description: This procedure gets the Tree Node information for a *
! *               Deptid.                                             *
! *********************************************************************
BEGIN-PROCEDURE get-tree-node(#level)
!DISPLAY 'Get-Tree-Node'
  WHILE #level > 1
    GET #parent_node FROM dept-tree(#level) parentnode
    DO Get-Parent-node(#parent_node, #level)
!   Subtract 1 From #Level
END-WHILE
END-PROCEDURE
! *********************************************************************
! *  Procedure  : Get-Parent-Node                                     *
! *  Description: This procedure gets the Parent Node for a given     *
! *               Tree Node.                                          *
! *********************************************************************

BEGIN-PROCEDURE get-parent-node(#parent_node, :#level)
  #DEBUGN SHOW 'PARENT NODE >' #PARENT_NODE '<'
!DISPLAY 'Get-Parent-Node'
  LET #level = 0
BEGIN-SELECT
DEPT1.DEPTID,
DEPT1.GVT_DESCR40,
DEPT1.DESCR
NODE1.TREE_NODE,
NODE1.TREE_NODE_NUM,
NODE1.PARENT_NODE_NUM,
NODE1.TREE_LEVEL_NUM
#debugn show 'row returned'
  LET #level = &node1.tree_level_num
  IF ISBLANK(&dept1.gvt_descr40)
      LET $descr = &dept1.descr
  ELSE
      LET $descr = &dept1.gvt_descr40
  END-IF
  PUT &dept1.deptid &node1.tree_node_num &node1.parent_node_num $descr
      INTO DEPT-TREE(#LEVEL)

FROM PSTREENODE NODE1, PS_DEPT_TBL DEPT1
WHERE NODE1.SETID = $_SETID
  AND NODE1.TREE_NAME = 'DEPT_SECURITY'
  AND NODE1.TREE_NODE_NUM = #parent_node
  AND NODE1.EFFDT = $_tree_effdt
!  AND NODE1.EFFDT = (SELECT MAX(A.EFFDT)
!                     FROM PSTREENODE A
!                     WHERE A.SETID = NODE1.SETID
!                       AND A.TREE_NAME = NODE1.TREE_NAME
!                       AND A.TREE_LEVEL_NUM = NODE1.TREE_LEVEL_NUM
!                       AND A.TREE_NODE_NUM = NODE1.TREE_NODE_NUM
!                       AND A.EFFDT <= $_AsOfDate)
  AND DEPT1.SETID  = NODE1.SETID
  AND DEPT1.DEPTID = NODE1.TREE_NODE
  AND DEPT1.EFFDT  = (SELECT MAX(B.EFFDT)
                      FROM PS_DEPT_TBL B
                      WHERE B.SETID  = DEPT1.SETID
                        AND B.DEPTID = DEPT1.DEPTID
                        AND B.EFFDT <= $_AsOfDate)
END-SELECT
END-PROCEDURE
! *********************************************************************
! *  Procedure  : Get-Tree-Top                                        *
! *  Description: This procedure gets the top level node in the Dept  *
! *               Tree since it is applicable to all Deptid.          *
! *********************************************************************
BEGIN-PROCEDURE get-tree-top
BEGIN-SELECT
DEPT1.DEPTID &agency,
DEPT1.GVT_DESCR40 &agency_descr

FROM PSTREENODE NODE1, PS_DEPT_TBL DEPT1
WHERE NODE1.SETID = $SETID
  AND NODE1.TREE_NAME = 'DEPT_SECURITY'
  AND NODE1.TREE_LEVEL_NUM = 1
  AND NODE1.PARENT_NODE_NUM = 0
  AND NODE1.EFFDT = &node.effdt
  AND DEPT1.SETID  = NODE1.SETID
  AND DEPT1.DEPTID = NODE1.TREE_NODE
  AND DEPT1.EFFDT  = (SELECT MAX(B.EFFDT)
                      FROM PS_DEPT_TBL B
                      WHERE B.SETID  = DEPT1.SETID
                        AND B.DEPTID = DEPT1.DEPTID
                        AND B.EFFDT <= $AsofDate)
END-SELECT
END-PROCEDURE
! *********************************************************************
! *  Main Functional SQR procedure.                                   *
! *********************************************************************
BEGIN-PROCEDURE Process-Main
! *********************************************************************
! *  Initialize Data Counters.                                        *
! *********************************************************************
  LET #count = 0
  LET #lvl = 0
  LET #arraysize = 20
! *********************************************************************
! *  GET the upper level department in the tree.                      *
! *********************************************************************
  DO get-tree-effdt   ! chrismalek 5/23/2000
  DO get-tree-top
  DO process-deptids
! *********************************************************************
! *  Print the count of the number of Department Ids imported.        *
! *********************************************************************
  DISPLAY 'Total number of rows created: ' NOLINE
  DISPLAY #count
END-PROCEDURE
! *********************************************************************
! *  Procedure:   Process-Deptids                                     *
! *  Description: This procedure retrieves the Deptids from the       *
! *               ps_dept_tbl and then invokes the routine to fill in *
! *               lines 2-5 of organizational data for processing on  *
! *               the SF52 and other documents.                       *
! *********************************************************************
BEGIN-PROCEDURE process-deptids
! DISPLAY 'Process-Deptid'
! *********************************************************************
! *  Select the Deptids from the Dept_Tbl.                            *
! *********************************************************************
BEGIN-SELECT
DEPT.SETID,
DEPT.DEPTID,
DEPT.EFFDT,
DEPT.EFF_STATUS,
DEPT.GVT_DESCR40,
DEPT.DESCR
NODE.TREE_NODE_NUM,
NODE.TREE_LEVEL_NUM,
NODE.PARENT_NODE_NUM,
NODE.EFFDT
  ADD 1 TO #count
  DO clear-array
  LET #lvl = &node.tree_level_num
  IF ISBLANK(&dept.gvt_descr40)
      LET $descr = &dept.descr
  ELSE
      LET $descr = &dept.gvt_descr40
  END-IF
  PUT &dept.deptid &node.tree_node_num &node.parent_node_num $descr
      INTO DEPT-TREE(#LVL)
  DO get-tree-node(#lvl)
  DO build-org-tree(#lvl)
  DO Update-DeptTable
FROM PS_DEPT_TBL DEPT, PSTREENODE NODE
Where NODE.SETID = $SETID
  AND NODE.TREE_NAME = 'DEPT_SECURITY'
    AND NODE.EFFDT = $tree_effdt
  !AND NODE.EFFDT = (SELECT MAX(A.EFFDT)
  !                    FROM PSTREENODE A
  !                    WHERE A.SETID = NODE.SETID
  !                      AND A.TREE_NAME = NODE.TREE_NAME
  !                      AND A.TREE_LEVEL_NUM = NODE.TREE_LEVEL_NUM
  !                      AND A.TREE_NODE_NUM = NODE.TREE_NODE_NUM
  !                      AND A.EFFDT <= $AsofDate)
  AND DEPT.SETID  = NODE.SETID
  AND DEPT.DEPTID = NODE.TREE_NODE
  AND DEPT.EFFDT  = (SELECT MAX(B.EFFDT)
                      FROM PS_DEPT_TBL B
                      WHERE B.SETID  = DEPT.SETID
                        AND B.DEPTID = DEPT.DEPTID
                        AND B.EFFDT <= NODE.EFFDT)
END-SELECT
END-PROCEDURE
! *********************************************************************
! *  Procedure:   Update_DeptTable                                    *
! *  Description: This procedure updates PS_DEPT_TBL with lines 2-5   *
! *               of the SF52 based on the Department Tree.           *
! *********************************************************************
BEGIN-PROCEDURE Update-DeptTable
! display 'Update-DeptTable'
! *********************************************************************
! *  Display the Org Table in the log file.                           *
! *********************************************************************
 LET #line=0
 WHILE #line < 7
   GET $dept $desc FROM org-tree(#line) deptid descr
   IF ISNULL($dept)
       LET $dept = ' '
   END-IF
   IF ISNULL($desc)
       LET $desc = ' '
   END-IF
   PUT $dept $desc INTO org-tree(#line) deptid descr
   ADD 1 TO #line
 END-WHILE
! *********************************************************************
! *  Unload the Org table into variables for updating the Dept Tbl.   *
! *********************************************************************
   GET $dept2 $desc2 FROM org-tree(3) deptid descr
   GET $dept3 $desc3 FROM org-tree(4) deptid descr
   GET $dept4 $desc4 FROM org-tree(5) deptid descr
   GET $dept5 $desc5 FROM org-tree(6) deptid descr
! *********************************************************************
! *  Display values.                                                  *
! *********************************************************************
#DEBUG show 'DEPTID: ' NOLINE
#DEBUG show &dept.deptid
#DEBUG show 'Effdt: ' NOLINE
#DEBUG show &dept.effdt
#DEBUG show 'Line 2: ' NOLINE
#DEBUG show $dept2 NOLINE
#DEBUG show $desc2
#DEBUG show 'Line 3: ' NOLINE
#DEBUG show $dept3 NOLINE
#DEBUG show $desc3
#DEBUG show 'Line 4: ' NOLINE
#DEBUG show $dept4 NOLINE
#DEBUG show $desc4
#DEBUG show 'Line 5: ' NOLINE
#DEBUG show $dept5 NOLINE
#DEBUG show $desc5
! *********************************************************************
! *  Update the Dept Tbl.                                             *
! *********************************************************************
BEGIN-SQL ON-ERROR=SQL-ERROR
UPDATE PS_DEPT_TBL
   SET GVT_PAR_LINE2 = $dept2,
       GVT_PAR_DESCR2 = $desc2,
       GVT_PAR_LINE3 = $dept3,
       GVT_PAR_DESCR3 = $desc3,
       GVT_PAR_LINE4 = $dept4,
       GVT_PAR_DESCR4 = $desc4,
       GVT_PAR_LINE5 = $dept5,
       GVT_PAR_DESCR5 = $desc5
  WHERE SETID  = &dept.setid
    AND DEPTID = &dept.deptid
    AND EFFDT  = &dept.effdt
END-SQL
!Display 'End Update_DeptTable'
END-PROCEDURE

!*********************************************************************                              
!  Procedure  : Get-Tree-Effdt                                      
!  Description: This procedure gets the Effective date for the Dept 
!               Security Tree in effect for the AsOfDate so that    
!               the MAX(EFFDT) subselect can be eliminated from the 
!               tree queries.                                       
!*********************************************************************
BEGIN-PROCEDURE get-tree-effdt
!********************************************************************
! DISPLAY 'Get-Tree-Effdt'
BEGIN-SELECT
!TO_CHAR(TREE.EFFDT,'DD-MON-YYYY') &TREE_EFFDT
TREE.EFFDT
    LET $tree_effdt = &TREE.EFFDT
!    DISPLAY 'tree_effdt; ' noline
!    DISPLAY $tree_effdt
FROM PSTREEDEFN TREE
WHERE TREE.SETID = $SETID
  AND TREE.TREE_NAME = 'DEPT_SECURITY'
  AND TREE.EFFDT = (SELECT MAX(T.EFFDT)
        FROM PSTREEDEFN T
        WHERE T.SETID = TREE.SETID
        AND T.TREE_NAME = TREE.TREE_NAME
        AND T.EFFDT <= $AsofDate
        AND T.EFF_STATUS = 'A')
END-SELECT

END-PROCEDURE


#include 'stdapi.sqc'    !Routines to Update Run Status
#include 'fgrunctl.sqc'  !Get run control parameter values
#include 'fggetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask As Of Date input
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers

