!
!***********************************************************************
!  ABS702NL Create Statistics for Dutch Illness Registration           *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2007/03/09:04:29:15                                 
!       $Release:  HR9                                                 
!    $Resolution:  689716                                              
!                                                                      *
!***********************************************************************
!  Variabelen die een datum bevatten, komen in verschillende formaten  *
! en onder verschillende namen voor:                                   *
!  -NAT ; Native/Database formaat, tbv vergelijkingen/updates in SQL   *
!  -CMP ; Ten behoeve van vergelijkingen buiten SQL, YYYYMMDD          *
!  -DTU ; In YYYY-MM-DD formaat ten behoeve van de DTU-* routines      *
!***********************************************************************
!  Print commando's !


#include 'setenv.sqc'    !Set environment

Begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

begin-report
   do Init-DateTime
!   #define SThousand ','
!   #define SDecimal  '.'
   do Init-number
   do Get-Current-DateTime
   do Format-DateTime($SysDateTime, $CREATION-DT, {DEFDATE}, '', '')
   do Format-DateTime($creation-dt,$creation-dt,{defdate},'','native')

   do Init-report
   if $proceed = 'Y'
     do Verwijder-statistics ! Verwijderen statistische records van maand
     do bepaal-begin-van-maand
     do bepaal-eind-van-maand
     do Bepaal-dagen-in-maand
     do Ophalen-standaard-uren
     do Ophalen-verzuim-duur-categorie
     do Aanmaken-statistics
   end-if
   do Reset
   do StdApi-Term

end-report

begin-procedure Init-report
   move 'ABS702NL'                    to $ReportID
   move 'AANMAKEN STATISTIEK RECORDS ZIEKTEVERZUIM' to $ReportTitle
   display $ReportTitle

   do Stdapi-Init

   let $proceed = 'Y'
   if $prcs_process_instance = ''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
     let $proceed = 'N'
   else
      do Select-Parameters
   end-if
end-procedure Init-report

Begin-procedure Get-Values

   do get-from-month-year

End-procedure Get-Values


!*************************************************************************
! Removal of statistical records                                         *
!*************************************************************************

begin-procedure Verwijder-statistics
begin-SQL On-Error=SQL-Error
      DELETE from PS_ABS_STAT_NLD
      where       COMPANY = $Company
      and         NL_FROM_YEAR  = #FromYear
      and         NL_FROM_MONTH = #FromMonth
end-SQL
end-procedure Verwijder-statistics

!*************************************************************************
! Determine begin of month                                               *
!*************************************************************************

begin-procedure bepaal-begin-van-maand
let $FromYear   = to_char(#FromYear)
let $FromMonth  = to_char(#FromMonth)
let $hulpmaand  = '000'||$FromMonth
let $hulpmaand  = {ps-substr}($hulpmaand,length($hulpmaand)-1,2)
let $begin-mnd-dtu = $FromYear||'-'||$hulpmaand||'-'||'01'
do Convert-From-DTU-Date($begin-mnd-dtu,$begin-mnd-NAT)
do Format-DateTime($begin-mnd-NAT,$BEGIN-MND-CMP,{DEFCMP},'','')
end-procedure bepaal-begin-van-maand

!*************************************************************************
! Determine end of month                                                 *
!*************************************************************************

begin-procedure bepaal-eind-van-maand
do Dtu-Month-End($BEGIN-MND-DTU, $EIND-MND-DTU)
do Convert-From-DTU-Date($eind-mnd-dtu,$eind-mnd-NAT)
do Format-DateTime($eind-mnd-NAT,$EIND-MND-CMP,{DEFCMP},'','')
end-procedure bepaal-eind-van-maand

!*************************************************************************
! Determine number of days in month                                      *
!*************************************************************************

begin-procedure Bepaal-dagen-in-maand

  unstring $EIND-MND-DTU by '-' into $jr $mnd $aantal-dagen-maand
  let #aantal-dagen-maand = TO_NUMBER($aantal-dagen-maand)

end-procedure Bepaal-dagen-in-maand

!*************************************************************************
! Retrieve standard hours                                                *
!*************************************************************************

begin-procedure Ophalen-standaard-uren

BEGIN-SELECT
INS.STD_HRS_DEFAULT
FROM  PS_INSTALLATION INS
END-SELECT

end-procedure Ophalen-standaard-uren

!*************************************************************************
! Retrieve illness length categories                                     *
!*************************************************************************

Begin-procedure Ophalen-verzuim-duur-categorie

BEGIN-SELECT

IP1.ILL_LENG_CAT1_NLD
IP1.ILL_LENG_TYP1_NLD
IP1.ILL_LENG_CAT2_NLD
IP1.ILL_LENG_TYP2_NLD
IP1.ILL_LENG_CAT3_NLD
IP1.ILL_LENG_TYP3_NLD
IP1.ILL_LENG_CAT4_NLD
IP1.ILL_LENG_TYP4_NLD
IP1.ILL_LENG_CAT5_NLD
IP1.ILL_LENG_TYP5_NLD
IP1.ILL_LENG_CAT6_NLD
IP1.ILL_LENG_TYP6_NLD
IP1.ILL_LENG_CAT7_NLD
IP1.ILL_LENG_TYP7_NLD
IP1.ILL_LENG_CAT8_NLD
IP1.ILL_LENG_TYP8_NLD
FROM  PS_ABS_PARAMETERS IP1

END-SELECT

LET $CAT-GEVONDEN = 'N'
LET #DAGEN-LV = 0

IF &IP1.ILL_LENG_TYP1_NLD = '3'
 LET $CAT-GEVONDEN = 'Y'
 LET #DAGEN-LV = (&IP1.ILL_LENG_CAT1_NLD - 1)
ELSE
IF
&IP1.ILL_LENG_TYP2_NLD = '3'
 LET $CAT-GEVONDEN = 'Y'
 LET #DAGEN-LV = (&IP1.ILL_LENG_CAT2_NLD -1)
ELSE
IF
&IP1.ILL_LENG_TYP3_NLD = '3'
 LET $CAT-GEVONDEN = 'Y'
 LET #DAGEN-LV = (&IP1.ILL_LENG_CAT3_NLD - 1)
ELSE
IF
&IP1.ILL_LENG_TYP4_NLD = '3'
 LET $CAT-GEVONDEN = 'Y'
 LET #DAGEN-LV = (&IP1.ILL_LENG_CAT4_NLD - 1)
ELSE
IF
&IP1.ILL_LENG_TYP5_NLD = '3'
 LET $CAT-GEVONDEN = 'Y'
 LET #DAGEN-LV = (&IP1.ILL_LENG_CAT5_NLD - 1)
ELSE
IF
&IP1.ILL_LENG_TYP6_NLD = '3'
 LET $CAT-GEVONDEN = 'Y'
 LET #DAGEN-LV = (&IP1.ILL_LENG_CAT6_NLD - 1)
else
IF
&IP1.ILL_LENG_TYP7_NLD = '3'
 LET $CAT-GEVONDEN = 'Y'
 LET #DAGEN-LV = (&IP1.ILL_LENG_CAT7_NLD - 1)
else
IF
&IP1.ILL_LENG_TYP8_NLD = '3'
 LET $CAT-GEVONDEN = 'Y'
 LET #DAGEN-LV = (&IP1.ILL_LENG_CAT8_NLD - 1)

END-IF  !&IP1.ILL_LENG_TYP8_NLD = '3'
END-IF  !&IP1.ILL_LENG_TYP7_NLD = '3'
END-IF  !&IP1.ILL_LENG_TYP6_NLD = '3'
END-IF  !&IP1.ILL_LENG_TYP5_NLD = '3'
END-IF  !&IP1.ILL_LENG_TYP4_NLD = '3'
END-IF  !&IP1.ILL_LENG_TYP3_NLD = '3'
END-IF  !&IP1.ILL_LENG_TYP2_NLD = '3'
END-IF  !&IP1.ILL_LENG_TYP1_NLD = '3'

End-procedure Ophalen-verzuim-duur-categorie

!*************************************************************************
! Create statistics                                                      *
!*************************************************************************
begin-procedure Aanmaken-statistics
! Initialiseren van te berekenen velden
do init-empl

begin-select
EM1.EMPLID
EM1.EMPL_RCD
EM1.LST_ASGN_START_DT
    do Convert-To-DTU-Date(&EM1.LST_ASGN_START_DT,$HIRE-DT-DTU)
    do Format-DateTime(&EM1.LST_ASGN_START_DT,$HIRE-DT-CMP,{DEFCMP},'','')
    
!********START RESOLUTION 158283********

 LET $EMPLID= &EM1.EMPLID

!********END RESOLUTION 158283**********   

EM1.TERMINATION_DT
    do Convert-To-DTU-Date(&EM1.TERMINATION_DT,$TERM-DT-DTU)
    do Format-DateTime(&EM1.TERMINATION_DT,$TERM-DT-CMP,{DEFCMP},'','')

PD1.SEX
PD1.BIRTHDATE

J1.DEPTID
J1.SETID_DEPT

     do Bepalen-leeftijd
     do Bepalen-arb-rels-fte-ILI-ELI ! Voor nieuwe en/of beeindigde arb-relaties
        if $soort-arb-rel = 'Overig'
           do Bepalen-empl-fte-rest ! De 'overige gevallen'
        end-if
   ! Incl aantal FTE's, deeltijdfactor en aantal beschikbare kalenderdagen
     let $nwe-employment = 'Y'
     do select-illness
        if $ziek-geweest = 'N'
           do Mask-numbers
           let $IL1_bgn_dt   = ''
           do Format-DateTime($IL1_bgn_dt, $IL1_bgn_dt, {DEFDATE}, '', 'native')
           do Insert-statistics
        end-if
     do Init-empl

FROM PS_PERSONAL_DT_FST PD1,
     PS_PER_ORG_ASGN_VW EM1,
     PS_JOB J1

WHERE PD1.EMPLID = EM1.EMPLID
AND ( (   EM1.TERMINATION_DT IS NULL
      AND EM1.LST_ASGN_START_DT <= {DATEIN-PREFIX}$EIND-MND-NAT{DATEIN-SUFFIX})
     OR
      (   EM1.TERMINATION_DT >= {DATEIN-PREFIX}$BEGIN-MND-NAT{DATEIN-SUFFIX}
      AND EM1.LST_ASGN_START_DT <= {DATEIN-PREFIX}$EIND-MND-NAT{DATEIN-SUFFIX}))
AND   J1.EMPLID = PD1.EMPLID
AND   J1.EMPL_RCD = EM1.EMPL_RCD
AND   J1.COMPANY = $Company
AND   J1.PER_ORG = 'EMP'
AND   J1.REG_REGION IN (SELECT REG_REGION
                        FROM PS_REG_REGION_TBL REG
                        WHERE REG.COUNTRY = 'NLD')
AND   J1.EMPL_CLASS NOT IN (SELECT IPP1.EMPL_CLASS
                            FROM PS_ABS_PARAMETERS2 IPP1)
AND ( (   EM1.LST_ASGN_START_DT > {DATEIN-PREFIX}$BEGIN-MND-NAT{DATEIN-SUFFIX}
      AND J1.EFFDT = EM1.LST_ASGN_START_DT)
     OR
      (   EM1.LST_ASGN_START_DT <= {DATEIN-PREFIX}$BEGIN-MND-NAT{DATEIN-SUFFIX}
      AND J1.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
                      WHERE  EMPLID   = J1.EMPLID
                        AND  EMPL_RCD = J1.EMPL_RCD
                        AND  EFFDT   <= {DATEIN-PREFIX}$BEGIN-MND-NAT{DATEIN-SUFFIX})))
AND   J1.EFFSEQ    = (SELECT MAX(EFFSEQ) FROM PS_JOB
                      WHERE  EMPLID   = J1.EMPLID
                        AND  EMPL_RCD = J1.EMPL_RCD
                        AND  EFFDT    = J1.EFFDT)

end-select
do commit-transaction

end-procedure Aanmaken-statistics

!*************************************************************************
! N.B. Change of Job within reporting month is not taken into account.   *
! There is a check based on the absence parameters whether an empl_class *
! should be excluded.                                                    *
!*************************************************************************

!*************************************************************************
! Determine age at begin of month                                        *
!*************************************************************************

begin-procedure Bepalen-leeftijd
let #age = 0

IF &PD1.BIRTHDATE <> ''
do Convert-To-DTU-Date(&PD1.BIRTHDATE,$BIRTHDATE-DTU)
do dtu-diff-years($BIRTHDATE-DTU,$BEGIN-MND-DTU,#age)
END-IF
end-procedure Bepalen-leeftijd

!*************************************************************************
! Determine number of employments and Full Time Equivalents              *
! Including and Excluding Longterm Illness (ILI and ELI)                 *
!*************************************************************************
begin-procedure Bepalen-arb-rels-fte-ILI-ELI

let #empl-ILI = 1
let #empl-ELI = 1
let #ee-dagen-dienst = 0
let $soort-arb-rel = 'Overig'

if  $HIRE-DT-CMP >= $BEGIN-MND-CMP       !Arbeidsrelatie gestart in maand
AND $HIRE-DT-CMP <= $EIND-MND-CMP

!******** START RESOLUTION 158283********

    DO  RETIREMENT

    do dtu-diff-days($HIRE-DT-DTU,$RET_DT,#dtu-diff-days) 
   !do dtu-diff-days($HIRE-DT-DTU,$EIND-MND-DTU,#dtu-diff-days)
   
!******** END RESOLUTION 158283**********   
   
   
    LET #ee-dagen-dienst = #dtu-diff-days + 1
    LET #empl-ILI =  #ee-dagen-dienst / #aantal-dagen-maand
    LET #empl-ELI =  #empl-ILI
    let $soort-arb-rel = 'Nieuw'
    do Bepalen-aantal-fte-ILI-ELI
    GOTO EIND-arb-rels-ILI
END-IF

IF  &EM1.TERMINATION_DT <> ''  !Arbeidsrelatie beeindigd in maand
AND $TERM-DT-CMP >= $BEGIN-MND-CMP
AND $TERM-DT-CMP <= $EIND-MND-CMP
    LET #DAG-ERBIJ = 1
    DO dtu-add-days($TERM-DT-DTU,#DAG-ERBIJ,$TERM-DT-DTU-A)
    do dtu-diff-days($BEGIN-MND-DTU,$TERM-DT-DTU-A,#dtu-diff-days)
    LET #ee-dagen-dienst = #dtu-diff-days
    LET #empl-ILI =  #ee-dagen-dienst / #aantal-dagen-maand
    LET #empl-ELI =  #empl-ILI
    let $soort-arb-rel = 'Beeindigd'
    do Bepalen-aantal-fte-ILI-ELI
    GOTO EIND-arb-rels-ILI
END-IF

IF  &EM1.TERMINATION_DT <> ''        !Arbeidsrelatie gestart en
AND $TERM-DT-CMP >= $BEGIN-MND-CMP  !beeindigd in maand
AND $TERM-DT-CMP <= $EIND-MND-CMP
AND $HIRE-DT-CMP >= $BEGIN-MND-CMP
AND $HIRE-DT-CMP <= $EIND-MND-CMP
    LET #DAG-ERBIJ = 1
    DO dtu-add-days($TERM-DT-DTU,#DAG-ERBIJ,$TERM-DT-DTU-A)
    do dtu-diff-days($HIRE-DT-DTU,$TERM-DT-DTU-A,#dtu-diff-days)
    LET #ee-dagen-dienst = #DTU-DIFF-DAYS
    LET #EMPL-ILI = #ee-dagen-dienst / #AANTAL-DAGEN-MAAND
    LET #empl-ELI = #empl-ILI
    let $soort-arb-rel = 'Nieuw en Beeindigd'
    do Bepalen-aantal-fte-ILI-ELI
END-IF

EIND-arb-rels-ILI:
end-procedure Bepalen-arb-rels-fte-ILI-ELI


!******** START RESOLUTION 158283********

begin-procedure RETIREMENT

BEGIN-SELECT
EFFDT 
 do Convert-To-DTU-Date(&EFFDT,$RET_DT)
FROM PS_JOB
WHERE EMPLID=$EMPLID AND ACTION='RET'

END-SELECT

END-PROCEDURE

!******** END RESOLUTION 158283**********


!*************************************************************************
! Determine number of FTE's for newly hired and terminated employees     *
!*************************************************************************
begin-procedure Bepalen-aantal-fte-ILI-ELI

let #gem-deeltd-factor-ILI = 0
let #gem-deeltd-factor-ELI = 0

if  $soort-arb-rel = 'Nieuw'

    let $start-dt-deeltd-NAT  = &EM1.LST_ASGN_START_DT
    LET $START-DT-DEELTD-DTU  = $HIRE-DT-DTU
    LET #DAG-ERBIJ = 1
    DO dtu-add-days($EIND-MND-DTU,#DAG-ERBIJ,$EIND-DT-DEELTD-DTU)
    do Convert-From-DTU-Date($EIND-DT-DEELTD-DTU,$EIND-DT-DEELTD-NAT)
    do Bepalen-deeltijd-factor

! In order to prevent division by zero in expression
! a check is added before assignment

    if #ee-dagen-dienst > 0
      let #gem-deeltd-factor-ILI = #som-deeltijd-factor / #ee-dagen-dienst
    else
      let #gem-deeltd-factor-ILI = 0
    end-if

    let #gem-deeltd-factor-ELI = #gem-deeltd-factor-ILI
    let #fte-ILI = #gem-deeltd-factor-ILI * #EMPL-ILI
    let #fte-ELI = #fte-ILI
    let #av-days-ILI = #AANTAL-DAGEN-MAAND * #fte-ILI
    let #av-days-ELI = #av-days-ILI

else

if  $soort-arb-rel = 'Beeindigd'

    let $start-dt-deeltd-NAT = $BEGIN-MND-NAT
    LET $START-DT-DEELTD-DTU  = $BEGIN-MND-DTU
    LET #DAG-ERBIJ = 1
    DO dtu-add-days($TERM-DT-DTU,#DAG-ERBIJ,$eind-dt-deeltd-dtu)
    do Convert-From-DTU-Date($eind-dt-deeltd-dtu,$eind-dt-deeltd-NAT)
    do Bepalen-deeltijd-factor

! In order to prevent division by zero in expression
! a check is added before assignment

       if #ee-dagen-dienst > 0
         let #gem-deeltd-factor-ILI = #som-deeltijd-factor / #ee-dagen-dienst
       else
         let #gem-deeltd-factor-ILI = 0
       end-if

    let #gem-deeltd-factor-ELI = #gem-deeltd-factor-ILI
    let #fte-ILI = #gem-deeltd-factor-ILI * #EMPL-ILI
    let #fte-ELI = #fte-ILI
    let #av-days-ILI = #AANTAL-DAGEN-MAAND * #fte-ILI
    let #av-days-ELI = #av-days-ILI

else

if  $soort-arb-rel = 'Nieuw en Beeindigd'

    let $start-dt-deeltd-NAT  = &EM1.LST_ASGN_START_DT
    LET $START-DT-DEELTD-DTU  = $HIRE-DT-DTU
    LET #DAG-ERBIJ = 1
    DO dtu-add-days($TERM-DT-DTU,#DAG-ERBIJ,$eind-dt-deeltd-dtu)
    do Convert-From-DTU-Date($eind-dt-deeltd-dtu,$eind-dt-deeltd-NAT)
    do Bepalen-deeltijd-factor

! In order to prevent division by zero in expression
! a check is added before assignment

       if #ee-dagen-dienst > 0
         let #gem-deeltd-factor-ILI = #som-deeltijd-factor / #ee-dagen-dienst
       else
         let #gem-deeltd-factor-ILI = 0
       end-if

    let #gem-deeltd-factor-ELI = #gem-deeltd-factor-ILI
    let #fte-ILI = #gem-deeltd-factor-ILI * #EMPL-ILI
    let #fte-ELI = #fte-ILI
    let #av-days-ILI = #AANTAL-DAGEN-MAAND * #fte-ILI
    let #av-days-ELI = #av-days-ILI
end-if
end-if
end-if

end-procedure Bepalen-aantal-fte-ILI-ELI

!*************************************************************************
! Determine employments and FTE for the remaining employees              *
!*************************************************************************
Begin-procedure Bepalen-empl-fte-rest

do dtu-diff-days($begin-mnd-dtu,$eind-mnd-dtu,#dtu-diff-days)
let #ee-dagen-dienst = #dtu-diff-days + 1
let $start-dt-deeltd-NAT = $begin-mnd-NAT
LET $START-DT-DEELTD-DTU = $BEGIN-MND-DTU
LET #DAG-ERBIJ = 1

DO dtu-add-days($EIND-MND-DTU,#DAG-ERBIJ,$EIND-DT-DEELTD-DTU)
do Convert-From-DTU-Date($eind-dt-deeltd-DTU,$eind-dt-deeltd-NAT)

let #empl-ILI = #ee-dagen-dienst/#aantal-dagen-maand
let #empl-ELI = #empl-ILI
let #gem-deeltd-factor-ILI = 0
let #gem-deeltd-factor-ELI = 0
do Bepalen-deeltijd-factor

! In order to prevent division by zero in expression
! a check is added before assignment

       if #ee-dagen-dienst > 0
         let #gem-deeltd-factor-ILI = #som-deeltijd-factor / #ee-dagen-dienst
       else
         let #gem-deeltd-factor-ILI = 0
       end-if

let #gem-deeltd-factor-ELI = #gem-deeltd-factor-ILI

let #fte-ILI = #gem-deeltd-factor-ILI * #EMPL-ILI
let #fte-ELI = #fte-ILI
let #av-days-ILI = #AANTAL-DAGEN-MAAND * #fte-ILI
let #av-days-ELI = #av-days-ILI

End-procedure Bepalen-empl-fte-rest

!*************************************************************************
! Retrieve illness records                                               *
!*************************************************************************
begin-procedure select-illness

let $ziek-geweest = 'N'
LET $RETURN-DT-DTU = ''
LET $RETURN-DT-CMP = ''

begin-select
IL1.BEGIN_DT

    do Format-DateTime(&IL1.BEGIN_DT, $IL1_bgn_dt, {DEFDATE}, '', '')
    do Format-DateTime($IL1_bgn_dt, $IL1_bgn_dt, {DEFDATE}, '', 'native')

    do Convert-To-DTU-Date(&IL1.BEGIN_DT,$BEGIN-DT-DTU)
    do Format-DateTime(&IL1.BEGIN_DT,$BEGIN-DT-CMP,{DEFCMP},'','')

IL1.ABSENCE_TYPE
    let $ILL-TYPE = &IL1.ABSENCE_TYPE
IL1.RETURN_DT
    do Convert-To-DTU-Date(&IL1.RETURN_DT,$RETURN-DT-DTU)
    do Format-DateTime(&IL1.RETURN_DT,$RETURN-DT-CMP,{DEFCMP},'','')
    do Bepalen-ingang-lv
    do Bepalen-aanvang-part-full
    do Bepalen-detail-situatie
    do Bepalen-ind-beeindigd
    do Bepalen-verzuimde-kal-dagen
    do Bepalen-verzuim-duur
    do Mask-numbers
    do Insert-statistics
    do Init-ill
    let $nwe-employment = 'N'
    let $ziek-geweest = 'Y'
FROM   PS_ABSENCE_HIST IL1
WHERE  IL1.EMPLID    = &EM1.EMPLID
AND    IL1.EMPL_RCD = &EM1.EMPL_RCD
AND ( (    IL1.BEGIN_DT  <= $EIND-MND-NAT
      AND  IL1.RETURN_DT IS NULL)
    OR
      (    IL1.BEGIN_DT  <= $EIND-MND-NAT
      AND  IL1.RETURN_DT  > $BEGIN-MND-NAT) )
AND ( IL1.ABSENCE_TYPE IN
          (SELECT ABSENCE_TYPE
           FROM PS_ABS_TYPE_TBL IL2
           WHERE IL2.SETID = 'NLD'
           AND   IL2.ABSENCE_CLASS = 'SCK') )

END-SELECT
end-procedure select-illness

!*************************************************************************
! Determine start date for longterm illness                              *
! When this date can be determined and if it falls within the reporting  *
! month, the statistics will be re-calculated                            *
! The number of employments, number of FTE's, number of available        *
! calendar days will be adjusted for Excluding longterm illness          *
!*************************************************************************
begin-procedure Bepalen-ingang-lv

let $DT-INGANG-LV-CMP    = ''
let $DT-INGANG-LV-NAT    = ''
let $DT-INGANG-LV-DTU    = ''
LET $INGANG-LV-GEVONDEN  = 'N'
let #V-PERC-LV = 100
let $V-EFFDT-LV-NAT = &IL1.BEGIN_DT
let $V-EFFDT-LV-DTU = $BEGIN-DT-DTU
let $start-dt-dtu = ''
LET $START-DT-NAT = ''
LET $STOP = 'N'
LET #DIFF-DAYS = 0

CREATE-ARRAY NAME=ILL-DET-LV SIZE=100  FIELD=EFFDT-lv-nat:CHAR
             FIELD=PERC-lv:NUMBER
!Tellers: #I, #J

DO  VUL-ARRAY-ILL-DET-LV
LET #J = 0
LET #MAX-I = #I -1

WHILE $STOP = 'N'
   DO bepaal-start-effdt
END-WHILE

IF  #V-PERC-LV    = 100
and $start-dt-NAT = ''
    let $start-dt-NAT = $v-EFFDT-LV-NAT
ELSE
   IF $start-dt-NAT = ''
   and $V-EFFDT-LV-NAT = ''
      let $start-dt-NAT = &IL1.BEGIN_DT
   END-IF
end-if

if  $start-dt-NAT <> ''
   do Convert-To-DTU-Date($START-DT-NAT,$START-DT-DTU)
   do dtu-add-days($start-dt-dtu,#dagen-lv,$dt-ingang-lv-dtu)
   do Convert-From-DTU-Date($dt-ingang-lv-dtu,$dt-ingang-lv-nat)
   do Format-DateTime($dt-ingang-lv-nat,$dt-ingang-lv-cmp,{DEFCMP},'','')
   if $DT-INGANG-LV-CMP <= $EIND-MND-CMP
      LET $INGANG-LV-GEVONDEN = 'Y'
   END-IF

end-if

!*************************************************************************
! Check whether the termination date is populated and if it is before    *
! the longterm illness date. If so, use the termination date for further *
! processing                                                             *
!*************************************************************************

IF $INGANG-LV-GEVONDEN = 'Y'
   IF   &EM1.TERMINATION_DT <> ''
   AND  $DT-INGANG-LV-CMP    >  $TERM-DT-CMP
     LET #DAG-ERBIJ = 1
     DO DTU-ADD-DAYS($TERM-DT-DTU,#DAG-ERBIJ,$DT-INGANG-LV-DTU)
     do Convert-From-DTU-Date($DT-INGANG-LV-DTU,$DT-INGANG-LV-NAT)

     do Correctie-lv
     goto eind-bepalen-lv
   END-IF

!*************************************************************************
! If required, calculated the number of employments, FTE's and available *
! calendar days, excluding longterm illness                              *
!*************************************************************************

IF   &IL1.RETURN_DT <> ''
AND (    $DT-INGANG-LV-CMP >= $BEGIN-MND-CMP
     AND $DT-INGANG-LV-CMP <  $RETURN-DT-CMP
    )
     do Correctie-lv
     goto eind-bepalen-lv
END-IF

IF   &IL1.RETURN_DT = ''
AND (    $DT-INGANG-LV-CMP >= $BEGIN-MND-CMP
     AND $DT-INGANG-LV-CMP <= $EIND-MND-CMP
    )

    do Correctie-lv
    goto eind-bepalen-lv
END-IF

IF  $DT-INGANG-LV-CMP < $BEGIN-MND-CMP
AND &IL1.RETURN_DT    = ''
   LET #EMPL-ELI    = 0
   let #fte-ELI     = 0
   let #av-days-ELI = 0

ELSE
   IF  $DT-INGANG-LV-CMP < $BEGIN-MND-CMP
   AND $RETURN-DT-CMP   >= $BEGIN-MND-CMP
       LET #EMPL-ELI    = 0
       let #fte-ELI     = 0
       let #av-days-ELI = 0
   END-IF
END-IF

END-IF      ! INGANG-LV-GEVONDEN = 'Y'

eind-bepalen-lv:

end-procedure Bepalen-ingang-lv
!***************************************************************
!****************************************************************
BEGIN-PROCEDURE VUL-ARRAY-ILL-DET-LV
LET #I=0
begin-select
ID2.COMMENT_DT
    PUT &ID2.COMMENT_DT INTO ILL-DET-LV(#I) EFFDT-LV-NAT
ID2.ILL_PERCENT_NLD
    PUT &ID2.ILL_PERCENT_NLD INTO ILL-DET-LV(#I) PERC-LV
    LET #I = #I + 1
FROM  PS_ABS_HIST_DET ID2
WHERE ID2.EMPLID     = &EM1.EMPLID
AND   ID2.EMPL_RCD  = &EM1.EMPL_RCD
AND   ID2.BEGIN_DT   = &IL1.BEGIN_DT
AND   ID2.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
ORDER BY ID2.COMMENT_DT ASC
end-select

END-PROCEDURE VUL-ARRAY-ILL-DET-LV
!**************************************************************
BEGIN-PROCEDURE bepaal-START-effdt

GET $EFFDT-LV-nat #PERC-LV FROM ILL-DET-LV(#J) EFFDT-LV-nat PERC-LV

IF  #V-PERC-LV = 100
AND #PERC-LV < 100
   Do Convert-To-DTU-Date($EFFDT-LV-nat,$EFFDT-LV-DTU)
   Do Convert-To-DTU-Date($V-EFFDT-LV-NAT,$V-EFFDT-LV-DTU)
   do dtu-diff-days($V-EFFDT-LV-DTU,$EFFDT-LV-DTU,#DIFF-DAYS)

   IF #DIFF-DAYS >= #DAGEN-LV
     let $start-dt-NAT = $v-EFFDT-LV-NAT
     let $stop = 'Y'
   end-if

   LET #V-PERC-LV = #PERC-LV
   LET $V-EFFDT-LV-NAT = ''
   LET $V-EFFDT-LV-DTU = ''

ELSE
   IF  #V-PERC-LV < 100
   AND #PERC-LV   = 100
       LET #V-PERC-LV = #PERC-LV
       LET $V-EFFDT-LV-NAT = $EFFDT-LV-nat
   END-IF

END-IF

LET #J = #J + 1

if #J > #MAX-I
   LET $STOP = 'Y'
END-IF

END-PROCEDURE bepaal-START-effdt
!*************************************************************************

!*************************************************************************
! Correction based on occuring longterm illness within month             *
!*************************************************************************

Begin-procedure Correctie-lv
if $nwe-employment = 'Y'
   if  $DT-INGANG-LV-CMP >= $BEGIN-MND-CMP
   and $DT-INGANG-LV-CMP <= $EIND-MND-CMP
       do dtu-diff-days($BEGIN-MND-DTU,$DT-INGANG-LV-DTU,#dtu-diff-days)
       LET #ee-dagen-dienst = #dtu-diff-days

       let #empl-ELI = #ee-dagen-dienst / #aantal-dagen-maand

       let $START-DT-DEELTD-NAT = $BEGIN-MND-NAT
       LET $START-DT-DEELTD-DTU = $BEGIN-MND-DTU
       LET $EIND-DT-DEELTD-NAT  = $DT-INGANG-LV-NAT
       do Convert-To-DTU-Date($eind-dt-deeltd-NAT,$eind-dt-deeltd-dtu)
       DO Bepalen-deeltijd-factor

! In order to prevent division by zero in expression
! a check is added before assignment

       if #ee-dagen-dienst > 0
         let #gem-deeltd-factor-ELI = #som-deeltijd-factor / #ee-dagen-dienst
       else
         let #gem-deeltd-factor-ELI = 0
       end-if

       let #fte-ELI = #gem-deeltd-factor-ELI * #EMPL-ELI
       let #av-days-ELI = #AANTAL-DAGEN-MAAND * #fte-ELI
   END-IF !Datum-ingang-lv in maand

end-if !Nieuwe employment = J
End-procedure Correctie-lv


!*************************************************************************
! Determine begin of full or parttime illness                            *
!*************************************************************************
Begin-procedure Bepalen-aanvang-part-full

let $start-full = 'N'
let $start-full-prim = 'N' ! Echt aangevangen in maand, i.t.t. overgang part naar voll.
let $start-part = 'N'

if  $BEGIN-DT-CMP >= $BEGIN-MND-CMP
and $BEGIN-DT-CMP <= $EIND-MND-CMP

    do  Select-eerste-detail

    IF #Start_Illness_Perc = 100
       let $start-full = 'Y'
       let $start-full-prim = 'Y'
    else
       let $start-part = 'Y'
    end-if

    if $start-full = 'N'
       do Select-overgang-part-full
    end-if

end-if
! The following selection will be performed for illness cases that
! started before the begin of the month
! When an illness percentage is 100, but follows a partial illness
! then the START-FULL is also set to 'Y'

if  $BEGIN-DT-CMP < $BEGIN-MND-CMP
   do Select-100-na-part
end-if

End-procedure Bepalen-aanvang-part-full

!************************************************************************
! Select first illness details
!************************************************************************
Begin-procedure Select-eerste-detail
let #Start_Illness_Perc = 100
BEGIN-SELECT LOOPS=1
ID5.ILL_PERCENT_NLD
     let #Start_Illness_Perc = &ID5.ILL_PERCENT_NLD

FROM   PS_ABS_HIST_DET ID5
WHERE  ID5.EMPLID     = &EM1.EMPLID
AND    ID5.EMPL_RCD  = &EM1.EMPL_RCD
AND    ID5.BEGIN_DT   = &IL1.BEGIN_DT
AND    ID5.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND    ID5.COMMENT_DT = &IL1.BEGIN_DT
END-SELECT

End-procedure Select-eerste-detail

!************************************************************************
! Select transition from part- to fulltime illness
!************************************************************************
Begin-procedure Select-overgang-part-full
begin-select loops=1
'X'
       LET $START-FULL = 'Y'

FROM   PS_ABS_HIST_DET ID21
WHERE  ID21.EMPLID       = &EM1.EMPLID
AND    ID21.EMPL_RCD    = &EM1.EMPL_RCD
AND    ID21.BEGIN_DT     = &IL1.BEGIN_DT
AND    ID21.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND    ID21.COMMENT_DT   > &IL1.BEGIN_DT
AND    ID21.COMMENT_DT  <= $EIND-MND-NAT
AND    ID21.ILL_PERCENT_NLD = 100
END-SELECT
End-procedure Select-overgang-part-full

!************************************************************************
! Select 100 after part, the 100% needs to fall within reporting month, *
! the partial record should have started before begin of month          *
!************************************************************************
Begin-procedure Select-100-na-part
BEGIN-SELECT LOOPS=1
ID6.COMMENT_DT
ID6.ILL_PERCENT_NLD

  IF &ID6.ILL_PERCENT_NLD = 100
     DO Zoek-1
  ELSE
     DO Zoek-2
  end-if

FROM  PS_ABS_HIST_DET ID6
WHERE ID6.EMPLID      = &EM1.EMPLID
AND   ID6.EMPL_RCD   = &EM1.EMPL_RCD
AND   ID6.BEGIN_DT    = &IL1.BEGIN_DT
AND   ID6.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND   ID6.COMMENT_DT  =
      (SELECT MAX(ID7.COMMENT_DT)
       FROM   PS_ABS_HIST_DET ID7
       WHERE  ID7.EMPLID      = &EM1.EMPLID
       AND    ID7.EMPL_RCD   = &EM1.EMPL_RCD
       AND    ID7.BEGIN_DT    = &IL1.BEGIN_DT
       AND    ID7.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
       AND    ID7.COMMENT_DT  < $BEGIN-MND-NAT)
END-SELECT


End-procedure Select-100-na-part

!*************************************************************************
! Search partial- followed by fulltime illness all within the month      *
!*************************************************************************
BEGIN-PROCEDURE ZOEK-1
BEGIN-SELECT
ID16.COMMENT_DT
ID16.ILL_PERCENT_NLD
     do zoek-3
FROM  PS_ABS_HIST_DET ID16
WHERE ID16.EMPLID      = &EM1.EMPLID
AND   ID16.EMPL_RCD   = &EM1.EMPL_RCD
AND   ID16.BEGIN_DT    = &IL1.BEGIN_DT
AND   ID16.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND   ID16.COMMENT_DT       =
     (SELECT MIN(ID17.COMMENT_DT)
      FROM  PS_ABS_HIST_DET ID17
      WHERE ID17.EMPLID           = &EM1.EMPLID
      AND   ID17.EMPL_RCD        = &EM1.EMPL_RCD
      AND   ID17.BEGIN_DT         = &IL1.BEGIN_DT
      AND   ID17.ABSENCE_TYPE     = &IL1.ABSENCE_TYPE
      AND   ID17.ILL_PERCENT_NLD  < 100
      AND   ID17.COMMENT_DT       > &ID6.COMMENT_DT
      AND   ID17.COMMENT_DT      <= $EIND-MND-NAT
      AND   ID17.COMMENT_DT      >= $BEGIN-MND-NAT)
END-SELECT
END-PROCEDURE ZOEK-1

!*************************************************************************
! Zoek 3
!*************************************************************************
BEGIN-PROCEDURE ZOEK-3
BEGIN-SELECT
ID18.COMMENT_DT
   LET $START-FULL = 'Y'
FROM  PS_ABS_HIST_DET ID18
WHERE ID18.EMPLID      = &EM1.EMPLID
AND   ID18.EMPL_RCD   = &EM1.EMPL_RCD
AND   ID18.BEGIN_DT    = &IL1.BEGIN_DT
AND   ID18.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND   ID18.COMMENT_DT <= $EIND-MND-NAT
AND   ID18.COMMENT_DT >= $BEGIN-MND-NAT
AND   ID18.COMMENT_DT  > &ID16.COMMENT_DT
AND   ID18.ILL_PERCENT_NLD = 100
END-SELECT

END-PROCEDURE ZOEK-3

!*************************************************************************
! Zoek 2
!*************************************************************************
BEGIN-PROCEDURE ZOEK-2
BEGIN-SELECT
ID19.COMMENT_DT
   LET $START-FULL = 'Y'
FROM  PS_ABS_HIST_DET ID19
WHERE ID19.EMPLID           = &EM1.EMPLID
AND   ID19.EMPL_RCD        = &EM1.EMPL_RCD
AND   ID19.BEGIN_DT         = &IL1.BEGIN_DT
AND   ID19.ABSENCE_TYPE     = &IL1.ABSENCE_TYPE
AND   ID19.ILL_PERCENT_NLD  = 100
AND   ID19.COMMENT_DT      <= $EIND-MND-NAT
AND   ID19.COMMENT_DT      >= $BEGIN-MND-NAT
AND   ID19.COMMENT_DT       > &ID6.COMMENT_DT
END-SELECT
END-PROCEDURE ZOEK-2

!*************************************************************************
! Determine detail situation
!*************************************************************************
Begin-procedure Bepalen-detail-situatie

let  $SITMAX-FULL = 'Y'
let  $SITPART-NA-FULL = 'N'
let  $SITFULL-LV = 'Y'
BEGIN-SELECT
ID8.ILL_PERCENT_NLD
    let $SITMAX-FULL = 'N'
FROM  PS_ABS_HIST_DET ID8
WHERE ID8.EMPLID      = &EM1.EMPLID
AND   ID8.EMPL_RCD   = &EM1.EMPL_RCD
AND   ID8.BEGIN_DT    = &IL1.BEGIN_DT
AND   ID8.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND   ID8.ILL_PERCENT_NLD < 100
AND   ID8.COMMENT_DT      =
    (SELECT MAX(ID9.COMMENT_DT)
     FROM  PS_ABS_HIST_DET ID9
     WHERE ID9.EMPLID    = &EM1.EMPLID
     AND   ID9.EMPL_RCD = &EM1.EMPL_RCD
     AND   ID9.BEGIN_DT  = &IL1.BEGIN_DT
     AND   ID9.ABSENCE_TYPE = &IL1.ABSENCE_TYPE)
END-SELECT

DO BEPAAL-DATUM-OVERGANG-FULL-PART
if $INGANG-PV-NAT <> ''
   LET $SITPART-NA-FULL = 'Y'
   DO Convert-To-DTU-Date($INGANG-PV-NAT,$INGANG-PV-DTU)
END-IF

IF $INGANG-LV-GEVONDEN = 'Y'
   DO BEPAAL-SITFULL-LV
END-IF

End-procedure Bepalen-detail-situatie

!*************************************************************************
! Determine transition date between fulltime and parttime
!*************************************************************************
BEGIN-PROCEDURE BEPAAL-DATUM-OVERGANG-FULL-PART

LET $INGANG-PV-NAT = ''
CREATE-ARRAY NAME=ILL-DET-PV SIZE=100  FIELD=EFFDT-PV:CHAR
             FIELD=PERC-PV:NUMBER

!Gebruikte tellers : #A en #B
LET $GEVONDEN = 'N'
DO ZIEKTE-BEGONNEN-VOOR-MAAND
IF $GEVONDEN = 'N'
    DO ZIEKTE-BEGONNEN-IN-MAAND
END-IF

IF $GEVONDEN = 'Y'
   DO  VUL-ARRAY-ILL-DET
   LET #B = 0
   LET #MAX-A = #A -1
   WHILE #B <= #MAX-A
      DO BEPAAL-DATUM-PV
   END-WHILE
END-IF

END-PROCEDURE BEPAAL-DATUM-OVERGANG-FULL-PART

!**********************************************************
BEGIN-PROCEDURE ZIEKTE-BEGONNEN-VOOR-MAAND
BEGIN-SELECT LOOPS=1
ID10.COMMENT_DT
     let $zoekdt-overg-f-p-nat = &ID10.COMMENT_DT
ID10.ILL_PERCENT_NLD
     LET #VORIG-PERC-PV = &ID10.ILL_PERCENT_NLD
     LET $GEVONDEN = 'Y'
FROM  PS_ABS_HIST_DET ID10
WHERE ID10.EMPLID     = &EM1.EMPLID
AND   ID10.EMPL_RCD  = &EM1.EMPL_RCD
AND   ID10.BEGIN_DT   = &IL1.BEGIN_DT
AND   ID10.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND   ID10.COMMENT_DT =
     (SELECT MAX(ID11.COMMENT_DT)
      FROM   PS_ABS_HIST_DET ID11
      WHERE  ID11.EMPLID     = &EM1.EMPLID
      AND    ID11.EMPL_RCD  = &EM1.EMPL_RCD
      AND    ID11.BEGIN_DT   = &IL1.BEGIN_DT
      AND    ID11.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
      AND    ID11.COMMENT_DT < $BEGIN-MND-NAT)
END-SELECT
END-PROCEDURE ZIEKTE-BEGONNEN-VOOR-MAAND

!**********************************************************
BEGIN-PROCEDURE ZIEKTE-BEGONNEN-IN-MAAND
BEGIN-SELECT LOOPS=1
ID20.COMMENT_DT
     let $zoekdt-overg-f-p-nat = &ID20.COMMENT_DT
ID20.ILL_PERCENT_NLD
     LET #VORIG-PERC-PV = &ID20.ILL_PERCENT_NLD
     LET $GEVONDEN = 'Y'
FROM  PS_ABS_HIST_DET ID20
WHERE ID20.EMPLID      = &EM1.EMPLID
AND   ID20.EMPL_RCD   = &EM1.EMPL_RCD
AND   ID20.BEGIN_DT    = &IL1.BEGIN_DT
AND   ID20.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND   ID20.BEGIN_DT   >= $BEGIN-MND-NAT
AND   ID20.BEGIN_DT   <= $EIND-MND-NAT
AND   ID20.COMMENT_DT  = &IL1.BEGIN_DT
END-SELECT
END-PROCEDURE ZIEKTE-BEGONNEN-IN-MAAND

!**********************************************************
BEGIN-PROCEDURE VUL-ARRAY-ILL-DET
LET #A=0
BEGIN-SELECT
IDX.COMMENT_DT
    PUT &IDX.COMMENT_DT INTO ILL-DET-PV(#A) EFFDT-PV
IDX.ILL_PERCENT_NLD
    PUT &IDX.ILL_PERCENT_NLD INTO ILL-DET-PV(#A) PERC-PV
    LET #A = #A + 1
FROM  PS_ABS_HIST_DET IDX
WHERE IDX.EMPLID      = &EM1.EMPLID
AND   IDX.EMPL_RCD   = &EM1.EMPL_RCD
AND   IDX.BEGIN_DT    = &IL1.BEGIN_DT
AND   IDX.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND   IDX.COMMENT_DT  > $zoekdt-overg-f-p-nat
AND   IDX.COMMENT_DT  <= $EIND-MND-NAT
ORDER BY IDX.COMMENT_DT ASC
END-SELECT

END-PROCEDURE VUL-ARRAY-ILL-DET
!**********************************************************
BEGIN-PROCEDURE BEPAAL-DATUM-PV
GET $EFFDT-PV #PERC-PV FROM ILL-DET-PV(#B) EFFDT-PV PERC-PV

IF  #PERC-PV < 100
AND #VORIG-PERC-PV = 100
       LET $INGANG-PV-NAT = $EFFDT-PV
END-IF

LET #VORIG-PERC-PV = #PERC-PV
LET #B = #B + 1

END-PROCEDURE BEPAAL-DATUM-PV

!*************************************************************************
! Determine fulltime illness for longterm illness
!*************************************************************************
Begin-procedure BEPAAL-SITFULL-LV
BEGIN-SELECT
ID13.ILL_PERCENT_NLD
     let $SITFULL-LV = 'N'
FROM  PS_ABS_HIST_DET ID13
WHERE ID13.EMPLID      = &EM1.EMPLID
AND   ID13.EMPL_RCD   = &EM1.EMPL_RCD
AND   ID13.BEGIN_DT    = &IL1.BEGIN_DT
AND   ID13.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND   ID13.ILL_PERCENT_NLD < 100
AND   ID13.COMMENT_DT      =
    (SELECT MAX(ID14.COMMENT_DT)
     FROM  PS_ABS_HIST_DET ID14
     WHERE ID14.EMPLID      = &EM1.EMPLID
     AND   ID14.EMPL_RCD   = &EM1.EMPL_RCD
     AND   ID14.BEGIN_DT    = &IL1.BEGIN_DT
     AND   ID14.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
     AND   ID14.COMMENT_DT <= $DT-INGANG-LV-NAT)
END-SELECT

End-procedure BEPAAL-SITFULL-LV

!*************************************************************************
! Determine illness end indicators
!*************************************************************************
Begin-procedure Bepalen-ind-beeindigd

let $end-EPI-ELI = 'N'
let $end-EPI-ILI = 'N'
let $end-IPI-ELI = 'N'
let $end-IPI-ILI = 'N'

! $end-IPI-ILI
if   &IL1.RETURN_DT <> ''
and  $RETURN-DT-CMP >= $BEGIN-MND-CMP
and  $RETURN-DT-CMP <= $EIND-MND-CMP
     let $end-IPI-ILI = 'Y'
end-if

! $end-IPI-ELI
! exlusief langdurig verzuim

if    $INGANG-LV-GEVONDEN = 'Y'
and ( (    $end-IPI-ILI = 'Y'
       and $DT-INGANG-LV-CMP >= $BEGIN-MND-CMP)
   or (    $DT-INGANG-LV-CMP >= $BEGIN-MND-CMP
       and $DT-INGANG-LV-CMP <= $EIND-MND-CMP))
    let $end-IPI-ELI = 'Y'

else
   IF  $INGANG-LV-GEVONDEN = 'N'
   AND $END-IPI-ILI = 'Y'
       LET $END-IPI-ELI = 'Y'
   END-IF
end-if

! $end-EPI-ILI part 1
IF  $end-IPI-ILI = 'Y'
and $SITMAX-FULL   = 'Y'
    let $end-EPI-ILI = 'Y'
END-IF

! $end-EPI-ILI part 2
if  $SITPART-NA-FULL = 'Y'
    let $end-EPI-ILI = 'Y'
end-if


! $end-EPI-ELI part 1
if    $INGANG-LV-GEVONDEN  = 'Y'
AND   $DT-INGANG-LV-CMP >= $BEGIN-MND-CMP
and   $end-IPI-ILI = 'Y'
and   $SITMAX-FULL   = 'Y'
     let $end-EPI-ELI = 'Y'
end-if


! $end-EPI-ELI part 2
if    $end-EPI-ELI = 'N'
AND   $INGANG-LV-GEVONDEN  = 'Y'
and   $DT-INGANG-LV-CMP >= $BEGIN-MND-CMP
and   $DT-INGANG-LV-CMP <= $EIND-MND-CMP
and   $SITFULL-LV   = 'Y'
      let $end-EPI-ELI = 'Y'
end-if

! $end-EPI-ELI part 3
if    $end-EPI-ELI = 'N'
AND   $INGANG-LV-GEVONDEN  = 'Y'
and   $DT-INGANG-LV-CMP >= $BEGIN-MND-CMP
and   $SITPART-NA-FULL   = 'Y'
      let $end-EPI-ELI = 'Y'
end-if

! $end-EPI-ELI part 4
if  $end-EPI-ELI = 'N'
AND $INGANG-LV-GEVONDEN = 'N'
and $SITPART-NA-FULL = 'Y'
    let $end-EPI-ELI = 'Y'
end-if

! $end-EPI-ELI part 5
if  $end-EPI-ELI = 'N'
AND $INGANG-LV-GEVONDEN = 'N'
AND $END-IPI-ILI = 'Y'
AND $SITMAX-FULL = 'Y'
    let $end-EPI-ELI = 'Y'
end-if

End-procedure Bepalen-ind-beeindigd

!*************************************************************************
! Determine illness calendar days
!*************************************************************************
begin-procedure Bepalen-verzuimde-kal-dagen

LET $START-DT-DAYS-IPI-NAT = ''
LET $END-DT-DAYS-IPI-NAT   = ''

LET $BEREKENEN-II = 'N'
LET $BEREKENEN-IE = 'N'
LET $BEREKENEN-EI = 'N'
LET $BEREKENEN-EE = 'N'

LET $START-DT-DUUR-IE-DTU = ''
LET $EIND-DT-DUUR-IE-DTU  = ''
LET $START-DT-DUUR-EI-DTU = ''
LET $EIND-DT-DUUR-EI-DTU  = ''
LET $START-DT-DUUR-EE-DTU = ''
LET $EIND-DT-DUUR-EE-DTU  = ''

LET $EIND-IE-ECHT = 'N'
LET $EIND-EI-ECHT = 'N'
LET $EIND-EE-ECHT = 'N'

!*************************************************************************
! Determine illness calendar days IPI ILI
!*************************************************************************
IF  $START-PART = 'N'
AND $START-FULL-PRIM = 'N'
    LET $START-DT-DAYS-IPI-NAT = $BEGIN-MND-NAT
ELSE
    LET $START-DT-DAYS-IPI-NAT = &IL1.BEGIN_DT
END-IF
Do Convert-To-DTU-Date($START-DT-DAYS-IPI-NAT,$START-DT-DAYS-IPI-DTU)

IF  $END-IPI-ILI = 'Y'
    LET $EIND-DT-DAYS-IPI-NAT = &IL1.RETURN_DT
    Do Convert-To-DTU-Date($EIND-DT-DAYS-IPI-NAT,$EIND-DT-DAYS-IPI-DTU)
    LET $BEREKENEN-II = 'Y'

ELSE
    LET #DAG-ERBIJ = 1
    DO dtu-add-days($EIND-MND-DTU,#DAG-ERBIJ,$EIND-DT-DAYS-IPI-DTU)
    DO Convert-From-DTU-Date($EIND-DT-DAYS-IPI-DTU,$EIND-DT-DAYS-IPI-NAT)
    LET $BEREKENEN-II = 'Y'
END-IF

IF $BEREKENEN-II = 'Y'
   DO  Bepalen-verzuim-dagen-IPI
   LET #days-IPI-ILI = #som-dagen-IPI * #gem-deeltd-factor-ILI
END-IF

!************************************************************************
! Determine illness calendar days IPI ELI
!************************************************************************
LET $START-DT-DAYS-IPI-NAT = ''
LET $EIND-DT-DAYS-IPI-NAT  = ''

IF  $START-PART = 'N'
AND $START-FULL-PRIM = 'N'
    LET $START-DT-DAYS-IPI-NAT = $BEGIN-MND-NAT
ELSE
    LET $START-DT-DAYS-IPI-NAT = &IL1.BEGIN_DT
END-IF
Do Convert-To-DTU-Date($START-DT-DAYS-IPI-NAT,$START-DT-DAYS-IPI-DTU)

IF  $INGANG-LV-GEVONDEN  = 'Y'
AND $END-IPI-ILI = 'Y'
AND $RETURN-DT-CMP < $DT-INGANG-LV-CMP
    LET $EIND-DT-DAYS-IPI-NAT = &IL1.RETURN_DT
    Do Convert-To-DTU-Date($EIND-DT-DYS-IPI-NAT,$EIND-DT-DAYS-IPI-DTU)
    LET $EIND-DT-DUUR-IE-DTU = $EIND-DT-DAYS-IPI-DTU
    LET $EIND-IE-ECHT = 'Y'
    LET $BEREKENEN-IE = 'Y'

ELSE
    IF  $INGANG-LV-GEVONDEN = 'Y'
    AND $DT-INGANG-LV-CMP >= $BEGIN-MND-CMP
    AND $DT-INGANG-LV-CMP <= $EIND-MND-CMP
        LET $EIND-DT-DAYS-IPI-NAT = $DT-INGANG-LV-NAT
        Do Convert-To-DTU-Date($EIND-DT-DAYS-IPI-NAT,$EIND-DT-DAYS-IPI-DTU)
        LET $EIND-DT-DUUR-IE-DTU = $EIND-DT-DAYS-IPI-DTU
        LET $EIND-IE-ECHT = 'Y'
        LET $BEREKENEN-IE = 'Y'
    ELSE
        IF  $INGANG-LV-GEVONDEN = 'N'
        AND $END-IPI-ILI = 'Y'
            LET $EIND-DT-DAYS-IPI-NAT = &IL1.RETURN_DT
            Do Convert-To-DTU-Date($EIND-DT-DAYS-IPI-NAT,$EIND-DT-DAYS-IPI-DTU)
            LET $EIND-DT-DUUR-IE-DTU = $EIND-DT-DAYS-IPI-DTU
            LET $EIND-IE-ECHT = 'Y'
            LET $BEREKENEN-IE = 'Y'
        ELSE
            IF  $INGANG-LV-GEVONDEN = 'Y'
            and $DT-INGANG-LV-CMP < $BEGIN-MND-CMP
            AND &IL1.RETURN_DT    = ''
                LET #DAYS-IPI-ELI = 0
                LET $BEREKENEN-IE = 'N'
            ELSE
                IF  $INGANG-LV-GEVONDEN = 'Y'
                AND $DT-INGANG-LV-CMP < $BEGIN-MND-CMP
                AND $RETURN-DT-CMP   >= $BEGIN-MND-CMP
                    LET #DAYS-IPI-ELI = 0
                    LET $BEREKENEN-IE = 'N'
                ELSE
                 LET #DAG-ERBIJ = 1
                 DO dtu-add-days($EIND-MND-DTU,#DAG-ERBIJ,$EIND-DT-DAYS-IPI-DTU)
                 Do Convert-From-DTU-Date($EIND-DT-DAYS-IPI-DTU,$EIND-DT-DAYS-IPI-NAT)
                 LET $BEREKENEN-IE = 'Y'
                END-IF
            END-IF
       END-IF
    END-IF
END-IF

IF $BEREKENEN-IE = 'Y'
   DO  Bepalen-verzuim-dagen-IPI
   LET #days-IPI-ELI = #som-dagen-IPI * #gem-deeltd-factor-ELI
END-IF
!*************************************************************************
! Determine illness calendar days EPI ILI
!*************************************************************************
LET $START-DT-DAYS-EPI-NAT = ''
LET $EIND-DT-DAYS-EPI-NAT  = ''

IF  $START-PART = 'N'
AND $START-FULL-PRIM = 'N'
    LET $START-DT-DAYS-EPI-NAT = $BEGIN-MND-NAT
ELSE
    LET $START-DT-DAYS-EPI-NAT = &IL1.BEGIN_DT
END-IF
Do Convert-To-DTU-Date($START-DT-DAYS-EPI-NAT,$START-DT-DAYS-EPI-DTU)

IF  $END-IPI-ILI = 'Y'
AND $SITMAX-FULL   = 'Y'
    LET $EIND-DT-DAYS-EPI-NAT = &IL1.RETURN_DT
    Do Convert-To-DTU-Date($EIND-DT-DAYS-EPI-NAT,$EIND-DT-DAYS-EPI-DTU)
    LET $EIND-DT-DUUR-EI-DTU = $EIND-DT-DAYS-EPI-DTU
    LET $EIND-EI-ECHT = 'Y'
    LET $BEREKENEN-EI = 'Y'

ELSE
    IF  $SITPART-NA-FULL  = 'Y'
        LET $EIND-DT-DAYS-EPI-NAT = $INGANG-PV-NAT ! Full na part
        Do Convert-To-DTU-Date($EIND-DT-DAYS-EPI-NAT,$EIND-DT-DAYS-EPI-DTU)
        LET $EIND-DT-DUUR-EI-DTU = $EIND-DT-DAYS-EPI-DTU
        LET $EIND-EI-ECHT = 'Y'
        LET $BEREKENEN-EI = 'Y'
    ELSE
        LET #DAG-ERBIJ = 1
        DO dtu-add-days($EIND-MND-DTU,#DAG-ERBIJ,$EIND-DT-DAYS-EPI-DTU)
        Do Convert-From-DTU-Date($EIND-DT-DAYS-EPI-DTU,$EIND-DT-DAYS-EPI-NAT)
    LET $BEREKENEN-EI = 'Y'
    END-IF
END-IF

IF $BEREKENEN-EI = 'Y'
   DO  Bepalen-verzuim-dagen-EPI
   LET #days-EPI-ILI = #som-dagen-EPI * #gem-deeltd-factor-ILI
END-IF
!*************************************************************************
! Determine illness calendar days EPI ELI
!*************************************************************************
LET $START-DT-DAYS-EPI-NAT = ''
LET $EIND-DT-DAYS-EPI-NAT  = ''

IF  $START-PART = 'N'
AND $START-FULL-PRIM = 'N'
    LET $START-DT-DAYS-EPI-NAT = $BEGIN-MND-NAT
ELSE
    LET $START-DT-DAYS-EPI-NAT = &IL1.BEGIN_DT
END-IF
Do Convert-To-DTU-Date($START-DT-DAYS-EPI-NAT,$START-DT-DAYS-EPI-DTU)

IF  $INGANG-LV-GEVONDEN =  'Y'
AND $END-IPI-ILI      = 'Y'
AND $RETURN-DT-CMP    < $DT-INGANG-LV-CMP
AND $SITMAX-FULL      = 'Y'

    LET  $EIND-DT-DAYS-EPI-NAT = &IL1.RETURN_DT
    Do Convert-To-DTU-Date($EIND-DT-DAYS-EPI-NAT,$EIND-DT-DAYS-EPI-DTU)
    LET $EIND-DT-DUUR-EE-DTU = $EIND-DT-DAYS-EPI-DTU
    LET $EIND-EE-ECHT = 'Y'
    LET $BEREKENEN-EE = 'Y'
ELSE
     IF  $INGANG-LV-GEVONDEN = 'Y'
     AND $DT-INGANG-LV-CMP >= $BEGIN-MND-CMP
     AND $DT-INGANG-LV-CMP <= $EIND-MND-CMP
     AND $SITFULL-LV        = 'Y'

         LET  $EIND-DT-DAYS-EPI-NAT = $DT-INGANG-LV-NAT
         Do Convert-To-DTU-Date($EIND-DT-DAYS-EPI-NAT,$EIND-DT-DAYS-EPI-DTU)
         LET $EIND-DT-DUUR-EE-DTU = $EIND-DT-DAYS-EPI-DTU
         LET $EIND-EE-ECHT = 'Y'
         LET $BEREKENEN-EE = 'Y'

     ELSE

         IF  $INGANG-LV-GEVONDEN = 'Y'
         AND $DT-INGANG-LV-CMP >= $BEGIN-MND-CMP
         AND $SITPART-NA-FULL        = 'Y'

             LET $EIND-DT-DAYS-EPI-NAT = $DT-INGANG-LV-NAT !$INGANG-PV-NAT LIGT DAAR NL ALTIJD NA
             Do Convert-To-DTU-Date($EIND-DT-DAYS-EPI-NAT,$EIND-DT-DAYS-EPI-DTU)
             LET $EIND-DT-DUUR-EE-DTU = $EIND-DT-DAYS-EPI-DTU
             LET $EIND-EE-ECHT = 'Y'
             LET $BEREKENEN-EE = 'Y'

         ELSE
               IF  $INGANG-LV-GEVONDEN = 'N'
               AND $END-IPI-ILI = 'Y'
               AND $SITMAX-FULL = 'Y'

                 LET $EIND-DT-DAYS-EPI-NAT = &IL1.RETURN_DT
                 Do Convert-To-DTU-Date($EIND-DT-DAYS-EPI-NAT,$EIND-DT-DAYS-EPI-DTU)
                 LET $EIND-DT-DUUR-EE-DTU = $EIND-DT-DAYS-EPI-DTU
                 LET $EIND-EE-ECHT = 'Y'
                 LET $BEREKENEN-EE = 'Y'

            ELSE
            IF  $INGANG-LV-GEVONDEN = 'N'
            AND $SITPART-NA-FULL    = 'Y'

                LET $EIND-DT-DAYS-EPI-NAT = $INGANG-PV-NAT
                Do Convert-To-DTU-Date($EIND-DT-DAYS-EPI-NAT,$EIND-DT-DAYS-EPI-DTU)
                LET $EIND-DT-DUUR-EE-DTU = $EIND-DT-DAYS-EPI-DTU
                LET $EIND-EE-ECHT = 'Y'
                LET $BEREKENEN-EE = 'Y'

            ELSE
               IF  $INGANG-LV-GEVONDEN = 'Y'
               AND $DT-INGANG-LV-CMP < $BEGIN-MND-CMP
               AND &IL1.RETURN_DT    = ''

                LET #DAYS-EPI-ELI = 0
                LET $BEREKENEN-EE = 'N'
               ELSE
                  IF  $INGANG-LV-GEVONDEN = 'Y'
                  AND $DT-INGANG-LV-CMP < $BEGIN-MND-CMP
                  AND $RETURN-DT-CMP   >= $BEGIN-MND-CMP

                    LET #DAYS-EPI-ELI = 0
                    LET $BEREKENEN-EE = 'N'
                  ELSE

                    LET #DAG-ERBIJ = 1
                    DO dtu-add-days($EIND-MND-DTU,#DAG-ERBIJ,$EIND-DT-DAYS-EPI-DTU)
                    Do Convert-From-DTU-Date($EIND-DT-DAYS-EPI-DTU,$EIND-DT-DAYS-EPI-NAT)
                    LET $BEREKENEN-EE = 'Y'
                  END-IF
               END-IF
             END-IF
          END-IF
      END-IF
    END-IF
END-IF

IF $BEREKENEN-EE = 'Y'
   DO  Bepalen-verzuim-dagen-EPI
   LET #days-EPI-ELI = #som-dagen-EPI * #gem-deeltd-factor-ELI
END-IF

end-procedure Bepalen-verzuimde-kal-dagen

!************************************************************************
! Determine illness length
!************************************************************************
Begin-procedure Bepalen-verzuim-duur

let #length-IPI-ILI = 0
let #length-IPI-ELI = 0
let #length-EPI-ILI = 0
let #length-EPI-ELI = 0

!***********************************************
! Determine illness length IPI ILI
!***********************************************

if  $end-IPI-ILI = 'Y'
    do dtu-diff-days($BEGIN-DT-DTU,$RETURN-DT-DTU,#length-IPI-ILI)
end-if

!***********************************************
! Determine illness length IPI ELI
!***********************************************

if  $end-IPI-ELI = 'Y'

    let $START-DT-DUUR-IE-DTU = $BEGIN-DT-DTU

    IF $EIND-IE-ECHT = 'Y'
       Do dtu-diff-days($START-DT-DUUR-IE-DTU,$EIND-DT-DUUR-IE-DTU,#length-IPI-ELI)
    END-IF
end-if

!***********************************************
! Determine illness length EPI ILI
! For this determination we make use of the procedure
! for determining the illness caledar days EPI
!***********************************************

if  $END-EPI-ILI = 'Y'

    let $START-DT-DUUR-EI-DTU  = $BEGIN-DT-DTU
    let $START-DT-DAYS-EPI-DTU = $BEGIN-DT-DTU

    if  $EIND-EI-ECHT = 'Y'
        let $EIND-DT-DAYS-EPI-DTU  = $EIND-DT-DUUR-EI-DTU
        Do Convert-From-DTU-Date($START-DT-DAYS-EPI-DTU,$START-DT-DAYS-EPI-NAT)
        Do Convert-From-DTU-Date($EIND-DT-DAYS-EPI-DTU,$EIND-DT-DAYS-EPI-NAT)
        DO  Bepalen-verzuim-dagen-EPI
        LET #length-EPI-ILI = #som-dagen-EPI
    END-IF
end-if
!***********************************************
! Determine illness length EPI ELI
! For this determination we make use of the procedure
! for determining the illness caledar days EPI
!***********************************************

IF  $END-EPI-ELI = 'Y'
    LET $START-DT-DUUR-EE-DTU = $BEGIN-DT-DTU
    let $START-DT-DAYS-EPI-DTU = $BEGIN-DT-DTU

    IF $EIND-EE-ECHT = 'Y'
        let $EIND-DT-DAYS-EPI-DTU  = $EIND-DT-DUUR-EE-DTU
        Do Convert-From-DTU-Date($START-DT-DAYS-EPI-DTU,$START-DT-DAYS-EPI-NAT)
        Do Convert-From-DTU-Date($EIND-DT-DAYS-EPI-DTU,$EIND-DT-DAYS-EPI-NAT)

        DO  Bepalen-verzuim-dagen-EPI
        LET #length-EPI-ELI = #som-dagen-EPI
    END-IF
END-IF

End-procedure Bepalen-verzuim-duur

!************************************************************************
! Determine parttime factor                                             *
!************************************************************************
begin-procedure Bepalen-deeltijd-factor

let #som-deeltijd-factor = 0

CREATE-ARRAY NAME=DEELTIJD SIZE=100  FIELD=EFFDT-DEELTD:CHAR
             FIELD=STD_HOURS:NUMBER

!Gebruikte tellers: #C en #D
BEGIN-SELECT LOOPS=1
JA.EFFDT
JA.STD_HOURS
      let #vorige-uren  = &JA.STD_HOURS
FROM  PS_JOB JA
WHERE JA.EMPLID    = &EM1.EMPLID
AND   JA.EMPL_RCD = &EM1.EMPL_RCD
AND   JA.EFFDT     =
      (SELECT MAX(JB.EFFDT) FROM PS_JOB JB
       WHERE  JB.EFFDT     <= $START-DT-DEELTD-NAT
       AND    JB.EMPLID     = JA.EMPLID
       AND    JB.EMPL_RCD  = JA.EMPL_RCD )
END-SELECT

DO  VUL-ARRAY-DEELTIJD
LET #D = 0
LET #MAX-C = #C -1
LET $VORIGE-DT-DEELTD-NAT = $START-DT-DEELTD-NAT
LET $VORIGE-DT-DEELTD-DTU = $START-DT-DEELTD-DTU

WHILE #D <= #MAX-C
      DO BEPAAL-DEELTIJD
END-WHILE

IF #C = 0
   DO dtu-diff-days($START-DT-DEELTD-DTU,$EIND-DT-DEELTD-DTU,#DIFF-DAYS)
ELSE
   do dtu-diff-days($VORIGE-DT-DEELTD-dtu,$EIND-DT-DEELTD-DTU,#DIFF-DAYS)
END-IF

let #SOM-DEELTIJD-FACTOR = (#DIFF-DAYS * #vorige-uren) + #SOM-DEELTIJD-FACTOR
let #SOM-DEELTIJD-FACTOR = #SOM-DEELTIJD-FACTOR / &INS.STD_HRS_DEFAULT

END-PROCEDURE Bepalen-deeltijd-factor

!****************************************************************

BEGIN-PROCEDURE VUL-ARRAY-DEELTIJD

LET #C=0
BEGIN-SELECT
JC.EFFDT
    PUT &JC.EFFDT INTO DEELTIJD(#C) EFFDT-DEELTD
JC.STD_HOURS
    PUT &JC.STD_HOURS INTO DEELTIJD(#C) STD_HOURS
    LET #C = #C + 1
FROM  PS_JOB JC
WHERE JC.EMPLID    = &EM1.EMPLID
AND   JC.EMPL_RCD = &EM1.EMPL_RCD
AND   JC.EFFDT     > $START-DT-DEELTD-NAT
AND   JC.EFFDT     < $EIND-DT-DEELTD-NAT
ORDER BY JC.EFFDT ASC
END-SELECT

END-PROCEDURE VUL-ARRAY-DEELTIJD

!**************************************************************
BEGIN-PROCEDURE BEPAAL-DEELTIJD

GET $EFFDT-DEELTD #STD_HOURS FROM DEELTIJD(#D) EFFDT-DEELTD STD_HOURS

IF #STD_HOURS <> #vorige-uren
   Do Convert-To-DTU-Date($EFFDT-DEELTD,$EFFDT-DEELTD-DTU)
   do dtu-diff-days($VORIGE-DT-DEELTD-dtu,$EFFDT-DEELTD-DTU,#DIFF-DAYS)

   LET #SOM-DEELTIJD-FACTOR = (#DIFF-DAYS * #vorige-uren) + #SOM-DEELTIJD-FACTOR
   LET $VORIGE-DT-DEELTD-nat = $EFFDT-DEELTD
   Do Convert-To-DTU-Date($VORIGE-DT-DEELTD-nat,$VORIGE-DT-DEELTD-dtu)
   LET #vorige-uren = #STD_HOURS
END-IF

LET #D = #D + 1
END-PROCEDURE BEPAAL-DEELTIJD

!************************************************************************
! Determine illness days IPI                                            *
!************************************************************************
begin-procedure Bepalen-verzuim-dagen-IPI

let #SOM-DAGEN-IPI = 0
LET #ZOEK-PERC-IPI = 100
LET $ZOEK-DT-DAYS-IPI-NAT = $START-DT-DAYS-IPI-NAT
LET $ZOEK-DT-DAYS-IPI-DTU = $START-DT-DAYS-IPI-DTU

CREATE-ARRAY NAME=DAYS-IPI SIZE=100  FIELD=EFFDT-IPI:CHAR
             FIELD=PERC-IPI:NUMBER
!Gebruikte tellers : #E en #F

BEGIN-SELECT LOOPS=1
IDA.COMMENT_DT
IDA.ILL_PERCENT_NLD
      let #ZOEK-perc-IPI  = &IDA.ILL_PERCENT_NLD

FROM  PS_ABS_HIST_DET IDA
WHERE IDA.EMPLID    = &EM1.EMPLID
AND   IDA.EMPL_RCD = &EM1.EMPL_RCD
AND   IDA.BEGIN_DT  = &IL1.BEGIN_DT
AND   IDA.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND   IDA.COMMENT_DT     =
      (SELECT MAX(IDB.COMMENT_DT) FROM PS_ABS_HIST_DET IDB
       WHERE  IDB.COMMENT_DT  <= $ZOEK-DT-DAYS-IPI-NAT
       AND    IDB.EMPLID       = IDA.EMPLID
       AND    IDB.EMPL_RCD    = IDA.EMPL_RCD
       AND    IDB.BEGIN_DT     = &IL1.BEGIN_DT
       AND    IDB.ABSENCE_TYPE = &IL1.ABSENCE_TYPE )
END-SELECT

DO  VUL-ARRAY-DAYS-IPI
LET #F = 0
LET #MAX-E = #E -1

WHILE #F <= #MAX-E
      DO BEPAAL-DAYS-IPI
END-WHILE

Do dtu-diff-days($ZOEK-DT-DAYS-IPI-DTU,$EIND-DT-DAYS-IPI-DTU,#DIFF-DAYS)

let #SOM-DAGEN-IPI = ((#DIFF-DAYS * #ZOEK-PERC-IPI)/100) + #SOM-DAGEN-IPI

end-procedure Bepalen-verzuim-dagen-IPI
!*************************************************************************
!****************************************************************
BEGIN-PROCEDURE VUL-ARRAY-DAYS-IPI
LET #E=0

BEGIN-SELECT
IDC.COMMENT_DT
    PUT &IDC.COMMENT_DT INTO DAYS-IPI(#E) EFFDT-IPI
IDC.ILL_PERCENT_NLD
    PUT &IDC.ILL_PERCENT_NLD INTO DAYS-IPI(#E) PERC-IPI
    LET #E = #E + 1
FROM  PS_ABS_HIST_DET IDC
WHERE IDC.COMMENT_DT  < $EIND-DT-DAYS-IPI-NAT
AND   IDC.EMPLID      = &EM1.EMPLID
AND   IDC.EMPL_RCD   = &EM1.EMPL_RCD
AND   IDC.BEGIN_DT    = &IL1.BEGIN_DT
AND   IDC.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND   IDC.COMMENT_DT  > $START-DT-DAYS-IPI-NAT
ORDER BY IDC.COMMENT_DT ASC
END-SELECT

END-PROCEDURE VUL-ARRAY-DAYS-IPI

!**************************************************************
BEGIN-PROCEDURE BEPAAL-DAYS-IPI

GET $EFFDT-IPI #PERC-IPI FROM DAYS-IPI(#F) EFFDT-IPI PERC-IPI

IF #perc-IPI <> #vorig-perc-IPI
   Do Convert-To-DTU-Date($EFFDT-IPI,$EFFDT-IPI-DTU)
   do dtu-diff-days($ZOEK-DT-DAYS-IPI-DTU,$EFFDT-IPI-DTU,#DIFF-DAYS)

   LET #SOM-DAGEN-IPI = ((#DIFF-DAYS * #ZOEK-PERC-IPI)/100) + #SOM-DAGEN-IPI

   LET #ZOEK-perc-IPI = #perc-IPI
   LET $ZOEK-DT-DAYS-IPI-DTU = $EFFDT-IPI-DTU
END-IF

LET #F = #F + 1
END-PROCEDURE BEPAAL-DAYS-IPI

!***********************************************************************

!************************************************************************
! Determine Illness days EPI
! The following procedure is being used for the determination of the
! illness calendar days (#ill-days-EPI-*) as for the illness length (#length-EPI-*).
! The difference is in the parameters begin and end date
! #ill-days: begindatum = - illness begin date, when within month
!                         - begin of the month
!            einddatum  = - illness return date, when within month
!                         - start of parttime
!                         - start of longterm
!                         - 1st day next month
!
! #length:   begindatum =   illness begin date
!            einddatum  = - illness return date
!                         - start of parttime
!                         - start of longterm
! The result of this procedure, the number of days EPI, is corrected for the
! determination of the number of illness days by the parttime factor.
! This is done in the procedure 'Bepalen-verzuimde-kal-dagen'
! For the determination of the illness length this is not done and the
! length is set to the outcome of this procedure.
!************************************************************************
begin-procedure Bepalen-verzuim-dagen-EPI

let #SOM-DAGEN-EPI = 0
LET #ZOEK-PERC-EPI = 100
LET $ZOEK-DT-DAYS-EPI-NAT = $START-DT-DAYS-EPI-NAT
LET $ZOEK-DT-DAYS-EPI-DTU = $START-DT-DAYS-EPI-DTU


CREATE-ARRAY NAME=DAYS-EPI SIZE=100  FIELD=EFFDT-EPI:CHAR
             FIELD=PERC-EPI:NUMBER
!Gebruikte tellers: #G en #H

BEGIN-SELECT LOOPS=1
IDF.COMMENT_DT
IDF.ILL_PERCENT_NLD
      let #zoek-perc-EPI  = &IDF.ILL_PERCENT_NLD
FROM  PS_ABS_HIST_DET IDF
WHERE IDF.EMPLID     = &EM1.EMPLID
AND   IDF.EMPL_RCD  = &EM1.EMPL_RCD
AND   IDF.BEGIN_DT   = &IL1.BEGIN_DT
AND   IDF.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND   IDF.COMMENT_DT =
      (SELECT MAX(IDG.COMMENT_DT) FROM PS_ABS_HIST_DET IDG
       WHERE  IDG.COMMENT_DT <= $zoek-dt-days-EPI-nat
       AND    IDG.EMPLID      = IDF.EMPLID
       AND    IDG.EMPL_RCD   = IDF.EMPL_RCD
       AND    IDG.BEGIN_DT    = &IL1.BEGIN_DT
       AND    IDG.ABSENCE_TYPE = &IL1.ABSENCE_TYPE )
END-SELECT

DO  VUL-ARRAY-DAYS-EPI
LET #H = 0
LET #MAX-G = #G -1

WHILE #H <= #MAX-G
      DO BEPAAL-DAYS-EPI
END-WHILE

IF #ZOEK-PERC-EPI = 100
   Do dtu-diff-days($ZOEK-DT-DAYS-EPI-DTU,$EIND-DT-DAYS-EPI-DTU,#DIFF-DAYS)
   let #SOM-DAGEN-EPI = #DIFF-DAYS + #SOM-DAGEN-EPI
END-IF

end-procedure Bepalen-verzuim-dagen-EPI

!****************************************************************
!****************************************************************
BEGIN-PROCEDURE VUL-ARRAY-DAYS-EPI
LET #G=0
BEGIN-SELECT
IDH.COMMENT_DT
    PUT &IDH.COMMENT_DT INTO DAYS-EPI(#G) EFFDT-EPI
IDH.ILL_PERCENT_NLD
    PUT &IDH.ILL_PERCENT_NLD INTO DAYS-EPI(#G) PERC-EPI
    LET #G = #G + 1
FROM  PS_ABS_HIST_DET IDH
WHERE IDH.COMMENT_DT < $EIND-DT-DAYS-EPI-NAT
AND   IDH.EMPLID     = &EM1.EMPLID
AND   IDH.EMPL_RCD  = &EM1.EMPL_RCD
AND   IDH.BEGIN_DT   = &IL1.BEGIN_DT
AND   IDH.ABSENCE_TYPE = &IL1.ABSENCE_TYPE
AND   IDH.COMMENT_DT > $START-DT-DAYS-EPI-NAT
ORDER BY IDH.COMMENT_DT ASC
END-SELECT

END-PROCEDURE VUL-ARRAY-DAYS-EPI

!**************************************************************
BEGIN-PROCEDURE BEPAAL-DAYS-EPI

GET $EFFDT-EPI #PERC-EPI FROM DAYS-EPI(#H) EFFDT-EPI PERC-EPI

IF  #ZOEK-perc-EPI = 100
AND #PERC-EPI      < 100
   Do Convert-To-DTU-Date($EFFDT-EPI,$EFFDT-EPI-DTU)
   do dtu-diff-days($ZOEK-DT-DAYS-EPI-DTU,$EFFDT-EPI-DTU,#DIFF-DAYS)
   let #SOM-DAGEN-EPI = #DIFF-DAYS + #SOM-DAGEN-EPI
   LET $ZOEK-DT-DAYS-EPI-DTU = $EFFDT-EPI-DTU
   LET #ZOEK-perc-EPI = #PERC-EPI
ELSE
   if #ZOEK-perc-EPI < 100
   AND #PERC-EPI     = 100
       Do Convert-To-DTU-Date($EFFDT-EPI,$EFFDT-EPI-DTU)
       LET $ZOEK-DT-DAYS-EPI-DTU = $EFFDT-EPI-DTU
       LET #ZOEK-perc-EPI = #PERC-EPI
   else
       if  #zoek-perc-EPI < 100
       and #perc-EPI      < 100
           Do Convert-To-DTU-Date($EFFDT-EPI,$EFFDT-EPI-DTU)
           LET $ZOEK-DT-DAYS-EPI-DTU = $EFFDT-EPI-DTU
           LET #ZOEK-perc-EPI = #PERC-EPI
       else
           let #ZOEK-perc-EPI = #PERC-EPI
       end-if
    end-if
END-IF

LET #H = #H + 1

END-PROCEDURE BEPAAL-DAYS-EPI
!***********************************************************************

!*************************************************************************
! Initialisation; After processing each individual employment: Init-empl
! After each individual illness: Init-ill
!*************************************************************************
Begin-procedure Init-empl
let #age = 0
let $age = ''
let #empl-ILI = 0
let #empl-ELI = 0
let #fte-ILI = 0
let #fte-ELI = 0
let #av-days-ILI = 0
let #av-days-ELI = 0
let $start-full = 'N'
let $start-part = 'N'
let $end-EPI-ELI = 'N'
let $end-EPI-ILI = 'N'
let $end-IPI-ELI = 'N'
let $end-IPI-ILI = 'N'
let #days-EPI-ELI = 0
let #days-EPI-ILI = 0
let #days-IPI-ELI = 0
let #days-IPI-ILI = 0
let #length-EPI-ELI = 0
let #length-EPI-ILI = 0
let #length-IPI-ELI = 0
let #length-IPI-ILI = 0

let $DT-INGANG-LV-CMP    = ''
let $DT-INGANG-LV-NAT    = ''
let $DT-INGANG-LV-DTU    = ''
LET $INGANG-LV-GEVONDEN  = 'N'
let #V-PERC-LV = 0
let $V-EFFDT-LV-NAT = ''
let $start-dt-dtu = ''
LET $START-DT-NAT = ''
LET $STOP = 'N'

End-procedure Init-empl

!*************************************************************************
Begin-procedure Init-ill

let $start-full = 'N'
let $start-part = 'N'
let $end-EPI-ELI = 'N'
let $end-EPI-ILI = 'N'
let $end-IPI-ELI = 'N'
let $end-IPI-ILI = 'N'
let #days-EPI-ELI = 0
let #days-EPI-ILI = 0
let #days-IPI-ELI = 0
let #days-IPI-ILI = 0
let #length-EPI-ELI = 0
let #length-EPI-ILI = 0
let #length-IPI-ELI = 0
let #length-IPI-ILI = 0

End-procedure Init-ill

!*************************************************************************
! Mask numerical fields                                                  *
!*************************************************************************
begin-procedure Mask-numbers

Do Format-number(#age,$age,'999')
Do Format-number(#FromYear,$FromYear,'9999')
Do Format-number(#FromMonth,$FromMonth,'99')

end-procedure Mask-numbers
!*************************************************************************
! Insert statistics                                                      *
!*************************************************************************
begin-procedure Insert-statistics
if &IL1.ABSENCE_TYPE = ''
   let $ILL-TYPE = ' '
end-if

do format-variables
begin-sql On-Error=SQL-Error
INSERT INTO PS_ABS_STAT_NLD
(EMPLID
,EMPL_RCD
,COMPANY
,SETID
,DEPTID
,NL_FROM_YEAR
,NL_FROM_MONTH
,BEGIN_DT
,CREATION_DT
,SEX
,ABSENCE_TYPE
,AGE_NLD
,EMPL_RCD_ILI_NLD
,EMPL_RCD_ELI_NLD
,FTE_ILI_NLD
,FTE_ELI_NLD
,ILL_AVDAYS_ILI_NLD
,ILL_AVDAYS_ELI_NLD
,ILL_START_FULL_NLD
,ILL_START_PART_NLD
,ILL_ENDEPI_ELI_NLD
,ILL_ENDEPI_ILI_NLD
,ILL_ENDIPI_ELI_NLD
,ILL_ENDIPI_ILI_NLD
,ILL_DAYEPI_ELI_NLD
,ILL_DAYEPI_ILI_NLD
,ILL_DAYIPI_ELI_NLD
,ILL_DAYIPI_ILI_NLD
,ILL_LENEPI_ELI_NLD
,ILL_LENEPI_ILI_NLD
,ILL_LENIPI_ELI_NLD
,ILL_LENIPI_ILI_NLD
)

values (&EM1.EMPLID
 ,&EM1.EMPL_RCD
 ,$Company
 ,&J1.SETID_DEPT
 ,&J1.DEPTID
 ,#FROMYEAR
 ,#FROMMONTH
 ,$IL1_bgn_dt
 ,$creation-dt
 ,&PD1.SEX
 ,$ILL-TYPE
 ,#AGE
 ,#empl-ILI
 ,#empl-ELI
 ,#fte-ILI
 ,#fte-ELI
 ,#av-days-ILI
 ,#av-days-ELI
 ,$start-full
 ,$start-part
 ,$end-EPI-ELI
 ,$end-EPI-ILI
 ,$end-IPI-ELI
 ,$end-IPI-ILI
 ,#days-EPI-ELI
 ,#days-EPI-ILI
 ,#days-IPI-ELI
 ,#days-IPI-ILI
 ,#length-EPI-ELI
 ,#length-EPI-ILI
 ,#length-IPI-ELI
 ,#length-IPI-ILI
 )
end-sql

end-procedure Insert-statistics




begin-procedure format-variables

let #age = Edit(#age,'999')
let #FromYear = Edit(#FromYear,'9999')
let #FromMonth = Edit(#FromMonth,'99')
let #empl-ILI = Edit(#empl-ili,'9999999999.999')
let #empl-ELI = Edit(#empl-eli,'9999999999.999')
let #fte-ILI  = Edit(#fte-ili,'9999999999.999')
let #fte-ELI  = Edit(#fte-eli,'9999999999.999')
let #av-days-ILI = Edit(#av-days-ili,'9999999999.999')
let #av-days-ELI = Edit(#av-days-ELI,'9999999999.999')
let #days-EPI-ELI = Edit(#days-EPI-ELI,'9999999999.999')
let #days-EPI-ILI = Edit(#days-EPI-ILI,'9999999999.999')
let #days-IPI-ELI = Edit(#days-IPI-ELI,'9999999999.999')
let #days-IPI-ILI = Edit(#days-IPI-ILI,'9999999999.999')
let #length-EPI-ELI = Edit(#length-EPI-ELI,'9999999999.999')
let #length-EPI-ILI = Edit(#length-EPI-ILI,'9999999999.999')
let #length-IPI-ELI = Edit(#length-IPI-ELI,'9999999999.999')
let #length-IPI-ILI = Edit(#length-IPI-ILI,'9999999999.999')

end-procedure format-variables


















!*************************************************************************
! All include files                                                      *
!*************************************************************************

#include 'stdapi.sqc'    ! Routines to Update Run Status
#include 'reset.sqc'     ! Reset printer
#include 'curdttim.sqc'  ! Current Date and Time
#Include 'datetime.sqc'  ! Routines for date and time formatting
#Include 'datemath.sqc'  ! Routines for date calculations
#Include 'tranctrl.sqc'  ! Transaction control

#include 'hrctlnld.sqc'  !Get run control parameter values (NL)
#include 'hrgetnld.sqc'  !Get values mask routines (NL)
#include 'number.sqc'
!*********** Einde Programma ******************************************
