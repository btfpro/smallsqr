!*******************************************
!  TAX100: Federal Tax Data Status Report  *
!*******************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2007/04/25:15:16:29                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  702214                                              !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
! HP00001       Add PublicSector indicator                             *
! HP99998       E&G 7.51 AU Merge                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization
#Include 'usarpt.sqc'  !Get USA variables

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'TAX100' to $ReportID
  move 'Federal Tax Data Status Report' to $ReportTitle
  display $ReportTitle

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Calendar-Year-Id
  do Get-Current-DateTime

  If $Prcs_Process_Instance = ''
    Display 'Report cannot be run outside of PeopleSoft, please use process scheduler.'
    Stop
  End-if

  do Select-Parameters
  move $RC_PAY.AsOfDate to $AsOfDate
  do Update-As-Of-Date

  do Get-Date-Codes
  move $AsOfYYYY  to #AsOfYYYY
  move $AsOfMonth to #AsOfMonth

! determine first day of report year
  let $Date_In =  '01' || '/' || '01' || '/' || $AsOfYYYY
  do Format-DateTime($Date_In, $JAN_1_YEAR, {DEFDATE},'','native')
  do Process-Main
  do Reset
end-procedure

begin-procedure Process-Run-Control
end-procedure

begin-heading 8
  #Include 'stdhdg09.sqc'
  print 'Effective'                                                 (+3,47)
  print 'Taxable    Allow-  Special'                                (0,101)
  print 'Additional  Additional   NRA W/H'                          (0,144)
  print 'Employee ID  Name'                                         (+1,1)
  print '   Date     Dept. ID    Dept. Name      SSN'               (0,46)
  print 'Gross YTD    ances   FWT Status'                           (0,99)
  print 'W/H %  W/H Amount    Rule'                                 (0,149)
end-heading

begin-procedure Update-As-Of-Date
begin-SQL on-error=Bad-Date
UPDATE PSASOFDATE SET ASOFDATE = $AsOfDate
end-SQL
end-procedure

begin-procedure Process-Main
begin-SELECT
A.COMPANY () on-break print=never procedure=Company-Change Level=1
A.EMPLID                    (+1,1)                on-break Level=2
A.NAME                      (0,14)                on-break Level=2
B.EFFDT
  do Format-DateTime(&B.EffDt, $out, {DEFDATE}, '', '')
  print $out                (0,46)                on-break Level=2
P1.NATIONAL_ID
  move &A.Company to $Company  !for use in Heading procedure
  print &P1.NATIONAL_ID              (0,83) edit xxx-xx-xxxx
                                                  on-break Level=2
  do Get-FWT-Gross-YTD
  do Format-Number(#TxGrs_YTD, $out, '99,999,999.99mi')
  print $out                (0,95)                on-break Level=2
  move 0 to #TxGrs_YTD
B.FWT_ALLOWANCES            (0,114) EDIT 99       on-break Level=2
B.SPECIAL_FWT_STATUS
  if &B.SPECIAL_FWT_STATUS = 'N'
   print 'None'                     (0,120)       on-break Level=2
   else
    if &B.SPECIAL_FWT_STATUS = 'E'
     print 'No txble gross, no tax' (0,120)       on-break Level=2
     else
      if &B.SPECIAL_FWT_STATUS = 'G'
       print 'Zero W/H...'          (0,120)       on-break Level=2
      else
       print 'Non Resident Alien'   (0,120)       on-break Level=2
      end-if
    end-if
  end-if
B.FWT_ADDL_PCT                      (0,147) edit B99.999    on-break Level=2
B.FWT_ADDL_AMT                      (0,156) edit B99,999.99 on-break Level=2
B.NRA_EXEMPT_WHRULE
    if &B.SPECIAL_FWT_STATUS = 'A'
        if &B.NRA_EXEMPT_WHRULE = 'N'
          print 'Subject'           (0,169)       on-break Level=2
        else
          if &B.NRA_EXEMPT_WHRULE = 'Y'
            print 'Exempt'          (0,169)       on-break Level=2
          else
            print 'N/A'             (0,171)       on-break Level=2
          end-if
        end-if
    end-if
A.DEPTID                    (0,58)                          on-break Level=3
A.DEPTNAME_ABBRV            (0,70)                          on-break Level=3

!--  Levels were added to suppress amount print when employee
!--   had data records with more than one department


FROM  PS_PERSONNEL A, PS_FED_TAX_DATA B,  PS_PERS_NID P1
WHERE B.COMPANY            = A.COMPANY
  AND B.EMPLID             = A.EMPLID
  AND B.EMPLID             = P1.EMPLID
  AND P1.COUNTRY           = {NID_COUNTRY}
  AND P1.NATIONAL_ID_TYPE  = $PAYROLL_NID_TYPE
  AND (B.SPECIAL_FWT_STATUS = 'E' OR
       B.SPECIAL_FWT_STATUS = 'G' OR
       B.FWT_ALLOWANCES     > 10)
  AND B.EFFDT              =
      (SELECT MAX(B1.EFFDT)
         FROM PS_FED_TAX_DATA B1
        WHERE B1.COMPANY    = B.COMPANY
          AND B1.EMPLID     = B.EMPLID
          AND B1.EFFDT     <= $AsOfDate)

         !Emplid was active at anytime during current year - previous to report date
  AND  (EXISTS
         (SELECT 'X' FROM PS_JOB C1
           WHERE A.EMPLID = C1.EMPLID
             AND C1.EMPL_STATUS IN ('A','L','P','Q','S','U','V')
             AND C1.EFFDT BETWEEN $JAN_1_YEAR AND $AsOfDate)

       !Emplid was active coming into current year
     OR EXISTS
         (SELECT 'X' FROM PS_JOB C2
           WHERE A.EMPLID = C2.EMPLID
             AND C2.EMPL_STATUS IN ('A','L','P','Q','S','U','V')
             AND C2.EFFDT = (SELECT MAX(C3.EFFDT) FROM PS_JOB C3
                               WHERE A.EMPLID = C3.EMPLID
                                 AND C3.EFFDT <= $JAN_1_YEAR)))

  ORDER BY A.COMPANY,
         A.EMPLID,
         A.NAME,
         B.EFFDT,
         P1.NATIONAL_ID,
         B.FWT_ALLOWANCES,
         B.SPECIAL_FWT_STATUS,
         B.FWT_ADDL_PCT,
         B.FWT_ADDL_AMT,
         A.DEPTID,
         A.DEPTNAME_ABBRV

end-SELECT
end-procedure

begin-procedure Company-Change
  new-page
end-procedure

begin-procedure Get-FWT-Gross-YTD
!We want to retrieve the Tax Balance with the highest MonthCd;
!Therefore the reason for the "Loops" option and the DESCending order.
begin-SELECT Loops=1
TB1.TXGRS_YTD
   LET #TXGRS_YTD = &TB1.TXGRS_YTD
TB1.BALANCE_PERIOD
FROM  PS_TAX_BALANCE TB1
WHERE TB1.COMPANY         = &A.Company
  AND TB1.EMPLID          = &A.EmplID
  AND TB1.STATE           = '$U'
  AND TB1.TAX_CLASS       = 'H'
  AND TB1.BALANCE_YEAR    = #AsOfYYYY
  AND TB1.BALANCE_PERIOD <= #AsOfMonth
  AND TB1.BALANCE_ID      = $Calendar_Year_Id
ORDER BY TB1.BALANCE_PERIOD DESC
end-SELECT
end-procedure

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'getasodt.sqc'  !Get-As-Of-Date procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datemath.sqc'  !Routine for determining end of month
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'payrctl2.sqc'  !Get-Run-Control procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'getmonnm.sqc'  !Get-Month-Name
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
