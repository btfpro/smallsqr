!*******************************************
!  BUD009:  Encumbrance Error Messages     *
!*******************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:11:23:47                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
! This program is specific to HRMS for Public Sector.                  *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !Printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-report


begin-procedure Init-Report
  move 'BUD009' to $ReportID

  do Init-DateTime
  do Init-Number
  do Stdapi-Init

  do REPORT-TRANSLATION                                               !F-LPARKER-125 (CAMI)
  display $ReportTitle

  if $Prcs_Process_Instance = ''
    input $SelectSetID maxlen=5 'Enter SetID (related to Department Table)' type=char
    uppercase $SelectSetID
    input $DeptID_No_Edit maxlen=10 'Enter Department ID (or "ALL")' type=char
    uppercase $DeptID_No_Edit
  else
    do Select-Parameters
    let $SelectSetID = rtrim($SetID, '')
  end-if

  do Edit-DeptID
  do Get-Current-DateTime
  do Array-Initialization

end-procedure


!***********************************************************************
! F-LPARKER-125 (CAMI)                                                 *
! Read language-dependent text from the database using BUD009          *
! program id.                                                          *
!***********************************************************************
begin-procedure REPORT-TRANSLATION

  let $language_cd = $PRCS_LANGUAGE_CD
  do Init_Report_Translation($ReportID,$Language_Cd)

  do Get_Field_Information ('BUD009', 'DEPT',             $BUD009_DEPT,            #DW)
  do Get_Field_Information ('BUD009', 'DEPT_ERRORS',      $BUD009_DEPT_ERRORS,     #DW)
  do Get_Field_Information ('BUD009', 'EMPL_RCD',         $BUD009_EMPL_RCD,        #DW)
  do Get_Field_Information ('BUD009', 'EMPLID',           $BUD009_EMPLID,          #DW)
  do Get_Field_Information ('BUD009', 'JOBCD_SETID',      $BUD009_JOBCD_SETID,     #DW)
  do Get_Field_Information ('BUD009', 'JOBCODE',          $BUD009_JOBCODE,         #DW)
  do Get_Field_Information ('BUD009', 'MESSAGE',          $BUD009_MESSAGE,         #DW)
  do Get_Field_Information ('BUD009', 'MESSAGE_ID',       $BUD009_MESSAGE_ID,      #DW)
  do Get_Field_Information ('BUD009', 'POSN_NBR',         $BUD009_POSN_NBR,        #DW)
  do Get_Field_Information ('BUD009', 'POSN_POOL',        $BUD009_POSN_POOL,       #DW)
  do Get_Field_Information ('BUD009', 'REPORT_TITLE',     $REPORTTITLE,            #DW)
  do Get_Field_Information ('BUD009', 'TOTAL_ERRORS',     $BUD009_TOTAL_ERRORS,    #DW)

end-procedure


begin-procedure Get-Values
  do GET-SETID
  do GET-DEPTID-NO-EDIT
end-procedure


begin-procedure Edit-DeptID
  let $SelectDeptid = $Deptid_No_Edit
  let $SelectDeptid = rtrim($SelectDeptID,'')
  if $SelectDeptID = 'ALL'
    let $SelectDeptid = '%'
  else
    let $SelectDeptid = $SelectDeptId || '%'
  end-if
end-procedure


begin-procedure Array-Initialization
  create-array name=Totals size=3 -
    field=TotalName:char field=total:number:1 field=startCol:number:1

  put $BUD009_TOTAL_ERRORS   into Totals(1) TotalName                 !F-LPARKER-125 (CAMI)
  put $BUD009_DEPT_ERRORS    into Totals(2) TotalName                 !F-LPARKER-125 (CAMI)

  put 77 into Totals(0) startCol(0)
end-procedure


begin-heading 6
  if $DeptID <> $priorDeptID
    do Get-Department-Name-with-SetID
    move $DeptID to $priorDeptID
  end-if
  let $ReportTitle2 = $BUD009_DEPT||' '||$DeptID||' '||$DeptName      !F-LPARKER-125 (CAMI)
  #Include 'stdhtr20.sqc'                                             !F-LPARKER-125 (CAMI)
  print $BUD009_POSN_POOL     (+1,1)                                  !F-LPARKER-125 (CAMI)
  print $BUD009_POSN_NBR      (0,12)                                  !F-LPARKER-125 (CAMI)
  print $BUD009_JOBCD_SETID   (0,24)                                  !F-LPARKER-125 (CAMI)
  print $BUD009_JOBCODE       (0,38)                                  !F-LPARKER-125 (CAMI)
  print $BUD009_EMPLID        (0,50)                                  !F-LPARKER-125 (CAMI)
  print $BUD009_EMPL_RCD      (0,62)                                  !F-LPARKER-125 (CAMI)
  print $BUD009_MESSAGE_ID    (0,72)                                  !F-LPARKER-125 (CAMI)
  print $BUD009_MESSAGE       (0,84)                                  !F-LPARKER-125 (CAMI)
end-heading


BEGIN-PROCEDURE Process-Main
begin-SELECT
A.SETID    () on-break print=never level=1
A.DEPTID   () on-break print=never level=2 procedure=DeptID-Change
A.POSITION_POOL_ID (1,1)
A.POSITION_NBR     (1,12)
A.SETID_JOBCODE    (1,24)
A.JOBCODE          (1,38)
A.EMPLID           (1,50)
A.EMPL_RCD         (1,62)
A.MSGID            (1,72)
C.DESCR            (1,84)
C.DESCRLONG
A.MSGDATA1
A.MSGDATA2
A.MSGDATA3

  move &C.DESCRLONG to $PRNT_DESCRLONG

  if $language_cd <> $position_language_cd                            !F-LPARKER-125 (CAMI)
     do LANG-RECORD-DETAILS                                           !F-LPARKER-125 (CAMI)
  end-if                                                              !F-LPARKER-125 (CAMI)

  print $PRNT_DESCRLONG       (2,84) WRAP 90 5

  let $msgdata = RTRIM(&A.Msgdata1, ' ')
  concat ';' with $msgdata
  let $field   = RTRIM(&A.Msgdata2, ' ')
  concat $field  with $msgdata
  concat ';' with $msgdata
  let $field   = RTRIM(&A.Msgdata3, ' ')
  concat $field  with $msgdata

  ! ICE518231000  Allow descr long to wrap onto more than 3 lines
  ! print msgdata on line immeidately following descr long
  print $Msgdata   (+1,84)
  print ' '        (+1,1)

  move &A.DEPTID   to $DeptID

  ARRAY-ADD 1 to TOTALS(2) TOTAL(0)
  NEXT-LISTING NEED=8

FROM  PS_ENCUMB_MSG A,
      PS_ENCUMB_MSG_TBL C

WHERE A.SETID  =    $SelectSetID
  AND A.DEPTID LIKE $SelectDeptID
  AND C.MSGID  =    A.MSGID

ORDER BY A.SETID,
         A.DEPTID,
         A.POSITION_POOL_ID,
         A.POSITION_NBR,
         A.SETID_JOBCODE,
         A.JOBCODE,
         A.EMPLID,
         A.EMPL_RCD

end-SELECT

  move 1 to #changeLevel
  move 'Y' to $End
  do Print-Totals

END-PROCEDURE


begin-procedure DeptID-Change
  move 2 to #changeLevel
  do Print-Totals
end-procedure


begin-procedure Print-Totals
  move 2 to #totalRow

  while #totalRow >= #changeLevel

    if #current-line > 55  !don't split a total series across pages
      new-page
    end-if

    move #totalRow to #rollRow
    subtract 1 from #rollRow
    get $TotalName from Totals(#totalRow) TotalName
    print $TotalName (+2,33)
    move 0 to #i

    while #i <= 0
      get #total from Totals(#totalRow) total(#i)
      get #startCol from Totals(0) startCol(#i)
      do Format-Number(#total, $out, '999')
      print $out (0,#startCol)
      array-add #total to Totals(#rollRow) total(#i)
      put 0 into Totals(#totalRow) total(#i)
      add 1 to #i
    end-while

    subtract 1 from #totalRow
  end-while

  if $End = 'Y'
    position (-1)
    do Reset
  end-if

  new-page
end-procedure


!***********************************************************************
! F-LPARKER-125 (CAMI)                                                 *
!***********************************************************************
begin-procedure LANG-RECORD-DETAILS
begin-SELECT
LC.DESCR
LC.DESCRLONG

  let $PRNT_DESCR = cond(rtrim(&LC.DESCR,' ')='',&C.DESCR,&LC.DESCR)
  let $PRNT_DESCRLONG = cond(rtrim(&LC.DESCRLONG,' ')='',&C.DESCRLONG,&LC.DESCRLONG)

FROM PS_ENCUMB_MSG_LNG LC
WHERE LC.MSGID = &A.MSGID
  AND LC.LANGUAGE_CD = $language_cd
end-SELECT

end-procedure


#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'getdptnm.sqc'  !Get Department Name.
#Include 'btrnctl1.sqc'  !Get run control parameters.
#Include 'btgetval.sqc'  !Formats run control parameters.
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language     !F-LPARKER-125 (CAMI)
