!***********************************************************************
! PER040:  IPEDS-S Report -- Federally specified format                *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                $Date:  2006/02/09:02:56:00                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      *
!  $Last Modified: July 13 2000 - Temp Alien to be designated as       *
!         Citizenship code 4 again.                                    *
!***********************************************************************
! This program is specific to HRMS for Public Sector.                  *
!***********************************************************************


#include 'setenv.sqc'           !Set environment
#Include 'setup32.sqc'          !printer and page-size initialization Landscape


!***********************************************************************
! Begin Report
!***********************************************************************
begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


!***********************************************************************
! Heading
!***********************************************************************
begin-heading 14

  #include 'stdhdg01.sqc'                   ! for standard heading
  print &E.Descr                                 (+2,1)
  print $Address1                                (+1,1)
  print $City                                    (+1,1)

  print 'Non-Resident'                           (+3,52,13)
  print '|'                                      (,+1,1)
  print '    Black   '                           (, 68,13)
  print '|'                                      (,+1,1)
  print ' Am-Indian/ '                           (, 84,13)
  print '|'                                      (,+1,1)
  print '   Asian/   '                           (, 100,13)
  print '|'                                      (,+1,1)
  print '  Hispanic  '                           (, 116,13)
  print '|'                                      (,+1,1)
  print '    White   '                           (, 132,13)
  print '|'                                      (,+1,1)
  print 'Race/Ethnicity'                         (, 147,15)
  print '|'                                      (,+0,1)
  print ' Grand Total'                           (, 165)

  print 'Line'                                   (+1,1,5)
  print 'Description'                            (, 6,12)
  print '    Alien   '                           (, 52,13)
  print '|'                                      (,+1,1)
  print 'Non-Hispanic'                           (, 69,12)
  print '|'                                      (,+1,1)
  print 'Alaskan-Native'                         (, 83,15)
  print '|'                                      (,+0,1)
  print 'Pacific Isle'                           (, 100,13)
  print '|'                                      (,+1,1)
  print '            '                           (, 116,13)
  print '|'                                      (,+1,1)
  print 'Non-Hispanic'                           (, 132,13)
  print '|'                                      (,+1,1)
  print '   Unknown  '                           (, 148,13
  print '|'                                      (,+1,1)
  print '  All Emps  '                           (, 165)

  print 'Men'                                    (+1,54,4)
  print 'Women'                                  (,59,6)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,70,4)
  print 'Women'                                  (,75,6)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,86,4)
  print 'Women'                                  (,91,6)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,102,4)
  print 'Women'                                  (,107,6)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,118,4)
  print 'Women'                                  (,123,6)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,134,4)
  print 'Women'                                  (,139,6)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,150,4)
  print 'Women'                                  (,155,6)
  print '|'                                      (,+1,1)
  print 'Men'                                    (,166,4)
  print 'Women'                                  (,171)

end-heading


!***********************************************************************
! Init Report
!***********************************************************************
begin-procedure Init-Report

  move 'PER040.SQR' to $ReportID
  move 'IPEDS-S Integrated PostSecondary Education Data System - Fall Staff Survey' to $ReportTitle

  do Init-Array
  do Stdapi-Init

  if $prcs_process_instance = ''
    input $Establishment 'Please Enter A Valid Establshment ID' maxlen=5 type=char
    do Ask-Calendar-Year
  else
    do Select-Parameters
  end-if

  let $ReportTitle = $Calendar_Year || ' ' || $ReportTitle

  move 0 to #part_g
  move 0 to #no_new_hires

end-procedure


begin-procedure Get-Values

  do Get-Calendar-Year
  let $Establishment  = RTRIM(&RUN_CNTL_HR.ESTABID, ' ')

end-procedure


! R-LPARKE-X8935, R-GGHERZ-YQ34G
!***********************************************************************
! Array to hold the Faculty Salary Levels
!***********************************************************************
begin-procedure Init-Array

  create-array name=Faculty-Salary-Ranges size=7
              field=LowFSal:number
              field=HighFSal:number
  move 6 to #maxFSalaryLevel
  put   100 29999 into Faculty-Salary-Ranges(0) LowFSal HighFSal
  put 30000 39999 into Faculty-Salary-Ranges(1) LowFSal HighFSal
  put 40000 49999 into Faculty-Salary-Ranges(2) LowFSal HighFSal
  put 50000 64999 into Faculty-Salary-Ranges(3) LowFSal HighFSal
  put 65000 79999 into Faculty-Salary-Ranges(4) LowFSal HighFSal
  put 80000 99999 into Faculty-Salary-Ranges(5) LowFSal HighFSal
  put 100000    0 into Faculty-Salary-Ranges(6) LowFSal HighFSal


! R-LPARKE-X8935,R-GGHERZ-YQ34G
!***********************************************************************
! Array to hold the Technical & Professional & Skilled Crafts Salary Levels
!***********************************************************************
  create-array name=Tech-Prof-Skilled-Salary-Ranges size=5
              field=LowNFSal:number
              field=HighNFSal:number
  move 4 to #maxNFSalaryLevel
  put   100 19999 into Tech-Prof-Skilled-Salary-Ranges(0) LowNFSal HighNFSal
  put 20000 29999 into Tech-Prof-Skilled-Salary-Ranges(1) LowNFSal HighNFSal
  put 30000 39999 into Tech-Prof-Skilled-Salary-Ranges(2) LowNFSal HighNFSal
  put 40000 49999 into Tech-Prof-Skilled-Salary-Ranges(3) LowNFSal HighNFSal
  put 50000     0 into Tech-Prof-Skilled-Salary-Ranges(4) LowNFSal HighNFSal


! R-LPARKE-X8935, R-GGHERZ-YQ34G
!***********************************************************************
! Array to hold the Clerical & Secretarial Salary Levels
!***********************************************************************
  create-array name=Clerical-Salary-Ranges size=5
              field=LowNFSal:number
              field=HighNFSal:number
  move 4 to #maxNFSalaryLevel
  put   100 19999 into Clerical-Salary-Ranges(0) LowNFSal HighNFSal
  put 20000 29999 into Clerical-Salary-Ranges(1) LowNFSal HighNFSal
  put 30000 39999 into Clerical-Salary-Ranges(2) LowNFSal HighNFSal
  put 40000 49999 into Clerical-Salary-Ranges(3) LowNFSal HighNFSal
  put 50000     0 into Clerical-Salary-Ranges(4) LowNFSal HighNFSal


! R-LPARKE-X8935, R-GGHERZ-YQ34G
!***********************************************************************
! Array to hold the Service/Maintenance Salary Levels
!***********************************************************************
  create-array name=Service-Salary-Ranges size=5
              field=LowSMSal:number
              field=HighSMSal:number
  move 4 to #maxSMSalaryLevel
  put   100 19999 into Service-Salary-Ranges(0) LowSMSal HighSMSal
  put 20000 29999 into Service-Salary-Ranges(1) LowSMSal HighSMSal
  put 30000 39999 into Service-Salary-Ranges(2) LowSMSal HighSMSal
  put 40000 49999 into Service-Salary-Ranges(3) LowSMSal HighSMSal
  put 50000     0 into Service-Salary-Ranges(4) LowSMSal HighSMSal


!***********************************************************************
! Array to hold the Report Detail lines
! Report-Detail(#) corresponds to the IPEDS-S Form Line Number
! Report-Detail(#) EEOCOL(#) stores the number of employees as
!   classified by Ethnic Group
! Report-Detail(#) StartCol(#) stores the physical column number
!   for printing
!***********************************************************************
  create-array name=Report-Detail size=111
              field=EEOCOL:number:15
              field=StartCol:number:15
  put 6 51 58 67 74 83 90 99 106 115 122 131 138 147 154 into Report-Detail(0) -
  StartCol(0) StartCol(1) StartCol(2) StartCol(3) StartCol(4) StartCol(5) -
  StartCol(6) StartCol(7) StartCol(8) StartCol(9) StartCol(10) StartCol(11) -
  StartCol(12) StartCol(13) StartCol(14)


!***********************************************************************
! Line Descriptions
! Create Array to hold line Descriptions
!***********************************************************************
  create-array name=LineDescription size=111
              field=Description:char
 PUT 'Less Than 9/10 Month Contracts:'               INTO LineDescription(1) Description
 PUT '9/10 Month Contracts: Below $30,000'           INTO LineDescription(2) Description
 PUT '$30,000 - 39,999'                              INTO LineDescription(3) Description
 PUT '$40,000 - 49,999'                              INTO LineDescription(4) Description
 PUT '$50,000 - 64,999'                              INTO LineDescription(5) Description
 PUT '$65,000 - 79,999'                              INTO LineDescription(6) Description
 PUT '$80,000 - 99,999'                              INTO LineDescription(7) Description
 PUT '$100,000 & Above'                              INTO LineDescription(8) Description
 PUT 'Total 9/10 Month Contracts'                    INTO LineDescription(9) Description
 PUT '11/12 Month Contracts: Below $30,000'          INTO LineDescription(10) Description
 PUT '$30,000 - 39,999'                              INTO LineDescription(11) Description
 PUT '$40,000 - 49,999'                              INTO LineDescription(12) Description
 PUT '$50,000 - 64,999'                              INTO LineDescription(13) Description
 PUT '$65,000 - 79,999'                              INTO LineDescription(14) Description
 PUT '$80,000 - 99,999'                              INTO LineDescription(15) Description
 PUT '$100,000 & Above'                              INTO LineDescription(16) Description
 PUT 'Total 11/12 Month Contracts'                   INTO LineDescription(17) Description
 PUT 'Part A Total'                                  INTO LineDescription(18) Description
 PUT 'Exec/Admin/Managerial: Below $30,000'          INTO LineDescription(19) Description
 PUT '$30,000 - 39,999'                              INTO LineDescription(20) Description
 PUT '$40,000 - 49,999'                              INTO LineDescription(21) Description
 PUT '$50,000 - 64,999'                              INTO LineDescription(22) Description
 PUT '$65,000 - 79,999'                              INTO LineDescription(23) Description
 PUT '$80,000 - 99,999'                              INTO LineDescription(24) Description
 PUT '$100,000 & Above'                              INTO LineDescription(25) Description
 PUT 'Total Exec/Admin/Managerial'                   INTO LineDescription(26) Description
 PUT 'Other Administrative: Below $30,000'           INTO LineDescription(27) Description
 PUT '$30,000 - 39,999'                              INTO LineDescription(28) Description
 PUT '$40,000 - 49,999'                              INTO LineDescription(29) Description
 PUT '$50,000 - 64,999'                              INTO LineDescription(30) Description
 PUT '$65,000 - 79,999'                              INTO LineDescription(31) Description
 PUT '$80,000 - 99,999'                              INTO LineDescription(32) Description
 PUT '$100,000 & Above'                              INTO LineDescription(33) Description
 PUT 'Total Other Administrative'                    INTO LineDescription(34) Description
 PUT 'Other Professionals Supp/Svc: Below $30,000 '  INTO LineDescription(35) Description
 PUT '$30,000 - 39,999'                              INTO LineDescription(36) Description
 PUT '$40,000 - 49,999'                              INTO LineDescription(37) Description
 PUT '$50,000 - 64,999'                              INTO LineDescription(38) Description
 PUT '$65,000 - 79,999'                              INTO LineDescription(39) Description
 PUT '$80,000 - 99,999'                              INTO LineDescription(40) Description
 PUT '$100,000 & Above'                              INTO LineDescription(41) Description
 PUT 'Total Other Professionals Support Services'    INTO LineDescription(42) Description
 PUT 'Technical & Paraprofessional: Below $20,000'   INTO LineDescription(43) Description
 PUT '$20,000 - 29,999'                              INTO LineDescription(44) Description
 PUT '$30,000 - 39,999'                              INTO LineDescription(45) Description
 PUT '$40,000 - 49,999'                              INTO LineDescription(46) Description
 PUT '$50,000 & Above'                               INTO LineDescription(47) Description
 PUT 'Total Technical & Paraprofessional'            INTO LineDescription(48) Description
 PUT 'Clerical & Secretarial: Below $20,000'         INTO LineDescription(49) Description
 PUT '$20,000 - 29,999'                              INTO LineDescription(50) Description
 PUT '$30,000 - 39,999'                              INTO LineDescription(51) Description
 PUT '$40,000 - 49,999'                              INTO LineDescription(52) Description
 PUT '$50,000 & Above'                               INTO LineDescription(53) Description
 PUT 'Total Clerical & Secretarial'                  INTO LineDescription(54) Description
 PUT 'Skilled Crafts: Below $20,000'                 INTO LineDescription(55) Description
 PUT '$20,000 - 29,999'                              INTO LineDescription(56) Description
 PUT '$30,000 - 39,999'                              INTO LineDescription(57) Description
 PUT '$40,000 - 49,999'                              INTO LineDescription(58) Description
 PUT '$50,000 & Above'                               INTO LineDescription(59) Description
 PUT 'Total Skilled Crafts'                          INTO LineDescription(60) Description
 PUT 'Service/Maintenance: Below $20,000'            INTO LineDescription(61) Description
 PUT '$20,000 - 29,999'                              INTO LineDescription(62) Description
 PUT '$30,000 - 39,999'                              INTO LineDescription(63) Description
 PUT '$40,000 - 49,999'                              INTO LineDescription(64) Description
 PUT '$50,000 & Above'                               INTO LineDescription(65) Description
 PUT 'Total Service/Maintenance'                     INTO LineDescription(66) Description
 PUT 'Total All Full-Time Employees'                 INTO LineDescription(67) Description
 PUT 'Part-time Employees: Faculty (Ins/Res/PubSvc)' INTO LineDescription(68) Description
 PUT 'Instruction/Research Assistants'               INTO LineDescription(69) Description
 PUT 'Exec/Admin/Managerial'                         INTO LineDescription(70) Description
 PUT 'Other Administrative'                          INTO LineDescription(71) Description
 PUT 'Other Professionals'                           INTO LineDescription(72) Description
 PUT 'Technical and Paraprofessionals'               INTO LineDescription(73) Description
 PUT 'Clerical and Secretarial'                      INTO LineDescription(74) Description
 PUT 'Skilled Crafts'                                INTO LineDescription(75) Description
 PUT 'Service/Maintenance'                           INTO LineDescription(76) Description
 PUT 'Total Part-Time Employees'                     INTO LineDescription(77) Description
 PUT 'Faculty With Tenure: Professors'               INTO LineDescription(78) Description
 PUT 'Associate Professors'                          INTO LineDescription(79) Description
 PUT 'Assistant Professors'                          INTO LineDescription(80) Description
 PUT 'Instructors'                                   INTO LineDescription(81) Description
 PUT 'Lecturers'                                     INTO LineDescription(82) Description
 PUT 'Other Faculty'                                 INTO LineDescription(83) Description
 PUT 'Total Faculty With Tenure'                     INTO LineDescription(84) Description
 PUT 'Non-Tenured Faculty/On Track: Professors'      INTO LineDescription(85) Description
 PUT 'Associate Professors'                          INTO LineDescription(86) Description
 PUT 'Assistant Professors'                          INTO LineDescription(87) Description
 PUT 'Instructors'                                   INTO LineDescription(88) Description
 PUT 'Lecturers'                                     INTO LineDescription(89) Description
 PUT 'Other Faculty'                                 INTO LineDescription(90) Description
 PUT 'Total Non-Tenured Faculty/On Track'            INTO LineDescription(91) Description
 PUT 'Non-Tenured Faculty/Not On Track: Professors'  INTO LineDescription(92) Description
 PUT 'Associate Professors'                          INTO LineDescription(93) Description
 PUT 'Assistant Professors'                          INTO LineDescription(94) Description
 PUT 'Instructors'                                   INTO LineDescription(95) Description
 PUT 'Lecturers'                                     INTO LineDescription(96) Description
 PUT 'Other Faculty'                                 INTO LineDescription(97) Description
 PUT 'Total Non-Tenured Faculty/Not On Track'        INTO LineDescription(98) Description
 PUT 'Total Faculty'                                 INTO LineDescription(99) Description
 PUT 'Faculty - Tenured'                             INTO LineDescription(100) Description
 PUT '        - Non-Tenured On Track'                INTO LineDescription(101) Description
 PUT '        - Non-Tenured Not On Track'            INTO LineDescription(102) Description
 PUT 'Executive/Admin/Managerial'                    INTO LineDescription(103) Description
 PUT 'Other Administrative'                          INTO LineDescription(104) Description
 PUT 'Other Professionals (Support/Services)'        INTO LineDescription(105) Description
 PUT 'Technical & Paraprofessionals'                 INTO LineDescription(106) Description
 PUT 'Clerical & Secretarial'                        INTO LineDescription(107) Description
 PUT 'Skilled Crafts'                                INTO LineDescription(108) Description
 PUT 'Service/Maintenance'                           INTO LineDescription(109) Description
 PUT 'Total'                                         INTO LineDescription(110) Description

end-procedure


!***********************************************************************
! Process Main
! The following parts match the IPEDS-S Form (06/27/2001)
! Part A - Full Time Faculty
! Part B - All Other Full Time Employees
! Part D - Part Time Employees
! Part F - Tenure of Full Time Faculty
! Part G - All Full Time New Hires between July 1 and October 31
!***********************************************************************
begin-procedure Process-Main

  do Build-Time-Period
  do Get-Establishment
     let $Date_Clause = ' <= '||''''||$End_Date||''''
     move 1  to #startline
     move 99 to #endline
  do Build-IPEDS-S-Data
  do Print-Report-Detail
  do Report-Part-G

end-procedure


!***********************************************************************
! Report Part G
!***********************************************************************
begin-procedure Report-Part-G
   let $Date_Clause = ' BETWEEN '||''''||$F_Begin_Dt||''''||' AND '||''''||$F_End_Dt||''''
   move 1 to #part_g
   move 100 to #startline
   move 110 to #endline
   do Build-IPEDS-S-Data
   do Print-Report-Detail
end-procedure


!***********************************************************************
! Build Time Period
!***********************************************************************
begin-procedure Build-Time-Period
  let $Date = '11/01/' || $Calendar_Year                        !Date for reports
  do Format-DateTime($Date, $End_Date, {DEFDATE}, '', 'NATIVE') !Parts A,B,D,F
  let $F_Begin_Dt = '07/01/' || $Calendar_Year                  !Date for report
  let $F_End_Dt   = '10/31/' || $Calendar_Year                  !Part G
  do Format-DateTime($F_Begin_Dt, $F_Begin_Dt, {DEFDATE}, '', 'NATIVE')
  do Format-DateTime($F_End_Dt, $F_End_Dt, {DEFDATE}, '', 'NATIVE')
end-procedure


!***********************************************************************
! Get Establishment
! Retrieve Organization's descriptive data
!***********************************************************************
begin-procedure Get-Establishment
  move 0 to #valid_estabid
begin-SELECT
E.ESTABID
E.DESCR
E.ADDRESS1
E.CITY
E.STATE
E.POSTAL

  move 1 to #valid_estabid

  let $Address1      = RTRIM(&E.ADDRESS1,' ')
  let $City          = RTRIM(&E.CITY,' ')
  concat &E.STATE with $City ,bxxbb
  move &E.POSTAL    to $Postal
  concat $Postal  with $City


FROM  PS_ESTAB_TBL E
WHERE E.HQUNIT = 'Y'
  AND E.ESTABID  = $Establishment
  AND E.EFF_STATUS = 'A'
  AND E.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_ESTAB_TBL
       WHERE  ESTABID = E.ESTABID
         AND  EFFDT  <= $End_Date)
end-SELECT
end-procedure


!***********************************************************************
! Build IPEDS-S Data
! Select Employee data and populate Report-Detail array
! Only retrieve the lowest employee record number with the highest
! effective sequence
!***********************************************************************
begin-procedure Build-IPEDS-S-Data
begin-SELECT on-error=SQL-Error
B.EMPLID
B.EMPL_RCD
B.EFFDT
B.BUSINESS_UNIT
B.JOBCODE
B.ANNUAL_RT
B.FULL_PART_TIME
B.COMP_FREQUENCY
F.FREQUENCY_TYPE
B.POSITION_NBR
B.ACTION
B.OFFICER_CD
A.SEX
C.IPEDSSCODE
C.EG_ACADEMIC_RANK
G.ETHNIC_GROUP
E.CONTRACT_LENGTH

  let $Emplid               = RTRIM(&B.EMPLID, ' ')
  let $Effdt                = RTRIM(&B.EFFDT, ' ')
  let $Jobcode              = RTRIM(&B.JOBCODE, ' ')
  move &B.ANNUAL_RT        to #Annual_Rt
  let $Full_Part            = RTRIM(&B.FULL_PART_TIME, ' ')
  let $Comp_Type            = RTRIM(&F.FREQUENCY_TYPE, ' ')
  let $Position             = RTRIM(&B.POSITION_NBR, ' ')
  let $Action               = RTRIM(&B.ACTION, ' ')
  let $Officer_Cd           = RTRIM(&B.OFFICER_CD, ' ')
  let $Gender               = RTRIM(&A.SEX, ' ')
  let $Ipedsscode           = RTRIM(&C.IPEDSSCODE, ' ')
  let $Academic_Rank        = RTRIM(&C.EG_ACADEMIC_RANK, ' ')
  let $EthnicGroup          = RTRIM(&G.ETHNIC_GROUP, ' ')
  let $Contract_Length      = RTRIM(&E.CONTRACT_LENGTH, ' ')

  If $Officer_Cd <> 'N'
     let $Ipedsscode = '1'
  End-if

  do Get-Tenure-Rank                        !Returns Tenure and Rank data

  do Get-Fed-Tax-Data

  !****  Get Citizenship from Citizenship Table *****
  do Get_Citizenship_Status

  If $Citizenship_Status = '4' or $Res_Status = 'A'               ! Alien Temporary
     let $Res_Status = 'A'
  Else
     let $Res_Status = ' '
  End-if

  do Analyze-Sex-EthnicGroup                !Returns column #(1-15) in #eeocol


  if #part_g
     do Part-G
     move 1 to #no_new_hires
  else
     if $Full_Part = 'F'
        if $Ipedsscode = '2'
           do Part-A
           do Part-F
        else
           do Part-B
        end-if
     else
        do Part-D
     end-if
  end-if

FROM  PS_PERSONAL_DT_FST  A,
      PS_JOB            B,
      PS_JOBCODE_TBL    C,
      PS_DIVERS_ETHNIC      D,
      PS_PER_ORG_ASG_HP     E,
      PS_FREQUENCY_TBL  F,
      PS_ETHNIC_GRP_TBL G

WHERE A.EMPLID = B.EMPLID
!Begin Incident 1449810004
  AND B.ESTABID=$Establishment
!End Incident 1449810004
  AND A.EMPLID = D.EMPLID
  AND D.PRIMARY_INDICATOR = 'Y' 
  AND D.SETID = G.SETID 
  AND D.ETHNIC_GRP_CD = G.ETHNIC_GRP_CD 
  AND G.EFFDT = (SELECT MAX(G2.EFFDT) FROM PS_ETHNIC_GRP_TBL G2 
                  WHERE G2.SETID = G.SETID 
                  AND G2.ETHNIC_GRP_CD = G.ETHNIC_GRP_CD 
                  AND G2.EFFDT [$Date_Clause])
  AND B.PER_ORG = 'EMP'
  AND B.EFFDT =
      (SELECT MAX(B1.EFFDT)
       FROM PS_JOB B1
       WHERE B1.EMPLID    = B.EMPLID
         AND B1.EMPL_RCD  = B.EMPL_RCD
         AND B1.EFFDT    [$Date_Clause])
  AND B.EFFSEQ =
      (SELECT MAX(B2.EFFSEQ)
       FROM PS_JOB B2
       WHERE B2.EMPLID    = B.EMPLID
         AND B2.EMPL_RCD  = B.EMPL_RCD
         AND B2.EFFDT     = B.EFFDT)
  AND B.EMPL_RCD  =
      (SELECT MIN(B3.EMPL_RCD)
       FROM PS_JOB B3
       WHERE B3.EMPLID    = B.EMPLID
         AND B3.EFFDT = (SELECT MAX(B4.EFFDT)
                           FROM PS_JOB B4
                           WHERE B4.EMPLID    = B3.EMPLID
                             AND B4.EMPL_RCD  = B3.EMPL_RCD
                             AND B4.EFFDT [$Date_Clause])
         AND B3.EFFSEQ = (SELECT MAX(B5.EFFSEQ)
                            FROM PS_JOB B5
                            WHERE B5.EMPLID    = B3.EMPLID
                              AND B5.EMPL_RCD  = B3.EMPL_RCD
                              AND B5.EFFDT     = B3.EFFDT)
         And B.EMPL_STATUS IN ('A', 'P', 'S', 'W') ! Active, Leave w/pay, Suspended, Work Break 
         AND B.EEO_CLASS     <> 'E'               !Excluded from counts
         AND B.REG_TEMP       = 'R')               !Regular
  AND C.JOBCODE = B.JOBCODE
  AND C.SETID = (SELECT C1.SETID
                   FROM PS_SET_CNTRL_REC C1
                   WHERE C1.RECNAME      = 'JOBCODE_TBL'
                    AND C1.SETCNTRLVALUE = B.BUSINESS_UNIT)
  AND C.EFFDT =
      (SELECT MAX(C2.EFFDT)
       FROM PS_JOBCODE_TBL C2
       WHERE C2.JOBCODE   = C.JOBCODE
         AND C2.SETID     = C.SETID
         AND C2.EFFDT    <= B.EFFDT)
  AND C.IPEDSSCODE    <> 'N'               !Not Reported for IPEDS-S Purposes
  AND E.EMPLID = B.EMPLID
  AND E.EMPL_RCD  = B.EMPL_RCD
  AND B.COMP_FREQUENCY    = F.FREQUENCY_ID
  AND F.EFF_STATUS       = 'A'
  AND F.EFFDT            =
    (SELECT MAX(F1.EFFDT)
       FROM PS_FREQUENCY_TBL F1
      WHERE F1.FREQUENCY_ID   = F.FREQUENCY_ID
        AND F1.EFF_STATUS     = F.EFF_STATUS
        AND F1.EFFDT         <= B.EFFDT)


end-SELECT
end-procedure


!***********************************************************************
! Get Tenure and Rank Data
!***********************************************************************
begin-procedure Get-Tenure-Rank
move ''    to $Tenure_Status
move ''    to $Tenure_Record
begin-SELECT
E.TENURE_STATUS
E.EG_ACADEMIC_RANK

  move 'Exists'              to $Tenure_Record
  move &E.TENURE_STATUS      to $Tenure_Status
  move &E.EG_ACADEMIC_RANK   to $Academic_Rank

FROM PS_EG_TENURE_DATA E
WHERE E.EMPLID = $Emplid
end-SELECT

if $Tenure_Record = ''                     !No tenure record
  move 'NOT' to $Tenure_Status             !Assume these are Non-Tenured, Not On Track
  do Use-Rank-From-Jobcode-Table
end-if

do Get-Rank-Ipeds

end-procedure


!***********************************************************************
! Assume Tenure and Rank from Jobcode Table Entries
!***********************************************************************
begin-procedure Use-Rank-From-Jobcode-Table

if $Position <> ''                         !Employee is in a position
  do Get-Rank-From-Position
end-if

if $Academic_Rank = ''
   move '000' to $Academic_Rank            !No Academic Rank
end-if

end-procedure


!***********************************************************************
! Get Rank from Position data record
!***********************************************************************
begin-procedure Get-Rank-From-Position
begin-SELECT
P.EG_ACADEMIC_RANK

  let $Academic_Rank = RTRIM(&P.EG_ACADEMIC_RANK, ' ')

FROM PS_POSITION_DATA P
WHERE P.POSITION_NBR = $Position
  AND P.EFFDT = (SELECT MAX(P1.EFFDT)
                  FROM   PS_POSITION_DATA P1
                  WHERE  P1.POSITION_NBR = P.POSITION_NBR
                    AND  P1.EFFDT <= $End_Date)
end-SELECT
end-procedure


!***********************************************************************
! Get Rank Ipeds
!***********************************************************************
begin-procedure Get-Rank-Ipeds
move '' to $Rank_Ipeds
begin-SELECT
R.EG_RANK_IPEDS

  let $Rank_Ipeds = RTRIM(&R.EG_RANK_IPEDS, ' ')

FROM  PS_EG_RANK_TBL R
WHERE R.EG_ACADEMIC_RANK = $Academic_Rank
  AND R.EFFDT = (SELECT MAX(R1.EFFDT)
               FROM PS_EG_RANK_TBL R1
               WHERE R1.EG_ACADEMIC_RANK = R.EG_ACADEMIC_RANK
                 AND R1.EFFDT <= $End_Date)
end-SELECT
if $Rank_Ipeds = ''
   move '6' to $Rank_Ipeds
end-if
end-procedure

!***********************************************************************
! Get Federal Tax Data
!***********************************************************************
begin-procedure Get-Fed-Tax-Data
move '' to $Res_Status
begin-SELECT
T.SPECIAL_FWT_STATUS

  let $Res_Status     = RTRIM(&T.SPECIAL_FWT_STATUS, ' ')

FROM PS_FED_TAX_DATA T
WHERE T.EMPLID = $Emplid
  AND T.SPECIAL_FWT_STATUS = 'A'           !Non-Resident Alien
end-SELECT
end-procedure


!***********************************************************************
! GET_CITIZENSHIP_STATUS   This procedure retrieves the citizenship
! status from the citizenship record for the given employee.  This is
! a required separate select because citizenship is not mandatory.
! called fron Build_Ipeds_s_data
!***********************************************************************
begin-procedure Get_Citizenship_Status

move '' to $Citizenship_Status
begin-SELECT
G.CITIZENSHIP_STATUS

  let $Citizenship_Status   = RTRIM(&G.CITIZENSHIP_STATUS, ' ')

FROM PS_CITIZENSHIP G
WHERE G.EMPLID = $Emplid
!Begin Incident 1449810004
  AND G.COUNTRY='USA'
!End Incident 1449810004

end-SELECT
end-procedure

!***********************************************************************
! Part A
!***********************************************************************
begin-procedure Part-A
  move 2 to #line
  if $Comp_Type = 'C'
     do Analyze-Contract-Data
     if #contract_length = 2               ! < 9 month contract
        array-add 1 to Report-Detail(1) EEOCOL(#eeocol)
     else
        do Analyze-Faculty-Salary-Level
        if #contract_length = 1            ! 9/10 month contract
           array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
           array-add 1 to Report-Detail(9)     EEOCOL(#eeocol)
        else
           add 8 to #line
           array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
           array-add 1 to Report-Detail(17)    EEOCOL(#eeocol)
        end-if
     end-if
  else
     do Analyze-Faculty-Salary-Level
     add 8 to #line
     array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
     array-add 1 to Report-Detail(17)    EEOCOL(#eeocol)
  end-if

  array-add 1 to Report-Detail(18) EEOCOL(#eeocol)
  array-add 1 to Report-Detail(67) EEOCOL(#eeocol)

end-procedure


!***********************************************************************
! Part B
!***********************************************************************
begin-procedure Part-B
  move 0 to #line
  if RTRIM($Ipedsscode, ' ') <> ''
     Evaluate $Ipedsscode
        when = '1'  !Executive/Admin/Managerial
            move 19 to #line
            move 26 to #sumline
            do Analyze-Faculty-Salary-Level
            break
        When = '3'  !Instruction/Research Assistants
        when = '4'  !Other Professionals/Support/Services
            move 35 to #line
            move 42 to #sumline
            do Analyze-Faculty-Salary-Level
            break
        when = '5'  !Technical/Paraprofessionals
            move 43 to #line
            move 48 to #sumline
            do Analyze-Tech-Prof-Skilled-Salary-Ranges
            break
        when = '6'  !Clerical/Secretarial
            move 49 to #line
            move 54 to #sumline
            do Analyze-Clerical-Salary-Ranges
            break
        when = '7'  !Skilled Crafts
            move 55 to #line
            move 60 to #sumline
            do Analyze-Tech-Prof-Skilled-Salary-Ranges
            break
        when = '8'  !Service/Maintenance
            move 61 to #line
            move 66 to #sumline
            do Analyze-Service-Salary-Level
            break
        when = '9'  !Other Administrative
            move 27 to #line
            move 34 to #sumline
            do Analyze-Faculty-Salary-Level
            break
        when-other
            break
     End-Evaluate

     if #line > 0
        array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
        array-add 1 to Report-Detail(#sumline) EEOCOL(#eeocol)
        array-add 1 to Report-Detail(67) EEOCOL(#eeocol)
     end-if

  end-if

end-procedure


!***********************************************************************
! Part D
!***********************************************************************
begin-procedure Part-D
  move 0 to #line
  if RTRIM($Ipedsscode, ' ') <> ''
     Evaluate $Ipedsscode
        when = '1'  !Executive/Admin/Managerial
            move 70 to #line
            break
        when = '2'  !Faculty (Instruction/Research/Public Service)
            move 68 to #line
            break
        when = '3'  !Instruction/Research Assistants
            move 69 to #line
            break
        when = '4'  !Other Professionals/Support/Services
            move 72 to #line
            break
        when = '5'  !Technical/Paraprofessionals
            move 73 to #line
            break
        when = '6'  !Clerical/Secretarial
            move 74 to #line
            break
        when = '7'  !Skilled Crafts
            move 75 to #line
            break
        when = '8'  !Service/Maintenance
            move 76 to #line
            break
        when = '9'  !Other Administrative
            move 71 to #line
            break
        when-other
            break
     End-Evaluate

     if #line > 0
        array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
        array-add 1 to Report-Detail(77) EEOCOL(#eeocol)
     end-if

  end-if

end-procedure


!***********************************************************************
! PART F
!***********************************************************************
begin-procedure PART-F

  Evaluate $Tenure_Status
     When = 'DEF'                    !Tenured by De Facto
     When = 'TEN'                    !Tenured
        move 77 to #line
        move 84 to #sumline
        break
     When = 'NTK'                    !Non Tenured, On Track
        move 84 to #line
        move 91 to #sumline
        break
     When = 'DEN'                    !Tenure Denied
     When = 'NA'                     !Not Applicable
     When = 'NOT'                    !Non Tenured, Not On Track
     When = 'OTH'                    !Other
        move 91 to #line
        move 98 to #sumline
        break
  End-Evaluate

  Evaluate $Rank_Ipeds
     When = '1'
        add 1 to #line
        break
    When = '2'
        add 2 to #line
        break
    When = '3'
        add 3 to #line
        break
    When = '4'
        add 4 to #line
        break
    When = '5'
        add 5 to #line
        break
    When = '6'
        add 6 to #line
        break
  End-Evaluate

  array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
  array-add 1 to Report-Detail(#sumline) EEOCOL(#eeocol)
  array-add 1 to Report-Detail(99) EEOCOL(#eeocol)

end-procedure


!***********************************************************************
! Part G
!***********************************************************************
begin-procedure Part-G

  move 0 to #line
  move 0 to #New_Hire

!**********************************************************
! If current row is not a hire/rehire action then check history rows
!**********************************************************
if $Action <> 'HIR' and $Action <> 'REH' and $Full_Part = 'F'
     do Check-New-Hire-History
End-if


 if ($Action = 'HIR' or $Action = 'REH' or #New_Hire) and $Full_Part = 'F'
    do Get-Tenure-Rank

      if RTRIM($Ipedsscode, ' ') <> ''
         Evaluate $Ipedsscode
            when = '1'  !Executive/Admin/Managerial
                move 103 to #line
                break
            when = '2'  !Faculty (Instruction/Research/Public Service)
                if $Tenure_Status = 'DEF' or $Tenure_Status = 'TEN'      !Tenured
                   move 100 to #line
                else
                   if $Tenure_Status = 'NTK'      !Non Tenured, On Track
                      move 101 to #line
                   else
                      move 102 to #line           !Non Tenured, Not On Track & all others
                   end-if
                end-if
                break
            When = '3'  !Instruction/Research Assistants
            when = '4'  !Other Professionals/Support/Services
                move 105 to #line
                break
            when = '5'  !Technical/Paraprofessionals
                move 106 to #line
                break
            when = '6'  !Clerical/Secretarial
                move 107 to #line
                break
            when = '7'  !Skilled Crafts
                move 108 to #line
                break
            when = '8'  !Service/Maintenance
                move 109 to #line
                break
            when = '9'  !Other Administrative
                move 104 to #line
                break
            when-other
                break
         End-Evaluate

         if #line > 0
            array-add 1 to Report-Detail(#line) EEOCOL(#eeocol)
            array-add 1 to Report-Detail(110) EEOCOL(#eeocol)
         end-if
      end-if
  end-if
end-procedure

!**********************************************************
! Determine if hired since July 1
!**********************************************************
begin-procedure Check-New-Hire-History
begin-SELECT

'X'

  move 1 to #New_Hire

FROM PS_JOB JOBHIST
WHERE JOBHIST.EMPLID = &B.EMPLID
     AND JOBHIST.EMPL_RCD  = &B.EMPL_RCD
     AND JOBHIST.EFFDT [$Date_Clause]
     AND JOBHIST.ACTION IN ('HIR','REH')
     AND JOBHIST.FULL_PART_TIME = 'F'
end-SELECT
end-procedure


!***********************************************************************
! Print Report Detail
! Get values from array and print
!***********************************************************************
Begin-Procedure Print-Report-Detail

  move #startline to #line

  while #line <= #endline

     GET $LineDescr FROM LineDescription(#line) Description

     Evaluate #line
        When = 1
            print 'Part-A Full Time Faculty (Instruction/Research/Public Service)'     (-5) Center
            position              (+4)
            move 0 to #level
            break
        When = 19
            new-page
            print 'Part-B Other Full Time Employees'   (-5) Center
            position              (+4)
            break
        When = 49
            new-page
            print 'Part-B Other Full Time Employees'   (-5) Center
            position              (+4)
            break
        When = 68
            new-page
            print 'Part-D Part Time Employees'         (-5) Center
            position              (+4)
            break
        When = 78
            new-page
            print 'Part-F Tenure of Full Time Faculty (Instruction/Research/Public Service)'  (-5) Center
            position              (+4)
            break
        When = 100
            new-page
            print 'Part-G New Hires'                   (-5) Center
            position              (+4)
            if #no_new_hires = 0
               print 'No New Hires between 1 July and 31 Oct' (+1, 6)
               print '-' (+1,1,175) fill
            end-if
            break
      End-Evaluate

     position (+1)
     do Format-Number(#line, $Line, '999')
     print $Line        (, 1,4)
     print $LineDescr   (, 6, 48)

     move 1 to #eeocol
     while #eeocol <= 14

        GET #detail-eeo  FROM Report-Detail(#line) EEOCOL(#eeocol)
        GET #col         FROM Report-Detail(0)     StartCol(#eeocol)
        do Format-Number(#detail-eeo, $Detail-Eeo, '99,999')
        print $Detail-Eeo       (, #col)
          let #x = mod(#eeocol, 2)          !<0=odd-male, 0=even-female
              if #x
                 add #detail-eeo to #total-male
              else
                 add #detail-eeo to #total-female
                 print '|'      (, +2)
              end-if
        add 1 to #eeocol

     end-while
     do Format-Number(#total-male, $Total-Male, '99,999')
     do Format-Number(#total-female, $Total-Female, '99,999')
     print '|'             (, 162,0)
     print $Total-Male     (, 163,6)
     print $Total-Female   (, 170)
     move 0 to #total-male
     move 0 to #total-female
     do Line-Breaks
     add 1 to #line
     add 1 to #level
  end-while

end-procedure


!***********************************************************************
! Analyze Faculty Salary Level
!***********************************************************************
begin-procedure Analyze-Faculty-Salary-Level
  move #MaxFSalaryLevel to #SalaryLevel
  while #SalaryLevel >= 0
    GET #LowFSal from Faculty-Salary-Ranges(#SalaryLevel) LowFSal
    if #Annual_Rt >= #LowFSal
      break
    end-if
    subtract 1 from #SalaryLevel
  end-while

   if #SalaryLevel > 0
     add #SalaryLevel to #line
   end-if

end-procedure


!***********************************************************************
! Analyze Analyze-Tech-Prof-Skilled-Salary-Ranges
!***********************************************************************
begin-procedure Analyze-Tech-Prof-Skilled-Salary-Ranges
  move #maxNFSalaryLevel to #SalaryLevel
  while #SalaryLevel >= 0
    GET #LowNFSal from Tech-Prof-Skilled-Salary-Ranges(#SalaryLevel) LowNFSal
    if #Annual_Rt >= #LowNFSal
      break
    end-if
    subtract 1 from #SalaryLevel
  end-while

   if #SalaryLevel > 0
     add #SalaryLevel to #line
   end-if

end-procedure


!***********************************************************************
! Analyze Analyze-Clerical-Salary-Ranges
!***********************************************************************
begin-procedure Analyze-Clerical-Salary-Ranges
  move #maxNFSalaryLevel to #SalaryLevel
  while #SalaryLevel >= 0
    GET #LowNFSal from Clerical-Salary-Ranges(#SalaryLevel) LowNFSal
    if #Annual_Rt >= #LowNFSal
      break
    end-if
    subtract 1 from #SalaryLevel
  end-while

   if #SalaryLevel > 0
     add #SalaryLevel to #line
   end-if

end-procedure


!***********************************************************************
! Analyze Service Salary Level
!***********************************************************************
begin-procedure Analyze-Service-Salary-Level
  move #maxSMSalaryLevel to #SalaryLevel
  while #SalaryLevel >= 0
    GET #LowSMSal from Service-Salary-Ranges(#SalaryLevel) LowSMSal
    if #Annual_Rt >= #LowSMSal
      break
    end-if
    subtract 1 from #SalaryLevel
  end-while

   if #SalaryLevel > 0
     add #SalaryLevel to #line
   end-if

end-procedure


!***********************************************************************
! Analyze Sex & Ethnic Group
! Assigns the report column based on sex & ethnic group (1-14)
!***********************************************************************
begin-procedure Analyze-Sex-EthnicGroup

  move 1 to #eeocol

  if $Gender = 'F'                       !Default to Male if unknown
      move 1 to #gender
  else
      move 0 to #gender
  end-if

  if $Res_Status = 'A'                   !Non-Resident Alien
     add #gender to #eeocol
  else
    evaluate $EthnicGroup
      when = '1'  !White Non Hispanic
        let #eeocol = 11 + #gender
        break
      when = '2'  !Black Non Hispanic
        let #eeocol = 3 + #gender
        break
      when = '3'  !Hispanic
        let #eeocol = 9 + #gender
        break
      when = '4'  !Asian/Pacific Islander
        let #eeocol = 7 + #gender
        break
      when = '5'  !American Indian/Alaskan Native
        let #eeocol = 5 + #gender
        break
      when = '6'  !Not Specified
        let #eeocol = 13 + #gender
        break         
      when = '7'  !Pacific Islander
        let #eeocol = 7 + #gender
        break        
      when-other  !Unknown
        let #eeocol = 13 + #gender
        break
    end-evaluate
  end-if
end-procedure


!***********************************************************************
! Analyze Contract Data
! Determine Contract length
!***********************************************************************
begin-procedure Analyze-Contract-Data
  move 0 to #contract_length
  move '' to $Contract_Record
Begin-SELECT
CP.CONTRACT_BEGIN_DT
CP.CONTRACT_END_DT

  let $Contract_Record = 'Yes'
  do Convert-To-DTU-Date(&CP.CONTRACT_BEGIN_DT, $C_Begin_Dt)
  do Convert-To-DTU-Date(&CP.CONTRACT_END_DT,   $C_End_Dt)
  let #dtu_da1 = to_number(substr($C_Begin_Dt, 9, 2))
  let #dtu_da2 = to_number(substr($C_End_Dt, 9, 2))

  do dtu-diff-months($C_Begin_Dt, $C_End_Dt, #dtu_months)

  if #dtu_da1 <> #dtu_da2
     add .5 to #dtu_months
  end-if

FROM PS_CONTRACT CP
WHERE CP.EMPLID = $Emplid
  AND CP.EMPL_RCD  = &B.EMPL_RCD
  AND CP.EFFDT = (SELECT MAX(CP1.EFFDT)
                  FROM PS_CONTRACT CP1
                  WHERE CP1.EMPLID = CP.EMPLID
                    AND CP1.EMPL_RCD  = CP.EMPL_RCD
                    AND CP1.EFFDT <= $End_Date)
end-SELECT

  if $Contract_Record = 'Yes'
    if #dtu_months >= 9 and #dtu_months <= 10
        move 1 to #contract_length                 !9/10 month contract
    else
    if #dtu_months < 9
            move 2 to #contract_length             !Less than 9 month contract
        else
            move 0 to #contract_length             !11/12 month contract, or no contract
        end-if
    end-if
  else
    Evaluate $Contract_Length
      when = '1'                                   !Less than 9 month contract
        move 2 to #contract_length
        break
      when = '2'                                   !9/10 month contract
        move 1 to #contract_length
        break
      when-other                                   !11/12 month contract, or N/A
        move 0 to #contract_length
        break
     End-Evaluate
  end-if
end-procedure


!***********************************************************************
! Line Breaks
! Fromat Line Breaks
!***********************************************************************
begin-procedure Line-Breaks
Evaluate #line
   When = 1
   When = 9
   When = 17
   When = 18
   When = 26
   When = 34
   When = 42
   When = 48
   When = 54
   When = 60
   When = 66
   When = 67
   When = 76
   When = 84
   When = 91
   When = 98
   When = 99
   When = 109
     print '-' (+1,1,175) fill
   break
End-Evaluate
end-procedure


!***********************************************************************
#include 'stdapi.sqc'    !Routine to Update Run status
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askcalyr.sqc'  !Ask Calendar Year input
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines for dtu formatting
#Include 'number.sqc'    !Routines to format numbers
!***********************************************************************

