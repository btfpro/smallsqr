!***********************************************************************
!  PER719NL : Verwerk maandelijkse Postcode wijzigingen                *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!
!****************************************************************
!          $Date:  2006/07/19:15:11:58                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!****************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup01.sqc' !Printer and page-size initialization

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  if #filestat != 0
     Display 'Update - Postal Code - Input file can not be opened Successfully....'
     Display 'Please Enter the correct Path and Input file name for the postal code'
     Display 'and Rerun the Process'
     let #prcs_run_status = 3
     do Update-Prcs-Run-Status
     goto last2
  end-if
  do Process-Main
  do Reset
  do Stdapi-Term
last2:
end-report

begin-heading 7
#include 'stdhdg01.sqc'
end-heading

begin-procedure Init-Report
  move 'PER719NL' to $ReportID
  move 'Verwerk maandelijkse Postcode wijzigingen' to $ReportTitle
  display $ReportTitle
  do Stdapi-Init
  if $prcs_process_instance = ''
    do Ask-Update-File
  else
    do Select-Parameters
  end-if
  open $Filename as 1 for-reading record=385 status=#filestat
end-procedure

begin-procedure Ask-Update-File
move 'N' to $Got-File-Name
while $Got-File-Name='N'
  Input $Filename 'Wat Is De Naam v.h. Postcode-Mutatiebestand ?'
  If Rtrim($Filename,' ')<>''
     Move 'Y' to $Got-File-Name
  end-if
end-while
end-procedure

Begin-procedure Get-values
  do Get-Update-File
End-procedure

begin-procedure Process-Main

Do Process-AllRows_Delete
Do Process-AllRows_Update
Do Process-AllRows_Insert

end-procedure Read-Zip

begin-procedure Process-AllRows_Delete
let $Header_Or_Trailer = 'D'
let #RecordCount=0 
while 1 = 1 !Need a while to be able to BREAK
  read 1 into $ZipCdRecord:385
  if #end-file = 1
     break
  end-if
  !Check for Header or Trailer and do processing on it
  let $HeaderTrailerCheck = {ps-substr}($ZipCdRecord,1,3)
  if $HeaderTrailerCheck = '***'  !either header or trailer record
    do Process-Header-and-Trailer
  else !normal record

let $Mut-Type       = {ps-substr}($ZipCdRecord,1,1)
let $Old-Range-Ind  = {ps-substr}($ZipCdRecord,24,1)
let $New-Range-Ind  = {ps-substr}($ZipCdRecord,208,1)
if $Mut-Type = '0' and $Old-Range-Ind <> ' '
 do Delete-Zip-Record
 do Delete-Lookuptable !delete also in the lookuptable as from R8.8
end-if
if $Mut-Type = '1' and $Old-Range-Ind <> ' ' and $New-Range-Ind = ' '
 do Delete-Zip-Record
 do Delete-Lookuptable !delete also in the lookuptable as from R8.8
end-if
     add 1 to #recordcount
  end-if

end-while
end-procedure

begin-procedure Process-AllRows_Update
close 1
open $Filename as 1 for-reading record=385 status=#filestat
let $Header_Or_Trailer = 'U'
let #RecordCount=0 
while 1 = 1 !Need a while to be able to BREAK
  read 1 into $ZipCdRecord:385
  if #end-file = 1
     break
  end-if
  !Check for Header or Trailer and do processing on it
  let $HeaderTrailerCheck = {ps-substr}($ZipCdRecord,1,3)
  if $HeaderTrailerCheck = '***'  !either header or trailer record
    do Process-Header-and-Trailer
  else !normal record
let $Mut-Type       = {ps-substr}($ZipCdRecord,1,1)
let $Old-Range-Ind  = {ps-substr}($ZipCdRecord,24,1)
let $New-Range-Ind  = {ps-substr}($ZipCdRecord,208,1)
if $Mut-Type = '1' and $Old-Range-Ind <> ' ' and $New-Range-Ind <> ' '
 do Update-Zip-Record
 do Update-Lookuptable !update also in the lookuptable as from R8.8
end-if
     add 1 to #recordcount
  end-if
end-while
end-procedure

begin-procedure Process-AllRows_Insert
close 1
open $Filename as 1 for-reading record=385 status=#filestat
let $Header_Or_Trailer = 'I'
let #RecordCount=0 
while 1 = 1 !Need a while to be able to BREAK
  read 1 into $ZipCdRecord:385
  if #end-file = 1
     break
  end-if
  !Check for Header or Trailer and do processing on it
  let $HeaderTrailerCheck = {ps-substr}($ZipCdRecord,1,3)
  if $HeaderTrailerCheck = '***'  !either header or trailer record
    do Process-Header-and-Trailer
  else !normal record
let $Mut-Type       = {ps-substr}($ZipCdRecord,1,1)
let $Old-Range-Ind  = {ps-substr}($ZipCdRecord,24,1)
let $New-Range-Ind  = {ps-substr}($ZipCdRecord,208,1)
if $Mut-Type = '2' and $New-Range-Ind <> ' '
 do Insert-Zip-Record
!DISPLAY 'Call lookuptable'
 do Insert-Lookuptable !insert also in the lookuptable as from R8.8
end-if
     add 1 to #recordcount
  end-if
end-while
end-procedure

begin-procedure Process-Header-and-Trailer
!let $TEXT_HEADER_OR_TRAILER = '1. HEADER_OR_TRAILER = ' || $Header_Or_Trailer
!Display $TEXT_HEADER_OR_TRAILER
if {ps-substr}($ZipCdRecord,1,4)='*** ' !header record has 3 stars
   if {ps-substr}($ZipCdRecord,1,41) = '*** MUTATIES POSTCODETABEL PTT REEKS VAN ' !correct header
      if $Header_Or_Trailer = 'D'      
         do Process-Mut-Header    ! in ziphdr.sqc
      end-if
   else
      display 'Incorrect Bestandstype. Verwerking afgebroken'
      print 'Incorrect Bestandstype. Verwerking afgebroken' (+2,1,80)
     stop quiet
   end-if
end-if
if {ps-substr}($ZipCdRecord,1,4)='****'  !trailer record has 4 stars
   if {ps-substr}($ZipCdRecord,1,21)='**** AANTAL MUTATIES '  !correct trailer
      if $Header_Or_Trailer = 'I'      
         do process-Mut-Trailer  !in ziptrl.sqc
      end-if
   else
      display 'Incorrect Bestandstype. Verwerking afgebroken'
      print 'Incorrect Bestandstype. Verwerking afgebroken' (+2,1,80)
      stop quiet
   end-if
end-if
end-procedure

begin-procedure Process-Mut-Header
let $FileMonth = {ps-substr}($ZipCdRecord,42,3)
let $Fileyear = {ps-substr}($ZipCdRecord,46,4) ! 4 digits and therefore 2000 compliant
Move $FileYear to #FileYear
do convert-FileDate
begin-select
LAST_CHNG_DT_NLD
  do Format-Datetime(&LAST_CHNG_DT_NLD, $DBDate, {DEFCMP}, '', '')
  do Check-FileDate
from
PS_POSTAL_CHG_NLD
end-select
end-procedure

begin-procedure Convert-FileDate
evaluate $FileMonth
  when = 'JAN'
    let $Month = '01'
  when = 'FEB'
    let $Month = '02'
  when = 'MAA'
    let $Month = '03'
  when = 'APR'
    let $Month = '04'
  when = 'MEI'
    let $Month = '05'
  when = 'JUN'
    let $Month = '06'
  when = 'JUL'
    let $Month = '07'
  when = 'AUG'
    let $Month = '08'
  when = 'SEP'
    let $Month = '09'
  when = 'OKT'
    let $Month = '10'
  when = 'NOV'
    let $Month = '11'
  when = 'DEC'
    let $Month = '12'
  when-other
end-evaluate
move $Month to #FileMonth
let $FileDate = '01/'||$Month||'/'||$Fileyear
let $displ='Bestandsdatum : '||$FileDate
display $displ
end-procedure

begin-procedure Check-FileDate
let $DBMonth = {ps-substr}($DBDate,5,2)
move $DBMonth to #DBMonth
let $DBYear = {ps-substr}($DBDate,1,4)
move $DBYear to #DBYear

if #DBMonth <12
   if #FileMonth = #DBMonth+1 and #FileYear = #DBYear
      Display 'Bestandsdatum Geverifieerd.'
   else
      Display 'Foutieve Bestandsdatum. Verwerking wordt afgebroken.'
      Print 'Foutieve Bestandsdatum. Verwerking wordt afgebroken.' (+2,1,80)
      stop quiet
   end-if
else
   if #Filemonth = 1 and #Fileyear=#Dbyear+1
      Display 'Bestandsdatum Geverifieerd.'
   else
      display 'Foutieve Bestandsdatum. Verwerking Wordt Afgebroken.'
      Print 'Foutieve Bestandsdatum. Verwerking wordt afgebroken.' (+2,1,80)
      stop quiet
   end-if
end-if
end-procedure

begin-procedure Delete-Zip-Record
let $POSTAL_NLD = {ps-substr}($ZipCdRecord,18,4)||' '||{ps-substr}($ZipCdRecord,22,2)
let $BRKPNT_FROM_NLD = {ps-substr}($ZipCdRecord,25,5)
 move $BRKPNT_FROM_NLD to #BRKPNT_FROM_NLD

begin-sql
DELETE FROM PS_POSTAL_TBL_NLD
WHERE POSTAL_NLD = $POSTAL_NLD
AND BRKPNT_FROM_NLD = #BRKPNT_FROM_NLD
end-sql
add 1 to #DeletedRecordCount
end-procedure

begin-procedure Delete-Lookuptable

move $BRKPNT_FROM_NLD to #BRKPNT_FROM_NLD
let $BRKPNT_UNTIL_NLD  = {ps-substr}($ZipCdRecord,30,5)
move $BRKPNT_UNTIL_NLD to #BRKPNT_UNTIL_NLD
let $POSTAL_CITY_NLD   = {ps-substr}($ZipCdRecord,53,24)
let $POSTAL_CITY_NLD   = rtrim($POSTAL_CITY_NLD,' ')
let $POSTAL_STREET_NLD = {ps-substr}($ZipCdRecord,94,24)
let $POSTAL_STREET_NLD = rtrim($POSTAL_STREET_NLD,' ')

LET #EO_NUM = #BRKPNT_FROM_NLD
While #EO_NUM <= #BRKPNT_UNTIL_NLD
  LET $EO_NUM1 = to_char(#EO_NUM)
  do Delete-Lookuptable-Record
  LET #EO_NUM = #EO_NUM + 2
end-while
end-procedure

begin-procedure Delete-Lookuptable-Record
begin-sql
DELETE FROM PS_EO_ADDR_VALIDAT
WHERE COUNTRY = 'NLD'
AND POSTAL = $POSTAL_NLD
AND CITY = $POSTAL_CITY_NLD
AND ADDRESS3 = $POSTAL_STREET_NLD
AND NUM1 = $EO_NUM1
end-sql
end-procedure

begin-procedure Update-Zip-Record
let $Change-Ind = {ps-substr}($ZipCdRecord,2,16)
if {ps-substr}($Change-Ind,1,1) = '1' or
   {ps-substr}($Change-Ind,2,1) = '1' or
   {ps-substr}($Change-Ind,3,1) = '1' or
   {ps-substr}($Change-Ind,4,1) = '1' or
   {ps-substr}($Change-Ind,5,1) = '1' or
   {ps-substr}($Change-Ind,7,1) = '1' or
   {ps-substr}($Change-Ind,9,1) = '1'
 do Update-Zip-Code-Table
 add 1 to #UpdatedRecordCount
end-if
end-procedure

begin-procedure Insert-Zip-Record
let $POSTAL_NLD        = {ps-substr}($ZipCdRecord,202,4)||' '||{ps-substr}($ZipCdRecord,206,2)
let $RANGE_IND_NLD     = {ps-substr}($ZipCdRecord,208,1)
let $BRKPNT_FROM_NLD   = {ps-substr}($ZipCdRecord,209,5)
move $BRKPNT_FROM_NLD to #BRKPNT_FROM_NLD
let $BRKPNT_UNTIL_NLD  = {ps-substr}($ZipCdRecord,214,5)
move $BRKPNT_UNTIL_NLD to #BRKPNT_UNTIL_NLD
let $POSTAL_CITY_NLD   = {ps-substr}($ZipCdRecord,237,24)
let $POSTAL_CITY_NLD   = rtrim($POSTAL_CITY_NLD,' ')
let $POSTAL_STREET_NLD = {ps-substr}($ZipCdRecord,278,24)
let $POSTAL_STREET_NLD = rtrim($POSTAL_STREET_NLD,' ')
begin-sql
INSERT INTO PS_POSTAL_TBL_NLD
(POSTAL_NLD
,RANGE_IND_NLD
,BRKPNT_FROM_NLD
,BRKPNT_UNTIL_NLD
,POSTAL_CITY_NLD
,POSTAL_STREET_NLD)
values
($POSTAL_NLD
,$RANGE_IND_NLD
,#BRKPNT_FROM_NLD
,#BRKPNT_UNTIL_NLD
,$POSTAL_CITY_NLD
,$POSTAL_STREET_NLD)
end-sql
add 1 to #InsertedRecordCount
end-procedure

begin-procedure Insert-Lookuptable

LET #EO_NUM = #BRKPNT_FROM_NLD
While #EO_NUM <= #BRKPNT_UNTIL_NLD
  LET $EO_NUM1 = to_char(#EO_NUM)
  do Insert-Record-Lookuptable
  LET #EO_NUM = #EO_NUM + 2
end-while

end-procedure

begin-procedure Insert-Record-Lookuptable
begin-sql on-error=sql-error
INSERT INTO PS_EO_ADDR_VALIDAT
(COUNTRY
,POSTAL
,STATE
,CITY
,COUNTY
,ADDRESS1
,ADDRESS2
,ADDRESS3
,ADDRESS4
,ADDR_FIELD1
,ADDR_FIELD2
,ADDR_FIELD3
,NUM1
,NUM2
,HOUSE_TYPE)
values
('NLD'
,$POSTAL_NLD
,' '
,$POSTAL_CITY_NLD
,' '
,' '
,' '
,$POSTAL_STREET_NLD
,' '
,' '
,' '
,' '
,$EO_NUM1
,' '
,' ')
end-sql
end-procedure


begin-procedure Update-Zip-Code-Table
let $Old-POSTAL_NLD        = {ps-substr}($ZipCdRecord,18,4)||' '||{ps-substr}($ZipCdRecord,22,2)
let $Old-BRKPNT_FROM_NLD   = {ps-substr}($ZipCdRecord,25,5)
 move $Old-BRKPNT_FROM_NLD to #Old-BRKPNT_FROM_NLD
let $New-POSTAL_NLD        = {ps-substr}($ZipCdRecord,202,4)||' '||{ps-substr}($ZipCdRecord,206,2)
let $New-RANGE_IND_NLD     = {ps-substr}($ZipCdRecord,208,1)
let $New-BRKPNT_FROM_NLD   = {ps-substr}($ZipCdRecord,209,5)
 move $New-BRKPNT_FROM_NLD to #New-BRKPNT_FROM_NLD
let $New-BRKPNT_UNTIL_NLD  = {ps-substr}($ZipCdRecord,214,5)
 move $New-BRKPNT_UNTIL_NLD to #New-BRKPNT_UNTIL_NLD
let $New-POSTAL_CITY_NLD   = {ps-substr}($ZipCdRecord,237,24)
let $New-POSTAL_CITY_NLD   = rtrim($New-POSTAL_CITY_NLD,' ')
let $New-POSTAL_STREET_NLD = {ps-substr}($ZipCdRecord,278,24)
let $New-POSTAL_STREET_NLD = rtrim($New-POSTAL_STREET_NLD,' ')
begin-sql
UPDATE PS_POSTAL_TBL_NLD
SET POSTAL_NLD = $New-POSTAL_NLD
,RANGE_IND_NLD = $New-RANGE_IND_NLD
,BRKPNT_FROM_NLD = #New-BRKPNT_FROM_NLD
,BRKPNT_UNTIL_NLD = #New-BRKPNT_UNTIL_NLD
,POSTAL_CITY_NLD = $New-POSTAL_CITY_NLD
,POSTAL_STREET_NLD = $New-POSTAL_STREET_NLD
WHERE POSTAL_NLD = $Old-POSTAL_NLD
AND BRKPNT_FROM_NLD = #Old-BRKPNT_FROM_NLD
end-sql
end-procedure

begin-procedure Update-Lookuptable
let $POSTAL_NLD = {ps-substr}($ZipCdRecord,18,4)||' '||{ps-substr}($ZipCdRecord,22,2)
let $BRKPNT_FROM_NLD = {ps-substr}($ZipCdRecord,25,5)
 move $BRKPNT_FROM_NLD to #BRKPNT_FROM_NLD
let $BRKPNT_UNTIL_NLD  = {ps-substr}($ZipCdRecord,30,5)
move $BRKPNT_UNTIL_NLD to #BRKPNT_UNTIL_NLD
let $POSTAL_CITY_NLD   = {ps-substr}($ZipCdRecord,53,24)
let $POSTAL_CITY_NLD   = rtrim($POSTAL_CITY_NLD,' ')
let $POSTAL_STREET_NLD = {ps-substr}($ZipCdRecord,94,24)
let $POSTAL_STREET_NLD = rtrim($POSTAL_STREET_NLD,' ')
LET #EO_NUM = #BRKPNT_FROM_NLD
While #EO_NUM <= #BRKPNT_UNTIL_NLD
  LET $EO_NUM1 = to_char(#EO_NUM)
  do Delete-Lookuptable-Record
  LET #EO_NUM = #EO_NUM + 2
end-while

let $POSTAL_NLD        = {ps-substr}($ZipCdRecord,202,4)||' '||{ps-substr}($ZipCdRecord,206,2)
let $RANGE_IND_NLD     = {ps-substr}($ZipCdRecord,208,1)
let $BRKPNT_FROM_NLD   = {ps-substr}($ZipCdRecord,209,5)
move $BRKPNT_FROM_NLD to #BRKPNT_FROM_NLD
let $BRKPNT_UNTIL_NLD  = {ps-substr}($ZipCdRecord,214,5)
move $BRKPNT_UNTIL_NLD to #BRKPNT_UNTIL_NLD
let $POSTAL_CITY_NLD   = {ps-substr}($ZipCdRecord,237,24)
let $POSTAL_CITY_NLD   = rtrim($POSTAL_CITY_NLD,' ')
let $POSTAL_STREET_NLD = {ps-substr}($ZipCdRecord,278,24)
let $POSTAL_STREET_NLD = rtrim($POSTAL_STREET_NLD,' ')
LET #EO_NUM = #BRKPNT_FROM_NLD
While #EO_NUM <= #BRKPNT_UNTIL_NLD
  LET $EO_NUM1 = to_char(#EO_NUM)
  do Insert-Record-Lookuptable
  LET #EO_NUM = #EO_NUM + 2
end-while
end-procedure


begin-procedure Process-Trailer
move #RecordCount to $RecordCount
unstring $RecordCount by '.' into $RC
let $DisplRC = 'Aantal Bestandsrecords Gelezen  = '||$RC
Display $DisplRC
move #Recordsinserted to $RecordsInserted
unstring $RecordsInserted by '.' into $RI
let $DisplRI = 'Aantal Bestandsrecords Verwerkt = '||$RI
Display $DisplRI
let $File-RecordCount = {ps-substr}($ZipCdRecord,61,7)
move $File-RecordCount to #File-RecordCount
if #Recordsinserted = #File-RecordCount
   do Update-Chng-Data
else
   Display 'Verwerking Incorrect. Verwerking Afgebroken'
   Print 'Verwerking Incorrect. Verwerking Afgebroken' (+2,1,80)
   stop quiet
end-if
end-procedure

begin-procedure Process-Mut-Trailer
move #RecordCount to $RecordCount
unstring $RecordCount by '.' into $RC
let $DisplRC = 'Aantal Bestandsrecords Gelezen  = '||$RC
Display $DisplRC
move #DeletedRecordCount to $DeletedRecordCount
unstring $DeletedRecordCount by '.' into $RD
let $DisplRD = 'Aantal Verwijderde Records      = '||$RD
display $DisplRD
move #UpdatedRecordCount to $UpdatedRecordCount
unstring $UpdatedRecordCount by '.' into $RU
let $DisplRU = 'Aantal Gemuteerde Records       = '||$RU
display $DisplRU
move #InsertedRecordCount to $InsertedRecordCount
unstring $InsertedRecordCount by '.' into $RI
let $DisplRI = 'Aantal Nieuwe Records           = '||$RI
display $DisplRI
let $File-Updated-RecordCount={ps-substr}($ZipCdRecord,22,7)
move $File-Updated-RecordCount to #File-Updated-RecordCount
let $File-RecordCount = {ps-substr}($ZipCdRecord,86,7)
move $File-RecordCount to #File-RecordCount
if #RecordCount=#File-Updated-Recordcount
   do Update-Chng-Data
else
   display 'Verwerking Incorrect, Wordt Afgebroken.'
   print 'Verwerking Incorrect, Wordt Afgebroken.' (+2,1,80)
   stop quiet
end-if
end-procedure

begin-procedure Update-Chng-Data
move '/' to $DDelimiter
  do Format-DateTime($FileDate,$FileDate,{DEFDMY},'','native')

begin-sql
UPDATE PS_POSTAL_CHG_NLD
SET LAST_CHNG_DT_NLD = $FileDate
, POSTAL_RCD_CNT_NLD = #File-RecordCount
end-sql
end-procedure

#Include 'reset.sqc'   !Reset printer procedure
#Include 'datetime.sqc'  !Routines for date and time formatting

#Include 'number.sqc'  !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'hrctlnld.sqc'  !Get run control parameter values
#include 'hrgetnld.sqc'  !Get values mask routines

