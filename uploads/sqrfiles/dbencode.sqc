! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************
!
!DBENCODE.SQC
!This file contains routines to retrieve the encoding of database data.
!This routine should most commonly used in the logic to manipulate database data 
!with SQR functions like substrt or lengtht, which requires encoding specified 
!for processing.  To prepare data for updating/inserting into database, first call
!Get-Database-Encoding in this sqc and then specify $SQR-ENCODING-DATABASE as encoding
!parameter of lengtht or substrt.
!SQR has a system variable $SQR-ENCODING-DATABASE-API, but this variable represents the
!encoding of database API, which does not necessarily represent the encoding of database
!data (for example, with SQR-Oracle, $SQR-ENCODING-DATABASE-API is set to 'UTF-8', even if 
!the database encoding is Latin1.)

#include 'rdbms.sqc'
#include 'opsys.sqc'

begin-procedure Get-Database-Encoding

#ifdef debugx
   Show 'Entering DBENCODING.SQC: GetDatabaseEncoding'
   #ifdef ORACLE
      Show 'DATABASE: Oracle'
   #endif
   #ifdef MICROSOFT
      Show 'DATABASE: Microsoft'
   #endif
   #ifdef DB2ALL
      Show 'DATABASE: DB2'
   #endif
   #ifdef INFORMIX
      Show 'DATABASE: Informix'
   #endif
   #ifdef SYBASE
      Show 'DATABASE: Sybase'
   #endif
#endif

! Query against PSSTATUS to check if the database is Unicode
begin-select
UNICODE_ENABLED &unicode

   let #unicode = &unicode

from PSSTATUS
end-select

if #unicode = 1

   #ifdef debugx
      Show 'UNICODE: Yes'
   #endif
   
   #ifdef ORACLE
      let $SQR-ENCODING-DATABASE = 'UTF-8'
   #else
      let $SQR-ENCODING-DATABASE = 'UCS-2'
   #endif
else
   ! Non-Unicode database
   #ifdef MICROSOFT
      do Get-MS-Encoding ($SQR-ENCODING-DATABASE)
   #endif

   #ifdef ORACLE
      do Get-Oracle-Encoding ($SQR-ENCODING-DATABASE)
   #endif
   
   #ifdef DB2ALL
      let $SQR-ENCODING-DATABASE = $SQR-ENCODING-DATABASE-API
   #endif
   
   #ifdef SYBASE
      let $SQR-ENCODING-DATABASE = $SQR-ENCODING-DATABASE-API
   #endif
   
   #ifdef INFORMIX
      let $SQR-ENCODING-DATABASE = $SQR-ENCODING-DATABASE-API
   #endif
   
   #ifdef debugx
      Show 'SQR ENCODING: ' $SQR-ENCODING-DATABASE
   #endif
   
end-if

end-procedure



#ifdef MICROSOFT
begin-procedure Get-MS-Encoding (:$encname)

! Check server level collation only since we do not use column level collation in PS database
begin-select
CONVERT(char, COLLATIONPROPERTY(CONVERT(char, SERVERPROPERTY('collation')), 'CodePage')) &codepage
end-select

#ifdef debugx
   show 'DATABASE CODEPAGE: ' &codepage
#endif

move &codepage to $codepage
let $encname = 'CP' || rtrim($codepage, ' ')

! the below is code for SQL Server 7 and will not work with SQL Server 2000
! since 'default sortorder id' is not supported as sysconfigure option anymore
!begin-select
!a_cha.name &name
!
!   #ifdef debugx
!      Show 'DATABASE ENCODING VALUE: ' &name
!   #endif
!
!   let $encname = upper(&name)
!   if $encname = 'ISO_1'
!      let $encname = 'CP1252'
!   end-if
!
!from master.dbo.sysconfigures cfg,
!master.dbo.syscharsets a_cha,
!master.dbo.syscharsets b_cha
!where cfg.comment = 'default sortorder id'
!and a_cha.type = 1001 ! type is charset
!and b_cha.type = 2001 ! type is sortorder
!and a_cha.id = b_cha.csid
!and b_cha.id = cfg.value
!end-select

end-procedure
#endif



#ifdef ORACLE
begin-procedure Get-Oracle-Encoding (:$encname)

begin-select
VALUE &charset

   #ifdef debugx
      Show 'DATABASE ENCODING VALUE: ' &charset
   #endif

   do Convert-NLS-Charset(&charset, $encname)

from NLS_DATABASE_PARAMETERS
where PARAMETER = 'NLS_CHARACTERSET'
end-select

end-procedure



begin-procedure CONVERT-NLS-CHARSET ($dbencname, :$sqr-encname)

create-array name=nlsdata size=5
   field=nlscharset:char
   field=sqrencoding:char

! Support conversion for all PeopleSoft supported non-Unicode Oracle encodings
put 'WE8ISO8859P1' 'ISO8859-1'       into nlsdata(0)  nlscharset sqrencoding
put 'WE8ISO8859P15' 'ISO8859-15'     into nlsdata(1)  nlscharset sqrencoding
put 'WE8MSWIN1252' 'CP1252'          into nlsdata(2)  nlscharset sqrencoding
put 'US7ASCII' 'ASCII'               into nlsdata(3)  nlscharset sqrencoding
put 'JA16SJIS' 'SJIS'                into nlsdata(4)  nlscharset sqrencoding

let #max_nlsdata = 5

while #i < #max_nlsdata
   if $dbencname = nlsdata.nlscharset(#i)
      let $sqr-encname = nlsdata.sqrencoding(#i)
   end-if
   add 1 to #i
end-while

if $sqr-encname = ''
   let $sqr-encname = 'UTF-8'
end-if

end-procedure

#endif
