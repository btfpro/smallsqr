!**************************************************
!  BUD002.SQR:  HRMS RECONCILIATION REPORT        *
!**************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
! Report Description: This report will sum actuals and encumbrances per*
! account.  This report will be used, along with a Reconciliation panel*
! to aid the reconciliation process.  This report can then be compared *
! to a similar report produced from the G/L system to identify         *
! any discrepancies                                                    *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:11:20:25                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
! This program is specific to HRMS for Public Sector.                  *
!***********************************************************************

#include 'setenv.sqc'
#include 'setup32.sqc'
#include 'paycfprt.sqc'!Print ChartField functions

!***********************************************************************
begin-report

  do HOUSEKEEPING
  do MAINLINE
  do WRAPUP

end-report

begin-heading 5

#include 'stdhdgtr.sqc'   ! for standard heading                      !F-LPARKER-125 (CAMI)
move #FiscalYear to $FiscalYear 9999
let $ReportTitle2 = $REPORT_TITLE2A||' '||$FiscalYear||' '||          !F-LPARKER-125 (CAMI)
                    $REPORT_TITLE2B                                   !F-LPARKER-125 (CAMI)
print $ReportTitle2 (3,,) center

end-heading

!***********************************************************************
! F-LPARKER-125 (CAMI)                                                 *
! Read language-dependent text from the database using BUD002          *
! program id.                                                          *
!***********************************************************************
begin-procedure REPORT-TRANSLATION

  let $language_cd = $PRCS_LANGUAGE_CD
  do Init_Report_Translation($ReportID,$Language_Cd)

  do Get_Field_Information ('BUD002', 'ACCT_CD',        $BUD002_ACCT_CD,     #DW)
  do Get_Field_Information ('BUD002', 'ACT_ERROR',      $BUD002_ACT_ERROR,   #DW)
  do Get_Field_Information ('BUD002', 'ACT_EXPENSED',   $BUD002_ACT_EXP,     #DW)
  do Get_Field_Information ('BUD002', 'AFFILIATE',      $BUD002_AFFILIATE,   #DW)
  do Get_Field_Information ('BUD002', 'ALT_ACCT',       $BUD002_ALT_ACCT,    #DW)
  do Get_Field_Information ('BUD002', 'BUDGET_REF',     $BUD002_BUDGET_REF,  #DW)
  do Get_Field_Information ('BUD002', 'CHARTFIELD1',    $BUD002_CHARTFIELD1, #DW)
  do Get_Field_Information ('BUD002', 'CHARTFIELD2',    $BUD002_CHARTFIELD2, #DW)
  do Get_Field_Information ('BUD002', 'CHARTFIELD3',    $BUD002_CHARTFIELD3, #DW)
  do Get_Field_Information ('BUD002', 'CLASS_FLD',      $BUD002_CLASS_FLD,   #DW)
  do Get_Field_Information ('BUD002', 'DEL_ERROR',      $BUD002_DEL_ERROR,   #DW)
  do Get_Field_Information ('BUD002', 'DEPARTMENT',     $BUD002_DEPT,        #DW)
  do Get_Field_Information ('BUD002', 'DESCR',          $BUD002_DESCR,       #DW)
  do Get_Field_Information ('BUD002', 'ENCUMBERED',     $BUD002_ENCUMBERED,  #DW)
  do Get_Field_Information ('BUD002', 'FUND_CODE',      $BUD002_FUND_CODE,   #DW)
  do Get_Field_Information ('BUD002', 'KEY_VAL_HDG',    $BUD002_KEY_VALUES,  #DW)
  do Get_Field_Information ('BUD002', 'NO_RECS_FND',    $BUD002_NO_RECS,     #DW)
  do Get_Field_Information ('BUD002', 'OPR_UNIT',       $BUD002_OPR_UNIT,    #DW)
  do Get_Field_Information ('BUD002', 'PRODUCT',        $BUD002_PRODUCT,     #DW)
  do Get_Field_Information ('BUD002', 'PROGRAM_CODE',   $BUD002_PROG_CODE,   #DW)
  do Get_Field_Information ('BUD002', 'PROJECT_ID',     $BUD002_PROJ_ID,     #DW)
  do Get_Field_Information ('BUD002', 'REPORT_TITLE',   $REPORTTITLE,        #DW)
  do Get_Field_Information ('BUD002', 'REPORT_TITLE2A', $REPORT_TITLE2A,     #DW)
  do Get_Field_Information ('BUD002', 'REPORT_TITLE2B', $REPORT_TITLE2B,     #DW)
  do Get_Field_Information ('BUD002', 'SETID',          $BUD002_SETID,       #DW)
  do Get_Field_Information ('BUD002', 'STATUS_ACTIVE',  $BUD002_ACTIVE,      #DW)
  do Get_Field_Information ('BUD002', 'STATUS_HDG',     $BUD002_STATUS,      #DW)
  do Get_Field_Information ('BUD002', 'STATUS_INACTIVE',$BUD002_INACTIVE,    #DW)
  do Get_Field_Information ('BUD002', 'TOTAL',          $BUD002_TOTAL,       #DW)

end-procedure

!***********************************************************************
! HOUSEKEEPING                                                         *
! This procedure performs the application initializations.  Formats    *
! variables for use.  Calls the procedures to get input parameters.    *
!***********************************************************************
begin-procedure HOUSEKEEPING

  do INIT-DATETIME
  do INIT-NUMBER
  do GET-CURRENT-DATETIME
  do STDAPI-INIT
  do SELECT-PARAMETERS

  move 'BUD002' to $ReportID                                          !F-LPARKER-125 (CAMI)
  do REPORT-TRANSLATION                                               !F-LPARKER-125 (CAMI)

  !------------------------------------------------------------------------------------------------------!
  ! Dynamic ChartFields variables used by the Common CF Print SQC                                        !
  !------------------------------------------------------------------------------------------------------!
  let $DynCF_ChartFields_Option = 'A'        !CF Configuration - 'P' = Pending Changes, 'A' - Current
  let $DynCF_LabelPosn_Option = 'T'          !ChartField Label Position - 'T' = above, 'S' = side
  let $DynCF_LabelUnderLine = 'Y'            !ChartField Label Underline - 'Y' = Print, 'N' = Suppress
  let $DynCF_Alignment_Option = 'C'          !ChartField Label Alignment - 'L' = Left, 'R' = Right, 'C' = Center
  let $DynCF_CF_Headings = 'N'               !ChartField Label Heading - 'Y' = Print, 'N' = Suppress
  let $DynCF_LabelName_Option = 'L'          !ChartField Label - 'L' = LongName, 'S' = ShortName
  let $DynCF_Include_Affiliate = 'Y'         !Include Affiliate - 'Y' = Yes, 'N' = No
  let $DynCF_LanguageCd = $language_cd       !ChartField Language Code
  let #DynCF_StrCol = 5                      !ChartField Starting Column
  let #DynCF_EndCol = 175                    !ChartField Ending Column

  do Create-CF-Array
  do Add-to-Exclude-CF-List ('ACCOUNT')
  do Build-CF-Array

  let #StrLine    = 1
  !------------------------------------------------------------------------------------------------------!
  ! End of Dynamic ChartFields Variables setup                                                           !
  !------------------------------------------------------------------------------------------------------!

  #define col1   4
  #define col2   15
  #define col3   29
  #define col3A  45
  #define col4   54
  #define col5   78
  #define col6   72
  #define col7   85
  #define col8   94
  #define col9   105
  #define col10  119
  #define col10A 131
  #define col10B 142
  #define col10C 155
  #define col10D 168
  #define col11  10
  #define col12  48
  #define col13  90


  let $First_Time = 'Y'

  let #line1 = 6
  let #line2 = 9
  let #line3 = 13

end-procedure

!***********************************************************************
! GET-VALUES                                                           *
! This procedure gets the necessary calls in the procedure             *
! Get-FiscalYear that will be used throughout the report.              *
!***********************************************************************
begin-procedure GET-VALUES

  do Get-FiscalYear

end-procedure

!***********************************************************************
! MAINLINE                                                             *
! This procedure is the main processing paragraph.  It performs        *
! application specific record processing.                              *
!***********************************************************************
begin-procedure MAINLINE
let $Record_Found = 'N'

let $err-statement1='BUD002.SQR, MAINLINE, '||$BUD002_ACT_ERROR       !F-LPARKER-125 (CAMI)
let $err-statement2=$BUD002_KEY_VALUES||' '||                         !F-LPARKER-125 (CAMI)
                    'Account Code '||$AcctCd||
                    'Description '||$Descr||
                    'Status '||$Status||
                    'Dept ID '||$DeptID||
                    'Project Id '||$Project_Id||
                    'Product '||$Product||
                    'Fund Code '||$Fund_Code||
                    'Program Code '||$Program_Code||
                    'Class '||$Class_Fld||
                    'Affiliate '||$AFFILIATE||
                    'Operating Unit '||$OPERATING_UNIT||
                    'Alt Account '||$ALTACCT||
                    'Setid '||$Setid

begin-select on-error=Error-Display
ACCT1.ACCT_CD
XREF.DESCR
SUM(ACCT1.POSTED_ENCUMB_AMT)    &ACCT1_ENCUMBER_AMT
SUM(ACCT1.POSTED_ACTUAL_AMT)    &ACCT1_ACTUAL_AMT
XREF.FUND_CODE
XREF.DEPTID_CF
XREF.PROGRAM_CODE
XREF.CLASS_FLD
XREF.PROJECT_ID
XREF.AFFILIATE
XREF.PRODUCT
XREF.OPERATING_UNIT
XREF.ALTACCT
XREF.BUDGET_REF
XREF.CHARTFIELD1
XREF.CHARTFIELD2
XREF.CHARTFIELD3
XREF.AFFILIATE_INTRA1
XREF.AFFILIATE_INTRA2

        let $Record_Found = 'Y'

        let $AcctCd           = &ACCT1.ACCT_CD
        let $Descr            = &XREF.DESCR
        let $Fund_Code        = &XREF.FUND_CODE
        let $DeptID           = &XREF.DEPTID_CF
        let $Program_Code     = &XREF.PROGRAM_CODE
        let $Class_Fld        = &XREF.CLASS_FLD
        let $Project_Id       = &XREF.PROJECT_ID
        let $Affiliate        = &XREF.AFFILIATE
        let $Product          = &XREF.PRODUCT
        let $Operating_Unit   = &XREF.OPERATING_UNIT
        let $AltAcct          = &XREF.ALTACCT
        let $BudgetRef        = &XREF.BUDGET_REF
        let $Chartfield1      = &XREF.CHARTFIELD1
        let $Chartfield2      = &XREF.CHARTFIELD2
        let $Chartfield3      = &XREF.CHARTFIELD3
        let $Affiliate_intra1 = &XREF.AFFILIATE_INTRA1
        let $Affiliate_intra2 = &XREF.AFFILIATE_INTRA2
        let #Encumber_Amt     = &ACCT1_ENCUMBER_AMT
        let #Actual_Amt       = &ACCT1_ACTUAL_AMT
        let #Total            = #Encumber_Amt + #Actual_Amt

        if $First_Time = 'Y'
                let $Save_Fund = $Fund_Code
                let $First_Time = 'N'
        else
                if $Save_Fund <> $Fund_Code
                        let $Save_Fund = $Fund_Code
                        if #current-line <> #line1
                                NEW-PAGE
                        end-if
                end-if
        end-if

        do PRINT-ACCT-INFO

FROM PS_BUDGET_ACTUALS ACCT1,
     PS_ACCT_CD_TBL XREF
WHERE ACCT1.FISCAL_YEAR = #FiscalYear
 AND XREF.ACCT_CD = ACCT1.ACCT_CD
GROUP BY ACCT1.ACCT_CD, XREF.DESCR, XREF.FUND_CODE,
         XREF.DEPTID_CF, XREF.PROGRAM_CODE, XREF.CLASS_FLD,
         XREF.PROJECT_ID, XREF.AFFILIATE, XREF.PRODUCT,
         XREF.OPERATING_UNIT, XREF.ALTACCT, XREF.BUDGET_REF,
         XREF.CHARTFIELD1, XREF.CHARTFIELD2, XREF.CHARTFIELD3,
         XREF.AFFILIATE_INTRA1, XREF.AFFILIATE_INTRA2
ORDER BY XREF.FUND_CODE, XREF.DEPTID_CF, XREF.PROGRAM_CODE,
         XREF.CLASS_FLD, XREF.PROJECT_ID, XREF.AFFILIATE,
         XREF.PRODUCT, XREF.OPERATING_UNIT, XREF.ALTACCT,
         XREF.BUDGET_REF, XREF.CHARTFIELD1, XREF.CHARTFIELD2,
         XREF.CHARTFIELD3, XREF.AFFILIATE_INTRA1, XREF.AFFILIATE_INTRA2,
         ACCT1.ACCT_CD, XREF.DESCR
end-SELECT

if $Record_Found = 'N'
   print $BUD002_NO_RECS (+1,,) center                                !F-LPARKER-125 (CAMI)
end-if

end-procedure MAINLINE

!***********************************************************************
! PRINT-ACCT-INFO                                                      *
!***********************************************************************
begin-procedure PRINT-ACCT-INFO

   do Format-CF-Print-Line ($DynCF_Filler, $DeptID, $Project_Id, $Product, $Fund_Code, $Program_Code,
                            $Class_Fld, $Affiliate, $Operating_Unit, $AltAcct, $BudgetRef, $Chartfield1,
                            $Chartfield2, $Chartfield3, $Affiliate_intra1, $Affiliate_intra2)

   let #ReqLines = #DynCF_DetailPrtLine * 3
   do Request-NewPage

   let #AdvLineNo = 1
   do Print-CF-Labels-and-Values (#AdvLineNo, #StrLine)

   let #ReqLines = 4
   do Request-NewPage
   print $BUD002_ACCT_CD (+2,{col1},)                        !F-LPARKER-125 (CAMI)
   print $BUD002_DESCR   (,{col3},)                          !F-LPARKER-125 (CAMI)
   print '-' (+1,{col1},16) fill
   print '-' (,{col3},11) fill
   print $AcctCd (+1,{col1},)
   print $Descr (,{col3},)

   let #ReqLines = 4
   do Request-NewPage
   print $BUD002_ENCUMBERED (+2,{col11},)                    !F-LPARKER-125 (CAMI)
   print $BUD002_ACT_EXP    (,{col12},)                      !F-LPARKER-125 (CAMI)
   print $BUD002_TOTAL      (,{col13},)                      !F-LPARKER-125 (CAMI)
   print '-' (+1,{col11},10) fill
   print '-' (,{col12},15) fill
   print '-' (,{col13},5) fill
   print #Encumber_Amt (+1,{col1},) edit 9,999,999,999.99
   print #Actual_Amt (,{col3A},) edit 999,999,999,999.99
   print #Total (,{col5},) edit 99,999,999,999.99

   if #current-line < 53
        print ''(+2,,)
   else
        new-page
   end-if

end-procedure PRINT-ACCT-INFO

!****************************************************************************
! Request-NewPage                                                           *
!****************************************************************************
begin-procedure Request-NewPage

  if #current-line + #ReqLines > 55
      new-page
  end-if

end-procedure

!****************************************************************************
! DELETE-RUN-CONTROL                                                        *
! Deletes run control information from run control table.                   *
!****************************************************************************
begin-procedure DELETE-RUN-CONTROL

  let $err-statement1 = 'BUD002, DELETE-RUN-CONTROL, '||              !F-LPARKER-125 (CAMI)
                        $BUD002_DEL_ERROR                             !F-LPARKER-125 (CAMI)
  let $err-statement2 = $BUD002_KEY_VALUES||' '||                     !F-LPARKER-125 (CAMI)
                        'TABLE PS_RUN_CNTL_BDGT' ||                   !F-LPARKER-125 (CAMI)
                        ', OPRID ' || $PRCS_OPRID ||
                        ', RUN_CNTL_ID ' || $PRCS_RUN_CNTL_ID


begin-SQL On-Error=Error-Display

DELETE FROM PS_RUN_CNTL_BDGT
WHERE OPRID       = $Prcs_OprID
  AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-SQL

end-procedure

!***********************************************************************
! WRAPUP                                                               *
! This paragraph ends the report process and updates the status of the *
! job in the process scheduler.                                        *
!***********************************************************************
begin-procedure WRAPUP

  do DELETE-RUN-CONTROL
  do RESET
  do STDAPI-TERM

end-procedure WRAPUP

!***********************************************************************
! SQCs                                                                 *
!***********************************************************************
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'btrnctl1.sqc'  !Get run control parameters.  This will change
                         !depending on the type of report you are running
                         !and which type of parameters are being used to
                         !run the report.  Other versions are hrrunctl2.sqc,
                         !bnrunctl.sqc, payrnctl.sqc, and taxrnctl.sqc
#Include 'btgetval.sqc'  !Formats run control parameters.  This will also
                         !change as the above sqc changes.  Other versions
                         !are bngetval.sqc and cbgetval.sqc.
#Include 'datemath.sqc'
#Include 'askftd.sqc'
#Include 'getactrs.sqc'
#Include 'getdptnm.sqc'
#Include 'stderror.sqc'  !Routine for error display.
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language     !F-LPARKER-125 (CAMI)
