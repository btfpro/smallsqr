!***********************************************************************
!  NetInTrn:  Convert Net Pay to Words                                 *
!             This is the language-translation enabled verion of       *
!             NetInWds.Sqc                                             *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:04:22:39                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

! This is the procedure name used by all SQRs that need a net-pay in words
! Within this, depending on the language, the appropriate routine for
! converting net-pay to words is called.

begin-procedure Net-Pay-In-Words

evaluate $Language_Cd

  when = 'ENG'
    do Net-Pay-In-English
  when = 'FRA'
    do Net-Pay-In-French
  when = 'CFR'
    do Net-Pay-In-French
  when = 'UKE'
    do Net-Pay-In-English
  when-other
    do Net-Pay-In-English ! This is the default if language code is not
                          ! one of the above.
end-evaluate

end-procedure


begin-procedure Net-Pay-In-English

  move #NetPay to $NetPay 099999999.99
  if #NetPay < 1.00
    move 'No' to $NetInWords
  else
    move '' to $NetInWords
    move $NetPay to $Input xxx        !isolate Millions
    if $Input <> '000'
      do Convert-Input-English
      concat ' Million ' with $NetInWords
    end-if
    move $NetPay to $Input ~~~xxx     !isolate Thousands
    if $Input <> '000'
      do Convert-Input-English
      concat ' Thousand ' with $NetInWords
    end-if
    move $NetPay to $Input ~~~~~~xxx  !isolate Hundreds
    do Convert-Input-English
  end-if
  concat ' and '        with $NetInWords
  concat $NetPay        with $NetInWords ~~~~~~~~~~xx  !Cents portion
  concat '/100 Dollars' with $NetInWords
end-procedure

begin-procedure Convert-Input-English
  move $Input to $Index x  !isolate the "hundreds" position
  if $Index <> '0'
    do Append-Literal-English
    concat ' Hundred ' with $NetInWords
  end-if
  move $Input to $Index ~xx  !isolate the "tens" and "units"
  do Append-Literal-English
end-procedure

begin-procedure Append-Literal-English
  move $Index to #Index
  if #Index < 20
    get $NumLit from NumberLits(#Index)
    concat $NumLit with $NetInWords
  else
    move $Index to $Index x  !isolate the "tens" position
    move $Index to #Index2
    multiply 10 times #Index2
    get $NumLit from NumberLits(#Index2)
    concat $NumLit with $NetInWords
    if #Index > #Index2
      subtract #Index2 from #Index
      get $NumLit from NumberLits(#Index)
      concat '-' with $NetInWords
      concat $NumLit with $NetInWords
    end-if
  end-if
end-procedure


begin-procedure Net-Pay-In-French
#Define CENT  100
#Define DIX   10

  move #NetPay to $NetPay 099999999.99
  if #NetPay < 1.00
     move ' No' to $NetInWords
  else
    move ''         to $NetInWords                     !** Initialize String to NULL
    move $NetPay    to $Input xxx                      !** Isolate Millions
    move ' million' to $NumType
    if $Input <> '000'
       Let #Input = TO_NUMBER($Input)
       do Convert-Input-French
       concat $NumType with $NetInWords
    end-if
    move $NetPay  to $Input ~~~xxx                     !** Isolate Thousands
    move ' mille' to $NumType
    if $Input <> '000'
       Let #Input = TO_NUMBER($Input)
       do Convert-Input-French
       concat $NumType with $NetInWords
    end-if
    move $NetPay  to $Input ~~~~~~xxx                  !** Isolate Hundreds
    move ' cent'  to $NumType
    Let #Input = TO_NUMBER($Input)
    do Convert-Input-French
  end-if
  concat ' et '         with $NetInWords
  concat $NetPay        with $NetInWords ~~~~~~~~~~xx  !** Cents portion
  concat '/100 dollars' with $NetInWords
end-procedure

begin-procedure Convert-Input-French
  If #Input >= {CENT}
     Let #Hundreds  = TRUNC((#Input / {CENT}),0)
     Let #TensUnits = TRUNC(MOD(#Input,{CENT}),0)

     If #Hundreds > 1
        concat ' ' with $NetInWords
        Let #Index = #Hundreds
        do Append-Literal-French
     End-If

     concat ' cent' with $NetInWords

     If (#Hundreds > 1) and (#TensUnits = 0)
        concat 's' with $NetInWords
     End-If

     do Convert-TensUnits-French                       !** Convert Tens And Units

  Else
     Let #TensUnits = #Input
     do Convert-TensUnits-French                       !** Convert Tens And Units
  End-If
end-procedure

begin-procedure Convert-TensUnits-French
  If #TensUnits >= 80
     Let #TensUnits = #TensUnits - 80

     concat ' ' with $NetInWords
     Let #Index = 80                                   !** Set Index to 80
     do Append-Literal-French                          !** Get Literal From Array

     If #TensUnits = 0
        concat 's' with $NetInWords
     Else
        concat '-' with $NetInWords
        Let #Index = #TensUnits
        do Append-Literal-French
     End-If
  Else
     If #TensUnits >= 60
        Let #TensUnits = #TensUnits - 60

        concat ' ' with $NetInWords
        Let #Index = 60                                !** Set Index to 60
        do Append-Literal-French                       !** Get Literal From Array

        If (#TensUnits = 1) OR (#TensUnits = 11)
           concat ' et ' with $NetInWords
        Else
           If #TensUnits = 0
              concat ''  with $NetInWords
           Else
              concat '-' with $NetInWords
           End-If
        End-If
        Let #Index = #TensUnits
        do Append-Literal-French
     Else
        If #TensUnits >= 20
           Let #Tens      = TRUNC((#TensUnits / {DIX}),0)
           Let #Remainder = TRUNC(MOD(#TensUnits,{DIX}),0)

           concat ' ' with $NetInWords
           Let #Index = #Tens * {DIX}               !** Set Index

           do Append-Literal-French                 !** Get Literal From Array

           If #Remainder = 1
              concat ' et ' with $NetInWords
           Else
              If #Remainder > 1
                 concat '-' with $NetInWords
              end-If
           End-If
           Let #Index = #Remainder
           do Append-Literal-French
        Else
           If $NumType = ' mille'
              If #TensUnits > 1
                 concat ' ' with $NetInWords
                 Let #Index = #TensUnits
                 do Append-Literal-French
              End-If
           Else
              concat ' ' with $NetInWords
              Let #Index = #TensUnits
              do Append-Literal-French
           End-If
        End-If
     End-If
  End-If
end-procedure

begin-procedure Append-Literal-French
  get    $NumLit from  NumberLits(#Index)
  concat $NumLit with $NetInWords
end-procedure
