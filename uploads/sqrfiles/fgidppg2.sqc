!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:12:04:33                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
BEGIN-PROCEDURE PRINT-IDP-DATA-PAGE-2

GRAPHIC () FONT 4 10

LET #MAX_ROWS      = 10
LET #CURRENT_ROW   = 1
PRINT ' ' (39,2)

! GET EMPLOYEE'S STRENGTHS

BEGIN-SELECT

STRENGTH.COMPETENCY
     IF #CURRENT_ROW <= #MAX_ROWS
         MOVE &STRENGTH.COMPETENCY TO $REQD_COMP
         DO GET-COMP-STRNGTH
         PRINT $REQD_STR (+4,3)
     END-IF
STRENGTH.COMPETENCY_RATING
     IF #CURRENT_ROW <= #MAX_ROWS
         MOVE &STRENGTH.COMPETENCY_RATING TO $REQD_RATING
         DO GET-COMP-RATING
         PRINT $REQD_STR (,22)
     END-IF
STRENGTH.EVALUATION_TYPE
     IF #CURRENT_ROW <= #MAX_ROWS
          MOVE 'EVALUATION_TYPE' TO $FIELDNAME
          MOVE &STRENGTH.EVALUATION_TYPE TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          LET $REQD_STR = SUBSTR($XLATSHORTNAME,1,10)
          PRINT $REQD_STR (,48)
     END-IF

!STRENGTH.CAREER_GOAL
     IF #CURRENT_ROW <= #MAX_ROWS
           do Get-Career-Goal
           print &CD.CAREER_GOAL                (,70)
!          PRINT &STRENGTH.CAREER_GOAL (,70)
     END-IF
     ADD 1 TO #CURRENT_ROW

FROM  PS_CAREER_STRENGTH STRENGTH
WHERE EMPLID = $EMPLID
AND   EFFDT  = $IDPDATE

END-SELECT

LET #MAX_ROWS      = 10
LET #CURRENT_ROW   = 1
PRINT ' ' (39,126)

! GET EMPLOYEE'S DEVELOPMENT AREAS

BEGIN-SELECT

WEAKNESS.COMPETENCY
     IF #CURRENT_ROW <= #MAX_ROWS
         MOVE &WEAKNESS.COMPETENCY TO $REQD_COMP
         DO GET-COMP-STRNGTH
         PRINT $REQD_STR (+4,133)
     END-IF
WEAKNESS.COMPETENCY_RATING
     IF #CURRENT_ROW <= #MAX_ROWS
         MOVE &WEAKNESS.COMPETENCY_RATING TO $REQD_RATING
         DO GET-COMP-RATING
         PRINT $REQD_STR (,152)
     END-IF
WEAKNESS.EVALUATION_TYPE
     IF #CURRENT_ROW <= #MAX_ROWS
          MOVE 'EVALUATION_TYPE' TO $FIELDNAME
          MOVE &WEAKNESS.EVALUATION_TYPE TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          LET $REQD_STR = SUBSTR($XLATSHORTNAME,1,10)
          PRINT $REQD_STR (,178)
     END-IF
!WEAKNESS.CAREER_GOAL
     IF #CURRENT_ROW <= #MAX_ROWS
            do Get-Career-Goal
                print &CD.Career_Goal           (,200)
!          PRINT &WEAKNESS.CAREER_GOAL (,194)
     END-IF
     ADD 1 TO #CURRENT_ROW

       FROM  PS_CAREER_WEAKNESS WEAKNESS
       WHERE EMPLID = $EMPLID
       AND   EFFDT  = $IDPDATE

END-SELECT

!GET FORCE RANKING

LET #MAX_ROWS      = 2
LET #CURRENT_ROW   = 1
PRINT ' ' (87,2)

BEGIN-SELECT

RANK_A.REVIEW_DT
RANK_A.RANKING_GROUP_TYPE
          MOVE 'RANKING_GROUP_TYPE' TO $FIELDNAME
          MOVE &RANK_A.RANKING_GROUP_TYPE TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
RANK_A.DESCR
RANK_A.RANK
RANK_A.RANKING_GROUP
          IF #CURRENT_ROW <= #MAX_ROWS
             PRINT &RANK_A.REVIEW_DT (+4,3) EDIT MM-DD-YYYY
             PRINT $XLATSHORTNAME    (,23)
             PRINT &RANK_A.DESCR     (,44)
             PRINT &RANK_A.RANK      (,100)
             PRINT 'out of '         (,106)
             PRINT &RANK_A.RANKING_GROUP (,115)
          END-IF
          ADD 1 TO #CURRENT_ROW

             FROM  PS_CAREER_RANKING RANK_A
             WHERE RANK_A.EMPLID = $EMPLID
             AND   RANK_A.EFFDT  = $IDPDATE
             ORDER BY RANK_A.REVIEW_DT DESC

END-SELECT

!CAREER POTENTIAL

LET #MAX_ROWS      = 1
LET #CURRENT_ROW   = 1

BEGIN-SELECT

POT_A.REVIEW_DT
POT_A.POTENTIAL
          MOVE 'POTENTIAL' TO $FIELDNAME
          MOVE &POT_A.POTENTIAL TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
POT_A.REVIEWER_COMMENTS
          IF #CURRENT_ROW <= #MAX_ROWS
             PRINT $XLATLONGNAME    (143,166)
             PRINT &POT_A.REVIEW_DT (143,230) EDIT MM-DD-YYYY
!             PRINT &POT_A.REVIEWER_COMMENTS      (155,3) WRAP 100 10
             MOVE &POT_A.REVIEWER_COMMENTS TO $PRNTEXT
             MOVE 3 TO #PRNSTARTCOL
             MOVE 151 TO #PRNSTARTROW
             MOVE 144 TO #MAXWRAPWIDTH
             MOVE 4 TO #MOVELINESDOWN
             MOVE 8 TO #MAXPRNLINES
             DO PRINTWRAP
             GRAPHIC () FONT 4 10
         END-IF
          ADD 1 TO #CURRENT_ROW

             FROM  PS_CAREER_POTENTL POT_A
             WHERE POT_A.EMPLID = $EMPLID
             AND   POT_A.EFFDT  = $IDPDATE
             ORDER BY POT_A.REVIEW_DT DESC

END-SELECT

! GET MEMBERSHIP DATA

LET #MAX_ROWS      = 2
LET #CURRENT_ROW   = 1
PRINT ' ' (87,124)

BEGIN-SELECT

MEMB.DT_ISSUED
ACCOMP_A.DESCR
       IF #CURRENT_ROW <= #MAX_ROWS
          PRINT &MEMB.DT_ISSUED (+4,133) EDIT MM-DD-YYYY
          PRINT &ACCOMP_A.DESCR       (  ,154)
       END-IF
       ADD 1 TO #CURRENT_ROW

       FROM  PS_ACCOMPLISHMENTS MEMB,PS_ACCOMP_TBL ACCOMP_A
       WHERE MEMB.EMPLID = $EMPLID
       AND   MEMB.ACCOMPLISHMENT = ACCOMP_A.ACCOMPLISHMENT
       AND   ACCOMP_A.ACCOMP_CATEGORY = 'MEM'

END-SELECT

! GET EDUCATION DATA

LET #MAX_ROWS      = 1
LET #CURRENT_ROW   = 1
PRINT ' ' (83,124)

BEGIN-SELECT

EDUC.ACCOMPLISHMENT
EDUC.YR_ACQUIRED
ACCOMP_B.EDUCATION_LVL
EDUC.MAJOR
EDUC.SCHOOL
EDUC.GVT_CREDIT_HOURS
EDUC.GVT_CRED_HRS_TYPE
EDUC.GPA
       IF #CURRENT_ROW <= #MAX_ROWS
          PRINT &EDUC.YR_ACQUIRED (107,3)
          MOVE 'EDUCATION_LVL' TO $FIELDNAME
          MOVE &ACCOMP_B.EDUCATION_LVL TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          PRINT $XLATLONGNAME     (107,15)
          PRINT &EDUC.MAJOR        (107,80)
          PRINT &EDUC.SCHOOL         (111,3)
          PRINT &EDUC.GVT_CREDIT_HOURS (111,45)
          MOVE 'GVT_CRED_HRS_TYPE' TO $FIELDNAME
          MOVE &EDUC.GVT_CRED_HRS_TYPE TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          PRINT $XLATLONGNAME     (115,23)
          PRINT 'Hours Type:' (115,3)
          PRINT 'GPA: ' (115,80)
          PRINT &EDUC.GPA (115,90)
       END-IF
       ADD 1 TO #CURRENT_ROW

       FROM  PS_ACCOMPLISHMENTS EDUC, PS_ACCOMP_TBL ACCOMP_B
       WHERE EDUC.EMPLID = $EMPLID
       AND   EDUC.ACCOMPLISHMENT = ACCOMP_B.ACCOMPLISHMENT
       AND   ACCOMP_B.ACCOMP_CATEGORY = 'DEG'
       ORDER BY EDUC.ACCOMPLISHMENT DESC


END-SELECT

! GET LANGUAGES DATA

LET #MAX_ROWS      = 3
LET #CURRENT_ROW   = 1
PRINT ' ' (103,126)

BEGIN-SELECT

ACCOMP_C.DESCR
LANG.SPEAK_PROFICIENCY
LANG.READ_PROFICIENCY
LANG.WRITE_PROFICIENCY
       IF #CURRENT_ROW <= #MAX_ROWS
          PRINT &ACCOMP_C.DESCR    (+4,133,27)
          MOVE 'SPEAK_PROFICIENCY' TO $FIELDNAME
          MOVE &LANG.SPEAK_PROFICIENCY TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          PRINT $XLATLONGNAME      (,192,27)
          MOVE 'READ_PROFICIENCY' TO $FIELDNAME
          MOVE &LANG.READ_PROFICIENCY TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          PRINT $XLATLONGNAME     (+4,133,27)
          MOVE 'WRITE_PROFICIENCY' TO $FIELDNAME
          MOVE &LANG.WRITE_PROFICIENCY TO $FIELDVALUE
          DO READ-TRANSLATE-TABLE
          PRINT $XLATLONGNAME     (,192,27)
       END-IF
       ADD 1 TO #CURRENT_ROW

       FROM PS_ACCOMPLISHMENTS LANG, PS_ACCOMP_TBL ACCOMP_C
       WHERE LANG.EMPLID = $EMPLID
       AND   LANG.ACCOMPLISHMENT = ACCOMP_C.ACCOMPLISHMENT
       AND   ACCOMP_C.ACCOMP_CATEGORY = 'LNG'

END-SELECT

! GET LICENSES DATA

LET #MAX_ROWS      = 3
LET #CURRENT_ROW   = 1
PRINT ' ' (123,2)

BEGIN-SELECT

ACCOMP_D.DESCR
LIC.DT_ISSUED
LIC.EXPIRATN_DT

       IF #CURRENT_ROW <= #MAX_ROWS
          PRINT &ACCOMP_D.DESCR  (+4,  3)
          PRINT &LIC.DT_ISSUED   (  ,80) EDIT MM-DD-YYYY
          PRINT &LIC.EXPIRATN_DT (  ,105) EDIT MM-DD-YYYY
       END-IF
       ADD 1 TO #CURRENT_ROW

       FROM  PS_ACCOMPLISHMENTS LIC, PS_ACCOMP_TBL ACCOMP_D
       WHERE LIC.EMPLID = $EMPLID
       AND   LIC.ACCOMPLISHMENT = ACCOMP_D.ACCOMPLISHMENT
       AND   ACCOMP_D.ACCOMP_CATEGORY = 'LIC'

END-SELECT

! GET TESTS DATA

LET #MAX_ROWS      = 3
LET #CURRENT_ROW   = 1
PRINT ' ' (123,126)

BEGIN-SELECT

TESTS.DT_ISSUED
ACCOMP_E.DESCR
TESTS.SCORE
TESTS.PASSED

       IF #CURRENT_ROW <= #MAX_ROWS
          PRINT &TESTS.DT_ISSUED (+4,133) EDIT MM-DD-YYYY
          PRINT &ACCOMP_E.DESCR  (  ,151)
          PRINT &TESTS.SCORE     (  ,206)
          PRINT 'PASSED:'        (  ,216)
          IF &TESTS.PASSED = 'Y'
              PRINT 'Yes'        (  ,232)
          ELSE
              PRINT 'No'         (  ,232)
          END-IF
       END-IF
       ADD 1 TO #CURRENT_ROW

       FROM  PS_ACCOMPLISHMENTS TESTS, PS_ACCOMP_TBL ACCOMP_E
       WHERE TESTS.EMPLID = $EMPLID
       AND   TESTS.ACCOMPLISHMENT = ACCOMP_E.ACCOMPLISHMENT
       AND   ACCOMP_E.ACCOMP_CATEGORY = 'TST'

END-SELECT

END-PROCEDURE

BEGIN-PROCEDURE GET-COMP-STRNGTH

BEGIN-SELECT
CMP.DESCR
       LET $REQD_STR = SUBSTR(&CMP.DESCR,1,10)

FROM PS_COMPETENCY_TBL CMP
WHERE CMP.COMPETENCY = $REQD_COMP
END-SELECT

END-PROCEDURE

BEGIN-PROCEDURE GET-COMP-RATING

BEGIN-SELECT

EMPL_RATING_5.DESCR
        LET $REQD_STR = SUBSTR(&EMPL_RATING_5.DESCR,1,10)

        FROM  PS_REVW_RATING_TBL EMPL_RATING_5,PS_COMPETENCY_TBL COMP_RATING_A
        WHERE EMPL_RATING_5.REVIEW_RATING = $REQD_RATING
               AND COMP_RATING_A.COMPETENCY = $REQD_COMP
               AND EMPL_RATING_5.RATING_MODEL = COMP_RATING_A.RATING_MODEL
               AND EFFDT = (SELECT MAX(EFFDT) FROM PS_REVW_RATING_TBL EMPL_RATING_4
                           WHERE EFFDT <= $IDPDATE
                           AND   RATING_MODEL = EMPL_RATING_5.RATING_MODEL
                           AND   REVIEW_RATING = $REQD_RATING)

END-SELECT

END-PROCEDURE

begin-procedure Get-Career-Goal

begin-SELECT
CD.EMPLID
CD.EFFDT
CD.EST_COMPLETION_DT
CD.CAREER_GOAL
FROM PS_CAREER_DEVELOP CD
WHERE CD.EMPLID = $EMPLID
  AND CD.EFFDT = $IDPDATE
end-SELECT

end-procedure
