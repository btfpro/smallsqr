!***********************************************************************
! MXSTP003.SQR   STPS DC-2 Training and Development Plans.             *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:13:48:51                                 *
!       $Release:  HR9                                                 *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'   !Set environment

#define c00  16
#define c01  20
#define c02  24   !Address
#define c03  25
#define c04  26
#define c05  32
#define c06  36
#define c07  40
#define c08  44
#define c09  48   ! Contract Date
#define c10  57
#define c11  59
#define c12  61
#define c13  63
#define c14  65
#define c15  68   !Estabid Number
#define c16  71
#define c17  85
#define c21  92

Begin-Setup
#include 'setupdb.sqc'
 Declare-Printer   THIS_REPORT
  Type=HPLASERJET
  Font=5
  Point-Size=14
  Pitch=17
  Symbol-Set=19U     ! ASCII symbol set
 End-Declare
 
 Declare-Layout THIS_REPORT
  Orientation=Portrait
  Top-Margin= .35
  Left-Margin=.2
  Max-Lines=100
  Max-Columns=100
  Char-Width=6.5    ! 7.2
  Line-Height=7.6     ! 72/printer_point-size
 End-Declare
 
 Declare-Report THIS_REPORT
  Printer-Type=HPLASERJET
  LayOut=THIS_REPORT
 End-Declare

End-Setup

begin-report
  move '1' to $ReportDateType
  move '1' to $Reportyear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
!  do Declare-Printer
  do Init-Report
  do Select-Parameters
  do Report
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do Stdapi-Term
  !do Reset
end-report


begin-procedure Init-Report
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  move 'MXSTP003' to $ReportID
  let $ReportTitle = 'STPS DC-2 Plan y Programas de Capacitacion y Adiestramiento'
  display $ReportTitle
end-procedure Init-Report


begin-heading 1
  position  (1)
end-heading


!begin-procedure Declare-Printer
!  let #fontstd  = 5
!  let #sizestd  = 6
!  let #fontsm   = 5
!  let #sizesm   = 8
!  let #fontmed  = 5
!  let #sizemed  = 10
!  let #fontgr   = 5
!  let #sizegr   = 12
!  let #fontxgr  = 5
!  let #sizexgr  = 14
!  declare printer
!    type          = HPLASERJET
!    orientation   = portrait
!    top-margin    = 0.35
!    left-margin   = 0.0   !0.5
!    symbol-set    = 19U
    !CHARS-INCH    = 4  !test
    !char-size     = 10 !test
!    font          = 5
!    font-style    = fixed
!    point-size    = 14 !12
!    line-size     = 9
  !graphic () font :#fontstd :#sizestd
!end-procedure Declare-Printer


begin-procedure Report
  do Get-Report-Data
  do Get-Estabid-Data
  do Get-Committee-Data
  do Get-ER-Locations
  do Count-Employees
  do Get-Objectives
  do print-format
end-procedure Report


begin-procedure Select-Parameters
begin-select
RC.COMPANY
RC.ESTABID
RC.CONTRACT_TYPE_MEX
RC.MIXED_COMM_ID_MEX
RC.PRINT_DATE
RC.SPECIFIC_PLANS_MEX
RC.COMPANY_PLANS_MEX
RC.GEN_SYSTEM_MEX
RC.PLAN_PHASES_MEX
RC.BEGIN_DT
RC.END_DT
RC.PRINT_ADDRESS_MEX

  let $Company = &RC.COMPANY
  let $ESTABID = rtrim(&RC.ESTABID,' ')
  let $Contract_Type = &RC.CONTRACT_TYPE_MEX
  let $Committee = &RC.MIXED_COMM_ID_MEX
  let $Contract_Dt = &RC.PRINT_DATE
  let $Specific_Plans = &RC.SPECIFIC_PLANS_MEX
  let $Company_Plans  = &RC.COMPANY_PLANS_MEX
  let $General_System = &RC.GEN_SYSTEM_MEX
  let #Plan_Phases    = &RC.PLAN_PHASES_MEX
  let $Plan_Begin_Dt  = &RC.BEGIN_DT
  let $Plan_End_Dt    = &RC.END_DT
  let $Print_Address  = &RC.PRINT_ADDRESS_MEX

  let $IMS_ER_S = substr($ESTABID,1,11)
  let $IMS_ER_1 = substr($IMS_ER_S,1,1)
  let $IMS_ER_2 = substr($IMS_ER_S,2,1)
  let $IMS_ER_3 = substr($IMS_ER_S,3,1)
  let $IMS_ER_4 = substr($IMS_ER_S,4,1)
  let $IMS_ER_5 = substr($IMS_ER_S,5,1)
  let $IMS_ER_6 = substr($IMS_ER_S,6,1)
  let $IMS_ER_7 = substr($IMS_ER_S,7,1)
  let $IMS_ER_8 = substr($IMS_ER_S,8,1)
  let $IMS_ER_9 = substr($IMS_ER_S,9,1)
  let $IMS_ER_10 = substr($IMS_ER_S,10,1)
  let $IMS_ER_11 = substr($IMS_ER_S,11,1)
  
  do Convert-To-DTU-Date($Contract_Dt,$Contract_Dt)
  
  
  let $Contract_Dt_Y1 = substr($Contract_Dt,3,1)
  let $Contract_Dt_Y2 = substr($Contract_Dt,4,1)
  let $Contract_Dt_M1 = substr($Contract_Dt,6,1)
  let $Contract_Dt_M2 = substr($Contract_Dt,7,1)
  let $Contract_Dt_D1 = substr($Contract_Dt,9,1)
  let $Contract_Dt_D2 = substr($Contract_Dt,10,1)
  
  do Convert-To-DTU-Date($Plan_Begin_Dt,$Plan_Begin_Dt) 
  let $Begin_Dt_Y1 = substr($Plan_Begin_Dt,3,1)
  let $Begin_Dt_Y2 = substr($Plan_Begin_Dt,4,1)
  let $Begin_Dt_M1 = substr($Plan_Begin_Dt,6,1)
  let $Begin_Dt_M2 = substr($Plan_Begin_Dt,7,1)
  let $Begin_Dt_D1 = substr($Plan_Begin_Dt,9,1)
  let $Begin_Dt_D2 = substr($Plan_Begin_Dt,10,1)
  
  do Convert-To-DTU-Date($Plan_End_Dt,$Plan_End_Dt) 
  let $End_Dt_Y1 = substr($Plan_End_Dt,3,1)
  let $End_Dt_Y2 = substr($Plan_End_Dt,4,1)
  let $End_Dt_M1 = substr($Plan_End_Dt,6,1)
  let $End_Dt_M2 = substr($Plan_End_Dt,7,1)
  let $End_Dt_D1 = substr($Plan_End_Dt,9,1)
  let $End_Dt_D2 = substr($Plan_End_Dt,10,1)


FROM PS_RUN_STPS_MEX RC
WHERE RC.OPRID       = $Prcs_OprID
  AND RC.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Select-Parameters


begin-procedure Get-Report-Data
begin-select
C.DESCR
CM.RFC_ER_ID_MEX
CM.COMP_ACTIVITY_MEX
CM.REP_NAME_MEX
  let $Comp_Descr = &C.DESCR
  let $RFC_ER_ID  = &CM.RFC_ER_ID_MEX
  let $RFC_ER_ID  = rtrim($RFC_ER_ID,' ')  
  let $Comp_Act   = &CM.COMP_ACTIVITY_MEX
  let $Rep_Name   = &CM.REP_NAME_MEX
  let $RFC_ER_S   = Rtrim(substr($RFC_ER_ID,1,12), ' ')
  let $RFC_ER_1   = substr($RFC_ER_S,1,1)
  let $RFC_ER_2   = substr($RFC_ER_S,2,1)
  let $RFC_ER_3   = Rtrim(substr($RFC_ER_S,3,1), ' ')
  let $RFC_ER_4   = substr($RFC_ER_S,4,1)
  let $RFC_ER_5   = substr($RFC_ER_S,5,1)
  let $RFC_ER_6   = substr($RFC_ER_S,6,1)
  let $RFC_ER_7   = substr($RFC_ER_S,7,1)
  let $RFC_ER_8   = substr($RFC_ER_S,8,1)
  let $RFC_ER_9   = substr($RFC_ER_S,9,1)
  let $RFC_ER_10  = substr($RFC_ER_S,10,1)
  let $RFC_ER_11  = substr($RFC_ER_S,11,1)
  let $RFC_ER_12  = substr($RFC_ER_S,12,1)
  do Get-Comp-Descr-Lang

FROM PS_COMPANY_TBL     C,
     PS_COMPANY_TBL_MEX CM

WHERE C.COMPANY = $Company
and C.COMPANY = CM.COMPANY
and C.EFFDT = (SELECT MAX(EFFDT) FROM PS_COMPANY_TBL
               WHERE COMPANY = C.COMPANY
               AND EFFDT <= $AsofToday)
and CM.EFFDT = C.EFFDT
end-select
end-procedure Get-Report-Data


begin-procedure Get-Comp-Descr-Lang
begin-SELECT
CTL.DESCR
  if rtrim(&CTL.Descr,' ') <> ''
     let $Comp_Descr  = rtrim(&CTL.Descr,' ')
  end-if

FROM  PS_COMPNY_TBL_LANG CTL
WHERE CTL.COMPANY     = $Company
  AND CTL.LANGUAGE_CD = 'ESP'
  AND CTL.EFFDT       =
     (SELECT MAX(EFFDT)
      FROM   PS_COMPNY_TBL_LANG
      WHERE  COMPANY     = $Company
        AND  LANGUAGE_CD = CTL.LANGUAGE_CD
        AND  EFFDT      <= $AsofToday)
end-SELECT
end-procedure Get-Comp-Descr-Lang


begin-procedure Get-Estabid-Data
begin-select
IMS.ESTABID
IMS.ADDRESS1
IMS.ADDRESS2
IMS.ADDRESS3
IMS.ADDRESS4
IMS.CITY
IMS.POSTAL
IMS.STATE
  let $Address1 = &IMS.ADDRESS1
  let $Address2 = &IMS.ADDRESS2
  let $Address3 = &IMS.ADDRESS3
  let $Municip  = &IMS.ADDRESS4
  let $City     = rtrim(&IMS.CITY,' ')
  let $Postal   = substr(&IMS.POSTAL,1,5)
  let $Postal1  = substr($POSTAL,1,1)
  let $Postal2  = substr($POSTAL,2,1)
  let $Postal3  = substr($POSTAL,3,1)
  let $Postal4  = substr($POSTAL,4,1)
  let $Postal5  = substr($POSTAL,5,1)
  let $State    = &IMS.STATE
  do Get-State-Name
  do Get-Phones

from PS_ESTAB_TBL IMS
Where IMS.ESTABID = $ESTABID
and IMS.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL
               WHERE ESTABID = IMS.ESTABID
               AND EFF_STATUS = 'A'
               AND EFFDT <= $AsofToday)
end-select
end-procedure Get-Estabid-Data


begin-procedure Get-State-Name
begin-select
SN.DESCR
  let $State_Desc = &SN.DESCR

FROM PS_STATE_NAMES_TBL SN
WHERE SN.COUNTRY = 'MEX'
  AND SN.STATE = $State
end-select
end-procedure Get-State-Name


begin-procedure Get-Phones
begin-select
PHONE
  let $phone = $Phone || '  ' || rtrim(&PHONE,' ')

FROM PS_COMP_PHONE_TBL
WHERE COMPANY = $Company
end-select
end-procedure Get-Phones


begin-procedure Get-Committee-Data
begin-select
COUNT(*) &LOCATIONS
  move &LOCATIONS to $Locations 0999
  Let $Loc_1 = substr($Locations,1,1)
  Let $Loc_2 = substr($Locations,2,1)
  Let $Loc_3 = substr($Locations,3,1)
  Let $Loc_4 = substr($Locations,4,1)

FROM PS_MIX_COM_LOC_MEX ML
WHERE ML.MIXED_COMM_ID_MEX = $Committee
AND ML.EFFDT = (SELECT MAX(EFFDT) FROM PS_MIX_COM_LOC_MEX
               WHERE MIXED_COMM_ID_MEX = ML.MIXED_COMM_ID_MEX
               AND EFFDT <= $AsofToday)
end-select
end-procedure Get-Committee-Data


begin-procedure print-format
! *** PRINT ADDRESS
print $Comp_Descr           ({c00},4)

print $RFC_ER_1             ({c01},4)
print $RFC_ER_2             ({c01},7)
print $RFC_ER_3             ({c01},10)
print $RFC_ER_4             ({c01},18)
print $RFC_ER_5             ({c01},21)
print $RFC_ER_6             ({c01},24)
print $RFC_ER_7             ({c01},27)
print $RFC_ER_8             ({c01},30)
print $RFC_ER_9             ({c01},33)
print $RFC_ER_10            ({c01},39)
print $RFC_ER_11            ({c01},42)
print $RFC_ER_12            ({c01},45)

print $IMS_ER_1             ({c01},53)
print $IMS_ER_2             ({c01},56)
print $IMS_ER_3             ({c01},59)
print $IMS_ER_4             ({c01},62)
print $IMS_ER_5             ({c01},65)
print $IMS_ER_6             ({c01},68)
print $IMS_ER_7             ({c01},70)
print $IMS_ER_8             ({c01},73)
print $IMS_ER_9             ({c01},76)
print $IMS_ER_10            ({c01},79)
print $IMS_ER_11            ({c01},85)

if $Print_Address = 'Y'
   print $Address1          ({c02},4)
   print $Address2          ({c03},4)
   print $Address3          ({c04},4)
   print $City              ({c05},4)
   print $Postal1           ({c05},30)
   print $Postal2           ({c05},33)
   print $Postal3           ({c05},36)
   print $Postal4           ({c05},39)
   print $Postal5           ({c05},42)
   print $Municip           ({c05},45,26)
   print $State_Desc        ({c06},4)
   print $Phone             ({c06},45)
end-if

print $Comp_Act             ({c07},4)

print $Total_Emp_1          ({c08},21)
print $Total_Emp_2          ({c08},24)
print $Total_Emp_3          ({c08},27)
print $Total_Emp_4          ({c08},30)
print $Total_Emp_5          ({c08},33)
print $Total_Emp_6          ({c08},36)

evaluate $Contract_Type
  when = '0010'
    print 'X'               ({c08},53)
    break
  when = '0020'
    print 'X'               ({c08},66)
    break
  when = '0030'
    print 'X'               ({c08},82)
    break
end-evaluate


print $Contract_Dt_Y1       ({c09},70)
print $Contract_Dt_Y2       ({c09},73)
print $Contract_Dt_M1       ({c09},76)
print $Contract_Dt_M2       ({c09},79)
print $Contract_Dt_D1       ({c09},82)
print $Contract_Dt_D2       ({c09},85)

print $Itemnum_1            ({c10},44)
print $Itemnum_2            ({c11},44)
print $Itemnum_3            ({c12},44)
print $Itemnum_4            ({c13},44)
print $Itemnum_5            ({c14},44)

print 'X'                   ({c11},82)
print 'X'                   ({c12},82)
print 'X'                   ({c13},82)

if $Specific_Plans = 'Y'
   print 'X'                 ({c11},82)
end-if
if $Company_Plans  = 'Y'
   print 'X'                 ({c12},82)
end-if
if $General_System = 'Y'
   print 'X'                 ({c13},82)
end-if

print $Loc_1                ({c15},30)
print $Loc_2                ({c15},33)
print $Loc_3                ({c15},36)
print $Loc_4                ({c15},39)

print #Plan_Phases          ({c16},29) edit 99

print $Begin_Dt_Y1          ({c16},47)
print $Begin_Dt_Y2          ({c16},50)
print $Begin_Dt_M1          ({c16},53)
print $Begin_Dt_M2          ({c16},56)
print $Begin_Dt_D1          ({c16},59)
print $Begin_Dt_D2          ({c16},62)

print $End_Dt_Y1            ({c16},70)
print $End_Dt_Y2            ({c16},73)
print $End_Dt_M1            ({c16},76)
print $End_Dt_M2            ({c16},79)
print $End_Dt_D1            ({c16},82)
print $End_Dt_D2            ({c16},85)

print $Rep_Name             ({c17},30)
let $City = $City || ', ' || $State
print $City                 ({c21},17)
do Convert-To-DTU-Date($AsOfToday,$AsOfToday1)
let $Today_Y1 = substr($AsOfToday1,3,1)
let $Today_Y2 = substr($AsOfToday1,4,1)
let $Today_M1 = substr($AsOfToday1,6,1)
let $Today_M2 = substr($AsOfToday1,7,1)
let $Today_D1 = substr($AsOfToday1,9,1)
let $Today_D2 = substr($AsOfToday1,10,1)
print $Today_Y1             ({c21},50)
print $Today_Y2             ({c21},53)
print $Today_M1             ({c21},56)
print $Today_M2             ({c21},59)
print $Today_D1             ({c21},62)
print $Today_D2             ({c21},65)
end-procedure print-format


begin-procedure Get-Objectives
begin-select
S1.ITEMNUM
S1.TRAIN_PLAN_OBJ_MEX
  let #Itemnum  = &S1.ITEMNUM
  let $Plan_obj = &S1.TRAIN_PLAN_OBJ_MEX

  evaluate $Plan_Obj
    when = '0010'
      move #Itemnum to $Itemnum_1 9
      break
    when = '0020'
      move #Itemnum to $Itemnum_2 9
      break
    when = '0030'
      move #Itemnum to $Itemnum_3 9
      break
    when = '0040'
      move #Itemnum to $Itemnum_4 9
      break
    when = '0050'
      move #Itemnum to $Itemnum_5 9
      break
  end-evaluate

FROM PS_RUN_STPS1_MEX S1
WHERE S1.OPRID     = $Prcs_OprID
AND S1.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
ORDER BY S1.TRAIN_PLAN_OBJ_MEX
end-select
end-procedure Get-Objectives


begin-procedure Get-ER-Locations
  let $Where_Location = '('
begin-select
L.LOCATION
  let $Locat = rtrim(&L.LOCATION,' ')
  concat ''''   with $Where_Location
  concat $Locat with $Where_Location
  concat ''''   with $Where_Location
  concat ','   with $Where_Location
FROM PS_LOCATION_TBL L
WHERE L.ESTABID = $ESTABID
AND L.EFFDT = (SELECT MAX(EFFDT) FROM PS_LOCATION_TBL
              WHERE SETID = L.SETID
              AND LOCATION = L.LOCATION
              AND EFF_STATUS = 'A'
              AND EFFDT <= $AsOfToday)
end-select
  let #L-Locat = length($Where_Location)
  if #L-Locat > 1
    let $Where_Location = rtrim($Where_Location,',')
    concat ')' with $Where_Location
  else
     move '(' to $Where_Location
     concat '''' with $Where_Location
     concat '''' with $Where_Location
     concat ')' with $Where_Location
  end-if
  show '$Where_Location ' $Where_Location
end-procedure Get-ER-Locations


begin-procedure Count-Employees
begin-select
COUNT(*) &Total_Empl
  move &Total_Empl to $Total_Emp 099999
  Let $Total_Emp_1 = substr($Total_Emp,1,1)
  Let $Total_Emp_2 = substr($Total_Emp,2,1)
  Let $Total_Emp_3 = substr($Total_Emp,3,1)
  Let $Total_Emp_4 = substr($Total_Emp,4,1)
  Let $Total_Emp_5 = substr($Total_Emp,5,1)
  Let $Total_Emp_6 = substr($Total_Emp,6,1)

FROM PS_JOB J
WHERE J.COMPANY = $Company
AND J.LOCATION IN [$Where_Location]
AND J.HR_STATUS = 'A'
AND J.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
        WHERE EMPLID = J.EMPLID
        AND EMPL_RCD = J.EMPL_RCD
        AND EFFDT <= $AsOfToday)
AND J.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE EMPLID = J.EMPLID
        AND EMPL_RCD = J.EMPL_RCD
        AND EFFDT = J.EFFDT)
end-select
end-procedure Count-Employees

!***************************************************************
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Date math routines
#include 'askcalyr.sqc'  !Ask-Calendar-Year
