!***********************************************************************
!  PER039GR:   Schwerbehindertenliste                                  *
!                                                                      *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2006/07/19:14:41:05                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

#define JOBCODE_TBL
#define LOCATION_TBL
#include 'rellang.sqc'

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-report

!----------------------------------------------------------------
begin-procedure Init-Layout

#define col1    1
#define col2    10
#define col2_1  13
#define col3    49
#define col3_1  52
#define col4    92
#define col4_1  95
#define col5    114
#define col5_1  117
#define col6    140
#define col6_1  143

end-procedure

!----------------------------------------------------------------
begin-heading 17

  #Include 'stdhdg01.sqc'

  !print 'Standort: '             (,{col3},1)
  !print $Location               (0,+2,1)
  !print $LocDescr               (0,+2)

  LET $Location = rtrim($Location,' ')
  LET $LOCATION_TBL-DESCR = rtrim($LOCATION_TBL-DESCR,' ')

  let $LocTitle = 'Standort: ' || ' ' || $Location || ' ' || $LOCATION_TBL-DESCR

 show '$LocTitle ' $LocTitle 

  print $LocTitle         (+1,{col1})
  print $CALENDAR_YEAR          (0,0,48) center


 ! Line 1
   print 'Lfd.'                         (+2, {col1},8)
   print 'a)'                           (, {col2},2)
   print 'Name'                         (, {col2_1},35)
   print 'a)'                           (, {col3},2)
   print 'Schlüssel-Nr.'                (, {col3_1},39)
   print 'a)'                           (, {col4},2)
   print 'Eingetreten'                  (, {col4_1},18)
   print 'a)'                           (, {col5},2)
   print 'Bezeichnung'                  (, {col5_1},22)
   print 'Nachweis über die Angaben'    (, {col6})

 ! Line 2
   print 'Nr.'                          (+1, {col1},93)
   print 'am'                           (, {col4_1},21)
   print 'SB/GL'                        (, {col5_1},22)
   print 'in Spalte 5'                  (, {col6})

 ! Line 3
   print 'b) Vorname'                   (+1, {col2},38)
   print 'b)'                           (, {col3},2)
   print 'Bezeichnung'                  (, {col3_1},42)
   print 'bzw.'                         (, {col4_1},44)
   print 'a)'                           (, {col6},2)
   print 'Dienststelle'                 (, {col6_1})

 ! Line 4
   print 'der Tätigkeit'                (+1, {col3_1},42)
   print 'Ausbildungs-'                 (, {col4_1},44)
   print 'b)'                           (, {col6},2)
   print 'Nummer des Ausweises ggf.'    (, {col6_1})

 ! Line 5
   print 'c) Wohnort'                   (+1, {col2},84)
   print 'beginn'                       (, {col4_1},47)
   print 'Datum und Geschäftszeichen'   (, {col6_1})

 ! Line 6
   print 'b)'                           (+1, {col5},2)
   print 'Personen-'                    (, {col5_1},25)
   print 'des Nachweises'               (, {col6_1})

 ! Line 7
   print 'd)'                           (+1, {col2},2)
   print 'Geburtsdatum'                 (, {col2_1},78)
   print 'b)'                           (, {col4},2)
   print 'Ausgeschie-'                  (, {col4_1},21)
   print 'gruppe mit'                   (, {col5_1},22)
   print 'c)'                           (, {col6},2)
   print 'gültig ab'                    (, {col6_1})

 ! Line 8
   print 'den am'                       (+1, {col4_1},21)
   print 'Zahl der an-'                 (, {col5_1},22)
   print 'd)'                           (, {col6},2)
   print 'befristet bis'                (, {col6_1})

 ! Line 9
   print 'bzw.'                         (+1, {col4_1},21)
   print 'zurechnen-'                   (, {col5_1})

 ! Line 10
   print 'Ausbildungs-'                 (+1, {col4_1},21)
   print 'den Pflicht-'                 (, {col5_1})

 ! Line 11
   print 'ende'                         (+1, {col4_1},21)
   print 'plätze'                       (, {col5_1})

end-heading

!----------------------------------------------------------------
begin-procedure Init-Report

  move 'PER039GR' to $ReportID
  move 'Schwerbehindertenliste ' to $ReportTitle

  display $ReportTitle
  do Stdapi-Init

  if $prcs_process_instance = ''
    !No Prompt
  else
    do Select-Parameters
  end-if

  #define page-len 55

 move #YEAR to $year

 let $year = substr($year, 1, 4)
 let $Out = $year || '12' || '31' || '000000'

 do Format-DateTime($Out, $End_Year,{DEFCMP},'','native')

 let $Out = $year || '01' || '01' || '000000'
 do Format-DateTime($Out, $Begin_Year,{DEFCMP},'','native')
end-procedure

!----------------------------------------------------------------
begin-procedure Get-Values

  let #YEAR = &RUN_CNTL_HR.CALENDAR_YEAR
  let $CALENDAR_YEAR = &RUN_CNTL_HR.CALENDAR_YEAR
  let $CALENDAR_YEAR = substr($CALENDAR_YEAR, 1, 4)

end-procedure

!----------------------------------------------------------------
begin-procedure Process-Main
begin-SELECT DISTINCT

LT.SETID
LT.LOCATION
LT.DESCR
   let $Location = rtrim(&LT.LOCATION,' ')
   let $Setid = rtrim(&LT.SETID,' ')
   let $LOCATION_TBL-DESCR = rtrim(&LT.DESCR,' ')

   DO Get_Related_LOCATION_TBL($End_Year, $Location, $Setid)
   let #total = 0
   do Get-Employees
   new-page
FROM PS_LOCATION_TBL LT, PS_JOB J1
WHERE J1.SETID_LOCATION =  LT.SETID 
AND   J1.LOCATION = LT.LOCATION 
AND LT.EFFDT = ( SELECT MAX(EFFDT) FROM PS_LOCATION_TBL LT1 WHERE LT1.SETID = LT.SETID
                 AND   LT1.LOCATION = LT.LOCATION AND   LT1.EFFDT <= $End_Year)
AND  EXISTS ( SELECT 'X' FROM PS_DISABILITY_GER DG1 WHERE DG1.EMPLID = J1.EMPLID AND DG1.EFFDT < $End_Year)
ORDER BY LT.SETID,LT.LOCATION

end-select

end-procedure

!****************************************************************
!Get Employee's who where active between the dates              *
!All Employees are taken which have at least one job active row *
!in the reporting period or the last job before the reporting   *
!period was an active row                                       *
!Also check if for the reporting period the employee was not an *
!pension                                                        *
!****************************************************************
begin-procedure Get-Employees

begin-select
PD.EMPLID
PD.NAME
P.BIRTHDATE
DG.DISABLED_TYPE
DG.DISABLED_POSN_CNT
DG.DIS_STATUS_OFFICE
DG.DISABILITY_CARD_NO
DG.EFFDT
DG.DISABILITY_EVAL_DT

  let $Emplid = &PD.EMPLID

  Do Get-Empl-Address ($Emplid,'HOME', $AddressFound)
  let $CITY = $GETADDR_CITY
  let $POSTAL = $GETADDR_POSTAL
  string $postal $city by ' ' into $CITY2


  do Get-Employee-Category-Info
  if $Non-Pension = 'Y'
     do Get-Employee-Info
  end-if

FROM PS_PERSON_NAME PD
    ,PS_DISABILITY_GER DG
    ,PS_PERSON P

WHERE DG.EMPLID = PD.EMPLID
AND PD.EMPLID = P.EMPLID
AND   DG.EFFDT = (SELECT MAX(EFFDT) FROM PS_DISABILITY_GER DG1 WHERE DG1.EMPLID = DG.EMPLID
                                  AND   DG1.EFFDT <= $End_Year)
AND  DG.DISABLED_TYPE <> 'N'
AND  ( EXISTS (SELECT 'X' FROM PS_JOB J WHERE  J.EMPLID = PD.EMPLID
               AND    (J.EFFDT <= $End_Year AND J.EFFDT > $Begin_Year)
               AND J.LOCATION = $Location
               AND J.HR_STATUS = 'A' )
          OR
          'A' = (SELECT J2.HR_STATUS FROM PS_JOB J2 WHERE J2.EMPLID = PD.EMPLID
                 AND J2.LOCATION = $Location AND J2.PAYGROUP <> '02'
                 AND J2.EFFDT = ( SELECT MAX(EFFDT) FROM PS_JOB J3 WHERE J3.EMPLID = J2.EMPLID
                                 AND   J3.EMPL_RCD = J2.EMPL_RCD AND   J3.EFFDT <= $Begin_Year)
                 AND J2.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB J4 WHERE J4.EMPLID = J2.EMPLID
                                  AND   J4.EMPL_RCD = J2.EMPL_RCD AND   J4.EFFDT = J2.EFFDT) )
           )
end-select
end-procedure  Get-Employees


!****************************************************************
!Get all employees for the Location which were still active at  *
!the begin of the month                                         *
!****************************************************************
begin-procedure Get-Employee-Info
begin-SELECT

JOB.EMPLID
JOB.EMPL_RCD
JOB.EFFDT
JOB.EMPL_STATUS
JOB.JOBCODE
JOB.SETID_JOBCODE
JOB.ACTION
   let #EmplRcdNbr = &JOB.EMPL_RCD
   let $Effdt = &JOB.EFFDT
   let $Action = rtrim(&JOB.ACTION,' ')

   let #total = #total + 1
   let #var = &DG.DISABLED_POSN_CNT
   do Format-Number(#var, $var, '9,9')
   let $FieldName = 'DISABLED_TYPE'
   let $FieldValue = &DG.DISABLED_TYPE
   do Read-Translate-Table
   let $short = rtrim($XlatShortName, ' ')
   string $short $var by ' ' into $col5_b
   unstring &PD.NAME by ',' into $Name $Vorname
   do Format-DateTime(&P.BIRTHDATE, $BirthDate,{DEFDATE},'','')
   do Format-DateTime(&DG.EFFDT, $DisabledEffdt,{DEFDATE},'','')
   do Format-DateTime(&DG.DISABILITY_EVAL_DT, $EvalDate,{DEFDATE},'','')
   do Get-Hire-Date
   do Get-Jobcode-Info
   DO Get_Related_JOBCODE_TBL($End_Year, &JOB.JOBCODE, $Setid)
   do print-data

FROM PS_JOB JOB

WHERE JOB.EMPLID = $Emplid
AND   JOB.LOCATION = $Location
AND   JOB.SETID_LOCATION = $Setid
AND   JOB.EFFDT = (
                   SELECT MAX(EFFDT)
                   FROM PS_JOB J1
                   WHERE J1.EMPLID = JOB.EMPLID
                   AND   J1.EMPL_RCD = JOB.EMPL_RCD
                   AND   J1.EFFDT <= $End_Year
                  )
AND   JOB.EFFSEQ = (
                    SELECT MAX(EFFSEQ)
                    FROM PS_JOB J2
                    WHERE J2.EMPLID = JOB.EMPLID
                    AND   J2.EMPL_RCD = JOB.EMPL_RCD
                    AND   J2.EFFDT = JOB.EFFDT
                   )
end-select
end-procedure Get-employee-Info

!******************************************************************
!Get the Employee Category the employee has at the end of the month
!******************************************************************
begin-procedure Get-Employee-Category-Info

let $Non-Pension = ''

begin-SELECT
'X'
   let $Non-Pension = 'Y'
FROM PS_INSTALLATION
WHERE EXISTS (
               SELECT 'X'
               FROM PS_JOB J
               WHERE  J.EMPLID = $Empld
               AND    (
                       J.EFFDT <= $End_Year
                       AND
                       J.EFFDT > $Begin_Year
                      )
                     AND J.EMPL_CTG NOT IN ('004','006','007')

              )
end-select

begin-SELECT
J2.EMPL_CTG
   if $Non-Pension <> 'Y'
      if &J2.EMPL_CTG <> '004' and
         &J2.EMPL_CTG <> '006' and
         &J2.EMPL_CTG <> '007'

      let $Non-Pension = 'Y'

      end-if
   end-if
FROM PS_JOB J2
WHERE J2.EMPLID = $Emplid
AND   J2.EFFDT = (
                  SELECT MAX(EFFDT)
                  FROM PS_JOB J3
                  WHERE J3.EMPLID = J2.EMPLID
                  AND   J3.EMPL_RCD = J2.EMPL_RCD
                  AND   J3.EFFDT <= $Begin_Year
                 )
AND   J2.EFFSEQ = (
                   SELECT MAX(EFFSEQ)
                   FROM PS_JOB J4
                   WHERE J4.EMPLID = J2.EMPLID
                   AND   J4.EMPL_RCD = J2.EMPL_RCD
                   AND   J4.EFFDT = J2.EFFDT
                  )

end-select
end-procedure Get-Employee-Category-Info

!******************************************************************
!Get the Hire and Termination Date for the employee
!******************************************************************
begin-procedure Get-Hire-Date

begin-SELECT
J2.EFFDT
J2.ACTION
  do Format-DateTime(&J2.EFFDT, $HireDate,{DEFDATE},'','')
FROM PS_JOB J2
WHERE J2.EMPLID = $Emplid
AND   J2.EMPL_RCD = #EmplRcdNbr
AND   J2.EFFDT = (
                  SELECT MAX(EFFDT)
                  FROM PS_JOB J3
                  WHERE J3.EMPLID = J2.EMPLID
                  AND   J3.EMPL_RCD = J2.EMPL_RCD
                  AND   J3.EFFDT <= $Effdt
                  AND   J3.ACTION IN ('HIR','REH')
                 )

end-select

begin-SELECT
J4.EFFDT
J4.ACTION
  do Format-DateTime(&J4.EFFDT, $TerDate,{DEFDATE},'','')
FROM PS_JOB J4
WHERE J4.EMPLID = $Emplid
AND   J4.EMPL_RCD = #EmplRcdNbr
AND   J4.EFFDT = (
                  SELECT MAX(EFFDT)
                  FROM PS_JOB J3
                  WHERE J3.EMPLID = J4.EMPLID
                  AND   J3.EMPL_RCD = J4.EMPL_RCD
                  AND   J3.EFFDT <= $Effdt
                  AND   J3.ACTION IN ('TER','RET')
                 )

end-select
end-procedure Get-Hire-Date

!*******************************************************************
!Get the BA_CD and the Jobcode Description
!*******************************************************************
begin-procedure Get-Jobcode-Info

begin-SELECT
JT.BA_CD
BCT.DESCR100
   let $BaCd = &JT.BA_CD
   let $JOBCODE_TBL-DESCR = substr(rtrim(&BCT.DESCR100,' '),1,50)
FROM PS_JOBCODE_TBL JT,
     PS_BA_CD_TBL BCT
WHERE JT.SETID = &JOB.SETID_JOBCODE
AND   JT.JOBCODE = &JOB.JOBCODE
AND   JT.EFFDT = (
                  SELECT MAX(EFFDT)
                  FROM PS_JOBCODE_TBL JT1
                  WHERE JT1.SETID = JT.SETID
                  AND   JT1.JOBCODE = JT.JOBCODE
                  AND   JT1.EFFDT <= $Effdt
                 )
AND   BCT.BA_CD = JT.BA_CD
AND   BCT.EFFDT = (
                   SELECT MAX(EFFDT)
                   FROM PS_BA_CD_TBL BCT1
                   WHERE BCT1.BA_CD = BCT.BA_CD
                   AND   BCT1.EFFDT <= $Effdt
                   AND   BCT1.EFF_STATUS = 'A'
                  )
end-select
end-procedure Get-Disability-Info

!*******************************************************************
begin-procedure print-data

  let $FieldName = 'DIS_STATUS_OFFICE'
  let $FieldValue = &DG.DIS_STATUS_OFFICE
  do Read-Translate-Table

  print #total                  (+2, {col1},8) edit 999

  ! Line 1
  print 'a) '                   (,{col2},2)
  print $Name                   (,{col2_1},35)
  print 'a) '                   (,{col3},2)
  print $BaCd                   (,{col3_1},39)
  print 'a) '                   (,{col4},2)
  print $HireDate               (,{col4_1},18)
  print 'a) '                   (,{col5},2)
  if &DG.DISABLED_TYPE = '4'
      print 'GL'                (,{col5_1},22)
  else
      print 'SB'                (,{col5_1},22)
  end-if
  print 'a) '                   (,{col6},2)
  print $XlatLongName           (,{col6_1})

  ! Line 2
  print 'b) '                   (+1,{col2},2)
  print $Vorname                (,{col2_1},35)
  print 'b) '                   (,{col3},2)
  print $JOBCODE_TBL-DESCR      (,{col3_1},39) wrap 30 3 keep-top
  print 'b) '                   (,{col4},2)
  print $TerDate                (,{col4_1},18)
  print 'b) '                   (,{col5},2)
  print $col5_b                 (,{col5_1},22)
  print 'b) '                   (,{col6},2)
  print &DG.DISABILITY_CARD_NO  (,{col6_1})

  ! Line 3
  
  
  print 'c) '                   (+1,{col2},2)
  print $City2                  (,{col2_1},126)
  print 'c) '                   (,{col6},3)
  print $DisabledEffdt          (,)

  ! Line 4
  print 'd) '                   (+1,{col2},2)
  print $Birthdate              (,{col2_1},126)
  print 'd) '                   (,{col6},2)
  print $EvalDate               (,{col6_1})

  let $Name = ''
  let $BaCd = ''
  let $HireDate = ''
  let $XlatLongName = ''
  let $Vorname = ''
  let $JOBCODE_TBL-DESCR = ''
  let $TerDate = ''
  let $col5_b = ''
  let $city = ''
  let $City2 = ''
  let $DisabledEffdt = ''
  let $Birthdate = ''
  let $EvalDate = ''
end-procedure Print-Data

!----------------------------------------------------------------
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !SQR date arithmetic procedures
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Rountines to Update Run Status
#Include 'getcodta.sqc'  !Get selected fields from the Company Table
#Include 'getlocnm.sqc'  !Get Location Name from the Location Table
#Include 'getdptnm.sqc'  !Get Department Name from the Department Table
#Include 'readxlat.sqc'  !Read the Translate Table for the desired values.
#Include 'sqrtrans.sqc'
#Include 'getaddr.sqc'   !Routine to retrieve Home Address
