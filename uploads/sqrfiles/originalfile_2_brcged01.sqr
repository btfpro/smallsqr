!***********************************************************************
!  BRCGED01:  CAGED File/Report                                        *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2007/06/19:17:38:35                                 *
!       $Release:  HR9                                                 *
!    $Resolution:  689716                                              *
!                                                                      *
!***********************************************************************
#define c2   20
#define c3   30
#define c5   50
#define c7   70
#define c8   91
#define c9   90
#define c10  100
#define c10a 102
#define c11  110
#define c11b 113

#include 'setenv.sqc'   ! set enviroment
#include 'setup31.sqc'  ! 

Begin-Setup
#include 'setupdb.sqc'
End-Setup

!**************************************
begin-report

  Move '1' to $ReportDateType   ! Set for date to format as DMY
  Move '1' to $ReportYear4      ! Set for year to be formatted YYYY
  Do Init-Report
  Do Select-Parameters
  Do Security-Param
  Do Process-Main 
  Do Stdapi-Term
  Do Reset
end-report

!**************************************
begin-procedure Init-Report

  Do Init-DateTime
  Do Init-Number
  Do Stdapi-Init
  Do Get-Current-DateTime
  Move 'BRCGED01' to $ReportID
  Move 'ACI - APLICATIVO DO CAGED INFORMATIZADO' to $ReportTitle
  Display $ReportID
  Display $ReportTitle
  show 'V.50'
  Date-time () hh:mi:ss &timeBegan
  Display 'Report Began: ' noline
  Display &timeBegan
end-procedure Init-Report

!**************************************
begin-heading 15
  Uppercase $TTitle1
  Print 'PeopleSoft'                   ( 1,)      center 
  Print 'Relat?rio:'                   (+1,  3)
  Print $ReportID                      (0 , 15)
  Print 'MINIST?RIO DO TRABALHO E EMPREGO/SPES/CGETIP' (+1,  3)   
  Print 'Emiss?o:'                     (  ,{c10a})
  Print $ReportDate                    ( 0,{c11b})
  Print 'ACI - APLICATIVO DO CAGED INFORMATIZADO'      (+1,  3)      
  Print 'P?gina:'                      (0,{c10a}
  Page-number                          (0,{c11b})
   
  If $ACERTO = 'N'
     Print 'ARQUIVO CAGED'             (+1,  3)  
  else
     Print 'ARQUIVO ACERTO'            (+1,  3)  
  end-if
    
  Print 'RELA??O DE MOVIMENTA??O MENSAL' (+1,)      center
  Print 'CADASTRO GERAL DE EMPREGADOS E DESEMPREGADOS - CAGED - LEI 4923/65' (+1,)      center
  Print 'Refer?ncia:'                  (+1,{c5})
  Print $Reference                     (,{c7})  
  Print '='                            (+1,  3,122)fill    
  Print 'Raz?o Social:'                (+1,  5) 

  If $ACERTO = 'N'
     Print $DescrB       (,{c2})  
  else
     Print $Descr        (,{c2})
  End-if

  Print 'CNPJ:'                        (+1,  5)
  Print $NoIdent                       (,{c2})  edit 'XX.XXX.XXX/XXX-XX'
  Print 'CNAE:'                        (+1,  5)

  If $ACERTO = 'N'
      Print $CNAE                      (,{c2})
  else
      Print $CNAEA                     (,{c2})
  end-if
    
  Print 'CEP:'                         (+1,  5)

  If $ACERTO = 'N'
     Print $Postal                     (,{c2})  edit 'XXXXX-XXX'
  else
     Print $PostalA                    (,{c2})  edit 'XXXXX-XXX'
  end-if
        
  Print '='              (+1,  3,122)fill        
  Print 'Tp Movimento'   (+1,  5)
  Print 'PIS/PASEP'      (  ,35)
  Print 'ID Func'                      (  ,53)
  Print 'Nome do Empregado'            (  ,65)
  Print 'Admiss?o'                     (  ,100)
  Print 'Rescis?o'                     (  ,115)
  Print '='                            (+1,  3,122)fill        
    
end-heading

!**************************************
begin-procedure Select-Parameters
#debug show 'Select-Parameters'


Let $FileName = ''
begin-select
RC.ESTABID
RC.BALANCE_YEAR
RC.MONTHCD
RC.DAYOFMONTH
RC.MEDIA_TYPE_BRA
RC.ACERTO_IND_BRA
RC.FIRST_CAGED_BRA
RC.FREQUENCY_ID
RC.INC_MSAL_BRA

  Let $Estabid    = Rtrim(&RC.ESTABID, ' ')
  Let #Year       = &RC.BALANCE_YEAR
  Let $Year       = Rtrim(to_char(&RC.BALANCE_YEAR), ' ')
  Let $Month      = Rtrim(&RC.MONTHCD, ' ')
  Let #Day        = &RC.DAYOFMONTH
  Let $Day        = to_char(#Day)
  Let $ACERTO     = Rtrim(&RC.ACERTO_IND_BRA, ' ')
  Let $FirstCAGED = Rtrim(&RC.FIRST_CAGED_BRA, ' ')
  Let $FreqHrsTar = Rtrim(&RC.FREQUENCY_ID, ' ')
  Let $IncMSalary = Rtrim(&RC.INC_MSAL_BRA, ' ')

  If $Year  <> ''
     If $Month <> ''
        If $ACERTO = 'Y'
           Let $BeginDt  = $Year  || '-' ||  $Month || '-01'
           if $day <> '' and $day <> '0'
              Let $EndDt    = $Year  || '-' ||  $Month || '-' || $Day
           else
              Do dtu-month-end($BeginDt, $EndDT)
              let $Day = substr($EndDT,9,2) 
           end-if
           Let $FileName = 'A' ||  $Day || $Year || '.M' || $Month
           Do dtu-subtract-days($BeginDt, 1, $EndDt2)
           Do convert-from-dtu-date($EndDt2 ,$EndDt2)
           Do convert-from-dtu-date($BeginDt ,$BeginDt)
           Do convert-from-dtu-date($EndDT ,$EndDT)
           show $FileName
        else
           Let $BeginDt  =  $Year  || '-' ||  $Month || '-01'
           Do dtu-month-end($BeginDt, $EndDT)
           Let $FileName = 'CGED' ||  $Year || '.M' || $Month
           Let $Alteration  = '1'
           Let $AlterationB = '1'
           Do convert-from-dtu-date($EndDt,$EndDt)
           Do dtu-subtract-days($BeginDt, 1, $EndDt2)           
           Do convert-from-dtu-date($BeginDt ,$BeginDt)
           Do convert-from-dtu-date($EndDt2 ,$EndDt2)
           show $FileName
        end-if
     end-if
  end-if
  
  Do Select-Installation

FROM  PS_CAGED_RC_BRA RC
WHERE RC.OPRID = $prcs_oprid
AND   RC.RUN_CNTL_ID = $prcs_run_cntl_id
end-select
end-procedure Select-Parameters

!**************************************
begin-procedure Select-Installation
#debug show 'Select-Installation'

Let $GPBrazil = 'N'
begin-select
A.INSTALLED_GP_BRA

  Let $GPBrazil = Rtrim(&A.INSTALLED_GP_BRA, ' ')
 
FROM  PS_INSTALLATION A
end-select
end-procedure Select-Installation

!**************************************
begin-procedure Process-Main
!Show '* Process-Main *'
#debug Show '   File Name:      '  $FileName      
!**************************************
  Let $CondEstabId  = ''    
  Let $CondEstabId2 = ''
  Let #TotalRegA    = 0
  Let #Count        = 0
  Let $EstabidResp  = ''

  If $FileName <> ''
     Let $Reference = $Month || '/' || $Year
     Let $MediaType = rtrim(&RC.MEDIA_TYPE_BRA, ' ')     
     
     Evaluate  $MediaType
       When = '10'
         Let $MediaType = '2'
       When = '20'
         Let $MediaType = '3'
       When = '30'
         Let $MediaType = '4'
     End-Evaluate  
     
     Let $MonthYear    = $Month || $Year
   
     Do Create-Arrays

     If $Estabid <> ''
        Let $CondEstabId  = 'AND A.CENTR_ESTABID_BRA  = ' || '''' || $Estabid || '''' 
        Let $CondEstabId2 = 'AND D2.ESTABID  = ' || '''' || $Estabid || ''''   
     end-if
        
     Do Select-Centr-Estabid
     Do Open-File
     Do Load-Array
     Do Print-Array

  end-if     
end-procedure Process-Main

!**************************************
begin-procedure Create-Arrays

  Create-array name=RegA size=1000 -
  Field=RegType:char
  Field=Estabid:char
  Field=MediaType:char
  Field=Autorization:char
  Field=YearMonth:char
  Field=Alteration:char
  Field=Sequence:char
  Field=IdentType:char
  Field=NoIdent:char
  Field=Descr:char
  Field=Address:char
  Field=Postal:char
  Field=CNAE:Char
  Field=State:char
  Field=DDD:char
  Field=Phone:char
  Field=Ext:char
  Field=TotalRegB:Number:5
  Field=TotalRegC:Number:5
   
  Create-array name=RegB size=1000 -
  Field=RegType:char
  Field=EstabidRes:char
  Field=Estabid:char
  Field=IdentType:char
  Field=NoIdent:char
  Field=Sequence:char
  Field=Declaration:char
  Field=Alteration:char
  Field=Postal:char
  Field=CNAE:Char
  Field=Descr:char
  Field=Address:char
  Field=Barrio:char
  Field=State:char
  Field=EstabidType:char
  Field=TotalEmpl:Number:5
  Field=TotalEmplBeg:Number:5
  Field=TotalEmplEnd:Number:5
  
  Create-array name=RegC size=1000 -
  Field=RegType:char
  Field=EstabidRes:char
  Field=Estabid:char  
  Field=Emplid:char
  Field=IdentType:char
  Field=NoIdent:char
  Field=Sequence:char
  Field=PIS:char
  Field=Sex:char
  Field=BirthDt:char
  Field=EducationLvl:Char
  Field=CBO:char
  Field=Salary:char
  Field=HrsWork:char
  Field=HireDT:char
  Field=Action:char
  Field=ActionNm:char
  Field=TerminationDy:char
  Field=Name:char
  Field=CTPS:char
  Field=CTPSSerie:char
  Field=State:char
  Field=Actualization:char
  Field=YearMonth:char
  Field=Race:char
  Field=Disability:char
  Field=TerminationDt:char
    
End-procedure Create-Arrays

!**************************************
begin-procedure Open-File
#debug show 'Open-File procedure'
#debug show '    ' $FILEPREFIX
!**************************************
  Let $FILE_NAME =  '{FILEPREFIX}' || LTRIM(RTRIM($FileName,' '),' ')

  OPEN $FILE_NAME AS 1 FOR-WRITING RECORD=160

End-Procedure Open-File

!**************************************
begin-procedure Select-Centr-Estabid
!show 'Select-Centr-Estabid procedures'
!show '$EndDT: ' $EndDT 
!show '$CondEstabId2: ' $CondEstabId2
!**************************************
Let $Exist = 'N'
Begin-Select 
A.CENTR_ESTABID_BRA
A.EFFDT
C.EFFDT
B.ESTABID              
B.DESCR
B.ADDRESS1
B.ADDRESS2
B.ADDRESS3
B.ADDRESS4
B.NUM1
B.POSTAL
B.STATE
B.COMPANY
B.EFF_STATUS
C.COMP_INS_TYPE_BRA 
B.COUNTRY
C.COUNTY_CD_BRA

  Let $Exist = 'Y'
  Let $EstabidResp = Rtrim(&A.CENTR_ESTABID_BRA, ' ')
  
  Let $IdentType   = Rtrim(&C.COMP_INS_TYPE_BRA, ' ')
  Let $State       = Rtrim(&B.STATE, ' ')
  Let $Company     = Rtrim(&B.COMPANY, ' ')
  Let $Status      = Rtrim(&B.EFF_STATUS, ' ')

  
  Do convert-to-dtu-date(&C.EFFDT, $EffdtResp)
  Do convert-to-dtu-date($BeginDt, $BeginDtResp)
  Do convert-to-dtu-date($EndDt, $EndDtResp)
  
  If $EffdtResp >= $BeginDtResp and
     $EffdtResp <= $EndDtResp
     Let $Alteration = '2'
  end-if
  
  If $Status <> 'A'
      Let $Alteration = '3'
  End-if
   
  Do convert-from-dtu-date($EffdtResp, $EffdtResp)
   
!DESCR  
  Let $Descr       = Upper(&B.DESCR)
  Let $BeginField  = $Descr
  Let #Long = 35
  Do Fill-Leading
  Let $Descr = $EndField
!POSTAL
  Let $Postal      = Rtrim(&B.POSTAL, ' ')
  Let #Counter     = 1
  Let #LenField    = Length($Postal)   
  Let $PostalEnd   = ''
  While #Counter  <= #LenField
      Let $Char    = Substr($Postal,#Counter, 1)  
      If $Char <> '-'
         Let $PostalEnd = $PostalEnd || $Char
      End-if
      ADD 1 To #Counter
  End-While
  Let $Postal      = Substr(Rtrim($PostalEnd, ' '),1,8)
  Let #Postal      = $Postal
  Let $PostalA     = Edit(#Postal, '00000000')
!ADDRESS:
  Let $Address     = Upper(Rtrim(&B.ADDRESS1, ' '))
  Let $Address2    = Upper(Rtrim(&B.ADDRESS2, ' '))
  Let $Address3    = Upper(Rtrim(&B.ADDRESS3, ' '))
  Let $Address4    = Upper(Rtrim(&B.ADDRESS4, ' '))
  Let $Num         = Rtrim(&B.NUM1, ' ')
  Let $Address     = $Address || ' ' || $Address2 || ' ' || $Address3 || ' ' || $Num
  Let $BeginField  = $Address
  Let #LenField   = LENGTH($BeginField)
  if  #LenField > 40
      show 'Endere?o > 40....  ' $BeginField ' - ' $Estabid
  End-if
  Let #Long        = 40
  Do Fill-Leading
  Let $Address     = $EndField
  
  Let $Barrio             = Upper(rtrim(&B.ADDRESS4, ' '))
  Let $BeginField         = $Barrio
  Let #Long               = 20
  Do Fill-Leading
  Let $Barrio             = $EndField
  
  Let $Country = Rtrim(&B.COUNTRY, ' ')
    
  Let $Registro    = 'A'
  Let #TotalRegB   = 0
  Let #TotalRegC   = 0 
  
  Let $CondEstabResp = ' AND CC.CENTR_ESTABID_BRA = ' || '''' || $EstabidResp || ''''
  
  Do Select-Estab-Id
  Do Select-Estab-Phone
  Do Create-Array-A
  Do Select-Establishment
 
  ARRAY-ADD #TotalRegB #TotalRegC to RegA(#count) TotalRegB TotalRegC 
 
FROM PS_CENTR_DATA_BRA A
    ,PS_ESTAB_TBL      B
    ,PS_ESTAB_TBL_BRA  C
WHERE A.CENTR_ESTABID_BRA = B.ESTABID
AND   A.CENTR_ESTABID_BRA = C.ESTABID 
AND   A.PROCESS_TYPE_BRA = '20' 
[$CondEstabId]
AND   A.EFFDT = (SELECT MAX(AA.EFFDT) 
                 FROM PS_CENTR_DATA_BRA AA
                 WHERE AA.PROCESS_TYPE_BRA  = A.PROCESS_TYPE_BRA
                 AND   AA.CENTR_ESTABID_BRA = A.CENTR_ESTABID_BRA
                 AND   AA.EFFDT <= $EndDT )
AND   B.EFFDT = (SELECT MAX(BB.EFFDT) 
                 FROM PS_ESTAB_TBL BB
                 WHERE BB.ESTABID = B.ESTABID
                 AND BB.EFFDT <= $EndDT )
AND   C.EFFDT = B.EFFDT       
ORDER BY A.CENTR_ESTABID_BRA
End-Select

if $EstabidResp = ''

Begin-Select 
A2.CENTR_ESTABID_BRA
A2.EFFDT
C2.EFFDT
D2.ESTABID              
B2.DESCR
B2.ADDRESS1
B2.ADDRESS2
B2.ADDRESS3
B2.ADDRESS4
B2.NUM1
B2.POSTAL
B2.STATE
B2.COMPANY
C2.COMP_INS_TYPE_BRA 
B2.COUNTRY
B2.EFF_STATUS

  Let $Exist = 'Y'
  Let $Registro    = 'A'
  Let #TotalRegB             = 0
  Let #TotalRegC             = 0 
  Let $EstabidResp           = Rtrim(&A2.CENTR_ESTABID_BRA, ' ')
  
!  Show '  $EstabidResp: ' $EstabidResp
  
  Let $IdentType             = Rtrim(&C2.COMP_INS_TYPE_BRA, ' ')
  Let $State                 = Rtrim(&B2.STATE, ' ')
  Let $Company               = Rtrim(&B2.COMPANY, ' ')
  Let $Country               = Rtrim(&B2.COUNTRY, ' ')
  Let $Status                = Rtrim(&B2.EFF_STATUS, ' ')
    
  Do convert-to-dtu-date(&C2.EFFDT, $EffdtResp)
  Do convert-to-dtu-date($BeginDt, $BeginDtResp)
  Do convert-to-dtu-date($EndDt, $EndDtResp)
    
  If $EffdtResp >= $BeginDtResp and
     $EffdtResp <= $EndDtResp
      Let $Alteration = '2'
  end-if
    
  If $Status <> 'A'
     Let $Alteration = '3'
  End-if
    
!DESCR  
  Let $Descr                 = Upper(Rtrim(&B2.DESCR, ' '))
  Let $BeginField            = $Descr
  Let #Long                  = 35
  Do Fill-Leading
  Let $Descr                 = $EndField
!POSTAL
  Let $Postal                = Rtrim(&B2.POSTAL, ' ')
  Let #Counter               = 1
  Let #LenField              = Length($Postal)   
  Let $PostalEnd             = ''
  While #Counter            <= #LenField
    Let $Char                = Substr($Postal,#Counter, 1)  
    If $Char <> '-'
      Let $PostalEnd         = $PostalEnd || $Char
    End-if
    ADD 1 To #Counter 
  End-While
  Let $Postal                = Substr(Rtrim($PostalEnd, ' '),1,8)
  Let #Postal                = $Postal
  Let $PostalA               = Edit(#Postal, '00000000')
!ADDRESS:
  Let $Address               = Upper(Rtrim(&B2.ADDRESS1, ' '))
  Let $Address2              = Upper(Rtrim(&B2.ADDRESS2, ' '))
  Let $Address3              = Upper(Rtrim(&B2.ADDRESS3, ' '))
  Let $Address4              = Upper(Rtrim(&B2.ADDRESS4, ' '))
  Let $Num                   = Rtrim(&B2.NUM1, ' ')
  Let $Address               = $Address || ' ' || $Address2 || ' ' || $Address3 || ' ' || $Num
  Let $BeginField            = $Address
  Let #LenField              = LENGTH($BeginField)
  if  #LenField > 40
      show 'Endere?o > 40....  ' $BeginField ' - ' $Estabid
  End-if
  Let #Long                  = 40
  Do Fill-Leading
  Let $Address               = $EndField
  
  Let $Barrio             = Upper(rtrim(&B2.ADDRESS4, ' '))
  Let $BeginField         = $Barrio
  Let #Long               = 20
  Do Fill-Leading
  Let $Barrio             = $EndField
  Let $EffdtResp          = &C2.EFFDT
  
  Let $CondEstabResp = ' AND CC.CENTR_ESTABID_BRA = ' || '''' || $EstabidResp || ''''
  Let $CondEstabResp = $CondEstabResp || ' AND CC.ESTABID = ' || '''' || $Estabid ||''''
 ! Let $CondEstabResp = $CondEstabResp || ' AND CC.EFFDT = ' || '''' || $EffdtResp ||''''
  
!  show $CondEstabResp
  
  Do Select-Estab-Id
  Do Select-Estab-Phone
  Do Create-Array-A
  Do Select-Establishment
 
  ARRAY-ADD #TotalRegB #TotalRegC to RegA(#count) TotalRegB TotalRegC 
 
FROM PS_CENTR_DATA_BRA A2
    ,PS_ESTAB_TBL      B2
    ,PS_ESTAB_TBL_BRA  C2
    ,PS_CENTR_DTL_BRA  D2
WHERE A2.CENTR_ESTABID_BRA = D2.CENTR_ESTABID_BRA
AND   A2.CENTR_ESTABID_BRA = B2.ESTABID
AND   A2.CENTR_ESTABID_BRA = C2.ESTABID
AND   A2.EFFDT = D2.EFFDT 
AND   A2.PROCESS_TYPE_BRA = D2.PROCESS_TYPE_BRA
AND   A2.PROCESS_TYPE_BRA = '20'
AND   A2.EFFDT = (SELECT MAX(AA2.EFFDT) 
                 FROM PS_CENTR_DATA_BRA AA2
                 WHERE AA2.PROCESS_TYPE_BRA  = A2.PROCESS_TYPE_BRA
                 AND   AA2.CENTR_ESTABID_BRA = A2.CENTR_ESTABID_BRA
                 AND   AA2.EFFDT <= $EndDT )
AND   B2.EFFDT = (SELECT MAX(BB2.EFFDT) 
                 FROM PS_ESTAB_TBL BB2
                 WHERE BB2.ESTABID = B2.ESTABID
                 AND   BB2.EFFDT <= $EndDT)
AND   C2.EFFDT = (SELECT MAX(CC2.EFFDT) 
                 FROM PS_ESTAB_TBL_BRA CC2
                 WHERE CC2.ESTABID = C2.ESTABID
                 AND   CC2.EFFDT <= $EndDT)   
AND   D2.EFFDT = (SELECT MAX(D.EFFDT) 
                 FROM PS_CENTR_DTL_BRA D
                 WHERE D.PROCESS_TYPE_BRA  = D2.PROCESS_TYPE_BRA
                 AND   D.CENTR_ESTABID_BRA = D2.CENTR_ESTABID_BRA
                 AND   D.EFFDT <=  $EndDT )                 
[$CondEstabId2]
ORDER BY A2.CENTR_ESTABID_BRA
End-Select
End-if

If  $Exist = 'N'
    show 'Warning...No Exist Centr Establishment ' $Estabid
End-If
End-Procedure Select-Centr-Estabid

!**************************************
begin-procedure Select-Establishment
!show '** Select-Establishment **'
!show '   $CondEstabResp: ' $CondEstabResp
!**************************************
Begin-Select
AA.ESTABID
AA.DESCR
BB.COMP_INS_TYPE_BRA
AA.ADDRESS1
AA.ADDRESS2
AA.ADDRESS3
AA.ADDRESS4
AA.NUM1
AA.POSTAL
AA.STATE
AA.COMPANY
AA.EFFDT
BB.EFFDT
AA.COUNTY
BB.ESTAB_TYPE_CD_BRA
AA.COUNTRY
BB.COUNTY_CD_BRA
AA.EFF_STATUS

  Let $EstabId               = Rtrim(&AA.ESTABID, ' ') 
 ! show '$Estabid: ' $Estabid
  Let $Company               = Rtrim(&AA.COMPANY, ' ')
 ! show 'Company: ' $Company
  
  Let $Status                = Rtrim(&AA.EFF_STATUS, ' ')
      
  Do convert-to-dtu-date(&BB.EFFDT,$Eff)
  Do convert-to-dtu-date($BeginDt, $BeginDtEst)
  Do convert-to-dtu-date($EndDt, $EndDtEst)
  
  If $Eff  >= $BeginDtEst and
     $EffdtEst <= $EndDtEst
     Let $AlterationB = '2'
  end-if
      
  If $Status <> 'A'
     Let $AlterationB= '3'
  End-if
  
  If $ACERTO = 'N'     
!DESCR  
     Let $IdentType          = Rtrim(&BB.COMP_INS_TYPE_BRA, ' ')
     Let $DescrB             = Upper(Rtrim(&AA.DESCR, ' '))
     Let $BeginField         = $DescrB
     Let #Long               = 40 
     Do Fill-Leading
     Let $DescrB             = $EndField 
!ADDRESS:
     Let $Address            = Upper(Rtrim(&AA.ADDRESS1, ' '))
     Let $Address2           = Upper(Rtrim(&AA.ADDRESS2, ' '))
     Let $Address3           = Upper(Rtrim(&AA.ADDRESS3, ' '))
     Let $Address4           = Upper(Rtrim(&AA.ADDRESS4, ' '))
     Let $Num                = Rtrim(&AA.NUM1, ' ')
     Let $Address            = $Address || ' ' || $Address2 || ' ' || $Address3 || ' ' || $Num
     Let $BeginField         = $Address
     Let #LenField           = LENGTH($BeginField)
     if  #LenField > 40
        show 'Endere?o > 40....  ' $BeginField ' - ' $Estabid
     End-if
     Let #Long               = 40
     Do Fill-Leading
     Let $Address            = $EndField
     
     Let $Barrio             = Upper(rtrim(&AA.ADDRESS4, ' '))
     Let $BeginField         = $Barrio
     Let #Long               = 20
     Do Fill-Leading
     Let $Barrio             = $EndField
  
     Let $Postal             = Rtrim(&AA.POSTAL, ' ')
     Let #counter            = 1
     Let #LenField           = Length($Postal)   
     Let $PostalEnd          = ''
     While #Counter         <= #LenField
       Let $Char             = Substr($Postal,#Counter, 1)  
       If $Char <> '-'
          Let $PostalEnd     = $PostalEnd || $Char
       End-if
       ADD 1 To #Counter
     End-While
     Let $Postal             = Substr(Rtrim($PostalEnd, ' '),1,8)
     Let #Postal             = $Postal
     Let $Postal             = Edit(#Postal, '00000000')
     Let $State              = Rtrim(&AA.STATE, ' ')
  
     Let $EstabType          = Rtrim(&BB.ESTAB_TYPE_CD_BRA, ' ')
  
     Evaluate $EstabType
     when                    = '1'
        Let $EstabType       = '1'
     when = '2'
        Let $EstabType       = '2'
     when = '3'
        Let $EstabType       = '2'
     End-Evaluate
     
     Let $Country            = Rtrim(&AA.COUNTRY, ' ')
     
     Do convert-to-dtu-date($BeginDt,$BeginDate)
    
     Do Select-Estab-Id
          
     !show '   $FirstCAGED: ' $FirstCAGED
     
     if $FirstCAGED          = 'Y'
        Let $Declaration     = '1'
     else
        Let $Declaration     = '2'
     end-if
  end-if
  
  Let #TotalEmplBeg          = 0
  Let #TotalEmplEnd          = 0
  Let #TotalEmpl             = 0
  
  Do Create-Array-B
  Do Select-Employee-Data-Error
  
  If $ACERTO                  = 'N'
     Do Count-Employees
     Do Select-Employee-Data
  else
     Do Select-Employee-Data1   
     Do Select-Employee-Data2
     Do Select-Employee-Data3
     Do Select-Employee-Data4
  end-if
  
  ARRAY-ADD #TotalEmpl #TotalEmplBeg #TotalEmplEnd to RegB(#countB) TotalEmpl TotalEmplBeg TotalEmplEnd 
  
FROM PS_ESTAB_TBL AA
,PS_ESTAB_TBL_BRA BB
,PS_CENTR_DTL_BRA CC
WHERE AA.ESTABID = BB.ESTABID
AND   AA.ESTABID = CC.ESTABID
AND   CC.PROCESS_TYPE_BRA = '20'
AND   CC.EFFDT = (SELECT MAX(C2.EFFDT) 
                 FROM PS_CENTR_DTL_BRA C2
                 WHERE C2.PROCESS_TYPE_BRA  = CC.PROCESS_TYPE_BRA
                 AND   C2.ESTABID = CC.ESTABID
                 AND   C2.EFFDT <=  $EndDT )
AND   AA.EFFDT = (SELECT MAX(A2.EFFDT) 
                 FROM PS_ESTAB_TBL A2
                 WHERE A2.ESTABID = AA.ESTABID
                 AND   A2.EFFDT <= $EndDT  )
AND   BB.EFFDT = AA.EFFDT  
[$CondEstabResp]
End-Select
End-Procedure Select-Establishment

!**************************************
begin-procedure Select-Employee-Data
#debug show 'Select-Employee-Data procedure'
#debug show 'Estabid: ' $Estabid
!**************************************
Let $Registro  = 'C'

Begin-Select     
D.EMPLID
D.EMPL_RCD
D.EFFDT
D.ACTION
D.ACTION_DT
D.ACTION_REASON
D.STD_HOURS
D.COMPRATE
D.MONTHLY_RT
D.STD_HRS_FREQUENCY
B.CBO_CD_BRA
C.CAGED_REASON_BRA
X.XLATLONGNAME
D.GP_PAYGROUP
EE.TERMINATION_DT

  Let $TerminationDt                   = Rtrim(&EE.TERMINATION_DT, ' ')
  Let $Emplid                          = Rtrim(&D.EMPLID, ' ')  
  Let $Action                          = Rtrim(&D.ACTION, ' ')
  Let $ActionReason                    = Rtrim(&D.ACTION_REASON, ' ')      
  Let $ActionType                      = Rtrim(&C.CAGED_REASON_BRA, ' ')
  Let #EmplRcd                         = &D.EMPL_RCD
  Let $Effdt                           = &D.EFFDT
  Let $ProcessInd = 'Y' 
   
! DEBUG *******************************  
  #debug show '<*>Emplid:        ' $Emplid
  #debug show '   Action:        ' $Action  
  #debug show '   Action Reason: ' $ActionReason
  #debug show '   Action CAGED:  ' $ActionType
  #debug show '   Effdt:         ' $Effdt
  #debug show '   TerminationDT: ' $TerminationDT
! **********************************

  If $TerminationDt <> ''
     Do convert-to-dtu-date(&EE.TERMINATION_DT,$TerminationDt)
     Do convert-to-dtu-date($BeginDT, $BeginDT2)
     If $Action = 'TER' and
        $TerminationDt < $BeginDT2
        Let $ProcessInd = 'N' 
     End-if
  end-if
  
  if  $ActionType <> '00' and
      $ProcessInd = 'Y'
      
      Let $HrsWork                     = '00'
      Let #HrsWork                     = &D.STD_HOURS
      Let $HrsWork                     = Edit(#HrsWork, '00')
      Let $Actualization               = '2'    
      Let $CBO                         = &B.CBO_CD_BRA
      Let $CBO                         = Rtrim($CBO, ' ')
      Let #LenField   = Length($CBO)
      Let #Counter    = 1
      Let $FieldEnd   = ''
      While #Counter <= #LenField
         Let $Char = substr($CBO,#Counter, 1)  
         If $Char <> '-' and $Char <> ' '
             Let $FieldEnd = $FieldEnd || $Char
         End-if
         Add 1 To #Counter
      End-While
      Let $CBO                         = $FieldEnd
  
      If $IncMSalary = 'Y'
         Let #Salary                   = &D.MONTHLY_RT
      Else
         Let #Salary                   = 0
      End-If
      Let $ActionNm                    = Rtrim(&X.XLATLONGNAME, ' ')
      Let $FrequencyType               = Rtrim(&D.STD_HRS_FREQUENCY, ' ')
 
      If $GPBrazil = 'Y'
         Do Get-Other-Ernings
         Do Select-Payee-Parm
      Else
         Do Get-Other-Ernings-JBCD
      End-if
  
      Let #SalaryInt                   = Trunc(#Salary,0)
      Let #SalaryDec                   = #Salary - #SalaryInt
      Let $SalaryInt                   = Edit(#SalaryInt, '000000')
      Let $SalaryDec                   = Edit(#SalaryDec, '00')
      Let $Salary                      = $SalaryInt || $SalaryDec

      Do Select-Payee-Parm
      Do Select-National-Id
      Do Select-Pers-Data1
      Do Select-Pers-Data2
      Do Select-Disability
      Do Create-Array-C
      Do Insert-CAGED-Tbl
  else
     Do convert-to-dtu-date($BeginDT, $BeginDT2)
     If $Action = 'TER' and
         $TerminationDt < $BeginDT2
         show $Emplid ' Action not process... ' $Action  ' Effdt:   ' $Effdt ' Termination: ' $TerminationDt
     else        
         show $Emplid ' Action not CAGED... ' $Action  ' ' $ActionReason ' ' $Effdt
     End-if
  end-if

FROM PS_JOB D
    ,PS_JOB_JR B
    ,PS_ACTN_REASON_BRA C
    ,XLATTABLE_VW X
    ,PS_EMPLOYMENT EE
    ,PS_FAST_SQR_SEC_VW SCRTY
WHERE D.COMPANY              = $Company
AND D.EMPLID                 = B.EMPLID
AND D.EMPLID                 = EE.EMPLID
AND D.EFFDT                  = (SELECT MAX(AA.EFFDT) 
                                FROM PS_JOB AA 
                                    ,PS_EMPLOYMENT E 
                                WHERE AA.EMPLID   = D.EMPLID
                                AND   AA.ESTABID  = D.ESTABID
                                AND   AA.EMPLID   = E.EMPLID
                                AND   AA.EMPL_RCD = E.EMPL_RCD
                                AND   AA.EMPL_RCD = D.EMPL_RCD
                                AND (AA.EFFDT BETWEEN $BeginDT AND $EndDT OR
                                     E.TERMINATION_DT = $EndDT2 ))
AND D.EFFDT                  = B.EFFDT                  
AND D.EFFSEQ                 = (SELECT MAX(AA.EFFSEQ) FROM PS_JOB AA 
                                WHERE AA.EMPLID = D.EMPLID
                                AND   AA.EMPL_RCD = D.EMPL_RCD
                                AND   AA.EFFDT  = D.EFFDT)
AND D.EMPL_RCD               = B.EMPL_RCD               
AND D.EFFSEQ                 = B.EFFSEQ
AND D.EMPL_CLASS NOT IN ('40', '50')
AND B.SEFIP_CATEGORY_BRA NOT IN ('13', '18')
AND D.ESTABID                = $Estabid   
AND D.ACTION                 = C.ACTION
AND D.ACTION_REASON          = C.ACTION_REASON
AND C.EFFDT                  = (SELECT MAX(CC.EFFDT) 
                                FROM PS_ACTN_REASON_BRA CC
                                WHERE CC.ACTION = C.ACTION
                                AND   CC.ACTION_REASON = C.ACTION_REASON
                                AND   CC.EFFDT <= D.EFFDT)
AND X.FIELDNAME              = 'CAGED_REASON_BRA'
AND X.FIELDVALUE             = C.CAGED_REASON_BRA
AND D.EMPLID = SCRTY.EMPLID 
[$SecurityClause]
ORDER BY D.EMPLID
End-Select
End-Procedure Select-Employee-Data

!**************************************
begin-procedure Select-Employee-Data1

Let $Registro  = 'C'

Begin-Select     
E.EMPLID
E.EFFDT
E.EMPL_RCD
E.ACTION
E.ACTION_REASON
E.CAGED_REASON_BRA
Z.XLATLONGNAME

  Let $Emplid                = Rtrim(&E.EMPLID, ' ')   
  Let $Action                = Rtrim(&E.ACTION, ' ')    
  Let $ActionReason          = Rtrim(&E.ACTION_REASON, ' ')      
  Let $ActionType            = Rtrim(&E.CAGED_REASON_BRA, ' ')    
  Let #EmplRcd               = &E.EMPL_RCD
  Let $Effdt                 = &E.EFFDT
  
  Let $Actualization  = '1'
  Let $ProcessInd = 'N'
  
  Do Select-Job-Data
  If $ProcessInd = 'Y'
     If $GPBrazil = 'Y'
        Do Select-Payee-Parm
     End-If      
     Do Select-National-Id
     Do Select-Pers-Data1
     Do Select-Pers-Data2
     Do Select-Disability
     Do Create-Array-C
     Do Insert-CAGED-Tbl
  end-if
    
FROM PS_CAGED_BRA E
,    XLATTABLE_VW Z
    ,PS_FAST_SQR_SEC_VW SCRTY
WHERE E.EMPLID NOT IN (SELECT H.EMPLID FROM PS_JOB H
                       WHERE  H.EFFDT   = (SELECT MAX(A.EFFDT) FROM PS_JOB A 
                                          WHERE A.EMPLID = H.EMPLID
                                          AND   A.EMPL_RCD = H.EMPL_RCD
                                          AND   A.ESTABID = $Estabid  
                                          AND H.EFFDT BETWEEN $BeginDT AND $EndDT) 
                       AND H.EFFSEQ    = (SELECT MAX(A.EFFSEQ) FROM PS_JOB A 
                                          WHERE A.EMPLID = H.EMPLID
                                          AND   A.EMPL_RCD = H.EMPL_RCD
                                          AND   A.EFFDT  = H.EFFDT))
AND E.ESTABID  = $Estabid   
AND E.BALANCE_YEAR = #Year
AND E.MONTHCD  = $Month
AND Z.FIELDNAME = 'CAGED_REASON_BRA'
AND Z.FIELDVALUE = E.CAGED_REASON_BRA
AND E.EMPLID = SCRTY.EMPLID 
[$SecurityClause]
ORDER BY E.EMPLID
End-Select
 
End-Procedure Select-Employee-Data1

!**************************************
begin-procedure Select-Employee-Data2
!**************************************
Let $Registro  = 'C'

Begin-Select     
H.EMPLID
H.EMPL_RCD
H.EFFDT
H.ACTION
H.ACTION_DT
H.ACTION_REASON
H.STD_HOURS
H.COMPRATE
H.MONTHLY_RT
H.STD_HRS_FREQUENCY
BB.CBO_CD_BRA
CC.CAGED_REASON_BRA
XX.XLATLONGNAME
E.TERMINATION_DT

  Let $Emplid                          = Rtrim(&H.EMPLID, ' ')  
  Let $Action                          = Rtrim(&H.ACTION, ' ')
  Let $ActionReason                    = Rtrim(&H.ACTION_REASON, ' ')      
  Let $ActionType                      = Rtrim(&CC.CAGED_REASON_BRA, ' ')
  Let $TerminationDt                   = Rtrim(&E.TERMINATION_DT, ' ')
  Let #EmplRcd                         = &H.EMPL_RCD
  Let $ProcessInd                      = 'Y' 
  Let $Effdt                           = &H.EFFDT
  
  If $TerminationDt <> ''
     Do convert-to-dtu-date(&E.TERMINATION_DT, $TerminationDt)
     Do convert-to-dtu-date($BeginDT, $BeginDT2)
     If $Action = 'TER' and
        $TerminationDt < $BeginDT2
        Let $ProcessInd = 'N' 
     End-if
  end-if
    
  if  $ActionType <> '00' and
      $ProcessInd = 'Y'  
      
      Let $HrsWork                     = '00'
      Let #HrsWork                     = &H.STD_HOURS
      Let $HrsWork                     = Edit(#HrsWork, '00')
      Let $Actualization               = '2'    
      Let $CBO                         = &B.CBO_CD_BRA
      Let $CBO                         = Rtrim($CBO, ' ')
      Let #LenField   = Length($CBO)
      Let #Counter    = 1
      Let $FieldEnd   = ''
      While #Counter <= #LenField
         Let $Char = substr($CBO,#Counter, 1)  
         If $Char <> '-' and $Char <> ' '
             Let $FieldEnd = $FieldEnd || $Char
         End-if
         Add 1 To #Counter
      End-While
      Let $CBO                         = $FieldEnd
      
       If $IncMSalary = 'Y'
         Let #Salary                   = &H.MONTHLY_RT
       Else
         Let #Salary                   = 0
       End-If
       Let $ActionNm                    = Rtrim(&XX.XLATLONGNAME, ' ')
       Let $FrequencyType               = Rtrim(&H.STD_HRS_FREQUENCY, ' ')
  
       If $GPBrazil = 'Y'
          Do Get-Other-Ernings
          Do Select-Payee-Parm
       Else
          Do Get-Other-Ernings-JBCD
       End-if
   
       Let #SalaryInt                   = Trunc(#Salary,0)
       Let #SalaryDec                   = #Salary - #SalaryInt
       Let $SalaryInt                   = Edit(#SalaryInt, '000000')
       Let $SalaryDec                   = Edit(#SalaryDec, '00')
       Let $Salary                      = $SalaryInt || $SalaryDec
        
       Do Select-National-Id
       Do Select-Pers-Data1
       Do Select-Pers-Data2
       Do Select-Disability
       Do Create-Array-C
       Do Insert-CAGED-Tbl
   else
       show $Emplid ' Action not CAGED...  ' $Action  ' ' $ActionReason ' ' $Effdt
  end-if
    
FROM PS_JOB H
    ,PS_JOB_JR BB
    ,PS_ACTN_REASON_BRA CC
    ,XLATTABLE_VW XX
    ,PS_EMPLOYMENT E
    ,PS_FAST_SQR_SEC_VW SCRTY
WHERE H.COMPANY = $Company
AND H.EMPLID   = BB.EMPLID
AND H.EMPLID   = E.EMPLID
AND H.EFFDT    = (SELECT MAX(A.EFFDT) 
                  FROM PS_JOB A 
                      ,PS_EMPLOYMENT EE
                  WHERE A.EMPLID = H.EMPLID
                  AND   A.EMPL_RCD = EE.EMPL_RCD
                  AND   A.EMPL_RCD = H.EMPL_RCD
                  AND   A.ESTABID = H.ESTABID 
                  AND  A.EMPLID = EE.EMPLID
                  AND (A.EFFDT BETWEEN $BeginDt AND $EndDt
                  OR EE.TERMINATION_DT = $EndDt2))
AND H.EFFDT    = BB.EFFDT                 
AND H.EFFSEQ   =  (SELECT MAX(A.EFFSEQ) FROM PS_JOB A 
                   WHERE A.EMPLID = H.EMPLID
                   AND   A.EMPL_RCD = H.EMPL_RCD
                   AND   A.EFFDT  = H.EFFDT )
AND H.EMPL_RCD = BB.EMPL_RCD   
AND H.EFFSEQ   = BB.EFFSEQ
AND H.EMPL_CLASS NOT IN ('40', '50')
AND BB.SEFIP_CATEGORY_BRA NOT IN ('13', '18')
AND H.ESTABID  = $Estabid   
AND H.ACTION   = CC.ACTION
AND H.ACTION_REASON = CC.ACTION_REASON
AND CC.EFFDT                  = (SELECT MAX(C.EFFDT) 
                                FROM PS_ACTN_REASON_BRA C
                                WHERE CC.ACTION = C.ACTION
                                AND   CC.ACTION_REASON = C.ACTION_REASON
                                AND   C.EFFDT <= H.EFFDT)
AND XX.FIELDNAME  = 'CAGED_REASON_BRA'
AND XX.FIELDVALUE = CC.CAGED_REASON_BRA
AND H.EMPLID NOT IN (SELECT D.EMPLID FROM PS_CAGED_BRA D 
                     WHERE D.EMPLID = H.EMPLID
                     AND   D.ESTABID = H.ESTABID
                     AND   D.BALANCE_YEAR = $Year
                     AND   D.MONTHCD  = $Month
                     AND   D.ACERTO_IND_BRA = 'N')
AND H.EMPLID = SCRTY.EMPLID 
[$SecurityClause]                     
ORDER BY H.EMPLID
End-Select
End-Procedure Select-Employee-Data2

!**************************************
begin-procedure Select-Employee-Data3
!show '** Select-Employee-Data3 **'
!**************************************
Let $Registro  = 'C'
Let $Actualization = '3'

Begin-Select     
I.EMPLID
I.EMPL_RCD
I.EFFDT
I.ACTION
I.ACTION_REASON
I.STD_HOURS
I.MONTHLY_RT
I.STD_HRS_FREQUENCY
CCC.CAGED_REASON_BRA
XXX.XLATLONGNAME

   Let $Emplid                          = Rtrim(&I.EMPLID, ' ') 
   Let #EmplRcd                         = &I.EMPL_RCD
   Let $Action                          = Rtrim(&I.ACTION, ' ')
   Let $ActionReason                    = Rtrim(&I.ACTION_REASON, ' ')      
   Let $ActionType                      = Rtrim(&CCC.CAGED_REASON_BRA, ' ')
   let $effdt                           = &I.EFFDT
   Let $HrsWork                         = '00'
   
   if $ActionType <> '00'
      Let #EmplRcd                     = &I.EMPL_RCD
      Let $Actualization               = '3'            
      Let $CBO                         = &B.CBO_CD_BRA
      Let $CBO                         = Rtrim($CBO, ' ')
      Let #LenField   = Length($CBO)
      Let #Counter    = 1
      Let $FieldEnd   = ''
      While #Counter <= #LenField
         Let $Char = substr($CBO,#Counter, 1)  
         If $Char <> '-' and $Char <> ' '
             Let $FieldEnd = $FieldEnd || $Char
         End-if
         Add 1 To #Counter
      End-While
      Let $CBO                         = $FieldEnd
      
       If $IncMSalary = 'Y'
          Let #Salary                   = &I.MONTHLY_RT
       Else
          Let #Salary                   = 0
       End-If
       Let $ActionNm                    = Rtrim(&XXX.XLATLONGNAME, ' ')
       Let #HrsWork                     = &I.STD_HOURS
       Let $HrsWork                     = Edit(#HrsWork, '00')
   
       If $GPBrazil = 'Y'
          Do Get-Other-Ernings
          Do Select-Payee-Parm
       Else
          Do Get-Other-Ernings-JBCD
       End-if
   
       Let #SalaryInt                   = Trunc(#Salary,0)
       Let #SalaryDec                   = #Salary - #SalaryInt
       Let $SalaryInt                   = Edit(#SalaryInt, '000000')
       Let $SalaryDec                   = Edit(#SalaryDec, '00')
       Let $Salary                      = $SalaryInt || $SalaryDec
       
       Do Select-National-Id
       Do Select-Pers-Data1
       Do Select-Pers-Data2
       Do Select-Disability
       Do Create-Array-C
       Do Insert-CAGED-Tbl
   else
       show $Emplid ' Action not CAGED...  ' $Action  ' ' $ActionReason ' ' $Effdt
  end-if
  
FROM PS_JOB I
    ,PS_JOB_JR BBB
    ,PS_ACTN_REASON_BRA CCC
    ,XLATTABLE_VW XXX
WHERE I.COMPANY = $Company
AND I.EMPLID   = BBB.EMPLID
AND I.EFFDT    = (SELECT MAX(A.EFFDT) 
                  FROM PS_JOB A 
                  WHERE A.EMPLID   = I.EMPLID
                  AND   A.EMPL_RCD = I.EMPL_RCD
                  AND   A.ESTABID  = I.ESTABID
                  AND A.EFFDT BETWEEN $BeginDt AND $EndDt )
AND I.EFFDT    = BBB.EFFDT                
AND I.EFFSEQ   = (SELECT MAX(A.EFFSEQ) FROM PS_JOB A 
                  WHERE A.EMPLID = I.EMPLID
                  AND   A.EMPL_RCD = I.EMPL_RCD
                  AND   A.EFFDT  = I.EFFDT )
AND I.EMPL_RCD = BBB.EMPL_RCD    
AND I.EFFSEQ   = BBB.EFFSEQ
AND I.ESTABID  = $Estabid   
AND I.ACTION   = CCC.ACTION
AND I.ACTION_REASON = CCC.ACTION_REASON
AND CCC.EFFDT  = (SELECT MAX(CC.EFFDT) 
                  FROM PS_ACTN_REASON_BRA CC
                  WHERE CC.ACTION = CCC.ACTION
                  AND   CC.ACTION_REASON = CCC.ACTION_REASON
                  AND   CC.EFFDT <= I.EFFDT)
AND XXX.FIELDNAME = 'CAGED_REASON_BRA'
AND XXX.FIELDVALUE = CCC.CAGED_REASON_BRA
AND I.EMPL_CLASS NOT IN ('40', '50')
AND BBB.SEFIP_CATEGORY_BRA NOT IN ('13', '18')
AND I.EMPLID IN (SELECT D.EMPLID FROM PS_CAGED_BRA D 
                 WHERE D.EMPLID = I.EMPLID
                 AND   D.EMPL_RCD = I.EMPL_RCD
                 AND   D.ESTABID = I.ESTABID
                 AND   D.BALANCE_YEAR = $Year
                 AND   D.MONTHCD  = $Month
                 AND   D.ACERTO_IND_BRA = 'N'
                 AND  (D.ACTION <> I.ACTION
                 OR    D.ACTION_REASON <> I.ACTION_REASON
                 OR    D.EFFDT <> I.EFFDT))
ORDER BY I.EMPLID
End-Select
End-Procedure Select-Employee-Data3

!**************************************
begin-procedure Select-Employee-Data4
!show '** Select-Employee-Data4 **'
!**************************************
Let $Registro  = 'C'
Let $Actualization               = '3'

Begin-Select     
J.EMPLID
J.EMPL_RCD
J.EFFDT
J.ACTION
J.ACTION_DT
J.ACTION_REASON
J.MONTHLY_RT
K.CBO_CD_BRA
L.CAGED_REASON_BRA
M.XLATLONGNAME
J.GP_PAYGROUP
J.STD_HOURS

   Let $CreateAcerto                    = 'N'
   Let $Emplid                          = Rtrim(&J.EMPLID, ' ')  
   Let $Action                          = Rtrim(&J.ACTION, ' ')
   Let $ActionReason                    = Rtrim(&J.ACTION_REASON, ' ')      
   Let $ActionType                      = Rtrim(&L.CAGED_REASON_BRA, ' ')
   Let #EmplRcd                         = &J.EMPL_RCD
   Let $effdt                           = &J.EFFDT
   Let $HrsWork                         = '00'
   
   if  $ActionType <> '00'
   
       Let #HrsWork                     = &J.STD_HOURS
       Let $HrsWork                     = Edit(#HrsWork, '00')
    
       If $GPBrazil = 'Y'
          Do Select-Payee-Parm-Effdt
       Else
          Do Select-Payee-Parm-Effdt-JBCD
       End-If
       Do Select-Name-Effdt
       Do Select-Sex-Effdt
       Do Select-Education-Effdt

       If $CreateAcerto                    = 'Y'
          Do Select-National-Id 
          Do Select-PersData1
          Do Select-PersData2
          Do Select-Disability
          
          Let $Actualization               = '3'            
          Let $CBO                         = &B.CBO_CD_BRA
          Let $CBO                         = Rtrim($CBO, ' ')
          Let #LenField   = Length($CBO)
          Let #Counter    = 1
          Let $FieldEnd   = ''
          While #Counter <= #LenField
             Let $Char = substr($CBO,#Counter, 1)  
             If $Char <> '-' and $Char <> ' '
                Let $FieldEnd = $FieldEnd || $Char
             End-if
             Add 1 To #Counter
          End-While
          Let $CBO                         = $FieldEnd
      
          If $IncMSalary = 'Y'
             Let #Salary                   = &J.MONTHLY_RT
          Else
             Let #Salary                   = 0
          End-If
          Let $ActionNm                    = Rtrim(&M.XLATLONGNAME, ' ') 
          
          If $GPBrazil = 'Y'
             Do Get-Other-Ernings
          Else
             Do Get-Other-Ernings-JBCD
          End-if
   
          Let #SalaryInt                   = Trunc(#Salary,0)
          Let #SalaryDec                   = #Salary - #SalaryInt
          Let $SalaryInt                   = Edit(#SalaryInt, '000000')
          Let $SalaryDec                   = Edit(#SalaryDec, '00')
          Let $Salary                      = $SalaryInt || $SalaryDec
       
          Do Create-Array-C
          Do Insert-CAGED-Tbl
       End-if
   else
       show $Emplid ' Action not CAGED...  ' $Action  ' ' $ActionReason ' ' $Effdt
  end-if
  
FROM PS_JOB J
    ,PS_JOB_JR K
    ,PS_ACTN_REASON_BRA L
    ,XLATTABLE_VW M
    ,PS_CAGED_BRA N 
WHERE J.COMPANY = $Company
AND J.EMPLID    = K.EMPLID
AND J.EMPLID    = N.EMPLID
AND J.EFFDT     = (SELECT MAX(A.EFFDT) 
                  FROM PS_JOB A 
                  WHERE A.EMPLID  = J.EMPLID
                  AND   A.EMPL_RCD = J.EMPL_RCD
                  AND   A.ESTABID = J.ESTABID
                  AND   A.EFFDT BETWEEN $BeginDt AND $EndDt )
AND J.EFFDT     = K.EFFDT 
AND J.EFFDT     = N.EFFDT
AND J.EFFSEQ    = (SELECT MAX(A.EFFSEQ) FROM PS_JOB A 
                  WHERE A.EMPLID = J.EMPLID
                  AND   A.EMPL_RCD = J.EMPL_RCD
                  AND   A.EFFDT  = J.EFFDT )
AND L.EFFDT     = (SELECT MAX(CC.EFFDT) 
                  FROM PS_ACTN_REASON_BRA CC
                  WHERE CC.ACTION = L.ACTION
                  AND   CC.ACTION_REASON = L.ACTION_REASON
                  AND   CC.EFFDT <= J.EFFDT)                  
AND J.EMPL_RCD  = K.EMPL_RCD    
AND J.EFFSEQ    = K.EFFSEQ
AND J.EMPL_CLASS NOT IN ('40', '50')
AND K.SEFIP_CATEGORY_BRA NOT IN ('13', '18')
AND J.ESTABID   = $Estabid   
AND J.ESTABID   = N.ESTABID
AND J.ACTION    = L.ACTION
AND J.ACTION    = N.ACTION
AND J.ACTION_REASON = L.ACTION_REASON
AND J.ACTION_REASON = N.ACTION_REASON
AND M.FIELDNAME = 'CAGED_REASON_BRA'
AND M.FIELDVALUE = L.CAGED_REASON_BRA
AND N.BALANCE_YEAR = #Year
AND N.MONTHCD = $Month
AND N.ACERTO_IND_BRA = 'N'
ORDER BY J.EMPLID 
End-Select
End-Procedure Select-Employee-Data4

!**************************************
begin-procedure Select-Employee-Data-Error
!show '** Select-Employee-Data-Error **'
!**************************************
Let $Blank = ''

Begin-Select     
ER.EMPLID
ER.EMPL_RCD
ER.EFFDT
ER.ACTION
ER.ACTION_REASON

  Let $Emplid                          = Rtrim(&ER.EMPLID, ' ')  
  Let $Action                          = Rtrim(&ER.ACTION, ' ')
  Let $ActionReason                    = Rtrim(&ER.ACTION_REASON, ' ')   
  Let #EmplRcd                         = &ER.EMPL_RCD
  Let $EffdtError                      = &ER.EFFDT
  
  
  show 'Warning < Action Reason is blank... ' $Emplid ' ' $EffdtError ' ' $Action 
 
FROM PS_JOB ER
WHERE ER.COMPANY              = $Company
AND ER.EFFDT                  = (SELECT MAX(AA.EFFDT) 
                                FROM PS_JOB AA 
                                    ,PS_EMPLOYMENT E 
                                WHERE ER.EMPLID   = AA.EMPLID
                                AND   AA.EMPL_RCD = ER.EMPL_RCD
                                AND   AA.EMPL_RCD = E.EMPL_RCD
                                AND   AA.ESTABID  = ER.ESTABID
                                AND   ER.EMPLID   = E.EMPLID
                                AND (AA.EFFDT BETWEEN $BeginDT AND $EndDT OR
                                     E.TERMINATION_DT = $EndDT2 ))              
AND ER.EFFSEQ                 = (SELECT MAX(AA.EFFSEQ) FROM PS_JOB AA 
                                WHERE AA.EMPLID = ER.EMPLID
                                AND   AA.EMPL_RCD = ER.EMPL_RCD
                                AND   AA.EFFDT  = ER.EFFDT)
AND ER.ESTABID                = $Estabid   
AND ER.ACTION_REASON          = $Blank
AND ER.EMPL_CLASS NOT IN ('40', '50')
ORDER BY ER.EMPLID
End-Select
End-Procedure Select-Employee-Data-Error

!**************************************
begin-procedure Select-Job-Data
!show '** Select-Job-Data **'
!**************************************
Begin-Select     
D1.EMPL_RCD
D1.EFFDT
D1.ACTION
D1.ACTION_DT
D1.ACTION_REASON
D1.STD_HOURS
D1.COMPRATE
D1.MONTHLY_RT
D1.STD_HRS_FREQUENCY
B1.CBO_CD_BRA
C1.CAGED_REASON_BRA
X1.XLATLONGNAME
D1.GP_PAYGROUP
EE1.TERMINATION_DT

  Let $TerminationDt                   = Rtrim(&EE1.TERMINATION_DT, ' ')
  Let $ProcessInd = 'Y' 
  Let $effdt      =  &D1.EFFDT

  If $TerminationDt <> ''
     Do convert-to-dtu-date(&EE1.TERMINATION_DT,$TerminationDt)
     Do convert-to-dtu-date($BeginDT, $BeginDT2)
     If $Action = 'TER' and
        $TerminationDt < $BeginDT2
        Let $ProcessInd = 'N' 
     End-if
  end-if
  
  if  $ActionType <> '00' and
      $ProcessInd = 'Y'
      Let $HrsWork = '00'
      Let #EmplRcd                     = &D1.EMPL_RCD  
      Let $CBO                         = &B.CBO_CD_BRA
      Let $CBO                         = Rtrim($CBO, ' ')
      Let #LenField   = Length($CBO)
      Let #Counter    = 1
      Let $FieldEnd   = ''
      While #Counter <= #LenField
         Let $Char = substr($CBO,#Counter, 1)  
         If $Char <> '-' and $Char <> ' '
             Let $FieldEnd = $FieldEnd || $Char
         End-if
         Add 1 To #Counter
      End-While
      Let $CBO                         = $FieldEnd
      
!     Let #Salary                      = &D1.COMPRATE
      If $IncMSalary = 'Y'
         Let #Salary                   = &D1.MONTHLY_RT
      Else
         Let #Salary                   = 0
      End-If
      Let $ActionNm                    = Rtrim(&X1.XLATLONGNAME, ' ')
      Let $FrequencyType               = Rtrim(&D1.STD_HRS_FREQUENCY, ' ')
     ! Let #HrsWork                     = &D1.STD_HOURS
     ! Let $HrsWork                     = Edit(#HrsWork, '00')

      If $GPBrazil = 'Y'
         Do Get-Other-Ernings
      Else
         Do Get-Other-Ernings-JBCD
      End-if
  
      Let #SalaryInt                   = Trunc(#Salary,0)
      Let #SalaryDec                   = #Salary - #SalaryInt
      Let $SalaryInt                   = Edit(#SalaryInt, '000000')
      Let $SalaryDec                   = Edit(#SalaryDec, '00')
      Let $Salary                      = $SalaryInt || $SalaryDec
  else
     Do convert-to-dtu-date($BeginDT, $BeginDT2)
     If $Action = 'TER' and
         $TerminationDt < $BeginDT2
         show $Emplid ' Action not process : ' $Action  ' Effdt: ' $Effdt ' Termination: ' $TerminationDt
     else        
         show $Emplid ' Action not CAGED...  ' $Action  ' ' $ActionReason ' ' $Effdt
     End-if
  end-if
  

FROM PS_JOB D1
    ,PS_JOB_JR B1
    ,PS_ACTN_REASON_BRA C1
    ,XLATTABLE_VW X1
    ,PS_EMPLOYMENT EE1
WHERE D1.EMPLID                 = $Emplid
AND D1.EMPLID                 = B1.EMPLID
AND D1.EMPLID                 = EE1.EMPLID
AND D1.EFFDT                  = (SELECT MAX(AA.EFFDT) FROM PS_JOB AA 
                                WHERE D1.EMPLID = AA.EMPLID
                                AND AA.EMPL_RCD = D1.EMPL_RCD
                                AND D1.EFFDT <= $EndDT )
AND D1.EFFDT                  = B1.EFFDT                  
AND D1.EFFSEQ                 = (SELECT MAX(AA.EFFSEQ) FROM PS_JOB AA 
                                WHERE AA.EMPLID = D1.EMPLID
                                AND   AA.EMPL_RCD = D1.EMPL_RCD
                                AND   AA.EFFDT  = D1.EFFDT)
AND D1.EMPL_RCD               = B1.EMPL_RCD 
AND D1.EMPL_RCD               = EE1.EMPL_RCD
AND D1.EFFSEQ                 = B1.EFFSEQ
AND D1.EMPL_CLASS NOT IN ('40', '50')
AND B1.SEFIP_CATEGORY_BRA NOT IN ('13', '18')
AND D1.ACTION                 = C1.ACTION
AND D1.ACTION_REASON          = C1.ACTION_REASON
AND C1.EFFDT                  = (SELECT MAX(CC.EFFDT) 
                                FROM PS_ACTN_REASON_BRA CC
                                WHERE CC.ACTION = C1.ACTION
                                AND   CC.ACTION_REASON = C1.ACTION_REASON
                                AND   CC.EFFDT <= D1.EFFDT)
AND X1.FIELDNAME              = 'CAGED_REASON_BRA'
AND X1.FIELDVALUE             = C1.CAGED_REASON_BRA
End-Select
 
End-Procedure Select-Job-Data

!**************************************
begin-procedure Count-Employees
!show '** Count-Employees **'
!show '   $FirstCAGED: ' $FirstCAGED
!**************************************
if $FirstCAGED <> 'Y'
Begin-SELECT
COUNT(*) &count

  Let #TotalEmplBeg   = &count
  
FROM PS_JOB A
    ,PS_ACTN_REASON_BRA C
WHERE A.COMPANY = $Company
AND   A.ESTABID  = $Estabid
AND   A.ACTION   = C.ACTION
AND   A.ACTION_REASON   = C.ACTION_REASON
AND   A.EFFDT    = (SELECT MAX(AA.EFFDT) 
                    FROM PS_JOB AA 
                    WHERE A.EMPLID = AA.EMPLID
                    AND   AA.EMPL_RCD = A.EMPL_RCD
                    AND   AA.EFFDT < $BeginDT 
                    AND   AA.ACTION  <> 'PSF' )  
AND   A.EMPL_STATUS = 'A'
AND   A.EFFSEQ   =  (SELECT MAX(AA.EFFSEQ) 
                    FROM PS_JOB AA 
                    WHERE A.EMPLID = AA.EMPLID
                    AND AA.EMPL_RCD = A.EMPL_RCD
                    AND AA.EFFDT = A.EFFDT)
AND   C.EFFDT    = (SELECT MAX(CC.EFFDT) FROM PS_ACTN_REASON_BRA CC 
                    WHERE CC.ACTION = C.ACTION
                    AND   CC.ACTION_REASON = C.ACTION_REASON) 
AND   A.EMPL_CLASS NOT IN ('40', '50')                    
AND   A.EMPL_STATUS = 'A'
End-SELECT

Begin-SELECT     
COUNT(*) &ccount2

  Let #TotalEmplEnd   = &ccount2 
  
FROM PS_JOB A
,PS_ACTN_REASON_BRA C
WHERE A.COMPANY = $Company
AND   A.ESTABID  = $Estabid
AND   A.ACTION   = C.ACTION
AND   A.ACTION_REASON   = C.ACTION_REASON
AND   A.EFFDT    = (SELECT MAX(AA.EFFDT) FROM PS_JOB AA 
                    WHERE A.EMPLID = AA.EMPLID
                    AND   AA.EMPL_RCD = A.EMPL_RCD
                    AND   AA.EFFDT <= $EndDT 
                    AND   AA.ACTION  <> 'PSF' )  
AND   A.EFFSEQ   =  (SELECT MAX(AA.EFFSEQ) FROM PS_JOB AA 
                    WHERE A.EMPLID = AA.EMPLID
                    AND AA.EMPL_RCD = A.EMPL_RCD
                    AND AA.EFFDT = A.EFFDT)
AND   C.EFFDT    = (SELECT MAX(CC.EFFDT) FROM PS_ACTN_REASON_BRA CC 
                    WHERE CC.ACTION = C.ACTION
                    AND   CC.ACTION_REASON = C.ACTION_REASON) 
AND A.EMPL_CLASS NOT IN ('40', '50')                      
AND A.EMPL_STATUS = 'A'
End-SELECT

else

Let #TotalEmpBeg     = 0

Begin-SELECT     
COUNT(*) &count2

  Let #TotalEmplEnd   = &count2 
  
FROM PS_JOB A
,PS_ACTN_REASON_BRA C
WHERE A.COMPANY = $Company
AND   A.ESTABID  = $Estabid
AND   A.ACTION   = C.ACTION
AND   A.ACTION_REASON   = C.ACTION_REASON
AND   A.EFFDT    = (SELECT MAX(AA.EFFDT) FROM PS_JOB AA 
                    WHERE A.EMPLID = AA.EMPLID
                    AND   AA.EMPL_RCD = A.EMPL_RCD
                    AND   AA.EFFDT <= $EndDT 
                    AND   AA.EFFDT >= $BeginDT
                    AND   AA.ACTION  <> 'PSF' )  
AND   A.EFFSEQ   =  (SELECT MAX(AA.EFFSEQ) 
                     FROM PS_JOB AA 
                     WHERE A.EMPLID = AA.EMPLID
                     AND   AA.EMPL_RCD = A.EMPL_RCD
                     AND AA.EFFDT = A.EFFDT)
AND   C.EFFDT    = (SELECT MAX(CC.EFFDT) FROM PS_ACTN_REASON_BRA CC 
                    WHERE CC.ACTION = C.ACTION
                    AND   CC.ACTION_REASON = C.ACTION_REASON) 
AND A.EMPL_STATUS = 'A'
AND A.EMPL_CLASS NOT IN ('40', '50')  
!AND   C.CAGED_REASON_BRA NOT IN ( '00' )
End-SELECT


Begin-SELECT     
COUNT(*) &count3

  Let #TotalEmplEnd2   = &count3 
  
FROM PS_JOB A
,PS_ACTN_REASON_BRA C
WHERE A.COMPANY = $Company
AND   A.ESTABID  = $Estabid
AND   A.ACTION   = C.ACTION
AND   A.ACTION_REASON   = C.ACTION_REASON
AND   A.EFFDT    = (SELECT MAX(AA.EFFDT) FROM PS_JOB AA 
                    WHERE A.EMPLID = AA.EMPLID
                    AND   AA.EMPL_RCD = A.EMPL_RCD
                    AND   AA.EFFDT <= $EndDT 
                    AND   AA.EFFDT >= $BeginDT
                    AND   AA.ACTION  <> 'PSF' )  
AND   A.EFFSEQ   =  (SELECT MAX(AA.EFFSEQ) 
                     FROM PS_JOB AA 
                     WHERE A.EMPLID = AA.EMPLID
                     AND AA.EMPL_RCD = A.EMPL_RCD
                     AND AA.EFFDT = A.EFFDT)
AND   C.EFFDT    = (SELECT MAX(CC.EFFDT) FROM PS_ACTN_REASON_BRA CC 
                    WHERE CC.ACTION = C.ACTION
                    AND   CC.ACTION_REASON = C.ACTION_REASON) 
AND A.EMPL_STATUS <> 'A' 
AND A.EMPL_CLASS NOT IN ('40', '50')  
!AND   C.CAGED_REASON_BRA NOT IN ( '00' )
End-SELECT
Let #TotalEmplEnd = #TotalEmplBeg + #TotalEmplEnd - #TotalEmplEnd2
End-if

!show '   #TotalEmplBeg: ' #TotalEmplBeg
!show '   #TotalEmplEnd: ' #TotalEmplEnd
 
End-Procedure Count-Employees

!**************************************
begin-procedure Select-Pers-Data1

Let $BirthDt = '000000'
Let $Name     = ' '

Begin-Select     
A.SEX
C.BIRTHDATE
D.HIRE_DT
D.SERVICE_DT
D.CMPNY_SENIORITY_DT
D.TERMINATION_DT
E.NAME

  Let $Sex      = Rtrim(&A.SEX, ' ')
  Let $TerminationDt = Rtrim(&D.TERMINATION_DT, ' ')
  Let $serviceDt = &D.SERVICE_DT
  
! HIRE DATE  
  Do convert-to-dtu-date(&D.HIRE_DT,$HireDt)
  Do convert-to-dtu-date($serviceDt,$serviceDt)
  
  If $serviceDt > $HireDt
     Let $HireDt = $serviceDt
  end-if
    
  Let #LenField   = Length($HireDt)
  Let #Counter    = 1
  Let $FieldEnd   = ''
  While #Counter <= #LenField
     Let $Char = substr($HireDT,#Counter, 1)  
     If $Char <> '-'
         Let $FieldEnd = $FieldEnd || $Char
     End-if
     Add 1 To #Counter
  End-While
              
  Let $HireYear  = Substr($FieldEnd,1, 4)
  Let $HireMonth = Substr($FieldEnd,5, 2)  
  Let $HireDay   = Substr($FieldEnd,7, 2)  
  Let $HireDt    = $HireDay|| $HireMonth  || $HireYear 
  
  Let $Name     = Upper(Rtrim(&E.NAME, ' '))
  
  If $TerminationDt <> ''
     
     Do convert-to-dtu-date(&D.TERMINATION_DT,$TerminationDt)
     If $serviceDt > $TerminationDt
        Let $TerminationDy = '  '
        Let $TerminationDt = ''   
     else
        Let $TerminationDy = Substr($TerminationDt,9,2)
        Let #LenField   = Length($TerminationDt)
        Let #Counter    = 1
        Let $FieldEnd   = ''
        While #Counter <= #LenField
           Let $Char = substr($TerminationDT,#Counter, 1)  
           If $Char <> '-'
              Let $FieldEnd = $FieldEnd || $Char
           End-if
           add 1 To #Counter
        End-While
                
        Let $TerYear  = Substr($FieldEnd,1, 4)
        Let $TerMonth = Substr($FieldEnd,5, 2)
        Let $TerDay   = Substr($FieldEnd,7, 2)
        Let $TerminationDt    = $TerDay|| $TerMonth  || $TerYear
     end-if
  else
     Let $TerminationDy = '  '
     Let $TerminationDt = ''
  end-if
  
  Do convert-to-dtu-date(&C.BIRTHDATE,$BirthDt)
  
  
  Let #LenField   = Length($BirthDt)
  Let #Counter    = 1
  Let $FieldEnd   = ''
  While #Counter <= #LenField
    Let $Char = substr($BirthDT,#Counter, 1)  
    If $Char <> '-'
       Let $FieldEnd = $FieldEnd || $Char
    End-if
    add 1 To #Counter
  End-While
         
  Let $BirthYear  = Substr($FieldEnd,1, 4)
  Let $BirthMonth = Substr($FieldEnd,5, 2)
  Let $BirthDay   = Substr($FieldEnd,7, 2)
  Let $BirthDt    = $BirthDay|| $BirthMonth  || $BirthYear 
  
  If $Sex = 'F'
     Let $Sex = '2'
  else
     Let $Sex = '1'
  end-if
  
FROM PS_PERS_DATA_EFFDT A
    ,PS_PERSON C
    ,PS_EMPLOYMENT D
    ,PS_PERSON_NAME E
WHERE A.EMPLID = $Emplid
AND A.EMPLID = C.EMPLID
AND A.EMPLID = D.EMPLID
AND A.EMPLID = E.EMPLID
AND A.EFFDT  = (SELECT MAX(AA.EFFDT) FROM PS_PERS_DATA_EFFDT AA WHERE A.EMPLID = AA.EMPLID)
End-Select
End-Procedure Select-Pers-Data1

!**************************************
begin-procedure Select-PersData1
!show '** Select-PersData1 **'
!**************************************
Let $BirthDt = '000000'

Begin-Select     
AC.BIRTHDATE
AD.HIRE_DT
AD.SERVICE_DT
AD.CMPNY_SENIORITY_DT
AD.TERMINATION_DT

  Let $TerminationDt = Rtrim(&AD.TERMINATION_DT, ' ')
  
! HIRE DATE  
  Do convert-to-dtu-date(&AD.HIRE_DT,$HireDt)

  Let #LenField   = Length($HireDt)
  Let #Counter    = 1
  Let $FieldEnd   = ''
  While #Counter <= #LenField
     Let $Char = substr($HireDT,#Counter, 1)  
     If $Char <> '-'
         Let $FieldEnd = $FieldEnd || $Char
     End-if
     Add 1 To #Counter
  End-While
              
  Let $HireYear  = Substr($FieldEnd,1, 4)
  Let $HireMonth = Substr($FieldEnd,5, 2)  
  Let $HireDay   = Substr($FieldEnd,7, 2)  
  Let $HireDt    = $HireDay|| $HireMonth  || $HireYear 
  
  If $TerminationDt <> ''
     Do convert-to-dtu-date(&AD.TERMINATION_DT,$TerminationDt)
     Let $TerminationDy = Substr($TerminationDt,9,2)
     Let #LenField   = Length($TerminationDt)
     Let #Counter    = 1
     Let $FieldEnd   = ''
     While #Counter <= #LenField
       Let $Char = substr($TerminationDT,#Counter, 1)  
       If $Char <> '-'
          Let $FieldEnd = $FieldEnd || $Char
       End-if
       add 1 To #Counter
     End-While
                
     Let $TerYear  = Substr($FieldEnd,1, 4)
     Let $TerMonth = Substr($FieldEnd,5, 2)
     Let $TerDay   = Substr($FieldEnd,7, 2)
     Let $TerminationDt    = $TerDay|| $TerMonth  || $TerYear
  else
     Let $TerminationDy = '  '
     Let $TerminationDt = ''
  end-if
  
  Do convert-to-dtu-date(&AC.BIRTHDATE,$BirthDt)
  
  Let #LenField   = Length($BirthDt)
  Let #Counter    = 1
  Let $FieldEnd   = ''
  While #Counter <= #LenField
    Let $Char = substr($BirthDT,#Counter, 1)  
    If $Char <> '-'
       Let $FieldEnd = $FieldEnd || $Char
    End-if
    add 1 To #Counter
  End-While
         
  Let $BirthYear  = Substr($FieldEnd,1, 4)
  Let $BirthMonth = Substr($FieldEnd,5, 2)
  Let $BirthDay   = Substr($FieldEnd,7, 2)
  Let $BirthDt    = $BirthDay|| $BirthMonth  || $BirthYear 
  
FROM PS_PERSON AC
    ,PS_EMPLOYMENT AD
WHERE AC.EMPLID = $Emplid
AND AC.EMPLID = AD.EMPLID
End-Select
End-Procedure Select-PersData1

!**************************************
begin-procedure Select-Name-Effdt
!show '** Select-Name-Effdt **'
!show  '   $EndDT:   ' $EndDT
!show  '   $BeginDT: ' $BeginDT
!**************************************
Let $SearchAcerto  = 'N'
Let $Name     = ' '

Begin-Select     
NM.NAME
NM.EFFDT
NM.NAME_TYPE

  Let $SearchAcerto  = 'Y'
  Let $Name     = Upper(Rtrim(&NM.NAME, ' '))
  Let $NameType = Rtrim(&NM.NAME_TYPE, ' ')
  Do convert-to-dtu-date(&NM.EFFDT, $SearchBeginDt)
  Do convert-from-dtu-date($SearchBeginDt, $SearchBeginDt)
  
FROM PS_NAMES NM   
WHERE NM.EMPLID = $Emplid
AND NM.NAME_TYPE = 'PRI'
AND NM.EFFDT  = (SELECT MAX(AA.EFFDT) 
                 FROM PS_NAMES AA 
                 WHERE NM.EMPLID = AA.EMPLID
                 AND AA.EFFDT BETWEEN $BeginDT AND $EndDT )
End-Select

If $SearchAcerto  = 'Y'
Begin-Select     
NM2.NAME
NM2.EFFDT
NM2.NAME_TYPE

  Let $SearchAcerto  = 'Y'
  Let $Name2     = Upper(Rtrim(&NM2.NAME, ' '))
  
  If $Name <> $Name2
     Let $CreateAcerto  = 'Y'
  End-if
  
FROM PS_NAMES NM2   
WHERE NM2.EMPLID = $Emplid
AND NM2.NAME_TYPE = 'PRI'
AND NM2.EFFDT  = (SELECT MAX(AA.EFFDT) 
                 FROM PS_NAMES AA 
                 WHERE NM2.EMPLID = AA.EMPLID
                 AND AA.EFFDT < $SearchBeginDt )
End-Select
end-if
End-Procedure Select-Name-Effdt

!**************************************
begin-procedure Select-Sex-Effdt
!show '** Select-Sex-Effdt **'
!**************************************
Let $SearchAcerto  = 'N'
Begin-Select     
S.SEX
S.EFFDT

  Let $Sex1     = Rtrim(&S.SEX, ' ')
  Let $Sex      = Rtrim(&S.SEX, ' ')
 
  If $Sex = 'F'
     Let $Sex = '2'
  else
     Let $Sex = '1'
  end-if

  Do convert-to-dtu-date(&S.EFFDT, $SearchBeginDt)
  Do convert-from-dtu-date($SearchBeginDt, $SearchBeginDt)
  
  Let $SearchAcerto  = 'Y'
  
FROM PS_PERS_DATA_EFFDT S
WHERE S.EMPLID = $Emplid
AND S.EFFDT  = (SELECT MAX(AA.EFFDT) 
                FROM PS_PERS_DATA_EFFDT AA 
                WHERE S.EMPLID = AA.EMPLID
                AND  AA.EFFDT BETWEEN $BeginDt AND $EndDT )
End-Select

If $SearchAcerto  = 'Y'
Begin-Select     
S2.SEX
 Let $Sex2      = Rtrim(&S2.SEX, ' ')
 
  If $Sex2 <> $Sex1
     Let $CreateAcerto  = 'Y'
  End-if
  
FROM PS_PERS_DATA_EFFDT S2
WHERE S2.EMPLID = $Emplid
AND S2.EFFDT  = (SELECT MAX(AA.EFFDT) 
                FROM PS_PERS_DATA_EFFDT AA 
                WHERE S2.EMPLID = AA.EMPLID
                AND  AA.EFFDT < $SearchBeginDt )
End-Select
end-if
!show '   $CreateAcerto: '  $CreateAcerto
End-Procedure Select-Sex-Effdt

!**************************************
begin-procedure Select-Pers-Data2
!show '** Select-Pers-Data2 **'
!show '   $TerminationDT: ' $TerminationDT
!**************************************
Begin-Select     
B.EDUCATION_LVL_BRA
B.ETHNIC_GROUP_BRA
F.CTPS_SERIES_BRA
F.CTPS_STATE_BRA

  Let $EducationLvl = Ltrim(&B.EDUCATION_LVL_BRA, '0')
  Let #EducationLvl = &B.EDUCATION_LVL_BRA

  if #EducationLvl > 9
      Let $EducationLvl = '9'
  end-if
     
  Let $Race     = Substr(Rtrim(&B.ETHNIC_GROUP_BRA, ' '),2,1)
  Let $CTPSSerie = Rtrim(&F.CTPS_SERIES_BRA, ' ')
  Let #LenField    = Length($CTPSSerie) 
  
  If #LenField < 3
     Let $CTPSSerie = '00' || $CTPSSerie
      Let #LenField    = Length($CTPSSerie) 
  End-if
  
  Let #Counter     = #LenField - 2   
  Let $CTPSSerieEnd   = ''
  While #Counter  <= #LenField
        Let $Char    = Substr($CTPSSerie,#Counter, 1)  
        Let $CTPSSerieEnd = $CTPSSerieEnd || $Char
        ADD 1 To #Counter
  End-While
  
  Let $CTPSSerie = $CTPSSerieEnd
  Let $CTPSSerie = Edit($CTPSSerie, '000')
  Let $State    = Rtrim(&F.CTPS_STATE_BRA, ' ')
  
FROM PS_PERS_DATA_BRA B
    ,PS_PERSON_BRA F
WHERE B.EMPLID = $Emplid
AND B.EMPLID = F.EMPLID
AND B.EFFDT  = (SELECT MAX(BB.EFFDT)
                FROM PS_PERS_DATA_BRA BB
                WHERE BB.EMPLID = B.EMPLID) 
End-Select
End-Procedure Select-Pers-Data2

!**************************************
begin-procedure Select-PersData2
!show '** Select-PersData2 **'
!**************************************
Begin-Select     
AF.CTPS_SERIES_BRA
AF.CTPS_STATE_BRA

  Let $CTPSSeriecc = Rtrim(&AF.CTPS_SERIES_BRA, ' ')
  Let #LenField    = Length($CTPSSerie) 
  
  If #LenField < 3
     Let $CTPSSerie = '00' || $CTPSSerie
      Let #LenField    = Length($CTPSSerie) 
  End-if
  
  Let #Counter     = #LenField - 2   
  Let $CTPSSerieEnd   = ''
  While #Counter  <= #LenField
        Let $Char    = Substr($CTPSSerie,#Counter, 1)  
        Let $CTPSSerieEnd = $CTPSSerieEnd || $Char
        ADD 1 To #Counter
  End-While
  
  Let $CTPSSerie = $CTPSSerieEnd
  Let $CTPSSerie = Edit($CTPSSerie, '000')
  Let $State    = Rtrim(&AF.CTPS_STATE_BRA, ' ')
  
FROM PS_PERSON_BRA AF
WHERE AF.EMPLID = $Emplid
End-Select
End-Procedure Select-PersData2

!**************************************
begin-procedure Select-Education-Effdt
!show '** Select-Education-Effdt **'
!**************************************
Let $SearchAcerto     = 'N'
Begin-Select     
AB.EDUCATION_LVL_BRA
AB.EFFDT

  Let $SearchAcerto     = 'Y'
  Let $EducationLvl1 = Ltrim(&AB.EDUCATION_LVL_BRA, '0')
  Let $EducationLvl  = Ltrim(&AB.EDUCATION_LVL_BRA, '0')
  Let #EducationLvl  = &AB.EDUCATION_LVL_BRA

  if #EducationLvl > 9
      Let $EducationLvl = '9'
  end-if 
     
  Do convert-to-dtu-date(&AB.EFFDT, $SearchBeginDt)
  Do convert-from-dtu-date($SearchBeginDt, $SearchBeginDt)

FROM PS_PERS_DATA_BRA AB
WHERE AB.EMPLID = $Emplid
AND AB.EFFDT  = (SELECT MAX(BB.EFFDT)
                FROM PS_PERS_DATA_BRA BB
                WHERE BB.EMPLID = AB.EMPLID
                AND   BB.EFFDT BETWEEN $BeginDt AND $EndDt ) 
End-Select

if $SearchAcerto     = 'Y'
Begin-Select     
AB2.EDUCATION_LVL_BRA
AB2.EFFDT

  Let $EducationLvl2 = Ltrim(&AB2.EDUCATION_LVL_BRA, '0')
 
  if $EducationLvl2 <> $EducationLvl1
      Let $CreateAcerto = 'Y'
  end-if 
     
FROM PS_PERS_DATA_BRA AB2
WHERE AB2.EMPLID = $Emplid
AND AB2.EFFDT  = (SELECT MAX(BB.EFFDT)
                FROM PS_PERS_DATA_BRA BB
                WHERE BB.EMPLID = AB2.EMPLID
                AND   BB.EFFDT < $SearchBeginDt) 
End-Select
End-if
End-Procedure Select-Education-Effdt

!**************************************
begin-procedure Select-Estab-Id
!show '** Select-Estab-Id **'
!**************************************
Let $Authorization = '0000000'

Begin-Select
A.ESTAB_ID_TYPE_BRA
A.ESTAB_ID_BRA

  Let $EstabIdType = rtrim(&A.ESTAB_ID_TYPE_BRA, ' ')
 
  Evaluate $EstabIdType
  when = 'CAGED'
       Let $Autorization = Rtrim(&A.ESTAB_ID_BRA, ' ')
  when = 'CEI'
       Let #CEI  = &A.ESTAB_ID_BRA
       Let $NoIdent = EDIT(#CEI,'00000000000000')
  when = 'CNPJ'
       Let #CNPJ = &A.ESTAB_ID_BRA
       Let $NoIdent = EDIT(#CNPJ,'00000000000000')
  when = 'CNAE'
       Let #CNAE = &A.ESTAB_ID_BRA  
       Let $CNAE = Edit(#CNAE, '0000000')
       Let $CNAE = substr($CNAE,1,5)
  End-Evaluate
  
FROM  PS_ESTAB_ID_BRA A
     ,PS_ESTAB_TBL_BRA A2
WHERE A.ESTABID = $EstabId
AND   A.ESTABID = A2.ESTABID
AND   A.COUNTRY = $Country
AND   A.COUNTY_CD_BRA  = A2.COUNTY_CD_BRA
AND   A.EFFDT = A2.EFFDT
AND   A2.EFFDT = (SELECT MAX(AA.EFFDT) 
                 FROM PS_ESTAB_TBL_BRA AA
                 WHERE AA.ESTABID = A.ESTABID
                 AND AA.EFFDT <= $EndDT )   
End-Select
End-Procedure Select-Estab-Id

!**************************************
begin-procedure Select-Estab-Phone

Let $Phone = '00000000'
Let $Ext   = '00000'
Let $DDD   = '0000'

Begin-Select
A.PHONE_TYPE
A.PHONE
A.COUNTRY_CODE
  Let $PhoneType = Rtrim(&A.PHONE_TYPE,' ')
  Evaluate $PhoneType
  when = 'MAIN'
  when = 'BUSN' 
    Let $Phone = Rtrim(&A.PHONE, ' ')
      Let #LenField   = Length($Phone)
      Let #Counter    = 1
      Let $FieldEnd   = ''
      While #Counter <= #LenField
        Let $Char = substr($Phone,#Counter, 1)  
        If $Char <> '-'
           Let $FieldEnd = $FieldEnd || $Char
        End-if
        Add 1 To #Counter
      End-While
      Let $Phone = $FieldEnd
    Let $BeginField = $Phone
    Let #Long = 8
    Do Format-Numbers
    Let $Phone = $EndField
    Let $DDD   = Rtrim(&A.COUNTRY_CODE, ' ')
    
    Let $BeginField = $DDD
    Let #Long = 4
    Do Format-Numbers
    Let $DDD = $EndField
  when = 'OTR'
    Let $Ext   = Rtrim(&A.PHONE, ' ')
    Let #Ext   = $Ext
    Let $Ext   = Edit(#Ext, '00000')
  End-Evaluate
  
  !Let $BeginField = $DDD
  !Let #Long = 4
  !Do Format-Numbers
  !Let $DDD = $EndField

FROM  PS_ESTAB_PHONE A
WHERE A.ESTABID = $EstabId
AND   A.EFFDT = (SELECT MAX(AA.EFFDT) 
                 FROM PS_ESTAB_PHONE AA
                 WHERE AA.ESTABID = A.ESTABID)
End-Select
End-Procedure Select-Estab-Phone

!**************************************
begin-procedure Select-CAGED-tbl
!show '** Select-CAGED-tbl **'
!show '    $CondCAGED: '  $CondCAGED 
!**************************************
Let $Declaration = '1'
Let #TotalFJob     = 0
Let #TotalRein     = 0
Let #TotalTemp     = 0
Let #TotalJust     = 0
Let #TotalUnJu     = 0 
Let #TotalRehi     = 0
Let #TotalVolu     = 0
Let #TotalEndT     = 0
Let #TotalEndC     = 0
Let #TotalReta     = 0
Let #TotalDeat     = 0
Let #TotalTran     = 0
Let #TotalTraO     = 0

Begin-Select
EE.EMPLID
EE.EFFDT
EE.ACTION
EE.ACTION_REASON
EE.CAGED_REASON_BRA
EE.ACERTO_IND_BRA

  Let $ActionType = Rtrim(&EE.CAGED_REASON_BRA, ' ')

  Evaluate $ActionType
    when = '10'
      Let #TotalFJob = #TotalFJob + 1
    when = '20'
      Let #TotalRein = #TotalRein + 1
    when = '25'
      Let #TotalTemp = #TotalTemp + 1
    when = '31'
      Let #TotalUnJu = #TotalUnJu + 1
    when = '32'
      Let #TotalJust = #TotalJust + 1
    when = '35'
      Let #TotalRehi = #TotalRehi + 1
    when = '40'
      Let #TotalVolu = #TotalVolu + 1
    when = '43'
      Let #TotalEndT = #TotalEndT + 1
    when = '45'
      Let #TotalEndC = #TotalEndC + 1
    when = '50'
      Let #TotalReta = #TotalReta + 1
    when = '60'
      Let #TotalDeat = #TotalDeat + 1
    when = '70'
      Let #TotalTran = #TotalTran + 1
    when = '80'
      Let #TotalTraO = #TotalTraO + 1
  End-Evaluate
    
  Let $Declaration = '2'

FROM PS_CAGED_BRA EE
WHERE EE.CAGED_ESTAB_ID_BRA = $EstabidResp 
[$CondCAGED]    
AND   EE.EFFDT = (SELECT MAX(E.EFFDT) FROM PS_CAGED_BRA E
                  WHERE E.EMPLID  = EE.EMPLID
                  AND   E.ESTABID = EE.ESTABID
                  AND   E.BALANCE_YEAR = EE.BALANCE_YEAR
                  AND   E.MONTHCD =  EE.MONTHCD
                  AND   E.ACERTO_IND_BRA = EE.ACERTO_IND_BRA
                  AND   E.CAGED_ESTAB_ID_BRA = EE.CAGED_ESTAB_ID_BRA)
ORDER BY EE.EMPLID, EE.CAGED_REASON_BRA
End-Select

!show '   #TotalFJob: ' #TotalFJob 
!show '   #TotalRein: ' #TotalRein 
!show '   #TotalTemp: ' #TotalTemp 
!show '   #TotalUnJu: ' #TotalUnJu 
!show '   #TotalJust: ' #TotalJust
End-Procedure Select-CAGED-Tbl

!**************************************
begin-procedure Select-National-Id
!show '** Select-National-Id **'
!**************************************
Let $PIS  = '00000000000'
Let $CTPS = '0000000'
Let $CTPSSerie = '000'

Begin-Select
A.NATIONAL_ID
A.NATIONAL_ID_TYPE

   Let $NationalId = Rtrim(&A.NATIONAL_ID_TYPE, ' ')
  
   Evaluate $NationalId 
   when = 'PIS'
     Let $PIS       = Rtrim(&A.NATIONAL_ID,' ')
     Let #PIS = $PIS
     Let $PIS = Edit(#PIS, '00000000000')
   when = 'CTPS'
     Let $CTPS      = Rtrim(&A.NATIONAL_ID,' ') 
   End-Evaluate
   
from PS_PERS_NID A
WHERE A.NATIONAL_ID_TYPE IN  ('PIS', 'CTPS')
AND A.EMPLID = $Emplid
AND A.COUNTRY = 'BRA' 
End-Select
End-Procedure Select-National-Id

!**************************************
begin-procedure Select-Disability
!show '** Select-Disability **'
!**************************************
Let $Disability  = '2'

Begin-Select
'X'
   Let $Disability = '1'
   
from PS_DISABILITY A
WHERE A.EMPLID = $Emplid
AND A.DISABLED = 'Y'
End-Select
!show '  $Disability: ' $Disability
End-Procedure Select-Disability

!**************************************
begin-procedure Get-Other-Ernings
!show '** Get-Other-Ernings **'
!**************************************
Let #OtherErns = 0
begin-select
SUM(A.CALC_RSLT_VAL) &CALC_RSLT_VAL

  Let #OtherErns = &CALC_RSLT_VAL
  !show 'Other er: ' #OtherErns

FROM PS_GP_RSLT_ED_VW A
    ,PS_GP_PYE_PRC_STAT T
WHERE A.EMPLID = $Emplid 
AND   A.EMPL_RCD = #EmplRcd
AND   A.EMPLID = T.EMPLID
AND   A.EMPL_RCD = T.EMPL_RCD
AND   A.CAL_RUN_ID = T.CAL_RUN_ID
AND   A.CAL_ID = T.CAL_ID
AND   A.GP_PAYGROUP = T.GP_PAYGROUP
AND   T.RSLT_VER_NUM = (SELECT MAX(T1.RSLT_VER_NUM)
                        FROM PS_GP_PYE_PRC_STAT T1
                        WHERE T1.EMPLID = T.EMPLID
                        AND   T1.EMPL_RCD = T.EMPL_RCD
                        AND   T1.CAL_RUN_ID = T.CAL_RUN_ID
                        AND   T1.CAL_ID = T.CAL_ID
                        AND   T1.GP_PAYGROUP = T.GP_PAYGROUP)
AND   T.RSLT_REV_NUM = (SELECT MAX(T1.RSLT_REV_NUM)
                        FROM PS_GP_PYE_PRC_STAT T1
                        WHERE T1.EMPLID = T.EMPLID
                        AND   T1.EMPL_RCD = T.EMPL_RCD
                        AND   T1.CAL_RUN_ID = T.CAL_RUN_ID
                        AND   T1.CAL_ID = T.CAL_ID
                        AND   T1.GP_PAYGROUP = T.GP_PAYGROUP)
AND   A.SLICE_END_DT  = (SELECT MAX(A1.SLICE_END_DT) 
                         FROM PS_GP_RSLT_ERN_DED A1
                         WHERE A1.EMPLID = A.EMPLID
                         AND   A1.EMPL_RCD = A.EMPL_RCD 
                         AND   A1.RSLT_SEG_NUM = A.RSLT_SEG_NUM
                         AND   A1.SLICE_END_DT  <= $EndDt)
AND   A.PIN_NUM IN      (SELECT B.GPBR_PIN_ERN_NUM 
                         FROM PS_GPBR_RC_CAGED B 
                         WHERE B.OPRID = $prcs_oprid
                         AND   B.RUN_CNTL_ID = $prcs_run_cntl_id)                       
end-select

Let #Salary = #Salary + #OtherErns  

end-procedure Get-Other-Ernings

!**************************************
begin-procedure Get-Other-Ernings-JBCD
!show '** Get-Other-Ernings **'
!**************************************
Let #OtherErns = 0
Let $FreqTarget = 'M'
begin-select
CMP.COMPRATE
CMP.COMP_FREQUENCY

   Let #Quantity = &CMP.COMPRATE
   Let $FreqOrig = &CMP.COMP_FREQUENCY
   Do Convert-Frequency-Qty
   Let #OtherErns = #OtherErns + #Quantity
   
FROM PS_JOB JB
, PS_COMPENSATION CMP
WHERE JB.EMPLID = $Emplid 
AND JB.EMPL_RCD = #EmplRcd
AND CMP.EMPLID = JB.EMPLID
AND CMP.EMPL_RCD = JB.EMPL_RCD
AND CMP.EFFDT = JB.EFFDT
AND CMP.EFFSEQ = JB.EFFSEQ
AND CMP.COMP_RATECD IN (SELECT CRB.COMP_RATECD 
                        FROM PS_CAGED_RATCD_BRA CRB
                        WHERE CRB.OPRID = $prcs_oprid
                        AND   CRB.RUN_CNTL_ID = $prcs_run_cntl_id)
AND JB.EFFDT = (SELECT MAX(JBA.EFFDT) 
                 FROM PS_JOB JBA
                 WHERE JBA.EMPLID = JB.EMPLID
                 AND JBA.EMPL_RCD = JB.EMPL_RCD)
AND JB.EFFSEQ = (SELECT MAX(JBA.EFFSEQ) 
                 FROM PS_JOB JBA
                 WHERE JBA.EMPLID = JB.EMPLID
                 AND JBA.EMPL_RCD = JB.EMPL_RCD
                 AND JBA.EFFDT = JB.EFFDT)
end-select

Let #Salary = #Salary + #OtherErns  

end-procedure Get-Other-Ernings-JBCD

!**************************************
begin-procedure Convert-Frequency-Qty
!VHOR OCT-21-2004 A function to convert a quentity from a frequency to another
!**************************************
Let #FreqFactor = 0
Let $FreqFound = 'N'

If $FreqOrig <> $FreqTarget
!Anualizar
Begin-select
FR.FREQ_ANNUAL_FACTOR
   Let #FreqFactor = &FR.FREQ_ANNUAL_FACTOR   
   Let $FreqFound = 'Y'
FROM PS_FREQUENCY_TBL FR
WHERE FR.EFFDT = (SELECT MAX(FRQ.EFFDT) FROM PS_FREQUENCY_TBL FRQ
                  WHERE FRQ.FREQUENCY_ID = $FreqOrig)
AND FR.EFF_STATUS = 'A'
AND FR.FREQUENCY_ID = $FreqOrig             
End-select

   If $FreqFound = 'Y' And #FreqFactor <> 0
      Let #Quantity = #Quantity * #FreqFactor
   Else
      show 'Warning...Convert-Frequency-Qty - Missing Frequency Origin: ' $FreqOrig ' for conversion'   
      Let #Quantity = 0
   End-If

If $FreqFound = 'Y'
   Let $FreqFound = 'N'
!DeAnualizar
Begin-select
AFR.FREQ_ANNUAL_FACTOR
   Let #FreqFactor = &AFR.FREQ_ANNUAL_FACTOR
   Let $FreqFound = 'Y'
FROM PS_FREQUENCY_TBL AFR
WHERE AFR.EFFDT = (SELECT MAX(FRQ.EFFDT) FROM PS_FREQUENCY_TBL FRQ
                  WHERE FRQ.FREQUENCY_ID = $FreqTarget)
AND AFR.EFF_STATUS = 'A'
AND AFR.FREQUENCY_ID = $FreqTarget
End-select
End-If

  If $FreqFound = 'Y' And #FreqFactor <> 0
     Let #Quantity = #Quantity / #FreqFactor
  Else
     show 'Warning...Convert-Frequency-Qty - Missing Frequency Target: ' $FreqTarget ' for conversion'   
     Let #Quantity = 0
  End-If

End-If
End-procedure Convert-Frequency-Qty

!**************************************
begin-procedure Create-Array-A
!show '*** Create-Array-A ***'
!**************************************

  Let #count = #count + 1
  Let #TotalRegA = #TotalRegA + 1
  Let #Sequence   = #Sequence + 1
  Let $Sequence   = EDIT(#Sequence,'00000')

  Put 'A' $EstabidResp $MediaType $Autorization $MonthYear $Alteration $Sequence $IdentType $NoIdent $Descr $Address -
      $Postal $CNAE $State $DDD $Phone $Ext 0 0 
  into RegA(#count) RegType Estabid MediaType Autorization YearMonth Alteration Sequence IdentType NoIdent Descr - 
                    Address Postal CNAE State DDD Phone Ext TotalRegB TotalRegC 

End-Procedure Create-Array-A

!**************************************
begin-procedure Create-Array-B
!show '** Create-Array-B **'
!**************************************

  Let #countB    = #countB + 1
  Let #TotalRegB = #TotalRegB + 1
 
  If $ACERTo = 'N'
     Let #Sequence  = #Sequence + 1
     Let $Sequence  = Edit(#Sequence,'00000')
  End-if
  
  Put 'B' $EstabidResp $Estabid $IdentType $NoIdent $Sequence $Declaration $AlterationB $Postal $CNAE  -
          $DescrB $Address $Barrio $State $EstabType #TotalEmpl #TotalEmplBeg #TotalEmplEnd
  into RegB(#countB) RegType EstabidRes Estabid IdentType NoIdent Sequence Declaration Alteration Postal CNAE -
                     Descr Address Barrio State EstabidType TotalEmpl TotalEmplBeg TotalEmplEnd
  
  Let $Declaration = ''
  Let $Postal      = ''
  Let $CNAE        = ''
  Let $Descr       = ''
  Let $Address     = ''          
                       
End-Procedure Create-Array-B

!**************************************
begin-procedure Create-Array-C
!show '** Create-Array-C **'
!**************************************
  Let #countC    = #countC + 1
  Let #TotalRegC = #TotalRegC + 1
  Let #TotalEmpl = #TotalEmpl + 1
  Let #Sequence  = #Sequence  + 1
  Let $Sequence  = EDIT(#Sequence,'00000')

  If $ACERTo = 'N'
     Put 'C' $EstabidResp $Estabid $Emplid $IdentType $NoIdent $Sequence $PIS $Sex $BirthDt $EducationLvl  -
          $CBO $Salary $HrsWork $HireDt $ActionType $ActionNm $TerminationDy $Name $CTPS $CTPSSerie - 
          $State $Actualization $MonthYear $Race $Disability $TerminationDt
     into RegC(#countC) RegType  EstabidRes Estabid Emplid IdentType NoIdent Sequence PIS Sex BirthDt EducationLvl -
                        CBO Salary HrsWork HireDT Action ActionNm TerminationDy Name CTPS CTPSSerie State  -
                        Actualization YearMonth Race Disability TerminationDt
  else
      Put 'X' $EstabidResp  $Estabid $Emplid $IdentType $NoIdent $Sequence $PIS $Sex $BirthDt $EducationLvl  -
          $CBO $Salary $HrsWork $HireDt $ActionType $ActionNm $TerminationDy $Name $CTPS $CTPSSerie - 
          $State $Actualization $MonthYear $Race $Disability $TerminationDt
     into RegC(#countC) RegType EstabidRes  Estabid Emplid IdentType NoIdent Sequence PIS Sex BirthDt EducationLvl -
                        CBO Salary HrsWork HireDT Action ActionNm TerminationDy Name CTPS CTPSSerie State  -
                        Actualization YearMonth Race Disability TerminationDt
  end-if
End-Procedure Create-Array-C

!**************************************
begin-procedure Load-Array
!show '*** Load-Array ***'
!**************************************
show 'Total Reg A: ' #TotalRegA
show 'Total Reg B: ' #TotalRegB
show 'Total Reg C: ' #TotalRegC
Let #ind  = 1
Let #indB  = 1
Let #indC  = 1

While #ind <= #TotalRegA
  Get $RegType $Estabid $MediaType $Autorization $MonthYear $Alteration $Sequence $IdentType $NoIdent -
      $Descr $Address $Postal $CNAEA $State $DDD $Phone $Ext #TotalRegB #TotalRegC from RegA(#ind)
      
      if #TotalRegB > 0 and
         #TotalRegC > 0
         Do Create-A-Register  
      end-if  
         
      Do Load-Array-B
       
  Add 1 to #ind
end-while
end-procedure Load-Array

!**************************************
begin-procedure Load-Array-B
!show '*** Load-Array-B ***'
!**************************************
Let #contB = 1 
While #contB <= #TotalRegB
  Get  $RegType $EstabidResp $Estabid $IdentType $NoIdent $Sequence $Declaration $AlterationB $Postal -
       $CNAE $DescrB $Address $Barrio $State $EstabType #TotalEmpl #TotalEmplBeg #TotalEmplEnd from RegB(#indB) 
       
       if #TotalEmpl > 0 and $ACERTo = 'N'
          Do Create-B-Register      
       end-if       
       
       Do Load-Array-C
       
  add 1 to #indB
  add 1 to #contB
End-while
End-procedure Load-Array-B

!**************************************
begin-procedure Load-Array-C
!show '** Load-Array-C **'
!**************************************
Let #ContC = 1 
  
While #contC <= #TotalEmpl
  
    get  $RegType $EstabidResp $Estabid $Emplid $IdentType $NoIdent $Sequence $PIS $Sex $BirthDt $EducationLvl  -
         $CBO $Salary $HrsWork $HireDT $ActionType $ActionNm $TerminationDy $Name $CTPS $CTPSSerie -
         $State $Actualization $MonthYear $Race $Disability $TerminationDt from RegC(#indC) 
          
    Do Create-C-Register 
    
    add 1 to #indC
    add 1 to #contC
End-while
   
end-procedure Load-Array-C

!**************************************
begin-procedure Print-Array
!show '** Print-Array **'
!**************************************
Let $CondCAGED = ' AND EE.BALANCE_YEAR = ' || $Year 
Let $CondCAGED = $CondCAGED || ' AND EE.MONTHCD = ' || '''' || $Month || ''''
Let $CondCAGED = $CondCAGED || ' AND   EE.ACERTO_IND_BRA =  ' || '''' || $ACERTO || ''''

Let #ind  = 1
Let #indB = 1
Let #indC = 1

While #ind <= #TotalRegA
      get $RegType $Estabid $MediaType $Autorization $MonthYear $Alteration $Sequence $IdentType $NoIdent -
          $Descr $Address $Postal $CNAEA $State $DDD $Phone $Ext #TotalRegB #TotalRegC from RegA(#ind)
     
      add 1 to #ind    
      
      if #TotalRegC > 0
         if #TotalRegB > 0
            Do Print-Array-B 
         end-if

         if $ACERTO = 'Y'
            Do Select-CAGED-Tbl
            Print ' '             (+2,{c2})  
            Do Print-Total
            New-page
         end-if
      end-if
end-while

If #TotalRegA = 0
   Print '>> Nenhum dado foi encontrado...'         (+2,{c2})  
   Show  '>> Nenhum dado foi encontrado...'          
end-if

end-procedure Print-Array

!**************************************
begin-procedure Print-Array-B
!show '** Print-Array-B **'
!**************************************
Let $CondCAGED2 = $CondCaged
Let $CondCAGED  = ''
Let #contB = 1

While #contB <= #TotalRegB
  Get  $RegType $EstabRes $Estabid $IdentType $NoIdent $Sequence $Declaration $AlterationB $Postal -
       $CNAE $DescrB $Address $Barrio $State $EstabType #TotalEmpl #TotalEmplBeg -
       #TotalEmplEnd from RegB(#indB) 
                       
       If #TotalEmpl > 0                   
          Do Print-Array-C
          Let $CondCAGED = ' AND EE.ESTABID = ' || '''' || $Estabid || '''' || $CondCAGED2
         
         if $ACERTO = 'N'
          
             Do Select-CAGED-Tbl 
             
             if $FirstCAGED <> 'Y'  
                Print 'Total de Empregados existentes no primeiro dia do mes:' (+2, 10)     
                Print #TotalEmplBeg         (,{c7})       edit '99999'
             else
                Print ''  (+2)    
             End-if
             
             Do Print-Total
             
             Print 'Total de Empregados existentes no ultimo dia do mes:' (+1, 10)
             Print #TotalEmplEnd         ( 0,{c7})     edit '99999'
     
             New-page
          end-if
        end-if
   add 1 to #indB
   add 1 to #contB
End-while
   
end-procedure Print-Array-B

!**************************************
begin-procedure Print-Total
!show '** Print-Total **'
!**************************************
       
  Print 'Primeiro Emprego:'            (+1, 10)                     !10
  Print #TotalFjob                     (  ,40)     edit '99999'
  Print 'Dispensa sem Justa Causa:'    (  ,{c7})                     !31
  Print #TotalUnJu                     (  ,100)    edit '99999'
  Print 'Reemprego:'                   (+1,10)                       !20
  Print #TotalRein                     (  ,40)     edit '99999'
  Print 'Dispensa Justa Causa:'        (  ,{c7})                     !32
  Print #TotalJust                     (  ,100)    edit '99999'
  Print 'Contrato Prazo Determinado:'  (+1, 10)
  Print #TotalTemp                     (  ,40)     edit '99999'
  Print 'A Pedido:'                    (  ,{c7}) 
  Print #TotalVolu                     (  ,100)    edit '99999'
  Print 'Reintegra??o:'                (+1, 10)
  Print #TotalRehi                     (  ,40)     edit '99999'
  Print 'Termino Prazo Determinado:'   (  ,{c7}) 
  Print #TotalEndT                     (  ,100)    edit '99999'
  Print 'Transfer?ncia de Entrada:'    (+1, 10)
  Print #TotalTran                     (  ,40)     edit '99999'
  Print 'Termino Contrato:'            (  ,{c7}) 
  Print #TotalEndC                     (  ,100)    edit '99999'
  Print 'Aposentado:'                  (+1,{c7})
  Print #TotalReta                     (  ,100)    edit '99999'
  Print 'Morte:'                       (+1,{c7}) 
  Print #TotalDeat                     (  ,100)    edit '99999'
  Print 'Transfer?ncia de Salida:'     (+1 ,{c7}) 
  Print #TotalTraO                     (  ,100)    edit '99999'
    
end-procedure Print-Total

!**************************************
begin-procedure Print-Array-C
!show '** Print-Array-C **'
!**************************************
Let #contC = 1

While #contC <= #TotalEmpl
       get  $RegType $EstabidResp $Estabid $Emplid $IdentType $NoIdent $Sequence $PIS $Sex $BirthDt $EducationLvl  -
            $CBO $Salary $HrsWork $HireDT $ActionType $ActionNm $TerminationDy $Name $CTPS $CTPSSerie $State -
            $Actualization $MonthYear $Race $Disability $TerminationDt from RegC(#indC)
      
            Let $HireDt = Rtrim($HireDt, ' ')
               
            Print $ActionNm    (+1,  5)
            Print $PIS         (  ,33)     Edit 'XXX.XXX.XX.XX-X'
            Print $Emplid      (  ,53) 
            Print $Name        (  ,65,30)
            If $HireDt <> ''
               Print $HireDt   (  ,100)     Edit 'XX/XX/XXXX'
            end-if
            If $TerminationDt <> ''
               Print $TerminationDt   (  ,115)   Edit 'XX/XX/XXXX'
            end-if
            add 1 to #indC
            add 1 to #contC
End-while 
       
end-procedure Print-Array-C

!**************************************
begin-procedure Create-A-Register
!show '*** Create-A-Register ***'
!**************************************
Let $Spaces = '  '
If  $ACERTO = 'Y'
  Let $TotalRegB = '     '
  Let $MonthYear = '      '
else
  Let $TotalRegB  = Edit(#TotalRegB, '00000')
end-if

Let $TotalRegC  = Edit(#TotalRegC, '00000')

WRITE 1 FROM 'A':1 $MediaType:1 $Autorization:7 $MonthYear:6 $Alteration:1 $Sequence:5 $IdentType:1 -
                   $NoIdent:14 $Descr:35 $Address:40 $Postal:8 $State:2 $DDD:4 $Phone:8 $Ext:5 $TotalRegB:5 -
                   $TotalRegC:5 $Spaces:2
                                    
End-Procedure Create-A-Register

!**************************************
begin-procedure Create-B-Register
!show '*** Create-B-Register ***'
!**************************************
Let $Spaces = '      '
Let $TotalEmplBeg  = Edit(#TotalEmplBeg, '00000')
  
WRITE 1 FROM 'B':1 $IdentType:1 $NoIdent:14 $Sequence:5 $Declaration:1 $AlterationB:1 $Postal:8 $CNAE:5 -
                   $DescrB:40 $Address:40 $Barrio:20 $State:2 $TotalEmplBeg:5 $EstabType:1 $Spaces:6
                                    
End-Procedure Create-B-Register

!**************************************
begin-procedure Create-C-Register
!show '** Create-C-Register **'
!**************************************
if $ACERTO = 'N'
   Let $Actualization = ' '
   Let $MonthYear = ' '
end-if

Let $Spaces = '                         '

if $ACERTo = 'N' 
    WRITE 1 FROM $RegType:1 $IdentType:1 $NoIdent:14 $Sequence:5 $PIS:11 $Sex:1 $BirthDt:8 $EducationLvl:1  -
!            $CBO:5 
             $Spaces:5 -
             $Salary:8 $HrsWork:2 $HireDT:8 $ActionType:2 $TerminationDy:2 $Name:40 $CTPS:7 -
             $CTPSSerie:3 $State:2 $Actualization:1 $MonthYear:6 $Race:1 $Disability:1 $CBO:6 -
             $Spaces:14
else
    WRITE 1 FROM $RegType:1 $IdentType:1 $NoIdent:14 $Sequence:5 $PIS:11 $Sex:1 $BirthDt:8 $EducationLvl:1  -
!            $CBO:5 
             $Spaces:5 -
             $Salary:8 $HrsWork:2 $HireDT:8 $ActionType:2 $TerminationDy:2 $Name:40 $CTPS:7 -
             $CTPSSerie:3 $State:2 $Actualization:1 $MonthYear:6 $Race:1 $Disability:1 $CBO:6 -
             $Spaces:14
end-if
End-Procedure Create-C-Register

!**************************************
begin-procedure Insert-CAGED-Tbl
!show '** Insert-CAGED-tbl **'
!show 'Year: ' $Year
!**************************************
!show $EstabidResp ' ' $Estabid ' ' $Emplid ' ' $Effdt ' ' $Action ' ' $ActionReason ' ' $ActionType ' ' $Year ' ' $Month


If #totalEmpl = 1 
if $ACERTO = 'N'
Begin-SQL
DELETE FROM PS_CAGED_BRA 
WHERE CAGED_ESTAB_ID_BRA = $EstabidResp
AND   ESTABID = $EstabId
AND   BALANCE_YEAR = #Year
AND   MONTHCD = $Month
End-SQL

else

Begin-SQl
DELETE FROM PS_CAGED_BRA 
WHERE CAGED_ESTAB_ID_BRA = $EstabidResp
AND   ESTABID = $EstabId
AND   BALANCE_YEAR = #Year
AND   MONTHCD = $Month
AND   ACERTO_IND_BRA = 'Y'
End-SQL
End-if
End-if

if $Actualization = '2'
Begin-SQL   
INSERT INTO PS_CAGED_BRA
(CAGED_ESTAB_ID_BRA
,ESTABID
,EMPLID
,EFFDT
,EMPL_RCD
,ACTION
,ACTION_REASON
,CAGED_REASON_BRA
,BALANCE_YEAR
,MONTHCD
,ACERTO_IND_BRA)
VALUES
($EstabidResp
,$Estabid
,$Emplid
,$Effdt
,#EmplRcd
,$Action
,$ActionReason
,$ActionType
,#Year
,$Month
,$ACERTO)
End-SQL
End-if

if $Actualization = '3' or 
   $Actualization = '1'
Begin-SQL   
UPDATE PS_CAGED_BRA
SET EFFDT = $Effdt
,ACTION   = $Action
,ACTION_REASON = $ActionReason
,ACERTO_IND_BRA = $ACERTO
,CAGED_REASON_BRA = $ActionType
WHERE CAGED_ESTAB_ID_BRA = $EstabidResp
AND   ESTABID = $Estabid
AND   EMPLID  = $Emplid
AND   BALANCE_YEAR = #Year
AND   MONTHCD = $Month
End-SQL
End-if
End-Procedure Insert-CAGED-tbl

!**************************************
begin-procedure Select-Payee-Parm
!show '** Select-Payee-Parm **'
!**************************************
Let $HrsWork = '00'
Let #Hours = 0
Begin-Select  
NN.GPBR_WEEKLY_HOURS
    
  Let #Hours  =  &NN.GPBR_WEEKLY_HOURS
  if #Hours > 0
     Let $HrsWork  =  Edit(#Hours, '00')
  end-if
  
FROM PS_GPBR_PAYEE_PARM NN
WHERE NN.EMPLID   = $Emplid
AND   NN.EMPL_RCD = #emplRcd
AND   NN.BGN_DT   = (SELECT MAX(N.BGN_DT) 
                     FROM PS_GPBR_PAYEE_PARM N
                     WHERE N.EMPLID = NN.EMPLID
                     AND   N.BGN_DT <=  $BeginDT)
End-Select
if $HrsWork = '00'
   Let $HrsWork = '00'
   show 'Warning...Weekly Hrs in Payee Parameters = 0  ' $Emplid
End-if
End-Procedure Select-Payee-Parm

!**************************************
begin-procedure Select-Payee-Parm-JBCD
!show '** Select-Payee-Parm-JBCD **'
!**************************************
Let $HrsWork = '00'
Let #Hours = 0
Let $FreqTarget = $FreqHrsTar
Let $FreqOrig = ''
Begin-Select  
JJB.STD_HOURS
JJB.STD_HRS_FREQUENCY

   Let $FreqOrig = &JJB.STD_HRS_FREQUENCY
   Let #Hours = &JJB.STD_HOURS
   
   Let #Quantity = #Hours
   Do Convert-Frequency-Qty
   Let #Hours = #Quantity 
   Let $HrsWork  =  Edit(#Hours, '00')
   
FROM PS_JOB JJB
WHERE JJB.EMPLID = $Emplid
AND JJB.EFFDT = (SELECT MAX(JJBA.EFFDT) 
                   FROM PS_JOB JJBA 
                   WHERE JJBA.EMPLID = JJB.EMPLID
                   AND JJBA.EMPL_RCD = JJB.EMPL_RCD)
AND JJB.EFFSEQ = (SELECT MAX(EFFSEQ)
                   FROM PS_JOB JJBA
                   WHERE JJBA.EMPLID = JJB.EMPLID
                   AND JJBA.EMPL_RCD = JJB.EMPL_RCD
                   AND JJBA.EFFDT = JJB.EFFDT)
End-Select

If $HrsWork = '00'
   Let $HrsWork = '00'
   show 'Warning...Weekly Hrs in Payee Parameters = 0  Empid: ' $Emplid
End-if
End-Procedure Select-Payee-Parm-JBCD

!**************************************
begin-procedure Select-Payee-Parm-Effdt
!show '** Select-Payee-Parm-Effdt **'
!**************************************
Let $SearchAcerto  = 'N'
Let $HrsWork = '00'
Let #Hours = 0

Begin-Select  
PY1.GPBR_WEEKLY_HOURS
PY1.BGN_DT

  Let $SearchAcerto     = 'Y'
  Let #Hours            =  &NN.GPBR_WEEKLY_HOURS
 
  Do convert-to-dtu-date(&PY1.BGN_DT, $SearchBeginDt)
  Do convert-from-dtu-date($SearchBeginDt, $SearchBeginDt)

  if #Hours > 0
     Let $HrsWork  =  Edit(#Hours, '00')
  end-if
  
FROM PS_GPBR_PAYEE_PARM PY1
WHERE PY1.EMPLID = $Emplid 
AND   PY1.BGN_DT = (SELECT MAX(N.BGN_DT) 
                     FROM PS_GPBR_PAYEE_PARM N
                     WHERE N.EMPLID = PY1.EMPLID
                     AND   N.BGN_DT BETWEEN  $BeginDT AND $EndDT)
End-Select

If $SearchAcerto     = 'Y'
Begin-Select  
PY2.GPBR_WEEKLY_HOURS  

  Let #Hours2   =  &PY2.GPBR_WEEKLY_HOURS

  If #Hours <> #Hours2
     Let $CreateAcerto     = 'Y'
  end-if

FROM PS_GPBR_PAYEE_PARM PY2
WHERE PY2.EMPLID = $Emplid
AND   PY2.BGN_DT = (SELECT MAX(N.BGN_DT) 
                     FROM PS_GPBR_PAYEE_PARM N
                     WHERE N.EMPLID = PY2.EMPLID
                     AND   N.BGN_DT < $SearchBeginDt)
End-Select
end-if

!show '  $CreateACerto: ' $CreateACerto
End-Procedure Select-Payee-Parm-Effdt

!**************************************
begin-procedure Select-Payee-Parm-Effdt-JBCD
!show '** Select-Payee-Parm-Effdt-JBCD **'
!**************************************
Let $SearchAcerto  = 'N'
Let $HrsWork = '00'
Let #Hours = 0

Begin-Select  
KJB.EFFDT
KJB.STD_HOURS
KJB.STD_HRS_FREQUENCY

  Let $SearchAcerto     = 'Y'
  Let #Hours            =  &KJB.STD_HOURS
  Do convert-to-dtu-date(&PY1.BGN_DT, $SearchBeginDt)
  Do convert-from-dtu-date($SearchBeginDt, $SearchBeginDt)
  if #Hours > 0
     Let $HrsWork  =  Edit(#Hours, '00')
  end-if

FROM PS_JOB KJB
WHERE KJB.EMPLID = $Emplid
AND
KJB.EFFDT = (SELECT MAX(KJBA.EFFDT) 
                   FROM PS_JOB KJBA 
                   WHERE KJBA.EMPLID = KJB.EMPLID
                   AND KJBA.EMPL_RCD = KJB.EMPL_RCD
                   AND KJBA.EFFDT BETWEEN $BeginDT AND $EndDT)
AND KJB.EFFSEQ = (SELECT MAX(KJBA.EFFSEQ)
                   FROM PS_JOB KJBA
                   WHERE KJBA.EMPLID = KJB.EMPLID
                   AND KJBA.EMPL_RCD = KJB.EMPL_RCD
                   AND KJBA.EFFDT = KJB.EFFDT)

End-Select

If $SearchAcerto     = 'Y'
Begin-Select  
AKJB.EFFDT
AKJB.STD_HOURS
AKJB.STD_HRS_FREQUENCY

  Let #Hours2   =  &AKJB.STD_HOURS
  If #Hours <> #Hours2
     Let $CreateAcerto     = 'Y'
  end-if

FROM PS_JOB AKJB
WHERE AKJB.EMPLID = $Emplid
AND
AKJB.EFFDT = (SELECT MAX(KJBA.EFFDT) 
                   FROM PS_JOB KJBA 
                   WHERE KJBA.EMPLID = AKJB.EMPLID
                   AND KJBA.EMPL_RCD = AKJB.EMPL_RCD
                   AND KJBA.EFFDT < $SearchBeginDt)
AND AKJB.EFFSEQ = (SELECT MAX(KJBA.EFFSEQ)
                   FROM PS_JOB KJBA
                   WHERE KJBA.EMPLID = AKJB.EMPLID
                   AND KJBA.EMPL_RCD = AKJB.EMPL_RCD
                   AND KJBA.EFFDT = AKJB.EFFDT)
End-Select
end-if
!show '  $CreateACerto: ' $CreateACerto
End-Procedure Select-Payee-Parm-Effdt-JBCD

!**************************************
begin-procedure Fill-Leading
!show '*** Fill-Leading ***'
!**************************************
    Let $BeginField = RTRIM($BeginField,' ')
    Let $BeginField = LTRIM($BeginField,' ')
    Let #LenField   = LENGTH($BeginField)
    Let #SPACES     = #Long - #LenField
    Let #Conter     = 1
    Let $EndField   = ''
    
    WHILE #Conter <= #SPACES
        LET $EndField = $EndField || ' '
        ADD 1 To #Conter
    END-WHILE

    Let $EndField = $BeginField || $EndField
    
End-procedure Fill-Leading

!**************************************
begin-procedure Format-Numbers
!show '** Format-Numbers **'
!**************************************
    Let $EndField   = ''
    Let $BeginField = RTRIM($BeginField,' ')
    Let $BeginField = LTRIM($BeginField,' ')
    Let #LenField   = LENGTH($BeginField)
    Let #SPACES     = #Long - #LenField
    Let #Conter = 1
    
    WHILE #Conter <= #SPACES
        LET $EndField = $EndField || '0'
        ADD 1 To #Conter
    END-WHILE

    Let $EndField =  $EndField || $BeginField 
    
End-procedure Format-Numbers

!**************************************
begin-procedure Close-CAGED
!show '** Close-CAGED **'
!**************************************

Close 1

End-Procedure Close-CAGED

!**************************************
#Include 'reset.sqc'     !Reset Printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'datemath.sqc'
#include 'hrsecty.sqc'   !Get SQR Security parameters
