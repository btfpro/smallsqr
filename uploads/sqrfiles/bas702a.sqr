!***********************************************************************
! BAS702A: Benefit Program (Options) -Benefits Administration
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/08/28:01:59:25                                 !
!       $Release:  HR9                                                 !
!      $Revision:  105                                                 !
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'  !Set environment

Begin-Setup
  #Include 'ptpsl177.sqc'
End-Setup

#define  MAX_LINES   56     !Maximum print lines for landscape mode

!**********************************
Begin-Program
!**********************************

  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Process-Main

  display 'Report Ended at: ' noline
  do display-time

  do Reset
  do StdAPI-Term

End-Program

!**********************************
Begin-Procedure Init-Report
!**********************************

  do Init-DateTime
  do Get-Current-DateTime
  do Init-Number
  do StdAPI-Init

  let $ReportID    = 'BAS702A'
  do Get-Report-Language
  move $BAS702A-ReportTitle TO $ReportTitle
  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  let #CurRptLine    = {MAX_LINES} + 1
  let $FirstPageFlag = 'YES'

  if IsBlank($prcs_process_instance)
    do Ask-Values
  else
    do Get-Values
  end-if

  do Set-Tbl-Lookup

End-Procedure

!***************************************
Begin-Procedure Ask-Values
!***************************************

  do Ask-As-Of-Date
  !We will need to manipulate $AsOfDate to control other std procedures such
  !as Read-Translate-Table, Get-Benefit-Name, and Get-Deduction-Name.
  !Therefore we will copy this into $UserAsOfDate for safekeeping...
  let $UserAsOfDate = $AsOfDate

  do Ask-Benefit-Program

End-Procedure

!***************************************
Begin-Procedure Get-Values
!***************************************

  do Select-Parameters
  do Get-As-Of-Date
  let $UserAsOfDate = $AsOfDate

  do Get-Benefit-Program

End-Procedure

!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BAS702A program IDS
do Init_Report_Translation($ReportID, $Language_Cd)
do Append_Report_Translation('BEN1')

do Get_Field_Information ('BAS702A', 'REPORT_TITLE',      $BAS702A-ReportTitle,        #CW)
do Get_Field_Information ('BAS702A', 'BEN_ADMIN_INFO',    $BAS702A-BEN-ADMIN-INFO,     #CW)
do Get_Field_Information ('BAS702A', 'FSA_ADMIN_INFO',    $BAS702A-FSA-ADMIN-INFO,     #CW)
do Get_Field_Information ('BAS702A', 'OTHER_INFO',        $BAS702A-OTHER-INFO,         #CW)
do Get_Field_Information ('BAS702A', 'APPLY_DEF_AFT',     $BAS702A-APPLY-DEF-AFT,      #CW)
do Get_Field_Information ('BAS702A', 'DAYS_NO_ENR',       $BAS702A-DAYS-NO-ENR,        #CW)
do Get_Field_Information ('BAS702A', 'FSA_ADMIN_RUN_ID',  $BAS702A-FSA-ADMIN-RUN-ID,   #CW)
do Get_Field_Information ('BAS702A', 'FMLA_PLAN_ID',      $BAS702A-FMLA-PLAN-ID,       #CW)
do Get_Field_Information ('BAS702A', 'APPLY_EX_CREDITS',  $BAS702A-APPLY-EX-CREDITS,   #CW)
do Get_Field_Information ('BAS702A', 'MIN_CHECK_AMT',     $BAS702A-MIN-CHECK-AMT,      #CW)
do Get_Field_Information ('BAS702A', 'PGM_CURR_CD',       $BAS702A-PGM-CURR-CD,        #CW)
do Get_Field_Information ('BAS702A', 'MAX_ANNUAL_PLDG',   $BAS702A-MAX-ANNUAL-PLDG,    #CW)
do Get_Field_Information ('BAS702A', 'COBRA_SURCHARGE',   $BAS702A-COBRA-SURCHARGE,    #CW)
do Get_Field_Information ('BAS702A', 'DISABLED_SURCHARGE',$BAS702A-DISABLED-SURCHARGE, #CW)
do Get_Field_Information ('BAS702A', 'DEP_AGE_LIMIT',     $BAS702A-DEP-AGE-LIMIT,      #CW)
do Get_Field_Information ('BAS702A', 'STU_AGE_LIMIT',     $BAS702A-STU-AGE-LIMIT,      #CW)
do Get_Field_Information ('BAS702A', 'MARR_DEP_ALLOWED',  $BAS702A-MARR-DEP-ALLOWED,   #CW)
do Get_Field_Information ('BAS702A', 'EXCL_DISBLD_DEP',   $BAS702A-EXCL-DISBLD-DEP,    #CW)
do Get_Field_Information ('BAS702A', 'PGM_DEF_AS_OF',     $BAS702A-PGM-DEF-AS-OF,      #CW)
do Get_Field_Information ('BAS702A', 'BEN_DED_PGM',       $BAS702A-BEN-DED-PGM,        #CW)
do Get_Field_Information ('BAS702A', 'PGM_TYPE',          $BAS702A-PGM-TYPE,           #CW)
do Get_Field_Information ('BAS702A', 'PGM_EFFDT',         $BAS702A-PGM-EFFDT,          #CW)
do Get_Field_Information ('BAS702A', 'PLAN_INFO',         $BAS702A-PLAN-INFO,          #CW)
do Get_Field_Information ('BAS702A', 'ANNUAL_CONTR_LMT',  $BAS702A-ANNUAL-CONTR-LMT,   #CW)
do Get_Field_Information ('BAS702A', 'PLN_CHG',           $BAS702A-PLN-CHG,            #CW)
do Get_Field_Information ('BAS702A', 'WAIVE_CVRG',        $BAS702A-WAIVE-CVRG,         #CW)
do Get_Field_Information ('BAS702A', 'RESTR',             $BAS702A-RESTR,              #CW)
do Get_Field_Information ('BAS702A', 'OPTN_INFO',         $BAS702A-OPTN-INFO,          #CW)
do Get_Field_Information ('BAS702A', 'DISPL_DFLT',        $BAS702A-DISPL-DFLT,         #CW)
do Get_Field_Information ('BAS702A', 'OPTN',              $BAS702A-OPTN,               #CW)
do Get_Field_Information ('BAS702A', 'SELF_SVC_INFO',     $BAS702A-SELF-SVC-INFO,      #CW)
do Get_Field_Information ('BAS702A', 'SHOW_CREDITS',      $BAS702A-SHOW-CREDITS,       #CW)
do Get_Field_Information ('BAS702A', 'COST_FREQ',         $BAS702A-COST-FREQ,          #CW)
do Get_Field_Information ('BAS702A', 'HANDBOOK_URL',      $BAS702A-HANDBOOK-URL,       #CW)
do Get_Field_Information ('BAS702A', 'SHOW_PLAN',         $BAS702A-SHOW-PLAN,          #CW)
do Get_Field_Information ('BAS702A', 'COLLECT',           $BAS702A-COLLECT,            #CW)
do Get_Field_Information ('BAS702A', 'DEPBEN',            $BAS702A-DEPBEN,             #CW)
do Get_Field_Information ('BAS702A', 'FUNDS',             $BAS702A-FUNDS,              #CW)

do Get_Field_Information ('BEN1', 'PLAN_TYPE',         $BEN1-PLAN-TYPE,  #CW)
do Get_Field_Information ('BEN1', 'PLAN',              $BEN1-PLAN,       #CW)
do Get_Field_Information ('BEN1', 'DISPLAY',           $BEN1-DISPLAY,    #CW)
do Get_Field_Information ('BEN1', 'COBRA',             $BEN1-COBRA,      #CW)
do Get_Field_Information ('BEN1', 'EVENT',             $BEN1-EVENT,      #CW)
do Get_Field_Information ('BEN1', 'RULES',             $BEN1-RULES,      #CW)
do Get_Field_Information ('BEN1', 'MIN',               $BEN1-MIN,        #CW)
do Get_Field_Information ('BEN1', 'MAX',               $BEN1-MAX,        #CW)
do Get_Field_Information ('BEN1', 'SEQ',               $BEN1-SEQ,        #CW)
do Get_Field_Information ('BEN1', 'DFLT',              $BEN1-DFLT,       #CW)
do Get_Field_Information ('BEN1', 'ELIG',              $BEN1-ELIG,       #CW)
do Get_Field_Information ('BEN1', 'LOCTN',             $BEN1-LOCTN,      #CW)
do Get_Field_Information ('BEN1', 'OPTN_TYPE',         $BEN1-OPTN-TYPE,  #CW)
do Get_Field_Information ('BEN1', 'OPTCD',             $BEN1-OPTCD,      #CW)
do Get_Field_Information ('BEN1', 'BEN_PLAN2',         $BEN1-BEN-PLAN2,  #CW)
do Get_Field_Information ('BEN1', 'DESCR',             $BEN1-DESCR,      #CW)
do Get_Field_Information ('BEN1', 'COVER_CD2',         $BEN1-COVER-CD2,  #CW)
do Get_Field_Information ('BEN1', 'LEVEL',             $BEN1-LEVEL,      #CW)
do Get_Field_Information ('BEN1', 'DED_CD2',           $BEN1-DED-CD2,    #CW)
do Get_Field_Information ('BEN1', 'TABLE',             $BEN1-TABLE,      #CW)

End-Procedure

!***************************************
Begin-Procedure Ask-Benefit-Program
!***************************************

  input $Benefit_Program -
  'Enter Benefit Program to report (Leave blank for ALL Programs)'
  let $Benefit_Program = RTRIM(UPPER($Benefit_Program), ' ')

  if IsBlank($Benefit_Program)
    let $Benefit_Program = '%'
  end-if

End-Procedure

!******************************************************
Begin-Procedure Make_Where_For_XLAT($KeyField, :$Where)
!******************************************************

  let $Where = 'FIELDNAME=''' || $KeyField || ''' '

  if Not IsBlank($_Language_Cd) And RTrim($_Language_Cd,' ') <> RTrim($_SQR_Default_Language, ' ')

    let $Where = $Where || 'And FIELDVALUE Not In '
    let $Where = $Where || '(Select FIELDVALUE '
    let $Where = $Where || ' From PSXLATITEMLANG '
    let $Where = $Where || ' Where FIELDNAME=''' || $KeyField || ''' '
    let $Where = $Where || ' And LANGUAGE_CD=''' || $_Language_Cd || ''') '
    let $Where = $Where || 'UNION '
    let $Where = $Where || 'Select Distinct FIELDVALUE, XLATSHORTNAME '
    let $Where = $Where || 'From PSXLATITEMLANG '
    let $Where = $Where || 'Where FIELDNAME=''' || $KeyField || ''' '
    let $Where = $Where || 'And LANGUAGE_CD=''' || $_Language_Cd || ''' '

  end-if

End-Procedure

!***************************************
Begin-Procedure Set-Tbl-Lookup
!***************************************

  do Make_Where_For_XLAT('PLAN_TYPE', $load_where)
  load-lookup name=TblPlanTypes
              rows=50
              table=PSXLATITEM
              key=FIELDVALUE
              return_value=XLATSHORTNAME
              where=$load_where
              quiet

  do Make_Where_For_XLAT('OPTION_TYPE', $load_where)
  load-lookup name=TblOptTypes
              rows=10
              table=PSXLATITEM
              key=FIELDVALUE
              return_value=XLATSHORTNAME
              where=$load_where
              quiet

  do Make_Where_For_XLAT('WAIVE_COVERAGE', $load_where)
  load-lookup name=TblWaiveCodes
              rows=50
              table=PSXLATITEM
              key=FIELDVALUE
              return_value=XLATSHORTNAME
              where=$load_where
              quiet

End-Procedure

!***************************************
Begin-Procedure Print-Main-Heading
!***************************************

  if ($FirstPageFlag <> 'YES')
    new-page
  end-if

  move $BAS702A-ReportTitle to $ReportTitle
#Include 'stdhdgtr.sqc'     !Standard Report header
let #CurRptLine = 5

!***  'Program Definition as of: '
  print $BAS702A-PGM-DEF-AS-OF              (+1,1)
  do Format-DateTime($UserAsOfDate, $OutDt, {DEFDATE}, '', '')
  print $OutDt                              ()

!***  'Benefit/Deduction Program: '
  print $BAS702A-BEN-DED-PGM                (+2,1)
  print &P.BENEFIT_PROGRAM                  (0,0,3)
  print ' - '                               ()
  print $BenefitProgramName                 ()
  print '('                                 (0,+2)
!***  'Program Type: '
  print  $BAS702A-PGM-TYPE                  ()
  print $ProgramType                        ()
  print ')'                                 ()

!***  'Program Effective Date:'
  print $BAS702A-PGM-EFFDT                  (+1,1)
  print $ProgramEffDt                       (0,29)

  add 5 to #CurRptLine
  let $FirstPageFlag    = 'NO'
  let $PrintPlanHdrFlag = 'YES'

End-Procedure

!***************************************
Begin-Procedure Print-Program-Info
!***************************************

  print '---------- '                               (+2,5)
!***  'Benefits Administration Information'
  print $BAS702A-Ben-Admin-Info                     (0,0,35)
  print ' ----------'                               ()
  print '--------- '                                (0,72)
!***  'FSA Administration Information'
  print $BAS702A-FSA-Admin-Info                     (0,0,30)
  print ' ----------'                               ()
  print '------------ '                             (0,133)
!***  'Other Information'
  print $BAS702A-Other-Info                         (0,0,17)
  print ' ------------'                             ()
  print '-------- '                                 (+3,133)
!***  'Self Service Configuration'
  print $BAS702A-Self-Svc-Info                      (0,0,26)
  print ' -------'                                  ()
  print ''                                          (-3,0)

!***  'Apply Defaults After'
  print $BAS702A-APPLY-DEF-AFT                      (+1,5,20)
  print &P.DFLT_EXPIRATION_DD                       (0,0,3) edit 999
!***  'Days if no Enrollment Received'
  print $BAS702A-DAYS-NO-ENR                        (0,0,31)

!***  'FSA Admin Run ID'
  print $BAS702A-FSA-ADMIN-RUN-ID                   (0,72,22)
  print &P.FSA_RUN_ID                               (0,95,3)
  print ' - '                                       ()
  print &F.DESCR                                    (0,0,22)
!***  'FMLA Plan ID'
  print $BAS702A-FMLA-PLAN-ID                       (0,133,14)
  print &P.FMLA_PLAN_ID                             (0,0,3)
  print ' - '                                       ()
  print &L.DESCR                                    (0,0,20)

!***  'Apply Excess Credits to'
  print $BAS702A-Apply-Ex-Credits                   (+1,5,25)
  print &P.DFLT_CREDIT_RLLOVR                       (0,31,1)
  print ' - '                                       ()
  print $DfltCreditRllovr                           ()

!***  'Program Currency Code'
  print $BAS702A-PGM-CURR-CD                        (+1,5,22)
  print &P.CURRENCY_CD                              (0,31)
!***  'Maximum Annual Pledge'
  print $BAS702A-MAX-ANNUAL-PLDG                    (0,72,22)
  print $FSA_MaxAnnlPldg                            (0,95,10)

!***  'COBRA Surcharge'
  print $BAS702A-COBRA-SURCHARGE                    (+1,5,16)
  print &P.COBRA_SURCHARGE                          (0,31) edit 99
!***  'Disabled Surcharge'
  print $BAS702A-DISABLED-SURCHARGE                 (0,40,19)
  print &P.Cobra_Disabl_Surcg                       (0,61) edit 99
!***  'Show Credits'
  print $BAS702A-SHOW-CREDITS                       (0,133,17)
  print &P.SHOW_CREDIT                              (0,0,25)

!***  'Dependent Age Limit'
  print $BAS702A-DEP-AGE-LIMIT                      (+1,5,20)
  print &P.Dep_Age_Limit                            (0,31) edit 99
!***  'Student Age Limit'
  print $BAS702A-STU-AGE-LIMIT                      (0,40,18)
  print &P.Student_Age_limit                        (0,61) edit 99
!***  'Cost Frequency'
  print $BAS702A-COST-FREQ                          (0,133,17)
  print &P.COST_FREQUENCY                           (0,0,25)

!***  'Married Dependents Allowed in Plan'
  print $BAS702A-MARR-DEP-ALLOWED                   (+1,5,43)
  print &P.DEPENDENT_MARRIAGE                       ()
!***  'Handbook URL'
  print $BAS702A-HANDBOOK-URL                       (0,133,15)
  print ':'                                         ()
  print &P.HANDBOOK_URL_ID                          (0,+1,25)

!***  'Exclude Disabled Dependent from Age Limit'
  print $BAS702A-EXCL-DISBLD-DEP                    (+1,5,43)
  print &P.EXCL_DISABLED_AGE                        ()

  add 8 to #CurRptLine

End-Procedure

!***************************************
Begin-Procedure Process-Main
!***************************************


  let $Where_Clause = ''
  let $Quote = ''''

  Move ' P.BENEFIT_PROGRAM LIKE ' to $Where_Clause

  if ($Benefit_Program <> '%')
    #ifdef DB2ALL
      Move '' to $Where_Clause
      Concat ' P.BENEFIT_PROGRAM = ' with $Where_Clause
    #endif
  End-if
  Concat $Quote with $Where_Clause
  Concat $Benefit_Program with $Where_Clause
  Concat $Quote with $Where_Clause
 
Begin-Select

P.BENEFIT_PROGRAM
P.EFFDT
  do Format-DateTime(&P.EFFDT, $ProgramEffDt, {DEFDATE}, '', '')
  !This sets the effective date for fetching from PSXLATITEM and other
  !supporting tables...
  let $AsOfDate = &P.EFFDT
P.DESCR
  let $BenefitProgramName = RTRIM(&P.DESCR, ' ')
  move &P.BENEFIT_PROGRAM    to $BenProgram
  move &P.EFFDT              to $EffDate
  do Get-Benefit-Program-Name-Lang

P.PROGRAM_TYPE
  move 'PROGRAM_TYPE'  to $FieldName
  move &P.PROGRAM_TYPE to $FieldValue
  do Read-Translate-Table
  let $ProgramType = RTRIM($XlatShortName, ' ')
P.FSA_MAX_ANNL_PLDG
  do Format-Number(&P.FSA_MAX_ANNL_PLDG, $FSA_MaxAnnlPldg, '$999999.99')
P.FSA_RUN_ID
  do Get-FSA-Run-ID-Name
P.CURRENCY_CD
P.DFLT_CREDIT_RLLOVR
  move 'DFLT_CREDIT_RLLOVR'  to $FieldName
  move &P.DFLT_CREDIT_RLLOVR to $FieldValue
  do Read-Translate-Table
  move $XlatShortName to $DfltCreditRllovr
P.DFLT_EXPIRATION_DD
P.COBRA_SURCHARGE
P.COBRA_DISABL_SURCG
P.DEP_AGE_LIMIT
P.STUDENT_AGE_LIMIT
P.DEPENDENT_MARRIAGE
P.EXCL_DISABLED_AGE
P.FMLA_PLAN_ID
  do Get-FMLA-Plan-Name
P.SHOW_CREDIT
P.COST_FREQUENCY
P.HANDBOOK_URL_ID

  do Print-Main-Heading
  do Print-Program-Info
  do Process-Plans

FROM  PS_BEN_DEFN_PGM P

WHERE [$Where_Clause]
  AND P.EFF_STATUS = 'A'
  AND P.EFFDT      = (SELECT MAX(EFFDT)
                        FROM PS_BEN_DEFN_PGM
                       WHERE BENEFIT_PROGRAM = P.BENEFIT_PROGRAM
                         AND EFF_STATUS      = 'A'
                         AND EFFDT          <= $UserAsOfDate)

ORDER BY P.BENEFIT_PROGRAM ASC

End-Select
End-Procedure

!***************************************
Begin-Procedure Print-Plan-Option-Heading
!***************************************

  print '|---------------------------------------------------------' (+2,1)
!***  'Plan Information'
  print  $BAS702A-PLAN-INFO                               (0,+1,16)
  print '---------------------------------------|'  (0,+1)
  print '|'                                               (+1,1)
  print ' '                                               (0,0,13)
  print $BEN1-DISPLAY                                     (0,+1,8)
  print ' '                                               (0,+1,12)
!***  'Plan Change'
  print $BAS702A-PLN-CHG                                  (0,+1,11)
!***  'Event COBRA'
  print $BEN1-EVENT                                       (0,+1,5)
  print $BEN1-COBRA                                       (0,+1,5)
!***  'Collect'
  print '|'                                               (0,+1)
  print $BAS702A-COLLECT                                  (0,+1,7)
  print $BAS702A-COLLECT                                  (0,+1,7)
!***  'Show NQ'
  print $BAS702A-SHOW-PLAN                                (0,+1,4)
  print $BAS702A-NQ-PLAN                                  (0,+1,4)
  print ' '                                               (0,+1,26)
  print '|'                                               ()

  print '|'                                               (+1,1)
!***  'Plan-Type'
  print  $BEN1-PLAN-TYPE                                  (0,0,13)
!***  'Sequence'
  print $BEN1-SEQ                                         (0,+1,8)
!***  'Waive-Cvrg'
  print $BAS702A-WAIVE-CVRG                               (0,+1,12)
!***  'Restriction Rules Plan'
  print $BAS702A-RESTR                                    (0,+1,11)
  print $BEN1-RULES                                       (0,+1,5)
  print $BEN1-PLAN                                        (0,+1,5)
!***  'DepBen Funds'
  print '|'                                               (0,+1)
  print $BAS702A-DEPBEN                                   (0,+1,7)
  print $BAS702A-FUNDS                                    (0,+1,7)
!***  'Plan Plan'
  print $BEN1-PLAN                                        (0,+1,4)
  print $BEN1-PLAN                                        (0,+1,4)
!***  'Handbook URL ID'
  print $BAS702A-HANDBOOK-URL                             (0,+1,26)
  print '|'                                               ()

  print '|============= ======== =======================' (+1,1)
  print ' =========== '           ()
  print ' | ======= ======= ==== ==== ==========================|' ()

  print '|---------------------------------------------------'      (+2,54)

!***  'Option Information'
  print $BAS702A-OPTN-INFO                                (0,107,18)
  print '--------------------------------------------------|'       (0,126)

  print '|'                                                         (+1,54)
!***  'Display  Dflt'
  print  $BEN1-DISPLAY                                     (0,132,8)
  print  $BEN1-DFLT                                        (0,141,5)

!***  'Elig  Loctn'
  print  $BEN1-ELIG                                        (0,165,5)
  print  $BEN1-LOCTN                                       (0,171,5)
  print '|'                                                (0,176)
  print '|'                                                (+1,54)
!***  'Option-Type'
  print $BEN1-OPTN-TYPE                                    (0,55,12)

!***  'OptCd'
  print $BEN1-OPTCD                                        (0,68,5)
!***  'Benefit-Plan'
  print $BEN1-BEN-PLAN2                                    (0,74,12)
!***  'Description'
  print $BEN1-DESCR                                        (0,88,23)
!***  'Coverage-Code'
  print $BEN1-COVER-CD2                                    (0,112,13)
!***  'Level'
  print $BEN1-LEVEL                                        (0,126,5)
!***  'Sequence'
  print $BEN1-SEQ                                          (0,132,8)
!***  'Optn?'
  print $BAS702A-OPTN                                      (0,141,5)

!***  'Deduction-Code'
  print $BEN1-DED-CD2                                      (0,147,17)
!***  'Rules Table'
  print $BEN1-RULES                                        (0,165,5)
  print $BEN1-TABLE                                        (0,171,5)
  print '|'                                                (0,176)
  print '|============ ===== =====================================' (+1,54)
  print ' ============= ===== ======== ===== ================= '    ()
  print '===== =====|'                                              ()

  add 10 to #CurRptLine
  let $PrintPlanHdrFlag = 'NO'

End-Procedure

!***************************************
Begin-Procedure Print-Plan-Info
!***************************************

  if (#CurRptLine >= {MAX_LINES}-3)
    do Print-Main-Heading
  end-if

  if ($PrintPlanHdrFlag = 'YES')
    do Print-Plan-Option-Heading
  end-if

  print &PL.PLAN_TYPE             (+2,2,2)
  print '-'                       ()
  print $PlanType                 (0,0,10)
  print &PL.DISPLAY_PLN_SEQ       (0,+4,2)
  print &PL.WAIVE_COVERAGE        (0,+4,1)
  print '-'                       ()
  print $WaiveCoverage            (0,0,10)
  print &PL.RESTRICT_ENTRY_MM     (0,+1,2) edit 99
  print ' months'                 ()
  print &PL.EVENT_RULES_ID        (0,+3,4)
  print &PL.COBRA_PLAN            (0,+4,1)

  print &PL.COLLECT_DEPBEN        (0,+8,4)
  print &PL.COLLECT_FUNDS         (0,+3,4)
  print &PL.SHOW_PLAN_TYPE        (0,+2,4)
  print &PL.HANDBOOK_URL_ID       (0,+1,25)

  print ' '      (+1,1)
  add 3 to #CurRptLine
End-Procedure

!***************************************
Begin-Procedure Process-Plans
!***************************************

Begin-Select

PL.BENEFIT_PROGRAM
PL.EFFDT
PL.PLAN_TYPE
  let $LookupVal = &PL.PLAN_TYPE
#ifdef MICROSOFT
  let $LookupVal = Edit(&PL.PLAN_TYPE, 'XXXX')
#endif
#ifdef DB2ALL
  if Not (#UNICODE_ENABLED)
    let $LookupVal = Edit(&PL.PLAN_TYPE, 'XXXX')
  end-if
#endif
  LOOKUP TBLPLANTYPES $LookupVal $PlanType
PL.DISPLAY_PLN_SEQ
PL.WAIVE_COVERAGE
  let $LookupVal = &PL.WAIVE_COVERAGE
#ifdef MICROSOFT
  let $LookupVal = Edit(&PL.WAIVE_COVERAGE, 'XXXX')
#endif
#ifdef DB2ALL
  if Not (#UNICODE_ENABLED)
    let $LookupVal = Edit(&PL.WAIVE_COVERAGE, 'XXXX')
  end-if
#endif
  LOOKUP TBLWAIVECODES $LookupVal $WaiveCoverage
PL.RESTRICT_ENTRY_MM
PL.EVENT_RULES_ID
PL.COBRA_PLAN
PL.COLLECT_DEPBEN
PL.COLLECT_FUNDS
PL.SHOW_PLAN_TYPE
PL.HANDBOOK_URL_ID

  do Print-Plan-Info
  do Process-Options

FROM  PS_BEN_DEFN_PLAN PL

WHERE PL.BENEFIT_PROGRAM = &P.BENEFIT_PROGRAM
  AND PL.EFFDT           = &P.EFFDT
  AND PL.PLAN_TYPE      <> '00'

ORDER BY PL.DISPLAY_PLN_SEQ ASC
!ORDER BY PL.PLAN_TYPE ASC

End-Select
End-Procedure

!***************************************
Begin-Procedure Print-Option-Info
!***************************************

  if (#CurRptLine >= {MAX_LINES})
    do Print-Main-Heading
  end-if

  if ($PrintPlanHdrFlag = 'YES')
    do Print-Plan-Option-Heading
    print ' ' (+1,1)
    add 1 to #CurRptLine
  end-if

  print &O.OPTION_TYPE             (+1,55,1)
  print '-'                        ()
  print $OptionType                (0,0,10)
  print &O.OPTION_CD               (0,+2,3)
  print &O.BENEFIT_PLAN            (0,+2,6)
  print '-'                        ()
  print $BenefitName               (0,0,30)
  print &O.COVRG_CD                (0,+1,2)
  print '-'                        ()
  print $CovrgCode                 (0,0,10)
  print &O.OPTION_LVL              (0,+4,2) edit 99
  print &O.DISPLAY_OPT_SEQ         (0,+5,3) edit 999
  print &O.DFLT_OPTION_IND         (0,+5,1)
  print &O.DEDCD                   (0,+3,6)
  print '-'                        ()
  print $DeductionAbbrv            (0,0,10)
  print &O.ELIG_RULES_ID           (0,+1,4)
  print &O.LOCATION_TBL_ID         (0,+2,4)

  add 1 to #CurRptLine
End-Procedure

!***************************************
Begin-Procedure Process-Options
!***************************************

Begin-Select

O.BENEFIT_PROGRAM
O.EFFDT
O.PLAN_TYPE
O.OPTION_TYPE
  let $LookupVal = &O.OPTION_TYPE
#ifdef MICROSOFT
  let $LookupVal = Edit(&O.OPTION_TYPE, 'XXXX')
#endif
#ifdef DB2ALL
  if Not (#UNICODE_ENABLED)
    let $LookupVal = Edit(&O.OPTION_TYPE, 'XXXX')
  end-if
#endif
  LOOKUP TBLOPTTYPES $LookupVal $OptionType
O.BENEFIT_PLAN
  move &O.BENEFIT_PLAN to $Benefit_Plan
  move &O.PLAN_TYPE    to $Plan_Type
  move &O.EFFDT        to $AsofDate
  do Get-Benefit-Name                !Returns $BenefitName
O.COVRG_CD
  let $CovrgCd = &O.COVRG_CD
  let $CovrgEffdt = $AsofDate
  do Get-Covrg-Code-Descr
  let $CovrgCode = $CovrgDescrShort

O.DISPLAY_OPT_SEQ
O.OPTION_CD
O.OPTION_LVL
O.DEDCD
  move &O.PLAN_TYPE to $PlanType
  move &O.DEDCD     to $DedCd
  move &O.EFFDT     to $AsOfDate
  do Get-Deduction-Name      !Returns $DeductionAbbrv

O.DFLT_OPTION_IND
O.ELIG_RULES_ID
O.LOCATION_TBL_ID

  do Print-Option-Info

FROM  PS_BEN_DEFN_OPTN O

WHERE O.BENEFIT_PROGRAM = &PL.BENEFIT_PROGRAM
  AND O.EFFDT           = &PL.EFFDT
  AND O.PLAN_TYPE       = &PL.PLAN_TYPE

ORDER BY O.DISPLAY_OPT_SEQ ASC
!ORDER BY O.BENEFIT_PLAN ASC, O.OPTION_TYPE ASC, O.COVRG_CD ASC

End-Select
End-Procedure

!***************************************
Begin-Procedure  Get-FSA-Run-ID-Name
!***************************************

Begin-Select

F.FSA_RUN_ID
F.DESCR

FROM PS_FSA_RUN_TBL F
WHERE F.FSA_RUN_ID = &P.FSA_RUN_ID

End-Select
End-Procedure

!***************************************
Begin-Procedure  Get-FMLA-Plan-Name
!***************************************

Begin-Select

L.FMLA_PLAN_ID
L.DESCR

FROM PS_FMLA_PLAN_TBL L
WHERE L.FMLA_PLAN_ID = &P.FMLA_PLAN_ID
AND   L.EFFDT =
        (SELECT MAX(L1.EFFDT)
         FROM   PS_FMLA_PLAN_TBL L1
         WHERE  L1.FMLA_PLAN_ID = L.FMLA_PLAN_ID
         AND    L1.EFFDT       <= &P.EFFDT)
End-Select
End-Procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!*************************************

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'benasof.sqc'   !Ask-As-Of-Date procedure
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'readxlat.sqc'  !Read the Translate Table
#Include 'getbennm.sqc'  !Get-Benefit-Name  procedure
#Include 'getdednm.sqc'  !Get-Deduction-Name procedure
#Include 'getpgmnm.sqc'  !Get-Benefit-Program-Lang procedure
#Include 'getcvgcd.sqc'  !Get-Covrg-Code-Descr procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

!****************************** End Of Report *******************************

