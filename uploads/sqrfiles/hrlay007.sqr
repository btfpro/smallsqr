!***********************************************************************
!  HRLAY007:  Recall Rights Processing(Post Processing)                *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:13:32:26                                 *
!       $Release:  HR9                                                 *
!      $Revision:  101                                                 *
!***********************************************************************
! Description:                                                         *
!***********************************************************************

#include 'setenv.sqc'   !Set environment

!***********************************************************************
!-----------------Seup Section-----------------------------------------*
!Description: This section sets the Page Size and Font Size            *
!***********************************************************************
Begin-Setup
#include 'setupdb.sqc'
    

    page-size 88 131
    declare printer
    type          = HPLASERJET
    orientation   = portrait
    lines-inch    = 8
    chars-inch    = 18.6
    top-margin    = 0.30
    left-margin   = 0.25
    font          = 5
    point-size    = 7
    lines-inch    = 8
    
End-Setup



!***********************************************************************
!-----------------Program Section--------------------------------------*
!Description:This is the main Program section controls the Program Flow*
!***********************************************************************
Begin-Program

    do STDAPI-INIT
    do Init-DateTime
    do Get-Current-DateTime
    !do Format-DateTime ($AsOfToday, $currentdate, {DEFDATE},'','')
    do Find-Date-Format
             evaluate $DT_FMT
               when = 'M'
                    do Format-DateTime($AsOfToday,$currentdate,{DEFMDY},'','')
                    break
               when = 'D'
                    do Format-DateTime($AsOfToday,$$currentdate,{DEFDMY},'','')
                    break
               when-Other
                    do Format-DateTime($AsOfToday,$currentdate,{DEFYMD},'','')
                    break
          end-evaluate
    do Var-Init
    do Get-RP-Lbl
    do Proinst
    do Rost-ID
    !do GRP-TOT
    do Del-Temp-Tbl
    do STDAPI-TERM
    
End-Program


!***********************************************************************
!-----------------Heading Section--------------------------------------*
!Description: This section Prints the Header of this Report            *
!***********************************************************************
Begin-Heading 4
    
    print $Reportname           (1,1)
    print $Hrrecallrightslst    (1,15)
    print $Peoplesoft           (1,63)
    print $Pageno               (1,115)
    PAGE-NUMBER                 (1,124) '  '
    
    print $Hrrecallrightreport  (2,53)
    print $RunDate              (2,115)
    print $currentdate          ()
    print $RunTime              (3,115)
    print $current-date         () edit 'HH:MI:SS'
    Let #Row = #Row + 4
    print $ProcessInstance      (4,1)
    print #proc_inst            () edit    999999999
        
End-Heading


begin-procedure Find-Date-Format

let $REC_FOUND = 'N'
begin-SELECT
A.USER_OPTION_VALUE
  let $REC_FOUND = 'Y'
FROM PSUSERPRSNLOPTN A

WHERE A.OPRID = $prcs_oprid
  AND A.USEROPTN = 'DFRMT'
end-SELECT

IF $REC_FOUND = 'N'
  let $DT_FMT = 'M'
ELSE
  LET $DT_FMT = &A.USER_OPTION_VALUE
  LET $DT_FMT = RTRIM($DT_FMT,' ')
END-If

end-procedure !Find-Date-Format

!***********************************************************************
!-----------------Procedure:Process Instance---------------------------*
!Description: This Procedure selects the Process Instance              *
!***********************************************************************

Begin-procedure Proinst
 
Begin-select

PROCESS_INSTANCE
      LET #proc_inst = &PROCESS_INSTANCE
FROM PS_HR_RUN_CNTL_RGT
WHERE OPRID = $prcs_oprid AND RUN_CNTL_ID = $prcs_run_cntl_id

End-select
     
End-procedure


!***********************************************************************
!-----------------Procedure Roster ID     -----------------------------*
!Description: This section selects the Column Data                     *
!***********************************************************************

Begin-procedure Rost-ID
  Let #Row = #Row + 1
Begin-select distinct
  Print $RosterID           (#Row,1)
LBR_ROSTER_ID (,16) !on-break level=1 PRINT=CHANGE/TOP-PAGE BEFORE=ROST-ID
             
  DO  Rosterdesc
  DO Report-Details-LBL
      If #current-line > 83
          do Page-Break
      End-If
FROM PS_HR_ROSTEXEC_TMP 
   where PROCESS_INSTANCE = #proc_inst
End-select  
     IF (&LBR_ROSTER_ID = '')
         Print $RosterID           (#Row,1)
         Let #Row = #Row + 1
         print $ROSTERDESC (#Row,1)
         DO Report-Details-LBL
     END-IF  
End-procedure

!***********************************************************************
!-----------------Procedure Roster Description-------------------------*
!Description: This section selects the Roster Description              *
!***********************************************************************

Begin-Procedure Rosterdesc
 Let #Row = #Row + 1
 print $ROSTERDESC (#Row,1)   
 
!-----SELECT which fetches the Action Reason description for a Action-Action Reason--------!
!-------Description is 1st fetched from related language table. If the Login language = Base Language then
!-------the description would not be present in the Related Lang table, in which case it should be 
!-------fetched from the Base table
BEGIN-SELECT
HLRL.DESCR50
 let $rost_descr = &HLRL.DESCR50 
FROM PS_HR_LBR_ROST_LNG HLRL
WHERE LBR_ROSTER_ID = &LBR_ROSTER_ID
AND LANGUAGE_CD = $curr_language_cd
AND EFFDT = (SELECT MAX(EFFDT)
             FROM PS_HR_LBR_ROST_LNG
             WHERE LBR_ROSTER_ID = &LBR_ROSTER_ID
             AND LANGUAGE_CD = $curr_language_cd
             AND EFFDT <= $AsOfToday)
END-SELECT

IF $rost_descr =''
BEGIN-SELECT
HLR.DESCR50
  LET $rost_descr = &HLR.DESCR50
FROM PS_HR_LBR_ROSTDATA HLR
WHERE LBR_ROSTER_ID = &LBR_ROSTER_ID
AND EFFDT = (SELECT MAX(EFFDT)
             FROM PS_HR_LBR_ROSTDATA
             WHERE LBR_ROSTER_ID = &LBR_ROSTER_ID
             AND EFFDT <= $AsOfToday)
END-SELECT
END-IF
  
print $rost_descr (,16)
   
End-Procedure  

!***********************************************************************
!-----------------Procedure: Report-Details-LBL------------------------*
!Description: This Procedure prints the column headings of the Report  *
!             Details                                                  *
!***********************************************************************
Begin-Procedure Report-Details-LBL
Let #Row = #Row + 2
print $EmployeeID           (#Row,1)
print $Employee             (,13)
print $Emplclass            (,64)       
print $Recnumsat            (,69)
print $Effdate              (,80)
print $RecalReasonCD        (,93)
print $RecallExpiryDate     (,110)
Let #Row = #Row + 1
Do RPT-DATA

End-Procedure

!***********************************************************************
!-----------------Procedure Report Data--------------------------------*
!Description: This Procedure fetches the data from the Temporary Table *
!***********************************************************************
Begin-Procedure RPT-DATA
   
Begin-Select

R.EMPLID  &R.EMPLID 
R.EMPL_RCD &R.EMPL_RCD
R.LBR_ROSTER_ID

    DO EMPLNAME               
    DO RIGHTS-DT
   
    let #count = #count + 1
    If #current-line > 83
    do Page-Break
    End-If

FROM PS_HR_ROSTEXEC_TMP R

    WHERE R.LBR_ROSTER_ID = &LBR_ROSTER_ID AND R.PROCESS_INSTANCE = #proc_inst
      
     ORDER BY R.LBR_ROSTER_ID

End-Select
Let #Row = #Row + 2
End-Procedure

!***********************************************************************
!-----------------Procedure: EMPLNAME    ------------------------------*
!Description: This gets the Employeename                               *
!***********************************************************************

BEGIN-PROCEDURE EMPLNAME

BEGIN-SELECT
   
P.NAME

FROM PS_NAMES_VW P
  
WHERE P.EMPLID = &R.EMPLID
   
END-SELECT
   Let $Name     = Rtrim(&P.NAME,' ')
   Let $Emplid   = Rtrim(&R.EMPLID,' ') 
   Let #Empl_Rcd = &R.EMPL_RCD
   Let #Row = #Row + 1
   print $Emplid   (#Row,1)
   print $Name     ( ,13) 
   print #Empl_Rcd ( ,64) edit 999
END-PROCEDURE

!***********************************************************************
!-----------------Procedure RIGHTS-DT    ------------------------------*
!Description: This Procedure gets the data from Recall Rights Table.   *
!***********************************************************************
Begin-procedure RIGHTS-DT
 !do Format-DateTime ($AsOfToday, $AsOfToday1, {DEFDATE},'','')
 evaluate $DT_FMT
            when = 'M'
                 do Format-DateTime($AsOfToday,$AsOfToday1,{DEFMDY},'','')
                 break
            when = 'D'
                 do Format-DateTime($AsOfToday,$AsOfToday1,{DEFDMY},'','')
                 break
            when-Other
                 do Format-DateTime($AsOfToday,$AsOfToday1,{DEFYMD},'','')
                 break
          end-evaluate
BEGIN-SELECT
E.EFFDT                 
        do Format-DateTime (&E.EFFDT, $EFFDT, {DEFDATE},'','')
        evaluate $DT_FMT
                 when = 'M'
                      do Format-DateTime(&E.EFFDT,$EFFDT,{DEFMDY},'','')
                      break
                 when = 'D'
                      do Format-DateTime(&E.EFFDT,$EFFDT,{DEFDMY},'','')
                      break
                 when-Other
                      do Format-DateTime(&E.EFFDT,$EFFDT,{DEFYMD},'','')
                      break
          end-evaluate
        
        print $EFFDT      (,80)
E.LBR_RECALL_REASON       (,93)
E.LBR_RCL_EXPIRY_DT     
        do Format-DateTime (&E.LBR_RCL_EXPIRY_DT, $RCL_EFFDT, {DEFDATE},'','')
        evaluate $DT_FMT
                      when = 'M'
                           do Format-DateTime(&E.LBR_RCL_EXPIRY_DT,$RCL_EFFDT,{DEFMDY},'','')
                           break
                      when = 'D'
                           do Format-DateTime(&E.LBR_RCL_EXPIRY_DT,$RCL_EFFDT,{DEFDMY},'','')
                           break
                      when-Other
                           do Format-DateTime(&E.LBR_RCL_EXPIRY_DT,$RCL_EFFDT,{DEFYMD},'','')
                           break
          end-evaluate
        print $RCL_EFFDT  (,110)

FROM PS_HR_RCL_RIGHTS E

WHERE E.EMPLID = &R.EMPLID AND E.EMPL_RCD = &R.EMPL_RCD AND E.LBR_ROSTER_ID = &LBR_ROSTER_ID
                 
 
END-SELECT

End-Procedure


!***********************************************************************
!-----------------Procedure: Getting Report Labels---------------------*
!Description: This Procedure gets the Report labels from the String    *
!         Table                                                        *
!***********************************************************************

Begin-Procedure Get-RP-Lbl

let $ReportID = 'HR_UHRLY'
do Init_Report_Translation($ReportID,$curr_language_cd) 
do Append_Report_Translation ($ReportID)
do Get_Field_Information ('HR_UHRLY','REPORTNAME',$Reportname,#DW1)
do Get_Field_Information ('HR_UHRLY','HR_RCL_RIGHTS_LIST',$Hrrecallrightslst,#DW1)
do Get_Field_Information ('HR_UHRLY','HR_RCL_RIGHTS_RPT',$Hrrecallrightreport,#DW1)
do Get_Field_Information ('HR_UHRLY','RUN DATE',$Rundate,#DW1)
do Get_Field_Information ('HR_UHRLY','PEOPLESOFT',$Peoplesoft,#DW1)
do Get_Field_Information ('HR_UHRLY','PAGE_NO',$Pageno,#DW1)
do Get_Field_Information ('HR_UHRLY','RUN_TIME',$Runtime,#DW1)
do Get_Field_Information ('HR_UHRLY','PROCESS_INSTANCE',$ProcessInstance,#DW1)
do Get_Field_Information ('HR_UHRLY','ROSTERID',$RosterID,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPLOYEE_ID',$EmployeeID,#DW1)
do Get_Field_Information ('HR_UHRLY','EFFECTIVE_DATE',$Effdate,#DW1)
do Get_Field_Information ('HR_UHRLY','RECALL_REASON_CD',$RecalReasonCD,#DW1)
do Get_Field_Information ('HR_UHRLY','EXPIRATION_DATE',$RecallExpiryDate,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPLOYEE',$Employee,#DW1)
do Get_Field_Information ('HR_UHRLY','GROUP_TOTAL',$Grouptotal,#DW1)
do Get_Field_Information ('HR_UHRLY','ROSTERDESC',$ROSTERDESC,#DW1)
do Get_Field_Information ('HR_UHRLY','REC',$Recnumsat,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPLOYEE_CLASS',$Emplclass,#DW1)



End-Procedure !Get-RP-Lbl
!***********************************************************************
!-----------------Procedure: Group Total-------------------------------*
!Description: This Procedure prints the number Employee ID's Picked on *
!             to the Report.                                           *
!***********************************************************************
Begin-Procedure GRP-TOT

print   $Grouptotal          (+3,1)
print   #count               (,12) edit 999999

End-Procedure !GRP-TOT

!***********************************************************************
!-----------------Procedure: Page Break--------------------------------*
!Description: This Procedure finds the end of the Page and carry       *
!             forward to the next page after Header Section            *
!***********************************************************************
Begin-Procedure Page-Break

New-Page
LET #Row = 1
if #current-line <= 2
    
    let #current-line = #current-line +1
    print '                 ' (#current-line,)
end-if

End-Procedure !Page-Break

!***********************************************************************
!-----------------Procedure: Var-Init  --------------------------------*
!Description: This Procedure Initializes the Variables required for the*
!             SQR.                                                     *
!***********************************************************************
Begin-Procedure Var-Init

    LET #count = 0
    LET #T1 = 0
    LET #R = 0
    LET #Row = 4
    !Move &SysDateTime to $AsOfToday
    
End-Procedure !Var-Init

!***********************************************************************
!-----------------Procedure: Del-Temp-Tbl------------------------------*
!Description: This Procedure Initializes the Variables required for the*
!             SQR.                                                     *
!***********************************************************************
Begin-Procedure Del-Temp-Tbl
 
 let #status = 1
 
 !Infinite WHILE LOOP which keeps going on till all hrlay008 or hrlay006 processes are completed.
while #status = 1

let #prcs_process_instance = to_number($prcs_process_instance)

!Checks the runstatus of the SQR hrlay006 or hrlay008.
begin-select
RQST.PRCSINSTANCE
from PSPRCSRQST RQST
WHERE RQST.PRCSNAME in ('HRLAY008','HRLAY006')
AND RQST.RUNSTATUS NOT IN ('9','3','10','14','12','1','8') !Refer PeopleBooks to know what each of these status represent
AND RQST.PRCSINSTANCE < #prcs_process_instance
AND  RQST.PRCSINSTANCE > #proc_inst
end-select

let #runstatus = &RQST.PRCSINSTANCE

!#runstatus = 0 means there are no processes which are still running and hence TEMP table data can be deleted.
if #runstatus = 0
Begin-SQL
DELETE FROM PS_HR_ROSTEXEC_TMP
WHERE PROCESS_INSTANCE = #proc_inst
End-SQL

let #status = 0
break
end-if

end-while

End-Procedure !Del-Temp-Tbl


!************************************************************************
!---------SQCs--------------------------------------------------------- *
!************************************************************************

#include 'stdapi.sqc'      !Routine to update run status
#include 'askcalyr.sqc'    !Ask Calendar Year input
#Include 'curdttim.sqc'    !Get-Current-DateTime procedure
#Include 'datetime.sqc'    !Routines for date and time formatting
#Include 'datemath.sqc'    !Routines for date and time calculations
#Include 'number.sqc'      !Routines to format numbers
#Include 'sqrtrans.sqc'    !Language Translation Routine

#include 'prcslng.sqc'   !Gives Language Code