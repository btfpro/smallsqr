
!***********************************************************************
! PAY018: Payroll Summary Report                                       *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
! Copyright (C) 1988, 2012, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2012/11/08:11:50:52                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  872695                                              !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#include 'setup31.sqc' !Init printer and page size

#Define Pay018a_C_Paygroup              1
#Define Pay018a_C_Count                14
#Define Pay018a_C_Count-1              13
#Define Pay018a_C_Total_gross          20
#Define Pay018a_C_Total_taxes          34
#Define Pay018a_C_Total_deductions     48
#Define Pay018a_C_Net_pay              65

#Define Pay018b_C_Paygroup              1
#Define Pay018b_C_Count                14
#Define Pay018b_C_Count-1              13
#Define Pay018b_C_Reg_earns            20
#Define Pay018b_C_Reg_earn_hrs         34
#Define Pay018b_C_Reg_hrs              45
#Define Pay018b_C_Reg_hrly_earns       56
#Define Pay018b_C_Ot_hrs               72
#Define Pay018b_C_Ot_hrly_earns        85

#Define Pay018c_C_Paygroup              1
#Define Pay018c_C_Erncd                11
#Define Pay018c_C_Count                20
#Define Pay018c_C_Count-1              19
#Define Pay018c_C_Oth_hrs              26
#Define Pay018c_C_Oth_earns            38

#Define Pay018d_C_Paygroup              1
#Define Pay018d_C_Erncd_spcl           11
#Define Pay018d_C_Count                22
#Define Pay018d_C_Count-1              21
#Define Pay018d_C_Spcl_earns           28

#Define Pay018e_C_Paygroup              1
#Define Pay018e_C_Plan_type            11
#Define Pay018e_C_Dedcd                21
#Define Pay018e_C_Ded_class            28
#Define Pay018e_C_Ded_slstx            36
#Define Pay018e_C_Count                42
#Define Pay018e_C_Count-1              41
#Define Pay018e_C_Ded_cur              48
#Define Pay018e_C_Ded_not_taken        62
#Define Pay018e_C_Reason_not_taken     76
#Define Pay018e_C_Ded_cur_paybk        90
#Define Pay018e_C_Ded_cur_refund      104

#Define Pay018f_C_Paygroup              1
#Define Pay018f_C_Plan_type            11
#Define Pay018f_C_Dedcd                21
#Define Pay018f_C_Ded_class            28
#Define Pay018f_C_Ded_slstx            36
#Define Pay018f_C_Count                42
#Define Pay018f_C_Count-1              41
#Define Pay018f_C_Ded_cur              48
#Define Pay018f_C_Ded_not_taken        62
#Define Pay018f_C_Reason_not_taken     76
#Define Pay018f_C_Ded_cur_paybk        90
#Define Pay018f_C_Ded_cur_refund      104

#Define Pay018g_C_Paygroup              1
#Define Pay018g_C_Star                  9
#Define Pay018g_C_State                11
#Define Pay018g_C_Locality             17
#Define Pay018g_C_Resident             28
#Define Pay018g_C_Tax_class            37
#Define Pay018g_C_Count                48
#Define Pay018g_C_Count-1              47
#Define Pay018g_C_Tax_cur              54
#Define Pay018g_C_Txgrs_cur            68
#Define Pay018g_C_Nlgrs_cur            85
#Define Pay018g_C_Tax_not_taken       102

#Define Pay018h_C_Paygroup              1
#Define Pay018h_C_Star                  9
#Define Pay018h_C_State                11
#Define Pay018h_C_Locality             17
#Define Pay018h_C_Resident             28
#Define Pay018h_C_Tax_class            37
#Define Pay018h_C_Count                48
#Define Pay018h_C_Count-1              47
#Define Pay018h_C_Tax_cur              54
#Define Pay018h_C_Txgrs_cur            68
#Define Pay018h_C_Nlgrs_cur            85
#Define Pay018h_C_Tax_not_taken       102

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
    move 'PAY018' to $ReportID

#ifdef USA
    move 'US Payroll Summary Report' to $ReportTitle
#endif

#ifdef CANADA
    move 'Canadian Payroll Summary Report' to $ReportTitle
#endif

  move '* Memo line only, does not add to totals, included in FED' to $memo

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Init
  do Payroll-Report-Initialization
  do Reset
end-procedure

begin-heading 11
#include 'stdhdgpi.sqc'
#include 'stdhdg04.sqc'

    print  'Run ID: '                      (+1,1)
    print  $Report_RunID                   (0,13)

if $rptcde = 'C'
    print 'Other Earnings Summary'         (+2,1)

    print ' '                              (+2,{Pay018c_C_Paygroup})
    print 'Earnings'                       (0,{Pay018c_C_Erncd})
    print ' '                              (0,{Pay018c_C_Count})
    print 'Other'                          (0,{Pay018c_C_Oth_hrs})
    print 'Other'                          (0,{Pay018c_C_Oth_earns})

  if $Selection-Only = 'N'
    print 'Paygroup'                       (+1,{Pay018c_C_Paygroup})
  else
    print '        '                       (+1,{Pay018c_C_Paygroup})
  end-if
    print 'Code'                           (0,{Pay018c_C_Erncd})
    print 'Count'                          (0,{Pay018c_C_Count})
    print 'Hours'                          (0,{Pay018c_C_Oth_hrs})
    print 'Earnings'                       (0,{Pay018c_C_Oth_earns})

  if $Selection-Only = 'N'
    print '--------'                       (+1,{Pay018c_C_Paygroup})
  else
    print '        '                       (+1,{Pay018c_C_Paygroup})
  end-if
    print '--------'                       (0,{Pay018c_C_Erncd})
    print '-----'                          (0,{Pay018c_C_Count})
    print '----------'                     (0,{Pay018c_C_Oth_hrs})
    print '------------'                   (0,{Pay018c_C_Oth_earns})
end-if

if $rptcde = 'D'
    print 'Special Accumulator Summary'         (+2,1)

    print ' '                              (+2,{Pay018d_C_Paygroup})
    print 'Special'                        (0,{Pay018d_C_Erncd_spcl})
    print ' '                              (0,{Pay018d_C_Count})
    print ' '                              (0,{Pay018d_C_Spcl_earns})

    print ' '                              (+1,{Pay018d_C_Paygroup})
    print 'Earnings'                       (0,{Pay018d_C_Erncd_spcl})
    print ' '                              (0,{Pay018d_C_Count})
    print 'Special'                        (0,{Pay018d_C_Spcl_earns})

  if $Selection-Only = 'N'
    print 'Paygroup'                       (+1,{Pay018d_C_Paygroup})
  else
    print '        '                       (+1,{Pay018d_C_Paygroup})
  end-if
    print 'Code'                           (0,{Pay018d_C_Erncd_spcl})
    print 'Count'                          (0,{Pay018d_C_Count})
    print 'Earnings'                       (0,{Pay018d_C_Spcl_earns})

  if $Selection-Only = 'N'
    print '--------'                       (+1,{Pay018d_C_Paygroup})
  else
    print '        '                       (+1,{Pay018d_C_Paygroup})
  end-if
    print '----------'                     (0,{Pay018d_C_Erncd_spcl})
    print '-----'                          (0,{Pay018d_C_Count})
    print '------------'                   (0,{Pay018d_C_Spcl_earns})
end-if

if $rptcde = 'E'
    print 'Employee Deduction Summary'         (+2,1)


    print ' '                              (+2,{Pay018e_C_Paygroup})
    print ' '                              (0,{Pay018e_C_Plan_type})
    print 'Deduction'                      (0,{Pay018e_C_Dedcd})
    print ' '                              (0,{Pay018e_C_Count})
    print 'Current'                        (0,{Pay018e_C_Ded_cur})
    print 'Deduction'                      (0,{Pay018e_C_Ded_not_taken})
    print 'Reason'                         (0,{Pay018e_C_Reason_not_taken})
    print 'Arrears'                        (0,{Pay018e_C_Ded_cur_paybk})
    print 'Deduction'                      (0,{Pay018e_C_Ded_cur_refund})

  if $Selection-Only = 'N'
    print 'Paygroup'                       (+1,{Pay018e_C_Paygroup})
  else
    print '        '                       (+1,{Pay018e_C_Paygroup})
  end-if
    print 'Plan Type'                      (0,{Pay018e_C_Plan_type})
    print 'Code/Class'                     (0,{Pay018e_C_Dedcd})
    print 'Count'                          (0,{Pay018e_C_Count})
    print 'Deduction'                      (0,{Pay018e_C_Ded_cur})
    print 'Not Taken'                      (0,{Pay018e_C_Ded_not_taken})
    print 'Not Taken'                      (0,{Pay018e_C_Reason_not_taken})
    print 'Payback'                        (0,{Pay018e_C_Ded_cur_paybk})
    print 'Refund'                         (0,{Pay018e_C_Ded_cur_refund})

  if $Selection-Only = 'N'
    print '--------'                       (+1,{Pay018e_C_Paygroup})
  else
    print '        '                       (+1,{Pay018e_C_Paygroup})
  end-if
    print '---------'                      (0,{Pay018e_C_Plan_type})
    print '-------'                        (0,{Pay018e_C_Dedcd})
    print '---------'                      (0,{Pay018e_C_Ded_class})
    print '-----'                          (0,{Pay018e_C_Count})
    print '-------------'                  (0,{Pay018e_C_Ded_cur})
    print '-------------'                  (0,{Pay018e_C_Ded_not_taken})
    print '-------------'                  (0,{Pay018e_C_Reason_not_taken})
    print '-------------'                  (0,{Pay018e_C_Ded_cur_paybk})
    print '-------------'                  (0,{Pay018e_C_Ded_cur_refund})
end-if

if $rptcde = 'F'
    print 'Employer Contribution Summary'           (+2,1)

    print ' '                              (+2,{Pay018f_C_Paygroup})
    print ' '                              (0,{Pay018f_C_Plan_type})
    print 'Deduction'                      (0,{Pay018f_C_Dedcd})
    print ' '                              (0,{Pay018f_C_Count})
    print 'Current'                        (0,{Pay018f_C_Ded_cur})
    print 'Deduction'                      (0,{Pay018f_C_Ded_not_taken})
    print 'Reason'                         (0,{Pay018f_C_Reason_not_taken})
    print 'Arrears'                        (0,{Pay018f_C_Ded_cur_paybk})
    print 'Deduction'                      (0,{Pay018f_C_Ded_cur_refund})

  if $Selection-Only = 'N'
    print 'Paygroup'                       (+1,{Pay018f_C_Paygroup})
  else
    print '        '                       (+1,{Pay018f_C_Paygroup})
  end-if
    print 'Plan Type'                      (0,{Pay018f_C_Plan_type})
    print 'Code/Class'                     (0,{Pay018f_C_Dedcd})
    print 'Count'                          (0,{Pay018f_C_Count})
    print 'Deduction'                      (0,{Pay018f_C_Ded_cur})
    print 'Not Taken'                      (0,{Pay018f_C_Ded_not_taken})
    print 'Not Taken'                      (0,{Pay018f_C_Reason_not_taken})
    print 'Payback'                        (0,{Pay018f_C_Ded_cur_paybk})
    print 'Refund'                         (0,{Pay018f_C_Ded_cur_refund})

  if $Selection-Only = 'N'
    print '--------'                       (+1,{Pay018f_C_Paygroup})
  else
    print '        '                       (+1,{Pay018f_C_Paygroup})
  end-if
    print '---------'                      (0,{Pay018f_C_Plan_type})
    print '-------'                        (0,{Pay018f_C_Dedcd})
    print '---------'                      (0,{Pay018f_C_Ded_class})
    print '-----'                          (0,{Pay018f_C_Count})
    print '-------------'                  (0,{Pay018f_C_Ded_cur})
    print '-------------'                  (0,{Pay018f_C_Ded_not_taken})
    print '-------------'                  (0,{Pay018f_C_Reason_not_taken})
    print '-------------'                  (0,{Pay018f_C_Ded_cur_paybk})
    print '-------------'                  (0,{Pay018f_C_Ded_cur_refund})
end-if

if $rptcde = 'G'
    print 'Employee Tax Summary'           (+2,1)

    print ' '                              (+2,{Pay018g_C_Paygroup})
    print ' '                              (0,{Pay018g_C_State})
    print ' '                              (0,{Pay018g_C_Locality})
    print ' '                              (0,{Pay018g_C_Resident})
    print ' '                              (0,{Pay018g_C_Tax_class})
    print ' '                              (0,{Pay018g_C_Count})
    print 'Current'                        (0,{Pay018g_C_Tax_cur})
    print 'Current'                        (0,{Pay018g_C_Txgrs_cur})
    print 'Current No-Limit'               (0,{Pay018g_C_Nlgrs_cur})
    print 'Tax Not'                        (0,{Pay018g_C_Tax_not_taken})

#ifdef USA
    print 'State'                          (+1,{Pay018g_C_State})
#endif

#ifdef CANADA
    print 'Prov '                          (+1,{Pay018g_C_State})
#endif

  if $Selection-Only = 'N'
    print 'Paygroup'                       (0,{Pay018g_C_Paygroup})
  else
    print '        '                       (0,{Pay018g_C_Paygroup})
  end-if
    print ' Locality '                     (0,{Pay018g_C_Locality})
    print 'Resident'                       (0,{Pay018g_C_Resident})
    print 'Tax Class'                      (0,{Pay018g_C_Tax_class})
    print 'Count'                          (0,{Pay018g_C_Count})
    print 'Tax'                            (0,{Pay018g_C_Tax_cur})
    print 'Taxable Gross'                  (0,{Pay018g_C_Txgrs_cur})
    print 'Taxable Gross'                  (0,{Pay018g_C_Nlgrs_cur})
    print 'Taken'                          (0,{Pay018g_C_Tax_not_taken})

  if $Selection-Only = 'N'
    print '--------'                       (+1,{Pay018g_C_Paygroup})
  else
    print '        '                       (+1,{Pay018g_C_Paygroup})
  end-if
    print '-----'                          (0,{Pay018g_C_State})
    print '----------'                     (0,{Pay018g_C_Locality})
    print '--------'                       (0,{Pay018g_C_Resident})
    print '----------'                     (0,{Pay018g_C_Tax_class})
    print '-----'                          (0,{Pay018g_C_Count})
    print '-------------'                  (0,{Pay018g_C_Tax_cur})
    print '-------------'                  (0,{Pay018g_C_Txgrs_cur})
    print '----------------'               (0,{Pay018g_C_Nlgrs_cur})
    print '-------------'                  (0,{Pay018g_C_Tax_not_taken})
end-if

if $rptcde = 'H'
    print 'Employer Tax Summary'           (+2,1)
    print ' '                              (+2,{Pay018h_C_Paygroup})
    print ' '                              (0,{Pay018h_C_State})
    print ' '                              (0,{Pay018h_C_Locality})
    print ' '                              (0,{Pay018h_C_Resident})
    print ' '                              (0,{Pay018h_C_Tax_class})
    print ' '                              (0,{Pay018h_C_Count})
    print 'Current'                        (0,{Pay018h_C_Tax_cur})
    print 'Current'                        (0,{Pay018h_C_Txgrs_cur})
    print 'Current No-Limit'               (0,{Pay018h_C_Nlgrs_cur})
    print 'Tax Not'                        (0,{Pay018h_C_Tax_not_taken})

#ifdef USA
    print 'State'                          (+1,{Pay018h_C_State})
#endif

#ifdef CANADA
    print 'Prov '                          (+1,{Pay018h_C_State})
#endif

  if $Selection-Only = 'N'
    print 'Paygroup'                       (0,{Pay018h_C_Paygroup})
  else
    print '        '                       (0,{Pay018h_C_Paygroup})
  end-if
    print ' Locality '                     (0,{Pay018h_C_Locality})
    print 'Resident'                       (0,{Pay018h_C_Resident})
    print 'Tax Class'                      (0,{Pay018h_C_Tax_class})
    print 'Count'                          (0,{Pay018h_C_Count})
    print 'Tax'                            (0,{Pay018h_C_Tax_cur})
    print 'Taxable Gross'                  (0,{Pay018h_C_Txgrs_cur})
    print 'Taxable Gross'                  (0,{Pay018h_C_Nlgrs_cur})
    print 'Taken'                          (0,{Pay018h_C_Tax_not_taken})

  if $Selection-Only = 'N'
    print '--------'                       (+1,{Pay018h_C_Paygroup})
  else
    print '        '                       (+1,{Pay018h_C_Paygroup})
  end-if
    print '-----'                          (0,{Pay018h_C_State})
    print '--------'                       (0,{Pay018h_C_Locality})
    print '--------'                       (0,{Pay018h_C_Resident})
    print '----------'                     (0,{Pay018h_C_Tax_class})
    print '-----'                          (0,{Pay018h_C_Count})
    print '-------------'                  (0,{Pay018h_C_Tax_cur})
    print '-------------'                  (0,{Pay018h_C_Txgrs_cur})
    print '----------------'               (0,{Pay018h_C_Nlgrs_cur})
    print '-------------'                  (0,{Pay018h_C_Tax_not_taken})
end-if

end-heading


begin-procedure Init           ! Get Source Database Information
    do Get-Current-DateTime
    move '999999' to $countmask
end-procedure


begin-procedure Report         ! Main report processing

  let $Report_RunID = $SlctRunID
  if $RC_PAYINIT.Rpt_Detail_Level = 'S'
    let $Selection-Only = 'N'
    #ifdef USA
      move 'US Payroll Detail Report' to $ReportTitle
    #endif
    #ifdef CANADA
      move 'Canadian Payroll Detail Report' to $ReportTitle
    #endif
    do Select-PayEndDate
    if #PayEndChg >= 1
      do Print-Summary-Report
    end-if
  else
    let $Selection-Only = 'Y'
    do Select-Only-Summary-Rpt
  end-if
end-procedure

begin-procedure Select-Only-Summary-Rpt    ! Main report processing
  let $Report_RunID = $SlctRunID
  do Select-RUNID-sum
  do Pay018a-select-sum
  move 'B' to $rptcde
  do Pay018b-select-sum
  do page_break
  move 'C' to $rptcde
  do Pay018c-select-sum
  do page_break
  move 'D' to $rptcde
  do Pay018d-select-sum
  do page_break
  move 'E' to $rptcde
  do Pay018e-select-sum
  do page_break
  move 'F' to $rptcde
  do Pay018f-select-sum
  do page_break
  move 'G' to $rptcde
  do Pay018g-select-sum
  do page_break
  move 'H' to $rptcde
  do Pay018h-select-sum
end-procedure

begin-procedure Select-RUNID-sum

begin-SELECT

COMPANY      &AS.Company
PAY_END_DT   &AS.PayEndDt

   if &AS.Company <> $PriorCompany
      add 1 to #NumCompanyChange
      move &AS.Company to $PriorCompany
   end-if
   if &AS.PayEndDt <> $PriorPayEndDt
      add 1 to #NumPayEndDtChange
      move &AS.PayEndDt to $PriorPayEndDt
   end-if

from PS_PAY_CALENDAR

where RUN_ID = $SlctRunID

end-SELECT

if  #NumCompanyChange > 1
   move '         ' to $Company
else
   move $PriorCompany to $Company
end-if
if #NumPayEndDtChange > 1
   move '' to $PayEndDate
else
   move $PriorPayEndDt to $PayEndDate
end-if
if &RC_PAYINIT.Company > '     '
    let $Company = &RC_PAYINIT.Company
    let $PayEndDate = &RC_PAYINIT.Pay_End_Dt
end-if

end-procedure

begin-procedure Pay018a-select-sum

#ifdef USA
print 'Pay Check Summary '              (4,1)
#endif

#ifdef CANADA
print 'Pay Cheque Summary'              (4,1)
#endif

print 'All Checks (Including On-line)'  (5,1)

print 'Count'                          (7,{Pay018a_C_Count})
print 'Total Gross'                    (7,{Pay018a_C_Total_gross})
print 'Total Taxes'                    (7,{Pay018a_C_Total_taxes})
print 'Total Deductions'               (7,{Pay018a_C_Total_deductions})
print 'Net Pay'                        (7,{Pay018a_C_Net_pay})
print '-----'                          (8,{Pay018a_C_Count})
print '-------------'                  (8,{Pay018a_C_Total_gross})
print '-------------'                  (8,{Pay018a_C_Total_taxes})
print '----------------'               (8,{Pay018a_C_Total_deductions})
print '-------------'                  (8,{Pay018a_C_Net_pay})

begin-SELECT
COUNT(*)    &count1sum       (+1,{PAY018A_C_COUNT-1})           EDIT :$countmask

#ifdef DB2ALL
DECIMAL(SUM(B.TOTAL_GROSS), 15, 3)  (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_TAXES), 15, 3)        (0,{PAY018A_C_TOTAL_TAXES}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_DEDUCTIONS), 15, 3)   (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
DECIMAL(SUM(B.NET_PAY), 15, 3)            (0,{PAY018A_C_NET_PAY}) EDIT 9999999999.99
#else
SUM(B.TOTAL_GROSS)        (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
SUM(B.TOTAL_TAXES)        (0,{PAY018A_C_TOTAL_TAXES})    EDIT 9999999999.99
SUM(B.TOTAL_DEDUCTIONS)   (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
SUM(B.NET_PAY)            (0,{PAY018A_C_NET_PAY})          EDIT 9999999999.99
#end-if

from PS_PAY_CALENDAR A,
     PS_PAY_CHECK B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = B.COMPANY
  AND A.PAYGROUP   = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              where C.COMPANY    = B.COMPANY
                    AND C.PAYGROUP   = B.PAYGROUP
                    AND C.PAY_END_DT = B.PAY_END_DT
                    AND C.OFF_CYCLE  = B.OFF_CYCLE
                    AND C.PAGE_NUM      = B.PAGE_NUM
                    AND C.LINE_NUM      = B.LINE_NUM
                    AND C.SEPCHK     = B.SEPCHK
                    AND C.PAY_LINE_STATUS IN ('C','F','V')
                    AND C.SINGLE_CHECK_USE IN ('C', 'N'))
end-SELECT

print 'On-line Checks'                 (11,1)

print 'Count'                          (13,{Pay018a_C_Count})
print 'Total Gross'                    (13,{Pay018a_C_Total_gross})
print 'Total Taxes'                    (13,{Pay018a_C_Total_taxes})
print 'Total Deductions'               (13,{Pay018a_C_Total_deductions})
print 'Net Pay'                        (13,{Pay018a_C_Net_pay})
print '-----'                          (14,{Pay018a_C_Count})
print '-------------'                  (14,{Pay018a_C_Total_gross})
print '-------------'                  (14,{Pay018a_C_Total_taxes})
print '----------------'               (14,{Pay018a_C_Total_deductions})
print '-------------'                  (14,{Pay018a_C_Net_pay})

begin-SELECT
COUNT(*)    &ocount1sum       (+1,{PAY018A_C_COUNT-1})           EDIT :$countmask

#ifdef DB2ALL
DECIMAL(SUM(B.TOTAL_GROSS), 15, 3)  &ototal_gross_sum      (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_TAXES), 15, 3)  &ototal_taxes_sum      (0,{PAY018A_C_TOTAL_TAXES}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_DEDUCTIONS), 15, 3) &ototal_dedns_sum  (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
DECIMAL(SUM(B.NET_PAY), 15, 3)  &ototal_netpay_sum         (0,{PAY018A_C_NET_PAY}) EDIT 9999999999.99
#else
SUM(B.TOTAL_GROSS)  &ototal_gross_sum       (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
SUM(B.TOTAL_TAXES)  &ototal_taxes_sum       (0,{PAY018A_C_TOTAL_TAXES})    EDIT 9999999999.99
SUM(B.TOTAL_DEDUCTIONS) &ototal_dedns_sum   (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
SUM(B.NET_PAY) &ototal_netpay_sum           (0,{PAY018A_C_NET_PAY})          EDIT 9999999999.99
#end-if

from PS_PAY_CALENDAR A,
     PS_PAY_CHECK B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = B.COMPANY
  AND A.PAYGROUP   = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND B.PAY_SHEET_SRC = 'O'
  AND EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              where C.COMPANY    = B.COMPANY
                    AND C.PAYGROUP   = B.PAYGROUP
                    AND C.PAY_END_DT = B.PAY_END_DT
                    AND C.OFF_CYCLE  = B.OFF_CYCLE
                    AND C.PAGE_NUM      = B.PAGE_NUM
                    AND C.LINE_NUM      = B.LINE_NUM
                    AND C.SEPCHK     = B.SEPCHK
                    AND C.PAY_LINE_STATUS IN ('C','F','V')
                    AND C.SINGLE_CHECK_USE IN ('C', 'N'))

end-SELECT

! **********************************************************************
! *     Summary of Batch Final Checks                                  *
! **********************************************************************
print 'Batch Final Checks'                  (+2,1)

print 'Count'                          (+2,{Pay018a_C_Count})
print 'Total Gross'                    (0,{Pay018a_C_Total_gross})
print 'Total Taxes'                    (0,{Pay018a_C_Total_taxes})
print 'Total Deductions'               (0,{Pay018a_C_Total_deductions})
print 'Net Pay'                        (0,{Pay018a_C_Net_pay})
print '-----'                          (+1,{Pay018a_C_Count})
print '-------------'                  (0,{Pay018a_C_Total_gross})
print '-------------'                  (0,{Pay018a_C_Total_taxes})
print '----------------'               (0,{Pay018a_C_Total_deductions})
print '-------------'                  (0,{Pay018a_C_Net_pay})

begin-SELECT
COUNT(*)    &kcount1_sum       (+1,{PAY018A_C_COUNT-1})           EDIT :$countmask

#ifdef DB2ALL
DECIMAL(SUM(B.TOTAL_GROSS), 15, 3)  &ktotal_gross_sum        (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_TAXES), 15, 3)  &ktotal_taxes_sum        (0,{PAY018A_C_TOTAL_TAXES}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_DEDUCTIONS), 15, 3) &ktotal_dedns_sum    (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
DECIMAL(SUM(B.NET_PAY), 15, 3)  &ktotal_netpay_sum           (0,{PAY018A_C_NET_PAY}) EDIT 9999999999.99
#else
SUM(B.TOTAL_GROSS)  &ktotal_gross_sum       (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
SUM(B.TOTAL_TAXES)  &ktotal_taxes_sum       (0,{PAY018A_C_TOTAL_TAXES})    EDIT 9999999999.99
SUM(B.TOTAL_DEDUCTIONS) &ktotal_dedns_sum   (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
SUM(B.NET_PAY) &ktotal_netpay_sum           (0,{PAY018A_C_NET_PAY})          EDIT 9999999999.99
#end-if

from PS_PAY_CALENDAR A,
     PS_PAY_CHECK B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = B.COMPANY
  AND A.PAYGROUP   = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND B.PAY_SHEET_SRC = 'K'
  AND EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              where C.COMPANY    = B.COMPANY
                    AND C.PAYGROUP   = B.PAYGROUP
                    AND C.PAY_END_DT = B.PAY_END_DT
                    AND C.OFF_CYCLE  = B.OFF_CYCLE
                    AND C.PAGE_NUM      = B.PAGE_NUM
                    AND C.LINE_NUM      = B.LINE_NUM
                    AND C.SEPCHK     = B.SEPCHK
                    AND C.PAY_LINE_STATUS IN ('C','F','V')
                    AND C.SINGLE_CHECK_USE IN ('C', 'N'))

end-SELECT

! **********************************************************************
! *     Summary of On-line Final Checks                                *
! **********************************************************************
print 'On-line Final Checks'                  (+2,1)

print 'Count'                          (+2,{Pay018a_C_Count})
print 'Total Gross'                    (0,{Pay018a_C_Total_gross})
print 'Total Taxes'                    (0,{Pay018a_C_Total_taxes})
print 'Total Deductions'               (0,{Pay018a_C_Total_deductions})
print 'Net Pay'                        (0,{Pay018a_C_Net_pay})
print '-----'                          (+1,{Pay018a_C_Count})
print '-------------'                  (0,{Pay018a_C_Total_gross})
print '-------------'                  (0,{Pay018a_C_Total_taxes})
print '----------------'               (0,{Pay018a_C_Total_deductions})
print '-------------'                  (0,{Pay018a_C_Net_pay})

begin-SELECT
COUNT(*)    &lcount1_sum       (+1,{PAY018A_C_COUNT-1})           EDIT :$countmask

#ifdef DB2ALL
DECIMAL(SUM(B.TOTAL_GROSS), 15, 3)  &ltotal_gross_sum        (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_TAXES), 15, 3)  &ltotal_taxes_sum      (0,{PAY018A_C_TOTAL_TAXES}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_DEDUCTIONS), 15, 3) &ltotal_dedns_sum  (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
DECIMAL(SUM(B.NET_PAY), 15, 3)  &ltotal_netpay_sum         (0,{PAY018A_C_NET_PAY}) EDIT 9999999999.99
#else
SUM(B.TOTAL_GROSS)  &ltotal_gross_sum       (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
SUM(B.TOTAL_TAXES)  &ltotal_taxes_sum       (0,{PAY018A_C_TOTAL_TAXES})    EDIT 9999999999.99
SUM(B.TOTAL_DEDUCTIONS) &ltotal_dedns_sum   (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
SUM(B.NET_PAY) &ltotal_netpay_sum           (0,{PAY018A_C_NET_PAY})          EDIT 9999999999.99
#end-if

from PS_PAY_CALENDAR A,
     PS_PAY_CHECK B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = B.COMPANY
  AND A.PAYGROUP   = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND B.PAY_SHEET_SRC = 'L'
  AND EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              where C.COMPANY    = B.COMPANY
                    AND C.PAYGROUP   = B.PAYGROUP
                    AND C.PAY_END_DT = B.PAY_END_DT
                    AND C.OFF_CYCLE  = B.OFF_CYCLE
                    AND C.PAGE_NUM      = B.PAGE_NUM
                    AND C.LINE_NUM      = B.LINE_NUM
                    AND C.SEPCHK     = B.SEPCHK
                    AND C.PAY_LINE_STATUS IN ('C','F','V')
                    AND C.SINGLE_CHECK_USE IN ('C', 'N'))

end-SELECT

end-procedure

begin-procedure Pay018b-select-sum
print 'Pay Earnings Summary'         (+5,1)

print ' '                              (+3,{Pay018b_C_Count})
print ' '                              (0,{Pay018b_C_Reg_earns})
print 'Hours For'                      (0,{Pay018b_C_Reg_earn_hrs})
print ' '                              (0,{Pay018b_C_Reg_hrs})
print 'Earnings For'                   (0,{Pay018b_C_Reg_hrly_earns})
print ' '                              (0,{Pay018b_C_Ot_hrs})
print 'Earnings For'                   (0,{Pay018b_C_Ot_hrly_earns})

print ' '                              (+1,{Pay018b_C_Count})
print 'Regular'                        (0,{Pay018b_C_Reg_earns})
print 'Regular'                        (0,{Pay018b_C_Reg_earn_hrs})
print 'Regular'                        (0,{Pay018b_C_Reg_hrs})
print 'Regular'                        (0,{Pay018b_C_Reg_hrly_earns})
print 'Overtime'                       (0,{Pay018b_C_Ot_hrs})
print 'Overtime'                       (0,{Pay018b_C_Ot_hrly_earns})

print 'Count'                          (+1,{Pay018b_C_Count})
print 'Earnings'                       (0,{Pay018b_C_Reg_earns})
print 'Earnings'                       (0,{Pay018b_C_Reg_earn_hrs})
print 'Hours'                          (0,{Pay018b_C_Reg_hrs})
print 'Hours'                          (0,{Pay018b_C_Reg_hrly_earns})
print 'Hours'                          (0,{Pay018b_C_Ot_hrs})
print 'Hours'                          (0,{Pay018b_C_Ot_hrly_earns})

print '-----'                          (+1,{Pay018b_C_Count})
print '------------'                   (0,{Pay018b_C_Reg_earns})
print '--------'                       (0,{Pay018b_C_Reg_earn_hrs})
print '----------'                     (0,{Pay018b_C_Reg_hrs})
print '--------------'                 (0,{Pay018b_C_Reg_hrly_earns})
print '-----------'                    (0,{Pay018b_C_Ot_hrs})
print '-------------'                  (0,{Pay018b_C_Ot_hrly_earns})

begin-SELECT
COUNT(*) &count2_sum           (+1,{PAY018B_C_COUNT-1})          EDIT :$countmask

#ifdef DB2ALL
DECIMAL(SUM(B.REG_EARNS), 15, 3)       (0,{PAY018B_C_REG_EARNS})      EDIT 999999999.99
DECIMAL(SUM(B.REG_EARN_HRS), 15, 3)    (0,{PAY018B_C_REG_EARN_HRS})   EDIT 999999999
DECIMAL(SUM(B.REG_HRS * 1), 15, 3)     (0,{PAY018B_C_REG_HRS})        EDIT 9999999.99
DECIMAL(SUM(B.REG_HRLY_EARNS), 15, 3)  (0,{PAY018B_C_REG_HRLY_EARNS}) EDIT 99999999999.99
DECIMAL(SUM(B.OT_HRS), 15, 3)          (0,{PAY018B_C_OT_HRS})         EDIT 99999999.99
DECIMAL(SUM(B.OT_HRLY_EARNS), 15, 3)   (0,{PAY018B_C_OT_HRLY_EARNS})  EDIT 9999999999.99
#else
SUM(B.REG_EARNS)            (0,{PAY018B_C_REG_EARNS})      EDIT 999999999.99
SUM(B.REG_EARN_HRS)         (0,{PAY018B_C_REG_EARN_HRS})   EDIT 999999999
SUM(B.REG_HRS * 1)          (0,{PAY018B_C_REG_HRS})        EDIT 9999999.99
SUM(B.REG_HRLY_EARNS)       (0,{PAY018B_C_REG_HRLY_EARNS}) EDIT 99999999999.99
SUM(B.OT_HRS)               (0,{PAY018B_C_OT_HRS})         EDIT 99999999.99
SUM(B.OT_HRLY_EARNS)        (0,{PAY018B_C_OT_HRLY_EARNS})  EDIT 9999999999.99
#end-if

from PS_PAY_CALENDAR A,
     PS_PAY_EARNINGS B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and B.PAY_LINE_STATUS IN ('C','F','V')
  AND B.SINGLE_CHECK_USE IN ('C', 'N')
end-SELECT

end-procedure


begin-procedure Pay018c-select-sum
move 0 to #tot_count3_sum
move 0 to #tot_oth_hrs_sum
move 0 to #tot_oth_earns_sum

begin-SELECT
B.ERNCD          &Erncd_sum        (+1,{PAY018C_C_ERNCD})
COUNT(*)         &count3_sum       (0,{PAY018C_C_COUNT})     EDIT 99999

  add &count3_sum to #tot_count3_sum

#ifdef DB2ALL
DECIMAL(SUM(B.OTH_HRS), 15, 3)   &oth_hrs_sum      (0,{PAY018C_C_OTH_HRS})   EDIT 9999999.99
DECIMAL(SUM(B.OTH_EARNS), 15, 3) &oth_earns_sum    (0,{PAY018C_C_OTH_EARNS}) EDIT 999999999.99
#else
SUM(B.OTH_HRS)           &oth_hrs_sum      (0,{PAY018C_C_OTH_HRS})   EDIT 9999999.99
SUM(B.OTH_EARNS)         &oth_earns_sum    (0,{PAY018C_C_OTH_EARNS}) EDIT 999999999.99
#end-if

  add &oth_hrs_sum to #tot_oth_hrs_sum
  add &oth_earns_sum to #tot_oth_earns_sum

from PS_PAY_CALENDAR A,
     PS_PAY_OTH_EARNS B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and EXISTS (SELECT 'x'
              FROM PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.ADDL_NBR = B.ADDL_NBR
                AND C.PAY_LINE_STATUS IN ('C','F','V')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by B.ERNCD
ORDER by B.ERNCD
end-select

print 'Total'        (+2,1)
do Format-Number(#tot_count3_sum, $out, $countmask)
print $out    (0,{Pay018c_C_Count-1})
do Format-Number(#tot_oth_hrs_sum, $out, '9999999.99')
print $out   (0,{Pay018c_C_Oth_hrs})
do Format-Number(#tot_oth_earns_sum, $out, '999999999.99')
print $out (0,{Pay018c_C_Oth_earns})
end-procedure

begin-procedure Pay018d-select-sum
move 0 to #tot_count4_sum
move 0 to #tot_spcl_earns_sum
print ' '                     (+1,1)

begin-SELECT
B.ERNCD_SPCL  &Erncd_spcl_sum     (+1,{PAY018D_C_ERNCD_SPCL})
COUNT(*) &count4_sum              (0,{PAY018D_C_COUNT})      EDIT 99999

  add &count4_sum to #tot_count4_sum

#ifdef DB2ALL
DECIMAL(SUM(B.SPCL_EARNS), 15, 3) &spcl_earns_sum (0,{PAY018D_C_SPCL_EARNS}) EDIT 999999999.99
#else
SUM(B.SPCL_EARNS)    &spcl_earns_sum (0,{PAY018D_C_SPCL_EARNS}) EDIT 999999999.99
#end-if

  add &spcl_earns_sum to #tot_spcl_earns_sum

from PS_PAY_CALENDAR A,
     PS_PAY_SPCL_EARNS B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and EXISTS (SELECT 'x'
              FROM PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F','V')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by B.ERNCD_SPCL
ORDER by B.ERNCD_SPCL
end-SELECT

print 'Total'         (+2,1)
do Format-Number(#tot_count4_sum, $out, $countmask)
print $out     (0,{Pay018d_C_Count-1})
do Format-Number(#tot_spcl_earns_sum, $out, '999999999.99')
print $out (0,{Pay018d_C_Spcl_earns})
end-procedure


begin-procedure Pay018e-select-sum
move 0 to #tot_count5_sum
move 0 to #tot_ded_cur_sum
move 0 to #tot_ded_not_taken_sum
move 0 to #tot_ded_cur_paybk_sum
move 0 to #tot_ded_cur_refund_sum

begin-SELECT
B.PLAN_TYPE                      (+1,{PAY018E_C_PLAN_TYPE})
B.DEDCD                          (0,{PAY018E_C_DEDCD})
B.DED_CLASS                      (0,{PAY018E_C_DED_CLASS})
B.REASON_NOT_TAKEN &B.Reason_Not_Taken_Sum
COUNT(*) &count5_sum             (0,{PAY018E_C_COUNT})         EDIT 99999

  add &count5_sum to #tot_count5_sum

#ifdef DB2ALL
DECIMAL(SUM(B.DED_CUR), 15, 3) &ded_cur_sum (0,{PAY018E_C_DED_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.DED_NOT_TAKEN), 15, 3) &ded_not_taken_sum (0,{PAY018E_C_DED_NOT_TAKEN}) EDIT 9999999999.99
DECIMAL(SUM(B.DED_CUR_PAYBK), 15, 3) &ded_cur_paybk_sum (0,{PAY018E_C_DED_CUR_PAYBK}) EDIT 9999999999.99
DECIMAL(SUM(B.DED_CUR_REFUND), 15, 3) &ded_cur_refund_sum (0,{PAY018E_C_DED_CUR_REFUND}) EDIT 9999999999.99
#else
SUM(B.DED_CUR)         &ded_cur_sum          (0,{PAY018E_C_DED_CUR})    EDIT 9999999999.99
SUM(B.DED_NOT_TAKEN)   &ded_not_taken_sum (0,{PAY018E_C_DED_NOT_TAKEN}) EDIT 9999999999.99
SUM(B.DED_CUR_PAYBK)   &ded_cur_paybk_sum (0,{PAY018E_C_DED_CUR_PAYBK}) EDIT 9999999999.99
SUM(B.DED_CUR_REFUND)  &ded_cur_refund_sum (0,{PAY018E_C_DED_CUR_REFUND}) EDIT 9999999999.99
#end-if

  if &ded_not_taken_sum > 0
    move 'REASON_NOT_TAKEN' to $FieldName
    move &B.Reason_Not_Taken_Sum to $FieldValue
    do Read-Translate-Table
    let $Reason_Not_Taken = &B.Reason_Not_Taken_Sum || ' ' || $XlatShortName
    print $Reason_Not_Taken  (0,{Pay018e_C_Reason_not_taken})
  end-if

  add &ded_cur_sum to #tot_ded_cur_sum
  add &ded_not_taken_sum to #tot_ded_not_taken_sum
  add &ded_cur_paybk_sum to #tot_ded_cur_paybk_sum
  add &ded_cur_refund_sum to #tot_ded_cur_refund_sum

from PS_PAY_CALENDAR A,
     PS_PAY_DEDUCTION B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and B.DED_CLASS <= 'K'
  and EXISTS (SELECT 'x'
              FROM PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F','V')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by B.PLAN_TYPE,
         B.DEDCD,
         B.DED_CLASS,
         B.REASON_NOT_TAKEN
ORDER by B.PLAN_TYPE,
         B.DEDCD,
         B.DED_CLASS,
         B.REASON_NOT_TAKEN
end-SELECT

print 'Total'               (+2,1)
do Format-Number(#tot_count5_sum, $out, $countmask)
print $out          (0,{Pay018e_C_Count-1})
do Format-Number(#tot_Ded_cur_sum, $out, '9999999999.99')
print $out          (0,{Pay018e_C_Ded_cur})
do Format-Number(#tot_Ded_not_taken_sum, $out, '9999999999.99')
print $out    (0,{Pay018e_C_Ded_not_taken})
do Format-Number(#tot_Ded_cur_paybk_sum, $out, '9999999999.99')
print $out    (0,{Pay018e_C_Ded_cur_paybk})
do Format-Number(#tot_Ded_cur_refund_sum, $out, '9999999999.99')
print $out   (0,{Pay018e_C_Ded_cur_refund})
end-procedure


begin-procedure Pay018f-select-sum
move 0 to #tot_count6_sum
move 0 to #tot_ded_cur_sum
move 0 to #tot_ded_not_taken_sum
move 0 to #tot_ded_cur_paybk_sum
move 0 to #tot_ded_cur_refund_sum

begin-SELECT
F.PLAN_TYPE &plan_type2_sum          (+1,{PAY018F_C_PLAN_TYPE})
F.DEDCD     &dedcd2_sum              (0,{PAY018F_C_DEDCD})
F.DED_CLASS &ded_class2_sum          (0,{PAY018F_C_DED_CLASS})
F.REASON_NOT_TAKEN  &F.Reason_Not_Taken_Sum
COUNT(*) &count6_sum                 (0,{PAY018F_C_COUNT})  EDIT 99999

  add &count6_sum to #tot_count6_sum

#ifdef DB2ALL
DECIMAL(SUM(F.DED_CUR), 15, 3) &ded_cur2_sum    (0,{PAY018F_C_DED_CUR}) EDIT 9999999999.99
DECIMAL(SUM(F.DED_NOT_TAKEN), 15, 3) &ded_not_taken2_sum (0,{PAY018F_C_DED_NOT_TAKEN}) EDIT 9999999999.99
DECIMAL(SUM(F.DED_CUR_PAYBK), 15, 3) &ded_cur_paybk2_sum (0,{PAY018F_C_DED_CUR_PAYBK}) EDIT 9999999999.99
DECIMAL(SUM(F.DED_CUR_REFUND), 15, 3) &ded_cur_refund2_sum  (0,{PAY018F_C_DED_CUR_REFUND}) EDIT 9999999999.99
#else
SUM(F.DED_CUR)        &ded_cur2_sum       (0,{PAY018F_C_DED_CUR}) EDIT 9999999999.99
SUM(F.DED_NOT_TAKEN)  &ded_not_taken2_sum (0,{PAY018F_C_DED_NOT_TAKEN}) EDIT 9999999999.99
SUM(F.DED_CUR_PAYBK)  &ded_cur_paybk2_sum (0,{PAY018F_C_DED_CUR_PAYBK}) EDIT 9999999999.99
SUM(F.DED_CUR_REFUND) &ded_cur_refund2_sum (0,{PAY018F_C_DED_CUR_REFUND}) EDIT 9999999999.99
#end-if

  if &ded_not_taken2_sum > 0
    move 'REASON_NOT_TAKEN' to $FieldName
    move &F.Reason_Not_Taken_Sum to $FieldValue
    do Read-Translate-Table
    let $Reason_Not_Taken = &F.Reason_Not_Taken_Sum || ' ' || $XlatShortName
    print $Reason_Not_Taken  (0,{Pay018f_C_Reason_not_taken})
  end-if

  add &ded_cur2_sum to #tot_ded_cur_sum
  add &ded_not_taken2_sum to #tot_ded_not_taken_sum
  add &ded_cur_paybk2_sum to #tot_ded_cur_paybk_sum
  add &ded_cur_refund2_sum to #tot_ded_cur_refund_sum

from PS_PAY_CALENDAR A,
     PS_PAY_DEDUCTION F
where [$SlctCalendar]
  AND F.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND F.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = F.COMPANY
  and A.PAY_END_DT = F.PAY_END_DT
  and A.PAYGROUP   = F.PAYGROUP
  and F.DED_CLASS >= 'L'
  and EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              WHERE C.COMPANY = F.COMPANY
                AND C.PAYGROUP = F.PAYGROUP
                AND C.PAY_END_DT = F.PAY_END_DT
                AND C.OFF_CYCLE = F.OFF_CYCLE
                AND C.PAGE_NUM = F.PAGE_NUM
                AND C.LINE_NUM = F.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F','V')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by F.PLAN_TYPE,
         F.DEDCD,
         F.DED_CLASS,
         F.REASON_NOT_TAKEN
ORDER by F.PLAN_TYPE,
         F.DEDCD,
         F.DED_CLASS,
         F.REASON_NOT_TAKEN
end-SELECT

print 'Total'               (+2,1)
do Format-Number(#tot_count6_sum, $out, $countmask)
print $out          (0,{Pay018f_C_Count-1})
do Format-Number(#tot_Ded_cur_sum, $out, '9999999999.99')
print $out          (0,{Pay018f_C_Ded_cur})
do Format-Number(#tot_Ded_not_taken_sum, $out, '9999999999.99')
print $out    (0,{Pay018f_C_Ded_not_taken})
do Format-Number(#tot_Ded_cur_paybk_sum, $out, '9999999999.99')
print $out    (0,{Pay018f_C_Ded_cur_paybk})
do Format-Number(#tot_Ded_cur_refund_sum, $out, '9999999999.99')
print $out   (0,{Pay018f_C_Ded_cur_refund})
end-procedure


begin-procedure Pay018g-select-sum
move 0 to #tot_count7_sum
move 0 to #tot_tax_cur_sum
move 0 to #tot_txgrs_cur_sum
move 0 to #tot_nlgrs_cur_sum
move 0 to #tot_tax_not_taken_sum

begin-SELECT
B.STATE  &B.State_Sum

  move 'Y' to $add-tot-flag
  LET $State = RTRIM(&B.State_Sum, ' ')

  evaluate $State
      when = '$U'
           move 'FED' to $State
           break
      when = '$UAS'
           move 'A.S.' to $State
           move 'N' to $add-tot-flag
           break
      when = '$UGU'
           move 'Guam' to $State
           move 'N' to $add-tot-flag
           break
      when = '$UPR'
           move 'P.R.' to $State
           move 'N' to $add-tot-flag
           break
      when = '$UVI'
           move 'V.I.' to $State
           move 'N' to $add-tot-flag
           break
  end-evaluate

  print $State                   (+1,{Pay018g_C_State})

  if $add-tot-flag = 'N'
    print '*'                    (0,{Pay018g_C_Star})
    move $memo to $PAY018_Legend
  end-if

B.LOCALITY   &B.Locality_Sum     (0,{PAY018G_C_LOCALITY})
B.RESIDENT   &B.Resident_Sum     (0,{PAY018G_C_RESIDENT})
B.TAX_CLASS  &B.Tax_Class_Sum

  move 'TAX_CLASS' to $FieldName
  move &B.Tax_Class_Sum to $FieldValue
  do Read-Translate-Table
  let $Tax_Class_Name = $XlatShortName
  print $Tax_Class_Name        (0,{Pay018g_C_Tax_class})

COUNT(*)   &count7_sum               (0,{PAY018G_C_COUNT})   EDIT 99999

#ifdef DB2ALL
DECIMAL(SUM(B.TAX_CUR), 15, 3) &tax_cur2_sum (0,{PAY018G_C_TAX_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.TXGRS_CUR), 15, 3) &txgrs_cur_sum (0,{PAY018G_C_TXGRS_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.NLGRS_CUR), 15, 3) &nlgrs_cur_sum (0,{PAY018G_C_NLGRS_CUR}) EDIT 9999999999999.99
DECIMAL(SUM(B.TAX_NOT_TAKEN), 15, 3) &tax_not_taken_sum (0,{PAY018G_C_TAX_NOT_TAKEN}) EDIT 9999999999.99
#else
SUM(B.TAX_CUR)       &tax_cur2_sum         (0,{PAY018G_C_TAX_CUR}) EDIT 9999999999.99
SUM(B.TXGRS_CUR)     &txgrs_cur_sum      (0,{PAY018G_C_TXGRS_CUR}) EDIT 9999999999.99
SUM(B.NLGRS_CUR)     &nlgrs_cur_sum      (0,{PAY018G_C_NLGRS_CUR}) EDIT 9999999999999.99
SUM(B.TAX_NOT_TAKEN) &tax_not_taken_sum  (0,{PAY018G_C_TAX_NOT_TAKEN}) EDIT 9999999999.99
#end-if

  if $add-tot-flag = 'Y'
    add &tax_cur2_sum to #tot_tax_cur_sum
    add &tax_not_taken_sum to #tot_tax_not_taken_sum
  end-if

from PS_PAY_CALENDAR A,
     PS_PAY_TAX B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and B.TAX_CLASS IN ('D','H', 'F','L','M','N','V','P','B','G','T','W','C','A','I','O','7') !HP99999
  and EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F','V')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by B.STATE,
         B.LOCALITY,
         B.RESIDENT,
         B.TAX_CLASS
ORDER by B.STATE,
         B.LOCALITY,
         B.RESIDENT,
         B.TAX_CLASS
end-SELECT

print 'Total'         (+2,1)
do Format-Number(#tot_tax_cur_sum, $out, '9999999999.99')
print $out    (0,{Pay018g_C_Tax_cur})
do Format-Number(#tot_tax_not_taken_sum, $out, '9999999999.99')
print $out (0,{Pay018g_C_Tax_not_taken})
end-procedure


begin-procedure Pay018h-select-sum
move 0 to #tot_count8_sum
move 0 to #tot_tax_cur_sum
move 0 to #tot_txgrs_cur_sum
move 0 to #tot_nlgrs_cur_sum
move 0 to #tot_tax_not_taken_sum

begin-SELECT
B.STATE         &state2

  move 'Y' to $add-tot-flag
  LET $State = RTRIM(&state2, ' ')

  evaluate $State
      when = '$U'
           move 'FED' to $State
           break
      when = '$UAS'
           move 'A.S.' to $State
           move 'N' to $add-tot-flag
           break
      when = '$UGU'
           move 'Guam' to $State
           move 'N' to $add-tot-flag
           break
      when = '$UPR'
           move 'P.R.' to $State
           move 'N' to $add-tot-flag
           break
      when = '$UVI'
           move 'V.I.' to $State
           move 'N' to $add-tot-flag
           break
  end-evaluate

  print $State                   (+1,{Pay018h_C_State})

  if $add-tot-flag = 'N'
    print '*'                    (0,{Pay018h_C_Star})
    move $memo to $PAY018_Legend
  end-if

B.LOCALITY      &locality2_sum       (0,{PAY018H_C_LOCALITY})
B.RESIDENT      &resident2_sum       (0,{PAY018H_C_RESIDENT})
B.TAX_CLASS     &tax_class2_sum

    move 'TAX_CLASS' to $FieldName
    move &tax_class2_sum  to $FieldValue
    do Read-Translate-Table
    let $Tax_Class_Name = $XlatShortName
    print $Tax_Class_Name        (0,{Pay018h_C_Tax_class})

COUNT(*)   &count8_sum               (0,{PAY018H_C_COUNT})   EDIT 99999

#ifdef DB2ALL
DECIMAL(SUM(B.TAX_CUR), 15, 3) &tax_cur3_sum     (0,{PAY018H_C_TAX_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.TXGRS_CUR), 15, 3) &txgrs_cur2_sum (0,{PAY018H_C_TXGRS_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.NLGRS_CUR), 15, 3) &nlgrs_cur2_sum (0,{PAY018H_C_NLGRS_CUR}) EDIT 9999999999999.99
DECIMAL(SUM(B.TAX_NOT_TAKEN), 15, 3) &tax_not_taken2_sum  (0,{PAY018H_C_TAX_NOT_TAKEN}) EDIT 9999999999.99
#else
SUM(B.TAX_CUR)         &tax_cur3_sum         (0,{PAY018H_C_TAX_CUR}) EDIT 9999999999.99
SUM(B.TXGRS_CUR)       &txgrs_cur2_sum     (0,{PAY018H_C_TXGRS_CUR}) EDIT 9999999999.99
SUM(B.NLGRS_CUR)       &nlgrs_cur2_sum      (0,{PAY018H_C_NLGRS_CUR}) EDIT 9999999999999.99
SUM(B.TAX_NOT_TAKEN)   &tax_not_taken2_sum  (0,{PAY018H_C_TAX_NOT_TAKEN}) EDIT 9999999999.99
#end-if

  if $add-tot-flag = 'Y'
    add &tax_cur3_sum to #tot_tax_cur_sum
    add &tax_not_taken2_sum to #tot_tax_not_taken_sum
  end-if

from PS_PAY_CALENDAR A,
     PS_PAY_TAX B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and
  (
     (B.STATE         IN ('$U', '$UAS', '$UGU', '$UPR', '$UVI')
  and B.TAX_CLASS not IN ('H','L','M','N','V','P','B','D','F','G','T','C', 'W', 'A','7') )  !PUBSEC
       OR
     (B.STATE     NOT IN ('$U', '$UAS', '$UGU', '$UPR', '$UVI')
  and B.TAX_CLASS not IN ('H','D','L','M','N','V','P','W','A','C','I','O') )  !PUBSEC
  )
  and EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F','V')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by B.STATE,
         B.LOCALITY,
         B.RESIDENT,
         B.TAX_CLASS
ORDER by B.STATE,
         B.LOCALITY,
         B.RESIDENT,
         B.TAX_CLASS
end-SELECT

print 'Total'         (+2,1)
do Format-Number(#tot_tax_cur_sum, $out, '9999999999.99')
print $out    (0,{Pay018h_C_Tax_cur})
do Format-Number(#tot_tax_not_taken_sum, $out, '9999999999.99')
print $out (0,{Pay018h_C_Tax_not_taken})
end-procedure


begin-procedure Select-PayEndDate

begin-SELECT
A.COMPANY             () on-break print=never  level=1 procedure=Company-Change
A.PAY_END_DT          () on-break print=never  level=2 procedure=PayEndDate-Change

  move &A.Pay_End_Dt to $PayEndDate
  move &A.COMPANY    to $Company

  do Pay018a-select
  move 'B' to $rptcde
  do Pay018b-select
  do page_break
  move 'C' to $rptcde
  do Pay018c-select
  do page_break
  move 'D' to $rptcde
  do Pay018d-select
  do page_break
  move 'E' to $rptcde
  do Pay018e-select
  do page_break
  move 'F' to $rptcde
  do Pay018f-select
  do page_break
  move 'G' to $rptcde
  do Pay018g-select
  do page_break
  move 'H' to $rptcde
  do Pay018h-select

from PS_PAY_CALENDAR A,
     PS_PAY_CHECK B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = B.COMPANY
  AND A.PAYGROUP   = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              where C.COMPANY    = B.COMPANY
                    AND C.PAYGROUP   = B.PAYGROUP
                    AND C.PAY_END_DT = B.PAY_END_DT
                    AND C.OFF_CYCLE  = B.OFF_CYCLE
                    AND C.PAGE_NUM      = B.PAGE_NUM
                    AND C.LINE_NUM      = B.LINE_NUM
                    AND C.SEPCHK     = B.SEPCHK
                    AND C.PAY_LINE_STATUS IN ('C','F','V')
                    AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP BY A.COMPANY,
         A.PAY_END_DT
ORDER BY A.COMPANY,
         A.PAY_END_DT
END-SELECT

end-procedure


begin-procedure Pay018a-select

#ifdef USA
print 'Pay Check Summary '              (+1,1)
#endif

#ifdef CANADA
print 'Pay Cheque Summary'              (+1,1)
#endif

print 'All Checks (Including On-line)'  (+1,1)

do Print-PayCheck-Summary-Hdg

begin-SELECT
B.PAYGROUP  &paygroup1    (+1,{PAY018A_C_PAYGROUP})
COUNT(*)    &count1       (0,{PAY018A_C_COUNT})           EDIT 99999

     add &count1 to #tot_count1
     add &count1 to #run_tot_count1

#ifdef DB2ALL
DECIMAL(SUM(B.TOTAL_GROSS), 15, 3) &tot_chq_gross (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_TAXES), 15, 3) &tot_chq_taxes       (0,{PAY018A_C_TOTAL_TAXES}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_DEDUCTIONS), 15, 3) &tot_chq_ded  (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
DECIMAL(SUM(B.NET_PAY), 15, 3) &tot_chq_net           (0,{PAY018A_C_NET_PAY}) EDIT 9999999999.99
#else
SUM(B.TOTAL_GROSS) &tot_chq_gross       (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
SUM(B.TOTAL_TAXES) &tot_chq_taxes       (0,{PAY018A_C_TOTAL_TAXES})    EDIT 9999999999.99
SUM(B.TOTAL_DEDUCTIONS) &tot_chq_ded  (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
SUM(B.NET_PAY)  &tot_chq_net          (0,{PAY018A_C_NET_PAY})          EDIT 9999999999.99
#end-if

      add &tot_chq_gross to #tot_chq_gross
      add &tot_chq_taxes to #tot_chq_taxes
      add &tot_chq_ded   to #tot_chq_ded
      add &tot_chq_net   to #tot_chq_net
      add &tot_chq_gross to #run_tot_chq_gross
      add &tot_chq_taxes to #run_tot_chq_taxes
      add &tot_chq_ded   to #run_tot_chq_ded
      add &tot_chq_net   to #run_tot_chq_net

from PS_PAY_CALENDAR A,
     PS_PAY_CHECK B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = $Company
  AND A.PAY_END_DT = $PayEndDate
  AND A.PAYGROUP   = B.PAYGROUP
  AND A.COMPANY    = B.COMPANY
  AND A.PAY_END_DT = B.PAY_END_DT
  AND EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              where C.COMPANY    = B.COMPANY
                    AND C.PAYGROUP   = B.PAYGROUP
                    AND C.PAY_END_DT = B.PAY_END_DT
                    AND C.OFF_CYCLE  = B.OFF_CYCLE
                    AND C.PAGE_NUM      = B.PAGE_NUM
                    AND C.LINE_NUM      = B.LINE_NUM
                    AND C.SEPCHK     = B.SEPCHK
                    AND C.PAY_LINE_STATUS IN ('C','F','V')
                    AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP BY B.PAYGROUP
ORDER BY B.PAYGROUP
end-SELECT

print 'Grand Total'          (+2,1)
do Format-Number(#tot_count1, $out, $countmask)
print $out      (0,{Pay018a_C_Count-1})
do Format-Number(#tot_chq_gross, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_gross})
do Format-Number(#tot_chq_taxes, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_taxes})
do Format-Number(#tot_chq_ded, $out, '9999999999999.99')
print $out      (0,{Pay018a_C_Total_deductions})
do Format-Number(#tot_chq_net, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Net_pay})
print 'On-line Checks'                 (+2,1)

do Print-PayCheck-Summary-Hdg

move 0 to #tot_count1
move 0 to #tot_chq_gross
move 0 to #tot_chq_taxes
move 0 to #tot_chq_ded
move 0 to #tot_chq_net

begin-SELECT
A.PAYGROUP  &opaygroup1    (+1,{PAY018A_C_PAYGROUP})
COUNT(*)    &ocount1       (0,{PAY018A_C_COUNT})           EDIT 99999

   add &ocount1 to #tot_count1
   add &ocount1 to #run_tot_Ocount1

#ifdef DB2ALL
DECIMAL(SUM(B.TOTAL_GROSS), 15, 3)  &ototal_gross      (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_TAXES), 15, 3)  &ototal_taxes      (0,{PAY018A_C_TOTAL_TAXES}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_DEDUCTIONS), 15, 3) &ototal_dedns  (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
DECIMAL(SUM(B.NET_PAY), 15, 3)  &ototal_netpay         (0,{PAY018A_C_NET_PAY}) EDIT 9999999999.99
#else
SUM(B.TOTAL_GROSS)  &ototal_gross       (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
SUM(B.TOTAL_TAXES)  &ototal_taxes       (0,{PAY018A_C_TOTAL_TAXES})    EDIT 9999999999.99
SUM(B.TOTAL_DEDUCTIONS) &ototal_dedns   (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
SUM(B.NET_PAY) &ototal_netpay           (0,{PAY018A_C_NET_PAY})          EDIT 9999999999.99
#end-if

     add &ototal_gross  to #tot_chq_gross
     add &ototal_taxes  to #tot_chq_taxes
     add &ototal_dedns  to #tot_chq_ded
     add &ototal_netpay to #tot_chq_net
     add &ototal_gross  to #run_tot_Ochq_gross
     add &ototal_taxes  to #run_tot_Ochq_taxes
     add &ototal_dedns  to #run_tot_Ochq_ded
     add &ototal_netpay to #run_tot_Ochq_net


from PS_PAY_CALENDAR A,
     PS_PAY_CHECK B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = $Company
  AND A.PAY_END_DT = $PayEndDate
  AND A.COMPANY    = B.COMPANY
  AND A.PAYGROUP   = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND B.PAY_SHEET_SRC = 'O'
  AND EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              where C.COMPANY    = B.COMPANY
                    AND C.PAYGROUP   = B.PAYGROUP
                    AND C.PAY_END_DT = B.PAY_END_DT
                    AND C.OFF_CYCLE  = B.OFF_CYCLE
                    AND C.PAGE_NUM      = B.PAGE_NUM
                    AND C.LINE_NUM      = B.LINE_NUM
                    AND C.SEPCHK     = B.SEPCHK
                    AND C.PAY_LINE_STATUS IN ('C','F','V')
                    AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP BY A.PAYGROUP
ORDER BY A.PAYGROUP
end-SELECT

print 'Grand Total'          (+2,1)
do Format-Number(#tot_count1, $out, $countmask)
print $out      (0,{Pay018a_C_Count-1})
do Format-Number(#tot_chq_gross, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_gross})
do Format-Number(#tot_chq_taxes, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_taxes})
do Format-Number(#tot_chq_ded, $out, '9999999999999.99')
print $out      (0,{Pay018a_C_Total_deductions})
do Format-Number(#tot_chq_net, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Net_pay})


move 0 to #tot_count1
move 0 to #tot_chq_gross
move 0 to #tot_chq_taxes
move 0 to #tot_chq_ded
move 0 to #tot_chq_net


! **********************************************************************
! *     Summary of Batch Final Checks                                  *
! **********************************************************************
print 'Batch Final Checks'                  (+2,1)

do Print-PayCheck-Summary-Hdg

begin-SELECT

A.PAYGROUP  &kpaygroup1   (+1,{PAY018A_C_PAYGROUP})
COUNT(*)    &kcount1       (0,{PAY018A_C_COUNT})           EDIT 99999

   add &kcount1 to #tot_count1
   add &kcount1 to #run_tot_Kcount1

#ifdef DB2ALL
DECIMAL(SUM(B.TOTAL_GROSS), 15, 3)  &ktotal_gross        (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_TAXES), 15, 3)  &ktotal_taxes      (0,{PAY018A_C_TOTAL_TAXES}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_DEDUCTIONS), 15, 3) &ktotal_dedns  (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
DECIMAL(SUM(B.NET_PAY), 15, 3)  &ktotal_netpay         (0,{PAY018A_C_NET_PAY}) EDIT 9999999999.99
#else
SUM(B.TOTAL_GROSS)  &ktotal_gross       (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
SUM(B.TOTAL_TAXES)  &ktotal_taxes       (0,{PAY018A_C_TOTAL_TAXES})    EDIT 9999999999.99
SUM(B.TOTAL_DEDUCTIONS) &ktotal_dedns   (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
SUM(B.NET_PAY) &ktotal_netpay           (0,{PAY018A_C_NET_PAY})          EDIT 9999999999.99
#end-if

     add &ktotal_gross  to #tot_chq_gross
     add &ktotal_taxes  to #tot_chq_taxes
     add &ktotal_dedns  to #tot_chq_ded
     add &ktotal_netpay to #tot_chq_net
     add &ktotal_gross  to #run_tot_Kchq_gross
     add &ktotal_taxes  to #run_tot_Kchq_taxes
     add &ktotal_dedns  to #run_tot_Kchq_ded
     add &ktotal_netpay to #run_tot_Kchq_net

from PS_PAY_CALENDAR A,
     PS_PAY_CHECK B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = $Company
  AND A.PAY_END_DT = $PayEndDate
  AND A.COMPANY    = B.COMPANY
  AND A.PAYGROUP   = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND B.PAY_SHEET_SRC = 'K'
  AND EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              where C.COMPANY    = B.COMPANY
                    AND C.PAYGROUP   = B.PAYGROUP
                    AND C.PAY_END_DT = B.PAY_END_DT
                    AND C.OFF_CYCLE  = B.OFF_CYCLE
                    AND C.PAGE_NUM      = B.PAGE_NUM
                    AND C.LINE_NUM      = B.LINE_NUM
                    AND C.SEPCHK     = B.SEPCHK
                    AND C.PAY_LINE_STATUS IN ('C','F','V')
                    AND C.SINGLE_CHECK_USE IN ('C', 'N'))

GROUP BY A.PAYGROUP
ORDER BY A.PAYGROUP
end-SELECT

print 'Grand Total'          (+2,1)
do Format-Number(#tot_count1, $out, $countmask)
print $out      (0,{Pay018a_C_Count-1})
do Format-Number(#tot_chq_gross, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_gross})
do Format-Number(#tot_chq_taxes, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_taxes})
do Format-Number(#tot_chq_ded, $out, '9999999999999.99')
print $out      (0,{Pay018a_C_Total_deductions})
do Format-Number(#tot_chq_net, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Net_pay})


move 0 to #tot_count1
move 0 to #tot_chq_gross
move 0 to #tot_chq_taxes
move 0 to #tot_chq_ded
move 0 to #tot_chq_net

! **********************************************************************
! *     Summary of On-line Final Checks                                *
! **********************************************************************

print 'On-line Final Checks'                  (+2,1)

do Print-PayCheck-Summary-Hdg

begin-SELECT
A.PAYGROUP  &lpaygroup1    (+1,{PAY018A_C_PAYGROUP})
COUNT(*)    &lcount1       (+1,{PAY018A_C_COUNT})           EDIT 99999

   add &lcount1 to  #tot_count1
   add &lcount1 to  #run_tot_Lcount1

#ifdef DB2ALL
DECIMAL(SUM(B.TOTAL_GROSS), 15, 3)  &ltotal_gross        (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_TAXES), 15, 3)  &ltotal_taxes      (0,{PAY018A_C_TOTAL_TAXES}) EDIT 9999999999.99
DECIMAL(SUM(B.TOTAL_DEDUCTIONS), 15, 3) &ltotal_dedns  (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
DECIMAL(SUM(B.NET_PAY), 15, 3)  &ltotal_netpay         (0,{PAY018A_C_NET_PAY}) EDIT 9999999999.99
#else
SUM(B.TOTAL_GROSS)  &ltotal_gross       (0,{PAY018A_C_TOTAL_GROSS}) EDIT 9999999999.99
SUM(B.TOTAL_TAXES)  &ltotal_taxes       (0,{PAY018A_C_TOTAL_TAXES})    EDIT 9999999999.99
SUM(B.TOTAL_DEDUCTIONS) &ltotal_dedns   (0,{PAY018A_C_TOTAL_DEDUCTIONS}) EDIT 9999999999999.99
SUM(B.NET_PAY) &ltotal_netpay           (0,{PAY018A_C_NET_PAY})          EDIT 9999999999.99
#end-if

     add &ltotal_gross  to #tot_chq_gross
     add &ltotal_taxes  to #tot_chq_taxes
     add &ltotal_dedns  to #tot_chq_ded
     add &ltotal_netpay to #tot_chq_net
     add &ltotal_gross  to #run_tot_Lchq_gross
     add &ltotal_taxes  to #run_tot_Lchq_taxes
     add &ltotal_dedns  to #run_tot_Lchq_ded
     add &ltotal_netpay to #run_tot_Lchq_net

from PS_PAY_CALENDAR A,
     PS_PAY_CHECK B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = $Company
  AND A.PAY_END_DT = $PayEndDate
  AND A.COMPANY    = B.COMPANY
  AND A.PAYGROUP   = B.PAYGROUP
  AND A.PAY_END_DT = B.PAY_END_DT
  AND B.PAY_SHEET_SRC = 'L'
  AND EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              where C.COMPANY    = B.COMPANY
                    AND C.PAYGROUP   = B.PAYGROUP
                    AND C.PAY_END_DT = B.PAY_END_DT
                    AND C.OFF_CYCLE  = B.OFF_CYCLE
                    AND C.PAGE_NUM      = B.PAGE_NUM
                    AND C.LINE_NUM      = B.LINE_NUM
                    AND C.SEPCHK     = B.SEPCHK
                    AND C.PAY_LINE_STATUS IN ('C','F','V')
                    AND C.SINGLE_CHECK_USE IN ('C', 'N'))

GROUP BY A.PAYGROUP
ORDER BY A.PAYGROUP
end-SELECT

print 'Grand Total'          (+2,1)
do Format-Number(#tot_count1, $out, $countmask)
print $out      (0,{Pay018a_C_Count-1})
do Format-Number(#tot_chq_gross, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_gross})
do Format-Number(#tot_chq_taxes, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_taxes})
do Format-Number(#tot_chq_ded, $out, '9999999999999.99')
print $out      (0,{Pay018a_C_Total_deductions})
do Format-Number(#tot_chq_net, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Net_pay})

end-procedure

begin-procedure Pay018b-select

move 0 to #tot_count2
move 0 to #tot_reg_earns
move 0 to #tot_reg_earns_hrs
move 0 to #tot_reg_hrs
move 0 to #tot_reg_hrly_earns
move 0 to #tot_ot_hrs
move 0 to #tot_ot_hrly_earns

do Print-Pay-Earnings-Summary-Hdg

begin-SELECT

B.PAYGROUP  &offpaygroup2  (+1,{PAY018B_C_PAYGROUP})
COUNT(*) &count2           (0,{PAY018B_C_COUNT})          EDIT 99999

     add &count2 to #tot_count2
     add &count2 to #run_tot_count2

#ifdef DB2ALL
DECIMAL(SUM(B.REG_EARNS), 15, 3)  &tot_reg_earns     (0,{PAY018B_C_REG_EARNS})      EDIT 999999999.99
DECIMAL(SUM(B.REG_EARN_HRS), 15, 3) &tot_reg_earns_hrs   (0,{PAY018B_C_REG_EARN_HRS})   EDIT 999999999
DECIMAL(SUM(B.REG_HRS * 1), 15, 3) &tot_reg_hrs    (0,{PAY018B_C_REG_HRS})        EDIT 9999999.99
DECIMAL(SUM(B.REG_HRLY_EARNS), 15, 3) &tot_reg_hrly_earns (0,{PAY018B_C_REG_HRLY_EARNS}) EDIT 99999999999.99
DECIMAL(SUM(B.OT_HRS), 15, 3)  &tot_ot_hrs        (0,{PAY018B_C_OT_HRS})         EDIT 99999999.99
DECIMAL(SUM(B.OT_HRLY_EARNS), 15, 3) &tot_ot_hrly_earns  (0,{PAY018B_C_OT_HRLY_EARNS})  EDIT 9999999999.99
#else
SUM(B.REG_EARNS)  &tot_reg_earns          (0,{PAY018B_C_REG_EARNS})      EDIT 999999999.99
SUM(B.REG_EARN_HRS)  &tot_reg_earns_hrs       (0,{PAY018B_C_REG_EARN_HRS})   EDIT 999999999
SUM(B.REG_HRS * 1)  &tot_reg_hrs        (0,{PAY018B_C_REG_HRS})        EDIT 9999999.99
SUM(B.REG_HRLY_EARNS)  &tot_reg_hrly_earns     (0,{PAY018B_C_REG_HRLY_EARNS}) EDIT 99999999999.99
SUM(B.OT_HRS)   &tot_ot_hrs            (0,{PAY018B_C_OT_HRS})         EDIT 99999999.99
SUM(B.OT_HRLY_EARNS)  &tot_ot_hrly_earns      (0,{PAY018B_C_OT_HRLY_EARNS})  EDIT 9999999999.99
#end-if

    add &tot_reg_earns       to #tot_reg_earns
    add &tot_reg_earns_hrs   to #tot_reg_earns_hrs
    add &tot_reg_hrs         to #tot_reg_hrs
    add &tot_reg_hrly_earns  to #tot_reg_hrly_earns
    add &tot_ot_hrs          to #tot_ot_hrs
    add &tot_ot_hrly_earns   to #tot_ot_hrly_earns
    add &tot_reg_earns       to #run_tot_reg_earns
    add &tot_reg_earns_hrs   to #run_tot_reg_earns_hrs
    add &tot_reg_hrs         to #run_tot_reg_hrs
    add &tot_reg_hrly_earns  to #run_tot_reg_hrly_earns
    add &tot_ot_hrs          to #run_tot_ot_hrs
    add &tot_ot_hrly_earns   to #run_tot_ot_hrly_earns

from PS_PAY_CALENDAR A,
     PS_PAY_EARNINGS B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = $Company
  AND A.PAY_END_DT = $PayEndDate
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and B.PAY_LINE_STATUS IN ('C','F','V')
  AND B.SINGLE_CHECK_USE IN ('C', 'N')
GROUP BY B.PAYGROUP
ORDER BY B.PAYGROUP
end-SELECT

print 'Grand Total'         (+2,1)
do Format-Number(#tot_count2, $out, $countmask)
print $out      (0,{Pay018b_C_Count-1})
do Format-Number(#tot_reg_earns , $out, '999999999.99')
print $out      (0,{Pay018b_C_Reg_earns})
do Format-Number(#tot_reg_earns_hrs, $out, '999999999')
print $out      (0,{Pay018b_C_Reg_earn_hrs})
do Format-Number(#tot_reg_hrs, $out, '9999999.99')
print $out      (0,{Pay018b_C_Reg_hrs})
do Format-Number(#tot_reg_hrly_earns, $out, '99999999999.99')
print $out      (0,{Pay018b_C_Reg_hrly_earns})
do Format-Number(#tot_ot_hrs, $out, '99999999.99')
print $out      (0,{Pay018b_C_Ot_hrs})
do Format-Number(#tot_ot_hrly_earns, $out, '9999999999.99')
print $out      (0,{Pay018b_C_Ot_hrly_earns})

end-procedure


begin-procedure Pay018c-select
move 0 to #tot_count3
move 0 to #tot_oth_hrs
move 0 to #tot_oth_earns

begin-SELECT

B.PAYGROUP       &Paygroup3    (+1,{PAY018C_C_PAYGROUP}) on-break skiplines=1 before=Init-Oth-Paygroup-Totals after=Print-Oth-Paygroup-Totals
B.ERNCD          &Erncd        (0,{PAY018C_C_ERNCD})
COUNT(*)         &count3       (0,{PAY018C_C_COUNT})     EDIT 99999

  add &count3 to #tot_count3
  add &count3 to #tot_paygroup_count3
  add &count3 to #run_tot_count3

#ifdef DB2ALL
DECIMAL(SUM(B.OTH_HRS), 15, 3)   &oth_hrs      (0,{PAY018C_C_OTH_HRS})   EDIT 9999999.99
DECIMAL(SUM(B.OTH_EARNS), 15, 3) &oth_earns    (0,{PAY018C_C_OTH_EARNS}) EDIT 999999999.99
#else
SUM(B.OTH_HRS)           &oth_hrs      (0,{PAY018C_C_OTH_HRS})   EDIT 9999999.99
SUM(B.OTH_EARNS)         &oth_earns    (0,{PAY018C_C_OTH_EARNS}) EDIT 999999999.99
#end-if

  add &oth_hrs to #tot_oth_hrs
  add &oth_earns to #tot_oth_earns
  add &oth_hrs to #tot_paygroup_oth_hrs
  add &oth_earns to #tot_paygroup_oth_earns
  add &oth_hrs to #run_tot_oth_hrs
  add &oth_earns to #run_tot_oth_earns

from PS_PAY_CALENDAR A,
     PS_PAY_OTH_EARNS B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = $Company
  AND A.PAY_END_DT = $PayEndDate
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and EXISTS (SELECT 'x'
              FROM PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.ADDL_NBR = B.ADDL_NBR
                AND C.PAY_LINE_STATUS IN ('C','F','V')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP BY B.PAYGROUP,
         B.ERNCD
ORDER BY B.PAYGROUP,
         B.ERNCD
end-SELECT

print 'Grand Total'        (+2,1)
do Format-Number(#tot_count3, $out, $countmask)
print $out    (0,{Pay018c_C_Count-1})
do Format-Number(#tot_oth_hrs, $out, '9999999.99')
print $out   (0,{Pay018c_C_Oth_hrs})
do Format-Number(#tot_oth_earns, $out, '999999999.99')
print $out (0,{Pay018c_C_Oth_earns})
end-procedure


begin-procedure Print-Oth-Paygroup-Totals

print  'Paygroup Total'        (+2,1)
do Format-Number(#tot_paygroup_count3 , $out, $countmask)
print $out    (0,{Pay018c_C_Count-1})
do Format-Number(#tot_paygroup_oth_hrs, $out, '9999999.99')
print $out   (0,{Pay018c_C_Oth_hrs})
do Format-Number(#tot_paygroup_oth_earns, $out, '999999999.99')
print $out (0,{Pay018c_C_Oth_earns})

end-procedure

begin-procedure Init-Oth-Paygroup-Totals

move 0 to #tot_paygroup_count3
move 0 to #tot_paygroup_oth_hrs
move 0 to #tot_paygroup_oth_earns

end-procedure
begin-procedure Pay018d-select
move 0 to #tot_count4
move 0 to #tot_spcl_earns
print ' '                     (+1,1)

begin-SELECT
B.PAYGROUP    &Paygroup4      (+1,{PAY018D_C_PAYGROUP}) on-break skiplines=1 before=Init-Spec-Paygroup-Totals after=Print-Spec-Paygroup-Totals
B.ERNCD_SPCL  &Erncd_spcl     (0,{PAY018D_C_ERNCD_SPCL})
COUNT(*) &count4              (0,{PAY018D_C_COUNT})      EDIT 99999

  add &count4 to #tot_count4
  add &count4 to #tot_paygroup_count4
  add &count4 to #run_tot_count4

#ifdef DB2ALL
DECIMAL(SUM(B.SPCL_EARNS), 15, 3) &spcl_earns (0,{PAY018D_C_SPCL_EARNS}) EDIT 999999999.99
#else
SUM(B.SPCL_EARNS)    &spcl_earns (0,{PAY018D_C_SPCL_EARNS}) EDIT 999999999.99
#end-if

  add &spcl_earns to #tot_spcl_earns
  add &spcl_earns to #tot_paygroup_spec_earns
  add &spcl_earns to #run_tot_spcl_earns
  add &spcl_earns to #run_tot_paygroup_spec_earns

from PS_PAY_CALENDAR A,
     PS_PAY_SPCL_EARNS B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = $Company
  AND A.PAY_END_DT = $PayEndDate
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and EXISTS (SELECT 'x'
              FROM PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F','V')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP BY B.PAYGROUP,
         B.ERNCD_SPCL
ORDER BY B.PAYGROUP,
         B.ERNCD_SPCL
end-SELECT

print 'Grand Total'         (+2,1)
do Format-Number(#tot_count4, $out, $countmask)
print $out     (0,{Pay018d_C_Count-1})
do Format-Number(#tot_spcl_earns, $out, '999999999.99')
print $out (0,{Pay018d_C_Spcl_earns})

end-procedure

begin-procedure Print-Spec-Paygroup-Totals

print  'Paygroup Total'       (+2,1)
do Format-Number(#tot_paygroup_count4 , $out, $countmask)
print $out    (0,{PAY018D_C_COUNT-1})
do Format-Number(#tot_paygroup_spec_earns , $out, '999999999.99')
print $out   (0,{PAY018D_C_SPCL_EARNS})

end-procedure

begin-procedure Init-Spec-Paygroup-Totals

move 0 to #tot_paygroup_count4
move 0 to #tot_paygroup_spec_earns

end-procedure

begin-procedure Pay018e-select
move 0 to #tot_count5
move 0 to #tot_ded_cur
move 0 to #tot_ded_not_taken
move 0 to #tot_ded_cur_paybk
move 0 to #tot_ded_cur_refund

begin-SELECT

B.PAYGROUP   &Paygroup5          (+1,{PAY018E_C_PAYGROUP}) on-break skiplines=1 before=Init-Ded-Paygroup-Totals after=Print-Ded-Paygroup-Totals
B.PLAN_TYPE  &Plan_type          (0,{PAY018E_C_PLAN_TYPE})
B.DEDCD      &Dedcd              (0,{PAY018E_C_DEDCD})
B.DED_CLASS  &Ded_class          (0,{PAY018E_C_DED_CLASS})
B.REASON_NOT_TAKEN &B.Reason_Not_Taken


COUNT(*) &count5                 (0,{PAY018E_C_COUNT})         EDIT 99999

  add &count5 to #tot_count5
  add &count5 to #tot_paygroup_count5
  add &count5 to #run_tot_count5

#ifdef DB2ALL
DECIMAL(SUM(B.DED_CUR), 15, 3) &ded_cur (0,{PAY018E_C_DED_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.DED_NOT_TAKEN), 15, 3) &ded_not_taken (0,{PAY018E_C_DED_NOT_TAKEN}) EDIT 9999999999.99
DECIMAL(SUM(B.DED_CUR_PAYBK), 15, 3) &ded_cur_paybk (0,{PAY018E_C_DED_CUR_PAYBK}) EDIT 9999999999.99
DECIMAL(SUM(B.DED_CUR_REFUND), 15, 3) &ded_cur_refund (0,{PAY018E_C_DED_CUR_REFUND}) EDIT 9999999999.99
#else
SUM(B.DED_CUR)         &ded_cur          (0,{PAY018E_C_DED_CUR})    EDIT 9999999999.99
SUM(B.DED_NOT_TAKEN)   &ded_not_taken (0,{PAY018E_C_DED_NOT_TAKEN}) EDIT 9999999999.99
SUM(B.DED_CUR_PAYBK)   &ded_cur_paybk (0,{PAY018E_C_DED_CUR_PAYBK}) EDIT 9999999999.99
SUM(B.DED_CUR_REFUND)  &ded_cur_refund (0,{PAY018E_C_DED_CUR_REFUND}) EDIT 9999999999.99
#end-if

  if &Ded_Not_Taken > 0
    move 'REASON_NOT_TAKEN' to $FieldName
    move &B.Reason_Not_Taken to $FieldValue
    do Read-Translate-Table
    let $Reason_Not_Taken = &B.Reason_Not_Taken || ' ' || $XlatShortName
    print $Reason_Not_Taken  (0,{Pay018e_C_Reason_not_taken})
  end-if

  add &ded_cur to #tot_ded_cur
  add &ded_not_taken to #tot_ded_not_taken
  add &ded_cur_paybk to #tot_ded_cur_paybk
  add &ded_cur_refund to #tot_ded_cur_refund
  add &ded_cur to #tot_paygroup_ded_cur
  add &ded_not_taken to #tot_paygroup_ded_not_taken
  add &ded_cur_paybk to #tot_paygroup_ded_cur_paybk
  add &ded_cur_refund to #tot_paygroup_ded_cur_refund
  add &ded_cur to #run_tot_ded_cur
  add &ded_not_taken to #run_tot_ded_not_taken
  add &ded_cur_paybk to #run_tot_ded_cur_paybk
  add &ded_cur_refund to #run_tot_ded_cur_refund

from PS_PAY_CALENDAR A,
     PS_PAY_DEDUCTION B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = $Company
  AND A.PAY_END_DT = $PayEndDate
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and B.DED_CLASS <= 'K'
  and EXISTS (SELECT 'x'
              FROM PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F','V')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP BY B.PAYGROUP,
         B.PLAN_TYPE,
         B.DEDCD,
         B.DED_CLASS,
         B.REASON_NOT_TAKEN
ORDER BY B.PAYGROUP,
         B.PLAN_TYPE,
         B.DEDCD,
         B.DED_CLASS,
         B.REASON_NOT_TAKEN
end-SELECT

print 'Grand Total'               (+2,1)
do Format-Number(#tot_count5, $out, $countmask)
print $out          (0,{Pay018e_C_Count-1})
do Format-Number(#tot_Ded_cur, $out, '9999999999.99')
print $out          (0,{Pay018e_C_Ded_cur})
do Format-Number(#tot_Ded_not_taken, $out, '9999999999.99')
print $out    (0,{Pay018e_C_Ded_not_taken})
do Format-Number(#tot_Ded_cur_paybk, $out, '9999999999.99')
print $out    (0,{Pay018e_C_Ded_cur_paybk})
do Format-Number(#tot_Ded_cur_refund, $out, '9999999999.99')
print $out   (0,{Pay018e_C_Ded_cur_refund})
end-procedure

begin-procedure Print-Ded-Paygroup-Totals

print  'Paygroup Total'      (+2,1)
do Format-Number(#tot_paygroup_count5 , $out, $countmask)
print $out    (0,{Pay018e_C_Count-1})
do Format-Number(#tot_paygroup_Ded_cur, $out, '9999999999.99')
print $out          (0,{Pay018e_C_Ded_cur})
do Format-Number(#tot_paygroup_Ded_not_taken, $out, '9999999999.99')
print $out    (0,{Pay018e_C_Ded_not_taken})
do Format-Number(#tot_paygroup_Ded_cur_paybk, $out, '9999999999.99')
print $out    (0,{Pay018e_C_Ded_cur_paybk})
do Format-Number(#tot_paygroup_Ded_cur_refund, $out, '9999999999.99')
print $out   (0,{Pay018e_C_Ded_cur_refund})

end-procedure

begin-procedure Init-Ded-Paygroup-Totals

move 0 to #tot_paygroup_count5
move 0 to #tot_paygroup_ded_cur
move 0 to #tot_paygroup_ded_not_taken
move 0 to #tot_paygroup_ded_cur_paybk
move 0 to #tot_paygroup_ded_cur_refund

end-procedure

begin-procedure Pay018f-select
move 0 to #tot_count6
move 0 to #tot_ded_cur
move 0 to #tot_ded_not_taken
move 0 to #tot_ded_cur_paybk
move 0 to #tot_ded_cur_refund

begin-SELECT
F.PAYGROUP   &Paygroup6          (+1,{PAY018F_C_PAYGROUP}) on-break skiplines=1 before=Init-Contr-Paygroup-Totals after=Print-Contr-Paygroup-Totals
F.PLAN_TYPE &plan_type2          (0,{PAY018F_C_PLAN_TYPE})
F.DEDCD     &dedcd2              (0,{PAY018F_C_DEDCD})
F.DED_CLASS &ded_class2          (0,{PAY018F_C_DED_CLASS})
F.REASON_NOT_TAKEN  &F.Reason_Not_Taken

COUNT(*) &count6                 (0,{PAY018F_C_COUNT})  EDIT 99999

  add &count6 to #tot_count6
  add &count6 to #tot_paygroup_count6
  add &count6 to #run_tot_count6

#ifdef DB2ALL
DECIMAL(SUM(F.DED_CUR), 15, 3) &ded_cur2    (0,{PAY018F_C_DED_CUR}) EDIT 9999999999.99
DECIMAL(SUM(F.DED_NOT_TAKEN), 15, 3) &ded_not_taken2 (0,{PAY018F_C_DED_NOT_TAKEN}) EDIT 9999999999.99
DECIMAL(SUM(F.DED_CUR_PAYBK), 15, 3) &ded_cur_paybk2 (0,{PAY018F_C_DED_CUR_PAYBK}) EDIT 9999999999.99
DECIMAL(SUM(F.DED_CUR_REFUND), 15, 3) &ded_cur_refund2  (0,{PAY018F_C_DED_CUR_REFUND}) EDIT 9999999999.99
#else
SUM(F.DED_CUR)        &ded_cur2       (0,{PAY018F_C_DED_CUR}) EDIT 9999999999.99
SUM(F.DED_NOT_TAKEN)  &ded_not_taken2 (0,{PAY018F_C_DED_NOT_TAKEN}) EDIT 9999999999.99
SUM(F.DED_CUR_PAYBK)  &ded_cur_paybk2 (0,{PAY018F_C_DED_CUR_PAYBK}) EDIT 9999999999.99
SUM(F.DED_CUR_REFUND) &ded_cur_refund2 (0,{PAY018F_C_DED_CUR_REFUND}) EDIT 9999999999.99
#end-if

  if &ded_not_taken2 > 0
    move 'REASON_NOT_TAKEN' to $FieldName
    move &F.Reason_Not_Taken to $FieldValue
    do Read-Translate-Table
    let $Reason_Not_Taken = &F.Reason_Not_Taken || ' ' || $XlatShortName
    print $Reason_Not_Taken  (0,{Pay018f_C_Reason_not_taken})
  end-if

  add &ded_cur2 to #tot_ded_cur
  add &ded_not_taken2 to #tot_ded_not_taken
  add &ded_cur_paybk2 to #tot_ded_cur_paybk
  add &ded_cur_refund2 to #tot_ded_cur_refund
  add &ded_cur2 to #tot_paygroup_ded_cur
  add &ded_not_taken2 to #tot_paygroup_ded_not_taken
  add &ded_cur_paybk2 to #tot_paygroup_ded_cur_paybk
  add &ded_cur_refund2 to #tot_paygroup_ded_cur_refund
  add &ded_cur2 to #run_tot_ded_cur_ER
  add &ded_not_taken2 to #run_tot_ded_not_taken_ER
  add &ded_cur_paybk2 to #run_tot_ded_cur_paybk_ER
  add &ded_cur_refund2 to #run_tot_ded_cur_refund_ER

from PS_PAY_CALENDAR A,
     PS_PAY_DEDUCTION F
where [$SlctCalendar]
  AND F.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND F.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = $Company
  AND A.PAY_END_DT = $PayEndDate
  and A.COMPANY    = F.COMPANY
  and A.PAY_END_DT = F.PAY_END_DT
  and A.PAYGROUP   = F.PAYGROUP
  and F.DED_CLASS >= 'L'
  and EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              WHERE C.COMPANY = F.COMPANY
                AND C.PAYGROUP = F.PAYGROUP
                AND C.PAY_END_DT = F.PAY_END_DT
                AND C.OFF_CYCLE = F.OFF_CYCLE
                AND C.PAGE_NUM = F.PAGE_NUM
                AND C.LINE_NUM = F.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F','V')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP BY F.PAYGROUP,
         F.PLAN_TYPE,
         F.DEDCD,
         F.DED_CLASS,
         F.REASON_NOT_TAKEN
ORDER BY F.PAYGROUP,
         F.PLAN_TYPE,
         F.DEDCD,
         F.DED_CLASS,
         F.REASON_NOT_TAKEN
end-SELECT

print 'Grand Total'               (+2,1)
do Format-Number(#tot_count6, $out, $countmask)
print $out          (0,{Pay018f_C_Count-1})
do Format-Number(#tot_Ded_cur, $out, '9999999999.99')
print $out          (0,{Pay018f_C_Ded_cur})
do Format-Number(#tot_Ded_not_taken, $out, '9999999999.99')
print $out    (0,{Pay018f_C_Ded_not_taken})
do Format-Number(#tot_Ded_cur_paybk, $out, '9999999999.99')
print $out    (0,{Pay018f_C_Ded_cur_paybk})
do Format-Number(#tot_Ded_cur_refund, $out, '9999999999.99')
print $out   (0,{Pay018f_C_Ded_cur_refund})
end-procedure

begin-procedure Print-Contr-Paygroup-Totals

print  'Paygroup Total'       (+2,1)
do Format-Number(#tot_paygroup_count6 , $out, $countmask)
print $out    (0,{Pay018e_C_Count-1})
do Format-Number(#tot_paygroup_Ded_cur, $out, '9999999999.99')
print $out          (0,{Pay018f_C_Ded_cur})
do Format-Number(#tot_paygroup_Ded_not_taken, $out, '9999999999.99')
print $out    (0,{Pay018f_C_Ded_not_taken})
do Format-Number(#tot_paygroup_Ded_cur_paybk, $out, '9999999999.99')
print $out    (0,{Pay018f_C_Ded_cur_paybk})
do Format-Number(#tot_paygroup_Ded_cur_refund, $out, '9999999999.99')
print $out   (0,{Pay018f_C_Ded_cur_refund})

end-procedure


begin-procedure Init-Contr-Paygroup-Totals

move 0 to #tot_paygroup_count6
move 0 to #tot_paygroup_ded_cur
move 0 to #tot_paygroup_ded_not_taken
move 0 to #tot_paygroup_ded_cur_paybk
move 0 to #tot_paygroup_ded_cur_refund

end-procedure

begin-procedure Pay018g-select
move 0 to #tot_count7
move 0 to #tot_tax_cur
move 0 to #tot_tax_not_taken

begin-SELECT

B.PAYGROUP   &Paygroup7          (+1,{PAY018G_C_PAYGROUP}) on-break skiplines=1 before=Init-EETax-Paygroup-Totals after=Print-EETax-Paygroup-Totals
B.STATE

  move 'Y' to $add-tot-flag
  LET $State = RTRIM(&B.State, ' ')

  evaluate $State
      when = '$U'
           move 'FED' to $State
           break
      when = '$UAS'
           move 'A.S.' to $State
           move 'N' to $add-tot-flag
           break
      when = '$UGU'
           move 'Guam' to $State
           move 'N' to $add-tot-flag
           break
      when = '$UPR'
           move 'P.R.' to $State
           move 'N' to $add-tot-flag
           break
      when = '$UVI'
           move 'V.I.' to $State
           move 'N' to $add-tot-flag
           break
  end-evaluate

  print $State                   (0,{Pay018G_C_State})

  if $add-tot-flag = 'N'
    print '*'                    (0,{Pay018g_C_Star})
    move $memo to $PAY018_Legend
  end-if

B.LOCALITY                       (0,{PAY018G_C_LOCALITY})
B.RESIDENT                       (0,{PAY018G_C_RESIDENT})
B.TAX_CLASS

  move 'TAX_CLASS' to $FieldName
  move &B.Tax_Class to $FieldValue
  do Read-Translate-Table
  let $Tax_Class_Name = $XlatShortName
  print $Tax_Class_Name        (0,{Pay018g_C_Tax_class})

COUNT(*)   &count7               (0,{PAY018G_C_COUNT})   EDIT 99999

#ifdef DB2ALL
DECIMAL(SUM(B.TAX_CUR), 15, 3) &tax_cur2 (0,{PAY018G_C_TAX_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.TXGRS_CUR), 15, 3) &txgrs_cur (0,{PAY018G_C_TXGRS_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.NLGRS_CUR), 15, 3) &nlgrs_cur (0,{PAY018G_C_NLGRS_CUR}) EDIT 9999999999999.99
DECIMAL(SUM(B.TAX_NOT_TAKEN), 15, 3) &tax_not_taken (0,{PAY018G_C_TAX_NOT_TAKEN}) EDIT 9999999999.99
#else
SUM(B.TAX_CUR)       &tax_cur2         (0,{PAY018G_C_TAX_CUR}) EDIT 9999999999.99
SUM(B.TXGRS_CUR)     &txgrs_cur      (0,{PAY018G_C_TXGRS_CUR}) EDIT 9999999999.99
SUM(B.NLGRS_CUR)     &nlgrs_cur      (0,{PAY018G_C_NLGRS_CUR}) EDIT 9999999999999.99
SUM(B.TAX_NOT_TAKEN) &tax_not_taken  (0,{PAY018G_C_TAX_NOT_TAKEN}) EDIT 9999999999.99
#end-if

  if $add-tot-flag = 'Y'
    add &count7 to #tot_count7
    add &count7 to #tot_paygr_count7
    add &count7 to #run_tot_count7
    add &tax_cur2 to #tot_tax_cur
    add &tax_not_taken to #tot_tax_not_taken
    add &tax_cur2 to #tot_paygr_tax_cur2
    add &tax_not_taken to #tot_paygr_tax_not_taken
    add &tax_cur2 to #run_tot_tax_cur
    add &tax_not_taken to #run_tot_tax_not_taken
  end-if

from PS_PAY_CALENDAR A,
     PS_PAY_TAX B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = $Company
  AND A.PAY_END_DT = $PayEndDate
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and B.TAX_CLASS IN ('D','H', 'F','L','M','N','V','P','B','G','T','W','C','A','I','O','7') !HP99999
  and EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F','V')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by B.PAYGROUP,
         B.STATE,
         B.LOCALITY,
         B.RESIDENT,
         B.TAX_CLASS
ORDER by B.PAYGROUP,
         B.STATE,
         B.LOCALITY,
         B.RESIDENT,
         B.TAX_CLASS
end-SELECT

print 'Grand Total'         (+2,1)
do Format-Number(#tot_count7, $out, $countmask)
print $out    (0,{Pay018g_C_Count-1})
do Format-Number(#tot_tax_cur, $out, '9999999999.99')
print $out    (0,{Pay018g_C_Tax_cur})
do Format-Number(#tot_tax_not_taken, $out, '9999999999.99')
print $out (0,{Pay018g_C_Tax_not_taken})
end-procedure

begin-procedure Init-EETax-Paygroup-Totals

  move 0    to #tot_paygr_count7
  move 0.00 to #tot_paygr_tax_cur2
  move 0.00 to #tot_paygr_tax_not_taken

end-procedure

begin-procedure Print-EETax-Paygroup-Totals

  print 'Paygroup Total' (+2,1)
  print #tot_paygr_count7            (0,{Pay018g_C_Count-1})   edit :$countmask
  print #tot_paygr_tax_cur2          (0,{Pay018g_C_Tax_cur}) edit 9999999999.99
  print #tot_paygr_tax_not_taken     (0,{Pay018g_C_Tax_not_taken}) edit 9999999999.99

end-procedure

begin-procedure Pay018h-select
move 0 to #tot_count8
move 0 to #tot_tax_cur
move 0 to #tot_tax_not_taken

begin-SELECT
B.PAYGROUP      &paygroup8      (+1,{PAY018H_C_PAYGROUP}) on-break skiplines=1 before=Init-ERTax-Paygroup-Totals after=Print-ERTax-Paygroup-Totals
B.STATE         &B.STATE8

  move 'Y' to $add-tot-flag
  LET $State = RTRIM(&B.STATE8, ' ')

  evaluate $State
      when = '$U'
           move 'FED' to $State
           break
      when = '$UAS'
           move 'A.S.' to $State
           move 'N' to $add-tot-flag
           break
      when = '$UGU'
           move 'Guam' to $State
           move 'N' to $add-tot-flag
           break
      when = '$UPR'
           move 'P.R.' to $State
           move 'N' to $add-tot-flag
           break
      when = '$UVI'
           move 'V.I.' to $State
           move 'N' to $add-tot-flag
           break
  end-evaluate

  print $State                   (0,{Pay018h_C_State})

  if $add-tot-flag = 'N'
    print '*'                    (0,{Pay018h_C_Star})
    move $memo to $PAY018_Legend
  end-if

B.LOCALITY      &locality2       (0,{PAY018H_C_LOCALITY})
B.RESIDENT      &resident2       (0,{PAY018H_C_RESIDENT})
B.TAX_CLASS     &tax_class2

    move 'TAX_CLASS' to $FieldName
    move &tax_class2  to $FieldValue
    do Read-Translate-Table
    let $Tax_Class_Name = $XlatShortName
    print $Tax_Class_Name        (0,{Pay018h_C_Tax_class})

COUNT(*)   &count8               (0,{PAY018H_C_COUNT})   EDIT 99999

#ifdef DB2ALL
DECIMAL(SUM(B.TAX_CUR), 15, 3) &tax_cur3     (0,{PAY018H_C_TAX_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.TXGRS_CUR), 15, 3) &txgrs_cur2 (0,{PAY018H_C_TXGRS_CUR}) EDIT 9999999999.99
DECIMAL(SUM(B.NLGRS_CUR), 15, 3) &nlgrs_cur2 (0,{PAY018H_C_NLGRS_CUR}) EDIT 9999999999999.99
DECIMAL(SUM(B.TAX_NOT_TAKEN), 15, 3) &tax_not_taken2  (0,{PAY018H_C_TAX_NOT_TAKEN}) EDIT 9999999999.99
#else
SUM(B.TAX_CUR)         &tax_cur3         (0,{PAY018H_C_TAX_CUR}) EDIT 9999999999.99
SUM(B.TXGRS_CUR)       &txgrs_cur2     (0,{PAY018H_C_TXGRS_CUR}) EDIT 9999999999.99
SUM(B.NLGRS_CUR)       &nlgrs_cur2      (0,{PAY018H_C_NLGRS_CUR}) EDIT 9999999999999.99
SUM(B.TAX_NOT_TAKEN)   &tax_not_taken2  (0,{PAY018H_C_TAX_NOT_TAKEN}) EDIT 9999999999.99
#end-if

  if $add-tot-flag = 'Y'
    add &count8 to #tot_paygr_count8
    add &count8 to #run_tot_count8
    add &tax_cur3 to #tot_tax_cur
    add &tax_not_taken2 to #tot_tax_not_taken
    add &tax_cur3 to #tot_paygr_tax_cur_ER
    add &tax_not_taken2 to #tot_paygr_tax_not_taken_ER
    add &tax_cur3 to #run_tot_tax_cur_ER
    add &tax_not_taken2 to #run_tot_tax_not_taken_ER
  end-if

from PS_PAY_CALENDAR A,
     PS_PAY_TAX B
where [$SlctCalendar]
  AND B.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND B.PAGE_NUM BETWEEN #SlctPageFrom AND #SlctPageThru
  AND A.COMPANY    = $Company
  AND A.PAY_END_DT = $PayEndDate
  and A.COMPANY    = B.COMPANY
  and A.PAY_END_DT = B.PAY_END_DT
  and A.PAYGROUP   = B.PAYGROUP
  and
  (
     (B.STATE         IN ('$U', '$UAS', '$UGU', '$UPR', '$UVI')
  and B.TAX_CLASS not IN ('H','L','M','N','V','P','B','D','F','G','T','C', 'W', 'A','7') )  !PUBSEC
       OR
     (B.STATE     NOT IN ('$U', '$UAS', '$UGU', '$UPR', '$UVI')
  and B.TAX_CLASS not IN ('H','D','L','M','N','V','P','W','A','C','I','O') )  !PUBSEC
  )
  and EXISTS (SELECT 'x'
              from PS_PAY_EARNINGS C
              WHERE C.COMPANY = B.COMPANY
                AND C.PAYGROUP = B.PAYGROUP
                AND C.PAY_END_DT = B.PAY_END_DT
                AND C.OFF_CYCLE = B.OFF_CYCLE
                AND C.PAGE_NUM = B.PAGE_NUM
                AND C.LINE_NUM = B.LINE_NUM
                AND C.PAY_LINE_STATUS IN ('C','F','V')
                AND C.SINGLE_CHECK_USE IN ('C', 'N'))
GROUP by B.PAYGROUP,
         B.STATE,
         B.LOCALITY,
         B.RESIDENT,
         B.TAX_CLASS
ORDER by B.PAYGROUP,
         B.STATE,
         B.LOCALITY,
         B.RESIDENT,
         B.TAX_CLASS
end-SELECT

print 'Grand Total'         (+2,1)
do Format-Number(#tot_tax_cur, $out, '9999999999.99')
print $out    (0,{Pay018h_C_Tax_cur})
do Format-Number(#tot_tax_not_taken, $out, '9999999999.99')
print $out (0,{Pay018h_C_Tax_not_taken})
end-procedure

begin-procedure Init-ERTax-Paygroup-Totals

  move 0    to #tot_paygr_count8
  move 0.00 to #tot_paygr_tax_cur_ER
  move 0.00 to #tot_paygr_tax_not_taken_ER

end-procedure

begin-procedure Print-ERTax-Paygroup-Totals

  print 'Paygroup Total' (+2,1)
  print #tot_paygr_count8            (0,{Pay018g_C_Count-1})   edit :$countmask
  print #tot_paygr_tax_cur_ER          (0,{Pay018g_C_Tax_cur}) edit 9999999999.99
  print #tot_paygr_tax_not_taken_ER    (0,{Pay018g_C_Tax_not_taken}) edit 9999999999.99

end-procedure

begin-procedure Print-Summary-Report


do Company-Change


move 'A' to $rptcde
move '   ' to $Company
move '' to $PayEndDate
move 'Y'         to $sumry

#ifdef USA
  move 'US Payroll Summary Report' to $ReportTitle
#endif
#ifdef CANADA
  move 'Canadian Payroll Summary Report' to $ReportTitle
#endif

#ifdef USA
print 'Pay Check Summary '              (+1,1)
#endif

#ifdef CANADA
print 'Pay Cheque Summary'              (+1,1)
#endif

print 'All Checks (Including On-line)'  (+1,1)

do Print-PayCheck-Summary-Hdg

print 'Run Total'          (+2,1)
do Format-Number(#run_tot_count1, $out, $countmask)
print $out      (0,{Pay018a_C_Count-1})
do Format-Number(#run_tot_chq_gross, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_gross})
do Format-Number(#run_tot_chq_taxes, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_taxes})
do Format-Number(#run_tot_chq_ded, $out, '9999999999999.99')
print $out      (0,{Pay018a_C_Total_deductions})
do Format-Number(#run_tot_chq_net, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Net_pay})

print 'On-line Checks'                 (+2,1)

do Print-PayCheck-Summary-Hdg

print 'Run Total'          (+2,1)
do Format-Number(#run_tot_Ocount1, $out, $countmask)
print $out      (0,{Pay018a_C_Count-1})
do Format-Number(#run_tot_Ochq_gross, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_gross})
do Format-Number(#run_tot_Ochq_taxes, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_taxes})
do Format-Number(#run_tot_Ochq_ded, $out, '9999999999999.99')
print $out      (0,{Pay018a_C_Total_deductions})
do Format-Number(#run_tot_Ochq_net, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Net_pay})


print 'Batch Final Checks'                  (+2,1)

do Print-PayCheck-Summary-Hdg

print 'Run Total'          (+2,1)
do Format-Number(#run_tot_Kcount1, $out, $countmask)
print $out      (0,{Pay018a_C_Count-1})
do Format-Number(#run_tot_Kchq_gross, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_gross})
do Format-Number(#run_tot_Kchq_taxes, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_taxes})
do Format-Number(#run_tot_Kchq_ded, $out, '9999999999999.99')
print $out      (0,{Pay018a_C_Total_deductions})
do Format-Number(#run_tot_Kchq_net, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Net_pay})

print 'On-line Final Checks'                  (+2,1)

do Print-PayCheck-Summary-Hdg

print 'Run Total'          (+2,1)
do Format-Number(#run_tot_Lcount1, $out, $countmask)
print $out      (0,{Pay018a_C_Count-1})
do Format-Number(#run_tot_Lchq_gross, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_gross})
do Format-Number(#run_tot_Lchq_taxes, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Total_taxes})
do Format-Number(#run_tot_Lchq_ded, $out, '9999999999999.99')
print $out      (0,{Pay018a_C_Total_deductions})
do Format-Number(#run_tot_Lchq_net, $out, '9999999999.99')
print $out      (0,{Pay018a_C_Net_pay})

do Print-Pay-Earnings-Summary-Hdg

print 'Run Total'         (+2,1)
do Format-Number(#run_tot_count2, $out, $countmask)
print $out      (0,{Pay018b_C_Count-1})
do Format-Number(#run_tot_reg_earns , $out, '999999999.99')
print $out      (0,{Pay018b_C_Reg_earns})
do Format-Number(#run_tot_reg_earns_hrs, $out, '999999999')
print $out      (0,{Pay018b_C_Reg_earn_hrs})
do Format-Number(#run_tot_reg_hrs, $out, '9999999.99')
print $out      (0,{Pay018b_C_Reg_hrs})
do Format-Number(#run_tot_reg_hrly_earns, $out, '99999999999.99')
print $out      (0,{Pay018b_C_Reg_hrly_earns})
do Format-Number(#run_tot_ot_hrs, $out, '99999999.99')
print $out      (0,{Pay018b_C_Ot_hrs})
do Format-Number(#run_tot_ot_hrly_earns, $out, '9999999999.99')
print $out      (0,{Pay018b_C_Ot_hrly_earns})

do page_break
move 'C' to $rptcde

print 'Run Total'        (+2,1)
do Format-Number(#run_tot_count3, $out, $countmask)
print $out    (0,{Pay018c_C_Count-1})
do Format-Number(#run_tot_oth_hrs, $out, '9999999.99')
print $out   (0,{Pay018c_C_Oth_hrs})
do Format-Number(#run_tot_oth_earns, $out, '999999999.99')
print $out (0,{Pay018c_C_Oth_earns})

do page_break
move 'D' to $rptcde

print 'Run Total'         (+2,1)
do Format-Number(#run_tot_count4, $out, $countmask)
print $out     (0,{Pay018d_C_Count-1})
do Format-Number(#run_tot_spcl_earns, $out, '999999999.99')
print $out (0,{Pay018d_C_Spcl_earns})


do page_break
move 'E' to $rptcde

print 'Run Total'               (+2,1)
do Format-Number(#run_tot_count5, $out, $countmask)
print $out          (0,{Pay018e_C_Count-1})
do Format-Number(#run_tot_Ded_cur, $out, '9999999999.99')
print $out          (0,{Pay018e_C_Ded_cur})
do Format-Number(#run_tot_Ded_not_taken, $out, '9999999999.99')
print $out    (0,{Pay018e_C_Ded_not_taken})
do Format-Number(#run_tot_Ded_cur_paybk, $out, '9999999999.99')
print $out    (0,{Pay018e_C_Ded_cur_paybk})
do Format-Number(#run_tot_Ded_cur_refund, $out, '9999999999.99')
print $out   (0,{Pay018e_C_Ded_cur_refund})

do page_break
move 'F' to $rptcde

print 'Run Total'               (+2,1)
do Format-Number(#run_tot_count6, $out, $countmask)
print $out          (0,{Pay018f_C_Count-1})
do Format-Number(#run_tot_Ded_cur_ER, $out, '9999999999.99')
print $out          (0,{Pay018f_C_Ded_cur})
do Format-Number(#run_tot_Ded_not_taken_ER, $out, '9999999999.99')
print $out    (0,{Pay018f_C_Ded_not_taken})
do Format-Number(#run_tot_Ded_cur_paybk_ER, $out, '9999999999.99')
print $out    (0,{Pay018f_C_Ded_cur_paybk})
do Format-Number(#run_tot_Ded_cur_refund_ER, $out, '9999999999.99')
print $out   (0,{Pay018f_C_Ded_cur_refund})

do page_break
move 'G' to $rptcde

print 'Run Total'         (+2,1)
do Format-Number(#run_tot_count7, $out, $countmask)
print $out    (0,{Pay018g_C_Count-1})
do Format-Number(#run_tot_tax_cur, $out, '9999999999.99')
print $out    (0,{Pay018g_C_Tax_cur})
do Format-Number(#run_tot_tax_not_taken, $out, '9999999999.99')
print $out (0,{Pay018g_C_Tax_not_taken})

do page_break
move 'H' to $rptcde

print 'Run Total'         (+2,1)
do Format-Number(#run_tot_tax_cur_ER, $out, '9999999999.99')
print $out    (0,{Pay018h_C_Tax_cur})
do Format-Number(#run_tot_tax_not_taken_ER, $out, '9999999999.99')
print $out (0,{Pay018h_C_Tax_not_taken})

end-procedure

begin-procedure Print-PayCheck-Summary-Hdg

print 'Paygroup'                      (+2,{Pay018a_C_Paygroup})
print 'Count'                          (0,{Pay018a_C_Count})
print 'Total Gross'                    (0,{Pay018a_C_Total_gross})
print 'Total Taxes'                    (0,{Pay018a_C_Total_taxes})
print 'Total Deductions'               (0,{Pay018a_C_Total_deductions})
print 'Net Pay'                        (0,{Pay018a_C_Net_pay})
print '--------'                       (+1,{Pay018a_C_Paygroup})
print '-----'                          (0,{Pay018a_C_Count})
print '-------------'                  (0,{Pay018a_C_Total_gross})
print '-------------'                  (0,{Pay018a_C_Total_taxes})
print '----------------'               (0,{Pay018a_C_Total_deductions})
print '-------------'                  (0,{Pay018a_C_Net_pay})

end-procedure

begin-procedure Print-Pay-Earnings-Summary-Hdg

print 'Pay Earnings Summary'         (+5,1)

print ' '                              (+3,{Pay018b_C_Paygroup})
print ' '                              (0,{Pay018b_C_Count})
print ' '                              (0,{Pay018b_C_Reg_earns})
print 'Hours For'                      (0,{Pay018b_C_Reg_earn_hrs})
print ' '                              (0,{Pay018b_C_Reg_hrs})
print 'Earnings For'                   (0,{Pay018b_C_Reg_hrly_earns})
print ' '                              (0,{Pay018b_C_Ot_hrs})
print 'Earnings For'                   (0,{Pay018b_C_Ot_hrly_earns})

print ' '                              (+1,{Pay018b_C_Paygroup})
print ' '                              (0,{Pay018b_C_Count})
print 'Regular'                        (0,{Pay018b_C_Reg_earns})
print 'Regular'                        (0,{Pay018b_C_Reg_earn_hrs})
print 'Regular'                        (0,{Pay018b_C_Reg_hrs})
print 'Regular'                        (0,{Pay018b_C_Reg_hrly_earns})
print 'Overtime'                       (0,{Pay018b_C_Ot_hrs})
print 'Overtime'                       (0,{Pay018b_C_Ot_hrly_earns})

print 'Paygroup'                       (+1,{Pay018b_C_Paygroup})
print 'Count'                          (0,{Pay018b_C_Count})
print 'Earnings'                       (0,{Pay018b_C_Reg_earns})
print 'Earnings'                       (0,{Pay018b_C_Reg_earn_hrs})
print 'Hours'                          (0,{Pay018b_C_Reg_hrs})
print 'Hours'                          (0,{Pay018b_C_Reg_hrly_earns})
print 'Hours'                          (0,{Pay018b_C_Ot_hrs})
print 'Hours'                          (0,{Pay018b_C_Ot_hrly_earns})

print '--------'                       (+1,{Pay018b_C_Paygroup})
print '-----'                          (0,{Pay018b_C_Count})
print '------------'                   (0,{Pay018b_C_Reg_earns})
print '--------'                       (0,{Pay018b_C_Reg_earn_hrs})
print '----------'                     (0,{Pay018b_C_Reg_hrs})
print '--------------'                 (0,{Pay018b_C_Reg_hrly_earns})
print '-----------'                    (0,{Pay018b_C_Ot_hrs})
print '-------------'                  (0,{Pay018b_C_Ot_hrly_earns})

end-procedure

begin-procedure page_break

    if $End= 'Y'
      do Reset
    end-if

    new-page

    move ' ' to $PAY018_Legend
end-procedure



begin-procedure Company-Change

  add 1 to #PayEndChg
  do Page_Break

end-procedure


begin-procedure PayEndDate-Change
  add 1 to #PayEndChg
  do Page_Break

end-procedure

!******************************************************
!  RESET: Reset printer, print 'End of Report'        *
!         Note: Uncomment ENCODE statement to force   *
!               a printer reset at end of report      *
!******************************************************

begin-procedure Reset
  move 'Y' to $End_of_Report
  if #MsgFlagW
     print $MsgTextW (+2,1)
  end-if
end-procedure

begin-footing 4
  print $Pay018_Legend (1,1)
  if $End_of_Report = 'Y'
    !*******************************************************************
    !  Use a globalized string if one was gotten from stdhdgtr         *
    !*******************************************************************
    if $stdhdg_end_rep = ''
      print 'End of Report' (+0,1) center
    else
      print $stdhdg_end_rep (+0,1) center
    end-if
 !  encode '<27>E' into $Reset
    print $Reset (+0,+1)
  end-if
end-footing

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#include 'curdttim.sqc'  !Current Date and Time
#include 'payinit.sqc'
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers

#Include 'stdapi.sqc'    !Update Process API
#Include 'payrnctl.sqc'  !Get-Run-Control procedure
#Include 'getmsgct.sqc'  !Gets Message Catalog

