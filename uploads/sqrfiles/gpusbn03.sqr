!***********************************************************************
!  GPUSBN03:  Global Payroll US - Benefit Contributions Register
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                $Date:  2006/06/06:12:38:01                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'  !Set environment

Begin-Setup
  #Include 'ptpsl177.sqc'
End-Setup

#define col_sep                  1   !Column Separator
#define col_sep2                 2   !Column Separator
#define col_sep3                 3   !Column Separator
#define col_empl_name           36   !Employee Name
#define col_benefit              3   !Benefit Record
#define col_empl_id             12   !Employee ID
#define col_empl_stat            7   !Employee Status
#define col_dept_id             11   !Department ID
#define col_dept_name           20   !Department Name
#define col_this_per1           19   !This Period
#define col_ytd1                18   !YTD
#define col_this_per2           18   !This Period
#define col_ytd2                18   !YTD


begin-Program
  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Process-Main

  do Delete-Tmp

  display 'Report Ended at: ' noline
  do display-time
  do print-report-end

  do StdAPI-Term
end-Program

begin-procedure Init-Report
  do Init-DateTime
  do Init-Number

  do Get-Current-DateTime
  do StdAPI-Init

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

  move 'GPUSBN03' to $ReportID
  do Get-Report-Language
  let $ReportTitle  = $BEN003-REPORTTITLE
  display  'Report ID: ' noline
  display $ReportTitle

#Include 'ldplntyp.sqc'  !Load-Lookup Table with Plan Types

  do Initialization
end-procedure

!**********************************
! This procedure is used to read language-dependent text from the database.
!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BEN003 program ids

  do Init_Report_Translation('BEN003', $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('BEN003', 'REPORT_TITLE', $BEN003-REPORTTITLE, #CW)
  do Get_Field_Information ('BEN003', 'GRND_TOT',     $BEN003-GRND-TOT,    #CW)
  do Get_Field_Information ('BEN003', 'COMP_TOT',     $BEN003-COMP-TOT,    #CW)
  do Get_Field_Information ('BEN003', 'BEN_PGM_TOT',  $BEN003-BEN-PGM-TOT, #CW)
  do Get_Field_Information ('BEN003', 'BEN_PLAN_TOT', $BEN003-BEN-PLAN-TOT,#CW)
  do Get_Field_Information ('BEN003', 'PLAN_TYP_TOT', $BEN003-PLAN-TYP-TOT,#CW)
  do Get_Field_Information ('BEN003', 'YTD',          $BEN003-YTD,         #CW)
  do Get_Field_Information ('BEN003', 'THIS_PER',     $BEN003-THIS-PER,    #CW)
  do Get_Field_Information ('BEN003', 'PLAN_TYPE',    $BEN003-PLAN-TYPE,   #CW)
  do Get_Field_Information ('BEN003', 'EMPL_DED',     $BEN003-EMPL-DED,    #CW)
  do Get_Field_Information ('BEN003', 'COMP_CONTRIB', $BEN003-COMP-CONTRIB,#CW)


  do Get_Field_Information ('BEN1',   'EMPLOYEE',     $BEN1-EMPLOYEE,      #CW)
  do Get_Field_Information ('BEN1',   'EMPL',         $BEN1-EMPL,          #CW)
  do Get_Field_Information ('BEN1',   'NAME',         $BEN1-NAME,          #CW)
  do Get_Field_Information ('BEN1',   'BEN_PLAN3',    $BEN1-BEN-PLAN3,     #CW)
  do Get_Field_Information ('BEN1',   'DEPARTMENT',   $BEN1-DEPARTMENT,    #CW)
  do Get_Field_Information ('BEN1',   'STATUS',       $BEN1-STATUS,        #CW)
  do Get_Field_Information ('BEN1',   'ID',           $BEN1-ID,            #CW)
  do Get_Field_Information ('BEN1',   'PLAN_TYPE',    $BEN1-PLAN-TYPE,     #CW)
  do Get_Field_Information ('BEN1',   'BEN_PGM',      $BEN1-BEN-PGM,       #CW)
  do Get_Field_Information ('BEN1',   'CURRENCY2',    $BEN1-CURRENCY2,     #CW)
  do Get_Field_Information ('BEN1',   'BEN',          $BEN1-BEN,           #CW)
  do Get_Field_Information ('BEN1',   'RCD',          $BEN1-RCD,           #CW)
  do Get_Field_Information ('BEN1',   'END_OF_REPORT',$BEN1-END-OF-REPORT, #CW)

End-Procedure
!*---------------------------------------------------------------------*
begin-procedure Initialization
  do Get-Date-Codes
  create-array name=Totals size=7 -
    field=TotalName:char field=total:number:4 field=startCol:number:4
  put $BEN003-GRND-TOT     into Totals(1) TotalName
  put $BEN003-COMP-TOT     into Totals(2) TotalName
  put $BEN003-BEN-PGM-TOT  into Totals(3) TotalName
  put $BEN003-PLAN-TYP-TOT into Totals(4) TotalName
  put $BEN003-BEN-PLAN-TOT into Totals(5) TotalName
  put  87 107 128 148 into Totals(0) -
    startCol(0) startCol(1) startCol(2) startCol(3)
end-procedure

!***************************************************************************
!Get-Values: Retrieves report parameters
!***************************************************************************
begin-procedure Get-Values
  do Select-Parameters
  do Get-RptPeriod

  if $RptPeriod = 'M'
    move '=' to $Operator
  else
    move '<=' to $Operator
  end-if

  do Get-As-Of-Date
end-procedure

begin-procedure Ask-Values
  do Get-Reporting-Period
  if $RptPeriod = 'M'
    move '=' to $Operator
  else
    move '<=' to $Operator
  end-if

  do Ask-As-Of-Date
end-procedure

begin-heading 11
  #Include 'stdhtr09.sqc'

  do Get-Benefit-Program-Name
  print $BEN1-BEN-PGM         (+1,1,11)
  print $BenefitProgramName   (0,13)
  if #MultiCurr
    print $BEN1-CURRENCY2     (0,45,9)
    print $BenefitProgramCurr (0,+1)
  end-if

#ifdef MICROSOFT
  move $PlanID to $PlanID xxxx
#endif
#ifdef DB2ALL
  if Not (#UNICODE_ENABLED)
    move $PlanID to $PlanID xxxx
  end-if
#endif
  LookUp Plan-Types $PlanID $PlanType
  print $BEN1-PLAN-TYPE       (+1,1,9)
  print $PlanType             (0,13)

  print $BEN1-BEN-PLAN3       (+1,1,8)
  print $Benefit_Plan  (0,13)

!--- Heading first line
  print $BEN1-EMPLOYEE    (+2,1,{col_empl_name})
  print $BEN1-BEN         (0,+{col_sep},{col_benefit})
  print $BEN1-EMPLOYEE    (0,+{col_sep},{col_empl_id})
  print $BEN1-EMPL        (0,+{col_sep},{col_empl_stat})
  print $BEN1-DEPARTMENT  (0,+{col_sep},{col_dept_id})
  print $BEN1-DEPARTMENT  (0,+{col_sep},{col_dept_name})
  print '------'                (0,96,6)
  print $BEN003-EMPL-DED        (0,0,21)
  print '------'                (0,0,6)
  print '------'                (0,135)
  print $BEN003-COMP-CONTRIB    (0,0,23)
  print '------'                (0,0,6)
!--- Heading second line
  print $BEN1-NAME        (+1,1,{col_empl_name})
  print $BEN1-RCD         (0,+{col_sep},{col_benefit})
  print $BEN1-ID          (0,+{col_sep},{col_empl_id})
  print $BEN1-STATUS      (0,+{col_sep},{col_empl_stat})
  print $BEN1-ID          (0,+{col_sep},{col_dept_id})
  print $BEN1-NAME        (0,+{col_sep},{col_dept_name})
  print $BEN003-THIS-PER  (0,+{col_sep},{col_this_per1})
  print $BEN003-YTD       (0,+{col_sep},{col_ytd1})
  print $BEN003-THIS-PER  (0,+{col_sep},{col_this_per2})
  print $BEN003-YTD       (0,+{col_sep},{col_ytd2})

  print '='               (+1,1,{col_empl_name})            Fill
  print '='               (0,+{col_sep},{col_benefit})      Fill
  print '='               (0,+{col_sep},{col_empl_id})      Fill
  print '='               (0,+{col_sep},{col_empl_stat})    Fill
  print '='               (0,+{col_sep},{col_dept_id})      Fill
  print '='               (0,+{col_sep},{col_dept_name})    Fill
  print '='               (0,+{col_sep},{col_this_per1})    Fill
  print '='               (0,+{col_sep},{col_ytd1})         Fill
  print '='               (0,+{col_sep},{col_this_per2})    Fill
  print '='               (0,+{col_sep},{col_ytd2})         Fill

end-heading

begin-procedure Process-Main
  move $AsOfYYYY to #AsOfYYYY
  do Get-Calendar-Year-Id
  let #AsOfQtr = $AsOfQtr
  let #AsOfMonth = $AsOfMonth

begin-SELECT DISTINCT
J.COMPANY         ()     on-break print=never level=1 procedure=Company-Change
B.BENEFIT_PROGRAM ()     on-break print=never level=2 procedure=BenProgram-Change
A.PLAN_TYPE       ()     on-break print=never level=3 procedure=PlanType-Change
A.BENEFIT_PLAN    ()     on-break print=never level=4 procedure=BenPlan-change
P.EMPLID          (0,42,12) on-break skiplines=1 level=5 procedure=Employee-Change
E.BENEFIT_RCD_NBR ()     on-break print=never level=5 procedure=Employee-Change
  move &E.BENEFIT_RCD_NBR TO #Benefit-Rcd-Nbr
  do Format-Number(#Benefit-Rcd-Nbr, $out, '999')
  print $out (0,38,3)
P1.NAME            (0,1,35)
J.EMPL_STATUS     (0,55,7)
J.BUSINESS_UNIT
J.DEPTID          (0,63,11)
  if rtrim(&J.DeptID,' ') <> $DeptID
      or &J.BUSINESS_UNIT <> $BU
    let $BU = &J.BUSINESS_UNIT
    let $DeptID = rtrim(&J.DeptID,' ')
    do Get-Department-Name
  end-if
  print $DeptNameAbbrv        (0,75,20)
A.DED_CLASS,A.GPUS_MTD_DED,A.GPUS_QTD_DED,A.GPUS_YTD_DED

  move &J.Company         to $Company  !for use in Standard Heading
  move &B.Benefit_Program to $BenProgram
  move &A.Plan_Type       to $PlanID
  move &A.Benefit_Plan    to $Benefit_Plan

  if $RptPeriod = 'M'
    move &A.GPUS_MTD_DED to #Amount
  else
    move &A.GPUS_QTD_DED to #Amount
  end-if
  if &A.Ded_Class <= 'K'  !Employee Deduction
    ARRAY-ADD #Amount &A.GPUS_YTD_DED to TOTALS(6) TOTAL(0) TOTAL(1)
  else                    !Company Contribution
    ARRAY-ADD #Amount &A.GPUS_YTD_DED to TOTALS(6) TOTAL(2) TOTAL(3)
  end-if

P1.NAME_PSFORMAT

FROM  PS_PERSON P,
      PS_PERSON_NAME     P1,
      PS_PER_ORG_ASGN    E,
      PS_JOB             J,
      PS_PRIMARY_JOBS    PJ,
      PS_GPUS_BENRPT_TMP A,
      PS_BEN_PROG_PARTIC B
WHERE E.EMPLID     = P.EMPLID
  AND P1.EMPLID     = P.EMPLID
  AND PJ.EMPLID    = E.EMPLID
  AND PJ.EMPL_RCD  = E.EMPL_RCD
  AND PJ.PRIMARY_JOB_IND = 'Y'
  AND PJ.PRIMARY_JOB_APP = 'BN'
  AND PJ.EFFDT = (SELECT MAX (PJ1.EFFDT)
                    FROM PS_PRIMARY_JOBS PJ1
                   WHERE PJ1.EMPLID = PJ.EMPLID
                     AND PJ1.PRIMARY_JOB_APP = 'BN'
                     AND PJ1.EMPL_RCD = PJ.EMPL_RCD
                     AND PJ1.EFFDT <= $AsOfDate)
  AND J.EMPLID     = E.EMPLID
  AND J.EMPL_RCD  = E.EMPL_RCD
  AND J.EFFDT =
      (SELECT MAX(J1.EFFDT)
       FROM   PS_JOB J1
       WHERE J1.EMPLID    = J.EMPLID
         AND J1.EMPL_RCD = J.EMPL_RCD
         AND J1.EFFDT    <= $AsOfDate)
  AND J.EFFSEQ =
      (SELECT MAX(J2.EFFSEQ)
       FROM   PS_JOB J2
       WHERE J2.EMPLID    = J.EMPLID
         AND J2.EMPL_RCD = J.EMPL_RCD
         AND J2.EFFDT     = J.EFFDT)
  AND A.PROCESS_INSTANCE = #prcs_process_instance - 1       
  AND A.COMPANY       = J.COMPANY
  AND A.EMPLID        = E.EMPLID
  AND B.EMPLID = P.EMPLID
  AND B.EMPL_RCD = E.BENEFIT_RCD_NBR
  AND B.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_BEN_PROG_PARTIC
       WHERE EMPLID = E.EMPLID
         AND EMPL_RCD = E.BENEFIT_RCD_NBR
         AND EFFDT <= $AsOfDate)
ORDER BY J.COMPANY ASC, B.BENEFIT_PROGRAM ASC, A.PLAN_TYPE ASC, A.BENEFIT_PLAN ASC,
         P1.NAME_PSFORMAT ASC, P.EMPLID ASC, E.BENEFIT_RCD_NBR ASC
end-SELECT
  move 1 to #changeLevel
  move 'Y' to $End
  if RTRIM($Company, ' ') <> '' !implies some data selected
    do Print-Totals
  end-if
end-procedure

begin-procedure Company-Change
  move 2 to #changeLevel
  do Print-Totals
  new-page
end-procedure

begin-procedure BenProgram-Change
  move 3 to #changeLevel
  do Print-Totals
  new-page
end-procedure

begin-procedure PlanType-Change
  move 4 to #changeLevel
  do Print-Totals
  new-page
end-procedure

begin-procedure BenPlan-Change
  move 5 to #changeLevel
  do Print-Totals
  new-page
end-procedure

begin-procedure Employee-Change
  move 6 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure Print-Totals
  move 6 to #totalRow
  while #totalRow >= #changeLevel
    move #totalRow to #rollRow
    subtract 1 from #rollRow
    if #totalRow < 6  !if not the Employee's totals
      get $TotalName from Totals(#totalRow) TotalName
      print $TotalName (+2,70,20)
    end-if
    move 0 to #i
    while #i <= 3
      get #total from Totals(#totalRow) total(#i)
      get #startCol from Totals(0) startCol(#i)
      do Format-Number(#total, $out, '999,999,999,999.99mi')
      print $out (0,#startCol)
      array-add #total to Totals(#rollRow) total(#i)
      put 0 into Totals(#totalRow) total(#i)
      add 1 to #i
    end-while
    subtract 1 from #totalRow
  end-while
  if $End = 'Y'
    do Reset
  end-if
end-procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!*******************************
Begin-Procedure Print-Report-End
!*******************************
 move '*** ' to $REPORT-END
 concat $BEN1-END-OF-REPORT with $REPORT-END
 concat ' ***' with $REPORT-END
 print $REPORT-END (+3,1)  CENTER
End-Procedure

Begin-Procedure Delete-Tmp

 begin-SQL
 DELETE FROM PS_GPUS_BENRPT_TMP
   WHERE PROCESS_INSTANCE = #prcs_process_instance - 1
 end-SQL
 
End-Procedure

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgmnm.sqc'  !Get-Benefit-Program-Name procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'getrptpd.sqc'  !Get-Reporting-Period procedure
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers

#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
!*---------------------------------------------------------------------*
