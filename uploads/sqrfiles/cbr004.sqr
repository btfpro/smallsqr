!****************************************
! CBR004: Sample COBRA Enrollment Form
!****************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:08:58:13                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
! Function: Generate the COBRA Open Enrollment Form
! Input:   PS_CBR_PARTIC          -  Participant Level Record
!          PS_CBR_PARTIC_PLAN     -  Plan Type Level Record
!          PS_CBR_PARTIC_OPTN     -  Option Level Record
!          PS_CBR_PARTIC_COST     -  Cost Level Record
!          Enrollment Tables      -  Get Participant & Dependent/Benef
!                                    Current Elections
!          PS_PERSON_NAME         -  Get Participants Name 
!          PS_PERSON_ADDR         -  Get Participants Address
!          PS_PERSON_ADDROTH      -  Get Participants Address
!          PS_DEPENDENT_BENEF     -  Get Dependent/Benef Name & Address
!
! Output: 1 Enrollment Form Per Employee
!
!***********************************************************************

#Include 'setenv.sqc'
#Include 'cbrdefs.sqc'   !COBRA variables
#Include 'usarpt.sqc'    !Variables specific to USA

Begin-Setup
  #Include 'setupdb.sqc'

  Declare-Printer THIS_REPORT
      Type=HPLASERJET
      Font=5
      Point-Size=12
      Pitch=17
      Symbol-Set=0U      ! ASCII symbol set
  End-Declare

  Declare-Layout THIS_REPORT
      Orientation=Portrait
      Top-Margin= .4
      Left-Margin=.60
      Max-Lines=63
      Max-Columns=130
      Char-Width=7.2
      Line-Height=12     ! 72/printer_point-size
  End-Declare

  Declare-Report THIS_REPORT
      Printer-Type=HPLASERJET
      LayOut=THIS_REPORT
  End-Declare

End-Setup

!******************************
Begin-Procedure Init-Variables
!******************************
  #Define OE_Return_Dt '11/15/'   !Printed due date of form

  let #Heading_Count = 0          !Count number of regular headings
  let #Page_Maximum  = 57         !Maximum physical rows before bottom line
  let #Page_Max_Last = 40         !Maximum physical rows before last page footer
  let #Start_Row     = 1          !1st row to Print Header
  let #Start_Footer  = 41         !Row to start footer (does not include header)

  let #ccol1  = 25                !Coverage Code 1 col
  let #ccol2  = 34                !Coverage Code 2 col
  let #ccol3  = 42                !Coverage Code 3 col
  let #ccol4  = 50                !Coverage Code 4 col
  let #ccol5  = 59                !Employee Elections
  let #ccol6  = 72                !EmplId at bottom of page
  let #ccol7  = 36                !EmplId Name
  let #ccol1a = 31
  let #ccol2a = 39
  let #ccol3a = 47
  let #ccol4a = 55
  let #ccol5a = 63
  let #Bottom_Line = 56           !Line for bottom line of each page
  let #plan_count = 0
  let #plan_sub = 0
  let #plan_depth = 1

  let #stboxrow   = 8                 !start next dep/benef box rows down
  let #bencol1    = 10                !print beneficiaries heading

  let #drow_depth = 2                 !depth of dep lines
  let #drow0      = 9                 !first row to print dep name box
  let #drow1      = #drow0+3          !row to start first horz line

  let #dcol1      = {WIDTH}+{DEPCOL}  !column to start medical box
  let #dpcol      = 12                !column to start dental box
  let #depcol1    = 33                !print dep data in medical box
  let #depcol4    = 11                !print dependent heading
  let #depcol5    = 30                !print plan type headings
  let #depcol6    = 42                !print plan type headings
  let #depcol7    = 54                !print plan type headings
  let #depcol8    = 59                !print plan type headings
  let #depcol9    = 71


#ifndef MVS
#ifndef OS400
  encode '<27>E<27>&l0O<27>&l1E' into $reset_cd
#else
  encode '<39>E<39>&l0O<39>&l1E' into $reset_cd
#endif
#else
  encode '<39>E<39>&l0O<39>&l1E' into $reset_cd
#endif

End-Procedure

!******************************
Begin-Program
!******************************

  do Init-Report

  display 'Report Began at: ' noLine
  do Display-Time

  do Main-Report

  display 'Report Ended at: ' noline
  do display-time

  let $Form_Cnt = EDIT(#Form_Cnt, '99999')
  let $Form_Cnt = LTRIM($Form_Cnt, ' ')
  display '**** '   NoLine
  display $Form_Cnt NoLine
  display ' COBRA Open Enrollment Forms Printed ****'
  display ''

  do StdAPI-Term

End-Program

!******************************
Begin-Procedure Init-Report
!******************************

  do Init-Datetime
  do Init-Number
  do Get-Current-DateTime
  do Format-Datetime($AsofToday,$AsofMDY, {DEFMDY}, '' , '')

  display ''
  display 'CBR004: Open Enrollment Forms'

  do Init-Variables
  do StdAPI-Init

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

  Alter-Printer Font=5 Point-Size={NORM}         !Normal point size.

End-Procedure

!******************************
Begin-Procedure Ask-Values
!******************************

  do Ask-Period-Begin-End-Dates
  do Ask-Reprint-Prompt

End-Procedure

!******************************
Begin-Procedure Get-Values
!******************************

  do Select-Parameters
  do Get-Period-Begin-End-Dates
  do Format-Datetime($PeriodBegin, $effdt, {DEFMDY}, '' , '')
  do Format-Datetime($PeriodBegin, $out, {DEFCMP}, '', '')
  let $Tmp_YYYY   = SUBSTR($out,1,4)
  let $PlanYear = $Tmp_YYYY
  do Convert-To-DTU-Date($PeriodBegin, $dtu_begin)
  do DTU-Add-Years($dtu_begin, -1, $OE_Return_Year)
  let $Rtn_YYYY   = SUBSTR($OE_Return_Year,1,4)
  do Get-Reprint-Prompt
  
End-Procedure

!******************************
Begin-Procedure Main-Report
!******************************
  create-array name=plan_partic size={MAX_PLANS} field=pln_type:char
                                                 field=pln_ben:char
                                                 field=pln_cvg:char
                                                 field=pln_cvg_beg_dt:char
                                                 field=pln_cvg_end_dt:char

  if $Reprint = 'Y'
     if $ReprintAll = 'Y'
        do Reprint-All
     else
        do Reprint-Forms
     end-if
  else
     do Print-Forms
  end-if

End-Procedure

Begin-Procedure Reprint-All

  do Select-Events

End-Procedure

Begin-Procedure Reprint-Forms

Begin-Select
PRN.PRINT_ID
PRNP.EMPLID
PRNP.BENEFIT_RCD_NBR
PRNP.COBRA_EVENT_ID

  let $Where = 'AND (P.EMPLID = '''  || &PRNP.EmplId || ''') And '
  let $TempVal = edit(&PRNP.BENEFIT_RCD_NBR, '9')
  let $Where = $Where || '(P.BENEFIT_RCD_NBR = ' || $TempVal     || ') And '
  let $TempVal = edit(&PRNP.Cobra_Event_Id, '9')
  let $Where = $Where || '(P.COBRA_EVENT_ID = '  || $TempVal     || ') '

  do Select-Events

FROM  PS_CBR_PRNT        PRN,
      PS_CBR_PRNT_PARTIC PRNP
WHERE PRN.PRINT_ID = $Reprint_Id
AND   PRN.PRINT_ID = PRNP.PRINT_ID
ORDER BY PRNP.EMPLID ASC,
         PRNP.BENEFIT_RCD_NBR ASC,
         PRNP.COBRA_EVENT_ID ASC
End-Select

End-Procedure

!******************************
Begin-Procedure Print-Forms
!******************************

  do Select-Events

End-Procedure

!******************************
Begin-Procedure Select-Events
!******************************

Begin-Select Distinct
HB.EMPLID
HB.EMPL_RCD
HB.COBRA_EVENT_ID
BP.BENEFIT_PROGRAM

  add 1 to #form_cnt
  let #plan_count = 0
  let #page_number = 0
  let $emplid = &HB.EMPLID
  let #emplrcd = &HB.EMPL_RCD
  let #event_id = &HB.COBRA_EVENT_ID
  let $BenPgm = &BP.BENEFIT_PROGRAM
  let $ltr_getter = '00'

  do Get-Plan-Data
  do Print-Enroll-Form

  do Reset-Printer

FROM PS_HEALTH_BENEFIT HB,
     PS_BEN_PROG_PARTIC BP
WHERE HB.COBRA_EVENT_ID <> 0
  AND HB.COVERAGE_ELECT = 'E'
  AND HB.COVERAGE_BEGIN_DT = (SELECT MAX(MB.COVERAGE_BEGIN_DT)
                              FROM PS_HEALTH_BENEFIT MB
                             WHERE MB.EMPLID=HB.EMPLID
                                AND MB.EMPL_RCD=HB.EMPL_RCD
                                AND MB.PLAN_TYPE=HB.PLAN_TYPE
                                AND MB.COBRA_EVENT_ID=HB.COBRA_EVENT_ID
                                AND MB.BENEFIT_NBR=HB.BENEFIT_NBR
                                AND MB.COVERAGE_BEGIN_DT <= $PeriodBegin)
  AND BP.EMPLID = HB.EMPLID
  AND BP.EMPL_RCD = HB.EMPL_RCD
  AND BP.COBRA_EVENT_ID=HB.COBRA_EVENT_ID
  AND BP.EFFDT = (SELECT MAX(ME.EFFDT)
                  FROM PS_BEN_PROG_PARTIC ME
                  WHERE BP.EMPLID = ME.EMPLID
                    AND BP.EMPL_RCD = ME.EMPL_RCD
                    AND BP.COBRA_EVENT_ID = ME.COBRA_EVENT_ID
                    AND ME.EFFDT <= $PeriodBegin)
End-Select

End-Procedure

!******************************
Begin-Heading {HEADING_LINES}
!******************************

  do Format-Datetime($PeriodBegin, $Out, {DEFCMP}, '', '')

  let $Tmp_Text = $PlanYear || ' COBRA ENROLLMENT FORM - OPEN ENROLLMENT'
  if #Page_number > 1
    let $Tmp_Text = $Tmp_Text || ' CONTINUED'
  end-if

  add 1 to #Heading_Count

  Alter-Printer Font=5 Point-Size={NORM}        !Normal point size.
  let $head1 = UPPER($Tmp_Text)

  print $head1                                 (#Start_Row,1) bold

  if $PrintReprint = 'Y'
     print 'REPRINT'                           (+0,65) bold
  end-if

  graphic (+0, 1, {NORM_LNLENGTH}) Horz-Line {NORM_LNSIZE}

end-Heading

!******************************
Begin-Procedure Bottom-Line
!******************************

  add 1 to #Page_Number

  Graphic (#Bottom_Line,1,{NORM_LNLENGTH}) horz-line {NORM_LNSIZE}

  print $name                              (+1,1)
  let $Page_Number = EDIT(#Page_Number,'00')
  let $Page_Number = 'Page ' || $Page_Number
  print $Page_Number                       (+0,#ccol2)
  let #col = #ccol6 - 1
  print #Form_Cnt                          (+0,#col) edit 0000

End-Procedure

!************************************
Begin-Procedure Get-Plan-Data
!************************************


  let $Emp10 = 'N'
  let $Emp11 = 'N'
  let $Emp14 = 'N'

Begin-Select
HP.PLAN_TYPE
HP.COVRG_CD
HP.COVERAGE_BEGIN_DT
HP.BENEFIT_PLAN

   let $PlanType = &HP.PLAN_TYPE
   let $CovrgCd = &HP.COVRG_CD
   let $BenPlan = &HP.BENEFIT_PLAN
   let $BegDate = &HP.COVERAGE_BEGIN_DT

   if $PlanType = '10'
      let $Emp10 = 'Y'
   end-if
   if $PlanType = '11'
      let $Emp11 = 'Y'
   end-if
   if $PlanType = '14'
      let $Emp14 = 'Y'
   end-if

   do Get-Coverage-End
   do Store-Plan-Data

FROM  PS_HEALTH_BENEFIT HP
WHERE HP.EMPLID = $emplid
  AND HP.EMPL_RCD = #emplrcd
  AND HP.COBRA_EVENT_ID = #event_id
  AND HP.COVERAGE_ELECT = 'E'
  AND HP.COVERAGE_BEGIN_DT = (SELECT MAX(MP.COVERAGE_BEGIN_DT)
                              FROM PS_HEALTH_BENEFIT MP
                              WHERE MP.EMPLID=HP.EMPLID
                                AND MP.EMPL_RCD=HP.EMPL_RCD
                                AND MP.COBRA_EVENT_ID=HP.COBRA_EVENT_ID
                                AND MP.PLAN_TYPE=HP.PLAN_TYPE
                                AND MP.COVERAGE_BEGIN_DT <= $PeriodBegin)
End-Select

End-Procedure

Begin-Procedure Get-Coverage-End

Begin-Select
CE.COVERAGE_BEGIN_DT

   let $EndDate = &CE.COVERAGE_BEGIN_DT

FROM PS_HEALTH_BENEFIT CE
WHERE CE.EMPLID = $emplid
  AND CE.EMPL_RCD = #emplrcd
  AND CE.PLAN_TYPE = $PlanType
  AND CE.COBRA_EVENT_ID = #event_id
  AND CE.COVERAGE_ELECT = 'T'
  AND CE.COVERAGE_BEGIN_DT = (SELECT MIN(MM.COVERAGE_BEGIN_DT)
                              FROM PS_HEALTH_BENEFIT MM
                              WHERE MM.EMPLID=CE.EMPLID
                                AND MM.EMPL_RCD=CE.EMPL_RCD
                                AND MM.PLAN_TYPE=CE.PLAN_TYPE
                                AND MM.COVERAGE_ELECT = 'T'
                                AND MM.COBRA_EVENT_ID=CE.COBRA_EVENT_ID
                                AND MM.COVERAGE_BEGIN_DT>=$BegDate)
End-Select

End-Procedure

!************************************
Begin-Procedure Store-Plan-Data
!************************************

  move 'PLAN_TYPE' to $FieldName
  move $PlanType to $FieldValue
  do Read-Translate-Table

  let $pln = RTRIM($XlatShortName, ' ')

  let $endt = $EndDate
  do Format-Datetime($BegDate, $begdt, {DEFMDY}, '' , '')
  do Format-Datetime($EndDate, $endt, {DEFMDY}, '' , '')

  do Get-Ben-Plan-Descr

  let $ben = $descr
  let $CovrgEffdt = $AsofDate
  do Get-Covrg-Code-Descr
  let $cvg = $CovrgDescrShort

  put $pln $ben $cvg $begdt $endt into plan_partic(#plan_count)

  let #plan_count = #plan_count + 1

End-Procedure

!*************************************
Begin-Procedure Print-Enroll-Form
!*************************************

  let $get_name_only = 'N'
  if $ltr_getter = '00'
     do Get-Empl-Name-Address
  else
     do Get-Dep-Name-Address
  end-if

!------------------------------------------------
! Print Name and Address of employee or dependent
!------------------------------------------------

  print $name                             (+1,1)
  print 'EmplID:'                         (+0,30)
  print $emplid                           (+0,40)
  print 'Benefit Pgm:'                    (+0,50)
  print $BenPgm                           (+0,60)

  let $addr1 = RTRIM($address1, ' ')
  let $addr2 = RTRIM($address2, ' ')
  let $addr3 = RTRIM($city_state, ' ')

  if $addr1 = ''
     let $addr1 = $addr2
     let $addr2 = $addr3
     let $addr3 = ''
  end-if

  if $addr2 = ''
     let $addr2 = $addr3
     let $addr3 = ''
  end-if

  if $addr1 = ''
     let $addr1 = $addr2
     let $addr2 = ''
  end-if

  print $addr1                            (+1,1)
  print 'Empl Rcd#:'                      (+0,30)
  print #emplrcd                          (+0,40) edit {INTGR_MASK}
  print 'Effective Date:'                 (+0,50)
  print $effdt                            (+0,60)

  if $addr2 <> ''
     print $addr2                         (+1,1)
  else
     print $addr3                         (+1,1)
  end-if

  print 'Event ID:'                       (+0,30)
  print #event_id                         (+0,40) edit {INTGR_MASK}
  print 'Date of Birth:'                  (+0,50)
  do Format-Datetime($birthdt, $dob, {DEFMDY}, '' , '')
  print $dob                              (+0,60)

  if $addr2 <> ''
     print $addr3                         (+1,1)
  else
     print ' '                            (+1,1)
  end-if

  print 'Related ID:'                     (+0,30)
  print $ltr_getter                       (+0,40)
  print 'SSN:'                            (+0,50)
  print $ssn                              (+0,60)

!---------------------------------------
! Print Current Coverages
!---------------------------------------
  print 'Coverage'                        (+2,{COL3})
  print 'Coverage'                        (+0,{COL4})
  print 'Coverage'                        (+0,{COL5})

  print 'Current Coverages:'              (+1,1)
  print 'Option'                          (+0,{COL3})
  print 'Begin Date'                      (+0,{COL4})
  print 'End Date'                        (+0,{COL5})

  let #plan_sub = 0
  While #plan_sub < #plan_count
     get $pln $ben $cvg $begdt $endt from plan_partic(#plan_sub)
     print $pln                            (+1,{COL1})
     print $ben                            (+0,{COL2})
     print $cvg                            (+0,{COL3})
     print $begdt                          (+0,{COL4})
     print $endt                           (+0,{COL5})
     let #plan_sub = #plan_sub + 1
  End-While

!---------------------------------------
! Print Body of Form
!---------------------------------------

  graphic (+2,1, {NORM_LNLENGTH}) Horz-Line {NORM_LNSIZE}

  let $Tmp_Text = 'The attached page(s) lists all of the COBRA benefit options '
  let $Tmp_Text = $Tmp_Text || 'and associated monthly costs for '
  let $Tmp_Text = $Tmp_Text || $PlanYear || '.  '
  let $Tmp_Text = $Tmp_Text || 'If you wish to make any changes after you have reviewed the '
  let $Tmp_Text = $Tmp_Text || 'COBRA options for ' || $PlanYear || ', designate below your '
  let $Tmp_Text = $Tmp_Text || 'new coverage choices and dependents for ' || $PlanYear
  let $Tmp_Text = $Tmp_Text || '.  You may ony choose those coverages for which '
  let $Tmp_Text = $Tmp_Text || 'you are eligible.  If you do not '
  let $Tmp_Text = $Tmp_Text || 'make a selection, the coverage in which you are currently '
  let $Tmp_Text = $Tmp_Text || 'enrolled will continue in ' || $PlanYear || '.  '
  let $Tmp_Text = $Tmp_Text || 'Please note that these choices will remain in effect throughout'
  let $Tmp_Text = $Tmp_Text || ' ' || $PlanYear || ' unless you experience a '
  let $Tmp_Text = $Tmp_Text || ' change in family status or your COBRA coverage expires.'

  print $Tmp_Text                          (+1,1) wrap 110 7


  let $Tmp_Text = 'If you make any changes, sign and return your completed '
  let $Tmp_Text = $Tmp_Text || 'enrollment form to the COBRA Administrator '
  let $Tmp_Text = $Tmp_Text || 'by ' || {OE_Return_Dt} || $Rtn_YYYY || '.  '
  let $Tmp_Text = $Tmp_Text || 'Please keep a copy of this form for your records.'
  print $Tmp_Text                          (+1,1) bold wrap 110 3

  graphic (+1, 1, {NORM_LNLENGTH}) Horz-Line {NORM_LNSIZE}

  print 'OPTIONS:  Designate the plans in which you wish to enroll.' (+2,1) bold

  do Print-Plan-Options

  graphic (+1, 1, {NORM_LNLENGTH}) Horz-Line {NORM_LNSIZE}

  do Process-Dep-Benef

  do Print-Signature-Line

End-Procedure

!*********************************
Begin-Procedure Get-Ben-Plan-Descr
!*********************************

 let $Descr = 'Descr not available'

Begin-Select

DD.DESCRSHORT

 let $Descr = RTRIM(&DD.Descrshort,' ')

FROM PS_BENEF_PLAN_TBL DD
WHERE DD.BENEFIT_PLAN   = $BenPlan
AND   DD.PLAN_TYPE      = $PlanType
AND   DD.EFFDT = (SELECT MAX(EFFDT)
                  FROM   PS_BENEF_PLAN_TBL
                  WHERE  BENEFIT_PLAN = DD.BENEFIT_PLAN
                  AND    PLAN_TYPE    = DD.PLAN_TYPE
                  AND    EFFDT       <= $PeriodBegin)

End-Select

End-Procedure

!**********************************
Begin-Procedure Print-Plan-Options
!**********************************

print ' '                             (+1,1)
Begin-Select
PO.PLAN_TYPE

  let $PlanType = &PO.PLAN_TYPE

  move 'PLAN_TYPE' to $FieldName
  move $PlanType to $FieldValue
  do Read-Translate-Table

  let $pln = RTRIM($XlatShortName, ' ')

  print $pln                          (+1,1) bold
  print ': __________'                (+0,10) bold

FROM PS_BEN_DEFN_PLAN PO
WHERE PO.BENEFIT_PROGRAM = $BenPgm
  AND PO.COBRA_PLAN = 'Y'
  AND PO.EFFDT = (SELECT MAX(MPO.EFFDT)
                  FROM PS_BEN_DEFN_PLAN MPO
                  WHERE MPO.BENEFIT_PROGRAM = PO.BENEFIT_PROGRAM
                    AND MPO.EFFDT <= $PeriodBegin)

End-Select

End-Procedure

!***********************************
Begin-Procedure Print-Signature-Line
!***********************************

  if ((#Current-Line + 5) >= #Page_Maximum)
    New-Page
  end-if

  print 'SIGNATURE:'                             (+5,1) bold
  print '______________________________________' (+0,+0)
  print 'DATE:'                                  (+0,+5)  bold
  print '______________'                         (+0,+0)

  do Bottom-Line

End-Procedure

!*******************************
Begin-Procedure Reset-Printer
!*******************************

  New-Page

End-Procedure

!*******************************
Begin-Procedure Display-Time
!*******************************

  do Get-Current-Datetime
  display $AsofToday NoLine
  display ', '       NoLine
  display $AsOfNow   NoLine
  display ''

End-Procedure

!***************************************************************************

#Include 'readxlat.sqc' !Get translate Values
#Include 'askprd.sqc'   !Ask period begin/end dates
#Include 'number.sqc'   !Number formatting routines
#Include 'datetime.sqc' !Date formatting routines
#Include 'datemath.sqc' !Date Arithmetic
#Include 'cbraddr.sqc'  !COBRA Address
#Include 'curdttim.sqc' !Get-Current-DateTime procedure
#Include 'rotname1.sqc' !Rotates name field
#Include 'cbrdeps.sqc'  !Dependent Processing
#Include 'getcvgcd.sqc' !Get-Covrg-Code-Descr procedure

#Include 'stdapi.sqc'   !Update Process API
#Include 'cbrncntl.sqc' !Get application run control parameters
#Include 'cbgetval.sqc' !Get CBR values mask routines
#Include 'cbaskval.sqc' !Ask CBR values
!**************************** End of Report ********************************


