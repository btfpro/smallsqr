!***********************************************************************
!  TRN008:  Create Scenario By Criterias                               *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:40:54                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!                                                                      *
! This SQR allow to create a new scenario with a set of criterias.     *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-Heading 7
  #Include 'stdhdgtr.sqc'
end-Heading


begin-procedure Init-Report
  move 'TRN008' to $ReportID
  move $BaseCurr to $ReportCurr
  move $BaseRtType to $ReportRtType
  move 'W' to $ReportMsgType  !Warning
  move 'Y' to $ReadyForPlan
  print ' ' (1,40)

! Process Scheduler setup
  do Stdapi-Init
  if $prcs_process_instance = ''
    !No Prompt
  else
     do Select-Parameters
  end-if

  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')

end-procedure


begin-procedure Get-Values

  let $language_cd = $prcs_language_cd
  do Get-As-Of-Date
  do Get-TRN008-Param

  let $FirstOperator = substr($WhereClause,2,4)
  if substr($FirstOperator,1,3) = 'AND'
     let $WhereClause = ('1=1' || $WhereClause)
  end-if

end-procedure


begin-procedure Process-Main

  do Create-Scenario

end-procedure


!***********************************************************************
! Create Scenario                                                      *
!***********************************************************************

begin-procedure Create-Scenario
DISPLAY 'CREATE-SCENARIO'
let $sql-statement = 'trn008.SQR,CREATE-SCENARIO,Delete,PS_TRN_SIMULATION'

begin-SQL ON-ERROR=SQL-ERROR
DELETE FROM PS_TRN_SIMULATION
WHERE BUDGET_PERIOD = $BudgetPeriod
AND BUSINESS_UNIT = $BusinessUnit
AND SCENARIO = $NewScenario
end-SQL

begin-SQL ON-ERROR=SQL-ERROR
DELETE FROM PS_TRN_SCENARIO
WHERE BUDGET_PERIOD = $BudgetPeriod
AND BUSINESS_UNIT = $BusinessUnit
AND SCENARIO = $NewScenario
end-SQL

DISPLAY 'CREATE-SCENARIO 2'

begin-SQL ON-ERROR=SQL-ERROR
DELETE FROM PS_TMP_SIMULATION WHERE PROCESS_INSTANCE = 0
end-SQL

begin-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_TMP_SIMULATION (PROCESS_INSTANCE
 , BUDGET_PERIOD
 , BUSINESS_UNIT
 , DEPTID
 , SCENARIO
 , DEMAND_ID
 , DEMAND_APPROVED
 , DMND_F_APVD_FRA
 , DMND_M_APVD_FRA
 , DMND_ONQ_APVD_FRA
 , DMND_OQ_APVD_FRA
 , DMND_E_APVD_FRA
 , DMND_AM_APVD_FRA
 , DMND_IC_APVD_FRA)
SELECT DISTINCT
0,
A.BUDGET_PERIOD,
A.BUSINESS_UNIT,
A.DEPTID,
'NEW',
A.DEMAND_ID,
1,
0,
0,
0,
0,
0,
0,
0
FROM [$FromClause]
WHERE [$WhereClause]
end-SQL

begin-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_TMP_SIMULATION (PROCESS_INSTANCE
 , BUDGET_PERIOD
 , BUSINESS_UNIT
 , DEPTID
 , SCENARIO
 , DEMAND_ID
 , DEMAND_APPROVED
 , DMND_F_APVD_FRA
 , DMND_M_APVD_FRA
 , DMND_ONQ_APVD_FRA
 , DMND_OQ_APVD_FRA
 , DMND_E_APVD_FRA
 , DMND_AM_APVD_FRA
 , DMND_IC_APVD_FRA)
SELECT DISTINCT 0, Z.BUDGET_PERIOD, Z.BUSINESS_UNIT, Z.DEPTID, 'NEW', Z.DEMAND_ID, 0,
0, 0, 0, 0, 0, 0, 0
FROM PS_TRN_SIMULATION Z, PS_TRN_SCENARIO Y
WHERE Z.BUDGET_PERIOD = $BudgetPeriod
AND Z.BUSINESS_UNIT = $BusinessUnit
AND Z.BUDGET_PERIOD = Y.BUDGET_PERIOD
AND Z.BUSINESS_UNIT = Y.BUSINESS_UNIT
AND Z.SCENARIO = Y.SCENARIO
AND Z.DEPTID = Y.DEPTID
AND Y.SCENARIO_STATUS = 'A'
AND NOT EXISTS (SELECT 'X'
        FROM [$FromClause]
        WHERE [$WhereClause]
        AND Z.BUDGET_PERIOD = A.BUDGET_PERIOD
        AND Z.BUSINESS_UNIT = A.BUSINESS_UNIT
        AND Z.DEPTID = A.DEPTID
        AND Z.DEMAND_ID = A.DEMAND_ID)
end-SQL

begin-SQL ON-ERROR=SQL-ERROR
UPDATE PS_TMP_SIMULATION SET SCENARIO = $NewScenario
WHERE PROCESS_INSTANCE = 0
end-SQL

begin-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_TRN_SCENARIO (BUDGET_PERIOD
 , BUSINESS_UNIT
 , DEPTID
 , SCENARIO
 , SCENARIO_STATUS
 , GLOBAL_SCENARIO_SW)
SELECT DISTINCT BUDGET_PERIOD,
BUSINESS_UNIT,
DEPTID,
SCENARIO,
'I',
'Y'
FROM PS_TMP_SIMULATION
WHERE BUDGET_PERIOD = $BudgetPeriod
AND BUSINESS_UNIT = $BusinessUnit
AND SCENARIO = $NewScenario
AND PROCESS_INSTANCE = 0
end-SQL

begin-SQL ON-ERROR=SQL-ERROR
INSERT INTO PS_TRN_SIMULATION
(BUDGET_PERIOD, BUSINESS_UNIT, DEPTID, SCENARIO, DEMAND_ID, DEMAND_APPROVED, DMND_F_APVD_FRA,
DMND_M_APVD_FRA, DMND_ONQ_APVD_FRA, DMND_OQ_APVD_FRA, DMND_E_APVD_FRA, DMND_AM_APVD_FRA, DMND_IC_APVD_FRA)
SELECT BUDGET_PERIOD, BUSINESS_UNIT, DEPTID, SCENARIO, DEMAND_ID, DEMAND_APPROVED, DMND_F_APVD_FRA,
DMND_M_APVD_FRA, DMND_ONQ_APVD_FRA, DMND_OQ_APVD_FRA, DMND_E_APVD_FRA, DMND_AM_APVD_FRA, DMND_IC_APVD_FRA
FROM PS_TMP_SIMULATION WHERE PROCESS_INSTANCE = 0
end-SQL

begin-SQL ON-ERROR=SQL-ERROR
DELETE FROM PS_TMP_SIMULATION WHERE PROCESS_INSTANCE = 0
end-SQL

if $ActiveNew = 'Y'
! New Scenario begin Active
DISPLAY 'CREATE-SCENARIO 3'
begin-SQL ON-ERROR=SQL-ERROR
UPDATE PS_TRN_SCENARIO
SET SCENARIO_STATUS = 'I'
WHERE BUDGET_PERIOD = $BudgetPeriod
AND BUSINESS_UNIT = $BusinessUnit
end-SQL

begin-SQL ON-ERROR=SQL-ERROR
UPDATE PS_TRN_SCENARIO
SET SCENARIO_STATUS = 'A'
WHERE BUDGET_PERIOD = $BudgetPeriod
AND SCENARIO = $NewScenario
AND BUSINESS_UNIT = $BusinessUnit
end-SQL
else

! New Scenario begin Inactive
DISPLAY 'CREATE-SCENARIO 4'
begin-SQL ON-ERROR=SQL-ERROR
UPDATE PS_TRN_SCENARIO
SET SCENARIO_STATUS = 'I'
WHERE BUDGET_PERIOD = $BudgetPeriod
AND SCENARIO = $NewScenario
AND BUSINESS_UNIT = $BusinessUnit
end-SQL
end-if

begin-SELECT
A.BUDGET_PERIOD
A.BUSINESS_UNIT
A.SCENARIO
A.DEPTID
B.DEMAND_ID
B.DEPT_DEMAND
B.DEPT_DMND_F_FRA
B.DEPT_DMND_M_FRA
B.DEPT_DMND_ONQ_FRA
B.DEPT_DMND_OQ_FRA
B.DEPT_DMND_E_FRA
B.DEPT_DMND_AM_FRA
B.DEPT_DMND_IC_FRA
  do Update-Approved
FROM PS_TRN_SCENARIO A, PS_TRN_DEMAND_DEPT B, PS_TRN_SIMULATION C
WHERE A.BUDGET_PERIOD = $BudgetPeriod
AND A.BUSINESS_UNIT = $BusinessUnit
AND A.SCENARIO = $NewScenario
AND A.BUDGET_PERIOD = B.BUDGET_PERIOD
AND A.DEPTID = B.DEPTID
AND A.BUSINESS_UNIT = B.BUSINESS_UNIT
AND A.BUDGET_PERIOD = C.BUDGET_PERIOD
AND A.BUSINESS_UNIT = C.BUSINESS_UNIT
AND A.SCENARIO = C.SCENARIO
AND A.DEPTID = C.DEPTID
AND B.DEMAND_ID = C.DEMAND_ID
AND C.DEMAND_APPROVED = 1
end-SELECT
end-procedure

begin-procedure Update-Approved
DISPLAY 'UPDATE-APPROVED'
begin-SQL ON-ERROR=SQL-ERROR
UPDATE PS_TRN_SIMULATION
SET DEMAND_APPROVED = &B.DEPT_DEMAND
,DMND_F_APVD_FRA = &B.DEPT_DMND_F_FRA
,DMND_M_APVD_FRA = &B.DEPT_DMND_M_FRA
,DMND_ONQ_APVD_FRA = &B.DEPT_DMND_ONQ_FRA
,DMND_OQ_APVD_FRA = &B.DEPT_DMND_OQ_FRA
,DMND_E_APVD_FRA = &B.DEPT_DMND_E_FRA
,DMND_AM_APVD_FRA = &B.DEPT_DMND_AM_FRA
,DMND_IC_APVD_FRA = &B.DEPT_DMND_IC_FRA
WHERE BUDGET_PERIOD = &A.BUDGET_PERIOD
AND BUSINESS_UNIT = &A.BUSINESS_UNIT
AND DEPTID = &A.DEPTID
AND SCENARIO = &A.SCENARIO
AND DEMAND_ID = &B.DEMAND_ID
end-SQL
end-procedure


#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines

#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'

