!***********************************************************************
!  TAX914:    Form 6559 - Transmitter Report & Magnetic Media Summary  *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:07:27:04                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!        Platform Test %include must be lowercase                      *
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
! HP00001       Add $PublicSector indicator                            *
! HP00002       PublicSector enhancement                               *
! FED0001       Add $FederalProduct indicator                          *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup32.sqc' !Printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-report

begin-procedure Init-Report
  do Get-EandG                                                          !HP00001
  do Get-FederalProduct                                                 !FED0001
  move 'TAX914' to $ReportID
  move 'Form 6559 - Transmitter Report & Summary of Magnetic Media'
    to $ReportTitle
  display ''
  display 'Printing Transmitter Report & Summary of Magnetic Media'

  do Init-DateTime
  do Init-Number

  do Stdapi-Init
  do Get-Current-DateTime
  do Initialization
end-procedure


begin-heading 7
  #Include 'stdhdg01.sqc'
  print 'Company'              (3,1)
  print $A.W2_Reporting_Co     (,+2)
  let $TaxYear = 'Tax Year ' || $CalYear
  print $TaxYear               (3,)    center
  print '6559'                 (+3,3)
  print 'Box'                  (+1,3)
  print 'Description'          (,10)
  print 'Contents / Amount'    (,65)
end-heading

begin-procedure Initialization
  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

  move $910Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear
  do Get-Tax-Reporting-Run-Controls

  if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
    display ''
    display 'Current Year is not one greater than Tax Reporting Year.'
    display 'Current Year is    ' noline
    display  #saveAsOfYear  9999
    display 'Tax Reporting Year ' noline
    display &TX.Balance_Year
    input $Answer maxlen=1 'Do you want to continue? (Y/N)'
    uppercase $Answer
    if $Answer <> 'Y'
      stop
    end-if

  end-if

Begin-Select
RC960.CONTACT_NAME_SSA
RC960.TELEPHONE_NBR
RC960.PHONE_EXTN

FROM PS_TAX960_PARM RC960

End-Select

  if rtrim(&RC960.CONTACT_NAME_SSA, ' ') = ''
    Show 'MMREF Parameters must be set up on SETUP Menu.'
    Show 'Re-execute after establishing MMREF Parameters.'
    Stop
  End-if

  Let $RC960.CONTACT_NAME_SSA = translate(&RC960.CONTACT_NAME_SSA,',','')

end-procedure

begin-procedure Process-Main
  move &TX.Company       to $XCompany  !TX.Company is the Transmitter
  move &TX.Balance_Year to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

  do Get-Transmitter-Data
  do Print-Transmitter-Data
  new-page

begin-SELECT
A.W2_REPORTING_CO
A.DESCR
A.FEDERAL_EIN
A.ADDRESS1
A.ADDRESS2
A.CITY
A.STATE
A.POSTAL
A.COUNTRY
A.OTHER_EIN
A.MQGE_EMPLOYEES                                                        !HP99999

  move &A.W2_Reporting_Co to $A.W2_Reporting_Co
  move &A.MQGE_EMPLOYEES  to $A.MQGE_Employees                          !HP99999

  let $Get_ThirdParty = 'Y'                                             !HP00002
  let $Process_MQGE   = 'N'                                             !HP99999
  do Get-W2-Count

  if $A.MQGE_Employees = 'Y' and                                        !HP00002
     ($PublicSector = 'Y' or $FederalProduct = 'Y')                 !HP00002 FED0001
      let $Process_MQGE = 'Y'                                           !HP99999
      do Get-W2-Count                                                   !HP99999
  end-if                                                                !HP00001

FROM  PS_W2_COMPANY A
WHERE A.CALENDAR_YEAR   = &TX.Balance_Year
  AND A.W2_REPORTING_CO = A.COMPANY
  AND A.W2_REPORTING_CO <> ' '
  AND A.TAXFORM_ID = 'W'
ORDER BY A.W2_REPORTING_CO
end-SELECT
end-procedure

begin-procedure Get-W2-Count
  move 0 to #W2_Count

begin-SELECT DISTINCT
EE.TAXFORM_ID             () on-break level=1 print=never after=After-TAXFORM
EE.EMPLID
  add 1 to #W2_Count
  move &EE.TaxForm_ID     to $TaxForm_ID
FROM  PS_YE_EE EE, PS_W2_COMPANY C1                                     !HP00001
WHERE C1.W2_REPORTING_CO = &A.W2_Reporting_Co
  AND EE.COMPANY         = C1.COMPANY
  AND EE.CALENDAR_YEAR   = C1.CALENDAR_YEAR
  ! AND EE.TAXFORM_ID      = C1.TAXFORM_ID
  AND EE.CALENDAR_YEAR   = &TX.Balance_Year
  ! AND EE.TAXFORM_ID      = 'W'
  AND EE.PROCESS_FLAG   <> 'V'
  AND (EXISTS (SELECT 'X' FROM PS_INSTALLATION IN1
               WHERE IN1.PUBLIC_SECTOR <> 'Y' and IN1.FED <> 'Y')
      OR
       EXISTS (SELECT 'X' FROM PS_YE_DATA WD1
               WHERE  WD1.COMPANY        = EE.COMPANY
                 AND  WD1.EMPLID         = EE.EMPLID
                 AND  WD1.CALENDAR_YEAR  = EE.CALENDAR_YEAR
                 AND  WD1.TAXFORM_ID     = EE.TAXFORM_ID
                 AND  WD1.SEQUENCE_NUMBER = 1
                 AND  WD1.MEDICARE_ONLY   = $Process_MQGE))
end-SELECT
end-procedure

begin-procedure After-TAXFORM

  if #W2_Count > 0

    if $PublicSector = 'N' or $FederalProduct = 'N' or $Get_ThirdParty = 'Y'   !HP00002 FED0001
        do Prompt-Third-Party
        let $Get_ThirdParty = 'N'                                       !HP00002
    else                                                                !HP00002
        move 0 to #ThirdParty                                           !HP00002
    end-if                                                              !HP00002

    do Load-Amounts
    do Print-6599
    NEW-PAGE
  end-if

  move 0 to #W2_Count

end-procedure

begin-procedure Load-Amounts
  do Zero-Amounts
  do assign-year-end-variables
begin-SELECT
C2.W2_REPORTING_CO
D.BOX
D.TAXFORM_ID
#ifdef DB2ALL
DECIMAL(SUM(D.W2_AMOUNT),15,3) &D.W2_Amount
#else
SUM(D.W2_AMOUNT) &D.W2_Amount
#endif
  move &D.W2_Amount to #Amount

   let $D.Box = RTRIM(&D.Box,' ')
   if $Taxform_ID <> 'P'
     evaluate $D.Box
       when = $YE_Fed_Wages                        !Federal wages
         add #Amount to #01
         break
       when = $YE_Fed_Tax                          !Federal tax
         add #Amount to #02
         break
       when = $YE_SS_Wages                         !SS wages
         add #Amount to #03
         break
       when = $YE_SS_Tax                           !SS Tax
         add #Amount to #04
         break
       when = $YE_Med_Wages                         !Medicare wages
         add #Amount to #05
         break
       when = $YE_Med_Tax                          !Medicare tax
         add #Amount to #06
         break
       when = $YE_SS_Tips                          !SS tips
         add #Amount to #07
         break
       when = $YE_Alloc_Tips                       !Allocated tips
         add #Amount to #08
         break
       when = $YE_Adv_EIC                          !EIC
         add #Amount to #09
         break
     end-evaluate
   else
     evaluate $D.Box
       when = $YE_Wages                            !PR wages
         add #Amount to #01
         break
       when = $YE_Tax_Withheld                     !PR tax
         add #Amount to #02
         break
       when = $YE_SS_Wages                         !SS wages
         add #Amount to #03
         break
       when = $YE_SS_Tax                           !SS Tax
         add #Amount to #04
         break
       when = $YE_Med_Wages                        !Medicare wages
         add #Amount to #05
         break
       when = $YE_Med_Tax                          !Medicare tax
         add #Amount to #06
         break
       when = $YE_SS_Tips                          !SS tips
         add #Amount to #07
         break
      end-evaluate
   end-if

FROM  PS_YE_AMOUNTS D, PS_YE_EE E1, PS_W2_COMPANY C2                    !HP00001
WHERE C2.W2_REPORTING_CO = &A.W2_Reporting_Co
  AND D.COMPANY          = C2.COMPANY
  AND D.CALENDAR_YEAR    = C2.CALENDAR_YEAR
  AND D.CALENDAR_YEAR    = &TX.Balance_Year
  AND D.SEQUENCE_NUMBER  = 1
  AND ((D.BOX IN ($YE_Fed_Wages,$YE_Fed_Tax,$YE_SS_Wages,$YE_SS_Tax,
                $YE_Med_Wages,$YE_Med_Tax,$YE_SS_Tips,$YE_Alloc_Tips,
                $YE_Adv_EIC)
           AND D.TAXFORM_ID <> 'P' )
       OR
       (D.BOX IN ($YE_Wages,$YE_Tax_Withheld,$YE_SS_Wages,$YE_SS_Tax,$YE_Med_Wages,
                  $YE_Med_Tax, $YE_SS_Tips)
        AND D.TAXFORM_ID = 'P'))
  AND D.COMPANY          = E1.COMPANY
  AND D.EMPLID           = E1.EMPLID
  AND D.CALENDAR_YEAR    = E1.CALENDAR_YEAR
  AND D.TAXFORM_ID       = E1.TAXFORM_ID
  AND D.TAXFORM_ID       = $TaxForm_ID
  AND E1.PROCESS_FLAG   <> 'V'
  AND (EXISTS (SELECT 'X' FROM PS_INSTALLATION IN2
               WHERE IN2.PUBLIC_SECTOR <> 'Y' and IN2.FED <> 'Y')
      OR
       EXISTS (SELECT 'X' FROM PS_YE_DATA WD2
                WHERE WD2.COMPANY        = E1.COMPANY
                  AND WD2.EMPLID         = E1.EMPLID
                  AND WD2.CALENDAR_YEAR  = E1.CALENDAR_YEAR
                  AND WD2.TAXFORM_ID     = E1.TAXFORM_ID
                  AND WD2.SEQUENCE_NUMBER = 1
                  AND WD2.MEDICARE_ONLY   = $Process_MQGE))
GROUP BY C2.W2_REPORTING_CO, C2.FEDERAL_EIN, D.TAXFORM_ID, D.BOX
end-SELECT
end-procedure

begin-procedure Zero-Amounts
  move '' to $FedEIN
  move '' to $OtherEIN
  move 0 to #01
  move 0 to #02
  move 0 to #03
  move 0 to #04
  move 0 to #05
  move 0 to #06
  move 0 to #07
  move 0 to #08
  move 0 to #09
end-procedure

begin-procedure Print-6599
  print '11    Employer summary of W-2 information'  (+2,4)

  print '      Employer name                  '      (+2,4)
  print &A.Descr                                     (,65)

  move &A.Federal_EIN to $FedEIN 099999999
  print '      Employer identification number '      (+2,4)
  if $A.MQGE_Employees = 'Y' and                                               !HP00002
     ($PublicSector = 'Y' or $FederalProduct = 'Y')                            !HP00002 FED0001 
     if $Process_MQGE = 'Y'                                                    !HP00002
          print ' (MQGE)'  (,+1)                                               !HP00002
      else                                                                     !HP00002
          print ' (NON-MQGE)'  (,+1)                                           !HP00002
      end-if                                                                   !HP00002
  end-if                                                                       !HP00002
  print $FedEIN                                      (,65)   edit xx-xxxxxxx

  print '      Other EIN                      '      (+2,4)
  if &A.Other_EIN <> 0
    move &A.Other_EIN to $OtherEIN 099999999
    print $OtherEIN                                  (,65)   edit xx-xxxxxxx
  end-if

  move 'TAXFORM_ID'     to $FieldName
  move $TaxForm_ID      to $FieldValue
  do Read-Translate-Table
  move $XlatShortName   to $TaxForm_Name

  print '      Number of Forms    '                  (+2,4)
  print $TaxForm_Name                                (,28)
  print #W2_Count                                    (,75)    edit 999,999

  move '99999999999999.99' to $Fmt

  print '      Social security (OASDI) wages    '    (+2,4)
  do Format-Number(#03, $out, $Fmt)
  print $out                                         (,65)

  print '      Social security (OASDI) tips     '    (+2,4)
  do Format-Number(#07, $out, $Fmt)
  print $out                                         (,65)

  print '      Wages, tips, other compensation'      (+2,4)
  do Format-Number(#01, $out, $Fmt)
  print $out                                         (,65)

  print '      Income tax withheld            '      (+2,4)
  do Format-Number(#02, $out, $Fmt)
  print $out                                         (,65)

  print '      Social security (OASDI) tax withheld' (+2,4)
  do Format-Number(#04, $out, $Fmt)
  print $out                                         (,65)

  print '      Medicare wages and tips        '      (+2,4)
  do Format-Number(#05, $out, $Fmt)
  print $out                                         (,65)

  print '      Medicare tax withheld          '      (+2,4)
  do Format-Number(#06, $out, $Fmt)
  print $out                                         (,65)

  print '      Advance Earned Income Credit   '      (+2,4)
  do Format-Number(#09, $out, $Fmt)
  print $out                                         (,65)

  print '      Income tax withheld by third party'   (+2,4)
  do Format-Number(#ThirdParty, $out, $Fmt)
  print $out                                         (,65)
end-procedure

begin-procedure Print-Transmitter-Data
  let $City = RTRIM(&X.City,' ')
  print '1     Name & address of transmitter  '  (+2,4)
  print &X.Descr                                 (,65)
  print &X.Address1                              (+1,65)
  print $City                                    (+1,65)
  print &X.State                                 ()       edit ,bxx
  if &X.Country <> 'USA'
    Print $Zip                                   (,+1)
    print &X.Country                             (,+1)
  else
    move $Zip            to $ZipExtsn ~~~~~~xxxx
    if instr($Zip,'-',6) = 0
    and $ZipExtsn <> '    '
      let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
    end-if
    Print $Zip                                      (,+1)
  end-if

  move &X.Federal_EIN to $TransFedEIN 099999999
  print '2     Employer identification number of transmitter'  (+2,4)
  print $TransFedEIN                                   (,65) edit xx-xxxxxxx

  print '3     Number of reporting media this file '           (+2,4)
  print '(not maintained in database)'               (,65)

  print '4     Name & address of contact person  '             (+2,4)
  print $RC960.CONTACT_NAME_SSA                      (,65)

  print '5     Telephone number of contact person'             (+2,4)
  print &RC960.TELEPHONE_NBR                         (,65)
  If &RC960.PHONE_EXTN <> 0
    print 'ext'                                      (,+2)
    print &RC960.PHONE_EXTN                          (,+1)
  End-if

  print '6     Inventory number                        '       (+2,4)
  print '(not maintained in database)'               (,65)

  print '7     Type of data being reported    '                (+2,4)
  print 'W-2 Original'                                         (,65)
end-procedure

begin-procedure Get-Transmitter-Data
begin-SELECT
X.DESCR
X.FEDERAL_EIN
X.ADDRESS1
X.CITY
X.STATE
X.POSTAL
X.COUNTRY
FROM  PS_COMPANY_TBL X
WHERE COMPANY = $XCompany
  AND EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_COMPANY_TBL
       WHERE  COMPANY = X.COMPANY
         AND  EFFDT  <= $AsOfDate)
end-SELECT
end-procedure



begin-procedure Prompt-Third-Party
  if $Prcs_Process_Instance  =  ''
     do Employer-Prompts
  else
     do Convert-Parameters
  end-if
end-procedure

begin-procedure Employer-Prompts
  display ' '
  display 'Enter Third Party Tax Withheld for ' noline
  display $A.W2_Reporting_Co
  display ':'
  display '(Numbers should include decimal and cents, but no commas, e.g. 1234.00)'
  input $ThirdParty      '   Third Party Tax Withheld'
  move $ThirdParty      to #ThirdParty
end-procedure



begin-procedure Convert-Parameters


begin-select

RC_THIRD_PARTY.THIRD_PARTY_TAX

FROM  PS_RC_THIRD_PARTY   RC_THIRD_PARTY
WHERE RC_THIRD_PARTY.OPRID               = $Prcs_OprID
AND   RC_THIRD_PARTY.RUN_CNTL_ID         = $Prcs_Run_Cntl_ID
AND   RC_THIRD_PARTY.COMPANY             = $A.W2_Reporting_Co

end-select

   move &RC_THIRD_PARTY.Third_Party_Tax      to #ThirdParty             !HP99999

   let $ThirdParty      = EDIT(#ThirdParty      * 100,'099999999999')

end-procedure


#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'geteandg.sqc'  !Get-EandG procedure                           !HP00001
#Include 'getfed.sqc'    !Get-FederalProduct procedure                  !FED0001
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'w2.sqc'        !Routine for W2 Year End Box variables
