!***********************************************
!  CMP008:  Salary Mass Update by Paygroup     *
!***********************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/03/26:23:12:25                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689716                                              !
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
Begin-Setup
#Include 'ptpsl177.sqc'  !Printer and page-size initialization
End-Setup

#define BUS_UNIT_TBL_HR
#define COMPANY_TBL
#define SAL_PLAN_TBL
#define SAL_GRADE_TBL
#define PAYGROUP_TBL
#define GB_GROUP_TBL
#define ACTN_REASON_TBL
#define PSXLATITEM


!-----------------------------------------------------------------------
begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


!-----------------------------------------------------------------------
begin-procedure Init-Report

  move 'CMP008' to $ReportID
  do Stdapi-Init
  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  if $prcs_process_instance <> ''
    do Select-Parameters
  end-if
do Init_Printer
do Init_Report_translation ($ReportID, $language_cd)
do Append_Report_Translation ('HR')
last1:

end-procedure


!-----------------------------------------------------------------------
begin-heading 7

do Get_Field_Information ('CMP008', 'REPORT_TITLE', $REPORTTITLE, #DW)
  #Include 'stdhdg01.sqc'
do Get_Field_Information ('CMP008', 'EMPL', $EMPL, #DW)
do Get_Field_Information ('CMP008', 'EMPLNAME', $EMPLNAME, #DW)
do Get_Field_Information ('CMP008', 'ID', $ID, #DW)
do Get_Field_Information ('CMP008', 'PGS', $PGS, #DW)
do Get_Field_Information ('CMP008', 'ACTION', $ACTION, #DW)
do Get_Field_Information ('CMP008', 'ACTION_REASON', $ACTION_REASON, #DW)

!143883
do Get_Field_Information ('CMP008', 'ROW_PROCESSED', $ROW_PROCESSED, #DW)
do Get_Field_Information ('CMP008', 'ASOFDATE', $ASOFDATE, #DW)

do Get_Field_Information ('HR', 'COMPANY', $COMPANY, #DW)
do Get_Field_Information ('HR', 'PAYGROUP', $PAYGROUP, #DW)
do Get_Field_Information ('HR', 'PLAN_GRADE', $PLAN_GRADE, #DW)
do Get_Field_Information ('CMP008', 'FROMDATE', $FROMDATE, #DW)
do Get_Field_Information ('CMP008', 'THRUDATE', $THRUDATE, #DW)
do Get_Field_Information ('HR', 'BUS_UNIT', $BUS_UNIT, #DW)
do Get_Field_Information ('HR', 'GROUP_ID', $GROUP_ID, #DW)
do Get_Field_Information ('HR', 'BUS_UNIT', $BUS_UNIT, #DW)

STRING $FROMDATE $OUT1 BY ': ' INTO $FROM_DT
STRING $THRUDATE $OUT2 BY ': ' INTO $TO_DT
STRING $FROM_DT $TO_DT BY ' - ' INTO $FROM_TO_DT
print  $FROM_TO_DT (3,) CENTER

LET $H1 = ' '
LET $H2 = ' '

!143883
IF $PROCESS_BY = 'G'
   STRING $GROUP_ID ': ' BY '' INTO $H1
   STRING $GROUP ' ' $GB_GROUP_TBL-DESCR BY '' INTO $H2
   print $H1 (+1,1)
   print $H2 (,15)
   LET $H1 = ' '
   LET $H2 = ' '
   STRING $ASOFDATE ': ' BY '' INTO $H1
   let $H2 = $ASOFDT
   print $H1 (+1,1)
   print $H2 (,15)

else
   IF $PROCESS_BY = 'P'
      STRING $COMPANY ': ' BY '' INTO $H1
      STRING $COMP $COMPANY_TBL-DESCR BY ' ' INTO $H2
      print $H1 (+1,1)
      print $H2 (,15)
      LET $H1 = ' '
      LET $H2 = ' '
      STRING $PAYGROUP ': ' BY '' INTO $H1
      STRING $PAYGRP $PAYGROUP_TBL-DESCR BY ' ' INTO $H2
      print $H1 (+1,1)
      print $H2 (,15)
   ELSE
      IF $PROCESS_BY = 'S'
         STRING $BUS_UNIT ': ' BY '' INTO $H1
         STRING $BU $BUS_UNIT_TBL_HR-DESCR BY ' ' INTO $H2
         print $H1 (+1,1)
         print $H2 (,25)
         LET $H1 = ' '
         LET $H2 = ' '
         STRING $PLAN_GRADE ': ' BY '' INTO $H1
         let $PLAN_DESCR = RTRIM($SAL_PLAN_TBL-DESCR, ' ')
         STRING $SAL_PLAN ' ' $PLAN_DESCR ' / ' $GRADE ' ' $SAL_GRADE_TBL-DESCR by '' INTO $H2
         print $H1 (+1,1)
         print $H2 (,25)
     END-IF
   END-IF
END-IF


! Nbr of employees processed
LET $H1 = ' '
LET $H2 = ' '
STRING $ROW_PROCESSED ': ' BY '' INTO $H1
STRING $H1 $RowProcess BY '' INTO $H2
print $H2 (+1,1)

print $EMPL           (+2,1,9)
print $EMPLNAME       (,11,33)
print $PGS            (,45,16)

LET $H1 = ' '
string $ACTION $ACTION_REASON by ' / ' into $H1
print $H1             (,62)

end-heading


!-----------------------------------------------------------------------
begin-procedure Get-Values

  let $language_cd = $prcs_language_cd
  let $OPRID = &RUN_CNTL_HR.OPRID
  let $RUN_CNTL_ID = &RUN_CNTL_HR.RUN_CNTL_ID

  let $FROMDATE  = RTRIM(&RUN_CNTL_HR.FROMDATE, ' ')
  let $THRUDATE  = RTRIM(&RUN_CNTL_HR.THRUDATE, ' ')
  let $PROCESS_BY  = RTRIM(&RUN_CNTL_HR.PROCESS_BY, ' ')

 !143883
  let $SHOW_CMP  = RTRIM(&RUN_CNTL_HR.MULT_COMP_FLAG, ' ')

  let $GROUP  = RTRIM(&RUN_CNTL_HR.GB_GROUP_ID, ' ')
 !143883
  let $ASOFDTx  = RTRIM(&RUN_CNTL_HR.ASOFDATE, ' ')
   do Format-DateTime($ASOFDTx, $ASOFDT, {DEFDATE}, '', '')

  let $COMP  = RTRIM(&RUN_CNTL_HR.COMPANY, ' ')
  let $PAYGRP  = RTRIM(&RUN_CNTL_HR.PAYGROUP, ' ')

  let $BU  = RTRIM(&RUN_CNTL_HR.BUSINESS_UNIT, ' ')
  let $SAL_PLAN  = RTRIM(&RUN_CNTL_HR.SAL_ADMIN_PLAN, ' ')
  let $GRADE  = RTRIM(&RUN_CNTL_HR.GRADE, ' ')

 ! Start Date - End Date
   do Format-DateTime($FROMDATE, $OUT1, {DEFDATE}, '', '')
   do Format-DateTime($THRUDATE, $OUT2, {DEFDATE}, '', '')

  let $AsOfDate = $THRUDATE

 !143883
  ! Process by Group
  IF $PROCESS_BY = 'G'
     ! Get Group definition
       let $GB_Group_ID = $GROUP
       do Get-GB-Group-Descr
       LET $GB_GROUP_TBL-DESCR = $Group_Descr
       DO Get_Related_GB_GROUP_TBL($THRUDATE, $GROUP)
  else
       ! Process by Paygroup
       IF $PROCESS_BY = 'P'
          let $Company = $COMP
          do Get-Company-Data
          LET $COMPANY_TBL-DESCR = $CompanyName
          DO  Get_Related_COMPANY_TBL($COMP, $AsOfDate)
          let $PayGroup = $PAYGRP
          do Get-PayGroup-Data
          LET $PAYGROUP_TBL-DESCR = $PayGroupName
          do Get_Related_PAYGROUP_TBL($COMP, $AsOfDate, $PayGroup)
       ELSE
        ! Process by Salay Plan/grade
          IF $PROCESS_BY = 'S'
             do Get-Business-Unit-Name
             LET $BUS_UNIT_TBL_HR-DESCR = $BU_DESCR
             DO Get_Related_BUS_UNIT_TBL_HR($BU)
             do Get-Setid  ($BU, 'SAL_PLAN_TBL', $Setid)
             do Get-Plan-Descr ($Setid, $SAL_PLAN, $AsOfDate, $SAL_PLAN_TBL-DESCR)
             DO Get_Related_SAL_PLAN_TBL($AsOfDate, $SAL_PLAN, $Setid)
             do Get-Grade-Descr ($Setid, $SAL_PLAN, $GRADE, $AsOfDate, $SAL_GRADE_TBL-DESCR)
             do Get_Related_SAL_GRADE_TBL($AsOfDate, $GRADE, $SAL_PLAN, $Setid)
          END-IF
       END-IF
  end-if

let #col1 = 11
let #col2 = 26
let #col3 = 39
let #col4 = 53
let #col5 = 80
let #col6 = 93
let #col7 = 107
let #col8 = 118
let #col9 = 130
let #col10 = 150


begin-SELECT
COUNT(*) &RowProcessed

 do Format-Number(&RowProcessed, $xRow, '9999999999')
 let $RowProcess = ltrim($xRow,' ')

FROM PS_CMP008_TMP
WHERE OPRID = $OPRID
AND   RUN_CNTL_ID = $RUN_CNTL_ID
end-SELECT

end-procedure


!-----------------------------------------------------------------------
begin-procedure Process-Main

 do get-string

begin-SELECT DISTINCT
T.EMPLID
T.EMPL_RCD
T.EFFDT
T.EFFSEQ
T.ACTION
T.ACTION_REASON
T.EFFDT_USED
T.SEQNUM
B.NAME
J.SETID_SALARY
J.SAL_ADMIN_PLAN
J.GRADE
J.STEP

  do Write-Report-Emplid

  print $EF           (+1,#col1,14)
  print $ES           (0,#col2,12)
  print $CR           (0,#col3,13)
  print $CO           (0,#col4,26)
  print $CC           (0,#col5,12)
  print $CF           (0,#col6,13)
  print $CRP          (0,#col7,10)
  print $CP           (0,#col8,11)
  print $RCG          (0,#col9)
  print $SOURCE       (0,#col10)

  if $SHOW_CMP = 'Y'
     print $PP           (+2,#col4)
     do Old-Package
  end-if

  if $SHOW_CMP = 'Y'
     print $NP           (+2,#col4)
     do New-Package
  end-if

  if $SHOW_CMP <> 'Y'
     do Format-DateTime(&T.EFFDT, $out, {DEFDATE}, '', '')
     print $out                         (+1,#col1,10)

     do Format-Number(&t.EFFSEQ, $out, '99')
     print $out                         (0,#col2)
  end-if

  print ' ' (+2,1)

FROM  PS_CMP008_TMP T, PS_PERSON_NAME B, PS_JOB J
WHERE T.OPRID = $OPRID
AND   T.RUN_CNTL_ID = $RUN_CNTL_ID
AND   T.EMPLID = B.EMPLID
AND   T.EMPLID = J.EMPLID
AND   T.EMPL_RCD = J.EMPL_RCD
AND   J.EFFDT = T.EFFDT_USED
AND   J.EFFSEQ = T.SEQNUM
ORDER BY T.EMPLID,T.EMPL_RCD,T.EFFDT,T.EFFSEQ
end-SELECT

end-procedure

!143883
!-----------------------------------------------------------------------
begin-procedure Old-Package
begin-SELECT
OLD1.EFFDT
OLD1.EFFSEQ
OLD1.COMP_RATECD
OLD1.COMP_RATE_POINTS
OLD1.COMPRATE
OLD1.COMP_PCT
OLD1.COMP_FREQUENCY
OLD1.CURRENCY_CD
OLD1.RATE_CODE_GROUP
OLD1.CMP_SRC_IND

 let $EFFDT = &OLD1.EFFDT
 let #EFFSEQ = &OLD1.EFFSEQ
 let $COMP_RATECD = &OLD1.COMP_RATECD
 let #COMPRATE = &OLD1.COMPRATE
 let $CURRENCY_CD = &OLD1.CURRENCY_CD
 let $COMP_FREQUENCY = &OLD1.COMP_FREQUENCY
 let #COMP_RATE_POINTS = &OLD1.COMP_RATE_POINTS
 let #COMP_PCT = &OLD1.COMP_PCT
 let $RATE_CODE_GROUP = &OLD1.RATE_CODE_GROUP

 !143883
 let $CMP_SRC_IND = &OLD1.CMP_SRC_IND

 do Write-Report-Package

FROM PS_COMPENSATION OLD1
WHERE OLD1.EMPLID = &T.EMPLID
AND   OLD1.EMPL_RCD = &T.EMPL_RCD
AND   OLD1.EFFDT = &T.EFFDT_USED
AND   OLD1.EFFSEQ = &T.SEQNUM
end-SELECT
end-procedure

!-----------------------------------------------------------------------
begin-procedure New-Package
begin-SELECT
NEW1.COMP_RATECD
NEW1.COMP_RATE_POINTS
NEW1.COMPRATE
NEW1.COMP_PCT
NEW1.COMP_FREQUENCY
NEW1.CURRENCY_CD
NEW1.RATE_CODE_GROUP

 let $EFFDT =  &T.EFFDT
 let #EFFSEQ =  &T.EFFSEQ
 let $COMP_RATECD = &NEW1.COMP_RATECD
 let #COMP_RATE_POINTS = &NEW1.COMP_RATE_POINTS
 let #COMPRATE = &NEW1.COMPRATE
 let #COMP_PCT = &NEW1.COMP_PCT
 let $COMP_FREQUENCY = &NEW1.COMP_FREQUENCY
 let $CURRENCY_CD = &NEW1.CURRENCY_CD
 let $RATE_CODE_GROUP = &NEW1.RATE_CODE_GROUP

 let $CMP_SRC_IND = 'S'

 do Write-Report-Package

FROM PS_SAL_RATECD_TBL NEW1
WHERE NEW1.SETID = &J.SETID_SALARY AND NEW1.SAL_ADMIN_PLAN = &J.SAL_ADMIN_PLAN AND NEW1.GRADE = &J.GRADE
AND   NEW1.EFFDT = (SELECT MAX(NEW2.EFFDT) FROM PS_SAL_RATECD_TBL NEW2
                    WHERE NEW1.SETID = NEW2.SETID AND NEW1.SAL_ADMIN_PLAN = NEW2.SAL_ADMIN_PLAN AND NEW1.GRADE = NEW2.GRADE
                    AND NEW2.EFFDT <= &T.EFFDT)
AND NEW1.STEP = &J.STEP
end-SELECT
end-procedure


!-----------------------------------------------------------------------
begin-procedure Write-Report-Package

  do Format-DateTime($EFFDT, $out, {DEFDATE}, '', '')
  print $out                         (+1,#col1,10)

  do Format-Number(#EFFSEQ, $out, '99')
  print $out                         (0,#col2)

  print $COMP_RATECD                 (0,#col3,13)

  do Format-Number(#COMPRATE, $out, '999,999,999,999.999999')
  print $out                         (0,#col4,22)

  print $CURRENCY_CD                 (0,#col5,12)

  print $COMP_FREQUENCY              (0,#col6,13)

  print #COMP_RATE_POINTS            (0,#col7,10)

  do Format-Number(#COMP_PCT, $out, '999.999')
  print $out                         (0,#col8)

  print $RATE_CODE_GROUP             (0,#col9)

 !143883
  let $FieldName = 'CMP_SRC_IND'
  let $FieldValue = $CMP_SRC_IND
  let $AsOfDate = &T.EFFDT
  do Read-Translate-Table
  LET $PSXLATITEM-XLATSHORTNAME = $XlatShortName
  DO  Get_Related_PSXLATITEM(&T.EFFDT,$FieldName,$FieldValue)
  print $PSXLATITEM-XLATSHORTNAME    (0,#col10)

end-procedure


!-----------------------------------------------------------------------
begin-procedure Write-Report-Emplid

  print &T.EMPLID                    (+1,1,9)
  print &B.NAME                      (0,11,33)
  print &J.SAL_ADMIN_PLAN            (0,45,4)
  print &J.GRADE                     (0,50,6)
  do Format-Number(&J.STEP, $out, '99')
  print $out                         (0,57)

 ! Get action description
  let $FieldName = 'ACTION'
  let $FieldValue = &T.ACTION
  let $AsOfDate = &T.EFFDT
  do Read-Translate-Table
  LET $PSXLATITEM-XLATLONGNAME = $XlatLongName
  DO  Get_Related_PSXLATITEM(&T.EFFDT,$FieldName,$FieldValue)

 ! Get action reason description
  let $Action = &T.ACTION
  let $Action_Reason = &T.ACTION_REASON
  do Get-Action-Reason
  LET $ACTN_REASON_TBL-DESCR = $Action_Reason_Descr
  DO  Get_Related_ACTN_REASON_TBL(&T.ACTION,&T.ACTION_REASON,&T.EFFDT)

  ! Print Action / Reason
    LET $A = ' '
    LET $R = ' '
    LET $H1 = ' '
    let $A = RTRIM($PSXLATITEM-XLATLONGNAME, ' ')
    let $R = RTRIM($ACTN_REASON_TBL-DESCR, ' ')

  STRING $A $R BY ' / ' INTO $ActnReason
  print $ActnReason    (0,62)
end-procedure


!-----------------------------------------------------------------------
begin-procedure get-string

do Get_Field_Information ('CMP008', 'PP', $PP, #DW)
do Get_Field_Information ('CMP008', 'NP', $NP, #DW)
do Get_Field_Information ('CMP008', 'EFFDT', $EF, #DW)
do Get_Field_Information ('CMP008', 'EFFSEQ', $ES, #DW)
do Get_Field_Information ('CMP008', 'COMP_RATECD', $CR, #DW)
do Get_Field_Information ('CMP008', 'COMPRATE', $CO, #DW)
do Get_Field_Information ('CMP008', 'CURRENCY_CD', $CC, #DW)
do Get_Field_Information ('CMP008', 'COMP_FREQUENCY', $CF, #DW)
do Get_Field_Information ('CMP008', 'COMP_RATE_POINTS', $CRP, #DW)
do Get_Field_Information ('CMP008', 'COMP_PCT', $CP, #DW)
do Get_Field_Information ('CMP008', 'RATE_CODE_GROUP', $RCG, #DW)
do Get_Field_Information ('CMP008', 'CMP_SRC_IND', $SOURCE, #DW)
end-procedure


!-----------------------------------------------------------------------
begin-procedure Get-Grade-Descr ($Setid, $SAL_PLAN, $GRADE, $AsOfDate, :$GRADE_DESCR)

begin-SELECT
SG.DESCR
 LET $GRADE_DESCR = &SG.DESCR
FROM PS_SAL_GRADE_TBL SG
WHERE SG.SETID = $Setid AND SG.SAL_ADMIN_PLAN = $SAL_PLAN AND SG.GRADE = $GRADE
AND SG.EFFDT = (SELECT MAX(SG2.EFFDT) FROM PS_SAL_GRADE_TBL SG2 WHERE SG2.SAL_ADMIN_PLAN = SG.SAL_ADMIN_PLAN
                AND SG2.GRADE = SG.GRADE AND SG2.EFFDT <= $AsOfDate)
end-SELECT

end-procedure


!-----------------------------------------------------------------------
begin-procedure Get-Plan-Descr ($Setid, $SAL_PLAN, $FROMDATE, :$PLAN_DESCR)

begin-SELECT
A.DESCR
 LET $PLAN_DESCR = &A.DESCR
FROM PS_SAL_PLAN_TBL A
WHERE A.SETID = $Setid AND A.SAL_ADMIN_PLAN = $SAL_PLAN
AND A.EFFDT = (SELECT MAX(B.EFFDT)
               FROM PS_SAL_PLAN_TBL B
               WHERE A.SETID = B.SETID AND A.SAL_ADMIN_PLAN = B.SAL_ADMIN_PLAN AND B.EFFDT <= $FROMDATE)
end-SELECT

end-procedure
!-----------------------------------------------------------------------
!Begin the Incident 747858003
!#Include 'getcodta.SQC'  !Get selected fields from the Company Table
#Include 'getcodta.sqc'  !Get selected fields from the Company Table
!End the Incident 747858003
#Include 'getbunam.sqc'  !Get Business Unit Name from the BUS_UNIT_TBL_HR
#Include 'getsetid.sqc'  !Get Set Id from the Tableset Record Detail
#Include 'getgbgrp.sqc'  !Get GB Group Description
!Begin the Incident 747858003
!#Include 'getpgdta.SQC'  !Get selected fields from PayGroup Table
#Include 'getpgdta.sqc'  !Get selected fields from PayGroup Table
!End the Incident 747858003
#Include 'hrrnctl1.sqc'  !Get run control parameter values
#Include 'hrgetval.sqc'  !Get values mask routines
#Include 'reset.sqc'     !Reset printer
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'curdttim.sqc'  !Routines to get current date/time
#Include 'stdapi.sqc'    !Routines to Update Run Status
#include 'hrsecty.sqc'   !Get SQR Security parameters
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
#Include 'readxlat.sqc'  !Read the Translate Table for the desired values.
#Include 'getactrs.sqc'  !Get Action Reason from the Action Reason Table
