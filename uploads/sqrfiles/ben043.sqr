!***********************************************
!  BEN043.SQR - Billing History Activity Report
!***********************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:08:43:41                                 
!       $Release:  HR9                                                 
!      $Revision:  102                                                 
!                                                                      *
!***********************************************************************


#Include 'setenv.sqc'   !Set environment

Begin-Setup
  #Include 'ptpsl177.sqc'
End-Setup

#define col_emplid              1
#define col_name               14
#define col_posting_dt         25
#define col_act_type           37
#define col_billing_reason     50
#define col_ben_prog           75
#define col_plan_type          81
#define col_plan_type_dta      82
#define col_plan_desc          87
#define col_ben_plan          119
#define col_ben_desc          128
#define col_cov_code          160
#define col_cov_code_dta      161
#define col_chrg_amt          166
#define col_chrg_amt_desc     169


!************
Begin-Program
!************

  do Init-Report

  display 'Report Begin at ' noline
  do Display-time

  do Process-Main

  display 'Report Ended at ' noline
  do Display-time

  do Reset
  do StdAPI-Term

End-Program


!******************************
Begin-Procedure Init-Report
!******************************

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime

  do StdAPI-Init

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

  let $First_Emp = 'Y'

  let $ReportID    = 'BEN043'
  do Get-Report-Language
  let $ReportTitle  = $BEN043-REPORTTITLE
  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ' '

End-Procedure


!**********************************
! This procedure is used to read language-dependent text from the database.
!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BEN043 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation('BEN1')

  do Get_Field_Information ('BEN043', 'REPORT_TITLE', $BEN043-REPORTTITLE, #CW)
  do Get_Field_Information ('BEN043', 'POSTING',      $BEN043-POSTING,     #CW)

  do Get_Field_Information ('BEN1',   'EMPLOYEE',     $BEN1-EMPLOYEE,      #CW)
  do Get_Field_Information ('BEN1',   'ID',           $BEN1-ID,            #CW)
  do Get_Field_Information ('BEN1',   'PLAN',         $BEN1-PLAN,          #CW)
  do Get_Field_Information ('BEN1',   'COVERAGE',     $BEN1-COVERAGE,      #CW)
  do Get_Field_Information ('BEN1',   'BENEFIT',      $BEN1-BENEFIT,       #CW)
  do Get_Field_Information ('BEN1',   'DATE',         $BEN1-DATE,          #CW)
  do Get_Field_Information ('BEN1',   'TYPE',         $BEN1-TYPE,          #CW)
  do Get_Field_Information ('BEN1',   'CODE',         $BEN1-CODE,          #CW)
  do Get_Field_Information ('BEN1',   'AMT',          $BEN1-AMT,           #CW)
  do Get_Field_Information ('BEN1',   'NAME',         $BEN1-NAME,          #CW)
  do Get_Field_Information ('BEN1',   'ACTY',         $BEN1-ACTY,          #CW)
  do Get_Field_Information ('BEN1',   'BILLING',      $BEN1-BILLING,       #CW)
  do Get_Field_Information ('BEN1',   'BEN',          $BEN1-BEN,           #CW)
  do Get_Field_Information ('BEN1',   'REASON',       $BEN1-REASON,        #CW)
  do Get_Field_Information ('BEN1',   'PGM',          $BEN1-PGM,           #CW)
  do Get_Field_Information ('BEN1',   'PLAN',         $BEN1-PLAN,          #CW)
  do Get_Field_Information ('BEN1',   'DESCR',        $BEN1-DESCR,         #CW)
  do Get_Field_Information ('BEN1',   'PAYMENT',      $BEN1-PAYMENT,       #CW)
  do Get_Field_Information ('BEN1',   'CHARGE',       $BEN1-CHARGE,        #CW)
  do Get_Field_Information ('BEN1',   'PAYADJ',       $BEN1-PAYADJ,        #CW)
  do Get_Field_Information ('BEN1',   'CHGADJ',       $BEN1-CHGADJ,        #CW)

End-Procedure

!**************************
Begin-Procedure Ask-Values
!**************************

  do Ask-From-Thru-Date

End-Procedure


!**************************
Begin-Procedure Get-Values
!**************************

  do Select-Parameters
  do Get-From-Thru-Date

End-Procedure


!***************
Begin-Heading 7
!***************

#Include 'stdhtr08.sqc'

  print $BEN1-EMPLOYEE                 (+2,{col_emplid},12)
  print $BEN1-EMPLOYEE                 (0,{col_name},9)
  print $BEN043-POSTING                (0,{col_posting_dt},10)
  print $BEN1-ACTY                     (0,{col_act_type},11)
  print $BEN1-BILLING                  (0,{col_billing_reason},33)
  print $BEN1-BEN                      (0,{col_ben_prog},4)
  print $BEN1-PLAN                     (0,{col_plan_type},4)
  print $BEN1-BENEFIT                  (0,{col_ben_plan},7)
  print $BEN1-COVERAGE                 (0,{col_cov_code},8)

  print $BEN1-ID                       (+1,{col_emplid},12)
  print $BEN1-NAME                     (0,{col_name},9)
  print $BEN1-DATE                     (0,{col_posting_dt},10)
  print $BEN1-TYPE                     (0,{col_act_type},11)
  print $BEN1-REASON                   (0,{col_billing_reason},33)
  print $BEN1-PGM                      (0,{col_ben_prog},4)
  print $BEN1-TYPE                     (0,{col_plan_type},4)
  print $BEN1-DESCR                    (0,{col_plan_desc},30)
  print $BEN1-PLAN                     (0,{col_ben_plan},7)
  print $BEN1-DESCR                    (0,{col_ben_desc},30)
  print $BEN1-CODE                     (0,{col_cov_code},8)
  print $BEN1-AMT                      (0,{col_chrg_amt_desc},6)

End-Heading


!****************************
Begin-Procedure Process-Main
!****************************

  do Clean-Tmp-Table
  do Get-Charge-Details
  do Get-Payment-Details
  do Get-Adjust-Details
  do Get-Final-Data

End-Procedure

!*******************************
Begin-Procedure Clean-Tmp-Table
!*******************************

  let $Sql-Statement = 'BEN043: DELETE PS_R_Ben_bi_Hist(Start)'

Begin-SQL   on-error=SQL-Error

DELETE FROM PS_R_BEN_BI_HIST

End-SQL
End-Procedure


!**********************************
Begin-Procedure Get-Charge-Details
!**********************************

  let $Sql-Statement = 'BEN043: INSERT PS_R_Ben_bi_Hist(Charge)'

Begin-SQL   on-error=SQL-Error

INSERT INTO PS_R_BEN_BI_HIST
( EMPLID,
  POSTING_DATE,
  DETAIL_TYPE,
  BILLING_REASON,
  DATE_DUE,
  AMT,
  BENEFIT_PROGRAM,
  PLAN_TYPE,
  BENEFIT_PLAN,
  COVRG_CD,
!  PERIOD_BEGIN_DT,   Insert as NULL by omission.
  BILL_CHARGE_ID,
  BILL_PAY_ID,
  BILL_ADJ_ID,
  DED_SLSTX_CLASS,
  COUNTRY,
  PROVINCE
)
SELECT
  A.EMPLID,
  B.POSTED_DATE,
  B.DETAIL_TYPE,
  A.BILLING_REASON,
  A.DATE_DUE,
  B.CHARGE_AMT,
  A.BENEFIT_PROGRAM,
  A.PLAN_TYPE,
  A.BENEFIT_PLAN,
  A.COVRG_CD,
!  NULL,              Not all platforms allow this.
  A.BILL_CHARGE_ID,
  0,
  0,
  A.DED_SLSTX_CLASS,
  A.COUNTRY,
  A.PROVINCE
FROM  PS_BEN_BI_CHARGE A,
      PS_BEN_BI_DETAIL B
WHERE A.EMPLID = B.EMPLID
AND   A.BILL_CHARGE_ID = B.BILL_CHARGE_ID
AND   B.DETAIL_TYPE = 'CHRG'
AND   B.POSTED_DATE BETWEEN $FromDate and $ThruDate

End-SQL

End-Procedure


!***********************************
Begin-Procedure Get-Payment-Details
!***********************************

  let $Sql-Statement = 'BEN043: INSERT PS_R_Ben_bi_Hist(Payment)'

Begin-SQL   on-error=SQL-Error

INSERT INTO PS_R_BEN_BI_HIST
( EMPLID,
  POSTING_DATE,
  DETAIL_TYPE,
  BILLING_REASON,
!  DATE_DUE,          Insert as NULL by omission.
  AMT,
  BENEFIT_PROGRAM,
  PLAN_TYPE,
  BENEFIT_PLAN,
  COVRG_CD,
!  PERIOD_BEGIN_DT,   Insert as NULL by omission.
  BILL_CHARGE_ID,
  BILL_PAY_ID,
  BILL_ADJ_ID,
  DED_SLSTX_CLASS,
  COUNTRY,
  PROVINCE
)
SELECT
  C.EMPLID,
  C.POSTING_DATE,
  'PMNT',
  ' ',
!  NULL,              Not all platforms allow this.
  C.AMOUNT_PAID,
  ' ',
  ' ',
  ' ',
  ' ',
!  NULL,              Not all platforms allow this.
  0,
  C.BILL_PAY_ID,
  0,
  ' ',
  ' ',
  ' '
FROM   PS_BEN_BI_PAY_VW C
WHERE  C.POSTING_DATE BETWEEN $FromDate and $ThruDate

End-SQL

End-Procedure


!**********************************
Begin-Procedure Get-Adjust-Details
!**********************************

  let $Sql-Statement = 'BEN043: INSERT PS_R_Ben_bi_Hist(Adjust)'

Begin-SQL   on-error=SQL-Error

INSERT INTO PS_R_BEN_BI_HIST
( EMPLID,
  POSTING_DATE,
  DETAIL_TYPE,
  BILLING_REASON,
!  DATE_DUE,          Insert as NULL by omission.
  AMT,
  BENEFIT_PROGRAM,
  PLAN_TYPE,
  BENEFIT_PLAN,
  COVRG_CD,
!  PERIOD_BEGIN_DT,   Insert as NULL by omission.
  BILL_CHARGE_ID,
  BILL_PAY_ID,
  BILL_ADJ_ID,
  DED_SLSTX_CLASS,
  COUNTRY,
  PROVINCE
)
SELECT
  D.EMPLID,
  D.POSTING_DATE,
  D.ADJUST_TYPE,
  ' ',
!  NULL,              Not all platforms allow this.
  D.NET_ADJUSTMENT,
  ' ',
  ' ',
  ' ',
  ' ',
!  NULL,              Not all platforms allow this.
  0,
  0,
  D.BILL_ADJ_ID,
  ' ',
  ' ',
  ' '
FROM   PS_BEN_BI_ADJSTMNT D
WHERE  D.POSTING_DATE BETWEEN $FromDate and $ThruDate

End-SQL

End-Procedure


!******************************
Begin-Procedure Get-Final-Data
!******************************

Begin-SELECT

E.EMPLID       () On-Break Print=Never
                  Level=1
                  Before=New-Emplid
G.NAME
E.POSTING_DATE
E.DETAIL_TYPE
E.BILLING_REASON
E.BENEFIT_PROGRAM
E.PLAN_TYPE
E.BENEFIT_PLAN
E.COVRG_CD
E.AMT
E.DED_SLSTX_CLASS

    do Get-Desc
    do Print-Details

From  PS_R_BEN_BI_HIST  E,
      PS_PERSON_NAME    G

Where E.EMPLID       = G.EMPLID

Order By E.EMPLID ASC,
E.POSTING_DATE ASC,
E.DETAIL_TYPE ASC,
E.PLAN_TYPE ASC
End-SELECT

End-Procedure


!**************************
Begin-Procedure New-Emplid
!**************************

  If $First_Emp = 'Y'
    let $First_Emp = 'N'
    print &E.Emplid                      (+1,{col_emplid},12)
  else
    print &E.Emplid                      (+2,{col_emplid},12)
  end-if

  print &G.Name                        (0,{col_name})

End-Procedure


!************************
Begin-Procedure Get-Desc
!************************

  do Format-Datetime(&E.Posting_Date, $Print_Posting_Date, {DEFDATE}, '', '')
  move &E.Posting_Date      to $AsOfDate

  if &E.Billing_Reason <> ' '
    move 'BILLING_REASON'     to $Fieldname
    move &E.Billing_Reason    to $Fieldvalue
    do Read-Translate-Table
    move $XlatLongName  to $Billing_Reason_Desc
  else
    move ' ' to $Billing_Reason_Desc
  end-if

  if &E.Plan_Type <> ' '
    move 'PLAN_TYPE'     to $Fieldname
    move &E.Plan_Type    to $Fieldvalue
    do Read-Translate-Table
    move $XlatLongName  to $Plan_Type_Desc
  else
    move ' ' to $Plan_Type_Desc
  end-if

  if &E.Benefit_Plan <> ' '
    move &E.Benefit_Plan to $Benefit_Plan
    move &E.Plan_Type    to $Plan_Type
    do Get-Benefit-Name
    move $BenefitName to $Plan_Desc
  else
    move ' ' to $Plan_Desc
  end-if


! Initialize the Coverage Code Field being used for
! Coverage Code and Deduction Sales Tax Class display.
!
  move ' ' to $Covrg_Cd_fld


! Get Deduction Sales Tax Description if value exist.
!
  if &E.Ded_Slstx_Class <> ' ' and &E.Ded_Slstx_Class <> 'B'
      move 'DED_SLSTX_CLASS' to $Fieldname
      move &E.Ded_Slstx_Class to $Fieldvalue
      do Read-Translate-Table
      move $XlatShortName to $Covrg_Cd_fld
  end-if


! Override the Deduction Sales Tax Description with the
! Coverage Code Value if Coverage Code exist.
!
  if &E.Covrg_Cd <> ' '
    move  &E.Covrg_Cd to $Covrg_Cd_fld
  end-if

  let $Detail_Type = &E.Detail_Type
  evaluate $Detail_Type
    when = 'CHRG'
      let $Detail_Desc = $BEN1-CHARGE
      break
    when = 'PMNT'
      let $Detail_Desc = $BEN1-PAYMENT
      break
    when = 'CHG'
      let $Detail_Desc = $BEN1-CHGADJ
      break
    when = 'PAY'
      let $Detail_Desc = $BEN1-PAYADJ
      break
  End-evaluate

End-Procedure


!*****************************
Begin-Procedure Print-Details
!*****************************

  print $Print_Posting_Date             (+1,{col_posting_dt},10)
  print $Detail_Desc                     (0,{col_act_type},11)
  print $Billing_Reason_Desc             (0,{col_billing_reason},23)
  print &E.Benefit_Program               (0,{col_ben_prog},5)
  print &E.Plan_Type                     (0,{col_plan_type_dta},2)
  print $Plan_Type_Desc                  (0,{col_plan_desc},30)
  print &E.Benefit_Plan                  (0,{col_ben_plan},7)
  print $Plan_Desc                       (0,{col_ben_desc},30)
  print $Covrg_Cd_fld                    (0,{col_cov_code_dta},2)
  print &E.Amt                           (0,{col_chrg_amt}) edit 99,999.99

End-procedure


!****************************
Begin-Procedure Display-Time
!****************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure


!*****************************************************************************
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Format-DateTime procedures
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'benftd.sqc'    !Ask-From-Thru-Date procedure
#Include 'number.sqc'    !Format-Number procedure
#Include 'reset.sqc'     !Reset printer procedure
#include 'getbennm.sqc'  !Get-Benefit-Name procedure

#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
!******************************* End of Report *******************************
