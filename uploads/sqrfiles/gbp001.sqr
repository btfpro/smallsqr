!*********************************************
!  GBP001:  Group Member Overlap Report      *
!*********************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                $Date:  2006/04/03:22:13:44                           
!             $Release:  HR9                                           
!            $Revision:  101                                           
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
#Include 'setup32.sqc'   !Printer and page-size initialization

#define JOBCODE_TBL

#define C01    1
#define C02   16
#define C03   34
#define C04   58
#define C05   88
#define C06   98

!************************************************************************
! Report Section
!************************************************************************

begin-program
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Stdapi-Term
   do Init-Report
   do Process-Main
   do Reset
   do Stdapi-Term
end-program

!************************************************************************
! Procedure Init-Report
!************************************************************************

begin-procedure Init-Report

  move 'GBP001' to $ReportID

  do Stdapi-Init

  let $language_cd = $CURR_LANGUAGE_CD
  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation($ReportID)
  do Get_Field_Information($ReportID, 'REPORT_TITLE', $ReportTitle, #DW)

  display ' '
  display $ReportTitle
  display ' '

  if $prcs_process_instance = ''
        !No Prompt
  else
        do select-parameters
  end-if

  do Init_Printer

end-procedure

!************************************************************************
! Section Heading
!************************************************************************

begin-heading 6

#Include 'stdhdg01.sqc'

if $heading = '1'
   print $GB_GROUP_ID_LBL                   (+1,{C01},15)
   print $GB_EFFDT_LBL                      (,{C02},18)
   print $GB_REFINE_DATE_LBL                (,{C03})
end-if

if $heading = '2'
   print $GB_GROUP_ID_LBL          (+2,{C01},15)
   print $EMPLID_LBL               (,{C02},18)
   print $NAME_LBL                 (,{C03},30)
   print $EMPL_RCD_LBL             (,{C04},30)
   print $JOBCODE_LBL              (,{C05},10)
   print $JOBDESCR_LBL             (,{C06})
end-if

end-heading

!***********************************************************************
!  Get Values
!***********************************************************************

begin-procedure Get-Values

end-procedure

!************************************************************************
! Procedure Main
!************************************************************************

begin-procedure Process-Main

        do Get-Translat-Info     ! Global

        do Retrieve-Groups

        do Print-Overlap

end-procedure

!***********************************************************************
!  Execute all member groups
!***********************************************************************

begin-procedure Retrieve-Groups

 let $heading = '1'

begin-SELECT ON-ERROR=SQL-Error

RUN_CNTL_GB001.OPRID                 &RUN_CNTL_GB001.OPRID
RUN_CNTL_GB001.RUN_CNTL_ID           &RUN_CNTL_GB001.RUN_CNTL_ID
RUN_CNTL_GB001.GB_GROUP_ID           &RUN_CNTL_GB001.GB_GROUP_ID
{DATEOUT-PREFIX}RUN_CNTL_GB001.GB_EFFDT{DATEOUT-SUFFIX}  &RUN_CNTL_GB001.GB_EFFDT
{DATEOUT-PREFIX}RUN_CNTL_GB001.GB_REFINE_DATE{DATEOUT-SUFFIX} &RUN_CNTL_GB001.GB_REFINE_DATE
RUN_CNTL_GB001.VERSIONGBQDM          &RUN_CNTL_GB001.VERSIONGBQDM

  move &RUN_CNTL_GB001.GB_GROUP_ID to $GB_GROUP_ID
  move &RUN_CNTL_GB001.GB_EFFDT to $GB_EFFDT
  move &RUN_CNTL_GB001.GB_REFINE_DATE to $GB_REFINE_DATE
  move &RUN_CNTL_GB001.VERSIONGBQDM to #VERSIONGBQDM

#ifdef debugx
  display $GB_GROUP_ID
  display $GB_EFFDT
  display $GB_REFINE_DATE
  display #VERSIONGBQDM
#end-if

   print $GB_GROUP_ID             (+1, {C01},15)
   print $GB_EFFDT                (,{C02},18)
   print $GB_REFINE_DATE          (,{C03})

FROM PS_RUN_CNTL_GB001 RUN_CNTL_GB001
WHERE RUN_CNTL_GB001.OPRID = $prcs_oprid
  AND RUN_CNTL_GB001.RUN_CNTL_ID = $prcs_run_cntl_id
end-Select

 new-page

end-procedure

!***********************************************************************
!  Print Groups Overlap
!***********************************************************************

begin-procedure Print-Overlap

 let $heading = '2'
begin-SELECT DISTINCT ON-ERROR=SQL-Error
A.GB_GROUP_ID   &A.GB_GROUP_ID
A.EMPLID        &A.EMPLID
A.NAME          &A.NAME
C.NAME_PSFORMAT &C.NAME_PSFORMAT
A.EMPL_RCD      &A.EMPL_RCD
A.JOBCODE       &A.JOBCODE
A.SETID         &A.SETID_JOBCODE

    let $GB_GROUP_ID = &A.GB_GROUP_ID
    let $EMPLID = &A.EMPLID
!   let $NAME = &A.NAME
    let $NAME= &C.NAME_PSFORMAT
    let #EMPL_RCD = &A.EMPL_RCD
    do Get-Job-Descr
    let $JOBCODE_TBL-DESCR = $JOBDESCR
    do Get_GB_EFFDT
    do Get_Related_JOBCODE_TBL(&RC.GB_EFFDT,&A.JOBCODE,&A.SETID_JOBCODE)

    print $GB_GROUP_ID        (+1,{C01},15)
    print $EMPLID             (,{C02},18)
    print $NAME               (,{C03},30)
    print #EMPL_RCD           (,{C04},30) EDIT 999999
    print &A.JOBCODE          (,{C05},7)
    print $JOBCODE_TBL-DESCR  (,{C06})

from PS_GB_GRP_RES_VW A, PS_RUN_CNTL_GB001 B,PS_PERSON_NAME C
where B.RUN_CNTL_ID = $prcs_run_cntl_id
and B.OPRID = $prcs_oprid
and A.GB_GROUP_ID = B.GB_GROUP_ID
and A.VERSIONGBQDM = B.VERSIONGBQDM
AND A.EMPLID = C.EMPLID
and exists
(
 select 'X'
 from PS_GB_GRP_RES_TBL G, PS_RUN_CNTL_GB001 H
 where G.EMPLID = A.EMPLID
 and G.GB_GROUP_ID = H.GB_GROUP_ID
 and G.VERSIONGBQDM = H.VERSIONGBQDM
 and H.OPRID = $prcs_oprid
 and H.RUN_CNTL_ID = $prcs_run_cntl_id
 group by G.EMPLID, G.EMPL_RCD
 having count(distinct G.GB_GROUP_ID) > 1
)
order by A.EMPLID, C.NAME_PSFORMAT, A.EMPL_RCD, A.JOBCODE, A.SETID
end-SELECT

#ifdef debugx
           display 'Exiting GBP001.SQR: Print-Overlap'
#end-if
end-procedure
!***********************************************************************
begin-procedure Get_GB_EFFDT
begin-Select
{DATEOUT-PREFIX}RC.GB_EFFDT{DATEOUT-SUFFIX}  &RC.GB_EFFDT
FROM PS_RUN_CNTL_GB001 RC
WHERE RC.OPRID = $prcs_oprid
  AND RC.RUN_CNTL_ID = $prcs_run_cntl_id
  AND RC.GB_GROUP_ID = $GB_GROUP_ID
end-select
end-procedure
!***********************************************************************
!  Retrieve Jobcode Description
!***********************************************************************
begin-procedure Get-Job-Descr
begin-Select
D.DESCR             &D.DESCR
       let $JOBDESCR = &D.DESCR
from PS_JOBCODE_TBL D
WHERE D.SETID = &A.SETID_JOBCODE
and   D.JOBCODE = &A.JOBCODE
and   D.EFFDT = (Select MAX(EFFDT)
                 from PS_JOBCODE_TBL C
                 where C.SETID = &A.SETID_JOBCODE
                   and C.JOBCODE = &A.JOBCODE
                   and C.EFFDT <= &RC.GB_EFFDT)
End-Select
end-procedure
!***********************************************************************
!  Gets the strings printed in this report (Globalization)
!***********************************************************************

begin-procedure Get-Translat-Info
   do Get_Field_Information($ReportID, 'EMPLID_LBL'         , $EMPLID_LBL        , #DW)
   do Get_Field_Information($ReportID, 'GB_GROUP_ID_LBL'    , $GB_GROUP_ID_LBL   , #DW)
   do Get_Field_Information($ReportID, 'GB_EFFDT_LBL'       , $GB_EFFDT_LBL      , #DW)
   do Get_Field_Information($ReportID, 'GB_REFINE_DATE_LBL' , $GB_REFINE_DATE_LBL, #DW)
   do Get_Field_Information($ReportID, 'NAME_LBL'           , $NAME_LBL          , #DW)
   do Get_Field_Information($ReportID, 'EMPL_RCD_LBL'       , $EMPL_RCD_LBL      , #DW)
   do Get_Field_Information($ReportID, 'JOBCODE_LBL'        , $JOBCODE_LBL       , #DW)
   do Get_Field_Information($ReportID, 'JOBDESCR_LBL'       , $JOBDESCR_LBL      , #DW)
end-procedure Get-Translat-Info

!***************************************************************
!Include SQCs
!***************************************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Routines for date calculation
#include 'hrrnctl1.sqc'  !Get run control parameter values
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'

#include 'rellang.sqc'
