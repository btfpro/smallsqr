!***********************************************************************
!                                                                      *
!  FPA315.sqc :  Seniority batch                                       *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:12:40:07                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

!***************************************************************
!
!
!       FPA315-Main
!
!
!***************************************************************

BEGIN-PROCEDURE FPA315-Main

do Get-Cal-Thirtieth($Cal-Thirtieth,$Termdt-cd)    !Calendar or Tirtieth

! Select all Career Rows except if FP_SEN_CALC = 'Y' (Seniority Calculation)
!
!---------------------------------------------------------------------------

! Dynamic 'Where' building
!-------------------------
let $select-where =
             'A.FP_MATRIX_TYP = B.FP_MATRIX_TYP
         and  B.EFF_STATUS    = ''A''
        and   A.FP_MATRIX_CD  = B.FP_MATRIX_CD
        and   A.FP_SCALE_CD   = B.FP_SCALE_CD
        and   A.FP_STEP_CD    = D.FP_STEP_CD
        and   A.EFFDT         =  ' ||
             '(select max(A1.EFFDT) from PS_FPMSALSTEP_TBL A1
               where A1.FP_MATRIX_TYP = B.FP_MATRIX_TYP
               and   A1.FP_MATRIX_CD  = B.FP_MATRIX_CD
               and   A1.FP_SCALE_CD   = B.FP_SCALE_CD
               and   A1.FP_STEP_CD    = D.FP_STEP_CD
               and    A1.EFFDT    <= D.EFFDT)   ' ||
       'and   C.FP_MATRIX_TYP = B.FP_MATRIX_TYP
        and   C.EFF_STATUS    = ''A''
        and   C.FP_MATRIX_CD  = B.FP_MATRIX_CD ' ||
       'and   C.FP_SCALE_CD   = B.FP_SCALE_CD
        and   C.SETID         = D.FP_SETID_RANK
        and   C.FP_RANK_CD    = D.FP_RANK_CD
        and   C.EFFDT         =  ' ||
             '(select max(C1.EFFDT) from PS_FPMRANK_TBL C1
        where C1.FP_MATRIX_TYP = B.FP_MATRIX_TYP
        and   C1.FP_MATRIX_CD  = B.FP_MATRIX_CD
        and   C1.FP_SCALE_CD   = B.FP_SCALE_CD
        and   C1.SETID         = D.FP_SETID_RANK
        and   C1.FP_RANK_CD    = D.FP_RANK_CD
        and   C1.EFFDT    <= D.EFFDT)   ' ||
       'and   D.FP_INST_STAT  = ''R''                ! Actual
        and   E.EMPLID        = D.EMPLID
        and   E.EMPL_RCD     = D.EMPL_RCD
        and   E.EFFDT         = '||
             '(select max(EFFDT) from PS_FPAEESTATUS
               where  EMPLID    = D.EMPLID
               and    EMPL_RCD = D.EMPL_RCD
               and    EFFDT    <= D.EFFDT)
        and   E.FP_STATUSEE_CD  = F.FP_STATUSEE_CD
        and   F.EFF_STATUS    = ''A''
        and   F.EFFDT          = '||
             '(select max(EFFDT) from PS_FPMSTATUSEE_TBL
                where  FP_STATUSEE_CD  = E.FP_STATUSEE_CD
        and    EFFDT          <= E.EFFDT) ' ||
       'and  B.EFFDT          =   A.EFFDT ' ||
       'and D.EFFDT <= {DATEIN-PREFIX}''' ||$ThruDate|| ''' {DYN-DateIn-Suffix}'

if $Emplid != ''
        let $select-where =   $select-where ||
        ' and   D.EMPLID  = ''' || $Emplid  || ''''
end-if


! Select Empl Rcd Nb
!-------------------
if $Empl_rcd != ''
        let $select-where =   $select-where ||
        ' and   D.EMPL_RCD  = ' || $Empl_rcd
end-if


! If no Reclassification
!-----------------------
#ifndef conversion
        let $select-where =   $select-where ||
        ' and   D.FP_SEN_CALC   = ''Y'''       ! Seniority Calculation = 'Y'
#endif

! If no Regrade
!--------------
#ifndef promouvable

        let $select-where =   $select-where ||
        ' and   D.FP_SEN_CALC   = ''Y'''       ! Seniority Calculation = 'Y'

#endif


! If no Reclassification
!-----------------------
#ifndef conversion

        #ifndef promouvable

                let $select-from = 'PS_FPAEECAREER  D'          ! Career Table

        #else

                let $select-from = 'PS_FPAEECAREERTER  D'       ! Career-Ter Table

        #endif

#else                                                           ! If Reclassification

        let $select-from = 'PS_FPAEECAREERBIS  D'               ! Career-Bis Table

#endif

#IFDEF DEBUGI
    display $select-where
#ENDIF

! Variables initialization from previous instance
!------------------------------------------------
Let $Emplid-Pre = ' '               !Emplid in previous instance
Let $Rank-Pre = ' '                 !Grade in previous instance
Let $Corps-Pre = ' '                !Body in previous instance
Let #Empl_rcd-pre = 0               !Empl Rcd Nb in previous instance
Let $Cld-Step-Pre = ' '             !Terminated step in previous instance
Let $EndCar-Pre = ' '               !End date in previous instance
Let $Equiv-Step-Pre = ' '           !Corresponding step in previous instance

let $sql-statement = 'FPA315.SQR,Select,Proc-Main'
BEGIN-SELECT On-Error=SQL-Error

D.EMPLID                                            &Emplid
D.EMPL_RCD                                          &Empl_rcd
{DATEOUT-PREFIX}D.EFFDT{DATEOUT-SUFFIX}             &StepBeg_dt
D.FP_CORPS_CD                                       &Corps
D.FP_SETID_RANK                                     &Setid
D.FP_RANK_CD                                        &Rank
D.FP_STEP_CD                                        &Step
D.EFFSEQ                                            &Sequence
{DATEOUT-PREFIX}D.FP_FOR_PROM_DT{DATEOUT-SUFFIX}    &For_Prom_dt
{DATEOUT-PREFIX}D.FP_STEP_END_DT{DATEOUT-SUFFIX}    &StepEnd_dt
D.FP_CLD_INST                                       &Cld-Inst
D.FP_EQUIV_STEP                                     &Equiv-step   !Corresponding step
D.FP_CLD_STEP                                       &Cld-Step     !(Sub)Step Terminated

        ! Use of variables
        !-----------------
        let $Emplid = rtrim(&Emplid,' ')
        let #Empl_rcd = &Empl_rcd
        let #Sequence = &Sequence
        Do Convert-To-DTU-Date(&StepBeg_dt,$StepBeg_dt)

        ! effdt in native format
        !-----------------------
        let $effdt_nat = &StepBeg_dt

        #IFDEF DEBUGI
            Display '********************************************************'
            display  'Emplid :'             noline
            display  &Emplid
            display 'Previous Empl Id :'    noline
            display $Emplid-Pre
            display  'Empl Rcd :'           noline
            display  &Empl_rcd
            display  'Body :'               noline
            display  &Corps
            display  'Grade :'              noline
            display  &Rank
            display  'Step :'               noline
            display  &Step
            display  'Terminated step :'    noline
            display  &Cld-Step
            display  'Step Begin Date :'    noline
            display  &StepBeg_dt
            display  'Step End Date :'      noline
            display  &StepEnd_dt
            display  'Limit Date'
            display  $ThruDate
            display  $effdt_nat
        #ENDIF

        !-------------------------------------------------------------------------------------
        !Get Step Access Period Length and Regular Period Length
        !-------------------------------------------------------------------------------------
        let $Setid = rtrim(&Setid,' ')
        let $Rank  = rtrim(&Rank,' ')
        let $Step  = rtrim(&Step,' ')
        do Get-Dur-Step ($effdt_nat,$Setid,$Rank,$Step,#AccesAn,#AccesMn,#AccesDy,#LegalAn,#LegalMn,#LegalDy)
        !----------------------------------------------------------------------------------------------
        ! Start of processing if change of Emplid/Empl rcd
        ! or if effdt != previous effdt + 1 and effdt != previous effdt
        !----------------------------------------------------------------------------------------------
        if $EndCar-Pre != ' '
            do dtu-subtract-days($EndCar-Pre,1,$EndCar2-Pre)
        end-if

        If $Emplid != $Emplid-Pre or #Empl_rcd != #Empl_rcd-pre or ($StepBeg_dt != $EndCar-Pre and $StepBeg_dt != $EndCar2-Pre)

            do Get-PrStp-Data                       ! Retrieve previous step data

            ! FPAEEUPDROW update
            !-------------------
            do Insert-Fpaeeupdrow($Emplid,#Empl_rcd,$Effdt_nat,$AsOfToday)

            #IFDEF DEBUGI
                 display 'FPAEEUPDROW update'
            #ENDIF


            ! If instance without previous instance with a different empl rcd
            !----------------------------------------------------------------
            if $Emplid != $Emplid-Pre or #Empl_rcd != #Empl_rcd-pre

                Let $Emplid-Pre = ' '               !Emplid in previous instance
                Let $Rank-Pre = ' '                 !Grade in previous instance
                Let $Corps-Pre = ' '                !Body in previous instance
                Let #Empl_rcd-pre = 0               !Body in previous instance
                Let $Cld-Step-Pre = ' '             !Terminated step in previous instance
                Let $EndCar-Pre = ''                !End date in previous instance
                Let $Equiv-Step-Pre = ' '           !Corresponding step in previous instance

                ! Carry over seniority initialization
                !------------------------------------
                let #Anc-An-Tra-Pre = 0
                let #Anc-Mn-Tra-Pre = 0
                let #Anc-Dy-Tra-Pre = 0

            end-if
        end-if

        !-----------------------------------------------------------------------------------
        ! 'Q' bonus. Process start if previous step is terminated and if same Emplid/Emplrcd
        !-----------------------------------------------------------------------------------
        if $Cld-Step-Pre = 'Y' or $Emplid != $Emplid-Pre or #Empl_rcd != #Empl_rcd-pre

            let $Rank = rtrim(&Rank,' ')
            let $Step = rtrim(&Step,' ')
            do Get-Bonif ($Emplid,#Empl_rcd,$effdt_nat,$Rank,$Step,#Bonus-An,#Bonus-Mn,#Bonus-Dy)

        end-if

        do Va-Reinit                    ! Reinit variables for each employee
        do Search-Pos-Stat1             ! Search for the last civil service position link to
                                        ! the previous step
        do Search-Pos-Stat2             ! Search for civil service position and career increment

        do Calc-Anc-Ke-Tra              ! Carry over seniority
        do Calc-Anc-Rank-Corps          ! Grade seniority and Body seniority calculation
        do Calc-DurServ-Rank-Corps      ! Body and Grade Service Length calculating
        do Calc-Anc-Equiv-Step          ! Corresponding Step seniority calculating
        do Updt-Career                  ! Career table update

        #IFDEF DEBUGI
            Display '********************************************************'
        #ENDIF

from  [PS_FPAEECAREER D:$select-from],  ! From variable
      PS_FPMSALSTEP_TBL A,
      PS_FPMSALMATRX_TBL B,
      PS_FPMRANK_TBL C,
      PS_FPAEESTATUS E,
      PS_FPMSTATUSEE_TBL F
     ,PS_FPFAST_PERS_VW2 SCRTY          ! SQR security

where [$select-where]                   ! Where variable

and D.EMPLID = SCRTY.EMPLID             !
and D.EMPL_RCD = SCRTY.EMPL_RCD         !SQR security
[$SecurityClause]                       !

order by D.EMPLID,D.EMPL_RCD,D.EFFDT,D.EFFSEQ           ! Order by effdt and effecive sequence

END-SELECT

END-PROCEDURE  FPA315-Main



!***************************************************************
!
!       Get-PrStp-Data
!       retrieve previous step data
!
!               - Grade Body
!               - Grade and Body seniority
!               - Carry over seniority from previous step
!               - Step, Grade and body Service length calculating
!
!***************************************************************

BEGIN-PROCEDURE Get-PrStp-Data

#IFDEF DEBUGI
    Display 'FPA315.SQC / Get-PrStp-Data - begin'
#ENDIF

! Select the Grade and the Body link to the previous Step
! Retrieve the seniority to carry over
!--------------------------------------------------------
let $sql-statement = 'FPA315.SQR,,Select,Get-PrStp-Data'
BEGIN-SELECT On-Error=SQL-Error

! Fetch data links to the previous step
!--------------------------------------
A.EMPLID                                            &Emplid-Pre
A.EMPL_RCD                                          &Empl_rcd-pre
{DATEOUT-PREFIX}A.FP_STEP_END_DT{DATEOUT-SUFFIX}    &StepEnd_dt-pre
A.FP_RANK_CD                                        &Rank-Pre
A.FP_CORPS_CD                                       &Corps-Pre
A.FP_CLD_STEP                                       &Cld-Step-Pre
A.FP_EQUIV_STEP                                     &Equiv-Step-Pre

! Fetch seniorities
!------------------
A.FP_SENINSTPDY         &SENINSTPDY
A.FP_SENINSTPMN         &SENINSTPMN
A.FP_SENINSTPYR         &SENINSTPYR
A.FP_SENKEPT_DY         &SENKEPT_DY
A.FP_SENKEPT_MN         &SENKEPT_MN
A.FP_SENKEPT_YR         &SENKEPT_YR
A.FP_TRUESEN_DY         &TRUESEN_DY
A.FP_TRUESEN_MN         &TRUESEN_MN
A.FP_TRUESEN_YR         &TRUESEN_YR
A.FP_SENRAN_DY          &SENRAN_DY
A.FP_SENRAN_MN          &SENRAN_MN
A.FP_SENRAN_YR          &SENRAN_YR
A.FP_SENCOR_DY          &SENCOR_DY
A.FP_SENCOR_MN          &SENCOR_MN
A.FP_SENCOR_YR          &SENCOR_YR
A.FP_SENTRANSDY         &SENTRANSDY
A.FP_SENTRANSMN         &SENTRANSMN
A.FP_SENTRANSYR         &SENTRANSYR
A.FP_SENEQSTP_DY        &SENEQSTP_DY
A.FP_SENEQSTP_MN        &SENEQSTP_MN
A.FP_SENEQSTP_YR        &SENEQSTP_YR
A.FP_DURSTEP_DY         &DURSTEP_DY
A.FP_DURSTEP_MN         &DURSTEP_MN
A.FP_DURSTEP_YR         &DURSTEP_YR
A.FP_DURRAN_DY          &DURRAN_DY
A.FP_DURRAN_MN          &DURRAN_MN
A.FP_DURRAN_YR          &DURRAN_YR
A.FP_DURCOR_DY          &DURCOR_DY
A.FP_DURCOR_MN          &DURCOR_MN
A.FP_DURCOR_YR          &DURCOR_YR


        Let $Emplid-Pre = rtrim(&Emplid-Pre,' ')
        Let #Empl_rcd-pre = &Empl_rcd-pre

        Let $Rank-Pre = rtrim(&Rank-Pre,' ')
        Let $Corps-Pre = rtrim(&Corps-Pre,' ')
        Let $Cld-Step-Pre = rtrim(&Cld-Step-Pre,' ')
        Do Convert-To-DTU-Date(&StepEnd_dt-pre,$EndCar-Pre)

        ! Seniority to carry over
        !------------------------
        Let #Anc-An-Tra-Pre = &SENTRANSYR
        Let #Anc-Mn-Tra-Pre = &SENTRANSMN
        Let #Anc-Dy-Tra-Pre = &SENTRANSDY

        ! Career seniority
        !-----------------
        Let #Anc-An-Car-Pre = &SENINSTPYR
        Let #Anc-Mn-Car-Pre = &SENINSTPMN
        Let #Anc-Dy-Car-Pre = &SENINSTPDY

        ! Retained seniority
        !-------------------
        Let #Anc-An-Kep-Pre = &SENKEPT_YR
        Let #Anc-Mn-Kep-Pre = &SENKEPT_MN
        Let #Anc-Dy-Kep-Pre = &SENKEPT_DY

        ! Actual seniority
        !-----------------
        let #Anc-An-Rel-Pre = &TRUESEN_YR
        let #Anc-Mn-Rel-Pre = &TRUESEN_MN
        let #Anc-Dy-Rel-Pre = &TRUESEN_DY

        ! Seniority in grade
        !-------------------
        Let #SENRAN_DY = &SENRAN_DY
        Let #SENRAN_MN = &SENRAN_MN
        Let #SENRAN_YR = &SENRAN_YR

        ! Seniority in body
        !------------------
        Let #SENCOR_DY = &SENCOR_DY
        Let #SENCOR_MN = &SENCOR_MN
        Let #SENCOR_YR = &SENCOR_YR

        ! Seniority in Corresponding Step
        !--------------------------------
        Let #SENEQSTP_DY = &SENEQSTP_DY
        Let #SENEQSTP_MN = &SENEQSTP_MN
        Let #SENEQSTP_YR = &SENEQSTP_YR


        !Service Length in Step
        !-----------------------
        Let #Dur-Dy-Ser-Pre = &DURSTEP_DY
        Let #Dur-Mn-Ser-Pre = &DURSTEP_MN
        Let #Dur-An-Ser-Pre = &DURSTEP_YR

        !Service Length in Grade
        !-----------------------
        Let #DURRAN_DY = &DURRAN_DY
        Let #DURRAN_MN = &DURRAN_MN
        Let #DURRAN_YR = &DURRAN_YR

        !Service Length in Body
        !----------------------
        Let #DURCOR_DY = &DURCOR_DY
        Let #DURCOR_MN = &DURCOR_MN
        Let #DURCOR_YR = &DURCOR_YR

from PS_FPAEECAREER A
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

Where A.EMPLID = &Emplid
and A.EMPL_RCD = &Empl_rcd
and A.FP_INST_STAT = 'R'
and A.EFFDT =
(Select MAX(B.EFFDT) from PS_FPAEECAREER B
where B.EMPLID = &Emplid
and B.EMPL_RCD = &Empl_rcd
and B.FP_INST_STAT = 'R'
and B.EFFDT < {DATEIN-PREFIX}$effdt_nat{DATEIN-SUFFIX})
and A.EFFSEQ =
(Select MAX(C.EFFSEQ) from PS_FPAEECAREER C
where C.EMPLID = &Emplid
and C.EMPL_RCD=&Empl_rcd
and C.FP_INST_STAT = 'R'
and C.EFFDT = A.EFFDT )

and A.EMPLID = SCRTY.EMPLID     !
and A.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
    [$SecurityClause]           !

END-SELECT

END-PROCEDURE Get-PrStp-Data



!***************************************************************
!
!
!       Va-Reinit
!       reinit variables for each employee
!
!
!***************************************************************
BEGIN-PROCEDURE Va-Reinit

    !Number of days End of civil service position
    !---------------------------------------------
    IF $Cal-Thirtieth ='T'  !Thirtieth
        let #Days-Number=30
    else                    !Calendar
        Do Days-Number($StepBeg_dt,#Days-Number)
    end-if


    ! Non-terminated step take in account
    !------------------------------------
    if $Cld-Step-Pre != 'N'                         !Previous terminated step

        let #Anc-Dy-Car = #Bonus-Dy                 !Bonus
        let #Anc-Mn-Car = #Bonus-Mn
        let #Anc-An-Car = #Bonus-An

        let #Anc-An-Kep = #Anc-An-Tra-Pre           !Retrieve of seniority to carry over
        let #Anc-Mn-Kep = #Anc-Mn-Tra-Pre
        let #Anc-Dy-Kep = #Anc-Dy-Tra-Pre

        let #Anc-Dy-Rel = 0                         !Actual seniority
        let #Anc-Mn-Rel = 0
        let #Anc-An-Rel = 0

        let #Dur-Dy-Ser = 0                         !Previous Service Length
        let #Dur-Mn-Ser = 0
        let #Dur-An-Ser = 0

    else                                            !Previous non-terminated step

        let #Anc-Dy-Car = 0
        let #Anc-Mn-Car = 0
        let #Anc-An-Car = 0

        ! Seniority saved = Previous seniority saved + previous career seniority
        !-----------------------------------------------------------------------
        let #Anc-An-Kep = #Anc-An-Kep-Pre + #Anc-An-Car-Pre
        let #Anc-Mn-Kep = #Anc-Mn-Kep-Pre + #Anc-Mn-Car-Pre
        let #Anc-Dy-Kep = #Anc-Dy-Kep-Pre + #Anc-Dy-Car-Pre



        ! Adjust to YY/MM/DD format
        !--------------------------

        While #Anc-Dy-Kep >= #Days-Number
               let #Anc-Mn-Kep = #Anc-Mn-Kep + 1
               let #Anc-Dy-Kep = #Anc-Dy-Kep - #Days-Number
        End-While

        While #Anc-Mn-Kep >= 12
               let #Anc-An-Kep = #Anc-An-Kep + 1
               let #Anc-Mn-Kep = #Anc-Mn-Kep - 12
        End-While

        let #Anc-Dy-Rel = #Anc-Dy-Rel-Pre           !Fetch the previous actual seniority
        let #Anc-Mn-Rel = #Anc-Mn-Rel-Pre
        let #Anc-An-Rel = #Anc-An-Rel-Pre


        let #Dur-Dy-Ser = #Dur-Dy-Ser-Pre           !Previous Service Length
        let #Dur-Mn-Ser = #Dur-Mn-Ser-Pre
        let #Dur-An-Ser = #Dur-An-Ser-Pre


    end-if

    DO Convert-To-DTU-Date (&For_Prom_dt,$For_Prom_dt)
    DO Convert-To-DTU-Date (&StepEnd_dt,$StepEnd_dt)
    DO Convert-To-DTU-Date ($Thrudate,$Thrudate_dtu)

    let #Anc-Dy-Rank = 0                            !Actual seniority in Grade
    let #Anc-Mn-Rank = 0
    let #Anc-An-Rank = 0

    let #Anc-Dy-Corps = 0                           !Actual seniority in Body
    let #Anc-Mn-Corps = 0
    let #Anc-An-Corps = 0

    let #Anc-Dy-Equiv-Step = 0                      !Actual seniority in Corresponding Step
    let #Anc-Mn-Equiv-Step = 0
    let #Anc-An-Equiv-Step = 0

    let $FP_SEN_CALC = 'N'                          !Seniority flag

    #IFDEF DEBUGI
        display  'Dt Avancement :' noline
        display  $For_Prom_dt
    #ENDIF

    !----------------------------------------------------------------------
    !Career seniority is the period between the begin date in step,
    !and the minimum date among the current date and the promotion date.
    !----------------------------------------------------------------------

    !Career seniority: step begin date - promotion date
    !Date of end of career calculation
    !---------------------------------

    !Fetch of the min end date
    !-------------------------

        if $StepEnd_dt = ''
            IF $For_Prom_dt = ''
                let $EndCar = $ThruDate_dtu
            else
                do dtu-subtract-days ($For_Prom_dt,1,$EndCar)
                IF $EndCar > $ThruDate_dtu or $EndCar < $StepBeg_dt
                     let $EndCar = $ThruDate_dtu
                end-if
            end-if
        else
            !Take in account the latest date
            !-------------------------------
            IF $stepEnd_dt > $ThruDate_dtu
                    let $EndCar = $ThruDate_dtu
                    let $FP_SEN_CALC = 'Y'
            else
                    let $EndCar = $StepEnd_dt
            end-if
        end-if


        DO Convert-From-DTU-Date ($EndCar,$EndCar_native)

        let $Calcul-Anc-Car = 'Y'                   !Career seniority calculation flag
        let $Calcul-Anc-Re = 'Y'                    !Actual seniority calculation flag
        let $Calcul-Dur-Serv = 'Y'                  !Service Length calculation flag

        #IFDEF DEBUGI
            display  'End date' noline
            display  $EndCar
            DISPLAY 'FPA315.SQC / Va-Reinit1 - end'
        #ENDIF

END-PROCEDURE  Va-Reinit



!********************************************************************************
!
!       Search-Pos-Stat1 : select the last of the civil service position which
!                          is linked to the previous step, when the end date of
!                          this last civil service position is greater than the
!                          current step begin date.
!
!********************************************************************************
BEGIN-PROCEDURE Search-Pos-Stat1

#IFDEF DEBUGI
    DISPLAY 'FPA315.SQC / search-pos-stat1 - begin'
#ENDIF

!Fetch the last civil service position of the previous step
!----------------------------------------------------------

let $sql-statement = 'FPA315.SQR,,Select,Search-Pos-Stat1'
BEGIN-SELECT On-Error=SQL-Error

{DATEOUT-PREFIX}A.EFFDT{DATEOUT-SUFFIX}         &Posit-Beg1
{DATEOUT-PREFIX}A.FP_FOREND_DT{DATEOUT-SUFFIX}  &ForEnd_Dt1
{DATEOUT-PREFIX}A.FP_END_DT{DATEOUT-SUFFIX}     &Posit-End1
B.FP_PROM_STEP                                  &AutoProm1
B.FP_CAREFRZPCT                                 &Coeff1
B.FP_DURATION_PCT                               &Coeff_Serv1

        do Convert-To-DTU-Date(&StepBeg_dt,$Posit-Beg)
        do Convert-To-DTU-Date(&ForEnd_Dt1,$ForEnd_Dt)
        do Convert-To-DTU-Date(&Posit-End1,$Posit-End)
        let $AutoProm = rtrim(&AutoProm1,' ')
        let #Coeff = &Coeff1
        let #Coeff_Serv = &Coeff_Serv1

        do CalcAnc-Posit-End       !Calculation of the civil service position end-date

        #IFDEF DEBUGI
            Display '$Posit-End ' noline
            Display $Posit-End
            Display '$StepEnd_dt' noline
            Display $StepEnd_dt
            display $Posit-Beg
        #ENDIF

        If $Posit-End >= $Posit-Beg
                do Calc-Anc
        end-if

from  PS_FPAEELEGALSTAT A, PS_FPMLEGALSTA_TBL B
     ,PS_FPFAST_PERS_VW2 SCRTY           !SQR security

where A.EMPLID = &Emplid
and   A.EMPL_RCD = &Empl_rcd
and   A.FP_INST_STAT = 'R'
and   A.EFFDT  =
        (select max(EFFDT)
         from  PS_FPAEELEGALSTAT
         where EMPLID = &Emplid
         and   FP_INST_STAT = 'R'
         and   EMPL_RCD = &Empl_rcd
         and   EFFDT < {DATEIN-PREFIX}&StepBeg_dt{DATEIN-SUFFIX})
and   A.FP_LEGALSTAT_CD  = B.FP_LEGALSTAT_CD
and   B.EFF_STATUS    = 'A'
and   B.EFFDT =
        (select max(EFFDT)
         from  PS_FPMLEGALSTA_TBL
         where FP_LEGALSTAT_CD = A.FP_LEGALSTAT_CD
         and   EFFDT <= A.EFFDT)

and A.EMPLID = SCRTY.EMPLID        !
and A.EMPL_RCD = SCRTY.EMPL_RCD           !SQR security
    [$SecurityClause]             !

END-SELECT

#IFDEF DEBUGI
    display 'FPA315.SQC / END-PROCEDURE Search-Pos-Stat1'
#ENDIF

END-PROCEDURE  Search-Pos-Stat1



!***************************************************************
!
!       Search-Pos-Stat2 : fetch all the civil service position
!                          of the current step
!
!***************************************************************

BEGIN-PROCEDURE Search-Pos-Stat2

#IFDEF DEBUGI
    display 'FPA315.SQC / search-pos-stat2 - begin'
#ENDIF

let $sql-statement = 'FPA315.SQR,Select,Search-Pos-Stat2'
BEGIN-SELECT On-Error=SQL-Error

{DATEOUT-PREFIX}W.EFFDT{DATEOUT-SUFFIX} &Posit-Beg2
{DATEOUT-PREFIX}W.FP_FOREND_DT{DATEOUT-SUFFIX} &ForEnd_Dt2
{DATEOUT-PREFIX}W.FP_END_DT{DATEOUT-SUFFIX} &Posit-End2
X.FP_PROM_STEP      &AutoProm2
X.FP_CAREFRZPCT     &Coeff2
X.FP_DURATION_PCT   &Coeff_Serv2

        do Convert-To-DTU-Date(&Posit-Beg2,$Posit-Beg)
        do Convert-To-DTU-Date(&ForEnd_Dt2,$ForEnd_Dt)
        do Convert-To-DTU-Date(&Posit-End2,$Posit-End)
        let $AutoProm = rtrim(&AutoProm2,' ')
        let #Coeff = &Coeff2
        let #Coeff_Serv = &Coeff_Serv2

        #IFDEF DEBUGI
            display '$Posit-Beg Search-Pos-Stat2'
            display $Posit-Beg
        #ENDIF

        do CalcAnc-Posit-End       !Calculation of the end of civil service position

        do Calc-Anc                !Seniority calculation

from  PS_FPAEELEGALSTAT W, PS_FPMLEGALSTA_TBL X
     ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where W.EMPLID = &Emplid
and   W.EMPL_RCD = &Empl_rcd
and   W.EFFDT >= {DATEIN-PREFIX}$effdt_nat{DATEIN-SUFFIX}
and   W.EFFDT < {DATEIN-PREFIX}$EndCar_native{DATEIN-SUFFIX}
and   W.FP_INST_STAT = 'R'
and   W.FP_LEGALSTAT_CD  = X.FP_LEGALSTAT_CD
and   X.EFF_STATUS    = 'A'
and   X.EFFDT =
        (select max(EFFDT)
         from  PS_FPMLEGALSTA_TBL
         where FP_LEGALSTAT_CD = W.FP_LEGALSTAT_CD
         and   EFFDT <= W.EFFDT)

and W.EMPLID = SCRTY.EMPLID     !
and W.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
    [$SecurityClause]           !

order by W.EFFDT

END-SELECT

#IFDEF DEBUGI
    display 'FPA315.SQC / END-PROCEDURE Search-Pos-Stat2'
#ENDIF

END-PROCEDURE Search-Pos-Stat2



!***************************************************************
!
!    Calc-Anc  : iterative calculation of actual seniority and
!                career seniority
!
!***************************************************************
BEGIN-PROCEDURE Calc-Anc

        #IFDEF DEBUGI
            display 'Calc-Anc Debut'
            Display '$Calcul-Anc-Re' noline
            Display $Calcul-Anc-Re
        #ENDIF

        !Actual seniority calculation
        !--------------------------------------------------------------
        If $Calcul-Anc-Re = 'Y'
                if $Posit-End > $EndCar
                        let $Posit-End = $EndCar
                        let $Calcul-Anc-Re='N'
                end-if
                do Calc-Anc-Re           !Actual seniority calculation
        end-if

        #IFDEF DEBUGI
            Display '$Calcul-Dur-Serv : ' noline
            Display $Calcul-Dur-Serv
        #ENDIF

        !Service Length Calculation
        !--------------------------------------------------------------
        If $Calcul-Dur-Serv = 'Y'
                if $Posit-End > $EndCar
                        let $Posit-End = $EndCar
                        let $Calcul-Dur-Serv='N'
                end-if
                do Calc-Dur-Serv           !Service Length Calculation
        end-if

        #IFDEF DEBUGI
            Display '$Calcul-Anc-Car : ' noline
            Display $Calcul-Anc-Car
        #ENDIF

        !Career seniority calculation
        !--------------------------------------------------------------
        If $Calcul-Anc-Car = 'Y'
                if $Posit-End > $EndCar
                        let $Posit-End = $EndCar
                        Let $Calcul-Anc-Car='N'
                end-if
                do Calc-Anc-Car          !Career seniority calculation
        end-if


        #IFDEF DEBUGI
            display  'FPA315.SQC / Calc-Anc end :'
        #ENDIF

END-PROCEDURE Calc-Anc



!***************************************************************
!
!    Calc-Anc-Car : iterative calculation of career seniority
!
!***************************************************************
BEGIN-PROCEDURE Calc-Anc-Car

#IFDEF DEBUGI
    display 'FPA315.SQC / Calc-Anc-Car begin:'
    display 'Posit-Beg : ' noline
    display $Posit-Beg
    display 'Posit-End : ' noline
    display $Posit-End
    display 'Coeff ' noline
    display #Coeff
#ENDIF

!Calculation of the civil service position duration
!---------------------------------------------
do FP-Calc-Dur($Cal-Thirtieth,$Posit-Beg,$Posit-End,#A,#M,#J)

#IFDEF DEBUGI
    display 'Difference between begin and end in Y/M/D'
    display #A
    display #M
    display #J
#ENDIF

!Total seniority with % advancement career (actual seniority)
!-------------------------------------------------------------------
let #Anc-Dy-Car = #Anc-Dy-Car + #J*(#Coeff/100)
let #Anc-Mn-Car = #Anc-Mn-Car + #M*(#Coeff/100)
let #Anc-An-Car = #Anc-An-Car + #A*(#Coeff/100)


!Needed adjustement due to %
!---------------------------------------------------
let #AA = #Anc-An-Car - trunc(#Anc-An-Car,0)
let #Anc-An-Car = #Anc-An-Car - #AA
let #Anc-Mn-Car = #Anc-Mn-Car + (#AA * 12)

let #AM = #Anc-Mn-Car - trunc(#Anc-Mn-Car,0)
let #Anc-Mn-Car = #Anc-Mn-Car - #AM
let #Anc-Dy-Car = #Anc-Dy-Car + (#AM * 30)
!let #Anc-Dy-Car = #Anc-Dy-Car + (#AM * #Days-Number)

let #Anc-Dy-Car = round(#Anc-Dy-Car,0)

While #Anc-Dy-Car >= #Days-Number
        let #Anc-Mn-Car = #Anc-Mn-Car + 1
        let #Anc-Dy-Car = #Anc-Dy-Car - #Days-Number
End-While

While #Anc-Mn-Car >= 12
        let #Anc-An-Car = #Anc-An-Car + 1
        let #Anc-Mn-Car = #Anc-Mn-Car - 12
End-While

#IFDEF DEBUGI
    display 'Career Seniority'
    display #Anc-An-Car
    display #Anc-Mn-Car
    display #Anc-Dy-Car
    display 'FPA315.SQC / Calc-Anc-Car end:'
#ENDIF

END-PROCEDURE Calc-Anc-Car



!***************************************************************
!
!    Calc-Anc-Re : Iterative calculation of actual seniority
!
!***************************************************************
BEGIN-PROCEDURE Calc-Anc-Re

#IFDEF DEBUGI
    display 'FPA315.SQC / Calc-Anc-Re begin:'
    display 'Posit-Beg '    noline
    display $Posit-Beg
    display 'Posit-End '    noline
    display $Posit-End
    display 'Coeff '        noline
    display #Coeff
#ENDIF


!Number of days End of civil service position
!---------------------------------------------
IF $Cal-Thirtieth ='T'  !Thirtieth
        let #Days-Number=30
else                    !Calendar
        Do Days-Number($Posit-End,#Days-Number )
end-if


!Calculation of the civil service position duration
!--------------------------------------------------
do FP-Calc-Dur($Cal-Thirtieth,$Posit-Beg,$Posit-End,#A,#M,#J)

#IFDEF DEBUGI
    display 'diff entre debut et fin en A/M/J'
    display #A
    display #M
    display #J
#ENDIF

!Total seniority with % advancement career (actual seniority)
!-------------------------------------------------------------------
let #Anc-Dy-Rel = #Anc-Dy-Rel + #J*(#Coeff/100)
let #Anc-Mn-Rel = #Anc-Mn-Rel + #M*(#Coeff/100)
let #Anc-An-Rel = #Anc-An-Rel + #A*(#Coeff/100)


!Needed adjustement due to %
!---------------------------------------------------
let #AA = #Anc-An-Rel - trunc(#Anc-An-Rel,0)
let #Anc-An-Rel = #Anc-An-Rel - #AA
let #Anc-Mn-Rel = #Anc-Mn-Rel + (#AA * 12)

let #AM = #Anc-Mn-Rel - trunc(#Anc-Mn-Rel,0)
let #Anc-Mn-Rel = #Anc-Mn-Rel - #AM
let #Anc-Dy-Rel = #Anc-Dy-Rel + (#AM * 30)
!let #Anc-Dy-Rel = #Anc-Dy-Rel + (#AM * #Days-Number)

let #Anc-Dy-Rel = round(#Anc-Dy-Rel,0)

While #Anc-Dy-Rel >= #Days-Number
        let #Anc-Mn-Rel = #Anc-Mn-Rel + 1
        let #Anc-Dy-Rel = #Anc-Dy-Rel - #Days-Number
End-While

While #Anc-Mn-Rel >= 12
        let #Anc-An-Rel = #Anc-An-Rel + 1
        let #Anc-Mn-Rel = #Anc-Mn-Rel - 12
End-While

#IFDEF DEBUGI
    display 'Seniority'
    display #Anc-An-Rel
    display #Anc-Mn-Rel
    display #Anc-Dy-Rel
    display 'FPA315.SQC / Calc-Anc-Rel End:'
#ENDIF

END-PROCEDURE Calc-Anc-Re



!************************************************************************
!
!    Calc-Dur-Serv : Iterative calculation of Service length of the step
!
!************************************************************************
BEGIN-PROCEDURE Calc-Dur-Serv

#IFDEF DEBUGI
    display 'FPA315.SQC / Calc-Dur-Serv begin:'
    display 'Posit-Beg '        noline
    display $Posit-Beg
    display 'Posit-End '        noline
    display $Posit-End
    display 'Coeff Dur Serv '   noline
    display #Coeff_Serv
#ENDIF

!Number of days End of civil service position
!---------------------------------------------
IF $Cal-Thirtieth ='T'  !Thirtieth
        let #Days-Number=30
else                    !Calendar
        Do Days-Number($Posit-End,#Days-Number )
end-if


!Calculation of the civil service position duration
!--------------------------------------------------
do FP-Calc-Dur($Cal-Thirtieth,$Posit-Beg,$Posit-End,#A,#M,#J)

#IFDEF DEBUGI
    display 'Difference between begin and end in Y/M/D :'
    display #A
    display #M
    display #J
#ENDIF

!Total service length  with % advancement career (actual sevice length)
!----------------------------------------------------------------------
let #Dur-Dy-Ser = #Dur-Dy-Ser + #J*(#Coeff_Serv/100)
let #Dur-Mn-Ser = #Dur-Mn-Ser + #M*(#Coeff_Serv/100)
let #Dur-An-Ser = #Dur-An-Ser + #A*(#Coeff_Serv/100)


!Needed adjustement due to %
!---------------------------------------------------
let #AA = #Dur-An-Ser - trunc(#Dur-An-Ser,0)
let #Dur-An-Ser = #Dur-An-Ser - #AA
let #Dur-Mn-Ser = #Dur-Mn-Ser + (#AA * 12)

let #AM = #Dur-Mn-Ser - trunc(#Dur-Mn-Ser,0)
let #Dur-Mn-Ser = #Dur-Mn-Ser - #AM
let #Dur-Dy-Ser = #Dur-Dy-Ser + (#AM * 30)

let #Dur-Dy-Ser = round(#Dur-Dy-Ser,0)

While #Dur-Dy-Ser >= #Days-Number
        let #Dur-Mn-Ser = #Dur-Mn-Ser + 1
        let #Dur-Dy-Ser = #Dur-Dy-Ser - #Days-Number
End-While

While #Dur-Mn-Ser >= 12
        let #Dur-An-Ser = #Dur-An-Ser + 1
        let #Dur-Mn-Ser = #Dur-Mn-Ser - 12
End-While

#IFDEF DEBUGI
    display 'Servide Length'
    display #Dur-An-Ser
    display #Dur-Mn-Ser
    display #Dur-Dy-Ser
    display 'FPA315.SQC / Calc-Dur-Serv end:'
#ENDIF

END-PROCEDURE Calc-Dur-Serv



!***************************************************************
!
!    Calc-Anc-Rank-Corps:  calculation of actual seniority
!                                   - in the Grade
!                                   - in the Body
!
!***************************************************************
BEGIN-PROCEDURE Calc-Anc-Rank-Corps

!----------------------------------------------------------------------------------------------------
!If Grade advancement : actual seniority in Grade = actual seniority in Step
!Else :                 actual seniority in Grade =  actual seniority in Step
!                                                  + actual seniority in previous Step and Grade
!----------------------------------------------------------------------------------------------------

IF rtrim(&Rank,' ') = $Rank-Pre                         !No Grade advancement

    #IFDEF DEBUGI
        Display 'No Grade advancement'
    #ENDIF

    if $Cld-Step-Pre = 'Y'                              !Previous Step is terminated

        Let #SENRAN_DY=#SENRAN_DY + #Anc-Dy-Rel
        Let #SENRAN_MN=#SENRAN_MN + #Anc-Mn-Rel
        Let #SENRAN_YR=#SENRAN_YR + #Anc-An-Rel

    else                                                !Previous Step is notterminated

        Let #SENRAN_DY=#SENRAN_DY + #Anc-Dy-Car
        Let #SENRAN_MN=#SENRAN_MN + #Anc-Mn-Car
        Let #SENRAN_YR=#SENRAN_YR + #Anc-An-Car

    end-if

    While #SENRAN_DY >= #Days-Number
        let #SENRAN_MN = #SENRAN_MN + 1
        let #SENRAN_DY = #SENRAN_DY - #Days-Number
    End-While

    While #SENRAN_MN >= 12
        let #SENRAN_YR = #SENRAN_YR + 1
        let #SENRAN_MN = #SENRAN_MN - 12
    End-While

else                                                    !Grade advancement

    #IFDEF DEBUGI
        DISPLAY 'Grade advancement'
    #ENDIF

    Let #SENRAN_DY=#Anc-Dy-Rel
    Let #SENRAN_MN=#Anc-Mn-Rel
    Let #SENRAN_YR=#Anc-An-Rel

end-if

!------------------------------------------------------------------------------------------------
!If Body advancement : actual seniority in Body = actual seniority in Step
!Else :                actual seniority in Body =  actual seniority in Step
!                                                + actual seniority in the Body of the previous Step
!------------------------------------------------------------------------------------------------

IF rtrim(&Corps,' ') = $Corps-Pre

    if $Cld-Step-Pre = 'Y'                              !Previous Step is terminated

        Let #SENCOR_DY=#SENCOR_DY + #Anc-Dy-Rel
        Let #SENCOR_MN=#SENCOR_MN + #Anc-Mn-Rel
        Let #SENCOR_YR=#SENCOR_YR + #Anc-An-Rel

    else                                                !Previous Step is not terminated

        Let #SENCOR_DY=#SENCOR_DY + #Anc-Dy-Car
        Let #SENCOR_MN=#SENCOR_MN + #Anc-Mn-Car
        Let #SENCOR_YR=#SENCOR_YR + #Anc-An-Car

    end-if

    While #SENCOR_DY >= #Days-Number
        let #SENCOR_MN = #SENCOR_MN + 1
        let #SENCOR_DY = #SENCOR_DY - #Days-Number
    End-While

    While #SENCOR_MN >= 12
        let #SENCOR_YR = #SENCOR_YR + 1
        let #SENCOR_MN = #SENCOR_MN - 12
    End-While

else                                                     !Body advancement

        Let #SENCOR_DY=#Anc-Dy-Rel
        Let #SENCOR_MN=#Anc-Mn-Rel
        Let #SENCOR_YR=#Anc-An-Rel

end-if

#IFDEF DEBUGI
    DISPLAY 'FPA315.SQC / Calc-Anc-Rank-Corps - end'
#ENDIF

END-PROCEDURE Calc-Anc-Rank-Corps



!*******************************************************************
!
!
!    Calc-DurServ-Rank-Corps:  calculation of actual service length
!                                - in the Grade
!                                - in the Body
!
!*******************************************************************
BEGIN-PROCEDURE Calc-DurServ-Rank-Corps

!----------------------------------------------------------------------------------------------------
!If Grade advancement : actual service length in Grade = actual service length in Step
!Else :                 actual service length in Grade =  actual service length in Step
!                                                  + actual service length in previous Step and Grade
!----------------------------------------------------------------------------------------------------

IF rtrim(&Rank,' ') = $Rank-Pre                         !No Grade advancement

    #IFDEF DEBUGI
        Display 'No Grade advancement'
    #ENDIF

    if $Cld-Step-Pre = 'Y'                              !Previous Step is terminated

        Let #DURRAN_DY = #DURRAN_DY + #Dur-Dy-Ser
        Let #DURRAN_MN = #DURRAN_MN + #Dur-Mn-Ser
        Let #DURRAN_YR = #DURRAN_YR + #Dur-An-Ser

    else                                                !Previous Step is not terminated

        Let #DURRAN_DY = #DURRAN_DY + #Dur-Dy-Ser - #Dur-Dy-Ser-Pre
        Let #DURRAN_MN = #DURRAN_MN + #Dur-Mn-Ser - #Dur-Mn-Ser-Pre
        Let #DURRAN_YR = #DURRAN_YR + #Dur-An-Ser - #Dur-An-Ser-Pre

    end-if

    While #DURRAN_DY >= #Days-Number
        let #DURRAN_MN = #DURRAN_MN + 1
        let #DURRAN_DY = #DURRAN_DY - #Days-Number
    End-While

    While #DURRAN_MN >= 12
        let #DURRAN_YR = #DURRAN_YR + 1
        let #DURRAN_MN = #DURRAN_MN - 12
    End-While

else                                                    !Grade advancement

    #IFDEF DEBUGI
        Display 'Chg Grade'
    #ENDIF

    Let #DURRAN_DY = #Dur-Dy-Ser
    Let #DURRAN_MN = #Dur-Mn-Ser
    Let #DURRAN_YR = #Dur-An-Ser

end-if

!------------------------------------------------------------------------------------------------
!If Body advancement : actual service length in Body = actual service length in Step
!Else :                actual service length in Body =  actual service length in Step
!                                                + actual service length in the Body of the previous Step
!------------------------------------------------------------------------------------------------

IF rtrim(&Corps,' ') = $Corps-Pre

    if $Cld-Step-Pre = 'Y'                              !Previous Step is terminated

        Let #DURCOR_DY = #DURCOR_DY + #Dur-Dy-Ser
        Let #DURCOR_MN = #DURCOR_MN + #Dur-Mn-Ser
        Let #DURCOR_YR = #DURCOR_YR + #Dur-An-Ser

    else                                                !Previous Step is not terminated

        Let #DURCOR_DY = #DURCOR_DY + #Dur-Dy-Ser - #Dur-Dy-Ser-Pre
        Let #DURCOR_MN = #DURCOR_MN + #Dur-Mn-Ser - #Dur-Mn-Ser-Pre
        Let #DURCOR_YR = #DURCOR_YR + #Dur-An-Ser - #Dur-An-Ser-Pre

    end-if

    While #DURCOR_DY >= #Days-Number
        let #DURCOR_MN = #DURCOR_MN + 1
        let #DURCOR_DY = #DURCOR_DY - #Days-Number
    End-While

    While #DURCOR_MN >= 12
        let #DURCOR_YR = #DURCOR_YR + 1
        let #DURCOR_MN = #DURCOR_MN - 12
    End-While

else                                                    !Body advancement

        Let #DURCOR_DY = #Dur-Dy-Ser
        Let #DURCOR_MN = #Dur-Mn-Ser
        Let #DURCOR_YR = #Dur-An-Ser

end-if

#IFDEF DEBUGI
    Display 'FPA315.SQC / Calc-DurServ-Rank-Corps end'
#ENDIF

END-PROCEDURE Calc-DurServ-Rank-Corps



!***********************************************************************************************
!
!    Calc-Anc-Equiv-Step
!               * calculation of actual seniority of corresponding step
!
!               * rule:
!                 actual seniority of corresponding step = Sum(actual seniority of sub-steps)
!
!***********************************************************************************************
BEGIN-PROCEDURE Calc-Anc-Equiv-Step

! If corresponding step and no corresponding step advancement
!------------------------------------------------------------

IF rtrim(&Equiv-Step,' ') != ''

    If rtrim(&Equiv-step,' ') = $Equiv-Step-Pre

        if $Cld-Step-Pre = 'Y'                              !Previous Step is terminated

                Let #SENEQSTP_DY=#SENEQSTP_DY + #Anc-Dy-Rel
                Let #SENEQSTP_MN=#SENEQSTP_MN + #Anc-Mn-Rel
                Let #SENEQSTP_YR=#SENEQSTP_YR + #Anc-An-Rel

        else                                                !Previous Step is not terminated

                Let #SENEQSTP_DY=#SENEQSTP_DY + #Anc-Dy-Car
                Let #SENEQSTP_MN=#SENEQSTP_MN + #Anc-Mn-Car
                Let #SENEQSTP_YR=#SENEQSTP_YR + #Anc-An-Car

        end-if

        While #SENEQSTP_DY >= #Days-Number
                let #SENEQSTP_MN = #SENEQSTP_MN + 1
                let #SENEQSTP_DY = #SENEQSTP_DY - #Days-Number
        End-While

        While #SENEQSTP_MN >= 12
                let #SENEQSTP_YR = #SENEQSTP_YR + 1
                let #SENEQSTP_MN = #SENEQSTP_MN - 12
        End-While

    else                                                    !Grade advancement

        Let #SENEQSTP_DY=#Anc-Dy-Rel
        Let #SENEQSTP_MN=#Anc-Mn-Rel
        Let #SENEQSTP_YR=#Anc-An-Rel

    end-if

else

        Let #SENEQSTP_DY=0
        Let #SENEQSTP_MN=0
        Let #SENEQSTP_YR=0

end-if

#IFDEF DEBUGI
    Display 'FPA315.SQC / Calc-Anc-Equiv-Step end'
#ENDIF

END-PROCEDURE Calc-Anc-Equiv-Step



!***************************************************************
!
!    Calc-Anc-Ke-Tra:  seniority to carry over
!
!***************************************************************
BEGIN-PROCEDURE Calc-Anc-Ke-Tra

#IFDEF DEBUGI
    DISPLAY 'FPA315.SQC / Calc-Anc-Ke-Tra - begin'
#ENDIF

! If instance is terminated, calculation of the seniority to carry over
!------------------------------------------------------------------

    if rtrim(&Cld-Step,' ') = 'N'       !Non-terminated Step

        let #Anc-An-Tra = 0
        let #Anc-Mn-Tra = 0
        let #Anc-Dy-Tra = 0

    else                                !Terminated Step

        !Fetch of the retained seniority and the career seniority
        !to compute the carry over seniority
        !--------------------------------------------------------
        let #Anc-An-Car-Kep = #Anc-An-Car + #Anc-An-Kep
        let #Anc-Mn-Car-Kep = #Anc-Mn-Car + #Anc-Mn-Kep
        let #Anc-Dy-Car-Kep = #Anc-Dy-Car + #Anc-Dy-Kep

        do Change-Char (#Anc-An-Car-Kep,#Anc-Mn-Car-Kep,#Anc-Dy-Car-Kep,$Anc-Car-Kep)

        #IFDEF DEBUGI
            DISPLAY 'Career seniority : '   noline
            Display $Anc-Car
            Display 'Bonus legal : '        noline
            Display #Bonus_LegalDy
            Display 'Day Number : '         noline
            Display #Days-Number
        #ENDIF

        !Bonus add to Step legal duration
        !--------------------------------
        Let #Bonus_LegalAn = #Bonus-An + #LegalAn
        Let #Bonus_LegalMn = #Bonus-Mn + #LegalMn
        Let #Bonus_LegalDy = #Bonus-Dy + #LegalDy

        While #Bonus_LegalDy >= #Days-Number
                let #Bonus_LegalMn = #Bonus_LegalMn + 1
                let #Bonus_LegalDy = #Bonus_LegalDy - #Days-Number
        End-While

        While #SENCOR_MN >= 12
                let #Bonus_LegalAn = #Bonus_LegalAn + 1
                let #Bonus_LegalMn = #Bonus_LegalMn - 12
        End-While

        do Change-Char (#Bonus_LegalAn ,#Bonus_LegalMn ,#Bonus_LegalDy,$Bonus_Legal)

        #IFDEF DEBUGI
            DISPLAY 'Legal duration + Bonus : ' noline
            DISPLAY $Bonus_Legal
        #ENDIF

        !If career seniority without bonus greater than legal duration
        !calculation of seniority to carry over needed
        !-------------------------------------------------------------
        If $Anc-Car-Kep > $Bonus_Legal

                !Seniority to carry over
                !-----------------------
                let #Anc-An-Tra = #Anc-An-Car + #Anc-An-Kep - #Bonus-An - #LegalAn
                let #Anc-Mn-Tra = #Anc-Mn-Car + #Anc-Mn-Kep - #Bonus-Mn - #LegalMn
                let #Anc-Dy-Tra = #Anc-Dy-Car + #Anc-Dy-Kep - #Bonus-Dy - #LegalDy

                #IFDEF DEBUGI
                        DISPLAY 'Legal seniority Y/M/D :'
                        DISPLAY #LegalAn
                        DISPLAY #LegalMn
                        DISPLAY #LegalDy
                        DISPLAY 'Seniority to carry over Y/M/D :'
                        DISPLAY #Anc-An-Tra
                        DISPLAY #Anc-Mn-Tra
                        DISPLAY #Anc-Dy-Tra
                        DISPLAY '#Days-Number : ' noline
                        DISPLAY #Days-Number
                #ENDIF

                !Needed adjustement due to %
                !---------------------------------------------------
                let #AA = round(#Anc-An-Tra,0) - #Anc-An-Tra
                let #Anc-An-Tra = #Anc-An-Tra - #AA
                let #Anc-Mn-Tra = #Anc-Mn-Tra + (#AA * 12)

                let #AM = round(#Anc-Mn-Tra,0) - #Anc-Mn-Tra
                let #Anc-Mn-Tra = #Anc-Mn-Tra - #AM
                let #Anc-Dy-Tra = #Anc-Dy-Tra + (#AM * 30)
                !let #Anc-Dy-Tra = #Anc-Dy-Tra + (#AM * #Days-Number)

                let #Anc-Dy-Tra = round(#Anc-Dy-Tra,0)

                ! Negative numbers can appear due to bonus substraction
                !------------------------------------------------------
                While #Anc-Dy-Tra < 0
                        let #Anc-Mn-Tra = #Anc-Mn-Tra - 1
                        let #Anc-Dy-Tra = #Anc-Dy-Tra + #Days-Number
                End-While

                While #Anc-Mn-Tra < 0
                        let #Anc-An-Tra = #Anc-An-Tra - 1
                        let #Anc-Mn-Tra = #Anc-Mn-Tra + 12
                End-While


                !Date adjustement
                !----------------
                While #Anc-Dy-Tra >= #Days-Number
                        let #Anc-Mn-Tra = #Anc-Mn-Tra + 1
                        let #Anc-Dy-Tra = #Anc-Dy-Tra - #Days-Number
                End-While

                While #Anc-Mn-Tra >= 12
                        let #Anc-An-Tra = #Anc-An-Tra + 1
                        let #Anc-Mn-Tra = #Anc-Mn-Tra - 12
                End-While

        Else
                let #Anc-An-Tra = 0
                let #Anc-Mn-Tra = 0
                let #Anc-Dy-Tra = 0

        end-if

    end-if

#IFDEF DEBUGI
    DISPLAY 'FPA315.SQC / Calc-Anc-Ke-Tra - end'
#ENDIF

END-PROCEDURE Calc-Anc-Ke-Tra



!***************************************************************
!
!   Updt-Career : Update of FPAEECAREER
!                 Fetch the terminated Step,the career seniority
!                 and the retained seniority
!
!***************************************************************
BEGIN-PROCEDURE  Updt-Career

#IFDEF DEBUGI
    DISPLAY 'FPA315.SQC / Updt-Career - begin'
#ENDIF

IF rtrim(&Cld-Inst,' ')='Y'                         !Terminated instance

    if rtrim(&Cld-Step,' ') = 'Y'                   !Terminated Step

         #IFNDEF CONVERSION

                #IFNDEF PROMOUVABLE                 !Usual case

                        do Updt-FPACareer($FP_SEN_CALC,$Emplid,#Empl_rcd,$effdt_nat,#Sequence)
                                                    !Update of the career record with
                                                    !"seniority to be computed" = 'N'
                #ELSE

                        do Updt-Career-Ter          !Update of the career ter record

                #ENDIF

        #ELSE                                       !Reconversion

            do Updt-Career-Bis                      !Update of the career bis record

        #ENDIF

        !Terminated Step et previous Step not terminated
        !-----------------------------------------------
        if  $Cld-Step-Pre = 'N' and $FP_SEN_CALC = 'N'

            do Updt-Career-Cld-Step                 !Update of the career record with
                                                    !"seniority to br computed" = 'N' for all
                                                    !the previous non terminated Step

        end-if

    else                                            !Non terminated Step. Career has to be computed


        let $FP_SEN_CALC = 'Y'

        #IFNDEF CONVERSION

                #IFNDEF PROMOUVABLE                 !Usual case

                        do Updt-FPACareer($FP_SEN_CALC,$Emplid,#Empl_rcd,$effdt_nat,#Sequence)
                                                    !Update of career record with
                                                    !"seniority to be computed" = 'Y'

                #ELSE

                        do Updt-Career-Ter          !Update of the career ter record

                #ENDIF

        #ELSE                                       !reconversion

            do Updt-Career-Bis                      !Update of the career bis record

        #ENDIF

    end-if

Else                                                !Open instance

    let $FP_SEN_CALC = 'Y'

    #IFNDEF CONVERSION

                #IFNDEF PROMOUVABLE                 !Usual case

                        do Updt-FPACareer($FP_SEN_CALC,$Emplid,#Empl_rcd,$effdt_nat,#Sequence)
                                                    !Update of career record with
                                                    !"seniority to be computed" = 'Y'
                #ELSE

                        do Updt-Career-Ter          !Update of the career ter record

                #ENDIF

    #ELSE                                           !Reconversion

        do Updt-Career-Bis                          !Update of the career bis record

    #ENDIF

end-if


        !Fetch of the prvious instance values
        !------------------------------------

        Let #Anc-Dy-Car-Pre = #Anc-Dy-Car           !Career seniority
        Let #Anc-Mn-Car-Pre = #Anc-Mn-Car
        Let #Anc-An-Car-Pre = #Anc-An-Car

        Let #Anc-Dy-Kep-Pre = #Anc-Dy-Kep           !Retained seniority
        Let #Anc-Mn-Kep-Pre = #Anc-Mn-Kep
        Let #Anc-An-Kep-Pre = #Anc-An-Kep

        let #Anc-An-Tra-Pre = #Anc-An-Tra           !Seniority to carry over
        let #Anc-Mn-Tra-Pre = #Anc-Mn-Tra
        let #Anc-Dy-Tra-Pre = #Anc-Dy-Tra

        let #Anc-Dy-Rel-Pre = #Anc-Dy-Rel           !Actual seniority
        let #Anc-Mn-Rel-Pre = #Anc-Mn-Rel
        let #Anc-An-Rel-Pre = #Anc-An-Rel

        Let #Dur-Dy-Ser-Pre = #Dur-Dy-Ser           !Service Length
        Let #Dur-Mn-Ser-Pre = #Dur-Mn-Ser
        Let #Dur-An-Ser-Pre = #Dur-An-Ser

        Let $Emplid-Pre = rtrim(&Emplid,' ')        !Emplid
        Let $Rank-Pre = rtrim(&Rank,' ')            !Grade
        Let $Corps-Pre = rtrim(&Corps,' ')          !Body
        Let #Empl_rcd-pre = &Empl_rcd               !Previous Employ rcd
        Let $Cld-Step-Pre = rtrim(&Cld-Step,' ')    !Previous terminated Step
        do dtu-add-days($EndCar,1,$EndCar-Pre)      !Previous Step end date
        Let $Equiv-Step-Pre = rtrim(&Equiv-Step,' ')!Previous Corresponding Step

        #IFDEF DEBUGI
                DISPLAY 'Career seniority Step advancement : D/M/Y'
                DISPLAY #AccesDy
                DISPLAY #AccesAn
                DISPLAY #AccesMn
                DISPLAY 'Career seniority in Step : D/M/Y'
                DISPLAY #Anc-Dy-Car
                DISPLAY #Anc-Mn-Car
                DISPLAY #Anc-An-Car
                DISPLAY 'Actual seniority in Step : D/M/Y'
                DISPLAY #Anc-Dy-Rel
                DISPLAY #Anc-Mn-Rel
                DISPLAY #Anc-An-Rel
                DISPLAY 'Seniority to carry over : D/M/Y'
                DISPLAY #Anc-Dy-Tra
                DISPLAY #Anc-Mn-Tra
                DISPLAY #Anc-An-Tra
                DISPLAY 'Retained seniority : D/M/Y'
                DISPLAY #Anc-Dy-Kep
                DISPLAY #Anc-Mn-Kep
                DISPLAY #Anc-An-Kep
                DISPLAY 'Actual seniority in Grade : D/M/Y'
                DISPLAY #SENRAN_DY
                DISPLAY #SENRAN_MN
                DISPLAY #SENRAN_YR
                DISPLAY 'Actual seniority in Body: D/M/Y'
                DISPLAY #SENCOR_DY
                DISPLAY #SENCOR_MN
                DISPLAY #SENCOR_YR
                Display 'Actual seniority in Corresponding step: D/M/Y'
                Display #SENEQSTP_DY
                Display #SENEQSTP_MN
                Display #SENEQSTP_YR
                Display 'Service length in step: D/M/Y'
                Display #Dur-Dy-Ser
                Display #Dur-Mn-Ser
                Display #Dur-An-Ser

                DISPLAY 'FPA315.SQC / Updt-Career - end'
        #ENDIF

END-PROCEDURE Updt-Career



!***************************************************************
!
!   Updt-FPACareer :    PS_FPAEECAREER update
!
!   IN             :    $FP_SEN_CALC: Calculate seniority
!                       $Emplid     : Employee Id
!                       #Empl_rcd   : Employee record number
!                       $StepBeg_dt : Effective date
!                       #Sequence   : Sequence number
!
!   OUT            :
!
!***************************************************************
BEGIN-PROCEDURE Updt-FPACareer($FP_SEN_CALC,$Emplid,#Empl_rcd,$StepBeg_dt,#Sequence)

let $sql-statement = 'FPA315.SQR, Updt-Career ,Update,PS_FPAEECAREER'
BEGIN-SQL On-Error=SQL-Error

update  PS_FPAEECAREER
set
        FP_SENTOSTPDY = #_AccesDy,
        FP_SENTOSTPMN = #_AccesMn,
        FP_SENTOSTPYR = #_AccesAn,

        FP_SENINSTPDY = #_Anc-Dy-Car,
        FP_SENINSTPMN = #_Anc-Mn-Car,
        FP_SENINSTPYR = #_Anc-An-Car,

        FP_TRUESEN_DY = #_Anc-Dy-Rel,
        FP_TRUESEN_MN = #_Anc-Mn-Rel,
        FP_TRUESEN_YR = #_Anc-An-Rel,

        FP_SENKEPT_DY = #_Anc-Dy-Kep,
        FP_SENKEPT_MN = #_Anc-Mn-Kep,
        FP_SENKEPT_YR = #_Anc-An-Kep,

        FP_SENTRANSDY = #_Anc-Dy-Tra,
        FP_SENTRANSMN = #_Anc-Mn-Tra,
        FP_SENTRANSYR = #_Anc-An-Tra,

        FP_SENRAN_DY = #_SENRAN_DY,
        FP_SENRAN_MN = #_SENRAN_MN,
        FP_SENRAN_YR = #_SENRAN_YR,

        FP_SENCOR_DY = #_SENCOR_DY,
        FP_SENCOR_MN = #_SENCOR_MN,
        FP_SENCOR_YR = #_SENCOR_YR,

        FP_SENEQSTP_DY = #_SENEQSTP_DY,
        FP_SENEQSTP_MN = #_SENEQSTP_MN,
        FP_SENEQSTP_YR = #_SENEQSTP_YR,

        FP_DURSTEP_DY = #_Dur-Dy-Ser,
        FP_DURSTEP_MN = #_Dur-Mn-Ser,
        FP_DURSTEP_YR = #_Dur-An-Ser,
        FP_DURRAN_DY = #_DURRAN_DY,
        FP_DURRAN_MN = #_DURRAN_MN,
        FP_DURRAN_YR = #_DURRAN_YR,
        FP_DURCOR_DY = #_DURCOR_DY,
        FP_DURCOR_MN = #_DURCOR_MN,
        FP_DURCOR_YR = #_DURCOR_YR,

        FP_SEN_CALC = $FP_SEN_CALC,

        LAST_UPDATE_DATE = {DATEIN-PREFIX}$_AsOfToday{DATEIN-SUFFIX}

where EMPLID = $Emplid
and   EMPL_RCD = #Empl_rcd
and   EFFDT = {DATEIN-PREFIX}$StepBeg_dt{DATEIN-SUFFIX}
and   EFFSEQ = #Sequence

END-SQL

#IFDEF DEBUGI
    DISPLAY 'FPA315.SQC / Updt-FPACareer - end'
#ENDIF

END-PROCEDURE Updt-FPACareer



!***************************************************************
!
!   Updt-Career-TER :PS_FPAEECAREERTER update
!
!   IN             :    $FP_SEN_CALC: Calculate seniority
!                       $Emplid     : Employee Id
!                       #Empl_rcd   : Employee record number
!                       $StepBeg_dt : Effective date
!                       #Sequence   : Sequence number
!
!   OUT            :
!
!***************************************************************
BEGIN-PROCEDURE Updt-Career-Ter

let $sql-statement = 'FPA315.SQR, Updt-CareerTer, Update, PS_FPAEECAREER_TER'
BEGIN-SQL On-Error=SQL-Error

update  PS_FPAEECAREERTER
set
        FP_SENTOSTPDY = #AccesDy,
        FP_SENTOSTPMN = #AccesMn,
        FP_SENTOSTPYR = #AccesAn,

        FP_SENINSTPDY = #Anc-Dy-Car,
        FP_SENINSTPMN = #Anc-Mn-Car,
        FP_SENINSTPYR = #Anc-An-Car,

        FP_TRUESEN_DY = #Anc-Dy-Rel,
        FP_TRUESEN_MN = #Anc-Mn-Rel,
        FP_TRUESEN_YR = #Anc-An-Rel,

        FP_SENKEPT_DY = #Anc-Dy-Kep,
        FP_SENKEPT_MN = #Anc-Mn-Kep,
        FP_SENKEPT_YR = #Anc-An-Kep,

        FP_SENTRANSDY = #Anc-Dy-Tra,
        FP_SENTRANSMN = #Anc-Mn-Tra,
        FP_SENTRANSYR = #Anc-An-Tra,

        FP_SENRAN_DY = #SENRAN_DY,
        FP_SENRAN_MN = #SENRAN_MN,
        FP_SENRAN_YR = #SENRAN_YR,

        FP_SENCOR_DY = #SENCOR_DY,
        FP_SENCOR_MN = #SENCOR_MN,
        FP_SENCOR_YR = #SENCOR_YR,

        FP_SENEQSTP_DY = #SENEQSTP_DY,
        FP_SENEQSTP_MN = #SENEQSTP_MN,
        FP_SENEQSTP_YR = #SENEQSTP_YR,

        !Service Length update
        !---------------------
        FP_DURSTEP_DY = #Dur-Dy-Ser,
        FP_DURSTEP_MN = #Dur-Mn-Ser,
        FP_DURSTEP_YR = #Dur-An-Ser,
        FP_DURRAN_DY = #DURRAN_DY,
        FP_DURRAN_MN = #DURRAN_MN,
        FP_DURRAN_YR = #DURRAN_YR,
        FP_DURCOR_DY = #DURCOR_DY,
        FP_DURCOR_MN = #DURCOR_MN,
        FP_DURCOR_YR = #DURCOR_YR


where EMPLID = &Emplid
and   EMPL_RCD = &Empl_rcd
and   EFFDT = {DATEIN-PREFIX}&StepBeg_dt{DATEIN-SUFFIX}
and   EFFSEQ = &Sequence

END-SQL

#IFDEF DEBUGI
    DISPLAY 'FPA315.SQC / Updt-Career-Ter - end'
#ENDIF

END-PROCEDURE Updt-Career-Ter



!***********************************************************************
!
!   Updt-Career-Cld-Step  : PS_FPAEECAREER update on non-terminated
!                           previous Steps
!
!***********************************************************************
BEGIN-PROCEDURE Updt-Career-Cld-Step

#IFDEF DEBUGI
    DISPLAY 'FPA315.SQC / Updt-Career-Cld-Step - begin'
#ENDIF

let $sql-statement = 'FPA315.SQR, Updt-Career ,Update,PS_FPAEECAREER'
BEGIN-SQL On-Error=SQL-Error

update  PS_FPAEECAREER
set

        FP_SEN_CALC = 'N',
        LAST_UPDATE_DATE = {DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX}

where   EMPLID = &Emplid
and     EMPL_RCD = &Empl_rcd
and     EFFDT <= {DATEIN-PREFIX}&StepBeg_dt{DATEIN-SUFFIX}
and     FP_RANK_CD = &Rank
and     FP_STEP_CD = &Step
and     FP_SEN_CALC = 'Y'

END-SQL

#IFDEF DEBUGI
    DISPLAY 'FPA315.SQC / Updt-Career-Cld-Step - end'
#ENDIF

END-PROCEDURE Updt-Career-Cld-Step



!*****************************************************************
!
!   Updt-Career-Bis : PS_FPAEECAREER_BIS update
!
!*****************************************************************
BEGIN-PROCEDURE Updt-Career-Bis

#IFDEF DEBUGI
    DISPLAY 'FPA315.SQC / Updt-Career-Bis - begin'
#ENDIF

let $sql-statement = 'FPA315.SQR, Updt-Career, Update, PS_FPAEECAREER_BIS'
BEGIN-SQL On-Error=SQL-Error

update  PS_FPAEECAREERBIS
set
        FP_SENTOSTPDY = #AccesDy,
        FP_SENTOSTPMN = #AccesMn,
        FP_SENTOSTPYR = #AccesAn,

        FP_SENINSTPDY = #Anc-Dy-Car,
        FP_SENINSTPMN = #Anc-Mn-Car,
        FP_SENINSTPYR = #Anc-An-Car,

        FP_TRUESEN_DY = #Anc-Dy-Rel,
        FP_TRUESEN_MN = #Anc-Mn-Rel,
        FP_TRUESEN_YR = #Anc-An-Rel,

        FP_SENKEPT_DY = #Anc-Dy-Kep,
        FP_SENKEPT_MN = #Anc-Mn-Kep,
        FP_SENKEPT_YR = #Anc-An-Kep,

        FP_SENTRANSDY = #Anc-Dy-Tra,
        FP_SENTRANSMN = #Anc-Mn-Tra,
        FP_SENTRANSYR = #Anc-An-Tra,

        FP_SENRAN_DY = #SENRAN_DY,
        FP_SENRAN_MN = #SENRAN_MN,
        FP_SENRAN_YR = #SENRAN_YR,

        FP_SENCOR_DY = #SENCOR_DY,
        FP_SENCOR_MN = #SENCOR_MN,
        FP_SENCOR_YR = #SENCOR_YR,

        FP_SENEQSTP_DY = #SENEQSTP_DY,
        FP_SENEQSTP_MN = #SENEQSTP_MN,
        FP_SENEQSTP_YR = #SENEQSTP_YR,

        FP_DURSTEP_DY = #Dur-Dy-Ser,
        FP_DURSTEP_MN = #Dur-Mn-Ser,
        FP_DURSTEP_YR = #Dur-An-Ser,
        FP_DURRAN_DY = #DURRAN_DY,
        FP_DURRAN_MN = #DURRAN_MN,
        FP_DURRAN_YR = #DURRAN_YR,
        FP_DURCOR_DY = #DURCOR_DY,
        FP_DURCOR_MN = #DURCOR_MN,
        FP_DURCOR_YR = #DURCOR_YR,

        LAST_UPDATE_DATE = {DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX}

where EMPLID = &Emplid
and   EMPL_RCD = &Empl_rcd
and   EFFDT = {DATEIN-PREFIX}&StepBeg_dt{DATEIN-SUFFIX}
and   EFFSEQ = &Sequence
and   FP_CONVERSION_ID = ' '

END-SQL

#IFDEF DEBUGI
    DISPLAY 'FPA315.SQC / Updt-Career-Bis - end'
#ENDIF

END-PROCEDURE Updt-Career-No



!***************************************************************
!
!   CalcAnc-Posit-End: determine the thru date of position
!
!***************************************************************
BEGIN-PROCEDURE CalcAnc-Posit-End

if $Posit-End = ''
        if $ForEnd_Dt = ''
                Let $Posit-End = $EndCar
        else
                Let $Posit-End = $ForEnd_Dt
        end-if
end-if

END-PROCEDURE CalcAnc-Posit-End



! SQR using this SQC must have the following includes
! ***************************************************
!#Include 'fptestdt.sqc'   ! Routines for date and time formatting (FPS)
!#Include 'fpparam.sqc'      ! Routines for  Parameters Tables (FPS)
!#include 'curdttim.sqc'     ! Get-Current-DateTime procedure
!#Include 'number.sqc'       ! Routines to format numbers
!#include 'fpsalary.sqc'     ! Routines for salary (FPS)
!#Include 'fpjob.sqc'        ! Insert-Fpaeeupdrow procedure (FPS)
