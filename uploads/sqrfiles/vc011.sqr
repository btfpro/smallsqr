!***********************************************************************
!  VC011:  Variable Compensation - VC Goals for Orgs and groups report *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:55:47                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
!                                                                      *
! HP99999       Release 8                                              *
!***********************************************************************

#include 'setenv.sqc'    !Set environment

#define GB_GROUP_TBL
#define VC_PLAN_TBL
#define VC_GRP_GOAL
#define VC_ORG_GOAL

#Include 'rellang.sqc'


Begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup


begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report

  if $start-error <> 'Y'
    do Report
  end-if
  do Stdapi-Term
  do Reset
end-report


!********************************************
begin-procedure Init-Report
  move 'VCREPS' to $ReportID
  move 'VC Goals for Organizations and Groups Report' to $ReportTitle
  display $ReportTitle
  display ' '
  do Stdapi-init
  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.

  display $reportid
  display 'lang - '
  display $language_cd

  if $prcs_process_instance = ''
     display 'This process cannot be run outside the Process scheduler'
     let $start_error = 'Y'
  else
     let $start_error = 'N'
     do Select-Parameters
  end-if
end-procedure



!*********************************************************************
begin-procedure select-parameters

BEGIN-SELECT
A.OPRID
A.RUN_CNTL_ID
A.VC_PLAN_ID
A.VC_PAYOUT_PRD_ID
A.PRD_END_DT
A.TREE_NAME
A.VC_TREE_DT
A.VC_REPORT_TYPE
A.FROMDATE
A.THRUDATE
A.VC_PLAN_MEM_CRIT

  move &A.PRD_END_DT to $prd_end_dt
  do Format-DateTime($prd_end_dt, $prd_dt, {DEFYMD}, '', '')

from PS_RC_VC_REPORTS A
where A.OPRID       = $prcs_oprid and
      A.RUN_CNTL_ID = $prcs_run_cntl_id
end-select


end-procedure




!**************************************************************************
!    Report procedure
!**************************************************************************
begin-procedure Report

Begin-Select
VT.VC_PLAN_ID,
VT.DESCR50,
VE.VC_ORG_PLAN_WEIGHT,
VE.VC_GRP_PLAN_WEIGHT,
VE.VC_IND_PLAN_WEIGHT

  !

From    PS_VC_PLAN_TBL VT,PS_VC_PLAN_EFFDT VE
Where   VT.VC_PLAN_ID = &A.VC_PLAN_ID AND
        VE.VC_PLAN_ID = VT.VC_PLAN_ID AND
        VE.EFFDT = (Select Max(VE2.EFFDT) From PS_VC_PLAN_EFFDT VE2
                        Where VE2.VC_PLAN_ID = VE.VC_PLAN_ID AND
                        VE2.EFFDT <= &A.prd_end_dt)

End-Select

! Get Related Language info for PS_VC_PLAN_TBL
  move &VT.DESCR50 to $VC_PLAN_TBL-DESCR50
  do Get_Related_VC_PLAN_TBL(&A.VC_PLAN_ID)
  move  $VC_PLAN_TBL-DESCR50 to $VT_DESCR50


print $org_goal (,1)
position (+2)
print $goal_id (,1)
print $weighting (,104)
print $attained (,115)
position (+2)


Begin-select
VC_GOAL_ID,
DESCR100,
VC_WEIGHT_PERCENT,
VC_PCT_ATTAINED

! Get Related Language info for PS_VC_ORG_GOAL
  move &DESCR100 to $VC_ORG_GOAL-DESCR100
  do Get_Related_VC_ORG_GOAL(&VC_GOAL_ID, &A.VC_PAYOUT_PRD_ID, &A.VC_PLAN_ID)
  move $VC_ORG_GOAL-DESCR100 to $DESCR100

  print &VC_GOAL_ID (,1)
!  print $DESCR100 (,11)
  print &DESCR100 (,11)
  print &VC_WEIGHT_PERCENT (,105) edit 999.99
  print &VC_PCT_ATTAINED (,118) edit 999.99
  Position (+1)

FROM PS_VC_ORG_GOAL
Where VC_PLAN_ID = &A.VC_PLAN_ID AND
        VC_PAYOUT_PRD_ID = &A.VC_PAYOUT_PRD_ID
end-select

Position (+3)


print $group_goals (,1)
position (+2)

begin-select
TG.GB_GROUP_ID,
TG.DESCR

FROM PS_VC_TOP_GROUP_VW TG
WHERE TG.TREE_NAME = &A.TREE_NAME AND
      TG.TREE_EFFDT = &A.VC_TREE_DT
end-select

if rtrim(&A.VC_PLAN_MEM_CRIT,' ') = 'G' or rtrim(&A.VC_PLAN_MEM_CRIT,' ') = 'T'

begin-select
MAX(G2.EFFDT)  &G2_EFFDT=char
FROM PS_GB_GROUP_TBL G2
WHERE G2.GB_GROUP_ID = &TG.GB_GROUP_ID
AND   G2.EFFDT <= &A.prd_end_dt
end-select

! Get Related Language info for PS_GB_GROUP_TBL
  move &TG.DESCR to $GB_GROUP_TBL-DESCR
  do Get_Related_GB_GROUP_TBL(&G2_EFFDT, &TG.GB_GROUP_ID)
  move $GB_GROUP_TBL-DESCR to $GT_DESCR

end-if


Print $Group (,1)
Print $TG.GB_GROUP_ID (,9)
!Print $GT_DESCR (,25)
position (+2)

print $goal_id (,1)
print $weighting (,104)
print $attained (,115)
position (+1)

Begin-select
PGG.VC_GOAL_ID,
PGG.DESCR100,
PGG.VC_WEIGHT_PERCENT,
PGG.VC_PCT_ATTAINED

! Get Related Language info for PS_VC_ORG_GOAL
  move &PGG.DESCR100 to $VC_GRP_GOAL-DESCR100
  do Get_Related_VC_GRP_GOAL(&TG.GB_GROUP_ID, &PGG.VC_GOAL_ID, &A.VC_PAYOUT_PRD_ID, &A.VC_PLAN_ID)
  move $VC_GRP_GOAL-DESCR100 to $PGG_DESCR100

  print &PGG.VC_GOAL_ID (,1)
!  print $PGG_DESCR100 (,11)
  print &PGG.VC_WEIGHT_PERCENT (,105) edit 999.99
  print &PGG.VC_PCT_ATTAINED (,118) edit 999.99
  Position (+1)

FROM PS_VC_GRP_GOAL PGG
Where PGG.VC_PLAN_ID = &A.VC_PLAN_ID AND
        PGG.VC_PAYOUT_PRD_ID = &A.VC_PAYOUT_PRD_ID AND
        PGG.GB_GROUP_ID = &TG.GB_GROUP_ID
end-select
position (+3)
begin-select
TN.GB_GROUP_ID,
TN.GB_CHILD_GROUP_ID,
GB.DESCR

      do getrellang
        do getchild

from
PS_VC_TREE_NODE_VW TN , PS_GB_GROUP_TBL GB
where TN.TREE_NAME = &A.TREE_NAME AND
      TN.TREE_EFFDT = &A.VC_TREE_DT AND
      TN.GB_CHILD_GROUP_ID IN (SELECT TG1.GB_CHILD_GROUP_ID FROM PS_VC_TREE_GRP_VW TG1
                                WHERE TG1.GB_GROUP_ID = &TG.GB_GROUP_ID) AND
      TN.GB_CHILD_GROUP_ID = GB.GB_GROUP_ID AND
      GB.EFFDT = (SELECT MAX(EFFDT) FROM PS_GB_GROUP_TBL G2
                    Where G2.GB_GROUP_ID = TN.GB_CHILD_GROUP_ID AND
                          G2.EFFDT <= TN.TREE_EFFDT)

end-select

Position (+3)
End-Procedure

!********************************************************
Begin-procedure getrellang

if rtrim(&A.VC_PLAN_MEM_CRIT,' ') = 'G' or rtrim(&A.VC_PLAN_MEM_CRIT,' ') = 'T'

begin-select
MAX(G2B.EFFDT)  &G2B_EFFDT=char
FROM PS_GB_GROUP_TBL G2B
WHERE G2B.GB_GROUP_ID = &TN.GB_CHILD_GROUP_ID
AND   G2B.EFFDT <= $prd_end_dt
end-select

! Get Related Language info for PS_GB_GROUP_TBL
  move &GB.DESCR to $GB_GROUP_TBL-DESCR
  do Get_Related_GB_GROUP_TBL(&G2B_EFFDT, &TN.GB_CHILD_GROUP_ID)
  move $GB_GROUP_TBL-DESCR to $GB_DESCR

end-if

end-procedure

!********************************************************
Begin-procedure getchild

Print $Group (,1)
Print &TN.GB_CHILD_GROUP_ID (,9)
Print $GB_DESCR (,25)
position (+1)
Print $parent_group (,1)
Print &TN.GB_GROUP_ID (,25)
position (+2)

print $goal_id (,1)
print $weighting (,104)
print $attained (,115)
position (+2)
let #counter = 0
Begin-select
PG2.VC_GOAL_ID,
PG2.DESCR100,
PG2.VC_WEIGHT_PERCENT,
PG2.VC_PCT_ATTAINED
  let #counter = #counter + 1

! Get Related Language info for PS_VC_ORG_GOAL
  move &PG2.DESCR100 to $VC_GRP_GOAL-DESCR100
  do Get_Related_VC_GRP_GOAL(&TN.GB_CHILD_GROUP_ID, &PG2.VC_GOAL_ID, &A.VC_PAYOUT_PRD_ID, &A.VC_PLAN_ID)
  move $VC_GRP_GOAL-DESCR100 to $PG2_DESCR100

  print &PG2.VC_GOAL_ID (,1)
  print $VC_GRP_GOAL-DESCR100 (,11)
  print &PG2.VC_WEIGHT_PERCENT (,105) edit 999.99
  print &PG2.VC_PCT_ATTAINED (,118) edit 999.99
  Position (+1)

FROM PS_VC_GRP_GOAL PG2
Where VC_PLAN_ID = &A.VC_PLAN_ID AND
        VC_PAYOUT_PRD_ID = &A.VC_PAYOUT_PRD_ID AND
        GB_GROUP_ID = &TN.GB_CHILD_GROUP_ID
end-select
if #counter = 0
print $no_goals (,5)


end-if
position (+3)
end-procedure




!********************************************************
Begin-Heading 13

Print $current-date (2,119) edit 'MM/DD/YYYY'

 Page-Number (1,119)

 Print $plan_id (4,2)

 let $plan_info =  &A.VC_PLAN_ID || ' ' || $VT_DESCR50

 Print $plan_info (4,22)
 Print $payout_prd_id (5,2)
 Print &A.VC_PAYOUT_PRD_ID (5,22)
 Print $reportname (2,40)

 print &VE.VC_ORG_PLAN_WEIGHT (7,22) edit 999.99
 print &VE.VC_GRP_PLAN_WEIGHT (8,22) edit 999.99
 print &VE.VC_IND_PLAN_WEIGHT (9,22) edit 999.99


 Print $weighting (6,2)
 Print $org (7,4)

 Print $group (8,4)

 Print $ind (9,4)

End-Heading



!**************************************************************************
begin-procedure report-translation
!**************************************************************************
do Init_Report_Translation($ReportID,$Language_Cd)

do Get_Field_Information ('VCREPS','ACTUAL_AWARD',$actual_award,#DW)
do Get_Field_Information ('VCREPS','ACTUAL_FUNDING',$actual_funding,#DW)
do Get_Field_Information ('VCREPS','ANNUAL_RATE',$annual_rate,#DW)
do Get_Field_Information ('VCREPS','ATTAINED',$attained,#DW)
do Get_Field_Information ('VCREPS','CARRYOVER_BALLANCE',$carryover_balance,#DW)
do Get_Field_Information ('VCREPS','EMPLID',$emplid,#dw)
do Get_Field_Information ('VCREPS','EMPL_RCD',$empl_rcd,#DW)
do Get_Field_Information ('VCREPS','GROUP_GOALS',$group_goals,#DW)
do Get_Field_Information ('VCREPS','GUARANTEE',$guarantee,#DW)
do Get_Field_Information ('VCREPS','HIRE_DATE',$hire_date,#DW)
do Get_Field_Information ('VCREPS','JOB_CODE',$job_code,#DW)
do Get_Field_Information ('VCREPS','MAX_AWARD',$max_award,#DW)
do Get_Field_Information ('VCREPS','MIN/MAX',$minmax,#DW)
do Get_Field_Information ('VCREPS','MIN_AWARD',$min_award,#DW)
do Get_Field_Information ('VCREPS','NAME',$name,#DW)
do Get_Field_Information ('VCREPS','OVERALL_PERF_FACT',$overall_perf_factor,#DW)
do Get_Field_Information ('VCREPS','VC_PAYOUT_PRD_ID',$payout_prd_id,#DW)
do Get_Field_Information ('VCREPS','PERFORMACE_FACTOR',$parf_factor,#DW)
do Get_Field_Information ('VCREPS','PLAN ID',$plan_id,#DW)
do Get_Field_Information ('VCREPS','PROJECTED_PAYOUT',$projected_payout,#DW)
do Get_Field_Information ('VCREPS','VC_TARGET_AWARD',$target_award,#DW)
do Get_Field_Information ('VCREPS','VC_TARGET_VALUE',$target_value,#DW)
do Get_Field_Information ('VCREPS','TOTAL_PLAN',$total_plan,#DW)
do Get_Field_Information ('VCREPS','TOTAL_GROUP',$total_group,#DW)
do Get_Field_Information ('VCREPS','UNALLOCATED_BAL',$unallocated_balance,#DW)
do Get_Field_Information ('VCREPS','VALUATION',$valuation,#DW)
do Get_Field_Information ('VCREPS','VARIANCE',$variance,#DW)
do Get_Field_Information ('VCREPS','WEIGHTING',$weighting,#DW)
do Get_Field_Information ('VCREPS','DETAIL',$detail,#DW)
do Get_Field_Information ('VCREPS','SUMMARY',$summary,#DW)
do Get_Field_Information ('VCREPS','CURR_CD',$curr_cd,#DW)
do Get_Field_Information ('VCREPS','VC_AWARD_VALUE',$award_value,#DW)
do Get_Field_Information ('VCREPS','START_DATE',$start_dt,#DW)
do Get_Field_Information ('VCREPS','END_DATE',$end_dt,#DW)
do Get_Field_Information ('VCREPS','P_FREQ',$p_freq,#DW)
do Get_Field_Information ('VCREPS','ERN_CD',$ern_cd,#DW)
do Get_Field_Information ('VCREPS','PLAN_TYPE',$p_type,#DW)
do Get_Field_Information ('VCREPS','PLAN_MEM',$p_mem,#DW)
do Get_Field_Information ('VCREPS','VALUATION',$valuation,#DW)
do Get_Field_Information ('VCREPS','VC_GOAL_TYPE',$goal_type,#DW)
do Get_Field_Information ('VCREPS','CARRYOVER',$carryover,#DW)
do Get_Field_Information ('VCREPS','ORG',$org,#DW)
do Get_Field_Information ('VCREPS','IND',$ind,#DW)
do Get_Field_Information ('VCREPS','GROUP',$group,#DW)
do Get_Field_Information ('VCREPS','PRORATE',$prorate,#DW)
do Get_Field_Information ('VCREPS','APPROVER',$approver,#DW)
do Get_Field_Information ('VCREPS','AWARD_DATE',$award_datelbl,#DW)
do Get_Field_Information ('VCREPS','STATUS',$status,#DW)
do Get_Field_Information ('VCREPS','FROM_DATE',$fromdatelbl,#DW)
do Get_Field_Information ('VCREPS','THRU_DATE',$thrudatelbl,#DW)
do Get_Field_Information ('VCREPS','VC_ORG_GOAL',$org_goal,#DW)
do Get_Field_Information ('VCREPS','VC_GOAL_ID',$goal_id,#DW)
do Get_Field_Information ('VCREPS','PARENT_GROUP',$parent_group,#DW)
do Get_Field_Information ('VCREPS','NO_GOALS',$no_goals,#DW)

do Get_Field_Information ('VCREPS','VC011',$reportname,#DW)
end-procedure

!*****************************************************************
#include 'stdapi.sqc'    !Routine to update run Status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'
#include 'sqrtrans.sqc'
#Include 'getrplng.sqc'  !Get the report language
#include 'readxlat.sqc'  !get xlat values
