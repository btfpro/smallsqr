!***********************************************************************
!  TAX916LC:  Local W-2 Tax Totals Report                              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2012, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2012/10/09:12:03:26                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  872690                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup31.sqc' !Printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'TAX916LC' to $ReportID
  display ''
  display 'Local W-2 Tax Totals Report'

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Initialization


  if $EEDetailFlag = 'Y'
    move 'Local W-2 Tax Totals Detail Report' to $ReportTitle
    display ''
    display 'Local W-2 EE detail records will be printed'
    display 'instead of the Locality Summary records'
  else
     if $EEDetailFlag = 'N'
       display ''
       move 'Local W-2 Tax Totals Summary Report' to $ReportTitle
       display 'Local W-2 summary records will be printed'
       display 'instead of EE detail records'
     else
         move 'Local and Federal W-2 Tax Totals Detail Report' to $ReportTitle
         display ''
         display 'Local and Federal W-2 EE detail records will be printed'
         display 'instead of the Locality Summary records'
     end-if
  end-if
end-procedure

begin-procedure Initialization
  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4

  move 0 to #Local_Wages_st_tot
  move 0 to #Local_Tax_st_tot
  move 0 to #Count_st_tot
  move 0 to #Local_Wages_co_tot
  move 0 to #Local_Tax_co_tot
  move 0 to #Count_co_tot
  move 0 to #Local_Wages_grand_tot
  move 0 to #Local_Tax_grand_tot
  move 0 to #Count_grand_tot

  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

  move $910Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear
  do Get-Tax-Reporting-Run-Controls
  do assign-year-end-variables
  move &TX.Balance_Year to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

  if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
    display ''
    display 'Current Year is not one greater than Tax Reporting Year.'
    display 'Current Year is    ' noline
    display  #saveAsOfYear  9999
    display 'Tax Reporting Year ' noline
    display &TX.Balance_Year
    input $Answer maxlen=1 'Do you want to continue? (Y/N)'
    uppercase $Answer
    if $Answer <> 'Y'
      stop
    end-if
  end-if

  do Select-US-Year-End-Parameters
  do Convert-Parameters

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT
end-procedure

begin-heading 9
  #Include 'stdhdg01.sqc'

  if $EEDetailFlag = 'N'
    print 'W2 Rpt Company '        (3,1)
    print $A.W2_Reporting_Co       (0,+2)
    print $A.Descr                 (0,+2)
    let $TaxYear = 'Tax Year ' || $CalYear
    print $TaxYear                 (3,)    center
    print 'Federal EIN '           (4,1)
    print $A.Federal_EIN           (,+2)   edit xx-xxxxxxx
    print 'State:'                 (6,1)
    print $State                   (,+1,2)
    print ' '                      (+2,1)
    print 'W-2 Local'              (,12)
    print 'Employer ID'            (,25)
    print 'Number of'              (,47)
    print 'Locality'               (+1,1)
    print 'Name'                   (,12)
    print 'LWT'                    (,25)
    print 'W-2 Statements'         (,42)
    print 'Total Local Wages'      (,62)
    print 'Total Local Income Tax' (,82)
  else
    print 'W2 Rpt Company '        (3,1)
    print $A.W2_Reporting_Co       (0,+2)
    print $A.Descr                 (0,+2)
    let $TaxYear = 'Tax Year ' || $CalYear
    print $TaxYear                 (3,)    center
    print 'Federal EIN '           (4,1)
    print $A.Federal_EIN           (,+2)   edit xx-xxxxxxx
    print 'State:'                 (5,1)
    print $State                   (,+1)
    print 'Employer Local Tax ID:' (6,1)
    print &Employer_ID_LWT         (,+1)

    print 'W-2 Local'              (+2,1)
    print ' '                      (,30)
    print 'SSN/Name/'              (,22)
    print 'Name'                   (+1,1)
    print 'Address'                (,22)
    print 'Total Local Wages'      (,45)
    print 'Total Local Income Tax' (,65)

    if $EEDetailFlag = 'F'
       print 'Box'                    (,90)
       print 'Amount'                 (,103)
       print '-- Federal Data --'     (-1,90)
    end-if
  end-if
end-heading

begin-procedure Process-Main
begin-SELECT
A.COMPANY
A.DESCR
A.FEDERAL_EIN
A.W2_REPORTING_CO

  move &A.Federal_EIN     to $A.Federal_EIN  099999999
  move &A.Descr           to $A.Descr
  move &A.W2_Reporting_Co to $A.W2_Reporting_Co

  if $EEDetailFlag = 'N'
    do Get-Local-Count
  else
    if $EEDetailFlag = 'F'
       let $DD.BOX = 'AND DD.BOX IN (''' || $YE_Fed_Wages || ''',''' || $YE_Fed_Tax || ''',''' ||
                         $YE_SS_Wages || ''',''' || $YE_SS_Tax || ''',''' || $YE_Med_Wages ||
                         ''',''' || $YE_Med_Tax || ''',''' || $YE_Local_Wages || ''',''' ||
                         $YE_Local_Tax || ''')'
    else
       let $DD.BOX = 'AND DD.BOX IN (''' || $YE_Local_Wages || ''',''' || $YE_Local_Tax || ''')'
    end-if

    do Get-EE-Details
  end-if

FROM  PS_W2_COMPANY A
WHERE A.CALENDAR_YEAR    = &TX.Balance_Year
  AND A.W2_REPORTING_CO  = A.COMPANY
  AND A.W2_REPORTING_CO <> ' '
  AND A.TAXFORM_ID       = 'W'
ORDER BY A.W2_REPORTING_CO
end-SELECT

 if $EEDetailFlag = 'N'
    print 'Grand Totals:'       (+2,1)

    do Format-Number(#Count_grand_tot, $out, 'B99,999')               !Count
    print $out  (,50)

    do Format-Number(#Local_Wages_grand_tot, $out, 'B9999999999.99')           !Local wages
    print $out  (,65)

    do Format-Number(#Local_Tax_grand_tot, $out, 'B9999999999.99')           !Local tax
    print $out  (,90)

  else

    print 'Number of'                    (+5,24)

    print 'W-2 Statements'               (+1,22)
    print 'Total Local Wages'            (,45)
    print 'Total Local Income Tax'       (,65)

    print 'Grand Totals:'       (+2,1)

    do Format-Number(#Count_grand_tot, $out, 'B99,999')               !Count
    print $out  (,22)

    do Format-Number(#Local_Wages_grand_tot, $out, 'B9999999999.99')           !Local wages
    print $out  (,45)

    do Format-Number(#Local_Tax_grand_tot, $out, 'B9999999999.99')           !Local tax
    print $out  (,65)
  end-if
end-procedure

begin-procedure Get-Local-Count
begin-SELECT DISTINCT
C1.W2_REPORTING_CO   () on-break print=never after=After-W2-Co
D1.STATE             () on-break print=never level=1 after=After-State
D1.LOCALITY          () on-break print=never level=2 after=After-Locality
D1.EMPLID

   add 1 to #Count

   let $State = rtrim(&D1.State, ' ')
   move &D1.Locality to $Locality

FROM  PS_YE_AMOUNTS D1, PS_YE_EE E1, PS_W2_COMPANY C1
WHERE C1.W2_REPORTING_CO = &A.W2_Reporting_Co
  AND D1.COMPANY         = C1.COMPANY
  AND D1.CALENDAR_YEAR   = C1.CALENDAR_YEAR
  AND D1.TAXFORM_ID      = C1.TAXFORM_ID
  AND D1.CALENDAR_YEAR   = &TX.Balance_Year
  AND (D1.STATE         <> ' ' AND
       D1.STATE         <> 'PA')                 !Exclude Pennsylvania
  AND D1.LOCALITY       <> ' '
  AND D1.COMPANY         = E1.COMPANY
  AND D1.EMPLID          = E1.EMPLID
  AND D1.TAXFORM_ID      = 'W'
  AND D1.TAXFORM_ID      = E1.TAXFORM_ID
  AND D1.CALENDAR_YEAR   = E1.CALENDAR_YEAR
  AND E1.PROCESS_FLAG   <> 'V'
ORDER BY C1.W2_REPORTING_CO, D1.STATE, D1.LOCALITY
end-SELECT
end-procedure

begin-procedure After-Locality
  do Get-Local-Totals
  move &A.W2_Reporting_Co to $Company

  let $Locality = RTRIM($Locality,' ')
  do Get-Local-Tax-Data
  do Get-Locality-Print-Name

  print $Locality           (+1,1,9)
  print $LocalityPrintName  (,12,12)
  print &Employer_ID_LWT    (,25)

  do Format-Number(#Count, $out, 'B99,999')               !Count
  print $out  (,50)

  do Format-Number(#Local_Wages, $out, 'B9999999999.99')           !Local wages
  print $out  (,65)

  do Format-Number(#Local_Tax, $out, 'B9999999999.99')           !Local tax
  print $out  (,90)

  add #Local_Wages to #Local_Wages_st_tot
  add #Local_Tax to #Local_Tax_st_tot
  add #Count to #Count_st_tot

  move 0 to #Local_Wages
  move 0 to #Local_Tax
  move 0 to #Count
end-procedure

begin-procedure Get-Local-Totals
begin-SELECT
C.W2_REPORTING_CO
D.STATE
D.LOCALITY
D.EMPLID
D.BOX
#ifdef DB2ALL
DECIMAL(SUM(D.W2_AMOUNT),15,3) &D.W2_Amount
#else
SUM(D.W2_AMOUNT) &D.W2_Amount
#endif
  move &D.W2_Amount to #Amount

   let $D.Box = RTRIM(&D.Box,' ')
   evaluate $D.Box
     when = $YE_Local_Wages                      !Local wages
       add #Amount to #Local_Wages
       break
     when = $YE_Local_Tax                        !Local tax
       add #Amount to #Local_Tax
       break
   end-evaluate

FROM  PS_YE_AMOUNTS D, PS_YE_EE E, PS_W2_COMPANY C
WHERE C.W2_REPORTING_CO = &A.W2_Reporting_Co
  AND D.COMPANY         = C.COMPANY
  AND D.CALENDAR_YEAR   = C.CALENDAR_YEAR
  AND D.TAXFORM_ID      = C.TAXFORM_ID
  AND D.CALENDAR_YEAR   = &TX.Balance_Year
  AND D.STATE           = $State
  AND D.LOCALITY        = $Locality
  AND D.BOX            IN ($YE_Local_Wages, $YE_Local_Tax)
  AND D.COMPANY         = E.COMPANY
  AND D.EMPLID          = E.EMPLID
  AND D.TAXFORM_ID      = 'W'
  AND D.TAXFORM_ID      = E.TAXFORM_ID
  AND D.CALENDAR_YEAR   = E.CALENDAR_YEAR
  AND E.PROCESS_FLAG   <> 'V'
GROUP BY C.W2_REPORTING_CO,D.STATE,D.LOCALITY,D.EMPLID,D.BOX
ORDER BY C.W2_REPORTING_CO,D.STATE,D.LOCALITY,D.EMPLID,D.BOX
end-SELECT
end-procedure

begin-procedure After-State

  add #Local_Wages_st_tot to #Local_Wages_co_tot
  add #Local_Tax_st_tot to #Local_Tax_co_tot
  add #Count_st_tot to #Count_co_tot

  move 0 to #Local_Wages_st_tot
  move 0 to #Local_Tax_st_tot
  move 0 to #Count_st_tot

  new-page
end-procedure

begin-procedure After-W2-Co

  print 'W2 Rpt Company Totals:'       (+2,1)

  do Format-Number(#Count_co_tot, $out, 'B99,999')               !Count
  print $out  (,50)

  do Format-Number(#Local_Wages_co_tot, $out, 'B9999999999.99')           !Local wages
  print $out  (,65)

  do Format-Number(#Local_Tax_co_tot, $out, 'B9999999999.99')           !Local tax
  print $out  (,90)

  add #Local_Wages_co_tot to #Local_Wages_grand_tot
  add #Local_Tax_co_tot to #Local_Tax_grand_tot
  add #Count_co_tot to #Count_grand_tot

  move 0 to #Local_Wages_co_tot
  move 0 to #Local_Tax_co_tot
  move 0 to #Count_co_tot

  new-page
end-procedure

begin-procedure After-Detail-W2-Co


  print 'Number of'                    (+5,24)

  print 'W-2 Statements'               (+1,22)
  print 'Total Local Wages'            (,45)
  print 'Total Local Income Tax'       (,65)

  print 'W2 Rpt Company Totals:'       (+2,1)

  do Format-Number(#Count_co_tot, $out, 'B99,999')               !Count
  print $out  (,22)

  do Format-Number(#Local_Wages_co_tot, $out, 'B9999999999.99')           !Local wages
  print $out  (,45)

  do Format-Number(#Local_Tax_co_tot, $out, 'B9999999999.99')           !Local tax
  print $out  (,65)

  add #Local_Wages_co_tot to #Local_Wages_grand_tot
  add #Local_Tax_co_tot to #Local_Tax_grand_tot
  add #Count_co_tot to #Count_grand_tot

  move 0 to #Local_Wages_co_tot
  move 0 to #Local_Tax_co_tot
  move 0 to #Count_co_tot

  new-page
end-procedure

begin-procedure Get-EE-Details
begin-SELECT DISTINCT
CC.W2_REPORTING_CO () on-break print=never level=1 after=After-Detail-W2-Co
DD.COMPANY
DD.STATE
DD.LOCALITY () on-break print=never level=2 after=Print-Locality-Summary
DD.EMPLID  () on-break print=never level=3 after=After-EE
DD.BOX
DD.W2_AMOUNT
FF.YE_LNAME
FF.YE_FNAME
FF.YE_MIDDLE_NAME
FF.YE_SUFFIX
FF.SSN
FF.ADDRESS1
FF.ADDRESS2
FF.CITY
FF.STATE
FF.POSTAL
FF.COUNTRY

   if &DD.State <> $State
      move &DD.State     to $State
   end-if
   if &DD.Locality <> $Locality
      move &DD.Locality  to $Locality
      do Locality-Break
   end-if

   let $DD.Emplid  = rtrim(&DD.EMPLID, ' ')
   let $DD.Company  = rtrim(&DD.COMPANY, ' ')
   move &DD.W2_Amount      to #Amount
   move &FF.YE_LName       to $W2_LName
   move &FF.YE_Middle_Name to $W2_MName
   move &FF.YE_FName       to $W2_FName
   move &FF.YE_Suffix      to $W2_Suffix
   move &FF.SSN            to $W2_SSN

   move &FF.Address1        to $FF.Address1
   move &FF.Address2        to $FF.Address2
   move &FF.Country         to $FF.Country
   let  $FF.City            =  RTRIM(&FF.City,' ')
   let $FF.State = rtrim(&FF.State, ' ')
   move &FF.Postal          to $FF.Zip
   uppercase $FF.Address1
   uppercase $FF.Address2
   uppercase $FF.Country
   uppercase $FF.City
   do Get-EE-Address-Line3


   let $DD.Box = RTRIM(&DD.Box,' ')
   evaluate $DD.Box
     when = $YE_Fed_Wages                        !Federal wages
       add  #Amount to #Fed_Wages
       break
     when = $YE_Fed_Tax                          !Federal tax
       add  #Amount to #Fed_Tax
       break
     when = $YE_SS_Wages                         !SS wages
       add  #Amount to #SS_Wages
       break
     when = $YE_SS_Tax                           !SS Tax
       add  #Amount to #SS_Tax
       break
     when = $YE_Med_Wages                        !Medicare wages
       add  #Amount to #Med_Wages
       break
     when = $YE_Med_Tax                          !Medicare tax
       add  #Amount to #Med_Tax
       break
     when = $YE_Local_Wages                      !Local wages
       add #Amount to #Local_Wages
       break
     when = $YE_Local_Tax                        !Local tax
       add #Amount to #Local_Tax
       break
   end-evaluate

FROM  PS_YE_AMOUNTS DD, PS_YE_EE EE, PS_YE_DATA FF, PS_W2_COMPANY CC
WHERE CC.W2_REPORTING_CO = &A.W2_Reporting_Co
  AND DD.COMPANY         = CC.COMPANY
  AND DD.CALENDAR_YEAR   = CC.CALENDAR_YEAR
  AND DD.TAXFORM_ID      = CC.TAXFORM_ID
  AND DD.COMPANY         = EE.COMPANY
  AND DD.EMPLID          = EE.EMPLID
  AND DD.TAXFORM_ID      = EE.TAXFORM_ID
  AND DD.CALENDAR_YEAR   = EE.CALENDAR_YEAR
  AND DD.COMPANY         = FF.COMPANY
  AND DD.EMPLID          = FF.EMPLID
  AND DD.TAXFORM_ID      = FF.TAXFORM_ID
  AND DD.CALENDAR_YEAR   = FF.CALENDAR_YEAR
  AND DD.SEQUENCE_NUMBER = FF.SEQUENCE_NUMBER
  AND DD.CALENDAR_YEAR   = &TX.Balance_Year
  AND (DD.STATE         <> ' ' AND
       DD.STATE         <> 'PA')                 !Exclude Pennsylvania
  AND DD.BOX IN ($YE_Local_Wages,$YE_Local_Tax)
  AND DD.TAXFORM_ID      = 'W'
  AND EE.PROCESS_FLAG   <> 'V'
ORDER BY CC.W2_REPORTING_CO,DD.STATE,DD.LOCALITY,FF.SSN
end-SELECT
end-procedure

begin-procedure After-EE

  if RTRIM($Locality, ' ') <> ''
     let $SSN = ' '
     move $W2_SSN to $S123 xxx
     if $S123 = &Temp_SSN_Mask or RTRIM($W2_SSN, ' ') = ''
       move 'Unavailable' to $W2_SSN
     else
       move $W2_SSN to $SSN xxx-xx-xxxx
     end-if


     let $W2_FName  = rtrim($W2_FName,' ') ||' '
     let $W2_MName  = rtrim($W2_MName,' ') ||' '
     let $W2_LName  = rtrim($W2_LName,' ') ||' '
     let $W2_Suffix = rtrim($W2_Suffix,' ') ||' '

     if $W2_MName <> ' '
        let $YE_Whole_Name = $W2_FName || $W2_MName || $W2_LName || $W2_Suffix
     else
        let $YE_Whole_Name = $W2_FName || $W2_LName || $W2_Suffix
     end-if

     if $EEDetailFlag = 'F'

        let $Print-Fed-Wages = 'Y'
        let $Print-Fed-Tax   = 'Y'
        let $Print-SS-Wages  = 'Y'
        let $Print-SS-Tax    = 'Y'
        let $Print-Med-Wages = 'Y'
        let $Print-Med-Tax   = 'Y'

        do Get-Federal-Box-Info

     end-if

     print $LocalityPrintName  (+2,1,19)
     print $SSN                (,22)

     do Format-Number(#Local_Wages, $out, 'B9999999999.99')           !Local wages
     print $out  (,48)
     do Format-Number(#Local_Tax, $out, 'B9999999999.99')           !Local tax
     print $out  (,73)

     if $EEDetailFlag = 'F'
        do Print-Federal-Box-Info
     end-if

     print $YE_Whole_Name      (+1,22,23)

     if $EEDetailFlag = 'F'
        do Print-Federal-Box-Info
     end-if

     print $FF.Address1       (+1,22)

     if $EEDetailFlag = 'F'
        do Print-Federal-Box-Info
     end-if

     if RTRIM($FF.Address2, ' ') <> ''
        print $FF.Address2    (+1,22)

        if $EEDetailFlag = 'F'
           do Print-Federal-Box-Info
        end-if

     end-if

     print $FF.Address3    (+1,22)

     if $EEDetailFlag = 'F'
        do Print-Federal-Box-Info
     end-if

     if #Med_Wages  > 0 and $Print-Med-Wages = 'Y'
        print $YE_Med_Wages (+1,90)

        do Format-Number(#Med_Wages, $out, 'B9999999999.99')
        print $out          (,95)
     end-if

     if #Med_Tax  > 0 and $Print-Med-Tax = 'Y'
        print $YE_Med_Tax   (+1,90)

        do Format-Number(#Med_Tax, $out, 'B9999999999.99')
        print $out          (,95)
     end-if


     let #Dtl_Count = #Dtl_Count + 1
     let #Dtl_AmtLocal_Wages = #Dtl_AmtLocal_Wages + #Local_Wages
     let #Dtl_AmtLocal_Tax = #Dtl_AmtLocal_Tax + #Local_Tax

   end-if

   let #Amount = 0
   let #Local_Wages = 0
   let #Local_Tax = 0

   let #Fed_Wages = 0
   let #Fed_Tax = 0
   let #SS_Wages = 0
   let #SS_Tax = 0
   let #Med_Wages = 0
   let #Med_Tax = 0

end-procedure


begin-procedure Get-EE-Address-Line3
    if $FF.Country = 'USA'
      move $FF.Zip            to $FF.ZipExtsn ~~~~~~xxxx
      if instr($FF.Zip,'-',6) = 0
      and $FF.ZipExtsn <> '    '
        let $FF.Zip = substr($FF.Zip,1,5) || '-' || substr($FF.Zip,6,4)
      end-if
      let $FF.Zip = rtrim($FF.Zip, ' ')
      let $FF.Address3 = $FF.City || ', ' || $FF.State || ' ' || $FF.Zip
    else
      do Get-Country-Code
      let $Country = SUBSTR(&CT.Descr,1,15)
      let $Country = rtrim($Country, ' ')
      uppercase $Country
      let $FF.Zip = rtrim($FF.Zip, ' ')
      let $FF.Address3 = $FF.City || ', ' || $FF.State || ' ' ||
                $FF.Zip  || ' '  || $Country
    end-if
end-procedure

begin-procedure Get-Country-Code
begin-SELECT
CT.DESCR
FROM  PS_COUNTRY_TBL CT
WHERE CT.COUNTRY = $FF.Country
end-SELECT
end-procedure


begin-procedure Print-Federal-Box-Info

  if #Fed_Wages > 0 and $Print-Fed-Wages = 'Y'

      print $YE_Fed_Wages (,90)

      do Format-Number(#Fed_Wages, $out, 'B9999999999.99')
      print $out          (,95)
      let $Print-Fed-Wages = 'N'

  else
      if #Fed_Tax > 0 and $Print-Fed-Tax = 'Y'

          print $YE_Fed_Tax   (,90)

          do Format-Number(#Fed_Tax, $out, 'B9999999999.99')
          print $out          (,95)
          let $Print-Fed-Tax = 'N'

      else
         if #SS_Wages  > 0 and $Print-SS-Wages = 'Y'

             print $YE_SS_Wages  (,90)
             do Format-Number(#SS_Wages, $out, 'B9999999999.99')
             print $out          (,95)
             let $Print-SS-Wages = 'N'

         else
             if #SS_Tax  > 0 and $Print-SS-Tax = 'Y'

             print $YE_SS_Tax    (,90)

             do Format-Number(#SS_Tax, $out, 'B9999999999.99')
             print $out          (,95)
             let $Print-SS-Tax = 'N'

             else
                 if #Med_Wages  > 0 and $Print-Med-Wages = 'Y'
                     print $YE_Med_Wages (,90)

                     do Format-Number(#Med_Wages, $out, 'B9999999999.99')
                     print $out          (,95)
                     let $Print-Med-Wages = 'N'

                 else
                     if #Med_Tax  > 0 and $Print-Med-Tax = 'Y'
                         print $YE_Med_Tax   (,90)
                         do Format-Number(#Med_Tax, $out, 'B9999999999.99')
                         print $out          (,95)
                         let $Print-Med-Tax = 'N'

                     end-if
                 end-if
             end-if
         end-if
      end-if
  end-if

end-procedure

begin-procedure Get-Federal-Box-Info

begin-SELECT DISTINCT
DD2.BOX
DD2.W2_AMOUNT


   move &DD2.W2_Amount      to #Amount

   let $DD2.Box = RTRIM(&DD2.Box,' ')
   evaluate $DD2.Box
     when = $YE_Fed_Wages                        !Federal wages
       add  #Amount to #Fed_Wages
       break
     when = $YE_Fed_Tax                          !Federal tax
       add  #Amount to #Fed_Tax
       break
     when = $YE_SS_Wages                         !SS wages
       add  #Amount to #SS_Wages
       break
     when = $YE_SS_Tax                           !SS Tax
       add  #Amount to #SS_Tax
       break
     when = $YE_Med_Wages                        !Medicare wages
       add  #Amount to #Med_Wages
       break
     when = $YE_Med_Tax                          !Medicare tax
       add  #Amount to #Med_Tax
       break
   end-evaluate

FROM  PS_YE_AMOUNTS DD2, PS_W2_COMPANY CC2
WHERE CC2.W2_REPORTING_CO = &A.W2_Reporting_Co
  AND DD2.COMPANY         = CC2.COMPANY
  AND DD2.CALENDAR_YEAR   = CC2.CALENDAR_YEAR
  AND DD2.TAXFORM_ID      = CC2.TAXFORM_ID
  AND DD2.COMPANY         = $DD.Company
  AND DD2.EMPLID          = $DD.Emplid
  AND DD2.TAXFORM_ID      = 'W'
  AND DD2.CALENDAR_YEAR   = &TX.Balance_Year
  AND DD2.BOX IN ($YE_Fed_Wages,$YE_Fed_Tax,$YE_SS_Wages,$YE_SS_Tax,$YE_Med_Wages,$YE_Med_Tax)
end-SELECT
end-procedure

begin-procedure Locality-Break
  move &A.W2_Reporting_Co to $Company

  let $Locality = RTRIM($Locality,' ')
  do Get-Local-Tax-Data
  do Get-Locality-Print-Name
end-procedure

begin-procedure Print-Locality-Summary

  if RTRIM($Locality, ' ') <> ''

    let $Total_Label = RTRIM($LocalityPrintName, ' ') || ' Totals:'
    print 'Number of'              (+5,24)

    print 'W-2 Statements'         (+1,22)
    print 'Total Local Wages'      (,45)
    print 'Total Local Income Tax' (,65)

    print $Total_Label             (+2,10,19)

    do Format-Number(#Dtl_Count, $out, 'B99,999')               !Count
    print $out  (,27)

    do Format-Number(#Dtl_AmtLocal_Wages, $out, 'B9999999999.99')        !Local wages
    print $out  (,48)

    do Format-Number(#Dtl_AmtLocal_Tax, $out, 'B9999999999.99')        !Local tax
    print $out  (,73)

    new-page
  end-if

  add #Dtl_AmtLocal_Wages to #Local_Wages_co_tot
  add #Dtl_AmtLocal_Tax to #Local_Tax_co_tot
  add #Dtl_Count to #Count_co_tot

  move 0 to #Dtl_Count
  move 0 to #Dtl_AmtLocal_Wages
  move 0 to #Dtl_AmtLocal_Tax
end-procedure

begin-procedure Get-Locality-Print-Name
  move 'N' to $LocalityNameFound

begin-SELECT
L2.W2_PRT_NAME
L2.LOCALITY_ABBRV

  move 'Y' to $LocalityNameFound

FROM  PS_LOCAL_TAX_TBL2 L2
WHERE L2.STATE     = $State
  AND L2.LOCALITY  = $Locality
  AND L2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_LOCAL_TAX_TBL2
       WHERE  STATE    = L2.STATE
         AND  LOCALITY = L2.LOCALITY
         AND  EFFDT   <= $AsOfDate)
end-SELECT

  if $LocalityNameFound = 'Y' and RTRIM(&L2.W2_Prt_Name,' ') <> ''
    move &L2.W2_Prt_Name to $LocalityPrintName
  else
    if $LocalityNameFound = 'Y' and RTRIM(&L2.Locality_Abbrv,' ') <> ''
       move &L2.Locality_Abbrv to $LocalityPrintName
    else
       do Get-Locality-Abbrv
    end-if
  end-if
end-procedure

begin-procedure Get-Locality-Abbrv
begin-SELECT
L.LOCALITY_NAME

  let $LocalityPrintName  = SUBSTR(&L.LOCALITY_NAME,1,16)

FROM  PS_LOCAL_TAX_TBL L
WHERE L.STATE      = $State
  AND L.LOCALITY   = $Locality
  AND L.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_LOCAL_TAX_TBL
       WHERE  STATE    = L.STATE
         AND  LOCALITY = L.LOCALITY
         AND  EFFDT   <= $AsOfDate)
end-SELECT

end-procedure

begin-procedure Convert-Parameters
  move $RC_US_YE.LOCTX_EEDT_FLAG   to $EEDetailFlag
end-procedure

#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'txrnctl2.sqc'  !Get-Year-End-Tax-Reporting-Run-Controls procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getlcdta.sqc'  !Get-Local-Tax-Data procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'w2.sqc'        !Translation of W2 Boxes
