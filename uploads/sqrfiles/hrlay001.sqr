!***********************************************************************
!  HRLAY001:  Layoff Roster Report                                       
!***********************************************************************
!***********************************************************************
!                                                                      
!               Confidentiality Information:                           
!                                                                      
!                                                                      
! This module contains confidential and proprietary information        
! of Oracle; it is not to be copied, reproduced, or transmitted        
! in any form, by any means, in whole or in part, nor is it to         
! be used for any purpose other than that for which it is              
! expressly provided under the applicable license agreement.           
!                                                                      
! Copyright (C) 2006 Oracle. All Rights Reserved.                      
!                                                                    
!***********************************************************************
!***********************************************************************
!                                                                      
!          $Date:  2006/10/06:02:20:00                                 
!       $Release:  HR9                                                 
!      $Revision:  102                                                 
!***********************************************************************
! Description:       
!***********************************************************************

#include 'setenv.sqc'   !Set environment


!***********************************************************************
!-----------------Seup Section-----------------------------------------
!Description: This section sets the Page Size and Font Size            
!***********************************************************************

BEGIN-SETUP
#include 'setupdb.sqc'
page-size 88 131
declare printer
type          = HPLASERJET
orientation   = portrait
lines-inch    = 8
chars-inch    = 18.6
top-margin    = 0.30
left-margin   = 0.25
font          = 5
point-size    = 7
lines-inch    = 8
END-SETUP
 

!***********************************************************************
!-----------------Heading Section--------------------------------------
!Description: This section Prints the Header of this Report            
!***********************************************************************

BEGIN-HEADING 3
print $Reportname  (1,1)
let $Name = $REPORT_NAME
print $Name              (1,15)
print $Peoplesoft       (1,63)
Print $Pageno (1,115) 
PAGE-NUMBER (1,125)' '             
let $ReportTitle = $LAY_RPT_LBL
print $ReportTitle       (2,58) 
!Do Get-Current-DateTime
print $Rundate         (2,115) 
print $currentdate () !$current-date () edit 'dd/mm/yyyy'
!print $AsOfToday ()
print $Runtime         (3,115)
print $current-date () edit 'HH:MI:SS'

END-HEADING

!***********************************************************************
!-----------------Program Section--------------------------------------
!Description:       
!***********************************************************************

BEGIN-PROGRAM

 DO STDAPI-INIT
 !Do Init-DateTime
 do Init-DateTime
   do Get-Current-DateTime
     
 DO Get-RP-Lbl
 do Find-Date-Format
          evaluate $DT_FMT
            when = 'M'
                 do Format-DateTime($AsOfToday,$currentdate,{DEFMDY},'','')
                 break
            when = 'D'
                 do Format-DateTime($AsOfToday,$$currentdate,{DEFDMY},'','')
                 break
            when-Other
                 do Format-DateTime($AsOfToday,$currentdate,{DEFYMD},'','')
                 break
          end-evaluate
   Let $Empl_found = 'N'
 DO GET-RUN-PARAMS
   LET $statusfound = 'N'
   DO SELECT-STATUS1
  DO STDAPI-TERM
 
END-PROGRAM



!***********************************************************************
!-----------------Find-Date-Format-------------------------------------*
!Description: 
!***********************************************************************
begin-procedure Find-Date-Format

let $REC_FOUND = 'N'
begin-SELECT
A.USER_OPTION_VALUE
  let $REC_FOUND = 'Y'
FROM PSUSERPRSNLOPTN A

WHERE A.OPRID = $prcs_oprid
  AND A.USEROPTN = 'DFRMT'
end-SELECT

IF $REC_FOUND = 'N'
  let $DT_FMT = 'M'
ELSE
  LET $DT_FMT = &A.USER_OPTION_VALUE
  LET $DT_FMT = RTRIM($DT_FMT,' ')
END-If

end-procedure !Find-Date-Format



!***********************************************************************
!-----------------Procedure Layoff Roster------------------------------
!Description: This section gets teh run cntl params(currentonly rosid) 
!***********************************************************************

BEGIN-PROCEDURE GET-RUN-PARAMS

BEGIN-SELECT
OPRID
RUN_CNTL_ID
LBR_ROSTER_ID
  LET $rost_id = &LBR_ROSTER_ID
  Let $rost_id = rtrim($rost_id,' ') 
  DO ROSTER-DETAILS
FROM PS_HR_RUNCNTL_LY1
WHERE OPRID = $prcs_oprid
  AND RUN_CNTL_ID = $prcs_run_cntl_id
END-SELECT
END-PROCEDURE

!***********************************************************************
!-----------------Procedure Layoff Roster------------------------------
!Description: This section selects the roster desc,type..              
!***********************************************************************

BEGIN-PROCEDURE ROSTER-DETAILS

BEGIN-SELECT
A.DESCR50
A.LBR_ROSTER_TYPE
A.LBR_PROP_TERM_DT
A.LBR_ACTUAL_TERM_DT
A.NOTIFIED_DT
A.LBR_MULT_TERMDT
A.LBR_EXP_REIN_DT
A.GB_GROUP_ID
A.LABOR_AGREEMENT
A.SETID
   Let $LABOR_AGREEMENT_ID = &A.LABOR_AGREEMENT
B.LBR_ROST_STATUS_CD
  LET $multi_termdt = &A.LBR_MULT_TERMDT
  
   DO ROSTER-TYPE-DESCR
   DO ROSTER-STAT-DESCR
   DO TITLES
FROM PS_HR_LBR_ROSTDATA A,PS_HR_LBR_ROSTER B 
WHERE A.LBR_ROSTER_ID = $rost_id
AND B.LBR_ROSTER_ID = A.LBR_ROSTER_ID
AND A.EFFDT = (SELECT MAX(EFFDT)
                  FROM PS_HR_LBR_ROSTDATA HLR
                  WHERE HLR.LBR_ROSTER_ID = A.LBR_ROSTER_ID
                  AND HLR.EFFDT <= $AsOfToday)
  
END-SELECT
END-PROCEDURE

!***********************************************************************
!-----------------Procedure Layoff Roster------------------------------
!Description: This section selects the Roster Type Description         
!***********************************************************************

BEGIN-PROCEDURE ROSTER-TYPE-DESCR
!-------Description is 1st fetched from related language table. We make use of the rellang.sqc
!-------which has appropriate procedure to fetch the description from the Related Lang table...
!-------If the descr is not present in the Related Lang table then it should be fetched from the Base table
#define PSXLATITEM
BEGIN-SELECT
X.XLATLONGNAME
X.EFFDT
X.FIELDNAME
 LET $roster_type_descr = &X.XLATLONGNAME
FROM PSXLATITEM X
WHERE X.FIELDNAME = 'LBR_ROSTER_TYPE' 
AND X.FIELDVALUE = &A.LBR_ROSTER_TYPE
AND X.EFFDT = (SELECT MAX(EFFDT)
               FROM PSXLATITEM
               WHERE FIELDNAME = 'LBR_ROSTER_TYPE' 
               AND FIELDVALUE = &A.LBR_ROSTER_TYPE
               AND EFF_STATUS = 'A'
               AND EFFDT <= $AsOfToday)
AND X.EFF_STATUS = 'A'
END-SELECT

DO Get_Related_PSXLATITEM(&X.EFFDT,&X.FIELDNAME,&A.LBR_ROSTER_TYPE)

IF $PSXLATITEM-XLATLONGNAME <> ''
  LET $roster_type_descr = $PSXLATITEM-XLATLONGNAME
END-IF

END-PROCEDURE

!***********************************************************************
!-----------------Procedure Layoff Roster------------------------------
!Description: This section selects the Roster Status Description       
!***********************************************************************

BEGIN-PROCEDURE ROSTER-STAT-DESCR
!-------Description is 1st fetched from related language table. We make use of the rellang.sqc
!-------which has appropriate procedure to fetch the description from the Related Lang table...
!-------If the descr is not present in the Related Lang table then it should be fetched from the Base table
#define PSXLATITEM
BEGIN-SELECT
X1.XLATLONGNAME
X1.EFFDT
X1.FIELDNAME
 LET $roster_stat_descr = &X1.XLATLONGNAME
FROM PSXLATITEM X1
WHERE X1.FIELDNAME = 'LBR_ROST_STATUS_CD' 
AND X1.FIELDVALUE = &B.LBR_ROST_STATUS_CD
AND X1.EFFDT = (SELECT MAX(EFFDT)
               FROM PSXLATITEM
               WHERE FIELDNAME = 'LBR_ROST_STATUS_CD' 
               AND FIELDVALUE = &B.LBR_ROST_STATUS_CD
               AND EFF_STATUS = 'A'
               AND EFFDT <= $AsOfToday)
AND X1.EFF_STATUS = 'A'
END-SELECT

DO Get_Related_PSXLATITEM(&X1.EFFDT,&X1.FIELDNAME,&B.LBR_ROST_STATUS_CD)

IF $PSXLATITEM-XLATLONGNAME <> ''
  LET $roster_stat_descr = $PSXLATITEM-XLATLONGNAME
END-IF

END-PROCEDURE

!***********************************************************************
!-----------------Procedure Layoff Roster------------------------------
!Description: This section selects the Group ID Description            
!***********************************************************************

Begin-procedure GroupID-Desc

!-------Description is 1st fetched from related language table. We make use of the rellang.sqc
!-------which has appropriate procedure to fetch the description from the Related Lang table...
!-------If the descr is not present in the Related Lang table then it should be fetched from the Base table
#define GB_GROUP_TBL
Begin-select 
Y.DESCR 
Y.EFFDT
 let $Group_Desc = &Y.DESCR
FROM PS_GB_GROUP_TBL Y 
WHERE Y.GB_GROUP_ID = &A.GB_GROUP_ID 
AND EFFDT = (SELECT MAX(EFFDT)
             FROM PS_GB_GROUP_TBL
             WHERE GB_GROUP_ID = &A.GB_GROUP_ID 
             AND EFF_STATUS = 'A'
             AND EFFDT <= $AsOfToday)
AND EFF_STATUS = 'A'
End-select

DO Get_Related_GB_GROUP_TBL(&Y.EFFDT,&A.GB_GROUP_ID)

IF $GB_GROUP_TBL-DESCR <> ''
 LET $Group_Desc = $GB_GROUP_TBL-DESCR
END-IF 

End-procedure


!***********************************************************************
!-----------------Procedure Roster Description------------------------------
!Description: This section selects the Roster Description            
!***********************************************************************
Begin-procedure Roster-Desc
!----------Select the Roster Description-------------------!
!-------Description is 1st fetched from related language table. If the Login language = Base Language then
!-------the description would not be present in the Related Lang table, in which case it should be 
!-------fetched from the Base table
BEGIN-SELECT
HLBRL.DESCR50
 let $lbr_rost_descr = &HLBRL.DESCR50 
FROM PS_HR_LBR_ROST_LNG HLBRL
WHERE LBR_ROSTER_ID = $rost_id
and LANGUAGE_CD = $curr_language_cd
AND EFFDT = (SELECT MAX(EFFDT)
             FROM PS_HR_LBR_ROST_LNG
             WHERE LBR_ROSTER_ID = $rost_id
             and LANGUAGE_CD = $curr_language_cd
             AND EFFDT <= $AsOfToday)
END-SELECT

IF $lbr_rost_descr =''
BEGIN-SELECT
HLBR.DESCR50
  LET $lbr_rost_descr = &HLBR.DESCR50
FROM PS_HR_LBR_ROSTDATA HLBR
WHERE LBR_ROSTER_ID = $rost_id
AND EFFDT = (SELECT MAX(EFFDT)
             FROM PS_HR_LBR_ROSTDATA
             WHERE LBR_ROSTER_ID = $rost_id
             AND EFFDT <= $AsOfToday)
END-SELECT
END-IF
End-Procedure !Roster-Desc





!***********************************************************************
!-----------------Procedure Layoff Roster------------------------------
!Description: This section selects&Prints the Titles till no.of.cands  
!***********************************************************************

BEGIN-PROCEDURE TITLES
 Do Roster-Desc
print $ROSTER_ID (+1,1)
print $rost_id (,30)
print $lbr_rost_descr (,55)
print $ROSTER_TYPE (+1,1)
print $roster_type_descr (,30) 
print $ROSTER_STATUS  (,55)
print $roster_stat_descr (,72) 
print $PROPOSED_TERM_DATE  (+1,1)
  do Format-DateTime(&A.LBR_PROP_TERM_DT, $PROPOSED, {DEFDATE}, '', '')
Print $PROPOSED ( ,30)
!print &A.LBR_PROP_TERM_DT (,30) edit 'dd/mm/yyyy'

!print $ACTUAL_TERM  (,55)
!  do Format-DateTime(&A.LBR_ACTUAL_TERM_DT, $ACTUAL, {DEFDATE}, '', '')
!print $ACTUAL (,72)
!print &A.LBR_ACTUAL_TERM_DT (,72) edit 'dd/mm/yyyy'

print $NOTIFICATION (,55)
  do Format-DateTime(&A.NOTIFIED_DT, $NOTIFI, {DEFDATE}, '', '')
print $NOTIFI ( , )
!print &A.NOTIFIED_DT (,110) edit 'dd/mm/yyyy'
print $PROPOSED_REINSTAT (+1,1)
  do Format-DateTime(&A.LBR_EXP_REIN_DT, $REINSTAT, {DEFDATE}, '', '')
  print $REINSTAT (,30)
!print &A.LBR_EXP_REIN_DT (,30) edit 'dd/mm/yyyy'
print $GROUP_ID  (,55)
  Do GroupID-Desc
print $Group_Desc (,64)
Print $LABOR_AGREEMENT (+1,1)
print $LABOR_AGREEMENT_ID (,20)
   Do Labor_Descr
print $LBRAGR ( ,30)   
 DO SELECT-STATUS
print $CAND_IN_REPORT (+1,1)
Do EMP-COUNT
print $CAND_ACC_TERM (+1,1)
  Do Term-count
Print #Term_Count (,30) edit 999999 
Do Report
End-Procedure


!***********************************************************************
!-----------------Procedure Layoff Roster------------------------------
!Description: This section selects the Labor Agreement Description     
!***********************************************************************
Begin-procedure Labor_Descr
!-------Description is 1st fetched from related language table. If the Login language = Base Language then
!-------the description would not be present in the Related Lang table, in which case it should be 
!-------fetched from the Base table
BEGIN-SELECT
LAL.DESCR
 LET $LBRAGR = &LAL.DESCR
FROM PS_HR_LBR_AGR_LANG LAL
WHERE LABOR_AGREEMENT = &A.LABOR_AGREEMENT 
AND SETID = &A.SETID
AND EFFDT = (SELECT MAX(EFFDT)
              FROM PS_HR_LBR_AGR_LANG
              WHERE LABOR_AGREEMENT = &A.LABOR_AGREEMENT 
              AND SETID = &A.SETID
              and LANGUAGE_CD = $curr_language_cd
              AND EFFDT <= $AsOfToday)!$current-date)
and LANGUAGE_CD = $curr_language_cd
END-SELECT

IF rtrim($LBRAGR,' ') = ''
BEGIN-SELECT
LA.DESCR
 LET $LBRAGR = &LA.DESCR
FROM PS_HR_LABOR_AGRMNT LA
WHERE LABOR_AGREEMENT = &A.LABOR_AGREEMENT
AND SETID = &A.SETID
AND EFFDT = (SELECT MAX(EFFDT)
             FROM PS_HR_LABOR_AGRMNT
             WHERE LABOR_AGREEMENT = &A.LABOR_AGREEMENT 
             AND SETID = &A.SETID
             AND EFFDT <= $AsOfToday)!$current-date)
AND EFF_STATUS = 'A'
END-SELECT
END-IF

End-procedure

!***********************************************************************
!-----------------Procedure Layoff Roster------------------------------
!Description: This section selects the param from Runcntl record       
!***********************************************************************

BEGIN-PROCEDURE SELECT-STATUS
 print $LEM_ES (+2,1)
 
BEGIN-SELECT
A.LBR_EMP_ROST_STAT (,30)  
  POSITION (+1) 
FROM PS_HR_RUNCNTL_LY1B A
where A.OPRID = $prcs_oprid
  And A.RUN_CNTL_ID = $prcs_run_cntl_id
END-SELECT

END-PROCEDURE

!***********************************************************************
!-----------------Procedure Layoff Roster------------------------------
!Description: This section selects the count of candidates terminated  
!***********************************************************************

Begin-procedure TERM-COUNT

Begin-select                                                                                                                                        
COUNT(*) &Term_Count 
   let #Term_Count = &Term_Count 
FROM PS_HR_ROST_CAND V, PS_HR_LBR_EEST_TBL D
WHERE V.EFFDT = (SELECT MAX(B.EFFDT) FROM PS_HR_ROST_CAND B
                  WHERE B.EMPLID = V.EMPLID AND B.EMPL_RCD = V.EMPL_RCD
                    AND B.EFFDT <= $AsOfToday)
  AND V.EFFSEQ = (SELECT MAX(C.EFFSEQ) FROM PS_HR_ROST_CAND C
                  WHERE C.EMPLID = V.EMPLID AND C.EMPL_RCD = V.EMPL_RCD
                    AND C.EFFDT <= V.EFFDT)
  AND V.LBR_EMP_ROST_STAT = D.LBR_EMP_ROST_STAT
  AND D.LBR_PRCS_STAT_FLG = 'Y'
  AND V.LBR_ROSTER_ID = $rost_id
End-select

END-PROCEDURE

!*********************************************************************************
!-----------------Procedure Layoff Roster----------------------------------------  
!Description: This section selects the Employee_status from the Runcntl record   
!*********************************************************************************

BEGIN-PROCEDURE SELECT-STATUS1

BEGIN-SELECT
A.LBR_EMP_ROST_STAT &A.status_cd
  LET $statusfound = 'Y'
  IF $statusfound = 'Y'
   LET $whereclause = 'WHERE R.LBR_ROSTER_ID = ''' || $rost_id || ''' AND R.LBR_EMP_ROST_STAT = ''' || &A.status_cd || ''''
      DO EMPL-DETAILS
  END-IF
FROM PS_HR_RUNCNTL_LY1B A
WHERE A.OPRID = $prcs_oprid
  AND A.RUN_CNTL_ID = $prcs_run_cntl_id
  AND A.LBR_EMP_ROST_STAT <> ' '
END-SELECT

  IF $statusfound = 'N'    
    Do EMPL-DETAILS2
  END-IF
  
END-PROCEDURE

!***********************************************************************
!-----------------Procedure Layoff Roster -----------------------------
!Description: This section Prints the columns of  the  report body     
!***********************************************************************
BEGIN-PROCEDURE EMPL-DETAILS
BEGIN-SELECT
R.EMPLID (+2,1) 
R.EMPL_RCD (,15)
!R.EFFSEQ (,21)
R.LBR_EMP_RANK (,26)
R.TERMINATION_DT
           IF rtrim($multi_termdt,' ') = 'Y'
               !do Format-DateTime(&R.TERMINATION_DT, $TERMIN, {DEFDATE}, '', '')
               evaluate $DT_FMT
                      when = 'M'
                    do Format-DateTime(&R.TERMINATION_DT,$TERMIN,{DEFMDY},'','')
                      break
                      when = 'D'
                    do Format-DateTime(&R.TERMINATION_DT,$TERMIN,{DEFDMY},'','')
                      break
                      when-Other
                    do Format-DateTime(&R.TERMINATION_DT,$TERMIN,{DEFYMD},'','')
                      break
               end-evaluate
                              
              print $TERMIN ( ,35)
              !print &R.TERMINATION_DT (,35) edit 'dd/mm/yyyy' 
         END-IF
         
         IF rtrim($multi_termdt,' ') = 'N'   
                        evaluate $DT_FMT
                               when = 'M'
                             do Format-DateTime(&A.LBR_PROP_TERM_DT,$TERMIN,{DEFMDY},'','')
                               break
                               when = 'D'
                             do Format-DateTime(&A.LBR_PROP_TERM_DT,$TERMIN,{DEFDMY},'','')
                               break
                               when-Other
                             do Format-DateTime(&A.LBR_PROP_TERM_DT,$TERMIN,{DEFYMD},'','')
                               break
                        end-evaluate
                       print $TERMIN ( ,35)
         END-IF
           
R.JOBCODE (,48)
R.LABOR_FACILITY_ID (,61)
R.LOCATION (,74)
R.DEPTID (,86) 
R.LBR_EMP_ROST_STAT (,99)
R.LBR_SNR_DT1_ID    
      Let $Senid1 = &R.LBR_SNR_DT1_ID
      if rtrim($Senid1,' ') <> ''
      print $Senid1 ( ,112)
      end-if
R.LBR_SNR_DT1 
      Let $Sendt1 = &R.LBR_SNR_DT1
      if rtrim($Sendt1,' ') <> ''
       ! do Format-DateTime(&R.LBR_SNR_DT1, $sen1, {DEFDATE}, '', '')
         evaluate $DT_FMT
               when = 'M'
             do Format-DateTime(&R.LBR_SNR_DT1,$sen1,{DEFMDY},'','')
               break
               when = 'D'
             do Format-DateTime(&R.LBR_SNR_DT1,$sen1,{DEFDMY},'','')
               break
               when-Other
             do Format-DateTime(&R.LBR_SNR_DT1,$sen1,{DEFYMD},'','')
               break
      end-evaluate
        print $sen1 ( ,126)
           ! print $Sendt1 ( ,126) edit 'dd/mm/yyyy'
      end-if
R.LBR_SNR_DT2_ID     
    Let $Senid2 = &R.LBR_SNR_DT2_ID
          if rtrim($Senid2,' ') <> ''
          print $Senid2 (+1,112)
      end-if
R.LBR_SNR_DT2  
    Let $Sendt2 = &R.LBR_SNR_DT2
        if rtrim($Sendt2,' ') <> ''
        !do Format-DateTime(&R.LBR_SNR_DT2, $sen2, {DEFDATE}, '', '')
        evaluate $DT_FMT
                    when = 'M'
                  do Format-DateTime(&R.LBR_SNR_DT2,$sen2,{DEFMDY},'','')
                    break
                    when = 'D'
                  do Format-DateTime(&R.LBR_SNR_DT2,$sen2,{DEFDMY},'','')
                    break
                    when-Other
                  do Format-DateTime(&R.LBR_SNR_DT2,$sen2,{DEFYMD},'','')
                    break
      end-evaluate
             print $sen2 ( ,126) 
             ! print $Sendt2 ( ,126) edit 'dd/mm/yyyy'
      end-if
R.LBR_SNR_DT3_ID 
     Let $Senid3 = &R.LBR_SNR_DT3_ID
               if rtrim($Senid3,' ') <> ''
               print $Senid3 (+1,112)
      end-if
R.LBR_SNR_DT3  
     Let $Sendt3 = &R.LBR_SNR_DT3
         if rtrim($Sendt3,' ') <> ''
         !do Format-DateTime(&R.LBR_SNR_DT3, $sen3, {DEFDATE}, '', '')
         evaluate $DT_FMT
           when = 'M'
           do Format-DateTime(&R.LBR_SNR_DT3,$sen3,{DEFMDY},'','')
           break
           when = 'D'
           do Format-DateTime(&R.LBR_SNR_DT3,$sen3,{DEFDMY},'','')
           break
           when-Other
           do Format-DateTime(&R.LBR_SNR_DT3,$sen3,{DEFYMD},'','')
           break
         end-evaluate
             print $sen3 ( ,126) 
               !print $Sendt3 ( ,126) edit 'dd/mm/yyyy'
      end-if
R.LBR_SNR_DT4_ID 
      Let $Senid4 = &R.LBR_SNR_DT4_ID
                if rtrim($Senid4,' ') <> ''
                print $Senid4 (+1,112)
      end-if
R.LBR_SNR_DT4 
        Let $Sendt4 = &R.LBR_SNR_DT4
            if rtrim($Sendt4,' ') <> ''
            !do Format-DateTime(&R.LBR_SNR_DT4, $sen4, {DEFDATE}, '', '')
            evaluate $DT_FMT
                    when = 'M'
                    do Format-DateTime(&R.LBR_SNR_DT4,$sen4,{DEFMDY},'','')
                    break
                    when = 'D'
                    do Format-DateTime(&R.LBR_SNR_DT4,$sen4,{DEFDMY},'','')
                    break
                    when-Other
                    do Format-DateTime(&R.LBR_SNR_DT4,$sen4,{DEFYMD},'','')
                    break
         end-evaluate
             print $sen4 ( ,126) 
                  !print $Sendt4 ( ,126) edit 'dd/mm/yyyy'
      end-if
R.LBR_SNR_DT5_ID  
    Let $Senid5 = &R.LBR_SNR_DT5_ID
              if rtrim($Senid5,' ') <> ''
              print $Senid5 (+1,112)
      end-if
R.LBR_SNR_DT5 
       Let $Sendt5 = &R.LBR_SNR_DT5
           if rtrim($Sendt5,' ') <> ''
           !do Format-DateTime(&R.LBR_SNR_DT5, $sen5, {DEFDATE}, '', '')
           evaluate $DT_FMT
                            when = 'M'
                            do Format-DateTime(&R.LBR_SNR_DT5,$sen5,{DEFMDY},'','')
                            break
                            when = 'D'
                            do Format-DateTime(&R.LBR_SNR_DT5,$sen5,{DEFDMY},'','')
                            break
                            when-Other
                            do Format-DateTime(&R.LBR_SNR_DT5,$sen5,{DEFYMD},'','')
                            break
         end-evaluate
             print $sen5 ( ,126) 
                 !print $Sendt5 ( ,126) edit 'dd/mm/yyyy'
      end-if
R.LBR_SNR_DT6_ID 
    Let $Senid6 = &R.LBR_SNR_DT6_ID
              if rtrim($Senid6,' ') <> ''
              print $Senid6 (+1,112)
      end-if

R.LBR_SNR_DT6 
   Let $Sendt6 = &R.LBR_SNR_DT6
              if rtrim($Sendt6,' ') <> ''
              !do Format-DateTime(&R.LBR_SNR_DT6, $sen6, {DEFDATE}, '', '')
              evaluate $DT_FMT
                                       when = 'M'
                                       do Format-DateTime(&R.LBR_SNR_DT6,$sen6,{DEFMDY},'','')
                                       break
                                       when = 'D'
                                       do Format-DateTime(&R.LBR_SNR_DT6,$sen6,{DEFDMY},'','')
                                       break
                                       when-Other
                                       do Format-DateTime(&R.LBR_SNR_DT6,$sen6,{DEFYMD},'','')
                                       break
         end-evaluate
             print $sen6 ( ,126) 
                    !print $Sendt6 ( ,126) edit 'dd/mm/yyyy'
      end-if
R.LBR_SNR_DT7_ID  
      Let $Senid7 = &R.LBR_SNR_DT7_ID
                if rtrim($Senid7,' ') <> ''
                print $Senid7 (+1,112)
      end-if
R.LBR_SNR_DT7 
     Let $Sendt7 = &R.LBR_SNR_DT7
                if rtrim($Sendt7,' ') <> ''
                !do Format-DateTime(&R.LBR_SNR_DT7, $sen7, {DEFDATE}, '', '')
                evaluate $DT_FMT
                     when = 'M'
                     do Format-DateTime(&R.LBR_SNR_DT7,$sen7,{DEFMDY},'','')
                     break
                     when = 'D'
                     do Format-DateTime(&R.LBR_SNR_DT7,$sen7,{DEFDMY},'','')
                     break
                     when-Other
                     do Format-DateTime(&R.LBR_SNR_DT7,$sen7,{DEFYMD},'','')
                     break
         end-evaluate
             print $sen7 ( ,126) 
                      !print $Sendt7 ( ,126) edit 'dd/mm/yyyy'
      end-if
R.LBR_SNR_DT8_ID 
    Let $Senid8 = &R.LBR_SNR_DT8_ID
              if rtrim($Senid8,' ') <> ''
              print $Senid8 (+1,112)
      end-if
R.LBR_SNR_DT8 
  Let $Sendt8 = &R.LBR_SNR_DT8
             if rtrim($Sendt8,' ') <> ''
             !do Format-DateTime(&R.LBR_SNR_DT8, $sen8, {DEFDATE}, '', '')
             evaluate $DT_FMT
                     when = 'M'
                     do Format-DateTime(&R.LBR_SNR_DT8,$sen8,{DEFMDY},'','')
                     break
                     when = 'D'
                     do Format-DateTime(&R.LBR_SNR_DT8,$sen8,{DEFDMY},'','')
                     break
                     when-Other
                     do Format-DateTime(&R.LBR_SNR_DT8,$sen8,{DEFYMD},'','')
                     break
         end-evaluate
             print $sen8 ( ,126) 
                   !print $Sendt8 ( ,126) edit 'dd/mm/yyyy'
      end-if
R.LBR_SNR_DT9_ID  
    Let $Senid9 = &R.LBR_SNR_DT9_ID
                  if rtrim($Senid9,' ') <> ''
                  print $Senid9 (+1,112)
      end-if
R.LBR_SNR_DT9  
     Let $Sendt9 = &R.LBR_SNR_DT9
                if rtrim($Sentdt9,' ') <> ''
                !do Format-DateTime(&R.LBR_SNR_DT9, $sen9, {DEFDATE}, '', '')
                evaluate $DT_FMT
                     when = 'M'
                     do Format-DateTime(&R.LBR_SNR_DT9,$sen9,{DEFMDY},'','')
                     break
                     when = 'D'
                     do Format-DateTime(&R.LBR_SNR_DT9,$sen9,{DEFDMY},'','')
                     break
                     when-Other
                     do Format-DateTime(&R.LBR_SNR_DT9,$sen9,{DEFYMD},'','')
                     break
         end-evaluate
             print $sen9 ( ,126) 
                      !print $Sendt9 ( ,126) edit 'dd/mm/yyyy'
      end-if
R.LBR_SNR_DT10_ID 
    Let $Senid10 = &R.LBR_SNR_DT10_ID
                  if rtrim($Senid10,' ') <> ''
                  print $Senid10 (+1,112)
      end-if
R.LBR_SNR_DT10 
   Let $Sendt10 = &R.LBR_SNR_DT10
              if rtrim($Sendt10,' ') <> ''
              !do Format-DateTime(&R.LBR_SNR_DT10, $sen10, {DEFDATE}, '', '')
              evaluate $DT_FMT
                      when = 'M'
                      do Format-DateTime(&R.LBR_SNR_DT10,$sen10,{DEFMDY},'','')
                      break
                      when = 'D'
                      do Format-DateTime(&R.LBR_SNR_DT10,$sen10,{DEFDMY},'','')
                      break
                      when-Other
                      do Format-DateTime(&R.LBR_SNR_DT10,$sen10,{DEFYMD},'','')
                      break
         end-evaluate
             print $sen10 ( ,126) 
                    !print $Sendt10 ( ,126) edit 'dd/mm/yyyy'
      end-if
R.LBR_SNR_DT11_ID 
   Let $Senid11 = &R.LBR_SNR_DT11_ID
                 if rtrim($Senid11,' ') <> ''
                 print $Senid11 (+1,112)
      end-if
R.LBR_SNR_DT11 
       Let $Sendt11 = &R.LBR_SNR_DT11
                  if rtrim($Sendt1,' ') <> ''
                  !do Format-DateTime(&R.LBR_SNR_DT11, $sen11, {DEFDATE}, '', '')
                  evaluate $DT_FMT
                       when = 'M'
                       do Format-DateTime(&R.LBR_SNR_DT11,$sen11,{DEFMDY},'','')
                       break
                       when = 'D'
                       do Format-DateTime(&R.LBR_SNR_DT11,$sen11,{DEFDMY},'','')
                       break
                       when-Other
                       do Format-DateTime(&R.LBR_SNR_DT11,$sen11,{DEFYMD},'','')
                       break
         end-evaluate
             print $sen11 ( ,126) 
                        !print $Sendt11 ( ,126) edit 'dd/mm/yyyy'
      end-if
R.LBR_SNR_DT12_ID  
     Let $Senid12 = &R.LBR_SNR_DT12_ID
                   if rtrim($Senid12,' ') <> ''
                   print $Senid12 (+1,112)
                 end-if
R.LBR_SNR_DT12 
     Let $Sendt12 = &R.LBR_SNR_DT12
                if rtrim($Sendt12,' ') <> ''
                !do Format-DateTime(&R.LBR_SNR_DT12, $sen12, {DEFDATE}, '', '')
                evaluate $DT_FMT
                     when = 'M'
                     do Format-DateTime(&R.LBR_SNR_DT12,$sen12,{DEFMDY},'','')
                     break
                     when = 'D'
                     do Format-DateTime(&R.LBR_SNR_DT12,$sen12,{DEFDMY},'','')
                     break
                     when-Other
                     do Format-DateTime(&R.LBR_SNR_DT12,$sen12,{DEFYMD},'','')
                     break
         end-evaluate
             print $sen12 ( ,126) 
                      !print $Sendt12 ( ,126) edit 'dd/mm/yyyy'
      end-if
    
      Let #Lineno = #current-line  
        
             if #Lineno >= 73
                           New-page
                           Do Report
       end-if

       Next-Listing Skiplines = 0 Need = 15
    Let $Empl_found = 'Y'
   
    LET #LOOP = #LOOP +1
   
FROM PS_HR_ROST_CAND R
  [$whereclause]
AND R.EFFDT = (SELECT MAX(INRC1.EFFDT)
                 FROM PS_HR_ROST_CAND INRC1
                 WHERE INRC1.LBR_ROSTER_ID = $rost_id
                 AND INRC1.EMPLID = R.EMPLID
                 AND INRC1.EMPL_RCD = R.EMPL_RCD)
AND R.EFFSEQ = (SELECT MAX(INRC2.EFFSEQ)
                  FROM PS_HR_ROST_CAND INRC2
                  WHERE INRC2.LBR_ROSTER_ID = $rost_id
                  AND INRC2.EMPLID = R.EMPLID
                  AND INRC2.EMPL_RCD = R.EMPL_RCD
                AND INRC2.EFFDT = R.EFFDT)
ORDER BY R.LBR_EMP_RANK 

END-SELECT

   

END-PROCEDURE

!***********************************************************************
!-----------------Procedure Layoff Roster -----------------------------
!Description: This section Prints the columns of  the  report body     
!***********************************************************************
BEGIN-PROCEDURE EMPL-DETAILS2
BEGIN-SELECT
L.EMPLID (+2,1) 
L.EMPL_RCD (,15)
!L.EFFSEQ (,21)
L.LBR_EMP_RANK (,26)
L.TERMINATION_DT
            IF rtrim($multi_termdt,' ') = 'Y'
                        !do Format-DateTime(&L.TERMINATION_DT, $TERMIN, {DEFDATE}, '', '')
                        evaluate $DT_FMT
                               when = 'M'
                             do Format-DateTime(&L.TERMINATION_DT,$TERMIN,{DEFMDY},'','')
                               break
                               when = 'D'
                             do Format-DateTime(&L.TERMINATION_DT,$TERMIN,{DEFDMY},'','')
                               break
                               when-Other
                             do Format-DateTime(&L.TERMINATION_DT,$TERMIN,{DEFYMD},'','')
                               break
                        end-evaluate
               
                       print $TERMIN ( ,35)
                       !print &R.TERMINATION_DT (,35) edit 'dd/mm/yyyy' 
         END-IF
         
         IF rtrim($multi_termdt,' ') = 'N'
                                evaluate $DT_FMT
                                        when = 'M'
                                      do Format-DateTime(&A.LBR_PROP_TERM_DT,$TERMIN,{DEFMDY},'','')
                                        break
                                        when = 'D'
                                      do Format-DateTime(&A.LBR_PROP_TERM_DT,$TERMIN,{DEFDMY},'','')
                                        break
                                        when-Other
                                      do Format-DateTime(&A.LBR_PROP_TERM_DT,$TERMIN,{DEFYMD},'','')
                                        break
                                 end-evaluate
                                print $TERMIN ( ,35)
         END-IF
         
         
L.JOBCODE (,48)
L.LABOR_FACILITY_ID (,61)
L.LOCATION (,74)
L.DEPTID (,86) 
L.LBR_EMP_ROST_STAT (,99)
L.LBR_SNR_DT1_ID    
      Let $Senid1 = &L.LBR_SNR_DT1_ID
      if rtrim($Senid1,' ') <> ''
      print $Senid1 ( ,112)
      end-if
L.LBR_SNR_DT1 
      Let $Sendt1 = &L.LBR_SNR_DT1
      if rtrim($Sendt1,' ') <> ''
      !do Format-DateTime(&L.LBR_SNR_DT1, $send1, {DEFDATE}, '', '')
      evaluate $DT_FMT
                 when = 'M'
                 do Format-DateTime(&L.LBR_SNR_DT1,$send1,{DEFMDY},'','')
                 break
                 when = 'D'
                 do Format-DateTime(&L.LBR_SNR_DT1,$send1,{DEFDMY},'','')
                 break
                 when-Other
                 do Format-DateTime(&L.LBR_SNR_DT1,$send1,{DEFYMD},'','')
                 break
         end-evaluate
             print $send1 ( ,126) 
            !print $Sendt1 ( ,126) edit 'dd/mm/yyyy'
      end-if
L.LBR_SNR_DT2_ID     
    Let $Senid2 = &L.LBR_SNR_DT2_ID
          if rtrim($Senid2,' ') <> ''
          print $Senid2 (+1,112)
      end-if
L.LBR_SNR_DT2  
    Let $Sendt2 = &L.LBR_SNR_DT2
        if rtrim($Sendt2,' ') <> ''
        !do Format-DateTime(&L.LBR_SNR_DT2, $send2, {DEFDATE}, '', '')
        evaluate $DT_FMT
                      when = 'M'
                      do Format-DateTime(&L.LBR_SNR_DT2,$send2,{DEFMDY},'','')
                      break
                      when = 'D'
                      do Format-DateTime(&L.LBR_SNR_DT2,$send2,{DEFDMY},'','')
                      break
                      when-Other
                      do Format-DateTime(&L.LBR_SNR_DT2,$send2,{DEFYMD},'','')
                      break
         end-evaluate
             print $send2 ( ,126)
              !print $Sendt2 ( ,126) edit 'dd/mm/yyyy'
      end-if
L.LBR_SNR_DT3_ID 
     Let $Senid3 = &L.LBR_SNR_DT3_ID
               if rtrim($Senid3,' ') <> ''
               print $Senid3 (+1,112)
      end-if
L.LBR_SNR_DT3  
     Let $Sendt3 = &L.LBR_SNR_DT3
         if rtrim($Sendt3,' ') <> ''
         !do Format-DateTime(&L.LBR_SNR_DT3, $send3, {DEFDATE}, '', '')
         evaluate $DT_FMT
                       when = 'M'
                       do Format-DateTime(&L.LBR_SNR_DT3,$send3,{DEFMDY},'','')
                       break
                       when = 'D'
                       do Format-DateTime(&L.LBR_SNR_DT3,$send3,{DEFDMY},'','')
                       break
                       when-Other
                       do Format-DateTime(&L.LBR_SNR_DT3,$send3,{DEFYMD},'','')
                       break
         end-evaluate
             print $send3 ( ,126)
               !print $Sendt3 ( ,126) edit 'dd/mm/yyyy'
      end-if
L.LBR_SNR_DT4_ID 
      Let $Senid4 = &L.LBR_SNR_DT4_ID
                if rtrim($Senid4,' ') <> ''
                print $Senid4 (+1,112)
      end-if
L.LBR_SNR_DT4 
        Let $Sendt4 = &L.LBR_SNR_DT4
            if rtrim($Sendt4,' ') <> ''
            !do Format-DateTime(&L.LBR_SNR_DT4, $send4, {DEFDATE}, '', '')
            evaluate $DT_FMT
                          when = 'M'
                          do Format-DateTime(&L.LBR_SNR_DT4,$send4,{DEFMDY},'','')
                          break
                          when = 'D'
                          do Format-DateTime(&L.LBR_SNR_DT4,$send4,{DEFDMY},'','')
                          break
                          when-Other
                          do Format-DateTime(&L.LBR_SNR_DT4,$send4,{DEFYMD},'','')
                          break
         end-evaluate
             print $send4 ( ,126)
                  !print $Sendt4 ( ,126) edit 'dd/mm/yyyy'
      end-if
L.LBR_SNR_DT5_ID  
    Let $Senid5 = &L.LBR_SNR_DT5_ID
              if rtrim($Senid5,' ') <> ''
              print $Senid5 (+1,112)
      end-if
L.LBR_SNR_DT5 
       Let $Sendt5 = &L.LBR_SNR_DT5
           if rtrim($Sendt5,' ') <> ''
           !do Format-DateTime(&L.LBR_SNR_DT5, $send5, {DEFDATE}, '', '')
           evaluate $DT_FMT
                         when = 'M'
                         do Format-DateTime(&L.LBR_SNR_DT5,$send5,{DEFMDY},'','')
                         break
                         when = 'D'
                         do Format-DateTime(&L.LBR_SNR_DT5,$send5,{DEFDMY},'','')
                         break
                         when-Other
                         do Format-DateTime(&L.LBR_SNR_DT5,$send5,{DEFYMD},'','')
                         break
         end-evaluate
             print $send5 ( ,126)
           !      print $Sendt5 ( ,126) edit 'dd/mm/yyyy'
      end-if
L.LBR_SNR_DT6_ID 
    Let $Senid6 = &L.LBR_SNR_DT6_ID
              if rtrim($Senid6,' ') <> ''
              print $Senid6 (+1,112)
      end-if

L.LBR_SNR_DT6 
   Let $Sendt6 = &L.LBR_SNR_DT6
              if rtrim($Sendt6,' ') <> ''
              !do Format-DateTime(&L.LBR_SNR_DT6, $send6, {DEFDATE}, '', '')
              evaluate $DT_FMT
                            when = 'M'
                            do Format-DateTime(&L.LBR_SNR_DT6,$send6,{DEFMDY},'','')
                            break
                            when = 'D'
                            do Format-DateTime(&L.LBR_SNR_DT6,$send6,{DEFDMY},'','')
                            break
                            when-Other
                            do Format-DateTime(&L.LBR_SNR_DT6,$send6,{DEFYMD},'','')
                            break
         end-evaluate
             print $send6 ( ,126)
              !      print $Sendt6 ( ,126) edit 'dd/mm/yyyy'
      end-if
L.LBR_SNR_DT7_ID  
      Let $Senid7 = &L.LBR_SNR_DT7_ID
                if rtrim($Senid7,' ') <> ''
                print $Senid7 (+1,112)
      end-if
L.LBR_SNR_DT7 
     Let $Sendt7 = &L.LBR_SNR_DT7
                if rtrim($Sendt7,' ') <> ''
                !do Format-DateTime(&L.LBR_SNR_DT7, $send7, {DEFDATE}, '', '')
                evaluate $DT_FMT
                           when = 'M'
                           do Format-DateTime(&L.LBR_SNR_DT7,$send7,{DEFMDY},'','')
                           break
                           when = 'D'
                           do Format-DateTime(&L.LBR_SNR_DT7,$send7,{DEFDMY},'','')
                           break
                           when-Other
                           do Format-DateTime(&L.LBR_SNR_DT7,$send7,{DEFYMD},'','')
                           break
         end-evaluate
             print $send7 ( ,126)
                      !print $Sendt7 ( ,126) edit 'dd/mm/yyyy'
      end-if
L.LBR_SNR_DT8_ID 
    Let $Senid8 = &L.LBR_SNR_DT8_ID
              if rtrim($Senid8,' ') <> ''
              print $Senid8 (+1,112)
      end-if
L.LBR_SNR_DT8 
  Let $Sendt8 = &L.LBR_SNR_DT8
             if rtrim($Sendt8,' ') <> ''
             !do Format-DateTime(&L.LBR_SNR_DT8, $send8, {DEFDATE}, '', '')
             evaluate $DT_FMT
                           when = 'M'
                           do Format-DateTime(&L.LBR_SNR_DT8,$send8,{DEFMDY},'','')
                           break
                           when = 'D'
                           do Format-DateTime(&L.LBR_SNR_DT8,$send8,{DEFDMY},'','')
                           break
                           when-Other
                           do Format-DateTime(&L.LBR_SNR_DT8,$send8,{DEFYMD},'','')
                           break
         end-evaluate
             print $send8 ( ,126)
                   !print $Sendt8 ( ,126) edit 'dd/mm/yyyy'
      end-if
L.LBR_SNR_DT9_ID  
    Let $Senid9 = &L.LBR_SNR_DT9_ID
                  if rtrim($Senid9,' ') <> ''
                  print $Senid9 (+1,112)
      end-if
L.LBR_SNR_DT9  
     Let $Sendt9 = &L.LBR_SNR_DT9
                if rtrim($Sentdt9,' ') <> ''
                do Format-DateTime(&L.LBR_SNR_DT9, $send9, {DEFDATE}, '', '')
                evaluate $DT_FMT
                           when = 'M'
                           do Format-DateTime(&L.LBR_SNR_DT9,$send9,{DEFMDY},'','')
                           break
                           when = 'D'
                           do Format-DateTime(&L.LBR_SNR_DT9,$send9,{DEFDMY},'','')
                           break
                           when-Other
                           do Format-DateTime(&L.LBR_SNR_DT9,$send9,{DEFYMD},'','')
                           break
         end-evaluate
             print $send9 ( ,126)
                      !print $Sendt9 ( ,126) edit 'dd/mm/yyyy'
      end-if
L.LBR_SNR_DT10_ID 
    Let $Senid10 = &L.LBR_SNR_DT10_ID
                  if rtrim($Senid10,' ') <> ''
                  print $Senid10 (+1,112)
      end-if
L.LBR_SNR_DT10 
   Let $Sendt10 = &L.LBR_SNR_DT10
              if rtrim($Sendt10,' ') <> ''
              !do Format-DateTime(&L.LBR_SNR_DT10, $send10, {DEFDATE}, '', '')
              evaluate $DT_FMT
                            when = 'M'
                            do Format-DateTime(&L.LBR_SNR_DT10,$send10,{DEFMDY},'','')
                            break
                            when = 'D'
                            do Format-DateTime(&L.LBR_SNR_DT10,$send10,{DEFDMY},'','')
                            break
                            when-Other
                            do Format-DateTime(&L.LBR_SNR_DT10,$send10,{DEFYMD},'','')
                            break
         end-evaluate
             print $send10 ( ,126)
                    !print $Sendt10 ( ,126) edit 'dd/mm/yyyy'
      end-if
L.LBR_SNR_DT11_ID 
   Let $Senid11 = &L.LBR_SNR_DT11_ID
                 if rtrim($Senid11,' ') <> ''
                 print $Senid11 (+1,112)
      end-if
L.LBR_SNR_DT11 
       Let $Sendt11 = &L.LBR_SNR_DT11
                  if rtrim($Sendt1,' ') <> ''
                  !do Format-DateTime(&L.LBR_SNR_DT11, $send11, {DEFDATE}, '', '')
                  evaluate $DT_FMT
                             when = 'M'
                             do Format-DateTime(&L.LBR_SNR_DT11,$send11,{DEFMDY},'','')
                             break
                             when = 'D'
                             do Format-DateTime(&L.LBR_SNR_DT11,$send11,{DEFDMY},'','')
                             break
                             when-Other
                             do Format-DateTime(&L.LBR_SNR_DT11,$send11,{DEFYMD},'','')
                             break
         end-evaluate
             print $send11 ( ,126)
                        !print $Sendt11 ( ,126) edit 'dd/mm/yyyy'
      end-if
L.LBR_SNR_DT12_ID  
     Let $Senid12 = &L.LBR_SNR_DT12_ID
                   if rtrim($Senid12,' ') <> ''
                   print $Senid12 (+1,112)
                 end-if
L.LBR_SNR_DT12 
     Let $Sendt12 = &L.LBR_SNR_DT12
                if rtrim($Sendt12,' ') <> ''
                !do Format-DateTime(&L.LBR_SNR_DT12, $send12, {DEFDATE}, '', '')
                evaluate $DT_FMT
                           when = 'M'
                           do Format-DateTime(&L.LBR_SNR_DT12,$send12,{DEFMDY},'','')
                           break
                           when = 'D'
                           do Format-DateTime(&L.LBR_SNR_DT12,$send12,{DEFDMY},'','')
                           break
                           when-Other
                           do Format-DateTime(&L.LBR_SNR_DT12,$send12,{DEFYMD},'','')
                           break
         end-evaluate
             print $send12 ( ,126)
                      !print $Sendt12 ( ,126) edit 'dd/mm/yyyy'
      end-if

  Let #Lineno = #current-line  
  
       if #Lineno >= 73
                     New-page
                     Do Report
       end-if



       Next-Listing Skiplines = 0 Need = 15
    Let $Empl_found = 'Y'
   
    LET #LOOP = #LOOP +1
    
FROM PS_HR_ROST_CAND L
WHERE L.LBR_ROSTER_ID = $rost_id
AND L.EFFDT = (SELECT MAX(INRC1.EFFDT)
               FROM PS_HR_ROST_CAND INRC1
               WHERE INRC1.LBR_ROSTER_ID = $rost_id
               AND INRC1.EMPLID = L.EMPLID
               AND INRC1.EMPL_RCD = L.EMPL_RCD)
AND L.EFFSEQ = (SELECT MAX(INRC2.EFFSEQ)
                FROM PS_HR_ROST_CAND INRC2
                WHERE INRC2.LBR_ROSTER_ID = $rost_id
                AND INRC2.EMPLID = L.EMPLID
                AND INRC2.EMPL_RCD = L.EMPL_RCD
                AND INRC2.EFFDT = L.EFFDT)
AND L.LBR_EMP_RANK <= #NCAND
ORDER BY L.LBR_EMP_RANK 

END-SELECT

END-PROCEDURE

!***********************************************************************
!-----------------Procedure Layoff Roster------------------------------
!Description: This section Prints the Headings of the report body      
!***********************************************************************


BEGIN-PROCEDURE REPORT

print $EmployeeID (+2,1)
print $EMP (,15)
print $REC (,18)
!print $EFF (,21)
!print $SEQ (,24)
print $RANK (,26)
print $term (,35)
print $DATE ( ,39)
print $Jobcode_Lbl (,48)
print $Facility_ID (,61)
print $ID (,67)
print $Location_Lbl (,74)
print $Department (,86)
print $STATUS (,99)
Do SENHEAD
END-PROCEDURE


!***********************************************************************
!-----------------Procedure Layoff Roster------------------------------
!Description: This section Prints the second listing of report body    
!***********************************************************************

BEGIN-PROCEDURE SENHEAD

print $SENIORITY_ID (,112) 
print $SENIORITY_DATE (,126) 
END-PROCEDURE

!***********************************************************************
!-----------------Procedure Layoff Roster------------------------------
!Description: This section Prints the count of candidates to consider  
!***********************************************************************

BEGIN-PROCEDURE EMP-COUNT

BEGIN-SELECT
LBR_CANDIDATE_NUM (,30) edit 999999
     Let #NCAND = &LBR_CANDIDATE_NUM 
FROM PS_HR_LBR_ROSTDATA
WHERE LBR_ROSTER_ID = $rost_id
AND EFFDT = (SELECT MAX(EFFDT)
                FROM PS_HR_LBR_ROSTDATA HLR
                WHERE HLR.LBR_ROSTER_ID = PS_HR_LBR_ROSTDATA.LBR_ROSTER_ID
                AND HLR.EFFDT <= $AsOfToday)
  
END-SELECT

END-PROCEDURE


!***********************************************************************
!-----------------Procedure Layoff Roster------------------------------
!Description: String Table Selection                                   
!***********************************************************************

Begin-Procedure Get-RP-Lbl

let $ReportID = 'HR_UHRLY'
do Init_Report_Translation($ReportID,$curr_language_cd) 
do Append_Report_Translation ($ReportID)
do Get_Field_Information ('HR_UHRLY','FACILITY1',$Facility_ID,#DW1)
do Get_Field_Information ('HR_UHRLY','JOBCODE1',$Jobcode_Lbl,#DW1)
do Get_Field_Information ('HR_UHRLY','LOCATION1',$Location_Lbl,#DW1)
do Get_Field_Information ('HR_UHRLY','HR_LAYOFF_RPT',$LAY_RPT_LBL,#DW1)
do Get_Field_Information ('HR_UHRLY','HR_LAYOFF_LST',$REPORT_NAME,#DW1)
do Get_Field_Information ('HR_UHRLY','DEPARTMENT',$Department,#DW1)
do Get_Field_Information ('HR_UHRLY','CAND_IN_REPORT',$CAND_IN_REPORT,#DW1)
do Get_Field_Information ('HR_UHRLY','CAND_ACC_TERM',$CAND_ACC_TERM,#DW1)
do Get_Field_Information ('HR_UHRLY','LEM_ES',$LEM_ES,#DW1)
do Get_Field_Information ('HR_UHRLY','GROUP_ID',$GROUP_ID,#DW1)
do Get_Field_Information ('HR_UHRLY','EMPLOYEE_ID',$EmployeeID,#DW1)
do Get_Field_Information ('HR_UHRLY','NOTIFICATION',$NOTIFICATION,#DW1)
do Get_Field_Information ('HR_UHRLY','ACTUAL_TERM',$ACTUAL_TERM,#DW1)
do Get_Field_Information ('HR_UHRLY','FTE',$Fte,#DW1)
do Get_Field_Information ('HR_UHRLY','PROPOSED_REINSTAT',$PROPOSED_REINSTAT,#DW1)
do Get_Field_Information ('HR_UHRLY','PROPOSED_TERM_DATE',$PROPOSED_TERM_DATE,#DW1)
do Get_Field_Information ('HR_UHRLY','ROSTER_STATUS',$ROSTER_STATUS,#DW1)
do Get_Field_Information ('HR_UHRLY','ROSTER_TYPE',$ROSTER_TYPE,#DW1)
do Get_Field_Information ('HR_UHRLY','ROSTER_ID',$ROSTER_ID,#DW1)
do Get_Field_Information ('HR_UHRLY','SENIORITY_DATE',$SENIORITY_DATE,#DW1)
do Get_Field_Information ('HR_UHRLY','SENIORITY_ID',$SENIORITY_ID,#DW1)
do Get_Field_Information ('HR_UHRLY','FULL',$FULL,#DW1)
do Get_Field_Information ('HR_UHRLY','CLASS',$CLASS,#DW1)
do Get_Field_Information ('HR_UHRLY','HOURS',$HOURS,#DW1)
do Get_Field_Information ('HR_UHRLY','STD',$STD,#DW1)
!do Get_Field_Information ('HR_UHRLY','EVT STATUS',$EVTSTATUS,#DW1)
!do Get_Field_Information ('HR_UHRLY','LBR EMPL',$LBREMPL,#DW1)
do Get_Field_Information ('HR_UHRLY','SEQ',$SEQ,#DW1)
do Get_Field_Information ('HR_UHRLY','PAGE_NO',$Pageno,#DW1)
do Get_Field_Information ('HR_UHRLY','PART',$Part,#DW1)
do Get_Field_Information ('HR_UHRLY','PEOPLESOFT',$Peoplesoft,#DW1)
do Get_Field_Information ('HR_UHRLY','SHIFT',$SHIFT,#DW1)
do Get_Field_Information ('HR_UHRLY','TERM',$term,#DW1)
do Get_Field_Information ('HR_UHRLY','REPORTNAME',$Reportname,#DW1)
do Get_Field_Information ('HR_UHRLY','RUN DATE',$Rundate,#DW1)
do Get_Field_Information ('HR_UHRLY','RUN_TIME',$Runtime,#DW1)
!do Get_Field_Information ('HR_UHRLY','ETED',$ETED,#DW1)
do Get_Field_Information ('HR_UHRLY','EMP',$EMP,#DW1)
do Get_Field_Information ('HR_UHRLY','STD',$Std,#DW1)
do Get_Field_Information ('HR_UHRLY','EFF',$EFF,#DW1)
!do Get_Field_Information ('HR_UHRLY','COMPL',$COMPL,#DW1)
do Get_Field_Information ('HR_UHRLY','REC',$REC,#DW1)
do Get_Field_Information ('HR_UHRLY','DATE',$DATE,#DW1)
do Get_Field_Information ('HR_UHRLY','ID',$ID,#DW1)
do Get_Field_Information ('HR_UHRLY','REG_TEMP1',$temp,#DW1)
do Get_Field_Information ('HR_UHRLY','REG_TEMP',$Reg,#DW1)
do Get_Field_Information ('HR_UHRLY','RANK',$RANK,#DW1)
do Get_Field_Information ('HR_UHRLY','LABOR_AGREEMENT',$LABOR_AGREEMENT,#DW1)
do Get_Field_Information ('HR_UHRLY','STATUS',$STATUS,#DW1)

End-Procedure !Get-RP-Lbl

!************************************************************************
!-----------------------------SQCs-------------------------------------
!************************************************************************

#include 'stdapi.sqc'   !Routine to update run status
#include 'prcsapi.sqc'
#include 'prcsdef.sqc'
#include 'datetime.sqc'    !Routines for date and time formatting
#include 'curdttim.sqc'    !Get-Current-DateTime procedure
#include 'number.sqc'  
#Include 'sqrtrans.sqc'

#include 'prcslng.sqc'   !Gives Language Code
#include 'rellang.sqc'   !Gives Description from Related Lang tables