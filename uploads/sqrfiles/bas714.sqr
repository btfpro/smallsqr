!*************************************************
! BAS714:  Benefits Administration - Scheduling
!*************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:08:38:33                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'  !Set Database Environment

Begin-Setup
  #Include 'ptpsp125.sqc'
End-Setup

! Note: At this time, the Plan-list feature of BenAdmin scheduling is
! not implemented and is therefore commented out.  This may be supported
! in a future release.

#define col_sched_id            18      !Schedule Id and Descr
#define col_bastype              4      !BAS Type
#define col_company              7      !Company
#define col_bas_group           15      !Bas Group Id and Descr
#define col_oe_defn             16      !OE Defn Id and Descr
#define col_begin_dt            10      !Begin Date
#define col_end_dt              10      !End Date
#define col_program              7      !Benefit Program
#define col_plan_type            5      !Plan Types
#define col_gvt_os_begin_dt     10      !Open Season Begin Date
#define col_gvt_os_end_dt       10      !Open Season End Date
#define col_event_class          5      !Event Class

#define col_sep                  1      !Column Separator

!**********************************
Begin-Program
!**********************************

  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Is-Federal-Employee('', 0, '', '', '', $prcs_oprid, $FedFlag)

  do Process-Main

  display 'Report Ended at: ' noline
  do display-time

  do Reset
  do StdAPI-Term

End-Program

!**********************************
Begin-Procedure Init-Report
!**********************************

  do Init-DateTime
  do Get-Current-DateTime
  do StdAPI-Init

  let $ReportID    = 'BAS714'
  do Get-Report-Language
  let $ReportTitle  = $BAS714-REPORTTITLE
  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

End-Procedure

!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BAS714 program ids
  do Init_Report_Translation($ReportID, $Language_Cd)

  do Get_Field_Information ('BAS714', 'REPORT_TITLE',   $BAS714-REPORTTITLE,    #CW)
  do Get_Field_Information ('BAS714', 'SCHED_ID_DESC',  $BAS714-SCHED-ID-DESC,  #CW)
  do Get_Field_Information ('BAS714', 'BAS_TYPE1',      $BAS714-BAS-TYPE1,      #CW)
  do Get_Field_Information ('BAS714', 'BAS_TYPE2',      $BAS714-BAS-TYPE2,      #CW)
  do Get_Field_Information ('BAS714', 'BAS_GRP_DESC',   $BAS714-BAS-GRP-DESC,   #CW)
  do Get_Field_Information ('BAS714', 'BEN_PGM1',       $BAS714-BEN-PGM1,       #CW)
  do Get_Field_Information ('BAS714', 'BEN_PGM2',       $BAS714-BEN-PGM2,       #CW)
  do Get_Field_Information ('BAS714', 'OPEN_ENROL_DF1', $BAS714-OPEN-ENROL-DF1, #CW)
  do Get_Field_Information ('BAS714', 'OPEN_ENROL_DF2', $BAS714-OPEN-ENROL-DF2, #CW)
  do Get_Field_Information ('BAS714', 'PER_BEGIN_DT1',  $BAS714-PER-BEGIN-DT1,  #CW)
  do Get_Field_Information ('BAS714', 'PER_BEGIN_DT2',  $BAS714-PER-BEGIN-DT2,  #CW)
  do Get_Field_Information ('BAS714', 'PER_END_DT1',    $BAS714-PER-END-DT1,    #CW)
  do Get_Field_Information ('BAS714', 'PER_END_DT2',    $BAS714-PER-END-DT2,    #CW)
  do Get_Field_Information ('BAS714', 'COMPANY',        $BAS714-COMPANY,        #CW)
  do Get_Field_Information ('BAS714', 'OS',             $BAS714-OS,             #CW)
  do Get_Field_Information ('BAS714', 'EVENT',          $BAS714-EVENT,          #CW)
  do Get_Field_Information ('BAS714', 'CLASS',          $BAS714-CLASS,          #CW)

End-Procedure

!**********************************
Begin-Procedure Ask-Values
!**********************************

 do Ask-Schedule-Id

End-Procedure

!**********************************
Begin-Procedure Get-Values
!**********************************

 do Select-Parameters
 do Get-Schedule-Id

End-Procedure

!****************
Begin-Heading 7
!****************

 #Include 'stdhdgtr.sqc'

 print ' '                      (+2,1,{col_sched_id})
 print $BAS714-BAS-TYPE1        (0,+{col_sep},{col_bastype})
 print ' '                      (0,+{col_sep},{col_company})
 print ' '                      (0,+{col_sep},{col_bas_group})
 print $BAS714-OPEN-ENROL-DF1   (0,+{col_sep},{col_oe_defn})
 print $BAS714-PER-BEGIN-DT1    (0,+{col_sep},{col_begin_dt})
 print $BAS714-PER-END-DT1      (0,+{col_sep},{col_end_dt})
 print $BAS714-OS               (0,+{col_sep},{col_gvt_os_begin_dt})
 print $BAS714-OS               (0,+{col_sep},{col_gvt_os_end_dt})
 if $FedFlag = 'Y'
    print $BAS714-EVENT            (0,+{col_sep},{col_event_class})
 end-if
 print $BAS714-BEN-PGM1         (0,+{col_sep},{col_program})
! Not supported at this time...
! print 'Plan'                   (0,+{col_sep},{col_plan_type})

 print $BAS714-SCHED-ID-DESC    (+1,1,{col_sched_id})
 print $BAS714-BAS-TYPE2        (0,+{col_sep},{col_bastype})
 print $BAS714-COMPANY          (0,+{col_sep},{col_company})
 print $BAS714-BAS-GRP-DESC     (0,+{col_sep},{col_bas_group})
 print $BAS714-OPEN-ENROL-DF2   (0,+{col_sep},{col_oe_defn})
 print $BAS714-PER-BEGIN-DT2    (0,+{col_sep},{col_begin_dt})
 print $BAS714-PER-END-DT2      (0,+{col_sep},{col_end_dt})
 print $BAS714-PER-BEGIN-DT2    (0,+{col_sep},{col_gvt_os_begin_dt})
 print $BAS714-PER-END-DT2      (0,+{col_sep},{col_gvt_os_end_dt})
 if $FedFlag = 'Y'
    print $BAS714-CLASS            (0,+{col_sep},{col_event_class})
 end-if
 print $BAS714-BEN-PGM2         (0,+{col_sep},{col_program})
! Not supported at this time...
! print 'Types'                  (0,+{col_sep},{col_plan_type})

 print '='                      (+1,1,{col_sched_id})                Fill
 print '='                      (0,+{col_sep},{col_bastype})         Fill
 print '='                      (0,+{col_sep},{col_company})         Fill
 print '='                      (0,+{col_sep},{col_bas_group})       Fill
 print '='                      (0,+{col_sep},{col_oe_defn})         Fill
 print '='                      (0,+{col_sep},{col_begin_dt})        Fill
 print '='                      (0,+{col_sep},{col_end_dt})          Fill
 print '='                      (0,+{col_sep},{col_gvt_os_begin_dt}) Fill
 print '='                      (0,+{col_sep},{col_gvt_os_end_dt})   Fill
 if $FedFlag = 'Y'
    print '='                      (0,+{col_sep},{col_event_class})     Fill
 end-if
 print '='                      (0,+{col_sep},{col_program})         Fill

! Not supported at this time...
! print '='                      (0,+{col_sep},{col_plan_type})       Fill

End-Heading

!***************************
Begin-Procedure Process-Main
!***************************
  if $FedFlag = 'Y'
     let #PgmOffset = {col_sched_id} + {col_sep} + {col_bastype} + {col_sep} +
                      {col_company} + {col_sep} + {col_bas_group} + {col_sep} +
                      {col_oe_defn} + {col_sep} + {col_begin_dt} + {col_sep} +
                      {col_end_dt} + {col_sep} + {col_gvt_os_begin_dt} + {col_sep} +
                      {col_gvt_os_end_dt} + {col_sep} + {col_event_class} + {col_sep} + 1

  else
     let #PgmOffset = {col_sched_id} + {col_sep} + {col_bastype} + {col_sep} +
                      {col_company} + {col_sep} + {col_bas_group} + {col_sep} +
                      {col_oe_defn} + {col_sep} + {col_begin_dt} + {col_sep} +
                      {col_end_dt} + {col_sep} + {col_gvt_os_begin_dt} + {col_sep} +
                      {col_gvt_os_end_dt} + {col_sep} + 1

  end-if

Begin-Select
S.SCHED_ID
S.DESCRSHORT
  let $TempStr = RPAD(&S.Sched_Id,6,' ') || ': ' || &S.DescrShort
  print $TempStr       (+2,1,{col_sched_id})           On-Break
                                                       PRINT=CHANGE/TOP-PAGE

S.BAS_TYPE             (0,+{COL_SEP},{COL_BASTYPE})
S.COMPANY              (0,+{COL_SEP},{COL_COMPANY})

S.BAS_GROUP_ID
  let $TempStr = RTRIM(&S.Bas_Group_Id, ' ')
  if ($TempStr <> '')
    do Get-BAS-Group-Id
    let $TempStr = RPAD(&S.Bas_Group_Id,3,' ') || ': ' || &G.DescrShort
  end-if
  print $TempStr       (0,+{col_sep},{col_bas_group})

S.OE_DEFN_ID
  let $TempStr = RTRIM(&S.OE_Defn_Id, ' ')
  if ($TempStr <> '')
    do Get-OE-Defn-Id
    let $TempStr = RPAD(&S.OE_Defn_Id,4,' ') || ': ' || &D.DescrShort
    print $TempStr       (0,+{col_sep},{col_oe_defn})

    do Format-DateTime(&D.Period_Begin_Dt,$Out,{DEFDATE},'','')
    print $Out           (0,+{col_sep},{col_begin_dt})

    do Format-DateTime(&D.Period_End_Dt,$Out,{DEFDATE},'','')
    print $Out           (0,+{col_sep},{col_end_dt})

    do Format-DateTime(&D.GVT_OS_Begin_Dt,$Out,{DEFDATE},'','')
    print $Out           (0,+{col_sep},{col_gvt_os_begin_dt})

    do Format-DateTime(&D.GVT_OS_End_Dt,$Out,{DEFDATE},'','')
    print $Out           (0,+{col_sep},{col_gvt_os_end_dt})

    if $FedFlag = 'Y'
       print &D.Event_Class (0,+{col_sep},{col_event_class})
    end-if
  end-if

  do Display-Plan-List

From  PS_BAS_SCHED S
Where S.SCHED_ID LIKE $Sched_Id
Order By S.SCHED_ID ASC

End-Select
End-Procedure

!*************************************
Begin-Procedure Get-BAS-Group-Id
!*************************************

Begin-Select

G.BAS_GROUP_ID
G.DESCRSHORT

From  PS_BAS_GROUP_TBL G
Where G.BAS_GROUP_ID = &S.Bas_Group_Id

End-Select
End-Procedure

!*************************************
Begin-Procedure Get-OE-Defn-Id
!*************************************

Begin-Select

D.OE_DEFN_ID
D.DESCRSHORT
D.PERIOD_BEGIN_DT
D.PERIOD_END_DT
D.GVT_OS_BEGIN_DT
D.GVT_OS_END_DT
D.EVENT_CLASS

From  PS_BAS_OE_DEFN D
Where D.OE_DEFN_ID = &S.OE_Defn_Id

End-Select
End-Procedure

!*************************************
Begin-Procedure Display-Plan-List
!*************************************

  let $FirstLineFlag = 'Y'

Begin-Select

P.BENEFIT_PROGRAM
  if ($FirstLineFlag = 'Y')
    print &P.Benefit_Program      (0,#PgmOffset,{col_program})
  else
    print &P.Benefit_Program      (+1,#PgmOffset,{col_program})
  end-if
  let $FirstLineFlag = 'N'

!  Not supported at this time...
!P.PLAN_TYPE                       (0,+{COL_SEP},{COL_PLAN_TYPE})
P.PLAN_TYPE

From  PS_BAS_OE_DEFN_PLN P
Where P.OE_DEFN_ID = &S.OE_Defn_Id
Order By P.BENEFIT_PROGRAM ASC,
         P.PLAN_TYPE ASC

End-Select
End-Procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!*************************************

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Format-DateTime
#Include 'getsched.sqc'  !Ask-Schedule-Id Procedure

#Include 'stdapi.sqc'    !Update Process API
#Include 'getindcd.sqc'  !Determine Industry Membership
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

!****************************** End Of Report *******************************
