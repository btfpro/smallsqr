!*******************************************
!  PER900:  Core HR Data Audits            *
!*******************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:13:04                                 !
!       $Release:  HR9                                                 !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************
! Performs basic data integrity audits on the Core HR records          *
!                   *
!***********************************************************************
  

#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
#define C01    1
#define C02   15
#define C03   24
#define C04   40
#define C05   45

end-setup


begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Term
    Move 1 to $Year4
  do Init-Report
  if $prcs_oprid=''
    goto last2
  end-if
  do GetStrings
  do Process-Main
  do Reset
  do Stdapi-Term
last2:
end-report


!************************************************************************
! Section Init-Report
!************************************************************************

begin-procedure Init-Report
  move 'PER900' to $ReportID
  move 'HR Data Integrity Audits' to $ReportTitle
  do Stdapi-Init

  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

 
  display ' '
  display $ReportID
  display $ReportTitle
  display ' '
create-array name=printarray size=8 field=audhdr:char field=start:number field=length:number

  do Init_Printer
last1:
end-procedure

!************************************************************************
! Section Heading
!************************************************************************

begin-heading 6
   #Include 'stdhdg01.sqc'

PRINT $EMPL_ID_HD    (+2,{C01},11)  underline
PRINT $EMPL_RCD_HD   (0,{C02},4)    underline
PRINT $EFFDT_HD      (0,{C03},14)   underline
PRINT $EFFSEQ_HD     (0,{C04},7)    underline
PRINT $AUDIT_HD      (0,{C05},80)   underline



end-heading

!************************************************************************
! Section GetStrings
!************************************************************************
begin-procedure GetStrings
 
  let $language_cd = $CURR_LANGUAGE_CD
  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation('HR')
  do Get_Field_Information ('HR',         'EMPLID',       $EMPL_ID_HD,    #DW)
  do Get_Field_Information ('HR',         'EMPL_RCD',     $EMPL_RCD_HD,   #DW)
  do Get_Field_Information ('HR',         'EFFDT',        $EFFDT_HD,      #DW)
  do Get_Field_Information ('HR',         'EFFSEQ',       $EFFSEQ_HD,     #DW)

end-procedure GetStrings


begin-procedure Get-Values
   let $language_cd = $PRCS_LANGUAGE_CD
end-procedure

!************************************************************************
! Procedure Process-Main
!************************************************************************
begin-procedure Process-Main
  
begin-select

HR_AUDIT_SW

    move 'Y' to $record_found
    let $audit_PDE_sw       = SUBSTR(&HR_AUDIT_SW, 1, 1)
    let $audit_EMPL_sw      = SUBSTR(&HR_AUDIT_SW, 2, 1)
    let $audit_JOB_sw       = SUBSTR(&HR_AUDIT_SW, 3, 1)
    let $audit_JOBJR_sw     = SUBSTR(&HR_AUDIT_SW, 4, 1)
    let $audit_NAME_sw     = SUBSTR(&HR_AUDIT_SW, 5, 1)
    let $audit_HOMEADDR_sw  = SUBSTR(&HR_AUDIT_SW, 6, 1)
    let $audit_DIS_sw       = SUBSTR(&HR_AUDIT_SW, 7, 1)
    let $audit_DIV_sw       = SUBSTR(&HR_AUDIT_SW, 8, 1)
   

    #ifdef debugd
        show '&Audit_sw: ' &HR_Audit_sw
    #end-if

    exit-select

FROM PS_RUN_CNTL_HRAUD
WHERE RUN_CNTL_ID = $prcs_run_cntl_id

end-select

    if $record_found <> 'Y'
        move '1'                to  $audit_PDE_sw
        move '1'                to  $audit_EMPL_sw
        move '1'                to  $audit_JOB_sw
        move '1'                to  $audit_JOBJR_sw
        move '1'                to  $audit_NAME_sw
        move '1'                to  $audit_HOMEADDR_sw
        move '1'                to  $audit_DIS_sw
        move '1'                to  $audit_DIV_sw
        
    end-if


  if $audit_PDE_sw = '1'
    display 'Starting PERS_DATA_EFFDT Audit'
  do PDE_Audit
  end-if

  if $audit_EMPL_sw = '1'
    display 'Starting EMPLOYMENT Data Audit'
  do EMPL_Audit
  end-if

  if $audit_JOB_sw = '1'
    display 'Starting JOB Data Audit'
  do JOB_Audit
  end-if

  if $audit_JOBJR_sw = '1'
    display 'Starting JOB_JR Data Audit'
  do JOB_JR_audit
  end-if

  if $audit_NAME_sw = '1'
    display 'Starting Primary Name Data Audit'
  do Name_Audit
  end-if

  if $audit_HOMEADDR_sw = '1'
    display 'Starting Address Data Audit'
    do Address_Audit
  end-if

 if $audit_DIS_sw = '1'
    display 'Starting Disability Data Audit'
    do Disability_Audit
  end-if

 if $audit_DIV_sw = '1'
    display 'Starting Diversity Data Audit'
  do Diversity_Audit
  end-if

end-procedure

 

!*************************************************!
!*  Audit PERS_DATA_EFFDT against PERSON         *!
!*************************************************!
begin-procedure PDE_AUDIT
  let #PDE_CNT = 0
  print ' ' (+1,1)
begin-select
PDE.EMPLID
PDE.EFFDT

   let #PDE_CNT = #PDE_CNT + 1
  
   let $EMPLID   = &PDE.EMPLID
   let $EMPL_RCD = ''
   let $EFFDT    = &PDE.EFFDT
   let #EFFSEQ   = ''
   let $Msg = 'Person exists in PERS_DATA_EFFDT but not in PERSON'

   do PRINT-Audit

FROM PS_PERS_DATA_EFFDT PDE
WHERE PDE.EMPLID not in (SELECT distinct EMPLID from PS_PERSON)
end-select

  If #PDE_CNT = 0
     print 'No Persons were found in PERS_DATA_EFFDT that do not exist in PERSON' (+1,1)
  end-if

let #PDE_CNT = 0
  print ' ' (+1,1)
begin-select
PDEb.EMPLID


   let #PDE_CNT = #PDE_CNT + 1
  
   let $EMPLID   = &PDEb.EMPLID
   let $EMPL_RCD = ''
   let $EFFDT    = ''
   let #EFFSEQ   = ''
   let $Msg = 'Person exists in PERSON but not in PERS_DATA_EFFDT'

   do PRINT-Audit

FROM PS_PERSON PDEb
WHERE PDEb.EMPLID not in (SELECT distinct EMPLID from PS_PERS_DATA_EFFDT)
end-select

  If #PDE_CNT = 0
     print 'No Persons were found in PERSON that do not exist in PERS_DATA_EFFDT' (+1,1)

  end-if

end-procedure  PDE_AUDIT


!*************************************************!
!*  Audit PERS_DATA_EFFDT against EMPLOYMENT     *!
!*  and EMPLOYMENT against PERS_DATA_EFFDT       *!
!*************************************************!
begin-procedure EMPL_AUDIT

  let #PDE2_CNT = 0
  print ' ' (+1,1)
begin-select

PDE2.EMPLID
PDE2.EFFDT

   let #PDE2_CNT = #PDE2_CNT + 1

   let $EMPLID   = &PDE2.EMPLID
   let #EMPL_RCD = ''
   let $EFFDT    = &PDE2.EFFDT
   let #EFFSEQ   = ''
   let $Msg = 'Person exists in PERS_DATA_EFFDT but not in EMPLOYMENT'
 

FROM PS_PERS_DATA_EFFDT PDE2
WHERE PDE2.EMPLID not in (SELECT distinct EMPLID from PS_EMPLOYMENT)
end-select

  If #PDE2_CNT = 0
   print 'No  Persons were found in PERS_DATA_EFFDT that do not exist in EMPLOYMENT' (+1,1)

  end-if

  let #EMP_CNT = 0
  print ' ' (+1,1)
begin-select
EMP.EMPLID
EMP.EMPL_RCD

   let #EMP_CNT = #EMP_CNT + 1

   let $EMPLID   = &EMP.EMPLID
   let #EMPL_RCD = &EMP.EMPL_RCD 
   let $EFFDT    = &PDE.EFFDT
   let #EFFSEQ   = ''
   let $Msg = ' Person exists in EMPLOYMENT but not in PERS_DATA_EFFDT'

   do PRINT-Audit

FROM PS_EMPLOYMENT EMP
WHERE EMP.EMPLID not in (SELECT distinct EMPLID from PS_PERS_DATA_EFFDT)
end-select

  If #EMP_CNT = 0
     print 'No Persons were found in EMPLOYMENT that do not exist in PERS_DATA_EFFDT ' (+1,1)

  end-if
end-procedure  EMP_AUDIT

!*************************************************!
!*  Audit JOB against EMPLOYMENT                 *!
!*  and   EMPLOYMENT against JOB                 *!
!*  and   JOB against PERS_DATA_EFFDT            *!
!*************************************************!
begin-procedure JOB_AUDIT

  let #JOB_CNT = 0
  print ' ' (+1,1)
begin-select
JOB.EMPLID
JOB.EMPL_RCD
JOB.EFFDT
JOB.EFFSEQ

  
   let #JOB_CNT = #JOB_CNT + 1

   let $EMPLID   = &JOB.EMPLID
   let #EMPL_RCD = &JOB.EMPL_RCD 
   let $EFFDT    = &JOB.EFFDT
   let #EFFSEQ   = &JOB.EFFSEQ 
   let $Msg = ' Person exists in JOB but not in EMPLOYMENT'

   do PRINT-Audit

FROM PS_JOB JOB
WHERE JOB.EMPLID not in (SELECT distinct C.EMPLID from PS_EMPLOYMENT C)
  

end-select

  If #JOB_CNT = 0
     print 'No Persons were found in JOB that do not exist in EMPLOYMENT' (+1,1)
   
  end-if

  print ' ' (+1,1)
  let #EMP2_CNT = 0
begin-select
EMP2.EMPLID
EMP2.EMPL_RCD

   let #EMP2_CNT = #EMP2_CNT + 1
   let #EMPL_RCD = &EMP2.EMPL_RCD
   let $EFFDT    = ''
   let #EFFSEQ   = ''
   let $Msg = 'Person exists in EMPLOYMENT but not in JOB'
 
   do PRINT-Audit

FROM PS_EMPLOYMENT EMP2
WHERE EMP2.EMPL_RCD not in (SELECT distinct EMPL_RCD from PS_JOB B WHERE EMP2.EMPLID = B.EMPLID )

end-select

  If #EMP2_CNT = 0
     print 'No Persons were found in EMPLOYMENT that do not exist in JOB ' (+1,1)

  end-if


 let #JOB2_CNT = 0
  print ' ' (+1,1)
begin-select

JOB2.EMPLID
JOB2.EMPL_RCD
JOB2.EFFDT
JOB2.EFFSEQ

   let #JOB2_CNT = #JOB2_CNT + 1
 
   let $EMPLID   = &JOB2.EMPLID
   let #EMPL_RCD = &JOB2.EMPL_RCD  
   let $EFFDT    = &JOB2.EFFDT
   let #EFFSEQ   = &JOB2.EFFSEQ 


   let $Msg = ' Person exists in JOB but not in PERS_DATA_EFFDT'

   do PRINT-Audit

FROM PS_JOB JOB2
WHERE JOB2.EMPLID not in (SELECT distinct B.EMPLID from PS_PERS_DATA_EFFDT B)
end-select

  If #JOB2_CNT = 0
     print 'No Persons were found in JOB that do not exist in PERS_DATA_EFFDT' (+1,1)
  end-if

end-procedure  JOB_AUDIT



!****************************************!
!*  Audit JOB against JOB_JR            *!
!*  and   JOB_JR vs JOB                 *!
!****************************************!
begin-procedure JOB_JR_AUDIT

  let #JOBJR_CNT = 0
  print ' ' (+1,1)
begin-select

JOB3.EMPLID
JOB3.EMPL_RCD
JOB3.EFFDT
JOB3.EFFSEQ

   let #JOBJR_CNT = #JOBJR_CNT + 1

   let $EMPLID   = &JOB3.EMPLID
   let #EMPL_RCD = &JOB3.EMPL_RCD 
   let $EFFDT    = &JOB3.EFFDT
   let #EFFSEQ   = &JOB3.EFFSEQ 

   let $Msg = ' Person exists in JOB but not in JOB_JR'
   do PRINT-Audit

FROM PS_JOB JOB3
WHERE JOB3.EFFSEQ not in (SELECT distinct EFFSEQ 
                           from PS_JOB_JR B 
                           where JOB3.EMPLID = B.EMPLID
                             and JOB3.EMPL_RCD = B.EMPL_RCD
                             and JOB3.EFFDT = B.EFFDT)
end-select

  If #JOBJR_CNT = 0
     print 'No Persons were found in JOB that do not exist in JOB_JR' (+1,1)

  end-if


  let #JOBJR2_CNT = 0
  print ' ' (+1,1)
begin-select

JJR.EMPLID
JJR.EMPL_RCD
JJR.EFFDT
JJR.EFFSEQ

   let #JOBJR2_CNT = #JOBJR2_CNT + 1

   let $EMPLID   = &JJR.EMPLID
   let #EMPL_RCD = &JJR.EMPL_RCD 
   let $EFFDT    = &JJR.EFFDT
   let #EFFSEQ   = &JJR.EFFSEQ 


  let $Msg = ' Person exists in JOB_JR but not in JOB'
 
   do PRINT-Audit

FROM PS_JOB_JR JJR
WHERE JJR.EFFSEQ not in (SELECT distinct EFFSEQ 
                           from PS_JOB B 
                           where JJR.EMPLID = B.EMPLID
                             and JJR.EMPL_RCD = B.EMPL_RCD
                             and JJR.EFFDT = B.EFFDT)
end-select

  If #JOBJR2_CNT = 0
    print 'No Persons were found in JOB_JR that do not exist in JOB' (+1,1)

  end-if

end-procedure JOB_JR_AUDIT

!************************************!
!*  Audit NAMES vs PERSON           *!
!************************************!
begin-procedure Name_Audit
  let #NM_CNT = 0
  print ' ' (+1,1)
begin-select
PER3.EMPLID


   let #NM_CNT = #NM_CNT + 1

   let $EMPLID   = &PER3.EMPLID
   let #EMPL_RCD = '' 
   let $EFFDT    = ''
   let #EFFSEQ   = ''



   let $Msg= 'Person exists in PERSON but not in NAMES with a Primary Name'
 
   do PRINT-Audit

FROM PS_PERSON PER3
WHERE PER3.EMPLID not in (SELECT distinct EMPLID from PS_NAMES B 
                         where B.NAME_TYPE = 'PRI' )
end-select

  If #NM_CNT = 0
     print 'No Persons were found in PERSON that do not have a Primary Name in NAMES ' (+1,1)
 
  end-if

  let #NM_CNT2 = 0
  print ' ' (+1,1)
begin-select
NM.EMPLID
NM.NAME
NM.EFFDT

   let #NM_CNT2 = #NM_CNT2 + 1

   let $EMPLID   = &NM.EMPLID
   let #EMPL_RCD = '' 
   let $EFFDT    = &NM.EFFDT
   let #EFFSEQ   = ''

   let $Msg = 'Person exists in NAMES but not in PERSON'
 
   do PRINT-Audit

FROM PS_NAMES NM
WHERE NM.NAME_TYPE = 'PRI'
 and  NM.EMPLID not in (SELECT distinct EMPLID from PS_PERSON B)
end-select

  If #NM_CNT2 = 0
     print 'No Persons were found in NAMES that do not have record in PERSON' (+1,1)
  end-if

end-procedure  Name_Audit

!****************************************!
!*  Audit ADDRESSES vs PERSONAL_DATA    *!
!*                         *1
!****************************************!
begin-procedure Address_Audit
  

  let #ADDR_CNT2 = 0
  print ' ' (+1,1)
begin-select
ADDR.EMPLID
ADDR.ADDRESS_TYPE
ADDR.EFFDT

   let #ADDR_CNT2 = #ADDR_CNT2 + 1

   let $EMPLID   = &ADDR.EMPLID
   let #EMPL_RCD = '' 
   let $EFFDT    = &ADDR.EFFDT
   let #EFFSEQ   = ''

  let $Msg = 'Person exists in ADDRESSES but not in PERSON'
   do PRINT-Audit

FROM PS_ADDRESSES ADDR
WHERE ADDR.EMPLID not in (SELECT distinct EMPLID  from PS_PERSON B)
end-select

  If #ADDR_CNT2 = 0
     print 'No Persons were found in ADDRESSES that do not have record in PERSON' (+1,1)

  end-if

end-procedure  Address_Audit

!*************************************************!
!*  Audit DIVERSTIY  against PERSON            *!
!*************************************************!
begin-procedure DIVERSITY_AUDIT
  let #PD_CNT = 0
  print ' ' (+2,1)
begin-select
DIV.EMPLID
   let #PD_CNT = #PD_CNT + 1
   let $EMPLID   = &DIV.EMPLID
   let #EMPL_RCD = ''
   let $EFFDT    = ''
   let #EFFSEQ   = ''
   let $Msg = 'Person exists in DIVERSITY but not in PERSON'

   do PRINT-Audit

!FROM PS_DIVERSITY DIV
FROM PS_DIVERS_ETHNIC DIV
WHERE DIV.EMPLID not in (SELECT distinct EMPLID from PS_PERSON)
end-select

  If #PD_CNT = 0
   print 'No Persons were found in DIVERSITY that do not exist in PERSON' (+1,1)
  end-if
End-procedure Diversity_Audit

!*************************************************!
!*  Audit DISABILITY  against PERSON            *!
!*************************************************!
begin-procedure DISABILITY_AUDIT
  let #PD_CNT = 0
  print ' ' (+2,1)
begin-select
DIS.EMPLID
   let #PD_CNT = #PD_CNT + 1
   let $EMPLID   = &DIS.EMPLID
   let #EMPL_RCD = ''
   let $EFFDT    = ''
   let #EFFSEQ   = ''
   let $Msg = 'Person exists in DISABILITY but not in PERSON'

   do PRINT-Audit

FROM PS_DISABILITY DIS
WHERE DIS.EMPLID not in (SELECT distinct EMPLID from PS_PERSON)
end-select

  If #PD_CNT = 0
   Print 'No persons exist in DISABILITY that do not exist in PERSON' (+1,1)
  end-if
End-procedure Disability_Audit


!*******************!
!*  PRINT-Audit    *!
!*******************!
begin-procedure PRINT-Audit

  do Format-DateTime($EffDt, $out, {DEFDATE}, '', '')
Print $EMPLID        (+1,{C01}) 
Print #EMPL_RCD      (0,{C02})   edit 999
Print $out           (0,{C03})
Print #EFFSEQ        (0,{C04})   edit 999
Print $Msg           (0,{C05})


end-procedure PRINT-Audit



!********************!
!*  Include files   *!
!********************!

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'stdapi.sqc'    !Routines to update run status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc' 

