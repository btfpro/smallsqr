! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
!  PROJAPI.SQC - Project Definition API                                *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
! This module provides procedures to create an Application Designer    *
! project and insert various types of objects into the project.        *
! At present time, the types of objects that can be inserted are       *
! limited.  More functionality is planned for the future.              *
!                                                                      *
!***********************************************************************

!----------------------------------------------------------------------
begin-procedure Create-Project ($projectname, $projectdescr, $oprid)
!----------------------------------------------------------------------
!  This procedure creates a new project definition.  If the named
!  project already exists, it deletes and replaces it.
!----------------------------------------------------------------------

#debug show 'Create Project ' $projectname

    let $projectname = substr($projectname,1,30)
    let $projectdescr = substr($projectdescr,1,30)

begin-sql on-error=SQL-Error
    DELETE FROM PSPROJECTDEFN
    WHERE PROJECTNAME = $projectname
end-sql

begin-sql on-error=SQL-Error
    DELETE FROM PSPROJECTITEM
    WHERE PROJECTNAME = $projectname
end-sql

begin-sql on-error=SQL-Error
    UPDATE PSLOCK
    SET VERSION = VERSION + 1
    WHERE OBJECTTYPENAME = 'PJM'
end-sql

begin-select
VERSION &VERSIONPJM
        let #versionpjm = &VERSIONPJM
FROM PSLOCK
WHERE VERSION = 'PJM'
end-select

begin-sql on-error=SQL-Error

    INSERT INTO PSPROJECTDEFN (
      PROJECTNAME,
      VERSION,
      PROJECTDESCR,
      TGTSERVERNAME,
      TGTDBNAME,
      TGTOPRID,
      TGTOPRACCT,
      COMPRELEASE,
      KEEPTGTAUDITS,
      TGTORIENTATION,
      COMPARETYPE,
      COMMITLIMIT,
      REPORTFILTER,
      LASTUPDOPRID,
      LASTUPDDTTM)
    VALUES (
      $projectname,
      #versionpjm,
      $projectdescr,
      ' ',
      ' ',
      ' ',
      ' ',
      ' ',
      1,
      0,
      0,
      100,
      0,
      $oprid,
      {DateTimeIn-Prefix}&_sysdatetime{DateTimeIn-Suffix}
      )
end-sql

end-procedure ! Create-Project

!----------------------------------------------------------------------
begin-procedure Insert-Panel-Group-Into-Project ($projectname, $pgname, $market)
!----------------------------------------------------------------------
#debug show 'Insert Panel Group ' $pgname ' (' $market ')'

    do Insert-Object-Into-Project($projectname, 7, 10, $pgname, 39, $market, 0,' ',0,' ',0)

end-procedure ! Insert-Panel-Group-Into-Project

!----------------------------------------------------------------------
begin-procedure Insert-Menu-Into-Project ($projectname, $menuname)
!----------------------------------------------------------------------
#debug show 'Insert Menu ' $menuname

    do Insert-Object-Into-Project($projectname, 6, 3, $menuname, 0, ' ', 0,' ',0,' ',0)

end-procedure ! Insert-Panel-Group-Into-Project

!----------------------------------------------------------------------
begin-procedure Insert-Record-Into-Project ($projectname, $recname)
!----------------------------------------------------------------------
#debug show 'Insert Record ' $recname

    do Insert-Object-Into-Project($projectname, 0, 1, $recname, 0, ' ', 0,' ',0,' ',0)

end-procedure ! Insert-Panel-Group-Into-Project

!----------------------------------------------------------------------
begin-procedure Insert-Rec-PeopleCode-Into-Project ($projectname, $recname, $fieldname, #progtype)
!----------------------------------------------------------------------
#debug show 'Insert PeopleCode ' $recname '.' $fieldname '.' #progtype edit 99

    let $progtype = to_char(#progtype)
    do Insert-Object-Into-Project($projectname, 8, 1, $recname, 2, $fieldname, 12, $progtype, 0,' ',0)

end-procedure ! Insert-Panel-Group-Into-Project

!----------------------------------------------------------------------
begin-procedure Insert-Object-Into-Project ($projectname, #objecttype, #objectid1, $objectvalue1,
  #objectid2, $objectvalue2, #objectid3, $objectvalue3, #objectid4, $objectvalue4,  #nodetype)
!----------------------------------------------------------------------
!  This procedure simply inserts a row into the project item table.
!  It does not check to see if the item already exists, so it will fail
!  if such is the case.
!----------------------------------------------------------------------

    let $projectname = substr($projectname,1,30)

begin-sql on-error=SQL-Error
    INSERT INTO PSPROJECTITEM (
      PROJECTNAME,
      OBJECTTYPE,
      OBJECTID1,
      OBJECTVALUE1,
      OBJECTID2,
      OBJECTVALUE2,
      OBJECTID3,
      OBJECTVALUE3,
      OBJECTID4,
      OBJECTVALUE4,
      NODETYPE,
      SOURCESTATUS,
      TARGETSTATUS,
      UPGRADEACTION,
      TAKEACTION,
      COPYDONE)
    VALUES (
      $projectname,
      #objecttype,
      #objectid1,
      $objectvalue1,
      #objectid2,
      $objectvalue2,
      #objectid3,
      $objectvalue3,
      #objectid4,
      $objectvalue4,
      #nodetype,
      0,
      0,
      2,
      1,
      0)
end-sql

end-procedure

