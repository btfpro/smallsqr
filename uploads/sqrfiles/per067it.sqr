!**********************************************
!  PER067IT:  Special Hiring Category Report  *
!**********************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:55:19                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!
! THIS SQR PRODUCE THE LIST OF THE EMPLOYEE WITH SPECIAL HIRING CATEGORY
! NOT BLANK

#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
    Move 1 to $Year4
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-heading 7

  do Get_Field_Information ('PER067IT',     'REPORT_TITLE',         $REPORTTITLE,   #DW)
  #Include 'stdhdgtr.sqc'

  do Get_Field_Information ('HR',         'EMPL_NAME',            $NAME,                   #DW)
  do Get_Field_Information ('HR',         'EMPLID',               $EMPLID,                 #DW)
  do Get_Field_Information ('PER067IT',         'SPECIAL_HIRCTG_ITA',   $SPECIAL_HIRCTG_ITA,     #DW)
  do Get_Field_Information ('PER067IT',         'FROMDATE',             $FROMDATE,               #DW)
  do Get_Field_Information ('PER067IT',         'THRUDATE',             $THRUDATE,               #DW)
  do Get_Field_Information ('PER067IT',         'HIREDATE',             $HIREDATE,               #DW)
  do Get_Field_Information ('PER067IT',         'TERMDATE',             $TERMDATE,               #DW)
  do Get_Field_Information ('PER067IT',         'TOTALEMPL',            $TOTALEMPL,              #DW)
  do Get_Field_Information ('HR',         'COMPANY',              $COMPANY,                #DW)

  do GetCompanyDescr

  print $COMPANY        (+1,5)  BOLD
  print &R.COMPANY      (0,20)
  print $CO.Descr       (0,25)

  print $FROMDATE       (+2,5)  BOLD
  do Format-DateTime($R.FROMDATE, $FR.FROMDATE, {DEFMDY}, '', '')
  print $FR.FROMDATE    (0,20)

  print $THRUDATE       (+0,35) BOLD
  do Format-DateTime($R.THRUDATE, $FR.THRUDATE, {DEFMDY}, '', '')
  print $FR.THRUDATE    (0,50)


  graphic (+3,4,#len1) box 1 0 8
  graphic (0,4,#len1) box 1


  PRINT $EMPLID               (0,#col1) BOLD
  PRINT $NAME                 (0,#col2) BOLD
  PRINT $SPECIAL_HIRCTG_ITA   (0,#col3) BOLD
  PRINT $HIREDATE             (0,#col4) BOLD
  PRINT $TERMDATE             (0,#col5) BOLD

end-heading

!************************************
!Init Report
!************************************
begin-procedure Init-Report

  move 'PER067IT' to $ReportID

  do Stdapi-Init

  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  do Security-Param

  if $prcs_process_instance = ''
    do Ask-As-Of-Date
  else
    do Select-Parameters
  end-if

  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')
last1:
end-procedure

!************************************
!Get Values
!************************************
begin-procedure Get-Values

   let $language_cd = $PRCS_LANGUAGE_CD

   display $prcs_oprid
   display $prcs_run_cntl_id

begin-SELECT

R.FROMDATE
  let $R.FROMDATE = &R.FROMDATE
R.THRUDATE
  let $R.THRUDATE = &R.THRUDATE
R.COMPANY

 from PS_RUN_CNTL_PER067 R

 where R.OPRID = $prcs_oprid
 and   R.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT

end-procedure

!************************************
!  Process Main
!************************************
begin-procedure Process-Main

  do Format-DateTime($AsOfDate, $AsOf_YMD, {DEFMDY}, '', '')
  do Get-Values
  do Create-Report

end-procedure

!************************************
!  Get JobJr Terminated
!************************************

begin-procedure Get-JobJr-Terminated

  let $B.TERMDATE = ' '

begin-SELECT

BT.SPECIAL_HIRCTG_ITA
BT.EFFDT

  let #EMPL_TERMIN = #EMPL_TERMIN + 1

  move 'SPECIAL_HIRCTG_ITA'  to $FieldName
  move &BT.SPECIAL_HIRCTG_ITA to $FieldValue
  do Read-Translate-Table

  print &A.EMPLID              (+1,#col1)
  print &A.NAME                (0,#col2)
  print $XlatLongName          (0,#col3)

  do Format-DateTime(&J.EFFDT, $J.HIREDATE, {DEFMDY}, '', '')
  print $J.HIREDATE             (0,#col4)

  do Format-DateTime(&BT.EFFDT, $BT.TERMDATE, {DEFMDY}, '', '')
  print $BT.TERMDATE            (0,#col5)

  FROM PS_JOB_JR BT
  WHERE BT.EMPLID = &A.EMPLID
  AND BT.EMPL_RCD = &J.EMPL_RCD
  AND BT.EFFDT <= &R.THRUDATE
  AND BT.EFFDT >= &R.FROMDATE
  AND BT.SPECIAL_HIRCTG_ITA <> ' '
  AND BT.EFFDT = (SELECT MAX(BBT.EFFDT) FROM PS_JOB BBT
                  WHERE BBT.EMPLID = &A.EMPLID
                    AND BBT.EMPL_RCD = &J.EMPL_RCD
                    AND BBT.EFFDT <= &R.THRUDATE
                    AND BBT.EFFDT >= &R.FROMDATE)
  AND BT.EFFSEQ = (SELECT MAX(BBBT.EFFSEQ) FROM PS_JOB_JR BBBT
                   WHERE BBBT.EMPLID = &A.EMPLID
                     AND BBBT.EMPL_RCD = &J.EMPL_RCD
                     AND BBBT.EFFDT = BT.EFFDT)
  AND EXISTS (SELECT 1 FROM PS_JOB H1T
              WHERE H1T.EMPLID = BT.EMPLID
                AND H1T.EMPL_RCD = BT.EMPL_RCD
                AND H1T.EFFDT = BT.EFFDT
                AND H1T.EMPL_STATUS IN ('D','Q','R','T','U','V','X'))
end-select
end-procedure


!************************************
!  Get JobJr Active
!************************************


begin-procedure Get-JobJr-Active

begin-SELECT

B.SPECIAL_HIRCTG_ITA

  let #EMPL_SPEC = #EMPL_SPEC + 1

  move 'SPECIAL_HIRCTG_ITA'  to $FieldName
  move &B.SPECIAL_HIRCTG_ITA to $FieldValue
  do Read-Translate-Table

  print &A.EMPLID              (+1,#col1)
  print &A.NAME                (0,#col2)
  print $XlatLongName          (0,#col3)
  do Format-DateTime(&J.EFFDT, $J.HIREDATE, {DEFMDY}, '', '')
  print $J.HIREDATE            (0,#col4)

  FROM PS_JOB_JR B
  WHERE B.EMPLID = &A.EMPLID
  AND B.EMPL_RCD = &J.EMPL_RCD
  AND B.EFFDT <= &R.THRUDATE
  AND B.EFFDT >= &R.FROMDATE
  AND B.SPECIAL_HIRCTG_ITA <> ' '
  AND B.EFFDT = (SELECT MAX(BB.EFFDT) FROM PS_JOB BB
                  WHERE BB.EMPLID = &A.EMPLID
                    AND BB.EMPL_RCD = &J.EMPL_RCD
                    AND BB.EFFDT <= &R.THRUDATE
                    AND BB.EFFDT >= &R.FROMDATE)
  AND B.EFFSEQ = (SELECT MAX(BBB.EFFSEQ) FROM PS_JOB_JR BBB
                   WHERE BBB.EMPLID = &A.EMPLID
                     AND BBB.EMPL_RCD = &J.EMPL_RCD
                     AND BBB.EFFDT = B.EFFDT)
  AND EXISTS (SELECT 1 FROM PS_JOB H1
              WHERE H1.EMPLID = B.EMPLID
                AND H1.EMPL_RCD = B.EMPL_RCD
                AND H1.EFFDT = B.EFFDT
                AND H1.HR_STATUS = 'A')
end-select

end-procedure


!************************************
! GetCompanyDescr
!************************************
begin-procedure GetCompanyDescr

begin-SELECT

CO.DESCR
  let $CO.Descr = &CO.DESCR

FROM PS_COMPANY_TBL CO
WHERE CO.COMPANY = &R.COMPANY
AND CO.EFFDT = (SELECT MAX(CO1.EFFDT) FROM PS_COMPANY_TBL CO1
                WHERE CO1.COMPANY = CO.COMPANY)
end-SELECT

end-procedure


!************************************
!Create Report
!************************************
begin-procedure Create-Report

! set box width

  let #len1 = 120

! set columns
  let #col1 = 5
  let #col2 = 20
  let #col3 = 70
  let #col4 = 95
  let #col5 = 107

! reset variables

  let #EMPL_SPEC = 0
  let #EMPL_TERMIN = 0

  print '' (+3,#col1)

begin-SELECT

A.EMPLID
J.EMPL_RCD
J.EFFDT
J.EFFSEQ
A.NAME
  do Get-JobJr-Active
  do Get-JobJr-Terminated

FROM  PS_NAMES A, PS_JOB J
WHERE J.ACTION IN ('HIR','REH')
  AND A.EMPLID = J.EMPLID
  AND J.EFFDT =
      (SELECT MAX(H.EFFDT)
       FROM PS_JOB H
       WHERE H.EMPLID = J.EMPLID
         AND H.EMPL_RCD = J.EMPL_RCD
         AND H.EFFDT <= J.EFFDT
         AND H.EFFDT <= &R.THRUDATE
         AND H.EFFDT >= &R.FROMDATE)
  AND J.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = J.EMPLID
         AND I.EMPL_RCD = J.EMPL_RCD
         AND I.EFFDT = J.EFFDT)
  AND J.COMPANY = &R.COMPANY
  AND J.EFFDT <= &R.THRUDATE
  AND J.EFFDT >= &R.FROMDATE
  ORDER BY A.EMPLID

end-SELECT

    print ' ' (+1,#col1)
    do Get_Field_Information ('PER067IT',         'TOTALEMPL',            $TOTALEMPL,              #DW)
    print $TOTALEMPL    (+1,#col1) BOLD
    let #EMPL_TOTAL = #EMPL_SPEC + #EMPL_TERMIN
    print #EMPL_TOTAL    (0,55) edit '999,999'

    do Get_Field_Information ('PER067IT',         'EMPL_ACTI',            $EMPL_ACTI,              #DW)
    do Get_Field_Information ('PER067IT',         'EMPL_TERM',            $EMPL_TERM,              #DW)

    graphic (0,4,#len1) box 3
    print $EMPL_ACTI   (+1,#col1) BOLD
    print #EMPL_SPEC   (0,35) edit '999,999'
    print $EMPL_TERM   (+1,#col1) BOLD
    print #EMPL_TERMIN (0,35) edit '999,999'

end-procedure


#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask As Of Date input
#include 'asksrvyr.sqc'  !Years Of Service input
#include 'hrsecty.sqc'   !Get SQR Security parameters
#Include 'readxlat.sqc'  !Read-Translate-Table procedure

#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
