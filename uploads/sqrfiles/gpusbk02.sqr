!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                $Date:  2006/02/03:14:53:42                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
!                                                                      *
! Global Payroll US    Release 8.9                                     *
!***********************************************************************

!***********************************************************************
!                                                                      *
!  gpusbk02.sqr Generates the Net Payment Report USA                   *
!                                                                      *
!  The user has several options of generating a summary or detail      *
!  report.                                                             *
!                                                                      *
!***********************************************************************
!
! Release 9     02/06   Removed a procedure that was called from 
!                       Get-CalRun-DescrI. The deleted field 
!                       GP_OFFCYCLE.DESCR was referenced in the removed procedure


#include 'setenv.sqc'   !Set environment
#include 'setup32.sqc'  !page layout and printer definition
#include 'number.sqc'   !Routines to format numbers
#include 'datetime.sqc' !Routines for date and time formatting
#include 'prcsapi.sqc'  !Replaces stdapi.sqc

#define ColR   155
begin-report

#IFDEF DEBUGA
 lET $PRCS_OPRID = 'PS'
 LET $PRCS_RUN_CNTL_ID = '1'
#ENDIF
        Do Init-Processing
        Do Stdapi-Init
        Do Get-Parameters
        Do Process-PE
             
        Do Reset                        ! called from reset.sqc
        Do Delete-RunControl
        Do Stdapi-Term
end-report
!
!***********************************************************************
! Init-Processing                                                      *
!***********************************************************************
begin-procedure Init-Processing
        do Init-Datetime
        do Get-Current-Datetime
        do Init-Report
        do Define-Prcs-Vars
!       do Get-Language-Codes
end-procedure ! Init-Processing
!
!***********************************************************************
! Init-Report                                                          *
!***********************************************************************
begin-procedure Init-Report

#define Col1   1
#define Col2   14
#define Col3   27
#define Col4   38
#define Col5   76
#define Col6   102
#define Col7   114
#define Col8   125
#define Col9   136
#define Col10  154

    Let $ReportID = 'GPUSBK02'

    Let $Curr_Language_Cd = 'ENG'

    do Init_Report_Translation ($ReportID, $curr_language_cd)

    do Get_Field_Information ($ReportID, 'PAY_ENTITY'   , $Pay_Entity_Title, #DW)
    do Get_Field_Information ($ReportID, 'PYMT_DT'      , $PaymentDt_Title,  #DW)
    do Get_Field_Information ($ReportID, 'CAL_RUN_ID'   , $Cal_Run_Title,    #DW)
    do Get_Field_Information ($ReportID, 'EMPLID'       , $EMPLID_Title,     #DW)
    do Get_Field_Information ($ReportID, 'EMPL_RCD'     , $ERCD_Title,       #DW)
    do Get_Field_Information ($ReportID, 'NAME'         , $NAME_Title,       #DW)
    do Get_Field_Information ($ReportID, 'GP_AMT'       , $AMT_Title,        #DW)
    do Get_Field_Information ($ReportID, 'PAYMENT_MTHD' , $Mode_Title,       #DW)
    do Get_Field_Information ($ReportID, 'TOTAL_AMOUNT' , $Total_Amt_Title,  #DW)
    do Get_Field_Information ($ReportID, 'TOTAL_RECORDS', $Total_Recs_Title, #DW)
    do Get_Field_Information ($ReportID, 'NET_PAY_DTL'  , $Net_Pay_Dtl_Title,#DW)
    do Get_Field_Information ($ReportID, 'NET_PAY_SUM'  , $Net_Pay_Sum_Title,#DW)
    do Get_Field_Information ($ReportID, 'GP_PSLP_ID'   , $PaySlip_ID_Title, #DW)
    do Get_Field_Information ($ReportID, 'BANK_CD'      , $Bank_Cd_Title,    #DW)
    do Get_Field_Information ($ReportID, 'ACCOUNT_EC_ID', $AcctEcId_Title,   #DW)
    
    do Get_Field_Information ($ReportID, 'PAYMENT_ID'   , $PYMT_Id_Title,    #DW)
    do Get_Field_Information ($ReportID, 'PAYMENT_NBR'  , $PYMT_Nbr_Title,   #DW)

end-procedure ! Init-Report


!***************************
Begin-Procedure Print-Heading

#Include 'stdhdg01.sqc'

  let $FieldName = 'PAYMENT_MTHD'
  let $FieldValue = $PayMthd
  do Read-Translate-Table

  Let #DL = {Colr} +25
  print  '-'                   (+1,1,#DL)  fill
  print $Cal_Run_Title         (+1,1)
  print ':'                    (0,20)
  print $Cal_Run_ID            (0,23)
  print $Cal_Run_Descr         (0,42)
  print 'Payment Date'         (+1,1)
  print ':'                    (0,20)
  
  print $PMTDt             (0,23)  !edit 'MM/DD/YYYY'
  
  print $Pay_Entity_Title      (+1,1)
  print ':'                    (0,20)
  Print $PayEntity             (0,23)
  print $Pay_Entity_Descr      (0,42)
  print 'Source Bank ID'       (+1,1)
  print ':'                    (0,20)
  Print $Srcbnk                (0,23)  
  print $SrcBankName           (0,42)
  Print 'Payment Method'       (+1,1)
  print ':'                    (0,20)
  Print $PayMethod             (0,23)
  Print $XlatLongName          (0,42)
  
  print  '-'                   (+1,1,#DL)  fill

  Let #LC = 14

  If $ReportLvl = '1' ! Detail Report
     print $EMPLID_Title (+1,{Col2})
     print $ERCD_Title   (0,{Col3})
     print $NAME_Title   (0,{Col4})
     LET #i = {Col5}+5
     print $AMT_Title    (0,#i)
     
     print $PYMT_Id_Title    (0,{Col6})
     print $PYMT_Nbr_Title   (0,{Col7})
     print $PaySlip_ID_Title (0,{Col10})

     if $PayMethod = 'T'
         print $Bank_Cd_Title (0,{Col8})
         print $AcctEcId_Title (0,{Col9})
     end-if
     
     print  '-'          (+1,1,#DL)  fill
     
  end-if

End-Procedure
!
!***********************************************************************
! Get-Parameters                                                    *
!***********************************************************************
begin-procedure Get-Parameters
Begin-SELECT
RC.CAL_RUN_ID
RC.GPUS_RPT_LEVEL
RC.PAYMENT_DT
RC.GPUS_RPT_PYMT_OPT

     Let $Cal_Run_ID = &RC.CAL_RUN_ID
     Let $PaymentDt  = &RC.PAYMENT_DT
     Do Format-DateTime($PaymentDt, $Paydate, {DEFDATE}, '', '')
     let $ReportLvl  = &RC.GPUS_RPT_LEVEL
     Let $PymtOpt    = &RC.GPUS_RPT_PYMT_OPT
     
         !Show 'Get-Parameters $ReportLvl = '  $ReportLvl
         !Show 'Get-Parameters $Paydate = ' $Paydate
         !Show 'Get-Parameters $PaymentDt = '  $PaymentDt
         !Show 'Get-Parameters $Cal_Run_ID = ' $Cal_Run_ID
         !Show 'Get-Parameters $PymtOpt = '  $PymtOpt

     if Rtrim($Paydate,' ') <> ''

       Let $Pdate = 'AND G.PYMT_DT = ''' || $PaymentDt || ''''
     else
        Let $Pdate = ''
     end-if

             Evaluate &RC.GPUS_RPT_PYMT_OPT
             
                   When = '1' !-- ALL
                      Let $PymtOpt = 'AND G.PAYMENT_MTHD1 IN (''T'', ''W'', ''C'', ''A'', ''P'')'
                      Break

                   When = '2' !-- CHECK
                      Let $PymtOpt = 'AND G.PAYMENT_MTHD1 IN (''C'')'
                      Break

                   When = '3' !-- PRENOTE
                      Let $PymtOpt = 'AND G.PYMT_ID IN (''PRENOT'')'
                      Break

                   When = '4' !-- TRANSFER
                      Let $PymtOpt = 'AND G.PAYMENT_MTHD1 IN (''T'') AND G.PYMT_ID <> ''PRENOT'''
                      Break

                   When = '5' !-- TRANSFER and PRENOTE
                      Let $PymtOpt = 'AND G.PAYMENT_MTHD1 IN (''T'')' 
                      Break
                      
             End-Evaluate
             

             !Let $FromList = 'PS_GP_CAL_RUN_DTL A,PS_GP_PAYMENT B,PS_GP_CAL_RUN CR,PS_GP_PYENT PE,PS_GP_CALENDAR P,PS_GP_PYMT_BNK_TBL G'
             Let $FromList = 'PS_GP_PAYMENT B, PS_GP_PYENT PE, PS_GP_PYMT_BNK_TBL G'

             Do Get-ParametersI
             Do Get-ParametersII

  FROM PS_GPUS_BNK_RC1 RC
    WHERE RC.OPRID         = $PRCS_OPRID
        AND RC.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SELECT

end-procedure ! Get-Parameters

!***********************************************************************
! Get-Parameters I                                                   *
!***********************************************************************

begin-procedure Get-ParametersI  !If user enters PayEntity know it's value

! Handle multiple Pay Entities from Run Control Page XZ - 01/26/05
Let $Pyent1 = ''
Let $PyentHeader = 'AND RC2.OPRID = ''' || $PRCS_OPRID || ''' AND RC2.RUN_CNTL_ID = ''' || $PRCS_RUN_CNTL_ID || ''' AND B.PAY_ENTITY IN ('
Let $PyentTailer = ')'
    
Begin-SELECT
DISTINCT RC2.PAY_ENTITY &Pyent0

        Let $Pyent0 = &Pyent0
        Let $Pyent0 = Rtrim($Pyent0, ' ')
        Let $Pyent1 = $Pyent1 || '''' || $Pyent0 || '''' || ','

FROM PS_GPUS_BNK_RC2 RC2
WHERE RC2.OPRID       = $PRCS_OPRID
  AND RC2.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SELECT

if $Pyent1 <> ''
    Let #PynetLength = length(RTrim($Pyent1, ' ')) - 1
    Let $Pyent1 = substr($Pyent1, 1, #PynetLength) ! Get rid of last ','                      
    Let $FromList = $FromList || ',PS_GPUS_BNK_RC2 RC2'
    Let $Pyent1 = $PyentHeader || $Pyent1 || $PyentTailer
end-if
    
end-procedure ! Get-ParametersI

!***********************************************************************
! Get-Parameters       II                                             *
!***********************************************************************

begin-procedure Get-ParametersII  !If user enters SourceBank know it's value

! Handle multiple Source Banks from Run Control Page XZ - 01/26/05
Let $SrcBnk1 = ''
Let $SrcHeader = 'AND RC3.OPRID = ''' || $PRCS_OPRID || ''' AND RC3.RUN_CNTL_ID = ''' || $PRCS_RUN_CNTL_ID || ''' AND B.SRC_BANK_ID IN ('
Let $SrcTailer = ')'
    
Begin-SELECT
DISTINCT RC3.SRC_BANK_ID &SrcBnk0

        Let $SrcBnk0 = &SrcBnk0
        Let $SrcBnk0 = Rtrim($SrcBnk0, ' ')
        Let $SrcBnk1 = $SrcBnk1 || '''' || $SrcBnk0 || '''' || ','

FROM PS_GPUS_BNK_RC3 RC3
WHERE RC3.OPRID       = $PRCS_OPRID
  AND RC3.RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
End-SELECT

if $SrcBnk1 <> ''
    Let #SrcLength = length(RTrim($SrcBnk1, ' ')) - 1
    Let $SrcBnk1   = substr($SrcBnk1, 1, #SrcLength) ! Get rid of last ','                      
    Let $FromList  = $FromList || ',PS_GPUS_BNK_RC3 RC3'
    Let $SrcBnk1   = $SrcHeader || $SrcBnk1 || $SrcTailer
end-if

end-procedure ! Get-ParametersII

!
!***********************************************************************
! Process-PE                                                           *
!***********************************************************************
 begin-procedure Process-PE
 
   Let #PageNo = 1
   
   !show 'Process-PE $FromList=' $FromList
   !show 'Process-PE $PymtOpt =' $PymtOpt
   !show 'Process-PE $Pyent1  =' $Pyent1
   !show 'Process-PE $SrcBnk1 =' $SrcBnk1
   !show 'Process-PE $Pdate   =' $Pdate

BEGIN-SELECT DISTINCT
B.CAL_RUN_ID
B.PAY_ENTITY
PE.DESCR
G.PAYMENT_MTHD1
B.SRC_BANK_ID
G.PYMT_DT
B.DEBIT_DT

   DO Get-CalRun-DescrI

   Let $Pay_Entity_Descr = &PE.DESCR
   Let $PayEntity        = &B.PAY_ENTITY
   Let $PayMethod        = &G.PAYMENT_MTHD1  
   Let $Srcbnk           = &B.SRC_BANK_ID
   Let $Payment_Dt       = &G.PYMT_DT
   
   DO Format-DateTime($Payment_Dt, $PMTDt, {DEFDATE},'','')

   IF $ReportLvl = '1' ! Detail Report
      Let $ReportTitle = $Net_Pay_Dtl_Title
      Let $Print = 'Y'
      Do Detail-Report
   Else
      Let $Print = 'N'
      Let $ReportTitle = $Net_Pay_Sum_Title
      
      Do Detail-Report
      
      if #PageNo > 1
         new-page
      end-if
      
      DO Get-PaySlip-ID
         
      Do Print-Heading
      Add 1 to #PageNo
   End-if

   Let #LC = #LC + 4
   Print $Total_Amt_Title   (+2,50)
   Print #PAmount           (0,{Col5})     edit '999999999.99'
   Print $Total_Recs_Title  (+2,50)
   Print #TotRows           (0,{Col5})     edit '99999999'

   FROM [$FromList] 
   
   WHERE B.CAL_RUN_ID      = $Cal_Run_ID
     AND B.CAL_RUN_ID      = G.CAL_RUN_ID
     AND B.PAY_ENTITY      = PE.PAY_ENTITY
     AND B.CAL_RUN_ID      = G.CAL_RUN_ID
     AND B.EMPLID          = G.EMPLID
     AND B.EMPL_RCD        = G.EMPL_RCD
     AND B.GP_PAYGROUP     = G.GP_PAYGROUP
     AND B.CAL_ID          = G.CAL_ID
     AND B.ORIG_CAL_RUN_ID = G.ORIG_CAL_RUN_ID
     AND B.RSLT_SEG_NUM    = G.RSLT_SEG_NUM
     AND B.PIN_NUM         = G.PIN_NUM
     AND B.INSTANCE        = G.INSTANCE
     [$PymtOpt] 
     [$Pyent1]
     [$SrcBnk1]
     [$Pdate]
     
    ORDER BY B.SRC_BANK_ID

End-SELECT
End-Procedure ! Process-PE
!
!***********************************************************************
! Detail-Report                                                        *
!***********************************************************************
begin-procedure Detail-Report

Let #TotRows = 0
Let #PAmount = 0
Let #LC = 65

DO Get-SRCBank-Name

BEGIN-SELECT
G.GP_PMT_AMT  &Amount
B.EMPLID
B.EMPL_RCD
B.PAYMENT_MTHD
B.INSTANCE
B.PYMT_ID
B.PYMT_NBR
G.PYMT_DT    &Pmt_date0

    Let $Emplid   = &B.EMPLID
    Let $EmplRcd  = &B.EMPL_RCD
    Let $PayMthd  = &B.PAYMENT_MTHD
    Let #Amount   = &Amount
    Let #Instance = &B.INSTANCE
    Let $PmtID    = &B.PYMT_ID
    Let $PmtNbr   = &B.PYMT_NBR

   If $Print =  'Y'
          if $FieldValue <> $PayMthd
             let $FieldName = 'PAYMENT_MTHD'
             let $FieldValue = $PayMthd
             do Read-Translate-Table
          end-if

          DO Get-Name
          DO Get-PaySlip-ID 

          If $PayMethod = 'T'
              Do Get-Bank-Acct
          End-If

          Do Print-Values
    end-if

    Add 1 to #TotRows
    Add #Amount to #PAmount

 FROM PS_GP_PYMT_BNK_TBL G, PS_GP_PAYMENT B
 WHERE B.CAL_RUN_ID      = G.CAL_RUN_ID
   AND B.EMPLID          = G.EMPLID
   AND B.EMPL_RCD        = G.EMPL_RCD
   AND B.GP_PAYGROUP     = G.GP_PAYGROUP
   AND B.CAL_ID          = G.CAL_ID
   AND B.ORIG_CAL_RUN_ID = G.ORIG_CAL_RUN_ID
   AND B.RSLT_SEG_NUM    = G.RSLT_SEG_NUM
   AND B.PIN_NUM         = G.PIN_NUM
   AND B.INSTANCE        = G.INSTANCE
   AND B.RECIPIENT_TAG   = G.RECIPIENT_TAG
   AND G.EMPLID NOT IN ( SELECT PP.EMPLID FROM PS_GP_PAYMENT PP WHERE PP.CAL_RUN_ID = $Cal_Run_ID AND PP.PMT_TYPE='01' AND PP.PMT_STATUS='V' )
   AND B.PMT_TYPE        = '01'
   AND B.CAL_RUN_ID      = $Cal_Run_ID
   AND G.PAYMENT_MTHD1   = $PayMethod
   AND B.PAY_ENTITY      = $PayEntity
   AND B.SRC_BANK_ID     = $Srcbnk
   
   AND G.PYMT_DT         = $Payment_Dt ! XD 01/31/05
   
   AND G.RECON_STAT <> '12'
   [$PymtOpt]
  GROUP BY B.EMPLID,B.EMPL_RCD,G.PYMT_DT,G.GP_PMT_AMT,B.PAYMENT_MTHD,B.INSTANCE,B.PYMT_NBR,B.PYMT_ID
  ORDER BY B.EMPLID,B.EMPL_RCD,G.PYMT_DT,G.GP_PMT_AMT,B.PAYMENT_MTHD,B.INSTANCE,B.PYMT_NBR,B.PYMT_ID
     
END-SELECT
end-procedure ! Process-Main

!
!***********************************************************************
! Get-SRCBank-Name
!***********************************************************************
Begin-Procedure Get-SRCBank-Name
Begin-SELECT
A.BANK_NM
     Let $SrcBankName = &A.BANK_NM
FROM PS_GPUS_SRCBANK_VW A
WHERE A.SRC_BANK_ID = $Srcbnk
End-SELECT
End-Procedure

!
!***********************************************************************
! Get-CalRun-DescrI
!***********************************************************************
Begin-Procedure Get-CalRun-DescrI
Begin-SELECT
AA.DESCR

     Move ' '  To $Cal_Run_Descr
     Let $Cal_Run_Descr = &AA.DESCR

FROM PS_GP_CAL_RUN AA
WHERE AA.CAL_RUN_ID = $Cal_Run_ID

End-SELECT

End-Procedure
!
!
!***********************************************************************
! Get-Name
!***********************************************************************
Begin-Procedure Get-Name
Begin-SELECT
A.NAME
       Let $Name = &A.NAME
FROM PS_NAMES A
WHERE A.EMPLID = $Emplid
  AND A.NAME_TYPE = 'PRI'
End-SELECT
End-Procedure
!
!***********************************************************************
! Get-Slip-ID
!***********************************************************************
Begin-Procedure Get-PaySlip-ID
Begin-SELECT
A.GP_PSLP_ID
A.EMPLID

     Move ' '  To $PaySlip-ID
     Let $PaySlipID = &A.GP_PSLP_ID

FROM PS_GP_PSLP_GDE A
WHERE A.EMPLID       = $Emplid
    AND A.CAL_RUN_ID = $Cal_Run_ID
End-SELECT
End-Procedure
!
!***********************************************************************
! Get-Bank-Acct
!***********************************************************************
Begin-Procedure Get-Bank-Acct
Begin-SELECT
A.BANK_CD
A.ACCOUNT_EC_ID
     Let $BankCd = &A.BANK_CD
     Let $AccountEcId = &A.ACCOUNT_EC_ID

   FROM PS_PYE_BANKACCT A
   WHERE A.EMPLID     = $Emplid
     AND A.ACCOUNT_ID = #Instance
End-SELECT
End-Procedure
!
!***********************************************************************
! Print-Values
!***********************************************************************
Begin-procedure Print-Values
   if #LC > 50
      if #PageNo > 1
         new-page
      end-if
      Do Print-Heading
      Add 1 to #PageNo
   End-if

   Print $Emplid   (#LC,{Col2})
   Print $EmplRcd  (#LC,{Col3})     edit '99999'
   Print $Name     (#LC,{Col4})
   Print #Amount   (#LC,{Col5})     edit '999999999.99'

   Print $PmtID    (#LC,{Col6})
   Print $PmtNbr   (#LC,{Col7})     edit '9999'
   
   Print $PaySlipID  (#LC,{Col10})


   if $PayMethod = 'T'

        Print $BankCd      (#LC,{Col8})
        
        let #acct_length = length($AccountEcId)
        if #acct_length > 17 
          let $AccountEcId = substr($AccountEcId, 1, 17)
        end-if
        
        Print $AccountEcId (#LC,{Col9}) edit xxxxxxxxxxxxxxxxx

   end-if

   Let #LC = #LC + 1
End-Procedure
!
!***********************************************************************
! Delete-RunControl                                                    *
!***********************************************************************
begin-procedure Delete-RunControl

begin-SQL
DELETE FROM PS_GPUS_BNK_RC1
    WHERE OPRID         = $PRCS_OPRID
        AND RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
end-SQL

begin-SQL
DELETE FROM PS_GPUS_BNK_RC2
    WHERE OPRID         = $PRCS_OPRID
        AND RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
end-SQL

begin-SQL
DELETE FROM PS_GPUS_BNK_RC3
    WHERE OPRID         = $PRCS_OPRID
        AND RUN_CNTL_ID = $PRCS_RUN_CNTL_ID
end-SQL

end-procedure ! Delete-RunControl
!
#include 'datemath.sqc'     ! Date conversion procedures
#include 'sqrtrans.sqc'     ! Translate SQR strings to given language
#include 'prcslng.sqc'      ! Replaces getrplng.sqc
#include 'readxlat.sqc'     ! Procedure to read values from xlattable
#include 'reset.sqc'        ! Reset printer procedure
#include 'stdapi.sqc'       ! routines for process scheduler manipulation.

