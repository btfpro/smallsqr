!***********************************************************************
!  Family Medical Leave Act Non-Paid Limit Report                      *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!          $Date:  2006/07/20:03:53:58                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup01.sqc'   !Printer and page-size initialization

#define col_sep                  1   !Column Separator
#define col_empl_name           25   !Employee Name
#define col_national_id         11   !National ID
#define col_begin_dt            10   !Begin Date
#define col_end_dt              10   !End Date
#define col_hrs_taken           11   !Hours Taken

!***********************************************************************
!  FGPY027:  Begin Report                                              *
!***********************************************************************
begin-report

  do Init-Report
  do Get-Run-Year
  do Process-Main
  do Stdapi-Term

end-report
!***********************************************************************
!  Init Report Procedure:  Do Report Time and others for the heading   *
!***********************************************************************
begin-procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init
  let $ReportID = 'FGPY027' 
  let $ReportTitle  = 'Family Medical Leave Act Non-Paid Limit Report'
  let $first_page = 'Y'
  display  'Report ID: ' noline
  display $ReportTitle

end-procedure
!***********************************************************************
!  Heading:  Do Report Heading for Each New Page or New Company        *
!***********************************************************************
begin-heading 8

#Include 'stdhdgtr.sqc'

   DO COMPANY-NAME

   print 'Year Reported: ' (+2, 1)
   print $REPORTING-YEAR (0,22,10)

!Column Heading line 1
  print 'Employee Name'      (+2,1,{col_empl_name})
  print 'National ID'        (0,+{col_sep},{col_national_id})
  print 'Begin Date'         (0,+{col_sep},{col_begin_dt})
  print 'End Date'           (0,+{col_sep},{col_end_dt})
  print 'Hours Taken'        (0,+{col_sep},{col_hrs_taken})

!Column Heading line 2
  print '='                 (+1,1,{col_empl_name})               Fill
  print '='                 (0,+{col_sep},{col_national_id})     Fill
  print '='                 (0,+{col_sep},{col_begin_dt})        Fill
  print '='                 (0,+{col_sep},{col_end_dt})          Fill
  print '='                 (0,+{col_sep},{col_hrs_taken})       Fill
 
   move &a.company to $company

end-heading
!***********************************************************************
!  Get Run Year Procedure:  Get Report Year from Run Control Panel or  *
!                          from user input                             *
!***********************************************************************
begin-procedure Get-Run-Year

  if $Prcs_Process_Instance = ''
    do Process-Run-Year
  else
    do Select-Parameters
  end-if

  LET $YEAR-START = $REPORTING-YEAR
  LET $YEAR-END = $REPORTING-YEAR
  CONCAT '-01-01' WITH $YEAR-START
  CONCAT '-12-31' WITH $YEAR-END
  DO Convert-From-DTU-Date($YEAR-START,$SQL-YEAR-START)
  DO Convert-From-DTU-Date($YEAR-END,$SQL-YEAR-END)
  show 'Reporting Year ' $SQL-YEAR-START ' ' $SQL-YEAR-END

end-procedure
!***********************************************************************
!  Process Run Year Procedure:  Get Report Year from User Input        *
!***********************************************************************
begin-procedure Process-Run-Year

  move 0 to #Found
  while #Found = 0
    input $REPORTING-YEAR 'Enter Reporting Year'
    if $REPORTING-YEAR = ''
      stop
    else
      move 1 to #Found
    end-if
  end-while

end-procedure
!***********************************************************************
!  Main Procedure:  Read Data from Database tables and call print      *
!                   detail for each leave request of each employee.    *
!***********************************************************************
begin-procedure Process-Main

  LET #AGENCY_HRS = 0

begin-SELECT
A.COMPANY () ON-BREAK Print = Never Before = Create_new_page 
                                    After = Agency_Totals
                                    SAVE = $PREV_COMP 
A.EMPLID,
A.DEPTID, 
A.GVT_SUB_AGENCY, 
B.NAME, 
C.NATIONAL_ID,
D.BEGIN_DT,
D.FMLA_YEAR_BEGIN_DT,
D.FMLA_REQUEST_ID

  do Print-Detail

FROM PS_GVT_JOB       A,
     PS_GVT_PERS_DATA B, 
     PS_GVT_PERS_NID  C,
     PS_FMLA_LV_REQUEST D

WHERE A.EMPLID    = B.EMPLID 
  AND A.EMPL_RCD = B.EMPL_RCD
  AND A.EFFDT     = B.EFFDT
  AND A.EFFSEQ    = B.EFFSEQ 
  AND A.EMPLID    = C.EMPLID
  AND A.EMPL_RCD = C.EMPL_RCD
  AND A.EFFDT     = C.EFFDT
  AND A.EFFSEQ    = C.EFFSEQ
  AND A.EMPLID = D.EMPLID
  AND D.RETURN_DT >= $SQL-YEAR-START
  AND D.BEGIN_DT <= $SQL-YEAR-END

  AND A.EFFDT =
       (SELECT MAX(EFFDT)
        FROM   PS_GVT_JOB
        WHERE  EMPLID  = A.EMPLID)        
  AND  A.EFFSEQ =
       (SELECT MAX(EFFSEQ)
        FROM   PS_GVT_JOB
        WHERE  EMPLID  = A.EMPLID
          AND  EFFDT = A.EFFDT)
  AND  A.EMPL_RCD =
       (SELECT MAX(EMPL_RCD)
        FROM   PS_GVT_JOB
        WHERE  EMPLID  = A.EMPLID
         AND  EFFDT = A.EFFDT)
  AND  D.FMLA_REQUEST_ID =
       (SELECT MAX(FMLA_REQUEST_ID)
        FROM   PS_FMLA_LV_REQUEST 
        WHERE  EMPLID = A.EMPLID
          AND  FMLA_LV_APPROVED = 'A'
          AND  RETURN_DT >= $SQL-YEAR-START
          AND  BEGIN_DT <= $SQL-YEAR-END)

 ORDER BY A.COMPANY,
          A.DEPTID, 
          A.GVT_SUB_AGENCY, 
          A.EMPLID,
          D.BEGIN_DT

end-SELECT

end-procedure
!***********************************************************************
!  Print Detail Procedure:  Write each leave request for each employee *
!***********************************************************************
begin-procedure Print-Detail

  LET #FMLA_NON_PD = 0

  DO Convert-TO-DTU-Date(&D.FMLA_YEAR_BEGIN_DT,$FMLA-YEAR-START)
  DO DTU-ADD-YEARS($FMLA-YEAR-START,1,$TEMP-YEAR-END)
  DO DTU-SUBTRACT-DAYS($TEMP-YEAR-END,1,$FMLA-YEAR-END)
  DO Convert-From-DTU-Date($FMLA-YEAR-START,$SQL-FMLA-YEAR-START)
  DO Convert-From-DTU-Date($FMLA-YEAR-END,$SQL-FMLA-YEAR-END)

begin-SELECT
F.SERVICE_HRS

     ADD &F.SERVICE_HRS TO #FMLA_NON_PD

  #ifdef debugx
     SHOW &A.EMPLID ' ' #FMLA_NON_PD
  #endif

FROM PS_GVT_ACCR_LDGR F,
     PS_GVT_ERN_ACR_CLS G,
     PS_EARNINGS_TBL H

WHERE F.EMPLID = &A.EMPLID
  AND G.GVT_EARN_TYPE = 'FM'
  AND H.GVT_FMLA = 'Y'
  AND H.FACTOR_MULT = 0 
  AND F.GVT_ERN_ACCR_CLASS = G.GVT_ERN_ACCR_CLASS
  AND F.ERNCD = H.ERNCD
  AND F.EFFDT >= $SQL-FMLA-YEAR-START
  AND F.EFFDT <= $SQL-FMLA-YEAR-END 

  AND H.EFFDT =
       (SELECT MAX(EFFDT)
        FROM   PS_EARNINGS_TBL
       WHERE  ERNCD  = H.ERNCD)

end-SELECT

     IF #FMLA_NON_PD > 480
        LET #AGENCY_TOTAL = #AGENCY_TOTAL + #FMLA_NON_PD
        print &B.NAME               (+1,1,{col_empl_name})
        print &C.NATIONAL_ID        (0,+2,{col_national_id})
        print $FMLA-YEAR-START      (0,+0,{col_begin_dt})
        print $FMLA-YEAR-END        (0,+{col_sep},{col_end_dt})
        print #FMLA_NON_PD          (0,+2,{col_hrs_taken}) edit 9999999.99
     END-IF
     
end-procedure
!***********************************************************************
!  Company Name Procedure:  Using Company Id to get Comapny Name       *
!***********************************************************************
begin-procedure Company-Name

Begin-Select
D.DESCR
  print 'Agency: '          (4,1)
  print $Company            (0,13)
  print &D.DESCR            (0,17)

FROM PS_COMPANY_TBL D
WHERE D.COMPANY   = $Company
  AND D.EFFDT =
       (SELECT MAX(EFFDT)
        FROM   PS_COMPANY_TBL
        WHERE  COMPANY  = D.COMPANY)
end-SELECT

end-procedure
!***********************************************************************
!  Agency Total Procedure:  Write accumulated total for each agency    *
!***********************************************************************
begin-procedure Agency_Totals

   move $PREV_COMP to $Company
   print 'Agency: '       (+3,1)
   print $PREV_COMP       (0,13)
   print 'Total'          (0,18)
   print #AGENCY_TOTAL    (0,58,) edit 999,999,999.99

   LET #AGENCY_TOTAL = 0
   
end-procedure
!***********************************************************************
!  Create New Page Procedure: Create new page for each company (agency)*
!***********************************************************************
begin-procedure Create_new_page

  if $first_page = 'Y'
     move &A.COMPANY to $Company
     let $first_page = 'N'
  else
     New-Page
  end-if

end-procedure
!***********************************************************************
!  The following are include sqc files                                 *
!***********************************************************************
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'fgfmla.sqc'    !Select Run Contrl Parameters
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'datemath.sqc'  !Do date manipulation
!*---------------------------------------------------------------------*
