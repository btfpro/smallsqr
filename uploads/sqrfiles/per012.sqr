!******************************************
!  PER012:  Departmental Salaries         *
!******************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/09/06:00:54:54                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689848                                              !
!                                                                      *
!***********************************************************************
! Implements row-level security via PS_FAST_SQR_SEC_VW in hrsecty.sqc  *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
!***********************************************************************
#include 'setenv.sqc'    !Set environment
begin-setup
  #Include 'ptset02.sqc'   !Printer and page-size initialization
end-setup

#define EMPLOYEES
#include "rellang.sqc"

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  let $curr_recalc = 'N'
  if $prcs_oprid=''
    goto last2
  end-if

  if $language_cd = 'JPN'
    let $qualifier = 'NAME_AC'
  else
    let $qualifier = 'NAME'
  end-if

  do Process-Main

  if $curr_recalc = 'Y'
     do Print-Footing
  end-if
  do Reset
  do Stdapi-Term
last2:
end-report

begin-heading 7
  #Include 'stdhdgtr.sqc'

PRINT   $BUS_UNIT1X     (+2,1,52)
PRINT   $HIRE1          (0,60,9)
PRINT   $EMP1           (0,71,3)
PRINT   $FULL1          (0,75,4)
PRINT   $REG1           (0,81,3)
PRINT   $JOB1           (0,86,21)
PRINT   $PAY1           (0,106,3)
PRINT   $GRADE1         (0,111,7)
PRINT   $CUR1           (0,119)
  if #MultiCurr
PRINT   $CUR1           (0,119,6)
  end-if
PRINT   $PAYRT          (0,125)

PRINT   $BUS_UNIT2      (+1,1,5)
PRINT   $NAME1          (0,7,34)
PRINT   $EMPLID1        (0,42,11)
PRINT   $RCD            (0,55,4)
PRINT   $HIRE2          (0,60,9)
PRINT   $EMP2           (0,71,3)
PRINT   $FULL2          (0,75,4)
PRINT   $REG2           (0,81,3)
print   $JOB2           (0,86,6)
PRINT   $JOBTITLE       (0,93,10)
PRINT   $PAY2           (0,106,3)
PRINT   $GRADE2         (0,111)

   if #MultiCurr
PRINT   $CUR2           (0,119,11)
  end-if

PRINT   $HOUR           (0,131,15)
PRINT   $DAY            (0,146,12)
PRINT   $MONTH          (0,160,15)
PRINT   $ANNUAL         (0,172)
end-heading

!--------------------------
begin-procedure Init-Report

  move 'PER012' to $ReportID
  do Init-Array

  do Stdapi-Init

  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  if $prcs_process_instance = ''
    !No Prompt
  else
    do Select-Parameters
  end-if
  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')
last1:
end-procedure

begin-procedure Get-Values
let $language_cd = $prcs_language_cd
end-procedure

begin-procedure Init-Array
  create-array name=Totals size=2 field=total:number:9 field=label:char:9 -
    field=row:number:9 field=col:number:9
  put 'Employees'   1  1 into Totals(0) label(0)  row(0)  col(0)
  put 'Salaried'    1 28 into Totals(0) label(1)  row(1)  col(1)
  put 'Exc. Hourly' 2 28 into Totals(0) label(2)  row(2)  col(2)
  put 'Hourly'      3 28 into Totals(0) label(3)  row(3)  col(3)
  put 'Full-time'   1 57 into Totals(0) label(4)  row(4)  col(4)
  put 'Part-time'   2 57 into Totals(0) label(5)  row(5)  col(5)
  put 'On-Demand'   3 57 into Totals(0) label(6)  row(6)  col(6)
  put 'Regular'     1 84 into Totals(0) label(7)  row(7)  col(7)
  put 'Temporary'   2 84 into Totals(0) label(8)  row(8)  col(8)
end-procedure Init-Report

!*******************************
begin-procedure Process-Main
!*******************************

!Setup for row-level security...
let $_TableAlias = 'EE'
do Security-Param

do Get-Labels

begin-SELECT DISTINCT
  LET $BU = RTRIM(&EE.BUSINESS_UNIT,' ')
EE.DEPTID              () on-break print=never procedure=Dept-Change
EE.DEPTNAME
EE.MANAGER_ID
  if $firstRec <> 'N'
    do Initialize-Subheading
    move 'N' to $firstRec
  end-if
EE.BUSINESS_UNIT       (+1, 1,5)
     
EE.EFFDT
EE.EFFSEQ
EE.NID_COUNTRY
EE.NATIONAL_ID_TYPE

EE.NAME                (0,7,34)
EE.NAME_AC
EE.EMPLID              (0,42,11)
EE.EMPL_RCD            (0,55,4)

EE.HIRE_DT             &HIRE_DT
  do Format-DateTime(&HIRE_DT, $out, {DEFDATE}, '', '')
  print $out           (0,60,10)

EE.EMPL_TYPE           (0,72,3)
EE.FULL_PART_TIME      (0,76,4)
EE.REG_TEMP            (0,82,2)
EE.JOBCODE             (0,86,6)
EE.JOBTITLE_ABBRV       &EMPLOYEES-JOBTITLE_ABBRV
 

  let $EMPLOYEES-JOBTITLE_ABBRV = &EMPLOYEES-JOBTITLE_ABBRV


  PRINT $EMPLOYEES-JOBTITLE_ABBRV (0,93,10)

EE.COMPANY
EE.PAYGROUP            (0,106,3)
EE.SAL_ADMIN_PLAN      (0,111) EDIT XXX/
EE.GRADE               ()

EE.GP_PAYGROUP
EE.COMP_FREQUENCY
EE.STD_HOURS
EE.STD_HRS_FREQUENCY
EE.REG_REGION
RR.COUNTRY
EE.PAID_HOURS
EE.PAID_HRS_FREQUENCY
EE.FTE
  if &RR.COUNTRY =          'FRA'
     let #job_hours =       &EE.PAID_HOURS
     let $job_hrs_freq =    &EE.PAID_HRS_FREQUENCY
  else
     let #job_hours =       &EE.STD_HOURS
     let $job_hrs_freq =    &EE.STD_HRS_FREQUENCY
  end-if
EE.PAY_SYSTEM_FLG
EE.CURRENCY_CD       &CURIN
  if #MultiCurr
     print &CURIN  (0,119,2)
  end-if
  do Recalc-Job-Comprate(&EE.EMPLID,&EE.EMPL_RCD,&EE.EFFDT,&EE.EFFSEQ,&CURIN,
                         &EE.COMP_FREQUENCY,#job_hours,$job_hrs_freq,
                         &EE.FTE,$AsOfToday,#job_comprate,$diff_curr)
  if $diff_curr = 'Y'
     let $curr_recalc = 'Y'
     print '*'      (0,123,1)
  else
     print ' '      (0,123,1)
  end-if
EE.HOURLY_RT         &HOURLY_RT
  if $diff_curr = 'N'
     do Format-Number(&HOURLY_RT, $out, '999999.999999')
  else
     do Det-Hourly-Rt(&EE.EFFDT,#job_comprate,&EE.COMP_FREQUENCY,#job_hours,
                      $job_hrs_freq,#job_hourly_rt)
     do Format-Number(#job_hourly_rt, $out, '999999.999999')
  end-if
  print $out        (0,125,13)
EE.DAILY_RT         &DAILY_RT
  if $diff_curr = 'N'
     do Format-Number(&DAILY_RT, $out, '9999999999.999')
  else
     if &EE.PAY_SYSTEM_FLG = 'NA'
        if &EE.COMP_FREQUENCY = 'C'
           do Get-Paygroup-Freq-Cnt(&EE.EMPLID,&EE.EMPL_RCD,$AsOfToday,$freq_id_monthly,
                                $freq_id_daily)
        else
           do Get-Paygroup-Freq-NA(&EE.COMPANY,&EE.PAYGROUP,$AsOfToday,$freq_id_monthly,
                                $freq_id_daily)
        end-if
     else
        if &EE.PAY_SYSTEM_FLG = 'GP'
           do Get-Paygroup-Freq-Global(&EE.GP_PAYGROUP,$AsOfToday,$freq_id_monthly,
                                       $freq_id_daily)
        else
           let $freq_id_monthly = 'M'
           let $freq_id_daily = 'D'
        end-if
     end-if
     do Det-Daily-Rt(&EE.EFFDT,#job_comprate,&EE.COMP_FREQUENCY,$freq_id_daily,#job_hours,
                     $job_hrs_freq,#job_daily_rt)
     do Format-Number(#job_daily_rt, $out, '9999999999.999')
  end-if
  print $out        (0,139,14)
EE.MONTHLY_RT      &MONTHLY_RT
  if $diff_curr = 'N'
     do Format-Number(&MONTHLY_RT, $out, '9999999999.999')
  else
     do Det-Monthly-Rt(&EE.EFFDT,#job_comprate,&EE.COMP_FREQUENCY,$freq_id_monthly,#job_hours,
                       $job_hrs_freq,#job_monthly_rt)
     do Format-Number(#job_monthly_rt, $out, '9999999999.999')
  end-if
  print $out        (0,153,14)
EE.ANNUAL_RT      &ANNUAL_RT
  if $diff_curr = 'N'
     do Format-Number(&ANNUAL_RT, $out, '9999999999.999')
  else
     do Det-Annual-Rt(&EE.EFFDT,#job_comprate,&EE.COMP_FREQUENCY,#job_hours,
                      $job_hrs_freq,#job_annual_rt)
     do Format-Number(#job_annual_rt, $out, '9999999999.999')
  end-if
  print $out        (0,166,14)
EE.SUPERVISOR_ID     &SUPERVISOR_ID
EE.REPORTS_TO        &REPORTS_TO
EE.ASOFDATE
  if (rtrim(&REPORTS_TO,' ') <> '')
    move &REPORTS_TO to $Supervisor_Pos
    do Get-Incumbent-Name
  else
    move &SUPERVISOR_ID to $EmplID
    do Get-Employee-Name
  end-if
 ! print $Name       (0,161,16)
  ARRAY-ADD 1 to TOTALS(0) TOTAL(0)  !Employee count
  evaluate &EE.EMPL_TYPE
    when = 'S'  !Salaried
      ARRAY-ADD 1 to TOTALS(0) TOTAL(1)
    when = 'E'  !Exception Hourly
      ARRAY-ADD 1 to TOTALS(0) TOTAL(2)
    when = 'H'  !Hourly
      ARRAY-ADD 1 to TOTALS(0) TOTAL(3)
  end-evaluate

  evaluate &EE.FULL_PART_TIME
    when = 'F'  !Full-time
      ARRAY-ADD 1 to TOTALS(0) TOTAL(4)
    when = 'P'  !Part-time
      ARRAY-ADD 1 to TOTALS(0) TOTAL(5)
    when = 'D'  !On-Demand
      ARRAY-ADD 1 to Totals(0) TOTAL(6)
  end-evaluate

  evaluate &EE.REG_TEMP
    when = 'R'  !Regular
      ARRAY-ADD 1 to TOTALS(0) TOTAL(7)
    when = 'T'  !Temporary
      ARRAY-ADD 1 to TOTALS(0) TOTAL(8)
  end-evaluate

  if #current-line >= 58
    NEW-PAGE
    do Print-Subheading
  end-if
FROM  PS_EMPLOYEES EE
     ,PS_REG_REGION_TBL RR

WHERE EE.REG_REGION = RR.REG_REGION
[$SecurityClauseWithERN]

ORDER BY EE.DEPTID,EE.BUSINESS_UNIT ,EE.[$qualifier],EE.EMPLID
end-SELECT

  do Print-Employee-Counts
  if #current-line >= 51
    new-page
  end-if
  print $GRDTOTAL (+4,1)
  move 1 to #j
  do Print-Employee-Counts

end-procedure Process-Main

!---------------------------
begin-procedure Dept-Change
  do Print-Employee-Counts
  if #current-line >= 51  !ensure a minimum of 2 employees is listed
    new-page
  else
    position (+3)
  end-if
  do Initialize-Subheading
end-procedure Dept-Change

!------------------------------------
begin-procedure Print-Employee-Counts
  if #current-line >= 52  !ensure all totals on same page
    new-page
    do Print-Subheading
  end-if
  position (+1)  !skip a line before the totals
  move #current-line to #saveline
  subtract 7 from #saveline  !number of heading lines
  move 0 to #i
  while #i <= 8
    get #row #col $label from Totals(0)  row(#i) col(#i) label(#i)
    get #total           from Totals(#j) total(#i)
    add #saveline to #row
    do Format-Number(#total, $out, '999,999')
    print $out (#row,#col)
    print $label (0,+1)
    array-add #total to Totals(1) total(#i)
    put 0 into          Totals(0) total(#i)
    add 1 to #i
  end-while
end-procedure Print-Employee-Counts

!----------------------------------
begin-procedure Get-Incumbent-Name
begin-select
J1.POSITION_NBR,
J1.EMPLID,
PD1.NAME
  move &PD1.name to $name
FROM PS_JOB J1, PS_PERSON_NAME PD1
WHERE J1.EMPLID = PD1.EMPLID
AND J1.HR_STATUS = 'A'
AND J1.POSITION_NBR = $Supervisor_pos
AND J1.EFFDT = (SELECT MAX(J2.EFFDT)
                  FROM PS_JOB J2
                 WHERE J2.EMPLID = J1.EMPLID
                   AND J2.EMPL_RCD = J1.EMPL_RCD
                   AND J2.EFFDT <= &EE.ASOFDATE)
AND J1.EFFSEQ = (SELECT MAX(J3.EFFSEQ)
                   FROM PS_JOB J3
                  WHERE J3.EMPLID = J1.EMPLID
                    AND J3.EMPL_RCD = J1.EMPL_RCD
                    AND J3.EFFDT = J1.EFFDT)
end-select
end-procedure Get-Incumbent-Name

!-------------------------------------
begin-procedure Initialize-Subheading

  let $DeptID = Rtrim(&EE.DEPTID, ' ')
  let $DeptName = Rtrim(&EE.DEPTNAME, ' ')
  move &EE.MANAGER_ID to $EmplID
  do Get-Employee-Name
  do Rotate-Name
  move $Name       to $ManagerName
  do Print-Subheading
end-procedure Initialize-Subheading

!-------------------------------
begin-procedure Print-Subheading

  print $DEPTID1     (+1,1)
  print $DeptID      (0,+1)
  print $DeptName    (0,+2)
  print $MANAGER     (0,+3)
  print $ManagerName (0,+1)
  position (+1)
end-procedure Print-Subheading

!--------------------------
begin-procedure Get-Labels

do Get_Field_Information ('PER012',     'REPORT_TITLE', $REPORTTITLE,   #DW)
do Get_Field_Information ('PER012',     'HOURLY',       $HOUR,          #DW)
do Get_Field_Information ('PER012',     'DAILY',        $DAY,           #DW)
do Get_Field_Information ('PER012',     'MONTHLY',      $MONTH,         #DW)
do Get_Field_Information ('PER012',     'PAYGRP1',      $PAY1,          #DW)
do Get_Field_Information ('PER012',     'PAYGRP2',      $PAY2,          #DW)

do Get_Field_Information ('PER012',     'GRDTOTAL',     $GRDTOTAL,      #DW)
do Get_Field_Information ('PER012',     'MANAGER',      $MANAGER,       #DW)

do Get_Field_Information ('HR',         'EMP_TYP1',     $EMP1,          #DW)
do Get_Field_Information ('HR',         'EMP_TYP2',     $EMP2,          #DW)
do Get_Field_Information ('HR',         'ANNUAL',       $ANNUAL,        #DW)
do Get_Field_Information ('PER012',     'PAYRATE',      $PAYRT,         #DW)
do Get_Field_Information ('HR',         'REG_TMP1',     $REG1,          #DW)
do Get_Field_Information ('HR',         'REG_TMP2',     $REG2,          #DW)

do Get_Field_Information ('HR',         'EMPL_NAME',    $NAME1,         #DW)
do Get_Field_Information ('HR',         'EMPLID',       $EMPLID1,       #DW)
do Get_Field_Information ('HR',         'HIRE_DT1',     $HIRE1,         #DW)
do Get_Field_Information ('HR',         'HIRE_DT2',     $HIRE2,         #DW)
do Get_Field_Information ('HR',         'FULL_PART_TM1',$FULL1,         #DW)
do Get_Field_Information ('HR',         'FULL_PART_TM2',$FULL2,         #DW)
do Get_Field_Information ('HR',         'JOBCODE1',     $JOB1,          #DW)
do Get_Field_Information ('HR',         'JOBCODE2',     $JOB2,          #DW)
do Get_Field_Information ('HR',         'JOBTITLE',     $JOBTITLE,      #DW)
do Get_Field_Information ('HR',         'GRADE1',       $GRADE1,        #DW)
do Get_Field_Information ('HR',         'GRADE2',       $GRADE2,        #DW)
do Get_Field_Information ('HR',         'CURRENCY_CD1', $CUR1,          #DW)
do Get_Field_Information ('HR',         'CURRENCY_CD2', $CUR2,          #DW)
do Get_Field_Information ('HR',         'SUPERVISOR_NAME',$SUPER,       #DW)

do Get_Field_Information ('HR',         'BUS_UNIT1X',   $BUS_UNIT1X,    #DW)
do Get_Field_Information ('HR',         'BUS_UNIT2',    $BUS_UNIT2,     #DW)
do Get_Field_Information ('HR',         'DEPTID' ,      $DEPTID1,       #DW)
do Get_Field_Information ('HR',         'EMPL_RCD',     $RCD,           #DW)

end-procedure Get-Labels

!-----------------------------
begin-procedure Print-Footing

do Get_Field_Information ('HR',         'COMP_CURR_MSG',         $COMP_CURR_MSG, #DW)
PRINT   $COMP_CURR_MSG      (+3,1)

end-procedure Print-Footing

!*******************************************************************
#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'stdapi.sqc'    !Routines to update run status
#include 'hrsecty.sqc'   !Get SQR Security parameters

#Include 'getempnm.sqc'  !Get-Employee-Name procedure
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#include 'datemath.sqc'  ! ROUTINES FOR DATEMATH
#Include 'currency.sqc'  !Recalc-Job-Comprate procedure
                         !Includes 'number.sqc' and 'frquency.sqc'
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'

