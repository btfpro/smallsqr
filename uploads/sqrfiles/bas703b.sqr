!***********************************************************************
! BAS703B: Event Rules -Benefits Administration
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:08:37:27                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'  !Set environment

Begin-Setup
  #Include 'ptpsl177.sqc'
End-Setup

#define  MAX_LINES   56     !Maximum print lines for landscape mode

#define col_sep             1   !Column Separator

#define col_col3           3   !positions
#define col_col4           4   !positions
#define col_col5           5   !positions
#define col_col10         10   !positions
#define col_col12         12   !positions
#define col_col18         18   !positions
#define col_col19         19   !positions
#define col_col22         22   !positions
#define col_col23         23   !positions

!**********************************
Begin-Program
!**********************************

  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Process-Main

  display 'Report Ended at: ' noline
  do display-time

  do Reset
  do StdAPI-Term

End-Program

!**********************************
Begin-Procedure Init-Report
!**********************************

  do Init-DateTime
  do Get-Current-DateTime
  do Init-Number
  do StdAPI-Init

  let $ReportID    = 'BAS703B'
  do Get-Report-Language
  move $BAS703B-REPORTTITLE TO $ReportTitle
  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  let #CurRptLine     = {MAX_LINES} + 1
  let $FirstPageFlag  = 'YES'
  let $PriorEventRule = ''

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if

End-Procedure

!***************************************
Begin-Procedure Ask-Values
!***************************************

  do Ask-As-Of-Date
  !We will need to manipulate $AsOfDate to control other std procedures such
  !as Read-Translate-Table, Get-Benefit-Name, and Get-Deduction-Name.
  !Therefore we will copy this into $UserAsOfDate for safekeeping...
  let $UserAsOfDate = $AsOfDate

  do Ask-Event-Rules

End-Procedure

!***************************************
Begin-Procedure Get-Values
!***************************************

  do Select-Parameters
  do Get-As-Of-Date
  let $UserAsOfDate = $AsOfDate

  do Get-Event-Rules

End-Procedure

!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from BAS703B program IDS
do Init_Report_Translation($ReportID, $Language_Cd)
do Append_Report_Translation('BEN1')

do Get_Field_Information ('BAS703B', 'REPORT_TITLE',      $BAS703B-REPORTTITLE,       #CW)
do Get_Field_Information ('BAS703B', 'EVENT_RULE_DEF',    $BAS703B-EVENT-RULE-DEF,    #CW)
do Get_Field_Information ('BAS703B', 'EVNTBASED_ELIGINFO',$BAS703B-EVNTBASED-ELIGINFO,#CW)
do Get_Field_Information ('BAS703B', 'EVNTBASED_COVRINFO',$BAS703B-EVNTBASED-COVRINFO,#CW)
do Get_Field_Information ('BAS703B', 'OTHER_EVNT_CONTRL', $BAS703B-OTHER-EVNT-CONTRL, #CW)
do Get_Field_Information ('BAS703B', 'CURR_NEW_CHG_LVL',  $BAS703B-CURR-NEW-CHG-LVL,  #CW)
do Get_Field_Information ('BAS703B', 'WAIVED_CHG_LVL',    $BAS703B-WAIVED-CHG-LVL,    #CW)
do Get_Field_Information ('BAS703B', 'USE',               $BAS703B-USE,               #CW)
do Get_Field_Information ('BAS703B', 'SELECTIONS',        $BAS703B-SELECTIONS,        #CW)
do Get_Field_Information ('BAS703B', 'ELT',               $BAS703B-ELT,               #CW)
do Get_Field_Information ('BAS703B', 'COVER_BEGIN_DT',    $BAS703B-COVER-BEGIN-DT,    #CW)
do Get_Field_Information ('BAS703B', 'COVER_END_DT',      $BAS703B-COVER-END-DT,      #CW)
do Get_Field_Information ('BAS703B', 'EXIST',             $BAS703B-EXIST,             #CW)
do Get_Field_Information ('BAS703B', 'DEDON_CREDIT_DT',   $BAS703B-DEDON-CREDIT-DT,   #CW)
do Get_Field_Information ('BAS703B', 'DEF'             ,  $BAS703B-DEF,               #CW)
do Get_Field_Information ('BAS703B', 'PRE',               $BAS703B-PRE,               #CW)
do Get_Field_Information ('BAS703B', 'IGNR',              $BAS703B-IGNR,              #CW)
do Get_Field_Information ('BAS703B', 'IGNORE_EDITS',      $BAS703B-IGNORE-EDITS,      #CW)
do Get_Field_Information ('BAS703B', 'PRFMAX_START_COV',  $BAS703B-PRFMAX-START-COV,  #CW)
do Get_Field_Information ('BAS703B', 'MAX_START_COV',     $BAS703B-MAX-START-COV,     #CW)
do Get_Field_Information ('BAS703B', 'HIS',               $BAS703B-HIS,               #CW)
do Get_Field_Information ('BAS703B', 'ALLOWED',           $BAS703B-ALLOWED,           #CW)
do Get_Field_Information ('BAS703B', 'RQD',               $BAS703B-RQD,               #CW)
do Get_Field_Information ('BAS703B', 'BEGINRULE_WAITPD',  $BAS703B-BEGINRULE-WAITPD,  #CW)
do Get_Field_Information ('BAS703B', 'WAIT',              $BAS703B-WAIT,              #CW)
do Get_Field_Information ('BAS703B', 'ENDRULE_GRACEPD',   $BAS703B-ENDRULE-GRACEPD,   #CW)
do Get_Field_Information ('BAS703B', 'BEGINRULE_ENDRULE', $BAS703B-BEGINRULE-ENDRULE, #CW)
do Get_Field_Information ('BAS703B', 'CRD',               $BAS703B-CRD,               #CW)
do Get_Field_Information ('BAS703B', 'ENT',               $BAS703B-ENT,               #CW)
do Get_Field_Information ('BAS703B', 'DEPBEN_INVST',      $BAS703B-DEPBEN-INVST,      #CW)
do Get_Field_Information ('BAS703B', 'CVG_METHOD',        $BAS703B-CVG-METHOD,        #CW)
do Get_Field_Information ('BAS703B', 'EVENT_RULE',        $BAS703B-EVENT-RULE,        #CW)
do Get_Field_Information ('BAS703B', 'EFF_DATE',          $BAS703B-EFF-DATE,          #CW)
do Get_Field_Information ('BAS703B', 'EVENT_CLASS',       $BAS703B-EVENT-CLASS,       #CW)
do Get_Field_Information ('BAS703B', 'OPEN',              $BAS703B-OPEN,              #CW)
do Get_Field_Information ('BAS703B', 'USAGE',             $BAS703B-USAGE,             #CW)

do Get_Field_Information ('BEN1', 'DEFAULT',           $BEN1-DEFAULT,    #CW)
do Get_Field_Information ('BEN1', 'PLAN',              $BEN1-PLAN,       #CW)


End-Procedure

!***************************************
Begin-Procedure Ask-Event-Rules
!***************************************

  input $Event_Rules_Id
    'Enter Event Rule ID to report (or leave blank for ALL Rules)'
  let $Event_Rules_Id = RTRIM(UPPER($Event_Rules_Id), ' ')

  if ($Event_Rules_Id = '')
    let $Event_Rules_Id = '%'
  end-if

End-Procedure

!***************************************
Begin-Procedure Print-Main-Heading
!***************************************

  if ($FirstPageFlag <> 'YES')
    new-page
  end-if

#Include 'stdhdgtr.sqc'     !Standard Report header

  let #CurRptLine = 5

!***    'Event Rule Definitions as of: '
  print $BAS703B-EVENT-RULE-DEF             (+1,1)

  do Format-DateTime($UserAsOfDate, $OutDt, {DEFDATE}, '', '')
  print $OutDt                              ()


!*** print '|------------- Event-Based Eligibility Information '   (+2,1)
!*** print '--------------|----------------------- Event-Based '   ()
!*** print 'Coverage Information -----------------------|'         ()
!*** print '--- Other Event Control ---|'                          ()
!*** Heading line 1
  print '|'                        (+2,1)
  print '-'                        (0,+0,12) FILL
  print $BAS703B-EVNTBASED-ELIGINFO ()
  print '-'                        (0,54,12) FILL
  print '|'                        (0,66)
  print '-'                        (0,+0,24) FILL
  print $BAS703B-EVNTBASED-COVRINFO ()
  print '-'                        (0,125,22) FILL
  print '|'                        (0,147)
  print '-'                        (0,+0,3) FILL
  print $BAS703B-OTHER-EVNT-CONTRL ()
  print '-'                        (0,172,3) FILL
  print '|'                        (0,175)

!*** print '| Current/New-Change-Lvls Waived-Change-Lvls  Use '    (+1,1)
!*** print 'Selections Elt | Coverage-Begin-Date Exist Coverage-'  ()
!*** print 'End-Date  Deduction/Credit-Date  Default    | '        ()
!*** print 'Def Pre Ignr Ignore-Edits |'                           ()
!*** Heading line 2
  print '|'                        (+1,1,{col_sep})
  print $BAS703B-CURR-NEW-CHG-LVL  (0,+{col_sep},{col_col23})
  print $BAS703B-WAIVED-CHG-LVL    (0,+{col_sep},{col_col19})
  print $BAS703B-USE               (0,+{col_sep},{col_col3})
  print $BAS703B-SELECTIONS        (0,+{col_sep},{col_col10})
  print $BAS703B-ELT               (0,+{col_sep},{col_col3})
  print '|'                        (0,66)
  print $BAS703B-COVER-BEGIN-DT    (0,+{col_sep},{col_col19})
  print $BAS703B-EXIST             (0,+{col_sep},{col_col5})
  print $BAS703B-COVER-END-DT      (0,+{col_sep},{col_col18})
  print $BAS703B-DEDON-CREDIT-DT   (0,+{col_sep},{col_col22})
  print $BEN1-DEFAULT              (0,+{col_sep},{col_col10})
  print '|'                        (0,147)
  print $BAS703B-DEF               (0,+{col_sep},{col_col3})
  print $BAS703B-PRE               (0,+{col_sep},{col_col3})
  print $BAS703B-IGNR              (0,+{col_sep},{col_col4})
  print $BAS703B-IGNORE-EDITS      (0,+{col_sep},{col_col12})
  print '|'                        (0,175)


!*** print '| Prf Max Start StartCovg Max Start StartCovg His '    (+1,1)
!*** print 'Allowed    Rqd | Begin-Rule   WaitPd Wait  End-Rule '  ()
!*** print '  GracePd Begin-Rule  End-Rule   Cvg Method | '        ()
!*** print 'Crd Ent Plan DepBen Invst |'                           ()
!*** Heading line 3
  print '|'                        (+1,1,{col_sep})
  print $BAS703B-PRFMAX-START-COV  (0,+{col_sep},{col_col23})
  print $BAS703B-MAX-START-COV     (0,+{col_sep},{col_col19})
  print $BAS703B-HIS               (0,+{col_sep},{col_col3})
  print $BAS703B-ALLOWED           (0,+{col_sep},{col_col10})
  print $BAS703B-RQD               (0,+{col_sep},{col_col3})
  print '|'                        (0,66)
  print $BAS703B-BEGINRULE-WAITPD  (0,+{col_sep},{col_col19})
  print $BAS703B-WAIT              (0,+{col_sep},{col_col5})
  print $BAS703B-ENDRULE-GRACEPD   (0,+{col_sep},{col_col18})
  print $BAS703B-BEGINRULE-ENDRULE (0,+{col_sep},{col_col22})
  print $BAS703B-CVG-METHOD        (0,+{col_sep},{col_col10})
  print '|'                        (0,147)
  print $BAS703B-CRD               (0,+{col_sep},{col_col3})
  print $BAS703B-ENT               (0,+{col_sep},{col_col3})
  print $BEN1-PLAN                 (0,+{col_sep},{col_col4})
  print $BAS703B-DEPBEN-INVST      (0,+{col_sep},{col_col12})
  print '|'                        (0,175)

!*** Heading line 4
  print '|'                   (+1,1,{col_sep})
  print '='                   (0,+{col_sep},{col_col23})   FILL
  print '='                   (0,+{col_sep},{col_col19})   FILL
  print '='                   (0,+{col_sep},{col_col3})    FILL
  print '='                   (0,+{col_sep},{col_col10})   FILL
  print '='                   (0,+{col_sep},{col_col3})    FILL
  print '|'                   (0,66)
  print '='                   (0,+{col_sep},{col_col19})   FILL
  print '='                   (0,+{col_sep},{col_col5})    FILL
  print '='                   (0,+{col_sep},{col_col18})   FILL
  print '='                   (0,+{col_sep},{col_col22})   FILL
  print '='                   (0,+{col_sep},{col_col10})   FILL
  print '|'                   (0,147)
  print '='                   (0,+{col_sep},{col_col3})    FILL
  print '='                   (0,+{col_sep},{col_col3})    FILL
  print '='                   (0,+{col_sep},{col_col4})    FILL
  print '='                   (0,+{col_sep},{col_col12})   FILL
  print '|'                   (0,175)


  add 6 to #CurRptLine
  let $FirstPageFlag    = 'NO'

End-Procedure

!***************************************
Begin-Procedure Process-Main
!***************************************

#ifdef DB2ALL
   if $Event_Rules_Id <> '%'
     let $Event_Rules_Id = Edit($Event_Rules_Id,'XXXX')
   end-if
#endif

Begin-Select

E.EVENT_RULES_ID
E.EFFDT
  !This sets the effective date for fetching from PSXLATITEM and other
  !supporting tables...
  let $AsOfDate = &E.EFFDT
E.EFF_STATUS
E.DESCRSHORT
  let $RuleDescr = RTRIM(&E.DESCRSHORT, ' ')

C.EVENT_CLASS
  if (RTRIM(&C.EVENT_CLASS, ' ') = '')
    let $EventClass = '('||$BAS703B-OPEN||')'
    let $ClassDescr  = ' '
    let $ClassUse   = ' '
  else
    do Read-Event-Class-Tbl
  end-if
C.PROOF_CHG_LVL
C.ELIG_CHG_LVL
C.PROOF_START_LVL
C.PROOF_START_FLT
C.WV_ELIG_CHG_LVL
C.WV_PROOF_START_LVL
C.WV_PROOF_START_FLT
C.PRE_ENTER
C.USE_HISTORY
C.SELECT_ALLOW
  move 'SELECT_ALLOW'  to $FieldName
  move &C.SELECT_ALLOW to $FieldValue
  do Read-Translate-Table
  let $ElectAllowed = $XlatShortName
C.ELECT_REQUIRED
C.COVERAGE_BEGINS_CD
  move 'COVERAGE_BEGINS_CD'  to $FieldName
  move &C.COVERAGE_BEGINS_CD to $FieldValue
  do Read-Translate-Table
  let $CvgBeginsCd = $XlatShortName
C.WAIT_PERIOD_DD
C.WAIT_PERIOD_MM
  if (&C.WAIT_PERIOD_DD <> 0)
    let $WaitPer = EDIT(&C.WAIT_PERIOD_DD, '999') || ' Day'
  else
    if (&C.WAIT_PERIOD_MM <> 0)
      let $WaitPer = EDIT(&C.WAIT_PERIOD_MM, '999') || ' Mos'
    else
      let $WaitPer = ' (None)'
    end-if
  end-if
C.USE_EXIST_WAIT
C.COVERAGE_ENDS_CD
  move 'COVERAGE_ENDS_CD'  to $FieldName
  move &C.COVERAGE_ENDS_CD to $FieldValue
  do Read-Translate-Table
  let $CvgEndsCd = $XlatShortName
C.GRACE_PERIOD_DD
C.GRACE_PERIOD_MM
  if (&C.GRACE_PERIOD_DD <> 0)
    let $GracePer = EDIT(&C.GRACE_PERIOD_DD, '999') || ' Day'
  else
    if (&C.GRACE_PERIOD_MM <> 0)
      let $GracePer = EDIT(&C.GRACE_PERIOD_MM, '999') || ' Mos'
    else
      let $GracePer = ' (None)'
    end-if
  end-if
C.DED_FLXCR_BEGIN_CD
  move 'DED_FLXCR_BEGIN_CD'  to $FieldName
  move &C.DED_FLXCR_BEGIN_CD to $FieldValue
  do Read-Translate-Table
  let $DedBeginsCd = $XlatShortName
C.DED_FLXCR_END_CD
  move 'DED_FLXCR_END_CD'  to $FieldName
  move &C.DED_FLXCR_END_CD to $FieldValue
  do Read-Translate-Table
  let $DedEndsCd = $XlatShortName
C.DFLT_METHOD
  move 'DFLT_METHOD'  to $FieldName
  move &C.DFLT_METHOD to $FieldValue
  do Read-Translate-Table
  let $DfltMethod = $XlatShortName
C.DFLT_CREDIT_IND
C.IGNORE_PLAN
C.IGNORE_DEPBEN_EDIT
C.IGNORE_INVEST_EDIT

  if (&E.EVENT_RULES_ID <> $PriorEventRule)
    do Print-Event-Rule-Info
    let $PriorEventRule = &E.EVENT_RULES_ID
  end-if

  do Print-Event-Class-Info

FROM  PS_BAS_EVENT_RULES E,
      PS_BAS_EVENT_CLASS C

WHERE E.EVENT_RULES_ID LIKE $Event_Rules_Id
  AND E.EFF_STATUS     = 'A'
  AND E.EFFDT          = (SELECT MAX(EFFDT)
                            FROM PS_BAS_EVENT_RULES
                           WHERE EVENT_RULES_ID = E.EVENT_RULES_ID
                             AND EFF_STATUS     = 'A'
                             AND EFFDT         <= $UserAsOfDate)
  AND C.EVENT_RULES_ID = E.EVENT_RULES_ID
  AND C.EFFDT          = E.EFFDT

ORDER BY E.EVENT_RULES_ID ASC, C.EVENT_CLASS ASC

End-Select
End-Procedure

!***************************************
Begin-Procedure Print-Event-Rule-Info
!***************************************

  if (#CurRptLine >= ({MAX_LINES}-8))
    do Print-Main-Heading
  end-if

!*** 'Event Rule: '
  print $BAS703B-EVENT-RULE                                   (+3,1)
  print &E.EVENT_RULES_ID                                     ()
!*** '  Eff-Date: '
  print $BAS703B-EFF-DATE                                     ()
  do Format-DateTime(&E.EFFDT, $OutDt, {DEFDATE}, '', '')
  print $OutDt                                                ()
  print '  ('                                                 ()
  print $RuleDescr                                            ()
  print ')'                                                   ()

  print '---------------------------------------------------' (+1,1)

  add 4 to #CurRptLine

End-Procedure

!***************************************
Begin-Procedure Print-Event-Class-Info
!***************************************

  if (#CurRptLine >= ({MAX_LINES}-4))
    do Print-Main-Heading
  end-if

!*** 'Event Class: '
  print $BAS703B-EVENT-CLASS                     (+2,1)
  print $EventClass                              ()
  print ' ('                                     ()
  print $EventClassNameAbbrv                     ()
  print ') '                                     ()
  print $BAS703B-USAGE                           ()
  print $ClassUse                                ()

  print &C.PROOF_CHG_LVL                         (+2,4,2) edit 09
  print &C.ELIG_CHG_LVL                          (0,+2,2) edit 09
  print &C.PROOF_START_LVL                       (0,+3,2) edit 09
  print &C.PROOF_START_FLT                       (0,+2,9) edit $99999999
  print &C.WV_ELIG_CHG_LVL                       (0,+2,2) edit 09
  print &C.WV_PROOF_START_LVL                    (0,+3,2) edit 09
  print &C.WV_PROOF_START_FLT                    (0,+2,9) edit $99999999
  print &C.USE_HISTORY                           (0,+2,1)
  print $ElectAllowed                            (0,+2,10)
  print &C.ELECT_REQUIRED                        (0,+2,1)

  print $CvgBeginsCd                             (0,+4,10)
  print $WaitPer                                 (0,+2,7)
  print &C.USE_EXIST_WAIT                        (0,+3,1)
  print $CvgEndsCd                               (0,+3,10)
  print $GracePer                                (0,+1,7)
  print $DedBeginsCd                             (0,+1,10)
  print $DedEndsCd                               (0,+2,10)
  print $DfltMethod                              (0,+1,10)

  print &C.DFLT_CREDIT_IND                       (0,+4,1)
  print &C.PRE_ENTER                             (0,+3,1)
  print &C.IGNORE_PLAN                           (0,+4,1)
  print &C.IGNORE_DEPBEN_EDIT                    (0,+5,1)
  print &C.IGNORE_INVEST_EDIT                    (0,+5,1)

  add 4 to #CurRptLine

End-Procedure

!*************************************
Begin-Procedure Read-Event-Class-Tbl
!*************************************

Begin-Select

T.EVENT_CLASS
  let $EventClass = &T.EVENT_CLASS
T.DESCRSHORT
  let $EventClassNameAbbrv = RTRIM(&T.DESCRSHORT, ' ')
  do Get-Evt-Class-Name-Lang

T.EVENT_CLASS_USE
  let $ClassUse = RTRIM(&T.EVENT_CLASS_USE, ' ')

FROM PS_BAS_EVT_CLASS T
WHERE T.EVENT_CLASS = &C.EVENT_CLASS

End-Select
End-Procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!*************************************

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'benasof.sqc'   !Ask-As-Of-Date procedure
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'readxlat.sqc'  !get translates for fieldname, value
#Include 'getevcls.sqc'  !Get-Evt-Class-Name-Lang procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language

!****************************** End Of Report *************************
