!***********************************************************************
! MXSTP001.SQR   STPS DC-1 Training Mixed Committee Constitution.      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:13:47:43                                 *
!       $Release:  HR9                                                 *
!      $Revision:  101                                                 *
!                                                                      *
!***********************************************************************
#include 'setenv.sqc'   !Set environment
!#Include 'setup01.sqc'  !Portrait  Printer and page-size initialization

#define c01  18
#define c02  23
#define c06  33
#define c09  46
#define c10  54
#define c11  72

Begin-Setup
#include 'setupdb.sqc'
 Declare-Printer   THIS_REPORT
  Type=HPLASERJET
  Font=5
  Point-Size=14 !12
  Pitch=17  !  15 !17
  Symbol-Set=19U     ! ASCII symbol set
 End-Declare
 
 Declare-Layout THIS_REPORT
  Orientation=Portrait
  Top-Margin= .35
  Left-Margin=0.1
  Max-Lines=79
  Max-Columns=100
  Char-Width=6.6  !4.3    ! 7.2
  Line-Height=9     ! 72/printer_point-size
 End-Declare
 
 Declare-Report THIS_REPORT
  Printer-Type=HPLASERJET
  LayOut=THIS_REPORT
 End-Declare

End-Setup

begin-report
  move '1' to $ReportDateType
  move '1' to $Reportyear4
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
!  do Declare-Printer
  do Init-Report
  do Select-Parameters
  do Report
  date-time () hh:mi:ss &timeEnded
  display 'Report Ended: ' noline
  display &timeEnded
  do Stdapi-Term
!  do Reset
end-report


begin-procedure Init-Report
  date-time () hh:mi:ss &timeBegan
  display 'Report Began: ' noline
  display &timeBegan
  move 'MXSTP001' to $ReportID
  let $ReportTitle = 'STPS DC-1 Constitucion Comisiones Mixtas'
  display $ReportTitle
end-procedure Init-Report


begin-heading 1
  position  (1)
end-heading


!begin-procedure Declare-Printer
!  let #fontstd  = 5
!  let #sizestd  = 6
!  let #fontsm   = 5
!  let #sizesm   = 8
!  let #fontmed  = 5
!  let #sizemed  = 10
!  let #fontgr   = 5
!  let #sizegr   = 12
!  let #fontxgr  = 5
!  let #sizexgr  = 14
!  declare printer
!    type          = HPLASERJET
!    orientation   = portrait
!    top-margin    = 0.35
!    left-margin   = 0.0   !0.5
!    symbol-set    = 19U
!    font          = 5
!    font-style    = fixed
!    point-size    = 14 !12
!    line-size     = 9
!end-procedure Declare-Printer


begin-procedure Report
  do Get-Report-Data
  do Get-Estabid-Data
!  show 'Sali de Get-Estabid-Data'
  do Get-Committee-Data
!  show 'Sali de Get-Committee-Data '
  do Get-ER-Locations
!  show 'Sali de Get-ER-Locations '
  do Count-Employees
!  show 'Cuento Empleados '
  do print-format
!  show 'Acabe de Imprimir'
end-procedure Report


begin-procedure Select-Parameters
begin-select
RC.COMPANY
RC.ESTABID
RC.CONTRACT_TYPE_MEX
RC.MIXED_COMM_ID_MEX
  let $Company = &RC.COMPANY
  let $ESTABID = rtrim(&RC.ESTABID,' ')
  let $Contract_Type = &RC.CONTRACT_TYPE_MEX
  let $Committee = rtrim(&RC.MIXED_COMM_ID_MEX,' ')
  let $IMS_ER_S = substr($ESTABID,1,11)
  let $IMS_ER_1 = substr($IMS_ER_S,1,1)
  let $IMS_ER_2 = substr($IMS_ER_S,2,1)
  let $IMS_ER_3 = substr($IMS_ER_S,3,1)
  let $IMS_ER_4 = substr($IMS_ER_S,4,1)
  let $IMS_ER_5 = substr($IMS_ER_S,5,1)
  let $IMS_ER_6 = substr($IMS_ER_S,6,1)
  let $IMS_ER_7 = substr($IMS_ER_S,7,1)
  let $IMS_ER_8 = substr($IMS_ER_S,8,1)
  let $IMS_ER_9 = substr($IMS_ER_S,9,1)
  let $IMS_ER_10 = substr($IMS_ER_S,10,1)
  let $IMS_ER_11 = substr($IMS_ER_S,11,1)

FROM PS_RUN_STPS_MEX RC
WHERE RC.OPRID       = $Prcs_OprID
  AND RC.RUN_CNTL_ID = $Prcs_Run_Cntl_ID
end-select
end-procedure Select-Parameters


begin-procedure Get-Report-Data
begin-select
C.DESCR
CM.RFC_ER_ID_MEX
CM.COMP_ACTIVITY_MEX
CM.REP_NAME_MEX
  let $Comp_Descr = &C.DESCR
  let $RFC_ER_ID  = rtrim(&CM.RFC_ER_ID_MEX,' ')
  let $Comp_Act   = &CM.COMP_ACTIVITY_MEX
  let $Rep_Name   = &CM.REP_NAME_MEX
  let $RFC_ER_S   = Rtrim(substr($RFC_ER_ID,1,12), ' ')
  let $RFC_ER_1   = substr($RFC_ER_S,1,1)
  let $RFC_ER_2   = substr($RFC_ER_S,2,1)
  let $RFC_ER_3   = substr($RFC_ER_S,3,1)
  let $RFC_ER_4   = substr($RFC_ER_S,4,1)
  let $RFC_ER_5   = substr($RFC_ER_S,5,1)
  let $RFC_ER_6   = substr($RFC_ER_S,6,1)
  let $RFC_ER_7   = substr($RFC_ER_S,7,1)
  let $RFC_ER_8   = substr($RFC_ER_S,8,1)
  let $RFC_ER_9   = substr($RFC_ER_S,9,1)
  let $RFC_ER_10  = substr($RFC_ER_S,10,1)
  let $RFC_ER_11  = substr($RFC_ER_S,11,1)
  let $RFC_ER_12  = substr($RFC_ER_S,12,1)
  do Get-Comp-Descr-Lang

FROM PS_COMPANY_TBL     C,
     PS_COMPANY_TBL_MEX CM

WHERE C.COMPANY = $Company
and C.COMPANY = CM.COMPANY
and C.EFFDT = (SELECT MAX(EFFDT) FROM PS_COMPANY_TBL
               WHERE COMPANY = C.COMPANY
               AND EFFDT <= $AsofToday)
and CM.EFFDT = C.EFFDT
end-select
end-procedure Get-Report-Data


begin-procedure Get-Comp-Descr-Lang
begin-SELECT
CTL.DESCR
  if rtrim(&CTL.Descr,' ') <> ''
     let $Comp_Descr  = rtrim(&CTL.Descr,' ')
  end-if

FROM  PS_COMPNY_TBL_LANG CTL
WHERE CTL.COMPANY     = $Company
  AND CTL.LANGUAGE_CD = 'ESP'
  AND CTL.EFFDT       =
     (SELECT MAX(EFFDT)
      FROM   PS_COMPNY_TBL_LANG
      WHERE  COMPANY     = $Company
        AND  LANGUAGE_CD = CTL.LANGUAGE_CD
        AND  EFFDT      <= $AsofToday)
end-SELECT
end-procedure Get-Comp-Descr-Lang


begin-procedure Get-Estabid-Data
begin-select
IMS.ESTABID
IMS.ADDRESS1
IMS.ADDRESS2
IMS.ADDRESS3
IMS.ADDRESS4
IMS.CITY
IMS.POSTAL
IMS.STATE
  let $Address1 = &IMS.ADDRESS1
  let $Address2 = &IMS.ADDRESS2
  let $Address3 = &IMS.ADDRESS3
  let $Municip  = &IMS.ADDRESS4
  let $City     = rtrim(&IMS.CITY,' ')
  let $Postal   = substr(&IMS.POSTAL,1,5)
  let $Postal1  = substr($POSTAL,1,1)
  let $Postal2  = substr($POSTAL,2,1)
  let $Postal3  = substr($POSTAL,3,1)
  let $Postal4  = substr($POSTAL,4,1)
  let $Postal5  = substr($POSTAL,5,1)
  let $State    = &IMS.STATE
  do Get-State-Name
  do Get-Phones

from PS_ESTAB_TBL IMS
Where IMS.ESTABID = $ESTABID
and IMS.EFFDT = (SELECT MAX(EFFDT) FROM PS_ESTAB_TBL
               WHERE ESTABID = IMS.ESTABID
               AND EFF_STATUS = 'A'
               AND EFFDT <= $AsofToday)
end-select
end-procedure Get-Estabid-Data


begin-procedure Get-State-Name
begin-select
SN.DESCR
  let $State_Desc = &SN.DESCR

FROM PS_STATE_NAMES_TBL SN
WHERE SN.COUNTRY = 'MEX'
  AND SN.STATE = $State
end-select
end-procedure Get-State-Name


begin-procedure Get-Phones
  let $phone = ''
begin-select
PHONE
  let $phone = $Phone || '  ' || rtrim(&PHONE,' ')

FROM PS_COMP_PHONE_TBL
WHERE COMPANY = $Company
end-select
end-procedure Get-Phones


begin-procedure Get-Committee-Data
begin-select
MT.CONST_DATE_MEX
  let $Const_Dt = &MT.CONST_DATE_MEX
  do Convert-To-DTU-Date($Const_Dt,$Const_Dt)
  let $Const_Y1 = substr($Const_Dt,3,1)
  let $Const_Y2 = substr($Const_Dt,4,1)
  let $Const_M1 = substr($Const_Dt,6,1)
  let $Const_M2 = substr($Const_Dt,7,1)
  let $Const_D1 = substr($Const_Dt,9,1)
  let $Const_D2 = substr($Const_Dt,10,1)

FROM PS_MIX_COM_TBL_MEX MT
WHERE MT.MIXED_COMM_ID_MEX = $Committee
AND MT.EFFDT = (SELECT MAX(EFFDT) FROM PS_MIX_COM_TBL_MEX
               WHERE MIXED_COMM_ID_MEX = MT.MIXED_COMM_ID_MEX
               AND EFF_STATUS = 'A'
               AND EFFDT <= $AsofToday)
end-select

begin-select
COUNT(*) &LOCATIONS 
  move &LOCATIONS to $Locations 099
  Let $Loc_1 = substr($Locations,1,1)
  Let $Loc_2 = substr($Locations,2,1)
  Let $Loc_3 = substr($Locations,3,1)

FROM PS_MIX_COM_LOC_MEX ML
WHERE ML.MIXED_COMM_ID_MEX = $Committee
AND ML.EFFDT = (SELECT MAX(EFFDT) FROM PS_MIX_COM_LOC_MEX
               WHERE MIXED_COMM_ID_MEX = ML.MIXED_COMM_ID_MEX
               AND EFFDT <= $AsofToday)
end-select

begin-select
COUNT(*) &REPS
  move &REPS to $Reps 099
  Let $Reps_1 = substr($Reps,1,1)
  Let $Reps_2 = substr($Reps,2,1)
  Let $Reps_3 = substr($Reps,3,1)

FROM PS_MIX_COM_REP_MEX MR,PS_MIX_COM_TBL_MEX MR2
WHERE MR.MIXED_COMM_ID_MEX  = $Committee
AND   MR2.MIXED_COMM_ID_MEX = MR.MIXED_COMM_ID_MEX
AND   MR2.EFF_STATUS = 'A'
AND   MR2.EFFDT = (SELECT MAX(EFFDT) FROM PS_MIX_COM_TBL_MEX
                  WHERE MIXED_COMM_ID_MEX = MR2.MIXED_COMM_ID_MEX
                  AND EFFDT <= $AsofToday)
AND   MR.STATUS = 'A'
AND   MR.EFFDT = MR2.EFFDT
AND   MR.STATUS_DATE_MEX = (SELECT MAX(STATUS_DATE_MEX) FROM PS_MIX_COM_REP_MEX
                  WHERE MIXED_COMM_ID_MEX = MR.MIXED_COMM_ID_MEX
                  AND EFFDT <= $AsofToday)
end-select
end-procedure Get-Committee-Data


begin-procedure print-format
SHOW  'PRINT'
print $Comp_Descr           ({c01},3)

print $RFC_ER_1             ({c02},3)
print $RFC_ER_2             ({c02},6)
print $RFC_ER_3             ({c02},9)
print $RFC_ER_4             ({c02},18)
print $RFC_ER_5             ({c02},21)
print $RFC_ER_6             ({c02},24)
print $RFC_ER_7             ({c02},27)
print $RFC_ER_8             ({c02},30)
print $RFC_ER_9             ({c02},33)
print $RFC_ER_10            ({c02},39)
print $RFC_ER_11            ({c02},42)
print $RFC_ER_12            ({c02},45)

print $IMS_ER_1             ({c02},53)
print $IMS_ER_2             ({c02},56)
print $IMS_ER_3             ({c02},59)
print $IMS_ER_4             ({c02},62)
print $IMS_ER_5             ({c02},65)
print $IMS_ER_6             ({c02},68)
print $IMS_ER_7             ({c02},71)
print $IMS_ER_8             ({c02},74)
print $IMS_ER_9             ({c02},77)
print $IMS_ER_10            ({c02},80)
print $IMS_ER_11            ({c02},86)

print $Address1             (27,3)
print $Address2             (28,3)
print $Address3             (29,3)
print $City                 ({c06},3)
print $Postal1              ({c06},30)
print $Postal2              ({c06},33)
print $Postal3              ({c06},36)
print $Postal4              ({c06},39)
print $Postal5              ({c06},42)
print $Municip              ({c06},51,25)
print $State_Desc           (37,3)
print $Phone                (37,40)
print $Comp_Act             (41,3)

print $Total_Emp_1          ({c09},21)
print $Total_Emp_2          ({c09},24)
print $Total_Emp_3          ({c09},27)
print $Total_Emp_4          ({c09},30)
print $Total_Emp_5          ({c09},33)
print $Total_Emp_6          ({c09},36)

evaluate $Contract_Type
  when = '0010'
    print 'X'               ({c09},53)
    break
  when = '0020'
    print 'X'               ({c09},68)
    break
  when = '0030'
    print 'X'               ({c09},83)
    break
end-evaluate

print $Loc_1                ({c10},12)
print $Loc_2                ({c10},15)
print $Loc_3                ({c10},18)

print $Reps_1               ({c10},41)
print $Reps_2               ({c10},44)
print $Reps_3               ({c10},47)

print $Const_Y1             ({c10},71)
print $Const_Y2             ({c10},74)
print $Const_M1             ({c10},77)
print $Const_M2             ({c10},80)
print $Const_D1             ({c10},83)
print $Const_D2             ({c10},86)

print $Rep_Name             (65,27)
let $City = $City || ', ' || $State
print $City                 ({c11},22)
do Convert-To-DTU-Date($AsOfToday,$AsOfToday1)
let $Today_Y1 = substr($AsOfToday1,3,1)
let $Today_Y2 = substr($AsOfToday1,4,1)
let $Today_M1 = substr($AsOfToday1,6,1)
let $Today_M2 = substr($AsOfToday1,7,1)
let $Today_D1 = substr($AsOfToday1,9,1)
let $Today_D2 = substr($AsOfToday1,10,1)
print $Today_Y1             ({c11},50)
print $Today_Y2             ({c11},53)
print $Today_M1             ({c11},56)
print $Today_M2             ({c11},59)
print $Today_D1             ({c11},62)
print $Today_D2             ({c11},65)
end-procedure print-format


begin-procedure Get-ER-Locations
  let $Where_Location = '('
begin-select
L.LOCATION
  let $Locat = rtrim(&L.LOCATION,' ')
  concat ''''   with $Where_Location
  concat $Locat with $Where_Location
  concat ''''   with $Where_Location
  concat ','   with $Where_Location
FROM PS_LOCATION_TBL L
WHERE L.ESTABID = $ESTABID
AND L.EFFDT = (SELECT MAX(EFFDT) FROM PS_LOCATION_TBL
              WHERE SETID = L.SETID
              AND LOCATION = L.LOCATION
              AND EFF_STATUS = 'A'
              AND EFFDT <= $AsOfToday)
end-select
  let #L-Locat = length($Where_Location)
  if #L-Locat > 1
    let $Where_Location = rtrim($Where_Location,',')
    concat ')' with $Where_Location
  else
     move '(' to $Where_Location
     concat '''' with $Where_Location
     concat '''' with $Where_Location
     concat ')' with $Where_Location
  end-if
  show '$Where_Location ' $Where_Location
end-procedure Get-ER-Locations

begin-procedure Count-Employees
begin-select
COUNT(*) &Total_Empl
  move &Total_Empl to $Total_Emp 099999
  Let $Total_Emp_1 = substr($Total_Emp,1,1)
  Let $Total_Emp_2 = substr($Total_Emp,2,1)
  Let $Total_Emp_3 = substr($Total_Emp,3,1)
  Let $Total_Emp_4 = substr($Total_Emp,4,1)
  Let $Total_Emp_5 = substr($Total_Emp,5,1)
  Let $Total_Emp_6 = substr($Total_Emp,6,1)

FROM PS_JOB J
WHERE J.COMPANY = $Company
AND J.LOCATION IN [$Where_Location]
AND J.EFFDT = (SELECT MAX(EFFDT) FROM PS_JOB
        WHERE EMPLID = J.EMPLID
        AND EMPL_RCD = J.EMPL_RCD
        AND HR_STATUS = 'A'
        AND EFFDT <= $AsOfToday)
AND J.EFFSEQ = (SELECT MAX(EFFSEQ) FROM PS_JOB
        WHERE EMPLID = J.EMPLID
        AND EMPL_RCD = J.EMPL_RCD
        AND EFFDT = J.EFFDT)
end-select
end-procedure Count-Employees

!****************************************************************
#Include 'tranctrl.sqc'  !Common Transaction Control Procedures
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'datemath.sqc'  !Date math routines
#include 'askcalyr.sqc'  !Ask-Calendar-Year
