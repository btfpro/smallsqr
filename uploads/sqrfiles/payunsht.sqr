!************************************************************************
! PAYUNSHT:  Remove paysheets for a particular pay calendar
!************************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/04/17:07:55:09                        
!       $Release:  HR9                                        
!    $Resolution:  702214                                     
!                                                                      *
!***********************************************************************
!***********************************************************************
!* Modified for HRMS-Federal Government Payroll                        *
!* ENH0001 Support for Pay Limits/Caps                                 *
!***********************************************************************
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#Include 'setup31.sqc'  !Printer and page-size initialization


begin-heading 7

  #Include 'stdhdgtr.sqc'

  print $Payunsht_CmpCd1     (+2,1)
  print $Payunsht_PayGrp1    (0,12)
  print $Payunsht_PayEndDt1  (0,24)
  print $Payunsht_PgNDel1    (0,45) ! Increased by 10 to acc. Fr
  print $Payunsht_NoChk_Cnf1 (0,65) ! Increased by 10 to acc. Fr

  print $Payunsht_CmpCd2     (+1,1)
  print $Payunsht_PayGrp2    (0,12)
  print $Payunsht_PayEndDt2  (0,24)
  print $Payunsht_PgNDel2    (0,45)
  print $Payunsht_NoChk_Cnf2 (0,65)

end-heading

!************
begin-report
!************

!  move 'PayUnSheet' to $ReportID
  move 'PAYUNSHT' to $ReportID ! To acc. the STRING_ID field

  do Init-DateTime
  do Init-Number
  do Stdapi-Init

  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.
  move $Payunsht_ReportTitle to $ReportTitle

  do See-If-TL-Installed
  do Payroll-Report-Initialization
  do Stdapi-Term

end-report

! This procedure is used to read language-dependent text from the database.
!**********************************
begin-procedure Report-Translation
!**********************************
! Read from PAYUNSHT  program id
   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('PAYUNSHT', 'REPORT_TITLE', $Payunsht_ReportTitle, #dummy_width)
   do Get_Field_Information ('PAYUNSHT', 'CMPCD1',       $Payunsht_CmpCd1,      #dummy_width)
   do Get_Field_Information ('PAYUNSHT', 'PAYGRP1',      $Payunsht_PayGrp1,     #dummy_width)
   do Get_Field_Information ('PAYUNSHT', 'PAYENDDT1',    $Payunsht_PayEndDt1,   #dummy_width)
   do Get_Field_Information ('PAYUNSHT', 'PGNDEL1',      $Payunsht_PgNDel1,     #dummy_width)
   do Get_Field_Information ('PAYUNSHT', 'NOCHK_CNF1',   $Payunsht_NoChk_Cnf1,  #dummy_width)
   do Get_Field_Information ('PAYUNSHT', 'CMPCD2',       $Payunsht_CmpCd2,      #dummy_width)
   do Get_Field_Information ('PAYUNSHT', 'PAYGRP2',      $Payunsht_PayGrp2,     #dummy_width)
   do Get_Field_Information ('PAYUNSHT', 'PAYENDDT2',    $Payunsht_PayEndDt2,   #dummy_width)
   do Get_Field_Information ('PAYUNSHT', 'PGNDEL2',      $Payunsht_PgNDel2,     #dummy_width)
   do Get_Field_Information ('PAYUNSHT', 'NOCHK_CNF2',   $Payunsht_NoChk_Cnf2,  #dummy_width)
end-procedure


!**********************
begin-procedure Report
!**********************

  move 'UnSheet' to $Current_Process
  do Select-Pay-Calendar

! move 'ResetFlags' to $Current_Process
! do Select-Pay-Calendar

end-procedure


! Check the PS_INSTALLATION table to see if Time and Labor is Installed.
!***********************************
begin-procedure See-If-TL-Installed
!***********************************

  move 'N' to $TLInstalled
  let #OldPyRqstNbr = 0
begin-select
I.TL
I.FED

  move &I.TL to $TLInstalled
  move &I.FED to $FEDFunc

FROM PS_INSTALLATION I
end-select

end-procedure


!***********************************
begin-procedure Select-Pay-Calendar
!***********************************

  move 'N' to $Calendar_Found
  let $OncycleTLDelete = 'N'

begin-select
A.COMPANY
A.PAYGROUP
A.PAY_END_DT
A.PAY_SHEETS_RUN
A.PAY_PRECALC_RUN
A.PAY_CALC_RUN
A.PAY_CONFIRM_START
A.PAY_OFF_CYCLE
A.PAY_OFF_CYCLE_CLS
A.GVT_CY_BEGIN

  move &A.Pay_Sheets_Run    to $Pay_Sheets_Run
  move &A.Pay_PreCalc_Run   to $Pay_PreCalc_Run
  move &A.Pay_Calc_Run      to $Pay_Calc_Run
  move &A.Pay_Off_Cycle     to $Pay_Off_Cycle
  move &A.Pay_Off_Cycle_Cls to $Pay_Off_Cycle_Cls
  move &A.Gvt_Cy_Begin      to $Calendar_YR

  move 'Y' to $Calendar_Found

  if $Current_Process = 'UnSheet'
    do UnSheet-Calendar
  end-if

  if $Current_Process = 'ResetFlags'
    do Reset-Prior-Flags
  end-if

FROM PS_PAY_CALENDAR A
WHERE [$SlctCalendar]
end-select

end-procedure


!********************************
begin-procedure UnSheet-Calendar
!********************************

  if &A.Pay_Confirm_Start = 'Y'

      evaluate $CycleInd
        when = 'O'    ! nothing to delete
          break
        when = 'F'
        when = 'B'    ! only off cycle possible

          move 'Y' to $SlctOffCycleA
          move 'Y' to $SlctOffCycleB
          move &A.Company    to $SlctCompany
          move &A.PayGroup   to $SlctPayGroup
          move &A.Pay_End_Dt to $SlctPayEndDt
          do Select-Pages
          do Update-Cycle-Flags

          break
      end-evaluate
  else

    evaluate $CycleInd
      when = 'O'
        move 'N' to $SlctOffCycleA
        move 'N' to $SlctOffCycleB

        move &A.Company    to $SlctCompany
        move &A.PayGroup   to $SlctPayGroup
        move &A.Pay_End_Dt to $SlctPayEndDt
        move #SlctPageFrom to #Del_PageFrom
        move #SlctPageThru to #Del_PageThru
        do Delete-Sheets
        do Update-Pay-Run-Flags

        break
      when = 'F'
        move 'Y' to $SlctOffCycleA
        move 'Y' to $SlctOffCycleB

        move &A.Company    to $SlctCompany
        move &A.PayGroup   to $SlctPayGroup
        move &A.Pay_End_Dt to $SlctPayEndDt

        do Select-Pages
        do Update-Cycle-Flags

        break
      when = 'B'

        move &A.Company    to $SlctCompany
        move &A.PayGroup   to $SlctPayGroup
        move &A.Pay_End_Dt to $SlctPayEndDt

        move 'Y' to $SlctOffCycleA
        move 'Y' to $SlctOffCycleB
        do Select-Pages
        do Update-Cycle-Flags

        move 'N' to $SlctOffCycleA
        move 'N' to $SlctOffCycleB
        move #SlctPageFrom to #Del_PageFrom
        move #SlctPageThru to #Del_PageThru
        do Delete-Sheets
        do Update-Pay-Run-Flags

        break
    end-evaluate

  end-if

end-procedure


!****************************
begin-procedure Select-Pages
!****************************

  move 'N' to $Pay_Off_Cycle
  move 'Y' to $Pay_Off_Cycle_Cls

begin-SELECT
PP.COMPANY
PP.PAYGROUP
PP.PAY_END_DT
PP.OFF_CYCLE
PP.PAGE_NUM
PP.BALNC_LINES

  do Count-Unconfirmed-Checks

  if #Check_Count = 0

    if &PP.PAGE_NUM >= #SlctPageFrom
          and &PP.PAGE_NUM <= #SlctPageThru
      move &PP.PAGE_NUM to #Del_PageFrom
      move &PP.PAGE_NUM to #Del_PageThru
      do Delete-Sheets
    end-if
  else
    move &A.Pay_Off_Cycle     to $Pay_Off_Cycle
    move &A.Pay_Off_Cycle_Cls to $Pay_Off_Cycle_Cls

    if &PP.PAGE_NUM >= #SlctPageFrom
          and &PP.PAGE_NUM <= #SlctPageThru
      move &PP.PAGE_NUM to #Rpt_Page
      do Exception-Report
    end-if
  end-if

FROM PS_PAY_PAGE PP
WHERE PP.COMPANY    = $SlctCompany
  AND PP.PAYGROUP   = $SlctPayGroup
  AND PP.PAY_END_DT = $SlctPayEndDt
  AND PP.OFF_CYCLE  = 'Y'
end-SELECT

end-procedure


!****************************************
begin-procedure Count-Unconfirmed-Checks
!****************************************

  move 0 to #Check_Count

begin-SELECT
COUNT(*) &Check_Count

  move &Check_Count to #Check_Count

FROM PS_PAY_CHECK  PC
WHERE PC.COMPANY    = $SlctCompany
  AND PC.PAYGROUP   = $SlctPayGroup
  AND PC.PAY_END_DT = $SlctPayEndDt
  AND PC.OFF_CYCLE  = 'Y'
  AND PC.PAYCHECK_STATUS IN('A','F','R')
  AND PC.PAGE_NUM      = &pp.PAGE_NUM
end-SELECT

end-procedure


!*****************************
begin-procedure Delete-Sheets
!*****************************
  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_PAGE'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_PAGE
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

! Update TL_PAY_LINK_NUM before deleting Payline and Pay_Oth_Earns


 if $TLInstalled = 'Y'
    if  $SlctOffCycleA = 'N'
        if $OncycleTLDelete = 'N'
           do OncycleTLDelete
        end-if
    else
begin-select distinct
PE.EMPLID          &pe.emplid
PE.EMPL_RCD        &pe.empl_rcd
PE.XREF_NUM        &pe.xref_num
PE.PAY_LINE_STATUS &pe.pay_line_status
PL.PAYCHECK_ADJUST &pe.paycheck_adjust

   let #upd_xref_num = &pe.xref_num
   let $upd_emplid   = &pe.emplid
   let #upd_empl_rcd = &pe.empl_rcd

   if &pe.pay_line_status <> 'V'
      and &pe.paycheck_adjust  <> 'Y'

        do OffcycleTLDelete
   end-if

FROM PS_PAY_EARNINGS PE, PS_PAY_LINE PL
WHERE PE.COMPANY = $SlctCompany
AND PE.PAYGROUP = $SlctPayGroup
AND PE.PAY_END_DT = $SlctPayEndDt
AND PE.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
AND PE.PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
AND PL.COMPANY = PE.COMPANY
AND PL.PAYGROUP = PE.PAYGROUP
AND PL.PAY_END_DT = PE.PAY_END_DT
AND PL.OFF_CYCLE = PE.OFF_CYCLE
AND PL.PAGE_NUM = PE.PAGE_NUM
AND PL.LINE_NUM = PE.LINE_NUM
end-select

begin-select distinct
POE.XREF_NUM       &POE.XREF_NUM
PE.EMPLID          &poe.emplid
PE.EMPL_RCD        &poe.empl_rcd
PE.PAY_LINE_STATUS &poe.pay_line_status
PL.PAYCHECK_ADJUST &poe.paycheck_adjust

   let #upd_xref_num = &POE.XREF_NUM
   let $upd_emplid   = &poe.emplid
   let #upd_empl_rcd = &poe.empl_rcd

   if &poe.pay_line_status <> 'V'
      and &poe.paycheck_adjust  <> 'Y'

        do OffcycleTLDelete
   end-if


FROM PS_PAY_OTH_EARNS POE, PS_PAY_EARNINGS PE, PS_PAY_LINE PL
WHERE  POE.COMPANY = $SlctCompany
   AND POE.PAYGROUP = $SlctPayGroup
   AND POE.PAY_END_DT = $SlctPayEndDt
   AND POE.OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
   AND POE.PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
   AND PE.COMPANY = POE.COMPANY
   AND PE.PAYGROUP = POE.PAYGROUP
   AND PE.PAY_END_DT = POE.PAY_END_DT
   AND PE.OFF_CYCLE = POE.OFF_CYCLE
   AND PE.PAGE_NUM = POE.PAGE_NUM
   AND PE.LINE_NUM = POE.LINE_NUM
   AND PE.ADDL_NBR = POE.ADDL_NBR
   AND PL.COMPANY = PE.COMPANY
   AND PL.PAYGROUP = PE.PAYGROUP
   AND PL.PAY_END_DT = PE.PAY_END_DT
   AND PL.OFF_CYCLE = PE.OFF_CYCLE
   AND PL.PAGE_NUM = PE.PAGE_NUM
   AND PL.LINE_NUM = PE.LINE_NUM
end-select

    end-if

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PY_TL_PYBL_REV (Pay Earnings)'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PY_TL_PYBL_REV
WHERE EXISTS (
SELECT 'X'
  FROM PS_PAY_CHECK PC, PS_PAY_EARNINGS PE
 WHERE PC.COMPANY      = $SlctCompany
   AND PC.PAYGROUP     = $SlctPayGroup
   AND PC.PAY_END_DT   = $SlctPayEndDt
   AND PC.OFF_CYCLE    IN ($SlctOffCycleA, $SlctOffCycleB)
   AND PC.PAGE_NUM     BETWEEN #Del_PageFrom AND #Del_PageThru
   AND PE.COMPANY      = PC.COMPANY
   AND PE.PAYGROUP     = PC.PAYGROUP
   AND PE.PAY_END_DT   = PC.PAY_END_DT
   AND PE.OFF_CYCLE    = PC.OFF_CYCLE
   AND PE.PAGE_NUM     = PC.PAGE_NUM
   AND PE.LINE_NUM     = PC.LINE_NUM
   AND PE.SEPCHK       = PC.SEPCHK
   AND PC.EMPLID       = PS_PY_TL_PYBL_REV.EMPLID
   AND PC.EMPL_RCD     = PS_PY_TL_PYBL_REV.EMPL_RCD
   AND PC.FORM_ID      = PS_PY_TL_PYBL_REV.FORM_ID
   AND PC.PAYCHECK_NBR = PS_PY_TL_PYBL_REV.PAYCHECK_NBR)
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PY_TL_PYBL_REV (Pay Other Earnings)'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PY_TL_PYBL_REV
WHERE EXISTS (
 SELECT 'X'
  FROM PS_PAY_CHECK PC, PS_PAY_EARNINGS PE, PS_PAY_OTH_EARNS POE
 WHERE PC.COMPANY      = $SlctCompany
   AND PC.PAYGROUP     = $SlctPayGroup
   AND PC.PAY_END_DT   = $SlctPayEndDt
   AND PC.OFF_CYCLE    IN ($SlctOffCycleA, $SlctOffCycleB)
   AND PC.PAGE_NUM     BETWEEN #Del_PageFrom AND #Del_PageThru
   AND PE.COMPANY      = PC.COMPANY
   AND PE.PAYGROUP     = PC.PAYGROUP
   AND PE.PAY_END_DT   = PC.PAY_END_DT
   AND PE.OFF_CYCLE    = PC.OFF_CYCLE
   AND PE.PAGE_NUM     = PC.PAGE_NUM
   AND PE.LINE_NUM     = PC.LINE_NUM
   AND PE.SEPCHK       = PC.SEPCHK
   AND POE.COMPANY     = PE.COMPANY
   AND POE.PAYGROUP    = PE.PAYGROUP
   AND POE.PAY_END_DT  = PE.PAY_END_DT
   AND POE.OFF_CYCLE   = PE.OFF_CYCLE
   AND POE.PAGE_NUM    = PE.PAGE_NUM
   AND POE.LINE_NUM    = PE.LINE_NUM
   AND POE.ADDL_NBR    = PE.ADDL_NBR
   AND PC.EMPLID       = PS_PY_TL_PYBL_REV.EMPLID
   AND PC.EMPL_RCD     = PS_PY_TL_PYBL_REV.EMPL_RCD
   AND PC.FORM_ID      = PS_PY_TL_PYBL_REV.FORM_ID
   AND PC.PAYCHECK_NBR = PS_PY_TL_PYBL_REV.PAYCHECK_NBR)
end-SQL

 end-if

  do Update-Other-Checks

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_LINE'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_LINE
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_EARNINGS'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_EARNINGS
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_OTH_EARNS'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_OTH_EARNS
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL
!*-----------RLW0001 (For Retropay Interest) begin --------*

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_RETROPAY_EARNS'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_RETROPAY_EARNS
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
  AND ERNCD IN (SELECT GVT_ERNCD_INTEREST
                FROM PS_PAYGROUP_TBL)
end-SQL

!*-----------RLW0001 (For Retropay Interest) end --------*

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_ONE_TIME'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_ONE_TIME
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_TAX_OVRD'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_TAX_OVRD
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_CTX_OVRD'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_CTX_OVRD
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_CHECK'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_CHECK
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_TAX'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_TAX
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_TAX_1042'
begin-SQL on-error=Sql-Statement-Error                               !HP99999
DELETE FROM PS_PAY_TAX_1042                                          !HP99999
WHERE COMPANY    = $SlctCompany                                      !HP99999
  AND PAYGROUP   = $SlctPayGroup                                     !HP99999
  AND PAY_END_DT = $SlctPayEndDt                                     !HP99999
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)                  !HP99999
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru               !HP99999
end-SQL                                                              !HP99999

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_TAX_CAN'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_TAX_CAN
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_INS_EARNS'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_INS_EARNS
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_DEDUCTION'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_DEDUCTION
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_GARNISH'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_GARNISH
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_SPCL_EARNS'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_SPCL_EARNS
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_GARN_OVRD'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_GARN_OVRD
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

  let $err-statement = 'Delete-Sheets, DELETE FROM PS_PAY_MESSAGE'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_PAY_MESSAGE
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL

!*<BEGIN>-------------RLM--102797--FINAL-CHECK--------------------*
  let $err-statement = 'Delete-Sheets, UPDATE PS_TERM_RQST'
begin-SQL on-error=Sql-Statement-Error
UPDATE PS_TERM_RQST
SET TERM_PROC_STATUS = 'N',
    PAY_END_DT = NULL,
    OFF_CYCLE = ' ',
    PAGE_NUM = 0,
    LINE_NUM = 0
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SQL
!*<END>---------------RLM--102797--FINAL-CHECK--------------------*

!*-----------ENH0001 begin----------------------------------------*

!*-----------Add logic to update past Pay Limits/Caps that were---*
!*-----------already loaded into paysheets------------------------*
if $FEDFunc = 'Y'
    if $Calendar_YR = 'Y'
          let $err-statement = 'Delete-Sheets, UPDATE PS_GVT_PAY_LIMITS'
        begin-SQL on-error=Sql-Statement-Error
        UPDATE PS_GVT_PAY_LIMITS
           SET GVT_PAY_PROCESS = 'C'
              ,DT_COMPLETED = NULL
        WHERE COMPANY      = $SlctCompany
          AND PAYGROUP     = $SlctPayGroup
          AND DT_COMPLETED = $SlctPayEndDt
          AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
          AND GVT_PAY_PROCESS = 'P'
        end-SQL

          let $err-statement = 'Delete-Sheets, UPDATE PS_GVT_PAY_LIMITS'
        begin-SQL on-error=Sql-Statement-Error
        UPDATE PS_GVT_PAY_LIMITS
           SET GVT_PAY_PROCESS = 'C'
        WHERE COMPANY      = $SlctCompany
          AND PAYGROUP     = $SlctPayGroup
          AND DT_COMPLETED IS NULL
          AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
          AND GVT_PAY_PROCESS = 'X'
        end-SQL
    end-if

!*-----------Add logic to delete Pay Limits/Caps processing-------*
!*-----------that was created during paysheet creation------------*
      let $err-statement = 'Delete-Sheets, DELETE FROM PS_GVT_PAY_LIMITS'
    begin-SQL on-error=Sql-Statement-Error
    DELETE FROM PS_GVT_PAY_LIMITS
    WHERE COMPANY    = $SlctCompany
      AND PAYGROUP   = $SlctPayGroup
      AND PAY_END_DT = $SlctPayEndDt
      AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
    end-SQL
end-if
!*-----------ENH0001 end------------------------------------------*

end-procedure

!*******************************
begin-procedure OncycleTLDelete
!*******************************

  let $OncycleTLDelete = 'Y'
  let $err-statement = 'OncycleTLDelete, DELETE FROM PS_TL_XREF_TBL'
begin-SQL on-error=Sql-Statement-Error
DELETE FROM PS_TL_XREF_TBL
 WHERE PAY_SYSTEM = 'NA'
   AND SEQ_NBR IN (SELECT DISTINCT SEQ_NBR
                    FROM PS_TL_PAYABLE_TIME
                   WHERE PAYROLL_REQ_NUM IN (SELECT PAYROLL_REQ_NUM
                                              FROM PS_PY_LDTL_TBL
                                             WHERE RUN_ID = $SlctRunID
                                              AND PROCESS_ON_OFF = 'O'
                                              AND PAY_SYSTEM = 'NA'))
end-SQL

  let $err-statement = 'OncycleTLDelete, UPDATE PS_TL_PAYABLE_TIME'
begin-SQL on-error=Sql-Statement-Error
UPDATE PS_TL_PAYABLE_TIME
   SET PAYABLE_STATUS = 'RP'
      ,TL_PYBL_REASON_CD = 'CAN'
 WHERE PAYABLE_STATUS <> 'PD'
   AND PAYABLE_STATUS <> 'DL'
   AND PAYROLL_REQ_NUM IN (SELECT PAYROLL_REQ_NUM
                             FROM PS_PY_LDTL_TBL
                            WHERE RUN_ID = $SlctRunID
                              AND PROCESS_ON_OFF = 'O'
                              AND PAY_SYSTEM = 'NA')
end-SQL

  let $err-statement = 'OncycleTLDelete, UPDATE PS_TL_PAYABLE_TIME'
begin-SQL on-error=Sql-Statement-Error
UPDATE PS_TL_PAYABLE_TIME
   SET PAYROLL_REQ_NUM = 0
 WHERE PAYROLL_REQ_NUM IN (SELECT PAYROLL_REQ_NUM
                             FROM PS_PY_LDTL_TBL
                            WHERE RUN_ID = $SlctRunID
                              AND PROCESS_ON_OFF = 'O'
                              AND PAY_SYSTEM = 'NA')
end-SQL


end-procedure


!********************************
begin-procedure OffcycleTLDelete
!********************************

begin-select
xrefck.SEQ_NBR      &xrefck.seq_nbr

   do Update-Payable-Time-Status
   do Update-Payroll-Req-Num

FROM PS_TL_XREF_TBL xrefck
WHERE xrefck.PAY_SYSTEM = 'NA'
 AND xrefck.XREF_NUM = #upd_xref_num
end-select

   do Delete-Xref-Num
   if #upd_xref_num > 0

       do Update-Closed-Time
   end-if
end-procedure


!******************************************
begin-procedure Update-Payable-Time-Status
!******************************************
  let $err-statement = 'Update-Payable-Time-Status, UPDATE PS_TL_PAYABLE_TIME'
begin-sql on-error=Sql-Statement-Error
UPDATE PS_TL_PAYABLE_TIME
   SET PAYABLE_STATUS = 'RP'
      ,TL_PYBL_REASON_CD = 'CAN'
 WHERE PAYABLE_STATUS <> 'PD'
   AND PAYABLE_STATUS <> 'DL'
   AND SEQ_NBR = &xrefck.seq_nbr
end-sql

end-procedure


!**************************************
begin-procedure Update-Payroll-Req-Num
!**************************************
  let $err-statement = 'Update-Payroll-Req-Num, UPDATE PS_TL_PAYABLE_TIME'
begin-sql on-error=Sql-Statement-Error
UPDATE PS_TL_PAYABLE_TIME
   SET PAYROLL_REQ_NUM = 0
 WHERE SEQ_NBR = &xrefck.seq_nbr
end-sql

end-procedure


!*******************************
begin-procedure Delete-Xref-Num
!*******************************
  let $err-statement = 'Delete-Xref-Num, DELETE FROM PS_TL_XREF_TBL'
begin-sql on-error=Sql-Statement-Error
DELETE FROM PS_TL_XREF_TBL
 WHERE PAY_SYSTEM = 'NA'
  AND XREF_NUM = #upd_xref_num
end-sql

end-procedure


!*********************************
begin-procedure Update-Closed-Time
!*********************************

  let #PyRqstNbr = #upd_xref_num
  Divide 1000000000 into #PyRqstNbr Round=0 On-Error=Zero

  if #PyRqstNbr    <> #OldPyRqstNbr   or
     $upd_emplid   <> $Oldupd_emplid  or
     #upd_empl_rcd <> #Oldupd_empl_rcd


    let #OldPyRqstNbr    = #PyRqstNbr
    let $Oldupd_emplid   = $upd_emplid
    let #Oldupd_empl_rcd = #upd_empl_rcd

    let $err-statement = 'Update-Payable-Time-Status2, UPDATE PS_TL_PAYABLE_TIME'
begin-sql on-error=Sql-Statement-Error
UPDATE PS_TL_PAYABLE_TIME
   SET PAYABLE_STATUS  = 'RP',
       PAYROLL_REQ_NUM = 0
 WHERE PAYABLE_STATUS  = 'CL'
   AND EMPLID          = $upd_emplid
   AND EMPL_RCD        = #upd_empl_rcd
   AND PAYROLL_REQ_NUM = #PyRqstNbr
end-sql

  end-if

end-procedure


!**********************************
begin-procedure Update-Cycle-Flags
!**********************************

do Count-Offcycle-Checks

if #Chk_Cnt = 0

  let $err-statement = ' Update-Cycle-Flags, UPDATE PS_PAY_CALENDAR'
begin-SQL on-error=Sql-Statement-Error
UPDATE PS_PAY_CALENDAR SET PAY_OFF_CYCLE = 'N'
WHERE COMPANY    = $SlctCompany
  and PAYGROUP   = $SlctPayGroup
  and PAY_END_DT = $SlctPayEndDt;
end-SQL

end-if

end-procedure

!*************************************
begin-procedure Count-Offcycle-Checks
!*************************************

  move 0 to #Chk_Cnt

begin-SELECT
COUNT(*) &Chk_Cnt

  move &Chk_Cnt to #Chk_Cnt

FROM PS_PAY_CHECK  XY
WHERE XY.COMPANY    = $SlctCompany
  AND XY.PAYGROUP   = $SlctPayGroup
  AND XY.PAY_END_DT = $SlctPayEndDt
  AND XY.OFF_CYCLE  = 'Y'
  AND XY.PAYCHECK_STATUS IN ('C','V')
end-SELECT

end-procedure


!************************************
begin-procedure Update-Pay-Run-Flags
!************************************

  let $err-statement = 'Update-Pay-Run-Flags, UPDATE PS_PAY_CALENDAR'
begin-SQL on-error=Sql-Statement-Error
UPDATE PS_PAY_CALENDAR SET PAY_SHEETS_RUN='N'
                          ,PAY_PRECALC_RUN='N'
                          ,PAY_CALC_RUN='N'
                          ,SINGLE_CHECK='N'
WHERE COMPANY    = $SlctCompany
  and PAYGROUP   = $SlctPayGroup
  and PAY_END_DT = $SlctPayEndDt;
end-SQL

end-procedure


!********************************
begin-procedure Exception-Report
!********************************

  print $SlctCompany    (+1,1)
  print $SlctPayGroup   (0,12)
  print $SlctPayEndDt   (0,21)
  do Format-Number(#Rpt_Page, $out, '99999')
  print $out            (0,45) ! Changed from 35 to 45 as corr. hdg has also shifted
  print #Check_Count    (0,65) ! Changed from 45 to 65 as corr. hdg. has also shifted
end-procedure


!**********************************
begin-procedure  Reset-Prior-Flags
!**********************************

  move &A.Company    to $SlctCompany
  move &A.PayGroup   to $SlctPayGroup
  move &A.Pay_End_Dt to $SlctPayEndDt
  do Get-Prior-Calendar
  do Check-for-Pages

  if $PaySheets_Remain = 'N'
    do ReOpen-Prior-Off-Cycle
  end-if

end-procedure


!**********************************
begin-procedure Get-Prior-Calendar
!**********************************

begin-SELECT
XX.COMPANY
XX.PAYGROUP
XX.PAY_END_DT

FROM PS_PAY_CALENDAR XX
WHERE XX.COMPANY    = $SlctCompany
  AND XX.PAYGROUP   = $SlctPayGroup
  AND XX.PAY_END_DT =
      (SELECT MAX(PAY_END_DT)
         FROM PS_PAY_CALENDAR
        WHERE COMPANY    = XX.COMPANY
          AND PAYGROUP   = XX.PAYGROUP
          AND PAY_END_DT < $SlctPayEndDt)
end-SELECT

end-procedure


!*******************************
begin-procedure Check-for-Pages
!*******************************

  move 'N' to $PaySheets_Remain

begin-SELECT
ZZ.PAGE_NUM

  move 'Y' to $PaySheets_Remain

FROM PS_PAY_PAGE ZZ
WHERE ZZ.COMPANY    = $SlctCompany
  AND ZZ.PAYGROUP   = $SlctPayGroup
  AND ZZ.PAY_END_DT > &XX.Pay_End_Dt
end-SELECT

end-procedure


!**************************************
begin-procedure ReOpen-Prior-Off-Cycle
!**************************************

  let $err-statement = 'ReOpen-Prior-Off-Cycle, UPDATE PS_PAY_CALENDAR'
begin-SQL on-error=Sql-Statement-Error
UPDATE PS_PAY_CALENDAR SET PAY_OFF_CYCLE_CLS = 'N'
WHERE COMPANY    = &XX.Company
  and PAYGROUP   = &XX.PayGroup
  and PAY_END_DT = &XX.Pay_End_Dt;
end-SQL

end-procedure


!**********************
begin-procedure Update-Other-Checks
!**********************


begin-SELECT
S.EMPLID
  move &S.Emplid to $Update-EmplID
  do Set-Pay-Line-Status
FROM PS_PAY_EARNINGS S
WHERE COMPANY    = $SlctCompany
  AND PAYGROUP   = $SlctPayGroup
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND PAGE_NUM BETWEEN #Del_PageFrom AND #Del_PageThru
end-SELECT


end-procedure


!**********************
begin-procedure Set-Pay-Line-Status
!**********************

  let $err-statement = 'Set-Pay-Line-Status, UPDATE PS_PAY_EARNINGS'
begin-SQL on-error=Sql-Statement-Error
UPDATE PS_PAY_EARNINGS
SET PAY_LINE_STATUS = 'U'
WHERE COMPANY    = $SlctCompany
  AND PAY_END_DT = $SlctPayEndDt
  AND OFF_CYCLE IN ($SlctOffCycleA, $SlctOffCycleB)
  AND EMPLID = $Update-EmplID
  AND PAY_LINE_STATUS IN ('C','P')
end-SQL

end-procedure


!**********************
begin-procedure Sql-Statement-Error
!**********************
  show $err-statement
  show ' Error : ' $sql-error
end-procedure


#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'payinit.sqc'   !Report Initialization and Timing
#Include 'payrctl3.sqc'  !Select-Paramenters procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
