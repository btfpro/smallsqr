
!***************************************
!  FGHR033:  Requisition Cost Analysis *
!***************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2006/07/19:13:42:04                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
!
!***********************************************************************

#include 'setenv.sqc'   !Set environment
Begin-Setup
#Include 'ptpsl215.sqc'  !Printer and page-size initialization
End-Setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-procedure Initialization
  move 0 to #NumExpCds
  do Get_Field_information ('FGHR033',   'DEPT_TOTAL',   $DEPT_TOTAL,    #DW)
  do Get_Field_information ('FGHR033',   'COMP_TOTAL',   $COMP_TOTAL,    #DW)
  create-array name=Totals size=2 field=ExpCd:char:50                -
                                  field=ExpCdTotal:number:50         -
                                  field=label:char
  put $DEPT_TOTAL        into Totals(0) label
  put $COMP_TOTAL        into Totals(1) label
end-procedure

begin-Heading 8
  do Get_Field_information ('FGHR033',   'REPORT_TITLE', $REPORTTITLE,   #DW)
  #Include 'stdhdgtr.sqc'
  do Get_Field_information ('HR',       'STATUS',       $STATUS,        #DW)
  do Get_Field_information ('HR',       'JOBCODE1',     $JOBCODE1,      #DW)
  do Get_Field_information ('HR',       'JOBCODE2',     $JOBCODE2,      #DW)
  do Get_Field_information ('HR',       'TITLE',        $TITLE,         #DW)
  do Get_Field_information ('HR',       'AMOUNT',       $AMOUNT,        #DW)
  do Get_Field_information ('FGHR033',   'DEPARTMENT',   $DEPT,          #DW)
  do Get_Field_information ('FGHR033',   'REQ_NUMBER1',  $REQNUM1,       #DW)
  do Get_Field_information ('FGHR033',   'REQ_NUMBER2',  $REQNUM2,       #DW)
  do Get_Field_information ('FGHR033',   'POSN_NUMBER1', $POSNNUM1,      #DW)
  do Get_Field_information ('FGHR033',   'POSN_NUMBER2', $POSNNUM2,      #DW)
  do Get_Field_information ('FGHR033',   'RECRUITER',    $RECRUITER,     #DW)
  do Get_Field_information ('FGHR033',   'DURATION',     $DURATION,      #DW)
  do Get_Field_information ('FGHR033',   'APPLICANT',    $APPLICANT,      #DW)
  do Get_Field_information ('FGHR033',   'EXPENSE_TYPE', $EXPENSETYPE,   #DW)
  do Get_Field_information ('FGHR033',   'MULTI_CURRENCY',$MULTICURRENCY,#DW)
  do Get_Field_information ('FGHR033',   'REQ_TOTAL',    $REQTOTAL,      #DW)
  do Get_Field_information ('FGHR033',   'EXPENSES_TOTAL',$EXPENSESTOTAL,#DW)
  do Get_Field_information ('FGHR033',   'AVERAGE_COST', $AVERAGECOST,   #DW)
  print $DEPT                   (3,1, 11)
  let $HdgDeptID=RTRIM($DeptID,' ')
!cvcvcv  print $HdgDeptID              (0,13, 1)
  print $HdgDeptID              (0,13)
  if $DeptID <> $PriorDeptID
    do Get-Department-Name
    move $DeptID to $PriorDeptID
  end-if
  print $DeptName               (0,+2, 44)


  if #MultiCurr
    print $MULTICURRENCY        (0,75)
    print $ReportCurr           (0,+1)
  end-if

  print $REQNUM1                (+3,1,11)
  print $JOBCODE1               (,13,4)
  print $POSNNUM1               (,18)
  print $REQNUM2                (+1,1,11)
  print $JOBCODE2               (,13,4)
  print $POSNNUM2               (,18,8)
  print $STATUS                 (,27,10)
  print $TITLE                  (,38,10)
  print $RECRUITER              (0,69,30)
  print $APPLICANT              (0,115,45)
  print $DURATION               (0,151,10)
  print $EXPENSETYPE            (0,162,32)
  print $AMOUNT                 (0,195)
end-Heading

begin-procedure Init-Report

  move 'FGHR033' to $ReportID
  move $BaseCurr to $ReportCurr
  move $BaseRtType to $ReportRtType
  move 'W' to $ReportMsgType  !Warning

  do Stdapi-Init

  if $prcs_process_instance = ''
    !No Prompt
  else
    do Select-Parameters
  end-if
  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')
  do Installation-Values

end-procedure

begin-procedure Get-Values
let $language_cd = $PRCS_LANGUAGE_CD
end-procedure

!***********************************************************************
!  PROC Process-Main
!         Main Procedure
!***********************************************************************

Begin-Procedure Process-Main
Begin-SELECT
A.BUSINESS_UNIT
   LET $BU = RTRIM(&A.BUSINESS_UNIT,' ')
A.DEPTID         ()  on-break print=never level=1 procedure=Dept-Change
  move &A.DeptID to $DeptID
A.HRS_JOB_OPENING_ID                  (1,1,11)
  move &A.HRS_JOB_OPENING_ID to $Job_Req_Nbr

  do Get-Jobcode
  print $Jobcode              (0,13,4)

  do Get-Position-Nbr
  print $Position_Nbr         (0,18,19)

  if $PositionMgmt <> 'N'
     do Get-Position-Title
     print $PosName           (0,38)
  else
     do Get-Job-Title
     print $JobTitle          (0,38)
  end-if

!A.STATUS_CODE
!  move 'STATUS_CODE'   to $FieldName
!  move &A.STATUS_CODE  to $FieldValue
!  do Read-Translate-Table
!  print $XlatShortName     (0,27,41)
!  if &A.STATUS_CODE = 'F'
!    add 1 to #Hires
!  end-if

ST.COMPLETE_STS_IND
ST.DESCRSHORT
  move 'STATUS'           to $FieldName
  move &ST.DESCRSHORT     to $FieldValue
  print $FieldValue         (0,27,41)
  if &ST.COMPLETE_STS_IND = 'Y'
    add 1 to #Hires
  end-if

A.RECRUITER_ID
  let $EMPLID = &A.RECRUITER_ID
  let $EMPLID = RTRIM($EMPLID, ' ')
  DO Get-Employee-Name
  PRINT $Name                      (0,69,78)
A.OPEN_DT                       &OPEN_DT
A.CLOSE_DT                              &CLOSE_DT

  if (&OPEN_DT <> '' and &CLOSE_DT <> '')
     Do Diff-Date(&CLOSE_DT,&OPEN_DT,#wkYears, #wkMonths, #wkDays)
     Do Format-Number(#wkDays, $out, '999999999')
     print $out (0,150)
  end-if

  do Get-Expenses
  print $REQTOTAL         (+2,151,31)
  do Format-Amt(#RequisitionTotal, $out, '999,999,999,999.99',$ReportCurr, $curout)
  print $out      (0,183)

  NEXT-LISTING SKIPLINES=1 NEED=8

 FROM PS_HRS_JO_I A, PS_HRS_STS_JO_I ST
WHERE A.STATUS_CODE = ST.STATUS_CODE
ORDER BY A.DEPTID, A.HRS_JOB_OPENING_ID
END-SELECT
  move 'Y' to $End
  do Dept-Change
END-PROCEDURE

!***********************************************************************
!  PROC Get-Expenses
!***********************************************************************

BEGIN-PROCEDURE Get-Expenses
  move 1 to #Line
  move 0 to #RequisitionTotal
BEGIN-SELECT

E.EXPENSE_CD
  move 'EXPENSE_CD'     to $FieldName
  move &E.Expense_Cd    to $FieldValue
  do Read-Translate-Table
  print $XlatLongName             (#Line,162)

E.HRS_PERSON_ID
  let #APPLID = &E.HRS_PERSON_ID
!  let #APPLID = RTRIM($APPLID, ' ')
  DO Get-Applicant-Name
  PRINT $APPLNAME                  (#Line,115)

  Do Sum-Amount
  do Format-Amt(#TotalExpense, $out, '999,999,999,999.99',$ReportCurr, $curout)
  print $out (#Line,183)

  add #TotalExpense to #RequisitionTotal
  add #TotalExpense to #DeptTotal

  move 0 to #i
  WHILE #i <= #NumExpCds
    GET $ExpCd from TOTALS(0) EXPCD(#I)
    if $ExpCd = &E.Expense_Cd
      ARRAY-ADD #TotalExpense to TOTALS(0) EXPCDTOTAL(#I)
      ARRAY-ADD #TotalExpense to TOTALS(1) EXPCDTOTAL(#I)
      break                                                !exit while
    end-if
    if RTRIM($ExpCd, ' ') = ''
      PUT &E.Expense_Cd #TotalExpense  -
          INTO TOTALS(0) EXPCD(#I) EXPCDTOTAL(#I)
      PUT &E.Expense_Cd #TotalExpense  -
          INTO TOTALS(1) EXPCD(#I) EXPCDTOTAL(#I)
      add 1 to #NumExpCds
      break                                                !exit while
    end-if
    add 1 to #i
  END-WHILE
  add 1 to #Line

FROM PS_HRS_JO_EXP_I E
WHERE E.HRS_JOB_OPENING_ID = &A.HRS_JOB_OPENING_ID
GROUP BY E.HRS_JOB_OPENING_ID, E.EXPENSE_CD, E.HRS_PERSON_ID
END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC Sum-Amount
!***********************************************************************
BEGIN-PROCEDURE Sum-Amount

Let #TotalExpense = 0

BEGIN-SELECT
F.EXPENSE_AMT
F.CURRENCY_CD
F.CHARGE_DT

    if #MultiCurr and &F.Currency_Cd <> $ReportCurr
      do ConvertCurrency(&F.Expense_Amt,&F.Currency_Cd,$ReportCurr
                         $ReportRtType,&F.Charge_Dt,#Expense_Amt,
                         $ReportMsgType)
      let #TotalExpense = #TotalExpense + #Expense_Amt
    else
      let #TotalExpense = #TotalExpense + &F.Expense_Amt
    end-if

 FROM PS_HRS_JO_EXP_I F
WHERE F.HRS_JOB_OPENING_ID = &A.HRS_JOB_OPENING_ID
  AND F.EXPENSE_CD = &E.Expense_Cd
END-SELECT
END-PROCEDURE

!***********************************************************************
!  PROC Installation-Values
!***********************************************************************

BEGIN-PROCEDURE Installation-Values

begin-SELECT
I.POSITION_MGMT
   move &I.POSITION_MGMT to $PositionMgmt
FROM PS_INSTALLATION I
end-SELECT

END-PROCEDURE

!***********************************************************************
!  PROC Dept-Change
!***********************************************************************
BEGIN-PROCEDURE Dept-Change

  next-listing skiplines=1 need=6
  print $EXPENSESTOTAL          (1,15,36)

  do Format-Amt(#DeptTotal, $out, '999,999,999,999.99',$ReportCurr,$curout)

  print $out   (0,52)

  print $AVERAGECOST   (2,28,23)
  move #DeptTotal to #CostPerHire
  if #Hires > 0
    divide #Hires into #CostPerHire
  else
    move 0 to #CostPerHire
  end-if
  do Format-Amt(#CostPerHire, $out, '999,999,999,999.99',$ReportCurr,$curout)
  print $out                            (0,52)

  move 1 to #line
  move 0 to #i
  while #i <= #NumExpCds
    get $ExpCd #ExpCdTotal from Totals(0) ExpCd(#i) ExpCdTotal(#i)
    if #ExpCdTotal <> 0
      move 'EXPENSE_CD'     to $FieldName
      move $ExpCd           to $FieldValue
      do Read-Translate-Table
      print $XlatLongName        (#line,162)
      do Format-Amt(#ExpCdTotal, $out, '999,999,999,999.99',$ReportCurr,$curout)
      print $out         (#line,183)
      put 0  into Totals(0) ExpCdTotal(#i)
      put '' into Totals(0) ExpCd(#i)
    end-if
    add 1 to #i
    add 1 to #Line
  end-while

  move 0  to #DeptTotal
  move 0  to #hires

  if $End = 'Y'
    do Reset
  end-if
  new-page
END-PROCEDURE

!***********************************************************************
!  PROC Get-Jobcode
!***********************************************************************

BEGIN-PROCEDURE Get-Jobcode

begin-SELECT
GRJ.JOBCODE
  move &GRJ.JOBCODE to $JOBCODE
FROM  PS_HRS_JO_JOBCD_I GRJ
WHERE GRJ.HRS_JOB_OPENING_ID = $Job_Req_Nbr
end-SELECT

end-procedure

!***********************************************************************
!  PROC Get-Position-Nbr
!***********************************************************************

BEGIN-PROCEDURE Get-Position-Nbr

begin-SELECT
GRP.POSITION_NBR
  move &GRP.POSITION_NBR to $Position_Nbr
FROM  PS_HRS_JO_POSN_I GRP
WHERE GRP.HRS_JOB_OPENING_ID = $Job_Req_Nbr
end-SELECT

end-procedure


#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getposnm.sqc'  !Get-Position-Name procedure
#Include 'getempnm.sqc'  !Get-Employee-Name and Get-Applicant-Name
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !Routines that calculate dates
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'  !Routines to Translate SQR
#Include 'useprntr.sqc'
