!***********************************************************************
!  ABS005NL  : Illness Statistics                                      *
!  IMPORTANT : First run ABS702NL, Create Statictics, THEN ABS005NL    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!
!          $Date:  2006/09/15:08:01:50                                 
!       $Release:  HR9                                                 
!      $Revision:  102                                                 
!                                                                      *
!                                                                      *
! Changes made to include selection on hierarchy of departments:       *
! Include field NL_Ind_hierarchy on run control record and panel       *
!***********************************************************************


#include 'setenv.sqc'    !Set environment

Begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

#define ColTot  41
#define ColMan  54
#define ColVrw  66


begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  if $doorgaan != 'N'
    do Maak-Array
    do Process-Main
  else
    display 'This program should be started from within a PeopleSoft menu'
  end-if
  do commit-transaction
  do Reset
  do Stdapi-Term
end-report

begin-heading 5
do Get_Field_Information ('ABS005NL', 'REPORT_TITLE', $REPORTTITLE,   #DW)
  #Include 'stdhdgtr.sqc'

end-heading

begin-procedure Init-Report

  move 'ABS005NL' to $ReportID
  do Stdapi-Init

  let $doorgaan = 'Y'
  if $prcs_process_instance = ''
    let $doorgaan = 'N'
  else
    do Select-Parameters
  end-if
do Init_Report_Translation ('ABS005NL', $language_cd)

do Get_Field_Information ('ABS005NL', 'DAY_COUNT',       $DAY_COUNT,   #DW)
do Get_Field_Information ('ABS005NL', 'DAYS',            $DAYS,   #DW)
do Get_Field_Information ('ABS005NL', 'DEPARTMENT',      $DEPT,   #DW)
do Get_Field_Information ('ABS005NL', 'EMPL_COUNT',      $EMPL_COUNT,   #DW)
do Get_Field_Information ('ABS005NL', 'EMPL_NOT_ILL',    $EMPL_NOT_ILL,   #DW)
do Get_Field_Information ('ABS005NL', 'FEMALE',          $FEMALE,   #DW)
do Get_Field_Information ('ABS005NL', 'FTE',             $FTE,   #DW)
do Get_Field_Information ('ABS005NL', 'HIERARCHY',       $HIERARCHY,   #DW)
do Get_Field_Information ('ABS005NL', 'ILLNESS_COUNT',   $ILLNESS_COUNT,   #DW)
do Get_Field_Information ('ABS005NL', 'ILLNESS_DAY',     $ILLNESS_DAY,   #DW)
do Get_Field_Information ('ABS005NL', 'ILLNESS_ENDED1',  $ILLNESS_ENDED1,   #DW)
do Get_Field_Information ('ABS005NL', 'ILLNESS_ENDED2',  $ILLNESS_ENDED2,   #DW)
do Get_Field_Information ('ABS005NL', 'ILLNESS_FREQ',    $ILLNESS_FREQ,   #DW)
do Get_Field_Information ('ABS005NL', 'ILLNESS_LENGTH1', $ILLNESS_LENGTH1,   #DW)
do Get_Field_Information ('ABS005NL', 'ILLNESS_LENGTH2', $ILLNESS_LENGTH2,   #DW)
do Get_Field_Information ('ABS005NL', 'ILLNESS_PERC',    $ILLNESS_PERC,   #DW)
do Get_Field_Information ('ABS005NL', 'ILLNESS_STARTED', $ILLNESS_STARTED,   #DW)
do Get_Field_Information ('ABS005NL', 'LONGTERM_ILL',    $LONGTERM_ILL,   #DW)
do Get_Field_Information ('ABS005NL', 'MALE',            $MALE,   #DW)
do Get_Field_Information ('ABS005NL', 'MATERNITY',       $MATERNITY,   #DW)
do Get_Field_Information ('ABS005NL', 'PARTIAL_ILL',     $PARTIAL_ILL,   #DW)
do Get_Field_Information ('ABS005NL', 'PERIOD1',         $PERIOD1,   #DW)
do Get_Field_Information ('ABS005NL', 'PERIOD2',         $PERIOD2,   #DW)
do Get_Field_Information ('ABS005NL', 'SEX',             $SEX,   #DW)
do Get_Field_Information ('ABS005NL', 'TOTAL',           $TOTAL,   #DW)

end-procedure

begin-procedure Get-Values
   let $language_cd = $PRCS_LANGUAGE_CD
   do Get-ILLStat-parameters
   let $Vanjr  = to_char(#Vanjr)
   let $Vanmnd = to_char(#Vanmnd)
   let $Temjr  = to_char(#Temjr)
   let $Temmnd = to_char(#Temmnd)
   let $IndLv  = Upper($IndLv)
   let $IndPv  = Upper($IndPv)
   let $IndZv  = Upper($IndZv)
   let $NL_Ind_hierarchy = Upper($NL_Ind_hierarchy)
   let $Dept_Id = Upper($Dept_Id)
end-procedure

begin-procedure Maak-Array

  create-array name=maand size=13 field=aantaldagen:number
  put 0  into maand(0) aantaldagen
  put 31 into maand(1) aantaldagen
  move 28  to  #Work_Month_Days
  if #Temjr=#Vanjr
    do Leap-Days(#Vanjr, #Work_Leap_Days)
  else
    if #Temmnd = 1
      do Leap-Days(#Vanjr, #Work_Leap_Days)
    else
      do Leap-Days(#Temjr, #Work_Leap_Days)
    end-if
  end-if
  let #Work_Month_Days =  #Work_Month_Days + #Work_Leap_Days
  put #Work_Month_Days into maand(2) aantaldagen
  put 31 into maand(3) aantaldagen
  put 30 into maand(4) aantaldagen
  put 31 into maand(5) aantaldagen
  put 30 into maand(6) aantaldagen
  put 31 into maand(7) aantaldagen
  put 31 into maand(8) aantaldagen
  put 30 into maand(9) aantaldagen
  put 31 into maand(10) aantaldagen
  put 30 into maand(11) aantaldagen
  put 31 into maand(12) aantaldagen

end-procedure

begin-procedure Process-Main
 do AantalMnd

 do Pers-Sterkte-Beschik-Kal-Dagen
 do Verzmd-Kalenderdgn
 do AangevangenZiekte
 do BeZiekteKlasse
 do BeeindigeZiekte
 do Arbeidsrelaties

 do Print-Rapport
end-procedure

!***********************************************************************
! Retrieve the number of reporting months
!***********************************************************************
Begin-procedure AantalMnd

 let #AantalMnd   = ((#Temjr - #Vanjr) * 12)
 let #AantalMnd   = #AantalMnd - #Vanmnd + #Temmnd + 1
 let #Jaarteller  = #Vanjr
 let #Maandteller = #Vanmnd
 get #AantalDgn from maand(#Maandteller) aantaldagen
 while not(#Jaarteller = #Temjr and #Maandteller = #Temmnd)
   add 1 to #Maandteller
   if #Maandteller > 12
     let #Maandteller = 1
     add 1 to #Jaarteller
   end-if
   get #hulpdagen from maand(#Maandteller) aantaldagen
   add #hulpdagen to #AantalDgn
 end-while

End-procedure


!***********************************************************************
! Retrieve the number of available employment calendar days
!***********************************************************************
Begin-procedure Pers-Sterkte-Beschik-Kal-Dagen

 let #FteMan = 0
 let #FteVrw = 0
 let #AvMan  = 0
 let #AvVrw  = 0
Begin-Select
EMPLID
EMPL_RCD
NL_FROM_YEAR
NL_FROM_MONTH
SEX                     &SEXfte
FTE_ILI_NLD             &#fte_ILI
FTE_ELI_NLD             &#fte_ELI
ILL_AVDAYS_ILI_NLD      &av_days_ILI
ILL_AVDAYS_ELI_NLD      &av_days_ELI
    if $IndLv = 'I'
       if &SEXfte = 'M'
          let #FteMan = #FteMan + &#fte_ILI
          let #AvMan  = #AvMan  + &av_days_ILI
       else
          let #FteVrw = #FteVrw + &#fte_ILI
          let #AvVrw = #AvVrw + &av_days_ILI
       end-if
    else
       if &SEXfte = 'M'
          let #FteMan = #FteMan + &#fte_ELI
          let #AvMan = #AvMan + &av_days_ELI
       else
          let #FteVrw = #FteVrw + &#fte_ELI
          let #AvVrw = #AvVrw + &av_days_ELI
       end-if
    end-if

from PS_ABS_STAT_NLD A, PS_DEPT_SEC_VW_NLD B
where B.SETID = $Setid
and B.NL_DEPTID_ROOT = $dept_id
and A.SETID = B.SETID
and A.DEPTID = B.DEPTID
and (($NL_IND_HIERARCHY = 'Y')
    or ($NL_Ind_hierarchy = 'N' and B.DEPTID =  B.NL_DEPTID_ROOT))
and NOT((#VANJR >= NL_FROM_YEAR)
        and NOT(NL_FROM_YEAR = #Vanjr and NL_FROM_MONTH >= #Vanmnd))
and NOT((NL_FROM_YEAR >= #Temjr)
        and NOT(NL_FROM_YEAR = #Temjr and NL_FROM_MONTH <= #Temmnd))
End-Select
 let #FteMan = #FteMan / #AantalMnd
 let #FteVrw = #FteVrw / #AantalMnd
 let #FteTot = #FteMan + #FteVrw
 let #AvTot  = (#AvMan + #AvVrw)

End-procedure Pers-Sterkte-Beschik-Kal-Dagen


!***********************************************************************
! Retrieve the number of illness calendar days
!***********************************************************************
Begin-procedure Verzmd-Kalenderdgn

 let #VkMan = 0
 let #VkVrw = 0
Begin-Select
SEX                     &SEXvk
ILL_DAYIPI_ILI_NLD      &day_IPI_ILI
ILL_DAYIPI_ELI_NLD      &day_IPI_ELI
ILL_DAYEPI_ILI_NLD      &day_EPI_ILI
ILL_DAYEPI_ELI_NLD      &day_EPI_ELI

  if  $IndLv = 'I'
    if $IndPv = 'I'
      let #dagen = &day_IPI_ILI
    else
      let #dagen = &day_EPI_ILI
    end-if
  else
    if $IndPv = 'I'
      let #dagen = &day_IPI_ELI
    else
      let #dagen = &day_EPI_ELI
    end-if
  end-if
  if &SEXvk = 'M'
    let #VkMan = #VkMan + #dagen
  else
    let #VkVrw = #VkVrw + #dagen
  end-if
from PS_ABS_STAT_NLD A, PS_DEPT_SEC_VW_NLD B
where B.SETID = $Setid
and B.NL_DEPTID_ROOT = $dept_id
and A.SETID = B.SETID
and A.DEPTID = B.DEPTID
and (($NL_IND_HIERARCHY = 'Y')
    or ($NL_Ind_hierarchy = 'N' and B.DEPTID =  B.NL_DEPTID_ROOT))
and NOT((#VANJR >= NL_FROM_YEAR)
        and NOT(NL_FROM_YEAR = #Vanjr and NL_FROM_MONTH >= #Vanmnd))
and NOT((NL_FROM_YEAR >= #Temjr)
        and NOT(NL_FROM_YEAR = #Temjr and NL_FROM_MONTH <= #Temmnd))
and not ($IndZv           = 'E' and
         ABSENCE_TYPE     = '502')
End-Select
 let #VkTot = (#VkMan + #VkVrw)

 do ZiekteVerzuimPerc
 do NietVerzmd-Arbrel

End-procedure

!***********************************************************************
! Retrieve the number of employments without illness
!***********************************************************************
Begin-procedure NietVerzmd-Arbrel

   let #NvMan = 0
   let #NvVrw = 0
Begin-Select
SEX                     &SEXnv
SUM(ILL_DAYIPI_ILI_NLD) &daynv_IPI_ILI
SUM(ILL_DAYIPI_ELI_NLD) &daynv_IPI_ELI
SUM(ILL_DAYEPI_ILI_NLD) &daynv_EPI_ILI
SUM(ILL_DAYEPI_ELI_NLD) &daynv_EPI_ELI
SUM(EMPL_RCD_ILI_NLD)   &emplnv_rcd_ILI
SUM(EMPL_RCD_ELI_NLD)   &emplnv_rcd_ELI

  if  $IndLv = 'I'
    let #AantArbRel = &emplnv_rcd_ILI
    if $IndPv = 'I'
      let #dagen = &daynv_IPI_ILI
    else
      let #dagen = &daynv_EPI_ILI
    end-if
  else
    let #AantArbRel = &emplnv_rcd_ELI
    if $IndPv = 'I'
      let #dagen = &daynv_IPI_ELI
    else
      let #dagen = &daynv_EPI_ELI
    end-if
  end-if

  if #dagen = 0
    if &SEXnv = 'M'
      let #NvMan = #NvMan + #AantArbRel
    else
      let #NvVrw = #NvVrw + #AantArbRel
    end-if
  end-if

from PS_ABS_STAT_NLD A, PS_DEPT_SEC_VW_NLD B
where B.SETID = $Setid
and B.NL_DEPTID_ROOT = $dept_id
and A.SETID = B.SETID
and A.DEPTID = B.DEPTID
and (($NL_IND_HIERARCHY = 'Y')
    or ($NL_Ind_hierarchy = 'N' and B.DEPTID =  B.NL_DEPTID_ROOT))
and NOT((#VANJR >= NL_FROM_YEAR)
        and NOT(NL_FROM_YEAR = #Vanjr and NL_FROM_MONTH >= #Vanmnd))
and NOT((NL_FROM_YEAR >= #Temjr)
        and NOT(NL_FROM_YEAR = #Temjr and NL_FROM_MONTH <= #Temmnd))
and not ($IndZv           = 'E' and
         ABSENCE_TYPE     = '502')
GROUP by EMPLID,EMPL_RCD,SEX
End-Select
 let #NvMan = #NvMan / #AantalMnd
 let #NvVrw = #NvVrw / #AantalMnd
 let #NvTot = (#NvMan + #NvVrw)

End-procedure

!***********************************************************************
! Determine the Illness Percentage
! Illness Percentage = (Illness Days / (#FTE's * #Days in Month)) * 100
!***********************************************************************
Begin-procedure ZiekteVerzuimPerc


 if #FteMan <> 0
    let #ZpMan = (#VkMan / (#FteMan * #AantalDgn)) * 100
 end-if
 if #FteVrw <> 0
    let #ZpVrw = (#VkVrw / (#FteVrw * #AantalDgn)) * 100
 end-if
 if #FteTot <> 0
    let #ZpTot = (#VkTot / (#FteTot * #AantalDgn)) * 100
 end-if

End-procedure ZiekteVerzuimPerc

!***********************************************************************
! Determine begin of Illness within month
!***********************************************************************
Begin-procedure AangevangenZiekte

 let #Azman = 0
 let #AzVrw = 0
 let #ZkMan = 0
 let #ZkVrw = 0
 let $vergdatum = To_Char(#Vanmnd)
 if length($vergdatum) = 1
   let $vergdatum = '0' || $vergdatum
 end-if
 let $vergdatum = To_Char(#Vanjr) || $vergdatum || '01'
 if $IndPv = 'I'
   do AangevangenZiekteInc
 else
   do AangevangenZiekteEx
 end-if
 let #AzTot = (#AzMan + #AzVrw)
 let #ZkTot = (#ZkMan + #ZkVrw)

End-procedure

!***********************************************************************
! Determine begin of Illness within month including Partial illness
!***********************************************************************
Begin-procedure AangevangenZiekteInc

Begin-Select
A.BEGIN_DT                &beginazi
A.SEX                     &SEXazi
SUM(A.ILL_DAYIPI_ILI_NLD) &dayazi_IPI_ILI
SUM(A.ILL_DAYIPI_ELI_NLD) &dayazi_IPI_ELI

  !* Tel het aantal aangevangen ziektegevallen

  do Format-DateTime(&beginazi, $begindatum, {DEFCMP}, '', '')
  if $begindatum >= $vergdatum
    if &SEXazi = 'M'
      let #AzMan = #AzMan + 1
    else
      let #AzVrw = #AzVrw + 1
    end-if
  end-if

  !* Tel het aantal ziektegevallen

  if ($IndLv = 'I' and &dayazi_IPI_ILI <> 0) or
     ($IndLv = 'E' and &dayazi_IPI_ELI <> 0)
    if &SEXazi = 'M'
      let #ZkMan = #ZkMan + 1
    else
      let #ZkVrw = #ZkVrw + 1
    end-if
  end-if

from PS_ABS_STAT_NLD A, PS_DEPT_SEC_VW_NLD B
where B.SETID = $Setid
and B.NL_DEPTID_ROOT = $dept_id
and A.SETID = B.SETID
and A.DEPTID = B.DEPTID
and (($NL_IND_HIERARCHY = 'Y')
    or ($NL_Ind_hierarchy = 'N' and B.DEPTID =  B.NL_DEPTID_ROOT))
and NOT((#VANJR >= A.NL_FROM_YEAR)
        and NOT(A.NL_FROM_YEAR = #Vanjr and A.NL_FROM_MONTH >= #Vanmnd))
and NOT((A.NL_FROM_YEAR >= #Temjr)
        and NOT(A.NL_FROM_YEAR = #Temjr and A.NL_FROM_MONTH <= #Temmnd))
and not ($IndZv           = 'E' and
     A.ABSENCE_TYPE       = '502')
and A.BEGIN_DT              IS not NULL
GROUP by A.EMPLID,A.EMPL_RCD,A.BEGIN_DT,SEX
End-Select

End-procedure

!***********************************************************************
! Determine begin of Illness within month excluding partial illness
!***********************************************************************
Begin-procedure AangevangenZiekteEx

Begin-Select
B.EMPLID
B.EMPL_RCD
B.NL_FROM_YEAR            &from_yearaze
B.NL_FROM_MONTH           &from_monthaze
B.BEGIN_DT                &beginaze
B.SEX                     &SEXaze
B.ILL_DAYEPI_ILI_NLD      &dayaze_EPI_ILI
B.ILL_DAYEPI_ELI_NLD      &dayaze_EPI_ELI
B.ILL_START_FULL_NLD       &start_fullaze
B.ILL_START_PART_NLD       &start_partaze

  if &start_fullaze = 'Y'
    if &SEXaze = 'M'
      let #AzMan = #AzMan + 1
    else
      let #AzVrw = #AzVrw + 1
    end-if
  end-if

  if &start_fullaze = 'Y' or (&from_yearaze = #Vanjr and &from_monthaze = #Vanmnd)
    if ($IndLv = 'I' and &dayaze_EPI_ILI <> 0) or
       ($IndLv = 'E' and &dayaze_EPI_ELI <> 0)
      if &SEXaze = 'M'
        let #ZkMan = #ZkMan + 1
      else
        let #ZkVrw = #ZkVrw + 1
      end-if
    end-if
  end-if

from PS_ABS_STAT_NLD B, PS_DEPT_SEC_VW_NLD C
where C.SETID = $Setid
and C.NL_DEPTID_ROOT = $dept_id
and B.SETID = C.SETID
and B.DEPTID = C.DEPTID
and (($NL_IND_HIERARCHY = 'Y')
    or ($NL_Ind_hierarchy = 'N' and C.DEPTID =  C.NL_DEPTID_ROOT))
and NOT((#VANJR >= B.NL_FROM_YEAR)
        and NOT(B.NL_FROM_YEAR = #Vanjr and B.NL_FROM_MONTH >= #Vanmnd))
and NOT((B.NL_FROM_YEAR >= #Temjr)
        and NOT(B.NL_FROM_YEAR = #Temjr and B.NL_FROM_MONTH <= #Temmnd))
and not ($IndZv           = 'E' and
     B.ABSENCE_TYPE       = '502')
and B.BEGIN_DT             IS not NULL
End-Select

End-procedure

!***********************************************************************
! Determine illness categories from absence parameters
!***********************************************************************
Begin-procedure BeZiekteKlasse

Begin-Select
ILL_LENG_CAT1_NLD        &cat1
ILL_LENG_CAT2_NLD        &cat2
ILL_LENG_CAT3_NLD        &cat3
ILL_LENG_CAT4_NLD        &cat4
ILL_LENG_CAT5_NLD        &cat5
ILL_LENG_CAT6_NLD        &cat6
ILL_LENG_CAT7_NLD        &cat7
ILL_LENG_CAT8_NLD        &cat8
from PS_ABS_PARAMETERS
End-Select

  create-array name=cat size=10 field=leng:number field=man:number field=vrouw:number

  put 0     0 0  into cat(0) leng man vrouw
  put &cat1 0 0  into cat(1) leng man vrouw
  put &cat2 0 0  into cat(2) leng man vrouw
  put &cat3 0 0  into cat(3) leng man vrouw
  put &cat4 0 0  into cat(4) leng man vrouw
  put &cat5 0 0  into cat(5) leng man vrouw
  put &cat6 0 0  into cat(6) leng man vrouw
  put &cat7 0 0  into cat(7) leng man vrouw
  put &cat8 0 0  into cat(8) leng man vrouw
  put 0     0 0  into cat(9) leng man vrouw

End-procedure

!***********************************************************************
! Determine return from Illness within month
!***********************************************************************
Begin-procedure BeeindigeZiekte

 let #BzMan = 0
 let #BzVrw = 0
 let #SmMan = 0
 let #SmVrw = 0
 let #vorigelengte = 0
 let $vorigeempl = ''
 let #vorigercd = 0
 let $vorigebegindatum = ''

Begin-Select
EMPLID                  &EMPLIDbz
EMPL_RCD               &empl_rcdbz
BEGIN_DT                &beginbz
NL_FROM_YEAR            &NL_FROM_YEARbz
NL_FROM_MONTH           &NL_FROM_MONTHbz
SEX                     &SEXbz
ILL_LENIPI_ILI_NLD      &len_IPI_ILI
ILL_LENIPI_ELI_NLD      &len_IPI_ELI
ILL_LENEPI_ILI_NLD      &len_EPI_ILI
ILL_LENEPI_ELI_NLD      &len_EPI_ELI


!*********************************************
! Correction calculation for double count    *
!*********************************************

 if  not(&EMPLIDbz = $vorigeempl AND &empl_rcdbz  = #vorigercd AND &beginbz = $vorigebegindatum)
   let #vorigelengte = 0
 end-if

!*********************************************
! count illness length per gender            *
!--------------------------------------------*
! count number of ended illnesses            *
!*********************************************

  if $IndPv = 'I' and $IndLv = 'I'
    let #lengte = &len_IPI_ILI - #vorigelengte
    let #vorigelengte = &len_IPI_ILI
  else
    if $IndPv = 'I' and $IndLv = 'E'
      let #lengte = &len_IPI_ELI - #vorigelengte
      let #vorigelengte = &len_IPI_ELI
    else
      if $IndPv = 'E' and $IndLv = 'I'
        let #lengte = &len_EPI_ILI - #vorigelengte
        let #vorigelengte = &len_EPI_ILI
      else
        if $IndPv = 'E' and $IndLv = 'E'
          let #lengte = &len_EPI_ELI - #vorigelengte
          let #vorigelengte = &len_EPI_ELI
        end-if
      end-if
    end-if
  end-if

  if &SEXbz ='M'
    let #BzMan = #BzMan + 1
    let #SmMan = #SmMan + #lengte
  else
    let #BzVrw = #BzVrw + 1
    let #SmVrw = #SmVrw + #lengte
  end-if

!**********************************************
! determine illness length category           *
!**********************************************

  GET #onder from CAT(1) LENG
  if #lengte >= #onder
    let #array-teller = 2
    GET #boven from CAT(#ARRAY-TELLER) LENG
    WHILE #boven <> 0 and #lengte >= #boven
      add 1 to #array-teller
      let #onder = #boven
      GET #boven from CAT(#ARRAY-TELLER) LENG
    END-WHILE
    let #array-teller = #array-teller - 1
    if &SEXbz = 'M'
      ARRAY-ADD 1 to CAT(#ARRAY-TELLER) MAN
    else
      ARRAY-ADD 1 to CAT(#ARRAY-TELLER) VROUW
    end-if
  end-if

!**********************************************
! Remember previous key values                *
!**********************************************

 let $vorigeempl       = &EMPLIDbz
 let #vorigercd        = &empl_rcdbz
 let $vorigebegindatum = &beginbz

from PS_ABS_STAT_NLD A, PS_DEPT_SEC_VW_NLD B
where B.SETID = $Setid
and B.NL_DEPTID_ROOT = $dept_id
and A.SETID = B.SETID
and A.DEPTID = B.DEPTID
and (($NL_IND_HIERARCHY = 'Y')
    or ($NL_Ind_hierarchy = 'N' and B.DEPTID =  B.NL_DEPTID_ROOT))
and NOT((#VANJR >= NL_FROM_YEAR)
        and NOT(NL_FROM_YEAR = #Vanjr and NL_FROM_MONTH >= #Vanmnd))
and NOT((NL_FROM_YEAR >= #Temjr)
        and NOT(NL_FROM_YEAR = #Temjr and NL_FROM_MONTH <= #Temmnd))
and not ($IndZv           = 'E' and
     ABSENCE_TYPE         = '502')
and BEGIN_DT              IS not NULL
and (   ($IndPv = 'I' and $IndLv = 'I' and ILL_ENDIPI_ILI_NLD = 'Y')
     or ($IndPv = 'I' and $IndLv = 'E' and ILL_ENDIPI_ELI_NLD = 'Y')
     or ($IndPv = 'E' and $IndLv = 'I' and ILL_ENDEPI_ILI_NLD = 'Y')
     or ($IndPv = 'E' and $IndLv = 'E' and ILL_ENDEPI_ELI_NLD = 'Y'))
order by EMPLID, EMPL_RCD, BEGIN_DT, NL_FROM_YEAR, NL_FROM_MONTH
End-Select

 let #BzTot = (#BzMan + #BzVrw)
 do Gem-Verzuimduur


End-procedure

!***********************************************************************
! Determine average illness length (for ended illnesses only)
!***********************************************************************
Begin-procedure Gem-Verzuimduur

 let #SmTot = (#SmMan + #SmVrw)

 if #BzMan <> 0
    let #GvMan = #SmMan / #BzMan
 else
    let #GvMan = 0
 end-if
 if #BzVrw <> 0
    let #GvVrw = #SmVrw / #BzVrw
 else
    let #GvVrw = 0
 end-if
 if #BzTot <> 0
    let #GvTot = #SmTot / #BzTot
 else
    let #GvTot = 0
 end-if

End-procedure

!***********************************************************************
! Retrieve employment records
!***********************************************************************
Begin-procedure Arbeidsrelaties

 let #AbMan = 0
 let #AbVrw = 0

Begin-Select
EMPLID                  &EMPLIDab
EMPL_RCD               &empl_rcdab
NL_FROM_YEAR            &yearab
NL_FROM_MONTH           &monthab
SEX                     &SEXab
EMPL_RCD_ILI_NLD       &rcd#_ILIab
EMPL_RCD_ELI_NLD       &rcd#_ELIab

  if $IndLv = 'I'
    if &SEXab = 'M'
      let #AbMan = #AbMan + &rcd#_ILIab
    else
      let #AbVrw = #AbVrw + &rcd#_ILIab
    end-if
  else
    if &SEXab = 'M'
      let #AbMan = #AbMan + &rcd#_ELIab
    else
      let #AbVrw = #AbVrw + &rcd#_ELIab
    end-if
  end-if

from PS_ABS_STAT_NLD A, PS_DEPT_SEC_VW_NLD B
where B.SETID = $Setid
and B.NL_DEPTID_ROOT = $dept_id
and A.SETID = B.SETID
and A.DEPTID = B.DEPTID
and (($NL_IND_HIERARCHY = 'Y')
    or ($NL_Ind_hierarchy = 'N' and B.DEPTID =  B.NL_DEPTID_ROOT))
and NOT((#VANJR >= NL_FROM_YEAR)
        and NOT(NL_FROM_YEAR = #Vanjr and NL_FROM_MONTH >= #Vanmnd))
and NOT((NL_FROM_YEAR >= #Temjr)
        and NOT(NL_FROM_YEAR = #Temjr and NL_FROM_MONTH <= #Temmnd))
End-Select

 let #AbTot = (#AbMan + #AbVrw) / #AantalMnd
 let #AbMan = #AbMan / #AantalMnd
 let #AbVrw = #AbVrw / #AantalMnd

 do MeldingsFreq

End-procedure

!***********************************************************************
! Determine Illness frequency
! Illness Frequency = #Newly Started Illnesses / #Employments
!***********************************************************************
Begin-procedure MeldingsFreq


 if #AbMan <> 0
   let #MfMan = #AzMan / #AbMan
 else
   let #MfMan = 0
 end-if
 if #AbVrw <> 0
   let #MfVrw = #AzVrw / #AbVrw
 else
   let #MfVrw = 0
 end-if
 if #AbTot <> 0
   let #MfTot = #AzTot / #AbTot
 else
   let #MfTot = 0
 end-if
End-procedure


Begin-procedure Print-Rapport

  print $DEPT                    (+1, 1, 23)
  print $dept_id                        (0, +2,10)
  move $dept_id to $DeptID
  !************************ Begin Comented For Resolution - 618052 *********************
        !do Get-Department-Name-with-SetID
  !************************ End Comented For Resolution - 618052 *********************

  !************************ Begin Resolution - 618052 *********************
      do Get-PSOptions-Language($PSOptions_Language_Cd)
      let $SetIDLang = $SetID
      if $curr_language_cd <> $Psoptions_Language_Cd
         do Get-Department-Name-Lang
         if $DeptName = ''
            do Get-Department-Name-with-SetID
         end-if
      else
         do Get-Department-Name-with-SetID
      end-if
  !************************ End Resolution - 618052  **********************
  print $DeptName                       (0,+2)
  print $PERIOD1                      (+1, 1, 23)
  let $Periode = $Vanmnd || '-' || $Vanjr || ' ' || $PERIOD2 || ' ' || $Temmnd || '-' || $Temjr
  print $periode                        (0, +2)
  print $MATERNITY          (+1, 1, 23)
  print $IndZv                          (0, +2)
  print $PARTIAL_ILL             (+1, 1, 23)
  print $IndPv                          (0, +2)
  print $LONGTERM_ILL            (+1, 1, 23)
  print $IndLv                          (0, +2)
  print $HIERARCHY         (+1, 1, 23)
  print $NL_Ind_hierarchy               (0, +2)

  print $TOTAL                         (+1, 45,8)
  print $SEX                            (0,  54)
  print $MALE                           (+1, 61,9)
  print $FEMALE                     (0,  71)

 print $ILLNESS_PERC           (+2, 1,39)
 print #ZpTot                              (0, {ColTot},12) edit 99999999.9
 print #ZpMan                              (0, {ColMan},21) edit 99999999.9
 print #ZpVrw                              (0, {ColVrw}) edit 99999999.9

 print $ILLNESS_FREQ                (+2, 1,39)
 print #MfTot                              (0, {ColTot},12) edit 99999999.9
 print #MfMan                              (0, {ColMan},21) edit 99999999.9
 print #MfVrw                              (0, {ColVrw}) edit 99999999.9

 print $ILLNESS_LENGTH1            (+2, 1,)
 print $ILLNESS_LENGTH2                (+1, 1,39)
 print #GvTot                              (0, {ColTot},12) edit 99999999.9
 print #GvMan                              (0, {ColMan},21) edit 99999999.9
 print #GvVrw                              (0, {ColVrw}) edit 99999999.9

 print $ILLNESS_ENDED1  (+2, 1,39)
 print #BzTot                              (0, {ColTot},12) edit 9999999999
 print #BzMan                              (0, {ColMan},21) edit 9999999999
 print #BzVrw                              (0, {ColVrw}) edit 9999999999

 let #prtcat = 999
 print $ILLNESS_ENDED2 (+2, 1)

 let #array-teller = 1
 get #onder #man #vrouw from cat(#array-teller)
   while #onder <> 0
     print #onder                              (+2, 25,3) edit 999
     print '-'                                 (0, 28)
     add 1 to #array-teller
     get #onder #nman #nvrouw from cat(#array-teller)
     if #onder != 0
       let #onderh = #onder - 1
       print #onderh                           (0, 29,3) edit 999
     else
       print '>>'                              (0, 29,3)
     end-if
     print $DAYS                              (0, 33,7)
     let #samen = #man + #vrouw

     print #samen                              (0, {ColTot},12) edit 9999999999
     print #man                                (0, {ColMan},21) edit 9999999999
     print #vrouw                              (0, {ColVrw}) edit 9999999999
     let #man   = #nman
     let #vrouw = #nvrouw
   end-while

 print $ILLNESS_STARTED (+2, 1,39)
 print #AzTot                              (0, {ColTot},12) edit 9999999999
 print #AzMan                              (0, {ColMan},21) edit 9999999999
 print #AzVrw                              (0, {ColVrw}) edit 9999999999

 print $ILLNESS_COUNT             (+2, 1,39)
 print #ZkTot                              (0, {ColTot},12) edit 9999999999
 print #ZkMan                              (0, {ColMan},21) edit 9999999999
 print #ZkVrw                              (0, {ColVrw}) edit 9999999999

 print $FTE        (+2, 1,39)
 print #FteTot                             (0, {ColTot},12) edit 99999999.9
 print #FteMan                             (0, {ColMan},21) edit 99999999.9
 print #FteVrw                             (0, {ColVrw}) edit 99999999.9

 print $EMPL_COUNT            (+2, 1,39)
 print #AbTot                              (0, {ColTot},12) edit 99999999.9
 print #AbMan                              (0, {ColMan},21) edit 99999999.9
 print #AbVrw                              (0, {ColVrw}) edit 99999999.9

 print $DAY_COUNT               (+2, 1,39)
 print #AvTot                              (0, {ColTot},12) edit 99999999.9
 print #AvMan                              (0, {ColMan},21) edit 99999999.9
 print #AvVrw                              (0, {ColVrw}) edit 99999999.9

 print $ILLNESS_DAY             (+2, 1,39)
 print #VkTot                              (0, {ColTot},12) edit 99999999.9
 print #VkMan                              (0, {ColMan},21) edit 99999999.9
 print #VkVrw                              (0, {ColVrw}) edit 99999999.9

 print $EMPL_NOT_ILL  (+2, 1,39)
 print #NvTot                              (0, {ColTot},12) edit 99999999.9
 print #NvMan                              (0, {ColMan},21) edit 99999999.9
 print #NvVrw                              (0, {ColVrw}) edit 99999999.9
End-procedure

#include 'stdapi.sqc'    !Routine to update Run status
#include 'hrgetnld.sqc'  !Get the reportparameters
#include 'hrctlnld.sqc'  !Get run control parameter values
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'tranctrl.sqc'  !Transaction control
#Include 'sqrtrans.sqc'
#include 'datewrk.sqc'   !Leap Date Logic
#include 'datemath.sqc'  !date logic
!************************ Begin Resolution - 618052 *********************
#Include 'prcslng.sqc'   !Get Language Codes,support for multiple language codes
 !************************ End Resolution - 618052 **********************