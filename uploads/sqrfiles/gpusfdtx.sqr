!**********************************************************************!
! gpusfdtx:  Quarterly Federal Tax Report - Employee Detail (USA)      !
!**********************************************************************!
!                                                                      !
!               Confidentiality Information:                           !
!                                                                      !
!                                                                      !
! This module contains confidential and proprietary information        !
! of Oracle; it is not to be copied, reproduced, or transmitted        !
! in any form, by any means, in whole or in part, nor is it to         !
! be used for any purpose other than that for which it is              !
! expressly provided under the applicable license agreement.           !
!                                                                      !
! Copyright (C) 2006 Oracle. All Rights Reserved.                      !
!                                                                      !
!**********************************************************************!
!                                                                      !
!          $Date:  2006/07/21:01:44:10                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      !
!**********************************************************************!

#include 'setenv.sqc'   !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization
#Include 'usarpt.sqc'   !USA-specific variables


begin-report
  do Stdapi-Term
  do Init-Report
  do Test-For-Territories
  do Process-Main
  do Stdapi-Term
  do delete-tmp
end-report

begin-procedure Init-Report
  move 'GPUSFDTX' to $ReportID
  move 'Quarterly Federal Tax Report - Employee Detail' to $ReportTitle
  display $ReportTitle
  do Init-DateTime
  do Init-Number
  do Get-EandG
  do Stdapi-Init
  do Select-Parameters


  move $PeriodEndDate to $AsOfDate  !for included procedures

end-procedure

begin-heading 14

#Include 'stdhdg01.sqc'  !standard heading 1
  if $Company <> $priorCompany
    do Get-Company-Data
    move $Company to $priorCompany
  end-if
  print $jurisdictiont     (4,2)
  do Format-DateTime($PeriodEndDate, $out, {DEFDATE}, '', '')
  print $out               (0,51)
  unstring $RptQtrYr  by '.' into $year $zeros
  Let $year = Ltrim($year, '0')
  print $year          (0, 80)
  print $CompanyName       (+2,12)
  print $CompnyAdd1        (+1,12)
  let $field = RTRIM($CompnyCity, ' ')
  print $field             (+1,12)                    !City
  print &CT.State          ()      edit ,bxx
  move &CT.Postal      to $Zip
  move $Zip            to $ZipExtsn ~~~~~~xxxx

  if instr($Zip,'-',6) = 0 and $ZipExtsn <> '    '
    let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
  end-if

  move $Zip         to $ZipExtsn ~~~~~xxxxx
  print $Zip               (0,+2)
  print 'Employer ID'      (+2,12)
  print &CT.GPUS_TAX_EIN    (0,+2) edit 099999999
  print ' '                                    (+2,2)
  print ' '                                    (0,15)
  print '       ------  Withholding  -----'    (0,35)
  print '       ------ Unemployment ------'    (0,70)
  print '       ------ FICA - OASDI ------'    (0,105)
  print '       ----- FICA - Medicare ----'    (0,140)

  print 'SSN'                                  (+1,2)
  print 'Name'                                 (0,15)
  print '       TxGrs QTD          Tax QTD'    (0,35)
  print '       TxGrs QTD          Tax QTD'    (0,70)
  print '       TxGrs QTD          Tax QTD'    (0,105)
  print '       TxGrs QTD          Tax QTD'    (0,140)



end-heading


begin-footing 11

  print 'Page Total'  (+1,10)
  do Format-Number(#PgTotTxGrsFWT, $out, '9,999,999,999.99mi')
  print $out       (0,35)
  do Format-Number(#PgTotTaxFWT, $out, '9,999,999,999.99mi')
  print $out       (0,52)
  do Format-Number(#PgTotTxGrsFUT, $out, '9,999,999,999.99mi')
  print $out       (0,70)
  do Format-Number(#PgTotTaxFUT, $out, '9,999,999,999.99mi')
  print $out       (0,87)
  do Format-Number(#PgTotTxGrsOASDI, $out, '9,999,999,999.99mi')
  print $out       (0,105)
  do Format-Number(#PgTotTaxOASDI, $out, '9,999,999,999.99mi')
  print $out       (0,122)
  do Format-Number(#PgTotTxGrsMEDI, $out, '9,999,999,999.99mi')
  print $out       (0,140)
  do Format-Number(#PgTotTaxMEDI, $out, '9,999,999,999.99mi')
  print $out       (0,157)

  print 'EMPLOYER:'  (+1,94)
  do Format-Number(#PgTotTxGrsOASDIR, $out, '9,999,999,999.99mi')
  print $out       (0,105)
  do Format-Number(#PgTotTaxOASDIR, $out, '9,999,999,999.99mi')
  print $out       (0,122)
  do Format-Number(#PgTotTxGrsMEDIR, $out, '9,999,999,999.99mi')
  print $out       (0,140)
  do Format-Number(#PgTotTaxMEDIR, $out, '9,999,999,999.99mi')
  print $out       (0,157)

  move 0 to #PgTotTxGrsFWT
  move 0 to #PgTotTaxFWT
  move 0 to #PgTotTxGrsFUT
  move 0 to #PgTotTaxFUT
  move 0 to #PgTotTxGrsOASDI
  move 0 to #PgTotTaxOASDI
  move 0 to #PgTotTxGrsMEDI
  move 0 to #PgTotTaxMEDI
  move 0 to #PgTotTxGrsOASDIR
  move 0 to #PgTotTaxOASDIR
  move 0 to #PgTotTxGrsMEDIR
  move 0 to #PgTotTaxMEDIR

  if $Print_Ju_Totals = 'Y'

    print $jurisdictiont (+1,10)
    print ' Total'       (0,+0)
    do Format-Number(#JuTotTxGrsFWT, $out, '9,999,999,999.99mi')
    print $out     (0,35)
    do Format-Number(#JuTotTaxFWT, $out, '9,999,999,999.99mi')
    print $out     (0,52)
    do Format-Number(#JuTotTxGrsFUT, $out, '9,999,999,999.99mi')
    print $out     (0,70)
    do Format-Number(#JuTotTaxFUT, $out, '9,999,999,999.99mi')
    print $out     (0,87)
    do Format-Number(#JuTotTxGrsOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#JuTotTaxOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#JuTotTxGrsMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#JuTotTaxMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    print 'EMPLOYER:'  (+1,94)
    do Format-Number(#JuTotTxGrsOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#JuTotTaxOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#JuTotTxGrsMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#JuTotTaxMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    move 0 to #JuTotTxGrsFWT
    move 0 to #JuTotTaxFWT
    move 0 to #JuTotTxGrsFUT
    move 0 to #JuTotTaxFUT
    move 0 to #JuTotTxGrsOASDI
    move 0 to #JuTotTaxOASDI
    move 0 to #JuTotTxGrsMEDI
    move 0 to #JuTotTaxMEDI
    move 0 to #JuTotTxGrsOASDIR
    move 0 to #JuTotTaxOASDIR
    move 0 to #JuTotTxGrsMEDIR
    move 0 to #JuTotTaxMEDIR
    let $Print_Ju_Totals = 'N'
  end-if

  if $Print_SS_Totals = 'Y'

    print 'Form 941-SS Total'  (+1,10)
    do Format-Number(#SSTotTxGrsFWT, $out, '9,999,999,999.99mi')
    print $out     (0,35)
    do Format-Number(#SSTotTaxFWT, $out, '9,999,999,999.99mi')
    print $out     (0,52)
    do Format-Number(#SSTotTxGrsFUT, $out, '9,999,999,999.99mi')
    print $out     (0,70)
    do Format-Number(#SSTotTaxFUT, $out, '9,999,999,999.99mi')
    print $out     (0,87)
    do Format-Number(#SSTotTxGrsOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#SSTotTaxOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#SSTotTxGrsMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#SSTotTaxMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    print 'EMPLOYER:'  (+1,94)
    do Format-Number(#SSTotTxGrsOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#SSTotTaxOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#SSTotTxGrsMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#SSTotTaxMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    move 0 to #SSTotTxGrsFWT
    move 0 to #SSTotTaxFWT
    move 0 to #SSTotTxGrsFUT
    move 0 to #SSTotTaxFUT
    move 0 to #SSTotTxGrsOASDI
    move 0 to #SSTotTaxOASDI
    move 0 to #SSTotTxGrsMEDI
    move 0 to #SSTotTaxMEDI
    move 0 to #SSTotTxGrsOASDIR
    move 0 to #SSTotTaxOASDIR
    move 0 to #SSTotTxGrsMEDIR
    move 0 to #SSTotTaxMEDIR
    let $Print_SS_Totals = 'N'
  end-if

  if $Print_Co_Totals = 'Y'

    print 'Company Total'  (+1,10)
    do Format-Number(#CoTotTxGrsFWT, $out, '9,999,999,999.99mi')
    print $out     (0,35)
    do Format-Number(#CoTotTaxFWT, $out, '9,999,999,999.99mi')
    print $out     (0,52)
    do Format-Number(#CoTotTxGrsFUT, $out, '9,999,999,999.99mi')
    print $out     (0,70)
    do Format-Number(#CoTotTaxFUT, $out, '9,999,999,999.99mi')
    print $out     (0,87)
    do Format-Number(#CoTotTxGrsOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#CoTotTaxOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#CoTotTxGrsMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#CoTotTaxMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    print 'EMPLOYER:'  (+1,94)
    do Format-Number(#CoTotTxGrsOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#CoTotTaxOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#CoTotTxGrsMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#CoTotTaxMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    move 0 to #CoTotTxGrsFWT
    move 0 to #CoTotTaxFWT
    move 0 to #CoTotTxGrsFUT
    move 0 to #CoTotTaxFUT
    move 0 to #CoTotTxGrsOASDI
    move 0 to #CoTotTaxOASDI
    move 0 to #CoTotTxGrsMEDI
    move 0 to #CoTotTaxMEDI
    move 0 to #CoTotTxGrsOASDIR
    move 0 to #CoTotTaxOASDIR
    move 0 to #CoTotTxGrsMEDIR
    move 0 to #CoTotTaxMEDIR
    let $Print_Co_Totals = 'N'
  end-if

  if $Print_Gr_Totals = 'Y'

    print 'Grand Total'  (+1,10)
    do Format-Number(#GrTotTxGrsFWT, $out, '9,999,999,999.99mi')
    print $out     (0,35)
    do Format-Number(#GrTotTaxFWT, $out, '9,999,999,999.99mi')
    print $out     (0,52)
    do Format-Number(#GrTotTxGrsFUT, $out, '9,999,999,999.99mi')
    print $out     (0,70)
    do Format-Number(#GrTotTaxFUT, $out, '9,999,999,999.99mi')
    print $out     (0,87)
    do Format-Number(#GrTotTxGrsOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#GrTotTaxOASDI, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#GrTotTxGrsMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#GrTotTaxMEDI, $out, '9,999,999,999.99mi')
    print $out     (0,157)

    print 'EMPLOYER:'  (+1,94)
    do Format-Number(#GrTotTxGrsOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,105)
    do Format-Number(#GrTotTaxOASDIR, $out, '9,999,999,999.99mi')
    print $out     (0,122)
    do Format-Number(#GrTotTxGrsMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,140)
    do Format-Number(#GrTotTaxMEDIR, $out, '9,999,999,999.99mi')
    print $out     (0,157)

  end-if
end-footing



begin-procedure Test-For-Territories
  move 'N' to $terr-exist

begin-SELECT
COUNT(*)       &terr-count
FROM  PS_GPUS_FDTX_TMP TMP
        WHERE TMP.PROCESS_INSTANCE = #prcs_process_instance - 1
AND TMP.GPUS_TAX_RPT_TYPE  IN ('20','30','40','50')
end-SELECT

  if &terr-count > 0
    move 'Y' to $terr-exist
  end-if

end-procedure

begin-procedure Process-Main
begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

  let $Print_Ju_Totals = 'N'
  let $Print_SS_Totals = 'N'
  let $Print_Co_Totals = 'N'
  let $Print_Gr_Totals = 'N'

begin-SELECT DISTINCT
TMP.GPUS_YE_RPT_CO
  let $jurisdiction = 'Federal'
  let $SS-flag = 'N'
  let $ju_tot = 'N'
  do Process-Federal
  if $ju_tot = 'Y'
    let $Print_Ju_Totals = 'Y'
  end-if

  if $terr-exist = 'Y'


    let $jurisdiction = 'American Samoa'
        let $territory = '20'
        let $SS-flag = 'Y'
        let $ju_tot = 'N'
        let $ss_tot = 'N'
        do Process-Territory
        if $ju_tot = 'Y'
          let $Print_Ju_Totals = 'Y'
    end-if

    let $jurisdiction = 'Puerto Rico'
            let $territory = '40'
            let $SS-flag = 'Y'
            let $ju_tot = 'N'
            do Process-Territory
            if $ju_tot = 'Y'
              let $Print_Ju_Totals = 'Y'
    end-if

    let $jurisdiction = 'Guam'
    let $territory = '30'
    let $SS-flag = 'Y'
    let $ju_tot = 'N'
    do Process-Territory
    if $ju_tot = 'Y'
      let $Print_Ju_Totals = 'Y'
    end-if

    let $jurisdiction = 'U.S. Virgin Islands'
    let $territory = '50'
    let $SS-flag = 'Y'
    let $ju_tot = 'N'
    do Process-Territory
    if $ju_tot = 'Y'
      let $Print_Ju_Totals = 'Y'
    end-if
    if $ss_tot = 'Y'
      let $Print_SS_Totals = 'Y'
    end-if

  end-if

 FROM  PS_GPUS_FDTX_TMP TMP
WHERE TMP.PROCESS_INSTANCE = #prcs_process_instance - 1

ORDER BY TMP.GPUS_YE_RPT_CO

end-SELECT

  let $Print_Gr_Totals = 'Y'
  new-page


end-procedure

begin-procedure Process-Federal

begin-SELECT
TMP2.NATIONAL_ID () on-break print=never level=1 after=Emp-Total
TMP2.NAME         () on-break print=never level=1 after=Emp-Total
TMP2.GPUS_TAX_CATEGORY
SUM(TMP2.GPUS_TAX_GRS)    &TMP2.GPUS_TAX_GRS
SUM(TMP2.GPUS_TAX_AMT)    &TMP2.GPUS_TAX_AMT
TMP2.GPUS_TAX_RPT_TYPE

  if $Print_Ju_Totals = 'Y'
    new-page
  end-if

  move &TMP.GPUS_YE_RPT_CO to $Company  !for Heading

  move &TMP2.NATIONAL_ID       to $NATIONAL_ID
  move &TMP2.NAME              to $NAME
  move &TMP2.GPUS_TAX_CATEGORY    to $TAX_CATEGORY
  move &TMP2.GPUS_TAX_GRS       to #TxGrs_QTD
  move &TMP2.GPUS_TAX_AMT       to #Tax_QTD
  let $GPUS_TAX_RPT_TYPE    = RTRIM(&TMP2.GPUS_TAX_RPT_TYPE, ' ')

    let $fedter_flg = 'Y'

  do Process-Tax-Balance

FROM  PS_GPUS_FDTX_TMP TMP2
WHERE TMP2.PROCESS_INSTANCE = #prcs_process_instance - 1
AND TMP2.GPUS_YE_RPT_CO = &TMP.GPUS_YE_RPT_CO
AND TMP2.GPUS_TAX_RPT_TYPE  IN ('10','20','30','40','50')
GROUP BY TMP2.NATIONAL_ID, TMP2.NAME, TMP2.GPUS_TAX_CATEGORY, TMP2.GPUS_TAX_RPT_TYPE
ORDER BY TMP2.NATIONAL_ID, TMP2.NAME, TMP2.GPUS_TAX_CATEGORY, TMP2.GPUS_TAX_RPT_TYPE


end-SELECT
let $Print_Co_Totals = 'Y'
end-procedure

begin-procedure Process-Territory

begin-SELECT

TMP3.NATIONAL_ID () on-break print=never level=1 after=Emp-Total
TMP3.NAME         () on-break print=never level=1 after=Emp-Total
TMP3.GPUS_TAX_CATEGORY
SUM(TMP3.GPUS_TAX_GRS)  &TMP3.GPUS_TAX_GRS
SUM(TMP3.GPUS_TAX_AMT)  &TMP3.GPUS_TAX_AMT
TMP3.GPUS_TAX_RPT_TYPE

  if $Print_Ju_Totals = 'Y'
    new-page
  end-if

  move &TMP.GPUS_YE_RPT_CO to $Company  !for Heading

  move &TMP3.NATIONAL_ID     to $NATIONAL_ID
  move &TMP3.NAME            to $NAME
  move &TMP3.GPUS_TAX_CATEGORY  to $TAX_CATEGORY
  move &TMP3.GPUS_TAX_GRS     to #TxGrs_QTD
  move &TMP3.GPUS_TAX_AMT     to #Tax_QTD
  let $GPUS_TAX_RPT_TYPE    = RTRIM(&TMP3.GPUS_TAX_RPT_TYPE, ' ')
  let $fedter_flg = 'N'
  do Process-Tax-Balance

FROM  PS_GPUS_FDTX_TMP TMP3
WHERE
       TMP3.PROCESS_INSTANCE = #prcs_process_instance - 1
   AND TMP3.GPUS_YE_RPT_CO = &TMP.GPUS_YE_RPT_CO
   AND TMP3.GPUS_TAX_RPT_TYPE   = $territory
GROUP BY TMP3.NATIONAL_ID, TMP3.NAME, TMP3.GPUS_TAX_CATEGORY,TMP3.GPUS_TAX_RPT_TYPE
ORDER BY TMP3.NATIONAL_ID, TMP3.NAME, TMP3.GPUS_TAX_CATEGORY,TMP3.GPUS_TAX_RPT_TYPE


end-SELECT


end-procedure

begin-procedure Emp-Total
  if #EmpTxGrsFWT <> 0
    or #EmpTaxFWT <> 0
    or #EmpTxGrsFUT <> 0
    or #EmpTaxFUT <> 0
    or #EmpTxGrsOASDI <> 0
    or #EmpTaxOASDI <> 0
    or #EmpTxGrsMEDI <> 0
    or #EmpTaxMEDI <> 0
    or #EmpTxGrsOASDIR <> 0
    or #EmpTaxOASDIR <> 0
    or #EmpTxGrsMEDIR <> 0
    or #EmpTaxMEDIR <> 0
    or #EmpTxGrsEIC <> 0
    or #EmpTaxEIC <> 0
      let $ju_tot = 'Y'
      if $SS-flag = 'Y'
        let $ss_tot = 'Y'
      end-if
      let $jurisdictiont = $jurisdiction
      do Emp-Line

  end-if
end-procedure

begin-procedure Emp-Line

  if $Name <> $priorName or $National_ID <> $priorSSN
    move $NATIONAL_ID  to $S123 xxx       !isolate first 3 digits
    if $S123 = &Temp_SSN_Mask or RTRIM($NATIONAL_ID, ' ') = ''
      print 'Applied For' (+1,2)
    else
      print $NATIONAL_ID        (+1,2)  edit xxxbxxbxxxx
    end-if
    print $Name         (0,15,20)
    move $Name to $priorName
    move $National_ID  to $priorSSN
  end-if

      do Format-Number(#EmpTxGrsFWT, $out, '9,999,999,999.99mi')
      print $out            (0,35)

      do Format-Number(#EmpTaxFWT, $out, '9,999,999,999.99mi')
      print $out            (0,52)


      do Format-Number(#EmpTxGrsFUT, $out, '9,999,999,999.99mi')
      print $out            (0,70)
      do Format-Number(#EmpTaxFUT, $out, '9,999,999,999.99mi')
      print $out            (0,87)
      do Format-Number(#EmpTxGrsOASDI, $out, '9,999,999,999.99mi')

      print $out            (0,105)
      do Format-Number(#EmpTaxOASDI, $out, '9,999,999,999.99mi')
      print $out            (0,122)
      do Format-Number(#EmpTxGrsMEDI, $out, '9,999,999,999.99mi')
      print $out            (0,140)
      do Format-Number(#EmpTaxMEDI, $out, '9,999,999,999.99mi')
      print $out            (0,157)

      if #EmpTxGrsOASDI <> #EmpTxGrsOASDIR
      or #EmpTaxOASDI  <> #EmpTaxOASDIR
      or #EmpTxGrsMEDI <> #EmpTxGrsMEDIR
      or #EmpTaxMEDI   <> #EmpTaxMEDIR
         print 'EMPLOYER:'  (+1,94)
         do Format-Number(#EmpTxGrsOASDIR, $out, '9,999,999,999.99mi')
         print $out            (0,105)
         do Format-Number(#EmpTaxOASDIR, $out, '9,999,999,999.99mi')
         print $out            (0,122)
         do Format-Number(#EmpTxGrsMEDIR, $out, '9,999,999,999.99mi')
         print $out            (0,140)
         do Format-Number(#EmpTaxMEDIR, $out, '9,999,999,999.99mi')
         print $out            (0,157)
      end-if
    if #EmpTxGrsEIC <> 0  or #EmpTaxEIC <> 0
         print 'FederaL EIC: '  (+1,10)
         do Format-Number(#EmpTxGrsEIC, $out, '9,999,999,999.99mi')
         print $out            (0,35)
         do Format-Number(#EmpTaxEIC, $out, '9,999,999,999.99mi')
         print $out            (0,52)
    END-IF


    add #EmpTxGrsEIC      to #JuTotTxGrsFWT
    add #EmpTxGrsEIC      to #CoTotTxGrsFWT
    add #EmpTxGrsEIC      to #GrTotTxGrsFWT
    add #EmpTaxEIC        to #JuTotTaxFWT
    add #EmpTaxEIC        to #CoTotTaxFWT
    add #EmpTaxEIC        to #GrTotTaxFWT
    add #EmpTxGrsFWT      to #JuTotTxGrsFWT
    add #EmpTxGrsFWT      to #CoTotTxGrsFWT
    add #EmpTxGrsFWT      to #GrTotTxGrsFWT
    add #EmpTaxFWT        to #JuTotTaxFWT
    add #EmpTaxFWT        to #CoTotTaxFWT
    add #EmpTaxFWT        to #GrTotTaxFWT
    add #EmpTxGrsFUT      to #JuTotTxGrsFUT
    add #EmpTxGrsFUT      to #CoTotTxGrsFUT
    add #EmpTxGrsFUT      to #GrTotTxGrsFUT
    add #EmpTaxFUT        to #JuTotTaxFUT
    add #EmpTaxFUT        to #CoTotTaxFUT
    add #EmpTaxFUT        to #GrTotTaxFUT
    add #EmpTxGrsOASDI    to #JuTotTxGrsOASDI
    add #EmpTxGrsOASDI    to #CoTotTxGrsOASDI
    add #EmpTxGrsOASDI    to #GrTotTxGrsOASDI
    add #EmpTaxOASDI      to #JuTotTaxOASDI
    add #EmpTaxOASDI      to #CoTotTaxOASDI
    add #EmpTaxOASDI      to #GrTotTaxOASDI
    add #EmpTxGrsMEDI     to #JuTotTxGrsMEDI
    add #EmpTxGrsMEDI     to #CoTotTxGrsMEDI
    add #EmpTxGrsMEDI     to #GrTotTxGrsMEDI
    add #EmpTaxMEDI       to #JuTotTaxMEDI
    add #EmpTaxMEDI       to #CoTotTaxMEDI
    add #EmpTaxMEDI       to #GrTotTaxMEDI
    add #EmpTxGrsOASDIR   to #JuTotTxGrsOASDIR
    add #EmpTxGrsOASDIR   to #CoTotTxGrsOASDIR
    add #EmpTxGrsOASDIR   to #GrTotTxGrsOASDIR
    add #EmpTaxOASDIR     to #JuTotTaxOASDIR
    add #EmpTaxOASDIR     to #CoTotTaxOASDIR
    add #EmpTaxOASDIR     to #GrTotTaxOASDIR
    add #EmpTxGrsMEDIR    to #JuTotTxGrsMEDIR
    add #EmpTxGrsMEDIR    to #CoTotTxGrsMEDIR
    add #EmpTxGrsMEDIR    to #GrTotTxGrsMEDIR
    add #EmpTaxMEDIR      to #JuTotTaxMEDIR
    add #EmpTaxMEDIR      to #CoTotTaxMEDIR
    add #EmpTaxMEDIR      to #GrTotTaxMEDIR

    add #EmpTxGrsEIC      to #PgTotTxGrsFWT
    add #EmpTaxEIC        to #PgTotTaxFWT
    add #EmpTxGrsFWT      to #PgTotTxGrsFWT
    add #EmpTaxFWT        to #PgTotTaxFWT
    add #EmpTxGrsFUT      to #PgTotTxGrsFUT
    add #EmpTaxFUT        to #PgTotTaxFUT
    add #EmpTxGrsOASDI    to #PgTotTxGrsOASDI
    add #EmpTaxOASDI      to #PgTotTaxOASDI
    add #EmpTxGrsMEDI     to #PgTotTxGrsMEDI
    add #EmpTaxMEDI       to #PgTotTaxMEDI
    add #EmpTxGrsOASDIR   to #PgTotTxGrsOASDIR
    add #EmpTaxOASDIR     to #PgTotTaxOASDIR
    add #EmpTxGrsMEDIR    to #PgTotTxGrsMEDIR
    add #EmpTaxMEDIR      to #PgTotTaxMEDIR


    if $SS-flag = 'Y'
      add #EmpTxGrsFWT      to #SSTotTxGrsFWT
      add #EmpTaxFWT        to #SSTotTaxFWT
      add #EmpTxGrsFUT      to #SSTotTxGrsFUT
      add #EmpTaxFUT        to #SSTotTaxFUT
      add #EmpTxGrsOASDI    to #SSTotTxGrsOASDI
      add #EmpTaxOASDI      to #SSTotTaxOASDI
      add #EmpTxGrsMEDI     to #SSTotTxGrsMEDI
      add #EmpTaxMEDI       to #SSTotTaxMEDI
      add #EmpTxGrsOASDIR   to #SSTotTxGrsOASDIR
      add #EmpTaxOASDIR     to #SSTotTaxOASDIR
      add #EmpTxGrsMEDIR    to #SSTotTxGrsMEDIR
      add #EmpTaxMEDIR      to #SSTotTaxMEDIR
    end-if
    move 0 to #EmpTxGrsEIC
    move 0 to #EmpTaxEIC
    move 0 to #EmpTxGrsFWT
    move 0 to #EmpTaxFWT
    move 0 to #EmpTxGrsFUT
    move 0 to #EmpTaxFUT
    move 0 to #EmpTxGrsOASDI
    move 0 to #EmpTaxOASDI
    move 0 to #EmpTxGrsMEDI
    move 0 to #EmpTaxMEDI
    move 0 to #EmpTxGrsOASDIR
    move 0 to #EmpTaxOASDIR
    move 0 to #EmpTxGrsMEDIR
    move 0 to #EmpTaxMEDIR
end-procedure

begin-procedure Process-Tax-Balance

 IF $fedter_flg = 'Y'
  IF $GPUS_TAX_RPT_TYPE = '20' or $GPUS_TAX_RPT_TYPE = '30' or $GPUS_TAX_RPT_TYPE = '40' or $GPUS_TAX_RPT_TYPE = '50'
   evaluate $Tax_Category

       when = '02'                                        !OASDI EE
         add #TxGrs_QTD  to #EmpTxGrsOASDI
         add #Tax_QTD    to #EmpTaxOASDI

       when = '04'                                        !Medicare EE
         add #TxGrs_QTD  to #EmpTxGrsMEDI
         add #Tax_QTD    to #EmpTaxMEDI

       when = '03'                                        !OASDI ER
         add #TxGrs_QTD  to #EmpTxGrsOASDIR
         add #Tax_QTD    to #EmpTaxOASDIR

       when = '05'                                        !Medicare ER
         add #TxGrs_QTD  to #EmpTxGrsMEDIR
      add #Tax_QTD    to #EmpTaxMEDIR


    end-evaluate
 else
  evaluate $Tax_Category
    when = '02'                                        !OASDI EE
             add #TxGrs_QTD  to #EmpTxGrsOASDI
             add #Tax_QTD    to #EmpTaxOASDI

           when = '04'                                        !Medicare EE
             add #TxGrs_QTD  to #EmpTxGrsMEDI
             add #Tax_QTD    to #EmpTaxMEDI

           when = '03'                                        !OASDI ER
             add #TxGrs_QTD  to #EmpTxGrsOASDIR
             add #Tax_QTD    to #EmpTaxOASDIR

           when = '05'                                        !Medicare ER
             add #TxGrs_QTD  to #EmpTxGrsMEDIR
             add #Tax_QTD    to #EmpTaxMEDIR

             when = '01'                                        !Withholding
             add #TxGrs_QTD  to #EmpTxGrsFWT
             add #Tax_QTD    to #EmpTaxFWT

             when = '06'                                         !Unemployment
             add #TxGrs_QTD  to #EmpTxGrsFUT
             add #Tax_QTD    to #EmpTaxFUT

             when = '07'
             add #TxGrs_QTD  to #EmpTxGrsEIC                    !EIC
             add #Tax_QTD    to #EmpTaxEIC


    end-evaluate
 end-if
else
 evaluate $Tax_Category

            when = '01'                                        !Withholding
            add #TxGrs_QTD  to #EmpTxGrsFWT
            add #Tax_QTD    to #EmpTaxFWT

        when = '06'                                         !Unemployment

           add #TxGrs_QTD  to #EmpTxGrsFUT
           add #Tax_QTD    to #EmpTaxFUT
  end-evaluate
end-if

end-procedure

begin-procedure delete-tmp
begin-Sql
delete from PS_GPUS_FDTX_TMP
  WHERE PROCESS_INSTANCE   =  #prcs_process_instance - 1
end-SQL
end-procedure

#Include 'gpuspctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'gpuscodt.sqc'  !Get-Company-Data procedure
#Include 'geteandg.sqc'  !Get-EandG procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API


