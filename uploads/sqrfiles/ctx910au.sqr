!***********************************************************************
!  CTX910AU:  CANADA T4, T4A, RL-1, RL-2 Audit Report                  *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2013, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2013/01/29:10:25:51                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  885420                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment

#Include 'setup32.sqc'  !printer and page-size init
#Include 'ctxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#define TAXFORM_BOX
#define TAXFORM_NOTES
#include 'rellang.sqc'

begin-report
  do Init-Report
  do Report-File-Create
#ifdef PRCSSCHD
  do StdAPI-Term
#endif
end-report

begin-heading 3
  #Include 'stdhdgtr.sqc'
  print $Ctx910au_Company  (3,1)
  print $PrintCompany      (0,13)
  print $CalYear           (3,,)      center
end-heading

begin-procedure Init-Report

  date-time () hh:mi:ss &t1
  display &t1

  #ifdef PRCSSCHD
   do StdAPI-Init
  #endif

  move 'CTX910AU' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  do Init-DateTime
  do Init-Number
  do Get-Calendar-Year-Id

  do Initialization

  date-time () hh:mi:ss &t2
  display &t2
end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from CTX910AU  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('CTX910AU', 'TITLE_AUDIT_RPT' , $Ctx910au_Title_audit_rpt , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'TITLE_T4_RPT'    , $Ctx910au_Title_t4_rpt    , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'TITLE_T4A_RPT'   , $Ctx910au_Title_t4a_rpt   , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'TITLE_RV1_RPT'   , $Ctx910au_Title_rv1_rpt   , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'TITLE_RV2_RPT'   , $Ctx910au_Title_rv2_rpt   , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'COMPANY'         , $Ctx910au_Company         , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'GRAND_TOTALS'    , $Ctx910au_Grand_totals    , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'SIN'             , $Ctx910au_Sin             , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'EMPLID'          , $Ctx910au_Emplid          , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'LOCATION'        , $Ctx910au_Location        , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'DEPARTMENT'      , $Ctx910au_Department      , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'T4_SUPPL'        , $Ctx910au_T4_suppl        , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'WAGELS_PLAN'     , $Ctx910au_Wagels_plan     , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'PROVINCE'        , $Ctx910au_Province        , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'BUS_NUMBER'      , $Ctx910au_Bus_number      , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'CPPQPP_EXEMP'    , $Ctx910au_Cppqpp_exemp    , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'EI_EXEMP'        , $Ctx910au_Ei_exemp        , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'T4A_SUPPL'       , $Ctx910au_T4a_suppl       , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RV1_SLIP'        , $Ctx910au_Rv1_slip        , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'SLIP_SEQ_NO'     , $Ctx910au_slip_seq_no     , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'QIN_NUMBER'      , $Ctx910au_Qin_number      , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RV2_SLIP'        , $Ctx910au_Rv2_slip        , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RV1_OTHER_INFO'  , $Ctx910au_Rv1_otherinf    , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RV1_FOOTNOTE'    , $Ctx910au_Rv1_footnote    , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RV2_OTHER_INFO'  , $Ctx910au_Rv2_otherinf    , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RV2_FOOTNOTE'    , $Ctx910au_Rv2_footnote    , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'BOX#'            , $Ctx910au_Box#            , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'DESCR'           , $Ctx910au_Descr           , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'AMOUNT'          , $Ctx910au_Amount          , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'PRIORITY'        , $Ctx910au_Priority        , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'FOOTNOTE'        , $Ctx910au_Footnote        , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'FOOTNOTE_MSG'    , $Ctx910au_Footnote_msg    , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'EMPL_COUNT'      , $Ctx910au_Empl_count      , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'T4_SLIPS'        , $Ctx910au_T4_slips        , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'T4A_SLIPS'       , $Ctx910au_T4a_slips       , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RV1_SLIPS'       , $Ctx910au_Rv1_slips       , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RV2_SLIPS'       , $Ctx910au_Rv2_slips       , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'T4_TOTALS'       , $Ctx910au_T4_totals       , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'T4A_TOTALS'      , $Ctx910au_T4a_totals      , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RV1_TOTALS'      , $Ctx910au_Rv1_totals      , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RV1_FT_TOTALS'   , $Ctx910au_Rv1_ft_totals   , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'NORV1_FT_TOTALS' , $Ctx910au_Norv1_ft_totals , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RV2_TOTALS'      , $Ctx910au_Rv2_totals      , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RV2_FT_TOTALS'   , $Ctx910au_Rv2_ft_totals   , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'NORV2_FT_TOTALS' , $Ctx910au_Norv2_ft_totals , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'COMP_TOTALS'     , $Ctx910au_Comp_totals     , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'LOC_TOTALS'      , $Ctx910au_Loc_totals      , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'DEPT_TOTALS'     , $Ctx910au_Dept_totals     , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'PROVINCE_TOTALS' , $Ctx910au_Province_totals , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'LOC_CODE'        , $Ctx910au_Loc_code        , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'DEPT'            , $Ctx910au_Dept            , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'QIN_TOTALS'      , $Ctx910au_Qin_totals      , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RCA_TOTALS'      , $Ctx910au_Rca_totals      , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'QIN'             , $Ctx910au_Qin             , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'RCA'             , $Ctx910au_Rca             , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'EMPL_CODE'       , $Ctx910au_Empl_Code       , #dummy_width)
   do Get_Field_Information ('CTX910AU', 'PPIP_EXPMPT'     , $Ctx910au_PPIP_Exempt     , #dummy_width)

end-procedure

begin-procedure Initialization

  move ' ' to $InitForm
  move ' ' to $InitBox
  move ' ' to $InitText
  move 0 to #InitAmt
  move 'Y' to $FirstRecord

  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

  move $910Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear
  do Get-Can-Tax-Processing-Params

  move &TX.Balance_Year to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

  if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
    display ''
    display 'Current Year is not one greater than Tax Reporting Year.'
    display 'Current Year is    ' noline
    display  #saveAsOfYear  9999
    display 'Tax Reporting Year ' noline
    display &TX.Balance_Year
    input $Answer maxlen=1 'Calendar Year is not one greater than Tax Reporting Year - Do you want to continue? (Y/N)'
    uppercase $Answer
    if $Answer <> 'Y'
      stop
    end-if
  end-if
  do  Array-Create
  do Load-Box-Arrays
  do Get-Tax-Tbl-Info

   if $PRCS_Process_Instance = ''
     do Prompts
   else
#ifdef PRCSSCHD
           do Select-Canadian-YrEnd-Parameters
           do Convert-Parameters
#endif
   end-if

  if $RptForm = 'TARV'
     move $Ctx910au_Title_audit_rpt to $ReportTitle
  end-if
  if $RptForm = 'T'
     move $Ctx910au_Title_t4_rpt to $ReportTitle
  end-if
  if $RptForm = 'A'
     move $Ctx910au_Title_t4a_rpt to $ReportTitle
  end-if
  if $RptForm = 'R'
     move $Ctx910au_Title_rv1_rpt to $ReportTitle
  end-if
  if $RptForm = 'V'
     move $Ctx910au_Title_rv2_rpt to $ReportTitle
  end-if
  display ''
  display $ReportTitle

end-procedure

begin-procedure Prompts

  display 'Select the form(s) you wish to audit.'
  display '        For T4,  enter:  T '
  display '        For T4A, enter:  A '
  display '        For RL-1, enter:  R '
  display '        For RL-2, enter:  V '
  display '    For all forms, enter:  X '
  display '        To  Quit,  enter:  Q '

  while $RptForm = ''
    display 'T4, T4A, RL-1, RL-2, all, or quit?'
    input $RptForm 'Forms for Auditing : T(T4), A(T4A), R(RL-1), V(RL-2), X (All Forms), or Q to quit'
    uppercase $RptForm
    if INSTR('TARVXQ',$RptForm, 1) = 0
      display ' '
      display '***** Enter T, A, R, V, X, or Q *****'
      display ' '
      move '' to $RptForm
    end-if
  end-while

  evaluate $RptForm
     when = 'Q'
        stop

     when = 'X'
        let $RptForm = 'TARV'
        let $Taxform1 = 'T'
        let $Taxform2 = 'A'
        let $Taxform3 = 'R'
        let $Taxform4 = 'V'
        do Prompt-for-Sort-Sequence

     when = 'T'
     when = 'A'
     when = 'R'
     when = 'V'
       let $Taxform1 = $RptForm
       let $Taxform2 = $RptForm
       let $Taxform3 = $RptForm
       let $Taxform4 = $RptForm
       let $SortSequence = 'S.COMPANY ASC, S.REPORTING_ID ASC,
          E.SLIP_SURNAME ASC, E.SLIP_FIRST_NAME ASC, E.EMPLID ASC'

  end-evaluate

  while $PrintDetail = ''
    input $PrintDetail 'Include Employee Details (Y/N):'
    uppercase $PrintDetail
    if INSTR('YN'$PrintDetail, 1) = 0
      display ' '
      display '***** Enter Y or N *****'
      display ' '
      move '' to $PrintDetail
    end-if
  end-while

end-procedure

begin-procedure Prompt-for-Sort-Sequence

  display 'Select the sort sequence of your report.'
  display 'To report alphabetically by last name, select: N '
  display 'To report alphabetically within Location code, select: L '
  display 'To report alphabetically within Department code, select: D '
  display 'To report alphabetically within Province code, select: P '
  display '  '

  while $SortInd = ''
    input $SortInd 'Sort Sequence : L (by Location), D(by Department), N (by Name), P (by Province) or Q to quit '
    uppercase $SortInd
    if INSTR('LDNQP',$SortInd, 1) = 0
      display ' '
      display '***** Enter L, D, N, P or Q  *****'
      display ' '
      move '' to $SortInd
    end-if
  end-while

  evaluate $SortInd

     when = 'Q'
        stop

     when = 'L'
       let $SortSequence =
        'S.COMPANY ASC, E.LOCATION ASC, E.SLIP_SURNAME ASC,
                     E.SLIP_FIRST_NAME ASC, E.EMPLID ASC, S.TAXFORM_ID ASC'

     when = 'D'
       let $SortSequence =
        'S.COMPANY ASC, E.DEPTID ASC, E.SLIP_SURNAME ASC,
                     E.SLIP_FIRST_NAME ASC, E.EMPLID ASC, S.TAXFORM_ID ASC'

     when = 'N'
       let $SortSequence =
         'S.COMPANY ASC, E.SLIP_SURNAME ASC, E.SLIP_FIRST_NAME ASC,
                               E.EMPLID ASC, S.TAXFORM_ID ASC'

     when = 'P'
       let $SortSequence =
        'S.COMPANY ASC, S.PROVINCE ASC, E.SLIP_SURNAME ASC,
                     E.SLIP_FIRST_NAME ASC, E.EMPLID ASC, S.TAXFORM_ID ASC'

  end-evaluate
end-procedure

begin-procedure Array-Create

  create-array name=PrT4_Area size=50 -
    field=PT4_Box:char                -
    field=PT4_Descr:char              -
    field=PT4_Amt:number

  create-array name=PrT4A_Area size=60 -
    field=PT4A_Box:char                -
    field=PT4A_Descr:char              -
    field=PT4A_Amt:number

  create-array name=PrRV1_Area size=40 -
    field=PRV1_Box:char                -
    field=PRV1_Descr:char              -
    field=PRV1_Amt:number

  create-array name=PrRV2_Area size=25 -
    field=PRV2_Box:char                -
    field=PRV2_Descr:char              -
    field=PRV2_Amt:number

  create-array name=RV1_Other_Info size=200 -
    field=R1OI_Box:char                     -
    field=R1OI_Desc:char                   -
    field=R1OI_Amt:number

  create-array name=RV2_Other_Info size=60 -
    field=R2OI_Box:char                    -
    field=R2OI_Desc:char                   -
    field=R2OI_Amt:number

  if &TX.Balance_Year < 2012
    create-array name=RV1_Footnotes size=200   -
      field=RFN_Box:char                       -
      field=RFN_Box_Text:char                  -
      field=RFN_Slip_Text:char                 -
      field=RFN_Priority:number                -
      field=RFN_Amt:number
  end-if

  create-array name=RV2_Footnotes size=50   -
    field=VFN_Box:char                      -
    field=VFN_Box_Text:char                 -
    field=VFN_Slip_Text:char                -
    field=VFN_Priority:number               -
    field=VFN_Amt:number

  create-array name=L1_Totals size=300 -
    field=L1_Form:char                 -
    field=L1_BoxNum:char                 -
    field=L1_BoxAmt:number

  create-array name=L2_Totals size=300 -
    field=L2_Form:char                 -
    field=L2_BoxNum:char                 -
    field=L2_BoxAmt:number

  create-array name=L3_Totals size=300 -
    field=L3_Form:char                 -
    field=L3_BoxNum:char                 -
    field=L3_BoxAmt:number

end-procedure

begin-procedure Load-Box-Arrays

   move ' ' to $Spacer
   move 0 to #Zero
   move 0 to #i
   move 0 to #j
   move 0 to #k
   move 0 to #l
   move 0 to #fi
   move 0 to #fj
   move 0 to #fk
   move 0 to #fl
   move 0 to #max_RV1OtherInfo

   display 'as of date is ' noline
   display $Asofdate

begin-SELECT
M.TAXFORM_ID
M.BOX
M.DESCRSHORT
M.EFFDT

   let $M.BOX = RTRIM(&M.BOX, ' ')
   let $TAXFORM_BOX-DESCRSHORT = &M.DESCRSHORT

   do Get_Related_TAXFORM_BOX(&M.BOX,&M.EFFDT,&M.TAXFORM_ID)

   EXTRACT $FN from &M.Box 2 1

   if &M.Taxform_ID = 'T'
      do Load-T4-Boxes
   end-if

   if &M.Taxform_ID = 'A'
      do Load-T4A-Boxes
   end-if

   if &M.Taxform_ID = 'R'
      do Load-RV1-Boxes
   end-if

   if &M.Taxform_ID = 'V'
      do Load-RV2-Boxes
   end-if

FROM PS_TAXFORM_BOX M
WHERE  EFFDT = (SELECT MAX(EFFDT)
                FROM PS_TAXFORM_BOX
                WHERE TAXFORM_ID = M.TAXFORM_ID
                  AND EFFDT <= $AsOfDate)
ORDER BY M.TAXFORM_ID ASC, M.BOX ASC
end-SELECT

end-procedure

begin-procedure Load-T4-Boxes

   if $FN = '' or $FN = ' '
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into PrT4_Area(#i)
         PT4_Box PT4_Descr PT4_Amt
       add 1 to #i
       move #i to #max_T4boxes

   end-if

end-procedure

begin-procedure Load-T4A-Boxes

   put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into PrT4A_Area(#j)
   PT4A_Box PT4A_Descr PT4A_Amt
   add 1 to #j
   move #j to #max_T4Aboxes

end-procedure

begin-procedure Load-RV1-Boxes

   if &TX.Balance_Year < 2012
      EXTRACT $FN from &M.Box 2 1
   else
      EXTRACT $FN from &M.Box 1 1
   end-if

   if $FN = '' or $FN = ' ' or $M.BOX = 'CDO'
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into PrRV1_Area(#k)
         PRV1_Box PRV1_Descr PRV1_Amt
       add 1 to #k
       move #k to #max_RV1boxes
   else
     if &TX.Balance_Year < 2012
        move 'R' to $FN_TaxformID
        do Get-Footnote-Data
        put &M.Box $BoxText $Spacer #BoxPriority #Zero
                         into RV1_Footnotes(#fk)
            RFN_Box RFN_Box_Text RFN_Slip_Text RFN_Priority RFN_Amt
        add 1 to #fk
        move #fk to #max_RV1footnotes
     else
        move 'R' to $FN_TaxformID
        put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into RV1_Other_Info(#fk)
          R1OI_Box R1OI_Desc R1OI_Amt
        add 1 to #fk
        move #fk to #max_RV1OtherInfo
      end-if
   end-if

   let $M.BOX = ' '

end-procedure

begin-procedure Load-RV2-Boxes

   if $FN = '' or $FN = ' '
       put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into PrRV2_Area(#l)
         PRV2_Box PRV2_Descr PRV2_Amt
       add 1 to #l
       move #l to #max_RV2boxes
   else
      move 'V' to $FN_TaxformID
      do Get-Footnote-Data
      put &M.Box $TAXFORM_BOX-DESCRSHORT 0 into RV2_Other_Info(#fl)
         R2OI_Box R2OI_Desc R2OI_Amt
      add 1 to #fl
      move #fl to #max_RV2footnotes
   end-if

end-procedure

begin-procedure Get-Footnote-Data

! let $BoxNZ = rtrim(&M.Box, ' ')
! let $BoxWZ = $BoxNZ || ' '

begin-SELECT
BX.BOX_NOTE_TEXT
BX.BOX_NOTE_SEQ
BX.BOX_NOTE_CD
BX.EFFDT

    let $Box = RTRIM(&M.Box, ' ')
    let $TAXFORM_NOTES-BOX_NOTE_TEXT = &BX.BOX_NOTE_TEXT

    do Get_Related_TAXFORM_NOTES(&M.BOX,&BX.EFFDT,&M.TAXFORM_ID)

    evaluate $Box
    when = 'O01'
      move 'RA' to $BoxText
      break
    when = 'O02'
      move 'RB' to $BoxText
      break
    when = 'O03'
      move 'RC' to $BoxText
      break
    when = 'O04'
      move 'RD' to $BoxText
      break
    when = 'O07'
      move 'RG' to $BoxText
      break
    when = 'O08'
      move 'RH' to $BoxText
      break
    when = 'O09'
      move 'RI' to $BoxText
      break
    when = 'O10'
      move 'RJ' to $BoxText
      break
    when = 'O11'
      move 'RK' to $BoxText
      break
    when = 'O12'
      move 'RL' to $BoxText
      break
    when = 'O13'
      move 'RM' to $BoxText
      break
    when = 'O14'
      move 'RN' to $BoxText
      break
    when = 'O15'
      move 'RO' to $BoxText
      break
    when = 'O16'
      move 'RP' to $BoxText
      break
    when = 'O17'
      move 'RQ' to $BoxText
      break
    when = 'O18'
      move 'RR' to $BoxText
      break
    when = 'O19'
      move 'RS' to $BoxText
      break
    when = 'O20'
      move 'RT' to $BoxText
      break
    when = 'O21'
      move 'RU' to $BoxText
      break
    when = 'O22'
      move 'RV' to $BoxText
      break
    when = 'O23'
      move 'RX' to $BoxText
      break
    when = 'O24'
      move 'CA' to $BoxText
      break
    when = 'O25'
      move 'CB' to $BoxText
      break
    when = 'O26'
      move 'CC' to $BoxText
      break
    when = 'O92'
      find '(' in &BX.Box_Note_Text 0 #loc
      if #loc <> - 1
        extract $BoxText from $TAXFORM_NOTES-BOX_NOTE_TEXT 0 #loc
        let $BoxText  = 'RB ' || $BoxText
      end-if
      break
    when-other
      move $TAXFORM_NOTES-BOX_NOTE_TEXT to $BoxText
    end-evaluate

    move &BX.Box_Note_Seq to #BoxPriority
    move &BX.Box_Note_Cd to $BoxNoteCd

FROM PS_TAXFORM_NOTES BX
WHERE  TAXFORM_ID = &M.Taxform_ID
  AND  BOX = &M.Box
! AND (BOX = $BOXNZ or
!      BOX = $BOXWZ)
  AND  EFFDT = (SELECT MAX(EFFDT)
                FROM PS_TAXFORM_BOX
                WHERE TAXFORM_ID = &M.Taxform_ID
                  AND BOX = BX.BOX
                  AND EFFDT <= $AsOfDate)
end-SELECT

end-procedure


begin-procedure Get-Tax-Tbl-Info

begin-SELECT
TT.CPP_MAX_EARNS

  move &TT.CPP_Max_Earns     to #CPP-Max-Earns

FROM PS_CAN_TAX_TBL TT
WHERE TT.EFFDT = (SELECT MAX(TT1.EFFDT)
                  FROM PS_CAN_TAX_TBL TT1
                  WHERE TT1.EFFDT <= $AsOfDate)
end-SELECT

end-procedure


begin-procedure Report-File-Create

begin-SELECT
S.COMPANY
S.REPORTING_ID
S.WAGE_LOSS_PLAN
S.PROVINCE
S.SEQUENCE_NUMBER
S.TAXFORM_ID
S.UI_EXEMPT
S.EMPLOYMENT_CODE
S.SIN_CONTRB_SPOUSE
S.CAN_YE_SLIP_SEQ
E.EMPLID
E.SIN
E.SLIP_SURNAME
E.SLIP_FIRST_NAME
E.SLIP_INITIAL
E.LOCATION
E.DEPTID

  if $FirstRecord = 'Y'
     move 'N' to $FirstRecord
     do Save-Current-Data
     move $Company to $PrintCompany
     if $RptForm = 'TARV'
       if $SortInd = 'L'
         do Print-Location-Heading
       end-if
       if $SortInd = 'D'
         do Print-Department-Heading
       end-if
       if $SortInd = 'P'
         do Print-Province-Heading
       end-if
     else
       do Print-ReportID-Heading
     end-if
     do Print-Employee-Data
  else
   if $RptForm = 'TARV'
      if &S.Company <> $Company
         do Company-Break
      else
        if $SortInd = 'L' and RTRIM(&E.Location,' ') <> $Location
          do Department-Location-Break
        else
          if $SortInd = 'D' and &E.DeptID <> $DeptID
            do Department-Location-Break
          else
            if $SortInd = 'P' and RTRIM(&S.PROVINCE,' ') <> $Province
              do Department-Location-Break
            else
              if &E.EmplID <> $EmplID
                do Employee-Break
              else
                if &S.CAN_YE_SLIP_SEQ <> #YE_Slip_Seq
                  do Slip-Seq-Break
                else
                  do Check-Form-Break
                end-if
              end-if
            end-if
          end-if
        end-if
      end-if
   else
      if &S.Company <> $Company
         do Company-Break
      else
        if &S.Reporting_ID <> $ReportingID
          do ReportID-Break
        else
          if &E.EmplID <> $EmplID
            do Employee-Break
          else
            if &S.CAN_YE_SLIP_SEQ <> #YE_Slip_Seq
              do Slip-Seq-Break
            else
              do Check-Form-Break
            end-if
          end-if
        end-if
      end-if
   end-if
  end-if

   do Process-Detail-Records

FROM PS_CAN_YE_EMPL  E,
     PS_CAN_YE_SLIP  S
WHERE E.CALENDAR_YEAR = &TX.Balance_Year
  AND S.CALENDAR_YEAR = &TX.Balance_Year
  AND S.TAXFORM_ID IN ($Taxform1, $Taxform2, $Taxform3, $Taxform4)
  AND S.COMPANY = E.COMPANY
  AND E.EMPLID = S.EMPLID
  AND E.SEQUENCE_NUMBER = S.SEQUENCE_NUMBER
  AND S.YE_SLIP_PROCESS = 'O'
#ifdef MVS
  ORDER BY \$SORTSEQUENCE\
#else
  ORDER BY [$SortSequence]
#endif
end-SELECT

  do Print-Empl-Form

  if $PrintDetail = 'Y'
    new-page
  end-if

  if $RptForm = 'TARV'
    if $SortInd = 'N'
       do Add-Level1-to-Level2
       do Print-Company-Total-Line
       do Print-Level1-Totals
    else
       do Add-Level1-to-Level2
       if $SortInd = 'L'
          do Print-Location-Total-Line
       end-if
       if $SortInd = 'D'
          do Print-Department-Total-Line
       end-if
       if $SortInd = 'P'
          do Print-Province-Total-Line
       end-if
       do Print-Level1-Totals
       new-page
       do Print-Company-Total-Line
       do Add-Level2-to-Level3
       do Print-Level2-Totals
    end-if
  else
    do Print-ReportID-Total-Line
    do Add-Level1-to-Level2
    do Print-Level1-Totals
    new-page
    do Print-Company-Total-Line
    do Add-Level2-to-Level3
    do Print-Level2-Totals
  end-if
  new-page
  move '  ' to $PrintCompany
  print $Ctx910au_Grand_totals (+2,3)
  if ($RptForm = 'TARV' and $SortInd = 'N')
    do Print-Level2-Totals
  else
    do Print-Level3-Totals
  end-if

end-procedure

begin-procedure Process-Detail-Records


begin-SELECT
D.BOX
D.CAN_YE_BOX_TEXT
D.CAN_YE_BOX_AMT

   if &S.Taxform_ID = 'T'
     do Process-T4-Data
   end-if

   if &S.Taxform_ID = 'A'
     do Process-T4A-Data
   end-if

   if &S.Taxform_ID = 'R'
     do Process-RV1-Data
   end-if

   if &S.Taxform_ID = 'V'
     do Process-RV2-Data
   end-if

FROM PS_CAN_YE_DETAIL  D
WHERE D.COMPANY = &S.Company
  AND D.EMPLID  = &E.EmplID
  AND D.CALENDAR_YEAR = &TX.Balance_Year
  AND D.SEQUENCE_NUMBER = &S.Sequence_Number
  AND D.TAXFORM_ID = &S.Taxform_ID
  AND D.WAGE_LOSS_PLAN = &S.Wage_Loss_Plan
  AND D.PROVINCE = &S.Province
  AND D.CAN_YE_SLIP_SEQ  = &S.CAN_YE_SLIP_SEQ
ORDER BY D.BOX ASC

end-SELECT

end-procedure

begin-procedure Process-T4-Data

  move 0 to #load_box
  move 0 to #load_note

  if rtrim(&D.Box, ' ') = '28C' or rtrim(&D.Box, ' ') = '28c'
    if &D.CAN_YE_BOX_TEXT = 'X'
       move 'X' to $CPPExempt
    else
       move ' ' to $CPPExempt
    end-if
    move 'Y' to $PrintZero_Bx26
  else
    if rtrim(&D.Box, ' ') = '28U' or rtrim(&D.Box, ' ') = '28u'
       move 'X' to $UIExempt
       move 'Y' to $PrintZero_Bx24
    else
      if rtrim(&D.Box, ' ') = '28P'
        move 'X' to $PPIPExempt
      end-if
    end-if
  end-if
  extract $FN_Ind from &D.Box 2 1
  if $FN_Ind = '' or $FN_Ind = ' '
    let $Box = RTRIM(&D.Box,' ')
    if $Box = '50' or $Box = '26' or $Box = '24'
       let $Text = RTRIM(&D.CAN_YE_Box_Text, ' ')
       if $Box = '50'
          move &D.CAN_YE_Box_Text to $T4_Plan
       end-if
    end-if

    while #load_box < #max_T4boxes
      get $LoadBox from PrT4_Area(#load_box) PT4_Box
      let $LoadBox = rtrim($LoadBox, ' ')
      if $LoadBox = $Box
        array-add &D.CAN_YE_Box_Amt to PrT4_Area(#load_box) PT4_Amt
        break
      else
        add 1 to #load_box
      end-if
    end-while

  end-if

end-procedure


begin-procedure Process-T4-UI-CPP-Boxes

  move 0 to #load_box
  move 0 to #savebox14
  let $Update-Box24 = ' '

  while #load_box < #max_T4boxes
    get $LoadT4Box #LoadT4Amt from PrT4_Area(#load_box) PT4_Box PT4_Amt
    let $LoadT4Box = rtrim($LoadT4Box, ' ')

     evaluate $LoadT4Box
       when = '14'
         let #savebox14 = #LoadT4Amt

       when = '24'
         if #LoadT4Amt = 0
           if $UIExempt <> 'X'
             do Check-UI-Earns

             if $Update-Box24 = 'Y'
                 array-add &C.TXGRS_YTD to PrT4_Area(#load_box) PT4_Amt
             end-if
           end-if
         end-if

       when-other
          break

     end-evaluate

     add 1 to #load_box
  end-while

end-procedure


begin-procedure Check-UI-Earns

begin-SELECT
C.TXGRS_YTD

    if (&C.TXGRS_YTD = #SaveBox14)

      let $Update-Box24 = 'Y'
    end-if

FROM PS_CAN_TAX_BALANCE C
WHERE C.COMPANY = $Company
  AND C.EMPLID =  $Emplid
  AND C.WAGE_LOSS_PLAN = $WageLossPlan
  AND C.BALANCE_YEAR = &TX.Balance_Year
  AND C.BALANCE_ID = $Calendar_Year_Id
  AND C.PROVINCE   = $Province
  AND C.TAX_CLASS_CAN = 'EIE'
  AND C.BALANCE_PERIOD  =
       (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_CAN_TAX_BALANCE
       WHERE  EMPLID        = C.EMPLID
         AND  COMPANY       = C.COMPANY
         AND  BALANCE_YEAR  = C.BALANCE_YEAR
         AND  BALANCE_ID    = C.BALANCE_ID
         AND  PROVINCE      = C.PROVINCE
         AND  WAGE_LOSS_PLAN = C.WAGE_LOSS_PLAN
         AND  TAX_CLASS_CAN = C.TAX_CLASS_CAN)

end-SELECT

end-procedure


begin-procedure Process-T4A-Data

  move 0 to #load_box
  move 0 to #load_note

  let $Box = RTRIM(&D.Box,' ')
  if $Box = '036'
     move &D.CAN_YE_Box_Text to $T4A_Plan
  end-if

  while #load_box < #max_T4Aboxes
    get $LoadBox from PrT4A_Area(#load_box) PT4A_Box
    let $LoadBox = RTRIM($LoadBox,' ')
    if $LoadBox = $Box
      array-add &D.CAN_YE_Box_Amt to PrT4A_Area(#load_box) PT4A_Amt
      break
    else
      add 1 to #load_box
    end-if
  end-while

end-procedure

begin-procedure Process-RV1-Data

  let $Box = RTRIM(&D.Box, ' ')
  if $Box = 'CDO'
    let $Code = RTRIM(&D.CAN_YE_BOX_TEXT, ' ')
    let $Print_Code = 'Y'
  end-if

  move 0 to #load_box
  move 0 to #load_note
  move 0 to #load_OI

  if &TX.Balance_Year < 2012
    extract $FN_Ind from &D.Box 2 1
  else
    extract $FN_Ind from &D.Box 1 1
  end-if
  let $Box = RTRIM(&D.Box,' ')

  if $FN_Ind = '' or $FN_Ind = ' '
    let $Box = RTRIM(&D.Box,' ')

    while #load_box < #max_RV1boxes
      get $LoadBox from PrRV1_Area(#load_box) PRV1_Box
      let $LoadBox = RTRIM($LoadBox,' ')
      if $LoadBox = $Box
        array-add &D.CAN_YE_Box_Amt to PrRV1_Area(#load_box) PRV1_Amt
        move &D.CAN_YE_Box_Amt to $RV1Amt
        break
      else
        add 1 to #load_box
      end-if
    end-while
  else
    if &TX.Balance_Year < 2012
      while #load_note < #max_RV1footnotes
        get $LoadNote from RV1_Footnotes(#load_note) RFN_Box
        let $Box = RTRIM(&D.Box,' ')
        let $LoadNote = RTRIM($LoadNote,' ')
        if $LoadNote = $Box

          do Check-BoxO
          if $PrintFN = 'Y'
            array-add &D.CAN_YE_Box_Amt to RV1_Footnotes(#load_note) RFN_Amt
            put &D.CAN_YE_Box_Text into RV1_Footnotes (#load_note) RFN_Slip_Text
            add 1 to #RV1_FNCount
          end-if
          break
        else
          add 1 to #load_note
        end-if
      end-while
    else 
      if #max_RV1OtherInfo > 0
        while #load_OI < #max_RV1OtherInfo
          get $LoadOtherBox from RV1_Other_Info(#load_OI) R1OI_Box
          let $LoadOtherBox = RTRIM($LoadOtherBox,' ')
          if $LoadOtherBox = $Box
            array-add &D.CAN_YE_Box_Amt to RV1_Other_Info(#load_OI) R1OI_Amt
            add 1 to #RV1_OICount
            break
          else
            add 1 to #load_OI
          end-if
        end-while
      end-if
    end-if
  end-if
  move #RV1_FNCount to $RVFNCount

end-procedure

begin-procedure Check-BoxO

  let $PrintFN = ' '

  if $Box <> 'CDO'

    EXTRACT $Box_Ind from $Box 0 1

    if $Box_Ind = 'O'
      if $Code = 'RZ' or  ($Box = 'O92' and $Code = 'RB') or ($Box = 'O82') or ($Box = 'O30')
        let $PrintFN = 'Y'
      end-if
      let $Print_Code = 'Y'

    else
      let $PrintFN = 'Y'
    end-if

  end-if

end-procedure

begin-procedure Process-RV2-Data

  move 0 to #load_box
  move 0 to #load_note

  extract $FN_Ind from &D.Box 2 1
  if $FN_Ind = '' or $FN_Ind = ' '
    let $Box = RTRIM(&D.Box,' ')
    if $Box = 'G' and &D.CAN_YE_Box_Amt = 0
       let $TextG = RTRIM(&D.CAN_YE_Box_Text, ' ')
       if $TextG <> ''
          move 'Y' to $PrintZero_BxG
       end-if
    end-if
    while #load_box < #max_RV2boxes
      get $LoadBox from PrRV2_Area(#load_box) PRV2_Box
      let $LoadBox = RTRIM($LoadBox,' ')
      if $LoadBox = $Box
        array-add &D.CAN_YE_Box_Amt to PrRV2_Area(#load_box) PRV2_Amt
        move &D.CAN_YE_Box_Amt to $RV2Amt
        break
      else
        add 1 to #load_box
      end-if
    end-while
  else
    while #load_note < #max_RV2footnotes
      get $LoadNote from RV2_Other_Info(#load_note) R2OI_Box
      let $Box = RTRIM(&D.Box,' ')
      let $LoadNote = RTRIM($LoadNote,' ')
      if $LoadNote = $Box
        get $OIBox $OI_Desc #OIAmt from RV2_Other_Info(#load_note)
               R2OI_Box R2OI_Desc R2OI_Amt
        array-add &D.CAN_YE_Box_Amt to RV2_Other_Info(#load_note) R2OI_Amt
        add 1 to #RV2_FNCount
        break
      else
        add 1 to #load_note
      end-if
    end-while
  end-if
  move #RV2_FNCount to $RV2FNCount

end-procedure

begin-procedure Company-Break

  do Print-Empl-Form

  if $PrintDetail = 'Y'
    new-page
  end-if

  move $Company to $PrintCompany
  if $RptForm = 'TARV'
    if $SortInd = 'N'
       do Print-Company-Total-Line
       do Add-Level1-to-Level2
       do Print-Level1-Totals
    else
       do Add-Level1-to-Level2
       if $SortInd = 'L'
          do Print-Location-Total-Line
       end-if
       if $SortInd = 'D'
          do Print-Department-Total-Line
       end-if
       if $SortInd = 'P'
          do Print-Province-Total-Line
       end-if
       do Print-Level1-Totals
       new-page
       move $Company to $PrintCompany
       do Print-Company-Total-Line
       do Add-Level2-to-Level3
       do Print-Level2-Totals
    end-if
  else
    do Print-ReportID-Total-Line
    do Add-Level1-to-Level2
    do Print-Level1-Totals
    new-page
    move $Company to $PrintCompany
    do Print-Company-Total-Line
    do Add-Level2-to-Level3
    do Print-Level2-Totals
  end-if
  new-page
  do Save-Current-Data
  move $Company to $PrintCompany
  if $RptForm = 'TARV'
    if $SortInd = 'L'
      do Print-Location-Heading
    end-if
    if $SortInd = 'D'
      do Print-Department-Heading
    end-if
    if $SortInd = 'P'
      do Print-Province-Heading
    end-if
  else
    do Print-ReportID-Heading
  end-if
  do Print-Employee-Data

end-procedure

begin-procedure Department-Location-Break

  do Print-Empl-Form

  if $PrintDetail = 'Y'
    new-page
  end-if

  if $SortInd = 'L'
     do Print-Location-Total-Line
  end-if
  if $SortInd = 'D'
     do Print-Department-Total-Line
  end-if
  if $SortInd = 'P'
     do Print-Province-Total-Line
  end-if
  do Add-Level1-to-Level2
  do Print-Level1-Totals
  new-page
  do Save-Current-Data
  move $Company to $PrintCompany
  if $SortInd = 'L'
    do Print-Location-Heading
  end-if
  if $SortInd = 'D'
    do Print-Department-Heading
  end-if
  if $SortInd = 'P'
    do Print-Province-Heading
  end-if
  do Print-Employee-Data

end-procedure

begin-procedure ReportID-Break

  do Print-Empl-Form

  if $PrintDetail = 'Y'
    new-page
  end-if

  do Print-ReportID-Total-Line
  do Add-Level1-to-Level2
  do Print-Level1-Totals
  new-page
  do Save-Current-Data
  move $Company to $PrintCompany
  do Print-ReportID-Heading
  do Print-Employee-Data

end-procedure

begin-procedure Employee-break

  do Print-Empl-Form

  move 0 to #T4_Count
  move 0 to #T4A_Count
  move 0 to #RV1_Count
  move 0 to #RV2_Count

  do Save-Current-Data
  move $Company to $PrintCompany
  do Print-Employee-Data

end-procedure


begin-procedure Check-Form-Break

  if $TaxformID = 'T'
    do Print-T4-Data
  else
    if ($TaxformID = 'A' and
        &S.Taxform_ID <> 'A') or
       ($TaxformID = 'A' and
        $WageLossPlan <> &S.Wage_Loss_Plan)
          do Print-T4A-Data
    else
      if ($TaxformID = 'R' and
          &S.Taxform_ID <> 'R')
             do Print-RV1-Data
      else
        if ($TaxformID = 'V' and
            &S.Taxform_ID <> 'V')
               do Print-RV2-Data
        end-if
      end-if
    end-if
  end-if

  do Save-Current-Data
  move $Company to $PrintCompany

end-procedure


begin-procedure Slip-Seq-Break

  evaluate $TaxformID
    when = 'R'
      do Print-RV1-Data
      break
    when = 'V'
      do Print-RV2-Data
      break
    when-other
      break
  end-evaluate

  do Save-Current-Data
  move $Company to $PrintCompany

end-procedure


begin-procedure Print-Employee-Data

  if $PrintDetail = 'Y'
    next-listing need=9

    print $Surname (+2,3)
    print ',' (0,0)
    print $FirstName (0,+1)
    print $Initial (0,+1)
    print $Ctx910au_Sin (0,50)
    print $SIN (0,56) edit xxx-xxx-xxx
    print $Ctx910au_Emplid (0,71)
    print $EmplID (0,80)
    print $Ctx910au_Location (0,92)
    print $Location (0,104)
    print $Ctx910au_Department (0,116)
    print $DeptID (0,129)
  end-if

  add 1 to #EmplCount_Lev1

end-procedure

begin-procedure Print-Empl-Form

  if $TaxformID = 'T'
     do Print-T4-Data
  end-if

  if $TaxformID = 'A'
     do Print-T4A-Data
  end-if

  if $TaxformID = 'R'
     do Print-RV1-Data
  end-if

  if $TaxformID = 'V'
     do Print-RV2-Data
  end-if

end-procedure

begin-procedure Print-T4-Data

  add 1 to #T4Count_Lev1

  if $PrintDetail = 'Y'
    next-listing need=8

    print $Ctx910au_T4_suppl (+1,8)
    print $Ctx910au_Wagels_plan (0,26)
    print $WageLossPlan (0,44)
    print $Ctx910au_Province (0,50)
    print $Province (0,61,2)
    print $Ctx910au_Bus_number (0,67)
    print $ReportingID (0,83)
    print $Ctx910au_Cppqpp_exemp (0,100)
    print $CPPExempt (0,117)
    print $Ctx910au_Ei_exemp (0,121)
    print $UIExempt (0,133)
    print $Ctx910au_Empl_Code (+1,26)
    print $EmploymentCode (0,45)
    print $Ctx910au_PPIP_Exempt (0,50)
    print $PPIPExempt (0,65)

    do Print-Column-Headings

    move 0 to #i
    move 0 to #fi
    move 0 to #var

    while #i <= #max_T4boxes
       get $PrBox $PrDescr #PrAmt from PrT4_Area(#i)
                       PT4_Box PT4_Descr PT4_Amt
      let $PrBox = RTRIM($PrBox,' ')
       if #i < 8
          evaluate $PrBox
            when = '14'
            when = '20'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99mi

            when = '16'
            when = '22'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,66) edit 99999999.99mi

            when = '17'
            when = '24'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,98) edit 99999999.99mi
 
            when = '18'
            when = '26'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,130) edit 99999999.99mi
 
           end-evaluate
       else
         if (#PrAmt <> 0) or
            ($PrBox = '50' and $T4_Plan <> ' ' and $T4_Plan <> '')
          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
          when = 13
          when = 17
          when = 21
          when = 25
          when = 29
          when = 33
          when = 37
          when = 41
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              if $PrBox = '50'
                 print $T4_Plan (0,35)
              else
                 print #PrAmt (0,31) edit 99999999.99mi
              end-if

          when = 2
          when = 6
          when = 10
          when = 14
          when = 18
          when = 22
          when = 26
          when = 30
          when = 34
          when = 38
          when = 42
              print $PrBox (0,50)
              print $PrDescr (0,54)
              if $PrBox = '50'
                 print $T4_Plan (0,70)
              else
                 print #PrAmt (0,66) edit 99999999.99mi
              end-if

          when = 3
          when = 7
          when = 11
          when = 15
          when = 19
          when = 23
          when = 27
          when = 31
          when = 35
          when = 39
              print $PrBox (0,82)
              print $PrDescr (0,86)
              if $PrBox = '50'
                 print $T4_Plan (0,102)
              else
                 print #PrAmt (0,98) edit 99999999.99mi
              end-if

          when = 4
          when = 8
          when = 12
          when = 16
          when = 20
          when = 24
          when = 28
          when = 32
          when = 36
          when = 40
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if $PrBox = '50'
                 print $T4_Plan (0,134)
              else
                 print #PrAmt (0,130) edit 99999999.99mi
              end-if
          when-other
            break

       end-evaluate
       end-if
     end-if

     add 1 to #i

    end-while
  end-if

  do Process-T4-Other-Boxes

  do Process-T4-UI-CPP-Boxes

  do Add-T4-to-Level1
  do Initialize-T4-Data
  move ' ' to $T4_Plan

end-procedure


begin-procedure Process-T4-Other-Boxes

  move 0 to #TotalOtherBox
  move 0 to #NumOfT4
  move 0 to #i

  while #i <= #max_T4boxes
    get $PrBox $PrDescr #PrAmt from PrT4_Area(#i)
                       PT4_Box PT4_Descr PT4_Amt
    let $PrBox = RTRIM($PrBox,' ')

    evaluate $PrBox
      when = '30'
      when = '31'
      when = '32'
      when = '33'
      when = '34'
      when = '35'
      when = '36'
      when = '37'
      when = '38'
      when = '39'
      when = '40'
      when = '41'
      when = '42'
      when = '66'
      when = '67'
      when = '68'
      when = '69'
      when = '70'
      when = '74'
      when = '75'
      when = '76'
      when = '84'
      when = '85'
      when = '86'
      when = '87'

        if #PrAmt <> 0
          add 1 to #TotalOtherBox
        end-if

      when-other
        break
    end-evaluate

    add 1 to #i

  end-while

  if #TotalOtherBox > 0
    let #NumOfT4 = #TotalOtherBox / 6
    let #NumOfT4 = trunc(#NumOfT4,0)

    let #Count   = mod(#TotalOtherBox,6)
    if #Count <> 0
      add 1 to #NumOfT4
    end-if

    add #NumOfT4 to #TrueT4Count_Lev1
  else
    add 1        to #TrueT4Count_Lev1
  end-if

end-procedure


begin-procedure Print-T4A-Data

  add 1 to #T4ACount_Lev1

  if $PrintDetail = 'Y'
    next-listing need=5

    print $Ctx910au_T4a_suppl (+1,8)
    print $Ctx910au_Wagels_plan (0,26)
    print $WageLossPlan (0,44)
    print $Ctx910au_Bus_number (0,67)
    print $ReportingID (0,83)
    do Print-Column-Headings

    move 0 to #j
    move 0 to #fj
    move 0 to #var

    while #j <= #max_T4Aboxes
       get $PrBox $PrDescr #PrAmt from PrT4A_Area(#j)
                       PT4A_Box PT4A_Descr PT4A_Amt
      let $PrBox = RTRIM($PrBox,' ')
       if #j < 8
          evaluate $PrBox
            when = '016'
            when = '024'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,30) edit 999999999.99

            when = '018'
            when = '026'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,65) edit 999999999.99

            when = '020'
            when = '027'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,97) edit 999999999.99

            when = '022'
            when = '028'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,129) edit 999999999.99

          end-evaluate
       else

        if (#PrAmt <> 0) or
           ($PrBox = '036'  and not IsBlank($T4A_Plan))
          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
          when = 13
          when = 17
          when = 21
          when = 25
          when = 29
          when = 33
          when = 37
          when = 41
          when = 45
              print $PrBox (+1,11)
              print $PrDescr (0,15)
               if $PrBox = '036'
                print $T4A_Plan (0,35)
              else
                print #PrAmt (0,30) edit 999999999.99
              end-if

          when = 2
          when = 6
          when = 10
          when = 14
          when = 18
          when = 22
          when = 26
          when = 30
          when = 34
          when = 38
          when = 42
          when = 46
              print $PrBox (0,50)
              print $PrDescr (0,54)
               if $PrBox = '036'
                print $T4A_Plan (0,70)
              else
                print #PrAmt (0,65) edit 999999999.99
              end-if

          when = 3
          when = 7
          when = 11
          when = 15
          when = 19
          when = 23
          when = 27
          when = 31
          when = 35
          when = 39
          when = 43
          when = 47
              print $PrBox (0,82)
              print $PrDescr (0,86)
              if $PrBox = '036'
                print $T4A_Plan (0,102)
              else
                print #PrAmt (0,97) edit 999999999.99
              end-if

          when = 4
          when = 8
          when = 12
          when = 16
          when = 20
          when = 24
          when = 28
          when = 32
          when = 36
          when = 40
          when = 44
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if $PrBox = '036'
                print $T4A_Plan (0,134)
              else
                print #PrAmt (0,129) edit 999999999.99
              end-if

          when-other
              break
       end-evaluate
      end-if
     end-if

     add 1 to #j

    end-while

    print '  ' (+1,1)

  end-if

  do Process-T4A-Other-Boxes

  do Add-T4A-to-Level1
  do Initialize-T4A-Data
  move ' ' to $T4A_Plan

end-procedure


begin-procedure Process-T4A-Other-Boxes

  move 0 to #TotalOtherBox
  move 0 to #NumOfT4A
  move 0 to #i

  while #i <= #max_T4Aboxes
    get $PrBox $PrDescr #PrAmt from PrT4A_Area(#i)
                       PT4A_Box PT4A_Descr PT4A_Amt
    let $PrBox = RTRIM($PrBox,' ')

    evaluate $PrBox
      when = '026'
      when = '027'
      when = '028'
      when = '030'
      when = '032'
      when = '034'
      when = '036'
      when = '040'
      when = '042'
      when = '046'
      when = '102'
      when = '104'
      when = '105'
      when = '106'
      when = '107'
      when = '108'
      when = '109'
      when = '110'
      when = '111'
      when = '115'
      when = '116'
      when = '117'
      when = '118'
      when = '119'
      when = '122'
      when = '123'
      when = '124'
      when = '125'
      when = '126'
      when = '127'
      when = '129'
      when = '130'
      when = '131'
      when = '132'
      when = '133'
      when = '134'
      when = '135'
      when = '142'
      when = '143'
      when = '144'
      when = '146'
      when = '148'
      when = '150'
      when = '152'
      when = '154'
      when = '156'
      when = '158'
      when = '180'
      when = '190'

        if #PrAmt <> 0
          add 1 to #TotalOtherBox
        end-if

      when-other
        break
    end-evaluate

    add 1 to #i

  end-while

  if #TotalOtherBox > 0
    let #NumOfT4A = #TotalOtherBox / 12
    let #NumOfT4A = trunc(#NumOfT4A,0)

    let #Count   = mod(#TotalOtherBox,12)
    if #Count <> 0
      add 1 to #NumOfT4A
    end-if

    add #NumOfT4A to #TrueT4ACount_Lev1
  else
    add 1        to #TrueT4ACount_Lev1
  end-if

end-procedure


begin-procedure Print-RV1-Data

  add 1 to #RV1Count_Lev1

  if $PrintDetail = 'Y'
    next-listing need=5
    print $Ctx910au_Rv1_slip (+1,8)
    print $Ctx910au_slip_seq_no (0,20)
    print #YE_Slip_Seq (0,42) edit 9
    print $Ctx910au_Qin_number (0,67)
    print $ReportingID (0,80)
    do Print-Column-Headings

    move 0 to #k
    move 0 to #fk
    move 0 to #var
    move 0 to #oi

    while #k <= #max_RV1boxes
       get $PrBox $PrDescr #PrAmt from PrRV1_Area(#k)
                       PRV1_Box PRV1_Descr PRV1_Amt
      let $PrBox = RTRIM($PrBox,' ')
       if #k < 5
          evaluate $PrBox
            when = 'A'
            when = 'D'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99

            when = 'B'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,66) edit 99999999.99

            when = 'C'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,98) edit 99999999.99

            when = 'CDO'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if $Code <> '' and $Print_Code = 'Y'
                print $Code  (0,139)
              end-if

          end-evaluate
       else
         if #PrAmt <> 0  or
           (#PrAmt = 0 and $PrBox = 'G')
          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
          when = 13
          when = 17
          when = 21
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,66) edit 99999999.99

          when = 2
          when = 6
          when = 10
          when = 14
          when = 18
          when = 22
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,98) edit 99999999.99

          when = 3
          when = 7
          when = 11
          when = 15
          when = 19
          when = 23
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,130) edit 99999999.99

          when = 4
          when = 8
          when = 12
          when = 16
          when = 20
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99

          when-other
              break
       end-evaluate
      end-if
     end-if

     add 1 to #k

    end-while

   if &TX.Balance_Year < 2012
     if #RV1_FNCount > 0
        next-listing need=6
        print $Ctx910au_Rv1_footnote (+1,14)
        do Print-Footnote-Column-Headings 

     while #fk <= #max_RV1footnotes

        get $FNBox $FNBoxText $FNSlipText #FNPriority #FNAmt
               from RV1_Footnotes(#fk) RFN_Box RFN_Box_Text RFN_Slip_Text
                                                RFN_Priority RFN_Amt

        if rtrim($FNBox, ' ') <> 'CDO'
        if #FNAmt <> 0 or not isblank($FNSlipText)
        print #FNPriority (+1,32) edit 99
        print $FNBox (0,41)
        if #FNAmt <> 0
          print #FNAmt (0,48) edit 99,999,999.99mi
        end-if
       print $FNBoxText (0,73)
       print $FNSlipText (0,103)
        end-if
        end-if

        add 1 to #fk

     end-while
     else
        print '  ' (+1,4)
     end-if
   else
     if #RV1_OICount > 0
         next-listing need=6
         print $Ctx910au_Rv1_otherinf (+1,8)
         do Print-Other-Info-Column-Headings
       
         while #fk <= #max_RV1OtherInfo

           get $OIBox $OIDesc #OIAmt
                  from RV1_Other_Info(#fk) R1OI_Box R1OI_Desc R1OI_Amt

           let $Temp_OIBox = RTRIM($OIBox , ' ')

           do Write-RV1-Other-Info

           add 1 to #fk
         end-while
      end-if
    end-if
  end-if

  do Add-RV1-to-Level1
  do Initialize-RV1-Data

end-procedure


begin-procedure Write-RV1-Other-Info

           evaluate $Temp_OIBox
             when = 'RA'
             when = 'RB'
             when = 'RC'
             when = 'RD'
             when = 'RG'
             when = 'RH'
             when = 'RI'
             when = 'RJ'
             when = 'RK'
             when = 'RM'
             when = 'RN'
             when = 'RO'
             when = 'RP'
             when = 'RQ'
             when = 'RR'
             when = 'RS'
             when = 'RT'
             when = 'RU'
             when = 'RV'
             when = 'RX'
             when = 'CA'
             when = 'CB'
             when = 'CC'
                let $RZBox = 'RZ-' || $OIBox
             when-other
                let $RZBox = $OIBox
           end-evaluate

           if #OIAmt <> 0
             add 1 to #oi
             evaluate #oi

               when = 1
               when = 5
               when = 9
               when = 13
               when = 17
               when = 21
               when = 25
               when = 29
               when = 33
               when = 37
               when = 41
               when = 45
               when = 49
               when = 53
               when = 57
                 print $RZBox (+1,10)
                 print $OIDesc (0,16)
                 print #OIAmt (0,37) edit 99999999.99

               when = 2
               when = 6
               when = 10
               when = 14
               when = 18
               when = 22
               when = 26
               when = 30
               when = 34
               when = 38
               when = 42
               when = 46
               when = 50
               when = 54
               when = 58
                 print $RZBox (0,52)
                 print $OIDesc (0,58)
                 print #OIAmt (0,73) edit 99999999.99

               when = 3
               when = 7
               when = 11
               when = 15
               when = 19
               when = 23
               when = 27
               when = 31
               when = 35
               when = 39
               when = 43
               when = 47
               when = 51
               when = 55
               when = 59
                 print $RZBox (0,88)
                 print $OIDesc (0,94)
                 print #OIAmt (0,109) edit 99999999.99

               when = 4
               when = 8
               when = 12
               when = 16
               when = 20
               when = 24
               when = 28
               when = 32
               when = 36
               when = 40
               when = 44
               when = 48
               when = 52
               when = 56
               when = 60
                print $RZBox (0,124)
                 print $OIDesc (0,130)
                 print #OIAmt (0,144) edit 99999999.99
  
               when-other
                 break
             end-evaluate
           end-if


end-procedure


begin-procedure Print-RV2-Data

  add 1 to #RV2Count_Lev1

  if $PrintDetail = 'Y'
    next-listing need=5

    print $Ctx910au_Rv2_slip (+1,8)
    print $Ctx910au_slip_seq_no (0,20)
    print #YE_Slip_Seq (0,42) edit 9
    print $Ctx910au_Qin_number (0,67)
    print $ReportingID (0,80)
    do Print-Column-Headings

    move 0 to #l
    move 0 to #fl
    move 0 to #var
    move 0 to #oi

    while #l <= #max_RV2boxes
       get $PrBox $PrDescr #PrAmt from PrRV2_Area(#l)
                       PRV2_Box PRV2_Descr PRV2_Amt
      let $PrBox = RTRIM($PrBox,' ')
       if #l < 5
          evaluate $PrBox
            when = 'A'
            when = 'E'
            when = 'I'
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              print #PrAmt (0,31) edit 99999999.99

            when = 'B'
            when = 'F'
            when = 'J'
              print $PrBox (0,50)
              print $PrDescr (0,54)
              print #PrAmt (0,66) edit 99999999.99

            when = 'C'
            when = 'G'
            when = 'K'
              print $PrBox (0,82)
              print $PrDescr (0,86)
              print #PrAmt (0,98) edit 99999999.99

            when = 'D'
            when = 'H'
              print $PrBox (0,114)
              print $PrDescr (0,118)
              print #PrAmt (0,130) edit 99999999.99

          end-evaluate
       else
         if #PrAmt <> 0  or
           (#PrAmt = 0 and $PrBox = 'G' and $PrintZero_BxG = 'Y')
           or (#PrAmt = 0 and $PrBox = 'N' and rtrim($sin_contrb_spouse, ' ') <> '')
          add 1 to #var
          evaluate #var
          when = 1
          when = 5
          when = 9
              print $PrBox (0,50)
              print $PrDescr (0,54)
              if $PrBox = 'N'
                print $sin_contrb_spouse (0,68) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,66) edit 99999999.99
              end-if
          when = 2
          when = 6
          when = 10
              print $PrBox (0,82)
              print $PrDescr (0,86)
              if $PrBox = 'N'
                print $sin_contrb_spouse (0,100) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,98) edit 99999999.99
              end-if
          when = 3
          when = 7
          when = 11
              print $PrBox (0,114)
              print $PrDescr (0,118)
              if $PrBox = 'N'
                print $sin_contrb_spouse (0,132) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,130) edit 99999999.99
              end-if
          when = 4
          when = 8
          when = 12
              print $PrBox (+1,11)
              print $PrDescr (0,15)
              if $PrBox = 'N'
                print $sin_contrb_spouse (0,33) edit 'xxx-xxx-xxx'
              else
                print #PrAmt (0,31) edit 99999999.99
              end-if
          when-other
              break
       end-evaluate
      end-if
     end-if

     add 1 to #l

    end-while

    if #RV2_FNCount > 0
       next-listing need=6
       print $Ctx910au_Rv2_otherinf (+1,8)
       do Print-Other-Info-Column-Headings

    while #fl <= #max_RV2footnotes

         get $OIBox $OIDesc #OIAmt
                from RV2_Other_Info(#fl) R2OI_Box R2OI_Desc R2OI_Amt

         if #OIAmt <> 0
            do Write-RV2-Other-Info
         end-if

       add 1 to #fl

    end-while
    else
       print '  ' (+1,4)
    end-if
  end-if

  move ' ' to $sin_contrb_spouse
  do Add-RV2-to-Level1
  do Initialize-RV2-Data

end-procedure


begin-procedure Write-RV2-Other-Info


           if #OIAmt <> 0
             add 1 to #oi
             evaluate #oi

               when = 1
               when = 5
               when = 9
               when = 13
               when = 17
               when = 21
               when = 25
               when = 29
               when = 33
               when = 37
               when = 41
               when = 45
               when = 49
               when = 53
               when = 57
                 print $OIBox (+1,10)
                 print $OIDesc (0,16)
                 print #OIAmt (0,37) edit 99999999.99

               when = 2
               when = 6
               when = 10
               when = 14
               when = 18
               when = 22
               when = 26
               when = 30
               when = 34
               when = 38
               when = 42
               when = 46
               when = 50
               when = 54
               when = 58
                 print $OIBox (0,52)
                 print $OIDesc (0,58)
                 print #OIAmt (0,73) edit 99999999.99

               when = 3
               when = 7
               when = 11
               when = 15
               when = 19
               when = 23
               when = 27
               when = 31
               when = 35
               when = 39
               when = 43
               when = 47
               when = 51
               when = 55
               when = 59
                 print $OIBox (0,88)
                 print $OIDesc (0,94)
                 print #OIAmt (0,109) edit 99999999.99

               when = 4
               when = 8
               when = 12
               when = 16
               when = 20
               when = 24
               when = 28
               when = 32
               when = 36
               when = 40
               when = 44
               when = 48
               when = 52
               when = 56
               when = 60
                 print $OIBox (0,124)
                 print $OIDesc (0,130)
                 print #OIAmt (0,144) edit 99999999.99
  
               when-other
                 break
             end-evaluate
           end-if

end-procedure


begin-procedure Print-Column-Headings

  if $PrintDetail = 'Y'
    print $Ctx910au_Box#   (+2,10)
    print $Ctx910au_Descr  (0,15)
    print $Ctx910au_Amount (0,36)
    print $Ctx910au_Box#   (0,49)
    print $Ctx910au_Descr  (0,54)
    print $Ctx910au_Amount (0,71)
    print $Ctx910au_Box#   (0,81)
    print $Ctx910au_Descr  (0,86)
    print $Ctx910au_Amount (0,103)
    print $Ctx910au_Box#   (0,113)
    print $Ctx910au_Descr  (0,118)
    print $Ctx910au_Amount (0,135)
  end-if

end-procedure

begin-procedure Print-Other-Info-Column-Headings

  if $PrintDetail = 'Y'
    print $Ctx910au_Box#   (+2,10)
    print $Ctx910au_Descr  (0,16)
    print $Ctx910au_Amount (0,42)
    print $Ctx910au_Box#   (0,52)
    print $Ctx910au_Descr  (0,58)
    print $Ctx910au_Amount (0,78)
    print $Ctx910au_Box#   (0,88)
    print $Ctx910au_Descr  (0,94)
    print $Ctx910au_Amount (0,114)
    print $Ctx910au_Box#   (0,124)
    print $Ctx910au_Descr  (0,130)
    print $Ctx910au_Amount (0,149)
  end-if

end-procedure

begin-procedure Print-Footnote-Column-Headings

  if $PrintDetail = 'Y'
    print $Ctx910au_Priority     (+1,29)
    print $Ctx910au_Footnote     (0,39)
    print $Ctx910au_Amount       (0,52)
    print $Ctx910au_Footnote_msg (0,73)
  end-if

end-procedure

begin-procedure Initialize-T4-Data

   move ' ' to $CPPExempt
   move ' ' to $UIExempt
   move ' ' to $PPIPExempt
   move ' ' to $PrintZero_Bx26
   move ' ' to $PrintZero_Bx24
   move 0 to #i
   move 0 to #fi
   let #InitAmt = 0
   let $InitText = ' '

   while #i < #max_T4boxes
      put #InitAmt into PrT4_Area(#i) PT4_Amt
      add 1 to #i
   end-while

end-procedure

begin-procedure Initialize-T4A-Data

   move 0 to #j

   let #InitAmt = 0
   let $InitText = ' '

   while #j < #max_T4Aboxes
      put #InitAmt into PrT4A_Area(#j) PT4A_Amt
      add 1 to #j
   end-while

end-procedure

begin-procedure Initialize-RV1-Data

   move 0 to #k
   move 0 to #fk
   let #InitAmt = 0
   let $InitText = ' '

   move 'N' to $Print_Code
   if &E.EmplID <> $EmplID
     move ' ' to $Code                 ! box Code
   end-if

   while #k < #max_RV1boxes
      put #InitAmt into PrRV1_Area(#k) PRV1_Amt
      add 1 to #k
   end-while

  if &TX.Balance_Year < 2012
     while #fk < #max_RV1footnotes
        put #InitAmt $InitText into RV1_Footnotes(#fk) RFN_Amt RFN_Slip_Text
        add 1 to #fk
     end-while
     move 0 to #RV1_FNCount
   else
     while #fk < #max_RV1OtherInfo
        put #InitAmt into RV1_Other_Info(#fk) R1OI_Amt 
        add 1 to #fk
     end-while
     move 0 to #RV1_OICount
   end-if

end-procedure

begin-procedure Initialize-RV2-Data

   let $TextG = ''
   let $PrintZero_BxG = ' '
   move 0 to #l
   move 0 to #fl
   let #InitAmt = 0
   let $InitText = ' '

   while #l < #max_RV2boxes
      put #InitAmt into PrRV2_Area(#l) PRV2_Amt
      add 1 to #l
   end-while

   while #fl < #max_RV2footnotes
      put #InitAmt into RV2_Other_Info(#fl) R2OI_Amt 
      add 1 to #fL
   end-while
   move 0 to #RV2_FNCount

end-procedure

begin-procedure Save-Current-Data

  move &S.Company to $Company
  move &S.Reporting_ID to $ReportingID
  move &S.Wage_Loss_Plan to $WageLossPlan
  let $Province = rtrim(&S.Province,' ')
  move &S.Taxform_ID to $TaxformID
  if (&S.UI_Exempt = 'Y' or
      &S.UI_Exempt =  'X')
          move 'X' to $UIExempt
  else
          move ' ' to $UIExempt
  end-if
  move &E.EmplID to $EmplID
  move &E.SIN to $SIN
  move &E.SLIP_Surname to $Surname
  let $Surname = rtrim($Surname, ' ')
  move &E.SLIP_First_Name to $FirstName
  let $FirstName = rtrim($FirstName, ' ')
  move &E.SLIP_Initial to $Initial
  let $Location = rtrim(&E.Location,' ')
  move &E.DeptID to $DeptID
  move &S.Employment_Code to $EmploymentCode
  let $sin_contrb_spouse  = rtrim(&S.SIN_CONTRB_SPOUSE, ' ')

  move &S.CAN_YE_SLIP_SEQ to #YE_Slip_Seq

end-procedure

begin-procedure Add-T4-to-Level1

  move 0 to #i
  move 0 to #fi
  move 'T' to $Form

  while #i <= #max_T4boxes
     get $BoxNum #BoxAmount from PrT4_Area(#i) PT4_Box PT4_Amt
     if #BoxAmount <> 0
        do Add-to-Level1
     end-if
     add 1 to #i
  end-while

end-procedure

begin-procedure Add-T4A-to-Level1

  move 0 to #j

  move 'A' to $Form

  while #j <= #max_T4Aboxes
     get $BoxNum #BoxAmount from PrT4A_Area(#j) PT4A_Box PT4A_Amt
     if #BoxAmount <> 0
        do Add-to-Level1
     end-if
     add 1 to #j
  end-while

end-procedure

begin-procedure Add-RV1-to-Level1

  move 0 to #k
  move 0 to #fk
  move 'R' to $Form

  while #k <= #max_RV1boxes
     get $BoxNum #BoxAmount from PrRV1_Area(#k) PRV1_Box PRV1_Amt
     if #BoxAmount <> 0
        do Add-to-Level1
     end-if
     add 1 to #k
  end-while

  if &TX.Balance_Year < 2012
    while #fk <= #max_RV1footnotes
       get $BoxNum #BoxAmount from RV1_Footnotes(#fk) RFN_Box RFN_Amt
       if #BoxAmount <> 0
          do Add-to-Level1
       end-if
       add 1 to #fk
    end-while
  else
    while #fk <= #max_RV1OtherInfo
       get $BoxNum #BoxAmount from RV1_Other_Info(#fk) R1OI_Box R1OI_Amt
       if #BoxAmount <> 0
         do Add-to-Level1
       end-if
       add 1 to #fk
    end-while
  end-if

end-procedure

begin-procedure Add-RV2-to-Level1

  move 0 to #l
  move 0 to #fl
  move 'V' to $Form

  while #l <= #max_RV2boxes
     get $BoxNum #BoxAmount from PrRV2_Area(#l) PRV2_Box PRV2_Amt
     if #BoxAmount <> 0
        do Add-to-Level1
     end-if
     add 1 to #l
  end-while

  while #fl <= #max_RV2footnotes
     get $BoxNum #BoxAmount from RV2_Other_Info(#fl) R2OI_Box R2OI_Amt
     if #BoxAmount <> 0
        do Add-to-Level1
     end-if
     add 1 to #fl
  end-while

end-procedure

begin-procedure Add-to-Level1

  move 0 to #lev1
  move 300 to #max_lev1

  while #lev1 <= #max_lev1
    get $Lev1Form $Lev1Box from L1_Totals(#lev1) L1_Form L1_BoxNum
    let $Lev1Form = RTRIM($Lev1Form,' ')
    let $Lev1Box = RTRIM($Lev1Box,' ')
    let $BoxNum = RTRIM($BoxNum,' ')

    if $Lev1Form = $Form and $Lev1Box = $BoxNum
       array-add #BoxAmount to L1_Totals(#lev1) L1_BoxAmt
       break
    else
       if $Lev1Form = '' and $Lev1Box = ''
         put $Form $BoxNum #BoxAmount into L1_Totals(#lev1) L1_Form
                                                 L1_BoxNum L1_BoxAmt
         break
       else
          add 1 to #lev1
       end-if
    end-if
  end-while

end-procedure

begin-procedure Add-Level1-to-Level2

  move 0 to #i
  move 300 to #max_i

  while #i <= #max_i
     get $Form_L1 $BoxNum_L1 #BoxAmt_L1
                     from L1_Totals(#i) L1_Form L1_BoxNum L1_BoxAmt

     if $BoxNum_L1 = '' or $BoxNum_L1 = ' '
       break
     else
       move 0 to #j
       move 300 to #max_j

       while #j <= #max_j
         get $Form_L2 $BoxNum_L2 from L2_Totals(#j) L2_Form L2_BoxNum
         if $Form_L1 = $Form_L2  and $BoxNum_L1 = $BoxNum_L2
            array-add #BoxAmt_L1 to L2_Totals(#j) L2_BoxAmt
            break
         else
            if ($Form_L2 = '' or $Form_L2 = ' ') and
               ($BoxNum_L2 = '' or $BoxNum_L2 = ' ')
                 put $Form_L1 $BoxNum_L1 #BoxAmt_L1  into
                    L2_Totals(#j) L2_Form L2_BoxNum L2_BoxAmt
                 break
            else
               add 1 to #j
            end-if
         end-if
       end-while
     end-if
     add 1 to #i
  end-while

  add #EmplCount_Lev1 to #EmplCount_Lev2
  add #T4Count_Lev1 to #T4Count_Lev2
  add #TrueT4Count_Lev1 to #TrueT4Count_Lev2
  add #T4ACount_Lev1 to #T4ACount_Lev2
  add #TrueT4ACount_Lev1 to #TrueT4ACount_Lev2
  add #RV1Count_Lev1 to #RV1Count_Lev2
  add #RV2Count_Lev1 to #RV2Count_Lev2

end-procedure

begin-procedure Add-Level2-to-Level3

  move 0 to #i
  move 300 to #max_i

  while #i <= #max_i
     get $Form_L2 $BoxNum_L2 #BoxAmt_L2
                     from L2_Totals(#i) L2_Form L2_BoxNum L2_BoxAmt

     if $BoxNum_L2 = '' or $BoxNum_L2 = ' '
       break
     else
       move 0 to #j
       move 300 to #max_j

       while #j <= #max_j
         get $Form_L3 $BoxNum_L3 from L3_Totals(#j) L3_Form L3_BoxNum
         if $Form_L2 = $Form_L3  and $BoxNum_L2 = $BoxNum_L3
            array-add #BoxAmt_L2 to L3_Totals(#j) L3_BoxAmt
            break
         else
            if ($Form_L3 = '' or $Form_L3 = ' ') and
               ($BoxNum_L3 = '' or $BoxNum_L3 = ' ')
                  put $Form_L2 $BoxNum_L2 #BoxAmt_L2 into L3_Totals(#j)
                                   L3_Form L3_BoxNum L3_BoxAmt
                  break
            else
               add 1 to #j
            end-if
         end-if
       end-while
     end-if
     add 1 to #i
  end-while

  add #EmplCount_Lev2 to #EmplCount_Lev3
  add #T4Count_Lev2 to #T4Count_Lev3
  add #TrueT4Count_Lev2 to #TrueT4Count_Lev3
  add #T4ACount_Lev2 to #T4ACount_Lev3
  add #TrueT4ACount_Lev2 to #TrueT4ACount_Lev3
  add #RV1Count_Lev2 to #RV1Count_Lev3
  add #RV2Count_Lev2 to #RV2Count_Lev3

end-procedure

begin-procedure Initialize-Level1-Totals

  move 0 to #i
  move 300 to #max_i
  while #i < #max_i
     put $InitForm $InitBox #InitAmt
                into L1_Totals(#i) L1_Form L1_BoxNum L1_BoxAmt
     add 1 to #i
  end-while

  move 0 to #EmplCount_Lev1
  move 0 to #T4Count_Lev1
  move 0 to #TrueT4Count_Lev1
  move 0 to #T4ACount_Lev1
  move 0 to #TrueT4ACount_Lev1
  move 0 to #RV1Count_Lev1
  move 0 to #RV2Count_Lev1

end-procedure

begin-procedure Initialize-Level2-Totals

  move 0 to #i
  move 300 to #max_i
  while #i < #max_i
     put $InitForm $InitBox #InitAmt
                into L2_Totals(#i) L2_Form L2_BoxNum L2_BoxAmt
     add 1 to #i
  end-while

  move 0 to #EmplCount_Lev2
  move 0 to #T4Count_Lev2
  move 0 to #TrueT4Count_Lev2
  move 0 to #T4ACount_Lev2
  move 0 to #TrueT4ACount_Lev2
  move 0 to #RV1Count_Lev2
  move 0 to #RV2Count_Lev2

end-procedure

begin-procedure Initialize-Level3-Totals

  move 0 to #i
  move 300 to #max_i
  while #i < #max_i
     put $InitForm $InitBox #InitAmt
                into L3_Totals(#i) L3_Form L3_BoxNum L3_BoxAmt
     add 1 to #i
  end-while

  move 0 to #EmplCount_Lev3
  move 0 to #T4Count_Lev3
  move 0 to #TrueT4Count_Lev3
  move 0 to #T4ACount_Lev3
  move 0 to #TrueT4ACount_Lev3
  move 0 to #RV1Count_Lev3
  move 0 to #RV2Count_Lev3

end-procedure

begin-procedure Print-Level1-Totals

  print $Ctx910au_Empl_count (+2,15)
  print #EmplCount_Lev1  (0,30) edit 99,999
  print $Ctx910au_T4_slips   (+1,15)
  print #TrueT4Count_Lev1 (0,30) edit 99,999
  print $Ctx910au_T4a_slips  (+1,15)
  print #TrueT4ACount_Lev1  (0,30) edit 99,999
  print $Ctx910au_Rv1_slips  (+1,15)
  print #RV1Count_Lev1  (0,30) edit 99,999
  print $Ctx910au_Rv2_slips  (+1,15)
  print #RV2Count_Lev1  (0,30) edit 99,999

  move 0 to #tot
  while #tot < 300
    get $TotForm $TotBox #TotAmt from L1_Totals(#tot)
                         L1_Form L1_BoxNum L1_BoxAmt
    extract $FN_Ind from $TotBox 2 1
    let $TotForm = RTRIM($TotForm, ' ')
    evaluate $TotForm

      when = 'T'
        do Create-T4-Totals

      when = 'A'
        do Create-T4A-Totals

      when = 'R'
        do Create-RV1-Totals

      when = 'V'
        do Create-RV2-Totals

    end-evaluate

    add 1 to #tot

  end-while

  do Print-T4-Totals
  do Print-T4A-Totals
  do Print-RV1-Totals
  do Print-RV2-Totals

  do Initialize-Level1-Totals
  do Initialize-T4-Data
  do Initialize-T4A-Data
  do Initialize-RV1-Data
  do Initialize-RV2-Data

end-procedure

begin-procedure Print-Level2-Totals

  print $Ctx910au_Empl_count (+2,15)
  print #EmplCount_Lev2  (0,30) edit 99,999
  print $Ctx910au_T4_slips   (+1,15)
  print #TrueT4Count_Lev2 (0,30) edit 99,999
  print $Ctx910au_T4a_slips  (+1,15)
  print #TrueT4ACount_Lev2 (0,30) edit 99,999
  print $Ctx910au_Rv1_slips  (+1,15)
  print #RV1Count_Lev2  (0,30) edit 99,999
  print $Ctx910au_Rv2_slips  (+1,15)
  print #RV2Count_Lev2  (0,30) edit 99,999

  move 0 to #tot
  while #tot < 300
    get $TotForm $TotBox #TotAmt from L2_Totals(#tot)
                         L2_Form L2_BoxNum L2_BoxAmt
    extract $FN_Ind from $TotBox 2 1
    let $TotForm = RTRIM($TotForm, ' ')
    evaluate $TotForm

      when = 'T'
        do Create-T4-Totals

      when = 'A'
        do Create-T4A-Totals

      when = 'R'
        do Create-RV1-Totals

      when = 'V'
        do Create-RV2-Totals

    end-evaluate

    add 1 to #tot

  end-while

  do Print-T4-Totals
  do Print-T4A-Totals
  do Print-RV1-Totals
  do Print-RV2-Totals

  do Initialize-Level2-Totals
  do Initialize-T4-Data
  do Initialize-T4A-Data
  do Initialize-RV1-Data
  do Initialize-RV2-Data

end-procedure

begin-procedure Print-Level3-Totals

  print $Ctx910au_Empl_count (+2,15)
  print #EmplCount_Lev3  (0,30) edit 99,999
  print $Ctx910au_T4_slips   (+1,15)
  print #TrueT4Count_Lev3 (0,30) edit 99,999
  print $Ctx910au_T4a_slips  (+1,15)
  print #TrueT4ACount_Lev3  (0,30) edit 99,999
  print $Ctx910au_Rv1_slips  (+1,15)
  print #RV1Count_Lev3  (0,30) edit 99,999
  print $Ctx910au_Rv2_slips  (+1,15)
  print #RV2Count_Lev3  (0,30) edit 99,999

  move 0 to #tot
  while #tot < 300
    get $TotForm $TotBox #TotAmt from L3_Totals(#tot)
                         L3_Form L3_BoxNum L3_BoxAmt
    extract $FN_Ind from $TotBox 2 1
    let $TotForm = RTRIM($TotForm, ' ')
    evaluate $TotForm

      when = 'T'
        do Create-T4-Totals

      when = 'A'
        do Create-T4A-Totals

      when = 'R'
        do Create-RV1-Totals

      when = 'V'
        do Create-RV2-Totals

    end-evaluate

    add 1 to #tot

  end-while

  do Print-T4-Totals
  do Print-T4A-Totals
  do Print-RV1-Totals
  do Print-RV2-Totals

end-procedure

begin-procedure Create-T4-Totals

  if $FN_Ind = ' ' or $FN_Ind = ''
     move 0 to #box
     while #box < #max_T4boxes
       get $CkBox from PrT4_Area(#box) PT4_Box
       if RTrim($CkBox,' ') = RTrim($TotBox,' ')
          put #TotAmt into PrT4_Area(#box) PT4_Amt
          break
       else
          add 1 to #box
       end-if
     end-while

  end-if

end-procedure

begin-procedure Create-T4A-Totals

   move 0 to #box

   while #box < #max_T4Aboxes
     get $CkBox from PrT4A_Area(#box) PT4A_Box
     if RTrim($CkBox,' ') = RTrim($TotBox,' ')
        put #TotAmt into PrT4A_Area(#box) PT4A_Amt
        break
     else
        add 1 to #box
     end-if
   end-while

end-procedure

begin-procedure Create-RV1-Totals

  if &TX.Balance_Year < 2012
    extract $FN_Ind from $TotBox 2 1
  else
    extract $FN_Ind from $TotBox 1 1
  end-if

  if $FN_Ind = ' ' or $FN_Ind = ''
     move 0 to #box
     while #box < #max_RV1boxes
       get $CkBox from PrRV1_Area(#box) PRV1_Box
       if RTrim($CkBox,' ') = RTrim($TotBox,' ')
          put #TotAmt into PrRV1_Area(#box) PRV1_Amt
          break
       else
          add 1 to #box
       end-if
     end-while
  else
    if &TX.Balance_Year < 2012
      move 0 to #footnote
      while #footnote < #max_RV1footnotes
        get $CkBox from RV1_Footnotes(#footnote) RFN_Box
        if RTrim($CkBox,' ') = RTrim($TotBox,' ')
           put #TotAmt into RV1_Footnotes(#footnote) RFN_Amt
           break
        else
           add 1 to #footnote
        end-if
      end-while
    else
      move 0 to #OI
      while #OI < #max_RV1OtherInfo
        get $CkBox from RV1_Other_Info(#OI) R1OI_Box
        if RTrim($CkBox,' ') = RTrim($TotBox,' ')
           put #TotAmt into RV1_Other_Info(#OI) R1OI_Amt
           break
        else
           add 1 to #OI
        end-if
      end-while
    end-if
  end-if

end-procedure

begin-procedure Create-RV2-Totals

  if $FN_Ind = ' ' or $FN_Ind = ''
     move 0 to #box
     while #box < #max_RV2boxes
       get $CkBox from PrRV2_Area(#box) PRV2_Box
       if RTrim($CkBox,' ') = RTrim($TotBox,' ')
          put #TotAmt into PrRV2_Area(#box) PRV2_Amt
          break
       else
          add 1 to #box
       end-if
     end-while
  else
     move 0 to #footnote
     while #footnote < #max_RV2footnotes
       get $CkBox from RV2_Other_Info(#footnote) R2OI_Box
       if RTrim($CkBox,' ') = RTrim($TotBox,' ')
          put #TotAmt into RV2_Other_Info(#footnote) R2OI_Amt
          break
       else
          add 1 to #footnote
       end-if
     end-while
  end-if

end-procedure

begin-procedure Print-T4-Totals

  if $RptForm = 'T' or $RptForm = 'TARV'

  print $Ctx910au_T4_totals (+2,4)

  do Print-Total-Headings

  move 0 to #print
  while #print < #max_T4boxes
     get $PrBox $PrDescr #PrAmt from PrT4_Area(#print) PT4_Box PT4_Descr
                                                       PT4_Amt
     LET $PrBox = RTRIM($PrBox, ' ')

     evaluate #print
     when = 0
     when = 3
     when = 6
     when = 9
     when = 12
     when = 15
     when = 18
     when = 21
     when = 24
     when = 27
     when = 30
     when = 33
     when = 36
     when = 39
     when = 42
     when = 45
     when = 48
       print $PrBox (+1,6)
       print $PrDescr (0,10)
       if $PrBox = '50'
         print ' ' (0,26)
       else
         print #PrAmt (0,26) edit 99,999,999,999.99mi
       end-if

     when = 1
     when = 4
     when = 7
     when = 10
     when = 13
     when = 16
     when = 19
     when = 22
     when = 25
     when = 28
     when = 31
     when = 34
     when = 37
     when = 40
     when = 43
     when = 46
     when = 49
       print $PrBox (0,48)
       print $PrDescr (0,52)
       if $PrBox = '50'
         print ' ' (0,68)
       else
         print #PrAmt (0,68) edit 99,999,999,999.99mi
       end-if

     when = 2
     when = 5
     when = 8
     when = 11
     when = 14
     when = 17
     when = 20
     when = 23
     when = 26
     when = 29
     when = 32
     when = 35
     when = 38
     when = 41
     when = 44
     when = 47
       print $PrBox (0,90)
       print $PrDescr (0,94)
       if $PrBox = '50'
         print ' ' (0,110)
       else
         print #PrAmt (0,110) edit 99,999,999,999.99mi
       end-if

   end-evaluate

   add 1 to #print

 end-while

 end-if

end-procedure

begin-procedure Print-T4A-Totals

  if $RptForm = 'A' or $RptForm = 'TARV'
  next-listing need=6

  print $Ctx910au_T4a_totals (+4,3)

  do Print-Total-Headings

  move 0 to #print
  while #print < #max_T4Aboxes
     get $PrBox $PrDescr #PrAmt from PrT4A_Area(#print) PT4A_Box PT4A_Descr
                                                        PT4A_Amt
     LET $PrBox = RTRIM($PrBox, ' ')
     evaluate #print
     when = 0
     when = 3
     when = 6
     when = 9
     when = 12
     when = 15
     when = 18
     when = 21
     when = 24
     when = 27
     when = 30
     when = 33
     when = 36
     when = 39
     when = 42
     when = 45
     when = 48
     when = 51
     when = 54
     when = 57
       print $PrBox (+1,6)
       print $PrDescr (0,10)
       if $PrBox = '036'
         print ' ' (0,23)
       else
         print #PrAmt (0,23) edit 9,999,999,999,999.99mi
       end-if

     when = 1
     when = 4
     when = 7
     when = 10
     when = 13
     when = 16
     when = 19
     when = 22
     when = 25
     when = 28
     when = 31
     when = 34
     when = 37
     when = 40
     when = 43
     when = 46
     when = 49
     when = 52
     when = 55
     when = 58
       print $PrBox (0,48)
       print $PrDescr (0,52)
       if $PrBox = '036'
         print ' ' (0,65)
       else
         print #PrAmt (0,65) edit 9,999,999,999,999.99mi
       end-if

     when = 2
     when = 5
     when = 8
     when = 11
     when = 14
     when = 17
     when = 20
     when = 23
     when = 26
     when = 29
     when = 32
     when = 35
     when = 38
     when = 41
     when = 44
     when = 47
     when = 50
     when = 53
     when = 56
     when = 59
       print $PrBox (0,90)
       print $PrDescr (0,94)
       if $PrBox = '036'
         print ' ' (0,107)
       else
         print #PrAmt (0,107) edit 9,999,999,999,999.99mi
       end-if

   end-evaluate
     add 1 to #print

 end-while

  end-if
end-procedure

begin-procedure Print-RV1-Totals

  if $RptForm = 'R' or $RptForm = 'TARV'

  next-listing need=15

  print $Ctx910au_Rv1_totals (+4,3)

  do Print-Total-Headings

  move 0 to #print
  while #print < #max_RV1boxes
     get $PrBox $PrDescr #PrAmt from PrRV1_Area(#print) PRV1_Box PRV1_Descr
                                                        PRV1_Amt
     evaluate #print
     when = 0
     when = 3
     when = 6
     when = 9
     when = 12
     when = 15
     when = 18
     when = 21
     when = 24
     when = 27
       print $PrBox (+1,6)
       print $PrDescr (0,10)
       print #PrAmt (0,26) edit 99,999,999,999.99mi

     when = 1
     when = 4
     when = 7
     when = 10
     when = 13
     when = 16
     when = 19
     when = 22
     when = 25
     when = 28
       print $PrBox (0,48)
       print $PrDescr (0,52)
       print #PrAmt (0,68) edit 99,999,999,999.99mi

     when = 2
     when = 5
     when = 8
     when = 11
     when = 14
     when = 17
     when = 20
     when = 23
     when = 26
       print $PrBox (0,90)
       print $PrDescr (0,94)
       print #PrAmt (0,110) edit 99,999,999,999.99mi

   end-evaluate

   add 1 to #print

 end-while

  if &TX.Balance_Year < 2012
    print $Ctx910au_Rv1_ft_totals (+2,24)

    move 'N' to $RV1s_Printed
    move 0 to #print
    while #print < #max_RV1footnotes
      get $FNBox $FNBoxText $FNSlipText #FNAmt
         from RV1_Footnotes(#print) RFN_Box RFN_Box_Text RFN_Slip_Text RFN_Amt

      if #FNAmt <> 0
         print $FNBox (+1,28)
       print #FNAmt (0,34) edit 999,999,999.99mi
       print $FNBoxText (0,50)
         move 'Y' to $RV1s_Printed
      end-if

      add 1 to #print

    end-while
    if $RV1s_Printed = 'N'
         print $Ctx910au_Norv1_ft_totals  (+1,28)
    end-if
  else
    if #max_RV1OtherInfo <> 0
       move 0 to #toi
       move 0 to #oi
       next-listing need=6
       print $Ctx910au_Rv1_otherinf (+1,4)
       do Print-Total-Headings
      
       while #toi <= #max_RV1OtherInfo

         get $OIBox $OIDesc #OIAmt
              from RV1_Other_Info(#toi) R1OI_Box R1OI_Desc R1OI_Amt

         let $Temp_OIBox = RTRIM($OIBox , ' ')

         evaluate $Temp_OIBox
             when = 'RA'
             when = 'RB'
             when = 'RC'
             when = 'RD'
             when = 'RG'
             when = 'RH'
             when = 'RI'
             when = 'RJ'
             when = 'RK'
             when = 'RM'
             when = 'RN'
             when = 'RO'
             when = 'RP'
             when = 'RQ'
             when = 'RR'
             when = 'RS'
             when = 'RT'
             when = 'RU'
             when = 'RV'
             when = 'RX'
             when = 'CA'
             when = 'CB'
             when = 'CC'
                let $RZBox = 'RZ-' || $OIBox
             when-other
                let $RZBox = $OIBox
         end-evaluate

         if #OIAmt <> 0
           add 1 to #oi
           evaluate #oi

             when = 1
             when = 4
             when = 7
             when = 10
             when = 13
             when = 16
             when = 19
             when = 22
             when = 25
             when = 28
             when = 31
             when = 34
             when = 37
             when = 40
             when = 43
             when = 46
             when = 49
             when = 52
             when = 55
               print $RZBox (+1,5)
               print $OIDesc (0,11)
               print #OIAmt (0,35) edit 99999999.99

             when = 2
             when = 5
             when = 8
             when = 11
             when = 14
             when = 17
             when = 20
             when = 23
             when = 26
             when = 29
             when = 32
             when = 35
             when = 38
             when = 41
             when = 44
             when = 47
             when = 50
             when = 53
             when = 56
             when = 59
              print $RZBox (0,49)
               print $OIDesc (0,55)
               print #OIAmt (0,80) edit 99999999.99

             when = 3
             when = 6
             when = 9
             when = 12
             when = 15
             when = 18
             when = 21
             when = 24
             when = 27
             when = 30
             when = 33
             when = 36
             when = 39
             when = 42
             when = 45
             when = 48
             when = 51
             when = 54
             when = 57
             when = 60
               print $RZBox (0,95)
               print $OIDesc (0,101)
               print #OIAmt (0,125) edit 99999999.99

             when-other
               break
           end-evaluate
         end-if

         add 1 to #toi

       end-while
    end-if  
  end-if

 end-if
end-procedure


begin-procedure Print-RV2-Totals

  if $RptForm = 'V' or $RptForm = 'TARV'

  next-listing need=15

  print $Ctx910au_Rv2_totals (+4,3)

  do Print-Total-Headings

  move 0 to #print
  while #print < #max_RV2boxes
     get $PrBox $PrDescr #PrAmt from PrRV2_Area(#print) PRV2_Box PRV2_Descr
                                                        PRV2_Amt
     evaluate #print
     when = 0
     when = 3
     when = 6
     when = 9
     when = 12
     when = 15
       print $PrBox (+1,6)
       print $PrDescr (0,10)
       print #PrAmt (0,26) edit 99,999,999,999.99mi

     when = 1
     when = 4
     when = 7
     when = 10
     when = 13
     when = 16
       print $PrBox (0,48)
       print $PrDescr (0,52)
       print #PrAmt (0,68) edit 99,999,999,999.99mi

     when = 2
     when = 5
     when = 8
     when = 11
     when = 14
       print $PrBox (0,90)
       print $PrDescr (0,94)
       print #PrAmt (0,110) edit 99,999,999,999.99mi

   end-evaluate

   add 1 to #print

 end-while

 if #max_RV1OtherInfo <> 0
   move 0 to #toi
   move 0 to #oi
   next-listing need=6
   print $Ctx910au_Rv2_otherinf (+1,3)
  do Print-Total-Headings
  
   while #toi <= #max_RV2footnotes

     get $OIBox $OIDesc #OIAmt
       from RV2_Other_Info(#toi) R2OI_Box R2OI_Desc R2OI_Amt

     if #OIAmt <> 0
       add 1 to #oi
       evaluate #oi

         when = 1
         when = 4
         when = 7
         when = 11
         when = 14
         when = 17
         when = 20
         when = 21
         when = 24
           print $OIBox (+1,4)
           print $OIDesc (0,10)
           print #OIAmt (0,35) edit 99999999.99

         when = 2
         when = 5
         when = 8
         when = 11
         when = 14
         when = 17
         when = 20
         when = 23
         when = 27
           print $OIBox (0,49)
           print $OIDesc (0,55)
           print #OIAmt (0,80) edit 99999999.99

         when = 3
         when = 6
         when = 9
         when = 12
         when = 15
         when = 18
         when = 21
         when = 24
         when = 27
           print $OIBox (0,95)
           print $OIDesc (0,101)
           print #OIAmt (0,125) edit 99999999.99

         when-other
           break
       end-evaluate
     end-if

     add 1 to #toi

   end-while

  end-if
end-if
end-procedure


begin-procedure Print-Company-Total-Line
   print $Ctx910au_Comp_totals (+2,3)
   print $Company (0,+2)
end-procedure

begin-procedure Print-Location-Total-Line
   print $Ctx910au_Loc_totals  (+2,3)
   print $Location (0,+2)
end-procedure

begin-procedure Print-Department-Total-Line
   print $Ctx910au_Dept_totals (+2,3)
   print $DeptID (0,+2)
end-procedure

begin-procedure Print-Province-Total-Line
   print $Ctx910au_Province_totals  (+2,3)
   print $Province (0,+2)
end-procedure

begin-procedure Print-Location-Heading
  if $PrintDetail = 'Y'
     print $Ctx910au_Loc_code    (+1,3)
     print $Location (0,+2)
  end-if
end-procedure

begin-procedure Print-Department-Heading
  if $PrintDetail = 'Y'
     print $Ctx910au_Dept        (+1,3)
     print $DeptID (0,+2)
  end-if
end-procedure

begin-procedure Print-Province-Heading
  if $PrintDetail = 'Y'
     print $Ctx910au_Province    (+1,3)
     print $Province (0,+2)
  end-if
end-procedure

begin-procedure Print-Total-Headings

   print $Ctx910au_Box#   (+1,5)
   print $Ctx910au_Descr  (0,12)
   print $Ctx910au_Amount (0,32)
   print $Ctx910au_Box#   (0,47)
   print $Ctx910au_Descr  (0,54)
   print $Ctx910au_Amount (0,74)
   print $Ctx910au_Box#   (0,89)
   print $Ctx910au_Descr  (0,96)
   print $Ctx910au_Amount (0,116)

end-procedure

begin-procedure Print-ReportID-Total-Line
   if (($RptForm = 'R') OR
       ($RptForm = 'V'))
      print $Ctx910au_Qin_totals  (+2,3)
   else
      print $Ctx910au_Rca_totals  (+2,3)
   end-if
   print $ReportingID (0,+2)
end-procedure

begin-procedure Print-ReportID-Heading
   if (($RptForm = 'R') OR
       ($RptForm = 'V'))
      print $Ctx910au_Qin          (+1,3)
   else
      print $Ctx910au_Rca          (+1,3)
   end-if
   print $ReportingID (0,+2)
end-procedure

begin-procedure Ignore
end-procedure

begin-procedure Convert-Parameters

  move $RC_CAN_YE.Audit_Ind       to  $RptForm
  move $RC_CAN_YE.Audit_Sort_Ind  to  $SortInd
  move $RC_CAN_YE.Empl_Detail_Flag to  $PrintDetail

  if $RptForm = 'X'

        let $RptForm = 'TARV'
        let $Taxform1 = 'T'
        let $Taxform2 = 'A'
        let $Taxform3 = 'R'
        let $Taxform4 = 'V'

        if $RC_CAN_YE.Audit_Sort_Ind =  'L'
                   let $SortSequence =
                        'S.COMPANY ASC, E.LOCATION ASC, E.SLIP_SURNAME ASC,
                             E.SLIP_FIRST_NAME ASC, E.EMPLID ASC, S.TAXFORM_ID ASC, S.CAN_YE_SLIP_SEQ ASC'
        end-if

        if $RC_CAN_YE.Audit_Sort_Ind =  'D'
                        let $SortSequence =
                'S.COMPANY ASC, E.DEPTID ASC, E.SLIP_SURNAME ASC,
                     E.SLIP_FIRST_NAME ASC, E.EMPLID ASC, S.TAXFORM_ID ASC, S.CAN_YE_SLIP_SEQ ASC'

        end-if

        if $RC_CAN_YE.Audit_Sort_Ind =  'N'

                let $SortSequence =
                        'S.COMPANY ASC, E.SLIP_SURNAME ASC, E.SLIP_FIRST_NAME ASC,
                               E.EMPLID ASC, S.TAXFORM_ID ASC, S.CAN_YE_SLIP_SEQ ASC'
        end-if

        if $RC_CAN_YE.Audit_Sort_Ind =  'P'
                        let $SortSequence =
                'S.COMPANY ASC, S.PROVINCE ASC, E.SLIP_SURNAME ASC,
                     E.SLIP_FIRST_NAME ASC, E.EMPLID ASC, S.TAXFORM_ID ASC, S.CAN_YE_SLIP_SEQ ASC'

        end-if

else

       let $Taxform1 = $RptForm
       let $Taxform2 = $RptForm
       let $Taxform3 = $RptForm
       let $Taxform4 = $RptForm
       let $SortSequence = 'S.COMPANY ASC, S.REPORTING_ID ASC,
          E.SLIP_SURNAME ASC, E.SLIP_FIRST_NAME ASC, E.EMPLID ASC, S.CAN_YE_SLIP_SEQ ASC'

end-if

end-procedure


#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#ifdef PRCSSCHD
#Include 'ctxrctl1.sqc' ! Get-Can-Tax YE Report Parameters
#Include 'stdapi.sqc'    !Update Process API
#Include 'txrnctl1.sqc'  !Process Scheduler Run Controls
#endif
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
