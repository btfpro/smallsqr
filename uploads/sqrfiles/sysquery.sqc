! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! SYSQUERY: PS Query Definition Criteria Edits report                  *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************


!----------------------------------------------------------------------!
! Procedure: SYSQUERY-Main                              !
!----------------------------------------------------------------------!

begin-procedure SYSQUERY-Main
    let $ErrorFound = 'N'
    let $AuditTitle = 'Query Definition Audit'
    do SysQuery-01
    do SysQuery-02
    do SysQuery-03
    do SysQuery-04
    do SysQuery-05
    do SysQuery-06
    do SysQuery-07
    do SysQuery-08
    do SysQuery-09
    do SysQuery-10
    do SysQuery-11
    do SysQuery-11A
    do SysQuery-12
    do SysQuery-13
    do SysQuery-14
    do SysQuery-15
    do SysQuery-16
    do SysQuery-17
    do SysQuery-18
    do SysQuery-19
    do SysQuery-20
  !  do SysQuery-21  Moved to PKGAudit!
    do SysQuery-22
    do SysQuery-23
    do SysQuery-24
    do SysQuery-25
    do SysQuery-26
    do SysQuery-27

    if $ErrorFound = 'N'
        do PrintSummaryRecord
    end-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SysQuery-01                               !
! Descr:     System table audit against PSQRYDEFN table:               !
!            Query-01: Verify Query Definition Select count.            !
!----------------------------------------------------------------------!
begin-procedure SysQuery-01

   let $AuditDescr = '(QUERY-01) Query Definition Select count does not '
      || 'match record count in the Query Select table:'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   move '0' to $Missing
   move '1' to $Selcount
   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #numofhdr        =  4

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Sel Count'           #Start3  9 into printarray(2)
   put 'Record Count'        #Start4 14 into printarray(3)



begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query01_OprId
A.QRYNAME          &Query01_QryName
A.SELCOUNT         &Query01_SelCount
COUNT(*)           &Query01_Count


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query01_OprId        (+1, #Start1)       on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &Query01_QryName      ( 0, #Start2)
   print &Query01_SelCount     ( 0, #Start3)       edit 99,999
   print &Query01_Count        ( 0, #Start4)       edit 99,999

FROM PSQRYDEFN A,  PSQRYSELECT B
WHERE B.OPRID = A.OPRID
  AND B.QRYNAME = A.QRYNAME
GROUP BY A.OPRID, A.QRYNAME, A.SELCOUNT
HAVING A.SELCOUNT <>
  (SELECT COUNT(*)
  FROM PSQRYSELECT C
  WHERE C.OPRID = A.OPRID
    AND C.QRYNAME = A.QRYNAME)
ORDER BY 1, 2
end-SELECT

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &QryD1_OprId
A.QRYNAME          &QryD1_QryName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &QryD1_OprId        (+1, #Start1)       on-break PRINT=CHANGE/TOP-PAGE LEVEL=1
   print &QryD1_QryName      ( 0, #Start2)
   print $SelCount           ( 0, #Start3)       edit 99,999
   print $Missing            ( 0, #Start4)       edit 99,999

FROM PSQRYDEFN A
WHERE A.SELCOUNT >
(SELECT COUNT(*)
  FROM PSQRYSELECT C
  WHERE C.OPRID = A.OPRID
    AND C.QRYNAME = A.QRYNAME)
AND SELCOUNT = 1
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysQuery-02                                 !
! Descr:     System table audit against PSQRYDEFN table:               !
!            Query-02: Verify Query Definition Expression count.        !
!----------------------------------------------------------------------!
begin-procedure SysQuery-02

   let $AuditDescr = '(QUERY-02) Query Definition Expression count does not '
      || 'match record count in the Query Expression table:'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if


   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 59
   let #numofhdr        =  4

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Expr Count'          #Start3 11 into printarray(2)
   put 'Record Count'        #Start4 14 into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query02_OprId
A.QRYNAME          &Query02_QryName
A.EXPCOUNT         &Query02_ExpCount
COUNT(*)           &Query02_Count


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query02_OprId        (+1, #Start1)
   print &Query02_QryName      ( 0, #Start2)
   print &Query02_ExpCount     ( 0, #Start3)        edit 99,999
   print &Query02_Count        ( 0, #Start4)        edit 99,999

FROM PSQRYDEFN A, PSQRYEXPR B
WHERE B.OPRID = A.OPRID
  AND B.QRYNAME = A.QRYNAME
GROUP BY A.OPRID, A.QRYNAME, A.EXPCOUNT
HAVING A.EXPCOUNT <>
  (SELECT COUNT(*)
  FROM PSQRYEXPR C
  WHERE C.OPRID = A.OPRID
    AND C.QRYNAME = A.QRYNAME)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure

!----------------------------------------------------------------------!
! Procedure: SysQuery-03                                 !
! Descr:     System table audit against PSQRYDEFN table:               !
!            Query-03: Verify Query Definition Bind count.              !
!----------------------------------------------------------------------!
begin-procedure SysQuery-03

   let $AuditDescr = '(QUERY-03) Query Definition Bind count does not '
      || 'match record count in the Query Bind table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if


   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 59
   let #numofhdr        =  4

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Bind Count'          #Start3 11 into printarray(2)
   put 'Record Count'        #Start4 14 into printarray(3)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query03_OprId
A.QRYNAME          &Query03_QryName
A.BNDCOUNT         &Query03_BndCount
COUNT(*)           &Query03_Count


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query03_OprId        (+1, #Start1)
   print &Query03_QryName      ( 0, #Start2)
   print &Query03_BndCount     ( 0, #Start3)        edit 99,999
   print &Query03_Count        ( 0, #Start4)        edit 99,999

FROM PSQRYDEFN A, PSQRYBIND B
WHERE B.OPRID = A.OPRID
  AND B.QRYNAME = A.QRYNAME
GROUP BY A.OPRID, A.QRYNAME, A.BNDCOUNT
HAVING A.BNDCOUNT <>
  (SELECT COUNT(*)
  FROM PSQRYBIND C
  WHERE C.OPRID = A.OPRID
    AND C.QRYNAME = A.QRYNAME)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure

!----------------------------------------------------------------------!
! Procedure: SysQuery-04                              !
! Descr:     System table audit against PSQRYRECORD table:             !
!            Query-04: Verify Query Record name exists.                 !
!----------------------------------------------------------------------!
begin-procedure SysQuery-04


   let $AuditDescr = '(QUERY-04) Query Definition Record name does not '
      || 'exist in the Record Definition table:'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #numofhdr        =  3

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Record Name'         #Start3 21 into printarray(2)


begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.OPRID            &Query04_OprId
A.QRYNAME          &Query04_QryName
A.RECNAME          &Query04_RecName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query04_OprId        (+1, #Start1)
   print &Query04_QryName      ( 0, #Start2)
   print &Query04_RecName      ( 0, #Start3)

FROM PSQRYRECORD A
WHERE A.RCDNUM <> 0
  AND NOT EXISTS
  (SELECT 'X'
  FROM PSRECDEFN B
  WHERE B.RECNAME = A.RECNAME)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure

!----------------------------------------------------------------------!
! Procedure: SysQuery-05                             !
! Descr:     System table audit against PSQRYRECORD table:             !
!            Query-05: Verify Query Record JoinRecord exists.           !
!----------------------------------------------------------------------!
begin-procedure SysQuery-05

   let $AuditDescr = '(QUERY-05) Query Definition Record JoinRecord name '
      || 'does not exist in the Query Record table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 70
   let #numofhdr        =  4

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Record Name'         #Start3 21 into printarray(2)
   put 'JointRec Number'     #Start4 21 into printarray(3)

begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.OPRID            &Query05_OprId
A.QRYNAME          &Query05_QryName
A.RECNAME          &Query05_RecName
A.JOINRCDNUM       &Query05_JoinRcdNum


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query05_OprId        (+1,#Start1)
   print &Query05_QryName      (0, #Start2)
   print &Query05_RecName      (0, #Start3)
   print &Query05_JoinRcdNum   (0, #Start4)   edit B99,999

FROM PSQRYRECORD A
WHERE A.JOINRCDNUM <> 0
  AND NOT EXISTS
  (SELECT 'X'
  FROM PSQRYRECORD B
  WHERE B.RCDNUM = A.JOINRCDNUM)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysQuery-06                             !
! Descr:     System table audit against PSQRYRECORD table:             !
!            Query-06: Verify Query Record JoinField exists.            !
!----------------------------------------------------------------------!
begin-procedure SysQuery-06

   let $AuditDescr = '(QUERY-06) Query Definition Record JoinField name '
      || 'does not exist in the Query Field table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 70
   let #numofhdr        =  4

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Record Name'         #Start3 21 into printarray(2)
   put 'JointFld Number'     #Start4 21 into printarray(3)


begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.OPRID            &Query06_OprId
A.QRYNAME          &Query06_QryName
A.RECNAME          &Query06_RecName
A.JOINFLDNUM       &Query06_JoinFldNum


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query06_OprId        (+1, #Start1)
   print &Query06_QryName      ( 0, #Start2)
   print &Query06_RecName      ( 0, #Start3)
   print &Query06_JoinFldNum   ( 0, #Start4)   edit B99,999

FROM PSQRYRECORD A
WHERE A.JOINFLDNUM <> 0
  AND NOT EXISTS
  (SELECT 'X'
  FROM PSQRYFIELD B
  WHERE B.FLDNUM = A.JOINFLDNUM)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysQuery-07                              !
! Descr:     System table audit against PSQRYFIELD table:              !
!            Query-07: Verify Query Field Defn Record exists.           !
!----------------------------------------------------------------------!
begin-procedure SysQuery-07

   let $AuditDescr = '(QUERY-07) Query Field Record name does not '
      || 'exist in the Record Definition table:'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #numofhdr        =  3

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Record Name'         #Start3 21 into printarray(2)



begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.OPRID            &Query07_OprId
A.QRYNAME          &Query07_QryName
A.RECNAME          &Query07_RecName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query07_OprId        (+1, #Start1)
   print &Query07_QryName      ( 0, #Start2)
   print &Query07_RecName      ( 0, #Start3)

FROM PSQRYFIELD A
WHERE A.FLDRCDNUM <> 0
  AND NOT EXISTS
  (SELECT 'X'
   FROM PSRECDEFN B
   WHERE B.RECNAME = A.RECNAME)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysQuery-08                               !
! Descr:     System table audit against PSQRYFIELD table:              !
!            Query-08: Verify Query Field Defn Field exists.            !
!----------------------------------------------------------------------!
begin-procedure SysQuery-08

   let $AuditDescr = '(QUERY-08) Query Definition Field name does not '
      || 'exist in the Field Definition table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 70
   let #numofhdr        =  4

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Record Name'         #Start3 21 into printarray(2)
   put 'Field Name     '     #Start4 21 into printarray(3)


begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
A.OPRID            &Query08_OprId
A.QRYNAME          &Query08_QryName
A.RECNAME          &Query08_RecName
A.FIELDNAME        &Query08_FieldName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query08_OprId        (+1, #Start1)
   print &Query08_QryName      ( 0, #Start2)
   print &Query08_RecName      ( 0, #Start3)
   print &Query08_FieldName    ( 0, #Start4)

FROM PSQRYFIELD A
WHERE A.FLDRCDNUM <> 0
  AND NOT EXISTS
      (SELECT 'X'
         FROM PSRECFIELDDB B
        WHERE B.RECNAME = A.RECNAME
          AND B.FIELDNAME = A.FIELDNAME)
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysQuery-09                              !
! Descr:     System table audit against PSQRYSELECT table:             !
!            Query-09: Verify Query Selection Record count.             !
!----------------------------------------------------------------------!
begin-procedure SysQuery-09

   let $AuditDescr = '(QUERY-09) Query Selection Record count does not '
      || 'match record count in Query Record table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #Start5          = 73
   let #numofhdr        =  5

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Sel Num'             #Start3 8  into printarray(2)
   put 'QryRec Count'        #Start4 12 into printarray(3)
   put 'Record Count'        #Start5 17 into printarray(4)


begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query09_OprId
A.QRYNAME          &Query09_QryName
A.SELNUM           &Query09_SelNum
A.RCDCOUNT         &Query09_RcdCount
COUNT(*)           &Query09_Count


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query09_OprId        (+1, #Start1)
   print &Query09_QryName      ( 0, #Start2)
   print &Query09_SelNum       ( 0, #Start3)       edit 999999
   print &Query09_RcdCount     ( 0, #Start4)       edit 99,999
   print &Query09_Count        ( 0, #Start5)       edit 99,999

FROM PSQRYSELECT A, PSQRYRECORD B
WHERE B.OPRID = A.OPRID
  AND B.QRYNAME = A.QRYNAME
  AND B.SELNUM = A.SELNUM
GROUP BY A.OPRID, A.QRYNAME, A.SELNUM, A.RCDCOUNT
HAVING A.RCDCOUNT <>
  (SELECT COUNT(*)
  FROM PSQRYRECORD C
  WHERE C.OPRID = A.OPRID
    AND C.QRYNAME = A.QRYNAME
    AND C.SELNUM = A.SELNUM)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SysQuery-10                               !
! Descr:     System table audit against PSQRYSELECT table:             !
!            Query-10: Verify Query Selection Field count.              !
!----------------------------------------------------------------------!
begin-procedure SysQuery-10

   let $AuditDescr = '(QUERY-10) Query Selection Field count does not '
      || 'match record count in Query Field table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #Start5          = 72
   let #numofhdr        =  5

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Sel Num'             #Start3 8  into printarray(2)
   put 'QryFld Count'        #Start4 12 into printarray(3)
   put 'Record Count'        #Start5 17 into printarray(4)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query10_OprId
A.QRYNAME          &Query10_QryName
A.SELNUM           &Query10_SelNum
A.FLDCOUNT         &Query10_FldCount
COUNT(*)           &Query10_Count


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query10_OprId        (+1,#Start1)
   print &Query10_QryName      (0,#Start2)
   print &Query10_SelNum       (0,#Start3)       edit 999999
   print &Query10_FldCount     (0,#Start4)     edit 99,999
   print &Query10_Count        (0,#Start5)        edit 99,999

FROM PSQRYSELECT A, PSQRYFIELD B
WHERE B.OPRID = A.OPRID
  AND B.QRYNAME = A.QRYNAME
  AND B.SELNUM = A.SELNUM
GROUP BY A.OPRID, A.QRYNAME, A.SELNUM, A.FLDCOUNT
HAVING A.FLDCOUNT <>
  (SELECT COUNT(*)
  FROM PSQRYFIELD C
  WHERE C.OPRID = A.OPRID
    AND C.QRYNAME = A.QRYNAME
    AND C.SELNUM = A.SELNUM)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure



!----------------------------------------------------------------------!
! Procedure: SysQuery-11                            !
! Descr:     System table audit against PSQRYSELECT table:             !
!            Query-11: Verify Query Selection Criteria count.           !
!----------------------------------------------------------------------!
begin-procedure SysQuery-11

   let $AuditDescr = '(QUERY-11) Query Selection Criteria count does not '
      || 'match record count in Query Criteria table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #Start5          = 72
   let #numofhdr        =  5

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Sel Num'             #Start3 8  into printarray(2)
   put 'QryCrt Count'        #Start4 13 into printarray(3)
   put 'Record Count'        #Start5 13 into printarray(4)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query11_OprId
A.QRYNAME          &Query11_QryName
A.SELNUM           &Query11_SelNum
A.CRTCOUNT         &Query11_CrtCount
COUNT(*)           &Query11_Count


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query11_OprId        (+1, #Start1)
   print &Query11_QryName      ( 0, #Start2)
   print &Query11_SelNum       ( 0, #Start3)       edit 999999
   print &Query11_CrtCount     ( 0, #Start4)       edit 99,999
   print &Query11_Count        ( 0, #Start5)       edit 99,999

FROM PSQRYSELECT A, PSQRYCRITERIA B
WHERE B.OPRID = A.OPRID
  AND B.QRYNAME = A.QRYNAME
  AND B.SELNUM = A.SELNUM
  AND B.COMBTYPE IN (1, 2, 3)
 GROUP BY A.OPRID, A.QRYNAME, A.SELNUM, A.CRTCOUNT
HAVING A.CRTCOUNT <>
  (SELECT COUNT(*)
     FROM PSQRYCRITERIA C
    WHERE C.OPRID = A.OPRID
      AND C.QRYNAME = A.QRYNAME
      AND C.SELNUM = A.SELNUM
      AND C.COMBTYPE IN (1, 2, 3))
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure


!----------------------------------------------------------------------!
! Procedure: SysQuery-11A                              !
! Descr:     System table audit against PSQRYSELECT table:             !
!            Query-11: Verify Query Selection Criteria count.           !
!----------------------------------------------------------------------!
begin-procedure SysQuery-11A


   let $AuditDescr = '(QUERY-11A) Query Selection Criteria having count '
      || 'does not match record count in Query Criteria table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #Start5          = 72
   let #numofhdr        =  5

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Sel Num'             #Start3 8  into printarray(2)
   put 'HaveCrt Count'       #Start4 14 into printarray(3)
   put 'Record Count'        #Start5 13 into printarray(4)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query11A_OprId
A.QRYNAME          &Query11A_QryName
A.SELNUM           &Query11A_SelNum
A.HAVECRTCOUNT     &Query11A_HaveCrtCount
COUNT(*)           &Query11A_Count


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query11A_OprId         (+1, #Start1)
   print &Query11A_QryName       ( 0, #Start2)
   print &Query11A_SelNum        ( 0, #Start3)       edit 999999
   print &Query11A_HaveCrtCount  ( 0, #Start4)       edit 99,999
   print &Query11A_Count         ( 0, #Start5)      edit 99,999

FROM PSQRYSELECT A, PSQRYCRITERIA B
WHERE B.OPRID = A.OPRID
  AND B.QRYNAME = A.QRYNAME
  AND B.SELNUM = A.SELNUM
  AND B.COMBTYPE IN (4, 5, 6)
 GROUP BY A.OPRID, A.QRYNAME, A.SELNUM, A.HAVECRTCOUNT
HAVING A.HAVECRTCOUNT <>
  (SELECT COUNT(*)
     FROM PSQRYCRITERIA C
    WHERE C.OPRID = A.OPRID
      AND C.QRYNAME = A.QRYNAME
      AND C.SELNUM = A.SELNUM
      AND C.COMBTYPE IN (4, 5, 6))
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure

!----------------------------------------------------------------------!
! Procedure: SysQuery-12                              !
! Descr:     System table audit against PSQRYSELECT table:             !
!            Query-12: Verify Query Selection Parent exists.            !
!----------------------------------------------------------------------!
begin-procedure SysQuery-12


   let $AuditDescr = '(QUERY-12) Query Selection Parent select number '
      || 'does not exist in Query Select table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #numofhdr        =  4

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Sel Num'             #Start3 8  into printarray(2)
   put 'Parent Number'       #Start4 14 into printarray(3)


begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query12_OprId
A.QRYNAME          &Query12_QryName
A.SELNUM           &Query12_SelNum
A.PARENTSELNUM     &Query12_ParentNum


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query12_OprId        (+1, #Start1)
   print &Query12_QryName      ( 0, #Start2)
   print &Query12_SelNum       ( 0, #Start3)       edit 999999
   print &Query12_ParentNum    ( 0, #Start4)       edit 999999

FROM PSQRYSELECT A
WHERE A.PARENTSELNUM > 0
  AND NOT EXISTS
  (SELECT 'X'
  FROM PSQRYSELECT B
  WHERE B.OPRID = A.OPRID
    AND B.QRYNAME = A.QRYNAME
    AND B.SELNUM = A.PARENTSELNUM)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure

!----------------------------------------------------------------------!
! Procedure: SysQuery-13                             !
! Descr:     System table audit against PSQRYCRITERIA table:           !
!            Query-13: Verify Query Left Criteria Select number exist.  !
!----------------------------------------------------------------------!
begin-procedure SysQuery-13

   let $AuditDescr = '(QUERY-13) Query Criteria Selection-Left does not '
      || 'exist in the Query Selection table:'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if



   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #Start5          = 70
   let #numofhdr        =  5

   put 'Oper ID'            #Start1 10 into printarray(0)
   put 'Query Name'         #Start2 31 into printarray(1)
   put 'Sel Num'            #Start3 6 into printarray(2)
   put 'Crit Num'           #Start4 6 into printarray(3)
   put 'Left Crt Sel Num'   #Start5 17 into printarray(4)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query13_OprId
A.QRYNAME          &Query13_QryName
A.SELNUM           &Query13_SelNum
A.CRTNUM           &Query13_CrtNum
A.LCRTSELNUM       &Query13_LCrtSelNum

 if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Query13_OprId        (+1, #Start1)
   print &Query13_QryName      ( 0, #Start2)
   print &Query13_SelNum       ( 0, #Start3)       edit B999
   print &Query13_CrtNum       ( 0, #Start4)       edit B999
   print &Query13_LCrtSelNum   ( 0, #Start5)       edit BBBB999

FROM PSQRYCRITERIA A
WHERE A.LCRTSELNUM <> 0
  AND NOT EXISTS
  (SELECT 'X'
  FROM PSQRYSELECT B
  WHERE B.OPRID = A.OPRID
    AND B.QRYNAME = A.QRYNAME
    AND B.SELNUM = A.LCRTSELNUM)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure
!----------------------------------------------------------------------!
! Procedure: SysQuery-14                            !
! Descr:     System table audit against PSQRYCRITERIA table:           !
!            Query-14: Verify Query R1 Criteria Select number exist.    !
!----------------------------------------------------------------------!
begin-procedure SysQuery-14

   let $AuditDescr = '(QUERY-14) Query Criteria Selection-Right1 does not '
      || 'exist in the Query Selection table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if



   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #Start5          = 65
   let #numofhdr        =  5

   put 'Oper ID'            #Start1 10 into printarray(0)
   put 'Query Name'         #Start2 31 into printarray(1)
   put 'Sel Num'            #Start3 6 into printarray(2)
   put 'Crit Num'           #Start4 6 into printarray(3)
   put 'R1 Crt Sel Num'     #Start5 17 into printarray(4)



begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query14_OprId
A.QRYNAME          &Query14_QryName
A.SELNUM           &Query14_SelNum
A.CRTNUM           &Query14_CrtNum
A.R1CRTSELNUM      &Query14_R1CrtSelNum


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if

   let #rows = #rows +1


   print &Query14_OprId        (+1, #Start1)
   print &Query14_QryName      ( 0, #Start2)
   print &Query14_SelNum       ( 0, #Start3)       edit B999
   print &Query14_CrtNum       ( 0, #Start4)       edit B999
   print &Query14_R1CrtSelNum  ( 0, #Start5)    edit BBBB999

FROM PSQRYCRITERIA A
WHERE A.R1CRTSELNUM <> 0
  AND NOT EXISTS
  (SELECT 'X'
  FROM PSQRYSELECT C
  WHERE C.OPRID = A.OPRID
    AND C.QRYNAME = A.QRYNAME
    AND C.SELNUM = A.R1CRTSELNUM)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SysQuery-15                            !
! Descr:     System table audit against PSQRYCRITERIA table:           !
!            Query-15: Verify Query R2 Criteria Select number exist.    !
!----------------------------------------------------------------------!
begin-procedure SysQuery-15

   let $AuditDescr = '(QUERY-15) Query Criteria Selection-Right2 does not '
      || 'exist in the Query Selection table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #Start5          = 70
   let #numofhdr        =  5

   put 'Oper ID'            #Start1 10 into printarray(0)
   put 'Query Name'         #Start2 31 into printarray(1)
   put 'Sel Num'            #Start3 8 into printarray(2)
   put 'Crit Num'           #Start4 9 into printarray(3)
   put 'R2 Crt Sel Num'     #Start5 17 into printarray(4)


begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query15_OprId
A.QRYNAME          &Query15_QryName
A.SELNUM           &Query15_SelNum
A.CRTNUM           &Query15_CrtNum
A.R2CRTSELNUM      &Query15_R2CrtSelNum


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Query15_OprId        (+1, #Start1)
   print &Query15_QryName      ( 0, #Start2)
   print &Query15_SelNum       ( 0, #Start3)       edit B999
   print &Query15_CrtNum       ( 0, #Start4)       edit B999
   print &Query15_R2CrtSelNum  ( 0, #Start5)    edit BBBB999

FROM PSQRYCRITERIA A
WHERE A.R2CRTSELNUM <> 0
  AND NOT EXISTS
  (SELECT 'X'
  FROM PSQRYSELECT D
  WHERE D.OPRID = A.OPRID
    AND D.QRYNAME = A.QRYNAME
    AND D.SELNUM = A.R2CRTSELNUM)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SysQuery-16                             !
! Descr:     System table audit against PSQRYCRITERIA table:           !
!            Query-16: Verify Query Left Criteria Field number exist.   !
!----------------------------------------------------------------------!
begin-procedure SysQuery-16

   let $AuditDescr = '(QUERY-16) Query Criteria Field-Left does not exist '
      || 'in the Query Selection table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #Start5          = 70
   let #Start6          = 89
   let #numofhdr        =  6

   put 'Oper ID'            #Start1 10 into printarray(0)
   put 'Query Name'         #Start2 31 into printarray(1)
   put 'Sel Num'            #Start3 8  into printarray(2)
   put 'Crit Num'           #Start4 9  into printarray(3)
   put 'Left Sel Num'       #Start5 17 into printarray(4)
   put 'Left Field Num'     #Start6 17 into printarray(5)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query16_OprId
A.QRYNAME          &Query16_QryName
A.SELNUM           &Query16_SelNum
A.CRTNUM           &Query16_CrtNum
A.LCRTSELNUM       &Query16_LCrtSelNum
A.LCRTFLDNUM       &Query16_LCrtFldNum


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query16_OprId        (+1, #Start1)
   print &Query16_QryName      ( 0, #Start2)
   print &Query16_SelNum       ( 0, #Start3)       edit B999
   print &Query16_CrtNum       ( 0, #Start4)       edit B999
   print &Query16_LCrtSelNum   ( 0, #Start5)    edit BBBB999
   print &Query16_LCrtFldNum   ( 0, #Start6)    edit BBBB999

FROM PSQRYCRITERIA A
WHERE A.LCRTFLDNUM <> 0
  AND NOT EXISTS
  (SELECT 'X'
  FROM PSQRYFIELD B
  WHERE B.OPRID = A.OPRID
    AND B.QRYNAME = A.QRYNAME
    AND B.SELNUM = A.LCRTSELNUM
    AND B.FLDNUM = A.LCRTFLDNUM)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: SysQuery-17                            !
! Descr:     System table audit against PSQRYCRITERIA table:           !
!            Query-17: Verify Query Right1 Criteria Field number exist. !
!----------------------------------------------------------------------!
begin-procedure SysQuery-17

   let $AuditDescr = '(QUERY-17) Query Criteria Field-Right1 does not exist '
      || 'in the Query Selection table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #Start5          = 70
   let #Start6          = 89
   let #numofhdr        =  6

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Sel Num'             #Start3 8  into printarray(2)
   put 'Crit Num'            #Start4 9  into printarray(3)
   put 'Right 1 Sel Num'     #Start5 17 into printarray(4)
   put 'Right 1 Field Num'   #Start6 17 into printarray(5)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query17_OprId
A.QRYNAME          &Query17_QryName
A.SELNUM           &Query17_SelNum
A.CRTNUM           &Query17_CrtNum
A.R1CRTSELNUM      &Query17_R1CrtSelNum
A.R1CRTFLDNUM      &Query17_R1CrtFldNum


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query17_OprId        (+1, #Start1)
   print &Query17_QryName      ( 0, #Start2)
   print &Query17_SelNum       ( 0, #Start3)       edit B999
   print &Query17_CrtNum       ( 0, #Start4)       edit B999
   print &Query17_R1CrtSelNum  ( 0, #Start5)       edit BBBB999
   print &Query17_R1CrtFldNum  ( 0, #Start6)       edit BBBB999

FROM PSQRYCRITERIA A
WHERE A.R1CRTFLDNUM <> 0
  AND NOT EXISTS
  (SELECT 'X'
  FROM PSQRYFIELD B
  WHERE B.OPRID = A.OPRID
    AND B.QRYNAME = A.QRYNAME
    AND B.SELNUM = A.R1CRTSELNUM
    AND B.FLDNUM = A.R1CRTFLDNUM)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure

!----------------------------------------------------------------------!
! Procedure: SysQuery-18                            !
! Descr:     System table audit against PSQRYCRITERIA table:           !
!            Query-18: Verify Query Right2 Criteria Field number exist. !
!----------------------------------------------------------------------!
begin-procedure SysQuery-18

   let $AuditDescr = '(QUERY-18) Query Criteria Field-Right2 does not exist '
      || 'in the Query Selection table:'
#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #Start5          = 70
   let #Start6          = 89
   let #numofhdr        =  6

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Sel Num'             #Start3 8  into printarray(2)
   put 'Crit Num'            #Start4 9  into printarray(3)
   put 'Right 2 Sel Num'     #Start5 17 into printarray(4)
   put 'Right 2 Field Num'   #Start6 17 into printarray(5)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query18_OprId
A.QRYNAME          &Query18_QryName
A.SELNUM           &Query18_SelNum
A.CRTNUM           &Query18_CrtNum
A.R2CRTSELNUM      &Query18_R2CrtSelNum
A.R2CRTFLDNUM      &Query18_R2CrtFldNum


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query18_OprId        (+1, #Start1)
   print &Query18_QryName      ( 0, #Start2)
   print &Query18_SelNum       ( 0, #Start3)       edit B999
   print &Query18_CrtNum       ( 0, #Start4)       edit B999
   print &Query18_R2CrtSelNum  ( 0, #Start5)       edit BBBB999
   print &Query18_R2CrtFldNum  ( 0, #Start6)       edit BBBB999

FROM PSQRYCRITERIA A
WHERE A.R2CRTFLDNUM <> 0
  AND NOT EXISTS
  (SELECT 'X'
  FROM PSQRYFIELD B
  WHERE B.OPRID = A.OPRID
    AND B.QRYNAME = A.QRYNAME
    AND B.SELNUM = A.R2CRTSELNUM
    AND B.FLDNUM = A.R2CRTFLDNUM)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure

!----------------------------------------------------------------------!
! Procedure: SysQuery-19                            !
! Descr:     System table audit against PSQRYCRITERIA table:           !
!            Query-19: Verify Query Criteria Right1 Expr. number exist. !
!----------------------------------------------------------------------!
begin-procedure SysQuery-19

   let $AuditDescr = '(QUERY-19) Query Criteria Expression-Right1 does not '
      || 'exist in the Query Selection table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #Start5          = 70
   let #numofhdr        =  5

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Sel Num'             #Start3 8  into printarray(2)
   put 'Crit Num'            #Start4 9  into printarray(3)
   put 'Right 1 Exp Num'     #Start5 17 into printarray(4)



begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query19_OprId
A.QRYNAME          &Query19_QryName
A.SELNUM           &Query19_SelNum
A.CRTNUM           &Query19_CrtNum
A.R1CRTEXPNUM      &Query19_R1CrtExpNum


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query19_OprId        (+1, #Start1)
   print &Query19_QryName      ( 0, #Start2)
   print &Query19_SelNum       ( 0, #Start3)       edit B999
   print &Query19_CrtNum       ( 0, #Start4)       edit B999
   print &Query19_R1CrtExpNum  ( 0, #Start5)       edit BBBB999

FROM PSQRYCRITERIA A
WHERE A.R1CRTEXPNUM <> 0
  AND NOT EXISTS
  (SELECT 'X'
  FROM PSQRYEXPR B
  WHERE B.OPRID = A.OPRID
    AND B.QRYNAME = A.QRYNAME
    AND B.EXPNUM = A.R1CRTEXPNUM)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure

!----------------------------------------------------------------------!
! Procedure: SysQuery-20                            !
! Descr:     System table audit against PSQRYCRITERIA table:           !
!            Query-20: Verify Query Criteria Right2 Expr. number exist. !
!----------------------------------------------------------------------!
begin-procedure SysQuery-20

   let $AuditDescr = '(QUERY-20) Query Criteria Expression-Right2 does not '
      || 'exist in the Query Selection table:'

#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 13
   let #Start3          = 46
   let #Start4          = 57
   let #Start5          = 70
   let #numofhdr        =  5

   put 'Oper ID'             #Start1 10 into printarray(0)
   put 'Query Name'          #Start2 31 into printarray(1)
   put 'Sel Num'             #Start3 8  into printarray(2)
   put 'Crit Num'            #Start4 9  into printarray(3)
   put 'Right 2 Exp Num'     #Start5 17 into printarray(4)


begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query20_OprId
A.QRYNAME          &Query20_QryName
A.SELNUM           &Query20_SelNum
A.CRTNUM           &Query20_CrtNum
A.R2CRTEXPNUM      &Query20_R2CrtExpNum


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query20_OprId        (+1,#Start1)
   print &Query20_QryName      ( 0, #Start2)
   print &Query20_SelNum       ( 0, #Start3)       edit B999
   print &Query20_CrtNum       ( 0, #Start4)       edit B999
   print &Query20_R2CrtExpNum  ( 0, #Start5)       edit BBBB999

FROM PSQRYCRITERIA A
WHERE A.R2CRTEXPNUM > 0
  AND NOT EXISTS
  (SELECT 'X'
  FROM PSQRYEXPR B
  WHERE B.OPRID = A.OPRID
    AND B.QRYNAME = A.QRYNAME
    AND B.EXPNUM = A.R2CRTEXPNUM)
ORDER BY 1, 2
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!----------------------------------------------------------------------!
! Procedure: SysQuery-22                          !
! Descr:     System table audit against PSQRYDEFN table:               !
!            Query-22: Finds Queries That Were Created without public   !
!                      access                                           !
!----------------------------------------------------------------------!
begin-procedure SysQuery-22

   let $AuditDescr = '(QUERY-22) Following Queries Were Created Without PUBLIC Access'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if


   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 34
   let #numofhdr        =  2

   put 'Query Name'          #Start1 31 into printarray(0)
   put 'Oper ID'             #Start2 31 into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query22_OprId
A.QRYNAME          &Query22_QryName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Query22_QryName      ( +1, #Start1)
   print &Query22_OprId        (  0, #Start2)

FROM PSQRYDEFN A
#ifdef ORACLE
WHERE A.OPRID >' '
#else
WHERE A.OPRID >''
#endif
ORDER BY A.QRYNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure

!----------------------------------------------------------------------!
! Procedure: SysQuery-23                          !
! Descr:     System table audit against PSQRYDEFN table:               !
!            Query-23: Finds Queries That Were Created without public   !
!                      access                                           !
!----------------------------------------------------------------------!
begin-procedure SysQuery-23

   let $AuditDescr = '(QUERY-23) Following Queries Do Not Exist in PSQRYRECORD'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if


   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          =  34
   let #numofhdr        =  2
   
   put 'Query Name'          #Start1 31 into printarray(0)
   put 'OperID'              #Start2 31 into printarray(1)

  
begin-SELECT on-Error=Rpt-SQL-Error
A.QRYNAME          &Query23_QryName
A.OPRID            &Query23_OprId

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Query23_QryName      ( +1, #Start1)
   print &Query23_OprId        (  0, #Start2)
   
FROM PSQRYDEFN A
WHERE A.OPRID NOT IN (
    SELECT D.OPRID
    FROM PSQRYDEFN D, PSQRYRECORD E
    WHERE D.OPRID=E.OPRID
    AND D.QRYNAME=E.QRYNAME)
    OR A.QRYNAME NOT IN (
    SELECT B.QRYNAME
    FROM PSQRYRECORD B, PSRECDEFN C
    WHERE B.RECNAME=C.RECNAME
    AND C.RECTYPE <> 6)
ORDER BY A.QRYNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure
!-----------------------------------------------------------------------!
! Procedure: SysQuery-24                                                !
! Descr:     System table audit against PSQRYDEFN table:                !
!            Query-24: Finds Queries That Were Created with query name  !
!                      Untitled                                          !
!-----------------------------------------------------------------------!
begin-procedure SysQuery-24

   let $AuditDescr = '(QUERY-24) Following Queries Were Created With name UNTITLED'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if


   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 34
   let #numofhdr        =  2

   put 'Query Name'          #Start1 31 into printarray(0)
   put 'Oper ID'             #Start2 31 into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query24_OprId
A.QRYNAME          &Query24_QryName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print &Query24_QryName      ( +1, #Start1)
   print &Query24_OprId        (  0, #Start2)

FROM PSQRYDEFN A
WHERE A.QRYNAME='UNTITLED'
ORDER BY A.OPRID
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure

!----------------------------------------------------------------------------------!
! Procedure: SysQuery-25                                                           !
! Descr:     System table audit against PSQRYDEFN table:                           !
!            Query-25: List Queries with blank names existing in the database      !
!----------------------------------------------------------------------------------!

begin-procedure SysQuery-25

 let $AuditDescr = '(QUERY-25) Following queries with blank names exist in the database'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if

let #rows               =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 34
   let #numofhdr        =  2

   put 'Oper ID'          #Start1 31 into printarray(0)
   put 'Query Name'             #Start2 31 into printarray(1)

begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query25_OprId
A.QRYNAME          &Query25_QryName


   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1

   print   &Query25_OprId   ( +1, #Start1)
   print   &Query25_QryName (  0, #Start2)

FROM PSQRYDEFN A
WHERE A.QRYNAME LIKE ' %'
ORDER BY A.OPRID
end-SELECT

do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!-----------------------------------------------------------------------!
! Procedure: SysQuery-26                                                !
! Descr:     System table audit against PSQRYDEFN table:                !
!            Query-26: Finds Queries That have different number of      !
!                      fields in multiple union clauses                 !
!-----------------------------------------------------------------------!
begin-procedure SysQuery-26

   let $AuditDescr = '(QUERY-26) Following Queries Have Unions But They Select Unequal Number of Fields'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if


   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 33
   let #Start3          = 66
   let #Start4          = 84
   let #numofhdr        =  4

   put 'Oper ID'           #Start1 30 into printarray(0)
   put 'Query Name'        #Start2 30 into printarray(1)
   put '"Select" Number'   #Start3 15 into printarray(2)
   put 'Field Count'       #Start4 15 into printarray(3)


begin-SELECT on-Error=Rpt-SQL-Error
A.OPRID            &Query26_OprId
A.QRYNAME          &Query26_QryName
A.SELNUM           &Query26_SelNum
MAX(A.COLUMNNUM)   &Query26_FldCount

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query26_OprId        (+1, #Start1)
   print &Query26_QryName      ( 0, #Start2)
   print &Query26_SelNum       ( 0, #Start3)       edit B99999
   print &Query26_FldCount     ( 0, #Start4)       edit B99999

FROM PSQRYFIELD A, PSQRYSELECT B
WHERE A.QRYNAME IN (SELECT C.QRYNAME FROM PSQRYSELECT C WHERE C.SELECTTYPE = 3)
AND B.SELECTTYPE IN (1, 3)
AND B.QRYNAME = A.QRYNAME
AND B.OPRID = A.OPRID
AND B.SELNUM = A.SELNUM
GROUP BY A.OPRID, A.QRYNAME, A.SELNUM
HAVING MAX(A.COLUMNNUM) <> ANY
(SELECT MAX(D.COLUMNNUM)FROM PSQRYFIELD D, PSQRYSELECT E
WHERE D.QRYNAME = A.QRYNAME
AND D.OPRID = A.OPRID
AND E.OPRID = D.OPRID
AND E.QRYNAME = D.QRYNAME
AND E.SELNUM = D.SELNUM
AND E.SELECTTYPE IN(1, 3)
GROUP BY D.OPRID, D.QRYNAME, D.SELNUM)
ORDER BY A.OPRID, A.QRYNAME, A.SELNUM
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure


!-----------------------------------------------------------------------!
! Procedure: SysQuery-27                                                !
! Descr:     System table audit against PSQRYDEFN table:                !
!            Query-27: Finds Queries That use XLAT fields whole values  !
!                      do not exist in PSXLATITEM table                 !
!-----------------------------------------------------------------------!
begin-procedure SysQuery-27

   let $AuditDescr = '(QUERY-27) Following Queries Use XLAT Fields Whose Values '
      || 'Do not Exist In PSXLATITEM Table:'


#ifdef debugd
    show 'Starting: ' $AuditDescr
    date-time () {PTHMSM} &StrDateTime
    let $StrDateTime = strtodate(&StrDateTime,{PTHMSM})
    show 'StartTime   : ' &StrDateTime
#end-if


   let #rows            =  0
   let $DetailErrFound  = 'N'
   let #Start1          =  1
   let #Start2          = 62
   let #numofhdr        =  2

   put 'Query Name'        #Start1 60 into printarray(0)
   put 'Field Name'        #Start2 36 into printarray(1)


begin-SELECT DISTINCT on-Error=Rpt-SQL-Error
QRYNAME          &Query27_QryName
FIELDNAME        &Query27_FieldName

   if (((#current-line + 1) = #sqr-max-lines) and $DetailErrFound = 'Y') or ($DetailErrFound = 'N')
       move 'Y' to $DetailErrFound
       do PrintSectionHeadings
   end-if
   let #rows = #rows +1


   print &Query27_QryName        (+1, #Start1)
   print &Query27_FieldName      ( 0, #Start2)

FROM PSQRYFIELD
WHERE COLUMNNUM > 0 AND XLATTYPE > 1  
AND FIELDNAME NOT IN
(SELECT DISTINCT FIELDNAME FROM PSXLATITEM WHERE EFF_STATUS = 'A')
ORDER BY QRYNAME, FIELDNAME
end-SELECT

   do End-Section

#ifdef debugd
    date-time () {PTHMSM} &EndDateTime
    show 'EndTime     : ' &EndDateTime
    let $EndDateTime = strtodate(&EndDateTime,{PTHMSM})
    let #ElapsedTime = datediff($EndDateTime, $StrDateTime,'second')
    show 'Elapsed Time: ' #ElapsedTime edit 9999,999.999 ' (seconds)'
    show 'Exiting : ' $AuditDescr
    show ' '
#End-if


end-procedure
