!***********************************************************************
!  PAY760: Print contents of Valid Combination Code Table
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:05:07:57                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization
#include 'paycfprt.sqc'!Print ChartField functions

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PAY760' to $ReportID

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  do Get-Report-Language
  move $Pay760_ReportTitle to $ReportTitle

  display ' '
  display $ReportTitle
  display ' '

end-procedure

! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from PAY760 program ids
  do Init_Report_Translation($ReportID,$language_cd)

  do Get_Field_Information ('PAY760', 'REPORT_TITLE', $Pay760_ReportTitle,  #dummy_width)
  do Get_Field_Information ('PAY760', 'SETID',        $Pay760_SetID,        #dummy_width)
  do Get_Field_Information ('PAY760', 'PROC_GRP1',    $Pay760_ProcGrp1,     #dummy_width)
  do Get_Field_Information ('PAY760', 'PROC_GRP2',    $Pay760_ProcGrp2,     #dummy_width)
  do Get_Field_Information ('PAY760', 'EFF_DATE1',    $Pay760_EffDate1,     #dummy_width)
  do Get_Field_Information ('PAY760', 'EFF_DATE2',    $Pay760_EffDate2,     #dummy_width)
  do Get_Field_Information ('PAY760', 'EFF_STATUS',   $Pay760_EffStatus,    #dummy_width)
  do Get_Field_Information ('PAY760', 'COMBO_CD',     $Pay760_ComboCd,      #dummy_width)
  do Get_Field_Information ('PAY760', 'DESCR_LONG',   $Pay760_Descrlong,    #dummy_width)
  do Get_Field_Information ('PAY760', 'DESCR_SHORT1', $Pay760_Descrshort1,  #dummy_width)
  do Get_Field_Information ('PAY760', 'DESCR_SHORT2', $Pay760_Descrshort2,  #dummy_width)
  do Get_Field_Information ('PAY760', 'VALID_FLAG1',  $Pay760_ValidFlag1,   #dummy_width)
  do Get_Field_Information ('PAY760', 'VALID_FLAG2',  $Pay760_ValidFlag2,   #dummy_width)


  !------------------------------------------------------------------------------------------------------!
  ! Dynamic ChartFields variables used by the Common CF Print SQC                                        !
  !------------------------------------------------------------------------------------------------------!
  let $DynCF_ChartFields_Option = 'A'        !CF Configuration - 'P' = Pending Changes, 'A' - Current
  let $DynCF_LabelPosn_Option = 'T'          !ChartField Label Position - 'T' = above, 'S' = side
  let $DynCF_LabelUnderLine = 'N'            !ChartField Label Underline - 'Y' = Print, 'N' = Suppress
  let $DynCF_Alignment_Option = 'L'          !ChartField Label Alignment - 'L' = Left, 'R' = Right, 'C' = Center
  let $DynCF_CF_Headings = 'N'               !ChartField Label Heading - 'Y' = Print, 'N' = Suppress
  let $DynCF_LabelName_Option = 'S'          !ChartField Label - 'L' = LongName, 'S' = ShortName
  let $DynCF_Include_Affiliate = 'Y'         !Include Affiliate - 'Y' = Yes, 'N' = No
  let $DynCF_LanguageCd = $language_cd       !ChartField Language Code
  let #DynCF_StrCol = 10                     !ChartField Starting Column
  let #DynCF_EndCol = 175                    !ChartField Ending Column

  do Create-CF-Array
  do Build-CF-Array

  let #StrLine    = 1
  !------------------------------------------------------------------------------------------------------!
  ! End of Dynamic ChartFields Variables setup                                                           !
  !------------------------------------------------------------------------------------------------------!

end-procedure

begin-HEADING 7

  #Include 'stdhdgtr.sqc'

  print $Pay760_ProcGrp1     (+2, 11)
  print $Pay760_EffDate1      (0, 22)
  print $Pay760_Descrshort1   (0,105)
  print $Pay760_ValidFlag1    (0,123)

  print $Pay760_SetID        (+1,  3)
  print $Pay760_ProcGrp2      (0, 12)
  print $Pay760_EffDate2      (0, 24)
  print $Pay760_EffStatus     (0, 36)
  print $Pay760_ComboCd       (0, 45)
  print $Pay760_Descrlong     (0, 73)
  print $Pay760_Descrshort2   (0,105)
  print $Pay760_ValidFlag2    (0,120)

end-HEADING

!***********************************************************************
!  PROC REPORT
!         Main Procedure
!***********************************************************************

BEGIN-PROCEDURE Process-Main
BEGIN-SELECT

A.SETID
A.PROCESS_GROUP
A.FDM_HASH
A.EFFDT
A.EFF_STATUS
A.FDM_COMBO_CD
A.DESCR
A.DESCRSHORT
A.ACCOUNT
A.DEPTID_CF
A.FUND_CODE
A.PROGRAM_CODE
A.CLASS_FLD
A.PROJECT_ID
A.AFFILIATE
A.PRODUCT
A.OPERATING_UNIT
A.ALTACCT
A.BUDGET_REF
A.CHARTFIELD1
A.CHARTFIELD2
A.CHARTFIELD3
A.AFFILIATE_INTRA1
A.AFFILIATE_INTRA2
A.VALID_FLAG

    move &A.DESCR      to $PRNT_DESCR
    move &A.DESCRSHORT to $PRNT_DESCRSHORT
    if $Curr_language_cd <> $Psoptions_Language_Cd
        do Lang-Record-Details
    end-if

    do Format-Datetime (&A.EFFDT, $EffDate, {DEFMDY},'','')

    let $ACCOUNT            = RTRIM(&A.ACCOUNT, ' ')
    let $DEPTID_CF          = RTRIM(&A.DEPTID_CF, ' ')
    let $PROJECT_ID         = RTRIM(&A.PROJECT_ID, ' ')
    let $PRODUCT            = RTRIM(&A.PRODUCT, ' ')
    let $FUND_CODE          = RTRIM(&A.FUND_CODE, ' ')
    let $PROGRAM_CODE       = RTRIM(&A.PROGRAM_CODE, ' ')
    let $CLASS_FLD          = RTRIM(&A.CLASS_FLD, ' ')
    let $AFFILIATE          = RTRIM(&A.AFFILIATE, ' ')
    let $OPERATING_UNIT     = RTRIM(&A.OPERATING_UNIT, ' ')
    let $ALTACCT            = RTRIM(&A.ALTACCT, ' ')
    let $BUDGET_REF         = RTRIM(&A.BUDGET_REF, ' ')
    let $CHARTFIELD1        = RTRIM(&A.CHARTFIELD1, ' ')
    let $CHARTFIELD2        = RTRIM(&A.CHARTFIELD2, ' ')
    let $CHARTFIELD3        = RTRIM(&A.CHARTFIELD3, ' ')
    let $AFFILIATE_INTRA1   = RTRIM(&A.AFFILIATE_INTRA1, ' ')
    let $AFFILIATE_INTRA2   = RTRIM(&A.AFFILIATE_INTRA2, ' ')


    do Format-CF-Print-Line ($ACCOUNT, $DEPTID_CF, $PROJECT_ID, $PRODUCT, $FUND_CODE, $PROGRAM_CODE,
                             $CLASS_FLD, $AFFILIATE, $OPERATING_UNIT, $ALTACCT, $BUDGET_REF, $CHARTFIELD1,
                             $CHARTFIELD2, $CHARTFIELD3, $AFFILIATE_INTRA1, $AFFILIATE_INTRA2)

    let #ReqLines = #DynCF_DetailPrtLine * 2 + 2
    if #Current-Line + #ReqLines > 75
        new-page
    end-if

    print &A.SETID                (+2,  3, 5)
    print &A.PROCESS_GROUP         (0, 10,10)
    print $EffDate                 (0, 22,10)
    print &A.EFF_STATUS            (0, 39, 1)
    print &A.FDM_COMBO_CD          (0, 45,25)
    print $PRNT_DESCR              (0, 73,30)
    print $PRNT_DESCRSHORT         (0,105,10)
    print &A.VALID_FLAG            (0,125, 1)

    let #AdvLineNo = 1
    do Print-CF-Labels-and-Values (#AdvLineNo, #StrLine)

FROM PS_VALID_COMBO_TBL A
ORDER BY A.SETID, A.PROCESS_GROUP, A.FDM_HASH, A.EFFDT DESC

END-SELECT
END-PROCEDURE


BEGIN-PROCEDURE Lang-Record-Details
BEGIN-SELECT
LA.DESCR
LA.DESCRSHORT

        let $PRNT_DESCR = Cond(Rtrim(&LA.DESCR,' ')='', &A.DESCR, &LA.DESCR)
        let $PRNT_DESCRSHORT = Cond(Rtrim(&LA.DESCRSHORT,' ')='', &A.DESCRSHORT, &LA.DESCRSHORT)

FROM PS_VALID_COMBO_LNG LA
WHERE LA.FDM_HASH    = &A.FDM_HASH
  AND LA.LANGUAGE_CD = $Curr_language_cd
END-SELECT
END-PROCEDURE

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
