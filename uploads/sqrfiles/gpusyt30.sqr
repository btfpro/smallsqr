!***********************************************************************
!  gpusyt30:  W-2 Audit Report                                         *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/08/31:17:55:31                                 *
!       $Release:  HR9                                                 *
!      $Revision:  103                                                 *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#include 'setup32.sqc' !Printer and page-size initialization

Begin-Setup
  declare-variable
      integer #MaxYear2
  end-declare
End-Setup

Begin-Report
  do Init-Report
  do Process-Main
  do Stdapi-Term
  do Delete-Gp-Eln-Tmp-Table
End-Report

begin-procedure Init-Report
  let $fromtoS = ''
  move 'GPUSYT30' to $ReportID
  move 'YE Data Audit Report' to $ReportTitle
  display ''
  display 'YE Data Audit Report'
  move 'Y' to $DataAudit

  let $t1 = DateToStr(DateNow(),'hh:mi:ss') 
  display $t1

  do Get-EandG
  do Get-FederalProduct
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Initialization
  do Get-Tax-Reporting-Run-Controls
  do Convert-Parameters

end-procedure


begin-procedure Initialization
  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

  move $910Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear
  do Get-Tax-Reporting-Run-Controls

  move &TX.CALENDAR_YEAR to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')


begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

end-procedure

Begin-Heading 8
  #Include 'stdhdg01.sqc'

  print 'W2 Rpt Company '              (3,1)
  print $A.W2_Reporting_Co             (0,+2)
  print $A.Descr                       (0,+2)
  let $TaxYear = 'Tax Year ' || $CalYear
  print $TaxYear                       (3,)    center

  if $TaxForm_ID = '40'

       if $PrintTotals  = 'Y'
         print '                          ' (4,1)
         print $TaxForm_Name                (5,1)
         print ' - Company Totals         ' (5,6)               !HP90001

       ! Column Headings
         print 'Taxable Gross/'               (+2,20)
         print 'OASDI Gross/'                 (,37)
         print 'Medicare Gross/'              (,54)
         print 'Advance EIC/'                 (,71)
         print 'Nonqlfd Plans/'               (,88)
         print 'Commissions/'                 (,106)
         print 'Tips/'                        (,126)
         print 'Retirement Fund/'             (,144)

         print 'Tax'                          (+1,20)
         print 'Tax'                          (,37)
         print 'Tax'                          (,54)
         print 'Dep Care'                     (,71)
         print 'Benefits'                     (,88)
         print 'Allowances'                   (,106)
         print 'Reimbursed Exp'               (,126)
         print 'CODA Contributions'           (,144)

       else
         print 'Federal EIN '               (4,1)
         print $A.Federal_EIN               (,+2)   edit xx-xxxxxxx
         print $SortField                   (5,1)
         if $SortField <> '' and $priorSortValueYE30 = ''
             print 'Blank'                (,+2)
         else
             print $priorSortValueYE30               (,+2)
         end-if

       ! Column Headings
         print 'Taxable Gross/'               (+2,20)
         print 'OASDI Gross/'                 (,37)
         print 'Medicare Gross/'              (,54)
         print 'Commissions/'                 (,71)
         print 'Tips/'                        (,88)
         print 'Retirement Fund/'             (,106)
         print 'Tax'                          (+1,20)
         print 'Tax'                          (,37)
         print 'Tax'                          (,54)
         print 'Allowances'                   (,71)
         print 'Reimbursed Exp'               (,88)
         print 'CODA Contributions'           (,106)

       end-if


  else

       if $PrintTotals  = 'Y'
         print '                          ' (4,1)
         print $TaxForm_Name                (5,1)
         print ' - Company Totals         ' (5,6)               !HP90001

      ! Column Headings
         print 'Taxable Gross/'               (+2,20)
         print 'OASDI Gross/'                 (,37)
         print 'Medicare Gross/'              (,54)
         print 'Advance EIC/'                 (,71)
         print 'Nonqlfd Plans/'               (,88)
         print 'Commissions/'                 (,106)
         print 'Tips/'                        (,126)
         print 'Retirement Fund/'             (,144)

         print 'Tax'                          (+1,20)
         print 'Tax'                          (,37)
         print 'Tax'                          (,54)
         print 'Dep Care'                     (,71)
         print 'Benefits'                     (,88)
         print 'Allowances'                   (,106)
         print 'Reimbursed Exp'               (,126)
         print 'CODA Contributions'           (,144)

       else
       if $PrintFormTotals  = 'Y'
         print 'Federal EIN '               (4,1)
         print $A.Federal_EIN               (,+2)   edit xx-xxxxxxx
         print $SortField                   (5,1)
         if $SortField <> '' and $priorSortValueYE30 = ''
             print 'Blank'                (,+2)
         else
             print $priorSortValueYE30               (,+2)
         end-if

       ! Column Headings
         print 'Taxable Gross/'               (+2,20)
         print 'OASDI Gross/'                 (,37)
         print 'Medicare Gross/'              (,54)
         print 'Advance EIC/'                 (,71)
         print 'Nonqlfd Plans/'               (,88)

         print 'Tax'                          (+1,20)
         print 'Tax'                          (,37)
         print 'Tax'                          (,54)
         print 'Dep Care'                     (,71)
         print 'Benefits'                     (,88)
         print 'Box 08 Tips'                  (,158)
         let $PrintFormTotals  = 'N'
       else
         print 'Federal EIN '               (4,1)
         print $A.Federal_EIN               (,+2)   edit xx-xxxxxxx
         print $SortField                   (5,1)
         if $SortField <> '' and $priorSortValueYE30 = ''
             print 'Blank'                (,+2)
         else
             print $priorSortValueYE30               (,+2)
         end-if

       ! Column Headings
         print 'Taxable Gross/'               (+2,20)
         print 'OASDI Gross/'                 (,37)
         print 'Medicare Gross/'              (,54)
         print 'Advance EIC/'                 (,71)
         print 'Nonqlfd Plans/'               (,88)

         print 'Tax'                          (+1,20)
         print 'Tax'                          (,37)
         print 'Tax'                          (,54)
         print 'Dep Care'                     (,71)
         print 'Benefits'                     (,88)
         print 'Box 12'                       (,106)
         print 'Box 14'                       (,126)
         print 'Box 13'                       (,144)
         print 'Box 08 Tips'                  (,158)
       end-if
     end-if
  end-if

End-Heading

begin-procedure Process-Main


  do Report-File-Create

  if $EE_Selected = 'Y'
    do Delete-Sel-Employees-Table
  end-if

  if  $Company_Selected = 'Y'
    do  Delete-Sel-Company-Table
  end-if

  if $EmployeeFound = 'N'
    display ' '
    display '****** No Employee Records Selected ******'
    display ' '
    new-page
    print '********************************'  (+3,1)
    print '  No Employee Records Selected  '  (+1,1)
    print '********************************'  (+1,1)
  end-if
  let $t2 = DateToStr(DateNow(),'hh:mi:ss') 
  display $t2
end-procedure

begin-procedure Report-File-Create
  move 'N' to $PrintTotals
  move 'N' to $EmployeeFound
  move 'N' to $EmployeeFoundInCompany
  let $first-entry = 'Y'
  let $Company-totals-PR = 'N'
  let $Company-totals-Rest = 'N'
  let $Company-totals-Fed = 'N'

  let $SortSQL10 = $Sort2

begin-SELECT DISTINCT
A.GPUS_YE_RPT_CO
A.DESCR
A.GPUS_TAX_EIN
A.EFFDT
  move &A.EFFDT          to $EFFDATE
  if &A.GPUS_TAX_EIN <> $A.Federal_EIN
  move $A.Federal_EIN  to $diffCompany
  move '' to $priorSortValueYE30
  end-if
  move &A.GPUS_TAX_EIN     to $A.Federal_EIN  099999999
  move &A.Descr           to $A.Descr
  move &A.GPUS_YE_RPT_CO to $A.W2_Reporting_Co
  evaluate $SortCode1

    when = '10'
    when = '50'
    when = '60'
       do Read-Employee-Data
    break

    when = '40'
    when = '20'
    when = '30'

         do W2-Sort
    break
  end-evaluate


      if $EmployeeFoundInCompany = 'Y'
      if $SortCode1 <> '10'
        NEW-PAGE
      end-if

        if $TaxForm_ID = '40'
             do Company-Totals-PR
             let $Company-totals-PR = 'Y'
        else
             do Company-Totals-Fed
             let $Company-totals-Fed = 'Y'
             do Company-Totals-Rest
             let $Company-totals-Rest = 'Y'
        end-if

        if $Company-Totals-Rest = 'Y'
!              set the row number
           do Company-Totals-PR
        else
!              set the row number
           do Company-Totals-Fed
!              set the row number
           do Company-Totals-Rest
        end-if
      end-if
      
      if $EmployeeFoundInCompany = 'N'
         print '********************************'  (+3,1)
         print '  No Employee Records Selected  '  (+1,1)
         print '********************************'  (+1,1)
         NEW-PAGE
      end-if


     IF $EmployeeFoundInCompany = 'Y'
        
     IF $GPUS_YE_PRC_TYPE = '30'
          if $diffCompany <> $A.Federal_EIN and $EmployeeFoundInCompany = 'Y'
            NEW-PAGE
          end-if
      else
            NEW-PAGE
     end-if
     
     end-if
      
     move 'N' to $EmployeeFoundInCompany
     move 'N' to $PrintTotals
     move 'N' to $PrintFormTotals
     let $Company-totals-PR   = 'N'
     let $Company-totals-Rest = 'N'
     let $Company-totals-Fed  = 'N'

FROM  PS_GPUS_YE_CO_TBL A,PS_GPUS_YE_DAT C

WHERE A.EFFDT = (SELECT
                 MAX(A1.EFFDT)
                 FROM PS_GPUS_YE_CO_TBL A1
                 WHERE A1.GPUS_YE_RPT_CO = A.GPUS_YE_RPT_CO
                    AND A1.EFFDT     <= $AsOfDate)

   [$A.SelectedCompanies]                 !NULL string if SELECT Company option not used
   AND A.GPUS_YE_RPT_CO <> ' '

ORDER BY A.GPUS_YE_RPT_CO
end-SELECT
end-procedure

begin-procedure Read-Employee-Data

begin-SELECT
E.GPUS_TAX_EIN
E.GPUS_TAXFORM_ID  () on-break level=1 print=never after=After-FORM
E.EMPLID           () on-break level=2 print=never before=Before-EmplID
E.GPUS_SEQ_NBR     () on-break level=3 print=never after=After-Seq
E.GPUS_YE_STATE
E.SSN
E.GPUS_YE_FNAME
E.GPUS_YE_MNAME
E.GPUS_YE_LNAME
E.GPUS_YE_SUFFIX
E.POSTAL
E.GPUS_STATUTORYFLAG
E.GPUS_PENSION_FLAG
E.GPUS_3SICKPAY_FLAG
E.GPUS_YE_STATUS


  let  $TaxForm_ID = RTRIM(&E.GPUS_TAXFORM_ID,' ')
  move &E.GPUS_TAXFORM_ID to $priorTaxForm_ID
  move &E.GPUS_SEQ_NBR to #E.Sequence_Number
  move &E.GPUS_YE_STATE to $E.W2_State

  if $TaxForm_ID <> '40'
     do create-array-w2
  end-if
     do GET-MAXIMUM-EFFDT

  move 'Y' to $EmployeeFound
  move 'Y' to $SortEmployeeFound
  move 'Y' to $EmployeeFoundInCompany
FROM   PS_GPUS_YE_EE5_VW E
WHERE E.GPUS_TAX_EIN = $A.Federal_EIN
   [$W.SelectedCompanies]    !NULL string if SELECT Company option not used
   AND E.GPUS_CAL_YEAR    >= #MaxYear2
   AND E.GPUS_CAL_YEAR    = &TX.CALENDAR_YEAR
   AND E.GPUS_YE_STATUS  <> '20'
   [$E.SelectedEEs]             !NULL string if SELECT EEs option not used

   AND (EXISTS (SELECT 'X' FROM PS_INSTALLATION IN1
                WHERE IN1.PUBLIC_SECTOR <> 'Y'
                  AND IN1.FED <> 'Y')                                   !HP90001 FED0001
       OR                                                               !HP90001
        EXISTS (SELECT 'X' FROM PS_GPUS_YE_EE5_VW E1                    !HP90001


               WHERE E1.EMPLID          = E.EMPLID                      !HP90001
                 AND E1.GPUS_CAL_YEAR   = E.GPUS_CAL_YEAR               !HP90001
                 AND E1.GPUS_TAXFORM_ID = E.GPUS_TAXFORM_ID             !HP90001
                 AND E1.GPUS_SEQ_NBR = 1   ))                           !HP90001
   [$Sort2]

end-SELECT
end-procedure

begin-procedure Before-EmplID


  move &E.EmplID   to $E.EmplID
  move &E.EmplID   to $EmplID
  move &E.SSN to $S123 xxx
  if $S123 = &Temp_SSN_Mask or RTRIM(&E.SSN, ' ') = ''
    move 'Applied For' to $E.SSN
  else
    move &E.SSN to $E.SSN xxx-xx-xxxx
  end-if
  move &E.GPUS_YE_FNAME   to $E.Fname
  move &E.GPUS_YE_MNAME   to $E.MiddleName
  move &E.GPUS_YE_LNAME   to $E.Lname
  move &E.GPUS_YE_SUFFIX  to $E.Suffix
  let $E.Fname = rtrim($E.Fname, ' ')  || ' '
  let $E.MiddleName = rtrim($E.MiddleName, ' ') || ' '
  let $E.Lname = rtrim($E.Lname, ' ')  || ' '
  let $E.Suffix =rtrim($E.Suffix, ' ')  || ' '
  if $E.MiddleName <> ' '
    let $E.YE_Fname = $E.Fname || $E.MiddleName || $E.Lname || $E.Suffix
  else
    let $E.YE_Fname = $E.Fname || $E.Lname || $E.Suffix
  end-if

  if $TaxForm_ID <> '40'

     move &E.GPUS_PENSION_FLAG    to $E.Pension_Plan
     move &E.GPUS_STATUTORYFLAG   to $E.Statutory_Ee
     move &E.GPUS_3SICKPAY_FLAG to $E.Thirdparty_Sickpay

  end-if

  move &E.GPUS_YE_STATUS   to $EE.Process_Flag
  move 0                  to #FedWages

end-procedure

begin-procedure After-Seq
  do Load-Amounts
  do Print-W2
end-procedure


begin-procedure After-FORM

! No special sort selected

  If $SortCode1 = '10'

    NEW-PAGE
    if $TaxForm_ID = '40'
       do Form-Totals-PR
    else
      if $TaxForm_ID = '10'
        do Form-Totals-Fed
    else
       do Form-Totals-Rest
      end-if
    end-if

    NEW-PAGE
    move &E.GPUS_TAXFORM_ID to $priorTaxForm_ID
    move &E.GPUS_TAXFORM_ID      to $TaxForm_ID


  end-if

end-procedure

begin-procedure create-array-w2

  if $first-entry = 'Y'

     do Get-Box14-Labels

     create-array name=Box14 size=27
       field=Jurisdiction:char
       field=Text:char
       field=Amount:number

      let $first-entry = 'N'
  end-if

end-procedure

begin-procedure Print-W2
  if $E.EmplID <> $priorEmplID or $E.Company <> $priorCompany
    do Print-EE-Data
    next-listing skiplines=1
    move $E.EmplID to $priorEmplID
    move $Company  to $priorCompany
  end-if

  if $TaxForm_ID = '40'

     if #E.Sequence_Number = 1

        do Print-Amounts

     end-if

     next-listing need=4  skiplines=1

     move 0 to #Cost_Pension_Annuity
     move 0 to #Wages
     move 0 to #Commissions
     move 0 to #Allowance

     move 0 to #Reimbursed_Expense
     move 0 to #Tax_Withheld
     move 0 to #Retire_Fund
     move 0 to #CODA_Plans
     move 0 to #SS_Wages_PR
     move 0 to #SS_TAX_PR
     move 0 to #Med_Wages_PR
     move 0 to #Med_Tax_PR


  else

    do Federal-and-Territories
  end-if
end-procedure

begin-procedure  Federal-and-Territories

 if $Taxform_ID = '10'
    if #E.Sequence_Number = 1
       do Identify-Box12-Entries-Fed
       do Print-Federal-Amounts
       move '02' to $PrintJurisdiction
       do Print-Box14
       do Print-Box13


       print '0.00'  (1,158)
     end-if
     if $SortCode1 <> '7'
       do Print-Box12 (3)
     end-if
     next-listing need=4  skiplines=1

     if RTRIM($E.W2_State,' ') <> ''
        do Print-State-Amounts
     end-if

     move '03' to $PrintJurisdiction
     do Print-Box14
     do Print-Box12 (3)

     next-listing need=4  skiplines=1


      do Print-Box12 (12)
      do Zero-Box14

     move 0 to #Fed_Wages_F
     move 0 to #Fed_Tax_F
     move 0 to #SS_Wages_F
     move 0 to #SS_Tax_F
     move 0 to #Med_Wages_F
     move 0 to #Med_Tax_F

     move 0 to #Adv_EIC_F
     move 0 to #Dep_Care_F
     move 0 to #Non_Qual_457_F
     move 'N' to $Amt_NonQual_457_Y_F
     move 'N' to $Amt_NonQual_457_N_F
     move 0 to #State_Wages_F
     move 0 to #State_Tax_F
     move 0 to #Adv_EICS_F

 else

    if #E.Sequence_Number = 1
       do Identify-Box12-Entries-Terr
       do Print-Territory-Amounts
       move '02' to $PrintJurisdiction
       do Print-Box14
       do Print-Box13
     end-if
     do Print-Box12-Terr (3)
     next-listing need=4  skiplines=1

     if RTRIM($E.W2_State,' ') <> ''
        do Print-State-Amounts
     end-if

     move '03' to $PrintJurisdiction
     do Print-Box14
     do Print-Box12-Terr (3)
     next-listing need=4  skiplines=1



     do Print-Box12-Terr (12)
     do Zero-Box14

     move 0 to #Fed_Wages
     move 0 to #Fed_Tax
     move 0 to #SS_Wages
     move 0 to #SS_Tax
     move 0 to #Med_Wages
     move 0 to #Med_Tax

     move 0 to #Adv_EIC
     move 0 to #Dep_Care
     move 0 to #Non_Qual_457
     move 'N' to $Amt_NonQual_457_Y
     move 'N' to $Amt_NonQual_457_N
     move 0 to #State_Wages
     move 0 to #State_Tax
     move 0 to #Adv_EICS
   end-if


end-procedure

begin-procedure Print-EE-Data
  print ' '               (1)
  next-listing
  print '****  '          (1,1
  print $E.SSN            (1,)
  print $E.YE_FName        (1,+2,50)
  print $E.EmplID         (1,+2)
  print '  ****'          (1,)

  if $EE.Process_Flag = '20'
    print '************ VOID ************'  (1,70)
  end-if
end-procedure

begin-procedure Load-Amounts
begin-SELECT
C.GPUS_YE_RPT_CO
D.STATE
D.GPUS_TAXFORM_BOX
D.GPUS_TAX_EIN

#ifdef DB2ALL
DECIMAL((D.GPUS_YE_AMOUNT),15,3) &D.W2_Amount
#else
D.GPUS_YE_AMOUNT &D.W2_Amount
#endif
   move &D.W2_Amount to #Amount

   let $D.Box = RTRIM(&D.GPUS_TAXFORM_BOX,' ')

   do  Assign-Year-End-Variables
   If $TaxForm_ID = '40'
      do check-box-PR
   else
     if $TaxForm_ID = '10'
       do check-box-Fed
     else
        do check-box-Rest
     end-if
   end-if


FROM  PS_GPUS_YE_EE1_VW D, PS_GPUS_YE_EE0_VW C
WHERE D.GPUS_TAX_EIN    = &E.GPUS_TAX_EIN
  AND C.GPUS_TAX_EIN    = &E.GPUS_TAX_EIN
  AND D.EMPLID          = $E.Emplid
  AND #MaxYear2         <= D.GPUS_CAL_YEAR
  AND D.GPUS_CAL_YEAR   = &TX.CALENDAR_YEAR
  AND D.GPUS_SEQ_NBR        = #E.Sequence_Number
  AND D.GPUS_TAXFORM_ID      = $TaxForm_ID
  AND D.EMPLID = C.EMPLID
  AND D.GPUS_CAL_YEAR = C.GPUS_CAL_YEAR
  AND D.GPUS_TAX_EIN    = C.GPUS_TAX_EIN
  AND D.GPUS_TAXFORM_ID = C.GPUS_TAXFORM_ID
  [$C.SelectedCompanies]                      !NULL string if SELECT Company option not used
ORDER BY C.GPUS_YE_RPT_CO, D.STATE, D.GPUS_TAXFORM_BOX,D.GPUS_TAX_EIN
end-SELECT
end-procedure

begin-procedure check-box-Rest

   evaluate $D.Box
     when = $YE_Fed_Wages                        !Federal wages
       add  #Amount to #Fed_Wages
       add  #Amount to #FedWages                 !For NY Adjustment
       break
     when = $YE_Fed_Tax                          !Federal tax
       add  #Amount to #Fed_Tax
       break
     when = $YE_SS_Wages                         !SS wages
       add  #Amount to #SS_Wages
       break
     when = $YE_SS_Tax                           !SS Tax
       add  #Amount to #SS_Tax
       break
    when = $YE_Med_Wages                         !Medicare wages
       add  #Amount to #Med_Wages
       break
     when = $YE_Med_Tax                          !Medicare tax
       add  #Amount to #Med_Tax
       break

     when = $YE_Adv_EIC                          !EIC
       add  #Amount to #Adv_EIC
       break
     when = $YE_Dep_Care                         !Dependent care
       add  #Amount to #Dep_Care
       break
     when = $YE_Non_Qual_457_Y                   !non-qualified 457
       add  #Amount to #Non_Qual_457
       move 'Y' to $AmtNonQual_457_Y
       break
     when = $YE_Non_Qual_457_N                   !non-qualified non-457
       add  #Amount to #Non_Qual_457
       move 'Y' to $AmtNonQual_457_N
       break

     when = $YE_Group_Term_Life                  !GTL
       add  #Amount to #Group_Term_Life
       break
     when = $YE_401K                             !401(k)
       add  #Amount to #401K
       break
     when = $YE_403B                             !403(b)
       add  #Amount to #403B
       break
     when = $YE_408K6                            !408(k)(6)
       add  #Amount to #408K6
       break
     when = $YE_457B                             !457(b)
       add  #Amount to #457B
       break
     when = $YE_501C18D                          !501(c)(18)(D)
       add  #Amount to #501C18D
       break
     when = $YE_Sick_Pay                         !Sick pay
       add  #Amount to #Sick_Pay
       break
     when = $YE_Excise_Tax                       !Excise tax
       add  #Amount to #Excise_Tax
       break
     when = $YE_Business_Exp                     !Business expense
       add  #Amount to #Business_Exp
       break
     when = $YE_Uncoll_SS_Tax_GTL                !Uncoll SS tax - GTL
       add  #Amount to #Uncoll_SS_Tax_GTL
       break
     when = $YE_Uncoll_Med_Tax_GTL               !Uncoll Medi tax - GTL
       add  #Amount to #Uncoll_Med_Tax_GTL
       break
     when = $YE_Excl_Moving_Exp                  !Exclud Moving Exp Reimb
       add  #Amount to #Excl_Moving_Exp
       break
     when = $YE_Nontaxable_Combat_Pay            !Non Taxable Combat Pay
       add  #Amount to #Nontaxable_Combat_Pay
       break
     when = $YE_Med_Svgs_Acct                    !Medical Spending Account
       add  #Amount to #Med_Svgs_Acct
       break
     when = $YE_408P_Simple_Retirement           !Section 418(p) SIMPLE Retirement
       add  #Amount to #408P_Simple_Retirement
       break
     when = $YE_Adoption_Exp                     !Adoption Expenses
       add  #Amount to #Adoption_Exp
       break
     when = $YE_NonStatutory_Stock_Opt
       add #Amount to #NonStatutory_Stock_Opt
       break
     when = $YE_NonQual_Def_Comp                  !Nonqualified deferred compensation
       add  #Amount to #NonQual_Def_Comp
       break
     when = $YE_Income_NonQual_Def_Comp           !Income on Nonqualified deferred compensation
       add  #Amount to #Income_NonQual_Def_Comp
       break
     when = $YE_State_Wages                      !State wages
       add  #Amount to #State_Wages
       break
     when = $YE_State_Tax                        !State tax
       add  #Amount to #State_Tax
       break

     when-other
       move $D.Box to $Box xx

       if $Box = $YE_Other
         ARRAY-ADD #Amount to BOX14(#INDEX) AMOUNT
      else
         display 'UNKNOWN BOX IDENTIFIER:'
         display $D.Box
         display 'Processing Stopped'
         STOP
      end-if
   end-evaluate

end-procedure

begin-procedure check-box-Fed
   evaluate $D.Box

     when = $YE_Fed_Wages                        !Federal wages
       add  #Amount to #Fed_Wages_F
       add  #Amount to #FedWages_F                 !For NY Adjustment
       break
     when = $YE_Fed_Tax                          !Federal tax
       add  #Amount to #Fed_Tax_F
       break
     when = $YE_SS_Wages                         !SS wages
       add  #Amount to #SS_Wages_F
       break
     when = $YE_SS_Tax                           !SS Tax
       add  #Amount to #SS_Tax_F
       break
    when = $YE_Med_Wages                         !Medicare wages
       add  #Amount to #Med_Wages_F
       break
     when = $YE_Med_Tax                          !Medicare tax
       add  #Amount to #Med_Tax_F
       break

     when = $YE_Adv_EIC                          !EIC
       add  #Amount to #Adv_EIC_F
       break
     when = $YE_Dep_Care                         !Dependent care
       add  #Amount to #Dep_Care_F
       break
     when = $YE_Non_Qual_457_Y                   !non-qualified 457
       add  #Amount to #Non_Qual_457_F
       move 'Y' to $AmtNonQual_457_Y
       break
     when = $YE_Non_Qual_457_N                   !non-qualified non-457
       add  #Amount to #Non_Qual_457_F
       move 'Y' to $AmtNonQual_457_N
       break
     when = $YE_Uncoll_SS_Tax_On_Tips            !Uncoll SS tax on tips
       add  #Amount to #Uncoll_SS_Tax_On_Tips
       break
     when = $YE_Uncoll_Med_Tax_On_Tips            !Uncoll Medi tax on tips
       add  #Amount to #Uncoll_Med_Tax_On_Tips
       break

     when = $YE_Group_Term_Life                  !GTL
       add  #Amount to #Group_Term_Life_F
       break
     when = $YE_401K                             !401(k)
       add  #Amount to #401K_F
       break
     when = $YE_403B                             !403(b)
       add  #Amount to #403B_F
       break
     when = $YE_408K6                            !408(k)(6)
       add  #Amount to #408K6_F
       break
     when = $YE_457B                             !457(b)
       add  #Amount to #457B_F
       break
     when = $YE_501C18D                          !501(c)(18)(D)
       add  #Amount to #501C18D_F
       break
     when = $YE_Sick_Pay                         !Sick pay
       add  #Amount to #Sick_Pay_F
       break
     when = $YE_Excise_Tax                       !Excise tax
       add  #Amount to #Excise_Tax_F
       break
     when = $YE_Business_Exp                     !Business expense
       add  #Amount to #Business_Exp_F
       break
     when = $YE_Uncoll_SS_Tax_GTL                !Uncoll SS tax - GTL
       add  #Amount to #Uncoll_SS_Tax_GTL_F
       break
     when = $YE_Uncoll_Med_Tax_GTL               !Uncoll Medi tax - GTL
       add  #Amount to #Uncoll_Med_Tax_GTL_F
       break
     when = $YE_Excl_Moving_Exp                  !Exclud Moving Exp Reimb
       add  #Amount to #Excl_Moving_Exp_F
       break
     when = $YE_Nontaxable_Combat_Pay           !YE_Nontaxable_Combat_Pay
       add  #Amount to #Nontaxable_Combat_Pay_F
       break
     when = $YE_Med_Svgs_Acct                    !Medical Spending Account
       add  #Amount to #Med_Svgs_Acct_F
       break
     when = $YE_408P_Simple_Retirement           !Section 418(p) SIMPLE Retirement
       add  #Amount to #408P_Simple_Retirement_F
       break
     when = $YE_Adoption_Exp                     !Adoption Expenses
       add  #Amount to #Adoption_Exp_F
       break
     when = $YE_NonStatutory_Stock_Opt
       add #Amount to #NonStatutory_Stock_Opt_F
       break
     when = $YE_NonQual_Def_Comp
       add #Amount to #NonQual_Def_Comp_F
       break
     when = $YE_Income_NonQual_Def_Comp
       add #Amount to #Income_NonQual_Def_Comp_F
       break

     when = $YE_State_Wages                      !State wages
       add  #Amount to #State_Wages_F
       break
     when = $YE_State_Tax                        !State tax
       add  #Amount to #State_Tax_F
       break

     when-other
       move $D.Box to $Box xx

       if $Box = $YE_Other
         ARRAY-ADD #Amount to BOX14(#INDEX) AMOUNT
       else
         display 'UNKNOWN BOX IDENTIFIER:'
         display $D.Box
         display $E.Emplid
         display $taxform_id
         display 'Processing Stopped'
         STOP
       end-if
   end-evaluate

end-procedure

begin-procedure check-box-PR

   evaluate $D.Box
     when = $YE_Cost_Pension_Annuity                 !Pension/Annuity
       add  #Amount to #Cost_Pension_Annuity
       break
     when = $YE_Wages                                !PR wages
       add  #Amount to #Wages
       break
     when = $YE_Commissions                          !Commissions
       add  #Amount to #Commissions
       break
     when = $YE_Allowance                            !Allowances
       add  #Amount to #Allowance
       break

     when = $YE_Reimbursed_Expense                   !Reimbursed Expenses
       add  #Amount to #Reimbursed_Expense
       break
     when = $YE_Tax_Withheld                         !PR Tax Withheld
       add  #Amount to #Tax_Withheld
       break
     when = $YE_Retire_Fund                          !Retirement fund
       add  #Amount to #Retire_Fund
       break
     when = $YE_CODA_Plans                           !CODA Contributions
       add  #Amount to #CODA_Plans
       break
     when = $YE_SS_Wages                             !Soc Sec Wages
       add  #Amount to #SS_Wages_PR
       break
     when = $YE_SS_Tax                               !Soc Sec Tax Withheld
       add  #Amount to #SS_Tax_PR
       break
     when = $YE_Med_Wages                            !Medicare Wages and Tips
       add  #Amount to #Med_Wages_PR
       break
     when = $YE_Med_Tax                              !Medicare Tax Withheld
       add  #Amount to #Med_Tax_PR
       break

   end-evaluate

end-procedure

begin-procedure Print-Amounts

  print 'Federal - PR' (1,1)                           !Federal Boxes

  do Format-Number(#Wages, $out, 'B9999999.99')        !PR wages
  add #Wages  to #TotalWages_P
  add #Wages  to #FormTotalWages
  print $out  (1,20)

  do Format-Number(#Tax_Withheld, $out, 'B9999999.99') !PR tax
  add #Tax_Withheld to #TotalTax_Withheld_P
  add #Tax_Withheld to #FormTotalTax_Withheld
  print $out  (2,20)

  do Format-Number(#SS_Wages_PR, $out, 'B9999999.99')  !SS wages
  add #SS_Wages_PR to #TotalSS_Wages_PR_P
  add #SS_Wages_PR to #FormTotalSS_Wages_PR
  print $out  (1,37)

  do Format-Number(#SS_Tax_PR, $out, 'B9999999.99')    !SS Tax
  add #SS_Tax_PR to #TotalSS_Tax_PR_P
  add #SS_Tax_PR to #FormTotalSS_Tax_PR
  print $out  (2,37)

  do Format-Number(#Med_Wages_PR, $out, 'B9999999.99') !Medicare wages
  add #Med_Wages_PR to #TotalMed_Wages_PR_P
  add #Med_Wages_PR to #FormTotalMed_Wages_PR
  print $out  (1,54)

  do Format-Number(#Med_Tax_PR, $out, 'B9999999.99')   !Medicare tax
  add #Med_Tax_PR to #TotalMed_Tax_PR_P
  add #Med_Tax_PR to #FormTotalMed_Tax_PR
  print $out  (2,54)

  do Format-Number(#Commissions, $out, 'B9999999.99')  !Commissions
  add #Commissions to #TotalCommissions_P
  add #Commissions to #FormTotalCommissions
  print $out  (1,71)

  do Format-Number(#Allowances, $out, 'B9999999.99')   !Allowances
  add #Allowances to #TotalAllowances_P
  add #Allowances to #FormTotalAllowances
  print $out  (2,71)

  do Format-Number(#Reimbursed_Expense, $out, 'B9999999.99')  !Reimbursed Exp
  add #Reimbursed_Expense to #TotalReimbursed_Expense_P
  add #Reimbursed_Expense to #FormTotalReimbursed_Expense
  print $out  (2,88)

  do Format-Number(#Retire_Fund, $out, 'B9999999.99')           !Retirement Fund
  add #Retire_Fund to #TotalRetire_Fund_P
  add #Retire_Fund to #FormTotalRetire_Fund
  print $out  (1,106)

  do Format-Number(#CODA_Plans, $out, 'B9999999.99')           !CODA Contributions
  add #CODA_Plans to #TotalCODA_Plans_P
  add #CODA_Plans to #FormTotalCODA_Plans
  print $out  (2,106)

end-procedure

begin-procedure Print-Federal-Amounts
  print 'Federal' (1,1)                                !Federal Boxes

  do Format-Number(#Fed_Wages_F, $out ,'B9999999.99')           !Federal wages
  add #Fed_Wages_F to #TotalFed_Wages_F
  add #Fed_Wages_F to #FormTotalFed_Wages_F
  print $out  (1,20)

  do Format-Number(#Fed_Tax_F, $out, 'B9999999.99')           !Federal tax
  add #Fed_Tax_F to #TotalFed_Tax_F
  add #Fed_Tax_F to #FormTotalFed_Tax_F
  print $out  (2,20)

  do Format-Number(#SS_Wages_F, $out, 'B9999999.99')           !SS wages
  add #SS_Wages_F to #TotalSS_Wages_F
  add #SS_Wages_F to #FormTotalSS_Wages_F
  print $out  (1,37)

  do Format-Number(#SS_Tax_F, $out, 'B9999999.99')           !SS Tax
  add #SS_Tax_F to #TotalSS_Tax_F
  add #SS_Tax_F to #FormTotalSS_Tax_F
  print $out  (2,37)

  do Format-Number(#Med_Wages_F, $out, 'B9999999.99')           !Medicare wages
  add #Med_Wages_F to #TotalMed_Wages_F
  add #Med_Wages_F to #FormTotalMed_Wages_F
  print $out  (1,54)

  do Format-Number(#Med_Tax_F, $out, 'B9999999.99')           !Medicare tax
  add #Med_Tax_F to #TotalMed_Tax_F
  add #Med_Tax_F to #FormTotalMed_Tax_F
  print $out  (2,54)

  do Format-Number(#Adv_EIC_F, $out, 'B9999999.99')           !EIC
  add #Adv_EIC_F to #TotalAdv_EIC_F
  add #Adv_EIC_F to #FormTotalAdv_EIC_F
  print $out  (1,71)

  do Format-Number(#Dep_Care_F, $out, 'B9999999.99')           !Dependent care
  add #Dep_Care_F to #TotalDep_Care_F
  add #Dep_Care_F to #FormTotalDep_Care_F
  print $out  (2,71)

  do Format-Number(#Non_Qual_457_F, $out, 'B9999999.99')         !non-qualified plan total
  add #Non_Qual_457_F to #TotalNon_Qual_457_F
  add #Non_Qual_457_F to #FormTotalNon_Qual_457_F
  print $out  (1,88)
  if $AmtNonQual_457_Y_F = 'Y'
    if $AmtNonQual_457_N_F = 'N'
      print 'G' (1,)
    end-if
  end-if
  print '0.00'  (,158)

end-procedure

begin-procedure Print-Territory-Amounts
  print 'Federal' (1,1)                                !Federal Boxes

  do Format-Number(#Fed_Wages, $out ,'B9999999.99')           !Federal wages
  add #Fed_Wages to #TotalFed_Wages_T
  add #Fed_Wages to #FormTotalFed_Wages
  print $out  (1,20)

  do Format-Number(#Fed_Tax, $out, 'B9999999.99')           !Federal tax
  add #Fed_Tax to #TotalFed_Tax_T
  add #Fed_Tax to #FormTotalFed_Tax
  print $out  (2,20)

  do Format-Number(#SS_Wages, $out, 'B9999999.99')           !SS wages
  add #SS_Wages to #TotalSS_Wages_T
  add #SS_Wages to #FormTotalSS_Wages
  print $out  (1,37)

  do Format-Number(#SS_Tax, $out, 'B9999999.99')           !SS Tax
  add #SS_Tax to #TotalSS_Tax_T
  add #SS_Tax to #FormTotalSS_Tax
  print $out  (2,37)

  do Format-Number(#Med_Wages, $out, 'B9999999.99')           !Medicare wages
  add #Med_Wages to #TotalMed_Wages_T
  add #Med_Wages to #FormTotalMed_Wages
  print $out  (1,54)

  do Format-Number(#Med_Tax, $out, 'B9999999.99')           !Medicare tax
  add #Med_Tax to #TotalMed_Tax_T
  add #Med_Tax to #FormTotalMed_Tax
  print $out  (2,54)


  do Format-Number(#Adv_EIC, $out, 'B9999999.99')           !EIC
  add #Adv_EIC to #TotalAdv_EIC_T
  add #Adv_EIC to #FormTotalAdv_EIC
  print $out  (1,71)

  do Format-Number(#Dep_Care, $out, 'B9999999.99')           !Dependent care
  add #Dep_Care to #TotalDep_Care_T
  add #Dep_Care to #FormTotalDep_Care
  print $out  (2,71)

  do Format-Number(#Non_Qual_457, $out, 'B9999999.99')         !non-qualified plan total
  add #Non_Qual_457 to #TotalNon_Qual_457_T
  add #Non_Qual_457 to #FormTotalNon_Qual_457
  print $out  (1,88)
  if $AmtNonQual_457_Y = 'Y'
    if $AmtNonQual_457_N = 'N'
      print 'G' (1,)
    end-if
  end-if
  print '0.00'  (,158)
end-procedure

begin-procedure Print-State-Amounts
  print $E.W2_State (1,1)                                    !State
  do Format-Number(#State_Wages_F, $out, 'B9999999.99')     !State wages
  print $out  (1,20)

  do Format-Number(#State_Tax_F, $out, 'B9999999.99')     !State tax
  print $out  (2,20)

  do Format-Number(#Adv_EICS_F, $out, 'B9999999.99')           !State EIC
  print $out  (1,71)
  print '0.00'  (,158)

end-procedure



begin-procedure Identify-Box12-Entries-Terr
  let $Box12CheckString = ''


  if #Group_Term_Life <> 0                                   !GTL
    let $Box12CheckString = $Box12CheckString || 'C'
  end-if

  if #401K <> 0                                   !401(k)
    let $Box12CheckString = $Box12CheckString || 'D'
  end-if

  if #403B <> 0                                   !403(b)
    let $Box12CheckString = $Box12CheckString || 'E'
  end-if

  if #408K6 <> 0                                   !408(k)(6)
    let $Box12CheckString = $Box12CheckString || 'F'
  end-if

  if #457B  <> 0                                   !457(b)
    let $Box12CheckString = $Box12CheckString || 'G'
  end-if

  if #501C18D <> 0                                   !501(c)(18)(D)
    let $Box12CheckString = $Box12CheckString || 'H'
  end-if

  if #Sick_Pay  <> 0                                   !Sick pay
    let $Box12CheckString = $Box12CheckString || 'J'
  end-if

  if #Excise_Tax <> 0                                   !Excise tax
    let $Box12CheckString = $Box12CheckString || 'K'
  end-if

  if #Business_Exp <> 0                                   !Business expense
    let $Box12CheckString = $Box12CheckString || 'L'
  end-if

  if #Uncoll_SS_Tax_GTL <> 0                                   !Uncoll SS tax - GTL
    let $Box12CheckString = $Box12CheckString || 'M'
  end-if

  if #Uncoll_Med_Tax_GTL <> 0                                   !Uncoll Medi tax - GTL
    let $Box12CheckString = $Box12CheckString || 'N'
  end-if

  if #Excl_Moving_Exp <> 0                                   !Exclud Moving Exp Reimb
    let $Box12CheckString = $Box12CheckString || 'P'
  end-if

  if #Nontaxable_Combat_Pay <> 0                                   !Nontaxable_Combat_Pay
    let $Box12CheckString = $Box12CheckString || 'Q'
  end-if

  if #Med_Svgs_Acct <> 0                                   !Medical Spending Account
    let $Box12CheckString = $Box12CheckString || 'R'
  end-if

  if #408P_Simple_Retirement <> 0                                   !Section 418(p) SIMPLE Retirement
    let $Box12CheckString = $Box12CheckString || 'S'
  end-if

  if #Adoption_Exp <> 0                                   !Adoption Expenses
    let $Box12CheckString = $Box12CheckString || 'T'
  end-if

  if #NonStatutory_Stock_Opt <> 0
    let $Box12CheckString = $Box12CheckString || 'V'
  end-if

  if #NonQual_Def_Comp <> 0                                   !NonQual_Def_Comp
    let $Box12CheckString = $Box12CheckString || 'Y'
  end-if

  if #Income_NonQual_Def_Comp <> 0
    let $Box12CheckString = $Box12CheckString || 'Z'
  end-if
end-procedure

begin-procedure Identify-Box12-Entries-Fed
  let $Box12CheckString = ''



  if #Group_Term_Life_F <> 0                                       !GTL
    let $Box12CheckString = $Box12CheckString || 'C'
  end-if

  if #401K_F <> 0                                                  !401(k)
    let $Box12CheckString = $Box12CheckString || 'D'
  end-if

  if #403B_F <> 0                                                  !403(b)
    let $Box12CheckString = $Box12CheckString || 'E'
  end-if

  if #408K6_F <> 0                                                 !408(k)(6)
    let $Box12CheckString = $Box12CheckString || 'F'
  end-if

  if #457B_F  <> 0                                                 !457(b)
    let $Box12CheckString = $Box12CheckString || 'G'
  end-if

  if #501C18D_F <> 0                                               !501(c)(18)(D)
    let $Box12CheckString = $Box12CheckString || 'H'
  end-if

  if #Sick_Pay_F  <> 0                                             !Sick pay
    let $Box12CheckString = $Box12CheckString || 'J'
  end-if

  if #Excise_Tax_F <> 0                                            !Excise tax
    let $Box12CheckString = $Box12CheckString || 'K'
  end-if

  if #Business_Exp_F <> 0                                          !Business expense
    let $Box12CheckString = $Box12CheckString || 'L'
  end-if

  if #Uncoll_SS_Tax_GTL_F <> 0                                     !Uncoll SS tax - GTL
    let $Box12CheckString = $Box12CheckString || 'M'
  end-if

  if #Uncoll_Med_Tax_GTL_F <> 0                                    !Uncoll Medi tax - GTL
    let $Box12CheckString = $Box12CheckString || 'N'
  end-if

  if #Excl_Moving_Exp_F <> 0                                       !Exclud Moving Exp Reimb
    let $Box12CheckString = $Box12CheckString || 'P'
  end-if

  if #Nontaxable_Combat_Pay_F <> 0                                !YE_Nontaxable_Combat_Pay
    let $Box12CheckString = $Box12CheckString || 'Q'
  end-if

  if #Med_Svgs_Acct_F <> 0                                         !Medical Spending Account
    let $Box12CheckString = $Box12CheckString || 'R'
  end-if

  if #408P_Simple_Retirement_F <> 0                                !Section 418(p) SIMPLE Retirement
    let $Box12CheckString = $Box12CheckString || 'S'
  end-if

  if #Adoption_Exp_F <> 0                                          !Adoption Expenses
    let $Box12CheckString = $Box12CheckString || 'T'
  end-if

  if #NonStatutory_Stock_Opt_F <> 0
    let $Box12CheckString = $Box12CheckString || 'V'
  end-if

  if #NonQual_Def_Comp_F <> 0                                          !NonQual_Def_Comp
    let $Box12CheckString = $Box12CheckString || 'Y'
  end-if

  if #Income_NonQual_Def_Comp_F <> 0
    let $Box12CheckString = $Box12CheckString || 'Z'
  end-if

end-procedure

begin-procedure Print-Box12(#Count)

  let $_Box12PrintString = SUBSTR($_Box12CheckString,1,#Count)
  move 1 to #L_12



  if INSTR($_Box12PrintString,'C',1)               !GTL
    print 'C' (#L_12,106)
    do Format-Number(#_Group_Term_Life_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Group_Term_Life_F
  end-if

  if INSTR($_Box12PrintString,'D',1)               !401(k)
    print 'D' (#L_12,106)
    do Format-Number(#_401K_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_401K_F
  end-if

  if INSTR($_Box12PrintString,'E',1)               !403(b)
    print 'E' (#L_12,106)
    do Format-Number(#_403B_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_403B_F
  end-if

  if INSTR($_Box12PrintString,'F',1)               !408(k)(6)
    print 'F' (#L_12,106)
    do Format-Number(#_408K6_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_408K6_F
  end-if

  if INSTR($_Box12PrintString,'G',1)               !457(b)
    print 'G' (#L_12,106)
    do Format-Number(#_457B_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_457B_F
  end-if

  if INSTR($_Box12PrintString,'H',1)               !501(c)(18)(D)
    print 'H' (#L_12,106)
    do Format-Number(#_501C18D_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_501C18D_F
  end-if

  if INSTR($_Box12PrintString,'J',1)               !Sick pay
    print 'J' (#L_12,106)
    do Format-Number(#_Sick_Pay_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Sick_Pay_F
  end-if

  if INSTR($_Box12PrintString,'K',1)               !Excise tax
    print 'K' (#L_12,106)
    do Format-Number(#_Excise_Tax_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Excise_Tax_F
  end-if

  if INSTR($_Box12PrintString,'L',1)               !Business expense
    print 'L' (#L_12,106)
    do Format-Number(#_Business_Exp_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Business_Exp_F
  end-if

  if INSTR($_Box12PrintString,'M',1)               !Uncoll SS tax - GTL
    print 'M' (#L_12,106)
    do Format-Number(#_Uncoll_SS_Tax_GTL_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Uncoll_SS_Tax_GTL_F
  end-if

  if INSTR($_Box12PrintString,'N',1)               !Uncoll Medi tax - GTL
    print 'N' (#L_12,106)
    do Format-Number(#_Uncoll_Med_Tax_GTL_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Uncoll_Med_Tax_GTL_F
  end-if

  if INSTR($_Box12PrintString,'P',1)               !Exclud Moving Exp Reimb
    print 'P' (#L_12,106)
    do Format-Number(#_Excl_Moving_Exp_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Excl_Moving_Exp_F
  end-if

  if INSTR($_Box12PrintString,'Q',1)               !YE_Nontaxable_Combat_Pay
    print 'Q' (#L_12,106)
    do Format-Number(#_Nontaxable_Combat_Pay_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Nontaxable_Combat_Pay_F
  end-if

  if INSTR($_Box12PrintString,'R',1)               !Medical Spending Account
    print 'R' (#L_12,106)
    do Format-Number(#_Med_Svgs_Acct_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Med_Svgs_Acct_F
  end-if

  if INSTR($_Box12PrintString,'S',1)               !Section 418(p) SIMPLE Retirement
    print 'S' (#L_12,106)
    do Format-Number(#_408P_Simple_Retirement_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_408P_Simple_Retirement_F
  end-if

  if INSTR($_Box12PrintString,'T',1)               !Adoption Expenses
    print 'T' (#L_12,106)
    do Format-Number(#_Adoption_Exp_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Adoption_Exp_F
  end-if

  if INSTR($_Box12PrintString,'V',1)               !Adoption Expenses
    print 'V' (#L_12,106)
    do Format-Number(#_NonStatutory_Stock_Opt_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_NonStatutory_Stock_Opt_F
  end-if


  
  if INSTR($_Box12PrintString,'Y',1)               !NonQual_Def_Comp
    print 'Y' (#L_12,106)
    do Format-Number(#_NonQual_Def_Comp_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_NonQual_Def_Comp_F
  end-if

  if INSTR($_Box12PrintString,'Z',1)               !Income_NonQual_Def_Comp
    print 'Z' (#L_12,106)
    do Format-Number(#_Income_NonQual_Def_Comp_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Income_NonQual_Def_Comp_F
  end-if

  let $_Box12CheckString = LTRIM($_Box12CheckString,$_Box12PrintString)
end-procedure

begin-procedure Print-Box12-Terr (#Count)

  let $_Box12PrintString = SUBSTR($_Box12CheckString,1,#Count)
  move 1 to #L_12



  if INSTR($_Box12PrintString,'C',1)               !GTL
    print 'C' (#L_12,106)
    do Format-Number(#_Group_Term_Life, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Group_Term_Life
  end-if

  if INSTR($_Box12PrintString,'D',1)               !401(k)
    print 'D' (#L_12,106)
    do Format-Number(#_401K, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_401K
  end-if

  if INSTR($_Box12PrintString,'E',1)               !403(b)
    print 'E' (#L_12,106)
    do Format-Number(#_403B, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_403B
  end-if

  if INSTR($_Box12PrintString,'F',1)               !408(k)(6)
    print 'F' (#L_12,106)
    do Format-Number(#_408K6, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_408K6
  end-if

  if INSTR($_Box12PrintString,'G',1)               !457(b)
    print 'G' (#L_12,106)
    do Format-Number(#_457B, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_457B
  end-if

  if INSTR($_Box12PrintString,'H',1)               !501(c)(18)(D)
    print 'H' (#L_12,106)
    do Format-Number(#_501C18D, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_501C18D
  end-if

  if INSTR($_Box12PrintString,'J',1)               !Sick pay
    print 'J' (#L_12,106)
    do Format-Number(#_Sick_Pay, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Sick_Pay
  end-if

  if INSTR($_Box12PrintString,'K',1)               !Excise tax
    print 'K' (#L_12,106)
    do Format-Number(#_Excise_Tax, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Excise_Tax
  end-if

  if INSTR($_Box12PrintString,'L',1)               !Business expense
    print 'L' (#L_12,106)
    do Format-Number(#_Business_Exp, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Business_Exp
  end-if

  if INSTR($_Box12PrintString,'M',1)               !Uncoll SS tax - GTL
    print 'M' (#L_12,106)
    do Format-Number(#_Uncoll_SS_Tax_GTL, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Uncoll_SS_Tax_GTL
  end-if

  if INSTR($_Box12PrintString,'N',1)               !Uncoll Medi tax - GTL
    print 'N' (#L_12,106)
    do Format-Number(#_Uncoll_Med_Tax_GTL, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Uncoll_Med_Tax_GTL
  end-if

  if INSTR($_Box12PrintString,'P',1)               !Exclud Moving Exp Reimb
    print 'P' (#L_12,106)
    do Format-Number(#_Excl_Moving_Exp, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Excl_Moving_Exp
  end-if

  if INSTR($_Box12PrintString,'Q',1)               !_Nontaxable_Combat_Pay
    print 'Q' (#L_12,106)
    do Format-Number(#_Nontaxable_Combat_Pay, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Nontaxable_Combat_Pay
  end-if

  if INSTR($_Box12PrintString,'R',1)               !Medical Spending Account
    print 'R' (#L_12,106)
    do Format-Number(#_Med_Svgs_Acct, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Med_Svgs_Acct
  end-if

  if INSTR($_Box12PrintString,'S',1)               !Section 418(p) SIMPLE Retirement
    print 'S' (#L_12,106)
    do Format-Number(#_408P_Simple_Retirement, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_408P_Simple_Retirement
  end-if

  if INSTR($_Box12PrintString,'T',1)               !Adoption Expenses
    print 'T' (#L_12,106)
    do Format-Number(#_Adoption_Exp, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Adoption_Exp
  end-if

  if INSTR($_Box12PrintString,'V',1)               !Adoption Expenses
    print 'V' (#L_12,106)
    do Format-Number(#_NonStatutory_Stock_Opt, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_NonStatutory_Stock_Opt
  end-if

  if INSTR($_Box12PrintString,'Y',1)               !NonQual_Def_Comp
    print 'Y' (#L_12,106)
    do Format-Number(#_NonQual_Def_Comp, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_NonQual_Def_Comp
  end-if

  if INSTR($_Box12PrintString,'Z',1)               !Income_NonQual_Def_Comp
    print 'Z' (#L_12,106)
    do Format-Number(#_Income_NonQual_Def_Comp, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Income_NonQual_Def_Comp
  end-if

  let $_Box12CheckString = LTRIM($_Box12CheckString,$_Box12PrintString)
end-procedure

begin-procedure Print-Box14

  move 1 to #L_14
  move 1 to #m
  while #m <= 26
    get $Jurisdiction $T_14 #14 from Box14(#m) Jurisdiction Text Amount

    if #14 > 0 and $Jurisdiction = $PrintJurisdiction
      print $T_14 (#L_14,124,7)
      do Format-Number(#14, $out, 'B9999999.99')
      print $out (,+1)
      add 1 to #L_14
    end-if
    add 1 to #m
  end-while
end-procedure

begin-procedure Zero-Box14
  move 1 to #m
  while #m <= 26
    put 0 into Box14(#m) Amount
    add 1 to #m
  end-while
end-procedure


begin-procedure Print-Box13
  move 1 to #L_13

  if $E.Statutory_Ee = 'Y'
    print 'Statutory EE'  (#L_13,144)
    add 1 to #L_13
  end-if

  if $E.Pension_Plan = 'Y'
    print 'Retire Fund'  (#L_13,144)
    add 1 to #L_13
  end-if

  if $E.Thirdparty_Sickpay = 'Y'
    print 'Thrd Pty Sick'   (#L_13,144)
    add 1 to #L_13
  end-if

end-procedure

begin-procedure Get-Box14-Labels

begin-SELECT
B1.GPUS_TAXFORM_BOX
B1.DESCRSHORT
T.GP_ELN_PIN_ATTR6


   let #index = #index + 1
   let $jur = RTRIM(&T.GP_ELN_PIN_ATTR6,' ')
  PUT $jur &B1.DescrShort
      INTO BOX14(#INDEX) JURISDICTION TEXT

FROM  PS_GPUS_YE_TXBOX B1, PS_GP_ELN_TMP T
WHERE B1.GPUS_TAXFORM_ID = $TaxForm_ID
 AND  B1.GPUS_TAXFORM_BOX LIKE '14%'
  AND B1.EFFDT =
      (SELECT MAX(EFFDT)
        FROM  PS_GPUS_YE_TXBOX
       WHERE  GPUS_TAXFORM_BOX        = B1.GPUS_TAXFORM_BOX
         AND  GPUS_TAXFORM_ID = B1.GPUS_TAXFORM_ID
         AND  EFFDT     <= $AsOfDate)
  and T.GP_ELN_LST_ATTR1 = B1.GPUS_TAXFORM_ID
  and T.GP_ELN_PIN_ATTR1 = B1.GPUS_TAXFORM_BOX
  and T.PROCESS_INSTANCE = #prcs_process_instance - 1
end-SELECT


end-procedure


begin-procedure Form-Totals-PR

  move 'GPUS_TAXFORM_ID'  to $FieldName
  move $TaxForm_ID   to $FieldValue
  do Read-Translate-Table
  move $XlatShortName to $TaxForm_Name

  print 'Form Total   :' (2,1)                                 !Federal Boxes
  print  $E.W2_State   (2,12)
  print $TaxForm_Name  (2,15)

  do Format-Number(#FormTotalWages, $out, 'B9999999.99')           !PR wages
  print $out  (2,20)

  do Format-Number(#FormTotalTax_Withheld, $out, 'B9999999.99')
  print $out  (4,20)

  do Format-Number(#FormTotalSS_Wages_PR, $out, 'B9999999.99')
  print $out  (2,37)

  do Format-Number(#FormTotalSS_TAX_PR, $out, 'B9999999.99')
  print $out  (4,37)

  do Format-Number(#FormTotalMed_Wages_PR, $out, 'B9999999.99')
  print $out  (2,54)

  do Format-Number(#FormTotalMed_Tax_PR, $out, 'B9999999.99')
  print $out  (4,54)

  do Format-Number(#FormTotalCommissions, $out, 'B9999999.99')           !PR wages
  print $out  (2,71)

  do Format-Number(#FormTotalAllowance, $out, 'B9999999.99')
  print $out  (4,71)


  do Format-Number(#FormTotalReimbursed_Expense, $out, 'B9999999.99')
  print $out  (4,88)

  do Format-Number(#FormTotalRetire_Fund, $out, 'B9999999.99')           !PR wages
  print $out  (2,106)

  do Format-Number(#FormTotalCODA_Plans, $out, 'B9999999.99')
  print $out  (4,106)

  print '0.00'  (,158)

  move 0 to #FormTotalCost_Pension_Annuity
  move 0 to #FormTotalWages
  move 0 to #FormTotalCommissions
  move 0 to #FormTotalAllowance
  move 0 to #FormTotalReimbursed_Expense
  move 0 to #FormTotalTax_Withheld
  move 0 to #FormTotalRetire_Fund
  move 0 to #FormTotalCODA_Funds
  move 0 to #FormTotalSS_Wages_PR
  move 0 to #FormTotalSS_TAX_PR
  move 0 to #FormTotalMed_Wages_PR
  move 0 to #FormTotalMed_Tax_PR
end-procedure

begin-procedure Form-Totals-Fed

  move 'Y' to $PrintFormTotals
  move 'GPUS_TAXFORM_ID'  to $FieldName
  move $TaxForm_ID   to $FieldValue
  do Read-Translate-Table
  move $XlatShortName to $TaxForm_Name

  print 'Form Total:' (2,1)                                 !Federal Boxes
  print $TaxForm_Name  (2,14)

  do Format-Number(#FormTotalFed_Wages_F, $out ,'B9999999999.99')      !Federal wages
  print $out  (2,19)

  do Format-Number(#FormTotalFed_Tax_F, $out, 'B999999999.99')         !Federal tax
  print $out  (4,20)

  do Format-Number(#FormTotalSS_Wages_F, $out, 'B9999999999.99')       !SS wages
  print $out  (2,35)

  do Format-Number(#FormTotalSS_Tax_F, $out, 'B999999999.99')          !SS Tax
  print $out  (4,36)

  do Format-Number(#FormTotalMed_Wages_F, $out, 'B9999999999.99')      !Medicare wages
  print $out  (2,54)

  do Format-Number(#FormTotalMed_Tax_F, $out, 'B999999999.99')         !Medicare tax
  print $out  (4,55)

  do Format-Number(#FormTotalAdv_EIC_F, $out, 'B999999999.99')         !EIC
  print $out  (2,69)

  do Format-Number(#FormTotalDep_Care_F, $out, 'B999999999.99')        !Dependent care
  print $out  (4,69)

  do Format-Number(#FormTotalNon_Qual_457_F, $out, 'B9999999999.99')   !non-qual plan tot
  print $out  (2,86)
  print '0.00'  (,158)

  move 0 to #FormTotalFed_Wages_F
  move 0 to #FormTotalFed_Tax_F
  move 0 to #FormTotalSS_Wages_F
  move 0 to #FormTotalSS_Tax_F
  move 0 to #FormTotalMed_Wages_F
  move 0 to #FormTotalMed_Tax_F
  move 0 to #FormTotalAdv_EIC_F
  move 0 to #FormTotalDep_Care_F
  move 0 to #FormTotalNon_Qual_457_F
end-procedure

begin-procedure Form-Totals-Rest

  move 'Y' to $PrintFormTotals
  move 'GPUS_TAXFORM_ID'  to $FieldName
  move $TaxForm_ID   to $FieldValue
  do Read-Translate-Table
  move $XlatShortName to $TaxForm_Name

  print 'Form Total   :' (2,1)                                       !Federal Boxes
  print  $E.W2_State   (2,12)
  print $TaxForm_Name  (2,15)

  do Format-Number(#FormTotalFed_Wages, $out ,'B9999999999.99')      !Federal wages
  print $out  (2,19)

  do Format-Number(#FormTotalFed_Tax, $out, 'B999999999.99')         !Federal tax
  print $out  (4,20)

  do Format-Number(#FormTotalSS_Wages, $out, 'B9999999999.99')       !SS wages
  print $out  (2,35)

  do Format-Number(#FormTotalSS_Tax, $out, 'B999999999.99')          !SS Tax
  print $out  (4,36)

  do Format-Number(#FormTotalMed_Wages, $out, 'B9999999999.99')      !Medicare wages
  print $out  (2,54)

  do Format-Number(#FormTotalMed_Tax, $out, 'B999999999.99')         !Medicare tax
  print $out  (4,55)

  do Format-Number(#FormTotalAdv_EIC, $out, 'B999999999.99')         !EIC
  print $out  (2,69)

  do Format-Number(#FormTotalDep_Care, $out, 'B999999999.99')       !Dependent care
  print $out  (4,69)

  do Format-Number(#FormTotalNon_Qual_457, $out, 'B9999999999.99')    !non-qual plan tot
  print $out  (2,86)

  print '0.00'  (,158)

  move 0 to #FormTotalFed_Wages
  move 0 to #FormTotalFed_Tax
  move 0 to #FormTotalSS_Wages
  move 0 to #FormTotalSS_Tax
  move 0 to #FormTotalMed_Wages
  move 0 to #FormTotalMed_Tax
  move 0 to #FormTotalAdv_EIC
  move 0 to #FormTotalDep_Care
  move 0 to #FormTotalNon_Qual_457

end-procedure

begin-procedure Company-Totals-Rest

  move 'Y' to $PrintTotals

  print 'Federal Total  ' (2,1)                            !Federal Boxes
  print 'Territories    ' (3,1)                            !Federal Boxes

  do Format-Number(#TotalFed_Wages_T, $out ,'B9999999999.99')    !Federal wages
  print $out  (2,19)

  do Format-Number(#TotalFed_Tax_T, $out, 'B999999999.99')       !Federal tax
  print $out  (3,20)

  do Format-Number(#TotalSS_Wages_T, $out, 'B9999999999.99')     !SS wages
  print $out  (2,35)

  do Format-Number(#TotalSS_Tax_T, $out, 'B999999999.99')        !SS Tax
  print $out  (3,36)

  do Format-Number(#TotalMed_Wages_T, $out, 'B9999999999.99')    !Medicare wages
  print $out  (2,54)

  do Format-Number(#TotalMed_Tax_T, $out, 'B999999999.99')       !Medicare tax
  print $out  (3,55)

  do Format-Number(#TotalAdv_EIC_T, $out, 'B999999999.99')       !EIC
  print $out  (2,69)

  do Format-Number(#TotalDep_Care_T, $out, 'B999999999.99')      !Dependent care
  print $out  (3,69)

  do Format-Number(#TotalNon_Qual_457_T, $out, 'B9999999999.99') !non-qual plan tot
  print $out  (2,86)


    move 0 to #TotalFed_Wages_T
    move 0 to #TotalFed_Tax_T
    move 0 to #TotalSS_Wages_T
    move 0 to #TotalSS_Tax_T
    move 0 to #TotalMed_Wages_T
    move 0 to #TotalMed_Tax_T
    move 0 to #TotalAdv_EIC_T
    move 0 to #TotalDep_Care_T
    move 0 to #TotalNon_Qual_457_T


end-procedure

begin-procedure Company-Totals-Fed


  move 'Y' to $PrintTotals

  print 'Federal Total  ' (5,1)                                    !Federal Boxes
  print 'U. S.   Only   ' (6,1)                                    !Federal Boxes

  do Format-Number(#TotalFed_Wages_F, $out ,'B9999999999.99')      !Federal wages
  print $out  (5,19)

  do Format-Number(#TotalFed_Tax_F, $out, 'B999999999.99')         !Federal tax
  print $out  (6,20)

  do Format-Number(#TotalSS_Wages_F, $out, 'B9999999999.99')       !SS wages
  print $out  (5,35)

  do Format-Number(#TotalSS_Tax_F, $out, 'B999999999.99')          !SS Tax
  print $out  (6,36)

  do Format-Number(#TotalMed_Wages_F, $out, 'B9999999999.99')      !Medicare wages
  print $out  (5,54)

  do Format-Number(#TotalMed_Tax_F, $out, 'B999999999.99')         !Medicare tax
  print $out  (6,55)

  do Format-Number(#TotalAdv_EIC_F, $out, 'B999999999.99')         !EIC
  print $out  (5,69)

  do Format-Number(#TotalDep_Care_F, $out, 'B999999999.99')        !Dependent care
  print $out  (6,69)

  do Format-Number(#TotalNon_Qual_457_F, $out, 'B9999999999.99')   !non-qual plan tot
  print $out  (5,86)

    move 0 to #TotalFed_Wages_F
    move 0 to #TotalFed_Tax_F
    move 0 to #TotalSS_Wages_F
    move 0 to #TotalSS_Tax_F
    move 0 to #TotalMed_Wages_F
    move 0 to #TotalMed_Tax_F
    move 0 to #TotalAdv_EIC_F
    move 0 to #TotalDep_Care_F
    move 0 to #TotalNon_Qual_457_F


end-procedure
begin-procedure Company-Totals-PR

  move 'Y' to $PrintTotals

  print 'Federal Total ' (8,1)                                 !Federal Boxes
  print 'Puerto Rico   ' (9,1)                                 !Federal Boxes

  do Format-Number(#TotalWages_P, $out ,'B9999999999.99')      !PR wages
  print $out  (8,19)

  do Format-Number(#TotalTax_Withheld_P, $out, 'B999999999.99')       !PR tax
  print $out  (9,20)

  do Format-Number(#TotalSS_Wages_PR_P, $out, 'B9999999999.99')      !SS wages
  print $out  (8,35)

  do Format-Number(#TotalSS_TAX_PR_P, $out, 'B999999999.99')       !SS Tax
  print $out  (9,36)

  do Format-Number(#TotalMed_Wages_PR_P, $out, 'B9999999999.99')      !Medicare wages
  print $out  (8,54)

  do Format-Number(#TotalMed_Tax_PR_P, $out, 'B999999999.99')       !Medicare tax
  print $out  (9,55)

  do Format-Number(#TotalCommissions_P, $out, 'B9999999999.99')      !Commissions
  print $out  (8,106)

  do Format-Number(#TotalAllowance_P, $out, 'B999999999.99')       !Allowances
  print $out  (9,107)

  do Format-Number(#TotalReimbursed_Expense_P, $out, 'B999999999.99')       !Reimbursed Exp
  print $out  (9,127)

  do Format-Number(#TotalRetire_Fund_P, $out, 'B9999999999.99')      !Retirement Fund
  print $out  (8,144)

  do Format-Number(#TotalCODA_Plans_P, $out, 'B999999999.99')       !CODA Contributions
  print $out  (9,145)

    move 0 to #TotalCost_Pension_Annuity_P
    move 0 to #TotalWages_P
    move 0 to #TotalCommissions_P
    move 0 to #TotalAllowance_P
    move 0 to #TotalReimbursed_Expense_P
    move 0 to #TotalTax_Withheld_P
    move 0 to #TotalRetire_Fund_P
    move 0 to #TotalCODA_Plans_P
    move 0 to #TotalSS_Wages_PR_P
    move 0 to #TotalSS_TAX_PR_P
    move 0 to #TotalMed_Wages_PR_P
    move 0 to #TotalMed_Tax_PR_P


end-procedure

begin-procedure Convert-Parameters

  move $GPUS_YE_SORT1      to $SortCode1
  move $GPUS_YE_SORT2      to $SortCode3
  move $GPUS_YE_PRC_TYPE   to $SelectEEs

  if $SelectEEs = '30'
    do Read-EEs
  end-if

if $SelectEEs = '20'
    do Read-Companies
  end-if

  do Create-Order-By

end-procedure

begin-procedure Create-Order-By

  move 'ORDER BY E.EMPLID, E.GPUS_SEQ_NBR' to $Sort2
  move 'ORDER BY T.EMPLID, T.GPUS_SEQ_NBR' to $Sort3
  move 'ORDER BY T1.EMPLID, T1.GPUS_SEQ_NBR' to $Sort4
  LET $fromtoT1 = ''
  LET $fromtoG = ''
  LET $fromtoT = ''

  if $SortCode1 <> '10'

    evaluate $SortCode3
      when = '20'               !ID
        evaluate $SortCode1
          when = '50'
            move 'ORDER BY E.STATE, E.EMPLID, E.GPUS_SEQ_NBR' to $Sort2
          when = '40'
            move 'ORDER BY J.GP_PAYGROUP, S.EMPLID' to $Sort1
            move 'ORDER BY T.EMPLID, T.GPUS_SEQ_NBR' to $Sort3
            move 'ORDER BY T1.EMPLID, T1.GPUS_SEQ_NBR' to $Sort4
          when = '20'
            move 'ORDER BY J.DEPTID, S.EMPLID' to $Sort1
            move 'ORDER BY T.EMPLID, T.GPUS_SEQ_NBR' to $Sort3
            move 'ORDER BY T1.EMPLID, T1.GPUS_SEQ_NBR' to $Sort4
          when = '60'
            move 'ORDER BY E.POSTAL, E.EMPLID, E.GPUS_SEQ_NBR' to $Sort2
          when = '30'
            move 'ORDER BY K.GP_PSLP_MAIL_DROP, G.EMPLID' to $Sort1
            move 'ORDER BY T.EMPLID, T.GPUS_SEQ_NBR' to $Sort3
            move 'ORDER BY T1.EMPLID, T1.GPUS_SEQ_NBR' to $Sort4
         end-evaluate

      when = '30'               !SSN
        evaluate $SortCode1
          when = '50'
            move 'ORDER BY E.STATE, E.SSN, E.GPUS_SEQ_NBR' to $Sort2
          when = '40'
            move 'ORDER BY J.GP_PAYGROUP, S.SSN' to $Sort1
            move 'ORDER BY T.SSN, T.GPUS_SEQ_NBR' to $Sort3
            move 'ORDER BY T1.SSN, T1.GPUS_SEQ_NBR' to $Sort4
          when = '20'
            move 'ORDER BY J.DEPTID, S.SSN' to $Sort1
            move 'ORDER BY T.SSN, T.GPUS_SEQ_NBR' to $Sort3
            move 'ORDER BY T1.SSN, T1.GPUS_SEQ_NBR' to $Sort4
          when = '60'
            move 'ORDER BY E.POSTAL, E.SSN, E.GPUS_SEQ_NBR' to $Sort2
          when = '30'
            move 'ORDER BY K.GP_PSLP_MAIL_DROP, G.SSN' to $Sort1
            move 'ORDER BY T.SSN, T.GPUS_SEQ_NBR' to $Sort3
            move 'ORDER BY T1.SSN, T1.GPUS_SEQ_NBR' to $Sort4
        end-evaluate

      when = '10'               !Name
        evaluate $SortCode1
          when = '50'
            move 'ORDER BY E.STATE,E.GPUS_YE_LNAME, E.SSN, E.GPUS_SEQ_NBR' to $Sort2
          when = '40'
            move 'ORDER BY J.GP_PAYGROUP, S.GPUS_YE_LNAME, S.SSN' to $Sort1
            move 'ORDER BY T.GPUS_YE_LNAME, T.SSN, T.GPUS_SEQ_NBR' to $Sort3
            move 'ORDER BY T1.GPUS_YE_LNAME, T1.SSN, T1.GPUS_SEQ_NBR' to $Sort4
          when = '20'
            move 'ORDER BY J.DEPTID, S.GPUS_YE_LNAME, S.SSN' to $Sort1
            move 'ORDER BY T.GPUS_YE_LNAME, T.SSN, T.GPUS_SEQ_NBR' to $Sort3
            move 'ORDER BY T1.GPUS_YE_LNAME, T1.SSN, T1.GPUS_SEQ_NBR' to $Sort4
          when = '60'
            move 'ORDER BY E.POSTAL, E.GPUS_YE_LNAME, E.SSN, E.GPUS_SEQ_NBR' to $Sort2
          when = '30'
            move 'ORDER BY K.GP_PSLP_MAIL_DROP, G.GPUS_YE_LNAME, G.SSN' to $Sort1
            move 'ORDER BY T.GPUS_YE_LNAME, T.SSN, T.GPUS_SEQ_NBR' to $Sort3
            move 'ORDER BY T1.GPUS_YE_LNAME, T1.SSN, T1.GPUS_SEQ_NBR' to $Sort4
        end-evaluate

      when = ''               ! None  - default Emplid
        evaluate $SortCode1
          when = '50'
            move 'ORDER BY E.STATE, E.EMPLID, E.GPUS_SEQ_NBR' to $Sort2
          when = '40'
            move 'ORDER BY J.GP_PAYGROUP, S.EMPLID' to $Sort1
            move 'ORDER BY T.EMPLID, T.GPUS_SEQ_NBR' to $Sort3
            move 'ORDER BY T1.EMPLID, T1.GPUS_SEQ_NBR' to $Sort4
          when = '20'
            move 'ORDER BY J.DEPTID, S.EMPLID' to $Sort1
            move 'ORDER BY T.EMPLID, T.GPUS_SEQ_NBR' to $Sort3
            move 'ORDER BY T1.EMPLID, T1.GPUS_SEQ_NBR' to $Sort4
          when = '60'
            move 'ORDER BY E.POSTAL, E.EMPLID, E.GPUS_SEQ_NBR' to $Sort2
          when = '30'
            move 'ORDER BY K.GP_PSLP_MAIL_DROP, G.EMPLID' to $Sort1
            move 'ORDER BY T.EMPLID, T.GPUS_SEQ_NBR' to $Sort3
            move 'ORDER BY T1.EMPLID, T1.GPUS_SEQ_NBR' to $Sort4
          end-evaluate

    end-evaluate
  else
    evaluate $SortCode3
      when = '20'
        move 'ORDER BY E.GPUS_TAXFORM_ID, E.EMPLID,  E.GPUS_SEQ_NBR, E.STATE' to $Sort2
        move 'ORDER BY T.GPUS_TAXFORM_ID, T.EMPLID,  T.GPUS_SEQ_NBR, T.STATE' to $Sort3
        move 'ORDER BY T1.GPUS_TAXFORM_ID, T1.EMPLID,  T1.GPUS_SEQ_NBR, T1.STATE' to $Sort4
      when = '30'
        move 'ORDER BY E.GPUS_TAXFORM_ID, E.SSN,  E.GPUS_SEQ_NBR, E.STATE'    to $Sort2
        move 'ORDER BY T.GPUS_TAXFORM_ID, T.SSN,  T.GPUS_SEQ_NBR, T.STATE'    to $Sort3
        move 'ORDER BY T1.GPUS_TAXFORM_ID, T1.SSN,  T1.GPUS_SEQ_NBR, T1.STATE'    to $Sort4
      when = '10'
        move 'ORDER BY E.GPUS_TAXFORM_ID, E.GPUS_YE_LNAME, E.SSN, E.GPUS_SEQ_NBR, E.STATE' to $Sort2
        move 'ORDER BY T.GPUS_TAXFORM_ID, T.GPUS_YE_LNAME, T.SSN, E.GPUS_SEQ_NBR, T.STATE' to $Sort3
        move 'ORDER BY T1.GPUS_TAXFORM_ID, T1.GPUS_YE_LNAME, T1.SSN, T1.GPUS_SEQ_NBR, T1.STATE' to $Sort4
      when = ''
        move 'ORDER BY E.GPUS_TAXFORM_ID, E.EMPLID,  E.GPUS_SEQ_NBR, E.STATE' to $Sort2
        move 'ORDER BY T.GPUS_TAXFORM_ID, T.EMPLID,  T.GPUS_SEQ_NBR, T.STATE' to $Sort3
        move 'ORDER BY T1.GPUS_TAXFORM_ID, T1.EMPLID,  T1.GPUS_SEQ_NBR, T1.STATE' to $Sort4
    end-evaluate
  end-if
end-procedure


begin-procedure Read-EEs

move 'AND E.EMPLID in (''' to $E.SelectedEEs
move 'AND S.EMPLID in (''' to $S.SelectedEEs
move 'AND G.EMPLID in (''' to $G.SelectedEEs
move 'AND T.EMPLID in (''' to $T.SelectedEmpl
move 'AND T1.EMPLID in (''' to $T1.SelectedEmpl
move ' ' to $SelectedEmplID

begin-SELECT
C.EMPLID

  move &C.EMPLID     to $SelectedEmplID

  let $E.SelectedEEs = $E.SelectedEEs || $SelectedEmplID || ''','''
  let $S.SelectedEEs = $S.SelectedEEs || $SelectedEmplID || ''','''
  let $G.SelectedEEs = $G.SelectedEEs || $SelectedEmplID || ''','''
  let $T.SelectedEmpl = $T.SelectedEmpl || $SelectedEmplID || ''','''
  let $T1.SelectedEmpl = $T1.SelectedEmpl || $SelectedEmplID || ''','''

  move 'Y' to $EE_Selected

FROM  PS_GPUS_RC_YE4 C
WHERE C.OPRID         = $Prcs_OprID
  AND C.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
end-SELECT


let $E.SelectedEEs = SUBSTR($E.SelectedEEs,1,LENGTH($E.SelectedEEs) - 2)
let $E.SelectedEEs = $E.SelectedEEs || ')'

let $S.SelectedEEs = SUBSTR($S.SelectedEEs,1,LENGTH($S.SelectedEEs) - 2)
let $S.SelectedEEs = $S.SelectedEEs || ')'

let $G.SelectedEEs = SUBSTR($G.SelectedEEs,1,LENGTH($G.SelectedEEs) - 2)
let $G.SelectedEEs = $G.SelectedEEs || ')'


let $T.SelectedEmpl = SUBSTR($T.SelectedEmpl,1,LENGTH($T.SelectedEmpl) - 2)
let $T.SelectedEmpl = $T.SelectedEmpl || ')'

let $T1.SelectedEmpl = SUBSTR($T1.SelectedEmpl,1,LENGTH($T1.SelectedEmpl) - 2)
let $T1.SelectedEmpl = $T1.SelectedEmpl || ')'


end-procedure

begin-procedure Delete-Sel-Employees-Table
begin-SQL on-error=Ignore
  DELETE FROM PS_GPUS_RC_YE4
   WHERE OPRID       = $Prcs_OprID
   AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-SQL
end-procedure

begin-procedure Read-Companies

move 'AND A.GPUS_TAX_EIN in (''' to $A.SelectedCompanies
move 'AND E.GPUS_TAX_EIN in (''' to $W.SelectedCompanies
move 'AND SL.GPUS_TAX_EIN in (''' to $SL.SelectedCompanies
move 'AND C.GPUS_TAX_EIN in (''' to $C.SelectedCompanies
move ' ' to $SelectedEmplID

begin-SELECT
D.GPUS_YE_RPT_CO   () on-break level=1 print=never before=read_comp_ein

FROM  PS_GPUS_RC_YE3 D
WHERE D.OPRID         = $Prcs_OprID
  AND D.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
end-SELECT




let $A.SelectedCompanies = SUBSTR($A.SelectedCompanies,1,LENGTH($A.SelectedCompanies) - 2)
let $A.SelectedCompanies = $A.SelectedCompanies || ')'

let $W.SelectedCompanies = SUBSTR($W.SelectedCompanies,1,LENGTH($W.SelectedCompanies) - 2)
let $W.SelectedCompanies = $W.SelectedCompanies || ')'

let $SL.SelectedCompanies = SUBSTR($SL.SelectedCompanies,1,LENGTH($SL.SelectedCompanies) - 2)
let $SL.SelectedCompanies = $SL.SelectedCompanies || ')'

let $C.SelectedCompanies = SUBSTR($C.SelectedCompanies,1,LENGTH($C.SelectedCompanies) - 2)
let $C.SelectedCompanies = $C.SelectedCompanies || ')'

end-procedure

begin-procedure Delete-Sel-Company-Table
begin-SQL on-error=Ignore
 DELETE FROM PS_GPUS_RC_YE3
  WHERE OPRID       = $Prcs_OprID
   AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-SQL
end-procedure

begin-procedure Ignore
! dummy procedure to avoid SQL error message on delete of empty table
end-procedure

!**********************************************************************
begin-procedure GET-MAXIMUM-EFFDT
begin-SELECT
MAX(W.EFFDT)   &W.EFFDT

    let $MaxYear = datetostr(&W.EFFDT)
    let $MaxYear1= substr($MaxYear,1,4)
    let #MaxYear2= to_number($MaxYear1)

    FROM PS_GPUS_YE_CO_TBL W
    WHERE W.GPUS_TAX_EIN  = $A.Federal_EIN
    AND W.EFFDT <= $AsOfDate
end-SELECT
End-Procedure
!***********************************************************************
begin-procedure  read_comp_ein
begin-SELECT
O.GPUS_TAX_EIN

  move &O.GPUS_TAX_EIN    to $SelectedCompany

     let $A.SelectedCompanies = $A.SelectedCompanies || $SelectedCompany || ''','''
     let $W.SelectedCompanies = $W.SelectedCompanies || $SelectedCompany || ''','''
     let $SL.SelectedCompanies = $SL.SelectedCompanies || $SelectedCompany || ''','''
     let $C.SelectedCompanies = $C.SelectedCompanies || $SelectedCompany || ''','''
  move 'Y' to $Company_Selected

FROM PS_GPUS_YE_CO_TBL O
WHERE O.GPUS_YE_RPT_CO = &D.GPUS_YE_RPT_CO



end-SELECT

end-Procedure

!************************************************************************

begin-procedure Delete-Gp-Eln-Tmp-Table
begin-SQL
 DELETE FROM PS_GP_ELN_TMP
   WHERE PROCESS_INSTANCE = #prcs_process_instance - 1
     AND COUNTRY='USA'
     AND GP_ELN_SET =(SELECT  GP_ELN_SET FROM PS_GPUS_RPT_SETUP
                       WHERE PRCSJOBNAME = (SELECT PRCSJOBNAME FROM PSPRCSRQST
                                             WHERE PRCSINSTANCE = #prcs_process_instance - 1))

end-SQL
end-procedure

!*************************************************************************


#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'gpusw2so.sqc'  !Routines to sorting W-2s
#Include 'stdapi.sqc'    !Update Process API
#Include 'geteandg.sqc'  !Get-EandG procedure
#Include 'gpusgtfd.sqc'  !Get-FederalProduct procedure
#Include 'gpusrntl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'gpusw2.sqc'    !Routine for W2 Year End Box variables