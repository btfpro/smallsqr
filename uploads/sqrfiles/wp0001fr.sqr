!************************************************
!  WP0001FR: Individual Profit-Sharing report   *
!************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:58:04                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
!#include 'setup32.sqc'   !Printer and page-size initialization

Begin-Setup
#Include 'ptpsl177.sqc'  !Printer and page-size initialization
End-Setup

#define WP_FORMULA_TBL
#define WP_AGREEMENT
#include 'rellang.sqc'

#define C01    1
#define C02   25
#define C03   45
#define C04   65
#define C05   85
#define C06  105
#define C07  125
#define C08  145
#define C09  165



!***********************************************************************

begin-program
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Term
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-program

!***********************************************************************
!  Heading
!***********************************************************************

begin-heading 6
  #Include 'stdhdgtr.sqc'
end-heading

!***********************************************************************
!  Init Report
!***********************************************************************

begin-procedure Init-Report

  move 'WP0001FR' to $ReportID

  do Stdapi-Init

  let $language_cd = $CURR_LANGUAGE_CD

  do Init_Report_Translation($ReportID, $language_cd)
  do Append_Report_Translation($ReportID)

  do Get_Field_Information($ReportID, 'REPORT_TITLE', $ReportTitle, #DW)

  if $prcs_process_instance = ''
        !No Prompt
  else
!    do Select-Parameters-WP0001FR
  end-if

 do Init_Printer

 do Security-Param

end-procedure

!***********************************************************************
!  Get Values
!***********************************************************************

begin-procedure Get-Values
!   do GET-WP0001-PARM
end-procedure

!***********************************************************************
!  Main: Creates the Individual Profit-Sharing Report
!***********************************************************************

begin-procedure Process-Main

   do Get-Translat-Info     ! Global
   do Get-Agreement-From-RC-List

end-procedure

!***********************************************************************
!  Gets the strings printed in this report (Globalization)
!***********************************************************************

begin-procedure Get-Translat-Info

  do Get_Field_Information($ReportID, 'WP_AGRT_TYPE'        , $WP_AGRT_TYPE_LBL,    #DW)
  do Get_Field_Information($ReportID, 'WP_AGRT_NAME'        , $WP_AGRT_NAME_LBL,    #DW)
  do Get_Field_Information($ReportID, 'WP_FORMULA_ID'       , $WP_FORMULA_ID_LBL,   #DW)
  do Get_Field_Information($ReportID, 'WP_DISTRIB'          , $WP_DISTRIB_LBL,      #DW)
  do Get_Field_Information($ReportID, 'WP_SALARY'           , $WP_SALARY_LBL,       #DW)
  do Get_Field_Information($ReportID, 'WP_DURATION'         , $WP_DURATION_LBL,     #DW)
  do Get_Field_Information($ReportID, 'WP_UNIFORM'          , $WP_UNIFORM_LBL,      #DW)
  do Get_Field_Information($ReportID, 'CURRENCY_CD'         , $CURRENCY_LBL,        #DW)
  do Get_Field_Information($ReportID, 'EMPLID'              , $EMPLID_LBL,          #DW)
  do Get_Field_Information($ReportID, 'NAME'                , $NAME_LBL,            #DW)
  do Get_Field_Information($ReportID, 'EMPL_RCD'            , $EMPL_RCD_LBL,        #DW)
  do Get_Field_Information($ReportID, 'PERIOD_ID'           , $PERIOD_ID_LBL,       #DW)
  do Get_Field_Information($ReportID, 'GLOBAL_FUND'         , $GLOBAL_FUND_LBL,     #DW)
  do Get_Field_Information($ReportID, 'PROFIT_SHARING'      , $PROFIT_SHARING_LBL,  #DW)
  do Get_Field_Information($ReportID, 'WP_AVERAGE'          , $WP_AVERAGE_LBL,      #DW)
  do Get_Field_Information($ReportID, 'WP_AVG_GROSS_AMT'    , $WP_AVG_GROSS_AMT_LBL,#DW)
  do Get_Field_Information($ReportID, 'WP_WP_TOTAL'         , $WP_WP_TOTAL_LBL,     #DW)
  do Get_Field_Information($ReportID, 'WP_WP_GROSS_AMT'     , $WP_WP_GROSS_AMT_LBL, #DW)
  do Get_Field_Information($ReportID, 'WP_WP_DED_AMT'       , $WP_WP_DED_AMT_LBL,   #DW)
  do Get_Field_Information($ReportID, 'WP_WP_NET_AMT'       , $WP_WP_NET_AMT_LBL,   #DW)
  do Get_Field_Information($ReportID, 'INTEREST'            , $INTEREST_LBL,        #DW)
  do Get_Field_Information($ReportID, 'WP_IN_TOTAL'         , $WP_IN_TOTAL_LBL,     #DW)
  do Get_Field_Information($ReportID, 'WP_IN_GROSS_AMT'     , $WP_IN_GROSS_AMT_LBL, #DW)
  do Get_Field_Information($ReportID, 'WP_IN_DED_AMT'       , $WP_IN_DED_AMT_LBL,   #DW)
  do Get_Field_Information($ReportID, 'WP_IN_NET_AMT'       , $WP_IN_NET_AMT_LBL,   #DW)
  do Get_Field_Information($ReportID, 'GRAND_TOTAL'         , $GRAND_TOTAL_LBL,     #DW)

end-procedure Get-Translat-Info

!***********************************************************************
!  Prints the Header of the report
!***********************************************************************
begin-procedure Print-Common-Header

  print $WP_AGRT_TYPE_LBL            (+2,{C01})
  print $AGRT_TYPE_SHORT               (,{C02})
  print $AGRT_TYPE_LONG                (,{C03})
  print $WP_AGRT_NAME_LBL            (+1,{C01})
  print $WP_AGRT_SHORT                 (,{C02})
  print $WP_AGRT_LONG                  (,{C03})

end-procedure Print-Common-Header

!***********************************************************************
!  Prints the Header of the report
!***********************************************************************
begin-procedure Print-Employee-Header

  print $EMPLID_LBL                  (+1,{C01})
  print &A.EMPLID                      (,{C02})
  print $NAME                          (,{C03})
  print $EMPL_RCD_LBL                  (,{C04})
  print &A.EMPL_RCD                    (,{C05})

  do Print-Common-Header

  print $WP_FORMULA_ID_LBL           (+1,{C01})
  print $COMMENT                       (,{C02})
  print $WP_DISTRIB_LBL              (+1,{C01})
  print $WP_SALARY_LBL                 (,{C02})
  print &A.WP_SALARY_PRO_PCT           (,{C03})  EDIT 999.99
  print $WP_DURATION_LBL               (,{C04})
  print &A.WP_DURAT_PRO_PCT            (,{C05})  EDIT 999.99
  print $WP_UNIFORM_LBL                (,{C06})
  print &A.WP_UNIFORM_PRO_PCT          (,{C07})  EDIT 999.99
  print $CURRENCY_LBL                (+1,{C01})
  print &A.CURRENCY_CD                 (,{C02})

end-procedure Print-Employee-Header

!***********************************************************************
!  Prints Employee Profit Sharing Header
!***********************************************************************
begin-procedure Print-EE-WP-Header

  print $PROFIT_SHARING_LBL     (+2,{C04})
  print $INTEREST_LBL             (,{C07})

  print $PERIOD_ID_LBL          (+1,{C01})
  print $GLOBAL_FUND_LBL          (,{C02})
  print $WP_AVERAGE_LBL           (,{C03})

  print $WP_WP_TOTAL_LBL          (,{C04})
  print $WP_WP_TOTAL_LBL          (,{C05})
  print $WP_WP_TOTAL_LBL          (,{C06})
  print $WP_IN_TOTAL_LBL          (,{C07})
  print $WP_IN_TOTAL_LBL          (,{C08})
  print $WP_IN_TOTAL_LBL          (,{C09})

  print $WP_AVG_GROSS_AMT_LBL   (+1,{C03})
  print $WP_WP_GROSS_AMT_LBL      (,{C04})
  print $WP_WP_DED_AMT_LBL        (,{C05})
  print $WP_WP_NET_AMT_LBL        (,{C06})
  print $WP_IN_GROSS_AMT_LBL      (,{C07})
  print $WP_IN_DED_AMT_LBL        (,{C08})
  print $WP_IN_NET_AMT_LBL        (,{C09})

end-procedure Print-EE-WP-Header

!***********************************************************************
!  Prints Employee Profit Sharing
!***********************************************************************
begin-procedure Print-EE-Profit-Sharing

  print &A.PERIOD_ID            (+1,{C01})
  print &A.WP_GLOBAL_FUND_AMT     (,{C02}) EDIT 9999999999.99
  print #AVG_TOTAL_GROSS_AMT      (,{C03}) EDIT 9999999999.99
  print &A.WP_TOTAL_GROSS_AMT     (,{C04}) EDIT 9999999999.99
  print #WP_TOTAL_DED_AMT         (,{C05}) EDIT 9999999999.99
  print &A.WP_TOTAL_NET_AMT       (,{C06}) EDIT 9999999999.99
  print #WP_IND_TOT_GROSS_AMT     (,{C07}) EDIT 9999999999.99
  print #WP_IND_TOT_DED_AMT       (,{C08}) EDIT 9999999999.99
  print #WP_IND_TOT_NET_AMT       (,{C09}) EDIT 9999999999.99

end-procedure Print-EE-Profit-Sharing

!***********************************************************************
!  Prints Employee Grand Total
!***********************************************************************
begin-procedure Print-EE-Grand-Total

  print $GRAND_TOTAL_LBL        (+2,{C01})
  print #SUM_TOTAL_GROSS_AMT      (,{C04}) EDIT 9999999999.99
  print #SUM_TOTAL_DED_AMT        (,{C05}) EDIT 9999999999.99
  print #SUM_TOTAL_NET_AMT        (,{C06}) EDIT 9999999999.99
  print #SUM_TOTIN_GROSS_AMT      (,{C07}) EDIT 9999999999.99
  print #SUM_TOTIN_DED_AMT        (,{C08}) EDIT 9999999999.99
  print #SUM_TOTIN_NET_AMT        (,{C09}) EDIT 9999999999.99

end-procedure Print-EE-Grand-Total

!***********************************************************************
!  Get-Agreement-From-RC-List
!***********************************************************************
begin-procedure Get-Agreement-From-RC-List
begin-SELECT distinct ON-ERROR=SQL-Error
RC.WP_AGREEMENT_ID   &RC.WP_AGREEMENT_ID () on-break print=never level=1 procedure=Agreement-Change

  let $WP_AGREEMENT_ID = &RC.WP_AGREEMENT_ID
  let #bFirstTime = 0

  do Get-Agreement-Data

  do Get-Employee-Funding

from PS_RC_WP_IND_RPT RC
where RC.OPRID = $prcs_oprid
and   RC.RUN_CNTL_ID = $prcs_run_cntl_id
order by RC.WP_AGREEMENT_ID
end-SELECT
  do Print-EE-Grand-Total
end-procedure Get-Agreement-From-RC-List


!***********************************************************************
!***********************************************************************

begin-procedure Agreement-Change
  do Print-EE-Grand-Total
  let #SUM_TOTAL_GROSS_AMT = 0
  let #SUM_TOTAL_DED_AMT = 0
  let #SUM_TOTAL_NET_AMT = 0
  let #SUM_TOTIN_GROSS_AMT = 0
  let #SUM_TOTIN_DED_AMT = 0
  let #SUM_TOTIN_NET_AMT = 0
  new-page
end-procedure Agreement-Change

!***********************************************************************
!***********************************************************************

begin-procedure Employee-Change

  do Print-EE-Grand-Total

  let #SUM_TOTAL_GROSS_AMT = 0
  let #SUM_TOTAL_DED_AMT = 0
  let #SUM_TOTAL_NET_AMT = 0
  let #SUM_TOTIN_GROSS_AMT = 0
  let #SUM_TOTIN_DED_AMT = 0
  let #SUM_TOTIN_NET_AMT = 0

  new-page
  do Get-Formula-Data       ! Formula COMMENTS_256
  do Get-Person-Name        ! Employee's name

  do Print-Employee-Header
  do Print-EE-WP-Header

end-procedure Employee-Change

!***********************************************************************
!***********************************************************************

begin-procedure Get-Employee-Funding
begin-SELECT ON-ERROR=SQL-Error
A.EMPLID                &A.EMPLID () on-break print=never level=1 procedure=Employee-Change
A.EMPL_RCD              &A.EMPL_RCD
A.PERIOD_ID             &A.PERIOD_ID
A.WP_FORMULA_ID         &A.WP_FORMULA_ID
A.WP_SALARY_PRO_PCT     &A.WP_SALARY_PRO_PCT
A.WP_DURAT_PRO_PCT      &A.WP_DURAT_PRO_PCT
A.WP_UNIFORM_PRO_PCT    &A.WP_UNIFORM_PRO_PCT
A.WP_TOTAL_GROSS_AMT    &A.WP_TOTAL_GROSS_AMT
A.WP_TOTAL_NET_AMT      &A.WP_TOTAL_NET_AMT
A.WP_TOTIN_GROSS_AMT    &A.WP_TOTIN_GROSS_AMT
A.WP_TOTIN_NET_AMT      &A.WP_TOTIN_NET_AMT
A.WP_GLOBAL_FUND_AMT    &A.WP_GLOBAL_FUND_AMT
A.CURRENCY_CD           &A.CURRENCY_CD
A.WP_AGREEMENT_ID       &A.WP_AGREEMENT_ID

  if #bFirstTime = 0
     do Get-Formula-Data       ! Formula COMMENTS_256
     do Get-Person-Name        ! Employee's name
     do Print-Employee-Header
     do Print-EE-WP-Header
     let #bFirstTime = 1
  end-if

  do Evaluate-Avg-Gross-Amt ! Evaluate #AVG_TOTAL_GROSS_AMT
  do Get-Employee-Interest  ! Compute Interest sums

  if &A.WP_TOTAL_NET_AMT <> 0
     let #WP_TOTAL_DED_AMT = &A.WP_TOTAL_GROSS_AMT - &A.WP_TOTAL_NET_AMT
  else
     let #WP_TOTAL_DED_AMT = 0
  end-if
  let #SUM_TOTAL_GROSS_AMT = #SUM_TOTAL_GROSS_AMT + &A.WP_TOTAL_GROSS_AMT
  let #SUM_TOTAL_DED_AMT = #SUM_TOTAL_DED_AMT + #WP_TOTAL_DED_AMT
  let #SUM_TOTAL_NET_AMT = #SUM_TOTAL_NET_AMT + &A.WP_TOTAL_NET_AMT

  let #SUM_TOTIN_GROSS_AMT = #SUM_TOTIN_GROSS_AMT + #WP_IND_TOT_GROSS_AMT
  let #SUM_TOTIN_DED_AMT = #SUM_TOTIN_DED_AMT + #WP_IND_TOT_DED_AMT
  let #SUM_TOTIN_NET_AMT = #SUM_TOTIN_NET_AMT + #WP_IND_TOT_NET_AMT

  do Print-EE-Profit-Sharing

from PS_WP_EE_FUND A, PS_RC_WP_IND_RPT R, PS_FAST_SQR_SEC_VW SCRTY
where A.WP_AGREEMENT_ID = R.WP_AGREEMENT_ID
and R.WP_AGREEMENT_ID = &RC.WP_AGREEMENT_ID
and R.OPRID = $prcs_oprid
and R.RUN_CNTL_ID = $prcs_run_cntl_id
and A.PERIOD_ID = R.PERIOD_ID
[$SecurityClause]
and A.EMPLID = SCRTY.EMPLID
and A.EMPL_RCD = SCRTY.EMPL_RCD
and (A.EMPLID = R.EMPLID OR R.EMPLID = ' ')
order by A.WP_AGREEMENT_ID, A.EMPLID, A.EMPL_RCD, A.PERIOD_ID
end-SELECT
end-procedure Get-Employee-Funding

!***********************************************************************
!***********************************************************************

begin-procedure Get-Employee-Interest

  let #WP_IND_TOT_GROSS_AMT = 0
  let #WP_IND_TOT_DED_AMT = 0
  let #WP_IND_TOT_NET_AMT = 0

begin-SELECT ON-ERROR=SQL-Error
S.WP_GROSS_AMT
S.WP_DEDUCTIONS_AMT
S.WP_NET_AMT

  let #WP_IND_TOT_GROSS_AMT = #WP_IND_TOT_GROSS_AMT + &S.WP_GROSS_AMT
  let #WP_IND_TOT_DED_AMT = #WP_IND_TOT_DED_AMT + &S.WP_DEDUCTIONS_AMT
  let #WP_IND_TOT_NET_AMT = #WP_IND_TOT_NET_AMT + &S.WP_NET_AMT

from PS_WP_EE_INTEREST S
where S.WP_AGREEMENT_ID = &RC.WP_AGREEMENT_ID
and S.PERIOD_ID = &A.PERIOD_ID
and S.EMPLID = &A.EMPLID
and S.EMPL_RCD = &A.EMPL_RCD
end-SELECT
end-procedure Get-Employee-Interest

!***********************************************************************
!  Evaluate Average Total Gross Amount
!***********************************************************************
begin-procedure Evaluate-Avg-Gross-Amt
begin-SELECT ON-ERROR=SQL-Error
SUM(WP_EE_FUND.WP_TOTAL_GROSS_AMT)   &WP_EE_FUND.SUM_GROSS
COUNT(*)                             &WP_EE_FUND.COUNT_GROSS
!COUNT(WP_EE_FUND.EMPLID)   &WP_EE_FUND.COUNT_GROSS

  let #COUNT_GROSS = &WP_EE_FUND.COUNT_GROSS
  let #SUM_GROSS = &WP_EE_FUND.SUM_GROSS
  if not(#COUNT_GROSS = 0)
     let #AVG_TOTAL_GROSS_AMT = #SUM_GROSS / #COUNT_GROSS
  else
     let #AVG_TOTAL_GROSS_AMT = 0
  end-if

from PS_WP_EE_FUND WP_EE_FUND
where WP_EE_FUND.WP_AGREEMENT_ID = &RC.WP_AGREEMENT_ID
and WP_EE_FUND.PERIOD_ID = &A.PERIOD_ID
group by WP_EE_FUND.WP_AGREEMENT_ID, WP_EE_FUND.PERIOD_ID
end-SELECT
end-procedure Evaluate-Avg-Gross-Amt

!***********************************************************************
!  Get Person Name
!***********************************************************************
begin-procedure Get-Person-Name
begin-SELECT ON-ERROR=SQL-Error
PN.NAME       &PN.NAME

  let $NAME = &PN.NAME

from PS_PERSON_NAME PN
where PN.EMPLID = &A.EMPLID
end-SELECT
end-procedure Get-Person-Name

!***********************************************************************
!  Get Funding Formula Comment
!***********************************************************************
begin-procedure Get-Formula-Data
begin-SELECT ON-ERROR=SQL-Error
F.WP_FORMULA_ID                         &F.WP_FORMULA_ID
{DATEOUT-PREFIX}F.EFFDT{DATEOUT-SUFFIX} &F.EFFDT
F.DESCR50                         &F.DESCR50
!F.DESCRSHORT                            &F.DESCRSHORT
!F.COMMENTS_256                          &F.COMMENTS_256

!  let $COMMENT = &F.COMMENTS_256
  let $COMMENT = &F.DESCR50

!  let $WP_FORMULA_TBL-COMMENTS_256 = $COMMENT
  let $WP_FORMULA_TBL-DESCR50 = $COMMENT
  do Get_Related_WP_FORMULA_TBL(&F.EFFDT, &F.WP_FORMULA_ID)
  let $COMMENT = $WP_FORMULA_TBL-DESCR50
!  let $COMMENT = $WP_FORMULA_TBL-COMMENTS_256

from PS_WP_FORMULA_TBL F
where F.WP_FORMULA_ID = &A.WP_FORMULA_ID
and F.EFFDT = (select max(F1.EFFDT) from PS_WP_FORMULA_TBL F1 where F1.WP_FORMULA_ID = F.WP_FORMULA_ID and F1.EFFDT <= {DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX})
and F.EFF_STATUS = 'A'
end-SELECT
end-procedure Get-Formula-Data

!***********************************************************************
!  Get Agreement Data
!***********************************************************************

begin-procedure Get-Agreement-Data
begin-SELECT ON-ERROR=SQL-Error
AGRT.WP_AGREEMENT_ID      &AGRT.WP_AGREEMENT_ID
AGRT.WP_AGRT_TYPE         &AGRT.WP_AGRT_TYPE
AGRT.DESCRSHORT           &AGRT.DESCRSHORT
AGRT.DESCR50              &AGRT.DESCR50

  let $WP_AGRT_LONG = &AGRT.DESCR50
  let $WP_AGRT_SHORT = &AGRT.DESCRSHORT

  let $WP_AGREEMENT-DESCR50 = $WP_AGRT_LONG
  let $WP_AGREEMENT-DESCRSHORT = $WP_AGRT_SHORT
  do Get_Related_WP_AGREEMENT(&AGRT.WP_AGREEMENT_ID)
  let $WP_AGRT_LONG = $WP_AGREEMENT-DESCR50
  let $WP_AGRT_SHORT = $WP_AGREEMENT-DESCRSHORT

  let $FIELDNAME = 'WP_AGRT_TYPE'
  do Get-XLAT-Values($FIELDNAME, &AGRT.WP_AGRT_TYPE, $AGRT_TYPE_LONG, $AGRT_TYPE_SHORT)

from PS_WP_AGREEMENT AGRT
where AGRT.WP_AGREEMENT_ID = &RC.WP_AGREEMENT_ID
end-SELECT
end-procedure Get-Agreement-Data

!***********************************************************************
!  Get XLAT values
!***********************************************************************
begin-procedure Get-XLAT-Values($FIELDNAME, $FIELDVALUE, :$XLATLONG, :$XLATSHORT)
begin-SELECT ON-ERROR=SQL-Error
{DATEOUT-PREFIX}X.EFFDT{DATEOUT-SUFFIX} &X.EFFDT
X.FIELDNAME       &X.FIELDNAME
X.FIELDVALUE      &X.FIELDVALUE
X.XLATLONGNAME    &X.XLATLONGNAME
X.XLATSHORTNAME   &X.XLATSHORTNAME

  let $XLATLONG = &X.XLATLONGNAME
  let $XLATSHORT = &X.XLATSHORTNAME
  move &X.FIELDNAME   to $_FieldName
  move &X.FIELDVALUE  to $_FieldValue
  do Read-Translate-Table
  let $XLATLONG  = $_XlatLongName
  let $XLATSHORT = $_XlatShortName

from PSXLATITEM X
where X.FIELDNAME = $FIELDNAME
and X.FIELDVALUE = $FIELDVALUE
!and X.EFFDT = (select max(X1.EFFDT) from PSXLATITEM X1 where X1.FIELDNAME = X.FIELDNAME and X1.FIELDVALUE = X.FIELDVALUE and X1.EFFDT <= {DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX})
and X.EFF_STATUS = 'A'
end-SELECT
end-procedure Get-XLAT-Values


#include 'stdapi.sqc'    !Routines to update run status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
#Include 'datemath.sqc'
#include 'hrsecty.sqc'
