!******************************************
!  PER011:  Competency Inventory          *
!******************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/08/06:00:31:01                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689848                                              !
!                                                                      *
!***********************************************************************
!Procedures ending with "Scrty" and Record alias ending with "SC" are
!using SQR Seurity.
!***********************************************************************
#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup



begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  if $prcs_oprid=''
  goto last2
 end-if

 do lalit-MainProc
 print ' '  (1,40) !This creates o/p file, when no data.
  do Reset
  do Stdapi-Term
last2:
end-report


begin-heading 7
do Get_Field_Information ('PER011',     'REPORT_TITLE',         $ReportTitle,   #DW)
  #Include 'stdhdgtr.sqc'

do Get_Field_Information ('HR',         'COMP1',                $comp1,         #DW)
do Get_Field_Information ('HR',         'COMP2',                $comp2,         #DW)
do Get_Field_Information ('HR',         'COMPETENCY',           $comp,          #DW)
do Get_Field_Information ('HR',         'PROFICIENCY',          $proficiency,   #DW)
do Get_Field_Information ('HR',         'LAST_USED1',           $last_used1,    #DW)
do Get_Field_Information ('HR',         'LAST_USED2',           $last_used2,    #DW)
do Get_Field_Information ('HR',         'YEAR_ACQUIRED1',       $yr_acquired1,  #DW)
do Get_Field_Information ('HR',         'YEAR_ACQUIRED2',       $yr_acquired2,  #DW)
do Get_Field_Information ('HR',         'EMPL_NAME',            $name,          #DW)
do Get_Field_Information ('HR',         'JOBTITLE',             $jobtitle,      #DW)
do Get_Field_Information ('HR',         'DEPARTMENT',           $dept,          #DW)

print   $comp1                                                  (+2,1,74)
print   $last_used1                                             (0,76,6)
print   $yr_acquired1                                           (0,83)

print   $comp2                                                  (+1,1,16)
print   $comp                                                   (0,18,39)
print   $proficiency                                            (0,58,17)
print   $last_used2                                             (0,76,5)
print   $yr_acquired2                                           (0,82,11)
print   $name                                                   (0,94,41)
print   $jobtitle                                               (0,136,11)
print   $dept                                                   (0,148)

end-heading

begin-procedure lalit-MainProc
begin-SELECT
RUN_CNTL_DEPT.OPRID
RUN_CNTL_DEPT.RUN_CNTL_ID
RUN_CNTL_DEPT.DEPTID
RUN_CNTL_DEPT.SETID

  if $language_cd = 'JPN'
     let $qualifier = 'A.NAME_AC'
  else
     let $qualifier = 'A.NAME'
  end-if
  do Process-Main

FROM PS_RUN_CNTL_DEPT RUN_CNTL_DEPT
WHERE RUN_CNTL_DEPT.OPRID = $prcs_oprid
  AND RUN_CNTL_DEPT.RUN_CNTL_ID = $prcs_run_cntl_id
end-Select
end-procedure lalit-MainProc

begin-procedure Init-Report
  Let $_TableAlias = 'A' 
  move 'PER011' to $ReportID
  do Stdapi-Init
  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  do Security-Param

  if $prcs_process_instance = ''
    do ask-departments
  else
     !do Select-Parameters
     !do Get-Departments
let $language_cd = $PRCS_LANGUAGE_CD
  end-if
  !do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')
last1:
end-procedure

begin-procedure Get-Values
  !do Get-Departments
!let $language_cd = $PRCS_LANGUAGE_CD
end-procedure

begin-procedure Process-Main
show '$AsOfToday ' $AsOfToday

begin-SELECT DISTINCT
A.DEPTID
B.COMPETENCY           (+1,1,16)  on-break level=1 skiplines=1
C.DESCR                (0,18,39)   on-break level=1
D.REVIEW_POINTS
D.DESCRSHORT           (0,58,17)
B.YR_LAST_USED         (0,76)  EDIT BBB9
B.YR_ACQUIRED          (0,82)  EDIT BBB9
!{DATETIMEOUT-PREFIX}B.EFFDT{DATETIMEOUT-SUFFIX}  &B.EFFDT
!  DO Convert-To-DTU-Date(&B.EFFDT, $dtu_date)
!  DO dtu-parse-date($dtu_date, #YR_ACQUIRED, #a, #a)
!  print #YR_ACQUIRED    (0,82)  EDIT BBB9
A.NAME                 (0,94,41)
A.NAME_AC
JOBTITLE_ABBRV         (0,136,11)
DEPTNAME_ABBRV         (0,148)
FROM  PS_EMPLOYEES A, PS_COMPETENCIES B, PS_COMPETENCY_TBL C,
      PS_REVW_RATING_TBL D
WHERE A.DEPTID = &RUN_CNTL_DEPT.DEPTID
  AND A.BUSINESS_UNIT IN ( SELECT SETCNTRLVALUE FROM PS_SET_CNTRL_REC SS
              WHERE SS.RECNAME='DEPT_TBL' AND SS.SETID=&RUN_CNTL_DEPT.SETID)
  AND B.EMPLID = A.EMPLID
  AND C.COMPETENCY  = B.COMPETENCY
  AND D.RATING_MODEL = C.RATING_MODEL
  AND D.REVIEW_RATING = B.PROFICIENCY
  [$SecurityClausewithERN]
  AND B.EFFDT = (SELECT MAX(EFFDT) FROM PS_COMPETENCIES
                 WHERE EMPLID = B.EMPLID
                   AND EVALUATION_ID = B.EVALUATION_ID
                   AND COMPETENCY = B.COMPETENCY
                   AND EFFDT <= $AsOfToday)
  AND D.EFFDT = (SELECT MAX(EFFDT) FROM PS_RATING_MDL_TBL
                 WHERE RATING_MODEL = D.RATING_MODEL
                   AND EFFDT <= $AsOfToday)

ORDER BY B.COMPETENCY, D.REVIEW_POINTS DESC, [$qualifier] ASC
end-SELECT
end-procedure

#include 'stdapi.sqc'    !Routine to Update Run Status
#include 'askdept.sqc'   !Department Number input
#include 'hrrnctl1.sqc'  !Get run control parameter values
!#include 'hrrnctl4.sqc'  !Get Department ID values
#include 'hrsecty.sqc'   !Get SQR Security parameters

#include 'hrgetval.sqc'  !Get values mask routines
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'datemath.sqc'  !SQR date arithmetic procedures.
#Include 'number.sqc'    !Routines to format numbers
#Include 'sqrtrans.sqc'  !Routines to retrieve column headings
#Include 'useprntr.sqc'
