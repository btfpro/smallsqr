! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! SETTABLE - Set the TABLE Overrides in PSRECDDLPARM                   *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************
#define REPORTID         'SETTABLE'
#include 'setenv.sqc'                   ! Set environment procedure
#include 'setup01.sqc'                  ! Init printer and page size

begin-report
   do Initialize
   do Report
   do Terminate
end-report

!----------------------------------------------------------------------!
! Procedure: Initialize                                                !
! Descr:     Perform initialization procedure.                         !
!----------------------------------------------------------------------!
begin-procedure Initialize

   do Init-DateTime
   do Init-Number
   move {REPORTID} to $ReportID
   move 'Set TABLE Storage overrides in PSRECDDLPARM' to $ReportTitle
   move '' to $AuditDescr
   let #UpdCount = 0
   let #UpdCount1 = 0
   let #UpdCount2 = 0
   let #UpdCount3 = 0
   let #UpdCount4 = 0
   let #UpdCount5 = 0
   let #UpdCount6 = 0
   let #TotalCount = 0
   let $RecName = ' '
   display $ReportTitle
   Show ' '
   Show  ' Table PSRECDDLPARM column PARMVALUE has been updated with the'
   Show  ' Current Values found in the system catalog table.  The total'
   Show  ' number of records updated appears at the bottom of this report.'
   Show  ' '


#IFDEF ORACLE
   let #platformID = 2
   Show  'Tablename        Init       Next       Maxext     Pct    Pctfree Pctused'
   Show  '---------------- ---------- ---------- ---------- ------ ------- -------'
#ENDIF

end-procedure


!----------------------------------------------------------------------!
! Procedure: Report                                                    !
! Descr:     Perform main report procedure.                            !
!----------------------------------------------------------------------!
begin-procedure Report

! Used for version control and to allow re-cache only for records that
! have been updated

begin-SQL on-error=SQL-Error
 UPDATE PSLOCK
 SET VERSION= VERSION+1
 WHERE OBJECTTYPENAME = 'RDM'
end-SQL

begin-SELECT on-error=SQL-Error
V.version &V.Version
   let #NewVersionrdm = &V.Version
FROM PSLOCK V
WHERE OBJECTTYPENAME = 'RDM'
end-SELECT

Do  Get-Default-Values

let $update_done = 'N'

begin-SELECT  ON-ERROR=SQL-ERROR
P.RecName       &P.RecName
P.SQLTableName  &P.SQLTableName
P.DDLCount      &P.DDLCount

    if &P.SQLTableName = ' '
       let $RecName   = 'PS_'|| substr(&P.RecName,1,15)
     else
       let $Recname   = &P.SQLTableName
    end-if

    Do  Read-Sys-Catalog
    Do  Update-Version

FROM PSRECDEFN   P
WHERE P.RECTYPE = 0
ORDER BY P.RECNAME
end-SELECT

if $update_done = 'Y'

begin-SQL on-error=SQL-Error
 UPDATE PSVERSION
 SET VERSION= VERSION+1
 WHERE OBJECTTYPENAME IN ('RDM','SYS')
end-SQL

end-if

end-procedure

!----------------------------------------------------------------------!
! Procedure: Terminate                                                 !
! Descr:     Perform termination procedure.                            !
!----------------------------------------------------------------------!
begin-procedure Terminate

   Show ' '
   Show 'Tables Updated: ' #UpdCount edit 9999999
   Show ' '


#Ifdef Debuga
   Show 'Table overrides updated for Init Extent Values: ' #UpdCount1 edit 9999999
   Show 'Table overrides updated for Next Extent Values: ' #UpdCount2 edit 9999999
   Show 'Table overrides updated for Max Extent Values : ' #UpdCount3 edit 9999999
   Show 'Table overrides updated for PctIncr Values    : ' #UpdCount4 edit 9999999
   Show 'Table overrides updated for PctFree Values    : ' #UpdCount5 edit 9999999
   Show 'Table overrides updated for PctUsed Values    : ' #UpdCount6 edit 9999999
#Endif


   Show 'Ending SQR.'
   Print 'End of Report...'   (+2,10)

   do Commit-Transaction

end-procedure


!-----------------------------------------------------------------------------!
! Procedure: Get-Default-Values                                               !
! Descr:     Get the Default values from PSDDLDEFPARMS for Tables             !
!-----------------------------------------------------------------------------!
begin-procedure Get-Default-Values

!-----------------------------------------------------------------------------!
!SELECT * FROM PSDDLDEFPARMS WHERE PLATFORMID = 2 AND STATEMENT_TYPE = 1
!
!STATEMENT_TYPE PLATFORMID SIZING_SET PARMNAME                 PARMVALUE
!-------------- ---------- ---------- ------------------------ -----------------------------------
!             1          2          0 INIT                     40000
!             1          2          0 MAXEXT                   UNLIMITED
!             1          2          0 NEXT                     100000
!             1          2          0 PCT                      0
!             1          2          0 PCTFREE                  10
!             1          2          0 PCTUSED                  80
!
!6 rows selected.
!-----------------------------------------------------------------------------!

begin-SELECT On-Error=SQL-Error
C.PARMNAME        &C.PARMNAME
C.PARMVALUE       &C.PARMVALUE

    let $PARMNAME  = &C.PARMNAME
    let $INITVALUE = to_char(1024 * CEIL(to_number(&C.PARMVALUE)/1024))

FROM PSDDLDEFPARMS C
WHERE PLATFORMID = 2
AND STATEMENT_TYPE = 1
AND PARMNAME = 'INIT'
end-SELECT


begin-SELECT On-Error=SQL-Error
D.PARMNAME        &D.PARMNAME
D.PARMVALUE       &D.PARMVALUE

    let $PARMNAME  = &D.PARMNAME
        If &D.PARMVALUE = 'UNLIMITED'
       let $MAXEXTVALUE = '2147483645'
    else
       let $MAXEXTVALUE = &D.PARMVALUE
    end-if

FROM PSDDLDEFPARMS D
WHERE PLATFORMID = 2
AND STATEMENT_TYPE = 1
AND PARMNAME = 'MAXEXT'
end-SELECT


begin-SELECT On-Error=SQL-Error
E.PARMNAME        &E.PARMNAME
E.PARMVALUE       &E.PARMVALUE

    let $PARMNAME  = &E.PARMNAME
    let $NEXTVALUE = to_char(1024 * CEIL(to_number(&E.PARMVALUE)/1024))

FROM PSDDLDEFPARMS E
WHERE PLATFORMID = 2
AND STATEMENT_TYPE = 1
AND PARMNAME = 'NEXT'
end-SELECT


begin-SELECT On-Error=SQL-Error
F.PARMNAME        &F.PARMNAME
F.PARMVALUE       &F.PARMVALUE

    let $PARMNAME  = &F.PARMNAME
    let $PCTVALUE = &F.PARMVALUE

FROM PSDDLDEFPARMS F
WHERE PLATFORMID = 2
AND STATEMENT_TYPE = 1
AND PARMNAME = 'PCT'
end-SELECT


begin-SELECT On-Error=SQL-Error
G.PARMNAME        &G.PARMNAME
G.PARMVALUE       &G.PARMVALUE

    let $PARMNAME  = &G.PARMNAME
    let $PCTFREEVALUE = &G.PARMVALUE


FROM PSDDLDEFPARMS G
WHERE PLATFORMID = 2
AND STATEMENT_TYPE = 1
AND PARMNAME = 'PCTFREE'
end-SELECT


begin-SELECT On-Error=SQL-Error
H.PARMNAME        &H.PARMNAME
H.PARMVALUE       &H.PARMVALUE

    let $PARMNAME  = &H.PARMNAME
    let $PCTUSED  = &H.PARMVALUE


FROM PSDDLDEFPARMS H
WHERE PLATFORMID = 2
AND STATEMENT_TYPE = 1
AND PARMNAME = 'PCTUSED'
end-SELECT


!-----------------------------------------------------------------------------!
!
! After this procedure, The default TABLE PSDDLDEFPARMS
! WHERE PLATFORMID = 2 AND STATEMENT_TYPE = 1 are stored in the following variables
!
!    let $INITVALUE     = to_char(&C.PARMVALUE)
!    let $NEXTVALUE     = to_char(&E.PARMVALUE)
!    let $MAXEXTVALUE   = to_char(&D.PARMVALUE)
!    let $PCTVALUE      = to_char(&F.PARMVALUE)
!    let $PCTFREEVALUE  = to_char(&G.PARMVALUE)
!    let $PCTUSED       = to_char(&H.PARMVALUE)
!
!
#Ifdef Debugb
  show '$INITVALUE/$NEXTVALUE/$MAXEXTVALUE/$PCTVALUE/$PCTFREEVALUE/$PCTUSED:'
  show  $INITVALUE '/' $NEXTVALUE '/' $MAXEXTVALUE '/' $PCTVALUE '/' $PCTFREEVALUE '/' $PCTUSED
#Endif

!-----------------------------------------------------------------------------!

end-procedure


!-----------------------------------------------------------------------------!
! Procedure: Read-Sys-Catalog                                                 !
! Descr:     Get the Primary and Secondary Quanties and Stogroup from catalog !
!-----------------------------------------------------------------------------!
begin-procedure Read-Sys-Catalog

#IFDEF ORACLE

begin-SELECT On-Error=SQL-Error
Y.INITIAL_EXTENT &Y.INIT
Y.NEXT_EXTENT    &Y.NEXT
Y.MAX_EXTENTS    &Y.MAXEXT
Y.PCT_INCREASE   &Y.PCT
Y.PCT_FREE       &Y.PCTFREE
Y.PCT_USED       &Y.PCTUSED

    let $Initialex = to_char(&Y.INIT)
    let $Nextex    = to_char(&Y.NEXT)
    let $MaxEx     = to_char(&Y.MAXEXT)
    let $Pct       = to_char(&Y.PCT)
    let $Pctfree   = to_char(&Y.PCTFREE)
    let $Pctused   = to_char(&Y.PCTUSED)

    let $update_done = 'Y'
    Do  Update-PSRECDDLPARM

FROM USER_TABLES Y
WHERE TABLE_NAME = $Recname
end-SELECT

#ENDIF


end-procedure

!-----------------------------------------------------------------------------!
! Procedure: Update-Version                                                   !
!-----------------------------------------------------------------------------!
begin-procedure Update-Version

begin-SQL
UPDATE PSRECDEFN
   SET VERSION = #NewVersionrdm

WHERE RECNAME = &P.Recname
end-Sql

end-procedure

!-----------------------------------------------------------------------!
! Procedure: Update-PSRECDDLPARM                                        !
! Descr:     Check to see if an Override already Exists for the         !
!            platform. If no override exists, Insert an override for    !
!            Primary Qty, SecQty, StoGroup and increment DDLCount in    !
!            PSRECDEFN for the Table.                                   !
!            If at least one override exists, delete and insert the     !
!            override for the Table and do not update DDLCount in       !
!            PSRECDEFN                                                  !
!-----------------------------------------------------------------------!
begin-procedure Update-PSRECDDLPARM

    if $DBName = ''
        let $DBName =$def_dbname
    end-if

let $parmexist = ' '

begin-Select LOOPS=1 On-Error=SQL-Error
X.PARMVALUE

   let $parmexist = 'Y'

FROM PSRECDDLPARM X
WHERE RECNAME = &P.RECNAME
end-Select

begin-SQL  On-Error=SQL-Error
  DELETE FROM PSRECDDLPARM
  WHERE RECNAME = &P.RECNAME
    AND PLATFORMID = #platformID
    AND SIZINGSET  = 0
end-SQL


!-----------------------------------------------------------------------------!
! Insert Overrides - ORACLE
!-----------------------------------------------------------------------------!
!
! After this procedure, The default INDEX PSDDLDEFPARMS
! WHERE PLATFORMID = 2 AND STATEMENT_TYPE = 1 are stored in the following variables
!
!    let $INITVALUE     = to_char(&C.PARMVALUE)
!    let $NEXTVALUE     = to_char(&E.PARMVALUE)
!    let $MAXEXTVALUE   = to_char(&D.PARMVALUE)
!    let $PCTVALUE      = to_char(&F.PARMVALUE)
!    let $PCTFREEVALUE  = to_char(&G.PARMVALUE)
!    let $PCTUSED       = to_char(&H.PARMVALUE)
!

#Ifdef Debugc
    show '$INITVALUE/$NEXTVALUE/$MAXEXTVALUE/$PCTVALUE/$PCTFREEVALUE/$PCTUSED:'
    show  $INITVALUE '/' $NEXTVALUE '/' $MAXEXTVALUE '/' $PCTVALUE '/' $PCTFREEVALUE '/' $PCTUSED
    show '$Initialex/$Nextex/$Maxex/$pct/$pctfree/$Pctused:'
    show  $Initialex '/' $Nextex '/' $Maxex '/' $Pct '/' $Pctfree '/' $Pctused
#Endif

#Ifdef Debugd
    show '$Initialex/$INITVALUE:'
    show $Initialex '/' $INITVALUE
    show '$Nextex/$NEXTVALUE:'
    show $Nextex '/' $NEXTVALUE
    show '$Maxex/$MAXEXTVALUE:'
    show $Maxex '/' $MAXEXTVALUE
    show '$Pct/$PCTVALUE:'
    show $Pct '/' $PCTVALUE
    show '$Pctfree/$PCTFREEVALUE:'
    show $Pctfree '/' $PCTFREEVALUE
    show '$Pctused/$PCTUSED:'
    show $Pctused '/' $PCTUSED
#Endif

!-----------------------------------------------------------------------------!

let #TotalCount = 0

if to_number($Initialex) > to_number($INITVALUE)
  begin-SQL On-Error=SQL-Error
    INSERT INTO PSRECDDLPARM
     (RECNAME, PLATFORMID, SIZINGSET, PARMNAME, PARMVALUE)
    VALUES
     (&P.RECNAME, #platformID, 0, 'INIT',$Initialex)
  end-SQL
  add +1 to #TotalCount
  add +1 to #UpdCount1
end-if


if $Nextex    <> '0'
  if $Nextex  <> $NEXTVALUE
    begin-SQL On-Error=SQL-Error
      INSERT INTO PSRECDDLPARM
       (RECNAME, PLATFORMID, SIZINGSET, PARMNAME, PARMVALUE)
    VALUES
       (&P.RECNAME, #platformID, 0, 'NEXT',$Nextex)
    end-SQL
    add +1 to #TotalCount
    add +1 to #UpdCount2
  end-if
end-if


if $Maxex     <> $MAXEXTVALUE
  begin-SQL On-Error=SQL-Error
    INSERT INTO PSRECDDLPARM
     (RECNAME, PLATFORMID, SIZINGSET, PARMNAME, PARMVALUE)
    VALUES
     (&P.RECNAME, #platformID, 0, 'MAXEXT',$Maxex)
  end-SQL
  add +1 to #TotalCount
  add +1 to #UpdCount3
end-if


if $Pct      <> $PCT
  begin-SQL On-Error=SQL-Error
    INSERT INTO PSRECDDLPARM
     (RECNAME, PLATFORMID, SIZINGSET, PARMNAME, PARMVALUE)
    VALUES
     (&P.RECNAME, #platformID, 0, 'PCT',$Pct)
  end-SQL
  add +1 to #TotalCount
  add +1 to #UpdCount4
end-if


if $Pctfree   <> $PCTFREEVALUE
    begin-SQL On-Error=SQL-Error
      INSERT INTO PSRECDDLPARM
       (RECNAME, PLATFORMID, SIZINGSET, PARMNAME, PARMVALUE)
      VALUES
       (&P.RECNAME, #platformID, 0, 'PCTFREE',$Pctfree)
    end-SQL
    add +1 to #TotalCount
    add +1 to #UpdCount5
end-if


if $Nextex    <> '0'
  if $Pctused   <> $PCTUSED
    begin-SQL On-Error=SQL-Error
     INSERT INTO PSRECDDLPARM
      (RECNAME, PLATFORMID, SIZINGSET, PARMNAME, PARMVALUE)
     VALUES
      (&P.RECNAME, #platformID, 0, 'PCTUSED',$Pctused)
    end-SQL
    add +1 to #TotalCount
    add +1 to #UpdCount6
  end-if
end-if


#Ifdef Debuge
   show '#Totalcount :' #Totalcount edit 9999999
#Endif


if #TotalCount <> 0
  if $parmexist <> 'Y'
     let #ddlcount = &P.DDLCount + 1
     Begin-SQL On-Error=SQL-Error
       UPDATE PSRECDEFN
          SET DDLCOUNT = #ddlcount
        WHERE RECNAME = &P.RecName
     end-SQL
  end-if
  show $Recname     '     ' $Initialex '     ' $Nextex '          ' $Maxex ' ' $Pct '      ' $Pctfree '      ' $Pctused
  add +1 to #UpdCount
end-if

end-procedure


#include 'curdttim.sqc'
#include 'datetime.sqc'
#include 'number.sqc'
#include 'prcsapi.sqc'
