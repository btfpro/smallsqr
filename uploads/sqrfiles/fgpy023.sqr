!***********************************************************************
!  FGPY023:  Federal Employee Family Leave Act Summary Report          *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!          $Date:  2006/07/20:03:51:42                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#Include 'setup02.sqc'   !Printer and page-size initialization

#define col_sep                  1   !Column Separator
#define col_empl_name           25   !Employee Name
#define col_national_id         11   !National ID
#define col_occ_series          12   !Occupational Series
#define col_base_pay            13   !Base Pay
#define col_fmla_taken          32   !FMLA Taken
#define col_reason              20   !Reason
#define col_12_months_pd        59   !12 Month Period
#define col_year_rpt            13   !Year Reported
#define col_begin_dt            10   !Begin Date
#define col_end_dt              10   !End Date
#define col_hrs_taken           34   !Hours Taken

!***********************************************************************
!  FGPY023:  Begin Report                                              *
!***********************************************************************
begin-report

  do Init-Report
  do Get-Run-Year
  do Process-Main
  do Stdapi-Term

end-report
!***********************************************************************
!  Init Report Procedure:  Do Report Time and others for the heading   *
!***********************************************************************
begin-procedure Init-Report

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  move 0 to $RowCounter
  do Stdapi-Init
  let $ReportID = 'FGPY023'
  let $ReportTitle  = 'Paid / Non Paid Federal Employee Family Leave Act Summary Report'
  let $first_page = 'Y'
  display  'Report ID: ' noline
  display $ReportTitle

end-procedure
!***********************************************************************
!  Heading:  Do Report Heading for Each New Page or New Company        *
!***********************************************************************
begin-heading 8

#Include 'stdhdgtr.sqc'

   DO COMPANY-NAME

   print 'Year Reported: ' (+2, 1)
   print $REPORTING-YEAR (0,22,10)

!Column Heading line 1
  print 'Employee Name'      (+2,1,{col_empl_name})
  print 'National ID'        (0,+{col_sep},{col_national_id})
  print 'Occupational'       (0,+{col_sep},{col_occ_series})
  print 'Base Pay'           (0,+6,9)
  print 'FEFFLA Taken'       (0,+12,{col_hrs_taken})
  print '12 Month Period'    (0,+17)

!Column Heading line 2
  print 'Series'                           (+1,42,)
  print 'Paid     NonPaid         Total'   (0,72,{col_hrs_taken})
  print 'Begin Date'                       (0,0,{col_begin_dt})
  print 'End Date'                         (0,+3,{col_end_dt})
  print 'Paid     NonPaid         Total'   (0,+6,{col_hrs_taken})

!Column Heading line 3
  print '='                 (+1,1,{col_empl_name})               Fill
  print '='                 (0,+{col_sep},{col_national_id})     Fill
  print '='                 (0,+{col_sep},{col_occ_series})      Fill
  print '='                 (0,+{col_sep},{col_base_pay})        Fill
  print '='                 (0,+{col_sep},36)                    Fill
  print '='                 (0,+4,{col_12_months_pd})            Fill

   move &a.company to $company

end-heading
!***********************************************************************
!  Ge Run Year Procedure:  Get Report Year from Run Control Panel or   *
!                          from user input                             *
!***********************************************************************
begin-procedure Get-Run-Year

  if $Prcs_Process_Instance = ''
    do Process-Run-Year
  else
    do Select-Parameters
  end-if

  LET $YEAR-START = $REPORTING-YEAR
  LET $YEAR-END = $REPORTING-YEAR
  CONCAT '-01-01' WITH $YEAR-START
  CONCAT '-12-31' WITH $YEAR-END
  DO Convert-From-DTU-Date($YEAR-START,$SQL-YEAR-START)
  DO Convert-From-DTU-Date($YEAR-END,$SQL-YEAR-END)
  show 'Reporting Year ' $SQL-YEAR-START ' ' $SQL-YEAR-END

end-procedure
!***********************************************************************
!  Process Run Year Procedure:  Get Report Year from User Input        *
!***********************************************************************
begin-procedure Process-Run-Year

  move 0 to #Found
  while #Found = 0
    input $REPORTING-YEAR 'Enter Reporting Year'
    if $REPORTING-YEAR = ''
      stop
    else
      move 1 to #Found
    end-if
  end-while

end-procedure
!***********************************************************************
!  Main Procedure:  Read Data from Database tables and call print      *
!                   detail for each leave request of each employee.    *
!***********************************************************************
begin-procedure Process-Main

  LET #EMP_TOTAL = 0
  LET #AGENCY_HRS = 0
  LET #FMLA_YEAR_LINE = 0
  LET #EMPLOYEE_LINE = 0

begin-SELECT
A.COMPANY () ON-BREAK Print = Never Before = Create_new_page
                                    After = Agency_Totals
                                    SAVE = $PREV_COMP
A.ANNUAL_RT,
A.EMPLID,
A.DEPTID,
A.GVT_SUB_AGENCY,
B.NAME,
C.NATIONAL_ID,
D.GVT_OCC_SERIES,
E.BEGIN_DT,
E.FMLA_YEAR_BEGIN_DT

  do Process-Detail

FROM PS_GVT_JOB       A,
     PS_GVT_PERS_DATA B,
     PS_GVT_PERS_NID  C,
     PS_POSITION_DATA D,
     PS_FMLA_LV_REQUEST E

WHERE A.EMPLID    = B.EMPLID
  AND A.EMPL_RCD = B.EMPL_RCD
  AND A.EFFDT     = B.EFFDT
  AND A.EFFSEQ    = B.EFFSEQ
  AND A.EMPLID    = C.EMPLID
  AND A.EMPL_RCD = C.EMPL_RCD
  AND A.EFFDT     = C.EFFDT
  AND A.EFFSEQ    = C.EFFSEQ
  AND A.POSITION_NBR = D.POSITION_NBR
  AND A.EMPLID = E.EMPLID
  AND E.FMLA_LV_APPROVED = 'A'
  AND E.RETURN_DT >= $SQL-YEAR-START
  AND E.BEGIN_DT <= $SQL-YEAR-END

  AND A.EFFDT =
       (SELECT MAX(EFFDT)
        FROM   PS_GVT_JOB
        WHERE  EMPLID  = A.EMPLID)
  AND  A.EFFSEQ =
       (SELECT MAX(EFFSEQ)
        FROM   PS_GVT_JOB
        WHERE  EMPLID  = A.EMPLID
          AND  EFFDT = A.EFFDT)
  AND  A.EMPL_RCD =
       (SELECT MAX(EMPL_RCD)
        FROM   PS_GVT_JOB
        WHERE  EMPLID  = A.EMPLID
         AND  EFFDT = A.EFFDT)
  AND  D.EFFDT =
       (SELECT MAX(EFFDT)
        FROM   PS_POSITION_DATA
        WHERE  POSITION_NBR  = D.POSITION_NBR
          AND  EFFDT = D.EFFDT)

  AND  E.FMLA_REQUEST_ID =
       (SELECT MAX(FMLA_REQUEST_ID)
        FROM   PS_FMLA_LV_REQUEST
        WHERE  EMPLID = A.EMPLID
         AND   FMLA_LV_APPROVED = 'A'
         AND   RETURN_DT >= $SQL-YEAR-START
         AND   BEGIN_DT <= $SQL-YEAR-END)

ORDER BY A.COMPANY,
         A.DEPTID,
         A.GVT_SUB_AGENCY,
         A.EMPLID,
         E.BEGIN_DT

end-SELECT

end-procedure
!***********************************************************************
!  Process Procedure:  Process each leave request for each employee    *
!***********************************************************************
begin-procedure Process-Detail

  LET #REQ_NON_PD = 0
  LET #REQ_PD = 0
  LET #FMLA_NON_PD = 0
  LET #FMLA_PD = 0

  DO Convert-TO-DTU-Date(&E.FMLA_YEAR_BEGIN_DT,$FMLA-YEAR-START)
  DO DTU-ADD-YEARS($FMLA-YEAR-START,1,$TEMP-YEAR-END)
  DO DTU-SUBTRACT-DAYS($TEMP-YEAR-END,1,$FMLA-YEAR-END)

  IF $YEAR-START < $FMLA-YEAR-START
     LET $SQL-FMLA-YEAR-START = $SQL-YEAR-START
  ELSE
     DO Convert-From-DTU-Date($FMLA-YEAR-START,$SQL-FMLA-YEAR-START)
  END-IF
  IF $YEAR-END > $FMLA-YEAR-END
     LET $SQL-FMLA-YEAR-END = $SQL-YEAR-END
  ELSE
     DO Convert-From-DTU-Date($FMLA-YEAR-END,$SQL-FMLA-YEAR-END)
  END-IF
  #ifdef debugx
    show 'SELECT Year FOR ' &A.EMPLID ' ' &B.NAME ' ' $YEAR-START ' ' $YEAR-END
    show 'FMLA Year FOR ' &A.EMPLID ' ' &B.NAME ' ' $SQL-FMLA-YEAR-START ' ' $SQL-FMLA-YEAR-END
  #endif
begin-SELECT
F.EFFDT,
F.HOURS_EARNED,
F.SERVICE_HRS,
H.FACTOR_MULT

  DO Convert-TO-DTU-Date(&F.EFFDT,$EFFDT)
  IF $EFFDT >= $YEAR-START AND $EFFDT <= $YEAR-END
     IF &H.FACTOR_MULT = 0
        ADD &F.SERVICE_HRS TO #REQ_NON_PD
     ELSE
        ADD &F.HOURS_EARNED TO #REQ_PD
     END-IF
  END-IF
  IF $EFFDT >= $FMLA-YEAR-START AND $EFFDT <= $FMLA-YEAR-END
     IF &H.FACTOR_MULT = 0
        ADD &F.SERVICE_HRS TO #FMLA_NON_PD
     ELSE
        ADD &F.HOURS_EARNED TO #FMLA_PD
     END-IF
  END-IF
  #ifdef debugx
     SHOW &A.EMPLID ' ' $EFFDT ' ' &H.FACTOR_MULT ' ' #REQ_NON_PD ' ' #REQ_PD ' ' #FMLA_NON_PD ' ' #FMLA_PD
  #endif

FROM PS_GVT_ACCR_LDGR F,
     PS_GVT_ERN_ACR_CLS G,
     PS_EARNINGS_TBL H

WHERE F.EMPLID = &A.EMPLID
  AND G.GVT_EARN_TYPE = 'FM'
  AND H.GVT_FEFFLA = 'Y'
  AND (H.FACTOR_MULT = 0
       OR H.FACTOR_MULT = 1)
  AND F.GVT_ERN_ACCR_CLASS = G.GVT_ERN_ACCR_CLASS
  AND F.ERNCD = H.ERNCD
  AND F.EFFDT >= $SQL-FMLA-YEAR-START
  AND F.EFFDT <= $SQL-FMLA-YEAR-END

  AND H.EFFDT =
       (SELECT MAX(EFFDT)
        FROM   PS_EARNINGS_TBL
       WHERE  ERNCD  = H.ERNCD)

end-SELECT

     LET #FMLA_TOTAL = #FMLA_NON_PD + #FMLA_PD
     LET #REQ_TOTAL = #REQ_NON_PD + #REQ_PD
     IF #FMLA_TOTAL > 0 OR #REQ_TOTAL > 0
        Do Print-Detail
     END-IF

end-procedure
!***********************************************************************
!  Print Detail Procedure:  Write each leave request for each employee *
!***********************************************************************
begin-procedure Print-Detail

     do Format-Number(&A.ANNUAL_RT, $Base_pay, '99,999,999.99mi')
     print &B.NAME              (+2,1,{col_empl_name})
     print &C.NATIONAL_ID       (0,+2,{col_national_id})
     print &D.GVT_OCC_SERIES    (0,+4,8)
     print $Base_pay            (0,+{col_sep},13)
     print #REQ_PD              (0,+5,{col_hrs_taken}) edit 9999.9
     print #REQ_NON_PD          (0,+6,{col_hrs_taken}) edit 9999.9
     print #REQ_TOTAL           (0,+8,{col_hrs_taken}) edit 9999.9
     print $FMLA-YEAR-START     (0,+4,{col_begin_dt})
     print $FMLA-YEAR-END       (0,+3,{col_end_dt})
     print #FMLA_PD             (0,+4,{col_hrs_taken}) edit 9999.9
     print #FMLA_NON_PD         (0,+6,{col_hrs_taken}) edit 9999.9
     print #FMLA_TOTAL          (0,+8,{col_hrs_taken}) edit 9999.9

     LET #AGENCY_PD_TOTAL = #AGENCY_PD_TOTAL + #REQ_PD
     LET #AGENCY_NONPD_TOTAL = #AGENCY_NONPD_TOTAL + #REQ_NON_PD
     LET #AGENCY_TOTAL = #AGENCY_TOTAL + #REQ_TOTAL

     LET #FMLA_AGENCY_PD_TOTAL = #FMLA_AGENCY_PD_TOTAL + #FMLA_PD
     LET #FMLA_AGENCY_NONPD_TOTAL = #FMLA_AGENCY_NONPD_TOTAL + #FMLA_NON_PD
     LET #FMLA_AGENCY_TOTAL = #FMLA_AGENCY_TOTAL + #FMLA_TOTAL

end-procedure
!***********************************************************************
!  Company Name Procedure:  Using Company Id to get Comapny Name       *
!***********************************************************************
begin-procedure Company-Name

Begin-Select
D.DESCR
  print 'Agency: '          (4,1)
  print $Company            (0,13)
  print &D.DESCR            (0,17)

FROM PS_COMPANY_TBL D
WHERE D.COMPANY   = $Company
  AND D.EFFDT =
       (SELECT MAX(EFFDT)
        FROM   PS_COMPANY_TBL
        WHERE  COMPANY  = D.COMPANY)
end-SELECT

end-procedure
!***********************************************************************
!  Agency Total Procedure:  Write accumulated total for each agency    *
!***********************************************************************
begin-procedure Agency_Totals

   move $PREV_COMP to $Company
   print 'Agency: '                (+3,1)
   print $PREV_COMP                (0,13)
   print 'Total'                   (0,18)
   print #AGENCY_PD_TOTAL          (0,+42,) edit 9,999,999.9
   print #AGENCY_NONPD_TOTAL       (0,+1,) edit 9,999,999.9
   print #AGENCY_TOTAL             (0,+2,) edit 99,999,999.9
   print #FMLA_AGENCY_PD_TOTAL     (0,+26,) edit 9,999,999.9
   print #FMLA_AGENCY_NONPD_TOTAL  (0,+1,) edit 9,999,999.9
   print #FMLA_AGENCY_TOTAL        (0,+2,) edit 99,999,999.9

   LET #AGENCY_PD_TOTAL = 0
   LET #AGENCY_NONPD_TOTAL = 0
   LET #AGENCY_TOTAL = 0
   LET #FMLA_AGENCY_PD_TOTAL = 0
   LET #FMLA_AGENCY_NONPD_TOTAL = 0
   LET #FMLA_AGENCY_TOTAL = 0

end-procedure
!***********************************************************************
!  Create New Page Procedure: Create new page for each company (agency)*
!***********************************************************************
begin-procedure Create_new_page

  if $first_page = 'Y'
     move &A.COMPANY to $Company
     let $first_page = 'N'
  else
     New-Page
  end-if

end-procedure
!***********************************************************************
!  The following are include sqc files                                 *
!***********************************************************************
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#include 'fgfmla.sqc'    !Select Run Contrl Parameters
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'datemath.sqc'  !Do date manipulation
!*---------------------------------------------------------------------*
