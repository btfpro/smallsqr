!***********************************************************************
!  BEN003CN:  Benefit Contributions Register - Canada
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                $Date:  2006/04/11:17:57:15                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'  !Set environment

begin-Setup
  #Include 'ptpsl177.sqc'
end-setup

begin-program
  #Include 'ldplntyp.sqc'  !Load-Lookup Table with Plan Types
  do Init-Report

  display 'Report Begin at: ' noline
  do display-time

  do Process-Main

  display 'Report Ended at: ' noline
  do display-time
  do print-report-end

  do StdAPI-Term
end-program

begin-procedure Init-Report
  do Init_Printer
  do Init-DateTime
  do Init-Number
  do StdAPI-Init
  move 'BEN003CN' to $ReportID
  do Get-Report-Language   ! Procedure that decides the report language
                           ! and then calls 'Report-Translation' procedure
                           ! that reads the language dep. text.
  move $Ben003cn_Ben_Cntr_Reg   to $ReportTitle



  do Get-Current-DateTime


  if $prcs_process_instance = ''
    do Ask-Values

  else
    do Get-Values

  end-if

  do Initialization

  display $ReportTitle
end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from BEN003CN  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)
   do Append_Report_Translation('BEN1')

   do Get_Field_Information ('BEN003CN', 'BEN_CNTR_REG'  , $Ben003cn_Ben_Cntr_Reg  , #dummy_width)
   do Get_Field_Information ('BEN003CN', 'CO_TOT'  ,       $Ben003cn_Co_Tot  ,       #dummy_width)
   do Get_Field_Information ('BEN003CN', 'BEN_PR_TOT'  ,   $Ben003cn_Ben_Pr_Tot  ,   #dummy_width)
   do Get_Field_Information ('BEN003CN', 'PL_TYP_TOT'  ,   $Ben003cn_Pl_Typ_Tot  ,   #dummy_width)
   do Get_Field_Information ('BEN003CN', 'BEN_PL_TOT'  ,   $Ben003cn_Ben_Pl_Tot ,    #dummy_width)
   do Get_Field_Information ('BEN003CN', 'BEN_PR'  ,       $Ben003cn_Ben_Pr  ,       #dummy_width)
   do Get_Field_Information ('BEN003CN', 'CURR'  ,         $Ben003cn_Curr  ,         #dummy_width)
   do Get_Field_Information ('BEN003CN', 'PL_TYP'  ,       $Ben003cn_Pl_Typ  ,       #dummy_width)
   do Get_Field_Information ('BEN003CN', 'BEN_PL'  ,       $Ben003cn_Ben_Pl ,        #dummy_width)
   do Get_Field_Information ('BEN003CN', 'EMPL'  ,         $Ben003cn_Empl  ,         #dummy_width)
   do Get_Field_Information ('BEN003CN', 'EMPL_DED'  ,     $Ben003cn_Empl_Ded  ,     #dummy_width)
   do Get_Field_Information ('BEN003CN', 'CO_CONTR'  ,     $Ben003cn_Co_Contr  ,     #dummy_width)
   do Get_Field_Information ('BEN003CN', 'NAME_ID_EE'  ,   $Ben003cn_Name_ID_Ee  ,   #dummy_width)
   do Get_Field_Information ('BEN003CN', 'COL_HDR1'  ,     $Ben003cn_Col_Hdr1  ,     #dummy_width)
   do Get_Field_Information ('BEN003CN', 'COL_HDR2'  ,     $Ben003cn_Col_Hdr2  ,     #dummy_width)
   do Get_Field_Information ('BEN003CN', 'GR_TOT'  ,       $Ben003cn_Gr_Tot  ,       #dummy_width)

   do Get_Field_Information ('BEN1',     'BEN' ,           $BEN1-BEN ,               #dummy_width)
   do Get_Field_Information ('BEN1',     'END_OF_REPORT',  $BEN1-END-OF-REPORT ,     #dummy_width)

end-procedure

begin-procedure Initialization
  do Get-Date-Codes
  create-array name=Totals size=7 -
    field=TotalName:char field=total:number:4 field=startCol:number:4

  put $Ben003cn_Gr_Tot       into Totals(1) TotalName
  put $Ben003cn_Co_Tot       into Totals(2) TotalName
  put $Ben003cn_Ben_Pr_Tot   into Totals(3) TotalName
  put $Ben003cn_Pl_Typ_Tot   into Totals(4) TotalName
  put $Ben003cn_Ben_Pl_Tot   into Totals(5) TotalName
  put  87 107 128 148 into Totals(0) -
    startCol(0) startCol(1) startCol(2) startCol(3)
end-procedure

!***************************************************************************
!Get-Values: Retrieves report parameters
!***************************************************************************
begin-procedure Get-Values
  do Select-Parameters
  do Get-RptPrd-BN003CN

  if $RptPeriod = 'M'
    move '=' to $Operator
  else
    move '<=' to $Operator
  end-if

  do Get-As-Of-Date
end-procedure

begin-procedure Ask-Values
  do Get-Reporting-Period
  if $RptPeriod = 'M'
    move '=' to $Operator
  else
    move '<=' to $Operator
  end-if

  do Ask-As-Of-Date
end-procedure

begin-heading 11
#Include 'stdhtr09.sqc'

  do Get-Benefit-Program-Name

  print $Ben003cn_Ben_Pr           (+1,1)
  print $BenefitProgramName   (0,13)
  if #MultiCurr
    print $Ben003cn_Curr           (0,45)
    print $BenefitProgramCurr (0,+1)
  end-if

#ifdef MICROSOFT
  move $PlanID to $PlanID xxxx
#endif
#ifdef DB2ALL
  if Not (#UNICODE_ENABLED)
    move $PlanID to $PlanID xxxx
  end-if
#endif
  LookUp Plan-Types $PlanID $PlanType
  print $Ben003cn_Pl_Typ           (+1,1)
  print $PlanType                  (0,13)
  print $Ben003cn_Ben_Pl           (+1,1)
  print $Benefit_Plan              (0,13)
  print $BEN1-BEN                  (+2,38)
  print $Ben003cn_Empl             (0,55)
  print $Ben003cn_Empl_Ded         (0,87)
  print $Ben003cn_Co_Contr         (0,128)
  print $Ben003cn_Name_ID_Ee       (+1,1)
  print $Ben003cn_Col_Hdr1         (0,55)
  print $Ben003cn_Col_Hdr2         (0,94)
  print $Ben003cn_Col_Hdr2                          (0,135)

end-heading

begin-procedure Process-Main
  move $AsOfYYYY to #AsOfYYYY
  move $AsOfQtr  to #AsOfQtr
  move $AsOfMonth to #AsOfMonth
  do Get-Calendar-Year-Id
begin-SELECT DISTINCT
J.COMPANY         ()     on-break print=never level=1 procedure=Company-Change
B.BENEFIT_PROGRAM ()     on-break print=never level=2 procedure=BenProgram-Change
A.PLAN_TYPE       ()     on-break print=never level=3 procedure=PlanType-Change
A.BENEFIT_PLAN    ()     on-break print=never level=4 procedure=BenPlan-change
P.EMPLID          (0,42) on-break skiplines=1 level=5 procedure=Employee-Change
E.BENEFIT_RCD_NBR ()     on-break print=never level=5 procedure=Employee-Change
  move &E.BENEFIT_RCD_NBR TO #Benefit-Rcd-Nbr
  do Format-Number(#Benefit-Rcd-Nbr, $out, '999')
  print $out (0,38,3)
P1.NAME            (0,1,35)
J.EMPL_STATUS     (0,55)
J.BUSINESS_UNIT
J.DEPTID          (0,63)
  if rtrim(&J.DeptID,' ') <> $DeptID
      or &J.BUSINESS_UNIT <> $BU
    let $BU = &J.BUSINESS_UNIT
    let $DeptID = rtrim(&J.DeptID,' ')
    do Get-Department-Name
  end-if
  print $DeptNameAbbrv        (0,75)
A.DED_CLASS,A.DED_SLSTX_CLASS,A.DED_MTD,A.DED_QTD,A.DED_YTD

  move &J.Company         to $Company  !for use in Standard Heading
  move &B.Benefit_Program to $BenProgram
  move &A.Plan_Type       to $PlanID
  move &A.Benefit_Plan    to $Benefit_Plan

  if $RptPeriod = 'M'
    move &A.Ded_MTD to #Amount
  else
    move &A.Ded_QTD to #Amount
  end-if
  if &A.Ded_Class <= 'K'  !Employee Deduction
    ARRAY-ADD #Amount &A.Ded_YTD to TOTALS(6) TOTAL(0) TOTAL(1)
  else                    !Company Contribution
    ARRAY-ADD #Amount &A.Ded_YTD to TOTALS(6) TOTAL(2) TOTAL(3)
  end-if

P1.NAME_PSFORMAT

FROM  PS_PERSON P,
      PS_PERSON_NAME P1,
      PS_PER_ORG_ASGN E,
      PS_JOB J,
      PS_PRIMARY_JOBS PJ,
      PS_CAN_DED_BALANCE A,
      PS_BEN_PROG_PARTIC B
WHERE J.BENEFIT_SYSTEM <> 'OT'
  AND E.EMPLID     = P.EMPLID
  AND P1.EMPLID     = P.EMPLID
  AND PJ.EMPLID    = E.EMPLID
  AND PJ.EMPL_RCD  = E.EMPL_RCD
  AND PJ.PRIMARY_JOB_IND = 'Y'
  AND PJ.PRIMARY_JOB_APP = 'BN'
  AND PJ.EFFDT = (SELECT MAX (PJ1.EFFDT)
                    FROM PS_PRIMARY_JOBS PJ1
                   WHERE PJ1.EMPLID = PJ.EMPLID
                     AND PJ1.PRIMARY_JOB_APP = 'BN'
                     AND PJ1.EMPL_RCD = PJ.EMPL_RCD
                     AND PJ1.EFFDT <= $AsOfDate)
  AND J.EMPLID     = E.EMPLID
  AND J.EMPL_RCD  = E.EMPL_RCD
  AND J.EFFDT =
      (SELECT MAX(J1.EFFDT)
       FROM   PS_JOB J1
       WHERE J1.EMPLID    = J.EMPLID
         AND J1.EMPL_RCD = J.EMPL_RCD
         AND J1.EFFDT    <= $AsOfDate)
  AND J.EFFSEQ =
      (SELECT MAX(J2.EFFSEQ)
       FROM   PS_JOB J2
       WHERE J2.EMPLID    = J.EMPLID
         AND J2.EMPL_RCD = J.EMPL_RCD
         AND J2.EFFDT     = J.EFFDT)
  AND A.COMPANY       = J.COMPANY
  AND A.EMPLID        = E.EMPLID
  AND A.PLAN_TYPE         <> '00'  !General Deduction
  AND A.DED_QTD   <> 0
  AND A.BALANCE_ID = $Calendar_Year_Id
  AND A.BALANCE_YEAR = #AsOfYYYY
  AND A.BENEFIT_RCD_NBR = E.BENEFIT_RCD_NBR
  AND A.BALANCE_PERIOD =
      (SELECT MAX(BALANCE_PERIOD)
       FROM   PS_CAN_DED_BALANCE A1
       WHERE  A1.COMPANY         = A.COMPANY
         AND  A1.EMPLID          = A.EMPLID
         AND  A1.PLAN_TYPE       = A.PLAN_TYPE
         AND  A1.DEDCD           = A.DEDCD
         AND  A1.DED_CLASS       = A.DED_CLASS
         AND  A1.DED_SLSTX_CLASS = A.DED_SLSTX_CLASS
         AND  A1.BALANCE_ID      = A.BALANCE_ID
         AND  A1.BALANCE_YEAR    = A.BALANCE_YEAR
         AND  A1.BENEFIT_RCD_NBR = A.BENEFIT_RCD_NBR
         AND  A1.BALANCE_QTR     = #AsOfQtr
         #ifdef MVS
           AND  A1.BALANCE_PERIOD      \$Operator\ #AsOfMonth)
         #else
           AND  A1.BALANCE_PERIOD      [$Operator] #AsOfMonth)
         #endif
  AND B.EMPLID = P.EMPLID
  AND B.EMPL_RCD = E.BENEFIT_RCD_NBR
  AND B.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_BEN_PROG_PARTIC
       WHERE EMPLID = E.EMPLID
         AND EMPL_RCD = E.BENEFIT_RCD_NBR
         AND EFFDT <= $AsOfDate)
ORDER BY J.COMPANY ASC,B.BENEFIT_PROGRAM ASC,A.PLAN_TYPE ASC,A.BENEFIT_PLAN ASC,
         P1.NAME_PSFORMAT ASC,P.EMPLID ASC,E.BENEFIT_RCD_NBR ASC
end-SELECT
  move 1 to #changeLevel
  move 'Y' to $End
  if RTRIM($Company, ' ') <> '' !implies some data selected
    do Print-Totals
  end-if
end-procedure

begin-procedure Company-Change
  move 2 to #changeLevel
  do Print-Totals
  new-page
end-procedure

begin-procedure BenProgram-Change
  move 3 to #changeLevel
  do Print-Totals
  new-page
end-procedure

begin-procedure PlanType-Change
  move 4 to #changeLevel
  do Print-Totals
  new-page
end-procedure

begin-procedure BenPlan-Change
  move 5 to #changeLevel
  do Print-Totals
  new-page
end-procedure

begin-procedure Employee-Change
  move 6 to #changeLevel
  do Print-Totals
end-procedure

begin-procedure Print-Totals
  move 6 to #totalRow
  while #totalRow >= #changeLevel
    move #totalRow to #rollRow
    subtract 1 from #rollRow
    if #totalRow < 6  !if not the Employee's totals
      get $TotalName from Totals(#totalRow) TotalName
      print $TotalName (+2,70)
    end-if
    move 0 to #i
    while #i <= 3
      get #total from Totals(#totalRow) total(#i)
      get #startCol from Totals(0) startCol(#i)
      do Format-Number(#total, $out, '999,999,999,999.99mi')
      print $out (0,#startCol)
      array-add #total to Totals(#rollRow) total(#i)
      put 0 into Totals(#totalRow) total(#i)
      add 1 to #i
    end-while
    subtract 1 from #totalRow
  end-while
  if $End = 'Y'
    do Reset
  end-if
end-procedure

!***********************************************************************
!Get-Rpt-Prd-BN003CN: Gets the reporting period for a report           *
!***********************************************************************
begin-procedure Get-RptPrd-BN003CN

  do Get-Bngetvtr-Strings

  let $RptPeriod =  RTRIM(&RUN_CNTL_BEN.reporting_period, ' ')

  if $RptPeriod = 'Q'

     move $Bngetvtr_Quarterly  to $ReportTitlePeriod
  else
     if $RptPeriod = 'M'
        move $Bngetvtr_Monthly   to $ReportTitlePeriod
     end-if
  end-if

  let  $ReportTitlePeriod =$ReportTitlePeriod || ' '
  concat $ReportTitle with $ReportTitlePeriod
  move $ReportTitlePeriod to $ReportTitle
end-procedure

!***********************************************************************
!Get-Bngetvtr-Strings  : Gets the translated strings                    *
!***********************************************************************

begin-procedure Get-Bngetvtr-Strings
  if $Bngetvtr_appended = ''
     do Append_Report_Translation     ('BNGETVTR' )
     do Get_Field_Information ('BNGETVTR' , 'QUARTERLY'  ,   $Bngetvtr_Quarterly , #dummy_width)
     do Get_Field_Information ('BNGETVTR'  , 'MONTHLY'  ,    $Bngetvtr_Monthly  ,  #dummy_width)

     let $Bngetvtr_appended = 'Y'
  end-if
end-procedure

!*************************************
Begin-Procedure Display-Time
!*************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!*******************************
Begin-Procedure Print-Report-End
!*******************************
 move '*** ' to $REPORT-END
 concat $BEN1-END-OF-REPORT with $REPORT-END
 concat ' ***' with $REPORT-END
 print $REPORT-END (+3,1)  CENTER
End-Procedure

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgmnm.sqc'  !Get-Benefit-Program-Name procedure
#Include 'getdatcd.sqc'  !Get-Date-Codes procedure
#Include 'getrpttr.sqc'  !Get-Reporting-Period procedure
#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'askaod.sqc'    !Ask-As-Of-Date procedure
#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines

#Include 'getrplng.sqc'  !Get the report language
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'useprntr.sqc'  !Select printer type
