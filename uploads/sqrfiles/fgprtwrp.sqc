!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:12:12:53                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
begin-procedure PrintWrap
let #TextLen = length($PrnText)
let #MaxLineChars = #MaxWrapWidth - #PrnStartCol
let $cr = chr(13)
let $lf = chr(10)
move 0 to #CurrLine
move 1 to #ActChar
while #CurrLine < #MaxPrnLines
  move 0 to #CurrChar
  move 0 to #SkipAhead
  while #CurrChar < #MaxLineChars
    let $AscChr = substr($PrnText,#ActChar + #CurrChar,1)
    if (#ActChar + #CurrChar + 1) <= #TextLen
       let $AscChrLA = substr($PrnText,#ActChar + #CurrChar + 1,1)
    else
       break
    end-if

    if $AscChr = $cr or $AscChr = $lf
       subtract 1 from #CurrChar
       add 1 to #SkipAhead
       if $AscChrLA = $cr or $AscChrLA = $lf
          add 1 to #SkipAhead
       end-if
       break
    end-if

    if #CurrChar + 1 = #MaxLineChars and $AscChrLA <> ' ' and (#ActChar + #CurrChar ) <> #TextLen
       move 0 to #MoveBack
       while #MoveBack < #MaxLineChars and $AscChr <> ' '
          add 1 to #MoveBack
          let $AscChr = substr($PrnText,#ActChar + #CurrChar - #MoveBack,1)
       end-while
       if #MoveBack + 1 <> #MaxLineChars
          subtract #MoveBack from #CurrChar
       end-if
       break
    end-if
    add 1 to #CurrChar
  end-while

  add 1 to #CurrChar
  let $LineText = substr($PrnText, #ActChar, #CurrChar)
  if  $PrintBold = 'Y'
      print $LineText       (#PrnStartRow, #PrnStartCol) BOLD
  else
      print $LineText       (#PrnStartRow, #PrnStartCol)
  end-if
  add 1 to #CurrLine
  add #CurrChar to #ActChar
  add #SkipAhead to #ActChar
  add #MoveLinesDown to #PrnStartRow
end-while
end-procedure
