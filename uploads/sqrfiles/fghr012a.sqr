!***********************************************************************
!  FGHR012A:  Distribution of EEO Groups and Comparison by PATCOB      *
!             by POI                                                   *
!             (Replaces PER017 - EEO-1 Job Analysis for Federal Gvt)   *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      
!          $Date:  2006/07/19:11:52:07                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#Include 'setup31.sqc'  !printer and page-size initialization
begin-setup

 declare-variable
    date $AsOfDate

 end-declare

end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-heading 8
  #Include 'stdhtr03.sqc'

  print $AGENCY1         (+1,1)
  print $Company         (0,10)
  print $POI2            (+1,1)
  print $POI             (0,10)
  print $POI1            (+2,26)
  print $WHITE           (0,44)
  print $BLACK           (0,60)
  print $HISPANIC        (0,76)
  print $ASIAN           (0,92)
  print $INDIAN          (0,108)
  print $OCCUPCAT        (+1,1)
  print $TOTAL           (0,25)
  print $MALE            (0,44)
  print $FEMALE          (0,50)
  print $MALE            (0,60)
  print $FEMALE          (0,66)
  print $MALE            (0,76)
  print $FEMALE          (0,82)
  print $MALE            (0,92)
  print $FEMALE          (0,98)
  print $MALE            (0,108)
  print $FEMALE          (0,114)


end-heading

begin-procedure Init-Report
  do Stdapi-Init

  let $ReportID =  'FGHR012A'
  do Get-Report-Language
  let $ReportTitle = $FGHR012A-REPORTTITLE
  display $ReportTitle

  if $prcs_process_instance = ''
    do Ask-EEO-Parameters
  else
    do Select-Parameters
  end-if
  Show 'Report: ' $ReportID
  Show 'OPRID: '  $prcs_oprid
  Show 'Run ID: ' $Prcs_Run_Cntl_ID
  Show 'Company: ' &RUN_CNTL_FG.COMPANY
  show 'asofdate: ' &RUN_CNTL_FG.ASOFDATE

  Let $Agency = &RUN_CNTL_FG.COMPANY
  Let $Asofdate = &RUN_CNTL_FG.ASOFDATE
  
  do Init-Array

end-procedure

!**********************************
Begin-Procedure Report-Translation
!**********************************
! Read from EEOGRP program ids
  do Init_Report_Translation($ReportID, $Language_Cd)
  do Append_Report_Translation ('EEOGRP')

  do Get_Field_Information ('FGHR012A','REPORT_TITLE',   $FGHR012A-REPORTTITLE, #CW)
  do Get_Field_Information ('EEOGRP',  'AGENCY',         $AGENCY1,              #CW)
  do Get_Field_Information ('EEOGRP',  'POI2',           $POI2,                 #CW)
  do Get_Field_Information ('EEOGRP',  'POI1',           $POI1,                 #CW)
  do Get_Field_Information ('EEOGRP',  'WHITE',          $WHITE,                #CW)
  do Get_Field_Information ('EEOGRP',  'BLACK',          $BLACK,                #CW)
  do Get_Field_Information ('EEOGRP',  'HISPANIC',       $HISPANIC,             #CW)
  do Get_Field_Information ('EEOGRP',  'ASIAN',          $ASIAN,                #CW)
  do Get_Field_Information ('EEOGRP',  'INDIAN',         $INDIAN,               #CW)
  do Get_Field_Information ('EEOGRP',  'OCCUPCAT',       $OCCUPCAT,             #CW)
  do Get_Field_Information ('EEOGRP',  'TOTAL',          $TOTAL,                #CW)
  do Get_Field_Information ('EEOGRP',  'MALE',           $MALE,                 #CW)
  do Get_Field_Information ('EEOGRP',  'FEMALE',         $FEMALE,               #CW)

  do Get_Field_Information ('EEOGRP',  'PROFESSIONAL',   $PROFESSIONAL,         #CW)
  do Get_Field_Information ('EEOGRP',  'ADMIN',          $ADMIN,                #CW)
  do Get_Field_Information ('EEOGRP',  'TECHNICAL',      $TECHNICAL,            #CW)
  do Get_Field_Information ('EEOGRP',  'CLERICAL',       $CLERICAL,             #CW)
  do Get_Field_Information ('EEOGRP',  'OTHER',          $OTHER',               #CW)
  do Get_Field_Information ('EEOGRP',  'BLUECOL',        $BLUECOL,              #CW)
  do Get_Field_Information ('EEOGRP',  'MIXEDCOL',       $MIXEDCOL,             #CW)

End-Procedure

begin-procedure Get-Values
  do Get-EEO-Parameters
end-procedure

begin-procedure Init-Array
  create-array name=EEOarray  size=9 field=count:number:40 field=label:char
  create-array name=EEOtotals size=9 field=count:number:40
  put $PROFESSIONAL          into EEOarray(1)  label
  put $ADMIN                 into EEOarray(2)  label
  put $TECHNICAL             into EEOarray(3)  label
  put $CLERICAL              into EEOarray(4)  label
  put 'Other'                into EEOarray(5)  label              
  put $BLUECOL               into EEOarray(6)  label
  put 'Mixed Collar'         into EEOarray(7)  label
  put '   TOTAL'             into EEOarray(8) label

  move 8 to #TotRow    !Row # of TOTAL above
  move 23 to #startCol  !starting position of first column total
  move  8 to #len       !length of total (in print positions)
end-procedure

begin-procedure Process-Main
begin-SELECT
E.GVT_POI () on-break print=never procedure=Print-Report
E.DESCR
D.COMPANY
D.DESCR
JC.GVT_PATCOB_CD
A.SEX
A.ETHNIC_GROUP
COUNT(*)

  move &A.Sex          to $Sex
  move &A.Ethnic_Group to $EthnicGroup
  move &D.Descr        to $Company
  move &E.Descr        to $POI
  move &JC.Gvt_Patcob_Cd to $Gvt_Patcob_Cd

  do Increment-Array
FROM  PS_GVT_PERS_DATA A,
      PS_EMPLOYMENT B,
      PS_JOB J,
      PS_JOBCODE_TBL JC,
      PS_COMPANY_TBL D,
      PS_GVT_POI_TBL E,
      PS_JOB_USF F
WHERE A.PER_ORG = 'EMP'
  AND J.EMPL_STATUS IN ('A','L','S','P')
  AND A.EMPLID = J.EMPLID
  AND A.EMPL_RCD = J.EMPL_RCD
  AND A.EFFDT = J.EFFDT
  AND A.EFFSEQ = J.EFFSEQ
  AND J.EMPLID = B.EMPLID
  AND J.EMPL_RCD = B.EMPL_RCD
  AND J.EMPLID = F.EMPLID
  AND J.EMPL_RCD = F.EMPL_RCD
  AND J.EFFDT = F.EFFDT
  AND J.EFFSEQ = F.EFFSEQ
  AND J.EFFDT =
      (SELECT MAX(J1.EFFDT)
       FROM PS_JOB J1
       WHERE J1.EMPLID = J.EMPLID
         AND J1.EMPL_RCD = J.EMPL_RCD
         AND J1.EFFDT <= $AsofDate)
  AND J.EFFSEQ =
      (SELECT MAX(J2.EFFSEQ)
       FROM PS_JOB J2
       WHERE J2.EMPLID = J.EMPLID
         AND J2.EMPL_RCD = J.EMPL_RCD
         AND J2.EFFDT = J.EFFDT)
  AND JC.JOBCODE = J.JOBCODE
  AND JC.EFFDT =
      (SELECT MAX(JC1.EFFDT)
       FROM PS_JOBCODE_TBL JC1
       WHERE JC1.JOBCODE = JC.JOBCODE
         AND JC1.EFFDT <= J.EFFDT)
  AND A.ETHNIC_GROUP  <> '6'  !Not Applicable
  AND J.EEO_CLASS     <> 'E'  !Exclude from counts
  AND J.COMPANY = $Agency
  AND D.COMPANY      = J.COMPANY
  AND D.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_COMPANY_TBL
       WHERE  COMPANY = D.COMPANY
         AND  EFFDT   <= $AsofDate)
  AND E.GVT_POI = F.GVT_POI
  AND E.COMPANY = J.COMPANY
  AND E.EFFDT =
      (SELECT MAX(EFFDT)
       FROM PS_GVT_POI_TBL
       WHERE GVT_POI = E.GVT_POI
         AND COMPANY = E.COMPANY
         AND EFFDT   <= $AsofDate)
GROUP BY E.GVT_POI,E.DESCR,D.COMPANY,D.DESCR,JC.GVT_PATCOB_CD,A.SEX,A.ETHNIC_GROUP
ORDER BY E.GVT_POI
end-SELECT

do Print-Report  !Print last location's report

! Printing Company Summary
move 'Agency Summary' to $POI
move 1 to #EEOrow    !Load the "print" array with the Company totals
while #EEOrow <= #TotRow
  move 0 to #EEOcol
  while #EEOcol <= 11
    get #count1 from EEOtotals(#EEOrow) count(#EEOcol)
    put #count1 into EEOarray(#EEOrow)  count(#EEOcol)
    add 1 to #EEOcol
  end-while
  add 1 to #EEOrow
end-while
do Print-Report  !Print Company Summary Statistics
end-procedure

begin-procedure Print-Report
  move 3 to #line
  move 1 to #EEOrow
  while #EEOrow <= #TotRow
    get $EEOcatName from EEOarray(#EEOrow) label
    print $EEOcatName   (#line,1)
    print '%'             (+1,6)
!    print '% of Row'     (+1,3)
!    print '% of Column' (+1,3)

    move #startCol to #col  !this is 23
    get #rowTotal from EEOarray(#EEOrow) count(0)
    move 0 to #EEOcol
    while #EEOcol <= 11
!total row counts
      get #count1 from EEOarray(#EEOrow) count(#EEOcol)
      array-add #count1 to EEOtotals(#EEOrow) count(#EEOcol)
      do Format-Number(#count1, $out, 'B999,999')
      print $out (#line,#col)

      multiply 100 times #count1

      move #count1 to #count2
!row percentage
      divide #rowTotal into #count1 on-error=zero
      do Format-Number(#count1, $out, 'B9999.99')
      print $out (+1,#col)

!column percentage
!      get #colTotal from EEOarray(#TotRow) count(#EEOcol)
!      divide #colTotal into #count2 on-error=zero
!      do Format-Number(#count2, $out, 'B9999.99')
!     print $out (+1,#col)

      put 0 into EEOarray(#EEOrow) count(#EEOcol)
      add #len to #col   !add 8 to col
!      if #EEOcol <= 1 or #EEOcol = 6
      if #EEOcol < 1
        add 2 to #col
      end-if
      add 1 to #EEOcol
    end-while
!    add 4 to #line
    add 3 to #line
    add 1 to #EEOrow
  end-while

  Let #EEOrow = 0
  new-page
end-procedure

begin-procedure Increment-Array
  do Analyze-Sex-EthnicGroup  !returns 1 to 10 in #EEOcol
  add 1 to #EEOcol            !convert to print column
  do Analyze-PATCOB

  array-add &COUNT(*) &COUNT(*) to EEOarray(#EEOrow) count(#EEOcol) count (0)
  array-add &COUNT(*) &COUNT(*) to EEOarray(#TotRow) count(#EEOcol) count (0)

!  Coding to produce Minority Grouping statistics
!  if $EthnicGroup > '1'  !if a Minority group
!  if $EthnicGroup <> 'E' !if a Minority group
!    array-add &COUNT(*) to EEOarray(#EEOrow) count(1)
!    array-add &COUNT(*) to EEOarray(#TotRow) count(1)
!  end-if
end-procedure

#include 'stdapi.sqc'    !Routine to Update Run Status
#include 'fgrunctl.sqc'  !Get run control parameter values
#include 'fggetval.sqc'  !Get values mask routines
#include 'fgaskeeo.sqc'  !Ask EEO parameters input

#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'fgeeogp.sqc'  !Analyze-Sex-EthnicGroup procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers

#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
