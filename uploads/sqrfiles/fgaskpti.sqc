!***********************************************************************
! FGASKPTI.SQC:  Input logic for user for Pay Table Print              *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!----------------------------------------------------------------------
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      
!          $Date:  2006/07/19:11:47:36                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

begin-procedure Ask-Pay-Table-Parms

  display ' '
  display 'Please enter Pay Plan to be processed'
  display ' '
  Input $GvtPayPlan maxlen=2 'Please enter Pay Plan' type=char
  let  $GvtPayPlan = upper(LTRIM(RTRIM($GvtPayPlan, ' '), ' '))

  display ' '
  display 'Please enter Pay Table to be processed'
  display ' '
  input $SalAdminPlan maxlen=4 type=char 'Please enter Pay Table'
  uppercase $SalAdminPlan

  Do Ask-Format

  Do Get-Effective-Date

end-procedure

begin-procedure Ask-Format

  Input $gvtannualrpt maxlen=1 'Print Annual Format - Y/N' type=char
  let $gvtannualrpt =   upper($gvtannualrpt)
  if $gvtannualrpt <> 'Y'
    move 'N' to $gvtannualrpt
  end-if

  Input $gvthourlyrpt maxlen=1 'Print Hourly Format - Y/N' type=char
  let $gvthourlyrpt = upper($gvthourlyrpt)
  if $gvthourlyrpt <> 'Y'
    move 'N' to $gvthourlyrpt
  end-if

  Input $gvtbiweeklyrpt maxlen=1 'Print Biweekly Format - Y/N' type=char
  let $gvtbiweeklyrpt =   upper($gvtbiweeklyrpt)
  if $gvtbiweeklyrpt <> 'Y'
    move 'N' to $gvtbiweeklyrpt
  end-if

  Input $gvtmonthlyrpt maxlen=1 'Print Monthly Format - Y/N' type=char
  let $gvtmonthlyrpt =   upper($gvtmonthlyrpt)
  if $gvtmonthlyrpt <> 'Y'
    move 'N' to $gvtmonthlyrpt
  end-if

end-procedure

begin-procedure Get-Effective-Date

  while $DateOK <> 'Y'
     do Get-E-Date
  end-while

end-procedure

begin-procedure Get-E-Date

  move 'Y' to $DateOK

  display ''
  input $EffDt 'Please Enter Effective Date ({Prompt-Date})' type=char

  if $EffDt <> ''
     move {PDelimiter} to $DDelimiter
     do Format-Datetime($EffDt, $EffDt, {Prompt-Mask},'','native')
     do Validate-Native-Date($EffDt,$DateOK)
  else
    move 'N' to $DateOK
  end-if

end-procedure

#include 'validdt.sqc'
