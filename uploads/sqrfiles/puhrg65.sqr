!***********************************************************************
! PUHRG65: Audit of Merit Scale collisions with Rating Models
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/24:16:08:19                                 !
!       $Release:  HR9                                                 !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************

#define PTDateDelim    -
#define EXPLAIN-WIDTH  115
#define EXPLAIN-LINES  5

#Include 'setenv.sqc'   !Set environment

Begin-Setup
  #Include 'ptpsp125.sqc'
End-Setup

!***********************************************************************
Begin-Program
!***********************************************************************

  do Init-Report

  do Check-For-Use
  if (&MeritTblRvwBandsExist)
     do Check-For-Collisions
  else
     print ''                (+1,1)
     print ''                (+1,1)
     print $PUHRG65-NOUSE   (+1,1)
  end-if

  do StdAPI-Term

End-Program

!***********************************************************************
Begin-Procedure Init-Report
!***********************************************************************

  do Init-DateTime
  do Get-Current-DateTime
  do StdAPI-Init

  let  $ReportID = 'PUHRG65'
  do Get-Report-Language

  let $ReportTitle  = $PUHRG65-TITLE
  display  'Report ID: ' noline
  display  $ReportTitle

End-Procedure

!***********************************************************************
Begin-Procedure Report-Translation
!***********************************************************************

  do Init_Report_Translation($ReportID, $Language_Cd)

  do Get_Field_Information ('PUHRG65','TITLE',       $PUHRG65-TITLE ,  #COL-TITLE)   !75
  do Get_Field_Information ('PUHRG65','MERIT_SCALE', $PUHRG65-SCALE ,  #COL-SCALE)   !12
  do Get_Field_Information ('PUHRG65','RATING_MODEL',$PUHRG65-MODEL ,  #COL-MODEL)   !12
  do Get_Field_Information ('PUHRG65','EFFDT',       $PUHRG65-EFFDT ,  #COL-EFFDT)   !12
  do Get_Field_Information ('PUHRG65','DESCR',       $PUHRG65-DESCR ,  #COL-DESCR)   !30
  do Get_Field_Information ('PUHRG65','NOFIND',      $PUHRG65-NOFIND,  #COL-NOFIND)  !100
  do Get_Field_Information ('PUHRG65','NOUSE',       $PUHRG65-NOUSE,   #COL-NOUSE)   !100
  do Get_Field_Information ('PUHRG65','DELETE',      $PUHRG65-DELETE,  #COL-DELETE)  !56
  do Get_Field_Information ('PUHRG65','EXPLAIN1',    $PUHRG65-EXPLAIN1,#COL-EXPLAIN) !100
  do Get_Field_Information ('PUHRG65','EXPLAIN2',    $PUHRG65-EXPLAIN2,#COL-EXPLAIN) !100
  do Get_Field_Information ('PUHRG65','EXPLAIN3',    $PUHRG65-EXPLAIN3,#COL-EXPLAIN) !100
  do Get_Field_Information ('PUHRG65','EXPLAIN4',    $PUHRG65-EXPLAIN4,#COL-EXPLAIN) !100
  do Get_Field_Information ('PUHRG65','EXPLAIN5',    $PUHRG65-EXPLAIN5,#COL-EXPLAIN) !100
  do Get_Field_Information ('PUHRG65','EXPLAIN6',    $PUHRG65-EXPLAIN6,#COL-EXPLAIN) !100

  !----- This section is for testing purposes -----
  ! let $PUHRG65-TITLE    = 'Audit of Merit Scale collisions with Rating Models'
  ! let $PUHRG65-SCALE    = 'Merit Scale'
  ! let $PUHRG65-MODEL    = 'Rating Model'
  ! let $PUHRG65-EFFDT    = 'Eff-Date'
  ! let $PUHRG65-DESCR    = 'Description'
  ! let $PUHRG65-NOFIND   = '(No collisions found - All Merit Scales for Review Bands should be upgradeable.)'
  ! let $PUHRG65-NOUSE    = '(The Merit Scale Table is not in use for Review Bands - no upgrade required.)'
  ! let $PUHRG65-DELETE   = '(No review ratings - Delete Model before upgrade.)'
  ! let $PUHRG65-EXPLAIN1 = 'For New Release the Review Band series defined in the Merit Scale Table are being consolidated '
  ! let $PUHRG65-EXPLAIN2 = 'into the Rating Model structure.  To do this, we create new Rating Models for each existing '
  ! let $PUHRG65-EXPLAIN3 = 'Merit Scale which is based on a Review Band.  However, it is possible that a Rating Model already '
  ! let $PUHRG65-EXPLAIN4 = 'exists with the same Name (Key) as the Merit Scale being converted, in which case that Merit '
  ! let $PUHRG65-EXPLAIN5 = 'Scale (Review Band series) will not be upgradeable.  This report identifies any such points of '
  ! let $PUHRG65-EXPLAIN6 = 'conflict.  No action is required on your part unless specifically indicated.'
  ! let #COL-SCALE = 12
  ! let #COL-MODEL = 12
  ! let #COL-EFFDT = 12
  ! let #COL-DESCR = 30
  !----- End of testing section -----

  let $PUHRG65-EXPLAIN = $PUHRG65-EXPLAIN1 || ' ' || $PUHRG65-EXPLAIN2 ||  ' ' || $PUHRG65-EXPLAIN3
  let $PUHRG65-EXPLAIN = $PUHRG65-EXPLAIN  || ' ' || $PUHRG65-EXPLAIN4 || ' ' ||  $PUHRG65-EXPLAIN5 || ' ' ||  $PUHRG65-EXPLAIN6

End-Procedure

!***********************************************************************
Begin-Heading 12
!***********************************************************************

#Include 'stdhdgtr.sqc'

  print $PUHRG65-EXPLAIN      (+2,1) WRAP {EXPLAIN-WIDTH} {EXPLAIN-LINES}

  print $PUHRG65-SCALE        (+2,1,#COL-SCALE)
  print $PUHRG65-EFFDT        (0,+1,#COL-EFFDT)
  print $PUHRG65-DESCR        (0,+1,#COL-DESCR)

  print $PUHRG65-MODEL        (0,+3,#COL-MODEL)
  print $PUHRG65-EFFDT        (0,+1,#COL-EFFDT)
  print $PUHRG65-DESCR        (0,+1,#COL-DESCR)

  print '='      (+1,1,#COL-SCALE)   Fill
  print '='      (0,+1,#COL-EFFDT)   Fill
  print '='      (0,+1,#COL-DESCR)   Fill

  print '='      (0,+3,#COL-MODEL)   Fill
  print '='      (0,+1,#COL-EFFDT)   Fill
  print '='      (0,+1,#COL-DESCR)   Fill

End-Heading

!***********************************************************************
Begin-Procedure Check-For-Use
!***********************************************************************

Begin-SELECT
Count(*)    &MeritTblRvwBandsExist

FROM PS_MERIT_SCALE_TBL MS
WHERE EXISTS
  (SELECT 'X'
  FROM PS_MERIT_GROUP_TBL MG
  WHERE MG.MERIT_SCALE = MS.MERIT_SCALE
  AND MG.EFFDT = MS.EFFDT
  AND MG.REVIEW_BAND_CD <> ' '
  AND MG.REVIEW_BAND_CD LIKE '_')
End-SELECT
End-Procedure

!***********************************************************************
Begin-Procedure Check-For-Collisions
!***********************************************************************

  let #Collision = 0

Begin-SELECT
MS.MERIT_SCALE       (+1,1,#COL-SCALE)
MS.EFFDT
  do Format-DateTime(&MS.EFFDT, $FmtDt, {DEFYMD}, '','')
  print $FmtDt       (0,+1,#COL-EFFDT)

MS.DESCR
  move &MS.DESCR to $MS_Descr
  do Get-Merit-Scale-Lang
  print $MS_Descr    (0,+1,#COL-DESCR)

RM.RATING_MODEL      (0,+3,#COL-MODEL)
RM.EFFDT
  do Format-DateTime(&RM.EFFDT, $FmtDt, {DEFYMD}, '','')
  print $FmtDt       (0,+1,#COL-EFFDT)

RM.DESCR
  move &RM.DESCR to $RM_Descr
  do Get-Rating-Model-Lang
  print $RM_Descr    (0,+1,#COL-DESCR)

  do Check-For-Ratings

  let #Collision = 1

FROM PS_MERIT_SCALE_TBL MS,
     PS_RATING_MDL_TBL RM
WHERE EXISTS
  (SELECT 'X'
  FROM PS_MERIT_GROUP_TBL MG
  WHERE MG.MERIT_SCALE = MS.MERIT_SCALE
  AND MG.EFFDT = MS.EFFDT
  AND MG.REVIEW_BAND_CD <> ' '
  AND MG.REVIEW_BAND_CD LIKE '_')
AND RM.RATING_MODEL = MS.MERIT_SCALE
AND RM.EFFDT =
  (SELECT MAX(EFFDT)
  FROM PS_RATING_MDL_TBL
  WHERE RATING_MODEL = RM.RATING_MODEL)

ORDER BY MS.MERIT_SCALE ASC,
         MS.EFFDT DESC,
         RM.RATING_MODEL ASC,
         RM.EFFDT DESC
End-SELECT

  if Not #Collision
     print ''                (+1,1)
     print ''                (+1,1)
     print $PUHRG65-NOFIND  (+1,1)
  end-if

  do Reset

End-Procedure

!***********************************************************************
Begin-Procedure Get-Merit-Scale-Lang
!***********************************************************************

Begin-SELECT
ML.DESCR

  if Not IsBlank(&ML.DESCR)
     move &ML.DESCR to $MS_Descr
  end-if

FROM  PS_MERIT_SCALE_LNG ML
WHERE ML.MERIT_SCALE = &MS.MERIT_SCALE
AND ML.EFFDT = &MS.EFFDT
AND ML.LANGUAGE_CD = $curr_language_cd

End-SELECT
End-Procedure

!***********************************************************************
Begin-Procedure Get-Rating-Model-Lang
!***********************************************************************

Begin-SELECT
RL.DESCR

  if Not IsBlank(&RL.DESCR)
    move &RL.DESCR to $RM_Descr
  end-if

FROM  PS_RATING_MDL_LANG RL
WHERE RL.RATING_MODEL = &RM.RATING_MODEL
AND RL.EFFDT = &RM.EFFDT
AND RL.LANGUAGE_CD = $curr_language_cd

End-SELECT
End-Procedure

!***********************************************************************
Begin-Procedure Check-For-Ratings
!***********************************************************************

Begin-SELECT
Count(*)    &RatingsExist

FROM PS_REVW_RATING_TBL RR
WHERE RR.RATING_MODEL = &RM.RATING_MODEL
AND RR.EFFDT = &RM.EFFDT
End-SELECT

  if Not &RatingsExist
     let #OffSet = 1 + #COL-SCALE + 1 + #COL-EFFDT + 1 + #COL-DESCR + 3
     print $PUHRG65-DELETE   (+1,#OffSet)
  end-if

End-Procedure

!***********************************************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Format-DateTime procedures
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
!***********************************************************************

