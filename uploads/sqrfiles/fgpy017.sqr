!***********************************************************************
! FGPY017:  Health Benefits Reconciliation Report and Interface file   *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/20:03:48:47                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
!
!***********************************************************************
!  Modifications:                                                      *
!  1.  Changed alias reference in procedure Get-Values from            *
!       RUN_CTRL_HR to RUN_CNTL_FG.  Changed select FROM source table  *
!       to PS_GVT_RUN_CNTL; not RUN_CNTL_HR.                           *
!  2.  Changed display of Report Date from YY/MM/DD format to          *
!       MM/DD/YYYY format.                                             *
!  3.  Changed refences from PS_GVT_JOB to PS_JOB                      *
!  4.  Changed references from PS_GVT_PERS_DATA to PS_PERS_DATA_EFFDT  *
!  5.  Reverted to GVT tables from Core tables because Core tables no  *
!      longer provide the correct information                          *
!***********************************************************************

!***********************************************************************

#include 'setenv.sqc' !Set environment
!#Include 'SETUP31.SQC'

Begin-Setup
 #Include 'ptpsp125.sqc'
End-Setup
!

begin-program
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  do Process-Main
  do StdAPI-Term
  close 90
end-program

!********************************************
begin-procedure Init-Report
!********************************************

  move 'INTERFACE' to $ReportID

  move 'HEALTH BENEFITS ENROLLMENT RECONCILIATION REPORT' to $ReportTitle
  display $ReportTitle
  display ' '

  do StdAPI-Init

  if $prcs_process_instance = ''
    do Ask-Values
  else
    do Get-Values
  end-if
  Do GET-PAY-CALENDAR-DATA
  DO GET-PAYROLL-ADDR

  open 'C:\FED.TXT' as 90 for-writing record = 720

end-procedure

begin-heading 19

  print $ReportTitle                             ()          center

    print 'REPORT DATE:'                           (+2,1)
    let $REPORT_DATE = SUBSTR($RUN_ASOFDATE,1,2) ||'/'||SUBSTR($RUN_ASOFDATE,3,2)||'/'|| SUBSTR($RUN_ASOFDATE,5,2)
    let $YY = SUBSTR($RUN_ASOFDATE,1,2)
    do MakeYear4Digits($YY)
    let $MM = SUBSTR($RUN_ASOFDATE,3,2)
    let $DD = SUBSTR($RUN_ASOFDATE,5,2)
    let $REPORT_DATE = $MM ||'/'||$DD||'/'|| $YY
  print $REPORT_DATE                         (0,15)

  print 'PAYROLL OFFICE NUMBER:'                 (,60)
  print $GVT_AGY_LOC_CODE                        (0,+2)

  print 'PAY PERIOD ENDING DATE:'                (+1,1)
  print $pay_period_end_dt_rpt                   (0,+1)

  print 'PAYROLL PAID DATE:'                     (+2,1)
   do Format-DateTime($CHECK_DT, $out, {DEFCMP}, '', '')
   do convert-date($out, $date_out)
   let $CHECK_DT_T = $CHECK_DT
   do Format-DateTime($CHECK_DT, $out, {DEFDATE}, '', '')
   let $CHECK_DT_T = $out
  print $CHECK_DT_T                              (0,+1)

  print 'PAYROLL OFFICE NAME AND ADDRESS: '      (+2,1)
  print $GAS.GVT_DESCR70                         (0,50)

  let $AddressLn = rtrim($GVT_ADDRESS1,' ') || ', ' || rtrim ($GVT_ADDRESS2,' ')
  print $AddressLn                               (+1,50)

  let $CityState = rtrim($GVT_ADDRESS_CITY,' ') || ', ' || rtrim ($GVT_ADDRESS_STATE,' ')
  let $CityState = $CityState || ' '  || $GVT_ADDRESS_ZIP
  print $CityState                              (+1,50)

  print 'CONTACT PERSON:'                       (+2,1)
  print $CONTACT_PERSON                         (0,+1)

  print 'TELEPHONE NUMBER:'                     (+1,1)
  print $CONTACT_PHONE                          (0,+1)

  print 'PERSONAL IDENTIFICATION:'              (+3,1)
  print 'EMPLOYEE NAME'                         (,32)
  print 'FEHB ENROLLMENT'                       (,54)
  print 'LWOP'                                  (,75)
  print 'WITHHOLDING &'                         (,90)
  print 'NUMBER (PIN)'                          (+1,1)
  print '(LAST)(FIRST)(MI)'                     (,32)
  print 'CODE'                                  (,59)
  print 'CONTRIBUTIONS'                         (,90)
  print 'HC'                                    (,115)


end-heading

!********************************************
begin-procedure Ask-Values
!********************************************

    input $Agency     'Enter Agency > ' type = char
    input $asofdate   'Enter As of Date > '
    input $Healthplan 'Enter Health Plan > '
    input $checkall   'Enter Y or N'

end-procedure

!********************************************
begin-procedure Get-Values
!********************************************

BEGIN-SELECT
RUN_CNTL_FG.COMPANY
RUN_CNTL_FG.ASOFDATE
RUN_CNTL_FG.BENEFIT_PLAN
RUN_CNTL_FG.ALL_BENEFIT_PLAN

   do Format-DateTime(&RUN_CNTL_FG.ASOFDATE, $RUN_ASOFDATE, {DEFCMP}, '', '')
   LET $RUN_ASOFDATE = SUBSTR($RUN_ASOFDATE,3,2) || SUBSTR($RUN_ASOFDATE,5,2) || SUBSTR($RUN_ASOFDATE,7,2)

    MOVE &RUN_CNTL_FG.COMPANY TO $AGENCY
    MOVE &RUN_CNTL_FG.BENEFIT_PLAN TO $BENEFIT_PLAN
    MOVE &RUN_CNTL_FG.ALL_BENEFIT_PLAN TO $ALL_BENEFIT_PLAN
    MOVE &RUN_CNTL_FG.ASOFDATE TO $ASOFDATE
       Let $BENEFIT_PLAN = RTRIM($BENEFIT_PLAN,' ')
  IF $ALL_BENEFIT_PLAN = 'Y'
      move '' to $WHERE_CLAUSE
   ELSE
       LET $WHERE_CLAUSE = $WHERE_CLAUSE || ' AND '
       LET $WHERE_CLAUSE = $WHERE_CLAUSE || ' A.BENEFIT_PLAN = ''' || $BENEFIT_PLAN || ''''
   End-if
   SHOW $WHERE_CLAUSE
from PS_GVT_RUN_CNTL RUN_CNTL_FG
where RUN_CNTL_FG.OPRID = $prcs_oprid
and RUN_CNTL_FG.RUN_CNTL_ID = $prcs_run_cntl_id
END-SELECT

end-procedure


!********************************************
begin-procedure GET-PAY-CALENDAR-DATA
!********************************************

begin-select
max(I.PAY_END_DT) &PAY_END_DT
   let $PAY_END_DT = &PAY_END_DT
   do Format-DateTime(&PAY_END_DT, $out, {DEFCMP}, '', '')
   do convert-date($out, $date_out)
   let $Pay_period_end_date = $date_out
   do Format-DateTime(&PAY_END_DT, $out, {DEFDATE}, '', '')
   let $pay_period_end_dt_rpt = $out
   display 'The ending pay period date has been determined to be    =  ' noline
   display $pay_period_end_dt_rpt
from PS_PAY_CALENDAR I
where  I.PAY_CONFIRM_RUN = 'Y'
 and  I.PAY_END_DT <= $asofdate
end-select

BEGIN-SELECT
II.CHECK_DT
   MOVE &II.CHECK_DT TO $CHECK_DT
FROM PS_PAY_CALENDAR II
WHERE II.PAY_END_DT = $PAY_END_DT
END-SELECT
END-PROCEDURE

begin-procedure Convert-Date($Date_In, :$Date_Back)

  let $Work_Century = substr($Date_in, 1, 2)
  let $Work_Year    = substr($Date_In, 3, 2)
  let $Work_Month   = substr($Date_in, 5, 2)
  let $Work_Day     = substr($Date_in, 7, 2)

  let #Wrk_Century = $Work_Century
  let #Wrk_Year    = $Work_Year
  let #Wrk_Month   = $Work_Month
  let #Wrk_Day     = $Work_Day

  let $Date_Back   =  $Work_Month || $Work_Day || $Work_Year

end-procedure

!********************************************
begin-procedure Process-Main
!********************************************
LET #HDR_CNT = 0
LET #RPT_HDR_CNT = 0
LET #RPT_SUBTOTAL_DED_CUR = 0

begin-SELECT
A.BENEFIT_PLAN     () ON-BREAK LEVEL=1 PRINT=NEVER AFTER=BENEFIT-CHANGE
D.EMPLID           () ON-BREAK LEVEL=2 PRINT=NEVER AFTER=EMPLID-CHANGE
D.EMPL_RCD
A.COMPANY
C.LAST_NAME_SRCH
C.FIRST_NAME_SRCH
C.NAME
C.BIRTHDATE
D.ACTION
   do Format-DateTime(&C.BIRTHDATE, $RUN_BIRTHDATE, {DEFCMP}, '', '')
   LET $RUN_BIRTHDATE = SUBSTR($RUN_BIRTHDATE,3,2) || SUBSTR($RUN_BIRTHDATE,5,2) || SUBSTR($RUN_BIRTHDATE,7,2)
SUM(A.DED_CUR) &A.DED_CUR
D.EMPL_STATUS
  ADD 1 TO #HDR_CNT
  ADD 1 TO #RPT_HDR_CNT
  IF #HDR_CNT = 1
    Show '$PAY_END_DT : ' $PAY_END_DT
    DO WRITE-HDR-RECORD
  END-IF
  MOVE &D.ACTION TO $ACTION
  MOVE &D.EMPLID TO $EMPLID
  MOVE &D.EMPL_RCD TO #EMPL_RCD
  MOVE &D.EMPL_STATUS TO $EMPL_STATUS

  MOVE &A.DED_CUR TO #DED_CUR1
  MOVE &A.COMPANY TO $COMPANY
  MOVE &C.BIRTHDATE TO $BIRTHDATE
  MOVE &C.LAST_NAME_SRCH TO $LASTNAME
  LET $LASTNAME = SUBSTR($LASTNAME,1,17)
  MOVE &C.FIRST_NAME_SRCH TO $FIRSTNAME
  LET $FIRSTNAME = SUBSTR($FIRSTNAME,1,12)
  MOVE &C.NAME  TO $NAME
  MOVE &A.BENEFIT_PLAN TO $REC_BENEFIT_PLAN

  LET #DED_CUR = #DED_CUR + #DED_CUR1
  LET #RPT_SUBTOTAL_DED_CUR = #RPT_SUBTOTAL_DED_CUR + &A.DED_CUR
  IF ($ACTION = 'LOA' OR $ACTION = 'LTO' OR $ACTION = 'STO')
     ! THE ACTIONS FOR THE LWOP INDICATOR ARE HARD CODED.
     ! IF ANY OTHER ACTION IS USED IT HAS TO BE INCLUDED HERE
    MOVE 'Y' TO $LWOP_INDICATOR
  ELSE
     MOVE ' ' TO $LWOP_INDICATOR
  END-IF
  Show '$AGENCY : ' $AGENCY
  DO GET-SSN
  DO PRINT-REPORT
FROM PS_PAY_CHECK B,
     PS_PAY_DEDUCTION A,
     PS_GVT_PERS_DATA C,
     PS_GVT_JOB D
WHERE B.COMPANY = A.COMPANY
AND B.PAYGROUP = A.PAYGROUP
AND B.PAY_END_DT = A.PAY_END_DT
AND B.OFF_CYCLE = A.OFF_CYCLE
AND B.PAGE_NUM = A.PAGE_NUM
AND B.LINE_NUM = A.LINE_NUM
AND B.SEPCHK = A.SEPCHK
AND C.EMPLID = B.EMPLID
AND C.EMPL_RCD = B.EMPL_RCD
AND C.EFFDT =
     (SELECT MAX(C_ED.EFFDT) FROM PS_GVT_PERS_DATA C_ED
       WHERE C.EMPLID = C_ED.EMPLID
       AND C.EMPL_RCD = C_ED.EMPL_RCD
       AND C_ED.EFFDT <= $PAY_END_DT)
       AND C.EFFSEQ =
        (SELECT MAX(C_ES.EFFSEQ) FROM PS_GVT_PERS_DATA C_ES
        WHERE C.EMPLID = C_ES.EMPLID
          AND C.EMPL_RCD = C_ES.EMPL_RCD
          AND C.EFFDT = C_ES.EFFDT)
AND C.EMPLID = D.EMPLID
AND C.EMPL_RCD = D.EMPL_RCD
AND D.EFFDT =
        (SELECT MAX(D_ED.EFFDT) FROM PS_GVT_JOB D_ED
        WHERE D.EMPLID = D_ED.EMPLID
          AND D.EMPL_RCD = D_ED.EMPL_RCD
          AND D_ED.EFFDT <= C.EFFDT)
    AND D.EFFSEQ =
        (SELECT MAX(D_ES.EFFSEQ) FROM PS_GVT_JOB D_ES
        WHERE D.EMPLID = D_ES.EMPLID
          AND D.EMPL_RCD = D_ES.EMPL_RCD
          AND D.EFFDT = D_ES.EFFDT)

AND A.PLAN_TYPE = '10'
AND A.PAY_END_DT = $PAY_END_DT
AND A.COMPANY = $AGENCY
[$WHERE_CLAUSE]
GROUP BY A.BENEFIT_PLAN,D.EMPLID,D.EMPL_RCD,A.COMPANY,C.LAST_NAME_SRCH,C.FIRST_NAME_SRCH,C.NAME,
C.BIRTHDATE,D.ACTION,D.EMPL_STATUS
ORDER BY A.BENEFIT_PLAN,D.EMPLID
end-SELECT

DO WRITE-TRAILER

end-procedure

!********************************************
begin-procedure WRITE-HDR-RECORD
!********************************************

   do Format-DateTime($PAY_END_DT, $PAY_END_DT_T, {DEFCMP}, '', '')
   let $PAY_END_DT_T  = SUBSTR($PAY_END_DT_T 3,6)

   do Format-DateTime($CHECK_DT, $CHECK_DATE, {DEFCMP}, '', '')
   let $CHECK_DATE  = SUBSTR($CHECK_DATE 3,6)
   let $CONTACT_PHONE_T = SUBSTR($CONTACT_PHONE 1,3) ||  SUBSTR($CONTACT_PHONE 5,3) || SUBSTR($CONTACT_PHONE 9,4)

WRITE 90 FROM $RUN_ASOFDATE:8
              $PAY_END_DT_T:8
              $CHECK_DATE:8
              $GVT_AGY_LOC_CODE:8
              $GAS.GVT_DESCR70:25
              $GVT_ADDRESS1:25
              $GVT_ADDRESS2:22
              $CONTACT_PERSON:30
              $CONTACT_PHONE_T:10

END-PROCEDURE

!********************************************
begin-procedure GET-PAYROLL-ADDR
!********************************************
BEGIN-SELECT
GAS.COMPANY
GAS.GVT_ADDRESS1
GAS.GVT_ADDRESS2
GAS.GVT_AGY_LOC_CODE
GAS.GVT_DESCR70
GAS.CONTACT_PERSON
GAS.CONTACT_PHONE
GAS.GVT_ADDRESS_CITY
GAS.GVT_ADDRESS_STATE
GAS.GVT_ADDRESS_ZIP

   MOVE &GAS.COMPANY TO $GVT_COMPANY
   let  $GVT_COMPANY = Upper($GVT_COMPANY)

   MOVE &GAS.GVT_ADDRESS1 TO $GVT_ADDRESS1
   let  $GVT_ADDRESS1 = Upper($GVT_ADDRESS1)

   MOVE &GAS.GVT_ADDRESS2 TO $GVT_ADDRESS2
   let  $GVT_ADDRESS2 = Upper($GVT_ADDRESS2)

   MOVE &GAS.GVT_AGY_LOC_CODE TO $GVT_AGY_LOC_CODE

   MOVE &GAS.GVT_DESCR70 TO $GAS.GVT_DESCR70
   let  $GAS.GVT_DESCR70 = Upper($GAS.GVT_DESCR70)

   MOVE &GAS.CONTACT_PERSON TO $CONTACT_PERSON
   let  $CONTACT_PERSON = Upper($CONTACT_PERSON)

   MOVE &GAS.CONTACT_PHONE TO $CONTACT_PHONE

   MOVE &GAS.GVT_ADDRESS_CITY  TO $GVT_ADDRESS_CITY
   let  $GVT_ADDRESS_CITY = Upper($GVT_ADDRESS_CITY)

   MOVE &GAS.GVT_ADDRESS_STATE TO $GVT_ADDRESS_STATE
   let  $GVT_ADDRESS_STATE = Upper($GVT_ADDRESS_STATE)

   MOVE &GAS.GVT_ADDRESS_ZIP   TO $GVT_ADDRESS_ZIP

FROM PS_GVT_INTRFC_INFO GAS
WHERE GAS.COMPANY = $AGENCY
AND   GAS.EFFDT = (SELECT MAX(GAS1.EFFDT)
                          FROM PS_GVT_INTRFC_INFO GAS1
                          WHERE GAS.COMPANY = GAS1.COMPANY
                          AND   GAS1.EFFDT <= $ASOFDATE)
END-SELECT
END-PROCEDURE

!********************************************
begin-procedure EMPLID-CHANGE
!********************************************
LET #HEAD_CNT = #HEAD_CNT + 1
MOVE #DED_CUR TO $DED_CUR
IF LTRIM(RTRIM($SSN,' '),' ') = ''
   MOVE $RUN_BIRTHDATE TO $SSN
END-IF

END-PROCEDURE

!********************************************
begin-procedure BENEFIT-CHANGE
!********************************************

LET #GRAND_RPT_HDR_CNT =   #GRAND_RPT_HDR_CNT + #RPT_HDR_CNT
LET #GRAND_RPT_SUBTOTAL_DED_CUR = #GRAND_RPT_SUBTOTAL_DED_CUR + #RPT_SUBTOTAL_DED_CUR

MOVE 0 TO #HEAD_CNT
MOVE 0 TO #DED_CUR

  print 'SUBTOTAL '   (+2,01)
  print #RPT_SUBTOTAL_DED_CUR  (,82)  edit '$$$,$$$,$$bbbb9.99'

  do Format-Number(#RPT_HDR_CNT,$RPT_HDR_CNT_t,'999999')
  print $RPT_HDR_CNT_t  (,110)
  print '  ' (+1,)

Let #RPT_HDR_CNT = 0
LET #RPT_SUBTOTAL_DED_CUR = 0

END-PROCEDURE

!********************************************
begin-procedure GET-SSN
!********************************************

begin-select
PERS.NATIONAL_ID
   MOVE &PERS.NATIONAL_ID TO $SSN
FROM  PS_GVT_PERS_NID PERS
WHERE PERS.EMPLID = $EMPLID
AND   PERS.EMPL_RCD = #EMPL_RCD
AND   PERS.EFFDT = (SELECT MAX(PERS1.EFFDT)
                           FROM PS_GVT_PERS_NID PERS1
                           WHERE PERS.EMPLID = PERS1.EMPLID
                           AND   PERS.EMPL_RCD = PERS1.EMPL_RCD
                           AND   PERS1.EFFDT <= $ASOFDATE)
AND   PERS.EFFSEQ = (SELECT MAX(PERS2.EFFSEQ)
                            FROM PS_GVT_PERS_NID PERS2
                            WHERE PERS.EMPLID = PERS2.EMPLID
                            AND   PERS.EMPL_RCD = PERS2.EMPL_RCD
                            AND   PERS2.EFFDT = PERS.EFFDT)
AND   PERS.COUNTRY = 'USA'
END-SELECT
END-PROCEDURE

!********************************************
begin-procedure PRINT-REPORT
!********************************************

   print $SSN                 (+1,01) edit 'xxx-xx-xxxx'

   let   $Name = Upper($NAME)
   print $NAME                (,32)
   print $REC_BENEFIT_PLAN    (,59)
   print $LWOP_INDICATOR      (,76)
   print #DED_CUR1            (,82)  edit '$$$,$$$,$$bbbb9.99'

   do Rotate-Name

  do Format-Number(#DED_CUR1,$DED_CUR_t,'99999.99')

WRITE 90 FROM $SSN:9
              $LastName:17
              $FirstName:12
              $MidInitial:1
              $REC_BENEFIT_PLAN:3
              $LWOP_INDICATOR:1
              $DED_CUR_t:8

END-PROCEDURE

begin-procedure WRITE-TRAILER
!********************************************

  print 'GRAND TOTAL '   (+2,01)
  print #GRAND_RPT_SUBTOTAL_DED_CUR  (,82) edit '$$$,$$$,$$bbbb9.99'

  print #GRAND_RPT_HDR_CNT (,110) edit '999999'
  print '  ' (+1,)

  do Format-Number(#GRAND_RPT_SUBTOTAL_DED_CUR,$GRAND_RPT_SUBTOTAL_DED_CUR_t,'9999999.99')
  do Format-Number(#GRAND_RPT_HDR_CNT,$GRAND_RPT_HDR_CNT_t,'9999999')

WRITE 90 FROM $GRAND_RPT_SUBTOTAL_DED_CUR_t:10
              $GRAND_RPT_HDR_CNT_t:7

END-PROCEDURE

!****************************************************************
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#include 'datemath.sqc'
#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines
#Include 'getcodta.sqc'  !Get-COMPANY-Data procedure
#include 'rotname3.sqc'  !

