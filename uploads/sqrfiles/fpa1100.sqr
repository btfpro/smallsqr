!***********************************************************************
!  FPA1100:  CALLS FOR CIVIL PENSION OF EMPLOYEES ON SECONDMENT        *
!***********************************************************************
!          No Check, No external informations management               *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:12:32:04                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'         ! Set environment
#include 'setup01.sqc'        ! Printer and page-size initialization


BEGIN-REPORT

Do Init-DateTime
Do Init-Number
Do Get-Current-DateTime()
do Init-Report
do Main-Process
do Stdapi-Term

END-REPORT


!***************************************************************
!
!
!       Init-Report
!
!
!***************************************************************
BEGIN-PROCEDURE  Init-Report

move 'FPA1100' to  $ReportID

do Stdapi-Init

let $language_cd = $CURR_LANGUAGE_CD

do Init_Report_Translation($ReportID, $language_cd)
do Append_Report_Translation($ReportID)

do Get_Field_Information($ReportID, 'REPORT_TITLE', $ReportTitle, #DW)

do Security-Param                !SQR security
display 'do Security-Param done'

If $prcs_process_instance = ''

        do Ask-From-Thru-Date

        INPUT $E_Matricule 'Enter the employee id'
        let $E_Matricule = rtrim($E_Matricule,' ')

        INPUT #E_Dossier 'Enter the employee record number'
        INPUT $E_SIRH 'Infos issues de SIRH ? (Y/N)'

        INPUT $Date 'Enter an auditing date (YYYY/MM/DD)'

else
        do FP-Select-Parameters
        do Select-Parameters
End-if

END-PROCEDURE Init-Report


!***************************************************************
!
!
!       Get-Values
!
!
!***************************************************************
BEGIN-PROCEDURE  Get-Values

do FP-Get-From-Thru-Date

let $E_Matricule        = rtrim(&RUN_CNTL_HR.FP_EMPLID, ' ')
let #E_Dossier          = &RUN_CNTL_HR.Empl_rcd
let $E_SIRH             = rtrim(&RUN_CNTL_HR.FP_YES_NO, ' ')
let $FromDate_Check     = &FROMDATE_CHECK

END-PROCEDURE



!*********************************
BEGIN-PROCEDURE Main-Process
!*********************************

print '         ************************************************' (2,1)
print $ReportTitle                                                (3,1)
print '         ************************************************' (4,1)

display ''
display '-------- INPUT DATA --------'
display '   Begin Date      -   ' noline
display $FromDate
display '   End Date        -   ' noline
display $ThruDate
display '   Emplid          -   ' noline
display $E_Matricule
display '   Empl Rcd        -   ' noline
display #E_Dossier 9
display '   E_SIRH          -   ' noline
display $E_SIRH
display '   Beg of Verif    -   ' noline
display $FromDate_Check
display '------------------------------------'
display ''


!-- Dynamic FROM and WHERE clause for check (V) and calculation (C)
IF $E_SIRH = 'Y'
        ! Employee data are from PeopleSoft
        !----------------------------------
        let $FROM       = 'PS_JOB_JR J'


        let $WHERE_V    =       'J.EFFDT < {DATEIN-PREFIX}''' ||$FromDate|| ''' {DYN-DateIn-Suffix}' ||
                                        'and    J.EFFDT >= {DATEIN-PREFIX}''' ||$FromDate_Check|| '''{DYN-DateIn-Suffix} ' ||
                                        'and    J.FP_SCND_TYP in (''I'',''E'')'                 !** Employee on secondment





        let $WHERE_C    =       'J.EFFDT <= {DATEIN-PREFIX}''' ||$ThruDate|| ''' {DYN-DateIn-Suffix}' ||
                                        ' and    J.EFFDT >= ' ||
                                                        '(Select Max(J1.EFFDT)
                                                        from PS_JOB_JR J1
                                                        where J1.EMPLID = J.EMPLID
                                                        and J1.EMPL_RCD = J.EMPL_RCD ' ||
                                                        ' and J1.EFFDT <= {DATEIN-PREFIX}''' ||$FromDate|| '''{DYN-DateIn-Suffix}) ' ||
                                        ' and    J.FP_SCND_TYP in (''I'',''E'')'                 !** Employee on secondment

else
        ! Employee data are from an external source
        !------------------------------------------
        let $FROM = 'PS_FPA_EXT_INF_TBL J'

        let $WHERE_V =  'J.FP_BEGIN_DT_PER < {DATEIN-PREFIX}''' ||$FromDate|| ''' {DYN-DateIn-Suffix}' ||
                                        ' and    J.FP_BEGIN_DT_PER >= ' ||
                                                        '(Select Max(J1.FP_BEGIN_DT_PER)
                                                        from PS_FPA_EXT_INF_TBL J1' ||
                                                        ' where J1.FP_BEGIN_DT_PER <= {DATEIN-PREFIX}''' ||$FromDate_Check|| '''{DYN-DateIn-Suffix}) '

        let $WHERE_C =  'J.FP_BEGIN_DT_PER < {DATEIN-PREFIX}''' ||$ThruDate|| ''' {DYN-DateIn-Suffix}' ||
                                        ' and    J.FP_BEGIN_DT_PER >= ' ||
                                                        '(Select Max(J1.FP_BEGIN_DT_PER)
                                                        from PS_FPA_EXT_INF_TBL J1' ||
                                                        ' where J1.FP_BEGIN_DT_PER <= {DATEIN-PREFIX}''' ||$FromDate|| ''' {DYN-DateIn-Suffix}) '
END-IF


do Get_Field_Information($ReportID, 'HEADING1' , $CALCUL_LBL  ,         #DW)
do Get_Field_Information($ReportID, 'HEADING2' , $VERIFICATION_LBL ,    #DW)
do Get_Field_Information($ReportID, 'EMPLID' ,   $EMPLID_LBL ,          #DW)
do Get_Field_Information($ReportID, 'EMPL_RCD' , $EMPL_RCD_LBL ,        #DW)


IF IsBlank($E_Matricule)
!-----------------
! ALL employees
!-----------------

! Check is done for all employees on secondment during the check
! semester previous the batch's semester
!--------------------------------------------------------------------------
display '** Selection des agents pour Verification **'

let $sql-statement = 'FPA1100.SQR, Main-Process Verif,Select,[$FROM]'
Begin-Select Distinct On-Error=SQL-Error

J.EMPLID                &J.EMPLID
J.EMPL_RCD              &J.EMPL_RCD

        display 'Select for check on : ' noline
        display &J.EMPLID noline
        display &J.EMPL_RCD

        let $Matricule = rtrim(&J.EMPLID,' ')
        let #Dossier = &J.EMPL_RCD

        Do Verification($Matricule,#Dossier,$FromDate_Check,$FromDate,$E_SIRH)

FROM            [$FROM]
                ,PS_FPFAST_PERS_VW2 SCRTY          !SQR security

WHERE           [$WHERE_V]
and             J.EMPLID = SCRTY.EMPLID         !
and J.EMPL_RCD = SCRTY.EMPL_RCD     !SQR security
                [$SecurityClause]               !

ORDER BY        J.EMPLID, J.EMPL_RCD

End-Select



! CALCULATION is done for all employees on secondment during the semester
! captured on the run control panel
!--------------------------------------------------------------------
display ''
display '** Select of employee for Calculation **'

print '------------------------------>>> '                  (+3,1)
print $CALCUL_LBL                                           (,35)
print ' <<<------------------------------'                  (,50)
print '-------------> '                                     (+1,1)
print $FromDate                                             (,16)
print '<------------------>'                                (,28)
print $ThruDate                                             (,50)
print '<-----------'                                        (,63)
print '-'                                                   (+1,1,74) fill
print ''                                                    (+1,1)

let $sql-statement = 'FPA1100.SQR, Main-Process Calcul,Select,[$FROM]'
Begin-Select Distinct On-Error=SQL-Error

J.EMPLID                &EMPLID
J.EMPL_RCD              &EMPL_RCD

        let $Matricule = &EMPLID
        let #Dossier = &EMPL_RCD

        display $Matricule noline
        display #Dossier 9

        print '-'                               (+3,1,74) fill
        print $EMPLID_LBL                       (+1,10)
        print $Matricule                        (,25)
        print $EMPL_RCD_LBL                     (,40)
        print #Dossier                          (,52) edit 9
        print '-'                               (+1,1,74) fill

        Do Calcul($Matricule,#Dossier,$FromDate,$ThruDate,$E_SIRH,'N')

FROM            [$FROM]
                ,PS_FPFAST_PERS_VW2 SCRTY          !SQR security

WHERE           [$WHERE_C]
and             J.EMPLID = SCRTY.EMPLID         !
and J.EMPL_RCD = SCRTY.EMPL_RCD     !SQR security
                [$SecurityClause]               !

ORDER BY        J.EMPLID, J.EMPL_RCD

End-Select


ELSE
!-----------------
! 1 employee only
!-----------------
        display '** Processing on only one employee **'

        print '-'                               (+3,1,74) fill
        print '  Matricule : '                  (+1,10)
        print $E_Matricule                      (,25)
        print $EMPL_RCD_LBL                     (,40)
        print #E_Dossier                        (,52) edit 9
        print '-'                               (+1,1,74) fill


        ! Check ends the day before the semester start date
        !--------------------------------------------------------------------------
        do Convert-To-DTU-Date($FromDate,$FromDate_dtu)
        do Substr-Date($FromDate_dtu,0,0,1,$ThruDate_Check_dtu)
        do Convert-From-DTU-Date($ThruDate_Check_dtu,$ThruDate_Check)


        ! Check is for all semesters from the check start date
        !--------------------------------------------------------------------------
        print '--------------------------->>> '                 (+3,1)
        print $VERIFICATION_LBL                                 (,35)
        print ' <<<---------------------------'                 (,50)
        print '-------------> '                                 (+1,1)
        print $FromDate_Check                                   (,16)
        print '<------------------>'                            (,28)
        print $ThruDate_Check                                   (,50)
        print '<-----------'                                    (,63)
        print '-'                                               (+1,1,74) fill
        print ''                                                (+1,1)

        do Verification($E_Matricule,#E_Dossier,$FromDate_Check,$FromDate,$E_SIRH)

        print '------------------------------>>> '              (+3,1)
        print $CALCUL_TBL                                       (,35)
        print ' <<<------------------------------'              (,50)
        print '-------------> '                                 (+1,1)
        print $FromDate                                         (,16)
        print '<------------------>'                            (,28)
        print $ThruDate                                         (,50)
        print '<-----------'                                    (,63)
        print '-'                                               (+1,1,74) fill
        print ''                                                (+1,1)

        Do Calcul($E_Matricule,#E_Dossier,$FromDate,$ThruDate,$E_SIRH,'N')

        display '** End of calculation **'

END-IF

END-PROCEDURE Main-Process



#include 'stdapi.sqc'           ! Routines to update run status
#Include 'hrrnctl1.sqc'         ! Get run control parameter values
#Include 'hrgetval.sqc'         ! Get values mask routines
#Include 'fprnctl1.sqc'         ! Get run control parameter values (FPS)
#include 'curdttim.sqc'         ! Get-Current-DateTime procedure
#Include 'number.sqc'           ! Routines to format numbers
#Include 'fpgetval.sqc'         ! Get values mask routines (FPS)
#include 'askftd.sqc'           ! From Thru Date input
#include 'fpa1100.sqc'          ! Calculate contributions for seconded employees (FPS)
#Include 'fptestdt.sqc'       ! Routines for date and time formatting (FPS)
#Include 'fpparam.sqc'          ! Fetch parameters (FPS)
#Include 'fpa1105.sqc'          ! Functions dedicated to calculation of contributions for seconded employees (FPS)
#Include 'hrsecty.sqc'          ! Get SQR Security parameters
#include 'sqrtrans.sqc'         ! Translate SQR strings to given language
