!***********************************************************************
!  gpusyt51:  W-3 Transmittal - Totals Report - Puerto Rico            *
!**********************************************************************!
!                                                                      !
!               Confidentiality Information:                           !
!                                                                      !
!                                                                      !
! This module contains confidential and proprietary information        !
! of Oracle; it is not to be copied, reproduced, or transmitted        !
! in any form, by any means, in whole or in part, nor is it to         !
! be used for any purpose other than that for which it is              !
! expressly provided under the applicable license agreement.           !
!                                                                      !
! Copyright (C) 2006 Oracle. All Rights Reserved.                      !
!                                                                      !
!**********************************************************************!
!                                                                      !
!          $Date:  2006/09/12:16:32:01                                 !
!       $Release:  HR9                                                 !
!      $Revision:  102                                                 !
!                                                                      !
!**********************************************************************!

#include 'setenv.sqc' !Set environment
#include 'setup32.sqc' !Printer and page-size initialization

Begin-Report
  display ''
  display 'Begin W-3PR Transmittal - Totals Report'
  let $flag1 = 'N'
  do Init-Report
  do Process-Main

  If $flag1 = 'N'
     do DisplayNoEmpl
  End-If

  do Stdapi-Term
  display ''
  display 'End   W-3PR Transmittal - Totals Report'
End-Report

Begin-Procedure Init-Report
  move 'GPUSYT51' to $ReportID
  move 'W-3PR Transmittal - Totals Report' to $ReportTitle
  move '40' to $TaxForm_ID
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Current-DateTime
  do Initialization
  do Assign-Year-End-Variables
  do Emp-Stream
End-Procedure

Begin-Heading 7
  #Include 'stdhdg01.sqc'
  print 'W2 Rpt Company:'             (3,1)
  print $A.DESCR               (,+2)
  let $TaxYear = 'Tax Year ' || $CalYear
  print $TaxYear               (3,)    center
  if $flag = 'Y'
   print 'W-3PR'                (+3,3)
   print 'Box'                  (+1,3)
   print 'Description'          (,10)
   print 'Contents / Amount'    (,65)
  end-if
  let $flag = 'Y'
End-Heading

Begin-Procedure Initialization
  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')
  move $910Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear
  do Get-Tax-Reporting-Run-Controls
End-Procedure

Begin-Procedure Process-Main
  move &TX.CALENDAR_YEAR to $CalYear 9999
  let $AsOfDate =  $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

Begin-Select
A.GPUS_YE_RPT_CO
A.DESCR
A.GPUS_TAX_EIN
A.ADDRESS1
A.ADDRESS2
A.CITY
A.STATE
A.POSTAL
A.COUNTRY
A.GPUS_OTHER_EIN

  let $flag = 'Y'
  let $flag1 = 'Y'
  move &A.GPUS_YE_RPT_CO  to $A.GPUS_YE_RPT_CO
  move &A.DESCR  to $A.DESCR
  let #emplcnt = 0
  do Get-W2-Count
  If #W2_Count > 0
    do Load-Amounts
    If #emplcnt = 0
       Do DisplayNoEmpl
    Else
       do Print-W3
       NEW-PAGE
    End-If
  Else
    Do DisplayNoEmpl
  End-If

FROM PS_GPUS_YE_CO_TBL A
WHERE A.EFFDT = ( SELECT MAX(B.EFFDT) FROM PS_GPUS_YE_CO_TBL B
                  WHERE B.GPUS_YE_RPT_CO = A.GPUS_YE_RPT_CO AND B.EFFDT <= $AsOfDate)
   ORDER BY A.GPUS_YE_RPT_CO
End-Select
End-Procedure

Begin-Procedure Get-W2-Count
  Let #W2_Count = 0
Begin-Select
EE.EMPLID
  add 1 to #W2_Count
FROM PS_GPUS_YE_EE0_VW EE
WHERE EE.GPUS_TAX_EIN = &A.GPUS_TAX_EIN
  AND EE.GPUS_CAL_YEAR    = &TX.CALENDAR_YEAR
  AND EE.GPUS_TAXFORM_ID  = '40'
  AND EE.GPUS_YE_STATUS <> '20'
  [$fromtoEE]
End-Select
End-Procedure

Begin-Procedure Load-Amounts
  do Zero-Amounts

Begin-Select
D.GPUS_TAXFORM_BOX
#ifdef DB2ALL
DECIMAL(SUM(D.GPUS_YE_AMOUNT),15,3) &D.GPUS_YE_AMOUNT
#else
SUM(D.GPUS_YE_AMOUNT) &D.GPUS_YE_AMOUNT
#endif
  move &D.GPUS_YE_AMOUNT to #Amount
  add 1 to #emplcnt

   let $D.GPUS_TAXFORM_BOX = RTRIM(&D.GPUS_TAXFORM_BOX,' ')
   evaluate $D.GPUS_TAXFORM_BOX
     when = $YE_Cost_Pension_Annuity             !cost of Pension or Annuity
       add  #Amount to #06
       break
     when = $YE_Wages                            !PR wages
       add  #Amount to #07
       break
     when = $YE_Commissions                      !Commissions
       add  #Amount to #08
       break
     when = $YE_Allowance                        !Allowances
       add  #Amount to #09
       break
     when = $YE_Tips                             !Tips
       add  #Amount to #10
       break
     when = $YE_Reimbursed_Expense               !Reimbursed Expenses
       add  #Amount to #12
       break
     when = $YE_Tax_Withheld                     !PR Tax Withheld
       add  #Amount to #13
       break
     when = $YE_Retire_Fund                      !Retirement fund
       add  #Amount to #14
       break
     when = $YE_CODA_Plans                       !CODA Contributions
       add  #Amount to #15
       break
      when = $YE_Sal_324_2004                    !Salaries under Act 324
       add  #Amount to #16
       break
     when = $YE_SS_Wages                         !Soc Sec Wages
       add  #Amount to #17
       break
     when = $YE_SS_Tax                           !Soc Sec Tax Withheld
       add  #Amount to #18
       break
     when = $YE_Med_Wages                        !Medicare Wages and Tips
       add  #Amount to #19
       break
     when = $YE_Med_Tax                          !Medicare Tax Withheld
       add  #Amount to #20
       break
     when = $YE_SS_Tips                          !Soc Sec Tips
       add  #Amount to #21
       break
     when = $YE_SS_Tax_Tips                      !Uncollected Soc Sec
       add  #Amount to #22                       ! Tax on Tips
       break
     when = $YE_Med_Tax_Tips                     !Uncollected Medicare
       add  #Amount to #23                       ! Tax on Tips
       break
     end-evaluate
FROM PS_GPUS_YE_EE0_VW EE0,
     PS_GPUS_YE_EE1_VW D
WHERE EE0.GPUS_TAX_EIN = &A.GPUS_TAX_EIN
  AND EE0.GPUS_CAL_YEAR    = &TX.CALENDAR_YEAR
    AND EE0.GPUS_TAXFORM_ID  = '40'
    AND EE0.GPUS_YE_STATUS <> '20'
    [$fromtoEE0]
    AND D.EMPLID = EE0.EMPLID
    AND D.GPUS_CAL_YEAR       = EE0.GPUS_CAL_YEAR
    AND D.GPUS_TAX_EIN    = EE0.GPUS_TAX_EIN
    AND D.GPUS_TAXFORM_ID  = EE0.GPUS_TAXFORM_ID
    AND D.GPUS_SEQ_NBR     = 1
    AND D.GPUS_TAXFORM_BOX IN($YE_Cost_Pension_Annuity,
                   $YE_Wages,
                   $YE_Commissions,
                   $YE_Allowance,
                   $YE_Tips,
                   $YE_Reimbursed_Expense,
                   $YE_Tax_Withheld,
                   $YE_Retire_Fund,
                   $YE_CODA_Plans,
                   $YE_Sal_324_2004,
                   $YE_SS_Wages,
                   $YE_SS_Tax,
                   $YE_Med_Wages,
                   $YE_Med_Tax,
                   $YE_SS_Tips,
                   $YE_SS_Tax_Tips,
               $YE_Med_Tax_Tips)
 GROUP BY D.GPUS_TAXFORM_BOX
End-Select
End-Procedure

Begin-Procedure Zero-Amounts
  move '' to $GPUS_TAX_EIN
  move '' to $GPUS_OTHER_EIN
  move 0 to #06
  move 0 to #07
  move 0 to #08
  move 0 to #09
  move 0 to #10
  move 0 to #11
  move 0 to #12
  move 0 to #13
  move 0 to #14
  move 0 to #15
  move 0 to #16
  move 0 to #17
  move 0 to #18
  move 0 to #19
  move 0 to #20
  move 0 to #21
  move 0 to #22
  move 0 to #23
End-Procedure

Begin-Procedure Print-W3
  print 'b     Total number of statements     '  (+2,4)
  print #W2_Count                                (,76)   edit 999999

  move &A.GPUS_TAX_EIN to $GPUS_TAX_EIN 099999999
  print 'c     Employer identification number '  (+2,4)

  print $GPUS_TAX_EIN (,65)   edit xx-xxxxxxx
  print 'd     Employer name                  '  (+2,4)
  print &A.Descr                                 (,65)
  let $City = RTRIM(&A.City,' ')
  print 'e     Employer address               '  (+2,4)
  print &A.Address1                               (,65)
  print $City                                    (+1,65)
  print &A.State                                 ()       edit ,bxx
  Move &A.Postal to $Zip
  move $Zip            to $ZipExtsn ~~~~~~xxxx
  if &A.Country <> 'USA'
    print $Zip                                   (,+1)
    print &A.Country                             (,+1)
  else
    if instr($Zip,'-',6) = 0
    and $ZipExtsn <> '    '
      let $Zip = substr($Zip,1,5) || '-' || substr($Zip,6,4)
    end-if
    print $Zip                                   (,+1)
  end-if

  print 'f     Other EIN used this year'         (+2,4)


  if &A.GPUS_OTHER_EIN <> ' '
   move &A.GPUS_OTHER_EIN  to $GPUS_OTHER_EIN 099999999
   print $&A.GPUS_OTHER_EIN (,65)    edit xx-xxxxxxx
  end-if

  move '99999999999999.99' to $Fmt

  print '06    Cost of Pension or Annuity     '  (+2,4)
  do Format-Number(#06, $out, $Fmt)
  print $out  (,65)

  print '07    Wages                          '  (+2,4)
  do Format-Number(#07, $out, $Fmt)
  print $out  (,65)

  print '08    Commissions                    '  (+2,4)
  do Format-Number(#08, $out, $Fmt)
  print $out  (,65)

  print '09    Allowances                     '  (+2,4)
  do Format-Number(#09, $out, $Fmt)
  print $out  (,65)

  print '10    Tips                           '  (+2,4)
  do Format-Number(#10, $out, $Fmt)
  print $out  (,65)

  print '11    Total 7+8+9+10                 '  (+2,4)
  let #11 = #07 + #08 + #09 + #10
  do Format-Number(#11, $out, $Fmt)
  print $out  (,65)

  print '12    Reimbursed Expenses            '  (+2,4)
  do Format-Number(#12, $out, $Fmt)
  print $out  (,65)

  print '13    Tax Withheld                   '  (+2,4)
  do Format-Number(#13, $out, $Fmt)
  print $out  (,65)

  print '14    Retirement Fund                '  (+2,4)
  do Format-Number(#14, $out, $Fmt)
  print $out  (,65)

  print '15    Contributions to CODA Plans    '  (+2,4)
  do Format-Number(#15, $out, $Fmt)
  print $out  (,65)

  print '16    Salaries Under Act No.324, 2004'  (+2,4)
  do Format-Number(#16, $out, $Fmt)
  print $out  (,65)

  print '17    Social Security Wages          '  (+2,4)
  do Format-Number(#17, $out, $Fmt)
  print $out  (,65)

  print '18    Social Security Tax Withheld   '  (+2,4)
  do Format-Number(#18, $out, $Fmt)
  print $out  (,65)

  print '19    Medicare Wages and Tips                     '   (+2,4)
  do Format-Number(#19, $out, $Fmt)
  print $out  (,65)

  print '20    Medicare Tax Withheld                       '   (+2,4)
  do Format-Number(#20, $out, $Fmt)
  print $out  (,65)

  print '21    Social Security Tips                        '   (+2,4)
  do Format-Number(#21, $out, $Fmt)
  print $out  (,65)

  print '22    Uncollected Social Security Tax on Tips     '   (+2,4)
  do Format-Number(#22, $out, $Fmt)
  print $out  (,65)

  print '23    Uncollected Medicare Tax on Tips            '   (+2,4)
  do Format-Number(#23, $out, $Fmt)
  print $out  (,65)
End-Procedure

Begin-Procedure Emp-Stream
Begin-Select
EMPLID_FROM  &EFROM
EMPLID_TO   &ETO

  let $EFRM = &EFROM
  let $ET = &ETO
  let $A = ''''

  let $fromtoEE = 'AND EE.EMPLID BETWEEN '''||$EFRM||''' AND '''||$ET||$A
  let $fromtoEE0  = 'AND EE0.EMPLID BETWEEN '''||$EFRM||''' AND '''||$ET||$A

FROM PS_GP_STRM
WHERE STRM_NUM = &TX.STRM_NUM
End-Select
End-Procedure

Begin-Procedure DisplayNoEmpl
    let $flag = 'N'
    display &A.DESCR    noline
    display '  No Employee Records Selected  '
    print '***********************************************'  (+3,15)
    print '       No Employee Records Selected            '  (+1,15)
    print '***********************************************'  (+1,15)
    NEW-PAGE
End-Procedure

#Include 'gpusrntl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'gpusw2.sqc'    !Routine for W2 Year End Box variables