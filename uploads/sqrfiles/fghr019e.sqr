!***********************************************************************
!  FGHR019E: CPDF Status Submission File Program                       *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/09/18:14:34:51                                 !
!       $Release:  HR9                                                 !
!      $Revision:  110                                                 !
!       $Last Modified:  06/28/02 Review info no longer on job         *
!                                                                      *
!***********************************************************************

#define STATUS_PROC
#include 'setenv.sqc'    !Set environment
#include 'fgdfncpd.sqc'  !Set CPDF variables

begin-setup
#Include 'fgpaypln.sqc'  !Load-Lookup Table with Plan Plans
#include 'setup01a.sqc'

 declare-variable
    date $AsOfDate
    date $Service_Date
    date $Birthdate_Date
    date $Job_Effdt
    date $BeginDt
    date $EndDt
    date $review-as-of-date
    date $PARM-EFFDT
    date $SCD_Retire
    date $SCD_Rif
 end-declare

end-setup
!**********************************************************
begin-report
!**********************************************************

  Do Init-DateTime
  Do Init-Number
  move 'FGHR019E' to $ReportID
  move 'CPDF Status Table Build' to $ReportTitle
  Do Get-Current-DateTime
  Do Init-Report
  Do Report
  Do Print-Summary-Report
  Do Reset
  Do Stdapi-Term

end-report


!**********************************************************
begin-heading 8
!**********************************************************

  #Include 'stdhdg01.sqc'
  print 'CPDF Employee Status Table Build for '   (0,38)
  print $asofdate                                 (0,75)
  print 'For Agency ' (+1,58)
  print $agency       (0,69)

end-heading

!**********************************************************
begin-procedure Init-Report
!**********************************************************

  Do Stdapi-Init
  if IsBlank($prcs_process_instance)

    Do Ask-As-Of-Date

  else
    Do Select-Parameters
    Do Get-Values

    DISPLAY 'CPDF Employee Status Table Build for '
    DISPLAY &RUN_CNTL_FG.ASOFDATE
  end-if

  do Setup-CPDF-Field-Formats
  do Generate-SQL
end-procedure

begin-procedure Generate-SQL

If $online_flag  = 'N'
Let $WhereClause = 'JOB1.COMPANY = ''' || $agency || ''''
Let $WhereClause = $WhereClause || ' AND   JOBF.EMPLID          = JOB1.EMPLID'
Let $WhereClause = $WhereClause || ' AND   JOBF.EMPL_RCD        = JOB1.EMPL_RCD'
Let $WhereClause = $WhereClause || ' AND   JOBF.EFFDT           = JOB1.EFFDT'
Let $WhereClause = $WhereClause || ' AND   JOBF.EFFSEQ          = JOB1.EFFSEQ'
Let $WhereClause = $WhereClause || ' AND   EMPL.EMPLID          = JOB1.EMPLID'
Let $WhereClause = $WhereClause || ' AND   EMPL.EMPL_RCD        = JOB1.EMPL_RCD'
!************ Incident 1100365005 *******
Let $WhereClause = $WhereClause || ' AND   EMPLG.EMPLID          = JOB1.EMPLID'
Let $WhereClause = $WhereClause || ' AND   EMPLG.EMPL_RCD        = JOB1.EMPL_RCD'
Let $WhereClause = $WhereClause || ' AND   EMPLG.EFFDT           = JOB1.EFFDT'
Let $WhereClause = $WhereClause || ' AND   EMPLG.EFFSEQ          = JOB1.EFFSEQ'
!************ Incident 1100365005 *******
Let $WhereClause = $WhereClause || ' AND   PERS.EMPLID          = JOB1.EMPLID'
Let $WhereClause = $WhereClause || ' AND   PERSU.EMPLID         = PERS.EMPLID'
Let $WhereClause = $WhereClause || ' AND   PERSU.EFFDT          = (SELECT MAX(EFFDT)'
Let $WhereClause = $WhereClause || '                              FROM PS_PERS_DATA_USA'
Let $WhereClause = $WhereClause || '                              WHERE EMPLID = PERSU.EMPLID'
Let $WhereClause = $WhereClause || '                              AND EFFDT <=''' || &RUN_CNTL_FG.ASOFDATE || ''')'
!                              AND EFFDT <= $AsOfDate)
Let $WhereClause = $WhereClause || ' AND   PERSF.EMPLID         = PERS.EMPLID'
Let $WhereClause = $WhereClause || ' AND   PERSF.EFFDT          = (SELECT MAX(EFFDT)'
Let $WhereClause = $WhereClause || '                               FROM PS_PERS_DATA_USF'
Let $WhereClause = $WhereClause || '                              WHERE EMPLID = PERSF.EMPLID'
Let $WhereClause = $WhereClause || '                              AND EFFDT <= ''' || &RUN_CNTL_FG.ASOFDATE || ''')'
!                              AND EFFDT <= $AsOfDate)
Let $WhereClause = $WhereClause || ' AND   PERSG.EMPLID         = JOBF.EMPLID'
Let $WhereClause = $WhereClause || ' AND   PERSG.EMPL_RCD       = JOBF.EMPL_RCD'
Let $WhereClause = $WhereClause || ' AND   PERSG.EFFDT          = JOBF.EFFDT'
Let $WhereClause = $WhereClause || ' AND   PERSG.EFFSEQ         = JOBF.EFFSEQ'
Let $WhereClause = $WhereClause || ' AND   PERS_NID.EMPLID      = JOB1.EMPLID'
Let $WhereClause = $WhereClause || ' AND   CZ.EMPLID            = JOB1.EMPLID'
Let $WhereClause = $WhereClause || ' AND   CZ.EMPL_RCD          = JOB1.EMPL_RCD'
Let $WhereClause = $WhereClause || ' AND   CZ.EFFDT             = JOB1.EFFDT'
Let $WhereClause = $WhereClause || ' AND   CZ.EFFSEQ            = JOB1.EFFSEQ'
Let $WhereClause = $WhereClause || ' AND   SUB.COMPANY          = JOB1.COMPANY'
Let $WhereClause = $WhereClause || ' AND   SUB.GVT_SUB_AGENCY   = JOBF.GVT_SUB_AGENCY'
Let $WhereClause = $WhereClause || ' AND   SUB.EFF_STATUS       = ' || '''A'''
Let $WhereClause = $WhereClause || ' AND   SUB.GVT_REPORT_CPDF  <> ' || '''N'''
Let $WhereClause = $WhereClause || ' AND   SUB.EFFDT            = (SELECT MAX(S1.EFFDT)'
Let $WhereClause = $WhereClause || '                               FROM PS_GVT_SUBAGCY_TBL S1'
Let $WhereClause = $WhereClause || '                               WHERE S1.COMPANY        = SUB.COMPANY'
Let $WhereClause = $WhereClause || '                               AND   S1.GVT_SUB_AGENCY = SUB.GVT_SUB_AGENCY'
Let $WhereClause = $WhereClause || '                              AND   S1.EFF_STATUS     = ' || '''A'''
Let $WhereClause = $WhereClause || '                              AND   S1.EFFDT         <= JOB1.EFFDT)'
Let $WhereClause = $WhereClause || ' AND   LOC.LOCATION         = JOB1.LOCATION'
Let $WhereClause = $WhereClause || ' AND   LOC.EFF_STATUS       = ' || '''A'''
Let $WhereClause = $WhereClause || ' AND   LOC.EFFDT            = (SELECT MAX(L1.EFFDT)'
Let $WhereClause = $WhereClause || '                              FROM PS_LOCATION_TBL L1'
Let $WhereClause = $WhereClause || '                              WHERE L1.LOCATION     = LOC.LOCATION'
Let $WhereClause = $WhereClause || '                              AND   L1.SETID        = LOC.SETID'
Let $WhereClause = $WhereClause || '                              AND   L1.EFF_STATUS   = ' || '''A'''
Let $WhereClause = $WhereClause || '                              AND   L1.EFFDT       <= JOB1.EFFDT)'
Let $WhereClause = $WhereClause || ' AND   GEO.GVT_GEOLOC_CD    = LOC.GVT_GEOLOC_CD'
Let $WhereClause = $WhereClause || ' AND   GEO.EFF_STATUS       = ' || '''A'''
Let $WhereClause = $WhereClause || ' AND   GEO.EFFDT            = (SELECT MAX(G1.EFFDT)'
Let $WhereClause = $WhereClause || '                              FROM PS_GVT_GEOLOC_TBL G1'
Let $WhereClause = $WhereClause || '                              WHERE G1.GVT_GEOLOC_CD     = GEO.GVT_GEOLOC_CD'
Let $WhereClause = $WhereClause || '                              AND   G1.EFF_STATUS   = ' || '''A'''
Let $WhereClause = $WhereClause || '                              AND   G1.EFFDT       <= LOC.EFFDT)'
Let $WhereClause = $WhereClause || ' AND   JC.JOBCODE           = JOB1.JOBCODE'
Let $WhereClause = $WhereClause || ' AND   JC.EFF_STATUS        = ' || '''A'''
Let $WhereClause = $WhereClause || ' AND   JC.SETID             = JOB1.SETID_JOBCODE'
Let $WhereClause = $WhereClause || ' AND   JC.EFFDT             = (SELECT MAX(JC1.EFFDT)'
Let $WhereClause = $WhereClause || '                              FROM PS_JOBCODE_TBL JC1'
Let $WhereClause = $WhereClause || '                              WHERE JC1.JOBCODE     = JC.JOBCODE'
Let $WhereClause = $WhereClause || '                              AND   JC1.EFF_STATUS  = JC.EFF_STATUS'
Let $WhereClause = $WhereClause || '                              AND   JC1.EFFDT      <= JOB1.EFFDT)'
Let $WhereClause = $WhereClause || ' AND   JOB1.EFFDT            = (SELECT MAX(J1.EFFDT)'
Let $WhereClause = $WhereClause || '                              FROM PS_JOB J1'
Let $WhereClause = $WhereClause || '                              WHERE J1.EMPLID  = JOB1.EMPLID'
Let $WhereClause = $WhereClause || '                              AND J1.EMPL_RCD = JOB1.EMPL_RCD'
Let $WhereClause = $WhereClause || '                              AND J1.EFFDT    <= ' || '''' || &RUN_CNTL_FG.ASOFDATE || ''')'
!                              AND J1.EFFDT    <= $AsOfDate)
Let $WhereClause = $WhereClause || ' AND   JOB1.EFFSEQ           = (SELECT MAX(J2.EFFSEQ)'
Let $WhereClause = $WhereClause || '                              FROM PS_JOB J2'
Let $WhereClause = $WhereClause || '                              WHERE J2.EMPLID  = JOB1.EMPLID'
Let $WhereClause = $WhereClause || '                              AND J2.EMPL_RCD = JOB1.EMPL_RCD'
Let $WhereClause = $WhereClause || '                              AND J2.EFFDT     = JOB1.EFFDT)'
Let $WhereClause = $WhereClause || ' AND   POS.POSITION_NBR     = JOB1.POSITION_NBR'
Let $WhereClause = $WhereClause || ' AND   POS.EFF_STATUS       = ' || '''A'''
Let $WhereClause = $WhereClause || ' AND   POS.EFFDT            = (SELECT MAX(P1.EFFDT)'
Let $WhereClause = $WhereClause || '                              FROM PS_POSITION_DATA P1'
Let $WhereClause = $WhereClause || '                              WHERE P1.POSITION_NBR = POS.POSITION_NBR'
Let $WhereClause = $WhereClause || '                              AND   P1.EFF_STATUS   = ' || '''A'''
Let $WhereClause = $WhereClause || '                              AND   P1.EFFDT       <= JOB1.EFFDT)'

begin-sql
DELETE FROM PS_GVT_CPDF_STATUS
end-sql
else

Let $WhereClause = 'JOBF.EMPLID          = ' || '''' || $KEMPLID || ''''
Let $WhereClause = $WhereClause || ' AND   JOBF.EMPL_RCD        = ' || To_char(#KEMPL_RCD)
Let $WhereClause = $WhereClause || ' AND   JOBF.EFFDT        = ' || '''' || $KEFFDT || ''''
Let $WhereClause = $WhereClause || ' AND   JOBF.EFFSEQ        = ' || To_Char(#KEFFSEQ)
Let $WhereClause = $WhereClause || ' AND   JOBF.EMPLID          = JOB1.EMPLID'
Let $WhereClause = $WhereClause || ' AND   JOBF.EMPL_RCD        = JOB1.EMPL_RCD'
Let $WhereClause = $WhereClause || ' AND   JOBF.EFFDT           = JOB1.EFFDT'
Let $WhereClause = $WhereClause || ' AND   JOBF.EFFSEQ          = JOB1.EFFSEQ'
Let $WhereClause = $WhereClause || ' AND   EMPL.EMPLID          = JOB1.EMPLID'
Let $WhereClause = $WhereClause || ' AND   EMPL.EMPL_RCD        = JOB1.EMPL_RCD'
!************ Incident 1100365005 *******
Let $WhereClause = $WhereClause || ' AND   EMPLG.EMPLID          = JOB1.EMPLID'
Let $WhereClause = $WhereClause || ' AND   EMPLG.EMPL_RCD        = JOB1.EMPL_RCD'
Let $WhereClause = $WhereClause || ' AND   EMPLG.EFFDT           = JOB1.EFFDT'
Let $WhereClause = $WhereClause || ' AND   EMPLG.EFFSEQ          = JOB1.EFFSEQ'
!************ Incident 1100365005 *******
Let $WhereClause = $WhereClause || ' AND   PERS.EMPLID          = JOB1.EMPLID'
Let $WhereClause = $WhereClause || ' AND   PERSU.EMPLID         = PERS.EMPLID'
Let $WhereClause = $WhereClause || ' AND   PERSU.EFFDT          = (SELECT MAX(EFFDT)'
Let $WhereClause = $WhereClause || '                              FROM PS_PERS_DATA_USA'
Let $WhereClause = $WhereClause || '                              WHERE EMPLID = PERSU.EMPLID'
Let $WhereClause = $WhereClause || '                              AND EFFDT <=''' || $KEFFDT || ''')'
!                              AND EFFDT <= $AsOfDate)
Let $WhereClause = $WhereClause || ' AND   PERSF.EMPLID         = PERS.EMPLID'
Let $WhereClause = $WhereClause || ' AND   PERSF.EFFDT          = (SELECT MAX(EFFDT)'
Let $WhereClause = $WhereClause || '                               FROM PS_PERS_DATA_USF'
Let $WhereClause = $WhereClause || '                              WHERE EMPLID = PERSF.EMPLID'
Let $WhereClause = $WhereClause || '                              AND EFFDT <= ''' || $KEFFDT || ''')'
!                              AND EFFDT <= $AsOfDate)
Let $WhereClause = $WhereClause || ' AND   PERSG.EMPLID         = JOBF.EMPLID'
Let $WhereClause = $WhereClause || ' AND   PERSG.EMPL_RCD       = JOBF.EMPL_RCD'
Let $WhereClause = $WhereClause || ' AND   PERSG.EFFDT          = JOBF.EFFDT'
Let $WhereClause = $WhereClause || ' AND   PERSG.EFFSEQ         = JOBF.EFFSEQ'
Let $WhereClause = $WhereClause || ' AND   PERS_NID.EMPLID      = JOB1.EMPLID'
Let $WhereClause = $WhereClause || ' AND   CZ.EMPLID            = JOB1.EMPLID'
Let $WhereClause = $WhereClause || ' AND   CZ.EMPL_RCD          = JOB1.EMPL_RCD'
Let $WhereClause = $WhereClause || ' AND   CZ.EFFDT             = JOB1.EFFDT'
Let $WhereClause = $WhereClause || ' AND   CZ.EFFSEQ            = JOB1.EFFSEQ'
Let $WhereClause = $WhereClause || ' AND   SUB.COMPANY          = JOB1.COMPANY'
Let $WhereClause = $WhereClause || ' AND   SUB.GVT_SUB_AGENCY   = JOBF.GVT_SUB_AGENCY'
Let $WhereClause = $WhereClause || ' AND   SUB.EFF_STATUS       = ' || '''A'''
Let $WhereClause = $WhereClause || ' AND   SUB.GVT_REPORT_CPDF  <> ' || '''N'''
Let $WhereClause = $WhereClause || ' AND   SUB.EFFDT            = (SELECT MAX(S1.EFFDT)'
Let $WhereClause = $WhereClause || '                               FROM PS_GVT_SUBAGCY_TBL S1'
Let $WhereClause = $WhereClause || '                               WHERE S1.COMPANY        = SUB.COMPANY'
Let $WhereClause = $WhereClause || '                               AND   S1.GVT_SUB_AGENCY = SUB.GVT_SUB_AGENCY'
Let $WhereClause = $WhereClause || '                              AND   S1.EFF_STATUS     = ' || '''A'''
Let $WhereClause = $WhereClause || '                              AND   S1.EFFDT         <= JOB1.EFFDT)'
Let $WhereClause = $WhereClause || ' AND   LOC.LOCATION         = JOB1.LOCATION'
Let $WhereClause = $WhereClause || ' AND   LOC.EFF_STATUS       = ' || '''A'''
Let $WhereClause = $WhereClause || ' AND   LOC.EFFDT            = (SELECT MAX(L1.EFFDT)'
Let $WhereClause = $WhereClause || '                              FROM PS_LOCATION_TBL L1'
Let $WhereClause = $WhereClause || '                              WHERE L1.LOCATION     = LOC.LOCATION'
Let $WhereClause = $WhereClause || '                              AND   L1.SETID        = LOC.SETID'
Let $WhereClause = $WhereClause || '                              AND   L1.EFF_STATUS   = ' || '''A'''
Let $WhereClause = $WhereClause || '                              AND   L1.EFFDT       <= JOB1.EFFDT)'
Let $WhereClause = $WhereClause || ' AND   GEO.GVT_GEOLOC_CD    = LOC.GVT_GEOLOC_CD'
Let $WhereClause = $WhereClause || ' AND   GEO.EFF_STATUS       = ' || '''A'''
Let $WhereClause = $WhereClause || ' AND   GEO.EFFDT            = (SELECT MAX(G1.EFFDT)'
Let $WhereClause = $WhereClause || '                              FROM PS_GVT_GEOLOC_TBL G1'
Let $WhereClause = $WhereClause || '                              WHERE G1.GVT_GEOLOC_CD     = GEO.GVT_GEOLOC_CD'
Let $WhereClause = $WhereClause || '                              AND   G1.EFF_STATUS   = ' || '''A'''
Let $WhereClause = $WhereClause || '                              AND   G1.EFFDT       <= LOC.EFFDT)'
Let $WhereClause = $WhereClause || ' AND   JC.JOBCODE           = JOB1.JOBCODE'
Let $WhereClause = $WhereClause || ' AND   JC.EFF_STATUS        = ' || '''A'''
Let $WhereClause = $WhereClause || ' AND   JC.SETID             = JOB1.SETID_JOBCODE'
Let $WhereClause = $WhereClause || ' AND   JC.EFFDT             = (SELECT MAX(JC1.EFFDT)'
Let $WhereClause = $WhereClause || '                              FROM PS_JOBCODE_TBL JC1 '
Let $WhereClause = $WhereClause || '                              WHERE JC1.JOBCODE     = JC.JOBCODE'
Let $WhereClause = $WhereClause || '                              AND   JC1.EFF_STATUS  = JC.EFF_STATUS'
Let $WhereClause = $WhereClause || '                              AND   JC1.EFFDT      <= JOB1.EFFDT)'
Let $WhereClause = $WhereClause || ' AND   JOB1.EFFDT            = (SELECT MAX(J1.EFFDT)'
Let $WhereClause = $WhereClause || '                              FROM PS_JOB J1'
Let $WhereClause = $WhereClause || '                              WHERE J1.EMPLID  = JOB1.EMPLID'
Let $WhereClause = $WhereClause || '                              AND J1.EMPL_RCD = JOB1.EMPL_RCD'
Let $WhereClause = $WhereClause || '                              AND J1.EFFDT    <= ' || '''' || $KEFFDT || ''')'
!                              AND J1.EFFDT    <= $AsOfDate)
Let $WhereClause = $WhereClause || ' AND   JOB1.EFFSEQ           = (SELECT MAX(J2.EFFSEQ)'
Let $WhereClause = $WhereClause || '                              FROM PS_JOB J2'
Let $WhereClause = $WhereClause || '                              WHERE J2.EMPLID  = JOB1.EMPLID'
Let $WhereClause = $WhereClause || '                              AND J2.EMPL_RCD = JOB1.EMPL_RCD'
Let $WhereClause = $WhereClause || '                              AND J2.EFFDT     = JOB1.EFFDT)'
Let $WhereClause = $WhereClause || ' AND   POS.POSITION_NBR     = JOB1.POSITION_NBR'
Let $WhereClause = $WhereClause || ' AND   POS.EFF_STATUS       = ' || '''A'''
Let $WhereClause = $WhereClause || ' AND   POS.EFFDT            = (SELECT MAX(P1.EFFDT)'
Let $WhereClause = $WhereClause || '                              FROM PS_POSITION_DATA P1'
Let $WhereClause = $WhereClause || '                              WHERE P1.POSITION_NBR = POS.POSITION_NBR'
Let $WhereClause = $WhereClause || '                              AND   P1.EFF_STATUS   = ' || '''A'''
Let $WhereClause = $WhereClause || '                              AND   P1.EFFDT       <= JOB1.EFFDT)'

begin-sql
 DELETE FROM PS_GVT_CPDF_ONLINE 
 WHERE OPRID = $Prcs_OprID AND EMPLID = $KEMPLID AND EMPL_RCD = #KEMPL_RCD AND EFFDT = $KEFFDT AND EFFSEQ = #KEFFSEQ AND GVT_EDIT_ID = '1'
end-sql
end-if
end-procedure
!**********************************************************
begin-procedure Get-Values
!**********************************************************
  let $online_flag = rtrim(&RUN_CNTL_FG.GVT_CPDF_VAL_ONLNE,' ')
  Do Convert-To-DTU-Date($AsOfDate,$AsOfDate)   
  If $online_flag = 'N'
  Do Get-As-Of-Date
  Do Convert-To-DTU-Date($AsOfDate,$AsOfDate_YYYY_MM_DD)  
  let $agency = rtrim(&RUN_CNTL_FG.COMPANY,' ')
   ! Added for online validation. Select online flag and par rows keys
  else  
  let $KEMPLID = &RUN_CNTL_FG.EMPLID
  let $KEFFDT= &RUN_CNTL_FG.EFFDT
  let #KEFFSEQ = &RUN_CNTL_FG.EFFSEQ
  let #KEMPL_RCD = &RUN_CNTL_FG.EMPL_RCD  
  End-If


end-procedure

!**********************************************************
begin-procedure Print-Summary-Report
!**********************************************************

  move '999,999' to $mask
  let #rejected = #total-rec-count - #rec-written-count
  let #rejected = COND(#rejected<=0,0,#rejected)

  print 'Total Records Read    : '                (+1,1)
  print #total-rec-count                          (0,25)  edit :$mask
  print 'Total Records Written : '                (+1,1)
  print #rec-written-count                        (0,25)  edit :$mask
  print 'Total Records Rejected: '                (+1,1)
  print #rejected                                 (0,25)  edit :$mask

end-procedure

!**********************************************************
begin-procedure Report
!**********************************************************


begin-select
JOB1.EMPLID
JOB1.EMPL_RCD
JOB1.EFFDT
JOB1.EFFSEQ
JOB1.DEPTID
JOB1.JOBCODE
JOB1.POSITION_NBR
JOB1.EMPL_STATUS
JOB1.LOCATION
JOBF.GVT_WORK_SCHED
JOB1.FLSA_STATUS
JOB1.COMPANY
JOBF.GVT_SUB_AGENCY
JOBF.GVT_NOA_CODE
JOBF.GVT_PAY_RATE_DETER
JOBF.GVT_PAY_PLAN
JOB1.SAL_ADMIN_PLAN
JOB1.GRADE
JOBF.GVT_STEP
JOBF.GVT_RTND_PAY_PLAN
JOBF.GVT_RTND_SAL_PLAN
JOBF.GVT_RTND_GRADE
JOBF.GVT_RTND_STEP
JOBF.GVT_PAY_BASIS
JOBF.GVT_POSN_OCCUPIED
JOBF.GVT_LOCALITY_ADJ
JOBF.GVT_COMPRATE
JOB1.COMPRATE
JOBF.GVT_RETIRE_PLAN
JOBF.GVT_ANN_IND
JOBF.GVT_FEGLI
JOBF.GVT_ELIG_FEHB
JOBF.GVT_CSRS_FROZN_SVC
JOBF.GVT_PREV_RET_COVRG
JOBF.GVT_FERS_COVERAGE
JOBF.GVT_POI
JOB1.REG_TEMP
JOB1.SETID_DEPT
JOB1.SETID_LOCATION
EMPL.SERVICE_DT
JOBF.GVT_TENURE
JOBF.GVT_CURR_APT_AUTH1
JOBF.GVT_CURR_APT_AUTH2
JOB1.BARG_UNIT
PERSF.GVT_VET_PREF_APPT
PERSF.GVT_CRED_MIL_SVCE
PERS.NAME
PERS.BIRTHDATE
CZ.CITIZENSHIP_STATUS
PERS.SEX
PERSG.ETHNIC_GROUP
PERSU.MILITARY_STATUS
PERSF.GVT_DISABILITY_CD
JC.GVT_FUNC_CLASS
POS.GVT_OCC_SERIES
POS.MANAGER_LEVEL
GEO.GVT_LOCALITY_AREA
GEO.GVT_CMSA
GEO.GVT_GEOLOC_CD
SUB.GVT_REPORT_CPDF
PERS_NID.NATIONAL_ID
 !*********************** Incident 1100365005 ********
PERSG.LAST_NAME
PERSG.FIRST_NAME
PERSG.MIDDLE_NAME
PERSG.NAME_SUFFIX
POS.DESCR
EMPLG.GVT_SCD_RETIRE
EMPLG.CMPNY_SENIORITY_DT
 !*********************** Incident 1100365005 ********

  Let $Service_Date = &EMPL.SERVICE_DT
  Let $Birthdate_Date = &PERS.BIRTHDATE
  Let $Job_Effdt = &JOB1.EFFDT
  Let $SCD_Retire = &EMPLG.GVT_SCD_RETIRE
  Let $SCD_Rif = &EMPLG.CMPNY_SENIORITY_DT

  do Initialize-CPDF-Fields

  do Convert-To-DTU-Date($Job_Effdt,$dtu_effdt)

  let $review-as-of-date = $AsOfDate     ! As of the runcontrol date.  Status is a current view of an employee at a point-in-time

  Do Get-Employee-Review

  let $lv_msg = 'Processing Agency/Sub-agency/Emplid: '
        || &JOB1.company ||'/'
        || &JOBF.gvt_sub_agency ||'/'
        || &JOB1.emplid
  DISPLAY $lv_msg

  !*************** Incident 1100365005 *******
  do Format-CPDF-Field(&PERSG.LAST_NAME,'GVT_CPDF_LAST_NAME',$gvt_cpdf_last_name)
  do Format-CPDF-Field(&PERSG.FIRST_NAME,'GVT_CPDF_FIRST_NAM',$gvt_cpdf_first_name)
  do Format-CPDF-Field(&PERSG.MIDDLE_NAME,'GVT_CPDF_MID_NAME',$gvt_cpdf_middle_name)
  do Format-CPDF-Field(&PERSG.NAME_SUFFIX,'GVT_CPDF_SUFFIX',$gvt_cpdf_name_suffix)
  do Format-CPDF-Field(&POS.DESCR,'GVT_CPDF_POS_TITLE',$gvt_cpdf_descr)
  do Format-CPDF-Field($SCD_Retire,'GVT_CPDF_SCD_RETIR',$gvt_cpdf_gvt_scd_retire)
  do Format-CPDF-Field($SCD_Rif,'GVT_CPDF_SCD_RIF',$gvt_cpdf_cmpny_seniority_dt)
  !*************** Incident 1100365005 *******
  
  do Format-CPDF-Field(&POS.MANAGER_LEVEL,'GVT_CPDF_SUPV_STAT',$gvt_cpdf_supv_stat)
  do Format-CPDF-Field(&JOBF.GVT_PAY_RATE_DETER,'GVT_PAY_RATE_DETER',$gvt_pay_rate_deter)
  do Format-CPDF-Field(&PERS_NID.NATIONAL_ID,'SSN',$ssn)

  do Format-CPDF-Field(&JOBF.GVT_SUB_AGENCY,'GVT_SUB_AGENCY',$gvt_sub_agency)
  let $agency_subelement = rtrim(&JOB1.COMPANY,' ') || rtrim(&JOBF.GVT_SUB_AGENCY,' ')
  do Format-CPDF-Field($agency_subelement,'AGENCY_SUBELEMENT',$agency_subelement)

  do Format-CPDF-Field(&PERSG.ETHNIC_GROUP,'ETHNIC_GROUP',$ethnic_group)

!* Only retirement plans of K,L,M and N should pass FERS coverage information.         ! OPM 640.11.1
!* 'N' is not a valid OPM FERS coverage code value, so it should be changed to blank

  if (&JOBF.GVT_RETIRE_PLAN = 'K' or &JOBF.GVT_RETIRE_PLAN = 'L' or &JOBF.GVT_RETIRE_PLAN = 'M' or
     &JOBF.GVT_RETIRE_PLAN = 'N') and &JOBF.GVT_FERS_COVERAGE <> 'N'  ! Not Covered By FERS

     do Format-CPDF-Field(&JOBF.GVT_FERS_COVERAGE,'GVT_FERS_COVERAGE',$gvt_fers_coverage)

  end-if

  ! OPM 640.14.1
  if (&JOBF.GVT_FERS_COVERAGE = 'A' or &JOBF.GVT_FERS_COVERAGE = 'E') and (&JOBF.GVT_RETIRE_PLAN <> 'K' or
      &JOBF.GVT_RETIRE_PLAN = 'L' or &JOBF.GVT_RETIRE_PLAN = 'M' or &JOBF.GVT_RETIRE_PLAN = 'N' or &JOBF.GVT_RETIRE_PLAN = 'P')

     do Format-CPDF-Field('','GVT_FERS_COVERAGE',$gvt_fers_coverage)

  end-if


  do Format-CPDF-Field(&JOBF.GVT_RETIRE_PLAN,'GVT_RETIRE_PLAN',$gvt_retire_plan)
  do Format-CPDF-Field(&JOBF.GVT_TENURE,'GVT_TENURE',$gvt_tenure)
  do Format-CPDF-Field(&PERSF.GVT_CRED_MIL_SVCE,'GVT_CRED_MIL_SVCE',$gvt_cred_mil_svce)
  do Format-CPDF-Field(&JOBF.GVT_FEGLI,'GVT_FEGLI',$gvt_fegli)
  do Format-CPDF-Field(&JOBF.GVT_ANN_IND,'GVT_ANN_IND',$gvt_ann_ind)
  do Format-CPDF-Field(&CZ.CITIZENSHIP_STATUS,'CITIZENSHIP_STATUS',$citizenship_status)
  do Format-CPDF-Field(&PERS.SEX,'SEX',$sex)
  do Format-CPDF-Field(&PERSF.GVT_DISABILITY_CD,'GVT_DISABILITY_CD',$gvt_disability_cd)
  do Format-CPDF-Field(&POS.GVT_OCC_SERIES,'GVT_OCC_SERIES',$gvt_occ_series)
  do Format-CPDF-Field(&JOBF.GVT_PAY_PLAN,'GVT_CPDF_ERN_PROG',$gvt_cpdf_ern_prog)

  let $adj_grade = &JOB1.GRADE
       
  if rtrim($gvt_cpdf_ern_prog, ' ') = 'EX'

     let $parm-grade-in = &JOB1.GRADE

     do Format-EX-Grade
         
  end-if

  do Format-CPDF-Field($adj_grade,'GVT_CPDF_GRADE',$gvt_cpdf_grade)
  do Format-CPDF-Field(&JOBF.GVT_STEP,'GVT_STEP',$gvt_step)
  do Format-CPDF-Field(&JOBF.GVT_WORK_SCHED,'GVT_WORK_SCHED',$gvt_work_sched)
  do Format-CPDF-Field(&JOB1.LOCATION,'GVT_CPDF_LOCATION',$gvt_cpdf_location)
  do Format-CPDF-Field(&JOB1.BARG_UNIT,'BARG_UNIT',$barg_unit)
  do Format-CPDF-Field(&JOB1.DEPTID,'GVT_DEPTID_CPDF',$gvt_deptid_cpdf)

  ! Hard-coded workaround until setup table is updated

  let $flsa-temp = &JOB1.FLSA_STATUS
  if $flsa-temp <> 'N'
     let $flsa-temp = 'E'
  end-if

  do Format-CPDF-Field($flsa-temp,'FLSA_STATUS',$flsa_status)

  add 1 to #total-rec-count
  Do Process-Rejection-Data
  SHOW $OK-to-Process
  if $OK-to-Process = 'Y' 
     Do Process-Employee
     If $online_flag = 'N'      
     Do Write-Status-Submission-Record
     else
     Do Write-Online-Validation-Record
     end-if

  end-if

FROM PS_JOB JOB1,
     PS_JOB_USF JOBF,
     PS_EMPLOYMENT EMPL,
     PS_PERSONAL_DT_FST PERS,
     PS_PERS_DATA_USA PERSU,
     PS_PERS_DATA_USF PERSF,
     PS_GVT_CITIZENSHIP CZ,
     PS_JOBCODE_TBL JC,
     PS_LOCATION_TBL  LOC,
     PS_GVT_GEOLOC_TBL GEO,
     PS_GVT_SUBAGCY_TBL SUB,
     PS_PERS_NID PERS_NID,
     PS_POSITION_DATA POS,
     PS_GVT_PERS_DATA PERSG,
     !*********** Incident 1100365005 *******
     PS_GVT_EMPLOYMENT EMPLG
     !*********** Incident 1100365005 *******

WHERE  [$WhereClause]

end-select
end-procedure

!**********************************************************
begin-procedure Process-Rejection-Data
!**********************************************************

!**********************************************************
! Exclude records for non-citizens located outside the United States
! OPM edit # 740.02.1
!**********************************************************

  move 'Y' to $OK-to-Process

  let $duty_station = substr(&GEO.GVT_GEOLOC_CD,1,2)
  let $ds_char1 = substr(&GEO.GVT_GEOLOC_CD,1,1)
  let $ds_char2 = substr(&GEO.GVT_GEOLOC_CD,2,1)

  if instr('0123456789', $ds_char1, 1) and instr('0123456789', $ds_char2, 1)
     let #duty_station_is_numeric = 1
  else
     let #duty_station_is_numeric = 0
  end-if

  if &CZ.citizenship_status <> '1'
    if $duty_station <> 'US' and  $ds_char2 <> 'Q'
    and  (Not #duty_station_is_numeric)
      move 'N' to $OK-to-Process
    end-if
  end-if

end-procedure

!**********************************************************
begin-procedure Process-Employee
!**********************************************************

  evaluate &JOBF.GVT_PAY_BASIS
     when = 'PA'  !Annual
     when = 'SY'  !School Year
     when = 'PM' ! Per Month
     when = 'BW'  ! Bi-Weekly
       if isnull(&JOBF.gvt_comprate)
          let $basic_pay = '' ! forces fill character instead of zeros when value is null
       else
          let #basic_pay = trunc(&JOBF.GVT_COMPRATE,0)
          let $basic_pay = to_char(#basic_pay)
       end-if

       do Format-CPDF-Field($basic_pay,'GVT_CPDF_BASIC_PAY-A',$gvt_cpdf_basic_pay)
       break

     when = 'WC'
       do Format-CPDF-Field('0','GVT_CPDF_BASIC_PAY-A',$gvt_cpdf_basic_pay)
       break

     when-other         ! PH = hourly, PD = per diem, FB = fee basis, PW = peace work, SM = semi-monthly
       if isnull(&JOBF.gvt_comprate)
          let $basic_pay = '' ! forces fill character instead of zeros when value is null
       else
          let #basic_pay = trunc((&JOBF.GVT_COMPRATE + .005),2)
          let $basic_pay = to_char(#basic_pay)
       end-if

       do Format-CPDF-Field($basic_pay,'GVT_CPDF_BASIC_PAY-H',$gvt_cpdf_basic_pay)
       break
  end-evaluate

  do Format-CPDF-Field(&JOBF.GVT_POI,'GVT_POI',$gvt_poi)
  do Format-CPDF-Field(&PERSF.GVT_VET_PREF_APPT,'GVT_VET_PREF_APPT',$gvt_vet_pref_appt)
  do Format-CPDF-Field(&JC.GVT_FUNC_CLASS,'GVT_FUNC_CLASS',$gvt_func_class)
  do Format-CPDF-Field($Birthdate_Date,'GVT_CPDF_BIRTH_DT',$gvt_cpdf_birth_dt)
  do Format-CPDF-Field($Service_Date,'GVT_CPDF_SCD_DT',$gvt_cpdf_scd_dt)

  Do Get-Health-Plan

  Do Format-Service-Comp-Date

  Do Format-Military-Status

  Do Format-Special-Pay-Table

  let $parm-effdt          = &JOB1.effdt
  let $parm-pay-basis      = &JOBF.gvt_pay_basis
  let $parm-pay-rate-deter = &JOBF.gvt_pay_rate_deter
  let $parm-pay-plan       = &JOBF.GVT_PAY_PLAN
  let #parm-locality-adj   = &JOBF.GVT_LOCALITY_ADJ
  let $parm-setid          = &JOB1.SETID_DEPT
  let $parm-loc-setid      = &JOB1.SETID_LOCATION
  let $parm-location       = &JOB1.location
  do Format-CPDF-Field(&JOBF.gvt_pay_basis,'GVT_PAY_BASIS',$gvt_pay_basis)
  do Format-Locality-Pay

  do Format-CPDF-Field($locality_adj,'GVT_CPDF_LCLTY_PAY',$gvt_cpdf_lclty_pay)

  Do Format-Retained-Pay

  Do Format-Pay-Status

  Do Format-Position-Occupied

  ! Do Format-Pay-Basis

  Do Format-Differentials

  ! Get only rows as of the $AsOfDate (specific to Status)
  let $parm-effdt = $AsOfDate

  Do Format-Education

  Do Format-Current-Appt-Authority

end-procedure

!**********************************************************
begin-procedure Get-Health-Plan
!**********************************************************


if &JOBF.GVT_ELIG_FEHB = 'N'
   do Format-CPDF-Field('ZZZ','HEALTH_PLAN',$health_plan)
else
   do Format-CPDF-Field('ZZX','HEALTH_PLAN',$health_plan)

begin-select
HBEN.COVERAGE_ELECT
HBEN.BENEFIT_PLAN
HBEN.COVRG_CD
HBEN.PLAN_TYPE

  evaluate &HBEN.COVERAGE_ELECT
    when = 'W'
    when = 'T'
       do Format-CPDF-Field('ZZY','HEALTH_PLAN',$health_plan)
       break
    when-other
      let $health_plan = substr(&HBEN.BENEFIT_PLAN||&HBEN.COVRG_CD,1,3)
      do Format-CPDF-Field($health_plan,'HEALTH_PLAN',$health_plan)
      break
  end-evaluate

FROM PS_HEALTH_BENEFIT HBEN
WHERE HBEN.EMPLID           = &JOB1.EMPLID
AND   HBEN.EMPL_RCD         = &JOB1.EMPL_RCD
AND   HBEN.PLAN_TYPE        = {HEALTH-PLAN-TYPE}
AND   HBEN.BENEFIT_NBR      = 0
AND   HBEN.EFFDT            = (SELECT MAX(H1.EFFDT)
                              FROM PS_HEALTH_BENEFIT H1
                              WHERE H1.EMPLID        = HBEN.EMPLID
                              AND H1.EMPL_RCD        = HBEN.EMPL_RCD
                              AND H1.PLAN_TYPE       = HBEN.PLAN_TYPE
                              AND H1.BENEFIT_NBR     = HBEN.BENEFIT_NBR
                              AND H1.EFFDT          <= &JOB1.EFFDT)
end-select
end-if

! Replaced the following line with the one above and use &JOB1.EFFDT.
!                              AND H1.EFFDT          <= $Job_Effdt)

end-procedure

!**********************************************************
begin-procedure Format-Special-Pay-Table
!**********************************************************
evaluate &JOBF.GVT_PAY_RATE_DETER
  when = '5'   ! Special and Superior
  when = '6'   ! Special Rate
  when = 'M'   ! Continued IGA Pay
 ! OPM 695.05.1 status only
    if (&jobf.gvt_pay_plan = 'GM' or &jobf.gvt_pay_plan = 'GS') and IsBlank(&JOB1.sal_admin_plan)
      do Format-CPDF-Field('','SAL_ADMIN_PLAN',$sal_admin_plan)
    else
      do Format-CPDF-Field(&JOB1.sal_admin_plan,'SAL_ADMIN_PLAN',$sal_admin_plan)
    end-if
    break

 ! OPM 695.10.1
  when = 'E'   ! Retained Grade & special rate - Different Position
  when = 'F'   ! Retained Grade & special rate - Same Position
    if (&jobf.gvt_rtnd_pay_plan = 'GM' or &jobf.gvt_rtnd_pay_plan = 'GS') and IsBlank(&JOBF.GVT_RTND_SAL_PLAN)
      do Format-CPDF-Field('','SAL_ADMIN_PLAN',$sal_admin_plan)
    else
       do Format-CPDF-Field(&JOBF.gvt_rtnd_sal_plan,'SAL_ADMIN_PLAN', $sal_admin_plan)
    end-if
    break

  when-other
    do Format-CPDF-Field('','SAL_ADMIN_PLAN', $sal_admin_plan)
    break

end-evaluate


end-procedure

!**********************************************************
begin-procedure Format-Retained-Pay
!**********************************************************

  if (&JOBF.GVT_PAY_PLAN = 'GS' and &JOBF.GVT_RTND_PAY_PLAN = 'GM') or (&JOBF.GVT_PAY_PLAN = 'GM' and &JOBF.GVT_RTND_PAY_PLAN = 'GS')
  ! OPM 620.10.1 and OPM 620.13.1

     do Format-CPDF-Field('','GVT_CPDF_RTNERNPRG',$gvt_cpdf_rtnernprg)
     do Format-CPDF-Field('','GVT_CPDF_RTND_GRD',$gvt_cpdf_rtnd_grd)
     do Format-CPDF-Field('','GVT_CPDF_RTND_STEP',$gvt_cpdf_rtnd_step)
     do Format-CPDF-Field('','GVT_PAY_BASIS',$gvt_pay_basis)
     do Format-CPDF-Field('','GVT_BASIC_PAY',$gvt_basic_pay)

  else

     evaluate &JOBF.GVT_PAY_RATE_DETER
       when = 'A'
       when = 'B'
       when = 'E'
       when = 'F'
       when = 'U'
       when = 'V'

         if IsBlank(&JOBF.GVT_RTND_GRADE)   ! OPM 610.19.1 status only
            do Format-CPDF-Field('','GVT_CPDF_RTNERNPRG',$gvt_cpdf_rtnernprg)
            do Format-CPDF-Field('','GVT_CPDF_RTND_GRD',$gvt_cpdf_rtnd_grd)
            do Format-CPDF-Field('','GVT_CPDF_RTND_STEP',$gvt_cpdf_rtnd_step)
            do Format-CPDF-Field('','GVT_PAY_BASIS',$gvt_pay_basis)
            do Format-CPDF-Field('','GVT_BASIC_PAY',$gvt_basic_pay)
         else
            if IsBlank(&jobf.GVT_RTND_PAY_PLAN) or IsBlank(&jobf.GVT_RTND_GRADE)         ! OPM 620.04.1
               do Format-CPDF-Field('','GVT_CPDF_RTNERNPRG',$gvt_cpdf_rtnernprg)
               do Format-CPDF-Field('','GVT_CPDF_RTND_GRD',$gvt_cpdf_rtnd_grd)
               do Format-CPDF-Field('','GVT_CPDF_RTND_STEP',$gvt_cpdf_rtnd_step)
               do Format-CPDF-Field('','GVT_PAY_BASIS',$gvt_pay_basis)
               do Format-CPDF-Field('','GVT_BASIC_PAY',$gvt_basic_pay)
            else
               do Format-CPDF-Field(&JOBF.GVT_RTND_PAY_PLAN,'GVT_CPDF_RTNERNPRG',$gvt_cpdf_rtnernprg)
               let $adj_grade = &JOBF.GVT_RTND_GRADE
                     
               if rtrim($gvt_cpdf_rtnernprg, ' ') = 'EX'
                 let $parm-grade-in = &JOBF.GVT_RTND_GRADE
                 do Format-EX-Grade
               end-if
                      
               do Format-CPDF-Field($adj_grade,'GVT_CPDF_RTND_GRD',$gvt_cpdf_rtnd_grd)
               let $convert-gvt-rtnd-step = to_char(&JOBF.GVT_RTND_STEP)
               do Format-CPDF-Field($convert-gvt-rtnd-step,'GVT_CPDF_RTND_STEP',$gvt_cpdf_rtnd_step)
            end-if
         end-if
         break

       when-other
         do Format-CPDF-Field('','GVT_CPDF_RTNERNPRG',$gvt_cpdf_rtnernprg)
         do Format-CPDF-Field('','GVT_CPDF_RTND_GRD',$gvt_cpdf_rtnd_grd)
         do Format-CPDF-Field('','GVT_CPDF_RTND_STEP',$gvt_cpdf_rtnd_step)
         break
     end-evaluate

  end-if

end-procedure

!**********************************************************
begin-procedure Format-Pay-Status
!**********************************************************

  evaluate &JOB1.empl_status
    when = 'A'     !Active
    when = 'P'     !Leave with Pay
    when = 'Q'     !Retired with Pay
    when = 'U'     !Terminated with Pay
      do Format-CPDF-Field('P','GVT_CPDF_PAY_STAT',$gvt_cpdf_pay_stat)
      break
    when-other
      do Format-CPDF-Field('N','GVT_CPDF_PAY_STAT',$gvt_cpdf_pay_stat)
      break
  end-evaluate

end-procedure

!**********************************************************
begin-procedure Check-ES-Pay-Plan-2nd-Auth
!**********************************************************

evaluate &JOBF.gvt_curr_apt_auth2
  when = 'AWM'
  when = 'BWM'
  when = 'HAM'
  when = 'ZLM'
  when = '   '
    break
  when-other
     do Format-CPDF-Field('','GVT_CURR_APT_AUTH2',$gvt_curr_apt_auth2)
end-evaluate

end-procedure

!**********************************************************
begin-procedure Check-Posn-Occupied-Either
!**********************************************************
! OPM 100.19.1  status only

evaluate $authtest
  when = 'ABS'
  when = 'ACM'
  when = 'AYM'
  when = 'A2M'
  when = 'A7M'
  when = 'BBM'
  when = 'BEA'
  when = 'BGL'
  when = 'BKM'
  when = 'BLM'
  when = 'BMA'
  when = 'BMC'
  when = 'BNE'
  when = 'BNK'
  when = 'BNW'
  when = 'BRM'
  when = 'BSE'
  when = 'BSS'
  when = 'BSW'
  when = 'BTM'
  when = 'BWA'
  when = 'BWE'
  when = 'CTM'
  when = 'HDM'
  when = 'HGM'
  when = 'HJM'
  when = 'HLM'
  when = 'HNM'
  when = 'HRM'
  when = 'H3M'
  when = 'JEM'
  when = 'JGM'
  when = 'JJM'
  when = 'JMM'
  when = 'JQM'
  when = 'JVM'
  when = 'J4M'
  when = 'KLM'
  when = 'KQM'
  when = 'KTM'
  when = 'KVM'
  when = 'KXM'
  when = 'K1M'
  when = 'K4M'
  when = 'K7M'
  when = 'K9M'
  when = 'LBM'
  when = 'LEM'
  when = 'LHM'
  when = 'LJM'
  when = 'LKM'
  when = 'LKP'
  when = 'LLM'
  when = 'LPM'
  when = 'LSM'
  when = 'LWM'
  when = 'LYM'
  when = 'LZM'
  when = 'L1K'
  when = 'L1M'
  when = 'L3M'
  when = 'MAM'
  when = 'MBM'
  when = 'MCM'
  when = 'MEM'
  when = 'MGM'
  when = 'MJM'
  when = 'MLL'
  when = 'MLM'
  when = 'MMM'
  when = 'MXM'
  when = 'MYM'
  when = 'MZM'
  when = 'M1M'
  when = 'M6M'
  when = 'M8M'
  when = 'NAM'
  when = 'NCM'
  when = 'NEL'
  when = 'NEM'
  when = 'NFM'
  when = 'NJM'
  when = 'NMM'
  when = 'NUM'
  when = 'Q3M'
  when = 'VHM'
  when = 'VJM'
  when = 'V8L'
  when = 'V8N'
  when = 'VBA'
  when = 'ZGM'
  when = 'ZGY'
  when = 'ZJK'
  when = 'ZJM'
  when = 'ZMM'
  when = 'ZQM'
  when = 'ZTM'
  when = 'Z2W'
    if &JOBF.GVT_POSN_OCCUPIED <> '1' and Not IsBlank(&JOBF.GVT_POSN_OCCUPIED)
        move '' to $authtest
    end-if
    break

end-evaluate

end-procedure

!**********************************************************
begin-procedure Check-Posn-Occupied-1st-Auth
!**********************************************************
! OPM 100.10.1 status only
evaluate &JOBF.gvt_curr_apt_auth1
  when = 'BPM'
  when = 'H2L'
  when = 'J8M'
  when = 'JYM'
  when = 'KDM'
  when = 'KFM'
  when = 'KHM'
  when = 'UFM'
  when = 'V8K'
  when = 'VEM'
  when = 'VPE'
  when = 'ZVB'
    if &JOBF.GVT_POSN_OCCUPIED <> '2' and Not IsBlank(&JOBF.GVT_POSN_OCCUPIED)
        do Format-CPDF-Field('','GVT_CURR_APT_AUTH1',$gvt_curr_apt_auth1)
    end-if
    break

  when-other
    let $auth-category = substr(&JOBF.gvt_curr_apt_auth1,1,1)
    evaluate $auth-category
      when = 'T'
      when = 'W'
      when = 'X'
      when = 'Y'
         if &jobf.gvt_posn_occupied <> '2' and Not IsBlank(&JOBF.GVT_POSN_OCCUPIED)
             do Format-CPDF-Field('','GVT_CURR_APT_AUTH1',$gvt_curr_apt_auth1)
         end-if
         break
    end-evaluate
end-evaluate

end-procedure

!**********************************************************
begin-procedure Write-Status-Submission-Record
!**********************************************************

add 1 to #rec-written-count

#debugd Show 'EFFDT/EFFSEQ         :'   &job1.effdt '/' &job1.effseq
#debugd Show 'COMPANY              :'   $agency
#debugd Show 'AGENCY_SUBELEMENT    :'   $agency_subelement
#debugd Show 'GVT_CPDF_RUN_DT      :'   $AsOfDate
#debugd Show 'EMPLID               :'   &JOB1.emplid
#debugd Show 'EMPL_RCD             :'   &JOB1.empl_rcd
#debugd Show 'SSN                  :'   $ssn
#debugd Show 'GVT_DEPTID_CPDF      :'   $gvt_deptid_cpdf
#debugd Show 'GVT_POI              :'   $gvt_poi
#debugd Show 'GVT_CPDF_BIRTH_DT    :'   $gvt_cpdf_birth_dt
#debugd Show 'GVT_VET_PREF_APPT    :'   $gvt_vet_pref_appt
#debugd Show 'GVT_TENURE           :'   $gvt_tenure
#debugd Show 'GVT_CPDF_SCD_DT      :'   $gvt_cpdf_scd_dt
#debugd Show 'GVT_RETIRE_PLAN      :'   $gvt_retire_plan
#debugd Show 'GVT_CRED_MIL_SVCE    :'   $gvt_cred_mil_svce
#debugd Show 'GVT_CSRS_FROZN_SVC   :'   $gvt_csrs_frozn_svc
#debugd Show 'GVT_FEGLI            :'   $gvt_fegli
#debugd Show 'HEALTH_PLAN          :'   $health_plan
#debugd Show 'MILITARY_STATUS      :'   $military_status
#debugd Show 'GVT_ANN_IND          :'   $gvt_ann_ind
#debugd Show 'CITIZENSHIP_STATUS   :'   $citizenship_status
#debugd Show 'SEX                  :'   $sex
#debugd Show 'ETHNIC_GROUP         :'   $ethnic_group
#debugd Show 'GVT_DISABILITY_CD    :'   $gvt_disability_cd
#debugd Show 'GVT_CPDF_ERN_PROG    :'   $gvt_cpdf_ern_prog
#debugd Show 'GVT_OCC_SERIES       :'   $gvt_occ_series
#debugd Show 'GVT_CPDF_GRADE       :'   $gvt_cpdf_grade
#debugd Show 'GVT_STEP             :'   $gvt_step
#debugd Show 'GVT_CPDF_BASIC_PAY   :'   $gvt_cpdf_basic_pay
#debugd Show 'GVT_FUNC_CLASS       :'   $gvt_func_class
#debugd Show 'GVT_PAY_BASIS        :'   $gvt_pay_basis
#debugd Show 'GVT_WORK_SCHED       :'   $gvt_work_sched
#debugd Show 'GVT_PAY_RATE_DETER   :'   $gvt_pay_rate_deter
#debugd Show 'GVT_POSN_OCCUPIED    :'   $gvt_posn_occupied
#debugd Show 'GVT_CPDF_SUPV_STAT   :'   $gvt_cpdf_supv_stat
#debugd Show 'FLSA_STATUS          :'   $flsa_status
#debugd Show 'BARG_UNIT            :'   $barg_unit
#debugd Show 'GVT_CPDF_LOCATION    :'   $gvt_cpdf_location
#debugd Show 'GVT_CURR_APT_AUTH1   :'   $gvt_curr_apt_auth1
#debugd Show 'GVT_CURR_APT_AUTH2   :'   $gvt_curr_apt_auth2
#debugd Show 'GVT_CPDF_RTNERNPRG   :'   $gvt_cpdf_rtnernprg
#debugd Show 'GVT_CPDF_RTND_GRD    :'   $gvt_cpdf_rtnd_grd
#debugd Show 'GVT_CPDF_RTND_STEP   :'   $gvt_cpdf_rtnd_step
#debugd Show 'REVIEW_RATING        :'   $review_rating
#debugd Show 'GVT_CPDF_REVW_PTRN   :'   $gvt_cpdf_revw_ptrn
#debugd Show 'GVT_CPDF_REV_PRD     :'   $gvt_cpdf_rev_prd
#debugd Show 'GVT_CPDF_PAY_STAT    :'   $gvt_cpdf_pay_stat
#debugd Show 'GVT_FERS_COVERAGE    :'   $gvt_fers_coverage
#debugd Show 'GVT_CPDF_LCLTY_PAY   :'   $gvt_cpdf_lclty_pay
#debugd Show 'GVT_CPDF_STFF_DIFF   :'   $gvt_cpdf_stff_diff
#debugd Show 'GVT_CPDF_SUPV_DIFF   :'   $gvt_cpdf_supv_diff
#debugd Show 'GVT_CPDF_RET_ALLW    :'   $gvt_cpdf_ret_allw
#debugd Show 'SAL_ADMIN_PLAN       :'   $sal_admin_plan
#debugd Show 'GVT_CPDF_HI_ED_LVL   :'   $gvt_cpdf_hi_ed_lvl
#debugd Show 'GVT_CPDF_YR_OF_DEG   :'   $gvt_cpdf_yr_of_deg
#debugd Show 'GVT_CPDF_INST_PROG   :'   $gvt_cpdf_inst_prog
!*************** Incident 1100365005 *******
#debugd Show 'GVT_CPDF_LAST_NAME   :'   $gvt_cpdf_last_name
#debugd Show 'GVT_CPDF_FIRST_NAM   :'   $gvt_cpdf_first_name
#debugd Show 'GVT_CPDF_MID_NAME    :'   $gvt_cpdf_middle_name
#debugd Show 'GVT_CPDF_SUFFIX      :'   $gvt_cpdf_name_suffix
#debugd Show 'GVT_CPDF_POS_TITLE   :'   $gvt_cpdf_descr
#debugd Show 'GVT_CPDF_SCD_RETIR   :'   $gvt_cpdf_gvt_scd_retire
#debugd Show 'GVT_CPDF_SCD_RIF     :'   $gvt_cpdf_cmpny_seniority_dt
!*************** Incident 1100365005 *******


begin-sql
INSERT INTO PS_GVT_CPDF_STATUS
(
COMPANY,
AGENCY_SUBELEMENT,
GVT_CPDF_RUN_DT,
EMPLID,
EMPL_RCD,
SSN,
GVT_DEPTID_CPDF,
GVT_POI,
GVT_CPDF_BIRTH_DT,
GVT_VET_PREF_APPT,
GVT_TENURE,
GVT_CPDF_SCD_DT,
GVT_RETIRE_PLAN,
GVT_CRED_MIL_SVCE,
GVT_CSRS_FROZN_SVC,
GVT_FEGLI,
HEALTH_PLAN,
MILITARY_STATUS,
GVT_ANN_IND,
CITIZENSHIP_STATUS,
SEX,
ETHNIC_GROUP,
GVT_DISABILITY_CD,
GVT_CPDF_ERN_PROG,
GVT_OCC_SERIES,
GVT_CPDF_GRADE,
GVT_STEP,
GVT_CPDF_BASIC_PAY,
GVT_FUNC_CLASS,
GVT_PAY_BASIS,
GVT_WORK_SCHED,
GVT_PAY_RATE_DETER,
GVT_POSN_OCCUPIED,
GVT_CPDF_SUPV_STAT,
FLSA_STATUS,
BARG_UNIT,
GVT_CPDF_LOCATION,
GVT_CURR_APT_AUTH1,
GVT_CURR_APT_AUTH2,
GVT_CPDF_RTNERNPRG,
GVT_CPDF_RTND_GRD,
GVT_CPDF_RTND_STEP,
REVIEW_RATING,
GVT_CPDF_REVW_PTRN,
GVT_CPDF_REV_PRD,
GVT_CPDF_PAY_STAT,
GVT_FERS_COVERAGE,
GVT_CPDF_LCLTY_PAY,
GVT_CPDF_STFF_DIFF,
GVT_CPDF_SUPV_DIFF,
GVT_CPDF_RET_ALLW,
SAL_ADMIN_PLAN,
GVT_CPDF_HI_ED_LVL,
GVT_CPDF_YR_OF_DEG,
GVT_CPDF_INST_PROG,
GVT_CPDF_LAST_NAME,                                              !*************** Incident 1100365005 *******
GVT_CPDF_FIRST_NAM,
GVT_CPDF_MID_NAME,
GVT_CPDF_SUFFIX,
GVT_CPDF_POS_TITLE,
GVT_CPDF_SCD_RETIR,
GVT_CPDF_SCD_RIF                                     !*************** Incident 1100365005 *******
)
VALUES
(
$agency,
$agency_subelement,
$AsOfToday,
&JOB1.emplid,
&JOB1.empl_rcd,
$ssn,
$gvt_deptid_cpdf,
$gvt_poi,
$gvt_cpdf_birth_dt,
$gvt_vet_pref_appt,
$gvt_tenure,
$gvt_cpdf_scd_dt,
$gvt_retire_plan,
$gvt_cred_mil_svce,
$gvt_csrs_frozn_svc,
$gvt_fegli,
$health_plan,
$military_status,
$gvt_ann_ind,
$citizenship_status,
$sex,
$ethnic_group,
$gvt_disability_cd,
$gvt_cpdf_ern_prog,
$gvt_occ_series,
$gvt_cpdf_grade,
$gvt_step,
$gvt_cpdf_basic_pay,
$gvt_func_class,
$gvt_pay_basis,
$gvt_work_sched,
$gvt_pay_rate_deter,
$gvt_posn_occupied,
$gvt_cpdf_supv_stat,
$flsa_status,
$barg_unit,
$gvt_cpdf_location,
$gvt_curr_apt_auth1,
$gvt_curr_apt_auth2,
$gvt_cpdf_rtnernprg,
$gvt_cpdf_rtnd_grd,
$gvt_cpdf_rtnd_step,
$review_rating,
$gvt_cpdf_revw_ptrn,
$gvt_cpdf_rev_prd,
$gvt_cpdf_pay_stat,
$gvt_fers_coverage,
$gvt_cpdf_lclty_pay,
$gvt_cpdf_stff_diff,
$gvt_cpdf_supv_diff,
$gvt_cpdf_ret_allw,
$sal_admin_plan,
$gvt_cpdf_hi_ed_lvl,
$gvt_cpdf_yr_of_deg,
$gvt_cpdf_inst_prog,
$gvt_cpdf_last_name,                                         !***************** Incident 1100365005 *******
$gvt_cpdf_first_name,
$gvt_cpdf_middle_name,
$gvt_cpdf_name_suffix,
$gvt_cpdf_descr,
$gvt_cpdf_gvt_scd_retire,
$gvt_cpdf_cmpny_seniority_dt                                 !***************** Incident 1100365005 *******
)
end-sql
end-procedure

begin-procedure Write-Online-Validation-Record
Let $GVT_EDIT_ID = '1'
Let $agency  = &JOB1.COMPANY
#debugd Show 'EFFDT/EFFSEQ         :'   &job1.effdt '/' &job1.effseq
#debugd Show 'COMPANY              :'   $agency
#debugd Show 'AGENCY_SUBELEMENT    :'   $agency_subelement
#debugd Show 'GVT_CPDF_RUN_DT      :'   $AsOfDate
#debugd Show 'EMPLID               :'   &JOB1.emplid
#debugd Show 'EMPL_RCD             :'   &JOB1.empl_rcd
#debugd Show 'SSN                  :'   $ssn
#debugd Show 'GVT_DEPTID_CPDF      :'   $gvt_deptid_cpdf
#debugd Show 'GVT_POI              :'   $gvt_poi
#debugd Show 'GVT_CPDF_BIRTH_DT    :'   $gvt_cpdf_birth_dt
#debugd Show 'GVT_VET_PREF_APPT    :'   $gvt_vet_pref_appt
#debugd Show 'GVT_TENURE           :'   $gvt_tenure
#debugd Show 'GVT_CPDF_SCD_DT      :'   $gvt_cpdf_scd_dt
#debugd Show 'GVT_RETIRE_PLAN      :'   $gvt_retire_plan
#debugd Show 'GVT_CRED_MIL_SVCE    :'   $gvt_cred_mil_svce
#debugd Show 'GVT_CSRS_FROZN_SVC   :'   $gvt_csrs_frozn_svc
#debugd Show 'GVT_FEGLI            :'   $gvt_fegli
#debugd Show 'HEALTH_PLAN          :'   $health_plan
#debugd Show 'MILITARY_STATUS      :'   $military_status
#debugd Show 'GVT_ANN_IND          :'   $gvt_ann_ind
#debugd Show 'CITIZENSHIP_STATUS   :'   $citizenship_status
#debugd Show 'SEX                  :'   $sex
#debugd Show 'ETHNIC_GROUP         :'   $ethnic_group
#debugd Show 'GVT_DISABILITY_CD    :'   $gvt_disability_cd
#debugd Show 'GVT_CPDF_ERN_PROG    :'   $gvt_cpdf_ern_prog
#debugd Show 'GVT_OCC_SERIES       :'   $gvt_occ_series
#debugd Show 'GVT_CPDF_GRADE       :'   $gvt_cpdf_grade
#debugd Show 'GVT_STEP             :'   $gvt_step
#debugd Show 'GVT_CPDF_BASIC_PAY   :'   $gvt_cpdf_basic_pay
#debugd Show 'GVT_FUNC_CLASS       :'   $gvt_func_class
#debugd Show 'GVT_PAY_BASIS        :'   $gvt_pay_basis
#debugd Show 'GVT_WORK_SCHED       :'   $gvt_work_sched
#debugd Show 'GVT_PAY_RATE_DETER   :'   $gvt_pay_rate_deter
#debugd Show 'GVT_POSN_OCCUPIED    :'   $gvt_posn_occupied
#debugd Show 'GVT_CPDF_SUPV_STAT   :'   $gvt_cpdf_supv_stat
#debugd Show 'FLSA_STATUS          :'   $flsa_status
#debugd Show 'BARG_UNIT            :'   $barg_unit
#debugd Show 'GVT_CPDF_LOCATION    :'   $gvt_cpdf_location
#debugd Show 'GVT_CURR_APT_AUTH1   :'   $gvt_curr_apt_auth1
#debugd Show 'GVT_CURR_APT_AUTH2   :'   $gvt_curr_apt_auth2
#debugd Show 'GVT_CPDF_RTNERNPRG   :'   $gvt_cpdf_rtnernprg
#debugd Show 'GVT_CPDF_RTND_GRD    :'   $gvt_cpdf_rtnd_grd
#debugd Show 'GVT_CPDF_RTND_STEP   :'   $gvt_cpdf_rtnd_step
#debugd Show 'REVIEW_RATING        :'   $review_rating
#debugd Show 'GVT_CPDF_REVW_PTRN   :'   $gvt_cpdf_revw_ptrn
#debugd Show 'GVT_CPDF_REV_PRD     :'   $gvt_cpdf_rev_prd
#debugd Show 'GVT_CPDF_PAY_STAT    :'   $gvt_cpdf_pay_stat
#debugd Show 'GVT_FERS_COVERAGE    :'   $gvt_fers_coverage
#debugd Show 'GVT_CPDF_LCLTY_PAY   :'   $gvt_cpdf_lclty_pay
#debugd Show 'GVT_CPDF_STFF_DIFF   :'   $gvt_cpdf_stff_diff
#debugd Show 'GVT_CPDF_SUPV_DIFF   :'   $gvt_cpdf_supv_diff
#debugd Show 'GVT_CPDF_RET_ALLW    :'   $gvt_cpdf_ret_allw
#debugd Show 'SAL_ADMIN_PLAN       :'   $sal_admin_plan
#debugd Show 'GVT_CPDF_HI_ED_LVL   :'   $gvt_cpdf_hi_ed_lvl
#debugd Show 'GVT_CPDF_YR_OF_DEG   :'   $gvt_cpdf_yr_of_deg
#debugd Show 'GVT_CPDF_INST_PROG   :'   $gvt_cpdf_inst_prog


begin-sql
INSERT INTO PS_GVT_CPDF_ONLINE
(
OPRID,
EMPLID,
EMPL_RCD,
EFFDT,
EFFSEQ,
GVT_EDIT_ID,
COMPANY,
AGENCY_SUBELEMENT,
GVT_CPDF_RUN_DT,
SSN,
GVT_DEPTID_CPDF,
GVT_POI,
GVT_CPDF_BIRTH_DT,
GVT_VET_PREF_APPT,
GVT_TENURE,
GVT_CPDF_SCD_DT,
GVT_RETIRE_PLAN,
GVT_CRED_MIL_SVCE,
GVT_CSRS_FROZN_SVC,
GVT_FEGLI,
HEALTH_PLAN,
MILITARY_STATUS,
GVT_ANN_IND,
CITIZENSHIP_STATUS,
SEX,
ETHNIC_GROUP,
GVT_DISABILITY_CD,
GVT_CPDF_ERN_PROG,
GVT_OCC_SERIES,
GVT_CPDF_GRADE,
GVT_STEP,
GVT_CPDF_BASIC_PAY,
GVT_FUNC_CLASS,
GVT_PAY_BASIS,
GVT_WORK_SCHED,
GVT_PAY_RATE_DETER,
GVT_POSN_OCCUPIED,
GVT_CPDF_SUPV_STAT,
FLSA_STATUS,
BARG_UNIT,
GVT_CPDF_LOCATION,
GVT_CURR_APT_AUTH1,
GVT_CURR_APT_AUTH2,
GVT_CPDF_RTNERNPRG,
GVT_CPDF_RTND_GRD,
GVT_CPDF_RTND_STEP,
REVIEW_RATING,
GVT_CPDF_REVW_PTRN,
GVT_CPDF_REV_PRD,
GVT_CPDF_PAY_STAT,
GVT_FERS_COVERAGE,
GVT_CPDF_LCLTY_PAY,
GVT_CPDF_STFF_DIFF,
GVT_CPDF_SUPV_DIFF,
GVT_CPDF_RET_ALLW,
SAL_ADMIN_PLAN,
GVT_CPDF_HI_ED_LVL,
GVT_CPDF_YR_OF_DEG,
GVT_CPDF_INST_PROG,
SEQUENCE_NBR,
GVT_PREV_RET_COVRG,
GVT_NOA_CODE,
GVT_NOA_CODE_2,
GVT_LEG_AUTH_1,
GVT_LEG_AUTH_2,
GVT_AWARD_GROUP,
GVT_CPDF_AWARD_AMT,
GVT_CPDF_BEN_AMT,
GVT_CPDF_ERN_PROG1,
GVT_CPDF_OCC_SER1,
GVT_CPDF_GRADE1,
GVT_CPDF_PREV_STEP,
GVT_CPDF_PR_PAY,
GVT_CPDF_PAY_BAS1,
GVT_CPDF_WORK_SCH1,
GVT_CPDF_PAYRTDET1,
GVT_CPDF_CORR_NOA,
GVT_CPDF_COR_NOADT,
GVT_CPDF_CORR_SSN,
GVT_CPDF_PR_LCLADJ,
GVT_CPDF_PR_DTY_ST,
GVT_CPDF_NAME,
GVT_CPDF_LAST_NAME,      
GVT_CPDF_FIRST_NAM,
GVT_CPDF_MID_NAME,
GVT_CPDF_SUFFIX,
GVT_CPDF_POS_TITLE,
GVT_CPDF_SCD_RETIR,
GVT_CPDF_SCD_RIF,
GVT_CPDF_GOAL_AMT,
GVT_CPDF_OTH_HRS,
GVT_CPDF_AWD_PRCNT
)
VALUES
(
$Prcs_OprID,
&JOB1.emplid,
&JOB1.empl_rcd,
&JOB1.effdt,
#KEFFSEQ,
$GVT_EDIT_ID,
$agency,
$agency_subelement,
$AsOfToday,
$ssn,
$gvt_deptid_cpdf,
$gvt_poi,
$gvt_cpdf_birth_dt,
$gvt_vet_pref_appt,
$gvt_tenure,
$gvt_cpdf_scd_dt,
$gvt_retire_plan,
$gvt_cred_mil_svce,
$gvt_csrs_frozn_svc,
$gvt_fegli,
$health_plan,
$military_status,
$gvt_ann_ind,
$citizenship_status,
$sex,
$ethnic_group,
$gvt_disability_cd,
$gvt_cpdf_ern_prog,
$gvt_occ_series,
$gvt_cpdf_grade,
$gvt_step,
$gvt_cpdf_basic_pay,
$gvt_func_class,
$gvt_pay_basis,
$gvt_work_sched,
$gvt_pay_rate_deter,
$gvt_posn_occupied,
$gvt_cpdf_supv_stat,
$flsa_status,
$barg_unit,
$gvt_cpdf_location,
$gvt_curr_apt_auth1,
$gvt_curr_apt_auth2,
$gvt_cpdf_rtnernprg,
$gvt_cpdf_rtnd_grd,
$gvt_cpdf_rtnd_step,
$review_rating,
$gvt_cpdf_revw_ptrn,
$gvt_cpdf_rev_prd,
$gvt_cpdf_pay_stat,
$gvt_fers_coverage,
$gvt_cpdf_lclty_pay,
$gvt_cpdf_stff_diff,
$gvt_cpdf_supv_diff,
$gvt_cpdf_ret_allw,
$sal_admin_plan,
$gvt_cpdf_hi_ed_lvl,
$gvt_cpdf_yr_of_deg,
$gvt_cpdf_inst_prog,
0 ,
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
' ',
$gvt_cpdf_last_name,
$gvt_cpdf_first_name,
$gvt_cpdf_middle_name,
$gvt_cpdf_name_suffix,
$gvt_cpdf_descr,
$gvt_cpdf_gvt_scd_retire,
$gvt_cpdf_cmpny_seniority_dt,
' ',
' ',
' '
)
end-sql


end-procedure

#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'curdttim.sqc'  !Routines to get current date/time
#Include 'datemath.sqc'  !Routines to perform math on dates
#include 'stdapi.sqc'    !Routine to update Run status
#Include 'fgrunctl.sqc'  !Get run control parameter values
#Include 'fggetval.sqc'  !Get values mask routines
#Include 'askaod.sqc'    !Ask asofdate
#Include 'reset.sqc'     !Reset printer
#Include 'fghr019x.sqc'  !CPDF field format setup and lookup procedures
#include 'fghr019s.sqc'  !Procedures shared/common to both Dynamic and Status
