!***********************************************************************
!  STES009: Broker Deposits                                            *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2007/06/11:04:09:36                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689716                                              !
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
! Program Descr: Prints Broker Deposit Information  for a given Stock ID
!      
!----------------------------------------------------------------------
! Prompts:       Transfer Control #, Stock ID, Reprint , Control #, Brokerage ID,
!                Branch ID
! Tables:        RUN_CNTL_ST, PS_ST_ESPP_PURCH, PS_ST_BRKR_BRANCH, PS_STOCK_BRNCH_DTL,
!                PS_STOCK_BRANCH, PS_PERSON_NAME, PS_PERS_NID,   
! Sorts:         ESPP_QUICK_SALES,  EMPLID
!----------------------------------------------------------------------
#include 'setenv.sqc'    !Set environment
!--------------------------------------------------------------------
Begin-Setup
!--------------------------------------------------------------------

 #include 'ptpsl177.sqc'
 #define ST_BRKR_BRANCH

End-Setup

!----------------------------------------------------------------------
begin-report
!----------------------------------------------------------------------

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime      
  do Init-Report
  do Process-Main
  do Reset
  do Successful-EOJ

End-Report

!----------------------------------------------------------------------!
! Procedure: Report-Translation                                        !
! Desc:      This procedure gets the report language and headers       !
!----------------------------------------------------------------------!
Begin-Procedure Report-Translation

  do Init_Report_Translation ('STOCK', $language_cd)
  do Append_Report_Translation ($ReportID)

  do Get_Field_Information ('STOCK','NAME',              $NameLbl,          #DW)
  do Get_Field_Information ('STOCK','NID',               $NidLbl,           #DW)
  do Get_Field_Information ('STOCK','NUMBER',            $NumberLbl,        #DW)
  do Get_Field_Information ('STOCK','DATE',              $DateLbl,          #DW)
  do Get_Field_Information ('STOCK','SHARES',            $SharesLbl,        #DW)
  do Get_Field_Information ('STOCK','GRAND_TOTAL',       $GrandTotalLbl,    #DW)
  do Get_Field_Information ('STOCK','TRANSFER_CNTL_NO',  $TransferLbl,      #DW)
  do Get_Field_Information ('STOCK','EMPLID',            $EmplidLbl,        #DW)
  do Get_Field_Information ('STOCK','STOCK_PLAN_DESC',   $StockPlanLbl,     #DW)
  do Get_Field_Information ('STOCK','STOCK_ID',          $StockIdLbl,       #DW)

  do Get_Field_Information ('STES009','TRANSACTION',     $TransactionLbl,   #DW)
  do Get_Field_Information ('STES009','CONTROL_NO',      $ControlLbl,       #DW)
  do Get_Field_Information ('STES009','REPRINT',         $ReprintLbl,       #DW)
  do Get_Field_Information ('STES009','FBO',             $FboLbl,           #DW)
  do Get_Field_Information ('STES009','NO_OF',           $NoOfLbl,          #DW)
  do Get_Field_Information ('STES009','BROKER',          $BrokerLbl,        #DW)
  do Get_Field_Information ('STES009','STES009',         $Reporttitle,      #DW)
  do Get_Field_Information ('STES009','IN-QUICKSALE',    $QuicksaleLbl,     #DW)
  do Get_Field_Information ('STES009','SUBTOTAL',        $SubTotalLbl,      #DW)
  do Get_Field_Information ('STES009','ACCOUNT-NUMBER',  $AccountNumberLbl, #DW)
  do Get_Field_Information ('STES009','QUICK_SALE_TOTAL',$QuickSaleTotalLbl,#DW)
  do Get_Field_Information ('STES009','CUSIP_NUMBER',    $CusipNbrLbl,      #DW)
  do Get_Field_Information ('STES009','PARTICIPATING',   $ParticipatingLbl, #DW)

End-Procedure

!----------------------------------------------------------------------
Begin-Procedure Init-Report
!----------------------------------------------------------------------
  move 'STES009' to $ReportID
  display $ReportTitle

  !do Get-Report-Language

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Define-Prcs-Vars
  do Get-Run-Control-Parms
  do Get-Report-Language

  if $prcs_process_instance = ''
     do Get-Stock-Values
  else
     do Get-SQR-Parms
  end-if

Begin-Select

Z.CUSIP_NBR

  let $CusipNbr = rtrim(&z.cusip_nbr, ' ')

from PS_STOCK_TBL Z
 where STOCK_ID = $RC_STOCK_ID

End-Select

  if $RC_REPRINT_PROMPT = 'Y'
    let $MAX_CNTL_NO  = $RC_BRANCH_CNTL_NBR
  end-if

End-Procedure

!----------------------------------------------------------------------
Begin-Procedure Get-Stock-Values
!----------------------------------------------------------------------

  INPUT $RC_STOCK_ID              MAXLEN=10  'Enter Stock ID'                     TYPE=CHAR
  INPUT #RC_TRANSFER_CNTL_NBR     MAXLEN=10  'Enter Transfer Control number'      TYPE=integer
  INPUT $RC_BROKERAGE_ID          MAXLEN=10  'Enter Brokerage ID'                 TYPE=CHAR
  INPUT $RC_BRANCH_ID             MAXLEN=10  'Enter Brokerage ID'                 TYPE=CHAR
  INPUT $RC_REPRINT_PROMPT        MAXLEN=1   'Enter Transaction Type'             TYPE=CHAR

  if $RC_REPRINT_PROMPT = 'Y'
    INPUT $RC_BRANCH_CNTL_NBR MAXLEN=12  'Enter Control Number'                  TYPE=CHAR
  end-if

End-Procedure

!----------------------------------------------------------------------
begin-heading 14
!----------------------------------------------------------------------

  #include 'stdhdg01.sqc'
  print $StockIdLbl                                        (03,001,008)
  print ':'                                                (  ,000,001)
  print $RC_STOCK_ID                                       (  ,023,008)
  print $TransferLbl                                       (04,001,020)
  print ':'                                                (  ,000,001)
  let $CntrolNumber = TO_CHAR (#RC_TRANSFER_CNTL_NBR)
  print $CntrolNumber                                      (  ,023,006)
  print $CusipNbrLbl                                       (05,001,013)
  print $CusipNbr                                          (  ,023,009)
  if $RC_REPRINT_PROMPT = 'Y'
    print $ReprintLbl                                      (06,001,008)
    print $RC_REPRINT_PROMPT                               (  ,023,001)
  end-if
  print $ControlLbl                                        (04,084,009) bold
  print ':'                                                (  ,000,001) bold
  if $RC_REPRINT_PROMPT = 'N'
    print $LastControlNbr                                  (  , +2,010) bold
  else
    print $RC_BRANCH_CNTL_NBR                              (  , +2,010) bold
  end-if
  print $BrokerDescr                                       (06,084,030) bold
  print $BranchDescr                                       (07,084,030) bold
  print $Address1                                          (08,084,035) bold
  if $Address2 <> ''
    print $Address2                                        (+1,084,035) bold
  end-if
  Let $City-Zip = $City ||', '|| $State ||' '|| $Postal
  print $City-Zip                                          (+1,084,042) bold
  print $Country                                           (+1,084,003) bold
  print $Phone                                             (+1,084,024) bold

  print $TransactionLbl                                    (+1,001,011)
  print $ParticipatingLbl                                  (  ,146,005)
  print $DateLbl                                           (+1,001,005)
  print $NameLbl                                           (  ,014,020)
  print $EmplidLbl                                         (  ,051,011)
  print $NidLbl                                            (  ,064,006)
  print $AccountNumberLbl                                  (  ,086,014)
  print $StockPlanLbl                                      (  ,105,010)
  print $NoOfLbl                                           (  ,126,006)
  print $SharesLbl                                         (  ,133,006)
  print $QuicksaleLbl                                      (  ,146,005)
  print '-'                                                (+1,001,150) fill

End-Heading

!----------------------------------------------------------------------!
! Procedure:  Process-Main                                             !
! Descr:      This is where all required data is selected              !
!----------------------------------------------------------------------!
Begin-Procedure Process-Main

  do Build-Where-Clause
  do Process-Records

End-Procedure

!----------------------------------------------------------------------
Begin-Procedure Build-Where-Clause
!----------------------------------------------------------------------

  let $SQLQuote          = ''''
  let $WhereBranch       = ''
  let $WhereBrokerID     = ''
  let $WhereBranchID     = ''

  if $RC_BROKERAGE_ID <> ''
    let $WhereBrokerID = ' and A.ST_BROKERAGE_ID = '||$SQLQuote || $RC_BROKERAGE_ID || $SQLQuote
  else
    let $WhereBrokerID = ''
  end-if

  if $RC_BRANCH_ID <> ''
    let $WhereBranchID = ' and A.ST_BRANCH_ID = '||$SQLQuote || $RC_BRANCH_ID || $SQLQuote
  else
    let $WhereBranchID = ''
  end-if

  if $RC_REPRINT_PROMPT = 'Y'
    let $WhereBranch = ' and A.BRANCH_CNTL_NBR = ' || $SQLQuote || $MAX_CNTL_NO || $SQLQuote
  else
    let $WhereBranch = ' and A.BRANCH_ISSUE_DT IS NULL'
  end-if

End-Procedure


!----------------------------------------------------------------------!
! Procedure:  Process-Records                                          !
! Descr:      This is where all required data is selected              !
!----------------------------------------------------------------------!
Begin-Procedure Process-Records

Begin-Select

NB.NAME
A.EMPLID
A.STOCK_PLAN
A.OFFERING_ID
A.PERIOD_END_DT
A.PROCESS_GROUP
A.ST_BROKERAGE_ID
A.ST_BRANCH_ID
A.ST_ACCOUNT_NBR
A.SHARES_PURCHASED
A.ESPP_QUICK_SALES
NC.NATIONAL_ID

  let #Rows            = #Rows + 1
  let $Emplid          = rtrim(&a.emplid, ' ')
  let $StockPlan       = rtrim(&a.stock_plan, ' ')
  let $OfferingId      = rtrim(&a.offering_id, ' ')
  let $PeriodEndDt     = rtrim(&a.period_end_dt, ' ')
  let $ProcessGroup    = rtrim(&a.process_group, ' ')
  let $BrokerId        = rtrim(&a.st_brokerage_id, ' ')
  let $BranchId        = rtrim(&a.st_branch_id, ' ')
  let $AccountNbr      = rtrim(&a.st_account_nbr, ' ')
  let #SharesIssued    = &a.shares_purchased
  let $QuickSales      = rtrim(&a.espp_quick_sales, ' ')

  let $Name = rtrim(&nb.name, ' ')
  do Rotate-Name

  let $NationalId = rtrim(&nc.national_id, ' ')

  do Print-Details

  if $RC_REPRINT_PROMPT = 'N'
    do Update-Control-No
  else
    do Update-Issue-Date
  end-if

from PS_ST_ESPP_PURCH A,
     PS_PERSON_NAME NB,
     PS_PERS_NID NC
WHERE A.STOCK_ID          = $RC_STOCK_ID
  AND A.TRANSFER_CNTL_NBR = #RC_TRANSFER_CNTL_NBR
  AND A.ISSUANCE_TYPE     = 'B'
  AND A.EMPLID = NB.EMPLID
  AND A.EMPLID = NC.EMPLID
  AND NC.PRIMARY_NID = 'Y'
[$WhereBrokerID]
[$WhereBranchID]
[$WhereBranch]
order by A.ST_BROKERAGE_ID,
         A.ST_BRANCH_ID,
         A.PERIOD_END_DT,
         A.EMPLID

End-Select

  if #Rows > 0
    do Print-Footer
    do Print-Grand-Totals
  end-if

End-Procedure

!-----------------------------------------------------------------------
! Section: Print-Details
!-----------------------------------------------------------------------
Begin-Procedure Print-Details

  if #Rows = 1
    do Get-Branch-Address
    let $BrokerIdOld = $BrokerId
    let $BranchIdOld = $BranchId
  else
    if $BrokerId <> $BrokerIdOld
      or $BranchId <> $BranchIdOld
      do Print-Footer
      new-page
      do Get-Branch-Address
      let $BrokerIdOld = $BrokerId
      let $BranchIdOld = $BranchId
    end-if
  end-if

  do Format-DateTime($PeriodEndDt, $out, {DEFDATE}, '', '')
  print $out                                               (+1,001,010)
  print $Name                                              (  ,014,035)
  print $Emplid                                            (  ,051,011)
  print $NationalId                                        (  ,064,020)
  print $AccountNbr                                        (  ,086,017)
  print $StockPlan                                         (  ,105,010)
  print #SharesIssued                                      (  ,117,022) edit 999,999,999,999.999999
  print $QuickSales                                        (  ,146,001)
  let #TotalSharesIssued = #TotalSharesIssued + #SharesIssued
  let #GrandSharesIssued = #GrandSharesIssued + #SharesIssued

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Branch-Address
!-----------------------------------------------------------------------
Begin-Procedure Get-Branch-Address

Begin-Select

E.EFFDT
E.ST_BRANCH_ID
C.ST_BROKERAGE_ID
C.DTC_ACCOUNT_NBR
D.DESCR
E.DESCR
E.ADDRESS1
E.ADDRESS2
E.ADDRESS3
E.CITY
E.STATE
E.POSTAL
E.COUNTRY
E.PHONE

   do Get_Related_ST_BRKR_BRANCH(&E.EFFDT,&E.ST_BRANCH_ID,&C.ST_BROKERAGE_ID)
      
  let $DtcAcctNbr  = rtrim(&c.dtc_account_nbr, ' ')
  let $BrokerDescr = rtrim(&d.descr, ' ')
  let $BranchDescr = rtrim(&e.descr, ' ')
    if $PSOptions_Language_Cd <> $curr_language_cd 
        let $BranchDescr = rtrim($ST_BRKR_BRANCH-DESCR , ' ')
    end-if
  let $Address1    = rtrim(&e.address1, ' ')
  let $Address2    = rtrim(&e.address2, ' ')
  let $Address3    = rtrim(&e.address3, ' ')
  let $City        = rtrim(&e.city, ' ')
  let $State       = rtrim(&e.state, ' ')
  let $Postal      = rtrim(&e.postal, ' ')
  let $Country     = rtrim(&e.country, ' ')
  let $Phone       = rtrim(&e.phone, ' ')
  do Get-Last-Conrol-Number

from PS_ST_BROKER_TBL  C,
     PS_ST_BROKER_DTL  D,
     PS_ST_BRKR_BRANCH E
where C.ST_BROKERAGE_ID = $BrokerId
  and C.ST_BROKERAGE_ID = D.ST_BROKERAGE_ID
  and D.EFFDT           = (SELECT MAX(DD.EFFDT) 
                             from PS_ST_BROKER_DTL DD
                            where DD.ST_BROKERAGE_ID = D.ST_BROKERAGE_ID
                              and DD.EFFDT          <= $AsOfToday)
  and C.ST_BROKERAGE_ID = E.ST_BROKERAGE_ID
  and E.ST_BRANCH_ID    = $BranchId
  and E.EFFDT           = (SELECT MAX(EE.EFFDT) 
                             from PS_ST_BRKR_BRANCH EE
                            where EE.ST_BROKERAGE_ID = E.ST_BROKERAGE_ID
                              and EE.ST_BRANCH_ID    = E.ST_BRANCH_ID)

End-Select

End-Procedure

!-----------------------------------------------------------------------
! Section: Get-Last-Conrol-Number
!-----------------------------------------------------------------------
Begin-Procedure Get-Last-Conrol-Number

Begin-Select

F.CONTROL_NBR_PREFIX
G.LAST_CONTROL_NBR

  let $ControlNbrPrefix = rtrim(&f.control_nbr_prefix, ' ')
  let #LastControlNbr   = &g.last_control_nbr + 1
  move #LastControlNbr to $LastControlNbr 999999
  let $LastControlNbr   = rtrim($LastControlNbr, ' ')
  let $LastControlNbr   = ltrim($LastControlNbr, ' ')
  if $ControlNbrPrefix <> ''
    let $LastControlNbr =$ControlNbrPrefix || '-' || $LastControlNbr
  end-if

from PS_STOCK_BRNCH_DTL F,
     PS_STOCK_BRANCH    G
where F.STOCK_ID        = $RC_STOCK_ID
  and F.ST_BROKERAGE_ID = $BrokerId
  and F.ST_BRANCH_ID    = $BranchId
  and F.STOCK_ID        = G.STOCK_ID
  and F.ST_BROKERAGE_ID = G.ST_BROKERAGE_ID
  and F.ST_BRANCH_ID    = G.ST_BRANCH_ID
  and F.EFFDT           = (SELECT MAX(FF.EFFDT)
                             from PS_STOCK_BRNCH_DTL FF
                            where FF.STOCK_ID        = F.STOCK_ID
                              and FF.ST_BROKERAGE_ID = F.ST_BROKERAGE_ID
                              and FF.ST_BRANCH_ID    = F.ST_BRANCH_ID)

End-Select

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Update-Control-No
!-----------------------------------------------------------------------

Begin-SQL

update PS_ST_ESPP_PURCH
   set BRANCH_CNTL_NBR = $LastControlNbr,
       BRANCH_ISSUE_DT = $AsOfToday
 where STOCK_ID        = $RC_STOCK_ID
   and EMPLID          = $Emplid
   and STOCK_PLAN_TYPE = 'E'
   and STOCK_PLAN      = $StockPlan
   and OFFERING_ID     = $OfferingId
   and PERIOD_END_DT   = $PeriodEndDt
   and PROCESS_GROUP   = $ProcessGroup

End-SQL

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure  Update-Issue-Date
!-----------------------------------------------------------------------

Begin-SQL

update PS_ST_ESPP_PURCH
   set BRANCH_ISSUE_DT = $AsOfToday
 where STOCK_ID        = $RC_STOCK_ID
   and EMPLID          = $Emplid
   and STOCK_PLAN_TYPE = 'E'
   and STOCK_PLAN      = $StockPlan
   and OFFERING_ID     = $OfferingId
   and PERIOD_END_DT   = $PeriodEndDt
   and PROCESS_GROUP   = $ProcessGroup

End-SQL

End-Procedure
 
!-----------------------------------------------------------------------
Begin-Procedure Update-Stock-Branch
!-----------------------------------------------------------------------

Begin-SQL

update PS_STOCK_BRANCH
   set LAST_CONTROL_NBR = #LastControlNbr
 where STOCK_ID        = $RC_STOCK_ID
   and ST_BROKERAGE_ID = $BrokerIdOld
   and ST_BRANCH_ID    = $BranchIdOld

End-SQL
 
End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Print-Footer
!-----------------------------------------------------------------------

  if $RC_REPRINT_PROMPT = 'N'
    do Update-Stock-Branch
  end-if
  print '-'                                                (+1,001,150) fill
  print $SubTotalLbl                                       (+1,086,010) bold
  print #TotalSharesIssued                                 (  ,117,022) bold edit 999,999,999,999.999999
  print '-'                                                (+1,001,150) fill
  let  #TotalSharesIssued = 0

End-Procedure

!-----------------------------------------------------------------------
Begin-Procedure Print-Grand-Totals
!-----------------------------------------------------------------------

  print '-'                                                (+1,001,150) fill
  print $GrandTotalLbl                                     (+1,086,012) bold
  print #GrandSharesIssued                                 (  ,117,022) bold edit 999,999,999,999.999999
  print '-'                                                (+1,001,150) fill

End-Procedure

!----------------------------------------------------------------------
!  SQC Include Files
!----------------------------------------------------------------------
#include 'strunctl.sqc'   ! Stock Admin's Run Control Record
#include 'prcsapi.sqc'
#include 'prcsdef.sqc'    ! Update Process Open_Trans variable declaration
#include 'eoj.sqc'        ! End of Report Format
#include 'sqrtrans.sqc'   ! Access Strings Table
#include 'reset.sqc'      ! Reset printer procedure
#include 'curdttim.sqc'   ! Get-Current-DateTime procedure
                          ! Procedures: Get-Current-DateTime
#include 'datemath.sqc'
#include 'datetime.sqc'   ! Routines for date and time formatting
                          ! Procedures: Init-Datetime
                          ! Procedures: Format-DateTime
                          ! Procedures: Diff-Date
                          ! Procedures: many others.
#include 'number.sqc'     ! Procedures: Init-Number
#include 'getrplng.sqc'   ! Get the report language
#include 'rotname1.sqc'                ! First Name, Last Name
#include 'rellang.sqc'    !Gives Description from Related Lang tables
