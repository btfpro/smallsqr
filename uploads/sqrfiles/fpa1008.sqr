!***********************************************************************
!  FPA1008: CAE Audit                                                  *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:12:29:41                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'         ! Set environment
#include 'setup01.sqc'        ! Printer and page-size initialization


BEGIN-REPORT

Do Init-DateTime                ! Permet le formatage des dates
Do Init-DateTime                ! Date formatting
Do Init-Number                  ! Numeric values formatting
Do Prepare
Do Main-Process
Do Stdapi-Term

END-REPORT


!***************************************************************
BEGIN-PROCEDURE  Prepare
!***************************************************************
 do Stdapi-Init
 if $prcs_process_instance = ''

        display ' Only one entire year to audit ? '
        INPUT $Reponse 'Reponse (O/N)'


                if  $Reponse =  'O'
                        INPUT $Year  'Saisir annee de reference '
                        move $year to #year
!                        let #year = to_number($year)
                end-if

 else

                do FP-Select-Parameters
                do Select-Parameters
                if $YesNo = 'Y'
                        let $Reponse = 'O'
                        let #year = #Calendar_Year
                end-if
 end-if


if $Reponse = 'O'

        do dtu-format-date(#year,12,1,$dtu_date_deb)
        do Convert-From-DTU-Date($dtu_date_deb,$native_date_deb)
        do dtu-format-date(#year,12,31,$dtu_date_fin)
        do Convert-From-DTU-Date($dtu_date_fin,$native_date_fin)

        let $var_where1 = ' and  EFFDT >= {DATEIN-PREFIX}'''||$native_date_deb||''' {DYN-DateIn-Suffix}'
        let $var_where1 = ' and  EFFDT <= {DATEIN-PREFIX}'''||$native_date_fin||''' {DYN-DateIn-Suffix}'
        let $var_where  = $var_where1   ||   $var_where2
else
        let $var_where  = ''

end-if

!***************************************************************
END-PROCEDURE Prepare
!***************************************************************


!*********************************
BEGIN-PROCEDURE Get-Values
!*********************************

do Get-Calendar-Year
do Get-YesNo

END-PROCEDURE Get-Values



!*********************************
BEGIN-PROCEDURE Main-Process
!*********************************

do Delete-Rows
do Select-Main

END-PROCEDURE Main-Process



!*********************************
BEGIN-PROCEDURE Delete-Rows
!*********************************

let $sql-statement = 'FPA1008.SQR,Delete-Rows,delete,FPM_CA_ORPHANRK'
!display $sql-statement
let $sql-statement = 'FPA1008.SQR,Delete-Rows,delete,FPM_CA_DOUBLE'
!display $sql-statement
let $sql-statement = 'FPA1008.SQR,Delete-Rows,delete,FPM_CA_AUDT_TBL'
!display $sql-statement

BEGIN-SQL On-Error=SQL-Error

Delete from PS_FPM_CA_ORPHANRK

END-SQL

BEGIN-SQL On-Error=SQL-Error

Delete from PS_FPM_CA_DOUBLE

END-SQL

END-PROCEDURE Delete-Rows



!*********************************
BEGIN-PROCEDURE Select-Main
!*********************************

let $sql-statement = 'FPA1008.SQR,Select-Main,select'
BEGIN-Select On-Error=SQL-Error

        DISTINCT

{DATEOUT-PREFIX}EFFDT{DATEOUT-SUFFIX}       &DATE_REF

        do Check_rank
        !display 'do Check_rank'


from PS_FPM_CA_CTG_TBL
where EFF_STATUS    = 'A'
[$var_where]

END-Select

END-PROCEDURE Select-Main



!*********************************
BEGIN-PROCEDURE Check_rank
!*********************************

do Convert-To-DTU-Date(&DATE_REF,$dtu_date_ref)

let $sql-statement = 'FPA1008.SQR,Check_rank,select '
BEGIN-Select On-Error=SQL-Error

A.SETID                 &LOOP1_SETID
A.FP_RANK_CD            &LOOP1_FP_RANK_CD

        do Check_at_least_1_CSB
        !display 'do Check_at_least_1_CSB'

from PS_FPMRANK_TBL A
where A.EFF_STATUS    = 'A'
and   A.EFFDT         = ( select max(EFFDT) from PS_FPMRANK_TBL where
                          EFFDT <= {DATEIN-PREFIX}$dtu_date_ref{DATEIN-SUFFIX}
                          and  A.SETID = SETID and A.FP_RANK_CD = FP_RANK_CD
                          and EFF_STATUS = 'A' )

END-Select

END-PROCEDURE Check_rank



!*************************************
BEGIN-PROCEDURE Check_at_least_1_CSB
!*************************************

let $sql-statement = 'FPA1008.SQR,Check_at_least_1_CSB,select '
BEGIN-Select On-Error=SQL-Error

count(*)    &LOOP2_QTY1


        do Is_at_least_1_CSB
        !display 'do Is_at_least_1_CSB'
        !display &LOOP2_QTY1
       !noline
        !display 'Lins'
        !display 'Grade   '
       !noline
        !display &LOOP1_FP_RANK_CD
from
PS_FPM_CA_CTG_TBL A,
PS_FPM_CA_CTG_MBR B
  where
         A.SETID         = B.SETID
     and A.FP_CA_CATG_ID = B.FP_CA_CATG_ID
     and A.EFF_STATUS    = 'A'
     and A.EFFDT         = B.EFFDT
     and A.SETID         = &LOOP1_SETID
     and B.FP_RANK_CD    = &LOOP1_FP_RANK_CD
     and A.EFFDT         = ( select max(EFFDT) from PS_FPM_CA_CTG_TBL
                                where EFFDT <= {DATEIN-PREFIX}$dtu_date_ref{DATEIN-SUFFIX}
                                and A.SETID = SETID
                                and A.FP_CA_CATG_ID = FP_CA_CATG_ID )

END-Select

END-PROCEDURE Check_at_least_1_CSB



!*************************************
BEGIN-PROCEDURE Is_at_least_1_CSB
!*************************************

let #LOOP2_QTY1  = &LOOP2_QTY1

evaluate   #LOOP2_QTY1
           when  = 0
                do Insert_orphan
                !display 'do Insert_orphan '
           break

           when  > 1

                do Check_nomore_1_Article
                !display 'do Check_nomore_1_Article '

end-evaluate

END-PROCEDURE Is_at_least_1_CSB



!*********************************
BEGIN-PROCEDURE Insert_orphan
!*********************************

do Convert-From-DTU-Date($dtu_date_ref,$native_date_ref)

                !display $dtu_date_ref
                !noline
                !display &LOOP1_SETID
                !noline
                !display &LOOP1_FP_RANK_CD

BEGIN-SQL

                Insert into PS_FPM_CA_ORPHANRK (FP_ORIG,FP_APPL_DT,SETID,FP_RANK_CD)
                
                values ('A',
                         {DATEIN-PREFIX}$native_date_ref{DATEIN-SUFFIX},
                         &LOOP1_SETID,
                         &LOOP1_FP_RANK_CD)

END-SQL

END-PROCEDURE Insert_orphan



!**************************************
BEGIN-PROCEDURE Check_nomore_1_Article
!**************************************

let $sql-statement = 'FPA1008.SQR, Check_nomore_1_Article ,select'
BEGIN-Select On-Error=SQL-Error

        DISTINCT

A.FP_STFBDG_LVL3     &LOOP3_ARTICLE

        do Check_article
        !display 'do Check_article'

from
PS_FPM_CA_CTG_TBL A,
PS_FPM_CA_CTG_MBR B
  where
         A.SETID         = B.SETID
     and A.FP_CA_CATG_ID = B.FP_CA_CATG_ID
     and A.EFFDT         = B.EFFDT
     and A.SETID         = &LOOP1_SETID
     and B.FP_RANK_CD    = &LOOP1_FP_RANK_CD
     and A.EFFDT         = ( select max(EFFDT) from PS_FPM_CA_CTG_TBL
                                where EFFDT <= {DATEIN-PREFIX}$dtu_date_ref{DATEIN-SUFFIX}
                                and A.SETID = SETID
                                and A.FP_CA_CATG_ID = FP_CA_CATG_ID )

END-Select

END-PROCEDURE Check_nomore_1_Article



!**************************************
BEGIN-PROCEDURE Check_article
!**************************************

let $sql-statement = 'FPA1008.SQR, Check_Article ,select'
BEGIN-Select On-Error=SQL-Error

count(*)         &QTY


        !display '##############################################  '
        !display ' Multiple article  :  '
       !noline
        !display &QTY
       !noline
        !display ' were found :  '
       !noline
        !display &LOOP3_ARTICLE
       !noline
        !display ' with grade :     :  '
       !noline
        !display &LOOP1_FP_RANK_CD
        !display '##############################################  '


        let #QTY =  &QTY

        !display ' =========== qte   ====='
       !noline
        !display #QTY

        if   #QTY >1

                do Catch_CSB
                !display 'do Catch_CSB '
        end-if

from
PS_FPM_CA_CTG_TBL A,
PS_FPM_CA_CTG_MBR B
  where
         A.SETID         = B.SETID
     and A.FP_CA_CATG_ID = B.FP_CA_CATG_ID
     and A.EFFDT         = B.EFFDT
     and A.EFF_STATUS    = 'A'
     and A.SETID         = &LOOP1_SETID
     and B.FP_RANK_CD    = &LOOP1_FP_RANK_CD
     and A.FP_STFBDG_LVL3= &LOOP3_ARTICLE
     and A.EFFDT         = ( select max(EFFDT) from PS_FPM_CA_CTG_TBL
                                where EFFDT <= {DATEIN-PREFIX}$dtu_date_ref{DATEIN-SUFFIX}
                                and A.SETID = SETID
                                and A.FP_CA_CATG_ID = FP_CA_CATG_ID
                                and A.FP_STFBDG_LVL3 = FP_STFBDG_LVL3)

END-Select

END-PROCEDURE Check_article



!**************************************
BEGIN-PROCEDURE Catch_CSB
!**************************************

let $sql-statement = 'FPA1008.SQR, Catch_CSB     ,select'
BEGIN-Select On-Error=SQL-Error


A.FP_CA_CATG_ID                                 &A.FP_CA_CATG_ID
{DATEOUT-PREFIX}A.EFFDT{DATEOUT-SUFFIX}         &A.EFFDT
B.FP_RANK_CD                                    &B.FP_RANK_CD

        do Insert_double
        !display 'do Insert_double '

        !display '--------------------------------------------  '
        !display ' CSB  '
       !noline
        !display &A.FP_CA_CATG_ID
       !noline
        !display ' grade'
       !noline
        !display &B.FP_RANK_CD
        !display '--------------------------------------------  '

from
PS_FPM_CA_CTG_TBL A,
PS_FPM_CA_CTG_MBR B
  where
         A.SETID         = B.SETID
     and A.FP_CA_CATG_ID = B.FP_CA_CATG_ID
     and A.EFFDT         = B.EFFDT
     and A.EFF_STATUS    = 'A'
     and A.SETID         = &LOOP1_SETID
     and B.FP_RANK_CD    = &LOOP1_FP_RANK_CD
     and A.FP_STFBDG_LVL3= &LOOP3_ARTICLE
     and A.EFFDT         = ( select max(EFFDT) from PS_FPM_CA_CTG_TBL
                                where EFFDT <= {DATEIN-PREFIX}$dtu_date_ref{DATEIN-SUFFIX}
                                and A.SETID = SETID
                                and A.FP_CA_CATG_ID = FP_CA_CATG_ID
                                and A.FP_STFBDG_LVL3 = FP_STFBDG_LVL3)

END-Select

END-PROCEDURE Catch_CSB



!**************************************
BEGIN-PROCEDURE Insert_double
!**************************************

do Convert-From-DTU-Date($dtu_date_ref,$native_date_ref)

                !display $dtu_date_ref
               !noline
                !display &LOOP1_SETID
               !noline
                !display &LOOP1_FP_RANK_CD
               !noline
                !display &A.FP_CA_CATG_ID

let $sql-statement = 'FPA1008.SQR, Insert-double ,insert'
BEGIN-SQL On-Error=SQL-Error

                Insert into PS_FPM_CA_DOUBLE (FP_ORIG,FP_APPL_DT,SETID,FP_RANK_CD,FP_CA_CATG_ID,
                EFFDT_L1)
                
                values  ('A',
                         {DATEIN-PREFIX}$native_date_ref{DATEIN-SUFFIX},
                         &LOOP1_SETID,
                         &LOOP1_FP_RANK_CD,
                         &A.FP_CA_CATG_ID,
                         {DATEIN-PREFIX}&A.EFFDT{DATEIN-SUFFIX})
END-SQL

END-PROCEDURE Insert_double



#Include 'datetime.sqc'       ! Routines for date and time formatting
#include 'curdttim.sqc'       ! Get-Current-DateTime procedure
#include 'stdapi.sqc'         ! Routines to update run status
#Include 'hrrnctl1.sqc'       ! Get run control parameter values
#Include 'fprnctl1.sqc'       ! Get run control parameter values
#Include 'fpgetval.sqc'       ! Get values mask routines
#Include 'hrgetval.sqc'       ! Get values mask routines
#Include 'number.sqc'         ! Routines to format numbers
#Include 'datemath.sqc'       ! Routines for date arithmetic


