!***********************************************************************
!  PER036S.SQR                                                         *
!  PRWORA - New Hire Reporting for State                               *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:14:39:21                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
! ACTION:                                                              *
!     (1) NEW HIRE REPORTING TO CONFORM TO THE PERSONAL RESPONSIBILITY *
!      AND WORK OPPORTUNITY ACT OF 1996.                               *
!     (2) THIS PROCEDURE IS MODIFIED TO ADD THE ABILITY TO             *
!          MEET NEW HIRES OUTPUT REQUIREMENTS DEPEND ON THE STATE      *
!          FORMAT USERS CHOOSE TO RUN AGAINST AS WELL AS THE           *
!          THE ABILITY TO SUPPORT SINGLE STATE REPORTING FOR           *
!          MULTI-STATE EMPLOYER.                                       *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'        ! SET ENVIRONMENT
#include 'setup32.sqc'       ! PRINTER AND PAGE-SIZE INITIALIZATION

! Note:
! The record layout written to the output file NEWHIRE.TXT currently follows
! the specifications of the state Arkansas.
! If the variable SHOW_RECORD_LAYOUT is defined, then the first line in
! the output file NEWHIRE.TXT shows how the record fields are layed out.
! Uncomment the following line to define this variable SHOW_RECORD_LAYOUT.
! #define SHOW_RECORD_LAYOUT

!***********************************************************************
BEGIN-REPORT
!***********************************************************************

  DO INIT-DATETIME
  DO INIT-NUMBER
  DO GET-CURRENT-DATETIME
  DO INIT-REPORT
  DO OPEN-FILE
  DO PROCESS-MAIN
  DO RESET
  DO STDAPI-TERM
  DO CLOSE-FILE

END-REPORT

BEGIN-PROCEDURE INIT-REPORT

  MOVE 'PER036S' TO $REPORTID
  MOVE 'PRWORA - State New Hire Reporting' TO $REPORTTITLE
  DO STDAPI-INIT

  IF $PRCS_PROCESS_INSTANCE = ''
     DO ASK-FROM-THRU-DATE
     DO GET-PER036-PARM
     INPUT $COMPANY 'Company'
     INPUT $REPORTING_STATE 'Reporting State'
     INPUT $SINGLE_REPORT 'Single Report'
  ELSE
     DO SELECT-PARAMETERS
  END-IF

  Let $File_name = ''
  Let $Company_Name = ''

END-PROCEDURE INIT-REPORT

!***********************************************************************
BEGIN-PROCEDURE GET-VALUES
!***********************************************************************

    DO GET-FROM-THRU-DATE
    DO GET-PER036-PARM
    LET $REPORTING_STATE = $STATE
    LET $SINGLE_REPORT   = $SINGLECHECK

END-PROCEDURE

!***********************************************************************
BEGIN-HEADING 6
!***********************************************************************
 #include 'stdhdg08.sqc'

  PRINT 'EMPLOYER'             (+3,1,8) BOLD
  PRINT 'FEDERAL EIN'          (0,29,0) BOLD
  PRINT 'NAME'                 (0,42,0) BOLD
  PRINT 'STREET'               (0,63,0) BOLD
  PRINT 'CITY'                 (0,85,0) BOLD
  PRINT 'STATE'                (0,98,0)  BOLD
  PRINT 'POSTAL'               (0,105,0)  BOLD
  PRINT 'NATIONAL ID'          (0,113,0) BOLD

END-HEADING


begin-procedure OPEN-FILE
  ! open the output-file 'NEWHIRES-ST' for writing
  ! the path given in the variable IMPORTPREFIX is defined in SETENV.SQC

 if $File_name = ''
      Let $File_name = '{IMPORTPREFIX}'
      Evaluate $REPORTING_STATE
          when ='MI'
              do GET-FEIN
              concat $FEIN with $File_name
              concat '{IMPORTSUFFIX}' with $File_name
              concat '.dat' with $File_name
          break
          when = 'NY'
              concat 'NEWHIRE.RPT' with $File_name
              concat '{IMPORTSUFFIX}' with $File_name
          break
          when-other
              concat 'NEWHIRE-ST' with $File_name
              concat '{IMPORTSUFFIX}' with $File_name
      end-evaluate
      Open $File_name As 1
             For-Writing
             Record=950:Vary
             Status=#FileStatus
      If #FileStatus = -1
          display ' Cannot Open File'
          stop quiet
      End-If
      DO SELECT-STATE-LAYOUT-HEADER
 End-if

end-procedure OPEN-FILE

!***********************************************************************
begin-procedure GET-FEIN
!***********************************************************************

begin-select
CC.FEDERAL_EIN

   Let $FEIN = edit(&CC.FEDERAL_EIN, '999999999')

FROM PS_COMPANY_TBL CC
WHERE CC.COMPANY = $COMPANY
end-select

display $FEIN

end-procedure GET-FEIN


!***********************************************************************
begin-procedure CLOSE-FILE
!***********************************************************************

  Do SELECT-STATE-LAYOUT-TRAILER
  close 1
  if $SHOW_RECORD_LAYOUT = 'Y'
     Let $Message = 'NOTE: the first line of the file '
     concat  $File_name with $Message
     concat  ' shows the record layout' with $Message
     display $Message
!     subtract 1 from #NumOfRecords
  end-if

  display 'Num Of Records Written: ' noline
  display #NumOfRecords 9999
  display  ' '
  if #NumOfRecords > 0
     Let $Message = 'File '
     concat  $File_name with $Message
     concat  ' was created' with $Message
     display $Message
  else
     Let $Message = 'File '
     concat  $File_name with $Message
     concat  ' is empty' with $Message
     display $Message
  END-IF

end-procedure CLOSE-FILE

!*************************************************************************************
BEGIN-PROCEDURE PROCESS-MAIN
!*************************************************************************************

   IF $SINGLE_REPORT ='Y'
     if $COMPANY = ''
        Let $Clause = ''
     else
        Let $Clause = ' AND C.COMPANY = '
        concat '''' with $Clause
        concat $COMPANY with $Clause
        concat '''' with $Clause
     end-if
   ELSE
     if $COMPANY = ''
        Let $Clause = ' AND L.STATE = '
           concat '''' with $Clause
           concat $REPORTING_STATE  with $Clause
           concat '''' with $Clause
   else
        Let $Clause = ' AND C.COMPANY = '
        concat '''' with $Clause
        concat $COMPANY with $Clause
        concat '''' with $Clause
        concat ' AND L.STATE = ' with $Clause
        concat '''' with $Clause
        concat $REPORTING_STATE  with $Clause
        concat '''' with $Clause
      end-if
   END-IF

   Do Get-New-Hire-Data

END-PROCEDURE PROCESS-MAIN

!************************************************************************************
BEGIN-PROCEDURE Get-New-Hire-Data
!***********************************************************************

BEGIN-SELECT DISTINCT
C.COMPANY
C.DESCR
   Let $CompName     =  rtrim(&C.DESCR, ' ')
C.ADDRESS1
   Let $CompAddress1 =  rtrim(&C.ADDRESS1, ' ')
C.ADDRESS2
   Let $CompAddress2 =  rtrim(&C.ADDRESS2, ' ')
C.ADDRESS3
   Let $CompAddress3 =  rtrim(&C.ADDRESS3, ' ')
C.ADDRESS4
   Let $CompAddress4 =  rtrim(&C.ADDRESS4, ' ')
C.CITY
   Let $CompCity     =  rtrim(&C.CITY, ' ')
C.STATE
   Let $CompState    =  rtrim(&C.STATE, ' ')
C.COUNTRY
   Let $COMPCOUNTRY  = &C.COUNTRY
C.POSTAL
   Let $CompPostal   = {ps-substr}(&C.POSTAL,1,5)
C.FEDERAL_EIN
   Let $FEIN = edit(&C.FEDERAL_EIN, '999999999')
   If $Old_Comp <> $CompName
      Do Print-Company-Info
   end-if
P.EMPLID
J.PER_ORG
P.BIRTHDATE
  do Format-DateTime(&P.BIRTHDATE, $DateOfBirth, {DEFDATE}, '', '')
!****************************************************************** Begin Name Change Format
 !P1.NAME
P1.NAME_DISPLAY   
    !let $Name = &P1.NAME
    let $Name = &P1.NAME_DISPLAY

!****************************************************************** Begin Name Change Format
   PRINT $Name             (+1,42,20)
   do Rotate-Name          ! to get firstname, lastname
   let $AddressType = 'HOME'
   do Get-Empl-Addresses
N.NATIONAL_ID
   Let $SSN = &N.NATIONAL_ID
   PRINT $City             (0,85,13)
   Print $State            (0,99,5)
   Print $Postal           (0,105,7)
   PRINT $SSN              (0,113)
   if $Address2 <> ''
      PRINT $Address2         (+1,63)
   end-if
   if $Address3 <> ''
      PRINT $Address3         (+1,63)
   end-if
J.EMPL_STATUS
E.HIRE_DT
E.REHIRE_DT
L.STATE
   Let $StateOfHire = &L.STATE

  if &E.REHIRE_DT > &E.HIRE_DT
       LET $DateOfHire_ALL = &E.REHIRE_DT
       LET $ACTION='REHIRE'
  ELSE
       LET $DateOfHire_ALL = &E.HIRE_DT
       LET $ACTION='HIRE'
  END-IF

  do Format-DateTime($DateOfHire_ALL, $DateOfHire, {DEFDATE}, '', '')

  Do Select-State-Layout

FROM PS_PERSON P,
     PS_PERSON_NAME P1,
     PS_EMPLOYMENT E,
     PS_JOB J,
     PS_REG_REGION_TBL R,
     PS_COMPANY_TBL C,
     PS_PERS_NID N,
     PS_LOCATION_TBL L

WHERE (E.HIRE_DT BETWEEN $FROMDATE AND $THRUDATE OR
         E.REHIRE_DT BETWEEN $FROMDATE AND $THRUDATE)
   AND P.EMPLID        = E.EMPLID
   AND P1.EMPLID        = E.EMPLID
   AND J.PER_ORG    = 'EMP'
   AND N.EMPLID        = P.EMPLID
   AND N.NATIONAL_ID   <> ' '
   AND J.EMPLID        = E.EMPLID
   AND J.EMPL_RCD      = E.EMPL_RCD
   AND  ((J.EFFDT = E.HIRE_DT OR J.EFFDT = E.REHIRE_DT) AND
          J.EFFDT >= $FROMDATE AND J.EFFDT <= $THRUDATE)
   AND J.ACTION IN('HIR','REH')
   AND J.REG_REGION    = R.REG_REGION
   AND R.COUNTRY = 'USA'
   AND C.COMPANY = J.COMPANY
   AND C.EFFDT = (SELECT MAX(C6.EFFDT)
                    FROM PS_COMPANY_TBL C6
                    WHERE C6.COMPANY = C.COMPANY
                      AND C6.EFFDT <= $THRUDATE)
   AND L.LOCATION = J.LOCATION
   AND L.EFFDT = (SELECT MAX(LL.EFFDT)
                    FROM PS_LOCATION_TBL LL
                    WHERE LL.SETID = L.SETID
                      AND LL.LOCATION = L.LOCATION
                      AND LL.EFFDT <= $THRUDATE)
[$Clause]
ORDER BY C.COMPANY, C.STATE

END-SELECT

END-PROCEDURE Get-New-Hire-Data


!***********************************************************************
BEGIN-PROCEDURE Get-Empl-Addresses
!***********************************************************************

BEGIN-SELECT DISTINCT

P1.ADDRESS1
   Let $Address1 = rtrim(&P1.ADDRESS1, ' ')
   PRINT $Address1         (0,63,21)
P1.ADDRESS2
   Let $Address2 = rtrim(&P1.ADDRESS2, ' ')
P1.ADDRESS3
   Let $Address3 = rtrim(&P1.ADDRESS3, ' ')
P1.ADDRESS4
   Let $Address4 = rtrim(&P1.ADDRESS4, ' ')
P1.CITY
   Let $City     = rtrim(&P1.CITY, ' ')
P1.STATE
   Let $State    = rtrim(&P1.STATE, ' ')
P1.POSTAL
   Let $Postal = {ps-substr}(&P1.POSTAL,1,5)

from PS_PERSON_ADDRESS P1
where P1.EMPLID       = &P.EMPLID
  and P1.ADDRESS_TYPE = $AddressType
  AND P1.EFF_STATUS   = 'A'

End-Select

End-Procedure


!***********************************************************************
BEGIN-PROCEDURE Print-Company-Info
!***********************************************************************

    Let $CompZip = $CompCity || ', ' || $CompState || ' ' || $CompPostal
    print $CompName            (+1, 1)
    PRINT $CompAddress1        (+1,1)
    if $CompAddress2 <> ''
         PRINT $CompAddress2   (+1,1)
    end-if
    if $CompAddress3 <> ''
         PRINT $CompAddress3   (+1,1)
    end-if
    PRINT $CompZip             (+1,1,28)
    PRINT $FEIN                (0,30)       Edit 099999999
    Let $Old_Comp = $CompName

END-PROCEDURE Print-Company-Info

!***********************************************************************
begin-procedure Init-File-Record
!***********************************************************************

let $RecId = ''
let $FormatVersionNo = ''
let $FirstName =''
let $MiddleName = ''
let $LastName = ''
let $SSN = ''
let $Address1 = ''
let $Address2 = ''
let $Address3 = ''
let $City =''
let $State = ''
let $Postal = ''
let $Code4 = ''
let $CountryCode = ''
let $DateOfBirth = ''
let $DateOfHire = ''
let $StateOfHire = ''
let $Filler1 = ''
let $FEIN = ''
let $StateEIN = ''
let $CompName = ''
let $CompAddress1 = ''
let $CompAddress2 = ''
let $CompAddress3 = ''
let $CompCity = ''
let $CompState = ''
let $CompPostal = ''
let $CompCode4 = ''
let $CompCountryCode = ''
let $CompPhone = ''
let $CompPhoneExt = ''
let $CompContact = ''
let $OptAddress1 = ''
let $OptAddress2 = ''
let $OptAddress3 = ''
let $OptCity = ''
let $OptState = ''
let $OptPostal = ''
let $OptCode4 = ''
let $OptCountryCode = ''
let $OptPhone = ''
let $OptPhoneExt = ''
let $OptContact = ''
let $Filler2 = ''

end-procedure Init-File-Record

#include 'hrrnctl1.sqc'     ! GET RUN CONTROL PARAMETER VALUES
#include 'hrgetval.sqc'     ! GET VALUES MASK ROUTINES
#include 'askftd.sqc'       ! FROM THRU DATE INPUT
#include 'reset.sqc'        ! RESET PRINTER PROCEDURE
#include 'stdapi.sqc'       ! UPDATE PROCESS API
#include 'curdttim.sqc'     ! GET-CURRENT-DATETIME PROCEDURE
#include 'datetime.sqc'     ! ROUTINES FOR DATE AND TIME FORMATTING
#include 'number.sqc'       ! ROUTINES TO FORMAT NUMBERS
#include 'datemath.sqc'     ! ROUTINES FOR DATEMATH
#include 'rotname3.sqc'     ! GET FIRSTNAME AND LASTNAME
#include 'getstate.sqc'     ! GET THE FILE LAYOUTS DEPEND ON THE STATE CHOSEN
#include 'getaddr.sqc'      ! ROUTINES FOR ADDRESSES
