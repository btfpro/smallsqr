!***********************************************************************
!  UVGPI01:   Obsolete Accumulators                                    *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!----------------------------------------------------------------------*
!***********************************************************************
!                                                                      *
!                $Date:  2006/04/14:10:38:49                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
! Program Desc: This program reports for any obsolete payroll          *
!               accumulators.  These are payroll accumulators stored   *
!               in segments with non-matching CALC_TYPE on the         *
!               accumulator definition.
!***********************************************************************

!******************************************************************
!*** Setting up the environment
!******************************************************************

#include 'setenv.sqc'   ! Set environment
#include 'setup31.sqc'  ! printer and page-size initialization

!******************************************************************
!*** Heading section - Title
!******************************************************************

begin-heading 7
!  #Include 'stdhdgtr.sqc'

end-heading

!******************************************************************
!***    Begin Report Section
!******************************************************************
begin-report


        !----------------------------------------------------------
        !***    ! SHOW timedate of the beginning
        !----------------------------------------------------------
        let $Time_Begin = edit(datenow(), 'DD/MM/YYYY HH24:MI:SS')
        show 'Time Program Began = ' $Time_Begin

        !----------------------------------------------------------
        !***    Call the main procedures
        !----------------------------------------------------------
          do Init-Report
          do StdAPI-Init

          do Process-Main

        !----------------------------------------------------------
        !***    SHOW timedate of the end
        !----------------------------------------------------------
        let $Time_Ended = edit(datenow(), 'DD/MM/YYYY HH24:MI:SS')
        show 'Time Program Ended = ' $Time_Ended

          do StdAPI-Term

end-report

!******************************************************************
! I N I T I A L I Z E   A N D / O R   G E T    V A R I A B L E S
!******************************************************************


!*=================================================================
! Procedure     :INIT-REPORT
! Comment       :This procedure performs the application
!                initializations formats variables for use, and
!                calls the procedures to get input parameters.
!*=================================================================
begin-procedure INIT-REPORT

        do INIT-DATETIME
        do INIT-NUMBER
        do GET-CURRENT-DATETIME

        let $ReportID    = 'UVGPI01.sqr: '
        let $ReportTitle = 'Obsolete Accumulators'
        SHOW  ' '
        show $ReportID    $ReportTitle
        SHOW ' '

end-procedure INIT-REPORT

!******************************************************************
!           S T A R T   O F   T H E   R E P O R T
!******************************************************************

!*=================================================================
! Procedure     : PROCESS MAIN                                    !
! Descr         : This procedure is the main procedure of the     !
!                 report and calls other procedures               !
!                                                                 !
!*=================================================================

begin-procedure Process-Main

      let $PREV_CAL_RUN_ID    = ' ' 
      let $PREV_GP_PAYGROUP   = ' '
      let $PREV_CAL_ID        = ' '    
      let #PAGE-NO            = 0
      let #LINE-COUNTER       = 0

        do WRITE-HEADER
        
        do PROCESS-DETAIL

      do WRITE-FOOTER

      print 'Total rows:'                     (+2,2)
      print #TOTAL-ROWS                       (+0,+2) edit 8,888,888
      print 'End of Report'                   (+2,)   center


end-procedure Process-Main


!*==================================================================
! Procedure     : WRITE-HEADER                                     
!*==================================================================

begin-procedure WRITE-HEADER   
        
        let #LINE-COUNTER = 0

        print $ReportTitle                    (+0,) center
        print '(Payroll accumulators stored in segment with non-matching CALC-TYPE)'
                                              (+1,) center
        print $Time_Begin                     (+1,) center   
        
        add 2 to #LINE-COUNTER

end-procedure WRITE-HEADER   


!*==================================================================
! Procedure     : WRITE-SUB-HEADER                                     
!*==================================================================

begin-procedure WRITE-SUB-HEADER   

        print 'Calendar Run ID:'                (+2,2)
        print $CAL_RUN_ID                       (+0,19)
        
        print 'Paygroup:'                       (+1,2)
        print $GP_PAYGROUP                      (+0,19)
        
        print 'Calendar ID:'                    (+1,2)
        print $CAL_ID                           (+0,19)  
        
        add 4 to #LINE-COUNTER        
        
end-procedure WRITE-SUB-HEADER   

!*==================================================================
! Procedure     : WRITE-SUB-HEADER2                                     
!*==================================================================

begin-procedure WRITE-SUB-HEADER2  
        
        print 'Payroll CALC_TYPE'                (+2,2)
        print 'Accumulator CALC_TYPE'            (+0,22)
        print 'PIN NUM'                          (+0,45)
        print 'PIN Name'                         (+0,58)
        print 'EmplID'                           (+0,78)
        print 'Empl Rcd'                         (+0,91)


        print '-----------------'                (+1,2)
        print '---------------------'            (+0,22)
        print '-------'                          (+0,45)
        print '------------------'               (+0,58)
        print '------'                           (+0,78)
        print '--------'                         (+0,91)

        add 1 to #LINE-COUNTER                        

end-procedure WRITE-SUB-HEADER2

        
!*==================================================================
! Procedure     : WRITE-DETAIL                                     
!*==================================================================

begin-procedure WRITE-DETAIL  
               
        print $PAY_CALC_TYPE                     (+1,2)
        print $ACCUM_CALC_TYPE                   (+0,22)
        print #PIN_NUM                           (+0,45) edit 88888888
        print $PIN_NM                            (+0,58)
        print $EMPLID                            (+0,78) 
        print #EMPL_RCD                          (+0,91) edit 888     
        
        add 1 to #LINE-COUNTER  
        add 1 to #TOTAL-ROWS
              
end-procedure WRITE-DETAIL

!*==================================================================
! Procedure     : WRITE-FOOTER                                     
!*==================================================================

begin-procedure WRITE-FOOTER   

        add 1 to #PAGE-NO

        print 'Page'                            (+2,) center
        print #PAGE-NO                          (+0,+1) edit 8888
        
        new-page

end-procedure WRITE-FOOTER  

!*==================================================================
! Procedure     : PROCESS-DETAIL                                     !
!*==================================================================

        begin-procedure PROCESS-DETAIL

Begin-select

C.CAL_RUN_ID
C.GP_PAYGROUP
C.CAL_ID
A.CALC_TYPE
B.CALC_TYPE
P.PIN_NUM
P.PIN_NM,
C.EMPLID
C.EMPL_RCD

      let $CAL_RUN_ID         = &C.CAL_RUN_ID 
      let $GP_PAYGROUP        = &C.GP_PAYGROUP
      let $CAL_ID             = &C.CAL_ID
      let $PAY_CALC_TYPE      = &A.CALC_TYPE
      let $ACCUM_CALC_TYPE    = &B.CALC_TYPE
      let #PIN_NUM            = &P.PIN_NUM
      let $PIN_NM             = &P.PIN_NM
      let $EMPLID             = &C.EMPLID
      let $EMPL_RCD           = &C.EMPL_RCD


      if #LINE-COUNTER > 60
            do WRITE-FOOTER
            do WRITE-HEADER 
            do WRITE-SUB-HEADER
            do WRITE-SUB-HEADER2
      end-if

        if $PREV_CAL_RUN_ID  = $CAL_RUN_ID  and 
           $PREV_GP_PAYGROUP = $GP_PAYGROUP and
           $PREV_CAL_ID      = $CAL_ID
        else
            do WRITE-SUB-HEADER
            do WRITE-SUB-HEADER2
        end-if

        do WRITE-DETAIL
                
      let $PREV_CAL_RUN_ID    = $CAL_RUN_ID 
      let $PREV_GP_PAYGROUP   = $GP_PAYGROUP
      let $PREV_CAL_ID        = $CAL_ID        
               
FROM PS_GP_PYE_PRC_STAT A, 
     PS_GP_ACCUMULATOR B,
     PS_GP_RSLT_ACUM C,
     PS_GP_PIN P
WHERE 
   ((A.CALC_TYPE = 'P' AND B.CALC_TYPE = 'A') OR 
    (A.CALC_TYPE = 'A' AND B.CALC_TYPE = 'P'))
AND B.PIN_NUM = C.PIN_NUM
AND C.PIN_NUM = P.PIN_NUM
AND A.CAL_RUN_ID = C.CAL_RUN_ID
AND A.CAL_ID = C.CAL_ID
AND A.GP_PAYGROUP = C.GP_PAYGROUP
AND A.EMPLID = C.EMPLID
AND A.EMPL_RCD = C.EMPL_RCD
AND A.ORIG_CAL_RUN_ID = C.ORIG_CAL_RUN_ID
ORDER BY
C.CAL_RUN_ID, 
C.GP_PAYGROUP, 
C.CAL_ID, 
C.EMPLID, 
C.EMPL_RCD

end-select

        end-procedure PROCESS-DETAIL




!************************************************************************
!End of the SQR statements                                              *
!************************************************************************

#Include 'stdapi.sqc'    !Update Process API
#include 'prcsdef.sqc'   !Update Process Request variable declaration
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'readxlat.sqc'  !Read Translates Table

!***********************************************************************
