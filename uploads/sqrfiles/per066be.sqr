!***********************************************************************
!  PER066BE - Termination Notification Belgium
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2006/07/19:14:53:03                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
Begin-Setup
#include 'ptpsp125.sqc'   !Printer and page-size initialization
End-Setup

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


!**************************
begin-heading 5

if $ReportTitle = ''
let $ReportTitle = 'Social Report'
end-if

#Include 'stdhdgtr.sqc'

end-heading


begin-procedure Init-Report

  move 'PER066BE' to $ReportID

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  do Get-Report-Language

  if $prcs_process_instance = ''
    !No Prompt
  else
    do Select-Parameters
  end-if

  display ' '
  display $ReportTitle
  display ' '

end-procedure


!********************************************************************
! Get_Info_From_StrTable
!--------------------------------------------------------------------
! Get data from strings Table where Program ID = PER066BE
!********************************************************************
begin-procedure Report-Translation

do Init_Report_Translation('CONTRACT',$language_cd)
do Append_Report_Translation ('HR')
do Append_Report_Translation ('PER066BE')

do Get_Field_Information ('PER066BE', 'REPORT_TITLE',       $ReportTitle,      #DW)
do Get_Field_Information ('PER066BE', 'STATUTE_BEL',        $T_STATUTE,        #DW)
do Get_Field_Information ('PER066BE', 'SUBSTATUTE_BEL',     $T_SUBSTATUTE,     #DW)
do Get_Field_Information ('PER066BE', 'MANDAT_REPL_BEL',    $T_MANDAT_REPL,    #DW)
do Get_Field_Information ('PER066BE', 'END_PROB_EFF_BEL',   $T_END_PROB_EFF,   #DW)
do Get_Field_Information ('PER066BE', 'NOTIF_START_DT_BEL', $T_NOTIF_START_DT, #DW)
do Get_Field_Information ('PER066BE', 'PROT_END_DT_BEL',    $T_PROT_END_DT,    #DW)
do Get_Field_Information ('PER066BE', 'FACT_SERVT_BEL',     $T_FACT_SERVT,     #DW)
do Get_Field_Information ('PER066BE', 'FACT_AGE_BEL',       $T_FACT_AGE,       #DW)
do Get_Field_Information ('PER066BE', 'FACT_CORRECT_BEL',   $T_FACT_CORRECT,   #DW)
do Get_Field_Information ('PER066BE', 'TERM_CORRECT_BEL',   $T_TERM_CORRECT,   #DW)
do Get_Field_Information ('PER066BE', 'FACT_YEAR_BASE_BEL', $T_FACT_YEAR_BASE, #DW)
do Get_Field_Information ('PER066BE', 'ACT_INDEX_BEL',      $T_ACT_INDEX,      #DW)
do Get_Field_Information ('PER066BE', 'NOTIF_PERIOD_BEL',   $T_NOTIF_PERIOD,   #DW)
do Get_Field_Information ('PER066BE', 'END_COMPENS_BEL',    $T_END_COMPENS,    #DW)
do Get_Field_Information ('PER066BE', 'REVENUE_COMPEN_BEL', $T_REVENUE_COMPEN, #DW)
do Get_Field_Information ('PER066BE', 'SOC_PASS_TOTAL_BEL', $T_SOC_PASS_TOTAL, #DW)
do Get_Field_Information ('PER066BE', 'SERV_MONTHS_BEL',    $T_SERV_MONTHS,    #DW)
do Get_Field_Information ('PER066BE', 'COMPRATE',           $T_COMPRATE, #DW)
do Get_Field_Information ('PER066BE', 'COMMISSIONS_BEL',    $T_COMMISSIONS,    #DW)
do Get_Field_Information ('PER066BE', 'VALUE_EXTRA_BEL',    $T_VALUE_EXTRA,    #DW)
do Get_Field_Information ('PER066BE', 'BASE_TOTAL_BEL',     $T_BASE_TOTAL,     #DW)
do Get_Field_Information ('PER066BE', 'ABOVE_SAL_LMT_BEL',  $T_ABOVE_SAL_LMT,  #DW)

!---- Main Block Titles

do Get_Field_Information ('CONTRACT', 'T_CONTRACT_DATA',    $T_Detail1,    #DW)
do Get_Field_Information ('CONTRACT', 'T_CONTRACT_TYPE',    $T_Detail2,    #DW)
do Get_Field_Information ('PER066BE', 'COMPENSATION',       $T_Detail3,    #DW)
do Get_Field_Information ('PER066BE', 'CLAEYS_BEL_LBL',     $T_Detail4,    #DW)
do Get_Field_Information ('PER066BE', 'CALCULATION_LBL',    $T_Detail5,    #DW)

!---- Other Titles

do Get_Field_Information ('HR',       'EMPLID',             $T_Emplid,    #DW)
do Get_Field_Information ('HR',       'EFFDT',              $T_Effdt,     #DW)
do Get_Field_Information ('CONTRACT', 'COMMENTSHORT',       $T_ComShort,  #DW)
do Get_Field_Information ('CONTRACT', 'CONTRACT_NUM',       $T_Contract,  #DW)
do Get_Field_Information ('CONTRACT', 'CONTRACT_BEGIN_DT',  $T_BeginDt,   #DW)
do Get_Field_Information ('CONTRACT', 'CONTRACT_END_DT',    $T_EndDt,     #DW)
do Get_Field_Information ('PER066BE', 'CONTRCT_EXP_END_DT', $T_ExpEndDt,  #DW)
do Get_Field_Information ('CONTRACT', 'SIGNATURE_DT',       $T_Signature, #DW)
do Get_Field_Information ('CONTRACT', 'T_PROBATION',        $T_ProbDt,    #DW)

end-procedure


begin-procedure Get-Values
   let $language_cd = $PRCS_LANGUAGE_CD
   do Get-PER066BE-Parameters
end-procedure


!***********************************************************************
!  PROC PROCESS-MAIN
!         Main Procedure
!***********************************************************************

BEGIN-PROCEDURE Process-Main

let $sql-statement = 'PER066BE.SQR,Process-Main,Select,CONTRACT_DATA A'
begin-select On-Error=SQL-Error

A.EMPLID
A.CONTRACT_NUM
A.CONTRACT_BEGIN_DT
A.CONTRACT_END_DT
A.SIGNATURE_DT
A.CONTRACT_STATUS
A.COMMENTSHORT
A.CONTRCT_EXP_END_DT
A.REG_REGION
AZ.NAME

    do Get-Probation-Date
    do Get-Protection-Date
    do Print-Detail1
    do Get-Contract-Type
    do Print-Detail3
    do Print-Detail4
    do Print-Detail5

from PS_CONTRACT_DATA A,
     PS_JOB J,
     PS_PERSON_NAME AZ

where AZ.EMPLID = $EMPLID
  AND J.EMPLID = AZ.EMPLID
  AND J.EMPL_RCD = #EMPL_RCD
  AND A.EMPLID = AZ.EMPLID
  AND A.CONTRACT_NUM = J.CONTRACT_NUM
  AND J.EFFDT =
        (select MAX(J2.EFFDT)
               from  PS_JOB J2
               where J2.EMPLID   = J.EMPLID
               and   J2.EMPL_RCD = J.EMPL_RCD
               and   J2.EFFDT   <= $AsOfToday)
  AND J.EFFSEQ =
        (select MAX(J3.EFFSEQ)
               from  PS_JOB J3
               where J3.EMPLID   = J.EMPLID
               and   J3.EMPL_RCD = J.EMPL_RCD
               and   J3.EFFDT    = J.EFFDT)

end-select

end-procedure Process-Main


!---------- Get Probation Date -------------!
begin-procedure Get-Probation-Date

let $sql-statement = 'PER066BE.SQR,Get-Probation-Date,Select,CNT_PROBATION B'
begin-select On-Error=SQL-Error

B.PROBATION_DT

    let $ProbDt = &B.PROBATION_DT

from PS_CNT_PROBATION B
where B.EMPLID = &A.EMPLID
and   B.CONTRACT_NUM = &A.CONTRACT_NUM
and   B.PROBATION_DT =
        (select  MAX(B2.PROBATION_DT)
               from    PS_CNT_PROBATION B2
               where   B2.EMPLID        =  B.EMPLID
               and     B2.CONTRACT_NUM  =  B.CONTRACT_NUM)
end-select

end-procedure Get-Probation-Date


!---------- Get Protection Date -------------!
begin-procedure Get-Protection-Date

let $sql-statement = 'PER066BE.SQR,Get-Protection-Date,Select,PROTECT_BEL P'
begin-select On-Error=SQL-Error

P.END_DT

    let $ProtDt = &P.END_DT

from PS_PROTECT_BEL P
where P.EMPLID = &A.EMPLID
and   P.EMPL_RCD = #EMPL_RCD
and   P.EFFDT =
        (select  MAX(P2.EFFDT)
               from    PS_PROTECT_BEL P2
               where   P2.EMPLID   =  P.EMPLID
               and     P2.EMPL_RCD =  P.EMPL_RCD
               and     P2.EFFDT <= $AsOfToday)
end-select

end-procedure Get-Protection-Date


!---------- Get Contract Type -------------!
begin-procedure Get-Contract-Type

let $Det3 = 'Y'

let $sql-statement = 'CNT001.SQR,Get-Contract-Type,Select,WKF_CNT_TYPE C'
begin-select On-Error=SQL-Error

C.EFFDT
C.CONTRACT_TYPE
C.CONTR_DUR_BEL
C.STATUTE_BEL
C.SUBSTATUTE_BEL
CJ.DESCRSHORT
CJ.DESCR50

    do Get-Statute-Descr
    do Print-Detail2

from PS_WKF_CNT_TYPE C,
     PS_PERS_CNTRCT_TYP CJ

where   C.EMPLID = &A.EMPLID
and     C.CONTRACT_NUM = &A.CONTRACT_NUM
and     CJ.SETID = &A.REG_REGION
and     CJ.CONTRACT_TYPE = C.CONTRACT_TYPE
and     CJ.EFF_STATUS = 'A'
and     CJ.EFFDT >=
        (select  MAX(CJ2.EFFDT)
               from    PS_PERS_CNTRCT_TYP CJ2
               where   CJ2.SETID        =  CJ.SETID
               and     CJ2.CONTRACT_TYPE  = CJ.CONTRACT_TYPE
               and     CJ2.EFFDT        <=  C.EFFDT)
end-select
end-procedure Get-Contract_Type



!---------- Get Statute Description  -------------!
begin-procedure Get-Statute-Descr

let $sql-statement = 'PER066BE.SQR,Get-Statute-Descr,Select,STATUTE__TBL_BEL ST'
begin-select On-Error=SQL-Error

ST.DESCR
      let $STATUTE_DESCR = &ST.DESCR

from PS_STATUTE_TBL_BEL ST

where   ST.STATUTE_BEL = &C.STATUTE_BEL
and     ST.EFF_STATUS = 'A'
and     ST.EFFDT >=
        (select  MAX(ST2.EFFDT)
               from    PS_STATUTE_TBL_BEL ST2
               where   ST2.STATUTE_BEL =  ST.STATUTE_BEL
               and     ST2.EFFDT      <=  &C.EFFDT)

end-select
end-procedure Get-Statute-Descr


!*******************************  PRINTING ZONE ***************************
!---------- Printing Contract - Detail Contract Data -------------!
begin-procedure Print-Detail1

let $Name=substr(&AZ.NAME,1,35)
let $Contract = Substr(&A.CONTRACT_NUM,1,10)

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&A.CONTRACT_BEGIN_DT,$BeginDt,{DEFDMY},'','')

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&A.CONTRCT_EXP_END_DT,$ExpEndDt,{DEFDMY},'','')

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&A.CONTRACT_END_DT,$EndDt,{DEFDMY},'','')

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&A.SIGNATURE_DT,$SignDt,{DEFDMY},'','')

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&B.PROBATION_DT,$ProbDt,{DEFDMY},'','')

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&P.END_DT,$ProtDt,{DEFDMY},'','')


!-- Line 0
print $T_Emplid                 (+1,1)  Bold Shade
print &A.EMPLID                 (,+2)   Shade
Print $Name                     (,+1)   Shade

!-- Line Title
if #current-line > 70
 NEW-PAGE 1
end-if
    print $T_Detail1                (+2,1)  Bold Box
    print '_'                       (,,101)   Fill

!-- Line
print $T_Contract               (+1,1,18) Bold
print $Contract                 (,26)  Shade
 Let $Fieldname = 'CONTRACT_STATUS'
 Let $Fieldvalue = &A.CONTRACT_STATUS
 do Read-Translate-Table()
print $XlatShortName             (,106) Shade

print $T_BeginDt                (+1,1,24)  Bold
print $BeginDt                  (,26,10)

print $T_EndDt                  (,60,24)  Bold
print $EndDt                    (,85,10)

print $T_ProbDt                 (+1,1,24)  Bold
print $ProbDt                   (,26,10)

print $T_ExpEndDt               (,60,24)  Bold
print $ExpEndDt                 (,85,10)

print $T_Prot_End_Dt            (+1,1,24)  Bold
print $ProtDt                   (,85,10)

print $T_ComShort               (+1,1,24)   Bold
print &A.COMMENTSHORT           (,26,30)

print ' '                       (+1,1)

end-procedure Print-Detail1

!---------- Printing Contract - Detail Contract Type  -------------!
begin-procedure Print-Detail2

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&C.EFFDT,$TypeDt,{DEFDMY},'','')

!-- Line Title
if $Det3 = 'Y'
    print $T_Detail2            (+1,1)  Bold Box
    let $Det3 = 'N'
end-if

!-- Line
print $T_Effdt                  (+1,1,24) Bold
print $TypeDt                   (,26,10)

print $T_Detail2                (+1,1,24) Bold
print &C.CONTRACT_TYPE          (,26,4)
print &CJ.DESCRSHORT            (,31,30)

print $T_STATUTE                (+1,1,24) Bold
print &C.STATUTE_BEL            (,26,4)
print $STATUTE_DESCR            (,31,30)

print $T_SUBSTATUTE             (+1,1,24) Bold
print &C.SUBSTATUTE_BEL         (,26,4)
Let $Fieldname = 'SUBSTATUTE_BEL'
Let $Fieldvalue = &C.SUBSTATUTE_BEL
do Read-Translate-Table()
print $XlatLongName             (,31,30)

print ' '                       (+1,1)

end-procedure Print-Detail2

!---------- Printing Contract - Calculation  -------------!
begin-procedure Print-Detail3

move '.' to $SThousand
move ',' to $SDecimal

print $T_Detail3            (+1,1)  Bold Box
print $T_COMPRATE           (+1,1,24)  Bold
do Format-Number(&RUN_CNTL_HR_BEL.COMPRATE, $COMPRATE, '999,999,999,999.9999')
print $COMPRATE            (,26,20)
print &RUN_CNTL_HR_BEL.COMP_FREQUENCY (,+2,18)

let $ABOVE_SAL_LMT = &RUN_CNTL_HR_BEL.ABOVE_SAL_LMT_BEL
if $ABOVE_SAL_LMT <> 'Y'
  let $ABOVE_SAL_LMT = 'N'
end-if

print $T_ABOVE_SAL_LMT           (,60,24)  Bold
Let $Fieldname = 'PSYESNO'
Let $Fieldvalue = $ABOVE_SAL_LMT
do Read-Translate-Table()
print $XlatShortName             (,85,20)

print $T_COMMISSIONS           (+1,1,24)  Bold
do Format-Number(&RUN_CNTL_HR_BEL.COMMISSIONS_BEL, $COMMISSIONS, '999,999,999,999.9999')
print $COMMISSIONS (,26,20)

print $T_VALUE_EXTRA       (+1,1,24)  Bold
do Format-Number(&RUN_CNTL_HR_BEL.VALUE_EXTRA_BEL, $VALUE_EXTRA, '999,999,999,999.9999')
print $VALUE_EXTRA (,26,20) UnderLine
print &RUN_CNTL_HR_BEL.COMP_FREQUENCY (,+2,18)

print $T_BASE_TOTAL       (+1,1,24)  Bold
do Format-Number(&RUN_CNTL_HR_BEL.BASE_TOTAL_BEL, $BASE_TOTAL, '999,999,999,999.9999')
print $BASE_TOTAL (,26,20)

print ' '                       (+1,1)

end-procedure Print-Detail3

!---------- Printing Contract - Claeys Factors  -------------!
begin-procedure Print-Detail4

print $T_Detail4            (+1,1)  Bold Box
print $T_FACT_SERVT         (+1,1,24)  Bold
print &RUN_CNTL_HR_BEL.FACT_SERVT_BEL (,26,39) edit '999,999,999,999.9999'
print $T_FACT_AGE           (+1,1,24)  Bold
print &RUN_CNTL_HR_BEL.FACT_AGE_BEL (,26,39) edit '999,999,999,999.9999'
print $T_FACT_CORRECT       (+1,1,24)  Bold
print &RUN_CNTL_HR_BEL.FACT_CORRECT_BEL (,26,39) edit '999,999,999,999.9999'
print $T_TERM_CORRECT       (+1,1,24)  Bold
print &RUN_CNTL_HR_BEL.TERM_CORRECT_BEL (,26,39) edit '999,999,999,999.9999'
print $T_FACT_YEAR_BASE     (+1,1,24)  Bold
print &RUN_CNTL_HR_BEL.FACT_YEAR_BASE_BEL (,26,39) edit '999,999,999,999.9999'
print $T_ACT_INDEX          (+1,1,24)  Bold
print &RUN_CNTL_HR_BEL.ACT_INDEX_BEL (,26,39) edit '999,999,999,999.9999'
print ' '                       (+1,1)

end-procedure Print-Detail4

!---------- Printing Contract - Calculation  -------------!
begin-procedure Print-Detail5

print $T_Detail5            (+1,1)  Bold Box

move '1' to $Year4
move '-' to $DDelimiter
do Format-DateTime(&RUN_CNTL_HR_BEL.NOTIF_START_DT_BEL,$NotifStartDt,{DEFDMY},'','')

print $T_NOTIF_START_DT     (+1,1,24) Bold
print $NotifStartDt         (,26,10)

print $T_SERV_MONTHS     (+1,1,24) Bold
print &RUN_CNTL_HR_BEL.SERV_MONTHS_BEL (,26,10)

print $T_NOTIF_PERIOD       (+1,1,24)  Bold
print &RUN_CNTL_HR_BEL.NOTIF_PERIOD_BEL (,26,4)
Let $Fieldname = 'PERIOD_UNITY_BEL'
Let $Fieldvalue = &RUN_CNTL_HR_BEL.PERIOD_UNITY_BEL
do Read-Translate-Table()
print $XlatShortName             (,31,15)

print $T_END_COMPENS           (+2,1,24)  Bold
do Format-Number(&RUN_CNTL_HR_BEL.END_COMPENS_BEL, $END_COMPENS, '999,999,999,999.9999')
print $END_COMPENS (,26,20)

print $T_REVENUE_COMPEN       (+1,1,24)  Bold
do Format-Number(&RUN_CNTL_HR_BEL.REVENUE_COMPEN_BEL, $REVENUE_COMPEN, '999,999,999,999.9999')
print $REVENUE_COMPEN (,26,20) UnderLine

print $T_SOC_PASS_TOTAL       (+1,1,24)  Bold
do Format-Number(&RUN_CNTL_HR_BEL.SOC_PASS_TOTAL_BEL, $SOC_PASS_TOTAL, '999,999,999,999.9999')
print $SOC_PASS_TOTAL (,26,20)

print ' '                       (+1,1)

end-procedure Print-Detail5

#include 'hrctlbel.sqc'  !Get run control parameter values (BEL)
#include 'hrgetbel.sqc'  !Get values mask routines (BEL)

#Include 'readxlat.sqc'  !get translates for fieldname, value
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
