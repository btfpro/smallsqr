!***********************************************************************
! FPA6ANC.SQC :  Seniority batch                                       *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2006/07/19:12:47:00                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************
!***************************************************************
!
!       Anciennete : seniority
!
!***************************************************************

BEGIN-PROCEDURE Anciennete

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Anciennete - begin'
    #IFDEF DEBUGJ
        DISPLAY 'Emplid : '     noline
        DISPLAY $emplid
        DISPLAY 'Empl Rcd : '   noline
        DISPLAY #effseq2
    #ENDIF
#ENDIF

    !let $emplid = $_emplid_anc
    !let #emplrcd = #_emplrcd_anc
    !let $effdt = $_effdt_anc
    !let #effseq = #_effseq_anc

    do Get-PrStp-Data3


    ! Seniority in the previous step
    ! Retrieves data of the current step
    !-----------------------------------
    Let $emplid-temp = $emplid
    Let #emplrcd-temp = #emplrcd
    Let $effdt-temp = $effdt
    Let #effseq-temp = #effseq2


#IFDEF DEBUGI
    #IFDEF DEBUGJ
        DISPLAY '$_effdt_anc : '    noline
        DISPLAY $_effdt_anc
        DISPLAY '$effdt : '         noline
        DISPLAY $effdt
    #ENDIF
#ENDIF


    Let $emplid = $Emplid-Pre3
    Let #emplrcd = #Empl_rcd-pre3
    Let $effdt = $Effdt-pre3
    Let #effseq2 = #Effseq-pre3


#IFDEF DEBUGI
    #IFDEF DEBUGJ
        DISPLAY '$Emplid-Pre3 : ' noline
        DISPLAY $Emplid-Pre3
    #ENDIF
#ENDIF


    Do Calcul_Anciennete


    ! Seniority in the current step
    !------------------------------
    Let $emplid = $emplid-temp
    Let #emplrcd = #emplrcd-temp
    Let $effdt = $effdt-temp
    Let #effseq2 = #effseq-temp

    Do Calcul_Anciennete


#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Anciennete - end'
#ENDIF

END-PROCEDURE Anciennete



!***************************************************************
!
!
!       Calcul_Anciennete : seniority calculation
!
!
!***************************************************************
BEGIN-PROCEDURE Calcul_Anciennete

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Calcul_Anciennete - begin'
#ENDIF

display '****************** SENIORITY CALCULATION *******************'

   do Get-Cal-Thirtieth($Cal-Thirtieth,$Termdt-cd)    !Calendar or Tirtieth

 ! Previous row : init variables
 !------------------------------
 Let $Emplid-Pre = ' '               !Emplid in previous instance
 Let $Rank-Pre = ' '                 !Grade in previous instance
 Let $Corps-Pre = ' '                !Body in previous instance
 Let #Empl_rcd-pre = 0               !Empl Rcd in previous instance
 Let $Cld-Step-Pre = ' '             !Terminated step in previous instance
 Let $EndCar-Pre = ''                !End date in previous instance
 DO Convert-To-DTU-Date ($AsOfToday,$ThruDate_dtu)

let $sql-statement = 'FPA6ANC.SQC,Select,Calcul_Anciennete'
BEGIN-SELECT distinct On-Error=SQL-Error

D.EMPLID                                            &D.Emplid
D.EMPL_RCD                                          &D.Empl_rcd
{DATEOUT-PREFIX}D.EFFDT{DATEOUT-SUFFIX}             &D.StepBeg_dt
D.EFFDT
D.FP_CORPS_CD                                       &D.Corps
D.FP_SETID_RANK                                     &D.Setid
D.FP_RANK_CD                                        &D.Rank
D.FP_STEP_CD                                        &D.Step
D.EFFSEQ                                            &D.Sequence
{DATEOUT-PREFIX}D.FP_FOR_PROM_DT{DATEOUT-SUFFIX}    &D.For_Prom_dt
{DATEOUT-PREFIX}D.FP_STEP_END_DT{DATEOUT-SUFFIX}    &D.StepEnd_dt
D.FP_CLD_INST                                       &D.Cld-Inst
D.FP_CLD_STEP                                       &D.Cld-Step      !Terminated step

        ! Use of variables
        !-----------------
        let $Emplid = rtrim(&D.Emplid,' ')
        let #Empl_rcd = &D.Empl_rcd
        let #Sequence = &D.Sequence
        Do Convert-To-DTU-Date(&D.StepBeg_dt,$StepBeg_dt)

        ! effdt in native format
        !-----------------------
        let $effdt_nat = &D.StepBeg_dt


        #IFDEF DEBUGI
            #IFDEF DEBUGJ
                DISPLAY '********************************************************'
                DISPLAY 'Empl Id : '           noline
                DISPLAY &D.Emplid

                DISPLAY 'Previous Empl Id : '  noline
                DISPLAY $Emplid-Pre

                DISPLAY 'Empl Rcd : '          noline
                DISPLAY &D.Empl_rcd
                DISPLAY 'Body : '              noline
                DISPLAY &D.Corps
                DISPLAY 'Grade : '             noline
                DISPLAY &D.Rank
                DISPLAY 'Step : '              noline
                DISPLAY &D.Step
                DISPLAY 'Terminated step : '   noline
                DISPLAY &D.Cld-Step
                DISPLAY 'Step Begin Date : '   noline
                DISPLAY &D.StepBeg_dt
                DISPLAY 'Step End Date : '     noline
                DISPLAY &D.StepEnd_dt
                DISPLAY 'Limit Date : '        noline
                DISPLAY $ThruDate_dtu
            #ENDIF
        #ENDIF

        !-------------------------------------------------------------------------------------
        !Get Step Access Period Length and Regular Period Length
        !-------------------------------------------------------------------------------------
        let $Setid = rtrim(&D.Setid,' ')
        let $Rank  = rtrim(&D.Rank,' ')
        let $Step  = rtrim(&D.Step,' ')
        do Get-Dur-Step ($effdt_nat,$Setid,$Rank,$Step,#AccesAn,#AccesMn,#AccesDy,#LegalAn,#LegalMn,#LegalDy)

        !----------------------------------------------------------------------------------------------
        ! Start of processing if change of Emplid/Empl rcd
        ! or if effdt != previous effdt + 1 and effdt != previous effdt
        !----------------------------------------------------------------------------------------------
        do dtu-subtract-days($EndCar-Pre,1,$EndCar2-Pre)
        If $Emplid != $Emplid-Pre or #Empl_rcd != #Empl_rcd-pre or ($StepBeg_dt != $EndCar-Pre and $StepBeg_dt != $EndCar2-Pre)

            do Get-PrStp-Data2                       ! Retrieve previous step data

            ! FPAEEUPDROW update
            !-------------------
            do Insert-Fpaeeupdrow($Emplid,#Empl_rcd,$Effdt_nat,$AsOfToday)

            #IFDEF DEBUGI
                #IFDEF DEBUGJ
                    DISPLAY 'FPAEEUPDROW update '
                #ENDIF
            #ENDIF

            ! If instance without previous instance with a different empl rcd
            !----------------------------------------------------------------
            if $Emplid != $Emplid-Pre or #Empl_rcd != #Empl_rcd-pre

                Let $Emplid-Pre = ' '               !Emplid in previous instance
                Let $Rank-Pre = ' '                 !Grade in previous instance
                Let $Corps-Pre = ' '                !Body in previous instance
                Let #Empl_rcd-pre = 0               !Body in previous instance
                Let $Cld-Step-Pre = ' '             !Terminated step in previous instance
                Let $EndCar-Pre = ''                !End date in previous instance


                ! Carry over seniority initialization
                !------------------------------------
                let #Anc-An-Tra-Pre = 0
                let #Anc-Mn-Tra-Pre = 0
                let #Anc-Dy-Tra-Pre = 0

            end-if
        end-if

        !-----------------------------------------------------------------------------------
        ! 'Q' bonus. Process start if previous step is terminated and if same Emplid/Emplrcd
        !-----------------------------------------------------------------------------------
        if $Cld-Step-Pre = 'Y' or $Emplid != $Emplid-Pre or #Empl_rcd != #Empl_rcd-pre

            let $Rank  = rtrim(&D.Rank,' ')
            let $Step  = rtrim(&D.Step,' ')
            do Get-Bonif ($Emplid,#Empl_rcd,$effdt_nat,$Rank,$Step,#Bonus-An,#Bonus-Mn,#Bonus-Dy)

        end-if

        do Va-Reinit2                   ! Reinit variables for each employee
        do Search-Pos-Stat1             ! Search for the last civil service position link to
                                        ! the previous step
        do Search-Pos-Stat2             ! Search for civil service position and career increment

        do Calc-Anc-Ke-Tra              ! Carry over seniority
        do Calc-Anc-Rank-Corps          ! Grade seniority and Body seniority calculation
        do Updt-Career                  ! Career table update

         #IFDEF DEBUGI
             #IFDEF DEBUGJ
                 DISPLAY '********************************************************'
             #ENDIF
         #ENDIF

FROM  PS_FPMSALSTEP_TBL     A,
      PS_FPMSALMATRX_TBL    B,
      PS_FPMRANK_TBL        C,
      PS_FPAEECAREER        D,
      PS_FPAEESTATUS        E,
      PS_FPMSTATUSEE_TBL    F
     ,PS_FPFAST_PERS_VW2    SCRTY       !SQR security

WHERE       A.FP_MATRIX_TYP = B.FP_MATRIX_TYP
      and   A.FP_MATRIX_CD  = B.FP_MATRIX_CD
      and   B.EFF_STATUS    = 'A'
      and   A.FP_SCALE_CD   = B.FP_SCALE_CD
      and   A.FP_STEP_CD    = D.FP_STEP_CD
      and   A.EFFDT         =
             (select max(A1.EFFDT) from PS_FPMSALSTEP_TBL A1
              where A1.FP_MATRIX_TYP = B.FP_MATRIX_TYP
              and   A1.FP_MATRIX_CD  = B.FP_MATRIX_CD
              and   A1.FP_SCALE_CD   = B.FP_SCALE_CD
              and   A1.FP_STEP_CD    = D.FP_STEP_CD
              and    A1.EFFDT    <= D.EFFDT)
      and   C.FP_MATRIX_TYP = B.FP_MATRIX_TYP
      and   C.FP_MATRIX_CD  = B.FP_MATRIX_CD
      and   C.FP_SCALE_CD   = B.FP_SCALE_CD
      and   C.SETID         = D.FP_SETID_RANK
      and   C.FP_RANK_CD    = D.FP_RANK_CD
      and   C.EFF_STATUS    = 'A'
      and   C.EFFDT         =
             (select max(C1.EFFDT) from PS_FPMRANK_TBL C1
              where C1.FP_MATRIX_TYP = B.FP_MATRIX_TYP
              and   C1.FP_MATRIX_CD  = B.FP_MATRIX_CD
              and   C1.FP_SCALE_CD   = B.FP_SCALE_CD
              and   C1.SETID         = D.FP_SETID_RANK
              and   C1.FP_RANK_CD    = D.FP_RANK_CD
              and   C1.EFFDT    <= D.EFFDT)
              and   D.FP_INST_STAT  = 'R'              ! Actual
              and   B.EFFDT          =   A.EFFDT       ! Salary grade table effdt

      and   D.EMPLID = $emplid
      and   D.EMPL_RCD = #emplrcd
      and   D.EFFDT = {DATEIN-PREFIX}$effdt{DATEIN-SUFFIX}
      and   D.EFFSEQ = #effseq2

      and E.EMPLID = SCRTY.EMPLID     !
      and E.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
      [$SecurityClause]               !

ORDER BY D.EMPLID,D.EMPL_RCD,D.EFFDT,D.EFFSEQ         ! Order by effdt and effecive sequence

END-SELECT


#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Calcul_Anciennete - end'
#ENDIF

END-PROCEDURE  Calcul_Anciennete



!***************************************************************
!
!       Get-PrStp-Data2 : retrieve previous step data
!
!              - Grade Body
!              - Grade and Body seniority
!              - Carry over seniority from previous step
!
!***************************************************************

BEGIN-PROCEDURE Get-PrStp-Data2

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Get-PrStp-Data2 - begin'
#ENDIF

! Select the Grade and the Body link to the previous Step
! Retrieve the seniority to carry over
!--------------------------------------------------------

let $sql-statement = 'FPA6ANC.SQC,Select,Get-PrStp-Data2'
BEGIN-SELECT On-Error=SQL-Error

! Fetch data links to the previous step
!--------------------------------------
A.EMPLID                                            &A.Emplid-Pre
A.EMPL_RCD                                          &A.Empl_rcd-pre
{DATEOUT-PREFIX}A.FP_STEP_END_DT{DATEOUT-SUFFIX}    &A.StepEnd_dt-pre
A.FP_RANK_CD                                        &A.Rank-Pre
A.FP_CORPS_CD                                       &A.Corps-Pre
A.FP_CLD_STEP                                       &A.Cld-Step-Pre2

! Fetch seniorities
!------------------
A.FP_SENINSTPDY         &A.SENINSTPDY
A.FP_SENINSTPMN         &A.SENINSTPMN
A.FP_SENINSTPYR         &A.SENINSTPYR
A.FP_SENKEPT_DY         &A.SENKEPT_DY
A.FP_SENKEPT_MN         &A.SENKEPT_MN
A.FP_SENKEPT_YR         &A.SENKEPT_YR
A.FP_TRUESEN_DY         &A.TRUESEN_DY
A.FP_TRUESEN_MN         &A.TRUESEN_MN
A.FP_TRUESEN_YR         &A.TRUESEN_YR
A.FP_SENRAN_DY          &A.SENRAN_DY
A.FP_SENRAN_MN          &A.SENRAN_MN
A.FP_SENRAN_YR          &A.SENRAN_YR
A.FP_SENCOR_DY          &A.SENCOR_DY
A.FP_SENCOR_MN          &A.SENCOR_MN
A.FP_SENCOR_YR          &A.SENCOR_YR
A.FP_SENTRANSDY         &A.SENTRANSDY
A.FP_SENTRANSMN         &A.SENTRANSMN
A.FP_SENTRANSYR         &A.SENTRANSYR

        Let $Emplid-Pre =   rtrim(&A.Emplid-Pre,' ')
        Let #Empl_rcd-pre = &A.Empl_rcd-pre

        Let $Rank-Pre =     rtrim(&A.Rank-Pre,' ')
        Let $Corps-Pre =    rtrim(&A.Corps-Pre,' ')
        Let $Cld-Step-Pre = rtrim(&A.Cld-Step-Pre2,' ')
        Do Convert-To-DTU-Date(&A.StepEnd_dt-pre,$EndCar-Pre)

        ! Seniority to carry over
        !------------------------
        Let #Anc-An-Tra-Pre = &A.SENTRANSYR
        Let #Anc-Mn-Tra-Pre = &A.SENTRANSMN
        Let #Anc-Dy-Tra-Pre = &A.SENTRANSDY

        ! Career seniority
        !-----------------
        Let #Anc-An-Car-Pre = &A.SENINSTPYR
        Let #Anc-Mn-Car-Pre = &A.SENINSTPMN
        Let #Anc-Dy-Car-Pre = &A.SENINSTPDY

        ! Retained seniority
        !-------------------
        Let #Anc-An-Kep-Pre = &A.SENKEPT_YR
        Let #Anc-Mn-Kep-Pre = &A.SENKEPT_MN
        Let #Anc-Dy-Kep-Pre = &A.SENKEPT_DY

        ! Actual seniority
        !-----------------
        let #Anc-An-Rel-Pre = &A.TRUESEN_YR
        let #Anc-Mn-Rel-Pre = &A.TRUESEN_MN
        let #Anc-Dy-Rel-Pre = &A.TRUESEN_DY

        ! Seniority in grade
        !-------------------
        Let #SENRAN_DY=&A.SENRAN_DY
        Let #SENRAN_MN=&A.SENRAN_MN
        Let #SENRAN_YR=&A.SENRAN_YR

        ! Seniority in body
        !------------------
        Let #SENCOR_DY=&A.SENCOR_DY
        Let #SENCOR_MN=&A.SENCOR_MN
        Let #SENCOR_YR=&A.SENCOR_YR

from PS_FPAEECAREER A
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

Where A.EMPLID = &D.Emplid
and A.EMPL_RCD = &D.Empl_rcd
and A.FP_INST_STAT = 'R'
and A.EFFDT =
    (Select MAX(B.EFFDT) from PS_FPAEECAREER B
     where B.EMPLID = &D.Emplid
     and B.EMPL_RCD = &D.Empl_rcd
     and B.FP_INST_STAT = 'R'
     and B.EFFDT < {DATEIN-PREFIX}&D.StepBeg_dt{DATEIN-SUFFIX})
and A.EFFSEQ =
    (Select MAX(C.EFFSEQ) from PS_FPAEECAREER C
     where C.EMPLID = &D.Emplid
     and C.EMPL_RCD=&D.Empl_rcd
     and C.FP_INST_STAT = 'R'
     and C.EFFDT = A.EFFDT )

and A.EMPLID = SCRTY.EMPLID     !
and A.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
[$SecurityClause]               !

END-SELECT

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Get-PrStp-Data2 - end'
#ENDIF

END-PROCEDURE Get-PrStp-Data2



!***************************************************************
!
!       Get-PrStp-Data3 : retrieve previous step data
!
!              - Grade Body
!
!***************************************************************
BEGIN-PROCEDURE Get-PrStp-Data3

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Get-PrStp-Data3 - begin'
#ENDIF

! Select the Grade and the Body link to the previous Step
! Retrieve the seniority to carry over
!--------------------------------------------------------
let $sql-statement = 'FPA6ANC.SQC,Select,Calc-Anc-Rank-Corps'
BEGIN-SELECT distinct On-Error=SQL-Error

! Fetch data links to the previous step
!--------------------------------------
A.EMPLID                                &AA.Emplid-Pre
A.EMPL_RCD                              &AA.Empl_rcd-pre
{DATEOUT-PREFIX}A.EFFDT{DATEOUT-SUFFIX} &AA.Effdt-pre
A.EFFSEQ                                &AA.Effseq-pre

        Let $Emplid-Pre3 = rtrim(&AA.Emplid-Pre,' ')
        Let #Empl_rcd-pre3 =    &AA.Empl_rcd-pre
        Let $Effdt-pre3 =       &AA.Effdt-pre
        Let #Effseq-pre3 =      &AA.Effseq-pre

from PS_FPAEECAREER A
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

Where A.EMPLID = $emplid
and A.EMPL_RCD = #emplrcd
and A.FP_INST_STAT = 'R'
and A.EFFDT =
            (Select MAX(B.EFFDT) from PS_FPAEECAREER B
            where B.EMPLID = $emplid
            and B.EMPL_RCD = #emplrcd
            and B.FP_INST_STAT = 'R'
            and B.EFFDT < {DATEIN-PREFIX}$effdt{DATEIN-SUFFIX})
and A.EFFSEQ =
            (Select MAX(C.EFFSEQ) from PS_FPAEECAREER C
            where C.EMPLID = $emplid
            and C.EMPL_RCD=#emplrcd
            and C.FP_INST_STAT = 'R'
            and C.EFFDT = A.EFFDT )

and A.EMPLID = SCRTY.EMPLID     !
and A.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
[$SecurityClause]               !

END-SELECT

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Get-PrStp-Data3 - end'
#ENDIF

END-PROCEDURE Get-PrStp-Data3



!***************************************************************
!
!       Va-Reinit2 : reinit variables for each employee
!
!***************************************************************
BEGIN-PROCEDURE Va-Reinit2

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Va-Reinit2 - begin'
#ENDIF

    !Number of days End of civil service position
    !-----------------------------------------------
    IF $Cal-Thirtieth ='T'  !Thirtieth
        let #Days-Number=30
    else                    !Calendar
        Do Days-Number($StepBeg_dt,#Days-Number)
    end-if


    ! Non-terminated step take in account
    !------------------------------------
    if $Cld-Step-Pre != 'N'                         !Previous terminated step

        let #Anc-Dy-Car = #Bonus-Dy                 !Bonus
        let #Anc-Mn-Car = #Bonus-Mn
        let #Anc-An-Car = #Bonus-An

        let #Anc-An-Kep = #Anc-An-Tra-Pre           !Retrieve of seniority to carry over
        let #Anc-Mn-Kep = #Anc-Mn-Tra-Pre
        let #Anc-Dy-Kep = #Anc-Dy-Tra-Pre

        let #Anc-Dy-Rel = 0                         !Actual seniority
        let #Anc-Mn-Rel = 0
        let #Anc-An-Rel = 0

    else                                            !Previous non-terminated step

        let #Anc-Dy-Car = 0
        let #Anc-Mn-Car = 0
        let #Anc-An-Car = 0

        ! Seniority saved = Previous seniority saved + previous career seniority
        !-----------------------------------------------------------------------
        let #Anc-An-Kep = #Anc-An-Kep-Pre + #Anc-An-Car-Pre
        let #Anc-Mn-Kep = #Anc-Mn-Kep-Pre + #Anc-Mn-Car-Pre
        let #Anc-Dy-Kep = #Anc-Dy-Kep-Pre + #Anc-Dy-Car-Pre

        ! Adjust to YY/MM/DD format
        !--------------------------

        While #Anc-Dy-Kep >= #Days-Number
               let #Anc-Mn-Kep = #Anc-Mn-Kep + 1
               let #Anc-Dy-Kep = #Anc-Dy-Kep - #Days-Number
        End-While

        While #Anc-Mn-Kep >= 12
               let #Anc-An-Kep = #Anc-An-Kep + 1
               let #Anc-Mn-Kep = #Anc-Mn-Kep - 12
        End-While

        let #Anc-Dy-Rel = #Anc-Dy-Rel-Pre           !Fetch the previous actual seniority
        let #Anc-Mn-Rel = #Anc-Mn-Rel-Pre
        let #Anc-An-Rel = #Anc-An-Rel-Pre

    end-if

    DO Convert-To-DTU-Date (&D.For_Prom_dt,$For_Prom_dt)
    DO Convert-To-DTU-Date (&D.StepEnd_dt,$StepEnd_dt)

    let #Anc-Dy-Rank = 0                            !Actual seniority in Grade
    let #Anc-Mn-Rank = 0
    let #Anc-An-Rank = 0

    let #Anc-Dy-Corps = 0                           !Actual seniority in Body
    let #Anc-Mn-Corps = 0
    let #Anc-An-Corps = 0

    let $FP_SEN_CALC = 'N'                          !Seniority flag


    #IFDEF DEBUGI
        #IFDEF DEBUGJ
            DISPLAY 'Promotion date :' noline
            DISPLAY $For_Prom_dt
        #ENDIF
    #ENDIF

    !----------------------------------------------------------------------
    !Career seniority is the period between the begin date in step,
    !and the minimum date among the current date and the promotion date.
    !----------------------------------------------------------------------

    !Career seniority: step begin date - promotion date
    !Date of end of career calculation
    !---------------------------------

    !Fetch of the min end date
    !-------------------------

    if $StepEnd_dt = ''
        IF $For_Prom_dt = ''
            let $EndCar = $ThruDate_dtu
        else
            do dtu-subtract-days ($For_Prom_dt,1,$EndCar)
            IF $EndCar > $ThruDate_dtu or $EndCar < $StepBeg_dt
                 let $EndCar = $ThruDate_dtu
            end-if
        end-if
    else
        !Take in account the latest date
        !-------------------------------
        IF $stepEnd_dt > $ThruDate_dtu
                let $EndCar = $ThruDate_dtu
                let $FP_SEN_CALC = 'Y'
        else
                let $EndCar = $StepEnd_dt
        end-if
    end-if


    DO Convert-From-DTU-Date ($EndCar,$EndCar_native)

    let $Calcul-Anc-Car = 'Y'                   !Career seniority calculation flag
    let $Calcul-Anc-Re = 'Y'                    !Actual seniority calculation flag


   #IFDEF DEBUGI
        #IFDEF DEBUGJ
            DISPLAY 'End date :' noline
            DISPLAY $EndCar
        #ENDIF
   #ENDIF

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Va-Reinit2 - end'
#ENDIF

END-PROCEDURE  Va-Reinit2



!***************************************************************
!
!       Search-Pos-Stat1 : select the last of the civil service position which
!                          is linked to the previous step, when the end date of
!                          this last civil service position is greater than the
!                          current step begin date.
!
!***************************************************************
BEGIN-PROCEDURE Search-Pos-Stat1

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / search-pos-stat1 - begin'
#ENDIF

!Fetch the last civil service position of the previous step
!----------------------------------------------------------

let $sql-statement = 'FPA6ANC.SQC,Select,Search-Pos-Stat1'
BEGIN-SELECT On-Error=SQL-Error

{DATEOUT-PREFIX}A.EFFDT{DATEOUT-SUFFIX}         &A.Posit-Beg1
{DATEOUT-PREFIX}A.FP_FOREND_DT{DATEOUT-SUFFIX}  &A.ForEnd_Dt1
{DATEOUT-PREFIX}A.FP_END_DT{DATEOUT-SUFFIX}     &A.Posit-End1
B.FP_PROM_STEP                                  &B.AutoProm1
B.FP_CAREFRZPCT                                 &B.Coeff1

        do Convert-To-DTU-Date(&D.StepBeg_dt,$Posit-Beg)
        do Convert-To-DTU-Date(&A.ForEnd_Dt1,$ForEnd_Dt)
        do Convert-To-DTU-Date(&A.Posit-End1,$Posit-End)
        let $AutoProm = rtrim(&B.AutoProm1,' ')
        let #Coeff = &B.Coeff1

        do CalcAnc-Posit-End       !Calculation of the civil service position end-date

        #IFDEF DEBUGI
            #IFDEF DEBUGJ
                DISPLAY '$Posit-End : '     noline
                DISPLAY $Posit-End
                DISPLAY '$StepEnd_dt : '    noline
                DISPLAY $StepEnd_dt
                DISPLAY '$Posit-Beg : '     noline
                DISPLAY $Posit-Beg
            #ENDIF
        #ENDIF

        If $Posit-End >= $Posit-Beg
                do Calc-Anc2
        end-if


from  PS_FPAEELEGALSTAT A, PS_FPMLEGALSTA_TBL B
     ,PS_FPFAST_PERS_VW2 SCRTY                      !SQR security

where A.EMPLID = &D.Emplid
and   A.EMPL_RCD = &D.Empl_rcd
and   A.FP_INST_STAT = 'R'
and   A.EFFDT  =
        (select max(EFFDT)
         from  PS_FPAEELEGALSTAT
         where EMPLID = &D.Emplid
         and   FP_INST_STAT = 'R'
         and   EMPL_RCD = &D.Empl_rcd
         and   EFFDT < {DATEIN-PREFIX}&D.StepBeg_dt{DATEIN-SUFFIX})
and   A.FP_LEGALSTAT_CD  = B.FP_LEGALSTAT_CD
and   B.EFF_STATUS    = 'A'
and   B.EFFDT =
        (select max(EFFDT)
         from  PS_FPMLEGALSTA_TBL
         where FP_LEGALSTAT_CD = A.FP_LEGALSTAT_CD
         and   EFFDT <= A.EFFDT)

and A.EMPLID = SCRTY.EMPLID     !
and A.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
[$SecurityClause]               !

END-SELECT

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / search-pos-stat1 - end'
#ENDIF

END-PROCEDURE  Search-Pos-Stat1



!***************************************************************
!
!       Search-Pos-Stat2 : fetch all the civil service position
!                          of the current step
!
!***************************************************************
BEGIN-PROCEDURE Search-Pos-Stat2

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / search-pos-stat2 - begin'
#ENDIF

let $sql-statement = 'FPA6ANC.SQC,Select,Search-Pos-Stat2'
BEGIN-SELECT On-Error=SQL-Error

{DATEOUT-PREFIX}W.EFFDT{DATEOUT-SUFFIX}         &W.Posit-Beg2
{DATEOUT-PREFIX}W.FP_FOREND_DT{DATEOUT-SUFFIX}  &W.ForEnd_Dt2
{DATEOUT-PREFIX}W.FP_END_DT{DATEOUT-SUFFIX}     &W.Posit-End2
X.FP_PROM_STEP                                  &X.AutoProm2
X.FP_CAREFRZPCT                                 &X.Coeff2

        do Convert-To-DTU-Date(&W.Posit-Beg2,$Posit-Beg)
        do Convert-To-DTU-Date(&W.ForEnd_Dt2,$ForEnd_Dt)
        do Convert-To-DTU-Date(&W.Posit-End2,$Posit-End)
        let $AutoProm = rtrim(&X.AutoProm2,' ')
        let #Coeff = &X.Coeff2

        #IFDEF DEBUGI
            #IFDEF DEBUGJ
                DISPLAY '$Posit-Beg Search-Pos-Stat2 : '     noline
                DISPLAY $Posit-Beg
            #ENDIF
        #ENDIF

        do CalcAnc-Posit-End        !Calculation of the end of civil service position

        do Calc-Anc2                !Seniority calculation


from  PS_FPAEELEGALSTAT W, PS_FPMLEGALSTA_TBL X
     ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where W.EMPLID = &D.Emplid
and   W.EMPL_RCD = &D.Empl_rcd
and   W.EFFDT >= {DATEIN-PREFIX}&D.StepBeg_dt{DATEIN-SUFFIX}
and   W.EFFDT < {DATEIN-PREFIX}$EndCar_native{DATEIN-SUFFIX}
and   W.FP_INST_STAT = 'R'
and   W.FP_LEGALSTAT_CD  = X.FP_LEGALSTAT_CD
and   X.EFF_STATUS    = 'A'
and   X.EFFDT =
        (select max(EFFDT)
         from  PS_FPMLEGALSTA_TBL
         where FP_LEGALSTAT_CD = W.FP_LEGALSTAT_CD
         and   EFFDT <= W.EFFDT)

and W.EMPLID = SCRTY.EMPLID     !
and W.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
[$SecurityClause]               !

order by W.EFFDT

END-SELECT

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / search-pos-stat2 - end'
#ENDIF

END-PROCEDURE Search-Pos-Stat2



!***************************************************************
!
!    Calc-Anc2 : iterative calculation of actual seniority and
!                career seniority
!
!***************************************************************
BEGIN-PROCEDURE Calc-Anc2

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Calc-Anc2 - begin'
#ENDIF
        #IFDEF DEBUGI
            #IFDEF DEBUGJ
                Display '$Calcul-Anc-Re' noline
                Display $Calcul-Anc-Re
            #ENDIF
        #ENDIF

        !Actual seniority calculation
        !--------------------------
        If $Calcul-Anc-Re = 'Y'
                if $Posit-End > $EndCar
                        let $Posit-End = $EndCar
                        let $Calcul-Anc-Re='N'
                end-if
                do Calc-Anc-Re           !Actual seniority calculation
        end-if

        #IFDEF DEBUGI
            #IFDEF DEBUGJ
                DISPLAY '$Calcul-Anc-Car : '     noline
                DISPLAY $Calcul-Anc-Car
            #ENDIF
        #ENDIF

        !Career seniority calculation
        !----------------------------
        If $Calcul-Anc-Car = 'Y'
                if $Posit-End > $EndCar
                        let $Posit-End = $EndCar
                        Let $Calcul-Anc-Car='N'
                end-if
                do Calc-Anc-Car          !Career seniority calculation
        end-if

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Calc-Anc2 - end'
#ENDIF

END-PROCEDURE Calc-Anc2



!************************************************************
!
!    Calc-Anc-Car : iterative calculation of career seniority
!
!************************************************************
BEGIN-PROCEDURE Calc-Anc-Car

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Calc-Anc-Car - begin'
    #IFDEF DEBUGJ
        DISPLAY 'Posit-Beg : ' noline
        DISPLAY $Posit-Beg
        DISPLAY 'Posit-End : ' noline
        DISPLAY $Posit-End
        DISPLAY 'Coeff : ' noline
        DISPLAY #Coeff
    #ENDIF
#ENDIF

!Calculation of the civil service position duration
!--------------------------------------------------
do FP-Calc-Dur($Cal-Thirtieth,$Posit-Beg,$Posit-End,#A,#M,#J)
#IFDEF DEBUGJ
    DISPLAY 'Difference between begin and end in Y/M/D :'
    DISPLAY #A
    DISPLAY #M
    DISPLAY #J
#ENDIF

!Total seniority with % advancement career (actual seniority)
!----------------------------------------------------------
let #Anc-Dy-Car = #Anc-Dy-Car + #J*(#Coeff/100)
let #Anc-Mn-Car = #Anc-Mn-Car + #M*(#Coeff/100)
let #Anc-An-Car = #Anc-An-Car + #A*(#Coeff/100)


!Needed adjustement due to %
!---------------------------
let #AA = round(#Anc-An-Car,0) - #Anc-An-Car
let #Anc-An-Car = #Anc-An-Car - #AA
let #Anc-Mn-Car = #Anc-Mn-Car + (#AA * 12)

let #AM = round(#Anc-Mn-Car,0) - #Anc-Mn-Car
let #Anc-Mn-Car = #Anc-Mn-Car - #AM
let #Anc-Dy-Car = #Anc-Dy-Car + (#AM * 30)

let #Anc-Dy-Car = round(#Anc-Dy-Car,0)

While #Anc-Dy-Car >= #Days-Number
        let #Anc-Mn-Car = #Anc-Mn-Car + 1
        let #Anc-Dy-Car = #Anc-Dy-Car - #Days-Number
End-While

While #Anc-Mn-Car >= 12
        let #Anc-An-Car = #Anc-An-Car + 1
        let #Anc-Mn-Car = #Anc-Mn-Car - 12
End-While

#IFDEF DEBUGI
    #IFDEF DEBUGJ
        DISPLAY 'Career seniority :'
        DISPLAY #Anc-An-Car
        DISPLAY #Anc-Mn-Car
        DISPLAY #Anc-Dy-Car
    #ENDIF
    DISPLAY 'FPA6ANC.SQC / Calc-Anc-Car - end'
#ENDIF

END-PROCEDURE Calc-Anc-Car



!***************************************************************
!
!    Calc-Anc-Re : Iterative calculation of actual seniority
!
!***************************************************************
BEGIN-PROCEDURE Calc-Anc-Re

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Calc-Anc-Re - begin'
    #IFDEF DEBUGJ
        DISPLAY 'Posit-Beg : ' noline
        DISPLAY $Posit-Beg
        DISPLAY 'Posit-End : ' noline
        DISPLAY $Posit-End
        DISPLAY 'Coeff : ' noline
        DISPLAY #Coeff
    #ENDIF
#ENDIF


!Number of days End of civil service position
!--------------------------------------------
IF $Cal-Thirtieth ='T'  !Thirtieth
        let #Days-Number=30
else                    !Calendar
        Do Days-Number($Posit-End,#Days-Number )
end-if


!Calculation of the civil service position duration
!--------------------------------------------------
do FP-Calc-Dur($Cal-Thirtieth,$Posit-Beg,$Posit-End,#A,#M,#J)
#IFDEF DEBUGJ
    DISPLAY 'Difference between begin and end in Y/M/D :'
    DISPLAY #A
    DISPLAY #M
    DISPLAY #J
#ENDIF


!Total seniority with % advancement career (actual seniority)
!------------------------------------------------------------
let #Anc-Dy-Rel = #Anc-Dy-Rel + #J*(#Coeff/100)
let #Anc-Mn-Rel = #Anc-Mn-Rel + #M*(#Coeff/100)
let #Anc-An-Rel = #Anc-An-Rel + #A*(#Coeff/100)


!Needed adjustement due to %
!---------------------------
let #AA = round(#Anc-An-Rel,0) - #Anc-An-Rel
let #Anc-An-Rel = #Anc-An-Rel - #AA
let #Anc-Mn-Rel = #Anc-Mn-Rel + (#AA * 12)

let #AM = round(#Anc-Mn-Rel,0) - #Anc-Mn-Rel
let #Anc-Mn-Rel = #Anc-Mn-Rel - #AM
let #Anc-Dy-Rel = #Anc-Dy-Rel + (#AM * 30)

let #Anc-Dy-Rel = round(#Anc-Dy-Rel,0)

While #Anc-Dy-Rel >= #Days-Number
        let #Anc-Mn-Rel = #Anc-Mn-Rel + 1
        let #Anc-Dy-Rel = #Anc-Dy-Rel - #Days-Number
End-While

While #Anc-Mn-Rel >= 12
        let #Anc-An-Rel = #Anc-An-Rel + 1
        let #Anc-Mn-Rel = #Anc-Mn-Rel - 12
End-While


#IFDEF DEBUGI
    #IFDEF DEBUGJ
        DISPLAY 'Seniority :'
        DISPLAY #Anc-An-Car
        DISPLAY #Anc-Mn-Car
        DISPLAY #Anc-Dy-Car
    #ENDIF
    DISPLAY 'FPA6ANC.SQC / Calc-Anc-Rel - end'
#ENDIF

END-PROCEDURE Calc-Anc-Re



!***************************************************************
!
!    Calc-Anc-Rank-Corps:  calculation of actual seniority
!                                   - in the Grade
!                                   - in the Body
!
!***************************************************************
BEGIN-PROCEDURE Calc-Anc-Rank-Corps

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Calc-Anc-Rank-Corps - begin'
#ENDIF

!----------------------------------------------------------------------------------------------------
!If Grade advancement : actual seniority in Grade = actual seniority in Step
!Else :                 actual seniority in Grade =  actual seniority in Step
!                                                  + actual seniority in previous Step and Grade
!----------------------------------------------------------------------------------------------------

IF rtrim(&D.Rank,' ') = $Rank-Pre                       !No Grade advancement

    #IFDEF DEBUGI
        #IFDEF DEBUGJ
            DISPLAY 'No Grade advancement'
        #ENDIF
    #ENDIF


    if $Cld-Step-Pre = 'Y'                              !Previous Step is terminated

        Let #SENRAN_DY=#SENRAN_DY + #Anc-Dy-Rel
        Let #SENRAN_MN=#SENRAN_MN + #Anc-Mn-Rel
        Let #SENRAN_YR=#SENRAN_YR + #Anc-An-Rel

    else                                                !Previous Step is not terminated

        Let #SENRAN_DY=#SENRAN_DY + #Anc-Dy-Car
        Let #SENRAN_MN=#SENRAN_MN + #Anc-Mn-Car
        Let #SENRAN_YR=#SENRAN_YR + #Anc-An-Car

    end-if

    While #SENRAN_DY >= #Days-Number
        let #SENRAN_MN = #SENRAN_MN + 1
        let #SENRAN_DY = #SENRAN_DY - #Days-Number
    End-While

    While #SENRAN_MN >= 12
        let #SENRAN_YR = #SENRAN_YR + 1
        let #SENRAN_MN = #SENRAN_MN - 12
    End-While

else                                                    !Grade advancement

    #IFDEF DEBUGI
        #IFDEF DEBUGJ
            DISPLAY 'Grade advancement'
        #ENDIF
    #ENDIF

    Let #SENRAN_DY=#Anc-Dy-Rel
    Let #SENRAN_MN=#Anc-Mn-Rel
    Let #SENRAN_YR=#Anc-An-Rel

end-if

!------------------------------------------------------------------------------------------------
!If Body advancement : actual seniority in Body = actual seniority in Step
!Else :                actual seniority in Body =  actual seniority in Step
!                                                + actual seniority in the Body of the previous Step
!------------------------------------------------------------------------------------------------

IF rtrim(&D.Corps,' ') = $Corps-Pre

    if $Cld-Step-Pre = 'Y'                              !Previous Step is terminated

        Let #SENCOR_DY=#SENCOR_DY + #Anc-Dy-Rel
        Let #SENCOR_MN=#SENCOR_MN + #Anc-Mn-Rel
        Let #SENCOR_YR=#SENCOR_YR + #Anc-An-Rel

    else                                                !Previous Step is not terminated

        Let #SENCOR_DY=#SENCOR_DY + #Anc-Dy-Car
        Let #SENCOR_MN=#SENCOR_MN + #Anc-Mn-Car
        Let #SENCOR_YR=#SENCOR_YR + #Anc-An-Car

    end-if

    While #SENCOR_DY >= #Days-Number
        let #SENCOR_MN = #SENCOR_MN + 1
        let #SENCOR_DY = #SENCOR_DY - #Days-Number
    End-While

    While #SENCOR_MN >= 12
        let #SENCOR_YR = #SENCOR_YR + 1
        let #SENCOR_MN = #SENCOR_MN - 12
    End-While

else                                                    !Body advancement

        Let #SENCOR_DY=#Anc-Dy-Rel
        Let #SENCOR_MN=#Anc-Mn-Rel
        Let #SENCOR_YR=#Anc-An-Rel

end-if


#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Calc-Anc-Rank-Corps - end'
#ENDIF

END-PROCEDURE Calc-Anc-Rank-Corps



!***************************************************************
!
!    Calc-Anc-Ke-Tra:  seniority to carry over
!
!***************************************************************
BEGIN-PROCEDURE Calc-Anc-Ke-Tra

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Calc-Anc-Ke-Tra - begin'
#ENDIF

! If instance is terminated, calculation of the seniority to carry over
!------------------------------------------------------------------

    if rtrim(&D.Cld-Step,' ') = 'N'     !Non-terminated Step

        let #Anc-An-Tra = 0
        let #Anc-Mn-Tra = 0
        let #Anc-Dy-Tra = 0

    else                                !Terminated Step

        !Fetch of the retained seniority and the career seniority
        !to compute the carry over seniority
        !--------------------------------------------------------
        let #Anc-An-Car-Kep = #Anc-An-Car + #Anc-An-Kep
        let #Anc-Mn-Car-Kep = #Anc-Mn-Car + #Anc-Mn-Kep
        let #Anc-Dy-Car-Kep = #Anc-Dy-Car + #Anc-Dy-Kep

        do Change-Char (#Anc-An-Car-Kep,#Anc-Mn-Car-Kep,#Anc-Dy-Car-Kep,$Anc-Car-Kep)

        #IFDEF DEBUGI
            #IFDEF DEBUGJ
                DISPLAY 'Career seniority : ' noline
                DISPLAY $Anc-Car
                DISPLAY 'Legal Bonus : ' noline
                DISPLAY #Bonus_LegalDy
                DISPLAY 'Day Number : ' noline
                DISPLAY #Days-Number
            #ENDIF
        #ENDIF


        !Bonus add to Step legal duration
        !--------------------------------
        Let #Bonus_LegalAn = #Bonus-An + #LegalAn
        Let #Bonus_LegalMn = #Bonus-Mn + #LegalMn
        Let #Bonus_LegalDy = #Bonus-Dy + #LegalDy

        While #Bonus_LegalDy >= #Days-Number
                let #Bonus_LegalMn = #Bonus_LegalMn + 1
                let #Bonus_LegalDy = #Bonus_LegalDy - #Days-Number
        End-While

        While #SENCOR_MN >= 12
                let #Bonus_LegalAn = #Bonus_LegalAn + 1
                let #Bonus_LegalMn = #Bonus_LegalMn - 12
        End-While

        do Change-Char (#Bonus_LegalAn ,#Bonus_LegalMn ,#Bonus_LegalDy,$Bonus_Legal)

        #IFDEF DEBUGI
            #IFDEF DEBUGJ
                DISPLAY 'Legal duration + Bonus : ' noline
                DISPLAY $Bonus_Legal
            #ENDIF
        #ENDIF


        ! If career seniority without bonus greater than legal duration
        ! => calculation of seniority to carry over needed
        !-------------------------------------------------------------
        If $Anc-Car-Kep > $Bonus_Legal

                !Seniority to carry over
                !-----------------------
                let #Anc-An-Tra = #Anc-An-Car + #Anc-An-Kep - #Bonus-An - #LegalAn
                let #Anc-Mn-Tra = #Anc-Mn-Car + #Anc-Mn-Kep - #Bonus-Mn - #LegalMn
                let #Anc-Dy-Tra = #Anc-Dy-Car + #Anc-Dy-Kep - #Bonus-Dy - #LegalDy


                #IFDEF DEBUGI
                    #IFDEF DEBUGJ
                        DISPLAY 'Legal seniority Y/M/D'
                        DISPLAY #LegalAn
                        DISPLAY #LegalMn
                        DISPLAY #LegalDy
                        DISPLAY 'Seniority to carry over Y/M/D'
                        DISPLAY #Anc-An-Tra
                        DISPLAY #Anc-Mn-Tra
                        DISPLAY #Anc-Dy-Tra
                        DISPLAY '#Days-Number : ' noline
                        DISPLAY #Days-Number
                    #ENDIF
                #ENDIF


                !Needed adjustement due to %
                !---------------------------
                let #AA = round(#Anc-An-Tra,0) - #Anc-An-Tra
                let #Anc-An-Tra = #Anc-An-Tra - #AA
                let #Anc-Mn-Tra = #Anc-Mn-Tra + (#AA * 12)

                let #AM = round(#Anc-Mn-Tra,0) - #Anc-Mn-Tra
                let #Anc-Mn-Tra = #Anc-Mn-Tra - #AM
                let #Anc-Dy-Tra = #Anc-Dy-Tra + (#AM * #Days-Number)

                let #Anc-Dy-Tra = round(#Anc-Dy-Tra,0)

                !Negative numbers can appear due to bonus substraction
                !-----------------------------------------------------
                While #Anc-Dy-Tra < 0
                        let #Anc-Mn-Tra = #Anc-Mn-Tra - 1
                        let #Anc-Dy-Tra = #Anc-Dy-Tra + #Days-Number
                End-While

                While #Anc-Mn-Tra < 12
                        let #Anc-An-Tra = #Anc-An-Tra - 1
                        let #Anc-Mn-Tra = #Anc-Mn-Tra + 12
                End-While


                !Date adjustement
                !----------------
                While #Anc-Dy-Tra >= #Days-Number
                        let #Anc-Mn-Tra = #Anc-Mn-Tra + 1
                        let #Anc-Dy-Tra = #Anc-Dy-Tra - #Days-Number
                End-While

                While #Anc-Mn-Tra >= 12
                        let #Anc-An-Tra = #Anc-An-Tra + 1
                        let #Anc-Mn-Tra = #Anc-Mn-Tra - 12
                End-While

        Else
                let #Anc-An-Tra = 0
                let #Anc-Mn-Tra = 0
                let #Anc-Dy-Tra = 0

        end-if

    end-if


#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Calc-Anc-Ke-Tra - end'
#ENDIF

END-PROCEDURE Calc-Anc-Ke-Tra



!***************************************************************
!
!   Updt-Career : Update of FPAEECAREER
!                 Fetch the terminated Step,the career seniority
!                 and the retained seniority
!
!***************************************************************
BEGIN-PROCEDURE  Updt-Career

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Updt-Career - begin'
#ENDIF

IF rtrim(&D.Cld-Inst,' ')='Y'                       !Terminated instance

    if rtrim(&D.Cld-Step,' ') = 'Y'                 !Terminated Step

        #IFNDEF CONVERSION                          !Usual case

            do Updt-FPACareer($FP_SEN_CALC,$Emplid,#Empl_rcd,$effdt_nat,#Sequence)  !Update of the career record with
                                                                                    !"seniority to be computed" = 'N'

        #ELSE                                       !Conversion

            do Updt-Career-Bis                      !Update of the career bis record

        #ENDIF

        !Terminated Step et previous Step not terminated
        !-----------------------------------------------
        if  $Cld-Step-Pre = 'N' and $FP_SEN_CALC = 'N'

            do Updt-Career-Cld-Step                 !Update of the career record with
                                                    !"seniority to br computed" = 'N' for all
                                                    !the previous non terminated Step
        end-if

    else                                            !Non terminated Step. Career has to be computed

        let $FP_SEN_CALC = 'Y'

        #IFNDEF CONVERSION                          !Usual case

            do Updt-FPACareer($FP_SEN_CALC,$Emplid,#Empl_rcd,$effdt_nat,#Sequence)  !Update of career record with
                                                                                    !"seniority to be computed" = 'Y'

        #ELSE                                       !Conversion

            do Updt-Career-Bis                      !Update of the career bis record

        #ENDIF

    end-if

Else                                                !Open instance

    let $FP_SEN_CALC = 'Y'

    #IFNDEF CONVERSION                              !Usual case

        do Updt-FPACareer($FP_SEN_CALC,$Emplid,#Empl_rcd,$effdt_nat,#Sequence)  !Update of career record with
                                                                                !"seniority to be computed" = 'Y'

    #ELSE                                           !Conversion

        do Updt-Career-Bis                          !Update of the career bis record

    #ENDIF

end-if


        !Fetch of the prvious instance values
        !------------------------------------

        Let #Anc-Dy-Car-Pre = #Anc-Dy-Car           !Career seniority
        Let #Anc-Mn-Car-Pre = #Anc-Mn-Car
        Let #Anc-An-Car-Pre = #Anc-An-Car

        Let #Anc-Dy-Kep-Pre = #Anc-Dy-Kep           !Retained seniority
        Let #Anc-Mn-Kep-Pre = #Anc-Mn-Kep
        Let #Anc-An-Kep-Pre = #Anc-An-Kep

        let #Anc-An-Tra-Pre = #Anc-An-Tra           !Seniority to carry over
        let #Anc-Mn-Tra-Pre = #Anc-Mn-Tra
        let #Anc-Dy-Tra-Pre = #Anc-Dy-Tra

        let #Anc-Dy-Rel-Pre = #Anc-Dy-Rel           !Actual seniority
        let #Anc-Mn-Rel-Pre = #Anc-Mn-Rel
        let #Anc-An-Rel-Pre = #Anc-An-Rel

        Let $Emplid-Pre = rtrim(&D.Emplid,' ')      !Emplid
        Let $Rank-Pre = rtrim(&D.Rank,' ')          !Grade
        Let $Corps-Pre = rtrim(&D.Corps,' ')        !Body
        Let #Empl_rcd-pre = &D.Empl_rcd             !Previous Employ rcd
        Let $Cld-Step-Pre = rtrim(&D.Cld-Step,' ')  !Previous terminated Step
        do dtu-add-days($EndCar,1,$EndCar-Pre)      !Previous Step end date


        #IFDEF DEBUGI
            #IFDEF DEBUGJ
                DISPLAY 'Career seniority Step advancement : D/M/Y'
                DISPLAY #AccesDy
                DISPLAY #AccesAn
                DISPLAY #AccesMn

                DISPLAY 'Career seniority in Step : D/M/Y'
                DISPLAY #Anc-Dy-Car
                DISPLAY #Anc-Mn-Car
                DISPLAY #Anc-An-Car

                DISPLAY 'Actual seniority in Step : D/M/Y'
                DISPLAY #Anc-Dy-Rel
                DISPLAY #Anc-Mn-Rel
                DISPLAY #Anc-An-Rel

                DISPLAY 'Seniority to carry over : D/M/Y'
                DISPLAY #Anc-Dy-Tra
                DISPLAY #Anc-Mn-Tra
                DISPLAY #Anc-An-Tra

                DISPLAY 'Retained seniority : D/M/Y'
                DISPLAY #Anc-Dy-Kep
                DISPLAY #Anc-Mn-Kep
                DISPLAY #Anc-An-Kep

                DISPLAY 'Actual seniority in Grade : D/M/Y'
                DISPLAY #SENRAN_DY
                DISPLAY #SENRAN_MN
                DISPLAY #SENRAN_YR

                DISPLAY 'Actual seniority in Body: D/M/Y'
                DISPLAY #SENCOR_DY
                DISPLAY #SENCOR_MN
                DISPLAY #SENCOR_YR
            #ENDIF
        #ENDIF

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Updt-Career - end'
#ENDIF

END-PROCEDURE Updt-Career



!***************************************************************
!
!   Updt-FPACareer :    PS_FPAEECAREER update
!
!   IN             :    $FP_SEN_CALC: Calculate seniority
!                       $Emplid     : Employee Id
!                       #Empl_rcd   : Employee record number
!                       $StepBeg_dt : Effective date
!                       #Sequence   : Sequence number
!
!   OUT            :
!
!***************************************************************
BEGIN-PROCEDURE Updt-FPACareer($FP_SEN_CALC,$Emplid,#Empl_rcd,$StepBeg_dt,#Sequence)

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Updt-FPACareer - begin'
#ENDIF


let $sql-statement = 'FPA6ANC.SQC, Updt-Career, Update, PS_FPAEECAREER'
BEGIN-SQL On-Error=SQL-Error

update  PS_FPAEECAREER
set
        FP_SENTOSTPDY = #_AccesDy,
        FP_SENTOSTPMN = #_AccesMn,
        FP_SENTOSTPYR = #_AccesAn,

        FP_SENINSTPDY = #_Anc-Dy-Car,
        FP_SENINSTPMN = #_Anc-Mn-Car,
        FP_SENINSTPYR = #_Anc-An-Car,

        FP_TRUESEN_DY = #_Anc-Dy-Rel,
        FP_TRUESEN_MN = #_Anc-Mn-Rel,
        FP_TRUESEN_YR = #_Anc-An-Rel,

        FP_SENKEPT_DY = #_Anc-Dy-Kep,
        FP_SENKEPT_MN = #_Anc-Mn-Kep,
        FP_SENKEPT_YR = #_Anc-An-Kep,

        FP_SENTRANSDY = #_Anc-Dy-Tra,
        FP_SENTRANSMN = #_Anc-Mn-Tra,
        FP_SENTRANSYR = #_Anc-An-Tra,

        FP_SENRAN_DY = #_SENRAN_DY,
        FP_SENRAN_MN = #_SENRAN_MN,
        FP_SENRAN_YR = #_SENRAN_YR,

        FP_SENCOR_DY = #_SENCOR_DY,
        FP_SENCOR_MN = #_SENCOR_MN,
        FP_SENCOR_YR = #_SENCOR_YR,

        FP_SEN_CALC = $FP_SEN_CALC,

        LAST_UPDATE_DATE = {DATEIN-PREFIX}$_AsOfToday{DATEIN-SUFFIX}

where EMPLID = $Emplid
and   EMPL_RCD = #Empl_rcd
and   EFFDT = {DATEIN-PREFIX}$StepBeg_dt{DATEIN-SUFFIX}
and   EFFSEQ = #Sequence

END-SQL


#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Updt-FPACareer - end'
#ENDIF

END-PROCEDURE Updt-FPACareer



!***********************************************************************
!
!   Updt-Career-Cld-Step  : PS_FPAEECAREER update on non-terminated
!                           previous Steps
!
!***********************************************************************
BEGIN-PROCEDURE Updt-Career-Cld-Step

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Updt-Career-Cld-Step - begin'
#ENDIF

let $sql-statement = 'FPA6ANC.SQC, Updt-Career, Update, PS_FPAEECAREER'
BEGIN-SQL On-Error=SQL-Error

update  PS_FPAEECAREER
set

        FP_SEN_CALC = 'N',
        LAST_UPDATE_DATE = {DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX}

where   EMPLID = &D.Emplid
and     EMPL_RCD = &D.Empl_rcd
and     EFFDT <= {DATEIN-PREFIX}&D.StepBeg_dt{DATEIN-SUFFIX}
and     FP_RANK_CD = &D.Rank
and     FP_STEP_CD = &D.Step
and     FP_SEN_CALC = 'Y'

END-SQL


#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Updt-Career-Cld-Step - end'
#ENDIF

END-PROCEDURE Updt-Career-Cld-Step



!*****************************************************************
!
!   Updt-Career-Bis : PS_FPAEECAREER_BIS update
!
!*****************************************************************
BEGIN-PROCEDURE Updt-Career-Bis

#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Updt-Career-Bis - begin'
#ENDIF

let $sql-statement = 'FPA6ANC.SQC, Updt-Career, Update, PS_FPAEECAREER_BIS'
BEGIN-SQL On-Error=SQL-Error

update  PS_FPAEECAREERBIS
set
        FP_SENTOSTPDY = #AccesDy,
        FP_SENTOSTPMN = #AccesMn,
        FP_SENTOSTPYR = #AccesAn,

        FP_SENINSTPDY = #Anc-Dy-Car,
        FP_SENINSTPMN = #Anc-Mn-Car,
        FP_SENINSTPYR = #Anc-An-Car,

        FP_TRUESEN_DY = #Anc-Dy-Rel,
        FP_TRUESEN_MN = #Anc-Mn-Rel,
        FP_TRUESEN_YR = #Anc-An-Rel,

        FP_SENKEPT_DY = #Anc-Dy-Kep,
        FP_SENKEPT_MN = #Anc-Mn-Kep,
        FP_SENKEPT_YR = #Anc-An-Kep,

        FP_SENTRANSDY = #Anc-Dy-Tra,
        FP_SENTRANSMN = #Anc-Mn-Tra,
        FP_SENTRANSYR = #Anc-An-Tra,

        FP_SENRAN_DY = #SENRAN_DY,
        FP_SENRAN_MN = #SENRAN_MN,
        FP_SENRAN_YR = #SENRAN_YR,

        FP_SENCOR_DY = #SENCOR_DY,
        FP_SENCOR_MN = #SENCOR_MN,
        FP_SENCOR_YR = #SENCOR_YR,

        LAST_UPDATE_DATE = {DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX}

where EMPLID = &D.Emplid
and   EMPL_RCD = &D.Empl_rcd
and   EFFDT = {DATEIN-PREFIX}&D.StepBeg_dt{DATEIN-SUFFIX}
and   EFFSEQ = &D.Sequence
and   FP_CONVERSION_ID = ' '

END-SQL


#IFDEF DEBUGI
    DISPLAY 'FPA6ANC.SQC / Updt-Career-Bis - end'
#ENDIF

END-PROCEDURE Updt-Career-No



!***************************************************************
!
!   CalcAnc-Posit-End: determine the end date of position
!
!***************************************************************
BEGIN-PROCEDURE CalcAnc-Posit-End

if $Posit-End = ''
        if $ForEnd_Dt = ''
                Let $Posit-End = $EndCar
        else
                Let $Posit-End = $ForEnd_Dt
        end-if
end-if

END-PROCEDURE CalcAnc-Posit-End
