!*************************************************
!  CMP015:  Refresh Employee Compensation Report *
!*************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!                                                                      
!          $Date:  2007/03/26:23:08:45                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  689716                                              !
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!Procedures ending with "Scrty" and Record alias ending with "SC" are  *
!using SQR Security.                                                   *
!***********************************************************************

#Include 'setenv.sqc'    !Set environment
Begin-Setup
  #Include 'ptset02.sqc'   !Printer and page-size initialization
End-Setup

!**********************************************
! Report                                      *
!**********************************************
begin-report
   do Init-DateTime
   do Init-Number
   do Get-Current-DateTime
   do Init-Report

   if $prcs_oprid=''
      goto last2
   end-if
 
   do Process-Main
 
   do Reset
   do Stdapi-Term
last2:
end-report


!**********************************************
! Heading                                     *
!**********************************************
begin-heading 6
   do Get_Field_Information ('CMP015', 'REPORT_TITLE', $REPORTTITLE, #DW)

   !************************
   ! Print Standard Header *
   !************************
   #Include 'stdhdgtr.sqc'

   !*******************
   ! Print As-Of-Date *
   !*******************
   do Append_Report_Translation ('STDHDGHR')
   if $Program_Read = 'Y'
      do Get_Field_Information ('STDHDGHR', 'ASOFDATE', $DATE, #DW)
   end-if
   print $DATE    (3,1)
   do Format-DateTime($AsOfDate, $out, {DEFDATE}, '', '')
   print $out (,+1)

   !*******************************
   ! Print Run Control Parameters *
   !*******************************
   do Get_Field_Information ('PER044', 'PARAMETERS', $PARAMETERS_LBL, #DW)
   print $PARAMETERS_LBL                 (  4,  1)

   Evaluate &RUN_CNTL_HR.PROCESS_BY
      When = 'G'
         do Get_Field_Information ('PER044', 'GROUPS', $GROUPS_LBL, #DW)
         Print $GROUPS_LBL               (  0, +1)
         Break
      When = 'A'
         do Get_Field_Information ('PER044', 'ALL', $RATE_CODES_LBL, #DW)
         Print $RATE_CODES_LBL           (  0, +1)
         Break
   End-Evaluate

   Evaluate &RUN_CNTL_HR.PRCS_MODE_FLG
      When = 'I'
         do Get_Field_Information ('CMP015', 'ADD_NEW_EFFDT', $ADD_LBL, #DW)
         Print $ADD_LBL               (  0, +1)
         Break
      When = 'U'
         do Get_Field_Information ('CMP015', 'CORRECT_CURRENT', $CORRECT_LBL, #DW)
         Print $CORRECT_LBL           (  0, +1)
         Break
   End-Evaluate

   If &RUN_CNTL_HR.UPD_FUTURE_ROW_SW = 'Y'
      do Get_Field_Information ('HR', 'UPD_FUTURE_ROWS', $UPD_FUTURE_ROWS_LBL, #DW)
      Print $UPD_FUTURE_ROWS_LBL         (  0, +1)
   End-If

   If &RUN_CNTL_HR.CMP_DONT_ABSORB = 'Y'
      do Get_Field_Information ('HR', 'DONT_ABSORB_CHG', $DONT_ABSORB_CHG_LBL, #DW)
      Print $DONT_ABSORB_CHG_LBL         (  0, +1)
   End-If

   !*******************************
   ! Print Employee List Headings *
   !*******************************
   do Get_Field_Information ('HR', 'EMPLID', $EMPLID_LBL, #DW)
   do Get_Field_Information ('HR', 'NAME', $NAME_LBL, #DW)
   do Get_Field_Information ('HR', 'EMPL_RCD', $EMPL_RCD_LBL, #DW)
   do Get_Field_Information ('HR', 'EFFDT1', $EFFDT1_LBL, #DW)
   do Get_Field_Information ('HR', 'EFFDT2', $EFFDT2_LBL, #DW)
   do Get_Field_Information ('CMP016', 'EFF_SEQ', $EFF_SEQ_LBL, #DW)
   do Get_Field_Information ('HR', 'ACTION', $ACTION_LBL, #DW)
   do Get_Field_Information ('HR', 'ACTION_REASON1', $ACTION_REASON1_LBL, #DW)
   do Get_Field_Information ('HR', 'ACTION_REASON2', $ACTION_REASON2_LBL, #DW)
   do Get_Field_Information ('CMP015', 'PREVIOUS', $PREV_LBL, #DW)
   do Get_Field_Information ('HR', 'NEW', $NEW_LBL, #DW)
   do Get_Field_Information ('CMP015', 'COMP_RATE', $COMP_RATE_LBL, #DW)
   do Get_Field_Information ('CMP015', 'CURRENCY_CD1', $CURR1_LBL, #DW)
   do Get_Field_Information ('CMP015', 'CURRENCY_CD2', $CURR2_LBL, #DW)
   do Get_Field_Information ('CMP015', 'FREQUENCY', $FREQ_LBL, #DW)
   print $EMPLID_LBL                     (  6,  1, 11)
   print $NAME_LBL                       (  6, 14, 35)
   print $EMPL_RCD_LBL                   (  6, 51,  3)
   print $EFFDT1_LBL                     (  6, 57, 10)
   print $EFFDT2_LBL                     (  7, 57, 10)
   print $EFF_SEQ_LBL                    (  6, 70,  3)
   print $ACTION_LBL                     (  6, 76, 10)
   print $ACTION_REASON1_LBL             (  6, 88, 10)
   print $ACTION_REASON2_LBL             (  7, 88, 10)
   print $PREV_LBL                       (  6,120, 19)
   print $COMP_RATE_LBL                  (  7,120, 19)
   print $NEW_LBL                        (  6,140, 19)
   print $COMP_RATE_LBL                  (  7,140, 19)
   print $CURR1_LBL                      (  6,159,  4)
   print $CURR2_LBL                      (  7,159,  4)
   print $FREQ_LBL                       (  6,164, 10)

end-heading


!**********************************************
! Init-Report                                 *
!**********************************************
begin-procedure Init-Report

   move 'CMP015' to $ReportID
   move 'W' to $ReportMsgType  !Warning

   do Stdapi-Init

   if $prcs_oprid=''
      display ''
      display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
      display ''
      goto last1
   end-if

   if $prcs_process_instance = ''
      do Ask-As-Of-Date
   else
      do Select-Parameters
   end-if

   do Init_Printer
   do Init_Report_Translation ($ReportID, $language_cd)
   do Append_Report_Translation ('HR')
   do Append_Report_Translation ('CMP008')
   do Append_Report_Translation ('CMP016')
   do Append_Report_Translation ('PER044')
   do Append_Report_Translation ('FGHR005')
last1:
end-procedure


!**********************************************
! Get-Values                                  *
!**********************************************
begin-procedure Get-Values

   let $language_cd = $prcs_language_cd

   let $AsOfDate = &RUN_CNTL_HR.ASOFDATE

   if $AsOfDate = ''
      move $AsOfToday to $AsOfDate
   end-if

end-procedure


!**********************************************
! Process-Main                                *
!**********************************************
begin-procedure Process-Main

   !**********************************************
   ! Get Field Label/Value Strings, needed later *
   !**********************************************
   do Get_Field_Information ('CMP008', 'NP', $NEW_PKG_LBL, #DW)
   do Get_Field_Information ('CMP008', 'PP', $PREV_PKG_LBL, #DW)
   do Get_Field_Information ('HR', 'COMP_RATECD', $RATECD_LBL, #DW)
   do Get_Field_Information ('CMP016', 'EFF_SEQ', $SEQ_LBL, #DW)
   do Get_Field_Information ('CMP015', 'BASE_PAY1', $BASE1_LBL, #DW)
   do Get_Field_Information ('CMP015', 'BASE_PAY2', $BASE2_LBL, #DW)
   do Get_Field_Information ('FGHR005', 'AMOUNTS', $AMOUNTS_LBL, #DW)
   do Get_Field_Information ('CMP015', 'SOURCE', $SOURCE_LBL, #DW)
   do Get_Field_Information ('CMP015', 'MAN_UPD1', $MAN1_LBL, #DW)
   do Get_Field_Information ('CMP015', 'MAN_UPD2', $MAN2_LBL, #DW)
   do Get_Field_Information ('CMP015', 'DFLT_WO_OVER1', $DFLT1_LBL, #DW)
   do Get_Field_Information ('CMP015', 'DFLT_WO_OVER2', $DFLT2_LBL, #DW)
   do Get_Field_Information ('CMP015', 'APPLY_FTE1', $FTE1_LBL, #DW)
   do Get_Field_Information ('CMP015', 'APPLY_FTE2', $FTE2_LBL, #DW)
   do Get_Field_Information ('HR', 'SALARY_POINTS', $SALARY_POINTS_LBL, #DW)
   do Get_Field_Information ('HR', 'PERCENT', $PERCENT_LBL, #DW)
   do Get_Field_Information ('CMP015', 'RATE_CODE_GRP', $RC_GRP_LBL, #DW)
   do Get_Field_Information ('CMP015', 'NOT_SAVED', $NOT_SAVED_TXT, #DW)
   do Get_Field_Information ('CMP015', 'ERROR', $ERROR_TXT, #DW)

!*******************************
! For each new/updated Job row *
!*******************************
begin-SELECT DISTINCT
T1.EMPLID                  ( +3,  1, 12)
!*******************BEGIN SQR NAME DISPLAY CHANGE***************************
  !PERS.NAME                       (  0, 14, 36)
PERS.NAME_DISPLAY                  (  0, 14, 36)
!*******************END SQR NAME DISPLAY CHANGE***************************
T1.EMPL_RCD                (  0, 51,  3) edit 999
T1.JOB_EFFDT

   ! **************************
   ! Print Job Effective Date *
   ! **************************
   Move 1 to $Year4
   do Format-DateTime(&T1.JOB_EFFDT, $out, {DEFDATE}, '', '')
   print $out              (  0, 57, 10)

T1.JOB_EFFSEQ              (  0, 69,  3) edit '999'
T1.ACTION                  
T1.ACTION_REASON           
T1.CMP_CHANGE_AMT_FLG

   let $Change_Flag = rtrim(&T1.CMP_CHANGE_AMT_FLG, ' ')
   evaluate $Change_Flag
      when = 'Y'

         ! ************************
         ! Print Action Xlatvalue *
         ! ************************
         move 'ACTION'  to $FieldName
         move &T1.ACTION to $FieldValue
         do Read-Translate-Table
         print $XlatShortName            (  0, 76, 10)

         ! ***************************
         ! Print Action Reason Descr *
         ! ***************************
         move &T1.ACTION         to $Action
         move &T1.ACTION_REASON  to $Action_Reason
         move &T1.JOB_EFFDT      to $As-Of-Date
         do Get-Action-Reason
         print $Action_Reason_DescrShort (  0, 88, 10)

         ! **************************
         ! Print Previous Comp Rate *
         ! **************************
         do Print-Previous-Comprate

         ! *********************
         ! Print New Comp Rate *
         ! *********************
         do Print-New-Comprate

         ! *************************
         ! Print Previous Comp Pkg *
         ! *************************
         do Print-Previous-Comp-Pkg

         ! ********************
         ! Print New Comp Pkg *
         ! ********************
         do Print-New-Comp-Pkg

         break

      when = 'N'
         print $NOT_SAVED_TXT            (  0, 76, 90)
         break

      when = 'E'
         print $ERROR_TXT                (  0, 76, 90)
         break

   end-evaluate

FROM PS_HR_CMP015_TAO1 T1,
     PS_PERSON_NAME PERS
WHERE T1.OPRID = &RUN_CNTL_HR.OPRID
  AND T1.RUN_CNTL_ID = &RUN_CNTL_HR.RUN_CNTL_ID
  AND T1.EMPLID = PERS.EMPLID
ORDER BY T1.EMPLID, T1.EMPL_RCD, T1.JOB_EFFDT, T1.JOB_EFFSEQ
end-SELECT

end-procedure


!*******************************************
! Procedure Print-Previous-Comprate        *
! Print the previous Job Compensation Rate *
!*******************************************
begin-procedure Print-Previous-Comprate

begin-SELECT
BJ.COMPRATE

   print &BJ.COMPRATE             (  0,119) edit 'b99999999999.999999'

FROM PS_HR_CMP015_BEF_J BJ
WHERE BJ.OPRID = &RUN_CNTL_HR.OPRID
  AND BJ.RUN_CNTL_ID = &RUN_CNTL_HR.RUN_CNTL_ID
  AND BJ.EMPLID = &T1.EMPLID
  AND BJ.EMPL_RCD = &T1.EMPL_RCD
  AND BJ.JOB_EFFDT = &T1.JOB_EFFDT
  AND BJ.JOB_EFFSEQ = &T1.JOB_EFFSEQ
end-SELECT

end-procedure


!**************************************
! Procedure Print-New-Comprate        *
! Print the new Job Compensation Rate *
!**************************************
begin-procedure Print-New-Comprate

begin-SELECT
AJ.COMPRATE
AJ.CURRENCY_CD
AJ.COMP_FREQUENCY

   print &AJ.COMPRATE               (  0,139) edit 'b99999999999.999999'
   print &AJ.CURRENCY_CD            (  0,160)
   do Det-Annual-Factor(&AJ.COMP_FREQUENCY, &T1.JOB_EFFDT, $freq_descrshort, $dummy1, #dummy2, $dummy3)
   print $freq_descrshort           (  0,164)

FROM PS_HR_CMP015_AFT_J AJ
WHERE AJ.OPRID = &RUN_CNTL_HR.OPRID
  AND AJ.RUN_CNTL_ID = &RUN_CNTL_HR.RUN_CNTL_ID
  AND AJ.EMPLID = &T1.EMPLID
  AND AJ.EMPL_RCD = &T1.EMPL_RCD
  AND AJ.JOB_EFFDT = &T1.JOB_EFFDT
  AND AJ.JOB_EFFSEQ = &T1.JOB_EFFSEQ
end-SELECT

end-procedure


!******************************************
! Procedure Print-Previous-Comp-Pkg       *
! Print the previous Compensation Package *
!******************************************
begin-procedure Print-Previous-Comp-Pkg

   print $PREV_PKG_LBL                        ( +2, 97)
   print $RATECD_LBL                          ( +1, 62)
   print $SEQ_LBL                             (  0, 72)
   print $BASE1_LBL                           (  0, 76)
   print $AMOUNTS_LBL                         (  0, 92)
   print $RATECD_LBL                          (  0,117)
   print $MAN1_LBL                            (  0,128)
   print $DFLT1_LBL                           (  0,137 )
   print $FTE1_LBL                            (  0,153)
   print $BASE2_LBL                           ( +1, 76)
   print $SOURCE_LBL                          (  0,117)
   print $MAN2_LBL                            (  0,128)
   print $DFLT2_LBL                           (  0,137)
   print $FTE2_LBL                            (  0,153)

begin-SELECT
BC.COMP_RATECD                     ( +1, 62,  6)
BC.COMP_EFFSEQ                     (  0, 69,  3) edit '999'
BC.COMPRATE
BC.COMP_RATE_POINTS
BC.CURRENCY_CD
BC.COMP_FREQUENCY
BC.COMP_PCT
BC.RATE_CODE_GROUP
BC.CMP_SRC_IND
BC.MANUAL_SW
BC.FTE_INDICATOR

   !**************************************
   ! Get the Properties of the Rate Code *
   !**************************************
   let $RATECD = &BC.COMP_RATECD
   do Get-Rate-Code-Properties

   ! **************************
   ! Print Base Pay Xlatvalue *
   ! **************************
   move 'PSYESNO'  to $FieldName
   move $Base_Pay to $FieldValue
   do Read-Translate-Table
   print $XlatShortName                   (  0, 76,  4)

   ! ******************************************
   ! Print the Amounts depending on Rate Type *
   ! ******************************************
   evaluate $Rate_Type
      when = 'FA'
      when = 'HR'
      when = 'HF'
         print &BC.COMPRATE               (  0, 81) edit 'b99999999999.999999'
         print &BC.CURRENCY_CD            (  0, +1)
         do Det-Annual-Factor(&BC.COMP_FREQUENCY, &T1.JOB_EFFDT, $freq_descrshort, $dummy1, #dummy2, $dummy3)
         print $freq_descrshort           (  0, +1)
         break
      when = 'PC'
         let $RC_GRP = rtrim(&BC.RATE_CODE_GROUP, ' ')
         if $RC_GRP = ''
            print &BC.COMP_PCT            (  0, 88) edit '999.999'
            print $PERCENT_LBL            (  0, +1)
         else
            print &BC.COMP_PCT            (  0, 81) edit '999.999'
            print $PERCENT_LBL            (  0, +1)
            print $RC_GRP_LBL             (  0, +1)
            print $RC_GRP                 (  0, +1)
         end-if
         break
      when = 'PT'
         print &BC.COMP_RATE_POINTS       (  0, 85) edit '99999'
         print $SALARY_POINTS_LBL         (  0, +1)
         do Det-Annual-Factor(&BC.COMP_FREQUENCY, &T1.JOB_EFFDT, $freq_descrshort, $dummy1, #dummy2, $dummy3)
         print $freq_descrshort           (  0, +1)
         break
   end-evaluate

   ! **************************
   ! Print Base Pay Xlatvalue *
   ! **************************
   move 'CMP_SRC_IND'  to $FieldName
   move &BC.CMP_SRC_IND to $FieldValue
   do Read-Translate-Table
   print $XlatShortName                   (  0,117, 10)

   ! *******************************
   ! Print Manual Switch Xlatvalue *
   ! *******************************
   move 'PSYESNO'  to $FieldName
   move &BC.MANUAL_SW to $FieldValue
   do Read-Translate-Table
   print $XlatShortName                   (  0,128,  8)

   ! ********************************
   ! Print Non-Updateable Xlatvalue *
   ! ********************************
   move 'PSYESNO'  to $FieldName
   move $Non_Updateable to $FieldValue
   do Read-Translate-Table
   print $XlatShortName                   (  0,137, 10)

   ! *******************************
   ! Print Manual Switch Xlatvalue *
   ! *******************************
   move 'PSYESNO'  to $FieldName
   move &BC.FTE_INDICATOR to $FieldValue
   do Read-Translate-Table
   print $XlatShortName                   (  0,153,  5)

FROM PS_HR_CMP015_BEF_C BC
WHERE BC.OPRID = &RUN_CNTL_HR.OPRID
  AND BC.RUN_CNTL_ID = &RUN_CNTL_HR.RUN_CNTL_ID
  AND BC.EMPLID = &T1.EMPLID
  AND BC.EMPL_RCD = &T1.EMPL_RCD
  AND BC.JOB_EFFDT = &T1.JOB_EFFDT
  AND BC.JOB_EFFSEQ = &T1.JOB_EFFSEQ
end-SELECT

end-procedure


!*************************************
! Procedure Print-New-Comp-Pkg       *
! Print the new Compensation Package *
!*************************************
begin-procedure Print-New-Comp-Pkg

   print $NEW_PKG_LBL                         ( +2, 97)
   print $RATECD_LBL                          ( +1, 62)
   print $SEQ_LBL                             (  0, 72)
   print $BASE1_LBL                           (  0, 76)
   print $AMOUNTS_LBL                         (  0, 92)
   print $RATECD_LBL                          (  0,117)
   print $MAN1_LBL                            (  0,128)
   print $DFLT1_LBL                           (  0,137 )
   print $FTE1_LBL                            (  0,153)
   print $BASE2_LBL                           ( +1, 76)
   print $SOURCE_LBL                          (  0,117)
   print $MAN2_LBL                            (  0,128)
   print $DFLT2_LBL                           (  0,137)
   print $FTE2_LBL                            (  0,153)

begin-SELECT
AC.COMP_RATECD                     ( +1, 62,  6)
AC.COMP_EFFSEQ                     (  0, 69,  3) edit '999'
AC.COMPRATE
AC.COMP_RATE_POINTS
AC.CURRENCY_CD
AC.COMP_FREQUENCY
AC.COMP_PCT
AC.RATE_CODE_GROUP
AC.CMP_SRC_IND
AC.MANUAL_SW
AC.FTE_INDICATOR

   !**************************************
   ! Get the Properties of the Rate Code *
   !**************************************
   let $RATECD = &AC.COMP_RATECD
   do Get-Rate-Code-Properties

   ! **************************
   ! Print Base Pay Xlatvalue *
   ! **************************
   move 'PSYESNO'  to $FieldName
   move $Base_Pay to $FieldValue
   do Read-Translate-Table
   print $XlatShortName                   (  0, 76,  4)

   ! ******************************************
   ! Print the Amounts depending on Rate Type *
   ! ******************************************
   evaluate $Rate_Type
      when = 'FA'
      when = 'HR'
      when = 'HF'
         print &AC.COMPRATE               (  0, 81) edit 'b99999999999.999999'
         print &AC.CURRENCY_CD            (  0, +1)
         do Det-Annual-Factor(&AC.COMP_FREQUENCY, &T1.JOB_EFFDT, $freq_descrshort, $dummy1, #dummy2, $dummy3)
         print $freq_descrshort           (  0, +1)
         break
      when = 'PC'
         let $RC_GRP = rtrim(&AC.RATE_CODE_GROUP, ' ')
         if $RC_GRP = ''
            print &AC.COMP_PCT            (  0, 88) edit '999.999'
            print $PERCENT_LBL            (  0, +1)
         else
            print &AC.COMP_PCT            (  0, 81) edit '999.999'
            print $PERCENT_LBL            (  0, +1)
            print $RC_GRP_LBL             (  0, +1)
            print $RC_GRP                 (  0, +1)
         end-if
         break
      when = 'PT'
         print &AC.COMP_RATE_POINTS       (  0, 85) edit '99999'
         print $SALARY_POINTS_LBL         (  0, +1)
         do Det-Annual-Factor(&AC.COMP_FREQUENCY, &T1.JOB_EFFDT, $freq_descrshort, $dummy1, #dummy2, $dummy3)
         print $freq_descrshort           (  0, +1)
         break
   end-evaluate

   ! **************************
   ! Print Base Pay Xlatvalue *
   ! **************************
   move 'CMP_SRC_IND'  to $FieldName
   move &AC.CMP_SRC_IND to $FieldValue
   do Read-Translate-Table
   print $XlatShortName                   (  0,117, 10)

   ! *******************************
   ! Print Manual Switch Xlatvalue *
   ! *******************************
   move 'PSYESNO'  to $FieldName
   move &AC.MANUAL_SW to $FieldValue
   do Read-Translate-Table
   print $XlatShortName                   (  0,128,  8)

   ! ********************************
   ! Print Non-Updateable Xlatvalue *
   ! ********************************
   move 'PSYESNO'  to $FieldName
   move $Non_Updateable to $FieldValue
   do Read-Translate-Table
   print $XlatShortName                   (  0,137, 10)

   ! *******************************
   ! Print Manual Switch Xlatvalue *
   ! *******************************
   move 'PSYESNO'  to $FieldName
   move &AC.FTE_INDICATOR to $FieldValue
   do Read-Translate-Table
   print $XlatShortName                   (  0,153,  5)

FROM PS_HR_CMP015_AFT_C AC
WHERE AC.OPRID = &RUN_CNTL_HR.OPRID
  AND AC.RUN_CNTL_ID = &RUN_CNTL_HR.RUN_CNTL_ID
  AND AC.EMPLID = &T1.EMPLID
  AND AC.EMPL_RCD = &T1.EMPL_RCD
  AND AC.JOB_EFFDT = &T1.JOB_EFFDT
  AND AC.JOB_EFFSEQ = &T1.JOB_EFFSEQ
end-SELECT

end-procedure


!***************************************
! Procedure Get-Rate-Code-Properties   *
! Gets the Properties of the Rate Code *
!***************************************
begin-procedure Get-Rate-Code-Properties

   let $Base_Pay = ''
   let $Rate_Type = ''
   let $Non_Updateable = ''

begin-SELECT
RC1.COMP_BASE_PAY_SW
RC1.COMP_RATE_TYPE
RC1.CMP_NON_UPD_IND

   let $Base_Pay = &RC1.COMP_BASE_PAY_SW
   let $Rate_Type = &RC1.COMP_RATE_TYPE
   let $Non_Updateable = &RC1.CMP_NON_UPD_IND

FROM PS_COMP_RATECD_TBL RC1
WHERE RC1.COMP_RATECD = $RATECD
  AND RC1.EFF_STATUS = 'A'
  AND RC1.EFFDT = (SELECT MAX(RC2.EFFDT)
                     FROM PS_COMP_RATECD_TBL RC2
                    WHERE RC2.COMP_RATECD = $RATECD
                      AND RC2.EFFDT <= &T1.JOB_EFFDT)
end-SELECT

end-procedure


#Include 'hrrnctl1.sqc'  !Get run control parameter values
#Include 'hrgetval.sqc'  !Get values mask routines
#Include 'askaod.sqc'    !Ask As Of Date input
#Include 'frquency.sqc'  !Get Frequency Description
#Include 'getactrs.sqc'  !Get-Action-Reason procedure

#Include 'readxlat.sqc'  !get translates for fieldname, value
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to update run status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'


