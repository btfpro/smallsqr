! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
!  SQLSTAT: SQL Error Handling Common Logic                            *
!           This code is included in both SQLERR.SQC and SQLERR1.SQC   *
!           to insure that the same logic is used for know errors      *
!     NOTE: THIS CODE SHOULD NOT HAVE A BEGIN/END PROCEDURE statement  *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

#ifdef DB2ALL
#ifndef MVS
    when = 100    !DB2 error for empty-table result set
      break
#end-if
#end-if

    when = -99999  !Token "when" clause for non-DB2 environments
    when-other
#ifdef DB2UNIX
      !*********************************************************
      !  SQR has problems getting error reporting back on DB2  *
      !  for Unix, especially on ODBC.  DB2 is unique in that  *
      !  it flags empty result sets as errors.  The following  *
      !  code is like the code above in that this is another   *
      !  way that SQR will report the empty result set error   *
      !*********************************************************
      if (#sql-status = 0) and
         (isnull($sql-error) or
          ((length($sql-error) > 1800) and (ascii(substr($sql-error,5,1))=255)))
        break
      end-if

      !*********************************************************
      !  DB2 also issues a warning when a complex query is     *
      !  encountered. We trap and ignore this warning so that  *
      !  it does not cause SQR does not terminate.             *
      !*********************************************************
      if #sql-status = 437   !DB2 performance of complex query warning
        break
      end-if
#end-if
#ifdef DB2DDCS
      !*********************************************************
      !  SQR has problems getting error reporting back on DB2  *
      !  for MVS via on ODBC.  DB2 is unique in that           *
      !  it flags empty result sets as errors.  The following  *
      !  code is like the code above in that this is another   *
      !  way that SQR will report the empty result set error   *
      !*********************************************************
      if ((#sql-status = 0) and (length($sql-error) > 500) and
          (ascii(substr($sql-error,5,1))=255)) or
          ((#sql-status = 0) and (isnull($sql-error)))
        break
      end-if
#end-if
      !*********************************************************
      !  The user will tell us whether to print or display the *
      !  error information.  If they set #SQL_Error_Print to a *
      !  non-zero value, we'll PRINT the information.  If they *
      !  set #SQL_Error_Display, then we'll DISPLAY.  The      *
      !  default if neither is set is that we will DISPLAY.    *
      !  Note that both flags can be set, in which case the    *
      !  information will be both PRINTed and DISPLAYed.       *
      !*********************************************************
      if (#SQL_Error_Print)
        print $sqr-program          (+1, 1)
        print ': '                  ()
        print $ReportID             ()
        print ' - SQL Statement = ' ()
        print $SQL-STATEMENT        (+1, 1)
        print 'SQL Status = '       (+1, 1)
        print #sql-status           ()      edit 99999
        print ', SQL Error  = '     ()
        print $sql-error            ()
      end-if

      if (#SQL_Error_Display) or
         ((#SQL_Error_Display = 0) and (#SQL_Error_Print = 0))
        display $sqr-program        noline
        display ': '                noline
        display $ReportID           noline
        display ' - SQL Statement = '
        display $SQL-STATEMENT
        display 'SQL Status = '     noline
        display #sql-status 99999   noline
        display ', SQL Error  = '   noline
        display $sql-error
      end-if

      #ifdef debugx
        New-Page
      #end-if

