!****************************************
!  PAY056: FINAL CHECK REQUEST REPORT   *
!****************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!----------------------------------------------------------------------
! PeopleSoft, Inc.; it is not to be copied, reproduced, or transmitted *
!                                                                      *
!                                                                      *
!***********************************************************************
!
!          $Date:  2006/07/20:04:40:15                                 !
!       $Release:  HR9                                                 !
!      $Revision:  102                                                 !
!                                                                      *
!***********************************************************************
!***********************************************************************
! Function:                                                            *
!  This program prints the Final Check requests from the               *
!  Termination Request table where the termination processing          *
!  status is either: Not Processed or Loaded to Paysheets.             *
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
#include 'setup32.sqc'   !Printer and page-size initialization

!*****************
BEGIN-REPORT
!*****************
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
END-REPORT

#DEFINE  COL01  001     ! Column #01 - Employee Name
#DEFINE  COL02  053     ! Column #02 - Employee ID
#DEFINE  COL03  066     ! Column #03 - Employee Record#
#DEFINE  COL04  072     ! Column #04 - Effective Date
#DEFINE  COL05  083     ! Column #05 - Final Checks Detail
#DEFINE  COL06  101     ! Column #06 - Termination Date
#DEFINE  COL07  113     ! Column #07 - Termination Program Id
#DEFINE  COL08  125     ! Column #08 - Termination Description

BEGIN-PROCEDURE Init-Report

  move 'PAY056' to $ReportID

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Report-Language    ! Procedure that decides the report language
                            ! and then calls 'Report-Translation' procedure
                            ! that reads the language dep. text.
  move $PAY056_Report_Title to $ReportTitle
  display $ReportID
  display $ReportTitle

  if $Prcs_Process_Instance = ''
    do Get-From-Thru-Dates
    move $AsOfDate to $ThruDate
    do Get-Term-Proc-Status
  else
    do Select-PAY056-Parameters
    move &RC_PAY.FromDate to $FromDate
    move &RC_PAY.ThruDate to $ThruDate
    move &RC_PAY.ThruDate to $AsOfDate
    move &RC_PAY.Term_Proc_Status to $term_proc_st

     if RTRIM($term_proc_st,' ') = ''
       let $term_proc_st_sel = ' IN (''N'', ''P'')'
     else
       let $term_proc_st_sel = ' = ''' || $term_proc_st || ''' '
     end-if

  end-if

  do Get-Current-DateTime

END-PROCEDURE

! This procedure is used to read language-dependent text from the database.
!***********************************
BEGIN-PROCEDURE Report-Translation
! Read from PAY056 program ids
!***********************************
  do Init_Report_Translation($ReportID,$language_cd)

  do Get_Field_Information ('PAY056', 'REPORT_TITLE',     $PAY056_Report_Title, #dummy_width)
  do Get_Field_Information ('PAY056', 'EMPLID',           $PAY056_EmplId,       #dummy_width)
  do Get_Field_Information ('PAY056', 'EMPL_RCD',        $PAY056_EMPL_RCD,    #dummy_width)
  do Get_Field_Information ('PAY056', 'NAME',             $PAY056_Emp_Name,     #dummy_width)
  do Get_Field_Information ('PAY056', 'EFFDT',            $PAY056_Eff_Dt,       #dummy_width)
  do Get_Field_Information ('PAY056', 'FINAL_DETAIL',     $PAY056_Final_Detail, #dummy_width)
  do Get_Field_Information ('PAY056', 'TERM_PROC_STATUS', $PAY056_Term_Prcs_St, #dummy_width)
  do Get_Field_Information ('PAY056', 'TERMINATION_DT',   $PAY056_Term_Dt,      #dummy_width)
  do Get_Field_Information ('PAY056', 'TERM_PGM_ID',      $PAY056_Term_Pgm_Id,  #dummy_width)
  do Get_Field_Information ('PAY056', 'DESCRLONG',        $PAY056_Term_Descr,   #dummy_width)
  do Get_Field_Information ('PAY056', 'NO_RQST_FND',      $PAY056_No_Rqst_Fnd,  #dummy_width)

END-PROCEDURE

!******************
BEGIN-HEADING 10
!******************

  #Include 'stdhdg11.sqc'
  if $PayGroup <> $priorPayGroup
    do Get-PayGroup-Data
    move $PayGroup to $priorPayGroup
  end-if
  print 'Pay Group'        (5,1)
  print $PayGroup          (0,13)
  print $PayGroupName      (0,17)

  print $PAY056_Final_Detail            (+2,{COL05},)
  print $PAY056_Emp_Name                (+1,{COL01},)
  print $PAY056_EmplId                  (0,{COL02},)
  print $PAY056_EMPL_RCD               (0,{COL03},)
  print $PAY056_Eff_Dt                  (0,{COL04},)
  print $PAY056_Term_Prcs_St            (0,{COL05},)
  print $PAY056_Term_Dt                 (0,{COL06},)
  print $PAY056_Term_Pgm_Id             (0,{COL07},)
  print $PAY056_Term_Descr              (0,{COL08},)

  print '------------------------------' (+1,{COL01},)
  print '-----------'                   (0,{COL02},)
  print '----'                          (0,{COL03},)
  print '--------'                      (0,{COL04},)
  print '-----------------'             (0,{COL05},)
  print '----------'                    (0,{COL06},)
  print '----------'                    (0,{COL07},)
  print '----------------------------------------------' (0,{COL08},)

END-HEADING

!*************************************
BEGIN-PROCEDURE Get-Term-Proc-Status
!*************************************

  display 'Termination Process Status Values are: '
  display '             <N>ot Processed'
  display '             Loaded to <P>aysheet'
  display '             Blank for both'
  INPUT $term_proc_st MAXLEN=1 'Enter Termination Process Status'
  uppercase $term_proc_st

  If $term_proc_st = ''
    let $term_proc_st_sel = ' IN (''N'', ''P'')'
  else
    let $term_proc_st_sel = ' = ''' || $term_proc_st || ''' '
  end-if

END-PROCEDURE

!*****************************************
BEGIN-PROCEDURE SELECT-PAY056-PARAMETERS
!*****************************************

BEGIN-SELECT

RC_PAY.FROMDATE
RC_PAY.THRUDATE
RC_PAY.ASOFDATE
RC_PAY.TERM_PROC_STATUS

FROM PS_RC_PAY RC_PAY
WHERE RC_PAY.OPRID = $Prcs_OprID
AND RC_PAY.RUN_CNTL_ID = $Prcs_Run_Cntl_ID

END-SELECT

END-PROCEDURE   ! End procedure Get-Pay056-Parameters

!*****************************
BEGIN-PROCEDURE Process-Main
!*****************************

  let $Rqst_Fnd = 'N'

BEGIN-SELECT

TR.COMPANY      ()  on-break print=never  level=1 procedure=New-Heading
  move &TR.COMPANY to $Company

TR.PAYGROUP     ()  on-break print=never  level=2 procedure=New-Heading
  move &TR.PAYGROUP to $Paygroup

PD.NAME         (1,{COL01},)
TR.EMPLID       (0,{COL02},)
TR.EMPL_RCD    (0,{COL03},)
TR.EFFDT
  do Format-DateTime(&TR.EFFDT, $out, {DEFDATE}, '', '')
  print $out    (0,{COL04},)
TR.TERM_PROC_STATUS
  move 'TERM_PROC_STATUS' to $FieldName
  move &TR.TERM_PROC_STATUS to $FieldValue
  do Read-Translate-Table
  print $XLATSHORTNAME (0,{COL05},)
TR.TERMINATION_DT
  do Format-DateTime(&TR.TERMINATION_DT, $out, {DEFDATE}, '','')
  print $out    (0,{COL06},)
TR.TERM_PGM_ID  (0,{COL07},)
TR.DESCRLONG    (0,{COL08},0)  wrap  45  4
  next-listing need=4
  move 'Y' to $Rqst_Fnd

FROM  PS_TERM_RQST TR,
      PS_NAMES     PD

WHERE TR.EMPLID    = PD.EMPLID
  AND PD.NAME_TYPE = 'PRI'
  AND PD.EFFDT =
      (SELECT MAX(PX.EFFDT)
       FROM   PS_NAMES PX
       WHERE  PX.EMPLID    = PD.EMPLID
         AND  PX.NAME_TYPE = PD.NAME_TYPE
         AND  PX.EFFDT    <= $AsOfDate)
  AND TR.TERM_PROC_STATUS [$term_proc_st_sel]
  AND TR.EFFDT = (SELECT MAX(TR1.EFFDT)
                  FROM PS_TERM_RQST TR1
                  WHERE TR1.EMPLID = TR.EMPLID
                  AND TR1.EMPL_RCD = TR.EMPL_RCD
                  AND TR1.EFFDT BETWEEN $FromDate and $ThruDate)

ORDER BY TR.COMPANY, TR.PAYGROUP, PD.NAME, TR.EMPLID

END-SELECT

  If $Rqst_Fnd = 'N'
     Print $PAY056_No_Rqst_Fnd  (1,{COL01},)
  End-If

END-PROCEDURE

BEGIN-PROCEDURE New-Heading
   new-page
END-PROCEDURE

! *******************************************************************
! *  Include Section
! *******************************************************************
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'getpgdta.sqc'  !Get-PayGroup-Data procedure
#Include 'readxlat.sqc'  !Routines to retrieve XLATTABLE values
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'getftdts.sqc'  !Get-From-Thru-Dates procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to a given language
#Include 'getrplng.sqc'  !Gets the report language

! *******************************************************************
!                   <<<   END OF FILE   >>>
! *******************************************************************

