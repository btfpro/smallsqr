!**********************************************************************!
!   gpusyt10: Pre load Error Report.                                   !
!           Edit wage data prior to annual reporting.                  !
!           Validate SSN's EIN/s.                                      !
!           Check for unusual tax balance amounts.                     !
!           Updated for 1994.                                          !
!**********************************************************************!
!                                                                      !
!               Confidentiality Information:                           !
!                                                                      !
!                                                                      !
! This module contains confidential and proprietary information        !
! of Oracle; it is not to be copied, reproduced, or transmitted        !
! in any form, by any means, in whole or in part, nor is it to         !
! be used for any purpose other than that for which it is              !
! expressly provided under the applicable license agreement.           !
!                                                                      !
! Copyright (C) 2006 Oracle. All Rights Reserved.                      !
!                                                                      !
!**********************************************************************!
!                                                                      !
!          $Date:  2006/07/21:02:05:31                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      !
!**********************************************************************!

#include 'setenv.sqc'   !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization
#Include 'usarpt.sqc'   !USA-specific variables

begin-report
  do Init-Report
  do Process-Main
  do Delete-Gp-Eln-Tmp-Table
  do delete-tmp
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'GPUSYT10' to $ReportID
  move 'Year End Pre-Load Report USA' to $ReportTitle
  display $ReportTitle

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Get-Tax-Reporting-Run-Controls  !TX.Calendar_Year

  move &TX.Calendar_Year to $Year 9999
  move 'Y' to $No-errors
  move 'N' to $Page-flag
  let $AsOfDate = $Year || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')
  do Get-Current-DateTime

end-procedure

begin-heading 6
  #Include 'stdhdg01.sqc'
  print 'W2 Rpt Company '                      (3,1)
  print $Company                               (0,+2)
  print $CompanyName                           (0,+2)
  print 'Tax Year'          (4,1)
  print &TX.Calendar_Year   (0,+4)
end-heading

begin-procedure Process-Main

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

begin-SELECT
DISTINCT(A1.GPUS_TAX_EIN) &GPUS_TAX_EIN () on-break print=never procedure=Company-Change
GPUS_YE_RPT_CO
  move &GPUS_TAX_EIN to $TaxEIN
  do Get-CompanyName
  do Company-Edits
  do Get-Data
FROM PS_GPUS_YE_CO_TBL A1
WHERE A1.EFFDT = (SELECT MAX(A2.EFFDT)
                    FROM PS_GPUS_YE_CO_TBL A2
                   WHERE A2.GPUS_YE_RPT_CO = A1.GPUS_YE_RPT_CO
                     AND A2.EFFDT     <= $AsOfDate)
ORDER BY GPUS_YE_RPT_CO
end-SELECT
do End-Report-Msg
end-procedure

begin-procedure Get-Data
begin-SELECT
TMP1.EMPLID
D1.NATIONAL_ID
PN.NAME
TMP1.STATE
TMP1.GPUS_TAX_CATEGORY


SUM(TMP1.GPUS_TAX_GRS)     &GPUS_TAX_GRS
SUM(TMP1.GPUS_TAX_AMT)     &GPUS_TAX_AMT
TMP1.GPUS_TAX_RPT_TYPE
TMP1.GPUS_JURISDICT_TYP

     do Get-CompanyName
  if &TMP1.EmplID <> $EmplID
     move &TMP1.EmplID to $EmplID
     move 0.00 to #OASDIGross
     do Employee-Edits
  end-if

      do Tax-Balance-Edits

FROM  PS_GPUS_YT10_TMP TMP1, PS_PERSON_NAME PN,  PS_PERS_NID D1
WHERE TMP1.PROCESS_INSTANCE = #prcs_process_instance - 1
  AND TMP1.EMPLID        = D1.EMPLID AND D1.COUNTRY = {NID_Country}
  AND TMP1.GPUS_TAX_EIN  = $TaxEIN
  AND D1.NATIONAL_ID_TYPE = $PAYROLL_NID_TYPE
  AND PN.EMPLID = TMP1.EMPLID

GROUP BY TMP1.EMPLID,TMP1.STATE,TMP1.GPUS_TAX_CATEGORY,TMP1.GPUS_JURISDICT_TYP,TMP1.GPUS_TAX_RPT_TYPE,D1.NATIONAL_ID,PN.NAME
ORDER BY TMP1.EMPLID,TMP1.STATE,TMP1.GPUS_TAX_CATEGORY
end-SELECT

end-procedure

begin-procedure Company-Change
  do No-errors
  move 'N' to $Page-flag
  move 'Y' to $No-errors
  new-page
end-procedure

begin-procedure No-errors
  if $No-errors = 'Y'
         position (+3)
         move 'No errors for Reporting Company' to $endmessage
         print $endmessage (0,70)
         print $company (0,102)
  end-if
end-procedure

begin-procedure Company-Edits
  let $tmp = SUBSTR(EDIT(&GPUS_TAX_EIN,'099999999'),1,2)
  evaluate $tmp
        when = '00'
        when = '07'
        when = '08'
        when = '09'
        when = '17'
        when = '18'
        when = '19'
        when = '28'
        when = '29'
        when = '49'
        when = '69'
        when = '70'
        when = '78'
        when = '79'
        when = '89'
          move 'Missing or Invalid Federal EIN' to $Message
       if #current-line = 7
       do Print-CompanyHeading
       end-if
      print $Company               (+2,1)
          print &CT.Descr              (0,23)
          print &GPUS_TAX_EIN          (0,66) edit 099999999
          print $Message               (0,82)
          move 'N' to $No-errors
          move 'Y' to $Page-flag
  end-evaluate
end-procedure

begin-procedure Employee-Edits
  let #tmp = TO_NUMBER(&D1.NATIONAL_ID)               !Verify SSN is numeric
  let $SSN = EDIT(TO_CHAR(#tmp),'099999999')
  let $NATID = substr(&D1.NATIONAL_ID,1,9)

  if #tmp = 0
        move 'Missing SSN or SSN = 000000000' to $Message
        do Print-Data-Error-Line
  else
        if $SSN <> $NATID
          move 'Invalid SSN' to $Message
          do Print-Data-Error-Line
        else                                              !Check for invalid #'s
        if RTRIM(&D1.NATIONAL_ID, ' ') = ''
                  or $NATID  = '111111111'
                  or $NATID  = '123456789'
                  or $NATID  = '333333333'
                  or SUBSTR(&D1.NATIONAL_ID,1,3) = '000'
                move 'Invalid SSN' to $Message
                do Print-Data-Error-Line
        end-if
        end-if
  end-if

end-procedure

begin-procedure Tax-Balance-Edits
  if &GPUS_TAX_GRS < 0
        move 'Negative Gross' to $Message
        do Print-Tax-Error-Line
  end-if

  if &GPUS_TAX_AMT < 0 and &TMP1.Gpus_Tax_Category <> '07'
        move 'Negative Tax' to $Message
        do Print-Tax-Error-Line
  end-if

 if &GPUS_TAX_AMT > 0 and &TMP1.Gpus_Tax_Category = '07'
        move 'EIC Tax-YTD should be < 0' to $Message
        do Print-Tax-Error-Line
 end-if

  evaluate &TMP1.Gpus_Tax_Category
   when = '01'  !Withholding
          if  rtrim(&TMP1.GPUS_TAX_RPT_TYPE, ' ') = '10'
          and &TMP1.GPUS_JURISDICT_TYP = '02'
                          if &GPUS_TAX_AMT > 0 or &GPUS_TAX_GRS > 0
                          move 'FWT tax balance for Puerto Rico employee'   to $Message
                          do Print-Tax-Error-Line
                          end-if
          end-if

   break
   when = '02'  !OASDI Employee

          move &GPUS_TAX_GRS to #OASDIGross

          do Get-OASDI-Max

          if &GPUS_TAX_GRS > #MaxGross
                move 'OASDI Gross > ' to $Message
                move #MaxGross to $MaxGross b99,999,999
                let $Message = $Message || $MaxGross
                do Print-Tax-Error-Line
          end-if

          if &GPUS_TAX_AMT > #MaxTax
                move 'OASDI Tax Withheld > ' to $Message
                move #MaxTax to $MaxTax b99,999,999.99
                let $Message = $Message || $MaxTax
                do Print-Tax-Error-Line
          end-if

          let #CalcTax = &GPUS_TAX_GRS * #TaxRt
          if (#CalcTax - &GPUS_TAX_AMT) > 0.01 OR (#CalcTax - &GPUS_TAX_AMT) < -0.01
                move 'OASDI Calc Tax <> Tax Balance' to $Message
                do Print-Tax-Error-Line
          end-if

   break
   when = '04'  !FICA Medicare

          do Get-Medicare-Max

          let #CalcTax = &GPUS_TAX_GRS * #TaxRt
          if (#CalcTax - &GPUS_TAX_AMT) > 0.01 OR (#CalcTax - &GPUS_TAX_AMT) < -0.01
                move 'Medicare Calc Tax <> Tax Balance' to $Message
                do Print-Tax-Error-Line
          end-if

   break

   when = '07'  !Earned Income Credit

          if rtrim(&TMP1.GPUS_TAX_RPT_TYPE, ' ') = '40'
                if &GPUS_TAX_AMT > 0 or &GPUS_TAX_GRS > 0
                 move 'EIC for Puerto Rico employee'   to $Message
                 do Print-Tax-Error-Line
                end-if
          else
                if rtrim(&TMP1.GPUS_TAX_RPT_TYPE, ' ') = '20'
                  if &GPUS_TAX_AMT > 0 or &GPUS_TAX_GRS > 0
                    move 'EIC for American Samoa employee'   to $Message
                    do Print-Tax-Error-Line
                  end-if
                end-if
          end-if

   break
  end-evaluate
end-procedure

begin-procedure Print-Tax-Error-Line
  if $Page-flag = 'Y'
  new-page
  move 'N' to $Page-flag
  end-if
  if #current-line = 7
  do Print-EmployeeHeading
  end-if
  position (+1)
  if &TMP1.EmplID <> $priorEmplID or $TaxEIN <> $priorTaxEIN
        print &TMP1.EmplID          (+1,1)
        print &PN.Name              (0,14,30)
        print &D1.NATIONAL_ID       (0,45) edit xxx-xx-xxxx
        move &TMP1.EmplID to $priorEmplID
        move $TaxEIN to $priorTaxEIN
  end-if
  print &TMP1.State             (0,59,4)

  evaluate &TMP1.Gpus_Tax_Category
   when = '01'  !Withholding
          print 'Withholding' (0,67)
   break
   when = '02'  !OASDI Employee
          print 'OASDI' (0,67)
   break
   when = '04'  !FICA Medicare
          print 'Medicare' (0,67)
   break
   when = '07'  !Earned Income Credit
          print 'EIC' (0,67)
   break
  end-evaluate

  do Format-Number(&GPUS_TAX_GRS, $out, '99,999,999.99mi')
  print $out                    (0,80)
  if &TMP1.Gpus_Tax_Category = '07' and &GPUS_TAX_AMT < 0
   move &GPUS_TAX_AMT    to #GPUS_TAX_AMT
   let #GPUS_TAX_AMT = #GPUS_TAX_AMT * -1
   do Format-Number(#GPUS_TAX_AMT, $out, '99,999,999.99mi')
  else
   do Format-Number(&GPUS_TAX_AMT, $out, '99,999,999.99mi')
  end-if
  print $out                    (0,93)
  print $Message                (0,110)

  move 'N' to $No-errors

end-procedure

begin-procedure Print-Data-Error-Line
  if $Page-flag = 'Y'
  new-page
  end-if
  move 'N' to $Page-flag
  if #current-line = 7
  do Print-EmployeeHeading
  end-if
  position (+1)
  if &TMP1.EmplID <> $priorEmplID or $TaxEIN <> $priorTaxEIN
        print &TMP1.EmplID         (+1,1)
        print &PN.Name           (0,14,30)
        print &D1.NATIONAL_ID            (0,45) edit xxx-xx-xxxx
        move &TMP1.EmplID to $priorEmplID
        move $TaxEIN to $priorTaxEIN
    end-if
  print $Message            (0,102)

  move 'N' to $No-errors
end-procedure

begin-procedure Print-EmployeeHeading
print 'Employee ID  Employee Name'                      (+1,1)
print 'SSN      State    TaxCategory     YTD Gross        '     (0,49)
print 'YTD Tax   Message'                               ()
end-procedure

begin-procedure Print-CompanyHeading
do Get-CompanyName
print 'Reporting Company     Reporting Company Description'               (+1,1)
print 'EIN        '                                   (0,69)
print '  Message'                                     ()
end-procedure

begin-procedure Get-OASDI-Max

begin-SELECT
VR.MONETARY_VALUE
VR.DECIMAL_VALUE
T1.GP_ELN_PIN_ATTR1
C.FLD_FMT

  let $FLDFMT       = &C.FLD_FMT
  let #FLDFMT       = $FLDFMT


 evaluate #FLDFMT

  when = 3      !Monetary

   IF rtrim(&T1.GP_ELN_PIN_ATTR1,' ') = '01'
         move &VR.MONETARY_VALUE    to #MaxGross
   END-IF

   IF rtrim(&T1.GP_ELN_PIN_ATTR1,' ') = '02'
         move &VR.MONETARY_VALUE    to #TaxRt
         let #TaxRt = #TaxRt  * 0.01
   END-IF

   IF rtrim(&T1.GP_ELN_PIN_ATTR1,' ') = '06'
         move &VR.MONETARY_VALUE    to #MaxTax
   END-IF

  break

  when = 4      !Decimal

   IF rtrim(&T1.GP_ELN_PIN_ATTR1,' ') = '01'
         move &VR.DECIMAL_VALUE    to #MaxGross
   END-IF

   IF rtrim(&T1.GP_ELN_PIN_ATTR1,' ') = '02'
         move &VR.DECIMAL_VALUE    to #TaxRt
         let #TaxRt = #TaxRt  * 0.01
   END-IF

   IF rtrim(&T1.GP_ELN_PIN_ATTR1,' ') = '06'
         move &VR.DECIMAL_VALUE    to #MaxTax
   END-IF

  break
 end-evaluate

FROM PS_GP_VARIABLE VR,PS_GP_ELN_TMP T1,PS_GP_PIN C
WHERE T1.PROCESS_INSTANCE = #prcs_process_instance - 1
  AND T1.PIN_NUM = C.PIN_NUM
  AND VR.PIN_NUM = C.PIN_NUM
  AND T1.PIN_NUM = VR.PIN_NUM
  AND VR.EFFDT = (SELECT MAX(VR2.EFFDT)
                    FROM PS_GP_VARIABLE VR2
                   WHERE VR2.PIN_NUM = VR.PIN_NUM
                     AND VR2.EFFDT     <= $AsOfDate)
end-SELECT
end-procedure


begin-procedure Get-Medicare-Max

begin-SELECT
VR1.MONETARY_VALUE
VR1.DECIMAL_VALUE
T2.GP_ELN_PIN_ATTR1
C1.FLD_FMT

        let $FLDFMT       = &C1.FLD_FMT
        let #FLDFMT       = $FLDFMT

 evaluate #FLDFMT

 when = 3      !Monetary
  IF rtrim(&T2.GP_ELN_PIN_ATTR1,' ') = '03'
  move &VR1.MONETARY_VALUE    to #TaxRt
  let #TaxRt = #TaxRt  * 0.01
  END-IF
 break

 when = 4      !Decimal
  IF rtrim(&T2.GP_ELN_PIN_ATTR1,' ') = '03'
  move &VR1.DECIMAL_VALUE    to #TaxRt
  let #TaxRt = #TaxRt  * 0.01
  END-IF
 break
 end-evaluate

FROM PS_GP_VARIABLE VR1,PS_GP_ELN_TMP T2,PS_GP_PIN C1
WHERE T2.PROCESS_INSTANCE = #prcs_process_instance - 1
  AND T2.PIN_NUM  = VR1.PIN_NUM
  AND T2.PIN_NUM  = C1.PIN_NUM
  AND VR1.PIN_NUM = C1.PIN_NUM
  AND VR1.EFFDT = (SELECT MAX(VR3.EFFDT)
                    FROM PS_GP_VARIABLE VR3
                   WHERE VR3.PIN_NUM = VR1.PIN_NUM
                     AND VR3.EFFDT     <= $AsOfDate)
end-SELECT
end-procedure


begin-procedure End-Report-Msg

do No-errors

position (+3)
move 'End of GPUSYT10 Report' to $endmessage
print $endmessage (0,80)
end-procedure

begin-procedure Get-CompanyName
move &GPUS_TAX_EIN  to $Tax_EIN
do Get-Company
end-procedure

begin-procedure Delete-Gp-Eln-Tmp-Table
begin-SQL
 DELETE FROM PS_GP_ELN_TMP
   WHERE PROCESS_INSTANCE = #prcs_process_instance - 1
     AND COUNTRY='USA'
     AND GP_ELN_SET =(SELECT  GP_ELN_SET FROM PS_GPUS_RPT_SETUP
                       WHERE PRCSJOBNAME = (SELECT PRCSJOBNAME FROM PSPRCSRQST
                                             WHERE PRCSINSTANCE = #prcs_process_instance - 1))

end-SQL
end-procedure

begin-procedure delete-tmp
begin-SQL
delete from PS_GPUS_YT10_TMP
  WHERE PROCESS_INSTANCE   = #prcs_process_instance - 1
end-SQL
end-procedure


#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'gpusrntl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'gpuscodt.sqc'  !Get-Company-Data procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id