!***********************************************************************
!  TAX918PR:  Create W-2 Print File                                    *
!***********************************************************************
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                $Date:  2006/07/06:12:46:31                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      *
!***********************************************************************

#DEFINE WCOLUMN1 2    !Set up first print column of W2 form
#DEFINE WCOLUMN2 42   !Set up mid-point column of W2 form
#DEFINE SIZE_OF_FONT 8  !Used for Tax Locality Sort
#include 'setenv.sqc' !Set environment

!
! The correct definitions of WCOLUMN1, WCOLUMN2, and SIZE_OF_FONT are
! read from the SETENV.SQC. If they are not entered the default values
! listed above will be in effect. The correct values for the specific
! forms are as follows:
!
!    IMP01 & LSA03(2 Vertical)
!    WCOLUMN1 = 2 and SIZE_OF_FONT = 6
!
!    All other forms
!    WCOLUMN1 = 4 and SIZE_OF_FONT = 8
!

begin-setup
   #if {SIZE_OF_FONT} = '6'
    #Include 'setup03i.sqc'  !printer and page-size init - impact
  #else

    #include 'setupdb.sqc'               ! Database specific setup

    #ifndef MVS
    #ifndef OS400
    printer-init <27>E<27>(0N<27>&l8D<27>&l0E<27>&l88F<27>&l09Z
    !                |      |      |       |       |         |
    !                |      |      |       |       |         |
    !                    Short edge offset (09 decipoints)<--
    !                |      |      |       |        --> 88 text lines
    !                |      |      |        --> top margin = 0 lines
    !                |      |       --> 8 lines per inch
    !                |     --> ISO 8859-1 symbol set
    !                 --> Reset
    #else
    printer-init <39>E<39>(0N<39>&l8D<39>&l0E<39>&l88F
    #endif
    #else
    printer-init <39>E<39>(0N<39>&l8D<39>&l0E<39>&l88F
    #endif

    page-size 88 96

  #endif
end-setup

begin-report
  do Init-Report
  do Stdapi-Term
end-report

begin-procedure Init-Report
  display ''
  display 'Printing W-2'

  date-time () hh:mi:ss &t1
  display &t1

  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Initialization

  if $PRCS_Process_Instance = ''
     do Prompts
  else
     do Select-US-Year-End-Parameters
     do Convert-Parameters
  end-if

  if &TX.Align_Count > 0
    do Print-Alignment-Forms
  end-if
  do Report-File-Create

  if $EmployeeFound = 'N'
    display ' '
    display '****** No Employee Records Selected ******'
    display ' '
    new-page
    print '********************************'  (+3,1)
    print '  No Employee Records Selected  '  (+1,1)
    print '********************************'  (+1,1)
  else
    display ''
    display 'Upon successful conclusion of this program, one file will have'
    display 'been created:'
    display ''
    display '{IMPORTPREFIX}TAX918PR.LIS contains print images for paper W-2s.'
    display ''
    do Print-Grand-Totals
  end-if

  date-time () hh:mi:ss &t2
  display &t2
end-procedure

begin-procedure Initialization
  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

  move $910Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear

  do Get-Tax-Reporting-Run-Controls

  if RTRIM(&TX.Form_ID,' ') = ''
    display '*********************************************************'
    display 'Form ID not specified on Tax Reporting Parameters Panel 2'
    display 'Program stopped'
    display '*********************************************************'
    stop
  end-if


  move &TX.Balance_Year to $CalYear 9999

  let $Yr = SUBSTR($CalYear,4,1)

  let $AsOfDate = '20001231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')


  !if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
  !  display ''
  !  display 'Current Year is not one greater than Tax Reporting Year.'
  !  display 'Current Year is    ' noline
  !  display  #saveAsOfYear  9999
  !  display 'Tax Reporting Year ' noline
  !  display &TX.Balance_Year
  !  input $Answer maxlen=1 'Do you want to continue? (Y/N)'
  !  uppercase $Answer
  !  if $Answer <> 'Y'
  !    stop
  !  end-if
  !end-if

  do Load-W2-PRT

  move 0 to #T_Count
  move  0 to #Form#
  move &TX.Employees_Per_Page to #EmployeesPerPage

  if $Layout_Style = '4CORNER'
    COLUMNS {WCOLUMN1} {WCOLUMN2}
    move 4 to #FormsPerPage
  end-if

  if $Layout_Style = '2VERTICAL'
    COLUMNS {WCOLUMN1}
    move 2 to #FormsPerPage
  end-if

  if $Layout_Style = '4VERTICAL'
    COLUMNS {WCOLUMN1}
    move 4 to #FormsPerPage
  end-if

  if #EmployeesPerPage  > #FormsPerPage
    display '*********************************************************'
    display 'Employees Per Page specifed on Tax Reporting Parameters  '
    display 'Panel 2 is greater than the number of forms per page     '
    display 'for the Form ID selected.                                '
    display '*********************************************************'
    stop
  end-if

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT


end-procedure

begin-procedure Report-File-Create
  move 'N' to $EmployeeFound
begin-SELECT
A.W2_REPORTING_CO
A.DESCR
A.FEDERAL_EIN
A.ADDRESS1
A.ADDRESS2
A.CITY
A.STATE
A.POSTAL
A.COUNTRY
A.BUSI_TERM_DT

  move &A.Federal_EIN     to $A.Federal_EIN 099999999
  move &A.Descr           to $A.Descr
  move &A.Address1        to $A.Address1
  move &A.Address2        to $A.Address2
  move &A.Country         to $A.Country
  let  $A.City            =  RTRIM(&A.City,' ')
  let $A.State = rtrim(&A.State, ' ')
  move &A.Postal          to $A.Zip
  move &A.W2_Reporting_Co to $A.W2_Reporting_Co
  move $RC_US_YE.Telephone_Nbr     to $Telephone_Nbr

  if isnull(&A.BUSI_TERM_DT)
     let $A.ClosingDate = ' '
  else
     do Format-DateTime(&A.BUSI_TERM_DT, $A.ClosingDate, {DEFMDY},'','')
  end-if

  UPPERCASE $A.Descr
  UPPERCASE $A.Address1
  UPPERCASE $A.Address2
  UPPERCASE $A.Country
  UPPERCASE $A.City

  move 0 to #I_Count

  evaluate $SortCode1

    when = '1'
    when = '2'
    when = '5'
      do Read-Employee-Data
    break

    when = '3'
    when = '4'
    when = '6'
      do W2-Sort
    break
  end-evaluate

  if #I_Count > 0
    do Print-Intermediate-Total
  end-if

FROM  PS_W2_COMPANY A
WHERE A.CALENDAR_YEAR    = &TX.Balance_Year
  AND A.W2_REPORTING_CO  = A.COMPANY
  AND A.W2_REPORTING_CO <> ' '
ORDER BY A.W2_REPORTING_CO
end-SELECT
end-procedure

begin-procedure Read-Employee-Data
begin-SELECT
E.COMPANY
E.EMPLID           () on-break level=1 print=never before=Before-EmplID
E.TAXFORM_ID
E.SEQUENCE_NUMBER  () on-break level=2 print=never after=After-Seq
E.CONTROL_NUMBER
E.W2_STATE
E.EMPLOYER_ID_SWT
E.SSN
E.W2_NAME
E.ADDRESS1
E.ADDRESS2
E.CITY
E.STATE
E.POSTAL
E.COUNTRY
E.DECEASED
E.SPOUSE_SSN
E.MAR_STATUS
EE.PROCESS_FLAG
P.NAME_PSFORMAT
P.LAST_NAME
P.FIRST_NAME
P.MIDDLE_NAME

  move &E.TaxForm_ID      to $E.TaxForm_ID
  move &E.Sequence_Number to #E.Sequence_Number

  move &E.W2_State to $E.W2_State

  if RTRIM(&E.Employer_ID_SWT,' ') <> ''
    move &E.Employer_ID_SWT to $E.Employer_ID_SWT
  end-if

  move 'Y' to $EmployeeFound


FROM  PS_W2_EE_PR EE, PS_W2_DATA_PR E, PS_PERSON_NAME P, PS_W2_COMPANY W
WHERE W.W2_REPORTING_CO  = &A.W2_Reporting_Co
  AND W.COMPANY          = E.COMPANY
  AND W.CALENDAR_YEAR    = E.CALENDAR_YEAR
  AND E.COMPANY          = EE.COMPANY
  AND E.EMPLID           = EE.EMPLID
  AND E.TAXFORM_ID       = 'P'
  AND E.TAXFORM_ID       = EE.TAXFORM_ID
  AND E.CALENDAR_YEAR    = EE.CALENDAR_YEAR
  AND E.CALENDAR_YEAR    = &TX.Balance_Year
  AND P.EMPLID           = EE.EMPLID
  [$E.SelectedEEs]             !NULL string if SELECT EEs option not used

  AND EE.PROCESS_FLAG   <> 'V'
[$Sort2]
end-SELECT
end-procedure

begin-procedure Before-EmplID
  display 'processing ' noline
  display &E.Company  noline
  display ' '  noline
  display &E.w2_state     noline
  display ' '  noline
  display &P.NAME_PSFORMAT     noline
  display ' '  noline
  display &E.EmplID

  move &E.EmplID   to $E.EmplID

  move &E.SSN to $S123 xxx
  if $S123 = &Temp_SSN_Mask or RTRIM(&E.SSN, ' ') = ''
    move 'Applied For' to $E.SSN
  else
    move &E.SSN to $E.SSN xxx-xx-xxxx
  end-if


  move &E.Mar_Status to $E.Mar_Status

  move &E.Spouse_SSN to $S123 xxx
     if $S123 = &Temp_SSN_Mask or RTRIM(&E.SSN, '0') = ''
       move '           ' to $E.Spouse_SSN
     else
       move &E.Spouse_SSN to $E.Spouse_SSN xxx-xx-xxxx
     end-if

  let $LastName   = rtrim(&P.LAST_NAME, ' ')
  let $FirstName  = rtrim(&P.FIRST_NAME, ' ')
  let $MidInitial = {ps-substr}(&P.MIDDLE_NAME,1,1)
  uppercase $LastName
  uppercase $FirstName
  move &E.W2_Name to $E.W2_Name

  if &E.Deceased = 'Y'
    if INSTR($E.W2_Name,'DECD',1) = 0
      concat ' DECD'   with $LastName
    end-if
  end-if

  move &E.Address1        to $E.Address1
  move &E.Address2        to $E.Address2
  move &E.Country         to $E.Country
  let  $E.City            =  RTRIM(&E.City,' ')
  let $E.State = rtrim(&E.State, ' ')
  move &E.Postal          to $E.Zip

  uppercase $E.Address1
  uppercase $E.Address2
  uppercase $E.Country
  uppercase $E.City

  if #I_Count = 0
    move 0 to #Form#
  end-if
  move 0 to #FedWages
end-procedure

begin-procedure After-Seq
  do Load-Amounts
  do Print-W2

  if &E.Sequence_Number = 1
    add 1 to #I_Count
  end-if

  if #I_Count = 41
    do Print-Intermediate-Total
    move 0 to #I_Count
  end-if
end-procedure

begin-procedure Print-W2
  move 1 to #j

  while #j <= #FormsPerPage/#EmployeesPerPage  !loop for individual ee's
    do Next-Form
    do Print-ER-Data
    do Print-EE-Data
    do Print-Fed-State-Amounts
    add 1 to #j
  end-while



  move 0 to #07
  move 0 to #08
  move 0 to #09
  move 0 to #10
  move 0 to #11
  move 0 to #12
  move 0 to #13
  move 0 to #14
  move 0 to #15
  move 0 to #16

  move 0 to #18
  move 0 to #19
  move 0 to #20
  move 0 to #21
  move 0 to #22
  move 0 to #23
  move 0 to #24
end-procedure

begin-procedure Print-ER-Data
  !do Print-Value($Yr,#L_Y,#C_Y,'Year ')                  year is now pre-printed on form
  do Print-Value($A.Federal_EIN,#L_06,#C_06,'Box 06')
  do Print-Value($A.Descr,#L_02A,#C_02A,'Box 2A')
  do Print-Value($A.Address1,#L_02B,#C_02B,'Box 2B')
  if RTRIM($A.Address2, ' ') <> ''
    do Print-Value($A.Address2,#L_02C,#C_02C,'Box 2C')
    move 'N' to $LineShift
  else
    move 'Y' to $LineShift
  end-if
  if #Align_Count = 0
    if $A.Country = 'USA'
      move $A.Zip            to $A.ZipExtsn ~~~~~~xxxx
      if instr($A.Zip,'-',6) = 0
      and $A.ZipExtsn <> '    '
        let $A.Zip = substr($A.Zip,1,5) || '-' || substr($A.Zip,6,4)
      end-if
      let $02D = $A.City || ', ' || $A.State || ' ' || $A.Zip
    else
      let $02D = $A.City || ', ' || $A.State || ' ' ||
              $A.Country || ' ' || $A.Zip
    end-if
  end-if
  if $LineShift = 'Y'
    let #PrintLine = #L_02C
  else
    let #PrintLine = #L_02D
  end-if
  do Print-Value($02D,#PrintLine,#C_02D,'Box 2D')

  if RTRIM($Telephone_Nbr, ' ') <> ''
     do Print-Value($Telephone_Nbr,#L_02E,#C_02E,'Box 2E')
  end-if
  if RTRIM($A.ClosingDate, ' ') <> ''
     do Print-Value($A.ClosingDate,#L_02F,#C_02F,'Box 2F')
  end-if

end-procedure

begin-procedure Print-EE-Data
  do Print-Value($E.SSN,#L_03,#C_03,'Box 03')
  do Print-Value($FirstName,#L_01A,#C_01A,'Box 1A')
  do Print-Value($LastName,#L_01B,#C_01B,'Box 1B')
  do Print-Value($E.Address1,#L_01C,#C_01C,'Box 1C')
  if RTRIM($E.Address2, ' ') <> ''
    do Print-Value($E.Address2,#L_01D,#C_01D,'Box 1D')
    move 'N' to $LineShift
  else
    move 'Y' to $LineShift
  end-if
  if #Align_Count = 0
    if $E.Country = 'USA'
      move $E.Zip            to $E.ZipExtsn ~~~~~~xxxx
      if instr($E.Zip,'-',6) = 0
      and $E.ZipExtsn <> '    '
        let $E.Zip = substr($E.Zip,1,5) || '-' || substr($E.Zip,6,4)
      end-if
      let $01E = $E.City || ', ' || $E.State || ' ' || $E.Zip
    else
      let $01E = $E.City || ', ' || $E.State || ' ' ||
                $E.Country || ' ' || $E.Zip
    end-if
  end-if
  if $LineShift = 'Y'
    let #PrintLine = #L_01D                ! ?????
  else
    let #PrintLine = #L_01E
  end-if
  do Print-Value($01E,#PrintLine,#C_01E,'Box 1E')


 if $E.Mar_Status = 'S'
   do Print-Value('X',#L_04A,#C_04A,'Box 04A')
 else
   if $E.Mar_Status = 'M'
     do Print-Value($E.Spouse_SSN,#L_05,#C_05,'Box 05')
     do Print-Value('X',#L_04B,#C_04B,'Box 04B')
   end-if
 end-if

end-procedure

begin-procedure Load-Amounts
begin-SELECT
C.W2_REPORTING_CO
D.STATE
D.BOX
#ifdef DB2ALL
DECIMAL(SUM(D.W2_AMOUNT),15,3) &D.W2_Amount
#else
SUM(D.W2_AMOUNT) &D.W2_Amount
#endif
  move &D.W2_Amount to #Amount

   let $D.Box = RTRIM(&D.Box,' ')
   evaluate $D.Box
    when = '07'                    !Pension/annuity
      add  #Amount to #07
      add  #Amount to #07_I
      break
    when = '08'                    !PR Wages
      add  #Amount to #08
      add  #Amount to #08_I
      add  #Amount to #12          ! box 12 = 8 + 9 + 10 + 11
      add  #Amount to #12_I
     break
    when = '09'                    !Commissions
      subtract  #Amount from #08      !already included in box 08
      subtract  #Amount from #08_I
      add  #Amount to #09
      add  #Amount to #09_I
      break
    when = '10'                    !Allowances
      add  #Amount to #10
      add  #Amount to #10_I
      add  #Amount to #12          ! box 12 = 8 + 9 + 10 + 11
      add  #Amount to #12_I
      break
    when = '11'                    !Tips
      add  #Amount to #11
      add  #Amount to #11_I
      add  #Amount to #12          ! box 12 = 8 + 9 + 10 + 11
      add  #Amount to #12_I
      break
    when = '13'                    !Reimbursed expenses
      add  #Amount to #13
      add  #Amount to #13_I
      break
    when = '14'                    !PR tax withheld
      add  #Amount to #14
      add  #Amount to #14_I
      break
    when = '15'                    !Retirement fund
      add  #Amount to #15
      add  #Amount to #15_I
      break
    when = '16'                    !CODA contributions
      add  #Amount to #16
      add  #Amount to #16_I
      break
    when = '18'                    !Soc sec wages
      add  #Amount to #18
      add  #Amount to #18_I
      break
    when = '19'                    !Soc sec tax withheld
      add  #Amount to #19
      add  #Amount to #19_I
      break
    when = '20'                    !Medicare wages and tips
      add  #Amount to #20
      add  #Amount to #20_I
      break
    when = '21'                    !Medicare tax withheld
      add  #Amount to #21
      add  #Amount to #21_I
      break
    when = '22'                    !Soc sec tips
      add  #Amount to #22
      add  #Amount to #22_I
      break
    when = '23'                    !Uncollected soc sec
      add  #Amount to #23          ! tax on tips
      add  #Amount to #23_I
      break
    when = '24'                    !Uncollected Medicare
      add  #Amount to #24          ! tax on tips
      add  #Amount to #24_I
      break
     when-other
         display 'UNKNOWN BOX IDENTIFIER:'
         display $D.Box
         display 'Processing Stopped'
         STOP
   end-evaluate

FROM  PS_W2_AMOUNTS_PR D, PS_W2_COMPANY C
WHERE C.W2_REPORTING_CO = &A.W2_Reporting_Co
  AND C.COMPANY         = D.COMPANY
  AND C.CALENDAR_YEAR   = D.CALENDAR_YEAR
  AND D.EMPLID          = $E.Emplid
  AND D.CALENDAR_YEAR   = &TX.Balance_Year
  AND D.TAXFORM_ID      = $E.TaxForm_ID
  AND D.SEQUENCE_NUMBER = #E.Sequence_Number
GROUP BY C.W2_REPORTING_CO, D.STATE, D.BOX
ORDER BY C.W2_REPORTING_CO, D.STATE, D.BOX
end-SELECT
end-procedure

begin-procedure Print-Fed-State-Amounts

  do Format-Number(#07, $out, $F07)              !Pension/Annuity
  do Print-Value($out,#L_07,#C_07,'Box 07')

  do Format-Number(#08, $out, $F08)              !PR Wages
  do Print-Value($out,#L_08,#C_08,'Box 08')

  do Format-Number(#09, $out, $F09)              !Commissions
  do Print-Value($out,#L_09,#C_09,'Box 09')

  do Format-Number(#10, $out, $F10)              !Allowances
  do Print-Value($out,#L_10,#C_10,'Box 10')

  do Format-Number(#11, $out, $F11)              !Tips
  do Print-Value($out,#L_11,#C_11,'Box 11')

  do Format-Number(#12, $out, $F12)              !Total wages/comm/
  do Print-Value($out,#L_12,#C_12,'Box 12')      ! allowances/tips

  do Format-Number(#13, $out, $F13)              !Reimbursed exp
  do Print-Value($out,#L_13,#C_13,'Box 13')

  do Format-Number(#14, $out, $F14)              !PR tax w/h
  do Print-Value($out,#L_14,#C_14,'Box 14')

  do Format-Number(#15, $out, $F15)              !Retirement fund
  do Print-Value($out,#L_15,#C_15,'Box 15')

  do Format-Number(#16, $out, $F16)              !CODA contrib
  do Print-Value($out,#L_16,#C_16,'Box 16')

  do Format-Number(#18, $out, $F18)              !SS wages
  do Print-Value($out,#L_18,#C_18,'Box 18')

  do Format-Number(#19, $out, $F19)              !SS taxes
  do Print-Value($out,#L_19,#C_19,'Box 19')

  do Format-Number(#20, $out, $F20)              !Med wages
  do Print-Value($out,#L_20,#C_20,'Box 20')

  do Format-Number(#21, $out, $F21)              !Med wages
  do Print-Value($out,#L_21,#C_21,'Box 21')

  do Format-Number(#22, $out, $F22)              !Med wages
  do Print-Value($out,#L_22,#C_22,'Box 22')

  do Format-Number(#23, $out, $F23)              !Med wages
  do Print-Value($out,#L_23,#C_23,'Box 23')

  do Format-Number(#24, $out, $F24)              !Med wages
  do Print-Value($out,#L_24,#C_24,'Box 24')

end-procedure


begin-procedure Print-Intermediate-Total
  move 1 to #j
  while #j <= #FormsPerPage/#EmployeesPerPage  !loop for individual ee's
    do Next-Form
    do Print-ER-Data

    do Format-Number(#07_I, $out, $F07)          !Pension
    do Print-Value($out,#L_07,#C_07,'Box 07')

    do Format-Number(#08_I, $out, $F08)          !PR wages
    do Print-Value($out,#L_08,#C_08,'Box 08')

    do Format-Number(#09_I, $out, $F09)          !Commissions
    do Print-Value($out,#L_09,#C_09,'Box 09')

    do Format-Number(#10_I, $out, $F10)          !Allowances
    do Print-Value($out,#L_10,#C_10,'Box 10')

    do Format-Number(#11_I, $out, $F11)          !Tips
    do Print-Value($out,#L_11,#C_11,'Box 11')

    do Format-Number(#12_I, $out, $F12)          !Total wages/comm/
    do Print-Value($out,#L_12,#C_12,'Box 12')    !allow/tips

    do Format-Number(#13_I, $out, $F13)          !Reimbursed exp
    do Print-Value($out,#L_13,#C_13,'Box 13')

    do Format-Number(#14_I, $out, $F14)          !PR tax w/h
    do Print-Value($out,#L_14,#C_14,'Box 14')

    do Format-Number(#15_I, $out, $F15)          !Retirement
    do Print-Value($out,#L_15,#C_15,'Box 15')

    do Format-Number(#16_I, $out, $F16)          !CODA
    do Print-Value($out,#L_16,#C_16,'Box 16')

    do Format-Number(#18_I, $out, $F18)          !
    do Print-Value($out,#L_18,#C_18,'Box 18')

    do Format-Number(#19_I, $out, $F19)          !
    do Print-Value($out,#L_19,#C_19,'Box 19')

    do Format-Number(#20_I, $out, $F20)          !
    do Print-Value($out,#L_20,#C_20,'Box 20')

    do Format-Number(#21_I, $out, $F21)          !
    do Print-Value($out,#L_21,#C_21,'Box 21')

    do Format-Number(#22_I, $out, $F22)          !
    do Print-Value($out,#L_22,#C_22,'Box 22')

    do Format-Number(#23_I, $out, $F23)          !
    do Print-Value($out,#L_23,#C_23,'Box 23')

    do Format-Number(#24_I, $out, $F24)          !
    do Print-Value($out,#L_24,#C_24,'Box 24')

    do Print-Value('X',#L_17,#C_17,'Box 17')  !Subtotal checkbox

    add 1 to #j
  end-while

  add #07_I to #07_T
  move 0 to #07_I
  add #08_I to #08_T
  move 0 to #08_I
  add #09_I to #09_T
  move 0 to #09_I
  add #10_I to #10_T
  move 0 to #10_I
  add #11_I to #11_T
  move 0 to #11_I
  add #12_I to #12_T
  move 0 to #12_I
  add #13_I to #13_T
  move 0 to #13_I
  add #14_I to #14_T
  move 0 to #14_I
  add #15_I to #15_T
  move 0 to #15_I
  add #16_I to #16_T
  move 0 to #16_I
  add #18_I to #18_T
  move 0 to #18_I
  add #19_I to #19_T
  move 0 to #19_I
  add #20_I to #20_T
  move 0 to #20_I
  add #21_I to #21_T
  move 0 to #21_I
  add #22_I to #22_T
  move 0 to #22_I
  add #23_I to #23_T
  move 0 to #23_I
  add #24_I to #24_T
  move 0 to #24_I

  add #I_Count to #T_Count
  move 0 to #I_Count
end-procedure

begin-procedure Print-Grand-Totals

  if #07_T > 0
    do Format-Number(#07_T, $out,'999,999,999,999.99')          !Pension/annuity
    display 'Box 07- Pension/annuity           ' noline
    display $out
  end-if

  if #08_T > 0
    do Format-Number(#08_T, $out,'999,999,999,999.99')          !PR Wages
    display 'Box 08- PR Wages                  ' noline
    display $out
  end-if

  if #09_T > 0
    do Format-Number(#09_T, $out,'999,999,999,999.99')          !Commissions
    display 'Box 09- Commissions               ' noline
    display $out
  end-if

  if #10_T > 0
    do Format-Number(#10_T, $out,'999,999,999,999.99')          !Allowances
    display 'Box 10- Allowances                ' noline
    display $out
  end-if

  if #11_T > 0
    do Format-Number(#11_T, $out,'999,999,999,999.99')          !Tips
    display 'Box 11- Tips                      ' noline
    display $out
  end-if

  if #12_T > 0
    do Format-Number(#12_T, $out,'999,999,999,999.99')          !Total wages/comm/
    display 'Box 12- Total wages/comm/allow/tip' noline         ! allowances/tips
    display $out
  end-if

  if #13_T > 0
    do Format-Number(#13_T, $out,'999,999,999,999.99')          !Reimbursed expenses
    display 'Box 13- Reimbursed expenses       ' noline
    display $out
  end-if

  if #14_T > 0
    do Format-Number(#14_T, $out,'999,999,999,999.99')          !PR tax withheld
    display 'Box 14- PR tax withheld           ' noline
    display $out
  end-if

  if #15_T > 0
    do Format-Number(#15_T, $out,'999,999,999,999.99')          !Retirement fund
    display 'Box 15- Retirement fund           ' noline
    display $out
  end-if

  if #16_T > 0
    do Format-Number(#16_T, $out,'999,999,999,999.99')          !CODA contributions
    display 'Box 16- CODA contributions        ' noline
    display $out
  end-if

  if #18_T > 0
    do Format-Number(#18_T, $out,'999,999,999,999.99')          !Soc sec wages
    display 'Box 18- Soc sec wages             ' noline
    display $out
  end-if

  if #19_T > 0
    do Format-Number(#19_T, $out,'999,999,999,999.99')          !Soc sec tax withheld
    display 'Box 19- Soc sec tax withheld      ' noline
    display $out
  end-if

  if #20_T > 0
    do Format-Number(#20_T, $out,'999,999,999,999.99')          !Medicare wages and tips
    display 'Box 20- Medicare wages and tips   ' noline
    display $out
  end-if

  if #21_T > 0
    do Format-Number(#21_T, $out,'999,999,999,999.99')          !Medicare tax withheld
    display 'Box 21- Medicare tax withheld     ' noline
    display $out
  end-if

  if #22_T > 0
    do Format-Number(#22_T, $out,'999,999,999,999.99')          !Soc sec tips
    display 'Box 22- Soc sec tips              ' noline
    display $out
  end-if

  if #23_T > 0
    do Format-Number(#23_T, $out,'999,999,999,999.99')          !Uncollected soc sec
    display 'Box 23- Uncoll soc sec tax on tips' noline         ! tax on tips
    display $out
  end-if

  if #24_T > 0
    do Format-Number(#24_T, $out,'999,999,999,999.99')          !Uncollected Medicare
    display 'Box 24- Uncoll Medicare tax on tip' noline         ! tax on tips
    display $out
  end-if

  do Format-Number(#T_Count, $out,'999,999,999')
  display 'Total forms                              ' noline
  display $out

end-procedure

begin-procedure Next-Form
  evaluate $Layout_Style
    when = '4CORNER'
      do Next-Form-FourCorner
      break
    when = '4VERTICAL'
      do Next-Form-FourVertical
      break
    when = '2VERTICAL'
      do Next-Form-TwoVertical
      break
  end-evaluate
end-procedure

begin-procedure Next-Form-FourCorner
  if #Form# <> 4
    add  1 to #Form#
  else
    move 1 to #Form#
  end-if

  evaluate #Form#
    when = 1
      new-page
      do Print-Value(' ',#Top_Margin,1,'Top Margin')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 2
      next-column
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 3
      next-listing
      do Print-Value(' ',#Center_Split,1,'Center Split')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 4
      next-column
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
  end-evaluate
end-procedure

begin-procedure Next-Form-FourVertical
  if #Form# <> 4
    add 1 to #Form#
  else
    move 1 to #form#
  end-if

  evaluate #Form#                 !use to position for next forms
    when = 1
      new-page
      do Print-Value(' ',#Top_Margin,1,'Top Margin')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 2
      next-listing
      do Print-Value(' ',#Top_Split,1,'Top Split')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 3
      next-listing
      do Print-Value(' ',#Center_Split,1,'Center Split')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 4
      next-listing
      do Print-Value(' ',#Bottom_Split,1,'Bottom Split')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
  end-evaluate
end-procedure

begin-procedure Next-Form-TwoVertical
  if #Form# <> 2
    add 1 to #Form#
  else
    move 1 to #form#
  end-if

  evaluate #Form#                 !use to position for next forms
    when = 1
      new-page
      next-column
      do Print-Value(' ',#Top_Margin,1,'Top Margin')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
      break
    when = 2
      next-listing
      do Print-Value(' ',#Center_Split,1,'Center Split')
      next-listing
      do Print-Value(' ',#Last_Print_Line,1,'Last Print Line')
  end-evaluate
end-procedure

begin-procedure Load-W2-PRT
begin-SELECT
F.LAYOUT_STYLE
F.TOP_MARGIN
F.TOP_SPLIT
F.CENTER_SPLIT
F.BOTTOM_SPLIT
F.LAST_PRINT_LINE
F.LOCALS_PER_FORM

  let $Layout_Style = RTRIM(&F.Layout_Style,' ')

  move &F.Top_Margin       to #Top_Margin
  move &F.Top_Split        to #Top_Split
  move &F.Center_Split     to #Center_Split
  move &F.Bottom_Split     to #Bottom_Split
  move &F.Last_Print_Line  to #Last_Print_Line
  move &F.Locals_Per_Form  to #Locals_Per_Form

! encode '<27>E<27>(0N<27>&l6D<27>&l0E<27>&l66F' into $SetupString
! print $SetupString (1,1)
!            |    |       |       |       |
!            |    |       |       |        --> 66 text lines
!            |    |       |        --> top margin = 0 lines
!            |    |        --> 6 lines per inch
!            |     --> ISO 8859-1 symbol set
!             --> Reset

FROM  PS_TAXFORM_FORM F
WHERE F.FORM_ID = &TX.Form_ID
AND F.TAXFORM_ID = 'P'
  AND F.EFFDT   =
      (SELECT MAX(EFFDT)
       FROM   PS_TAXFORM_TBL
       WHERE  TAXFORM_ID = F.TAXFORM_ID
         AND  EFFDT  <= $AsOfDate)
end-SELECT

begin-SELECT
P.BOX
P.PRINT_LINE
P.PRINT_COL
P.PRINT_FORMAT
P.PRINT_TEXT

  let $P.Box = RTRIM(&P.Box,' ')
  evaluate $P.Box
    when = '01A'                                  !First name
      move &P.Print_Line   to #L_01A
      move &P.Print_Col    to #C_01A
      let $F1A = RTRIM(&P.Print_Format,' ')
      break
    when = '01B'                                  !Surname
      move &P.Print_Line   to #L_01B
      move &P.Print_Col    to #C_01B
      let $F1B = RTRIM(&P.Print_Format,' ')
      break
    when = '01C'                                  !Employee address
      move &P.Print_Line   to #L_01C
      move &P.Print_Col    to #C_01C
      let $F1C = RTRIM(&P.Print_Format,' ')
      break
    when = '01D'                                  !Employee address
      move &P.Print_Line   to #L_01D
      move &P.Print_Col    to #C_01D
      let $F1D = RTRIM(&P.Print_Format,' ')
      break
    when = '01E'                                  !Employee address
      move &P.Print_Line   to #L_01E
      move &P.Print_Col    to #C_01E
      let $F1E = RTRIM(&P.Print_Format,' ')
      break
    when = '02A'                                  !Employer name
      move &P.Print_Line   to #L_02A
      move &P.Print_Col    to #C_02A
      let $F2A = RTRIM(&P.Print_Format,' ')
      break
    when = '02B'                                  !Employer
      move &P.Print_Line   to #L_02B             ! address 1
      move &P.Print_Col    to #C_02B
      let $F2B = RTRIM(&P.Print_Format,' ')
      break
    when = '02C'                                  !Employer
      move &P.Print_Line   to #L_02C             ! address 2
      move &P.Print_Col    to #C_02C
      let $F2C = RTRIM(&P.Print_Format,' ')
      break
    when = '02D'                                  !Employer
      move &P.Print_Line   to #L_02D             ! address 3
      move &P.Print_Col    to #C_02D
      let $F2D = RTRIM(&P.Print_Format,' ')
      break
    when = '02E'                                  !Employer
      move &P.Print_Line   to #L_02E              !phone nbr
      move &P.Print_Col    to #C_02E
      let $F2E = RTRIM(&P.Print_Format,' ')
      break
    when = '02F'                                  !Employer
      move &P.Print_Line   to #L_02F              !Closing Date
      move &P.Print_Col    to #C_02F
      let $F2F = RTRIM(&P.Print_Format,' ')
      break
    when = '03'                                  !SSN
      move &P.Print_Line   to #L_03
      move &P.Print_Col    to #C_03
      let $F03 = RTRIM(&P.Print_Format,' ')
      break
    when = '04A'                                  !Single
      move &P.Print_Line   to #L_04A
      move &P.Print_Col    to #C_04A
      let $F4A = RTRIM(&P.Print_Format,' ')
      break
    when = '04B'                                  !Married
      move &P.Print_Line   to #L_04B
      move &P.Print_Col    to #C_04B
      let $F4B = RTRIM(&P.Print_Format,' ')
      break
    when = '05'                                  !Spouse SSN
      move &P.Print_Line   to #L_05
      move &P.Print_Col    to #C_05
      let $F05 = RTRIM(&P.Print_Format,' ')
      break
    when = '06'                                  !EIN
      move &P.Print_Line   to #L_06
      move &P.Print_Col    to #C_06
      let $F06 = RTRIM(&P.Print_Format,' ')
      break
    when = '07'                                  !Pension
      move &P.Print_Line   to #L_07
      move &P.Print_Col    to #C_07
      let $F07 = RTRIM(&P.Print_Format,' ')
      break
    when = '08'                                  !PR wages
      move &P.Print_Line   to #L_08
      move &P.Print_Col    to #C_08
      let $F08 = RTRIM(&P.Print_Format,' ')
      break
    when = '09'                                  !Commissions
      move &P.Print_Line   to #L_09
      move &P.Print_Col    to #C_09
      let $F09 = RTRIM(&P.Print_Format,' ')
      break
    when = '10'                                  !Allowances
      move &P.Print_Line   to #L_10
      move &P.Print_Col    to #C_10
      let $F10 = RTRIM(&P.Print_Format,' ')
      break
    when = '11'                                  !Tips
      move &P.Print_Line   to #L_11
      move &P.Print_Col    to #C_11
      let $F11 = RTRIM(&P.Print_Format,' ')
      break
    when = '12'                                  !Total wages/comm/
      move &P.Print_Line   to #L_12              !allow/tips
      move &P.Print_Col    to #C_12
      let $F12 = RTRIM(&P.Print_Format,' ')
      break
    when = '13'                                  !Reimbursed exp
      move &P.Print_Line   to #L_13
      move &P.Print_Col    to #C_13
      let $F13 = RTRIM(&P.Print_Format,' ')
      break
    when = '14'                                  !PR taxes
      move &P.Print_Line   to #L_14
      move &P.Print_Col    to #C_14
      let $F14 = RTRIM(&P.Print_Format,' ')
      break
    when = '15'                                  !Retirement fund
      move &P.Print_Line   to #L_15
      move &P.Print_Col    to #C_15
      let $F15 = RTRIM(&P.Print_Format,' ')
      break
    when = '16'                                  !CODA contributions
      move &P.Print_Line   to #L_16
      move &P.Print_Col    to #C_16
      let $F16 = RTRIM(&P.Print_Format,' ')
      break
    when = '17'                                  !Subtotals
      move &P.Print_Line   to #L_17
      move &P.Print_Col    to #C_17
      let $F17 = RTRIM(&P.Print_Format,' ')
      break
    when = '18'                                  !SS wages
      move &P.Print_Line   to #L_18
      move &P.Print_Col    to #C_18
      let $F18 = RTRIM(&P.Print_Format,' ')
      break
    when = '19'                                  !SS taxes
      move &P.Print_Line   to #L_19
      move &P.Print_Col    to #C_19
      let $F19 = RTRIM(&P.Print_Format,' ')
      break
    when = '20'                                 !Medicare wages
      move &P.Print_Line   to #L_20
      move &P.Print_Col    to #C_20
      let $F20 = RTRIM(&P.Print_Format,' ')
      break
    when = '21'                                 !Medicare taxes
      move &P.Print_Line   to #L_21
      move &P.Print_Col    to #C_21
      let $F21 = RTRIM(&P.Print_Format,' ')
      break
    when = '22'                                 !SS tips
      move &P.Print_Line   to #L_22
      move &P.Print_Col    to #C_22
      let $F22 = RTRIM(&P.Print_Format,' ')
      break
    when = '23'                                 !Uncollected
      move &P.Print_Line   to #L_23             ! SS tax on tips
      move &P.Print_Col    to #C_23
      let $F23 = RTRIM(&P.Print_Format,' ')
      break
    when = '24'                                 !Uncollected
      move &P.Print_Line   to #L_24             ! Med tax on tips
      move &P.Print_Col    to #C_24
      let $F24 = RTRIM(&P.Print_Format,' ')
      break
    when = 'Y'
      move &P.Print_Line   to #L_Y
      move &P.Print_Col    to #C_Y
      break
  end-evaluate

FROM  PS_TAXFORM_PRT P
WHERE P.FORM_ID = &TX.Form_ID
AND P.TAXFORM_ID = 'P'
  AND P.EFFDT   =
      (SELECT MAX(EFFDT)
       FROM   PS_TAXFORM_TBL
       WHERE  TAXFORM_ID = P.TAXFORM_ID
         AND  EFFDT  <= $AsOfDate)
ORDER BY P.BOX
end-SELECT
end-procedure


begin-procedure Prompts

  while $LinesPerInch = ''
    display ''
    display 'Print 6 or 8 lines per inch?'
    input $LinesPerInch 'Enter 6 or 8'
    if INSTR('68',$LinesPerInch,1) = 0
      display 'Enter 6 or 8'
      move '' to $LinesPerInch
    end-if
  end-while

  do Prompt-for-Sort

  while $SelectEEs = ''
    display ''
    display 'Regular processing or Select employees?'
    input $SelectEEs 'Enter R or S'
    uppercase $SelectEEs
    if INSTR('RS',$SelectEEs,1) = 0
      display 'Enter R or S'
      move '' to $SelectEEs
    end-if
  end-while

  if $SelectEEs = 'S'
    display 'Enter EmplID or hit ENTER to stop selecting'
    move 'AND E.EmplID in (''' to $E.SelectedEEs
    move 'AND S.EmplID in (''' to $S.SelectedEEs
    move 'AND J.EmplID in (''' to $J.SelectedEEs
    move ' ' to $SelectedEmplID
    while $SelectedEmplID <> ''
      input $SelectedEmplID ' '
      uppercase $SelectedEmplID
      if $SelectedEmplID <> ''
        let $E.SelectedEEs = $E.SelectedEEs || $SelectedEmplID || ''','''
        let $S.SelectedEEs = $S.SelectedEEs || $SelectedEmplID || ''','''
        let $J.SelectedEEs = $J.SelectedEEs || $SelectedEmplID || ''','''
        move 'Y' to $EE_Selected
      end-if
    end-while

    if $EE_Selected <> 'Y'
      display ''
      display 'No employees selected. Program stopped.'
      display ''
      stop
    end-if

    let $E.SelectedEEs = SUBSTR($E.SelectedEEs,1,LENGTH($E.SelectedEEs) - 2)
    let $E.SelectedEEs = $E.SelectedEEs || ')'

    let $S.SelectedEEs = SUBSTR($S.SelectedEEs,1,LENGTH($S.SelectedEEs) - 2)
    let $S.SelectedEEs = $S.SelectedEEs || ')'

    let $J.SelectedEEs = SUBSTR($J.SelectedEEs,1,LENGTH($J.SelectedEEs) - 2)
    let $J.SelectedEEs = $J.SelectedEEs || ')'
  else
    move '' to $E.SelectedEEs
    move '' to $S.SelectedEEs
    move '' to $J.SelectedEEs
  end-if
end-procedure

begin-procedure Load-Test-Data


  let $FirstName =
         LPAD($x,TO_NUMBER(SUBSTR($F1A,3,INSTR($F1A,')',1)-2)),'X')

  let $LastName =
         LPAD($x,TO_NUMBER(SUBSTR($F1B,3,INSTR($F1B,')',1)-2)),'X')

  let $E.Address1 =
         LPAD($x,TO_NUMBER(SUBSTR($F1C,3,INSTR($F1C,')',1)-2)),'X')

  let $E.Address2 =
         LPAD($x,TO_NUMBER(SUBSTR($F1D,3,INSTR($F1D,')',1)-2)),'X')

  let $01E=
         LPAD($x,TO_NUMBER(SUBSTR($F1E,3,INSTR($F1E,')',1)-2)),'X')

  let $A.Descr =
         LPAD($x,TO_NUMBER(SUBSTR($F2A,3,INSTR($F2A,')',1)-2)),'X')

  let $A.Address1 =
         LPAD($x,TO_NUMBER(SUBSTR($F2B,3,INSTR($F2B,')',1)-2)),'X')

  let $A.Address2 =
         LPAD($x,TO_NUMBER(SUBSTR($F2C,3,INSTR($F2C,')',1)-2)),'X')

  let $C4 =
         LPAD($x,TO_NUMBER(SUBSTR($F2D,3,INSTR($F2D,')',1)-2)),'X')

  let $Telephone_Nbr =
         LPAD($x,TO_NUMBER(SUBSTR($F2E,3,INSTR($F2E,')',1)-2)),'X')

  let $A.ClosingDate =
         LPAD($x,TO_NUMBER(SUBSTR($F2F,3,INSTR($F2F,')',1)-2)),'X')

  let $E.SSN =
         LPAD($x,TO_NUMBER(SUBSTR($F03,3,INSTR($F03,')',1)-2)),'X')

  let $E.Spouse_SSN =
         LPAD($x,TO_NUMBER(SUBSTR($F05,3,INSTR($F05,')',1)-2)),'X')


  let $A.Federal_EIN =
         LPAD($x,TO_NUMBER(SUBSTR($F06,3,INSTR($F06,')',1)-2)),'X')

  let $E.Mar_Status = 'S'

  move $F05 to $05
  let $05 = TRANSLATE($05,'Bb','99')              !Spouse SSN
  move $05 to #05


  move $F07 to $07
  let $07 = TRANSLATE($07,'Bb','99')              !Pension
  move $07 to #07

  move $F08 to $08
  let $08 = TRANSLATE($08,'Bb','99')              !Wages
  move $08 to #08

  move $F09 to $09
  let $09 = TRANSLATE($09,'Bb','99')              !Commissions
  move $09 to #09

  move $F10 to $10
  let $10 = TRANSLATE($10,'Bb','99')              !Allowances
  move $10 to #10

  move $F11 to $11
  let $11 = TRANSLATE($11,'Bb','99')              !Tips
  move $11 to #11

  move $F12 to $12
  let $12 = TRANSLATE($12,'Bb','99')              !Totals 8 - 12
  move $12 to #12

  move $F13 to $13
  let $13 = TRANSLATE($13,'Bb','99')              !Reimbursed expenses
  move $13 to #13

  move $F14 to $14
  let $14 = TRANSLATE($14,'Bb','99')              !PR tax w/h
  move $14 to #14

  move $F15 to $15
  let $15 = TRANSLATE($15,'Bb','99')              !Retirement
  move $15 to #15

  move $F16 to $16
  let $16 = TRANSLATE($16,'Bb','99')              !PR tax w/h
  move $16 to #16

  move $F17 to $17
  let $17 = TRANSLATE($17,'Bb','99')              !Subtotals
  move $17 to #17

  move $F18 to $18
  let $18 = TRANSLATE($18,'Bb','99')              !SS wages
  move $18 to #18

  move $F19 to $19
  let $19 = TRANSLATE($19,'Bb','99')              !SS tax
  move $19 to #19

  move $F20 to $20
  let $20 = TRANSLATE($20,'Bb','99')              !Medicare wages
  move $20 to #20

  move $F21 to $21
  let $21 = TRANSLATE($21,'Bb','99')              !Medicare tax
  move $21 to #21

  move $F22 to $22
  let $22 = TRANSLATE($22,'Bb','99')              !SS tips
  move $22 to #22

  move $F23 to $23
  let $23 = TRANSLATE($23,'Bb','99')              !SS tax on tips
  move $23 to #23

  move $F24 to $24
  let $24 = TRANSLATE($24,'Bb','99')              !Medicare tax
  move $24 to #24                                 ! on tips


end-procedure

begin-procedure Print-Alignment-Forms
  move &TX.Align_Count to #Align_Count
  let #Align_Count = #Align_Count * #FormsPerPage
  move #EmployeesPerPage to #temp
  move #FormsPerPage to #EmployeesPerPage
  move 1 to #k
  while #k <= #Align_Count
    do Load-Test-Data
    do Print-W2
    add 1 to #k
  end-while
  move 0 to #Align_Count
  move #temp to #EmployeesPerPage
  move '' to $priorLocality
end-procedure

begin-procedure Print-Value($String,#Line,#Col,$Identifier)
  if #Line > 0
    print $String (#Line,#Col)
  else
    display ''
    display '***************************************'
    display 'Print Line not defined for ' noline
    display $Identifier
    display 'in Tax Form Print Parameters Table.'
    display 'Program Stopped.'
    display '***************************************'
    display ''
    stop
  end-if
end-procedure

begin-procedure Convert-Parameters

  move $RC_US_YE.Reg_Select_Proc   to $SelectEEs
  move $RC_US_YE.Lines_Per_Inch    to $LinesPerInch
  move $RC_US_YE.Sort_Code1        to $SortCode1
  move $RC_US_YE.Sort_Code3        to $SortCode3
  move $RC_US_YE.AsofDate          to $AsofDate


  if $SelectEEs = 'S'
    do Read-EEs
  end-if

  do Create-Order-By

end-procedure

begin-procedure Create-Order-By

  move 'ORDER BY E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2

  if $SortCode1 <> '1'
    !display ' '
    !display 'Selected As-Of Date for retrieving the sorted data.'
    !display $AsofDate

    evaluate $SortCode3
      when = '1'               !ID
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.W2_STATE, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
          when = '3'
            move 'ORDER BY J.PAYGROUP, S.EMPLID' to $Sort1
          when = '4'
            move 'ORDER BY J.DEPTID, S.EMPLID' to $Sort1
          when = '5'
            move 'ORDER BY E.POSTAL, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
          when = '6'
            move 'ORDER BY K.MAIL_DROP, S.EMPLID' to $Sort1
          when = '7'
            move 'ORDER BY E.W2_STATE, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
        end-evaluate

      when = '2'               !SSN
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.W2_STATE, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
          when = '3'
            move 'ORDER BY J.PAYGROUP, S1.NATIONAL_ID' to $Sort1
          when = '4'
            move 'ORDER BY J.DEPTID, S1.NATIONAL_ID' to $Sort1
          when = '5'
            move 'ORDER BY E.POSTAL, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
          when = '6'
            move 'ORDER BY K.MAIL_DROP, S1.NATIONAL_ID' to $Sort1
          when = '7'
            move 'ORDER BY E.W2_STATE, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
        end-evaluate

      when = '3'               !Name
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.W2_STATE,P.NAME_PSFORMAT, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
          when = '3'
            move 'ORDER BY J.PAYGROUP, S.NAME, S1.NATIONAL_ID' to $Sort1
          when = '4'
            move 'ORDER BY J.DEPTID, S.NAME, S1.NATIONAL_ID' to $Sort1
          when = '5'
            move 'ORDER BY E.POSTAL, P.NAME_PSFORMAT, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
          when = '6'
            move 'ORDER BY K.MAIL_DROP, S.NAME, S1.NATIONAL_ID' to $Sort1
          when = '7'
            move 'ORDER BY E.W2_STATE, P.NAME_PSFORMAT, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
        end-evaluate

      when = ''               ! None  - default Emplid
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.W2_STATE, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
          when = '3'
            move 'ORDER BY J.PAYGROUP, S.EMPLID' to $Sort1
          when = '4'
            move 'ORDER BY J.DEPTID, S.EMPLID' to $Sort1
          when = '5'
            move 'ORDER BY E.POSTAL, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
          when = '6'
            move 'ORDER BY K.MAIL_DROP, S.EMPLID' to $Sort1
          when = '7'
            move 'ORDER BY E.W2_STATE, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
        end-evaluate

    end-evaluate
  else
    evaluate $SortCode3
      when = '1'
        move 'ORDER BY E.EMPLID, E.SEQUENCE_NUMBER, E.COMPANY' to $Sort2
      when = '2'
        move 'ORDER BY E.SSN, E.SEQUENCE_NUMBER, E.COMPANY'    to $Sort2
      when = '3'
        move 'ORDER BY P.NAME_PSFORMAT, E.SSN, E.SEQUENCE_NUMBER, E.COMPANY' to $Sort2
      when = ''
        move 'ORDER BY E.EMPLID, E.SEQUENCE_NUMBER, E.COMPANY' to $Sort2
    end-evaluate
  end-if
end-procedure


begin-procedure Read-EEs

move 'AND E.EMPLID IN (''' to $E.SelectedEEs
move 'AND S.EMPLID IN (''' to $S.SelectedEEs
move 'AND J.EMPLID IN (''' to $J.SelectedEEs
move ' ' to $SelectedEmplID

begin-SELECT
C.SELECTED_EE

  move &C.Selected_EE     to $SelectedEmplID



  let $E.SelectedEEs = $E.SelectedEEs || $SelectedEmplID || ''','''
  let $S.SelectedEEs = $S.SelectedEEs || $SelectedEmplID || ''','''
  let $J.SelectedEEs = $J.SelectedEEs || $SelectedEmplID || ''','''
  move 'Y' to $EE_Selected

FROM  PS_RC_TAX918PR C
WHERE C.OPRID         = $Prcs_OprID
  AND C.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
end-SELECT


let $E.SelectedEEs = SUBSTR($E.SelectedEEs,1,LENGTH($E.SelectedEEs) - 2)
let $E.SelectedEEs = $E.SelectedEEs || ')'

let $S.SelectedEEs = SUBSTR($S.SelectedEEs,1,LENGTH($S.SelectedEEs) - 2)
let $S.SelectedEEs = $S.SelectedEEs || ')'

let $J.SelectedEEs = SUBSTR($J.SelectedEEs,1,LENGTH($J.SelectedEEs) - 2)
let $J.SelectedEEs = $J.SelectedEEs || ')'

end-procedure


#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'w2sort.sqc'    !Routines to sorting W-2s

#Include 'txrnctl2.sqc'  !US Year End Process Scheduler Run Controls
#Include 'stdapi.sqc'    !Update Process API
