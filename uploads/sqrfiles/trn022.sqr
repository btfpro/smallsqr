!*********************************************************************
!  TRN022:  Course Statistics                                        *
!*********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:44:19                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup

#define PERSON_NAME
#define COURSE_TBL
#define COMPANY_TBL
#define DEPT_TBL
#define LOCATION_TBL
#include 'rellang.sqc'
#define RELLANG_PROG

begin-REPORT
  
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Layout
  do Init-Report
!--ADDED FOR FIX 302027 STARTS
  do Find-Date-Format
!--ADDED FOR FIX 302027 ENDS
  do Process-Main
  do Stdapi-Term

end-REPORT

!***********************************************************************
! Init Report
!***********************************************************************

begin-procedure Init-Report
 
  move 'TRN022' to $ReportID
  
!--------COMMENTED FOR FIX 590517 STARTS
!  move 'STATISTICS OF EMPLOYEES ENROLLED' to $ReportTitle
!--------COMMENTED FOR FIX 590517 ENDS

  do Stdapi-Init
  let $language_cd = $CURR_LANGUAGE_CD

  if $prcs_process_instance = ''
      !No Prompt
  else
    do select-parameters                           !in HRRNCTL1.SQC
  end-if

  do Init_Printer
  do Init_Report_Translation('TRAINING', $language_cd)
  
!--------COMMENTED FOR FIX 590517 STARTS  
!  do Append_Report_Translation('TRAINING')
!--------COMMENTED FOR FIX 590517 ENDS

!--------ADDED FOR FIX 590517 STARTS
   do Append_Report_Translation('TRN022')
   do Get_Field_Information ('TRN022', 'REPORT_TITLE',   $ReportTitle,   #dummy_width)
!--------ADDED FOR FIX 590517 ENDS

  let $AsOfDate = $AsOfToday

end-procedure

!--ADDED FOR FIX 302027 STARTS
begin-procedure Find-Date-Format

let $REC_FOUND = 'N'
begin-SELECT
A.USER_OPTION_VALUE
  let $REC_FOUND = 'Y'
FROM PSUSERPRSNLOPTN A

WHERE A.OPRID = $prcs_oprid
  AND A.USEROPTN = 'DFRMT'
end-SELECT

IF $REC_FOUND = 'N'
  let $DT_FMT = 'M'
ELSE
  LET $DT_FMT = &A.USER_OPTION_VALUE
  LET $DT_FMT = RTRIM($DT_FMT,' ')
END-If
 
end-procedure !Find-Date-Format
!--ADDED FOR FIX 302027 ENDS


!***********************************************************************
! Get Values
!***********************************************************************

begin-procedure Get-Values
    
!   do GET-TRN022-PARM  ! No params

end-procedure Get-Values

!***********************************************************************
! Layout
!***********************************************************************

begin-procedure Init-Layout
     
#define col0  1
#define col1a 13
#define col1  64
#define col2  68
#define col3  76
#define col4  88
#define col5  100

end-procedure

!***********************************************************************
! Heading
!***********************************************************************

begin-heading  7
    
!--COMMENTED FOR FIX 302027 STARTS
!#include 'stdhdgtr.sqc'
!--COMMENTED FOR FIX 302027 ENDS
!--ADDED FOR FIX 302027 STARTS
  do Append_Report_Translation ('STDHDGTR')
  if $Program_Read = 'Y'
    do Get_Field_Information ('STDHDGTR', 'STDHDG_CO_NM',   $stdhdg_co_nm,   #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_REP_ID',  $stdhdg_rep_id,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_PAGE_NO', $stdhdg_page_no, #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_RUN_DT',  $stdhdg_run_dt,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_RUN_TM',  $stdhdg_run_tm,  #dummy_width)
    do Get_Field_Information ('STDHDGTR', 'STDHDG_END_REP', $stdhdg_end_rep, #dummy_width)
  end-if

  print '            '    (1,1)
  print $stdhdg_co_nm     ()          center
  print $stdhdg_rep_id    (+1,1)
  print $ReportID         (0,+2)
!***********************************************************************
! T-MBOWDEN-5: not to uppercase due to languages other than English    *
!***********************************************************************
! uppercase $ReportTitle                                               *
  print $ReportTitle      ()          center
  let #RptCol = {ColR} - 2
  print $stdhdg_page_no   (0,#RptCol)
  print #page-count       (0,+2)      edit 88888888
  print $stdhdg_run_dt    (+1,#RptCol)
  let $RepDate = StrToDate($ReportDate,{PTRPTDATE})
  
    evaluate $DT_FMT
     when = 'M'
          do Format-DateTime($RepDate,$Rep_dt,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime($RepDate,$Rep_dt,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime($RepDate,$Rep_dt,{DEFYMD},'','')
          break
     end-evaluate
  print $Rep_dt           (0,+1) 
  print $stdhdg_run_tm    (+1,#RptCol)
  print $ReportTime       (0,+1)
!--ADDED FOR FIX 302027 ENDS

print $LBL_COMPANY          (0,{col0}
print $Company          (0,+2)
print $CompanyDescr     (0,+1)
print $LBL_LOCATION         (+1,{Col0})
print $Location         (0,+2)
print $LocationDescr    (0,+1)

print $LBL_EMPLID           (+2,{col0})
print $LBL_NAME             (0,{col1a})
print $LBL_COURSE       (0,{col2})
print $LBL_SESS_NUM     (0,{col3})
print $LBL_BEGIN_DT     (0,{col4})
print $LBL_END_DT       (0,{col5})

end-heading

!****************************
begin-procedure Process-Main
!****************************
    
   do Get-Translat-Info   ! Global
   do Define-PrimJob-Clause('C',$AsOfToday, $PRIM_JOB_CLAUSE)

   let $First-Select = 'Y'
   let $First-Time   = 'Y'

begin-SELECT

A.EMPLID
A.COURSE
A.SESSION_NBR
A.COURSE_START_DT
A.COURSE_END_DT
B.DESCR
C.COMPANY               () on-break print=never level=1 after=Print-Company-Count
C.LOCATION              () on-break print=never level=2 after=Print-Location-Count
C.DEPTID                () on-break print=never level=3 after=Print-Dept-Count
C.SETID_DEPT
C.SETID_LOCATION

   if $First-Time = 'Y'
       let $First-Time = 'N'
       let $Company    = &C.COMPANY 
       do Select-Company-Desc
       let $Location   = &C.LOCATION
       do Select-Location-Desc
       let $DeptID     = &C.DEPTID
       do Select-Dept-Desc
       let $Emplid     = &A.EMPLID
       do Select-Person-Name
!***************************************************Begin Name Format Change**********************
        !let $D.NAME = &D.NAME
        let $D.NAME = &D.NAME_DISPLAY
!***************************************************End   Name Format Change**********************
   end-if

   let $COURSE_TBL-DESCR = &B.DESCR
   do Get_Related_COURSE_TBL(&A.COURSE)
   let $B.DESCR = $COURSE_TBL-DESCR

   if &A.EMPLID <> $Emplid
       do Select-Person-Name
       let $Emplid = &A.Emplid
!***************************************************Begin Name Format Change**********************
        !let $D.NAME = &D.NAME
        let $D.NAME = &D.NAME_DISPLAY
!***************************************************End   Name Format Change**********************
   end-if

  print &A.EMPLID            (+1,{col0})
  print $D.NAME              (0,{col1a})
  print &A.COURSE            (0,{col2})
  print &A.SESSION_NBR       (0,{col3})
!--COMMENTED FOR FIX 302027 STARTS
!  do Format-DateTime(&A.COURSE_START_DT,$Start_Dt,{DEFDATE},'','')
!  do Format-DateTime(&A.COURSE_END_DT,$End_Dt,{DEFDATE},'','')
!--COMMENTED FOR FIX 302027 ENDS
!--ADDED FOR FIX 302027 STARTS
  evaluate $DT_FMT
     when = 'M'
          do Format-DateTime(&A.COURSE_START_DT,$Start_Dt,{DEFMDY},'','')
          do Format-DateTime(&A.COURSE_END_DT,$End_Dt,{DEFMDY},'','')
          break
     when = 'D'
          do Format-DateTime(&A.COURSE_START_DT,$Start_Dt,{DEFDMY},'','')
          do Format-DateTime(&A.COURSE_END_DT,$End_Dt,{DEFDMY},'','')
          break
     when-Other
          do Format-DateTime(&A.COURSE_START_DT,$Start_Dt,{DEFYMD},'','')
          do Format-DateTime(&A.COURSE_END_DT,$End_Dt,{DEFYMD},'','')
     end-evaluate
!--ADDED FOR FIX 302027 ENDS
  print $Start_Dt            (0,{col4})
  print $End_Dt              (0,{col5})
  print $B.DESCR             (+1,{col2})

  let #DeptCount = #DeptCount + 1
  let #LocationCount = #LocationCount + 1
  let #CompanyCount = #CompanyCount + 1

   if &C.COMPANY <> $Company
      do Select-Company-Desc
      let $Company = &C.COMPANY
   end-if

   if &C.LOCATION <> $Location
       do Select-Location-Desc
       let $Location = &C.LOCATION
   end-if

   if &C.DEPTID <> $DeptID
       do Select-Dept-Desc
       let $DeptID = &C.DEPTID
   end-if

FROM PS_TRAINING A
    ,PS_COURSE_TBL B
    ,PS_JOB C

WHERE C.EMPLID     = A.EMPLID
AND   B.COURSE     = A.COURSE
AND   C.EMPL_RCD   = [$PRIM_JOB_CLAUSE]
AND   C.EFFDT      = (SELECT MAX(EFFDT)
                     FROM PS_JOB C1
                     WHERE C1.EMPLID = C.EMPLID
                     AND   C1.EMPL_RCD = C.EMPL_RCD
                     AND   C1.EFFDT <= A.COURSE_END_DT)
AND   C.EFFSEQ     = (SELECT MAX(EFFSEQ) 
                      FROM PS_JOB C2
                      WHERE C2.EMPLID = C.EMPLID
                      AND   C2.EMPL_RCD = C.EMPL_RCD
                      AND   C2.EFFDT = C.EFFDT)
AND   C.SETID_DEPT <> ' '
AND   C.SETID_LOCATION <> ' '

ORDER BY C.COMPANY, C.LOCATION, C.DEPTID, A.EMPLID, A.COURSE_START_DT

end-SELECT

if $First-Select = 'N'
   do Print-Dept-Count
   do Print-Location-Count
   do Print-Company-Count
end-if

end-procedure Process-Main

!***********************************
begin-procedure Select-Person-Name
!***********************************
      
begin-SELECT
!**********************************Begin Name Format Change************************
 !D.NAME
D.NAME_DISPLAY
   !let $D.NAME = &D.NAME
   let $D.NAME = &D.NAME_DISPLAY
!**********************************End   Name Format Change************************
FROM PS_PERSON_NAME D

WHERE D.EMPLID     = &A.EMPLID

end-SELECT

end-procedure Select-Person-Name


!*********************************
begin-procedure Select-Dept-Desc
!*********************************
   
begin-SELECT

E.SETID
E.EFFDT
E.DESCR

   let $DEPT_TBL-DESCR = &E.DESCR
!-----Commented for the fix 302027 Starts
!   do Get_Related_DEPT_TBL(&E.SETID,&C.DEPTID,&E.EFFDT)
!-----Commented for the fix 302027 Ends
!-----Added for the fix 302027 Starts
   do Get_Related_DEPT_TBL(&C.DEPTID, &E.EFFDT, &E.SETID)
!-----Added for the fix 302027 Ends
   let $E.DESCR = $DEPT_TBL-DESCR
   let $DeptDescr = $E.DESCR

FROM PS_DEPT_TBL E

WHERE E.DEPTID     = &C.DEPTID
AND   E.SETID      = &C.SETID_DEPT
AND   E.EFFDT      = (SELECT MAX(EFFDT)
                      FROM PS_DEPT_TBL E1
                      WHERE E1.DEPTID = E.DEPTID
                      AND   E1.SETID  = E.SETID
                      AND   E1.EFFDT <= &A.COURSE_END_DT)
AND   E.EFF_STATUS = 'A'


end-SELECT

end-procedure Select-Dept-Desc

!*************************************
begin-procedure Select-Location-Desc
!*************************************
    
begin-SELECT

F.DESCR
F.SETID
F.EFFDT

   let $LOCATION_TBL-DESCR = &F.DESCR
!----Commented for the Fix 302027 Starts
!   do Get_Related_LOCATION_TBL(&F.SETID,&C.LOCATION,&F.EFFDT)
!----Commented for the Fix 302027 Ends
!----Added for the fix 302027 Starts
   do Get_Related_LOCATION_TBL(&F.EFFDT,&C.LOCATION,&F.SETID)
!----Added for the fix 302027 Ends
   let $F.DESCR = $LOCATION_TBL-DESCR
   let $LocationDescr = $F.DESCR

FROM PS_LOCATION_TBL F

WHERE F.SETID      = &C.SETID_LOCATION
AND   F.LOCATION   = &C.LOCATION
AND   F.EFFDT      = (SELECT MAX(EFFDT)
                      FROM PS_LOCATION_TBL F1
                      WHERE F1.LOCATION = F.LOCATION
                      AND   F1.SETID    = F.SETID
                      AND   F1.EFFDT   <= &A.COURSE_END_DT)
AND   F.EFF_STATUS = 'A'

end-SELECT

end-procedure Select-Location-Desc


!************************************
begin-procedure Select-Company-Desc
!************************************

begin-SELECT

G.EFFDT
G.DESCR

   let $COMPANY_TBL-DESCR = &G.DESCR
   do Get_Related_COMPANY_TBL(&C.COMPANY,&G.EFFDT)
   let $G.DESCR = $COMPANY_TBL-DESCR
   let $CompanyDescr = $G.DESCR

FROM PS_COMPANY_TBL G

WHERE G.COMPANY    = &C.COMPANY
AND   G.EFFDT      = (SELECT MAX(EFFDT)
                      FROM PS_COMPANY_TBL G1
                      WHERE G1.COMPANY = G.COMPANY
                      AND   G1.EFFDT  <= &A.COURSE_END_DT)
AND   G.EFF_STATUS = 'A'

end-SELECT

end-procedure Select-Company-Desc


!********************************
begin-procedure Print-Dept-Count
!********************************

print '------------'      (+1,{col2})
print $LBL_DEPT_SUM       (0,{col0})
do Format-Number(#DeptCount,$out,'B99,999,999')
print $DeptID             (+1,{Col0})
print $DeptDescr          (0,{col1a})
print $out                (0,{col2})

let #DeptCount = 0

position (+2,0)

end-procedure Print-Dept-Count


!************************************
begin-procedure Print-Location-Count
!************************************

print '------------'      (+1,{Col2})
print $LBL_LOCATION_SUM   (0,{col0})
do Format-Number(#LocationCount,$out,'B99,999,999')
print $Location           (+1,{col0})
print $LocationDescr      (0,{col1a})
print $out                (0,{col2})

let #LocationCount = 0

if $Company = &C.COMPANY
   new-page
else
   position (+1,0)
end-if

end-procedure Print-Location-Count


!***********************************
begin-procedure Print-Company-Count
!***********************************

print '------------'            (+1,{Col2})
print $LBL_COMPANY_SUM          (0,{col0})
do Format-Number(#CompanyCount,$out,'B99,999,999')
print $Company                  (+1,{col0})
print $CompanyDescr             (0,{col1a})
print $out                      (0,{col2})

let #CompanyCount = 0

new-page

end-procedure Print-Company-Count


!*********************************
begin-procedure Get-Translat-Info
!*********************************

!--------ADDED FOR FIX 590517 STARTS
   do Append_Report_Translation('TRAINING')
!--------ADDED FOR FIX 590517 ENDS

   do Get_Field_Information('TRAINING', 'LBL_COURSE'       ,$LBL_COURSE       ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_SESS_NUM'     ,$LBL_SESS_NUM     ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_BEGIN_DT'     ,$LBL_BEGIN_DT     ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_END_DT'       ,$LBL_END_DT       ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_COMPANY'      ,$LBL_COMPANY          ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_LOCATION'     ,$LBL_LOCATION         ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_EMPLID'       ,$LBL_EMPLID           ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_NAME'         ,$LBL_NAME             ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_COMPANY_SUM'  ,$LBL_COMPANY_SUM  ,#DW)
   do Get_Field_Information('TRAINING', 'LBL_LOCATION_SUM' ,$LBL_LOCATION_SUM ,#DW)
   
!------COMMENTED FOR FIX 590517 STARTS   
!   do Get_Field_Information('TRAINING', 'LBL_COMPANY_SUM'  ,$LBL_COMPANY_SUM  ,#DW)
!------COMMENTED FOR FIX 590517 ENDS

!------ADDED FOR FIX 590517 STARTS
   do Get_Field_Information('TRAINING', 'LBL_DEPT_SUM'  ,$LBL_DEPT_SUM  ,#DW)
!------ADDED FOR FIX 590517 ENDS

end-procedure  Get-Translat-Info

!***********************************************************************

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'stdapi.sqc'    !Routines to update run status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getprimj.sqc'  !Routines for selecting EE's primary job
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'
#Include 'datemath.sqc'

