!***********************************************************************
! FSA006: FSA Check Reversal.
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:09:03:30                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                      *
!***********************************************************************

#Include 'setenv.sqc'

Begin-Setup
  #Include 'setupdb.sqc'
End-Setup

!**************************************
Begin-Program
!**************************************

  do Init-Report

  display 'Report Began at: ' NoLine
  do display-time

  do Check-Reversal

  display 'Report Ended at: ' NoLine
  do display-time

  do StdAPI-Term

End-Program

!**************************************
Begin-Procedure Init-Report
!**************************************

  let $ReportID    = 'FSA006'
  let $ReportTitle = 'FSA Check Reversal'

  display $ReportID    NoLine
  display ': '         NoLine
  display $ReportTitle
  display ''

  do Init-DateTime
  do Get-Current-DateTime
  let $ReportYear4 = 1

  do StdAPI-Init
  if ($PRCS_Process_Instance = '')
    do Ask-Values
  else
    do Get-Values
  end-if

End-Procedure

!*************************************************
Begin-Procedure Ask-Values
!*************************************************

  do Ask-FormID
  do Ask-Check-Number
  do Ask-Check-Date

End-Procedure

!*************************************************
Begin-Procedure Get-Values
!*************************************************

  do Select-Parameters
  do Get-FormID
  do Get-Check-Number
  do Get-Check-Date

End-Procedure

!*************************************************
Begin-Procedure Ask-FormID
!*************************************************

  let $ValidFormID = 'N'
  while ($ValidFormID = 'N')
    if ($FormID = '')
      input $FormID MaxLen=6 'Enter Form Identifier'
    else
      input $FormID MaxLen=6 '[Invalid Entry] Please Re-enter Form Identifier'
    end-if
    let $FormID = UPPER(RTRIM($FormID, ' '))
    do Edit-FormID
  end-while

End-Procedure

!*************************************************
Begin-Procedure Edit-FormID
!*************************************************

Begin-SELECT
Z.FORM_ID
  let $ValidFormID = 'Y'
FROM  PS_PAY_FORM_TBL Z
WHERE FORM_ID = $FormID
End-SELECT
End-Procedure

!***********************************
Begin-Procedure Ask-Check-Number
!***********************************

  while (#CheckNbr <= 0)
    input $CheckNbr MaxLen=15 'Enter Check Number to reverse' Type=NUMBER
    let #CheckNbr = TO_NUMBER($CheckNbr)
  end-while

End-Procedure

!**********************************
Begin-Procedure Ask-Check-Date
!**********************************

  let $DataOK = 'N'
  while ($DataOK = 'N')
    if ($CheckDate = '')
      input $CheckDate 'Enter Date of Check ({Prompt-Date})'
    else
      input $CheckDate '[Invalid Date] Please Re-enter Date of Check ({Prompt-Date})'
    end-if
    move {PDelimiter} to $DDelimiter
    do Format-DateTime($CheckDate, $CheckDate, {Prompt-Mask}, '', 'Native')
    do Validate-Native-Date($CheckDate,$DataOK)
  end-while

End-Procedure

!**************************************
Begin-Procedure Check-Reversal
!**************************************

  !-------------- Display Entered Keys --------------
  display 'Form ID:    ' NoLine
  display $FormID
  display 'Check Nbr:  ' NoLine
  display #CheckNbr      999999999999999
  display 'Check Date: ' NoLine
  do Format-DateTime($CheckDate, $Out, {DEFDATE}, '', '')
  display $Out
  display ''
  !--------------------------------------------------

  let $CheckFound = 'N'

Begin-Select
PY.FSA_CHECK_AMT
PY.FSA_PAYMENT_STATUS
  let $CheckFound = 'Y'
PY.CALENDAR_YEAR
PY.PLAN_TYPE
PY.EMPLID
PY.EMPL_RCD
PY.BENEFIT_PLAN
PD.NAME

  do Get-Balance-Year

  !--------------- Display CheckInfo ---------------
  display 'Issued to:  '              NoLine
  display &PY.EmplID                  NoLine
  display ' - '                       NoLine
  display &PD.NAME

  move 'PLAN_TYPE'   to $FieldName
  move &PY.Plan_Type to $FieldValue
  do Read-Translate-Table
  display 'Check Amt:  '              NoLine
  display &PY.FSA_Check_Amt  $9999.99 NoLine
  display ' for: '                    NoLine
  display $XlatLongName
  display ''
  !--------------------------------------------------

  do Get-FSA-Benefit-YTD
  if ($FSABenFound = 'N') Or (&BN.FSA_Acct_Status = 'C') Or
     (&PY.FSA_Payment_Status = 'V') Or (&PY.FSA_Payment_Status = 'X')
    Exit-Select
  end-if
  do Reverse-Claims
  do Update-FSA-Account
  do Update-Check

FROM  PS_FSA_PAYMENT PY,
      PS_PERSON_NAME PD
WHERE PY.FORM_ID   = $FormID
  AND PY.PAYCHECK_NBR    = #CheckNbr
  AND PY.CHECK_DT  = $CheckDate
  AND PD.EMPLID    = PY.EMPLID
End-Select

  if ($CheckFound = 'N')
    display '>>>>> No check found matching these keys <<<<<'
  end-if
  if ($FSABenFound = 'N')
    display '>>>>> Active FSA Benefit for Balance Year ' NoLine
    display &PY.Calendar_Year                             9999 NoLine
    display ' was not found <<<<<'
  end-if
  if (&BN.FSA_Acct_Status = 'C')
    display '>>>>> FSA Account for Balance Year ' NoLine
    display &PY.Calendar_Year                      9999 NoLine
    display ' is Closed <<<<<'
  end-if
  if (&PY.FSA_Payment_Status = 'V') Or (&PY.FSA_Payment_Status = 'X')
    display '>>>>> Payment status ('               NoLine
    display &PY.FSA_Payment_Status                 NoLine
    display ') does not require reversal <<<<<'
  end-if
  display ''

End-Procedure

!************************************
Begin-Procedure Get-Balance-Year
!************************************

Begin-SELECT
MIN(B.BEGIN_DT)       &BeginDt
MAX(B.END_DT)         &EndDt

   let $YearBegin = &BeginDt
   let $YearEnd = &EndDt

FROM  PS_FSA_BENEF_TBL A,
      PS_BALANCE_ID_DEF B
WHERE A.PLAN_TYPE      = &PY.Plan_Type
  AND A.BENEFIT_PLAN   = &PY.Benefit_Plan
  AND A.EFFDT =
      (SELECT MAX(C.EFFDT)
       FROM   PS_FSA_BENEF_TBL C
       WHERE  C.PLAN_TYPE        = A.PLAN_TYPE
         AND  C.BENEFIT_PLAN     = A.BENEFIT_PLAN
         AND  C.EFFDT           <= $CheckDate)
  AND B.SETID        = A.SETID
  AND B.BALANCE_ID   = A.BALANCE_ID
  AND B.BALANCE_YEAR = &PY.Calendar_Year
End-SELECT
End-Procedure

!************************************
Begin-Procedure Get-FSA-Benefit-YTD
!************************************

  let $FSABenFound = 'N'

Begin-SELECT
BN.EFFDT,
BN.FSA_ACCT_STATUS,
SM.FSA_PD_AMT_YTD

  let $FSABenFound = 'Y'

FROM  PS_FSA_BENEFIT BN,
      PS_FSA_SUMMARY SM
WHERE BN.EMPLID         = &PY.Emplid
AND   BN.EMPL_RCD      = &PY.EMPL_RCD
AND   BN.COBRA_EVENT_ID = 0
AND   BN.PLAN_TYPE      = &PY.Plan_Type
AND   BN.EFFDT =
      (SELECT MAX(BN1.EFFDT)
       FROM   PS_FSA_BENEFIT BN1
       WHERE  BN1.EMPLID         = BN.EMPLID
         AND  BN1.EMPL_RCD      = BN.EMPL_RCD
         AND  BN1.COBRA_EVENT_ID = BN.COBRA_EVENT_ID
         AND  BN1.PLAN_TYPE      = BN.PLAN_TYPE
         AND  BN1.COVERAGE_ELECT = 'E'
         AND  BN1.COVERAGE_BEGIN_DT BETWEEN $YearBegin AND $YearEnd)
AND   SM.EMPLID       = BN.EMPLID
AND   SM.PLAN_TYPE    = BN.PLAN_TYPE
AND   SM.BALANCE_YEAR = &PY.Calendar_Year
End-SELECT
End-Procedure

!**************************************
Begin-Procedure Reverse-Claims
!**************************************

Begin-Select
PC.CLAIMID
PC.PLAN_TYPE
PC.FSA_CLAIM_AMT_PD
CL.SVC_FROM_DT
CL.SVC_TO_DT

  !--------------- Display Claim Info ---------------
  display 'Claim ID: '          NoLine
  display &PC.ClaimId           NoLine
  display ' - Reversed '        NoLine
  display &PC.FSA_Claim_Amt_Pd  $9999.99 NoLine
  display ' payment for Services from ' NoLine
  do Format-DateTime(&CL.SVC_FROM_DT, $Out, {DEFDATE}, '', '')
  display $Out                  NoLine
  display ' to '                NoLine
  do Format-DateTime(&CL.SVC_To_DT, $Out, {DEFDATE}, '', '')
  display $Out
  !--------------------------------------------------

  do Update-Claim

FROM  PS_FSA_PAYMT_CLAIM PC,
      PS_FSA_CLAIM       CL
WHERE PC.FORM_ID   = $FormID
  AND PC.PAYCHECK_NBR    = #CheckNbr
  AND PC.CHECK_DT  = $CheckDate
  AND CL.EMPLID    = &PY.EmplId
  AND CL.EMPL_RCD = &PY.EMPL_RCD
  AND CL.PLAN_TYPE = PC.PLAN_TYPE
  AND CL.CLAIMID   = PC.CLAIMID
End-Select
End-Procedure

!**************************************
Begin-Procedure Update-Claim
!**************************************

let $sql-statement = 'FSA006,Update-Claim,FSA_CLAIM,Upd'
Begin-SQL on-error=SQL-Error
UPDATE PS_FSA_CLAIM
SET    FSA_CLAIM_PD_TO_DT = FSA_CLAIM_PD_TO_DT - &PC.FSA_Claim_Amt_Pd,
       FSA_CLAIM_STATUS = 'P'
WHERE EMPLID    = &PY.EmplId
  AND EMPL_RCD = &PY.EMPL_RCD
  AND PLAN_TYPE = &PC.Plan_Type
  AND CLAIMID   = &PC.ClaimID
End-SQL
End-Procedure

!**************************************
Begin-Procedure Update-FSA-Account
!**************************************

let $sql-statement = 'FSA006,Update-FSA-Acct,FSA_SUMMARY,Upd'
Begin-SQL on-error=SQL-Error
UPDATE PS_FSA_SUMMARY
SET    FSA_PD_AMT_YTD = FSA_PD_AMT_YTD - &PY.FSA_Check_Amt
WHERE EMPLID       = &PY.Emplid
AND   PLAN_TYPE    = &PY.Plan_Type
AND   BALANCE_YEAR = &PY.Calendar_Year
End-SQL
End-Procedure

!**************************************
Begin-Procedure Update-Check
!**************************************

  if (&PY.FSA_Payment_Status = 'R')
    let $NewStatus = 'V'   !Void
  else
    let $NewStatus = 'X'   !Reversed
  end-if

let $sql-statement = 'FSA006,Update-Check,FSA_PAYMENT,Upd'
Begin-SQL on-error=SQL-Error
UPDATE PS_FSA_PAYMENT
SET    FSA_PAYMENT_STATUS = $NewStatus
WHERE FORM_ID   = $FormID
  AND PAYCHECK_NBR    = #CheckNbr
  AND CHECK_DT  = $CheckDate
End-SQL
End-Procedure

!**************************************
Begin-Procedure Display-Time
!**************************************

  do Get-Current-DateTime
  display $AsOfToday NoLine
  display ', '       NoLine
  display $AsOfNow
  display ''

End-Procedure

!**************************************
#Include 'readxlat.sqc'  !Rotate-Name procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'validdt.sqc'   !Routines for validating dates
#Include 'number.sqc'    !Routines to format numbers

#Include 'stdapi.sqc'    !Update Process API
#Include 'bnrunctl.sqc'  !Get application run control parameters
#Include 'bngetval.sqc'  !Get BEN values mask routines

!****************************** End Of Report *******************************

