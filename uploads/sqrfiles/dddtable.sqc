! ***************************************************************!
!  This software and related documentation are provided under a!
!  license agreement containing restrictions on use and!
!  disclosure and are protected by intellectual property!
!  laws. Except as expressly permitted in your license agreement!
!  or allowed by law, you may not use, copy, reproduce,!
!  translate, broadcast, modify, license, transmit, distribute,!
!  exhibit, perform, publish or display any part, in any form or!
!  by any means. Reverse engineering, disassembly, or!
!  decompilation of this software, unless required by law for!
!  interoperability, is prohibited.!
!  The information contained herein is subject to change without!
!  notice and is not warranted to be error-free. If you find any!
!  errors, please report them to us in writing.!
!  !
!  Copyright (C) 1988, 2011, Oracle and/or its affiliates.!
!  All Rights Reserved.!
! ***************************************************************!
 
 
!                                                                    !
!***********************************************************************
! DDDTABLE: Audit Record/SQL Table                                     *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
!***********************************************************************

#define C_One          3
#define C_Two          24
#define C_Three        48

#IFDEF ORACLE

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-SQL-Table-not-blank-or-recname
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-1) SQL Table Names defined in the Application '
      || 'Designer that are not blank and not the same as the Record Name:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Table0_RecName
A.SQLTABLENAME     &Table0_SQLName
A.OBJECTOWNERID    &Table0_ObjectOwnerid

   do Table0-Page-Control
   print &Table0_RecName      (+1,{C_One})
   print &Table0_SQLName      (0,{C_Two})
   print &Table0_ObjectOwnerid (0,{C_Three})

FROM PSRECDEFN A
WHERE A.SQLTABLENAME <> ' '
AND A.SQLTABLENAME <> A.RECNAME
AND A.RECNAME NOT IN ('PRCSDEFN', 'PRCSJOBDEFN', 'PRCSRECUR', 'PRCSTYPEDEFN', 'SERVERDEFN', 'APPR_RULE_HDR', 'SERVERNOTIFY')
ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Table0-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'SQL Table Name'            (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '------------------'        (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Table-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-2) SQL Table defined in the Application '
      || 'Designer and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
TEMPTBLINSTANCES         &TempTblInstancesO
TEMPINSTANCEBATCH        &TempTblBatchO
FROM PSOPTIONS
end-SELECT

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &TableO_RecName
A.SQLTABLENAME     &TableO_SqlTableName
A.RECTYPE          &TableO_RecType
A.OBJECTOWNERID    &TableO_ObjectOwnerid

   if rtrim(&TableO_SqlTableName,' ') = ''
      let $TableO_TableName = 'PS_' || rtrim(&TableO_RecName,' ')
   else
      let $TableO_TableName = rtrim(&TableO_SqlTableName,' ')
   end-if

   do OraCheckTbl

   if &TableO_RecType = 7

      move 0 to #i2

      let $RecName = &TableO_RecName
      do GetBatchInstances

      if &Dedicated_Batch = 0
         let #sum = &TempTblBatchO
      else
         let #sum = &TempTblInstancesO + &Dedicated_Batch
      end-if

      if #sum > 99
        let #sum = 99
      end-if

     
      while (#i2 < #sum)
          if #batchonly = 1 and #i2 = &TempTblBatchO
           let #i2 = &TempTblInstancesO
          end-if
       add 1 to #i2
       let  $TableO_TableName =  'PS_' || rtrim(&TableO_RecName,' ') || to_char(#i2)
         do OraCheckTbl
          if #found2 = 0
            break
          end-if
     end-while
   end-if

   if #found2 = 0
      do Table1-Page-Control
      print &TableO_RecName      (+1,{C_One})
      print &TableO_ObjectOwnerid (0, {C_Two})
   end-if

FROM PSRECDEFN A
WHERE A.RECTYPE IN (0, 7)
ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure OraCheckTbl ! temptable in DD not in DB
!----------------------------------------------------------------------!
move 0 to #found2
begin-SELECT on-Error=Rpt-SQL-Error
B.TABLE_NAME
   move 1 to #found2
FROM USER_TABLES B
WHERE B.TABLE_NAME = $TableO_TableName
end-SELECT
end-procedure


begin-procedure Table1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
          print 'Ownerid'                                       ( 0,{C_Two})
      print '---------------'           (+1,{C_One})
          print '-------'                                       ( 0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Table-in-DB-and-not-in-DD
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-3) SQL Table defined in the Database '
      || 'and not found in the Application Designer:'

   do OraTabChk

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure OraTabChk
!----------------------------------------------------------------------!

begin-Select on-Error=Rpt-SQL-Error
A.TABLE_NAME          &Table_SQLTable_Ora

     move &Table_SQLTable_Ora to $PSTabNameOra
     LET $IsRecPrsntOra = 'N'
     LET $PSTabPrefixOra = SUBSTR($PSTabNameOra,1,3)

     if $PSTabPrefixOra = 'PS_'
     LET $PSColNameOra = SUBSTR($PSTabNameOra, 4,30)

     do FindOraTab
     if $IsRecPrsntOra = 'N'
         do FindOraTmpTab
           if $IsRecPrsntOra = 'N'
              LET $Tmp1Ora = substr($PSColNameOra, 1, length(rtrim($PSColNameOra, ' ')) - 1)
              LET $PSColNameOra = $Tmp1Ora
                 do FindOraTmpTab
              if $IsRecPrsntOra = 'N'
                LET $Tmp1Ora = substr($PSColNameOra, 1, length(rtrim($PSColNameOra, ' ')) - 1)
                LET $PSColNameOra = $Tmp1Ora
                do FindOraTmpTab
                if $IsRecPrsntOra = 'N'
                    do Table2-Page-Control
                        print &Table_SQLTable_Ora (+1,{C_One})
                end-if
              end-if
           end-if
     end-if
     else
     LET $PSColNameOra = $PSTabNameOra
     do FindOraTab
     if $ISRecPrsntOra = 'N'
    do Table2-Page-Control
           print &Table_SQLTable_Ora (+1,{C_One})
            end-if
     end-if

FROM USER_TABLES A WHERE A.TABLE_NAME LIKE 'PS\_%' ESCAPE '\' ORDER BY A.TABLE_NAME
end-SELECT

end-procedure

!----------------------------------------------------------------------!
begin-procedure FindOraTab
!----------------------------------------------------------------------!
begin-SELECT
'Y' &SelRecOra
    LET $IsRecPrsntOra = $SelRecOra
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColNameOra
AND C.RECTYPE = 0
end-select

end-procedure

!----------------------------------------------------------------------!
begin-procedure FindOraTmpTab
!----------------------------------------------------------------------!
begin-SELECT
'Y' &SelRecTmpOra
    LET $IsRecPrsntOra = $SelRecTmpOra
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColNameOra
AND C.RECTYPE = 7
end-select

end-procedure

begin-procedure Table2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'            (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure


#ENDIF


#IFDEF DB2UNIX

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-SQL-Table-not-blank-or-recname
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-1) SQL Table Names defined in the Application '
      || 'Designer that are not blank and not the same as the Record Name:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Table0_RecName
A.SQLTABLENAME     &Table0_SQLName
A.OBJECTOWNERID    &Table0_ObjectOwnerid

   do Table0-Page-Control
   print &Table0_RecName      (+1,{C_One})
   print &Table0_SQLName      (0,{C_Two})
   print &Table0_ObjectOwnerid (0,{C_Three})

FROM PSRECDEFN A
WHERE A.SQLTABLENAME <> ' '
AND A.SQLTABLENAME <> A.RECNAME
AND A.RECNAME NOT IN ('PRCSDEFN', 'PRCSJOBDEFN', 'PRCSRECUR', 'PRCSTYPEDEFN', 'SERVERDEFN', 'APPR_RULE_HDR', 'SERVERNOTIFY')
ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Table0-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'SQL Table Name'            (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '------------------'        (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Table-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-2) SQL Table defined in the Application '
      || 'Designer and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
TEMPTBLINSTANCES      &DB2UTempTblInstances
TEMPINSTANCEBATCH     &DB2UTempTblBatch
FROM PSOPTIONS
end-SELECT

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &TableDB2U_RecName
A.SQLTABLENAME     &TableDB2U_SqlTableName
A.RECTYPE          &TableDB2U_RecType
A.OBJECTOWNERID    &TableDB2U_ObjectOwnerid

   if rtrim(&TableDB2U_SqlTableName,' ') = ''
      let $TableDB2U_TableName = 'PS_' || rtrim(&TableDB2U_RecName,' ')
   else
      let $TableDB2U_TableName = rtrim(&TableDB2U_SqlTableName,' ')
   end-if

   do CheckDB2UTbl

   if &TableDB2U_RecType = 7

      move 0 to #iDU

      let $RecName = &TableDB2U_RecName
      do GetBatchInstances

      if &Dedicated_Batch = 0
         let #sum = &DB2UTempTblBatch
      else
         let #sum = &DB2UTempTblInstances + &Dedicated_Batch
      end-if

      if #sum > 99
        let #sum = 99
      end-if

      while (#iDU < #sum)
          if #batchonly = 1 and #iDU = &DB2UTempTblBatch
            let #iDU = &DB2UTempTblInstances
          end-if
          add 1 to #iDU
          let  $TableDB2U_TableName =  'PS_' || rtrim(&TableDB2U_RecName,' ') || to_char(#iDU)
          do CheckDB2UTbl
          if #foundDB2U = 0
             break
          end-if
    end-while
   end-if

   if #foundDB2U = 0
      do Table1-Page-Control
      print &TableDB2U_RecName      (+1,{C_One})
      print &TableDB2U_ObjectOwnerid (0,{C_Two})
   end-if

FROM PSRECDEFN A
WHERE A.RECTYPE IN (0, 7)
ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure


!----------------------------------------------------------------------!
begin-procedure CheckDB2UTbl ! temptable in DD not in DB
!----------------------------------------------------------------------!
move 0 to #foundDB2U
let $tabname = 'AND B.TABNAME = CHAR(''' || $TableDB2U_TableName || ''')'
begin-SELECT on-Error=Rpt-SQL-Error
'X'                 &Table1U_Exists
  move 1 to #foundDB2U
FROM SYSCAT.TABLES B
WHERE B.TABSCHEMA = USER
[$tabname]
AND   B.TYPE = 'T'
end-SELECT
end-procedure


begin-procedure Table1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
          print 'Ownerid'                                       ( 0,{C_Two})
      print '---------------'           (+1,{C_One})
          print '-------'                                       ( 0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Table-in-DB-and-not-in-DD
!----------------------------------------------------------------------!
  move 0 to #rows
   let $AuditDescr = '(TABLE-3) SQL Table defined in the Database '
      || 'and not found in the Application Designer:'

   do DB2UTabChk
   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2UTabChk
!----------------------------------------------------------------------!
begin-Select on-Error=Rpt-SQL-Error

A.TABNAME            &TableDB2U_SQLTable
     move &TableDB2U_SQLTable to $PSTabNameDB2U
     LET $IsRecPrsntDB2U = 'N'
     LET $PSTabPrefixDB2U = SUBSTR($PSTabNameDB2U,1,3)

     if $PSTabPrefixDB2U = 'PS_'
            LET $PSColNameDB2U = SUBSTR($PSTabNameDB2U, 4,30)

            do FindDB2UTab
            if $IsRecPrsntDB2U = 'N'
                do FindDB2UTmpTab
                if $IsRecPrsntDB2U = 'N'
                        LET $Tmp1U = substr($PSColNameDB2U, 1, length(rtrim($PSColNameDB2U, ' ')) - 1)
                        LET $PSColNameDB2U = $Tmp1U
                        do FindDB2UTmpTab
                        if $IsRecPrsntDB2U = 'N'
                        LET $Tmp1U = substr($PSColNameDB2U, 1, length(rtrim($PSColNameDB2U, ' ')) - 1)
                        LET $PSColNameDB2U = $Tmp1U
                        do FindDB2UTmpTab
                        if $IsRecPrsntDB2U = 'N'
                           do Table2-Page-Control
                             print &TableDB2U_SQLTable (+1,{C_One})
                          end-if
                        end-if
                end-if
            end-if
     else
            LET $PSColNameDB2U = $PSTabNameDB2U
            do FindDB2UTab
            if $ISRecPrsntDB2U = 'N'
                do Table2-Page-Control
                print &TableDB2U_SQLTable (+1,{C_One})
            end-if
     end-if

FROM SYSCAT.TABLES A
WHERE A.TYPE = 'T'
AND A.TABSCHEMA = USER
AND A.TABNAME LIKE 'PS%'
ORDER BY A.TABNAME
end-SELECT

end-procedure

!----------------------------------------------------------------------!
begin-procedure FindDB2UTab
!----------------------------------------------------------------------!
let $PSColNameDB2UTrim = rtrim(SUBSTR($PSColNameDB2U,1,15),' ')
begin-SELECT
'Y' &SelRecDB2U
    LET $IsRecPrsntDB2U = $SelRecDB2U
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColNameDB2UTrim
AND C.RECTYPE = 0
end-select
end-procedure


!----------------------------------------------------------------------!
begin-procedure FindDB2UTmpTab
!----------------------------------------------------------------------!
let $PSColNameDB2UTrim = rtrim(SUBSTR($PSColNameDB2U,1,15),' ')
begin-SELECT
'Y' &SelRecTmpDB2U
    LET $IsRecPrsntDB2U = $SelRecTmpDB2U
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColNameDB2UTrim
AND C.RECTYPE = 7
end-select
end-procedure

begin-procedure Table2-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'            (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure

#ENDIF

#IFDEF DB2
!----------------------------------------------------------------------!
begin-procedure DDDTABLE-SQL-Table-not-blank-or-recname
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-1) SQL Table Names defined in the Application '
      || 'Designer that are not blank and not the same as the Record Name:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME    &Table0_RecName
A.SQLTABLENAME    &Table0_SQLName
A.ObjectOwnerid   &Table0_ObjectOwnerid

   do Table0-Page-Control
   print &Table0_RecName      (+1,{C_One})
   print &Table0_SQLName      (0,{C_Two})
   print &Table0_ObjectOwnerid (0,{C_Three})

FROM PSRECDEFN A
WHERE A.SQLTABLENAME <> ' '
AND A.SQLTABLENAME <> A.RECNAME
AND A.RECNAME NOT IN ('PRCSDEFN', 'PRCSJOBDEFN', 'PRCSRECUR', 'PRCSTYPEDEFN', 'SERVERDEFN', 'APPR_RULE_HDR', 'SERVERNOTIFY')
ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Table0-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'SQL Table Name'            (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '------------------'        (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Table-in-DD-and-not-in-DB
!----------------------------------------------------------------------!

move 0 to #rows
   let $AuditDescr = '(TABLE-2) SQL Table defined in the Application '
      || 'Designer and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
TEMPTBLINSTANCES      &DB2TempTblInstances
TEMPINSTANCEBATCH     &DB2TempTblBatch
FROM PSOPTIONS
end-SELECT

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &TableDB2_RecName
A.SQLTABLENAME     &TableDB2_SqlTableName
A.RECTYPE          &TableDB2_RecType
A.OBJECTOWNERID    &TableDB2_ObjectOwnerid

   if rtrim(&TableDB2_SqlTableName,' ') = ''
      let $TableDB2_TableName = 'PS_' || rtrim(&TableDB2_RecName,' ')
   else
      let $TableDB2_TableName = rtrim(&TableDB2_SqlTableName,' ')
   end-if

   do CheckDB2Tbl

   if &TableDB2_RecType = 7

      move 0 to #iD

      let $RecName = &TableDB2_RecName
      do GetBatchInstances

      if &Dedicated_Batch = 0
         let #sum = &DB2TempTblBatch
      else
         let #sum = &DB2TempTblInstances + &Dedicated_Batch
      end-if

      if #sum > 99
        let #sum = 99
      end-if

      while (#iD < #sum)
        if #batchonly = 1 and #iD = &DB2TempTblBatch
          let #iD = &DB2TempTblInstances
        end-if
        add 1 to #iD
          let  $TableDB2_TableName =  'PS_' || rtrim(&TableDB2_RecName,' ') || to_char(#iD)
          do CheckDB2Tbl
          if #foundDB2 = 0
             break
          end-if
      end-while
     end-if

   if #foundDB2 = 0
      do Table1-Page-Control
      print &TableDB2_RecName      (+1,{C_One})
      print &TableDB2_ObjectOwnerid (0,{C_Two})

   end-if

FROM PSRECDEFN A
WHERE A.RECTYPE IN (0, 7)
ORDER BY RECNAME

end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure



!----------------------------------------------------------------------!
begin-procedure CheckDB2Tbl ! temptable in DD not in DB
!----------------------------------------------------------------------!
move 0 to #foundDB2
begin-SELECT on-Error=Rpt-SQL-Error
'X'                 &Table1_Exists
  move 1 to #foundDB2
FROM SYSIBM.SYSTABLES B
WHERE B.CREATOR = CURRENT SQLID
AND   B.NAME =$TableDB2_TableName
AND   B.TYPE = 'T'
end-SELECT

end-procedure

begin-procedure Table1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
          print 'Ownerid'                                       (0,{C_Two})
      print '---------------'           (+1,{C_One})
          print '-------'                                       (0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Table-in-DB-and-not-in-DD
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(TABLE-3) SQL Table defined in the Database '
      || 'and not found in the Application Designer:'

   do DB2TabChk
   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2TabChk
!----------------------------------------------------------------------!
begin-Select on-Error=Rpt-SQL-Error

A.NAME            &TableDB2_SQLTable
     move &TableDB2_SQLTable to $PSTabNameDB2
     LET $IsRecPrsntDB2 = 'N'
     LET $PSTabPrefixDB2 = SUBSTR($PSTabNameDB2,1,3)

     if $PSTabPrefixDB2 = 'PS_'
            LET $PSColNameDB2 = SUBSTR($PSTabNameDB2, 4,30)

            do FindDB2Tab
            if $IsRecPrsntDB2 = 'N'
                do FindDB2TmpTab
                if $IsRecPrsntDB2 = 'N'
                        LET $Tmp1 = substr($PSColNameDB2, 1, length(rtrim($PSColNameDB2, ' ')) - 1)
                        LET $PSColNameDB2 = $Tmp1
                        do FindDB2TmpTab
                        if $IsRecPrsntDB2 = 'N'
                        LET $Tmp1 = substr($PSColNameDB2, 1, length(rtrim($PSColNameDB2, ' ')) - 1)
                        LET $PSColNameDB2 = $Tmp1
                        do FindDB2TmpTab
                        if $IsRecPrsntDB2 = 'N'
                           do Table2-Page-Control
                             print &TableDB2_SQLTable (+1,{C_One})
                          end-if
                        end-if
                end-if
            end-if
     else
            LET $PSColNameDB2 = $PSTabNameDB2

            do FindDB2Tab
            if $ISRecPrsntDB2 = 'N'
                do Table2-Page-Control
                print &TableDB2_SQLTable (+1,{C_One})
            end-if
     end-if

FROM SYSIBM.SYSTABLES A
WHERE A.CREATOR = CURRENT SQLID
AND A.NAME LIKE 'PS%'
AND A.TYPE = 'T'
ORDER BY A.NAME
end-SELECT
end-procedure

!----------------------------------------------------------------------!
begin-procedure FindDB2Tab
!----------------------------------------------------------------------!
let $PSColNameDB2Trim = rtrim(SUBSTR($PSColNameDB2,1,15),' ')

begin-SELECT
'Y' &SelRecDB2
    LET $IsRecPrsntDB2 = $SelRecDB2

FROM PSRECDEFN C
WHERE C.RECNAME = $PSColNameDB2Trim
AND C.RECTYPE = 0
end-select
end-procedure


!----------------------------------------------------------------------!
begin-procedure FindDB2TmpTab
!----------------------------------------------------------------------!
let $PSColNameDB2Trim = rtrim(SUBSTR($PSColNameDB2,1,15),' ')
begin-SELECT
'Y' &SelRecTmpDB2
    LET $IsRecPrsntDB2 = $SelRecTmpDB2
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColNameDB2Trim
AND C.RECTYPE = 7
end-select
end-procedure

begin-procedure Table2-Page-Control
!----------------------------------------------------------------------!
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'            (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure

#ENDIF

#IFDEF DB2400
!----------------------------------------------------------------------!
begin-procedure DDDTABLE-SQL-Table-not-blank-or-recname
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-1) SQL Table Names defined in the Application '
      || 'Designer that are not blank and not the same as the Record Name:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME    &Table0_RecName
A.SQLTABLENAME    &Table0_SQLName
A.OBJECTOWNERID   &Table0_ObjectOwnerid

   do Table0-Page-Control
   print &Table0_RecName      (+1,{C_One})
   print &Table0_SQLName      (0,{C_Two})
   print &Table0_ObjectOwnerid (0,{C_Three})

FROM PSRECDEFN A
WHERE A.SQLTABLENAME <> ' '
AND A.SQLTABLENAME <> A.RECNAME
AND A.RECNAME NOT IN ('PRCSDEFN', 'PRCSJOBDEFN', 'PRCSRECUR', 'PRCSTYPEDEFN', 'SERVERDEFN', 'APPR_RULE_HDR', 'SERVERNOTIFY')
ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Table0-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'SQL Table Name'            (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '------------------'        (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

begin-procedure DDDTABLE-Table-in-DD-and-not-in-DB
do DB2TABLE-Table-in-DD-and-not-in-DB
end-procedure

begin-procedure DDDTABLE-Table-in-DB-and-not-in-DD
do DB2TABLE-Table-in-DB-and-not-in-DD
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2TABLE-Table-in-DD-and-not-in-DB
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(TABLE-2) SQL Table defined in the Application '
      || 'Designer and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME    &Table1_RecName
A.SQLTABLENAME    &A.Sqltablename
A.OBJECTOWNERID   &Table1_ObjectOwnerid

   if rtrim(&A.Sqltablename,' ') = ''
     let $table1_tbname = 'PS_'||&Table1_RecName
   else
     let $table1_tbname = &A.Sqltablename
   end-if
   do  Get-SysTables
   if $exists  = '' and $table1_tbname <> 'PSDUMMY'
     do Table1-Page-Control
     print &Table1_RecName   (+1,{C_One})
     print &Table1_ObjectOwnerid (0,{C_Two})
   end-if

FROM  PSRECDEFN A
WHERE A.RECTYPE = 0
AND A.RECNAME <> 'PSDUMMY'
ORDER BY A.RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

Begin-Procedure Get-Systables

let $Exists = ''

begin-SELECT on-Error=Rpt-SQL-Error
'X'                 &Table1_Exists
  let $Exists   = &Table1_Exists
FROM SYSTABLES B
WHERE B.CREATOR = user
AND   B.NAME = $table1_tbname
AND   B.TYPE = 'T'
end-SELECT

end-procedure

begin-procedure Table1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
          print 'Ownerid'                                       (0,{C_Two})
      print '---------------'           (+1,{C_One})
          print '-------'                                       (0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2TABLE-Table-in-DB-and-not-in-DD
!----------------------------------------------------------------------!

   move 0 to #rows
   let $AuditDescr = '(TABLE-3) SQL Table defined in the Database '
      || 'and not found in the Application Designer:'

begin-SELECT on-Error=Rpt-SQL-Error
A.NAME     &Table2_SQLTable

   let $tbname   = &Table2_SQLtable
   let $tbname415 = substr($tbname,4,15)
   let $tbname115 = substr($tbname,1,15)
   let $exists = ''
   if substr($tbname,1,3) = 'PS_'
     do Get-Systables-for-PS
   else
     do Get-Systables-for-Rest
   end-if

   if $exists = ''
     do Table2-Page-Control
     print &Table2_SQLTable   (+1,{C_One})
   end-if

FROM SYSTABLES A
WHERE A.CREATOR = USER
AND A.NAME LIKE 'PS%'
AND A.TYPE = 'T'
ORDER BY A.NAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-Systables-for-PS
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &Table21_Exists
   let $Exists  = &Table21_Exists
FROM PSRECDEFN B
WHERE B.RECNAME = $tbname415
AND   B.RECTYPE = 0
end-SELECT

end-procedure

!----------------------------------------------------------------------!
begin-procedure Get-Systables-for-rest
!----------------------------------------------------------------------!

begin-SELECT on-Error=Rpt-SQL-Error
'X'                &Table3_Exists
   let $Exists  = &Table3_Exists
FROM PSRECDEFN C
WHERE C.RECNAME = $tbname115
AND   C.RECTYPE = 0
end-SELECT

end-procedure

begin-procedure Table2-Page-Control
!----------------------------------------------------------------------!
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'            (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure

#ENDIF

#IFDEF INFORMIX

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-SQL-Table-not-blank-or-recname
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-1) SQL Table Names defined in the Application '
      || 'Designer that are not blank and not the same as the Record Name:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Table0_RecName
A.SQLTABLENAME     &Table0_SQLName
A.OBJECTOWNERID    &Table0_ObjectOwnerid

   do Table0-Page-Control
   print &Table0_RecName      (+1,{C_One})
   print &Table0_SQLName      (0,{C_Two})
   print &Table0_ObjectOwnerid (0,{C_Three})

FROM PSRECDEFN A
WHERE A.SQLTABLENAME <> ' '
AND A.SQLTABLENAME <> A.RECNAME
AND A.RECNAME NOT IN ('PRCSDEFN', 'PRCSJOBDEFN', 'PRCSRECUR', 'PRCSTYPEDEFN', 'SERVERDEFN', 'APPR_RULE_HDR', 'SERVERNOTIFY')
ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure Table0-Page-Control
!----------------------------------------------------------------------!
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'SQL Table Name'            (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '------------------'        (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Table-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-2) SQL Table defined in the Application '
      || 'Designer and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
TEMPTBLINSTANCES      &TempTblInstances
TEMPINSTANCEBATCH     &TempTblBatch
FROM PSOPTIONS
end-SELECT

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Table1_RecName
A.SQLTABLENAME     &Table1_SqlTableName
A.RECTYPE          &Table1_RecType
A.OBJECTOWNERID    &Table1_ObjectOwnerid

   if rtrim(&Table1_SqlTableName,' ') = ''
      let $Table1_TableName = 'ps_' || rtrim(LOWER(&Table1_RecName),' ')
   else
      let $Table1_TableName = rtrim(LOWER(&Table1_SqlTableName),' ')
   end-if

   do CheckTbl

   if &Table1_RecType = 7

      move 0 to #i

      let $RecName = &Table1_RecName
      do GetBatchInstances

      if &Dedicated_Batch = 0
         let #sum = &TempTblBatch
      else
         let #sum = &TempTblInstances + &Dedicated_Batch
      end-if

      if #sum > 99
        let #sum = 99
      end-if

      while (#i < #sum)
        if #batchonly = 1 and #i = &TempTblBatch
           let #i = &TempTblInstances
        end-if
        add 1 to #i
        let  $Table1_TableName =  'ps_' || rtrim(LOWER(&Table1_RecName),' ') || to_char(#i)
        do CheckTbl
        if #found = 0
          break
        end-if
     end-while
    end-if

   if #found = 0


      do Table1-Page-Control
      print &Table1_RecName      (+1,{C_One})
          print &Table1_ObjectOwnerid (0,{C_Two})
   end-if


FROM PSRECDEFN A
WHERE A.RECTYPE IN (0, 7)

ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure


!----------------------------------------------------------------------!
begin-procedure CheckTbl ! temptable in DD not in DB
!----------------------------------------------------------------------!
move 0 to #found
begin-SELECT on-Error=Rpt-SQL-Error
B.TABNAME
   move 1 to #found
FROM 'informix'.SYSTABLES B
WHERE B.TABNAME = $Table1_TableName
AND B.TABTYPE = 'T'
end-SELECT
end-procedure

!----------------------------------------------------------------------!
begin-procedure Table1-Page-Control
!----------------------------------------------------------------------!
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
          print 'Ownerid'                                       ( 0,{C_Two})
      print '---------------'           (+1,{C_One})
          print '-------'                                       ( 0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Table-in-DB-and-not-in-DD
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-3) SQL Table defined in the Database '
      || 'and not found in the Application Designer:'

   do InfTabChk

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure InfTabChk
!----------------------------------------------------------------------!
begin-Select on-Error=Rpt-SQL-Error

A.TABNAME          &Table2_SQLTable

   move &Table2_SQLTable to $PSTabName
   LET $PSTabName = UPPER($PSTabName)
   LET $IsRecPrsnt = 'N'
   LET $PSTabPrefix = SUBSTR($PSTabName, 1, 3)

   if $PSTabPrefix = 'PS_'
            LET $PSColName = SUBSTR($PSTabName, 4,30)

            do FindInfTab
            if $IsRecPrsnt = 'N'
                do FindInfTmpTab
                if $IsRecPrsnt = 'N'
                        LET $Tmp1 = substr($PSColName, 1, length(rtrim($PSColName, ' ')) - 1)
                        LET $PSColName = $Tmp1
                        do FindInfTmpTab
                        if $IsRecPrsnt = 'N'
                        LET $Tmp1 = substr($PSColName, 1, length(rtrim($PSColName, ' ')) - 1)
                        LET $PSColName = $Tmp1
                        do FindInfTmpTab
                        if $IsRecPrsnt = 'N'
                           do Table2-Page-Control
                             print &Table2_SQLTable (+1,{C_One})
                          end-if
                        end-if
                end-if
            end-if
     else
            LET $PSColName = $PSTabName
            do FindInfTab
            if $ISRecPrsnt = 'N'
                do Table2-Page-Control
                print &Table2_SQLTable (+1,{C_One})
            end-if
     end-if

FROM 'informix'.SYSTABLES A
WHERE A.TABTYPE = 'T' and A.TABNAME like 'ps%'
AND   A.OWNER   = USER
AND   A.TABNAME <> 'PSALTERLONG'
AND   A.TABNAME <> 'psalterlong'
ORDER BY A.TABNAME
end-SELECT

end-procedure

!----------------------------------------------------------------------!
begin-procedure FindInfTab
!----------------------------------------------------------------------!
begin-SELECT
'Y' &SelRec
   LET $IsRecPrsnt = &SelRec
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColName
AND   C.RECTYPE = 0
end-SELECT
end-procedure

!----------------------------------------------------------------------!
begin-procedure FindInfTmpTab
!----------------------------------------------------------------------!
begin-SELECT
'Y' &SelRecTmp
    LET $IsRecPrsnt = $SelRecTmp
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColName
AND C.RECTYPE = 7
end-select

end-procedure
!----------------------------------------------------------------------!
begin-procedure Table2-Page-Control
!----------------------------------------------------------------------!
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'            (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure

#ENDIF

#IFDEF SYBASE

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-SQL-Table-not-blank-or-recname
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-1) SQL Table Names defined in the Application '
      || 'Designer that are not blank and not the same as the Record Name:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Table0_RecName
A.SQLTABLENAME     &Table0_SQLName
A.OBJECTOWNERID    &Table0_ObjectOwnerid

   do Table0-Page-Control
   print &Table0_RecName      (+1,{C_One})
   print &Table0_SQLName      (0,{C_Two})
   print &Table0_ObjectOwnerid (0,{C_Three})

FROM PSRECDEFN A
WHERE A.SQLTABLENAME <> ' '
AND A.SQLTABLENAME <> A.RECNAME
AND A.RECNAME NOT IN ('PRCSDEFN', 'PRCSJOBDEFN', 'PRCSRECUR', 'PRCSTYPEDEFN', 'SERVERDEFN', 'APPR_RULE_HDR', 'SERVERNOTIFY')

ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Table0-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'SQL Table Name'            (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '------------------'        (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Table-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
  move 0 to #rows
   let $AuditDescr = '(TABLE-2) SQL Table defined in the Application '
      || 'Designer and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
TEMPTBLINSTANCES      &TempTblInstances
TEMPINSTANCEBATCH     &TempTblBatch
FROM PSOPTIONS
end-SELECT

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Table1_RecName
A.SQLTABLENAME     &Table1_SqlTableName
A.RECTYPE          &Table1_RecType
A.OBJECTOWNERID    &Table1_ObjectOwnerid

   if rtrim(&Table1_SqlTableName,' ') = ''
      let $Table1_TableName = 'PS_' || rtrim(&Table1_RecName,' ')
   else
      let $Table1_TableName = rtrim(&Table1_SqlTableName,' ')
   end-if

   do CheckTbl

   if &Table1_RecType = 7

      move 0 to #i

      let $RecName = &Table1_RecName
      do GetBatchInstances

      if &Dedicated_Batch = 0
         let #sum = &TempTblBatch
      else
         let #sum = &TempTblInstances + &Dedicated_Batch
      end-if

      if #sum > 99
        let #sum = 99
      end-if

      while (#i < #sum)
         if #batchonly = 1 and #i = &TempTblBatch
           let #i = &TempTblInstances
         end-if
         add 1 to #i
         let  $Table1_TableName =  'PS_' || rtrim(&Table1_RecName,' ') || to_char(#i)
         do CheckTbl
         if #found = 0
           break
         end-if
      end-while
   end-if

   if #found = 0
      do Table1-Page-Control
      print &Table1_RecName      (+1,{C_One})
          print &Table1_ObjectOwnerid (0,{C_Two})
   end-if

FROM PSRECDEFN A
WHERE A.RECTYPE IN (0, 7)
ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure
!----------------------------------------------------------------------!
begin-procedure CheckTbl ! temptable in DD not in DB
!----------------------------------------------------------------------!
move 0 to #found
begin-SELECT on-Error=Rpt-SQL-Error
B.NAME
   move 1 to #found
FROM SYSOBJECTS B
WHERE B.NAME = $Table1_TableName
end-SELECT
end-procedure

begin-procedure Table1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
          print 'Ownerid'                                       (0,{C_Two})
      print '---------------'           (+1,{C_One})
          print '-------'                                       (0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Table-in-DB-and-not-in-DD
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-3) SQL Table defined in the Database '
      || 'and not found in the Application Designer:'

   do SybTabChk
   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure SybTabChk
!----------------------------------------------------------------------!
begin-Select on-Error=Rpt-SQL-Error

A.NAME          &Table2_SQLTable

     move &Table2_SQLTable to $PSTabName
     LET $IsRecPrsnt = 'N'
     LET $PSTabPrefix = SUBSTR($PSTabName,1,3)

     if $PSTabPrefix = 'PS_'
            LET $PSColName = SUBSTR($PSTabName, 4,30)

            do FindSybTab
            if $IsRecPrsnt = 'N'
                do FindSybTmpTab
                if $IsRecPrsnt = 'N'
                        LET $Tmp1 = substr($PSColName, 1, length(rtrim($PSColName, ' ')) - 1)
                        LET $PSColName = $Tmp1
                        do FindSybTmpTab
                        if $IsRecPrsnt = 'N'
                        LET $Tmp1 = substr($PSColName, 1, length(rtrim($PSColName, ' ')) - 1)
                        LET $PSColName = $Tmp1
                        do FindSybTmpTab
                        if $IsRecPrsnt = 'N'
                           do Table2-Page-Control
                             print &Table2_SQLTable (+1,{C_One})
                          end-if
                        end-if
                end-if
            end-if
     else
            LET $PSColName = $PSTabName
            do FindSybTab
            if $ISRecPrsnt = 'N'
                do Table2-Page-Control
                print &Table2_SQLTable (+1,{C_One})
            end-if
     end-if

FROM SYSOBJECTS A
WHERE A.TYPE = 'U' and A.NAME like 'PS%'
ORDER BY A.NAME
end-SELECT

end-procedure

!----------------------------------------------------------------------!
begin-procedure FindSybTab
!----------------------------------------------------------------------!
begin-SELECT
'Y' &SelRec
    LET $IsRecPrsnt = $SelRec
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColName
AND C.RECTYPE = 0
end-select

end-procedure


!----------------------------------------------------------------------!
begin-procedure FindSybTmpTab
!----------------------------------------------------------------------!
begin-SELECT
'Y' &SelRecTmp
    LET $IsRecPrsnt = $SelRecTmp
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColName
AND C.RECTYPE = 7
end-select

end-procedure

!----------------------------------------------------------------------!
begin-procedure Table2-Page-Control
!----------------------------------------------------------------------!
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'            (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure

#ENDIF
#IFDEF MICROSOFT

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-SQL-Table-not-blank-or-recname
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-1) SQL Table Names defined in the Application '
      || 'Designer that are not blank and not the same as the Record Name:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Table0_RecName
A.SQLTABLENAME     &Table0_SQLName
A.OBJECTOWNERID    &Table0_ObjectOwnerid

   do Table0-Page-Control
   print &Table0_RecName      (+1,{C_One})
   print &Table0_SQLName      (0,{C_Two})
   print &Table0_ObjectOwnerid (0,{C_Three})

FROM PSRECDEFN A
WHERE A.SQLTABLENAME <> ' '
AND A.SQLTABLENAME <> A.RECNAME
AND A.RECNAME NOT IN ('PRCSDEFN', 'PRCSJOBDEFN', 'PRCSRECUR', 'PRCSTYPEDEFN', 'SERVERDEFN', 'APPR_RULE_HDR', 'SERVERNOTIFY')

ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Table0-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'SQL Table Name'            (0,{C_Two})
          print 'Ownerid'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '------------------'        (0,{C_Two})
          print '-------'                                       (0,{C_Three})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Table-in-DD-and-not-in-DB
!----------------------------------------------------------------------!
  move 0 to #rows
   let $AuditDescr = '(TABLE-2) SQL Table defined in the Application '
      || 'Designer and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
TEMPTBLINSTANCES      &TempTblInstances
TEMPINSTANCEBATCH     &TempTblBatch
FROM PSOPTIONS
end-SELECT

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Table1_RecName
A.SQLTABLENAME     &Table1_SqlTableName
A.RECTYPE          &Table1_RecType
A.OBJECTOWNERID    &Table1_ObjectOwnerid
   if rtrim(&Table1_SqlTableName,' ') = ''
      let $Table1_TableName = 'PS_' || rtrim(&Table1_RecName,' ')
   else
      let $Table1_TableName = rtrim(&Table1_SqlTableName,' ')
   end-if

   do CheckTbl

   if &Table1_RecType = 7

      move 0 to #i

      let $RecName = &Table1_RecName
      do GetBatchInstances

      if &Dedicated_Batch = 0
         let #sum = &TempTblBatch
      else
         let #sum = &TempTblInstances + &Dedicated_Batch
      end-if

      if #sum > 99
        let #sum = 99
      end-if

      while (#i < #sum)
        if #batchonly = 1  and #i= &TempTblBatch
          let #i = &TempTblInstances
        end-if
        add 1 to #i
        let  $Table1_TableName =  'PS_' || rtrim(&Table1_RecName,' ') || to_char(#i)
        do CheckTbl
        if #found = 0
          break
        end-if
     end-while
    end-if

   if #found = 0
      do Table1-Page-Control
      print &Table1_RecName      (+1,{C_One})
      print &Table1_ObjectOwnerid (0,{C_Two})
   end-if

FROM PSRECDEFN A
WHERE A.RECTYPE IN (0, 7)
ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure
!----------------------------------------------------------------------!
begin-procedure CheckTbl ! temptable in DD not in DB
!----------------------------------------------------------------------!
move 0 to #found
begin-SELECT on-Error=Rpt-SQL-Error
B.NAME
   move 1 to #found
FROM SYSOBJECTS B
WHERE B.NAME = $Table1_TableName
end-SELECT
end-procedure

begin-procedure Table1-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
          print 'Ownerid'                                       (0,{C_Two})
      print '---------------'           (+1,{C_One})
          print '-------'                                       (0,{C_Two})
   end-if
end-procedure

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Table-in-DB-and-not-in-DD
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-3) SQL Table defined in the Database '
      || 'and not found in the Application Designer:'

   do MSTabChk
   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure MSTabChk
!----------------------------------------------------------------------!
begin-Select on-Error=Rpt-SQL-Error

convert(varchar(128),A.NAME)          &Table2_SQLTable

     move &Table2_SQLTable to $PSTabName
     LET $IsRecPrsnt = 'N'
     LET $PSTabPrefix = SUBSTR($PSTabName,1,3)

     if $PSTabPrefix = 'PS_'
            LET $PSColName = SUBSTR($PSTabName, 4,30)

            do FindMSTab
            if $IsRecPrsnt = 'N'
                do FindMSTmpTab
                if $IsRecPrsnt = 'N'
                        LET $Tmp1 = substr($PSColName, 1, length(rtrim($PSColName, ' ')) - 1)
                        LET $PSColName = $Tmp1
                        do FindMSTmpTab
                        if $IsRecPrsnt = 'N'
                        LET $Tmp1 = substr($PSColName, 1, length(rtrim($PSColName, ' ')) - 1)
                        LET $PSColName = $Tmp1
                        do FindMSTmpTab
                        if $IsRecPrsnt = 'N'
                           do Table2-Page-Control
                             print &Table2_SQLTable (+1,{C_One})
                          end-if
                        end-if
                end-if
            end-if
     else
            LET $PSColName = $PSTabName
            do FindMSTab
            if $ISRecPrsnt = 'N'
                do Table2-Page-Control
                print &Table2_SQLTable (+1,{C_One})
            end-if
     end-if

FROM SYSOBJECTS A
WHERE A.TYPE = 'U' and A.NAME like 'PS%'
ORDER BY A.NAME
end-SELECT

end-procedure

!----------------------------------------------------------------------!
begin-procedure FindMSTab
!----------------------------------------------------------------------!
begin-SELECT
'Y' &SelRec
    LET $IsRecPrsnt = $SelRec
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColName
AND C.RECTYPE = 0
end-select

end-procedure


!----------------------------------------------------------------------!
begin-procedure FindMSTmpTab
!----------------------------------------------------------------------!
begin-SELECT
'Y' &SelRecTmp
    LET $IsRecPrsnt = $SelRecTmp
FROM PSRECDEFN C
WHERE C.RECNAME = $PSColName
AND C.RECTYPE = 7
end-select

end-procedure

!----------------------------------------------------------------------!
begin-procedure Table2-Page-Control
!----------------------------------------------------------------------!
   do Check-Page-Break
   if #Break = {TRUE}
      print 'SQL Table Name'            (+2,{C_One})
      print '------------------'        (+1,{C_One})
   end-if
end-procedure

#ENDIF

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Tablespace-not-defined-for-table
!----------------------------------------------------------------------!
   move 0 to #rows

#ifdef MICROSOFT
         let $AuditDescr = '(TABLE-4)INFORMATIONAL ONLY - Tablespace not defined for SQL Table in'
      || ' the Application Designer:'
#else
         let $AuditDescr = '(TABLE-4) Tablespace not defined for SQL Table in'
      || ' the Application Designer:'

#endif
begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Table4_RecName
B.OBJECTOWNERID    &Table4_OwnerID

   do Table4-Page-Control
   print &Table4_RecName      (+1,{C_One})
   print &Table4_OwnerID      (0,{C_Two}) 
FROM PSRECTBLSPC A, PSRECDEFN B
WHERE A.DDLSPACENAME = ' ' AND  A.RECNAME = B.RECNAME
AND A.DBTYPE = (SELECT Max(A1.DBTYPE) FROM PSRECTBLSPC A1
            WHERE A.RECNAME = A1.RECNAME AND
#IFDEF MICROSOFT
A1.DBTYPE IN (' ','7'))
#ELSE
#IFDEF SYBASE
A1.DBTYPE IN (' ','6'))
#ELSE
#IFDEF DB2
A1.DBTYPE IN (' ','1'))
#ELSE
#IFDEF DB2UNIX
A1.DBTYPE IN (' ','4'))
#ELSE
#IFDEF ORACLE
A1.DBTYPE IN (' ','2'))
#ELSE
#IFDEF INFORMIX
A1.DBTYPE IN (' ','3'))
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF
#ENDIF

ORDER BY A.RECNAME

end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Table4-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
          print 'Ownerid'                                       ( 0,{C_Two})
      print '---------------'           (+1,{C_One})
          print '-------'                                       ( 0,{C_Two})
   end-if
end-procedure

#IFDEF DB2

!---------------------------------------------------------------!
begin-procedure DDDTABLE-TableSpace-in-PSRECTBLSPC-and-not-in-DB
!---------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-4A) Tablespace defined in the PSRECTBLSPC '
      || 'and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Table4A_RecName
A.DDLSPACENAME     &Table4A_DDLSpaceName
A.DBNAME           &Table4A_DBName

    let $Table4A_DDLSpaceName = rtrim(&Table4A_DDLSpaceName,' ')
    let $Table4A_DBName = rtrim(&Table4A_DBName,' ')

   do DB2CheckTblSpc

   if #tblspcfound = 0
      do Table4A-Page-Control
      print &Table4A_RecName      (+1,{C_One})
      print &Table4A_DDLSpaceName        (0, {C_Two})
      print &Table4A_DBName (0,{C_Three})
   end-if

FROM PSRECTBLSPC A
WHERE  A.TEMPTBLINST = 'N'
AND   A.DBTYPE IN (' ','1')
ORDER BY A.RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2CheckTblSpc ! temptable in DD not in DB
!----------------------------------------------------------------------!
move 0 to #tblspcfound
begin-SELECT on-Error=Rpt-SQL-Error
B.NAME
   move 1 to #tblspcfound
FROM SYSIBM.SYSTABLESPACE B
WHERE B.NAME = $Table4A_DDLSpaceName
AND B.DBNAME = $Table4A_DBName
end-SELECT
end-procedure

begin-procedure Table4A-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
      print 'Tablespace'            (0,{C_Two})
          print 'Database'                                       (0,{C_Three})
      print '---------------'           (+1,{C_One})
      print '----------'        (0,{C_Two})
          print '--------'                                       (0,{C_Three})
   end-if
end-procedure

!---------------------------------------------------------------!
begin-procedure DDDTABLE-TableSpace-in-PSTBLSPCCAT-and-not-in-DB
!---------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-4B) Tablespace defined in the PSTBLSPCCAT '
      || 'and not found in the Database:'

begin-SELECT on-Error=Rpt-SQL-Error
A.DDLSPACENAME     &Table4B_DDLSpaceName
A.DBNAME           &Table4B_DBName
    
    let $Table4B_DDLSpaceName = rtrim(&Table4B_DDLSpaceName,' ')
    let $Table4B_DBName = rtrim(&Table4B_DBName,' ')

   do DB2CheckTblSpcCat

   if #tblspccatfound = 0
      do Table4B-Page-Control
      print &Table4B_DDLSpaceName      (+1,{C_One})
      print &Table4B_DBName        (0, {C_Two})      
   end-if

FROM PSTBLSPCCAT A
ORDER BY A.DDLSPACENAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

!----------------------------------------------------------------------!
begin-procedure DB2CheckTblSpcCat ! temptable in DD not in DB
!----------------------------------------------------------------------!
move 0 to #tblspccatfound
begin-SELECT on-Error=Rpt-SQL-Error
D.NAME
   move 1 to #tblspccatfound
FROM SYSIBM.SYSTABLESPACE D
WHERE D.NAME = $Table4B_DDLSpaceName
AND D.DBNAME = $Table4B_DBName
end-SELECT
end-procedure

begin-procedure Table4B-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'TableSpace'               (+2,{C_One})
          print 'Database'                                       ( 0,{C_Two})
      print '----------'           (+1,{C_One})
          print '--------'                                       ( 0,{C_Two})
   end-if
end-procedure

#ENDIF

!----------------------------------------------------------------------!
begin-procedure DDDTABLE-Table-Contains-More-Than-500-Fields
!----------------------------------------------------------------------!
   move 0 to #rows
   let $AuditDescr = '(TABLE-5) Table Contains More Than 500 Fields :'

begin-SELECT on-Error=Rpt-SQL-Error
A.RECNAME          &Table5_RecName
A.FIELDCOUNT       &Table5_FieldCount

   do Table5-Page-Control
   print &Table5_RecName      (+1,{C_One})
   print &Table5_FieldCount (0,{C_Two})

FROM PSRECDEFN A
WHERE A.FIELDCOUNT > 500
AND A.RECTYPE IN (0, 7)
ORDER BY RECNAME
end-SELECT

   do Print-Audit-Result
   do Commit-Transaction
end-procedure

begin-procedure Table5-Page-Control
   do Check-Page-Break
   if #Break = {TRUE}
      print 'Record Name'               (+2,{C_One})
          print 'FieldCount'                                       ( 0,{C_Two})
      print '---------------'           (+1,{C_One})
          print '-------'                                       ( 0,{C_Two})
   end-if
end-procedure


!----------------------------------------------------------------------!
begin-procedure GetBatchInstances ! temptable in DD not in DB
!----------------------------------------------------------------------!
begin-SELECT on-Error=Rpt-SQL-Error
SUM(B.TEMPTBLINSTANCES) &Dedicated_Batch
FROM PSAEAPPLTEMPTBL A, PSAEAPPLDEFN B
WHERE A.RECNAME = $RecName
  AND A.AE_APPLID = B.AE_APPLID
end-SELECT

move 0 to #batchonly
begin-SELECT on-Error=Rpt-SQL-Error
B.RECUSE &Table1_BatchOnly

   let #check1 = trunc((&Table1_BatchOnly/2), 0)
   let #check2 = trunc((#check1/2), 0) * 2 + 1
   if #check1 != #check2
      move 0 to #batchonly
   else
      move 1 to #batchonly
   end-if

FROM PSAEAPPLTEMPTBL A, PSAEAPPLDEFN B
WHERE A.RECNAME = $RecName
  AND A.AE_APPLID = B.AE_APPLID
end-SELECT
end-procedure


