!***********************************************************************
!  PUPYT04: Print contents of Garnishment Rule Table - US custom rules *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      !
!                $Date:  2006/05/16:15:18:36                           !
!             $Release:  HR9                                           !
!            $Revision:  101                                           !
!                                                                      !
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'PUPYT04' to $ReportID

  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Stdapi-Init

  do Get-Report-Language
!  move $Pay715_ReportTitle to $ReportTitle
  move 'US Custom Garnishment Rules' to $ReportTitle
  display ' '
  display $ReportTitle
  display ' '

end-procedure


! This procedure is used to read language-dependent text from the database.
begin-procedure Report-Translation
! Read from PAY715 program ids
!  do Init_Report_Translation($ReportID,$language_cd)
  do Append_Report_Translation('PAY715')

  do Get_Field_Information ('PAY715', 'REPORT_TITLE',  $Pay715_ReportTitle,   #dummy_width)
  do Get_Field_Information ('PAY715', 'GARN_DE_DEFN1', $Pay715_Garn_DE_Defn1, #dummy_width)
  do Get_Field_Information ('PAY715', 'MAINT_RESP1',   $Pay715_Maint_Resp1,   #dummy_width)
  do Get_Field_Information ('PAY715', 'EFFDT1',        $Pay715_EffDt1,        #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_CALC1',      $Pay715_Ex_Calc1,      #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_HRS1',       $Pay715_Ex_Hrs1,       #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_PCT1',       $Pay715_Ex_Pct1,       #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_AMT1',       $Pay715_Ex_Amt1,       #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_DEP_EXCL1',  $Pay715_Ex_Dep_Excl1,  #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_DEP_AMT1',   $Pay715_Ex_Dep_Amt1,   #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_ALW_AMT1',   $Pay715_Ex_Alw_Amt1,   #dummy_width)
  do Get_Field_Information ('PAY715', 'STATE',         $Pay715_State,         #dummy_width)
  do Get_Field_Information ('PAY715', 'RULE_ID2',      $Pay715_Rule_Id2,      #dummy_width)
  do Get_Field_Information ('PAY715', 'DESCRLONG2',    $Pay715_DescrLong2,    #dummy_width)
  do Get_Field_Information ('PAY715', 'GARN_DE_DEFN2', $Pay715_Garn_DE_Defn2, #dummy_width)
  do Get_Field_Information ('PAY715', 'MAINT_RESP2',   $Pay715_Maint_Resp2,   #dummy_width)
  do Get_Field_Information ('PAY715', 'EFFDT2',        $Pay715_EffDt2,        #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_CALC2',      $Pay715_Ex_Calc2,      #dummy_width)
  do Get_Field_Information ('PAY715', 'VAR_FREQ2',     $Pay715_Var_Freq2,     #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_HRS2',       $Pay715_Ex_Hrs2,       #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_PCT2',       $Pay715_Ex_Pct2,       #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_AMT2',       $Pay715_Ex_Amt2,       #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_DEP_EXCL2',  $Pay715_Ex_Dep_Excl2,  #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_DEP_AMT2',   $Pay715_Ex_Dep_Amt2,   #dummy_width)
  do Get_Field_Information ('PAY715', 'EX_ALW_AMT2',   $Pay715_Ex_Alw_Amt2,   #dummy_width)

end-procedure

begin-HEADING 9

  #Include 'stdhdgtr.sqc'

  move 'United States' to $CountryName
  print $CountryName           (3,)        center

  print
  'The US Garnishment rules maintained by customers need to be reviewed and recreated after the upgrade:'
                               (+3,1)

  print $Pay715_Garn_DE_Defn1  (+2,52)
  print $Pay715_Maint_Resp1    (0,64)
  print $Pay715_EffDt1         (0,71)
  print $Pay715_Ex_Calc1       (0,85)
  print $Pay715_Ex_Hrs1        (0,110)
  print $Pay715_Ex_Pct1        (0,118)
  print $Pay715_Ex_Amt1        (0,128)
  print $Pay715_Ex_Dep_Excl1   (0,136)
  print $Pay715_Ex_Dep_Amt1    (0,147)
  print $Pay715_Ex_Alw_Amt1    (0,159)

    print $Pay715_State        (+1,1)

  print $Pay715_Rule_Id2       (0,8)
  print $Pay715_DescrLong2     (0,20)
  print $Pay715_Garn_DE_Defn2  (0,52)
  print $Pay715_Maint_Resp2    (0,64)
  print $Pay715_EffDt2         (0,71)
  print $Pay715_Ex_Calc2       (0,85)
  print $Pay715_Var_Freq2      (0,97)
  print $Pay715_Ex_Hrs2        (0,110)
  print $Pay715_Ex_Pct2        (0,118)
  print $Pay715_Ex_Amt2        (0,128)
  print $Pay715_Ex_Dep_Excl2   (0,136)
  print $Pay715_Ex_Dep_Amt2    (0,147)
  print $Pay715_Ex_Alw_Amt2    (0,159)

end-HEADING

!***********************************************************************
!  PROC PROCESS-MAIN                                                   *
!         Main Procedure                                               *
!***********************************************************************

BEGIN-PROCEDURE Process-Main

   move 0 to #Found

BEGIN-SELECT

S.COUNTRY
A.STATE_GARN_LAW
 if RTRIM(&A.State_Garn_Law, ' ') = '$U'
   print 'FED'             (+1,1,5)    on-break level=1
 else
   print &A.State_Garn_Law (+1,1,5)    on-break level=1
 end-if
A.GARN_RULE_ID             (0,+2,10)   on-break level=1
A.DESCR
A.GARN_DE_DEFNID
A.DESCRLONG

          move 1 to #Found
          move &A.DESCR          to $PRNT_DESCR
          move &A.GARN_DE_DEFNID to $PRNT_GARN_DE_DID
          move &A.DESCRLONG to $PRNT_DESCRLONG
          if $Curr_language_cd <> $Psoptions_Language_Cd
             do Lang-Record-Details
          end-if
          print $PRNT_DESCR       (0,+2,30)   on-break level=1
          print $PRNT_GARN_DE_DID (0,+2,10)   on-break level=1

A.MAINT_RESPONSBLTY        (0,+4,3)    on-break level=1
A.EFFDT
  do Format-DateTime(&A.EffDt, $out, {DEFDATE}, '', '')
  print $out               (0,+2)

A.EFF_STATUS
  if &A.Eff_Status = 'I'
    print 'I'              (0,0,1)
  else
    print ' '              (0,0,1)
  end-if

  do Get-Exempt-Records


  if RTRIM($PRNT_DescrLong,' ') <> ''
    print $PRNT_DescrLong      (+2,20)      wrap 140 20
                                        ON=<10> STRIP=<13>
    POSITION (+1)
  end-if

FROM  PS_GARN_RULE_TBL A, PS_STATE_NAMES_TBL S
WHERE A.STATE_GARN_LAW = S.STATE
  AND S.COUNTRY = 'USA'
  AND A.MAINT_RESPONSBLTY = 'C'
ORDER BY S.COUNTRY DESC, A.STATE_GARN_LAW, A.GARN_RULE_ID, A.EFFDT DESC
END-SELECT

   if #Found = 0
      print 'There are no US customer maintained garnishment rules' (+2,1)
   end-if

END-PROCEDURE


BEGIN-PROCEDURE Lang-Record-Details
BEGIN-SELECT
LA.DESCR
LA.DESCRLONG

    let $PRNT_DESCR = Cond(Rtrim(&LA.DESCR,' ')='', &A.DESCR, &LA.DESCR)
    let $PRNT_DESCRLONG = Cond(Rtrim(&LA.DESCRLONG,' ')='', &A.DESCRLONG, &LA.DESCRLONG)

FROM PS_GARN_RULE_LANG LA
WHERE LA.STATE_GARN_LAW = &A.STATE_GARN_LAW
  AND LA.GARN_RULE_ID   = &A.GARN_RULE_ID
  AND LA.LANGUAGE_CD    = $Curr_language_cd
  AND LA.EFFDT          = (SELECT MAX(EFFDT) FROM PS_GARN_RULE_LANG
                            WHERE STATE_GARN_LAW = &A.STATE_GARN_LAW
                              AND GARN_RULE_ID   = &A.GARN_RULE_ID
                              AND LANGUAGE_CD    = $Curr_language_cd
                              AND EFFDT         <= &A.EFFDT)
END-SELECT
END-PROCEDURE


BEGIN-PROCEDURE Get-Exempt-Records
  move 0 to #LineIncr
BEGIN-SELECT
B.GARN_EX_CALC
  move 'GARN_EX_CALC'     to $FieldName
  move &B.Garn_Ex_Calc    to $FieldValue
  do Read-Translate-Table
  print $XlatShortName     (+#LineIncr,85,10)
B.GARN_VAR_FREQUENCY
  move 'GARN_VAR_FREQUENCY'   to $FieldName
  move &B.Garn_Var_Frequency  to $FieldValue
  do Read-Translate-Table
  print $XlatShortName     (0,+2,10)
B.GARN_EX_HRS
  do Format-Number(&B.Garn_Ex_Hrs, $out, 'b9.999')
  print $out               (0,+2,6)
B.GARN_EX_PCT
  if &B.Garn_Ex_Calc = 'C' and &B.Garn_Ex_Pct = 0
    do Format-Number(&B.Garn_Ex_Pct, $out, '999.99')
  else
    do Format-Number(&B.Garn_Ex_Pct, $out, 'b99.99')
  end-if
  print $out               (0,+2,6)
B.GARN_EX_AMT
  do Format-Number(&B.Garn_Ex_Amt, $out, 'b99999.99')
  print $out               (0,+2,9)
B.GARN_EX_DEP_EXCL         (0,+5,6)     EDIT B99
B.GARN_EX_DEP_AMT
  do Format-Number(&B.Garn_Ex_Dep_Amt, $out, 'b99999.99')
  print $out               (0,+2,10)
B.GARN_EX_ALW_AMT
  do Format-Number(&B.Garn_Ex_Alw_Amt, $out, 'b99999.99')
  print $out               (0,+2,10)
  move 1 to #LineIncr
FROM  PS_GARN_EXEMPT_TBL B
WHERE B.STATE_GARN_LAW    = &A.State_Garn_Law
  AND B.GARN_RULE_ID      = &A.Garn_Rule_ID
  AND B.EFFDT             = &A.EffDt
ORDER BY B.GARN_EX_CALC
END-SELECT
END-PROCEDURE

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
