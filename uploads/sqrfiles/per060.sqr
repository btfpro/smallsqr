!******************************************
!  PER060:  Disability                    *
!******************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2007 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2007/04/05:21:30:51                                 
!       $Release:  HR9                                                 
!    $Resolution:  689716                                              
!                                                                      *
!***********************************************************************


#include 'setenv.sqc'    !Set environment
begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
    Move 1 to $Year4
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report


begin-heading 7


!do Get_Field_Information ('PER060',     'REPORT_TITLE',         $REPORTTITLE,   #DW)
  #Include 'stdhdgtr.sqc'

!do Get_Field_Information ('PER060',     'DISABILITY',         $Disability_ITA,       #DW)

!do Get_Field_Information ('PER060',     'YRS_SERVICE1',         $YRS_SERVICE1,  #DW)
!do Get_Field_Information ('PER003',     'MONTHCD',              $MONTH,         #DW)
!do Get_Field_Information ('HR',         'EMPL_NAME',            $NAME,          #DW)
!do Get_Field_Information ('HR',         'HIRE_DT',              $HIRE,          #DW)
!do Get_Field_Information ('HR',         'DEPARTMENT',           $DEPT,          #DW)
!do Get_Field_Information ('HR',         'JOBTITLE',             $JOBTITLE,      #DW)

!  let $title = $REPORTTITLE || ':'

!  print $TITLE                                          (3,1)

!  PRINT $NAME                                           (+2,53)
!  PRINT $Dysability_ITA                                 (+1,1)
!  PRINT $HIRE                                           (0,42)
!  PRINT $YRS_SERVICE1                                   (0,53)
!  PRINT $MONTH                                          (0,58)
!  PRINT $DEPT                                           (0,64)
!  PRINT $JOBTITLE                                       (0,95)

if $TypeOfReport = 'A'

  PRINT $DISTYPE       (+2,1)

end-if

if $TypeOfReport = 'S'

  print $FEMALE                (+2,40)
  print $MALE                  (0,60)
  print $FULL                  (+2,30)
  print $PART                  (0,40)
  print $TOTAL                 (0,50)
  print $FULL                  (0,60)
  print $PART                  (0,70)
  print $TOTAL                 (0,80)

end-if
if $TypeOfReport = 'N'

  print $LOCDESCR               (+1,1)
  print $NAME                   (,30)
  print $SEX                    (,60)
  print $CATEGDESCR             (,70)
  print $DISPERCENT            (,82)
  print $FULLPART             (,95)
  print $BIRTHDATE             (,105)

end-if

if $TypeOfReport <> 'N'and $TypeOfReport <>'S' and $TypeOfReport <> 'A' 

  print $FEMALE                (4,40)
  print $MALE                  (0,60)
  print $LOCDESCR              (+2,1)
  print $FULL                  (0,30)
  print $PART                  (0,40)
  print $TOTAL                 (0,50)
  print $FULL                  (0,60)
  print $PART                  (0,70)
  print $TOTAL                 (0,80)

 end-if

end-heading

!************************************
!Init Report
!************************************

begin-procedure Init-Report

  move 'PER060' to $ReportID
  

  do Stdapi-Init

  if $prcs_oprid=''
     display ''
     display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
     display ''
    goto last1
  end-if

  do Security-Param

  if $prcs_process_instance = ''
    do Ask-As-Of-Date
  else
    do Select-Parameters
  end-if
let $RepID = 'PER05960'
  do Init_Printer
  do Init_Report_Translation ($RepID, $language_cd)
  !do Append_Report_Translation ('HR')
  do Append_Report_Translation ($RepID)
last1:

!do Get_Field_Information ('HR',         'EMPL_NAME',            $NAME,          #DW)
do Get_Field_Information ($RepID,         'DISTYPE',            $DISTYPE,          #DW)
do Get_Field_Information ($RepID,         'LOCDESCR',          $LOCDESCR,            #DW)
do Get_Field_Information ($RepID,         'NAME',            $NAME,          #DW)
do Get_Field_Information ($RepID,         'SEX',            $SEX,          #DW)
do Get_Field_Information ($RepID,         'CATEGDESCR',            $CATEGDESCR,          #DW)
do Get_Field_Information ($RepID,         'FULL/PART',            $FULLPART,          #DW)
do Get_Field_Information ($RepID,         'BIRTHDATE',            $BIRTHDATE,          #DW)
do Get_Field_Information ($RepID,         'DIS/PERCENT',          $DISPERCENT,            #DW)
do Get_Field_Information ($RepID,         'TOTAL',            $TOTAL,          #DW)
do Get_Field_Information ($RepID,         'PART',            $PART,          #DW)
do Get_Field_Information ($RepID,         'FULL',            $FULL,          #DW)
do Get_Field_Information ($RepID,         'MALE',            $MALE,          #DW)
do Get_Field_Information ($RepID,         'FEMALE',            $FEMALE,          #DW)
end-procedure

!************************************
!Get Values
!************************************
begin-procedure Get-Values

   let $language_cd = $PRCS_LANGUAGE_CD

   display $prcs_oprid
   display $prcs_run_cntl_id


begin-SELECT

R.AS_OF_DATE

  let $AsOfDate = &R.AS_OF_DATE

R.DISABILITY_REPORT

  let $TypeOfReport = &R.DISABILITY_REPORT

from PS_RUN_CNTL_PER060 R

where R.OPRID = $prcs_oprid
and   R.RUN_CNTL_ID = $prcs_run_cntl_id

end-SELECT

display $AsOfDate
display $TypeOfReport

end-procedure

!************************************
!Get Location Descr
!************************************

begin-procedure Get-Location-Descr

begin-SELECT

LOC.DESCR   

  let $Location_Descr = &LOC.DESCR

FROM PS_LOCATION_TBL LOC 
WHERE LOC.SETID = $Setid
AND   LOC.LOCATION = $Location 
AND   LOC.EFFDT = (SELECT MAX(LCTN.EFFDT)
                 FROM PS_LOCATION_TBL LCTN 
                 WHERE LCTN.SETID = LOC.SETID
                 AND LCTN.LOCATION = LOC.LOCATION
                 AND LCTN.EFFDT <= $AsOfToday)
end-SELECT
end-procedure

!************************************
!Get Employee Categorization Descr
!************************************

begin-procedure Get-Empl-Ctg-Descr

begin-SELECT

CTG.DESCR   

  let $Category_Descr = &CTG.DESCR

FROM PS_EMPL_CTG_L1 CTG 
WHERE CTG.LABOR_AGREEMENT = $Agreement
AND  CTG.EMPL_CTG = $Category 
AND CTG.SETID = $SETID_LBR_AGRMNT
AND CTG.EFFDT =
          (SELECT MAX(CTG_L1.EFFDT)
           FROM PS_EMPL_CTG_L1 CTG_L1
           WHERE CTG_L1.SETID = CTG.SETID
           AND CTG_L1.LABOR_AGREEMENT = CTG.LABOR_AGREEMENT
           AND CTG_L1.EMPL_CTG = CTG.EMPL_CTG
           AND CTG_L1.EFFDT <= $AsOfDate)
AND CTG.EFF_STATUS = 'A'

end-SELECT
end-procedure

!************************************
!
!************************************
begin-procedure Process-Main

let $sql-statement = 'PER060.SQR,Delete-Worktable,Delete,PS_R_PER060'
begin-SQL On-Error=SQL-Error
  DELETE FROM PS_R_PER060;
end-SQL

  do Format-DateTime($AsOfDate, $AsOf_YMD, {DEFYMD}, '', '')
  do Get-Values
  do Data-Selection

  if $TypeOfReport = 'A'
      do Create-Report-A
  else
     if $TypeOfReport = 'N'
        do Create-Report-N
     else
        do Create-Report-S
     end-if
  end-if

end-procedure

!************************************
! Data Selection
!************************************
begin-procedure Data-Selection

begin-SQL On-Error=SQL-Error

INSERT INTO PS_R_PER060
  (NAME,SEX,EMPLID,DISABILITY_ITA,FULL_PART_TIME,LABOR_AGREEMENT,EMPL_CTG,LOCATION,SETID,DISABILITY_PERCTG,BIRTHDATE,SETID_LBR_AGRMNT)
  SELECT
  A.NAME,
  A.SEX,
  B.EMPLID,
  B.DISABILITY_ITA,
  C.FULL_PART_TIME,
  C.LABOR_AGREEMENT,
  C.EMPL_CTG,
  C.LOCATION,
  D.SETID,
  B.DISABILITY_PERCTG,
  A.BIRTHDATE,
  C.SETID_LBR_AGRMNT

  FROM  PS_PERSONAL_DT_FST A, PS_DISABILITY B, PS_JOB C, PS_RUN_CNTL_LOCTN D
  WHERE C.HR_STATUS = 'A'
  AND A.EMPLID = B.EMPLID
  AND B.EMPLID = C.EMPLID
  AND D.OPRID = $prcs_oprid
  AND D.RUN_CNTL_ID = $prcs_run_cntl_id
  AND C.LOCATION = D.LOCATION
  AND B.DISABILITY_ITA <> ' '
  AND C.EFFDT =
      (SELECT MAX(H.EFFDT)
       FROM PS_JOB H
       WHERE H.EMPLID = C.EMPLID
         AND H.EMPL_RCD = C.EMPL_RCD
         AND H.EFFDT <= $AsOfDate)
  AND C.EFFSEQ =
      (SELECT MAX(I.EFFSEQ)
       FROM PS_JOB I
       WHERE I.EMPLID = C.EMPLID
         AND I.EMPL_RCD = C.EMPL_RCD
         AND I.EFFDT = C.EFFDT)

end-SQL

end-procedure

!************************
! Create Report Annual
!************************
 
begin-procedure Create-Report-A
begin-SELECT

DISABILITY_ITA
  move &DISABILITY_ITA to $Disability
  move 'DISABILITY_ITA'  to $FieldName
  move &DISABILITY_ITA to $FieldValue
  do Read-Translate-Table
  display $XlatShortName
  print $XlatLongName                   (+1,1)
SEX
  move &SEX to $Sex
  move 'SEX'  to $FieldName
  move &SEX to $FieldValue
  do Read-Translate-Table
  print $XlatLongName                   (0,30)  
COUNT(*)                                (0,40)  

FROM PS_R_PER060 
GROUP BY SEX,DISABILITY_ITA
end-SELECT

end-procedure

!************************
! Create Report Name List
!************************

begin-procedure Create-Report-N

begin-SELECT
N.LOCATION
N.SETID
N.NAME
N.SEX
N.LABOR_AGREEMENT
N.EMPL_CTG
N.DISABILITY_PERCTG
N.FULL_PART_TIME
N.BIRTHDATE
N.SETID_LBR_AGRMNT

  move &N.LOCATION to $Location
  move &N.SETID to $Setid
  do Get-Location-Descr 
  print $Location_Descr                        (+1,1)

  move &N.NAME to $Name
  print $Name                                  (0,30)
  
  move &N.SEX to $Sex
  move 'SEX'  to $FieldName
  move &N.SEX to $FieldValue
  do Read-Translate-Table
  print $XlatLongName                          (0,60)  
  
  move &N.SETID_LBR_AGRMNT to $SETID_LBR_AGRMNT
  move &N.LABOR_AGREEMENT to $Agreement
  move &N.EMPL_CTG to $Category
  do Get-Empl-Ctg-Descr
  print $Category_Descr                        (0,70)

  move &N.DISABILITY_PERCTG to $Percentage
  print $Percentage                            (0,87)
  
  move &N.FULL_PART_TIME to $Time
  move 'FULL_PART_TIME'  to $FieldName
  move &N.FULL_PART_TIME to $FieldValue
  do Read-Translate-Table
  print $XlatLongName                          (0,95)
  
  move &N.BIRTHDATE to $Birthdate
  do Format-DateTime($Birthdate, $Birth_YMD, {DEFYMD}, '', '')
  print $Birth_YMD                             (0,105)

FROM PS_R_PER060 N
!GROUP BY N.LOCATION,N.NAME,N.DISABILITY_ITA
ORDER BY N.LOCATION,N.NAME
end-SELECT

end-procedure

!************************
! Create Report Statistics
!************************

begin-procedure Create-Report-S
let #FULL_F = 0
let #PART_F = 0
let #FULL_M = 0
let #PART_M = 0
let $Location_Old = ' '
begin-SELECT
S.LOCATION
S.SETID
S.SEX
S.FULL_PART_TIME
  move &S.FULL_PART_TIME to $Time
  move &S.LOCATION to $Location
  move &S.SEX to $Sex
  if $Sex = 'F' 
    if $Time = 'F'    
      let #FULL_F = #FULL_F + 1
    else
      let #PART_F = #PART_F + 1
    end-if
  else
    if $Time = 'F'    
      let #FULL_M = #FULL_M + 1
    else
      let #PART_M = #PART_M + 1
    end-if
  end-if
  if $Location <> $Location_Old 
    and $Location_Old <> ' ' 
    move &S.SETID to $Setid
    move $Location_Old to $Location
    do Get-Location-Descr
    print $Location_Descr                    (+1,1)
    if $Sex = 'F'
      if $Time = 'F'
        let #FULL_F = #FULL_F - 1
      else
        let #PART_F = #PART_F - 1
      end-if
    else
      if $Time = 'F'
        let #FULL_M = #FULL_M - 1
      else
        let #PART_M = #PART_M - 1
      end-if
    end-if
    print #FULL_F                              (0,30)
    print #PART_F                              (0,40)
    let #SUM_F = #FULL_F + #PART_F               
    print #SUM_F                               (0,50) 
    print #FULL_M                              (0,60)
    print #PART_M                              (0,70)
    let #SUM_M = #FULL_M + #PART_M               
    print #SUM_M                               (0,80) 
    if $Sex = 'F'
      if $Time = 'F' 
        move 1 to #FULL_F
      else
        move 1 to #PART_F   
      end-if
    else
      if $Time = 'F' 
        move 1 to #FULL_M
      else
        move 1 to #PART_M   
      end-if
    end-if
  end-if
  move &S.LOCATION to $Location
  move $Location to $Location_Old
  
from PS_R_PER060 S
ORDER BY S.SETID,S.LOCATION,S.FULL_PART_TIME
end-SELECT

move &S.SETID to $Setid
move $Location_Old to $Location
do Get-Location-Descr
print $Location_Descr                    (+1,1)
print #FULL_F                            (0,30)
print #PART_F                            (0,40)
let #SUM_F = #FULL_F + #PART_F               
print #SUM_F                             (0,50) 
print #FULL_M                            (0,60)
print #PART_M                            (0,70)
let #SUM_M = #FULL_M + #PART_M               
print #SUM_M                             (0,80) 

end-procedure

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask As Of Date input
#include 'asksrvyr.sqc'  !Years Of Service input
#include 'hrsecty.sqc'   !Get SQR Security parameters
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
!#include 'rellang.sqc'

#Include 'getdptnm.sqc'  !Get-Department-Name procedure
#Include 'getjobtl.sqc'  !Get-Job-Title procedure
#Include 'datemath.sqc'  !Routines for date arithmetic
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
