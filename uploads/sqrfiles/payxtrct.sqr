!***********************************************************************
!***********************************************************************
!  PAYXTRCT: Print contents of Payroll Extract Tables                  *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!   This module contains confidential and proprietary information      *
!   of Oracle; it is not to be copied, reproduced, or transmitted      *
!   in any form, by any means, in whole or in part, nor is it to       *
!   be used for any purpose other than that for which it is            *
!   expressly provided under the applicable license agreement.         *
!                                                                      *
!   Copyright (C) 2006 Oracle. All Rights Reserved.                    *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:05:13:06                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!            $LastUpdate Improve New Page formatting                   !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc'   !Set environment
#Include 'setup02.sqc'  !printer and page-size initialization


!***********************************************************************
! BEGIN-REPORT                                                         *
!***********************************************************************
begin-report

  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term

end-report


!***********************************************************************
! PROCEDURE: Init-Report                                               *
!***********************************************************************
begin-procedure Init-Report

  move 'PAYXTRCT' to $ReportID
  move 'AP TRANSACTIONS PENDING' to $ReportTitle

  do Init-DateTime
  do Init-Number
  show ' '
  show $ReportID ' - ' $ReportTitle
  show ' '

  do Get-Current-DateTime
  do Stdapi-Init

end-procedure Init-Report


!***********************************************************************
! HEADING 6                                                            *
!***********************************************************************
begin-HEADING 6

  #Include 'stdhdg03.sqc'

  print 'SetID'                        (+2,1)         BOLD
  print 'Vendor ID'                    (0,8)          BOLD
  print 'Payment Address'              (0,20)         BOLD
  print 'Invoice ID'                   (0,57)         BOLD
  print 'Empl ID'                      (0,69)         BOLD
  print 'Employee Name'                (0,82)         BOLD
  print 'Pay Mode'                     (0,124)        BOLD
  print 'Spt Pymt'                     (0,134)        BOLD
  print 'Dedn Code'                    (0,144)        BOLD
  print 'GarnID'                       (0,155)        BOLD
  print 'Payment Amount'               (0,163)        BOLD

end-HEADING


!***********************************************************************
! PROCEDURE: Process-Main                                              *
!***********************************************************************
begin-procedure Process-Main

let #lines_printed = 0

begin-select

COUNT(*)  &Vendor_Count
FROM  PS_AP_EXTRACT_LINE
WHERE EXTRACT_TYPE_LINE <> 'T'

end-select

let #Vendor_Total = 0
let #Grand_Total  = 0
let #Vendor_Count = 0
move $AsOfToday to $AsOfDate



begin-select


B.SETID                                              (+1,1)   on-break level=1 skiplines=2 procedure=Print-Vendor-Total
B.VENDOR_ID                                 (0, 8)   on-break level=2 skiplines=2 procedure=Print-Vendor-Total
C.ADDRESS1                                  (0, 20)  on-break level=3 skiplines=2
B.INVOICE_ID                                  (0, 57)  on-break level=4 skiplines=1 procedure=Increment-Line
C.ADDRESS2                                  (+1,20)  on-break level=3 skiplines=2
C.ADDRESS3                                  (+1,20)  on-break level=3 skiplines=2
C.ADDRESS4                                  (+1,20) on-break level=3 skiplines=2
C.CITY
C.STATE

     let $RCITY = rtrim(&C.CITY, ' ')
     let $RSTATE = rtrim(&C.STATE,' ')
     let $CISTATE = $RCITY || ','|| $RSTATE

   PRINT $CISTATE                     (+1,20)   on-break level=3 skiplines=2

C.POSTAL                                       (+1,20) on-break level=3 skiplines=2

   if #Current-Line > 45
     do Set-Lines-Printed
   end-if
   PRINT ' '                          (-5,69)   on-break level=3

B.EMPLID                                         (+0,69) on-break level=5 print=always procedure=new-pages
D.NAME                                           (0, 82)
B.PAY_MODE                                       (0,128)
B.SEPARATE_AP_PAYMNT  (0,138)
B.DEDCD                                          (0,144)
B.GARNID                                         (0,155)
B.AMOUNT                                         (0,163) edit $99,999,999.99




  let #Vendor_Total = #Vendor_Total + &B.AMOUNT
  let #Grand_Total  = #Grand_Total  + &B.AMOUNT
  let #Vendor_Count = #Vendor_Count + 1
  let #lines_printed = #lines_printed + 1


  if #Vendor_Count < &Vendor_Count
  and #Current-Line > 48
     let $Caller = 'Vendor-Count'
     do new-pages
     let $Caller = ' '
  end-if

  if #Vendor_Count = &Vendor_Count
    print ' '  (+1,100)
    do Print-Vendor-Total
  end-if


FROM  PS_AP_EXTRACT_HDR A, PS_AP_EXTRACT_LINE B, PS_VENDOR_ADDR C, PS_PERSON_NAME D
WHERE A.EXTRACT_TYPE_HDR = 'N' AND
      A.SETID            = B.SETID AND
      A.VENDOR_ID        = B.VENDOR_ID AND
      A.INVOICE_ID       = B.INVOICE_ID AND
      B.SETID            = C.SETID AND
      B.VENDOR_ID        = C.VENDOR_ID AND
      C.ADDRESS_SEQ_NUM  = A.REMIT_ADDR_SEQ_NUM AND
      C.EFFDT            = (SELECT MAX(E.EFFDT)
                            FROM   PS_VENDOR_ADDR E
                            WHERE  E.SETID           = C.SETID AND
                                   E.VENDOR_ID       = C.VENDOR_ID AND
                                   E.ADDRESS_SEQ_NUM = C.ADDRESS_SEQ_NUM AND
                                   E.EFFDT          <=  $AsOfDate) AND
      D.EMPLID = B.EMPLID
 ORDER BY B.SETID, B.VENDOR_ID, B.INVOICE_ID, B.EMPLID, B.PAY_MODE, B.DEDCD, B.GARNID
end-select

end-procedure Process-Main


!***********************************************************************
! PROCEDURE: Print-Vendor-Total                                        *
!***********************************************************************
begin-procedure Print-Vendor-Total

show #Current-Line

print '--------------'    (0, 163)
print #Vendor_Total       (+1,163) edit $99,999,999.99

let #Vendor_Total = 0

if #Vendor_Count = &Vendor_Count
  print '--------------'  (+2,163)
  print 'Grand Total'     (+1,144)
  print #Grand_Total      (0, 163) edit $99,999,999.99
  print '--------------'  (+1,163)
end-if

! Print a line beside each identifier line to avoid over printing
! on the next vendor
evaluate #lines_printed

  when = 0
    print ' ' (+4, 163)
    break
  when = 1
    print ' ' (+3, 163)
    break
  when = 2
    print ' ' (+2, 163)
    break
  when = 3
    print ' ' (+1, 163)
    break
 end-evaluate

 let #lines_printed = 0

 if #Vendor_Count < &Vendor_Count
  if #Current-Line >= 48
    new-page
    print ' ' (-1, 123)  ! to offset the 2 lines be skipped on break
  end-if
 end-if

end-procedure Print-Vendor-Total

!***********************************************************************
! PROCEDURE: Increment-Line                                            *
!***********************************************************************
begin-procedure Increment-Line

  let #lines_printed = #lines_printed + 1

  let $Caller = 'Increment-Line'
  do new-pages
  let $Caller = ' '

end-procedure Increment-Line

!***********************************************************************
! PROCEDURE: new-pages                                                 *
!***********************************************************************
begin-procedure New-pages

  if #Current-Line >= 48 and #lines_printed > 5
     new-page
     let #Current-Line = 7


     print  &B.SETID                       (+1,1)
     print  &B.VENDOR_ID                   (0, 8)
     print  &C.ADDRESS1                    (0, 20)
     print  &C.ADDRESS2                    (+1,20)
     print  &C.ADDRESS3                    (+1,20)
     print  &C.ADDRESS4                    (+1,20)
     PRINT  $CISTATE                       (+1,20)
     print  &C.POSTAL                      (+1,20)
     if $Caller = 'Vendor-Count'
     or $Caller = 'Increment-Line'
       print  ' '                            (-6,7)
     else
       print  ' '                            (-5,7)
     end-if


     let #lines_printed = 0

  end-if

end-procedure New-pages


!***********************************************************************
! PROCEDURE: Set-Lines-Printed                                         *
!***********************************************************************
begin-procedure Set-Lines-Printed

 if #Current-Line > 52
   let #Lines_overed = #Current-Line - 52
   if #Lines_overed > #lines_printed
     let #lines_printed = #Lines_overed
   end-if
 end-if

end-procedure Set-Lines-Printed

!**************************************************************************
#Include 'reset1.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'stdapi.sqc'    !Update Process API
