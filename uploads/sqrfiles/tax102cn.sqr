!***********************************************************************
! TAX102CN: Health Insurance Premium Report                            *
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!   This software and related documentation are provided under a       *
!   license agreement containing restrictions on use and               *
!   disclosure and are protected by intellectual property              *
!   laws. Except as expressly permitted in your license agreement      *
!   or allowed by law, you may not use, copy, reproduce,               *
!   translate, broadcast, modify, license, transmit, distribute,       *
!   exhibit, perform, publish or display any part, in any form or      *
!   by any means. Reverse engineering, disassembly, or                 *
!   decompilation of this software, unless required by law for         *
!   interoperability, is prohibited.                                   *
!   The information contained herein is subject to change without      *
!   notice and is not warranted to be error-free. If you find any      *
!   errors, please report them to us in writing.                       *
!                                                                      *
!   Copyright (C) 1988, 2010, Oracle and/or its affiliates.            *
!   All Rights Reserved.                                               *
!***********************************************************************
!                                                                      *
!                                                                      *
!***********************************************************************
!                                                                      *
!          $Date:  2010/11/02:12:50:53                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  813289                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#include 'setup31.sqc'     ! Init printer and page size

begin-report
  do Init-Report
  do Process-Main
  do Reset
  do Stdapi-Term
end-report

begin-procedure Init-Report
    do Stdapi-Init
    move 'TAX102CN' to $ReportID
    do Get-Report-Language          ! Procedure that decides the report language
                                    ! and then calls 'Report-Translation' procedure
                                    ! that reads the language dep. text.

    do Init-DateTime
    do Init-Number
    do Get-Current-DateTime
    do Get-Calendar-Year-Id

    if $Prcs_Process_Instance = ''

      while 1 = 1
         input $ReportParameter maxlen=1 'Enter Report Parameter : R (Run Id) or M (Month) ?'
         uppercase $ReportParameter
         if $ReportParameter = 'M'
           input $Calendar_Year 'Enter Year, e.g. 1990'
           input $MonthCd 'Enter Month e.g. 1, 2'
           input $Report_Option maxlen=1 'Summary or Detail Report ? (S/D)'
           break
         else
           if $ReportParameter = 'R'
             input $RunID 'Enter Run Id'
             uppercase $RunID
             input $Report_Option maxlen=1 'Summary or Detail Report ? (S/D)'
             do Get-month-year
             break
           end-if
         end-if
      end-while
    else
      do Select-Parameters
      move #RC_PAY.Balance_Year to $Calendar_Year 9999
      move #RC_PAY.Balance_Period       to $MonthCd
      move $RC_PAY.Run_ID        to $RunID
      move $RC_PAY.REPORT_OPTION to $Report_Option
      if Rtrim($RunID, ' ')= ''
        let $ReportParameter = 'M'
      else
        let $ReportParameter = 'R'
        do Get-month-year
      end-if

    end-if

    move $Calendar_Year to #Calendar_Year
    move $MonthCd to #MonthCd
    move #MonthCd  to $MonthCd 09
    move $Calendar_Year to $AsOfDate
    concat '-' with $AsOfDate
    concat $MonthCd with $AsOfDate
    concat '-01' with $AsOfDate
    move '-' to $DDelimiter
    move '1' to $DDLZero
    move '0' to $MMLZero
    move '1' to $Year4
    do Format-DateTime($AsOfDate, $AsOfDate, {DEFYMD}, '', 'NATIVE')

    if $Report_Option = 'D'
       move $Tax102cn_Health_ins_det to $ReportTitle
    else
       move $Tax102cn_Health_ins_sum to $ReportTitle
    end-if
    display $ReportTitle

    move '' to $Report_Status
    move '' to $Company
    move '' to $priorCompany

end-procedure

begin-procedure Get-month-year

begin-SELECT
MY1.BALANCE_YEAR
MY1.BALANCE_PERIOD
  move &MY1.Balance_Year     to $Calendar_Year
  move &MY1.Balance_Period   to $MonthCd

FROM PS_PAY_CALENDAR    MY,
     PS_PAY_CAL_BAL_ID  MY1
WHERE MY.RUN_ID      = $RunID
AND   MY.PAY_END_DT  = MY1.PAY_END_DT
AND   MY1.BALANCE_ID = $Calendar_Year_Id

end-SELECT

end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from TAX102CN  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('TAX102CN', 'HEALTH_INS_SUM'   , $Tax102cn_Health_ins_sum   , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'YEAR'             , $Tax102cn_year             , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'HEALTH_INS_DET'   , $Tax102cn_Health_ins_det   , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'MONTH'            , $Tax102cn_month            , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'ALL_TOTALS'       , $Tax102cn_all_totals       , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'PROVINCE'         , $Tax102cn_province         , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'TAX_GROSS'        , $Tax102cn_tax_gross        , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'HLTH_INS_RATE'    , $Tax102cn_hlth_ins_rate    , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'PREMIUM'          , $Tax102cn_premium          , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'EMPLID'           , $Tax102cn_emplid           , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'EMPL_NAME'        , $Tax102cn_name             , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'PROV_TOTAL'       , $Tax102cn_prov_total       , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'COMP_TOTAL'       , $Tax102cn_comp_total       , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'ALL_PROVINCES'    , $Tax102cn_all_provs        , #dummy_width)
   do Get_Field_Information ('TAX102CN', 'PAYRUN_ID'        , $Tax102cn_payrun_id        , #dummy_width)

end-procedure

begin-heading 5

#include 'stdhtr02.sqc'
!#include 'stdhdgtr.sqc'

  print $Tax102cn_province    (+1,1)
  print ':'                   (0,0)

  if $Report_Option = 'D'
     print $Province             (0,13)
  else
     print $Tax102cn_all_provs   (0,13)
  end-if
  if $ReportParameter = 'R'
     print $Tax102cn_payrun_id   (+1,1)
     print $RunID                (0,+1)
  else
     print $Tax102cn_year      (+1,1)
     print #Calendar_year      (0,+1) edit 9999
     print $Tax102cn_month     (0,+2)
     print #MonthCd            (0,+1) edit 99
  end-if

end-heading

begin-procedure Process-Main   ! Main report processing

  do Build-Where-Clause

  if RTRIM($Report_Option,' ') = 'D'
     do Detail-Report
  else
     do Summary-Report
  end-if

end-procedure

begin-procedure Summary-Report

  move 0.00 to #Comp_tax_tot
  move 0.00 to #Comp_txgrs_tot
  move 'Y' to $First_Row

begin-SELECT
C.COMPANY
C.PROVINCE
#ifndef DB2
SUM(C.TAX_CUR)                  &Tax_Cur
SUM(C.TXGRS_CUR)                &Txgrs_Cur
#else
DECIMAL(SUM(C.TAX_CUR),15,3)   to  &Tax_Cur
DECIMAL(SUM(C.TXGRS_CUR),15,3) to  &Txgrs_Cur
#endif

  if $First_Row = 'Y'
     move 'N' to $First_Row
     move &C.Company  to $Company

     do Summary-Column-Labels
  end-if

  if &C.Company  <> $Company
     do Company-Chg
     new-page
     move &C.Company  to $Company
     do Summary-Column-Labels
  end-if

  move &C.Province to $Province
  do Get-Ins-Rt-Override
  move &Tax_Cur   to #Tax_Cur
  move &Txgrs_Cur to #Txgrs_Cur
  add  &TAX_CUR   to #Comp_tax_tot     round=2
  add  &TXGRS_CUR to #Comp_txgrs_tot   round=2

  do Print-Summary-Lines

FROM PS_PAY_TAX_CAN     C,
     PS_PAY_CALENDAR    D,
     PS_PAY_CAL_BAL_ID  D1
WHERE C.COMPANY         = D.COMPANY
  AND C.PAYGROUP        = D.PAYGROUP
  AND C.PAY_END_DT      = D.PAY_END_DT
  AND C.TAX_CLASS_CAN   = 'HTX'
  AND D.COMPANY         = D1.COMPANY
  AND D.PAYGROUP        = D1.PAYGROUP
  AND D.PAY_END_DT      = D1.PAY_END_DT
  AND D1.BALANCE_ID     = $Calendar_Year_Id
#ifdef MVS
  \$Where_1\
#else
  [$Where_1]
#end-if
GROUP BY C.COMPANY,
         C.PROVINCE
ORDER BY C.COMPANY ASC,
         C.PROVINCE ASC
end-SELECT

if $First_Row = 'N'
   do Company-Chg
end-if

end-procedure

begin-procedure Detail-Report

  move 0.00 to #prov_tax_tot
  move 0.00 to #prov_txgrs_tot
  move 'Y' to $First_Row

begin-SELECT
TAX.COMPANY
TAX.PROVINCE
PER.EMPLID
PER.NAME
TAX.TAX_CUR
TAX.TXGRS_CUR

  if $First_Row = 'Y'
     move 'N' to $First_Row
     move &TAX.Company   to $Company
     move &TAX.Province  to $Province

     do Detail-Column-Labels

  end-if

  if &TAX.Company   <>  $Company or
     &TAX.Province  <>  $Province

     do Province-Chg
     new-page
     do Detail-Column-Labels

  end-if

  move &TAX.Company   to $Company
  move &TAX.Province  to $Province
  move &TAX.TAX_CUR   to #tax_cur
  move &TAX.TXGRS_CUR to #txgrs_cur

  add  &TAX.TAX_CUR   to #prov_tax_tot     round=2
  add  &TAX.TXGRS_CUR to #prov_txgrs_tot   round=2
  do Print-Detail-Lines

FROM PS_PAY_TAX_CAN     TAX,
     PS_PAY_CHECK       CHQ,
     PS_PERSON_NAME    PER,
     PS_PAY_CALENDAR    CAL,
     PS_PAY_CAL_BAL_ID  BID
WHERE TAX.COMPANY         = CAL.COMPANY
  AND TAX.PAYGROUP        = CAL.PAYGROUP
  AND TAX.PAY_END_DT      = CAL.PAY_END_DT
  AND TAX.TAX_CLASS_CAN   = 'HTX'
  AND CHQ.COMPANY         = TAX.COMPANY
  AND CHQ.PAYGROUP        = TAX.PAYGROUP
  AND CHQ.PAY_END_DT      = TAX.PAY_END_DT
  AND CHQ.OFF_CYCLE       = TAX.OFF_CYCLE
  AND CHQ.PAGE_NUM           = TAX.PAGE_NUM
  AND CHQ.LINE_NUM           = TAX.LINE_NUM
  AND CHQ.SEPCHK          = TAX.SEPCHK
  AND CHQ.EMPLID          = PER.EMPLID
  AND CAL.COMPANY         = BID.COMPANY
  AND CAL.PAYGROUP        = BID.PAYGROUP
  AND CAL.PAY_END_DT      = BID.PAY_END_DT
  AND BID.BALANCE_ID     = $Calendar_Year_Id
#ifdef MVS
  \$Where_2\
#else
  [$Where_2]
#end-if
ORDER BY TAX.COMPANY ASC,
         TAX.PROVINCE ASC,
         PER.EMPLID ASC
end-SELECT

  if $First_Row <> 'Y'
     do Province-Chg
  end-if

end-procedure

begin-procedure Get-Ins-Rt-Override

  move 'N' to $Override_Found

begin-SELECT
A.HEALTH_INS_RT

  move 'Y' to $Override_Found
  move &A.Health_Ins_Rt to #Health_Ins_Rt

FROM PS_CAN_USR_TAX_PRV A
WHERE  A.COMPANY  = &C.COMPANY
   AND A.PROVINCE = &C.PROVINCE
   AND A.EFFDT =
     (SELECT MAX(EFFDT)
        FROM PS_CAN_USR_TAX_PRV B
       WHERE B.COMPANY   = A.COMPANY
         AND B.PROVINCE  = A.PROVINCE
         AND B.EFFDT    <= $AsOfDate)
end-SELECT

  if $Override_Found <> 'Y'
     do Get-Ins-Rt-Regular
  end-if

end-procedure

begin-procedure Get-Ins-Rt-Regular

begin-SELECT
A1.HEALTH_INS_RT

  move &A1.Health_Ins_Rt to #Health_Ins_Rt

FROM PS_CAN_TAX_PROV A1
WHERE A1.EFFDT =
     (SELECT MAX(EFFDT)
        FROM PS_CAN_TAX_PROV B1
       WHERE A1.PROVINCE  = &C.Province
         AND B1.PROVINCE  = A1.PROVINCE
         AND B1.EFFDT    <= $AsOfDate)
end-SELECT
end-procedure

begin-procedure Print-Detail-Lines

  do Format-Number(#Tax_cur, $Tax_cur, 'b99,999,999.99')
  do Format-Number(#Txgrs_cur, $Txgrs_cur, 'b99,999,999.99')

  print &PER.Emplid         (+1,1)
  print &PER.Name           (0,15)
  print $Txgrs_cur          (0,65)
  print $Tax_cur            (0,83)

end-procedure

begin-procedure Print-Summary-Lines

  do Format-Number(#Tax_cur, $Tax_cur, 'b99,999,999.99')
  do Format-Number(#Health_Ins_Rt, $Ins_Rt, 'b99999.999999')
  do Format-Number(#Txgrs_cur, $Txgrs_cur, 'b99,999,999.99')

  print $Province           (+2,1)
  print $Txgrs_cur          (0,22)
  print $Ins_Rt             (0,41)
  print $Tax_cur            (0,57)

end-procedure

begin-procedure Detail-Column-Labels

  print $Tax102cn_emplid                 (+2,1)
  print $Tax102cn_name                   (0,15)
  print $Tax102cn_tax_gross              (0,68)
  print $Tax102cn_premium                (0,90)
  print ' '                              (+1,1)

end-procedure

begin-procedure Company-Chg

  do Format-Number(#Comp_Tax_Tot, $Tax_Tot, 'b99,999,999.99')
  do Format-Number(#Comp_Txgrs_Tot, $Txgrs_Tot, 'b99,999,999.99')

  print $Tax102cn_comp_total                (+2,1)
  print $Txgrs_Tot                          (0,22)
  print $Tax_Tot                            (0,57)

  move 0.00 to #Comp_Tax_Tot
  move 0.00 to #Comp_Txgrs_Tot

end-procedure

begin-procedure Summary-Column-Labels

  print $Tax102cn_province               (+2,1)
  print $Tax102cn_tax_gross              (0,25)
  print $Tax102cn_hlth_ins_rate          (0,41)
  print $Tax102cn_premium                (0,64)
  print ' '                              (+1,1)

end-procedure

begin-procedure Province-Chg

  do Format-Number(#prov_tax_tot, $Tax_Tot, 'b99,999,999.99')
  do Format-Number(#prov_txgrs_tot, $Txgrs_Tot, 'b99,999,999.99')

  print $Tax102cn_prov_total                (+2,15)
  print $Txgrs_Tot                          (0,65)
  print $Tax_Tot                            (0,83)

  move 0.00 to #prov_tax_tot
  move 0.00 to #prov_txgrs_tot

end-procedure

begin-procedure Build-Where-Clause

  if $ReportParameter = 'M'
    let $W1 = 'AND D1.BALANCE_YEAR'
    let $W2 = ' = '
    let $W3 = $Calendar_Year
    let $W4 = ' AND '
    let $W5 = 'D1.BALANCE_PERIOD '
    let $W6 = '='
    let $W7 = $MonthCd
    let $Where_1 = $W1 || $W2 || $W3 || $W4 || $W5 || $W6 || $W7

    let $W11 = 'AND BID.BALANCE_YEAR'
    let $W51 = 'BID.BALANCE_PERIOD '
    let $Where_2 = $W11 || $W2 || $W3 || $W4 || $W51 || $W6 || $W7

  end-if

  if $ReportParameter = 'R'
    let $W1 = 'AND D.RUN_ID'
    let $W2 = ' = '''
    let $W3 = $RunID
    let $W4 = ''''
    let $Where_1 = $W1 || $W2 || $W3  || $W4

    let $W11 = 'AND CAL.RUN_ID'
    let $Where_2 = $W11 || $W2 || $W3  || $W4

  end-if

end-procedure

#include 'reset.sqc'     !Reset Printer
#include 'curdttim.sqc'  !Current Date and Time
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'stdapi.sqc'    !Routines to Update Run Status
#Include 'payrctl2.sqc'  !Get-Run-Control procedure
#Include 'getbalid.sqc'  !Get-Calendar-Year-Id
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
