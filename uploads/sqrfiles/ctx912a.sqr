!***********************************************************************
!  CTX912A:    PRINT T4A Magnetic Media Audit Report                   *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/20:03:30:02                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size init
#Include 'ctxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#define TAXFORM_BOX
#define TAXFORM_NOTES
#include 'rellang.sqc'

begin-heading 5
  #Include 'stdhdgtr.sqc'
  print $TaxYear           (3,,)      center
end-heading

begin-report

  do Init-Report

  do Process-Main

  close 10

#ifdef PRCSSCHD
  do StdAPI-Term
#endif

end-report

begin-procedure Init-Report

  do Init-DateTime

#ifdef PRCSSCHD
  do StdAPI-Init
#endif
  do Initialization
end-procedure

begin-procedure Initialization

#define ColR 120

  move 'N' to $FileAtEnd

  do Get-Current-DateTime

  move '1' to $Year4
  move '-' to $DDelimiter

  do Format-DateTime($AsOfToday, $AsOfDateYMD, {DEFYMD},'','')
  move $AsOfDateYMD to $AsOfYear xxxx

  move $AsOfYear  to #AsOfYear
  subtract 1 from #AsOfYear

  do Get-Can-Tax-Processing-Params

  move &TX.Balance_Year to #TaxYear
  move #TaxYear to $TaxYear 9999

  let $AsOfDate = $TaxYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP},'','native')

  if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
    display ''
    display 'Current Year is not one greater than Tax Reporting Year.'
    input $Answer maxlen=1 'Current Year is not one greater than Tax Reporting Year. Do you want to continue? (Y/N)'
    uppercase $Answer

    if $Answer <> 'Y'
      stop
    end-if
  end-if

  do Open-Files

  do Array-Create
  do Load-Box-Arrays

  move 'CTX912A' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  move $Ctx912a_Title_t4a_audit to $ReportTitle
  display 'PRINTING T4A MAGNETIC MEDIA AUDIT REPORT'

end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from CTX912A  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('CTX912A', 'TITLE_T4A_AUDIT' , $Ctx912a_Title_t4a_audit , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TRANS_RECORD'    , $Ctx912a_Trans_record    , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TRANS_NUMBER'    , $Ctx912a_Trans_number    , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TRANS_TYPE'      , $Ctx912a_Trans_type      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'SUMM_RECS'       , $Ctx912a_Summ_recs       , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TRANS_NAME'      , $Ctx912a_Trans_name      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TRANS_NAME2'     , $Ctx912a_Trans_name2     , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TRANS_ADDR'      , $Ctx912a_Trans_addr      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TRANS_ADDR2'     , $Ctx912a_Trans_addr2     , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TRANS_CITY'      , $Ctx912a_Trans_city      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TRANS_PROV'      , $Ctx912a_Trans_prov      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TRANS_COUNTRY'   , $Ctx912a_Trans_country   , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TRANS_PST_CODE'  , $Ctx912a_Trans_pst_code  , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TRANS_CONT_NAME' , $Ctx912a_Trans_cont_name , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TRANS_CONT_PHNE' , $Ctx912a_Trans_cont_phne , #dummy_width)
   do Get_Field_Information ('CTX912A', 'SIN'             , $Ctx912a_Sin             , #dummy_width)
   do Get_Field_Information ('CTX912A', 'RECPT_BUS_NUM'   , $Ctx912a_Recpt_bus_num   , #dummy_width)
   do Get_Field_Information ('CTX912A', 'RECPT_CORP'      , $Ctx912a_Recpt_corp      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'RECPT_CORP2'     , $Ctx912a_Recpt_corp2     , #dummy_width)
   do Get_Field_Information ('CTX912A', 'LANGUAGE'        , $Ctx912a_Language        , #dummy_width)
   do Get_Field_Information ('CTX912A', 'EMPLID'          , $Ctx912a_Emplid          , #dummy_width)
   do Get_Field_Information ('CTX912A', 'BUS_NUMBER'      , $Ctx912a_Bus_number      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'T4A_BOX_DATA'    , $Ctx912a_T4a_box_data    , #dummy_width)
   do Get_Field_Information ('CTX912A', 'FOOTNOTE_DATA'   , $Ctx912a_Footnote_data   , #dummy_width)
   do Get_Field_Information ('CTX912A', 'NO_FOOT_MSG1'    , $Ctx912a_No_foot_msg1    , #dummy_width)
   do Get_Field_Information ('CTX912A', 'NO_FOOT_MSG2'    , $Ctx912a_No_foot_msg2    , #dummy_width)
   do Get_Field_Information ('CTX912A', 'OTHER_DATA'      , $Ctx912a_Other_data      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'BOX16_CODE'      , $Ctx912a_Box16_code      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'BOX18_CODE'      , $Ctx912a_Box18_code      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'BOX24_CODE'      , $Ctx912a_Box24_code      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'BOX26_CODE'      , $Ctx912a_Box26_code      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'BOX27_CODE'      , $Ctx912a_Box27_code      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'BOX28_CODE'      , $Ctx912a_Box28_code      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'BOX32_CODE'      , $Ctx912a_Box32_code      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'BOX38_CODE'      , $Ctx912a_Box38_code      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'PENSION_PLANA'   , $Ctx912a_Pension_planA   , #dummy_width)
   do Get_Field_Information ('CTX912A', 'BOX40_CODE'      , $Ctx912a_Box40_code      , #dummy_width)
   do Get_Field_Information ('CTX912A', 'FOOTNOTE_DESC'   , $Ctx912a_Footnote_desc   , #dummy_width)
   do Get_Field_Information ('CTX912A', 'SUMM_REC_MSG1'   , $Ctx912a_Summ_rec_msg1   , #dummy_width)
   do Get_Field_Information ('CTX912A', 'SUMM_REC_MSG2'   , $Ctx912a_Summ_rec_msg2   , #dummy_width)
   do Get_Field_Information ('CTX912A', 'SUMM_REC'        , $Ctx912a_Summ_rec        , #dummy_width)
   do Get_Field_Information ('CTX912A', 'BUS_NUMBER_CAPS' , $Ctx912a_Bus_number_caps , #dummy_width)
   do Get_Field_Information ('CTX912A', 'EMPLER_NAME'     , $Ctx912a_Empler_name     , #dummy_width)
   do Get_Field_Information ('CTX912A', 'EMPLER_NAME2'    , $Ctx912a_Empler_name2    , #dummy_width)
   do Get_Field_Information ('CTX912A', 'EMPLER_NAME3'    , $Ctx912a_Empler_name3    , #dummy_width)
   do Get_Field_Information ('CTX912A', 'ADDRESS'         , $Ctx912a_Address         , #dummy_width)
   do Get_Field_Information ('CTX912A', 'ADDRESS2'        , $Ctx912a_Address2        , #dummy_width)
   do Get_Field_Information ('CTX912A', 'CITY'            , $Ctx912a_City            , #dummy_width)
   do Get_Field_Information ('CTX912A', 'PROVINCE'        , $Ctx912a_Province        , #dummy_width)
   do Get_Field_Information ('CTX912A', 'COUNTRY'         , $Ctx912a_Country         , #dummy_width)
   do Get_Field_Information ('CTX912A', 'POSTAL_CODE'     , $Ctx912a_Postal_code     , #dummy_width)
   do Get_Field_Information ('CTX912A', 'CONTACT_NAME'    , $Ctx912a_Contact_name    , #dummy_width)
   do Get_Field_Information ('CTX912A', 'CONTACT_PHNE'    , $Ctx912a_Contact_phne    , #dummy_width)
   do Get_Field_Information ('CTX912A','CONT_PHNE_EXT'   , $Ctx912a_Cont_phne_ext   , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TAX_YEAR'        , $Ctx912a_Tax_year        , #dummy_width)
   do Get_Field_Information ('CTX912A', 'TOT_T4A_RECS'    , $Ctx912a_Tot_t4a_recs    , #dummy_width)
   do Get_Field_Information ('CTX912A', 'PENSION_PLAN'    , $Ctx912a_Pension_plan    , #dummy_width)
   do Get_Field_Information ('CTX912A', 'PENSION_PLAN2'   , $Ctx912a_Pension_plan2   , #dummy_width)
   do Get_Field_Information ('CTX912A', 'PENSION_PLAN3'   , $Ctx912a_Pension_plan3   , #dummy_width)
   do Get_Field_Information ('CTX912A', 'SIN1'            , $Ctx912a_Sin1            , #dummy_width)
   do Get_Field_Information ('CTX912A', 'SIN2'            , $Ctx912a_Sin2            , #dummy_width)
   do Get_Field_Information ('CTX912A', 'PRINT_DATA_MSG1' , $Ctx912a_Print_data_msg1 , #dummy_width)
   do Get_Field_Information ('CTX912A', 'PRINT_DATA_MSG2' , $Ctx912a_Print_data_msg2 , #dummy_width)
   do Get_Field_Information ('CTX912A', 'ACCUM_TOTALS'    , $Ctx912a_Accum_totals    , #dummy_width)
   do Get_Field_Information ('CTX912A', 'BUS_NUM'         , $Ctx912a_Bus_num         , #dummy_width)
   do Get_Field_Information ('CTX912A', 'T4A_#SLIPS'      , $Ctx912a_T4a_#slips      , #dummy_width)


end-procedure

begin-procedure Open-Files

    open '{IMPORTPREFIX}CTXAM{IMPORTSUFFIX}' as 10 for-reading record=744


end-procedure


begin-procedure Array-Create

  create-array name=PrT4A_Area size=50 -
    field=PT4A_Box:char                -
    field=PT4A_Descr:char

  create-array name=PrFN_Area size=50 -
    field=Pfn_Box:char                -
    field=Pfn_Descr:char

end-procedure

begin-procedure Load-Box-Arrays

    move 0 to #i
    move 0 to #j

begin-SELECT
M.TAXFORM_ID
M.BOX
M.DESCR
M.EFFDT

   let $M.BOX = RTRIM(&M.BOX, ' ')
   let $TAXFORM_BOX-DESCR = &M.DESCR

   do Get_Related_TAXFORM_BOX(&M.BOX,&M.EFFDT,&M.TAXFORM_ID)

   put $M.Box $TAXFORM_BOX-DESCR into PrT4A_Area(#i)
         PT4A_Box PT4A_Descr
       add 1 to #i
       move #i to #max_T4Aboxes



FROM PS_TAXFORM_BOX M
WHERE TAXFORM_ID = 'A' AND
      EFFDT = (SELECT MAX(EFFDT)
               FROM PS_TAXFORM_BOX
               WHERE TAXFORM_ID = 'A'
                 AND EFFDT <= $AsOfDate)
ORDER BY M.BOX ASC
end-SELECT

begin-SELECT
N.TAXFORM_ID
N.BOX
N.BOX_NOTE_TEXT
N.EFFDT

   let $N.BOX = RTRIM(&N.BOX, ' ')
   let $TAXFORM_NOTES-BOX_NOTE_TEXT = &N.BOX_NOTE_TEXT

   do Get_Related_TAXFORM_NOTES(&N.BOX,&N.EFFDT,&N.TAXFORM_ID)

   put $N.Box $TAXFORM_NOTES-BOX_NOTE_TEXT into PrFN_Area(#j)
         Pfn_Box Pfn_Descr
       add 1 to #j
       move #j to #max_FNboxes



FROM PS_TAXFORM_NOTES N
WHERE TAXFORM_ID = 'A' AND
      EFFDT = (SELECT MAX(EFFDT)
               FROM PS_TAXFORM_NOTES
               WHERE TAXFORM_ID = 'A'
                 AND EFFDT <= $AsOfDate)
ORDER BY N.BOX ASC
end-SELECT

end-procedure

begin-procedure Process-Main

  while 1 = 1

   if $FileAtEnd = 'Y'
       break
    else
      do Read-File
      if $FileAtEnd = 'Y'
         break
      else
      evaluate $TypeCode

        when = '901'
          do Print-Transmittal-Record
          new-page

        when = '100'
          do Print-Detail

        when = '301'
          new-page
          do Print-Accumulated-Data
          new-page
          do Print-Summary
          new-page

      end-evaluate
      end-if
    end-if
   end-while

end-procedure

begin-procedure Read-File

  read 10 into  $T4AData:744


    if #end-file = 1
      move 'Y' to $FileAtEnd
    else
      extract $TypeCode from $T4AData 0 3
    end-if


end-procedure

begin-procedure Print-Transmittal-Record

   extract $TransmitterNumber from $T4AData   4   8
   extract $TransmitterType   from $T4AData  12   1
   extract $SummaryCount      from $T4AData  13   6
   extract $TransmitName1     from $T4AData  19  30
   extract $TransmitName2     from $T4AData  49  30
   extract $TransmitStreet1   from $T4AData  79  30
   extract $TransmitStreet2   from $T4AData 109  30
   extract $TransmitCity      from $T4AData 139  28
   extract $TransmitProvince  from $T4AData 167   2
   extract $TransmitCountry   from $T4AData 169   3
   extract $TransmitPostalCd  from $T4AData 172  10
   extract $TransContactName  from $T4AData 182  22
   extract $TransContactPhone from $T4AData 204  10
   extract $Language          from $T4AData 214   1

   print $Ctx912a_Trans_record           (+2,3)
   print $Ctx912a_Trans_number           (+2,3)
   print $TransmitterNumber              (0,50)
   print $Ctx912a_Trans_type             (+1,3)
   print $TransmitterType                (0,50)
   print $Ctx912a_Summ_recs              (+1,3)
   let $SumCount = LTRIM($SummaryCount, '0')
   print $SumCount                       (0,50)
   print $Ctx912a_Trans_name             (+1,3)
   print $TransmitName1                  (0,50)
   print $Ctx912a_Trans_name2            (+1,3)
   print $TransmitName2                  (0,50)
   print $Ctx912a_Trans_addr             (+1,3)
   print $TransmitStreet1                (0,50)
   print $Ctx912a_Trans_addr2            (+1,3)
   print $TransmitStreet2                (0,50)
   print $Ctx912a_Trans_city             (+1,3)
   print $TransmitCity                   (0,50)
   print $Ctx912a_Trans_prov             (+1,3)
   print $TransmitProvince               (0,50)
   print $Ctx912a_Trans_country          (+1,3)
   print $TransmitCountry                (0,50)
   print $Ctx912a_Trans_pst_code         (+1,3)
   print $TransmitPostalCd               (0,50)
   print $Ctx912a_Trans_cont_name        (+1,3)
   print $TransContactName               (0,50)
   print $Ctx912a_Trans_cont_phne        (+1,3)
   print $TransContactPhone              (0,50) edit (xxx)bxxx-xxxx
   print $Ctx912a_Language               (+1,3)
   print $Language                       (0,50)

end-procedure

begin-procedure Print-Detail

   extract $Surname           from $T4AData   3  20
   extract $FirstName         from $T4AData  23  12
   extract $MI                from $T4AData  35   1
   extract $SIN               from $T4AData  36   9
   extract $E_BusNum          from $T4AData  45  15
   extract $E_Corp1           from $T4AData  60  30
   extract $E_Corp2           from $T4AData  90  30
   extract $Street1           from $T4AData 121  30
   extract $Street2           from $T4AData 151  30
   extract $City              from $T4AData 181  28
   extract $Province          from $T4AData 209   2
   extract $CountryCd         from $T4AData 211   3
   extract $PostalCode        from $T4AData 214  10
   extract $EmplID            from $T4AData 224  20
   extract $RCTNumber         from $T4AData 244  15
   extract $Box16             from $T4AData 259   9
   extract $Box16Code         from $T4AData 268   2
   extract $Box16B            from $T4AData 270   9
   extract $Box16D            from $T4AData 279   9
   extract $Box18             from $T4AData 288   9
   extract $Box18Code         from $T4AData 297   2
   extract $Box18E            from $T4AData 299   9
   extract $Box18G            from $T4AData 308   9
   extract $Box18B            from $T4AData 317   9
   extract $Box18C            from $T4AData 326   9
   extract $Box18A            from $T4AData 335   9
   extract $Box18D            from $T4AData 344   9
   extract $Box18F            from $T4AData 353   9
   extract $Box20             from $T4AData 362   9
   extract $Box22             from $T4AData 371   9
   extract $Box24             from $T4AData 380   9
   extract $Box24Code         from $T4AData 389   2
   extract $Box24B            from $T4AData 391   9
   extract $Box24A            from $T4AData 400   9
   extract $Box26             from $T4AData 409   9
   extract $Box26Code         from $T4AData 418   2
   extract $Box26A            from $T4AData 420   9
   extract $Box27             from $T4AData 429   9
   extract $Box27Code         from $T4AData 438   2
   extract $Box27A            from $T4AData 440   9
   extract $Box28             from $T4AData 449   9
   extract $Box28Code         from $T4AData 458   2

   extract $Box28J            from $T4AData 460   9
   extract $Box28R            from $T4AData 469   9
   extract $Box28S            from $T4AData 478   9
   extract $Box28M            from $T4AData 487   9
   extract $Box28N            from $T4AData 496   9
   extract $Box28O            from $T4AData 505   9
   extract $Box28C            from $T4AData 514   9
   extract $Box28D            from $T4AData 523   9
   extract $Box28F            from $T4AData 532   9
   extract $Box28E            from $T4AData 541   9
   extract $Box28T            from $T4AData 550   9
   extract $Box28U            from $T4AData 559   9
   extract $Box30             from $T4AData 568   9
   extract $Box32             from $T4AData 577   9
   extract $Box32Code         from $T4AData 586   2
   extract $Box32A            from $T4AData 588   9
   extract $Box34             from $T4AData 597   7
   extract $PensionPlanA      from $T4AData 604   7
   extract $Box38Code         from $T4AData 611   2
   extract $FNDescr           from $T4AData 613  60
   extract $Box40             from $T4AData 673   9
   extract $Box40Code         from $T4AData 682   2
   extract $Box42             from $T4AData 684   9

   extract $Box46             from $T4AData 693   9

  next-listing need=9

  let $Surname = RTRIM($Surname, ' ')
  print $Surname (+3,3)
  print ',' (0,0)
  let $FirstName = RTRIM($FirstName, ' ')
  print $FirstName (0,+1)
  print $MI (0,+1)
  print $Ctx912a_Sin    (0,40)
  print $SIN (0,46) edit xxx-xxx-xxx
  print $Ctx912a_Emplid (0,61)
  print $EmplID (0,70)

  print $Ctx912a_Bus_num    (0,90)
  print $RCTNumber (0,104)

  print $Ctx912a_Recpt_bus_num  (+2,3)
  if $E_BusNum <> '000000000000000'
    print $E_BusNum             (0,35)
  end-if

  print $Ctx912a_Recpt_corp     (+1,3)
  if $E_Corp1 <> ''
    print $E_Corp1              (0,35)
  end-if

  print $Ctx912a_Recpt_corp2    (+1,3)
  if $E_Corp2 <> ''
    print $E_Corp2              (0,35)
  end-if

  add 1 to #T4APrintCount

  move 'Y' to $PrintAmount

  move 0 to #i

  while #i <= #max_T4Aboxes

        get $PrBox $PrDescr from PrT4A_Area(#i)
                   PT4A_Box PT4A_Descr
        let $MsgBox = RTRIM($PrBox, ' ')
        let $MsgDescr = RTRIM($PrDescr, ' ') || ' (Bx ' || $MsgBox || ')'
        let $MsgSum   = RTRIM($PrDescr, ' ')

        evaluate $MsgBox
        when = '16'
           let $Msg16 = $MsgDescr
           let $Sum16 = $MsgSum
           break
        when = '18'
           let $Msg18 = $MsgDescr
           let $Sum18 = $MsgSum
           break
        when = '20'
           let $Msg20 = $MsgDescr
           let $Sum20 = $MsgSum
           break
        when = '22'
           let $Msg22 = $MsgDescr
           let $Sum22 = $MsgSum
           break
        when = '24'
           let $Msg24 = $MsgDescr
           let $Sum24 = $MsgSum
           break
        when = '26'
           let $Msg26 = $MsgDescr
           let $Sum26 = $MsgSum
           break
        when = '27'
           let $Msg27 = $MsgDescr
           let $Sum27 = $MsgSum
           break
        when = '28'
           let $Msg28 = $MsgDescr
           let $Sum28 = $MsgSum
           break
        when = '30'
           let $Msg30 = $MsgDescr
           let $Sum30 = $MsgSum
           break
        when = '32'
           let $Msg32 = $MsgDescr
           let $Sum32 = $MsgSum
           break
        when = '34'
           let $Msg34 = $MsgDescr
           let $Sum34 = $MsgSum
           break
        when = '40'
           let $Msg40 = $MsgDescr
           let $Sum40 = $MsgSum
           break
        when = '42'
           let $Msg42 = $MsgDescr
           let $Sum42 = $MsgSum
           break
        when = '46'
           let $Msg46 = $MsgDescr
        when-other
           break

        end-evaluate

        add 1 to #i

  end-while

  move 0 to #j

  while #j <= #max_FNboxes

        get $PrBox $PrDescr from PrFN_Area(#j)
                   Pfn_Box Pfn_Descr
        let $MsgBox = RTRIM($PrBox, ' ')

        evaluate $MsgBox
        when = '16C'
           let $MsgF16C = RTRIM($PrDescr, ' ') || ' (Bx 16)'
           break
        when = '16B'
           let $MsgF16B = RTRIM($PrDescr, ' ') || ' (Bx 16)'
           break
        when = '16D'
           let $MsgF16D = RTRIM($PrDescr, ' ') || ' (Bx 16)'
           break
        when = '18A'
           let $MsgF18A = RTRIM($PrDescr, ' ') || ' (Bx 18)'
           break
        when = '18B'
           let $MsgF18B = RTRIM($PrDescr, ' ') || ' (Bx 18)'
           break
        when = '18C'
           let $MsgF18C = RTRIM($PrDescr, ' ') || ' (Bx 18)'
           break
        when = '18D'
           let $MsgF18D = RTRIM($PrDescr, ' ') || ' (Bx 18)'
           break
        when = '18E'
           let $MsgF18E = RTRIM($PrDescr, ' ') || ' (Bx 18)'
           break
        when = '18F'
           let $MsgF18F = RTRIM($PrDescr, ' ') || ' (Bx 18)'
           break
        when = '18G'
           let $MsgF18G = RTRIM($PrDescr, ' ') || ' (Bx 18)'
           break
        when = '24A'
           let $MsgF24A = RTRIM($PrDescr, ' ') || ' (Bx 24)'
           break
        when = '24B'
           let $MsgF24B = RTRIM($PrDescr, ' ') || ' (Bx 24)'
           break
        when = '26A'
           let $MsgF26A = RTRIM($PrDescr, ' ') || ' (Bx 26)'
           break
        when = '27A'
           let $MsgF27A = RTRIM($PrDescr, ' ') || ' (Bx 27)'
           break
        when = '28C'
           let $MsgF28C = RTRIM($PrDescr, ' ') || ' (Bx 28)'
           break
        when = '28D'
           let $MsgF28D = RTRIM($PrDescr, ' ') || ' (Bx 28)'
           break
        when = '28E'
           let $MsgF28E = RTRIM($PrDescr, ' ') || ' (Bx 28)'
           break
        when = '28F'
           let $MsgF28F = RTRIM($PrDescr, ' ') || ' (Bx 28)'
           break
        when = '28J'
           let $MsgF28J = RTRIM($PrDescr, ' ') || ' (Bx 28)'
           break
        when = '28L'
           let $MsgF28L = RTRIM($PrDescr, ' ') || ' (Bx 28)'
           break
        when = '28M'
           let $MsgF28M = RTRIM($PrDescr, ' ') || ' (Bx 28)'
           break
        when = '28N'
           let $MsgF28N = RTRIM($PrDescr, ' ') || ' (Bx 28)'
           break
        when = '28O'
           let $MsgF28O = RTRIM($PrDescr, ' ') || ' (Bx 28)'
           break
        when = '28R'
           let $MsgF28R = RTRIM($PrDescr, ' ') || ' (Bx 28)'
           break
        when = '28S'
           let $MsgF28S = RTRIM($PrDescr, ' ') || ' (Bx 28)'
           break
        when = '28T'
           let $MsgF28T = RTRIM($PrDescr, ' ') || ' (Bx 28)'
           break
        when = '28U'
           let $MsgF28U = RTRIM($PrDescr, ' ') || ' (Bx 28)'
           break
        when = '32A'
           let $MsgF32A = RTRIM($PrDescr, ' ') || ' (Bx 32)'
           break
        when-other
           break

        end-evaluate

        add 1 to #j

  end-while

  print $Ctx912a_T4a_box_data   (+2,1)

  let #BoxAmt = $Box16
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #BoxCount
     let $Message = $Msg16
     add #BoxAmt to #AccumPension
     do Print-Box
  end-if

  let #BoxAmt = $Box18
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #BoxCount
     let $Message = $Msg18
     add #BoxAmt to #AccumLumpSum
     do Print-Box
  end-if

  let #BoxAmt = $Box20
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #BoxCount
     let $Message = $Msg20
     add #BoxAmt to #AccumCommissions
     do Print-Box
  end-if

  let #BoxAmt = $Box22
  divide 100 into #BoxAmt
  add 1 to #BoxCount
  let $Message = $Msg22
  add #BoxAmt to #AccumTax
  do Print-Box

  let #BoxAmt = $Box24
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #BoxCount
     let $Message = $Msg24
     add #BoxAmt to #AccumAnnuities
     do Print-Box
  end-if

  let #BoxAmt = $Box26
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #BoxCount
     let $Message = $Msg26
     add #BoxAmt to #AccumRetiring
     do Print-Box
  end-if

  let #BoxAmt = $Box27
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #BoxCount
     let $Message = $Msg27
     add #BoxAmt to #AccumNonEligRetiring
     do Print-Box
  end-if

  let #BoxAmt = $Box28
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #BoxCount
     let $Message = $Msg28
     add #BoxAmt to #AccumOther
     do Print-Box
  end-if

  let #BoxAmt = $Box30
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #BoxCount
     let $Message = $Msg30
     add #BoxAmt to #AccumPatronage
     do Print-Box
  end-if

  let #BoxAmt = $Box32
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #BoxCount
     let $Message = $Msg32
     add #BoxAmt to #AccumPastServ
     do Print-Box
  end-if

  let #BoxAmt = $Box34
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #BoxCount
     let $Message = $Msg34
     add #BoxAmt to #AccumAdj
     do Print-Box
  end-if

  let #BoxAmt = $Box40
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #BoxCount
     let $Message = $Msg40
     add #BoxAmt to #AccumRESPIncome
     do Print-Box
  end-if

  let #BoxAmt = $Box42
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #BoxCount
     let $Message = $Msg42
     add #BoxAmt to #AccumRESPAssist
     do Print-Box
  end-if

  let #BoxAmt = $Box46
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #BoxCount
     let $Message = $Msg46
     add #BoxAmt to #AccumCharity
     do Print-Box
  end-if

  next-listing need=7

  print $Ctx912a_Footnote_data  (+2,1)

  move 'N' to $FootnotesPrinted

  let #BoxAmt = $Box16C
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF16C
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box16B
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF16B
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box16D
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF16D
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box18A
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF18A
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box18B
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF18B
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box18C
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF18C
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box18D
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF18D
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box18E
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF18E
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box18F
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message =$MsgF18F
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box18G
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message =  $MsgF18G
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box24A
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF24A
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box24B
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message =$MsgF24B
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box26A
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message =$MsgF26A
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box27A
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF27A
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box28C
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF28C
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box28D
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF28D
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box28E
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message =$MsgF28E
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box28F
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message =$MsgF28F
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box28J
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF28J
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box28L
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF28L
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box28M
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF28M
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box28N
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF28N
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box28O
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF28O
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box28R
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message =$MsgF28R
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box28S
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF28S
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box28T
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF28T
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box28U
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message = $MsgF28U
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  let #BoxAmt = $Box32A
  divide 100 into #BoxAmt
  if #BoxAmt > 0
     add 1 to #FNCount
     let $Message =$MsgF32A
     do Print-Footnote
     move 'Y' to $FootnotesPrinted
  end-if

  if $FootnotesPrinted = 'N'
     print $Ctx912a_No_foot_msg1          (+1,5)
     print $Ctx912a_No_foot_msg2          (0,43)
  end-if

  next-listing need=7

  print $Ctx912a_Other_data (+2,1)

  let $OtherMsg = $Ctx912a_Box16_code || $Box16Code
  add 1 to #OtherCount
  do Print-Other

  let $OtherMsg = $Ctx912a_Box18_code || $Box18Code
  add 1 to #OtherCount
  do Print-Other

  let $OtherMsg = $Ctx912a_Box24_code || $Box24Code
  add 1 to #OtherCount
  do Print-Other

  let $OtherMsg = $Ctx912a_Box26_code || $Box26Code
  add 1 to #OtherCount
  do Print-Other

  let $OtherMsg = $Ctx912a_Box27_code || $Box27Code
  add 1 to #OtherCount
  do Print-Other

  let $OtherMsg = $Ctx912a_Box28_code || $Box28Code
  add 1 to #OtherCount
  do Print-Other

  let $OtherMsg = $Ctx912a_Box32_code || $Box32Code
  add 1 to #OtherCount
  do Print-Other

  let $OtherMsg = $Ctx912a_Box38_code || $Box38Code
  add 1 to #OtherCount
  do Print-Other

  let $PlanA = LTRIM($PensionPlanA, '0')
  if $PlanA <> ''
     let $OtherMsg = $Ctx912a_Pension_planA || $PensionPlanA
     add 1 to #OtherCount
     do Print-Other
  end-if

  let $OtherMsg = $Ctx912a_Box40_code || $Box40Code
  add 1 to #OtherCount
  do Print-Other


  let $Descr = RTRIM($FNDescr, ' ')
  if $Descr <> ''
     let $FNMessage =  $Ctx912a_Footnote_desc || '"' || $Descr || '"'
     print $FNMessage (+1,5)
  end-if

  move 0 to #BoxCount
  move 0 to #FNCount
  move 0 to #OtherCount

end-procedure

begin-procedure Print-Box


  evaluate #BoxCount

    when = 1
    when = 4
    when = 7
    when = 10
    when = 13
    when = 16

       print $Message (+1,5)
       print #BoxAmt (0,45) edit 99999999.99

    when = 2
    when = 5
    when = 8
    when = 11
    when = 14
    when = 17

       print $Message (0,58)
       print #BoxAmt (0,98) edit 99999999.99

    when = 3
    when = 6
    when = 9
    when = 12
    when = 15
    when = 18

       print $Message (0,115)
       print #BoxAmt (0,156) edit 99999999.99

  end-evaluate

end-procedure

begin-procedure Print-Footnote

  evaluate #FNCount

    when = 1
    when = 4
    when = 7
    when = 10
    when = 13
    when = 16

       print $Message (+1,5)
       print #BoxAmt (0,45) edit 99999999.99

    when = 2
    when = 5
    when = 8
    when = 11
    when = 14
    when = 17

       print $Message (0,58)
       print #BoxAmt (0,98) edit 99999999.99

    when = 3
    when = 6
    when = 9
    when = 12
    when = 15
    when = 18

       print $Message (0,115)
       print #BoxAmt (0,156) edit 99999999.99

  end-evaluate

end-procedure

begin-procedure Print-Other

  evaluate #OtherCount

    when = 1
    when = 4
    when = 7
    when = 10

       print $OtherMsg (+1,5)

    when = 2
    when = 5
    when = 8
    when = 11

       print $OtherMsg (0,58)

    when = 3
    when = 6
    when = 9
    when = 12

       print $OtherMsg (0,115)

  end-evaluate

end-procedure

begin-procedure Print-Summary

   extract $SumRCTNumber      from $T4AData   3  15
   extract $CoName1           from $T4AData  18  30
   extract $CoName2           from $T4AData  48  30
   extract $CoName3           from $T4AData  78  30
   extract $CoStreet1         from $T4AData 108  30
   extract $CoStreet2         from $T4AData 138  30
   extract $CoCity            from $T4AData 168  28
   extract $CoProvince        from $T4AData 196   2
   extract $CoCountry         from $T4AData 198   3
   extract $CoPostalCode      from $T4AData 201  10
   extract $AcctContact       from $T4AData 211  22
   extract $AcctPhone         from $T4AData 233  10
   extract $AcctPhoneExt      from $T4AData 243   4
   extract $TaxYear           from $T4AData 247   4
   extract $T4ACount          from $T4AData 251   7
   extract $TotPension        from $T4AData 258  13
   extract $TotLumpSum        from $T4AData 271  13
   extract $TotCommissions    from $T4AData 284  13
   extract $TotPatronage      from $T4AData 297  13
   extract $TotPastService    from $T4AData 310  13
   extract $TotAnnuities      from $T4AData 323  13
   extract $TotOther          from $T4AData 336  13
   extract $TotRetiring       from $T4AData 349  13
   extract $TotNonElRetire    from $T4AData 362  13
   extract $TotIncomeTax      from $T4AData 375  13
   extract $TotPensionAdj     from $T4AData 388  13
   extract $TotRESPIncome     from $T4AData 401  13
   extract $TotRESPAssist     from $T4AData 414  13
   extract $PensionPlanA      from $T4AData 427   7
   extract $ProprieterSIN1    from $T4AData 448   9
   extract $ProprieterSIN2    from $T4AData 457   9

     print $Ctx912a_Summ_rec_msg1  (+2,1)
     print $Ctx912a_Summ_rec_msg2  (0,55)

     print    $Ctx912a_Summ_rec            (+2,3)
     print    $Ctx912a_Bus_number_caps     (+2,3)
     print    $RCTNumber                   (0,40)
     print    $Ctx912a_Empler_name         (+1,3)
     print    $CoName1                     (0,40)
     print    $Ctx912a_Empler_name2        (+1,3)
     print    $CoName2                     (0,40)
     print    $Ctx912a_Empler_name3        (+1,3)
     print    $CoName3                     (0,40)
     print    $Ctx912a_Address             (+1,3)
     print    $CoStreet1                   (0,40)
     print    $Ctx912a_Address2            (+1,3)
     print    $CoStreet2                   (0,40)
     print    $Ctx912a_City                (+1,3)
     print    $CoCity                      (0,40)
     print    $Ctx912a_Province            (+1,3)
     print    $CoProvince                  (0,40)
     print    $Ctx912a_Country             (+1,3)
     print    $CoCountry                   (0,40)
     print    $Ctx912a_Postal_code         (+1,3)
     print    $CoPostalCode                (0,40)
     print    $Ctx912a_Contact_name        (+1,3)
     print    $AcctContact                 (0,40)
     print    $Ctx912a_Contact_phne        (+1,3)
     print    $AcctPhone                   (0,40) edit (xxx)bxxx-xxxx
     print    $Ctx912a_Cont_phne_ext       (+1,3)
     if $AcctPhoneExt <> '0000'
       print    $AcctPhoneExt              (0,40)
     end-if
     print    $Ctx912a_Tax_year            (+1,3)
     print    $TaxYear                     (0,40)
     print   $Ctx912a_Tot_t4a_recs         (+1,3)
     let #T4ACount = $T4ACount
     print    #T4ACount                     (0,40)  edit 9999999
     print    $Sum16                        (+1,3)
     let #TotPension                = $TotPension
     divide 100 into #TotPension
     print    #TotPension                  (0,40)  edit 99,999,999,999.99
     print    $Sum18                        (+1,3)
     let #TotLumpSum        = $TotLumpSum
     divide 100 into #TotLumpSum
     print    #TotLumpSum                  (0,40)  edit 99,999,999,999.99
     print    $Sum20                        (+1,3)
     let #TotCommissions = $TotCommissions
     divide 100 into #TotCommissions
     print    #TotCommissions              (0,40)  edit 99,999,999,999.99
     print    $Sum30                        (+1,3)
     let #TotPatronage      = $TotPatronage
     divide 100 into #TotPatronage
     print    #TotPatronage                (0,40)  edit 99,999,999,999.99
     print    $Sum32                        (+1,3)
     let #TotPastService = $TotPastService
     divide 100 into #TotPastService
     print    #TotPastService              (0,40)  edit 99,999,999,999.99
     print    $Sum24                        (+1,3)
     let #TotAnnuities   = $TotAnnuities
     divide 100 into #TotAnnuities
     print    #TotAnnuities                (0,40)  edit 99,999,999,999.99
     print    $Sum28                        (+1,3)
     let #TotOther          = $TotOther
     divide 100 into #TotOther
     print    #TotOther                    (0,40)  edit 99,999,999,999.99
     print    $Sum26                        (+1,3)
     let #TotRetiring     = $TotRetiring
     divide 100 into #TotRetiring
     print    #TotRetiring                 (0,40)  edit 99,999,999,999.99
     print    $Sum27                        (+1,3)
     let #TotNonElRetire = $TotNonElRetire
     divide 100 into #TotNonElRetire
     print    #TotNonElRetire              (0,40)  edit 99,999,999,999.99
     print    $Sum22                        (+1,3)
     let #TotIncomeTax  = $TotIncomeTax
     divide 100 into #TotIncomeTax
     print    #TotIncomeTax                (0,40)  edit 99,999,999,999.99
     print    $Sum34                        (+1,3)
     let #TotPensionAdj = $TotPensionAdj
     divide 100 into #TotPensionAdj
     print    #TotPensionAdj               (0,40)  edit 99,999,999,999.99
     print    $Sum40                        (+1,3)
     let #TotRESPIncome = $TotRESPIncome
     divide 100 into #TotRESPIncome
     print    #TotRESPIncome               (0,40)  edit 99,999,999,999.99
     print    $Sum42                        (+1,3)
     let #TotRESPAssist = $TotRESPAssist
     divide 100 into #TotRESPAssist
     print    #TotRESPAssist               (0,40)  edit 99,999,999,999.99

     print    $Ctx912a_Pension_plan        (+1,3)
     print    $PensionPlanA                (0,40)  edit 9999999
!    print    $Ctx912a_Pension_plan2       (+1,3)
!    print    $PensionPlanB                (0,40)  edit 9999999
!    print    $Ctx912a_Pension_plan3       (+1,3)
!    print    $PensionPlanC                (0,40)  edit 9999999
!    print    $Ctx912a_Sin1                (+1,3)
!    print   '  '                          (0,40)
!    print    $Ctx912a_Sin2                (+1,3)
!    print   '  '                          (0,40)

end-procedure

begin-procedure Print-Accumulated-Data

  print $Ctx912a_Print_data_msg1 (+1,1)
  print $Ctx912a_Print_data_msg2 (+1,1)

  print $Ctx912a_Accum_totals  (+2,1)
  print $Ctx912a_Bus_number    (+2,1)
  print $RCTNumber             (0,40)
  print $Ctx912a_T4a_#slips                 (+2,1)
  print #T4APrintCount                      (0,40)  edit 9999999
  print $Sum16                              (+2,1)
  print #AccumPension                       (0,40)  edit 99,999,999,999.99
  print $Sum18                              (+2,1)
  print #AccumLumpSum                       (0,40)  edit 99,999,999,999.99
  print $Sum20                              (+2,1)
  print #AccumCommissions                   (0,40)  edit 99,999,999,999.99
  print $Sum22                              (+2,1)
  print #AccumTax                           (0,40)  edit 99,999,999,999.99
  print $Sum24                              (+2,1)
  print #AccumAnnuities                     (0,40)  edit 99,999,999,999.99
  print $Sum26                              (+2,1)
  print #AccumRetiring                      (0,40)  edit 99,999,999,999.99
  print $Sum27                              (+2,1)
  print #AccumNonEligRetiring               (0,40)  edit 99,999,999,999.99
  print $Sum28                              (+2,1)
  print #AccumOther                         (0,40)  edit 99,999,999,999.99
  print $Sum30                              (+2,1)
  print #AccumPatronage                     (0,40)  edit 99,999,999,999.99
  print $Sum32                              (+2,1)
  print #AccumPastServ                      (0,40)  edit 99,999,999,999.99
  print $Sum34                              (+2,1)
  print #AccumAdj                           (0,40)  edit 99,999,999,999.99
  print $Sum40                              (+2,1)
  print #AccumRESPIncome                    (0,40)  edit 99,999,999,999.99
  print $Sum42                              (+2,1)
  print #AccumRESPAssist                    (0,40)  edit 99,999,999,999.99

  move 0 to #AccumPension
  move 0 to #AccumLumpSum
  move 0 to #AccumCommissions
  move 0 to #AccumTax
  move 0 to #AccumAnnuities
  move 0 to #AccumRetiring
  move 0 to #AccumNonEligRetiring
  move 0 to #AccumOther
  move 0 to #AccumPatronage
  move 0 to #AccumPastServ
  move 0 to #AccumAdj
  move 0 to #AccumRESPIncome
  move 0 to #AccumRESPAssist
  move 0 to #T4APrintCount

end-procedure


#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
!#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getdptnm.sqc'  !Get-Department-Name
#ifdef PRCSSCHD
#Include 'stdapi.sqc'    !Update Process API
#Include 'txrnctl1.sqc'  !Process Scheduler Run Controls
#endif
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
