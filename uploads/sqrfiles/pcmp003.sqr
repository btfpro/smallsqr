!************************************************************
!  PCMP003:  Professional Compliance                        *
!            RI Observation                                 *
!************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:14:21:28                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!                                                                      *
!***********************************************************************


#include 'setenv.sqc' !Set environment
begin-setup
#Include 'ptpsl177.sqc'   !Printer and page-size initialization
end-setup

! Related language stuff
#define PCMP_TYPE
#define PCMP_REG_AUTH
#define PCMP_CLASS
#define PCMP_OBS_MODEL
#define PCMP_RI_OBS_COM
#define PCMP_RI_OBSECOM
#define PCMP_OBS_ELEM
#include 'rellang.sqc'
#define RELLANG_PROG

begin-REPORT
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Layout
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-REPORT

!***********************************************************************
! Init Report
!***********************************************************************

begin-procedure Init-Report

  move 'PCMP003' to $ReportID
  move 'REGULATED INDIVIDUAL OBSERVATION' to $ReportTitle

  do Stdapi-Init

  let $language_cd = $CURR_LANGUAGE_CD

  if $prcs_process_instance = ''
      INPUT $EmplId 'Enter EMPLID : '
      INPUT #EmplRcd 'Enter Empl Rcd# : '
      INPUT $PcmpType 'Enter Professional Compliance Type :'
      INPUT $RegAuth 'Enter Regulation Authority : '
      INPUT $ObsDate 'Enter Observation Date : '
      INPUT $ObsModel 'Enter Observation Model : '
  else
    do Get-Values
  end-if

  do Init_Printer
  do Init_Report_Translation('PROFCOMP', $language_cd)
  do Append_Report_Translation('PROFCOMP')

end-procedure

!***********************************************************************
! Get Values
!***********************************************************************

begin-procedure Get-Values

  let $language_cd = $PRCS_LANGUAGE_CD

BEGIN-SELECT

RC.EMPLID
RC.EMPL_RCD
RC.PCMP_TYPE
RC.PCMP_REG_AUTH
RC.PCMP_OBS_DT
RC.PCMP_OBS_MODEL

  let $EmplId = &RC.EMPLID
  let #EmplRcd = &RC.EMPL_RCD
  let $PcmpType = &RC.PCMP_TYPE
  let $RegAuth = &RC.PCMP_REG_AUTH
  do Format-DateTime(&RC.PCMP_OBS_DT, $ObsDate, {DEFDATE}, '', '')
  let $ObsModel = &RC.PCMP_OBS_MODEL

from PS_RUN_CNTL_PCMP3 RC

where RC.OPRID = $prcs_oprid
  and RC.RUN_CNTL_ID = $prcs_run_cntl_id

end-select

end-procedure Get-Values

!***********************************************************************
! Layout
!***********************************************************************

begin-procedure Init-Layout

#define col0  1
#define col1  60

end-procedure

!***********************************************************************
! Heading
!***********************************************************************

begin-heading  9

#include 'stdhdgtr.sqc'

print $LBL_EMPLID                (0,{col0})
print $EmplId                    (0,+1)

  do Get-Person-Name

end-heading

!***********************************************************************
!  Gets the employee's name
!***********************************************************************

begin-procedure Get-Person-Name

begin-SELECT
!**********************BEGIN SQR NAME DISPLAY CHANGE*********************
  !N.NAME
N.NAME_DISPLAY
  !let $PersName = &N.NAME
   let $PersName = &N.NAME_DISPLAY
!**********************BEGIN SQR NAME DISPLAY CHANGE*********************
  print $PersName                (0,+1)

FROM   PS_PERSON_NAME N

WHERE  N.EMPLID = $EmplId

end-SELECT

end-procedure

!***********************************************************************
! Main
!***********************************************************************

begin-procedure Process-Main

   do Get-Translat-Info   ! Global

  do Get-SetId
  do Get-Pcmp-Type
  do Get-Reg-Auth
  do Get-Classification
  do Get-RI-Observation

end-procedure Process-Main

!***********************************************************************
!  Get the SETID
!***********************************************************************

begin-procedure Get-SetId

begin-SELECT

BU.DEFAULT_SETID

  let $SetId = &BU.DEFAULT_SETID

FROM   PS_BUS_UNIT_TBL_HR BU,
       PS_PCMP_RI RI

WHERE  RI.EMPLID = $EmplId
AND    RI.EMPL_RCD = #EmplRcd
AND    RI.PCMP_TYPE = $PcmpType
AND    RI.PCMP_REG_AUTH = $RegAuth
AND    BU.BUSINESS_UNIT = RI.BUSINESS_UNIT

end-SELECT

end-procedure

!***********************************************************************
!  Get the Professional Compliance Type
!***********************************************************************

begin-procedure Get-Pcmp-Type

begin-SELECT

PT.SETID
PT.PCMP_TYPE
PT.PCMP_TYPE_DESCR

  let $PCMP_TYPE-PCMP_TYPE_DESCR = &PT.PCMP_TYPE_DESCR
  do Get_Related_PCMP_TYPE(&PT.PCMP_TYPE, &PT.SETID)
  let $PcmpTypeDescr = $PCMP_TYPE-PCMP_TYPE_DESCR

  print $LBL_PCMP_TYPE                           (+2,{col0})
  print $PcmpTypeDescr                           (0,+1)

FROM   PS_PCMP_TYPE PT

WHERE  PT.SETID = $SetId
AND    PT.PCMP_TYPE = $PcmpType

end-SELECT

end-procedure

!***********************************************************************
!  Get the Regulatory Authority
!***********************************************************************

begin-procedure Get-Reg-Auth

begin-SELECT

RA.SETID
RA.PCMP_TYPE
RA.PCMP_REG_AUTH
RA.PCMP_REG_AUTH_DESC

  let $PCMP_REG_AUTH-PCMP_REG_AUTH_DESC = &RA.PCMP_REG_AUTH_DESC
  do Get_Related_PCMP_REG_AUTH(&RA.PCMP_REG_AUTH, &RA.PCMP_TYPE, &RA.SETID)
  let $RegAuthDescr = $PCMP_REG_AUTH-PCMP_REG_AUTH_DESC

  print $LBL_REG_AUTH                            (+1,{col0})
  print $RegAuthDescr                            (0,+1)

FROM   PS_PCMP_REG_AUTH RA

WHERE  RA.SETID = $SetId
AND    RA.PCMP_TYPE = $PcmpType
AND    RA.PCMP_REG_AUTH = $RegAuth

end-SELECT

end-procedure

!***********************************************************************
!  Get the RI Classification
!***********************************************************************

begin-procedure Get-Classification

begin-SELECT

CL.SETID
CL.PCMP_TYPE
CL.PCMP_REG_AUTH
RIC.PCMP_CLASS
CL.PCMP_CLASS_DESCR

  let $RIClass = &RIC.PCMP_CLASS

  let $PCMP_CLASS-PCMP_CLASS_DESCR = &CL.PCMP_CLASS_DESCR
  do Get_Related_PCMP_CLASS(&RIC.PCMP_CLASS, &CL.PCMP_REG_AUTH, &CL.PCMP_TYPE, &CL.SETID)
  let $Classification = $PCMP_CLASS-PCMP_CLASS_DESCR

  print $LBL_CLASS                               (+1,{col0})
  print $Classification                          (0,+1)

FROM   PS_PCMP_CLASS CL,
       PS_PCMP_RI_CLASS RIC

WHERE  RIC.EMPLID = $EmplId
AND    RIC.EMPL_RCD = #EmplRcd
AND    RIC.PCMP_TYPE = $PcmpType
AND    RIC.PCMP_REG_AUTH = $RegAuth
AND    RIC.EFFDT = (SELECT MAX(RIC2.EFFDT) FROM PS_PCMP_RI_CLASS RIC2
                    WHERE RIC2.EMPLID = RIC.EMPLID
                    AND   RIC2.EMPL_RCD = RIC.EMPL_RCD
                    AND   RIC2.PCMP_TYPE = RIC.PCMP_TYPE
                    AND   RIC2.PCMP_REG_AUTH = RIC.PCMP_REG_AUTH
                    AND   RIC2.EFFDT<=&RC.PCMP_OBS_DT)
AND    CL.PCMP_CLASS = RIC.PCMP_CLASS
AND    CL.SETID = $SetId

end-SELECT

end-procedure

!***********************************************************************
!  Gets the RI Observation.
!***********************************************************************

begin-procedure Get-RI-Observation

begin-SELECT

OB.SETID
OB.PCMP_OBS_MODEL
OB.EFFDT
OB.PCMP_OBSMODEL_DESC
OBS.EMPLID
OBS.PCMP_TYPE
OBS.PCMP_REG_AUTH
OBS.PCMP_OBS_DT
OBS.PCMP_OBS_STATUS

  let $ObStatus = &OBS.PCMP_OBS_STATUS

  let $PCMP_OBS_MODEL-PCMP_OBSMODEL_DESC = &OB.PCMP_OBSMODEL_DESC
  do Get_Related_PCMP_OBS_MODEL(&OB.EFFDT, &OB.PCMP_OBS_MODEL, &OB.SETID)
  let $ModelDescr = $PCMP_OBS_MODEL-PCMP_OBSMODEL_DESC

  print $LBL_OBS_MOD                             (+2,{col0})
  print $ModelDescr                              (0,+1)
  print $LBL_OBS_DT                              (0,{col1})
  print $ObsDate                                 (0,+1)
  print $LBL_OBS_STAT                            (+1,{col0})

  do Get-Obs-Status-Xlat

  do Get-Observation-Comments
  do Get-Observation-Elements

FROM   PS_PCMP_RI_OBS OBS,
       PS_PCMP_OBS_MODEL OB

WHERE  OBS.EMPLID = &RC.EMPLID
AND    OBS.EMPL_RCD = &RC.EMPL_RCD
AND    OBS.PCMP_TYPE = &RC.PCMP_TYPE
AND    OBS.PCMP_REG_AUTH = &RC.PCMP_REG_AUTH
AND    OBS.PCMP_OBS_DT = &RC.PCMP_OBS_DT
AND    OBS.PCMP_OBS_MODEL = &RC.PCMP_OBS_MODEL
AND    OB.SETID = $SetId
AND    OB.PCMP_OBS_MODEL = OBS.PCMP_OBS_MODEL
AND    OB.EFFDT <= (SELECT MAX(OBS2.EFFDT) FROM PS_PCMP_OBS_MODEL OBS2 WHERE OBS2.SETID=$SetId
                    AND OBS2.PCMP_OBS_MODEL=OBS.PCMP_OBS_MODEL AND OBS2.EFFDT <= $AsOfToday)

end-SELECT

end-procedure

!***********************************************************************
!  Gets the Observation Status Xlat value.
!***********************************************************************

begin-procedure Get-Obs-Status-Xlat

  let $FieldName ='PCMP_OBS_STATUS'
  let $FieldValue = $ObStatus
  do Read-Translate-Table
  let $XlatObStatus = $XlatLongName

  print $XlatObStatus                           (0,+1)

end-procedure

!***********************************************************************
!  Gets the RI Observation comments.
!***********************************************************************

begin-procedure Get-Observation-Comments

begin-SELECT

OBSC.PCMP_OBS_MODEL
OBSC.EMPLID
OBSC.EMPL_RCD
OBSC.PCMP_TYPE
OBSC.PCMP_REG_AUTH
OBSC.PCMP_OBS_DT
OBSC.PCMP_OBS_COMM

  let $PCMP_RI_OBS_COM-PCMP_OBS_COMM = &OBSC.PCMP_OBS_COMM
  do Get_Related_PCMP_RI_OBS_COM(&OBSC.EMPLID, &OBSC.EMPL_RCD, &OBSC.PCMP_OBS_DT, &OBSC.PCMP_OBS_MODEL, &OBSC.PCMP_REG_AUTH, &OBSC.PCMP_TYPE)
  let $ObsComments = $PCMP_RI_OBS_COM-PCMP_OBS_COMM

  print $LBL_OBS_COM                             (+2,{col0})
  print $ObsComments                             (+1,{col0}) WRAP 80 20

FROM   PS_PCMP_RI_OBS_COM OBSC

WHERE  OBSC.EMPLID = &RC.EMPLID
AND    OBSC.EMPL_RCD = &RC.EMPL_RCD
AND    OBSC.PCMP_TYPE = &RC.PCMP_TYPE
AND    OBSC.PCMP_REG_AUTH = &RC.PCMP_REG_AUTH
AND    OBSC.PCMP_OBS_DT = &RC.PCMP_OBS_DT
AND    OBSC.PCMP_OBS_MODEL = &RC.PCMP_OBS_MODEL

end-SELECT

end-procedure

!***********************************************************************
!  Gets the Observation Elememts
!***********************************************************************

begin-procedure Get-Observation-Elements

begin-SELECT

E.SETID
OBE.PCMP_OBS_ELEM
E.PCMP_OBS_ELEM_DESC
OBE.PCMP_OBS_ELEM_REQ
OBE.PCMP_OBS_STATUS

  let $ObsElem = &OBE.PCMP_OBS_ELEM

  let $PCMP_OBS_ELEM-PCMP_OBS_ELEM_DESC = &E.PCMP_OBS_ELEM_DESC
  do Get_Related_PCMP_OBS_ELEM(&OBE.PCMP_OBS_ELEM, &E.SETID)
  let $ElemDescr = $PCMP_OBS_ELEM-PCMP_OBS_ELEM_DESC

  let $Required = &OBE.PCMP_OBS_ELEM_REQ
  let $EStatus = &OBE.PCMP_OBS_STATUS

  print $LBL_OBS_ELEM                            (+3,{col0})
  print $ElemDescr                               (0,+1)
  print $LBL_OBS_REQ                             (0,{col1})
  print $Required                                (0,+1)
  print $LBL_OBS_ELSTAT                          (+1,{col0})

  do Get-ObsElem-Status-Xlat

  do Get-Element-Comments

FROM   PS_PCMP_RI_OBS_ELM OBE,
       PS_PCMP_OBS_ELEM E

WHERE  OBE.EMPLID = &RC.EMPLID
AND    OBE.EMPL_RCD = &RC.EMPL_RCD
AND    OBE.PCMP_TYPE = &RC.PCMP_TYPE
AND    OBE.PCMP_REG_AUTH = &RC.PCMP_REG_AUTH
AND    OBE.PCMP_OBS_DT = &RC.PCMP_OBS_DT
AND    OBE.PCMP_OBS_MODEL = &RC.PCMP_OBS_MODEL
AND    E.SETID = $SetId
AND    E.PCMP_OBS_ELEM = OBE.PCMP_OBS_ELEM

end-SELECT

end-procedure


!***********************************************************************
!  Gets the Observation Status Xlat value.
!***********************************************************************

begin-procedure Get-ObsElem-Status-Xlat


  let $FieldName = 'PCMP_OBS_STATUS'
  let $FieldValue = $EStatus
  do Read-Translate-Table
  move $XlatShortName to $XlatEStatus
  print $XlatEStatus                           (0,+1)

end-procedure

!***********************************************************************
!  Gets the Observation Elememt comments.
!***********************************************************************

begin-procedure Get-Element-Comments

begin-SELECT

OBSEC.PCMP_OBS_ELEM
OBSEC.EMPLID
OBSEC.EMPL_RCD
OBSEC.PCMP_OBS_MODEL
OBSEC.PCMP_REG_AUTH
OBSEC.PCMP_TYPE
OBSEC.PCMP_OBS_DT
OBSEC.PCMP_OBS_COMM

  let $PCMP_RI_OBSECOM-PCMP_OBS_COMM = &OBSEC.PCMP_OBS_COMM
  do Get_Related_PCMP_RI_OBSECOM(&OBSEC.EMPLID, &OBSEC.EMPL_RCD, &OBSEC.PCMP_OBS_DT, &OBSEC.PCMP_OBS_ELEM, &OBSEC.PCMP_OBS_MODEL, &OBSEC.PCMP_REG_AUTH, &OBSEC.PCMP_TYPE)
  let $EComments = $PCMP_RI_OBSECOM-PCMP_OBS_COMM

  print $LBL_OBS_ELCOM                           (+2,{col0})
  print $EComments                               (+1,{col0}) WRAP 80 20

FROM   PS_PCMP_RI_OBSECOM OBSEC

WHERE  OBSEC.EMPLID = &RC.EMPLID
AND    OBSEC.EMPL_RCD = &RC.EMPL_RCD
AND    OBSEC.PCMP_TYPE = &RC.PCMP_TYPE
AND    OBSEC.PCMP_REG_AUTH = &RC.PCMP_REG_AUTH
AND    OBSEC.PCMP_OBS_DT = &RC.PCMP_OBS_DT
AND    OBSEC.PCMP_OBS_MODEL = &RC.PCMP_OBS_MODEL
AND    OBSEC.PCMP_OBS_ELEM = &OBE.PCMP_OBS_ELEM

end-SELECT

end-procedure

!***********************************************************************
!  Gets the strings printed in this report (Globalization)
!***********************************************************************

begin-procedure Get-Translat-Info

   do Get_Field_Information('PROFCOMP', 'LBL_RI_OBS'      ,$LBL_RI_OBS       ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_EMPLID'      ,$LBL_EMPLID       ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_PCMP_TYPE'   ,$LBL_PCMP_TYPE    ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_REG_AUTH'    ,$LBL_REG_AUTH     ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_CLASS'       ,$LBL_CLASS        ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_OBS_MOD'     ,$LBL_OBS_MOD      ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_OBS_DT'      ,$LBL_OBS_DT       ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_OBS_STAT'    ,$LBL_OBS_STAT     ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_OBS_COM'     ,$LBL_OBS_COM      ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_OBS_ELEM'    ,$LBL_OBS_ELEM     ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_OBS_REQ'     ,$LBL_OBS_REQ      ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_OBS_ELSTAT'  ,$LBL_OBS_ELSTAT   ,#DW)
   do Get_Field_Information('PROFCOMP', 'LBL_OBS_ELCOM'   ,$LBL_OBS_ELCOM    ,#DW)

end-procedure

!***********************************************************************


#include 'stdapi.sqc'    !Routines to update run status
#Include 'reset.sqc'     !Reset printer procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'curdttim.sqc'  !Current Date/Time
#Include 'number.sqc'    !Routines to format numbers
#Include 'useprntr.sqc'
#Include 'sqrtrans.sqc'

