!***********************************************************************
!  PER108CN:  Canadian Official Languages Summary Report & Interface   *
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:05:09                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!
!***********************************************************************
! Modified for Education & Government                                  *
! HP99999       Release 8 Technical Merge                              *
!***********************************************************************

#include 'setenv.sqc'    !Set environment
Begin-setup
#Include 'ptpsp125.sqc'   !Printer and page-size initialization
end-setup
#define #occ_level
#define STATE_NAMES_FRM
#define LOCATION_TBL
#include 'rellang.sqc'

begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do init-report
  if $start-error <> 'Y' 
      do Report
      do Reset
  end-if
  do Stdapi-Term
end-report


!********************************************
begin-procedure Init-Report
  move 'PER108CN' to $ReportID
  move 'Official Languages Summary Reports' to $ReportTitle
  display $ReportTitle
  display ' '
  do Stdapi-init
  if $prcs_process_instance = ''
     display 'This process cannot be run outside the Process scheduler'
     let $start_error = 'Y'
  else
     let $start_error = 'N'
     do Select-Parameters
  end-if
  let $language_code = $prcs_language_cd
  display $language_code
  do init_report_translation ($reportid,$language_code)
  do append_report_translation ('HR')
  do get-strings

  create-array name=L1 size=20
     field=col1:char:4='none'
     field=col2:number:4=0
     field=col3:number:4=0
     field=col4:number:3=0

end-procedure

!**************************************************************************
begin-procedure Get-Strings
!**************************************************************************
do Get_Field_Information ('HR','COMPANY',$company_txt,#DW)
do Get_Field_Information ('PER108CN','COLHDG1',$colhdg1,#DW)
do Get_Field_Information ('PER108CN','COLHDG2',$colhdg2,#DW)
do Get_Field_Information ('PER108CN','COLHDG3',$colhdg3,#DW)
do Get_Field_Information ('PER108CN','COLHDG4',$colhdg4,#DW)
do Get_Field_Information ('PER108CN','COLHDG5',$colhdg5,#DW)
do Get_Field_Information ('PER108CN','COLHDG6',$colhdg6,#DW)
do Get_Field_Information ('PER108CN','COLHDG7',$colhdg7,#DW)
do Get_Field_Information ('PER108CN','COLHDG8',$colhdg8,#DW)
do Get_Field_Information ('PER108CN','COLHDG9',$colhdg9,#DW)
do Get_Field_Information ('PER108CN','COLHDG10',$colhdg10,#DW)
do Get_Field_Information ('PER108CN','COLHDG11',$colhdg11,#DW)
do Get_Field_Information ('PER108CN','COLHDG12',$colhdg12,#DW)
do Get_Field_Information ('PER108CN','COLHDG13',$colhdg13,#DW)
do Get_Field_Information ('PER108CN','COLHDG14',$colhdg14,#DW)
do Get_Field_Information ('PER108CN','COLHDG15',$colhdg15,#DW)
do Get_Field_Information ('PER108CN','COLTXT1',$coltxt1,#DW)
do Get_Field_Information ('PER108CN','COLTXT2',$coltxt2,#DW)
do Get_Field_Information ('PER108CN','COLTXT91',$coltxt91,#DW)
do Get_Field_Information ('PER108CN','COLTXT92',$coltxt92,#DW)
do Get_Field_Information ('PER108CN','COLTXT93',$coltxt93,#DW)
do Get_Field_Information ('PER108CN','COLTXT94',$coltxt94,#DW)
do Get_Field_Information ('PER108CN','COLTXT95',$coltxt95,#DW)
do Get_Field_Information ('PER108CN','HEADER1',$header1,#DW)
do Get_Field_Information ('PER108CN','INTRL_MNT_LNG_CAN',$intr_mnt,#DW)
do Get_Field_Information ('PER108CN','INTRL_NB_LNG_CAN',$intr_nb,#DW)
do Get_Field_Information ('PER108CN','INTRL_NCR_LNG_CAN',$intr_ncr,#DW)
do Get_Field_Information ('PER108CN','INTRL_ON_LNG_CAN',$intr_on,#DW)
do Get_Field_Information ('PER108CN','INTRL_QC_LNG_CAN',$intr_qc,#DW)
do Get_Field_Information ('PER108CN','SUPR_COMM_MNT_CAN',$supr_mnt,#DW)
do Get_Field_Information ('PER108CN','SUPR_COMM_NB_CAN',$supr_nb,#DW)
do Get_Field_Information ('PER108CN','SUPR_COMM_NCR_CAN',$supr_ncr,#DW)
do Get_Field_Information ('PER108CN','SUPR_COMM_ON_CAN',$supr_on,#DW)
do Get_Field_Information ('PER108CN','SUPR_COMM_QC_CAN',$supr_qc,#DW)
do Get_Field_Information ('PER108CN','REPHDG1',$rephdg1,#DW)
do Get_Field_Information ('PER108CN','REPHDG2',$rephdg2,#DW)
do Get_Field_Information ('PER108CN','REPHDG3',$rephdg3,#DW)

end-procedure

!**************************************************************************
begin-procedure Get-Values
!**************************************************************************

   do Get-As-Of-Date
   !do GET-PER036-PARM
   let $COMPANY = RTRIM(&RUN_CNTL_HR.company, ' ')
   let $companyclause = $company
   if $company = ''
     let $companyfilter = ''
   else
     let $companyfilter = 'AND D.COMPANY = '''||$companyclause||''''
   end-if

end-procedure

begin-procedure Get-As-Of-Date

  let $AsOfDate = &RUN_CNTL_HR.asofdate

  if $AsOfDate = ''
     move $AsOfToday to $AsOfDate
  end-if

end-procedure

!**************************************************************************
!    Report procedure
!**************************************************************************
begin-procedure Report

let $OldCompany = ' '
let #numcompany = 0
begin-SELECT
A.EMPLID,
A.LANG_CD,
A.BILINGUALISM_CODE,
B.CAN_NOC_CD,
C.GEOLOC_CODE,
C.TBS_OFFICE_CD_CAN,
D.LOCATION,
D.COMPANY,
D.REG_TEMP,
C.SETID,
C.EFFDT,
B.SEASONAL,
G.DESCR,
G.COUNTRY,                       
G.STATE,                          
C.NCR_SW_CAN,
C.COUNTRY,
C.DESCR,
D.CONTRACT_NUM

   let $STATE_NAMES_FRM-DESCR = &G.DESCR
   do Get_Related_STATE_NAMES_FRM(&G.COUNTRY, &G.STATE)
   let $state = rtrim($STATE_NAMES_FRM-DESCR,' ')

   let $LOCATION_TBL-DESCR = &C.DESCR
   do Get_Related_LOCATION_TBL(&C.EFFDT, &D.LOCATION, &C.SETID)
   let $loc_descr = rtrim($LOCATION_TBL-DESCR             ,' ')

   move &B.CAN_NOC_CD               to $can_noc_code
   move &D.COMPANY                  to $Company
   move &A.Emplid                   to $emplid
   move &A.LANG_CD                  to $language
   move &C.TBS_OFFICE_CD_CAN        to $tbs_office_cd
   move &C.COUNTRY                  to $loc_country
   move &C.NCR_SW_CAN               to $ncr
   move &A.BILINGUALISM_CODE        to $bilingual_cd
   let $Location = rtrim(&D.Location, ' ')
   let $title = $header1||', Company - '||$company 
   If $Company <> $OldCompany
      if #numcompany = 0 
         do print-report-s1-header    
      else
         do print-report-s1-footer
         let $title = $header1||', Company - '||$oldcompany
         do print-report 
         let $title = $header1||', Company - '||$company 
         do print-report-s1-header    
      end-if
      add 1 to #numcompany

        do reset-arrays
      let #p1count = 1
      let $oldstate = ''
      let $old_p_l_o = ''
      let $OldCompany = $company
      let #s1_both_tot = 0
      let #s1_english_tot = 0
      let #s1_french_tot = 0
   End-if 

   IF &D.REG_TEMP = 'T' and &B.SEASONAL <> 'Y'
      do check-Contract-Data
   Else 
      do Is-Valid-Record
   End-if  

FROM  PS_PERSONAL_DATA A,
      PS_JOBCODE_TBL B,
      PS_LOCATION_TBL C,
      PS_JOB D,
      PS_EMPLOYMENT E,
      PS_REG_REGION_TBL F,
      PS_STATE_NAMES_TBL G

WHERE A.EMPLID      = E.EMPLID
  AND A.FT_STUDENT  = 'N'
  AND E.EMPL_RCD   = (SELECT MIN(E2.EMPL_RCD) FROM PS_EMPLOYMENT E2
                                WHERE E2.EMPLID = E.EMPLID)
  AND D.EMPLID      = E.EMPLID
  AND D.HR_STATUS   = 'A'
  AND D.PER_ORG  = 'EMP'
  AND D.EFFDT       = (SELECT MAX(JB.EFFDT)
                       FROM PS_JOB JB
                       WHERE JB.EMPLID    = D.EMPLID
                         AND JB.EMPL_RCD = D.EMPL_RCD
                         AND JB.EFFDT    <= $AsOfDate)
  AND D.EFFSEQ      = (SELECT MAX(J2.EFFSEQ)
                       FROM  PS_JOB J2
                       WHERE J2.EMPLID    = D.EMPLID
                         AND J2.EMPL_RCD = D.EMPL_RCD
                         AND J2.EFFDT     = D.EFFDT)
  AND B.JOBCODE     = D.JOBCODE
  AND B.SETID = D.SETID_JOBCODE
  AND B.EFFDT       = (SELECT MAX(JC.EFFDT)
                       FROM PS_JOBCODE_TBL JC
                       WHERE JC.JOBCODE   = B.JOBCODE
                         AND JC.SETID = B.SETID
                         AND JC.EFFDT    <= $AsOfDate)
  AND C.LOCATION    = D.LOCATION
  AND C.SETID = D.SETID_LOCATION
                  
  AND C.EFFDT       = (SELECT MAX(EFFDT)
                       FROM   PS_LOCATION_TBL
                       WHERE  LOCATION    = C.LOCATION
                         AND SETID = C.SETID
                         AND EFFDT      <= $AsOfDate)
  AND F.REG_REGION = D.REG_REGION  
  AND F.COUNTRY = 'CAN'
  AND C.STATE = G.STATE
  AND C.COUNTRY = G.COUNTRY
  [$companyfilter]
  ORDER BY D.COMPANY,G.DESCR,D.LOCATION,C.TBS_OFFICE_CD_CAN

end-SELECT

if rtrim($Oldcompany,' ') = ''
else
   do print-report-s1-footer
   let $title = $header1||', Company - '||$company 
   do print-report 
end-if

end-procedure

!**************************************************************************

begin-procedure Is-Valid-Record
!**************************************************************************

do Get-OCC-Group
do get-language-requirements

!Add to array for report P1 occ level 0
put $coltxt1 into L1(0) col1(0)
put $coltxt2 into L1(1) col1(0)
if $state <> $oldstate
   let $oldstate = $state
   let #p1count = #p1count + 1
   put $state into L1(#p1count) col1(0)
end-if
if $ncr = 'Y' 
   if $language = 'CFR' or $language = 'FRA' 
      array-add 1 to L1(0) col4(0)
   else
      array-add 1 to L1(0) col3(0)
   end-if
   array-add 1 to L1(0) col2(0)
else
   if isnull($state) or (rtrim($state, ' ') = '') or $loc_country <> 'CAN'
      if $language = 'CFR' or $language = 'FRA'
         array-add 1 to L1(1) col4(0)
      else
         array-add 1 to L1(1) col3(0)
      end-if
      array-add 1 to L1(1) col2(0)
      put '' into L1(#p1count) col1(0)
      let #p1count = #p1count - 1
   else
      if $language = 'CFR' or $language = 'FRA'
         array-add 1 to L1(#p1count) col4(0)
      else
         array-add 1 to L1(#p1count) col3(0)
      end-if
      array-add 1 to L1(#p1count) col2(0)
   end-if
end-if  

!add to array for report P2 occ level 1

put $coltxt91 into L1(0) col1(1)
put $coltxt92 into L1(1) col1(1)
put $coltxt93 into L1(2) col1(1)
put $coltxt94 into L1(3) col1(1)
put $coltxt95 into L1(4) col1(1)

if $occ_cat = '01' or $occ_cat = '02'
   if $language = 'CFR' or $language = 'FRA'
      array-add 1 to L1(0) col4(1)
   else
      array-add 1 to L1(0) col3(1)
   end-if
   show $occ_cat '   91'
   array-add 1 to L1(0) col2(1)
   get #num from L1(0) col2(1)
   show 'nnnnnnnn  ' #num
else
   if $occ_cat = '03'
      if $language = 'CFR' or $language = 'FRA'
         array-add 1 to L1(1) col4(1)
      else
         array-add 1 to L1(1) col3(1)
      end-if
      array-add 1 to L1(1) col2(1)
   else
      if $occ_cat = '04'
         if $language = 'CFR' or $language = 'FRA'
            array-add 1 to L1(2) col4(1)
         else
            array-add 1 to L1(2) col3(1)
         end-if
         array-add 1 to L1(2) col2(1)
      else
         if $occ_cat = '05' or $occ_cat = '08' or $occ_cat = '07'
            if $language = 'CFR' or $language = 'FRA'
               array-add 1 to L1(3) col4(1)
            else
               array-add 1 to L1(3) col3(1)
            end-if
            array-add 1 to L1(3) col2(1)
         else
            if $language = 'CFR' or $language = 'FRA'
               array-add 1 to L1(4) col4(1)
            else
               array-add 1 to L1(4) col3(1)
            end-if
            array-add 1 to L1(4) col2(1)
         end-if
      end-if
   end-if
end-if

!add col1 values to array for report L1 occ level 2 and L2 occ level 3

put $intr_ncr into L1(0) col1(2)
put $intr_on  into L1(1) col1(2)
put $intr_mnt into L1(2) col1(2)
put $intr_qc  into L1(3) col1(2)
put $intr_nb  into L1(4) col1(2)

put $supr_ncr into L1(0) col1(3)
put $supr_on  into L1(1) col1(3)
put $supr_mnt into L1(2) col1(3)
put $supr_qc  into L1(3) col1(3)
put $supr_nb  into L1(4) col1(3)

if $intrl_ncr_lng > '0'
   if $intrl_ncr_lng = '1' or $intrl_ncr_lng = '2'
      array-add 1 to L1(0) col3(2)
   end-if
   if $intrl_ncr_lng = '1' or $intrl_ncr_lng = '3'
      array-add 1 to L1(0) col4(2)
   end-if
   array-add 1 to L1(0) col2(2)
end-if

if $intrl_on_lng > '0'
   if $intrl_on_lng = '1' or $intrl_on_lng = '2'
      array-add 1 to L1(1) col3(2)
   end-if
   if $intrl_on_lng = '1' or $intrl_on_lng = '3'
      array-add 1 to L1(1) col4(2)
   end-if
   array-add 1 to L1(1) col2(2)
end-if

if $intrl_mnt_lng > '0'
   if $intrl_mnt_lng = '1' or $intrl_mnt_lng = '2'
      array-add 1 to L1(2) col3(2)
   end-if
   if $intrl_mnt_lng = '1' or $intrl_mnt_lng = '3'
      array-add 1 to L1(2) col4(2)
   end-if
   array-add 1 to L1(2) col2(2)
end-if

if $intrl_qc_lng > '0'
   if $intrl_qc_lng = '1' or $intrl_qc_lng = '2'
      array-add 1 to L1(3) col3(2)
   end-if
   if $intrl_qc_lng = '1' or $intrl_qc_lng = '3'
      array-add 1 to L1(3) col4(2)
   end-if
   array-add 1 to L1(3) col2(2)
end-if

if $intrl_nb_lng > '0'
   if $intrl_nb_lng = '1' or $intrl_nb_lng = '2'
      array-add 1 to L1(4) col3(2)
   end-if
   if $intrl_nb_lng = '1' or $intrl_nb_lng = '3'
      array-add 1 to L1(4) col4(2)
   end-if
   array-add 1 to L1(4) col2(2)
end-if

! Populate array at occurance level 3 for report L2
! Note occurance level 1 does not exist for col4 for this report

if $supr_comm_ncr > '0'
   if $bilingual_cd = '2'
      array-add 1 to L1(0) col3(3)
   end-if
   array-add 1 to L1(0) col2(3)
end-if

if $supr_comm_on > '0'
   if $bilingual_cd = '2'
      array-add 1 to L1(1) col3(3)
   end-if
   array-add 1 to L1(1) col2(3)
end-if

if $supr_comm_mnt > '0'
   if $bilingual_cd = '2'
      array-add 1 to L1(2) col3(3)
   end-if
   array-add 1 to L1(2) col2(3)
end-if

if $supr_comm_qc > '0'
   if $bilingual_cd = '2'
      array-add 1 to L1(3) col3(3)
   end-if
   array-add 1 to L1(3) col2(3)
end-if

if $supr_comm_nb > '0'
  if $bilingual_cd = '2'
      array-add 1 to L1(4) col3(3)
   end-if
   array-add 1 to L1(4) col2(3)
end-if

! Process report S1

let $p_l_o = rtrim($state,' ')||', '||rtrim($loc_descr,' ')||', '||rtrim($tbs_office_cd,' ')
if $p_l_o <> $old_p_l_o
   if $old_p_l_o = ''
   else
      if #s1_both > 0 or #s1_english > 0 or #s1_french > 0
         let #s1_line = #s1_line+1
         print $old_p_l_o (#s1_line,1) wrap 25 3
         print #s1_both (#s1_line,50,24) edit 99999
         print #s1_english (#s1_line,75,24) edit 99999
         print #s1_french (#s1_line,100) edit 99999
      else
         let #s1_line = #s1_line - 2
      end-if
   end-if
   let #s1_line = #s1_line + 2
   let $old_p_l_o = $p_l_o
   let #s1_both = 0
   let #s1_english = 0
   let #s1_french = 0

end-if
if $pub_svc_lng > '0'
    add 1 to #S1_both
    add 1 to #s1_both_tot
end-if
if $pub_svc_lng = '1' or $pub_svc_lng = '3'
    add 1 to #S1_french
    add 1 to #s1_french_tot
end-if
if $pub_svc_lng = '1' or $pub_svc_lng = '2' 
    add 1 to #S1_english
    add 1 to #s1_eng_tot
end-if

End-Procedure

!**************************************************************************
begin-procedure check-Contract-Data
!**************************************************************************

begin-select
A.CONTRACT_BEGIN_DT,
A.CONTRACT_END_DT
  move &A.CONTRACT_BEGIN_DT to $cont_begin_date
  move &A.CONTRACT_END_DT to $cont_end_date
  if isnull($cont_end_date) = 1 or isblank($cont_end_date) = 1
      do is-valid-record
      exit-select
  else
!      do Format-DateTime($cont_end_date, $cont_end_date, {DEFYMD}, '','')
!      do Format-DateTime($cont_begin_date, $cont_begin_date, {DEFYMD}, '','')
       do Convert-To-DTU-Date($cont_begin_date,$cont_begin_date)
       do Convert-To-DTU-Date($cont_end_date,$cont_end_date)

      do DTU-Diff-months($cont_begin_date, $cont_end_date, #num_months)
      if #num_months >= 3
         do is-valid-record
         exit-select
      end-if
  end-if

FROM PS_CONTRACT_DATA A
WHERE   A.EMPLID = $emplid
AND A.CONTRACT_STATUS = 'A'
end-select

end-procedure

!**************************************************************************
begin-procedure Get-OCC-Group
!**************************************************************************

begin-SELECT
CN.CAN_NOC_OCC_GROUP
   move &CN.CAN_NOC_OCC_GROUP    to $Occ_Cat
FROM PS_CAN_NOC_TBL CN
WHERE CN.CAN_NOC_CD = $can_noc_code
  AND CN.EFFDT = (SELECT MAX(EFFDT) FROM PS_CAN_NOC_TBL CN2
                  WHERE CN2.CAN_NOC_CD = CN.CAN_NOC_CD
                    AND CN2.EFFDT <= $AsOfDate)
END-SELECT
End-Procedure

!**************************************************************************
begin-procedure Get-Language-Requirements
!**************************************************************************

let $pub_svc_lng = '0'
let $intrl_ncr_lng = '0'
let $intrl_on_lng = '0'
let $intrl_mnt_lng = '0'
let $intrl_qc_lng = '0'
let $intrl_nb_lng = '0'
let $supr_comm_ncr = '0'
let $supr_comm_on = '0'
let $supr_comm_mnt = '0'
let $supr_comm_qc = '0'
let $supr_comm_nb = '0'

begin-SELECT
A.PUB_SVC_LNG_CAN,
A.INTRL_NCR_LNG_CAN,
A.INTRL_ON_LNG_CAN,
A.INTRL_MNT_LNG_CAN,
A.INTRL_QC_LNG_CAN,
A.INTRL_NB_LNG_CAN,
A.SUPR_COMM_NCR_CAN,
A.SUPR_COMM_ON_CAN,
A.SUPR_COMM_MNT_CAN,
A.SUPR_COMM_QC_CAN,
A.SUPR_COMM_NB_CAN
   move &A.PUB_SVC_LNG_CAN to $pub_svc_lng
   move &A.INTRL_NCR_LNG_CAN to $intrl_ncr_lng
   move &A.INTRL_ON_LNG_CAN to $intrl_on_lng
   move &A.INTRL_MNT_LNG_CAN to $intrl_mnt_lng
   move &A.INTRL_QC_LNG_CAN to $intrl_qc_lng
   move &A.INTRL_NB_LNG_CAN to $intrl_nb_lng
   move &A.SUPR_COMM_NCR_CAN to $supr_comm_ncr
   move &A.SUPR_COMM_ON_CAN to $supr_comm_on
   move &A.SUPR_COMM_MNT_CAN to $supr_comm_mnt
   move &A.SUPR_COMM_QC_CAN to $supr_comm_qc
   move &A.SUPR_COMM_NB_CAN to $supr_comm_nb
 FROM PS_PERS_OFFLNG_CAN A
 WHERE A.EMPLID = $emplid
end-select

End-Procedure

!**************************************************************************
!    Print summary reports for company
!**************************************************************************

begin-procedure print-report
let #occ_level = 0
while #occ_level <=3 
   do print-rep-headings
   let #col2_tot = 0
   let #col3_tot = 0
   let #col4_tot = 0
   let #line = 12
   let #count = 0
   While #count <= #p1count
      get $col1 from L1(#count) col1(#occ_level)
      get #col2 from L1(#count) col2(#occ_level)
      get #col3 from L1(#count) col3(#occ_level)
      if #occ_level < 3
         get #col4 from L1(#count) col4(#occ_level)
      end-if
      let #col2_tot = #col2_tot + #col2
      let #col3_tot = #col3_tot + #col3
      let #col4_tot = #col4_tot + #col4
      let #line = #line+1
      print $col1 (#line,1) wrap 25 3
      print #col2 (#line,50,24) edit 99999
      print #col3 (#line,75,24) edit 99999
      if #occ_level < 3
         print #col4 (#line,100) edit 99999
      end-if
      let #line = #line + 2
      !******** exit loop for reports other than P1
      !******** when max number of rows in array (5) reached
      if #count = 4 and #occ_level > 0
         let #count = #p1count
      end-if
      !***************************************************
      let #count = #count+1
   end-while 
   let #line = #line +1
   print $colhdg15 (#line,1,48)
   print #col2_tot (#line,50,24) edit 99999
   print #col3_tot (#line,75,24) edit 99999
   if #occ_level < 3
      print #col4_tot (#line,100) edit 99999
   end-if
   new-page
   add 1 to #occ_level
end-while

end-procedure

!**************************************************************************
!    Print report S1 header
!**************************************************************************
begin-procedure print-report-s1-header

! ***** finish printing for report S1 ********
      print $title (1,1) bold
      print $rephdg1 (3,1) bold underline
      let #count = 0
      print $colhdg6 (6,1) underline wrap 25 3
      print $colhdg7 (6,50) underline wrap 15 3
      print $colhdg8 (6,75) underline wrap 15 3
      print $colhdg9 (6,100) underline wrap 15 3
      let #eng_tot = 0
      let #french_tot = 0
      let #both_tot = 0
      let #s1_line = 10
end-procedure

!**************************************************************************
!    Print report S1 footer
!**************************************************************************
begin-procedure print-report-s1-footer

! ***** finish printing for report S1 ********
   !let #s1_eng_tot = #eng_tot + #s1_english
   !let #s1_french_tot = #s1_french_tot + #s1_french
   !let #s1_both_tot = #s1_both_tot + #s1_both
   let #s1_line = #s1_line + 1
   print $old_p_l_o (#s1_line,1) wrap 25 3
   print #s1_both (#s1_line,50,24) edit 99999
   print #s1_english (#s1_line,75,24) edit 99999
   print #s1_french (#s1_line,100) edit 99999
   let #s1_line = #s1_line + 2
   let $old_p_l_o = $p_l_o
   let #s1_line = #s1_line +1
   print $colhdg15 (#s1_line,1,48)
   print #s1_both_tot (#s1_line,50,24) edit 99999 
   print #s1_eng_tot (#s1_line,75,24) edit 99999
   print #s1_french_tot (#s1_line,100) edit 99999
   new-page 
   let #s1_both = 0
   let #s1_english = 0
   let #s1_french = 0
   let #s1_line = 0    

end-procedure

!**************************************************************************
!    Print report headings for summary reports in array
!**************************************************************************

begin-procedure print-rep-headings

print $title (1,1) bold
if #occ_level = 0
   print $Colhdg1 (3,1) bold underline
   print $colhdg1 (6,1) underline wrap 25 5
   print $colhdg2 (6,50) underline wrap 15 5
   print $colhdg3 (6,75) underline wrap 15 5
   print $colhdg4 (6,100) underline wrap 15 5
end-if
if #occ_level = 1
   print $title (1,1) bold
   print $colhdg5 (3,1) bold underline
   print $colhdg5 (6,1) underline wrap 25 4
   print $colhdg2 (6,50) underline wrap 15 4
   print $colhdg3 (6,75) underline wrap 15 4
   print $colhdg4 (6,100) underline wrap 15 4
end-if
if #occ_level = 2
   print $rephdg2 (3,1) bold underline
   print $colhdg10 (6,1) underline wrap 25 4
   print $colhdg11 (6,50) underline wrap 15 4
   print $colhdg8 (6,75) underline wrap 15 4
   print $colhdg9 (6,100) underline wrap 15 4
end-if
if #occ_level = 3
   print $rephdg3 (3,1) bold underline
   print $colhdg12 (6,1) underline wrap 25 4
   print $colhdg13 (6,50) underline wrap 15 4
   print $colhdg14 (6,75) underline wrap 15 5
end-if

end-procedure

!**************************************************************************
!    Reset all arrays for new company
!**************************************************************************

begin-procedure reset-arrays

clear-array name=L1

let #s1_both = 0
let #s1_english = 0
let #s1_french = 0

end-procedure

!*****************************************************************
#include 'stdapi.sqc'    !Routine to update run Status
#include 'hrrnctl1.sqc'  !Get run control parameter values
!#include 'hrgetval.sqc'  !Get values mask routines
#include 'askaod.sqc'    !Ask-As-Of-Date procedure

#Include 'getcodta.sqc'  !Get-Company-Data procedure
#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'datemath.sqc'
#include 'sqrtrans.sqc'
