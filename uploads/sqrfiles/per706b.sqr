!**************************************************************
!  PER706B:  Salary Plan/Grade/Step/ Components Table         *
!**************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/07/19:15:09:40                                 !
!       $Release:  HR9                                                 !
!      $Revision:  101                                                 !
!                                                                      *
!***********************************************************************
!Procedures ending with "Scrty" and Record alias ending with "SC" are  *
!using SQR Security.                                                   *
!***********************************************************************
#include 'setenv.sqc'     !Set environment
begin-setup
  #Include 'ptset02.sqc'   !Printer and page-size initialization
end-setup

#define col1 1
#define col2 7
#define col3 12
#define col4 20
#define col5 25
#define col6 38
#define col7 51
#define col8 64
#define col9 68
#define col9_1 70
#define col10 74
#define col11 96
#define col12 118
#define col13 140
#define col14 161
#define col15 168
#define col16 177

#define SAL_GRADE_TBL
#include 'rellang.sqc'


begin-report
  do Init-DateTime
  do Init-Number
  do Get-Current-DateTime
  do Init-Report
  if $prcs_oprid=''
    goto last2
  end-if
  
  do Process-Main
 
  do Reset
  do Stdapi-Term
LAST2:
end-report

begin-heading 7
do Get_Field_Information ('PER706B',     'REPORT_TITLE',  $REPORTTITLE,    #DW)

  #Include 'stdhtr08.sqc'

do Get_Field_Information ('HR',      'SETID',    $SETID_LBL,        #DW)
do Get_Field_Information ('HR',      'GRADE1',    $SALARY_LBL,        #DW)
do Get_Field_Information ('PER706B',    'PLAN',    $PLAN_LBL,        #DW)
do Get_Field_Information ('HR',      'GRADE2',    $GRADE_LBL,        #DW)
do Get_Field_Information ('PER706B',    'STEP',    $STEP_LBL,        #DW)
do Get_Field_Information ('PER706B',    'DESCR',    $DESCR_LBL,        #DW)
do Get_Field_Information ('HR',      'EFFDT1',    $EFFDT1_LBL,        #DW)
do Get_Field_Information ('HR',      'EFFDT2',    $EFFDT2_LBL,        #DW)
do Get_Field_Information ('PER706B',    'COMPONENT',    $COMPONENT_LBL,        #DW)
do Get_Field_Information ('HR',      'CURRENCY_CD1',   $CUR_LBL,        #DW)
do Get_Field_Information ('PER706B',    'FREQ',    $FREQ_LBL,        #DW)
do Get_Field_Information ('PER706B',    'HOURLY_RT',    $HOURLY_LBL,        #DW)
do Get_Field_Information ('PER706B',    'DAILY_RT',    $DAILY_LBL,        #DW)
do Get_Field_Information ('PER706B',    'MONTHLY_RT',    $MONTHLY_LBL,        #DW)
do Get_Field_Information ('PER706B',    'ANNUAL_RT',    $ANNUAL_LBL,        #DW)
do Get_Field_Information ('HR',      'COMP_RATE2',    $RATE_LBL,        #DW)
do Get_Field_Information ('HR',      'COMP2',    $CODE_LBL,        #DW)
do Get_Field_Information ('PER706B',    'GROUP',    $GROUP_LBL,        #DW)
do Get_Field_Information ('HR',      'PERCENT_TYPE1',   $PERCENT_LBL,        #DW)
do Get_Field_Information ('PER706B',    'POINT',    $POINT_LBL,        #DW)

print   $SALARY_LBL            (+2,{col3})
print   $EFFDT1_LBL            (,{col6})
print   $RATE_LBL              (,{col14})

print   $SETID_LBL        (+1,{col1})

 string $PLAN_LBL $GRADE_LBL $STEP_LBL by '/' into $PGS_LBL

print   $PGS_LBL              (,{col2})
!print   $GRADE_LBL             (,{col3})
!print   $STEP_LBL              (,{col4})
print   $DESCR_LBL             (,{col5})
print   $EFFDT2_LBL            (,{col6})
print   $COMPONENT_LBL         (,{col7})
print   $CUR_LBL               (,{col8})
print   $FREQ_LBL              (,{col9})
print   $HOURLY_LBL            (,{col10})
print   $DAILY_LBL             (,{col11})
print   $MONTHLY_LBL           (,{col12})
print   $ANNUAL_LBL            (,{col13})
print   $CODE_LBL              (,{col14})
print   $PERCENT_LBL           (,{col15})
print   $POINT_LBL             (,{col16})

print   $GROUP_LBL             (+1,{col14})

end-heading


begin-procedure Init-Report

  move 'PER706B' to $ReportID
  do Stdapi-Init
  if $prcs_oprid=''
    display ''
    display 'REPORT CAN NOT BE EXECUTED OUTSIDE OF PEOPLESOFT,PLEASE USE PROCESS SCHEDULER.'
    display ''
    goto last1
  end-if

  if $prcs_process_instance = ''
    do Ask-From-Thru-Date
  else
    do Select-Parameters
  end-if
  do Init_Printer
  do Init_Report_Translation ($ReportID, $language_cd)
  do Append_Report_Translation ('HR')
  LAST1:
end-procedure

begin-procedure Get-Values
   let $language_cd = $prcs_language_cd
   do Get-As-Of-Date
   do Get-From-Thru-Date
   let $print_comp = &RUN_CNTL_HR.MULT_COMP_FLAG
end-procedure

begin-procedure Process-Main
print   ' ' (+1,{col1})
begin-SELECT
A.SETID    (+2,{col1})
A.SAL_ADMIN_PLAN
A.GRADE
A.EFFDT
  do Format-DateTime(&A.EffDt, $EFFDT_out, {DEFDATE}, '', '')
A.EFF_STATUS
A.DESCRSHORT
 let $SAL_GRADE_TBL-DESCRSHORT = &A.DESCRSHORT
 do Get_Related_SAL_GRADE_TBL(&A.EFFDT, &A.GRADE, &A.SAL_ADMIN_PLAN, &A.SETID)
C.STEP
  do Format-Number(&C.STEP, $out, '99')
  string &A.SAL_ADMIN_PLAN &A.GRADE $out by '/' into $PGS
  print $PGS                      (,{col2})

  print $SAL_GRADE_TBL-DESCRSHORT      (,{col5})

  print $EFFDT_out                (,{col6})

 if $print_comp = 'Y'
    do Get-Compensation-Components
 END-IF

FROM PS_SAL_GRADE_TBL A, PS_SAL_STEP_TBL C
WHERE A.SETID = C.SETID
AND   A.SAL_ADMIN_PLAN = C.SAL_ADMIN_PLAN
AND   A.GRADE = C.GRADE
AND   A.EFFDT = C.EFFDT
ORDER BY A.SETID ASC, A.SAL_ADMIN_PLAN ASC, A.GRADE ASC, A.EFFDT ASC, C.STEP ASC
end-SELECT
end-procedure

begin-procedure Get-Compensation-Components
begin-SELECT

B.COMP_EFFSEQ
  do Format-Number(&B.COMP_EFFSEQ, $out, '999')
B.COMP_RATECD
 string &B.COMP_RATECD $out by ' ' into $RATECD
 PRINT $RATECD   (,{col7})

B.CURRENCY_CD   (,{col8})
B.COMP_FREQUENCY  (,{col9_1})
B.HOURLY_RT
  do Format-Number(&B.HOURLY_RT, $out, '999999999999.999999')
 PRINT $out   (,{col10})
B.DAILY_RT
  do Format-Number(&B.DAILY_RT, $out, '999999999999999.999')
 PRINT $out   (,{col11})
B.MONTHLY_RT
  do Format-Number(&B.MONTHLY_RT, $out, '999999999999999.999')
 PRINT $out   (,{col12})
B.ANNUAL_RT
  do Format-Number(&B.ANNUAL_RT, $out, '999999999999999.999')
 PRINT $out   (,{col13})
B.RATE_CODE_GROUP  (,{col14})
B.COMP_PCT
  do Format-Number(&B.COMP_PCT, $out, '999.999')
 PRINT $out   (,{col15})
B.COMP_RATE_POINTS
  do Format-Number(&B.COMP_RATE_POINTS, $out, '99999')
 PRINT $out   (,{col16})
 PRINT ' ' (+1,{col1})
FROM PS_SAL_RATECD_TBL B
WHERE B.SETID = &A.SETID
AND B.SAL_ADMIN_PLAN = &A.SAL_ADMIN_PLAN
AND B.GRADE = &A.GRADE
AND B.EFFDT = &A.EFFDT
AND B.STEP = &C.STEP
ORDER BY B.COMP_RATECD ASC, B.COMP_EFFSEQ ASC
end-SELECT
end-procedure

#include 'hrrnctl1.sqc'  !Get run control parameter values
#include 'hrgetval.sqc'  !Get values mask routines
#include 'askftd.sqc'    !From Thru Date input

#Include 'reset.sqc'     !Reset printer procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines to format datetimes
#Include 'number.sqc'    !Routine to format numbers
#include 'stdapi.sqc'    !Routine to update run status
#Include 'sqrtrans.sqc'
#Include 'useprntr.sqc'
