!***********************************************************************
!  TAX910AU:  W-2 Audit Report                                         *
!***********************************************************************
!***********************************************************************
!                                                                      *
!               Confidentiality Information:                           *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2006/11/14:14:54:44                                 !
!       $Release:  HR9                                                 !
!      $Revision:  104                                                 !
!                                                                      *
!***********************************************************************
! Modified for Education & Government                                  *
! HP90001       Add MQGE report                                        *
! FED0001       Add MQGE report for FEDERAL Product                    *
!***********************************************************************

#include 'setenv.sqc'  !Set environment
#include 'setup32.sqc' !Printer and page-size initialization

begin-report
  do Init-Report
  do Process-Main
  do Stdapi-Term
end-report

begin-procedure Init-Report
  move 'TAX910AU' to $ReportID
  move 'YE Data Audit Report' to $ReportTitle
  move 'AU' to $Program
  display ''
  display 'YE Data Audit Report'

  date-time () hh:mi:ss &t1
  display &t1

  do Get-EandG                                                   !HP90001
  do Get-FederalProduct                                          !FED0001
  do Init-DateTime
  do Init-Number
  do Stdapi-Init
  do Initialization

  if $prcs_process_instance = ''
    do Prompts
  else
    do Select-US-Year-End-Parameters
    do Convert-Parameters
  end-if
end-procedure


begin-procedure Initialization
  do Get-Current-DateTime
  move '1' to $MMLZero
  move '1' to $Year4
  do Format-DateTime($AsOfToday, $910Date, {DEFYMD},'','')

  move $910Date to $AsOfYear xxxx   !extract the current year
  move $AsOfYear  to #AsOfYear
  move #AsOfYear  to #saveAsOfYear
  subtract 1    from #AsOfYear
  do Get-Tax-Reporting-Run-Controls

  move &TX.Balance_Year to $CalYear 9999
  let $AsOfDate = $CalYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP}, '', 'native')

  if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
    display ''
    display 'Current Year is not one greater than Tax Reporting Year.'
    display 'Current Year is    ' noline
    display  #saveAsOfYear  9999
    display 'Tax Reporting Year ' noline
    display &TX.Balance_Year
    input $Answer maxlen=1 'Do you want to continue? (Y/N)'
    uppercase $Answer
    if $Answer <> 'Y'
      stop
    end-if
  end-if

begin-SELECT
TEMP_SSN_MASK
FROM PS_INSTALLATION
end-SELECT

end-procedure

begin-heading 8
  #Include 'stdhdg01.sqc'

  print 'W2 Rpt Company '              (3,1)
  print $A.W2_Reporting_Co             (0,+2)
  print $A.Descr                       (0,+2)
  let $TaxYear = 'Tax Year ' || $CalYear
  print $TaxYear                       (3,)    center

  if $TaxForm_ID = 'P'

       if $PrintTotals  = 'Y'
         print '                          ' (4,1)
         print $TaxForm_Name                (5,1)
         if $Process_MQGE = 'Y'                                    !HP90001
            PRINT ' - Company Totals (MQGE)  ' (5,6)               !HP90001
         else                                                      !HP90001
            PRINT ' - Company Totals         ' (5,6)               !HP90001
         end-if                                                    !HP90001
       ! Column Headings
         print 'Taxable Gross/'               (+2,20)
         print 'OASDI Gross/'                 (,37)
         print 'Medicare Gross/'              (,54)
         print 'Advance EIC/'                 (,71)
         print 'Nonqlfd Plans/'               (,88)
         print 'Commissions/'                 (,106)
         print 'Tips/'                        (,126)
         print 'Retirement Fund/'             (,144)

         print 'Tax'                          (+1,20)
         print 'Tax'                          (,37)
         print 'Tax'                          (,54)
         print 'Dep Care'                     (,71)
         print 'Benefits'                     (,88)
         print 'Allowances'                   (,106)
         print 'Reimbursed Exp'               (,126)
         print 'CODA Contributions'           (,144)

       else
         print 'Federal EIN '               (4,1)
         print $A.Federal_EIN               (,+2)   edit xx-xxxxxxx
         if $Process_MQGE = 'Y'                                    !HP90001
             print '(MQGE)'                 (,+2)                  !HP90001
         end-if                                                    !HP90001
         print $SortField                   (5,1)
         print $priorSortValue              (,+2)

       ! Column Headings
         print 'Taxable Gross/'               (+2,20)
         print 'OASDI Gross/'                 (,37)
         print 'Medicare Gross/'              (,54)
         print 'Commissions/'                 (,71)
         print 'Tips/'                        (,88)
         print 'Retirement Fund/'             (,106)

         print 'Tax'                          (+1,20)
         print 'Tax'                          (,37)
         print 'Tax'                          (,54)
         print 'Allowances'                   (,71)
         print 'Reimbursed Exp'               (,88)
         print 'CODA Contributions'           (,106)

       end-if


  else

       if $PrintTotals  = 'Y'
         print '                          ' (4,1)
         print $TaxForm_Name                (5,1)
         if $Process_MQGE = 'Y'
            PRINT ' - Company Totals (MQGE)  ' (5,6)               !HP90001
         else                                                      !HP90001
            PRINT ' - Company Totals         ' (5,6)               !HP90001
         end-if                                                    !HP90001
       ! Column Headings
         print 'Taxable Gross/'               (+2,20)
         print 'OASDI Gross/'                 (,37)
         print 'Medicare Gross/'              (,54)
         print 'Advance EIC/'                 (,71)
         print 'Nonqlfd Plans/'               (,88)
         print 'Commissions/'                 (,106)
         print 'Tips/'                        (,126)
         print 'Retirement Fund/'             (,144)

         print 'Tax'                          (+1,20)
         print 'Tax'                          (,37)
         print 'Tax'                          (,54)
         print 'Dep Care'                     (,71)
         print 'Benefits'                     (,88)
         print 'Allowances'                   (,106)
         print 'Reimbursed Exp'               (,126)
         print 'CODA Contributions'           (,144)

       else
       if $PrintFormTotals  = 'Y'
         print 'Federal EIN '               (4,1)
         print $A.Federal_EIN               (,+2)   edit xx-xxxxxxx
         print $SortField                   (5,1)
         if $Process_MQGE = 'Y'                                    !HP90001
             print '(MQGE)'                 (,+2)                  !HP90001
         end-if                                                    !HP90001
         print $priorSortValue              (,+2)

       ! Column Headings
         print 'Taxable Gross/'               (+2,20)
         print 'OASDI Gross/'                 (,37)
         print 'Medicare Gross/'              (,54)
         print 'Advance EIC/'                 (,71)
         print 'Nonqlfd Plans/'               (,88)

         print 'Tax'                          (+1,20)
         print 'Tax'                          (,37)
         print 'Tax'                          (,54)
         print 'Dep Care'                     (,71)
         print 'Benefits'                     (,88)
         print 'Box 08 Tips'                  (,158)

       else
         print 'Federal EIN '               (4,1)
         print $A.Federal_EIN               (,+2)   edit xx-xxxxxxx
         if $Process_MQGE = 'Y'                                    !HP90001
             print '(MQGE)'                 (,+2)                  !HP90001
         end-if                                                    !HP90001
         print $SortField                   (5,1)
         print $priorSortValue              (,+2)

       ! Column Headings
         print 'Taxable Gross/'               (+2,20)
         print 'OASDI Gross/'                 (,37)
         print 'Medicare Gross/'              (,54)
         print 'Advance EIC/'                 (,71)
         print 'Nonqlfd Plans/'               (,88)

         print 'Tax'                          (+1,20)
         print 'Tax'                          (,37)
         print 'Tax'                          (,54)
         print 'Dep Care'                     (,71)
         print 'Benefits'                     (,88)
         print 'Box 12'                       (,106)
         print 'Box 14'                       (,126)
         print 'Box 13'                       (,144)
         print 'Box 08 Tips'                  (,158)
       end-if
     end-if
  end-if

end-heading

begin-procedure Process-Main


  do Report-File-Create

  if $EE_Selected = 'Y'
    do Delete-Sel-Employees-Table
  end-if

  if  $Company_Selected = 'Y'
    do  Delete-Sel-Company-Table
  end-if

  if $EmployeeFound = 'N'
    display ' '

    display '****** No Employee Records Selected ******'
    display ' '
    new-page
    print '********************************'  (+3,1)
    print '  No Employee Records Selected  '  (+1,1)
    print '********************************'  (+1,1)
  end-if
  date-time () hh:mi:ss &t2
  display &t2
end-procedure

begin-procedure Report-File-Create
  move 'N' to $PrintTotals
  move 'N' to $EmployeeFound
  move 'N' to $EmployeeFoundInCompany
  let $first-entry = 'Y'
  let $Company-totals-PR = 'N'
  let $Company-totals-Rest = 'N'
  let $Company-totals-Fed = 'N'

  let $SortSQL10 = $Sort2

begin-SELECT
A.W2_REPORTING_CO
A.DESCR
A.FEDERAL_EIN
A.TAXFORM_ID
A.MQGE_EMPLOYEES                                                   !HP90001

  move &A.Federal_EIN     to $A.Federal_EIN  099999999
  move &A.Descr           to $A.Descr
  move &A.W2_Reporting_Co to $A.W2_Reporting_Co
!  move &A.TaxForm_ID      to $TaxForm_ID
  move &A.MQGE_Employees  to $A.MQGE_Employees                     !HP90001

  if $A.MQGE_Employees = 'Y' and                                   !HP90001
     ($PublicSector = 'Y' or $FederalProduct = 'Y')                !HP90001 FED0001
                                                                   !HP90001
      let $Process_MQGE = 'Y'                                      !HP90001
      evaluate $SortCode1
                                                                   !HP90001
        when = '1'                                                 !HP90001
        when = '2'                                                 !HP90001
        when = '5'                                                 !HP90001
             do Read-Employee-Data                                 !HP90001
        break

        when = '3'                                                 !HP90001
        when = '4'                                                 !HP90001
        when = '6'                                                 !HP90001
             do W2-Sort                                            !HP90001
        break
                                                                   !HP90001
        when = '7'
             do State-Locality-Select
           break
      end-evaluate
                                                                   !HP90001
      if $EmployeeFoundInCompany = 'Y'
!          NEW-PAGE

         if $TaxForm_ID = 'P'
             do Company-Totals-PR
             let $Company-totals-PR = 'Y'
         else
             do Company-Totals-Fed
             let $Company-totals-Fed = 'Y'
             do Company-Totals-Rest
             let $Company-totals-Rest = 'Y'
         end-if

         if $Company-Totals-Rest = 'Y'
!              set the row number
             do Company-Totals-PR
         else
!              set the row number
             do Company-Totals-Fed
!              set the row number
             do Company-Totals-Rest
         end-if

        NEW-PAGE                                                   !HP90001
        move 'N' to $EmployeeFoundInCompany
        move 'N' to $PrintTotals
        let $Company-totals-PR   = 'N'
        let $Company-totals-Rest = 'N'
        let $Company-totals-Fed  = 'N'

      end-if
  end-if

  let $Process_MQGE = 'N'                                          !HP90001
  evaluate $SortCode1

    when = '1'
    when = '2'
    when = '5'
         do Read-Employee-Data
    break

    when = '3'
    when = '4'
    when = '6'
         do W2-Sort
    break

    when = '7'
         do State-Locality-Select
    break
  end-evaluate

  if $SortCode1 <> '7'
     if $EmployeeFoundInCompany = 'Y'
!           NEW-PAGE

        if $TaxForm_ID = 'P'
             do Company-Totals-PR
             let $Company-totals-PR = 'Y'
        else
             do Company-Totals-Fed
             let $Company-totals-Fed = 'Y'
             do Company-Totals-Rest
             let $Company-totals-Rest = 'Y'
        end-if

        if $Company-Totals-Rest = 'Y'
!              set the row number
           do Company-Totals-PR
        else
!              set the row number
           do Company-Totals-Fed
!              set the row number
           do Company-Totals-Rest
        end-if
     end-if

     NEW-PAGE
     move 'N' to $EmployeeFoundInCompany
     move 'N' to $PrintTotals
     move 'N' to $PrintFormTotals
     let $Company-totals-PR   = 'N'
     let $Company-totals-Rest = 'N'
     let $Company-totals-Fed  = 'N'
  end-if

FROM  PS_W2_COMPANY A
WHERE A.CALENDAR_YEAR    = &TX.Balance_Year
  AND A.W2_REPORTING_CO  = A.COMPANY
       [$A.SelectedCompanies]    !NULL string if SELECT Company option not used
  AND A.W2_REPORTING_CO <> ' '
!  AND A.TAXFORM_ID       = 'W'
ORDER BY A.W2_REPORTING_CO
end-SELECT
end-procedure

begin-procedure State-Locality-Select

   let $Quot      = ''''
   let $Paren     = ')'
   let $Spc       = ' '
   let $SortSQL1  = 'AND EXISTS (Select '
   let $SortSQL2  = '''X'' From PS_YE_AMOUNTS '
   let $SortSQL3  = 'WHERE COMPANY = E.COMPANY '
   let $SortSQL4  = 'AND EMPLID = E.EMPLID '
   let $SortSQL5  = 'AND CALENDAR_YEAR = E.CALENDAR_YEAR '
   let $SortSQL6  = 'AND TAXFORM_ID = E.TAXFORM_ID '
   let $SortSQL7  = 'AND SEQUENCE_NUMBER = E.SEQUENCE_NUMBER '
   let $SortSQL8  = 'AND STATE = '
   let $SortSQL9  = ' AND LOCALITY = '
   do Assign-Year-End-Variables

begin-SELECT DISTINCT
SL.STATE
SL.LOCALITY

   let $Sort2 = $SortSQL1 || $SortSQL2 || $SortSQL3 || $SortSQL4 ||
                $SortSQL5 || $SortSQL6 || $SortSQL7 || $SortSQL8 || $Quot ||
                &SL.STATE || $Quot || $SortSQL9 || $Quot ||
                &SL.LOCALITY || $Quot || $Paren || $Spc || $SortSQL10

   if RTRIM(&SL.LOCALITY, ' ') <> ''
     do Read-Employee-Data
   end-if

FROM PS_YE_AMOUNTS SL
WHERE SL.COMPANY IN
      (SELECT COMPANY FROM PS_W2_COMPANY
        WHERE W2_REPORTING_CO = &A.W2_REPORTING_CO
          AND CALENDAR_YEAR = &TX.BALANCE_YEAR)
  AND SL.CALENDAR_YEAR  = &TX.BALANCE_YEAR
  AND SL.BOX            = $YE_LOCAL_TAX
  AND SL.TAXFORM_ID     = 'W'
end-SELECT
end-procedure

begin-procedure Read-Employee-Data

begin-SELECT
W.W2_REPORTING_CO
E.COMPANY
E.TAXFORM_ID       () on-break level=1 print=never after=After-FORM
E.EMPLID           () on-break level=2 print=never before=Before-EmplID
E.SEQUENCE_NUMBER  () on-break level=3 print=never after=After-Seq
E.W2_STATE
E.SSN
E.YE_FNAME
E.YE_MIDDLE_NAME
E.YE_LNAME
E.YE_SUFFIX
E.POSTAL
E.STATUTORY_EE
E.PENSION_PLAN
E.THIRDPARTY_SICKPAY
E.DECEASED
EE.PROCESS_FLAG

  move &E.TaxForm_ID      to $TaxForm_ID
  move &E.TaxForm_ID to $priorTaxForm_ID
  move &E.Sequence_Number to #E.Sequence_Number
  move &E.W2_State to $E.W2_State

  if $TaxForm_ID <> 'P'
     do create-array-w2
  end-if

  move 'Y' to $EmployeeFound
  move 'Y' to $SortEmployeeFound
  move 'Y' to $EmployeeFoundInCompany

FROM  PS_YE_EE EE, PS_YE_DATA E, PS_W2_COMPANY W
WHERE W.W2_REPORTING_CO  = &A.W2_Reporting_Co
  AND W.COMPANY          = E.COMPANY
  AND W.CALENDAR_YEAR    = E.CALENDAR_YEAR
!  AND W.TAXFORM_ID       = E.TAXFORM_ID
  AND E.COMPANY          = EE.COMPANY
  AND E.EMPLID           = EE.EMPLID

!  AND E.TAXFORM_ID       = 'W'
  AND E.TAXFORM_ID       = EE.TAXFORM_ID
  AND E.CALENDAR_YEAR    = EE.CALENDAR_YEAR
  AND E.CALENDAR_YEAR    = &TX.Balance_Year
  [$E.SelectedEEs]             !NULL string if SELECT EEs option not used

  AND (EXISTS (SELECT 'X' FROM PS_INSTALLATION IN1
               WHERE IN1.PUBLIC_SECTOR <> 'Y' and IN1.FED <> 'Y')   !HP90001 FED0001
       OR                                                          !HP90001
       EXISTS (SELECT 'X' FROM PS_YE_DATA E1                       !HP90001
               WHERE E1.COMPANY         = E.COMPANY                !HP90001
                 AND E1.EMPLID          = E.EMPLID                 !HP90001
                 AND E1.CALENDAR_YEAR   = E.CALENDAR_YEAR          !HP90001
                 AND E1.TAXFORM_ID      = E.TAXFORM_ID             !HP90001
                 AND E1.SEQUENCE_NUMBER = 1                        !HP90001
                 AND E1.MEDICARE_ONLY   = $Process_MQGE))          !HP90001
[$Sort2]
end-SELECT
end-procedure

begin-procedure Before-EmplID

  move &E.EmplID   to $E.EmplID
  move &E.Company  to $E.Company

  move &E.SSN to $S123 xxx
  if $S123 = &Temp_SSN_Mask or RTRIM(&E.SSN, ' ') = ''
    move 'Applied For' to $E.SSN
  else
    move &E.SSN to $E.SSN xxx-xx-xxxx
  end-if
  move &E.YE_FNAME to $E.Fname
  move &E.YE_MIDDLE_NAME to $E.MiddleName
  move &E.YE_LNAME to $E.Lname
  move &E.YE_SUFFIX to $E.Suffix
  let $E.Fname = rtrim($E.Fname, ' ')  || ' '
  let $E.MiddleName = rtrim($E.MiddleName, ' ') || ' '
  let $E.Lname = rtrim($E.Lname, ' ')  || ' '
  let $E.Suffix =rtrim($E.Suffix, ' ')  || ' '
  if $E.MiddleName <> ' '
    let $E.YE_Fname = $E.Fname || $E.MiddleName || $E.Lname || $E.Suffix
  else
    let $E.YE_Fname = $E.Fname || $E.Lname || $E.Suffix
  end-if

  if $TaxForm_ID <> 'P'

     if &E.Deceased = 'Y'
        if INSTR($E.YE_FName,'DECD',1) = 0
           concat ' DECD'   with $E.YE_FName
        end-if
     end-if
     move &E.Pension_Plan    to $E.Pension_Plan
     move &E.Statutory_Ee    to $E.Statutory_Ee
     move &E.Deceased        to $E.Deceased
     move &E.Thirdparty_Sickpay  to $E.Thirdparty_Sickpay

  end-if

  move &EE.Process_Flag   to $EE.Process_Flag
  move 0                  to #FedWages

end-procedure

begin-procedure After-Seq

  do Load-Amounts
  do Print-W2
end-procedure


begin-procedure After-FORM

! No special sort selected

  If $SortCode1 = '1'

    NEW-PAGE

    if $TaxForm_ID = 'P'
       do Form-Totals-PR
    else
      if $TaxForm_ID = 'W'
        do Form-Totals-Fed
    else
       do Form-Totals-Rest
      end-if
    end-if

    NEW-PAGE

    move &E.TaxForm_ID to $priorTaxForm_ID
    move &E.TaxForm_ID      to $TaxForm_ID
  end-if

end-procedure

begin-procedure create-array-w2

  if $first-entry = 'Y'

     do Get-Box14-Labels

     create-array name=Box14 size=30
       field=Jurisdiction:char
       field=Box:char
       field=Text:char
       field=Amount:number

     create-array name=Locals size=21
       field=Locality:char
       field=TxGrs:number
       field=Tax:number

     let $first-entry = 'N'
  end-if

end-procedure

begin-procedure Print-W2
  if $E.EmplID <> $priorEmplID or $E.Company <> $priorCompany
    do Print-EE-Data
    next-listing skiplines=1
    move $E.EmplID to $priorEmplID
    move $Company  to $priorCompany
  end-if

  if $TaxForm_ID = 'P'

     if #E.Sequence_Number = 1

        do Print-Amounts

     end-if

     next-listing need=4  skiplines=1

     move 0 to #Cost_Pension_Annuity
     move 0 to #Wages
     move 0 to #Commissions
     move 0 to #Allowance
     move 0 to #Tips
     move 0 to #Reimbursed_Expense
     move 0 to #Tax_Withheld
     move 0 to #Retire_Fund
     move 0 to #CODA_Plans
     move 0 to #SS_Wages_PR
     move 0 to #SS_TAX_PR
     move 0 to #Med_Wages_PR
     move 0 to #Med_Tax_PR
     move 0 to #SS_Tips_PR
     move 0 to #SS_Tax_Tips_PR
     move 0 to #Med_Tax_Tips_PR

  else

    do Federal-and-Territories
  end-if
end-procedure

begin-procedure  Federal-and-Territories

 if $Taxform_ID = 'W'
    if #E.Sequence_Number = 1
       do Identify-Box12-Entries-Fed
       do Print-Federal-Amounts
       move 'F' to $PrintJurisdiction
       do Print-Box14
       do Print-Box13

       do Format-Number(#Alloc_TIPS_F, $out, 'B9999999.99')           !Tips Box 8
       if $EE.Process_Flag <> 'V'
         add #Alloc_TIPS_F to #TotalAlloc_TIPS_F
         add #Alloc_TIPS_F to #FormTotalAlloc_TIPS_F
       end-if
       print $out  (1,158)
     end-if
     if $SortCode1 <> '7'
       do Print-Box12AU (3)
     end-if
     next-listing need=4  skiplines=1

     if RTRIM($E.W2_State,' ') <> ''
        do Print-State-Amounts
     end-if

     move 'S' to $PrintJurisdiction
     do Print-Box14
     if $SortCode1 <> '7'
       do Print-Box12AU (3)
     end-if
     next-listing need=4  skiplines=1

     if RTRIM($E.W2_State,' ') <> ''
       if $SortCode1 <> '7'
         do Print-Local-Amounts
       else
         do Print-Locality-Sort-Amounts
       end-if
     end-if

     if $SortCode1 <> '7'
       do Print-Box12AU (23)
     end-if
     do Zero-Box14
     do Zero-Local-Table

     move 0 to #Fed_Wages_F
     move 0 to #Fed_Tax_F
     move 0 to #SS_Wages_F
     move 0 to #SS_Tax_F
     move 0 to #Med_Wages_F
     move 0 to #Med_Tax_F
     move 0 to #SS_Tips_F
     move 0 to #Alloc_Tips_F
     move 0 to #Adv_EIC_F
     move 0 to #Dep_Care_F
     move 0 to #Non_Qual_457_F
     move 'N' to $Amt_NonQual_457_Y_F
     move 'N' to $Amt_NonQual_457_N_F
     move 0 to #State_Wages_F
     move 0 to #State_Tax_F
     move 0 to #Local_Wages_F
     move 0 to #Local_Tax_F
     move 0 to #Adv_EICS_F
     move 0 to #NextLocal
 else

    if #E.Sequence_Number = 1
       do Identify-Box12-Entries-Terr
       do Print-Territory-Amounts
       move 'F' to $PrintJurisdiction
       do Print-Box14
       do Print-Box13
       do Format-Number(#Alloc_TIPS, $out, 'B9999999.99')           !Tips Box 8
       if $EE.Process_Flag <> 'V'
         add #Alloc_TIPS to #TotalAlloc_TIPS_R
         add #Alloc_TIPS to #FormTotalAlloc_TIPS
       end-if
       print $out  (1,158)
     end-if
     do Print-Box12AU-Terr (3)
     next-listing need=4  skiplines=1

     if RTRIM($E.W2_State,' ') <> ''
        do Print-State-Amounts
     end-if

     move 'S' to $PrintJurisdiction
     do Print-Box14
     do Print-Box12AU-Terr (3)
     next-listing need=4  skiplines=1

     if RTRIM($E.W2_State,' ') <> ''
        do Print-Local-Amounts
     end-if

     do Print-Box12AU-Terr (23)
     do Zero-Box14
     do Zero-Local-Table

     move 0 to #Fed_Wages
     move 0 to #Fed_Tax
     move 0 to #SS_Wages
     move 0 to #SS_Tax
     move 0 to #Med_Wages
     move 0 to #Med_Tax
     move 0 to #SS_Tips
     move 0 to #Alloc_Tips
     move 0 to #Adv_EIC
     move 0 to #Dep_Care
     move 0 to #Non_Qual_457_Amt
     move 'N' to $Amt_NonQual_457_Y
     move 'N' to $Amt_NonQual_457_N
     move 0 to #State_Wages
     move 0 to #State_Tax
     move 0 to #Local_Wages
     move 0 to #Local_Tax
     move 0 to #Adv_EICS
     move 0 to #NextLocal
   end-if


end-procedure

begin-procedure Print-EE-Data
  print ' '               (1)
  next-listing
  print '****  '          (1,1
  print $E.SSN            (1,)
  print $E.YE_FName        (1,+2)
  print $E.EmplID         (1,+2)
  print '  ****'          (1,)

  if $EE.Process_Flag = 'V'
    print '************ VOID ************'  (1,70)
  end-if
end-procedure

begin-procedure Load-Amounts
  move 0 to #LocalCount
begin-SELECT
C.W2_REPORTING_CO
D.STATE
D.LOCALITY
D.BOX

#ifdef DB2ALL
DECIMAL(SUM(D.W2_AMOUNT),15,3) &D.W2_Amount
#else
SUM(D.W2_AMOUNT) &D.W2_Amount
#endif
   move &D.W2_Amount to #Amount

   let $D.Box = &D.Box
   move $D.Box to $Box xx
   let $Pos3 = substr($D.Box, 3,1)

   if $Box = $YE_Box12_StartPos  or
      $Box = $YE_Other
     and $Pos3 > ' '
     let $D.Box = &D.Box
     let $D.Box = rpad($D.Box,4,' ')
   else
     let $D.Box = RTRIM(&D.Box,' ')
   end-if

   do  Assign-Year-End-Variables

   If $TaxForm_ID = 'P'
      do check-box-PR
   else
     if $TaxForm_ID = 'W'
       do check-box-Fed
     else
        do check-box-Rest
     end-if
   end-if


FROM  PS_YE_AMOUNTS D, PS_W2_COMPANY C
WHERE C.W2_REPORTING_CO = &A.W2_Reporting_Co
  AND C.COMPANY         = D.COMPANY
  AND C.CALENDAR_YEAR   = D.CALENDAR_YEAR
  AND D.EMPLID          = $E.Emplid
  AND D.CALENDAR_YEAR   = &TX.Balance_Year
  AND D.TAXFORM_ID      = $TaxForm_ID
!  AND D.TAXFORM_ID      = C.TAXFORM_ID
  AND D.SEQUENCE_NUMBER = #E.Sequence_Number
GROUP BY C.W2_REPORTING_CO, D.STATE, D.LOCALITY, D.BOX
ORDER BY C.W2_REPORTING_CO, D.STATE, D.LOCALITY, D.BOX
end-SELECT
end-procedure

begin-procedure check-box-Rest

     do Evaluate-Box

     if $D.Box = $YE_Local_Wages                  !Local wages
       add 1 to #LocalCount

       if #LocalCount > 20
          display 'Local Array Size Exceeded - Processing Stopped'
          STOP
       end-if

       PUT &D.Locality INTO LOCALS(#LOCALCOUNT) LOCALITY

       PUT #Amount INTO LOCALS(#LOCALCOUNT) TXGRS
     end-if
     if $D.Box = $YE_Local_Tax                     !Local tax
       if rtrim(&D.LOCALITY,' ') = '99990'
          add  #Amount to #Adv_EICS
       else
         PUT #Amount INTO LOCALS(#LOCALCOUNT) TAX
       end-if
     end-if
    if $Box = $YE_Other
       Let #i = 0
       let $Box14Letter = SUBSTR($D.Box,3,2)
       While #i < 29
         Get $BoxLetter from BOX14(#i) Box
         if $BoxLetter = $Box14Letter
           ARRAY-ADD #Amount to BOX14(#i) AMOUNT
           let #i = 29
         end-if
         let #i=#i+1
       End-While
       move '  ' to $Box
    end-if

end-procedure

begin-procedure check-box-Fed

   do Evaluate-Box-Fed

   if $D.Box = $YE_Local_Wages                      !Local wages
       add 1 to #LocalCount

       if #LocalCount > 20
          display 'Local Array Size Exceeded - Processing Stopped'
          STOP
       end-if

       PUT &D.Locality INTO LOCALS(#LOCALCOUNT) LOCALITY

       PUT #Amount INTO LOCALS(#LOCALCOUNT) TXGRS
    end-if
    if $D.Box = $YE_Local_Tax                         !Local tax
       if rtrim(&D.LOCALITY,' ') = '99990'
         add  #Amount to #Adv_EICS_F
       else
         PUT #Amount INTO LOCALS(#LOCALCOUNT) TAX
       end-if
     end-if

    if $Box = $YE_Other
       Let #i = 0
       let $Box14Letter = SUBSTR($D.Box,3,2)
       While #i < 29
         Get $BoxLetter from BOX14(#i) Box
         if $BoxLetter = $Box14Letter
           ARRAY-ADD #Amount to BOX14(#i) AMOUNT
           let #i = 29
         end-if
         let #i=#i+1
       End-While
       move '  ' to $Box
    end-if


end-procedure

begin-procedure check-box-PR

   evaluate $D.Box
     when = $YE_Cost_Pension_Annuity                 !Pension/Annuity
       add  #Amount to #Cost_Pension_Annuity
       break
     when = $YE_Wages                                !PR wages
       add  #Amount to #Wages
       break
     when = $YE_Commissions                          !Commissions
       add  #Amount to #Commissions
       break
     when = $YE_Allowance                            !Allowances
       add  #Amount to #Allowance
       break
     when = $YE_Tips                                 !Tips
       add  #Amount to #Tips
       break
     when = $YE_Reimbursed_Expense                   !Reimbursed Expenses
       add  #Amount to #Reimbursed_Expense
       break
     when = $YE_Tax_Withheld                         !PR Tax Withheld
       add  #Amount to #Tax_Withheld
       break
     when = $YE_Retire_Fund                          !Retirement fund
       add  #Amount to #Retire_Fund
       break
     when = $YE_CODA_Plans                           !CODA Contributions
       add  #Amount to #CODA_Plans
       break
     when = $YE_SS_Wages                             !Soc Sec Wages
       add  #Amount to #SS_Wages_PR
       break
     when = $YE_SS_Tax                               !Soc Sec Tax Withheld
       add  #Amount to #SS_Tax_PR
       break
     when = $YE_Med_Wages                            !Medicare Wages and Tips
       add  #Amount to #Med_Wages_PR
       break
     when = $YE_Med_Tax                              !Medicare Tax Withheld
       add  #Amount to #Med_Tax_PR
       break
     when = $YE_SS_Tips                              !Soc Sec Tips
       add  #Amount to #SS_Tips_PR
       break
     when =  $YE_SS_Tax_Tips                         !Uncollected Soc Sec
       add  #Amount to #SS_Tax_Tips_PR               ! Tax on Tips
       break
     when = $YE_Med_Tax_Tips                         !Uncollected Medicare
       add  #Amount to #Med_Tax_Tips_PR              ! Tax on Tips
       break
   end-evaluate

end-procedure

begin-procedure Print-Amounts

  print 'Federal - PR' (1,1)                           !Federal Boxes

  do Format-Number(#Wages, $out, 'B9999999.99')        !PR wages
  print $out  (1,20)

  do Format-Number(#Tax_Withheld, $out, 'B9999999.99') !PR tax
  print $out  (2,20)

  do Format-Number(#SS_Wages_PR, $out, 'B9999999.99')  !SS wages
  print $out  (1,37)

  do Format-Number(#SS_Tax_PR, $out, 'B9999999.99')    !SS Tax
  print $out  (2,37)

  do Format-Number(#Med_Wages_PR, $out, 'B9999999.99') !Medicare wages
  print $out  (1,54)

  do Format-Number(#Med_Tax_PR, $out, 'B9999999.99')   !Medicare tax
  print $out  (2,54)

  do Format-Number(#Commissions, $out, 'B9999999.99')  !Commissions
  print $out  (1,71)

  do Format-Number(#Allowances, $out, 'B9999999.99')   !Allowances
  print $out  (2,71)

  do Format-Number(#Tips, $out, 'B9999999.99')         !Allocated tips
  print $out  (1,88)

  do Format-Number(#Reimbursed_Expense, $out, 'B9999999.99')  !Reimbursed Exp
  print $out  (2,88)

  do Format-Number(#Retire_Fund, $out, 'B9999999.99')           !Retirement Fund
  print $out  (1,106)

  do Format-Number(#CODA_Plans, $out, 'B9999999.99')           !CODA Contributions
  print $out  (2,106)

  if $EE.Process_Flag <> 'V'
    add #Wages  to #TotalWages_P
    add #Wages  to #FormTotalWages
    add #Tax_Withheld to #TotalTax_Withheld_P
    add #Tax_Withheld to #FormTotalTax_Withheld
    add #SS_Wages_PR to #TotalSS_Wages_PR_P
    add #SS_Wages_PR to #FormTotalSS_Wages_PR
    add #SS_Tax_PR to #TotalSS_Tax_PR_P
    add #SS_Tax_PR to #FormTotalSS_Tax_PR
    add #Med_Wages_PR to #TotalMed_Wages_PR_P
    add #Med_Wages_PR to #FormTotalMed_Wages_PR
    add #Med_Tax_PR to #TotalMed_Tax_PR_P
    add #Med_Tax_PR to #FormTotalMed_Tax_PR
    add #Commissions to #TotalCommissions_P
    add #Commissions to #FormTotalCommissions
    add #Allowances to #TotalAllowances_P
    add #Allowances to #FormTotalAllowances
    add #Tips to #TotalTips_P
    add #Tips to #FormTotalTips
    add #Reimbursed_Expense to #TotalReimbursed_Expense_P
    add #Reimbursed_Expense to #FormTotalReimbursed_Expense
    add #Retire_Fund to #TotalRetire_Fund_P
    add #Retire_Fund to #FormTotalRetire_Fund
    add #CODA_Plans to #TotalCODA_Plans_P
    add #CODA_Plans to #FormTotalCODA_Plans
  end-if

end-procedure

begin-procedure Print-Federal-Amounts
  print 'Federal' (1,1)                                !Federal Boxes

  do Format-Number(#Fed_Wages_F, $out ,'B9999999.99')           !Federal wages
  print $out  (1,20)

  do Format-Number(#Fed_Tax_F, $out, 'B9999999.99')           !Federal tax
  print $out  (2,20)

  do Format-Number(#SS_Wages_F, $out, 'B9999999.99')           !SS wages
  print $out  (1,37)

  do Format-Number(#SS_Tax_F, $out, 'B9999999.99')           !SS Tax
  print $out  (2,37)

  do Format-Number(#Med_Wages_F, $out, 'B9999999.99')           !Medicare wages
  print $out  (1,54)

  do Format-Number(#Med_Tax_F, $out, 'B9999999.99')           !Medicare tax
  print $out  (2,54)

! do Format-Number(#SS_Tips_F, $out, 'B9999999.99')           !SS tips
! print $out  (#L_07,#C_07)

! do Format-Number(#Alloc_Tips_F, $out, 'B9999999.99')           !Allocated tips
! print $out  (#L_08,#C_08)

  do Format-Number(#Adv_EIC_F, $out, 'B9999999.99')           !EIC
  print $out  (1,71)

  do Format-Number(#Dep_Care_F, $out, 'B9999999.99')           !Dependent care
  print $out  (2,71)

  do Format-Number(#Non_Qual_457_F, $out, 'B9999999.99')         !non-qualified plan total
  print $out  (1,88)
  if $AmtNonQual_457_Y_F = 'Y'
    if $AmtNonQual_457_N_F = 'N'
      print 'G' (1,)
    end-if
  end-if

  if $EE.Process_Flag <> 'V'
    add #Fed_Wages_F to #TotalFed_Wages_F
    add #Fed_Wages_F to #FormTotalFed_Wages_F
    add #Fed_Tax_F to #TotalFed_Tax_F
    add #Fed_Tax_F to #FormTotalFed_Tax_F
    add #SS_Wages_F to #TotalSS_Wages_F
    add #SS_Wages_F to #FormTotalSS_Wages_F
    add #SS_Tax_F to #TotalSS_Tax_F
    add #SS_Tax_F to #FormTotalSS_Tax_F
    add #Med_Wages_F to #TotalMed_Wages_F
    add #Med_Wages_F to #FormTotalMed_Wages_F
    add #Med_Tax_F to #TotalMed_Tax_F
    add #Med_Tax_F to #FormTotalMed_Tax_F
  ! add #SS_Tips_F  to #TotalSS_Tips_F
  ! add #Alloc_Tips_F to #TotalAlloc_Tips_F
    add #Adv_EIC_F to #TotalAdv_EIC_F
    add #Adv_EIC_F to #FormTotalAdv_EIC_F
    add #Dep_Care_F to #TotalDep_Care_F
    add #Dep_Care_F to #FormTotalDep_Care_F
    add #Non_Qual_457_F to #TotalNon_Qual_457_F
    add #Non_Qual_457_F to #FormTotalNon_Qual_457_F
  end-if

end-procedure

begin-procedure Print-Territory-Amounts
  print 'Federal' (1,1)                                !Federal Boxes

  do Format-Number(#Fed_Wages, $out ,'B9999999.99')           !Federal wages
  print $out  (1,20)

  do Format-Number(#Fed_Tax, $out, 'B9999999.99')           !Federal tax
  print $out  (2,20)

  do Format-Number(#SS_Wages, $out, 'B9999999.99')           !SS wages
  print $out  (1,37)

  do Format-Number(#SS_Tax, $out, 'B9999999.99')           !SS Tax
  print $out  (2,37)

  do Format-Number(#Med_Wages, $out, 'B9999999.99')           !Medicare wages
  print $out  (1,54)

  do Format-Number(#Med_Tax, $out, 'B9999999.99')           !Medicare tax
  print $out  (2,54)

! do Format-Number(#SS_Tips, $out, 'B9999999.99')           !SS tips
! print $out  (#L_07,#C_07)

! do Format-Number(#08, $out, 'B9999999.99')           !Allocated tips
! print $out  (#L_08,#C_08)

  do Format-Number(#Adv_EIC, $out, 'B9999999.99')           !EIC
  print $out  (1,71)

  do Format-Number(#Dep_Care, $out, 'B9999999.99')           !Dependent care
  print $out  (2,71)

  do Format-Number(#Non_Qual_457_Amt, $out, 'B9999999.99')   !non-qualified plan total
  print $out  (1,88)
  if $AmtNonQual_457_Y = 'Y'
    if $AmtNonQual_457_N = 'N'
      print 'G' (1,)
    end-if
  end-if

  if $EE.Process_Flag <> 'V'
    add #Fed_Wages to #TotalFed_Wages_T
    add #Fed_Wages to #FormTotalFed_Wages
    add #Fed_Tax to #TotalFed_Tax_T
    add #Fed_Tax to #FormTotalFed_Tax
    add #SS_Wages to #TotalSS_Wages_T
    add #SS_Wages to #FormTotalSS_Wages
    add #SS_Tax to #TotalSS_Tax_T
    add #SS_Tax to #FormTotalSS_Tax
    add #Med_Wages to #TotalMed_Wages_T
    add #Med_Wages to #FormTotalMed_Wages
    add #Med_Tax to #TotalMed_Tax_T
    add #Med_Tax to #FormTotalMed_Tax
  ! add #SS_Tips  to #TotalSS_Tips_T
  ! add #08 to #Total08R
    add #Adv_EIC to #TotalAdv_EIC_T
    add #Adv_EIC to #FormTotalAdv_EIC
    add #Dep_Care to #TotalDep_Care_T
    add #Dep_Care to #FormTotalDep_Care
    add #Non_Qual_457_Amt to #TotalNon_Qual_457_T
    add #Non_Qual_457_Amt to #FormTotalNon_Qual_457
  end-if

end-procedure

begin-procedure Print-State-Amounts
  print $E.W2_State (1,1)                        !State
  do Format-Number(#State_Wages_F, $out, 'B9999999.99')     !State wages
  print $out  (1,20)

  do Format-Number(#State_Tax_F, $out, 'B9999999.99')     !State tax
  print $out  (2,20)

  do Format-Number(#Adv_EICS_F, $out, 'B9999999.99')           !State EIC
  print $out  (1,71)

end-procedure

begin-procedure Print-Local-Amounts
  while #NextLocal < #LocalCount
    add 1 to #NextLocal

    get $Locality #18 #19 from Locals(#NextLocal)

    let $Locality = RTRIM($Locality,' ')
    if $Locality <> $priorLocality
      do Get-Locality-Print-Name
      move $Locality to $priorLocality
    end-if
    uppercase $LocalityPrintName
    print $LocalityPrintName (1,1)

    do Format-Number(#18, $out, 'B9999999.99')           !Local wages
    print $out  (1,20)

    do Format-Number(#19, $out, 'B9999999.99')           !Local tax
    print $out  (2,20)
    next-listing need=4  skiplines=1
  end-while
end-procedure

begin-procedure Print-Locality-Sort-Amounts

  while #NextLocal < #LocalCount
    add 1 to #NextLocal

    get $Locality #18 #19 from Locals(#NextLocal)

    if &SL.LOCALITY = $Locality
      let $Locality = RTRIM($Locality,' ')
      if $Locality <> $priorLocality
        do Get-Locality-Print-Name
        move $Locality to $priorLocality
      end-if
      uppercase $LocalityPrintName
      print $LocalityPrintName (1,1)

      do Format-Number(#18, $out, 'B9999999.99')           !Local wages
      print $out  (1,20)

      do Format-Number(#19, $out, 'B9999999.99')           !Local tax
      print $out  (2,20)
      next-listing need=4  skiplines=1
     end-if
  end-while
end-procedure

begin-procedure Identify-Box12-Entries-Terr
  let $Box12CheckString = ''

  if #Uncoll_SS_Tax_On_Tips <> 0                                   !Uncoll SS tax on tips
    let $Box12CheckString = $Box12CheckString || 'A '
  end-if

  if #Uncoll_Med_Tax_On_Tips <> 0                                   !Uncoll Medi tax on tips
    let $Box12CheckString = $Box12CheckString || 'B '
  end-if

  if #Group_Term_Life <> 0                                   !GTL
    let $Box12CheckString = $Box12CheckString || 'C '
  end-if

  if #401K <> 0                                   !401(k)
    let $Box12CheckString = $Box12CheckString || 'D '
  end-if

  if #403B <> 0                                   !403(b)
    let $Box12CheckString = $Box12CheckString || 'E '
  end-if

  if #408K6 <> 0                                   !408(k)(6)
    let $Box12CheckString = $Box12CheckString || 'F '
  end-if

  if #457B  <> 0                                   !457(b)
    let $Box12CheckString = $Box12CheckString || 'G '
  end-if

  if #501C18D <> 0                                   !501(c)(18)(D)
    let $Box12CheckString = $Box12CheckString || 'H '
  end-if

  if #Sick_Pay  <> 0                                   !Sick pay
    let $Box12CheckString = $Box12CheckString || 'J '
  end-if

  if #Excise_Tax <> 0                                   !Excise tax
    let $Box12CheckString = $Box12CheckString || 'K '
  end-if

  if #Business_Exp <> 0                                 !Business expense
    let $Box12CheckString = $Box12CheckString || 'L '
  end-if

  if #Uncoll_SS_Tax_GTL <> 0                            !Uncoll SS tax - GTL
    let $Box12CheckString = $Box12CheckString || 'M '
  end-if

  if #Uncoll_Med_Tax_GTL <> 0                            !Uncoll Medi tax - GTL
    let $Box12CheckString = $Box12CheckString || 'N '
  end-if

  if #Excl_Moving_Exp <> 0                               !Exclud Moving Exp Reimb
    let $Box12CheckString = $Box12CheckString || 'P '
  end-if

  if #Basic_Qtrs_and_Subsist <> 0                        !Basic Quarters and Subsistance
    let $Box12CheckString = $Box12CheckString || 'Q '
  end-if

  if #Combat_Pay <> 0                                    !Nontaxable Combat Pay
    let $Box12CheckString = $Box12CheckString || 'Q '
  end-if

  if #Med_Svgs_Acct <> 0                                 !Medical Spending Account
    let $Box12CheckString = $Box12CheckString || 'R '
  end-if

  if #408P_Simple_Retirement <> 0                        !Section 418(p) SIMPLE Retirement
    let $Box12CheckString = $Box12CheckString || 'S '
  end-if

  if #Adoption_Exp <> 0                                  !Adoption Expenses
    let $Box12CheckString = $Box12CheckString || 'T '
  end-if

  if #NonStatutory_Stock_Opt <> 0
    let $Box12CheckString = $Box12CheckString || 'V '
  end-if

  if #HSA_Employer_Contrib <> 0                          !HSA Employer Contributions
    let $Box12CheckString = $Box12CheckString || 'W '
  end-if

  if #409A_Def_NQ_Def_Comp <> 0                          !409A Deferral NQ Deferred Comp
    let $Box12CheckString = $Box12CheckString || 'Y '
  end-if

  if #409A_Inc_NQ_Def_Comp <> 0                          !409A Income NQ Deferred Comp
    let $Box12CheckString = $Box12CheckString || 'Z '
  end-if
  if #Roth_401K <> 0                                     !Roth Contribution to 401K
    let $Box12CheckString = $Box12CheckString || 'AA'
  end-if

  if #Roth_403B <> 0
    let $Box12CheckString = $Box12CheckString || 'BB'    !Roth Contribution to 403B
  end-if

end-procedure

begin-procedure Identify-Box12-Entries-Fed
  let $Box12CheckString = ''

  if #Uncoll_SS_Tax_On_Tips_F <> 0                       !Uncoll SS tax on tips
    let $Box12CheckString = $Box12CheckString || 'A '
  end-if

  if #Uncoll_Med_Tax_On_Tips_F <> 0                      !Uncoll Medi tax on tips
    let $Box12CheckString = $Box12CheckString || 'B '
  end-if

  if #Group_Term_Life_F <> 0                             !GTL
    let $Box12CheckString = $Box12CheckString || 'C '
  end-if

  if #401K_F <> 0                                        !401(k)
    let $Box12CheckString = $Box12CheckString || 'D '
  end-if

  if #403B_F <> 0                                        !403(b)
    let $Box12CheckString = $Box12CheckString || 'E '
  end-if

  if #408K6_F <> 0                                       !408(k)(6)
    let $Box12CheckString = $Box12CheckString || 'F '
  end-if

  if #457B_F  <> 0                                       !457(b)
    let $Box12CheckString = $Box12CheckString || 'G '
  end-if

  if #501C18D_F <> 0                                     !501(c)(18)(D)
    let $Box12CheckString = $Box12CheckString || 'H '
  end-if

  if #Sick_Pay_F  <> 0                                   !Sick pay
    let $Box12CheckString = $Box12CheckString || 'J '
  end-if

  if #Excise_Tax_F <> 0                                  !Excise tax
    let $Box12CheckString = $Box12CheckString || 'K '
  end-if

  if #Business_Exp_F <> 0                                !Business expense
    let $Box12CheckString = $Box12CheckString || 'L '
  end-if

  if #Uncoll_SS_Tax_GTL_F <> 0                           !Uncoll SS tax - GTL
    let $Box12CheckString = $Box12CheckString || 'M '
  end-if

  if #Uncoll_Med_Tax_GTL_F <> 0                          !Uncoll Medi tax - GTL
    let $Box12CheckString = $Box12CheckString || 'N '
  end-if

  if #Excl_Moving_Exp_F <> 0                             !Exclud Moving Exp Reimb
    let $Box12CheckString = $Box12CheckString || 'P '
  end-if

  if #Basic_Qtrs_and_Subsist_F <> 0                      !Basic Quarters and Subsistance
    let $Box12CheckString = $Box12CheckString || 'Q '
  end-if

  if #Combat_Pay_F <> 0                                  !Nontaxable Combat Pay
    let $Box12CheckString = $Box12CheckString || 'Q '
  end-if

  if #Med_Svgs_Acct_F <> 0                               !Medical Spending Account
    let $Box12CheckString = $Box12CheckString || 'R '
  end-if

  if #408P_Simple_Retirement_F <> 0                      !Section 418(p) SIMPLE Retirement
    let $Box12CheckString = $Box12CheckString || 'S '
  end-if

  if #Adoption_Exp_F <> 0                                !Adoption Expenses
    let $Box12CheckString = $Box12CheckString || 'T '
  end-if

  if #NonStatutory_Stock_Opt_F <> 0
    let $Box12CheckString = $Box12CheckString || 'V '
  end-if

  if #HSA_Employer_Contrib_F <> 0                        !HSA Employer Contributions
    let $Box12CheckString = $Box12CheckString || 'W '
  end-if

  if #409A_Def_NQ_Def_Comp_F <> 0                        !409A Deferral NQ Deferred Comp
    let $Box12CheckString = $Box12CheckString || 'Y '
  end-if

  if #409A_Inc_NQ_Def_Comp_F <> 0                        !409A Income NQ Deferred Comp
    let $Box12CheckString = $Box12CheckString || 'Z '
  end-if

  if #Roth_401K_F <> 0                                               !Roth Contribution to 401K
    let $Box12CheckString = $Box12CheckString || 'AA'
  end-if

  if #Roth_403B_F <> 0
    let $Box12CheckString = $Box12CheckString || 'BB'              !Roth Contribution to 403B
  end-if

end-procedure

begin-procedure Print-Box12AU(#Count)
  let $_Box12PrintString = SUBSTR($_Box12CheckString,1,(#Count * 2))
  move 1 to #L_12

  if INSTR($_Box12PrintString,'A ',1)              !Uncoll SS tax on tips
    print 'A ' (#L_12,106)
    do Format-Number(#_Uncoll_SS_Tax_On_Tips_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Uncoll_SS_Tax_On_Tips_F
  end-if

  if INSTR($_Box12PrintString,'B ',1)              !Uncoll Medi tax on tips
    print 'B ' (#L_12,106)
    do Format-Number(#_Uncoll_Med_Tax_On_Tips_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Uncoll_Med_Tax_On_Tips_F
  end-if

  if INSTR($_Box12PrintString,'C ',1)               !GTL
    print 'C ' (#L_12,106)
    do Format-Number(#_Group_Term_Life_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Group_Term_Life_F
  end-if

  if INSTR($_Box12PrintString,'D ',1)               !401(k)
    print 'D ' (#L_12,106)
    do Format-Number(#_401K_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_401K_F
  end-if

  if INSTR($_Box12PrintString,'E ',1)               !403(b)
    print 'E ' (#L_12,106)
    do Format-Number(#_403B_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_403B_F
  end-if

  if INSTR($_Box12PrintString,'F ',1)               !408(k)(6)
    print 'F ' (#L_12,106)
    do Format-Number(#_408K6_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_408K6_F
  end-if

  if INSTR($_Box12PrintString,'G ',1)               !457(b)
    print 'G ' (#L_12,106)
    do Format-Number(#_457B_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_457B_F
  end-if

  if INSTR($_Box12PrintString,'H ',1)               !501(c)(18)(D)
    print 'H ' (#L_12,106)
    do Format-Number(#_501C18D_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_501C18D_F
  end-if

  if INSTR($_Box12PrintString,'J ',1)               !Sick pay
    print 'J ' (#L_12,106)
    do Format-Number(#_Sick_Pay_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Sick_Pay_F
  end-if

  if INSTR($_Box12PrintString,'K ',1)               !Excise tax
    print 'K ' (#L_12,106)
    do Format-Number(#_Excise_Tax_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Excise_Tax_F
  end-if

  if INSTR($_Box12PrintString,'L ',1)               !Business expense
    print 'L ' (#L_12,106)
    do Format-Number(#_Business_Exp_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Business_Exp_F
  end-if

  if INSTR($_Box12PrintString,'M ',1)               !Uncoll SS tax - GTL
    print 'M ' (#L_12,106)
    do Format-Number(#_Uncoll_SS_Tax_GTL_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Uncoll_SS_Tax_GTL_F
  end-if

  if INSTR($_Box12PrintString,'N ',1)               !Uncoll Medi tax - GTL
    print 'N ' (#L_12,106)
    do Format-Number(#_Uncoll_Med_Tax_GTL_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Uncoll_Med_Tax_GTL_F
  end-if

  if INSTR($_Box12PrintString,'P ',1)               !Exclud Moving Exp Reimb
    print 'P ' (#L_12,106)
    do Format-Number(#_Excl_Moving_Exp_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Excl_Moving_Exp_F
  end-if

  if INSTR($_Box12PrintString,'Q ',1)               !Basic Quarters and Subsistance
    print 'Q ' (#L_12,106)
    if #_Basic_Qtrs_and_Subsist_F <>  0
      do Format-Number(#_Basic_Qtrs_and_Subsist_F, $out, 'B9999999.99')
    else
      do Format-Number(#_Combat_Pay_F, $out, 'B9999999.99')
    end-if
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Basic_Qtrs_and_Subsist_F
    move 0 to #_Combat_Pay_F
  end-if

  if INSTR($_Box12PrintString,'R ',1)               !Medical Spending Account
    print 'R ' (#L_12,106)
    do Format-Number(#_Med_Svgs_Acct_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Med_Svgs_Acct_F
  end-if

  if INSTR($_Box12PrintString,'S ',1)               !Section 418(p) SIMPLE Retirement
    print 'S ' (#L_12,106)
    do Format-Number(#_408P_Simple_Retirement_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_408P_Simple_Retirement_F
  end-if

  if INSTR($_Box12PrintString,'T ',1)               !Adoption Expenses
    print 'T ' (#L_12,106)
    do Format-Number(#_Adoption_Exp_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Adoption_Exp_F
  end-if

  if INSTR($_Box12PrintString,'V ',1)
    print 'V ' (#L_12,106)
    do Format-Number(#_NonStatutory_Stock_Opt_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_NonStatutory_Stock_Opt_F
  end-if

  if INSTR($_Box12PrintString,'W ',1)                !HSA Employer Contributions
    print 'W ' (#L_12,106)
    do Format-Number(#_HSA_Employer_Contrib_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_HSA_Employer_Contrib_F
  end-if

  if INSTR($_Box12PrintString,'Y ',1)                !409A Deferral NQ Deferred Comp
    print 'Y ' (#L_12,106)
    do Format-Number(#_409A_Def_NQ_Def_Comp_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_409A_Def_NQ_Def_Comp_F
  end-if

  if INSTR($_Box12PrintString,'Z ',1)                !409A Income NQ Deferred Comp
    print 'Z ' (#L_12,106)
    do Format-Number(#_409A_Inc_NQ_Def_Comp_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_409A_Inc_NQ_Def_Comp_F
  end-if


  if INSTR($_Box12PrintString,'AA',1)                !Roth Contrib to 401K
    print 'AA' (#L_12,106)
    do Format-Number(#_Roth_401K_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Roth_401K_F
  end-if

  if INSTR($_Box12PrintString,'BB',1)                !Roth Contrib to 403B
    print 'BB' (#L_12,106)
    do Format-Number(#_Roth_403B_F, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Roth_403B_F
  end-if

  let $_Box12CheckString = LTRIM($_Box12CheckString,$_Box12PrintString)

end-procedure

begin-procedure Print-Box12AU-Terr (#Count)

  let $_Box12PrintString = SUBSTR($_Box12CheckString,1,(#Count * 2))
  move 1 to #L_12

  if INSTR($_Box12PrintString,'A ',1)              !Uncoll SS tax on tips
    print 'A ' (#L_12,106)
    do Format-Number(#_Uncoll_SS_Tax_On_Tips, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Uncoll_SS_Tax_On_Tips
  end-if

  if INSTR($_Box12PrintString,'B ',1)              !Uncoll Medi tax on tips
    print 'B ' (#L_12,106)
    do Format-Number(#_Uncoll_Med_Tax_On_Tips, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Uncoll_Med_Tax_On_Tips
  end-if

  if INSTR($_Box12PrintString,'C ',1)               !GTL
    print 'C ' (#L_12,106)
    do Format-Number(#_Group_Term_Life, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Group_Term_Life
  end-if

  if INSTR($_Box12PrintString,'D ',1)               !401(k)
    print 'D ' (#L_12,106)
    do Format-Number(#_401K, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_401K
  end-if

  if INSTR($_Box12PrintString,'E ',1)               !403(b)
    print 'E ' (#L_12,106)
    do Format-Number(#_403B, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_403B
  end-if

  if INSTR($_Box12PrintString,'F ',1)               !408(k)(6)
    print 'F ' (#L_12,106)
    do Format-Number(#_408K6, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_408K6
  end-if

  if INSTR($_Box12PrintString,'G ',1)               !457(b)
    print 'G ' (#L_12,106)
    do Format-Number(#_457B, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_457B
  end-if

  if INSTR($_Box12PrintString,'H ',1)               !501(c)(18)(D)
    print 'H ' (#L_12,106)
    do Format-Number(#_501C18D, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_501C18D
  end-if

  if INSTR($_Box12PrintString,'J ',1)               !Sick pay
    print 'J ' (#L_12,106)
    do Format-Number(#_Sick_Pay, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Sick_Pay
  end-if

  if INSTR($_Box12PrintString,'K ',1)               !Excise tax
    print 'K ' (#L_12,106)
    do Format-Number(#_Excise_Tax, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Excise_Tax
  end-if

  if INSTR($_Box12PrintString,'L ',1)               !Business expense
    print 'L ' (#L_12,106)
    do Format-Number(#_Business_Exp, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Business_Exp
  end-if

  if INSTR($_Box12PrintString,'M ',1)               !Uncoll SS tax - GTL
    print 'M ' (#L_12,106)
    do Format-Number(#_Uncoll_SS_Tax_GTL, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Uncoll_SS_Tax_GTL
  end-if

  if INSTR($_Box12PrintString,'N ',1)               !Uncoll Medi tax - GTL
    print 'N ' (#L_12,106)
    do Format-Number(#_Uncoll_Med_Tax_GTL, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Uncoll_Med_Tax_GTL
  end-if

  if INSTR($_Box12PrintString,'P ',1)               !Exclud Moving Exp Reimb
    print 'P ' (#L_12,106)
    do Format-Number(#_Excl_Moving_Exp, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Excl_Moving_Exp
  end-if

  if INSTR($_Box12PrintString,'Q ',1)               !Basic Quarters and Subsistance
    print 'Q ' (#L_12,106)
    if #_Basic_Qtrs_and_Subsist <>  0
      do Format-Number(#_Basic_Qtrs_and_Subsist, $out, 'B9999999.99')
    else
      do Format-Number(#_Combat_Pay, $out, 'B9999999.99')
    end-if
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Basic_Qtrs_and_Subsist
    move 0 to #_Combat_Pay
  end-if

  if INSTR($_Box12PrintString,'R ',1)               !Medical Spending Account
    print 'R ' (#L_12,106)
    do Format-Number(#_Med_Svgs_Acct, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Med_Svgs_Acct
  end-if

  if INSTR($_Box12PrintString,'S ',1)               !Section 418(p) SIMPLE Retirement
    print 'S ' (#L_12,106)
    do Format-Number(#_408P_Simple_Retirement, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_408P_Simple_Retirement
  end-if

  if INSTR($_Box12PrintString,'T ',1)               !Adoption Expenses
    print 'T ' (#L_12,106)
    do Format-Number(#_Adoption_Exp, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Adoption_Exp
  end-if

  if INSTR($_Box12PrintString,'V ',1)
    print 'V ' (#L_12,106)
    do Format-Number(#_NonStatutory_Stock_Opt, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_NonStatutory_Stock_Opt
  end-if

  if INSTR($_Box12PrintString,'W ',1)               !HSA Employer Contributions
    print 'W ' (#L_12,106)
    do Format-Number(#_HSA_Employer_Contrib, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_HSA_Employer_Contrib
  end-if

  if INSTR($_Box12PrintString,'Y ',1)                !409A Deferral NQ Deferred Comp
    print 'Y ' (#L_12,106)
    do Format-Number(#_409A_Def_NQ_Def_Comp, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_409A_Def_NQ_Def_Comp
  end-if

  if INSTR($_Box12PrintString,'Z ',1)                !409A Income NQ Deferred Comp
    print 'Z ' (#L_12,106)
    do Format-Number(#_409A_Inc_NQ_Def_Comp, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_409A_Inc_NQ_Def_Comp
  end-if

  if INSTR($_Box12PrintString,'AA',1)                !Roth Contrib to 401K
    print 'AA' (#L_12,106)
    do Format-Number(#_Roth_401K, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Roth_401K_F
  end-if

  if INSTR($_Box12PrintString,'BB',1)                !Roth Contrib to 403B
    print 'BB' (#L_12,106)
    do Format-Number(#_Roth_403B, $out, 'B9999999.99')
    print $out (,+1)
    add 1 to #L_12
    move 0 to #_Roth_403B_F
  end-if

  let $_Box12CheckString = LTRIM($_Box12CheckString,$_Box12PrintString)
end-procedure

begin-procedure Print-Box14
  move 1 to #L_14
  move 0 to #m
  while #m <= 29
    get $Jurisdiction $T_14 #14 from Box14(#m) Jurisdiction Text Amount
    if #14 > 0 and $Jurisdiction = $PrintJurisdiction
      print $T_14 (#L_14,124,7)
      do Format-Number(#14, $out, 'B9999999.99')
      print $out (,+1)
      add 1 to #L_14
    end-if
    add 1 to #m
  end-while
end-procedure

begin-procedure Zero-Box14
  move 0 to #m
  while #m <= 29
    put 0 into Box14(#m) Amount
    add 1 to #m
  end-while
end-procedure

begin-procedure Zero-Local-Table
   move 0 to #l
   while #l <= 20
      put '      ' into Locals(#l) Locality
      put 0 into Locals(#l)   TxGrs
      put 0 into Locals(#l)  Tax
      add 1 to #l
   end-while
end-procedure

begin-procedure Print-Box13
  move 1 to #L_13

  if $E.Statutory_Ee = 'Y'
    print 'Statutory EE'  (#L_13,144)
    add 1 to #L_13
  end-if

  if $E.Pension_Plan = 'Y'
    print 'Retire Fund'  (#L_13,144)
    add 1 to #L_13
  end-if

  if $E.Thirdparty_Sickpay = 'Y'
    print 'Thrd Pty Sick'   (#L_13,144)
    add 1 to #L_13
  end-if

end-procedure

begin-procedure Get-Box14-Labels
begin-SELECT
B.BOX

  let $Box14Letter = SUBSTR(&B.Box,3,2)
  let $Box14Letter = rpad($Box14Letter,2,' ')
  if $Box14Letter > ' '
    PUT $Box14Letter INTO BOX14(#i) BOX
    let #i=#i+1
  end-if


FROM  PS_TAXFORM_BOX B
WHERE B.TAXFORM_ID = 'W'
  AND B.BOX LIKE '14%'
  AND B.EFFDT =
      (SELECT MAX(EFFDT)
        FROM  PS_TAXFORM_BOX
       WHERE  BOX        = B.BOX
         AND  TAXFORM_ID = B.TAXFORM_ID
         AND  EFFDT     <= $AsOfDate)

ORDER BY B.BOX


end-SELECT
begin-SELECT
B1.BOX
B1.DESCRSHORT
T.JURISDICTION_TYPE

  let $Box14Letter = SUBSTR(&B1.Box,3,2)
  let $Box14Letter = rpad($Box14Letter,2,' ')
  let #i=0
  if $Box14Letter > ' '
    while #i < 29

      get $BoxLetter from BOX14(#i) Box
      if $BoxLetter = $Box14Letter
        PUT &T.Jurisdiction_Type &B1.DescrShort
             INTO BOX14(#i) JURISDICTION TEXT
        let #i=29
      end-if
      let #i=#i+1
    end-while
  end-if

FROM  PS_TAXFORM_BOX B1, PS_TAXFORM_TAX T
WHERE B1.TAXFORM_ID = 'W'
  AND B1.BOX LIKE '14%'
  AND B1.EFFDT =
      (SELECT MAX(EFFDT)
        FROM  PS_TAXFORM_BOX
       WHERE  BOX        = B1.BOX
         AND  TAXFORM_ID = B1.TAXFORM_ID
         AND  EFFDT     <= $AsOfDate)
  and T.TAXFORM_ID = B1.TAXFORM_ID
  and T.BOX        = B1.BOX
  and T.EFFDT      = B1.EFFDT
end-SELECT


begin-SELECT
B2.BOX
B2.DESCRSHORT

  let #j = 0
  let $Box14Letter = SUBSTR(&B2.Box,3,2)
  let $Box14Letter = rpad($Box14Letter,2,' ')
  if $Box14Letter > ' '
    while #j < 29
      get $BoxLetter from Box14(#j) Box
        if $BoxLetter = $Box14Letter
           if $Box14Letter = 'YN' or
              $Box14Letter = 'YT' or
              $Box14Letter = 'ZN'
             PUT 'S' &B2.DescrShort INTO BOX14(#j) JURISDICTION TEXT
           else

             PUT 'F' &B2.DescrShort INTO BOX14(#j) JURISDICTION TEXT
           end-if
           let #j=29
        end-if
        let #j=#j+1
    end-while
  end-if

FROM  PS_TAXFORM_BOX B2, PS_TAXFORM_ERN E
WHERE B2.TAXFORM_ID = 'W'
  AND B2.BOX LIKE '14%'
  AND B2.EFFDT =
      (SELECT MAX(EFFDT)
        FROM  PS_TAXFORM_BOX
       WHERE  BOX        = B2.BOX
         AND  TAXFORM_ID = B2.TAXFORM_ID
         AND  EFFDT     <= $AsOfDate)
  and E.TAXFORM_ID = B2.TAXFORM_ID
  and E.BOX        = B2.BOX
  and E.EFFDT      = B2.EFFDT
end-SELECT

begin-SELECT
B3.BOX
B3.DESCRSHORT

  let #k = 0
  let $Box14Letter = SUBSTR(&B3.Box,3,2)
  let $Box14Letter = rpad($Box14Letter,2,' ')
  if $Box14Letter > ' '
    while #k < 29
      get $BoxLetter from Box14(#k) Box
        if $BoxLetter = $Box14Letter
           PUT 'F' &B3.DescrShort INTO BOX14(#k) JURISDICTION TEXT
           let #k=29
        end-if
        let #k = #k+1
    end-while
  end-if

FROM  PS_TAXFORM_BOX B3, PS_TAXFORM_DED D
WHERE B3.TAXFORM_ID = 'W'
  AND B3.BOX LIKE '14%'
  AND B3.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_TAXFORM_BOX
       WHERE  BOX        = B3.BOX
         AND  TAXFORM_ID = B3.TAXFORM_ID
         AND  EFFDT     <= $AsOfDate)
  and D.TAXFORM_ID = B3.TAXFORM_ID
  and D.BOX        = B3.BOX
  and D.EFFDT      = B3.EFFDT
end-SELECT
end-procedure
begin-procedure Get-Locality-Print-Name
  move 'N' to $LocalityNameFound

begin-SELECT
L2.W2_PRT_NAME
L2.LOCALITY_ABBRV

  move 'Y' to $LocalityNameFound

FROM  PS_LOCAL_TAX_TBL2 L2
WHERE L2.STATE     = $E.W2_State
  AND L2.LOCALITY  = $Locality
  AND L2.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_LOCAL_TAX_TBL2
       WHERE  STATE    = L2.STATE
         AND  LOCALITY = L2.LOCALITY
         AND  EFFDT   <= $AsOfDate)
end-SELECT

  if $LocalityNameFound = 'Y' and RTRIM(&L2.W2_Prt_Name,' ') <> ''
    move &L2.W2_Prt_Name to $LocalityPrintName
  else
    if $LocalityNameFound = 'Y' and RTRIM(&L2.Locality_Abbrv,' ') <> ''
       move &L2.Locality_Abbrv to $LocalityPrintName
    else
       do Get-Locality-Abbrv
    end-if
  end-if
end-procedure

begin-procedure Get-Locality-Abbrv
begin-SELECT
L.LOCALITY_NAME

  let $LocalityPrintName  = SUBSTR(&L.LOCALITY_NAME,1,16)

FROM  PS_LOCAL_TAX_TBL L
WHERE L.STATE      = $E.W2_State
  AND L.LOCALITY   = $Locality
  AND L.EFFDT =
      (SELECT MAX(EFFDT)
       FROM   PS_LOCAL_TAX_TBL
       WHERE  STATE    = L.STATE
         AND  LOCALITY = L.LOCALITY
         AND  EFFDT   <= $AsOfDate)
end-SELECT

end-procedure

begin-procedure Prompts
  do Prompt-for-Sort

  while $SelectEEs = ''
    display ''
    display 'Regular processing or Select employees?'
    input $SelectEEs 'Enter R or S'
    uppercase $SelectEEs
    if INSTR('RS',$SelectEEs,1) = 0
      display 'Enter R or S'
      move '' to $SelectEEs
    end-if
  end-while

  if $SelectEEs = 'S'
    display 'Enter EmplID or hit ENTER to stop selecting'
    move 'AND E.EMPLID in (''' to $E.SelectedEEs
    move 'AND S.EMPLID in (''' to $S.SelectedEEs
    move 'AND J.EMPLID in (''' to $J.SelectedEEs
    move ' ' to $SelectedEmplID
    while $SelectedEmplID <> ''
      input $SelectedEmplID ' '
      if $SelectedEmplID <> ''
        uppercase $SelectedEmplID
        let $E.SelectedEEs = $E.SelectedEEs || $SelectedEmplID || ''','''
        let $S.SelectedEEs = $S.SelectedEEs || $SelectedEmplID || ''','''
        let $J.SelectedEEs = $J.SelectedEEs || $SelectedEmplID || ''','''
        move 'Y' to $EE_Selected
      end-if
    end-while

    if $EE_Selected <> 'Y'
      display ''
      display 'No employees selected. Program stopped.'
      display ''
      stop
    end-if

    let $E.SelectedEEs = SUBSTR($E.SelectedEEs,1,LENGTH($E.SelectedEEs) - 2)
    let $E.SelectedEEs = $E.SelectedEEs || ')'

    let $S.SelectedEEs = SUBSTR($S.SelectedEEs,1,LENGTH($S.SelectedEEs) - 2)
    let $S.SelectedEEs = $S.SelectedEEs || ')'

    let $J.SelectedEEs = SUBSTR($J.SelectedEEs,1,LENGTH($J.SelectedEEs) - 2)
    let $J.SelectedEEs = $J.SelectedEEs || ')'
  else
    move '' to $E.SelectedEEs
    move '' to $S.SelectedEEs
    move '' to $J.SelectedEEs
  end-if
end-procedure

begin-procedure Form-Totals-PR

  move 'TAXFORM_ID'  to $FieldName
  move $TaxForm_ID   to $FieldValue
  do Read-Translate-Table
  move $XlatShortName to $TaxForm_Name

  print 'Form Total:' (2,1)                               !Federal Boxes
  print $TaxForm_Name  (2,14)

  do Format-Number(#FormTotalWages, $out, 'B9999999.99')           !PR wages
  print $out  (2,20)

  do Format-Number(#FormTotalTax_Withheld, $out, 'B9999999.99')
  print $out  (4,20)

  do Format-Number(#FormTotalSS_Wages_PR, $out, 'B9999999.99')
  print $out  (2,37)

  do Format-Number(#FormTotalSS_TAX_PR, $out, 'B9999999.99')
  print $out  (4,37)

  do Format-Number(#FormTotalMed_Wages_PR, $out, 'B9999999.99')
  print $out  (2,54)

  do Format-Number(#FormTotalMed_Tax_PR, $out, 'B9999999.99')
  print $out  (4,54)

  do Format-Number(#FormTotalCommissions, $out, 'B9999999.99')           !PR wages
  print $out  (2,71)

  do Format-Number(#FormTotalAllowance, $out, 'B9999999.99')
  print $out  (4,71)

  do Format-Number(#FormTotalTips, $out, 'B9999999.99')           !PR wages
  print $out  (2,88)

  do Format-Number(#FormTotalReimbursed_Expense, $out, 'B9999999.99')
  print $out  (4,88)

  do Format-Number(#FormTotalRetire_Fund, $out, 'B9999999.99')           !PR wages
  print $out  (2,106)

  do Format-Number(#FormTotalCODA_Plans, $out, 'B9999999.99')
  print $out  (4,106)

  move 0 to #FormTotalCost_Pension_Annuity
  move 0 to #FormTotalWages
  move 0 to #FormTotalCommissions
  move 0 to #FormTotalAllowance
  move 0 to #FormTotalTips
  move 0 to #FormTotalReimbursed_Expense
  move 0 to #FormTotalTax_Withheld
  move 0 to #FormTotalRetire_Fund
  move 0 to #FormTotalCODA_Funds
  move 0 to #FormTotalSS_Wages_PR
  move 0 to #FormTotalSS_TAX_PR
  move 0 to #FormTotalMed_Wages_PR
  move 0 to #FormTotalMed_Tax_PR
  move 0 to #FormTotalSS_Tips_PR
  move 0 to #FormTotalSS_Tax_Tips_PR
  move 0 to #FormTotalMed_Tax_Tips_PR

end-procedure

begin-procedure Form-Totals-Fed

  move 'Y' to $PrintFormTotals
  move 'TAXFORM_ID'  to $FieldName
  move $TaxForm_ID   to $FieldValue
  do Read-Translate-Table
  move $XlatShortName to $TaxForm_Name

  print 'Form Total:' (2,1)                                 !Federal Boxes
  print $TaxForm_Name  (2,14)

  do Format-Number(#FormTotalFed_Wages_F, $out ,'B9999999999.99')      !Federal wages
  print $out  (2,19)

  do Format-Number(#FormTotalFed_Tax_F, $out, 'B999999999.99')         !Federal tax
  print $out  (4,20)

  do Format-Number(#FormTotalSS_Wages_F, $out, 'B9999999999.99')       !SS wages
  print $out  (2,35)

  do Format-Number(#FormTotalSS_Tax_F, $out, 'B999999999.99')          !SS Tax
  print $out  (4,36)

  do Format-Number(#FormTotalMed_Wages_F, $out, 'B9999999999.99')      !Medicare wages
  print $out  (2,54)

  do Format-Number(#FormTotalMed_Tax_F, $out, 'B999999999.99')         !Medicare tax
  print $out  (4,55)

! do Format-Number(#TotalSS_Tips_F, $out, 'B9999999999.99')            !SS tips
! print $out  (#L_07,#C_07)

  do Format-Number(#FormTotalAlloc_Tips_F, $out, 'B9999999999.99')     !Allocated tips
  print $out  (2,158)

  do Format-Number(#FormTotalAdv_EIC_F, $out, 'B999999999.99')         !EIC
  print $out  (2,69)

  do Format-Number(#FormTotalDep_Care_F, $out, 'B999999999.99')        !Dependent care
  print $out  (4,69)

  do Format-Number(#FormTotalNon_Qual_457_F, $out, 'B9999999999.99')   !non-qual plan tot
  print $out  (2,86)

  move 0 to #FormTotalFed_Wages_F
  move 0 to #FormTotalFed_Tax_F
  move 0 to #FormTotalSS_Wages_F
  move 0 to #FormTotalSS_Tax_F
  move 0 to #FormTotalMed_Wages_F
  move 0 to #FormTotalMed_Tax_F
  move 0 to #FormTotalSS_Tips_F
  move 0 to #FormTotalAlloc_Tips_F
  move 0 to #FormTotalAdv_EIC_F
  move 0 to #FormTotalDep_Care_F
  move 0 to #FormTotalNon_Qual_457_F
end-procedure

begin-procedure Form-Totals-Rest

  move 'Y' to $PrintFormTotals
  move 'TAXFORM_ID'  to $FieldName
  move $TaxForm_ID   to $FieldValue
  do Read-Translate-Table
  move $XlatShortName to $TaxForm_Name

  print 'Form Total:' (2,1)                                 !Federal Boxes
  print $TaxForm_Name  (2,14)

  do Format-Number(#FormTotalFed_Wages, $out ,'B9999999999.99')      !Federal wages
  print $out  (2,19)

  do Format-Number(#FormTotalFed_Tax, $out, 'B999999999.99')       !Federal tax
  print $out  (4,20)

  do Format-Number(#FormTotalSS_Wages, $out, 'B9999999999.99')      !SS wages
  print $out  (2,35)

  do Format-Number(#FormTotalSS_Tax, $out, 'B999999999.99')       !SS Tax
  print $out  (4,36)

  do Format-Number(#FormTotalMed_Wages, $out, 'B9999999999.99')      !Medicare wages
  print $out  (2,54)

  do Format-Number(#FormTotalMed_Tax, $out, 'B999999999.99')       !Medicare tax
  print $out  (4,55)

! do Format-Number(#TotalSS_Tips, $out, 'B9999999999.99')          !SS tips
! print $out  (#L_07,#C_07)

  do Format-Number(#FormTotalAlloc_Tips, $out, 'B9999999999.99')      !Allocated tips
  print $out  (2,158)

  do Format-Number(#FormTotalAdv_EIC, $out, 'B999999999.99')       !EIC
  print $out  (2,69)

  do Format-Number(#FormTotalDep_Care, $out, 'B999999999.99')       !Dependent care
  print $out  (4,69)

  do Format-Number(#FormTotalNon_Qual_457, $out, 'B9999999999.99')    !non-qual plan tot
  print $out  (2,86)

  move 0 to #FormTotalFed_Wages
  move 0 to #FormTotalFed_Tax
  move 0 to #FormTotalSS_Wages
  move 0 to #FormTotalSS_Tax
  move 0 to #FormTotalMed_Wages
  move 0 to #FormTotalMed_Tax
  move 0 to #FormTotalSS_Tips
  move 0 to #FormTotalAlloc_Tips
  move 0 to #FormTotalAdv_EIC
  move 0 to #FormTotalDep_Care
  move 0 to #FormTotalNon_Qual_457
end-procedure

begin-procedure Company-Totals-Rest

  move 'Y' to $PrintTotals

  print 'Federal Total  ' (2,1)                            !Federal Boxes
  print 'Territories    ' (3,1)                            !Federal Boxes

  do Format-Number(#TotalFed_Wages_T, $out ,'B9999999999.99')      !Federal wages
  print $out  (2,19)

  do Format-Number(#TotalFed_Tax_T, $out, 'B999999999.99')       !Federal tax
  print $out  (3,20)

  do Format-Number(#TotalSS_Wages_T, $out, 'B9999999999.99')      !SS wages
  print $out  (2,35)

  do Format-Number(#TotalSS_Tax_T, $out, 'B999999999.99')       !SS Tax
  print $out  (3,36)

  do Format-Number(#TotalMed_Wages_T, $out, 'B9999999999.99')      !Medicare wages
  print $out  (2,54)

  do Format-Number(#TotalMed_Tax_T, $out, 'B999999999.99')       !Medicare tax
  print $out  (3,55)

! do Format-Number(#TotalSS_Tips_T, $out, 'B9999999999.99')      !SS tips
! print $out  (#L_07,#C_07)

!  do Format-Number(#TotalAlloc_Tips_T, $out, 'B9999999999.99')      !Allocated tips
!  print $out  (#L_08,#C_08)

  do Format-Number(#TotalAdv_EIC_T, $out, 'B999999999.99')       !EIC
  print $out  (2,69)

  do Format-Number(#TotalDep_Care_T, $out, 'B999999999.99')       !Dependent care
  print $out  (3,69)

  do Format-Number(#TotalNon_Qual_457_T, $out, 'B9999999999.99')    !non-qual plan tot
  print $out  (2,86)

    move 0 to #TotalFed_Wages_T
    move 0 to #TotalFed_Tax_T
    move 0 to #TotalSS_Wages_T
    move 0 to #TotalSS_Tax_T
    move 0 to #TotalMed_Wages_T
    move 0 to #TotalMed_Tax_T
    move 0 to #TotalSS_Tips_T
    move 0 to #TotalAlloc_Tips_T
    move 0 to #TotalAdv_EIC_T
    move 0 to #TotalDep_Care_T
    move 0 to #TotalNon_Qual_457_T


end-procedure

begin-procedure Company-Totals-Fed

  move 'Y' to $PrintTotals

  print 'Federal Total  ' (5,1)                            !Federal Boxes
  print 'U. S.   Only   ' (6,1)                            !Federal Boxes

  do Format-Number(#TotalFed_Wages_F, $out ,'B9999999999.99')      !Federal wages
  print $out  (5,19)

  do Format-Number(#TotalFed_Tax_F, $out, 'B999999999.99')       !Federal tax
  print $out  (6,20)

  do Format-Number(#TotalSS_Wages_F, $out, 'B9999999999.99')      !SS wages
  print $out  (5,35)

  do Format-Number(#TotalSS_Tax_F, $out, 'B999999999.99')       !SS Tax
  print $out  (6,36)

  do Format-Number(#TotalMed_Wages_F, $out, 'B9999999999.99')      !Medicare wages
  print $out  (5,54)

  do Format-Number(#TotalMed_Tax_F, $out, 'B999999999.99')       !Medicare tax
  print $out  (6,55)

! do Format-Number(#TotalSS_Tips_F, $out, 'B9999999999.99')      !SS tips
! print $out  (#L_07,#C_07)

!  do Format-Number(#TotalAlloc_Tips_F, $out, 'B9999999999.99')      !Allocated tips
!  print $out  (#L_08,#C_08)

  do Format-Number(#TotalAdv_EIC_F, $out, 'B999999999.99')       !EIC
  print $out  (5,69)

  do Format-Number(#TotalDep_Care_F, $out, 'B999999999.99')       !Dependent care
  print $out  (6,69)

  do Format-Number(#TotalNon_Qual_457_F, $out, 'B9999999999.99')    !non-qual plan tot
  print $out  (5,86)

    move 0 to #TotalFed_Wages_F
    move 0 to #TotalFed_Tax_F
    move 0 to #TotalSS_Wages_F
    move 0 to #TotalSS_Tax_F
    move 0 to #TotalMed_Wages_F
    move 0 to #TotalMed_Tax_F
    move 0 to #TotalSS_Tips_F
    move 0 to #TotalAlloc_Tips_F
    move 0 to #TotalAdv_EIC_F
    move 0 to #TotalDep_Care_F
    move 0 to #TotalNon_Qual_457_F


end-procedure
begin-procedure Company-Totals-PR

  move 'Y' to $PrintTotals

  print 'Federal Total ' (8,1)                            !Federal Boxes
  print 'Puerto Rico   ' (9,1)                            !Federal Boxes

  do Format-Number(#TotalWages_P, $out ,'B9999999999.99')      !PR wages
  print $out  (8,19)

  do Format-Number(#TotalTax_Withheld_P, $out, 'B999999999.99')       !PR tax
  print $out  (9,20)

  do Format-Number(#TotalSS_Wages_PR_P, $out, 'B9999999999.99')      !SS wages
  print $out  (8,35)

  do Format-Number(#TotalSS_TAX_PR_P, $out, 'B999999999.99')       !SS Tax
  print $out  (9,36)

  do Format-Number(#TotalMed_Wages_PR_P, $out, 'B9999999999.99')      !Medicare wages
  print $out  (8,54)

  do Format-Number(#TotalMed_Tax_PR_P, $out, 'B999999999.99')       !Medicare tax
  print $out  (9,55)

  do Format-Number(#TotalCommissions_P, $out, 'B9999999999.99')      !Commissions
  print $out  (8,106)

  do Format-Number(#TotalAllowance_P, $out, 'B999999999.99')       !Allowances
  print $out  (9,107)

  do Format-Number(#TotalTips_P, $out, 'B9999999999.99')      !Tips
  print $out  (8,126)

  do Format-Number(#TotalReimbursed_Expense_P, $out, 'B999999999.99')       !Reimbursed Exp
  print $out  (9,127)

  do Format-Number(#TotalRetire_Fund_P, $out, 'B9999999999.99')      !Retirement Fund
  print $out  (8,144)

  do Format-Number(#TotalCODA_Plans_P, $out, 'B999999999.99')       !CODA Contributions
  print $out  (9,145)

    move 0 to #TotalCost_Pension_Annuity_P
    move 0 to #TotalWages_P
    move 0 to #TotalCommissions_P
    move 0 to #TotalAllowance_P
    move 0 to #TotalTips_P
    move 0 to #TotalReimbursed_Expense_P
    move 0 to #TotalTax_Withheld_P
    move 0 to #TotalRetire_Fund_P
    move 0 to #TotalCODA_Plans_P
    move 0 to #TotalSS_Wages_PR_P
    move 0 to #TotalSS_TAX_PR_P
    move 0 to #TotalMed_Wages_PR_P
    move 0 to #TotalMed_Tax_PR_P
    move 0 to #TotalSS_Tips_PR_P
    move 0 to #TotalSS_Tax_Tips_PR_P
    move 0 to #TotalMed_Tax_Tips_PR_P

end-procedure

begin-procedure Convert-Parameters


  move $RC_US_YE.Sort_Code1      to $SortCode1
  move $RC_US_YE.Sort_Code3      to $SortCode3
  move $RC_US_YE.Reg_Select_Proc to $SelectEEs
  move $RC_US_YE.Reg_Select_Comp   to $SelectCompanies

  if $SelectEEs = 'S'
    do Read-EEs
  end-if

  if $SelectCompanies = 'C'
    do Read-Companies
  end-if

  do Create-Order-By

end-procedure

begin-procedure Create-Order-By

  move 'ORDER BY E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2

  if $SortCode1 <> '1'
    display ' '
    display 'Selected As-Of Date for retrieving the sorted data.'
    display $AsofDate

    evaluate $SortCode3
      when = '1'               !ID
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.W2_STATE, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
          when = '3'
            move 'ORDER BY J.PAYGROUP, S.EMPLID' to $Sort1
          when = '4'
            move 'ORDER BY J.DEPTID, S.EMPLID' to $Sort1
          when = '5'
            move 'ORDER BY E.POSTAL, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
          when = '6'
            move 'ORDER BY K.MAIL_DROP, S.EMPLID' to $Sort1
          when = '7'
            move 'ORDER BY E.W2_STATE, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
        end-evaluate

      when = '2'               !SSN
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.W2_STATE, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
          when = '3'
            move 'ORDER BY J.PAYGROUP, S1.NATIONAL_ID' to $Sort1
          when = '4'
            move 'ORDER BY J.DEPTID, S1.NATIONAL_ID' to $Sort1
          when = '5'
            move 'ORDER BY E.POSTAL, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
          when = '6'
            move 'ORDER BY K.MAIL_DROP, S1.NATIONAL_ID' to $Sort1
          when = '7'
            move 'ORDER BY E.W2_STATE, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
        end-evaluate

      when = '3'               !Name
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.W2_STATE,E.YE_LNAME, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
          when = '3'
            move 'ORDER BY J.PAYGROUP, S.NAME, S1.NATIONAL_ID' to $Sort1
          when = '4'
            move 'ORDER BY J.DEPTID, S.NAME, S1.NATIONAL_ID' to $Sort1
          when = '5'
            move 'ORDER BY E.POSTAL, E.YE_LNAME, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
          when = '6'
            move 'ORDER BY K.MAIL_DROP, S.NAME, S1.NATIONAL_ID' to $Sort1
          when = '7'
            move 'ORDER BY E.W2_STATE, E.YE_LNAME, E.SSN, E.SEQUENCE_NUMBER' to $Sort2
        end-evaluate

      when = ''               ! None  - default Emplid
        evaluate $SortCode1
          when = '2'
            move 'ORDER BY E.W2_STATE, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
          when = '3'
            move 'ORDER BY J.PAYGROUP, S.EMPLID' to $Sort1
          when = '4'
            move 'ORDER BY J.DEPTID, S.EMPLID' to $Sort1
          when = '5'
            move 'ORDER BY E.POSTAL, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
          when = '6'
            move 'ORDER BY K.MAIL_DROP, S.EMPLID' to $Sort1
          when = '7'
            move 'ORDER BY E.W2_STATE, E.EMPLID, E.SEQUENCE_NUMBER' to $Sort2
        end-evaluate

    end-evaluate
  else
    evaluate $SortCode3
      when = '1'
        move 'ORDER BY E.TAXFORM_ID, E.EMPLID,  E.SEQUENCE_NUMBER, E.W2_STATE, E.COMPANY' to $Sort2
      when = '2'
        move 'ORDER BY E.TAXFORM_ID, E.SSN,  E.SEQUENCE_NUMBER, E.W2_STATE, E.COMPANY'    to $Sort2
      when = '3'
        move 'ORDER BY E.TAXFORM_ID, E.YE_LNAME, E.SSN, E.SEQUENCE_NUMBER, E.W2_STATE, E.COMPANY' to $Sort2
      when = ''
        move 'ORDER BY W.W2_REPORTING_CO, E.TAXFORM_ID, E.EMPLID,  E.SEQUENCE_NUMBER, E.W2_STATE' to $Sort2
    end-evaluate
  end-if
end-procedure


begin-procedure Read-EEs

move 'AND E.EMPLID in (''' to $E.SelectedEEs
move 'AND S.EMPLID in (''' to $S.SelectedEEs
move 'AND J.EMPLID in (''' to $J.SelectedEEs
move ' ' to $SelectedEmplID

begin-SELECT
C.SELECTED_EE

  move &C.Selected_EE     to $SelectedEmplID



  let $E.SelectedEEs = $E.SelectedEEs || $SelectedEmplID || ''','''
  let $S.SelectedEEs = $S.SelectedEEs || $SelectedEmplID || ''','''
  let $J.SelectedEEs = $J.SelectedEEs || $SelectedEmplID || ''','''
  move 'Y' to $EE_Selected

FROM  PS_RC_TAX910AU2 C
WHERE C.OPRID         = $Prcs_OprID
  AND C.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
end-SELECT


let $E.SelectedEEs = SUBSTR($E.SelectedEEs,1,LENGTH($E.SelectedEEs) - 2)
let $E.SelectedEEs = $E.SelectedEEs || ')'

let $S.SelectedEEs = SUBSTR($S.SelectedEEs,1,LENGTH($S.SelectedEEs) - 2)
let $S.SelectedEEs = $S.SelectedEEs || ')'

let $J.SelectedEEs = SUBSTR($J.SelectedEEs,1,LENGTH($J.SelectedEEs) - 2)
let $J.SelectedEEs = $J.SelectedEEs || ')'

end-procedure

begin-procedure Delete-Sel-Employees-Table
begin-SQL on-error=Ignore
  DELETE FROM PS_RC_TAX910AU2
  WHERE OPRID       = $Prcs_OprID
    AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-SQL
end-procedure

begin-procedure Read-Companies

move 'AND A.COMPANY in (''' to $A.SelectedCompanies
move ' ' to $SelectedEmplID

begin-SELECT
D.SELECTED_COMPANY

  move &D.SELECTED_COMPANY    to $SelectedCompany

  let $A.SelectedCompanies = $A.SelectedCompanies || $SelectedCompany || ''','''
  move 'Y' to $Company_Selected

FROM  PS_RC_TAX910AU_CO D
WHERE D.OPRID         = $Prcs_OprID
  AND D.RUN_CNTL_ID   = $Prcs_Run_Cntl_ID
end-SELECT

  if $Company_Selected = 'Y'
      let $A.SelectedCompanies = SUBSTR($A.SelectedCompanies,1,LENGTH($A.SelectedCompanies) - 2)
  else
      let $A.SelectedCompanies = $A.SelectedCompanies || ''''
  end-if
  let $A.SelectedCompanies = $A.SelectedCompanies || ')'

end-procedure

begin-procedure Delete-Sel-Company-Table
begin-SQL on-error=Ignore
  DELETE FROM PS_RC_TAX910AU_CO
  WHERE OPRID       = $Prcs_OprID
    AND RUN_CNTL_ID = $Prcs_Run_Cntl_ID

end-SQL
end-procedure

begin-procedure Ignore
! dummy procedure to avoid SQL error message on delete of empty table
end-procedure
#Include 'taxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'readxlat.sqc'  !Read-Translate-Table procedure
#Include 'rotname1.sqc'  !Rotate-Name procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'w2sort.sqc'    !Routines to sorting W-2s
#Include 'txrnctl2.sqc'  !US Year End Process Scheduler Run Controls
#Include 'stdapi.sqc'    !Update Process API
#Include 'w2.sqc'        !Routine for W2 Year End Box variables
#Include 'geteandg.sqc'  !Get-EandG procedure                    !HP90001
#Include 'getfed.sqc'    !Get-FederalProduct procedure           !FED0001
#Include 'w2box.sqc'     !Evaluate-Box
