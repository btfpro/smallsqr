!*************************************************************************
!  FPvalid_conv:  Update of conversion                                   *
!                                                                        *
!  Transfer from FPAEECAREERBIS to FPAEECAREER                           *
!                                                                        *
!*************************************************************************
!*************************************************************************
!                                                                        *
!               Confidentiality Information:                             *
!                                                                        *
!                                                                      *
! This module contains confidential and proprietary information        *
! of Oracle; it is not to be copied, reproduced, or transmitted        *
! in any form, by any means, in whole or in part, nor is it to         *
! be used for any purpose other than that for which it is              *
! expressly provided under the applicable license agreement.           *
!                                                                      *
! Copyright (C) 2006 Oracle. All Rights Reserved.                      *
!                                                                      *
!***********************************************************************
!----------------------------------------------------------------------
!
!          $Date:  2006/07/19:12:48:44                                 
!       $Release:  HR9                                                 
!      $Revision:  101                                                 
!                                                                        *
!*************************************************************************
!Remark : in the comments, CAE means Commitment Accounting Element       *
!*************************************************************************

#include 'setenv.sqc'         ! Set environment
#include 'setup01.sqc'        ! Printer and page-size initialization

BEGIN-REPORT

Do Init-DateTime
Do Init-Number

do Get-Current-DateTime()

do Init-Report
do Proc-Main
do stdapi-term

END-REPORT



begin-heading 2

do Get_Field_Information($ReportID, 'REPORT_TITLE', $ReportTitle,   #DW)
do Get_Field_Information($ReportID, 'DATE',         $DATE_LBL,      #DW)

print $ReportTitle          (+1,1)
print $DATE_LBL             (,+20)
date-time (,+1) DD/MM/YY

end-heading



!***************************************************************
!
!
!       Init-Report
!
!
!***************************************************************
BEGIN-PROCEDURE  Init-Report

move 'FPA700' to $ReportID

do Stdapi-Init

let $language_cd = $CURR_LANGUAGE_CD

do Init_Report_Translation($ReportID, $language_cd)
do Append_Report_Translation($ReportID)

do Security-Param       !SQR security

END-PROCEDURE Init-Report



!***************************************************************
!
!
!       Get-Values
!
!
!***************************************************************
BEGIN-PROCEDURE  Get-Values

do Get-From-Thru-Date
do Get-OprId

END-PROCEDURE Get-Values



!******************************************************************
!
!
!   Proc-Main
!
!   Select all the Employees validate for reclassification
!
!
!******************************************************************
BEGIN-PROCEDURE Proc-Main

let #ok_delete = 0

let $sql-statement = 'FPA710.SQR, Proc-Main,Select,PS_FPAEECAREERBIS'
BEGIN-SELECT DISTINCT On-Error=SQL-Error

A.FP_CONVERSION_ID                                      &FP_CONVERSION_ID,
A.EMPLID                                                &EMPLID,
A.EMPL_RCD                                              &EMPL_RCD,
{DATEOUT-PREFIX}A.EFFDT{DATEOUT-SUFFIX}                 &EFFDT,
A.EFFSEQ                                                &EFFSEQ,
A.NAME                                                  &NAME,
A.FP_CONV_STAT                                          &FP_CONV_STAT,
A.FP_ACTION_REF                                         &FP_ACTION_REF,
A.FP_NOTIF_REF                                          &FP_NOTIF_REF,
A.FP_CNL_ROW                                            &FP_CNL_ROW,
A.FP_INST_STAT                                          &FP_INST_STAT,
A.ACTION                                                &ACTION,
A.FP_ACTION_DES                                         &FP_ACTION_DES,
A.ACTION_REASON                                         &ACTION_REASON,
A.FP_RANK_CD                                            &FP_RANK_CD,
A.FP_RANK_DESC                                          &FP_RANK_DESC,
A.FP_STEP_CD                                            &FP_STEP_CD,
A.FP_STEP_NO                                            &FP_STEP_NO,
A.FP_GROSS_IND                                          &FP_GROSS_IND,
A.FP_INCS_IND                                           &FP_INCS_IND,
A.FP_PROM_LCK                                           &FP_PROM_LCK,
A.FP_SENTOSTPDY                                         &FP_SENTOSTPDY,
A.FP_SENTOSTPMN                                         &FP_SENTOSTPMN,
A.FP_SENTOSTPYR                                         &FP_SENTOSTPYR,
A.FP_SENINSTPDY                                         &FP_SENINSTPDY,
A.FP_SENINSTPMN                                         &FP_SENINSTPMN,
A.FP_SENINSTPYR                                         &FP_SENINSTPYR,
A.FP_TRUESEN_DY                                         &FP_TRUESEN_DY,
A.FP_TRUESEN_MN                                         &FP_TRUESEN_MN,
A.FP_TRUESEN_YR                                         &FP_TRUESEN_YR,
A.FP_SENTRANSDY                                         &FP_SENTRANSDY,
A.FP_SENTRANSMN                                         &FP_SENTRANSMN,
A.FP_SENTRANSYR                                         &FP_SENTRANSYR,
A.FP_SENKEPT_DY                                         &FP_SENKEPT_DY,
A.FP_SENKEPT_MN                                         &FP_SENKEPT_MN,
A.FP_SENKEPT_YR                                         &FP_SENKEPT_YR,
A.FP_SENRAN_DY                                          &FP_SENRAN_DY,
A.FP_SENRAN_MN                                          &FP_SENRAN_MN,
A.FP_SENRAN_YR                                          &FP_SENRAN_YR,
A.FP_SENCOR_DY                                          &FP_SENCOR_DY,
A.FP_SENCOR_MN                                          &FP_SENCOR_MN,
A.FP_SENCOR_YR                                          &FP_SENCOR_YR,
A.FP_DURSTEP_DY                                         &FP_DURSTEP_DY,              !
A.FP_DURSTEP_MN                                         &FP_DURSTEP_MN,              !
A.FP_DURSTEP_YR                                         &FP_DURSTEP_YR,              !
A.FP_DURRAN_DY                                          &FP_DURRAN_DY,               !
A.FP_DURRAN_MN                                          &FP_DURRAN_MN,               !
A.FP_DURRAN_YR                                          &FP_DURRAN_YR,               !
A.FP_DURCOR_DY                                          &FP_DURCOR_DY,               !
A.FP_DURCOR_MN                                          &FP_DURCOR_MN,               !
A.FP_DURCOR_YR                                          &FP_DURCOR_YR,               !
A.FP_SENEQSTP_DY                                        &FP_SENEQSTP_DY,             !Seniority management
A.FP_SENEQSTP_MN                                        &FP_SENEQSTP_MN,             !
A.FP_SENEQSTP_YR                                        &FP_SENEQSTP_YR,             !
A.FP_SENENTRK_DY                                        &FP_SENENTRK_DY,             !
A.FP_SENENTRK_MN                                        &FP_SENENTRK_MN,             !
A.FP_SENENTRK_YR                                        &FP_SENENTRK_YR,             !
A.FP_SENENTCRP_DY                                       &FP_SENENTCRP_DY,            !
A.FP_SENENTCRP_MN                                       &FP_SENENTCRP_MN,            !
A.FP_SENENTCRP_YR                                       &FP_SENENTCRP_YR,            !
A.FP_SENENTCTG_DY                                       &FP_SENENTCTG_DY,            !
A.FP_SENENTCTG_MN                                       &FP_SENENTCTG_MN,            !
A.FP_SENENTCTG_YR                                       &FP_SENENTCTG_YR,            !
A.FP_SEN_CALC                                           &FP_SEN_CALC,
A.FP_CLD_INST                                           &FP_CLD_INST,
A.FP_CLD_STEP                                           &FP_CLD_STEP,
{DATEOUT-PREFIX}A.FP_FOR_PROM_DT{DATEOUT-SUFFIX}        &FP_FOR_PROM_DT,
{DATEOUT-PREFIX}A.FP_STEP_END_DT{DATEOUT-SUFFIX}        &FP_STEP_END_DT,
{DATEOUT-PREFIX}A.FP_RK_ENT_DT{DATEOUT-SUFFIX}          &FP_RK_ENT_DT,
A.FP_CORPS_CD                                           &FP_CORPS_CD,
A.FP_CORPS_DES                                          &FP_CORPS_DES,
{DATEOUT-PREFIX}A.FP_CHG_COR_DT{DATEOUT-SUFFIX}         &FP_CHG_COR_DT,
A.FP_CATG_FP                                            &FP_CATG_FP,
A.FP_TRAINEE                                            &FP_TRAINEE,
A.FP_TRNE_POSN                                          &FP_TRNE_POSN,
A.FP_CATG_LEVEL                                         &FP_CATG_LEVEL,
A.FP_CHG_IND                                            &FP_CHG_IND,
{DATEOUT-PREFIX}A.FP_APPL_SAL_DT{DATEOUT-SUFFIX}        &FP_APPL_SAL_DT,
A.FP_ROW_CD                                             &FP_ROW_CD,
{DATEOUT-PREFIX}A.FP_NOMINATION_DT{DATEOUT-SUFFIX}      &FP_NOMINATION_DT,
A.FP_RK_TRIALPD                                         &FP_RK_TRIALPD,
{DATEOUT-PREFIX}A.FP_RK_PD_END_DT{DATEOUT-SUFFIX}       &FP_RK_PD_END_DT,
A.FP_SANCTION                                           &FP_SANCTION,
A.FP_DOWN_GRA                                           &FP_DOWN_GRA,
A.FP_UPDT_PR_DT                                         &FP_UPDT_PR_DT,
A.FP_PROM_OK                                            &FP_PROM_OK,
A.FP_PROPD_BRK                                          &FP_PROPD_BRK,
A.FP_PRO_ACCESS                                         &FP_PRO_ACCESS,
A.FP_SETID_RANK                                         &FP_SETID_RANK,
A.FP_EQUIV_STEP                                         &FP_EQUIV_STEP,              ! Sub-scale management
A.FP_STFBDG_LVL1                                        &FP_STFBDG_LVL1,
A.FP_STFBDG_LVL3                                        &FP_STFBDG_LVL3,
A.FP_SETID_CA                                           &FP_SETID_CA,                ! CAE management
A.FP_COMM_ACNT_ID                                       &FP_COMM_ACNT_ID,            !
A.FP_RETROSPECT                                         &FP_RETROSPECT,
A.FP_TBL_CD                                             &FP_TBL_CD,
{DATEOUT-PREFIX}A.LAST_UPDATE_DATE{DATEOUT-SUFFIX}      &LAST_UPDATE_DATE

    do rtrim_nnull(&emplid,$matricule_tempo)
    let #no_dossier_tempo = &empl_rcd
    Display '** debut **'
    Do Var-Init             !Init variables

    display $FP_STEP_END_DT

    if $FP_STEP_END_DT != ''   ! If retroactive reclassification
        Do retro
    end-if

    Do edit-arretes
    Do Updt-Career

    if (#no_dossier_tempo <> #no_dossier_tempo_init or $matricule_tempo <> $matricule_tempo_init)
        and #ok_delete = 1
        do delete-dossier
    end-if

    do rtrim_nnull(&emplid,$matricule_tempo_init)
    let #no_dossier_tempo_init = &empl_rcd
    let #ok_delete = 1

    Display '** Fin **'

from PS_FPAEECAREERBIS A
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where A.FP_CONV_STAT = 'V'          ! Reclassification action validated

! Can be an action copied from fpaeecareer and belonging to an employee record where a
! reclassification has been validated
! Have to be taken in account due to the update of fields used for the seniority calculation.
!----------------------------------------------------------------------------------------------
!or (FP_CONV_STAT = 'A' AND exists (select A.EMPLID from PS_FPAEECAREERBIS A where A.EMPLID = EMPLID
!and A.EMPL_RCD = EMPL_RCD and A.FP_CONV_STAT = 'V') AND FP_CONVERSION_ID is not null)

and A.EMPLID = SCRTY.EMPLID     !
and A.EMPL_RCD = SCRTY.EMPL_RCD !SQR security
[$SecurityClause]               !

order by A.EMPLID,A.EMPL_RCD

END-SELECT

do delete-dossier

END-PROCEDURE Proc-Main



BEGIN-PROCEDURE delete-dossier

let $sql-statement = 'FPA710.SQR, delete-dossier ,delete,PS_FPAEECAREER'
BEGIN-SQL On-Error=SQL-Error

DELETE from PS_FPAEECAREERBIS

where EMPLID = $matricule_tempo_init
and EMPL_RCD = #no_dossier_tempo_init

END-SQL

END-PROCEDURE



!****************************************************************
!
!
!   Updt-Career
!
!   Update or creation of an instance in career table
!
!
!*****************************************************************
BEGIN-PROCEDURE Updt-Career

Display 'Updt-Career begin'

Display 'Grid number :' noline
Display &FP_CONVERSION_ID               !FP_CONVERSION_ID

Display 'Emplid :' noline
Display $Emplid                         !EMPLID

Display 'Empl_rcd :' noline
Let $empl_rcd_affichage = To_Char(#Empl_rcd)
Display $Empl_rcd_affichage             !EMPL_RCD

Display 'Effective Date :' noline
Display $effdt                          !EFFDT

Display 'Effective Sequence :' noline
Let $effseq_affichage = To_Char(#effseq)
Display $effseq_affichage               !EFFSEQ


Display 'Action :' noline
Display &ACTION                         !ACTION,


Display 'Grade :' noline
Display &FP_RANK_CD                     !FP_RANK_CD

Display 'Step :' noline
Display &FP_STEP_CD                     !FP_STEP_CD,

Display 'Updt-Career end'

!**** REPORT *****

do Get_Field_Information($ReportID, 'STRING1' ,     $STRING1_LBL ,  #DW)
do Get_Field_Information($ReportID, 'GRID_NBR' ,    $GRID_NBR_LBL , #DW)
do Get_Field_Information($ReportID, 'EMPLID' ,      $EMPLID_LBL ,   #DW)
do Get_Field_Information($ReportID, 'EMPL_RCD' ,    $EMPL_RCD_LBL , #DW)
do Get_Field_Information($ReportID, 'EFFDT' ,       $EFFDT_LBL ,    #DW)
do Get_Field_Information($ReportID, 'EFFSEQ' ,      $EFFSEQ_LBL ,   #DW)
do Get_Field_Information($ReportID, 'ACTION' ,      $ACTION_LBL ,   #DW)
do Get_Field_Information($ReportID, 'GRADE' ,       $GRADE_LBL ,    #DW)
do Get_Field_Information($ReportID, 'STEP' ,        $STEP_LBL ,     #DW)
do Get_Field_Information($ReportID, 'STRING2' ,     $STRING2_LBL ,  #DW)

Let $p_STRING1_LBL = '*** ' || $STRING1_LBL || ' ***'
Print $p_STRING1_LBL (+2,5)

Print $GRID_NBR_LBL (+2,1)
Print &FP_CONVERSION_ID (,+1)

Print $EMPLID_LBL (+2,1)
Print $Emplid (,+1)

Print $EMPL_RCD_LBL (+1,1)
Print $empl_rcd_affichage (,+1)

Print $EFFDT_LBL (+1,1)
Print $effdt (,+1)

Print $EFFSEQ_LBL (+1,1)
Print $effseq_affichage (,+1)

Print $ACTION_LBL (+1,1)
Print &ACTION  (,+1)

Print $GRADE_LBL (+1,1)
Print &FP_RANK_CD  (,+1)

Print $STEP_LBL (+1,1)
Print &FP_STEP_CD   (,+1)

Let $p_STRING2_LBL = '*** ' || $STRING2_LBL || ' ***'
Print $p_STRING2_LBL (+2,5)


! Create/Update of a row from the FPAEECAREERBIS table
!-----------------------------------------------------

!if $FP_CONV_STAT = 'A'  ! Copy from FPAEECAREER


!  let $sql-statement = 'FPA710.SQR, Updt-Career ,Update,PS_FPAEECAREER'
!  BEGIN-SQL On-Error=SQL-Error

!  UPDATE PS_FPAEECAREER
!  SET FP_CLD_INST  = $FP_CLD_INST,
!  FP_CLD_STEP = $FP_CLD_STEP,
!  FP_SEN_CALC  = $FP_SEN_CALC,
!  FP_STEP_END_DT = {DATEIN-PREFIX}$FP_STEP_END_DT{DATEIN-SUFFIX},
!  FP_SENTRANSDY = #FP_SENTRANSDY,
!  FP_SENTRANSMN = #FP_SENTRANSMN,
!  FP_SENTRANSYR = #FP_SENTRANSYR


!  Where EMPLID = $emplid
!  AND EMPL_RCD = #empl_rcd
!  AND EFFDT = {DATEIN-PREFIX}$Effdt_out{DATEIN-SUFFIX}
!  AND EFFSEQ = #effseq

!  END-SQL

!else

  if $FP_CONV_STAT = 'V'        ! Validate row

    let $sql-statement = 'FPA710.SQR, Updt-Career ,Insert,PS_FPAEECAREER'
    BEGIN-SQL On-Error=SQL-Error

    INSERT INTO PS_FPAEECAREER
        (EMPLID,
        EMPL_RCD,
        EFFDT,
        EFFSEQ,
        FP_ACTION_REF,
        FP_NOTIF_REF,
        FP_CNL_ROW,
        FP_INST_STAT,
        ACTION,
        ACTION_REASON,
        FP_RANK_CD,
        FP_STEP_CD,
        FP_STEP_NO,
        FP_GROSS_IND,
        FP_INCS_IND,
        FP_PROM_LCK,
        FP_SENTOSTPDY,
        FP_SENTOSTPMN,
        FP_SENTOSTPYR,
        FP_SENINSTPDY,
        FP_SENINSTPMN,
        FP_SENINSTPYR,
        FP_TRUESEN_DY,
        FP_TRUESEN_MN,
        FP_TRUESEN_YR,
        FP_SENTRANSDY,
        FP_SENTRANSMN,
        FP_SENTRANSYR,
        FP_SENKEPT_DY,
        FP_SENKEPT_MN,
        FP_SENKEPT_YR,
        FP_SENRAN_DY,
        FP_SENRAN_MN,
        FP_SENRAN_YR,
        FP_SENCOR_DY,
        FP_SENCOR_MN,
        FP_SENCOR_YR,
        FP_DURSTEP_DY,              !
        FP_DURSTEP_MN,              !
        FP_DURSTEP_YR,              !
        FP_DURRAN_DY,               !
        FP_DURRAN_MN,               !
        FP_DURRAN_YR,               !
        FP_DURCOR_DY,               !
        FP_DURCOR_MN,               !
        FP_DURCOR_YR,               !
        FP_SENEQSTP_DY,             !Seniority management
        FP_SENEQSTP_MN,             !
        FP_SENEQSTP_YR,             !
        FP_SENENTRK_DY,             !
        FP_SENENTRK_MN,             !
        FP_SENENTRK_YR,             !
        FP_SENENTCRP_DY,            !
        FP_SENENTCRP_MN,            !
        FP_SENENTCRP_YR,            !
        FP_SENENTCTG_DY,            !
        FP_SENENTCTG_MN,            !
        FP_SENENTCTG_YR,            !
        FP_SEN_CALC,
        FP_CLD_INST,
        FP_CLD_STEP,
        FP_FOR_PROM_DT,
        FP_STEP_END_DT,
        FP_RK_ENT_DT,
        FP_CORPS_CD,
        FP_CHG_COR_DT,
        FP_CATG_FP,
        FP_TRAINEE,
        FP_TRNE_POSN,
        FP_CATG_LEVEL,
        FP_CHG_IND,
        FP_APPL_SAL_DT,
        FP_ROW_CD,
        FP_NOMINATION_DT,
        FP_RK_TRIALPD,
        FP_RK_PD_END_DT,
        FP_SANCTION,
        FP_DOWN_GRA,
        FP_UPDT_PR_DT,
        FP_PROM_OK,
        FP_PROPD_BRK,
        FP_PRO_ACCESS,
        FP_SETID_RANK,
        FP_NX_STP_CD,
        FP_EQUIV_STEP,              ! Sub-scale management
        FP_STFBDG_LVL1,
        FP_STFBDG_LVL3,
        FP_SETID_CA,                ! CAE management
        FP_COMM_ACNT_ID,            !
        FP_RETROSPECT,
        FP_TBL_CD,
        LAST_UPDATE_DATE)
    VALUES
        ($Emplid,               !EMPLID
        #Empl_rcd,              !EMPL_RCD
        {DATEIN-PREFIX}$effdt_out{DATEIN-SUFFIX},             !EFFDT
        #effseq,                !EFFSEQ
        $FP_ACTION_REF,         !FP_ACTION_REF,
        $FP_NOTIF_REF1,         !FP_NOTIF_REF,
        $FP_CNL_ROW,            !FP_CNL_ROW,
        $FP_INST_STAT,          !FP_INST_STAT,
        $ACTION,                !ACTION,
        $ACTION_REASON,         !ACTION_REASON,
        $fp_rank_cd,            !FP_RANK_CD
        $fp_Step_cd,            !FP_STEP_CD,
        #FP_STEP_NO,
        #FP_GROSS_IND,
        #FP_INCS_IND,
        $FP_PROM_LCK,           !FP_PROM_LCK,
        #FP_SENTOSTPDY,         !FP_SENTOSTPDY,
        #FP_SENTOSTPMN,         !FP_SENTOSTPMN,
        #FP_SENTOSTPYR,         !FP_SENTOSTPYR,
        #FP_SENINSTPDY,         !FP_SENINSTPDY,
        #FP_SENINSTPMN,         !FP_SENINSTPMN,
        #FP_SENINSTPYR,         !FP_SENINSTPYR,
        #FP_TRUESEN_DY,         !FP_TRUESEN_DY,
        #FP_TRUESEN_MN,         !FP_TRUESEN_MN,
        #FP_TRUESEN_YR,         !FP_TRUESEN_YR,
        #FP_SENTRANSDY,         !FP_SENTRANSDY,
        #FP_SENTRANSMN,         !FP_SENTRANSMN,
        #FP_SENTRANSYR,         !FP_SENTRANSYR,
        #FP_SENKEPT_DY,         !FP_SENKEPT_DY,
        #FP_SENKEPT_MN,         !FP_SENKEPT_MN,
        #FP_SENKEPT_YR,         !FP_SENKEPT_YR,
        #FP_SENRAN_DY,          !FP_SENRAN_DY,
        #FP_SENRAN_MN,          !FP_SENRAN_MN,
        #FP_SENRAN_YR,          !FP_SENRAN_YR,
        #FP_SENCOR_DY,          !FP_SENCOR_DY,
        #FP_SENCOR_MN,          !FP_SENCOR_MN,
        #FP_SENCOR_YR,          !FP_SENCOR_YR,
        #FP_DURSTEP_DY,         !FP_DURSTEP_DY
        #FP_DURSTEP_MN,         !FP_DURSTEP_MN
        #FP_DURSTEP_YR,         !FP_DURSTEP_YR
        #FP_DURRAN_DY,          !FP_DURRAN_DY
        #FP_DURRAN_MN,          !FP_DURRAN_MN
        #FP_DURRAN_YR,          !FP_DURRAN_YR
        #FP_DURCOR_DY,          !FP_DURCOR_DY
        #FP_DURCOR_MN,          !FP_DURCOR_MN
        #FP_DURCOR_YR,          !FP_DURCOR_YR
        #FP_SENEQSTP_DY,        !FP_SENEQSTP_DY
        #FP_SENEQSTP_MN,        !FP_SENEQSTP_MN
        #FP_SENEQSTP_YR,        !FP_SENEQSTP_YR
        #FP_SENENTRK_DY,        !FP_SENENTRK_DY
        #FP_SENENTRK_MN,        !FP_SENENTRK_MN
        #FP_SENENTRK_YR,        !FP_SENENTRK_YR
        #FP_SENENTCRP_DY,       !FP_SENENTCRP_DY
        #FP_SENENTCRP_MN,       !FP_SENENTCRP_MN
        #FP_SENENTCRP_YR,       !FP_SENENTCRP_YR
        #FP_SENENTCTG_DY,       !FP_SENENTCTG_DY
        #FP_SENENTCTG_MN,       !FP_SENENTCTG_MN
        #FP_SENENTCTG_YR,       !FP_SENENTCTG_YR
        $FP_SEN_CALC,           !FP_SEN_CALC,
        $FP_CLD_INST,           !FP_CLD_INST,
        $FP_CLD_STEP,
        {DATEIN-PREFIX}$FP_FOR_PROM_DT{DATEIN-SUFFIX},        !FP_FOR_PROM_DT
        {DATEIN-PREFIX}$FP_STEP_END_DT{DATEIN-SUFFIX},        !FP_STEP_END_DT
        {DATEIN-PREFIX}$FP_RK_ENT_DT{DATEIN-SUFFIX},          !FP_RK_ENT_DT
        $FP_CORPS_CD,           !FP_CORPS_CD,
        {DATEIN-PREFIX}$FP_CHG_COR_DT{DATEIN-SUFFIX},         !FP_CHG_COR_DT,
        $FP_CATG_FP,            !FP_CATG_FP,
        $FP_TRAINEE,            !FP_TRAINEE,
        $FP_TRNE_POSN,          !FP_TRNE_POSN,
        $FP_CATG_LEVEL,         !FP_CATG_LEVEL,
        $FP_CHG_IND,            !FP_CHG_IND,
        {DATEIN-PREFIX}$effdt_out{DATEIN-SUFFIX},             !FP_APPL_SAL_DT,
        $FP_ROW_CD,             !FP_ROW_CD,
        {DATEIN-PREFIX}$FP_NOMINATION_DT{DATEIN-SUFFIX},      !FP_NOMINATION_DT,
        $FP_RK_TRIALPD,         !FP_RK_TRIALPD,
        {DATEIN-PREFIX}$FP_RK_PD_END_DT{DATEIN-SUFFIX},       !FP_RK_PD_END_DT
        $FP_SANCTION,           !FP_SANCTION,
        $FP_DOWN_GRA,           !FP_DOWN_GRA,
        $FP_UPDT_PR_DT,         !FP_UPDT_PR_DT,
        $FP_PROM_OK,            !FP_PROM_OK,
        $FP_PROPD_BRK,          !FP_PROPD_BRK,
        $FP_PRO_ACCESS,         !FP_PRO_ACCESS,
        $FP_SETID_RANK,         !FP_SETID_RANK,
        $FP_NX_STP_CD,
        $FP_EQUIV_STEP,         !FP_EQUIV_STEP,
        $FP_STFBDG_LVL1,
        $FP_STFBDG_LVL3,
        $FP_SETID_CA,           !FP_SETID_CA,
        $FP_COMM_ACNT_ID,       !FP_COMM_ACNT_ID,
        $FP_RETROSPECT,         !FP_RETROSPECT,
        $FP_TBL_CD,             !FP_TBL_CD,
        {DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX})             !LAST_UPDATE_DATE

    END-SQL


let $sql-statement = 'FPA710.SQR, Updt-Career ,Select,PS_FPAEECAREER'
BEGIN-SELECT On-Error=SQL-Error

U.EMPLID
{DATEOUT-PREFIX}U.EFFDT{DATEOUT-SUFFIX}           &U.EFFDT
U.EFFSEQ                                          &U.EFFSEQ
U.FP_CLD_INST                                     &U.FP_CLD_INST
U.FP_CLD_STEP                                     &U.FP_CLD_STEP
U.FP_SEN_CALC                                     &U.FP_SEN_CALC
{DATEOUT-PREFIX}U.FP_STEP_END_DT{DATEOUT-SUFFIX}  &U.FP_STEP_END_DT
U.FP_SENTRANSDY                                   &U.FP_SENTRANSDY
U.FP_SENTRANSMN                                   &U.FP_SENTRANSMN
U.FP_SENTRANSYR                                   &U.FP_SENTRANSYR

from PS_FPAEECAREERBIS U
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

Where U.EMPLID = $emplid
AND U.EMPL_RCD = #empl_rcd
AND U.FP_CONV_STAT = 'A'
AND U.EFFDT = (select max(U1.EFFDT) from PS_FPAEECAREERBIS U1
                 where  U1.EMPLID = U.EMPLID
                 and U1.EMPL_RCD = U.EMPL_RCD
                 and U1.FP_CONV_STAT = 'A'
                 and U1.EFFDT <= {DATEIN-PREFIX}$effdt_out{DATEIN-SUFFIX})
AND U.EFFSEQ = (select max(U2.EFFSEQ) from PS_FPAEECAREERBIS U2
                 where U2.EMPLID = U.EMPLID
                 and U2.EMPL_RCD = U.EMPL_RCD
                 and U2.EFFDT = U.EFFDT
                 and U2.FP_CONV_STAT = 'A')

and U.EMPLID = SCRTY.EMPLID      !
and U.EMPL_RCD = SCRTY.EMPL_RCD  !SQR security
[$SecurityClause]               !

END-SELECT


let $sql-statement = 'FPA710.SQR, Updt-Career ,Update,PS_FPAEECAREER'
BEGIN-SQL On-Error=SQL-Error

UPDATE PS_FPAEECAREER
SET FP_CLD_INST  = &U.FP_CLD_INST,
FP_CLD_STEP = &U.FP_CLD_STEP,
FP_SEN_CALC  = &U.FP_SEN_CALC,
FP_STEP_END_DT = {DATEIN-PREFIX}&U.FP_STEP_END_DT{DATEIN-SUFFIX},
FP_SENTRANSDY = &U.FP_SENTRANSDY,
FP_SENTRANSMN = &U.FP_SENTRANSMN,
FP_SENTRANSYR = &U.FP_SENTRANSYR

Where EMPLID = $emplid
AND EMPL_RCD = #empl_rcd
AND EFFDT = {DATEIN-PREFIX}&U.EFFDT{DATEIN-SUFFIX}
AND EFFSEQ = &U.EFFSEQ

END-SQL


  else
    Display '***********************************'
    Display '* No update has been proceeded.   *'
    Display '***********************************'
  END-IF
!END-IF

Display 'Updt-Career End'

END-PROCEDURE Updt-Career


!*******************************************
!
!   Function    : Edit-arretes
!
!   Description : Conversion order edition
!
!*******************************************
BEGIN-PROCEDURE Edit-arretes

let $FP_NOTIF_REF1 = ' '

let $sql-statement = 'FPA710.SQR, Edit-arretes,Select,PS_FPMACTION_TBL'
BEGIN-SELECT DISTINCT On-Error=SQL-Error

FP_EDITIDVDEC,
FP_EDITCOLDEC

from PS_FPMACTION_TBL

Where ACTION = $action
and EFF_STATUS = 'A'
and EFFDT =
        (
          select max(AR.EFFDT) from PS_FPMACTION_TBL AR
          where AR.EFFDT <= {DATEIN-PREFIX}$Effdt_out{DATEIN-SUFFIX}
        )

END-SELECT

do rtrim_nnull(&FP_EDITIDVDEC,$FP_EDITIDVDEC)
do rtrim_nnull(&FP_EDITCOLDEC,$FP_EDITCOLDEC)

if $FP_EDITIDVDEC = 'Y' or  $FP_EDITCOLDEC = 'Y'


let $sql-statement = 'FPA710.SQR, Edit-arretes,Select,PS_FPMACTION_TBL'
BEGIN-SELECT DISTINCT On-Error=SQL-Error

FP_REFCOL_PS,
FP_COLDECINCR

from PS_FPMSYSTEM_TBL

END-SELECT

Let #FP_REFCOL_PS = &FP_REFCOL_PS
Let #FP_COLDECINCR = &FP_COLDECINCR
!do rtrim_nnull(&FP_EDITIDVDEC,$FP_EDITIDVDEC)
!do rtrim_nnull(&FP_EDITCOLDEC,$FP_EDITCOLDEC)


! Variables increment
!--------------------
Let #FP_COLDECINCR = #FP_COLDECINCR + 1
Let $FP_NOTIF_REF1 = to_char(#FP_COLDECINCR)
!do rtrim_nnull($FP_NOTIF_REF1,$FP_NOTIF_REF1)

Let $FP_NOTIF_REF1 = Lpad($FP_NOTIF_REF1,8,'0')

if $FP_EDITCOLDEC = 'Y'
  Let #FP_REFCOL_PS = #FP_REFCOL_PS + 1
end-if


! Create a row in fpaeenotice
!----------------------------
!let $sql-statement = 'FPA710.SQR, Edit-arretes ,select,PS_FPAEENOTICE'
!BEGIN-SELECT On-Error=SQL-Error
!TS1.EMPLID

!  do rtrim_nnull(&TS1.EMPLID,$ts_tmp2)

!from PS_FPAEENOTICE TS1
!where TS1.EMPLID = $emplid
!and TS1.EMPL_RCD = #empl_rcd
!and TS1.FP_NOTIF_REF = $FP_NOTIF_REF1
!and TS1.FP_RETURN_R = ' '
!END-SELECT

!if isnull ($ts_tmp2) and ( $FP_EDITCOLDEC = 'Y' or $FP_EDITIVDDEC= 'Y' )
  do insert-arrete
!end-if

end-if

END-PROCEDURE Edit-arretes



!*******************************************
!
!   Function    : insert-arrete
!
!   Description :
!
!*******************************************
BEGIN-PROCEDURE insert-arrete

let $sql-statement = 'FPA710.SQR, Edit-arretes ,Insert,PS_FPAEENOTICE'
BEGIN-SQL On-Error=SQL-Error

INSERT INTO PS_FPAEENOTICE (EMPLID,
        EMPL_RCD,
        FP_NOTIF_REF,
        FP_RETURN_R,
        FP_TBL_CD,
        FP_EDITIDVDEC,
        FP_EDITCOLDEC,
        FP_IDV_ON_REQ,
        FP_COL_ON_REQ,
        FP_IDVEDIT_DT,
        FP_COLEDIT_DT,
        FP_COLDEC_NBR,
        FP_REFCOL_PS,
        FP_DEC_ABROG,
        FP_DEC_ABROG_DT,
        FP_EDIT_ABROG,
        ACTION,
        FP_EDT_TMP,
        FP_EDT_FNL,
        FP_IDVDEC_NBR,
        LAST_UPDATE_DATE)
VALUES
        ($emplid ,                      ! EMPLID,
        #empl_rcd,                      ! EMPL_RCD,
        $FP_NOTIF_REF1,                 ! FP_NOTIF_REF,
        ' ',                            ! FP_RETURN_R,
        'C',                            ! FP_TBL_CD,
        $FP_EDITIDVDEC,                 ! FP_EDITIDVDEC,
        $FP_EDITCOLDEC,                 ! FP_EDITCOLDEC,
        'N',                            ! FP_IDV_ON_REQ,
        'N',                            ! FP_COL_ON_REQ,
        null,                           ! FP_IDVEDIT_DT,
        null,                           ! FP_COLEDIT_DT,
        '0',                            ! FP_COLDEC_NBR,
        #FP_REFCOL_PS,                  ! FP_REFCOL_PS,
        'N',                            ! FP_DEC_ABROG,
        null,                           ! FP_DEC_ABROG_DT,
        'N',                            ! FP_EDIT_ABROG,
        $action,                        ! ACTION,
        ' ',                            ! FP_EDT_TMP,
        ' ',                            ! FP_EDT_FNL,
        ' ',                            ! FP_IDVDEC_NBR,
        {DATEIN-PREFIX}$AsOfToday{DATEIN-SUFFIX})                     ! LAST_UPDATE_DATE

END-SQL

let $sql-statement = 'FPA710.SQR, Edit-arretes ,Update,PS_FPMSYSTEM_TBL'
BEGIN-SQL On-Error=SQL-Error

UPDATE PS_FPMSYSTEM_TBL SET
FP_COLDECINCR = #FP_COLDECINCR,
FP_REFCOL_PS = #FP_REFCOL_PS

END-SQL


!let $sql-statement = 'FPA710.SQR, Edit-arretes ,Update,PS_FPAEECAREERBIS'
!BEGIN-SQL On-Error=SQL-Error

!UPDATE PS_FPAEECAREER SET

!FP_NOTIF_REF = $FP_NOTIF_REF1

!Where EMPLID = $emplid
!AND EMPL_RCD = #empl_rcd
!AND EFFDT = {DATEIN-PREFIX}$Effdt_out{DATEIN-SUFFIX}
!AND EFFSEQ = #effseq

!END-SQL

END-PROCEDURE insert-arrete



!*******************************************
!
!   Function    : retro
!
!   Description : Create retroactivity instances
!
!*******************************************
BEGIN-PROCEDURE retro

Let $FP_RETROSPECT = 'Y'

!let $sql-statement = 'FPA710.SQR, retro ,Update,PS_FPAEECAREER'
!BEGIN-SQL On-Error=SQL-Error

!update PS_FPAEECAREER set

!FP_RETROSPECT = $FP_RETROSPECT

!Where EMPLID = $emplid
!AND EMPL_RCD = #empl_rcd
!AND EFFDT = {DATEIN-PREFIX}$Effdt_out{DATEIN-SUFFIX}
!AND EFFSEQ = #effseq

!END-SQL

let $sql-statement = 'FPA710.SQR, retro ,Select,PS_FPAEERETROSP'
BEGIN-SELECT On-Error=SQL-Error

TST.EMPLID

 do rtrim_nnull(&TST.EMPLID, $tmp_tst)

from PS_FPAEERETROSP    TST
    ,PS_FPFAST_PERS_VW2 SCRTY       !SQR security

where TST.EMPLID = $emplid
and TST.EMPL_RCD = #empl_rcd
and TST.EFFDT = {DATEIN-PREFIX}$effdt_out{DATEIN-SUFFIX}
and TST.EFFSEQ = #effseq

and TST.EMPLID = SCRTY.EMPLID       !
and TST.EMPL_RCD = SCRTY.EMPL_RCD   !SQR security
[$SecurityClause]                   !

END-SELECT

if isnull($tmp_tst)
  do insert-retrosp
end-if

END-PROCEDURE retro



!*******************************************
!
!   Function    : insert-retrosp
!
!   Description :
!
!*******************************************
BEGIN-PROCEDURE insert-retrosp

let $sql-statement = 'FPA710.SQR, retro ,Insert,PS_FPAEERETROSP'
BEGIN-SQL On-Error=SQL-Error

INSERT INTO PS_FPAEERETROSP (EMPLID,
EMPL_RCD,
EFFDT,
EFFSEQ,
FP_CNL_ROW,
FP_INST_STAT,
FP_ACTION_REF,
FP_NOTIF_REF,
ACTION,
ACTION_REASON,
FP_TBL_CD)

VALUES ($emplid,
#empl_rcd,
{DATEIN-PREFIX}$effdt_out{DATEIN-SUFFIX},
#effseq,
' ',
$fp_inst_stat,
' ',
' ',
$action,
$action_reason,
$fp_tbl_cd)

END-SQL

END-PROCEDURE insert-retrosp



!**********************************************
!
!   Function    : rtrim_nnull
!
!   Description : rtrim if $nom_in is null
!
!       INPUT   : $nom_in
!       OUTPUT  : $nom_out
!
!**********************************************
BEGIN-PROCEDURE rtrim_nnull($nom_in,:$nom_out)

let $nom_out = rtrim($nom_in,' ')
if isnull($nom_out)
  let $nom_out = ' '
end-if

END-PROCEDURE rtrim_nnull



!**********************************************
!
!   Function    : Var-Init
!
!   Description : variables initialization
!
!***************************************************************
BEGIN-PROCEDURE Var-Init


 Do Convert-To-DTU-Date (&EFFDT,$Effdt)
 Do Convert-from-DTU-Date ($Effdt,$Effdt_out)
 do convert-to-DTU-Date($AsOfToday,$Today-dat)

do rtrim_nnull(&FP_CONVERSION_ID,$FP_CONVERSION_ID)
do rtrim_nnull(&EMPLID,$EMPLID)
Let #Empl_rcd = &EMPL_RCD
Let #EFFSEQ = &EFFSEQ
do rtrim_nnull (&NAME,$NAME)
do rtrim_nnull (&FP_CONV_STAT,$FP_CONV_STAT)
do rtrim_nnull (&FP_ACTION_REF,$FP_ACTION_REF)
do rtrim_nnull (&FP_NOTIF_REF,$FP_NOTIF_REF)
do rtrim_nnull (&FP_CNL_ROW,$FP_CNL_ROW)
do rtrim_nnull (&FP_INST_STAT,$FP_INST_STAT)
do rtrim_nnull (&ACTION,$ACTION)
do rtrim_nnull (&FP_ACTION_DES,$FP_ACTION_DES)
do rtrim_nnull (&ACTION_REASON,$ACTION_REASON)
do rtrim_nnull (&FP_RANK_CD,$FP_RANK_CD)
do rtrim_nnull (&FP_RANK_DESC,$FP_RANK_DESC)
do rtrim_nnull (&FP_STEP_CD,$FP_STEP_CD)
let #FP_STEP_NO = &FP_STEP_NO
let #FP_GROSS_IND = &FP_GROSS_IND
let #FP_INCS_IND = &FP_INCS_IND
do rtrim_nnull (&FP_PROM_LCK,$FP_PROM_LCK)
Let #FP_SENTOSTPDY = &FP_SENTOSTPDY
Let #FP_SENTOSTPMN = &FP_SENTOSTPMN
Let #FP_SENTOSTPYR = &FP_SENTOSTPYR
Let #FP_SENINSTPDY = &FP_SENINSTPDY
Let #FP_SENINSTPMN = &FP_SENINSTPMN
Let #FP_SENINSTPYR = &FP_SENINSTPYR
Let #FP_TRUESEN_DY = &FP_TRUESEN_DY
Let #FP_TRUESEN_MN = &FP_TRUESEN_MN
Let #FP_TRUESEN_YR = &FP_TRUESEN_YR
Let #FP_SENTRANSDY = &FP_SENTRANSDY
Let #FP_SENTRANSMN = &FP_SENTRANSMN
Let #FP_SENTRANSYR = &FP_SENTRANSYR
Let #FP_SENKEPT_DY = &FP_SENKEPT_DY
Let #FP_SENKEPT_MN = &FP_SENKEPT_MN
Let #FP_SENKEPT_YR = &FP_SENKEPT_YR
Let #FP_SENRAN_DY = &FP_SENRAN_DY
Let #FP_SENRAN_MN = &FP_SENRAN_MN
Let #FP_SENRAN_YR = &FP_SENRAN_YR
Let #FP_SENCOR_DY = &FP_SENCOR_DY
Let #FP_SENCOR_MN = &FP_SENCOR_MN
Let #FP_SENCOR_YR = &FP_SENCOR_YR
Let #FP_DURSTEP_DY = &FP_DURSTEP_DY
Let #FP_DURSTEP_MN = &FP_DURSTEP_MN
Let #FP_DURSTEP_YR = &FP_DURSTEP_YR
Let #FP_DURRAN_DY = &FP_DURRAN_DY
Let #FP_DURRAN_MN = &FP_DURRAN_MN
Let #FP_DURRAN_YR = &FP_DURRAN_YR
Let #FP_DURCOR_DY = &FP_DURCOR_DY
Let #FP_DURCOR_MN = &FP_DURCOR_MN
Let #FP_DURCOR_YR = &FP_DURCOR_YR
Let #FP_SENEQSTP_DY = &FP_SENEQSTP_DY
Let #FP_SENEQSTP_MN = &FP_SENEQSTP_MN
Let #FP_SENEQSTP_YR = &FP_SENEQSTP_YR
Let #FP_SENENTRK_DY = &FP_SENENTRK_DY
Let #FP_SENENTRK_MN = &FP_SENENTRK_MN
Let #FP_SENENTRK_YR = &FP_SENENTRK_YR
Let #FP_SENENTCRP_DY = &FP_SENENTCRP_DY
Let #FP_SENENTCRP_MN = &FP_SENENTCRP_MN
Let #FP_SENENTCRP_YR = &FP_SENENTCRP_YR
Let #FP_SENENTCTG_DY = &FP_SENENTCTG_DY
Let #FP_SENENTCTG_MN = &FP_SENENTCTG_MN
Let #FP_SENENTCTG_YR = &FP_SENENTCTG_YR
do rtrim_nnull (&FP_SEN_CALC,$FP_SEN_CALC)
do rtrim_nnull (&FP_CLD_INST,$FP_CLD_INST)
do rtrim_nnull (&FP_CLD_STEP,$FP_CLD_STEP)
let $FP_FOR_PROM_DT = &FP_FOR_PROM_DT
let $FP_STEP_END_DT = &FP_STEP_END_DT
let $FP_RK_ENT_DT = &FP_RK_ENT_DT
do rtrim_nnull (&FP_CORPS_CD,$FP_CORPS_CD)
do rtrim_nnull (&FP_CORPS_DES,$FP_CORPS_DES)
let $FP_CHG_COR_DT = &FP_CHG_COR_DT
do rtrim_nnull (&FP_CATG_FP,$FP_CATG_FP)
do rtrim_nnull (&FP_TRAINEE,$FP_TRAINEE)
do rtrim_nnull (&FP_TRNE_POSN,$FP_TRNE_POSN)
do rtrim_nnull (&FP_CATG_LEVEL,$FP_CATG_LEVEL)
do rtrim_nnull (&FP_TBL_CD,$FP_TBL_CD)
do rtrim_nnull (&FP_CHG_IND,$FP_CHG_IND)
let $FP_APPL_SAL_DT = &FP_APPL_SAL_DT
do rtrim_nnull (&FP_ROW_CD,$FP_ROW_CD)
let $FP_NOMINATION_DT = &FP_NOMINATION_DT
do rtrim_nnull (&FP_RK_TRIALPD,$FP_RK_TRIALPD)
let $FP_RK_PD_END_DT = &FP_RK_PD_END_DT
do rtrim_nnull (&FP_SANCTION,$FP_SANCTION)
do rtrim_nnull (&FP_DOWN_GRA,$FP_DOWN_GRA)
let $FP_UPDT_PR_DT = &FP_UPDT_PR_DT
do rtrim_nnull (&FP_RETROSPECT,$FP_RETROSPECT)
do rtrim_nnull (&FP_SETID_RANK,$FP_SETID_RANK)
do rtrim_nnull (&FP_EQUIV_STEP,$FP_EQUIV_STEP)
do rtrim_nnull (&FP_SETID_CA,$FP_SETID_CA)
do rtrim_nnull (&FP_COMM_ACNT_ID,$FP_COMM_ACNT_ID)
do rtrim_nnull (&FP_PROM_OK,$FP_PROM_OK)
do rtrim_nnull (&FP_PROPD_BRK,$FP_PROPD_BRK)
do rtrim_nnull (&FP_PRO_ACCESS,$FP_PRO_ACCESS)
do rtrim_nnull (&FP_STFBDG_LVL1,$FP_STFBDG_LVL1)
do rtrim_nnull (&FP_STFBDG_LVL3,$FP_STFBDG_LVL3)
let $LAST_UPDATE_DATE = &LAST_UPDATE_DATE
let $FP_NX_STP_CD = ' '

END-PROCEDURE Var-Init



#include 'stdapi.sqc'         ! Routines to update run status
#include 'fptestdt.sqc'     ! Routines for date and time formatting (FPS)
#include 'curdttim.sqc'       ! Get-Current-DateTime procedure
#include 'hrrnctl1.sqc'       ! Get run control parameter values
#include 'hrgetval.sqc'       ! Get values mask routines
#include 'number.sqc'         ! Routines to format numbers
#include 'fprnctl1.sqc'       ! Get run control parameter values (FPS)
#include 'fpgetval.sqc'       ! Get values mask routines (FPS)
#Include 'hrsecty.sqc'        ! Get SQR Security parameters
#include 'sqrtrans.sqc'       ! Translate SQR strings to given language
