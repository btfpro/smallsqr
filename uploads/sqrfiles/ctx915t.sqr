!***********************************************************************
!  CTX915T:    PRINT T4 Summary and/or Segment Reports                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!                                                                      *
!                                                                      *
!                                                                      *
! This software and related documentation are provided under a         *
! license agreement containing restrictions on use and                 *
! disclosure and are protected by intellectual property                *
! laws. Except as expressly permitted in your license agreement        *
! or allowed by law, you may not use, copy, reproduce,                 *
! translate, broadcast, modify, license, transmit, distribute,         *
! exhibit, perform, publish or display any part, in any form or        *
! by any means. Reverse engineering, disassembly, or                   *
! decompilation of this software, unless required by law for           *
! interoperability, is prohibited.                                     *
! The information contained herein is subject to change without        *
! notice and is not warranted to be error-free. If you find any        *
! errors, please report them to us in writing.                         *
!                                                                      *
!                                                                      *
! Copyright (C) 1988, 2010, Oracle and/or its affiliates.              *
! All Rights Reserved.                                                 *
!***********************************************************************
!***********************************************************************
!                                                                      *
!          $Date:  2010/11/02:12:51:03                                 !
!       $Release:  HR9                                                 !
!    $Resolution:  813289                                              !
!                                                                      *
!***********************************************************************

#include 'setenv.sqc' !Set environment
#Include 'setup32.sqc'  !printer and page-size init
#Include 'ctxrnctl.sqc'  !Get-Tax-Reporting-Run-Controls procedure
#define TAXFORM_BOX
#include 'rellang.sqc'

begin-heading 5
  #Include 'stdhdgtr.sqc'
  print $Ctx915t_Company    (3,1)
  print $PrintCompany       (0,13)
  print $TaxYear           (3,,)      center
end-heading

begin-report

  do Init-Report

  do Process-Main

  close 4
  close 5

#ifdef PRCSSCHD
  do StdAPI-Term
#endif

end-report

begin-procedure Init-Report

  do Init-DateTime

  #ifdef PRCSSCHD
     do StdAPI-Init
  #endif

   do Initialization

end-procedure

begin-procedure Initialization

#define ColR 120

  move 'N' to $SummaryAtEnd
  move 'N' to $SegmentAtEnd
  move 'N' to $GovtSortSeq

  do Get-Current-DateTime

  move '1' to $Year4
  move '-' to $DDelimiter
  do Format-DateTime($AsOfToday, $AsOfDateYMD, {DEFYMD},'','')
  move $AsOfDateYMD to $AsOfYear xxxx

  move $AsOfYear  to #AsOfYear
  subtract 1 from #AsOfYear

  do Get-Can-Tax-Processing-Params

  move &TX.Balance_Year to #TaxYear
  move #TaxYear to $TaxYear 9999

  let $AsOfDate = $TaxYear || '1231'
  do Format-DateTime($AsOfDate, $AsOfDate, {DEFCMP},'','native')

   if &TX.Balance_Year <> #AsOfYear and $Prcs_Process_Instance = ''
    display 'TX.Calendar Year is  ' noline
    display $TaxYear
    display 'As of year plus 1 is ' noline
    display $AsOfYear
    display ''
    display 'Current Year is not one greater than Tax Reporting Year.'
    input $Answer maxlen=1 'Current Year is not one greater than Tax Reporting Year. Do you want to continue? (Y/N)'
    uppercase $Answer

    if $Answer <> 'Y'
      stop
    end-if
  end-if

  do Open-Files

   if $PRCS_Process_Instance = ''
     do Prompts
   else
#ifdef PRCSSCHD
       do Select-Canadian-YrEnd-Parameters
       do Convert-Parameters
#endif
   end-if

  move 'CTX915T' to $ReportID
  do Get-Report-Language          ! Procedure that decides the report language
                                  ! and then calls 'Report-Translation' procedure
                                  ! that reads the language dep. text.

  if $Rpts = 'S'
     move $Ctx915t_Title_t4_summ to $ReportTitle
     display 'PRINTING T4 SUMMARY DATA ONLY'
  else
     move $Ctx915t_Title_t4_seg_summ to $ReportTitle
     display 'PRINTING T4 SUMMARY AND SEGMENT DATA'
  end-if

  do Array-Create
  do Load-Box-Arrays
  do Delete-Work-Table
  do Load-Work-Table

  do Format-Messages

end-procedure

!>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
!Read language-dependent text from the database.

begin-procedure Report-Translation        ! Read from CTX915T  program ids

   do Init_Report_Translation($ReportID,$Language_Cd)

   do Get_Field_Information ('CTX915T', 'TITLE_T4_SUMM'     , $Ctx915t_Title_t4_summ     , #dummy_width)
   do Get_Field_Information ('CTX915T', 'TITLE_T4_SEG_SUMM' , $Ctx915t_Title_t4_seg_summ , #dummy_width)
   do Get_Field_Information ('CTX915T', 'COMPANY'           , $Ctx915t_Company           , #dummy_width)
   do Get_Field_Information ('CTX915T', 'T4_SUMM_DATA'      , $Ctx915t_T4_summ_data      , #dummy_width)
   do Get_Field_Information ('CTX915T', 'BUS_NUMBER'        , $Ctx915t_Bus_number        , #dummy_width)
   do Get_Field_Information ('CTX915T', 'TYPE_CODE'         , $Ctx915t_Type_code         , #dummy_width)
   do Get_Field_Information ('CTX915T', 'WAGELS_PLAN'       , $Ctx915t_Wagels_plan       , #dummy_width)
   do Get_Field_Information ('CTX915T', 'TOT_SUPP'          , $Ctx915t_Tot_supp          , #dummy_width)
   do Get_Field_Information ('CTX915T', 'USA_EMPL'          , $Ctx915t_Usa_empl          , #dummy_width)
   do Get_Field_Information ('CTX915T', 'TOT_ER_CPP'        , $Ctx915t_Tot_er_cpp        , #dummy_width)
   do Get_Field_Information ('CTX915T', 'TOT_ER_EI'         , $Ctx915t_Tot_er_ei         , #dummy_width)
   do Get_Field_Information ('CTX915T', 'T4_SEG_DATA'       , $Ctx915t_T4_seg_data       , #dummy_width)
   do Get_Field_Information ('CTX915T', 'EMPL_NAME'         , $Ctx915t_Empl_name         , #dummy_width)
   do Get_Field_Information ('CTX915T', 'T4_COUNT'          , $Ctx915t_T4_count          , #dummy_width)
   do Get_Field_Information ('CTX915T', 'SEG_SURNAME1'      , $Ctx915t_Seg_surname1      , #dummy_width)
   do Get_Field_Information ('CTX915T', 'SEG_SURNAME2'      , $Ctx915t_Seg_surname2      , #dummy_width)
   do Get_Field_Information ('CTX915T', 'EMPLER_NUMBER'     , $Ctx915t_Empler_number     , #dummy_width)
   do Get_Field_Information ('CTX915T', 'SEG_NUMBER'        , $Ctx915t_Seg_number        , #dummy_width)
   do Get_Field_Information ('CTX915T', 'TOT_SEG'           , $Ctx915t_Tot_seg           , #dummy_width)


end-procedure

begin-procedure Open-Files

#ifdef MPE
    open 'CTX910T1.DAT' as 4 for-reading record=173:fixed
    open 'CTX910T2.DAT' as 5 for-reading record=192:fixed
#else
    open '{IMPORTPREFIX}CTX910T1{IMPORTSUFFIX}' as 4 for-reading record=173:fixed
    open '{IMPORTPREFIX}CTX910T2{IMPORTSUFFIX}' as 5 for-reading record=192:fixed
#endif

do Read-Segment

if $SegmentAtEnd = 'N'
    move 'Y' to $GovtSortSeq
    close 5
    #ifdef MPE
       open 'CTX910T2.DAT' as 5 for-reading record=192:fixed
    #else
       open '{IMPORTPREFIX}CTX910T2{IMPORTSUFFIX}' as 5 for-reading record=192:fixed
    #endif
end-if

end-procedure

begin-procedure Prompts

  display '   '
  display 'Select the report(s) you wish to print.'
  display '   For SUMMARY reports only,  enter:  S '
  display '   For both SUMMARY and SEGMENT reports, enter:  X '
  display '        To  Quit,  enter:  Q '
  display 'Note that data for SEGMENT reports was generated only if you '
  display 'printed your forms in the government reporting sequence.'
  display '  '

  while $Rpts = ''
    input $Rpts 'S (Summary), X (Summary and Segment), or Q  to quit'
    uppercase $Rpts
    if INSTR('SXQ',$Rpts, 1) = 0
      display ' '
      display '***** Enter S, X, or Q *****'
      display ' '
      move '' to $Rpts
    end-if
  end-while

  if $Rpts = 'Q'
     stop
  end-if

  if $Rpts = 'S'
     move 'Y' to $SegmentAtEnd
  end-if

  if $Rpts = 'X'
    move 'Y' to $SegmtandSumm
  end-if

end-procedure


begin-procedure Array-Create

  create-array name=PrT4_Area size=50 -
    field=PT4_Box:char                -
    field=PT4_Descr:char

end-procedure

begin-procedure Delete-Work-Table

begin-SQL  on-error=Ignore
  DELETE FROM PS_R_CTX915T_SORT;
end-SQL

end-procedure

begin-procedure Ignore
  !Dummy procedure to avoid error if no records to delete
end-procedure

begin-procedure Load-Work-Table

  let #seqno = 0

  while 1 = 1

    do Read-Summary

    if $SummaryAtEnd = 'Y'
        break
    else

        move $TotalSupplementary    to #TotalSupplementary
        move $TotalIncome           to #TotalIncome
        move $TotalEeCPPContrib     to #TotalEeCPPContrib
        move $TotalEeUIPrem         to #TotalEeUIPrem
        move $TotalRegPPContrib     to #TotalRegPPContrib
        move $TotalIncomeTax        to #TotalIncomeTax
        move $TotalPensionAdj       to #TotalPensionAdj
        move $TotalUIInsErns        to #TotalUIInsErns
        move $TotalErCPPContrib     to #TotalErCPPContrib
        move $TotalErUIPrem         to #TotalErUIPrem
        move $USACount              to #USACount
        move $SaveSegmentNumber     to #SaveSegmentNumber

        begin-SQL  on-error=SQL-ERROR
        INSERT INTO PS_R_CTX915T_SORT (SEQNO,
                             CTX_TYPE_CODE,
                             WAGE_LOSS_PLAN,
                             REPORTING_ID,
                             TOT_SUPPLEMENTARY,
                             TTL_INCOME,
                             TOT_EECPP_CONTR,
                             TOT_EE_EI_PREM,
                             TOT_REGPP_CONTR,
                             TOT_INCOME_TAX,
                             TOT_PENS_ADJ,
                             TOT_EI_INS_EARNS,
                             TOT_ERCPP_CONTR,
                             TOT_ER_EI_PREM,
                             TOT_USA_COUNT,
                             SAVE_SEGM_NUMBER,
                             CTX_SORT_CODE,
                             CTX_PLAN_A,
                             CTX_PLAN_B,
                             CTX_PLAN_C,
                             COMPANY)
                     VALUES (#seqno,
                             $TypeCode,
                             $Wage_Loss_Plan,
                             $ReportingID,
                             #TotalSupplementary,
                             #TotalIncome,
                             #TotalEeCPPContrib,
                             #TotalEeUIPrem,
                             #TotalRegPPContrib,
                             #TotalIncomeTax,
                             #TotalPensionAdj,
                             #TotalUIInsErns,
                             #TotalErCPPContrib,
                             #TotalErUIPrem,
                             #USACount,
                             #SaveSegmentNumber,
                             $SortCode,
                             $PlanA,
                             $PlanB,
                             $PlanC,
                             $Company);
        End-SQL

        let #seqno = #seqno + 1

    end-if

  end-while

end-procedure

begin-procedure Load-Box-Arrays

    move 0 to #i

begin-SELECT
M.TAXFORM_ID
M.BOX
M.DESCR
M.EFFDT

   let $M.BOX = RTRIM(&M.BOX, ' ')
   let $TAXFORM_BOX-DESCR = &M.DESCR

   do Get_Related_TAXFORM_BOX(&M.BOX,&M.EFFDT,&M.TAXFORM_ID)

   put $M.Box $TAXFORM_BOX-DESCR into PrT4_Area(#i)
         PT4_Box PT4_Descr
       add 1 to #i
       move #i to #max_T4boxes



FROM PS_TAXFORM_BOX M
WHERE TAXFORM_ID = 'T' AND
      EFFDT = (SELECT MAX(EFFDT)
               FROM PS_TAXFORM_BOX
               WHERE TAXFORM_ID = 'T'
                 AND EFFDT <= $AsOfDate)
ORDER BY M.BOX ASC
end-SELECT

end-procedure


begin-procedure Format-Messages

 move 0 to #i

  while #i <= #max_T4boxes

        get $PrBox $PrDescr from PrT4_Area(#i)
                   PT4_Box PT4_Descr
        let $MsgBox = RTRIM($PrBox, ' ')
        let $MsgSum   = RTRIM($PrDescr, ' ')

        evaluate $MsgBox
        when = '14'
           let $Sum14 = $MsgSum
           break
        when = '16'
           let $Sum16 = $MsgSum
           break
        when = '18'
           let $Sum18 = $MsgSum
           break
        when = '20'
           let $Sum20 = $MsgSum
           break
        when = '22'
           let $Sum22 = $MsgSum
           break
        when = '24'
           let $Sum24 = $MsgSum
           break
        when = '52'
           let $Sum52 = $MsgSum
           break
        when-other
           break

        end-evaluate

        add 1 to #i

end-while

end-procedure

begin-procedure Process-Main

  move 'N' to $PrintSeg

  if $GovtSortSeq = 'N'
     do Process-Summary
  else
     do Process-Summ-Segmt
  end-if

end-procedure

begin-procedure Process-Summary

begin-SELECT
W.CTX_TYPE_CODE
W.WAGE_LOSS_PLAN
W.REPORTING_ID
W.CTX_SORT_CODE
W.COMPANY
#ifdef DB2ALL
DECIMAL(SUM(W.TOT_SUPPLEMENTARY),15,3) &Tot_supplemt
DECIMAL(SUM(W.TTL_INCOME),15,3)        &Tot_income
DECIMAL(SUM(W.TOT_EECPP_CONTR),15,3)   &Tot_eecpp_contr
DECIMAL(SUM(W.TOT_EE_EI_PREM),15,3)    &Tot_eeei_prem
DECIMAL(SUM(W.TOT_REGPP_CONTR),15,3)   &Tot_regpp_contr
DECIMAL(SUM(W.TOT_INCOME_TAX),15,3)    &Tot_income_tax
DECIMAL(SUM(W.TOT_PENS_ADJ),15,3)      &Tot_pens_adj
DECIMAL(SUM(W.TOT_EI_INS_EARNS),15,3)  &Tot_eiins_ern
DECIMAL(SUM(W.TOT_ERCPP_CONTR),15,3)   &Tot_ercpp_contr
DECIMAL(SUM(W.TOT_ER_EI_PREM),15,3)    &Tot_erei_prem
DECIMAL(SUM(W.TOT_USA_COUNT),15,3)     &Tot_usa_count
DECIMAL(SUM(W.SAVE_SEGM_NUMBER),15,3)  &Save_segm_numb
#else
SUM(W.TOT_SUPPLEMENTARY)  &Tot_supplemt
SUM(W.TTL_INCOME)         &Tot_income
SUM(W.TOT_EECPP_CONTR)    &Tot_eecpp_contr
SUM(W.TOT_EE_EI_PREM)     &Tot_eeei_prem
SUM(W.TOT_REGPP_CONTR)    &Tot_regpp_contr
SUM(W.TOT_INCOME_TAX)     &Tot_income_tax
SUM(W.TOT_PENS_ADJ)       &Tot_pens_adj
SUM(W.TOT_EI_INS_EARNS)   &Tot_eiins_ern
SUM(W.TOT_ERCPP_CONTR)    &Tot_ercpp_contr
SUM(W.TOT_ER_EI_PREM)     &Tot_erei_prem
SUM(W.TOT_USA_COUNT)      &Tot_usa_count
SUM(W.SAVE_SEGM_NUMBER)   &Save_segm_numb
#end-if

    move &W.Ctx_type_Code to $TypeCode
    move &W.Wage_loss_plan to $Wage_Loss_Plan
    move &W.Reporting_id to $ReportingID
    move &Tot_supplemt to #TotalSupplementary
    move &Tot_income to #TotalIncome
    move &Tot_eecpp_contr  to #TotalEeCPPContrib
    move &Tot_eeei_prem to #TotalEeUIPrem
    move &Tot_regpp_contr to #TotalRegPPContrib
    move &Tot_income_tax to #TotalIncomeTax
    move &Tot_pens_adj to #TotalPensionAdj
    move &Tot_eiins_ern to #TotalUIInsErns
    move &Tot_ercpp_contr  to #TotalErCPPContrib
    move &Tot_erei_prem  to #TotalErUIPrem
    move &Tot_usa_count  to #USACount
    move &Save_segm_numb  to #SaveSegmentNumber
    move &W.Ctx_sort_code to $SortCode
    move &W.Company to $Company

    move $ReportingID to $SummaryID

    move $Company to $PrintCompany
    do Print-Summary


FROM PS_R_CTX915T_SORT W
GROUP BY W.COMPANY, W.REPORTING_ID, W.WAGE_LOSS_PLAN, W.CTX_TYPE_CODE, W.CTX_SORT_CODE
ORDER BY W.COMPANY, W.REPORTING_ID, W.WAGE_LOSS_PLAN ASC
end-SELECT

end-procedure

begin-procedure Process-Summ-Segmt

begin-SELECT
W2.CTX_TYPE_CODE
W2.WAGE_LOSS_PLAN
W2.REPORTING_ID
W2.CTX_SORT_CODE
W2.COMPANY
W2.TOT_SUPPLEMENTARY
W2.TTL_INCOME
W2.TOT_EECPP_CONTR
W2.TOT_EE_EI_PREM
W2.TOT_REGPP_CONTR
W2.TOT_INCOME_TAX
W2.TOT_PENS_ADJ
W2.TOT_EI_INS_EARNS
W2.TOT_ERCPP_CONTR
W2.TOT_ER_EI_PREM
W2.TOT_USA_COUNT
W2.SAVE_SEGM_NUMBER
W2.SEQNO

    move &W2.Ctx_type_Code to $TypeCode
    move &W2.Wage_loss_plan to $Wage_Loss_Plan
    move &W2.Reporting_id to $ReportingID
    move &W2.Tot_supplementary to #TotalSupplementary
    move &W2.Ttl_income to #TotalIncome
    move &W2.Tot_eecpp_contr  to #TotalEeCPPContrib
    move &W2.Tot_ee_ei_prem to #TotalEeUIPrem
    move &W2.Tot_regpp_contr to #TotalRegPPContrib
    move &W2.Tot_income_tax to #TotalIncomeTax
    move &W2.Tot_pens_adj to #TotalPensionAdj
    move &W2.Tot_ei_ins_earns to #TotalUIInsErns
    move &W2.Tot_ercpp_contr  to #TotalErCPPContrib
    move &W2.Tot_er_ei_prem  to #TotalErUIPrem
    move &W2.Tot_usa_count  to #USACount
    move &W2.Save_segm_number  to #SaveSegmentNumber
    move &W2.Ctx_sort_code to $SortCode
    move &W2.Company to $Company

    move $ReportingID to $SummaryID

    if $SegmentAtEnd = 'Y'
        move $Company to $PrintCompany
        do Print-Summary
    else
        if $PrintSeg = 'Y'
           move $Company to $PrintCompany
           do Print-Segment
           move 'N' to $PrintSeg
        end-if
        do Process-Segment
    end-if


FROM PS_R_CTX915T_SORT W2
ORDER BY W2.SEQNO
end-SELECT

end-procedure

begin-procedure Process-Segment

  while 1 = 1

     if $SegmentAtEnd <> 'Y'
        do Read-Segment

        if $SegmentAtEnd = 'Y'
            move $Company to $PrintCompany
            do Print-Summary
            break
        else
           move $Company to $PrintCompany
           if rtrim($SummaryID, ' ')  = rtrim($SegmentID, ' ')
              do Print-Segment
           else
              do Print-Summary
              move 'Y' to $PrintSeg
              break
           end-if
        end-if
      end-if
   end-while

end-procedure

begin-procedure Read-Summary

  read 4 into $SumInput:173

  if #end-file = 1
    move 'Y' to $SummaryAtEnd
  else

    let $TypeCode             = substr($SumInput,1,3)       !   1-3
    let $Wage_Loss_Plan       = substr($SumInput,4,3)       !   4-6
    let $ReportingID          = substr($SumInput,7,16)      !   7-22
    let $TotalSupplementary   = substr($SumInput,23,7)      !  23-29
    let $TotalIncome          = substr($SumInput,30,13)     !  30-42
    let $TotalEeCPPContrib    = substr($SumInput,43,11)     !  43-53
    let $TotalEeUIPrem        = substr($SumInput,54,11)     !  54-64
    let $TotalRegPPContrib    = substr($SumInput,65,11)     !  65-75
    let $TotalIncomeTax       = substr($SumInput,76,13)     !  76-88
    let $TotalPensionAdj      = substr($SumInput,89,13)     !  89-101
    let $TotalUIInsErns       = substr($SumInput,102,13)    ! 102-114
    let $TotalErCPPContrib    = substr($SumInput,115,11)    ! 115-125
    let $TotalErUIPrem        = substr($SumInput,126,11)    ! 126-136
    let $USACount             = substr($SumInput,137,5)     ! 137-141
    let $SaveSegmentNumber    = substr($SumInput,142,7)     ! 142-148
    let $SortCode             = substr($SumInput,149,1)     ! 149
    let $PlanA                = substr($SumInput,150,7)     ! 150-156
    let $PlanB                = substr($SumInput,157,7)     ! 157-163
    let $PlanC                = substr($SumInput,164,7)     ! 164-170
    let $Company              = substr($SumInput,171,3)     ! 171-173

  end-if

end-procedure

begin-procedure Read-Segment

  read 5 into $SegInput:192

  if #end-file = 1
    move 'Y' to $SegmentAtEnd
  else
    let $CompanyName            = substr($SegInput,1,30)    !   1-30
    let $SegmentCount           = substr($SegInput,31,7)    !  31-37
    let $Segment_First_Surname  = substr($SegInput,38,30)   !  38-67
    let $Segment_Last_Surname   = substr($SegInput,68,30)   !  68-97
    let $RCTNumber              = substr($SegInput,98,16)   !  98-113
    let $Segment_Number         = substr($SegInput,114,7)   ! 114-120
    let $TotalIncomeSeg         = substr($SegInput,121,13)  ! 121-133
    let $TotalErCPPContribSeg   = substr($SegInput,134,11)  ! 134-144
    let $TotalEeUIPremSeg       = substr($SegInput,145,11)  ! 145-155
    let $TotalRegPPContribSeg   = substr($SegInput,156,11)  ! 156-166
    let $TotalIncomeTaxSeg      = substr($SegInput,167,13)  ! 167-179
    let $TotalPensionAdjSeg     = substr($SegInput,180,13)  ! 180-192

    move $RCTNumber to $SegmentID
  end-if

end-procedure


begin-procedure Print-Summary

     print    $Ctx915t_T4_summ_data        (+1,1)
     print    $Ctx915t_Bus_number          (+1,1)
     print    $ReportingID                 (0,40)
     print    $Ctx915t_Type_code           (+2,1)
     print    $TypeCode                    (0,40)
     print    $Ctx915t_Wagels_plan         (+1,1)
     print    $Wage_Loss_Plan              (0,40)
     print    $Ctx915t_Tot_supp            (+1,1)
     print    #TotalSupplementary          (0,40)  edit 99999
     print    $Ctx915t_Usa_empl            (+1,1)
     print    #USACount                    (0,40)  edit 99999
     print    $Sum14                       (+1,1)
     print    #TotalIncome                 (0,40)  edit 9999999999.99
     print    $Sum16                       (+1,1)
     print    #TotalEeCPPContrib           (0,40)  edit 9999999999.99
     print    $Sum18                       (+1,1)
     print    #TotalEeUIPrem               (0,40)  edit 9999999999.99
     print    $Ctx915t_Tot_er_ei           (+1,1)
     print    #TotalErUIPrem               (0,40)  edit 9999999999.99
     print    $Sum20                       (+1,1)
     print    #TotalRegPPContrib           (0,40)  edit 9999999999.99
     print    $Sum22                       (+1,1)
     print    #TotalIncomeTax              (0,40)  edit 9999999999.99
     print    $Sum24                       (+1,1)
     print    #TotalUIInsErns              (0,40)  edit 9999999999.99
     print    $Ctx915t_Tot_er_cpp          (+1,1)
     print    #TotalErCPPContrib           (0,40)  edit 9999999999.99
     print    $Sum52                       (+1,1)
     print    #TotalPensionAdj             (0,40)  edit 9999999999.99

     new-page

end-procedure

begin-procedure Print-Segment

  if $SegmtandSumm  = 'Y'

     print    $Ctx915t_T4_seg_data         (+1,1)
     print    $Ctx915t_Empl_name           (+2,1)
     print    $CompanyName                 (0,40)
     print    $Ctx915t_T4_count            (+1,1)
     let #SegmentCount = $SegmentCount
     print    #SegmentCount                (0,40)  edit 99999
     print    $Ctx915t_Seg_surname1        (+1,1)
     print    $Segment_First_Surname       (0,40)
     print    $Ctx915t_Seg_surname2        (+1,1)
     print    $Segment_Last_Surname        (0,40)
     print    $Ctx915t_Empler_number       (+1,1)
     print    $RCTNumber                   (0,40)
     print    $Ctx915t_Seg_number          (+1,1)
     let #SegmentNumber = $Segment_Number
     print    #SegmentNumber              (0,40) edit 99999
     print    $Ctx915t_Tot_seg             (+1,1)
     let #SaveSegmentNumber = $SaveSegmentNumber
     print    #SaveSegmentNumber           (0,40) edit 99999
     print    $Sum14                       (+1,1)
     let #TotalIncomeSeg = $TotalIncomeSeg
     print    #TotalIncomeSeg              (0,40)  edit 999999999.99
     print    $Sum16                       (+1,1)
     let #TotalErCPPContribSeg = $TotalErCPPContribSeg
     print    #TotalErCPPContribSeg        (0,40)  edit 999999999.99
     print    $Sum18                       (+1,1)
     let #TotalEeUIPremSeg = $TotalEeUIPremSeg
     print    #TotalEeUIPremSeg            (0,40)  edit 999999999.99
     print    $Sum20                       (+1,1)
     let #TotalRegPPContribSeg = $TotalRegPPContribSeg
     print    #TotalRegPPContribSeg        (0,40)  edit 999999999.99
     print    $Sum22                       (+1,1)
     let #TotalIncomeTaxSeg = $TotalIncomeTaxSeg
     print    #TotalIncomeTaxSeg           (0,40)  edit 999999999.99
     print    $Sum52                       (+1,1)
     let #TotalPensionAdjSeg = $TotalPensionAdjSeg
     print    #TotalPensionAdjSeg          (0,40)  edit 999999999

     new-page

  end-if

end-procedure

begin-procedure Convert-Parameters

if $RC_CAN_YE.T4_Summ_or_Segmt   = 'S'
        move 'Y' to $SegmentAtEnd
        move 'S' to $Rpts
end-if

if $RC_CAN_YE.T4_Summ_or_Segmt = 'X'
        move 'Y' to $SegmtandSumm
end-if

end-procedure


#Include 'curdttim.sqc'  !Get-Current-DateTime procedure
#Include 'datetime.sqc'  !Routines for date and time formatting
#Include 'number.sqc'    !Routines to format numbers
#Include 'getdptnm.sqc'  !Get-Department-Name
#ifdef PRCSSCHD
#Include 'ctxrctl1.sqc'   !Get-Can-Tax YE Report Parameters
#Include 'stdapi.sqc'     !Update Process API
#Include 'txrnctl1.sqc'   !Process Scheduler Run Controls
#endif
#Include 'sqrtrans.sqc'  !Translate SQR strings to given language
#Include 'getrplng.sqc'  !Get the report language
